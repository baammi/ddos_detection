source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1207999629
@global_var_1001a81c.3 = global i32 0
@global_var_1001a82c.4 = local_unnamed_addr global i32* @global_var_1001a81c.3
@global_var_1001a9fc.6 = global i32 0
@global_var_10000584.7 = constant [3 x i8] c";{\00"
@global_var_100005a4.8 = constant i32 939524096
@global_var_1001a994.10 = local_unnamed_addr global i32 0
@global_var_1001a998.12 = local_unnamed_addr global i32 0
@global_var_10000fcc.13 = constant i32 939524096
@global_var_10001584.14 = constant i32 939524096
@global_var_10001888.15 = constant [3 x i8] c"8`\00"
@global_var_10001908.16 = constant [3 x i8] c"8`\00"
@global_var_10001c58.17 = constant i32 939524096
@global_var_1000203c.18 = constant i32 939524096
@global_var_10002260.19 = constant i32 939524096
@global_var_1000260c.20 = constant i32 939524104
@global_var_10002630.21 = constant [3 x i8] c"9 \00"
@global_var_1000294c.22 = constant i32 939524096
@global_var_1000296c.23 = constant i32 939524096
@global_var_1000304c.24 = constant i32 939524096
@global_var_1000378c.25 = constant [3 x i8] c"8`\00"
@global_var_10003c34.26 = constant [3 x i8] c"9!\00"
@global_var_1001a978.27 = local_unnamed_addr global i32 268466568
@global_var_10003df4.28 = constant i32 1006646822
@global_var_1001aa64.29 = global i32 0
@global_var_1001aa68.30 = local_unnamed_addr global i32 0
@global_var_1001aa66.31 = local_unnamed_addr global i32 0
@global_var_1001a970.32 = local_unnamed_addr global i32 -1
@global_var_10003fc4.34 = constant [3 x i8] c"8`\00"
@global_var_1001a99c.35 = local_unnamed_addr global i32 0
@global_var_10004064.36 = constant [3 x i8] c"8`\00"
@global_var_100040c0.37 = constant [3 x i8] c"8`\00"
@global_var_100040f8.38 = constant [3 x i8] c"8`\00"
@global_var_10004100.39 = constant [3 x i8] c"8`\00"
@global_var_100041bc.40 = constant i32 1207973837
@global_var_100041f8.41 = constant i32 1207961345
@global_var_10004214.42 = constant [3 x i8] c";a\00"
@global_var_10004278.43 = constant i32 1207961137
@global_var_100042cc.44 = constant [3 x i8] c"8`\00"
@global_var_10009dbc.45 = constant i32 167772160
@global_var_10004304.46 = constant [3 x i8] c"8`\00"
@global_var_10004314.47 = constant i32 1207974373
@global_var_100043b4.48 = constant [3 x i8] c":`\00"
@global_var_100043c4.49 = constant [3 x i8] c"8`\00"
@global_var_100043cc.50 = constant [3 x i8] c"8`\00"
@global_var_1001a974.51 = local_unnamed_addr global i32 -1
@global_var_10004588.53 = constant i32 939589631
@global_var_10004640.54 = constant i32 939589631
@global_var_10004714.55 = constant i32 939589631
@global_var_10004720.56 = constant i32 1006685388
@global_var_10004758.57 = constant i32 1207960357
@global_var_1000475c.58 = constant [3 x i8] c"|q\00"
@global_var_10009dc0.59 = constant i32 1
@global_var_10004804.60 = constant i32 939589631
@global_var_1001aa20.61 = local_unnamed_addr global i32 0
@global_var_1001aa14.62 = local_unnamed_addr global i32 0
@global_var_1001aa1c.63 = local_unnamed_addr global i32 0
@global_var_1001aa18.64 = local_unnamed_addr global i32 0
@global_var_1001a9bc.65 = local_unnamed_addr global i32 0
@global_var_1001a9b0.66 = local_unnamed_addr global i32 0
@global_var_1001a9a4.67 = local_unnamed_addr global i32 0
@global_var_1001a9a8.68 = local_unnamed_addr global i32 0
@global_var_10004e38.70 = constant [3 x i8] c"8`\00"
@global_var_10004e54.71 = constant i32 939524096
@global_var_1001a9b4.72 = local_unnamed_addr global i32 0
@global_var_1001a9b8.73 = local_unnamed_addr global i32 0
@global_var_1001aa24.74 = global i32 0
@global_var_1001aa38.75 = global i32 0
@global_var_1001aa26.76 = local_unnamed_addr global i32 0
@global_var_1001aa44.77 = local_unnamed_addr global i32 0
@global_var_1001aa2d.78 = local_unnamed_addr global i32 0
@global_var_1001aa2c.79 = local_unnamed_addr global i32 0
@global_var_1001aa28.80 = local_unnamed_addr global i32 0
@global_var_1000a13c.81 = constant [5 x i8] c"PMMV\00"
@global_var_1000a298.83 = constant i32 0
@global_var_1000a2e0.84 = constant [6 x i8] c"CFOKL\00"
@global_var_1001aa46.85 = local_unnamed_addr global i32 0
@global_var_10009dd8.86 = constant i32 437918234
@global_var_10009de8.87 = constant [8 x i8] c"FGDCWNV\00"
@global_var_10009dfc.88 = constant i32 319820054
@global_var_10009dc8.89 = constant i32 1514213655
@global_var_10009e04.90 = constant i32 387322128
@global_var_10009dd0.91 = constant [6 x i8] c"TKXZT\00"
@global_var_10009e0c.92 = constant [8 x i8] c"QWRRMPV\00"
@global_var_10009de0.93 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_10009df0.94 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1000a218.95 = constant i32 319820054
@global_var_10009e14.96 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_10009e20.97 = constant i32 319820054
@global_var_10009e28.98 = constant [5 x i8] c"WQGP\00"
@global_var_10009e30.99 = constant [5 x i8] c"RCQQ\00"
@global_var_100051c8.100 = constant i32 1040191489
@global_var_10009f8c.101 = constant i32 320017171
@global_var_10009e38.102 = constant i32 1128681291
@global_var_10009e44.103 = constant [9 x i8] c"QOACFOKL\00"
@global_var_10009e50.104 = constant i32 336860180
@global_var_10009e60.105 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_10009e58.106 = constant i32 1229870099
@global_var_10009e70.107 = constant [7 x i8] c"OGKLQO\00"
@global_var_10009e78.108 = constant [4 x i8] c"@WJ\00"
@global_var_10009e7c.109 = constant [7 x i8] c"RW@NKA\00"
@global_var_10009e8c.110 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_10009e84.112 = constant [8 x i8] c"QGPTKAG\00"
@global_var_10009e98.114 = constant [6 x i8] c"EWGQV\00"
@global_var_10009ea0.115 = constant i32 1128681291
@global_var_10009ea8.116 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_10009eb8.117 = constant [5 x i8] c"W@LV\00"
@global_var_10009ec0.118 = constant i32 1229870099
@global_var_10009ec8.119 = constant i32 2018920215
@global_var_10009f0c.120 = constant i32 358041711
@global_var_10009ed0.121 = constant i32 1246433559
@global_var_10009ed8.122 = constant [6 x i8] c"HT@XF\00"
@global_var_10009f88.123 = constant i32 320017171
@global_var_10009ee0.124 = constant [5 x i8] c"CLIM\00"
@global_var_10009ee8.125 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_10009ef0.126 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_10009efc.127 = constant i32 358041711
@global_var_10009f1c.128 = constant [7 x i8] c"Q[QVGO\00"
@global_var_10009f24.129 = constant [5 x i8] c"KIU@\00"
@global_var_10009f2c.130 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_10009f38.131 = constant [8 x i8] c"PGCNVGI\00"
@global_var_10009f40.132 = constant i32 303174162
@global_var_10009f4c.133 = constant i32 303174162
@global_var_10009f54.134 = constant i32 320017171
@global_var_10009f5c.135 = constant i32 1128681291
@global_var_10009df4.136 = constant [5 x i8] c"VGAJ\00"
@global_var_10009f68.137 = constant i32 454761243
@global_var_10009fe8.138 = constant [7 x i8] c"Q[LLGV\00"
@global_var_10009f74.139 = constant [6 x i8] c"oGKLQ\00"
@global_var_10009f7c.140 = constant [4 x i8] c"hta\00"
@global_var_10009f80.141 = constant i32 370216979
@global_var_10009f94.142 = constant [7 x i8] c"WVQVCP\00"
@global_var_10009f9c.143 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_10009fa8.144 = constant i32 1128681291
@global_var_10009fb0.145 = constant i32 1263669266
@global_var_10009fb8.146 = constant i32 1263669522
@global_var_10009fc0.147 = constant i32 1263670802
@global_var_10009fc8.148 = constant [7 x i8] c"@KLVGA\00"
@global_var_10009fd0.149 = constant [8 x i8] c"VQWLCOK\00"
@global_var_10009fd8.150 = constant i32 1128284435
@global_var_10009fe0.151 = constant i32 269750803
@global_var_10009ff0.152 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_10009ffc.153 = constant [6 x i8] c"SWQGP\00"
@global_var_1000a0f4.154 = constant i32 319820032
@global_var_1000a00c.155 = constant [8 x i8] c"oCLCEGP\00"
@global_var_1000a004.156 = constant i32 319820054
@global_var_1000a014.157 = constant [4 x i8] c"CFO\00"
@global_var_1000a018.158 = constant [8 x i8] c"OCLCEGP\00"
@global_var_1000a020.159 = constant [7 x i8] c"DPKGLF\00"
@global_var_1000a028.160 = constant [4 x i8] c"CRA\00"
@global_var_1000a040.161 = constant [7 x i8] c"CQAGLF\00"
@global_var_1000a02c.162 = constant i32 1296518731
@global_var_1000a038.163 = constant [5 x i8] c"VKLK\00"
@global_var_1000a048.164 = constant i32 1712287307
@global_var_1000a058.165 = constant [6 x i8] c"NMEKL\00"
@global_var_1000a050.166 = constant [6 x i8] c"FNKLI\00"
@global_var_1000a060.167 = constant i32 55594317
@global_var_1000a068.168 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_1000a074.169 = constant [7 x i8] c"PMWVGP\00"
@global_var_1000a07c.170 = constant [8 x i8] c"LGVMRKC\00"
@global_var_1000a084.171 = constant [7 x i8] c"Q[QCFO\00"
@global_var_1000a08c.172 = constant [8 x i8] c"CLKAWQV\00"
@global_var_1000a094.173 = constant [6 x i8] c"FG@WE\00"
@global_var_1000a09c.174 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_1000a0a8.175 = constant [5 x i8] c"GAJM\00"
@global_var_1000a0b8.176 = constant [7 x i8] c"QUKVAJ\00"
@global_var_1000a0b0.177 = constant [5 x i8] c"FKCE\00"
@global_var_1000a0c0.178 = constant [7 x i8] c"VGNLGV\00"
@global_var_1000a088.179 = constant [3 x i8] c"FO\00"
@global_var_1000a0c8.180 = constant i32 319820054
@global_var_1000a0d4.181 = constant [5 x i8] c"VMMP\00"
@global_var_1000a150.182 = constant [6 x i8] c"cfokl\00"
@global_var_1000a0dc.183 = constant [7 x i8] c"ACNTKL\00"
@global_var_1000a0e4.184 = constant i32 319820054
@global_var_1000a174.185 = constant [6 x i8] c"cFOKL\00"
@global_var_1000a0f0.186 = constant i32 1347243350
@global_var_1000a0f8.187 = constant i32 1128941398
@global_var_1000a104.188 = constant i32 337318939
@global_var_1000a10c.189 = constant i32 1380128535
@global_var_1000a118.190 = constant i32 319820051
@global_var_1000a120.191 = constant i32 1886219638
@global_var_1000a128.192 = constant [7 x i8] c"CNRKLG\00"
@global_var_1000a130.193 = constant i32 1482049307
@global_var_1000a138.194 = constant i32 1074991122
@global_var_1000a144.195 = constant [9 x i8] c"rcqqumpf\00"
@global_var_1000a158.196 = constant [8 x i8] c"LGVEGCP\00"
@global_var_1000a160.197 = constant i32 1414927122
@global_var_1000a168.198 = constant [4 x i8] c"K@O\00"
@global_var_1000a1bc.199 = constant [6 x i8] c"Cfokl\00"
@global_var_1000a16c.200 = constant [7 x i8] c"T[CVVC\00"
@global_var_1000a17c.201 = constant i32 1129726230
@global_var_1000a184.202 = constant [7 x i8] c"OKAPMQ\00"
@global_var_1000a18c.203 = constant [6 x i8] c"QGVWR\00"
@global_var_1000a194.204 = constant [8 x i8] c"AMOACQV\00"
@global_var_1000a19c.205 = constant [4 x i8] c"RMQ\00"
@global_var_1000a1a0.206 = constant [4 x i8] c"UUU\00"
@global_var_1000a1a4.207 = constant i32 270144018
@global_var_1000a1ac.208 = constant [5 x i8] c"w`lv\00"
@global_var_1000a1b4.209 = constant [7 x i8] c"LGVOCL\00"
@global_var_1000a1c4.210 = constant [7 x i8] c"FCGOML\00"
@global_var_1000a1cc.211 = constant [5 x i8] c"FGOM\00"
@global_var_1000a1d4.212 = constant [6 x i8] c"CPPKQ\00"
@global_var_1000a258.213 = constant i32 1077956934
@global_var_1000a1dc.214 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_1000a1e4.215 = constant [7 x i8] c"ANKGLV\00"
@global_var_1000a1ec.216 = constant [6 x i8] c"AKQAM\00"
@global_var_1000a1f4.217 = constant [6 x i8] c"akqam\00"
@global_var_1000a1fc.218 = constant [6 x i8] c"QWRGP\00"
@global_var_1000a204.219 = constant [5 x i8] c"QWPV\00"
@global_var_1000a20c.220 = constant i32 353638166
@global_var_10009fa0.221 = constant [5 x i8] c"CFQN\00"
@global_var_1000a214.222 = constant i32 1128681806
@global_var_1000a220.223 = constant [7 x i8] c"RCVPMN\00"
@global_var_1000a228.224 = constant i32 1329926423
@global_var_1000a230.225 = constant [7 x i8] c"OGPNKL\00"
@global_var_1000a238.226 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_1000a244.227 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_1000a250.228 = constant [7 x i8] c"lGVkaQ\00"
@global_var_1000a264.229 = constant [5 x i8] c"lwnn\00"
@global_var_1000a26c.230 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_1000a278.231 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_1000a284.232 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_1000a290.233 = constant i32 269488144
@global_var_1000a29c.234 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_1000a2a8.235 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_1000a2b4.236 = constant [8 x i8] c"OGOMVGA\00"
@global_var_1000a2bc.237 = constant i32 1852918615
@global_var_1000a2cc.238 = constant i32 293038199
@global_var_1000a2dc.239 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_1000a2e8.240 = constant i32 1867993415
@global_var_1000a2f4.241 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_1000a300.242 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_1000a30c.243 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_1000a318.244 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_1000a324.245 = constant i32 1095385932
@global_var_1000a330.246 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_1000a340.247 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_1000a350.248 = constant [7 x i8] c"EWGQV\22\00"
@global_var_1000a358.249 = constant i32 1514213652
@global_var_1000a360.250 = constant [9 x i8] c"FGDCWNV\22\00"
@global_var_1000a36c.251 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_1000a380.252 = constant i32 1482376006
@global_var_1000a374.253 = constant [12 x i8] c"QWRGPTKQMP\22\00"
@global_var_1000a38c.254 = constant [6 x i8] c"PMMV\22\00"
@global_var_1001aa30.255 = local_unnamed_addr global i32 0
@global_var_1000a3a0.256 = constant i32 -16156
@global_var_1001aa34.257 = local_unnamed_addr global i32 0
@global_var_1001aa2e.258 = local_unnamed_addr global i32 0
@global_var_1001aa48.259 = local_unnamed_addr global i32 0
@global_var_1001aa3c.260 = local_unnamed_addr global i32 0
@global_var_10006254.261 = constant i32 939524096
@global_var_100063f0.262 = constant [3 x i8] c"8`\00"
@global_var_100065c8.263 = constant [3 x i8] c"8`\00"
@global_var_1001aa74.282 = global i32 0
@global_var_1001a97c.283 = local_unnamed_addr global i32 1043935
@global_var_1000a3dc.284 = constant i32 1016659968
@global_var_10007424.285 = constant [3 x i8] c"8`\00"
@global_var_1001aa7c.286 = local_unnamed_addr global i32 0
@global_var_1001aa80.287 = local_unnamed_addr global i32 0
@global_var_1000a3e0.288 = constant i32 -2032664576
@global_var_10007448.289 = constant [3 x i8] c"8`\00"
@global_var_1001aa84.290 = local_unnamed_addr global i32 0
@global_var_1001aa88.291 = local_unnamed_addr global i32 0
@global_var_1000a3e4.292 = constant [20 x i8] c"jT^VXYsTZZXOnQ\5CDXO=\00"
@global_var_1000746c.293 = constant [3 x i8] c"8`\00"
@global_var_1001aa8c.294 = local_unnamed_addr global i32 0
@global_var_1001aa90.295 = local_unnamed_addr global i32 0
@global_var_1000a3f8.296 = constant [7 x i8] c"NUXQQ=\00"
@global_var_10007494.297 = constant [3 x i8] c"8`\00"
@global_var_1001ab24.298 = local_unnamed_addr global i32 0
@global_var_1001ab28.299 = local_unnamed_addr global i32 0
@global_var_1000a400.300 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_100074b8.301 = constant [3 x i8] c"8`\00"
@global_var_1001ab2c.302 = local_unnamed_addr global i32 0
@global_var_1001ab30.303 = local_unnamed_addr global i32 0
@global_var_1000a408.304 = constant [8 x i8] c"NDNIXP=\00"
@global_var_100074dc.305 = constant [3 x i8] c"8`\00"
@global_var_1001ab34.306 = local_unnamed_addr global i32 0
@global_var_1001ab38.307 = local_unnamed_addr global i32 0
@global_var_1000a410.308 = constant [4 x i8] c"NU=\00"
@global_var_10007500.309 = constant i32 939524099
@global_var_1001ab40.310 = local_unnamed_addr global i32 0
@global_var_1001ab3c.311 = local_unnamed_addr global i32 0
@global_var_1000a414.312 = constant i32 308237395
@global_var_10007528.313 = constant i32 939524120
@global_var_1001ab48.314 = local_unnamed_addr global i32 0
@global_var_1001ab44.315 = local_unnamed_addr global i32 0
@global_var_1000a430.316 = constant i32 1247043158
@global_var_10007550.317 = constant i32 939524125
@global_var_1001ab50.318 = local_unnamed_addr global i32 0
@global_var_1001ab4c.319 = local_unnamed_addr global i32 0
@global_var_1000a450.320 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_10007578.321 = constant i32 939524105
@global_var_1001ab58.322 = local_unnamed_addr global i32 0
@global_var_1001ab54.323 = local_unnamed_addr global i32 0
@global_var_1000a45c.324 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_100075a0.325 = constant i32 939524104
@global_var_1001ab60.326 = local_unnamed_addr global i32 0
@global_var_1001ab5c.327 = local_unnamed_addr global i32 0
@global_var_1000a468.328 = constant [6 x i8] c"RZTS=\00"
@global_var_100075c8.329 = constant i32 939524101
@global_var_1001ab68.330 = local_unnamed_addr global i32 0
@global_var_1001ab64.331 = local_unnamed_addr global i32 0
@global_var_1000a470.332 = constant [7 x i8] c"XSIXO=\00"
@global_var_100075f0.333 = constant [3 x i8] c"8`\00"
@global_var_1001ab6c.334 = local_unnamed_addr global i32 0
@global_var_1001ab70.335 = local_unnamed_addr global i32 0
@global_var_1000a478.336 = constant i32 1768837704
@global_var_10007618.337 = constant [3 x i8] c"8`\00"
@global_var_1001ab74.338 = local_unnamed_addr global i32 0
@global_var_1001ab78.339 = local_unnamed_addr global i32 0
@global_var_1000a490.340 = constant i32 307775838
@global_var_10007640.341 = constant i32 939524113
@global_var_1001ab80.342 = local_unnamed_addr global i32 0
@global_var_1001ab7c.343 = local_unnamed_addr global i32 0
@global_var_1000a4a4.344 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_10007668.345 = constant [3 x i8] c"8`\00"
@global_var_1001ab84.346 = local_unnamed_addr global i32 0
@global_var_1001ab88.347 = local_unnamed_addr global i32 0
@global_var_1000a4b0.348 = constant i32 307845195
@global_var_1000768c.349 = constant [3 x i8] c"8`\00"
@global_var_1001ab8c.350 = local_unnamed_addr global i32 0
@global_var_1001ab90.351 = local_unnamed_addr global i32 0
@global_var_1000a4c8.352 = constant i32 307845195
@global_var_100076b0.353 = constant [3 x i8] c"8`\00"
@global_var_1001ab94.354 = local_unnamed_addr global i32 0
@global_var_1001ab98.355 = local_unnamed_addr global i32 0
@global_var_1000a4dc.356 = constant i32 68028744
@global_var_100076d4.357 = constant i32 939524119
@global_var_1001aba0.358 = local_unnamed_addr global i32 0
@global_var_1001ab9c.359 = local_unnamed_addr global i32 0
@global_var_1000a4f4.360 = constant [12 x i8] c"YKOnI\5COIHM=\00"
@global_var_1001aba8.361 = local_unnamed_addr global i32 0
@global_var_1001aba4.362 = local_unnamed_addr global i32 0
@global_var_100079ac.363 = constant i32 939524096
@global_var_10007b60.364 = constant i32 1207959564
@global_var_10007ff4.365 = constant i32 939524118
@global_var_1001a9e0.366 = global i32 0
@global_var_100086c0.367 = constant i32 939524118
@global_var_10008748.368 = constant i32 939524118
@global_var_1001abac.369 = global i32 0
@global_var_1001aa4c.370 = global i32 0
@global_var_1001a980 = external global i32
@global_var_1000a60c.372 = constant i32 33554944
@global_var_1001a9d0.373 = local_unnamed_addr global i32 0
@global_var_1001ac2c.374 = global i32 0
@global_var_100089a4.375 = constant i32 939524108
@global_var_100089f8.376 = constant i32 939524108
@global_var_10008aac.377 = constant [3 x i8] c"8`\00"
@global_var_10008b58.378 = constant [3 x i8] c"8`\00"
@global_var_10008e80.379 = constant i32 1207959640
@global_var_10008ebc.380 = constant i32 1207959580
@global_var_1001a940.381 = global i32 0
@global_var_10009204.382 = constant [3 x i8] c"8`\00"
@global_var_1001a9c4.383 = local_unnamed_addr global i32 0
@global_var_10008f7c.384 = constant i32 1207960053
@global_var_10008f80.385 = constant [3 x i8] c"= \00"
@global_var_1001a810.386 = global i32 -1
@global_var_1001a9d4.387 = local_unnamed_addr global i32 0
@global_var_1001a9d8.388 = local_unnamed_addr global i32 0
@global_var_1000a500.389 = constant [10 x i8] c"/dev/null\00"
@global_var_1001a9dc.390 = local_unnamed_addr global i32 0
@global_var_1001a9c8.392 = local_unnamed_addr global i32 0
@global_var_1001a9cc.393 = local_unnamed_addr global i32 0
@global_var_1000951c.394 = constant i32 939524096
@global_var_1001a9f4.396 = local_unnamed_addr global i32 0
@global_var_1001a98c.397 = local_unnamed_addr global i32* @global_var_1000a60c.372
@global_var_1001a958.398 = global i32 0
@global_var_10009b00.399 = constant i32 939524129
@global_var_1001a9e8.400 = local_unnamed_addr global i32 0
@global_var_10009b74.401 = constant [3 x i8] c"8`\00"
@global_var_10009bac.402 = constant i32 939524129
@global_var_1001a9ec.403 = local_unnamed_addr global i32 0
@global_var_1001a9f0.404 = local_unnamed_addr global i32 0
@global_var_1001a814.405 = global i32 0
@global_var_1001a9f8.2 = local_unnamed_addr global i8 0
@global_var_1001a990.9 = local_unnamed_addr global i8 0
@global_var_1001a991.11 = global i8 0
@global_var_1001a830.33 = local_unnamed_addr global i8 1
@global_var_1001a9a0.52 = local_unnamed_addr global i16 0
@global_var_1001a9ac.69 = global i16 0
@global_var_1001aa3a.82 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_10009d30(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001a9f8.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001a82c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001a82c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001a82c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001a9f8.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001a9f8.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268544032 to i32*), align 32
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268544032
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_100092f0(i32 268452104, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268475804, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000280:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100002c4, label %dec_label_pc_10000298

dec_label_pc_10000298:                            ; preds = %dec_label_pc_10000280
  %v0_10000298 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000298 = add i32 %v0_10000298, 4
  %v2_10000298 = inttoptr i32 %v1_10000298 to i8*
  %v3_10000298 = load i8, i8* %v2_10000298, align 1
  %v4_10000298 = zext i8 %v3_10000298 to i32
  %v4_100002a0 = icmp eq i32 %v4_10000298, %arg3
  br i1 %v4_100002a0, label %dec_label_pc_100002d8, label %dec_label_pc_100002bc

dec_label_pc_100002ac:                            ; preds = %dec_label_pc_100002bc
  %v1_100002ac = add i32 %v0_100002ac.in, 12
  %v2_100002ac = inttoptr i32 %v1_100002ac to i8*
  %v3_100002ac = load i8, i8* %v2_100002ac, align 1
  %v4_100002ac = zext i8 %v3_100002ac to i32
  %v4_100002b4 = icmp eq i32 %v4_100002ac, %arg3
  br i1 %v4_100002b4, label %dec_label_pc_100002d8, label %dec_label_pc_100002bc

dec_label_pc_100002bc:                            ; preds = %dec_label_pc_10000298, %dec_label_pc_100002ac
  %v0_100002c0 = phi i32 [ %v1_100002c0, %dec_label_pc_100002ac ], [ %arg1, %dec_label_pc_10000298 ]
  %v0_100002ac.in = phi i32 [ %v0_100002ac, %dec_label_pc_100002ac ], [ %v0_10000298, %dec_label_pc_10000298 ]
  %v0_100002ac = add i32 %v0_100002ac.in, 8
  store i32 %v0_100002ac, i32* %r4.global-to-local, align 4
  %v1_100002c0 = add i32 %v0_100002c0, -1
  %v2_100002c0 = icmp eq i32 %v1_100002c0, 0
  br i1 %v2_100002c0, label %dec_label_pc_100002c4, label %dec_label_pc_100002ac

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002bc, %dec_label_pc_100002d8, %dec_label_pc_10000280
  ret i32 %arg4

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002ac, %dec_label_pc_10000298
  %v0_100002d8 = phi i32 [ %v0_10000298, %dec_label_pc_10000298 ], [ %v0_100002ac, %dec_label_pc_100002ac ]
  %v1_100002d8 = inttoptr i32 %v0_100002d8 to i32*
  %v2_100002d8 = load i32, i32* %v1_100002d8, align 4
  %v3_100002dc = icmp eq i32 %v2_100002d8, 0
  br i1 %v3_100002dc, label %dec_label_pc_100002c4, label %dec_label_pc_100002e4

dec_label_pc_100002e4:                            ; preds = %dec_label_pc_100002d8
  store i32 268436200, i32* @lr, align 4
  %v1_100002e4 = call i32 @function_100083d0(i32 %v2_100002d8)
  ret i32 %v1_100002e4

; uselistorder directives
  uselistorder i32 %v1_100002c0, { 1, 0 }
  uselistorder i32 %v0_100002ac, { 1, 0, 2 }
  uselistorder i32 %v0_100002ac.in, { 1, 0 }
  uselistorder i32 %v0_10000298, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100002c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100002bc, { 1, 0 }
}

define i32 @function_10000300(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000300:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10000344, label %dec_label_pc_10000318

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000300
  %v0_10000318 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000318 = add i32 %v0_10000318, 4
  %v2_10000318 = inttoptr i32 %v1_10000318 to i8*
  %v3_10000318 = load i8, i8* %v2_10000318, align 1
  %v4_10000318 = zext i8 %v3_10000318 to i32
  %v4_10000320 = icmp eq i32 %v4_10000318, %arg3
  br i1 %v4_10000320, label %dec_label_pc_10000358, label %dec_label_pc_1000033c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_1000033c
  %v1_1000032c = add i32 %v0_1000032c.in, 12
  %v2_1000032c = inttoptr i32 %v1_1000032c to i8*
  %v3_1000032c = load i8, i8* %v2_1000032c, align 1
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v4_10000334 = icmp eq i32 %v4_1000032c, %arg3
  br i1 %v4_10000334, label %dec_label_pc_10000358, label %dec_label_pc_1000033c

dec_label_pc_1000033c:                            ; preds = %dec_label_pc_10000318, %dec_label_pc_1000032c
  %v0_10000340 = phi i32 [ %v1_10000340, %dec_label_pc_1000032c ], [ %arg1, %dec_label_pc_10000318 ]
  %v0_1000032c.in = phi i32 [ %v0_1000032c, %dec_label_pc_1000032c ], [ %v0_10000318, %dec_label_pc_10000318 ]
  %v0_1000032c = add i32 %v0_1000032c.in, 8
  store i32 %v0_1000032c, i32* %r4.global-to-local, align 4
  %v1_10000340 = add i32 %v0_10000340, -1
  %v2_10000340 = icmp eq i32 %v1_10000340, 0
  br i1 %v2_10000340, label %dec_label_pc_10000344, label %dec_label_pc_1000032c

dec_label_pc_10000344:                            ; preds = %dec_label_pc_1000033c, %dec_label_pc_10000358, %dec_label_pc_10000300
  ret i32 %arg4

dec_label_pc_10000358:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %v0_10000358 = phi i32 [ %v0_10000318, %dec_label_pc_10000318 ], [ %v0_1000032c, %dec_label_pc_1000032c ]
  %v1_10000358 = inttoptr i32 %v0_10000358 to i32*
  %v2_10000358 = load i32, i32* %v1_10000358, align 4
  store i32 %v2_10000358, i32* @r3, align 4
  %v3_1000035c = icmp eq i32 %v2_10000358, 0
  br i1 %v3_1000035c, label %dec_label_pc_10000344, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_10000358
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v2_10000368 = call i32 @function_10007850(i32 %v2_10000358, i32 10)
  ret i32 %v2_10000368

; uselistorder directives
  uselistorder i32 %v1_10000340, { 1, 0 }
  uselistorder i32 %v0_1000032c, { 1, 0, 2 }
  uselistorder i32 %v0_1000032c.in, { 1, 0 }
  uselistorder i32 %v0_10000318, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10000344, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000033c, { 1, 0 }
}

define i32 @function_10000384(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000384:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000384 = call i32 @__asm_mfcr()
  store i32 %v0_10000384, i32* %r3.global-to-local, align 4
  %v0_10000394 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r28, align 4
  %v0_100003c8 = load i32, i32* @r29, align 4
  %tmp30 = icmp ult i32 %arg2, 4
  br i1 %tmp30, label %dec_label_pc_100003e4, label %dec_label_pc_100003d8

dec_label_pc_100003d8:                            ; preds = %dec_label_pc_10000384
  %v3_100003d8 = icmp eq i32 %arg2, 4
  %v1_100003dc = inttoptr i32 %v0_10000384 to i32*
  %v2_100003dc = load i32, i32* %v1_100003dc, align 4
  store i32 %v2_100003dc, i32* %r25.global-to-local, align 4
  br i1 %v3_100003d8, label %dec_label_pc_100003e4, label %dec_label_pc_1000042c

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d8, %dec_label_pc_100005c8, %dec_label_pc_10000444, %dec_label_pc_10000438, %dec_label_pc_1000042c, %dec_label_pc_10000384, %dec_label_pc_100005fc
  %v1_100003f8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000384)
  store i32 %v0_100003c4, i32* @r28, align 4
  store i32 %v0_100003c8, i32* @r29, align 4
  store i32 %v0_10000394, i32* @r30, align 4
  %v0_10000428 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000428

dec_label_pc_1000042c:                            ; preds = %dec_label_pc_100003d8
  %v3_1000042c = icmp eq i32 %arg2, 5
  %v1_10000430 = add i32 %v0_10000384, 4
  %v2_10000430 = inttoptr i32 %v1_10000430 to i8*
  %v3_10000430 = load i8, i8* %v2_10000430, align 1
  %v4_10000430 = zext i8 %v3_10000430 to i32
  store i32 %v4_10000430, i32* %r22.global-to-local, align 4
  br i1 %v3_1000042c, label %dec_label_pc_100003e4, label %dec_label_pc_10000438

dec_label_pc_10000438:                            ; preds = %dec_label_pc_1000042c
  %v1_10000438 = add i32 %v0_10000384, 5
  %v2_10000438 = inttoptr i32 %v1_10000438 to i8*
  %v3_10000438 = load i8, i8* %v2_10000438, align 1
  %v4_10000438 = zext i8 %v3_10000438 to i32
  store i32 %v4_10000438, i32* %r26.global-to-local, align 4
  %v3_1000043c = icmp eq i8 %v3_10000438, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000043c, label %dec_label_pc_100003e4, label %dec_label_pc_10000444

dec_label_pc_10000444:                            ; preds = %dec_label_pc_10000438
  %v1_10000444 = mul nuw nsw i32 %v4_10000438, 5
  store i32 %v1_10000444, i32* %r27.global-to-local, align 4
  %v1_10000448 = add i32 %arg2, -6
  store i32 %v1_10000448, i32* @r28, align 4
  %v2_1000044c = icmp ult i32 %v1_10000448, %v1_10000444
  br i1 %v2_1000044c, label %dec_label_pc_100003e4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000444
  store i32 %v4_10000438, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r4.global-to-local, align 4
  store i32 268436576, i32* @lr, align 4
  %v2_1000045c = call i32 @function_100089c8(i32 %v4_10000438, i32 24)
  store i32 %v2_1000045c, i32* %r3.global-to-local, align 4
  %v0_10000460 = load i32, i32* @r31, align 4
  %v1_10000460 = add i32 %v0_10000460, 6
  store i32 %v1_10000460, i32* @r29, align 4
  store i32 %v2_1000045c, i32* %r20.global-to-local, align 4
  %v0_10000468 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000468 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000468 = or i1 %v0_10000468, %v1_10000468
  br i1 %v2_10000468, label %dec_label_pc_100004c4thread-pre-split, label %dec_label_pc_1000046c

dec_label_pc_1000046c:                            ; preds = %dec_label_pc_10000454
  %v1_1000046c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v2_1000045c, i32* %r11.global-to-local, align 4
  %tmp35 = mul i32 %v1_1000046c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp35, i32* %r9.global-to-local, align 4
  store i32 %tmp35, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10000494

dec_label_pc_10000494:                            ; preds = %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge, %dec_label_pc_1000046c
  %v2_100004a0 = phi i32 [ %v1_100004b0, %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge ], [ %v2_1000045c, %dec_label_pc_1000046c ]
  %v0_1000049c = phi i32 [ %v0_10000494.pre, %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge ], [ %v1_10000460, %dec_label_pc_1000046c ]
  %v1_10000494 = add i32 %v0_1000049c, 4
  %v2_10000494 = inttoptr i32 %v1_10000494 to i8*
  %v3_10000494 = load i8, i8* %v2_10000494, align 1
  %v1_10000498 = inttoptr i32 %v0_1000049c to i32*
  %v2_10000498 = load i32, i32* %v1_10000498, align 4
  store i32 %v2_10000498, i32* %r9.global-to-local, align 4
  %v1_1000049c = add i32 %v0_1000049c, 5
  store i32 %v1_1000049c, i32* @r29, align 4
  %v3_100004a0 = add i32 %v2_100004a0, 20
  %v4_100004a0 = inttoptr i32 %v3_100004a0 to i8*
  store i8 %v3_10000494, i8* %v4_100004a0, align 1
  %v0_100004a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004a4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004a4 = add i32 %v1_100004a4, 4
  %v3_100004a4 = inttoptr i32 %v2_100004a4 to i32*
  store i32 %v0_100004a4, i32* %v3_100004a4, align 4
  %v0_100004a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004a8 = add i32 %v1_100004a8, 16
  %v3_100004a8 = inttoptr i32 %v2_100004a8 to i32*
  store i32 %v0_100004a8, i32* %v3_100004a8, align 4
  %v0_100004ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100004ac = trunc i32 %v0_100004ac to i16
  %v2_100004ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100004ac = inttoptr i32 %v2_100004ac to i16*
  store i16 %v1_100004ac, i16* %v3_100004ac, align 2
  %v0_100004b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004b0 = add i32 %v0_100004b0, 24
  store i32 %v1_100004b0, i32* %r11.global-to-local, align 4
  %v0_100004b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004b4 = add i32 %v0_100004b4, -1
  store i32 %v1_100004b4, i32* %ctr.global-to-local, align 4
  %v2_100004b4 = icmp eq i32 %v1_100004b4, 0
  br i1 %v2_100004b4, label %dec_label_pc_100004b8, label %dec_label_pc_10000494.dec_label_pc_10000494_crit_edge

dec_label_pc_10000494.dec_label_pc_10000494_crit_edge: ; preds = %dec_label_pc_10000494
  %v0_10000494.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000494

dec_label_pc_100004b8:                            ; preds = %dec_label_pc_10000494
  %v0_100004b8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100004b8 = mul i32 %v0_100004b8, -5
  %v0_100004bc = load i32, i32* @r30, align 4
  %v2_100004bc = add i32 %v0_100004bc, %v1_100004b8
  store i32 %v2_100004bc, i32* %r9.global-to-local, align 4
  %v1_100004c0 = add i32 %v2_100004bc, -6
  store i32 %v1_100004c0, i32* @r28, align 4
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4thread-pre-split:            ; preds = %dec_label_pc_10000454
  %v0_100004c4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4:                            ; preds = %dec_label_pc_100004c4thread-pre-split, %dec_label_pc_100004b8
  %v0_100004c4 = phi i32 [ %v0_100004c4.pr, %dec_label_pc_100004c4thread-pre-split ], [ %v1_100004c0, %dec_label_pc_100004b8 ]
  %v3_100004c4 = icmp eq i32 %v0_100004c4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004c4, label %dec_label_pc_100005b8, label %dec_label_pc_100004d0

dec_label_pc_100004d0:                            ; preds = %dec_label_pc_100004c4
  %v0_100004d0 = load i32, i32* @r29, align 4
  %v1_100004d0 = inttoptr i32 %v0_100004d0 to i8*
  %v2_100004d0 = load i8, i8* %v1_100004d0, align 1
  %v3_100004d0 = zext i8 %v2_100004d0 to i32
  store i32 %v3_100004d0, i32* @r23, align 4
  %v3_100004d4 = icmp eq i8 %v2_100004d0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004d4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004d4, label %dec_label_pc_100005a0, label %dec_label_pc_100004dc

dec_label_pc_100004dc:                            ; preds = %dec_label_pc_100004d0
  store i32 %v3_100004d0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 268436712, i32* @lr, align 4
  %v2_100004e4 = call i32 @function_100089c8(i32 %v3_100004d0, i32 8)
  store i32 %v2_100004e4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004e4, i32* %r21.global-to-local, align 4
  %v0_100004ec = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004ec = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004ec = or i1 %v0_100004ec, %v1_100004ec
  br i1 %v2_100004ec, label %dec_label_pc_100005a0, label %dec_label_pc_100004f0

dec_label_pc_100004f0:                            ; preds = %dec_label_pc_100004dc
  %v0_100004f0 = load i32, i32* @r28, align 4
  %v1_100004f0 = add i32 %v0_100004f0, -1
  %v4_100004f0 = icmp eq i32 %v1_100004f0, 0
  store i32 %v1_100004f0, i32* %ctr.global-to-local, align 4
  br i1 %v4_100004f0, label %dec_label_pc_100005b8, label %dec_label_pc_100004fc

dec_label_pc_100004fc:                            ; preds = %dec_label_pc_100004f0
  %v0_100004fc = load i32, i32* @r29, align 4
  %v1_100004fc = add i32 %v0_100004fc, 1
  %v2_100004fc = inttoptr i32 %v1_100004fc to i8*
  %v3_100004fc = load i8, i8* %v2_100004fc, align 1
  store i32 %v1_100004fc, i32* %r9.global-to-local, align 4
  %v3_10000504 = add i32 %v2_100004e4, 4
  %v4_10000504 = inttoptr i32 %v3_10000504 to i8*
  store i8 %v3_100004fc, i8* %v4_10000504, align 1
  %v0_10000508 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000508 = add i32 %v0_10000508, -1
  store i32 %v1_10000508, i32* %ctr.global-to-local, align 4
  %v2_10000508 = icmp eq i32 %v1_10000508, 0
  br i1 %v2_10000508, label %dec_label_pc_100005b8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_100004fc
  store i32 %v1_10000508, i32* %r11.global-to-local, align 4
  %v0_10000510 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000510 = add i32 %v0_10000510, 1
  %v2_10000510 = inttoptr i32 %v1_10000510 to i8*
  %v3_10000510 = load i8, i8* %v2_10000510, align 1
  %v4_10000510 = zext i8 %v3_10000510 to i32
  store i32 %v1_10000510, i32* %r4.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000508, -2
  store i32 %v1_10000518, i32* @r28, align 4
  %v2_1000051c = icmp slt i32 %v1_10000518, %v4_10000510
  br i1 %v2_1000051c, label %dec_label_pc_100005b8, label %dec_label_pc_10000524

dec_label_pc_10000524:                            ; preds = %dec_label_pc_1000050c
  %v1_10000524 = add i32 %v0_10000510, 2
  store i32 %v1_10000524, i32* @r29, align 4
  %v0_10000528 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000528 = add i32 %v0_10000528, 8
  store i32 %v1_10000528, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000538:                            ; preds = %dec_label_pc_10000578
  %v0_10000538 = load i32, i32* @r31, align 4
  %v1_10000538 = load i32, i32* @r28, align 4
  %v2_10000538 = sub i32 %v1_10000538, %v0_10000538
  store i32 %v2_10000538, i32* %r9.global-to-local, align 4
  %v5_10000538 = icmp eq i32 %v2_10000538, 0
  br i1 %v5_10000538, label %dec_label_pc_100005b8, label %dec_label_pc_10000540

dec_label_pc_10000540:                            ; preds = %dec_label_pc_10000538
  %v1_10000540 = load i32, i32* @r29, align 4
  %v2_10000540 = add i32 %v1_10000540, %v0_10000538
  %v3_10000540 = inttoptr i32 %v2_10000540 to i8*
  %v4_10000540 = load i8, i8* %v3_10000540, align 1
  %v0_10000544 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v2_10000540, i32* %r4.global-to-local, align 4
  %v3_1000054c = add i32 %v0_10000544, 4
  %v4_1000054c = inttoptr i32 %v3_1000054c to i8*
  store i8 %v4_10000540, i8* %v4_1000054c, align 1
  %v0_10000550 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000550 = add i32 %v0_10000550, -1
  %v4_10000550 = icmp eq i32 %v1_10000550, 0
  br i1 %v4_10000550, label %dec_label_pc_100005b8, label %dec_label_pc_10000558

dec_label_pc_10000558:                            ; preds = %dec_label_pc_10000540
  %v0_10000558 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000558 = add i32 %v0_10000558, 1
  %v2_10000558 = inttoptr i32 %v1_10000558 to i8*
  %v3_10000558 = load i8, i8* %v2_10000558, align 1
  %v4_10000558 = zext i8 %v3_10000558 to i32
  store i32 %v1_10000550, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000550, -2
  store i32 %v1_10000560, i32* @r28, align 4
  store i32 %v1_10000558, i32* %r4.global-to-local, align 4
  %v2_10000568 = icmp slt i32 %v1_10000560, %v4_10000558
  %v0_1000056c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000056c = add i32 %v0_1000056c, 8
  store i32 %v1_1000056c, i32* %r24.global-to-local, align 4
  br i1 %v2_10000568, label %dec_label_pc_100005b8, label %dec_label_pc_10000574

dec_label_pc_10000574:                            ; preds = %dec_label_pc_10000558
  %v1_10000574 = add i32 %v0_10000558, 2
  store i32 %v1_10000574, i32* @r29, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000524, %dec_label_pc_10000574
  %v0_1000057c = phi i32 [ %v4_10000510, %dec_label_pc_10000524 ], [ %v4_10000558, %dec_label_pc_10000574 ]
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1000057c = add nuw nsw i32 %v0_1000057c, 1
  store i32 %v1_1000057c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000584.7 to i32), i32* @lr, align 4
  %v2_10000580 = call i32 @function_100089c8(i32 %v1_1000057c, i32 1)
  store i32 %v2_10000580, i32* %r3.global-to-local, align 4
  %v0_10000584 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000584 = add i32 %v0_10000584, 1
  store i32 %v1_10000584, i32* %r27.global-to-local, align 4
  %v1_10000588 = load i32, i32* @r30, align 4
  %v2_10000588 = inttoptr i32 %v1_10000588 to i32*
  store i32 %v2_10000580, i32* %v2_10000588, align 4
  %v0_1000058c = load i32, i32* @r29, align 4
  store i32 %v0_1000058c, i32* %r4.global-to-local, align 4
  %v0_10000590 = load i32, i32* @r31, align 4
  store i32 268436888, i32* @lr, align 4
  %v3_10000594 = call i32 @function_100077ac(i32 %v2_10000580, i32 %v0_1000058c, i32 %v0_10000590)
  store i32 %v3_10000594, i32* %r3.global-to-local, align 4
  %v0_10000598 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000598 = load i32, i32* @r23, align 4
  %v4_10000598 = icmp eq i32 %v0_10000598, %v1_10000598
  br i1 %v4_10000598, label %dec_label_pc_100005a0, label %dec_label_pc_10000538

dec_label_pc_100005a0:                            ; preds = %dec_label_pc_10000578, %dec_label_pc_100004dc, %dec_label_pc_100004d0
  %v0_100005a0 = call i32 @function_100080c8()
  store i32 %v0_100005a0, i32* %r3.global-to-local, align 4
  %v2_100005a8 = inttoptr i32 %v0_100005a0 to i32*
  store i32 0, i32* %v2_100005a8, align 4
  store i32 268436912, i32* @lr, align 4
  %v0_100005ac = call i32 @function_10007cf8()
  store i32 %v0_100005ac, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100005ac, 1
  br i1 %tmp32, label %dec_label_pc_10000608, label %dec_label_pc_100005b8

dec_label_pc_100005b8:                            ; preds = %dec_label_pc_10000558, %dec_label_pc_10000540, %dec_label_pc_10000538, %dec_label_pc_10000608, %dec_label_pc_100005a0, %dec_label_pc_1000050c, %dec_label_pc_100004fc, %dec_label_pc_100004f0, %dec_label_pc_100004c4
  %v0_100005b8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005b8 = icmp eq i32 %v0_100005b8, 0
  br i1 %v3_100005b8, label %dec_label_pc_100005c8, label %dec_label_pc_100005c0

dec_label_pc_100005c0:                            ; preds = %dec_label_pc_100005b8
  store i32 %v0_100005b8, i32* @r3, align 4
  store i32 268436936, i32* @lr, align 4
  %v0_100005c4 = call i32 @function_10008a38()
  store i32 %v0_100005c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005c8

dec_label_pc_100005c8:                            ; preds = %dec_label_pc_100005b8, %dec_label_pc_100005c0
  %v0_100005c8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005c8 = icmp eq i32 %v0_100005c8, 0
  br i1 %v3_100005c8, label %dec_label_pc_100003e4, label %dec_label_pc_100005d0

dec_label_pc_100005d0:                            ; preds = %dec_label_pc_100005c8
  %v0_100005d0 = load i32, i32* @r23, align 4
  %tmp33 = icmp slt i32 %v0_100005d0, 1
  br i1 %tmp33, label %dec_label_pc_100005fc, label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_100005d0
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100005dc

dec_label_pc_100005dc:                            ; preds = %dec_label_pc_100005f0, %dec_label_pc_100005d8
  %v0_100005f412 = phi i32 [ %v0_100005d0, %dec_label_pc_100005d8 ], [ %v0_100005f4, %dec_label_pc_100005f0 ]
  %v0_100005e0 = phi i32 [ %v0_100005c8, %dec_label_pc_100005d8 ], [ %v0_100005fc.pre, %dec_label_pc_100005f0 ]
  %v0_100005dc = phi i32 [ 0, %dec_label_pc_100005d8 ], [ %v1_100005f0, %dec_label_pc_100005f0 ]
  %v1_100005dc = mul i32 %v0_100005dc, 8
  %v2_100005e0 = add i32 %v1_100005dc, %v0_100005e0
  %v3_100005e0 = inttoptr i32 %v2_100005e0 to i32*
  %v4_100005e0 = load i32, i32* %v3_100005e0, align 4
  store i32 %v4_100005e0, i32* @r3, align 4
  %v3_100005e4 = icmp eq i32 %v4_100005e0, 0
  br i1 %v3_100005e4, label %dec_label_pc_100005f0, label %dec_label_pc_100005ec

dec_label_pc_100005ec:                            ; preds = %dec_label_pc_100005dc
  store i32 268436976, i32* @lr, align 4
  %v0_100005ec = call i32 @function_10008a38()
  store i32 %v0_100005ec, i32* %r3.global-to-local, align 4
  %v0_100005f0.pre = load i32, i32* @r31, align 4
  %v0_100005f4.pre = load i32, i32* @r23, align 4
  %v0_100005fc.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005dc, %dec_label_pc_100005ec
  %v0_100005fc.pre = phi i32 [ %v0_100005e0, %dec_label_pc_100005dc ], [ %v0_100005fc.pre.pre, %dec_label_pc_100005ec ]
  %v0_100005f4 = phi i32 [ %v0_100005f412, %dec_label_pc_100005dc ], [ %v0_100005f4.pre, %dec_label_pc_100005ec ]
  %v0_100005f0 = phi i32 [ %v0_100005dc, %dec_label_pc_100005dc ], [ %v0_100005f0.pre, %dec_label_pc_100005ec ]
  %v1_100005f0 = add i32 %v0_100005f0, 1
  store i32 %v1_100005f0, i32* @r31, align 4
  %v4_100005f4 = icmp eq i32 %v0_100005f4, %v1_100005f0
  br i1 %v4_100005f4, label %dec_label_pc_100005fc, label %dec_label_pc_100005dc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_100005f0, %dec_label_pc_100005d0
  %v0_100005fc = phi i32 [ %v0_100005c8, %dec_label_pc_100005d0 ], [ %v0_100005fc.pre, %dec_label_pc_100005f0 ]
  store i32 %v0_100005fc, i32* @r3, align 4
  store i32 268436996, i32* @lr, align 4
  %v0_10000600 = call i32 @function_10008a38()
  store i32 %v0_10000600, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003e4

dec_label_pc_10000608:                            ; preds = %dec_label_pc_100005a0
  %v3_10000608 = icmp eq i32 %v0_100005ac, -1
  br i1 %v3_10000608, label %dec_label_pc_100005b8, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000608
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000614 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000614 = zext i8 %v3_10000614 to i32
  %v3_10000618 = icmp eq i8 %v3_10000614, 0
  br i1 %v3_10000618, label %dec_label_pc_10000660, label %dec_label_pc_10000620

dec_label_pc_10000620:                            ; preds = %dec_label_pc_10000610
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v4_10000614, i32* %ctr.global-to-local, align 4
  %v3_10000628 = load i32, i32* @global_var_1001a994.10, align 4
  store i32 %v3_10000628, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000630 = inttoptr i32 %v3_10000628 to i32*
  %v2_10000630 = load i32, i32* %v1_10000630, align 4
  store i32 %v2_10000630, i32* %r9.global-to-local, align 4
  %v1_10000634 = add i32 %v2_10000630, 4
  %v2_10000634 = inttoptr i32 %v1_10000634 to i8*
  %v3_10000634 = load i8, i8* %v2_10000634, align 1
  %v4_10000634 = zext i8 %v3_10000634 to i32
  %v1_10000638 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000638 = icmp eq i32 %v4_10000634, %v1_10000638
  br i1 %v4_10000638, label %dec_label_pc_10000668, label %dec_label_pc_10000658

dec_label_pc_10000644:                            ; preds = %dec_label_pc_10000658
  %v1_10000644 = mul i32 %v1_10000658, 4
  store i32 %v1_10000644, i32* %r9.global-to-local, align 4
  %v2_10000648 = add i32 %v1_10000644, %v3_10000628
  %v3_10000648 = inttoptr i32 %v2_10000648 to i32*
  %v4_10000648 = load i32, i32* %v3_10000648, align 4
  store i32 %v4_10000648, i32* %r9.global-to-local, align 4
  %v1_1000064c = add i32 %v4_10000648, 4
  %v2_1000064c = inttoptr i32 %v1_1000064c to i8*
  %v3_1000064c = load i8, i8* %v2_1000064c, align 1
  %v4_1000064c = zext i8 %v3_1000064c to i32
  %v4_10000650 = icmp eq i32 %v4_1000064c, %v1_10000638
  br i1 %v4_10000650, label %dec_label_pc_10000668, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000620, %dec_label_pc_10000644
  %v0_1000065c = phi i32 [ %v1_1000065c, %dec_label_pc_10000644 ], [ %v4_10000614, %dec_label_pc_10000620 ]
  %v0_10000658 = phi i32 [ %v1_10000658, %dec_label_pc_10000644 ], [ 0, %dec_label_pc_10000620 ]
  %v1_10000658 = add i32 %v0_10000658, 1
  store i32 %v1_10000658, i32* %r11.global-to-local, align 4
  %v1_1000065c = add i32 %v0_1000065c, -1
  store i32 %v1_1000065c, i32* %ctr.global-to-local, align 4
  %v2_1000065c = icmp eq i32 %v1_1000065c, 0
  br i1 %v2_1000065c, label %dec_label_pc_10000660, label %dec_label_pc_10000644

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658, %dec_label_pc_10000610, %dec_label_pc_10000668
  %v0_10000664 = call i32 @function_10008f18()
  store i32 %v0_10000664, i32* %r3.global-to-local, align 4
  %v0_10000668.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000644, %dec_label_pc_10000620, %dec_label_pc_10000660
  %v0_10000668 = phi i32 [ %v2_10000630, %dec_label_pc_10000620 ], [ %v0_10000668.pre, %dec_label_pc_10000660 ], [ %v4_10000648, %dec_label_pc_10000644 ]
  %v1_10000668 = inttoptr i32 %v0_10000668 to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r9.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000066c, i32* %r3.global-to-local, align 4
  %v0_10000670 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10000670, i32* %r4.global-to-local, align 4
  store i32 %v2_10000668, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10000668)
  br label %dec_label_pc_10000660

; uselistorder directives
  uselistorder i32 %v2_10000668, { 1, 0, 2 }
  uselistorder i32 %v1_1000065c, { 2, 1, 0 }
  uselistorder i32 %v1_10000658, { 2, 0, 1 }
  uselistorder i32 %v1_10000644, { 1, 0 }
  uselistorder i32 %v1_100005f0, { 1, 2, 0 }
  uselistorder i32 %v0_100005f4, { 1, 0 }
  uselistorder i32 %v0_100005dc, { 1, 0 }
  uselistorder i32 %v4_10000558, { 1, 0 }
  uselistorder i32 %v1_10000508, { 0, 2, 1 }
  uselistorder i32 %v3_100004d0, { 1, 0, 2 }
  uselistorder i32 %v1_100004b4, { 1, 0 }
  uselistorder i32 %v1_100004b0, { 1, 0 }
  uselistorder i32 %v0_1000049c, { 0, 2, 1 }
  uselistorder i32 %tmp35, { 1, 0 }
  uselistorder i32 %v4_10000438, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000384, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 1, 5, 6, 2, 3, 4, 7, 8, 9, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 2, 8, 9, 3, 10, 11, 12, 13, 14, 17, 15, 16, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10000668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000658, { 1, 0 }
  uselistorder label %dec_label_pc_100005f0, { 1, 0 }
  uselistorder label %dec_label_pc_100005c8, { 1, 0 }
  uselistorder label %dec_label_pc_100005b8, { 3, 4, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_100003e4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_1000068c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000068c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000690 = load i32, i32* @lr, align 4
  store i32 %v0_10000690, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_100006ac = load i32, i32* @r28, align 4
  store i32 268437176, i32* @lr, align 4
  %v2_100006b4 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_100006b8 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_100006b8 = zext i8 %v3_100006b8 to i32
  store i32 %v4_100006b8, i32* %r4.global-to-local, align 4
  store i32 %v2_100006b4, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100006cc = load i32, i32* @global_var_1001a994.10, align 4
  %v2_100006d0 = inttoptr i32 %v2_100006b4 to i32*
  store i32 268446700, i32* %v2_100006d0, align 4
  %v0_100006d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006d4 = mul i32 %v0_100006d4, 4
  store i32 %v1_100006d4, i32* %r4.global-to-local, align 4
  %v0_100006d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006d8 = trunc i32 %v0_100006d8 to i8
  %v2_100006d8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100006d8 = add i32 %v2_100006d8, 4
  %v4_100006d8 = inttoptr i32 %v3_100006d8 to i8*
  store i8 %v1_100006d8, i8* %v4_100006d8, align 1
  %v0_100006dc = load i32, i32* %r4.global-to-local, align 4
  %v1_100006dc = add i32 %v0_100006dc, 4
  store i32 %v1_100006dc, i32* %r4.global-to-local, align 4
  store i32 268437220, i32* @lr, align 4
  %v3_100006e0 = call i32 @function_10008b38(i32 %v3_100006cc, i32 %v1_100006dc, i32 268446700)
  %v3_100006e4 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_100006e4 = zext i8 %v3_100006e4 to i32
  store i32 %v3_100006e0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100006f4 = mul nuw nsw i32 %v4_100006e4, 4
  %v0_100006f8 = load i32, i32* @r28, align 4
  %v3_100006f8 = add i32 %v1_100006f4, %v3_100006e0
  %v4_100006f8 = inttoptr i32 %v3_100006f8 to i32*
  store i32 %v0_100006f8, i32* %v4_100006f8, align 4
  %v0_10000700 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000700, i32* @global_var_1001a994.10, align 4
  %v0_10000704 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000704 = trunc i32 %v0_10000704 to i8
  store i8 %v1_10000704, i8* @global_var_1001a990.9, align 1
  store i32 268437260, i32* @lr, align 4
  %v2_10000708 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_1000070c = load i8, i8* @global_var_1001a990.9, align 1
  %v4_1000070c = zext i8 %v3_1000070c to i32
  store i32 %v4_1000070c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000708, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10000720 = load i32, i32* @global_var_1001a994.10, align 4
  %v2_10000724 = inttoptr i32 %v2_10000708 to i32*
  store i32 268448004, i32* %v2_10000724, align 4
  %v0_10000728 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000728 = mul i32 %v0_10000728, 4
  store i32 %v1_10000728, i32* %r4.global-to-local, align 4
  %v0_1000072c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000072c = trunc i32 %v0_1000072c to i8
  %v2_1000072c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000072c = add i32 %v2_1000072c, 4
  %v4_1000072c = inttoptr i32 %v3_1000072c to i8*
  store i8 %v1_1000072c, i8* %v4_1000072c, align 1
  %v0_10000730 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000730 = add i32 %v0_10000730, 4
  store i32 %v1_10000730, i32* %r4.global-to-local, align 4
  store i32 268437304, i32* @lr, align 4
  %v3_10000734 = call i32 @function_10008b38(i32 %v3_10000720, i32 %v1_10000730, i32 268448004)
  %v3_10000738 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000738 = zext i8 %v3_10000738 to i32
  store i32 %v3_10000734, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000748 = mul nuw nsw i32 %v4_10000738, 4
  %v0_1000074c = load i32, i32* @r28, align 4
  %v3_1000074c = add i32 %v1_10000748, %v3_10000734
  %v4_1000074c = inttoptr i32 %v3_1000074c to i32*
  store i32 %v0_1000074c, i32* %v4_1000074c, align 4
  %v0_10000754 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000754, i32* @global_var_1001a994.10, align 4
  %v0_10000758 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000758 = trunc i32 %v0_10000758 to i8
  store i8 %v1_10000758, i8* @global_var_1001a990.9, align 1
  store i32 268437344, i32* @lr, align 4
  %v2_1000075c = call i32 @function_100089c8(i32 1, i32 8)
  %v3_10000760 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000760 = zext i8 %v3_10000760 to i32
  store i32 %v4_10000760, i32* %r4.global-to-local, align 4
  store i32 %v2_1000075c, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000774 = load i32, i32* @global_var_1001a994.10, align 4
  %v2_10000778 = inttoptr i32 %v2_1000075c to i32*
  store i32 268449220, i32* %v2_10000778, align 4
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = mul i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  %v0_10000780 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000780 = trunc i32 %v0_10000780 to i8
  %v2_10000780 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000780 = add i32 %v2_10000780, 4
  %v4_10000780 = inttoptr i32 %v3_10000780 to i8*
  store i8 %v1_10000780, i8* %v4_10000780, align 1
  %v0_10000784 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 4
  store i32 %v1_10000784, i32* %r4.global-to-local, align 4
  store i32 268437388, i32* @lr, align 4
  %v3_10000788 = call i32 @function_10008b38(i32 %v3_10000774, i32 %v1_10000784, i32 268449220)
  %v3_1000078c = load i8, i8* @global_var_1001a990.9, align 1
  %v4_1000078c = zext i8 %v3_1000078c to i32
  store i32 %v3_10000788, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_1000079c = mul nuw nsw i32 %v4_1000078c, 4
  %v0_100007a0 = load i32, i32* @r28, align 4
  %v3_100007a0 = add i32 %v1_1000079c, %v3_10000788
  %v4_100007a0 = inttoptr i32 %v3_100007a0 to i32*
  store i32 %v0_100007a0, i32* %v4_100007a0, align 4
  %v0_100007a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a8, i32* @global_var_1001a994.10, align 4
  %v0_100007ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100007ac = trunc i32 %v0_100007ac to i8
  store i8 %v1_100007ac, i8* @global_var_1001a990.9, align 1
  store i32 268437428, i32* @lr, align 4
  %v2_100007b0 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_100007b4 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_100007b4 = zext i8 %v3_100007b4 to i32
  store i32 %v4_100007b4, i32* %r4.global-to-local, align 4
  store i32 %v2_100007b0, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_100007c8 = load i32, i32* @global_var_1001a994.10, align 4
  %v2_100007cc = inttoptr i32 %v2_100007b0 to i32*
  store i32 268445800, i32* %v2_100007cc, align 4
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = mul i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  %v0_100007d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007d4 = trunc i32 %v0_100007d4 to i8
  %v2_100007d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100007d4 = add i32 %v2_100007d4, 4
  %v4_100007d4 = inttoptr i32 %v3_100007d4 to i8*
  store i8 %v1_100007d4, i8* %v4_100007d4, align 1
  %v0_100007d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d8 = add i32 %v0_100007d8, 4
  store i32 %v1_100007d8, i32* %r4.global-to-local, align 4
  store i32 268437472, i32* @lr, align 4
  %v3_100007dc = call i32 @function_10008b38(i32 %v3_100007c8, i32 %v1_100007d8, i32 268445800)
  %v3_100007e0 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_100007e0 = zext i8 %v3_100007e0 to i32
  store i32 %v3_100007dc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100007f0 = mul nuw nsw i32 %v4_100007e0, 4
  %v0_100007f4 = load i32, i32* @r28, align 4
  %v3_100007f4 = add i32 %v1_100007f0, %v3_100007dc
  %v4_100007f4 = inttoptr i32 %v3_100007f4 to i32*
  store i32 %v0_100007f4, i32* %v4_100007f4, align 4
  %v0_100007fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007fc, i32* @global_var_1001a994.10, align 4
  %v0_10000800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000800 = trunc i32 %v0_10000800 to i8
  store i8 %v1_10000800, i8* @global_var_1001a990.9, align 1
  store i32 268437512, i32* @lr, align 4
  %v2_10000804 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_10000808 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r4.global-to-local, align 4
  store i32 %v2_10000804, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_1000081c = load i32, i32* @global_var_1001a994.10, align 4
  %v2_10000820 = inttoptr i32 %v2_10000804 to i32*
  store i32 268444280, i32* %v2_10000820, align 4
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = mul i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000828 = trunc i32 %v0_10000828 to i8
  %v2_10000828 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000828 = add i32 %v2_10000828, 4
  %v4_10000828 = inttoptr i32 %v3_10000828 to i8*
  store i8 %v1_10000828, i8* %v4_10000828, align 1
  %v0_1000082c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000082c = add i32 %v0_1000082c, 4
  store i32 %v1_1000082c, i32* %r4.global-to-local, align 4
  store i32 268437556, i32* @lr, align 4
  %v3_10000830 = call i32 @function_10008b38(i32 %v3_1000081c, i32 %v1_1000082c, i32 268444280)
  %v3_10000834 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000834 = zext i8 %v3_10000834 to i32
  store i32 %v3_10000830, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000844 = mul nuw nsw i32 %v4_10000834, 4
  %v0_10000848 = load i32, i32* @r28, align 4
  %v3_10000848 = add i32 %v1_10000844, %v3_10000830
  %v4_10000848 = inttoptr i32 %v3_10000848 to i32*
  store i32 %v0_10000848, i32* %v4_10000848, align 4
  %v0_10000850 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000850, i32* @global_var_1001a994.10, align 4
  %v0_10000854 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000854 = trunc i32 %v0_10000854 to i8
  store i8 %v1_10000854, i8* @global_var_1001a990.9, align 1
  store i32 268437596, i32* @lr, align 4
  %v2_10000858 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_1000085c = load i8, i8* @global_var_1001a990.9, align 1
  %v4_1000085c = zext i8 %v3_1000085c to i32
  store i32 %v4_1000085c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000858, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000870 = load i32, i32* @global_var_1001a994.10, align 4
  %v2_10000874 = inttoptr i32 %v2_10000858 to i32*
  store i32 268442724, i32* %v2_10000874, align 4
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = mul i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  %v0_1000087c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000087c = trunc i32 %v0_1000087c to i8
  %v2_1000087c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000087c = add i32 %v2_1000087c, 4
  %v4_1000087c = inttoptr i32 %v3_1000087c to i8*
  store i8 %v1_1000087c, i8* %v4_1000087c, align 1
  %v0_10000880 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000880 = add i32 %v0_10000880, 4
  store i32 %v1_10000880, i32* %r4.global-to-local, align 4
  store i32 268437640, i32* @lr, align 4
  %v3_10000884 = call i32 @function_10008b38(i32 %v3_10000870, i32 %v1_10000880, i32 268442724)
  %v3_10000888 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000888 = zext i8 %v3_10000888 to i32
  store i32 %v3_10000884, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000898 = mul nuw nsw i32 %v4_10000888, 4
  %v0_1000089c = load i32, i32* @r28, align 4
  %v3_1000089c = add i32 %v1_10000898, %v3_10000884
  %v4_1000089c = inttoptr i32 %v3_1000089c to i32*
  store i32 %v0_1000089c, i32* %v4_1000089c, align 4
  %v0_100008a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008a4, i32* @global_var_1001a994.10, align 4
  %v0_100008a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a8 = trunc i32 %v0_100008a8 to i8
  store i8 %v1_100008a8, i8* @global_var_1001a990.9, align 1
  store i32 268437680, i32* @lr, align 4
  %v2_100008ac = call i32 @function_100089c8(i32 1, i32 8)
  %v3_100008b0 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_100008b0 = zext i8 %v3_100008b0 to i32
  store i32 %v4_100008b0, i32* %r4.global-to-local, align 4
  store i32 %v2_100008ac, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_100008c4 = load i32, i32* @global_var_1001a994.10, align 4
  %v2_100008c8 = inttoptr i32 %v2_100008ac to i32*
  store i32 268440988, i32* %v2_100008c8, align 4
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = mul i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  %v0_100008d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008d0 = trunc i32 %v0_100008d0 to i8
  %v2_100008d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008d0 = add i32 %v2_100008d0, 4
  %v4_100008d0 = inttoptr i32 %v3_100008d0 to i8*
  store i8 %v1_100008d0, i8* %v4_100008d0, align 1
  %v0_100008d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008d4 = add i32 %v0_100008d4, 4
  store i32 %v1_100008d4, i32* %r4.global-to-local, align 4
  store i32 268437724, i32* @lr, align 4
  %v3_100008d8 = call i32 @function_10008b38(i32 %v3_100008c4, i32 %v1_100008d4, i32 268440988)
  %v3_100008dc = load i8, i8* @global_var_1001a990.9, align 1
  %v4_100008dc = zext i8 %v3_100008dc to i32
  store i32 %v3_100008d8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_100008ec = mul nuw nsw i32 %v4_100008dc, 4
  %v0_100008f0 = load i32, i32* @r28, align 4
  %v3_100008f0 = add i32 %v1_100008ec, %v3_100008d8
  %v4_100008f0 = inttoptr i32 %v3_100008f0 to i32*
  store i32 %v0_100008f0, i32* %v4_100008f0, align 4
  %v0_100008f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f8, i32* @global_var_1001a994.10, align 4
  %v0_100008fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100008fc = trunc i32 %v0_100008fc to i8
  store i8 %v1_100008fc, i8* @global_var_1001a990.9, align 1
  store i32 268437764, i32* @lr, align 4
  %v2_10000900 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_10000904 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000904 = zext i8 %v3_10000904 to i32
  store i32 %v4_10000904, i32* %r4.global-to-local, align 4
  store i32 %v2_10000900, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000918 = load i32, i32* @global_var_1001a994.10, align 4
  %v2_1000091c = inttoptr i32 %v2_10000900 to i32*
  store i32 268439524, i32* %v2_1000091c, align 4
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = mul i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  %v0_10000924 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000924 = trunc i32 %v0_10000924 to i8
  %v2_10000924 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000924 = add i32 %v2_10000924, 4
  %v4_10000924 = inttoptr i32 %v3_10000924 to i8*
  store i8 %v1_10000924, i8* %v4_10000924, align 1
  %v0_10000928 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000928 = add i32 %v0_10000928, 4
  store i32 %v1_10000928, i32* %r4.global-to-local, align 4
  store i32 268437808, i32* @lr, align 4
  %v3_1000092c = call i32 @function_10008b38(i32 %v3_10000918, i32 %v1_10000928, i32 268439524)
  %v3_10000930 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000930 = zext i8 %v3_10000930 to i32
  store i32 %v3_1000092c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000940 = mul nuw nsw i32 %v4_10000930, 4
  %v0_10000944 = load i32, i32* @r28, align 4
  %v3_10000944 = add i32 %v1_10000940, %v3_1000092c
  %v4_10000944 = inttoptr i32 %v3_10000944 to i32*
  store i32 %v0_10000944, i32* %v4_10000944, align 4
  %v0_1000094c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000094c = trunc i32 %v0_1000094c to i8
  store i8 %v1_1000094c, i8* @global_var_1001a990.9, align 1
  %v0_10000950 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000950, i32* @global_var_1001a994.10, align 4
  store i32 268437848, i32* @lr, align 4
  %v2_10000954 = call i32 @function_100089c8(i32 1, i32 8)
  %v3_10000958 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000958 = zext i8 %v3_10000958 to i32
  store i32 %v4_10000958, i32* %r4.global-to-local, align 4
  store i32 %v2_10000954, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_1000096c = load i32, i32* @global_var_1001a994.10, align 4
  %v2_10000970 = inttoptr i32 %v2_10000954 to i32*
  store i32 268437948, i32* %v2_10000970, align 4
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = mul i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  %v0_10000978 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000978 = trunc i32 %v0_10000978 to i8
  %v2_10000978 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000978 = add i32 %v2_10000978, 4
  %v4_10000978 = inttoptr i32 %v3_10000978 to i8*
  store i8 %v1_10000978, i8* %v4_10000978, align 1
  %v0_1000097c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000097c = add i32 %v0_1000097c, 4
  store i32 %v1_1000097c, i32* %r4.global-to-local, align 4
  store i32 268437892, i32* @lr, align 4
  %v3_10000980 = call i32 @function_10008b38(i32 %v3_1000096c, i32 %v1_1000097c, i32 268437948)
  %v3_10000984 = load i8, i8* @global_var_1001a990.9, align 1
  %v4_10000984 = zext i8 %v3_10000984 to i32
  store i32 %v3_10000980, i32* @global_var_1001a994.10, align 4
  store i32 ptrtoint (i8* @global_var_1001a991.11 to i32), i32* %r0.global-to-local, align 4
  %v1_10000990 = mul nuw nsw i32 %v4_10000984, 4
  %v0_10000994 = load i32, i32* @r28, align 4
  %v3_10000994 = add i32 %v1_10000990, %v3_10000980
  %v4_10000994 = inttoptr i32 %v3_10000994 to i32*
  store i32 %v0_10000994, i32* %v4_10000994, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001a990.9, align 1
  store i32 %v0_10000690, i32* %r0.global-to-local, align 4
  store i32 %v0_100006ac, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001a991.11 to i32), { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001a990.9, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100009bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100009bc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-106 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_100009c0 = load i32, i32* @lr, align 4
  store i32 %v0_100009c0, i32* %r0.global-to-local, align 4
  %v0_100009c4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  %v0_100009d8 = load i32, i32* @r27, align 4
  store i32 %v0_100009c4, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100009e8 = load i32, i32* %r0.global-to-local, align 4
  %v0_10000a04 = load i32, i32* @r24, align 4
  store i32 %arg3, i32* @r25, align 4
  %v0_10000a10 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000a1c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10000a24 = load i32, i32* @r30, align 4
  %v0_10000a28 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268438080, i32* @lr, align 4
  %v2_10000a3c = call i32 @function_100089c8(i32 %arg2, i32 4)
  store i32 %v2_10000a3c, i32* %r20.global-to-local, align 4
  %v0_10000a44 = load i32, i32* @r29, align 4
  %v0_10000a50 = load i32, i32* @r28, align 4
  store i32 %v0_10000a50, i32* %r3.global-to-local, align 4
  store i32 268438104, i32* @lr, align 4
  %v4_10000a54 = inttoptr i32 %v0_10000a44 to i32*
  %v5_10000a54 = call i32 @function_10000300(i32 %v0_10000a50, i32* %v4_10000a54, i32 2, i32 0)
  %v5_10000a64 = trunc i32 %v5_10000a54 to i8
  %v0_10000a6c = load i32, i32* @r29, align 4
  %v0_10000a70 = load i32, i32* @r28, align 4
  store i32 %v0_10000a70, i32* %r3.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v4_10000a74 = inttoptr i32 %v0_10000a6c to i32*
  %v5_10000a74 = call i32 @function_10000300(i32 %v0_10000a70, i32* %v4_10000a74, i32 3, i32 65535)
  %v0_10000a78 = load i32, i32* @r29, align 4
  store i32 %v5_10000a74, i32* %r24.global-to-local, align 4
  %v0_10000a88 = load i32, i32* @r28, align 4
  store i32 %v0_10000a88, i32* %r3.global-to-local, align 4
  store i32 268438160, i32* @lr, align 4
  %v4_10000a8c = inttoptr i32 %v0_10000a78 to i32*
  %v5_10000a8c = call i32 @function_10000300(i32 %v0_10000a88, i32* %v4_10000a8c, i32 4, i32 64)
  %v0_10000a90 = load i32, i32* @r29, align 4
  %v1_10000a9c = urem i32 %v5_10000a8c, 256
  store i32 %v1_10000a9c, i32* %r14.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* @r28, align 4
  store i32 %v0_10000aa0, i32* %r3.global-to-local, align 4
  store i32 268438184, i32* @lr, align 4
  %v4_10000aa4 = inttoptr i32 %v0_10000a90 to i32*
  %v5_10000aa4 = call i32 @function_10000300(i32 %v0_10000aa0, i32* %v4_10000aa4, i32 5, i32 1)
  %v0_10000ab4 = load i32, i32* @r29, align 4
  %v1_10000ab8 = urem i32 %v5_10000aa4, 256
  store i32 %v1_10000ab8, i32* %r23.global-to-local, align 4
  %v0_10000abc = load i32, i32* @r28, align 4
  store i32 %v0_10000abc, i32* %r3.global-to-local, align 4
  store i32 268438212, i32* @lr, align 4
  %v4_10000ac0 = inttoptr i32 %v0_10000ab4 to i32*
  %v5_10000ac0 = call i32 @function_10000300(i32 %v0_10000abc, i32* %v4_10000ac0, i32 6, i32 65535)
  %v0_10000ac8 = load i32, i32* @r29, align 4
  store i32 %v5_10000ac0, i32* %r26.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* @r28, align 4
  store i32 %v0_10000ad8, i32* %r3.global-to-local, align 4
  store i32 268438240, i32* @lr, align 4
  %v4_10000adc = inttoptr i32 %v0_10000ac8 to i32*
  %v5_10000adc = call i32 @function_10000300(i32 %v0_10000ad8, i32* %v4_10000adc, i32 7, i32 65535)
  %v0_10000ae0 = load i32, i32* @r29, align 4
  store i32 %v5_10000adc, i32* %r30.global-to-local, align 4
  %v0_10000af0 = load i32, i32* @r28, align 4
  store i32 %v0_10000af0, i32* %r3.global-to-local, align 4
  store i32 268438264, i32* @lr, align 4
  %v4_10000af4 = inttoptr i32 %v0_10000ae0 to i32*
  %v5_10000af4 = call i32 @function_10000300(i32 %v0_10000af0, i32* %v4_10000af4, i32 0, i32 512)
  %v0_10000af8 = load i32, i32* @r29, align 4
  store i32 %v5_10000af4, i32* %r18.global-to-local, align 4
  %v0_10000b08 = load i32, i32* @r28, align 4
  store i32 %v0_10000b08, i32* %r3.global-to-local, align 4
  store i32 268438288, i32* @lr, align 4
  %v4_10000b0c = inttoptr i32 %v0_10000af8 to i32*
  %v5_10000b0c = call i32 @function_10000300(i32 %v0_10000b08, i32* %v4_10000b0c, i32 1, i32 1)
  %v0_10000b10 = load i32, i32* @r29, align 4
  %v1_10000b14 = urem i32 %v5_10000b0c, 256
  %v0_10000b24 = load i32, i32* @r28, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v4_10000b28 = inttoptr i32 %v0_10000b10 to i32*
  %v5_10000b28 = call i32 @function_10000300(i32 %v0_10000b24, i32* %v4_10000b28, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000b30 = load i32, i32* @global_var_1001a998.12, align 4
  %v0_10000b34 = load i32, i32* @r29, align 4
  store i32 %v5_10000b28, i32* @r31, align 4
  %v0_10000b40 = load i32, i32* @r28, align 4
  store i32 %v0_10000b40, i32* %r3.global-to-local, align 4
  store i32 268438344, i32* @lr, align 4
  %v4_10000b44 = inttoptr i32 %v0_10000b34 to i32*
  %v5_10000b44 = call i32 @function_10000300(i32 %v0_10000b40, i32* %v4_10000b44, i32 24, i32 %v3_10000b30)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268438356, i32* @lr, align 4
  %v0_10000b50 = call i32 @function_10008038()
  %v1_10000b58 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000b58 = add i32 %v1_10000b58, %v0_10000b50
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438380, i32* @lr, align 4
  %v3_10000b68 = call i32 @function_1000866c(i32 2, i32 3, i32 6)
  store i32 %v3_10000b68, i32* %r3.global-to-local, align 4
  %v1_10000b6c = icmp slt i32 %v3_10000b68, -1
  %v3_10000b6c = icmp eq i32 %v3_10000b68, -1
  store i1 %v1_10000b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b6c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000b68, i32* %r21.global-to-local, align 4
  br i1 %v3_10000b6c, label %dec_label_pc_10000ed4, label %dec_label_pc_10000b78

dec_label_pc_10000b78:                            ; preds = %dec_label_pc_100009bc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000b84 = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268438420, i32* @lr, align 4
  %v4_10000b90 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_10000b84, i32 4)
  store i32 %v4_10000b90, i32* %r3.global-to-local, align 4
  %v1_10000b94 = icmp slt i32 %v4_10000b90, -1
  %v3_10000b94 = icmp eq i32 %v4_10000b90, -1
  store i1 %v1_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000b94, label %dec_label_pc_10000fd8, label %dec_label_pc_10000b9c

dec_label_pc_10000b9c:                            ; preds = %dec_label_pc_10000b78
  %v0_10000b9c = load i32, i32* %r19.global-to-local, align 4
  %v1_10000b9c = icmp slt i32 %v0_10000b9c, 0
  %v3_10000b9c = icmp eq i32 %v0_10000b9c, 0
  store i1 %v1_10000b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b9c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000ba0 = load i32, i32* @r31, align 4
  %v1_10000ba0 = urem i32 %v0_10000ba0, 256
  store i32 %v1_10000ba0, i32* @r31, align 4
  %v0_10000ba4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba4, i32* %stack_var_-120, align 4
  %v0_10000ba8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ba8 = urem i32 %v0_10000ba8, 65536
  store i32 %v1_10000ba8, i32* @r24, align 4
  %v0_10000bac = call i32 @__asm_mfcr()
  store i32 %v0_10000bac, i32* %r3.global-to-local, align 4
  %v1_10000bb0 = mul i32 %v0_10000bac, 268435456
  store i32 %v1_10000bb0, i32* %r0.global-to-local, align 4
  %v0_10000bb4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000bb4 = urem i32 %v0_10000bb4, 65536
  store i32 %v1_10000bb4, i32* %r16.global-to-local, align 4
  %v0_10000bb8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000bb8 = urem i32 %v0_10000bb8, 65536
  store i32 %v1_10000bb8, i32* %r17.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r31, align 4
  %v0_10000bc4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000bc4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10000bc4 = or i1 %v0_10000bc4, %v1_10000bc4
  br i1 %v2_10000bc4, label %dec_label_pc_10000d30.preheader, label %dec_label_pc_10000bc8

dec_label_pc_10000bc8:                            ; preds = %dec_label_pc_10000b9c
  %v0_10000bc8 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000bc8 = icmp eq i32 %v0_10000bc8, 0
  store i1 %v3_10000bc8, i1* %cr3_eq.global-to-local, align 1
  %v3_10000bcc = icmp eq i32 %v0_10000bbc, 0
  store i1 %v3_10000bcc, i1* %cr4_eq.global-to-local, align 1
  %v0_10000bd0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000bd0 = urem i32 %v0_10000bd0, 65536
  %v0_10000bd4 = load i32, i32* @r24, align 4
  %v1_10000bd4 = sub i32 -1, %v0_10000bd4
  store i32 %v1_10000bd4, i32* %r11.global-to-local, align 4
  %v1_10000bdc = add nuw nsw i32 %v1_10000bd0, 66
  store i32 %v1_10000bdc, i32* %r0.global-to-local, align 4
  %v1_10000be0 = add nuw nsw i32 %v1_10000bd0, 28
  store i32 %v1_10000be0, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000bd0, 66
  %v1_10000be4 = urem i32 %fold, 65536
  store i32 %v1_10000be4, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_10000bd0, 28
  %v1_10000be8 = urem i32 %fold5, 65536
  store i32 %v1_10000be8, i32* %r26.global-to-local, align 4
  %v1_10000bec = urem i32 %v1_10000bd4, 65536
  store i32 %v1_10000bec, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_10000bd0, 8
  %v1_10000bf0 = urem i32 %fold6, 65536
  store i32 %v1_10000bf0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r22.global-to-local, align 4
  %v4_10000c78 = sext i8 %v5_10000a64 to i32
  br label %dec_label_pc_10000c2c

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000cf0
  %v0_10000c04 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c04 = add i32 %v0_10000c04, 16
  %v2_10000c04 = inttoptr i32 %v1_10000c04 to i32*
  %v3_10000c04 = load i32, i32* %v2_10000c04, align 4
  store i32 %v3_10000c04, i32* %r0.global-to-local, align 4
  %v0_10000c08 = load i32, i32* @r28, align 4
  %v1_10000c08 = trunc i32 %v0_10000c08 to i16
  %v2_10000c08 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c08 = add i32 %v2_10000c08, 4
  %v4_10000c08 = inttoptr i32 %v3_10000c08 to i16*
  store i16 %v1_10000c08, i16* %v4_10000c08, align 2
  %v0_10000c0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c0c = load i32, i32* %r30.global-to-local, align 4
  %v2_10000c0c = add i32 %v1_10000c0c, 16
  %v3_10000c0c = inttoptr i32 %v2_10000c0c to i32*
  store i32 %v0_10000c0c, i32* %v3_10000c0c, align 4
  %v0_10000c10 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000c10 = trunc i32 %v0_10000c10 to i16
  %v2_10000c10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c10 = inttoptr i32 %v2_10000c10 to i16*
  store i16 %v1_10000c10, i16* %v3_10000c10, align 2
  %v3_10000c14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000c14, i32* %r9.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000c18 = trunc i32 %v0_10000c18 to i16
  %v2_10000c18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000c18 = add i32 %v2_10000c18, 2
  %v4_10000c18 = inttoptr i32 %v3_10000c18 to i16*
  store i16 %v1_10000c18, i16* %v4_10000c18, align 2
  %v0_10000c1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10000c1c = add i32 %v0_10000c1c, 1
  %v1_10000c20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000c20 = icmp slt i32 %v1_10000c1c, %v1_10000c20
  %v4_10000c20 = icmp eq i32 %v1_10000c1c, %v1_10000c20
  store i1 %v2_10000c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000c20, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000c1c, i32* %stack_var_-120, align 4
  br i1 %v2_10000c20, label %dec_label_pc_10000c2c, label %dec_label_pc_10000d30.preheader

dec_label_pc_10000c2c:                            ; preds = %dec_label_pc_10000c04, %dec_label_pc_10000d0c, %dec_label_pc_10000bc8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438584, i32* @lr, align 4
  %v2_10000c34 = call i32 @function_100089c8(i32 1510, i32 4)
  store i32 %v2_10000c34, i32* %r3.global-to-local, align 4
  %v3_10000c38 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000c38, i32* %r9.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r31, align 4
  %v1_10000c3c = mul i32 %v0_10000c3c, 4
  store i32 %v1_10000c3c, i32* %r0.global-to-local, align 4
  %v1_10000c40 = load i32, i32* %r20.global-to-local, align 4
  %v3_10000c40 = add i32 %v1_10000c40, %v1_10000c3c
  %v4_10000c40 = inttoptr i32 %v3_10000c40 to i32*
  store i32 %v2_10000c34, i32* %v4_10000c40, align 4
  %v0_10000c44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000c44 = mul i32 %v0_10000c44, 4
  store i32 %v1_10000c44, i32* %r9.global-to-local, align 4
  %v1_10000c48 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000c48 = add i32 %v1_10000c48, %v1_10000c44
  %v3_10000c48 = inttoptr i32 %v2_10000c48 to i32*
  %v4_10000c48 = load i32, i32* %v3_10000c48, align 4
  store i32 %v4_10000c48, i32* %r31.global-to-local, align 4
  %v1_10000c4c = inttoptr i32 %v4_10000c48 to i32*
  %v2_10000c4c = load i32, i32* %v1_10000c4c, align 4
  store i32 %v2_10000c4c, i32* %r0.global-to-local, align 4
  %v1_10000c50 = add i32 %v4_10000c48, 38
  store i32 %v1_10000c50, i32* %r30.global-to-local, align 4
  %v0_10000c54 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000c54 = trunc i32 %v0_10000c54 to i8
  %v3_10000c54 = add i32 %v4_10000c48, 8
  %v4_10000c54 = inttoptr i32 %v3_10000c54 to i8*
  store i8 %v1_10000c54, i8* %v4_10000c54, align 1
  %v0_10000c58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c58 = add i32 %v0_10000c58, 58
  store i32 %v1_10000c58, i32* %r29.global-to-local, align 4
  %v1_10000c5c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000c5c, i32* %r0.global-to-local, align 4
  %v0_10000c60 = load i32, i32* @r24, align 4
  %v1_10000c60 = trunc i32 %v0_10000c60 to i16
  %v2_10000c60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c60 = add i32 %v2_10000c60, 4
  %v4_10000c60 = inttoptr i32 %v3_10000c60 to i16*
  store i16 %v1_10000c60, i16* %v4_10000c60, align 2
  %v1_10000c64 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10000c68 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c68 = add i32 %v0_10000c68, 20
  store i32 %v1_10000c68, i32* %r9.global-to-local, align 4
  %v2_10000c6c = inttoptr i32 %v0_10000c68 to i32*
  store i32 %v1_10000c64, i32* %v2_10000c6c, align 4
  %v0_10000c70 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000c70 = add i32 %v0_10000c70, 24
  store i32 %v1_10000c70, i32* %r11.global-to-local, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000c74 = trunc i32 %v0_10000c74 to i16
  %v3_10000c74 = add i32 %v0_10000c70, 2
  %v4_10000c74 = inttoptr i32 %v3_10000c74 to i16*
  store i16 %v1_10000c74, i16* %v4_10000c74, align 2
  store i32 %v4_10000c78, i32* %r0.global-to-local, align 4
  %v2_10000c7c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c7c = add i32 %v2_10000c7c, 1
  %v4_10000c7c = inttoptr i32 %v3_10000c7c to i8*
  store i8 %v5_10000a64, i8* %v4_10000c7c, align 1
  %v0_10000c80 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000c80, label %dec_label_pc_10000c8c, label %dec_label_pc_10000c84

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c2c
  %v2_10000c88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c88 = add i32 %v2_10000c88, 6
  %v4_10000c88 = inttoptr i32 %v3_10000c88 to i16*
  store i16 16384, i16* %v4_10000c88, align 2
  br label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c2c, %dec_label_pc_10000c84
  %v2_10000c90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000c90 = add i32 %v2_10000c90, 9
  %v4_10000c90 = inttoptr i32 %v3_10000c90 to i8*
  store i8 47, i8* %v4_10000c90, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000c98 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000c98 = add i32 %v2_10000c98, 2
  %v4_10000c98 = inttoptr i32 %v3_10000c98 to i16*
  store i16 25944, i16* %v4_10000c98, align 2
  %v2_10000ca0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000ca0 = add i32 %v2_10000ca0, 12
  %v4_10000ca0 = inttoptr i32 %v3_10000ca0 to i16*
  store i16 2048, i16* %v4_10000ca0, align 2
  %v3_10000ca4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000ca4, i32* %r9.global-to-local, align 4
  %v0_10000ca8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000ca8 = add i32 %v0_10000ca8, 38
  %v2_10000ca8 = inttoptr i32 %v1_10000ca8 to i32*
  %v3_10000ca8 = load i32, i32* %v2_10000ca8, align 4
  store i32 %v3_10000ca8, i32* %r0.global-to-local, align 4
  %v1_10000cb0 = mul i32 %v3_10000ca4, 24
  store i32 %v1_10000cb0, i32* %r9.global-to-local, align 4
  %v1_10000cb4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000cb4, i32* %r0.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cb8 = add i32 %v1_10000cb8, 12
  %v3_10000cb8 = inttoptr i32 %v2_10000cb8 to i32*
  store i32 %v5_10000b44, i32* %v3_10000cb8, align 4
  %v0_10000cbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000cbc = load i32, i32* @r25, align 4
  %v2_10000cbc = add i32 %v1_10000cbc, %v0_10000cbc
  store i32 %v2_10000cbc, i32* %r9.global-to-local, align 4
  %v1_10000cc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000cc0, i32* %r0.global-to-local, align 4
  %v0_10000cc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000cc4 = add i32 %v0_10000cc4, 16
  %v2_10000cc4 = inttoptr i32 %v1_10000cc4 to i32*
  %v3_10000cc4 = load i32, i32* %v2_10000cc4, align 4
  store i32 %v3_10000cc4, i32* %r11.global-to-local, align 4
  %v1_10000cc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000cc8 = add i32 %v1_10000cc8, 38
  %v3_10000cc8 = inttoptr i32 %v2_10000cc8 to i32*
  store i32 %v1_10000cc0, i32* %v3_10000cc8, align 4
  %v0_10000ccc = load i32, i32* %r11.global-to-local, align 4
  %v1_10000ccc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ccc = add i32 %v1_10000ccc, 16
  %v3_10000ccc = inttoptr i32 %v2_10000ccc to i32*
  store i32 %v0_10000ccc, i32* %v3_10000ccc, align 4
  store i32 %v4_10000c78, i32* %r11.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000cd4 = trunc i32 %v0_10000cd4 to i16
  %v2_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cd4 = add i32 %v2_10000cd4, 2
  %v4_10000cd4 = inttoptr i32 %v3_10000cd4 to i16*
  store i16 %v1_10000cd4, i16* %v4_10000cd4, align 2
  %v0_10000cd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000cd8 = trunc i32 %v0_10000cd8 to i8
  %v2_10000cd8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cd8 = add i32 %v2_10000cd8, 1
  %v4_10000cd8 = inttoptr i32 %v3_10000cd8 to i8*
  store i8 %v1_10000cd8, i8* %v4_10000cd8, align 1
  %v0_10000cdc = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cdc = trunc i32 %v0_10000cdc to i16
  %v2_10000cdc = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cdc = add i32 %v2_10000cdc, 4
  %v4_10000cdc = inttoptr i32 %v3_10000cdc to i16*
  store i16 %v1_10000cdc, i16* %v4_10000cdc, align 2
  %v0_10000ce0 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000ce0 = trunc i32 %v0_10000ce0 to i8
  %v2_10000ce0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000ce0 = add i32 %v2_10000ce0, 8
  %v4_10000ce0 = inttoptr i32 %v3_10000ce0 to i8*
  store i8 %v1_10000ce0, i8* %v4_10000ce0, align 1
  %v0_10000ce4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ce4, label %dec_label_pc_10000cf0, label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000c8c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000cec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cec = add i32 %v2_10000cec, 6
  %v4_10000cec = inttoptr i32 %v3_10000cec to i16*
  store i16 16384, i16* %v4_10000cec, align 2
  br label %dec_label_pc_10000cf0

dec_label_pc_10000cf0:                            ; preds = %dec_label_pc_10000c8c, %dec_label_pc_10000ce8
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000cf4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000cf4 = add i32 %v2_10000cf4, 9
  %v4_10000cf4 = inttoptr i32 %v3_10000cf4 to i8*
  store i8 17, i8* %v4_10000cf4, align 1
  %v0_10000cf8 = call i32 @function_100048a8()
  store i32 %v0_10000cf8, i32* %r3.global-to-local, align 4
  %v1_10000cfc = add i32 %v0_10000cf8, -1024
  store i32 %v1_10000cfc, i32* %r0.global-to-local, align 4
  %v1_10000d00 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d00 = add i32 %v1_10000d00, 12
  %v3_10000d00 = inttoptr i32 %v2_10000d00 to i32*
  store i32 %v0_10000cf8, i32* %v3_10000d00, align 4
  %v0_10000d04 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000d04 = sub i32 -1, %v0_10000d04
  store i32 %v1_10000d04, i32* %r0.global-to-local, align 4
  %v0_10000d08 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000d08, label %dec_label_pc_10000d0c, label %dec_label_pc_10000c04

dec_label_pc_10000d0c:                            ; preds = %dec_label_pc_10000cf0
  %v1_10000d0c = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d0c = add i32 %v1_10000d0c, 16
  %v3_10000d0c = inttoptr i32 %v2_10000d0c to i32*
  store i32 %v1_10000d04, i32* %v3_10000d0c, align 4
  %v0_10000d10 = load i32, i32* @r28, align 4
  %v1_10000d10 = trunc i32 %v0_10000d10 to i16
  %v2_10000d10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d10 = add i32 %v2_10000d10, 4
  %v4_10000d10 = inttoptr i32 %v3_10000d10 to i16*
  store i16 %v1_10000d10, i16* %v4_10000d10, align 2
  %v3_10000d14 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000d14, i32* %r9.global-to-local, align 4
  %v0_10000d18 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d18 = trunc i32 %v0_10000d18 to i16
  %v2_10000d18 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i16*
  store i16 %v1_10000d18, i16* %v3_10000d18, align 2
  %v0_10000d1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d1c = add i32 %v0_10000d1c, 1
  store i32 %v1_10000d1c, i32* @r31, align 4
  %v0_10000d20 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d20 = trunc i32 %v0_10000d20 to i16
  %v2_10000d20 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d20 = add i32 %v2_10000d20, 2
  %v4_10000d20 = inttoptr i32 %v3_10000d20 to i16*
  store i16 %v1_10000d20, i16* %v4_10000d20, align 2
  %v0_10000d24 = load i32, i32* @r31, align 4
  %v1_10000d24 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d24 = icmp slt i32 %v0_10000d24, %v1_10000d24
  %v4_10000d24 = icmp eq i32 %v0_10000d24, %v1_10000d24
  store i1 %v2_10000d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000d24, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10000d24, i32* %stack_var_-120, align 4
  br i1 %v2_10000d24, label %dec_label_pc_10000c2c, label %dec_label_pc_10000d30.preheader

dec_label_pc_10000d30.preheader:                  ; preds = %dec_label_pc_10000d0c, %dec_label_pc_10000c04, %dec_label_pc_10000b9c
  %v2_10000d3c = urem i32 %v0_10000bac, 16
  %v1_10000d44 = mul nuw i32 %v2_10000d3c, 268435456
  %v2_10000d50 = ptrtoint i32* %stack_var_-108 to i32
  %v2_10000d58 = ptrtoint i32* %stack_var_-106 to i32
  %v2_10000dec = ptrtoint i32* %stack_var_-116 to i32
  %v2_10000e00 = ptrtoint i32* %stack_var_-112 to i32
  %v3_10000d60 = icmp eq i32 %v0_10000bbc, 0
  %v3_10000d64 = icmp eq i32 %v5_10000b44, -1
  %v3_10000d6c = icmp eq i32 %v1_10000b14, 0
  br label %dec_label_pc_10000d30

dec_label_pc_10000d30:                            ; preds = %dec_label_pc_10000d30.preheader, %dec_label_pc_10000ec0
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10000d3c, i32* %r0.global-to-local, align 4
  %v1_10000d40 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10000d3c)
  store i32 %v1_10000d44, i32* %r0.global-to-local, align 4
  %v0_10000d48 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000d48 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10000d48 = or i1 %v0_10000d48, %v1_10000d48
  br i1 %v2_10000d48, label %dec_label_pc_10000ec0, label %dec_label_pc_10000d4c

dec_label_pc_10000d4c:                            ; preds = %dec_label_pc_10000d30
  store i32 %v0_10000bbc, i32* %r0.global-to-local, align 4
  store i32 %v2_10000d50, i32* %r14.global-to-local, align 4
  store i32 %v1_10000b14, i32* %r11.global-to-local, align 4
  store i1 %v3_10000d60, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10000d64, i1* %cr3_eq.global-to-local, align 1
  %v0_10000d68 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000d68 = add i32 %v0_10000d68, 8
  store i32 %v1_10000d68, i32* %r22.global-to-local, align 4
  store i1 %v3_10000d6c, i1* %cr2_eq.global-to-local, align 1
  %v1_10000d70 = add i32 %v0_10000d68, 66
  store i32 %v1_10000d70, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10000d7c

dec_label_pc_10000d7c:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000d4c
  %v0_10000d7c = phi i32 [ %v1_10000eb0, %dec_label_pc_10000e30 ], [ 0, %dec_label_pc_10000d4c ]
  %v1_10000d7c = mul i32 %v0_10000d7c, 24
  store i32 %v1_10000d7c, i32* %r0.global-to-local, align 4
  %v1_10000d80 = mul i32 %v0_10000d7c, 4
  store i32 %v1_10000d80, i32* %r11.global-to-local, align 4
  %v1_10000d84 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000d84 = add i32 %v1_10000d84, %v1_10000d80
  %v3_10000d84 = inttoptr i32 %v2_10000d84 to i32*
  %v4_10000d84 = load i32, i32* %v3_10000d84, align 4
  store i32 %v4_10000d84, i32* @r28, align 4
  %v1_10000d88 = load i32, i32* @r25, align 4
  %v2_10000d88 = add i32 %v1_10000d88, %v1_10000d7c
  %v1_10000d8c = add i32 %v2_10000d88, 20
  %v2_10000d8c = inttoptr i32 %v1_10000d8c to i8*
  %v3_10000d8c = load i8, i8* %v2_10000d8c, align 1
  %v4_10000d8c = zext i8 %v3_10000d8c to i32
  store i32 %v4_10000d8c, i32* %r9.global-to-local, align 4
  %v1_10000d90 = add i32 %v4_10000d84, 24
  store i32 %v1_10000d90, i32* @r31, align 4
  %v1_10000d94 = add i32 %v4_10000d84, 38
  store i32 %v1_10000d94, i32* @r27, align 4
  %v1_10000d98 = add i32 %v4_10000d84, 58
  store i32 %v1_10000d98, i32* @r30, align 4
  %v1_10000d9c = icmp ult i8 %v3_10000d8c, 31
  %v3_10000d9c = icmp eq i8 %v3_10000d8c, 31
  store i1 %v1_10000d9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000d9c, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000d8c, 32
  br i1 %tmp39, label %dec_label_pc_10000f34, label %dec_label_pc_10000da4

dec_label_pc_10000da4:                            ; preds = %dec_label_pc_10000d7c
  %v0_10000da4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000da4, label %dec_label_pc_10000f5c, label %dec_label_pc_10000da8

dec_label_pc_10000da8:                            ; preds = %dec_label_pc_10000f34, %dec_label_pc_10000da4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10000db0 = load i32, i32* @r24, align 4
  %v2_10000db0 = icmp slt i32 %v0_10000db0, 65535
  %v4_10000db0 = icmp eq i32 %v0_10000db0, 65535
  store i1 %v2_10000db0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000db0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000db0, label %dec_label_pc_10000f74, label %dec_label_pc_10000db8

dec_label_pc_10000db8:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000da8
  %v1_10000db8 = phi i32 [ %v1_10000f6c, %dec_label_pc_10000f5c ], [ 65535, %dec_label_pc_10000da8 ]
  %v0_10000db8 = load i32, i32* %r16.global-to-local, align 4
  %v2_10000db8 = icmp slt i32 %v0_10000db8, %v1_10000db8
  %v4_10000db8 = icmp eq i32 %v0_10000db8, %v1_10000db8
  store i1 %v2_10000db8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000db8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000db8, label %dec_label_pc_10000f94, label %dec_label_pc_10000dc0

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge, %dec_label_pc_10000db8
  %v1_10000dc0 = phi i32 [ %v1_10000dc0.pre, %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge ], [ %v1_10000db8, %dec_label_pc_10000db8 ]
  %v0_10000dc0 = load i32, i32* %r17.global-to-local, align 4
  %v2_10000dc0 = icmp slt i32 %v0_10000dc0, %v1_10000dc0
  %v4_10000dc0 = icmp eq i32 %v0_10000dc0, %v1_10000dc0
  store i1 %v2_10000dc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000dc0, label %dec_label_pc_10000fa4, label %dec_label_pc_10000dc8

dec_label_pc_10000dc8:                            ; preds = %dec_label_pc_10000f94, %dec_label_pc_10000dc0
  %v0_10000dc8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000dc8, label %dec_label_pc_10000fb0, label %dec_label_pc_10000dcc

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000dc8
  %v0_10000dcc = load i32, i32* @r28, align 4
  %v1_10000dcc = add i32 %v0_10000dcc, 16
  %v2_10000dcc = inttoptr i32 %v1_10000dcc to i32*
  %v3_10000dcc = load i32, i32* %v2_10000dcc, align 4
  store i32 %v3_10000dcc, i32* %r0.global-to-local, align 4
  %v1_10000dd0 = load i32, i32* @r27, align 4
  %v2_10000dd0 = add i32 %v1_10000dd0, 16
  %v3_10000dd0 = inttoptr i32 %v2_10000dd0 to i32*
  store i32 %v3_10000dcc, i32* %v3_10000dd0, align 4
  br label %dec_label_pc_10000dd4

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000fb0, %dec_label_pc_10000dcc
  %v0_10000dd4 = call i32 @function_100048a8()
  store i32 %v0_10000dd4, i32* %r3.global-to-local, align 4
  store i32 %v0_10000dd4, i32* %stack_var_-116, align 4
  %v0_10000ddc = call i32 @function_100048a8()
  store i32 %v0_10000ddc, i32* %r3.global-to-local, align 4
  store i32 %v0_10000ddc, i32* %stack_var_-112, align 4
  %v0_10000de4 = call i32 @function_100048a8()
  store i32 %v0_10000de4, i32* %stack_var_-108, align 4
  %v0_10000df0 = load i32, i32* @r31, align 4
  store i32 %v0_10000df0, i32* %r3.global-to-local, align 4
  store i32 268439036, i32* @lr, align 4
  %v3_10000df8 = call i32 @function_100077ac(i32 %v0_10000df0, i32 %v2_10000dec, i32 4)
  %v0_10000dfc = load i32, i32* @r31, align 4
  %v1_10000dfc = add i32 %v0_10000dfc, 6
  store i32 %v1_10000dfc, i32* %r3.global-to-local, align 4
  store i32 268439052, i32* @lr, align 4
  %v3_10000e08 = call i32 @function_100077ac(i32 %v1_10000dfc, i32 %v2_10000e00, i32 4)
  %v0_10000e0c = load i32, i32* @r31, align 4
  %v1_10000e0c = add i32 %v0_10000e0c, 4
  store i32 %v1_10000e0c, i32* %r3.global-to-local, align 4
  store i32 268439068, i32* @lr, align 4
  %v3_10000e18 = call i32 @function_100077ac(i32 %v1_10000e0c, i32 %v2_10000d50, i32 2)
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e1c = add i32 %v0_10000e1c, 10
  store i32 %v1_10000e1c, i32* %r3.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v3_10000e28 = call i32 @function_100077ac(i32 %v1_10000e1c, i32 %v2_10000d58, i32 2)
  store i32 %v3_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000e2c, label %dec_label_pc_10000e30, label %dec_label_pc_10000fbc

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000dd4, %dec_label_pc_10000fbc
  %v0_10000e30 = load i32, i32* @r26, align 4
  %v1_10000e30 = trunc i32 %v0_10000e30 to i16
  %v2_10000e30 = load i32, i32* @r28, align 4
  %v3_10000e30 = add i32 %v2_10000e30, 10
  %v4_10000e30 = inttoptr i32 %v3_10000e30 to i16*
  store i16 %v1_10000e30, i16* %v4_10000e30, align 2
  %v0_10000e38 = load i32, i32* @r28, align 4
  store i32 %v0_10000e38, i32* @r3, align 4
  %v2_10000e3c = call i32 @function_10003ca8(i32 %v0_10000e38, i32 20)
  %v3_10000e3c = trunc i32 %v2_10000e3c to i16
  %v3_10000e44 = load i32, i32* @r28, align 4
  %v4_10000e44 = add i32 %v3_10000e44, 10
  %v5_10000e44 = inttoptr i32 %v4_10000e44 to i16*
  store i16 %v3_10000e3c, i16* %v5_10000e44, align 2
  %v0_10000e48 = load i32, i32* @r27, align 4
  store i32 %v0_10000e48, i32* @r3, align 4
  %v0_10000e4c = load i32, i32* @r26, align 4
  %v1_10000e4c = trunc i32 %v0_10000e4c to i16
  %v3_10000e4c = add i32 %v0_10000e48, 10
  %v4_10000e4c = inttoptr i32 %v3_10000e4c to i16*
  store i16 %v1_10000e4c, i16* %v4_10000e4c, align 2
  %v2_10000e50 = call i32 @function_10003ca8(i32 %v0_10000e48, i32 20)
  %v3_10000e50 = trunc i32 %v2_10000e50 to i16
  %v0_10000e54 = load i32, i32* @r30, align 4
  store i32 %v0_10000e54, i32* @r4, align 4
  %v3_10000e58 = load i32, i32* @r27, align 4
  %v4_10000e58 = add i32 %v3_10000e58, 10
  %v5_10000e58 = inttoptr i32 %v4_10000e58 to i16*
  store i16 %v3_10000e50, i16* %v5_10000e58, align 2
  %v0_10000e5c = load i32, i32* %r22.global-to-local, align 4
  %v0_10000e60 = load i32, i32* @r26, align 4
  %v1_10000e60 = trunc i32 %v0_10000e60 to i16
  %v2_10000e60 = load i32, i32* @r30, align 4
  %v3_10000e60 = add i32 %v2_10000e60, 6
  %v4_10000e60 = inttoptr i32 %v3_10000e60 to i16*
  store i16 %v1_10000e60, i16* %v4_10000e60, align 2
  %v0_10000e64 = load i32, i32* @r27, align 4
  store i32 %v0_10000e64, i32* %r3.global-to-local, align 4
  %v0_10000e68 = load i32, i32* @r30, align 4
  %v1_10000e68 = add i32 %v0_10000e68, 4
  %v2_10000e68 = inttoptr i32 %v1_10000e68 to i16*
  %v3_10000e68 = load i16, i16* %v2_10000e68, align 2
  %v4_10000e68 = zext i16 %v3_10000e68 to i32
  %v4_10000e6c = call i32 @function_10003d0c(i32 %v0_10000e64, i32 %v0_10000e54, i32 %v4_10000e68, i32 %v0_10000e5c)
  %v5_10000e6c = trunc i32 %v4_10000e6c to i16
  store i32 %v4_10000e6c, i32* %r3.global-to-local, align 4
  %v3_10000e70 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10000e70, i32* %r0.global-to-local, align 4
  %v0_10000e74 = load i32, i32* @r28, align 4
  %v1_10000e74 = add i32 %v0_10000e74, 16
  %v2_10000e74 = inttoptr i32 %v1_10000e74 to i32*
  %v3_10000e74 = load i32, i32* %v2_10000e74, align 4
  store i32 %v3_10000e74, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000e7c = mul i32 %v3_10000e70, 24
  store i32 %v1_10000e7c, i32* %r0.global-to-local, align 4
  %v3_10000e80 = load i32, i32* @r30, align 4
  %v4_10000e80 = add i32 %v3_10000e80, 6
  %v5_10000e80 = inttoptr i32 %v4_10000e80 to i16*
  store i16 %v5_10000e6c, i16* %v5_10000e80, align 2
  %v0_10000e84 = load i32, i32* @r28, align 4
  %v0_10000e88 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10000e88, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e8c = load i32, i32* @r25, align 4
  %v2_10000e8c = add i32 %v1_10000e8c, %v0_10000e8c
  %v0_10000e90 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000e90 = trunc i32 %v0_10000e90 to i16
  %v5_10000e90 = inttoptr i32 %v2_10000e8c to i16*
  store i16 %v3_10000e90, i16* %v5_10000e90, align 2
  %v0_10000e94 = load i32, i32* %r11.global-to-local, align 4
  %v2_10000e94 = add i32 %v2_10000e8c, 4
  %v3_10000e94 = inttoptr i32 %v2_10000e94 to i32*
  store i32 %v0_10000e94, i32* %v3_10000e94, align 4
  %v0_10000e98 = load i32, i32* %r23.global-to-local, align 4
  %v0_10000e9c = load i32, i32* @r26, align 4
  %v1_10000e9c = trunc i32 %v0_10000e9c to i16
  %v3_10000e9c = add i32 %v2_10000e8c, 2
  %v4_10000e9c = inttoptr i32 %v3_10000e9c to i16*
  store i16 %v1_10000e9c, i16* %v4_10000e9c, align 2
  store i32 268439212, i32* @lr, align 4
  %v6_10000ea8 = call i32 @function_100085f0(i32 %v0_10000e88, i32 %v0_10000e84, i32 %v0_10000e98, i32 16384, i32 %v2_10000e8c, i32 16)
  store i32 %v6_10000ea8, i32* %r3.global-to-local, align 4
  %v3_10000eac = load i32, i32* %stack_var_-120, align 4
  %v1_10000eb0 = add i32 %v3_10000eac, 1
  store i32 %v1_10000eb0, i32* %r9.global-to-local, align 4
  %v1_10000eb4 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000eb4 = icmp slt i32 %v1_10000eb0, %v1_10000eb4
  %v4_10000eb4 = icmp eq i32 %v1_10000eb0, %v1_10000eb4
  store i1 %v2_10000eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000eb4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000eb0, i32* %stack_var_-120, align 4
  br i1 %v2_10000eb4, label %dec_label_pc_10000d7c, label %dec_label_pc_10000ec0

dec_label_pc_10000ec0:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000d30
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v0_10000ec4 = call i32 @function_10008038()
  store i32 %v0_10000ec4, i32* %r3.global-to-local, align 4
  store i32 %v2_10000b58, i32* %r0.global-to-local, align 4
  %v2_10000ecc = icmp slt i32 %v2_10000b58, %v0_10000ec4
  %v4_10000ecc = icmp eq i32 %v2_10000b58, %v0_10000ec4
  store i1 %v2_10000ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000ecc, label %dec_label_pc_10000ed4, label %dec_label_pc_10000d30

dec_label_pc_10000ed4:                            ; preds = %dec_label_pc_10000ec0, %dec_label_pc_100009bc, %dec_label_pc_10000fd8
  store i32 %v0_100009e8, i32* %r0.global-to-local, align 4
  %v1_10000ee8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100009c4)
  store i32 %v0_10000a04, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a10, i32* %r26.global-to-local, align 4
  store i32 %v0_100009d8, i32* %r27.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r29.global-to-local, align 4
  store i32 %v0_10000a24, i32* %r30.global-to-local, align 4
  store i32 %v0_10000a28, i32* %r31.global-to-local, align 4
  %v0_10000f30 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000f30

dec_label_pc_10000f34:                            ; preds = %dec_label_pc_10000d7c
  %v1_10000f34 = add i32 %v2_10000d88, 16
  %v2_10000f34 = inttoptr i32 %v1_10000f34 to i32*
  %v3_10000f34 = load i32, i32* %v2_10000f34, align 4
  store i32 %v3_10000f34, i32* %r29.global-to-local, align 4
  %v0_10000f38 = call i32 @function_100048a8()
  store i32 %v0_10000f38, i32* %r3.global-to-local, align 4
  %v3_10000f3c = load i32, i32* %stack_var_-120, align 4
  %v1_10000f40 = mul i32 %v3_10000f3c, 24
  %v1_10000f44 = load i32, i32* @r25, align 4
  %v2_10000f44 = add i32 %v1_10000f44, %v1_10000f40
  store i32 %v2_10000f44, i32* %r9.global-to-local, align 4
  %v1_10000f48 = add i32 %v2_10000f44, 20
  %v2_10000f48 = inttoptr i32 %v1_10000f48 to i8*
  %v3_10000f48 = load i8, i8* %v2_10000f48, align 1
  %v4_10000f48 = zext i8 %v3_10000f48 to i32
  store i32 %v4_10000f48, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000f48, 64
  %v2_10000f4c = zext i8 %tmp to i32
  %v3_10000f4c = lshr i32 %v0_10000f38, %v2_10000f4c
  store i32 %v3_10000f4c, i32* %r3.global-to-local, align 4
  %v0_10000f50 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f50 = add i32 %v3_10000f4c, %v0_10000f50
  store i32 %v2_10000f50, i32* %r29.global-to-local, align 4
  %v1_10000f54 = load i32, i32* @r28, align 4
  %v2_10000f54 = add i32 %v1_10000f54, 16
  %v3_10000f54 = inttoptr i32 %v2_10000f54 to i32*
  store i32 %v2_10000f50, i32* %v3_10000f54, align 4
  %v0_10000f58 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f58, label %dec_label_pc_10000f5c, label %dec_label_pc_10000da8

dec_label_pc_10000f5c:                            ; preds = %dec_label_pc_10000f34, %dec_label_pc_10000da4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10000f60 = call i32 @function_100048a8()
  store i32 %v0_10000f60, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10000f68 = load i32, i32* @r28, align 4
  %v2_10000f68 = add i32 %v1_10000f68, 12
  %v3_10000f68 = inttoptr i32 %v2_10000f68 to i32*
  store i32 %v0_10000f60, i32* %v3_10000f68, align 4
  %v0_10000f6c = load i32, i32* @r24, align 4
  %v1_10000f6c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f6c = icmp slt i32 %v0_10000f6c, %v1_10000f6c
  %v4_10000f6c = icmp eq i32 %v0_10000f6c, %v1_10000f6c
  store i1 %v2_10000f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f6c, label %dec_label_pc_10000f74, label %dec_label_pc_10000db8

dec_label_pc_10000f74:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000da8
  %v0_10000f74 = call i32 @function_100048a8()
  %v0_10000f78 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000f78 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f78 = icmp slt i32 %v0_10000f78, %v1_10000f78
  %v4_10000f78 = icmp eq i32 %v0_10000f78, %v1_10000f78
  store i1 %v2_10000f78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f78, i1* %cr7_eq.global-to-local, align 1
  %v1_10000f7c = urem i32 %v0_10000f74, 65536
  store i32 %v1_10000f7c, i32* %r3.global-to-local, align 4
  %v1_10000f80 = add nsw i32 %v1_10000f7c, -1000
  store i32 %v1_10000f80, i32* %r0.global-to-local, align 4
  %v1_10000f84 = trunc i32 %v0_10000f74 to i16
  %v2_10000f84 = load i32, i32* @r28, align 4
  %v3_10000f84 = add i32 %v2_10000f84, 4
  %v4_10000f84 = inttoptr i32 %v3_10000f84 to i16*
  store i16 %v1_10000f84, i16* %v4_10000f84, align 2
  %v0_10000f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000f88 = sub i32 -1, %v0_10000f88
  store i32 %v1_10000f88, i32* %r0.global-to-local, align 4
  %v1_10000f8c = trunc i32 %v1_10000f88 to i16
  %v2_10000f8c = load i32, i32* @r27, align 4
  %v3_10000f8c = add i32 %v2_10000f8c, 4
  %v4_10000f8c = inttoptr i32 %v3_10000f8c to i16*
  store i16 %v1_10000f8c, i16* %v4_10000f8c, align 2
  br i1 %v4_10000f78, label %dec_label_pc_10000f94, label %dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge

dec_label_pc_10000f74.dec_label_pc_10000dc0_crit_edge: ; preds = %dec_label_pc_10000f74
  %v1_10000dc0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000dc0

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000f74, %dec_label_pc_10000db8
  %v0_10000f94 = call i32 @function_100048a8()
  %v1_10000f94 = trunc i32 %v0_10000f94 to i16
  store i32 %v0_10000f94, i32* %r3.global-to-local, align 4
  %v0_10000f98 = load i32, i32* %r17.global-to-local, align 4
  %v1_10000f98 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000f98 = icmp slt i32 %v0_10000f98, %v1_10000f98
  %v4_10000f98 = icmp eq i32 %v0_10000f98, %v1_10000f98
  store i1 %v2_10000f98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10000f98, i1* %cr7_eq.global-to-local, align 1
  %v3_10000f9c = load i32, i32* @r28, align 4
  %v4_10000f9c = add i32 %v3_10000f9c, 58
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v1_10000f94, i16* %v5_10000f9c, align 2
  br i1 %v4_10000f98, label %dec_label_pc_10000fa4, label %dec_label_pc_10000dc8

dec_label_pc_10000fa4:                            ; preds = %dec_label_pc_10000f94, %dec_label_pc_10000dc0
  %v0_10000fa4 = call i32 @function_100048a8()
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  store i32 %v0_10000fa4, i32* %r3.global-to-local, align 4
  %v3_10000fa8 = load i32, i32* @r30, align 4
  %v4_10000fa8 = add i32 %v3_10000fa8, 2
  %v5_10000fa8 = inttoptr i32 %v4_10000fa8 to i16*
  store i16 %v1_10000fa4, i16* %v5_10000fa8, align 2
  %v0_10000fac = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10000fac, label %dec_label_pc_10000fb0, label %dec_label_pc_10000dcc

dec_label_pc_10000fb0:                            ; preds = %dec_label_pc_10000fa4, %dec_label_pc_10000dc8
  %v0_10000fb0 = call i32 @function_100048a8()
  store i32 %v0_10000fb0, i32* %r3.global-to-local, align 4
  %v1_10000fb4 = load i32, i32* @r27, align 4
  %v2_10000fb4 = add i32 %v1_10000fb4, 16
  %v3_10000fb4 = inttoptr i32 %v2_10000fb4 to i32*
  store i32 %v0_10000fb0, i32* %v3_10000fb4, align 4
  br label %dec_label_pc_10000dd4

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000dd4
  %v0_10000fbc = load i32, i32* @r30, align 4
  %v1_10000fbc = add i32 %v0_10000fbc, 8
  store i32 %v1_10000fbc, i32* @r29, align 4
  %v0_10000fc0 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10000fc0, i32* @r4, align 4
  store i32 %v1_10000fbc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10000fcc.13 to i32), i32* @lr, align 4
  %v0_10000fc8 = call i32 @function_10004968()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10000fd0 = load i32, i32* @r29, align 4
  %v2_10000fd0 = load i32, i32* %r18.global-to-local, align 4
  %v4_10000fd0 = add i32 %v2_10000fd0, %v1_10000fd0
  %v5_10000fd0 = inttoptr i32 %v4_10000fd0 to i8*
  store i8 0, i8* %v5_10000fd0, align 1
  br label %dec_label_pc_10000e30

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000b78
  %v0_10000fd8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* @lr, align 4
  %v0_10000fdc = call i32 @function_10007cb0()
  store i32 %v0_10000fdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed4

; uselistorder directives
  uselistorder i32 %v0_10000fa4, { 1, 0 }
  uselistorder i32 %v0_10000f94, { 1, 0 }
  uselistorder i32 %v1_10000f88, { 1, 0 }
  uselistorder i32 %v1_10000f7c, { 1, 0 }
  uselistorder i32 %v0_10000f74, { 1, 0 }
  uselistorder i32 %v1_10000f6c, { 1, 2, 0 }
  uselistorder i32 %v0_10000ec4, { 1, 0, 2 }
  uselistorder i32 %v1_10000eb0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000e8c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000e6c, { 1, 0 }
  uselistorder i32 %v1_10000dc0, { 1, 0 }
  uselistorder i32 %v1_10000db8, { 0, 2, 1 }
  uselistorder i32 %v4_10000d84, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000d80, { 1, 0 }
  uselistorder i32 %v2_10000d3c, { 2, 1, 0 }
  uselistorder i32 %v1_10000d04, { 1, 0 }
  uselistorder i32 %v1_10000c44, { 1, 0 }
  uselistorder i32 %v1_10000c3c, { 1, 0 }
  uselistorder i32 %v1_10000c1c, { 0, 2, 1 }
  uselistorder i32 %v1_10000bd0, { 1, 0 }
  uselistorder i32 %v0_10000bd0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10000bbc, { 2, 1, 0 }
  uselistorder i32 %v4_10000b90, { 1, 0, 2 }
  uselistorder i32 %v3_10000b68, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10000b58, { 1, 2, 0 }
  uselistorder i32 %v5_10000b44, { 1, 0 }
  uselistorder i8 %v5_10000a64, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 8, 9, 20, 21 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 1 }
  uselistorder i32* %r29.global-to-local, { 8, 7, 9, 0, 1, 3, 2, 4, 5, 6, 10, 11, 12, 13, 17, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 15, 16, 30, 31, 32, 33, 34 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000d30, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10000c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c2c, { 1, 0, 2 }
}

define i32 @function_10000fe4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000fe4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10000fe8 = load i32, i32* @lr, align 4
  store i32 %v0_10000fe8, i32* %r0.global-to-local, align 4
  %v0_10000fec = call i32 @__asm_mfcr()
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001000 = load i32, i32* @r27, align 4
  store i32 %v0_10000fec, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r0.global-to-local, align 4
  %v0_1000102c = load i32, i32* @r24, align 4
  %v0_10001030 = load i32, i32* @r25, align 4
  store i32 %arg3, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001044 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_1000104c = load i32, i32* @r30, align 4
  %v0_10001050 = load i32, i32* @r31, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 268439656, i32* @lr, align 4
  %v2_10001064 = call i32 @function_100089c8(i32 %arg2, i32 4)
  store i32 %v2_10001064, i32* %r21.global-to-local, align 4
  %v0_1000106c = load i32, i32* @r29, align 4
  %v0_10001078 = load i32, i32* @r28, align 4
  store i32 %v0_10001078, i32* %r3.global-to-local, align 4
  store i32 268439680, i32* @lr, align 4
  %v4_1000107c = inttoptr i32 %v0_1000106c to i32*
  %v5_1000107c = call i32 @function_10000300(i32 %v0_10001078, i32* %v4_1000107c, i32 2, i32 0)
  %v5_1000108c = trunc i32 %v5_1000107c to i8
  %v0_10001094 = load i32, i32* @r29, align 4
  %v0_10001098 = load i32, i32* @r28, align 4
  store i32 %v0_10001098, i32* %r3.global-to-local, align 4
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = inttoptr i32 %v0_10001094 to i32*
  %v5_1000109c = call i32 @function_10000300(i32 %v0_10001098, i32* %v4_1000109c, i32 3, i32 65535)
  %v0_100010a0 = load i32, i32* @r29, align 4
  store i32 %v5_1000109c, i32* %r25.global-to-local, align 4
  %v0_100010b0 = load i32, i32* @r28, align 4
  store i32 %v0_100010b0, i32* %r3.global-to-local, align 4
  store i32 268439736, i32* @lr, align 4
  %v4_100010b4 = inttoptr i32 %v0_100010a0 to i32*
  %v5_100010b4 = call i32 @function_10000300(i32 %v0_100010b0, i32* %v4_100010b4, i32 4, i32 64)
  %v0_100010b8 = load i32, i32* @r29, align 4
  %v1_100010c4 = urem i32 %v5_100010b4, 256
  store i32 %v1_100010c4, i32* %r14.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  store i32 %v0_100010c8, i32* %r3.global-to-local, align 4
  store i32 268439760, i32* @lr, align 4
  %v4_100010cc = inttoptr i32 %v0_100010b8 to i32*
  %v5_100010cc = call i32 @function_10000300(i32 %v0_100010c8, i32* %v4_100010cc, i32 5, i32 1)
  %v0_100010dc = load i32, i32* @r29, align 4
  %v1_100010e0 = urem i32 %v5_100010cc, 256
  store i32 %v1_100010e0, i32* %r23.global-to-local, align 4
  %v0_100010e4 = load i32, i32* @r28, align 4
  store i32 %v0_100010e4, i32* %r3.global-to-local, align 4
  store i32 268439788, i32* @lr, align 4
  %v4_100010e8 = inttoptr i32 %v0_100010dc to i32*
  %v5_100010e8 = call i32 @function_10000300(i32 %v0_100010e4, i32* %v4_100010e8, i32 6, i32 65535)
  %v0_100010f0 = load i32, i32* @r29, align 4
  store i32 %v5_100010e8, i32* %r24.global-to-local, align 4
  %v0_10001100 = load i32, i32* @r28, align 4
  store i32 %v0_10001100, i32* %r3.global-to-local, align 4
  store i32 268439816, i32* @lr, align 4
  %v4_10001104 = inttoptr i32 %v0_100010f0 to i32*
  %v5_10001104 = call i32 @function_10000300(i32 %v0_10001100, i32* %v4_10001104, i32 7, i32 65535)
  %v0_10001108 = load i32, i32* @r29, align 4
  store i32 %v5_10001104, i32* %r30.global-to-local, align 4
  %v0_10001118 = load i32, i32* @r28, align 4
  store i32 %v0_10001118, i32* %r3.global-to-local, align 4
  store i32 268439840, i32* @lr, align 4
  %v4_1000111c = inttoptr i32 %v0_10001108 to i32*
  %v5_1000111c = call i32 @function_10000300(i32 %v0_10001118, i32* %v4_1000111c, i32 0, i32 512)
  %v0_10001120 = load i32, i32* @r29, align 4
  store i32 %v5_1000111c, i32* %r19.global-to-local, align 4
  %v0_10001130 = load i32, i32* @r28, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* @lr, align 4
  %v4_10001134 = inttoptr i32 %v0_10001120 to i32*
  %v5_10001134 = call i32 @function_10000300(i32 %v0_10001130, i32* %v4_10001134, i32 1, i32 1)
  %v0_10001138 = load i32, i32* @r29, align 4
  %v1_1000113c = urem i32 %v5_10001134, 256
  %v0_1000114c = load i32, i32* @r28, align 4
  store i32 %v0_1000114c, i32* %r3.global-to-local, align 4
  store i32 268439892, i32* @lr, align 4
  %v4_10001150 = inttoptr i32 %v0_10001138 to i32*
  %v5_10001150 = call i32 @function_10000300(i32 %v0_1000114c, i32* %v4_10001150, i32 18, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001158 = load i32, i32* @global_var_1001a998.12, align 4
  %v0_1000115c = load i32, i32* @r29, align 4
  store i32 %v5_10001150, i32* @r31, align 4
  %v0_10001168 = load i32, i32* @r28, align 4
  store i32 %v0_10001168, i32* %r3.global-to-local, align 4
  store i32 268439920, i32* @lr, align 4
  %v4_1000116c = inttoptr i32 %v0_1000115c to i32*
  %v5_1000116c = call i32 @function_10000300(i32 %v0_10001168, i32* %v4_1000116c, i32 24, i32 %v3_10001158)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268439932, i32* @lr, align 4
  %v0_10001178 = call i32 @function_10008038()
  %v1_10001180 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001180 = add i32 %v1_10001180, %v0_10001178
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_1000866c(i32 2, i32 3, i32 6)
  store i32 %v3_10001190, i32* %r3.global-to-local, align 4
  %v1_10001194 = icmp slt i32 %v3_10001190, -1
  %v3_10001194 = icmp eq i32 %v3_10001190, -1
  store i1 %v1_10001194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001194, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001190, i32* %r22.global-to-local, align 4
  br i1 %v3_10001194, label %dec_label_pc_1000148c, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10000fe4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011ac = ptrtoint i32* %stack_var_-120 to i32
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268439996, i32* @lr, align 4
  %v4_100011b8 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_100011ac, i32 4)
  store i32 %v4_100011b8, i32* %r3.global-to-local, align 4
  %v1_100011bc = icmp slt i32 %v4_100011b8, -1
  %v3_100011bc = icmp eq i32 %v4_100011b8, -1
  store i1 %v1_100011bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100011bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011bc, label %dec_label_pc_10001590, label %dec_label_pc_100011c4

dec_label_pc_100011c4:                            ; preds = %dec_label_pc_100011a0
  %v0_100011c4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011c4 = icmp slt i32 %v0_100011c4, 0
  %v3_100011c4 = icmp eq i32 %v0_100011c4, 0
  store i1 %v1_100011c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100011c4, i1* %cr7_eq.global-to-local, align 1
  %v0_100011c8 = load i32, i32* @r31, align 4
  %v1_100011c8 = urem i32 %v0_100011c8, 256
  store i32 %v1_100011c8, i32* @r31, align 4
  %v0_100011cc = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100011cc, i32* %stack_var_-120, align 4
  %v0_100011d0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100011d0 = urem i32 %v0_100011d0, 65536
  store i32 %v1_100011d0, i32* @r25, align 4
  %v0_100011d4 = call i32 @__asm_mfcr()
  store i32 %v0_100011d4, i32* %r3.global-to-local, align 4
  %v1_100011d8 = mul i32 %v0_100011d4, 268435456
  store i32 %v1_100011d8, i32* %r0.global-to-local, align 4
  %v0_100011dc = load i32, i32* %r24.global-to-local, align 4
  %v1_100011dc = urem i32 %v0_100011dc, 65536
  store i32 %v1_100011dc, i32* %r17.global-to-local, align 4
  %v0_100011e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100011e0 = urem i32 %v0_100011e0, 65536
  store i32 %v1_100011e0, i32* %r18.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r31, align 4
  %v0_100011ec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100011ec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100011ec = or i1 %v0_100011ec, %v1_100011ec
  br i1 %v2_100011ec, label %dec_label_pc_1000134c.preheader, label %dec_label_pc_100011f0

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100011c4
  %v0_100011f0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100011f0 = icmp eq i32 %v0_100011f0, 0
  store i1 %v3_100011f0, i1* %cr3_eq.global-to-local, align 1
  %v3_100011f4 = icmp eq i32 %v0_100011e4, 0
  store i1 %v3_100011f4, i1* %cr4_eq.global-to-local, align 1
  %v0_100011f8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100011f8 = urem i32 %v0_100011f8, 65536
  %v0_100011fc = load i32, i32* @r25, align 4
  %v1_100011fc = sub i32 -1, %v0_100011fc
  store i32 %v1_100011fc, i32* %r11.global-to-local, align 4
  %v1_10001204 = add nuw nsw i32 %v1_100011f8, 52
  store i32 %v1_10001204, i32* %r0.global-to-local, align 4
  %v1_10001208 = add nuw nsw i32 %v1_100011f8, 28
  store i32 %v1_10001208, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100011f8, 52
  %v1_1000120c = urem i32 %fold, 65536
  store i32 %v1_1000120c, i32* %r23.global-to-local, align 4
  %fold5 = add i32 %v0_100011f8, 28
  %v1_10001210 = urem i32 %fold5, 65536
  store i32 %v1_10001210, i32* %r24.global-to-local, align 4
  %v1_10001214 = urem i32 %v1_100011fc, 65536
  store i32 %v1_10001214, i32* %r27.global-to-local, align 4
  %fold6 = add i32 %v0_100011f8, 8
  %v1_10001218 = urem i32 %fold6, 65536
  store i32 %v1_10001218, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_1000129c = sext i8 %v5_1000108c to i32
  br label %dec_label_pc_10001254

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_1000130c
  %v0_1000122c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000122c = add i32 %v0_1000122c, 16
  %v2_1000122c = inttoptr i32 %v1_1000122c to i32*
  %v3_1000122c = load i32, i32* %v2_1000122c, align 4
  store i32 %v3_1000122c, i32* %r0.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r28, align 4
  %v1_10001230 = trunc i32 %v0_10001230 to i16
  %v2_10001230 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001230 = add i32 %v2_10001230, 4
  %v4_10001230 = inttoptr i32 %v3_10001230 to i16*
  store i16 %v1_10001230, i16* %v4_10001230, align 2
  %v0_10001234 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001234 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001234 = add i32 %v1_10001234, 16
  %v3_10001234 = inttoptr i32 %v2_10001234 to i32*
  store i32 %v0_10001234, i32* %v3_10001234, align 4
  %v0_10001238 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001238 = trunc i32 %v0_10001238 to i16
  %v2_10001238 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001238 = inttoptr i32 %v2_10001238 to i16*
  store i16 %v1_10001238, i16* %v3_10001238, align 2
  %v3_1000123c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000123c, i32* %r9.global-to-local, align 4
  %v0_10001240 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001240 = trunc i32 %v0_10001240 to i16
  %v2_10001240 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001240 = add i32 %v2_10001240, 2
  %v4_10001240 = inttoptr i32 %v3_10001240 to i16*
  store i16 %v1_10001240, i16* %v4_10001240, align 2
  %v0_10001244 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001244 = add i32 %v0_10001244, 1
  %v1_10001248 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001248 = icmp slt i32 %v1_10001244, %v1_10001248
  %v4_10001248 = icmp eq i32 %v1_10001244, %v1_10001248
  store i1 %v2_10001248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001248, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001244, i32* %stack_var_-120, align 4
  br i1 %v2_10001248, label %dec_label_pc_10001254, label %dec_label_pc_1000134c.preheader

dec_label_pc_10001254:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001328, %dec_label_pc_100011f0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v2_1000125c = call i32 @function_100089c8(i32 1510, i32 4)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v3_10001260 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001260, i32* %r9.global-to-local, align 4
  %v0_10001264 = load i32, i32* @r31, align 4
  %v1_10001264 = mul i32 %v0_10001264, 4
  store i32 %v1_10001264, i32* %r0.global-to-local, align 4
  %v1_10001268 = load i32, i32* %r21.global-to-local, align 4
  %v3_10001268 = add i32 %v1_10001268, %v1_10001264
  %v4_10001268 = inttoptr i32 %v3_10001268 to i32*
  store i32 %v2_1000125c, i32* %v4_10001268, align 4
  %v0_1000126c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000126c = mul i32 %v0_1000126c, 4
  store i32 %v1_1000126c, i32* %r9.global-to-local, align 4
  %v1_10001270 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001270 = add i32 %v1_10001270, %v1_1000126c
  %v3_10001270 = inttoptr i32 %v2_10001270 to i32*
  %v4_10001270 = load i32, i32* %v3_10001270, align 4
  store i32 %v4_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = inttoptr i32 %v4_10001270 to i32*
  %v2_10001274 = load i32, i32* %v1_10001274, align 4
  store i32 %v2_10001274, i32* %r0.global-to-local, align 4
  %v1_10001278 = add i32 %v4_10001270, 24
  store i32 %v1_10001278, i32* %r31.global-to-local, align 4
  %v0_1000127c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000127c = trunc i32 %v0_1000127c to i8
  %v3_1000127c = add i32 %v4_10001270, 8
  %v4_1000127c = inttoptr i32 %v3_1000127c to i8*
  store i8 %v1_1000127c, i8* %v4_1000127c, align 1
  %v0_10001280 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001280 = add i32 %v0_10001280, 44
  store i32 %v1_10001280, i32* %r30.global-to-local, align 4
  %v1_10001284 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001284, i32* %r0.global-to-local, align 4
  %v0_10001288 = load i32, i32* @r25, align 4
  %v1_10001288 = trunc i32 %v0_10001288 to i16
  %v2_10001288 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001288 = add i32 %v2_10001288, 4
  %v4_10001288 = inttoptr i32 %v3_10001288 to i16*
  store i16 %v1_10001288, i16* %v4_10001288, align 2
  %v1_1000128c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001290 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001290 = add i32 %v0_10001290, 20
  store i32 %v1_10001290, i32* %r9.global-to-local, align 4
  %v2_10001294 = inttoptr i32 %v0_10001290 to i32*
  store i32 %v1_1000128c, i32* %v2_10001294, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = trunc i32 %v0_10001298 to i16
  %v2_10001298 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001298 = add i32 %v2_10001298, 2
  %v4_10001298 = inttoptr i32 %v3_10001298 to i16*
  store i16 %v1_10001298, i16* %v4_10001298, align 2
  store i32 %v4_1000129c, i32* %r0.global-to-local, align 4
  %v2_100012a0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012a0 = add i32 %v2_100012a0, 1
  %v4_100012a0 = inttoptr i32 %v3_100012a0 to i8*
  store i8 %v5_1000108c, i8* %v4_100012a0, align 1
  %v0_100012a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100012a4, label %dec_label_pc_100012b0, label %dec_label_pc_100012a8

dec_label_pc_100012a8:                            ; preds = %dec_label_pc_10001254
  %v2_100012ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ac = add i32 %v2_100012ac, 6
  %v4_100012ac = inttoptr i32 %v3_100012ac to i16*
  store i16 16384, i16* %v4_100012ac, align 2
  br label %dec_label_pc_100012b0

dec_label_pc_100012b0:                            ; preds = %dec_label_pc_10001254, %dec_label_pc_100012a8
  store i32 47, i32* %r11.global-to-local, align 4
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_100012b8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012b8 = add i32 %v2_100012b8, 9
  %v4_100012b8 = inttoptr i32 %v3_100012b8 to i8*
  store i8 47, i8* %v4_100012b8, align 1
  %v0_100012bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100012bc = trunc i32 %v0_100012bc to i16
  %v2_100012bc = load i32, i32* %r9.global-to-local, align 4
  %v3_100012bc = add i32 %v2_100012bc, 2
  %v4_100012bc = inttoptr i32 %v3_100012bc to i16*
  store i16 %v1_100012bc, i16* %v4_100012bc, align 2
  %v3_100012c0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100012c0, i32* %r9.global-to-local, align 4
  %v0_100012c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100012c4 = add i32 %v0_100012c4, 24
  %v2_100012c4 = inttoptr i32 %v1_100012c4 to i32*
  %v3_100012c4 = load i32, i32* %v2_100012c4, align 4
  store i32 %v3_100012c4, i32* %r0.global-to-local, align 4
  %v1_100012cc = mul i32 %v3_100012c0, 24
  store i32 %v1_100012cc, i32* %r9.global-to-local, align 4
  %v1_100012d0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 12
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v5_1000116c, i32* %v3_100012d4, align 4
  %v0_100012d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012d8 = load i32, i32* @r26, align 4
  %v2_100012d8 = add i32 %v1_100012d8, %v0_100012d8
  store i32 %v2_100012d8, i32* %r9.global-to-local, align 4
  %v1_100012dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100012dc, i32* %r0.global-to-local, align 4
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v1_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e4 = add i32 %v1_100012e4, 24
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i32*
  store i32 %v1_100012dc, i32* %v3_100012e4, align 4
  %v0_100012e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100012e8 = add i32 %v1_100012e8, 16
  %v3_100012e8 = inttoptr i32 %v2_100012e8 to i32*
  store i32 %v0_100012e8, i32* %v3_100012e8, align 4
  store i32 %v4_1000129c, i32* %r11.global-to-local, align 4
  %v0_100012f0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100012f0 = trunc i32 %v0_100012f0 to i16
  %v2_100012f0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f0 = add i32 %v2_100012f0, 2
  %v4_100012f0 = inttoptr i32 %v3_100012f0 to i16*
  store i16 %v1_100012f0, i16* %v4_100012f0, align 2
  %v0_100012f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100012f4 = trunc i32 %v0_100012f4 to i8
  %v2_100012f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f4 = add i32 %v2_100012f4, 1
  %v4_100012f4 = inttoptr i32 %v3_100012f4 to i8*
  store i8 %v1_100012f4, i8* %v4_100012f4, align 1
  %v0_100012f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100012f8 = trunc i32 %v0_100012f8 to i16
  %v2_100012f8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100012f8 = add i32 %v2_100012f8, 4
  %v4_100012f8 = inttoptr i32 %v3_100012f8 to i16*
  store i16 %v1_100012f8, i16* %v4_100012f8, align 2
  %v0_100012fc = load i32, i32* %r14.global-to-local, align 4
  %v1_100012fc = trunc i32 %v0_100012fc to i8
  %v2_100012fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100012fc = add i32 %v2_100012fc, 8
  %v4_100012fc = inttoptr i32 %v3_100012fc to i8*
  store i8 %v1_100012fc, i8* %v4_100012fc, align 1
  %v0_10001300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001300, label %dec_label_pc_1000130c, label %dec_label_pc_10001304

dec_label_pc_10001304:                            ; preds = %dec_label_pc_100012b0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001308 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001308 = add i32 %v2_10001308, 6
  %v4_10001308 = inttoptr i32 %v3_10001308 to i16*
  store i16 16384, i16* %v4_10001308, align 2
  br label %dec_label_pc_1000130c

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012b0, %dec_label_pc_10001304
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001310 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001310 = add i32 %v2_10001310, 9
  %v4_10001310 = inttoptr i32 %v3_10001310 to i8*
  store i8 17, i8* %v4_10001310, align 1
  %v0_10001314 = call i32 @function_100048a8()
  store i32 %v0_10001314, i32* %r3.global-to-local, align 4
  %v1_10001318 = add i32 %v0_10001314, -1024
  store i32 %v1_10001318, i32* %r0.global-to-local, align 4
  %v1_1000131c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000131c = add i32 %v1_1000131c, 12
  %v3_1000131c = inttoptr i32 %v2_1000131c to i32*
  store i32 %v0_10001314, i32* %v3_1000131c, align 4
  %v0_10001320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001320 = sub i32 -1, %v0_10001320
  store i32 %v1_10001320, i32* %r0.global-to-local, align 4
  %v0_10001324 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001324, label %dec_label_pc_10001328, label %dec_label_pc_1000122c

dec_label_pc_10001328:                            ; preds = %dec_label_pc_1000130c
  %v1_10001328 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001328 = add i32 %v1_10001328, 16
  %v3_10001328 = inttoptr i32 %v2_10001328 to i32*
  store i32 %v1_10001320, i32* %v3_10001328, align 4
  %v0_1000132c = load i32, i32* @r28, align 4
  %v1_1000132c = trunc i32 %v0_1000132c to i16
  %v2_1000132c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000132c = add i32 %v2_1000132c, 4
  %v4_1000132c = inttoptr i32 %v3_1000132c to i16*
  store i16 %v1_1000132c, i16* %v4_1000132c, align 2
  %v3_10001330 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001330, i32* %r9.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001334 = inttoptr i32 %v2_10001334 to i16*
  store i16 %v1_10001334, i16* %v3_10001334, align 2
  %v0_10001338 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001338 = add i32 %v0_10001338, 1
  store i32 %v1_10001338, i32* @r31, align 4
  %v0_1000133c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000133c = trunc i32 %v0_1000133c to i16
  %v2_1000133c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000133c = add i32 %v2_1000133c, 2
  %v4_1000133c = inttoptr i32 %v3_1000133c to i16*
  store i16 %v1_1000133c, i16* %v4_1000133c, align 2
  %v0_10001340 = load i32, i32* @r31, align 4
  %v1_10001340 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001340 = icmp slt i32 %v0_10001340, %v1_10001340
  %v4_10001340 = icmp eq i32 %v0_10001340, %v1_10001340
  store i1 %v2_10001340, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001340, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10001340, i32* %stack_var_-120, align 4
  br i1 %v2_10001340, label %dec_label_pc_10001254, label %dec_label_pc_1000134c.preheader

dec_label_pc_1000134c.preheader:                  ; preds = %dec_label_pc_10001328, %dec_label_pc_1000122c, %dec_label_pc_100011c4
  %v2_10001358 = urem i32 %v0_100011d4, 16
  %v1_10001360 = mul nuw i32 %v2_10001358, 268435456
  %v3_1000137c = icmp eq i32 %v0_100011e4, 0
  %v3_10001380 = icmp eq i32 %v5_1000116c, -1
  %v3_10001388 = icmp eq i32 %v1_1000113c, 0
  br label %dec_label_pc_1000134c

dec_label_pc_1000134c:                            ; preds = %dec_label_pc_1000134c.preheader, %dec_label_pc_10001478
  store i32 0, i32* %stack_var_-120, align 4
  store i32 %v2_10001358, i32* %r0.global-to-local, align 4
  %v1_1000135c = call %0 @__asm_mtcrf(i32 1, i32 %v2_10001358)
  store i32 %v1_10001360, i32* %r0.global-to-local, align 4
  %v0_10001364 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10001364 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10001364 = or i1 %v0_10001364, %v1_10001364
  br i1 %v2_10001364, label %dec_label_pc_10001478, label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_1000134c
  store i32 %v0_100011e4, i32* %r0.global-to-local, align 4
  %v0_1000136c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000136c = add i32 %v0_1000136c, 8
  store i32 %v1_1000136c, i32* %r23.global-to-local, align 4
  %v1_10001374 = add i32 %v0_1000136c, 52
  store i32 %v1_10001374, i32* @r24, align 4
  store i32 %v1_1000113c, i32* %r11.global-to-local, align 4
  store i1 %v3_1000137c, i1* %cr4_eq.global-to-local, align 1
  store i1 %v3_10001380, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i1 %v3_10001388, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10001390

dec_label_pc_10001390:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_10001368
  %v0_10001390 = phi i32 [ %v1_10001468, %dec_label_pc_100013e8 ], [ 0, %dec_label_pc_10001368 ]
  %v1_10001390 = mul i32 %v0_10001390, 24
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = mul i32 %v0_10001390, 4
  store i32 %v1_10001394, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, %v1_10001394
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  %v4_10001398 = load i32, i32* %v3_10001398, align 4
  store i32 %v4_10001398, i32* @r28, align 4
  %v1_1000139c = load i32, i32* @r26, align 4
  %v2_1000139c = add i32 %v1_1000139c, %v1_10001390
  %v1_100013a0 = add i32 %v2_1000139c, 20
  %v2_100013a0 = inttoptr i32 %v1_100013a0 to i8*
  %v3_100013a0 = load i8, i8* %v2_100013a0, align 1
  %v4_100013a0 = zext i8 %v3_100013a0 to i32
  store i32 %v4_100013a0, i32* %r9.global-to-local, align 4
  %v1_100013a4 = add i32 %v4_10001398, 24
  store i32 %v1_100013a4, i32* @r27, align 4
  %v1_100013a8 = add i32 %v4_10001398, 44
  store i32 %v1_100013a8, i32* @r31, align 4
  %v1_100013ac = icmp ult i8 %v3_100013a0, 31
  %v3_100013ac = icmp eq i8 %v3_100013a0, 31
  store i1 %v1_100013ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100013ac, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_100013a0, 32
  br i1 %tmp35, label %dec_label_pc_100014ec, label %dec_label_pc_100013b4

dec_label_pc_100013b4:                            ; preds = %dec_label_pc_10001390
  %v0_100013b4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013b4, label %dec_label_pc_10001514, label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_100014ec, %dec_label_pc_100013b4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100013c0 = load i32, i32* @r25, align 4
  %v2_100013c0 = icmp slt i32 %v0_100013c0, 65535
  %v4_100013c0 = icmp eq i32 %v0_100013c0, 65535
  store i1 %v2_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013c0, label %dec_label_pc_1000152c, label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_10001514, %dec_label_pc_100013b8
  %v1_100013c8 = phi i32 [ %v1_10001524, %dec_label_pc_10001514 ], [ 65535, %dec_label_pc_100013b8 ]
  %v0_100013c8 = load i32, i32* %r17.global-to-local, align 4
  %v2_100013c8 = icmp slt i32 %v0_100013c8, %v1_100013c8
  %v4_100013c8 = icmp eq i32 %v0_100013c8, %v1_100013c8
  store i1 %v2_100013c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013c8, label %dec_label_pc_1000154c, label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge, %dec_label_pc_100013c8
  %v1_100013d0 = phi i32 [ %v1_100013d0.pre, %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge ], [ %v1_100013c8, %dec_label_pc_100013c8 ]
  %v0_100013d0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100013d0 = icmp slt i32 %v0_100013d0, %v1_100013d0
  %v4_100013d0 = icmp eq i32 %v0_100013d0, %v1_100013d0
  store i1 %v2_100013d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100013d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100013d0, label %dec_label_pc_1000155c, label %dec_label_pc_100013d8

dec_label_pc_100013d8:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100013d0
  %v0_100013d8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100013d8, label %dec_label_pc_10001568, label %dec_label_pc_100013dc

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_1000155c, %dec_label_pc_100013d8
  %v0_100013dc = load i32, i32* @r28, align 4
  %v1_100013dc = add i32 %v0_100013dc, 16
  %v2_100013dc = inttoptr i32 %v1_100013dc to i32*
  %v3_100013dc = load i32, i32* %v2_100013dc, align 4
  store i32 %v3_100013dc, i32* %r0.global-to-local, align 4
  %v1_100013e0 = load i32, i32* @r27, align 4
  %v2_100013e0 = add i32 %v1_100013e0, 16
  %v3_100013e0 = inttoptr i32 %v2_100013e0 to i32*
  store i32 %v3_100013dc, i32* %v3_100013e0, align 4
  %v0_100013e4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013e4, label %dec_label_pc_100013e8, label %dec_label_pc_10001574

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013dc, %dec_label_pc_10001568, %dec_label_pc_10001574
  %v0_100013e8 = load i32, i32* @r30, align 4
  %v1_100013e8 = trunc i32 %v0_100013e8 to i16
  %v2_100013e8 = load i32, i32* @r28, align 4
  %v3_100013e8 = add i32 %v2_100013e8, 10
  %v4_100013e8 = inttoptr i32 %v3_100013e8 to i16*
  store i16 %v1_100013e8, i16* %v4_100013e8, align 2
  %v0_100013f0 = load i32, i32* @r28, align 4
  store i32 %v0_100013f0, i32* @r3, align 4
  %v2_100013f4 = call i32 @function_10003ca8(i32 %v0_100013f0, i32 20)
  %v3_100013f4 = trunc i32 %v2_100013f4 to i16
  %v3_100013fc = load i32, i32* @r28, align 4
  %v4_100013fc = add i32 %v3_100013fc, 10
  %v5_100013fc = inttoptr i32 %v4_100013fc to i16*
  store i16 %v3_100013f4, i16* %v5_100013fc, align 2
  %v0_10001400 = load i32, i32* @r27, align 4
  store i32 %v0_10001400, i32* @r3, align 4
  %v0_10001404 = load i32, i32* @r30, align 4
  %v1_10001404 = trunc i32 %v0_10001404 to i16
  %v3_10001404 = add i32 %v0_10001400, 10
  %v4_10001404 = inttoptr i32 %v3_10001404 to i16*
  store i16 %v1_10001404, i16* %v4_10001404, align 2
  %v2_10001408 = call i32 @function_10003ca8(i32 %v0_10001400, i32 20)
  %v3_10001408 = trunc i32 %v2_10001408 to i16
  %v0_1000140c = load i32, i32* @r31, align 4
  store i32 %v0_1000140c, i32* @r4, align 4
  %v3_10001410 = load i32, i32* @r27, align 4
  %v4_10001410 = add i32 %v3_10001410, 10
  %v5_10001410 = inttoptr i32 %v4_10001410 to i16*
  store i16 %v3_10001408, i16* %v5_10001410, align 2
  %v0_10001414 = load i32, i32* %r23.global-to-local, align 4
  %v0_10001418 = load i32, i32* @r30, align 4
  %v1_10001418 = trunc i32 %v0_10001418 to i16
  %v2_10001418 = load i32, i32* @r31, align 4
  %v3_10001418 = add i32 %v2_10001418, 6
  %v4_10001418 = inttoptr i32 %v3_10001418 to i16*
  store i16 %v1_10001418, i16* %v4_10001418, align 2
  %v0_1000141c = load i32, i32* @r27, align 4
  store i32 %v0_1000141c, i32* %r3.global-to-local, align 4
  %v0_10001420 = load i32, i32* @r31, align 4
  %v1_10001420 = add i32 %v0_10001420, 4
  %v2_10001420 = inttoptr i32 %v1_10001420 to i16*
  %v3_10001420 = load i16, i16* %v2_10001420, align 2
  %v4_10001420 = zext i16 %v3_10001420 to i32
  %v4_10001424 = call i32 @function_10003d0c(i32 %v0_1000141c, i32 %v0_1000140c, i32 %v4_10001420, i32 %v0_10001414)
  %v5_10001424 = trunc i32 %v4_10001424 to i16
  store i32 %v4_10001424, i32* %r3.global-to-local, align 4
  %v3_10001428 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10001428, i32* %r0.global-to-local, align 4
  %v0_1000142c = load i32, i32* @r28, align 4
  %v1_1000142c = add i32 %v0_1000142c, 16
  %v2_1000142c = inttoptr i32 %v1_1000142c to i32*
  %v3_1000142c = load i32, i32* %v2_1000142c, align 4
  store i32 %v3_1000142c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001434 = mul i32 %v3_10001428, 24
  store i32 %v1_10001434, i32* %r0.global-to-local, align 4
  %v3_10001438 = load i32, i32* @r31, align 4
  %v4_10001438 = add i32 %v3_10001438, 6
  %v5_10001438 = inttoptr i32 %v4_10001438 to i16*
  store i16 %v5_10001424, i16* %v5_10001438, align 2
  %v0_1000143c = load i32, i32* @r28, align 4
  %v0_10001440 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001440, i32* %r3.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001444 = load i32, i32* @r26, align 4
  %v2_10001444 = add i32 %v1_10001444, %v0_10001444
  %v0_10001448 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001448 = trunc i32 %v0_10001448 to i16
  %v5_10001448 = inttoptr i32 %v2_10001444 to i16*
  store i16 %v3_10001448, i16* %v5_10001448, align 2
  %v0_1000144c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000144c = add i32 %v2_10001444, 4
  %v3_1000144c = inttoptr i32 %v2_1000144c to i32*
  store i32 %v0_1000144c, i32* %v3_1000144c, align 4
  %v0_10001450 = load i32, i32* @r24, align 4
  %v0_10001454 = load i32, i32* @r30, align 4
  %v1_10001454 = trunc i32 %v0_10001454 to i16
  %v3_10001454 = add i32 %v2_10001444, 2
  %v4_10001454 = inttoptr i32 %v3_10001454 to i16*
  store i16 %v1_10001454, i16* %v4_10001454, align 2
  store i32 268440676, i32* @lr, align 4
  %v6_10001460 = call i32 @function_100085f0(i32 %v0_10001440, i32 %v0_1000143c, i32 %v0_10001450, i32 16384, i32 %v2_10001444, i32 16)
  store i32 %v6_10001460, i32* %r3.global-to-local, align 4
  %v3_10001464 = load i32, i32* %stack_var_-120, align 4
  %v1_10001468 = add i32 %v3_10001464, 1
  store i32 %v1_10001468, i32* %r9.global-to-local, align 4
  %v1_1000146c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000146c = icmp slt i32 %v1_10001468, %v1_1000146c
  %v4_1000146c = icmp eq i32 %v1_10001468, %v1_1000146c
  store i1 %v2_1000146c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000146c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001468, i32* %stack_var_-120, align 4
  br i1 %v2_1000146c, label %dec_label_pc_10001390, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_1000134c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268440704, i32* @lr, align 4
  %v0_1000147c = call i32 @function_10008038()
  store i32 %v0_1000147c, i32* %r3.global-to-local, align 4
  store i32 %v2_10001180, i32* %r0.global-to-local, align 4
  %v2_10001484 = icmp slt i32 %v2_10001180, %v0_1000147c
  %v4_10001484 = icmp eq i32 %v2_10001180, %v0_1000147c
  store i1 %v2_10001484, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001484, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001484, label %dec_label_pc_1000148c, label %dec_label_pc_1000134c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_10000fe4, %dec_label_pc_10001590
  store i32 %v0_10001010, i32* %r0.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000fec)
  store i32 %v0_1000102c, i32* %r24.global-to-local, align 4
  store i32 %v0_10001030, i32* %r25.global-to-local, align 4
  store i32 %v0_10001000, i32* %r27.global-to-local, align 4
  store i32 %v0_10001044, i32* %r29.global-to-local, align 4
  store i32 %v0_1000104c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001050, i32* %r31.global-to-local, align 4
  %v0_100014e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100014e8

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_10001390
  %v1_100014ec = add i32 %v2_1000139c, 16
  %v2_100014ec = inttoptr i32 %v1_100014ec to i32*
  %v3_100014ec = load i32, i32* %v2_100014ec, align 4
  store i32 %v3_100014ec, i32* %r29.global-to-local, align 4
  %v0_100014f0 = call i32 @function_100048a8()
  store i32 %v0_100014f0, i32* %r3.global-to-local, align 4
  %v3_100014f4 = load i32, i32* %stack_var_-120, align 4
  %v1_100014f8 = mul i32 %v3_100014f4, 24
  %v1_100014fc = load i32, i32* @r26, align 4
  %v2_100014fc = add i32 %v1_100014fc, %v1_100014f8
  store i32 %v2_100014fc, i32* %r9.global-to-local, align 4
  %v1_10001500 = add i32 %v2_100014fc, 20
  %v2_10001500 = inttoptr i32 %v1_10001500 to i8*
  %v3_10001500 = load i8, i8* %v2_10001500, align 1
  %v4_10001500 = zext i8 %v3_10001500 to i32
  store i32 %v4_10001500, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001500, 64
  %v2_10001504 = zext i8 %tmp to i32
  %v3_10001504 = lshr i32 %v0_100014f0, %v2_10001504
  store i32 %v3_10001504, i32* %r3.global-to-local, align 4
  %v0_10001508 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001508 = add i32 %v3_10001504, %v0_10001508
  store i32 %v2_10001508, i32* %r29.global-to-local, align 4
  %v1_1000150c = load i32, i32* @r28, align 4
  %v2_1000150c = add i32 %v1_1000150c, 16
  %v3_1000150c = inttoptr i32 %v2_1000150c to i32*
  store i32 %v2_10001508, i32* %v3_1000150c, align 4
  %v0_10001510 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001510, label %dec_label_pc_10001514, label %dec_label_pc_100013b8

dec_label_pc_10001514:                            ; preds = %dec_label_pc_100014ec, %dec_label_pc_100013b4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001518 = call i32 @function_100048a8()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  %v0_1000151c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000151c = or i32 %v0_1000151c, 65535
  store i32 %v1_1000151c, i32* %r29.global-to-local, align 4
  %v1_10001520 = load i32, i32* @r28, align 4
  %v2_10001520 = add i32 %v1_10001520, 12
  %v3_10001520 = inttoptr i32 %v2_10001520 to i32*
  store i32 %v0_10001518, i32* %v3_10001520, align 4
  %v0_10001524 = load i32, i32* @r25, align 4
  %v1_10001524 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001524 = icmp slt i32 %v0_10001524, %v1_10001524
  %v4_10001524 = icmp eq i32 %v0_10001524, %v1_10001524
  store i1 %v2_10001524, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001524, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001524, label %dec_label_pc_1000152c, label %dec_label_pc_100013c8

dec_label_pc_1000152c:                            ; preds = %dec_label_pc_10001514, %dec_label_pc_100013b8
  %v0_1000152c = call i32 @function_100048a8()
  %v0_10001530 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001530 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001530 = icmp slt i32 %v0_10001530, %v1_10001530
  %v4_10001530 = icmp eq i32 %v0_10001530, %v1_10001530
  store i1 %v2_10001530, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001530, i1* %cr7_eq.global-to-local, align 1
  %v1_10001534 = urem i32 %v0_1000152c, 65536
  store i32 %v1_10001534, i32* %r3.global-to-local, align 4
  %v1_10001538 = add nsw i32 %v1_10001534, -1000
  store i32 %v1_10001538, i32* %r0.global-to-local, align 4
  %v1_1000153c = trunc i32 %v0_1000152c to i16
  %v2_1000153c = load i32, i32* @r28, align 4
  %v3_1000153c = add i32 %v2_1000153c, 4
  %v4_1000153c = inttoptr i32 %v3_1000153c to i16*
  store i16 %v1_1000153c, i16* %v4_1000153c, align 2
  %v0_10001540 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001540 = sub i32 -1, %v0_10001540
  store i32 %v1_10001540, i32* %r0.global-to-local, align 4
  %v1_10001544 = trunc i32 %v1_10001540 to i16
  %v2_10001544 = load i32, i32* @r27, align 4
  %v3_10001544 = add i32 %v2_10001544, 4
  %v4_10001544 = inttoptr i32 %v3_10001544 to i16*
  store i16 %v1_10001544, i16* %v4_10001544, align 2
  br i1 %v4_10001530, label %dec_label_pc_1000154c, label %dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge

dec_label_pc_1000152c.dec_label_pc_100013d0_crit_edge: ; preds = %dec_label_pc_1000152c
  %v1_100013d0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100013d0

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_1000152c, %dec_label_pc_100013c8
  %v0_1000154c = call i32 @function_100048a8()
  %v1_1000154c = trunc i32 %v0_1000154c to i16
  store i32 %v0_1000154c, i32* %r3.global-to-local, align 4
  %v0_10001550 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001550 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001550 = icmp slt i32 %v0_10001550, %v1_10001550
  %v4_10001550 = icmp eq i32 %v0_10001550, %v1_10001550
  store i1 %v2_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10001550, i1* %cr7_eq.global-to-local, align 1
  %v3_10001554 = load i32, i32* @r28, align 4
  %v4_10001554 = add i32 %v3_10001554, 44
  %v5_10001554 = inttoptr i32 %v4_10001554 to i16*
  store i16 %v1_1000154c, i16* %v5_10001554, align 2
  br i1 %v4_10001550, label %dec_label_pc_1000155c, label %dec_label_pc_100013d8

dec_label_pc_1000155c:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100013d0
  %v0_1000155c = call i32 @function_100048a8()
  %v1_1000155c = trunc i32 %v0_1000155c to i16
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  %v3_10001560 = load i32, i32* @r31, align 4
  %v4_10001560 = add i32 %v3_10001560, 2
  %v5_10001560 = inttoptr i32 %v4_10001560 to i16*
  store i16 %v1_1000155c, i16* %v5_10001560, align 2
  %v0_10001564 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001564, label %dec_label_pc_10001568, label %dec_label_pc_100013dc

dec_label_pc_10001568:                            ; preds = %dec_label_pc_1000155c, %dec_label_pc_100013d8
  %v0_10001568 = call i32 @function_100048a8()
  store i32 %v0_10001568, i32* %r3.global-to-local, align 4
  %v1_1000156c = load i32, i32* @r27, align 4
  %v2_1000156c = add i32 %v1_1000156c, 16
  %v3_1000156c = inttoptr i32 %v2_1000156c to i32*
  store i32 %v0_10001568, i32* %v3_1000156c, align 4
  %v0_10001570 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001570, label %dec_label_pc_100013e8, label %dec_label_pc_10001574

dec_label_pc_10001574:                            ; preds = %dec_label_pc_100013dc, %dec_label_pc_10001568
  %v0_10001574 = load i32, i32* @r31, align 4
  %v1_10001574 = add i32 %v0_10001574, 8
  store i32 %v1_10001574, i32* @r29, align 4
  %v0_10001578 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10001578, i32* @r4, align 4
  store i32 %v1_10001574, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10001584.14 to i32), i32* @lr, align 4
  %v0_10001580 = call i32 @function_10004968()
  store i32 %v0_10001580, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001588 = load i32, i32* @r29, align 4
  %v2_10001588 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001588 = add i32 %v2_10001588, %v1_10001588
  %v5_10001588 = inttoptr i32 %v4_10001588 to i8*
  store i8 0, i8* %v5_10001588, align 1
  br label %dec_label_pc_100013e8

dec_label_pc_10001590:                            ; preds = %dec_label_pc_100011a0
  %v0_10001590 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10001590, i32* %r3.global-to-local, align 4
  store i32 268440984, i32* @lr, align 4
  %v0_10001594 = call i32 @function_10007cb0()
  store i32 %v0_10001594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000148c

; uselistorder directives
  uselistorder i32 %v0_1000155c, { 1, 0 }
  uselistorder i32 %v0_1000154c, { 1, 0 }
  uselistorder i32 %v1_10001540, { 1, 0 }
  uselistorder i32 %v1_10001534, { 1, 0 }
  uselistorder i32 %v0_1000152c, { 1, 0 }
  uselistorder i32 %v1_10001524, { 1, 2, 0 }
  uselistorder i32 %v0_1000147c, { 1, 0, 2 }
  uselistorder i32 %v1_10001468, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001444, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001424, { 1, 0 }
  uselistorder i32 %v1_100013d0, { 1, 0 }
  uselistorder i32 %v1_100013c8, { 0, 2, 1 }
  uselistorder i32 %v4_10001398, { 1, 0, 2 }
  uselistorder i32 %v1_10001394, { 1, 0 }
  uselistorder i32 %v2_10001358, { 2, 1, 0 }
  uselistorder i32 %v1_10001320, { 1, 0 }
  uselistorder i32 %v1_1000126c, { 1, 0 }
  uselistorder i32 %v1_10001264, { 1, 0 }
  uselistorder i32 %v1_10001244, { 0, 2, 1 }
  uselistorder i32 %v1_100011f8, { 1, 0 }
  uselistorder i32 %v0_100011f8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100011e4, { 2, 0, 1 }
  uselistorder i32 %v4_100011b8, { 1, 0, 2 }
  uselistorder i32 %v3_10001190, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001180, { 1, 2, 0 }
  uselistorder i32 %v5_1000116c, { 1, 0 }
  uselistorder i8 %v5_1000108c, { 1, 0 }
  uselistorder i32* %stack_var_-120, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r9.global-to-local, { 18, 19, 20, 21, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17 }
  uselistorder i32* %r31.global-to-local, { 11, 0, 2, 3, 4, 5, 8, 6, 7, 9, 1, 10 }
  uselistorder i32* %r30.global-to-local, { 9, 0, 1, 2, 6, 3, 4, 5, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 22, 23, 24, 25, 26, 27, 28, 29, 30, 2, 31, 32, 33, 34, 35, 3, 36, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0 }
  uselistorder i32* %r29.global-to-local, { 15, 14, 16, 17, 18, 20, 21, 19, 22, 23, 24, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1 }
  uselistorder i32* %r27.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r24.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r20.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r19.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 4, 5, 20, 21, 22, 23, 24 }
  uselistorder i1* %cr7_lt.global-to-local, { 9, 10, 11, 13, 14, 15, 0, 1, 2, 12, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cr7_eq.global-to-local, { 9, 10, 11, 13, 14, 15, 0, 1, 2, 12, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10001574, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100013e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000134c, { 1, 0 }
  uselistorder label %dec_label_pc_1000130c, { 1, 0 }
  uselistorder label %dec_label_pc_100012b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001254, { 1, 0, 2 }
}

define i32 @function_1000159c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000159c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i16 @__decompiler_undefined_function_2()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %v0_100015a0 = load i32, i32* @lr, align 4
  store i32 %v0_100015a0, i32* %r0.global-to-local, align 4
  %v0_100015a4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r21.global-to-local, align 4
  %v0_100015b0 = load i32, i32* @r25, align 4
  %v0_100015b8 = load i32, i32* @r27, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100015c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r22.global-to-local, align 4
  %v0_100015fc = load i32, i32* @r26, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10001608 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-424, align 4
  store i32 268441120, i32* @lr, align 4
  %v2_1000161c = call i32 @function_100089c8(i32 %arg2, i32 16)
  store i32 %v2_1000161c, i32* %r19.global-to-local, align 4
  %v0_10001628 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001628, i32* %r3.global-to-local, align 4
  store i32 268441136, i32* @lr, align 4
  %v2_1000162c = call i32 @function_100089c8(i32 %v0_10001628, i32 4)
  %v0_10001630 = load i32, i32* @r28, align 4
  store i32 %v2_1000162c, i32* %r20.global-to-local, align 4
  %v0_10001640 = load i32, i32* @r29, align 4
  store i32 %v0_10001640, i32* %r3.global-to-local, align 4
  store i32 268441160, i32* @lr, align 4
  %v4_10001644 = inttoptr i32 %v0_10001630 to i32*
  %v5_10001644 = call i32 @function_10000300(i32 %v0_10001640, i32* %v4_10001644, i32 2, i32 0)
  %v5_10001654 = trunc i32 %v5_10001644 to i8
  %v0_1000165c = load i32, i32* @r28, align 4
  %v0_10001660 = load i32, i32* @r29, align 4
  store i32 %v0_10001660, i32* %r3.global-to-local, align 4
  store i32 268441192, i32* @lr, align 4
  %v4_10001664 = inttoptr i32 %v0_1000165c to i32*
  %v5_10001664 = call i32 @function_10000300(i32 %v0_10001660, i32* %v4_10001664, i32 3, i32 65535)
  %v0_10001668 = load i32, i32* @r28, align 4
  store i32 %v5_10001664, i32* %r26.global-to-local, align 4
  %v0_10001678 = load i32, i32* @r29, align 4
  store i32 %v0_10001678, i32* %r3.global-to-local, align 4
  store i32 268441216, i32* @lr, align 4
  %v4_1000167c = inttoptr i32 %v0_10001668 to i32*
  %v5_1000167c = call i32 @function_10000300(i32 %v0_10001678, i32* %v4_1000167c, i32 4, i32 64)
  %v0_10001680 = load i32, i32* @r28, align 4
  %v0_10001694 = load i32, i32* @r29, align 4
  store i32 %v0_10001694, i32* %r3.global-to-local, align 4
  store i32 268441244, i32* @lr, align 4
  %v4_10001698 = inttoptr i32 %v0_10001680 to i32*
  %v5_10001698 = call i32 @function_10000300(i32 %v0_10001694, i32* %v4_10001698, i32 5, i32 1)
  %v1_100016a0 = urem i32 %v5_10001698, 256
  %v0_100016ac = load i32, i32* @r28, align 4
  %v0_100016b4 = load i32, i32* @r29, align 4
  store i32 %v0_100016b4, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v4_100016b8 = inttoptr i32 %v0_100016ac to i32*
  %v5_100016b8 = call i32 @function_10000300(i32 %v0_100016b4, i32* %v4_100016b8, i32 7, i32 65535)
  %v0_100016bc = load i32, i32* @r28, align 4
  %v1_100016c8 = urem i32 %v5_100016b8, 65536
  store i32 %v1_100016c8, i32* @r24, align 4
  %v0_100016cc = load i32, i32* @r29, align 4
  store i32 %v0_100016cc, i32* %r3.global-to-local, align 4
  store i32 268441300, i32* @lr, align 4
  %v4_100016d0 = inttoptr i32 %v0_100016bc to i32*
  %v5_100016d0 = call i32 @function_10000300(i32 %v0_100016cc, i32* %v4_100016d0, i32 10, i32 0)
  %v0_100016d4 = load i32, i32* @r28, align 4
  %v1_100016d8 = urem i32 %v5_100016d0, 256
  %v0_100016e8 = load i32, i32* @r29, align 4
  store i32 %v0_100016e8, i32* %r3.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d4 to i32*
  %v5_100016ec = call i32 @function_10000300(i32 %v0_100016e8, i32* %v4_100016ec, i32 11, i32 1)
  %v0_100016f0 = load i32, i32* @r28, align 4
  %v1_100016f4 = urem i32 %v5_100016ec, 256
  %v0_10001704 = load i32, i32* @r29, align 4
  store i32 %v0_10001704, i32* %r3.global-to-local, align 4
  store i32 268441356, i32* @lr, align 4
  %v4_10001708 = inttoptr i32 %v0_100016f0 to i32*
  %v5_10001708 = call i32 @function_10000300(i32 %v0_10001704, i32* %v4_10001708, i32 12, i32 1)
  %v0_1000170c = load i32, i32* @r28, align 4
  %v1_10001718 = urem i32 %v5_10001708, 256
  %v0_1000171c = load i32, i32* @r29, align 4
  store i32 %v0_1000171c, i32* %r3.global-to-local, align 4
  store i32 268441380, i32* @lr, align 4
  %v4_10001720 = inttoptr i32 %v0_1000170c to i32*
  %v5_10001720 = call i32 @function_10000300(i32 %v0_1000171c, i32* %v4_10001720, i32 13, i32 0)
  %v0_10001724 = load i32, i32* @r28, align 4
  %v1_10001730 = urem i32 %v5_10001720, 256
  %v0_10001734 = load i32, i32* @r29, align 4
  store i32 %v0_10001734, i32* %r3.global-to-local, align 4
  store i32 268441404, i32* @lr, align 4
  %v4_10001738 = inttoptr i32 %v0_10001724 to i32*
  %v5_10001738 = call i32 @function_10000300(i32 %v0_10001734, i32* %v4_10001738, i32 14, i32 0)
  %v0_1000173c = load i32, i32* @r28, align 4
  %v1_10001748 = urem i32 %v5_10001738, 256
  store i32 %v1_10001748, i32* %r18.global-to-local, align 4
  %v0_1000174c = load i32, i32* @r29, align 4
  store i32 %v0_1000174c, i32* %r3.global-to-local, align 4
  store i32 268441428, i32* @lr, align 4
  %v4_10001750 = inttoptr i32 %v0_1000173c to i32*
  %v5_10001750 = call i32 @function_10000300(i32 %v0_1000174c, i32* %v4_10001750, i32 15, i32 0)
  %v0_1000175c = load i32, i32* @r28, align 4
  %v1_10001760 = urem i32 %v5_10001750, 256
  store i32 %v1_10001760, i32* %r23.global-to-local, align 4
  %v0_10001764 = load i32, i32* @r29, align 4
  store i32 %v0_10001764, i32* %r3.global-to-local, align 4
  store i32 268441452, i32* @lr, align 4
  %v4_10001768 = inttoptr i32 %v0_1000175c to i32*
  %v5_10001768 = call i32 @function_10000300(i32 %v0_10001764, i32* %v4_10001768, i32 0, i32 768)
  %v0_1000176c = load i32, i32* @r28, align 4
  store i32 %v5_10001768, i32* @r30, align 4
  %v0_1000177c = load i32, i32* @r29, align 4
  store i32 %v0_1000177c, i32* %r3.global-to-local, align 4
  store i32 268441476, i32* @lr, align 4
  %v4_10001780 = inttoptr i32 %v0_1000176c to i32*
  %v5_10001780 = call i32 @function_10000300(i32 %v0_1000177c, i32* %v4_10001780, i32 1, i32 1)
  %v1_10001784 = urem i32 %v5_10001780, 256
  store i32 %v1_10001784, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v0_1000178c = call i32 @function_10008038()
  %v1_10001794 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001794 = add i32 %v1_10001794, %v0_1000178c
  store i32 %v2_10001794, i32* %r17.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441508, i32* @lr, align 4
  %v3_100017a0 = call i32 @function_1000866c(i32 2, i32 3, i32 6)
  store i32 %v3_100017a0, i32* %r3.global-to-local, align 4
  %v3_100017a4 = icmp eq i32 %v3_100017a0, -1
  store i1 %v3_100017a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017a0, i32* @r31, align 4
  br i1 %v3_100017a4, label %dec_label_pc_10001a58, label %dec_label_pc_100017b0

dec_label_pc_100017b0:                            ; preds = %dec_label_pc_1000159c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017bc = ptrtoint i32* %stack_var_-424 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-424, align 4
  store i32 268441548, i32* @lr, align 4
  %v4_100017c8 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_100017bc, i32 4)
  store i32 %v4_100017c8, i32* %r3.global-to-local, align 4
  %v3_100017cc = icmp eq i32 %v4_100017c8, -1
  store i1 %v3_100017cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017cc, label %dec_label_pc_10001a50, label %dec_label_pc_100017d4

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_100017b0
  %v0_100017d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 0
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 0
  store i1 %v1_100017d4, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr2_eq.global-to-local, align 1
  %v0_100017d8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100017d8 = urem i32 %v0_100017d8, 65536
  store i32 %v1_100017d8, i32* %r26.global-to-local, align 4
  %v0_100017dc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100017dc, i32* %stack_var_-424, align 4
  %v5_100017e0 = trunc i32 %v0_100017d8 to i16
  %tmp48 = icmp slt i32 %v0_100017d4, 1
  br i1 %tmp48, label %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge, label %dec_label_pc_100017e8

dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge: ; preds = %dec_label_pc_100017d4
  %.pre = sext i16 %v5_100017e0 to i32
  br label %dec_label_pc_10001938.preheader

dec_label_pc_100017e8:                            ; preds = %dec_label_pc_100017d4
  %v2_100017ec = ptrtoint i32* %stack_var_-400 to i32
  %v2_100017f4 = ptrtoint i32* %stack_var_-384 to i32
  %v0_100017f8 = load i32, i32* @r24, align 4
  %v4_100017f8 = icmp eq i32 %v0_100017f8, 65535
  store i1 %v4_100017f8, i1* %cr4_eq.global-to-local, align 1
  %v0_100017fc = load i32, i32* @r30, align 4
  %v1_100017fc = add i32 %v0_100017fc, 40
  store i32 %v1_100017fc, i32* %r0.global-to-local, align 4
  %v5_10001800 = trunc i32 %v1_100017fc to i16
  %v2_10001804 = ptrtoint i32* %stack_var_-420 to i32
  %v4_100018e0 = zext i16 %tmp10 to i32
  %v1_10001a34 = and i32 %tmp9, 1179648
  %v1_10001a38 = and i32 %tmp9, 327680
  %v3_10001a38 = icmp eq i32 %v1_10001a38, 0
  %v3_10001b68 = icmp eq i32 %v1_100016a0, 0
  %v4_10001b84 = sext i16 %v5_100017e0 to i32
  %sext = mul i32 %v5_1000167c, 16777216
  %v4_10001b98 = sdiv i32 %sext, 16777216
  %v4_10001a40 = icmp eq i32 %v1_10001a34, 1179648
  br label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_10001924, %dec_label_pc_100017e8
  %stack_var_-120.0 = phi i32 [ %tmp, %dec_label_pc_100017e8 ], [ %stack_var_-120.1, %dec_label_pc_10001924 ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441624, i32* @lr, align 4
  %v3_10001814 = call i32 @function_1000866c(i32 2, i32 1, i32 0)
  store i32 %v3_10001814, i32* %r3.global-to-local, align 4
  %v3_10001818 = icmp eq i32 %v3_10001814, -1
  store i1 %v3_10001818, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001814, i32* @r28, align 4
  br i1 %v3_10001818, label %dec_label_pc_10001924, label %dec_label_pc_10001824

dec_label_pc_10001824:                            ; preds = %dec_label_pc_10001808, %dec_label_pc_10001900
  store i32 3, i32* @r4, align 4
  store i32 268441652, i32* @lr, align 4
  %v1_10001830 = call i32 @function_10007bc8(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000183c = load i32, i32* @r28, align 4
  store i32 %v0_1000183c, i32* %r3.global-to-local, align 4
  store i32 268441672, i32* @lr, align 4
  %v2_10001844 = call i32 @function_10007bc8(i32 %v0_1000183c)
  store i32 %v2_10001844, i32* %r3.global-to-local, align 4
  %v3_10001848 = load i32, i32* %stack_var_-424, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001850 = mul i32 %v3_10001848, 24
  store i32 %v1_10001850, i32* %r0.global-to-local, align 4
  %v0_10001858 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001858 = add i32 %v0_10001858, %v1_10001850
  store i32 %v2_10001858, i32* %r11.global-to-local, align 4
  %v1_1000185c = add i32 %v2_10001858, 20
  %v2_1000185c = inttoptr i32 %v1_1000185c to i8*
  %v3_1000185c = load i8, i8* %v2_1000185c, align 1
  %v4_1000185c = zext i8 %v3_1000185c to i32
  store i32 %v4_1000185c, i32* %r9.global-to-local, align 4
  %v3_10001860 = icmp eq i8 %v3_1000185c, 31
  store i1 %v3_10001860, i1* %cr7_eq.global-to-local, align 1
  %tmp49 = icmp ult i8 %v3_1000185c, 32
  %v1_10001ab8 = add i32 %v2_10001858, 16
  %v2_10001ab8 = inttoptr i32 %v1_10001ab8 to i32*
  %v3_10001ab8 = load i32, i32* %v2_10001ab8, align 4
  br i1 %tmp49, label %dec_label_pc_10001ab8, label %dec_label_pc_10001868

dec_label_pc_10001868:                            ; preds = %dec_label_pc_10001824
  store i32 %v3_10001ab8, i32* %r0.global-to-local, align 4
  %v0_10001870 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001870, label %dec_label_pc_10001ae0, label %dec_label_pc_10001874

dec_label_pc_10001874:                            ; preds = %dec_label_pc_10001ab8, %dec_label_pc_10001868
  %stack_var_-412.0 = phi i32 [ %v2_10001ad4, %dec_label_pc_10001ab8 ], [ %v3_10001ab8, %dec_label_pc_10001868 ]
  %v0_10001874 = load i32, i32* @r24, align 4
  %v1_10001874 = trunc i32 %v0_10001874 to i16
  br label %dec_label_pc_10001878

dec_label_pc_10001878:                            ; preds = %dec_label_pc_10001ae0, %dec_label_pc_10001874
  %stack_var_-412.1 = phi i32 [ %stack_var_-412.2, %dec_label_pc_10001ae0 ], [ %stack_var_-412.0, %dec_label_pc_10001874 ]
  %storemerge = phi i16 [ %v1_10001ae0, %dec_label_pc_10001ae0 ], [ %v1_10001874, %dec_label_pc_10001874 ]
  %v0_10001880 = load i32, i32* @r28, align 4
  store i32 %v0_10001880, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001888.15 to i32), i32* @lr, align 4
  %v0_10001884 = call i32 @function_1000846c()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v0_1000188c = call i32 @function_10008038()
  store i32 %v0_1000188c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000188c, i32* %r29.global-to-local, align 4
  %v4_100018d4 = icmp eq i32 %tmp11, %stack_var_-412.1
  %v4_100018e4 = zext i16 %storemerge to i32
  %v4_100018e8 = icmp eq i16 %storemerge, %tmp10
  %v4_100018d4.not = xor i1 %v4_100018d4, true
  br label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100018f0, %dec_label_pc_10001878
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100017ec, i32* %r7.global-to-local, align 4
  store i32 %v2_10001804, i32* %r8.global-to-local, align 4
  %v0_100018ac = load i32, i32* @r31, align 4
  store i32 %v0_100018ac, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-420, align 4
  store i32 268441784, i32* @lr, align 4
  %v6_100018b4 = call i32 @function_10008578(i32 %v0_100018ac, i32 %v2_100017f4, i32 256, i32 16384, i32 %v2_100017ec, i32 %v2_10001804)
  store i32 %v6_100018b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100018c0 = icmp eq i32 %v6_100018b4, -1
  store i1 %v3_100018c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100018c0, label %dec_label_pc_10001a58, label %dec_label_pc_100018cc

dec_label_pc_100018cc:                            ; preds = %dec_label_pc_10001894
  store i32 %tmp11, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-412.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100018d4, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i32 %v6_100018b4, 41
  %or.cond = or i1 %tmp50, %v4_100018d4.not
  br i1 %or.cond, label %dec_label_pc_100018f0, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_100018cc
  store i32 %v4_100018e0, i32* %r0.global-to-local, align 4
  store i32 %v4_100018e4, i32* %r8.global-to-local, align 4
  store i1 %v4_100018e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100018e8, label %dec_label_pc_10001a30, label %dec_label_pc_100018f0

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_100018cc, %dec_label_pc_10001a48, %dec_label_pc_100018e0
  store i32 268441844, i32* @lr, align 4
  %v0_100018f0 = call i32 @function_10008038()
  %v0_100018f4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018f4 = sub i32 %v0_100018f0, %v0_100018f4
  store i32 %v2_100018f4, i32* %r3.global-to-local, align 4
  %v3_100018f8 = icmp eq i32 %v2_100018f4, 10
  store i1 %v3_100018f8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp slt i32 %v2_100018f4, 11
  br i1 %tmp51, label %dec_label_pc_10001894, label %dec_label_pc_10001900

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001a48, %dec_label_pc_100018f0
  %v0_10001900 = load i32, i32* @r28, align 4
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001908.16 to i32), i32* @lr, align 4
  %v0_10001904 = call i32 @function_10007cb0()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441880, i32* @lr, align 4
  %v3_10001914 = call i32 @function_1000866c(i32 2, i32 1, i32 0)
  store i32 %v3_10001914, i32* %r3.global-to-local, align 4
  %v3_10001918 = icmp eq i32 %v3_10001914, -1
  store i1 %v3_10001918, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001914, i32* @r28, align 4
  br i1 %v3_10001918, label %dec_label_pc_10001924, label %dec_label_pc_10001824

dec_label_pc_10001924:                            ; preds = %dec_label_pc_10001900, %dec_label_pc_10001808, %dec_label_pc_10001bb4
  %stack_var_-120.1 = phi i32 [ %stack_var_-120.0, %dec_label_pc_10001808 ], [ %v0_10001ba4, %dec_label_pc_10001bb4 ], [ %stack_var_-120.0, %dec_label_pc_10001900 ]
  %v3_10001924 = load i32, i32* %stack_var_-424, align 4
  %v1_10001928 = add i32 %v3_10001924, 1
  store i32 %v1_10001928, i32* %r9.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000192c = icmp slt i32 %v1_10001928, %v1_1000192c
  %v4_1000192c = icmp eq i32 %v1_10001928, %v1_1000192c
  store i1 %v4_1000192c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001928, i32* %stack_var_-424, align 4
  br i1 %v2_1000192c, label %dec_label_pc_10001808, label %dec_label_pc_10001938.preheader

dec_label_pc_10001938.preheader:                  ; preds = %dec_label_pc_10001924, %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge
  %v4_10001944.pre-phi = phi i32 [ %.pre, %dec_label_pc_100017d4.dec_label_pc_10001938.preheader_crit_edge ], [ %v4_10001b84, %dec_label_pc_10001924 ]
  br label %dec_label_pc_10001938

dec_label_pc_10001938:                            ; preds = %dec_label_pc_10001938.preheader, %dec_label_pc_10001af8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-424, align 4
  %v0_10001940 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10001940 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10001940 = or i1 %v0_10001940, %v1_10001940
  br i1 %v2_10001940, label %dec_label_pc_10001af8, label %dec_label_pc_10001944

dec_label_pc_10001944:                            ; preds = %dec_label_pc_10001938
  store i32 %v4_10001944.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000194c = load i32, i32* %r16.global-to-local, align 4
  %v3_1000194c = icmp eq i32 %v0_1000194c, 0
  store i1 %v3_1000194c, i1* %cr4_eq.global-to-local, align 1
  %v0_10001950 = load i32, i32* @r30, align 4
  %v1_10001950 = add i32 %v0_10001950, 20
  store i32 %v1_10001950, i32* @r26, align 4
  store i1 false, i1* %cr3_eq.global-to-local, align 1
  %v1_10001958 = urem i32 %v1_10001950, 65536
  store i32 %v1_10001958, i32* %r23.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001950, 40
  store i32 %v1_1000195c, i32* @r25, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* @r24, align 4
  br label %dec_label_pc_10001a04

dec_label_pc_10001970:                            ; preds = %dec_label_pc_10001a18, %dec_label_pc_10001a24
  %v0_10001970 = load i32, i32* @r24, align 4
  %v1_10001970 = trunc i32 %v0_10001970 to i16
  %v2_10001970 = load i32, i32* @r29, align 4
  %v3_10001970 = add i32 %v2_10001970, 10
  %v4_10001970 = inttoptr i32 %v3_10001970 to i16*
  store i16 %v1_10001970, i16* %v4_10001970, align 2
  %v0_10001978 = load i32, i32* @r29, align 4
  store i32 %v0_10001978, i32* @r3, align 4
  %v2_1000197c = call i32 @function_10003ca8(i32 %v0_10001978, i32 20)
  %v3_1000197c = trunc i32 %v2_1000197c to i16
  store i32 %v2_1000197c, i32* %r3.global-to-local, align 4
  %v3_10001980 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001980, i32* %r9.global-to-local, align 4
  %v3_10001984 = load i32, i32* @r29, align 4
  %v4_10001984 = add i32 %v3_10001984, 10
  %v5_10001984 = inttoptr i32 %v4_10001984 to i16*
  store i16 %v3_1000197c, i16* %v5_10001984, align 2
  %v0_10001988 = load i32, i32* @r28, align 4
  store i32 %v0_10001988, i32* @r4, align 4
  %v0_1000198c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000198c = mul i32 %v0_1000198c, 16
  store i32 %v1_1000198c, i32* %r9.global-to-local, align 4
  %v0_10001990 = load i32, i32* @r24, align 4
  %v1_10001990 = trunc i32 %v0_10001990 to i16
  %v3_10001990 = add i32 %v0_10001988, 16
  %v4_10001990 = inttoptr i32 %v3_10001990 to i16*
  store i16 %v1_10001990, i16* %v4_10001990, align 2
  %v0_10001994 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001994 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001994 = add i32 %v1_10001994, %v0_10001994
  store i32 %v2_10001994, i32* %r9.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000199c = add i32 %v2_10001994, 4
  %v2_1000199c = inttoptr i32 %v1_1000199c to i32*
  %v3_1000199c = load i32, i32* %v2_1000199c, align 4
  store i32 %v3_1000199c, i32* %r11.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r26, align 4
  %v0_100019a4 = load i32, i32* @r29, align 4
  store i32 %v0_100019a4, i32* %r3.global-to-local, align 4
  %v1_100019a8 = load i32, i32* @r28, align 4
  %v2_100019a8 = add i32 %v1_100019a8, 4
  %v3_100019a8 = inttoptr i32 %v2_100019a8 to i32*
  store i32 %v3_1000199c, i32* %v3_100019a8, align 4
  %v0_100019ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100019ac = add i32 %v0_100019ac, 1
  store i32 %v1_100019ac, i32* %r11.global-to-local, align 4
  %v1_100019b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100019b0 = add i32 %v1_100019b0, 4
  %v3_100019b0 = inttoptr i32 %v2_100019b0 to i32*
  store i32 %v1_100019ac, i32* %v3_100019b0, align 4
  %v0_100019b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100019b4 = add i32 %v0_100019b4, 8
  %v2_100019b4 = inttoptr i32 %v1_100019b4 to i32*
  %v3_100019b4 = load i32, i32* %v2_100019b4, align 4
  store i32 %v3_100019b4, i32* %r0.global-to-local, align 4
  %v1_100019b8 = load i32, i32* @r28, align 4
  %v2_100019b8 = add i32 %v1_100019b8, 8
  %v3_100019b8 = inttoptr i32 %v2_100019b8 to i32*
  store i32 %v3_100019b4, i32* %v3_100019b8, align 4
  %v4_100019bc = call i32 @function_10003d0c(i32 %v0_100019a4, i32 %v0_10001988, i32 %v0_10001998, i32 %v0_100019a0)
  %v5_100019bc = trunc i32 %v4_100019bc to i16
  store i32 %v4_100019bc, i32* %r3.global-to-local, align 4
  %v3_100019c0 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100019c0, i32* %r7.global-to-local, align 4
  %v0_100019c4 = load i32, i32* @r28, align 4
  %v1_100019c4 = add i32 %v0_100019c4, 2
  %v2_100019c4 = inttoptr i32 %v1_100019c4 to i16*
  %v3_100019c4 = load i16, i16* %v2_100019c4, align 2
  %v4_100019c4 = zext i16 %v3_100019c4 to i32
  store i32 %v4_100019c4, i32* %r0.global-to-local, align 4
  %v0_100019c8 = load i32, i32* @r29, align 4
  %v1_100019cc = mul i32 %v3_100019c0, 24
  store i32 %v1_100019cc, i32* %r7.global-to-local, align 4
  %v4_100019d0 = add i32 %v0_100019c4, 16
  %v5_100019d0 = inttoptr i32 %v4_100019d0 to i16*
  store i16 %v5_100019bc, i16* %v5_100019d0, align 2
  %v0_100019d4 = load i32, i32* @r25, align 4
  %v0_100019d8 = load i32, i32* @r31, align 4
  store i32 %v0_100019d8, i32* %r3.global-to-local, align 4
  %v0_100019dc = load i32, i32* %r7.global-to-local, align 4
  %v1_100019dc = load i32, i32* %r22.global-to-local, align 4
  %v2_100019dc = add i32 %v1_100019dc, %v0_100019dc
  store i32 %v2_100019dc, i32* %r7.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019e4 = trunc i32 %v0_100019e4 to i16
  %v3_100019e4 = add i32 %v2_100019dc, 2
  %v4_100019e4 = inttoptr i32 %v3_100019e4 to i16*
  store i16 %v1_100019e4, i16* %v4_100019e4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v6_100019ec = call i32 @function_100085f0(i32 %v0_100019d8, i32 %v0_100019c8, i32 %v0_100019d4, i32 16384, i32 %v2_100019dc, i32 16)
  store i32 %v6_100019ec, i32* %r3.global-to-local, align 4
  %v3_100019f0 = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_100019f0, i32* %r9.global-to-local, align 4
  %v1_100019f4 = add i32 %v3_100019f0, 1
  store i32 %v1_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100019f8 = icmp slt i32 %v1_100019f4, %v1_100019f8
  %v4_100019f8 = icmp eq i32 %v1_100019f4, %v1_100019f8
  store i1 %v4_100019f8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100019f4, i32* %stack_var_-424, align 4
  br i1 %v2_100019f8, label %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge, label %dec_label_pc_10001af8

dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge: ; preds = %dec_label_pc_10001970
  %v0_10001a14.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge, %dec_label_pc_10001944
  %v0_10001a14 = phi i1 [ %v0_10001a14.pre, %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge ], [ false, %dec_label_pc_10001944 ]
  %v0_10001a04 = phi i32 [ %v1_100019f4, %dec_label_pc_10001970.dec_label_pc_10001a04_crit_edge ], [ 0, %dec_label_pc_10001944 ]
  %v1_10001a04 = mul i32 %v0_10001a04, 4
  store i32 %v1_10001a04, i32* %r0.global-to-local, align 4
  %v0_10001a08 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001a08 = add i32 %v0_10001a08, %v1_10001a04
  %v3_10001a08 = inttoptr i32 %v2_10001a08 to i32*
  %v4_10001a08 = load i32, i32* %v3_10001a08, align 4
  store i32 %v4_10001a08, i32* @r29, align 4
  %v1_10001a0c = add i32 %v4_10001a08, 40
  store i32 %v1_10001a0c, i32* @r27, align 4
  %v1_10001a10 = add i32 %v4_10001a08, 20
  store i32 %v1_10001a10, i32* @r28, align 4
  br i1 %v0_10001a14, label %dec_label_pc_10001aec, label %dec_label_pc_10001a18

dec_label_pc_10001a18:                            ; preds = %dec_label_pc_10001a04, %dec_label_pc_10001aec
  %v0_10001a18 = phi i32 [ %v1_10001a0c, %dec_label_pc_10001a04 ], [ %v0_10001a18.pre, %dec_label_pc_10001aec ]
  store i32 %v0_10001a18, i32* @r3, align 4
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r4, align 4
  %v0_10001a20 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001a20, label %dec_label_pc_10001970, label %dec_label_pc_10001a24

dec_label_pc_10001a24:                            ; preds = %dec_label_pc_10001a18
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_10004968()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001a28 = load i32, i32* @r27, align 4
  %v2_10001a28 = load i32, i32* @r30, align 4
  %v3_10001a28 = trunc i32 %v0_10001a28 to i8
  %v4_10001a28 = add i32 %v2_10001a28, %v1_10001a28
  %v5_10001a28 = inttoptr i32 %v4_10001a28 to i8*
  store i8 %v3_10001a28, i8* %v5_10001a28, align 1
  br label %dec_label_pc_10001970

dec_label_pc_10001a30:                            ; preds = %dec_label_pc_100018e0
  store i32 %tmp9, i32* %r9.global-to-local, align 4
  store i32 %v1_10001a34, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001a40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a40, label %dec_label_pc_10001b0c, label %dec_label_pc_10001a48

dec_label_pc_10001a48:                            ; preds = %dec_label_pc_10001a30
  br i1 %v3_10001a38, label %dec_label_pc_100018f0, label %dec_label_pc_10001900

dec_label_pc_10001a50:                            ; preds = %dec_label_pc_100017b0
  %v0_10001a50 = load i32, i32* @r31, align 4
  store i32 %v0_10001a50, i32* %r3.global-to-local, align 4
  store i32 268442200, i32* @lr, align 4
  %v0_10001a54 = call i32 @function_10007cb0()
  store i32 %v0_10001a54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a58

dec_label_pc_10001a58:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_10001af8, %dec_label_pc_1000159c, %dec_label_pc_10001a50
  store i32 %v0_100015c8, i32* %r0.global-to-local, align 4
  %v1_10001a6c = call %0 @__asm_mtcrf(i32 56, i32 %v0_100015a4)
  store i32 %v0_100015b0, i32* %r25.global-to-local, align 4
  store i32 %v0_100015fc, i32* %r26.global-to-local, align 4
  store i32 %v0_100015b8, i32* %r27.global-to-local, align 4
  store i32 %v0_10001608, i32* %r29.global-to-local, align 4
  %v0_10001ab4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001ab4

dec_label_pc_10001ab8:                            ; preds = %dec_label_pc_10001824
  store i32 %v3_10001ab8, i32* %r29.global-to-local, align 4
  %v0_10001abc = call i32 @function_100048a8()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v3_10001ac0 = load i32, i32* %stack_var_-424, align 4
  %v1_10001ac4 = mul i32 %v3_10001ac0, 24
  %v1_10001ac8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001ac8 = add i32 %v1_10001ac8, %v1_10001ac4
  store i32 %v2_10001ac8, i32* %r9.global-to-local, align 4
  %v1_10001acc = add i32 %v2_10001ac8, 20
  %v2_10001acc = inttoptr i32 %v1_10001acc to i8*
  %v3_10001acc = load i8, i8* %v2_10001acc, align 1
  %v4_10001acc = zext i8 %v3_10001acc to i32
  store i32 %v4_10001acc, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_10001acc, 64
  %v2_10001ad0 = zext i8 %tmp53 to i32
  %v3_10001ad0 = lshr i32 %v0_10001abc, %v2_10001ad0
  store i32 %v3_10001ad0, i32* %r3.global-to-local, align 4
  %v0_10001ad4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ad4 = add i32 %v3_10001ad0, %v0_10001ad4
  store i32 %v2_10001ad4, i32* %r29.global-to-local, align 4
  %v0_10001adc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001adc, label %dec_label_pc_10001ae0, label %dec_label_pc_10001874

dec_label_pc_10001ae0:                            ; preds = %dec_label_pc_10001ab8, %dec_label_pc_10001868
  %stack_var_-412.2 = phi i32 [ %v2_10001ad4, %dec_label_pc_10001ab8 ], [ %v3_10001ab8, %dec_label_pc_10001868 ]
  %v0_10001ae0 = call i32 @function_100048a8()
  %v1_10001ae0 = trunc i32 %v0_10001ae0 to i16
  store i32 %v0_10001ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001878

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001a04
  %v0_10001aec = call i32 @function_100048a8()
  %v1_10001aec = trunc i32 %v0_10001aec to i16
  store i32 %v0_10001aec, i32* %r3.global-to-local, align 4
  %v3_10001af0 = load i32, i32* @r29, align 4
  %v4_10001af0 = add i32 %v3_10001af0, 4
  %v5_10001af0 = inttoptr i32 %v4_10001af0 to i16*
  store i16 %v1_10001aec, i16* %v5_10001af0, align 2
  %v0_10001a18.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10001a18

dec_label_pc_10001af8:                            ; preds = %dec_label_pc_10001970, %dec_label_pc_10001938
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442368, i32* @lr, align 4
  %v0_10001afc = call i32 @function_10008038()
  store i32 %v0_10001afc, i32* %r3.global-to-local, align 4
  %v0_10001b00 = load i32, i32* %r17.global-to-local, align 4
  %v2_10001b00 = icmp slt i32 %v0_10001b00, %v0_10001afc
  %v4_10001b00 = icmp eq i32 %v0_10001b00, %v0_10001afc
  store i1 %v4_10001b00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b00, label %dec_label_pc_10001a58, label %dec_label_pc_10001938

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001a30
  %v3_10001b0c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001b0c, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r9.global-to-local, align 4
  store i32 %v1_100017fc, i32* @r3, align 4
  %v1_10001b18 = add i32 %stack_var_-120.0, 2
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i16*
  %v3_10001b18 = load i16, i16* %v2_10001b18, align 2
  %v4_10001b18 = zext i16 %v3_10001b18 to i32
  store i32 %v4_10001b18, i32* %r11.global-to-local, align 4
  %v1_10001b1c = mul i32 %v3_10001b0c, 16
  store i32 %v1_10001b1c, i32* %r9.global-to-local, align 4
  %v1_10001b20 = load i32, i32* %r19.global-to-local, align 4
  %v3_10001b20 = add i32 %v1_10001b20, %v1_10001b1c
  %v4_10001b20 = inttoptr i32 %v3_10001b20 to i32*
  store i32 %tmp11, i32* %v4_10001b20, align 4
  %v0_10001b24 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001b24 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b24 = add i32 %v1_10001b24, %v0_10001b24
  store i32 %v2_10001b24, i32* %r9.global-to-local, align 4
  store i32 %stack_var_-120.0, i32* %r10.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b2c = mul i32 %v0_10001b2c, 4
  store i32 %v1_10001b2c, i32* @r29, align 4
  %v0_10001b30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001b30 = trunc i32 %v0_10001b30 to i16
  %v3_10001b30 = add i32 %v2_10001b24, 12
  %v4_10001b30 = inttoptr i32 %v3_10001b30 to i16*
  store i16 %v1_10001b30, i16* %v4_10001b30, align 2
  %v0_10001b34 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b34 = add i32 %v0_10001b34, 4
  %v2_10001b34 = inttoptr i32 %v1_10001b34 to i32*
  %v3_10001b34 = load i32, i32* %v2_10001b34, align 4
  store i32 %v3_10001b34, i32* %r0.global-to-local, align 4
  %v0_10001b38 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001b38 = trunc i32 %v0_10001b38 to i16
  %v2_10001b38 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b38 = add i32 %v2_10001b38, 14
  %v4_10001b38 = inttoptr i32 %v3_10001b38 to i16*
  store i16 %v1_10001b38, i16* %v4_10001b38, align 2
  %v0_10001b3c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b3c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b3c = add i32 %v1_10001b3c, 4
  %v3_10001b3c = inttoptr i32 %v2_10001b3c to i32*
  store i32 %v0_10001b3c, i32* %v3_10001b3c, align 4
  %v0_10001b40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b40 = add i32 %v0_10001b40, 8
  %v2_10001b40 = inttoptr i32 %v1_10001b40 to i32*
  %v3_10001b40 = load i32, i32* %v2_10001b40, align 4
  store i32 %v3_10001b40, i32* %r0.global-to-local, align 4
  %v1_10001b44 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b44 = add i32 %v1_10001b44, 8
  %v3_10001b44 = inttoptr i32 %v2_10001b44 to i32*
  store i32 %v3_10001b40, i32* %v3_10001b44, align 4
  store i32 268442444, i32* @lr, align 4
  %v0_10001b48 = call i32 @function_10008870()
  store i32 %v0_10001b48, i32* %r3.global-to-local, align 4
  %v3_10001b4c = load i32, i32* %stack_var_-424, align 4
  store i32 %v3_10001b4c, i32* %r0.global-to-local, align 4
  %v1_10001b50 = load i32, i32* @r29, align 4
  %v2_10001b50 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001b50 = add i32 %v2_10001b50, %v1_10001b50
  %v4_10001b50 = inttoptr i32 %v3_10001b50 to i32*
  store i32 %v0_10001b48, i32* %v4_10001b50, align 4
  %v0_10001b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b54 = mul i32 %v0_10001b54, 4
  store i32 %v1_10001b54, i32* %r0.global-to-local, align 4
  %v0_10001b58 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001b58 = add i32 %v0_10001b58, %v1_10001b54
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  %v4_10001b58 = load i32, i32* %v3_10001b58, align 4
  store i32 %v4_10001b58, i32* %r10.global-to-local, align 4
  store i32 %v1_100016a0, i32* %r0.global-to-local, align 4
  %v1_10001b60 = inttoptr i32 %v4_10001b58 to i32*
  %v2_10001b60 = load i32, i32* %v1_10001b60, align 4
  store i32 %v2_10001b60, i32* %r9.global-to-local, align 4
  %v1_10001b64 = add i32 %v4_10001b58, 40
  store i32 %v1_10001b64, i32* @r29, align 4
  store i1 %v3_10001b68, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001b70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001b70, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001b78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10001b7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10001b7c = inttoptr i32 %v1_10001b7c to i32*
  store i32 %v1_10001b78, i32* %v2_10001b7c, align 4
  store i32 %v4_10001b84, i32* %r9.global-to-local, align 4
  %v2_10001b88 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001b88 = add i32 %v2_10001b88, 1
  %v4_10001b88 = inttoptr i32 %v3_10001b88 to i8*
  store i8 %v5_10001654, i8* %v4_10001b88, align 1
  %v0_10001b8c = load i32, i32* %r10.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 20
  store i32 %v1_10001b8c, i32* %r11.global-to-local, align 4
  %v0_10001b90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b90 = trunc i32 %v0_10001b90 to i16
  %v3_10001b90 = add i32 %v0_10001b8c, 4
  %v4_10001b90 = inttoptr i32 %v3_10001b90 to i16*
  store i16 %v1_10001b90, i16* %v4_10001b90, align 2
  store i32 %v1_100017fc, i32* %r0.global-to-local, align 4
  store i32 %v4_10001b98, i32* %r9.global-to-local, align 4
  %v2_10001b9c = load i32, i32* %r10.global-to-local, align 4
  %v3_10001b9c = add i32 %v2_10001b9c, 2
  %v4_10001b9c = inttoptr i32 %v3_10001b9c to i16*
  store i16 %v5_10001800, i16* %v4_10001b9c, align 2
  %v0_10001ba0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ba0 = trunc i32 %v0_10001ba0 to i8
  %v2_10001ba0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001ba0 = add i32 %v2_10001ba0, 8
  %v4_10001ba0 = inttoptr i32 %v3_10001ba0 to i8*
  store i8 %v1_10001ba0, i8* %v4_10001ba0, align 1
  %v0_10001ba4 = load i32, i32* %r11.global-to-local, align 4
  %v0_10001ba8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ba8, label %dec_label_pc_10001bb4, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b0c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001bb0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001bb0 = add i32 %v2_10001bb0, 6
  %v4_10001bb0 = inttoptr i32 %v3_10001bb0 to i16*
  store i16 16384, i16* %v4_10001bb0, align 2
  br label %dec_label_pc_10001bb4

dec_label_pc_10001bb4:                            ; preds = %dec_label_pc_10001b0c, %dec_label_pc_10001bac
  %v2_10001bbc = load i32, i32* %r10.global-to-local, align 4
  %v3_10001bbc = add i32 %v2_10001bbc, 9
  %v4_10001bbc = inttoptr i32 %v3_10001bbc to i8*
  store i8 6, i8* %v4_10001bbc, align 1
  %v3_10001bc0 = load i32, i32* @global_var_1001a998.12, align 4
  store i32 %v3_10001bc0, i32* %r0.global-to-local, align 4
  %v1_10001bc4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10001bc4 = add i32 %v1_10001bc4, 12
  %v3_10001bc4 = inttoptr i32 %v2_10001bc4 to i32*
  store i32 %v3_10001bc0, i32* %v3_10001bc4, align 4
  %v3_10001bc8 = load i32, i32* %stack_var_-424, align 4
  %v1_10001bcc = mul i32 %v3_10001bc8, 16
  store i32 %v1_10001bcc, i32* %r9.global-to-local, align 4
  %v1_10001bd0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001bd0 = add i32 %v1_10001bd0, %v1_10001bcc
  %v3_10001bd0 = inttoptr i32 %v2_10001bd0 to i32*
  %v4_10001bd0 = load i32, i32* %v3_10001bd0, align 4
  store i32 %v4_10001bd0, i32* %r0.global-to-local, align 4
  store i32 %v2_10001bd0, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = add i32 %v2_10001bd0, 12
  %v2_10001bd8 = inttoptr i32 %v1_10001bd8 to i16*
  %v3_10001bd8 = load i16, i16* %v2_10001bd8, align 2
  %v4_10001bd8 = zext i16 %v3_10001bd8 to i32
  store i32 %v4_10001bd8, i32* %r11.global-to-local, align 4
  %v1_10001bdc = load i32, i32* %r10.global-to-local, align 4
  %v2_10001bdc = add i32 %v1_10001bdc, 16
  %v3_10001bdc = inttoptr i32 %v2_10001bdc to i32*
  store i32 %v4_10001bd0, i32* %v3_10001bdc, align 4
  %v0_10001be0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001be0 = trunc i32 %v0_10001be0 to i16
  %v2_10001be0 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001be0 = add i32 %v2_10001be0, 20
  %v4_10001be0 = inttoptr i32 %v3_10001be0 to i16*
  store i16 %v1_10001be0, i16* %v4_10001be0, align 2
  %v0_10001be4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001be4 = add i32 %v0_10001be4, 8
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i32*
  %v3_10001be4 = load i32, i32* %v2_10001be4, align 4
  store i32 %v3_10001be4, i32* %r0.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r10.global-to-local, align 4
  %v1_10001bec = add i32 %v0_10001ba4, 12
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  store i32 %v3_10001bec, i32* %r11.global-to-local, align 4
  %v2_10001bf0 = add i32 %v0_10001ba4, 4
  %v3_10001bf0 = inttoptr i32 %v2_10001bf0 to i32*
  store i32 %v3_10001be4, i32* %v3_10001bf0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001bf8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001bf8, i32* %r11.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %v0_10001bfc, 14
  %v2_10001bfc = inttoptr i32 %v1_10001bfc to i16*
  %v3_10001bfc = load i16, i16* %v2_10001bfc, align 2
  %v4_10001bfc = zext i16 %v3_10001bfc to i32
  store i32 %v4_10001bfc, i32* %r0.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001bfc, 4
  %v2_10001c00 = inttoptr i32 %v1_10001c00 to i32*
  %v3_10001c00 = load i32, i32* %v2_10001c00, align 4
  store i32 %v3_10001c00, i32* %r10.global-to-local, align 4
  %v1_10001c04 = or i32 %v1_10001bf8, 1114112
  store i32 %v1_10001c04, i32* %r11.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r9.global-to-local, align 4
  %v3_10001c0c = add i32 %v0_10001ba4, 2
  %v4_10001c0c = inttoptr i32 %v3_10001c0c to i16*
  store i16 %v3_10001bfc, i16* %v4_10001c0c, align 2
  %v0_10001c10 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001c10 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c10 = add i32 %v1_10001c10, 8
  %v3_10001c10 = inttoptr i32 %v2_10001c10 to i32*
  store i32 %v0_10001c10, i32* %v3_10001c10, align 4
  %v0_10001c14 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001c14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c14 = add i32 %v1_10001c14, 12
  %v3_10001c14 = inttoptr i32 %v2_10001c14 to i32*
  store i32 %v0_10001c14, i32* %v3_10001c14, align 4
  %v0_10001c18 = call i32 @function_100048a8()
  %v1_10001c18 = trunc i32 %v0_10001c18 to i16
  store i32 %v0_10001ba4, i32* %r9.global-to-local, align 4
  store i32 %v1_100016d8, i32* %r10.global-to-local, align 4
  %v0_10001c24 = load i32, i32* @r30, align 4
  store i32 %v0_10001c24, i32* @r4, align 4
  %v4_10001c28 = add i32 %v0_10001ba4, 14
  %v5_10001c28 = inttoptr i32 %v4_10001c28 to i16*
  store i16 %v1_10001c18, i16* %v5_10001c28, align 2
  %v0_10001c2c = load i32, i32* @r29, align 4
  store i32 %v0_10001c2c, i32* @r3, align 4
  store i32 %v1_100016f4, i32* %r11.global-to-local, align 4
  %v0_10001c34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c34 = add i32 %v0_10001c34, 12
  %v2_10001c34 = inttoptr i32 %v1_10001c34 to i32*
  %v3_10001c34 = load i32, i32* %v2_10001c34, align 4
  store i32 %v3_10001c34, i32* %r0.global-to-local, align 4
  %v1_10001c38 = call i32 @__asm_rlwimi(i32 %v1_100016d8, i32 21, i32 10, i32 10)
  store i32 %v1_10001c38, i32* %r0.global-to-local, align 4
  %v1_10001c3c = call i32 @__asm_rlwimi(i32 %v1_100016f4, i32 20, i32 11, i32 11)
  store i32 %v1_10001c3c, i32* %r0.global-to-local, align 4
  %v1_10001c40 = call i32 @__asm_rlwimi(i32 %v1_10001718, i32 19, i32 12, i32 12)
  store i32 %v1_10001c40, i32* %r0.global-to-local, align 4
  %v1_10001c44 = call i32 @__asm_rlwimi(i32 %v1_10001730, i32 18, i32 13, i32 13)
  store i32 %v1_10001c44, i32* %r0.global-to-local, align 4
  %v1_10001c48 = call i32 @__asm_rlwimi(i32 %v1_10001748, i32 17, i32 14, i32 14)
  store i32 %v1_10001c48, i32* %r0.global-to-local, align 4
  %v1_10001c4c = call i32 @__asm_rlwimi(i32 %v1_10001760, i32 16, i32 15, i32 15)
  store i32 %v1_10001c4c, i32* %r0.global-to-local, align 4
  %v1_10001c50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001c50 = add i32 %v1_10001c50, 12
  %v3_10001c50 = inttoptr i32 %v2_10001c50 to i32*
  store i32 %v1_10001c4c, i32* %v3_10001c50, align 4
  store i32 ptrtoint (i32* @global_var_10001c58.17 to i32), i32* @lr, align 4
  %v0_10001c54 = call i32 @function_10004968()
  store i32 %v0_10001c54, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001c5c = load i32, i32* @r29, align 4
  %v2_10001c5c = load i32, i32* @r30, align 4
  %v4_10001c5c = add i32 %v2_10001c5c, %v1_10001c5c
  %v5_10001c5c = inttoptr i32 %v4_10001c5c to i8*
  store i8 0, i8* %v5_10001c5c, align 1
  br label %dec_label_pc_10001924

; uselistorder directives
  uselistorder i32 %v2_10001bd0, { 1, 0, 2 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v0_10001ba4, { 1, 2, 4, 3, 7, 6, 5, 0 }
  uselistorder i32 %v1_10001b54, { 1, 0 }
  uselistorder i32 %v1_10001b1c, { 1, 0 }
  uselistorder i32 %v0_10001afc, { 1, 0, 2 }
  uselistorder i32 %v0_10001aec, { 1, 0 }
  uselistorder i32 %v0_10001ae0, { 1, 0 }
  uselistorder i32 %v2_10001ad4, { 1, 2, 0 }
  uselistorder i32 %v1_10001a04, { 1, 0 }
  uselistorder i32 %v1_100019f4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v4_100019bc, { 1, 0 }
  uselistorder i32 %v0_10001988, { 1, 0, 2 }
  uselistorder i32 %v2_1000197c, { 1, 0 }
  uselistorder i32 %v1_10001928, { 0, 2, 1, 3 }
  uselistorder i1 %v4_100018d4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001ab8, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-120.0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v4_10001b84, { 1, 0 }
  uselistorder i32 %v1_10001a34, { 1, 0 }
  uselistorder i32 %v1_100017fc, { 1, 0, 2, 3 }
  uselistorder i16 %v5_100017e0, { 1, 0 }
  uselistorder i32 %v0_100017d8, { 1, 0 }
  uselistorder i32 %v1_10001760, { 1, 0 }
  uselistorder i32 %v1_10001748, { 1, 0 }
  uselistorder i32 %v1_100016a0, { 1, 0 }
  uselistorder i32* %stack_var_-424, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i16 %tmp10, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 42, 9, 10, 11, 12, 13, 14, 15, 16, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r21.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 27, 28, 29, 30, 31, 35, 36, 37, 39, 38, 40, 41, 42, 43, 32, 33 }
  uselistorder i1* %cr4_eq.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 1179648, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a58, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10001a18, { 1, 0 }
  uselistorder label %dec_label_pc_10001970, { 1, 0 }
  uselistorder label %dec_label_pc_10001938, { 1, 0 }
  uselistorder label %dec_label_pc_10001924, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100018f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001824, { 1, 0 }
}

define i32 @function_10001c64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10001c64:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10001c64 = load i32, i32* @lr, align 4
  store i32 %v0_10001c64, i32* %r0.global-to-local, align 4
  %v0_10001c6c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001c78 = load i32, i32* @r27, align 4
  store i32 %v0_10001c6c, i32* %r27.global-to-local, align 4
  %v0_10001c80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10001cbc = load i32, i32* @r24, align 4
  %v0_10001cc0 = load i32, i32* @r25, align 4
  %v0_10001cc4 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001cd0 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268442856, i32* @lr, align 4
  %v2_10001ce4 = call i32 @function_100089c8(i32 %arg2, i32 4)
  %v0_10001ce8 = load i32, i32* @r29, align 4
  store i32 %v2_10001ce4, i32* %r21.global-to-local, align 4
  %v0_10001cf8 = load i32, i32* @r28, align 4
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  store i32 268442880, i32* @lr, align 4
  %v4_10001cfc = inttoptr i32 %v0_10001ce8 to i32*
  %v5_10001cfc = call i32 @function_10000300(i32 %v0_10001cf8, i32* %v4_10001cfc, i32 2, i32 0)
  %v5_10001d0c = trunc i32 %v5_10001cfc to i8
  %v0_10001d14 = load i32, i32* @r29, align 4
  %v0_10001d18 = load i32, i32* @r28, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d14 to i32*
  %v5_10001d1c = call i32 @function_10000300(i32 %v0_10001d18, i32* %v4_10001d1c, i32 3, i32 65535)
  %v0_10001d20 = load i32, i32* @r29, align 4
  store i32 %v5_10001d1c, i32* %r17.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r28, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_10000300(i32 %v0_10001d30, i32* %v4_10001d34, i32 4, i32 64)
  %v0_10001d38 = load i32, i32* @r29, align 4
  %v5_10001d44 = trunc i32 %v5_10001d34 to i8
  %v0_10001d4c = load i32, i32* @r28, align 4
  store i32 %v0_10001d4c, i32* %r3.global-to-local, align 4
  store i32 268442964, i32* @lr, align 4
  %v4_10001d50 = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d50 = call i32 @function_10000300(i32 %v0_10001d4c, i32* %v4_10001d50, i32 5, i32 0)
  %v1_10001d58 = urem i32 %v5_10001d50, 256
  %v0_10001d68 = load i32, i32* @r29, align 4
  %v0_10001d6c = load i32, i32* @r28, align 4
  store i32 %v0_10001d6c, i32* %r3.global-to-local, align 4
  store i32 268442996, i32* @lr, align 4
  %v4_10001d70 = inttoptr i32 %v0_10001d68 to i32*
  %v5_10001d70 = call i32 @function_10000300(i32 %v0_10001d6c, i32* %v4_10001d70, i32 6, i32 65535)
  %v0_10001d78 = load i32, i32* @r29, align 4
  store i32 %v5_10001d70, i32* %r18.global-to-local, align 4
  %v0_10001d88 = load i32, i32* @r28, align 4
  store i32 %v0_10001d88, i32* %r3.global-to-local, align 4
  store i32 268443024, i32* @lr, align 4
  %v4_10001d8c = inttoptr i32 %v0_10001d78 to i32*
  %v5_10001d8c = call i32 @function_10000300(i32 %v0_10001d88, i32* %v4_10001d8c, i32 7, i32 65535)
  %v0_10001d94 = load i32, i32* @r29, align 4
  store i32 %v5_10001d8c, i32* %r19.global-to-local, align 4
  %v0_10001da4 = load i32, i32* @r28, align 4
  store i32 %v0_10001da4, i32* %r3.global-to-local, align 4
  store i32 268443052, i32* @lr, align 4
  %v4_10001da8 = inttoptr i32 %v0_10001d94 to i32*
  %v5_10001da8 = call i32 @function_10000300(i32 %v0_10001da4, i32* %v4_10001da8, i32 16, i32 65535)
  %v0_10001db0 = load i32, i32* @r29, align 4
  store i32 %v5_10001da8, i32* %r16.global-to-local, align 4
  %v0_10001dc0 = load i32, i32* @r28, align 4
  store i32 %v0_10001dc0, i32* %r3.global-to-local, align 4
  store i32 268443080, i32* @lr, align 4
  %v4_10001dc4 = inttoptr i32 %v0_10001db0 to i32*
  %v5_10001dc4 = call i32 @function_10000300(i32 %v0_10001dc0, i32* %v4_10001dc4, i32 17, i32 65535)
  %v0_10001dc8 = load i32, i32* @r29, align 4
  store i32 %v5_10001dc4, i32* %r15.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* @r28, align 4
  store i32 %v0_10001dd8, i32* %r3.global-to-local, align 4
  store i32 268443104, i32* @lr, align 4
  %v4_10001ddc = inttoptr i32 %v0_10001dc8 to i32*
  %v5_10001ddc = call i32 @function_10000300(i32 %v0_10001dd8, i32* %v4_10001ddc, i32 10, i32 0)
  %v0_10001de0 = load i32, i32* @r29, align 4
  %v0_10001df0 = load i32, i32* @r28, align 4
  store i32 %v0_10001df0, i32* %r3.global-to-local, align 4
  store i32 268443128, i32* @lr, align 4
  %v4_10001df4 = inttoptr i32 %v0_10001de0 to i32*
  %v5_10001df4 = call i32 @function_10000300(i32 %v0_10001df0, i32* %v4_10001df4, i32 11, i32 1)
  %v0_10001df8 = load i32, i32* @r29, align 4
  store i32 %v5_10001df4, i32* %r14.global-to-local, align 4
  %v0_10001e08 = load i32, i32* @r28, align 4
  store i32 %v0_10001e08, i32* %r3.global-to-local, align 4
  store i32 268443152, i32* @lr, align 4
  %v4_10001e0c = inttoptr i32 %v0_10001df8 to i32*
  %v5_10001e0c = call i32 @function_10000300(i32 %v0_10001e08, i32* %v4_10001e0c, i32 12, i32 0)
  %v0_10001e10 = load i32, i32* @r29, align 4
  store i32 %v5_10001e0c, i32* %r23.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r28, align 4
  store i32 %v0_10001e20, i32* %r3.global-to-local, align 4
  store i32 268443176, i32* @lr, align 4
  %v4_10001e24 = inttoptr i32 %v0_10001e10 to i32*
  %v5_10001e24 = call i32 @function_10000300(i32 %v0_10001e20, i32* %v4_10001e24, i32 13, i32 0)
  %v0_10001e28 = load i32, i32* @r29, align 4
  store i32 %v5_10001e24, i32* %r24.global-to-local, align 4
  %v0_10001e38 = load i32, i32* @r28, align 4
  store i32 %v0_10001e38, i32* %r3.global-to-local, align 4
  store i32 268443200, i32* @lr, align 4
  %v4_10001e3c = inttoptr i32 %v0_10001e28 to i32*
  %v5_10001e3c = call i32 @function_10000300(i32 %v0_10001e38, i32* %v4_10001e3c, i32 14, i32 0)
  %v0_10001e40 = load i32, i32* @r29, align 4
  store i32 %v5_10001e3c, i32* %r26.global-to-local, align 4
  %v0_10001e50 = load i32, i32* @r28, align 4
  store i32 %v0_10001e50, i32* %r3.global-to-local, align 4
  store i32 268443224, i32* @lr, align 4
  %v4_10001e54 = inttoptr i32 %v0_10001e40 to i32*
  %v5_10001e54 = call i32 @function_10000300(i32 %v0_10001e50, i32* %v4_10001e54, i32 15, i32 0)
  %v0_10001e58 = load i32, i32* @r29, align 4
  store i32 %v5_10001e54, i32* %r25.global-to-local, align 4
  %v0_10001e68 = load i32, i32* @r28, align 4
  store i32 %v0_10001e68, i32* %r3.global-to-local, align 4
  store i32 268443248, i32* @lr, align 4
  %v4_10001e6c = inttoptr i32 %v0_10001e58 to i32*
  %v5_10001e6c = call i32 @function_10000300(i32 %v0_10001e68, i32* %v4_10001e6c, i32 0, i32 512)
  %v0_10001e70 = load i32, i32* @r29, align 4
  store i32 %v5_10001e6c, i32* @r30, align 4
  %v0_10001e80 = load i32, i32* @r28, align 4
  store i32 %v0_10001e80, i32* %r3.global-to-local, align 4
  store i32 268443272, i32* @lr, align 4
  %v4_10001e84 = inttoptr i32 %v0_10001e70 to i32*
  %v5_10001e84 = call i32 @function_10000300(i32 %v0_10001e80, i32* %v4_10001e84, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001e8c = load i32, i32* @global_var_1001a998.12, align 4
  %v1_10001e90 = urem i32 %v5_10001e84, 256
  %v0_10001e94 = load i32, i32* @r29, align 4
  %v0_10001ea0 = load i32, i32* @r28, align 4
  store i32 %v0_10001ea0, i32* %r3.global-to-local, align 4
  store i32 268443304, i32* @lr, align 4
  %v5_10001ea4 = inttoptr i32 %v0_10001e94 to i32*
  %v6_10001ea4 = call i32 @function_10000280(i32 %v0_10001ea0, i32* %v5_10001ea4, i32 24, i32 %v3_10001e8c, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268443316, i32* @lr, align 4
  %v0_10001eb0 = call i32 @function_10008038()
  %v1_10001eb8 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001eb8 = add i32 %v1_10001eb8, %v0_10001eb0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443340, i32* @lr, align 4
  %v3_10001ec8 = call i32 @function_1000866c(i32 2, i32 3, i32 6)
  store i32 %v3_10001ec8, i32* %r3.global-to-local, align 4
  %v3_10001ecc = icmp eq i32 %v3_10001ec8, -1
  store i32 %v3_10001ec8, i32* %r22.global-to-local, align 4
  br i1 %v3_10001ecc, label %dec_label_pc_10002164, label %dec_label_pc_10001ed8

dec_label_pc_10001ed8:                            ; preds = %dec_label_pc_10001c64
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001ee4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268443380, i32* @lr, align 4
  %v4_10001ef0 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_10001ee4, i32 4)
  store i32 %v4_10001ef0, i32* %r3.global-to-local, align 4
  %v3_10001ef4 = icmp eq i32 %v4_10001ef0, -1
  br i1 %v3_10001ef4, label %dec_label_pc_1000226c, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ed8
  %v0_10001efc = load i32, i32* %r20.global-to-local, align 4
  %v1_10001efc = icmp slt i32 %v0_10001efc, 0
  %v3_10001efc = icmp eq i32 %v0_10001efc, 0
  store i1 %v1_10001efc, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10001efc, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10001f08 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001f08 = urem i32 %v0_10001f08, 65536
  store i32 %v1_10001f08, i32* %r17.global-to-local, align 4
  %v0_10001f0c = load i32, i32* %r18.global-to-local, align 4
  %v1_10001f0c = urem i32 %v0_10001f0c, 65536
  store i32 %v1_10001f0c, i32* %r18.global-to-local, align 4
  %v0_10001f10 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001f10 = urem i32 %v0_10001f10, 65536
  store i32 %v1_10001f10, i32* %r19.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_10001efc, 1
  br i1 %tmp39, label %dec_label_pc_10002058.preheader, label %dec_label_pc_10001f18

dec_label_pc_10001f18:                            ; preds = %dec_label_pc_10001efc
  %v0_10001f1c = load i32, i32* %r23.global-to-local, align 4
  %v1_10001f1c = urem i32 %v0_10001f1c, 256
  store i32 %v1_10001f1c, i32* %r0.global-to-local, align 4
  %v3_10001f24 = icmp eq i32 %v1_10001f1c, 0
  store i1 %v3_10001f24, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f28 = urem i32 %v5_10001ddc, 2
  %v0_10001f2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001f2c = urem i32 %v0_10001f2c, 2
  %v0_10001f34 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001f34 = urem i32 %v0_10001f34, 2
  store i32 %v1_10001f34, i32* %r11.global-to-local, align 4
  %v3_10001f38 = icmp eq i32 %v1_10001d58, 0
  store i1 %v3_10001f38, i1* %cr3_eq.global-to-local, align 1
  %v0_10001f40 = load i32, i32* @r30, align 4
  %v1_10001f40 = add i32 %v0_10001f40, 40
  store i32 %v1_10001f40, i32* %r9.global-to-local, align 4
  %v0_10001f44 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001f44 = urem i32 %v0_10001f44, 2
  store i32 %v1_10001f44, i32* %r14.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001f48 = urem i32 %v0_10001f48, 2
  %v1_10001f4c = urem i32 %v0_10001f1c, 2
  %v1_10001f50 = urem i32 %v1_10001f40, 65536
  store i32 %v1_10001f50, i32* @r24, align 4
  store i32 0, i32* @r29, align 4
  store i32 5, i32* %r23.global-to-local, align 4
  %v4_10001fa0 = sext i8 %v5_10001d44 to i32
  %v4_10001fa8 = sext i8 %v5_10001d0c to i32
  br label %dec_label_pc_10001f5c

dec_label_pc_10001f5c:                            ; preds = %dec_label_pc_10002038, %dec_label_pc_10001f18
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443496, i32* @lr, align 4
  %v2_10001f64 = call i32 @function_100089c8(i32 1510, i32 1)
  store i32 %v2_10001f64, i32* %r3.global-to-local, align 4
  %v3_10001f68 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10001f68, i32* %r9.global-to-local, align 4
  %v0_10001f6c = load i32, i32* @r29, align 4
  %v1_10001f6c = mul i32 %v0_10001f6c, 4
  store i32 %v1_10001f6c, i32* %r0.global-to-local, align 4
  %v1_10001f70 = load i32, i32* %r21.global-to-local, align 4
  %v3_10001f70 = add i32 %v1_10001f70, %v1_10001f6c
  %v4_10001f70 = inttoptr i32 %v3_10001f70 to i32*
  store i32 %v2_10001f64, i32* %v4_10001f70, align 4
  %v0_10001f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f74 = mul i32 %v0_10001f74, 4
  store i32 %v1_10001f74, i32* %r9.global-to-local, align 4
  %v1_10001f78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f78 = add i32 %v1_10001f78, %v1_10001f74
  %v3_10001f78 = inttoptr i32 %v2_10001f78 to i32*
  %v4_10001f78 = load i32, i32* %v3_10001f78, align 4
  store i32 %v4_10001f78, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001f80 = inttoptr i32 %v4_10001f78 to i32*
  %v2_10001f80 = load i32, i32* %v1_10001f80, align 4
  store i32 %v2_10001f80, i32* %r0.global-to-local, align 4
  %v1_10001f84 = add i32 %v4_10001f78, 20
  store i32 %v1_10001f84, i32* @r29, align 4
  %v0_10001f88 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001f88 = trunc i32 %v0_10001f88 to i16
  %v3_10001f88 = add i32 %v4_10001f78, 4
  %v4_10001f88 = inttoptr i32 %v3_10001f88 to i16*
  store i16 %v1_10001f88, i16* %v4_10001f88, align 2
  %v0_10001f8c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f8c = add i32 %v0_10001f8c, 40
  store i32 %v1_10001f8c, i32* @r28, align 4
  %v1_10001f90 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001f90, i32* %r0.global-to-local, align 4
  %v1_10001f94 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v2_10001f98 = inttoptr i32 %v0_10001f8c to i32*
  store i32 %v1_10001f94, i32* %v2_10001f98, align 4
  %v0_10001f9c = load i32, i32* @r24, align 4
  %v1_10001f9c = trunc i32 %v0_10001f9c to i16
  %v2_10001f9c = load i32, i32* %r11.global-to-local, align 4
  %v3_10001f9c = add i32 %v2_10001f9c, 2
  %v4_10001f9c = inttoptr i32 %v3_10001f9c to i16*
  store i16 %v1_10001f9c, i16* %v4_10001f9c, align 2
  store i32 %v4_10001fa0, i32* %r0.global-to-local, align 4
  %v2_10001fa4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fa4 = add i32 %v2_10001fa4, 8
  %v4_10001fa4 = inttoptr i32 %v3_10001fa4 to i8*
  store i8 %v5_10001d44, i8* %v4_10001fa4, align 1
  store i32 %v4_10001fa8, i32* %r9.global-to-local, align 4
  %v2_10001fac = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fac = add i32 %v2_10001fac, 1
  %v4_10001fac = inttoptr i32 %v3_10001fac to i8*
  store i8 %v5_10001d0c, i8* %v4_10001fac, align 1
  %v0_10001fb0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001fb0, label %dec_label_pc_10001fbc, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001f5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001fb8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fb8 = add i32 %v2_10001fb8, 6
  %v4_10001fb8 = inttoptr i32 %v3_10001fb8 to i16*
  store i16 16384, i16* %v4_10001fb8, align 2
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001f5c, %dec_label_pc_10001fb4
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10001fc0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001fc0 = trunc i32 %v0_10001fc0 to i16
  %v2_10001fc0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc0 = add i32 %v2_10001fc0, 20
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 2
  %v0_10001fc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001fc4 = trunc i32 %v0_10001fc4 to i8
  %v2_10001fc4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fc4 = add i32 %v2_10001fc4, 9
  %v4_10001fc4 = inttoptr i32 %v3_10001fc4 to i8*
  store i8 %v1_10001fc4, i8* %v4_10001fc4, align 1
  %v0_10001fc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001fc8 = trunc i32 %v0_10001fc8 to i16
  %v2_10001fc8 = load i32, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 2
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i16*
  store i16 %v1_10001fc8, i16* %v4_10001fc8, align 2
  store i32 %v6_10001ea4, i32* %r0.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 12
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v6_10001ea4, i32* %v3_10001fd0, align 4
  %v3_10001fd4 = load i32, i32* %stack_var_-136, align 4
  %v1_10001fd8 = mul i32 %v3_10001fd4, 24
  %v1_10001fdc = load i32, i32* @r31, align 4
  %v2_10001fdc = add i32 %v1_10001fdc, %v1_10001fd8
  store i32 %v2_10001fdc, i32* %r9.global-to-local, align 4
  %v1_10001fe0 = add i32 %v2_10001fdc, 16
  %v2_10001fe0 = inttoptr i32 %v1_10001fe0 to i32*
  %v3_10001fe0 = load i32, i32* %v2_10001fe0, align 4
  store i32 %v3_10001fe0, i32* %r0.global-to-local, align 4
  store i32 %v1_10001f28, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fe8 = add i32 %v1_10001fe8, 16
  %v3_10001fe8 = inttoptr i32 %v2_10001fe8 to i32*
  store i32 %v3_10001fe0, i32* %v3_10001fe8, align 4
  store i32 %v1_10001f34, i32* %r11.global-to-local, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  %v1_10001ff0 = add i32 %v0_10001ff0, 12
  %v2_10001ff0 = inttoptr i32 %v1_10001ff0 to i32*
  %v3_10001ff0 = load i32, i32* %v2_10001ff0, align 4
  store i32 %v3_10001ff0, i32* %r0.global-to-local, align 4
  %v0_10001ff4 = load i32, i32* %r16.global-to-local, align 4
  %v2_10001ff4 = add i32 %v0_10001ff0, 4
  %v3_10001ff4 = inttoptr i32 %v2_10001ff4 to i32*
  store i32 %v0_10001ff4, i32* %v3_10001ff4, align 4
  %v1_10001ff8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001ff8, i32* %r0.global-to-local, align 4
  %v1_10001ffc = call i32 @__asm_rlwimi(i32 %v1_10001f28, i32 21, i32 10, i32 10)
  store i32 %v1_10001ffc, i32* %r0.global-to-local, align 4
  %v1_10002000 = call i32 @__asm_rlwimi(i32 %v1_10001f34, i32 20, i32 11, i32 11)
  store i32 %v1_10002000, i32* %r0.global-to-local, align 4
  %v1_10002004 = call i32 @__asm_rlwimi(i32 %v1_10001f4c, i32 19, i32 12, i32 12)
  store i32 %v1_10002004, i32* %r0.global-to-local, align 4
  %v1_10002008 = call i32 @__asm_rlwimi(i32 %v1_10001f44, i32 18, i32 13, i32 13)
  store i32 %v1_10002008, i32* %r0.global-to-local, align 4
  %v1_1000200c = call i32 @__asm_rlwimi(i32 %v1_10001f48, i32 17, i32 14, i32 14)
  store i32 %v1_1000200c, i32* %r0.global-to-local, align 4
  %v1_10002010 = call i32 @__asm_rlwimi(i32 %v1_10001f2c, i32 16, i32 15, i32 15)
  store i32 %v1_10002010, i32* %r0.global-to-local, align 4
  %v1_10002014 = load i32, i32* @r29, align 4
  %v2_10002014 = add i32 %v1_10002014, 12
  %v3_10002014 = inttoptr i32 %v2_10002014 to i32*
  store i32 %v1_10002010, i32* %v3_10002014, align 4
  %v0_10002018 = call i32 @function_100048a8()
  %v1_10002018 = trunc i32 %v0_10002018 to i16
  %v0_1000201c = load i32, i32* @r30, align 4
  store i32 %v0_1000201c, i32* @r4, align 4
  %v3_10002020 = load i32, i32* @r29, align 4
  %v4_10002020 = add i32 %v3_10002020, 14
  %v5_10002020 = inttoptr i32 %v4_10002020 to i16*
  store i16 %v1_10002018, i16* %v5_10002020, align 2
  %v0_10002024 = load i32, i32* @r28, align 4
  store i32 %v0_10002024, i32* @r3, align 4
  %v0_10002028 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002028, label %dec_label_pc_10002038, label %dec_label_pc_1000202c

dec_label_pc_1000202c:                            ; preds = %dec_label_pc_10001fbc
  %v0_1000202c = load i32, i32* @r29, align 4
  %v1_1000202c = add i32 %v0_1000202c, 12
  %v2_1000202c = inttoptr i32 %v1_1000202c to i32*
  %v3_1000202c = load i32, i32* %v2_1000202c, align 4
  %v1_10002030 = or i32 %v3_1000202c, 524288
  store i32 %v1_10002030, i32* %r0.global-to-local, align 4
  store i32 %v1_10002030, i32* %v2_1000202c, align 4
  br label %dec_label_pc_10002038

dec_label_pc_10002038:                            ; preds = %dec_label_pc_10001fbc, %dec_label_pc_1000202c
  store i32 ptrtoint (i32* @global_var_1000203c.18 to i32), i32* @lr, align 4
  %v0_10002038 = call i32 @function_10004968()
  store i32 %v0_10002038, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002040 = load i32, i32* @r28, align 4
  %v2_10002040 = load i32, i32* @r30, align 4
  %v4_10002040 = add i32 %v2_10002040, %v1_10002040
  %v5_10002040 = inttoptr i32 %v4_10002040 to i8*
  store i8 0, i8* %v5_10002040, align 1
  %v3_10002044 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002044, i32* %r9.global-to-local, align 4
  %v1_10002048 = add i32 %v3_10002044, 1
  store i32 %v1_10002048, i32* @r29, align 4
  %v1_1000204c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000204c = icmp slt i32 %v1_10002048, %v1_1000204c
  store i32 %v1_10002048, i32* %stack_var_-136, align 4
  br i1 %v2_1000204c, label %dec_label_pc_10001f5c, label %dec_label_pc_10002058.preheader

dec_label_pc_10002058.preheader:                  ; preds = %dec_label_pc_10002038, %dec_label_pc_10001efc
  %v3_10002074 = icmp eq i32 %v6_10001ea4, -1
  %v3_1000207c = icmp eq i32 %v1_10001e90, 0
  br label %dec_label_pc_10002058

dec_label_pc_10002058:                            ; preds = %dec_label_pc_10002058.preheader, %dec_label_pc_10002150
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002060 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10002060 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10002060 = or i1 %v0_10002060, %v1_10002060
  br i1 %v2_10002060, label %dec_label_pc_10002150, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002058
  store i32 %v6_10001ea4, i32* %r0.global-to-local, align 4
  %v0_10002068 = load i32, i32* @r30, align 4
  %v1_10002068 = add i32 %v0_10002068, 20
  store i32 %v1_10002068, i32* @r26, align 4
  %v1_10002070 = urem i32 %v1_10002068, 65536
  store i32 %v1_10002070, i32* @r24, align 4
  store i1 %v3_10002074, i1* %cr3_eq.global-to-local, align 1
  %v1_10002078 = add i32 %v0_10002068, 40
  store i32 %v1_10002078, i32* @r25, align 4
  store i1 %v3_1000207c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002088

dec_label_pc_10002088:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_10002064
  %v0_10002088 = phi i32 [ %v1_10002140, %dec_label_pc_100020e0 ], [ 0, %dec_label_pc_10002064 ]
  %v1_10002088 = mul i32 %v0_10002088, 24
  store i32 %v1_10002088, i32* %r0.global-to-local, align 4
  %v1_1000208c = mul i32 %v0_10002088, 4
  store i32 %v1_1000208c, i32* %r11.global-to-local, align 4
  %v1_10002090 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002090 = add i32 %v1_10002090, %v1_1000208c
  %v3_10002090 = inttoptr i32 %v2_10002090 to i32*
  %v4_10002090 = load i32, i32* %v3_10002090, align 4
  store i32 %v4_10002090, i32* @r28, align 4
  %v1_10002094 = load i32, i32* @r31, align 4
  %v2_10002094 = add i32 %v1_10002094, %v1_10002088
  %v1_10002098 = add i32 %v2_10002094, 20
  %v2_10002098 = inttoptr i32 %v1_10002098 to i8*
  %v3_10002098 = load i8, i8* %v2_10002098, align 1
  %v4_10002098 = zext i8 %v3_10002098 to i32
  store i32 %v4_10002098, i32* %r9.global-to-local, align 4
  %v1_1000209c = add i32 %v4_10002090, 20
  store i32 %v1_1000209c, i32* @r27, align 4
  %tmp40 = icmp ult i8 %v3_10002098, 32
  br i1 %tmp40, label %dec_label_pc_100021c4, label %dec_label_pc_100020a8

dec_label_pc_100020a8:                            ; preds = %dec_label_pc_10002088
  %v0_100020a8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100020a8, label %dec_label_pc_100021ec, label %dec_label_pc_100020ac

dec_label_pc_100020ac:                            ; preds = %dec_label_pc_100021c4, %dec_label_pc_100020a8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100020b4 = load i32, i32* %r17.global-to-local, align 4
  %v4_100020b4 = icmp eq i32 %v0_100020b4, 65535
  br i1 %v4_100020b4, label %dec_label_pc_10002204, label %dec_label_pc_100020bc

dec_label_pc_100020bc:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100020ac
  %v1_100020bc = phi i32 [ %v1_100021fc, %dec_label_pc_100021ec ], [ 65535, %dec_label_pc_100020ac ]
  %v0_100020bc = load i32, i32* %r18.global-to-local, align 4
  %v4_100020bc = icmp eq i32 %v0_100020bc, %v1_100020bc
  br i1 %v4_100020bc, label %dec_label_pc_10002214, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge, %dec_label_pc_100020bc
  %v1_100020c4 = phi i32 [ %v1_100020c4.pre, %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge ], [ %v1_100020bc, %dec_label_pc_100020bc ]
  %v0_100020c4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100020c4 = icmp eq i32 %v0_100020c4, %v1_100020c4
  br i1 %v4_100020c4, label %dec_label_pc_10002224, label %dec_label_pc_100020cc

dec_label_pc_100020cc:                            ; preds = %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge, %dec_label_pc_100020c4
  %v1_100020cc = phi i32 [ %v1_100020cc.pre, %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge ], [ %v1_100020c4, %dec_label_pc_100020c4 ]
  %v0_100020cc = load i32, i32* %r16.global-to-local, align 4
  %v4_100020cc = icmp eq i32 %v0_100020cc, %v1_100020cc
  br i1 %v4_100020cc, label %dec_label_pc_10002234, label %dec_label_pc_100020d4

dec_label_pc_100020d4:                            ; preds = %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge, %dec_label_pc_100020cc
  %v1_100020d4 = phi i32 [ %v1_100020d4.pre, %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge ], [ %v1_100020cc, %dec_label_pc_100020cc ]
  %v0_100020d4 = load i32, i32* %r15.global-to-local, align 4
  %v4_100020d4 = icmp eq i32 %v0_100020d4, %v1_100020d4
  br i1 %v4_100020d4, label %dec_label_pc_10002244, label %dec_label_pc_100020dc

dec_label_pc_100020dc:                            ; preds = %dec_label_pc_10002234, %dec_label_pc_100020d4
  %v0_100020dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100020dc, label %dec_label_pc_100020e0, label %dec_label_pc_10002250

dec_label_pc_100020e0:                            ; preds = %dec_label_pc_100020dc, %dec_label_pc_10002244, %dec_label_pc_10002250
  %v0_100020e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020e0 = trunc i32 %v0_100020e0 to i16
  %v2_100020e0 = load i32, i32* @r28, align 4
  %v3_100020e0 = add i32 %v2_100020e0, 10
  %v4_100020e0 = inttoptr i32 %v3_100020e0 to i16*
  store i16 %v1_100020e0, i16* %v4_100020e0, align 2
  %v0_100020e8 = load i32, i32* @r28, align 4
  store i32 %v0_100020e8, i32* @r3, align 4
  %v2_100020ec = call i32 @function_10003ca8(i32 %v0_100020e8, i32 20)
  %v3_100020ec = trunc i32 %v2_100020ec to i16
  %v0_100020f0 = load i32, i32* @r27, align 4
  store i32 %v0_100020f0, i32* @r4, align 4
  %v3_100020f4 = load i32, i32* @r28, align 4
  %v4_100020f4 = add i32 %v3_100020f4, 10
  %v5_100020f4 = inttoptr i32 %v4_100020f4 to i16*
  store i16 %v3_100020ec, i16* %v5_100020f4, align 2
  %v0_100020f8 = load i32, i32* @r24, align 4
  %v0_100020fc = load i32, i32* %r23.global-to-local, align 4
  %v1_100020fc = trunc i32 %v0_100020fc to i16
  %v2_100020fc = load i32, i32* @r27, align 4
  %v3_100020fc = add i32 %v2_100020fc, 16
  %v4_100020fc = inttoptr i32 %v3_100020fc to i16*
  store i16 %v1_100020fc, i16* %v4_100020fc, align 2
  %v0_10002100 = load i32, i32* @r26, align 4
  %v0_10002104 = load i32, i32* @r28, align 4
  store i32 %v0_10002104, i32* %r3.global-to-local, align 4
  %v4_10002108 = call i32 @function_10003d0c(i32 %v0_10002104, i32 %v0_100020f0, i32 %v0_100020f8, i32 %v0_10002100)
  %v5_10002108 = trunc i32 %v4_10002108 to i16
  store i32 %v4_10002108, i32* %r3.global-to-local, align 4
  %v3_1000210c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_1000210c, i32* %r7.global-to-local, align 4
  %v0_10002110 = load i32, i32* @r27, align 4
  %v1_10002110 = add i32 %v0_10002110, 2
  %v2_10002110 = inttoptr i32 %v1_10002110 to i16*
  %v3_10002110 = load i16, i16* %v2_10002110, align 2
  %v4_10002110 = zext i16 %v3_10002110 to i32
  store i32 %v4_10002110, i32* %r0.global-to-local, align 4
  %v0_10002114 = load i32, i32* @r28, align 4
  %v1_10002118 = mul i32 %v3_1000210c, 24
  store i32 %v1_10002118, i32* %r7.global-to-local, align 4
  %v4_1000211c = add i32 %v0_10002110, 16
  %v5_1000211c = inttoptr i32 %v4_1000211c to i16*
  store i16 %v5_10002108, i16* %v5_1000211c, align 2
  %v0_10002120 = load i32, i32* @r25, align 4
  %v0_10002124 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002124, i32* %r3.global-to-local, align 4
  %v0_10002128 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002128 = load i32, i32* @r31, align 4
  %v2_10002128 = add i32 %v1_10002128, %v0_10002128
  store i32 %v2_10002128, i32* %r7.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002130 = trunc i32 %v0_10002130 to i16
  %v3_10002130 = add i32 %v2_10002128, 2
  %v4_10002130 = inttoptr i32 %v3_10002130 to i16*
  store i16 %v1_10002130, i16* %v4_10002130, align 2
  store i32 268443964, i32* @lr, align 4
  %v6_10002138 = call i32 @function_100085f0(i32 %v0_10002124, i32 %v0_10002114, i32 %v0_10002120, i32 16384, i32 %v2_10002128, i32 16)
  store i32 %v6_10002138, i32* %r3.global-to-local, align 4
  %v3_1000213c = load i32, i32* %stack_var_-136, align 4
  %v1_10002140 = add i32 %v3_1000213c, 1
  store i32 %v1_10002140, i32* %r9.global-to-local, align 4
  %v1_10002144 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002144 = icmp slt i32 %v1_10002140, %v1_10002144
  store i32 %v1_10002140, i32* %stack_var_-136, align 4
  br i1 %v2_10002144, label %dec_label_pc_10002088, label %dec_label_pc_10002150

dec_label_pc_10002150:                            ; preds = %dec_label_pc_100020e0, %dec_label_pc_10002058
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v0_10002154 = call i32 @function_10008038()
  store i32 %v0_10002154, i32* %r3.global-to-local, align 4
  store i32 %v2_10001eb8, i32* %r0.global-to-local, align 4
  %v2_1000215c = icmp slt i32 %v2_10001eb8, %v0_10002154
  br i1 %v2_1000215c, label %dec_label_pc_10002164, label %dec_label_pc_10002058

dec_label_pc_10002164:                            ; preds = %dec_label_pc_10002150, %dec_label_pc_10001c64, %dec_label_pc_1000226c
  store i32 %v0_10001c80, i32* %r0.global-to-local, align 4
  %v1_10002178 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c6c)
  store i32 %v0_10001cbc, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cc0, i32* %r25.global-to-local, align 4
  store i32 %v0_10001cc4, i32* %r26.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r27.global-to-local, align 4
  store i32 %v0_10001cd0, i32* %r29.global-to-local, align 4
  %v0_100021c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100021c0

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002088
  %v1_100021c4 = add i32 %v2_10002094, 16
  %v2_100021c4 = inttoptr i32 %v1_100021c4 to i32*
  %v3_100021c4 = load i32, i32* %v2_100021c4, align 4
  store i32 %v3_100021c4, i32* %r29.global-to-local, align 4
  %v0_100021c8 = call i32 @function_100048a8()
  store i32 %v0_100021c8, i32* %r3.global-to-local, align 4
  %v3_100021cc = load i32, i32* %stack_var_-136, align 4
  %v1_100021d0 = mul i32 %v3_100021cc, 24
  %v1_100021d4 = load i32, i32* @r31, align 4
  %v2_100021d4 = add i32 %v1_100021d4, %v1_100021d0
  store i32 %v2_100021d4, i32* %r9.global-to-local, align 4
  %v1_100021d8 = add i32 %v2_100021d4, 20
  %v2_100021d8 = inttoptr i32 %v1_100021d8 to i8*
  %v3_100021d8 = load i8, i8* %v2_100021d8, align 1
  %v4_100021d8 = zext i8 %v3_100021d8 to i32
  store i32 %v4_100021d8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100021d8, 64
  %v2_100021dc = zext i8 %tmp to i32
  %v3_100021dc = lshr i32 %v0_100021c8, %v2_100021dc
  store i32 %v3_100021dc, i32* %r3.global-to-local, align 4
  %v0_100021e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100021e0 = add i32 %v3_100021dc, %v0_100021e0
  store i32 %v2_100021e0, i32* %r29.global-to-local, align 4
  %v1_100021e4 = load i32, i32* @r28, align 4
  %v2_100021e4 = add i32 %v1_100021e4, 16
  %v3_100021e4 = inttoptr i32 %v2_100021e4 to i32*
  store i32 %v2_100021e0, i32* %v3_100021e4, align 4
  %v0_100021e8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100021e8, label %dec_label_pc_100021ec, label %dec_label_pc_100020ac

dec_label_pc_100021ec:                            ; preds = %dec_label_pc_100021c4, %dec_label_pc_100020a8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100021f0 = call i32 @function_100048a8()
  store i32 %v0_100021f0, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_100021f8 = load i32, i32* @r28, align 4
  %v2_100021f8 = add i32 %v1_100021f8, 12
  %v3_100021f8 = inttoptr i32 %v2_100021f8 to i32*
  store i32 %v0_100021f0, i32* %v3_100021f8, align 4
  %v0_100021fc = load i32, i32* %r17.global-to-local, align 4
  %v1_100021fc = load i32, i32* %r29.global-to-local, align 4
  %v4_100021fc = icmp eq i32 %v0_100021fc, %v1_100021fc
  br i1 %v4_100021fc, label %dec_label_pc_10002204, label %dec_label_pc_100020bc

dec_label_pc_10002204:                            ; preds = %dec_label_pc_100021ec, %dec_label_pc_100020ac
  %v0_10002204 = call i32 @function_100048a8()
  %v1_10002204 = trunc i32 %v0_10002204 to i16
  store i32 %v0_10002204, i32* %r3.global-to-local, align 4
  %v0_10002208 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002208 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002208 = icmp eq i32 %v0_10002208, %v1_10002208
  %v3_1000220c = load i32, i32* @r28, align 4
  %v4_1000220c = add i32 %v3_1000220c, 4
  %v5_1000220c = inttoptr i32 %v4_1000220c to i16*
  store i16 %v1_10002204, i16* %v5_1000220c, align 2
  br i1 %v4_10002208, label %dec_label_pc_10002214, label %dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge

dec_label_pc_10002204.dec_label_pc_100020c4_crit_edge: ; preds = %dec_label_pc_10002204
  %v1_100020c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020c4

dec_label_pc_10002214:                            ; preds = %dec_label_pc_10002204, %dec_label_pc_100020bc
  %v0_10002214 = call i32 @function_100048a8()
  %v1_10002214 = trunc i32 %v0_10002214 to i16
  store i32 %v0_10002214, i32* %r3.global-to-local, align 4
  %v0_10002218 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002218 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002218 = icmp eq i32 %v0_10002218, %v1_10002218
  %v3_1000221c = load i32, i32* @r28, align 4
  %v4_1000221c = add i32 %v3_1000221c, 20
  %v5_1000221c = inttoptr i32 %v4_1000221c to i16*
  store i16 %v1_10002214, i16* %v5_1000221c, align 2
  br i1 %v4_10002218, label %dec_label_pc_10002224, label %dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge

dec_label_pc_10002214.dec_label_pc_100020cc_crit_edge: ; preds = %dec_label_pc_10002214
  %v1_100020cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020cc

dec_label_pc_10002224:                            ; preds = %dec_label_pc_10002214, %dec_label_pc_100020c4
  %v0_10002224 = call i32 @function_100048a8()
  %v1_10002224 = trunc i32 %v0_10002224 to i16
  store i32 %v0_10002224, i32* %r3.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002228 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002228 = icmp eq i32 %v0_10002228, %v1_10002228
  %v3_1000222c = load i32, i32* @r27, align 4
  %v4_1000222c = add i32 %v3_1000222c, 2
  %v5_1000222c = inttoptr i32 %v4_1000222c to i16*
  store i16 %v1_10002224, i16* %v5_1000222c, align 2
  br i1 %v4_10002228, label %dec_label_pc_10002234, label %dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge

dec_label_pc_10002224.dec_label_pc_100020d4_crit_edge: ; preds = %dec_label_pc_10002224
  %v1_100020d4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100020d4

dec_label_pc_10002234:                            ; preds = %dec_label_pc_10002224, %dec_label_pc_100020cc
  %v0_10002234 = call i32 @function_100048a8()
  store i32 %v0_10002234, i32* %r3.global-to-local, align 4
  %v0_10002238 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002238 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002238 = icmp eq i32 %v0_10002238, %v1_10002238
  %v1_1000223c = load i32, i32* @r27, align 4
  %v2_1000223c = add i32 %v1_1000223c, 4
  %v3_1000223c = inttoptr i32 %v2_1000223c to i32*
  store i32 %v0_10002234, i32* %v3_1000223c, align 4
  br i1 %v4_10002238, label %dec_label_pc_10002244, label %dec_label_pc_100020dc

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002234, %dec_label_pc_100020d4
  %v0_10002244 = call i32 @function_100048a8()
  store i32 %v0_10002244, i32* %r3.global-to-local, align 4
  %v1_10002248 = load i32, i32* @r27, align 4
  %v2_10002248 = add i32 %v1_10002248, 8
  %v3_10002248 = inttoptr i32 %v2_10002248 to i32*
  store i32 %v0_10002244, i32* %v3_10002248, align 4
  %v0_1000224c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000224c, label %dec_label_pc_100020e0, label %dec_label_pc_10002250

dec_label_pc_10002250:                            ; preds = %dec_label_pc_100020dc, %dec_label_pc_10002244
  %v0_10002250 = load i32, i32* @r28, align 4
  %v1_10002250 = add i32 %v0_10002250, 40
  store i32 %v1_10002250, i32* @r29, align 4
  %v0_10002254 = load i32, i32* @r30, align 4
  store i32 %v0_10002254, i32* @r4, align 4
  store i32 %v1_10002250, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002260.19 to i32), i32* @lr, align 4
  %v0_1000225c = call i32 @function_10004968()
  store i32 %v0_1000225c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002264 = load i32, i32* @r29, align 4
  %v2_10002264 = load i32, i32* @r30, align 4
  %v4_10002264 = add i32 %v2_10002264, %v1_10002264
  %v5_10002264 = inttoptr i32 %v4_10002264 to i8*
  store i8 0, i8* %v5_10002264, align 1
  br label %dec_label_pc_100020e0

dec_label_pc_1000226c:                            ; preds = %dec_label_pc_10001ed8
  %v0_1000226c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000226c, i32* %r3.global-to-local, align 4
  store i32 268444276, i32* @lr, align 4
  %v0_10002270 = call i32 @function_10007cb0()
  store i32 %v0_10002270, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002164

; uselistorder directives
  uselistorder i32 %v0_10002224, { 1, 0 }
  uselistorder i32 %v0_10002214, { 1, 0 }
  uselistorder i32 %v0_10002204, { 1, 0 }
  uselistorder i32 %v1_100021fc, { 1, 0 }
  uselistorder i32 %v1_10002140, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002108, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i32 %v1_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f6c, { 1, 0 }
  uselistorder i32 %v1_10001f44, { 1, 0 }
  uselistorder i32 %v1_10001f34, { 2, 1, 0 }
  uselistorder i32 %v1_10001f1c, { 1, 0 }
  uselistorder i32 %v2_10001eb8, { 1, 0 }
  uselistorder i32 %v6_10001ea4, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10001d44, { 1, 0 }
  uselistorder i8 %v5_10001d0c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r29.global-to-local, { 9, 8, 10, 7, 11, 13, 12, 0, 1, 3, 2, 4, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_10002250, { 1, 0 }
  uselistorder label %dec_label_pc_10002164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100020e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002058, { 1, 0 }
  uselistorder label %dec_label_pc_10002038, { 1, 0 }
  uselistorder label %dec_label_pc_10001fbc, { 1, 0 }
}

define i32 @function_10002278(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002278:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10002278 = load i32, i32* @lr, align 4
  store i32 %v0_10002278, i32* %r0.global-to-local, align 4
  %v0_10002280 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r27.global-to-local, align 4
  %v0_10002294 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100022dc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100022e4 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268444412, i32* @lr, align 4
  %v2_100022f8 = call i32 @function_100089c8(i32 %arg2, i32 4)
  %v0_100022fc = load i32, i32* @r29, align 4
  store i32 %v2_100022f8, i32* %r25.global-to-local, align 4
  %v0_1000230c = load i32, i32* @r28, align 4
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  store i32 268444436, i32* @lr, align 4
  %v4_10002310 = inttoptr i32 %v0_100022fc to i32*
  %v5_10002310 = call i32 @function_10000300(i32 %v0_1000230c, i32* %v4_10002310, i32 2, i32 0)
  %v5_10002320 = trunc i32 %v5_10002310 to i8
  %v0_10002328 = load i32, i32* @r29, align 4
  %v0_1000232c = load i32, i32* @r28, align 4
  store i32 %v0_1000232c, i32* %r3.global-to-local, align 4
  store i32 268444468, i32* @lr, align 4
  %v4_10002330 = inttoptr i32 %v0_10002328 to i32*
  %v5_10002330 = call i32 @function_10000300(i32 %v0_1000232c, i32* %v4_10002330, i32 3, i32 65535)
  %v0_10002334 = load i32, i32* @r29, align 4
  store i32 %v5_10002330, i32* %r21.global-to-local, align 4
  %v0_10002344 = load i32, i32* @r28, align 4
  store i32 %v0_10002344, i32* %r3.global-to-local, align 4
  store i32 268444492, i32* @lr, align 4
  %v4_10002348 = inttoptr i32 %v0_10002334 to i32*
  %v5_10002348 = call i32 @function_10000300(i32 %v0_10002344, i32* %v4_10002348, i32 4, i32 64)
  %v0_1000234c = load i32, i32* @r29, align 4
  %v5_10002358 = trunc i32 %v5_10002348 to i8
  %v0_10002360 = load i32, i32* @r28, align 4
  store i32 %v0_10002360, i32* %r3.global-to-local, align 4
  store i32 268444520, i32* @lr, align 4
  %v4_10002364 = inttoptr i32 %v0_1000234c to i32*
  %v5_10002364 = call i32 @function_10000300(i32 %v0_10002360, i32* %v4_10002364, i32 5, i32 1)
  %v1_1000236c = urem i32 %v5_10002364, 256
  %v0_1000237c = load i32, i32* @r29, align 4
  %v0_10002380 = load i32, i32* @r28, align 4
  store i32 %v0_10002380, i32* %r3.global-to-local, align 4
  store i32 268444552, i32* @lr, align 4
  %v4_10002384 = inttoptr i32 %v0_1000237c to i32*
  %v5_10002384 = call i32 @function_10000300(i32 %v0_10002380, i32* %v4_10002384, i32 6, i32 65535)
  %v0_1000238c = load i32, i32* @r29, align 4
  store i32 %v5_10002384, i32* %r22.global-to-local, align 4
  %v0_1000239c = load i32, i32* @r28, align 4
  store i32 %v0_1000239c, i32* %r3.global-to-local, align 4
  store i32 268444580, i32* @lr, align 4
  %v4_100023a0 = inttoptr i32 %v0_1000238c to i32*
  %v5_100023a0 = call i32 @function_10000300(i32 %v0_1000239c, i32* %v4_100023a0, i32 7, i32 65535)
  %v0_100023a8 = load i32, i32* @r29, align 4
  store i32 %v5_100023a0, i32* %r23.global-to-local, align 4
  %v0_100023b8 = load i32, i32* @r28, align 4
  store i32 %v0_100023b8, i32* %r3.global-to-local, align 4
  store i32 268444608, i32* @lr, align 4
  %v4_100023bc = inttoptr i32 %v0_100023a8 to i32*
  %v5_100023bc = call i32 @function_10000300(i32 %v0_100023b8, i32* %v4_100023bc, i32 16, i32 65535)
  %v0_100023c0 = load i32, i32* @r29, align 4
  store i32 %v5_100023bc, i32* %r20.global-to-local, align 4
  %v0_100023d0 = load i32, i32* @r28, align 4
  store i32 %v0_100023d0, i32* %r3.global-to-local, align 4
  store i32 268444632, i32* @lr, align 4
  %v4_100023d4 = inttoptr i32 %v0_100023c0 to i32*
  %v5_100023d4 = call i32 @function_10000300(i32 %v0_100023d0, i32* %v4_100023d4, i32 17, i32 0)
  %v0_100023d8 = load i32, i32* @r29, align 4
  store i32 %v5_100023d4, i32* %r19.global-to-local, align 4
  %v0_100023e8 = load i32, i32* @r28, align 4
  store i32 %v0_100023e8, i32* %r3.global-to-local, align 4
  store i32 268444656, i32* @lr, align 4
  %v4_100023ec = inttoptr i32 %v0_100023d8 to i32*
  %v5_100023ec = call i32 @function_10000300(i32 %v0_100023e8, i32* %v4_100023ec, i32 10, i32 0)
  %v0_100023f0 = load i32, i32* @r29, align 4
  store i32 %v5_100023ec, i32* %r14.global-to-local, align 4
  %v0_10002400 = load i32, i32* @r28, align 4
  store i32 %v0_10002400, i32* %r3.global-to-local, align 4
  store i32 268444680, i32* @lr, align 4
  %v4_10002404 = inttoptr i32 %v0_100023f0 to i32*
  %v5_10002404 = call i32 @function_10000300(i32 %v0_10002400, i32* %v4_10002404, i32 11, i32 0)
  %v0_10002408 = load i32, i32* @r29, align 4
  store i32 %v5_10002404, i32* %r15.global-to-local, align 4
  %v0_10002418 = load i32, i32* @r28, align 4
  store i32 %v0_10002418, i32* %r3.global-to-local, align 4
  store i32 268444704, i32* @lr, align 4
  %v4_1000241c = inttoptr i32 %v0_10002408 to i32*
  %v5_1000241c = call i32 @function_10000300(i32 %v0_10002418, i32* %v4_1000241c, i32 12, i32 0)
  %v0_10002420 = load i32, i32* @r29, align 4
  store i32 %v5_1000241c, i32* %r16.global-to-local, align 4
  %v0_10002430 = load i32, i32* @r28, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  store i32 268444728, i32* @lr, align 4
  %v4_10002434 = inttoptr i32 %v0_10002420 to i32*
  %v5_10002434 = call i32 @function_10000300(i32 %v0_10002430, i32* %v4_10002434, i32 13, i32 0)
  %v0_10002438 = load i32, i32* @r29, align 4
  store i32 %v5_10002434, i32* %r17.global-to-local, align 4
  %v0_10002448 = load i32, i32* @r28, align 4
  store i32 %v0_10002448, i32* %r3.global-to-local, align 4
  store i32 268444752, i32* @lr, align 4
  %v4_1000244c = inttoptr i32 %v0_10002438 to i32*
  %v5_1000244c = call i32 @function_10000300(i32 %v0_10002448, i32* %v4_1000244c, i32 14, i32 1)
  %v0_10002450 = load i32, i32* @r29, align 4
  store i32 %v5_1000244c, i32* %r18.global-to-local, align 4
  %v0_10002460 = load i32, i32* @r28, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 268444776, i32* @lr, align 4
  %v4_10002464 = inttoptr i32 %v0_10002450 to i32*
  %v5_10002464 = call i32 @function_10000300(i32 %v0_10002460, i32* %v4_10002464, i32 15, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000246c = load i32, i32* @global_var_1001a998.12, align 4
  %v0_10002470 = load i32, i32* @r29, align 4
  store i32 %v5_10002464, i32* %r30.global-to-local, align 4
  %v0_1000247c = load i32, i32* @r28, align 4
  store i32 %v0_1000247c, i32* %r3.global-to-local, align 4
  store i32 268444804, i32* @lr, align 4
  %v5_10002480 = inttoptr i32 %v0_10002470 to i32*
  %v6_10002480 = call i32 @function_10000280(i32 %v0_1000247c, i32* %v5_10002480, i32 24, i32 %v3_1000246c, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444816, i32* @lr, align 4
  %v0_1000248c = call i32 @function_10008038()
  %v1_10002494 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002494 = add i32 %v1_10002494, %v0_1000248c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444840, i32* @lr, align 4
  %v3_100024a4 = call i32 @function_1000866c(i32 2, i32 3, i32 6)
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v3_100024a8 = icmp eq i32 %v3_100024a4, -1
  store i32 %v3_100024a4, i32* %r26.global-to-local, align 4
  br i1 %v3_100024a8, label %dec_label_pc_10002764, label %dec_label_pc_100024b4

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002278
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100024c0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268444880, i32* @lr, align 4
  %v4_100024cc = call i32 @function_10008630(i32 0, i32 3, i32 %v2_100024c0, i32 4)
  store i32 %v4_100024cc, i32* %r3.global-to-local, align 4
  %v3_100024d0 = icmp eq i32 %v4_100024cc, -1
  br i1 %v3_100024d0, label %dec_label_pc_1000285c, label %dec_label_pc_100024d8

dec_label_pc_100024d8:                            ; preds = %dec_label_pc_100024b4
  %v0_100024d8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100024d8 = icmp slt i32 %v0_100024d8, 0
  %v3_100024d8 = icmp eq i32 %v0_100024d8, 0
  store i1 %v1_100024d8, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_100024d8, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100024e0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100024e0 = urem i32 %v0_100024e0, 256
  store i32 %v1_100024e0, i32* %r14.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_100024e8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024e8 = urem i32 %v0_100024e8, 65536
  store i32 %v1_100024e8, i32* %r21.global-to-local, align 4
  %v0_100024ec = load i32, i32* %r22.global-to-local, align 4
  %v1_100024ec = urem i32 %v0_100024ec, 65536
  store i32 %v1_100024ec, i32* %r22.global-to-local, align 4
  %v0_100024f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100024f0 = urem i32 %v0_100024f0, 65536
  store i32 %v1_100024f0, i32* %r23.global-to-local, align 4
  %tmp39 = icmp slt i32 %v0_100024d8, 1
  br i1 %tmp39, label %dec_label_pc_10002664.preheader, label %dec_label_pc_100024fc

dec_label_pc_100024fc:                            ; preds = %dec_label_pc_100024d8
  %v0_10002500 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002500 = urem i32 %v0_10002500, 2
  %v0_10002508 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002508 = urem i32 %v0_10002508, 2
  store i32 %v1_10002508, i32* %r0.global-to-local, align 4
  %v3_1000250c = icmp eq i32 %v1_1000236c, 0
  store i1 %v3_1000250c, i1* %cr4_eq.global-to-local, align 1
  %v0_10002510 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002510 = urem i32 %v0_10002510, 2
  %v0_10002518 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002518 = urem i32 %v0_10002518, 2
  store i32 %v1_10002518, i32* %r14.global-to-local, align 4
  store i32 %v1_100024e0, i32* %r9.global-to-local, align 4
  %v0_10002520 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002520 = urem i32 %v0_10002520, 2
  store i32 %v1_10002520, i32* %r15.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000252c = urem i32 %v0_100024e0, 2
  store i32 %v1_1000252c, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r30.global-to-local, align 4
  store i32 6, i32* %r27.global-to-local, align 4
  store i32 10, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 3, i32* %r16.global-to-local, align 4
  %v4_10002588 = sext i8 %v5_10002320 to i32
  %v4_10002590 = sext i8 %v5_10002358 to i32
  br label %dec_label_pc_10002544

dec_label_pc_10002544:                            ; preds = %dec_label_pc_100025a4, %dec_label_pc_100024fc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268445008, i32* @lr, align 4
  %v2_1000254c = call i32 @function_100089c8(i32 128, i32 1)
  store i32 %v2_1000254c, i32* %r3.global-to-local, align 4
  %v3_10002550 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002550, i32* %r9.global-to-local, align 4
  %v0_10002554 = load i32, i32* @r29, align 4
  %v1_10002554 = mul i32 %v0_10002554, 4
  store i32 %v1_10002554, i32* %r0.global-to-local, align 4
  %v1_10002558 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002558 = add i32 %v1_10002558, %v1_10002554
  %v4_10002558 = inttoptr i32 %v3_10002558 to i32*
  store i32 %v2_1000254c, i32* %v4_10002558, align 4
  %v0_1000255c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000255c = mul i32 %v0_1000255c, 4
  store i32 %v1_1000255c, i32* %r9.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, %v1_1000255c
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  %v4_10002560 = load i32, i32* %v3_10002560, align 4
  store i32 %v4_10002560, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002568 = inttoptr i32 %v4_10002560 to i32*
  %v2_10002568 = load i32, i32* %v1_10002568, align 4
  store i32 %v2_10002568, i32* %r0.global-to-local, align 4
  %v1_1000256c = add i32 %v4_10002560, 20
  store i32 %v1_1000256c, i32* %r11.global-to-local, align 4
  %v0_10002570 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002570 = trunc i32 %v0_10002570 to i16
  %v3_10002570 = add i32 %v4_10002560, 4
  %v4_10002570 = inttoptr i32 %v3_10002570 to i16*
  store i16 %v1_10002570, i16* %v4_10002570, align 2
  %v2_10002574 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v2_10002574, i32* %r0.global-to-local, align 4
  %v1_10002578 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002580 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002580 = inttoptr i32 %v1_10002580 to i32*
  store i32 %v1_10002578, i32* %v2_10002580, align 4
  %v0_10002584 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002584 = trunc i32 %v0_10002584 to i16
  %v2_10002584 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002584 = add i32 %v2_10002584, 2
  %v4_10002584 = inttoptr i32 %v3_10002584 to i16*
  store i16 %v1_10002584, i16* %v4_10002584, align 2
  store i32 %v4_10002588, i32* %r0.global-to-local, align 4
  %v2_1000258c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000258c = add i32 %v2_1000258c, 1
  %v4_1000258c = inttoptr i32 %v3_1000258c to i8*
  store i8 %v5_10002320, i8* %v4_1000258c, align 1
  store i32 %v4_10002590, i32* %r9.global-to-local, align 4
  %v2_10002594 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002594 = add i32 %v2_10002594, 8
  %v4_10002594 = inttoptr i32 %v3_10002594 to i8*
  store i8 %v5_10002358, i8* %v4_10002594, align 1
  %v0_10002598 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002598, label %dec_label_pc_100025a4, label %dec_label_pc_1000259c

dec_label_pc_1000259c:                            ; preds = %dec_label_pc_10002544
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100025a0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a0 = add i32 %v2_100025a0, 6
  %v4_100025a0 = inttoptr i32 %v3_100025a0 to i16*
  store i16 16384, i16* %v4_100025a0, align 2
  br label %dec_label_pc_100025a4

dec_label_pc_100025a4:                            ; preds = %dec_label_pc_10002544, %dec_label_pc_1000259c
  %v0_100025a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100025a4 = trunc i32 %v0_100025a4 to i8
  %v2_100025a4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a4 = add i32 %v2_100025a4, 9
  %v4_100025a4 = inttoptr i32 %v3_100025a4 to i8*
  store i8 %v1_100025a4, i8* %v4_100025a4, align 1
  %v0_100025a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100025a8 = trunc i32 %v0_100025a8 to i16
  %v2_100025a8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100025a8 = add i32 %v2_100025a8, 20
  %v4_100025a8 = inttoptr i32 %v3_100025a8 to i16*
  store i16 %v1_100025a8, i16* %v4_100025a8, align 2
  store i32 %v6_10002480, i32* %r0.global-to-local, align 4
  %v0_100025b0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100025b0 = trunc i32 %v0_100025b0 to i16
  %v2_100025b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100025b0 = add i32 %v2_100025b0, 2
  %v4_100025b0 = inttoptr i32 %v3_100025b0 to i16*
  store i16 %v1_100025b0, i16* %v4_100025b0, align 2
  %v0_100025b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100025b4 = add i32 %v1_100025b4, 12
  %v3_100025b4 = inttoptr i32 %v2_100025b4 to i32*
  store i32 %v0_100025b4, i32* %v3_100025b4, align 4
  %v3_100025b8 = load i32, i32* %stack_var_-136, align 4
  %v1_100025bc = mul i32 %v3_100025b8, 24
  %v1_100025c0 = load i32, i32* @r31, align 4
  %v2_100025c0 = add i32 %v1_100025c0, %v1_100025bc
  store i32 %v2_100025c0, i32* %r9.global-to-local, align 4
  %v1_100025c4 = add i32 %v2_100025c0, 16
  %v2_100025c4 = inttoptr i32 %v1_100025c4 to i32*
  %v3_100025c4 = load i32, i32* %v2_100025c4, align 4
  store i32 %v3_100025c4, i32* %r0.global-to-local, align 4
  store i32 %v1_10002500, i32* %r9.global-to-local, align 4
  %v1_100025cc = load i32, i32* %r29.global-to-local, align 4
  %v2_100025cc = add i32 %v1_100025cc, 16
  %v3_100025cc = inttoptr i32 %v2_100025cc to i32*
  store i32 %v3_100025c4, i32* %v3_100025cc, align 4
  %v0_100025d0 = load i32, i32* %r20.global-to-local, align 4
  %v1_100025d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100025d0 = add i32 %v1_100025d0, 4
  %v3_100025d0 = inttoptr i32 %v2_100025d0 to i32*
  store i32 %v0_100025d0, i32* %v3_100025d0, align 4
  %v0_100025d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100025d4 = add i32 %v0_100025d4, 12
  %v2_100025d4 = inttoptr i32 %v1_100025d4 to i32*
  %v3_100025d4 = load i32, i32* %v2_100025d4, align 4
  store i32 %v3_100025d4, i32* %r0.global-to-local, align 4
  %v2_100025d8 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v2_100025d8, i32* %r0.global-to-local, align 4
  %v1_100025dc = call i32 @__asm_rlwimi(i32 %v1_1000252c, i32 21, i32 10, i32 10)
  store i32 %v1_100025dc, i32* %r0.global-to-local, align 4
  %v1_100025e0 = call i32 @__asm_rlwimi(i32 %v1_10002500, i32 20, i32 11, i32 11)
  store i32 %v1_100025e0, i32* %r0.global-to-local, align 4
  store i32 %v1_10002510, i32* %r9.global-to-local, align 4
  %v1_100025e8 = call i32 @__asm_rlwimi(i32 %v1_10002510, i32 19, i32 12, i32 12)
  store i32 %v1_100025e8, i32* %r0.global-to-local, align 4
  store i32 %v1_10002508, i32* %r9.global-to-local, align 4
  %v1_100025f0 = call i32 @__asm_rlwimi(i32 %v1_10002508, i32 18, i32 13, i32 13)
  store i32 %v1_100025f0, i32* %r0.global-to-local, align 4
  %v1_100025f4 = call i32 @__asm_rlwimi(i32 %v1_10002518, i32 17, i32 14, i32 14)
  store i32 %v1_100025f4, i32* %r0.global-to-local, align 4
  %v1_100025f8 = call i32 @__asm_rlwimi(i32 %v1_10002520, i32 16, i32 15, i32 15)
  store i32 %v1_100025f8, i32* %r0.global-to-local, align 4
  %v1_100025fc = load i32, i32* %r11.global-to-local, align 4
  %v2_100025fc = add i32 %v1_100025fc, 12
  %v3_100025fc = inttoptr i32 %v2_100025fc to i32*
  store i32 %v1_100025f8, i32* %v3_100025fc, align 4
  %v0_10002600 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002600 = trunc i32 %v0_10002600 to i8
  %v2_10002600 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002600 = add i32 %v2_10002600, 40
  %v4_10002600 = inttoptr i32 %v3_10002600 to i8*
  store i8 %v1_10002600, i8* %v4_10002600, align 1
  %v3_10002604 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002604 = add i32 %v3_10002604, 41
  %v5_10002604 = inttoptr i32 %v4_10002604 to i8*
  store i8 4, i8* %v5_10002604, align 1
  %v0_10002608 = call i32 @function_100048a8()
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002610 = urem i32 %v0_10002608, 16
  store i32 %v1_10002610, i32* %r3.global-to-local, align 4
  %v2_10002614 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002614 = add i32 %v2_10002614, 46
  %v4_10002614 = inttoptr i32 %v3_10002614 to i8*
  store i8 8, i8* %v4_10002614, align 1
  %v0_10002618 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002618 = add i32 %v0_10002618, 1400
  store i32 %v1_10002618, i32* %r3.global-to-local, align 4
  %v3_1000261c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000261c = add i32 %v3_1000261c, 44
  %v5_1000261c = inttoptr i32 %v4_1000261c to i8*
  store i8 4, i8* %v5_1000261c, align 1
  %v0_10002620 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002620 = trunc i32 %v0_10002620 to i16
  %v2_10002620 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002620 = add i32 %v2_10002620, 42
  %v4_10002620 = inttoptr i32 %v3_10002620 to i16*
  store i16 %v1_10002620, i16* %v4_10002620, align 2
  %v0_10002624 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002624 = trunc i32 %v0_10002624 to i8
  %v2_10002624 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002624 = add i32 %v2_10002624, 45
  %v4_10002624 = inttoptr i32 %v3_10002624 to i8*
  store i8 %v1_10002624, i8* %v4_10002624, align 1
  %v3_10002628 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002628 = add i32 %v3_10002628, 47
  %v5_10002628 = inttoptr i32 %v4_10002628 to i8*
  store i8 10, i8* %v5_10002628, align 1
  %v0_1000262c = call i32 @function_100048a8()
  store i32 %v0_1000262c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10002638 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002638 = add i32 %v1_10002638, 48
  %v3_10002638 = inttoptr i32 %v2_10002638 to i32*
  store i32 %v0_1000262c, i32* %v3_10002638, align 4
  %v0_1000263c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000263c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000263c = add i32 %v1_1000263c, 52
  %v3_1000263c = inttoptr i32 %v2_1000263c to i32*
  store i32 %v0_1000263c, i32* %v3_1000263c, align 4
  %v0_10002640 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002640 = trunc i32 %v0_10002640 to i8
  %v2_10002640 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002640 = add i32 %v2_10002640, 56
  %v4_10002640 = inttoptr i32 %v3_10002640 to i8*
  store i8 %v1_10002640, i8* %v4_10002640, align 1
  %v0_10002644 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002644 = trunc i32 %v0_10002644 to i8
  %v2_10002644 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002644 = add i32 %v2_10002644, 59
  %v4_10002644 = inttoptr i32 %v3_10002644 to i8*
  store i8 %v1_10002644, i8* %v4_10002644, align 1
  %v0_10002648 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002648 = trunc i32 %v0_10002648 to i8
  %v2_10002648 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002648 = add i32 %v2_10002648, 57
  %v4_10002648 = inttoptr i32 %v3_10002648 to i8*
  store i8 %v1_10002648, i8* %v4_10002648, align 1
  %v0_1000264c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000264c = trunc i32 %v0_1000264c to i8
  %v2_1000264c = load i32, i32* %r29.global-to-local, align 4
  %v3_1000264c = add i32 %v2_1000264c, 58
  %v4_1000264c = inttoptr i32 %v3_1000264c to i8*
  store i8 %v1_1000264c, i8* %v4_1000264c, align 1
  %v3_10002650 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002650, i32* %r9.global-to-local, align 4
  %v1_10002654 = add i32 %v3_10002650, 1
  store i32 %v1_10002654, i32* @r29, align 4
  %v1_10002658 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002658 = icmp slt i32 %v1_10002654, %v1_10002658
  store i32 %v1_10002654, i32* %stack_var_-136, align 4
  br i1 %v2_10002658, label %dec_label_pc_10002544, label %dec_label_pc_10002664.preheader

dec_label_pc_10002664.preheader:                  ; preds = %dec_label_pc_100025a4, %dec_label_pc_100024d8
  %v3_1000267c = icmp eq i32 %v6_10002480, -1
  %v3_10002680 = icmp eq i32 %v1_100024e0, 0
  br label %dec_label_pc_10002664

dec_label_pc_10002664:                            ; preds = %dec_label_pc_10002664.preheader, %dec_label_pc_10002750
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_1000266c = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_1000266c = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_1000266c = or i1 %v0_1000266c, %v1_1000266c
  br i1 %v2_1000266c, label %dec_label_pc_10002750, label %dec_label_pc_10002670

dec_label_pc_10002670:                            ; preds = %dec_label_pc_10002664
  store i32 %v6_10002480, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i1 %v3_1000267c, i1* %cr3_eq.global-to-local, align 1
  store i1 %v3_10002680, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10002688

dec_label_pc_10002688:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002670
  %v0_10002688 = phi i32 [ %v1_10002740, %dec_label_pc_100026e0 ], [ 0, %dec_label_pc_10002670 ]
  %v1_10002688 = mul i32 %v0_10002688, 24
  store i32 %v1_10002688, i32* %r0.global-to-local, align 4
  %v1_1000268c = mul i32 %v0_10002688, 4
  store i32 %v1_1000268c, i32* %r11.global-to-local, align 4
  %v1_10002690 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002690 = add i32 %v1_10002690, %v1_1000268c
  %v3_10002690 = inttoptr i32 %v2_10002690 to i32*
  %v4_10002690 = load i32, i32* %v3_10002690, align 4
  store i32 %v4_10002690, i32* %r28.global-to-local, align 4
  %v1_10002694 = load i32, i32* @r31, align 4
  %v2_10002694 = add i32 %v1_10002694, %v1_10002688
  %v1_10002698 = add i32 %v2_10002694, 20
  %v2_10002698 = inttoptr i32 %v1_10002698 to i8*
  %v3_10002698 = load i8, i8* %v2_10002698, align 1
  %v4_10002698 = zext i8 %v3_10002698 to i32
  store i32 %v4_10002698, i32* %r9.global-to-local, align 4
  %v1_1000269c = add i32 %v4_10002690, 20
  store i32 %v1_1000269c, i32* %r27.global-to-local, align 4
  %tmp40 = icmp ult i8 %v3_10002698, 32
  br i1 %tmp40, label %dec_label_pc_100027c4, label %dec_label_pc_100026a8

dec_label_pc_100026a8:                            ; preds = %dec_label_pc_10002688
  %v0_100026a8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100026a8, label %dec_label_pc_100027ec, label %dec_label_pc_100026ac

dec_label_pc_100026ac:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_100026a8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_100026b4 = load i32, i32* %r21.global-to-local, align 4
  %v4_100026b4 = icmp eq i32 %v0_100026b4, 65535
  br i1 %v4_100026b4, label %dec_label_pc_10002804, label %dec_label_pc_100026bc

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100026ac
  %v1_100026bc = phi i32 [ %v1_100027fc, %dec_label_pc_100027ec ], [ 65535, %dec_label_pc_100026ac ]
  %v0_100026bc = load i32, i32* %r22.global-to-local, align 4
  %v4_100026bc = icmp eq i32 %v0_100026bc, %v1_100026bc
  br i1 %v4_100026bc, label %dec_label_pc_10002814, label %dec_label_pc_100026c4

dec_label_pc_100026c4:                            ; preds = %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge, %dec_label_pc_100026bc
  %v1_100026c4 = phi i32 [ %v1_100026c4.pre, %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge ], [ %v1_100026bc, %dec_label_pc_100026bc ]
  %v0_100026c4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100026c4 = icmp eq i32 %v0_100026c4, %v1_100026c4
  br i1 %v4_100026c4, label %dec_label_pc_10002824, label %dec_label_pc_100026cc

dec_label_pc_100026cc:                            ; preds = %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge, %dec_label_pc_100026c4
  %v1_100026cc = phi i32 [ %v1_100026cc.pre, %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge ], [ %v1_100026c4, %dec_label_pc_100026c4 ]
  %v0_100026cc = load i32, i32* %r20.global-to-local, align 4
  %v4_100026cc = icmp eq i32 %v0_100026cc, %v1_100026cc
  br i1 %v4_100026cc, label %dec_label_pc_10002834, label %dec_label_pc_100026d4

dec_label_pc_100026d4:                            ; preds = %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge, %dec_label_pc_100026cc
  %v1_100026d4 = phi i32 [ %v1_100026d4.pre, %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge ], [ %v1_100026cc, %dec_label_pc_100026cc ]
  %v0_100026d4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100026d4 = icmp eq i32 %v0_100026d4, %v1_100026d4
  br i1 %v4_100026d4, label %dec_label_pc_10002844, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002834, %dec_label_pc_100026d4
  %v0_100026dc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100026dc, label %dec_label_pc_100026e0, label %dec_label_pc_10002850

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026dc, %dec_label_pc_10002844, %dec_label_pc_10002850
  %v0_100026e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100026e0 = trunc i32 %v0_100026e0 to i16
  %v2_100026e0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100026e0 = add i32 %v2_100026e0, 10
  %v4_100026e0 = inttoptr i32 %v3_100026e0 to i16*
  store i16 %v1_100026e0, i16* %v4_100026e0, align 2
  %v0_100026e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100026e8, i32* @r3, align 4
  %v2_100026ec = call i32 @function_10003ca8(i32 %v0_100026e8, i32 20)
  %v3_100026ec = trunc i32 %v2_100026ec to i16
  %v0_100026f0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100026f0, i32* @r4, align 4
  %v4_100026f4 = add i32 %v0_100026e8, 10
  %v5_100026f4 = inttoptr i32 %v4_100026f4 to i16*
  store i16 %v3_100026ec, i16* %v5_100026f4, align 2
  %v0_100026fc = load i32, i32* %r30.global-to-local, align 4
  %v1_100026fc = trunc i32 %v0_100026fc to i16
  %v2_100026fc = load i32, i32* %r27.global-to-local, align 4
  %v3_100026fc = add i32 %v2_100026fc, 16
  %v4_100026fc = inttoptr i32 %v3_100026fc to i16*
  store i16 %v1_100026fc, i16* %v4_100026fc, align 2
  %v0_10002704 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002704, i32* %r3.global-to-local, align 4
  %v4_10002708 = call i32 @function_10003d0c(i32 %v0_10002704, i32 %v0_100026f0, i32 40, i32 40)
  %v5_10002708 = trunc i32 %v4_10002708 to i16
  store i32 %v4_10002708, i32* %r3.global-to-local, align 4
  %v3_1000270c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_1000270c, i32* %r7.global-to-local, align 4
  %v0_10002710 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002710 = add i32 %v0_10002710, 2
  %v2_10002710 = inttoptr i32 %v1_10002710 to i16*
  %v3_10002710 = load i16, i16* %v2_10002710, align 2
  %v4_10002710 = zext i16 %v3_10002710 to i32
  store i32 %v4_10002710, i32* %r0.global-to-local, align 4
  %v0_10002714 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002718 = mul i32 %v3_1000270c, 24
  store i32 %v1_10002718, i32* %r7.global-to-local, align 4
  %v4_1000271c = add i32 %v0_10002710, 16
  %v5_1000271c = inttoptr i32 %v4_1000271c to i16*
  store i16 %v5_10002708, i16* %v5_1000271c, align 2
  %v0_10002724 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002724, i32* %r3.global-to-local, align 4
  %v0_10002728 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002728 = load i32, i32* @r31, align 4
  %v2_10002728 = add i32 %v1_10002728, %v0_10002728
  store i32 %v2_10002728, i32* %r7.global-to-local, align 4
  %v0_10002730 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002730 = trunc i32 %v0_10002730 to i16
  %v3_10002730 = add i32 %v2_10002728, 2
  %v4_10002730 = inttoptr i32 %v3_10002730 to i16*
  store i16 %v1_10002730, i16* %v4_10002730, align 2
  store i32 268445500, i32* @lr, align 4
  %v6_10002738 = call i32 @function_100085f0(i32 %v0_10002724, i32 %v0_10002714, i32 60, i32 16384, i32 %v2_10002728, i32 16)
  store i32 %v6_10002738, i32* %r3.global-to-local, align 4
  %v3_1000273c = load i32, i32* %stack_var_-136, align 4
  %v1_10002740 = add i32 %v3_1000273c, 1
  store i32 %v1_10002740, i32* %r9.global-to-local, align 4
  %v1_10002744 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002744 = icmp slt i32 %v1_10002740, %v1_10002744
  store i32 %v1_10002740, i32* %stack_var_-136, align 4
  br i1 %v2_10002744, label %dec_label_pc_10002688, label %dec_label_pc_10002750

dec_label_pc_10002750:                            ; preds = %dec_label_pc_100026e0, %dec_label_pc_10002664
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268445528, i32* @lr, align 4
  %v0_10002754 = call i32 @function_10008038()
  store i32 %v0_10002754, i32* %r3.global-to-local, align 4
  store i32 %v2_10002494, i32* %r0.global-to-local, align 4
  %v2_1000275c = icmp slt i32 %v2_10002494, %v0_10002754
  br i1 %v2_1000275c, label %dec_label_pc_10002764, label %dec_label_pc_10002664

dec_label_pc_10002764:                            ; preds = %dec_label_pc_10002750, %dec_label_pc_10002278, %dec_label_pc_1000285c
  store i32 %v0_10002294, i32* %r0.global-to-local, align 4
  %v1_10002778 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002280)
  store i32 %v0_100022dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100022e4, i32* %r29.global-to-local, align 4
  %v0_100027c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100027c0

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_10002688
  %v1_100027c4 = add i32 %v2_10002694, 16
  %v2_100027c4 = inttoptr i32 %v1_100027c4 to i32*
  %v3_100027c4 = load i32, i32* %v2_100027c4, align 4
  store i32 %v3_100027c4, i32* %r29.global-to-local, align 4
  %v0_100027c8 = call i32 @function_100048a8()
  store i32 %v0_100027c8, i32* %r3.global-to-local, align 4
  %v3_100027cc = load i32, i32* %stack_var_-136, align 4
  %v1_100027d0 = mul i32 %v3_100027cc, 24
  %v1_100027d4 = load i32, i32* @r31, align 4
  %v2_100027d4 = add i32 %v1_100027d4, %v1_100027d0
  store i32 %v2_100027d4, i32* %r9.global-to-local, align 4
  %v1_100027d8 = add i32 %v2_100027d4, 20
  %v2_100027d8 = inttoptr i32 %v1_100027d8 to i8*
  %v3_100027d8 = load i8, i8* %v2_100027d8, align 1
  %v4_100027d8 = zext i8 %v3_100027d8 to i32
  store i32 %v4_100027d8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100027d8, 64
  %v2_100027dc = zext i8 %tmp to i32
  %v3_100027dc = lshr i32 %v0_100027c8, %v2_100027dc
  store i32 %v3_100027dc, i32* %r3.global-to-local, align 4
  %v0_100027e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100027e0 = add i32 %v3_100027dc, %v0_100027e0
  store i32 %v2_100027e0, i32* %r29.global-to-local, align 4
  %v1_100027e4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100027e4 = add i32 %v1_100027e4, 16
  %v3_100027e4 = inttoptr i32 %v2_100027e4 to i32*
  store i32 %v2_100027e0, i32* %v3_100027e4, align 4
  %v0_100027e8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100027e8, label %dec_label_pc_100027ec, label %dec_label_pc_100026ac

dec_label_pc_100027ec:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_100026a8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100027f0 = call i32 @function_100048a8()
  store i32 %v0_100027f0, i32* %r3.global-to-local, align 4
  %v0_100027f4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100027f4 = or i32 %v0_100027f4, 65535
  store i32 %v1_100027f4, i32* %r29.global-to-local, align 4
  %v1_100027f8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100027f8 = add i32 %v1_100027f8, 12
  %v3_100027f8 = inttoptr i32 %v2_100027f8 to i32*
  store i32 %v0_100027f0, i32* %v3_100027f8, align 4
  %v0_100027fc = load i32, i32* %r21.global-to-local, align 4
  %v1_100027fc = load i32, i32* %r29.global-to-local, align 4
  %v4_100027fc = icmp eq i32 %v0_100027fc, %v1_100027fc
  br i1 %v4_100027fc, label %dec_label_pc_10002804, label %dec_label_pc_100026bc

dec_label_pc_10002804:                            ; preds = %dec_label_pc_100027ec, %dec_label_pc_100026ac
  %v0_10002804 = call i32 @function_100048a8()
  %v1_10002804 = trunc i32 %v0_10002804 to i16
  store i32 %v0_10002804, i32* %r3.global-to-local, align 4
  %v0_10002808 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002808 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002808 = icmp eq i32 %v0_10002808, %v1_10002808
  %v3_1000280c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000280c = add i32 %v3_1000280c, 4
  %v5_1000280c = inttoptr i32 %v4_1000280c to i16*
  store i16 %v1_10002804, i16* %v5_1000280c, align 2
  br i1 %v4_10002808, label %dec_label_pc_10002814, label %dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge

dec_label_pc_10002804.dec_label_pc_100026c4_crit_edge: ; preds = %dec_label_pc_10002804
  %v1_100026c4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026c4

dec_label_pc_10002814:                            ; preds = %dec_label_pc_10002804, %dec_label_pc_100026bc
  %v0_10002814 = call i32 @function_100048a8()
  %v1_10002814 = trunc i32 %v0_10002814 to i16
  store i32 %v0_10002814, i32* %r3.global-to-local, align 4
  %v0_10002818 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002818 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002818 = icmp eq i32 %v0_10002818, %v1_10002818
  %v3_1000281c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000281c = add i32 %v3_1000281c, 20
  %v5_1000281c = inttoptr i32 %v4_1000281c to i16*
  store i16 %v1_10002814, i16* %v5_1000281c, align 2
  br i1 %v4_10002818, label %dec_label_pc_10002824, label %dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge

dec_label_pc_10002814.dec_label_pc_100026cc_crit_edge: ; preds = %dec_label_pc_10002814
  %v1_100026cc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026cc

dec_label_pc_10002824:                            ; preds = %dec_label_pc_10002814, %dec_label_pc_100026c4
  %v0_10002824 = call i32 @function_100048a8()
  %v1_10002824 = trunc i32 %v0_10002824 to i16
  store i32 %v0_10002824, i32* %r3.global-to-local, align 4
  %v0_10002828 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002828 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002828 = icmp eq i32 %v0_10002828, %v1_10002828
  %v3_1000282c = load i32, i32* %r27.global-to-local, align 4
  %v4_1000282c = add i32 %v3_1000282c, 2
  %v5_1000282c = inttoptr i32 %v4_1000282c to i16*
  store i16 %v1_10002824, i16* %v5_1000282c, align 2
  br i1 %v4_10002828, label %dec_label_pc_10002834, label %dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge

dec_label_pc_10002824.dec_label_pc_100026d4_crit_edge: ; preds = %dec_label_pc_10002824
  %v1_100026d4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100026d4

dec_label_pc_10002834:                            ; preds = %dec_label_pc_10002824, %dec_label_pc_100026cc
  %v0_10002834 = call i32 @function_100048a8()
  store i32 %v0_10002834, i32* %r3.global-to-local, align 4
  %v0_10002838 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002838 = load i32, i32* %r29.global-to-local, align 4
  %v4_10002838 = icmp eq i32 %v0_10002838, %v1_10002838
  %v1_1000283c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000283c = add i32 %v1_1000283c, 4
  %v3_1000283c = inttoptr i32 %v2_1000283c to i32*
  store i32 %v0_10002834, i32* %v3_1000283c, align 4
  br i1 %v4_10002838, label %dec_label_pc_10002844, label %dec_label_pc_100026dc

dec_label_pc_10002844:                            ; preds = %dec_label_pc_10002834, %dec_label_pc_100026d4
  %v0_10002844 = call i32 @function_100048a8()
  store i32 %v0_10002844, i32* %r3.global-to-local, align 4
  %v1_10002848 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002848 = add i32 %v1_10002848, 8
  %v3_10002848 = inttoptr i32 %v2_10002848 to i32*
  store i32 %v0_10002844, i32* %v3_10002848, align 4
  %v0_1000284c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000284c, label %dec_label_pc_100026e0, label %dec_label_pc_10002850

dec_label_pc_10002850:                            ; preds = %dec_label_pc_100026dc, %dec_label_pc_10002844
  %v0_10002850 = call i32 @function_100048a8()
  %v1_10002850 = trunc i32 %v0_10002850 to i16
  store i32 %v0_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002854 = add i32 %v3_10002854, 18
  %v5_10002854 = inttoptr i32 %v4_10002854 to i16*
  store i16 %v1_10002850, i16* %v5_10002854, align 2
  br label %dec_label_pc_100026e0

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_100024b4
  %v0_1000285c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000285c, i32* %r3.global-to-local, align 4
  store i32 268445796, i32* @lr, align 4
  %v0_10002860 = call i32 @function_10007cb0()
  store i32 %v0_10002860, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002764

; uselistorder directives
  uselistorder i32 %v0_10002850, { 1, 0 }
  uselistorder i32 %v0_10002824, { 1, 0 }
  uselistorder i32 %v0_10002814, { 1, 0 }
  uselistorder i32 %v0_10002804, { 1, 0 }
  uselistorder i32 %v1_100027fc, { 1, 0 }
  uselistorder i32 %v1_10002740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002708, { 1, 0 }
  uselistorder i32 %v1_1000268c, { 1, 0 }
  uselistorder i32 %v1_1000255c, { 1, 0 }
  uselistorder i32 %v1_10002554, { 1, 0 }
  uselistorder i32 %v1_1000252c, { 1, 0 }
  uselistorder i32 %v1_10002520, { 1, 0 }
  uselistorder i32 %v1_10002518, { 1, 0 }
  uselistorder i32 %v1_10002508, { 2, 1, 0 }
  uselistorder i32 %v1_100024e0, { 1, 2, 0 }
  uselistorder i32 %v2_10002494, { 1, 0 }
  uselistorder i32 %v6_10002480, { 1, 2, 0 }
  uselistorder i8 %v5_10002358, { 1, 0 }
  uselistorder i8 %v5_10002320, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r29.global-to-local, { 8, 12, 9, 14, 10, 13, 11, 0, 1, 3, 4, 2, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 8, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32 }
  uselistorder label %dec_label_pc_10002850, { 1, 0 }
  uselistorder label %dec_label_pc_10002764, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100026e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002664, { 1, 0 }
  uselistorder label %dec_label_pc_100025a4, { 1, 0 }
}

define i32 @function_10002868(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002868:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %v0_10002870 = call i32 @__asm_mfcr()
  %v0_1000287c = load i32, i32* @r27, align 4
  store i32 %v0_10002870, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_100028b0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100028b8 = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268445908, i32* @lr, align 4
  %v2_100028d0 = call i32 @function_100089c8(i32 %arg2, i32 4)
  store i32 %v2_100028d0, i32* @r24, align 4
  %v0_100028dc = load i32, i32* @r30, align 4
  store i32 %v0_100028dc, i32* %r3.global-to-local, align 4
  store i32 268445924, i32* @lr, align 4
  %v2_100028e0 = call i32 @function_100089c8(i32 %v0_100028dc, i32 4)
  %v0_100028e8 = load i32, i32* @r29, align 4
  store i32 %v2_100028e0, i32* @r26, align 4
  %v0_100028f8 = load i32, i32* @r28, align 4
  store i32 %v0_100028f8, i32* %r3.global-to-local, align 4
  store i32 268445952, i32* @lr, align 4
  %v4_100028fc = inttoptr i32 %v0_100028e8 to i32*
  %v5_100028fc = call i32 @function_10000300(i32 %v0_100028f8, i32* %v4_100028fc, i32 7, i32 65535)
  %v0_10002908 = load i32, i32* @r29, align 4
  %v1_10002910 = urem i32 %v5_100028fc, 65536
  store i32 %v1_10002910, i32* %r20.global-to-local, align 4
  %v0_10002914 = load i32, i32* @r28, align 4
  store i32 %v0_10002914, i32* %r3.global-to-local, align 4
  store i32 268445980, i32* @lr, align 4
  %v4_10002918 = inttoptr i32 %v0_10002908 to i32*
  %v5_10002918 = call i32 @function_10000300(i32 %v0_10002914, i32* %v4_10002918, i32 6, i32 65535)
  %v0_1000291c = load i32, i32* @r29, align 4
  %v1_10002920 = urem i32 %v5_10002918, 65536
  store i32 %v1_10002920, i32* @r25, align 4
  %v0_1000292c = load i32, i32* @r28, align 4
  store i32 %v0_1000292c, i32* %r3.global-to-local, align 4
  store i32 268446004, i32* @lr, align 4
  %v4_10002930 = inttoptr i32 %v0_1000291c to i32*
  %v5_10002930 = call i32 @function_10000300(i32 %v0_1000292c, i32* %v4_10002930, i32 0, i32 512)
  %v0_10002934 = load i32, i32* @r29, align 4
  %v1_10002940 = urem i32 %v5_10002930, 65536
  store i32 %v1_10002940, i32* %r23.global-to-local, align 4
  %v0_10002944 = load i32, i32* @r28, align 4
  store i32 %v0_10002944, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000294c.22 to i32), i32* @lr, align 4
  %v4_10002948 = inttoptr i32 %v0_10002934 to i32*
  %v5_10002948 = call i32 @function_10000300(i32 %v0_10002944, i32* %v4_10002948, i32 1, i32 1)
  %v1_10002950 = urem i32 %v5_10002948, 256
  store i32 %v1_10002950, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 ptrtoint (i32* @global_var_1000296c.23 to i32), i32* @lr, align 4
  %v0_10002968 = call i32 @function_10008038()
  store i32 %v0_10002968, i32* %r3.global-to-local, align 4
  %v1_10002970 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002970 = add i32 %v1_10002970, %v0_10002968
  store i32 %v2_10002970, i32* %r18.global-to-local, align 4
  %v0_10002978 = load i32, i32* @r25, align 4
  %v4_10002978 = icmp eq i32 %v0_10002978, 65535
  br i1 %v4_10002978, label %dec_label_pc_10002b98, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002868, %dec_label_pc_10002b98
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = icmp slt i32 %v0_10002980, 0
  %v3_10002980 = icmp eq i32 %v0_10002980, 0
  store i1 %v1_10002980, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002980, i1* %cr4_eq.global-to-local, align 1
  %tmp34 = icmp slt i32 %v0_10002980, 1
  br i1 %tmp34, label %dec_label_pc_10002b38, label %dec_label_pc_10002988

dec_label_pc_10002988:                            ; preds = %dec_label_pc_10002980
  %v0_1000298c = load i32, i32* @r31, align 4
  store i32 %v0_1000298c, i32* @r29, align 4
  %v0_10002998 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002998 = icmp eq i32 %v0_10002998, 65535
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %r21.global-to-local, align 4
  %v2_10002ab0 = ptrtoint i32* %stack_var_-88 to i32
  br i1 %v4_10002998, label %dec_label_pc_10002a80, label %dec_label_pc_100029d0

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_10002a10, %dec_label_pc_10002a2c
  %v0_100029b0 = load i32, i32* @r28, align 4
  %v1_100029b0 = load i32, i32* @r26, align 4
  %v2_100029b0 = add i32 %v1_100029b0, %v0_100029b0
  %v3_100029b0 = inttoptr i32 %v2_100029b0 to i32*
  %v4_100029b0 = load i32, i32* %v3_100029b0, align 4
  store i32 %v4_100029b0, i32* @r3, align 4
  %v1_100029bc = add i32 %v0_100029b0, 4
  store i32 %v1_100029bc, i32* @r28, align 4
  store i32 268446148, i32* @lr, align 4
  %v0_100029c0 = call i32 @function_1000846c()
  store i32 %v0_100029c0, i32* %r3.global-to-local, align 4
  %v0_100029c4 = load i32, i32* @r31, align 4
  %v1_100029c4 = load i32, i32* @r30, align 4
  %v4_100029c4 = icmp eq i32 %v0_100029c4, %v1_100029c4
  %v0_100029c8 = load i32, i32* @r29, align 4
  %v1_100029c8 = add i32 %v0_100029c8, 24
  store i32 %v1_100029c8, i32* @r29, align 4
  br i1 %v4_100029c4, label %dec_label_pc_10002b00, label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002988, %dec_label_pc_100029b0
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268446180, i32* @lr, align 4
  %v2_100029e0 = call i32 @function_100089c8(i32 65535, i32 1)
  %v0_100029e4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100029e4 = trunc i32 %v0_100029e4 to i16
  %v2_100029e4 = load i32, i32* @r29, align 4
  %v3_100029e4 = add i32 %v2_100029e4, 2
  %v4_100029e4 = inttoptr i32 %v3_100029e4 to i16*
  store i16 %v1_100029e4, i16* %v4_100029e4, align 2
  %v1_100029e8 = load i32, i32* @r28, align 4
  %v2_100029e8 = load i32, i32* @r24, align 4
  %v3_100029e8 = add i32 %v2_100029e8, %v1_100029e8
  %v4_100029e8 = inttoptr i32 %v3_100029e8 to i32*
  store i32 %v2_100029e0, i32* %v4_100029e8, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446204, i32* @lr, align 4
  %v3_100029f8 = call i32 @function_1000866c(i32 2, i32 2, i32 17)
  store i32 %v3_100029f8, i32* %r3.global-to-local, align 4
  %v3_10002a00 = icmp eq i32 %v3_100029f8, -1
  %v1_10002a08 = load i32, i32* @r28, align 4
  %v2_10002a08 = load i32, i32* @r26, align 4
  %v3_10002a08 = add i32 %v2_10002a08, %v1_10002a08
  %v4_10002a08 = inttoptr i32 %v3_10002a08 to i32*
  store i32 %v3_100029f8, i32* %v4_10002a08, align 4
  br i1 %v3_10002a00, label %dec_label_pc_10002b48, label %dec_label_pc_10002a10

dec_label_pc_10002a10:                            ; preds = %dec_label_pc_100029d0
  %v0_10002a10 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002a10, i32* %stack_var_-88, align 4
  store i32 268446240, i32* @lr, align 4
  %v0_10002a1c = load i32, i32* %r3.global-to-local, align 4
  %v3_10002a1c = call i32 @function_10008438(i32 %v0_10002a1c, i32 %v2_10002ab0, i32 16)
  store i32 %v3_10002a1c, i32* %r3.global-to-local, align 4
  %v0_10002a20 = load i32, i32* @r29, align 4
  %v1_10002a20 = add i32 %v0_10002a20, 20
  %v2_10002a20 = inttoptr i32 %v1_10002a20 to i8*
  %v3_10002a20 = load i8, i8* %v2_10002a20, align 1
  %v2_10002a24 = icmp ugt i8 %v3_10002a20, 31
  br i1 %v2_10002a24, label %dec_label_pc_100029b0, label %dec_label_pc_10002a2c

dec_label_pc_10002a2c:                            ; preds = %dec_label_pc_10002a10
  %v1_10002a2c = add i32 %v0_10002a20, 16
  %v2_10002a2c = inttoptr i32 %v1_10002a2c to i32*
  %v3_10002a2c = load i32, i32* %v2_10002a2c, align 4
  store i32 %v3_10002a2c, i32* %r27.global-to-local, align 4
  %v0_10002a30 = call i32 @function_100048a8()
  store i32 %v0_10002a30, i32* %r3.global-to-local, align 4
  %v0_10002a34 = load i32, i32* @r29, align 4
  %v1_10002a34 = add i32 %v0_10002a34, 20
  %v2_10002a34 = inttoptr i32 %v1_10002a34 to i8*
  %v3_10002a34 = load i8, i8* %v2_10002a34, align 1
  %tmp = urem i8 %v3_10002a34, 64
  %v2_10002a38 = zext i8 %tmp to i32
  %v3_10002a38 = lshr i32 %v0_10002a30, %v2_10002a38
  %v0_10002a3c = load i32, i32* %r27.global-to-local, align 4
  %v2_10002a3c = add i32 %v3_10002a38, %v0_10002a3c
  store i32 %v2_10002a3c, i32* %r3.global-to-local, align 4
  %v2_10002a40 = add i32 %v0_10002a34, 4
  %v3_10002a40 = inttoptr i32 %v2_10002a40 to i32*
  store i32 %v2_10002a3c, i32* %v3_10002a40, align 4
  br label %dec_label_pc_100029b0

dec_label_pc_10002a48:                            ; preds = %dec_label_pc_10002ac4
  %v1_10002a48 = add i32 %v0_10002ad4, 16
  %v2_10002a48 = inttoptr i32 %v1_10002a48 to i32*
  %v3_10002a48 = load i32, i32* %v2_10002a48, align 4
  store i32 %v3_10002a48, i32* %r27.global-to-local, align 4
  %v0_10002a4c = call i32 @function_100048a8()
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v0_10002a50 = load i32, i32* @r29, align 4
  %v1_10002a50 = add i32 %v0_10002a50, 20
  %v2_10002a50 = inttoptr i32 %v1_10002a50 to i8*
  %v3_10002a50 = load i8, i8* %v2_10002a50, align 1
  %tmp39 = urem i8 %v3_10002a50, 64
  %v2_10002a5c = zext i8 %tmp39 to i32
  %v3_10002a5c = lshr i32 %v0_10002a4c, %v2_10002a5c
  %v0_10002a60 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002a60 = add i32 %v0_10002a60, %v3_10002a5c
  store i32 %v2_10002a60, i32* %r3.global-to-local, align 4
  %v2_10002a64 = add i32 %v0_10002a50, 4
  %v3_10002a64 = inttoptr i32 %v2_10002a64 to i32*
  store i32 %v2_10002a60, i32* %v3_10002a64, align 4
  %v0_10002a68 = load i32, i32* @r29, align 4
  %v1_10002a68 = add i32 %v0_10002a68, 24
  store i32 %v1_10002a68, i32* @r29, align 4
  %v0_10002a6c = load i32, i32* @r28, align 4
  %v1_10002a6c = load i32, i32* @r26, align 4
  %v2_10002a6c = add i32 %v1_10002a6c, %v0_10002a6c
  %v3_10002a6c = inttoptr i32 %v2_10002a6c to i32*
  %v4_10002a6c = load i32, i32* %v3_10002a6c, align 4
  store i32 %v4_10002a6c, i32* @r3, align 4
  %v1_10002a70 = add i32 %v0_10002a6c, 4
  store i32 %v1_10002a70, i32* @r28, align 4
  store i32 268446328, i32* @lr, align 4
  %v0_10002a74 = call i32 @function_1000846c()
  store i32 %v0_10002a74, i32* %r3.global-to-local, align 4
  %v0_10002a78 = load i32, i32* @r31, align 4
  %v1_10002a78 = load i32, i32* @r30, align 4
  %v4_10002a78 = icmp eq i32 %v0_10002a78, %v1_10002a78
  br i1 %v4_10002a78, label %dec_label_pc_10002b00, label %dec_label_pc_10002a80

dec_label_pc_10002a80:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a48, %dec_label_pc_10002988
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 268446356, i32* @lr, align 4
  %v2_10002a90 = call i32 @function_100089c8(i32 65535, i32 1)
  store i32 %v2_10002a90, i32* %r3.global-to-local, align 4
  %v1_10002a94 = load i32, i32* @r28, align 4
  %v2_10002a94 = load i32, i32* @r24, align 4
  %v3_10002a94 = add i32 %v2_10002a94, %v1_10002a94
  %v4_10002a94 = inttoptr i32 %v3_10002a94 to i32*
  store i32 %v2_10002a90, i32* %v4_10002a94, align 4
  %v0_10002a98 = call i32 @function_100048a8()
  %v1_10002a98 = trunc i32 %v0_10002a98 to i16
  %v3_10002a9c = load i32, i32* @r29, align 4
  %v4_10002a9c = add i32 %v3_10002a9c, 2
  %v5_10002a9c = inttoptr i32 %v4_10002a9c to i16*
  store i16 %v1_10002a98, i16* %v5_10002a9c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446384, i32* @lr, align 4
  %v3_10002aac = call i32 @function_1000866c(i32 2, i32 2, i32 17)
  store i32 %v3_10002aac, i32* %r3.global-to-local, align 4
  %v3_10002ab4 = icmp eq i32 %v3_10002aac, -1
  %v1_10002abc = load i32, i32* @r28, align 4
  %v2_10002abc = load i32, i32* @r26, align 4
  %v3_10002abc = add i32 %v2_10002abc, %v1_10002abc
  %v4_10002abc = inttoptr i32 %v3_10002abc to i32*
  store i32 %v3_10002aac, i32* %v4_10002abc, align 4
  br i1 %v3_10002ab4, label %dec_label_pc_10002b48, label %dec_label_pc_10002ac4

dec_label_pc_10002ac4:                            ; preds = %dec_label_pc_10002a80
  %v0_10002ac4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002ac4, i32* %stack_var_-88, align 4
  store i32 268446420, i32* @lr, align 4
  %v0_10002ad0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10002ad0 = call i32 @function_10008438(i32 %v0_10002ad0, i32 %v2_10002ab0, i32 16)
  store i32 %v3_10002ad0, i32* %r3.global-to-local, align 4
  %v0_10002ad4 = load i32, i32* @r29, align 4
  %v1_10002ad4 = add i32 %v0_10002ad4, 20
  %v2_10002ad4 = inttoptr i32 %v1_10002ad4 to i8*
  %v3_10002ad4 = load i8, i8* %v2_10002ad4, align 1
  %tmp35 = icmp ult i8 %v3_10002ad4, 32
  br i1 %tmp35, label %dec_label_pc_10002a48, label %dec_label_pc_10002ae0

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac4
  %v0_10002ae0 = load i32, i32* @r28, align 4
  %v1_10002ae0 = load i32, i32* @r26, align 4
  %v2_10002ae0 = add i32 %v1_10002ae0, %v0_10002ae0
  %v3_10002ae0 = inttoptr i32 %v2_10002ae0 to i32*
  %v4_10002ae0 = load i32, i32* %v3_10002ae0, align 4
  store i32 %v4_10002ae0, i32* @r3, align 4
  %v1_10002aec = add i32 %v0_10002ae0, 4
  store i32 %v1_10002aec, i32* @r28, align 4
  store i32 268446452, i32* @lr, align 4
  %v0_10002af0 = call i32 @function_1000846c()
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* @r31, align 4
  %v1_10002af4 = load i32, i32* @r30, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v0_10002af8 = load i32, i32* @r29, align 4
  %v1_10002af8 = add i32 %v0_10002af8, 24
  store i32 %v1_10002af8, i32* @r29, align 4
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002a80

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_100029b0, %dec_label_pc_10002ae0, %dec_label_pc_10002a48, %dec_label_pc_10002b38
  %v0_10002b00 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002b00 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002b00 = or i1 %v0_10002b00, %v1_10002b00
  br i1 %v2_10002b00, label %dec_label_pc_10002b38, label %dec_label_pc_10002b04

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002b00
  %v0_10002b04 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002b04 = icmp eq i32 %v0_10002b04, 0
  br i1 %v3_10002b04, label %dec_label_pc_10002b0c, label %dec_label_pc_10002ba4

dec_label_pc_10002b0c:                            ; preds = %dec_label_pc_10002b04
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002b14

dec_label_pc_10002b14:                            ; preds = %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge, %dec_label_pc_10002b0c
  %v0_10002b18 = phi i32 [ %v0_10002b30, %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge ], [ 0, %dec_label_pc_10002b0c ]
  %v0_10002b28 = phi i32 [ %v0_10002b14.pre, %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge ], [ 0, %dec_label_pc_10002b0c ]
  %v1_10002b14 = load i32, i32* @r26, align 4
  %v2_10002b14 = add i32 %v1_10002b14, %v0_10002b28
  %v3_10002b14 = inttoptr i32 %v2_10002b14 to i32*
  %v4_10002b14 = load i32, i32* %v3_10002b14, align 4
  store i32 %v4_10002b14, i32* %r3.global-to-local, align 4
  %v1_10002b18 = add i32 %v0_10002b18, 1
  store i32 %v1_10002b18, i32* %r28.global-to-local, align 4
  %v1_10002b1c = load i32, i32* @r24, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v0_10002b28
  %v3_10002b1c = inttoptr i32 %v2_10002b1c to i32*
  %v4_10002b1c = load i32, i32* %v3_10002b1c, align 4
  %v0_10002b20 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002b28 = add i32 %v0_10002b28, 4
  store i32 %v1_10002b28, i32* %r29.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v4_10002b2c = call i32 @function_100085b8(i32 %v4_10002b14, i32 %v4_10002b1c, i32 %v0_10002b20, i32 16384)
  store i32 %v4_10002b2c, i32* %r3.global-to-local, align 4
  %v0_10002b30 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b30 = load i32, i32* @r30, align 4
  %v4_10002b30 = icmp eq i32 %v0_10002b30, %v1_10002b30
  br i1 %v4_10002b30, label %dec_label_pc_10002b38, label %dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge

dec_label_pc_10002b14.dec_label_pc_10002b14_crit_edge: ; preds = %dec_label_pc_10002b14
  %v0_10002b14.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002b14

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_10002bb0, %dec_label_pc_10002b14, %dec_label_pc_10002b00, %dec_label_pc_10002980
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268446528, i32* @lr, align 4
  %v0_10002b3c = call i32 @function_10008038()
  store i32 %v0_10002b3c, i32* %r3.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002b40 = icmp slt i32 %v0_10002b40, %v0_10002b3c
  br i1 %v2_10002b40, label %dec_label_pc_10002b48, label %dec_label_pc_10002b00

dec_label_pc_10002b48:                            ; preds = %dec_label_pc_100029d0, %dec_label_pc_10002a80, %dec_label_pc_10002b38
  %v1_10002b5c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10002870)
  store i32 %v0_1000287c, i32* %r27.global-to-local, align 4
  store i32 %v0_100028b0, i32* %r28.global-to-local, align 4
  store i32 %v0_100028b8, i32* %r29.global-to-local, align 4
  %v0_10002b94 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b94

dec_label_pc_10002b98:                            ; preds = %dec_label_pc_10002868
  %v0_10002b98 = call i32 @function_100048a8()
  store i32 %v0_10002b98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002980

dec_label_pc_10002ba4:                            ; preds = %dec_label_pc_10002b04
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002bb0

dec_label_pc_10002bb0:                            ; preds = %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge, %dec_label_pc_10002ba4
  %v0_10002bb8 = phi i32 [ %v0_10002be0, %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge ], [ 0, %dec_label_pc_10002ba4 ]
  %v0_10002bb0 = phi i32 [ %v0_10002bb0.pre, %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge ], [ 0, %dec_label_pc_10002ba4 ]
  %v1_10002bb0 = load i32, i32* @r24, align 4
  %v2_10002bb0 = add i32 %v1_10002bb0, %v0_10002bb0
  %v3_10002bb0 = inttoptr i32 %v2_10002bb0 to i32*
  %v4_10002bb0 = load i32, i32* %v3_10002bb0, align 4
  store i32 %v4_10002bb0, i32* @r29, align 4
  %v0_10002bb4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002bb4, i32* @r4, align 4
  %v1_10002bb8 = add i32 %v0_10002bb8, 1
  store i32 %v1_10002bb8, i32* @r31, align 4
  store i32 %v4_10002bb0, i32* @r3, align 4
  store i32 268446660, i32* @lr, align 4
  %v0_10002bc0 = call i32 @function_10004968()
  store i32 %v0_10002bc0, i32* %r3.global-to-local, align 4
  %v0_10002bc4 = load i32, i32* @r27, align 4
  %v1_10002bc4 = load i32, i32* @r29, align 4
  %v2_10002bc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10002bc4 = trunc i32 %v0_10002bc4 to i8
  %v4_10002bc4 = add i32 %v2_10002bc4, %v1_10002bc4
  %v5_10002bc4 = inttoptr i32 %v4_10002bc4 to i8*
  store i8 %v3_10002bc4, i8* %v5_10002bc4, align 1
  %v0_10002bc8 = load i32, i32* @r29, align 4
  %v0_10002bcc = load i32, i32* %r23.global-to-local, align 4
  %v0_10002bd0 = load i32, i32* @r28, align 4
  %v1_10002bd0 = load i32, i32* @r26, align 4
  %v2_10002bd0 = add i32 %v1_10002bd0, %v0_10002bd0
  %v3_10002bd0 = inttoptr i32 %v2_10002bd0 to i32*
  %v4_10002bd0 = load i32, i32* %v3_10002bd0, align 4
  store i32 %v4_10002bd0, i32* %r3.global-to-local, align 4
  %v1_10002bd8 = add i32 %v0_10002bd0, 4
  store i32 %v1_10002bd8, i32* @r28, align 4
  store i32 268446688, i32* @lr, align 4
  %v4_10002bdc = call i32 @function_100085b8(i32 %v4_10002bd0, i32 %v0_10002bc8, i32 %v0_10002bcc, i32 16384)
  store i32 %v4_10002bdc, i32* %r3.global-to-local, align 4
  %v0_10002be0 = load i32, i32* @r31, align 4
  %v1_10002be0 = load i32, i32* @r30, align 4
  %v4_10002be0 = icmp eq i32 %v0_10002be0, %v1_10002be0
  br i1 %v4_10002be0, label %dec_label_pc_10002b38, label %dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge

dec_label_pc_10002bb0.dec_label_pc_10002bb0_crit_edge: ; preds = %dec_label_pc_10002bb0
  %v0_10002bb0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10002bb0

; uselistorder directives
  uselistorder i32 %v0_10002be0, { 1, 0 }
  uselistorder i32 %v0_10002bd0, { 1, 0 }
  uselistorder i32 %v0_10002b30, { 1, 0 }
  uselistorder i32 %v0_10002b28, { 2, 0, 1 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v0_10002ad4, { 1, 0 }
  uselistorder i32 %v0_10002a6c, { 1, 0 }
  uselistorder i32 %v0_100029b0, { 1, 0 }
  uselistorder i32 %v2_10002ab0, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 24, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 19, 20, 22, 23, 25, 26, 27, 21, 28, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10002b48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002b00, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100029d0, { 1, 0 }
  uselistorder label %dec_label_pc_100029b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002980, { 1, 0 }
}

define i32 @function_10002bec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002bec:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr2_lt.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002bec = load i32, i32* @lr, align 4
  store i32 %v0_10002bec, i32* %r0.global-to-local, align 4
  %v0_10002bf4 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r18.global-to-local, align 4
  %v0_10002c00 = load i32, i32* @r27, align 4
  store i32 %v0_10002bf4, i32* %r27.global-to-local, align 4
  %v0_10002c08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002c3c = load i32, i32* @r25, align 4
  %v0_10002c40 = load i32, i32* @r26, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c4c = load i32, i32* @r29, align 4
  store i32 %arg5, i32* @r29, align 4
  %v0_10002c54 = load i32, i32* @r30, align 4
  store i32 268446832, i32* @lr, align 4
  %v2_10002c6c = call i32 @function_100089c8(i32 %arg2, i32 4)
  store i32 %v2_10002c6c, i32* %r19.global-to-local, align 4
  %v0_10002c74 = load i32, i32* @r29, align 4
  %v0_10002c80 = load i32, i32* @r28, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c74 to i32*
  %v5_10002c84 = call i32 @function_10000300(i32 %v0_10002c80, i32* %v4_10002c84, i32 2, i32 0)
  %v0_10002c94 = load i32, i32* @r29, align 4
  %v1_10002c98 = urem i32 %v5_10002c84, 256
  store i32 %v1_10002c98, i32* %r15.global-to-local, align 4
  %v0_10002c9c = load i32, i32* @r28, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c94 to i32*
  %v5_10002ca0 = call i32 @function_10000300(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 3, i32 65535)
  %v0_10002ca4 = load i32, i32* @r29, align 4
  store i32 %v5_10002ca0, i32* %r23.global-to-local, align 4
  %v0_10002cb4 = load i32, i32* @r28, align 4
  store i32 %v0_10002cb4, i32* %r3.global-to-local, align 4
  store i32 268446908, i32* @lr, align 4
  %v4_10002cb8 = inttoptr i32 %v0_10002ca4 to i32*
  %v5_10002cb8 = call i32 @function_10000300(i32 %v0_10002cb4, i32* %v4_10002cb8, i32 4, i32 64)
  %v0_10002cbc = load i32, i32* @r29, align 4
  %v1_10002cc8 = urem i32 %v5_10002cb8, 256
  store i32 %v1_10002cc8, i32* %r16.global-to-local, align 4
  %v0_10002ccc = load i32, i32* @r28, align 4
  store i32 %v0_10002ccc, i32* %r3.global-to-local, align 4
  store i32 268446932, i32* @lr, align 4
  %v4_10002cd0 = inttoptr i32 %v0_10002cbc to i32*
  %v5_10002cd0 = call i32 @function_10000300(i32 %v0_10002ccc, i32* %v4_10002cd0, i32 5, i32 0)
  %v1_10002cd8 = urem i32 %v5_10002cd0, 256
  %v0_10002ce8 = load i32, i32* @r29, align 4
  %v0_10002cec = load i32, i32* @r28, align 4
  store i32 %v0_10002cec, i32* %r3.global-to-local, align 4
  store i32 268446964, i32* @lr, align 4
  %v4_10002cf0 = inttoptr i32 %v0_10002ce8 to i32*
  %v5_10002cf0 = call i32 @function_10000300(i32 %v0_10002cec, i32* %v4_10002cf0, i32 6, i32 65535)
  %v0_10002cf8 = load i32, i32* @r29, align 4
  store i32 %v5_10002cf0, i32* %r25.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r28, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_10000300(i32 %v0_10002d08, i32* %v4_10002d0c, i32 7, i32 65535)
  %v0_10002d10 = load i32, i32* @r29, align 4
  store i32 %v5_10002d0c, i32* %r26.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r28, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_10000300(i32 %v0_10002d20, i32* %v4_10002d24, i32 0, i32 512)
  %v0_10002d28 = load i32, i32* @r29, align 4
  store i32 %v5_10002d24, i32* %r30.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r28, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_10000300(i32 %v0_10002d38, i32* %v4_10002d3c, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002d44 = load i32, i32* @global_var_1001a998.12, align 4
  %v1_10002d48 = urem i32 %v5_10002d3c, 256
  %v0_10002d4c = load i32, i32* @r29, align 4
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v0_10002d58, i32* %r3.global-to-local, align 4
  store i32 268447072, i32* @lr, align 4
  %v4_10002d5c = inttoptr i32 %v0_10002d4c to i32*
  %v5_10002d5c = call i32 @function_10000300(i32 %v0_10002d58, i32* %v4_10002d5c, i32 24, i32 %v3_10002d44)
  store i32 %v5_10002d5c, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447084, i32* @lr, align 4
  %v0_10002d68 = call i32 @function_10008038()
  %v1_10002d70 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002d70 = add i32 %v1_10002d70, %v0_10002d68
  store i32 %v2_10002d70, i32* %r14.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447104, i32* @lr, align 4
  %v3_10002d7c = call i32 @function_1000866c(i32 2, i32 3, i32 17)
  store i32 %v3_10002d7c, i32* %r3.global-to-local, align 4
  %v3_10002d80 = icmp eq i32 %v3_10002d7c, -1
  store i32 %v3_10002d7c, i32* %r20.global-to-local, align 4
  br i1 %v3_10002d80, label %dec_label_pc_10002f70, label %dec_label_pc_10002d8c

dec_label_pc_10002d8c:                            ; preds = %dec_label_pc_10002bec
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002d98 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268447144, i32* @lr, align 4
  %v4_10002da4 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_10002d98, i32 4)
  store i32 %v4_10002da4, i32* %r3.global-to-local, align 4
  %v3_10002da8 = icmp eq i32 %v4_10002da4, -1
  br i1 %v3_10002da8, label %dec_label_pc_10003060, label %dec_label_pc_10002db0

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002d8c
  %v0_10002db0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002db0 = urem i32 %v0_10002db0, 65536
  store i32 %v1_10002db0, i32* @r24, align 4
  %v0_10002db4 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002db4 = urem i32 %v0_10002db4, 65536
  store i32 %v1_10002db4, i32* %r21.global-to-local, align 4
  %v2_10002db8 = icmp ugt i32 %v1_10002db0, 1460
  %v0_10002dbc = load i32, i32* %r25.global-to-local, align 4
  %v1_10002dbc = urem i32 %v0_10002dbc, 65536
  store i32 %v1_10002dbc, i32* %r22.global-to-local, align 4
  %v0_10002dc0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002dc0 = urem i32 %v0_10002dc0, 65536
  store i32 %v1_10002dc0, i32* %r23.global-to-local, align 4
  br i1 %v2_10002db8, label %dec_label_pc_10003058, label %dec_label_pc_10002dc8

dec_label_pc_10002dc8:                            ; preds = %dec_label_pc_10002db0, %dec_label_pc_10003058
  %v0_10002de8 = phi i32 [ %v1_10002db0, %dec_label_pc_10002db0 ], [ 1460, %dec_label_pc_10003058 ]
  %v0_10002dc8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002dc8 = icmp slt i32 %v0_10002dc8, 0
  %v3_10002dc8 = icmp eq i32 %v0_10002dc8, 0
  store i1 %v1_10002dc8, i1* %cr2_lt.global-to-local, align 1
  store i1 %v3_10002dc8, i1* %cr2_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp30 = icmp slt i32 %v0_10002dc8, 1
  br i1 %tmp30, label %dec_label_pc_10002e80.preheader, label %dec_label_pc_10002dd8

dec_label_pc_10002dd8:                            ; preds = %dec_label_pc_10002dc8
  %v1_10002ddc = add nuw nsw i32 %v0_10002de8, 8
  store i32 %v1_10002ddc, i32* %r9.global-to-local, align 4
  %v1_10002de0 = urem i32 %v1_10002ddc, 65536
  store i32 %v1_10002de0, i32* %r26.global-to-local, align 4
  %v3_10002de4 = icmp eq i32 %v1_10002cd8, 0
  %v1_10002de8 = add nuw nsw i32 %v0_10002de8, 28
  store i32 %v1_10002de8, i32* %r0.global-to-local, align 4
  %v1_10002dec = urem i32 %v1_10002de8, 65536
  store i32 %v1_10002dec, i32* %r25.global-to-local, align 4
  br i1 %v3_10002de4, label %dec_label_pc_10002df4, label %dec_label_pc_1000306c

dec_label_pc_10002df4:                            ; preds = %dec_label_pc_10002dd8
  store i32 0, i32* @r29, align 4
  store i32 4, i32* %r27.global-to-local, align 4
  store i32 5, i32* %r30.global-to-local, align 4
  store i32 17, i32* @r28, align 4
  br label %dec_label_pc_10002e04

dec_label_pc_10002e04:                            ; preds = %dec_label_pc_10002e04, %dec_label_pc_10002df4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447248, i32* @lr, align 4
  %v2_10002e0c = call i32 @function_100089c8(i32 1510, i32 1)
  store i32 %v2_10002e0c, i32* %r3.global-to-local, align 4
  %v3_10002e10 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002e10, i32* %r9.global-to-local, align 4
  %v0_10002e14 = load i32, i32* @r29, align 4
  %v1_10002e14 = mul i32 %v0_10002e14, 4
  store i32 %v1_10002e14, i32* %r0.global-to-local, align 4
  %v1_10002e18 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002e18 = add i32 %v1_10002e18, %v1_10002e14
  %v4_10002e18 = inttoptr i32 %v3_10002e18 to i32*
  store i32 %v2_10002e0c, i32* %v4_10002e18, align 4
  %v0_10002e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e1c = mul i32 %v0_10002e1c, 4
  store i32 %v1_10002e1c, i32* %r9.global-to-local, align 4
  %v1_10002e20 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002e20 = add i32 %v1_10002e20, %v1_10002e1c
  %v3_10002e20 = inttoptr i32 %v2_10002e20 to i32*
  %v4_10002e20 = load i32, i32* %v3_10002e20, align 4
  store i32 %v4_10002e20, i32* %r11.global-to-local, align 4
  %v1_10002e24 = inttoptr i32 %v4_10002e20 to i32*
  %v2_10002e24 = load i32, i32* %v1_10002e24, align 4
  store i32 %v2_10002e24, i32* %r0.global-to-local, align 4
  %v1_10002e28 = add i32 %v4_10002e20, 20
  store i32 %v1_10002e28, i32* %r10.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e2c = trunc i32 %v0_10002e2c to i8
  %v3_10002e2c = add i32 %v4_10002e20, 8
  %v4_10002e2c = inttoptr i32 %v3_10002e2c to i8*
  store i8 %v1_10002e2c, i8* %v4_10002e2c, align 1
  %v1_10002e30 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e30, i32* %r0.global-to-local, align 4
  %v0_10002e34 = load i32, i32* @r28, align 4
  %v1_10002e34 = trunc i32 %v0_10002e34 to i8
  %v2_10002e34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e34 = add i32 %v2_10002e34, 9
  %v4_10002e34 = inttoptr i32 %v3_10002e34 to i8*
  store i8 %v1_10002e34, i8* %v4_10002e34, align 1
  %v1_10002e38 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002e38, i32* %r0.global-to-local, align 4
  %v0_10002e3c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e3c = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e3c = add i32 %v1_10002e3c, 12
  %v3_10002e3c = inttoptr i32 %v2_10002e3c to i32*
  store i32 %v0_10002e3c, i32* %v3_10002e3c, align 4
  %v1_10002e40 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e40 = inttoptr i32 %v1_10002e40 to i32*
  store i32 %v1_10002e38, i32* %v2_10002e40, align 4
  %v0_10002e44 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002e44 = trunc i32 %v0_10002e44 to i8
  %v2_10002e44 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e44 = add i32 %v2_10002e44, 1
  %v4_10002e44 = inttoptr i32 %v3_10002e44 to i8*
  store i8 %v1_10002e44, i8* %v4_10002e44, align 1
  %v0_10002e48 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002e48 = trunc i32 %v0_10002e48 to i16
  %v2_10002e48 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e48 = add i32 %v2_10002e48, 2
  %v4_10002e48 = inttoptr i32 %v3_10002e48 to i16*
  store i16 %v1_10002e48, i16* %v4_10002e48, align 2
  %v3_10002e4c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002e4c, i32* %r9.global-to-local, align 4
  %v0_10002e50 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e50 = trunc i32 %v0_10002e50 to i16
  %v2_10002e50 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e50 = add i32 %v2_10002e50, 4
  %v4_10002e50 = inttoptr i32 %v3_10002e50 to i16*
  store i16 %v1_10002e50, i16* %v4_10002e50, align 2
  %v0_10002e54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e54 = add i32 %v0_10002e54, 1
  store i32 %v1_10002e54, i32* @r29, align 4
  %v1_10002e58 = mul i32 %v0_10002e54, 24
  store i32 %v1_10002e58, i32* %r9.global-to-local, align 4
  %v1_10002e5c = load i32, i32* %r18.global-to-local, align 4
  %v2_10002e5c = icmp slt i32 %v1_10002e54, %v1_10002e5c
  %v0_10002e60 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e60 = trunc i32 %v0_10002e60 to i16
  %v2_10002e60 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002e60 = add i32 %v2_10002e60, 20
  %v4_10002e60 = inttoptr i32 %v3_10002e60 to i16*
  store i16 %v1_10002e60, i16* %v4_10002e60, align 2
  %v0_10002e64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e64 = load i32, i32* @r31, align 4
  %v2_10002e64 = add i32 %v1_10002e64, %v0_10002e64
  store i32 %v2_10002e64, i32* %r9.global-to-local, align 4
  %v0_10002e68 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002e68 = trunc i32 %v0_10002e68 to i16
  %v2_10002e68 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002e68 = add i32 %v2_10002e68, 4
  %v4_10002e68 = inttoptr i32 %v3_10002e68 to i16*
  store i16 %v1_10002e68, i16* %v4_10002e68, align 2
  %v0_10002e6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e6c = add i32 %v0_10002e6c, 16
  %v2_10002e6c = inttoptr i32 %v1_10002e6c to i32*
  %v3_10002e6c = load i32, i32* %v2_10002e6c, align 4
  store i32 %v3_10002e6c, i32* %r0.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v2_10002e70 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002e70 = add i32 %v2_10002e70, 2
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v0_10002e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002e74 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002e74 = add i32 %v1_10002e74, 16
  %v3_10002e74 = inttoptr i32 %v2_10002e74 to i32*
  store i32 %v0_10002e74, i32* %v3_10002e74, align 4
  %v0_10002e78 = load i32, i32* @r29, align 4
  store i32 %v0_10002e78, i32* %stack_var_-104, align 4
  br i1 %v2_10002e5c, label %dec_label_pc_10002e04, label %dec_label_pc_10002e80.preheader

dec_label_pc_10002e80.preheader:                  ; preds = %dec_label_pc_1000307c, %dec_label_pc_10002e04, %dec_label_pc_10002dc8
  %v3_10002e9c = icmp eq i32 %v1_10002d48, 0
  br label %dec_label_pc_10002e80

dec_label_pc_10002e80:                            ; preds = %dec_label_pc_10002e80.preheader, %dec_label_pc_10002f60
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002e88 = load i1, i1* %cr2_eq.global-to-local, align 1
  %v1_10002e88 = load i1, i1* %cr2_lt.global-to-local, align 1
  %v2_10002e88 = or i1 %v0_10002e88, %v1_10002e88
  br i1 %v2_10002e88, label %dec_label_pc_10002f60, label %dec_label_pc_10002e8c

dec_label_pc_10002e8c:                            ; preds = %dec_label_pc_10002e80
  store i32 %v1_10002d48, i32* %r0.global-to-local, align 4
  %v0_10002e90 = load i32, i32* %r17.global-to-local, align 4
  %v3_10002e90 = icmp eq i32 %v0_10002e90, -1
  store i1 %v3_10002e90, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e94 = load i32, i32* @r24, align 4
  %v1_10002e94 = add i32 %v0_10002e94, 8
  store i32 %v1_10002e94, i32* @r26, align 4
  %v1_10002e98 = add i32 %v0_10002e94, 28
  store i32 %v1_10002e98, i32* @r30, align 4
  store i1 %v3_10002e9c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002ef0, %dec_label_pc_10002e8c
  %v0_10002ea8 = phi i32 [ %v1_10002f50, %dec_label_pc_10002ef0 ], [ 0, %dec_label_pc_10002e8c ]
  %v1_10002ea8 = mul i32 %v0_10002ea8, 24
  store i32 %v1_10002ea8, i32* %r0.global-to-local, align 4
  %v1_10002eac = mul i32 %v0_10002ea8, 4
  store i32 %v1_10002eac, i32* %r11.global-to-local, align 4
  %v1_10002eb0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002eb0 = add i32 %v1_10002eb0, %v1_10002eac
  %v3_10002eb0 = inttoptr i32 %v2_10002eb0 to i32*
  %v4_10002eb0 = load i32, i32* %v3_10002eb0, align 4
  store i32 %v4_10002eb0, i32* @r28, align 4
  %v1_10002eb4 = load i32, i32* @r31, align 4
  %v2_10002eb4 = add i32 %v1_10002eb4, %v1_10002ea8
  store i32 %v2_10002eb4, i32* %r10.global-to-local, align 4
  %v1_10002eb8 = add i32 %v2_10002eb4, 20
  %v2_10002eb8 = inttoptr i32 %v1_10002eb8 to i8*
  %v3_10002eb8 = load i8, i8* %v2_10002eb8, align 1
  %v4_10002eb8 = zext i8 %v3_10002eb8 to i32
  store i32 %v4_10002eb8, i32* %r9.global-to-local, align 4
  %v1_10002ebc = add i32 %v4_10002eb0, 20
  store i32 %v1_10002ebc, i32* @r27, align 4
  %tmp31 = icmp ult i8 %v3_10002eb8, 32
  br i1 %tmp31, label %dec_label_pc_10002fd0, label %dec_label_pc_10002ec8

dec_label_pc_10002ec8:                            ; preds = %dec_label_pc_10002ea8
  %v0_10002ec8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ec8, label %dec_label_pc_10002ff8, label %dec_label_pc_10002ecc

dec_label_pc_10002ecc:                            ; preds = %dec_label_pc_10002fd0, %dec_label_pc_10002ec8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002ed4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002ed4 = icmp eq i32 %v0_10002ed4, 65535
  br i1 %v4_10002ed4, label %dec_label_pc_10003010, label %dec_label_pc_10002edc

dec_label_pc_10002edc:                            ; preds = %dec_label_pc_10002ff8, %dec_label_pc_10002ecc
  %v1_10002edc = phi i32 [ %v1_10003008, %dec_label_pc_10002ff8 ], [ 65535, %dec_label_pc_10002ecc ]
  %v0_10002edc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002edc = icmp eq i32 %v0_10002edc, %v1_10002edc
  br i1 %v4_10002edc, label %dec_label_pc_10003020, label %dec_label_pc_10002ee4

dec_label_pc_10002ee4:                            ; preds = %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge, %dec_label_pc_10002edc
  %v1_10002ee4 = phi i32 [ %v1_10002ee4.pre, %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge ], [ %v1_10002edc, %dec_label_pc_10002edc ]
  %v0_10002ee4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002ee4 = icmp eq i32 %v0_10002ee4, %v1_10002ee4
  br i1 %v4_10002ee4, label %dec_label_pc_10003030, label %dec_label_pc_10002eec

dec_label_pc_10002eec:                            ; preds = %dec_label_pc_10003020, %dec_label_pc_10002ee4
  %v0_10002eec = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002eec, label %dec_label_pc_10002ef0, label %dec_label_pc_1000303c

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003030, %dec_label_pc_1000303c
  %v0_10002ef0 = load i32, i32* @r25, align 4
  %v1_10002ef0 = trunc i32 %v0_10002ef0 to i16
  %v2_10002ef0 = load i32, i32* @r28, align 4
  %v3_10002ef0 = add i32 %v2_10002ef0, 10
  %v4_10002ef0 = inttoptr i32 %v3_10002ef0 to i16*
  store i16 %v1_10002ef0, i16* %v4_10002ef0, align 2
  %v0_10002ef8 = load i32, i32* @r28, align 4
  store i32 %v0_10002ef8, i32* @r3, align 4
  %v2_10002efc = call i32 @function_10003ca8(i32 %v0_10002ef8, i32 20)
  %v3_10002efc = trunc i32 %v2_10002efc to i16
  %v0_10002f00 = load i32, i32* @r27, align 4
  store i32 %v0_10002f00, i32* @r4, align 4
  %v3_10002f04 = load i32, i32* @r28, align 4
  %v4_10002f04 = add i32 %v3_10002f04, 10
  %v5_10002f04 = inttoptr i32 %v4_10002f04 to i16*
  store i16 %v3_10002efc, i16* %v5_10002f04, align 2
  %v0_10002f08 = load i32, i32* @r26, align 4
  %v0_10002f0c = load i32, i32* @r25, align 4
  %v1_10002f0c = trunc i32 %v0_10002f0c to i16
  %v2_10002f0c = load i32, i32* @r27, align 4
  %v3_10002f0c = add i32 %v2_10002f0c, 6
  %v4_10002f0c = inttoptr i32 %v3_10002f0c to i16*
  store i16 %v1_10002f0c, i16* %v4_10002f0c, align 2
  %v0_10002f10 = load i32, i32* @r28, align 4
  store i32 %v0_10002f10, i32* %r3.global-to-local, align 4
  %v0_10002f14 = load i32, i32* @r27, align 4
  %v1_10002f14 = add i32 %v0_10002f14, 4
  %v2_10002f14 = inttoptr i32 %v1_10002f14 to i16*
  %v3_10002f14 = load i16, i16* %v2_10002f14, align 2
  %v4_10002f14 = zext i16 %v3_10002f14 to i32
  %v4_10002f18 = call i32 @function_10003d0c(i32 %v0_10002f10, i32 %v0_10002f00, i32 %v4_10002f14, i32 %v0_10002f08)
  %v5_10002f18 = trunc i32 %v4_10002f18 to i16
  store i32 %v4_10002f18, i32* %r3.global-to-local, align 4
  %v3_10002f1c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002f1c, i32* %r7.global-to-local, align 4
  %v0_10002f20 = load i32, i32* @r27, align 4
  %v1_10002f20 = add i32 %v0_10002f20, 2
  %v2_10002f20 = inttoptr i32 %v1_10002f20 to i16*
  %v3_10002f20 = load i16, i16* %v2_10002f20, align 2
  %v4_10002f20 = zext i16 %v3_10002f20 to i32
  store i32 %v4_10002f20, i32* %r0.global-to-local, align 4
  %v0_10002f24 = load i32, i32* @r28, align 4
  %v1_10002f28 = mul i32 %v3_10002f1c, 24
  store i32 %v1_10002f28, i32* %r7.global-to-local, align 4
  %v4_10002f2c = add i32 %v0_10002f20, 6
  %v5_10002f2c = inttoptr i32 %v4_10002f2c to i16*
  store i16 %v5_10002f18, i16* %v5_10002f2c, align 2
  %v0_10002f30 = load i32, i32* @r30, align 4
  %v0_10002f34 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10002f34, i32* %r3.global-to-local, align 4
  %v0_10002f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002f38 = load i32, i32* @r31, align 4
  %v2_10002f38 = add i32 %v1_10002f38, %v0_10002f38
  store i32 %v2_10002f38, i32* %r7.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f40 = trunc i32 %v0_10002f40 to i16
  %v3_10002f40 = add i32 %v2_10002f38, 2
  %v4_10002f40 = inttoptr i32 %v3_10002f40 to i16*
  store i16 %v1_10002f40, i16* %v4_10002f40, align 2
  store i32 268447564, i32* @lr, align 4
  %v6_10002f48 = call i32 @function_100085f0(i32 %v0_10002f34, i32 %v0_10002f24, i32 %v0_10002f30, i32 16384, i32 %v2_10002f38, i32 16)
  store i32 %v6_10002f48, i32* %r3.global-to-local, align 4
  %v3_10002f4c = load i32, i32* %stack_var_-104, align 4
  %v1_10002f50 = add i32 %v3_10002f4c, 1
  store i32 %v1_10002f50, i32* %r9.global-to-local, align 4
  %v1_10002f54 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002f54 = icmp slt i32 %v1_10002f50, %v1_10002f54
  store i32 %v1_10002f50, i32* %stack_var_-104, align 4
  br i1 %v2_10002f54, label %dec_label_pc_10002ea8, label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002ef0, %dec_label_pc_10002e80
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447592, i32* @lr, align 4
  %v0_10002f64 = call i32 @function_10008038()
  store i32 %v0_10002f64, i32* %r3.global-to-local, align 4
  %v0_10002f68 = load i32, i32* %r14.global-to-local, align 4
  %v2_10002f68 = icmp slt i32 %v0_10002f68, %v0_10002f64
  br i1 %v2_10002f68, label %dec_label_pc_10002f70, label %dec_label_pc_10002e80

dec_label_pc_10002f70:                            ; preds = %dec_label_pc_10002f60, %dec_label_pc_10002bec, %dec_label_pc_10003060
  store i32 %v0_10002c08, i32* %r0.global-to-local, align 4
  %v1_10002f84 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bf4)
  store i32 %v0_10002c3c, i32* %r25.global-to-local, align 4
  store i32 %v0_10002c40, i32* %r26.global-to-local, align 4
  store i32 %v0_10002c00, i32* %r27.global-to-local, align 4
  store i32 %v0_10002c4c, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c54, i32* %r30.global-to-local, align 4
  %v0_10002fcc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fcc

dec_label_pc_10002fd0:                            ; preds = %dec_label_pc_10002ea8
  %v1_10002fd0 = add i32 %v2_10002eb4, 16
  %v2_10002fd0 = inttoptr i32 %v1_10002fd0 to i32*
  %v3_10002fd0 = load i32, i32* %v2_10002fd0, align 4
  store i32 %v3_10002fd0, i32* %r29.global-to-local, align 4
  %v0_10002fd4 = call i32 @function_100048a8()
  store i32 %v0_10002fd4, i32* %r3.global-to-local, align 4
  %v3_10002fd8 = load i32, i32* %stack_var_-104, align 4
  %v1_10002fdc = mul i32 %v3_10002fd8, 24
  %v1_10002fe0 = load i32, i32* @r31, align 4
  %v2_10002fe0 = add i32 %v1_10002fe0, %v1_10002fdc
  store i32 %v2_10002fe0, i32* %r9.global-to-local, align 4
  %v1_10002fe4 = add i32 %v2_10002fe0, 20
  %v2_10002fe4 = inttoptr i32 %v1_10002fe4 to i8*
  %v3_10002fe4 = load i8, i8* %v2_10002fe4, align 1
  %v4_10002fe4 = zext i8 %v3_10002fe4 to i32
  store i32 %v4_10002fe4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002fe4, 64
  %v2_10002fe8 = zext i8 %tmp to i32
  %v3_10002fe8 = lshr i32 %v0_10002fd4, %v2_10002fe8
  store i32 %v3_10002fe8, i32* %r3.global-to-local, align 4
  %v0_10002fec = load i32, i32* %r29.global-to-local, align 4
  %v2_10002fec = add i32 %v3_10002fe8, %v0_10002fec
  store i32 %v2_10002fec, i32* %r29.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* @r28, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 16
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v2_10002fec, i32* %v3_10002ff0, align 4
  %v0_10002ff4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ff4, label %dec_label_pc_10002ff8, label %dec_label_pc_10002ecc

dec_label_pc_10002ff8:                            ; preds = %dec_label_pc_10002fd0, %dec_label_pc_10002ec8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002ffc = call i32 @function_100048a8()
  store i32 %v0_10002ffc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10003004 = load i32, i32* @r28, align 4
  %v2_10003004 = add i32 %v1_10003004, 12
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  store i32 %v0_10002ffc, i32* %v3_10003004, align 4
  %v0_10003008 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003008 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003008 = icmp eq i32 %v0_10003008, %v1_10003008
  br i1 %v4_10003008, label %dec_label_pc_10003010, label %dec_label_pc_10002edc

dec_label_pc_10003010:                            ; preds = %dec_label_pc_10002ff8, %dec_label_pc_10002ecc
  %v0_10003010 = call i32 @function_100048a8()
  %v1_10003010 = trunc i32 %v0_10003010 to i16
  store i32 %v0_10003010, i32* %r3.global-to-local, align 4
  %v0_10003014 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003014 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003014 = icmp eq i32 %v0_10003014, %v1_10003014
  %v3_10003018 = load i32, i32* @r28, align 4
  %v4_10003018 = add i32 %v3_10003018, 4
  %v5_10003018 = inttoptr i32 %v4_10003018 to i16*
  store i16 %v1_10003010, i16* %v5_10003018, align 2
  br i1 %v4_10003014, label %dec_label_pc_10003020, label %dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge

dec_label_pc_10003010.dec_label_pc_10002ee4_crit_edge: ; preds = %dec_label_pc_10003010
  %v1_10002ee4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002ee4

dec_label_pc_10003020:                            ; preds = %dec_label_pc_10003010, %dec_label_pc_10002edc
  %v0_10003020 = call i32 @function_100048a8()
  %v1_10003020 = trunc i32 %v0_10003020 to i16
  store i32 %v0_10003020, i32* %r3.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003024 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003024 = icmp eq i32 %v0_10003024, %v1_10003024
  %v3_10003028 = load i32, i32* @r28, align 4
  %v4_10003028 = add i32 %v3_10003028, 20
  %v5_10003028 = inttoptr i32 %v4_10003028 to i16*
  store i16 %v1_10003020, i16* %v5_10003028, align 2
  br i1 %v4_10003024, label %dec_label_pc_10003030, label %dec_label_pc_10002eec

dec_label_pc_10003030:                            ; preds = %dec_label_pc_10003020, %dec_label_pc_10002ee4
  %v0_10003030 = call i32 @function_100048a8()
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  store i32 %v0_10003030, i32* %r3.global-to-local, align 4
  %v3_10003034 = load i32, i32* @r27, align 4
  %v4_10003034 = add i32 %v3_10003034, 2
  %v5_10003034 = inttoptr i32 %v4_10003034 to i16*
  store i16 %v1_10003030, i16* %v5_10003034, align 2
  %v0_10003038 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003038, label %dec_label_pc_10002ef0, label %dec_label_pc_1000303c

dec_label_pc_1000303c:                            ; preds = %dec_label_pc_10002eec, %dec_label_pc_10003030
  %v0_1000303c = load i32, i32* @r28, align 4
  %v1_1000303c = add i32 %v0_1000303c, 28
  store i32 %v1_1000303c, i32* @r29, align 4
  %v0_10003040 = load i32, i32* @r24, align 4
  store i32 %v0_10003040, i32* @r4, align 4
  store i32 %v1_1000303c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000304c.24 to i32), i32* @lr, align 4
  %v0_10003048 = call i32 @function_10004968()
  store i32 %v0_10003048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10003050 = load i32, i32* @r29, align 4
  %v2_10003050 = load i32, i32* @r24, align 4
  %v4_10003050 = add i32 %v2_10003050, %v1_10003050
  %v5_10003050 = inttoptr i32 %v4_10003050 to i8*
  store i8 0, i8* %v5_10003050, align 1
  br label %dec_label_pc_10002ef0

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10002db0
  store i32 1460, i32* @r24, align 4
  br label %dec_label_pc_10002dc8

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002d8c
  %v0_10003060 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10003060, i32* %r3.global-to-local, align 4
  store i32 268447848, i32* @lr, align 4
  %v0_10003064 = call i32 @function_10007cb0()
  store i32 %v0_10003064, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f70

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10002dd8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 16384, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_1000307c, %dec_label_pc_1000306c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447880, i32* @lr, align 4
  %v2_10003084 = call i32 @function_100089c8(i32 1510, i32 1)
  store i32 %v2_10003084, i32* %r3.global-to-local, align 4
  %v3_10003088 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003088, i32* %r9.global-to-local, align 4
  %v0_1000308c = load i32, i32* @r30, align 4
  %v1_1000308c = mul i32 %v0_1000308c, 4
  store i32 %v1_1000308c, i32* %r0.global-to-local, align 4
  %v1_10003090 = load i32, i32* %r19.global-to-local, align 4
  %v3_10003090 = add i32 %v1_10003090, %v1_1000308c
  %v4_10003090 = inttoptr i32 %v3_10003090 to i32*
  store i32 %v2_10003084, i32* %v4_10003090, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = mul i32 %v0_10003094, 4
  store i32 %v1_10003094, i32* %r9.global-to-local, align 4
  %v1_10003098 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003098 = add i32 %v1_10003098, %v1_10003094
  %v3_10003098 = inttoptr i32 %v2_10003098 to i32*
  %v4_10003098 = load i32, i32* %v3_10003098, align 4
  store i32 %v4_10003098, i32* %r11.global-to-local, align 4
  %v1_1000309c = inttoptr i32 %v4_10003098 to i32*
  %v2_1000309c = load i32, i32* %v1_1000309c, align 4
  store i32 %v2_1000309c, i32* %r0.global-to-local, align 4
  %v1_100030a0 = add i32 %v4_10003098, 20
  store i32 %v1_100030a0, i32* %r10.global-to-local, align 4
  %v0_100030a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100030a4 = trunc i32 %v0_100030a4 to i8
  %v3_100030a4 = add i32 %v4_10003098, 8
  %v4_100030a4 = inttoptr i32 %v3_100030a4 to i8*
  store i8 %v1_100030a4, i8* %v4_100030a4, align 1
  %v1_100030a8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100030a8, i32* %r0.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r17.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100030ac = add i32 %v1_100030ac, 12
  %v3_100030ac = inttoptr i32 %v2_100030ac to i32*
  store i32 %v0_100030ac, i32* %v3_100030ac, align 4
  %v1_100030b0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100030b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030b4 = trunc i32 %v0_100030b4 to i16
  %v2_100030b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030b4 = add i32 %v2_100030b4, 4
  %v4_100030b4 = inttoptr i32 %v3_100030b4 to i16*
  store i16 %v1_100030b4, i16* %v4_100030b4, align 2
  %v1_100030b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100030b8 = inttoptr i32 %v1_100030b8 to i32*
  store i32 %v1_100030b0, i32* %v2_100030b8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100030c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c0 = add i32 %v2_100030c0, 9
  %v4_100030c0 = inttoptr i32 %v3_100030c0 to i8*
  store i8 17, i8* %v4_100030c0, align 1
  %v0_100030c4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100030c4 = trunc i32 %v0_100030c4 to i8
  %v2_100030c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c4 = add i32 %v2_100030c4, 1
  %v4_100030c4 = inttoptr i32 %v3_100030c4 to i8*
  store i8 %v1_100030c4, i8* %v4_100030c4, align 1
  %v0_100030c8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  %v2_100030c8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030c8 = add i32 %v2_100030c8, 2
  %v4_100030c8 = inttoptr i32 %v3_100030c8 to i16*
  store i16 %v1_100030c8, i16* %v4_100030c8, align 2
  %v3_100030cc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100030cc, i32* %r9.global-to-local, align 4
  %v0_100030d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100030d0 = trunc i32 %v0_100030d0 to i16
  %v2_100030d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030d0 = add i32 %v2_100030d0, 6
  %v4_100030d0 = inttoptr i32 %v3_100030d0 to i16*
  store i16 %v1_100030d0, i16* %v4_100030d0, align 2
  %v0_100030d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100030d4 = add i32 %v0_100030d4, 1
  store i32 %v1_100030d4, i32* %r30.global-to-local, align 4
  %v1_100030d8 = mul i32 %v0_100030d4, 24
  store i32 %v1_100030d8, i32* %r9.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r18.global-to-local, align 4
  %v2_100030dc = icmp slt i32 %v1_100030d4, %v1_100030dc
  %v0_100030e0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100030e0 = trunc i32 %v0_100030e0 to i16
  %v2_100030e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100030e0 = add i32 %v2_100030e0, 20
  %v4_100030e0 = inttoptr i32 %v3_100030e0 to i16*
  store i16 %v1_100030e0, i16* %v4_100030e0, align 2
  %v0_100030e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100030e4 = load i32, i32* @r31, align 4
  %v2_100030e4 = add i32 %v1_100030e4, %v0_100030e4
  store i32 %v2_100030e4, i32* %r9.global-to-local, align 4
  %v0_100030e8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100030e8 = trunc i32 %v0_100030e8 to i16
  %v2_100030e8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100030e8 = add i32 %v2_100030e8, 4
  %v4_100030e8 = inttoptr i32 %v3_100030e8 to i16*
  store i16 %v1_100030e8, i16* %v4_100030e8, align 2
  %v0_100030ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100030ec = add i32 %v0_100030ec, 16
  %v2_100030ec = inttoptr i32 %v1_100030ec to i32*
  %v3_100030ec = load i32, i32* %v2_100030ec, align 4
  store i32 %v3_100030ec, i32* %r0.global-to-local, align 4
  %v0_100030f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100030f0 = trunc i32 %v0_100030f0 to i16
  %v2_100030f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100030f0 = add i32 %v2_100030f0, 2
  %v4_100030f0 = inttoptr i32 %v3_100030f0 to i16*
  store i16 %v1_100030f0, i16* %v4_100030f0, align 2
  %v0_100030f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100030f4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100030f4 = add i32 %v1_100030f4, 16
  %v3_100030f4 = inttoptr i32 %v2_100030f4 to i32*
  store i32 %v0_100030f4, i32* %v3_100030f4, align 4
  %v0_100030f8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100030f8, i32* %stack_var_-104, align 4
  br i1 %v2_100030dc, label %dec_label_pc_1000307c, label %dec_label_pc_10002e80.preheader

; uselistorder directives
  uselistorder i32 %v1_10003094, { 1, 0 }
  uselistorder i32 %v1_1000308c, { 1, 0 }
  uselistorder i32 %v0_10003030, { 1, 0 }
  uselistorder i32 %v0_10003020, { 1, 0 }
  uselistorder i32 %v0_10003010, { 1, 0 }
  uselistorder i32 %v1_10003008, { 1, 0 }
  uselistorder i32 %v1_10002f50, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002f18, { 1, 0 }
  uselistorder i32 %v1_10002eac, { 1, 0 }
  uselistorder i32 %v1_10002e1c, { 1, 0 }
  uselistorder i32 %v1_10002e14, { 1, 0 }
  uselistorder i32 %v1_10002db0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 8, 10, 9, 1, 2, 4, 3, 5, 6, 7, 11 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 1460, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000303c, { 1, 0 }
  uselistorder label %dec_label_pc_10002f70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ef0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002e80, { 1, 0 }
  uselistorder label %dec_label_pc_10002dc8, { 1, 0 }
}

define i32 @function_10003104(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10003104:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v0_10003108 = load i32, i32* @lr, align 4
  store i32 %v0_10003108, i32* %r0.global-to-local, align 4
  %v0_1000310c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 %v0_1000310c, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v0_10003130 = load i32, i32* %r0.global-to-local, align 4
  %v0_10003158 = load i32, i32* @r28, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003160 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 268448136, i32* @lr, align 4
  %v2_10003184 = call i32 @function_100089c8(i32 %arg2, i32 4)
  store i32 %v2_10003184, i32* %r21.global-to-local, align 4
  %v0_1000318c = load i32, i32* @r28, align 4
  %v0_10003190 = load i32, i32* @r29, align 4
  store i32 %v0_10003190, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268448160, i32* @lr, align 4
  %v4_1000319c = inttoptr i32 %v0_1000318c to i32*
  %v5_1000319c = call i32 @function_10000300(i32 %v0_10003190, i32* %v4_1000319c, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100031ac = load i32, i32* @r28, align 4
  %v1_100031b0 = urem i32 %v5_1000319c, 256
  store i32 %v1_100031b0, i32* %r18.global-to-local, align 4
  %v0_100031b4 = load i32, i32* @r29, align 4
  store i32 %v0_100031b4, i32* %r3.global-to-local, align 4
  store i32 268448188, i32* @lr, align 4
  %v4_100031b8 = inttoptr i32 %v0_100031ac to i32*
  %v5_100031b8 = call i32 @function_10000300(i32 %v0_100031b4, i32* %v4_100031b8, i32 3, i32 65535)
  %v0_100031bc = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_100031b8, i32* %r24.global-to-local, align 4
  %v0_100031cc = load i32, i32* @r29, align 4
  store i32 %v0_100031cc, i32* %r3.global-to-local, align 4
  store i32 268448212, i32* @lr, align 4
  %v4_100031d0 = inttoptr i32 %v0_100031bc to i32*
  %v5_100031d0 = call i32 @function_10000300(i32 %v0_100031cc, i32* %v4_100031d0, i32 4, i32 64)
  %v0_100031d4 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_100031e0 = urem i32 %v5_100031d0, 256
  store i32 %v1_100031e0, i32* %r19.global-to-local, align 4
  %v0_100031e4 = load i32, i32* @r29, align 4
  store i32 %v0_100031e4, i32* %r3.global-to-local, align 4
  store i32 268448236, i32* @lr, align 4
  %v4_100031e8 = inttoptr i32 %v0_100031d4 to i32*
  %v5_100031e8 = call i32 @function_10000300(i32 %v0_100031e4, i32* %v4_100031e8, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_100031f8 = load i32, i32* @r28, align 4
  %v1_100031fc = urem i32 %v5_100031e8, 256
  store i32 %v1_100031fc, i32* %r16.global-to-local, align 4
  %v0_10003200 = load i32, i32* @r29, align 4
  store i32 %v0_10003200, i32* %r3.global-to-local, align 4
  store i32 268448264, i32* @lr, align 4
  %v4_10003204 = inttoptr i32 %v0_100031f8 to i32*
  %v5_10003204 = call i32 @function_10000300(i32 %v0_10003200, i32* %v4_10003204, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003210 = load i32, i32* @r28, align 4
  store i32 %v5_10003204, i32* %r25.global-to-local, align 4
  %v0_10003218 = load i32, i32* @r29, align 4
  store i32 %v0_10003218, i32* %r3.global-to-local, align 4
  store i32 268448288, i32* @lr, align 4
  %v4_1000321c = inttoptr i32 %v0_10003210 to i32*
  %v5_1000321c = call i32 @function_10000300(i32 %v0_10003218, i32* %v4_1000321c, i32 7, i32 27015)
  %v0_10003220 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003220, i32* %stack_var_-100, align 4
  store i32 %v5_1000321c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448304, i32* @lr, align 4
  %v0_1000322c = call i32 @function_10008038()
  %v1_10003230 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003230 = add i32 %v1_10003230, %v0_1000322c
  store i32 %v2_10003230, i32* %r17.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268448316, i32* @lr, align 4
  %v1_10003238 = call i32 @function_10007348(i32 32)
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_10003244 = call i32 @function_10007294(i32 32, i32* nonnull %stack_var_-100)
  store i32 %v3_10003244, i32* @r29, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448348, i32* @lr, align 4
  %v3_10003258 = call i32 @function_1000866c(i32 2, i32 3, i32 17)
  store i32 %v3_10003258, i32* %r3.global-to-local, align 4
  %v3_1000325c = icmp eq i32 %v3_10003258, -1
  store i32 %v3_10003258, i32* %r22.global-to-local, align 4
  br i1 %v3_1000325c, label %dec_label_pc_10003558, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003104
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003274 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10003274, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268448388, i32* @lr, align 4
  %v4_10003280 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_10003274, i32 4)
  store i32 %v4_10003280, i32* %r3.global-to-local, align 4
  %v3_10003284 = icmp eq i32 %v4_10003280, -1
  br i1 %v3_10003284, label %dec_label_pc_100035b8, label %dec_label_pc_1000328c

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003268
  %v0_1000328c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000328c = icmp slt i32 %v0_1000328c, 0
  %v3_1000328c = icmp eq i32 %v0_1000328c, 0
  store i1 %v1_1000328c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000328c, i1* %cr4_eq.global-to-local, align 1
  %v0_10003290 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003290 = urem i32 %v0_10003290, 65536
  store i32 %v1_10003290, i32* %r23.global-to-local, align 4
  %v0_10003294 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003294, i32* %stack_var_-104, align 4
  %v0_10003298 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003298 = urem i32 %v0_10003298, 65536
  store i32 %v1_10003298, i32* %r24.global-to-local, align 4
  %v0_1000329c = load i32, i32* @r31, align 4
  %v1_1000329c = urem i32 %v0_1000329c, 65536
  store i32 %v1_1000329c, i32* %r25.global-to-local, align 4
  %tmp28 = icmp slt i32 %v0_1000328c, 1
  br i1 %tmp28, label %dec_label_pc_10003370, label %dec_label_pc_100032a4

dec_label_pc_100032a4:                            ; preds = %dec_label_pc_1000328c
  %v0_100032a4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100032a4 = icmp eq i32 %v0_100032a4, 0
  store i32 4, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 16384, i32* %r26.global-to-local, align 4
  store i32 17, i32* %r16.global-to-local, align 4
  store i32 -1, i32* %r15.global-to-local, align 4
  br i1 %v3_100032a4, label %dec_label_pc_100032c8, label %dec_label_pc_10003498

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_100032a4, %dec_label_pc_100032c8
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268448468, i32* @lr, align 4
  %v2_100032d0 = call i32 @function_100089c8(i32 128, i32 1)
  %v3_100032d4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100032d4, i32* %r9.global-to-local, align 4
  %v0_100032d8 = load i32, i32* @r31, align 4
  %v1_100032d8 = mul i32 %v0_100032d8, 4
  store i32 %v1_100032d8, i32* %r0.global-to-local, align 4
  %v1_100032e0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100032e0 = add i32 %v1_100032e0, %v1_100032d8
  %v4_100032e0 = inttoptr i32 %v3_100032e0 to i32*
  store i32 %v2_100032d0, i32* %v4_100032e0, align 4
  %v0_100032e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100032e4 = mul i32 %v0_100032e4, 4
  store i32 %v1_100032e4, i32* %r3.global-to-local, align 4
  %v1_100032e8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100032e8 = add i32 %v1_100032e8, %v1_100032e4
  %v3_100032e8 = inttoptr i32 %v2_100032e8 to i32*
  %v4_100032e8 = load i32, i32* %v3_100032e8, align 4
  store i32 %v4_100032e8, i32* %r3.global-to-local, align 4
  %v1_100032ec = inttoptr i32 %v4_100032e8 to i32*
  %v2_100032ec = load i32, i32* %v1_100032ec, align 4
  store i32 %v2_100032ec, i32* %r0.global-to-local, align 4
  %v1_100032f0 = add i32 %v4_100032e8, 20
  store i32 %v1_100032f0, i32* %r8.global-to-local, align 4
  %v0_100032f4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100032f4 = trunc i32 %v0_100032f4 to i16
  %v3_100032f4 = add i32 %v4_100032e8, 4
  %v4_100032f4 = inttoptr i32 %v3_100032f4 to i16*
  store i16 %v1_100032f4, i16* %v4_100032f4, align 2
  %v1_100032f8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100032f8, i32* %r0.global-to-local, align 4
  %v0_100032fc = load i32, i32* %r24.global-to-local, align 4
  %v1_100032fc = trunc i32 %v0_100032fc to i16
  %v2_100032fc = load i32, i32* %r3.global-to-local, align 4
  %v3_100032fc = add i32 %v2_100032fc, 20
  %v4_100032fc = inttoptr i32 %v3_100032fc to i16*
  store i16 %v1_100032fc, i16* %v4_100032fc, align 2
  %v1_10003300 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003304 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003304 = inttoptr i32 %v1_10003304 to i32*
  store i32 %v1_10003300, i32* %v2_10003304, align 4
  %v0_10003308 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003308 = trunc i32 %v0_10003308 to i8
  %v2_10003308 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003308 = add i32 %v2_10003308, 1
  %v4_10003308 = inttoptr i32 %v3_10003308 to i8*
  store i8 %v1_10003308, i8* %v4_10003308, align 1
  %v3_1000330c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000330c, i32* %r9.global-to-local, align 4
  %v0_10003310 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003310 = trunc i32 %v0_10003310 to i8
  %v2_10003310 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003310 = add i32 %v2_10003310, 8
  %v4_10003310 = inttoptr i32 %v3_10003310 to i8*
  store i8 %v1_10003310, i8* %v4_10003310, align 1
  %v0_10003314 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003314 = trunc i32 %v0_10003314 to i8
  %v2_10003314 = load i32, i32* %r3.global-to-local, align 4
  %v3_10003314 = add i32 %v2_10003314, 9
  %v4_10003314 = inttoptr i32 %v3_10003314 to i8*
  store i8 %v1_10003314, i8* %v4_10003314, align 1
  %v0_10003318 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003318 = add i32 %v0_10003318, 32
  %v1_1000331c = trunc i32 %v1_10003318 to i16
  %v2_1000331c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000331c = add i32 %v2_1000331c, 2
  %v4_1000331c = inttoptr i32 %v3_1000331c to i16*
  store i16 %v1_1000331c, i16* %v4_1000331c, align 2
  %v3_10003320 = load i32, i32* %stack_var_-104, align 4
  %v3_10003324 = load i32, i32* @global_var_1001a998.12, align 4
  store i32 %v3_10003324, i32* %r0.global-to-local, align 4
  %v1_10003328 = mul i32 %v3_10003320, 24
  store i32 %v1_10003328, i32* %r9.global-to-local, align 4
  %v0_1000332c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000332c = trunc i32 %v0_1000332c to i16
  %v2_1000332c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000332c = add i32 %v2_1000332c, 2
  %v4_1000332c = inttoptr i32 %v3_1000332c to i16*
  store i16 %v1_1000332c, i16* %v4_1000332c, align 2
  %v0_10003330 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003330 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003330 = add i32 %v1_10003330, 12
  %v3_10003330 = inttoptr i32 %v2_10003330 to i32*
  store i32 %v0_10003330, i32* %v3_10003330, align 4
  %v0_10003334 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003334 = load i32, i32* @r30, align 4
  %v2_10003334 = add i32 %v1_10003334, %v0_10003334
  store i32 %v2_10003334, i32* %r9.global-to-local, align 4
  %v1_10003338 = add i32 %v2_10003334, 16
  %v2_10003338 = inttoptr i32 %v1_10003338 to i32*
  %v3_10003338 = load i32, i32* %v2_10003338, align 4
  store i32 %v3_10003338, i32* %r9.global-to-local, align 4
  %v3_1000333c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000333c, i32* %r11.global-to-local, align 4
  %v1_10003340 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003340 = add i32 %v1_10003340, 16
  %v3_10003340 = inttoptr i32 %v2_10003340 to i32*
  store i32 %v3_10003338, i32* %v3_10003340, align 4
  %v0_10003344 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, 28
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  store i32 %v0_10003344, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003348 = add i32 %v0_10003348, 12
  store i32 %v1_10003348, i32* %r0.global-to-local, align 4
  %v1_1000334c = trunc i32 %v1_10003348 to i16
  %v2_1000334c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000334c = add i32 %v2_1000334c, 4
  %v4_1000334c = inttoptr i32 %v3_1000334c to i16*
  store i16 %v1_1000334c, i16* %v4_1000334c, align 2
  %v0_10003350 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003350 = add i32 %v0_10003350, 32
  store i32 %v1_10003350, i32* %r3.global-to-local, align 4
  %v3_10003354 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003354, i32* %r5.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v3_10003358 = call i32 @function_100077ac(i32 %v1_10003350, i32 %v3_10003354, i32 %v3_10003354)
  store i32 %v3_10003358, i32* %r3.global-to-local, align 4
  %v3_1000335c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000335c, i32* %r9.global-to-local, align 4
  %v1_10003360 = add i32 %v3_1000335c, 1
  %v1_10003364 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003364 = icmp slt i32 %v1_10003360, %v1_10003364
  store i32 %v1_10003360, i32* %stack_var_-104, align 4
  br i1 %v2_10003364, label %dec_label_pc_100032c8, label %dec_label_pc_10003370

dec_label_pc_10003370:                            ; preds = %dec_label_pc_1000328c, %dec_label_pc_100032c8, %dec_label_pc_10003498, %dec_label_pc_10003548
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10003378 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003378 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003378 = or i1 %v0_10003378, %v1_10003378
  br i1 %v2_10003378, label %dec_label_pc_10003548, label %dec_label_pc_1000337c

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003370
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003418

dec_label_pc_10003388:                            ; preds = %dec_label_pc_10003418
  %v0_10003388 = load i32, i32* %r23.global-to-local, align 4
  %v4_10003388 = icmp eq i32 %v0_10003388, 65535
  br i1 %v4_10003388, label %dec_label_pc_1000346c, label %dec_label_pc_10003390

dec_label_pc_10003390:                            ; preds = %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge, %dec_label_pc_10003388
  %v1_10003390 = phi i32 [ %v1_10003390.pre, %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge ], [ 65535, %dec_label_pc_10003388 ]
  %v0_10003390 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003390 = icmp eq i32 %v0_10003390, %v1_10003390
  br i1 %v4_10003390, label %dec_label_pc_1000347c, label %dec_label_pc_10003398

dec_label_pc_10003398:                            ; preds = %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge, %dec_label_pc_10003390
  %v1_10003398 = phi i32 [ %v1_10003398.pre, %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge ], [ %v1_10003390, %dec_label_pc_10003390 ]
  %v0_10003398 = load i32, i32* %r25.global-to-local, align 4
  %v4_10003398 = icmp eq i32 %v0_10003398, %v1_10003398
  br i1 %v4_10003398, label %dec_label_pc_1000348c, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_1000347c, %dec_label_pc_10003398, %dec_label_pc_1000348c
  %v0_100033a0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100033a0 = trunc i32 %v0_100033a0 to i16
  %v2_100033a0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100033a0 = add i32 %v2_100033a0, 10
  %v4_100033a0 = inttoptr i32 %v3_100033a0 to i16*
  store i16 %v1_100033a0, i16* %v4_100033a0, align 2
  %v0_100033a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100033a8, i32* @r3, align 4
  %v2_100033ac = call i32 @function_10003ca8(i32 %v0_100033a8, i32 20)
  %v3_100033ac = trunc i32 %v2_100033ac to i16
  store i32 %v2_100033ac, i32* %r3.global-to-local, align 4
  %v3_100033b0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033b0, i32* %r6.global-to-local, align 4
  %v3_100033b4 = load i32, i32* %r28.global-to-local, align 4
  %v4_100033b4 = add i32 %v3_100033b4, 10
  %v5_100033b4 = inttoptr i32 %v4_100033b4 to i16*
  store i16 %v3_100033ac, i16* %v5_100033b4, align 2
  %v0_100033b8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100033b8, i32* @r4, align 4
  %v0_100033bc = load i32, i32* %r26.global-to-local, align 4
  %v1_100033bc = trunc i32 %v0_100033bc to i16
  %v3_100033bc = add i32 %v0_100033b8, 6
  %v4_100033bc = inttoptr i32 %v3_100033bc to i16*
  store i16 %v1_100033bc, i16* %v4_100033bc, align 2
  %v0_100033c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100033c0 = add i32 %v0_100033c0, 12
  store i32 %v1_100033c0, i32* %r6.global-to-local, align 4
  %v0_100033c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100033c4 = add i32 %v0_100033c4, 4
  %v2_100033c4 = inttoptr i32 %v1_100033c4 to i16*
  %v3_100033c4 = load i16, i16* %v2_100033c4, align 2
  %v4_100033c4 = zext i16 %v3_100033c4 to i32
  store i32 %v4_100033c4, i32* %r5.global-to-local, align 4
  %v0_100033c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100033c8, i32* %r3.global-to-local, align 4
  %v4_100033cc = call i32 @function_10003d0c(i32 %v0_100033c8, i32 %v0_100033b8, i32 %v4_100033c4, i32 %v1_100033c0)
  %v5_100033cc = trunc i32 %v4_100033cc to i16
  store i32 %v4_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100033d0, i32* %r7.global-to-local, align 4
  %v0_100033d4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100033d4 = add i32 %v0_100033d4, 2
  %v2_100033d4 = inttoptr i32 %v1_100033d4 to i16*
  %v3_100033d4 = load i16, i16* %v2_100033d4, align 2
  %v4_100033d4 = zext i16 %v3_100033d4 to i32
  store i32 %v4_100033d4, i32* %r0.global-to-local, align 4
  %v0_100033d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100033dc = mul i32 %v3_100033d0, 24
  store i32 %v1_100033dc, i32* %r7.global-to-local, align 4
  %v3_100033e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100033e0, i32* %r5.global-to-local, align 4
  %v4_100033e4 = add i32 %v0_100033d4, 6
  %v5_100033e4 = inttoptr i32 %v4_100033e4 to i16*
  store i16 %v5_100033cc, i16* %v5_100033e4, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100033ec = load i32, i32* %r7.global-to-local, align 4
  %v1_100033ec = load i32, i32* @r30, align 4
  %v2_100033ec = add i32 %v1_100033ec, %v0_100033ec
  store i32 %v2_100033ec, i32* %r7.global-to-local, align 4
  %v0_100033f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100033f0 = add i32 %v0_100033f0, 32
  store i32 %v1_100033f0, i32* %r5.global-to-local, align 4
  %v0_100033f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100033f4 = trunc i32 %v0_100033f4 to i16
  %v3_100033f4 = add i32 %v2_100033ec, 2
  %v4_100033f4 = inttoptr i32 %v3_100033f4 to i16*
  store i16 %v1_100033f4, i16* %v4_100033f4, align 2
  %v0_100033f8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100033f8, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448772, i32* @lr, align 4
  %v6_10003400 = call i32 @function_100085f0(i32 %v0_100033f8, i32 %v0_100033d8, i32 %v1_100033f0, i32 16384, i32 %v2_100033ec, i32 16)
  store i32 %v6_10003400, i32* %r3.global-to-local, align 4
  %v3_10003404 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003404, i32* %r9.global-to-local, align 4
  %v1_10003408 = add i32 %v3_10003404, 1
  store i32 %v1_10003408, i32* %r11.global-to-local, align 4
  %v1_1000340c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000340c = icmp slt i32 %v1_10003408, %v1_1000340c
  store i32 %v1_10003408, i32* %stack_var_-104, align 4
  br i1 %v2_1000340c, label %dec_label_pc_10003418, label %dec_label_pc_10003548

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033a0, %dec_label_pc_1000337c
  %v0_10003428 = phi i32 [ %v1_10003408, %dec_label_pc_100033a0 ], [ 0, %dec_label_pc_1000337c ]
  %v1_10003418 = mul i32 %v0_10003428, 24
  store i32 65535, i32* @r31, align 4
  %v1_10003424 = load i32, i32* @r30, align 4
  %v2_10003424 = add i32 %v1_10003424, %v1_10003418
  %v1_10003428 = mul i32 %v0_10003428, 4
  store i32 %v1_10003428, i32* %r0.global-to-local, align 4
  %v1_1000342c = add i32 %v2_10003424, 20
  %v2_1000342c = inttoptr i32 %v1_1000342c to i8*
  %v3_1000342c = load i8, i8* %v2_1000342c, align 1
  %v4_1000342c = zext i8 %v3_1000342c to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  %v0_10003430 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003430 = add i32 %v0_10003430, %v1_10003428
  %v3_10003430 = inttoptr i32 %v2_10003430 to i32*
  %v4_10003430 = load i32, i32* %v3_10003430, align 4
  store i32 %v4_10003430, i32* %r28.global-to-local, align 4
  %v2_10003434 = icmp ugt i8 %v3_1000342c, 31
  %v1_10003438 = add i32 %v4_10003430, 20
  store i32 %v1_10003438, i32* %r27.global-to-local, align 4
  br i1 %v2_10003434, label %dec_label_pc_10003388, label %dec_label_pc_10003440

dec_label_pc_10003440:                            ; preds = %dec_label_pc_10003418
  %v1_10003440 = add i32 %v2_10003424, 16
  %v2_10003440 = inttoptr i32 %v1_10003440 to i32*
  %v3_10003440 = load i32, i32* %v2_10003440, align 4
  store i32 %v3_10003440, i32* %r29.global-to-local, align 4
  %v0_10003444 = call i32 @function_100048a8()
  store i32 %v0_10003444, i32* %r3.global-to-local, align 4
  %v3_10003448 = load i32, i32* %stack_var_-104, align 4
  %v0_1000344c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000344c = load i32, i32* @r31, align 4
  %v4_1000344c = icmp eq i32 %v0_1000344c, %v1_1000344c
  %v1_10003450 = mul i32 %v3_10003448, 24
  %v1_10003454 = load i32, i32* @r30, align 4
  %v2_10003454 = add i32 %v1_10003454, %v1_10003450
  store i32 %v2_10003454, i32* %r9.global-to-local, align 4
  %v1_10003458 = add i32 %v2_10003454, 20
  %v2_10003458 = inttoptr i32 %v1_10003458 to i8*
  %v3_10003458 = load i8, i8* %v2_10003458, align 1
  %v4_10003458 = zext i8 %v3_10003458 to i32
  store i32 %v4_10003458, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003458, 64
  %v2_1000345c = zext i8 %tmp to i32
  %v3_1000345c = lshr i32 %v0_10003444, %v2_1000345c
  store i32 %v3_1000345c, i32* %r3.global-to-local, align 4
  %v0_10003460 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003460 = add i32 %v3_1000345c, %v0_10003460
  store i32 %v2_10003460, i32* %r29.global-to-local, align 4
  %v1_10003464 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, 16
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  store i32 %v2_10003460, i32* %v3_10003464, align 4
  br i1 %v4_1000344c, label %dec_label_pc_1000346c, label %dec_label_pc_10003440.dec_label_pc_10003390_crit_edge

dec_label_pc_10003440.dec_label_pc_10003390_crit_edge: ; preds = %dec_label_pc_10003440
  %v1_10003390.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003390

dec_label_pc_1000346c:                            ; preds = %dec_label_pc_10003440, %dec_label_pc_10003388
  %v0_1000346c = call i32 @function_100048a8()
  %v1_1000346c = trunc i32 %v0_1000346c to i16
  store i32 %v0_1000346c, i32* %r3.global-to-local, align 4
  %v0_10003470 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003470 = load i32, i32* @r31, align 4
  %v4_10003470 = icmp eq i32 %v0_10003470, %v1_10003470
  %v3_10003474 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003474 = add i32 %v3_10003474, 4
  %v5_10003474 = inttoptr i32 %v4_10003474 to i16*
  store i16 %v1_1000346c, i16* %v5_10003474, align 2
  br i1 %v4_10003470, label %dec_label_pc_1000347c, label %dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge

dec_label_pc_1000346c.dec_label_pc_10003398_crit_edge: ; preds = %dec_label_pc_1000346c
  %v1_10003398.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10003398

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_1000346c, %dec_label_pc_10003390
  %v0_1000347c = call i32 @function_100048a8()
  %v1_1000347c = trunc i32 %v0_1000347c to i16
  store i32 %v0_1000347c, i32* %r3.global-to-local, align 4
  %v0_10003480 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003480 = load i32, i32* @r31, align 4
  %v4_10003480 = icmp eq i32 %v0_10003480, %v1_10003480
  %v3_10003484 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003484 = add i32 %v3_10003484, 20
  %v5_10003484 = inttoptr i32 %v4_10003484 to i16*
  store i16 %v1_1000347c, i16* %v5_10003484, align 2
  br i1 %v4_10003480, label %dec_label_pc_1000348c, label %dec_label_pc_100033a0

dec_label_pc_1000348c:                            ; preds = %dec_label_pc_1000347c, %dec_label_pc_10003398
  %v0_1000348c = call i32 @function_100048a8()
  %v1_1000348c = trunc i32 %v0_1000348c to i16
  store i32 %v0_1000348c, i32* %r3.global-to-local, align 4
  %v3_10003490 = load i32, i32* %r27.global-to-local, align 4
  %v4_10003490 = add i32 %v3_10003490, 2
  %v5_10003490 = inttoptr i32 %v4_10003490 to i16*
  store i16 %v1_1000348c, i16* %v5_10003490, align 2
  br label %dec_label_pc_100033a0

dec_label_pc_10003498:                            ; preds = %dec_label_pc_100032a4, %dec_label_pc_10003498
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268448932, i32* @lr, align 4
  %v2_100034a0 = call i32 @function_100089c8(i32 128, i32 1)
  %v3_100034a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100034a4, i32* %r9.global-to-local, align 4
  %v0_100034a8 = load i32, i32* @r31, align 4
  %v1_100034a8 = mul i32 %v0_100034a8, 4
  store i32 %v1_100034a8, i32* %r0.global-to-local, align 4
  %v1_100034b0 = load i32, i32* %r21.global-to-local, align 4
  %v3_100034b0 = add i32 %v1_100034b0, %v1_100034a8
  %v4_100034b0 = inttoptr i32 %v3_100034b0 to i32*
  store i32 %v2_100034a0, i32* %v4_100034b0, align 4
  %v0_100034b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100034b4 = mul i32 %v0_100034b4, 4
  store i32 %v1_100034b4, i32* %r3.global-to-local, align 4
  %v1_100034b8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100034b8 = add i32 %v1_100034b8, %v1_100034b4
  %v3_100034b8 = inttoptr i32 %v2_100034b8 to i32*
  %v4_100034b8 = load i32, i32* %v3_100034b8, align 4
  store i32 %v4_100034b8, i32* %r3.global-to-local, align 4
  %v1_100034bc = inttoptr i32 %v4_100034b8 to i32*
  %v2_100034bc = load i32, i32* %v1_100034bc, align 4
  store i32 %v2_100034bc, i32* %r0.global-to-local, align 4
  %v1_100034c0 = add i32 %v4_100034b8, 20
  store i32 %v1_100034c0, i32* %r8.global-to-local, align 4
  %v0_100034c4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100034c4 = trunc i32 %v0_100034c4 to i16
  %v3_100034c4 = add i32 %v4_100034b8, 4
  %v4_100034c4 = inttoptr i32 %v3_100034c4 to i16*
  store i16 %v1_100034c4, i16* %v4_100034c4, align 2
  %v1_100034c8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100034c8, i32* %r0.global-to-local, align 4
  %v0_100034cc = load i32, i32* %r26.global-to-local, align 4
  %v1_100034cc = trunc i32 %v0_100034cc to i16
  %v2_100034cc = load i32, i32* %r3.global-to-local, align 4
  %v3_100034cc = add i32 %v2_100034cc, 6
  %v4_100034cc = inttoptr i32 %v3_100034cc to i16*
  store i16 %v1_100034cc, i16* %v4_100034cc, align 2
  %v1_100034d0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100034d4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100034d4 = trunc i32 %v0_100034d4 to i16
  %v2_100034d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034d4 = add i32 %v2_100034d4, 20
  %v4_100034d4 = inttoptr i32 %v3_100034d4 to i16*
  store i16 %v1_100034d4, i16* %v4_100034d4, align 2
  %v1_100034d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100034d8 = inttoptr i32 %v1_100034d8 to i32*
  store i32 %v1_100034d0, i32* %v2_100034d8, align 4
  %v0_100034dc = load i32, i32* %r18.global-to-local, align 4
  %v1_100034dc = trunc i32 %v0_100034dc to i8
  %v2_100034dc = load i32, i32* %r3.global-to-local, align 4
  %v3_100034dc = add i32 %v2_100034dc, 1
  %v4_100034dc = inttoptr i32 %v3_100034dc to i8*
  store i8 %v1_100034dc, i8* %v4_100034dc, align 1
  %v3_100034e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100034e0, i32* %r9.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100034e4 = trunc i32 %v0_100034e4 to i8
  %v2_100034e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034e4 = add i32 %v2_100034e4, 8
  %v4_100034e4 = inttoptr i32 %v3_100034e4 to i8*
  store i8 %v1_100034e4, i8* %v4_100034e4, align 1
  %v0_100034e8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100034e8 = trunc i32 %v0_100034e8 to i8
  %v2_100034e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034e8 = add i32 %v2_100034e8, 9
  %v4_100034e8 = inttoptr i32 %v3_100034e8 to i8*
  store i8 %v1_100034e8, i8* %v4_100034e8, align 1
  %v0_100034ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100034ec = add i32 %v0_100034ec, 32
  %v1_100034f0 = trunc i32 %v1_100034ec to i16
  %v2_100034f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100034f0 = add i32 %v2_100034f0, 2
  %v4_100034f0 = inttoptr i32 %v3_100034f0 to i16*
  store i16 %v1_100034f0, i16* %v4_100034f0, align 2
  %v3_100034f4 = load i32, i32* %stack_var_-104, align 4
  %v3_100034f8 = load i32, i32* @global_var_1001a998.12, align 4
  store i32 %v3_100034f8, i32* %r0.global-to-local, align 4
  %v1_100034fc = mul i32 %v3_100034f4, 24
  store i32 %v1_100034fc, i32* %r9.global-to-local, align 4
  %v0_10003500 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003500 = trunc i32 %v0_10003500 to i16
  %v2_10003500 = load i32, i32* %r8.global-to-local, align 4
  %v3_10003500 = add i32 %v2_10003500, 2
  %v4_10003500 = inttoptr i32 %v3_10003500 to i16*
  store i16 %v1_10003500, i16* %v4_10003500, align 2
  %v0_10003504 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003504 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003504 = add i32 %v1_10003504, 12
  %v3_10003504 = inttoptr i32 %v2_10003504 to i32*
  store i32 %v0_10003504, i32* %v3_10003504, align 4
  %v0_10003508 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003508 = load i32, i32* @r30, align 4
  %v2_10003508 = add i32 %v1_10003508, %v0_10003508
  store i32 %v2_10003508, i32* %r9.global-to-local, align 4
  %v1_1000350c = add i32 %v2_10003508, 16
  %v2_1000350c = inttoptr i32 %v1_1000350c to i32*
  %v3_1000350c = load i32, i32* %v2_1000350c, align 4
  store i32 %v3_1000350c, i32* %r9.global-to-local, align 4
  %v3_10003510 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003510, i32* %r11.global-to-local, align 4
  %v1_10003514 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003514 = add i32 %v1_10003514, 16
  %v3_10003514 = inttoptr i32 %v2_10003514 to i32*
  store i32 %v3_1000350c, i32* %v3_10003514, align 4
  %v0_10003518 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003518 = load i32, i32* %r3.global-to-local, align 4
  %v2_10003518 = add i32 %v1_10003518, 28
  %v3_10003518 = inttoptr i32 %v2_10003518 to i32*
  store i32 %v0_10003518, i32* %v3_10003518, align 4
  %v0_1000351c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000351c = add i32 %v0_1000351c, 12
  store i32 %v1_1000351c, i32* %r0.global-to-local, align 4
  %v1_10003520 = trunc i32 %v1_1000351c to i16
  %v2_10003520 = load i32, i32* %r8.global-to-local, align 4
  %v3_10003520 = add i32 %v2_10003520, 4
  %v4_10003520 = inttoptr i32 %v3_10003520 to i16*
  store i16 %v1_10003520, i16* %v4_10003520, align 2
  %v0_10003524 = load i32, i32* %r3.global-to-local, align 4
  %v1_10003524 = add i32 %v0_10003524, 32
  store i32 %v1_10003524, i32* %r3.global-to-local, align 4
  %v3_10003528 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10003528, i32* %r5.global-to-local, align 4
  store i32 268449072, i32* @lr, align 4
  %v3_1000352c = call i32 @function_100077ac(i32 %v1_10003524, i32 %v3_10003528, i32 %v3_10003528)
  store i32 %v3_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003530, i32* %r9.global-to-local, align 4
  %v1_10003534 = add i32 %v3_10003530, 1
  %v1_10003538 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003538 = icmp slt i32 %v1_10003534, %v1_10003538
  store i32 %v1_10003534, i32* %stack_var_-104, align 4
  br i1 %v2_10003538, label %dec_label_pc_10003498, label %dec_label_pc_10003370

dec_label_pc_10003548:                            ; preds = %dec_label_pc_100033a0, %dec_label_pc_10003370
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449104, i32* @lr, align 4
  %v0_1000354c = call i32 @function_10008038()
  store i32 %v0_1000354c, i32* %r3.global-to-local, align 4
  %v0_10003550 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003550 = icmp slt i32 %v0_10003550, %v0_1000354c
  br i1 %v2_10003550, label %dec_label_pc_10003558, label %dec_label_pc_10003370

dec_label_pc_10003558:                            ; preds = %dec_label_pc_10003548, %dec_label_pc_10003104, %dec_label_pc_100035b8
  store i32 %v0_10003130, i32* %r0.global-to-local, align 4
  %v1_1000356c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000310c)
  store i32 %v0_10003158, i32* %r28.global-to-local, align 4
  store i32 %v0_10003160, i32* %r29.global-to-local, align 4
  %v0_100035b4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100035b4

dec_label_pc_100035b8:                            ; preds = %dec_label_pc_10003268
  %v0_100035b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100035b8, i32* %r3.global-to-local, align 4
  store i32 268449216, i32* @lr, align 4
  %v0_100035bc = call i32 @function_10007cb0()
  store i32 %v0_100035bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003558

; uselistorder directives
  uselistorder i32 %v1_100034b4, { 1, 0 }
  uselistorder i32 %v1_100034a8, { 1, 0 }
  uselistorder i32 %v0_1000348c, { 1, 0 }
  uselistorder i32 %v0_1000347c, { 1, 0 }
  uselistorder i32 %v0_1000346c, { 1, 0 }
  uselistorder i32 %v1_10003428, { 1, 0 }
  uselistorder i32 %v1_10003408, { 1, 0, 2, 3 }
  uselistorder i32 %v4_100033cc, { 1, 0 }
  uselistorder i32 %v2_100033ac, { 1, 0 }
  uselistorder i32 %v1_100032e4, { 1, 0 }
  uselistorder i32 %v1_100032d8, { 1, 0 }
  uselistorder i32* %stack_var_-100, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* %stack_var_-104, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 47, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i8 31, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10003558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003498, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003370, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100032c8, { 1, 0 }
}

define i32 @function_100035c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100035c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-2196 = alloca i32, align 4
  %stack_var_-2164 = alloca i32, align 4
  %v0_100035c4 = load i32, i32* @lr, align 4
  store i32 %v0_100035c4, i32* %r0.global-to-local, align 4
  %v0_100035cc = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r19.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r26, align 4
  store i32 %v0_100035cc, i32* %r26.global-to-local, align 4
  %v0_100035e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %arg3, i32* %r17.global-to-local, align 4
  %v0_10003614 = load i32, i32* @r24, align 4
  %v0_10003618 = load i32, i32* @r25, align 4
  store i32 %arg5, i32* @r28, align 4
  %v0_10003624 = load i32, i32* @r29, align 4
  store i32 %arg4, i32* @r29, align 4
  %v0_1000362c = load i32, i32* @r31, align 4
  %v0_1000363c = load i32, i32* @r27, align 4
  %v0_10003640 = load i32, i32* @r30, align 4
  store i32 268449352, i32* @lr, align 4
  %v2_10003644 = call i32 @function_100089c8(i32 %arg2, i32 4)
  store i32 %v2_10003644, i32* %r20.global-to-local, align 4
  %v0_1000364c = load i32, i32* @r28, align 4
  %v0_10003658 = load i32, i32* @r29, align 4
  store i32 %v0_10003658, i32* %r3.global-to-local, align 4
  store i32 268449376, i32* @lr, align 4
  %v4_1000365c = inttoptr i32 %v0_1000364c to i32*
  %v5_1000365c = call i32 @function_10000300(i32 %v0_10003658, i32* %v4_1000365c, i32 2, i32 0)
  %v0_10003668 = load i32, i32* @r28, align 4
  %v5_10003670 = trunc i32 %v5_1000365c to i8
  %v0_10003678 = load i32, i32* @r29, align 4
  store i32 %v0_10003678, i32* %r3.global-to-local, align 4
  store i32 268449408, i32* @lr, align 4
  %v4_1000367c = inttoptr i32 %v0_10003668 to i32*
  %v5_1000367c = call i32 @function_10000300(i32 %v0_10003678, i32* %v4_1000367c, i32 3, i32 65535)
  %v0_10003680 = load i32, i32* @r28, align 4
  store i32 %v5_1000367c, i32* %r14.global-to-local, align 4
  %v0_10003690 = load i32, i32* @r29, align 4
  store i32 %v0_10003690, i32* %r3.global-to-local, align 4
  store i32 268449432, i32* @lr, align 4
  %v4_10003694 = inttoptr i32 %v0_10003680 to i32*
  %v5_10003694 = call i32 @function_10000300(i32 %v0_10003690, i32* %v4_10003694, i32 4, i32 64)
  %v0_10003698 = load i32, i32* @r28, align 4
  %v5_100036a4 = trunc i32 %v5_10003694 to i8
  %v0_100036ac = load i32, i32* @r29, align 4
  store i32 %v0_100036ac, i32* %r3.global-to-local, align 4
  store i32 268449460, i32* @lr, align 4
  %v4_100036b0 = inttoptr i32 %v0_10003698 to i32*
  %v5_100036b0 = call i32 @function_10000300(i32 %v0_100036ac, i32* %v4_100036b0, i32 5, i32 0)
  %v0_100036b8 = load i32, i32* @r28, align 4
  %v1_100036c4 = urem i32 %v5_100036b0, 256
  store i32 %v1_100036c4, i32* %r25.global-to-local, align 4
  %v0_100036c8 = load i32, i32* @r29, align 4
  store i32 %v0_100036c8, i32* %r3.global-to-local, align 4
  store i32 268449488, i32* @lr, align 4
  %v4_100036cc = inttoptr i32 %v0_100036b8 to i32*
  %v5_100036cc = call i32 @function_10000300(i32 %v0_100036c8, i32* %v4_100036cc, i32 6, i32 65535)
  %v0_100036d0 = load i32, i32* @r28, align 4
  store i32 %v5_100036cc, i32* %r15.global-to-local, align 4
  %v0_100036e0 = load i32, i32* @r29, align 4
  store i32 %v0_100036e0, i32* %r3.global-to-local, align 4
  store i32 268449512, i32* @lr, align 4
  %v4_100036e4 = inttoptr i32 %v0_100036d0 to i32*
  %v5_100036e4 = call i32 @function_10000300(i32 %v0_100036e0, i32* %v4_100036e4, i32 7, i32 53)
  %v0_100036ec = load i32, i32* @r28, align 4
  store i32 %v5_100036e4, i32* %r16.global-to-local, align 4
  %v0_100036fc = load i32, i32* @r29, align 4
  store i32 %v0_100036fc, i32* %r3.global-to-local, align 4
  store i32 268449540, i32* @lr, align 4
  %v4_10003700 = inttoptr i32 %v0_100036ec to i32*
  %v5_10003700 = call i32 @function_10000300(i32 %v0_100036fc, i32* %v4_10003700, i32 9, i32 65535)
  %v0_10003704 = load i32, i32* @r28, align 4
  store i32 %v5_10003700, i32* %r22.global-to-local, align 4
  %v0_10003714 = load i32, i32* @r29, align 4
  store i32 %v0_10003714, i32* %r3.global-to-local, align 4
  store i32 268449564, i32* @lr, align 4
  %v4_10003718 = inttoptr i32 %v0_10003704 to i32*
  %v5_10003718 = call i32 @function_10000300(i32 %v0_10003714, i32* %v4_10003718, i32 0, i32 12)
  %v0_10003724 = load i32, i32* @r28, align 4
  store i32 %v5_10003718, i32* %r24.global-to-local, align 4
  %v0_1000372c = load i32, i32* @r29, align 4
  store i32 %v0_1000372c, i32* %r3.global-to-local, align 4
  store i32 268449588, i32* @lr, align 4
  %v4_10003730 = inttoptr i32 %v0_10003724 to i32*
  %v5_10003730 = call i32 @function_10000238(i32 %v0_1000372c, i32* %v4_10003730, i32 8, i32 0)
  store i32 %v5_10003730, i32* @r28, align 4
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268449600, i32* @lr, align 4
  %v1_1000373c = call i32 @function_10007348(i32 33)
  store i32 33, i32* %r3.global-to-local, align 4
  %v3_10003748 = call i32 @function_10007294(i32 33, i32* null)
  store i32 %v3_10003748, i32* %r3.global-to-local, align 4
  store i32 268449624, i32* @lr, align 4
  %v2_10003754 = call i32 @function_10007e18(i32 %v3_10003748, i32 0)
  store i32 %v2_10003754, i32* @r31, align 4
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268449636, i32* @lr, align 4
  %v1_10003760 = call i32 @function_100072bc(i32 33)
  store i32 %v1_10003760, i32* %r3.global-to-local, align 4
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = icmp slt i32 %v0_10003764, 0
  %v3_10003764 = icmp eq i32 %v0_10003764, 0
  store i1 %v1_10003764, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003764, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003764, label %dec_label_pc_10003834, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_100035c4
  %v2_1000376c = ptrtoint i32* %stack_var_-2164 to i32
  store i32 %v2_1000376c, i32* %r27.global-to-local, align 4
  store i32 %v0_10003764, i32* %r3.global-to-local, align 4
  store i32 268449664, i32* @lr, align 4
  %v3_1000377c = call i32 @function_10007ee8(i32 %v0_10003764, i32 %v2_1000376c, i32 2048)
  store i32 %v3_1000377c, i32* %r30.global-to-local, align 4
  %v0_10003784 = load i32, i32* @r31, align 4
  store i32 %v0_10003784, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000378c.25 to i32), i32* @lr, align 4
  %v0_10003788 = call i32 @function_10007cb0()
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268449684, i32* @lr, align 4
  %v1_10003790 = call i32 @function_10007348(i32 34)
  store i32 34, i32* %r3.global-to-local, align 4
  %v3_1000379c = call i32 @function_10007294(i32 34, i32* null)
  %v0_100037a0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_1000376c, i32* %r3.global-to-local, align 4
  %v3_100037ac = bitcast i32* %stack_var_-2164 to i8*
  %v4_100037ac = call i32 @function_10007a34(i8* %v3_100037ac, i32 %v0_100037a0, i32 %v3_1000379c)
  store i32 %v4_100037ac, i32* @r31, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268449724, i32* @lr, align 4
  %v1_100037b8 = call i32 @function_100072bc(i32 34)
  store i32 %v1_100037b8, i32* %r3.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v1_100037bc = icmp slt i32 %v0_100037bc, -1
  %v3_100037bc = icmp eq i32 %v0_100037bc, -1
  store i1 %v1_100037bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100037bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100037bc, label %dec_label_pc_10003834, label %dec_label_pc_100037c4

dec_label_pc_100037c4:                            ; preds = %dec_label_pc_1000376c
  %v0_100037c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100037c4 = icmp slt i32 %v0_100037c4, %v0_100037bc
  %v3_100037c4 = icmp sgt i32 %v0_100037c4, %v0_100037bc
  %v4_100037c4 = icmp eq i32 %v0_100037c4, %v0_100037bc
  store i1 %v2_100037c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100037c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100037c4, label %dec_label_pc_100037cc, label %dec_label_pc_10003834

dec_label_pc_100037cc:                            ; preds = %dec_label_pc_100037c4
  %v2_100037cc = sub i32 %v0_100037c4, %v0_100037bc
  store i32 %v2_100037cc, i32* %r0.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037c4, -1
  store i32 %v1_100037d0, i32* %r3.global-to-local, align 4
  store i32 %v2_100037cc, i32* %ctr.global-to-local, align 4
  store i32 %v0_100037bc, i32* %r29.global-to-local, align 4
  %v0_100037dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100037dc = add i32 %v0_100037dc, %v0_100037bc
  store i32 %v2_100037dc, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100037e4 = ptrtoint i32* %stack_var_-2196 to i32
  store i32 %v2_100037e4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100037e8

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_1000382c, %dec_label_pc_100037cc
  %v0_10003830 = phi i32 [ %v1_10003830, %dec_label_pc_1000382c ], [ %v2_100037cc, %dec_label_pc_100037cc ]
  %v0_1000382c = phi i32 [ %v1_1000382c, %dec_label_pc_1000382c ], [ %v0_100037bc, %dec_label_pc_100037cc ]
  %v0_100037f4 = phi i32 [ %v1_100037f4, %dec_label_pc_1000382c ], [ %v2_100037dc, %dec_label_pc_100037cc ]
  %v0_100037e8 = phi i32 [ %v0_100037e85, %dec_label_pc_1000382c ], [ 0, %dec_label_pc_100037cc ]
  %v1_100037e8 = icmp slt i32 %v0_100037e8, 0
  %v3_100037e8 = icmp eq i32 %v0_100037e8, 0
  store i1 %v1_100037e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100037e8, i1* %cr7_eq.global-to-local, align 1
  %v1_100037ec = inttoptr i32 %v0_100037f4 to i8*
  %v2_100037ec = load i8, i8* %v1_100037ec, align 1
  %v3_100037ec = zext i8 %v2_100037ec to i32
  store i32 %v3_100037ec, i32* %r9.global-to-local, align 4
  %v4_100037f0 = icmp eq i32 %v1_100037d0, %v0_1000382c
  %v1_100037f4 = add i32 %v0_100037f4, 1
  store i32 %v1_100037f4, i32* %r11.global-to-local, align 4
  br i1 %v3_100037e8, label %dec_label_pc_10003804, label %dec_label_pc_10003814

dec_label_pc_10003804:                            ; preds = %dec_label_pc_100037e8
  %v1_10003804 = icmp ult i8 %v2_100037ec, 9
  %v3_10003804 = icmp eq i8 %v2_100037ec, 9
  store i1 %v1_10003804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003804, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_100037ec, label %dec_label_pc_10003810 [
    i8 32, label %dec_label_pc_1000382c
    i8 9, label %dec_label_pc_1000382c
  ]

dec_label_pc_10003810:                            ; preds = %dec_label_pc_10003804
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003814

dec_label_pc_10003814:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003810
  %v0_100037e86 = phi i32 [ %v0_100037e8, %dec_label_pc_100037e8 ], [ 1, %dec_label_pc_10003810 ]
  %v1_10003814 = add nuw nsw i32 %v3_100037ec, 208
  %v1_10003818 = urem i32 %v1_10003814, 256
  store i32 %v1_10003818, i32* %r0.global-to-local, align 4
  %v1_1000381c = icmp ult i32 %v1_10003818, 9
  %v2_1000381c = icmp ugt i32 %v1_10003818, 9
  %v3_1000381c = icmp eq i32 %v1_10003818, 9
  store i1 %v1_1000381c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000381c, i1* %cr7_eq.global-to-local, align 1
  %v3_100037f8.not = icmp ne i8 %v2_100037ec, 46
  %brmerge.not = and i1 %v3_100037f8.not, %v2_1000381c
  %brmerge25 = or i1 %v4_100037f0, %brmerge.not
  br i1 %brmerge25, label %dec_label_pc_10003c20, label %dec_label_pc_1000382c

dec_label_pc_1000382c:                            ; preds = %dec_label_pc_10003814, %dec_label_pc_10003804, %dec_label_pc_10003804
  %v0_100037e85 = phi i32 [ 0, %dec_label_pc_10003804 ], [ 0, %dec_label_pc_10003804 ], [ %v0_100037e86, %dec_label_pc_10003814 ]
  %v1_1000382c = add i32 %v0_1000382c, 1
  store i32 %v1_1000382c, i32* %r29.global-to-local, align 4
  %v1_10003830 = add i32 %v0_10003830, -1
  store i32 %v1_10003830, i32* %ctr.global-to-local, align 4
  %v2_10003830 = icmp eq i32 %v1_10003830, 0
  br i1 %v2_10003830, label %dec_label_pc_10003834, label %dec_label_pc_100037e8

dec_label_pc_10003834:                            ; preds = %dec_label_pc_1000382c, %dec_label_pc_100037c4, %dec_label_pc_1000376c, %dec_label_pc_100035c4
  %v0_10003834 = call i32 @function_100048a8()
  %v1_10003838 = urem i32 %v0_10003834, 4
  store i32 %v1_10003838, i32* %r3.global-to-local, align 4
  %v1_1000383c = icmp eq i32 %v1_10003838, 0
  %v3_1000383c = icmp eq i32 %v1_10003838, 1
  store i1 %v1_1000383c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000383c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000383c, label %dec_label_pc_10003868, label %dec_label_pc_10003844

dec_label_pc_10003844:                            ; preds = %dec_label_pc_10003834
  store i1 %v1_1000383c, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000383c, label %dec_label_pc_10003c84, label %dec_label_pc_1000384c

dec_label_pc_1000384c:                            ; preds = %dec_label_pc_10003844
  %v2_1000384c = icmp eq i32 %v1_10003838, 3
  %v3_1000384c = icmp eq i32 %v1_10003838, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000384c, label %dec_label_pc_10003c90, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000384c
  %v1_10003854 = icmp ne i32 %v1_10003838, 3
  store i1 %v1_10003854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000384c, label %dec_label_pc_1000385c, label %dec_label_pc_10003870

dec_label_pc_1000385c:                            ; preds = %dec_label_pc_10003854
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003868:                            ; preds = %dec_label_pc_10003834
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003870:                            ; preds = %dec_label_pc_10003854, %dec_label_pc_10003c90, %dec_label_pc_10003c84, %dec_label_pc_10003c20, %dec_label_pc_1000385c, %dec_label_pc_10003868
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449912, i32* @lr, align 4
  %v0_10003874 = call i32 @function_10008038()
  %v0_10003878 = load i32, i32* @r28, align 4
  %v1_10003878 = icmp slt i32 %v0_10003878, 0
  %v3_10003878 = icmp eq i32 %v0_10003878, 0
  store i1 %v1_10003878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003878, i1* %cr7_eq.global-to-local, align 1
  %v1_1000387c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000387c = add i32 %v1_1000387c, %v0_10003874
  store i32 %v2_1000387c, i32* %r3.global-to-local, align 4
  br i1 %v3_10003878, label %dec_label_pc_10003b84, label %dec_label_pc_10003888

dec_label_pc_10003888:                            ; preds = %dec_label_pc_10003870
  store i32 %v0_10003878, i32* %r3.global-to-local, align 4
  store i32 268449936, i32* @lr, align 4
  %v1_1000388c = inttoptr i32 %v0_10003878 to i8*
  %v2_1000388c = call i32 @function_10007728(i8* %v1_1000388c)
  store i32 %v2_1000388c, i32* %r18.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449956, i32* @lr, align 4
  %v3_100038a0 = call i32 @function_1000866c(i32 2, i32 3, i32 17)
  store i32 %v3_100038a0, i32* %r3.global-to-local, align 4
  %v1_100038a4 = icmp slt i32 %v3_100038a0, -1
  %v3_100038a4 = icmp eq i32 %v3_100038a0, -1
  store i1 %v1_100038a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038a4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100038a0, i32* %r23.global-to-local, align 4
  br i1 %v3_100038a4, label %dec_label_pc_10003b84, label %dec_label_pc_100038b0

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_10003888
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100038bc = ptrtoint i32* %stack_var_-2200 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2200, align 4
  store i32 268449996, i32* @lr, align 4
  %v4_100038c8 = call i32 @function_10008630(i32 0, i32 3, i32 %v2_100038bc, i32 4)
  store i32 %v4_100038c8, i32* %r3.global-to-local, align 4
  %v1_100038cc = icmp slt i32 %v4_100038c8, -1
  %v3_100038cc = icmp eq i32 %v4_100038c8, -1
  store i1 %v1_100038cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100038cc, label %dec_label_pc_10003c9c, label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038b0
  %v0_100038d4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100038d4 = icmp slt i32 %v0_100038d4, 0
  %v3_100038d4 = icmp eq i32 %v0_100038d4, 0
  store i1 %v1_100038d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100038d4, i1* %cr7_eq.global-to-local, align 1
  %v0_100038d8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100038d8 = urem i32 %v0_100038d8, 65536
  store i32 %v1_100038d8, i32* %r14.global-to-local, align 4
  %v5_100038dc = trunc i32 %v0_100038d8 to i16
  %v0_100038e0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100038e0 = urem i32 %v0_100038e0, 256
  store i32 %v1_100038e0, i32* @r30, align 4
  %v0_100038e4 = call i32 @__asm_mfcr()
  store i32 %v0_100038e4, i32* %r3.global-to-local, align 4
  %v0_100038ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100038ec = urem i32 %v0_100038ec, 65536
  store i32 %v1_100038ec, i32* %r14.global-to-local, align 4
  %v0_100038f0 = load i32, i32* %r16.global-to-local, align 4
  %v1_100038f0 = urem i32 %v0_100038f0, 65536
  store i32 %v1_100038f0, i32* %r15.global-to-local, align 4
  %v0_100038f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100038f4 = urem i32 %v0_100038f4, 65536
  store i32 %v1_100038f4, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2200, align 4
  %v0_10003904 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10003904 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10003904 = or i1 %v0_10003904, %v1_10003904
  br i1 %v2_10003904, label %dec_label_pc_10003a68.preheader, label %dec_label_pc_10003908

dec_label_pc_10003908:                            ; preds = %dec_label_pc_100038d4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, %v0_10003908
  %v1_1000390c = icmp slt i32 %v1_10003908, 0
  %v3_1000390c = icmp eq i32 %v1_10003908, 0
  store i1 %v1_1000390c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000390c, i1* %cr4_eq.global-to-local, align 1
  %v1_10003910 = urem i32 %v2_10003908, 65536
  %v0_10003914 = load i32, i32* %r25.global-to-local, align 4
  %v3_10003914 = icmp eq i32 %v0_10003914, 0
  store i1 %v3_10003914, i1* %cr3_eq.global-to-local, align 1
  %v1_10003918 = add nuw nsw i32 %v1_10003910, 27
  store i32 %v1_10003918, i32* %r0.global-to-local, align 4
  %v1_1000391c = add nuw nsw i32 %v1_10003910, 47
  store i32 %v1_1000391c, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10003908, 47
  %v1_10003920 = urem i32 %fold, 65536
  store i32 %v1_10003920, i32* %r24.global-to-local, align 4
  %fold4 = add i32 %v2_10003908, 27
  %v1_10003924 = urem i32 %fold4, 65536
  store i32 %v1_10003924, i32* %r25.global-to-local, align 4
  %v1_10003928 = add i32 %v1_10003908, 1
  store i32 %v1_10003928, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268566528, i32* %r22.global-to-local, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  %v4_1000398c = sext i8 %v5_100036a4 to i32
  br label %dec_label_pc_10003938

dec_label_pc_10003938:                            ; preds = %dec_label_pc_10003c54, %dec_label_pc_10003a44, %dec_label_pc_10003908
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268450116, i32* @lr, align 4
  %v2_10003940 = call i32 @function_100089c8(i32 600, i32 1)
  store i32 %v2_10003940, i32* %r3.global-to-local, align 4
  %v3_10003944 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003944, i32* %r0.global-to-local, align 4
  %v0_10003948 = load i32, i32* @r31, align 4
  %v1_10003948 = mul i32 %v0_10003948, 4
  store i32 %v1_10003948, i32* %r9.global-to-local, align 4
  %v2_1000394c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000394c = add i32 %v2_1000394c, %v1_10003948
  %v4_1000394c = inttoptr i32 %v3_1000394c to i32*
  store i32 %v2_10003940, i32* %v4_1000394c, align 4
  %v0_10003950 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003950 = mul i32 %v0_10003950, 4
  store i32 %v1_10003950, i32* %r0.global-to-local, align 4
  %v0_10003954 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003954 = add i32 %v0_10003954, %v1_10003950
  %v3_10003954 = inttoptr i32 %v2_10003954 to i32*
  %v4_10003954 = load i32, i32* %v3_10003954, align 4
  store i32 %v4_10003954, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000395c = inttoptr i32 %v4_10003954 to i32*
  %v2_1000395c = load i32, i32* %v1_1000395c, align 4
  store i32 %v2_1000395c, i32* %r9.global-to-local, align 4
  %v1_10003960 = add i32 %v4_10003954, 20
  store i32 %v1_10003960, i32* %r10.global-to-local, align 4
  %v1_10003964 = add i32 %v4_10003954, 28
  store i32 %v1_10003964, i32* %r8.global-to-local, align 4
  %v1_10003968 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003968, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003970 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003970, i32* %r9.global-to-local, align 4
  %v1_10003974 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003974 = inttoptr i32 %v1_10003974 to i32*
  store i32 %v1_10003970, i32* %v2_10003974, align 4
  %v0_10003978 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003978 = trunc i32 %v0_10003978 to i16
  %v2_10003978 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003978 = add i32 %v2_10003978, 2
  %v4_10003978 = inttoptr i32 %v3_10003978 to i16*
  store i16 %v1_10003978, i16* %v4_10003978, align 2
  %v2_10003980 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003980 = add i32 %v2_10003980, 4
  %v4_10003980 = inttoptr i32 %v3_10003980 to i16*
  store i16 %v5_100038dc, i16* %v4_10003980, align 2
  %v2_10003988 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003988 = add i32 %v2_10003988, 1
  %v4_10003988 = inttoptr i32 %v3_10003988 to i8*
  store i8 %v5_10003670, i8* %v4_10003988, align 1
  store i32 %v4_1000398c, i32* %r0.global-to-local, align 4
  %v2_10003990 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003990 = add i32 %v2_10003990, 8
  %v4_10003990 = inttoptr i32 %v3_10003990 to i8*
  store i8 %v5_100036a4, i8* %v4_10003990, align 1
  %v0_10003994 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003994, label %dec_label_pc_100039a0, label %dec_label_pc_10003998

dec_label_pc_10003998:                            ; preds = %dec_label_pc_10003938
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000399c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000399c = add i32 %v2_1000399c, 6
  %v4_1000399c = inttoptr i32 %v3_1000399c to i16*
  store i16 16384, i16* %v4_1000399c, align 2
  br label %dec_label_pc_100039a0

dec_label_pc_100039a0:                            ; preds = %dec_label_pc_10003938, %dec_label_pc_10003998
  %v0_100039a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100039a4 = add i32 %v0_100039a4, 41
  store i32 %v1_100039a4, i32* %r9.global-to-local, align 4
  %v3_100039a8 = add i32 %v0_100039a4, 9
  %v4_100039a8 = inttoptr i32 %v3_100039a8 to i8*
  store i8 17, i8* %v4_100039a8, align 1
  %v0_100039ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100039ac = load i32, i32* @r30, align 4
  %v2_100039ac = add i32 %v1_100039ac, %v0_100039ac
  store i32 %v2_100039ac, i32* %r29.global-to-local, align 4
  %v0_100039b0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100039b0 = trunc i32 %v0_100039b0 to i16
  %v2_100039b0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100039b0 = add i32 %v2_100039b0, 4
  %v4_100039b0 = inttoptr i32 %v3_100039b0 to i16*
  store i16 %v1_100039b0, i16* %v4_100039b0, align 2
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100039b4 = add i32 %v0_100039b4, 1
  store i32 %v1_100039b4, i32* %r31.global-to-local, align 4
  %v3_100039b8 = load i32, i32* @global_var_1001a998.12, align 4
  store i32 %v3_100039b8, i32* %r0.global-to-local, align 4
  store i32 %v1_100039b4, i32* %r3.global-to-local, align 4
  %v0_100039c0 = load i32, i32* %r15.global-to-local, align 4
  %v1_100039c0 = trunc i32 %v0_100039c0 to i16
  %v2_100039c0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100039c0 = add i32 %v2_100039c0, 2
  %v4_100039c0 = inttoptr i32 %v3_100039c0 to i16*
  store i16 %v1_100039c0, i16* %v4_100039c0, align 2
  %v0_100039c4 = load i32, i32* @r28, align 4
  %v0_100039c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100039c8 = add i32 %v1_100039c8, 12
  %v3_100039c8 = inttoptr i32 %v2_100039c8 to i32*
  store i32 %v0_100039c8, i32* %v3_100039c8, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100039d0 = load i32, i32* %r14.global-to-local, align 4
  %v1_100039d0 = trunc i32 %v0_100039d0 to i16
  %v2_100039d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039d0 = add i32 %v2_100039d0, 20
  %v4_100039d0 = inttoptr i32 %v3_100039d0 to i16*
  store i16 %v1_100039d0, i16* %v4_100039d0, align 2
  %v0_100039d4 = load i32, i32* %r26.global-to-local, align 4
  %v0_100039d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100039d8 = trunc i32 %v0_100039d8 to i16
  %v2_100039d8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100039d8 = add i32 %v2_100039d8, 2
  %v4_100039d8 = inttoptr i32 %v3_100039d8 to i16*
  store i16 %v1_100039d8, i16* %v4_100039d8, align 2
  %v0_100039dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100039dc = trunc i32 %v0_100039dc to i16
  %v2_100039dc = load i32, i32* %r8.global-to-local, align 4
  %v3_100039dc = add i32 %v2_100039dc, 4
  %v4_100039dc = inttoptr i32 %v3_100039dc to i16*
  store i16 %v1_100039dc, i16* %v4_100039dc, align 2
  %v0_100039e0 = load i32, i32* @r21, align 4
  %v1_100039e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100039e0 = add i32 %v1_100039e0, 16
  %v3_100039e0 = inttoptr i32 %v2_100039e0 to i32*
  store i32 %v0_100039e0, i32* %v3_100039e0, align 4
  %v0_100039e4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100039e4 = trunc i32 %v0_100039e4 to i16
  %v2_100039e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039e4 = add i32 %v2_100039e4, 28
  %v4_100039e4 = inttoptr i32 %v3_100039e4 to i16*
  store i16 %v1_100039e4, i16* %v4_100039e4, align 2
  %v0_100039e8 = load i32, i32* @r30, align 4
  %v1_100039e8 = trunc i32 %v0_100039e8 to i8
  %v2_100039e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100039e8 = add i32 %v2_100039e8, 40
  %v4_100039e8 = inttoptr i32 %v3_100039e8 to i8*
  store i8 %v1_100039e8, i8* %v4_100039e8, align 1
  store i32 268450288, i32* @lr, align 4
  %v3_100039ec = call i32 @function_100077ac(i32 %v1_100039b4, i32 %v0_100039c4, i32 %v0_100039d4)
  store i32 %v3_100039ec, i32* %r3.global-to-local, align 4
  %v0_100039f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100039f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100039f0 = or i1 %v0_100039f0, %v1_100039f0
  br i1 %v2_100039f0, label %dec_label_pc_10003c54, label %dec_label_pc_100039f4

dec_label_pc_100039f4:                            ; preds = %dec_label_pc_100039a0
  %v0_100039f4 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100039f4, i32* %ctr.global-to-local, align 4
  %v0_100039f8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100039f8, i32* %r3.global-to-local, align 4
  %v0_100039fc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100039fc, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10003a1c.outer

dec_label_pc_10003a1c.outer:                      ; preds = %dec_label_pc_10003a2c, %dec_label_pc_100039f4
  %v2_10003a2c.ph = phi i32 [ %v0_10003a34, %dec_label_pc_10003a2c ], [ %v0_100039fc, %dec_label_pc_100039f4 ]
  %v0_10003a18.ph = phi i32 [ %v1_10003a40, %dec_label_pc_10003a2c ], [ %v0_100039f4, %dec_label_pc_100039f4 ]
  %v0_10003a14.ph = phi i32 [ %v1_10003a3c, %dec_label_pc_10003a2c ], [ %v0_100039f8, %dec_label_pc_100039f4 ]
  %v0_10003a10.ph = phi i32 [ %v1_10003a30, %dec_label_pc_10003a2c ], [ 0, %dec_label_pc_100039f4 ]
  %v1_10003a1c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10003a1c

dec_label_pc_10003a0c:                            ; preds = %dec_label_pc_10003a1c
  %v1_10003a0c = urem i32 %v1_10003a20, 256
  store i32 %v1_10003a0c, i32* %r8.global-to-local, align 4
  %v1_10003a10 = add i32 %v0_10003a10, 1
  store i32 %v1_10003a10, i32* %r11.global-to-local, align 4
  %v1_10003a14 = add i32 %v0_10003a14, 1
  store i32 %v1_10003a14, i32* %r3.global-to-local, align 4
  %v1_10003a18 = add i32 %v0_10003a18, -1
  store i32 %v1_10003a18, i32* %ctr.global-to-local, align 4
  %v2_10003a18 = icmp eq i32 %v1_10003a18, 0
  br i1 %v2_10003a18, label %dec_label_pc_10003a44.loopexit, label %dec_label_pc_10003a1c

dec_label_pc_10003a1c:                            ; preds = %dec_label_pc_10003a1c.outer, %dec_label_pc_10003a0c
  %v0_10003a18 = phi i32 [ %v1_10003a18, %dec_label_pc_10003a0c ], [ %v0_10003a18.ph, %dec_label_pc_10003a1c.outer ]
  %v0_10003a14 = phi i32 [ %v1_10003a14, %dec_label_pc_10003a0c ], [ %v0_10003a14.ph, %dec_label_pc_10003a1c.outer ]
  %v0_10003a2c = phi i32 [ %v1_10003a0c, %dec_label_pc_10003a0c ], [ 0, %dec_label_pc_10003a1c.outer ]
  %v0_10003a10 = phi i32 [ %v1_10003a10, %dec_label_pc_10003a0c ], [ %v0_10003a10.ph, %dec_label_pc_10003a1c.outer ]
  %v2_10003a1c = add i32 %v1_10003a1c.pre, %v0_10003a10
  %v3_10003a1c = inttoptr i32 %v2_10003a1c to i8*
  %v4_10003a1c = load i8, i8* %v3_10003a1c, align 1
  %v5_10003a1c = zext i8 %v4_10003a1c to i32
  store i32 %v5_10003a1c, i32* %r0.global-to-local, align 4
  %v1_10003a20 = add nuw nsw i32 %v0_10003a2c, 1
  store i32 %v1_10003a20, i32* %r9.global-to-local, align 4
  %v1_10003a24 = icmp ult i8 %v4_10003a1c, 46
  %v3_10003a24 = icmp eq i8 %v4_10003a1c, 46
  store i1 %v1_10003a24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10003a24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003a24, label %dec_label_pc_10003a2c, label %dec_label_pc_10003a0c

dec_label_pc_10003a2c:                            ; preds = %dec_label_pc_10003a1c
  %v1_10003a2c = trunc i32 %v0_10003a2c to i8
  %v3_10003a2c = inttoptr i32 %v2_10003a2c.ph to i8*
  store i8 %v1_10003a2c, i8* %v3_10003a2c, align 1
  %v0_10003a30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003a30 = add i32 %v0_10003a30, 1
  store i32 %v1_10003a30, i32* %r11.global-to-local, align 4
  %v0_10003a34 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10003a34, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_10003a3c = add i32 %v0_10003a34, 1
  store i32 %v1_10003a3c, i32* %r3.global-to-local, align 4
  %v0_10003a40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10003a40 = add i32 %v0_10003a40, -1
  store i32 %v1_10003a40, i32* %ctr.global-to-local, align 4
  %v2_10003a40 = icmp eq i32 %v1_10003a40, 0
  br i1 %v2_10003a40, label %dec_label_pc_10003a44, label %dec_label_pc_10003a1c.outer

dec_label_pc_10003a44.loopexit:                   ; preds = %dec_label_pc_10003a0c
  %extract.t.le = trunc i32 %v1_10003a20 to i8
  br label %dec_label_pc_10003a44

dec_label_pc_10003a44:                            ; preds = %dec_label_pc_10003a2c, %dec_label_pc_10003a44.loopexit
  %v2_10003a44 = phi i32 [ %v2_10003a2c.ph, %dec_label_pc_10003a44.loopexit ], [ %v0_10003a34, %dec_label_pc_10003a2c ]
  %v0_10003a44.off0 = phi i8 [ %extract.t.le, %dec_label_pc_10003a44.loopexit ], [ 0, %dec_label_pc_10003a2c ]
  %v3_10003a44 = inttoptr i32 %v2_10003a44 to i8*
  store i8 %v0_10003a44.off0, i8* %v3_10003a44, align 1
  %v0_10003a48 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003a48 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003a48 = add i32 %v1_10003a48, %v0_10003a48
  store i32 %v2_10003a48, i32* %r9.global-to-local, align 4
  %v0_10003a4c = load i32, i32* %r27.global-to-local, align 4
  %v1_10003a4c = trunc i32 %v0_10003a4c to i16
  %v3_10003a4c = add i32 %v2_10003a48, 4
  %v4_10003a4c = inttoptr i32 %v3_10003a4c to i16*
  store i16 %v1_10003a4c, i16* %v4_10003a4c, align 2
  %v3_10003a50 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003a50, i32* %r11.global-to-local, align 4
  %v0_10003a54 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003a54 = trunc i32 %v0_10003a54 to i16
  %v2_10003a54 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003a54 = add i32 %v2_10003a54, 2
  %v4_10003a54 = inttoptr i32 %v3_10003a54 to i16*
  store i16 %v1_10003a54, i16* %v4_10003a54, align 2
  %v0_10003a58 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003a58 = add i32 %v0_10003a58, 1
  %v1_10003a5c = load i32, i32* %r19.global-to-local, align 4
  %v2_10003a5c = icmp slt i32 %v1_10003a58, %v1_10003a5c
  %v4_10003a5c = icmp eq i32 %v1_10003a58, %v1_10003a5c
  store i1 %v2_10003a5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003a5c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003a58, i32* %stack_var_-2200, align 4
  br i1 %v2_10003a5c, label %dec_label_pc_10003938, label %dec_label_pc_10003a68.preheader

dec_label_pc_10003a68.preheader:                  ; preds = %dec_label_pc_10003a44, %dec_label_pc_10003c54, %dec_label_pc_100038d4
  %v4_10003a88.pre-phi = sext i16 %v5_100038dc to i32
  %v2_10003a74 = urem i32 %v0_100038e4, 16
  %v1_10003a7c = mul nuw i32 %v2_10003a74, 268435456
  br label %dec_label_pc_10003a68

dec_label_pc_10003a68:                            ; preds = %dec_label_pc_10003a68.preheader, %dec_label_pc_10003b70
  store i32 0, i32* %stack_var_-2200, align 4
  store i32 %v2_10003a74, i32* %r0.global-to-local, align 4
  %v1_10003a78 = call %0 @__asm_mtcrf(i32 1, i32 %v2_10003a74)
  store i32 %v1_10003a7c, i32* %r0.global-to-local, align 4
  %v0_10003a80 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10003a80 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10003a80 = or i1 %v0_10003a80, %v1_10003a80
  br i1 %v2_10003a80, label %dec_label_pc_10003b70, label %dec_label_pc_10003a84

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a68
  store i32 %v4_10003a88.pre-phi, i32* %r11.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v0_10003a90 = load i32, i32* @r30, align 4
  %v1_10003a90 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003a90 = add i32 %v1_10003a90, %v0_10003a90
  store i32 %v2_10003a90, i32* %r9.global-to-local, align 4
  %v0_10003a94 = load i32, i32* %r15.global-to-local, align 4
  %v2_10003a94 = icmp slt i32 %v0_10003a94, 65535
  %v4_10003a94 = icmp eq i32 %v0_10003a94, 65535
  store i1 %v2_10003a94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003a94, i1* %cr7_eq.global-to-local, align 1
  store i1 false, i1* %cr2_eq.global-to-local, align 1
  %v0_10003a9c = load i32, i32* %r14.global-to-local, align 4
  %v4_10003a9c = icmp eq i32 %v0_10003a9c, 65535
  store i1 %v4_10003a9c, i1* %cr3_eq.global-to-local, align 1
  %v0_10003aa0 = load i32, i32* %r16.global-to-local, align 4
  %v2_10003aa0 = icmp slt i32 %v0_10003aa0, 65535
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, 65535
  store i1 %v2_10003aa0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v4_10003aa0, i1* %cr4_eq.global-to-local, align 1
  %v0_10003aa4 = call i32 @__asm_mfcr()
  store i32 %v0_10003aa4, i32* %r3.global-to-local, align 4
  %v1_10003aa8 = mul i32 %v0_10003aa4, 268435456
  store i32 %v1_10003aa8, i32* @r24, align 4
  %v0_10003aac = load i32, i32* %r9.global-to-local, align 4
  %v1_10003aac = add i32 %v0_10003aac, 47
  store i32 %v1_10003aac, i32* @r25, align 4
  %v1_10003ab0 = add i32 %v0_10003aac, 27
  store i32 %v1_10003ab0, i32* @r27, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003ac0

dec_label_pc_10003ac0:                            ; preds = %dec_label_pc_10003aec, %dec_label_pc_10003a84
  %v0_10003ac0 = phi i32 [ %v1_10003b60, %dec_label_pc_10003aec ], [ 0, %dec_label_pc_10003a84 ]
  %v1_10003ac0 = mul i32 %v0_10003ac0, 4
  store i32 %v1_10003ac0, i32* %r0.global-to-local, align 4
  %v0_10003ac4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003ac4 = add i32 %v0_10003ac4, %v1_10003ac0
  %v3_10003ac4 = inttoptr i32 %v2_10003ac4 to i32*
  %v4_10003ac4 = load i32, i32* %v3_10003ac4, align 4
  store i32 %v4_10003ac4, i32* @r29, align 4
  %v1_10003ac8 = add i32 %v4_10003ac4, 20
  store i32 %v1_10003ac8, i32* @r28, align 4
  %v1_10003acc = add i32 %v4_10003ac4, 41
  store i32 %v1_10003acc, i32* @r31, align 4
  %v0_10003ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003ad0, label %dec_label_pc_10003be4, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ac0
  %v0_10003ad4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003ad4, label %dec_label_pc_10003bf0, label %dec_label_pc_10003ad8

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003be4, %dec_label_pc_10003ad4
  %v0_10003ad8 = load i32, i32* @r24, align 4
  %v1_10003ad8 = mul i32 %v0_10003ad8, 16
  %v2_10003ad8 = udiv i32 %v0_10003ad8, 268435456
  %v3_10003ad8 = or i32 %v2_10003ad8, %v1_10003ad8
  store i32 %v3_10003ad8, i32* %r24.global-to-local, align 4
  %v1_10003adc = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003ad8)
  %v1_10003ae0 = mul nuw i32 %v2_10003ad8, 268435456
  %v2_10003ae0 = urem i32 %v0_10003ad8, 268435456
  %v3_10003ae0 = or i32 %v1_10003ae0, %v2_10003ae0
  store i32 %v3_10003ae0, i32* @r24, align 4
  %v0_10003ae4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003ae4, label %dec_label_pc_10003c08, label %dec_label_pc_10003ae8

dec_label_pc_10003ae8:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad8
  %v0_10003ae8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003ae8, label %dec_label_pc_10003c14, label %dec_label_pc_10003aec

dec_label_pc_10003aec:                            ; preds = %dec_label_pc_10003c08, %dec_label_pc_10003ae8, %dec_label_pc_10003c14
  %v0_10003aec = load i32, i32* @r31, align 4
  store i32 %v0_10003aec, i32* @r3, align 4
  %v0_10003af0 = load i32, i32* @r30, align 4
  store i32 %v0_10003af0, i32* @r4, align 4
  store i32 268450552, i32* @lr, align 4
  %v0_10003af4 = call i32 @function_10004968()
  %v0_10003af8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af8 = load i32, i32* @r31, align 4
  %v2_10003af8 = load i32, i32* @r30, align 4
  %v3_10003af8 = trunc i32 %v0_10003af8 to i8
  %v4_10003af8 = add i32 %v2_10003af8, %v1_10003af8
  %v5_10003af8 = inttoptr i32 %v4_10003af8 to i8*
  store i8 %v3_10003af8, i8* %v5_10003af8, align 1
  %v0_10003afc = load i32, i32* @r26, align 4
  %v1_10003afc = trunc i32 %v0_10003afc to i16
  %v2_10003afc = load i32, i32* @r29, align 4
  %v3_10003afc = add i32 %v2_10003afc, 10
  %v4_10003afc = inttoptr i32 %v3_10003afc to i16*
  store i16 %v1_10003afc, i16* %v4_10003afc, align 2
  %v0_10003b04 = load i32, i32* @r29, align 4
  store i32 %v0_10003b04, i32* @r3, align 4
  %v2_10003b08 = call i32 @function_10003ca8(i32 %v0_10003b04, i32 20)
  %v3_10003b08 = trunc i32 %v2_10003b08 to i16
  %v0_10003b0c = load i32, i32* @r28, align 4
  store i32 %v0_10003b0c, i32* @r4, align 4
  %v3_10003b10 = load i32, i32* @r29, align 4
  %v4_10003b10 = add i32 %v3_10003b10, 10
  %v5_10003b10 = inttoptr i32 %v4_10003b10 to i16*
  store i16 %v3_10003b08, i16* %v5_10003b10, align 2
  %v0_10003b14 = load i32, i32* @r27, align 4
  %v0_10003b18 = load i32, i32* @r26, align 4
  %v1_10003b18 = trunc i32 %v0_10003b18 to i16
  %v2_10003b18 = load i32, i32* @r28, align 4
  %v3_10003b18 = add i32 %v2_10003b18, 6
  %v4_10003b18 = inttoptr i32 %v3_10003b18 to i16*
  store i16 %v1_10003b18, i16* %v4_10003b18, align 2
  %v0_10003b1c = load i32, i32* @r29, align 4
  store i32 %v0_10003b1c, i32* %r3.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r28, align 4
  %v1_10003b20 = add i32 %v0_10003b20, 4
  %v2_10003b20 = inttoptr i32 %v1_10003b20 to i16*
  %v3_10003b20 = load i16, i16* %v2_10003b20, align 2
  %v4_10003b20 = zext i16 %v3_10003b20 to i32
  %v4_10003b24 = call i32 @function_10003d0c(i32 %v0_10003b1c, i32 %v0_10003b0c, i32 %v4_10003b20, i32 %v0_10003b14)
  %v5_10003b24 = trunc i32 %v4_10003b24 to i16
  store i32 %v4_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003b28, i32* %r7.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r28, align 4
  %v1_10003b2c = add i32 %v0_10003b2c, 2
  %v2_10003b2c = inttoptr i32 %v1_10003b2c to i16*
  %v3_10003b2c = load i16, i16* %v2_10003b2c, align 2
  %v4_10003b2c = zext i16 %v3_10003b2c to i32
  store i32 %v4_10003b2c, i32* %r0.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r29, align 4
  %v1_10003b34 = mul i32 %v3_10003b28, 24
  store i32 %v1_10003b34, i32* %r7.global-to-local, align 4
  %v4_10003b38 = add i32 %v0_10003b2c, 6
  %v5_10003b38 = inttoptr i32 %v4_10003b38 to i16*
  store i16 %v5_10003b24, i16* %v5_10003b38, align 2
  %v0_10003b3c = load i32, i32* @r25, align 4
  %v0_10003b40 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003b40, i32* %r3.global-to-local, align 4
  %v0_10003b44 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003b44 = load i32, i32* %r17.global-to-local, align 4
  %v2_10003b44 = add i32 %v1_10003b44, %v0_10003b44
  store i32 %v2_10003b44, i32* %r7.global-to-local, align 4
  %v0_10003b4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b4c = trunc i32 %v0_10003b4c to i16
  %v3_10003b4c = add i32 %v2_10003b44, 2
  %v4_10003b4c = inttoptr i32 %v3_10003b4c to i16*
  store i16 %v1_10003b4c, i16* %v4_10003b4c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10003b54 = load i32, i32* @r21, align 4
  %v2_10003b54 = add i32 %v2_10003b44, 4
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %v0_10003b54, i32* %v3_10003b54, align 4
  store i32 268450652, i32* @lr, align 4
  %v6_10003b58 = call i32 @function_100085f0(i32 %v0_10003b40, i32 %v0_10003b30, i32 %v0_10003b3c, i32 16384, i32 %v2_10003b44, i32 16)
  store i32 %v6_10003b58, i32* %r3.global-to-local, align 4
  %v3_10003b5c = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003b5c, i32* %r9.global-to-local, align 4
  %v1_10003b60 = add i32 %v3_10003b5c, 1
  store i32 %v1_10003b60, i32* %r0.global-to-local, align 4
  %v1_10003b64 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003b64 = icmp slt i32 %v1_10003b60, %v1_10003b64
  %v4_10003b64 = icmp eq i32 %v1_10003b60, %v1_10003b64
  store i1 %v2_10003b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003b64, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003b60, i32* %stack_var_-2200, align 4
  br i1 %v2_10003b64, label %dec_label_pc_10003ac0, label %dec_label_pc_10003b70

dec_label_pc_10003b70:                            ; preds = %dec_label_pc_10003aec, %dec_label_pc_10003a68
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268450680, i32* @lr, align 4
  %v0_10003b74 = call i32 @function_10008038()
  store i32 %v0_10003b74, i32* %r3.global-to-local, align 4
  store i32 %v2_1000387c, i32* %r0.global-to-local, align 4
  %v2_10003b7c = icmp slt i32 %v2_1000387c, %v0_10003b74
  %v4_10003b7c = icmp eq i32 %v2_1000387c, %v0_10003b74
  store i1 %v2_10003b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003b7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003b7c, label %dec_label_pc_10003b84, label %dec_label_pc_10003a68

dec_label_pc_10003b84:                            ; preds = %dec_label_pc_10003b70, %dec_label_pc_10003888, %dec_label_pc_10003870, %dec_label_pc_10003c9c
  store i32 %v0_100035e0, i32* %r0.global-to-local, align 4
  %v1_10003b98 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100035cc)
  store i32 %v0_10003614, i32* %r24.global-to-local, align 4
  store i32 %v0_10003618, i32* %r25.global-to-local, align 4
  store i32 %v0_100035d8, i32* %r26.global-to-local, align 4
  store i32 %v0_1000363c, i32* %r27.global-to-local, align 4
  store i32 %v0_10003624, i32* %r29.global-to-local, align 4
  store i32 %v0_10003640, i32* %r30.global-to-local, align 4
  store i32 %v0_1000362c, i32* %r31.global-to-local, align 4
  %v0_10003be0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003be0

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003ac0
  %v0_10003be4 = call i32 @function_100048a8()
  %v1_10003be4 = trunc i32 %v0_10003be4 to i16
  store i32 %v0_10003be4, i32* %r3.global-to-local, align 4
  %v3_10003be8 = load i32, i32* @r29, align 4
  %v4_10003be8 = add i32 %v3_10003be8, 4
  %v5_10003be8 = inttoptr i32 %v4_10003be8 to i16*
  store i16 %v1_10003be4, i16* %v5_10003be8, align 2
  %v0_10003bec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003bec, label %dec_label_pc_10003bf0, label %dec_label_pc_10003ad8

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003be4, %dec_label_pc_10003ad4
  %v0_10003bf0 = call i32 @function_100048a8()
  %v1_10003bf0 = trunc i32 %v0_10003bf0 to i16
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v0_10003bf4 = load i32, i32* @r24, align 4
  %v1_10003bf4 = mul i32 %v0_10003bf4, 16
  %v2_10003bf4 = udiv i32 %v0_10003bf4, 268435456
  %v3_10003bf4 = or i32 %v2_10003bf4, %v1_10003bf4
  store i32 %v3_10003bf4, i32* %r24.global-to-local, align 4
  %v1_10003bf8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003bf4)
  %v1_10003bfc = mul nuw i32 %v2_10003bf4, 268435456
  %v2_10003bfc = urem i32 %v0_10003bf4, 268435456
  %v3_10003bfc = or i32 %v1_10003bfc, %v2_10003bfc
  store i32 %v3_10003bfc, i32* @r24, align 4
  %v3_10003c00 = load i32, i32* @r29, align 4
  %v4_10003c00 = add i32 %v3_10003c00, 20
  %v5_10003c00 = inttoptr i32 %v4_10003c00 to i16*
  store i16 %v1_10003bf0, i16* %v5_10003c00, align 2
  %v0_10003c04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003c04, label %dec_label_pc_10003c08, label %dec_label_pc_10003ae8

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad8
  %v0_10003c08 = call i32 @function_100048a8()
  %v1_10003c08 = trunc i32 %v0_10003c08 to i16
  store i32 %v0_10003c08, i32* %r3.global-to-local, align 4
  %v3_10003c0c = load i32, i32* @r28, align 4
  %v4_10003c0c = add i32 %v3_10003c0c, 2
  %v5_10003c0c = inttoptr i32 %v4_10003c0c to i16*
  store i16 %v1_10003c08, i16* %v5_10003c0c, align 2
  %v0_10003c10 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003c10, label %dec_label_pc_10003c14, label %dec_label_pc_10003aec

dec_label_pc_10003c14:                            ; preds = %dec_label_pc_10003c08, %dec_label_pc_10003ae8
  %v0_10003c14 = call i32 @function_100048a8()
  %v1_10003c14 = trunc i32 %v0_10003c14 to i16
  store i32 %v0_10003c14, i32* %r3.global-to-local, align 4
  %v3_10003c18 = load i32, i32* @r29, align 4
  %v4_10003c18 = add i32 %v3_10003c18, 28
  %v5_10003c18 = inttoptr i32 %v4_10003c18 to i16*
  store i16 %v1_10003c14, i16* %v5_10003c18, align 2
  br label %dec_label_pc_10003aec

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003814
  %v2_10003c20 = sub i32 %v0_1000382c, %v0_100037bc
  store i32 %v2_10003c20, i32* %r29.global-to-local, align 4
  store i32 %v2_100037e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003c34.26 to i32), i32* @lr, align 4
  %v3_10003c30 = call i32 @function_100077ac(i32 %v2_100037e4, i32 %v2_100037dc, i32 %v2_10003c20)
  %v2_10003c34 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10003c38 = add i32 %v2_10003c20, %v2_10003c34
  store i32 %v2_10003c38, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10003c40 = add i32 %v2_10003c38, 4
  %v4_10003c40 = inttoptr i32 %v3_10003c40 to i8*
  store i8 0, i8* %v4_10003c40, align 1
  store i32 %v2_100037e4, i32* %r3.global-to-local, align 4
  store i32 268450892, i32* @lr, align 4
  %v1_10003c48 = call i32 @function_100083d0(i32 %v2_100037e4)
  store i32 %v1_10003c48, i32* %r3.global-to-local, align 4
  store i32 %v1_10003c48, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_100039a0
  %v0_10003c54 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10003c54, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_10003c5c = inttoptr i32 %v0_10003c54 to i8*
  store i8 0, i8* %v3_10003c5c, align 1
  %v0_10003c60 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v2_10003c60 = add i32 %v1_10003c60, %v0_10003c60
  store i32 %v2_10003c60, i32* %r9.global-to-local, align 4
  %v0_10003c64 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003c64 = trunc i32 %v0_10003c64 to i16
  %v3_10003c64 = add i32 %v2_10003c60, 4
  %v4_10003c64 = inttoptr i32 %v3_10003c64 to i16*
  store i16 %v1_10003c64, i16* %v4_10003c64, align 2
  %v3_10003c68 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_10003c68, i32* %r11.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v1_10003c6c = trunc i32 %v0_10003c6c to i16
  %v2_10003c6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10003c6c = add i32 %v2_10003c6c, 2
  %v4_10003c6c = inttoptr i32 %v3_10003c6c to i16*
  store i16 %v1_10003c6c, i16* %v4_10003c6c, align 2
  %v0_10003c70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 1
  %v1_10003c74 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003c74 = icmp slt i32 %v1_10003c70, %v1_10003c74
  %v4_10003c74 = icmp eq i32 %v1_10003c70, %v1_10003c74
  store i1 %v2_10003c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10003c74, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003c70, i32* %stack_var_-2200, align 4
  br i1 %v2_10003c74, label %dec_label_pc_10003938, label %dec_label_pc_10003a68.preheader

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003844
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c90:                            ; preds = %dec_label_pc_1000384c
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10003870

dec_label_pc_10003c9c:                            ; preds = %dec_label_pc_100038b0
  %v0_10003c9c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003c9c, i32* %r3.global-to-local, align 4
  store i32 268450980, i32* @lr, align 4
  %v0_10003ca0 = call i32 @function_10007cb0()
  store i32 %v0_10003ca0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003b84

; uselistorder directives
  uselistorder i32 %v1_10003c70, { 0, 2, 1 }
  uselistorder i32 %v0_10003c14, { 1, 0 }
  uselistorder i32 %v0_10003c08, { 1, 0 }
  uselistorder i32 %v0_10003bf4, { 2, 1, 0 }
  uselistorder i32 %v0_10003bf0, { 1, 0 }
  uselistorder i32 %v0_10003be4, { 1, 0 }
  uselistorder i32 %v0_10003b74, { 1, 0, 2 }
  uselistorder i32 %v1_10003b60, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003b24, { 1, 0 }
  uselistorder i32 %v0_10003ad8, { 2, 1, 0 }
  uselistorder i32 %v1_10003ac0, { 1, 0 }
  uselistorder i32 %v2_10003a74, { 2, 1, 0 }
  uselistorder i32 %v1_10003a58, { 0, 2, 1 }
  uselistorder i32 %v1_10003a40, { 2, 1, 0 }
  uselistorder i32 %v1_10003a3c, { 1, 0 }
  uselistorder i32 %v0_10003a34, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10003a30, { 1, 0 }
  uselistorder i32 %v1_10003a20, { 1, 2, 0 }
  uselistorder i32 %v1_10003a18, { 0, 2, 1 }
  uselistorder i32 %v1_10003a0c, { 1, 0 }
  uselistorder i32 %v1_10003950, { 1, 0 }
  uselistorder i32 %v1_10003948, { 1, 0 }
  uselistorder i32 %v2_10003908, { 1, 2, 0 }
  uselistorder i32 %v1_10003908, { 1, 3, 2, 0 }
  uselistorder i32 %v0_100038d8, { 1, 0 }
  uselistorder i32 %v4_100038c8, { 1, 0, 2 }
  uselistorder i32 %v3_100038a0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000387c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10003878, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1000384c, { 1, 0 }
  uselistorder i1 %v1_1000383c, { 1, 0, 2 }
  uselistorder i32 %v1_10003838, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_10003830, { 2, 1, 0 }
  uselistorder i32 %v1_1000382c, { 1, 0 }
  uselistorder i32 %v1_10003818, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100037f4, { 1, 0 }
  uselistorder i32 %v0_100037e8, { 2, 1, 0 }
  uselistorder i32 %v2_100037e4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_100037c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100037bc, { 1, 2, 0, 3, 4, 7, 6, 5, 8, 9 }
  uselistorder i32 %v0_10003764, { 1, 0, 2, 3 }
  uselistorder i8 %v5_100036a4, { 1, 0 }
  uselistorder i32* %stack_var_-2200, { 0, 1, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 29, 12, 13, 14, 15, 16, 17, 1, 18, 20, 19, 21, 22, 23, 24, 25, 0, 26, 27, 28, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 2 }
  uselistorder i32* %r29.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r27.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 15, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 (i32)* @function_100083d0, { 1, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 47, { 1, 0, 2, 3, 4 }
  uselistorder i32 27, { 1, 0, 2, 3 }
  uselistorder i32 34, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_10000300, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 87, 88, 89, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder label %dec_label_pc_10003b84, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10003aec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003a68, { 1, 0 }
  uselistorder label %dec_label_pc_10003a68.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003a44, { 1, 0 }
  uselistorder label %dec_label_pc_10003a1c, { 1, 0 }
  uselistorder label %dec_label_pc_100039a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003870, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10003814, { 1, 0 }
}

define i32 @function_10003ca8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10003ca8:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10003cdc, label %dec_label_pc_10003cb4

dec_label_pc_10003cb4:                            ; preds = %dec_label_pc_10003ca8
  %v1_10003cb4 = add i32 %arg1, -2
  %v1_10003cb8 = udiv i32 %v1_10003cb4, 2
  %v1_10003cbc = add nuw i32 %v1_10003cb8, 1
  %v0_10003cc8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10003cc8

dec_label_pc_10003cc8:                            ; preds = %dec_label_pc_10003cc8, %dec_label_pc_10003cb4
  %v0_10003cd8 = phi i32 [ %v1_10003cd8, %dec_label_pc_10003cc8 ], [ %v1_10003cbc, %dec_label_pc_10003cb4 ]
  %v0_10003cd4 = phi i32 [ %v2_10003cd4, %dec_label_pc_10003cc8 ], [ 0, %dec_label_pc_10003cb4 ]
  %v0_10003cd0 = phi i32 [ %v1_10003cd0, %dec_label_pc_10003cc8 ], [ %v0_10003cc8.pre, %dec_label_pc_10003cb4 ]
  %v1_10003cc8 = inttoptr i32 %v0_10003cd0 to i16*
  %v2_10003cc8 = load i16, i16* %v1_10003cc8, align 2
  %v3_10003cc8 = zext i16 %v2_10003cc8 to i32
  %v1_10003cd0 = add i32 %v0_10003cd0, 2
  store i32 %v1_10003cd0, i32* @r3, align 4
  %v2_10003cd4 = add i32 %v3_10003cc8, %v0_10003cd4
  %v1_10003cd8 = add i32 %v0_10003cd8, -1
  %v2_10003cd8 = icmp eq i32 %v1_10003cd8, 0
  br i1 %v2_10003cd8, label %dec_label_pc_10003cdc.loopexit, label %dec_label_pc_10003cc8

dec_label_pc_10003cdc.loopexit:                   ; preds = %dec_label_pc_10003cc8
  %tmp11 = mul i32 %v1_10003cb8, -2
  %tmp10 = add i32 %v1_10003cb4, %tmp11
  br label %dec_label_pc_10003cdc

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003cdc.loopexit, %dec_label_pc_10003ca8
  %v0_10003ce8 = phi i32 [ 0, %dec_label_pc_10003ca8 ], [ %v2_10003cd4, %dec_label_pc_10003cdc.loopexit ]
  %v0_10003cdc = phi i32 [ %arg1, %dec_label_pc_10003ca8 ], [ %tmp10, %dec_label_pc_10003cdc.loopexit ]
  %v3_10003cdc = icmp eq i32 %v0_10003cdc, 1
  br i1 %v3_10003cdc, label %dec_label_pc_10003ce4, label %dec_label_pc_10003cec

dec_label_pc_10003ce4:                            ; preds = %dec_label_pc_10003cdc
  %v0_10003ce4 = load i32, i32* @r3, align 4
  %v1_10003ce4 = add i32 %v0_10003ce4, 1
  %v2_10003ce4 = inttoptr i32 %v1_10003ce4 to i8*
  %v3_10003ce4 = load i8, i8* %v2_10003ce4, align 1
  %v4_10003ce4 = zext i8 %v3_10003ce4 to i32
  %v2_10003ce8 = add i32 %v4_10003ce4, %v0_10003ce8
  br label %dec_label_pc_10003cec

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003ce4
  %v0_10003cec = phi i32 [ %v0_10003ce8, %dec_label_pc_10003cdc ], [ %v2_10003ce8, %dec_label_pc_10003ce4 ]
  %v1_10003cec = urem i32 %v0_10003cec, 65536
  %v1_10003cf0 = udiv i32 %v0_10003cec, 65536
  %v2_10003cf4 = add nuw nsw i32 %v1_10003cec, %v1_10003cf0
  %v1_10003cf8 = udiv i32 %v2_10003cf4, 65536
  %v2_10003cfc = add nuw nsw i32 %v1_10003cf8, %v2_10003cf4
  %v1_10003d00 = urem i32 %v2_10003cfc, 65536
  %v1_10003d04 = xor i32 %v1_10003d00, 65535
  ret i32 %v1_10003d04

; uselistorder directives
  uselistorder i32 %v2_10003cf4, { 1, 0 }
  uselistorder i32 %v0_10003ce8, { 1, 0 }
  uselistorder i32 %v1_10003cd8, { 1, 0 }
  uselistorder i32 %v1_10003cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003cec, { 1, 0 }
}

define i32 @function_10003d0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d0c:
  %r0.global-to-local = alloca i32, align 4
  %v1_10003d10 = add i32 %arg1, 12
  %v2_10003d10 = inttoptr i32 %v1_10003d10 to i32*
  %v3_10003d10 = load i32, i32* %v2_10003d10, align 4
  %v1_10003d14 = add i32 %arg1, 16
  %v2_10003d14 = inttoptr i32 %v1_10003d14 to i32*
  %v3_10003d14 = load i32, i32* %v2_10003d14, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10003d50, label %dec_label_pc_10003d1c

dec_label_pc_10003d1c:                            ; preds = %dec_label_pc_10003d0c
  %v1_10003d1c = add i32 %arg3, -2
  %v1_10003d24 = icmp slt i32 %v1_10003d1c, 0
  %v1_10003d28 = udiv i32 %v1_10003d1c, 2
  %v1_10003d2c = add nuw i32 %v1_10003d28, 1
  br i1 %v1_10003d24, label %dec_label_pc_10003db8, label %dec_label_pc_10003d38.preheader

dec_label_pc_10003d38.preheader:                  ; preds = %dec_label_pc_10003db8, %dec_label_pc_10003d1c
  %v0_10003d4c4 = phi i32 [ 1, %dec_label_pc_10003db8 ], [ %v1_10003d2c, %dec_label_pc_10003d1c ]
  %v0_10003d38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003d38

dec_label_pc_10003d38:                            ; preds = %dec_label_pc_10003d38.preheader, %dec_label_pc_10003d38
  %v0_10003d4c = phi i32 [ %v0_10003d4c4, %dec_label_pc_10003d38.preheader ], [ %v1_10003d4c, %dec_label_pc_10003d38 ]
  %v0_10003d48 = phi i32 [ 0, %dec_label_pc_10003d38.preheader ], [ %v2_10003d48, %dec_label_pc_10003d38 ]
  %v0_10003d40 = phi i32 [ %v0_10003d38.pre, %dec_label_pc_10003d38.preheader ], [ %v1_10003d40, %dec_label_pc_10003d38 ]
  %v1_10003d38 = inttoptr i32 %v0_10003d40 to i16*
  %v2_10003d38 = load i16, i16* %v1_10003d38, align 2
  %v3_10003d38 = zext i16 %v2_10003d38 to i32
  store i32 %v3_10003d38, i32* %r0.global-to-local, align 4
  %v1_10003d40 = add i32 %v0_10003d40, 2
  %v2_10003d48 = add i32 %v3_10003d38, %v0_10003d48
  %v1_10003d4c = add i32 %v0_10003d4c, -1
  %v2_10003d4c = icmp eq i32 %v1_10003d4c, 0
  br i1 %v2_10003d4c, label %dec_label_pc_10003d50.loopexit, label %dec_label_pc_10003d38

dec_label_pc_10003d50.loopexit:                   ; preds = %dec_label_pc_10003d38
  %tmp14 = mul i32 %v0_10003d4c4, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10003d44 = icmp eq i32 %tmp13, 1
  br i1 %v3_10003d44, label %dec_label_pc_10003da4, label %dec_label_pc_10003d54

dec_label_pc_10003d50:                            ; preds = %dec_label_pc_10003d0c
  %v3_10003d0c = icmp eq i32 %arg3, 1
  br i1 %v3_10003d0c, label %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge, label %dec_label_pc_10003d54

dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge: ; preds = %dec_label_pc_10003d50
  %v0_10003da4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10003da4

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d50.loopexit, %dec_label_pc_10003d50, %dec_label_pc_10003da4
  %v0_10003d6c = phi i32 [ 0, %dec_label_pc_10003d50 ], [ %v2_10003da8, %dec_label_pc_10003da4 ], [ %v2_10003d48, %dec_label_pc_10003d50.loopexit ]
  %v1_10003d54 = urem i32 %v3_10003d10, 65536
  %v1_10003d58 = udiv i32 %v3_10003d10, 65536
  %v2_10003d5c = add nuw nsw i32 %v1_10003d54, %v1_10003d58
  store i32 %v2_10003d5c, i32* %r0.global-to-local, align 4
  %v1_10003d60 = urem i32 %v3_10003d14, 65536
  %v1_10003d64 = add i32 %arg1, 9
  %v2_10003d64 = inttoptr i32 %v1_10003d64 to i8*
  %v3_10003d64 = load i8, i8* %v2_10003d64, align 1
  %v4_10003d64 = zext i8 %v3_10003d64 to i32
  %v1_10003d68 = udiv i32 %v3_10003d14, 65536
  %v2_10003d6c = add i32 %v0_10003d6c, %v1_10003d68
  %v2_10003d74 = add i32 %v2_10003d6c, %v4_10003d64
  %v2_10003d70 = add i32 %v2_10003d5c, %arg2
  %v2_10003d78 = add i32 %v2_10003d70, %v1_10003d60
  %v2_10003d7c = add i32 %v2_10003d78, %v2_10003d74
  store i32 %v2_10003d7c, i32* %r0.global-to-local, align 4
  %v1_10003d80 = call i32 @__asm_rlwinm.(i32 %v2_10003d7c, i32 16, i32 16, i32 31)
  %v4_10003d80 = icmp eq i32 %v1_10003d80, 0
  br i1 %v4_10003d80, label %dec_label_pc_10003d98, label %dec_label_pc_10003d88

dec_label_pc_10003d88:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003d88
  %v1_10003d8c = phi i32 [ %v1_10003d90, %dec_label_pc_10003d88 ], [ %v1_10003d80, %dec_label_pc_10003d54 ]
  %v0_10003d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d88 = urem i32 %v0_10003d88, 65536
  %v2_10003d8c = add i32 %v1_10003d88, %v1_10003d8c
  store i32 %v2_10003d8c, i32* %r0.global-to-local, align 4
  %v1_10003d90 = call i32 @__asm_rlwinm.(i32 %v2_10003d8c, i32 16, i32 16, i32 31)
  %v4_10003d90 = icmp eq i32 %v1_10003d90, 0
  br i1 %v4_10003d90, label %dec_label_pc_10003d98, label %dec_label_pc_10003d88

dec_label_pc_10003d98:                            ; preds = %dec_label_pc_10003d88, %dec_label_pc_10003d54
  %v0_10003d98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d98 = urem i32 %v0_10003d98, 65536
  %v1_10003d9c = xor i32 %v1_10003d98, 65535
  ret i32 %v1_10003d9c

dec_label_pc_10003da4:                            ; preds = %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge, %dec_label_pc_10003d50.loopexit
  %v0_10003da4 = phi i32 [ %v1_10003d40, %dec_label_pc_10003d50.loopexit ], [ %v0_10003da4.pre, %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge ]
  %v0_10003da810 = phi i32 [ %v2_10003d48, %dec_label_pc_10003d50.loopexit ], [ 0, %dec_label_pc_10003d50.dec_label_pc_10003da4_crit_edge ]
  %v1_10003da4 = inttoptr i32 %v0_10003da4 to i8*
  %v2_10003da4 = load i8, i8* %v1_10003da4, align 1
  %v3_10003da4 = zext i8 %v2_10003da4 to i32
  store i32 %v3_10003da4, i32* %r0.global-to-local, align 4
  %v2_10003da8 = add i32 %v3_10003da4, %v0_10003da810
  br label %dec_label_pc_10003d54

dec_label_pc_10003db8:                            ; preds = %dec_label_pc_10003d1c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003d38.preheader

; uselistorder directives
  uselistorder i32 %v1_10003d90, { 1, 0 }
  uselistorder i32 %v1_10003d4c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 40, 41, 4, 3, 5, 43, 42, 44, 13, 14, 15, 45, 6, 7, 16, 46, 17, 47, 0, 8, 48, 49, 18, 19, 20, 52, 53, 50, 51, 54, 55, 21, 22, 67, 9, 56, 57, 23, 24, 25, 26, 1, 10, 58, 59, 27, 28, 29, 30, 31, 60, 32, 33, 68, 11, 62, 61, 63, 34, 35, 36, 2, 12, 65, 64, 66, 37, 38, 39 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003d88, { 1, 0 }
  uselistorder label %dec_label_pc_10003d54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003d38, { 1, 0 }
}

define i32 @function_10003dc4() local_unnamed_addr {
dec_label_pc_10003dc4:
  store i32 268451288, i32* @global_var_1001a978.27, align 4
  %v0_10003dd4 = load i32, i32* @r3, align 4
  ret i32 %v0_10003dd4
}

define i32 @function_10003dd8() local_unnamed_addr {
dec_label_pc_10003dd8:
  store i32 ptrtoint (i32* @global_var_10003df4.28 to i32), i32* @lr, align 4
  %v1_10003df0 = call i32 @function_10007348(i32 1)
  store i32 908470905, i32* @global_var_1001aa68.30, align 4
  %v3_10003e0c = call i32 @function_10007294(i32 1, i32* null)
  %v4_10003e0c = inttoptr i32 %v3_10003e0c to i16*
  %v3_10003e10 = load i16, i16* %v4_10003e0c, align 2
  store i16 %v3_10003e10, i16* bitcast (i32* @global_var_1001aa66.31 to i16*), align 4
  store i32 268451360, i32* @lr, align 4
  %v1_10003e1c = call i32 @function_100072bc(i32 1)
  ret i32 %v1_10003e1c
}

define i32 @function_10003e34(i32 %arg1) local_unnamed_addr {
dec_label_pc_10003e34:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10003e54 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10003e64 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10003e70 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10003e70, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268451452, i32* @lr, align 4
  %v3_10003e78 = call i32 @function_1000866c(i32 2, i32 1, i32 0)
  %v3_10003e7c = icmp eq i32 %v3_10003e78, -1
  store i32 %v3_10003e78, i32* @global_var_1001a970.32, align 4
  br i1 %v3_10003e7c, label %dec_label_pc_10003f2c, label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003e34
  %v2_10003e80 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268451484, i32* @lr, align 4
  %v5_10003e98 = call i32 @function_10008630(i32 %v3_10003e78, i32 1, i32 2, i32 %v2_10003e80)
  %v3_10003e9c = load i32, i32* @global_var_1001a970.32, align 4
  store i32 3, i32* @r4, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @function_10007bc8(i32 %v3_10003e9c)
  store i32 4, i32* @r4, align 4
  store i32 268451528, i32* @lr, align 4
  %v2_10003ec4 = call i32 @function_10007bc8(i32 %v3_10003e9c)
  %v3_10003ec8 = load i8, i8* @global_var_1001a830.33, align 1
  %v3_10003ed0 = icmp eq i8 %v3_10003ec8, 0
  br i1 %v3_10003ed0, label %dec_label_pc_10003f50, label %dec_label_pc_10003edc

dec_label_pc_10003edc:                            ; preds = %dec_label_pc_10003e98
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10003ef0 = call i32 @function_100080c8()
  %v0_10003ef4 = load i32, i32* @r27, align 4
  %v2_10003ef4 = inttoptr i32 %v0_10003ef0 to i32*
  store i32 %v0_10003ef4, i32* %v2_10003ef4, align 4
  store i32 %v0_10003ef0, i32* @r29, align 4
  %v3_10003f04 = load i32, i32* @global_var_1001a970.32, align 4
  store i32 268451596, i32* @lr, align 4
  %v3_10003f08 = call i32 @function_10008438(i32 %v3_10003f04, i32 %v2_10003e70, i32 16)
  %v3_10003f10 = icmp eq i32 %v3_10003f08, -1
  br i1 %v3_10003f10, label %dec_label_pc_10003f98, label %dec_label_pc_10003f1c

dec_label_pc_10003f1c:                            ; preds = %dec_label_pc_10003f50, %dec_label_pc_10003edc
  %v3_10003f24 = load i32, i32* @global_var_1001a970.32, align 4
  store i32 268451628, i32* @lr, align 4
  %v3_10003f28 = call i32 @function_10008510(i32 %v3_10003f24, i32 1, i32 268566528)
  br label %dec_label_pc_10003f2c

dec_label_pc_10003f2c:                            ; preds = %dec_label_pc_10003e34, %dec_label_pc_10003f1c
  %v0_10003f4c = phi i32 [ -1, %dec_label_pc_10003e34 ], [ %v3_10003f28, %dec_label_pc_10003f1c ]
  store i32 %v0_10003e54, i32* @r28, align 4
  store i32 %v0_10003e64, i32* @r31, align 4
  ret i32 %v0_10003f4c

dec_label_pc_10003f50:                            ; preds = %dec_label_pc_10003e98
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10003f6c = call i32 @function_100080c8()
  %v0_10003f70 = load i32, i32* @r27, align 4
  %v2_10003f70 = inttoptr i32 %v0_10003f6c to i32*
  store i32 %v0_10003f70, i32* %v2_10003f70, align 4
  store i32 %v0_10003f6c, i32* @r29, align 4
  %v3_10003f80 = load i32, i32* @global_var_1001a970.32, align 4
  store i32 268451720, i32* @lr, align 4
  %v3_10003f84 = call i32 @function_10008438(i32 %v3_10003f80, i32 %v2_10003e70, i32 16)
  %v3_10003f8c = icmp eq i32 %v3_10003f84, -1
  br i1 %v3_10003f8c, label %dec_label_pc_10003f98, label %dec_label_pc_10003f1c

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f50, %dec_label_pc_10003edc
  %v0_10003f98 = load i32, i32* @r29, align 4
  %v1_10003f98 = inttoptr i32 %v0_10003f98 to i32*
  %v2_10003f98 = load i32, i32* %v1_10003f98, align 4
  %v3_10003f9c = load i32, i32* @global_var_1001a970.32, align 4
  store i32 %v3_10003f9c, i32* @r3, align 4
  %v3_10003fa0 = icmp eq i32 %v2_10003f98, 99
  br i1 %v3_10003fa0, label %dec_label_pc_10003ffc, label %dec_label_pc_10003fa8

dec_label_pc_10003fa8:                            ; preds = %dec_label_pc_10003ffc, %dec_label_pc_10003f98, %dec_label_pc_10004008
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003fc4.34 to i32), i32* @lr, align 4
  %v0_10003fc0 = call i32 @function_1000846c()
  store i32 268451788, i32* @lr, align 4
  %v1_10003fc8 = call i32 @function_10008f9c(i32 5)
  store i32 268451796, i32* @lr, align 4
  %v0_10003fd0 = call i32 @function_10007cb0()
  store i32 268451800, i32* @lr, align 4
  %v1_10003fd4 = call i32 @function_10003e34(i32 %v0_10003fd0)
  store i32 %v0_10003e54, i32* @r28, align 4
  store i32 %v0_10003e64, i32* @r31, align 4
  ret i32 %v1_10003fd4

dec_label_pc_10003ffc:                            ; preds = %dec_label_pc_10003f98
  %v3_10003ffc = load i8, i8* @global_var_1001a830.33, align 1
  %v3_10004000 = icmp eq i8 %v3_10003ffc, 0
  br i1 %v3_10004000, label %dec_label_pc_10003fa8, label %dec_label_pc_10004008

dec_label_pc_10004008:                            ; preds = %dec_label_pc_10003ffc
  %v0_1000400c = load i32, i32* @r27, align 4
  %v1_1000400c = trunc i32 %v0_1000400c to i8
  store i8 %v1_1000400c, i8* @global_var_1001a830.33, align 1
  br label %dec_label_pc_10003fa8

; uselistorder directives
  uselistorder i32 %v2_10003e70, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008438, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001a830.33, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003f2c, { 1, 0 }
}

define i32 @function_10004014(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004014:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10004014 = load i32, i32* @lr, align 4
  store i32 %v0_10004014, i32* %r0.global-to-local, align 4
  %v0_1000401c = load i32, i32* @r31, align 4
  store i32 268451880, i32* @lr, align 4
  %v0_10004024 = call i32 @function_10007cf8()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10004024, i32* @global_var_1001a99c.35, align 4
  %tmp47 = icmp slt i32 %v0_10004024, 1
  br i1 %tmp47, label %dec_label_pc_1000404c, label %dec_label_pc_10004038

dec_label_pc_10004038:                            ; preds = %dec_label_pc_1000404c, %dec_label_pc_10004014
  store i32 %v0_10004014, i32* %r0.global-to-local, align 4
  store i32 %v0_1000401c, i32* @r31, align 4
  ret i32 %v0_10004024

dec_label_pc_1000404c:                            ; preds = %dec_label_pc_10004014
  %v3_1000404c = icmp eq i32 %v0_10004024, -1
  br i1 %v3_1000404c, label %dec_label_pc_10004038, label %dec_label_pc_10004054

dec_label_pc_10004054:                            ; preds = %dec_label_pc_1000404c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004064.36 to i32), i32* @lr, align 4
  %v1_10004060 = call i32 @function_10007348(i32 35)
  store i32 268451948, i32* @lr, align 4
  %v1_10004068 = call i32 @function_10007348(i32 36)
  %v3_10004074 = call i32 @function_10007294(i32 35, i32* null)
  store i32 268451972, i32* @lr, align 4
  %v2_10004080 = call i32 @function_10007e18(i32 %v3_10004074, i32 2)
  %v3_10004084 = icmp eq i32 %v2_10004080, -1
  store i32 %v2_10004080, i32* @r31, align 4
  br i1 %v3_10004084, label %dec_label_pc_100040cc, label %dec_label_pc_10004090

dec_label_pc_10004090:                            ; preds = %dec_label_pc_100040cc, %dec_label_pc_10004054
  %v0_10004094 = phi i32 [ %v2_100040e0, %dec_label_pc_100040cc ], [ %v2_10004080, %dec_label_pc_10004054 ]
  %v2_1000409c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268452008, i32* @lr, align 4
  %v3_100040a4 = call i32 @function_10007ae0(i32 %v0_10004094, i32 -2147199228, i32 %v2_1000409c)
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004090
  %v0_100040ac = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100040c0.37 to i32), i32* @lr, align 4
  %v3_100040bc = call i32 @function_10007ae0(i32 %v0_100040ac, i32 -2147199227, i32 0)
  store i32 268452040, i32* @lr, align 4
  %v1_100040c4 = call i32 @function_10008f9c(i32 10)
  br label %dec_label_pc_100040a8

dec_label_pc_100040cc:                            ; preds = %dec_label_pc_10004054
  %v3_100040d4 = call i32 @function_10007294(i32 36, i32* null)
  store i32 268452068, i32* @lr, align 4
  %v2_100040e0 = call i32 @function_10007e18(i32 %v3_100040d4, i32 2)
  %v3_100040e4 = icmp eq i32 %v2_100040e0, -1
  store i32 %v2_100040e0, i32* @r31, align 4
  br i1 %v3_100040e4, label %dec_label_pc_100040f0, label %dec_label_pc_10004090

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040cc
  store i32 ptrtoint ([3 x i8]* @global_var_100040f8.38 to i32), i32* @lr, align 4
  %v1_100040f4 = call i32 @function_100072bc(i32 35)
  store i32 ptrtoint ([3 x i8]* @global_var_10004100.39 to i32), i32* @lr, align 4
  %v1_100040fc = call i32 @function_100072bc(i32 36)
  %v0_10004104 = call i32 @function_10008f18()
  %v0_1000410c = load i32, i32* @lr, align 4
  %v0_10004110 = load i32, i32* @r29, align 4
  %v2_10004114 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10004114, i32* @r29, align 4
  %v0_10004118 = load i32, i32* @r28, align 4
  store i32 %v0_10004104, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  %v0_10004138 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_10004140 = load i32, i32* @r24, align 4
  %v2_10004144 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10004144, i32* @r24, align 4
  %v0_10004148 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_10004150 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10004158 = load i32, i32* %r15.global-to-local, align 4
  %v0_1000415c = load i32, i32* @r16, align 4
  %v0_10004160 = load i32, i32* %r17.global-to-local, align 4
  %v0_10004164 = load i32, i32* %r18.global-to-local, align 4
  %v0_10004168 = load i32, i32* %r19.global-to-local, align 4
  %v0_1000416c = load i32, i32* %r20.global-to-local, align 4
  %v0_10004170 = load i32, i32* @r23, align 4
  %v0_10004174 = load i32, i32* @r26, align 4
  %v0_10004178 = load i32, i32* @r27, align 4
  %v0_1000417c = load i32, i32* @r30, align 4
  store i32 268452228, i32* @lr, align 4
  %v1_10004180 = call i32 @function_100086ec(i32 %v2_10004114)
  store i32 %v2_10004114, i32* @r3, align 4
  store i32 268452240, i32* @lr, align 4
  %v2_1000418c = call i32 @function_100086a0(i32 %v2_10004114, i32 2)
  store i32 268452256, i32* @lr, align 4
  %v3_1000419c = call i32 @function_10007fc0(i32 0, i32 %v2_10004114, i32 0)
  store i32 268452268, i32* @lr, align 4
  %v2_100041a8 = call i32 @function_10008718(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100041bc.40 to i32), i32* @lr, align 4
  %v2_100041b8 = call i32 @function_10008718(i32 5, i32 268451268)
  store i32 268452288, i32* @lr, align 4
  %v1_100041bc = call i32 @function_10007988(i32 %v2_100041b8)
  store i32 1607941341, i32* %r9.global-to-local, align 4
  store i32 1607941341, i32* @global_var_1001aa68.30, align 4
  store i16 420, i16* bitcast (i32* @global_var_1001aa66.31 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100041bc, i32* @global_var_1001a998.12, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001aa64.29 to i16*), align 4
  store i32 268452328, i32* @lr, align 4
  %v2_100041e4 = call i32 @function_100073d4(i32 %v1_100041bc, i32 1607941341)
  store i32 268451288, i32* %r9.global-to-local, align 4
  store i32 268451288, i32* @global_var_1001a978.27, align 4
  store i32 ptrtoint (i32* @global_var_100041f8.41 to i32), i32* @lr, align 4
  %v1_100041f4 = call i32 @function_10003e34(i32 %v2_100041e4)
  store i32 268452348, i32* @lr, align 4
  %v1_100041f8 = call i32 @function_100048f8(i32 %v1_100041f4)
  store i32 268452360, i32* @lr, align 4
  %v2_10004204 = call i32 @function_100077d0(i32 %v2_10004144, i32 32)
  %v0_10004208 = load i32, i32* @r28, align 4
  %v3_10004208 = icmp eq i32 %v0_10004208, 2
  br i1 %v3_10004208, label %dec_label_pc_10004378, label %dec_label_pc_10004210

dec_label_pc_10004210:                            ; preds = %dec_label_pc_100040f0, %dec_label_pc_10004378, %dec_label_pc_10004388
  %v0_10004210 = call i32 @function_100048a8()
  %v2_10004214 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10004214, i32* @r27, align 4
  store i32 %v0_10004210, i32* %r29.global-to-local, align 4
  %v0_1000421c = load i32, i32* @r31, align 4
  %v1_1000421c = inttoptr i32 %v0_1000421c to i32*
  %v2_1000421c = load i32, i32* %v1_1000421c, align 4
  %v2_10004220 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_10004220, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268452396, i32* @lr, align 4
  %v1_10004228 = inttoptr i32 %v2_1000421c to i8*
  %v2_10004228 = call i32 @function_10007728(i8* %v1_10004228)
  store i32 %v2_10004228, i32* %r28.global-to-local, align 4
  %v0_10004230 = load i32, i32* @r31, align 4
  %v1_10004230 = inttoptr i32 %v0_10004230 to i32*
  %v2_10004230 = load i32, i32* %v1_10004230, align 4
  %v1_10004234 = sub i32 20, %v2_10004228
  store i32 %v1_10004234, i32* @r28, align 4
  store i32 268452412, i32* @lr, align 4
  %v1_10004238 = inttoptr i32 %v2_10004230 to i8*
  %v2_10004238 = call i32 @function_10007728(i8* %v1_10004238)
  %v0_1000423c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000423c = load i32, i32* @r28, align 4
  %v2_1000423c = urem i32 %v0_1000423c, %v1_1000423c
  %v2_10004240 = sub i32 %v0_1000423c, %v2_1000423c
  store i32 %v2_10004240, i32* %r0.global-to-local, align 4
  %v2_10004248 = add i32 %v2_1000423c, %v2_10004238
  store i32 %v2_10004214, i32* @r3, align 4
  store i32 %v2_10004248, i32* @r4, align 4
  %v0_10004254 = load i32, i32* @r30, align 4
  %v2_10004254 = add i32 %v0_10004254, %v2_10004248
  store i32 %v2_10004254, i32* @r29, align 4
  store i32 268452444, i32* @lr, align 4
  %v0_10004258 = call i32 @function_10004968()
  %v0_1000425c = load i32, i32* @r31, align 4
  %v1_1000425c = inttoptr i32 %v0_1000425c to i32*
  %v2_1000425c = load i32, i32* %v1_1000425c, align 4
  store i32 %v2_1000425c, i32* @r3, align 4
  %v0_10004260 = load i32, i32* @r26, align 4
  %v1_10004260 = trunc i32 %v0_10004260 to i8
  %v2_10004260 = load i32, i32* @r29, align 4
  %v3_10004260 = add i32 %v2_10004260, 40
  %v4_10004260 = inttoptr i32 %v3_10004260 to i8*
  store i8 %v1_10004260, i8* %v4_10004260, align 1
  %v2_10004268 = inttoptr i32 %v2_1000425c to i8*
  %v3_10004268 = call i32 @function_10007750(i8* %v2_10004268, i32 %v2_10004214)
  store i32 ptrtoint (i32* @global_var_10004278.43 to i32), i32* @lr, align 4
  %v2_10004274 = call i32 @function_100077d0(i32 %v2_10004214, i32 32)
  %v0_10004278 = call i32 @function_100048a8()
  store i32 %v0_10004278, i32* %r28.global-to-local, align 4
  %v0_10004280 = load i32, i32* @r31, align 4
  %v1_10004280 = inttoptr i32 %v0_10004280 to i32*
  %v2_10004280 = load i32, i32* %v1_10004280, align 4
  store i32 268452488, i32* @lr, align 4
  %v1_10004284 = inttoptr i32 %v2_10004280 to i8*
  %v2_10004284 = call i32 @function_10007728(i8* %v1_10004284)
  store i32 %v2_10004284, i32* %r29.global-to-local, align 4
  %v0_1000428c = load i32, i32* @r31, align 4
  %v1_1000428c = inttoptr i32 %v0_1000428c to i32*
  %v2_1000428c = load i32, i32* %v1_1000428c, align 4
  %v1_10004290 = sub i32 20, %v2_10004284
  store i32 %v1_10004290, i32* @r29, align 4
  store i32 268452504, i32* @lr, align 4
  %v1_10004294 = inttoptr i32 %v2_1000428c to i8*
  %v2_10004294 = call i32 @function_10007728(i8* %v1_10004294)
  %v0_10004298 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004298 = load i32, i32* @r29, align 4
  %v2_10004298 = urem i32 %v0_10004298, %v1_10004298
  %v2_1000429c = sub i32 %v0_10004298, %v2_10004298
  store i32 %v2_1000429c, i32* %r0.global-to-local, align 4
  %v2_100042a4 = add i32 %v2_10004298, %v2_10004294
  store i32 %v2_10004214, i32* @r3, align 4
  store i32 %v2_100042a4, i32* @r4, align 4
  %v0_100042b0 = load i32, i32* @r30, align 4
  %v2_100042b0 = add i32 %v0_100042b0, %v2_100042a4
  store i32 %v2_100042b0, i32* @r28, align 4
  store i32 268452536, i32* @lr, align 4
  %v0_100042b4 = call i32 @function_10004968()
  %v0_100042b8 = load i32, i32* @r26, align 4
  %v1_100042b8 = trunc i32 %v0_100042b8 to i8
  %v2_100042b8 = load i32, i32* @r28, align 4
  %v3_100042b8 = add i32 %v2_100042b8, 40
  %v4_100042b8 = inttoptr i32 %v3_100042b8 to i8*
  store i8 %v1_100042b8, i8* %v4_100042b8, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100042cc.44 to i32), i32* @lr, align 4
  %v2_100042c8 = call i32 @function_10007ea0(i32 15, i32 %v2_10004214)
  store i32 268452564, i32* @lr, align 4
  %v1_100042d0 = call i32 @function_10007348(i32 3)
  %v3_100042dc = call i32 @function_10007294(i32 3, i32* nonnull %stack_var_-1620)
  %v3_100042e0 = load i32, i32* %stack_var_-1620, align 4
  store i32 268452592, i32* @lr, align 4
  %v3_100042ec = call i32 @function_10008080(i32 1, i32 %v3_100042dc, i32 %v3_100042e0)
  store i32 ptrtoint ([3 x i8]* @global_var_10004304.46 to i32), i32* @lr, align 4
  %v3_10004300 = call i32 @function_10008080(i32 1, i32 ptrtoint (i32* @global_var_10009dbc.45 to i32), i32 1)
  store i32 268452620, i32* @lr, align 4
  %v1_10004308 = call i32 @function_100072bc(i32 3)
  store i32 268452624, i32* @lr, align 4
  %v1_1000430c = call i32 @function_1000068c(i32 %v1_10004308)
  store i32 ptrtoint (i32* @global_var_10004314.47 to i32), i32* @lr, align 4
  %v1_10004310 = call i32 @function_10004014(i32 %v1_1000430c)
  store i32 268452632, i32* @lr, align 4
  %v0_10004314 = call i32 @function_10007cf8()
  %tmp48 = icmp slt i32 %v0_10004314, 1
  br i1 %tmp48, label %dec_label_pc_100043b0, label %dec_label_pc_10004320

dec_label_pc_10004320:                            ; preds = %dec_label_pc_10004210
  store i32 %v0_1000410c, i32* %r0.global-to-local, align 4
  store i32 %v0_10004158, i32* %r15.global-to-local, align 4
  store i32 %v0_1000415c, i32* @r16, align 4
  store i32 %v0_10004160, i32* %r17.global-to-local, align 4
  store i32 %v0_10004164, i32* %r18.global-to-local, align 4
  store i32 %v0_10004168, i32* %r19.global-to-local, align 4
  store i32 %v0_1000416c, i32* %r20.global-to-local, align 4
  store i32 %v0_10004138, i32* @r22, align 4
  store i32 %v0_10004170, i32* @r23, align 4
  store i32 %v0_10004140, i32* @r24, align 4
  store i32 %v0_10004148, i32* @r25, align 4
  store i32 %v0_10004174, i32* @r26, align 4
  store i32 %v0_10004178, i32* @r27, align 4
  store i32 %v0_10004118, i32* @r28, align 4
  store i32 %v0_10004110, i32* @r29, align 4
  store i32 %v0_1000417c, i32* @r30, align 4
  store i32 %v0_10004150, i32* @r31, align 4
  ret i32 0

dec_label_pc_10004378:                            ; preds = %dec_label_pc_100040f0
  %v0_10004378 = load i32, i32* @r31, align 4
  %v1_10004378 = add i32 %v0_10004378, 4
  %v2_10004378 = inttoptr i32 %v1_10004378 to i32*
  %v3_10004378 = load i32, i32* %v2_10004378, align 4
  store i32 268452736, i32* @lr, align 4
  %v1_1000437c = inttoptr i32 %v3_10004378 to i8*
  %v2_1000437c = call i32 @function_10007728(i8* %v1_1000437c)
  %v2_10004380 = icmp sgt i32 %v2_1000437c, 31
  br i1 %v2_10004380, label %dec_label_pc_10004210, label %dec_label_pc_10004388

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004378
  %v0_10004388 = load i32, i32* @r31, align 4
  %v1_10004388 = add i32 %v0_10004388, 4
  %v2_10004388 = inttoptr i32 %v1_10004388 to i32*
  %v3_10004388 = load i32, i32* %v2_10004388, align 4
  store i32 %v2_10004144, i32* @r3, align 4
  %v2_10004390 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10004390 = call i32 @function_10007750(i8* %v2_10004390, i32 %v3_10004388)
  %v0_10004394 = load i32, i32* @r31, align 4
  %v1_10004394 = add i32 %v0_10004394, 4
  %v2_10004394 = inttoptr i32 %v1_10004394 to i32*
  %v3_10004394 = load i32, i32* %v2_10004394, align 4
  store i32 %v3_10004394, i32* %r29.global-to-local, align 4
  store i32 268452768, i32* @lr, align 4
  %v1_1000439c = inttoptr i32 %v3_10004394 to i8*
  %v2_1000439c = call i32 @function_10007728(i8* %v1_1000439c)
  store i32 268452780, i32* @lr, align 4
  %v2_100043a8 = call i32 @function_100077d0(i32 %v3_10004394, i32 %v2_1000439c)
  br label %dec_label_pc_10004210

dec_label_pc_100043b0:                            ; preds = %dec_label_pc_10004210
  store i32 ptrtoint ([3 x i8]* @global_var_100043b4.48 to i32), i32* @lr, align 4
  %v1_100043b0 = call i32 @function_10007f78(i32 %v0_10004314)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_100043b0, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100043c4.49 to i32), i32* @lr, align 4
  %v0_100043c0 = call i32 @function_10007cb0()
  store i32 ptrtoint ([3 x i8]* @global_var_100043cc.50 to i32), i32* @lr, align 4
  %v0_100043c8 = call i32 @function_10007cb0()
  store i32 268452820, i32* @lr, align 4
  %v0_100043d0 = call i32 @function_10007cb0()
  %v2_100043d4 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100043d4, i32* @r28, align 4
  store i32 268452828, i32* @lr, align 4
  %v1_100043d8 = call i32 @function_1000068c(i32 %v0_100043d0)
  %v2_100043dc = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_100043dc, i32* @r29, align 4
  store i32 268452836, i32* @lr, align 4
  %v1_100043e0 = call i32 @function_10004014(i32 %v1_100043d8)
  store i32 268566528, i32* %r20.global-to-local, align 4
  store i32 268452844, i32* @lr, align 4
  %v1_100043e8 = call i32 @function_10004d50(i32 %v1_100043e0)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_100043f4 = ptrtoint i32* %stack_var_-1608 to i32
  store i32 %v2_100043f4, i32* %r15.global-to-local, align 4
  %v2_100043f8 = ptrtoint i32* %stack_var_-1616 to i32
  %v2_1000482c = ptrtoint i32* %stack_var_-1136 to i32
  %v2_100046f0 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10004784 = bitcast i32* %stack_var_-1552 to i8*
  %v2_1000474c = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_100043fc

dec_label_pc_100043fc:                            ; preds = %dec_label_pc_10004850, %dec_label_pc_100047ec, %dec_label_pc_100047e0, %dec_label_pc_10004780, %dec_label_pc_100045d4, %dec_label_pc_100045c4, %dec_label_pc_100044b4, %dec_label_pc_10004890, %dec_label_pc_10004884, %dec_label_pc_10004804, %dec_label_pc_100047cc, %dec_label_pc_1000470c, %dec_label_pc_10004638, %dec_label_pc_10004588, %dec_label_pc_100043b0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000440c50 = load i32, i32* @r28, align 4
  %v4_1000440c52 = inttoptr i32 %v2_1000440c50 to i32*
  store i32 0, i32* %v4_1000440c52, align 4
  %v0_1000441053 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000441054 = add i32 %v0_1000441053, 4
  store i32 %v1_1000441054, i32* %r9.global-to-local, align 4
  %v0_1000441455 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000441456 = add i32 %v0_1000441455, -1
  store i32 %v1_1000441456, i32* %ctr.global-to-local, align 4
  %v2_1000441457 = icmp eq i32 %v1_1000441456, 0
  br i1 %v2_1000441457, label %dec_label_pc_10004418, label %dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge

dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge: ; preds = %dec_label_pc_100043fc, %dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge
  %v1_1000441058 = phi i32 [ %v1_10004410, %dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge ], [ %v1_1000441054, %dec_label_pc_100043fc ]
  %v0_1000440c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000440c = load i32, i32* @r28, align 4
  %v3_1000440c = add i32 %v2_1000440c, %v1_1000441058
  %v4_1000440c = inttoptr i32 %v3_1000440c to i32*
  store i32 %v0_1000440c.pre, i32* %v4_1000440c, align 4
  %v0_10004410 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004410 = add i32 %v0_10004410, 4
  store i32 %v1_10004410, i32* %r9.global-to-local, align 4
  %v0_10004414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004414 = add i32 %v0_10004414, -1
  store i32 %v1_10004414, i32* %ctr.global-to-local, align 4
  %v2_10004414 = icmp eq i32 %v1_10004414, 0
  br i1 %v2_10004414, label %dec_label_pc_10004418, label %dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge

dec_label_pc_10004418:                            ; preds = %dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge, %dec_label_pc_100043fc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000442859 = load i32, i32* @r29, align 4
  %v4_1000442861 = inttoptr i32 %v2_1000442859 to i32*
  store i32 0, i32* %v4_1000442861, align 4
  %v0_1000442c62 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000442c63 = add i32 %v0_1000442c62, 4
  store i32 %v1_1000442c63, i32* %r9.global-to-local, align 4
  %v0_1000443064 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000443065 = add i32 %v0_1000443064, -1
  store i32 %v1_1000443065, i32* %ctr.global-to-local, align 4
  %v2_1000443066 = icmp eq i32 %v1_1000443065, 0
  br i1 %v2_1000443066, label %dec_label_pc_10004434, label %dec_label_pc_10004428.dec_label_pc_10004428_crit_edge

dec_label_pc_10004428.dec_label_pc_10004428_crit_edge: ; preds = %dec_label_pc_10004418, %dec_label_pc_10004428.dec_label_pc_10004428_crit_edge
  %v1_1000442c67 = phi i32 [ %v1_1000442c, %dec_label_pc_10004428.dec_label_pc_10004428_crit_edge ], [ %v1_1000442c63, %dec_label_pc_10004418 ]
  %v0_10004428.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10004428 = load i32, i32* @r29, align 4
  %v3_10004428 = add i32 %v2_10004428, %v1_1000442c67
  %v4_10004428 = inttoptr i32 %v3_10004428 to i32*
  store i32 %v0_10004428.pre, i32* %v4_10004428, align 4
  %v0_1000442c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000442c = add i32 %v0_1000442c, 4
  store i32 %v1_1000442c, i32* %r9.global-to-local, align 4
  %v0_10004430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004430 = add i32 %v0_10004430, -1
  store i32 %v1_10004430, i32* %ctr.global-to-local, align 4
  %v2_10004430 = icmp eq i32 %v1_10004430, 0
  br i1 %v2_10004430, label %dec_label_pc_10004434, label %dec_label_pc_10004428.dec_label_pc_10004428_crit_edge

dec_label_pc_10004434:                            ; preds = %dec_label_pc_10004428.dec_label_pc_10004428_crit_edge, %dec_label_pc_10004418
  %v3_10004434 = load i32, i32* @global_var_1001a970.32, align 4
  %v3_10004438 = icmp eq i32 %v3_10004434, -1
  br i1 %v3_10004438, label %dec_label_pc_10004460, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004434
  %v1_10004440 = call i32 @__asm_rlwinm(i32 %v3_10004434, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10004448 = load i32, i32* @r30, align 4
  %v2_10004448 = add i32 %v1_10004448, %v1_10004440
  %v1_1000444c = urem i32 %v3_10004434, 32
  %v1_10004450 = add i32 %v2_10004448, 232
  %v2_10004450 = inttoptr i32 %v1_10004450 to i32*
  %v3_10004450 = load i32, i32* %v2_10004450, align 4
  %v3_10004454 = shl i32 1, %v1_1000444c
  store i32 %v3_10004454, i32* %r0.global-to-local, align 4
  %v2_10004458 = or i32 %v3_10004450, %v3_10004454
  store i32 %v2_10004458, i32* %r9.global-to-local, align 4
  store i32 %v2_10004458, i32* %v2_10004450, align 4
  br label %dec_label_pc_10004460

dec_label_pc_10004460:                            ; preds = %dec_label_pc_10004434, %dec_label_pc_10004440
  %v3_10004460 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 %v3_10004460, i32* %r0.global-to-local, align 4
  %v3_10004468 = icmp eq i32 %v3_10004460, -1
  br i1 %v3_10004468, label %dec_label_pc_1000464c, label %dec_label_pc_10004470

dec_label_pc_10004470:                            ; preds = %dec_label_pc_1000464c, %dec_label_pc_10004460, %dec_label_pc_100046a4
  %v3_1000459c = phi i32 [ -1, %dec_label_pc_1000464c ], [ %v3_10004460, %dec_label_pc_10004460 ], [ %v3_1000459c.pre, %dec_label_pc_100046a4 ]
  %v3_10004470 = load i8, i8* bitcast (i16* @global_var_1001a9a0.52 to i8*), align 2
  %v3_10004474 = icmp eq i8 %v3_10004470, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100045a4 = call i32 @__asm_rlwinm(i32 %v3_1000459c, i32 29, i32 3, i32 29)
  %v1_100045a8 = urem i32 %v3_1000459c, 32
  %v1_100045ac = load i32, i32* @r30, align 4
  %v2_100045ac = add i32 %v1_100045ac, %v1_100045a4
  %v0_100045b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100045b0 = shl i32 %v0_100045b0, %v1_100045a8
  store i32 %v3_100045b0, i32* %r0.global-to-local, align 4
  br i1 %v3_10004474, label %dec_label_pc_1000459c, label %dec_label_pc_1000447c

dec_label_pc_1000447c:                            ; preds = %dec_label_pc_10004470
  %v1_10004494 = add i32 %v2_100045ac, 360
  %v2_10004494 = inttoptr i32 %v1_10004494 to i32*
  %v3_10004494 = load i32, i32* %v2_10004494, align 4
  %v2_10004498 = or i32 %v3_10004494, %v3_100045b0
  store i32 %v2_10004498, i32* %r9.global-to-local, align 4
  store i32 %v2_10004498, i32* %v2_10004494, align 4
  br label %dec_label_pc_100044a0

dec_label_pc_100044a0:                            ; preds = %dec_label_pc_1000459c, %dec_label_pc_1000447c
  %v3_100044a0 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 %v3_100044a0, i32* %r0.global-to-local, align 4
  %v3_100044a4 = load i32, i32* @global_var_1001a970.32, align 4
  %v2_100044a8 = icmp slt i32 %v3_100044a4, %v3_100044a0
  br i1 %v2_100044a8, label %dec_label_pc_100044b0, label %dec_label_pc_100044b4

dec_label_pc_100044b0:                            ; preds = %dec_label_pc_100044a0
  br label %dec_label_pc_100044b4

dec_label_pc_100044b4:                            ; preds = %dec_label_pc_100044a0, %dec_label_pc_100044b0
  %v0_100044bc = phi i32 [ %v3_100044a4, %dec_label_pc_100044a0 ], [ %v3_100044a0, %dec_label_pc_100044b0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100044bc = add i32 %v0_100044bc, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268453084, i32* @lr, align 4
  %v5_100044d8 = call i32 @function_10007f30(i32 %v1_100044bc, i32 %v2_100043d4, i32 %v2_100043dc, i32 0, i32 %v2_100043f4)
  %v6_100044d8 = trunc i32 %v5_100044d8 to i16
  %v4_100044dc = icmp eq i16 %v6_100044d8, -1
  br i1 %v4_100044dc, label %dec_label_pc_100043fc, label %dec_label_pc_100044e4

dec_label_pc_100044e4:                            ; preds = %dec_label_pc_100044b4
  %v4_100044e4 = icmp eq i16 %v6_100044d8, 0
  br i1 %v4_100044e4, label %dec_label_pc_100044ec, label %dec_label_pc_10004518

dec_label_pc_100044ec:                            ; preds = %dec_label_pc_100044e4
  %v0_100044f0 = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10004500 = srem i32 %v0_100044f0, 6
  %v1_10004504 = sub i32 %v0_100044f0, %v2_10004500
  store i32 %v1_10004504, i32* %r9.global-to-local, align 4
  store i32 %v2_10004500, i32* %r0.global-to-local, align 4
  %v1_1000450c = add i32 %v0_100044f0, 1
  store i32 %v1_1000450c, i32* %r19.global-to-local, align 4
  %v3_10004510 = icmp eq i32 %v2_10004500, 0
  br i1 %v3_10004510, label %dec_label_pc_100046c0, label %dec_label_pc_10004518

dec_label_pc_10004518:                            ; preds = %dec_label_pc_100044e4, %dec_label_pc_100044ec, %dec_label_pc_100046c0
  %v3_10004518 = load i32, i32* @global_var_1001a970.32, align 4
  %v3_1000451c = icmp eq i32 %v3_10004518, -1
  br i1 %v3_1000451c, label %dec_label_pc_10004540, label %dec_label_pc_10004524

dec_label_pc_10004524:                            ; preds = %dec_label_pc_10004518
  %v1_10004524 = call i32 @__asm_rlwinm(i32 %v3_10004518, i32 29, i32 3, i32 29)
  %v1_10004528 = urem i32 %v3_10004518, 32
  %v1_1000452c = load i32, i32* @r30, align 4
  %v2_1000452c = add i32 %v1_1000452c, %v1_10004524
  store i32 %v2_1000452c, i32* %r9.global-to-local, align 4
  %v1_10004530 = add i32 %v2_1000452c, 232
  %v2_10004530 = inttoptr i32 %v1_10004530 to i32*
  %v3_10004530 = load i32, i32* %v2_10004530, align 4
  %v3_10004534 = lshr i32 %v3_10004530, %v1_10004528
  store i32 %v3_10004534, i32* %r0.global-to-local, align 4
  %v1_10004538 = urem i32 %v3_10004534, 2
  store i32 %v1_10004538, i32* %r9.global-to-local, align 4
  %v3_10004538 = icmp eq i32 %v1_10004538, 0
  br i1 %v3_10004538, label %dec_label_pc_10004540, label %dec_label_pc_10004744

dec_label_pc_10004540:                            ; preds = %dec_label_pc_10004524, %dec_label_pc_10004518
  %v3_10004540 = load i8, i8* bitcast (i16* @global_var_1001a9a0.52 to i8*), align 2
  %v4_10004540 = zext i8 %v3_10004540 to i32
  store i32 %v4_10004540, i32* @r31, align 4
  %v3_10004544 = icmp eq i8 %v3_10004540, 0
  %v3_100045c4 = load i32, i32* @global_var_1001a974.51, align 4
  br i1 %v3_10004544, label %dec_label_pc_100045c4, label %dec_label_pc_1000454c

dec_label_pc_1000454c:                            ; preds = %dec_label_pc_10004540
  store i32 268566528, i32* @r31, align 4
  %v1_10004554 = call i32 @__asm_rlwinm(i32 %v3_100045c4, i32 29, i32 3, i32 29)
  %v1_10004558 = urem i32 %v3_100045c4, 32
  %v1_1000455c = load i32, i32* @r30, align 4
  %v2_1000455c = add i32 %v1_1000455c, %v1_10004554
  store i32 %v2_1000455c, i32* %r9.global-to-local, align 4
  %v1_10004560 = add i32 %v2_1000455c, 360
  %v2_10004560 = inttoptr i32 %v1_10004560 to i32*
  %v3_10004560 = load i32, i32* %v2_10004560, align 4
  %v3_10004564 = lshr i32 %v3_10004560, %v1_10004558
  store i32 %v3_10004564, i32* %r0.global-to-local, align 4
  %v1_1000456c = urem i32 %v3_10004564, 2
  %v3_1000456c = icmp eq i32 %v1_1000456c, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001a9a0.52 to i8*), align 2
  br i1 %v3_1000456c, label %dec_label_pc_1000457c, label %dec_label_pc_100046dc

dec_label_pc_1000457c:                            ; preds = %dec_label_pc_1000454c
  %v3_1000457c = icmp eq i32 %v3_100045c4, -1
  br i1 %v3_1000457c, label %dec_label_pc_10004588, label %dec_label_pc_10004584

dec_label_pc_10004584:                            ; preds = %dec_label_pc_1000457c
  store i32 ptrtoint (i32* @global_var_10004588.53 to i32), i32* @lr, align 4
  %v0_10004584 = call i32 @function_10007cb0()
  br label %dec_label_pc_10004588

dec_label_pc_10004588:                            ; preds = %dec_label_pc_1000457c, %dec_label_pc_10004584
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001a974.51, align 4
  store i32 268453272, i32* @lr, align 4
  %v1_10004594 = call i32 @function_10008f9c(i32 1)
  br label %dec_label_pc_100043fc

dec_label_pc_1000459c:                            ; preds = %dec_label_pc_10004470
  %v1_100045b4 = add i32 %v2_100045ac, 232
  %v2_100045b4 = inttoptr i32 %v1_100045b4 to i32*
  %v3_100045b4 = load i32, i32* %v2_100045b4, align 4
  %v2_100045b8 = or i32 %v3_100045b4, %v3_100045b0
  store i32 %v2_100045b8, i32* %r9.global-to-local, align 4
  store i32 %v2_100045b8, i32* %v2_100045b4, align 4
  br label %dec_label_pc_100044a0

dec_label_pc_100045c4:                            ; preds = %dec_label_pc_10004540
  %v3_100045cc = icmp eq i32 %v3_100045c4, -1
  br i1 %v3_100045cc, label %dec_label_pc_100043fc, label %dec_label_pc_100045d4

dec_label_pc_100045d4:                            ; preds = %dec_label_pc_100045c4
  %v1_100045d4 = call i32 @__asm_rlwinm(i32 %v3_100045c4, i32 29, i32 3, i32 29)
  %v1_100045d8 = urem i32 %v3_100045c4, 32
  %v1_100045dc = load i32, i32* @r30, align 4
  %v2_100045dc = add i32 %v1_100045dc, %v1_100045d4
  store i32 %v2_100045dc, i32* %r9.global-to-local, align 4
  %v1_100045e0 = add i32 %v2_100045dc, 232
  %v2_100045e0 = inttoptr i32 %v1_100045e0 to i32*
  %v3_100045e0 = load i32, i32* %v2_100045e0, align 4
  %v3_100045e4 = lshr i32 %v3_100045e0, %v1_100045d8
  store i32 %v3_100045e4, i32* %r0.global-to-local, align 4
  %v1_100045e8 = urem i32 %v3_100045e4, 2
  store i32 %v1_100045e8, i32* %r9.global-to-local, align 4
  %v3_100045e8 = icmp eq i32 %v1_100045e8, 0
  br i1 %v3_100045e8, label %dec_label_pc_100043fc, label %dec_label_pc_100045f0

dec_label_pc_100045f0:                            ; preds = %dec_label_pc_100045d4
  %v0_100045f0 = load i32, i32* @r31, align 4
  %v6_100045f0 = trunc i32 %v0_100045f0 to i16
  store i16 %v6_100045f0, i16* %stack_var_-1624, align 2
  %v0_100045f4 = call i32 @function_100080c8()
  %v0_100045f8 = load i32, i32* @r31, align 4
  %v2_100045f8 = inttoptr i32 %v0_100045f4 to i32*
  store i32 %v0_100045f8, i32* %v2_100045f8, align 4
  store i32 %v0_100045f4, i32* @r23, align 4
  %v3_10004608 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 268453396, i32* @lr, align 4
  %v4_10004610 = call i32 @function_10008540(i32 %v3_10004608, i32 %v2_10004220, i32 2, i32 16386)
  %v3_10004614 = icmp eq i32 %v4_10004610, -1
  br i1 %v3_10004614, label %dec_label_pc_100047e0, label %dec_label_pc_1000461c

dec_label_pc_1000461c:                            ; preds = %dec_label_pc_100045f0
  %v3_1000461c = icmp eq i32 %v4_10004610, 0
  br i1 %v3_1000461c, label %dec_label_pc_100047f4, label %dec_label_pc_10004624

dec_label_pc_10004624:                            ; preds = %dec_label_pc_1000461c
  %v3_10004624 = load i16, i16* %stack_var_-1624, align 2
  %v4_10004624 = sext i16 %v3_10004624 to i32
  %v4_10004628 = icmp eq i16 %v3_10004624, 0
  br i1 %v4_10004628, label %dec_label_pc_10004890, label %dec_label_pc_10004630

dec_label_pc_10004630:                            ; preds = %dec_label_pc_10004624
  %tmp49 = icmp ult i16 %v3_10004624, 1025
  br i1 %tmp49, label %dec_label_pc_10004828, label %dec_label_pc_10004638

dec_label_pc_10004638:                            ; preds = %dec_label_pc_10004630
  store i32 ptrtoint (i32* @global_var_10004640.54 to i32), i32* @lr, align 4
  %v0_1000463c = call i32 @function_10007cb0()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001a974.51, align 4
  br label %dec_label_pc_100043fc

dec_label_pc_1000464c:                            ; preds = %dec_label_pc_10004460
  store i32 268453468, i32* @lr, align 4
  %v3_10004658 = call i32 @function_1000866c(i32 2, i32 1, i32 0)
  %v3_1000465c = icmp eq i32 %v3_10004658, -1
  store i32 %v3_10004658, i32* @r31, align 4
  store i32 %v3_10004658, i32* @global_var_1001a974.51, align 4
  br i1 %v3_1000465c, label %dec_label_pc_10004470, label %dec_label_pc_1000466c

dec_label_pc_1000466c:                            ; preds = %dec_label_pc_1000464c
  store i32 3, i32* @r4, align 4
  store i32 268453500, i32* @lr, align 4
  %v1_10004678 = call i32 @function_10007bc8(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10004684 = load i32, i32* @r31, align 4
  store i32 268453520, i32* @lr, align 4
  %v2_1000468c = call i32 @function_10007bc8(i32 %v0_10004684)
  %v3_10004690 = load i32, i32* @global_var_1001a978.27, align 4
  store i32 %v3_10004690, i32* %r0.global-to-local, align 4
  %v3_10004694 = icmp eq i32 %v3_10004690, 0
  br i1 %v3_10004694, label %dec_label_pc_100046a4, label %dec_label_pc_1000469c

dec_label_pc_1000469c:                            ; preds = %dec_label_pc_1000466c
  store i32 %v3_10004690, i32* %ctr.global-to-local, align 4
  store i32 268453540, i32* @lr, align 4
  %v2_100046a0 = call i32 @function_10007988(i32 %v2_1000468c)
  br label %dec_label_pc_100046a4

dec_label_pc_100046a4:                            ; preds = %dec_label_pc_1000466c, %dec_label_pc_1000469c
  %v3_100046a4 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 %v3_100046a4, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001a9a0.52 to i8*), align 2
  store i32 268453564, i32* @lr, align 4
  %v0_100046b8 = call i32 @function_1000846c()
  %v3_1000459c.pre = load i32, i32* @global_var_1001a974.51, align 4
  br label %dec_label_pc_10004470

dec_label_pc_100046c0:                            ; preds = %dec_label_pc_100044ec
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100046c8 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 268453592, i32* @lr, align 4
  %v4_100046d4 = call i32 @function_100085b8(i32 %v3_100046c8, i32 %v2_10004220, i32 2, i32 16384)
  br label %dec_label_pc_10004518

dec_label_pc_100046dc:                            ; preds = %dec_label_pc_1000454c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268453632, i32* @lr, align 4
  %v5_100046fc = call i32 @function_100084d4(i32 1, i32 4, i32 %v2_100043f8, i32 %v2_100046f0, i32 4)
  %v3_10004700 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10004700, i32* %r0.global-to-local, align 4
  %v3_10004704 = icmp eq i32 %v3_10004700, 0
  br i1 %v3_10004704, label %dec_label_pc_10004780, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_100046dc
  store i32 ptrtoint (i32* @global_var_10004714.55 to i32), i32* @lr, align 4
  %v0_10004710 = call i32 @function_10007cb0()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001a974.51, align 4
  %v0_1000471c = call i32 @function_100048a8()
  %v1_1000471c = sext i32 %v0_1000471c to i64
  %v5_10004728 = mul nuw nsw i64 %v1_1000471c, 3435973837
  %v1_1000472c2 = udiv i64 %v5_10004728, 34359738368
  %v1_1000472c = trunc i64 %v1_1000472c2 to i32
  %v1_10004730 = mul i32 %v1_1000472c, 10
  store i32 %v1_10004730, i32* %r0.global-to-local, align 4
  %v3_10004734 = sub i32 %v0_1000471c, %v1_10004730
  %v1_10004738 = add i32 %v3_10004734, 1
  store i32 268453696, i32* @lr, align 4
  %v1_1000473c = call i32 @function_10008f9c(i32 %v1_10004738)
  br label %dec_label_pc_100043fc

dec_label_pc_10004744:                            ; preds = %dec_label_pc_10004524
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10004758.57 to i32), i32* @lr, align 4
  %v3_10004754 = call i32 @function_10008404(i32 %v2_1000474c, i32 %v2_100043f8, i32 %v1_10004538)
  store i32 ptrtoint ([3 x i8]* @global_var_1000475c.58 to i32), i32* @lr, align 4
  %v1_10004758 = call i32 @function_10004a7c(i32 %v3_10004754)
  %v0_1000475c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000475c = sub i32 0, %v0_1000475c
  store i32 268453736, i32* @lr, align 4
  %v2_10004764 = call i32 @function_10007dd0(i32 %v1_1000475c, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000476c = load i32, i32* @global_var_1001a99c.35, align 4
  %v3_10004770 = icmp eq i32 %v3_1000476c, 0
  br i1 %v3_10004770, label %dec_label_pc_10004778, label %dec_label_pc_1000481c

dec_label_pc_10004778:                            ; preds = %dec_label_pc_10004744, %dec_label_pc_1000481c
  %v0_1000477c = call i32 @function_10008f18()
  br label %dec_label_pc_10004780

dec_label_pc_10004780:                            ; preds = %dec_label_pc_100046dc, %dec_label_pc_10004778
  store i32 268453768, i32* @lr, align 4
  %v2_10004784 = call i32 @function_10007728(i8* %v1_10004784)
  %v3_10004784 = trunc i32 %v2_10004784 to i8
  %v7_10004788 = sext i8 %v3_10004784 to i16
  store i16 %v7_10004788, i16* %stack_var_-1624, align 2
  store i32 268453776, i32* @lr, align 4
  %v2_1000478c = call i32 @function_10007988(i32 %v2_10004784)
  store i32 %v2_1000478c, i32* @global_var_1001a998.12, align 4
  %v0_10004798 = load i32, i32* @r31, align 4
  %v1_10004798 = add i32 %v0_10004798, -22156
  %v2_10004798 = inttoptr i32 %v1_10004798 to i32*
  %v3_10004798 = load i32, i32* %v2_10004798, align 4
  store i32 268453804, i32* @lr, align 4
  %v4_100047a8 = call i32 @function_100085b8(i32 %v3_10004798, i32 ptrtoint (i32* @global_var_10009dc0.59 to i32), i32 4, i32 16384)
  %v0_100047ac = load i32, i32* @r31, align 4
  %v1_100047ac = add i32 %v0_100047ac, -22156
  %v2_100047ac = inttoptr i32 %v1_100047ac to i32*
  %v3_100047ac = load i32, i32* %v2_100047ac, align 4
  store i32 268453824, i32* @lr, align 4
  %v4_100047bc = call i32 @function_100085b8(i32 %v3_100047ac, i32 %v2_10004220, i32 1, i32 16384)
  %v3_100047c0 = load i16, i16* %stack_var_-1624, align 2
  %v4_100047c4 = icmp eq i16 %v3_100047c0, 0
  br i1 %v4_100047c4, label %dec_label_pc_100043fc, label %dec_label_pc_100047cc

dec_label_pc_100047cc:                            ; preds = %dec_label_pc_10004780
  %v4_100047c0 = sext i16 %v3_100047c0 to i32
  %v0_100047cc = load i32, i32* @r31, align 4
  %v1_100047cc = add i32 %v0_100047cc, -22156
  %v2_100047cc = inttoptr i32 %v1_100047cc to i32*
  %v3_100047cc = load i32, i32* %v2_100047cc, align 4
  store i32 268453852, i32* @lr, align 4
  %v5_100047d8 = call i32 @function_100085b8(i32 %v3_100047cc, i32 %v2_10004144, i32 %v4_100047c0, i32 16384)
  br label %dec_label_pc_100043fc

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_10004828, %dec_label_pc_100045f0
  %v0_100047e0 = load i32, i32* @r23, align 4
  %v1_100047e0 = inttoptr i32 %v0_100047e0 to i32*
  %v2_100047e0 = load i32, i32* %v1_100047e0, align 4
  %v3_100047e4 = icmp eq i32 %v2_100047e0, 11
  br i1 %v3_100047e4, label %dec_label_pc_100043fc, label %dec_label_pc_100047ec

dec_label_pc_100047ec:                            ; preds = %dec_label_pc_100047e0
  %v3_100047ec = icmp eq i32 %v2_100047e0, 4
  br i1 %v3_100047ec, label %dec_label_pc_100043fc, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_10004848, %dec_label_pc_100047ec, %dec_label_pc_1000461c
  %v3_100047f4 = load i32, i32* @global_var_1001a974.51, align 4
  %v3_100047f8 = icmp eq i32 %v3_100047f4, -1
  br i1 %v3_100047f8, label %dec_label_pc_10004804, label %dec_label_pc_10004800

dec_label_pc_10004800:                            ; preds = %dec_label_pc_100047f4
  store i32 ptrtoint (i32* @global_var_10004804.60 to i32), i32* @lr, align 4
  %v0_10004800 = call i32 @function_10007cb0()
  br label %dec_label_pc_10004804

dec_label_pc_10004804:                            ; preds = %dec_label_pc_100047f4, %dec_label_pc_10004800
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001a974.51, align 4
  store i32 268453912, i32* @lr, align 4
  %v1_10004814 = call i32 @function_10008f9c(i32 1)
  br label %dec_label_pc_100043fc

dec_label_pc_1000481c:                            ; preds = %dec_label_pc_10004744
  store i32 268453924, i32* @lr, align 4
  %v2_10004820 = call i32 @function_10007dd0(i32 %v3_1000476c, i32 9)
  br label %dec_label_pc_10004778

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004630
  %v0_10004828 = load i32, i32* @r31, align 4
  %v1_10004828 = load i32, i32* @r23, align 4
  %v2_10004828 = inttoptr i32 %v1_10004828 to i32*
  store i32 %v0_10004828, i32* %v2_10004828, align 4
  store i32 %v2_1000482c, i32* @r31, align 4
  %v3_10004838 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 268453952, i32* @lr, align 4
  %v5_1000483c = call i32 @function_10008540(i32 %v3_10004838, i32 %v2_1000482c, i32 %v4_10004624, i32 16386)
  %v3_10004840 = icmp eq i32 %v5_1000483c, -1
  br i1 %v3_10004840, label %dec_label_pc_100047e0, label %dec_label_pc_10004848

dec_label_pc_10004848:                            ; preds = %dec_label_pc_10004828
  %v3_10004848 = icmp eq i32 %v5_1000483c, 0
  br i1 %v3_10004848, label %dec_label_pc_100047f4, label %dec_label_pc_10004850

dec_label_pc_10004850:                            ; preds = %dec_label_pc_10004848
  %v3_10004850 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 268453988, i32* @lr, align 4
  %v4_10004860 = call i32 @function_10008540(i32 %v3_10004850, i32 %v2_10004220, i32 2, i32 16384)
  %v3_10004864 = load i32, i32* @global_var_1001a974.51, align 4
  %v3_10004868 = load i16, i16* %stack_var_-1624, align 2
  %v4_10004868 = sext i16 %v3_10004868 to i32
  store i32 268454008, i32* @lr, align 4
  %v5_10004874 = call i32 @function_10008540(i32 %v3_10004864, i32 %v2_1000482c, i32 %v4_10004868, i32 16384)
  %v3_10004878 = load i16, i16* %stack_var_-1624, align 2
  %v4_1000487c = icmp eq i16 %v3_10004878, 0
  br i1 %v4_1000487c, label %dec_label_pc_100043fc, label %dec_label_pc_10004884

dec_label_pc_10004884:                            ; preds = %dec_label_pc_10004850
  %v4_10004878 = sext i16 %v3_10004878 to i32
  store i32 268454028, i32* @lr, align 4
  %v3_10004888 = call i32 @function_10000384(i32 %v2_1000482c, i32 %v4_10004878)
  br label %dec_label_pc_100043fc

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004624
  %v3_10004890 = load i32, i32* @global_var_1001a974.51, align 4
  store i32 268454052, i32* @lr, align 4
  %v4_100048a0 = call i32 @function_10008540(i32 %v3_10004890, i32 %v2_10004220, i32 2, i32 16384)
  br label %dec_label_pc_100043fc

; uselistorder directives
  uselistorder i16 %v3_10004878, { 1, 0 }
  uselistorder i16 %v3_100047c0, { 1, 0 }
  uselistorder i32 %v3_10004658, { 1, 0, 2 }
  uselistorder i32 %v1_100045e8, { 1, 0 }
  uselistorder i32 %v3_100045c4, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10004538, { 2, 1, 0 }
  uselistorder i32 %v2_10004500, { 1, 0, 2 }
  uselistorder i32 %v0_100044f0, { 2, 0, 1 }
  uselistorder i32 %v2_100045ac, { 1, 0 }
  uselistorder i32 %v1_10004430, { 1, 0 }
  uselistorder i32 %v1_1000442c, { 1, 0 }
  uselistorder i32 %v1_10004414, { 1, 0 }
  uselistorder i32 %v1_10004410, { 1, 0 }
  uselistorder i32 %v2_1000482c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_100043f8, { 1, 0 }
  uselistorder i32 %v2_10004220, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_100041bc, { 1, 0 }
  uselistorder i32 %v2_10004114, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_100040e0, { 1, 2, 0 }
  uselistorder i32 %v0_10004024, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 1, 22, 23, 25, 24, 0, 26, 27, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r19.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r18.global-to-local, { 3, 1, 0, 2 }
  uselistorder i32* %r17.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r15.global-to-local, { 3, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 15, 16, 20, 21, 22, 23, 24, 25, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ctr.global-to-local, { 2, 4, 3, 1, 5, 6, 8, 7, 0, 9, 10 }
  uselistorder i8* bitcast (i16* @global_var_1001a9a0.52 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001a974.51, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_10004014, { 1, 0 }
  uselistorder i32 (i32)* @function_1000068c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008080, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_10007750, { 1, 0 }
  uselistorder i32 ()* @function_10004968, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_10003e34, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10008718, { 1, 0 }
  uselistorder i32 (i32)* @function_10008f9c, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10004804, { 1, 0 }
  uselistorder label %dec_label_pc_10004780, { 1, 0 }
  uselistorder label %dec_label_pc_10004778, { 1, 0 }
  uselistorder label %dec_label_pc_100046a4, { 1, 0 }
  uselistorder label %dec_label_pc_10004588, { 1, 0 }
  uselistorder label %dec_label_pc_10004518, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100044b4, { 1, 0 }
  uselistorder label %dec_label_pc_10004470, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004460, { 1, 0 }
  uselistorder label %dec_label_pc_10004428.dec_label_pc_10004428_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000440c.dec_label_pc_1000440c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100043fc, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_10004210, { 2, 1, 0 }
}

define i32 @function_100048a8() local_unnamed_addr {
dec_label_pc_100048a8:
  %v3_100048b0 = load i32, i32* @global_var_1001aa20.61, align 4
  %v3_100048b8 = load i32, i32* @global_var_1001aa14.62, align 4
  %v1_100048c0 = udiv i32 %v3_100048b0, 524288
  %v3_100048c4 = load i32, i32* @global_var_1001aa1c.63, align 4
  %v1_100048c8 = mul i32 %v3_100048b8, 2048
  %v2_100048cc = xor i32 %v1_100048c0, %v3_100048b0
  %v2_100048d0 = xor i32 %v1_100048c8, %v3_100048b8
  %v3_100048d4 = load i32, i32* @global_var_1001aa18.64, align 4
  %v2_100048d8 = xor i32 %v2_100048cc, %v2_100048d0
  %v1_100048dc = udiv i32 %v2_100048d0, 256
  %v2_100048e0 = xor i32 %v2_100048d8, %v1_100048dc
  store i32 %v3_100048d4, i32* @global_var_1001aa14.62, align 4
  store i32 %v3_100048c4, i32* @global_var_1001aa18.64, align 4
  store i32 %v3_100048b0, i32* @global_var_1001aa1c.63, align 4
  store i32 %v2_100048e0, i32* @global_var_1001aa20.61, align 4
  ret i32 %v2_100048e0

; uselistorder directives
  uselistorder i32 %v2_100048e0, { 1, 0 }
  uselistorder i32 %v3_100048b8, { 1, 0 }
  uselistorder i32 %v3_100048b0, { 2, 1, 0 }
}

define i32 @function_100048f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100048f8:
  store i32 268454168, i32* @lr, align 4
  %v0_10004914 = call i32 @function_10008038()
  store i32 %v0_10004914, i32* @global_var_1001aa14.62, align 4
  store i32 268454180, i32* @lr, align 4
  %v0_10004920 = call i32 @function_10007d40()
  store i32 268454188, i32* @lr, align 4
  %v0_10004928 = call i32 @function_10007d88()
  %v2_1000492c = xor i32 %v0_10004920, %v0_10004928
  store i32 %v2_1000492c, i32* @global_var_1001aa18.64, align 4
  store i32 268454200, i32* @lr, align 4
  %v1_10004934 = call i32 @function_100080d4(i32 %v0_10004928)
  %v3_10004938 = load i32, i32* @global_var_1001aa18.64, align 4
  %v2_10004948 = xor i32 %v3_10004938, %v1_10004934
  store i32 %v2_10004948, i32* @global_var_1001aa20.61, align 4
  store i32 %v1_10004934, i32* @global_var_1001aa1c.63, align 4
  ret i32 %v1_10004934

; uselistorder directives
  uselistorder i32 %v1_10004934, { 2, 1, 0 }
  uselistorder i32 %v0_10004928, { 1, 0 }
}

define i32 @function_10004968() local_unnamed_addr {
dec_label_pc_10004968:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10004974 = load i32, i32* @r3, align 4
  store i32 %v0_10004974, i32* %r31.global-to-local, align 4
  %v2_10004984 = ptrtoint i32* %stack_var_-72 to i32
  %v0_1000498c = load i32, i32* @r4, align 4
  store i32 268454312, i32* @lr, align 4
  %v1_100049a4 = call i32 @function_10007348(i32 37)
  %v3_100049b0 = call i32 @function_10007294(i32 37, i32* null)
  %v2_100049bc = inttoptr i32 %v3_100049b0 to i8*
  %v3_100049bc = call i32 @function_100081b0(i32 %v2_10004984, i8* %v2_100049bc)
  %v3_100049c0 = icmp eq i32 %v0_1000498c, 0
  br i1 %v3_100049c0, label %dec_label_pc_10004a44, label %dec_label_pc_100049c8

dec_label_pc_100049c8:                            ; preds = %dec_label_pc_10004968
  %v1_100049c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100049c8 = add i32 %v1_100049c8, %v0_1000498c
  store i32 %v2_100049c8, i32* %r26.global-to-local, align 4
  %v1_10004a1c = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_100049dc

dec_label_pc_100049dc:                            ; preds = %dec_label_pc_100049dc, %dec_label_pc_100049c8
  %v3_100049dc = load i32, i32* @global_var_1001aa20.61, align 4
  %v3_100049e4 = load i32, i32* @global_var_1001aa14.62, align 4
  %v1_100049e8 = udiv i32 %v3_100049dc, 524288
  %v3_100049ec = load i32, i32* @global_var_1001aa1c.63, align 4
  %v1_100049f0 = mul i32 %v3_100049e4, 2048
  %v2_100049f4 = xor i32 %v1_100049e8, %v3_100049dc
  %v2_100049f8 = xor i32 %v1_100049f0, %v3_100049e4
  %v3_100049fc = load i32, i32* @global_var_1001aa18.64, align 4
  %v2_10004a00 = xor i32 %v2_100049f4, %v2_100049f8
  %v1_10004a04 = udiv i32 %v2_100049f8, 256
  %v2_10004a08 = xor i32 %v2_10004a00, %v1_10004a04
  store i32 %v2_10004a08, i32* %r29.global-to-local, align 4
  store i32 %v3_100049fc, i32* @global_var_1001aa14.62, align 4
  store i32 %v2_10004a08, i32* @global_var_1001aa20.61, align 4
  store i32 %v3_100049ec, i32* @global_var_1001aa18.64, align 4
  store i32 %v3_100049dc, i32* @global_var_1001aa1c.63, align 4
  store i32 268454432, i32* @lr, align 4
  %v2_10004a1c = call i32 @function_10007728(i8* %v1_10004a1c)
  %v0_10004a20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004a20 = urem i32 %v0_10004a20, %v2_10004a1c
  store i32 %v2_10004a20, i32* %r29.global-to-local, align 4
  %v0_10004a2c = load i32, i32* @r1, align 4
  %v2_10004a2c = add i32 %v0_10004a2c, %v2_10004a20
  %v1_10004a30 = add i32 %v2_10004a2c, 8
  %v2_10004a30 = inttoptr i32 %v1_10004a30 to i8*
  %v3_10004a30 = load i8, i8* %v2_10004a30, align 1
  %v2_10004a34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004a34 = inttoptr i32 %v2_10004a34 to i8*
  store i8 %v3_10004a30, i8* %v3_10004a34, align 1
  %v0_10004a38 = load i32, i32* %r31.global-to-local, align 4
  %v1_10004a38 = add i32 %v0_10004a38, 1
  store i32 %v1_10004a38, i32* %r31.global-to-local, align 4
  %v1_10004a3c = load i32, i32* %r26.global-to-local, align 4
  %v4_10004a3c = icmp eq i32 %v1_10004a38, %v1_10004a3c
  br i1 %v4_10004a3c, label %dec_label_pc_10004a44, label %dec_label_pc_100049dc

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_100049dc, %dec_label_pc_10004968
  store i32 268454476, i32* @lr, align 4
  %v1_10004a48 = call i32 @function_100072bc(i32 37)
  ret i32 %v1_10004a48

; uselistorder directives
  uselistorder i32 %v3_100049e4, { 1, 0 }
  uselistorder i32 %v3_100049dc, { 2, 1, 0 }
  uselistorder i32 %v0_1000498c, { 1, 0 }
  uselistorder i32 (i32)* @function_100072bc, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32*)* @function_10007294, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_10007348, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 37, { 1, 2, 0 }
}

define i32 @function_10004a7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004a7c:
  %v3_10004a90 = load i32, i32* @global_var_1001a9bc.65, align 4
  store i32 268454552, i32* @lr, align 4
  %v2_10004a94 = call i32 @function_10007dd0(i32 %v3_10004a90, i32 9)
  ret i32 %v2_10004a94
}

define i32 @function_10004aa8() local_unnamed_addr {
dec_label_pc_10004aa8:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10004ab0 = load i32, i32* @r31, align 4
  %v0_10004ab4 = load i32, i32* @r3, align 4
  store i32 %v0_10004ab4, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10004ac4 = add i32 %v0_10004ab4, 4
  %v2_10004ac4 = inttoptr i32 %v1_10004ac4 to i32*
  %v3_10004ac4 = load i32, i32* %v2_10004ac4, align 4
  store i32 %v3_10004ac4, i32* %r3.global-to-local, align 4
  %v3_10004acc = icmp eq i32 %v3_10004ac4, -1
  br i1 %v3_10004acc, label %dec_label_pc_10004ae4, label %dec_label_pc_10004ae0

dec_label_pc_10004ae0:                            ; preds = %dec_label_pc_10004aa8
  store i32 268454628, i32* @lr, align 4
  %v0_10004ae0 = call i32 @function_10007cb0()
  store i32 %v0_10004ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004ae4

dec_label_pc_10004ae4:                            ; preds = %dec_label_pc_10004aa8, %dec_label_pc_10004ae0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268454644, i32* @lr, align 4
  %v3_10004af0 = call i32 @function_1000866c(i32 2, i32 1, i32 0)
  %v0_10004afc = load i32, i32* @r31, align 4
  %v1_10004afc = add i32 %v0_10004afc, 28
  store i32 %v1_10004afc, i32* %r3.global-to-local, align 4
  %v3_10004b00 = icmp eq i32 %v3_10004af0, -1
  %v2_10004b04 = add i32 %v0_10004afc, 4
  %v3_10004b04 = inttoptr i32 %v2_10004b04 to i32*
  store i32 %v3_10004af0, i32* %v3_10004b04, align 4
  br i1 %v3_10004b00, label %dec_label_pc_10004ae4.dec_label_pc_10004b7c_crit_edge, label %dec_label_pc_10004b0c

dec_label_pc_10004ae4.dec_label_pc_10004b7c_crit_edge: ; preds = %dec_label_pc_10004ae4
  %v0_10004b90.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004b7c

dec_label_pc_10004b0c:                            ; preds = %dec_label_pc_10004ae4
  %v0_10004b0c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004b0c = load i32, i32* @r31, align 4
  %v2_10004b0c = add i32 %v1_10004b0c, 24
  %v3_10004b0c = inttoptr i32 %v2_10004b0c to i32*
  store i32 %v0_10004b0c, i32* %v3_10004b0c, align 4
  store i32 268454676, i32* @lr, align 4
  %v0_10004b10 = load i32, i32* %r3.global-to-local, align 4
  %v2_10004b10 = call i32 @function_100077d0(i32 %v0_10004b10, i32 256)
  store i32 %v2_10004b10, i32* %r3.global-to-local, align 4
  %v0_10004b14 = load i32, i32* @r31, align 4
  %v1_10004b14 = add i32 %v0_10004b14, 4
  %v2_10004b14 = inttoptr i32 %v1_10004b14 to i32*
  %v3_10004b14 = load i32, i32* %v2_10004b14, align 4
  store i32 %v3_10004b14, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 %v3_10004b14, i32* %r3.global-to-local, align 4
  store i32 268454700, i32* @lr, align 4
  %v2_10004b28 = call i32 @function_10007bc8(i32 %v3_10004b14)
  store i32 4, i32* @r4, align 4
  store i32 %v3_10004b14, i32* %r3.global-to-local, align 4
  store i32 268454720, i32* @lr, align 4
  %v2_10004b3c = call i32 @function_10007bc8(i32 %v3_10004b14)
  store i32 %v2_10004b3c, i32* %r3.global-to-local, align 4
  %v3_10004b44 = load i32, i32* @global_var_1001a9b0.66, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10004b4c = load i32, i32* @r31, align 4
  %v2_10004b54 = add i32 %v0_10004b4c, 8
  %v3_10004b54 = inttoptr i32 %v2_10004b54 to i32*
  store i32 %v3_10004b44, i32* %v3_10004b54, align 4
  %v0_10004b5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004b5c = load i32, i32* @r31, align 4
  %v2_10004b5c = add i32 %v1_10004b5c, 12
  %v3_10004b5c = inttoptr i32 %v2_10004b5c to i32*
  store i32 %v0_10004b5c, i32* %v3_10004b5c, align 4
  %v0_10004b64 = load i32, i32* @r31, align 4
  %v1_10004b64 = add i32 %v0_10004b64, 4
  %v2_10004b64 = inttoptr i32 %v1_10004b64 to i32*
  %v3_10004b64 = load i32, i32* %v2_10004b64, align 4
  store i32 %v3_10004b64, i32* @r3, align 4
  %v1_10004b68 = add i32 %v0_10004b64, 16
  %v2_10004b68 = inttoptr i32 %v1_10004b68 to i32*
  %v3_10004b68 = load i32, i32* %v2_10004b68, align 4
  store i32 %v3_10004b68, i32* %r9.global-to-local, align 4
  store i32 268454780, i32* @lr, align 4
  %v0_10004b78 = call i32 @function_1000846c()
  store i32 %v0_10004b78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004b7c

dec_label_pc_10004b7c:                            ; preds = %dec_label_pc_10004ae4.dec_label_pc_10004b7c_crit_edge, %dec_label_pc_10004b0c
  %v0_10004b90 = phi i32 [ %v0_10004b90.pre, %dec_label_pc_10004ae4.dec_label_pc_10004b7c_crit_edge ], [ %v0_10004b78, %dec_label_pc_10004b0c ]
  store i32 %v0_10004ab0, i32* @r31, align 4
  ret i32 %v0_10004b90

; uselistorder directives
  uselistorder i32 %v3_10004b14, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @function_100077d0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10004b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10004ae4, { 1, 0 }
}

define i32 @function_10004b94(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004b94:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10004b98 = load i32, i32* @lr, align 4
  store i32 %v0_10004b98, i32* %r0.global-to-local, align 4
  %v3_10004ba4 = load i32, i32* @global_var_1001a9a4.67, align 4
  %v1_10004bb0 = mul i32 %v3_10004ba4, 16
  store i32 %v1_10004bb0, i32* %r9.global-to-local, align 4
  %v0_10004bb4 = load i32, i32* @r28, align 4
  %v3_10004bbc = load i32, i32* @global_var_1001a9a8.68, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10004bc8 = add i32 %v1_10004bb0, 16
  %v0_10004be0 = load i32, i32* @r29, align 4
  %v0_10004be4 = load i32, i32* @r30, align 4
  store i32 268454896, i32* @lr, align 4
  %v3_10004bec = call i32 @function_10008b38(i32 %v3_10004bbc, i32 %v1_10004bc8, i32 %v1_10004bb0)
  store i32 %v3_10004bec, i32* %r25.global-to-local, align 4
  %v0_10004bf4 = load i32, i32* @r28, align 4
  store i32 %v3_10004bec, i32* @global_var_1001a9a8.68, align 4
  %v3_10004bfc = load i32, i32* @global_var_1001a9a4.67, align 4
  store i32 %v3_10004bfc, i32* %r24.global-to-local, align 4
  store i32 268454916, i32* @lr, align 4
  %v1_10004c00 = inttoptr i32 %v0_10004bf4 to i8*
  %v2_10004c00 = call i32 @function_10007728(i8* %v1_10004c00)
  %sext = mul i32 %v2_10004c00, 16777216
  %v1_10004c04 = sdiv i32 %sext, 16777216
  %v2_10004c04 = add nsw i32 %v1_10004c04, 1
  store i32 %v2_10004c04, i32* @r29, align 4
  store i32 %v1_10004c04, i32* @r30, align 4
  store i32 %v2_10004c04, i32* @r3, align 4
  store i32 268454932, i32* @lr, align 4
  %v0_10004c10 = call i32 @function_10008870()
  %v0_10004c14 = load i32, i32* @r28, align 4
  %v0_10004c18 = load i32, i32* @r29, align 4
  store i32 %v0_10004c10, i32* %r31.global-to-local, align 4
  store i32 268454948, i32* @lr, align 4
  %v3_10004c20 = call i32 @function_100077ac(i32 %v0_10004c14, i32 %v0_10004c18, i32 %v0_10004c18)
  %v0_10004c24 = load i32, i32* @r30, align 4
  %tmp23 = icmp slt i32 %v0_10004c24, 1
  %extract.t8 = trunc i32 %v0_10004c24 to i8
  br i1 %tmp23, label %dec_label_pc_10004c50, label %dec_label_pc_10004c2c

dec_label_pc_10004c2c:                            ; preds = %dec_label_pc_10004b94
  store i32 %v0_10004c24, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -81, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c38

dec_label_pc_10004c38:                            ; preds = %dec_label_pc_10004c38.dec_label_pc_10004c38_crit_edge, %dec_label_pc_10004c2c
  %v1_10004c40 = phi i32 [ %v1_10004c40.pre, %dec_label_pc_10004c38.dec_label_pc_10004c38_crit_edge ], [ -81, %dec_label_pc_10004c2c ]
  %v1_10004c44 = phi i32 [ %v1_10004c48, %dec_label_pc_10004c38.dec_label_pc_10004c38_crit_edge ], [ 0, %dec_label_pc_10004c2c ]
  %v1_10004c38 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004c38 = add i32 %v1_10004c38, %v1_10004c44
  %v3_10004c38 = inttoptr i32 %v2_10004c38 to i8*
  %v4_10004c38 = load i8, i8* %v3_10004c38, align 1
  %v5_10004c38 = zext i8 %v4_10004c38 to i32
  %v1_10004c3c = sub i32 -1, %v1_10004c40
  %v2_10004c40 = xor i32 %v5_10004c38, %v1_10004c3c
  store i32 %v2_10004c40, i32* %r0.global-to-local, align 4
  %v3_10004c44 = trunc i32 %v2_10004c40 to i8
  store i8 %v3_10004c44, i8* %v3_10004c38, align 1
  %v0_10004c48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004c48 = add i32 %v0_10004c48, 1
  store i32 %v1_10004c48, i32* %r9.global-to-local, align 4
  %v0_10004c4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004c4c = add i32 %v0_10004c4c, -1
  store i32 %v1_10004c4c, i32* %ctr.global-to-local, align 4
  %v2_10004c4c = icmp eq i32 %v1_10004c4c, 0
  br i1 %v2_10004c4c, label %dec_label_pc_10004c50.loopexit, label %dec_label_pc_10004c38.dec_label_pc_10004c38_crit_edge

dec_label_pc_10004c38.dec_label_pc_10004c38_crit_edge: ; preds = %dec_label_pc_10004c38
  %v1_10004c40.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004c38

dec_label_pc_10004c50.loopexit:                   ; preds = %dec_label_pc_10004c38
  %v0_10004c68.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10004c68.pre to i8
  br label %dec_label_pc_10004c50

dec_label_pc_10004c50:                            ; preds = %dec_label_pc_10004c50.loopexit, %dec_label_pc_10004b94
  %v0_10004c68.off0 = phi i8 [ %extract.t, %dec_label_pc_10004c50.loopexit ], [ %extract.t8, %dec_label_pc_10004b94 ]
  %v3_10004c50 = load i32, i32* @global_var_1001a9a4.67, align 4
  %v0_10004c54 = load i32, i32* %r23.global-to-local, align 4
  %v3_10004c58 = load i32, i32* @global_var_1001a9a8.68, align 4
  %v1_10004c5c = mul i32 %v3_10004c50, 16
  %v2_10004c60 = add i32 %v3_10004c58, %v1_10004c5c
  store i32 %v2_10004c60, i32* %r9.global-to-local, align 4
  %v0_10004c64 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004c64 = mul i32 %v0_10004c64, 16
  store i32 %v1_10004c64, i32* %r0.global-to-local, align 4
  %v3_10004c68 = add i32 %v2_10004c60, 12
  %v4_10004c68 = inttoptr i32 %v3_10004c68 to i8*
  store i8 %v0_10004c68.off0, i8* %v4_10004c68, align 1
  %v0_10004c6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10004c6c = load i32, i32* %r25.global-to-local, align 4
  %v2_10004c6c = load i32, i32* %r0.global-to-local, align 4
  %v3_10004c6c = add i32 %v2_10004c6c, %v1_10004c6c
  %v4_10004c6c = inttoptr i32 %v3_10004c6c to i32*
  store i32 %v0_10004c6c, i32* %v4_10004c6c, align 4
  %v3_10004c70 = load i32, i32* @global_var_1001a9a4.67, align 4
  store i32 %v3_10004c70, i32* @r30, align 4
  %v3_10004c74 = load i32, i32* @global_var_1001a9a8.68, align 4
  store i32 %v3_10004c74, i32* %r25.global-to-local, align 4
  store i32 268455036, i32* @lr, align 4
  %v1_10004c78 = inttoptr i32 %v0_10004c54 to i8*
  %v2_10004c78 = call i32 @function_10007728(i8* %v1_10004c78)
  %sext1 = mul i32 %v2_10004c78, 16777216
  %v1_10004c7c = sdiv i32 %sext1, 16777216
  %v2_10004c7c = add nsw i32 %v1_10004c7c, 1
  store i32 %v2_10004c7c, i32* @r29, align 4
  store i32 %v1_10004c7c, i32* @r28, align 4
  store i32 %v2_10004c7c, i32* @r3, align 4
  store i32 268455052, i32* @lr, align 4
  %v0_10004c88 = call i32 @function_10008870()
  %v0_10004c8c = load i32, i32* %r23.global-to-local, align 4
  %v0_10004c90 = load i32, i32* @r29, align 4
  store i32 %v0_10004c88, i32* %r31.global-to-local, align 4
  store i32 268455068, i32* @lr, align 4
  %v3_10004c98 = call i32 @function_100077ac(i32 %v0_10004c8c, i32 %v0_10004c90, i32 %v0_10004c90)
  %v0_10004c9c = load i32, i32* @r28, align 4
  %tmp24 = icmp slt i32 %v0_10004c9c, 1
  %extract.t10 = trunc i32 %v0_10004c9c to i8
  br i1 %tmp24, label %dec_label_pc_10004cc8, label %dec_label_pc_10004ca4

dec_label_pc_10004ca4:                            ; preds = %dec_label_pc_10004c50
  store i32 %v0_10004c9c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -81, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004cb0

dec_label_pc_10004cb0:                            ; preds = %dec_label_pc_10004cb0.dec_label_pc_10004cb0_crit_edge, %dec_label_pc_10004ca4
  %v1_10004cb8 = phi i32 [ %v1_10004cb8.pre, %dec_label_pc_10004cb0.dec_label_pc_10004cb0_crit_edge ], [ -81, %dec_label_pc_10004ca4 ]
  %v1_10004cbc = phi i32 [ %v1_10004cc0, %dec_label_pc_10004cb0.dec_label_pc_10004cb0_crit_edge ], [ 0, %dec_label_pc_10004ca4 ]
  %v1_10004cb0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004cb0 = add i32 %v1_10004cb0, %v1_10004cbc
  %v3_10004cb0 = inttoptr i32 %v2_10004cb0 to i8*
  %v4_10004cb0 = load i8, i8* %v3_10004cb0, align 1
  %v5_10004cb0 = zext i8 %v4_10004cb0 to i32
  %v1_10004cb4 = sub i32 -1, %v1_10004cb8
  %v2_10004cb8 = xor i32 %v5_10004cb0, %v1_10004cb4
  store i32 %v2_10004cb8, i32* %r0.global-to-local, align 4
  %v3_10004cbc = trunc i32 %v2_10004cb8 to i8
  store i8 %v3_10004cbc, i8* %v3_10004cb0, align 1
  %v0_10004cc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004cc0 = add i32 %v0_10004cc0, 1
  store i32 %v1_10004cc0, i32* %r9.global-to-local, align 4
  %v0_10004cc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004cc4 = add i32 %v0_10004cc4, -1
  store i32 %v1_10004cc4, i32* %ctr.global-to-local, align 4
  %v2_10004cc4 = icmp eq i32 %v1_10004cc4, 0
  br i1 %v2_10004cc4, label %dec_label_pc_10004cc8.loopexit, label %dec_label_pc_10004cb0.dec_label_pc_10004cb0_crit_edge

dec_label_pc_10004cb0.dec_label_pc_10004cb0_crit_edge: ; preds = %dec_label_pc_10004cb0
  %v1_10004cb8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004cb0

dec_label_pc_10004cc8.loopexit:                   ; preds = %dec_label_pc_10004cb0
  %v0_10004cdc.pre = load i32, i32* @r28, align 4
  %extract.t9 = trunc i32 %v0_10004cdc.pre to i8
  br label %dec_label_pc_10004cc8

dec_label_pc_10004cc8:                            ; preds = %dec_label_pc_10004cc8.loopexit, %dec_label_pc_10004c50
  %v0_10004cdc.off0 = phi i8 [ %extract.t9, %dec_label_pc_10004cc8.loopexit ], [ %extract.t10, %dec_label_pc_10004c50 ]
  %v3_10004cc8 = load i32, i32* @global_var_1001a9a4.67, align 4
  %v3_10004cd0 = load i32, i32* @global_var_1001a9a8.68, align 4
  %v1_10004cd4 = mul i32 %v3_10004cc8, 16
  %v2_10004cd8 = or i32 %v1_10004cd4, 13
  %v3_10004cdc = add i32 %v2_10004cd8, %v3_10004cd0
  %v4_10004cdc = inttoptr i32 %v3_10004cdc to i8*
  store i8 %v0_10004cdc.off0, i8* %v4_10004cdc, align 1
  %v0_10004ce0 = load i32, i32* @r30, align 4
  %v1_10004ce0 = mul i32 %v0_10004ce0, 16
  %v1_10004ce4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004ce4 = add i32 %v1_10004ce4, %v1_10004ce0
  store i32 %v2_10004ce4, i32* %r9.global-to-local, align 4
  %v3_10004ce8 = load i32, i32* @global_var_1001a9a4.67, align 4
  %v3_10004cec = load i32, i32* @global_var_1001a9a8.68, align 4
  %v1_10004cf0 = mul i32 %v3_10004ce8, 16
  %v3_10004cf4 = load i16, i16* @global_var_1001a9ac.69, align 2
  %v4_10004cf4 = zext i16 %v3_10004cf4 to i32
  store i32 %v4_10004cf4, i32* %r7.global-to-local, align 4
  %v2_10004cf8 = add i32 %v3_10004cec, %v1_10004cf0
  store i32 %v2_10004cf8, i32* %r11.global-to-local, align 4
  store i32 %v0_10004b98, i32* %r0.global-to-local, align 4
  %v1_10004d00 = add i32 %v3_10004ce8, 1
  store i32 %v1_10004d00, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001a9ac.69 to i32), i32* %r8.global-to-local, align 4
  %v0_10004d08 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004d08 = add i32 %v2_10004ce4, 4
  %v3_10004d08 = inttoptr i32 %v2_10004d08 to i32*
  store i32 %v0_10004d08, i32* %v3_10004d08, align 4
  %v0_10004d10 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10004d10, i32* @global_var_1001a9a4.67, align 4
  store i32 %v0_10004bb4, i32* @r28, align 4
  store i32 %v0_10004be0, i32* @r29, align 4
  store i32 %v0_10004be4, i32* @r30, align 4
  %v0_10004d40 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004d40 = trunc i32 %v0_10004d40 to i16
  %v2_10004d40 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d40 = add i32 %v2_10004d40, 10
  %v4_10004d40 = inttoptr i32 %v3_10004d40 to i16*
  store i16 %v1_10004d40, i16* %v4_10004d40, align 2
  %v0_10004d44 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004d44 = trunc i32 %v0_10004d44 to i16
  %v2_10004d44 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004d44 = add i32 %v2_10004d44, 8
  %v4_10004d44 = inttoptr i32 %v3_10004d44 to i16*
  store i16 %v1_10004d44, i16* %v4_10004d44, align 2
  %v0_10004d48 = load i32, i32* %r8.global-to-local, align 4
  %v1_10004d48 = trunc i32 %v0_10004d48 to i16
  store i16 %v1_10004d48, i16* @global_var_1001a9ac.69, align 2
  ret i32 %v3_10004c98

; uselistorder directives
  uselistorder i32 %v3_10004ce8, { 1, 0 }
  uselistorder i32 %v1_10004cc4, { 1, 0 }
  uselistorder i32 %v1_10004cc0, { 1, 0 }
  uselistorder i32 %v0_10004c9c, { 1, 0, 2 }
  uselistorder i32 %v1_10004c4c, { 1, 0 }
  uselistorder i32 %v1_10004c48, { 1, 0 }
  uselistorder i32 %v0_10004c24, { 1, 0, 2 }
  uselistorder i32 %v1_10004bb0, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 -81, { 0, 2, 1, 3 }
  uselistorder i32 (i8*)* @function_10007728, { 0, 1, 10, 2, 8, 9, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32)* @function_10008b38, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10004d50(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004d50:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i16 @__decompiler_undefined_function_2()
  %tmp58 = call i16 @__decompiler_undefined_function_2()
  %tmp59 = call i8 @__decompiler_undefined_function_1()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1916 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1920 = alloca i64, align 8
  %v0_10004d50 = load i32, i32* @lr, align 4
  store i32 %v0_10004d50, i32* %r0.global-to-local, align 4
  %v0_10004d58 = call i32 @__asm_mfcr()
  store i32 %v0_10004d58, i32* %r3.global-to-local, align 4
  %v0_10004d5c = load i32, i32* %r14.global-to-local, align 4
  %v0_10004d64 = load i32, i32* @r16, align 4
  %v0_10004d8c = load i32, i32* @r26, align 4
  %v0_10004d94 = load i32, i32* @r28, align 4
  %v0_10004d98 = load i32, i32* @r29, align 4
  %v0_10004d9c = load i32, i32* @r30, align 4
  %v0_10004da4 = load i32, i32* %r0.global-to-local, align 4
  store i32 268455344, i32* @lr, align 4
  %v0_10004dac = call i32 @function_10007cf8()
  store i32 %v0_10004dac, i32* %r3.global-to-local, align 4
  %v1_10004db0 = icmp slt i32 %v0_10004dac, 0
  %v3_10004db0 = icmp eq i32 %v0_10004dac, 0
  store i1 %v1_10004db0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004db0, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10004dac, i32* @global_var_1001a9bc.65, align 4
  %tmp102 = icmp slt i32 %v0_10004dac, 1
  br i1 %tmp102, label %dec_label_pc_10004e20, label %dec_label_pc_10004dc0

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004e20, %dec_label_pc_10004d50
  store i32 %v0_10004da4, i32* %r0.global-to-local, align 4
  store i32 %v0_10004d5c, i32* %r14.global-to-local, align 4
  %v1_10004dd4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10004d58)
  store i32 %v0_10004d64, i32* %r16.global-to-local, align 4
  store i32 %v0_10004d8c, i32* %r26.global-to-local, align 4
  store i32 %v0_10004d94, i32* @r28, align 4
  store i32 %v0_10004d98, i32* @r29, align 4
  store i32 %v0_10004d9c, i32* @r30, align 4
  ret i32 %v0_10004dac

dec_label_pc_10004e20:                            ; preds = %dec_label_pc_10004d50
  %v1_10004e20 = icmp slt i32 %v0_10004dac, -1
  %v3_10004e20 = icmp eq i32 %v0_10004dac, -1
  store i1 %v1_10004e20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004e20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004e20, label %dec_label_pc_10004dc0, label %dec_label_pc_10004e28

dec_label_pc_10004e28:                            ; preds = %dec_label_pc_10004e20
  store i32 268455468, i32* @lr, align 4
  %v1_10004e28 = call i32 @function_10007988(i32 %v0_10004dac)
  store i32 %v1_10004e28, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10004e28, i32* @global_var_1001a998.12, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e38.70 to i32), i32* @lr, align 4
  %v1_10004e34 = call i32 @function_100048f8(i32 %v1_10004e28)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268455488, i32* @lr, align 4
  %v0_10004e3c = call i32 @function_10008038()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10004e3c, i32* @global_var_1001a9b0.66, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004e54.71 to i32), i32* @lr, align 4
  %v2_10004e50 = call i32 @function_100089c8(i32 256, i32 288)
  store i32 %v2_10004e50, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1920, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10004e50, i32* @global_var_1001a9b4.72, align 4
  store i32 %v2_10004e50, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10004e80 = add i32 %v2_10004e50, 4
  store i32 %v1_10004e80, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004e84

dec_label_pc_10004e84:                            ; preds = %dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge, %dec_label_pc_10004e28
  %v1_10004e98 = phi i32 [ %v1_10004ea0, %dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge ], [ %v1_10004e80, %dec_label_pc_10004e28 ]
  %v0_10004e98 = phi i32 [ %v0_10004e98.pre, %dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge ], [ -1, %dec_label_pc_10004e28 ]
  %v1_10004e94 = phi i32 [ %v1_10004e94.pre, %dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge ], [ %v2_10004e50, %dec_label_pc_10004e28 ]
  %v0_10004e90 = phi i32 [ %v0_10004ea4, %dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge ], [ 0, %dec_label_pc_10004e28 ]
  %v1_10004e84 = mul i32 %v0_10004e90, 256
  store i32 %v1_10004e84, i32* %r0.global-to-local, align 4
  %v2_10004e8c = mul i32 %v0_10004e90, 288
  %v1_10004e90 = add i32 %v0_10004e90, 1
  store i32 %v1_10004e90, i32* %r10.global-to-local, align 4
  %v2_10004e94 = add i32 %v2_10004e8c, %v1_10004e94
  store i32 %v2_10004e94, i32* %r9.global-to-local, align 4
  %v2_10004e98 = inttoptr i32 %v1_10004e98 to i32*
  store i32 %v0_10004e98, i32* %v2_10004e98, align 4
  %v0_10004e9c = load i32, i32* %r7.global-to-local, align 4
  %v1_10004e9c = load i32, i32* %r9.global-to-local, align 4
  %v2_10004e9c = add i32 %v1_10004e9c, 12
  %v3_10004e9c = inttoptr i32 %v2_10004e9c to i32*
  store i32 %v0_10004e9c, i32* %v3_10004e9c, align 4
  %v0_10004ea0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004ea0 = add i32 %v0_10004ea0, 288
  store i32 %v1_10004ea0, i32* %r11.global-to-local, align 4
  %v0_10004ea4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10004ea4, i32* %r9.global-to-local, align 4
  %v0_10004ea8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10004ea8 = add i32 %v0_10004ea8, -1
  store i32 %v1_10004ea8, i32* %ctr.global-to-local, align 4
  %v2_10004ea8 = icmp eq i32 %v1_10004ea8, 0
  br i1 %v2_10004ea8, label %dec_label_pc_10004eac, label %dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge

dec_label_pc_10004e84.dec_label_pc_10004e84_crit_edge: ; preds = %dec_label_pc_10004e84
  %v1_10004e94.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10004e98.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10004e84

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004e84
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1920, align 8
  store i32 268455620, i32* @lr, align 4
  %v3_10004ec0 = call i32 @function_1000866c(i32 2, i32 3, i32 6)
  store i32 %v3_10004ec0, i32* %r3.global-to-local, align 4
  %v1_10004ec4 = icmp slt i32 %v3_10004ec0, -1
  %v3_10004ec4 = icmp eq i32 %v3_10004ec0, -1
  store i1 %v1_10004ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004ec4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004ec0, i32* @r29, align 4
  store i32 %v3_10004ec0, i32* @global_var_1001a9b8.73, align 4
  br i1 %v3_10004ec4, label %dec_label_pc_100065c8, label %dec_label_pc_10004ed8

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004eac
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268455656, i32* @lr, align 4
  %v1_10004ee4 = call i32 @function_10007bc8(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10004eec = or i32 %v1_10004ee4, 2048
  store i32 %v1_10004eec, i32* %r5.global-to-local, align 4
  %v0_10004ef0 = load i32, i32* @r29, align 4
  store i32 %v0_10004ef0, i32* %r3.global-to-local, align 4
  store i32 268455676, i32* @lr, align 4
  %v2_10004ef8 = call i32 @function_10007bc8(i32 %v0_10004ef0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004f00 = load i32, i32* @global_var_1001a9b8.73, align 4
  store i32 %v3_10004f00, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10004f10 = ptrtoint i64* %stack_var_-1920 to i32
  store i32 %v2_10004f10, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1920, align 8
  store i32 268455712, i32* @lr, align 4
  %v5_10004f1c = call i32 @function_10008630(i32 %v3_10004f00, i32 0, i32 3, i32 %v2_10004f10)
  store i32 %v5_10004f1c, i32* %r3.global-to-local, align 4
  %v1_10004f20 = icmp slt i32 %v5_10004f1c, 0
  %v3_10004f20 = icmp eq i32 %v5_10004f1c, 0
  store i1 %v1_10004f20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004f20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004f20, label %dec_label_pc_10004f28, label %dec_label_pc_10007250

dec_label_pc_10004f28:                            ; preds = %dec_label_pc_10004ed8, %dec_label_pc_10004f28
  %v0_10004f28 = call i32 @function_100048a8()
  %v1_10004f2c = urem i32 %v0_10004f28, 65536
  store i32 %v1_10004f2c, i32* %r3.global-to-local, align 4
  %v1_10004f30 = icmp ult i32 %v1_10004f2c, 1023
  %v3_10004f30 = icmp eq i32 %v1_10004f2c, 1023
  store i1 %v1_10004f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10004f30, i1* %cr7_eq.global-to-local, align 1
  %tmp103 = icmp ult i32 %v1_10004f2c, 1024
  br i1 %tmp103, label %dec_label_pc_10004f28, label %dec_label_pc_10004f3c

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004f28
  %v5_10004f34.le = trunc i32 %v0_10004f28 to i16
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10004f44 = load i32, i32* @global_var_1001aa24.74, align 4
  store i32 %v3_10004f44, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001aa24.74 to i32), i32* @r30, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004f54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10004f54, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10004f5c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004f5c, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10004f5c, i32* @global_var_1001aa24.74, align 4
  store i32 268500992, i32* %r26.global-to-local, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001aa26.76 to i16*), align 4
  %v0_10004f70 = call i32 @function_100048a8()
  %v1_10004f70 = trunc i32 %v0_10004f70 to i16
  store i32 %v0_10004f70, i32* %r3.global-to-local, align 4
  %v3_10004f74 = load i32, i32* @global_var_1001aa44.77, align 4
  store i32 %v3_10004f74, i32* %r11.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_1001aa2d.78 to i8*), align 4
  %v1_10004f84 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10004f84, i32* %r11.global-to-local, align 4
  %v0_10004f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004f88 = trunc i32 %v0_10004f88 to i8
  store i8 %v1_10004f88, i8* bitcast (i32* @global_var_1001aa2c.79 to i8*), align 4
  store i16 %v1_10004f70, i16* bitcast (i32* @global_var_1001aa28.80 to i16*), align 4
  store i32 %v1_10004f84, i32* @global_var_1001aa44.77, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000a13c.81 to i32), i32* @r28, align 4
  store i16 23, i16* @global_var_1001aa3a.82, align 2
  store i32 ptrtoint (i32* @global_var_1000a298.83 to i32), i32* @r26, align 4
  %v4_10004fa4 = sext i16 %v5_10004f34.le to i32
  store i32 %v4_10004fa4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000a2e0.84 to i32), i32* @r27, align 4
  store i32 268500992, i32* %r25.global-to-local, align 4
  store i16 %v5_10004f34.le, i16* bitcast (i32* @global_var_1001aa38.75 to i16*), align 4
  %v0_10004fb8 = call i32 @function_100048a8()
  %v1_10004fb8 = trunc i32 %v0_10004fb8 to i16
  store i16 %v1_10004fb8, i16* bitcast (i32* @global_var_1001aa46.85 to i16*), align 4
  %v0_10004fc0 = load i32, i32* @r26, align 4
  %v0_10004fc4 = load i32, i32* @r28, align 4
  store i32 %v0_10004fc4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v3_10004fcc = load i32, i32* @global_var_1001aa44.77, align 4
  store i32 ptrtoint (i32* @global_var_10009dd8.86 to i32), i32* @r25, align 4
  %v1_10004fdc = or i32 %v3_10004fcc, 131072
  store i32 %v1_10004fdc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10009de8.87 to i32), i32* @r24, align 4
  store i32 %v1_10004fdc, i32* @global_var_1001aa44.77, align 4
  store i32 ptrtoint (i32* @global_var_10009dfc.88 to i32), i32* @r23, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268455928, i32* @lr, align 4
  %v4_10004ff4 = call i32 @function_10004b94(i32 %v0_10004fc4, i32 %v0_10004fc0, i32 4)
  %v0_10004ff8 = load i32, i32* @r27, align 4
  store i32 %v0_10004ff8, i32* %r3.global-to-local, align 4
  %v0_10004ffc = load i32, i32* @r26, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268455944, i32* @lr, align 4
  %v4_10005004 = call i32 @function_10004b94(i32 %v0_10004ff8, i32 %v0_10004ffc, i32 5)
  %v0_10005010 = load i32, i32* @r28, align 4
  store i32 %v0_10005010, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e04.90 to i32), i32* @r22, align 4
  store i32 268455968, i32* @lr, align 4
  %v4_1000501c = call i32 @function_10004b94(i32 %v0_10005010, i32 ptrtoint (i32* @global_var_10009dc8.89 to i32), i32 10)
  store i32 9, i32* %r5.global-to-local, align 4
  %v0_1000502c = load i32, i32* @r28, align 4
  store i32 %v0_1000502c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10009e0c.92 to i32), i32* @r29, align 4
  store i32 268455992, i32* @lr, align 4
  %v5_10005034 = call i32 @function_10004b94(i32 %v0_1000502c, i32 ptrtoint ([6 x i8]* @global_var_10009dd0.91 to i32), i32 9)
  %v0_10005038 = load i32, i32* @r28, align 4
  store i32 %v0_10005038, i32* %r3.global-to-local, align 4
  %v0_1000503c = load i32, i32* @r27, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268456008, i32* @lr, align 4
  %v5_10005044 = call i32 @function_10004b94(i32 %v0_10005038, i32 %v0_1000503c, i32 8)
  %v0_10005048 = load i32, i32* @r27, align 4
  store i32 %v0_10005048, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268456024, i32* @lr, align 4
  %v5_10005054 = call i32 @function_10004b94(i32 %v0_10005048, i32 %v0_10005048, i32 7)
  %v0_10005058 = load i32, i32* @r25, align 4
  %v0_1000505c = load i32, i32* @r28, align 4
  store i32 %v0_1000505c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268456040, i32* @lr, align 4
  %v4_10005064 = call i32 @function_10004b94(i32 %v0_1000505c, i32 %v0_10005058, i32 6)
  %v0_10005070 = load i32, i32* @r28, align 4
  store i32 %v0_10005070, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268456064, i32* @lr, align 4
  %v5_1000507c = call i32 @function_10004b94(i32 %v0_10005070, i32 ptrtoint ([8 x i8]* @global_var_10009de0.93 to i32), i32 5)
  %v0_10005080 = load i32, i32* @r24, align 4
  %v0_10005084 = load i32, i32* @r28, align 4
  store i32 %v0_10005084, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268456080, i32* @lr, align 4
  %v5_1000508c = call i32 @function_10004b94(i32 %v0_10005084, i32 %v0_10005080, i32 5)
  %v0_10005098 = load i32, i32* @r28, align 4
  store i32 %v0_10005098, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a218.95 to i32), i32* %r21.global-to-local, align 4
  store i32 268456104, i32* @lr, align 4
  %v5_100050a4 = call i32 @function_10004b94(i32 %v0_10005098, i32 ptrtoint ([9 x i8]* @global_var_10009df0.94 to i32), i32 5)
  %v0_100050a8 = load i32, i32* @r28, align 4
  store i32 %v0_100050a8, i32* %r3.global-to-local, align 4
  %v0_100050ac = load i32, i32* @r23, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268456120, i32* @lr, align 4
  %v4_100050b4 = call i32 @function_10004b94(i32 %v0_100050a8, i32 %v0_100050ac, i32 5)
  %v0_100050b8 = load i32, i32* @r22, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v0_100050c0 = load i32, i32* @r28, align 4
  store i32 %v0_100050c0, i32* %r3.global-to-local, align 4
  store i32 268456136, i32* @lr, align 4
  %v4_100050c4 = call i32 @function_10004b94(i32 %v0_100050c0, i32 %v0_100050b8, i32 5)
  %v0_100050c8 = load i32, i32* @r24, align 4
  store i32 %v0_100050c8, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268456152, i32* @lr, align 4
  %v5_100050d4 = call i32 @function_10004b94(i32 %v0_100050c8, i32 %v0_100050c8, i32 7)
  %v0_100050d8 = load i32, i32* @r24, align 4
  store i32 %v0_100050d8, i32* %r3.global-to-local, align 4
  %v0_100050dc = load i32, i32* @r26, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268456168, i32* @lr, align 4
  %v4_100050e4 = call i32 @function_10004b94(i32 %v0_100050d8, i32 %v0_100050dc, i32 7)
  %v0_100050e8 = load i32, i32* @r29, align 4
  store i32 %v0_100050e8, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268456184, i32* @lr, align 4
  %v5_100050f4 = call i32 @function_10004b94(i32 %v0_100050e8, i32 %v0_100050e8, i32 5)
  %v0_100050f8 = load i32, i32* @r29, align 4
  store i32 %v0_100050f8, i32* %r3.global-to-local, align 4
  %v0_100050fc = load i32, i32* @r27, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268456200, i32* @lr, align 4
  %v5_10005104 = call i32 @function_10004b94(i32 %v0_100050f8, i32 %v0_100050fc, i32 7)
  %v0_10005108 = load i32, i32* @r29, align 4
  store i32 %v0_10005108, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  %v0_10005110 = load i32, i32* %r21.global-to-local, align 4
  store i32 268456216, i32* @lr, align 4
  %v4_10005114 = call i32 @function_10004b94(i32 %v0_10005108, i32 %v0_10005110, i32 7)
  %v0_1000511c = load i32, i32* @r29, align 4
  store i32 %v0_1000511c, i32* %r3.global-to-local, align 4
  %v0_10005120 = load i32, i32* @r23, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10009e14.96 to i32), i32* %r20.global-to-local, align 4
  store i32 268456240, i32* @lr, align 4
  %v4_1000512c = call i32 @function_10004b94(i32 %v0_1000511c, i32 %v0_10005120, i32 7)
  %v0_10005130 = load i32, i32* @r29, align 4
  %v0_10005134 = load i32, i32* @r27, align 4
  store i32 %v0_10005134, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268456256, i32* @lr, align 4
  %v5_1000513c = call i32 @function_10004b94(i32 %v0_10005134, i32 %v0_10005130, i32 7)
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10005148 = load i32, i32* @r27, align 4
  store i32 %v0_10005148, i32* %r3.global-to-local, align 4
  %v0_1000514c = load i32, i32* %r20.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e20.97 to i32), i32* %r19.global-to-local, align 4
  store i32 268456280, i32* @lr, align 4
  %v5_10005154 = call i32 @function_10004b94(i32 %v0_10005148, i32 %v0_1000514c, i32 4)
  %v0_1000515c = load i32, i32* @r28, align 4
  store i32 %v0_1000515c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10009e28.98 to i32), i32* %r18.global-to-local, align 4
  store i32 268456304, i32* @lr, align 4
  %v5_1000516c = call i32 @function_10004b94(i32 %v0_1000515c, i32 %v0_1000515c, i32 4)
  %v0_10005170 = load i32, i32* @r28, align 4
  store i32 %v0_10005170, i32* %r3.global-to-local, align 4
  %v0_10005174 = load i32, i32* %r19.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268456320, i32* @lr, align 4
  %v4_1000517c = call i32 @function_10004b94(i32 %v0_10005170, i32 %v0_10005174, i32 4)
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10005184 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005184, i32* %r3.global-to-local, align 4
  %v0_10005188 = load i32, i32* @r26, align 4
  store i32 268456336, i32* @lr, align 4
  %v4_1000518c = call i32 @function_10004b94(i32 %v0_10005184, i32 %v0_10005188, i32 4)
  store i32 %v0_10005184, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10009e30.99 to i32), i32* %r17.global-to-local, align 4
  store i32 268456360, i32* @lr, align 4
  %v5_100051a4 = call i32 @function_10004b94(i32 %v0_10005184, i32 %v0_10005184, i32 4)
  %v0_100051a8 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100051a8, i32* %r3.global-to-local, align 4
  %v0_100051ac = load i32, i32* @r23, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268456376, i32* @lr, align 4
  %v4_100051b4 = call i32 @function_10004b94(i32 %v0_100051a8, i32 %v0_100051ac, i32 6)
  %v0_100051b8 = load i32, i32* @r28, align 4
  store i32 %v0_100051b8, i32* %r3.global-to-local, align 4
  %v0_100051bc = load i32, i32* %r17.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100051c8.100 to i32), i32* @lr, align 4
  %v5_100051c4 = call i32 @function_10004b94(i32 %v0_100051b8, i32 %v0_100051bc, i32 3)
  store i32 ptrtoint (i32* @global_var_10009f8c.101 to i32), i32* %r16.global-to-local, align 4
  %v0_100051d8 = load i32, i32* @r27, align 4
  store i32 %v0_100051d8, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r15.global-to-local, align 4
  store i32 268456424, i32* @lr, align 4
  %v4_100051e4 = call i32 @function_10004b94(i32 %v0_100051d8, i32 ptrtoint (i32* @global_var_10009e38.102 to i32), i32 3)
  %v0_100051e8 = load i32, i32* %r16.global-to-local, align 4
  %v0_100051ec = load i32, i32* @r28, align 4
  store i32 %v0_100051ec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268456440, i32* @lr, align 4
  %v4_100051f4 = call i32 @function_10004b94(i32 %v0_100051ec, i32 %v0_100051e8, i32 4)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_10005204 = load i32, i32* @r27, align 4
  store i32 %v0_10005204, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009e50.104 to i32), i32* %r15.global-to-local, align 4
  store i32 268456464, i32* @lr, align 4
  %v5_1000520c = call i32 @function_10004b94(i32 %v0_10005204, i32 ptrtoint ([9 x i8]* @global_var_10009e44.103 to i32), i32 8)
  %v0_10005210 = load i32, i32* %r16.global-to-local, align 4
  %v0_10005214 = load i32, i32* @r27, align 4
  store i32 %v0_10005214, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268456480, i32* @lr, align 4
  %v4_1000521c = call i32 @function_10004b94(i32 %v0_10005214, i32 %v0_10005210, i32 2)
  %v0_10005220 = load i32, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v0_10005228 = load i32, i32* @r28, align 4
  store i32 %v0_10005228, i32* %r3.global-to-local, align 4
  store i32 268456496, i32* @lr, align 4
  %v4_1000522c = call i32 @function_10004b94(i32 %v0_10005228, i32 %v0_10005220, i32 2)
  %v0_10005230 = load i32, i32* @r28, align 4
  store i32 %v0_10005230, i32* %r3.global-to-local, align 4
  %v0_10005234 = load i32, i32* %r20.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268456512, i32* @lr, align 4
  %v5_1000523c = call i32 @function_10004b94(i32 %v0_10005230, i32 %v0_10005234, i32 2)
  %v0_10005240 = load i32, i32* @r28, align 4
  store i32 %v0_10005240, i32* %r3.global-to-local, align 4
  %v0_10005244 = load i32, i32* %r21.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268456528, i32* @lr, align 4
  %v4_1000524c = call i32 @function_10004b94(i32 %v0_10005240, i32 %v0_10005244, i32 4)
  store i32 ptrtoint ([14 x i8]* @global_var_10009e60.105 to i32), i32* @r29, align 4
  %v0_10005260 = load i32, i32* @r28, align 4
  store i32 %v0_10005260, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r14.global-to-local, align 4
  store i32 268456560, i32* @lr, align 4
  %v4_1000526c = call i32 @function_10004b94(i32 %v0_10005260, i32 ptrtoint (i32* @global_var_10009e58.106 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_10009e70.107 to i32), i32* %r14.global-to-local, align 4
  %v0_10005274 = load i32, i32* @r29, align 4
  store i32 %v0_10005274, i32* %r3.global-to-local, align 4
  %v0_10005278 = load i32, i32* @r26, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268456580, i32* @lr, align 4
  %v4_10005280 = call i32 @function_10004b94(i32 %v0_10005274, i32 %v0_10005278, i32 13)
  %v0_10005284 = load i32, i32* @r29, align 4
  store i32 %v0_10005284, i32* %r3.global-to-local, align 4
  %v0_10005288 = load i32, i32* %r14.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268456596, i32* @lr, align 4
  %v5_10005290 = call i32 @function_10004b94(i32 %v0_10005284, i32 %v0_10005288, i32 13)
  %v0_10005298 = load i32, i32* @r29, align 4
  store i32 %v0_10005298, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268456616, i32* @lr, align 4
  %v5_100052a4 = call i32 @function_10004b94(i32 %v0_10005298, i32 ptrtoint ([4 x i8]* @global_var_10009e78.108 to i32), i32 13)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_100052b0 = load i32, i32* @r29, align 4
  store i32 %v0_100052b0, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10009e84.112 to i32), i32* @r29, align 4
  store i32 268456644, i32* @lr, align 4
  %v5_100052c0 = call i32 @function_10004b94(i32 %v0_100052b0, i32 ptrtoint ([7 x i8]* @global_var_10009e7c.109 to i32), i32 13)
  %v0_100052c4 = load i32, i32* @r29, align 4
  store i32 %v0_100052c4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268456660, i32* @lr, align 4
  %v5_100052d0 = call i32 @function_10004b94(i32 %v0_100052c4, i32 %v0_100052c4, i32 1)
  %v0_100052d4 = load i32, i32* @r29, align 4
  %v0_100052d8 = load i32, i32* @r27, align 4
  store i32 %v0_100052d8, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268456676, i32* @lr, align 4
  %v5_100052e0 = call i32 @function_10004b94(i32 %v0_100052d8, i32 %v0_100052d4, i32 7)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_10009e8c.110 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10009e98.114 to i32), i32* @r29, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268456704, i32* @lr, align 4
  %v4_100052fc = call i32 @function_10004b94(i32 ptrtoint ([11 x i8]* @global_var_10009e8c.110 to i32), i32 10, i32 10)
  %v0_10005300 = load i32, i32* @r29, align 4
  store i32 %v0_10005300, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v0_10005308 = load i32, i32* @r26, align 4
  store i32 268456720, i32* @lr, align 4
  %v4_1000530c = call i32 @function_10004b94(i32 %v0_10005300, i32 %v0_10005308, i32 5)
  %v0_10005310 = load i32, i32* @r29, align 4
  store i32 %v0_10005310, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268456736, i32* @lr, align 4
  %v5_1000531c = call i32 @function_10004b94(i32 %v0_10005310, i32 %v0_10005310, i32 5)
  %v0_10005320 = load i32, i32* @r29, align 4
  store i32 %v0_10005320, i32* %r3.global-to-local, align 4
  %v0_10005324 = load i32, i32* %r19.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268456752, i32* @lr, align 4
  %v4_1000532c = call i32 @function_10004b94(i32 %v0_10005320, i32 %v0_10005324, i32 5)
  %v0_10005330 = load i32, i32* @r29, align 4
  store i32 %v0_10005330, i32* %r3.global-to-local, align 4
  %v0_10005334 = load i32, i32* @r23, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268456768, i32* @lr, align 4
  %v4_1000533c = call i32 @function_10004b94(i32 %v0_10005330, i32 %v0_10005334, i32 6)
  store i32 ptrtoint (i32* @global_var_10009ea0.115 to i32), i32* %r3.global-to-local, align 4
  %v0_10005348 = load i32, i32* %r20.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268456792, i32* @lr, align 4
  %v4_10005354 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_10009ea0.115 to i32), i32 %v0_10005348, i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_10009ea8.116 to i32), i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  %v0_10005364 = load i32, i32* %r21.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10009eb8.117 to i32), i32* @r29, align 4
  store i32 268456816, i32* @lr, align 4
  %v4_1000536c = call i32 @function_10004b94(i32 ptrtoint ([14 x i8]* @global_var_10009ea8.116 to i32), i32 %v0_10005364, i32 13)
  %v0_10005370 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10005370, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268456832, i32* @lr, align 4
  %v3_1000537c = call i32 @function_10004b94(i32 %v0_10005370, i32 %v0_10005370, i32 6)
  %v0_10005380 = load i32, i32* @r25, align 4
  store i32 %v0_10005380, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268456848, i32* @lr, align 4
  %v3_1000538c = call i32 @function_10004b94(i32 %v0_10005380, i32 %v0_10005380, i32 6)
  %v0_10005390 = load i32, i32* @r29, align 4
  store i32 %v0_10005390, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268456864, i32* @lr, align 4
  %v5_1000539c = call i32 @function_10004b94(i32 %v0_10005390, i32 %v0_10005390, i32 4)
  %v0_100053a0 = load i32, i32* @r29, align 4
  %v0_100053a4 = load i32, i32* @r28, align 4
  store i32 %v0_100053a4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268456880, i32* @lr, align 4
  %v5_100053ac = call i32 @function_10004b94(i32 %v0_100053a4, i32 %v0_100053a0, i32 4)
  %v0_100053b8 = load i32, i32* @r28, align 4
  store i32 %v0_100053b8, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268456904, i32* @lr, align 4
  %v4_100053c4 = call i32 @function_10004b94(i32 %v0_100053b8, i32 ptrtoint (i32* @global_var_10009ec0.118 to i32), i32 11)
  %v0_100053d0 = load i32, i32* @r28, align 4
  store i32 %v0_100053d0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009f0c.120 to i32), i32* @r29, align 4
  store i32 268456928, i32* @lr, align 4
  %v4_100053dc = call i32 @function_10004b94(i32 %v0_100053d0, i32 ptrtoint (i32* @global_var_10009ec8.119 to i32), i32 10)
  %v0_100053e8 = load i32, i32* @r28, align 4
  store i32 %v0_100053e8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268456952, i32* @lr, align 4
  %v4_100053f4 = call i32 @function_10004b94(i32 %v0_100053e8, i32 ptrtoint (i32* @global_var_10009ed0.121 to i32), i32 10)
  %v0_10005400 = load i32, i32* @r28, align 4
  store i32 %v0_10005400, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009f88.123 to i32), i32* @r25, align 4
  store i32 268456976, i32* @lr, align 4
  %v5_1000540c = call i32 @function_10004b94(i32 %v0_10005400, i32 ptrtoint ([6 x i8]* @global_var_10009ed8.122 to i32), i32 9)
  %v0_10005418 = load i32, i32* @r28, align 4
  store i32 %v0_10005418, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* %r15.global-to-local, align 4
  store i32 268457000, i32* @lr, align 4
  %v5_10005424 = call i32 @function_10004b94(i32 %v0_10005418, i32 ptrtoint ([5 x i8]* @global_var_10009ee0.124 to i32), i32 8)
  %v0_10005430 = load i32, i32* @r28, align 4
  store i32 %v0_10005430, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268457020, i32* @lr, align 4
  %v5_10005438 = call i32 @function_10004b94(i32 %v0_10005430, i32 ptrtoint ([6 x i8]* @global_var_10009ee8.125 to i32), i32 9)
  %v0_10005444 = load i32, i32* @r28, align 4
  store i32 %v0_10005444, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268457040, i32* @lr, align 4
  %v5_1000544c = call i32 @function_10004b94(i32 %v0_10005444, i32 ptrtoint ([9 x i8]* @global_var_10009ef0.126 to i32), i32 12)
  %v0_10005458 = load i32, i32* @r28, align 4
  store i32 %v0_10005458, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457060, i32* @lr, align 4
  %v4_10005460 = call i32 @function_10004b94(i32 %v0_10005458, i32 ptrtoint (i32* @global_var_10009efc.127 to i32), i32 1)
  %v0_10005464 = load i32, i32* @r29, align 4
  %v0_10005468 = load i32, i32* @r28, align 4
  store i32 %v0_10005468, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457076, i32* @lr, align 4
  %v4_10005470 = call i32 @function_10004b94(i32 %v0_10005468, i32 %v0_10005464, i32 1)
  %v0_1000547c = load i32, i32* @r28, align 4
  store i32 %v0_1000547c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457096, i32* @lr, align 4
  %v5_10005484 = call i32 @function_10004b94(i32 %v0_1000547c, i32 ptrtoint ([7 x i8]* @global_var_10009f1c.128 to i32), i32 1)
  %v0_10005490 = load i32, i32* @r28, align 4
  store i32 %v0_10005490, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457116, i32* @lr, align 4
  %v5_10005498 = call i32 @function_10004b94(i32 %v0_10005490, i32 ptrtoint ([5 x i8]* @global_var_10009f24.129 to i32), i32 1)
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_100054a8 = load i32, i32* @r28, align 4
  store i32 %v0_100054a8, i32* %r3.global-to-local, align 4
  store i32 268457136, i32* @lr, align 4
  %v5_100054ac = call i32 @function_10004b94(i32 %v0_100054a8, i32 ptrtoint ([9 x i8]* @global_var_10009f2c.130 to i32), i32 1)
  %v0_100054b0 = load i32, i32* @r28, align 4
  store i32 %v0_100054b0, i32* %r3.global-to-local, align 4
  %v0_100054b4 = load i32, i32* %r18.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457152, i32* @lr, align 4
  %v5_100054bc = call i32 @function_10004b94(i32 %v0_100054b0, i32 %v0_100054b4, i32 1)
  %v0_100054c8 = load i32, i32* @r28, align 4
  store i32 %v0_100054c8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457172, i32* @lr, align 4
  %v5_100054d0 = call i32 @function_10004b94(i32 %v0_100054c8, i32 ptrtoint ([8 x i8]* @global_var_10009f38.131 to i32), i32 1)
  %v0_100054dc = load i32, i32* @r28, align 4
  store i32 %v0_100054dc, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268457192, i32* @lr, align 4
  %v4_100054e4 = call i32 @function_10004b94(i32 %v0_100054dc, i32 ptrtoint (i32* @global_var_10009f40.132 to i32), i32 8)
  %v0_100054f0 = load i32, i32* @r28, align 4
  store i32 %v0_100054f0, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268457212, i32* @lr, align 4
  %v4_100054f8 = call i32 @function_10004b94(i32 %v0_100054f0, i32 ptrtoint (i32* @global_var_10009f4c.133 to i32), i32 6)
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_10005508 = load i32, i32* @r27, align 4
  store i32 %v0_10005508, i32* %r3.global-to-local, align 4
  store i32 268457232, i32* @lr, align 4
  %v4_1000550c = call i32 @function_10004b94(i32 %v0_10005508, i32 ptrtoint (i32* @global_var_10009f54.134 to i32), i32 1)
  %v0_10005510 = load i32, i32* @r27, align 4
  store i32 %v0_10005510, i32* %r3.global-to-local, align 4
  %v0_10005514 = load i32, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457248, i32* @lr, align 4
  %v4_1000551c = call i32 @function_10004b94(i32 %v0_10005510, i32 %v0_10005514, i32 5)
  %v0_10005520 = load i32, i32* @r27, align 4
  store i32 %v0_10005520, i32* %r3.global-to-local, align 4
  %v0_10005524 = load i32, i32* %r19.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457264, i32* @lr, align 4
  %v4_1000552c = call i32 @function_10004b94(i32 %v0_10005520, i32 %v0_10005524, i32 1)
  %v0_10005530 = load i32, i32* @r22, align 4
  %v0_10005534 = load i32, i32* @r27, align 4
  store i32 %v0_10005534, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457280, i32* @lr, align 4
  %v4_1000553c = call i32 @function_10004b94(i32 %v0_10005534, i32 %v0_10005530, i32 1)
  %v0_10005540 = load i32, i32* @r27, align 4
  store i32 %v0_10005540, i32* %r3.global-to-local, align 4
  %v0_10005544 = load i32, i32* @r23, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457296, i32* @lr, align 4
  %v4_1000554c = call i32 @function_10004b94(i32 %v0_10005540, i32 %v0_10005544, i32 1)
  %v0_10005550 = load i32, i32* @r29, align 4
  %v0_10005554 = load i32, i32* @r27, align 4
  store i32 %v0_10005554, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457312, i32* @lr, align 4
  %v4_1000555c = call i32 @function_10004b94(i32 %v0_10005554, i32 %v0_10005550, i32 1)
  store i32 8, i32* %r5.global-to-local, align 4
  %v0_1000556c = load i32, i32* @r27, align 4
  store i32 %v0_1000556c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268457336, i32* @lr, align 4
  %v4_10005574 = call i32 @function_10004b94(i32 %v0_1000556c, i32 ptrtoint (i32* @global_var_10009f5c.135 to i32), i32 8)
  %v0_10005578 = load i32, i32* @r27, align 4
  store i32 %v0_10005578, i32* %r3.global-to-local, align 4
  %v0_1000557c = load i32, i32* %r17.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457352, i32* @lr, align 4
  %v5_10005584 = call i32 @function_10004b94(i32 %v0_10005578, i32 %v0_1000557c, i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_10009df4.136 to i32), i32* @r29, align 4
  %v0_1000558c = load i32, i32* %r14.global-to-local, align 4
  %v0_10005590 = load i32, i32* @r27, align 4
  store i32 %v0_10005590, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457376, i32* @lr, align 4
  %v5_1000559c = call i32 @function_10004b94(i32 %v0_10005590, i32 %v0_1000558c, i32 1)
  %v0_100055a0 = load i32, i32* @r29, align 4
  %v0_100055a4 = load i32, i32* @r27, align 4
  store i32 %v0_100055a4, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457392, i32* @lr, align 4
  %v5_100055ac = call i32 @function_10004b94(i32 %v0_100055a4, i32 %v0_100055a0, i32 5)
  %v0_100055b8 = load i32, i32* @r27, align 4
  store i32 %v0_100055b8, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10009fe8.138 to i32), i32* @r22, align 4
  store i32 268457416, i32* @lr, align 4
  %v4_100055c4 = call i32 @function_10004b94(i32 %v0_100055b8, i32 ptrtoint (i32* @global_var_10009f68.137 to i32), i32 8)
  %v0_100055d0 = load i32, i32* @r27, align 4
  store i32 %v0_100055d0, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v2_100055d8 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v2_100055d8, i32* %r14.global-to-local, align 4
  store i32 268457440, i32* @lr, align 4
  %v5_100055dc = call i32 @function_10004b94(i32 %v0_100055d0, i32 ptrtoint ([6 x i8]* @global_var_10009f74.139 to i32), i32 5)
  %v0_100055e8 = load i32, i32* @r27, align 4
  store i32 %v0_100055e8, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457460, i32* @lr, align 4
  %v5_100055f0 = call i32 @function_10004b94(i32 %v0_100055e8, i32 ptrtoint ([4 x i8]* @global_var_10009f7c.140 to i32), i32 5)
  %v0_100055fc = load i32, i32* @r27, align 4
  store i32 %v0_100055fc, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457480, i32* @lr, align 4
  %v4_10005604 = call i32 @function_10004b94(i32 %v0_100055fc, i32 ptrtoint (i32* @global_var_10009f80.141 to i32), i32 5)
  %v0_10005608 = load i32, i32* @r27, align 4
  store i32 %v0_10005608, i32* %r3.global-to-local, align 4
  %v0_1000560c = load i32, i32* @r25, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268457496, i32* @lr, align 4
  %v4_10005614 = call i32 @function_10004b94(i32 %v0_10005608, i32 %v0_1000560c, i32 8)
  %v0_10005620 = load i32, i32* @r27, align 4
  store i32 %v0_10005620, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268457516, i32* @lr, align 4
  %v5_10005628 = call i32 @function_10004b94(i32 %v0_10005620, i32 ptrtoint ([7 x i8]* @global_var_10009f94.142 to i32), i32 6)
  %v0_10005634 = load i32, i32* @r27, align 4
  store i32 %v0_10005634, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268457536, i32* @lr, align 4
  %v5_1000563c = call i32 @function_10004b94(i32 %v0_10005634, i32 ptrtoint ([9 x i8]* @global_var_10009f9c.143 to i32), i32 8)
  %v0_10005648 = load i32, i32* @r27, align 4
  store i32 %v0_10005648, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268457556, i32* @lr, align 4
  %v4_10005650 = call i32 @function_10004b94(i32 %v0_10005648, i32 ptrtoint (i32* @global_var_10009fa8.144 to i32), i32 7)
  %v0_1000565c = load i32, i32* @r27, align 4
  store i32 %v0_1000565c, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457576, i32* @lr, align 4
  %v4_10005664 = call i32 @function_10004b94(i32 %v0_1000565c, i32 ptrtoint (i32* @global_var_10009fb0.145 to i32), i32 5)
  %v0_10005670 = load i32, i32* @r27, align 4
  store i32 %v0_10005670, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268457596, i32* @lr, align 4
  %v4_10005678 = call i32 @function_10004b94(i32 %v0_10005670, i32 ptrtoint (i32* @global_var_10009fb8.146 to i32), i32 6)
  %v0_10005684 = load i32, i32* @r27, align 4
  store i32 %v0_10005684, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457616, i32* @lr, align 4
  %v4_1000568c = call i32 @function_10004b94(i32 %v0_10005684, i32 ptrtoint (i32* @global_var_10009fc0.147 to i32), i32 5)
  %v0_10005698 = load i32, i32* @r27, align 4
  store i32 %v0_10005698, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268457636, i32* @lr, align 4
  %v5_100056a0 = call i32 @function_10004b94(i32 %v0_10005698, i32 ptrtoint ([7 x i8]* @global_var_10009fc8.148 to i32), i32 6)
  %v0_100056ac = load i32, i32* @r27, align 4
  store i32 %v0_100056ac, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268457656, i32* @lr, align 4
  %v5_100056b4 = call i32 @function_10004b94(i32 %v0_100056ac, i32 ptrtoint ([8 x i8]* @global_var_10009fd0.149 to i32), i32 7)
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_100056c4 = load i32, i32* @r27, align 4
  store i32 %v0_100056c4, i32* %r3.global-to-local, align 4
  store i32 268457676, i32* @lr, align 4
  %v4_100056c8 = call i32 @function_10004b94(i32 %v0_100056c4, i32 ptrtoint (i32* @global_var_10009fd8.150 to i32), i32 6)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_100056d4 = load i32, i32* @r27, align 4
  store i32 %v0_100056d4, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268457696, i32* @lr, align 4
  %v5_100056dc = call i32 @function_10004b94(i32 %v0_100056d4, i32 ptrtoint ([7 x i8]* @global_var_10009e7c.109 to i32), i32 6)
  %v0_100056e8 = load i32, i32* @r27, align 4
  store i32 %v0_100056e8, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268457716, i32* @lr, align 4
  %v4_100056f0 = call i32 @function_10004b94(i32 %v0_100056e8, i32 ptrtoint (i32* @global_var_10009fe0.151 to i32), i32 6)
  %v0_100056f4 = load i32, i32* @r22, align 4
  %v0_100056f8 = load i32, i32* @r27, align 4
  store i32 %v0_100056f8, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268457732, i32* @lr, align 4
  %v5_10005700 = call i32 @function_10004b94(i32 %v0_100056f8, i32 %v0_100056f4, i32 7)
  %v0_1000570c = load i32, i32* @r27, align 4
  store i32 %v0_1000570c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268457752, i32* @lr, align 4
  %v5_10005714 = call i32 @function_10004b94(i32 %v0_1000570c, i32 ptrtoint ([9 x i8]* @global_var_10009ff0.152 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_10009ffc.153 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268457772, i32* @lr, align 4
  %v4_10005728 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_10009ffc.153 to i32), i32 5, i32 5)
  %v0_1000572c = load i32, i32* @r29, align 4
  store i32 %v0_1000572c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268457788, i32* @lr, align 4
  %v5_10005738 = call i32 @function_10004b94(i32 %v0_1000572c, i32 %v0_1000572c, i32 4)
  %v0_1000573c = load i32, i32* @r29, align 4
  store i32 %v0_1000573c, i32* %r3.global-to-local, align 4
  %v0_10005740 = load i32, i32* @r26, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268457804, i32* @lr, align 4
  %v4_10005748 = call i32 @function_10004b94(i32 %v0_1000573c, i32 %v0_10005740, i32 1)
  %v0_10005754 = load i32, i32* @r28, align 4
  store i32 %v0_10005754, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268457828, i32* @lr, align 4
  %v4_10005760 = call i32 @function_10004b94(i32 %v0_10005754, i32 ptrtoint (i32* @global_var_1000a0f4.154 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1000a00c.155 to i32), i32* @r29, align 4
  %v0_10005770 = load i32, i32* @r28, align 4
  store i32 %v0_10005770, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268457852, i32* @lr, align 4
  %v4_10005778 = call i32 @function_10004b94(i32 %v0_10005770, i32 ptrtoint (i32* @global_var_1000a004.156 to i32), i32 7)
  %v0_1000577c = load i32, i32* @r29, align 4
  store i32 %v0_1000577c, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  %v0_10005784 = load i32, i32* @r26, align 4
  store i32 268457868, i32* @lr, align 4
  %v4_10005788 = call i32 @function_10004b94(i32 %v0_1000577c, i32 %v0_10005784, i32 7)
  %v0_1000578c = load i32, i32* @r29, align 4
  store i32 %v0_1000578c, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268457884, i32* @lr, align 4
  %v5_10005798 = call i32 @function_10004b94(i32 %v0_1000578c, i32 %v0_1000578c, i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1000a014.157 to i32), i32* %r3.global-to-local, align 4
  %v0_100057a4 = load i32, i32* @r26, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268457908, i32* @lr, align 4
  %v4_100057b0 = call i32 @function_10004b94(i32 ptrtoint ([4 x i8]* @global_var_1000a014.157 to i32), i32 %v0_100057a4, i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1000a018.158 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268457932, i32* @lr, align 4
  %v5_100057c8 = call i32 @function_10004b94(i32 ptrtoint ([8 x i8]* @global_var_1000a018.158 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000a020.159 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1000a028.160 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000a040.161 to i32), i32* @r29, align 4
  store i32 268457956, i32* @lr, align 4
  %v4_100057e0 = call i32 @function_10004b94(i32 ptrtoint ([4 x i8]* @global_var_1000a028.160 to i32), i32 3, i32 3)
  %v0_100057ec = load i32, i32* @r28, align 4
  store i32 %v0_100057ec, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268457976, i32* @lr, align 4
  %v4_100057f4 = call i32 @function_10004b94(i32 %v0_100057ec, i32 ptrtoint (i32* @global_var_1000a02c.162 to i32), i32 10)
  %v0_10005800 = load i32, i32* @r28, align 4
  store i32 %v0_10005800, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268457996, i32* @lr, align 4
  %v5_10005808 = call i32 @function_10004b94(i32 %v0_10005800, i32 ptrtoint ([5 x i8]* @global_var_1000a038.163 to i32), i32 4)
  %v0_1000580c = load i32, i32* @r29, align 4
  store i32 %v0_1000580c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458012, i32* @lr, align 4
  %v5_10005818 = call i32 @function_10004b94(i32 %v0_1000580c, i32 %v0_1000580c, i32 6)
  %v0_1000581c = load i32, i32* @r29, align 4
  %v0_10005820 = load i32, i32* @r26, align 4
  store i32 %v0_10005820, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458028, i32* @lr, align 4
  %v4_10005828 = call i32 @function_10004b94(i32 %v0_10005820, i32 %v0_1000581c, i32 6)
  store i32 ptrtoint (i32* @global_var_1000a048.164 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458052, i32* @lr, align 4
  %v3_10005840 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a048.164 to i32), i32 6, i32 6)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a058.165 to i32), i32* @r29, align 4
  %v0_1000584c = load i32, i32* @r24, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000a050.166 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458076, i32* @lr, align 4
  %v5_10005858 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a050.166 to i32), i32 %v0_1000584c, i32 7)
  %v0_1000585c = load i32, i32* @r29, align 4
  store i32 %v0_1000585c, i32* %r3.global-to-local, align 4
  %v0_10005860 = load i32, i32* %r18.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268458092, i32* @lr, align 4
  %v5_10005868 = call i32 @function_10004b94(i32 %v0_1000585c, i32 %v0_10005860, i32 5)
  %v0_1000586c = load i32, i32* @r29, align 4
  store i32 %v0_1000586c, i32* %r3.global-to-local, align 4
  %v0_10005870 = load i32, i32* %r17.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268458108, i32* @lr, align 4
  %v5_10005878 = call i32 @function_10004b94(i32 %v0_1000586c, i32 %v0_10005870, i32 5)
  %v0_1000587c = load i32, i32* @r29, align 4
  store i32 %v0_1000587c, i32* %r3.global-to-local, align 4
  %v0_10005880 = load i32, i32* @r27, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268458124, i32* @lr, align 4
  %v5_10005888 = call i32 @function_10004b94(i32 %v0_1000587c, i32 %v0_10005880, i32 5)
  store i32 ptrtoint (i32* @global_var_1000a060.167 to i32), i32* %r3.global-to-local, align 4
  %v0_10005894 = load i32, i32* @r26, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458148, i32* @lr, align 4
  %v3_100058a0 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a060.167 to i32), i32 %v0_10005894, i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a068.168 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268458172, i32* @lr, align 4
  %v5_100058b8 = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a068.168 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000a074.169 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1000a07c.170 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000a084.171 to i32), i32* @r29, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458196, i32* @lr, align 4
  %v4_100058d0 = call i32 @function_10004b94(i32 ptrtoint ([8 x i8]* @global_var_1000a07c.170 to i32), i32 7, i32 7)
  %v0_100058d4 = load i32, i32* @r29, align 4
  store i32 %v0_100058d4, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458212, i32* @lr, align 4
  %v5_100058e0 = call i32 @function_10004b94(i32 %v0_100058d4, i32 %v0_100058d4, i32 7)
  %v0_100058e8 = load i32, i32* @r29, align 4
  store i32 %v0_100058e8, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458236, i32* @lr, align 4
  %v5_100058f8 = call i32 @function_10004b94(i32 %v0_100058e8, i32 ptrtoint ([8 x i8]* @global_var_1000a08c.172 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a094.173 to i32), i32* @r29, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000a094.173 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268458260, i32* @lr, align 4
  %v5_10005910 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a094.173 to i32), i32 ptrtoint ([10 x i8]* @global_var_1000a09c.174 to i32), i32 9)
  %v0_10005914 = load i32, i32* @r29, align 4
  store i32 %v0_10005914, i32* %r3.global-to-local, align 4
  %v0_10005918 = load i32, i32* @r22, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458276, i32* @lr, align 4
  %v5_10005920 = call i32 @function_10004b94(i32 %v0_10005914, i32 %v0_10005918, i32 6)
  store i32 ptrtoint ([5 x i8]* @global_var_1000a0a8.175 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458300, i32* @lr, align 4
  %v4_10005938 = call i32 @function_10004b94(i32 ptrtoint ([5 x i8]* @global_var_1000a0a8.175 to i32), i32 4, i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a0b8.176 to i32), i32* @r29, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000a0b0.177 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458324, i32* @lr, align 4
  %v5_10005950 = call i32 @function_10004b94(i32 ptrtoint ([5 x i8]* @global_var_1000a0b0.177 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000a0b8.176 to i32), i32 6)
  %v0_10005954 = load i32, i32* @r29, align 4
  %v0_10005958 = load i32, i32* @r27, align 4
  store i32 %v0_10005958, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458344, i32* @lr, align 4
  %v5_10005964 = call i32 @function_10004b94(i32 %v0_10005958, i32 %v0_10005954, i32 6)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a0c0.178 to i32), i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a088.179 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458372, i32* @lr, align 4
  %v5_10005980 = call i32 @function_10004b94(i32 ptrtoint ([3 x i8]* @global_var_1000a088.179 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000a0c0.178 to i32), i32 6)
  store i32 ptrtoint (i32* @global_var_1000a0c8.180 to i32), i32* @r24, align 4
  %v0_10005988 = load i32, i32* @r29, align 4
  store i32 %v0_10005988, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458396, i32* @lr, align 4
  %v5_10005998 = call i32 @function_10004b94(i32 %v0_10005988, i32 %v0_10005988, i32 6)
  store i32 10, i32* %r5.global-to-local, align 4
  %v0_100059a0 = load i32, i32* @r27, align 4
  store i32 %v0_100059a0, i32* %r3.global-to-local, align 4
  %v0_100059a4 = load i32, i32* @r24, align 4
  store i32 268458412, i32* @lr, align 4
  %v4_100059a8 = call i32 @function_10004b94(i32 %v0_100059a0, i32 %v0_100059a4, i32 10)
  %v0_100059ac = load i32, i32* @r28, align 4
  store i32 %v0_100059ac, i32* %r3.global-to-local, align 4
  %v0_100059b0 = load i32, i32* @r24, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268458428, i32* @lr, align 4
  %v4_100059b8 = call i32 @function_10004b94(i32 %v0_100059ac, i32 %v0_100059b0, i32 10)
  %v0_100059c4 = load i32, i32* @r28, align 4
  store i32 %v0_100059c4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000a150.182 to i32), i32* @r29, align 4
  store i32 268458452, i32* @lr, align 4
  %v5_100059d0 = call i32 @function_10004b94(i32 %v0_100059c4, i32 ptrtoint ([5 x i8]* @global_var_1000a0d4.181 to i32), i32 4)
  %v0_100059dc = load i32, i32* @r28, align 4
  store i32 %v0_100059dc, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458476, i32* @lr, align 4
  %v5_100059e8 = call i32 @function_10004b94(i32 %v0_100059dc, i32 ptrtoint ([7 x i8]* @global_var_1000a0dc.183 to i32), i32 6)
  %v0_100059f4 = load i32, i32* @r28, align 4
  store i32 %v0_100059f4, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000a174.185 to i32), i32* @r22, align 4
  store i32 268458500, i32* @lr, align 4
  %v4_10005a00 = call i32 @function_10004b94(i32 %v0_100059f4, i32 ptrtoint (i32* @global_var_1000a0e4.184 to i32), i32 8)
  %v0_10005a0c = load i32, i32* @r28, align 4
  store i32 %v0_10005a0c, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458520, i32* @lr, align 4
  %v4_10005a14 = call i32 @function_10004b94(i32 %v0_10005a0c, i32 ptrtoint (i32* @global_var_1000a0f0.186 to i32), i32 7)
  %v0_10005a20 = load i32, i32* @r28, align 4
  store i32 %v0_10005a20, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268458540, i32* @lr, align 4
  %v4_10005a28 = call i32 @function_10004b94(i32 %v0_10005a20, i32 ptrtoint (i32* @global_var_1000a0f8.187 to i32), i32 8)
  %v0_10005a34 = load i32, i32* @r28, align 4
  store i32 %v0_10005a34, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458560, i32* @lr, align 4
  %v4_10005a3c = call i32 @function_10004b94(i32 %v0_10005a34, i32 ptrtoint (i32* @global_var_1000a104.188 to i32), i32 6)
  %v0_10005a48 = load i32, i32* @r28, align 4
  store i32 %v0_10005a48, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268458580, i32* @lr, align 4
  %v4_10005a50 = call i32 @function_10004b94(i32 %v0_10005a48, i32 ptrtoint (i32* @global_var_1000a10c.189 to i32), i32 8)
  %v0_10005a5c = load i32, i32* @r28, align 4
  store i32 %v0_10005a5c, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458600, i32* @lr, align 4
  %v4_10005a64 = call i32 @function_10004b94(i32 %v0_10005a5c, i32 ptrtoint (i32* @global_var_1000a118.190 to i32), i32 6)
  %v0_10005a70 = load i32, i32* @r28, align 4
  store i32 %v0_10005a70, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458620, i32* @lr, align 4
  %v4_10005a78 = call i32 @function_10004b94(i32 %v0_10005a70, i32 ptrtoint (i32* @global_var_1000a120.191 to i32), i32 7)
  %v0_10005a84 = load i32, i32* @r28, align 4
  store i32 %v0_10005a84, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458640, i32* @lr, align 4
  %v5_10005a8c = call i32 @function_10004b94(i32 %v0_10005a84, i32 ptrtoint ([7 x i8]* @global_var_1000a128.192 to i32), i32 6)
  %v0_10005a98 = load i32, i32* @r28, align 4
  store i32 %v0_10005a98, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458660, i32* @lr, align 4
  %v4_10005aa0 = call i32 @function_10004b94(i32 %v0_10005a98, i32 ptrtoint (i32* @global_var_1000a130.193 to i32), i32 7)
  %v0_10005aac = load i32, i32* @r28, align 4
  store i32 %v0_10005aac, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268458680, i32* @lr, align 4
  %v4_10005ab4 = call i32 @function_10004b94(i32 %v0_10005aac, i32 ptrtoint (i32* @global_var_1000a138.194 to i32), i32 8)
  %v0_10005ac0 = load i32, i32* @r28, align 4
  store i32 %v0_10005ac0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268458700, i32* @lr, align 4
  %v5_10005ac8 = call i32 @function_10004b94(i32 %v0_10005ac0, i32 ptrtoint ([9 x i8]* @global_var_1000a144.195 to i32), i32 8)
  %v0_10005acc = load i32, i32* @r29, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  %v0_10005ad4 = load i32, i32* @r27, align 4
  store i32 %v0_10005ad4, i32* %r3.global-to-local, align 4
  store i32 268458716, i32* @lr, align 4
  %v5_10005ad8 = call i32 @function_10004b94(i32 %v0_10005ad4, i32 %v0_10005acc, i32 5)
  %v0_10005adc = load i32, i32* @r29, align 4
  store i32 %v0_10005adc, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268458732, i32* @lr, align 4
  %v5_10005ae8 = call i32 @function_10004b94(i32 %v0_10005adc, i32 %v0_10005adc, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000a158.196 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268458756, i32* @lr, align 4
  %v4_10005b00 = call i32 @function_10004b94(i32 ptrtoint ([8 x i8]* @global_var_1000a158.196 to i32), i32 7, i32 7)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a160.197 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458780, i32* @lr, align 4
  %v4_10005b18 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a160.197 to i32), i32 ptrtoint ([7 x i8]* @global_var_10009e7c.109 to i32), i32 6)
  store i32 ptrtoint ([4 x i8]* @global_var_1000a168.198 to i32), i32* %r3.global-to-local, align 4
  %v0_10005b24 = load i32, i32* %r20.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000a1bc.199 to i32), i32* @r29, align 4
  store i32 268458804, i32* @lr, align 4
  %v5_10005b30 = call i32 @function_10004b94(i32 ptrtoint ([4 x i8]* @global_var_1000a168.198 to i32), i32 %v0_10005b24, i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a16c.200 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458824, i32* @lr, align 4
  %v4_10005b44 = call i32 @function_10004b94(i32 ptrtoint ([7 x i8]* @global_var_1000a16c.200 to i32), i32 6, i32 6)
  %v0_10005b50 = load i32, i32* @r22, align 4
  store i32 %v0_10005b50, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458844, i32* @lr, align 4
  %v4_10005b58 = call i32 @function_10004b94(i32 %v0_10005b50, i32 ptrtoint (i32* @global_var_1000a17c.201 to i32), i32 6)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a184.202 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268458864, i32* @lr, align 4
  %v4_10005b6c = call i32 @function_10004b94(i32 ptrtoint ([7 x i8]* @global_var_1000a184.202 to i32), i32 6, i32 6)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a18c.203 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268458884, i32* @lr, align 4
  %v4_10005b80 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a18c.203 to i32), i32 5, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000a194.204 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268458904, i32* @lr, align 4
  %v4_10005b94 = call i32 @function_10004b94(i32 ptrtoint ([8 x i8]* @global_var_1000a194.204 to i32), i32 7, i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1000a19c.205 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268458924, i32* @lr, align 4
  %v4_10005ba8 = call i32 @function_10004b94(i32 ptrtoint ([4 x i8]* @global_var_1000a19c.205 to i32), i32 3, i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1000a1a0.206 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268458944, i32* @lr, align 4
  %v4_10005bbc = call i32 @function_10004b94(i32 ptrtoint ([4 x i8]* @global_var_1000a1a0.206 to i32), i32 3, i32 3)
  store i32 ptrtoint (i32* @global_var_1000a1a4.207 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268458964, i32* @lr, align 4
  %v3_10005bd0 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a1a4.207 to i32), i32 4, i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1000a1ac.208 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268458984, i32* @lr, align 4
  %v4_10005be4 = call i32 @function_10004b94(i32 ptrtoint ([5 x i8]* @global_var_1000a1ac.208 to i32), i32 4, i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a1b4.209 to i32), i32* %r3.global-to-local, align 4
  %v0_10005bf0 = load i32, i32* @r26, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459004, i32* @lr, align 4
  %v4_10005bf8 = call i32 @function_10004b94(i32 ptrtoint ([7 x i8]* @global_var_1000a1b4.209 to i32), i32 %v0_10005bf0, i32 6)
  %v0_10005bfc = load i32, i32* %r16.global-to-local, align 4
  %v0_10005c00 = load i32, i32* @r29, align 4
  store i32 %v0_10005c00, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268459020, i32* @lr, align 4
  %v4_10005c08 = call i32 @function_10004b94(i32 %v0_10005c00, i32 %v0_10005bfc, i32 5)
  %v0_10005c0c = load i32, i32* @r29, align 4
  store i32 %v0_10005c0c, i32* %r3.global-to-local, align 4
  %v0_10005c14 = load i32, i32* @r23, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000a1c4.210 to i32), i32* @r29, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459044, i32* @lr, align 4
  %v4_10005c20 = call i32 @function_10004b94(i32 %v0_10005c0c, i32 %v0_10005c14, i32 6)
  %v0_10005c24 = load i32, i32* @r29, align 4
  store i32 %v0_10005c24, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10005c2c = load i32, i32* @r26, align 4
  store i32 268459060, i32* @lr, align 4
  %v4_10005c30 = call i32 @function_10004b94(i32 %v0_10005c24, i32 %v0_10005c2c, i32 6)
  %v0_10005c34 = load i32, i32* @r29, align 4
  store i32 %v0_10005c34, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459076, i32* @lr, align 4
  %v5_10005c40 = call i32 @function_10004b94(i32 %v0_10005c34, i32 %v0_10005c34, i32 6)
  store i32 ptrtoint ([5 x i8]* @global_var_1000a1cc.211 to i32), i32* %r3.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268459100, i32* @lr, align 4
  %v4_10005c58 = call i32 @function_10004b94(i32 ptrtoint ([5 x i8]* @global_var_1000a1cc.211 to i32), i32 4, i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a1d4.212 to i32), i32* %r3.global-to-local, align 4
  %v0_10005c64 = load i32, i32* @r27, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a258.213 to i32), i32* @r29, align 4
  store i32 268459124, i32* @lr, align 4
  %v5_10005c70 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a1d4.212 to i32), i32 %v0_10005c64, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000a1dc.214 to i32), i32* %r3.global-to-local, align 4
  %v0_10005c7c = load i32, i32* @r27, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  %v2_10005c84 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_10005c84, i32* @r16, align 4
  store i32 268459148, i32* @lr, align 4
  %v5_10005c88 = call i32 @function_10004b94(i32 ptrtoint ([8 x i8]* @global_var_1000a1dc.214 to i32), i32 %v0_10005c7c, i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a1e4.215 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459168, i32* @lr, align 4
  %v4_10005c9c = call i32 @function_10004b94(i32 ptrtoint ([7 x i8]* @global_var_1000a1e4.215 to i32), i32 6, i32 6)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a1ec.216 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268459192, i32* @lr, align 4
  %v5_10005cb4 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a1ec.216 to i32), i32 ptrtoint ([6 x i8]* @global_var_1000a1f4.217 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a1fc.218 to i32), i32* %r3.global-to-local, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268459216, i32* @lr, align 4
  %v5_10005ccc = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a1fc.218 to i32), i32 ptrtoint ([5 x i8]* @global_var_1000a204.219 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1000a20c.220 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268459236, i32* @lr, align 4
  %v3_10005ce0 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a20c.220 to i32), i32 7, i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_10009fa0.221 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459260, i32* @lr, align 4
  %v4_10005cf8 = call i32 @function_10004b94(i32 ptrtoint ([5 x i8]* @global_var_10009fa0.221 to i32), i32 ptrtoint (i32* @global_var_1000a214.222 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a220.223 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459280, i32* @lr, align 4
  %v4_10005d0c = call i32 @function_10004b94(i32 ptrtoint ([7 x i8]* @global_var_1000a220.223 to i32), i32 6, i32 6)
  store i32 ptrtoint (i32* @global_var_1000a228.224 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459304, i32* @lr, align 4
  %v4_10005d24 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a228.224 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000a230.225 to i32), i32 6)
  %v0_10005d30 = load i32, i32* @r26, align 4
  store i32 %v0_10005d30, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459324, i32* @lr, align 4
  %v4_10005d38 = call i32 @function_10004b94(i32 %v0_10005d30, i32 ptrtoint ([9 x i8]* @global_var_1000a238.226 to i32), i32 8)
  %v0_10005d44 = load i32, i32* @r26, align 4
  store i32 %v0_10005d44, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459344, i32* @lr, align 4
  %v4_10005d4c = call i32 @function_10004b94(i32 %v0_10005d44, i32 ptrtoint ([9 x i8]* @global_var_1000a244.227 to i32), i32 8)
  %v0_10005d54 = load i32, i32* @r26, align 4
  store i32 %v0_10005d54, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 268459364, i32* @lr, align 4
  %v4_10005d60 = call i32 @function_10004b94(i32 %v0_10005d54, i32 ptrtoint ([7 x i8]* @global_var_1000a250.228 to i32), i32 6)
  %v0_10005d68 = load i32, i32* @r29, align 4
  store i32 %v0_10005d68, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268459384, i32* @lr, align 4
  %v4_10005d74 = call i32 @function_10004b94(i32 %v0_10005d68, i32 ptrtoint ([5 x i8]* @global_var_1000a264.229 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a26c.230 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459404, i32* @lr, align 4
  %v4_10005d88 = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a26c.230 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a278.231 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459424, i32* @lr, align 4
  %v4_10005d9c = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a278.231 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a284.232 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459444, i32* @lr, align 4
  %v4_10005db0 = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a284.232 to i32), i32 8, i32 8)
  %v0_10005db4 = load i32, i32* @r25, align 4
  store i32 %v0_10005db4, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459460, i32* @lr, align 4
  %v3_10005dc0 = call i32 @function_10004b94(i32 %v0_10005db4, i32 %v0_10005db4, i32 8)
  store i32 ptrtoint (i32* @global_var_1000a290.233 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459480, i32* @lr, align 4
  %v3_10005dd4 = call i32 @function_10004b94(i32 ptrtoint (i32* @global_var_1000a290.233 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a29c.234 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459500, i32* @lr, align 4
  %v4_10005de8 = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a29c.234 to i32), i32 8, i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a2a8.235 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268459520, i32* @lr, align 4
  %v4_10005dfc = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a2a8.235 to i32), i32 8, i32 8)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000a2b4.236 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268459544, i32* @lr, align 4
  %v5_10005e14 = call i32 @function_10004b94(i32 ptrtoint ([8 x i8]* @global_var_1000a2b4.236 to i32), i32 ptrtoint ([11 x i8]* @global_var_10009e8c.110 to i32), i32 10)
  %v0_10005e1c = load i32, i32* @r28, align 4
  store i32 %v0_10005e1c, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268459564, i32* @lr, align 4
  %v4_10005e28 = call i32 @function_10004b94(i32 %v0_10005e1c, i32 ptrtoint (i32* @global_var_1000a2bc.237 to i32), i32 13)
  %v0_10005e30 = load i32, i32* @r22, align 4
  store i32 %v0_10005e30, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268459584, i32* @lr, align 4
  %v4_10005e3c = call i32 @function_10004b94(i32 %v0_10005e30, i32 ptrtoint (i32* @global_var_1000a2cc.238 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_1000a2dc.239 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268459608, i32* @lr, align 4
  %v4_10005e54 = call i32 @function_10004b94(i32 ptrtoint ([10 x i8]* @global_var_1000a2dc.239 to i32), i32 ptrtoint (i32* @global_var_1000a2e8.240 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1000a2f4.241 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268459632, i32* @lr, align 4
  %v5_10005e6c = call i32 @function_10004b94(i32 ptrtoint ([10 x i8]* @global_var_1000a2f4.241 to i32), i32 ptrtoint ([11 x i8]* @global_var_1000a300.242 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1000a30c.243 to i32), i32* %r3.global-to-local, align 4
  %v0_10005e78 = load i32, i32* @r24, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268459652, i32* @lr, align 4
  %v4_10005e80 = call i32 @function_10004b94(i32 ptrtoint ([10 x i8]* @global_var_1000a30c.243 to i32), i32 %v0_10005e78, i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1000a318.244 to i32), i32* %r3.global-to-local, align 4
  %v0_10005e8c = load i32, i32* @r24, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268459672, i32* @lr, align 4
  %v4_10005e94 = call i32 @function_10004b94(i32 ptrtoint ([10 x i8]* @global_var_1000a318.244 to i32), i32 %v0_10005e8c, i32 10)
  %v0_10005e9c = load i32, i32* @r29, align 4
  store i32 %v0_10005e9c, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268459696, i32* @lr, align 4
  %v3_10005eac = call i32 @function_10004b94(i32 %v0_10005e9c, i32 ptrtoint (i32* @global_var_1000a324.245 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_1000a330.246 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268459720, i32* @lr, align 4
  %v5_10005ec4 = call i32 @function_10004b94(i32 ptrtoint ([13 x i8]* @global_var_1000a330.246 to i32), i32 ptrtoint ([13 x i8]* @global_var_1000a340.247 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1000a350.248 to i32), i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268459744, i32* @lr, align 4
  %v4_10005edc = call i32 @function_10004b94(i32 ptrtoint ([7 x i8]* @global_var_1000a350.248 to i32), i32 ptrtoint (i32* @global_var_1000a358.249 to i32), i32 13)
  store i32 ptrtoint ([9 x i8]* @global_var_1000a360.250 to i32), i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268459768, i32* @lr, align 4
  %v5_10005ef4 = call i32 @function_10004b94(i32 ptrtoint ([9 x i8]* @global_var_1000a360.250 to i32), i32 ptrtoint ([8 x i8]* @global_var_1000a36c.251 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_1000a380.252 to i32), i32* @r29, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1000a374.253 to i32), i32* %r3.global-to-local, align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 268459792, i32* @lr, align 4
  %v4_10005f0c = call i32 @function_10004b94(i32 ptrtoint ([12 x i8]* @global_var_1000a374.253 to i32), i32 ptrtoint (i32* @global_var_1000a380.252 to i32), i32 20)
  store i32 ptrtoint ([6 x i8]* @global_var_1000a38c.254 to i32), i32* %r3.global-to-local, align 4
  %v0_10005f18 = load i32, i32* @r29, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268459812, i32* @lr, align 4
  %v4_10005f20 = call i32 @function_10004b94(i32 ptrtoint ([6 x i8]* @global_var_1000a38c.254 to i32), i32 %v0_10005f18, i32 14)
  store i32 %v4_10005f20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005f24

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_1000640c, %dec_label_pc_10004f3c
  %stack_var_-88.0 = phi i16 [ %v5_10004f34.le, %dec_label_pc_10004f3c ], [ %stack_var_-88.4, %dec_label_pc_1000640c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005f28 = load i32, i32* @global_var_1001a9b0.66, align 4
  store i32 %v3_10005f28, i32* @r29, align 4
  %v0_10005f2c = load i32, i32* @r23, align 4
  %v2_10005f2c = icmp slt i32 %v0_10005f2c, %v3_10005f28
  %v4_10005f2c = icmp eq i32 %v0_10005f2c, %v3_10005f28
  store i1 %v2_10005f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10005f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10005f2c, label %dec_label_pc_10006124, label %dec_label_pc_10005f34

dec_label_pc_10005f34:                            ; preds = %dec_label_pc_10005f24
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005f38 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10005f38, i32* @r26, align 4
  store i64 0, i64* %stack_var_-1920, align 8
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10005f48

dec_label_pc_10005f48:                            ; preds = %dec_label_pc_10006050.dec_label_pc_10005f48_crit_edge, %dec_label_pc_10005f34
  %v0_10005f48 = phi i32 [ %v0_10005f48.pre, %dec_label_pc_10006050.dec_label_pc_10005f48_crit_edge ], [ 0, %dec_label_pc_10005f34 ]
  %stack_var_-88.1 = phi i16 [ %stack_var_-88.3, %dec_label_pc_10006050.dec_label_pc_10005f48_crit_edge ], [ %stack_var_-88.0, %dec_label_pc_10005f34 ]
  store i32 %v0_10005f48, i32* %stack_var_-1888, align 4
  %v0_10005f58 = call i32 @function_100048a8()
  %v1_10005f58 = trunc i32 %v0_10005f58 to i16
  store i32 %v0_10005f58, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10005f58, i16* bitcast (i32* @global_var_1001aa28.80 to i16*), align 4
  %v3_10005f64 = load i32, i32* @global_var_1001a998.12, align 4
  store i32 %v3_10005f64, i32* %r0.global-to-local, align 4
  store i32 %v3_10005f64, i32* @global_var_1001aa30.255, align 4
  br label %dec_label_pc_10005f6c.preheader

dec_label_pc_10005f6c.preheader:                  ; preds = %dec_label_pc_10005f48, %dec_label_pc_100065d0
  %stack_var_-88.2.ph = phi i16 [ %stack_var_-88.1, %dec_label_pc_10005f48 ], [ %stack_var_-88.6, %dec_label_pc_100065d0 ]
  br label %dec_label_pc_10005f6c

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10006618, %dec_label_pc_10006604, %dec_label_pc_100065f8, %dec_label_pc_100065e4, %dec_label_pc_10006048, %dec_label_pc_10006040, %dec_label_pc_10006038, %dec_label_pc_10006030, %dec_label_pc_10006028, %dec_label_pc_10006020, %dec_label_pc_10006018, %dec_label_pc_10006010, %dec_label_pc_10006008, %dec_label_pc_10006000, %dec_label_pc_10005ff8, %dec_label_pc_10005fe8, %dec_label_pc_10005fe0, %dec_label_pc_10005fb0, %dec_label_pc_10005fa8, %dec_label_pc_10005f98, %dec_label_pc_10005f90, %dec_label_pc_10005f88, %dec_label_pc_10005f6c, %dec_label_pc_10005f6c.preheader
  %v0_10005f6c = call i32 @function_100048a8()
  store i32 %v0_10005f6c, i32* %r3.global-to-local, align 4
  %v1_10005f70 = urem i32 %v0_10005f6c, 256
  store i32 %v1_10005f70, i32* %r11.global-to-local, align 4
  %v1_10005f74 = udiv i32 %v0_10005f6c, 16777216
  store i32 %v1_10005f74, i32* %r10.global-to-local, align 4
  %v1_10005f78 = icmp ult i32 %v1_10005f70, 127
  %v3_10005f78 = icmp eq i32 %v1_10005f70, 127
  store i1 %v1_10005f78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005f78, i1* %cr7_eq.global-to-local, align 1
  %v1_10005f7c = call i32 @__asm_rlwinm(i32 %v0_10005f6c, i32 24, i32 24, i32 31)
  store i32 %v1_10005f7c, i32* @r9, align 4
  %v1_10005f80 = call i32 @__asm_rlwinm(i32 %v0_10005f6c, i32 16, i32 24, i32 31)
  store i32 %v1_10005f80, i32* %r3.global-to-local, align 4
  %v0_10005f84 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005f84, label %dec_label_pc_10005f6c, label %dec_label_pc_10005f88

dec_label_pc_10005f88:                            ; preds = %dec_label_pc_10005f6c
  %v0_10005f88 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005f88 = icmp slt i32 %v0_10005f88, 0
  %v3_10005f88 = icmp eq i32 %v0_10005f88, 0
  store i1 %v1_10005f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005f88, label %dec_label_pc_10005f6c, label %dec_label_pc_10005f90

dec_label_pc_10005f90:                            ; preds = %dec_label_pc_10005f88
  %v1_10005f90 = icmp slt i32 %v0_10005f88, 3
  %v3_10005f90 = icmp eq i32 %v0_10005f88, 3
  store i1 %v1_10005f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005f90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005f90, label %dec_label_pc_10005f6c, label %dec_label_pc_10005f98

dec_label_pc_10005f98:                            ; preds = %dec_label_pc_10005f90
  %v1_10005f98 = add i32 %v0_10005f88, 241
  %v1_10005f9c = urem i32 %v1_10005f98, 256
  store i32 %v1_10005f9c, i32* %r0.global-to-local, align 4
  %v1_10005fa0 = icmp eq i32 %v1_10005f9c, 0
  %v3_10005fa0 = icmp eq i32 %v1_10005f9c, 1
  store i1 %v1_10005fa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fa0, i1* %cr7_eq.global-to-local, align 1
  %tmp104 = or i32 %v1_10005f9c, 1
  %tmp105 = icmp eq i32 %tmp104, 1
  br i1 %tmp105, label %dec_label_pc_10005f6c, label %dec_label_pc_10005fa8

dec_label_pc_10005fa8:                            ; preds = %dec_label_pc_10005f98
  %v1_10005fa8 = icmp slt i32 %v0_10005f88, 56
  %v3_10005fa8 = icmp eq i32 %v0_10005f88, 56
  store i1 %v1_10005fa8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fa8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fa8, label %dec_label_pc_10005f6c, label %dec_label_pc_10005fb0

dec_label_pc_10005fb0:                            ; preds = %dec_label_pc_10005fa8
  %v1_10005fb0 = icmp slt i32 %v0_10005f88, 10
  %v3_10005fb0 = icmp eq i32 %v0_10005f88, 10
  store i1 %v1_10005fb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fb0, label %dec_label_pc_10005f6c, label %dec_label_pc_10005fb8

dec_label_pc_10005fb8:                            ; preds = %dec_label_pc_10005fb0
  %v1_10005fb8 = icmp slt i32 %v0_10005f88, 192
  %v3_10005fb8 = icmp eq i32 %v0_10005f88, 192
  store i1 %v1_10005fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fb8, label %dec_label_pc_100065d0, label %dec_label_pc_10005fc0

dec_label_pc_10005fc0:                            ; preds = %dec_label_pc_10005fb8
  %v1_10005fc0 = icmp slt i32 %v0_10005f88, 172
  %v3_10005fc0 = icmp eq i32 %v0_10005f88, 172
  store i1 %v1_10005fc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fc0, label %dec_label_pc_100065dc, label %dec_label_pc_10005fc8

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005fc0
  %v1_10005fc8 = icmp slt i32 %v0_10005f88, 100
  %v3_10005fc8 = icmp eq i32 %v0_10005f88, 100
  store i1 %v1_10005fc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fc8, label %dec_label_pc_100065f0, label %dec_label_pc_10005fd0

dec_label_pc_10005fd0:                            ; preds = %dec_label_pc_10005fc8
  %v1_10005fd0 = icmp slt i32 %v0_10005f88, 169
  %v3_10005fd0 = icmp eq i32 %v0_10005f88, 169
  store i1 %v1_10005fd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fd0, label %dec_label_pc_10006604, label %dec_label_pc_10005fd8

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005fd0
  %v1_10005fd8 = icmp slt i32 %v0_10005f88, 198
  %v3_10005fd8 = icmp eq i32 %v0_10005f88, 198
  store i1 %v1_10005fd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fd8, label %dec_label_pc_10006610, label %dec_label_pc_10005fe0

dec_label_pc_10005fe0:                            ; preds = %dec_label_pc_10005fd8
  %v1_10005fe0 = icmp ult i32 %v0_10005f88, 223
  %v2_10005fe0 = icmp ugt i32 %v0_10005f88, 223
  %v3_10005fe0 = icmp eq i32 %v0_10005f88, 223
  store i1 %v1_10005fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10005fe0, label %dec_label_pc_10005f6c, label %dec_label_pc_10005fe8

dec_label_pc_10005fe8:                            ; preds = %dec_label_pc_10005fe0
  %v1_10005fe8 = add i32 %v0_10005f88, 250
  %v1_10005fec = urem i32 %v1_10005fe8, 256
  store i32 %v1_10005fec, i32* %r0.global-to-local, align 4
  %v1_10005ff0 = icmp eq i32 %v1_10005fec, 0
  %v3_10005ff0 = icmp eq i32 %v1_10005fec, 1
  store i1 %v1_10005ff0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005ff0, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = or i32 %v1_10005fec, 1
  %tmp107 = icmp eq i32 %tmp106, 1
  br i1 %tmp107, label %dec_label_pc_10005f6c, label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005fe8
  %v1_10005ff8 = icmp slt i32 %v0_10005f88, 11
  %v3_10005ff8 = icmp eq i32 %v0_10005f88, 11
  store i1 %v1_10005ff8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10005ff8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005ff8, label %dec_label_pc_10005f6c, label %dec_label_pc_10006000

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10005ff8
  %v1_10006000 = icmp slt i32 %v0_10005f88, 21
  %v3_10006000 = icmp eq i32 %v0_10005f88, 21
  store i1 %v1_10006000, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006000, label %dec_label_pc_10005f6c, label %dec_label_pc_10006008

dec_label_pc_10006008:                            ; preds = %dec_label_pc_10006000
  %v1_10006008 = icmp slt i32 %v0_10005f88, 22
  %v3_10006008 = icmp eq i32 %v0_10005f88, 22
  store i1 %v1_10006008, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006008, label %dec_label_pc_10005f6c, label %dec_label_pc_10006010

dec_label_pc_10006010:                            ; preds = %dec_label_pc_10006008
  %v1_10006010 = icmp slt i32 %v0_10005f88, 26
  %v3_10006010 = icmp eq i32 %v0_10005f88, 26
  store i1 %v1_10006010, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006010, label %dec_label_pc_10005f6c, label %dec_label_pc_10006018

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10006010
  %v1_10006018 = icmp slt i32 %v0_10005f88, 28
  %v3_10006018 = icmp eq i32 %v0_10005f88, 28
  store i1 %v1_10006018, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006018, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006018, label %dec_label_pc_10005f6c, label %dec_label_pc_10006020

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10006018
  %v1_10006020 = icmp slt i32 %v0_10005f88, 29
  %v3_10006020 = icmp eq i32 %v0_10005f88, 29
  store i1 %v1_10006020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006020, label %dec_label_pc_10005f6c, label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_10006020
  %v1_10006028 = icmp slt i32 %v0_10005f88, 30
  %v3_10006028 = icmp eq i32 %v0_10005f88, 30
  store i1 %v1_10006028, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006028, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006028, label %dec_label_pc_10005f6c, label %dec_label_pc_10006030

dec_label_pc_10006030:                            ; preds = %dec_label_pc_10006028
  %v1_10006030 = icmp slt i32 %v0_10005f88, 33
  %v3_10006030 = icmp eq i32 %v0_10005f88, 33
  store i1 %v1_10006030, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006030, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006030, label %dec_label_pc_10005f6c, label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006030
  %v1_10006038 = icmp slt i32 %v0_10005f88, 55
  %v3_10006038 = icmp eq i32 %v0_10005f88, 55
  store i1 %v1_10006038, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006038, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006038, label %dec_label_pc_10005f6c, label %dec_label_pc_10006040

dec_label_pc_10006040:                            ; preds = %dec_label_pc_10006038
  %v1_10006040 = icmp slt i32 %v0_10005f88, 214
  %v3_10006040 = icmp eq i32 %v0_10005f88, 214
  store i1 %v1_10006040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006040, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006040, label %dec_label_pc_10005f6c, label %dec_label_pc_10006048

dec_label_pc_10006048:                            ; preds = %dec_label_pc_10006040
  %v1_10006048 = icmp slt i32 %v0_10005f88, 215
  %v3_10006048 = icmp eq i32 %v0_10005f88, 215
  store i1 %v1_10006048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006048, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006048, label %dec_label_pc_10005f6c, label %dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge

dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge: ; preds = %dec_label_pc_10006048
  %v0_10006054.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006050

dec_label_pc_10006050:                            ; preds = %dec_label_pc_10006618, %dec_label_pc_10006604, %dec_label_pc_100065f8, %dec_label_pc_100065e4, %dec_label_pc_10006610, %dec_label_pc_100065f0, %dec_label_pc_100065dc, %dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge, %dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge
  %v0_1000605c = phi i32 [ %v0_1000605c18, %dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge ], [ %v1_10005f80, %dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge ], [ %v1_10005f80, %dec_label_pc_100065dc ], [ %v1_10005f80, %dec_label_pc_100065f0 ], [ %v1_10005f80, %dec_label_pc_10006610 ], [ %v1_10005f80, %dec_label_pc_100065e4 ], [ %v1_10005f80, %dec_label_pc_100065f8 ], [ %v1_10005f80, %dec_label_pc_10006604 ], [ %v1_10005f80, %dec_label_pc_10006618 ]
  %v0_10006054 = phi i32 [ %v0_100065d0, %dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge ], [ %v0_10006054.pre.pre, %dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge ], [ %v0_100065dc, %dec_label_pc_100065dc ], [ %v0_100065f0, %dec_label_pc_100065f0 ], [ %v0_10006610, %dec_label_pc_10006610 ], [ %v0_100065dc, %dec_label_pc_100065e4 ], [ %v0_100065f0, %dec_label_pc_100065f8 ], [ %v0_10006604, %dec_label_pc_10006604 ], [ %v0_10006610, %dec_label_pc_10006618 ]
  %v0_10006050 = phi i32 [ %v0_10006050.pre, %dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge ], [ %v0_10005f88, %dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge ], [ 172, %dec_label_pc_100065dc ], [ 100, %dec_label_pc_100065f0 ], [ 198, %dec_label_pc_10006610 ], [ 172, %dec_label_pc_100065e4 ], [ 100, %dec_label_pc_100065f8 ], [ 169, %dec_label_pc_10006604 ], [ 198, %dec_label_pc_10006618 ]
  %stack_var_-88.3 = phi i16 [ %stack_var_-88.6, %dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge ], [ %stack_var_-88.2.ph, %dec_label_pc_10006048.dec_label_pc_10006050.loopexit_crit_edge ], [ %stack_var_-88.2.ph, %dec_label_pc_100065dc ], [ %stack_var_-88.2.ph, %dec_label_pc_100065f0 ], [ %stack_var_-88.2.ph, %dec_label_pc_10006610 ], [ %stack_var_-88.2.ph, %dec_label_pc_100065e4 ], [ %stack_var_-88.2.ph, %dec_label_pc_100065f8 ], [ %stack_var_-88.2.ph, %dec_label_pc_10006604 ], [ %stack_var_-88.2.ph, %dec_label_pc_10006618 ]
  %v1_10006050 = mul i32 %v0_10006050, 16777216
  %v1_10006054 = mul i32 %v0_10006054, 65536
  %v2_10006058 = or i32 %v1_10006050, %v1_10006054
  %v1_1000605c = mul i32 %v0_1000605c, 256
  %v1_10006060 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006060 = or i32 %v2_10006058, %v1_10006060
  store i32 %v2_10006060, i32* %r0.global-to-local, align 4
  %v0_10006064 = load i32, i32* @r30, align 4
  store i32 %v0_10006064, i32* @r3, align 4
  %v2_10006068 = or i32 %v2_10006060, %v1_1000605c
  store i32 %v2_10006068, i32* %r9.global-to-local, align 4
  store i32 %v2_10006068, i32* @global_var_1001aa34.257, align 4
  %v0_10006074 = load i32, i32* @r27, align 4
  %v1_10006074 = trunc i32 %v0_10006074 to i16
  store i16 %v1_10006074, i16* bitcast (i32* @global_var_1001aa2e.258 to i16*), align 4
  %v2_10006078 = call i32 @function_10003ca8(i32 %v0_10006064, i32 20)
  %v3_10006078 = trunc i32 %v2_10006078 to i16
  %v3_1000607c = load i64, i64* %stack_var_-1920, align 8
  %v4_1000607c = trunc i64 %v3_1000607c to i32
  store i32 %v4_1000607c, i32* %r9.global-to-local, align 4
  store i16 %v3_10006078, i16* bitcast (i32* @global_var_1001aa2e.258 to i16*), align 4
  %v4_1000608c = mul nsw i64 %v3_1000607c, 1717986919
  %v5_1000608c = udiv i64 %v4_1000608c, 4294967296
  %v6_1000608c = trunc i64 %v5_1000608c to i32
  %tmp = icmp slt i32 %v4_1000607c, 0
  %v1_10006090 = zext i1 %tmp to i32
  %v2_10006090 = ashr i32 %v4_1000607c, 31
  %v3_10006090 = and i32 %v2_10006090, -2
  %v4_10006090 = or i32 %v3_10006090, %v1_10006090
  store i32 %v4_10006090, i32* %r11.global-to-local, align 4
  %v1_1000609447 = udiv i64 %v4_1000608c, 17179869184
  %v1_10006094 = trunc i64 %v1_1000609447 to i32
  %v2_10006094 = ashr i32 %v6_1000608c, 31
  %v3_10006094 = and i32 %v2_10006094, -1073741824
  %v4_10006094 = or i32 %v3_10006094, %v1_10006094
  %v2_10006098 = sub nsw i32 %v4_10006094, %v4_10006090
  %v1_1000609c = mul i32 %v2_10006098, 10
  %v2_100060a0 = icmp slt i32 %v4_1000607c, %v1_1000609c
  %v4_100060a0 = icmp eq i32 %v4_1000607c, %v1_1000609c
  store i1 %v2_100060a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100060a0, i1* %cr7_eq.global-to-local, align 1
  %.5 = select i1 %v4_100060a0, i16 2323, i16 23
  store i16 %.5, i16* @global_var_1001aa3a.82, align 2
  %v3_100060b0 = load i32, i32* @global_var_1001aa34.257, align 4
  store i32 %v3_100060b0, i32* %r0.global-to-local, align 4
  %v0_100060b4 = load i32, i32* @r31, align 4
  store i32 %v0_100060b4, i32* @r4, align 4
  %v0_100060b8 = load i32, i32* @r27, align 4
  %v1_100060b8 = trunc i32 %v0_100060b8 to i16
  store i16 %v1_100060b8, i16* bitcast (i32* @global_var_1001aa48.259 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_100060b0, i32* @global_var_1001aa3c.260, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_100060c8 = load i32, i32* @r30, align 4
  store i32 %v0_100060c8, i32* %r3.global-to-local, align 4
  %v4_100060cc = call i32 @function_10003d0c(i32 %v0_100060c8, i32 %v0_100060b4, i32 20, i32 20)
  %v5_100060cc = trunc i32 %v4_100060cc to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_100060cc, i16* bitcast (i32* @global_var_1001aa48.259 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100060dc = load i32, i32* @global_var_1001aa34.257, align 4
  store i32 %v3_100060dc, i32* %r9.global-to-local, align 4
  %v0_100060e0 = load i32, i32* @r30, align 4
  %v3_100060e4 = load i16, i16* @global_var_1001aa3a.82, align 2
  %v4_100060e4 = zext i16 %v3_100060e4 to i32
  store i32 %v4_100060e4, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_100060ec = load i32, i32* @global_var_1001a9b8.73, align 4
  store i32 %v3_100060ec, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100060f4 = load i32, i32* @r26, align 4
  store i32 %v0_100060f4, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268460300, i32* @lr, align 4
  %v6_10006108 = call i32 @function_100085f0(i32 %v3_100060ec, i32 %v0_100060e0, i32 40, i32 16384, i32 %v0_100060f4, i32 16)
  store i32 %v6_10006108, i32* %r3.global-to-local, align 4
  %v3_1000610c = load i64, i64* %stack_var_-1920, align 8
  %v4_1000610c = trunc i64 %v3_1000610c to i32
  %v1_10006110 = add i32 %v4_1000610c, 1
  store i32 %v1_10006110, i32* %r9.global-to-local, align 4
  %v1_10006114 = icmp slt i32 %v1_10006110, 383
  %v3_10006114 = icmp eq i32 %v1_10006110, 383
  store i1 %v1_10006114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006114, i1* %cr7_eq.global-to-local, align 1
  %v5_10006118 = sext i32 %v1_10006110 to i64
  store i64 %v5_10006118, i64* %stack_var_-1920, align 8
  %tmp108 = icmp slt i32 %v1_10006110, 384
  br i1 %tmp108, label %dec_label_pc_10006050.dec_label_pc_10005f48_crit_edge, label %dec_label_pc_10006120

dec_label_pc_10006050.dec_label_pc_10005f48_crit_edge: ; preds = %dec_label_pc_10006050
  %v0_10005f48.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005f48

dec_label_pc_10006120:                            ; preds = %dec_label_pc_10006050
  %v0_10006120 = load i32, i32* @r29, align 4
  store i32 %v0_10006120, i32* @r23, align 4
  br label %dec_label_pc_10006124

dec_label_pc_10006124:                            ; preds = %dec_label_pc_10005f24, %dec_label_pc_10006120
  %stack_var_-88.4 = phi i16 [ %stack_var_-88.3, %dec_label_pc_10006120 ], [ %stack_var_-88.0, %dec_label_pc_10005f24 ]
  %v0_10006124 = call i32 @function_100080c8()
  store i32 %v0_10006124, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_10006124, i32* %r24.global-to-local, align 4
  %v2_1000613c = ptrtoint i32* %stack_var_-1616 to i32
  %v4_10006188 = zext i8 %tmp59 to i32
  %v1_1000618c = icmp ult i8 %tmp59, 6
  %v3_1000618c = icmp eq i8 %tmp59, 6
  %v4_10006194 = zext i16 %tmp58 to i32
  %v1_1000619c = icmp ult i16 %tmp58, 23
  %v3_1000619c = icmp eq i16 %tmp58, 23
  %v4_100061ac = zext i16 %tmp57 to i32
  %v4_100061b0 = sext i16 %stack_var_-88.4 to i32
  %v2_100061b4 = icmp slt i32 %v4_100061ac, %v4_100061b0
  %v4_100061b4 = icmp eq i32 %v4_100061ac, %v4_100061b0
  %v1_100061c0 = and i32 %tmp56, 131072
  %v3_100061c0 = icmp eq i32 %v1_100061c0, 0
  %v1_100061e8 = add i32 %tmp55, -1
  %v2_100061ec = icmp slt i32 %v1_100061e8, %tmp54
  %v4_100061ec = icmp eq i32 %v1_100061e8, %tmp54
  %v1_100061c8 = and i32 %tmp56, 1048576
  %v3_100061c8 = icmp eq i32 %v1_100061c8, 0
  %v1_100061d0 = and i32 %tmp56, 262144
  %v3_100061d0 = icmp eq i32 %v1_100061d0, 0
  %v1_100061d8 = and i32 %tmp56, 65536
  %v3_100061d8 = icmp eq i32 %v1_100061d8, 0
  %v1_100061a4 = icmp ult i16 %tmp58, 2323
  %v3_100061a4 = icmp eq i16 %tmp58, 2323
  br label %dec_label_pc_10006130

dec_label_pc_10006130:                            ; preds = %dec_label_pc_100061e0, %dec_label_pc_100061d8, %dec_label_pc_100061d0, %dec_label_pc_100061ac, %dec_label_pc_100061a4, %dec_label_pc_10006188, %dec_label_pc_10006174, %dec_label_pc_100061c8, %dec_label_pc_100061bc, %dec_label_pc_1000616c, %dec_label_pc_10006124
  %v1_10006138 = phi i32 [ %v0_10006124, %dec_label_pc_10006124 ], [ %v0_10006160, %dec_label_pc_1000616c ], [ %v0_10006160, %dec_label_pc_100061bc ], [ %v0_10006160, %dec_label_pc_100061c8 ], [ %v0_10006160, %dec_label_pc_10006174 ], [ %v0_10006160, %dec_label_pc_10006188 ], [ %v0_10006160, %dec_label_pc_100061a4 ], [ %v0_10006160, %dec_label_pc_100061ac ], [ %v0_10006160, %dec_label_pc_100061d0 ], [ %v0_10006160, %dec_label_pc_100061d8 ], [ %v0_10006160, %dec_label_pc_100061e0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10006138 = inttoptr i32 %v1_10006138 to i32*
  store i32 0, i32* %v2_10006138, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10006148 = load i32, i32* @global_var_1001a9b8.73, align 4
  store i32 %v3_10006148, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268460376, i32* @lr, align 4
  %v6_10006154 = call i32 @function_10008578(i32 %v3_10006148, i32 %v2_1000613c, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006154, i32* %r3.global-to-local, align 4
  %tmp109 = icmp slt i32 %v6_10006154, 1
  br i1 %tmp109, label %dec_label_pc_10006284, label %dec_label_pc_10006160

dec_label_pc_10006160:                            ; preds = %dec_label_pc_10006130, %dec_label_pc_10006248
  %v0_1000616c = phi i32 [ %v6_10006278, %dec_label_pc_10006248 ], [ %v6_10006154, %dec_label_pc_10006130 ]
  %v0_10006160 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006160 = inttoptr i32 %v0_10006160 to i32*
  %v2_10006160 = load i32, i32* %v1_10006160, align 4
  store i32 %v2_10006160, i32* %r0.global-to-local, align 4
  %v1_10006164 = icmp slt i32 %v2_10006160, 11
  %v3_10006164 = icmp eq i32 %v2_10006160, 11
  store i1 %v1_10006164, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006164, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006164, label %dec_label_pc_10006284, label %dec_label_pc_1000616c

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_10006160
  %v1_1000616c = icmp ult i32 %v0_1000616c, 39
  %v3_1000616c = icmp eq i32 %v0_1000616c, 39
  store i1 %v1_1000616c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000616c, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_1000616c, 40
  br i1 %tmp110, label %dec_label_pc_10006130, label %dec_label_pc_10006174

dec_label_pc_10006174:                            ; preds = %dec_label_pc_1000616c
  %v3_10006178 = load i32, i32* @global_var_1001a998.12, align 4
  store i32 %v3_10006178, i32* %r0.global-to-local, align 4
  store i32 %tmp60, i32* %r9.global-to-local, align 4
  %v2_10006180 = icmp slt i32 %tmp60, %v3_10006178
  %v4_10006180 = icmp eq i32 %tmp60, %v3_10006178
  store i1 %v2_10006180, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006180, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006180, label %dec_label_pc_10006188, label %dec_label_pc_10006130

dec_label_pc_10006188:                            ; preds = %dec_label_pc_10006174
  store i32 %v4_10006188, i32* %r0.global-to-local, align 4
  store i1 %v1_1000618c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000618c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000618c, label %dec_label_pc_10006194, label %dec_label_pc_10006130

dec_label_pc_10006194:                            ; preds = %dec_label_pc_10006188
  store i32 %v4_10006194, i32* %r8.global-to-local, align 4
  store i32 %v4_10006194, i32* %r0.global-to-local, align 4
  store i1 %v1_1000619c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000619c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000619c, label %dec_label_pc_100061ac, label %dec_label_pc_100061a4

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_10006194
  store i1 %v1_100061a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100061a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100061a4, label %dec_label_pc_100061ac, label %dec_label_pc_10006130

dec_label_pc_100061ac:                            ; preds = %dec_label_pc_100061a4, %dec_label_pc_10006194
  store i32 %v4_100061ac, i32* %r0.global-to-local, align 4
  store i32 %v4_100061b0, i32* %r10.global-to-local, align 4
  store i1 %v2_100061b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100061b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100061b4, label %dec_label_pc_100061bc, label %dec_label_pc_10006130

dec_label_pc_100061bc:                            ; preds = %dec_label_pc_100061ac
  store i32 %tmp56, i32* %r0.global-to-local, align 4
  store i32 %v1_100061c0, i32* %r11.global-to-local, align 4
  br i1 %v3_100061c0, label %dec_label_pc_10006130, label %dec_label_pc_100061c8

dec_label_pc_100061c8:                            ; preds = %dec_label_pc_100061bc
  store i32 %v1_100061c8, i32* %r9.global-to-local, align 4
  br i1 %v3_100061c8, label %dec_label_pc_10006130, label %dec_label_pc_100061d0

dec_label_pc_100061d0:                            ; preds = %dec_label_pc_100061c8
  store i32 %v1_100061d0, i32* %r10.global-to-local, align 4
  br i1 %v3_100061d0, label %dec_label_pc_100061d8, label %dec_label_pc_10006130

dec_label_pc_100061d8:                            ; preds = %dec_label_pc_100061d0
  store i32 %v1_100061d8, i32* %r11.global-to-local, align 4
  br i1 %v3_100061d8, label %dec_label_pc_100061e0, label %dec_label_pc_10006130

dec_label_pc_100061e0:                            ; preds = %dec_label_pc_100061d8
  store i32 %tmp55, i32* %r9.global-to-local, align 4
  store i32 %tmp54, i32* %r0.global-to-local, align 4
  store i32 %v1_100061e8, i32* %r10.global-to-local, align 4
  store i1 %v2_100061ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100061ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100061ec, label %dec_label_pc_100061f4, label %dec_label_pc_10006130

dec_label_pc_100061f4:                            ; preds = %dec_label_pc_100061e0
  %v0_100061f4 = load i32, i32* @r29, align 4
  %v1_100061f4 = icmp slt i32 %v0_100061f4, 255
  %v2_100061f4 = icmp sgt i32 %v0_100061f4, 255
  %v3_100061f4 = icmp eq i32 %v0_100061f4, 255
  store i1 %v1_100061f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100061f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100061f4, label %dec_label_pc_10006284, label %dec_label_pc_100061fc

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_100061f4
  %v3_10006204 = load i32, i32* @global_var_1001a9b4.72, align 4
  store i32 %v3_10006204, i32* %r11.global-to-local, align 4
  %v1_10006208 = mul i32 %v0_100061f4, 256
  store i32 %v1_10006208, i32* %r9.global-to-local, align 4
  %v2_1000620c = mul i32 %v0_100061f4, 288
  store i32 %v2_1000620c, i32* %r0.global-to-local, align 4
  %v2_10006210 = add i32 %v3_10006204, %v2_1000620c
  store i32 %v2_10006210, i32* @r3, align 4
  %v1_10006214 = add i32 %v2_10006210, 12
  %v2_10006214 = inttoptr i32 %v1_10006214 to i32*
  %v3_10006214 = load i32, i32* %v2_10006214, align 4
  store i32 %v3_10006214, i32* %r9.global-to-local, align 4
  %v1_10006218 = icmp slt i32 %v3_10006214, 0
  %v3_10006218 = icmp eq i32 %v3_10006214, 0
  store i1 %v1_10006218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006218, label %dec_label_pc_10006248, label %dec_label_pc_10006220

dec_label_pc_10006220:                            ; preds = %dec_label_pc_100061fc
  %v1_10006220 = sub i32 256, %v0_100061f4
  store i32 %v1_10006220, i32* %r11.global-to-local, align 4
  %v1_10006224 = add i32 %v2_10006210, 288
  store i32 %v1_10006224, i32* %r9.global-to-local, align 4
  store i32 %v1_10006220, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000622c

dec_label_pc_1000622c:                            ; preds = %dec_label_pc_10006234, %dec_label_pc_10006220
  %v0_10006234 = phi i32 [ %v1_1000623c, %dec_label_pc_10006234 ], [ %v1_10006224, %dec_label_pc_10006220 ]
  %v0_10006230 = phi i32 [ %v1_10006230, %dec_label_pc_10006234 ], [ %v1_10006220, %dec_label_pc_10006220 ]
  %v0_1000622c = phi i32 [ %v1_1000622c, %dec_label_pc_10006234 ], [ %v0_100061f4, %dec_label_pc_10006220 ]
  %v1_1000622c = add i32 %v0_1000622c, 1
  store i32 %v1_1000622c, i32* @r29, align 4
  %v1_10006230 = add i32 %v0_10006230, -1
  store i32 %v1_10006230, i32* %ctr.global-to-local, align 4
  %v2_10006230 = icmp eq i32 %v1_10006230, 0
  br i1 %v2_10006230, label %dec_label_pc_10006284, label %dec_label_pc_10006234

dec_label_pc_10006234:                            ; preds = %dec_label_pc_1000622c
  %v1_10006234 = add i32 %v0_10006234, 12
  %v2_10006234 = inttoptr i32 %v1_10006234 to i32*
  %v3_10006234 = load i32, i32* %v2_10006234, align 4
  store i32 %v3_10006234, i32* %r0.global-to-local, align 4
  store i32 %v0_10006234, i32* @r3, align 4
  %v1_1000623c = add i32 %v0_10006234, 288
  store i32 %v1_1000623c, i32* %r9.global-to-local, align 4
  %v1_10006240 = icmp slt i32 %v3_10006234, 0
  %v3_10006240 = icmp eq i32 %v3_10006234, 0
  store i1 %v1_10006240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006240, label %dec_label_pc_10006248, label %dec_label_pc_1000622c

dec_label_pc_10006248:                            ; preds = %dec_label_pc_10006234, %dec_label_pc_100061fc
  %v1_10006248 = phi i32 [ %v2_10006210, %dec_label_pc_100061fc ], [ %v0_10006234, %dec_label_pc_10006234 ]
  %v2_10006248 = add i32 %v1_10006248, 16
  %v3_10006248 = inttoptr i32 %v2_10006248 to i32*
  store i32 %tmp54, i32* %v3_10006248, align 4
  %v0_1000624c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000624c = trunc i32 %v0_1000624c to i16
  %v2_1000624c = load i32, i32* @r3, align 4
  %v3_1000624c = add i32 %v2_1000624c, 20
  %v4_1000624c = inttoptr i32 %v3_1000624c to i16*
  store i16 %v1_1000624c, i16* %v4_1000624c, align 2
  store i32 ptrtoint (i32* @global_var_10006254.261 to i32), i32* @lr, align 4
  %v0_10006250 = call i32 @function_10004aa8()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10006258 = load i32, i32* %r24.global-to-local, align 4
  %v2_10006258 = inttoptr i32 %v1_10006258 to i32*
  store i32 0, i32* %v2_10006258, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  %v3_10006268 = load i32, i32* @global_var_1001a9b8.73, align 4
  store i32 %v3_10006268, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268460668, i32* @lr, align 4
  %v6_10006278 = call i32 @function_10008578(i32 %v3_10006268, i32 %v2_1000613c, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006278, i32* %r3.global-to-local, align 4
  %v2_1000627c = icmp sgt i32 %v6_10006278, 0
  br i1 %v2_1000627c, label %dec_label_pc_10006160, label %dec_label_pc_10006284

dec_label_pc_10006284:                            ; preds = %dec_label_pc_10006130, %dec_label_pc_10006248, %dec_label_pc_100061f4, %dec_label_pc_10006160, %dec_label_pc_1000622c
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006294136 = load i32, i32* @r16, align 4
  %v4_10006294137 = inttoptr i32 %v2_10006294136 to i32*
  store i32 0, i32* %v4_10006294137, align 4
  %v0_10006298138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006298139 = add i32 %v0_10006298138, 4
  store i32 %v1_10006298139, i32* %r9.global-to-local, align 4
  %v0_1000629c140 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000629c141 = add i32 %v0_1000629c140, -1
  store i32 %v1_1000629c141, i32* %ctr.global-to-local, align 4
  %v2_1000629c142 = icmp eq i32 %v1_1000629c141, 0
  br i1 %v2_1000629c142, label %dec_label_pc_100062a0, label %dec_label_pc_10006294.dec_label_pc_10006294_crit_edge

dec_label_pc_10006294.dec_label_pc_10006294_crit_edge: ; preds = %dec_label_pc_10006284, %dec_label_pc_10006294.dec_label_pc_10006294_crit_edge
  %v1_10006298143 = phi i32 [ %v1_10006298, %dec_label_pc_10006294.dec_label_pc_10006294_crit_edge ], [ %v1_10006298139, %dec_label_pc_10006284 ]
  %v0_10006294.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006294 = load i32, i32* @r16, align 4
  %v3_10006294 = add i32 %v2_10006294, %v1_10006298143
  %v4_10006294 = inttoptr i32 %v3_10006294 to i32*
  store i32 %v0_10006294.pre, i32* %v4_10006294, align 4
  %v0_10006298 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006298 = add i32 %v0_10006298, 4
  store i32 %v1_10006298, i32* %r9.global-to-local, align 4
  %v0_1000629c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000629c = add i32 %v0_1000629c, -1
  store i32 %v1_1000629c, i32* %ctr.global-to-local, align 4
  %v2_1000629c = icmp eq i32 %v1_1000629c, 0
  br i1 %v2_1000629c, label %dec_label_pc_100062a0, label %dec_label_pc_10006294.dec_label_pc_10006294_crit_edge

dec_label_pc_100062a0:                            ; preds = %dec_label_pc_10006294.dec_label_pc_10006294_crit_edge, %dec_label_pc_10006284
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100062b0

dec_label_pc_100062b0:                            ; preds = %dec_label_pc_100062b0, %dec_label_pc_100062a0
  %v1_100062b0 = phi i32 [ 0, %dec_label_pc_100062a0 ], [ %v1_100062b4, %dec_label_pc_100062b0 ]
  %v0_100062b0 = phi i32 [ 0, %dec_label_pc_100062a0 ], [ %v0_100062bc, %dec_label_pc_100062b0 ]
  %v2_100062b0 = load i32, i32* %r14.global-to-local, align 4
  %v3_100062b0 = add i32 %v2_100062b0, %v1_100062b0
  %v4_100062b0 = inttoptr i32 %v3_100062b0 to i32*
  store i32 %v0_100062b0, i32* %v4_100062b0, align 4
  %v0_100062b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062b4 = add i32 %v0_100062b4, 4
  store i32 %v1_100062b4, i32* %r9.global-to-local, align 4
  %v0_100062b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100062b8 = add i32 %v0_100062b8, -1
  store i32 %v1_100062b8, i32* %ctr.global-to-local, align 4
  %v2_100062b8 = icmp eq i32 %v1_100062b8, 0
  %v0_100062bc = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_100062b8, label %dec_label_pc_100062bc, label %dec_label_pc_100062b0

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_100062b0
  %v5_100062bc = sext i32 %v0_100062bc to i64
  store i64 %v5_100062bc, i64* %stack_var_-1920, align 8
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_10006644 = ptrtoint i32* %stack_var_-1928 to i32
  br label %dec_label_pc_10006328

dec_label_pc_100062d8:                            ; preds = %dec_label_pc_10006350
  %v1_100062d8 = icmp slt i32 %v3_10006344, 1
  store i1 %v1_100062d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006348, i1* %cr7_eq.global-to-local, align 1
  %v1_10006640 = add i32 %v2_10006340, 4
  %v2_10006640 = inttoptr i32 %v1_10006640 to i32*
  %v3_10006640 = load i32, i32* %v2_10006640, align 4
  store i32 %v3_10006640, i32* %r3.global-to-local, align 4
  br i1 %v3_10006348, label %dec_label_pc_10006640, label %dec_label_pc_100062e0

dec_label_pc_100062e0:                            ; preds = %dec_label_pc_100062d8
  store i32 %v2_10006644, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_10006640, 65536
  %v1_100062ec = sdiv i32 %sext, 65536
  %v2_100062ec = call i32 @__asm_rlwinm(i32 %v1_100062ec, i32 29, i32 3, i32 29)
  %v0_100062f0 = load i32, i32* @r27, align 4
  %v3_100062f0 = icmp slt i32 %v0_100062f0, %v1_100062ec
  %v5_100062f0 = icmp eq i32 %v0_100062f0, %v1_100062ec
  store i1 %v3_100062f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v5_100062f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100062f4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100062f4 = add i32 %v1_100062f4, %v2_100062ec
  store i32 %v2_100062f4, i32* %r11.global-to-local, align 4
  %v2_100062f8 = urem i32 %v3_10006640, 32
  store i32 %v2_100062f8, i32* %r10.global-to-local, align 4
  %v1_100062fc = add i32 %v2_100062f4, 56
  %v2_100062fc = inttoptr i32 %v1_100062fc to i32*
  %v3_100062fc = load i32, i32* %v2_100062fc, align 4
  %v0_10006300 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006300 = shl i32 %v0_10006300, %v2_100062f8
  store i32 %v3_10006300, i32* %r0.global-to-local, align 4
  %v2_10006304 = or i32 %v3_10006300, %v3_100062fc
  store i32 %v2_10006304, i32* %r9.global-to-local, align 4
  store i32 %v2_10006304, i32* %v2_100062fc, align 4
  br i1 %v3_100062f0, label %dec_label_pc_10006310, label %dec_label_pc_10006314

dec_label_pc_10006310:                            ; preds = %dec_label_pc_100062e0
  store i32 %v1_100062ec, i32* @r27, align 4
  br label %dec_label_pc_10006314

dec_label_pc_10006314:                            ; preds = %dec_label_pc_10006640, %dec_label_pc_100062e0, %dec_label_pc_10006630, %dec_label_pc_10006674, %dec_label_pc_1000666c, %dec_label_pc_10006310
  %v3_10006314 = load i64, i64* %stack_var_-1920, align 8
  %v4_10006314 = trunc i64 %v3_10006314 to i32
  store i32 %v4_10006314, i32* %r9.global-to-local, align 4
  %v1_10006318 = add i32 %v4_10006314, 1
  store i32 %v1_10006318, i32* %r0.global-to-local, align 4
  %v1_1000631c = icmp slt i32 %v1_10006318, 255
  %v2_1000631c = icmp sgt i32 %v1_10006318, 255
  %v3_1000631c = icmp eq i32 %v1_10006318, 255
  store i1 %v1_1000631c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000631c, i1* %cr7_eq.global-to-local, align 1
  %v5_10006320 = sext i32 %v1_10006318 to i64
  store i64 %v5_10006320, i64* %stack_var_-1920, align 8
  br i1 %v2_1000631c, label %dec_label_pc_100063b8, label %dec_label_pc_10006328

dec_label_pc_10006328:                            ; preds = %dec_label_pc_1000639c, %dec_label_pc_10006314, %dec_label_pc_100062bc
  %v0_1000632c = phi i32 [ 0, %dec_label_pc_100062bc ], [ %v1_10006318, %dec_label_pc_10006314 ], [ %v1_100063a8, %dec_label_pc_1000639c ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006330 = load i32, i32* @global_var_1001a9b4.72, align 4
  store i32 %v3_10006330, i32* %r9.global-to-local, align 4
  %v2_10006338 = mul i32 %v0_1000632c, 288
  store i32 %v2_10006338, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006340 = add i32 %v3_10006330, %v2_10006338
  store i32 %v2_10006340, i32* @r29, align 4
  %v1_10006344 = add i32 %v2_10006340, 12
  %v2_10006344 = inttoptr i32 %v1_10006344 to i32*
  %v3_10006344 = load i32, i32* %v2_10006344, align 4
  store i32 %v3_10006344, i32* %r10.global-to-local, align 4
  %v1_10006348 = icmp eq i32 %v3_10006344, 0
  %v3_10006348 = icmp eq i32 %v3_10006344, 1
  store i1 %v1_10006348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006348, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = or i32 %v3_10006344, 1
  %tmp113 = icmp eq i32 %tmp112, 1
  br i1 %tmp113, label %dec_label_pc_10006630, label %dec_label_pc_10006350

dec_label_pc_10006350:                            ; preds = %dec_label_pc_10006328, %dec_label_pc_10006638
  %v1_10006360 = phi i32 [ 30, %dec_label_pc_10006328 ], [ 5, %dec_label_pc_10006638 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006354 = load i32, i32* @global_var_1001a9b0.66, align 4
  store i32 %v3_10006354, i32* %r0.global-to-local, align 4
  %v1_10006358 = add i32 %v2_10006340, 8
  %v2_10006358 = inttoptr i32 %v1_10006358 to i32*
  %v3_10006358 = load i32, i32* %v2_10006358, align 4
  store i32 %v3_10006358, i32* %r9.global-to-local, align 4
  %v2_1000635c = sub i32 %v3_10006354, %v3_10006358
  store i32 %v2_1000635c, i32* %r0.global-to-local, align 4
  %v2_10006360 = icmp ult i32 %v2_1000635c, %v1_10006360
  %v3_10006360 = icmp ugt i32 %v2_1000635c, %v1_10006360
  %v4_10006360 = icmp eq i32 %v2_1000635c, %v1_10006360
  store i1 %v2_10006360, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006360, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006360, label %dec_label_pc_10006368, label %dec_label_pc_100062d8

dec_label_pc_10006368:                            ; preds = %dec_label_pc_10006350
  %v1_10006368 = add i32 %v2_10006340, 4
  %v2_10006368 = inttoptr i32 %v1_10006368 to i32*
  %v3_10006368 = load i32, i32* %v2_10006368, align 4
  store i32 %v3_10006368, i32* %r3.global-to-local, align 4
  store i32 268460912, i32* @lr, align 4
  %v0_1000636c = call i32 @function_10007cb0()
  store i32 %v0_1000636c, i32* %r3.global-to-local, align 4
  %v0_10006370 = load i32, i32* @r29, align 4
  %v1_10006370 = add i32 %v0_10006370, 12
  %v2_10006370 = inttoptr i32 %v1_10006370 to i32*
  %v3_10006370 = load i32, i32* %v2_10006370, align 4
  store i32 %v3_10006370, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006378 = icmp ult i32 %v3_10006370, 2
  %v3_10006378 = icmp eq i32 %v3_10006370, 2
  store i1 %v1_10006378, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006378, i1* %cr7_eq.global-to-local, align 1
  %v2_1000637c = add i32 %v0_10006370, 4
  %v3_1000637c = inttoptr i32 %v2_1000637c to i32*
  store i32 -1, i32* %v3_1000637c, align 4
  %tmp114 = icmp ult i32 %v3_10006370, 3
  br i1 %tmp114, label %dec_label_pc_10006674, label %dec_label_pc_10006384

dec_label_pc_10006384:                            ; preds = %dec_label_pc_10006368
  %v0_10006384 = load i32, i32* @r29, align 4
  %v1_10006384 = add i32 %v0_10006384, 284
  %v2_10006384 = inttoptr i32 %v1_10006384 to i8*
  %v3_10006384 = load i8, i8* %v2_10006384, align 1
  %v4_10006384 = zext i8 %v3_10006384 to i32
  %v1_10006388 = add nuw nsw i32 %v4_10006384, 1
  %v1_1000638c = urem i32 %v1_10006388, 256
  store i32 %v1_1000638c, i32* %r9.global-to-local, align 4
  %v1_10006390 = icmp ult i32 %v1_1000638c, 10
  %v3_10006390 = icmp eq i32 %v1_1000638c, 10
  store i1 %v1_10006390, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006390, i1* %cr7_eq.global-to-local, align 1
  %v1_10006394 = trunc i32 %v1_10006388 to i8
  store i8 %v1_10006394, i8* %v2_10006384, align 1
  %v0_10006398 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006398, label %dec_label_pc_10006674, label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_10006384
  %v0_1000639c = load i32, i32* @r29, align 4
  store i32 %v0_1000639c, i32* @r3, align 4
  store i32 268460964, i32* @lr, align 4
  %v0_100063a0 = call i32 @function_10004aa8()
  store i32 %v0_100063a0, i32* %r3.global-to-local, align 4
  %v3_100063a4 = load i64, i64* %stack_var_-1920, align 8
  %v4_100063a4 = trunc i64 %v3_100063a4 to i32
  store i32 %v4_100063a4, i32* %r9.global-to-local, align 4
  %v1_100063a8 = add i32 %v4_100063a4, 1
  store i32 %v1_100063a8, i32* %r0.global-to-local, align 4
  %v1_100063ac = icmp slt i32 %v1_100063a8, 255
  %v3_100063ac = icmp eq i32 %v1_100063a8, 255
  store i1 %v1_100063ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100063ac, i1* %cr7_eq.global-to-local, align 1
  %v5_100063b0 = sext i32 %v1_100063a8 to i64
  store i64 %v5_100063b0, i64* %stack_var_-1920, align 8
  %tmp115 = icmp slt i32 %v1_100063a8, 256
  br i1 %tmp115, label %dec_label_pc_10006328, label %dec_label_pc_100063b8

dec_label_pc_100063b8:                            ; preds = %dec_label_pc_1000639c, %dec_label_pc_10006314
  %v0_100063b8 = load i32, i32* @r27, align 4
  %v1_100063b8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100063b8 = icmp slt i32 %v0_100063b8, %v1_100063b8
  %v4_100063b8 = icmp eq i32 %v0_100063b8, %v1_100063b8
  store i1 %v2_100063b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100063b8, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_100063b8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_100063b8, label %dec_label_pc_100063d4, label %dec_label_pc_100063d8

dec_label_pc_100063d4:                            ; preds = %dec_label_pc_100063b8
  store i32 %v1_100063b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100063d8

dec_label_pc_100063d8:                            ; preds = %dec_label_pc_100063b8, %dec_label_pc_100063d4
  %v0_100063e8 = phi i32 [ %v0_100063b8, %dec_label_pc_100063b8 ], [ %v1_100063b8, %dec_label_pc_100063d4 ]
  %v1_100063d8 = ptrtoint i32* %stack_var_-1872 to i32
  %v1_100063dc = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v1_100063dc, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_100063e4 = ptrtoint i32* %stack_var_-1908 to i32
  store i32 %v2_100063e4, i32* %r7.global-to-local, align 4
  %v1_100063e8 = add i32 %v0_100063e8, 1
  store i32 %v1_100063e8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100063f0.262 to i32), i32* @lr, align 4
  %v5_100063ec = call i32 @function_10007f30(i32 %v1_100063e8, i32 %v1_100063d8, i32 %v1_100063dc, i32 0, i32 %v2_100063e4)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268461048, i32* @lr, align 4
  %v0_100063f4 = call i32 @function_10008038()
  store i32 %v0_100063f4, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_100063f4, i32* @global_var_1001a9b0.66, align 4
  %v0_10006404 = load i32, i32* %r29.global-to-local, align 4
  %v5_10006404 = sext i32 %v0_10006404 to i64
  store i64 %v5_10006404, i64* %stack_var_-1920, align 8
  %v2_100070f0 = ptrtoint i32* %stack_var_-1912 to i32
  %v2_100070f4 = ptrtoint i32* %stack_var_-1916 to i32
  br label %dec_label_pc_10006420

dec_label_pc_1000640c:                            ; preds = %dec_label_pc_10006484, %dec_label_pc_10006f78, %dec_label_pc_10006464, %dec_label_pc_10006420, %dec_label_pc_10007288, %dec_label_pc_1000718c, %dec_label_pc_10006fac
  %v3_1000640c = load i64, i64* %stack_var_-1920, align 8
  %v4_1000640c = trunc i64 %v3_1000640c to i32
  store i32 %v4_1000640c, i32* %r9.global-to-local, align 4
  %v1_10006410 = add i32 %v4_1000640c, 1
  store i32 %v1_10006410, i32* %r0.global-to-local, align 4
  %v1_10006414 = icmp slt i32 %v1_10006410, 255
  %v2_10006414 = icmp sgt i32 %v1_10006410, 255
  %v3_10006414 = icmp eq i32 %v1_10006410, 255
  store i1 %v1_10006414, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006414, i1* %cr7_eq.global-to-local, align 1
  %v5_10006418 = sext i32 %v1_10006410 to i64
  store i64 %v5_10006418, i64* %stack_var_-1920, align 8
  br i1 %v2_10006414, label %dec_label_pc_10005f24, label %dec_label_pc_10006420

dec_label_pc_10006420:                            ; preds = %dec_label_pc_1000640c, %dec_label_pc_100063d8
  %v0_10006424 = phi i32 [ %v1_10006410, %dec_label_pc_1000640c ], [ 0, %dec_label_pc_100063d8 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006424 = mul i32 %v0_10006424, 256
  store i32 %v1_10006424, i32* %r11.global-to-local, align 4
  %v3_10006428 = load i32, i32* @global_var_1001a9b4.72, align 4
  store i32 %v3_10006428, i32* %r9.global-to-local, align 4
  %v2_10006430 = mul i32 %v0_10006424, 288
  store i32 %v2_10006430, i32* %r0.global-to-local, align 4
  %v2_10006434 = add i32 %v3_10006428, %v2_10006430
  store i32 %v2_10006434, i32* @r28, align 4
  %v1_10006438 = add i32 %v2_10006434, 4
  %v2_10006438 = inttoptr i32 %v1_10006438 to i32*
  %v3_10006438 = load i32, i32* %v2_10006438, align 4
  store i32 %v3_10006438, i32* %r3.global-to-local, align 4
  %v1_1000643c = icmp slt i32 %v3_10006438, -1
  %v3_1000643c = icmp eq i32 %v3_10006438, -1
  store i1 %v1_1000643c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000643c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000643c, label %dec_label_pc_1000640c, label %dec_label_pc_10006444

dec_label_pc_10006444:                            ; preds = %dec_label_pc_10006420
  store i32 %v2_10006644, i32* %r11.global-to-local, align 4
  %v1_10006448 = call i32 @__asm_rlwinm(i32 %v3_10006438, i32 29, i32 3, i32 29)
  %v1_1000644c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000644c = add i32 %v1_1000644c, %v1_10006448
  store i32 %v2_1000644c, i32* %r9.global-to-local, align 4
  %v0_10006450 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006450 = urem i32 %v0_10006450, 32
  store i32 %v1_10006450, i32* %r11.global-to-local, align 4
  %v1_10006454 = add i32 %v2_1000644c, 184
  %v2_10006454 = inttoptr i32 %v1_10006454 to i32*
  %v3_10006454 = load i32, i32* %v2_10006454, align 4
  %v3_10006458 = lshr i32 %v3_10006454, %v1_10006450
  store i32 %v3_10006458, i32* %r0.global-to-local, align 4
  %v1_1000645c = urem i32 %v3_10006458, 2
  store i32 %v1_1000645c, i32* %r9.global-to-local, align 4
  %v3_1000645c = icmp eq i32 %v1_1000645c, 0
  br i1 %v3_1000645c, label %dec_label_pc_10006464, label %dec_label_pc_100070e0

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006444, %dec_label_pc_10007178
  %v0_10006468 = phi i32 [ %v0_10006450, %dec_label_pc_10006444 ], [ %v0_10006468.pre, %dec_label_pc_10007178 ]
  store i32 %v2_10006644, i32* %r0.global-to-local, align 4
  %v1_10006468 = call i32 @__asm_rlwinm(i32 %v0_10006468, i32 29, i32 3, i32 29)
  %v1_1000646c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000646c = add i32 %v1_1000646c, %v1_10006468
  store i32 %v2_1000646c, i32* %r9.global-to-local, align 4
  %v0_10006470 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006470 = urem i32 %v0_10006470, 32
  store i32 %v1_10006470, i32* %r11.global-to-local, align 4
  %v1_10006474 = add i32 %v2_1000646c, 56
  %v2_10006474 = inttoptr i32 %v1_10006474 to i32*
  %v3_10006474 = load i32, i32* %v2_10006474, align 4
  %v3_10006478 = lshr i32 %v3_10006474, %v1_10006470
  store i32 %v3_10006478, i32* %r0.global-to-local, align 4
  %v1_1000647c = urem i32 %v3_10006478, 2
  store i32 %v1_1000647c, i32* %r9.global-to-local, align 4
  %v3_1000647c = icmp eq i32 %v1_1000647c, 0
  br i1 %v3_1000647c, label %dec_label_pc_1000640c, label %dec_label_pc_10006484.preheader

dec_label_pc_10006484.preheader:                  ; preds = %dec_label_pc_10006464
  %v0_10006484.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006484

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006484.preheader, %dec_label_pc_100064f0
  %v0_10006fc8 = phi i32 [ %v0_10006484.pre, %dec_label_pc_10006484.preheader ], [ %v0_10006508, %dec_label_pc_100064f0 ]
  %v1_10006484 = add i32 %v0_10006fc8, 12
  %v2_10006484 = inttoptr i32 %v1_10006484 to i32*
  %v3_10006484 = load i32, i32* %v2_10006484, align 4
  store i32 %v3_10006484, i32* %r10.global-to-local, align 4
  %v1_10006488 = icmp slt i32 %v3_10006484, 0
  %v3_10006488 = icmp eq i32 %v3_10006484, 0
  store i1 %v1_10006488, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006488, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006488, label %dec_label_pc_1000640c, label %dec_label_pc_10006490

dec_label_pc_10006490:                            ; preds = %dec_label_pc_10006484
  %v1_10006490 = add i32 %v0_10006fc8, 24
  %v2_10006490 = inttoptr i32 %v1_10006490 to i32*
  %v3_10006490 = load i32, i32* %v2_10006490, align 4
  store i32 %v3_10006490, i32* %r0.global-to-local, align 4
  %v1_10006494 = add i32 %v0_10006fc8, 28
  store i32 %v1_10006494, i32* @r26, align 4
  %v1_10006498 = icmp slt i32 %v3_10006490, 256
  %v3_10006498 = icmp eq i32 %v3_10006490, 256
  store i1 %v1_10006498, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006498, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006498, label %dec_label_pc_10006fc0, label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_10006490, %dec_label_pc_10006fc0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_100064a8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100064a8 = inttoptr i32 %v1_100064a8 to i32*
  store i32 0, i32* %v2_100064a8, align 4
  %v0_100064ac = load i32, i32* @r28, align 4
  %v1_100064ac = add i32 %v0_100064ac, 24
  %v2_100064ac = inttoptr i32 %v1_100064ac to i32*
  %v3_100064ac = load i32, i32* %v2_100064ac, align 4
  store i32 %v3_100064ac, i32* %r5.global-to-local, align 4
  %v1_100064b0 = add i32 %v0_100064ac, 4
  %v2_100064b0 = inttoptr i32 %v1_100064b0 to i32*
  %v3_100064b0 = load i32, i32* %v2_100064b0, align 4
  store i32 %v3_100064b0, i32* %r3.global-to-local, align 4
  %v0_100064b4 = load i32, i32* @r26, align 4
  %v2_100064b4 = add i32 %v0_100064b4, %v3_100064ac
  store i32 %v2_100064b4, i32* @r29, align 4
  %v1_100064b8 = sub i32 256, %v3_100064ac
  store i32 %v1_100064b8, i32* %r5.global-to-local, align 4
  store i32 268461252, i32* @lr, align 4
  %v4_100064c0 = call i32 @function_10008540(i32 %v3_100064b0, i32 %v2_100064b4, i32 %v1_100064b8, i32 16384)
  store i32 %v4_100064c0, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_100064c0, 1
  br i1 %tmp117, label %dec_label_pc_10006f6c, label %dec_label_pc_100064cc

dec_label_pc_100064cc:                            ; preds = %dec_label_pc_100064a0
  store i32 %v4_100064c0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100064d8

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_100064e8, %dec_label_pc_100064cc
  %v0_100064ec43 = phi i32 [ %v1_100064ec, %dec_label_pc_100064e8 ], [ %v4_100064c0, %dec_label_pc_100064cc ]
  %v1_100064e4 = phi i32 [ %v1_100064e8, %dec_label_pc_100064e8 ], [ 0, %dec_label_pc_100064cc ]
  %v1_100064d8 = load i32, i32* @r29, align 4
  %v2_100064d8 = add i32 %v1_100064d8, %v1_100064e4
  %v3_100064d8 = inttoptr i32 %v2_100064d8 to i8*
  %v4_100064d8 = load i8, i8* %v3_100064d8, align 1
  %v5_100064d8 = zext i8 %v4_100064d8 to i32
  store i32 %v5_100064d8, i32* %r0.global-to-local, align 4
  %v3_100064dc = icmp eq i8 %v4_100064d8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100064dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100064dc, label %dec_label_pc_100064e4, label %dec_label_pc_100064e8

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064d8
  %v0_100064e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100064e4 = trunc i32 %v0_100064e4 to i8
  store i8 %v3_100064e4, i8* %v3_100064d8, align 1
  %v0_100064e8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100064ec.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100064e8

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_100064d8, %dec_label_pc_100064e4
  %v0_100064ec = phi i32 [ %v0_100064ec43, %dec_label_pc_100064d8 ], [ %v0_100064ec.pre, %dec_label_pc_100064e4 ]
  %v0_100064e8 = phi i32 [ %v1_100064e4, %dec_label_pc_100064d8 ], [ %v0_100064e8.pre, %dec_label_pc_100064e4 ]
  %v1_100064e8 = add i32 %v0_100064e8, 1
  store i32 %v1_100064e8, i32* %r9.global-to-local, align 4
  %v1_100064ec = add i32 %v0_100064ec, -1
  store i32 %v1_100064ec, i32* %ctr.global-to-local, align 4
  %v2_100064ec = icmp eq i32 %v1_100064ec, 0
  br i1 %v2_100064ec, label %dec_label_pc_100064f0, label %dec_label_pc_100064d8

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e8, %dec_label_pc_10006f70
  %v0_100064f0 = load i32, i32* @r28, align 4
  %v1_100064f0 = add i32 %v0_100064f0, 24
  %v2_100064f0 = inttoptr i32 %v1_100064f0 to i32*
  %v3_100064f0 = load i32, i32* %v2_100064f0, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100064f8 = load i32, i32* @global_var_1001a9b0.66, align 4
  store i32 %v3_100064f8, i32* %r0.global-to-local, align 4
  %v2_100064fc = add i32 %v3_100064f0, %v4_100064c0
  store i32 %v2_100064fc, i32* %r5.global-to-local, align 4
  store i32 %v2_100064fc, i32* %v2_100064f0, align 4
  %v0_10006504 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006504 = load i32, i32* @r28, align 4
  %v2_10006504 = add i32 %v1_10006504, 8
  %v3_10006504 = inttoptr i32 %v2_10006504 to i32*
  store i32 %v0_10006504, i32* %v3_10006504, align 4
  %v0_10006508 = load i32, i32* @r28, align 4
  %v1_10006508 = add i32 %v0_10006508, 12
  %v2_10006508 = inttoptr i32 %v1_10006508 to i32*
  %v3_10006508 = load i32, i32* %v2_10006508, align 4
  store i32 %v3_10006508, i32* %r10.global-to-local, align 4
  %v1_1000650c = icmp ult i32 %v3_10006508, 10
  %v2_1000650c = icmp ugt i32 %v3_10006508, 10
  %v3_1000650c = icmp eq i32 %v3_10006508, 10
  store i1 %v1_1000650c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000650c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000650c, label %dec_label_pc_10006484, label %dec_label_pc_10006514

dec_label_pc_10006514:                            ; preds = %dec_label_pc_100064f0
  store i32 ptrtoint (i32* @global_var_1000a3a0.256 to i32), i32* %r11.global-to-local, align 4
  %v1_10006518 = mul i32 %v3_10006508, 4
  store i32 %v1_10006518, i32* %r0.global-to-local, align 4
  %v2_1000651c = add i32 %v1_10006518, ptrtoint (i32* @global_var_1000a3a0.256 to i32)
  %v3_1000651c = inttoptr i32 %v2_1000651c to i32*
  %v4_1000651c = load i32, i32* %v3_1000651c, align 4
  %v2_10006520 = add i32 %v4_1000651c, ptrtoint (i32* @global_var_1000a3a0.256 to i32)
  store i32 %v2_10006520, i32* %r9.global-to-local, align 4
  store i32 %v2_10006520, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10006520)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000653c = load i32, i32* @r29, align 4
  store i32 %v0_1000653c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1916, align 4
  store i32 268461384, i32* @lr, align 4
  %v4_10006544 = call i32 @function_100085b8(i32 %v0_1000653c, i32 %v2_100070f4, i32 1, i32 16384)
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006554 = load i32, i32* @r29, align 4
  store i32 %v0_10006554, i32* %r3.global-to-local, align 4
  store i32 268461404, i32* @lr, align 4
  %v4_10006558 = call i32 @function_100085b8(i32 %v0_10006554, i32 %v2_100070f0, i32 4, i32 16384)
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006568 = load i32, i32* @r29, align 4
  store i32 %v0_10006568, i32* %r3.global-to-local, align 4
  store i32 268461424, i32* @lr, align 4
  %v4_1000656c = call i32 @function_100085b8(i32 %v0_10006568, i32 %v2_10006644, i32 2, i32 16384)
  %v0_10006570 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006570 = add i32 %v0_10006570, 12
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000657c = load i32, i32* @r29, align 4
  store i32 %v0_1000657c, i32* %r3.global-to-local, align 4
  store i32 268461444, i32* @lr, align 4
  %v4_10006580 = call i32 @function_100085b8(i32 %v0_1000657c, i32 %v1_10006570, i32 1, i32 16384)
  store i32 %v4_10006580, i32* %r3.global-to-local, align 4
  %v0_10006584 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006584 = inttoptr i32 %v0_10006584 to i32*
  %v2_10006584 = load i32, i32* %v1_10006584, align 4
  %v1_10006588 = add i32 %v0_10006584, 12
  %v2_10006588 = inttoptr i32 %v1_10006588 to i8*
  %v3_10006588 = load i8, i8* %v2_10006588, align 1
  %v4_10006588 = zext i8 %v3_10006588 to i32
  store i32 %v4_10006588, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10006590 = load i32, i32* @r29, align 4
  store i32 %v0_10006590, i32* %r3.global-to-local, align 4
  store i32 268461464, i32* @lr, align 4
  %v4_10006594 = call i32 @function_100085b8(i32 %v0_10006590, i32 %v2_10006584, i32 %v4_10006588, i32 16384)
  %v0_10006598 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006598 = add i32 %v0_10006598, 13
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100065a4 = load i32, i32* @r29, align 4
  store i32 %v0_100065a4, i32* %r3.global-to-local, align 4
  store i32 268461484, i32* @lr, align 4
  %v4_100065a8 = call i32 @function_100085b8(i32 %v0_100065a4, i32 %v1_10006598, i32 1, i32 16384)
  store i32 %v4_100065a8, i32* %r3.global-to-local, align 4
  %v0_100065ac = load i32, i32* %r25.global-to-local, align 4
  %v1_100065ac = add i32 %v0_100065ac, 13
  %v2_100065ac = inttoptr i32 %v1_100065ac to i8*
  %v3_100065ac = load i8, i8* %v2_100065ac, align 1
  %v4_100065ac = zext i8 %v3_100065ac to i32
  store i32 %v4_100065ac, i32* %r5.global-to-local, align 4
  %v1_100065b0 = add i32 %v0_100065ac, 4
  %v2_100065b0 = inttoptr i32 %v1_100065b0 to i32*
  %v3_100065b0 = load i32, i32* %v2_100065b0, align 4
  %v0_100065b4 = load i32, i32* @r29, align 4
  store i32 %v0_100065b4, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268461504, i32* @lr, align 4
  %v4_100065bc = call i32 @function_100085b8(i32 %v0_100065b4, i32 %v3_100065b0, i32 %v4_100065ac, i32 16384)
  %v0_100065c0 = load i32, i32* @r29, align 4
  store i32 %v0_100065c0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100065c8.263 to i32), i32* @lr, align 4
  %v0_100065c4 = call i32 @function_10007cb0()
  store i32 %v0_100065c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100065c8

dec_label_pc_100065c8:                            ; preds = %dec_label_pc_10004eac, %dec_label_pc_10007250, %dec_label_pc_10006514
  %stack_var_-88.5 = phi i16 [ %tmp65, %dec_label_pc_10004eac ], [ %stack_var_-88.4, %dec_label_pc_10006514 ], [ %tmp65, %dec_label_pc_10007250 ]
  %v0_100065cc = call i32 @function_10008f18()
  store i32 %v0_100065cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100065d0

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_10005fb8, %dec_label_pc_100065c8
  %v0_1000605c18 = phi i32 [ %v0_100065cc, %dec_label_pc_100065c8 ], [ %v1_10005f80, %dec_label_pc_10005fb8 ]
  %stack_var_-88.6 = phi i16 [ %stack_var_-88.5, %dec_label_pc_100065c8 ], [ %stack_var_-88.2.ph, %dec_label_pc_10005fb8 ]
  %v0_100065d0 = load i32, i32* @r9, align 4
  %v1_100065d0 = icmp slt i32 %v0_100065d0, 168
  %v3_100065d0 = icmp eq i32 %v0_100065d0, 168
  store i1 %v1_100065d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065d0, label %dec_label_pc_10005f6c.preheader, label %dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge

dec_label_pc_100065d0.dec_label_pc_10006050_crit_edge: ; preds = %dec_label_pc_100065d0
  %v0_10006050.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006050

dec_label_pc_100065dc:                            ; preds = %dec_label_pc_10005fc0
  %v0_100065dc = load i32, i32* @r9, align 4
  %v1_100065dc = icmp ult i32 %v0_100065dc, 15
  %v3_100065dc = icmp eq i32 %v0_100065dc, 15
  store i1 %v1_100065dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065dc, i1* %cr7_eq.global-to-local, align 1
  %tmp118 = icmp ult i32 %v0_100065dc, 16
  br i1 %tmp118, label %dec_label_pc_10006050, label %dec_label_pc_100065e4

dec_label_pc_100065e4:                            ; preds = %dec_label_pc_100065dc
  %v1_100065e4 = icmp ult i32 %v0_100065dc, 31
  %v3_100065e4 = icmp eq i32 %v0_100065dc, 31
  store i1 %v1_100065e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065e4, i1* %cr7_eq.global-to-local, align 1
  %tmp119 = icmp ult i32 %v0_100065dc, 32
  br i1 %tmp119, label %dec_label_pc_10005f6c, label %dec_label_pc_10006050

dec_label_pc_100065f0:                            ; preds = %dec_label_pc_10005fc8
  %v0_100065f0 = load i32, i32* @r9, align 4
  %v1_100065f0 = icmp ult i32 %v0_100065f0, 63
  %v3_100065f0 = icmp eq i32 %v0_100065f0, 63
  store i1 %v1_100065f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065f0, i1* %cr7_eq.global-to-local, align 1
  %tmp120 = icmp ult i32 %v0_100065f0, 64
  br i1 %tmp120, label %dec_label_pc_10006050, label %dec_label_pc_100065f8

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_100065f0
  %v1_100065f8 = icmp ult i32 %v0_100065f0, 126
  %v3_100065f8 = icmp eq i32 %v0_100065f0, 126
  store i1 %v1_100065f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065f8, i1* %cr7_eq.global-to-local, align 1
  %tmp121 = icmp ult i32 %v0_100065f0, 127
  br i1 %tmp121, label %dec_label_pc_10005f6c, label %dec_label_pc_10006050

dec_label_pc_10006604:                            ; preds = %dec_label_pc_10005fd0
  %v0_10006604 = load i32, i32* @r9, align 4
  %v1_10006604 = icmp slt i32 %v0_10006604, 255
  %v3_10006604 = icmp eq i32 %v0_10006604, 255
  store i1 %v1_10006604, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006604, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006604, label %dec_label_pc_10005f6c, label %dec_label_pc_10006050

dec_label_pc_10006610:                            ; preds = %dec_label_pc_10005fd8
  %v0_10006610 = load i32, i32* @r9, align 4
  %v1_10006610 = icmp ult i32 %v0_10006610, 17
  %v3_10006610 = icmp eq i32 %v0_10006610, 17
  store i1 %v1_10006610, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006610, i1* %cr7_eq.global-to-local, align 1
  %tmp122 = icmp ult i32 %v0_10006610, 18
  br i1 %tmp122, label %dec_label_pc_10006050, label %dec_label_pc_10006618

dec_label_pc_10006618:                            ; preds = %dec_label_pc_10006610
  %v1_10006618 = icmp eq i32 %v0_10006610, 18
  %v3_10006618 = icmp eq i32 %v0_10006610, 19
  store i1 %v1_10006618, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006618, i1* %cr7_eq.global-to-local, align 1
  %tmp123 = icmp ult i32 %v0_10006610, 20
  br i1 %tmp123, label %dec_label_pc_10005f6c, label %dec_label_pc_10006050

dec_label_pc_10006630:                            ; preds = %dec_label_pc_10006328
  %v1_10006630 = icmp slt i32 %v3_10006344, 0
  store i1 %v1_10006630, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006348, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006348, label %dec_label_pc_10006314, label %dec_label_pc_10006638

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006630
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006350

dec_label_pc_10006640:                            ; preds = %dec_label_pc_100062d8
  store i32 %v2_10006644, i32* %r0.global-to-local, align 4
  %v1_10006648 = call i32 @__asm_rlwinm(i32 %v3_10006640, i32 29, i32 3, i32 29)
  %v0_1000664c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000664c = icmp slt i32 %v0_1000664c, %v3_10006640
  %v4_1000664c = icmp eq i32 %v0_1000664c, %v3_10006640
  store i1 %v2_1000664c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000664c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006650 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006650 = add i32 %v1_10006650, %v1_10006648
  store i32 %v2_10006650, i32* %r11.global-to-local, align 4
  %v1_10006654 = urem i32 %v3_10006640, 32
  store i32 %v1_10006654, i32* %r0.global-to-local, align 4
  %v1_10006658 = add i32 %v2_10006650, 184
  %v2_10006658 = inttoptr i32 %v1_10006658 to i32*
  %v3_10006658 = load i32, i32* %v2_10006658, align 4
  %v0_1000665c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000665c = shl i32 %v0_1000665c, %v1_10006654
  store i32 %v3_1000665c, i32* %r0.global-to-local, align 4
  %v2_10006660 = or i32 %v3_1000665c, %v3_10006658
  store i32 %v2_10006660, i32* %r9.global-to-local, align 4
  store i32 %v2_10006660, i32* %v2_10006658, align 4
  br i1 %v2_1000664c, label %dec_label_pc_1000666c, label %dec_label_pc_10006314

dec_label_pc_1000666c:                            ; preds = %dec_label_pc_10006640
  store i32 %v3_10006640, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006314

dec_label_pc_10006674:                            ; preds = %dec_label_pc_10006384, %dec_label_pc_10006368
  %v0_10006674 = load i32, i32* %r25.global-to-local, align 4
  %v1_10006674 = load i32, i32* @r29, align 4
  %v2_10006674 = add i32 %v1_10006674, 12
  %v3_10006674 = inttoptr i32 %v2_10006674 to i32*
  store i32 %v0_10006674, i32* %v3_10006674, align 4
  %v0_10006678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10006678 = trunc i32 %v0_10006678 to i8
  %v2_10006678 = load i32, i32* @r29, align 4
  %v3_10006678 = add i32 %v2_10006678, 284
  %v4_10006678 = inttoptr i32 %v3_10006678 to i8*
  store i8 %v1_10006678, i8* %v4_10006678, align 1
  br label %dec_label_pc_10006314

dec_label_pc_10006f6c:                            ; preds = %dec_label_pc_100064a0
  %v3_100064c4 = icmp eq i32 %v4_100064c0, 0
  br i1 %v3_100064c4, label %dec_label_pc_10007234, label %dec_label_pc_10006f70

dec_label_pc_10006f70:                            ; preds = %dec_label_pc_10006f6c
  %v1_10006f70 = icmp slt i32 %v4_100064c0, -1
  %v3_10006f70 = icmp eq i32 %v4_100064c0, -1
  store i1 %v1_10006f70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f70, label %dec_label_pc_10006f78, label %dec_label_pc_100064f0

dec_label_pc_10006f78:                            ; preds = %dec_label_pc_10006f70
  %v0_10006f78 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006f78 = inttoptr i32 %v0_10006f78 to i32*
  %v2_10006f78 = load i32, i32* %v1_10006f78, align 4
  store i32 %v2_10006f78, i32* %r0.global-to-local, align 4
  %v1_10006f7c = icmp slt i32 %v2_10006f78, 11
  %v3_10006f7c = icmp eq i32 %v2_10006f78, 11
  store i1 %v1_10006f7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f7c, label %dec_label_pc_1000640c, label %dec_label_pc_10006f84

dec_label_pc_10006f84:                            ; preds = %dec_label_pc_10006f78, %dec_label_pc_10007234
  %v0_10006f84 = load i32, i32* @r28, align 4
  %v1_10006f84 = add i32 %v0_10006f84, 4
  %v2_10006f84 = inttoptr i32 %v1_10006f84 to i32*
  %v3_10006f84 = load i32, i32* %v2_10006f84, align 4
  store i32 %v3_10006f84, i32* %r3.global-to-local, align 4
  store i32 268464012, i32* @lr, align 4
  %v0_10006f88 = call i32 @function_10007cb0()
  store i32 %v0_10006f88, i32* %r3.global-to-local, align 4
  %v0_10006f8c = load i32, i32* @r28, align 4
  %v1_10006f8c = add i32 %v0_10006f8c, 284
  %v2_10006f8c = inttoptr i32 %v1_10006f8c to i8*
  %v3_10006f8c = load i8, i8* %v2_10006f8c, align 1
  %v4_10006f8c = zext i8 %v3_10006f8c to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10006f94 = add nuw nsw i32 %v4_10006f8c, 1
  store i32 %v1_10006f94, i32* %r9.global-to-local, align 4
  %v2_10006f98 = add i32 %v0_10006f8c, 4
  %v3_10006f98 = inttoptr i32 %v2_10006f98 to i32*
  store i32 -1, i32* %v3_10006f98, align 4
  %v0_10006f9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10006f9c = urem i32 %v0_10006f9c, 256
  store i32 %v1_10006f9c, i32* %r9.global-to-local, align 4
  %v1_10006fa0 = icmp ult i32 %v1_10006f9c, 9
  %v3_10006fa0 = icmp eq i32 %v1_10006f9c, 9
  store i1 %v1_10006fa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fa0, i1* %cr7_eq.global-to-local, align 1
  %v1_10006fa4 = trunc i32 %v0_10006f9c to i8
  %v2_10006fa4 = load i32, i32* @r28, align 4
  %v3_10006fa4 = add i32 %v2_10006fa4, 284
  %v4_10006fa4 = inttoptr i32 %v3_10006fa4 to i8*
  store i8 %v1_10006fa4, i8* %v4_10006fa4, align 1
  %v0_10006fa8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10006fa8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10006fa8 = or i1 %v0_10006fa8, %v1_10006fa8
  br i1 %v2_10006fa8, label %dec_label_pc_10007288, label %dec_label_pc_10006fac

dec_label_pc_10006fac:                            ; preds = %dec_label_pc_10006f84
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10006fb4 = load i32, i32* @r28, align 4
  %v2_10006fb4 = add i32 %v1_10006fb4, 12
  %v3_10006fb4 = inttoptr i32 %v2_10006fb4 to i32*
  store i32 0, i32* %v3_10006fb4, align 4
  %v0_10006fb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006fb8 = trunc i32 %v0_10006fb8 to i8
  %v2_10006fb8 = load i32, i32* @r28, align 4
  %v3_10006fb8 = add i32 %v2_10006fb8, 284
  %v4_10006fb8 = inttoptr i32 %v3_10006fb8 to i8*
  store i8 %v1_10006fb8, i8* %v4_10006fb8, align 1
  br label %dec_label_pc_1000640c

dec_label_pc_10006fc0:                            ; preds = %dec_label_pc_10006490
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006494, i32* %r3.global-to-local, align 4
  %v1_10006fc8 = add i32 %v0_10006fc8, 92
  store i32 268464080, i32* @lr, align 4
  %v3_10006fcc = call i32 @function_1000810c(i32 %v1_10006494, i32 %v1_10006fc8, i32 192)
  store i32 %v3_10006fcc, i32* %r3.global-to-local, align 4
  %v0_10006fd0 = load i32, i32* @r28, align 4
  %v1_10006fd0 = add i32 %v0_10006fd0, 24
  %v2_10006fd0 = inttoptr i32 %v1_10006fd0 to i32*
  %v3_10006fd0 = load i32, i32* %v2_10006fd0, align 4
  store i32 %v3_10006fd0, i32* %r9.global-to-local, align 4
  %v1_10006fd4 = add i32 %v3_10006fd0, -64
  store i32 %v1_10006fd4, i32* %r5.global-to-local, align 4
  store i32 %v1_10006fd4, i32* %v2_10006fd0, align 4
  br label %dec_label_pc_100064a0

dec_label_pc_100070e0:                            ; preds = %dec_label_pc_10006444
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_100070f0, i32* %r6.global-to-local, align 4
  store i32 %v2_100070f4, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1916, align 4
  store i32 0, i32* %stack_var_-1912, align 4
  store i32 268464388, i32* @lr, align 4
  %v5_10007100 = call i32 @function_100084d4(i32 1, i32 4, i32 %v2_100070f0, i32 %v2_100070f4, i32 %v1_1000645c)
  store i32 %v5_10007100, i32* %r3.global-to-local, align 4
  %v3_10007104 = load i32, i32* %stack_var_-1912, align 4
  store i32 %v3_10007104, i32* %r0.global-to-local, align 4
  %v2_10007108 = or i32 %v3_10007104, %v5_10007100
  store i32 %v2_10007108, i32* %r9.global-to-local, align 4
  %v5_10007108 = icmp eq i32 %v2_10007108, 0
  br i1 %v5_10007108, label %dec_label_pc_10007110, label %dec_label_pc_1000718c

dec_label_pc_10007110:                            ; preds = %dec_label_pc_100070e0
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007114 = load i32, i32* @r28, align 4
  %v2_10007114 = add i32 %v1_10007114, 12
  %v3_10007114 = inttoptr i32 %v2_10007114 to i32*
  store i32 2, i32* %v3_10007114, align 4
  %v0_10007118 = call i32 @function_100048a8()
  %v3_10007120 = load i16, i16* @global_var_1001a9ac.69, align 2
  %v4_10007120 = zext i16 %v3_10007120 to i32
  store i32 %v4_10007120, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007128 = load i32, i32* @global_var_1001a9a4.67, align 4
  store i32 %v3_10007128, i32* %r10.global-to-local, align 4
  %v1_10007130 = icmp slt i32 %v3_10007128, 0
  %v3_10007130 = icmp eq i32 %v3_10007128, 0
  store i1 %v1_10007130, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007130, i1* %cr7_eq.global-to-local, align 1
  %v2_1000712c = urem i32 %v0_10007118, %v4_10007120
  %v2_10007134 = sub i32 %v0_10007118, %v2_1000712c
  store i32 %v2_10007134, i32* %r0.global-to-local, align 4
  store i32 %v2_1000712c, i32* %r3.global-to-local, align 4
  %tmp125 = icmp slt i32 %v3_10007128, 1
  br i1 %tmp125, label %dec_label_pc_1000722c, label %dec_label_pc_10007144

dec_label_pc_10007144:                            ; preds = %dec_label_pc_10007110
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007128, i32* %ctr.global-to-local, align 4
  %v3_1000714c = load i32, i32* @global_var_1001a9a8.68, align 4
  store i32 %v3_1000714c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000715c

dec_label_pc_10007154:                            ; preds = %dec_label_pc_1000716c, %dec_label_pc_1000715c
  %v4_1000717010 = phi i1 [ %v4_10007170, %dec_label_pc_1000716c ], [ %v4_10007164, %dec_label_pc_1000715c ]
  %v2_100071708 = phi i1 [ %v2_10007170, %dec_label_pc_1000716c ], [ %v2_10007164, %dec_label_pc_1000715c ]
  %v1_10007154 = add i32 %v0_10007154, 16
  store i32 %v1_10007154, i32* %r0.global-to-local, align 4
  %v1_10007158 = add i32 %v0_10007158, -1
  store i32 %v1_10007158, i32* %ctr.global-to-local, align 4
  %v2_10007158 = icmp eq i32 %v1_10007158, 0
  br i1 %v2_10007158, label %dec_label_pc_1000722c.loopexit, label %dec_label_pc_1000715c

dec_label_pc_1000715c:                            ; preds = %dec_label_pc_10007154, %dec_label_pc_10007144
  %v0_10007158 = phi i32 [ %v1_10007158, %dec_label_pc_10007154 ], [ %v3_10007128, %dec_label_pc_10007144 ]
  %v0_10007154 = phi i32 [ %v1_10007154, %dec_label_pc_10007154 ], [ %v3_1000714c, %dec_label_pc_10007144 ]
  store i32 %v0_10007154, i32* %r9.global-to-local, align 4
  %v1_10007160 = add i32 %v0_10007154, 8
  %v2_10007160 = inttoptr i32 %v1_10007160 to i16*
  %v3_10007160 = load i16, i16* %v2_10007160, align 2
  %v4_10007160 = zext i16 %v3_10007160 to i32
  store i32 %v4_10007160, i32* %r0.global-to-local, align 4
  %v2_10007164 = icmp ult i32 %v4_10007160, %v2_1000712c
  %v3_10007164 = icmp ugt i32 %v4_10007160, %v2_1000712c
  %v4_10007164 = icmp eq i32 %v4_10007160, %v2_1000712c
  br i1 %v3_10007164, label %dec_label_pc_10007154, label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %dec_label_pc_1000715c
  %v1_1000716c = add i32 %v0_10007154, 10
  %v2_1000716c = inttoptr i32 %v1_1000716c to i16*
  %v3_1000716c = load i16, i16* %v2_1000716c, align 2
  %v4_1000716c = zext i16 %v3_1000716c to i32
  store i32 %v4_1000716c, i32* %r0.global-to-local, align 4
  %v2_10007170 = icmp ult i32 %v4_1000716c, %v2_1000712c
  %v3_10007170 = icmp ugt i32 %v4_1000716c, %v2_1000712c
  %v4_10007170 = icmp eq i32 %v4_1000716c, %v2_1000712c
  br i1 %v3_10007170, label %dec_label_pc_10007178.loopexit, label %dec_label_pc_10007154

dec_label_pc_10007178.loopexit:                   ; preds = %dec_label_pc_1000716c
  store i1 %v2_10007170, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007170, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007178

dec_label_pc_10007178:                            ; preds = %dec_label_pc_10007178.loopexit, %dec_label_pc_1000722c
  %v0_10007180 = phi i32 [ %v0_10007154, %dec_label_pc_10007178.loopexit ], [ 0, %dec_label_pc_1000722c ]
  %v0_10007178 = load i32, i32* @r28, align 4
  %v1_10007178 = add i32 %v0_10007178, 4
  %v2_10007178 = inttoptr i32 %v1_10007178 to i32*
  %v3_10007178 = load i32, i32* %v2_10007178, align 4
  store i32 %v3_10007178, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007180 = inttoptr i32 %v0_10007178 to i32*
  store i32 %v0_10007180, i32* %v2_10007180, align 4
  %v0_10007184 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007184 = load i32, i32* @r28, align 4
  %v2_10007184 = add i32 %v1_10007184, 24
  %v3_10007184 = inttoptr i32 %v2_10007184 to i32*
  store i32 %v0_10007184, i32* %v3_10007184, align 4
  %v0_10006468.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006464

dec_label_pc_1000718c:                            ; preds = %dec_label_pc_100070e0
  %v0_1000718c = load i32, i32* @r28, align 4
  %v1_1000718c = add i32 %v0_1000718c, 4
  %v2_1000718c = inttoptr i32 %v1_1000718c to i32*
  %v3_1000718c = load i32, i32* %v2_1000718c, align 4
  store i32 %v3_1000718c, i32* %r3.global-to-local, align 4
  store i32 268464532, i32* @lr, align 4
  %v0_10007190 = call i32 @function_10007cb0()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000719c = load i32, i32* @r28, align 4
  %v2_1000719c = add i32 %v1_1000719c, 4
  %v3_1000719c = inttoptr i32 %v2_1000719c to i32*
  store i32 -1, i32* %v3_1000719c, align 4
  %v0_100071a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100071a0 = load i32, i32* @r28, align 4
  %v2_100071a0 = add i32 %v1_100071a0, 12
  %v3_100071a0 = inttoptr i32 %v2_100071a0 to i32*
  store i32 %v0_100071a0, i32* %v3_100071a0, align 4
  %v0_100071a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100071a4 = trunc i32 %v0_100071a4 to i8
  %v2_100071a4 = load i32, i32* @r28, align 4
  %v3_100071a4 = add i32 %v2_100071a4, 284
  %v4_100071a4 = inttoptr i32 %v3_100071a4 to i8*
  store i8 %v1_100071a4, i8* %v4_100071a4, align 1
  br label %dec_label_pc_1000640c

dec_label_pc_1000722c.loopexit:                   ; preds = %dec_label_pc_10007154
  store i1 %v2_100071708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000717010, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000722c

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_1000722c.loopexit, %dec_label_pc_10007110
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007178

dec_label_pc_10007234:                            ; preds = %dec_label_pc_10006f6c
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007238 = load i32, i32* %r24.global-to-local, align 4
  %v2_10007238 = inttoptr i32 %v1_10007238 to i32*
  store i32 104, i32* %v2_10007238, align 4
  br label %dec_label_pc_10006f84

dec_label_pc_10007250:                            ; preds = %dec_label_pc_10004ed8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007254 = load i32, i32* @global_var_1001a9b8.73, align 4
  store i32 %v3_10007254, i32* %r3.global-to-local, align 4
  store i32 268464732, i32* @lr, align 4
  %v0_10007258 = call i32 @function_10007cb0()
  store i32 %v0_10007258, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100065c8

dec_label_pc_10007288:                            ; preds = %dec_label_pc_10006f84
  %v0_10007288 = load i32, i32* @r28, align 4
  store i32 %v0_10007288, i32* @r3, align 4
  store i32 268464784, i32* @lr, align 4
  %v0_1000728c = call i32 @function_10004aa8()
  store i32 %v0_1000728c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000640c

; uselistorder directives
  uselistorder i32 %v4_1000716c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10007160, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10007154, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_10007158, { 0, 2, 1 }
  uselistorder i32 %v2_1000712c, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007128, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10006f9c, { 1, 2, 0 }
  uselistorder i32 %v0_10006f9c, { 1, 0 }
  uselistorder i32 %v2_10006f78, { 1, 0, 2 }
  uselistorder i32 %v1_10006654, { 1, 0 }
  uselistorder i32 %v0_10006610, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10006604, { 1, 2, 0 }
  uselistorder i32 %v0_100065f0, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100065dc, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_100065d0, { 1, 2, 0 }
  uselistorder i16 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_10006518, { 1, 0 }
  uselistorder i32 %v3_10006508, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10006508, { 1, 0 }
  uselistorder i32 %v1_100064ec, { 2, 1, 0 }
  uselistorder i32 %v1_100064e8, { 1, 0 }
  uselistorder i32 %v1_100064e4, { 1, 0 }
  uselistorder i32 %v4_100064c0, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_100064ac, { 1, 0, 2 }
  uselistorder i32 %v1_10006494, { 1, 0, 2 }
  uselistorder i32 %v3_10006490, { 1, 0, 2 }
  uselistorder i32 %v3_10006484, { 1, 0, 2 }
  uselistorder i32 %v0_10006fc8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000647c, { 1, 0 }
  uselistorder i32 %v1_10006470, { 1, 0 }
  uselistorder i32 %v1_1000645c, { 2, 1, 0 }
  uselistorder i32 %v1_10006450, { 1, 0 }
  uselistorder i32 %v0_10006450, { 1, 0 }
  uselistorder i32 %v3_10006438, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006424, { 1, 0 }
  uselistorder i32 %v1_10006410, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_100070f4, { 1, 2, 0 }
  uselistorder i32 %v2_100070f0, { 1, 2, 0 }
  uselistorder i32 %v1_100063a8, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_1000638c, { 1, 2, 0 }
  uselistorder i32 %v1_10006388, { 1, 0 }
  uselistorder i32 %v3_10006370, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000635c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10006360, { 2, 1, 0 }
  uselistorder i1 %v3_10006348, { 2, 0, 1 }
  uselistorder i1 %v1_10006348, { 1, 0, 2 }
  uselistorder i32 %v3_10006344, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_10006340, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_10006318, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_100062f8, { 1, 0 }
  uselistorder i32 %v3_10006640, { 5, 0, 4, 3, 6, 2, 1, 7 }
  uselistorder i32 %v2_10006644, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v1_100062b8, { 1, 0 }
  uselistorder i32 %v1_100062b4, { 1, 0 }
  uselistorder i32 %v1_1000629c, { 1, 0 }
  uselistorder i32 %v1_10006298, { 1, 0 }
  uselistorder i32 %v6_10006278, { 1, 2, 0 }
  uselistorder i32 %v1_1000623c, { 1, 0 }
  uselistorder i32 %v3_10006234, { 1, 0, 2 }
  uselistorder i32 %v1_10006230, { 2, 1, 0 }
  uselistorder i32 %v1_1000622c, { 1, 0 }
  uselistorder i32 %v0_10006234, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006214, { 1, 0, 2 }
  uselistorder i32 %v0_100061f4, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_10006178, { 1, 0, 2 }
  uselistorder i32 %v2_10006160, { 1, 0, 2 }
  uselistorder i32 %v0_10006160, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000616c, { 2, 1, 0 }
  uselistorder i1 %v3_100061a4, { 1, 0 }
  uselistorder i32 %v1_100061d8, { 1, 0 }
  uselistorder i32 %v1_100061d0, { 1, 0 }
  uselistorder i32 %v1_100061c8, { 1, 0 }
  uselistorder i32 %v1_100061e8, { 2, 1, 0 }
  uselistorder i32 %v1_100061c0, { 1, 0 }
  uselistorder i32 %v4_100061b0, { 2, 1, 0 }
  uselistorder i32 %v4_100061ac, { 2, 1, 0 }
  uselistorder i16 %stack_var_-88.4, { 2, 1, 0 }
  uselistorder i32 %v1_10006110, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1000609c, { 1, 0 }
  uselistorder i32 %v4_1000607c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10005fec, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10005f9c, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10005f88, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_10005f70, { 1, 2, 0 }
  uselistorder i32 %v0_10005f6c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10005f58, { 1, 0 }
  uselistorder i32 %v3_10005f28, { 1, 0, 2 }
  uselistorder i16 %stack_var_-88.0, { 1, 0 }
  uselistorder i32 %v0_10005db4, { 1, 0, 2 }
  uselistorder i32 %v0_10005380, { 1, 0, 2 }
  uselistorder i32 %v0_10005370, { 1, 0, 2 }
  uselistorder i32 %v0_10005184, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_10004f70, { 1, 0 }
  uselistorder i16 %v5_10004f34.le, { 0, 2, 1 }
  uselistorder i32 %v1_10004f2c, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10004f28, { 1, 0 }
  uselistorder i32 %v5_10004f1c, { 1, 0, 2 }
  uselistorder i32 %v3_10004ec0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10004ea8, { 1, 0 }
  uselistorder i32 %v0_10004ea4, { 1, 0 }
  uselistorder i32 %v1_10004ea0, { 1, 0 }
  uselistorder i32 %v0_10004e90, { 1, 2, 0 }
  uselistorder i32 %v2_10004e50, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10004dac, { 5, 3, 2, 4, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1920, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1908, { 1, 0 }
  uselistorder i32 %tmp60, { 1, 2, 0 }
  uselistorder i8 %tmp59, { 2, 1, 0 }
  uselistorder i16 %tmp58, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 30, 32, 31, 26, 27, 28, 29, 33, 34, 35, 36, 59, 60, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 68, 65, 66, 67, 69, 70, 71 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r5.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 217, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216 }
  uselistorder i32* %r3.global-to-local, { 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 259, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 39, 40, 26, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 119, 121, 122, 123, 124, 125, 127, 126, 128, 130, 129, 131, 132, 133, 134, 136, 135, 137, 138, 140, 139, 141, 142, 143, 144, 145, 147, 146, 148, 149, 151, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 165, 167, 168, 169, 170, 171, 173, 172, 174, 176, 175, 177, 179, 178, 180, 181, 182, 184, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 199, 201, 202, 203, 204, 206, 205, 207, 209, 208, 210, 212, 211, 213, 214, 216, 215, 217, 218, 219, 220, 221, 223, 222, 224, 226, 225, 227, 228, 229, 230, 231, 232, 233, 235, 234, 237, 236, 238, 239, 240, 241, 243, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 1, 0 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r18.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r14.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 25, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 38, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 35, 36, 37, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 10, 11, 12, 13, 16, 17, 18 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 30, 31, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 31, 32, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i16* @global_var_1001a9ac.69, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_100084d4, { 1, 0 }
  uselistorder i32 18, { 0, 3, 4, 5, 6, 7, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100085b8, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10008540, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10007f30, { 1, 0 }
  uselistorder i32 ()* @function_10004aa8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10008578, { 2, 1, 0 }
  uselistorder i32 1514, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_100085f0, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 16384, { 21, 29, 9, 30, 8, 31, 7, 32, 6, 33, 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 23, 24, 25, 26, 27, 28, 22, 10, 40, 11, 41, 42, 43, 12, 14, 13, 15, 44, 16, 45, 46, 18, 17, 19, 47, 20, 48 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10003d0c, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_10003ca8, { 10, 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 33, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 172, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_10009e7c.109 to i32), { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10004b94, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @r23, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17 }
  uselistorder i32* @r27, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 }
  uselistorder i16* @global_var_1001aa3a.82, { 2, 0, 1 }
  uselistorder i32 40, { 3, 0, 4, 5, 6, 7, 8, 2, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 65536, { 1, 0, 62, 2, 3, 4, 5, 6, 8, 7, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 ()* @function_100048a8, { 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 40, 41, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 5, 4, 3, 2, 1, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10008630, { 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32 2048, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32, i32)* @function_100089c8, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_10008038, { 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0, 3, 6, 5, 4 }
  uselistorder i32 (i32)* @function_100048f8, { 1, 0 }
  uselistorder i32 (i32)* @function_10007988, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_10007cf8, { 3, 1, 2, 0 }
  uselistorder i32* @r16, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10007178, { 1, 0 }
  uselistorder label %dec_label_pc_10006f84, { 1, 0 }
  uselistorder label %dec_label_pc_100065d0, { 1, 0 }
  uselistorder label %dec_label_pc_100065c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100064f0, { 1, 0 }
  uselistorder label %dec_label_pc_100064e8, { 1, 0 }
  uselistorder label %dec_label_pc_100064a0, { 1, 0 }
  uselistorder label %dec_label_pc_10006484, { 1, 0 }
  uselistorder label %dec_label_pc_10006464, { 1, 0 }
  uselistorder label %dec_label_pc_1000640c, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100063d8, { 1, 0 }
  uselistorder label %dec_label_pc_10006350, { 1, 0 }
  uselistorder label %dec_label_pc_10006314, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_10006294.dec_label_pc_10006294_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006284, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10006160, { 1, 0 }
  uselistorder label %dec_label_pc_10006130, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_10006124, { 1, 0 }
  uselistorder label %dec_label_pc_10006050, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_10005f6c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004f28, { 1, 0 }
}

define i32 @function_10007294(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10007294:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007294 = icmp eq i32* %arg2, null
  %v1_1000729c = mul i32 %arg1, 8
  store i32 %v1_1000729c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001aa74.282 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10007294, label %dec_label_pc_100072b4, label %dec_label_pc_100072ac

dec_label_pc_100072ac:                            ; preds = %dec_label_pc_10007294
  %v1_100072ac = add i32 %v1_1000729c, add (i32 ptrtoint (i32* @global_var_1001aa74.282 to i32), i32 4)
  %v2_100072ac = inttoptr i32 %v1_100072ac to i16*
  %v3_100072ac = load i16, i16* %v2_100072ac, align 4
  %v4_100072ac = zext i16 %v3_100072ac to i32
  store i32 %v4_100072ac, i32* %arg2, align 4
  %v0_100072b4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_100072b4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100072b4

dec_label_pc_100072b4:                            ; preds = %dec_label_pc_10007294, %dec_label_pc_100072ac
  %v1_100072b4 = phi i32 [ ptrtoint (i32* @global_var_1001aa74.282 to i32), %dec_label_pc_10007294 ], [ %v1_100072b4.pre, %dec_label_pc_100072ac ]
  %v0_100072b4 = phi i32 [ %v1_1000729c, %dec_label_pc_10007294 ], [ %v0_100072b4.pre, %dec_label_pc_100072ac ]
  %v2_100072b4 = add i32 %v0_100072b4, %v1_100072b4
  %v3_100072b4 = inttoptr i32 %v2_100072b4 to i32*
  %v4_100072b4 = load i32, i32* %v3_100072b4, align 4
  store i32 %v4_100072b4, i32* %r3.global-to-local, align 4
  ret i32 %v4_100072b4

; uselistorder directives
  uselistorder i32 %v1_1000729c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100072b4, { 1, 0 }
}

define i32 @function_100072bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100072bc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100072c0 = mul i32 %arg1, 8
  %v2_100072c8 = add i32 %v1_100072c0, ptrtoint (i32* @global_var_1001aa74.282 to i32)
  %v1_100072d0 = add i32 %v1_100072c0, add (i32 ptrtoint (i32* @global_var_1001aa74.282 to i32), i32 4)
  %v2_100072d0 = inttoptr i32 %v1_100072d0 to i16*
  %v3_100072d0 = load i16, i16* %v2_100072d0, align 4
  %v3_100072d4 = icmp eq i16 %v3_100072d0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072d4, i1* %cr7_eq.global-to-local, align 1
  %v3_100072d8 = load i32, i32* @global_var_1001a97c.283, align 4
  %v1_100072dc = udiv i32 %v3_100072d8, 16777216
  store i32 %v1_100072dc, i32* %r5.global-to-local, align 4
  %v1_100072e0 = urem i32 %v3_100072d8, 256
  store i32 %v1_100072e0, i32* %r6.global-to-local, align 4
  %v1_100072e4 = call i32 @__asm_rlwinm(i32 %v3_100072d8, i32 24, i32 24, i32 31)
  %v1_100072e8 = call i32 @__asm_rlwinm(i32 %v3_100072d8, i32 16, i32 24, i32 31)
  %v0_100072ec = load i32, i32* @lr, align 4
  %v1_100072ec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100072ec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100072ec = or i1 %v1_100072ec, %v2_100072ec
  call void @__pseudo_cond_branch(i1 %v3_100072ec, i32 %v0_100072ec)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100072f4 = inttoptr i32 %v2_100072c8 to i32*
  br label %dec_label_pc_100072f4

dec_label_pc_100072f4:                            ; preds = %dec_label_pc_100072f4, %dec_label_pc_100072bc
  %v1_10007300 = phi i32 [ %v1_10007334, %dec_label_pc_100072f4 ], [ 0, %dec_label_pc_100072bc ]
  %v2_100072f4 = load i32, i32* %v1_100072f4, align 4
  %v2_100072f8 = add i32 %v2_100072f4, %v1_10007300
  %v3_100072f8 = inttoptr i32 %v2_100072f8 to i8*
  %v4_100072f8 = load i8, i8* %v3_100072f8, align 1
  %v5_100072f8 = zext i8 %v4_100072f8 to i32
  %v0_100072fc = load i32, i32* %r6.global-to-local, align 4
  %v2_100072fc = xor i32 %v0_100072fc, %v5_100072f8
  %v3_10007300 = trunc i32 %v2_100072fc to i8
  store i8 %v3_10007300, i8* %v3_100072f8, align 1
  %v2_10007304 = load i32, i32* %v1_100072f4, align 4
  %v0_10007308 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007308 = add i32 %v0_10007308, %v2_10007304
  %v3_10007308 = inttoptr i32 %v2_10007308 to i8*
  %v4_10007308 = load i8, i8* %v3_10007308, align 1
  %v5_10007308 = zext i8 %v4_10007308 to i32
  %v2_1000730c = xor i32 %v5_10007308, %v1_100072e4
  %v3_10007310 = trunc i32 %v2_1000730c to i8
  store i8 %v3_10007310, i8* %v3_10007308, align 1
  %v2_10007314 = load i32, i32* %v1_100072f4, align 4
  %v0_10007318 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007318 = add i32 %v0_10007318, %v2_10007314
  %v3_10007318 = inttoptr i32 %v2_10007318 to i8*
  %v4_10007318 = load i8, i8* %v3_10007318, align 1
  %v5_10007318 = zext i8 %v4_10007318 to i32
  %v2_1000731c = xor i32 %v5_10007318, %v1_100072e8
  %v3_10007320 = trunc i32 %v2_1000731c to i8
  store i8 %v3_10007320, i8* %v3_10007318, align 1
  %v2_10007324 = load i32, i32* %v1_100072f4, align 4
  %v0_10007328 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007328 = add i32 %v0_10007328, %v2_10007324
  %v3_10007328 = inttoptr i32 %v2_10007328 to i8*
  %v4_10007328 = load i8, i8* %v3_10007328, align 1
  %v5_10007328 = zext i8 %v4_10007328 to i32
  %v0_1000732c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000732c = xor i32 %v0_1000732c, %v5_10007328
  %v3_10007330 = trunc i32 %v2_1000732c to i8
  store i8 %v3_10007330, i8* %v3_10007328, align 1
  %v0_10007334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007334 = add i32 %v0_10007334, 1
  store i32 %v1_10007334, i32* %r10.global-to-local, align 4
  %v3_10007338 = load i16, i16* %v2_100072d0, align 4
  %v4_10007338 = zext i16 %v3_10007338 to i32
  %v2_1000733c = icmp slt i32 %v4_10007338, %v1_10007334
  %v3_1000733c = icmp sgt i32 %v4_10007338, %v1_10007334
  %v4_1000733c = icmp eq i32 %v4_10007338, %v1_10007334
  store i1 %v2_1000733c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000733c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000733c, label %dec_label_pc_100072f4, label %dec_label_pc_10007344

dec_label_pc_10007344:                            ; preds = %dec_label_pc_100072f4
  ret i32 %v2_100072c8

; uselistorder directives
  uselistorder i32 %v4_10007338, { 2, 1, 0 }
  uselistorder i32 %v1_10007334, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100072d8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100072c0, { 1, 0 }
}

define i32 @function_10007348(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007348:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_1000734c = mul i32 %arg1, 8
  %v2_10007354 = add i32 %v1_1000734c, ptrtoint (i32* @global_var_1001aa74.282 to i32)
  %v1_1000735c = add i32 %v1_1000734c, add (i32 ptrtoint (i32* @global_var_1001aa74.282 to i32), i32 4)
  %v2_1000735c = inttoptr i32 %v1_1000735c to i16*
  %v3_1000735c = load i16, i16* %v2_1000735c, align 4
  %v3_10007360 = icmp eq i16 %v3_1000735c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007360, i1* %cr7_eq.global-to-local, align 1
  %v3_10007364 = load i32, i32* @global_var_1001a97c.283, align 4
  %v1_10007368 = udiv i32 %v3_10007364, 16777216
  store i32 %v1_10007368, i32* @r5, align 4
  %v1_1000736c = urem i32 %v3_10007364, 256
  store i32 %v1_1000736c, i32* %r6.global-to-local, align 4
  %v1_10007370 = call i32 @__asm_rlwinm(i32 %v3_10007364, i32 24, i32 24, i32 31)
  %v1_10007374 = call i32 @__asm_rlwinm(i32 %v3_10007364, i32 16, i32 24, i32 31)
  %v0_10007378 = load i32, i32* @lr, align 4
  %v1_10007378 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007378 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007378 = or i1 %v1_10007378, %v2_10007378
  call void @__pseudo_cond_branch(i1 %v3_10007378, i32 %v0_10007378)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007380 = inttoptr i32 %v2_10007354 to i32*
  br label %dec_label_pc_10007380

dec_label_pc_10007380:                            ; preds = %dec_label_pc_10007380, %dec_label_pc_10007348
  %v1_1000738c = phi i32 [ %v1_100073c0, %dec_label_pc_10007380 ], [ 0, %dec_label_pc_10007348 ]
  %v2_10007380 = load i32, i32* %v1_10007380, align 4
  %v2_10007384 = add i32 %v2_10007380, %v1_1000738c
  %v3_10007384 = inttoptr i32 %v2_10007384 to i8*
  %v4_10007384 = load i8, i8* %v3_10007384, align 1
  %v5_10007384 = zext i8 %v4_10007384 to i32
  %v0_10007388 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007388 = xor i32 %v0_10007388, %v5_10007384
  %v3_1000738c = trunc i32 %v2_10007388 to i8
  store i8 %v3_1000738c, i8* %v3_10007384, align 1
  %v2_10007390 = load i32, i32* %v1_10007380, align 4
  %v0_10007394 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007394 = add i32 %v0_10007394, %v2_10007390
  %v3_10007394 = inttoptr i32 %v2_10007394 to i8*
  %v4_10007394 = load i8, i8* %v3_10007394, align 1
  %v5_10007394 = zext i8 %v4_10007394 to i32
  %v2_10007398 = xor i32 %v5_10007394, %v1_10007370
  %v3_1000739c = trunc i32 %v2_10007398 to i8
  store i8 %v3_1000739c, i8* %v3_10007394, align 1
  %v2_100073a0 = load i32, i32* %v1_10007380, align 4
  %v0_100073a4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100073a4 = add i32 %v0_100073a4, %v2_100073a0
  %v3_100073a4 = inttoptr i32 %v2_100073a4 to i8*
  %v4_100073a4 = load i8, i8* %v3_100073a4, align 1
  %v5_100073a4 = zext i8 %v4_100073a4 to i32
  %v2_100073a8 = xor i32 %v5_100073a4, %v1_10007374
  %v3_100073ac = trunc i32 %v2_100073a8 to i8
  store i8 %v3_100073ac, i8* %v3_100073a4, align 1
  %v2_100073b0 = load i32, i32* %v1_10007380, align 4
  %v0_100073b4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100073b4 = add i32 %v0_100073b4, %v2_100073b0
  %v3_100073b4 = inttoptr i32 %v2_100073b4 to i8*
  %v4_100073b4 = load i8, i8* %v3_100073b4, align 1
  %v5_100073b4 = zext i8 %v4_100073b4 to i32
  %v0_100073b8 = load i32, i32* @r5, align 4
  %v2_100073b8 = xor i32 %v0_100073b8, %v5_100073b4
  %v3_100073bc = trunc i32 %v2_100073b8 to i8
  store i8 %v3_100073bc, i8* %v3_100073b4, align 1
  %v0_100073c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100073c0 = add i32 %v0_100073c0, 1
  store i32 %v1_100073c0, i32* %r10.global-to-local, align 4
  %v3_100073c4 = load i16, i16* %v2_1000735c, align 4
  %v4_100073c4 = zext i16 %v3_100073c4 to i32
  %v2_100073c8 = icmp slt i32 %v4_100073c4, %v1_100073c0
  %v3_100073c8 = icmp sgt i32 %v4_100073c4, %v1_100073c0
  %v4_100073c8 = icmp eq i32 %v4_100073c4, %v1_100073c0
  store i1 %v2_100073c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100073c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100073c8, label %dec_label_pc_10007380, label %dec_label_pc_100073d0

dec_label_pc_100073d0:                            ; preds = %dec_label_pc_10007380
  ret i32 %v2_10007354

; uselistorder directives
  uselistorder i32 %v4_100073c4, { 2, 1, 0 }
  uselistorder i32 %v1_100073c0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007364, { 2, 3, 1, 0 }
  uselistorder i32 %v2_10007354, { 1, 0 }
  uselistorder i32 %v1_1000734c, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6, 9, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001aa74.282 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001aa74.282 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_100073d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100073d4:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r25.global-to-local, align 4
  store i32 6, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268465160, i32* @lr, align 4
  %v0_10007404 = call i32 @function_10008870()
  store i32 %v0_10007404, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007424.285 to i32), i32* @lr, align 4
  %v3_10007420 = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a3dc.284 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_10007428 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007428, i32* @global_var_1001aa7c.286, align 4
  %v0_1000742c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000742c = trunc i32 %v0_1000742c to i16
  store i16 %v1_1000742c, i16* bitcast (i32* @global_var_1001aa80.287 to i16*), align 4
  store i32 268465204, i32* @lr, align 4
  %v0_10007430 = call i32 @function_10008870()
  store i32 %v0_10007430, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007448.289 to i32), i32* @lr, align 4
  %v3_10007444 = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a3e0.288 to i32), i32 2, i32 2)
  store i32 19, i32* @r3, align 4
  %v0_1000744c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000744c, i32* @global_var_1001aa84.290, align 4
  %v0_10007450 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007450 = trunc i32 %v0_10007450 to i16
  store i16 %v1_10007450, i16* bitcast (i32* @global_var_1001aa88.291 to i16*), align 4
  store i32 268465240, i32* @lr, align 4
  %v0_10007454 = call i32 @function_10008870()
  store i32 %v0_10007454, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000746c.293 to i32), i32* @lr, align 4
  %v4_10007468 = call i32 @function_100077ac(i32 ptrtoint ([20 x i8]* @global_var_1000a3e4.292 to i32), i32 19, i32 19)
  store i32 6, i32* @r3, align 4
  %v0_10007470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007470, i32* @global_var_1001aa8c.294, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_10007478 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007478 = trunc i32 %v0_10007478 to i16
  store i16 %v1_10007478, i16* bitcast (i32* @global_var_1001aa90.295 to i16*), align 4
  store i32 268465280, i32* @lr, align 4
  %v0_1000747c = call i32 @function_10008870()
  store i32 %v0_1000747c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007494.297 to i32), i32* @lr, align 4
  %v4_10007490 = call i32 @function_100077ac(i32 ptrtoint ([7 x i8]* @global_var_1000a3f8.296 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10007498 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007498, i32* @global_var_1001ab24.298, align 4
  %v0_1000749c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000749c = trunc i32 %v0_1000749c to i16
  store i16 %v1_1000749c, i16* bitcast (i32* @global_var_1001ab28.299 to i16*), align 4
  store i32 268465316, i32* @lr, align 4
  %v0_100074a0 = call i32 @function_10008870()
  store i32 %v0_100074a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100074b8.301 to i32), i32* @lr, align 4
  %v4_100074b4 = call i32 @function_100077ac(i32 ptrtoint ([8 x i8]* @global_var_1000a400.300 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_100074bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100074bc, i32* @global_var_1001ab2c.302, align 4
  %v0_100074c0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100074c0 = trunc i32 %v0_100074c0 to i16
  store i16 %v1_100074c0, i16* bitcast (i32* @global_var_1001ab30.303 to i16*), align 4
  store i32 268465352, i32* @lr, align 4
  %v0_100074c4 = call i32 @function_10008870()
  store i32 %v0_100074c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100074dc.305 to i32), i32* @lr, align 4
  %v4_100074d8 = call i32 @function_100077ac(i32 ptrtoint ([8 x i8]* @global_var_1000a408.304 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100074e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100074e0, i32* @global_var_1001ab34.306, align 4
  %v0_100074e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100074e4 = trunc i32 %v0_100074e4 to i16
  store i16 %v1_100074e4, i16* bitcast (i32* @global_var_1001ab38.307 to i16*), align 4
  store i32 268465388, i32* @lr, align 4
  %v0_100074e8 = call i32 @function_10008870()
  store i32 %v0_100074e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007500.309 to i32), i32* @lr, align 4
  %v4_100074fc = call i32 @function_100077ac(i32 ptrtoint ([4 x i8]* @global_var_1000a410.308 to i32), i32 3, i32 3)
  store i32 24, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001ab40.310 to i16*), align 4
  %v0_1000750c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000750c, i32* @global_var_1001ab3c.311, align 4
  store i32 268465428, i32* @lr, align 4
  %v0_10007510 = call i32 @function_10008870()
  store i32 %v0_10007510, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007528.313 to i32), i32* @lr, align 4
  %v3_10007524 = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a414.312 to i32), i32 24, i32 24)
  store i32 29, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001ab48.314 to i16*), align 4
  %v0_10007534 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007534, i32* @global_var_1001ab44.315, align 4
  store i32 268465468, i32* @lr, align 4
  %v0_10007538 = call i32 @function_10008870()
  store i32 %v0_10007538, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007550.317 to i32), i32* @lr, align 4
  %v3_1000754c = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a430.316 to i32), i32 29, i32 29)
  store i32 9, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001ab50.318 to i16*), align 4
  %v0_1000755c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000755c, i32* @global_var_1001ab4c.319, align 4
  store i32 268465508, i32* @lr, align 4
  %v0_10007560 = call i32 @function_10008870()
  store i32 %v0_10007560, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007578.321 to i32), i32* @lr, align 4
  %v4_10007574 = call i32 @function_100077ac(i32 ptrtoint ([10 x i8]* @global_var_1000a450.320 to i32), i32 9, i32 9)
  store i32 8, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001ab58.322 to i16*), align 4
  %v0_10007584 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007584, i32* @global_var_1001ab54.323, align 4
  store i32 268465548, i32* @lr, align 4
  %v0_10007588 = call i32 @function_10008870()
  store i32 %v0_10007588, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100075a0.325 to i32), i32* @lr, align 4
  %v4_1000759c = call i32 @function_100077ac(i32 ptrtoint ([9 x i8]* @global_var_1000a45c.324 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  store i16 8, i16* bitcast (i32* @global_var_1001ab60.326 to i16*), align 4
  %v0_100075ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100075ac, i32* @global_var_1001ab5c.327, align 4
  store i32 268465588, i32* @lr, align 4
  %v0_100075b0 = call i32 @function_10008870()
  store i32 %v0_100075b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100075c8.329 to i32), i32* @lr, align 4
  %v4_100075c4 = call i32 @function_100077ac(i32 ptrtoint ([6 x i8]* @global_var_1000a468.328 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  store i16 5, i16* bitcast (i32* @global_var_1001ab68.330 to i16*), align 4
  %v0_100075d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100075d4, i32* @global_var_1001ab64.331, align 4
  store i32 268465628, i32* @lr, align 4
  %v0_100075d8 = call i32 @function_10008870()
  store i32 %v0_100075d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100075f0.333 to i32), i32* @lr, align 4
  %v4_100075ec = call i32 @function_100077ac(i32 ptrtoint ([7 x i8]* @global_var_1000a470.332 to i32), i32 6, i32 6)
  store i32 21, i32* @r3, align 4
  %v0_100075f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100075f4, i32* @global_var_1001ab6c.334, align 4
  store i32 21, i32* %r27.global-to-local, align 4
  %v0_100075fc = load i32, i32* %r26.global-to-local, align 4
  %v1_100075fc = trunc i32 %v0_100075fc to i16
  store i16 %v1_100075fc, i16* bitcast (i32* @global_var_1001ab70.335 to i16*), align 4
  store i32 268465668, i32* @lr, align 4
  %v0_10007600 = call i32 @function_10008870()
  store i32 %v0_10007600, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007618.337 to i32), i32* @lr, align 4
  %v3_10007614 = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a478.336 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  %v0_1000761c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000761c, i32* @global_var_1001ab74.338, align 4
  store i32 11, i32* %r26.global-to-local, align 4
  %v0_10007624 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007624 = trunc i32 %v0_10007624 to i16
  store i16 %v1_10007624, i16* bitcast (i32* @global_var_1001ab78.339 to i16*), align 4
  store i32 268465708, i32* @lr, align 4
  %v0_10007628 = call i32 @function_10008870()
  store i32 %v0_10007628, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007640.341 to i32), i32* @lr, align 4
  %v3_1000763c = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a490.340 to i32), i32 17, i32 17)
  store i32 11, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001ab80.342 to i16*), align 4
  %v0_1000764c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000764c, i32* @global_var_1001ab7c.343, align 4
  store i32 268465748, i32* @lr, align 4
  %v0_10007650 = call i32 @function_10008870()
  store i32 %v0_10007650, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007668.345 to i32), i32* @lr, align 4
  %v4_10007664 = call i32 @function_100077ac(i32 ptrtoint ([12 x i8]* @global_var_1000a4a4.344 to i32), i32 11, i32 11)
  store i32 21, i32* @r3, align 4
  %v0_1000766c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000766c, i32* @global_var_1001ab84.346, align 4
  %v0_10007670 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007670 = trunc i32 %v0_10007670 to i16
  store i16 %v1_10007670, i16* bitcast (i32* @global_var_1001ab88.347 to i16*), align 4
  store i32 268465784, i32* @lr, align 4
  %v0_10007674 = call i32 @function_10008870()
  store i32 %v0_10007674, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000768c.349 to i32), i32* @lr, align 4
  %v3_10007688 = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a4b0.348 to i32), i32 21, i32 21)
  store i32 19, i32* @r3, align 4
  %v0_10007690 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007690, i32* @global_var_1001ab8c.350, align 4
  %v0_10007694 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007694 = trunc i32 %v0_10007694 to i16
  store i16 %v1_10007694, i16* bitcast (i32* @global_var_1001ab90.351 to i16*), align 4
  store i32 268465820, i32* @lr, align 4
  %v0_10007698 = call i32 @function_10008870()
  store i32 %v0_10007698, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100076b0.353 to i32), i32* @lr, align 4
  %v3_100076ac = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a4c8.352 to i32), i32 19, i32 19)
  store i32 23, i32* @r3, align 4
  %v0_100076b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100076b4, i32* @global_var_1001ab94.354, align 4
  %v0_100076b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100076b8 = trunc i32 %v0_100076b8 to i16
  store i16 %v1_100076b8, i16* bitcast (i32* @global_var_1001ab98.355 to i16*), align 4
  store i32 268465856, i32* @lr, align 4
  %v0_100076bc = call i32 @function_10008870()
  store i32 %v0_100076bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100076d4.357 to i32), i32* @lr, align 4
  %v3_100076d0 = call i32 @function_100077ac(i32 ptrtoint (i32* @global_var_1000a4dc.356 to i32), i32 23, i32 23)
  store i32 11, i32* @r3, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001aba0.358 to i16*), align 4
  %v0_100076e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100076e0, i32* @global_var_1001ab9c.359, align 4
  store i32 268465896, i32* @lr, align 4
  %v0_100076e4 = call i32 @function_10008870()
  store i32 %v0_100076e4, i32* %r28.global-to-local, align 4
  store i32 268465916, i32* @lr, align 4
  %v4_100076f8 = call i32 @function_100077ac(i32 ptrtoint ([12 x i8]* @global_var_1000a4f4.360 to i32), i32 11, i32 11)
  %v0_10007700 = load i32, i32* %r26.global-to-local, align 4
  %v1_10007700 = trunc i32 %v0_10007700 to i16
  store i16 %v1_10007700, i16* bitcast (i32* @global_var_1001aba8.361 to i16*), align 4
  %v0_10007704 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007704, i32* @global_var_1001aba4.362, align 4
  ret i32 %v4_100076f8

; uselistorder directives
  uselistorder i16 23, { 1, 2, 3, 0, 4 }
  uselistorder i32 21, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 24, { 5, 6, 8, 62, 63, 64, 65, 66, 67, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 1, 43, 44, 45, 46, 47, 2, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 3, 68, 69, 70, 71, 72, 73, 74, 75, 4, 76, 7, 77 }
  uselistorder i32 (i32, i32, i32)* @function_100077ac, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10007728(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007728:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10007728 = load i8, i8* %arg1, align 1
  %v3_10007734 = icmp eq i8 %v3_10007728, 0
  %v0_10007738 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007734, i32 %v0_10007738)
  br label %dec_label_pc_1000773c

dec_label_pc_1000773c:                            ; preds = %dec_label_pc_1000773c, %dec_label_pc_10007728
  %v0_1000773c = phi i32 [ %v1_1000773c, %dec_label_pc_1000773c ], [ 0, %dec_label_pc_10007728 ]
  %v1_1000773c = add i32 %v0_1000773c, 1
  %v2_10007740 = add i32 %v1_1000773c, %tmp
  %v3_10007740 = inttoptr i32 %v2_10007740 to i8*
  %v4_10007740 = load i8, i8* %v3_10007740, align 1
  %v3_10007744 = icmp eq i8 %v4_10007740, 0
  br i1 %v3_10007744, label %dec_label_pc_1000774c, label %dec_label_pc_1000773c

dec_label_pc_1000774c:                            ; preds = %dec_label_pc_1000773c
  ret i32 %v1_1000773c
}

define i32 @function_10007750(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007750:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007750 = load i8, i8* %arg1, align 1
  %v3_10007754 = icmp eq i8 %v2_10007750, 0
  br i1 %v3_10007754, label %dec_label_pc_100077a0, label %dec_label_pc_1000775c

dec_label_pc_1000775c:                            ; preds = %dec_label_pc_10007750
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_10007760, %dec_label_pc_1000775c
  %v0_10007760 = phi i32 [ %v1_10007760, %dec_label_pc_10007760 ], [ 0, %dec_label_pc_1000775c ]
  %v1_10007760 = add i32 %v0_10007760, 1
  store i32 %v1_10007760, i32* %r9.global-to-local, align 4
  %v2_10007764 = add i32 %v1_10007760, %tmp
  %v3_10007764 = inttoptr i32 %v2_10007764 to i8*
  %v4_10007764 = load i8, i8* %v3_10007764, align 1
  %v3_10007768 = icmp eq i8 %v4_10007764, 0
  br i1 %v3_10007768, label %dec_label_pc_10007770, label %dec_label_pc_10007760

dec_label_pc_10007770:                            ; preds = %dec_label_pc_10007760
  %v3_10007770 = icmp eq i32 %v1_10007760, -1
  br i1 %v3_10007770, label %dec_label_pc_10007798, label %dec_label_pc_10007778

dec_label_pc_10007778:                            ; preds = %dec_label_pc_10007770
  %phitmp = add i32 %v0_10007760, 2
  br label %dec_label_pc_1000777c

dec_label_pc_1000777c:                            ; preds = %dec_label_pc_100077a0, %dec_label_pc_10007778
  %v0_1000777c = phi i32 [ 1, %dec_label_pc_100077a0 ], [ %phitmp, %dec_label_pc_10007778 ]
  store i32 %v0_1000777c, i32* %ctr.global-to-local, align 4
  %v2_1000778c.pre = load i32, i32* @r3, align 4
  %v2_100077848 = load i8, i8* %arg1, align 1
  %v1_1000778810 = add i32 %tmp, 1
  store i32 %v1_1000778810, i32* %r4.global-to-local, align 4
  %v3_1000778c11 = inttoptr i32 %v2_1000778c.pre to i8*
  store i8 %v2_100077848, i8* %v3_1000778c11, align 1
  %v0_1000779012 = load i32, i32* @r3, align 4
  %v1_1000779013 = add i32 %v0_1000779012, 1
  store i32 %v1_1000779013, i32* %r3.global-to-local, align 4
  %v0_1000779414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000779415 = add i32 %v0_1000779414, -1
  store i32 %v1_1000779415, i32* %ctr.global-to-local, align 4
  %v2_1000779416 = icmp eq i32 %v1_1000779415, 0
  br i1 %v2_1000779416, label %dec_label_pc_10007798.loopexit, label %dec_label_pc_10007784.dec_label_pc_10007784_crit_edge

dec_label_pc_10007784.dec_label_pc_10007784_crit_edge: ; preds = %dec_label_pc_1000777c, %dec_label_pc_10007784.dec_label_pc_10007784_crit_edge
  %v1_1000779017 = phi i32 [ %v1_10007790, %dec_label_pc_10007784.dec_label_pc_10007784_crit_edge ], [ %v1_1000779013, %dec_label_pc_1000777c ]
  %v0_10007784.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007784 = inttoptr i32 %v0_10007784.pre to i8*
  %v2_10007784 = load i8, i8* %v1_10007784, align 1
  %v1_10007788 = add i32 %v0_10007784.pre, 1
  store i32 %v1_10007788, i32* %r4.global-to-local, align 4
  %v3_1000778c = inttoptr i32 %v1_1000779017 to i8*
  store i8 %v2_10007784, i8* %v3_1000778c, align 1
  %v0_10007790 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007790 = add i32 %v0_10007790, 1
  store i32 %v1_10007790, i32* %r3.global-to-local, align 4
  %v0_10007794 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007794 = add i32 %v0_10007794, -1
  store i32 %v1_10007794, i32* %ctr.global-to-local, align 4
  %v2_10007794 = icmp eq i32 %v1_10007794, 0
  br i1 %v2_10007794, label %dec_label_pc_10007798.loopexit, label %dec_label_pc_10007784.dec_label_pc_10007784_crit_edge

dec_label_pc_10007798.loopexit:                   ; preds = %dec_label_pc_10007784.dec_label_pc_10007784_crit_edge, %dec_label_pc_1000777c
  %v0_10007798.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007798

dec_label_pc_10007798:                            ; preds = %dec_label_pc_10007798.loopexit, %dec_label_pc_10007770
  %v0_10007798 = phi i32 [ %v0_10007798.pre, %dec_label_pc_10007798.loopexit ], [ -1, %dec_label_pc_10007770 ]
  store i32 %v0_10007798, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007798

dec_label_pc_100077a0:                            ; preds = %dec_label_pc_10007750
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000777c

; uselistorder directives
  uselistorder i32 %v0_10007798, { 1, 0 }
  uselistorder i32 %v1_10007794, { 1, 0 }
  uselistorder i32 %v1_10007790, { 1, 0 }
  uselistorder i32 %v1_10007760, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007784.dec_label_pc_10007784_crit_edge, { 1, 0 }
}

define i32 @function_100077ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100077ac:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100077ac = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_100077b4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100077ac, i32 %v0_100077b4)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100077bc

dec_label_pc_100077bc:                            ; preds = %dec_label_pc_100077bc, %dec_label_pc_100077ac
  %v0_100077bc = phi i32 [ %v1_100077c4, %dec_label_pc_100077bc ], [ 0, %dec_label_pc_100077ac ]
  %v2_100077bc = add i32 %v0_100077bc, %arg2
  %v3_100077bc = inttoptr i32 %v2_100077bc to i8*
  %v4_100077bc = load i8, i8* %v3_100077bc, align 1
  %v4_100077c0 = add i32 %v0_100077bc, %arg1
  %v5_100077c0 = inttoptr i32 %v4_100077c0 to i8*
  store i8 %v4_100077bc, i8* %v5_100077c0, align 1
  %v0_100077c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100077c4 = add i32 %v0_100077c4, 1
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v0_100077c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100077c8 = add i32 %v0_100077c8, -1
  store i32 %v1_100077c8, i32* %ctr.global-to-local, align 4
  %v2_100077c8 = icmp eq i32 %v1_100077c8, 0
  br i1 %v2_100077c8, label %dec_label_pc_100077cc, label %dec_label_pc_100077bc

dec_label_pc_100077cc:                            ; preds = %dec_label_pc_100077bc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100077c8, { 1, 0 }
  uselistorder i32 %v1_100077c4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_100077d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100077d0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v3_100077d0 = icmp eq i32 %arg2, 0
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v0_100077d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100077d0, i32 %v0_100077d8)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_100077e43 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v5_100077e43, align 1
  %v0_100077e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_100077e85 = add i32 %v0_100077e84, 1
  store i32 %v1_100077e85, i32* %r9.global-to-local, align 4
  %v0_100077ec6 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100077ec7 = add i32 %v0_100077ec6, -1
  store i32 %v1_100077ec7, i32* %ctr.global-to-local, align 4
  %v2_100077ec8 = icmp eq i32 %v1_100077ec7, 0
  br i1 %v2_100077ec8, label %dec_label_pc_100077f0, label %dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge

dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge: ; preds = %dec_label_pc_100077d0, %dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge
  %v1_100077e89 = phi i32 [ %v1_100077e8, %dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge ], [ %v1_100077e85, %dec_label_pc_100077d0 ]
  %v0_100077e4.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_100077e4.pre to i8
  %v4_100077e4 = add i32 %v1_100077e89, %arg1
  %v5_100077e4 = inttoptr i32 %v4_100077e4 to i8*
  store i8 %extract.t, i8* %v5_100077e4, align 1
  %v0_100077e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100077e8 = add i32 %v0_100077e8, 1
  store i32 %v1_100077e8, i32* %r9.global-to-local, align 4
  %v0_100077ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100077ec = add i32 %v0_100077ec, -1
  store i32 %v1_100077ec, i32* %ctr.global-to-local, align 4
  %v2_100077ec = icmp eq i32 %v1_100077ec, 0
  br i1 %v2_100077ec, label %dec_label_pc_100077f0, label %dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge

dec_label_pc_100077f0:                            ; preds = %dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge, %dec_label_pc_100077d0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100077ec, { 1, 0 }
  uselistorder i32 %v1_100077e8, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100077e4.dec_label_pc_100077e4_crit_edge, { 1, 0 }
}

define i32 @function_100077f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100077f4:
  %v3_100077f4 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_100077f4, label %dec_label_pc_10007800, label %dec_label_pc_10007808

dec_label_pc_10007800:                            ; preds = %dec_label_pc_10007824, %dec_label_pc_100077f4, %dec_label_pc_10007808
  ret i32 -1

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077f4
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10007800, label %dec_label_pc_10007810

dec_label_pc_10007810:                            ; preds = %dec_label_pc_10007808
  br label %dec_label_pc_1000782c

dec_label_pc_10007820:                            ; preds = %dec_label_pc_1000782c
  br label %dec_label_pc_10007824

dec_label_pc_10007824:                            ; preds = %dec_label_pc_10007844, %dec_label_pc_10007820
  %v0_1000782c1 = phi i32 [ %v1_10007830, %dec_label_pc_10007844 ], [ 0, %dec_label_pc_10007820 ]
  %v1_10007824 = add i32 %v0_10007848, 1
  %v1_10007828 = add i32 %v0_10007828, -1
  %v2_10007828 = icmp eq i32 %v1_10007828, 0
  br i1 %v2_10007828, label %dec_label_pc_10007800, label %dec_label_pc_1000782c

dec_label_pc_1000782c:                            ; preds = %dec_label_pc_10007824, %dec_label_pc_10007810
  %v0_10007828 = phi i32 [ %v1_10007828, %dec_label_pc_10007824 ], [ %arg2, %dec_label_pc_10007810 ]
  %v0_10007848 = phi i32 [ %v1_10007824, %dec_label_pc_10007824 ], [ 0, %dec_label_pc_10007810 ]
  %v0_1000782c = phi i32 [ %v0_1000782c1, %dec_label_pc_10007824 ], [ 0, %dec_label_pc_10007810 ]
  %v2_1000782c = add i32 %v0_1000782c, %arg3
  %v3_1000782c = inttoptr i32 %v2_1000782c to i8*
  %v4_1000782c = load i8, i8* %v3_1000782c, align 1
  %v1_10007830 = add i32 %v0_1000782c, 1
  %v2_10007834 = add i32 %v0_10007848, %arg1
  %v3_10007834 = inttoptr i32 %v2_10007834 to i8*
  %v4_10007834 = load i8, i8* %v3_10007834, align 1
  %v4_1000783c = icmp eq i8 %v4_10007834, %v4_1000782c
  br i1 %v4_1000783c, label %dec_label_pc_10007844, label %dec_label_pc_10007820

dec_label_pc_10007844:                            ; preds = %dec_label_pc_1000782c
  %v4_10007838 = icmp eq i32 %v1_10007830, %arg4
  br i1 %v4_10007838, label %dec_label_pc_10007848, label %dec_label_pc_10007824

dec_label_pc_10007848:                            ; preds = %dec_label_pc_10007844
  %v1_10007848 = add i32 %v0_10007848, 1
  ret i32 %v1_10007848

; uselistorder directives
  uselistorder i32 %v0_1000782c, { 1, 0 }
  uselistorder label %dec_label_pc_10007800, { 0, 2, 1 }
}

define i32 @function_10007850(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10007850.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007850

dec_label_pc_10007850:                            ; preds = %dec_label_pc_1000786c, %dec_label_pc_10007850, %bb
  %v0_10007850 = phi i32 [ %v0_10007850.pre, %bb ], [ %v1_10007854, %dec_label_pc_10007850 ], [ %v1_10007854, %dec_label_pc_1000786c ]
  %v1_10007850 = inttoptr i32 %v0_10007850 to i8*
  %v2_10007850 = load i8, i8* %v1_10007850, align 1
  %v1_10007854 = add i32 %v0_10007850, 1
  %v3_10007860 = icmp eq i8 %v2_10007850, 32
  br i1 %v3_10007860, label %dec_label_pc_10007850, label %dec_label_pc_1000786c

dec_label_pc_1000786c:                            ; preds = %dec_label_pc_10007850
  %v2_10007850.off = add i8 %v2_10007850, -9
  %tmp = icmp ult i8 %v2_10007850.off, 2
  br i1 %tmp, label %dec_label_pc_10007850, label %dec_label_pc_10007878

dec_label_pc_10007878:                            ; preds = %dec_label_pc_1000786c
  %v3_10007878 = icmp eq i8 %v2_10007850, 45
  br i1 %v3_10007878, label %dec_label_pc_10007924, label %dec_label_pc_10007880

dec_label_pc_10007880:                            ; preds = %dec_label_pc_10007878
  %v3_10007880 = icmp eq i8 %v2_10007850, 43
  br i1 %v3_10007880, label %dec_label_pc_1000797c, label %dec_label_pc_10007888

dec_label_pc_10007888:                            ; preds = %dec_label_pc_10007880, %dec_label_pc_1000797c
  %v0_1000791826 = phi i32 [ %v1_10007854, %dec_label_pc_10007880 ], [ %v1_10007980, %dec_label_pc_1000797c ]
  %v0_100078a85.in = phi i8 [ %v2_10007850, %dec_label_pc_10007880 ], [ %v2_1000797c, %dec_label_pc_1000797c ]
  br label %dec_label_pc_10007894

dec_label_pc_10007894:                            ; preds = %dec_label_pc_10007924, %dec_label_pc_10007888
  %v0_1000791825 = phi i32 [ %v1_1000792c, %dec_label_pc_10007924 ], [ %v0_1000791826, %dec_label_pc_10007888 ]
  %v0_100078a84.in = phi i8 [ %v2_10007924, %dec_label_pc_10007924 ], [ %v0_100078a85.in, %dec_label_pc_10007888 ]
  %v0_1000796c = phi i32 [ 1, %dec_label_pc_10007924 ], [ 0, %dec_label_pc_10007888 ]
  %v1_100078a4 = phi i32 [ -2147483648, %dec_label_pc_10007924 ], [ 2147483647, %dec_label_pc_10007888 ]
  %v2_10007894 = udiv i32 %v1_100078a4, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100078a0 = mul i32 %v2_10007894, %arg1
  %v2_100078a4 = sub i32 %v1_100078a4, %v2_100078a0
  br label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_10007918, %dec_label_pc_10007894
  %v0_10007918 = phi i32 [ %v1_1000791c, %dec_label_pc_10007918 ], [ %v0_1000791825, %dec_label_pc_10007894 ]
  %v0_1000790c = phi i32 [ %v0_1000790417, %dec_label_pc_10007918 ], [ 0, %dec_label_pc_10007894 ]
  %v0_100078fc = phi i32 [ %v0_1000795c11, %dec_label_pc_10007918 ], [ 0, %dec_label_pc_10007894 ]
  %v0_100078f4 = phi i32 [ %v0_100079509, %dec_label_pc_10007918 ], [ 0, %dec_label_pc_10007894 ]
  %v1_100078e8.in = phi i8 [ %v2_10007918, %dec_label_pc_10007918 ], [ %v0_100078a84.in, %dec_label_pc_10007894 ]
  %v1_100078e8 = zext i8 %v1_100078e8.in to i32
  %v1_100078ac = add nsw i32 %v1_100078e8, -48
  %fold = add nuw nsw i32 %v1_100078e8, 208
  %v1_100078b4 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_100078b4, 10
  br i1 %tmp27, label %dec_label_pc_100078ec, label %dec_label_pc_100078c0

dec_label_pc_100078c0:                            ; preds = %dec_label_pc_100078a8
  %v1_100078c0 = add nuw nsw i32 %v1_100078e8, 191
  %v1_100078c4 = urem i32 %v1_100078c0, 256
  %tmp28 = icmp ult i32 %v1_100078c4, 26
  br i1 %tmp28, label %dec_label_pc_100078e8, label %dec_label_pc_100078d4

dec_label_pc_100078d4:                            ; preds = %dec_label_pc_100078c0
  %v1_100078d4 = add nuw nsw i32 %v1_100078e8, 159
  %v1_100078d8 = urem i32 %v1_100078d4, 256
  %v2_100078dc = icmp ugt i32 %v1_100078d8, 25
  br i1 %v2_100078dc, label %dec_label_pc_10007950, label %dec_label_pc_100078e4

dec_label_pc_100078e4:                            ; preds = %dec_label_pc_100078d4
  br label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078c0, %dec_label_pc_100078e4
  %v0_100078e8 = phi i32 [ 55, %dec_label_pc_100078c0 ], [ 87, %dec_label_pc_100078e4 ]
  %v2_100078e8 = sub nsw i32 %v1_100078e8, %v0_100078e8
  br label %dec_label_pc_100078ec

dec_label_pc_100078ec:                            ; preds = %dec_label_pc_100078a8, %dec_label_pc_100078e8
  %v1_10007914 = phi i32 [ %v1_100078ac, %dec_label_pc_100078a8 ], [ %v2_100078e8, %dec_label_pc_100078e8 ]
  %v2_100078ec = icmp slt i32 %v1_10007914, %arg1
  br i1 %v2_100078ec, label %dec_label_pc_100078f4, label %dec_label_pc_10007950

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078ec
  %v1_100078f4 = icmp slt i32 %v0_100078f4, 0
  br i1 %v1_100078f4, label %dec_label_pc_10007938, label %dec_label_pc_100078fc

dec_label_pc_100078fc:                            ; preds = %dec_label_pc_100078f4
  %v3_100078fc = icmp ugt i32 %v0_100078fc, %v2_10007894
  br i1 %v3_100078fc, label %dec_label_pc_10007938, label %dec_label_pc_10007904

dec_label_pc_10007904:                            ; preds = %dec_label_pc_100078fc
  %v4_10007904 = icmp eq i32 %v0_1000790c, %v2_10007894
  br i1 %v4_10007904, label %dec_label_pc_10007940, label %dec_label_pc_1000790c

dec_label_pc_1000790c:                            ; preds = %dec_label_pc_10007940, %dec_label_pc_10007904
  %v2_1000790c = mul i32 %v0_1000790c, %arg1
  %v2_10007914 = add i32 %v1_10007914, %v2_1000790c
  store i32 %v2_10007914, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007918

dec_label_pc_10007918:                            ; preds = %dec_label_pc_10007940, %dec_label_pc_10007938, %dec_label_pc_1000790c
  %v0_1000790417 = phi i32 [ %v2_10007894, %dec_label_pc_10007940 ], [ %v0_1000790c, %dec_label_pc_10007938 ], [ %v2_10007914, %dec_label_pc_1000790c ]
  %v0_1000795c11 = phi i32 [ %v2_10007894, %dec_label_pc_10007940 ], [ %v0_100078fc, %dec_label_pc_10007938 ], [ %v2_10007914, %dec_label_pc_1000790c ]
  %v0_100079509 = phi i32 [ -1, %dec_label_pc_10007940 ], [ -1, %dec_label_pc_10007938 ], [ 1, %dec_label_pc_1000790c ]
  %v1_10007918 = inttoptr i32 %v0_10007918 to i8*
  %v2_10007918 = load i8, i8* %v1_10007918, align 1
  %v1_1000791c = add i32 %v0_10007918, 1
  br label %dec_label_pc_100078a8

dec_label_pc_10007924:                            ; preds = %dec_label_pc_10007878
  %v1_10007924 = inttoptr i32 %v1_10007854 to i8*
  %v2_10007924 = load i8, i8* %v1_10007924, align 1
  %v1_1000792c = add i32 %v0_10007850, 2
  br label %dec_label_pc_10007894

dec_label_pc_10007938:                            ; preds = %dec_label_pc_100078fc, %dec_label_pc_100078f4
  br label %dec_label_pc_10007918

dec_label_pc_10007940:                            ; preds = %dec_label_pc_10007904
  %v3_10007940 = icmp sgt i32 %v1_10007914, %v2_100078a4
  br i1 %v3_10007940, label %dec_label_pc_10007918, label %dec_label_pc_1000790c

dec_label_pc_10007950:                            ; preds = %dec_label_pc_100078ec, %dec_label_pc_100078d4
  %v1_10007950 = icmp slt i32 %v0_100078f4, 0
  br i1 %v1_10007950, label %dec_label_pc_1000796c, label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007950
  %v3_10007958 = icmp eq i32 %v0_1000796c, 0
  %v0_10007960 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007958, i32 %v0_10007960)
  %v0_10007964 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007964 = sub i32 0, %v0_10007964
  ret i32 %v1_10007964

dec_label_pc_1000796c:                            ; preds = %dec_label_pc_10007950
  %v1_1000796c = xor i32 %v0_1000796c, 1
  %v2_10007974 = sub nuw i32 -2147483648, %v1_1000796c
  ret i32 %v2_10007974

dec_label_pc_1000797c:                            ; preds = %dec_label_pc_10007880
  %v1_1000797c = inttoptr i32 %v1_10007854 to i8*
  %v2_1000797c = load i8, i8* %v1_1000797c, align 1
  %v1_10007980 = add i32 %v0_10007850, 2
  br label %dec_label_pc_10007888

; uselistorder directives
  uselistorder i32 %v2_10007914, { 1, 0, 2 }
  uselistorder i32 %v1_10007914, { 1, 0, 2 }
  uselistorder i32 %v1_100078e8, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1000790c, { 2, 0, 1 }
  uselistorder i32 %v0_10007918, { 1, 0 }
  uselistorder i32 %v2_10007894, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10007854, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10007850, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 2, 0, 3, 4, 5, 6, 7, 8, 1 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100078ec, { 1, 0 }
  uselistorder label %dec_label_pc_100078e8, { 1, 0 }
  uselistorder label %dec_label_pc_10007888, { 1, 0 }
}

define i32 @function_10007988(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007988:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_100079a0 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_100079a8 = call i32 @function_100080c8()
  %v2_100079b4 = inttoptr i32 %v0_100079a8 to i32*
  store i32 0, i32* %v2_100079b4, align 4
  store i32 268466628, i32* @lr, align 4
  %v3_100079c0 = call i32 @function_1000866c(i32 2, i32 2, i32 0)
  store i32 %v3_100079c0, i32* @r3, align 4
  %v3_100079c8 = icmp eq i32 %v3_100079c0, -1
  store i32 %v3_100079c0, i32* @r31, align 4
  br i1 %v3_100079c8, label %dec_label_pc_10007a18, label %dec_label_pc_100079e4

dec_label_pc_100079e4:                            ; preds = %dec_label_pc_10007988
  %v2_10007994 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268466684, i32* @lr, align 4
  %v0_100079f8 = call i32 @function_1000846c()
  %v2_10007a00 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10007a04 = load i32, i32* @r31, align 4
  store i32 268466700, i32* @lr, align 4
  %v3_10007a08 = call i32 @function_100084a0(i32 %v0_10007a04, i32 %v2_10007994, i32 %v2_10007a00)
  store i32 268466708, i32* @lr, align 4
  %v0_10007a10 = call i32 @function_10007cb0()
  br label %dec_label_pc_10007a18

dec_label_pc_10007a18:                            ; preds = %dec_label_pc_10007988, %dec_label_pc_100079e4
  %v0_10007a18 = phi i32 [ 0, %dec_label_pc_10007988 ], [ 134744072, %dec_label_pc_100079e4 ]
  store i32 %v0_100079a0, i32* @r31, align 4
  ret i32 %v0_10007a18

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10007cb0, { 23, 22, 21, 20, 24, 19, 18, 17, 16, 7, 6, 5, 4, 3, 15, 14, 13, 12, 11, 10, 9, 8, 0, 1, 2 }
  uselistorder i32 ()* @function_1000846c, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000866c, { 16, 14, 15, 5, 13, 12, 11, 10, 9, 8, 7, 6, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10007a18, { 1, 0 }
}

define i32 @function_10007a34(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007a34:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10007a34 = load i8, i8* %tmp, align 1
  %v3_10007a40 = icmp eq i8 %v3_10007a34, 0
  br i1 %v3_10007a40, label %dec_label_pc_10007a58, label %dec_label_pc_10007a48

dec_label_pc_10007a48:                            ; preds = %dec_label_pc_10007a34, %dec_label_pc_10007a48
  %v0_10007a48 = phi i32 [ %v1_10007a48, %dec_label_pc_10007a48 ], [ 0, %dec_label_pc_10007a34 ]
  %v1_10007a48 = add i32 %v0_10007a48, 1
  %v3_10007a4c = add i32 %v1_10007a48, %arg3
  %v4_10007a4c = inttoptr i32 %v3_10007a4c to i8*
  %v5_10007a4c = load i8, i8* %v4_10007a4c, align 1
  %v3_10007a50 = icmp eq i8 %v5_10007a4c, 0
  br i1 %v3_10007a50, label %dec_label_pc_10007a58, label %dec_label_pc_10007a48

dec_label_pc_10007a58:                            ; preds = %dec_label_pc_10007a48, %dec_label_pc_10007a34
  %v0_10007a8811 = phi i32 [ 0, %dec_label_pc_10007a34 ], [ %v1_10007a48, %dec_label_pc_10007a48 ]
  %v1_10007a58 = icmp slt i32 %arg2, 0
  %v1_10007a5c = add i32 %arg2, 1
  br i1 %v1_10007a58, label %dec_label_pc_10007ad4, label %dec_label_pc_10007a70

dec_label_pc_10007a70:                            ; preds = %dec_label_pc_10007a58, %dec_label_pc_10007ad4, %dec_label_pc_10007ac8
  %v2_10007a7c8 = phi i32 [ %v1_10007a80, %dec_label_pc_10007ac8 ], [ 0, %dec_label_pc_10007ad4 ], [ 0, %dec_label_pc_10007a58 ]
  %v0_10007a746 = phi i32 [ %v1_10007a78, %dec_label_pc_10007ac8 ], [ %tmp16, %dec_label_pc_10007ad4 ], [ %tmp16, %dec_label_pc_10007a58 ]
  %v0_10007a70 = phi i32 [ %v0_10007abc, %dec_label_pc_10007ac8 ], [ 1, %dec_label_pc_10007ad4 ], [ %v1_10007a5c, %dec_label_pc_10007a58 ]
  %v1_10007a70 = add i32 %v0_10007a70, -1
  %v2_10007a70 = icmp eq i32 %v1_10007a70, 0
  br i1 %v2_10007a70, label %dec_label_pc_10007ac0, label %dec_label_pc_10007a74

dec_label_pc_10007a74:                            ; preds = %dec_label_pc_10007a70, %dec_label_pc_10007ab8
  %v2_10007a7c = phi i32 [ 0, %dec_label_pc_10007ab8 ], [ %v2_10007a7c8, %dec_label_pc_10007a70 ]
  %v0_10007a74 = phi i32 [ %v1_10007a78, %dec_label_pc_10007ab8 ], [ %v0_10007a746, %dec_label_pc_10007a70 ]
  %v0_10007abc = phi i32 [ %v1_10007abc, %dec_label_pc_10007ab8 ], [ %v1_10007a70, %dec_label_pc_10007a70 ]
  %v1_10007a74 = inttoptr i32 %v0_10007a74 to i8*
  %v2_10007a74 = load i8, i8* %v1_10007a74, align 1
  %v3_10007a74 = zext i8 %v2_10007a74 to i32
  %v1_10007a78 = add i32 %v0_10007a74, 1
  %v3_10007a7c = add i32 %v2_10007a7c, %arg3
  %v4_10007a7c = inttoptr i32 %v3_10007a7c to i8*
  %v5_10007a7c = load i8, i8* %v4_10007a7c, align 1
  %v6_10007a7c = zext i8 %v5_10007a7c to i32
  %v1_10007a80 = add i32 %v2_10007a7c, 1
  %v1_10007a84 = add nuw nsw i32 %v3_10007a74, 191
  %v1_10007a8c = urem i32 %v1_10007a84, 256
  %v2_10007a90 = icmp ugt i32 %v1_10007a8c, 25
  %v1_10007a94 = add nuw nsw i32 %v6_10007a7c, 191
  %v1_10007a98 = urem i32 %v1_10007a94, 256
  %v2_10007a9c = icmp ugt i32 %v1_10007a98, 25
  br i1 %v2_10007a90, label %dec_label_pc_10007aa8, label %dec_label_pc_10007aa4

dec_label_pc_10007aa4:                            ; preds = %dec_label_pc_10007a74
  %v1_10007aa4 = or i32 %v3_10007a74, 96
  br i1 %v2_10007a9c, label %dec_label_pc_10007ab0, label %dec_label_pc_10007aac

dec_label_pc_10007aa8:                            ; preds = %dec_label_pc_10007a74
  br i1 %v2_10007a9c, label %dec_label_pc_10007ab0, label %dec_label_pc_10007aac

dec_label_pc_10007aac:                            ; preds = %dec_label_pc_10007aa4, %dec_label_pc_10007aa8
  %v1_10007ab014 = phi i32 [ %v1_10007aa4, %dec_label_pc_10007aa4 ], [ %v3_10007a74, %dec_label_pc_10007aa8 ]
  %v1_10007aac = or i32 %v6_10007a7c, 96
  br label %dec_label_pc_10007ab0

dec_label_pc_10007ab0:                            ; preds = %dec_label_pc_10007aa4, %dec_label_pc_10007aa8, %dec_label_pc_10007aac
  %v1_10007ab0 = phi i32 [ %v1_10007aa4, %dec_label_pc_10007aa4 ], [ %v3_10007a74, %dec_label_pc_10007aa8 ], [ %v1_10007ab014, %dec_label_pc_10007aac ]
  %v0_10007ab0 = phi i32 [ %v6_10007a7c, %dec_label_pc_10007aa4 ], [ %v6_10007a7c, %dec_label_pc_10007aa8 ], [ %v1_10007aac, %dec_label_pc_10007aac ]
  %v4_10007ab0 = icmp eq i32 %v0_10007ab0, %v1_10007ab0
  br i1 %v4_10007ab0, label %dec_label_pc_10007ac8, label %dec_label_pc_10007ab8

dec_label_pc_10007ab8:                            ; preds = %dec_label_pc_10007ab0
  %v1_10007abc = add i32 %v0_10007abc, -1
  %v2_10007abc = icmp eq i32 %v1_10007abc, 0
  br i1 %v2_10007abc, label %dec_label_pc_10007ac0, label %dec_label_pc_10007a74

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007a70, %dec_label_pc_10007ab8
  ret i32 -1

dec_label_pc_10007ac8:                            ; preds = %dec_label_pc_10007ab0
  %v4_10007a88.le = icmp eq i32 %v0_10007a8811, %v1_10007a80
  br i1 %v4_10007a88.le, label %dec_label_pc_10007acc, label %dec_label_pc_10007a70

dec_label_pc_10007acc:                            ; preds = %dec_label_pc_10007ac8
  %v2_10007acc = sub i32 %v1_10007a78, %tmp16
  ret i32 %v2_10007acc

dec_label_pc_10007ad4:                            ; preds = %dec_label_pc_10007a58
  br label %dec_label_pc_10007a70

; uselistorder directives
  uselistorder i32 %v1_10007abc, { 1, 0 }
  uselistorder i32 %v1_10007aa4, { 1, 0 }
  uselistorder i1 %v2_10007a9c, { 1, 0 }
  uselistorder i32 %v1_10007a80, { 1, 0 }
  uselistorder i32 %v3_10007a74, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10007abc, { 1, 0 }
  uselistorder i32 %v0_10007a74, { 1, 0 }
  uselistorder i32 %v2_10007a7c, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10007ab0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007aac, { 1, 0 }
  uselistorder label %dec_label_pc_10007a74, { 1, 0 }
  uselistorder label %dec_label_pc_10007a70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007a48, { 1, 0 }
}

define i32 @function_10007ae0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007ae0:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10007af0 = icmp eq i32 %arg2, -2143521772
  %v2_10007b04 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007b04, i32* %stack_var_-32, align 4
  br i1 %v4_10007af0, label %dec_label_pc_10007b64, label %dec_label_pc_10007b24

dec_label_pc_10007b24:                            ; preds = %dec_label_pc_10007ae0
  %v3_10007b24 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10007b24, label %dec_label_pc_10007b3c, label %dec_label_pc_10007b2c

dec_label_pc_10007b2c:                            ; preds = %dec_label_pc_10007b24
  %v3_10007b30 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10007b30, label %dec_label_pc_10007b58, label %dec_label_pc_10007b84

dec_label_pc_10007b3c:                            ; preds = %dec_label_pc_10007b24
  %v1_10007b3c = xor i32 %arg2, -2143551488
  %v3_10007b40 = icmp eq i32 %v1_10007b3c, 29717
  br i1 %v3_10007b40, label %dec_label_pc_10007b74, label %dec_label_pc_10007b48

dec_label_pc_10007b48:                            ; preds = %dec_label_pc_10007b3c
  %v3_10007b4c = icmp eq i32 %v1_10007b3c, 29718
  br i1 %v3_10007b4c, label %dec_label_pc_10007b7c, label %dec_label_pc_10007b84

dec_label_pc_10007b58:                            ; preds = %dec_label_pc_10007b2c
  store i32 ptrtoint (i32* @global_var_10007b60.364 to i32), i32* @lr, align 4
  %v2_10007b5c = inttoptr i32 %arg3 to i32*
  %v3_10007b5c = call i32 @function_100081d0(i32* %v2_10007b5c, i32 %arg1)
  br label %dec_label_pc_10007b6c

dec_label_pc_10007b64:                            ; preds = %dec_label_pc_10007ae0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10007b68

dec_label_pc_10007b68:                            ; preds = %dec_label_pc_10007b7c, %dec_label_pc_10007b74, %dec_label_pc_10007b64
  store i32 268467052, i32* @lr, align 4
  %v0_10007b68 = call i32 @function_1000826c()
  br label %dec_label_pc_10007b6c

dec_label_pc_10007b6c:                            ; preds = %dec_label_pc_10007b58, %dec_label_pc_10007b68
  %storemerge = phi i32 [ %v0_10007b68, %dec_label_pc_10007b68 ], [ %v3_10007b5c, %dec_label_pc_10007b58 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007bb0

dec_label_pc_10007b74:                            ; preds = %dec_label_pc_10007b3c
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10007b68

dec_label_pc_10007b7c:                            ; preds = %dec_label_pc_10007b48
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10007b68

dec_label_pc_10007b84:                            ; preds = %dec_label_pc_10007b48, %dec_label_pc_10007b2c
  %v0_10007b94 = call i32 @__asm_mfcr()
  %v1_10007b98 = and i32 %v0_10007b94, 268435456
  %v3_10007b98 = icmp eq i32 %v1_10007b98, 0
  store i32 %v0_10007b94, i32* %r31.global-to-local, align 4
  br i1 %v3_10007b98, label %dec_label_pc_10007bb0, label %dec_label_pc_10007ba4

dec_label_pc_10007ba4:                            ; preds = %dec_label_pc_10007b84
  %v0_10007ba4 = call i32 @function_100080c8()
  %v0_10007ba8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ba8 = inttoptr i32 %v0_10007ba4 to i32*
  store i32 %v0_10007ba8, i32* %v2_10007ba8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007bb0

dec_label_pc_10007bb0:                            ; preds = %dec_label_pc_10007b84, %dec_label_pc_10007b6c, %dec_label_pc_10007ba4
  %v0_10007bb4 = phi i32 [ %v0_10007b94, %dec_label_pc_10007b84 ], [ %storemerge, %dec_label_pc_10007b6c ], [ -1, %dec_label_pc_10007ba4 ]
  ret i32 %v0_10007bb4

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10007bb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007b6c, { 1, 0 }
}

define i32 @function_10007bc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007bc8:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10007bdc = load i32, i32* @r4, align 4
  %v1_10007bdc = add i32 %v0_10007bdc, -12
  %v2_10007be0 = icmp ugt i32 %v1_10007bdc, 2
  %v2_10007be8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007be8, i32* %stack_var_-32, align 4
  br i1 %v2_10007be0, label %dec_label_pc_10007c14, label %dec_label_pc_10007c04

dec_label_pc_10007c04:                            ; preds = %dec_label_pc_10007bc8
  store i32 268467212, i32* @lr, align 4
  %v2_10007c08 = call i32 @function_10007c4c(i32 3)
  store i32 %v2_10007c08, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c34

dec_label_pc_10007c14:                            ; preds = %dec_label_pc_10007bc8
  %v0_10007c18 = call i32 @__asm_mfcr()
  %v1_10007c1c = and i32 %v0_10007c18, 268435456
  %v3_10007c1c = icmp eq i32 %v1_10007c1c, 0
  store i32 %v0_10007c18, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c1c, label %dec_label_pc_10007c34, label %dec_label_pc_10007c28

dec_label_pc_10007c28:                            ; preds = %dec_label_pc_10007c14
  %v0_10007c28 = call i32 @function_100080c8()
  %v0_10007c2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c2c = inttoptr i32 %v0_10007c28 to i32*
  store i32 %v0_10007c2c, i32* %v2_10007c2c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007c34

dec_label_pc_10007c34:                            ; preds = %dec_label_pc_10007c14, %dec_label_pc_10007c04, %dec_label_pc_10007c28
  %v0_10007c38 = phi i32 [ %v0_10007c18, %dec_label_pc_10007c14 ], [ %v2_10007c08, %dec_label_pc_10007c04 ], [ -1, %dec_label_pc_10007c28 ]
  ret i32 %v0_10007c38

; uselistorder directives
  uselistorder label %dec_label_pc_10007c34, { 2, 0, 1 }
}

define i32 @function_10007c4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007c4c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10007c64 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007c64, i32* %stack_var_-32, align 4
  %v0_10007c80 = call i32 @__asm_mfcr()
  %v1_10007c84 = and i32 %v0_10007c80, 268435456
  %v3_10007c84 = icmp eq i32 %v1_10007c84, 0
  store i32 %v0_10007c80, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c84, label %dec_label_pc_10007c9c, label %dec_label_pc_10007c90

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c4c
  %v0_10007c90 = call i32 @function_100080c8()
  %v0_10007c94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c94 = inttoptr i32 %v0_10007c90 to i32*
  store i32 %v0_10007c94, i32* %v2_10007c94, align 4
  br label %dec_label_pc_10007c9c

dec_label_pc_10007c9c:                            ; preds = %dec_label_pc_10007c4c, %dec_label_pc_10007c90
  %v0_10007cac = phi i32 [ %v0_10007c80, %dec_label_pc_10007c4c ], [ -1, %dec_label_pc_10007c90 ]
  ret i32 %v0_10007cac

; uselistorder directives
  uselistorder label %dec_label_pc_10007c9c, { 1, 0 }
}

define i32 @function_10007cb0() local_unnamed_addr {
dec_label_pc_10007cb0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007cc8 = call i32 @__asm_mfcr()
  %v1_10007ccc = and i32 %v0_10007cc8, 268435456
  %v3_10007ccc = icmp eq i32 %v1_10007ccc, 0
  store i32 %v0_10007cc8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007ccc, label %dec_label_pc_10007ce4, label %dec_label_pc_10007cd8

dec_label_pc_10007cd8:                            ; preds = %dec_label_pc_10007cb0
  %v0_10007cd8 = call i32 @function_100080c8()
  %v0_10007cdc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007cdc = inttoptr i32 %v0_10007cd8 to i32*
  store i32 %v0_10007cdc, i32* %v2_10007cdc, align 4
  br label %dec_label_pc_10007ce4

dec_label_pc_10007ce4:                            ; preds = %dec_label_pc_10007cb0, %dec_label_pc_10007cd8
  %v0_10007cf4 = phi i32 [ %v0_10007cc8, %dec_label_pc_10007cb0 ], [ -1, %dec_label_pc_10007cd8 ]
  ret i32 %v0_10007cf4

; uselistorder directives
  uselistorder label %dec_label_pc_10007ce4, { 1, 0 }
}

define i32 @function_10007cf8() local_unnamed_addr {
dec_label_pc_10007cf8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d10 = call i32 @__asm_mfcr()
  %v1_10007d14 = and i32 %v0_10007d10, 268435456
  %v3_10007d14 = icmp eq i32 %v1_10007d14, 0
  store i32 %v0_10007d10, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d14, label %dec_label_pc_10007d2c, label %dec_label_pc_10007d20

dec_label_pc_10007d20:                            ; preds = %dec_label_pc_10007cf8
  %v0_10007d20 = call i32 @function_100080c8()
  %v0_10007d24 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d24 = inttoptr i32 %v0_10007d20 to i32*
  store i32 %v0_10007d24, i32* %v2_10007d24, align 4
  br label %dec_label_pc_10007d2c

dec_label_pc_10007d2c:                            ; preds = %dec_label_pc_10007cf8, %dec_label_pc_10007d20
  %v0_10007d3c = phi i32 [ %v0_10007d10, %dec_label_pc_10007cf8 ], [ -1, %dec_label_pc_10007d20 ]
  ret i32 %v0_10007d3c

; uselistorder directives
  uselistorder label %dec_label_pc_10007d2c, { 1, 0 }
}

define i32 @function_10007d40() local_unnamed_addr {
dec_label_pc_10007d40:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d58 = call i32 @__asm_mfcr()
  %v1_10007d5c = and i32 %v0_10007d58, 268435456
  %v3_10007d5c = icmp eq i32 %v1_10007d5c, 0
  store i32 %v0_10007d58, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d5c, label %dec_label_pc_10007d74, label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d40
  %v0_10007d68 = call i32 @function_100080c8()
  %v0_10007d6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d6c = inttoptr i32 %v0_10007d68 to i32*
  store i32 %v0_10007d6c, i32* %v2_10007d6c, align 4
  br label %dec_label_pc_10007d74

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d40, %dec_label_pc_10007d68
  %v0_10007d84 = phi i32 [ %v0_10007d58, %dec_label_pc_10007d40 ], [ -1, %dec_label_pc_10007d68 ]
  ret i32 %v0_10007d84

; uselistorder directives
  uselistorder label %dec_label_pc_10007d74, { 1, 0 }
}

define i32 @function_10007d88() local_unnamed_addr {
dec_label_pc_10007d88:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007da0 = call i32 @__asm_mfcr()
  %v1_10007da4 = and i32 %v0_10007da0, 268435456
  %v3_10007da4 = icmp eq i32 %v1_10007da4, 0
  store i32 %v0_10007da0, i32* %r31.global-to-local, align 4
  br i1 %v3_10007da4, label %dec_label_pc_10007dbc, label %dec_label_pc_10007db0

dec_label_pc_10007db0:                            ; preds = %dec_label_pc_10007d88
  %v0_10007db0 = call i32 @function_100080c8()
  %v0_10007db4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007db4 = inttoptr i32 %v0_10007db0 to i32*
  store i32 %v0_10007db4, i32* %v2_10007db4, align 4
  br label %dec_label_pc_10007dbc

dec_label_pc_10007dbc:                            ; preds = %dec_label_pc_10007d88, %dec_label_pc_10007db0
  %v0_10007dcc = phi i32 [ %v0_10007da0, %dec_label_pc_10007d88 ], [ -1, %dec_label_pc_10007db0 ]
  ret i32 %v0_10007dcc

; uselistorder directives
  uselistorder label %dec_label_pc_10007dbc, { 1, 0 }
}

define i32 @function_10007dd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007dd0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007de8 = call i32 @__asm_mfcr()
  %v1_10007dec = and i32 %v0_10007de8, 268435456
  %v3_10007dec = icmp eq i32 %v1_10007dec, 0
  store i32 %v0_10007de8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007dec, label %dec_label_pc_10007e04, label %dec_label_pc_10007df8

dec_label_pc_10007df8:                            ; preds = %dec_label_pc_10007dd0
  %v0_10007df8 = call i32 @function_100080c8()
  %v0_10007dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007dfc = inttoptr i32 %v0_10007df8 to i32*
  store i32 %v0_10007dfc, i32* %v2_10007dfc, align 4
  br label %dec_label_pc_10007e04

dec_label_pc_10007e04:                            ; preds = %dec_label_pc_10007dd0, %dec_label_pc_10007df8
  %v0_10007e14 = phi i32 [ %v0_10007de8, %dec_label_pc_10007dd0 ], [ -1, %dec_label_pc_10007df8 ]
  ret i32 %v0_10007e14

; uselistorder directives
  uselistorder label %dec_label_pc_10007e04, { 1, 0 }
}

define i32 @function_10007e18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007e18:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10007e2c = and i32 %arg2, 64
  %v3_10007e2c = icmp eq i32 %v1_10007e2c, 0
  br i1 %v3_10007e2c, label %dec_label_pc_10007e58, label %dec_label_pc_10007e3c

dec_label_pc_10007e3c:                            ; preds = %dec_label_pc_10007e18
  %v2_10007e44 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007e44, i32* %stack_var_-32, align 4
  %v0_10007e54 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10007e58

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10007e18, %dec_label_pc_10007e3c
  %v0_10007e58 = phi i32 [ 0, %dec_label_pc_10007e18 ], [ %v0_10007e54, %dec_label_pc_10007e3c ]
  store i32 %v0_10007e58, i32* @r5, align 4
  %v0_10007e60 = call i32 @__asm_mfcr()
  %v1_10007e64 = and i32 %v0_10007e60, 268435456
  %v3_10007e64 = icmp eq i32 %v1_10007e64, 0
  store i32 %v0_10007e60, i32* %r31.global-to-local, align 4
  br i1 %v3_10007e64, label %dec_label_pc_10007e7c, label %dec_label_pc_10007e70

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e58
  %v0_10007e70 = call i32 @function_100080c8()
  %v0_10007e74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007e74 = inttoptr i32 %v0_10007e70 to i32*
  store i32 %v0_10007e74, i32* %v2_10007e74, align 4
  br label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e58, %dec_label_pc_10007e70
  %v0_10007e8c = phi i32 [ %v0_10007e60, %dec_label_pc_10007e58 ], [ -1, %dec_label_pc_10007e70 ]
  ret i32 %v0_10007e8c

; uselistorder directives
  uselistorder label %dec_label_pc_10007e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10007e58, { 1, 0 }
}

define i32 @function_10007e90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007e90:
  store i32 %arg1, i32* @r5, align 4
  %v2_10007e9c = call i32 @function_10007e18(i32 577, i32 577)
  ret i32 %v2_10007e9c
}

define i32 @function_10007ea0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007ea0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007eb8 = call i32 @__asm_mfcr()
  %v1_10007ebc = and i32 %v0_10007eb8, 268435456
  %v3_10007ebc = icmp eq i32 %v1_10007ebc, 0
  store i32 %v0_10007eb8, i32* %r31.global-to-local, align 4
  br i1 %v3_10007ebc, label %dec_label_pc_10007ed4, label %dec_label_pc_10007ec8

dec_label_pc_10007ec8:                            ; preds = %dec_label_pc_10007ea0
  %v0_10007ec8 = call i32 @function_100080c8()
  %v0_10007ecc = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ecc = inttoptr i32 %v0_10007ec8 to i32*
  store i32 %v0_10007ecc, i32* %v2_10007ecc, align 4
  br label %dec_label_pc_10007ed4

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007ea0, %dec_label_pc_10007ec8
  %v0_10007ee4 = phi i32 [ %v0_10007eb8, %dec_label_pc_10007ea0 ], [ -1, %dec_label_pc_10007ec8 ]
  ret i32 %v0_10007ee4

; uselistorder directives
  uselistorder label %dec_label_pc_10007ed4, { 1, 0 }
}

define i32 @function_10007ee8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007ee8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007f00 = call i32 @__asm_mfcr()
  %v1_10007f04 = and i32 %v0_10007f00, 268435456
  %v3_10007f04 = icmp eq i32 %v1_10007f04, 0
  store i32 %v0_10007f00, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f04, label %dec_label_pc_10007f1c, label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007ee8
  %v0_10007f10 = call i32 @function_100080c8()
  %v0_10007f14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f14 = inttoptr i32 %v0_10007f10 to i32*
  store i32 %v0_10007f14, i32* %v2_10007f14, align 4
  br label %dec_label_pc_10007f1c

dec_label_pc_10007f1c:                            ; preds = %dec_label_pc_10007ee8, %dec_label_pc_10007f10
  %v0_10007f2c = phi i32 [ %v0_10007f00, %dec_label_pc_10007ee8 ], [ -1, %dec_label_pc_10007f10 ]
  ret i32 %v0_10007f2c

; uselistorder directives
  uselistorder label %dec_label_pc_10007f1c, { 1, 0 }
}

define i32 @function_10007f30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10007f30:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007f48 = call i32 @__asm_mfcr()
  %v1_10007f4c = and i32 %v0_10007f48, 268435456
  %v3_10007f4c = icmp eq i32 %v1_10007f4c, 0
  store i32 %v0_10007f48, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f4c, label %dec_label_pc_10007f64, label %dec_label_pc_10007f58

dec_label_pc_10007f58:                            ; preds = %dec_label_pc_10007f30
  %v0_10007f58 = call i32 @function_100080c8()
  %v0_10007f5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007f5c = inttoptr i32 %v0_10007f58 to i32*
  store i32 %v0_10007f5c, i32* %v2_10007f5c, align 4
  br label %dec_label_pc_10007f64

dec_label_pc_10007f64:                            ; preds = %dec_label_pc_10007f30, %dec_label_pc_10007f58
  %v0_10007f74 = phi i32 [ %v0_10007f48, %dec_label_pc_10007f30 ], [ -1, %dec_label_pc_10007f58 ]
  ret i32 %v0_10007f74

; uselistorder directives
  uselistorder label %dec_label_pc_10007f64, { 1, 0 }
}

define i32 @function_10007f78(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007f78:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007f90 = call i32 @__asm_mfcr()
  %v1_10007f94 = and i32 %v0_10007f90, 268435456
  %v3_10007f94 = icmp eq i32 %v1_10007f94, 0
  store i32 %v0_10007f90, i32* %r31.global-to-local, align 4
  br i1 %v3_10007f94, label %dec_label_pc_10007fac, label %dec_label_pc_10007fa0

dec_label_pc_10007fa0:                            ; preds = %dec_label_pc_10007f78
  %v0_10007fa0 = call i32 @function_100080c8()
  %v0_10007fa4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007fa4 = inttoptr i32 %v0_10007fa0 to i32*
  store i32 %v0_10007fa4, i32* %v2_10007fa4, align 4
  br label %dec_label_pc_10007fac

dec_label_pc_10007fac:                            ; preds = %dec_label_pc_10007f78, %dec_label_pc_10007fa0
  %v0_10007fbc = phi i32 [ %v0_10007f90, %dec_label_pc_10007f78 ], [ -1, %dec_label_pc_10007fa0 ]
  ret i32 %v0_10007fbc

; uselistorder directives
  uselistorder label %dec_label_pc_10007fac, { 1, 0 }
}

define i32 @function_10007fc0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007fc0:
  %r31.global-to-local = alloca i32, align 4
  %v3_10007fc0 = icmp eq i32 %arg2, 0
  br i1 %v3_10007fc0, label %dec_label_pc_10008000, label %dec_label_pc_10007fe8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10007fc0
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10008000, label %dec_label_pc_10007ff0

dec_label_pc_10007ff0:                            ; preds = %dec_label_pc_10007fe8
  %v0_10007ff0 = call i32 @function_100080c8()
  %v2_10007ff8 = inttoptr i32 %v0_10007ff0 to i32*
  store i32 22, i32* %v2_10007ff8, align 4
  %v0_10008024.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10007fe8, %dec_label_pc_10007fc0
  %v0_10008004 = call i32 @__asm_mfcr()
  %v1_10008008 = and i32 %v0_10008004, 268435456
  %v3_10008008 = icmp eq i32 %v1_10008008, 0
  store i32 %v0_10008004, i32* %r31.global-to-local, align 4
  br i1 %v3_10008008, label %dec_label_pc_10008020, label %dec_label_pc_10008014

dec_label_pc_10008014:                            ; preds = %dec_label_pc_10008000
  %v0_10008014 = call i32 @function_100080c8()
  %v0_10008018 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008018 = inttoptr i32 %v0_10008014 to i32*
  store i32 %v0_10008018, i32* %v2_10008018, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10008000, %dec_label_pc_10007ff0, %dec_label_pc_10008014
  %v0_10008024 = phi i32 [ %v0_10008004, %dec_label_pc_10008000 ], [ %v0_10008024.pre, %dec_label_pc_10007ff0 ], [ -1, %dec_label_pc_10008014 ]
  ret i32 %v0_10008024

; uselistorder directives
  uselistorder label %dec_label_pc_10008020, { 2, 0, 1 }
}

define i32 @function_10008038() local_unnamed_addr {
dec_label_pc_10008038:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008050 = call i32 @__asm_mfcr()
  %v1_10008054 = and i32 %v0_10008050, 268435456
  %v3_10008054 = icmp eq i32 %v1_10008054, 0
  store i32 %v0_10008050, i32* %r31.global-to-local, align 4
  br i1 %v3_10008054, label %dec_label_pc_1000806c, label %dec_label_pc_10008060

dec_label_pc_10008060:                            ; preds = %dec_label_pc_10008038
  %v0_10008060 = call i32 @function_100080c8()
  %v0_10008064 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008064 = inttoptr i32 %v0_10008060 to i32*
  store i32 %v0_10008064, i32* %v2_10008064, align 4
  br label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008038, %dec_label_pc_10008060
  %v0_1000807c = phi i32 [ %v0_10008050, %dec_label_pc_10008038 ], [ -1, %dec_label_pc_10008060 ]
  ret i32 %v0_1000807c

; uselistorder directives
  uselistorder label %dec_label_pc_1000806c, { 1, 0 }
}

define i32 @function_10008080(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008080:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008098 = call i32 @__asm_mfcr()
  %v1_1000809c = and i32 %v0_10008098, 268435456
  %v3_1000809c = icmp eq i32 %v1_1000809c, 0
  store i32 %v0_10008098, i32* %r31.global-to-local, align 4
  br i1 %v3_1000809c, label %dec_label_pc_100080b4, label %dec_label_pc_100080a8

dec_label_pc_100080a8:                            ; preds = %dec_label_pc_10008080
  %v0_100080a8 = call i32 @function_100080c8()
  %v0_100080ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100080ac = inttoptr i32 %v0_100080a8 to i32*
  store i32 %v0_100080ac, i32* %v2_100080ac, align 4
  br label %dec_label_pc_100080b4

dec_label_pc_100080b4:                            ; preds = %dec_label_pc_10008080, %dec_label_pc_100080a8
  %v0_100080c4 = phi i32 [ %v0_10008098, %dec_label_pc_10008080 ], [ -1, %dec_label_pc_100080a8 ]
  ret i32 %v0_100080c4

; uselistorder directives
  uselistorder label %dec_label_pc_100080b4, { 1, 0 }
}

define i32 @function_100080c8() local_unnamed_addr {
dec_label_pc_100080c8:
  ret i32 ptrtoint (i32* @global_var_1001a9e0.366 to i32)
}

define i32 @function_100080d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100080d4:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_100080dc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468456, i32* @lr, align 4
  %v1_100080e4 = call i32 @function_100097b8(i32 %v2_100080dc)
  %v3_100080ec = load i32, i32* %stack_var_-24, align 4
  %v2_100080f0 = add i32 %v3_100080ec, %tmp
  %v1_100080f8 = mul i32 %v2_100080f0, 10000
  %v1_10008104 = and i32 %v1_100080f8, 2147483632
  ret i32 %v1_10008104
}

define i32 @function_1000810c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000810c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000810c = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000810c, label %dec_label_pc_10008120, label %dec_label_pc_1000811c

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_1000810c
  %v0_1000811c = call i32 @function_10009800()
  store i32 %v0_1000811c, i32* @r3, align 4
  br label %dec_label_pc_10008120

dec_label_pc_10008120:                            ; preds = %dec_label_pc_1000810c, %dec_label_pc_1000811c
  %v1_10008120 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10008120, i32* %r9.global-to-local, align 4
  %v4_10008120 = icmp eq i32 %v1_10008120, 0
  %v2_10008124 = add i32 %arg3, %arg2
  store i32 %v2_10008124, i32* %r4.global-to-local, align 4
  %v0_10008128 = load i32, i32* @r3, align 4
  %v2_10008128 = add i32 %v0_10008128, %arg3
  store i32 %v2_10008128, i32* %r10.global-to-local, align 4
  br i1 %v4_10008120, label %dec_label_pc_10008150, label %dec_label_pc_10008130

dec_label_pc_10008130:                            ; preds = %dec_label_pc_10008120
  %v1_10008130 = urem i32 %v2_10008128, 4
  %v3_10008130 = icmp eq i32 %v1_10008130, 0
  br i1 %v3_10008130, label %dec_label_pc_10008138, label %dec_label_pc_10008184

dec_label_pc_10008138:                            ; preds = %dec_label_pc_1000819c.dec_label_pc_10008138_crit_edge, %dec_label_pc_10008130
  %v1_10008144.pre = phi i32 [ %v1_10008144.pre.pre, %dec_label_pc_1000819c.dec_label_pc_10008138_crit_edge ], [ %v2_10008128, %dec_label_pc_10008130 ]
  %v0_10008138 = phi i32 [ %v1_1000819c, %dec_label_pc_1000819c.dec_label_pc_10008138_crit_edge ], [ %v1_10008120, %dec_label_pc_10008130 ]
  store i32 %v0_10008138, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000813c

dec_label_pc_1000813c:                            ; preds = %dec_label_pc_1000813c, %dec_label_pc_10008138
  %v1_10008144 = phi i32 [ %v2_10008148, %dec_label_pc_1000813c ], [ %v1_10008144.pre, %dec_label_pc_10008138 ]
  %v0_1000813c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000813c = add i32 %v0_1000813c, -4
  %v2_1000813c = inttoptr i32 %v1_1000813c to i32*
  %v3_1000813c = load i32, i32* %v2_1000813c, align 4
  %v1_10008140 = add i32 %v0_1000813c, -8
  %v2_10008140 = inttoptr i32 %v1_10008140 to i32*
  %v3_10008140 = load i32, i32* %v2_10008140, align 4
  store i32 %v3_10008140, i32* %r9.global-to-local, align 4
  store i32 %v1_10008140, i32* %r4.global-to-local, align 4
  %v2_10008144 = add i32 %v1_10008144, -4
  %v3_10008144 = inttoptr i32 %v2_10008144 to i32*
  store i32 %v3_1000813c, i32* %v3_10008144, align 4
  %v0_10008148 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008148 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008148 = add i32 %v1_10008148, -8
  %v3_10008148 = inttoptr i32 %v2_10008148 to i32*
  store i32 %v0_10008148, i32* %v3_10008148, align 4
  store i32 %v2_10008148, i32* %r10.global-to-local, align 4
  %v0_1000814c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000814c = add i32 %v0_1000814c, -1
  store i32 %v1_1000814c, i32* %ctr.global-to-local, align 4
  %v2_1000814c = icmp eq i32 %v1_1000814c, 0
  br i1 %v2_1000814c, label %dec_label_pc_10008150, label %dec_label_pc_1000813c

dec_label_pc_10008150:                            ; preds = %dec_label_pc_1000813c, %dec_label_pc_1000819c, %dec_label_pc_10008120
  %v0_10008150 = load i32, i32* @r11, align 4
  %v1_10008150 = urem i32 %v0_10008150, 8
  store i32 %v1_10008150, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10008150, 4
  br i1 %tmp, label %dec_label_pc_10008168, label %dec_label_pc_1000815c

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_10008150
  %v0_1000815c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000815c = add i32 %v0_1000815c, -4
  %v2_1000815c = inttoptr i32 %v1_1000815c to i32*
  %v3_1000815c = load i32, i32* %v2_1000815c, align 4
  store i32 %v1_1000815c, i32* %r4.global-to-local, align 4
  %v1_10008160 = add nsw i32 %v1_10008150, -4
  store i32 %v1_10008160, i32* %r5.global-to-local, align 4
  %v1_10008164 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008164 = add i32 %v1_10008164, -4
  %v3_10008164 = inttoptr i32 %v2_10008164 to i32*
  store i32 %v3_1000815c, i32* %v3_10008164, align 4
  store i32 %v2_10008164, i32* %r10.global-to-local, align 4
  %v0_10008168.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008168

dec_label_pc_10008168:                            ; preds = %dec_label_pc_10008150, %dec_label_pc_1000815c
  %v0_10008170 = phi i32 [ %v1_10008150, %dec_label_pc_10008150 ], [ %v0_10008168.pre, %dec_label_pc_1000815c ]
  %v3_10008168 = icmp eq i32 %v0_10008170, 0
  br i1 %v3_10008168, label %dec_label_pc_100081a8, label %dec_label_pc_10008170

dec_label_pc_10008170:                            ; preds = %dec_label_pc_10008168
  store i32 %v0_10008170, i32* %ctr.global-to-local, align 4
  %v2_10008178.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008174

dec_label_pc_10008174:                            ; preds = %dec_label_pc_10008174, %dec_label_pc_10008170
  %v2_10008178 = phi i32 [ %v3_10008178, %dec_label_pc_10008174 ], [ %v2_10008178.pre, %dec_label_pc_10008170 ]
  %v0_10008174 = load i32, i32* %r4.global-to-local, align 4
  %v1_10008174 = add i32 %v0_10008174, -1
  %v2_10008174 = inttoptr i32 %v1_10008174 to i8*
  %v3_10008174 = load i8, i8* %v2_10008174, align 1
  store i32 %v1_10008174, i32* %r4.global-to-local, align 4
  %v3_10008178 = add i32 %v2_10008178, -1
  %v4_10008178 = inttoptr i32 %v3_10008178 to i8*
  store i8 %v3_10008174, i8* %v4_10008178, align 1
  store i32 %v3_10008178, i32* %r10.global-to-local, align 4
  %v0_1000817c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000817c = add i32 %v0_1000817c, -1
  store i32 %v1_1000817c, i32* %ctr.global-to-local, align 4
  %v2_1000817c = icmp eq i32 %v1_1000817c, 0
  br i1 %v2_1000817c, label %dec_label_pc_100081a8, label %dec_label_pc_10008174

dec_label_pc_10008184:                            ; preds = %dec_label_pc_10008130
  %v1_10008184 = sub nsw i32 4, %v1_10008130
  store i32 %v1_10008184, i32* %ctr.global-to-local, align 4
  %v2_1000818c = sub i32 %arg3, %v1_10008184
  store i32 %v2_1000818c, i32* @r11, align 4
  %v1_100081908 = add i32 %v2_10008124, -1
  %v2_100081909 = inttoptr i32 %v1_100081908 to i8*
  %v3_1000819010 = load i8, i8* %v2_100081909, align 1
  store i32 %v1_100081908, i32* %r4.global-to-local, align 4
  %v3_1000819412 = add i32 %v2_10008128, -1
  %v4_1000819413 = inttoptr i32 %v3_1000819412 to i8*
  store i8 %v3_1000819010, i8* %v4_1000819413, align 1
  store i32 %v3_1000819412, i32* %r10.global-to-local, align 4
  %v0_1000819814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000819815 = add i32 %v0_1000819814, -1
  store i32 %v1_1000819815, i32* %ctr.global-to-local, align 4
  %v2_1000819816 = icmp eq i32 %v1_1000819815, 0
  br i1 %v2_1000819816, label %dec_label_pc_1000819c, label %dec_label_pc_10008190.dec_label_pc_10008190_crit_edge

dec_label_pc_10008190.dec_label_pc_10008190_crit_edge: ; preds = %dec_label_pc_10008184, %dec_label_pc_10008190.dec_label_pc_10008190_crit_edge
  %v3_1000819417 = phi i32 [ %v3_10008194, %dec_label_pc_10008190.dec_label_pc_10008190_crit_edge ], [ %v3_1000819412, %dec_label_pc_10008184 ]
  %v0_10008190.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008190 = add i32 %v0_10008190.pre, -1
  %v2_10008190 = inttoptr i32 %v1_10008190 to i8*
  %v3_10008190 = load i8, i8* %v2_10008190, align 1
  store i32 %v1_10008190, i32* %r4.global-to-local, align 4
  %v3_10008194 = add i32 %v3_1000819417, -1
  %v4_10008194 = inttoptr i32 %v3_10008194 to i8*
  store i8 %v3_10008190, i8* %v4_10008194, align 1
  store i32 %v3_10008194, i32* %r10.global-to-local, align 4
  %v0_10008198 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008198 = add i32 %v0_10008198, -1
  store i32 %v1_10008198, i32* %ctr.global-to-local, align 4
  %v2_10008198 = icmp eq i32 %v1_10008198, 0
  br i1 %v2_10008198, label %dec_label_pc_1000819c, label %dec_label_pc_10008190.dec_label_pc_10008190_crit_edge

dec_label_pc_1000819c:                            ; preds = %dec_label_pc_10008190.dec_label_pc_10008190_crit_edge, %dec_label_pc_10008184
  %v0_1000819c = load i32, i32* @r11, align 4
  %v1_1000819c = call i32 @__asm_rlwinm.(i32 %v0_1000819c, i32 29, i32 3, i32 31)
  store i32 %v1_1000819c, i32* %r9.global-to-local, align 4
  %v4_1000819c = icmp eq i32 %v1_1000819c, 0
  br i1 %v4_1000819c, label %dec_label_pc_10008150, label %dec_label_pc_1000819c.dec_label_pc_10008138_crit_edge

dec_label_pc_1000819c.dec_label_pc_10008138_crit_edge: ; preds = %dec_label_pc_1000819c
  %v1_10008144.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008138

dec_label_pc_100081a8:                            ; preds = %dec_label_pc_10008174, %dec_label_pc_10008168
  %v0_100081a8 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_100081a8

; uselistorder directives
  uselistorder i32 %v1_1000819c, { 1, 2, 0 }
  uselistorder i32 %v1_10008198, { 1, 0 }
  uselistorder i32 %v3_10008194, { 1, 2, 0 }
  uselistorder i32 %v1_1000817c, { 1, 0 }
  uselistorder i32 %v3_10008178, { 1, 2, 0 }
  uselistorder i32 %v1_10008150, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000814c, { 1, 0 }
  uselistorder i32 %v2_10008148, { 1, 2, 0 }
  uselistorder i32 %v1_10008130, { 1, 0 }
  uselistorder i32 %v2_10008128, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg3, { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_10008190.dec_label_pc_10008190_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008168, { 1, 0 }
  uselistorder label %dec_label_pc_10008150, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008120, { 1, 0 }
}

define i32 @function_100081b0(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_100081b0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100081b0 = add i32 %arg1, -1
  %v1_100081b4 = sub i32 %v2_100081b0, %tmp
  store i32 %v1_100081b4, i32* %r9.global-to-local, align 4
  %v2_100081b84 = load i8, i8* %arg2, align 1
  %v1_100081bc6 = add i32 %tmp, 1
  store i32 %v1_100081bc6, i32* %r4.global-to-local, align 4
  %v3_100081c07 = icmp eq i8 %v2_100081b84, 0
  store i1 %v3_100081c07, i1* %cr7_eq.global-to-local, align 1
  %v5_100081c48 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100081b84, i8* %v5_100081c48, align 1
  %v0_100081c89 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100081c89, label %dec_label_pc_100081cc, label %dec_label_pc_100081b8.dec_label_pc_100081b8_crit_edge

dec_label_pc_100081b8.dec_label_pc_100081b8_crit_edge: ; preds = %dec_label_pc_100081b0, %dec_label_pc_100081b8.dec_label_pc_100081b8_crit_edge
  %v0_100081b8.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_100081c4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100081b8 = inttoptr i32 %v0_100081b8.pre to i8*
  %v2_100081b8 = load i8, i8* %v1_100081b8, align 1
  %v1_100081bc = add i32 %v0_100081b8.pre, 1
  store i32 %v1_100081bc, i32* %r4.global-to-local, align 4
  %v3_100081c0 = icmp eq i8 %v2_100081b8, 0
  store i1 %v3_100081c0, i1* %cr7_eq.global-to-local, align 1
  %v4_100081c4 = add i32 %v1_100081bc, %v2_100081c4.pre
  %v5_100081c4 = inttoptr i32 %v4_100081c4 to i8*
  store i8 %v2_100081b8, i8* %v5_100081c4, align 1
  %v0_100081c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100081c8, label %dec_label_pc_100081cc, label %dec_label_pc_100081b8.dec_label_pc_100081b8_crit_edge

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_100081b8.dec_label_pc_100081b8_crit_edge, %dec_label_pc_100081b0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100081b8.dec_label_pc_100081b8_crit_edge, { 1, 0 }
}

define i32 @function_100081d0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100081d0:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_1()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100081d4 = load i32, i32* @lr, align 4
  store i32 %v0_100081d4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100081e4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268468728, i32* @lr, align 4
  %v3_100081f4 = call i32 @function_10007ae0(i32 1076655123, i32 %v2_100081e4, i32 %v2_100081e4)
  %v2_100081f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100081f8, i32* @r4, align 4
  store i32 %v3_100081f4, i32* @r30, align 4
  %v3_100081fc = icmp eq i32 %v3_100081f4, 0
  %v0_10008204 = load i32, i32* @r31, align 4
  br i1 %v3_100081fc, label %dec_label_pc_1000820c, label %dec_label_pc_10008254

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_100081d0
  %v1_10008204 = add i32 %v0_10008204, 17
  %v3_10008224 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10008224, i32* %r0.global-to-local, align 4
  %v2_10008228 = add i32 %v0_10008204, 4
  %v3_10008228 = inttoptr i32 %v2_10008228 to i32*
  store i32 %tmp7, i32* %v3_10008228, align 4
  %v0_1000822c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000822c = load i32, i32* @r31, align 4
  %v2_1000822c = inttoptr i32 %v1_1000822c to i32*
  store i32 %v0_1000822c, i32* %v2_1000822c, align 4
  %v0_10008230 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008230 = load i32, i32* @r31, align 4
  %v2_10008230 = add i32 %v1_10008230, 8
  %v3_10008230 = inttoptr i32 %v2_10008230 to i32*
  store i32 %v0_10008230, i32* %v3_10008230, align 4
  %v0_10008234 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008234 = load i32, i32* @r31, align 4
  %v2_10008234 = add i32 %v1_10008234, 12
  %v3_10008234 = inttoptr i32 %v2_10008234 to i32*
  store i32 %v0_10008234, i32* %v3_10008234, align 4
  %v3_10008238 = load i32, i32* @r31, align 4
  %v4_10008238 = add i32 %v3_10008238, 16
  %v5_10008238 = inttoptr i32 %v4_10008238 to i8*
  store i8 %tmp4, i8* %v5_10008238, align 1
  %v1_1000823c = load i32, i32* @r31, align 4
  %v2_1000823c = add i32 %v1_1000823c, 52
  %v3_1000823c = inttoptr i32 %v2_1000823c to i32*
  store i32 %tmp3, i32* %v3_1000823c, align 4
  %v1_10008240 = load i32, i32* @r31, align 4
  %v2_10008240 = add i32 %v1_10008240, 56
  %v3_10008240 = inttoptr i32 %v2_10008240 to i32*
  store i32 %tmp2, i32* %v3_10008240, align 4
  store i32 268468808, i32* @lr, align 4
  %v6_10008244 = sext i8 %tmp4 to i32
  %v8_10008244 = call i32 @function_1000992c(i32 %v1_10008204, i32 %v2_100081f8, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10008244, i32 %tmp7)
  store i32 268468820, i32* @lr, align 4
  %v3_10008250 = call i32 @function_1000989c(i32 %v8_10008244, i32 0, i32 13)
  %v0_10008258.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008254

dec_label_pc_10008254:                            ; preds = %dec_label_pc_100081d0, %dec_label_pc_1000820c
  %v0_10008258 = phi i32 [ %v3_100081f4, %dec_label_pc_100081d0 ], [ %v0_10008258.pre, %dec_label_pc_1000820c ]
  store i32 %v0_100081d4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008258

; uselistorder directives
  uselistorder i32 %v2_100081e4, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 8, 12, 13, 9, 14, 10, 15, 1, 16, 2, 17, 3, 18, 4, 19, 11, 20, 0, 21, 22, 5, 23, 24, 6, 25, 26, 7 }
  uselistorder i32 52, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10008254, { 1, 0 }
}

define i32 @function_1000826c() local_unnamed_addr {
dec_label_pc_1000826c:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000826c = load i32, i32* @r4, align 4
  %v3_1000826c = icmp eq i32 %v0_1000826c, 1
  %v0_1000827c = load i32, i32* @r3, align 4
  store i32 %v0_1000827c, i32* %r27.global-to-local, align 4
  %v0_10008284 = load i32, i32* @r5, align 4
  store i32 %v0_10008284, i32* @r31, align 4
  br i1 %v3_1000826c, label %dec_label_pc_100082a8, label %dec_label_pc_1000828c

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_1000826c
  %v3_1000828c = icmp eq i32 %v0_1000826c, 2
  br i1 %v3_1000828c, label %dec_label_pc_100082c8, label %dec_label_pc_10008294

dec_label_pc_10008294:                            ; preds = %dec_label_pc_1000828c
  %v3_10008294 = icmp eq i32 %v0_1000826c, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10008294, label %dec_label_pc_100082d0, label %dec_label_pc_100082b4

dec_label_pc_100082a8:                            ; preds = %dec_label_pc_1000826c
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_100082d0

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_10008294
  %v0_100082b4 = call i32 @function_100080c8()
  store i32 -1, i32* @r28, align 4
  %v2_100082c0 = inttoptr i32 %v0_100082b4 to i32*
  store i32 22, i32* %v2_100082c0, align 4
  br label %dec_label_pc_100083b8

dec_label_pc_100082c8:                            ; preds = %dec_label_pc_1000828c
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_100082d0

dec_label_pc_100082d0:                            ; preds = %dec_label_pc_10008294, %dec_label_pc_100082a8, %dec_label_pc_100082c8
  %v1_100082d0 = inttoptr i32 %v0_10008284 to i32*
  %v2_100082d0 = load i32, i32* %v1_100082d0, align 4
  store i32 19, i32* @r5, align 4
  %v1_100082d8 = add i32 %v0_10008284, 4
  %v2_100082d8 = inttoptr i32 %v1_100082d8 to i32*
  %v3_100082d8 = load i32, i32* %v2_100082d8, align 4
  store i32 %v3_100082d8, i32* %r9.global-to-local, align 4
  %v1_100082dc = add i32 %v0_10008284, 17
  store i32 %v1_100082dc, i32* @r4, align 4
  %v1_100082e0 = add i32 %v0_10008284, 8
  %v2_100082e0 = inttoptr i32 %v1_100082e0 to i32*
  %v3_100082e0 = load i32, i32* %v2_100082e0, align 4
  %v2_100082e4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100082e4, i32* @r3, align 4
  %v2_100082ec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_100082d0, i32* %stack_var_-72, align 4
  store i32 268469020, i32* @lr, align 4
  %v0_10008318 = call i32 @function_10009800()
  %v0_1000831c = load i32, i32* %r27.global-to-local, align 4
  %v0_10008320 = load i32, i32* @r30, align 4
  store i32 268469040, i32* @lr, align 4
  %v3_1000832c = call i32 @function_10007ae0(i32 %v0_1000831c, i32 %v0_10008320, i32 %v2_100082ec)
  store i32 %v3_1000832c, i32* @r28, align 4
  %v3_10008330 = icmp eq i32 %v3_1000832c, 0
  br i1 %v3_10008330, label %dec_label_pc_10008338, label %dec_label_pc_100083b8

dec_label_pc_10008338:                            ; preds = %dec_label_pc_100082d0
  %v0_10008338 = load i32, i32* @r30, align 4
  %v3_1000833c = icmp eq i32 %v0_10008338, -2144570348
  br i1 %v3_1000833c, label %dec_label_pc_10008344, label %dec_label_pc_100083b4

dec_label_pc_10008344:                            ; preds = %dec_label_pc_10008338
  %v0_10008344 = call i32 @function_100080c8()
  store i32 %v0_10008344, i32* @r29, align 4
  %v0_10008354 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000835c = inttoptr i32 %v0_10008344 to i32*
  %v2_1000835c = load i32, i32* %v1_1000835c, align 4
  store i32 %v2_1000835c, i32* @r30, align 4
  store i32 268469096, i32* @lr, align 4
  %v3_10008364 = call i32 @function_10007ae0(i32 %v0_10008354, i32 1076655123, i32 %v2_100082ec)
  %v3_10008368 = icmp eq i32 %v3_10008364, 0
  br i1 %v3_10008368, label %dec_label_pc_10008378, label %dec_label_pc_10008370

dec_label_pc_10008370:                            ; preds = %dec_label_pc_10008344
  %v0_10008370 = load i32, i32* @r30, align 4
  %v1_10008370 = load i32, i32* @r29, align 4
  %v2_10008370 = inttoptr i32 %v1_10008370 to i32*
  store i32 %v0_10008370, i32* %v2_10008370, align 4
  br label %dec_label_pc_100083b8

dec_label_pc_10008378:                            ; preds = %dec_label_pc_10008344
  %v0_10008378 = load i32, i32* @r31, align 4
  %v1_10008378 = add i32 %v0_10008378, 8
  %v2_10008378 = inttoptr i32 %v1_10008378 to i32*
  %v3_10008378 = load i32, i32* %v2_10008378, align 4
  %v1_10008380 = call i32 @__asm_rlwinm(i32 %v3_10008378, i32 0, i32 19, i32 20)
  %v1_10008384 = call i32 @__asm_rlwinm(i32 %v3_100082e0, i32 0, i32 19, i32 20)
  store i32 %v1_10008384, i32* %r9.global-to-local, align 4
  %v4_10008388 = icmp eq i32 %v1_10008380, %v1_10008384
  br i1 %v4_10008388, label %dec_label_pc_10008390, label %dec_label_pc_100083a4

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008378
  %v1_10008390 = and i32 %v3_10008378, 768
  store i32 %v1_10008390, i32* %r9.global-to-local, align 4
  %v3_10008390 = icmp eq i32 %v1_10008390, 0
  br i1 %v3_10008390, label %dec_label_pc_100083b4, label %dec_label_pc_10008398

dec_label_pc_10008398:                            ; preds = %dec_label_pc_10008390
  %v1_10008398 = call i32 @__asm_rlwinm(i32 %v3_100082e0, i32 0, i32 22, i32 23)
  %v0_1000839c = load i32, i32* %r9.global-to-local, align 4
  %v4_1000839c = icmp eq i32 %v0_1000839c, %v1_10008398
  br i1 %v4_1000839c, label %dec_label_pc_100083b4, label %dec_label_pc_100083a4

dec_label_pc_100083a4:                            ; preds = %dec_label_pc_10008378, %dec_label_pc_10008398
  store i32 -1, i32* @r28, align 4
  %v1_100083ac = load i32, i32* @r29, align 4
  %v2_100083ac = inttoptr i32 %v1_100083ac to i32*
  store i32 22, i32* %v2_100083ac, align 4
  br label %dec_label_pc_100083b8

dec_label_pc_100083b4:                            ; preds = %dec_label_pc_10008338, %dec_label_pc_10008398, %dec_label_pc_10008390
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100083b8

dec_label_pc_100083b8:                            ; preds = %dec_label_pc_100082d0, %dec_label_pc_100083a4, %dec_label_pc_10008370, %dec_label_pc_100082b4, %dec_label_pc_100083b4
  %v0_100083bc = load i32, i32* @r28, align 4
  ret i32 %v0_100083bc

; uselistorder directives
  uselistorder i32 %v0_10008284, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 20, { 15, 16, 5, 17, 0, 1, 18, 19, 2, 6, 20, 21, 22, 23, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 8, 33, 34, 35, 36, 37, 38, 9, 39, 40, 41, 42, 44, 43, 45, 46, 47, 48, 10, 49, 50, 51, 52, 53, 54, 55, 11, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 12, 67, 68, 69, 3, 13, 70, 71, 72, 4, 14, 73, 74, 75 }
  uselistorder i32 (i32, i32, i32)* @function_10007ae0, { 2, 1, 0, 4, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 1, 2, 8, 3, 4, 9, 10, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_100083b8, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100083b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100083a4, { 1, 0 }
  uselistorder label %dec_label_pc_100082d0, { 2, 1, 0 }
}

define i32 @function_100083d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100083d0:
  %stack_var_-24 = alloca i32, align 4
  %v2_100083d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100083d8, i32* @r4, align 4
  store i32 268469220, i32* @lr, align 4
  %v1_100083e0 = bitcast i32* %stack_var_-24 to i8*
  %v2_100083e0 = call i32 @function_10009960(i8* %v1_100083e0)
  %v3_100083e4 = icmp eq i32 %v2_100083e0, 0
  br i1 %v3_100083e4, label %dec_label_pc_100083f4, label %dec_label_pc_100083f0

dec_label_pc_100083f0:                            ; preds = %dec_label_pc_100083d0
  %v3_100083f0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_100083d0, %dec_label_pc_100083f0
  %v0_10008400 = phi i32 [ -1, %dec_label_pc_100083d0 ], [ %v3_100083f0, %dec_label_pc_100083f0 ]
  ret i32 %v0_10008400

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100083f4, { 1, 0 }
}

define i32 @function_10008404(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008404:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008418 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469288, i32* @lr, align 4
  %v2_10008424 = call i32 @function_1000955c(i32 5, i32 %v2_10008418)
  ret i32 %v2_10008424

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008438(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008438:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000844c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469340, i32* @lr, align 4
  %v2_10008458 = call i32 @function_1000955c(i32 2, i32 %v2_1000844c)
  ret i32 %v2_10008458

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000846c() local_unnamed_addr {
dec_label_pc_1000846c:
  %stack_var_-24 = alloca i32, align 4
  %v0_10008474 = load i32, i32* @r3, align 4
  store i32 %v0_10008474, i32* %stack_var_-24, align 4
  %v2_10008480 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469392, i32* @lr, align 4
  %v2_1000848c = call i32 @function_1000955c(i32 3, i32 %v2_10008480)
  ret i32 %v2_1000848c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100084a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100084a0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100084b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469444, i32* @lr, align 4
  %v2_100084c0 = call i32 @function_1000955c(i32 6, i32 %v2_100084b4)
  ret i32 %v2_100084c0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100084d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100084d4:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100084e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268469504, i32* @lr, align 4
  %v2_100084fc = call i32 @function_1000955c(i32 15, i32 %v2_100084e8)
  ret i32 %v2_100084fc

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008510(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008510:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008524 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469552, i32* @lr, align 4
  %v2_1000852c = call i32 @function_1000955c(i32 4, i32 %v2_10008524)
  ret i32 %v2_1000852c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008540(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008540:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008554 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469608, i32* @lr, align 4
  %v2_10008564 = call i32 @function_1000955c(i32 10, i32 %v2_10008554)
  ret i32 %v2_10008564

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10008578(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008578:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000858c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268469672, i32* @lr, align 4
  %v2_100085a4 = call i32 @function_1000955c(i32 12, i32 %v2_1000858c)
  ret i32 %v2_100085a4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100085b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100085b8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100085cc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469728, i32* @lr, align 4
  %v2_100085dc = call i32 @function_1000955c(i32 9, i32 %v2_100085cc)
  ret i32 %v2_100085dc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 6, 11, 12, 13, 1, 14, 7, 15, 8, 16, 2, 17, 3, 9, 10, 31, 18, 19, 20, 21, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33 }
}

define i32 @function_100085f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100085f0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008604 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268469792, i32* @lr, align 4
  %v2_1000861c = call i32 @function_1000955c(i32 11, i32 %v2_10008604)
  ret i32 %v2_1000861c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008630(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008630:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008644 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268469852, i32* @lr, align 4
  %v2_10008658 = call i32 @function_1000955c(i32 14, i32 %v2_10008644)
  ret i32 %v2_10008658

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000866c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000866c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008680 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268469904, i32* @lr, align 4
  %v2_1000868c = call i32 @function_1000955c(i32 1, i32 %v2_10008680)
  ret i32 %v2_1000868c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000955c, { 2, 1, 0, 9, 7, 11, 10, 5, 4, 6, 8, 3 }
}

define i32 @function_100086a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100086a0:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_100086d0, label %dec_label_pc_100086bc

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_100086a0
  %v0_100086bc = call i32 @function_100080c8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100086c8 = inttoptr i32 %v0_100086bc to i32*
  store i32 22, i32* %v2_100086c8, align 4
  %v0_100086dc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100086d8

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086a0
  %v0_100086d0 = call i32 @function_10008820()
  store i32 %v0_100086d0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100086d8

dec_label_pc_100086d8:                            ; preds = %dec_label_pc_100086bc, %dec_label_pc_100086d0
  %v0_100086dc = phi i32 [ %v0_100086dc.pre, %dec_label_pc_100086bc ], [ %v0_100086d0, %dec_label_pc_100086d0 ]
  ret i32 %v0_100086dc

; uselistorder directives
  uselistorder i32 64, { 0, 12, 9, 10, 1, 2, 11, 3, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_100086d8, { 1, 0 }
}

define i32 @function_100086ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_100086ec:
  store i32 268470020, i32* @lr, align 4
  %v3_10008700 = call i32 @function_1000989c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10008718(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008718:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10008718 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10008718, label %dec_label_pc_10008744, label %dec_label_pc_10008734

dec_label_pc_10008734:                            ; preds = %dec_label_pc_10008718
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10008744, label %dec_label_pc_1000873c

dec_label_pc_1000873c:                            ; preds = %dec_label_pc_10008734
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10008774.lr.ph, label %dec_label_pc_10008744

dec_label_pc_10008744:                            ; preds = %dec_label_pc_1000873c, %dec_label_pc_10008734, %dec_label_pc_10008718
  %v0_10008744 = call i32 @function_100080c8()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10008750 = inttoptr i32 %v0_10008744 to i32*
  store i32 22, i32* %v2_10008750, align 4
  %v0_100087e4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087e0

dec_label_pc_10008774.lr.ph:                      ; preds = %dec_label_pc_1000873c
  %v2_10008764 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10008764, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000877422 = add i32 %v2_10008764, 128
  %v3_1000877423 = inttoptr i32 %v2_1000877422 to i32*
  store i32 0, i32* %v3_1000877423, align 4
  %v0_1000877824 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000877825 = add i32 %v0_1000877824, -1
  store i32 %v1_1000877825, i32* %r11.global-to-local, align 4
  %v1_1000877c26 = mul i32 %v1_1000877825, 4
  %v1_1000878027 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000878028 = add i32 %v1_1000878027, %v1_1000877c26
  store i32 %v2_1000878028, i32* %r9.global-to-local, align 4
  %v0_1000878429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000878430 = add i32 %v0_1000878429, -1
  store i32 %v1_1000878430, i32* %ctr.global-to-local, align 4
  %v2_1000878431 = icmp eq i32 %v1_1000878430, 0
  br i1 %v2_1000878431, label %dec_label_pc_10008788, label %dec_label_pc_10008774.dec_label_pc_10008774_crit_edge

dec_label_pc_10008774.dec_label_pc_10008774_crit_edge: ; preds = %dec_label_pc_10008774.lr.ph, %dec_label_pc_10008774.dec_label_pc_10008774_crit_edge
  %v2_1000878032 = phi i32 [ %v2_10008780, %dec_label_pc_10008774.dec_label_pc_10008774_crit_edge ], [ %v2_1000878028, %dec_label_pc_10008774.lr.ph ]
  %v0_10008774.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008774 = add i32 %v2_1000878032, 4
  %v3_10008774 = inttoptr i32 %v2_10008774 to i32*
  store i32 %v0_10008774.pre, i32* %v3_10008774, align 4
  %v0_10008778 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008778 = add i32 %v0_10008778, -1
  store i32 %v1_10008778, i32* %r11.global-to-local, align 4
  %v1_1000877c = mul i32 %v1_10008778, 4
  %v1_10008780 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008780 = add i32 %v1_10008780, %v1_1000877c
  store i32 %v2_10008780, i32* %r9.global-to-local, align 4
  %v0_10008784 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008784 = add i32 %v0_10008784, -1
  store i32 %v1_10008784, i32* %ctr.global-to-local, align 4
  %v2_10008784 = icmp eq i32 %v1_10008784, 0
  br i1 %v2_10008784, label %dec_label_pc_10008788, label %dec_label_pc_10008774.dec_label_pc_10008774_crit_edge

dec_label_pc_10008788:                            ; preds = %dec_label_pc_10008774.dec_label_pc_10008774_crit_edge, %dec_label_pc_10008774.lr.ph
  %v0_1000878c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10008788 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10008788, i32* @r3, align 4
  store i32 %v0_1000878c.pre, i32* @r4, align 4
  %v0_10008790 = call i32 @function_10008820()
  %v1_10008794 = icmp slt i32 %v0_10008790, 0
  br i1 %v1_10008794, label %dec_label_pc_100087dc, label %dec_label_pc_1000879c

dec_label_pc_1000879c:                            ; preds = %dec_label_pc_10008788
  %v0_100087a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100087a8 = call i32 @function_100087f8(i32 ptrtoint (i32* @global_var_1001abac.369 to i32), i32 %v0_100087a0)
  %v2_100087b4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268470220, i32* @lr, align 4
  %v4_100087c8 = call i32 @function_10009a20(i32 %v0_100087a0, i32* nonnull %stack_var_-296, i32 %v2_100087b4)
  %v1_100087cc = icmp slt i32 %v4_100087c8, 0
  br i1 %v1_100087cc, label %dec_label_pc_100087dc, label %dec_label_pc_100087d4

dec_label_pc_100087d4:                            ; preds = %dec_label_pc_1000879c
  %v3_100087d4 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_100087d4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087e0

dec_label_pc_100087dc:                            ; preds = %dec_label_pc_1000879c, %dec_label_pc_10008788
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100087e0

dec_label_pc_100087e0:                            ; preds = %dec_label_pc_100087d4, %dec_label_pc_10008744, %dec_label_pc_100087dc
  %v0_100087e4 = phi i32 [ %v3_100087d4, %dec_label_pc_100087d4 ], [ %v0_100087e4.pre, %dec_label_pc_10008744 ], [ -1, %dec_label_pc_100087dc ]
  ret i32 %v0_100087e4

; uselistorder directives
  uselistorder i32 %v1_10008784, { 1, 0 }
  uselistorder i32 %v2_10008780, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 22, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100087e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008774.dec_label_pc_10008774_crit_edge, { 1, 0 }
}

define i32 @function_100087f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100087f8:
  %v1_100087f8 = add i32 %arg2, -1
  %v1_100087fc = call i32 @__asm_rlwinm(i32 %v1_100087f8, i32 29, i32 3, i32 29)
  %v1_10008800 = urem i32 %v1_100087f8, 32
  %v2_10008804 = add i32 %v1_100087fc, %arg1
  %v3_10008804 = inttoptr i32 %v2_10008804 to i32*
  %v4_10008804 = load i32, i32* %v3_10008804, align 4
  %v3_1000880c = shl i32 1, %v1_10008800
  %v2_10008810 = and i32 %v4_10008804, %v3_1000880c
  %v2_10008814 = icmp ne i32 %v2_10008810, 0
  %v5_10008818 = zext i1 %v2_10008814 to i32
  ret i32 %v5_10008818
}

define i32 @function_10008820() local_unnamed_addr {
dec_label_pc_10008820:
  %r0.global-to-local = alloca i32, align 4
  %v0_10008820 = load i32, i32* @r4, align 4
  %v1_10008820 = add i32 %v0_10008820, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10008828 = call i32 @__asm_rlwinm(i32 %v1_10008820, i32 29, i32 3, i32 29)
  %v1_1000882c = urem i32 %v1_10008820, 32
  %v1_10008830 = load i32, i32* @r3, align 4
  %v2_10008830 = add i32 %v1_10008830, %v1_10008828
  %v3_10008830 = inttoptr i32 %v2_10008830 to i32*
  %v4_10008830 = load i32, i32* %v3_10008830, align 4
  %v0_10008834 = load i32, i32* %r0.global-to-local, align 4
  %v3_10008834 = shl i32 %v0_10008834, %v1_1000882c
  store i32 %v3_10008834, i32* %r0.global-to-local, align 4
  %v2_10008838 = or i32 %v3_10008834, %v4_10008830
  store i32 %v2_10008838, i32* %v3_10008830, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
}

define i32 @function_10008848(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008848:
  %v1_10008848 = add i32 %arg2, -1
  %v1_10008850 = call i32 @__asm_rlwinm(i32 %v1_10008848, i32 29, i32 3, i32 29)
  %v1_10008854 = urem i32 %v1_10008848, 32
  %v2_10008858 = add i32 %v1_10008850, %arg1
  %v3_10008858 = inttoptr i32 %v2_10008858 to i32*
  %v4_10008858 = load i32, i32* %v3_10008858, align 4
  %v3_1000885c = shl i32 -2, %v1_10008854
  %v4_1000885c = sub nsw i32 32, %v1_10008854
  %v5_1000885c = lshr i32 -2, %v4_1000885c
  %v6_1000885c = or i32 %v5_1000885c, %v3_1000885c
  %v2_10008860 = and i32 %v6_1000885c, %v4_10008858
  store i32 %v2_10008860, i32* %v3_10008858, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 -2, { 1, 0, 6, 2, 7, 3, 8, 4, 5 }
}

define i32 @function_10008870() local_unnamed_addr {
dec_label_pc_10008870:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10008870 = load i32, i32* @r3, align 4
  %v3_10008870 = icmp eq i32 %v0_10008870, 0
  br i1 %v3_10008870, label %dec_label_pc_1000888c.thread, label %dec_label_pc_1000888c

dec_label_pc_1000888c.thread:                     ; preds = %dec_label_pc_10008870
  br label %dec_label_pc_10008898

dec_label_pc_1000888c:                            ; preds = %dec_label_pc_10008870
  %v3_10008890 = icmp ugt i32 %v0_10008870, -8
  br i1 %v3_10008890, label %dec_label_pc_100089a0, label %dec_label_pc_10008898

dec_label_pc_10008898:                            ; preds = %dec_label_pc_1000888c.thread, %dec_label_pc_1000888c
  %v0_1000889c16 = phi i32 [ 1, %dec_label_pc_1000888c.thread ], [ %v0_10008870, %dec_label_pc_1000888c ]
  %v1_1000889c = add i32 %v0_1000889c16, 4
  store i32 ptrtoint (i32* @global_var_1001aa4c.370 to i32), i32* @r29, align 4
  store i32 %v1_1000889c, i32* %stack_var_-40, align 4
  %v0_100088ac = call i32 @function_10009204()
  %v2_100088b4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_100088bc = call i32 @function_10008c68(i32* inttoptr (i32 268544384 to i32*), i32 %v2_100088b4)
  store i32 %v3_100088bc, i32* %r31.global-to-local, align 4
  %v0_100088c8 = call i32 @function_10009204()
  %v3_100088cc = icmp eq i32 %v3_100088bc, 0
  br i1 %v3_100088cc, label %dec_label_pc_100088d4, label %dec_label_pc_10008984.thread

dec_label_pc_10008984.thread:                     ; preds = %dec_label_pc_10008898
  br label %dec_label_pc_10008998

dec_label_pc_100088d4:                            ; preds = %dec_label_pc_10008898
  %v3_100088d8 = load i32, i32* @global_var_1001a9d0.373, align 4
  store i32 %v3_100088d8, i32* %r31.global-to-local, align 4
  %v3_100088dc = load i32, i32* %stack_var_-40, align 4
  %v2_100088e0 = icmp ult i32 %v3_100088dc, %v3_100088d8
  br i1 %v2_100088e0, label %dec_label_pc_100088f8, label %dec_label_pc_100088e8

dec_label_pc_100088e8:                            ; preds = %dec_label_pc_100088d4
  %v1_100088ec = sub i32 0, %v3_100088d8
  %v2_100088e8 = add i32 %v3_100088d8, -1
  %v1_100088f0 = add i32 %v2_100088e8, %v3_100088dc
  %v2_100088f4 = and i32 %v1_100088f0, %v1_100088ec
  store i32 %v2_100088f4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100088f8

dec_label_pc_100088f8:                            ; preds = %dec_label_pc_100088d4, %dec_label_pc_100088e8
  %v0_10008904 = call i32 @function_10009204()
  %v0_10008908 = load i32, i32* %r31.global-to-local, align 4
  store i32 268470544, i32* @lr, align 4
  %v1_1000890c = call i32 @function_10009748(i32 %v0_10008908)
  %v3_10008910 = icmp eq i32 %v1_1000890c, -1
  br i1 %v3_10008910, label %dec_label_pc_10008930, label %dec_label_pc_10008918

dec_label_pc_10008918:                            ; preds = %dec_label_pc_100088f8
  %v1_10008918 = add i32 %v1_1000890c, 3
  %v1_1000891c = call i32 @__asm_rlwinm(i32 %v1_10008918, i32 0, i32 0, i32 29)
  store i32 %v1_1000891c, i32* @r30, align 4
  %v4_10008920 = icmp eq i32 %v1_1000891c, %v1_1000890c
  br i1 %v4_10008920, label %dec_label_pc_10008930, label %dec_label_pc_10008928

dec_label_pc_10008928:                            ; preds = %dec_label_pc_10008918
  %v2_10008928 = sub i32 %v1_1000891c, %v1_1000890c
  store i32 268470576, i32* @lr, align 4
  %v1_1000892c = call i32 @function_10009748(i32 %v2_10008928)
  br label %dec_label_pc_10008930

dec_label_pc_10008930:                            ; preds = %dec_label_pc_10008918, %dec_label_pc_100088f8, %dec_label_pc_10008928
  %v0_10008938 = call i32 @function_10009204()
  %v0_1000893c = load i32, i32* @r30, align 4
  %v3_1000893c = icmp eq i32 %v0_1000893c, -1
  br i1 %v3_1000893c, label %dec_label_pc_100089a0, label %dec_label_pc_10008984

dec_label_pc_10008984:                            ; preds = %dec_label_pc_10008930
  store i32 ptrtoint (i32* @global_var_1001aa4c.370 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001a980 to i32), i32* @r29, align 4
  %v0_10008958 = call i32 @function_10009204()
  %v0_1000895c = load i32, i32* @r31, align 4
  %v0_10008960 = load i32, i32* @r30, align 4
  %v0_10008964 = load i32, i32* @r29, align 4
  store i32 268470636, i32* @lr, align 4
  %v3_10008968 = inttoptr i32 %v0_10008964 to i32*
  %v4_10008968 = call i32 @function_10008dec(i32* %v3_10008968, i32 %v0_10008960, i32 %v0_1000895c)
  %v0_1000896c = load i32, i32* @r29, align 4
  %v2_10008974 = inttoptr i32 %v0_1000896c to i32*
  %v3_10008974 = call i32 @function_10008c68(i32* %v2_10008974, i32 %v2_100088b4)
  store i32 %v3_10008974, i32* %r31.global-to-local, align 4
  %v0_10008980 = call i32 @function_10009204()
  %v3_10008984 = icmp eq i32 %v3_10008974, 0
  br i1 %v3_10008984, label %dec_label_pc_10008998.thread, label %dec_label_pc_10008998

dec_label_pc_10008998.thread:                     ; preds = %dec_label_pc_10008984
  br label %dec_label_pc_100089a0

dec_label_pc_10008998:                            ; preds = %dec_label_pc_10008984, %dec_label_pc_10008984.thread
  %v0_10008998.pr6 = phi i32 [ %v3_100088bc, %dec_label_pc_10008984.thread ], [ %v3_10008974, %dec_label_pc_10008984 ]
  %v3_1000898c = load i32, i32* %stack_var_-40, align 4
  %v2_10008990 = inttoptr i32 %v0_10008998.pr6 to i32*
  store i32 %v3_1000898c, i32* %v2_10008990, align 4
  %v0_10008994 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008994 = add i32 %v0_10008994, 4
  store i32 %v1_10008994, i32* @r31, align 4
  %v3_10008998 = icmp eq i32 %v1_10008994, 0
  br i1 %v3_10008998, label %dec_label_pc_100089a0, label %dec_label_pc_100089b0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_10008998.thread, %dec_label_pc_10008998, %dec_label_pc_10008930, %dec_label_pc_1000888c
  %v0_100089a0 = call i32 @function_100080c8()
  %v2_100089a8 = inttoptr i32 %v0_100089a0 to i32*
  store i32 12, i32* %v2_100089a8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100089b0

dec_label_pc_100089b0:                            ; preds = %dec_label_pc_10008998, %dec_label_pc_100089a0
  %v0_100089b4 = phi i32 [ %v1_10008994, %dec_label_pc_10008998 ], [ 0, %dec_label_pc_100089a0 ]
  ret i32 %v0_100089b4

; uselistorder directives
  uselistorder i32 %v1_10008994, { 1, 0, 2 }
  uselistorder i32 %v1_1000891c, { 1, 0, 2 }
  uselistorder i32 %v1_1000890c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100088d8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100088bc, { 1, 0, 2 }
  uselistorder i32 %v0_10008870, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_100089b0, { 1, 0 }
  uselistorder label %dec_label_pc_100089a0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008930, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100088f8, { 1, 0 }
  uselistorder label %dec_label_pc_10008898, { 1, 0 }
}

define i32 @function_100089c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089c8:
  %v3_100089c8 = icmp eq i32 %arg1, 0
  %v2_100089d8 = mul i32 %arg2, %arg1
  store i32 %v2_100089d8, i32* @r31, align 4
  br i1 %v3_100089c8, label %dec_label_pc_10008a04, label %dec_label_pc_100089e4

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_100089c8
  %v2_100089e4 = udiv i32 %v2_100089d8, %arg1
  store i32 0, i32* @r30, align 4
  %v4_100089ec = icmp eq i32 %v2_100089e4, %arg2
  br i1 %v4_100089ec, label %dec_label_pc_10008a04, label %dec_label_pc_100089f4

dec_label_pc_100089f4:                            ; preds = %dec_label_pc_100089e4
  %v0_100089f4 = call i32 @function_100080c8()
  %v2_100089fc = inttoptr i32 %v0_100089f4 to i32*
  store i32 12, i32* %v2_100089fc, align 4
  br label %dec_label_pc_10008a20

dec_label_pc_10008a04:                            ; preds = %dec_label_pc_100089e4, %dec_label_pc_100089c8
  store i32 %v2_100089d8, i32* @r3, align 4
  store i32 268470796, i32* @lr, align 4
  %v0_10008a08 = call i32 @function_10008870()
  %v0_10008a0c = load i32, i32* @r31, align 4
  store i32 %v0_10008a08, i32* @r30, align 4
  %v3_10008a10 = icmp eq i32 %v0_10008a08, 0
  br i1 %v3_10008a10, label %dec_label_pc_10008a20, label %dec_label_pc_10008a1c

dec_label_pc_10008a1c:                            ; preds = %dec_label_pc_10008a04
  store i32 268470816, i32* @lr, align 4
  %v3_10008a1c = call i32 @function_1000989c(i32 0, i32 %v0_10008a0c, i32 %v0_10008a0c)
  br label %dec_label_pc_10008a20

dec_label_pc_10008a20:                            ; preds = %dec_label_pc_10008a04, %dec_label_pc_100089f4, %dec_label_pc_10008a1c
  %v0_10008a24 = load i32, i32* @r30, align 4
  ret i32 %v0_10008a24

; uselistorder directives
  uselistorder i32 %v0_10008a0c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008a20, { 2, 0, 1 }
}

define i32 @function_10008a38() local_unnamed_addr {
dec_label_pc_10008a38:
  %r27.global-to-local = alloca i32, align 4
  %v0_10008a38 = load i32, i32* @r3, align 4
  %v3_10008a38 = icmp eq i32 %v0_10008a38, 0
  br i1 %v3_10008a38, label %dec_label_pc_10008b24, label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a38
  %v1_10008a54 = add i32 %v0_10008a38, -4
  %v2_10008a54 = inttoptr i32 %v1_10008a54 to i32*
  %v3_10008a54 = load i32, i32* %v2_10008a54, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_10008a68 = call i32 @function_10009204()
  store i32 268470908, i32* @lr, align 4
  %v4_10008a78 = call i32 @function_10008dec(i32* nonnull @global_var_1001a980, i32 %v1_10008a54, i32 %v3_10008a54)
  %v3_10008a80 = load i32, i32* @global_var_1001a9d0.373, align 4
  store i32 %v4_10008a78, i32* @r29, align 4
  %v1_10008a88 = inttoptr i32 %v4_10008a78 to i32*
  %v2_10008a88 = load i32, i32* %v1_10008a88, align 4
  store i32 %v2_10008a88, i32* %r27.global-to-local, align 4
  %v1_10008a8c = mul i32 %v3_10008a80, 8
  %v2_10008a90 = icmp ult i32 %v2_10008a88, %v1_10008a8c
  br i1 %v2_10008a90, label %dec_label_pc_10008ac4, label %dec_label_pc_10008a98

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_10008a50
  %v0_10008aa8 = call i32 @function_10009204()
  store i32 268470964, i32* @lr, align 4
  %v1_10008ab0 = call i32 @function_10009748(i32 0)
  %v0_10008ab4 = load i32, i32* @r31, align 4
  %v4_10008ab4 = icmp eq i32 %v0_10008ab4, %v1_10008ab0
  br i1 %v4_10008ab4, label %dec_label_pc_10008acc, label %dec_label_pc_10008abc

dec_label_pc_10008abc:                            ; preds = %dec_label_pc_10008a98
  %v0_10008ac0 = call i32 @function_10009204()
  br label %dec_label_pc_10008ac4

dec_label_pc_10008ac4:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_10008abc
  br label %dec_label_pc_10008b20

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008a98
  %v0_10008acc = load i32, i32* @r29, align 4
  %v1_10008acc = add i32 %v0_10008acc, 4
  %v2_10008acc = inttoptr i32 %v1_10008acc to i32*
  %v3_10008acc = load i32, i32* %v2_10008acc, align 4
  %v3_10008ad0 = icmp eq i32 %v3_10008acc, 0
  br i1 %v3_10008ad0, label %dec_label_pc_10008ae0, label %dec_label_pc_10008ad8

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008acc
  %v1_10008ad8 = add i32 %v0_10008acc, 8
  %v2_10008ad8 = inttoptr i32 %v1_10008ad8 to i32*
  %v3_10008ad8 = load i32, i32* %v2_10008ad8, align 4
  %v2_10008adc = add i32 %v3_10008acc, 8
  %v3_10008adc = inttoptr i32 %v2_10008adc to i32*
  store i32 %v3_10008ad8, i32* %v3_10008adc, align 4
  %v0_10008ae0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008ae0

dec_label_pc_10008ae0:                            ; preds = %dec_label_pc_10008acc, %dec_label_pc_10008ad8
  %v0_10008ae0 = phi i32 [ %v0_10008acc, %dec_label_pc_10008acc ], [ %v0_10008ae0.pre, %dec_label_pc_10008ad8 ]
  %v1_10008ae0 = add i32 %v0_10008ae0, 8
  %v2_10008ae0 = inttoptr i32 %v1_10008ae0 to i32*
  %v3_10008ae0 = load i32, i32* %v2_10008ae0, align 4
  %v1_10008ae4 = add i32 %v0_10008ae0, 4
  %v2_10008ae4 = inttoptr i32 %v1_10008ae4 to i32*
  %v3_10008ae4 = load i32, i32* %v2_10008ae4, align 4
  %v3_10008ae8 = icmp eq i32 %v3_10008ae0, 0
  br i1 %v3_10008ae8, label %dec_label_pc_10008af8, label %dec_label_pc_10008af0

dec_label_pc_10008af0:                            ; preds = %dec_label_pc_10008ae0
  %v2_10008af0 = add i32 %v3_10008ae0, 4
  %v3_10008af0 = inttoptr i32 %v2_10008af0 to i32*
  store i32 %v3_10008ae4, i32* %v3_10008af0, align 4
  br label %dec_label_pc_10008afc

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008ae0
  store i32 %v3_10008ae4, i32* @global_var_1001a980, align 4
  br label %dec_label_pc_10008afc

dec_label_pc_10008afc:                            ; preds = %dec_label_pc_10008af0, %dec_label_pc_10008af8
  %v0_10008b04 = call i32 @function_10009204()
  %v0_10008b08 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008b08 = load i32, i32* @r29, align 4
  %v0_10008b10 = load i32, i32* @r31, align 4
  %v2_10008b08 = sub i32 12, %v0_10008b08
  %v1_10008b0c = add i32 %v2_10008b08, %v1_10008b08
  %v2_10008b10 = sub i32 %v1_10008b0c, %v0_10008b10
  store i32 268471064, i32* @lr, align 4
  %v1_10008b14 = call i32 @function_10009748(i32 %v2_10008b10)
  br label %dec_label_pc_10008b20

dec_label_pc_10008b20:                            ; preds = %dec_label_pc_10008ac4, %dec_label_pc_10008afc
  %v0_10008b20 = call i32 @function_10009204()
  br label %dec_label_pc_10008b24

dec_label_pc_10008b24:                            ; preds = %dec_label_pc_10008a38, %dec_label_pc_10008b20
  %.0 = phi i32 [ undef, %dec_label_pc_10008a38 ], [ %v0_10008b20, %dec_label_pc_10008b20 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10008ae0, { 1, 0 }
  uselistorder i32 (i32)* @function_10009748, { 1, 0, 3, 2 }
  uselistorder i32* @r26, { 59, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder label %dec_label_pc_10008b24, { 1, 0 }
  uselistorder label %dec_label_pc_10008b20, { 1, 0 }
  uselistorder label %dec_label_pc_10008afc, { 1, 0 }
  uselistorder label %dec_label_pc_10008ae0, { 1, 0 }
  uselistorder label %dec_label_pc_10008ac4, { 1, 0 }
}

define i32 @function_10008b38(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008b38:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10008b38 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10008b38, label %dec_label_pc_10008b54, label %dec_label_pc_10008b60

dec_label_pc_10008b54:                            ; preds = %dec_label_pc_10008b38
  store i32 ptrtoint ([3 x i8]* @global_var_10008b58.378 to i32), i32* @lr, align 4
  %v0_10008b54 = call i32 @function_10008a38()
  br label %dec_label_pc_10008b6c

dec_label_pc_10008b60:                            ; preds = %dec_label_pc_10008b38
  %v3_10008b60 = icmp eq i32 %arg1, 0
  br i1 %v3_10008b60, label %dec_label_pc_10008b6c, label %dec_label_pc_10008b78

dec_label_pc_10008b6c:                            ; preds = %dec_label_pc_10008b60, %dec_label_pc_10008b54
  %storemerge = phi i32 [ 0, %dec_label_pc_10008b54 ], [ %arg2, %dec_label_pc_10008b60 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268471152, i32* @lr, align 4
  %v0_10008b6c = call i32 @function_10008870()
  store i32 %v0_10008b6c, i32* @r28, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008b78:                            ; preds = %dec_label_pc_10008b60
  %v1_10008b78 = add i32 %arg2, 7
  %v1_10008b7c = add i32 %arg1, -4
  store i32 %v1_10008b7c, i32* %r27.global-to-local, align 4
  %v1_10008b80 = call i32 @__asm_rlwinm(i32 %v1_10008b78, i32 0, i32 0, i32 29)
  store i32 %v1_10008b80, i32* @r31, align 4
  %v2_10008b84 = inttoptr i32 %v1_10008b7c to i32*
  %v3_10008b84 = load i32, i32* %v2_10008b84, align 4
  store i32 %v3_10008b84, i32* @r30, align 4
  %v2_10008b88 = icmp ugt i32 %v1_10008b80, 11
  br i1 %v2_10008b88, label %dec_label_pc_10008b94, label %dec_label_pc_10008b90

dec_label_pc_10008b90:                            ; preds = %dec_label_pc_10008b78
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_10008b94

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008b78, %dec_label_pc_10008b90
  %v0_10008c14 = phi i32 [ %v1_10008b80, %dec_label_pc_10008b78 ], [ 12, %dec_label_pc_10008b90 ]
  %v3_10008b94 = icmp ugt i32 %v0_10008c14, %v3_10008b84
  br i1 %v3_10008b94, label %dec_label_pc_10008b9c, label %dec_label_pc_10008c14

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b94
  %v0_10008ba8 = call i32 @function_10009204()
  %v0_10008bb0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008bb0 = load i32, i32* @r30, align 4
  %v2_10008bb0 = add i32 %v1_10008bb0, %v0_10008bb0
  %v1_10008bb4 = load i32, i32* @r31, align 4
  %v2_10008bb4 = sub i32 %v1_10008bb4, %v1_10008bb0
  %v4_10008bbc = call i32 @function_10008d08(i32* nonnull @global_var_1001a980, i32 %v2_10008bb0, i32 %v2_10008bb4)
  store i32 %v4_10008bbc, i32* %r27.global-to-local, align 4
  %v0_10008bc8 = call i32 @function_10009204()
  %v3_10008bcc = icmp eq i32 %v4_10008bbc, 0
  br i1 %v3_10008bcc, label %dec_label_pc_10008be0, label %dec_label_pc_10008bd4

dec_label_pc_10008bd4:                            ; preds = %dec_label_pc_10008b9c
  %v0_10008bd4 = load i32, i32* @r30, align 4
  %v2_10008bd4 = add i32 %v0_10008bd4, %v4_10008bbc
  %v1_10008bd8 = load i32, i32* @r28, align 4
  %v2_10008bd8 = add i32 %v1_10008bd8, -4
  %v3_10008bd8 = inttoptr i32 %v2_10008bd8 to i32*
  store i32 %v2_10008bd4, i32* %v3_10008bd8, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008be0:                            ; preds = %dec_label_pc_10008b9c
  %v0_10008be0 = load i32, i32* @r31, align 4
  %v1_10008be0 = add i32 %v0_10008be0, -4
  store i32 %v1_10008be0, i32* @r3, align 4
  store i32 268471272, i32* @lr, align 4
  %v0_10008be4 = call i32 @function_10008870()
  store i32 %v0_10008be4, i32* @r3, align 4
  store i32 %v0_10008be4, i32* @r31, align 4
  %v3_10008be8 = icmp eq i32 %v0_10008be4, 0
  br i1 %v3_10008be8, label %dec_label_pc_10008bf0, label %dec_label_pc_10008bf8

dec_label_pc_10008bf0:                            ; preds = %dec_label_pc_10008be0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008bf8:                            ; preds = %dec_label_pc_10008be0
  %v0_10008bf8 = load i32, i32* @r28, align 4
  store i32 %v0_10008bf8, i32* @r4, align 4
  %v0_10008bfc = load i32, i32* @r30, align 4
  %v1_10008bfc = add i32 %v0_10008bfc, -4
  store i32 %v1_10008bfc, i32* @r5, align 4
  store i32 268471300, i32* @lr, align 4
  %v0_10008c00 = call i32 @function_10009800()
  %v0_10008c04 = load i32, i32* @r28, align 4
  store i32 %v0_10008c04, i32* @r3, align 4
  store i32 268471308, i32* @lr, align 4
  %v0_10008c08 = call i32 @function_10008a38()
  %v0_10008c0c = load i32, i32* @r31, align 4
  store i32 %v0_10008c0c, i32* @r28, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008c14:                            ; preds = %dec_label_pc_10008b94
  %v1_10008c14 = add i32 %v0_10008c14, 28
  %v3_10008c18 = icmp ugt i32 %v1_10008c14, %v3_10008b84
  br i1 %v3_10008c18, label %dec_label_pc_10008c50, label %dec_label_pc_10008c20

dec_label_pc_10008c20:                            ; preds = %dec_label_pc_10008c14
  store i32 ptrtoint (i32* @global_var_1001aa4c.370 to i32), i32* @r29, align 4
  %v0_10008c2c = call i32 @function_10009204()
  %v0_10008c34 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008c34 = load i32, i32* @r31, align 4
  %v2_10008c34 = add i32 %v1_10008c34, %v0_10008c34
  %v1_10008c38 = load i32, i32* @r30, align 4
  %v2_10008c38 = sub i32 %v1_10008c38, %v1_10008c34
  store i32 268471364, i32* @lr, align 4
  %v4_10008c40 = call i32 @function_10008dec(i32* nonnull @global_var_1001a980, i32 %v2_10008c34, i32 %v2_10008c38)
  %v0_10008c48 = call i32 @function_10009204()
  %v0_10008c4c = load i32, i32* @r31, align 4
  %v1_10008c4c = load i32, i32* @r28, align 4
  %v2_10008c4c = add i32 %v1_10008c4c, -4
  %v3_10008c4c = inttoptr i32 %v2_10008c4c to i32*
  store i32 %v0_10008c4c, i32* %v3_10008c4c, align 4
  br label %dec_label_pc_10008c50

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c14, %dec_label_pc_10008bf8, %dec_label_pc_10008bf0, %dec_label_pc_10008bd4, %dec_label_pc_10008b6c, %dec_label_pc_10008c20
  %v0_10008c54 = load i32, i32* @r28, align 4
  ret i32 %v0_10008c54

; uselistorder directives
  uselistorder i32 %v1_10008c34, { 1, 0 }
  uselistorder i32 %v4_10008bbc, { 1, 0, 2 }
  uselistorder i32 %v1_10008bb0, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32)* @function_10008dec, { 0, 2, 1 }
  uselistorder i32* @global_var_1001a980, { 0, 1, 3, 2, 4 }
  uselistorder i32 7, { 86, 19, 20, 43, 21, 22, 44, 45, 23, 24, 46, 0, 47, 25, 26, 48, 27, 28, 49, 29, 50, 30, 51, 31, 52, 1, 53, 2, 54, 32, 33, 55, 34, 56, 3, 57, 4, 58, 5, 59, 35, 60, 36, 61, 37, 62, 38, 63, 39, 64, 40, 65, 6, 66, 7, 67, 8, 68, 41, 69, 9, 70, 10, 71, 72, 73, 11, 74, 75, 12, 76, 77, 78, 13, 14, 79, 15, 80, 16, 81, 42, 82, 83, 17, 84, 85, 18, 87 }
  uselistorder i32 ()* @function_10008870, { 2, 1, 0, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 ()* @function_10008a38, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008c50, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10008b94, { 1, 0 }
}

define i32 @function_10008c68(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c68:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10008c68 = inttoptr i32 %arg2 to i32*
  %v2_10008c68 = load i32, i32* %v1_10008c68, align 4
  %v1_10008c6c = add i32 %v2_10008c68, 3
  store i32 %v1_10008c6c, i32* %r9.global-to-local, align 4
  %v1_10008c70 = call i32 @__asm_rlwinm(i32 %v1_10008c6c, i32 0, i32 0, i32 29)
  %v2_10008c74 = icmp ugt i32 %v1_10008c70, 11
  br i1 %v2_10008c74, label %dec_label_pc_10008cf8.preheader, label %dec_label_pc_10008c7c

dec_label_pc_10008c7c:                            ; preds = %dec_label_pc_10008c68
  br label %dec_label_pc_10008cf8.preheader

dec_label_pc_10008cf8.preheader:                  ; preds = %dec_label_pc_10008c68, %dec_label_pc_10008c7c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10008c7c ], [ %v1_10008c70, %dec_label_pc_10008c68 ]
  %v0_10008cdc = phi i32 [ 12, %dec_label_pc_10008c7c ], [ %v1_10008c70, %dec_label_pc_10008c68 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10008cf85 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10008cf85, label %dec_label_pc_10008d00, label %dec_label_pc_10008c88

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008cf8.preheader, %dec_label_pc_10008cf4
  %v0_10008cf4 = phi i32 [ %storemerge, %dec_label_pc_10008cf4 ], [ %storemerge2, %dec_label_pc_10008cf8.preheader ]
  %v1_10008c88 = inttoptr i32 %v0_10008cf4 to i32*
  %v2_10008c88 = load i32, i32* %v1_10008c88, align 4
  store i32 %v2_10008c88, i32* %r10.global-to-local, align 4
  %v2_10008c8c = icmp ult i32 %v2_10008c88, %v0_10008cdc
  br i1 %v2_10008c8c, label %dec_label_pc_10008cf4, label %dec_label_pc_10008c94

dec_label_pc_10008c94:                            ; preds = %dec_label_pc_10008c88
  %v1_10008c94 = add i32 %v0_10008cdc, 44
  %v2_10008c98 = icmp ult i32 %v2_10008c88, %v1_10008c94
  br i1 %v2_10008c98, label %dec_label_pc_10008ca0, label %dec_label_pc_10008cdc

dec_label_pc_10008ca0:                            ; preds = %dec_label_pc_10008c94
  %v1_10008ca0 = add i32 %v0_10008cf4, 4
  %v2_10008ca0 = inttoptr i32 %v1_10008ca0 to i32*
  %v3_10008ca0 = load i32, i32* %v2_10008ca0, align 4
  store i32 %v3_10008ca0, i32* %r11.global-to-local, align 4
  %v3_10008ca4 = icmp eq i32 %v3_10008ca0, 0
  br i1 %v3_10008ca4, label %dec_label_pc_10008cb4, label %dec_label_pc_10008cac

dec_label_pc_10008cac:                            ; preds = %dec_label_pc_10008ca0
  %v1_10008cac = add i32 %v0_10008cf4, 8
  %v2_10008cac = inttoptr i32 %v1_10008cac to i32*
  %v3_10008cac = load i32, i32* %v2_10008cac, align 4
  %v2_10008cb0 = add i32 %v3_10008ca0, 8
  %v3_10008cb0 = inttoptr i32 %v2_10008cb0 to i32*
  store i32 %v3_10008cac, i32* %v3_10008cb0, align 4
  %v0_10008cb4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10008cd0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008cb4

dec_label_pc_10008cb4:                            ; preds = %dec_label_pc_10008ca0, %dec_label_pc_10008cac
  %v0_10008cd0 = phi i32 [ %v2_10008c88, %dec_label_pc_10008ca0 ], [ %v0_10008cd0.pre, %dec_label_pc_10008cac ]
  %v0_10008cb4 = phi i32 [ %v0_10008cf4, %dec_label_pc_10008ca0 ], [ %v0_10008cb4.pre, %dec_label_pc_10008cac ]
  %v1_10008cb4 = add i32 %v0_10008cb4, 8
  %v2_10008cb4 = inttoptr i32 %v1_10008cb4 to i32*
  %v3_10008cb4 = load i32, i32* %v2_10008cb4, align 4
  %v1_10008cb8 = add i32 %v0_10008cb4, 4
  %v2_10008cb8 = inttoptr i32 %v1_10008cb8 to i32*
  %v3_10008cb8 = load i32, i32* %v2_10008cb8, align 4
  %v3_10008cbc = icmp eq i32 %v3_10008cb4, 0
  store i32 %v0_10008cd0, i32* %r11.global-to-local, align 4
  br i1 %v3_10008cbc, label %dec_label_pc_10008cd0, label %dec_label_pc_10008cc4

dec_label_pc_10008cc4:                            ; preds = %dec_label_pc_10008cb4
  %v2_10008cc8 = add i32 %v3_10008cb4, 4
  %v3_10008cc8 = inttoptr i32 %v2_10008cc8 to i32*
  store i32 %v3_10008cb8, i32* %v3_10008cc8, align 4
  br label %dec_label_pc_10008ce4

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008cb4
  store i32 %v3_10008cb8, i32* %arg1, align 4
  br label %dec_label_pc_10008ce4

dec_label_pc_10008cdc:                            ; preds = %dec_label_pc_10008c94
  %v2_10008cdc = sub i32 %v2_10008c88, %v0_10008cdc
  store i32 %v2_10008cdc, i32* %v1_10008c88, align 4
  br label %dec_label_pc_10008ce4

dec_label_pc_10008ce4:                            ; preds = %dec_label_pc_10008cd0, %dec_label_pc_10008cc4, %dec_label_pc_10008cdc
  %v0_10008ce4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008ce4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008ce4 = sub i32 %v1_10008ce4, %v0_10008ce4
  store i32 %v2_10008ce4, i32* %r9.global-to-local, align 4
  %v0_10008ce8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10008ce8, i32* %v1_10008c68, align 4
  %v0_10008cec = load i32, i32* %r9.global-to-local, align 4
  %v1_10008cec = add i32 %v0_10008cec, 12
  ret i32 %v1_10008cec

dec_label_pc_10008cf4:                            ; preds = %dec_label_pc_10008c88
  %v1_10008cf4 = add i32 %v0_10008cf4, 4
  %storemerge.in = inttoptr i32 %v1_10008cf4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10008cf8 = icmp eq i32 %storemerge, 0
  br i1 %v3_10008cf8, label %dec_label_pc_10008cf8.dec_label_pc_10008d00_crit_edge, label %dec_label_pc_10008c88

dec_label_pc_10008cf8.dec_label_pc_10008d00_crit_edge: ; preds = %dec_label_pc_10008cf4
  br label %dec_label_pc_10008d00

dec_label_pc_10008d00:                            ; preds = %dec_label_pc_10008cf8.dec_label_pc_10008d00_crit_edge, %dec_label_pc_10008cf8.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10008cb4, { 1, 0 }
  uselistorder i32 %v2_10008c88, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10008cf4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10008cdc, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32 11, { 32, 31, 0, 4, 5, 12, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 8, 21, 9, 22, 10, 23, 24, 25, 26, 1, 27, 28, 2, 29, 30, 11, 3 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008ce4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10008c88, { 1, 0 }
  uselistorder label %dec_label_pc_10008cf8.preheader, { 1, 0 }
}

define i32 @function_10008d08(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008d08:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10008d08 = load i32, i32* %arg1, align 4
  store i32 %v2_10008d08, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_10008d10 = add i32 %arg3, 3
  %v3_10008d943 = icmp eq i32 %v2_10008d08, 0
  br i1 %v3_10008d943, label %dec_label_pc_10008d9c, label %dec_label_pc_10008d18

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008d08, %dec_label_pc_10008d90
  %v0_10008d90 = phi i32 [ %v3_10008d90, %dec_label_pc_10008d90 ], [ %v2_10008d08, %dec_label_pc_10008d08 ]
  %v1_10008d18 = inttoptr i32 %v0_10008d90 to i32*
  %v2_10008d18 = load i32, i32* %v1_10008d18, align 4
  %v2_10008d1c = sub i32 %v0_10008d90, %v2_10008d18
  %v1_10008d20 = add i32 %v2_10008d1c, 12
  %v3_10008d24 = icmp ugt i32 %v1_10008d20, %arg2
  br i1 %v3_10008d24, label %dec_label_pc_10008d90, label %dec_label_pc_10008d2c

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008d18
  %v4_10008d24 = icmp eq i32 %v1_10008d20, %arg2
  br i1 %v4_10008d24, label %dec_label_pc_10008d34, label %dec_label_pc_10008d9c

dec_label_pc_10008d34:                            ; preds = %dec_label_pc_10008d2c
  %v1_10008d34 = call i32 @__asm_rlwinm(i32 %v1_10008d10, i32 0, i32 0, i32 29)
  %v2_10008d38 = icmp ult i32 %v2_10008d18, %v1_10008d34
  br i1 %v2_10008d38, label %dec_label_pc_10008d9c, label %dec_label_pc_10008d40

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008d34
  %v1_10008d40 = add i32 %v1_10008d34, 44
  %v2_10008d44 = icmp ult i32 %v2_10008d18, %v1_10008d40
  br i1 %v2_10008d44, label %dec_label_pc_10008d4c, label %dec_label_pc_10008d80

dec_label_pc_10008d4c:                            ; preds = %dec_label_pc_10008d40
  %v0_10008d4c = load i32, i32* %r11.global-to-local, align 4
  %v1_10008d4c = add i32 %v0_10008d4c, 4
  %v2_10008d4c = inttoptr i32 %v1_10008d4c to i32*
  %v3_10008d4c = load i32, i32* %v2_10008d4c, align 4
  %v3_10008d50 = icmp eq i32 %v3_10008d4c, 0
  br i1 %v3_10008d50, label %dec_label_pc_10008d60, label %dec_label_pc_10008d58

dec_label_pc_10008d58:                            ; preds = %dec_label_pc_10008d4c
  %v1_10008d58 = add i32 %v0_10008d4c, 8
  %v2_10008d58 = inttoptr i32 %v1_10008d58 to i32*
  %v3_10008d58 = load i32, i32* %v2_10008d58, align 4
  %v2_10008d5c = add i32 %v3_10008d4c, 8
  %v3_10008d5c = inttoptr i32 %v2_10008d5c to i32*
  store i32 %v3_10008d58, i32* %v3_10008d5c, align 4
  %v0_10008d60.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008d60

dec_label_pc_10008d60:                            ; preds = %dec_label_pc_10008d4c, %dec_label_pc_10008d58
  %v0_10008d60 = phi i32 [ %v0_10008d4c, %dec_label_pc_10008d4c ], [ %v0_10008d60.pre, %dec_label_pc_10008d58 ]
  %v1_10008d60 = add i32 %v0_10008d60, 8
  %v2_10008d60 = inttoptr i32 %v1_10008d60 to i32*
  %v3_10008d60 = load i32, i32* %v2_10008d60, align 4
  %v1_10008d64 = add i32 %v0_10008d60, 4
  %v2_10008d64 = inttoptr i32 %v1_10008d64 to i32*
  %v3_10008d64 = load i32, i32* %v2_10008d64, align 4
  %v3_10008d68 = icmp eq i32 %v3_10008d60, 0
  br i1 %v3_10008d68, label %dec_label_pc_10008d78, label %dec_label_pc_10008d70

dec_label_pc_10008d70:                            ; preds = %dec_label_pc_10008d60
  %v2_10008d70 = add i32 %v3_10008d60, 4
  %v3_10008d70 = inttoptr i32 %v2_10008d70 to i32*
  store i32 %v3_10008d64, i32* %v3_10008d70, align 4
  ret i32 %v2_10008d18

dec_label_pc_10008d78:                            ; preds = %dec_label_pc_10008d60
  %v1_10008d78 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008d78 = inttoptr i32 %v1_10008d78 to i32*
  store i32 %v3_10008d64, i32* %v2_10008d78, align 4
  ret i32 %v2_10008d18

dec_label_pc_10008d80:                            ; preds = %dec_label_pc_10008d40
  %v2_10008d80 = sub i32 %v2_10008d18, %v1_10008d34
  %v1_10008d88 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008d88 = inttoptr i32 %v1_10008d88 to i32*
  store i32 %v2_10008d80, i32* %v2_10008d88, align 4
  ret i32 %v1_10008d34

dec_label_pc_10008d90:                            ; preds = %dec_label_pc_10008d18
  %v1_10008d90 = add i32 %v0_10008d90, 4
  %v2_10008d90 = inttoptr i32 %v1_10008d90 to i32*
  %v3_10008d90 = load i32, i32* %v2_10008d90, align 4
  store i32 %v3_10008d90, i32* %r11.global-to-local, align 4
  %v3_10008d94 = icmp eq i32 %v3_10008d90, 0
  br i1 %v3_10008d94, label %dec_label_pc_10008d94.dec_label_pc_10008d9c.loopexit_crit_edge, label %dec_label_pc_10008d18

dec_label_pc_10008d94.dec_label_pc_10008d9c.loopexit_crit_edge: ; preds = %dec_label_pc_10008d90
  br label %dec_label_pc_10008d9c

dec_label_pc_10008d9c:                            ; preds = %dec_label_pc_10008d08, %dec_label_pc_10008d94.dec_label_pc_10008d9c.loopexit_crit_edge, %dec_label_pc_10008d2c, %dec_label_pc_10008d34
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10008d90, { 1, 2, 0 }
  uselistorder i32 %v0_10008d60, { 1, 0 }
  uselistorder i32 %v1_10008d34, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008d18, { 0, 3, 2, 4, 1, 5 }
  uselistorder i32 %v0_10008d90, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10008d9c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10008d60, { 1, 0 }
  uselistorder label %dec_label_pc_10008d18, { 1, 0 }
}

define i32 @function_10008da4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008da4:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008da4 = icmp eq i32 %arg3, 0
  %v2_10008da8 = add i32 %arg2, 4
  %v3_10008da8 = inttoptr i32 %v2_10008da8 to i32*
  store i32 %arg4, i32* %v3_10008da8, align 4
  %v2_10008dac = add i32 %arg2, 8
  %v3_10008dac = inttoptr i32 %v2_10008dac to i32*
  store i32 %arg3, i32* %v3_10008dac, align 4
  br i1 %v3_10008da4, label %dec_label_pc_10008dbc, label %dec_label_pc_10008db4

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008da4
  %v2_10008db4 = add i32 %arg3, 4
  %v3_10008db4 = inttoptr i32 %v2_10008db4 to i32*
  store i32 %arg2, i32* %v3_10008db4, align 4
  br label %dec_label_pc_10008dc0

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008da4
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008dc0

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008db4, %dec_label_pc_10008dbc
  %v3_10008dc0 = icmp eq i32 %arg4, 0
  %v0_10008dc4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008dc0, i32 %v0_10008dc4)
  %v2_10008dc8 = add i32 %arg4, 8
  %v3_10008dc8 = inttoptr i32 %v2_10008dc8 to i32*
  store i32 %arg2, i32* %v3_10008dc8, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10008dc0, { 1, 0 }
}

define i32 @function_10008dd0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008dd0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008dd0 = icmp eq i32 %arg3, 0
  br i1 %v3_10008dd0, label %dec_label_pc_10008de0, label %dec_label_pc_10008dd8

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008dd0
  %v2_10008dd8 = add i32 %arg3, 4
  %v3_10008dd8 = inttoptr i32 %v2_10008dd8 to i32*
  store i32 %arg2, i32* %v3_10008dd8, align 4
  br label %dec_label_pc_10008de4

dec_label_pc_10008de0:                            ; preds = %dec_label_pc_10008dd0
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008de4

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008dd8, %dec_label_pc_10008de0
  %v2_10008de4 = add i32 %arg2, 8
  %v3_10008de4 = inttoptr i32 %v2_10008de4 to i32*
  store i32 %arg3, i32* %v3_10008de4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008de4, { 1, 0 }
}

define i32 @function_10008dec(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008dec:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10008e04 = load i32, i32* %arg1, align 4
  store i32 %v2_10008e04, i32* @r31, align 4
  %v2_10008e08 = add i32 %arg3, %arg2
  store i32 %v2_10008e08, i32* %r3.global-to-local, align 4
  %v3_10008e1c7 = icmp eq i32 %v2_10008e04, 0
  %v1_10008e208 = add i32 %v2_10008e04, 12
  %tmp69 = icmp uge i32 %v1_10008e208, %arg2
  %or.cond10 = or i1 %v3_10008e1c7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_10008e2c, label %dec_label_pc_10008e14

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008dec, %dec_label_pc_10008e14
  %v0_10008e7411 = phi i32 [ %v3_10008e18, %dec_label_pc_10008e14 ], [ %v2_10008e04, %dec_label_pc_10008dec ]
  store i32 %v0_10008e7411, i32* %r11.global-to-local, align 4
  %v1_10008e18 = add i32 %v0_10008e7411, 4
  %v2_10008e18 = inttoptr i32 %v1_10008e18 to i32*
  %v3_10008e18 = load i32, i32* %v2_10008e18, align 4
  store i32 %v3_10008e18, i32* @r31, align 4
  %v3_10008e1c = icmp eq i32 %v3_10008e18, 0
  %v1_10008e20 = add i32 %v3_10008e18, 12
  %tmp6 = icmp uge i32 %v1_10008e20, %arg2
  %or.cond = or i1 %v3_10008e1c, %tmp6
  br i1 %or.cond, label %dec_label_pc_10008e2c, label %dec_label_pc_10008e14

dec_label_pc_10008e2c:                            ; preds = %dec_label_pc_10008e14, %dec_label_pc_10008dec
  %v0_10008e68.lcssa = phi i32 [ 0, %dec_label_pc_10008dec ], [ %v0_10008e7411, %dec_label_pc_10008e14 ]
  %v0_10008e74.lcssa = phi i32 [ %v2_10008e04, %dec_label_pc_10008dec ], [ %v3_10008e18, %dec_label_pc_10008e14 ]
  %v3_10008e1c.lcssa = phi i1 [ %v3_10008e1c7, %dec_label_pc_10008dec ], [ %v3_10008e1c, %dec_label_pc_10008e14 ]
  br i1 %v3_10008e1c.lcssa, label %dec_label_pc_10008ee4, label %dec_label_pc_10008e34

dec_label_pc_10008e34:                            ; preds = %dec_label_pc_10008e2c
  %v1_10008e34 = inttoptr i32 %v0_10008e74.lcssa to i32*
  %v2_10008e34 = load i32, i32* %v1_10008e34, align 4
  %v2_10008e38 = sub i32 %v0_10008e74.lcssa, %v2_10008e34
  %v1_10008e3c = add i32 %v2_10008e38, 12
  %v3_10008e40 = icmp ugt i32 %v1_10008e3c, %v2_10008e08
  br i1 %v3_10008e40, label %dec_label_pc_10008ee4, label %dec_label_pc_10008e48

dec_label_pc_10008e48:                            ; preds = %dec_label_pc_10008e34
  %v4_10008e40 = icmp eq i32 %v1_10008e3c, %v2_10008e08
  %v2_10008e4c = add i32 %v2_10008e34, %arg3
  store i32 %v2_10008e4c, i32* @r29, align 4
  br i1 %v4_10008e40, label %dec_label_pc_10008e54, label %dec_label_pc_10008e84

dec_label_pc_10008e54:                            ; preds = %dec_label_pc_10008e48
  %v3_10008e54 = icmp eq i32 %v0_10008e68.lcssa, 0
  br i1 %v3_10008e54, label %dec_label_pc_10008ed8, label %dec_label_pc_10008e5c

dec_label_pc_10008e5c:                            ; preds = %dec_label_pc_10008e54
  %v1_10008e5c = add i32 %v0_10008e68.lcssa, 12
  %v4_10008e60 = icmp eq i32 %v1_10008e5c, %arg2
  br i1 %v4_10008e60, label %dec_label_pc_10008e68, label %dec_label_pc_10008ed8

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e5c
  %v1_10008e68 = inttoptr i32 %v0_10008e68.lcssa to i32*
  %v2_10008e68 = load i32, i32* %v1_10008e68, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10008e70 = add i32 %v0_10008e68.lcssa, 8
  %v2_10008e70 = inttoptr i32 %v1_10008e70 to i32*
  %v3_10008e70 = load i32, i32* %v2_10008e70, align 4
  %v2_10008e78 = add i32 %v2_10008e68, %v2_10008e4c
  store i32 %v2_10008e78, i32* @r29, align 4
  %v5_10008e7c = call i32 @function_10008dd0(i32* %arg1, i32 %v0_10008e74.lcssa, i32 %v3_10008e70, i32 %v2_10008e08)
  store i32 %v5_10008e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008ed8

dec_label_pc_10008e84:                            ; preds = %dec_label_pc_10008e48
  %v1_10008e84 = add i32 %v0_10008e74.lcssa, 4
  %v2_10008e84 = inttoptr i32 %v1_10008e84 to i32*
  %v3_10008e84 = load i32, i32* %v2_10008e84, align 4
  %v3_10008e88 = icmp eq i32 %v3_10008e84, 0
  br i1 %v3_10008e88, label %dec_label_pc_10008ec0, label %dec_label_pc_10008e90

dec_label_pc_10008e90:                            ; preds = %dec_label_pc_10008e84
  %v1_10008e90 = inttoptr i32 %v3_10008e84 to i32*
  %v2_10008e90 = load i32, i32* %v1_10008e90, align 4
  %v2_10008e94 = sub i32 %v3_10008e84, %v2_10008e90
  %v1_10008e98 = add i32 %v2_10008e94, 12
  %v4_10008e9c = icmp eq i32 %v2_10008e08, %v1_10008e98
  br i1 %v4_10008e9c, label %dec_label_pc_10008ea4, label %dec_label_pc_10008ec0

dec_label_pc_10008ea4:                            ; preds = %dec_label_pc_10008e90
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10008eb0 = add i32 %v2_10008e90, %v2_10008e4c
  store i32 %v2_10008eb0, i32* @r29, align 4
  store i32 %v3_10008e84, i32* @r31, align 4
  %v5_10008eb8 = call i32 @function_10008dd0(i32* %arg1, i32 %v3_10008e84, i32 %v0_10008e68.lcssa, i32 %v2_10008e08)
  store i32 %v5_10008eb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ec0:                            ; preds = %dec_label_pc_10008e90, %dec_label_pc_10008e84
  %v2_10008ec0 = add i32 %v0_10008e74.lcssa, %arg3
  store i32 %v2_10008ec0, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268472024, i32* @lr, align 4
  %v5_10008ed4 = call i32 @function_10008da4(i32* %arg1, i32 %v2_10008ec0, i32 %v0_10008e68.lcssa, i32 %v3_10008e84)
  store i32 %v5_10008ed4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008ed8

dec_label_pc_10008ed8:                            ; preds = %dec_label_pc_10008e5c, %dec_label_pc_10008e54, %dec_label_pc_10008ea4, %dec_label_pc_10008e68, %dec_label_pc_10008ec0
  %v0_10008ed8 = load i32, i32* @r31, align 4
  store i32 %v0_10008ed8, i32* @r30, align 4
  %v0_10008edc = load i32, i32* @r29, align 4
  %v2_10008edc = inttoptr i32 %v0_10008ed8 to i32*
  store i32 %v0_10008edc, i32* %v2_10008edc, align 4
  br label %dec_label_pc_10008f00

dec_label_pc_10008ee4:                            ; preds = %dec_label_pc_10008e34, %dec_label_pc_10008e2c
  %v2_10008ee4 = add i32 %v2_10008e08, -12
  %v3_10008ee4 = inttoptr i32 %v2_10008ee4 to i32*
  store i32 %arg3, i32* %v3_10008ee4, align 4
  %v0_10008ee8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008ee8 = add i32 %v0_10008ee8, -12
  store i32 %v1_10008ee8, i32* @r30, align 4
  %v0_10008eec = load i32, i32* %r11.global-to-local, align 4
  %v0_10008ef0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10008ef0, i32* %r3.global-to-local, align 4
  %v0_10008ef4 = load i32, i32* @r31, align 4
  store i32 268472064, i32* @lr, align 4
  %v4_10008efc = inttoptr i32 %v0_10008ef0 to i32*
  %v5_10008efc = call i32 @function_10008da4(i32* %v4_10008efc, i32 %v1_10008ee8, i32 %v0_10008eec, i32 %v0_10008ef4)
  store i32 %v5_10008efc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f00

dec_label_pc_10008f00:                            ; preds = %dec_label_pc_10008ed8, %dec_label_pc_10008ee4
  %v0_10008f04 = load i32, i32* @r30, align 4
  store i32 %v0_10008f04, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008f04

; uselistorder directives
  uselistorder i32 %v3_10008e84, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_10008e3c, { 1, 0 }
  uselistorder i32 %v0_10008e74.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10008e68.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10008e18, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10008e08, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 4, 10, 5, 6, 7, 8, 2, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008f00, { 1, 0 }
  uselistorder label %dec_label_pc_10008ed8, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008e14, { 1, 0 }
}

define i32 @function_10008f18() local_unnamed_addr {
dec_label_pc_10008f18:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008f30 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008f3c = load i32, i32* @r3, align 4
  store i32 %v0_10008f3c, i32* @r31, align 4
  store i32 %v2_10008f30, i32* @r3, align 4
  %v3_10008f48 = call i32 @function_1000920c(i32 %v2_10008f30, i32 ptrtoint ([3 x i8]* @global_var_10009204.382 to i32))
  %v0_10008f50 = call i32 @function_10009204()
  %v3_10008f58 = load i32, i32* @global_var_1001a9c4.383, align 4
  %v3_10008f5c = icmp eq i32 %v3_10008f58, 0
  br i1 %v3_10008f5c, label %dec_label_pc_10008f70, label %dec_label_pc_10008f64

dec_label_pc_10008f64:                            ; preds = %dec_label_pc_10008f18
  %v0_10008f64 = load i32, i32* @r31, align 4
  %v3_10008f6c = call i32 @unknown_0(i32 %v0_10008f64, i32 268566528)
  br label %dec_label_pc_10008f70

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f18, %dec_label_pc_10008f64
  store i32 %v2_10008f30, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_10008f78 = call i32 @function_1000920c(i32 %v2_10008f30, i32 1)
  store i32 %v2_10008f78, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008f80.385 to i32), i32* @lr, align 4
  %v1_10008f7c = call i32 @function_10009170(i32 %v2_10008f78)
  %v0_10008f94 = load i32, i32* @r31, align 4
  %v1_10008f98 = call i32 @function_100095a4(i32 %v0_10008f94)
  ret i32 %v1_10008f98

; uselistorder directives
  uselistorder i32 %v2_10008f30, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000920c, { 1, 0 }
  uselistorder label %dec_label_pc_10008f70, { 1, 0 }
}

define i32 @function_10008f9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008f9c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10008f9c = icmp eq i32 %arg1, 0
  br i1 %v3_10008f9c, label %dec_label_pc_10009150, label %dec_label_pc_10008fcc.lr.ph

dec_label_pc_10008fcc.lr.ph:                      ; preds = %dec_label_pc_10008f9c
  %v2_10008fc0 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10008fc0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10008fcc42 = add i32 %v2_10008fc0, 132
  %v3_10008fcc43 = inttoptr i32 %v2_10008fcc42 to i32*
  store i32 0, i32* %v3_10008fcc43, align 4
  %v0_10008fd044 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008fd045 = add i32 %v0_10008fd044, -1
  store i32 %v1_10008fd045, i32* %r11.global-to-local, align 4
  %v1_10008fd446 = mul i32 %v1_10008fd045, 4
  %v1_10008fd847 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008fd848 = add i32 %v1_10008fd847, %v1_10008fd446
  %v0_10008fdc49 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008fdc50 = add i32 %v0_10008fdc49, -1
  store i32 %v1_10008fdc50, i32* %ctr.global-to-local, align 4
  %v2_10008fdc51 = icmp eq i32 %v1_10008fdc50, 0
  br i1 %v2_10008fdc51, label %dec_label_pc_10008fe0, label %dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge

dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge: ; preds = %dec_label_pc_10008fcc.lr.ph, %dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge
  %v2_10008fd852 = phi i32 [ %v2_10008fd8, %dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge ], [ %v2_10008fd848, %dec_label_pc_10008fcc.lr.ph ]
  %v0_10008fcc.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008fcc = add i32 %v2_10008fd852, 8
  %v3_10008fcc = inttoptr i32 %v2_10008fcc to i32*
  store i32 %v0_10008fcc.pre, i32* %v3_10008fcc, align 4
  %v0_10008fd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008fd0 = add i32 %v0_10008fd0, -1
  store i32 %v1_10008fd0, i32* %r11.global-to-local, align 4
  %v1_10008fd4 = mul i32 %v1_10008fd0, 4
  %v1_10008fd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008fd8 = add i32 %v1_10008fd8, %v1_10008fd4
  %v0_10008fdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008fdc = add i32 %v0_10008fdc, -1
  store i32 %v1_10008fdc, i32* %ctr.global-to-local, align 4
  %v2_10008fdc = icmp eq i32 %v1_10008fdc, 0
  br i1 %v2_10008fdc, label %dec_label_pc_10008fe0, label %dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge, %dec_label_pc_10008fcc.lr.ph
  %v0_10008ff4.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10008fe0 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10008fe0, i32* @r29, align 4
  store i32 %v2_10008fe0, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10008ff4.pre, i32* %stack_var_-440, align 4
  %v0_10008ff8 = call i32 @function_10008820()
  store i32 %v0_10008ff8, i32* %r3.global-to-local, align 4
  %v1_10008ffc = icmp slt i32 %v0_10008ff8, 0
  br i1 %v1_10008ffc, label %dec_label_pc_10009158, label %dec_label_pc_10009004

dec_label_pc_10009004:                            ; preds = %dec_label_pc_10008fe0
  %v2_10009004 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10009004, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268472344, i32* @lr, align 4
  %v3_10009014 = call i32 @function_10007fc0(i32 0, i32 %v2_10008fe0, i32 %v2_10009004)
  store i32 %v3_10009014, i32* %r3.global-to-local, align 4
  %v3_10009018 = icmp eq i32 %v3_10009014, 0
  br i1 %v3_10009018, label %dec_label_pc_10009020, label %dec_label_pc_10009158

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10009004
  store i32 %v2_10009004, i32* %r3.global-to-local, align 4
  %v2_10009028 = call i32 @function_100087f8(i32 %v2_10009004, i32 17)
  store i32 %v2_10009028, i32* %r3.global-to-local, align 4
  %v3_1000902c = icmp eq i32 %v2_10009028, 0
  br i1 %v3_1000902c, label %dec_label_pc_1000904c.lr.ph, label %dec_label_pc_10009118

dec_label_pc_1000904c.lr.ph:                      ; preds = %dec_label_pc_10009020
  store i32 %v2_10008fc0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10008fcc43, align 4
  %v0_1000905033 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000905034 = add i32 %v0_1000905033, -1
  store i32 %v1_1000905034, i32* %r11.global-to-local, align 4
  %v1_1000905435 = mul i32 %v1_1000905034, 4
  %v1_1000905836 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000905837 = add i32 %v1_1000905836, %v1_1000905435
  %v0_1000905c38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000905c39 = add i32 %v0_1000905c38, -1
  store i32 %v1_1000905c39, i32* %ctr.global-to-local, align 4
  %v2_1000905c40 = icmp eq i32 %v1_1000905c39, 0
  br i1 %v2_1000905c40, label %dec_label_pc_10009060, label %dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge

dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge: ; preds = %dec_label_pc_1000904c.lr.ph, %dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge
  %v2_1000905841 = phi i32 [ %v2_10009058, %dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge ], [ %v2_1000905837, %dec_label_pc_1000904c.lr.ph ]
  %v0_1000904c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000904c = add i32 %v2_1000905841, 8
  %v3_1000904c = inttoptr i32 %v2_1000904c to i32*
  store i32 %v0_1000904c.pre, i32* %v3_1000904c, align 4
  %v0_10009050 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009050 = add i32 %v0_10009050, -1
  store i32 %v1_10009050, i32* %r11.global-to-local, align 4
  %v1_10009054 = mul i32 %v1_10009050, 4
  %v1_10009058 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009058 = add i32 %v1_10009058, %v1_10009054
  %v0_1000905c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000905c = add i32 %v0_1000905c, -1
  store i32 %v1_1000905c, i32* %ctr.global-to-local, align 4
  %v2_1000905c = icmp eq i32 %v1_1000905c, 0
  br i1 %v2_1000905c, label %dec_label_pc_10009060, label %dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge

dec_label_pc_10009060:                            ; preds = %dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge, %dec_label_pc_1000904c.lr.ph
  store i32 %v2_10008fe0, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10009068 = call i32 @function_10008820()
  store i32 %v0_10009068, i32* %r3.global-to-local, align 4
  %v1_1000906c = icmp slt i32 %v0_10009068, 0
  br i1 %v1_1000906c, label %dec_label_pc_10009158, label %dec_label_pc_10009074

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10009060
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000907c = ptrtoint i32* %stack_var_-176 to i32
  store i32 268472452, i32* @lr, align 4
  %v4_10009080 = call i32 @function_10009a20(i32 17, i32* null, i32 %v2_1000907c)
  store i32 %v4_10009080, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10009080, -1
  br i1 %tmp30, label %dec_label_pc_100090b4, label %dec_label_pc_1000908c

dec_label_pc_1000908c:                            ; preds = %dec_label_pc_10009074
  %v0_1000908c = call i32 @function_100080c8()
  store i32 %v0_1000908c, i32* %r3.global-to-local, align 4
  %v1_10009094 = inttoptr i32 %v0_1000908c to i32*
  %v2_10009094 = load i32, i32* %v1_10009094, align 4
  store i32 %v2_10009094, i32* @r28, align 4
  store i32 %v0_1000908c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472488, i32* @lr, align 4
  %v3_100090a4 = call i32 @function_10007fc0(i32 2, i32 %v2_10009004, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_100090ac = load i32, i32* @r28, align 4
  %v1_100090ac = load i32, i32* @r29, align 4
  %v2_100090ac = inttoptr i32 %v1_100090ac to i32*
  store i32 %v0_100090ac, i32* %v2_100090ac, align 4
  %v0_1000916c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000915c

dec_label_pc_100090b4:                            ; preds = %dec_label_pc_10009074
  %v3_100090b4 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_10009004, i32* @r28, align 4
  %v3_100090c0 = icmp eq i32 %v3_100090b4, 1
  br i1 %v3_100090c0, label %dec_label_pc_100090c8, label %dec_label_pc_100090fc

dec_label_pc_100090c8:                            ; preds = %dec_label_pc_100090b4
  store i32 %v2_10008fc0, i32* %r3.global-to-local, align 4
  store i32 268472532, i32* @lr, align 4
  %v2_100090d0 = call i32 @function_10009700(i32 %v2_10008fc0, i32 %v2_10008fc0)
  store i32 %v2_100090d0, i32* %r3.global-to-local, align 4
  store i32 %v2_100090d0, i32* @r31, align 4
  %v0_100090d8 = call i32 @function_100080c8()
  store i32 %v0_100090d8, i32* %r3.global-to-local, align 4
  store i32 %v0_100090d8, i32* @r29, align 4
  %v1_100090e8 = inttoptr i32 %v0_100090d8 to i32*
  %v2_100090e8 = load i32, i32* %v1_100090e8, align 4
  store i32 %v2_100090e8, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472564, i32* @lr, align 4
  %v3_100090f0 = call i32 @function_10007fc0(i32 2, i32 %v2_10009004, i32 0)
  store i32 %v3_100090f0, i32* %r3.global-to-local, align 4
  %v0_100090f4 = load i32, i32* @r28, align 4
  %v1_100090f4 = load i32, i32* @r29, align 4
  %v2_100090f4 = inttoptr i32 %v1_100090f4 to i32*
  store i32 %v0_100090f4, i32* %v2_100090f4, align 4
  %v0_10009124.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009124

dec_label_pc_100090fc:                            ; preds = %dec_label_pc_100090b4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472588, i32* @lr, align 4
  %v3_10009108 = call i32 @function_10007fc0(i32 2, i32 %v2_10009004, i32 0)
  br label %dec_label_pc_10009118

dec_label_pc_10009118:                            ; preds = %dec_label_pc_10009020, %dec_label_pc_100090fc
  store i32 %v2_10008fc0, i32* %r3.global-to-local, align 4
  store i32 268472608, i32* @lr, align 4
  %v2_1000911c = call i32 @function_10009700(i32 %v2_10008fc0, i32 %v2_10008fc0)
  store i32 %v2_1000911c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000911c, i32* @r31, align 4
  br label %dec_label_pc_10009124

dec_label_pc_10009124:                            ; preds = %dec_label_pc_100090c8, %dec_label_pc_10009118
  %v0_10009124 = phi i32 [ %v0_10009124.pr, %dec_label_pc_100090c8 ], [ %v2_1000911c, %dec_label_pc_10009118 ]
  %v3_10009124 = icmp eq i32 %v0_10009124, 0
  br i1 %v3_10009124, label %dec_label_pc_10009150, label %dec_label_pc_1000912c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_10009124
  %v3_1000913c = load i32, i32* %stack_var_-440, align 4
  %v0_10009140 = call i32 @__asm_mfcr()
  store i32 %v0_10009140, i32* %r3.global-to-local, align 4
  %v1_10009144 = call i32 @__asm_rlwinm(i32 %v0_10009140, i32 30, i32 31, i32 31)
  %v2_10009148 = add i32 %v3_1000913c, %v1_10009144
  store i32 %v2_10009148, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000915c

dec_label_pc_10009150:                            ; preds = %dec_label_pc_10008f9c, %dec_label_pc_10009124
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000915c

dec_label_pc_10009158:                            ; preds = %dec_label_pc_10009004, %dec_label_pc_10009060, %dec_label_pc_10008fe0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000915c

dec_label_pc_1000915c:                            ; preds = %dec_label_pc_1000908c, %dec_label_pc_10009150, %dec_label_pc_1000912c, %dec_label_pc_10009158
  %v0_1000916c = phi i32 [ %v0_1000916c.pre, %dec_label_pc_1000908c ], [ 0, %dec_label_pc_10009150 ], [ %v2_10009148, %dec_label_pc_1000912c ], [ -1, %dec_label_pc_10009158 ]
  ret i32 %v0_1000916c

; uselistorder directives
  uselistorder i32 %v1_1000905c, { 1, 0 }
  uselistorder i32 %v2_10009004, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_10008fdc, { 1, 0 }
  uselistorder i32 %v2_10008fc0, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 21, 23, 22, 0, 24, 1, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 3, 15, 16, 4, 17, 19, 20, 18, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 23, 19, 21, 20, 22, 0, 25, 24, 1, 2, 3, 15, 16, 17, 18, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 26 }
  uselistorder i32 30, { 4, 0, 1, 2, 3 }
  uselistorder i32 17, { 2, 26, 27, 3, 28, 12, 13, 4, 5, 14, 15, 16, 6, 7, 17, 8, 18, 19, 20, 9, 11, 10, 21, 0, 22, 1, 23, 24, 25 }
  uselistorder label %dec_label_pc_1000915c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009158, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009150, { 1, 0 }
  uselistorder label %dec_label_pc_10009124, { 1, 0 }
  uselistorder label %dec_label_pc_10009118, { 1, 0 }
  uselistorder label %dec_label_pc_1000904c.dec_label_pc_1000904c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008fcc.dec_label_pc_10008fcc_crit_edge, { 1, 0 }
}

define i32 @function_10009170(i32 %arg1) local_unnamed_addr {
dec_label_pc_100091c0:
  %v3_100091c4 = load i32, i32* @global_var_1001a9d4.387, align 4
  %v3_100091c8 = icmp eq i32 %v3_100091c4, 0
  br i1 %v3_100091c8, label %dec_label_pc_100091d8, label %dec_label_pc_100091d0

dec_label_pc_100091d0:                            ; preds = %dec_label_pc_100091c0
  %v2_100091d4 = load i32, i32* @r4, align 4
  %v3_100091d4 = call i32 @unknown_0(i32 268566528, i32 %v2_100091d4)
  store i32 %v3_100091d4, i32* @r3, align 4
  br label %dec_label_pc_100091d8

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091c0, %dec_label_pc_100091d0
  %v3_100091dc = load i32, i32* @global_var_1001a9d8.388, align 4
  %v3_100091e0 = icmp eq i32 %v3_100091dc, 0
  br i1 %v3_100091e0, label %dec_label_pc_100091d8.dec_label_pc_100091f0_crit_edge, label %dec_label_pc_100091e8

dec_label_pc_100091d8.dec_label_pc_100091f0_crit_edge: ; preds = %dec_label_pc_100091d8
  %v0_10009200.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100091f0

dec_label_pc_100091e8:                            ; preds = %dec_label_pc_100091d8
  %v2_100091ec = load i32, i32* @r4, align 4
  %v3_100091ec = call i32 @unknown_0(i32 268566528, i32 %v2_100091ec)
  br label %dec_label_pc_100091f0

dec_label_pc_100091f0:                            ; preds = %dec_label_pc_100091d8.dec_label_pc_100091f0_crit_edge, %dec_label_pc_100091e8
  %v0_10009200 = phi i32 [ %v0_10009200.pre, %dec_label_pc_100091d8.dec_label_pc_100091f0_crit_edge ], [ %v3_100091ec, %dec_label_pc_100091e8 ]
  ret i32 %v0_10009200

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100091f0, { 1, 0 }
  uselistorder label %dec_label_pc_100091d8, { 1, 0 }
}

define i32 @function_10009204() local_unnamed_addr {
dec_label_pc_10009204:
  ret i32 0
}

define i32 @function_1000920c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000920c:
  %v0_1000920c = load i32, i32* @r3, align 4
  ret i32 %v0_1000920c
}

define i32 @function_10009210(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009210:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268472884, i32* @lr, align 4
  %v1_10009230 = call i32 @function_10007bc8(i32 1)
  %v3_10009234 = icmp eq i32 %v1_10009230, -1
  br i1 %v3_10009234, label %dec_label_pc_1000923c, label %dec_label_pc_1000925c

dec_label_pc_1000923c:                            ; preds = %dec_label_pc_10009210
  %v0_10009240 = load i32, i32* @r30, align 4
  store i32 268472912, i32* @lr, align 4
  %v3_1000924c = call i32 @function_10007e18(i32 ptrtoint ([10 x i8]* @global_var_1000a500.389 to i32), i32 %v0_10009240)
  %v1_10009250 = load i32, i32* @r31, align 4
  %v4_10009250 = icmp eq i32 %v3_1000924c, %v1_10009250
  br i1 %v4_10009250, label %dec_label_pc_1000925c, label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_1000923c
  %v1_10009258 = call i32 @function_10009ae4(i32 %v3_1000924c)
  br label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009210, %dec_label_pc_1000923c, %dec_label_pc_10009258
  %v0_1000926c = phi i32 [ %v1_10009230, %dec_label_pc_10009210 ], [ %v3_1000924c, %dec_label_pc_1000923c ], [ %v1_10009258, %dec_label_pc_10009258 ]
  ret i32 %v0_1000926c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10007e18, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @function_10007bc8, { 0, 8, 7, 10, 9, 4, 3, 6, 5, 2, 1 }
  uselistorder label %dec_label_pc_1000925c, { 2, 1, 0 }
}

define i32 @function_10009270(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009270:
  %v3_10009290 = load i32, i32* @global_var_1001a9dc.390, align 4
  %v3_10009294 = icmp eq i32 %v3_10009290, 0
  br i1 %v3_10009294, label %dec_label_pc_100092b8, label %dec_label_pc_100092dc

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_10009270
  store i32 1, i32* @global_var_1001a9dc.390, align 4
  store i32 4096, i32* @global_var_1001a9d0.373, align 4
  br label %dec_label_pc_100092dc

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092b8, %dec_label_pc_10009270
  %v0_100092ec = load i32, i32* @r3, align 4
  ret i32 %v0_100092ec
}

define i32 @function_100092f0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100092f0:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10009308 = mul i32 %arg2, 4
  %v2_1000930c = add i32 %tmp, %v1_10009308
  %v0_10009310 = load i32, i32* @r9, align 4
  store i32 %v0_10009310, i32* @global_var_1001a9c8.392, align 4
  %v1_10009314 = add i32 %v2_1000930c, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_10009314, i32* @global_var_1001a9cc.393, align 4
  store i32 %arg6, i32* @global_var_1001a9d8.388, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_10009334 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000933c = icmp eq i32 %v1_10009314, %v2_10009334
  br i1 %v4_1000933c, label %dec_label_pc_10009344, label %dec_label_pc_10009348

dec_label_pc_10009344:                            ; preds = %dec_label_pc_100092f0
  store i32 %v2_1000930c, i32* @global_var_1001a9cc.393, align 4
  br label %dec_label_pc_10009348

dec_label_pc_10009348:                            ; preds = %dec_label_pc_100092f0, %dec_label_pc_10009344
  %v2_10009348 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268473176, i32* @lr, align 4
  %v3_10009354 = call i32 @function_1000989c(i32 %v2_10009348, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001a9cc.393, align 4
  br label %dec_label_pc_10009364

dec_label_pc_10009364:                            ; preds = %dec_label_pc_10009364, %dec_label_pc_10009348
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10009348 ], [ %v1_10009368, %dec_label_pc_10009364 ]
  %v1_10009364 = inttoptr i32 %storemerge to i32*
  %v2_10009364 = load i32, i32* %v1_10009364, align 4
  %v1_10009368 = add i32 %storemerge, 4
  %v3_1000936c = icmp eq i32 %v2_10009364, 0
  br i1 %v3_1000936c, label %dec_label_pc_10009374, label %dec_label_pc_10009364

dec_label_pc_10009374:                            ; preds = %dec_label_pc_10009364
  store i32 %v1_10009368, i32* %r29.global-to-local, align 4
  %v1_100093a012 = inttoptr i32 %v1_10009368 to i32*
  %v2_100093a013 = load i32, i32* %v1_100093a012, align 4
  %v3_100093a416 = icmp eq i32 %v2_100093a013, 0
  br i1 %v3_100093a416, label %dec_label_pc_100093ac, label %dec_label_pc_1000937c

dec_label_pc_1000937c:                            ; preds = %dec_label_pc_10009374, %dec_label_pc_1000939c
  %v0_10009390 = phi i32 [ %v1_1000939c, %dec_label_pc_1000939c ], [ %v1_10009368, %dec_label_pc_10009374 ]
  %v0_10009384 = phi i32 [ %v2_100093a0, %dec_label_pc_1000939c ], [ %v2_100093a013, %dec_label_pc_10009374 ]
  %v2_1000937c = icmp ugt i32 %v0_10009384, 14
  br i1 %v2_1000937c, label %dec_label_pc_1000939c, label %dec_label_pc_10009384

dec_label_pc_10009384:                            ; preds = %dec_label_pc_1000937c
  %v1_10009384 = mul i32 %v0_10009384, 8
  %v2_1000938c = add i32 %v1_10009384, %v2_10009348
  store i32 %v2_1000938c, i32* @r3, align 4
  store i32 %v0_10009390, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268473244, i32* @lr, align 4
  %v0_10009398 = call i32 @function_10009800()
  %v0_1000939c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000939c

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_1000937c, %dec_label_pc_10009384
  %v0_1000939c = phi i32 [ %v0_10009390, %dec_label_pc_1000937c ], [ %v0_1000939c.pre, %dec_label_pc_10009384 ]
  %v1_1000939c = add i32 %v0_1000939c, 8
  store i32 %v1_1000939c, i32* %r29.global-to-local, align 4
  %v1_100093a0 = inttoptr i32 %v1_1000939c to i32*
  %v2_100093a0 = load i32, i32* %v1_100093a0, align 4
  %v3_100093a4 = icmp eq i32 %v2_100093a0, 0
  br i1 %v3_100093a4, label %dec_label_pc_100093ac, label %dec_label_pc_1000937c

dec_label_pc_100093ac:                            ; preds = %dec_label_pc_1000939c, %dec_label_pc_10009374
  %v1_100093b0 = call i32 @function_10009c34(i32 %v2_10009348)
  store i32 %v1_100093b0, i32* @r3, align 4
  store i32 268473272, i32* @lr, align 4
  %v1_100093b4 = call i32 @function_10009270(i32 %v1_100093b0)
  %v3_100093bc = icmp eq i32 %tmp27, 0
  br i1 %v3_100093bc, label %dec_label_pc_100093c4, label %dec_label_pc_100093c8

dec_label_pc_100093c4:                            ; preds = %dec_label_pc_100093ac
  br label %dec_label_pc_100093c8

dec_label_pc_100093c8:                            ; preds = %dec_label_pc_100093ac, %dec_label_pc_100093c4
  %v0_100093d0 = phi i32 [ %tmp27, %dec_label_pc_100093ac ], [ 4096, %dec_label_pc_100093c4 ]
  store i32 %v0_100093d0, i32* @global_var_1001a9d0.373, align 4
  %v3_100093d4 = icmp eq i32 %tmp26, -1
  br i1 %v3_100093d4, label %dec_label_pc_100093dc, label %dec_label_pc_10009410

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_100093c8
  store i32 268473312, i32* @lr, align 4
  %v1_100093dc = call i32 @function_100096b8(i32 268566528)
  store i32 %v1_100093dc, i32* %r29.global-to-local, align 4
  store i32 268473320, i32* @lr, align 4
  %v0_100093e4 = call i32 @function_10009628()
  %v4_100093e8 = icmp eq i32 %v1_100093dc, %v0_100093e4
  br i1 %v4_100093e8, label %dec_label_pc_100093f0, label %dec_label_pc_1000942c

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_100093dc
  store i32 268473332, i32* @lr, align 4
  %v1_100093f0 = call i32 @function_10009670(i32 %v0_100093e4)
  store i32 %v1_100093f0, i32* %r29.global-to-local, align 4
  store i32 268473340, i32* @lr, align 4
  %v0_100093f8 = call i32 @function_100095e0()
  %v4_100093fc = icmp eq i32 %v1_100093f0, %v0_100093f8
  br i1 %v4_100093fc, label %dec_label_pc_10009404.thread, label %dec_label_pc_1000942c

dec_label_pc_10009404.thread:                     ; preds = %dec_label_pc_100093f0
  br label %dec_label_pc_1000945c

dec_label_pc_10009410:                            ; preds = %dec_label_pc_100093c8
  %v4_10009414 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10009414, label %dec_label_pc_1000941c, label %dec_label_pc_1000942c

dec_label_pc_1000941c:                            ; preds = %dec_label_pc_10009410
  br label %dec_label_pc_1000942c

dec_label_pc_1000942c:                            ; preds = %dec_label_pc_1000941c, %dec_label_pc_10009410, %dec_label_pc_100093f0, %dec_label_pc_100093dc
  store i32 268473404, i32* @lr, align 4
  %v2_10009438 = call i32 @function_10009210(i32 0, i32 32768)
  store i32 268473420, i32* @lr, align 4
  %v2_10009448 = call i32 @function_10009210(i32 1, i32 32770)
  store i32 268473436, i32* @lr, align 4
  %v2_10009458 = call i32 @function_10009210(i32 2, i32 32770)
  br label %dec_label_pc_1000945c

dec_label_pc_1000945c:                            ; preds = %dec_label_pc_10009404.thread, %dec_label_pc_1000942c
  %v0_10009468 = load i32, i32* @r30, align 4
  %v1_10009468 = inttoptr i32 %v0_10009468 to i32*
  %v2_10009468 = load i32, i32* %v1_10009468, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10009468, i32* inttoptr (i32 268544388 to i32*), align 4
  %v0_10009488 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10009488, i32* @global_var_1001a9d4.387, align 4
  br i1 false, label %dec_label_pc_10009490, label %dec_label_pc_10009508

dec_label_pc_10009490:                            ; preds = %dec_label_pc_1000945c, %dec_label_pc_10009490
  br i1 undef, label %dec_label_pc_10009490, label %dec_label_pc_10009508

dec_label_pc_10009508:                            ; preds = %dec_label_pc_10009490, %dec_label_pc_1000945c
  %v0_100094b4 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_100094b4)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10009518 = call i32 @function_100080c8()
  %v2_10009520 = inttoptr i32 %v0_10009518 to i32*
  store i32 0, i32* %v2_10009520, align 4
  %v0_1000954c = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000954c)
  %v0_10009558 = call i32 @function_10008f18()
  ret i32 %v0_10009558

; uselistorder directives
  uselistorder i32 %v2_100093a0, { 1, 0 }
  uselistorder i32 %v1_1000939c, { 2, 1, 0 }
  uselistorder i32 %v1_10009368, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10009348, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10008f18, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 6, 7, 8, 2, 1, 3, 4, 5, 9, 10 }
  uselistorder i32 (i32, i32)* @function_10009210, { 2, 1, 0 }
  uselistorder i32 14, { 18, 0, 4, 6, 5, 7, 8, 9, 1, 10, 11, 12, 2, 13, 14, 15, 16, 17, 3 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_10009490, { 1, 0 }
  uselistorder label %dec_label_pc_1000945c, { 1, 0 }
  uselistorder label %dec_label_pc_100093c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000939c, { 1, 0 }
  uselistorder label %dec_label_pc_1000937c, { 1, 0 }
  uselistorder label %dec_label_pc_10009348, { 1, 0 }
}

define i32 @function_1000955c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000955c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009574 = call i32 @__asm_mfcr()
  %v1_10009578 = and i32 %v0_10009574, 268435456
  %v3_10009578 = icmp eq i32 %v1_10009578, 0
  store i32 %v0_10009574, i32* %r31.global-to-local, align 4
  br i1 %v3_10009578, label %dec_label_pc_10009590, label %dec_label_pc_10009584

dec_label_pc_10009584:                            ; preds = %dec_label_pc_1000955c
  %v0_10009584 = call i32 @function_100080c8()
  %v0_10009588 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009588 = inttoptr i32 %v0_10009584 to i32*
  store i32 %v0_10009588, i32* %v2_10009588, align 4
  br label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_10009584
  %v0_100095a0 = phi i32 [ %v0_10009574, %dec_label_pc_1000955c ], [ -1, %dec_label_pc_10009584 ]
  ret i32 %v0_100095a0

; uselistorder directives
  uselistorder label %dec_label_pc_10009590, { 1, 0 }
}

define i32 @function_100095a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100095a4:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100095b8

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_100095b8.backedge, %dec_label_pc_100095a4
  %v0_100095c4 = call i32 @__asm_mfcr()
  %v1_100095c8 = and i32 %v0_100095c4, 268435456
  %v3_100095c8 = icmp eq i32 %v1_100095c8, 0
  store i32 %v0_100095c4, i32* %r31.global-to-local, align 4
  br i1 %v3_100095c8, label %dec_label_pc_100095b8.backedge, label %dec_label_pc_100095d4

dec_label_pc_100095d4:                            ; preds = %dec_label_pc_100095b8
  %v0_100095d4 = call i32 @function_100080c8()
  %v0_100095d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100095d8 = inttoptr i32 %v0_100095d4 to i32*
  store i32 %v0_100095d8, i32* %v2_100095d8, align 4
  br label %dec_label_pc_100095b8.backedge

dec_label_pc_100095b8.backedge:                   ; preds = %dec_label_pc_100095d4, %dec_label_pc_100095b8
  br label %dec_label_pc_100095b8
}

define i32 @function_100095e0() local_unnamed_addr {
dec_label_pc_100095e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100095f8 = call i32 @__asm_mfcr()
  %v1_100095fc = and i32 %v0_100095f8, 268435456
  %v3_100095fc = icmp eq i32 %v1_100095fc, 0
  store i32 %v0_100095f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100095fc, label %dec_label_pc_10009614, label %dec_label_pc_10009608

dec_label_pc_10009608:                            ; preds = %dec_label_pc_100095e0
  %v0_10009608 = call i32 @function_100080c8()
  %v0_1000960c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000960c = inttoptr i32 %v0_10009608 to i32*
  store i32 %v0_1000960c, i32* %v2_1000960c, align 4
  br label %dec_label_pc_10009614

dec_label_pc_10009614:                            ; preds = %dec_label_pc_100095e0, %dec_label_pc_10009608
  %v0_10009624 = phi i32 [ %v0_100095f8, %dec_label_pc_100095e0 ], [ -1, %dec_label_pc_10009608 ]
  ret i32 %v0_10009624

; uselistorder directives
  uselistorder label %dec_label_pc_10009614, { 1, 0 }
}

define i32 @function_10009628() local_unnamed_addr {
dec_label_pc_10009628:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009640 = call i32 @__asm_mfcr()
  %v1_10009644 = and i32 %v0_10009640, 268435456
  %v3_10009644 = icmp eq i32 %v1_10009644, 0
  store i32 %v0_10009640, i32* %r31.global-to-local, align 4
  br i1 %v3_10009644, label %dec_label_pc_1000965c, label %dec_label_pc_10009650

dec_label_pc_10009650:                            ; preds = %dec_label_pc_10009628
  %v0_10009650 = call i32 @function_100080c8()
  %v0_10009654 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009654 = inttoptr i32 %v0_10009650 to i32*
  store i32 %v0_10009654, i32* %v2_10009654, align 4
  br label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009628, %dec_label_pc_10009650
  %v0_1000966c = phi i32 [ %v0_10009640, %dec_label_pc_10009628 ], [ -1, %dec_label_pc_10009650 ]
  ret i32 %v0_1000966c

; uselistorder directives
  uselistorder label %dec_label_pc_1000965c, { 1, 0 }
}

define i32 @function_10009670(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009670:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009688 = call i32 @__asm_mfcr()
  %v1_1000968c = and i32 %v0_10009688, 268435456
  %v3_1000968c = icmp eq i32 %v1_1000968c, 0
  store i32 %v0_10009688, i32* %r31.global-to-local, align 4
  br i1 %v3_1000968c, label %dec_label_pc_100096a4, label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_10009670
  %v0_10009698 = call i32 @function_100080c8()
  %v0_1000969c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000969c = inttoptr i32 %v0_10009698 to i32*
  store i32 %v0_1000969c, i32* %v2_1000969c, align 4
  br label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_10009670, %dec_label_pc_10009698
  %v0_100096b4 = phi i32 [ %v0_10009688, %dec_label_pc_10009670 ], [ -1, %dec_label_pc_10009698 ]
  ret i32 %v0_100096b4

; uselistorder directives
  uselistorder label %dec_label_pc_100096a4, { 1, 0 }
}

define i32 @function_100096b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100096b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100096d0 = call i32 @__asm_mfcr()
  %v1_100096d4 = and i32 %v0_100096d0, 268435456
  %v3_100096d4 = icmp eq i32 %v1_100096d4, 0
  store i32 %v0_100096d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100096d4, label %dec_label_pc_100096ec, label %dec_label_pc_100096e0

dec_label_pc_100096e0:                            ; preds = %dec_label_pc_100096b8
  %v0_100096e0 = call i32 @function_100080c8()
  %v0_100096e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096e4 = inttoptr i32 %v0_100096e0 to i32*
  store i32 %v0_100096e4, i32* %v2_100096e4, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100096ec:                            ; preds = %dec_label_pc_100096b8, %dec_label_pc_100096e0
  %v0_100096fc = phi i32 [ %v0_100096d0, %dec_label_pc_100096b8 ], [ -1, %dec_label_pc_100096e0 ]
  ret i32 %v0_100096fc

; uselistorder directives
  uselistorder label %dec_label_pc_100096ec, { 1, 0 }
}

define i32 @function_10009700(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009700:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009718 = call i32 @__asm_mfcr()
  %v1_1000971c = and i32 %v0_10009718, 268435456
  %v3_1000971c = icmp eq i32 %v1_1000971c, 0
  store i32 %v0_10009718, i32* %r31.global-to-local, align 4
  br i1 %v3_1000971c, label %dec_label_pc_10009734, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009700
  %v0_10009728 = call i32 @function_100080c8()
  %v0_1000972c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000972c = inttoptr i32 %v0_10009728 to i32*
  store i32 %v0_1000972c, i32* %v2_1000972c, align 4
  br label %dec_label_pc_10009734

dec_label_pc_10009734:                            ; preds = %dec_label_pc_10009700, %dec_label_pc_10009728
  %v0_10009744 = phi i32 [ %v0_10009718, %dec_label_pc_10009700 ], [ -1, %dec_label_pc_10009728 ]
  ret i32 %v0_10009744

; uselistorder directives
  uselistorder label %dec_label_pc_10009734, { 1, 0 }
}

define i32 @function_10009748(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009748:
  store i32 %arg1, i32* @r30, align 4
  %v3_10009764 = load i32, i32* @global_var_1001a9f4.396, align 4
  %v3_10009768 = icmp eq i32 %v3_10009764, 0
  br i1 %v3_10009768, label %dec_label_pc_10009770, label %dec_label_pc_1000977c

dec_label_pc_10009770:                            ; preds = %dec_label_pc_10009748
  store i32 268474228, i32* @lr, align 4
  %v1_10009770 = call i32 @function_10009c50(i32 0)
  %v1_10009774 = icmp slt i32 %v1_10009770, 0
  br i1 %v1_10009774, label %dec_label_pc_1000979c, label %dec_label_pc_10009770.dec_label_pc_1000977c_crit_edge

dec_label_pc_10009770.dec_label_pc_1000977c_crit_edge: ; preds = %dec_label_pc_10009770
  %v0_1000977c.pre = load i32, i32* @r30, align 4
  %v3_10009780.pre = load i32, i32* @global_var_1001a9f4.396, align 4
  br label %dec_label_pc_1000977c

dec_label_pc_1000977c:                            ; preds = %dec_label_pc_10009770.dec_label_pc_1000977c_crit_edge, %dec_label_pc_10009748
  %v3_10009780 = phi i32 [ %v3_10009780.pre, %dec_label_pc_10009770.dec_label_pc_1000977c_crit_edge ], [ %v3_10009764, %dec_label_pc_10009748 ]
  %v1_10009788 = phi i32 [ %v0_1000977c.pre, %dec_label_pc_10009770.dec_label_pc_1000977c_crit_edge ], [ %arg1, %dec_label_pc_10009748 ]
  %v3_1000977c = icmp eq i32 %v1_10009788, 0
  store i32 %v3_10009780, i32* @r31, align 4
  br i1 %v3_1000977c, label %dec_label_pc_100097a0, label %dec_label_pc_10009790

dec_label_pc_10009790:                            ; preds = %dec_label_pc_1000977c
  %v2_10009788 = add i32 %v1_10009788, %v3_10009780
  store i32 268474260, i32* @lr, align 4
  %v1_10009790 = call i32 @function_10009c50(i32 %v2_10009788)
  %tmp6 = icmp sgt i32 %v1_10009790, -1
  br i1 %tmp6, label %dec_label_pc_10009790.dec_label_pc_100097a0_crit_edge, label %dec_label_pc_1000979c

dec_label_pc_10009790.dec_label_pc_100097a0_crit_edge: ; preds = %dec_label_pc_10009790
  %v0_100097a4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100097a0

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_10009790, %dec_label_pc_10009770
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100097a0

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_10009790.dec_label_pc_100097a0_crit_edge, %dec_label_pc_1000977c, %dec_label_pc_1000979c
  %v0_100097a4 = phi i32 [ %v0_100097a4.pre, %dec_label_pc_10009790.dec_label_pc_100097a0_crit_edge ], [ %v3_10009780, %dec_label_pc_1000977c ], [ -1, %dec_label_pc_1000979c ]
  ret i32 %v0_100097a4

; uselistorder directives
  uselistorder i32 %v3_10009780, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_10009c50, { 1, 0 }
  uselistorder label %dec_label_pc_100097a0, { 2, 0, 1 }
}

define i32 @function_100097b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100097b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097d0 = call i32 @__asm_mfcr()
  %v1_100097d4 = and i32 %v0_100097d0, 268435456
  %v3_100097d4 = icmp eq i32 %v1_100097d4, 0
  store i32 %v0_100097d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100097d4, label %dec_label_pc_100097ec, label %dec_label_pc_100097e0

dec_label_pc_100097e0:                            ; preds = %dec_label_pc_100097b8
  %v0_100097e0 = call i32 @function_100080c8()
  %v0_100097e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100097e4 = inttoptr i32 %v0_100097e0 to i32*
  store i32 %v0_100097e4, i32* %v2_100097e4, align 4
  br label %dec_label_pc_100097ec

dec_label_pc_100097ec:                            ; preds = %dec_label_pc_100097b8, %dec_label_pc_100097e0
  %v0_100097fc = phi i32 [ %v0_100097d0, %dec_label_pc_100097b8 ], [ -1, %dec_label_pc_100097e0 ]
  ret i32 %v0_100097fc

; uselistorder directives
  uselistorder label %dec_label_pc_100097ec, { 1, 0 }
}

define i32 @function_10009800() local_unnamed_addr {
dec_label_pc_10009800:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009800 = load i32, i32* @r5, align 4
  %v1_10009800 = call i32 @__asm_rlwinm.(i32 %v0_10009800, i32 29, i32 3, i32 31)
  store i32 %v1_10009800, i32* %r9.global-to-local, align 4
  %v4_10009800 = icmp eq i32 %v1_10009800, 0
  %v0_10009804 = load i32, i32* @r4, align 4
  %v1_10009804 = add i32 %v0_10009804, -4
  store i32 %v1_10009804, i32* %r4.global-to-local, align 4
  %v0_10009808 = load i32, i32* @r3, align 4
  %v1_10009808 = add i32 %v0_10009808, -4
  store i32 %v1_10009808, i32* @r11, align 4
  br i1 %v4_10009800, label %dec_label_pc_10009830, label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_10009800
  %v1_10009810 = urem i32 %v1_10009808, 4
  %v3_10009810 = icmp eq i32 %v1_10009810, 0
  br i1 %v3_10009810, label %dec_label_pc_10009818, label %dec_label_pc_1000986c

dec_label_pc_10009818:                            ; preds = %dec_label_pc_1000988c.dec_label_pc_10009818_crit_edge, %dec_label_pc_10009810
  %v1_10009824.pre = phi i32 [ %v1_10009808, %dec_label_pc_10009810 ], [ %v1_10009824.pre.pre, %dec_label_pc_1000988c.dec_label_pc_10009818_crit_edge ]
  %v0_10009818 = phi i32 [ %v1_10009800, %dec_label_pc_10009810 ], [ %v1_1000988c, %dec_label_pc_1000988c.dec_label_pc_10009818_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10009810 ], [ %v2_10009874, %dec_label_pc_1000988c.dec_label_pc_10009818_crit_edge ]
  store i32 %v0_10009818, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000981c

dec_label_pc_1000981c:                            ; preds = %dec_label_pc_1000981c, %dec_label_pc_10009818
  %v1_10009824 = phi i32 [ %v2_10009828, %dec_label_pc_1000981c ], [ %v1_10009824.pre, %dec_label_pc_10009818 ]
  %v0_1000981c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000981c = add i32 %v0_1000981c, 4
  %v2_1000981c = inttoptr i32 %v1_1000981c to i32*
  %v3_1000981c = load i32, i32* %v2_1000981c, align 4
  %v1_10009820 = add i32 %v0_1000981c, 8
  %v2_10009820 = inttoptr i32 %v1_10009820 to i32*
  %v3_10009820 = load i32, i32* %v2_10009820, align 4
  store i32 %v3_10009820, i32* %r9.global-to-local, align 4
  store i32 %v1_10009820, i32* %r4.global-to-local, align 4
  %v2_10009824 = add i32 %v1_10009824, 4
  %v3_10009824 = inttoptr i32 %v2_10009824 to i32*
  store i32 %v3_1000981c, i32* %v3_10009824, align 4
  %v0_10009828 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009828 = load i32, i32* @r11, align 4
  %v2_10009828 = add i32 %v1_10009828, 8
  %v3_10009828 = inttoptr i32 %v2_10009828 to i32*
  store i32 %v0_10009828, i32* %v3_10009828, align 4
  store i32 %v2_10009828, i32* @r11, align 4
  %v0_1000982c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000982c = add i32 %v0_1000982c, -1
  store i32 %v1_1000982c, i32* %ctr.global-to-local, align 4
  %v2_1000982c = icmp eq i32 %v1_1000982c, 0
  br i1 %v2_1000982c, label %dec_label_pc_10009830, label %dec_label_pc_1000981c

dec_label_pc_10009830:                            ; preds = %dec_label_pc_1000981c, %dec_label_pc_1000988c, %dec_label_pc_10009800
  %.1 = phi i32 [ undef, %dec_label_pc_10009800 ], [ %v2_10009874, %dec_label_pc_1000988c ], [ %.0, %dec_label_pc_1000981c ]
  %v1_10009830 = urem i32 %.1, 8
  store i32 %v1_10009830, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009830, 4
  br i1 %tmp, label %dec_label_pc_10009848, label %dec_label_pc_1000983c

dec_label_pc_1000983c:                            ; preds = %dec_label_pc_10009830
  %v0_1000983c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000983c = add i32 %v0_1000983c, 4
  %v2_1000983c = inttoptr i32 %v1_1000983c to i32*
  %v3_1000983c = load i32, i32* %v2_1000983c, align 4
  store i32 %v1_1000983c, i32* %r4.global-to-local, align 4
  %v1_10009840 = add nsw i32 %v1_10009830, -4
  store i32 %v1_10009840, i32* @r5, align 4
  %v1_10009844 = load i32, i32* @r11, align 4
  %v2_10009844 = add i32 %v1_10009844, 4
  %v3_10009844 = inttoptr i32 %v2_10009844 to i32*
  store i32 %v3_1000983c, i32* %v3_10009844, align 4
  store i32 %v2_10009844, i32* @r11, align 4
  %v0_10009848.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009848

dec_label_pc_10009848:                            ; preds = %dec_label_pc_10009830, %dec_label_pc_1000983c
  %v0_10009848 = phi i32 [ %v1_10009830, %dec_label_pc_10009830 ], [ %v0_10009848.pre, %dec_label_pc_1000983c ]
  %v3_10009848 = icmp eq i32 %v0_10009848, 0
  %v0_1000984c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009848, i32 %v0_1000984c)
  %v0_10009850 = load i32, i32* @r5, align 4
  store i32 %v0_10009850, i32* %ctr.global-to-local, align 4
  %v0_10009854 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009854 = add i32 %v0_10009854, 3
  store i32 %v1_10009854, i32* %r4.global-to-local, align 4
  %v0_10009858 = load i32, i32* @r11, align 4
  %v1_10009858 = add i32 %v0_10009858, 3
  store i32 %v1_10009858, i32* %r9.global-to-local, align 4
  %v1_1000985c9 = add i32 %v0_10009854, 4
  %v2_1000985c10 = inttoptr i32 %v1_1000985c9 to i8*
  %v3_1000985c11 = load i8, i8* %v2_1000985c10, align 1
  store i32 %v1_1000985c9, i32* %r4.global-to-local, align 4
  %v3_1000986013 = add i32 %v0_10009858, 4
  %v4_1000986014 = inttoptr i32 %v3_1000986013 to i8*
  store i8 %v3_1000985c11, i8* %v4_1000986014, align 1
  store i32 %v3_1000986013, i32* %r9.global-to-local, align 4
  %v0_1000986415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000986416 = add i32 %v0_1000986415, -1
  store i32 %v1_1000986416, i32* %ctr.global-to-local, align 4
  %v2_1000986417 = icmp eq i32 %v1_1000986416, 0
  br i1 %v2_1000986417, label %dec_label_pc_10009898, label %dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge

dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge: ; preds = %dec_label_pc_10009848, %dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge
  %v3_1000986018 = phi i32 [ %v3_10009860, %dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge ], [ %v3_1000986013, %dec_label_pc_10009848 ]
  %v0_1000985c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000985c = add i32 %v0_1000985c.pre, 1
  %v2_1000985c = inttoptr i32 %v1_1000985c to i8*
  %v3_1000985c = load i8, i8* %v2_1000985c, align 1
  store i32 %v1_1000985c, i32* %r4.global-to-local, align 4
  %v3_10009860 = add i32 %v3_1000986018, 1
  %v4_10009860 = inttoptr i32 %v3_10009860 to i8*
  store i8 %v3_1000985c, i8* %v4_10009860, align 1
  store i32 %v3_10009860, i32* %r9.global-to-local, align 4
  %v0_10009864 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009864 = add i32 %v0_10009864, -1
  store i32 %v1_10009864, i32* %ctr.global-to-local, align 4
  %v2_10009864 = icmp eq i32 %v1_10009864, 0
  br i1 %v2_10009864, label %dec_label_pc_10009898, label %dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge

dec_label_pc_1000986c:                            ; preds = %dec_label_pc_10009810
  %v1_1000986c = sub nsw i32 4, %v1_10009810
  store i32 %v1_1000986c, i32* %ctr.global-to-local, align 4
  %v1_10009874 = load i32, i32* @r5, align 4
  %v2_10009874 = sub i32 %v1_10009874, %v1_1000986c
  br label %dec_label_pc_10009878

dec_label_pc_10009878:                            ; preds = %dec_label_pc_10009878.dec_label_pc_10009878_crit_edge, %dec_label_pc_1000986c
  %v2_10009880 = phi i32 [ %v1_10009884, %dec_label_pc_10009878.dec_label_pc_10009878_crit_edge ], [ %v1_10009808, %dec_label_pc_1000986c ]
  %v0_10009878 = phi i32 [ %v0_10009878.pre, %dec_label_pc_10009878.dec_label_pc_10009878_crit_edge ], [ %v1_10009804, %dec_label_pc_1000986c ]
  %v1_10009878 = add i32 %v0_10009878, 4
  %v2_10009878 = inttoptr i32 %v1_10009878 to i8*
  %v3_10009878 = load i8, i8* %v2_10009878, align 1
  %v1_1000987c = add i32 %v0_10009878, 1
  store i32 %v1_1000987c, i32* %r4.global-to-local, align 4
  %v3_10009880 = add i32 %v2_10009880, 4
  %v4_10009880 = inttoptr i32 %v3_10009880 to i8*
  store i8 %v3_10009878, i8* %v4_10009880, align 1
  %v0_10009884 = load i32, i32* @r11, align 4
  %v1_10009884 = add i32 %v0_10009884, 1
  store i32 %v1_10009884, i32* @r11, align 4
  %v0_10009888 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009888 = add i32 %v0_10009888, -1
  store i32 %v1_10009888, i32* %ctr.global-to-local, align 4
  %v2_10009888 = icmp eq i32 %v1_10009888, 0
  br i1 %v2_10009888, label %dec_label_pc_1000988c, label %dec_label_pc_10009878.dec_label_pc_10009878_crit_edge

dec_label_pc_10009878.dec_label_pc_10009878_crit_edge: ; preds = %dec_label_pc_10009878
  %v0_10009878.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009878

dec_label_pc_1000988c:                            ; preds = %dec_label_pc_10009878
  %v1_1000988c = call i32 @__asm_rlwinm.(i32 %v2_10009874, i32 29, i32 3, i32 31)
  store i32 %v1_1000988c, i32* %r9.global-to-local, align 4
  %v4_1000988c = icmp eq i32 %v1_1000988c, 0
  br i1 %v4_1000988c, label %dec_label_pc_10009830, label %dec_label_pc_1000988c.dec_label_pc_10009818_crit_edge

dec_label_pc_1000988c.dec_label_pc_10009818_crit_edge: ; preds = %dec_label_pc_1000988c
  %v1_10009824.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10009818

dec_label_pc_10009898:                            ; preds = %dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge, %dec_label_pc_10009848
  %v0_10009898 = load i32, i32* @r3, align 4
  ret i32 %v0_10009898

; uselistorder directives
  uselistorder i32 %v1_1000988c, { 1, 2, 0 }
  uselistorder i32 %v1_10009888, { 1, 0 }
  uselistorder i32 %v1_10009884, { 1, 0 }
  uselistorder i32 %v0_10009878, { 1, 0 }
  uselistorder i32 %v2_10009874, { 2, 1, 0 }
  uselistorder i32 %v1_10009864, { 1, 0 }
  uselistorder i32 %v3_10009860, { 1, 2, 0 }
  uselistorder i32 %v1_10009830, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000982c, { 1, 0 }
  uselistorder i32 %v2_10009828, { 1, 2, 0 }
  uselistorder i32 %v1_10009810, { 1, 0 }
  uselistorder i32 %v1_10009808, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000985c.dec_label_pc_1000985c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009848, { 1, 0 }
  uselistorder label %dec_label_pc_10009830, { 1, 0, 2 }
}

define i32 @function_1000989c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000989c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000989c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000989c, i32* %r9.global-to-local, align 4
  %v4_1000989c = icmp eq i32 %v1_1000989c, 0
  %v1_100098a4 = add i32 %arg1, -4
  store i32 %v1_100098a4, i32* %r11.global-to-local, align 4
  %v1_100098a8 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_100098ac = call i32 @__asm_rlwimi(i32 %v1_100098a8, i32 16, i32 0, i32 15)
  %v2_100098ac = trunc i32 %v1_100098ac to i8
  br i1 %v4_1000989c, label %dec_label_pc_100098d4, label %dec_label_pc_100098b4

dec_label_pc_100098b4:                            ; preds = %dec_label_pc_1000989c
  %v0_100098b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100098b4 = urem i32 %v0_100098b4, 4
  %v3_100098b4 = icmp eq i32 %v1_100098b4, 0
  br i1 %v3_100098b4, label %dec_label_pc_100098b4.dec_label_pc_100098bc_crit_edge, label %dec_label_pc_10009904

dec_label_pc_100098b4.dec_label_pc_100098bc_crit_edge: ; preds = %dec_label_pc_100098b4
  %v0_100098bc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_100098bc:                            ; preds = %dec_label_pc_1000991c.dec_label_pc_100098bc_crit_edge, %dec_label_pc_100098b4.dec_label_pc_100098bc_crit_edge
  %v0_100098c0.pre = phi i32 [ %v0_100098b4, %dec_label_pc_100098b4.dec_label_pc_100098bc_crit_edge ], [ %v0_100098c0.pre.pre, %dec_label_pc_1000991c.dec_label_pc_100098bc_crit_edge ]
  %v0_100098bc = phi i32 [ %v0_100098bc.pre, %dec_label_pc_100098b4.dec_label_pc_100098bc_crit_edge ], [ %v1_1000991c, %dec_label_pc_1000991c.dec_label_pc_100098bc_crit_edge ]
  store i32 %v0_100098bc, i32* %ctr.global-to-local, align 4
  %v1_100098c4 = sext i8 %v2_100098ac to i32
  br label %dec_label_pc_100098c0

dec_label_pc_100098c0:                            ; preds = %dec_label_pc_100098c0, %dec_label_pc_100098bc
  %v0_100098c0 = phi i32 [ %v1_100098cc, %dec_label_pc_100098c0 ], [ %v0_100098c0.pre, %dec_label_pc_100098bc ]
  %v1_100098c0 = add i32 %v0_100098c0, 4
  store i32 %v1_100098c0, i32* %r9.global-to-local, align 4
  %v4_100098c4 = inttoptr i32 %v1_100098c0 to i32*
  store i32 %v1_100098c4, i32* %v4_100098c4, align 4
  %v2_100098c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100098c8 = add i32 %v2_100098c8, 4
  %v4_100098c8 = inttoptr i32 %v3_100098c8 to i32*
  store i32 %v1_100098c4, i32* %v4_100098c8, align 4
  %v0_100098cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100098cc = add i32 %v0_100098cc, 4
  store i32 %v1_100098cc, i32* %r11.global-to-local, align 4
  %v0_100098d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098d0 = add i32 %v0_100098d0, -1
  store i32 %v1_100098d0, i32* %ctr.global-to-local, align 4
  %v2_100098d0 = icmp eq i32 %v1_100098d0, 0
  br i1 %v2_100098d0, label %dec_label_pc_100098d4, label %dec_label_pc_100098c0

dec_label_pc_100098d4:                            ; preds = %dec_label_pc_100098c0, %dec_label_pc_1000991c, %dec_label_pc_1000989c
  %v0_100098d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100098d4 = urem i32 %v0_100098d4, 8
  store i32 %v1_100098d4, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_100098d4, 4
  br i1 %tmp, label %dec_label_pc_100098e8, label %dec_label_pc_100098e0

dec_label_pc_100098e0:                            ; preds = %dec_label_pc_100098d4
  %v1_100098e0 = sext i8 %v2_100098ac to i32
  %v2_100098e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100098e0 = add i32 %v2_100098e0, 4
  %v4_100098e0 = inttoptr i32 %v3_100098e0 to i32*
  store i32 %v1_100098e0, i32* %v4_100098e0, align 4
  store i32 %v3_100098e0, i32* %r11.global-to-local, align 4
  %v0_100098e4 = load i32, i32* @r5, align 4
  %v1_100098e4 = add i32 %v0_100098e4, -4
  store i32 %v1_100098e4, i32* @r5, align 4
  br label %dec_label_pc_100098e8

dec_label_pc_100098e8:                            ; preds = %dec_label_pc_100098d4, %dec_label_pc_100098e0
  %v0_100098e8 = phi i32 [ %v1_100098d4, %dec_label_pc_100098d4 ], [ %v1_100098e4, %dec_label_pc_100098e0 ]
  %v3_100098e8 = icmp eq i32 %v0_100098e8, 0
  %v0_100098ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100098e8, i32 %v0_100098ec)
  %v0_100098f0 = load i32, i32* @r5, align 4
  store i32 %v0_100098f0, i32* %ctr.global-to-local, align 4
  %v0_100098f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100098f4 = add i32 %v0_100098f4, 3
  store i32 %v1_100098f4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100098f8

dec_label_pc_100098f8:                            ; preds = %dec_label_pc_100098f8, %dec_label_pc_100098e8
  %v3_100098f8 = phi i32 [ %v4_100098f8, %dec_label_pc_100098f8 ], [ %v1_100098f4, %dec_label_pc_100098e8 ]
  %v4_100098f8 = add i32 %v3_100098f8, 1
  %v5_100098f8 = inttoptr i32 %v4_100098f8 to i8*
  store i8 %v2_100098ac, i8* %v5_100098f8, align 1
  store i32 %v4_100098f8, i32* %r9.global-to-local, align 4
  %v0_100098fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098fc = add i32 %v0_100098fc, -1
  store i32 %v1_100098fc, i32* %ctr.global-to-local, align 4
  %v2_100098fc = icmp eq i32 %v1_100098fc, 0
  br i1 %v2_100098fc, label %dec_label_pc_10009928, label %dec_label_pc_100098f8

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098b4
  %v1_10009904 = sub nsw i32 4, %v1_100098b4
  store i32 %v1_10009904, i32* %ctr.global-to-local, align 4
  %v1_1000990c = load i32, i32* %r5.global-to-local, align 4
  %v2_1000990c = sub i32 %v1_1000990c, %v1_10009904
  store i32 %v2_1000990c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009910

dec_label_pc_10009910:                            ; preds = %dec_label_pc_10009910, %dec_label_pc_10009904
  %v3_10009910 = phi i32 [ %v1_10009914, %dec_label_pc_10009910 ], [ %v0_100098b4, %dec_label_pc_10009904 ]
  %v4_10009910 = add i32 %v3_10009910, 4
  %v5_10009910 = inttoptr i32 %v4_10009910 to i8*
  store i8 %v2_100098ac, i8* %v5_10009910, align 1
  %v0_10009914 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009914 = add i32 %v0_10009914, 1
  store i32 %v1_10009914, i32* %r11.global-to-local, align 4
  %v0_10009918 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009918 = add i32 %v0_10009918, -1
  store i32 %v1_10009918, i32* %ctr.global-to-local, align 4
  %v2_10009918 = icmp eq i32 %v1_10009918, 0
  br i1 %v2_10009918, label %dec_label_pc_1000991c, label %dec_label_pc_10009910

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_10009910
  %v0_1000991c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000991c = call i32 @__asm_rlwinm.(i32 %v0_1000991c, i32 29, i32 3, i32 31)
  store i32 %v1_1000991c, i32* %r9.global-to-local, align 4
  %v4_1000991c = icmp eq i32 %v1_1000991c, 0
  br i1 %v4_1000991c, label %dec_label_pc_100098d4, label %dec_label_pc_1000991c.dec_label_pc_100098bc_crit_edge

dec_label_pc_1000991c.dec_label_pc_100098bc_crit_edge: ; preds = %dec_label_pc_1000991c
  %v0_100098c0.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100098bc

dec_label_pc_10009928:                            ; preds = %dec_label_pc_100098f8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000991c, { 1, 2, 0 }
  uselistorder i32 %v1_10009918, { 1, 0 }
  uselistorder i32 %v1_10009914, { 1, 0 }
  uselistorder i32 %v1_100098fc, { 1, 0 }
  uselistorder i32 %v4_100098f8, { 1, 2, 0 }
  uselistorder i32 %v1_100098d4, { 2, 1, 0 }
  uselistorder i32 %v1_100098d0, { 1, 0 }
  uselistorder i32 %v1_100098cc, { 1, 0 }
  uselistorder i32 %v1_100098b4, { 1, 0 }
  uselistorder i32 %v0_100098b4, { 2, 1, 0 }
  uselistorder i8 %v2_100098ac, { 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 15, { 15, 0, 6, 7, 1, 8, 5, 9, 10, 2, 11, 12, 3, 13, 14, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 48, 49, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 23, { 4, 2, 0, 1, 3 }
  uselistorder i32 16, { 111, 112, 35, 30, 92, 93, 36, 31, 38, 16, 39, 40, 13, 0, 14, 1, 2, 41, 3, 37, 32, 42, 33, 34, 94, 95, 96, 97, 98, 4, 17, 43, 5, 6, 44, 45, 46, 47, 48, 18, 49, 50, 51, 52, 53, 54, 55, 19, 56, 57, 21, 58, 59, 20, 60, 61, 23, 62, 63, 7, 64, 65, 66, 22, 67, 68, 25, 69, 70, 71, 72, 73, 24, 74, 75, 8, 9, 27, 77, 78, 79, 10, 15, 80, 76, 26, 81, 82, 83, 28, 84, 85, 86, 11, 87, 90, 91, 88, 89, 99, 100, 101, 29, 102, 103, 104, 12, 105, 108, 109, 106, 107, 110 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 29, { 31, 32, 33, 34, 27, 29, 28, 30, 2, 3, 37, 38, 35, 36, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 19, 20, 25, 26 }
  uselistorder label %dec_label_pc_100098e8, { 1, 0 }
  uselistorder label %dec_label_pc_100098d4, { 1, 0, 2 }
}

define i32 @function_1000992c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000992c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268474696, i32* @lr, align 4
  %v0_10009944 = call i32 @function_10009800()
  %v0_1000994c = load i32, i32* @r28, align 4
  %v1_1000994c = load i32, i32* @r29, align 4
  %v2_1000994c = add i32 %v1_1000994c, %v0_1000994c
  ret i32 %v2_1000994c

; uselistorder directives
  uselistorder i32* @r28, { 7, 8, 333, 334, 335, 336, 337, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 94, 95, 96, 87, 4, 88, 89, 90, 91, 92, 97, 1, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 5, 161, 162, 163, 164, 165, 168, 169, 166, 167, 172, 173, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 6, 329, 330, 331, 332 }
}

define i32 @function_10009960(i8* %arg1) local_unnamed_addr {
dec_label_pc_10009960:
  %r5.global-to-local = alloca i32, align 4
  %v3_10009960 = icmp eq i8* %arg1, null
  br i1 %v3_10009960, label %dec_label_pc_10009a18, label %dec_label_pc_10009968

dec_label_pc_10009968:                            ; preds = %dec_label_pc_10009960
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000997c.pre = load i32, i32* bitcast (i32** @global_var_1001a98c.397 to i32*), align 4
  br label %dec_label_pc_10009978

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009968, %dec_label_pc_100099f0
  %v0_100099f0 = phi i32 [ 0, %dec_label_pc_10009968 ], [ %v2_100099f8, %dec_label_pc_100099f0 ]
  %v0_100099f4 = phi i32 [ 1, %dec_label_pc_10009968 ], [ %v1_100099f4, %dec_label_pc_100099f0 ]
  %v0_10009978 = phi i32 [ %tmp, %dec_label_pc_10009968 ], [ %v0_100099783, %dec_label_pc_100099f0 ]
  %v1_10009978 = inttoptr i32 %v0_10009978 to i8*
  %v2_10009978 = load i8, i8* %v1_10009978, align 1
  %v3_10009978 = zext i8 %v2_10009978 to i32
  %v1_10009980 = mul nuw nsw i32 %v3_10009978, 2
  %v2_10009984 = add i32 %v1_10009980, %v3_1000997c.pre
  %v3_10009984 = inttoptr i32 %v2_10009984 to i16*
  %v4_10009984 = load i16, i16* %v3_10009984, align 2
  %v1_10009988 = and i16 %v4_10009984, 8
  %v3_10009988 = icmp eq i16 %v1_10009988, 0
  br i1 %v3_10009988, label %dec_label_pc_10009a18, label %dec_label_pc_10009990

dec_label_pc_10009990:                            ; preds = %dec_label_pc_10009978
  br label %dec_label_pc_100099a8

dec_label_pc_10009998:                            ; preds = %dec_label_pc_100099a8
  %v1_100099ac = mul i32 %v1_100099f8, 10
  %v2_100099b4 = add i32 %v3_100099a8, %v1_100099ac
  %v1_10009998 = add i32 %v2_100099b4, -48
  %v1_1000999c = add i32 %v0_100099e0, 1
  %v2_100099a0 = icmp sgt i32 %v1_10009998, 255
  br i1 %v2_100099a0, label %dec_label_pc_10009a18, label %dec_label_pc_100099a8

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_10009998, %dec_label_pc_10009990
  %v1_100099f8 = phi i32 [ %v1_10009998, %dec_label_pc_10009998 ], [ 0, %dec_label_pc_10009990 ]
  %v0_100099e0 = phi i32 [ %v1_1000999c, %dec_label_pc_10009998 ], [ %v0_10009978, %dec_label_pc_10009990 ]
  %v1_100099a8 = inttoptr i32 %v0_100099e0 to i8*
  %v2_100099a8 = load i8, i8* %v1_100099a8, align 1
  %v3_100099a8 = zext i8 %v2_100099a8 to i32
  %v1_100099b0 = mul nuw nsw i32 %v3_100099a8, 2
  %v2_100099b8 = add i32 %v1_100099b0, %v3_1000997c.pre
  %v3_100099b8 = inttoptr i32 %v2_100099b8 to i16*
  %v4_100099b8 = load i16, i16* %v3_100099b8, align 2
  %v5_100099b8 = zext i16 %v4_100099b8 to i32
  %v1_100099bc = and i32 %v5_100099b8, 8
  %v3_100099bc = icmp eq i32 %v1_100099bc, 0
  br i1 %v3_100099bc, label %dec_label_pc_100099c4, label %dec_label_pc_10009998

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_100099a8
  %v2_100099c4 = icmp sgt i32 %v0_100099f4, 3
  br i1 %v2_100099c4, label %dec_label_pc_100099dc, label %dec_label_pc_100099cc

dec_label_pc_100099cc:                            ; preds = %dec_label_pc_100099c4
  %v3_100099cc = icmp eq i8 %v2_100099a8, 46
  br i1 %v3_100099cc, label %dec_label_pc_100099d4, label %dec_label_pc_10009a18

dec_label_pc_100099d4:                            ; preds = %dec_label_pc_100099cc
  %v1_100099d4 = add i32 %v0_100099e0, 1
  br label %dec_label_pc_100099f0

dec_label_pc_100099dc:                            ; preds = %dec_label_pc_100099c4
  %v3_100099dc = icmp eq i8 %v2_100099a8, 0
  %v1_100099e0 = add i32 %v0_100099e0, 1
  br i1 %v3_100099dc, label %dec_label_pc_100099f0, label %dec_label_pc_100099e8

dec_label_pc_100099e8:                            ; preds = %dec_label_pc_100099dc
  %v1_100099e8 = and i32 %v5_100099b8, 32
  %v3_100099e8 = icmp eq i32 %v1_100099e8, 0
  br i1 %v3_100099e8, label %dec_label_pc_10009a18, label %dec_label_pc_100099f0

dec_label_pc_100099f0:                            ; preds = %dec_label_pc_100099e8, %dec_label_pc_100099dc, %dec_label_pc_100099d4
  %v0_100099783 = phi i32 [ %v1_100099e0, %dec_label_pc_100099e8 ], [ %v1_100099e0, %dec_label_pc_100099dc ], [ %v1_100099d4, %dec_label_pc_100099d4 ]
  %v1_100099f0 = mul i32 %v0_100099f0, 256
  %v1_100099f4 = add nuw nsw i32 %v0_100099f4, 1
  %v2_100099f8 = or i32 %v1_100099f8, %v1_100099f0
  store i32 %v2_100099f8, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_100099f4, 5
  br i1 %tmp10, label %dec_label_pc_10009978, label %dec_label_pc_10009a04

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099f0
  %v0_10009a04 = load i32, i32* @r4, align 4
  %v3_10009a04 = icmp eq i32 %v0_10009a04, 0
  %v0_10009a0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009a04, i32 %v0_10009a0c)
  %v0_10009a10 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009a10 = load i32, i32* @r4, align 4
  %v2_10009a10 = inttoptr i32 %v1_10009a10 to i32*
  store i32 %v0_10009a10, i32* %v2_10009a10, align 4
  ret i32 1

dec_label_pc_10009a18:                            ; preds = %dec_label_pc_100099cc, %dec_label_pc_100099e8, %dec_label_pc_10009978, %dec_label_pc_10009998, %dec_label_pc_10009960
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100099f8, { 1, 0 }
  uselistorder i32 %v1_100099f4, { 1, 0 }
  uselistorder i32 %v0_100099e0, { 0, 1, 3, 2 }
  uselistorder i32 5, { 35, 1, 36, 37, 61, 62, 0, 2, 63, 3, 64, 4, 65, 38, 66, 39, 40, 67, 5, 68, 6, 69, 41, 70, 7, 71, 8, 72, 9, 73, 42, 43, 74, 44, 75, 45, 76, 46, 77, 47, 78, 10, 79, 48, 80, 49, 81, 50, 82, 11, 83, 12, 84, 13, 85, 51, 86, 52, 87, 53, 88, 54, 89, 55, 90, 56, 91, 14, 15, 92, 57, 58, 59, 93, 16, 18, 19, 94, 17, 95, 22, 21, 96, 20, 24, 97, 23, 27, 26, 98, 25, 60, 99, 28, 31, 30, 29, 33, 34, 32, 100, 101, 102, 103, 104 }
  uselistorder i8 0, { 3, 5, 1, 6, 7, 2, 8, 9, 10, 11, 12, 4, 13, 14, 15, 16, 18, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 154, 3, 155, 4, 156, 157, 160, 161, 11, 158, 159, 143, 142, 140, 141, 127, 128, 129, 144, 145, 146, 147, 148, 149, 5, 60, 61, 62, 6, 29, 30, 63, 7, 8, 9, 64, 65, 66, 31, 32, 68, 33, 34, 69, 35, 36, 70, 37, 71, 38, 39, 72, 40, 41, 73, 42, 43, 74, 44, 75, 45, 76, 46, 77, 14, 78, 47, 79, 48, 80, 49, 81, 50, 82, 51, 83, 15, 84, 52, 85, 53, 86, 54, 87, 55, 88, 16, 89, 56, 90, 57, 91, 17, 92, 18, 93, 95, 94, 67, 122, 96, 19, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 58, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 12, 123, 124, 125, 126, 13, 20, 130, 21, 131, 22, 132, 23, 133, 24, 134, 135, 25, 136, 26, 137, 27, 138, 28, 139, 10, 150, 151, 59, 152, 153, 0, 1, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 1, 0 }
  uselistorder i32 10, { 76, 2, 8, 23, 24, 25, 26, 27, 9, 28, 29, 30, 10, 31, 11, 32, 3, 33, 12, 34, 13, 35, 14, 36, 4, 37, 15, 38, 16, 39, 17, 40, 18, 19, 41, 20, 42, 43, 44, 0, 45, 21, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 56, 5, 57, 58, 59, 60, 6, 61, 62, 63, 64, 65, 7, 66, 67, 68, 69, 70, 71, 72, 73, 74, 22, 75 }
  uselistorder i16 0, { 0, 2, 3, 4, 6, 5, 1, 7, 8, 9, 10 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10009a18, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10009978, { 1, 0 }
}

define i32 @function_10009a20(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009a20:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_10009a24 = load i32, i32* @lr, align 4
  store i32 %v0_10009a24, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009a30 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10009a40 = add i32 %tmp, 4
  store i32 %v1_10009a40, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_10009a48 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_10009a48, i32* @r3, align 4
  br i1 %v3_10009a30, label %dec_label_pc_10009a70, label %dec_label_pc_10009a50

dec_label_pc_10009a50:                            ; preds = %dec_label_pc_10009a20
  %v2_10009a50 = load i32, i32* %arg2, align 4
  store i32 %v2_10009a50, i32* %r0.global-to-local, align 4
  store i32 268474972, i32* @lr, align 4
  %v0_10009a58 = call i32 @function_10009800()
  %v0_10009a5c = load i32, i32* @r31, align 4
  %v1_10009a5c = add i32 %v0_10009a5c, 132
  %v2_10009a5c = inttoptr i32 %v1_10009a5c to i32*
  %v3_10009a5c = load i32, i32* %v2_10009a5c, align 4
  store i32 %v3_10009a5c, i32* %r0.global-to-local, align 4
  %v1_10009a68 = add i32 %v0_10009a5c, 136
  %v2_10009a68 = inttoptr i32 %v1_10009a68 to i32*
  %v3_10009a68 = load i32, i32* %v2_10009a68, align 4
  store i32 %v3_10009a68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10009a70

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a20, %dec_label_pc_10009a50
  store i32 268475024, i32* @lr, align 4
  %v0_10009a8c = call i32 @function_10009c84()
  %v0_10009a90 = load i32, i32* @r30, align 4
  %v3_10009a90 = icmp eq i32 %v0_10009a90, 0
  store i32 %v0_10009a8c, i32* @r31, align 4
  br i1 %v3_10009a90, label %dec_label_pc_10009acc, label %dec_label_pc_10009aa0

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a70
  %v1_10009a98 = icmp slt i32 %v0_10009a8c, 0
  %v1_10009aa0 = add i32 %v0_10009a90, 4
  store i32 %v1_10009aa0, i32* @r3, align 4
  %v2_10009aa4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10009aa4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10009a98, label %dec_label_pc_10009acc, label %dec_label_pc_10009ab0

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009aa0
  %v3_10009ab0 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10009ab0, i32* %r0.global-to-local, align 4
  %v2_10009ab4 = inttoptr i32 %v0_10009a90 to i32*
  store i32 %v3_10009ab0, i32* %v2_10009ab4, align 4
  store i32 268475068, i32* @lr, align 4
  %v0_10009ab8 = call i32 @function_10009800()
  %v1_10009ac4 = load i32, i32* @r30, align 4
  %v2_10009ac4 = add i32 %v1_10009ac4, 136
  %v3_10009ac4 = inttoptr i32 %v2_10009ac4 to i32*
  %v0_10009ac8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009ac8 = load i32, i32* @r30, align 4
  %v2_10009ac8 = add i32 %v1_10009ac8, 132
  %v3_10009ac8 = inttoptr i32 %v2_10009ac8 to i32*
  store i32 %v0_10009ac8, i32* %v3_10009ac8, align 4
  %v0_10009ad0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009acc

dec_label_pc_10009acc:                            ; preds = %dec_label_pc_10009aa0, %dec_label_pc_10009a70, %dec_label_pc_10009ab0
  %v0_10009ad0 = phi i32 [ %v0_10009a8c, %dec_label_pc_10009aa0 ], [ %v0_10009a8c, %dec_label_pc_10009a70 ], [ %v0_10009ad0.pre, %dec_label_pc_10009ab0 ]
  store i32 %v0_10009a24, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009ad0

; uselistorder directives
  uselistorder i32 %v0_10009a8c, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_10009800, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* @r5, { 10, 11, 2, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 23, 9, 5, 6, 1, 4, 21, 22, 3, 7, 8 }
  uselistorder i32 128, { 9, 10, 0, 1, 2, 3, 6, 4, 7, 5, 8 }
  uselistorder i32* @r30, { 105, 106, 107, 108, 0, 91, 109, 112, 110, 111, 92, 93, 94, 86, 87, 88, 89, 90, 95, 96, 100, 97, 98, 99, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 13, 20, 21, 22, 14, 15, 16, 2, 17, 18, 19, 23, 25, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 101, 102, 103, 104 }
  uselistorder i32* @r31, { 0, 158, 159, 160, 138, 1, 139, 167, 168, 161, 5, 162, 163, 164, 165, 166, 140, 141, 142, 143, 144, 145, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 152, 149, 150, 151, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 2, 73, 3, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 153, 4, 154, 156, 155, 157 }
  uselistorder label %dec_label_pc_10009acc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009a70, { 1, 0 }
}

define i32 @function_10009ae4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009b18.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_10009afc = call i32 @function_10009204()
  %v2_10009b04 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009b04, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10009b1c33 = add i32 %v2_10009b04, 124
  %v4_10009b1c34 = inttoptr i32 %v3_10009b1c33 to i32*
  store i32 0, i32* %v4_10009b1c34, align 4
  %v0_10009b2035 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009b2036 = add i32 %v0_10009b2035, -1
  store i32 %v1_10009b2036, i32* %r9.global-to-local, align 4
  %v0_10009b2437 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009b2438 = add i32 %v0_10009b2437, -1
  store i32 %v1_10009b2438, i32* %ctr.global-to-local, align 4
  %v2_10009b2439 = icmp eq i32 %v1_10009b2438, 0
  br i1 %v2_10009b2439, label %dec_label_pc_10009b28, label %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge

dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge: ; preds = %dec_label_pc_10009b18.lr.ph, %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge
  %v1_10009b2040 = phi i32 [ %v1_10009b20, %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge ], [ %v1_10009b2036, %dec_label_pc_10009b18.lr.ph ]
  %v0_10009b1c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009b1c.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10009b18 = mul i32 %v1_10009b2040, 4
  %v3_10009b1c = add i32 %v1_10009b18, %v1_10009b1c.pre
  %v4_10009b1c = inttoptr i32 %v3_10009b1c to i32*
  store i32 %v0_10009b1c.pre, i32* %v4_10009b1c, align 4
  %v0_10009b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009b20 = add i32 %v0_10009b20, -1
  store i32 %v1_10009b20, i32* %r9.global-to-local, align 4
  %v0_10009b24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009b24 = add i32 %v0_10009b24, -1
  store i32 %v1_10009b24, i32* %ctr.global-to-local, align 4
  %v2_10009b24 = icmp eq i32 %v1_10009b24, 0
  br i1 %v2_10009b24, label %dec_label_pc_10009b28, label %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge, %dec_label_pc_10009b18.lr.ph
  store i32 %v2_10009b04, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10009b30 = call i32 @function_10008820()
  %v3_10009b34 = icmp eq i32 %v0_10009b30, 0
  br i1 %v3_10009b34, label %dec_label_pc_10009b3c, label %dec_label_pc_10009b4c

dec_label_pc_10009b3c:                            ; preds = %dec_label_pc_10009b28
  store i32 268475212, i32* @lr, align 4
  %v3_10009b48 = call i32 @function_10007fc0(i32 1, i32 %v2_10009b04, i32 0)
  br label %dec_label_pc_10009b4c

dec_label_pc_10009b4c:                            ; preds = %dec_label_pc_10009b28, %dec_label_pc_10009b3c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009b50 = load i32, i32* @global_var_1001a9e8.400, align 4
  %v3_10009b54 = icmp eq i32 %v3_10009b50, 0
  br i1 %v3_10009b54, label %dec_label_pc_10009b5c, label %dec_label_pc_10009b84

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b4c
  store i32 1, i32* @global_var_1001a9e8.400, align 4
  br label %dec_label_pc_10009b64

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009be0, %dec_label_pc_10009b5c
  store i32 ptrtoint (i32* @global_var_1001a958.398 to i32), i32* %r29.global-to-local, align 4
  %v0_10009b70 = call i32 @function_10009204()
  store i32 268475260, i32* @lr, align 4
  %v1_10009b78 = call i32 @function_10009ccc(i32 6)
  %v0_10009b80 = call i32 @function_10009204()
  %v3_10009b88.pre = load i32, i32* @global_var_1001a9e8.400, align 4
  br label %dec_label_pc_10009b84

dec_label_pc_10009b84:                            ; preds = %dec_label_pc_10009b4c, %dec_label_pc_10009b64
  %v0_10009bfc = phi i32 [ %v3_10009b50, %dec_label_pc_10009b4c ], [ %v3_10009b88.pre, %dec_label_pc_10009b64 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009b8c = icmp eq i32 %v0_10009bfc, 1
  br i1 %v3_10009b8c, label %dec_label_pc_10009bcc.lr.ph, label %dec_label_pc_10009bfc

dec_label_pc_10009bcc.lr.ph:                      ; preds = %dec_label_pc_10009b84
  %v2_10009b98 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001a9e8.400, align 4
  store i32 ptrtoint (i32* @global_var_10009bac.402 to i32), i32* @lr, align 4
  %v3_10009ba8 = call i32 @function_1000989c(i32 %v2_10009b98, i32 0, i32 140)
  store i32 %v2_10009b04, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10009b1c33, i32* %r9.global-to-local, align 4
  %v2_10009bd425 = add i32 %v2_10009b04, 256
  %v3_10009bd426 = inttoptr i32 %v2_10009bd425 to i32*
  store i32 -1, i32* %v3_10009bd426, align 4
  %v0_10009bd827 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bd828 = add i32 %v0_10009bd827, -1
  store i32 %v1_10009bd828, i32* %r11.global-to-local, align 4
  %v0_10009bdc29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bdc30 = add i32 %v0_10009bdc29, -1
  store i32 %v1_10009bdc30, i32* %ctr.global-to-local, align 4
  %v2_10009bdc31 = icmp eq i32 %v1_10009bdc30, 0
  br i1 %v2_10009bdc31, label %dec_label_pc_10009be0, label %dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge

dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge: ; preds = %dec_label_pc_10009bcc.lr.ph, %dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge
  %v1_10009bd832 = phi i32 [ %v1_10009bd8, %dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge ], [ %v1_10009bd828, %dec_label_pc_10009bcc.lr.ph ]
  %v1_10009bd0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10009bd4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10009bcc = mul i32 %v1_10009bd832, 4
  %v2_10009bd0 = add i32 %v1_10009bcc, %v1_10009bd0.pre
  store i32 %v2_10009bd0, i32* %r9.global-to-local, align 4
  %v2_10009bd4 = add i32 %v2_10009bd0, 132
  %v3_10009bd4 = inttoptr i32 %v2_10009bd4 to i32*
  store i32 %v0_10009bd4.pre, i32* %v3_10009bd4, align 4
  %v0_10009bd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bd8 = add i32 %v0_10009bd8, -1
  store i32 %v1_10009bd8, i32* %r11.global-to-local, align 4
  %v0_10009bdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bdc = add i32 %v0_10009bdc, -1
  store i32 %v1_10009bdc, i32* %ctr.global-to-local, align 4
  %v2_10009bdc = icmp eq i32 %v1_10009bdc, 0
  br i1 %v2_10009bdc, label %dec_label_pc_10009be0, label %dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge

dec_label_pc_10009be0:                            ; preds = %dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge, %dec_label_pc_10009bcc.lr.ph
  store i32 268475384, i32* @lr, align 4
  %v4_10009bf4 = call i32 @function_10009a20(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10009b64

dec_label_pc_10009bfc:                            ; preds = %dec_label_pc_10009b84
  %v3_10009bfc = icmp eq i32 %v0_10009bfc, 2
  br i1 %v3_10009bfc, label %dec_label_pc_10009c04, label %dec_label_pc_10009c10

dec_label_pc_10009c04:                            ; preds = %dec_label_pc_10009bfc
  store i32 3, i32* @global_var_1001a9e8.400, align 4
  br label %dec_label_pc_10009c10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009bfc, %dec_label_pc_10009c04
  %v3_10009c10 = phi i32 [ %v0_10009bfc, %dec_label_pc_10009bfc ], [ 3, %dec_label_pc_10009c04 ]
  %v1_10009c18 = icmp ne i32 %v3_10009c10, 3
  call void @__pseudo_cond_branch(i1 %v1_10009c18, i32 268475436)
  store i32 4, i32* @global_var_1001a9e8.400, align 4
  %v1_10009c28 = call i32 @function_100095a4(i32 127)
  ret i32 %v1_10009c28

; uselistorder directives
  uselistorder i32 %v1_10009bdc, { 1, 0 }
  uselistorder i32 %v1_10009bd8, { 1, 0 }
  uselistorder i32 %v1_10009b24, { 1, 0 }
  uselistorder i32 %v1_10009b20, { 1, 0 }
  uselistorder i32 %v2_10009b04, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 3, 5, 6, 8, 7, 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 5, 2, 3, 9, 8, 4, 0, 1 }
  uselistorder i32 (i32)* @function_100095a4, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 5, 33, 103, 104, 105, 106, 107, 108, 109, 110, 99, 101, 102, 52, 112, 111, 7, 53, 54, 1, 6, 34, 35, 55, 56, 57, 58, 2, 59, 61, 62, 36, 37, 63, 38, 39, 64, 40, 41, 65, 8, 66, 42, 67, 9, 68, 69, 70, 10, 71, 43, 72, 11, 60, 44, 73, 74, 76, 77, 75, 78, 45, 46, 47, 79, 80, 12, 48, 3, 4, 49, 81, 82, 14, 83, 50, 13, 84, 85, 86, 15, 16, 17, 87, 88, 89, 20, 19, 18, 90, 91, 23, 22, 21, 92, 93, 51, 94, 26, 24, 25, 95, 96, 29, 28, 27, 97, 98, 32, 31, 30, 100 }
  uselistorder i32 (i32, i32*, i32)* @function_10009a20, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 52, 0, 1, 2, 3, 4, 5, 6, 7, 8, 58, 59, 60, 9, 53, 10, 61, 11, 12, 13, 14, 15, 62, 16, 56, 63, 57, 64, 54, 17, 18, 19, 65, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 55, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 (i32, i32, i32)* @function_1000989c, { 1, 0, 2, 4, 3 }
  uselistorder i32 2, { 179, 28, 0, 1, 47, 48, 180, 49, 181, 50, 182, 29, 87, 183, 88, 51, 30, 52, 22, 21, 23, 53, 54, 89, 32, 31, 90, 91, 55, 92, 35, 86, 2, 3, 93, 94, 27, 96, 33, 97, 56, 98, 57, 99, 34, 100, 58, 95, 61, 62, 60, 59, 36, 4, 5, 6, 101, 102, 63, 37, 64, 65, 67, 66, 68, 39, 38, 166, 7, 24, 167, 8, 103, 104, 105, 106, 107, 108, 109, 110, 69, 111, 112, 40, 113, 114, 115, 116, 117, 118, 119, 71, 120, 70, 121, 122, 123, 124, 125, 126, 127, 128, 72, 129, 41, 75, 76, 130, 131, 73, 74, 132, 133, 134, 135, 136, 137, 138, 139, 140, 9, 10, 11, 12, 13, 14, 77, 141, 42, 142, 143, 144, 145, 146, 15, 16, 17, 18, 19, 20, 78, 147, 43, 148, 149, 150, 151, 152, 79, 153, 154, 80, 155, 81, 156, 44, 157, 158, 159, 160, 162, 163, 164, 161, 82, 165, 45, 168, 169, 170, 83, 84, 171, 173, 174, 175, 172, 85, 176, 46, 177, 25, 26, 178 }
  uselistorder i32* @global_var_1001a9e8.400, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 46, 47, 0, 48, 2, 1, 3, 43, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 6, 35, 36, 37, 38, 4, 39, 5, 40, 41, 42, 44, 45 }
  uselistorder i32 (i32, i32, i32)* @function_10007fc0, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10008820, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 48, 49, 50, 45, 46, 51, 58, 57, 2, 3, 52, 54, 55, 44, 53, 6, 5, 47, 7, 8, 9, 4, 56, 10, 11, 12, 15, 16, 17, 13, 14, 41, 18, 19, 20, 21, 22, 23, 0, 1, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 42, 43 }
  uselistorder i32 6, { 16, 17, 130, 1, 18, 19, 63, 20, 21, 64, 65, 22, 66, 23, 67, 24, 25, 68, 26, 27, 69, 2, 70, 3, 71, 28, 72, 29, 73, 30, 31, 74, 32, 75, 33, 34, 76, 35, 77, 36, 78, 37, 79, 38, 80, 39, 81, 4, 82, 40, 83, 41, 84, 42, 85, 5, 86, 43, 44, 87, 45, 88, 6, 89, 46, 90, 47, 91, 48, 92, 49, 93, 50, 94, 51, 95, 52, 96, 53, 97, 54, 98, 55, 99, 56, 100, 57, 101, 102, 7, 103, 0, 104, 105, 106, 8, 107, 108, 109, 9, 110, 111, 112, 113, 10, 11, 114, 115, 58, 12, 116, 117, 59, 13, 118, 60, 119, 120, 121, 122, 61, 14, 123, 124, 125, 126, 127, 62, 15, 128, 129 }
  uselistorder i32 4, { 117, 0, 1, 340, 341, 342, 343, 344, 118, 345, 346, 347, 2, 348, 349, 350, 61, 62, 351, 352, 119, 353, 354, 3, 355, 356, 4, 5, 6, 7, 8, 317, 319, 318, 315, 316, 292, 293, 294, 295, 320, 321, 322, 323, 324, 325, 326, 327, 328, 9, 147, 10, 69, 148, 149, 150, 120, 11, 121, 151, 152, 153, 79, 67, 154, 155, 156, 157, 145, 70, 146, 12, 159, 160, 161, 162, 158, 163, 164, 63, 122, 123, 170, 124, 125, 171, 126, 127, 172, 128, 173, 129, 130, 174, 131, 175, 71, 176, 132, 177, 72, 178, 133, 179, 134, 180, 73, 181, 74, 182, 135, 183, 75, 184, 76, 185, 77, 187, 78, 188, 189, 190, 191, 192, 186, 165, 166, 167, 168, 169, 193, 136, 81, 80, 82, 194, 195, 196, 64, 197, 65, 198, 199, 200, 201, 202, 203, 204, 205, 206, 13, 207, 208, 209, 210, 211, 86, 212, 14, 15, 85, 213, 16, 83, 84, 214, 215, 90, 216, 17, 18, 217, 19, 218, 219, 220, 91, 221, 20, 21, 222, 89, 223, 87, 224, 88, 225, 226, 227, 96, 22, 23, 228, 229, 230, 24, 231, 232, 233, 95, 25, 26, 234, 94, 235, 92, 93, 236, 237, 238, 239, 240, 241, 242, 137, 97, 243, 244, 27, 245, 246, 68, 247, 28, 29, 248, 100, 249, 98, 99, 250, 251, 30, 252, 253, 104, 254, 255, 31, 32, 103, 256, 101, 102, 257, 258, 259, 260, 138, 261, 33, 262, 263, 34, 264, 35, 265, 266, 267, 268, 106, 269, 105, 139, 270, 271, 272, 273, 36, 274, 276, 277, 111, 278, 279, 110, 37, 38, 140, 275, 109, 107, 108, 280, 281, 282, 283, 284, 141, 142, 39, 285, 287, 288, 115, 289, 290, 116, 40, 41, 143, 286, 291, 114, 112, 113, 42, 296, 297, 43, 44, 298, 299, 45, 46, 300, 301, 47, 48, 302, 303, 49, 304, 50, 305, 306, 51, 52, 307, 308, 53, 54, 309, 310, 55, 56, 311, 312, 57, 58, 313, 314, 59, 329, 60, 330, 331, 332, 333, 334, 335, 336, 66, 337, 338, 339, 144 }
  uselistorder i32 32, { 15, 16, 36, 12, 13, 26, 0, 1, 2, 14, 3, 17, 4, 5, 6, 18, 27, 19, 28, 7, 8, 9, 10, 11, 20, 21, 22, 23, 29, 30, 31, 32, 33, 24, 34, 25, 35 }
  uselistorder i32 31, { 0, 1, 20, 21, 22, 23, 24, 25, 2, 3, 4, 5, 6, 14, 15, 16, 17, 7, 8, 9, 10, 11, 12, 13, 18, 19 }
  uselistorder i32 ()* @function_10009204, { 7, 6, 5, 0, 18, 17, 16, 15, 4, 3, 2, 1, 14, 13, 12, 11, 10, 9, 8 }
  uselistorder label %dec_label_pc_10009c10, { 1, 0 }
  uselistorder label %dec_label_pc_10009bcc.dec_label_pc_10009bcc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009b84, { 1, 0 }
  uselistorder label %dec_label_pc_10009b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10009b18.dec_label_pc_10009b18_crit_edge, { 1, 0 }
}

define i32 @function_10009c34(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c34:
  %v1_10009c34 = add i32 %arg1, 28
  %v2_10009c34 = inttoptr i32 %v1_10009c34 to i32*
  %v3_10009c34 = load i32, i32* %v2_10009c34, align 4
  store i32 %v3_10009c34, i32* @global_var_1001a9ec.403, align 4
  %v1_10009c44 = add i32 %arg1, 44
  %v2_10009c44 = inttoptr i32 %v1_10009c44 to i32*
  %v3_10009c44 = load i32, i32* %v2_10009c44, align 4
  store i32 %v3_10009c44, i32* @global_var_1001a9f0.404, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 6, 4, 5, 0, 1, 2, 3 }
  uselistorder i32 28, { 34, 33, 2, 4, 5, 6, 7, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 1, 32 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_10009c50(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c50:
  store i32 %arg1, i32* @global_var_1001a9f4.396, align 4
  %v0_10009c78 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10009c78)
  %v1_10009c80 = call i32 @function_10009cfc(i32 12)
  ret i32 %v1_10009c80

; uselistorder directives
  uselistorder i32 12, { 14, 77, 78, 79, 80, 6, 75, 81, 0, 1, 7, 76, 5, 15, 16, 8, 20, 21, 22, 23, 24, 18, 19, 25, 26, 27, 28, 30, 31, 9, 32, 17, 33, 35, 34, 29, 70, 36, 10, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 11, 51, 52, 53, 54, 55, 56, 57, 12, 58, 59, 60, 61, 62, 63, 64, 65, 66, 13, 67, 68, 69, 71, 72, 73, 74, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 10, 8, 11, 12, 5, 7, 0, 6, 1, 2, 3, 9 }
  uselistorder i1 true, { 1, 0 }
  uselistorder i32* @global_var_1001a9f4.396, { 1, 0, 2 }
}

define i32 @function_10009c84() local_unnamed_addr {
dec_label_pc_10009c84:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009c9c = call i32 @__asm_mfcr()
  %v1_10009ca0 = and i32 %v0_10009c9c, 268435456
  %v3_10009ca0 = icmp eq i32 %v1_10009ca0, 0
  store i32 %v0_10009c9c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009ca0, label %dec_label_pc_10009cb8, label %dec_label_pc_10009cac

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009c84
  %v0_10009cac = call i32 @function_100080c8()
  %v0_10009cb0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009cb0 = inttoptr i32 %v0_10009cac to i32*
  store i32 %v0_10009cb0, i32* %v2_10009cb0, align 4
  br label %dec_label_pc_10009cb8

dec_label_pc_10009cb8:                            ; preds = %dec_label_pc_10009c84, %dec_label_pc_10009cac
  %v0_10009cc8 = phi i32 [ %v0_10009c9c, %dec_label_pc_10009c84 ], [ -1, %dec_label_pc_10009cac ]
  ret i32 %v0_10009cc8

; uselistorder directives
  uselistorder i32 268435456, { 25, 12, 26, 27, 28, 29, 30, 31, 32, 13, 20, 33, 14, 15, 19, 16, 34, 23, 17, 24, 22, 21, 35, 36, 18, 2, 0, 1, 5, 3, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 40, 11, 10, 9, 8, 7, 6, 5, 4, 39, 20, 3, 38, 37, 32, 36, 2, 14, 35, 13, 16, 19, 1, 0, 34, 33, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 18, 17, 15 }
  uselistorder label %dec_label_pc_10009cb8, { 1, 0 }
}

define i32 @function_10009ccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009ccc:
  %v0_10009ccc = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268475620, i32* @lr, align 4
  %v0_10009ce0 = call i32 @function_10007d40()
  %v0_10009ce8 = load i32, i32* @r29, align 4
  store i32 %v0_10009ccc, i32* @lr, align 4
  %v2_10009cf8 = call i32 @function_10007dd0(i32 %v0_10009ce0, i32 %v0_10009ce8)
  ret i32 %v2_10009cf8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10007dd0, { 3, 2, 1, 0 }
}

define i32 @function_10009cfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009cfc:
  store i32 %arg1, i32* @r29, align 4
  %v0_10009d10 = call i32 @function_100080c8()
  %v0_10009d14 = load i32, i32* @r29, align 4
  %v2_10009d14 = inttoptr i32 %v0_10009d10 to i32*
  store i32 %v0_10009d14, i32* %v2_10009d14, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_100080c8, { 22, 15, 41, 14, 13, 12, 11, 10, 9, 8, 3, 7, 6, 20, 21, 40, 39, 29, 28, 27, 24, 5, 4, 26, 38, 30, 37, 2, 17, 36, 16, 19, 23, 1, 0, 35, 34, 33, 25, 32, 31, 18 }
  uselistorder i32* @r29, { 302, 303, 325, 326, 327, 11, 12, 328, 329, 330, 331, 332, 304, 305, 306, 307, 301, 308, 1, 309, 310, 311, 312, 313, 314, 13, 14, 15, 16, 17, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 105, 106, 107, 108, 109, 110, 116, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 179, 180, 181, 184, 187, 188, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 317, 315, 316, 318, 319, 320, 2, 321, 322, 323, 324 }
}

define i32 @function_10009d30(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009d30:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001a810.386 to i32), i32* %r31.global-to-local, align 4
  %v3_10009d4c = load i32, i32* @global_var_1001a810.386, align 4
  %v3_10009d50 = icmp eq i32 %v3_10009d4c, -1
  br i1 %v3_10009d50, label %dec_label_pc_10009d6c, label %dec_label_pc_10009d58

dec_label_pc_10009d58:                            ; preds = %dec_label_pc_10009d30, %dec_label_pc_10009d58
  %v0_10009d58 = phi i32 [ %v3_10009d60, %dec_label_pc_10009d58 ], [ %v3_10009d4c, %dec_label_pc_10009d30 ]
  call void @__pseudo_call(i32 %v0_10009d58)
  %v0_10009d60 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009d60 = add i32 %v0_10009d60, -4
  %v2_10009d60 = inttoptr i32 %v1_10009d60 to i32*
  %v3_10009d60 = load i32, i32* %v2_10009d60, align 4
  store i32 %v1_10009d60, i32* %r31.global-to-local, align 4
  %v3_10009d64 = icmp eq i32 %v3_10009d60, -1
  br i1 %v3_10009d64, label %dec_label_pc_10009d6c, label %dec_label_pc_10009d58

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009d58, %dec_label_pc_10009d30
  %v0_10009d7c = load i32, i32* @r3, align 4
  ret i32 %v0_10009d7c

; uselistorder directives
  uselistorder i32 %v3_10009d60, { 1, 0 }
  uselistorder i32 -4, { 0, 12, 13, 14, 15, 16, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 121, 122, 0, 33, 80, 214, 13, 14, 15, 215, 81, 216, 11, 12, 82, 83, 84, 85, 86, 16, 87, 34, 35, 208, 69, 36, 37, 38, 39, 40, 41, 227, 225, 42, 217, 218, 70, 88, 219, 19, 20, 89, 224, 17, 18, 209, 210, 31, 123, 223, 220, 43, 124, 90, 125, 21, 22, 126, 127, 128, 32, 44, 129, 130, 68, 91, 131, 132, 23, 24, 25, 92, 133, 134, 93, 45, 46, 47, 221, 222, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 226, 60, 135, 1, 94, 95, 136, 61, 62, 96, 2, 97, 26, 98, 63, 99, 27, 137, 71, 138, 100, 72, 139, 140, 141, 101, 142, 143, 64, 144, 102, 103, 28, 104, 147, 148, 149, 105, 65, 150, 151, 152, 106, 3, 107, 4, 145, 146, 153, 73, 154, 155, 75, 156, 157, 74, 158, 159, 160, 76, 161, 162, 163, 66, 164, 165, 108, 29, 109, 30, 166, 167, 168, 169, 67, 170, 171, 110, 111, 112, 113, 172, 173, 174, 175, 114, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 5, 198, 6, 7, 199, 200, 201, 202, 8, 203, 9, 10, 204, 205, 206, 207, 115, 211, 212, 116, 213, 117, 118, 119, 120, 77, 78, 79 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_10009d58, { 1, 0 }
}

define i32 @function_10009d80() local_unnamed_addr {
dec_label_pc_10009d80:
  %v0_10009d98 = load i32, i32* @r3, align 4
  ret i32 %v0_10009d98

; uselistorder directives
  uselistorder i32* @r3, { 15, 6, 103, 104, 105, 8, 13, 106, 24, 113, 12, 11, 1, 18, 107, 109, 23, 110, 111, 112, 94, 22, 95, 5, 10, 96, 98, 97, 108, 25, 79, 26, 27, 28, 19, 7, 9, 21, 2, 0, 3, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 51, 52, 88, 59, 60, 61, 62, 63, 64, 65, 17, 89, 90, 4, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 82, 84, 85, 86, 87, 91, 92, 93, 99, 100, 101, 102, 14, 16, 20 }
}

define i32 @function_10009d9c() local_unnamed_addr {
entry:
  store i32 268475820, i32* @lr, align 4
  %v0_10009da8 = call i32 @function_100000b8()
  ret i32 %v0_10009da8

; uselistorder directives
  uselistorder i32 0, {}
  uselistorder i32* @lr, { 2, 688, 689, 690, 659, 691, 692, 693, 694, 695, 696, 697, 698, 684, 11, 699, 700, 660, 661, 709, 710, 714, 715, 716, 717, 718, 719, 720, 721, 711, 713, 701, 702, 703, 704, 705, 706, 707, 708, 662, 664, 663, 634, 635, 636, 637, 638, 639, 665, 666, 667, 668, 672, 669, 670, 671, 12, 13, 601, 602, 603, 471, 545, 14, 388, 15, 16, 546, 472, 17, 685, 18, 19, 20, 21, 22, 23, 24, 25, 712, 26, 27, 28, 29, 30, 31, 682, 32, 673, 604, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 605, 606, 73, 74, 75, 76, 77, 78, 3, 4, 5, 6, 7, 8, 9, 10, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 287, 288, 289, 290, 291, 292, 293, 294, 85, 86, 87, 88, 89, 90, 306, 607, 608, 609, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 477, 479, 480, 481, 478, 483, 484, 485, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 674, 675, 676, 677, 678, 679, 680, 681, 683, 686, 687, 0, 1 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
